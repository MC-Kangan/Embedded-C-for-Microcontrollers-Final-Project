

Microchip MPLAB XC8 Assembler V2.35 build 20211206165544 
                                                                                               Wed Mar 09 17:21:23 2022

Microchip MPLAB XC8 C Compiler v2.35 (Free license) build 20211206165544 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=3
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=2
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=3
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=1
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=1
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=1
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=3
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=3
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=3
    48                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=3
    49                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=3
    50                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=2
    51                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    52                           	psect	text38,global,reloc=2,class=CODE,delta=1
    53                           	psect	text39,global,reloc=2,class=CODE,delta=1
    54                           	psect	text40,global,reloc=2,class=CODE,delta=1
    55                           	psect	text41,global,reloc=2,class=CODE,delta=1
    56                           	psect	text42,global,reloc=2,class=CODE,delta=1
    57                           	psect	text43,global,reloc=2,class=CODE,delta=1
    58                           	psect	text44,global,reloc=2,class=CODE,delta=1
    59                           	psect	text45,global,reloc=2,class=CODE,delta=1
    60                           	psect	text46,global,reloc=2,class=CODE,delta=1
    61                           	psect	text47,global,reloc=2,class=CODE,delta=1
    62                           	psect	text48,global,reloc=2,class=CODE,delta=1
    63                           	psect	text49,global,reloc=2,class=CODE,delta=1
    64                           	psect	text50,global,reloc=2,class=CODE,delta=1
    65                           	psect	text51,global,reloc=2,class=CODE,delta=1
    66                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    67                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    68                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    69                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    70  0000                     
    71                           ; Version 2.35
    72                           ; Generated 05/05/2021 GMT
    73                           ; 
    74                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    75                           ; All rights reserved.
    76                           ; 
    77                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    78                           ; 
    79                           ; Redistribution and use in source and binary forms, with or without modification, are
    80                           ; permitted provided that the following conditions are met:
    81                           ; 
    82                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    83                           ;        conditions and the following disclaimer.
    84                           ; 
    85                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    86                           ;        of conditions and the following disclaimer in the documentation and/or other
    87                           ;        materials provided with the distribution. Publication is not required when
    88                           ;        this file is used in an embedded application.
    89                           ; 
    90                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    91                           ;        software without specific prior written permission.
    92                           ; 
    93                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    94                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    95                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    96                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    97                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    98                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    99                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   100                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   101                           ; 
   102                           ; 
   103                           ; Code-generator required, PIC18F67K40 Definitions
   104                           ; 
   105                           ; SFR Addresses
   106  0000                     
   107                           	psect	idataBANK0
   108  0040A2                     __pidataBANK0:
   109                           	callstack 0
   110                           
   111                           ;initializer for _SENSITIVITY
   112  0040A2  07                 	db	7
   113                           
   114                           	psect	smallconst
   115  000E00                     __psmallconst:
   116                           	callstack 0
   117  000E00  00                 	db	0
   118  000E01  0000               	dw	0
   119  000E03  4B00               	dw	19200
   120  000E05                     __end_of_toint:
   121                           	callstack 0
   122  0000                     _TRISFbits	set	3974
   123  0000                     _TX4REG	set	3812
   124  0000                     _RC4STAbits	set	3815
   125  0000                     _SP4BRGH	set	3814
   126  0000                     _TRISGbits	set	3975
   127  0000                     _TRISEbits	set	3973
   128  0000                     _SSP2CON2bits	set	3802
   129  0000                     _LATG	set	3967
   130  0000                     _LATE	set	3965
   131  0000                     _RX4PPS	set	3605
   132  0000                     _SSP2CLKPPS	set	3612
   133  0000                     _SSP2DATPPS	set	3613
   134  0000                     _ANSELDbits	set	3751
   135  0000                     _SSP2ADD	set	3798
   136  0000                     _SSP2CON1bits	set	3801
   137  0000                     _LATAbits	set	3961
   138  0000                     _LATFbits	set	3966
   139  0000                     _LATGbits	set	3967
   140  0000                     _TRISAbits	set	3969
   141  0000                     _TRISCbits	set	3971
   142  0000                     _TRISDbits	set	3972
   143  0000                     _LATCbits	set	3963
   144  0000                     _LATEbits	set	3965
   145  0000                     _RC4REG	set	3811
   146  0000                     _SP4BRGL	set	3813
   147  0000                     _TX4STAbits	set	3816
   148  0000                     _BAUD4CONbits	set	3817
   149  0000                     _SSP2CON2	set	3802
   150  0000                     _SSP2STAT	set	3800
   151  0000                     _ANSELFbits	set	3764
   152  0000                     _SSP2BUF	set	3797
   153  0000                     _PIE4bits	set	3629
   154  0000                     _PIR4bits	set	3639
   155  0000                     _RC0PPS	set	3682
   156  0000                     _RC7PPS	set	3689
   157  0000                     _RD5PPS	set	3695
   158  0000                     _RE2PPS	set	3700
   159  0000                     _RD6PPS	set	3696
   160  0000                     _PORTFbits	set	3982
   161  0000                     _T2PR	set	4028
   162  0000                     _T2CONbits	set	4029
   163  0000                     _PWM7DCH	set	4000
   164  0000                     _PWM6DCH	set	4003
   165  0000                     _T2CLKCONbits	set	4031
   166  0000                     _T2HLTbits	set	4030
   167  0000                     _PWM6CONbits	set	4004
   168  0000                     _PWM7CONbits	set	4001
   169  0000                     _ADREFbits	set	3928
   170  0000                     _ADPCH	set	3935
   171  0000                     _ADRESH	set	3940
   172  0000                     _ADCON0bits	set	3936
   173  000E05                     STR_1:
   174                           
   175                           ; BSR set to: 14
   176  000E05  25                 	db	37
   177  000E06  64                 	db	100	;'d'
   178  000E07  09                 	db	9
   179  000E08  25                 	db	37
   180  000E09  64                 	db	100	;'d'
   181  000E0A  09                 	db	9
   182  000E0B  25                 	db	37
   183  000E0C  64                 	db	100	;'d'
   184  000E0D  09                 	db	9
   185  000E0E  25                 	db	37
   186  000E0F  64                 	db	100	;'d'
   187  000E10  0D                 	db	13
   188  000E11  0A                 	db	10
   189  000E12  00                 	db	0
   190  000E13                     
   191                           ; BSR set to: 14
   192  000E13  4C                 	db	76	;'L'
   193  000E14  69                 	db	105	;'i'
   194  000E15  67                 	db	103	;'g'
   195  000E16  68                 	db	104	;'h'
   196  000E17  74                 	db	116	;'t'
   197  000E18  20                 	db	32
   198  000E19  62                 	db	98	;'b'
   199  000E1A  6C                 	db	108	;'l'
   200  000E1B  75                 	db	117	;'u'
   201  000E1C  65                 	db	101	;'e'
   202  000E1D  00                 	db	0
   203  000E1E                     
   204                           ; BSR set to: 14
   205  000E1E  4F                 	db	79	;'O'
   206  000E1F  72                 	db	114	;'r'
   207  000E20  61                 	db	97	;'a'
   208  000E21  6E                 	db	110	;'n'
   209  000E22  67                 	db	103	;'g'
   210  000E23  65                 	db	101	;'e'
   211  000E24  00                 	db	0
   212  000E25                     
   213                           ; BSR set to: 14
   214  000E25  59                 	db	89	;'Y'
   215  000E26  65                 	db	101	;'e'
   216  000E27  6C                 	db	108	;'l'
   217  000E28  6C                 	db	108	;'l'
   218  000E29  6F                 	db	111	;'o'
   219  000E2A  77                 	db	119	;'w'
   220  000E2B  00                 	db	0
   221  000E2C                     
   222                           ; BSR set to: 14
   223  000E2C  57                 	db	87	;'W'
   224  000E2D  68                 	db	104	;'h'
   225  000E2E  69                 	db	105	;'i'
   226  000E2F  74                 	db	116	;'t'
   227  000E30  65                 	db	101	;'e'
   228  000E31  00                 	db	0
   229  000E32                     
   230                           ; BSR set to: 14
   231  000E32  42                 	db	66	;'B'
   232  000E33  6C                 	db	108	;'l'
   233  000E34  61                 	db	97	;'a'
   234  000E35  63                 	db	99	;'c'
   235  000E36  6B                 	db	107	;'k'
   236  000E37  00                 	db	0
   237  000E38                     
   238                           ; BSR set to: 14
   239  000E38  47                 	db	71	;'G'
   240  000E39  72                 	db	114	;'r'
   241  000E3A  65                 	db	101	;'e'
   242  000E3B  65                 	db	101	;'e'
   243  000E3C  6E                 	db	110	;'n'
   244  000E3D  00                 	db	0
   245  000E3E                     
   246                           ; BSR set to: 14
   247  000E3E  45                 	db	69	;'E'
   248  000E3F  72                 	db	114	;'r'
   249  000E40  72                 	db	114	;'r'
   250  000E41  6F                 	db	111	;'o'
   251  000E42  72                 	db	114	;'r'
   252  000E43  00                 	db	0
   253  000E44                     
   254                           ; BSR set to: 14
   255  000E44  42                 	db	66	;'B'
   256  000E45  6C                 	db	108	;'l'
   257  000E46  75                 	db	117	;'u'
   258  000E47  65                 	db	101	;'e'
   259  000E48  00                 	db	0
   260  000E49                     
   261                           ; BSR set to: 14
   262  000E49  50                 	db	80	;'P'
   263  000E4A  69                 	db	105	;'i'
   264  000E4B  6E                 	db	110	;'n'
   265  000E4C  6B                 	db	107	;'k'
   266  000E4D  00                 	db	0
   267  000E4E                     
   268                           ; BSR set to: 14
   269  000E4E  52                 	db	82	;'R'
   270  000E4F  65                 	db	101	;'e'
   271  000E50  64                 	db	100	;'d'
   272  000E51  00                 	db	0
   273  000E52  00                 	db	0	; dummy byte at the end
   274  0000                     
   275                           ; #config settings
   276                           
   277                           	psect	cinit
   278  003E38                     __pcinit:
   279                           	callstack 0
   280  003E38                     start_initialization:
   281                           	callstack 0
   282  003E38                     __initialization:
   283                           	callstack 0
   284                           
   285                           ; Initialize objects allocated to BANK0 (1 bytes)
   286                           ; load TBLPTR registers with __pidataBANK0
   287  003E38  0EA2               	movlw	low __pidataBANK0
   288  003E3A  6EF6               	movwf	tblptrl,c
   289  003E3C  0E40               	movlw	high __pidataBANK0
   290  003E3E  6EF7               	movwf	tblptrh,c
   291  003E40  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   292  003E42  6EF8               	movwf	tblptru,c
   293  003E44  0009               	tblrd		*+	;fetch initializer
   294  003E46  CFF5 F0F6          	movff	tablat,__pdataBANK0
   295                           
   296                           ; Clear objects allocated to BANK1 (133 bytes)
   297  003E4A  EE01  F000         	lfsr	0,__pbssBANK1
   298  003E4E  0E85               	movlw	133
   299  003E50                     clear_0:
   300  003E50  6AEE               	clrf	postinc0,c
   301  003E52  06E8               	decf	wreg,f,c
   302  003E54  E1FD               	bnz	clear_0
   303                           
   304                           ; Clear objects allocated to BANK0 (16 bytes)
   305  003E56  EE00  F0E6         	lfsr	0,__pbssBANK0
   306  003E5A  0E10               	movlw	16
   307  003E5C                     clear_1:
   308  003E5C  6AEE               	clrf	postinc0,c
   309  003E5E  06E8               	decf	wreg,f,c
   310  003E60  E1FD               	bnz	clear_1
   311  003E62                     end_of_initialization:
   312                           	callstack 0
   313  003E62                     __end_of__initialization:
   314                           	callstack 0
   315  003E62  0E00               	movlw	low (__Lsmallconst shr (0+16))
   316  003E64  6EF8               	movwf	tblptru,c
   317  003E66  0E0E               	movlw	high __Lsmallconst
   318  003E68  6EF7               	movwf	tblptrh,c
   319  003E6A  0100               	movlb	0
   320  003E6C  EFA0  F01C         	goto	_main	;jump to C main() function
   321                           
   322                           	psect	bssBANK0
   323  0000E6                     __pbssBANK0:
   324                           	callstack 0
   325  0000E6                     roundf@F527:
   326                           	callstack 0
   327  0000E6                     	ds	4
   328  0000EA                     _nout:
   329                           	callstack 0
   330  0000EA                     	ds	2
   331  0000EC                     _width:
   332                           	callstack 0
   333  0000EC                     	ds	2
   334  0000EE                     _prec:
   335                           	callstack 0
   336  0000EE                     	ds	2
   337  0000F0                     _flags:
   338                           	callstack 0
   339  0000F0                     	ds	2
   340  0000F2                     _TxBufReadCnt:
   341                           	callstack 0
   342  0000F2                     	ds	1
   343  0000F3                     _TxBufWriteCnt:
   344                           	callstack 0
   345  0000F3                     	ds	1
   346  0000F4                     _RxBufReadCnt:
   347                           	callstack 0
   348  0000F4                     	ds	1
   349  0000F5                     _RxBufWriteCnt:
   350                           	callstack 0
   351  0000F5                     	ds	1
   352                           
   353                           	psect	dataBANK0
   354  0000F6                     __pdataBANK0:
   355                           	callstack 0
   356  0000F6                     _SENSITIVITY:
   357                           	callstack 0
   358  0000F6                     	ds	1
   359                           
   360                           	psect	bssBANK1
   361  000100                     __pbssBANK1:
   362                           	callstack 0
   363  000100                     _EUSART4TXbuf:
   364                           	callstack 0
   365  000100                     	ds	60
   366  00013C                     _EUSART4RXbuf:
   367                           	callstack 0
   368  00013C                     	ds	20
   369  000150                     _motorR:
   370                           	callstack 0
   371  000150                     	ds	10
   372  00015A                     _motorL:
   373                           	callstack 0
   374  00015A                     	ds	10
   375  000164                     _color:
   376                           	callstack 0
   377  000164                     	ds	1
   378  000165                     _dbuf:
   379                           	callstack 0
   380  000165                     	ds	32
   381                           
   382                           	psect	cstackBANK1
   383  000185                     __pcstackBANK1:
   384                           	callstack 0
   385  000185                     main@complete:
   386                           	callstack 0
   387  000185                     main@white:
   388                           	callstack 0
   389                           
   390                           ; 18 bytes @ 0x0
   391  000185                     	ds	1
   392  000186                     main@motorL:
   393                           	callstack 0
   394                           
   395                           ; 10 bytes @ 0x1
   396  000186                     	ds	10
   397  000190                     main@motorR:
   398                           	callstack 0
   399                           
   400                           ; 10 bytes @ 0xB
   401  000190                     	ds	10
   402  00019A                     main@rgb:
   403                           	callstack 0
   404                           
   405                           ; 8 bytes @ 0x15
   406  00019A                     	ds	8
   407                           
   408                           	psect	cstackBANK0
   409  000060                     __pcstackBANK0:
   410                           	callstack 0
   411  000060                     ??___fltol:
   412  000060                     ?_sprintf:
   413                           	callstack 0
   414  000060                     sprintf@s:
   415                           	callstack 0
   416                           
   417                           ; 2 bytes @ 0x0
   418  000060                     	ds	2
   419  000062                     sprintf@fmt:
   420                           	callstack 0
   421                           
   422                           ; 2 bytes @ 0x2
   423  000062                     	ds	2
   424  000064                     ___fltol@sign1:
   425                           	callstack 0
   426                           
   427                           ; 1 bytes @ 0x4
   428  000064                     	ds	1
   429  000065                     ___fltol@exp1:
   430                           	callstack 0
   431                           
   432                           ; 1 bytes @ 0x5
   433  000065                     	ds	1
   434  000066                     ?_lroundf:
   435                           	callstack 0
   436  000066                     lroundf@x:
   437                           	callstack 0
   438                           
   439                           ; 4 bytes @ 0x6
   440  000066                     	ds	4
   441  00006A                     compare@lower:
   442                           	callstack 0
   443                           
   444                           ; 2 bytes @ 0xA
   445  00006A                     	ds	2
   446  00006C                     compare@value2compare:
   447                           	callstack 0
   448  00006C                     sprintf@ap:
   449                           	callstack 0
   450                           
   451                           ; 2 bytes @ 0xC
   452  00006C                     	ds	2
   453  00006E                     compare@upper:
   454                           	callstack 0
   455  00006E                     sprintf@f:
   456                           	callstack 0
   457                           
   458                           ; 11 bytes @ 0xE
   459  00006E                     	ds	2
   460  000070                     detect_color@m:
   461                           	callstack 0
   462                           
   463                           ; 2 bytes @ 0x10
   464  000070                     	ds	2
   465  000072                     detect_color@w:
   466                           	callstack 0
   467                           
   468                           ; 2 bytes @ 0x12
   469  000072                     	ds	2
   470  000074                     ??_detect_color:
   471                           
   472                           ; 1 bytes @ 0x14
   473  000074                     	ds	4
   474  000078                     detect_color@RG:
   475                           	callstack 0
   476                           
   477                           ; 2 bytes @ 0x18
   478  000078                     	ds	1
   479  000079                     color_display@buf:
   480                           	callstack 0
   481  000079                     color_predict@buf:
   482                           	callstack 0
   483                           
   484                           ; 100 bytes @ 0x19
   485  000079                     	ds	1
   486  00007A                     detect_color@RB:
   487                           	callstack 0
   488                           
   489                           ; 2 bytes @ 0x1A
   490  00007A                     	ds	2
   491  00007C                     detect_color@GR:
   492                           	callstack 0
   493                           
   494                           ; 2 bytes @ 0x1C
   495  00007C                     	ds	2
   496  00007E                     detect_color@GB:
   497                           	callstack 0
   498                           
   499                           ; 2 bytes @ 0x1E
   500  00007E                     	ds	2
   501  000080                     detect_color@GG:
   502                           	callstack 0
   503                           
   504                           ; 2 bytes @ 0x20
   505  000080                     	ds	2
   506  000082                     detect_color@RR:
   507                           	callstack 0
   508                           
   509                           ; 2 bytes @ 0x22
   510  000082                     	ds	2
   511  000084                     detect_color@BB:
   512                           	callstack 0
   513                           
   514                           ; 2 bytes @ 0x24
   515  000084                     	ds	2
   516  000086                     detect_color@color:
   517                           	callstack 0
   518                           
   519                           ; 1 bytes @ 0x26
   520  000086                     	ds	1
   521  000087                     detect_color@BR:
   522                           	callstack 0
   523                           
   524                           ; 2 bytes @ 0x27
   525  000087                     	ds	2
   526  000089                     detect_color@BG:
   527                           	callstack 0
   528                           
   529                           ; 2 bytes @ 0x29
   530  000089                     	ds	2
   531  00008B                     _detect_color$2688:
   532                           	callstack 0
   533                           
   534                           ; 4 bytes @ 0x2B
   535  00008B                     	ds	82
   536  0000DD                     color_predict@color:
   537                           	callstack 0
   538                           
   539                           ; 1 bytes @ 0x7D
   540  0000DD                     	ds	1
   541  0000DE                     color_data_collection@i:
   542                           	callstack 0
   543                           
   544                           ; 2 bytes @ 0x7E
   545  0000DE                     	ds	2
   546  0000E0                     color_data_collection@j:
   547                           	callstack 0
   548                           
   549                           ; 2 bytes @ 0x80
   550  0000E0                     	ds	2
   551  0000E2                     color_data_collection@k:
   552                           	callstack 0
   553                           
   554                           ; 2 bytes @ 0x82
   555  0000E2                     	ds	2
   556  0000E4                     color_data_collection@x:
   557                           	callstack 0
   558                           
   559                           ; 2 bytes @ 0x84
   560  0000E4                     	ds	2
   561                           
   562                           	psect	cstackCOMRAM
   563  000001                     __pcstackCOMRAM:
   564                           	callstack 0
   565  000001                     ??_LED_R:
   566  000001                     ??_LED_C:
   567  000001                     ??_LED_B:
   568  000001                     ??_LED_G:
   569  000001                     ??_I2C_2_Master_Idle:
   570  000001                     ?_strlen:
   571                           	callstack 0
   572  000001                     ?___fladd:
   573                           	callstack 0
   574  000001                     ?___flneg:
   575                           	callstack 0
   576  000001                     ?___xxtofl:
   577                           	callstack 0
   578  000001                     ?___aodiv:
   579                           	callstack 0
   580  000001                     ?___aomod:
   581                           	callstack 0
   582  000001                     sendCharSerial4@charToSend:
   583                           	callstack 0
   584  000001                     initDCmotorsPWM@PWMperiod:
   585                           	callstack 0
   586  000001                     initDCmotors_parameter@motorL:
   587                           	callstack 0
   588  000001                     fputc@c:
   589                           	callstack 0
   590  000001                     strlen@s:
   591                           	callstack 0
   592  000001                     ___flge@ff1:
   593                           	callstack 0
   594  000001                     ___flneg@f1:
   595                           	callstack 0
   596  000001                     ___fladd@b:
   597                           	callstack 0
   598  000001                     ___xxtofl@val:
   599                           	callstack 0
   600  000001                     ___aodiv@dividend:
   601                           	callstack 0
   602  000001                     ___aomod@dividend:
   603                           	callstack 0
   604                           
   605                           ; 8 bytes @ 0x0
   606  000001                     	ds	1
   607  000002                     ??_I2C_2_Master_Read:
   608  000002                     I2C_2_Master_Write@data_byte:
   609                           	callstack 0
   610  000002                     sendStringSerial4@string:
   611                           	callstack 0
   612                           
   613                           ; 2 bytes @ 0x1
   614  000002                     	ds	1
   615  000003                     color_writetoaddr@value:
   616                           	callstack 0
   617  000003                     I2C_2_Master_Read@ack:
   618                           	callstack 0
   619  000003                     initDCmotors_parameter@motorR:
   620                           	callstack 0
   621  000003                     fputc@fp:
   622                           	callstack 0
   623  000003                     strlen@a:
   624                           	callstack 0
   625                           
   626                           ; 2 bytes @ 0x2
   627  000003                     	ds	1
   628  000004                     color_writetoaddr@address:
   629                           	callstack 0
   630  000004                     I2C_2_Master_Read@tmp:
   631                           	callstack 0
   632                           
   633                           ; 1 bytes @ 0x3
   634  000004                     	ds	1
   635  000005                     ??_fputc:
   636  000005                     ??_color_click_init:
   637  000005                     ??___xxtofl:
   638  000005                     ?_color_read_Red:
   639                           	callstack 0
   640  000005                     ?_color_read_Blue:
   641                           	callstack 0
   642  000005                     ?_color_read_Green:
   643                           	callstack 0
   644  000005                     ?_color_read_Clear:
   645                           	callstack 0
   646  000005                     ___flge@ff2:
   647                           	callstack 0
   648  000005                     ___fladd@a:
   649                           	callstack 0
   650                           
   651                           ; 4 bytes @ 0x4
   652  000005                     	ds	2
   653  000007                     ??_color_read_Red:
   654  000007                     ??_color_read_Blue:
   655  000007                     ??_color_read_Green:
   656  000007                     ??_color_read_Clear:
   657                           
   658                           ; 1 bytes @ 0x6
   659  000007                     	ds	2
   660  000009                     ??___fladd:
   661  000009                     ??___flge:
   662  000009                     ___xxtofl@sign:
   663                           	callstack 0
   664  000009                     ___aodiv@divisor:
   665                           	callstack 0
   666  000009                     ___aomod@divisor:
   667                           	callstack 0
   668                           
   669                           ; 8 bytes @ 0x8
   670  000009                     	ds	1
   671  00000A                     ___xxtofl@exp:
   672                           	callstack 0
   673  00000A                     color_read_Red@tmp:
   674                           	callstack 0
   675  00000A                     color_read_Blue@tmp:
   676                           	callstack 0
   677  00000A                     color_read_Green@tmp:
   678                           	callstack 0
   679  00000A                     color_read_Clear@tmp:
   680                           	callstack 0
   681  00000A                     fputs@s:
   682                           	callstack 0
   683                           
   684                           ; 2 bytes @ 0x9
   685  00000A                     	ds	1
   686  00000B                     ___xxtofl@arg:
   687                           	callstack 0
   688                           
   689                           ; 4 bytes @ 0xA
   690  00000B                     	ds	1
   691  00000C                     read_color@m:
   692                           	callstack 0
   693  00000C                     fputs@fp:
   694                           	callstack 0
   695                           
   696                           ; 2 bytes @ 0xB
   697  00000C                     	ds	1
   698  00000D                     ___fladd@signs:
   699                           	callstack 0
   700                           
   701                           ; 1 bytes @ 0xC
   702  00000D                     	ds	1
   703  00000E                     ___fladd@aexp:
   704                           	callstack 0
   705  00000E                     fputs@c:
   706                           	callstack 0
   707                           
   708                           ; 1 bytes @ 0xD
   709  00000E                     	ds	1
   710  00000F                     ?___fldiv:
   711                           	callstack 0
   712  00000F                     ___fladd@bexp:
   713                           	callstack 0
   714  00000F                     fputs@i:
   715                           	callstack 0
   716  00000F                     ___fldiv@b:
   717                           	callstack 0
   718                           
   719                           ; 4 bytes @ 0xE
   720  00000F                     	ds	1
   721  000010                     ___fladd@grs:
   722                           	callstack 0
   723                           
   724                           ; 1 bytes @ 0xF
   725  000010                     	ds	1
   726  000011                     ?_pad:
   727                           	callstack 0
   728  000011                     ?___flsub:
   729                           	callstack 0
   730  000011                     ___aodiv@counter:
   731                           	callstack 0
   732  000011                     ___aomod@counter:
   733                           	callstack 0
   734  000011                     pad@fp:
   735                           	callstack 0
   736  000011                     ___flsub@b:
   737                           	callstack 0
   738                           
   739                           ; 4 bytes @ 0x10
   740  000011                     	ds	1
   741  000012                     ___aodiv@sign:
   742                           	callstack 0
   743  000012                     ___aomod@sign:
   744                           	callstack 0
   745                           
   746                           ; 1 bytes @ 0x11
   747  000012                     	ds	1
   748  000013                     ?_abs:
   749                           	callstack 0
   750  000013                     pad@buf:
   751                           	callstack 0
   752  000013                     abs@a:
   753                           	callstack 0
   754  000013                     ___fldiv@a:
   755                           	callstack 0
   756  000013                     ___aodiv@quotient:
   757                           	callstack 0
   758                           
   759                           ; 8 bytes @ 0x12
   760  000013                     	ds	2
   761  000015                     ??_abs:
   762  000015                     pad@p:
   763                           	callstack 0
   764  000015                     ___flsub@a:
   765                           	callstack 0
   766                           
   767                           ; 4 bytes @ 0x14
   768  000015                     	ds	2
   769  000017                     ??___fldiv:
   770  000017                     ??_pad:
   771                           
   772                           ; 1 bytes @ 0x16
   773  000017                     	ds	1
   774  000018                     pad@i:
   775                           	callstack 0
   776                           
   777                           ; 2 bytes @ 0x17
   778  000018                     	ds	1
   779  000019                     
   780                           ; 1 bytes @ 0x18
   781  000019                     	ds	1
   782  00001A                     pad@w:
   783                           	callstack 0
   784                           
   785                           ; 2 bytes @ 0x19
   786  00001A                     	ds	1
   787  00001B                     ___fldiv@rem:
   788                           	callstack 0
   789                           
   790                           ; 4 bytes @ 0x1A
   791  00001B                     	ds	1
   792  00001C                     ?_dtoa:
   793                           	callstack 0
   794  00001C                     dtoa@fp:
   795                           	callstack 0
   796                           
   797                           ; 2 bytes @ 0x1B
   798  00001C                     	ds	2
   799  00001E                     dtoa@d:
   800                           	callstack 0
   801                           
   802                           ; 8 bytes @ 0x1D
   803  00001E                     	ds	1
   804  00001F                     ___fldiv@sign:
   805                           	callstack 0
   806                           
   807                           ; 1 bytes @ 0x1E
   808  00001F                     	ds	1
   809  000020                     ___fldiv@new_exp:
   810                           	callstack 0
   811                           
   812                           ; 2 bytes @ 0x1F
   813  000020                     	ds	2
   814  000022                     ___fldiv@grs:
   815                           	callstack 0
   816                           
   817                           ; 4 bytes @ 0x21
   818  000022                     	ds	4
   819  000026                     ??_dtoa:
   820  000026                     ___fldiv@bexp:
   821                           	callstack 0
   822                           
   823                           ; 1 bytes @ 0x25
   824  000026                     	ds	1
   825  000027                     ___fldiv@aexp:
   826                           	callstack 0
   827                           
   828                           ; 1 bytes @ 0x26
   829  000027                     	ds	1
   830  000028                     ?___flmul:
   831                           	callstack 0
   832  000028                     ___flmul@b:
   833                           	callstack 0
   834                           
   835                           ; 4 bytes @ 0x27
   836  000028                     	ds	4
   837  00002C                     ___flmul@a:
   838                           	callstack 0
   839                           
   840                           ; 4 bytes @ 0x2B
   841  00002C                     	ds	2
   842  00002E                     _dtoa$2333:
   843                           	callstack 0
   844                           
   845                           ; 2 bytes @ 0x2D
   846  00002E                     	ds	2
   847  000030                     ??___flmul:
   848  000030                     dtoa@p:
   849                           	callstack 0
   850                           
   851                           ; 2 bytes @ 0x2F
   852  000030                     	ds	2
   853  000032                     dtoa@w:
   854                           	callstack 0
   855                           
   856                           ; 2 bytes @ 0x31
   857  000032                     	ds	2
   858  000034                     ___flmul@sign:
   859                           	callstack 0
   860  000034                     dtoa@s:
   861                           	callstack 0
   862                           
   863                           ; 2 bytes @ 0x33
   864  000034                     	ds	1
   865  000035                     ___flmul@grs:
   866                           	callstack 0
   867                           
   868                           ; 4 bytes @ 0x34
   869  000035                     	ds	1
   870  000036                     dtoa@n:
   871                           	callstack 0
   872                           
   873                           ; 8 bytes @ 0x35
   874  000036                     	ds	3
   875  000039                     ___flmul@aexp:
   876                           	callstack 0
   877                           
   878                           ; 1 bytes @ 0x38
   879  000039                     	ds	1
   880  00003A                     ___flmul@bexp:
   881                           	callstack 0
   882                           
   883                           ; 1 bytes @ 0x39
   884  00003A                     	ds	1
   885  00003B                     ___flmul@prod:
   886                           	callstack 0
   887                           
   888                           ; 4 bytes @ 0x3A
   889  00003B                     	ds	3
   890  00003E                     dtoa@i:
   891                           	callstack 0
   892                           
   893                           ; 2 bytes @ 0x3D
   894  00003E                     	ds	1
   895  00003F                     ___flmul@temp:
   896                           	callstack 0
   897                           
   898                           ; 2 bytes @ 0x3E
   899  00003F                     	ds	1
   900  000040                     ?_vfpfcnvrt:
   901                           	callstack 0
   902  000040                     vfpfcnvrt@fp:
   903                           	callstack 0
   904                           
   905                           ; 2 bytes @ 0x3F
   906  000040                     	ds	1
   907  000041                     ?_roundf:
   908                           	callstack 0
   909  000041                     roundf@x:
   910                           	callstack 0
   911                           
   912                           ; 4 bytes @ 0x40
   913  000041                     	ds	1
   914  000042                     vfpfcnvrt@fmt:
   915                           	callstack 0
   916                           
   917                           ; 2 bytes @ 0x41
   918  000042                     	ds	2
   919  000044                     vfpfcnvrt@ap:
   920                           	callstack 0
   921                           
   922                           ; 2 bytes @ 0x43
   923  000044                     	ds	1
   924  000045                     ??_roundf:
   925                           
   926                           ; 1 bytes @ 0x44
   927  000045                     	ds	1
   928  000046                     ??_vfpfcnvrt:
   929                           
   930                           ; 1 bytes @ 0x45
   931  000046                     	ds	2
   932  000048                     vfpfcnvrt@ll:
   933                           	callstack 0
   934                           
   935                           ; 8 bytes @ 0x47
   936  000048                     	ds	1
   937  000049                     _roundf$2690:
   938                           	callstack 0
   939                           
   940                           ; 4 bytes @ 0x48
   941  000049                     	ds	4
   942  00004D                     roundf@e:
   943                           	callstack 0
   944                           
   945                           ; 2 bytes @ 0x4C
   946  00004D                     	ds	2
   947  00004F                     _roundf$2689:
   948                           	callstack 0
   949                           
   950                           ; 4 bytes @ 0x4E
   951  00004F                     	ds	1
   952  000050                     ?_vfprintf:
   953                           	callstack 0
   954  000050                     vfprintf@fp:
   955                           	callstack 0
   956                           
   957                           ; 2 bytes @ 0x4F
   958  000050                     	ds	2
   959  000052                     vfprintf@fmt:
   960                           	callstack 0
   961                           
   962                           ; 2 bytes @ 0x51
   963  000052                     	ds	1
   964  000053                     roundf@u:
   965                           	callstack 0
   966                           
   967                           ; 4 bytes @ 0x52
   968  000053                     	ds	1
   969  000054                     vfprintf@ap:
   970                           	callstack 0
   971                           
   972                           ; 2 bytes @ 0x53
   973  000054                     	ds	2
   974  000056                     vfprintf@cfmt:
   975                           	callstack 0
   976                           
   977                           ; 2 bytes @ 0x55
   978  000056                     	ds	1
   979  000057                     roundf@y:
   980                           	callstack 0
   981                           
   982                           ; 4 bytes @ 0x56
   983  000057                     	ds	1
   984  000058                     color_display@m:
   985                           	callstack 0
   986                           
   987                           ; 2 bytes @ 0x57
   988  000058                     	ds	2
   989  00005A                     color_data_collection@m:
   990                           	callstack 0
   991                           
   992                           ; 2 bytes @ 0x59
   993  00005A                     	ds	1
   994  00005B                     ?___fltol:
   995                           	callstack 0
   996  00005B                     ___fltol@f1:
   997                           	callstack 0
   998                           
   999                           ; 4 bytes @ 0x5A
  1000  00005B                     	ds	1
  1001  00005C                     ??_color_data_collection:
  1002                           
  1003                           ; 1 bytes @ 0x5B
  1004  00005C                     	ds	3
  1005  00005F                     compare@result:
  1006                           	callstack 0
  1007                           
  1008                           ; 1 bytes @ 0x5E
  1009  00005F                     	ds	1
  1010  000060                     
  1011                           ; 1 bytes @ 0x5F
  1012 ;;
  1013 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1014 ;;
  1015 ;; *************** function _main *****************
  1016 ;; Defined at:
  1017 ;;		line 30 in file "main.c"
  1018 ;; Parameters:    Size  Location     Type
  1019 ;;		None
  1020 ;; Auto vars:     Size  Location     Type
  1021 ;;  white          18    0[BANK1 ] struct white_card
  1022 ;;  motorR         10   11[BANK1 ] struct DC_motor
  1023 ;;  motorL         10    1[BANK1 ] struct DC_motor
  1024 ;;  rgb             8   21[BANK1 ] struct color_rgb
  1025 ;;  complete        1    0[BANK1 ] unsigned char 
  1026 ;; Return value:  Size  Location     Type
  1027 ;;                  1    wreg      void 
  1028 ;; Registers used:
  1029 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1030 ;; Tracked objects:
  1031 ;;		On entry : 0/0
  1032 ;;		On exit  : 0/0
  1033 ;;		Unchanged: 0/0
  1034 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1035 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1036 ;;      Locals:         0       0      29       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1037 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1038 ;;      Totals:         0       0      29       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1039 ;;Total ram usage:       29 bytes
  1040 ;; Hardware stack levels required when called: 10
  1041 ;; This function calls:
  1042 ;;		_I2C_2_Master_Init
  1043 ;;		_calibration_init
  1044 ;;		_color_click_init
  1045 ;;		_color_data_collection
  1046 ;;		_color_predict
  1047 ;;		_detect_color
  1048 ;;		_initDCmotorsPWM
  1049 ;;		_initDCmotors_parameter
  1050 ;;		_initUSART4
  1051 ;;		_read_color
  1052 ;; This function is called by:
  1053 ;;		Startup code after reset
  1054 ;; This function uses a non-reentrant model
  1055 ;;
  1056                           
  1057                           	psect	text0
  1058  003940                     __ptext0:
  1059                           	callstack 0
  1060  003940                     _main:
  1061                           	callstack 21
  1062  003940                     
  1063                           ;main.c: 31:     I2C_2_Master_Init();
  1064  003940  ECA1  F01F         	call	_I2C_2_Master_Init	;wreg free
  1065  003944                     
  1066                           ;main.c: 32:     color_click_init();
  1067  003944  EC6F  F01F         	call	_color_click_init	;wreg free
  1068  003948                     
  1069                           ;main.c: 33:     initDCmotorsPWM(199);
  1070  003948  0E00               	movlw	0
  1071  00394A  6E02               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
  1072  00394C  0EC7               	movlw	199
  1073  00394E  6E01               	movwf	initDCmotorsPWM@PWMperiod^0,c
  1074  003950  EC80  F01E         	call	_initDCmotorsPWM	;wreg free
  1075  003954                     
  1076                           ;main.c: 35:     initUSART4();
  1077  003954  EC1A  F020         	call	_initUSART4	;wreg free
  1078  003958                     
  1079                           ;main.c: 37:     struct color_rgb rgb;;main.c: 38:     struct white_card white;;main.c: 
      +                          42:     struct DC_motor motorL, motorR;;main.c: 44:     initDCmotors_parameter(&motorL, 
      +                          &motorR);
  1080  003958  0E86               	movlw	low main@motorL
  1081  00395A  6E01               	movwf	initDCmotors_parameter@motorL^0,c
  1082  00395C  0E01               	movlw	high main@motorL
  1083  00395E  6E02               	movwf	(initDCmotors_parameter@motorL+1)^0,c
  1084  003960  0E90               	movlw	low main@motorR
  1085  003962  6E03               	movwf	initDCmotors_parameter@motorR^0,c
  1086  003964  0E01               	movlw	high main@motorR
  1087  003966  6E04               	movwf	(initDCmotors_parameter@motorR+1)^0,c
  1088  003968  EC6F  F01B         	call	_initDCmotors_parameter	;wreg free
  1089  00396C                     
  1090                           ;main.c: 45:     calibration_init();
  1091  00396C  EC3B  F020         	call	_calibration_init	;wreg free
  1092  003970                     
  1093                           ;main.c: 47:     TRISFbits.TRISF6 = 0;
  1094  003970  9C86               	bcf	134,6,c	;volatile
  1095  003972                     
  1096                           ;main.c: 48:     LATFbits.LATF6 = 0;
  1097  003972  9C7E               	bcf	126,6,c	;volatile
  1098  003974                     
  1099                           ;main.c: 50:     TRISGbits.TRISG1 = 0;
  1100  003974  9287               	bcf	135,1,c	;volatile
  1101  003976                     
  1102                           ;main.c: 51:     TRISFbits.TRISF7 = 0;
  1103  003976  9E86               	bcf	134,7,c	;volatile
  1104  003978                     
  1105                           ;main.c: 52:     TRISAbits.TRISA4 = 0;
  1106  003978  9881               	bcf	129,4,c	;volatile
  1107  00397A                     
  1108                           ;main.c: 53:     LATGbits.LATG1 = 1;
  1109  00397A  827F               	bsf	127,1,c	;volatile
  1110  00397C                     
  1111                           ;main.c: 54:     LATFbits.LATF7 = 1;
  1112  00397C  8E7E               	bsf	126,7,c	;volatile
  1113  00397E                     
  1114                           ;main.c: 55:     LATAbits.LATA4 = 1;
  1115  00397E  8879               	bsf	121,4,c	;volatile
  1116  003980                     
  1117                           ;main.c: 62:     unsigned char complete = 0;
  1118  003980  0E00               	movlw	0
  1119  003982  0101               	movlb	1	; () banked
  1120  003984  6F85               	movwf	main@complete& (0+255),b
  1121  003986  EFCE  F01C         	goto	l4379
  1122  00398A                     l4375:
  1123                           
  1124                           ; BSR set to: 1
  1125                           ;main.c: 76:                 color_data_collection(&rgb);
  1126  00398A  0E9A               	movlw	low main@rgb
  1127  00398C  6E5A               	movwf	color_data_collection@m^0,c
  1128  00398E  0E01               	movlw	high main@rgb
  1129  003990  6E5B               	movwf	(color_data_collection@m+1)^0,c
  1130  003992  ECB9  F017         	call	_color_data_collection	;wreg free
  1131  003996                     
  1132                           ;main.c: 77:                 complete = 1;
  1133  003996  0E01               	movlw	1
  1134  003998  0101               	movlb	1	; () banked
  1135  00399A  6F85               	movwf	main@complete& (0+255),b
  1136  00399C                     l4379:
  1137                           
  1138                           ; BSR set to: 1
  1139                           ;main.c: 75:             while (complete == 0){
  1140  00399C  5185               	movf	main@complete& (0+255),w,b
  1141  00399E  B4D8               	btfsc	status,2,c
  1142  0039A0  EFD4  F01C         	goto	u4241
  1143  0039A4  EFD6  F01C         	goto	u4240
  1144  0039A8                     u4241:
  1145  0039A8  EFC5  F01C         	goto	l4375
  1146  0039AC                     u4240:
  1147  0039AC  EFCE  F01C         	goto	l4379
  1148  0039B0  EF00  F000         	goto	start
  1149  0039B4                     __end_of_main:
  1150                           	callstack 0
  1151                           
  1152 ;; *************** function _initUSART4 *****************
  1153 ;; Defined at:
  1154 ;;		line 4 in file "serial.c"
  1155 ;; Parameters:    Size  Location     Type
  1156 ;;		None
  1157 ;; Auto vars:     Size  Location     Type
  1158 ;;		None
  1159 ;; Return value:  Size  Location     Type
  1160 ;;                  1    wreg      void 
  1161 ;; Registers used:
  1162 ;;		wreg, status,2
  1163 ;; Tracked objects:
  1164 ;;		On entry : 0/0
  1165 ;;		On exit  : 0/0
  1166 ;;		Unchanged: 0/0
  1167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1168 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1169 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1170 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1171 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1172 ;;Total ram usage:        0 bytes
  1173 ;; Hardware stack levels used: 1
  1174 ;; This function calls:
  1175 ;;		Nothing
  1176 ;; This function is called by:
  1177 ;;		_main
  1178 ;; This function uses a non-reentrant model
  1179 ;;
  1180                           
  1181                           	psect	text1
  1182  004034                     __ptext1:
  1183                           	callstack 0
  1184  004034                     _initUSART4:
  1185                           	callstack 30
  1186  004034                     
  1187                           ;serial.c: 8:     RC0PPS = 0x12;
  1188  004034  0E12               	movlw	18
  1189  004036  010E               	movlb	14	; () banked
  1190  004038  6F62               	movwf	98,b	;volatile
  1191                           
  1192                           ;serial.c: 9:     RX4PPS = 0x11;
  1193  00403A  0E11               	movlw	17
  1194  00403C  6F15               	movwf	21,b	;volatile
  1195  00403E                     
  1196                           ; BSR set to: 14
  1197                           ;serial.c: 11:     BAUD4CONbits.BRG16 = 0;
  1198  00403E  97E9               	bcf	233,3,b	;volatile
  1199  004040                     
  1200                           ; BSR set to: 14
  1201                           ;serial.c: 12:     TX4STAbits.BRGH = 0;
  1202  004040  95E8               	bcf	232,2,b	;volatile
  1203                           
  1204                           ;serial.c: 13:     SP4BRGL = 51;
  1205  004042  0E33               	movlw	51
  1206  004044  6FE5               	movwf	229,b	;volatile
  1207                           
  1208                           ;serial.c: 15:     SP4BRGH = 0;
  1209  004046  0E00               	movlw	0
  1210  004048  6FE6               	movwf	230,b	;volatile
  1211  00404A                     
  1212                           ; BSR set to: 14
  1213                           ;serial.c: 17:     RC4STAbits.CREN = 1;
  1214  00404A  89E7               	bsf	231,4,b	;volatile
  1215  00404C                     
  1216                           ; BSR set to: 14
  1217                           ;serial.c: 18:     TX4STAbits.TXEN = 1;
  1218  00404C  8BE8               	bsf	232,5,b	;volatile
  1219  00404E                     
  1220                           ; BSR set to: 14
  1221                           ;serial.c: 19:     RC4STAbits.SPEN = 1;
  1222  00404E  8FE7               	bsf	231,7,b	;volatile
  1223  004050                     
  1224                           ; BSR set to: 14
  1225  004050  0012               	return		;funcret
  1226  004052                     __end_of_initUSART4:
  1227                           	callstack 0
  1228                           
  1229 ;; *************** function _initDCmotors_parameter *****************
  1230 ;; Defined at:
  1231 ;;		line 41 in file "dc_motor.c"
  1232 ;; Parameters:    Size  Location     Type
  1233 ;;  motorL          2    0[COMRAM] PTR struct DC_motor
  1234 ;;		 -> main@motorL(10), 
  1235 ;;  motorR          2    2[COMRAM] PTR struct DC_motor
  1236 ;;		 -> main@motorR(10), 
  1237 ;; Auto vars:     Size  Location     Type
  1238 ;;		None
  1239 ;; Return value:  Size  Location     Type
  1240 ;;                  1    wreg      void 
  1241 ;; Registers used:
  1242 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1243 ;; Tracked objects:
  1244 ;;		On entry : 0/0
  1245 ;;		On exit  : 0/0
  1246 ;;		Unchanged: 0/0
  1247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1248 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1249 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1250 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1251 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1252 ;;Total ram usage:        4 bytes
  1253 ;; Hardware stack levels used: 1
  1254 ;; This function calls:
  1255 ;;		Nothing
  1256 ;; This function is called by:
  1257 ;;		_main
  1258 ;; This function uses a non-reentrant model
  1259 ;;
  1260                           
  1261                           	psect	text2
  1262  0036DE                     __ptext2:
  1263                           	callstack 0
  1264  0036DE                     _initDCmotors_parameter:
  1265                           	callstack 30
  1266  0036DE                     
  1267                           ;dc_motor.c: 43:     motorL->power = 0;
  1268  0036DE  C001  FFD9         	movff	initDCmotors_parameter@motorL,fsr2l
  1269  0036E2  C002  FFDA         	movff	initDCmotors_parameter@motorL+1,fsr2h
  1270  0036E6  0E00               	movlw	0
  1271  0036E8  6EDF               	movwf	indf2,c
  1272  0036EA                     
  1273                           ;dc_motor.c: 44:     motorL->direction = 1;
  1274  0036EA  EE20 F001          	lfsr	2,1
  1275  0036EE  5001               	movf	initDCmotors_parameter@motorL^0,w,c
  1276  0036F0  26D9               	addwf	fsr2l,f,c
  1277  0036F2  5002               	movf	(initDCmotors_parameter@motorL+1)^0,w,c
  1278  0036F4  22DA               	addwfc	fsr2h,f,c
  1279  0036F6  0E01               	movlw	1
  1280  0036F8  6EDF               	movwf	indf2,c
  1281  0036FA                     
  1282                           ;dc_motor.c: 45:     motorL->dutyHighByte = (unsigned char *)(&PWM6DCH);
  1283  0036FA  EE20 F002          	lfsr	2,2
  1284  0036FE  5001               	movf	initDCmotors_parameter@motorL^0,w,c
  1285  003700  26D9               	addwf	fsr2l,f,c
  1286  003702  5002               	movf	(initDCmotors_parameter@motorL+1)^0,w,c
  1287  003704  22DA               	addwfc	fsr2h,f,c
  1288  003706  0EA3               	movlw	163
  1289  003708  6EDE               	movwf	postinc2,c
  1290  00370A  0E0F               	movlw	15
  1291  00370C  6EDD               	movwf	postdec2,c
  1292  00370E                     
  1293                           ;dc_motor.c: 46:     motorL->dir_LAT = (unsigned char *)(&LATE);
  1294  00370E  EE20 F004          	lfsr	2,4
  1295  003712  5001               	movf	initDCmotors_parameter@motorL^0,w,c
  1296  003714  26D9               	addwf	fsr2l,f,c
  1297  003716  5002               	movf	(initDCmotors_parameter@motorL+1)^0,w,c
  1298  003718  22DA               	addwfc	fsr2h,f,c
  1299  00371A  0E7D               	movlw	125
  1300  00371C  6EDE               	movwf	postinc2,c
  1301  00371E  0E0F               	movlw	15
  1302  003720  6EDD               	movwf	postdec2,c
  1303  003722                     
  1304                           ;dc_motor.c: 47:     motorL->dir_pin = 4;
  1305  003722  EE20 F006          	lfsr	2,6
  1306  003726  5001               	movf	initDCmotors_parameter@motorL^0,w,c
  1307  003728  26D9               	addwf	fsr2l,f,c
  1308  00372A  5002               	movf	(initDCmotors_parameter@motorL+1)^0,w,c
  1309  00372C  22DA               	addwfc	fsr2h,f,c
  1310  00372E  0E04               	movlw	4
  1311  003730  6EDF               	movwf	indf2,c
  1312  003732                     
  1313                           ;dc_motor.c: 48:     motorL->PWMperiod = 199;
  1314  003732  EE20 F007          	lfsr	2,7
  1315  003736  5001               	movf	initDCmotors_parameter@motorL^0,w,c
  1316  003738  26D9               	addwf	fsr2l,f,c
  1317  00373A  5002               	movf	(initDCmotors_parameter@motorL+1)^0,w,c
  1318  00373C  22DA               	addwfc	fsr2h,f,c
  1319  00373E  0EC7               	movlw	199
  1320  003740  6EDE               	movwf	postinc2,c
  1321  003742  0E00               	movlw	0
  1322  003744  6EDD               	movwf	postdec2,c
  1323  003746                     
  1324                           ;dc_motor.c: 51:     motorR->power = 0;
  1325  003746  C003  FFD9         	movff	initDCmotors_parameter@motorR,fsr2l
  1326  00374A  C004  FFDA         	movff	initDCmotors_parameter@motorR+1,fsr2h
  1327  00374E  0E00               	movlw	0
  1328  003750  6EDF               	movwf	indf2,c
  1329                           
  1330                           ;dc_motor.c: 52:     motorR->direction = 1;
  1331  003752  EE20 F001          	lfsr	2,1
  1332  003756  5003               	movf	initDCmotors_parameter@motorR^0,w,c
  1333  003758  26D9               	addwf	fsr2l,f,c
  1334  00375A  5004               	movf	(initDCmotors_parameter@motorR+1)^0,w,c
  1335  00375C  22DA               	addwfc	fsr2h,f,c
  1336  00375E  0E01               	movlw	1
  1337  003760  6EDF               	movwf	indf2,c
  1338                           
  1339                           ;dc_motor.c: 53:     motorR->dutyHighByte = (unsigned char *)(&PWM7DCH);
  1340  003762  EE20 F002          	lfsr	2,2
  1341  003766  5003               	movf	initDCmotors_parameter@motorR^0,w,c
  1342  003768  26D9               	addwf	fsr2l,f,c
  1343  00376A  5004               	movf	(initDCmotors_parameter@motorR+1)^0,w,c
  1344  00376C  22DA               	addwfc	fsr2h,f,c
  1345  00376E  0EA0               	movlw	160
  1346  003770  6EDE               	movwf	postinc2,c
  1347  003772  0E0F               	movlw	15
  1348  003774  6EDD               	movwf	postdec2,c
  1349                           
  1350                           ;dc_motor.c: 54:     motorR->dir_LAT = (unsigned char *)(&LATG);
  1351  003776  EE20 F004          	lfsr	2,4
  1352  00377A  5003               	movf	initDCmotors_parameter@motorR^0,w,c
  1353  00377C  26D9               	addwf	fsr2l,f,c
  1354  00377E  5004               	movf	(initDCmotors_parameter@motorR+1)^0,w,c
  1355  003780  22DA               	addwfc	fsr2h,f,c
  1356  003782  0E7F               	movlw	127
  1357  003784  6EDE               	movwf	postinc2,c
  1358  003786  0E0F               	movlw	15
  1359  003788  6EDD               	movwf	postdec2,c
  1360                           
  1361                           ;dc_motor.c: 55:     motorR->dir_pin = 6;
  1362  00378A  EE20 F006          	lfsr	2,6
  1363  00378E  5003               	movf	initDCmotors_parameter@motorR^0,w,c
  1364  003790  26D9               	addwf	fsr2l,f,c
  1365  003792  5004               	movf	(initDCmotors_parameter@motorR+1)^0,w,c
  1366  003794  22DA               	addwfc	fsr2h,f,c
  1367  003796  0E06               	movlw	6
  1368  003798  6EDF               	movwf	indf2,c
  1369                           
  1370                           ;dc_motor.c: 56:     motorR->PWMperiod = 199;
  1371  00379A  EE20 F007          	lfsr	2,7
  1372  00379E  5003               	movf	initDCmotors_parameter@motorR^0,w,c
  1373  0037A0  26D9               	addwf	fsr2l,f,c
  1374  0037A2  5004               	movf	(initDCmotors_parameter@motorR+1)^0,w,c
  1375  0037A4  22DA               	addwfc	fsr2h,f,c
  1376  0037A6  0EC7               	movlw	199
  1377  0037A8  6EDE               	movwf	postinc2,c
  1378  0037AA  0E00               	movlw	0
  1379  0037AC  6EDD               	movwf	postdec2,c
  1380  0037AE  0012               	return		;funcret
  1381  0037B0                     __end_of_initDCmotors_parameter:
  1382                           	callstack 0
  1383                           
  1384 ;; *************** function _initDCmotorsPWM *****************
  1385 ;; Defined at:
  1386 ;;		line 11 in file "dc_motor.c"
  1387 ;; Parameters:    Size  Location     Type
  1388 ;;  PWMperiod       2    0[COMRAM] int 
  1389 ;; Auto vars:     Size  Location     Type
  1390 ;;		None
  1391 ;; Return value:  Size  Location     Type
  1392 ;;                  1    wreg      void 
  1393 ;; Registers used:
  1394 ;;		wreg, status,2
  1395 ;; Tracked objects:
  1396 ;;		On entry : 0/0
  1397 ;;		On exit  : 0/0
  1398 ;;		Unchanged: 0/0
  1399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1400 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1401 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1402 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1403 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1404 ;;Total ram usage:        2 bytes
  1405 ;; Hardware stack levels used: 1
  1406 ;; This function calls:
  1407 ;;		Nothing
  1408 ;; This function is called by:
  1409 ;;		_main
  1410 ;; This function uses a non-reentrant model
  1411 ;;
  1412                           
  1413                           	psect	text3
  1414  003D00                     __ptext3:
  1415                           	callstack 0
  1416  003D00                     _initDCmotorsPWM:
  1417                           	callstack 30
  1418  003D00                     
  1419                           ;dc_motor.c: 14:     TRISEbits.TRISE2=0;
  1420  003D00  9485               	bcf	133,2,c	;volatile
  1421                           
  1422                           ;dc_motor.c: 15:     TRISCbits.TRISC7=0;
  1423  003D02  9E83               	bcf	131,7,c	;volatile
  1424                           
  1425                           ;dc_motor.c: 16:     TRISGbits.TRISG6=0;
  1426  003D04  9C87               	bcf	135,6,c	;volatile
  1427                           
  1428                           ;dc_motor.c: 17:     TRISEbits.TRISE4=0;
  1429  003D06  9885               	bcf	133,4,c	;volatile
  1430                           
  1431                           ;dc_motor.c: 18:     LATEbits.LATE2=0;
  1432  003D08  947D               	bcf	125,2,c	;volatile
  1433                           
  1434                           ;dc_motor.c: 19:     LATCbits.LATC7=0;
  1435  003D0A  9E7B               	bcf	123,7,c	;volatile
  1436                           
  1437                           ;dc_motor.c: 20:     LATGbits.LATG6=0;
  1438  003D0C  9C7F               	bcf	127,6,c	;volatile
  1439                           
  1440                           ;dc_motor.c: 21:     LATEbits.LATE4=0;
  1441  003D0E  987D               	bcf	125,4,c	;volatile
  1442  003D10                     
  1443                           ;dc_motor.c: 24:     T2CONbits.CKPS=0b011;
  1444  003D10  50BD               	movf	189,w,c	;volatile
  1445  003D12  0B8F               	andlw	-113
  1446  003D14  0930               	iorlw	48
  1447  003D16  6EBD               	movwf	189,c	;volatile
  1448                           
  1449                           ;dc_motor.c: 25:     T2HLTbits.MODE=0b00000;
  1450  003D18  0EE0               	movlw	-32
  1451  003D1A  16BE               	andwf	190,f,c	;volatile
  1452                           
  1453                           ;dc_motor.c: 26:     T2CLKCONbits.CS=0b0001;
  1454  003D1C  50BF               	movf	191,w,c	;volatile
  1455  003D1E  0BF0               	andlw	-16
  1456  003D20  0901               	iorlw	1
  1457  003D22  6EBF               	movwf	191,c	;volatile
  1458                           
  1459                           ;dc_motor.c: 29:     T2PR=200-1;
  1460  003D24  0EC7               	movlw	199
  1461  003D26  6EBC               	movwf	188,c	;volatile
  1462  003D28                     
  1463                           ;dc_motor.c: 30:     T2CONbits.ON=1;
  1464  003D28  8EBD               	bsf	189,7,c	;volatile
  1465                           
  1466                           ;dc_motor.c: 32:     RE2PPS=0x0A;
  1467  003D2A  0E0A               	movlw	10
  1468  003D2C  010E               	movlb	14	; () banked
  1469  003D2E  6F74               	movwf	116,b	;volatile
  1470                           
  1471                           ;dc_motor.c: 33:     RC7PPS=0x0B;
  1472  003D30  0E0B               	movlw	11
  1473  003D32  6F69               	movwf	105,b	;volatile
  1474                           
  1475                           ;dc_motor.c: 35:     PWM6DCH=0;
  1476  003D34  0E00               	movlw	0
  1477  003D36  6EA3               	movwf	163,c	;volatile
  1478                           
  1479                           ;dc_motor.c: 36:     PWM7DCH=0;
  1480  003D38  0E00               	movlw	0
  1481  003D3A  6EA0               	movwf	160,c	;volatile
  1482  003D3C                     
  1483                           ; BSR set to: 14
  1484                           ;dc_motor.c: 38:     PWM6CONbits.EN = 1;
  1485  003D3C  8EA4               	bsf	164,7,c	;volatile
  1486  003D3E                     
  1487                           ; BSR set to: 14
  1488                           ;dc_motor.c: 39:     PWM7CONbits.EN = 1;
  1489  003D3E  8EA1               	bsf	161,7,c	;volatile
  1490  003D40                     
  1491                           ; BSR set to: 14
  1492  003D40  0012               	return		;funcret
  1493  003D42                     __end_of_initDCmotorsPWM:
  1494                           	callstack 0
  1495                           
  1496 ;; *************** function _detect_color *****************
  1497 ;; Defined at:
  1498 ;;		line 226 in file "color.c"
  1499 ;; Parameters:    Size  Location     Type
  1500 ;;  m               2   16[BANK0 ] PTR struct color_rgb
  1501 ;;		 -> main@rgb(8), 
  1502 ;;  w               2   18[BANK0 ] PTR struct white_card
  1503 ;;		 -> main@white(18), 
  1504 ;; Auto vars:     Size  Location     Type
  1505 ;;  BG              2   41[BANK0 ] unsigned int 
  1506 ;;  BR              2   39[BANK0 ] unsigned int 
  1507 ;;  BB              2   36[BANK0 ] unsigned int 
  1508 ;;  RR              2   34[BANK0 ] unsigned int 
  1509 ;;  GG              2   32[BANK0 ] unsigned int 
  1510 ;;  GB              2   30[BANK0 ] unsigned int 
  1511 ;;  GR              2   28[BANK0 ] unsigned int 
  1512 ;;  RB              2   26[BANK0 ] unsigned int 
  1513 ;;  RG              2   24[BANK0 ] unsigned int 
  1514 ;;  color           1   38[BANK0 ] unsigned char 
  1515 ;; Return value:  Size  Location     Type
  1516 ;;                  1    wreg      unsigned char 
  1517 ;; Registers used:
  1518 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1519 ;; Tracked objects:
  1520 ;;		On entry : 0/0
  1521 ;;		On exit  : 0/0
  1522 ;;		Unchanged: 0/0
  1523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1524 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1525 ;;      Locals:         0      23       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1526 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1527 ;;      Totals:         0      31       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1528 ;;Total ram usage:       31 bytes
  1529 ;; Hardware stack levels used: 1
  1530 ;; Hardware stack levels required when called: 4
  1531 ;; This function calls:
  1532 ;;		_LED_B
  1533 ;;		_LED_G
  1534 ;;		_LED_R
  1535 ;;		___fldiv
  1536 ;;		___flmul
  1537 ;;		___xxtofl
  1538 ;;		_compare
  1539 ;;		_lroundf
  1540 ;;		_read_color
  1541 ;; This function is called by:
  1542 ;;		_main
  1543 ;; This function uses a non-reentrant model
  1544 ;;
  1545                           
  1546                           	psect	text4
  1547  000E54                     __ptext4:
  1548                           	callstack 0
  1549  000E54                     _detect_color:
  1550                           	callstack 26
  1551  000E54  0E00               	movlw	0
  1552  000E56  0100               	movlb	0	; () banked
  1553  000E58  6F79               	movwf	(detect_color@RG+1)& (0+255),b
  1554  000E5A  0E00               	movlw	0
  1555  000E5C  6F78               	movwf	detect_color@RG& (0+255),b
  1556  000E5E  0E00               	movlw	0
  1557  000E60  6F7B               	movwf	(detect_color@RB+1)& (0+255),b
  1558  000E62  0E00               	movlw	0
  1559  000E64  6F7A               	movwf	detect_color@RB& (0+255),b
  1560  000E66  0E00               	movlw	0
  1561  000E68  6F7D               	movwf	(detect_color@GR+1)& (0+255),b
  1562  000E6A  0E00               	movlw	0
  1563  000E6C  6F7C               	movwf	detect_color@GR& (0+255),b
  1564  000E6E  0E00               	movlw	0
  1565  000E70  6F81               	movwf	(detect_color@GG+1)& (0+255),b
  1566  000E72  0E00               	movlw	0
  1567  000E74  6F80               	movwf	detect_color@GG& (0+255),b
  1568  000E76  0E00               	movlw	0
  1569  000E78  6F7F               	movwf	(detect_color@GB+1)& (0+255),b
  1570  000E7A  0E00               	movlw	0
  1571  000E7C  6F7E               	movwf	detect_color@GB& (0+255),b
  1572  000E7E  0E00               	movlw	0
  1573  000E80  6F88               	movwf	(detect_color@BR+1)& (0+255),b
  1574  000E82  0E00               	movlw	0
  1575  000E84  6F87               	movwf	detect_color@BR& (0+255),b
  1576  000E86  0E00               	movlw	0
  1577  000E88  6F8A               	movwf	(detect_color@BG+1)& (0+255),b
  1578  000E8A  0E00               	movlw	0
  1579  000E8C  6F89               	movwf	detect_color@BG& (0+255),b
  1580  000E8E  0E00               	movlw	0
  1581  000E90  6F85               	movwf	(detect_color@BB+1)& (0+255),b
  1582  000E92  0E00               	movlw	0
  1583  000E94  6F84               	movwf	detect_color@BB& (0+255),b
  1584                           
  1585                           ;color.c: 231:     unsigned char color = 0;
  1586  000E96  0E00               	movlw	0
  1587  000E98  6F86               	movwf	detect_color@color& (0+255),b
  1588  000E9A                     
  1589                           ; BSR set to: 0
  1590                           ;color.c: 233:     LED_R();
  1591  000E9A  ECCA  F01F         	call	_LED_R	;wreg free
  1592  000E9E                     
  1593                           ;color.c: 234:     read_color(m);
  1594  000E9E  C070  F00C         	movff	detect_color@m,read_color@m
  1595  000EA2  C071  F00D         	movff	detect_color@m+1,read_color@m+1
  1596  000EA6  EC43  F01D         	call	_read_color	;wreg free
  1597  000EAA                     
  1598                           ;color.c: 235:     RR = lroundf((float)(m->R)/(w->RR)*100); RG = lroundf((float)(m->G)/(
      +                          w->RG)*100); RB = lroundf((float)(m->B)/(w->RB)*100);
  1599  000EAA  C072  FFD9         	movff	detect_color@w,fsr2l
  1600  000EAE  C073  FFDA         	movff	detect_color@w+1,fsr2h
  1601  000EB2  CFDE F074          	movff	postinc2,??_detect_color
  1602  000EB6  CFDD F075          	movff	postdec2,??_detect_color+1
  1603  000EBA  C074  F001         	movff	??_detect_color,___xxtofl@val
  1604  000EBE  C075  F002         	movff	??_detect_color+1,___xxtofl@val+1
  1605  000EC2  6A03               	clrf	(___xxtofl@val+2)^0,c
  1606  000EC4  6A04               	clrf	(___xxtofl@val+3)^0,c
  1607  000EC6  0E00               	movlw	0
  1608  000EC8  EC05  F016         	call	___xxtofl
  1609  000ECC  C001  F013         	movff	?___xxtofl,___fldiv@a
  1610  000ED0  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  1611  000ED4  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  1612  000ED8  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  1613  000EDC  C070  FFD9         	movff	detect_color@m,fsr2l
  1614  000EE0  C071  FFDA         	movff	detect_color@m+1,fsr2h
  1615  000EE4  CFDE F076          	movff	postinc2,??_detect_color+2
  1616  000EE8  CFDD F077          	movff	postdec2,??_detect_color+3
  1617  000EEC  C076  F001         	movff	??_detect_color+2,___xxtofl@val
  1618  000EF0  C077  F002         	movff	??_detect_color+3,___xxtofl@val+1
  1619  000EF4  6A03               	clrf	(___xxtofl@val+2)^0,c
  1620  000EF6  6A04               	clrf	(___xxtofl@val+3)^0,c
  1621  000EF8  0E00               	movlw	0
  1622  000EFA  EC05  F016         	call	___xxtofl
  1623  000EFE  C001  F00F         	movff	?___xxtofl,___fldiv@b
  1624  000F02  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  1625  000F06  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  1626  000F0A  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  1627  000F0E  ECC6  F012         	call	___fldiv	;wreg free
  1628  000F12  C00F  F028         	movff	?___fldiv,___flmul@b
  1629  000F16  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  1630  000F1A  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  1631  000F1E  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  1632  000F22  0E00               	movlw	0
  1633  000F24  6E2C               	movwf	___flmul@a^0,c
  1634  000F26  0E00               	movlw	0
  1635  000F28  6E2D               	movwf	(___flmul@a+1)^0,c
  1636  000F2A  0EC8               	movlw	200
  1637  000F2C  6E2E               	movwf	(___flmul@a+2)^0,c
  1638  000F2E  0E42               	movlw	66
  1639  000F30  6E2F               	movwf	(___flmul@a+3)^0,c
  1640  000F32  ECDA  F00E         	call	___flmul	;wreg free
  1641  000F36  C028  F08B         	movff	?___flmul,_detect_color$2688
  1642  000F3A  C029  F08C         	movff	?___flmul+1,_detect_color$2688+1
  1643  000F3E  C02A  F08D         	movff	?___flmul+2,_detect_color$2688+2
  1644  000F42  C02B  F08E         	movff	?___flmul+3,_detect_color$2688+3
  1645  000F46                     
  1646                           ;color.c: 235:     RR = lroundf((float)(m->R)/(w->RR)*100); RG = lroundf((float)(m->G)/(
      +                          w->RG)*100); RB = lroundf((float)(m->B)/(w->RB)*100);
  1647  000F46  C08B  F066         	movff	_detect_color$2688,lroundf@x
  1648  000F4A  C08C  F067         	movff	_detect_color$2688+1,lroundf@x+1
  1649  000F4E  C08D  F068         	movff	_detect_color$2688+2,lroundf@x+2
  1650  000F52  C08E  F069         	movff	_detect_color$2688+3,lroundf@x+3
  1651  000F56  ECE2  F01E         	call	_lroundf	;wreg free
  1652  000F5A  C066  F082         	movff	?_lroundf,detect_color@RR
  1653  000F5E  C067  F083         	movff	?_lroundf+1,detect_color@RR+1
  1654  000F62  0100               	movlb	0	; () banked
  1655  000F64  EE20 F002          	lfsr	2,2
  1656  000F68  5172               	movf	detect_color@w& (0+255),w,b
  1657  000F6A  26D9               	addwf	fsr2l,f,c
  1658  000F6C  5173               	movf	(detect_color@w+1)& (0+255),w,b
  1659  000F6E  22DA               	addwfc	fsr2h,f,c
  1660  000F70  CFDE F074          	movff	postinc2,??_detect_color
  1661  000F74  CFDD F075          	movff	postdec2,??_detect_color+1
  1662  000F78  C074  F001         	movff	??_detect_color,___xxtofl@val
  1663  000F7C  C075  F002         	movff	??_detect_color+1,___xxtofl@val+1
  1664  000F80  6A03               	clrf	(___xxtofl@val+2)^0,c
  1665  000F82  6A04               	clrf	(___xxtofl@val+3)^0,c
  1666  000F84  0E00               	movlw	0
  1667  000F86  EC05  F016         	call	___xxtofl
  1668  000F8A  C001  F013         	movff	?___xxtofl,___fldiv@a
  1669  000F8E  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  1670  000F92  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  1671  000F96  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  1672  000F9A  0100               	movlb	0	; () banked
  1673  000F9C  EE20 F002          	lfsr	2,2
  1674  000FA0  5170               	movf	detect_color@m& (0+255),w,b
  1675  000FA2  26D9               	addwf	fsr2l,f,c
  1676  000FA4  5171               	movf	(detect_color@m+1)& (0+255),w,b
  1677  000FA6  22DA               	addwfc	fsr2h,f,c
  1678  000FA8  CFDE F076          	movff	postinc2,??_detect_color+2
  1679  000FAC  CFDD F077          	movff	postdec2,??_detect_color+3
  1680  000FB0  C076  F001         	movff	??_detect_color+2,___xxtofl@val
  1681  000FB4  C077  F002         	movff	??_detect_color+3,___xxtofl@val+1
  1682  000FB8  6A03               	clrf	(___xxtofl@val+2)^0,c
  1683  000FBA  6A04               	clrf	(___xxtofl@val+3)^0,c
  1684  000FBC  0E00               	movlw	0
  1685  000FBE  EC05  F016         	call	___xxtofl
  1686  000FC2  C001  F00F         	movff	?___xxtofl,___fldiv@b
  1687  000FC6  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  1688  000FCA  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  1689  000FCE  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  1690  000FD2  ECC6  F012         	call	___fldiv	;wreg free
  1691  000FD6  C00F  F028         	movff	?___fldiv,___flmul@b
  1692  000FDA  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  1693  000FDE  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  1694  000FE2  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  1695  000FE6  0E00               	movlw	0
  1696  000FE8  6E2C               	movwf	___flmul@a^0,c
  1697  000FEA  0E00               	movlw	0
  1698  000FEC  6E2D               	movwf	(___flmul@a+1)^0,c
  1699  000FEE  0EC8               	movlw	200
  1700  000FF0  6E2E               	movwf	(___flmul@a+2)^0,c
  1701  000FF2  0E42               	movlw	66
  1702  000FF4  6E2F               	movwf	(___flmul@a+3)^0,c
  1703  000FF6  ECDA  F00E         	call	___flmul	;wreg free
  1704  000FFA  C028  F08B         	movff	?___flmul,_detect_color$2688
  1705  000FFE  C029  F08C         	movff	?___flmul+1,_detect_color$2688+1
  1706  001002  C02A  F08D         	movff	?___flmul+2,_detect_color$2688+2
  1707  001006  C02B  F08E         	movff	?___flmul+3,_detect_color$2688+3
  1708  00100A  C08B  F066         	movff	_detect_color$2688,lroundf@x
  1709  00100E  C08C  F067         	movff	_detect_color$2688+1,lroundf@x+1
  1710  001012  C08D  F068         	movff	_detect_color$2688+2,lroundf@x+2
  1711  001016  C08E  F069         	movff	_detect_color$2688+3,lroundf@x+3
  1712  00101A  ECE2  F01E         	call	_lroundf	;wreg free
  1713  00101E  0100               	movlb	0	; () banked
  1714  001020  EE20 F004          	lfsr	2,4
  1715  001024  5172               	movf	detect_color@w& (0+255),w,b
  1716  001026  26D9               	addwf	fsr2l,f,c
  1717  001028  5173               	movf	(detect_color@w+1)& (0+255),w,b
  1718  00102A  22DA               	addwfc	fsr2h,f,c
  1719  00102C  CFDE F074          	movff	postinc2,??_detect_color
  1720  001030  CFDD F075          	movff	postdec2,??_detect_color+1
  1721  001034  C074  F001         	movff	??_detect_color,___xxtofl@val
  1722  001038  C075  F002         	movff	??_detect_color+1,___xxtofl@val+1
  1723  00103C  6A03               	clrf	(___xxtofl@val+2)^0,c
  1724  00103E  6A04               	clrf	(___xxtofl@val+3)^0,c
  1725  001040  0E00               	movlw	0
  1726  001042  EC05  F016         	call	___xxtofl
  1727  001046  C001  F013         	movff	?___xxtofl,___fldiv@a
  1728  00104A  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  1729  00104E  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  1730  001052  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  1731  001056  0100               	movlb	0	; () banked
  1732  001058  EE20 F004          	lfsr	2,4
  1733  00105C  5170               	movf	detect_color@m& (0+255),w,b
  1734  00105E  26D9               	addwf	fsr2l,f,c
  1735  001060  5171               	movf	(detect_color@m+1)& (0+255),w,b
  1736  001062  22DA               	addwfc	fsr2h,f,c
  1737  001064  CFDE F076          	movff	postinc2,??_detect_color+2
  1738  001068  CFDD F077          	movff	postdec2,??_detect_color+3
  1739  00106C  C076  F001         	movff	??_detect_color+2,___xxtofl@val
  1740  001070  C077  F002         	movff	??_detect_color+3,___xxtofl@val+1
  1741  001074  6A03               	clrf	(___xxtofl@val+2)^0,c
  1742  001076  6A04               	clrf	(___xxtofl@val+3)^0,c
  1743  001078  0E00               	movlw	0
  1744  00107A  EC05  F016         	call	___xxtofl
  1745  00107E  C001  F00F         	movff	?___xxtofl,___fldiv@b
  1746  001082  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  1747  001086  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  1748  00108A  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  1749  00108E  ECC6  F012         	call	___fldiv	;wreg free
  1750  001092  C00F  F028         	movff	?___fldiv,___flmul@b
  1751  001096  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  1752  00109A  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  1753  00109E  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  1754  0010A2  0E00               	movlw	0
  1755  0010A4  6E2C               	movwf	___flmul@a^0,c
  1756  0010A6  0E00               	movlw	0
  1757  0010A8  6E2D               	movwf	(___flmul@a+1)^0,c
  1758  0010AA  0EC8               	movlw	200
  1759  0010AC  6E2E               	movwf	(___flmul@a+2)^0,c
  1760  0010AE  0E42               	movlw	66
  1761  0010B0  6E2F               	movwf	(___flmul@a+3)^0,c
  1762  0010B2  ECDA  F00E         	call	___flmul	;wreg free
  1763  0010B6  C028  F08B         	movff	?___flmul,_detect_color$2688
  1764  0010BA  C029  F08C         	movff	?___flmul+1,_detect_color$2688+1
  1765  0010BE  C02A  F08D         	movff	?___flmul+2,_detect_color$2688+2
  1766  0010C2  C02B  F08E         	movff	?___flmul+3,_detect_color$2688+3
  1767  0010C6  C08B  F066         	movff	_detect_color$2688,lroundf@x
  1768  0010CA  C08C  F067         	movff	_detect_color$2688+1,lroundf@x+1
  1769  0010CE  C08D  F068         	movff	_detect_color$2688+2,lroundf@x+2
  1770  0010D2  C08E  F069         	movff	_detect_color$2688+3,lroundf@x+3
  1771  0010D6  ECE2  F01E         	call	_lroundf	;wreg free
  1772  0010DA                     
  1773                           ;color.c: 236:     _delay((unsigned long)((50)*(64000000/4000.0)));
  1774  0010DA  0E05               	movlw	5
  1775  0010DC  0100               	movlb	0	; () banked
  1776  0010DE  6F75               	movwf	(??_detect_color+1)& (0+255),b
  1777  0010E0  0E0F               	movlw	15
  1778  0010E2  6F74               	movwf	??_detect_color& (0+255),b
  1779  0010E4  0EF1               	movlw	241
  1780  0010E6                     u4317:
  1781  0010E6  2EE8               	decfsz	wreg,f,c
  1782  0010E8  D7FE               	bra	u4317
  1783  0010EA  2F74               	decfsz	??_detect_color& (0+255),f,b
  1784  0010EC  D7FC               	bra	u4317
  1785  0010EE  2F75               	decfsz	(??_detect_color+1)& (0+255),f,b
  1786  0010F0  D7FA               	bra	u4317
  1787  0010F2                     
  1788                           ;color.c: 238:     LED_G();
  1789  0010F2  ECDA  F01F         	call	_LED_G	;wreg free
  1790  0010F6                     
  1791                           ;color.c: 239:     read_color(m);
  1792  0010F6  C070  F00C         	movff	detect_color@m,read_color@m
  1793  0010FA  C071  F00D         	movff	detect_color@m+1,read_color@m+1
  1794  0010FE  EC43  F01D         	call	_read_color	;wreg free
  1795  001102                     
  1796                           ;color.c: 240:     GR = lroundf((float)(m->R)/(w->GR)*100); GG = lroundf((float)(m->G)/(
      +                          w->GG)*100); GB = lroundf((float)(m->B)/(w->GB)*100);
  1797  001102  0100               	movlb	0	; () banked
  1798  001104  EE20 F006          	lfsr	2,6
  1799  001108  5172               	movf	detect_color@w& (0+255),w,b
  1800  00110A  26D9               	addwf	fsr2l,f,c
  1801  00110C  5173               	movf	(detect_color@w+1)& (0+255),w,b
  1802  00110E  22DA               	addwfc	fsr2h,f,c
  1803  001110  CFDE F074          	movff	postinc2,??_detect_color
  1804  001114  CFDD F075          	movff	postdec2,??_detect_color+1
  1805  001118  C074  F001         	movff	??_detect_color,___xxtofl@val
  1806  00111C  C075  F002         	movff	??_detect_color+1,___xxtofl@val+1
  1807  001120  6A03               	clrf	(___xxtofl@val+2)^0,c
  1808  001122  6A04               	clrf	(___xxtofl@val+3)^0,c
  1809  001124  0E00               	movlw	0
  1810  001126  EC05  F016         	call	___xxtofl
  1811  00112A  C001  F013         	movff	?___xxtofl,___fldiv@a
  1812  00112E  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  1813  001132  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  1814  001136  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  1815  00113A  C070  FFD9         	movff	detect_color@m,fsr2l
  1816  00113E  C071  FFDA         	movff	detect_color@m+1,fsr2h
  1817  001142  CFDE F076          	movff	postinc2,??_detect_color+2
  1818  001146  CFDD F077          	movff	postdec2,??_detect_color+3
  1819  00114A  C076  F001         	movff	??_detect_color+2,___xxtofl@val
  1820  00114E  C077  F002         	movff	??_detect_color+3,___xxtofl@val+1
  1821  001152  6A03               	clrf	(___xxtofl@val+2)^0,c
  1822  001154  6A04               	clrf	(___xxtofl@val+3)^0,c
  1823  001156  0E00               	movlw	0
  1824  001158  EC05  F016         	call	___xxtofl
  1825  00115C  C001  F00F         	movff	?___xxtofl,___fldiv@b
  1826  001160  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  1827  001164  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  1828  001168  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  1829  00116C  ECC6  F012         	call	___fldiv	;wreg free
  1830  001170  C00F  F028         	movff	?___fldiv,___flmul@b
  1831  001174  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  1832  001178  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  1833  00117C  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  1834  001180  0E00               	movlw	0
  1835  001182  6E2C               	movwf	___flmul@a^0,c
  1836  001184  0E00               	movlw	0
  1837  001186  6E2D               	movwf	(___flmul@a+1)^0,c
  1838  001188  0EC8               	movlw	200
  1839  00118A  6E2E               	movwf	(___flmul@a+2)^0,c
  1840  00118C  0E42               	movlw	66
  1841  00118E  6E2F               	movwf	(___flmul@a+3)^0,c
  1842  001190  ECDA  F00E         	call	___flmul	;wreg free
  1843  001194  C028  F08B         	movff	?___flmul,_detect_color$2688
  1844  001198  C029  F08C         	movff	?___flmul+1,_detect_color$2688+1
  1845  00119C  C02A  F08D         	movff	?___flmul+2,_detect_color$2688+2
  1846  0011A0  C02B  F08E         	movff	?___flmul+3,_detect_color$2688+3
  1847  0011A4  C08B  F066         	movff	_detect_color$2688,lroundf@x
  1848  0011A8  C08C  F067         	movff	_detect_color$2688+1,lroundf@x+1
  1849  0011AC  C08D  F068         	movff	_detect_color$2688+2,lroundf@x+2
  1850  0011B0  C08E  F069         	movff	_detect_color$2688+3,lroundf@x+3
  1851  0011B4  ECE2  F01E         	call	_lroundf	;wreg free
  1852  0011B8  0100               	movlb	0	; () banked
  1853  0011BA  EE20 F008          	lfsr	2,8
  1854  0011BE  5172               	movf	detect_color@w& (0+255),w,b
  1855  0011C0  26D9               	addwf	fsr2l,f,c
  1856  0011C2  5173               	movf	(detect_color@w+1)& (0+255),w,b
  1857  0011C4  22DA               	addwfc	fsr2h,f,c
  1858  0011C6  CFDE F074          	movff	postinc2,??_detect_color
  1859  0011CA  CFDD F075          	movff	postdec2,??_detect_color+1
  1860  0011CE  C074  F001         	movff	??_detect_color,___xxtofl@val
  1861  0011D2  C075  F002         	movff	??_detect_color+1,___xxtofl@val+1
  1862  0011D6  6A03               	clrf	(___xxtofl@val+2)^0,c
  1863  0011D8  6A04               	clrf	(___xxtofl@val+3)^0,c
  1864  0011DA  0E00               	movlw	0
  1865  0011DC  EC05  F016         	call	___xxtofl
  1866  0011E0  C001  F013         	movff	?___xxtofl,___fldiv@a
  1867  0011E4  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  1868  0011E8  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  1869  0011EC  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  1870  0011F0  0100               	movlb	0	; () banked
  1871  0011F2  EE20 F002          	lfsr	2,2
  1872  0011F6  5170               	movf	detect_color@m& (0+255),w,b
  1873  0011F8  26D9               	addwf	fsr2l,f,c
  1874  0011FA  5171               	movf	(detect_color@m+1)& (0+255),w,b
  1875  0011FC  22DA               	addwfc	fsr2h,f,c
  1876  0011FE  CFDE F076          	movff	postinc2,??_detect_color+2
  1877  001202  CFDD F077          	movff	postdec2,??_detect_color+3
  1878  001206  C076  F001         	movff	??_detect_color+2,___xxtofl@val
  1879  00120A  C077  F002         	movff	??_detect_color+3,___xxtofl@val+1
  1880  00120E  6A03               	clrf	(___xxtofl@val+2)^0,c
  1881  001210  6A04               	clrf	(___xxtofl@val+3)^0,c
  1882  001212  0E00               	movlw	0
  1883  001214  EC05  F016         	call	___xxtofl
  1884  001218  C001  F00F         	movff	?___xxtofl,___fldiv@b
  1885  00121C  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  1886  001220  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  1887  001224  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  1888  001228  ECC6  F012         	call	___fldiv	;wreg free
  1889  00122C  C00F  F028         	movff	?___fldiv,___flmul@b
  1890  001230  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  1891  001234  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  1892  001238  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  1893  00123C  0E00               	movlw	0
  1894  00123E  6E2C               	movwf	___flmul@a^0,c
  1895  001240  0E00               	movlw	0
  1896  001242  6E2D               	movwf	(___flmul@a+1)^0,c
  1897  001244  0EC8               	movlw	200
  1898  001246  6E2E               	movwf	(___flmul@a+2)^0,c
  1899  001248  0E42               	movlw	66
  1900  00124A  6E2F               	movwf	(___flmul@a+3)^0,c
  1901  00124C  ECDA  F00E         	call	___flmul	;wreg free
  1902  001250  C028  F08B         	movff	?___flmul,_detect_color$2688
  1903  001254  C029  F08C         	movff	?___flmul+1,_detect_color$2688+1
  1904  001258  C02A  F08D         	movff	?___flmul+2,_detect_color$2688+2
  1905  00125C  C02B  F08E         	movff	?___flmul+3,_detect_color$2688+3
  1906  001260  C08B  F066         	movff	_detect_color$2688,lroundf@x
  1907  001264  C08C  F067         	movff	_detect_color$2688+1,lroundf@x+1
  1908  001268  C08D  F068         	movff	_detect_color$2688+2,lroundf@x+2
  1909  00126C  C08E  F069         	movff	_detect_color$2688+3,lroundf@x+3
  1910  001270  ECE2  F01E         	call	_lroundf	;wreg free
  1911  001274  C066  F080         	movff	?_lroundf,detect_color@GG
  1912  001278  C067  F081         	movff	?_lroundf+1,detect_color@GG+1
  1913  00127C  0100               	movlb	0	; () banked
  1914  00127E  EE20 F00A          	lfsr	2,10
  1915  001282  5172               	movf	detect_color@w& (0+255),w,b
  1916  001284  26D9               	addwf	fsr2l,f,c
  1917  001286  5173               	movf	(detect_color@w+1)& (0+255),w,b
  1918  001288  22DA               	addwfc	fsr2h,f,c
  1919  00128A  CFDE F074          	movff	postinc2,??_detect_color
  1920  00128E  CFDD F075          	movff	postdec2,??_detect_color+1
  1921  001292  C074  F001         	movff	??_detect_color,___xxtofl@val
  1922  001296  C075  F002         	movff	??_detect_color+1,___xxtofl@val+1
  1923  00129A  6A03               	clrf	(___xxtofl@val+2)^0,c
  1924  00129C  6A04               	clrf	(___xxtofl@val+3)^0,c
  1925  00129E  0E00               	movlw	0
  1926  0012A0  EC05  F016         	call	___xxtofl
  1927  0012A4  C001  F013         	movff	?___xxtofl,___fldiv@a
  1928  0012A8  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  1929  0012AC  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  1930  0012B0  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  1931  0012B4  0100               	movlb	0	; () banked
  1932  0012B6  EE20 F004          	lfsr	2,4
  1933  0012BA  5170               	movf	detect_color@m& (0+255),w,b
  1934  0012BC  26D9               	addwf	fsr2l,f,c
  1935  0012BE  5171               	movf	(detect_color@m+1)& (0+255),w,b
  1936  0012C0  22DA               	addwfc	fsr2h,f,c
  1937  0012C2  CFDE F076          	movff	postinc2,??_detect_color+2
  1938  0012C6  CFDD F077          	movff	postdec2,??_detect_color+3
  1939  0012CA  C076  F001         	movff	??_detect_color+2,___xxtofl@val
  1940  0012CE  C077  F002         	movff	??_detect_color+3,___xxtofl@val+1
  1941  0012D2  6A03               	clrf	(___xxtofl@val+2)^0,c
  1942  0012D4  6A04               	clrf	(___xxtofl@val+3)^0,c
  1943  0012D6  0E00               	movlw	0
  1944  0012D8  EC05  F016         	call	___xxtofl
  1945  0012DC  C001  F00F         	movff	?___xxtofl,___fldiv@b
  1946  0012E0  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  1947  0012E4  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  1948  0012E8  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  1949  0012EC  ECC6  F012         	call	___fldiv	;wreg free
  1950  0012F0  C00F  F028         	movff	?___fldiv,___flmul@b
  1951  0012F4  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  1952  0012F8  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  1953  0012FC  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  1954  001300  0E00               	movlw	0
  1955  001302  6E2C               	movwf	___flmul@a^0,c
  1956  001304  0E00               	movlw	0
  1957  001306  6E2D               	movwf	(___flmul@a+1)^0,c
  1958  001308  0EC8               	movlw	200
  1959  00130A  6E2E               	movwf	(___flmul@a+2)^0,c
  1960  00130C  0E42               	movlw	66
  1961  00130E  6E2F               	movwf	(___flmul@a+3)^0,c
  1962  001310  ECDA  F00E         	call	___flmul	;wreg free
  1963  001314  C028  F08B         	movff	?___flmul,_detect_color$2688
  1964  001318  C029  F08C         	movff	?___flmul+1,_detect_color$2688+1
  1965  00131C  C02A  F08D         	movff	?___flmul+2,_detect_color$2688+2
  1966  001320  C02B  F08E         	movff	?___flmul+3,_detect_color$2688+3
  1967  001324  C08B  F066         	movff	_detect_color$2688,lroundf@x
  1968  001328  C08C  F067         	movff	_detect_color$2688+1,lroundf@x+1
  1969  00132C  C08D  F068         	movff	_detect_color$2688+2,lroundf@x+2
  1970  001330  C08E  F069         	movff	_detect_color$2688+3,lroundf@x+3
  1971  001334  ECE2  F01E         	call	_lroundf	;wreg free
  1972  001338                     
  1973                           ;color.c: 241:     _delay((unsigned long)((50)*(64000000/4000.0)));
  1974  001338  0E05               	movlw	5
  1975  00133A  0100               	movlb	0	; () banked
  1976  00133C  6F75               	movwf	(??_detect_color+1)& (0+255),b
  1977  00133E  0E0F               	movlw	15
  1978  001340  6F74               	movwf	??_detect_color& (0+255),b
  1979  001342  0EF1               	movlw	241
  1980  001344                     u4327:
  1981  001344  2EE8               	decfsz	wreg,f,c
  1982  001346  D7FE               	bra	u4327
  1983  001348  2F74               	decfsz	??_detect_color& (0+255),f,b
  1984  00134A  D7FC               	bra	u4327
  1985  00134C  2F75               	decfsz	(??_detect_color+1)& (0+255),f,b
  1986  00134E  D7FA               	bra	u4327
  1987  001350                     
  1988                           ;color.c: 243:     LED_B();
  1989  001350  ECFA  F01F         	call	_LED_B	;wreg free
  1990  001354                     
  1991                           ;color.c: 244:     read_color(m);
  1992  001354  C070  F00C         	movff	detect_color@m,read_color@m
  1993  001358  C071  F00D         	movff	detect_color@m+1,read_color@m+1
  1994  00135C  EC43  F01D         	call	_read_color	;wreg free
  1995  001360                     
  1996                           ;color.c: 245:     BR = lroundf((float)(m->R)/(w->BR)*100); BG = lroundf((float)(m->G)/(
      +                          w->BG)*100); BB = lroundf((float)(m->B)/(w->BB)*100);
  1997  001360  0100               	movlb	0	; () banked
  1998  001362  EE20 F00C          	lfsr	2,12
  1999  001366  5172               	movf	detect_color@w& (0+255),w,b
  2000  001368  26D9               	addwf	fsr2l,f,c
  2001  00136A  5173               	movf	(detect_color@w+1)& (0+255),w,b
  2002  00136C  22DA               	addwfc	fsr2h,f,c
  2003  00136E  CFDE F074          	movff	postinc2,??_detect_color
  2004  001372  CFDD F075          	movff	postdec2,??_detect_color+1
  2005  001376  C074  F001         	movff	??_detect_color,___xxtofl@val
  2006  00137A  C075  F002         	movff	??_detect_color+1,___xxtofl@val+1
  2007  00137E  6A03               	clrf	(___xxtofl@val+2)^0,c
  2008  001380  6A04               	clrf	(___xxtofl@val+3)^0,c
  2009  001382  0E00               	movlw	0
  2010  001384  EC05  F016         	call	___xxtofl
  2011  001388  C001  F013         	movff	?___xxtofl,___fldiv@a
  2012  00138C  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  2013  001390  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  2014  001394  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  2015  001398  C070  FFD9         	movff	detect_color@m,fsr2l
  2016  00139C  C071  FFDA         	movff	detect_color@m+1,fsr2h
  2017  0013A0  CFDE F076          	movff	postinc2,??_detect_color+2
  2018  0013A4  CFDD F077          	movff	postdec2,??_detect_color+3
  2019  0013A8  C076  F001         	movff	??_detect_color+2,___xxtofl@val
  2020  0013AC  C077  F002         	movff	??_detect_color+3,___xxtofl@val+1
  2021  0013B0  6A03               	clrf	(___xxtofl@val+2)^0,c
  2022  0013B2  6A04               	clrf	(___xxtofl@val+3)^0,c
  2023  0013B4  0E00               	movlw	0
  2024  0013B6  EC05  F016         	call	___xxtofl
  2025  0013BA  C001  F00F         	movff	?___xxtofl,___fldiv@b
  2026  0013BE  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  2027  0013C2  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  2028  0013C6  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  2029  0013CA  ECC6  F012         	call	___fldiv	;wreg free
  2030  0013CE  C00F  F028         	movff	?___fldiv,___flmul@b
  2031  0013D2  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  2032  0013D6  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  2033  0013DA  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  2034  0013DE  0E00               	movlw	0
  2035  0013E0  6E2C               	movwf	___flmul@a^0,c
  2036  0013E2  0E00               	movlw	0
  2037  0013E4  6E2D               	movwf	(___flmul@a+1)^0,c
  2038  0013E6  0EC8               	movlw	200
  2039  0013E8  6E2E               	movwf	(___flmul@a+2)^0,c
  2040  0013EA  0E42               	movlw	66
  2041  0013EC  6E2F               	movwf	(___flmul@a+3)^0,c
  2042  0013EE  ECDA  F00E         	call	___flmul	;wreg free
  2043  0013F2  C028  F08B         	movff	?___flmul,_detect_color$2688
  2044  0013F6  C029  F08C         	movff	?___flmul+1,_detect_color$2688+1
  2045  0013FA  C02A  F08D         	movff	?___flmul+2,_detect_color$2688+2
  2046  0013FE  C02B  F08E         	movff	?___flmul+3,_detect_color$2688+3
  2047  001402                     
  2048                           ;color.c: 245:     BR = lroundf((float)(m->R)/(w->BR)*100); BG = lroundf((float)(m->G)/(
      +                          w->BG)*100); BB = lroundf((float)(m->B)/(w->BB)*100);
  2049  001402  C08B  F066         	movff	_detect_color$2688,lroundf@x
  2050  001406  C08C  F067         	movff	_detect_color$2688+1,lroundf@x+1
  2051  00140A  C08D  F068         	movff	_detect_color$2688+2,lroundf@x+2
  2052  00140E  C08E  F069         	movff	_detect_color$2688+3,lroundf@x+3
  2053  001412  ECE2  F01E         	call	_lroundf	;wreg free
  2054  001416  C066  F087         	movff	?_lroundf,detect_color@BR
  2055  00141A  C067  F088         	movff	?_lroundf+1,detect_color@BR+1
  2056  00141E  0100               	movlb	0	; () banked
  2057  001420  EE20 F00E          	lfsr	2,14
  2058  001424  5172               	movf	detect_color@w& (0+255),w,b
  2059  001426  26D9               	addwf	fsr2l,f,c
  2060  001428  5173               	movf	(detect_color@w+1)& (0+255),w,b
  2061  00142A  22DA               	addwfc	fsr2h,f,c
  2062  00142C  CFDE F074          	movff	postinc2,??_detect_color
  2063  001430  CFDD F075          	movff	postdec2,??_detect_color+1
  2064  001434  C074  F001         	movff	??_detect_color,___xxtofl@val
  2065  001438  C075  F002         	movff	??_detect_color+1,___xxtofl@val+1
  2066  00143C  6A03               	clrf	(___xxtofl@val+2)^0,c
  2067  00143E  6A04               	clrf	(___xxtofl@val+3)^0,c
  2068  001440  0E00               	movlw	0
  2069  001442  EC05  F016         	call	___xxtofl
  2070  001446  C001  F013         	movff	?___xxtofl,___fldiv@a
  2071  00144A  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  2072  00144E  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  2073  001452  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  2074  001456  0100               	movlb	0	; () banked
  2075  001458  EE20 F002          	lfsr	2,2
  2076  00145C  5170               	movf	detect_color@m& (0+255),w,b
  2077  00145E  26D9               	addwf	fsr2l,f,c
  2078  001460  5171               	movf	(detect_color@m+1)& (0+255),w,b
  2079  001462  22DA               	addwfc	fsr2h,f,c
  2080  001464  CFDE F076          	movff	postinc2,??_detect_color+2
  2081  001468  CFDD F077          	movff	postdec2,??_detect_color+3
  2082  00146C  C076  F001         	movff	??_detect_color+2,___xxtofl@val
  2083  001470  C077  F002         	movff	??_detect_color+3,___xxtofl@val+1
  2084  001474  6A03               	clrf	(___xxtofl@val+2)^0,c
  2085  001476  6A04               	clrf	(___xxtofl@val+3)^0,c
  2086  001478  0E00               	movlw	0
  2087  00147A  EC05  F016         	call	___xxtofl
  2088  00147E  C001  F00F         	movff	?___xxtofl,___fldiv@b
  2089  001482  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  2090  001486  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  2091  00148A  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  2092  00148E  ECC6  F012         	call	___fldiv	;wreg free
  2093  001492  C00F  F028         	movff	?___fldiv,___flmul@b
  2094  001496  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  2095  00149A  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  2096  00149E  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  2097  0014A2  0E00               	movlw	0
  2098  0014A4  6E2C               	movwf	___flmul@a^0,c
  2099  0014A6  0E00               	movlw	0
  2100  0014A8  6E2D               	movwf	(___flmul@a+1)^0,c
  2101  0014AA  0EC8               	movlw	200
  2102  0014AC  6E2E               	movwf	(___flmul@a+2)^0,c
  2103  0014AE  0E42               	movlw	66
  2104  0014B0  6E2F               	movwf	(___flmul@a+3)^0,c
  2105  0014B2  ECDA  F00E         	call	___flmul	;wreg free
  2106  0014B6  C028  F08B         	movff	?___flmul,_detect_color$2688
  2107  0014BA  C029  F08C         	movff	?___flmul+1,_detect_color$2688+1
  2108  0014BE  C02A  F08D         	movff	?___flmul+2,_detect_color$2688+2
  2109  0014C2  C02B  F08E         	movff	?___flmul+3,_detect_color$2688+3
  2110  0014C6  C08B  F066         	movff	_detect_color$2688,lroundf@x
  2111  0014CA  C08C  F067         	movff	_detect_color$2688+1,lroundf@x+1
  2112  0014CE  C08D  F068         	movff	_detect_color$2688+2,lroundf@x+2
  2113  0014D2  C08E  F069         	movff	_detect_color$2688+3,lroundf@x+3
  2114  0014D6  ECE2  F01E         	call	_lroundf	;wreg free
  2115  0014DA  C066  F089         	movff	?_lroundf,detect_color@BG
  2116  0014DE  C067  F08A         	movff	?_lroundf+1,detect_color@BG+1
  2117  0014E2  0100               	movlb	0	; () banked
  2118  0014E4  EE20 F010          	lfsr	2,16
  2119  0014E8  5172               	movf	detect_color@w& (0+255),w,b
  2120  0014EA  26D9               	addwf	fsr2l,f,c
  2121  0014EC  5173               	movf	(detect_color@w+1)& (0+255),w,b
  2122  0014EE  22DA               	addwfc	fsr2h,f,c
  2123  0014F0  CFDE F074          	movff	postinc2,??_detect_color
  2124  0014F4  CFDD F075          	movff	postdec2,??_detect_color+1
  2125  0014F8  C074  F001         	movff	??_detect_color,___xxtofl@val
  2126  0014FC  C075  F002         	movff	??_detect_color+1,___xxtofl@val+1
  2127  001500  6A03               	clrf	(___xxtofl@val+2)^0,c
  2128  001502  6A04               	clrf	(___xxtofl@val+3)^0,c
  2129  001504  0E00               	movlw	0
  2130  001506  EC05  F016         	call	___xxtofl
  2131  00150A  C001  F013         	movff	?___xxtofl,___fldiv@a
  2132  00150E  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  2133  001512  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  2134  001516  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  2135  00151A  0100               	movlb	0	; () banked
  2136  00151C  EE20 F004          	lfsr	2,4
  2137  001520  5170               	movf	detect_color@m& (0+255),w,b
  2138  001522  26D9               	addwf	fsr2l,f,c
  2139  001524  5171               	movf	(detect_color@m+1)& (0+255),w,b
  2140  001526  22DA               	addwfc	fsr2h,f,c
  2141  001528  CFDE F076          	movff	postinc2,??_detect_color+2
  2142  00152C  CFDD F077          	movff	postdec2,??_detect_color+3
  2143  001530  C076  F001         	movff	??_detect_color+2,___xxtofl@val
  2144  001534  C077  F002         	movff	??_detect_color+3,___xxtofl@val+1
  2145  001538  6A03               	clrf	(___xxtofl@val+2)^0,c
  2146  00153A  6A04               	clrf	(___xxtofl@val+3)^0,c
  2147  00153C  0E00               	movlw	0
  2148  00153E  EC05  F016         	call	___xxtofl
  2149  001542  C001  F00F         	movff	?___xxtofl,___fldiv@b
  2150  001546  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  2151  00154A  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  2152  00154E  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  2153  001552  ECC6  F012         	call	___fldiv	;wreg free
  2154  001556  C00F  F028         	movff	?___fldiv,___flmul@b
  2155  00155A  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  2156  00155E  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  2157  001562  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  2158  001566  0E00               	movlw	0
  2159  001568  6E2C               	movwf	___flmul@a^0,c
  2160  00156A  0E00               	movlw	0
  2161  00156C  6E2D               	movwf	(___flmul@a+1)^0,c
  2162  00156E  0EC8               	movlw	200
  2163  001570  6E2E               	movwf	(___flmul@a+2)^0,c
  2164  001572  0E42               	movlw	66
  2165  001574  6E2F               	movwf	(___flmul@a+3)^0,c
  2166  001576  ECDA  F00E         	call	___flmul	;wreg free
  2167  00157A  C028  F08B         	movff	?___flmul,_detect_color$2688
  2168  00157E  C029  F08C         	movff	?___flmul+1,_detect_color$2688+1
  2169  001582  C02A  F08D         	movff	?___flmul+2,_detect_color$2688+2
  2170  001586  C02B  F08E         	movff	?___flmul+3,_detect_color$2688+3
  2171  00158A  C08B  F066         	movff	_detect_color$2688,lroundf@x
  2172  00158E  C08C  F067         	movff	_detect_color$2688+1,lroundf@x+1
  2173  001592  C08D  F068         	movff	_detect_color$2688+2,lroundf@x+2
  2174  001596  C08E  F069         	movff	_detect_color$2688+3,lroundf@x+3
  2175  00159A  ECE2  F01E         	call	_lroundf	;wreg free
  2176  00159E  C066  F084         	movff	?_lroundf,detect_color@BB
  2177  0015A2  C067  F085         	movff	?_lroundf+1,detect_color@BB+1
  2178  0015A6                     
  2179                           ;color.c: 246:     _delay((unsigned long)((50)*(64000000/4000.0)));
  2180  0015A6  0E05               	movlw	5
  2181  0015A8  0100               	movlb	0	; () banked
  2182  0015AA  6F75               	movwf	(??_detect_color+1)& (0+255),b
  2183  0015AC  0E0F               	movlw	15
  2184  0015AE  6F74               	movwf	??_detect_color& (0+255),b
  2185  0015B0  0EF1               	movlw	241
  2186  0015B2                     u4337:
  2187  0015B2  2EE8               	decfsz	wreg,f,c
  2188  0015B4  D7FE               	bra	u4337
  2189  0015B6  2F74               	decfsz	??_detect_color& (0+255),f,b
  2190  0015B8  D7FC               	bra	u4337
  2191  0015BA  2F75               	decfsz	(??_detect_color+1)& (0+255),f,b
  2192  0015BC  D7FA               	bra	u4337
  2193  0015BE                     
  2194                           ;color.c: 249:     if (compare(0, BR, 55)){
  2195  0015BE  0E00               	movlw	0
  2196  0015C0  0100               	movlb	0	; () banked
  2197  0015C2  6F6B               	movwf	(compare@lower+1)& (0+255),b
  2198  0015C4  0E00               	movlw	0
  2199  0015C6  6F6A               	movwf	compare@lower& (0+255),b
  2200  0015C8  C087  F06C         	movff	detect_color@BR,compare@value2compare
  2201  0015CC  C088  F06D         	movff	detect_color@BR+1,compare@value2compare+1
  2202  0015D0  0E00               	movlw	0
  2203  0015D2  6F6F               	movwf	(compare@upper+1)& (0+255),b
  2204  0015D4  0E37               	movlw	55
  2205  0015D6  6F6E               	movwf	compare@upper& (0+255),b
  2206  0015D8  ECFF  F01E         	call	_compare	;wreg free
  2207  0015DC  0900               	iorlw	0
  2208  0015DE  B4D8               	btfsc	status,2,c
  2209  0015E0  EFF4  F00A         	goto	u3961
  2210  0015E4  EFF6  F00A         	goto	u3960
  2211  0015E8                     u3961:
  2212  0015E8  EF67  F00B         	goto	l4103
  2213  0015EC                     u3960:
  2214  0015EC                     
  2215                           ;color.c: 250:         if (compare(0, lroundf((float)(GG + BG)/BB * 200), 391)){color = 
      +                          3;}
  2216  0015EC  C084  F001         	movff	detect_color@BB,___xxtofl@val
  2217  0015F0  C085  F002         	movff	detect_color@BB+1,___xxtofl@val+1
  2218  0015F4  6A03               	clrf	(___xxtofl@val+2)^0,c
  2219  0015F6  6A04               	clrf	(___xxtofl@val+3)^0,c
  2220  0015F8  0E00               	movlw	0
  2221  0015FA  EC05  F016         	call	___xxtofl
  2222  0015FE  C001  F013         	movff	?___xxtofl,___fldiv@a
  2223  001602  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  2224  001606  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  2225  00160A  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  2226  00160E  0100               	movlb	0	; () banked
  2227  001610  5189               	movf	detect_color@BG& (0+255),w,b
  2228  001612  2580               	addwf	detect_color@GG& (0+255),w,b
  2229  001614  6F74               	movwf	??_detect_color& (0+255),b
  2230  001616  518A               	movf	(detect_color@BG+1)& (0+255),w,b
  2231  001618  2181               	addwfc	(detect_color@GG+1)& (0+255),w,b
  2232  00161A  6F75               	movwf	(??_detect_color+1)& (0+255),b
  2233  00161C  C074  F001         	movff	??_detect_color,___xxtofl@val
  2234  001620  C075  F002         	movff	??_detect_color+1,___xxtofl@val+1
  2235  001624  6A03               	clrf	(___xxtofl@val+2)^0,c
  2236  001626  6A04               	clrf	(___xxtofl@val+3)^0,c
  2237  001628  0E00               	movlw	0
  2238  00162A  EC05  F016         	call	___xxtofl
  2239  00162E  C001  F00F         	movff	?___xxtofl,___fldiv@b
  2240  001632  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  2241  001636  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  2242  00163A  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  2243  00163E  ECC6  F012         	call	___fldiv	;wreg free
  2244  001642  C00F  F028         	movff	?___fldiv,___flmul@b
  2245  001646  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  2246  00164A  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  2247  00164E  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  2248  001652  0E00               	movlw	0
  2249  001654  6E2C               	movwf	___flmul@a^0,c
  2250  001656  0E00               	movlw	0
  2251  001658  6E2D               	movwf	(___flmul@a+1)^0,c
  2252  00165A  0E48               	movlw	72
  2253  00165C  6E2E               	movwf	(___flmul@a+2)^0,c
  2254  00165E  0E43               	movlw	67
  2255  001660  6E2F               	movwf	(___flmul@a+3)^0,c
  2256  001662  ECDA  F00E         	call	___flmul	;wreg free
  2257  001666  C028  F08B         	movff	?___flmul,_detect_color$2688
  2258  00166A  C029  F08C         	movff	?___flmul+1,_detect_color$2688+1
  2259  00166E  C02A  F08D         	movff	?___flmul+2,_detect_color$2688+2
  2260  001672  C02B  F08E         	movff	?___flmul+3,_detect_color$2688+3
  2261                           
  2262                           ;color.c: 250:         if (compare(0, lroundf((float)(GG + BG)/BB * 200), 391)){color = 
      +                          3;}
  2263  001676  0E00               	movlw	0
  2264  001678  0100               	movlb	0	; () banked
  2265  00167A  6F6B               	movwf	(compare@lower+1)& (0+255),b
  2266  00167C  0E00               	movlw	0
  2267  00167E  6F6A               	movwf	compare@lower& (0+255),b
  2268  001680  C08B  F066         	movff	_detect_color$2688,lroundf@x
  2269  001684  C08C  F067         	movff	_detect_color$2688+1,lroundf@x+1
  2270  001688  C08D  F068         	movff	_detect_color$2688+2,lroundf@x+2
  2271  00168C  C08E  F069         	movff	_detect_color$2688+3,lroundf@x+3
  2272  001690  ECE2  F01E         	call	_lroundf	;wreg free
  2273  001694  C066  F06C         	movff	?_lroundf,compare@value2compare
  2274  001698  C067  F06D         	movff	?_lroundf+1,compare@value2compare+1
  2275  00169C  0E01               	movlw	1
  2276  00169E  0100               	movlb	0	; () banked
  2277  0016A0  6F6F               	movwf	(compare@upper+1)& (0+255),b
  2278  0016A2  0E87               	movlw	135
  2279  0016A4  6F6E               	movwf	compare@upper& (0+255),b
  2280  0016A6  ECFF  F01E         	call	_compare	;wreg free
  2281  0016AA  0900               	iorlw	0
  2282  0016AC  B4D8               	btfsc	status,2,c
  2283  0016AE  EF5B  F00B         	goto	u3971
  2284  0016B2  EF5D  F00B         	goto	u3970
  2285  0016B6                     u3971:
  2286  0016B6  EF62  F00B         	goto	l4101
  2287  0016BA                     u3970:
  2288  0016BA  0E03               	movlw	3
  2289  0016BC  0100               	movlb	0	; () banked
  2290  0016BE  6F86               	movwf	detect_color@color& (0+255),b
  2291  0016C0  EF16  F00C         	goto	l4121
  2292  0016C4                     l4101:
  2293  0016C4  0E02               	movlw	2
  2294  0016C6  0100               	movlb	0	; () banked
  2295  0016C8  6F86               	movwf	detect_color@color& (0+255),b
  2296  0016CA  EF16  F00C         	goto	l4121
  2297  0016CE                     l4103:
  2298                           
  2299                           ;color.c: 254:         if (compare(0, BG, 75)){
  2300  0016CE  0E00               	movlw	0
  2301  0016D0  0100               	movlb	0	; () banked
  2302  0016D2  6F6B               	movwf	(compare@lower+1)& (0+255),b
  2303  0016D4  0E00               	movlw	0
  2304  0016D6  6F6A               	movwf	compare@lower& (0+255),b
  2305  0016D8  C089  F06C         	movff	detect_color@BG,compare@value2compare
  2306  0016DC  C08A  F06D         	movff	detect_color@BG+1,compare@value2compare+1
  2307  0016E0  0E00               	movlw	0
  2308  0016E2  6F6F               	movwf	(compare@upper+1)& (0+255),b
  2309  0016E4  0E4B               	movlw	75
  2310  0016E6  6F6E               	movwf	compare@upper& (0+255),b
  2311  0016E8  ECFF  F01E         	call	_compare	;wreg free
  2312  0016EC  0900               	iorlw	0
  2313  0016EE  B4D8               	btfsc	status,2,c
  2314  0016F0  EF7C  F00B         	goto	u3981
  2315  0016F4  EF7E  F00B         	goto	u3980
  2316  0016F8                     u3981:
  2317  0016F8  EFE8  F00B         	goto	l4111
  2318  0016FC                     u3980:
  2319  0016FC                     
  2320                           ;color.c: 255:             if (compare(0, lroundf((float)RR/BG * 200), 313)){color = 6;}
  2321  0016FC  C089  F001         	movff	detect_color@BG,___xxtofl@val
  2322  001700  C08A  F002         	movff	detect_color@BG+1,___xxtofl@val+1
  2323  001704  6A03               	clrf	(___xxtofl@val+2)^0,c
  2324  001706  6A04               	clrf	(___xxtofl@val+3)^0,c
  2325  001708  0E00               	movlw	0
  2326  00170A  EC05  F016         	call	___xxtofl
  2327  00170E  C001  F013         	movff	?___xxtofl,___fldiv@a
  2328  001712  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  2329  001716  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  2330  00171A  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  2331  00171E  C082  F001         	movff	detect_color@RR,___xxtofl@val
  2332  001722  C083  F002         	movff	detect_color@RR+1,___xxtofl@val+1
  2333  001726  6A03               	clrf	(___xxtofl@val+2)^0,c
  2334  001728  6A04               	clrf	(___xxtofl@val+3)^0,c
  2335  00172A  0E00               	movlw	0
  2336  00172C  EC05  F016         	call	___xxtofl
  2337  001730  C001  F00F         	movff	?___xxtofl,___fldiv@b
  2338  001734  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  2339  001738  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  2340  00173C  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  2341  001740  ECC6  F012         	call	___fldiv	;wreg free
  2342  001744  C00F  F028         	movff	?___fldiv,___flmul@b
  2343  001748  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  2344  00174C  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  2345  001750  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  2346  001754  0E00               	movlw	0
  2347  001756  6E2C               	movwf	___flmul@a^0,c
  2348  001758  0E00               	movlw	0
  2349  00175A  6E2D               	movwf	(___flmul@a+1)^0,c
  2350  00175C  0E48               	movlw	72
  2351  00175E  6E2E               	movwf	(___flmul@a+2)^0,c
  2352  001760  0E43               	movlw	67
  2353  001762  6E2F               	movwf	(___flmul@a+3)^0,c
  2354  001764  ECDA  F00E         	call	___flmul	;wreg free
  2355  001768  C028  F08B         	movff	?___flmul,_detect_color$2688
  2356  00176C  C029  F08C         	movff	?___flmul+1,_detect_color$2688+1
  2357  001770  C02A  F08D         	movff	?___flmul+2,_detect_color$2688+2
  2358  001774  C02B  F08E         	movff	?___flmul+3,_detect_color$2688+3
  2359                           
  2360                           ;color.c: 255:             if (compare(0, lroundf((float)RR/BG * 200), 313)){color = 6;}
  2361  001778  0E00               	movlw	0
  2362  00177A  0100               	movlb	0	; () banked
  2363  00177C  6F6B               	movwf	(compare@lower+1)& (0+255),b
  2364  00177E  0E00               	movlw	0
  2365  001780  6F6A               	movwf	compare@lower& (0+255),b
  2366  001782  C08B  F066         	movff	_detect_color$2688,lroundf@x
  2367  001786  C08C  F067         	movff	_detect_color$2688+1,lroundf@x+1
  2368  00178A  C08D  F068         	movff	_detect_color$2688+2,lroundf@x+2
  2369  00178E  C08E  F069         	movff	_detect_color$2688+3,lroundf@x+3
  2370  001792  ECE2  F01E         	call	_lroundf	;wreg free
  2371  001796  C066  F06C         	movff	?_lroundf,compare@value2compare
  2372  00179A  C067  F06D         	movff	?_lroundf+1,compare@value2compare+1
  2373  00179E  0E01               	movlw	1
  2374  0017A0  0100               	movlb	0	; () banked
  2375  0017A2  6F6F               	movwf	(compare@upper+1)& (0+255),b
  2376  0017A4  0E39               	movlw	57
  2377  0017A6  6F6E               	movwf	compare@upper& (0+255),b
  2378  0017A8  ECFF  F01E         	call	_compare	;wreg free
  2379  0017AC  0900               	iorlw	0
  2380  0017AE  B4D8               	btfsc	status,2,c
  2381  0017B0  EFDC  F00B         	goto	u3991
  2382  0017B4  EFDE  F00B         	goto	u3990
  2383  0017B8                     u3991:
  2384  0017B8  EFE3  F00B         	goto	l4109
  2385  0017BC                     u3990:
  2386  0017BC  0E06               	movlw	6
  2387  0017BE  0100               	movlb	0	; () banked
  2388  0017C0  6F86               	movwf	detect_color@color& (0+255),b
  2389  0017C2  EF16  F00C         	goto	l4121
  2390  0017C6                     l4109:
  2391  0017C6  0E01               	movlw	1
  2392  0017C8  0100               	movlb	0	; () banked
  2393  0017CA  6F86               	movwf	detect_color@color& (0+255),b
  2394  0017CC  EF16  F00C         	goto	l4121
  2395  0017D0                     l4111:
  2396                           
  2397                           ;color.c: 259:             if (compare(0, BR, 85)){color = 7;}
  2398  0017D0  0E00               	movlw	0
  2399  0017D2  0100               	movlb	0	; () banked
  2400  0017D4  6F6B               	movwf	(compare@lower+1)& (0+255),b
  2401  0017D6  0E00               	movlw	0
  2402  0017D8  6F6A               	movwf	compare@lower& (0+255),b
  2403  0017DA  C087  F06C         	movff	detect_color@BR,compare@value2compare
  2404  0017DE  C088  F06D         	movff	detect_color@BR+1,compare@value2compare+1
  2405  0017E2  0E00               	movlw	0
  2406  0017E4  6F6F               	movwf	(compare@upper+1)& (0+255),b
  2407  0017E6  0E55               	movlw	85
  2408  0017E8  6F6E               	movwf	compare@upper& (0+255),b
  2409  0017EA  ECFF  F01E         	call	_compare	;wreg free
  2410  0017EE  0900               	iorlw	0
  2411  0017F0  B4D8               	btfsc	status,2,c
  2412  0017F2  EFFD  F00B         	goto	u4001
  2413  0017F6  EFFF  F00B         	goto	u4000
  2414  0017FA                     u4001:
  2415  0017FA  EF04  F00C         	goto	l4115
  2416  0017FE                     u4000:
  2417  0017FE  0E07               	movlw	7
  2418  001800  0100               	movlb	0	; () banked
  2419  001802  6F86               	movwf	detect_color@color& (0+255),b
  2420  001804  EF16  F00C         	goto	l4121
  2421  001808                     l4115:
  2422                           
  2423                           ;color.c: 261:                 if (BG < BB){color = 5;}
  2424  001808  0100               	movlb	0	; () banked
  2425  00180A  5184               	movf	detect_color@BB& (0+255),w,b
  2426  00180C  5D89               	subwf	detect_color@BG& (0+255),w,b
  2427  00180E  5185               	movf	(detect_color@BB+1)& (0+255),w,b
  2428  001810  598A               	subwfb	(detect_color@BG+1)& (0+255),w,b
  2429  001812  B0D8               	btfsc	status,0,c
  2430  001814  EF0E  F00C         	goto	u4011
  2431  001818  EF10  F00C         	goto	u4010
  2432  00181C                     u4011:
  2433  00181C  EF14  F00C         	goto	l4119
  2434  001820                     u4010:
  2435  001820                     
  2436                           ; BSR set to: 0
  2437  001820  0E05               	movlw	5
  2438  001822  6F86               	movwf	detect_color@color& (0+255),b
  2439  001824  EF16  F00C         	goto	l4121
  2440  001828                     l4119:
  2441                           
  2442                           ; BSR set to: 0
  2443  001828  0E04               	movlw	4
  2444  00182A  6F86               	movwf	detect_color@color& (0+255),b
  2445  00182C                     l4121:
  2446                           
  2447                           ; BSR set to: 0
  2448                           ;color.c: 267:     if (compare(95, BR, 105) && compare(95,BG,105)){color = 8;}
  2449  00182C  0E00               	movlw	0
  2450  00182E  6F6B               	movwf	(compare@lower+1)& (0+255),b
  2451  001830  0E5F               	movlw	95
  2452  001832  6F6A               	movwf	compare@lower& (0+255),b
  2453  001834  C087  F06C         	movff	detect_color@BR,compare@value2compare
  2454  001838  C088  F06D         	movff	detect_color@BR+1,compare@value2compare+1
  2455  00183C  0E00               	movlw	0
  2456  00183E  6F6F               	movwf	(compare@upper+1)& (0+255),b
  2457  001840  0E69               	movlw	105
  2458  001842  6F6E               	movwf	compare@upper& (0+255),b
  2459  001844  ECFF  F01E         	call	_compare	;wreg free
  2460  001848  0900               	iorlw	0
  2461  00184A  B4D8               	btfsc	status,2,c
  2462  00184C  EF2A  F00C         	goto	u4021
  2463  001850  EF2C  F00C         	goto	u4020
  2464  001854                     u4021:
  2465  001854  EF46  F00C         	goto	l4127
  2466  001858                     u4020:
  2467  001858  0E00               	movlw	0
  2468  00185A  0100               	movlb	0	; () banked
  2469  00185C  6F6B               	movwf	(compare@lower+1)& (0+255),b
  2470  00185E  0E5F               	movlw	95
  2471  001860  6F6A               	movwf	compare@lower& (0+255),b
  2472  001862  C089  F06C         	movff	detect_color@BG,compare@value2compare
  2473  001866  C08A  F06D         	movff	detect_color@BG+1,compare@value2compare+1
  2474  00186A  0E00               	movlw	0
  2475  00186C  6F6F               	movwf	(compare@upper+1)& (0+255),b
  2476  00186E  0E69               	movlw	105
  2477  001870  6F6E               	movwf	compare@upper& (0+255),b
  2478  001872  ECFF  F01E         	call	_compare	;wreg free
  2479  001876  0900               	iorlw	0
  2480  001878  B4D8               	btfsc	status,2,c
  2481  00187A  EF41  F00C         	goto	u4031
  2482  00187E  EF43  F00C         	goto	u4030
  2483  001882                     u4031:
  2484  001882  EF46  F00C         	goto	l4127
  2485  001886                     u4030:
  2486  001886  0E08               	movlw	8
  2487  001888  0100               	movlb	0	; () banked
  2488  00188A  6F86               	movwf	detect_color@color& (0+255),b
  2489  00188C                     l4127:
  2490                           
  2491                           ;color.c: 268:     if (compare(0, BR, 25) && compare(0,RR,90)){color = 9;}
  2492  00188C  0E00               	movlw	0
  2493  00188E  0100               	movlb	0	; () banked
  2494  001890  6F6B               	movwf	(compare@lower+1)& (0+255),b
  2495  001892  0E00               	movlw	0
  2496  001894  6F6A               	movwf	compare@lower& (0+255),b
  2497  001896  C087  F06C         	movff	detect_color@BR,compare@value2compare
  2498  00189A  C088  F06D         	movff	detect_color@BR+1,compare@value2compare+1
  2499  00189E  0E00               	movlw	0
  2500  0018A0  6F6F               	movwf	(compare@upper+1)& (0+255),b
  2501  0018A2  0E19               	movlw	25
  2502  0018A4  6F6E               	movwf	compare@upper& (0+255),b
  2503  0018A6  ECFF  F01E         	call	_compare	;wreg free
  2504  0018AA  0900               	iorlw	0
  2505  0018AC  B4D8               	btfsc	status,2,c
  2506  0018AE  EF5B  F00C         	goto	u4041
  2507  0018B2  EF5D  F00C         	goto	u4040
  2508  0018B6                     u4041:
  2509  0018B6  EF77  F00C         	goto	l130
  2510  0018BA                     u4040:
  2511  0018BA  0E00               	movlw	0
  2512  0018BC  0100               	movlb	0	; () banked
  2513  0018BE  6F6B               	movwf	(compare@lower+1)& (0+255),b
  2514  0018C0  0E00               	movlw	0
  2515  0018C2  6F6A               	movwf	compare@lower& (0+255),b
  2516  0018C4  C082  F06C         	movff	detect_color@RR,compare@value2compare
  2517  0018C8  C083  F06D         	movff	detect_color@RR+1,compare@value2compare+1
  2518  0018CC  0E00               	movlw	0
  2519  0018CE  6F6F               	movwf	(compare@upper+1)& (0+255),b
  2520  0018D0  0E5A               	movlw	90
  2521  0018D2  6F6E               	movwf	compare@upper& (0+255),b
  2522  0018D4  ECFF  F01E         	call	_compare	;wreg free
  2523  0018D8  0900               	iorlw	0
  2524  0018DA  B4D8               	btfsc	status,2,c
  2525  0018DC  EF72  F00C         	goto	u4051
  2526  0018E0  EF74  F00C         	goto	u4050
  2527  0018E4                     u4051:
  2528  0018E4  EF77  F00C         	goto	l130
  2529  0018E8                     u4050:
  2530  0018E8  0E09               	movlw	9
  2531  0018EA  0100               	movlb	0	; () banked
  2532  0018EC  6F86               	movwf	detect_color@color& (0+255),b
  2533  0018EE                     l130:
  2534                           
  2535                           ;color.c: 269:     return color;
  2536  0018EE  0100               	movlb	0	; () banked
  2537  0018F0  5186               	movf	detect_color@color& (0+255),w,b
  2538  0018F2                     
  2539                           ; BSR set to: 0
  2540  0018F2  0012               	return		;funcret
  2541  0018F4                     __end_of_detect_color:
  2542                           	callstack 0
  2543                           
  2544 ;; *************** function _lroundf *****************
  2545 ;; Defined at:
  2546 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\lroundf.c"
  2547 ;; Parameters:    Size  Location     Type
  2548 ;;  x               4    6[BANK0 ] float 
  2549 ;; Auto vars:     Size  Location     Type
  2550 ;;		None
  2551 ;; Return value:  Size  Location     Type
  2552 ;;                  4    6[BANK0 ] long 
  2553 ;; Registers used:
  2554 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2555 ;; Tracked objects:
  2556 ;;		On entry : 0/0
  2557 ;;		On exit  : 0/0
  2558 ;;		Unchanged: 0/0
  2559 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2560 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2561 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2562 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2563 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2564 ;;Total ram usage:        4 bytes
  2565 ;; Hardware stack levels used: 1
  2566 ;; Hardware stack levels required when called: 3
  2567 ;; This function calls:
  2568 ;;		___fltol
  2569 ;;		_roundf
  2570 ;; This function is called by:
  2571 ;;		_detect_color
  2572 ;;		_check_color_reading
  2573 ;; This function uses a non-reentrant model
  2574 ;;
  2575                           
  2576                           	psect	text5
  2577  003DC4                     __ptext5:
  2578                           	callstack 0
  2579  003DC4                     _lroundf:
  2580                           	callstack 26
  2581  003DC4  C066  F041         	movff	lroundf@x,roundf@x
  2582  003DC8  C067  F042         	movff	lroundf@x+1,roundf@x+1
  2583  003DCC  C068  F043         	movff	lroundf@x+2,roundf@x+2
  2584  003DD0  C069  F044         	movff	lroundf@x+3,roundf@x+3
  2585  003DD4  ECEF  F010         	call	_roundf	;wreg free
  2586  003DD8  C041  F05B         	movff	?_roundf,___fltol@f1
  2587  003DDC  C042  F05C         	movff	?_roundf+1,___fltol@f1+1
  2588  003DE0  C043  F05D         	movff	?_roundf+2,___fltol@f1+2
  2589  003DE4  C044  F05E         	movff	?_roundf+3,___fltol@f1+3
  2590  003DE8  ECFA  F019         	call	___fltol	;wreg free
  2591  003DEC  C05B  F066         	movff	?___fltol,?_lroundf
  2592  003DF0  C05C  F067         	movff	?___fltol+1,?_lroundf+1
  2593  003DF4  C05D  F068         	movff	?___fltol+2,?_lroundf+2
  2594  003DF8  C05E  F069         	movff	?___fltol+3,?_lroundf+3
  2595  003DFC  0012               	return		;funcret
  2596  003DFE                     __end_of_lroundf:
  2597                           	callstack 0
  2598                           
  2599 ;; *************** function _roundf *****************
  2600 ;; Defined at:
  2601 ;;		line 12 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\roundf.c"
  2602 ;; Parameters:    Size  Location     Type
  2603 ;;  x               4   64[COMRAM] float 
  2604 ;; Auto vars:     Size  Location     Type
  2605 ;;  y               4   86[COMRAM] float 
  2606 ;;  u               4   82[COMRAM] struct .
  2607 ;;  e               2   76[COMRAM] int 
  2608 ;; Return value:  Size  Location     Type
  2609 ;;                  4   64[COMRAM] float 
  2610 ;; Registers used:
  2611 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2612 ;; Tracked objects:
  2613 ;;		On entry : 0/0
  2614 ;;		On exit  : 0/0
  2615 ;;		Unchanged: 0/0
  2616 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2617 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2618 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2619 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2620 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2621 ;;Total ram usage:       26 bytes
  2622 ;; Hardware stack levels used: 1
  2623 ;; Hardware stack levels required when called: 2
  2624 ;; This function calls:
  2625 ;;		___fladd
  2626 ;;		___flge
  2627 ;;		___flmul
  2628 ;;		___flneg
  2629 ;;		___flsub
  2630 ;; This function is called by:
  2631 ;;		_lroundf
  2632 ;; This function uses a non-reentrant model
  2633 ;;
  2634                           
  2635                           	psect	text6
  2636  0021DE                     __ptext6:
  2637                           	callstack 0
  2638  0021DE                     _roundf:
  2639                           	callstack 26
  2640  0021DE  C0E6  F053         	movff	roundf@F527,roundf@u
  2641  0021E2  C0E7  F054         	movff	roundf@F527+1,roundf@u+1
  2642  0021E6  C0E8  F055         	movff	roundf@F527+2,roundf@u+2
  2643  0021EA  C0E9  F056         	movff	roundf@F527+3,roundf@u+3
  2644  0021EE  C041  F053         	movff	roundf@x,roundf@u
  2645  0021F2  C042  F054         	movff	roundf@x+1,roundf@u+1
  2646  0021F6  C043  F055         	movff	roundf@x+2,roundf@u+2
  2647  0021FA  C044  F056         	movff	roundf@x+3,roundf@u+3
  2648  0021FE  C053  F045         	movff	roundf@u,??_roundf
  2649  002202  C054  F046         	movff	roundf@u+1,??_roundf+1
  2650  002206  C055  F047         	movff	roundf@u+2,??_roundf+2
  2651  00220A  C056  F048         	movff	roundf@u+3,??_roundf+3
  2652  00220E  0E18               	movlw	24
  2653  002210  EF0F  F011         	goto	u3360
  2654  002214                     u3365:
  2655  002214  90D8               	bcf	status,0,c
  2656  002216  3248               	rrcf	(??_roundf+3)^0,f,c
  2657  002218  3247               	rrcf	(??_roundf+2)^0,f,c
  2658  00221A  3246               	rrcf	(??_roundf+1)^0,f,c
  2659  00221C  3245               	rrcf	??_roundf^0,f,c
  2660  00221E                     u3360:
  2661  00221E  2EE8               	decfsz	wreg,f,c
  2662  002220  EF0A  F011         	goto	u3365
  2663  002224  5045               	movf	??_roundf^0,w,c
  2664  002226  6E4D               	movwf	roundf@e^0,c
  2665  002228  6A4E               	clrf	(roundf@e+1)^0,c
  2666  00222A  BE4E               	btfsc	(roundf@e+1)^0,7,c
  2667  00222C  EF21  F011         	goto	u3371
  2668  002230  504E               	movf	(roundf@e+1)^0,w,c
  2669  002232  E109               	bnz	u3370
  2670  002234  0E96               	movlw	150
  2671  002236  5C4D               	subwf	roundf@e^0,w,c
  2672  002238  A0D8               	btfss	status,0,c
  2673  00223A  EF21  F011         	goto	u3371
  2674  00223E  EF23  F011         	goto	u3370
  2675  002242                     u3371:
  2676  002242  EF2D  F011         	goto	l3631
  2677  002246                     u3370:
  2678  002246  C041  F041         	movff	roundf@x,?_roundf
  2679  00224A  C042  F042         	movff	roundf@x+1,?_roundf+1
  2680  00224E  C043  F043         	movff	roundf@x+2,?_roundf+2
  2681  002252  C044  F044         	movff	roundf@x+3,?_roundf+3
  2682  002256  EFC5  F012         	goto	l1314
  2683  00225A                     l3631:
  2684  00225A  C053  F045         	movff	roundf@u,??_roundf
  2685  00225E  C054  F046         	movff	roundf@u+1,??_roundf+1
  2686  002262  C055  F047         	movff	roundf@u+2,??_roundf+2
  2687  002266  C056  F048         	movff	roundf@u+3,??_roundf+3
  2688  00226A  0E20               	movlw	32
  2689  00226C  EF3D  F011         	goto	u3380
  2690  002270                     u3385:
  2691  002270  90D8               	bcf	status,0,c
  2692  002272  3248               	rrcf	(??_roundf+3)^0,f,c
  2693  002274  3247               	rrcf	(??_roundf+2)^0,f,c
  2694  002276  3246               	rrcf	(??_roundf+1)^0,f,c
  2695  002278  3245               	rrcf	??_roundf^0,f,c
  2696  00227A                     u3380:
  2697  00227A  2EE8               	decfsz	wreg,f,c
  2698  00227C  EF38  F011         	goto	u3385
  2699  002280  5045               	movf	??_roundf^0,w,c
  2700  002282  1046               	iorwf	(??_roundf+1)^0,w,c
  2701  002284  1047               	iorwf	(??_roundf+2)^0,w,c
  2702  002286  1048               	iorwf	(??_roundf+3)^0,w,c
  2703  002288  B4D8               	btfsc	status,2,c
  2704  00228A  EF49  F011         	goto	u3391
  2705  00228E  EF4B  F011         	goto	u3390
  2706  002292                     u3391:
  2707  002292  EF5D  F011         	goto	l3635
  2708  002296                     u3390:
  2709  002296  C041  F001         	movff	roundf@x,___flneg@f1
  2710  00229A  C042  F002         	movff	roundf@x+1,___flneg@f1+1
  2711  00229E  C043  F003         	movff	roundf@x+2,___flneg@f1+2
  2712  0022A2  C044  F004         	movff	roundf@x+3,___flneg@f1+3
  2713  0022A6  EC38  F01F         	call	___flneg	;wreg free
  2714  0022AA  C001  F041         	movff	?___flneg,roundf@x
  2715  0022AE  C002  F042         	movff	?___flneg+1,roundf@x+1
  2716  0022B2  C003  F043         	movff	?___flneg+2,roundf@x+2
  2717  0022B6  C004  F044         	movff	?___flneg+3,roundf@x+3
  2718  0022BA                     l3635:
  2719  0022BA  BE4E               	btfsc	(roundf@e+1)^0,7,c
  2720  0022BC  EF6B  F011         	goto	u3400
  2721  0022C0  504E               	movf	(roundf@e+1)^0,w,c
  2722  0022C2  E107               	bnz	u3401
  2723  0022C4  0E7E               	movlw	126
  2724  0022C6  5C4D               	subwf	roundf@e^0,w,c
  2725  0022C8  B0D8               	btfsc	status,0,c
  2726  0022CA  EF69  F011         	goto	u3401
  2727  0022CE  EF6B  F011         	goto	u3400
  2728  0022D2                     u3401:
  2729  0022D2  EF87  F011         	goto	l3641
  2730  0022D6                     u3400:
  2731  0022D6  C053  F028         	movff	roundf@u,___flmul@b
  2732  0022DA  C054  F029         	movff	roundf@u+1,___flmul@b+1
  2733  0022DE  C055  F02A         	movff	roundf@u+2,___flmul@b+2
  2734  0022E2  C056  F02B         	movff	roundf@u+3,___flmul@b+3
  2735  0022E6  0E00               	movlw	0
  2736  0022E8  6E2C               	movwf	___flmul@a^0,c
  2737  0022EA  0E00               	movlw	0
  2738  0022EC  6E2D               	movwf	(___flmul@a+1)^0,c
  2739  0022EE  0E00               	movlw	0
  2740  0022F0  6E2E               	movwf	(___flmul@a+2)^0,c
  2741  0022F2  0E00               	movlw	0
  2742  0022F4  6E2F               	movwf	(___flmul@a+3)^0,c
  2743  0022F6  ECDA  F00E         	call	___flmul	;wreg free
  2744  0022FA  C028  F041         	movff	?___flmul,?_roundf
  2745  0022FE  C029  F042         	movff	?___flmul+1,?_roundf+1
  2746  002302  C02A  F043         	movff	?___flmul+2,?_roundf+2
  2747  002306  C02B  F044         	movff	?___flmul+3,?_roundf+3
  2748  00230A  EFC5  F012         	goto	l1314
  2749  00230E                     l3641:
  2750  00230E  0E00               	movlw	0
  2751  002310  6E05               	movwf	___fladd@a^0,c
  2752  002312  0E00               	movlw	0
  2753  002314  6E06               	movwf	(___fladd@a+1)^0,c
  2754  002316  0E00               	movlw	0
  2755  002318  6E07               	movwf	(___fladd@a+2)^0,c
  2756  00231A  0E4B               	movlw	75
  2757  00231C  6E08               	movwf	(___fladd@a+3)^0,c
  2758  00231E  C041  F001         	movff	roundf@x,___fladd@b
  2759  002322  C042  F002         	movff	roundf@x+1,___fladd@b+1
  2760  002326  C043  F003         	movff	roundf@x+2,___fladd@b+2
  2761  00232A  C044  F004         	movff	roundf@x+3,___fladd@b+3
  2762  00232E  EC7A  F00C         	call	___fladd	;wreg free
  2763  002332  C001  F04F         	movff	?___fladd,_roundf$2689
  2764  002336  C002  F050         	movff	?___fladd+1,_roundf$2689+1
  2765  00233A  C003  F051         	movff	?___fladd+2,_roundf$2689+2
  2766  00233E  C004  F052         	movff	?___fladd+3,_roundf$2689+3
  2767  002342  0E00               	movlw	0
  2768  002344  6E05               	movwf	___fladd@a^0,c
  2769  002346  0E00               	movlw	0
  2770  002348  6E06               	movwf	(___fladd@a+1)^0,c
  2771  00234A  0E00               	movlw	0
  2772  00234C  6E07               	movwf	(___fladd@a+2)^0,c
  2773  00234E  0ECB               	movlw	203
  2774  002350  6E08               	movwf	(___fladd@a+3)^0,c
  2775  002352  C04F  F001         	movff	_roundf$2689,___fladd@b
  2776  002356  C050  F002         	movff	_roundf$2689+1,___fladd@b+1
  2777  00235A  C051  F003         	movff	_roundf$2689+2,___fladd@b+2
  2778  00235E  C052  F004         	movff	_roundf$2689+3,___fladd@b+3
  2779  002362  EC7A  F00C         	call	___fladd	;wreg free
  2780  002366  C001  F049         	movff	?___fladd,_roundf$2690
  2781  00236A  C002  F04A         	movff	?___fladd+1,_roundf$2690+1
  2782  00236E  C003  F04B         	movff	?___fladd+2,_roundf$2690+2
  2783  002372  C004  F04C         	movff	?___fladd+3,_roundf$2690+3
  2784  002376  C049  F011         	movff	_roundf$2690,___flsub@b
  2785  00237A  C04A  F012         	movff	_roundf$2690+1,___flsub@b+1
  2786  00237E  C04B  F013         	movff	_roundf$2690+2,___flsub@b+2
  2787  002382  C04C  F014         	movff	_roundf$2690+3,___flsub@b+3
  2788  002386  C041  F015         	movff	roundf@x,___flsub@a
  2789  00238A  C042  F016         	movff	roundf@x+1,___flsub@a+1
  2790  00238E  C043  F017         	movff	roundf@x+2,___flsub@a+2
  2791  002392  C044  F018         	movff	roundf@x+3,___flsub@a+3
  2792  002396  EC3B  F01E         	call	___flsub	;wreg free
  2793  00239A  C011  F057         	movff	?___flsub,roundf@y
  2794  00239E  C012  F058         	movff	?___flsub+1,roundf@y+1
  2795  0023A2  C013  F059         	movff	?___flsub+2,roundf@y+2
  2796  0023A6  C014  F05A         	movff	?___flsub+3,roundf@y+3
  2797  0023AA  0E00               	movlw	0
  2798  0023AC  6E01               	movwf	___flge@ff1^0,c
  2799  0023AE  0E00               	movlw	0
  2800  0023B0  6E02               	movwf	(___flge@ff1+1)^0,c
  2801  0023B2  0E00               	movlw	0
  2802  0023B4  6E03               	movwf	(___flge@ff1+2)^0,c
  2803  0023B6  0E3F               	movlw	63
  2804  0023B8  6E04               	movwf	(___flge@ff1+3)^0,c
  2805  0023BA  C057  F005         	movff	roundf@y,___flge@ff2
  2806  0023BE  C058  F006         	movff	roundf@y+1,___flge@ff2+1
  2807  0023C2  C059  F007         	movff	roundf@y+2,___flge@ff2+2
  2808  0023C6  C05A  F008         	movff	roundf@y+3,___flge@ff2+3
  2809  0023CA  EC7E  F01A         	call	___flge	;wreg free
  2810  0023CE  B0D8               	btfsc	status,0,c
  2811  0023D0  EFEC  F011         	goto	u3411
  2812  0023D4  EFEE  F011         	goto	u3410
  2813  0023D8                     u3411:
  2814  0023D8  EF24  F012         	goto	l3645
  2815  0023DC                     u3410:
  2816  0023DC  C041  F005         	movff	roundf@x,___fladd@a
  2817  0023E0  C042  F006         	movff	roundf@x+1,___fladd@a+1
  2818  0023E4  C043  F007         	movff	roundf@x+2,___fladd@a+2
  2819  0023E8  C044  F008         	movff	roundf@x+3,___fladd@a+3
  2820  0023EC  C057  F001         	movff	roundf@y,___fladd@b
  2821  0023F0  C058  F002         	movff	roundf@y+1,___fladd@b+1
  2822  0023F4  C059  F003         	movff	roundf@y+2,___fladd@b+2
  2823  0023F8  C05A  F004         	movff	roundf@y+3,___fladd@b+3
  2824  0023FC  EC7A  F00C         	call	___fladd	;wreg free
  2825  002400  C001  F04F         	movff	?___fladd,_roundf$2689
  2826  002404  C002  F050         	movff	?___fladd+1,_roundf$2689+1
  2827  002408  C003  F051         	movff	?___fladd+2,_roundf$2689+2
  2828  00240C  C004  F052         	movff	?___fladd+3,_roundf$2689+3
  2829  002410  C04F  F001         	movff	_roundf$2689,___fladd@b
  2830  002414  C050  F002         	movff	_roundf$2689+1,___fladd@b+1
  2831  002418  C051  F003         	movff	_roundf$2689+2,___fladd@b+2
  2832  00241C  C052  F004         	movff	_roundf$2689+3,___fladd@b+3
  2833  002420  0E00               	movlw	0
  2834  002422  6E05               	movwf	___fladd@a^0,c
  2835  002424  0E00               	movlw	0
  2836  002426  6E06               	movwf	(___fladd@a+1)^0,c
  2837  002428  0E80               	movlw	128
  2838  00242A  6E07               	movwf	(___fladd@a+2)^0,c
  2839  00242C  0EBF               	movlw	191
  2840  00242E  6E08               	movwf	(___fladd@a+3)^0,c
  2841  002430  EC7A  F00C         	call	___fladd	;wreg free
  2842  002434  C001  F057         	movff	?___fladd,roundf@y
  2843  002438  C002  F058         	movff	?___fladd+1,roundf@y+1
  2844  00243C  C003  F059         	movff	?___fladd+2,roundf@y+2
  2845  002440  C004  F05A         	movff	?___fladd+3,roundf@y+3
  2846  002444  EF8D  F012         	goto	l3651
  2847  002448                     l3645:
  2848  002448  0E00               	movlw	0
  2849  00244A  6E01               	movwf	___flge@ff1^0,c
  2850  00244C  0E00               	movlw	0
  2851  00244E  6E02               	movwf	(___flge@ff1+1)^0,c
  2852  002450  0E00               	movlw	0
  2853  002452  6E03               	movwf	(___flge@ff1+2)^0,c
  2854  002454  0EBF               	movlw	191
  2855  002456  6E04               	movwf	(___flge@ff1+3)^0,c
  2856  002458  C057  F005         	movff	roundf@y,___flge@ff2
  2857  00245C  C058  F006         	movff	roundf@y+1,___flge@ff2+1
  2858  002460  C059  F007         	movff	roundf@y+2,___flge@ff2+2
  2859  002464  C05A  F008         	movff	roundf@y+3,___flge@ff2+3
  2860  002468  EC7E  F01A         	call	___flge	;wreg free
  2861  00246C  A0D8               	btfss	status,0,c
  2862  00246E  EF3B  F012         	goto	u3421
  2863  002472  EF3D  F012         	goto	u3420
  2864  002476                     u3421:
  2865  002476  EF73  F012         	goto	l3649
  2866  00247A                     u3420:
  2867  00247A  C041  F005         	movff	roundf@x,___fladd@a
  2868  00247E  C042  F006         	movff	roundf@x+1,___fladd@a+1
  2869  002482  C043  F007         	movff	roundf@x+2,___fladd@a+2
  2870  002486  C044  F008         	movff	roundf@x+3,___fladd@a+3
  2871  00248A  C057  F001         	movff	roundf@y,___fladd@b
  2872  00248E  C058  F002         	movff	roundf@y+1,___fladd@b+1
  2873  002492  C059  F003         	movff	roundf@y+2,___fladd@b+2
  2874  002496  C05A  F004         	movff	roundf@y+3,___fladd@b+3
  2875  00249A  EC7A  F00C         	call	___fladd	;wreg free
  2876  00249E  C001  F04F         	movff	?___fladd,_roundf$2689
  2877  0024A2  C002  F050         	movff	?___fladd+1,_roundf$2689+1
  2878  0024A6  C003  F051         	movff	?___fladd+2,_roundf$2689+2
  2879  0024AA  C004  F052         	movff	?___fladd+3,_roundf$2689+3
  2880  0024AE  C04F  F001         	movff	_roundf$2689,___fladd@b
  2881  0024B2  C050  F002         	movff	_roundf$2689+1,___fladd@b+1
  2882  0024B6  C051  F003         	movff	_roundf$2689+2,___fladd@b+2
  2883  0024BA  C052  F004         	movff	_roundf$2689+3,___fladd@b+3
  2884  0024BE  0E00               	movlw	0
  2885  0024C0  6E05               	movwf	___fladd@a^0,c
  2886  0024C2  0E00               	movlw	0
  2887  0024C4  6E06               	movwf	(___fladd@a+1)^0,c
  2888  0024C6  0E80               	movlw	128
  2889  0024C8  6E07               	movwf	(___fladd@a+2)^0,c
  2890  0024CA  0E3F               	movlw	63
  2891  0024CC  6E08               	movwf	(___fladd@a+3)^0,c
  2892  0024CE  EC7A  F00C         	call	___fladd	;wreg free
  2893  0024D2  C001  F057         	movff	?___fladd,roundf@y
  2894  0024D6  C002  F058         	movff	?___fladd+1,roundf@y+1
  2895  0024DA  C003  F059         	movff	?___fladd+2,roundf@y+2
  2896  0024DE  C004  F05A         	movff	?___fladd+3,roundf@y+3
  2897  0024E2  EF8D  F012         	goto	l3651
  2898  0024E6                     l3649:
  2899  0024E6  C057  F001         	movff	roundf@y,___fladd@b
  2900  0024EA  C058  F002         	movff	roundf@y+1,___fladd@b+1
  2901  0024EE  C059  F003         	movff	roundf@y+2,___fladd@b+2
  2902  0024F2  C05A  F004         	movff	roundf@y+3,___fladd@b+3
  2903  0024F6  C041  F005         	movff	roundf@x,___fladd@a
  2904  0024FA  C042  F006         	movff	roundf@x+1,___fladd@a+1
  2905  0024FE  C043  F007         	movff	roundf@x+2,___fladd@a+2
  2906  002502  C044  F008         	movff	roundf@x+3,___fladd@a+3
  2907  002506  EC7A  F00C         	call	___fladd	;wreg free
  2908  00250A  C001  F057         	movff	?___fladd,roundf@y
  2909  00250E  C002  F058         	movff	?___fladd+1,roundf@y+1
  2910  002512  C003  F059         	movff	?___fladd+2,roundf@y+2
  2911  002516  C004  F05A         	movff	?___fladd+3,roundf@y+3
  2912  00251A                     l3651:
  2913  00251A  C053  F045         	movff	roundf@u,??_roundf
  2914  00251E  C054  F046         	movff	roundf@u+1,??_roundf+1
  2915  002522  C055  F047         	movff	roundf@u+2,??_roundf+2
  2916  002526  C056  F048         	movff	roundf@u+3,??_roundf+3
  2917  00252A  0E20               	movlw	32
  2918  00252C  EF9D  F012         	goto	u3430
  2919  002530                     u3435:
  2920  002530  90D8               	bcf	status,0,c
  2921  002532  3248               	rrcf	(??_roundf+3)^0,f,c
  2922  002534  3247               	rrcf	(??_roundf+2)^0,f,c
  2923  002536  3246               	rrcf	(??_roundf+1)^0,f,c
  2924  002538  3245               	rrcf	??_roundf^0,f,c
  2925  00253A                     u3430:
  2926  00253A  2EE8               	decfsz	wreg,f,c
  2927  00253C  EF98  F012         	goto	u3435
  2928  002540  5045               	movf	??_roundf^0,w,c
  2929  002542  1046               	iorwf	(??_roundf+1)^0,w,c
  2930  002544  1047               	iorwf	(??_roundf+2)^0,w,c
  2931  002546  1048               	iorwf	(??_roundf+3)^0,w,c
  2932  002548  B4D8               	btfsc	status,2,c
  2933  00254A  EFA9  F012         	goto	u3441
  2934  00254E  EFAB  F012         	goto	u3440
  2935  002552                     u3441:
  2936  002552  EFBD  F012         	goto	l3655
  2937  002556                     u3440:
  2938  002556  C057  F001         	movff	roundf@y,___flneg@f1
  2939  00255A  C058  F002         	movff	roundf@y+1,___flneg@f1+1
  2940  00255E  C059  F003         	movff	roundf@y+2,___flneg@f1+2
  2941  002562  C05A  F004         	movff	roundf@y+3,___flneg@f1+3
  2942  002566  EC38  F01F         	call	___flneg	;wreg free
  2943  00256A  C001  F057         	movff	?___flneg,roundf@y
  2944  00256E  C002  F058         	movff	?___flneg+1,roundf@y+1
  2945  002572  C003  F059         	movff	?___flneg+2,roundf@y+2
  2946  002576  C004  F05A         	movff	?___flneg+3,roundf@y+3
  2947  00257A                     l3655:
  2948  00257A  C057  F041         	movff	roundf@y,?_roundf
  2949  00257E  C058  F042         	movff	roundf@y+1,?_roundf+1
  2950  002582  C059  F043         	movff	roundf@y+2,?_roundf+2
  2951  002586  C05A  F044         	movff	roundf@y+3,?_roundf+3
  2952  00258A                     l1314:
  2953  00258A  0012               	return		;funcret
  2954  00258C                     __end_of_roundf:
  2955                           	callstack 0
  2956                           
  2957 ;; *************** function ___flsub *****************
  2958 ;; Defined at:
  2959 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\sprcadd.c"
  2960 ;; Parameters:    Size  Location     Type
  2961 ;;  b               4   16[COMRAM] float 
  2962 ;;  a               4   20[COMRAM] float 
  2963 ;; Auto vars:     Size  Location     Type
  2964 ;;		None
  2965 ;; Return value:  Size  Location     Type
  2966 ;;                  4   16[COMRAM] float 
  2967 ;; Registers used:
  2968 ;;		wreg, status,2, status,0, cstack
  2969 ;; Tracked objects:
  2970 ;;		On entry : 0/0
  2971 ;;		On exit  : 0/0
  2972 ;;		Unchanged: 0/0
  2973 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2974 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2975 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2976 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2977 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2978 ;;Total ram usage:        8 bytes
  2979 ;; Hardware stack levels used: 1
  2980 ;; Hardware stack levels required when called: 1
  2981 ;; This function calls:
  2982 ;;		___fladd
  2983 ;; This function is called by:
  2984 ;;		_roundf
  2985 ;; This function uses a non-reentrant model
  2986 ;;
  2987                           
  2988                           	psect	text7
  2989  003C76                     __ptext7:
  2990                           	callstack 0
  2991  003C76                     ___flsub:
  2992                           	callstack 26
  2993  003C76  0E00               	movlw	0
  2994  003C78  1A15               	xorwf	___flsub@a^0,f,c
  2995  003C7A  0E00               	movlw	0
  2996  003C7C  1A16               	xorwf	(___flsub@a+1)^0,f,c
  2997  003C7E  0E00               	movlw	0
  2998  003C80  1A17               	xorwf	(___flsub@a+2)^0,f,c
  2999  003C82  0E80               	movlw	128
  3000  003C84  1A18               	xorwf	(___flsub@a+3)^0,f,c
  3001  003C86  C011  F001         	movff	___flsub@b,___fladd@b
  3002  003C8A  C012  F002         	movff	___flsub@b+1,___fladd@b+1
  3003  003C8E  C013  F003         	movff	___flsub@b+2,___fladd@b+2
  3004  003C92  C014  F004         	movff	___flsub@b+3,___fladd@b+3
  3005  003C96  C015  F005         	movff	___flsub@a,___fladd@a
  3006  003C9A  C016  F006         	movff	___flsub@a+1,___fladd@a+1
  3007  003C9E  C017  F007         	movff	___flsub@a+2,___fladd@a+2
  3008  003CA2  C018  F008         	movff	___flsub@a+3,___fladd@a+3
  3009  003CA6  EC7A  F00C         	call	___fladd	;wreg free
  3010  003CAA  C001  F011         	movff	?___fladd,?___flsub
  3011  003CAE  C002  F012         	movff	?___fladd+1,?___flsub+1
  3012  003CB2  C003  F013         	movff	?___fladd+2,?___flsub+2
  3013  003CB6  C004  F014         	movff	?___fladd+3,?___flsub+3
  3014  003CBA  0012               	return		;funcret
  3015  003CBC                     __end_of___flsub:
  3016                           	callstack 0
  3017                           
  3018 ;; *************** function ___fladd *****************
  3019 ;; Defined at:
  3020 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\sprcadd.c"
  3021 ;; Parameters:    Size  Location     Type
  3022 ;;  b               4    0[COMRAM] float 
  3023 ;;  a               4    4[COMRAM] float 
  3024 ;; Auto vars:     Size  Location     Type
  3025 ;;  grs             1   15[COMRAM] unsigned char 
  3026 ;;  bexp            1   14[COMRAM] unsigned char 
  3027 ;;  aexp            1   13[COMRAM] unsigned char 
  3028 ;;  signs           1   12[COMRAM] unsigned char 
  3029 ;; Return value:  Size  Location     Type
  3030 ;;                  4    0[COMRAM] unsigned char 
  3031 ;; Registers used:
  3032 ;;		wreg, status,2, status,0
  3033 ;; Tracked objects:
  3034 ;;		On entry : 0/0
  3035 ;;		On exit  : 0/0
  3036 ;;		Unchanged: 0/0
  3037 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3038 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3039 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3040 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3041 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3042 ;;Total ram usage:       16 bytes
  3043 ;; Hardware stack levels used: 1
  3044 ;; This function calls:
  3045 ;;		Nothing
  3046 ;; This function is called by:
  3047 ;;		___flsub
  3048 ;;		_roundf
  3049 ;; This function uses a non-reentrant model
  3050 ;;
  3051                           
  3052                           	psect	text8
  3053  0018F4                     __ptext8:
  3054                           	callstack 0
  3055  0018F4                     ___fladd:
  3056                           	callstack 26
  3057  0018F4  5004               	movf	(___fladd@b+3)^0,w,c
  3058  0018F6  0B80               	andlw	128
  3059  0018F8  6E0D               	movwf	___fladd@signs^0,c
  3060  0018FA  5004               	movf	(___fladd@b+3)^0,w,c
  3061  0018FC  2404               	addwf	(___fladd@b+3)^0,w,c
  3062  0018FE  6E0F               	movwf	___fladd@bexp^0,c
  3063  001900  AE03               	btfss	(___fladd@b+2)^0,7,c
  3064  001902  EF85  F00C         	goto	u2551
  3065  001906  EF87  F00C         	goto	u2550
  3066  00190A                     u2551:
  3067  00190A  EF88  F00C         	goto	l3081
  3068  00190E                     u2550:
  3069  00190E  800F               	bsf	___fladd@bexp^0,0,c
  3070  001910                     l3081:
  3071  001910  500F               	movf	___fladd@bexp^0,w,c
  3072  001912  B4D8               	btfsc	status,2,c
  3073  001914  EF8E  F00C         	goto	u2561
  3074  001918  EF90  F00C         	goto	u2560
  3075  00191C                     u2561:
  3076  00191C  EFA5  F00C         	goto	l3091
  3077  001920                     u2560:
  3078  001920  280F               	incf	___fladd@bexp^0,w,c
  3079  001922  A4D8               	btfss	status,2,c
  3080  001924  EF96  F00C         	goto	u2571
  3081  001928  EF98  F00C         	goto	u2570
  3082  00192C                     u2571:
  3083  00192C  EFA0  F00C         	goto	l3087
  3084  001930                     u2570:
  3085  001930  0E00               	movlw	0
  3086  001932  6E01               	movwf	___fladd@b^0,c
  3087  001934  0E00               	movlw	0
  3088  001936  6E02               	movwf	(___fladd@b+1)^0,c
  3089  001938  0E00               	movlw	0
  3090  00193A  6E03               	movwf	(___fladd@b+2)^0,c
  3091  00193C  0E00               	movlw	0
  3092  00193E  6E04               	movwf	(___fladd@b+3)^0,c
  3093  001940                     l3087:
  3094  001940  8E03               	bsf	(___fladd@b+2)^0,7,c
  3095  001942  0E00               	movlw	0
  3096  001944  6E04               	movwf	(___fladd@b+3)^0,c
  3097  001946  EFAD  F00C         	goto	l3093
  3098  00194A                     l3091:
  3099  00194A  0E00               	movlw	0
  3100  00194C  6E01               	movwf	___fladd@b^0,c
  3101  00194E  0E00               	movlw	0
  3102  001950  6E02               	movwf	(___fladd@b+1)^0,c
  3103  001952  0E00               	movlw	0
  3104  001954  6E03               	movwf	(___fladd@b+2)^0,c
  3105  001956  0E00               	movlw	0
  3106  001958  6E04               	movwf	(___fladd@b+3)^0,c
  3107  00195A                     l3093:
  3108  00195A  5008               	movf	(___fladd@a+3)^0,w,c
  3109  00195C  0B80               	andlw	128
  3110  00195E  6E0E               	movwf	___fladd@aexp^0,c
  3111  001960  500D               	movf	___fladd@signs^0,w,c
  3112  001962  180E               	xorwf	___fladd@aexp^0,w,c
  3113  001964  B4D8               	btfsc	status,2,c
  3114  001966  EFB7  F00C         	goto	u2581
  3115  00196A  EFB9  F00C         	goto	u2580
  3116  00196E                     u2581:
  3117  00196E  EFBA  F00C         	goto	l3099
  3118  001972                     u2580:
  3119  001972  8C0D               	bsf	___fladd@signs^0,6,c
  3120  001974                     l3099:
  3121  001974  5008               	movf	(___fladd@a+3)^0,w,c
  3122  001976  2408               	addwf	(___fladd@a+3)^0,w,c
  3123  001978  6E0E               	movwf	___fladd@aexp^0,c
  3124  00197A  AE07               	btfss	(___fladd@a+2)^0,7,c
  3125  00197C  EFC2  F00C         	goto	u2591
  3126  001980  EFC4  F00C         	goto	u2590
  3127  001984                     u2591:
  3128  001984  EFC5  F00C         	goto	l3105
  3129  001988                     u2590:
  3130  001988  800E               	bsf	___fladd@aexp^0,0,c
  3131  00198A                     l3105:
  3132  00198A  500E               	movf	___fladd@aexp^0,w,c
  3133  00198C  B4D8               	btfsc	status,2,c
  3134  00198E  EFCB  F00C         	goto	u2601
  3135  001992  EFCD  F00C         	goto	u2600
  3136  001996                     u2601:
  3137  001996  EFE2  F00C         	goto	l3115
  3138  00199A                     u2600:
  3139  00199A  280E               	incf	___fladd@aexp^0,w,c
  3140  00199C  A4D8               	btfss	status,2,c
  3141  00199E  EFD3  F00C         	goto	u2611
  3142  0019A2  EFD5  F00C         	goto	u2610
  3143  0019A6                     u2611:
  3144  0019A6  EFDD  F00C         	goto	l3111
  3145  0019AA                     u2610:
  3146  0019AA  0E00               	movlw	0
  3147  0019AC  6E05               	movwf	___fladd@a^0,c
  3148  0019AE  0E00               	movlw	0
  3149  0019B0  6E06               	movwf	(___fladd@a+1)^0,c
  3150  0019B2  0E00               	movlw	0
  3151  0019B4  6E07               	movwf	(___fladd@a+2)^0,c
  3152  0019B6  0E00               	movlw	0
  3153  0019B8  6E08               	movwf	(___fladd@a+3)^0,c
  3154  0019BA                     l3111:
  3155  0019BA  8E07               	bsf	(___fladd@a+2)^0,7,c
  3156  0019BC  0E00               	movlw	0
  3157  0019BE  6E08               	movwf	(___fladd@a+3)^0,c
  3158  0019C0  EFEA  F00C         	goto	l3117
  3159  0019C4                     l3115:
  3160  0019C4  0E00               	movlw	0
  3161  0019C6  6E05               	movwf	___fladd@a^0,c
  3162  0019C8  0E00               	movlw	0
  3163  0019CA  6E06               	movwf	(___fladd@a+1)^0,c
  3164  0019CC  0E00               	movlw	0
  3165  0019CE  6E07               	movwf	(___fladd@a+2)^0,c
  3166  0019D0  0E00               	movlw	0
  3167  0019D2  6E08               	movwf	(___fladd@a+3)^0,c
  3168  0019D4                     l3117:
  3169  0019D4  500F               	movf	___fladd@bexp^0,w,c
  3170  0019D6  5C0E               	subwf	___fladd@aexp^0,w,c
  3171  0019D8  B0D8               	btfsc	status,0,c
  3172  0019DA  EFF1  F00C         	goto	u2621
  3173  0019DE  EFF3  F00C         	goto	u2620
  3174  0019E2                     u2621:
  3175  0019E2  EF1A  F00D         	goto	l3153
  3176  0019E6                     u2620:
  3177  0019E6  AC0D               	btfss	___fladd@signs^0,6,c
  3178  0019E8  EFF8  F00C         	goto	u2631
  3179  0019EC  EFFA  F00C         	goto	u2630
  3180  0019F0                     u2631:
  3181  0019F0  EFFC  F00C         	goto	l3123
  3182  0019F4                     u2630:
  3183  0019F4  0E80               	movlw	128
  3184  0019F6  1A0D               	xorwf	___fladd@signs^0,f,c
  3185  0019F8                     l3123:
  3186  0019F8  C00F  F010         	movff	___fladd@bexp,___fladd@grs
  3187  0019FC  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  3188  001A00  C010  F00E         	movff	___fladd@grs,___fladd@aexp
  3189  001A04  C001  F010         	movff	___fladd@b,___fladd@grs
  3190  001A08  C005  F001         	movff	___fladd@a,___fladd@b
  3191  001A0C  C010  F005         	movff	___fladd@grs,___fladd@a
  3192  001A10  C002  F010         	movff	___fladd@b+1,___fladd@grs
  3193  001A14  C006  F002         	movff	___fladd@a+1,___fladd@b+1
  3194  001A18  C010  F006         	movff	___fladd@grs,___fladd@a+1
  3195  001A1C  C003  F010         	movff	___fladd@b+2,___fladd@grs
  3196  001A20  C007  F003         	movff	___fladd@a+2,___fladd@b+2
  3197  001A24  C010  F007         	movff	___fladd@grs,___fladd@a+2
  3198  001A28  C004  F010         	movff	___fladd@b+3,___fladd@grs
  3199  001A2C  C008  F004         	movff	___fladd@a+3,___fladd@b+3
  3200  001A30  C010  F008         	movff	___fladd@grs,___fladd@a+3
  3201  001A34                     l3153:
  3202  001A34  0E00               	movlw	0
  3203  001A36  6E10               	movwf	___fladd@grs^0,c
  3204  001A38  500F               	movf	___fladd@bexp^0,w,c
  3205  001A3A  C00E  F009         	movff	___fladd@aexp,??___fladd
  3206  001A3E  6A0A               	clrf	(??___fladd+1)^0,c
  3207  001A40  5E09               	subwf	??___fladd^0,f,c
  3208  001A42  0E00               	movlw	0
  3209  001A44  5A0A               	subwfb	(??___fladd+1)^0,f,c
  3210  001A46  BE0A               	btfsc	(??___fladd+1)^0,7,c
  3211  001A48  EF2F  F00D         	goto	u2641
  3212  001A4C  500A               	movf	(??___fladd+1)^0,w,c
  3213  001A4E  E109               	bnz	u2640
  3214  001A50  0E1A               	movlw	26
  3215  001A52  5C09               	subwf	??___fladd^0,w,c
  3216  001A54  A0D8               	btfss	status,0,c
  3217  001A56  EF2F  F00D         	goto	u2641
  3218  001A5A  EF31  F00D         	goto	u2640
  3219  001A5E                     u2641:
  3220  001A5E  EF68  F00D         	goto	l1050
  3221  001A62                     u2640:
  3222  001A62  5001               	movf	___fladd@b^0,w,c
  3223  001A64  1002               	iorwf	(___fladd@b+1)^0,w,c
  3224  001A66  1003               	iorwf	(___fladd@b+2)^0,w,c
  3225  001A68  1004               	iorwf	(___fladd@b+3)^0,w,c
  3226  001A6A  A4D8               	btfss	status,2,c
  3227  001A6C  EF3A  F00D         	goto	u2651
  3228  001A70  EF3D  F00D         	goto	u2650
  3229  001A74                     u2651:
  3230  001A74  0E01               	movlw	1
  3231  001A76  EF3E  F00D         	goto	u2660
  3232  001A7A                     u2650:
  3233  001A7A  0E00               	movlw	0
  3234  001A7C                     u2660:
  3235  001A7C  6E10               	movwf	___fladd@grs^0,c
  3236  001A7E  0E00               	movlw	0
  3237  001A80  6E01               	movwf	___fladd@b^0,c
  3238  001A82  0E00               	movlw	0
  3239  001A84  6E02               	movwf	(___fladd@b+1)^0,c
  3240  001A86  0E00               	movlw	0
  3241  001A88  6E03               	movwf	(___fladd@b+2)^0,c
  3242  001A8A  0E00               	movlw	0
  3243  001A8C  6E04               	movwf	(___fladd@b+3)^0,c
  3244  001A8E  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  3245  001A92  EF71  F00D         	goto	l1049
  3246  001A96                     l1051:
  3247  001A96  A010               	btfss	___fladd@grs^0,0,c
  3248  001A98  EF50  F00D         	goto	u2671
  3249  001A9C  EF52  F00D         	goto	u2670
  3250  001AA0                     u2671:
  3251  001AA0  EF58  F00D         	goto	l3165
  3252  001AA4                     u2670:
  3253  001AA4  90D8               	bcf	status,0,c
  3254  001AA6  3010               	rrcf	___fladd@grs^0,w,c
  3255  001AA8  0901               	iorlw	1
  3256  001AAA  6E10               	movwf	___fladd@grs^0,c
  3257  001AAC  EF5A  F00D         	goto	l3167
  3258  001AB0                     l3165:
  3259  001AB0  90D8               	bcf	status,0,c
  3260  001AB2  3210               	rrcf	___fladd@grs^0,f,c
  3261  001AB4                     l3167:
  3262  001AB4  A001               	btfss	___fladd@b^0,0,c
  3263  001AB6  EF5F  F00D         	goto	u2681
  3264  001ABA  EF61  F00D         	goto	u2680
  3265  001ABE                     u2681:
  3266  001ABE  EF62  F00D         	goto	l3171
  3267  001AC2                     u2680:
  3268  001AC2  8E10               	bsf	___fladd@grs^0,7,c
  3269  001AC4                     l3171:
  3270  001AC4  3404               	rlcf	(___fladd@b+3)^0,w,c
  3271  001AC6  3204               	rrcf	(___fladd@b+3)^0,f,c
  3272  001AC8  3203               	rrcf	(___fladd@b+2)^0,f,c
  3273  001ACA  3202               	rrcf	(___fladd@b+1)^0,f,c
  3274  001ACC  3201               	rrcf	___fladd@b^0,f,c
  3275  001ACE  2A0F               	incf	___fladd@bexp^0,f,c
  3276  001AD0                     l1050:
  3277  001AD0  500E               	movf	___fladd@aexp^0,w,c
  3278  001AD2  5C0F               	subwf	___fladd@bexp^0,w,c
  3279  001AD4  A0D8               	btfss	status,0,c
  3280  001AD6  EF6F  F00D         	goto	u2691
  3281  001ADA  EF71  F00D         	goto	u2690
  3282  001ADE                     u2691:
  3283  001ADE  EF4B  F00D         	goto	l1051
  3284  001AE2                     u2690:
  3285  001AE2                     l1049:
  3286  001AE2  BC0D               	btfsc	___fladd@signs^0,6,c
  3287  001AE4  EF76  F00D         	goto	u2701
  3288  001AE8  EF78  F00D         	goto	u2700
  3289  001AEC                     u2701:
  3290  001AEC  EFB8  F00D         	goto	l3199
  3291  001AF0                     u2700:
  3292  001AF0  500F               	movf	___fladd@bexp^0,w,c
  3293  001AF2  A4D8               	btfss	status,2,c
  3294  001AF4  EF7E  F00D         	goto	u2711
  3295  001AF8  EF80  F00D         	goto	u2710
  3296  001AFC                     u2711:
  3297  001AFC  EF8A  F00D         	goto	l3181
  3298  001B00                     u2710:
  3299  001B00  0E00               	movlw	0
  3300  001B02  6E01               	movwf	?___fladd^0,c
  3301  001B04  0E00               	movlw	0
  3302  001B06  6E02               	movwf	(?___fladd+1)^0,c
  3303  001B08  0E00               	movlw	0
  3304  001B0A  6E03               	movwf	(?___fladd+2)^0,c
  3305  001B0C  0E00               	movlw	0
  3306  001B0E  6E04               	movwf	(?___fladd+3)^0,c
  3307  001B10  EFD9  F00E         	goto	l1058
  3308  001B14                     l3181:
  3309  001B14  5005               	movf	___fladd@a^0,w,c
  3310  001B16  2601               	addwf	___fladd@b^0,f,c
  3311  001B18  5006               	movf	(___fladd@a+1)^0,w,c
  3312  001B1A  2202               	addwfc	(___fladd@b+1)^0,f,c
  3313  001B1C  5007               	movf	(___fladd@a+2)^0,w,c
  3314  001B1E  2203               	addwfc	(___fladd@b+2)^0,f,c
  3315  001B20  5008               	movf	(___fladd@a+3)^0,w,c
  3316  001B22  2204               	addwfc	(___fladd@b+3)^0,f,c
  3317  001B24  A004               	btfss	(___fladd@b+3)^0,0,c
  3318  001B26  EF97  F00D         	goto	u2721
  3319  001B2A  EF99  F00D         	goto	u2720
  3320  001B2E                     u2721:
  3321  001B2E  EF45  F00E         	goto	l3235
  3322  001B32                     u2720:
  3323  001B32  A010               	btfss	___fladd@grs^0,0,c
  3324  001B34  EF9E  F00D         	goto	u2731
  3325  001B38  EFA0  F00D         	goto	u2730
  3326  001B3C                     u2731:
  3327  001B3C  EFA6  F00D         	goto	l3189
  3328  001B40                     u2730:
  3329  001B40  90D8               	bcf	status,0,c
  3330  001B42  3010               	rrcf	___fladd@grs^0,w,c
  3331  001B44  0901               	iorlw	1
  3332  001B46  6E10               	movwf	___fladd@grs^0,c
  3333  001B48  EFA8  F00D         	goto	l3191
  3334  001B4C                     l3189:
  3335  001B4C  90D8               	bcf	status,0,c
  3336  001B4E  3210               	rrcf	___fladd@grs^0,f,c
  3337  001B50                     l3191:
  3338  001B50  A001               	btfss	___fladd@b^0,0,c
  3339  001B52  EFAD  F00D         	goto	u2741
  3340  001B56  EFAF  F00D         	goto	u2740
  3341  001B5A                     u2741:
  3342  001B5A  EFB0  F00D         	goto	l3195
  3343  001B5E                     u2740:
  3344  001B5E  8E10               	bsf	___fladd@grs^0,7,c
  3345  001B60                     l3195:
  3346  001B60  3404               	rlcf	(___fladd@b+3)^0,w,c
  3347  001B62  3204               	rrcf	(___fladd@b+3)^0,f,c
  3348  001B64  3203               	rrcf	(___fladd@b+2)^0,f,c
  3349  001B66  3202               	rrcf	(___fladd@b+1)^0,f,c
  3350  001B68  3201               	rrcf	___fladd@b^0,f,c
  3351  001B6A  2A0F               	incf	___fladd@bexp^0,f,c
  3352  001B6C  EF45  F00E         	goto	l3235
  3353  001B70                     l3199:
  3354  001B70  5005               	movf	___fladd@a^0,w,c
  3355  001B72  5C01               	subwf	___fladd@b^0,w,c
  3356  001B74  5006               	movf	(___fladd@a+1)^0,w,c
  3357  001B76  5802               	subwfb	(___fladd@b+1)^0,w,c
  3358  001B78  5007               	movf	(___fladd@a+2)^0,w,c
  3359  001B7A  5803               	subwfb	(___fladd@b+2)^0,w,c
  3360  001B7C  5004               	movf	(___fladd@b+3)^0,w,c
  3361  001B7E  0A80               	xorlw	128
  3362  001B80  6E09               	movwf	??___fladd^0,c
  3363  001B82  5008               	movf	(___fladd@a+3)^0,w,c
  3364  001B84  0A80               	xorlw	128
  3365  001B86  5809               	subwfb	??___fladd^0,w,c
  3366  001B88  B0D8               	btfsc	status,0,c
  3367  001B8A  EFC9  F00D         	goto	u2751
  3368  001B8E  EFCB  F00D         	goto	u2750
  3369  001B92                     u2751:
  3370  001B92  EFF6  F00D         	goto	l3209
  3371  001B96                     u2750:
  3372  001B96  5001               	movf	___fladd@b^0,w,c
  3373  001B98  5C05               	subwf	___fladd@a^0,w,c
  3374  001B9A  6E09               	movwf	??___fladd^0,c
  3375  001B9C  5002               	movf	(___fladd@b+1)^0,w,c
  3376  001B9E  5806               	subwfb	(___fladd@a+1)^0,w,c
  3377  001BA0  6E0A               	movwf	(??___fladd+1)^0,c
  3378  001BA2  5003               	movf	(___fladd@b+2)^0,w,c
  3379  001BA4  5807               	subwfb	(___fladd@a+2)^0,w,c
  3380  001BA6  6E0B               	movwf	(??___fladd+2)^0,c
  3381  001BA8  5004               	movf	(___fladd@b+3)^0,w,c
  3382  001BAA  5808               	subwfb	(___fladd@a+3)^0,w,c
  3383  001BAC  6E0C               	movwf	(??___fladd+3)^0,c
  3384  001BAE  0EFF               	movlw	255
  3385  001BB0  2409               	addwf	??___fladd^0,w,c
  3386  001BB2  6E01               	movwf	___fladd@b^0,c
  3387  001BB4  0EFF               	movlw	255
  3388  001BB6  200A               	addwfc	(??___fladd+1)^0,w,c
  3389  001BB8  6E02               	movwf	(___fladd@b+1)^0,c
  3390  001BBA  0EFF               	movlw	255
  3391  001BBC  200B               	addwfc	(??___fladd+2)^0,w,c
  3392  001BBE  6E03               	movwf	(___fladd@b+2)^0,c
  3393  001BC0  0EFF               	movlw	255
  3394  001BC2  200C               	addwfc	(??___fladd+3)^0,w,c
  3395  001BC4  6E04               	movwf	(___fladd@b+3)^0,c
  3396  001BC6  0E80               	movlw	128
  3397  001BC8  1A0D               	xorwf	___fladd@signs^0,f,c
  3398  001BCA  6C10               	negf	___fladd@grs^0,c
  3399  001BCC  5010               	movf	___fladd@grs^0,w,c
  3400  001BCE  A4D8               	btfss	status,2,c
  3401  001BD0  EFEC  F00D         	goto	u2761
  3402  001BD4  EFEE  F00D         	goto	u2760
  3403  001BD8                     u2761:
  3404  001BD8  EFFE  F00D         	goto	l1066
  3405  001BDC                     u2760:
  3406  001BDC  0E01               	movlw	1
  3407  001BDE  2601               	addwf	___fladd@b^0,f,c
  3408  001BE0  0E00               	movlw	0
  3409  001BE2  2202               	addwfc	(___fladd@b+1)^0,f,c
  3410  001BE4  2203               	addwfc	(___fladd@b+2)^0,f,c
  3411  001BE6  2204               	addwfc	(___fladd@b+3)^0,f,c
  3412  001BE8  EFFE  F00D         	goto	l1066
  3413  001BEC                     l3209:
  3414  001BEC  5005               	movf	___fladd@a^0,w,c
  3415  001BEE  5E01               	subwf	___fladd@b^0,f,c
  3416  001BF0  5006               	movf	(___fladd@a+1)^0,w,c
  3417  001BF2  5A02               	subwfb	(___fladd@b+1)^0,f,c
  3418  001BF4  5007               	movf	(___fladd@a+2)^0,w,c
  3419  001BF6  5A03               	subwfb	(___fladd@b+2)^0,f,c
  3420  001BF8  5008               	movf	(___fladd@a+3)^0,w,c
  3421  001BFA  5A04               	subwfb	(___fladd@b+3)^0,f,c
  3422  001BFC                     l1066:
  3423  001BFC  5001               	movf	___fladd@b^0,w,c
  3424  001BFE  1002               	iorwf	(___fladd@b+1)^0,w,c
  3425  001C00  1003               	iorwf	(___fladd@b+2)^0,w,c
  3426  001C02  1004               	iorwf	(___fladd@b+3)^0,w,c
  3427  001C04  A4D8               	btfss	status,2,c
  3428  001C06  EF07  F00E         	goto	u2771
  3429  001C0A  EF09  F00E         	goto	u2770
  3430  001C0E                     u2771:
  3431  001C0E  EF3E  F00E         	goto	l3233
  3432  001C12                     u2770:
  3433  001C12  5010               	movf	___fladd@grs^0,w,c
  3434  001C14  A4D8               	btfss	status,2,c
  3435  001C16  EF0F  F00E         	goto	u2781
  3436  001C1A  EF11  F00E         	goto	u2780
  3437  001C1E                     u2781:
  3438  001C1E  EF3E  F00E         	goto	l3233
  3439  001C22                     u2780:
  3440  001C22  0E00               	movlw	0
  3441  001C24  6E01               	movwf	?___fladd^0,c
  3442  001C26  0E00               	movlw	0
  3443  001C28  6E02               	movwf	(?___fladd+1)^0,c
  3444  001C2A  0E00               	movlw	0
  3445  001C2C  6E03               	movwf	(?___fladd+2)^0,c
  3446  001C2E  0E00               	movlw	0
  3447  001C30  6E04               	movwf	(?___fladd+3)^0,c
  3448  001C32  EFD9  F00E         	goto	l1058
  3449  001C36                     l3217:
  3450  001C36  90D8               	bcf	status,0,c
  3451  001C38  3601               	rlcf	___fladd@b^0,f,c
  3452  001C3A  3602               	rlcf	(___fladd@b+1)^0,f,c
  3453  001C3C  3603               	rlcf	(___fladd@b+2)^0,f,c
  3454  001C3E  3604               	rlcf	(___fladd@b+3)^0,f,c
  3455  001C40  AE10               	btfss	___fladd@grs^0,7,c
  3456  001C42  EF25  F00E         	goto	u2791
  3457  001C46  EF27  F00E         	goto	u2790
  3458  001C4A                     u2791:
  3459  001C4A  EF28  F00E         	goto	l3223
  3460  001C4E                     u2790:
  3461  001C4E  8001               	bsf	___fladd@b^0,0,c
  3462  001C50                     l3223:
  3463  001C50  A010               	btfss	___fladd@grs^0,0,c
  3464  001C52  EF2D  F00E         	goto	u2801
  3465  001C56  EF2F  F00E         	goto	u2800
  3466  001C5A                     u2801:
  3467  001C5A  EF33  F00E         	goto	l3227
  3468  001C5E                     u2800:
  3469  001C5E  80D8               	bsf	status,0,c
  3470  001C60  3610               	rlcf	___fladd@grs^0,f,c
  3471  001C62  EF35  F00E         	goto	l3229
  3472  001C66                     l3227:
  3473  001C66  90D8               	bcf	status,0,c
  3474  001C68  3610               	rlcf	___fladd@grs^0,f,c
  3475  001C6A                     l3229:
  3476  001C6A  500F               	movf	___fladd@bexp^0,w,c
  3477  001C6C  B4D8               	btfsc	status,2,c
  3478  001C6E  EF3B  F00E         	goto	u2811
  3479  001C72  EF3D  F00E         	goto	u2810
  3480  001C76                     u2811:
  3481  001C76  EF3E  F00E         	goto	l3233
  3482  001C7A                     u2810:
  3483  001C7A  060F               	decf	___fladd@bexp^0,f,c
  3484  001C7C                     l3233:
  3485  001C7C  AE03               	btfss	(___fladd@b+2)^0,7,c
  3486  001C7E  EF43  F00E         	goto	u2821
  3487  001C82  EF45  F00E         	goto	u2820
  3488  001C86                     u2821:
  3489  001C86  EF1B  F00E         	goto	l3217
  3490  001C8A                     u2820:
  3491  001C8A                     l3235:
  3492  001C8A  0E00               	movlw	0
  3493  001C8C  6E0E               	movwf	___fladd@aexp^0,c
  3494  001C8E  AE10               	btfss	___fladd@grs^0,7,c
  3495  001C90  EF4C  F00E         	goto	u2831
  3496  001C94  EF4E  F00E         	goto	u2830
  3497  001C98                     u2831:
  3498  001C98  EF66  F00E         	goto	l1075
  3499  001C9C                     u2830:
  3500  001C9C  C010  F009         	movff	___fladd@grs,??___fladd
  3501  001CA0  0E7F               	movlw	127
  3502  001CA2  1609               	andwf	??___fladd^0,f,c
  3503  001CA4  B4D8               	btfsc	status,2,c
  3504  001CA6  EF57  F00E         	goto	u2841
  3505  001CAA  EF59  F00E         	goto	u2840
  3506  001CAE                     u2841:
  3507  001CAE  EF5D  F00E         	goto	l1076
  3508  001CB2                     u2840:
  3509  001CB2                     l3241:
  3510  001CB2  0E01               	movlw	1
  3511  001CB4  6E0E               	movwf	___fladd@aexp^0,c
  3512  001CB6  EF66  F00E         	goto	l1075
  3513  001CBA                     l1076:
  3514  001CBA  A001               	btfss	___fladd@b^0,0,c
  3515  001CBC  EF62  F00E         	goto	u2851
  3516  001CC0  EF64  F00E         	goto	u2850
  3517  001CC4                     u2851:
  3518  001CC4  EF66  F00E         	goto	l1075
  3519  001CC8                     u2850:
  3520  001CC8  EF59  F00E         	goto	l3241
  3521  001CCC                     l1075:
  3522  001CCC  500E               	movf	___fladd@aexp^0,w,c
  3523  001CCE  B4D8               	btfsc	status,2,c
  3524  001CD0  EF6C  F00E         	goto	u2861
  3525  001CD4  EF6E  F00E         	goto	u2860
  3526  001CD8                     u2861:
  3527  001CD8  EF99  F00E         	goto	l3253
  3528  001CDC                     u2860:
  3529  001CDC  0E01               	movlw	1
  3530  001CDE  2601               	addwf	___fladd@b^0,f,c
  3531  001CE0  0E00               	movlw	0
  3532  001CE2  2202               	addwfc	(___fladd@b+1)^0,f,c
  3533  001CE4  2203               	addwfc	(___fladd@b+2)^0,f,c
  3534  001CE6  2204               	addwfc	(___fladd@b+3)^0,f,c
  3535  001CE8  A004               	btfss	(___fladd@b+3)^0,0,c
  3536  001CEA  EF79  F00E         	goto	u2871
  3537  001CEE  EF7B  F00E         	goto	u2870
  3538  001CF2                     u2871:
  3539  001CF2  EF99  F00E         	goto	l3253
  3540  001CF6                     u2870:
  3541  001CF6  C001  F009         	movff	___fladd@b,??___fladd
  3542  001CFA  C002  F00A         	movff	___fladd@b+1,??___fladd+1
  3543  001CFE  C003  F00B         	movff	___fladd@b+2,??___fladd+2
  3544  001D02  C004  F00C         	movff	___fladd@b+3,??___fladd+3
  3545  001D06  340C               	rlcf	(??___fladd+3)^0,w,c
  3546  001D08  320C               	rrcf	(??___fladd+3)^0,f,c
  3547  001D0A  320B               	rrcf	(??___fladd+2)^0,f,c
  3548  001D0C  320A               	rrcf	(??___fladd+1)^0,f,c
  3549  001D0E  3209               	rrcf	??___fladd^0,f,c
  3550  001D10  C009  F001         	movff	??___fladd,___fladd@b
  3551  001D14  C00A  F002         	movff	??___fladd+1,___fladd@b+1
  3552  001D18  C00B  F003         	movff	??___fladd+2,___fladd@b+2
  3553  001D1C  C00C  F004         	movff	??___fladd+3,___fladd@b+3
  3554  001D20  280F               	incf	___fladd@bexp^0,w,c
  3555  001D22  B4D8               	btfsc	status,2,c
  3556  001D24  EF96  F00E         	goto	u2881
  3557  001D28  EF98  F00E         	goto	u2880
  3558  001D2C                     u2881:
  3559  001D2C  EF99  F00E         	goto	l3253
  3560  001D30                     u2880:
  3561  001D30  2A0F               	incf	___fladd@bexp^0,f,c
  3562  001D32                     l3253:
  3563  001D32  280F               	incf	___fladd@bexp^0,w,c
  3564  001D34  B4D8               	btfsc	status,2,c
  3565  001D36  EF9F  F00E         	goto	u2891
  3566  001D3A  EFA1  F00E         	goto	u2890
  3567  001D3E                     u2891:
  3568  001D3E  EFA9  F00E         	goto	l3257
  3569  001D42                     u2890:
  3570  001D42  500F               	movf	___fladd@bexp^0,w,c
  3571  001D44  A4D8               	btfss	status,2,c
  3572  001D46  EFA7  F00E         	goto	u2901
  3573  001D4A  EFA9  F00E         	goto	u2900
  3574  001D4E                     u2901:
  3575  001D4E  EFBB  F00E         	goto	l3261
  3576  001D52                     u2900:
  3577  001D52                     l3257:
  3578  001D52  0E00               	movlw	0
  3579  001D54  6E01               	movwf	___fladd@b^0,c
  3580  001D56  0E00               	movlw	0
  3581  001D58  6E02               	movwf	(___fladd@b+1)^0,c
  3582  001D5A  0E00               	movlw	0
  3583  001D5C  6E03               	movwf	(___fladd@b+2)^0,c
  3584  001D5E  0E00               	movlw	0
  3585  001D60  6E04               	movwf	(___fladd@b+3)^0,c
  3586  001D62  500F               	movf	___fladd@bexp^0,w,c
  3587  001D64  A4D8               	btfss	status,2,c
  3588  001D66  EFB7  F00E         	goto	u2911
  3589  001D6A  EFB9  F00E         	goto	u2910
  3590  001D6E                     u2911:
  3591  001D6E  EFBB  F00E         	goto	l3261
  3592  001D72                     u2910:
  3593  001D72  0E00               	movlw	0
  3594  001D74  6E0D               	movwf	___fladd@signs^0,c
  3595  001D76                     l3261:
  3596  001D76  A00F               	btfss	___fladd@bexp^0,0,c
  3597  001D78  EFC0  F00E         	goto	u2921
  3598  001D7C  EFC2  F00E         	goto	u2920
  3599  001D80                     u2921:
  3600  001D80  EFC5  F00E         	goto	l3265
  3601  001D84                     u2920:
  3602  001D84  8E03               	bsf	(___fladd@b+2)^0,7,c
  3603  001D86  EFC6  F00E         	goto	l3267
  3604  001D8A                     l3265:
  3605  001D8A  9E03               	bcf	(___fladd@b+2)^0,7,c
  3606  001D8C                     l3267:
  3607  001D8C  90D8               	bcf	status,0,c
  3608  001D8E  300F               	rrcf	___fladd@bexp^0,w,c
  3609  001D90  6E04               	movwf	(___fladd@b+3)^0,c
  3610  001D92  AE0D               	btfss	___fladd@signs^0,7,c
  3611  001D94  EFCE  F00E         	goto	u2931
  3612  001D98  EFD0  F00E         	goto	u2930
  3613  001D9C                     u2931:
  3614  001D9C  EFD1  F00E         	goto	l3273
  3615  001DA0                     u2930:
  3616  001DA0  8E04               	bsf	(___fladd@b+3)^0,7,c
  3617  001DA2                     l3273:
  3618  001DA2  C001  F001         	movff	___fladd@b,?___fladd
  3619  001DA6  C002  F002         	movff	___fladd@b+1,?___fladd+1
  3620  001DAA  C003  F003         	movff	___fladd@b+2,?___fladd+2
  3621  001DAE  C004  F004         	movff	___fladd@b+3,?___fladd+3
  3622  001DB2                     l1058:
  3623  001DB2  0012               	return		;funcret
  3624  001DB4                     __end_of___fladd:
  3625                           	callstack 0
  3626                           
  3627 ;; *************** function ___flneg *****************
  3628 ;; Defined at:
  3629 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\flneg.c"
  3630 ;; Parameters:    Size  Location     Type
  3631 ;;  f1              4    0[COMRAM] unsigned char 
  3632 ;; Auto vars:     Size  Location     Type
  3633 ;;		None
  3634 ;; Return value:  Size  Location     Type
  3635 ;;                  4    0[COMRAM] unsigned char 
  3636 ;; Registers used:
  3637 ;;		wreg, status,2, status,0
  3638 ;; Tracked objects:
  3639 ;;		On entry : 0/0
  3640 ;;		On exit  : 0/0
  3641 ;;		Unchanged: 0/0
  3642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3643 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3644 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3645 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3646 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3647 ;;Total ram usage:        4 bytes
  3648 ;; Hardware stack levels used: 1
  3649 ;; This function calls:
  3650 ;;		Nothing
  3651 ;; This function is called by:
  3652 ;;		_roundf
  3653 ;; This function uses a non-reentrant model
  3654 ;;
  3655                           
  3656                           	psect	text9
  3657  003E70                     __ptext9:
  3658                           	callstack 0
  3659  003E70                     ___flneg:
  3660                           	callstack 27
  3661  003E70  5001               	movf	___flneg@f1^0,w,c
  3662  003E72  1002               	iorwf	(___flneg@f1+1)^0,w,c
  3663  003E74  1003               	iorwf	(___flneg@f1+2)^0,w,c
  3664  003E76  1004               	iorwf	(___flneg@f1+3)^0,w,c
  3665  003E78  B4D8               	btfsc	status,2,c
  3666  003E7A  EF41  F01F         	goto	u3251
  3667  003E7E  EF43  F01F         	goto	u3250
  3668  003E82                     u3251:
  3669  003E82  EF4B  F01F         	goto	l3515
  3670  003E86                     u3250:
  3671  003E86  0E00               	movlw	0
  3672  003E88  1A01               	xorwf	___flneg@f1^0,f,c
  3673  003E8A  0E00               	movlw	0
  3674  003E8C  1A02               	xorwf	(___flneg@f1+1)^0,f,c
  3675  003E8E  0E00               	movlw	0
  3676  003E90  1A03               	xorwf	(___flneg@f1+2)^0,f,c
  3677  003E92  0E80               	movlw	128
  3678  003E94  1A04               	xorwf	(___flneg@f1+3)^0,f,c
  3679  003E96                     l3515:
  3680  003E96  C001  F001         	movff	___flneg@f1,?___flneg
  3681  003E9A  C002  F002         	movff	___flneg@f1+1,?___flneg+1
  3682  003E9E  C003  F003         	movff	___flneg@f1+2,?___flneg+2
  3683  003EA2  C004  F004         	movff	___flneg@f1+3,?___flneg+3
  3684  003EA6  0012               	return		;funcret
  3685  003EA8                     __end_of___flneg:
  3686                           	callstack 0
  3687                           
  3688 ;; *************** function ___flmul *****************
  3689 ;; Defined at:
  3690 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\sprcmul.c"
  3691 ;; Parameters:    Size  Location     Type
  3692 ;;  b               4   39[COMRAM] unsigned char 
  3693 ;;  a               4   43[COMRAM] unsigned char 
  3694 ;; Auto vars:     Size  Location     Type
  3695 ;;  prod            4   58[COMRAM] struct .
  3696 ;;  grs             4   52[COMRAM] unsigned long 
  3697 ;;  temp            2   62[COMRAM] struct .
  3698 ;;  bexp            1   57[COMRAM] unsigned char 
  3699 ;;  aexp            1   56[COMRAM] unsigned char 
  3700 ;;  sign            1   51[COMRAM] unsigned char 
  3701 ;; Return value:  Size  Location     Type
  3702 ;;                  4   39[COMRAM] unsigned char 
  3703 ;; Registers used:
  3704 ;;		wreg, status,2, status,0, prodl, prodh
  3705 ;; Tracked objects:
  3706 ;;		On entry : 0/0
  3707 ;;		On exit  : 0/0
  3708 ;;		Unchanged: 0/0
  3709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3710 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3711 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3712 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3713 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3714 ;;Total ram usage:       25 bytes
  3715 ;; Hardware stack levels used: 1
  3716 ;; This function calls:
  3717 ;;		Nothing
  3718 ;; This function is called by:
  3719 ;;		_detect_color
  3720 ;;		_roundf
  3721 ;;		_check_color_reading
  3722 ;; This function uses a non-reentrant model
  3723 ;;
  3724                           
  3725                           	psect	text10
  3726  001DB4                     __ptext10:
  3727                           	callstack 0
  3728  001DB4                     ___flmul:
  3729                           	callstack 27
  3730  001DB4  502B               	movf	(___flmul@b+3)^0,w,c
  3731  001DB6  0B80               	andlw	128
  3732  001DB8  6E34               	movwf	___flmul@sign^0,c
  3733  001DBA  502B               	movf	(___flmul@b+3)^0,w,c
  3734  001DBC  242B               	addwf	(___flmul@b+3)^0,w,c
  3735  001DBE  6E3A               	movwf	___flmul@bexp^0,c
  3736  001DC0  AE2A               	btfss	(___flmul@b+2)^0,7,c
  3737  001DC2  EFE5  F00E         	goto	u3011
  3738  001DC6  EFE7  F00E         	goto	u3010
  3739  001DCA                     u3011:
  3740  001DCA  EFE8  F00E         	goto	l3359
  3741  001DCE                     u3010:
  3742  001DCE  803A               	bsf	___flmul@bexp^0,0,c
  3743  001DD0                     l3359:
  3744  001DD0  503A               	movf	___flmul@bexp^0,w,c
  3745  001DD2  B4D8               	btfsc	status,2,c
  3746  001DD4  EFEE  F00E         	goto	u3021
  3747  001DD8  EFF0  F00E         	goto	u3020
  3748  001DDC                     u3021:
  3749  001DDC  EF03  F00F         	goto	l3367
  3750  001DE0                     u3020:
  3751  001DE0  283A               	incf	___flmul@bexp^0,w,c
  3752  001DE2  A4D8               	btfss	status,2,c
  3753  001DE4  EFF6  F00E         	goto	u3031
  3754  001DE8  EFF8  F00E         	goto	u3030
  3755  001DEC                     u3031:
  3756  001DEC  EF00  F00F         	goto	l3365
  3757  001DF0                     u3030:
  3758  001DF0  0E00               	movlw	0
  3759  001DF2  6E28               	movwf	___flmul@b^0,c
  3760  001DF4  0E00               	movlw	0
  3761  001DF6  6E29               	movwf	(___flmul@b+1)^0,c
  3762  001DF8  0E00               	movlw	0
  3763  001DFA  6E2A               	movwf	(___flmul@b+2)^0,c
  3764  001DFC  0E00               	movlw	0
  3765  001DFE  6E2B               	movwf	(___flmul@b+3)^0,c
  3766  001E00                     l3365:
  3767  001E00  8E2A               	bsf	(___flmul@b+2)^0,7,c
  3768  001E02  EF0B  F00F         	goto	l3369
  3769  001E06                     l3367:
  3770  001E06  0E00               	movlw	0
  3771  001E08  6E28               	movwf	___flmul@b^0,c
  3772  001E0A  0E00               	movlw	0
  3773  001E0C  6E29               	movwf	(___flmul@b+1)^0,c
  3774  001E0E  0E00               	movlw	0
  3775  001E10  6E2A               	movwf	(___flmul@b+2)^0,c
  3776  001E12  0E00               	movlw	0
  3777  001E14  6E2B               	movwf	(___flmul@b+3)^0,c
  3778  001E16                     l3369:
  3779  001E16  502F               	movf	(___flmul@a+3)^0,w,c
  3780  001E18  0B80               	andlw	128
  3781  001E1A  1A34               	xorwf	___flmul@sign^0,f,c
  3782  001E1C  502F               	movf	(___flmul@a+3)^0,w,c
  3783  001E1E  242F               	addwf	(___flmul@a+3)^0,w,c
  3784  001E20  6E39               	movwf	___flmul@aexp^0,c
  3785  001E22  AE2E               	btfss	(___flmul@a+2)^0,7,c
  3786  001E24  EF16  F00F         	goto	u3041
  3787  001E28  EF18  F00F         	goto	u3040
  3788  001E2C                     u3041:
  3789  001E2C  EF19  F00F         	goto	l3377
  3790  001E30                     u3040:
  3791  001E30  8039               	bsf	___flmul@aexp^0,0,c
  3792  001E32                     l3377:
  3793  001E32  5039               	movf	___flmul@aexp^0,w,c
  3794  001E34  B4D8               	btfsc	status,2,c
  3795  001E36  EF1F  F00F         	goto	u3051
  3796  001E3A  EF21  F00F         	goto	u3050
  3797  001E3E                     u3051:
  3798  001E3E  EF34  F00F         	goto	l3385
  3799  001E42                     u3050:
  3800  001E42  2839               	incf	___flmul@aexp^0,w,c
  3801  001E44  A4D8               	btfss	status,2,c
  3802  001E46  EF27  F00F         	goto	u3061
  3803  001E4A  EF29  F00F         	goto	u3060
  3804  001E4E                     u3061:
  3805  001E4E  EF31  F00F         	goto	l3383
  3806  001E52                     u3060:
  3807  001E52  0E00               	movlw	0
  3808  001E54  6E2C               	movwf	___flmul@a^0,c
  3809  001E56  0E00               	movlw	0
  3810  001E58  6E2D               	movwf	(___flmul@a+1)^0,c
  3811  001E5A  0E00               	movlw	0
  3812  001E5C  6E2E               	movwf	(___flmul@a+2)^0,c
  3813  001E5E  0E00               	movlw	0
  3814  001E60  6E2F               	movwf	(___flmul@a+3)^0,c
  3815  001E62                     l3383:
  3816  001E62  8E2E               	bsf	(___flmul@a+2)^0,7,c
  3817  001E64  EF3C  F00F         	goto	l1135
  3818  001E68                     l3385:
  3819  001E68  0E00               	movlw	0
  3820  001E6A  6E2C               	movwf	___flmul@a^0,c
  3821  001E6C  0E00               	movlw	0
  3822  001E6E  6E2D               	movwf	(___flmul@a+1)^0,c
  3823  001E70  0E00               	movlw	0
  3824  001E72  6E2E               	movwf	(___flmul@a+2)^0,c
  3825  001E74  0E00               	movlw	0
  3826  001E76  6E2F               	movwf	(___flmul@a+3)^0,c
  3827  001E78                     l1135:
  3828  001E78  5039               	movf	___flmul@aexp^0,w,c
  3829  001E7A  B4D8               	btfsc	status,2,c
  3830  001E7C  EF42  F00F         	goto	u3071
  3831  001E80  EF44  F00F         	goto	u3070
  3832  001E84                     u3071:
  3833  001E84  EF4C  F00F         	goto	l3389
  3834  001E88                     u3070:
  3835  001E88  503A               	movf	___flmul@bexp^0,w,c
  3836  001E8A  A4D8               	btfss	status,2,c
  3837  001E8C  EF4A  F00F         	goto	u3081
  3838  001E90  EF4C  F00F         	goto	u3080
  3839  001E94                     u3081:
  3840  001E94  EF56  F00F         	goto	l3393
  3841  001E98                     u3080:
  3842  001E98                     l3389:
  3843  001E98  0E00               	movlw	0
  3844  001E9A  6E28               	movwf	?___flmul^0,c
  3845  001E9C  0E00               	movlw	0
  3846  001E9E  6E29               	movwf	(?___flmul+1)^0,c
  3847  001EA0  0E00               	movlw	0
  3848  001EA2  6E2A               	movwf	(?___flmul+2)^0,c
  3849  001EA4  0E00               	movlw	0
  3850  001EA6  6E2B               	movwf	(?___flmul+3)^0,c
  3851  001EA8  EFEE  F010         	goto	l1139
  3852  001EAC                     l3393:
  3853  001EAC  502E               	movf	(___flmul@a+2)^0,w,c
  3854  001EAE  0228               	mulwf	___flmul@b^0,c
  3855  001EB0  CFF3 F03F          	movff	prodl,___flmul@temp
  3856  001EB4  CFF4 F040          	movff	prodh,___flmul@temp+1
  3857  001EB8  503F               	movf	___flmul@temp^0,w,c
  3858  001EBA  6E35               	movwf	___flmul@grs^0,c
  3859  001EBC  6A36               	clrf	(___flmul@grs+1)^0,c
  3860  001EBE  6A37               	clrf	(___flmul@grs+2)^0,c
  3861  001EC0  6A38               	clrf	(___flmul@grs+3)^0,c
  3862  001EC2  5040               	movf	(___flmul@temp+1)^0,w,c
  3863  001EC4  6E3B               	movwf	___flmul@prod^0,c
  3864  001EC6  6A3C               	clrf	(___flmul@prod+1)^0,c
  3865  001EC8  6A3D               	clrf	(___flmul@prod+2)^0,c
  3866  001ECA  6A3E               	clrf	(___flmul@prod+3)^0,c
  3867  001ECC  502D               	movf	(___flmul@a+1)^0,w,c
  3868  001ECE  0229               	mulwf	(___flmul@b+1)^0,c
  3869  001ED0  CFF3 F03F          	movff	prodl,___flmul@temp
  3870  001ED4  CFF4 F040          	movff	prodh,___flmul@temp+1
  3871  001ED8  503F               	movf	___flmul@temp^0,w,c
  3872  001EDA  2635               	addwf	___flmul@grs^0,f,c
  3873  001EDC  0E00               	movlw	0
  3874  001EDE  2236               	addwfc	(___flmul@grs+1)^0,f,c
  3875  001EE0  2237               	addwfc	(___flmul@grs+2)^0,f,c
  3876  001EE2  2238               	addwfc	(___flmul@grs+3)^0,f,c
  3877  001EE4  5040               	movf	(___flmul@temp+1)^0,w,c
  3878  001EE6  263B               	addwf	___flmul@prod^0,f,c
  3879  001EE8  0E00               	movlw	0
  3880  001EEA  223C               	addwfc	(___flmul@prod+1)^0,f,c
  3881  001EEC  223D               	addwfc	(___flmul@prod+2)^0,f,c
  3882  001EEE  223E               	addwfc	(___flmul@prod+3)^0,f,c
  3883  001EF0  502C               	movf	___flmul@a^0,w,c
  3884  001EF2  022A               	mulwf	(___flmul@b+2)^0,c
  3885  001EF4  CFF3 F03F          	movff	prodl,___flmul@temp
  3886  001EF8  CFF4 F040          	movff	prodh,___flmul@temp+1
  3887  001EFC  503F               	movf	___flmul@temp^0,w,c
  3888  001EFE  2635               	addwf	___flmul@grs^0,f,c
  3889  001F00  0E00               	movlw	0
  3890  001F02  2236               	addwfc	(___flmul@grs+1)^0,f,c
  3891  001F04  2237               	addwfc	(___flmul@grs+2)^0,f,c
  3892  001F06  2238               	addwfc	(___flmul@grs+3)^0,f,c
  3893  001F08  5040               	movf	(___flmul@temp+1)^0,w,c
  3894  001F0A  263B               	addwf	___flmul@prod^0,f,c
  3895  001F0C  0E00               	movlw	0
  3896  001F0E  223C               	addwfc	(___flmul@prod+1)^0,f,c
  3897  001F10  223D               	addwfc	(___flmul@prod+2)^0,f,c
  3898  001F12  223E               	addwfc	(___flmul@prod+3)^0,f,c
  3899  001F14  C037  F038         	movff	___flmul@grs+2,___flmul@grs+3
  3900  001F18  C036  F037         	movff	___flmul@grs+1,___flmul@grs+2
  3901  001F1C  C035  F036         	movff	___flmul@grs,___flmul@grs+1
  3902  001F20  6A35               	clrf	___flmul@grs^0,c
  3903  001F22  502C               	movf	___flmul@a^0,w,c
  3904  001F24  0229               	mulwf	(___flmul@b+1)^0,c
  3905  001F26  CFF3 F03F          	movff	prodl,___flmul@temp
  3906  001F2A  CFF4 F040          	movff	prodh,___flmul@temp+1
  3907  001F2E  503F               	movf	___flmul@temp^0,w,c
  3908  001F30  2635               	addwf	___flmul@grs^0,f,c
  3909  001F32  5040               	movf	(___flmul@temp+1)^0,w,c
  3910  001F34  2236               	addwfc	(___flmul@grs+1)^0,f,c
  3911  001F36  0E00               	movlw	0
  3912  001F38  2237               	addwfc	(___flmul@grs+2)^0,f,c
  3913  001F3A  0E00               	movlw	0
  3914  001F3C  2238               	addwfc	(___flmul@grs+3)^0,f,c
  3915  001F3E  502D               	movf	(___flmul@a+1)^0,w,c
  3916  001F40  0228               	mulwf	___flmul@b^0,c
  3917  001F42  CFF3 F03F          	movff	prodl,___flmul@temp
  3918  001F46  CFF4 F040          	movff	prodh,___flmul@temp+1
  3919  001F4A  503F               	movf	___flmul@temp^0,w,c
  3920  001F4C  2635               	addwf	___flmul@grs^0,f,c
  3921  001F4E  5040               	movf	(___flmul@temp+1)^0,w,c
  3922  001F50  2236               	addwfc	(___flmul@grs+1)^0,f,c
  3923  001F52  0E00               	movlw	0
  3924  001F54  2237               	addwfc	(___flmul@grs+2)^0,f,c
  3925  001F56  0E00               	movlw	0
  3926  001F58  2238               	addwfc	(___flmul@grs+3)^0,f,c
  3927  001F5A  C037  F038         	movff	___flmul@grs+2,___flmul@grs+3
  3928  001F5E  C036  F037         	movff	___flmul@grs+1,___flmul@grs+2
  3929  001F62  C035  F036         	movff	___flmul@grs,___flmul@grs+1
  3930  001F66  6A35               	clrf	___flmul@grs^0,c
  3931  001F68  502C               	movf	___flmul@a^0,w,c
  3932  001F6A  0228               	mulwf	___flmul@b^0,c
  3933  001F6C  CFF3 F03F          	movff	prodl,___flmul@temp
  3934  001F70  CFF4 F040          	movff	prodh,___flmul@temp+1
  3935  001F74  503F               	movf	___flmul@temp^0,w,c
  3936  001F76  2635               	addwf	___flmul@grs^0,f,c
  3937  001F78  5040               	movf	(___flmul@temp+1)^0,w,c
  3938  001F7A  2236               	addwfc	(___flmul@grs+1)^0,f,c
  3939  001F7C  0E00               	movlw	0
  3940  001F7E  2237               	addwfc	(___flmul@grs+2)^0,f,c
  3941  001F80  0E00               	movlw	0
  3942  001F82  2238               	addwfc	(___flmul@grs+3)^0,f,c
  3943  001F84  502E               	movf	(___flmul@a+2)^0,w,c
  3944  001F86  0229               	mulwf	(___flmul@b+1)^0,c
  3945  001F88  CFF3 F03F          	movff	prodl,___flmul@temp
  3946  001F8C  CFF4 F040          	movff	prodh,___flmul@temp+1
  3947  001F90  503F               	movf	___flmul@temp^0,w,c
  3948  001F92  263B               	addwf	___flmul@prod^0,f,c
  3949  001F94  5040               	movf	(___flmul@temp+1)^0,w,c
  3950  001F96  223C               	addwfc	(___flmul@prod+1)^0,f,c
  3951  001F98  0E00               	movlw	0
  3952  001F9A  223D               	addwfc	(___flmul@prod+2)^0,f,c
  3953  001F9C  0E00               	movlw	0
  3954  001F9E  223E               	addwfc	(___flmul@prod+3)^0,f,c
  3955  001FA0  502D               	movf	(___flmul@a+1)^0,w,c
  3956  001FA2  022A               	mulwf	(___flmul@b+2)^0,c
  3957  001FA4  CFF3 F03F          	movff	prodl,___flmul@temp
  3958  001FA8  CFF4 F040          	movff	prodh,___flmul@temp+1
  3959  001FAC  503F               	movf	___flmul@temp^0,w,c
  3960  001FAE  263B               	addwf	___flmul@prod^0,f,c
  3961  001FB0  5040               	movf	(___flmul@temp+1)^0,w,c
  3962  001FB2  223C               	addwfc	(___flmul@prod+1)^0,f,c
  3963  001FB4  0E00               	movlw	0
  3964  001FB6  223D               	addwfc	(___flmul@prod+2)^0,f,c
  3965  001FB8  0E00               	movlw	0
  3966  001FBA  223E               	addwfc	(___flmul@prod+3)^0,f,c
  3967  001FBC  502E               	movf	(___flmul@a+2)^0,w,c
  3968  001FBE  022A               	mulwf	(___flmul@b+2)^0,c
  3969  001FC0  CFF3 F03F          	movff	prodl,___flmul@temp
  3970  001FC4  CFF4 F040          	movff	prodh,___flmul@temp+1
  3971  001FC8  503F               	movf	___flmul@temp^0,w,c
  3972  001FCA  6E30               	movwf	??___flmul^0,c
  3973  001FCC  5040               	movf	(___flmul@temp+1)^0,w,c
  3974  001FCE  6E31               	movwf	(??___flmul+1)^0,c
  3975  001FD0  6A32               	clrf	(??___flmul+2)^0,c
  3976  001FD2  6A33               	clrf	(??___flmul+3)^0,c
  3977  001FD4  C032  F033         	movff	??___flmul+2,??___flmul+3
  3978  001FD8  C031  F032         	movff	??___flmul+1,??___flmul+2
  3979  001FDC  C030  F031         	movff	??___flmul,??___flmul+1
  3980  001FE0  6A30               	clrf	??___flmul^0,c
  3981  001FE2  5030               	movf	??___flmul^0,w,c
  3982  001FE4  263B               	addwf	___flmul@prod^0,f,c
  3983  001FE6  5031               	movf	(??___flmul+1)^0,w,c
  3984  001FE8  223C               	addwfc	(___flmul@prod+1)^0,f,c
  3985  001FEA  5032               	movf	(??___flmul+2)^0,w,c
  3986  001FEC  223D               	addwfc	(___flmul@prod+2)^0,f,c
  3987  001FEE  5033               	movf	(??___flmul+3)^0,w,c
  3988  001FF0  223E               	addwfc	(___flmul@prod+3)^0,f,c
  3989  001FF2  C035  F030         	movff	___flmul@grs,??___flmul
  3990  001FF6  C036  F031         	movff	___flmul@grs+1,??___flmul+1
  3991  001FFA  C037  F032         	movff	___flmul@grs+2,??___flmul+2
  3992  001FFE  C038  F033         	movff	___flmul@grs+3,??___flmul+3
  3993  002002  0E19               	movlw	25
  3994  002004  EF09  F010         	goto	u3090
  3995  002008                     u3095:
  3996  002008  90D8               	bcf	status,0,c
  3997  00200A  3233               	rrcf	(??___flmul+3)^0,f,c
  3998  00200C  3232               	rrcf	(??___flmul+2)^0,f,c
  3999  00200E  3231               	rrcf	(??___flmul+1)^0,f,c
  4000  002010  3230               	rrcf	??___flmul^0,f,c
  4001  002012                     u3090:
  4002  002012  2EE8               	decfsz	wreg,f,c
  4003  002014  EF04  F010         	goto	u3095
  4004  002018  5030               	movf	??___flmul^0,w,c
  4005  00201A  263B               	addwf	___flmul@prod^0,f,c
  4006  00201C  5031               	movf	(??___flmul+1)^0,w,c
  4007  00201E  223C               	addwfc	(___flmul@prod+1)^0,f,c
  4008  002020  5032               	movf	(??___flmul+2)^0,w,c
  4009  002022  223D               	addwfc	(___flmul@prod+2)^0,f,c
  4010  002024  5033               	movf	(??___flmul+3)^0,w,c
  4011  002026  223E               	addwfc	(___flmul@prod+3)^0,f,c
  4012  002028  C037  F038         	movff	___flmul@grs+2,___flmul@grs+3
  4013  00202C  C036  F037         	movff	___flmul@grs+1,___flmul@grs+2
  4014  002030  C035  F036         	movff	___flmul@grs,___flmul@grs+1
  4015  002034  6A35               	clrf	___flmul@grs^0,c
  4016  002036  5039               	movf	___flmul@aexp^0,w,c
  4017  002038  C03A  F030         	movff	___flmul@bexp,??___flmul
  4018  00203C  6A31               	clrf	(??___flmul+1)^0,c
  4019  00203E  2630               	addwf	??___flmul^0,f,c
  4020  002040  0E00               	movlw	0
  4021  002042  2231               	addwfc	(??___flmul+1)^0,f,c
  4022  002044  0E82               	movlw	130
  4023  002046  2430               	addwf	??___flmul^0,w,c
  4024  002048  6E3F               	movwf	___flmul@temp^0,c
  4025  00204A  0EFF               	movlw	255
  4026  00204C  2031               	addwfc	(??___flmul+1)^0,w,c
  4027  00204E  6E40               	movwf	(___flmul@temp+1)^0,c
  4028  002050  EF3F  F010         	goto	l3441
  4029  002054                     l3435:
  4030  002054  90D8               	bcf	status,0,c
  4031  002056  363B               	rlcf	___flmul@prod^0,f,c
  4032  002058  363C               	rlcf	(___flmul@prod+1)^0,f,c
  4033  00205A  363D               	rlcf	(___flmul@prod+2)^0,f,c
  4034  00205C  363E               	rlcf	(___flmul@prod+3)^0,f,c
  4035  00205E  AE38               	btfss	(___flmul@grs+3)^0,7,c
  4036  002060  EF34  F010         	goto	u3101
  4037  002064  EF36  F010         	goto	u3100
  4038  002068                     u3101:
  4039  002068  EF37  F010         	goto	l1142
  4040  00206C                     u3100:
  4041  00206C  803B               	bsf	___flmul@prod^0,0,c
  4042  00206E                     l1142:
  4043  00206E  90D8               	bcf	status,0,c
  4044  002070  3635               	rlcf	___flmul@grs^0,f,c
  4045  002072  3636               	rlcf	(___flmul@grs+1)^0,f,c
  4046  002074  3637               	rlcf	(___flmul@grs+2)^0,f,c
  4047  002076  3638               	rlcf	(___flmul@grs+3)^0,f,c
  4048  002078  063F               	decf	___flmul@temp^0,f,c
  4049  00207A  A0D8               	btfss	status,0,c
  4050  00207C  0640               	decf	(___flmul@temp+1)^0,f,c
  4051  00207E                     l3441:
  4052  00207E  AE3D               	btfss	(___flmul@prod+2)^0,7,c
  4053  002080  EF44  F010         	goto	u3111
  4054  002084  EF46  F010         	goto	u3110
  4055  002088                     u3111:
  4056  002088  EF2A  F010         	goto	l3435
  4057  00208C                     u3110:
  4058  00208C  0E00               	movlw	0
  4059  00208E  6E39               	movwf	___flmul@aexp^0,c
  4060  002090  AE38               	btfss	(___flmul@grs+3)^0,7,c
  4061  002092  EF4D  F010         	goto	u3121
  4062  002096  EF4F  F010         	goto	u3120
  4063  00209A                     u3121:
  4064  00209A  EF73  F010         	goto	l1144
  4065  00209E                     u3120:
  4066  00209E  0EFF               	movlw	255
  4067  0020A0  1435               	andwf	___flmul@grs^0,w,c
  4068  0020A2  6E30               	movwf	??___flmul^0,c
  4069  0020A4  0EFF               	movlw	255
  4070  0020A6  1436               	andwf	(___flmul@grs+1)^0,w,c
  4071  0020A8  6E31               	movwf	(??___flmul+1)^0,c
  4072  0020AA  0EFF               	movlw	255
  4073  0020AC  1437               	andwf	(___flmul@grs+2)^0,w,c
  4074  0020AE  6E32               	movwf	(??___flmul+2)^0,c
  4075  0020B0  0E7F               	movlw	127
  4076  0020B2  1438               	andwf	(___flmul@grs+3)^0,w,c
  4077  0020B4  6E33               	movwf	(??___flmul+3)^0,c
  4078  0020B6  5030               	movf	??___flmul^0,w,c
  4079  0020B8  1031               	iorwf	(??___flmul+1)^0,w,c
  4080  0020BA  1032               	iorwf	(??___flmul+2)^0,w,c
  4081  0020BC  1033               	iorwf	(??___flmul+3)^0,w,c
  4082  0020BE  B4D8               	btfsc	status,2,c
  4083  0020C0  EF64  F010         	goto	u3131
  4084  0020C4  EF66  F010         	goto	u3130
  4085  0020C8                     u3131:
  4086  0020C8  EF6A  F010         	goto	l1145
  4087  0020CC                     u3130:
  4088  0020CC                     l3449:
  4089  0020CC  0E01               	movlw	1
  4090  0020CE  6E39               	movwf	___flmul@aexp^0,c
  4091  0020D0  EF73  F010         	goto	l1144
  4092  0020D4                     l1145:
  4093  0020D4  A03B               	btfss	___flmul@prod^0,0,c
  4094  0020D6  EF6F  F010         	goto	u3141
  4095  0020DA  EF71  F010         	goto	u3140
  4096  0020DE                     u3141:
  4097  0020DE  EF73  F010         	goto	l1144
  4098  0020E2                     u3140:
  4099  0020E2  EF66  F010         	goto	l3449
  4100  0020E6                     l1144:
  4101  0020E6  5039               	movf	___flmul@aexp^0,w,c
  4102  0020E8  B4D8               	btfsc	status,2,c
  4103  0020EA  EF79  F010         	goto	u3151
  4104  0020EE  EF7B  F010         	goto	u3150
  4105  0020F2                     u3151:
  4106  0020F2  EF9F  F010         	goto	l3461
  4107  0020F6                     u3150:
  4108  0020F6  0E01               	movlw	1
  4109  0020F8  263B               	addwf	___flmul@prod^0,f,c
  4110  0020FA  0E00               	movlw	0
  4111  0020FC  223C               	addwfc	(___flmul@prod+1)^0,f,c
  4112  0020FE  223D               	addwfc	(___flmul@prod+2)^0,f,c
  4113  002100  223E               	addwfc	(___flmul@prod+3)^0,f,c
  4114  002102  A03E               	btfss	(___flmul@prod+3)^0,0,c
  4115  002104  EF86  F010         	goto	u3161
  4116  002108  EF88  F010         	goto	u3160
  4117  00210C                     u3161:
  4118  00210C  EF9F  F010         	goto	l3461
  4119  002110                     u3160:
  4120  002110  C03B  F030         	movff	___flmul@prod,??___flmul
  4121  002114  C03C  F031         	movff	___flmul@prod+1,??___flmul+1
  4122  002118  C03D  F032         	movff	___flmul@prod+2,??___flmul+2
  4123  00211C  C03E  F033         	movff	___flmul@prod+3,??___flmul+3
  4124  002120  3433               	rlcf	(??___flmul+3)^0,w,c
  4125  002122  3233               	rrcf	(??___flmul+3)^0,f,c
  4126  002124  3232               	rrcf	(??___flmul+2)^0,f,c
  4127  002126  3231               	rrcf	(??___flmul+1)^0,f,c
  4128  002128  3230               	rrcf	??___flmul^0,f,c
  4129  00212A  C030  F03B         	movff	??___flmul,___flmul@prod
  4130  00212E  C031  F03C         	movff	??___flmul+1,___flmul@prod+1
  4131  002132  C032  F03D         	movff	??___flmul+2,___flmul@prod+2
  4132  002136  C033  F03E         	movff	??___flmul+3,___flmul@prod+3
  4133  00213A  4A3F               	infsnz	___flmul@temp^0,f,c
  4134  00213C  2A40               	incf	(___flmul@temp+1)^0,f,c
  4135  00213E                     l3461:
  4136  00213E  BE40               	btfsc	(___flmul@temp+1)^0,7,c
  4137  002140  EFAA  F010         	goto	u3171
  4138  002144  5040               	movf	(___flmul@temp+1)^0,w,c
  4139  002146  E108               	bnz	u3170
  4140  002148  283F               	incf	___flmul@temp^0,w,c
  4141  00214A  A0D8               	btfss	status,0,c
  4142  00214C  EFAA  F010         	goto	u3171
  4143  002150  EFAC  F010         	goto	u3170
  4144  002154                     u3171:
  4145  002154  EFB6  F010         	goto	l3465
  4146  002158                     u3170:
  4147  002158  0E00               	movlw	0
  4148  00215A  6E3B               	movwf	___flmul@prod^0,c
  4149  00215C  0E00               	movlw	0
  4150  00215E  6E3C               	movwf	(___flmul@prod+1)^0,c
  4151  002160  0E80               	movlw	128
  4152  002162  6E3D               	movwf	(___flmul@prod+2)^0,c
  4153  002164  0E7F               	movlw	127
  4154  002166  6E3E               	movwf	(___flmul@prod+3)^0,c
  4155  002168  EFE4  F010         	goto	l3477
  4156  00216C                     l3465:
  4157  00216C  BE40               	btfsc	(___flmul@temp+1)^0,7,c
  4158  00216E  EFC3  F010         	goto	u3180
  4159  002172  5040               	movf	(___flmul@temp+1)^0,w,c
  4160  002174  E106               	bnz	u3181
  4161  002176  043F               	decf	___flmul@temp^0,w,c
  4162  002178  B0D8               	btfsc	status,0,c
  4163  00217A  EFC1  F010         	goto	u3181
  4164  00217E  EFC3  F010         	goto	u3180
  4165  002182                     u3181:
  4166  002182  EFCF  F010         	goto	l1152
  4167  002186                     u3180:
  4168  002186  0E00               	movlw	0
  4169  002188  6E3B               	movwf	___flmul@prod^0,c
  4170  00218A  0E00               	movlw	0
  4171  00218C  6E3C               	movwf	(___flmul@prod+1)^0,c
  4172  00218E  0E00               	movlw	0
  4173  002190  6E3D               	movwf	(___flmul@prod+2)^0,c
  4174  002192  0E00               	movlw	0
  4175  002194  6E3E               	movwf	(___flmul@prod+3)^0,c
  4176  002196  0E00               	movlw	0
  4177  002198  6E34               	movwf	___flmul@sign^0,c
  4178  00219A  EFE4  F010         	goto	l3477
  4179  00219E                     l1152:
  4180  00219E  C03F  F03A         	movff	___flmul@temp,___flmul@bexp
  4181  0021A2  0EFF               	movlw	255
  4182  0021A4  163B               	andwf	___flmul@prod^0,f,c
  4183  0021A6  0EFF               	movlw	255
  4184  0021A8  163C               	andwf	(___flmul@prod+1)^0,f,c
  4185  0021AA  0E7F               	movlw	127
  4186  0021AC  163D               	andwf	(___flmul@prod+2)^0,f,c
  4187  0021AE  0E00               	movlw	0
  4188  0021B0  163E               	andwf	(___flmul@prod+3)^0,f,c
  4189  0021B2  A03A               	btfss	___flmul@bexp^0,0,c
  4190  0021B4  EFDE  F010         	goto	u3191
  4191  0021B8  EFE0  F010         	goto	u3190
  4192  0021BC                     u3191:
  4193  0021BC  EFE1  F010         	goto	l3475
  4194  0021C0                     u3190:
  4195  0021C0  8E3D               	bsf	(___flmul@prod+2)^0,7,c
  4196  0021C2                     l3475:
  4197  0021C2  90D8               	bcf	status,0,c
  4198  0021C4  303A               	rrcf	___flmul@bexp^0,w,c
  4199  0021C6  6E3E               	movwf	(___flmul@prod+3)^0,c
  4200  0021C8                     l3477:
  4201  0021C8  5034               	movf	___flmul@sign^0,w,c
  4202  0021CA  123E               	iorwf	(___flmul@prod+3)^0,f,c
  4203  0021CC  C03B  F028         	movff	___flmul@prod,?___flmul
  4204  0021D0  C03C  F029         	movff	___flmul@prod+1,?___flmul+1
  4205  0021D4  C03D  F02A         	movff	___flmul@prod+2,?___flmul+2
  4206  0021D8  C03E  F02B         	movff	___flmul@prod+3,?___flmul+3
  4207  0021DC                     l1139:
  4208  0021DC  0012               	return		;funcret
  4209  0021DE                     __end_of___flmul:
  4210                           	callstack 0
  4211                           
  4212 ;; *************** function ___flge *****************
  4213 ;; Defined at:
  4214 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\flge.c"
  4215 ;; Parameters:    Size  Location     Type
  4216 ;;  ff1             4    0[COMRAM] unsigned char 
  4217 ;;  ff2             4    4[COMRAM] unsigned char 
  4218 ;; Auto vars:     Size  Location     Type
  4219 ;;		None
  4220 ;; Return value:  Size  Location     Type
  4221 ;;		None               void
  4222 ;; Registers used:
  4223 ;;		wreg, status,2, status,0
  4224 ;; Tracked objects:
  4225 ;;		On entry : 0/0
  4226 ;;		On exit  : 0/0
  4227 ;;		Unchanged: 0/0
  4228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4229 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4230 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4231 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4232 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4233 ;;Total ram usage:       12 bytes
  4234 ;; Hardware stack levels used: 1
  4235 ;; This function calls:
  4236 ;;		Nothing
  4237 ;; This function is called by:
  4238 ;;		_roundf
  4239 ;; This function uses a non-reentrant model
  4240 ;;
  4241                           
  4242                           	psect	text11
  4243  0034FC                     __ptext11:
  4244                           	callstack 0
  4245  0034FC                     ___flge:
  4246                           	callstack 27
  4247  0034FC  0E00               	movlw	0
  4248  0034FE  1401               	andwf	___flge@ff1^0,w,c
  4249  003500  6E09               	movwf	??___flge^0,c
  4250  003502  0E00               	movlw	0
  4251  003504  1402               	andwf	(___flge@ff1+1)^0,w,c
  4252  003506  6E0A               	movwf	(??___flge+1)^0,c
  4253  003508  0E80               	movlw	128
  4254  00350A  1403               	andwf	(___flge@ff1+2)^0,w,c
  4255  00350C  6E0B               	movwf	(??___flge+2)^0,c
  4256  00350E  0E7F               	movlw	127
  4257  003510  1404               	andwf	(___flge@ff1+3)^0,w,c
  4258  003512  6E0C               	movwf	(??___flge+3)^0,c
  4259  003514  5009               	movf	??___flge^0,w,c
  4260  003516  100A               	iorwf	(??___flge+1)^0,w,c
  4261  003518  100B               	iorwf	(??___flge+2)^0,w,c
  4262  00351A  100C               	iorwf	(??___flge+3)^0,w,c
  4263  00351C  A4D8               	btfss	status,2,c
  4264  00351E  EF93  F01A         	goto	u3201
  4265  003522  EF95  F01A         	goto	u3200
  4266  003526                     u3201:
  4267  003526  EF9D  F01A         	goto	l3493
  4268  00352A                     u3200:
  4269  00352A  0E00               	movlw	0
  4270  00352C  6E01               	movwf	___flge@ff1^0,c
  4271  00352E  0E00               	movlw	0
  4272  003530  6E02               	movwf	(___flge@ff1+1)^0,c
  4273  003532  0E00               	movlw	0
  4274  003534  6E03               	movwf	(___flge@ff1+2)^0,c
  4275  003536  0E00               	movlw	0
  4276  003538  6E04               	movwf	(___flge@ff1+3)^0,c
  4277  00353A                     l3493:
  4278  00353A  0E00               	movlw	0
  4279  00353C  1405               	andwf	___flge@ff2^0,w,c
  4280  00353E  6E09               	movwf	??___flge^0,c
  4281  003540  0E00               	movlw	0
  4282  003542  1406               	andwf	(___flge@ff2+1)^0,w,c
  4283  003544  6E0A               	movwf	(??___flge+1)^0,c
  4284  003546  0E80               	movlw	128
  4285  003548  1407               	andwf	(___flge@ff2+2)^0,w,c
  4286  00354A  6E0B               	movwf	(??___flge+2)^0,c
  4287  00354C  0E7F               	movlw	127
  4288  00354E  1408               	andwf	(___flge@ff2+3)^0,w,c
  4289  003550  6E0C               	movwf	(??___flge+3)^0,c
  4290  003552  5009               	movf	??___flge^0,w,c
  4291  003554  100A               	iorwf	(??___flge+1)^0,w,c
  4292  003556  100B               	iorwf	(??___flge+2)^0,w,c
  4293  003558  100C               	iorwf	(??___flge+3)^0,w,c
  4294  00355A  A4D8               	btfss	status,2,c
  4295  00355C  EFB2  F01A         	goto	u3211
  4296  003560  EFB4  F01A         	goto	u3210
  4297  003564                     u3211:
  4298  003564  EFBC  F01A         	goto	l3497
  4299  003568                     u3210:
  4300  003568  0E00               	movlw	0
  4301  00356A  6E05               	movwf	___flge@ff2^0,c
  4302  00356C  0E00               	movlw	0
  4303  00356E  6E06               	movwf	(___flge@ff2+1)^0,c
  4304  003570  0E00               	movlw	0
  4305  003572  6E07               	movwf	(___flge@ff2+2)^0,c
  4306  003574  0E00               	movlw	0
  4307  003576  6E08               	movwf	(___flge@ff2+3)^0,c
  4308  003578                     l3497:
  4309  003578  AE04               	btfss	(___flge@ff1+3)^0,7,c
  4310  00357A  EFC1  F01A         	goto	u3221
  4311  00357E  EFC3  F01A         	goto	u3220
  4312  003582                     u3221:
  4313  003582  EFCC  F01A         	goto	l3501
  4314  003586                     u3220:
  4315  003586  6C01               	negf	___flge@ff1^0,c
  4316  003588  1E02               	comf	(___flge@ff1+1)^0,f,c
  4317  00358A  B0D8               	btfsc	status,0,c
  4318  00358C  2A02               	incf	(___flge@ff1+1)^0,f,c
  4319  00358E  1E03               	comf	(___flge@ff1+2)^0,f,c
  4320  003590  B0D8               	btfsc	status,0,c
  4321  003592  2A03               	incf	(___flge@ff1+2)^0,f,c
  4322  003594  0E80               	movlw	128
  4323  003596  5604               	subfwb	(___flge@ff1+3)^0,f,c
  4324  003598                     l3501:
  4325  003598  AE08               	btfss	(___flge@ff2+3)^0,7,c
  4326  00359A  EFD1  F01A         	goto	u3231
  4327  00359E  EFD3  F01A         	goto	u3230
  4328  0035A2                     u3231:
  4329  0035A2  EFDC  F01A         	goto	l786
  4330  0035A6                     u3230:
  4331  0035A6  6C05               	negf	___flge@ff2^0,c
  4332  0035A8  1E06               	comf	(___flge@ff2+1)^0,f,c
  4333  0035AA  B0D8               	btfsc	status,0,c
  4334  0035AC  2A06               	incf	(___flge@ff2+1)^0,f,c
  4335  0035AE  1E07               	comf	(___flge@ff2+2)^0,f,c
  4336  0035B0  B0D8               	btfsc	status,0,c
  4337  0035B2  2A07               	incf	(___flge@ff2+2)^0,f,c
  4338  0035B4  0E80               	movlw	128
  4339  0035B6  5608               	subfwb	(___flge@ff2+3)^0,f,c
  4340  0035B8                     l786:
  4341  0035B8  0E00               	movlw	0
  4342  0035BA  1A01               	xorwf	___flge@ff1^0,f,c
  4343  0035BC  0E00               	movlw	0
  4344  0035BE  1A02               	xorwf	(___flge@ff1+1)^0,f,c
  4345  0035C0  0E00               	movlw	0
  4346  0035C2  1A03               	xorwf	(___flge@ff1+2)^0,f,c
  4347  0035C4  0E80               	movlw	128
  4348  0035C6  1A04               	xorwf	(___flge@ff1+3)^0,f,c
  4349  0035C8  0E00               	movlw	0
  4350  0035CA  1A05               	xorwf	___flge@ff2^0,f,c
  4351  0035CC  0E00               	movlw	0
  4352  0035CE  1A06               	xorwf	(___flge@ff2+1)^0,f,c
  4353  0035D0  0E00               	movlw	0
  4354  0035D2  1A07               	xorwf	(___flge@ff2+2)^0,f,c
  4355  0035D4  0E80               	movlw	128
  4356  0035D6  1A08               	xorwf	(___flge@ff2+3)^0,f,c
  4357  0035D8  5005               	movf	___flge@ff2^0,w,c
  4358  0035DA  5C01               	subwf	___flge@ff1^0,w,c
  4359  0035DC  5006               	movf	(___flge@ff2+1)^0,w,c
  4360  0035DE  5802               	subwfb	(___flge@ff1+1)^0,w,c
  4361  0035E0  5007               	movf	(___flge@ff2+2)^0,w,c
  4362  0035E2  5803               	subwfb	(___flge@ff1+2)^0,w,c
  4363  0035E4  5008               	movf	(___flge@ff2+3)^0,w,c
  4364  0035E6  5804               	subwfb	(___flge@ff1+3)^0,w,c
  4365  0035E8  B0D8               	btfsc	status,0,c
  4366  0035EA  EFF9  F01A         	goto	u3241
  4367  0035EE  EFFB  F01A         	goto	u3240
  4368  0035F2                     u3241:
  4369  0035F2  EFFE  F01A         	goto	l3507
  4370  0035F6                     u3240:
  4371  0035F6  90D8               	bcf	status,0,c
  4372  0035F8  EFFF  F01A         	goto	l791
  4373  0035FC                     l3507:
  4374  0035FC  80D8               	bsf	status,0,c
  4375  0035FE                     l791:
  4376  0035FE  0012               	return		;funcret
  4377  003600                     __end_of___flge:
  4378                           	callstack 0
  4379                           
  4380 ;; *************** function ___fltol *****************
  4381 ;; Defined at:
  4382 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\fltol.c"
  4383 ;; Parameters:    Size  Location     Type
  4384 ;;  f1              4   90[COMRAM] unsigned char 
  4385 ;; Auto vars:     Size  Location     Type
  4386 ;;  exp1            1    5[BANK0 ] unsigned char 
  4387 ;;  sign1           1    4[BANK0 ] unsigned char 
  4388 ;; Return value:  Size  Location     Type
  4389 ;;                  4   90[COMRAM] long 
  4390 ;; Registers used:
  4391 ;;		wreg, status,2, status,0
  4392 ;; Tracked objects:
  4393 ;;		On entry : 0/0
  4394 ;;		On exit  : 0/0
  4395 ;;		Unchanged: 0/0
  4396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4397 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4398 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4399 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4400 ;;      Totals:         4       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4401 ;;Total ram usage:       10 bytes
  4402 ;; Hardware stack levels used: 1
  4403 ;; This function calls:
  4404 ;;		Nothing
  4405 ;; This function is called by:
  4406 ;;		_lroundf
  4407 ;; This function uses a non-reentrant model
  4408 ;;
  4409                           
  4410                           	psect	text12
  4411  0033F4                     __ptext12:
  4412                           	callstack 0
  4413  0033F4                     ___fltol:
  4414                           	callstack 28
  4415  0033F4  345D               	rlcf	(___fltol@f1+2)^0,w,c
  4416  0033F6  345E               	rlcf	(___fltol@f1+3)^0,w,c
  4417  0033F8  0100               	movlb	0	; () banked
  4418  0033FA  6F65               	movwf	___fltol@exp1& (0+255),b
  4419  0033FC  5165               	movf	___fltol@exp1& (0+255),w,b
  4420  0033FE  A4D8               	btfss	status,2,c
  4421  003400  EF04  F01A         	goto	u3291
  4422  003404  EF06  F01A         	goto	u3290
  4423  003408                     u3291:
  4424  003408  EF10  F01A         	goto	l3587
  4425  00340C                     u3290:
  4426  00340C                     l3583:
  4427                           
  4428                           ; BSR set to: 0
  4429  00340C  0E00               	movlw	0
  4430  00340E  6E5B               	movwf	?___fltol^0,c
  4431  003410  0E00               	movlw	0
  4432  003412  6E5C               	movwf	(?___fltol+1)^0,c
  4433  003414  0E00               	movlw	0
  4434  003416  6E5D               	movwf	(?___fltol+2)^0,c
  4435  003418  0E00               	movlw	0
  4436  00341A  6E5E               	movwf	(?___fltol+3)^0,c
  4437  00341C  EF7D  F01A         	goto	l818
  4438  003420                     l3587:
  4439                           
  4440                           ; BSR set to: 0
  4441  003420  C05B  F060         	movff	___fltol@f1,??___fltol
  4442  003424  C05C  F061         	movff	___fltol@f1+1,??___fltol+1
  4443  003428  C05D  F062         	movff	___fltol@f1+2,??___fltol+2
  4444  00342C  C05E  F063         	movff	___fltol@f1+3,??___fltol+3
  4445  003430  0E20               	movlw	32
  4446  003432  EF20  F01A         	goto	u3300
  4447  003436                     u3305:
  4448  003436  90D8               	bcf	status,0,c
  4449  003438  3363               	rrcf	(??___fltol+3)& (0+255),f,b
  4450  00343A  3362               	rrcf	(??___fltol+2)& (0+255),f,b
  4451  00343C  3361               	rrcf	(??___fltol+1)& (0+255),f,b
  4452  00343E  3360               	rrcf	??___fltol& (0+255),f,b
  4453  003440                     u3300:
  4454  003440  2EE8               	decfsz	wreg,f,c
  4455  003442  EF1B  F01A         	goto	u3305
  4456  003446  5160               	movf	??___fltol& (0+255),w,b
  4457  003448  6F64               	movwf	___fltol@sign1& (0+255),b
  4458  00344A                     
  4459                           ; BSR set to: 0
  4460  00344A  8E5D               	bsf	(___fltol@f1+2)^0,7,c
  4461  00344C                     
  4462                           ; BSR set to: 0
  4463  00344C  0EFF               	movlw	255
  4464  00344E  165B               	andwf	___fltol@f1^0,f,c
  4465  003450  0EFF               	movlw	255
  4466  003452  165C               	andwf	(___fltol@f1+1)^0,f,c
  4467  003454  0EFF               	movlw	255
  4468  003456  165D               	andwf	(___fltol@f1+2)^0,f,c
  4469  003458  0E00               	movlw	0
  4470  00345A  165E               	andwf	(___fltol@f1+3)^0,f,c
  4471  00345C                     
  4472                           ; BSR set to: 0
  4473  00345C  0E96               	movlw	150
  4474  00345E  5F65               	subwf	___fltol@exp1& (0+255),f,b
  4475  003460                     
  4476                           ; BSR set to: 0
  4477  003460  BF65               	btfsc	___fltol@exp1& (0+255),7,b
  4478  003462  EF37  F01A         	goto	u3310
  4479  003466  EF35  F01A         	goto	u3311
  4480  00346A                     u3311:
  4481  00346A  EF4D  F01A         	goto	l3607
  4482  00346E                     u3310:
  4483  00346E                     
  4484                           ; BSR set to: 0
  4485  00346E  5165               	movf	___fltol@exp1& (0+255),w,b
  4486  003470  0A80               	xorlw	128
  4487  003472  0F97               	addlw	151
  4488  003474  B0D8               	btfsc	status,0,c
  4489  003476  EF3F  F01A         	goto	u3321
  4490  00347A  EF41  F01A         	goto	u3320
  4491  00347E                     u3321:
  4492  00347E  EF43  F01A         	goto	l3603
  4493  003482                     u3320:
  4494  003482  EF06  F01A         	goto	l3583
  4495  003486                     l3603:
  4496                           
  4497                           ; BSR set to: 0
  4498  003486  90D8               	bcf	status,0,c
  4499  003488  325E               	rrcf	(___fltol@f1+3)^0,f,c
  4500  00348A  325D               	rrcf	(___fltol@f1+2)^0,f,c
  4501  00348C  325C               	rrcf	(___fltol@f1+1)^0,f,c
  4502  00348E  325B               	rrcf	___fltol@f1^0,f,c
  4503  003490                     
  4504                           ; BSR set to: 0
  4505  003490  3F65               	incfsz	___fltol@exp1& (0+255),f,b
  4506  003492  EF43  F01A         	goto	l3603
  4507  003496  EF65  F01A         	goto	l3617
  4508  00349A                     l3607:
  4509                           
  4510                           ; BSR set to: 0
  4511  00349A  0E1F               	movlw	31
  4512  00349C  6565               	cpfsgt	___fltol@exp1& (0+255),b
  4513  00349E  EF53  F01A         	goto	u3331
  4514  0034A2  EF55  F01A         	goto	u3330
  4515  0034A6                     u3331:
  4516  0034A6  EF5D  F01A         	goto	l3615
  4517  0034AA                     u3330:
  4518  0034AA  EF06  F01A         	goto	l3583
  4519  0034AE                     l3613:
  4520                           
  4521                           ; BSR set to: 0
  4522  0034AE  90D8               	bcf	status,0,c
  4523  0034B0  365B               	rlcf	___fltol@f1^0,f,c
  4524  0034B2  365C               	rlcf	(___fltol@f1+1)^0,f,c
  4525  0034B4  365D               	rlcf	(___fltol@f1+2)^0,f,c
  4526  0034B6  365E               	rlcf	(___fltol@f1+3)^0,f,c
  4527  0034B8  0765               	decf	___fltol@exp1& (0+255),f,b
  4528  0034BA                     l3615:
  4529                           
  4530                           ; BSR set to: 0
  4531  0034BA  5165               	movf	___fltol@exp1& (0+255),w,b
  4532  0034BC  A4D8               	btfss	status,2,c
  4533  0034BE  EF63  F01A         	goto	u3341
  4534  0034C2  EF65  F01A         	goto	u3340
  4535  0034C6                     u3341:
  4536  0034C6  EF57  F01A         	goto	l3613
  4537  0034CA                     u3340:
  4538  0034CA                     l3617:
  4539                           
  4540                           ; BSR set to: 0
  4541  0034CA  5164               	movf	___fltol@sign1& (0+255),w,b
  4542  0034CC  B4D8               	btfsc	status,2,c
  4543  0034CE  EF6B  F01A         	goto	u3351
  4544  0034D2  EF6D  F01A         	goto	u3350
  4545  0034D6                     u3351:
  4546  0034D6  EF75  F01A         	goto	l3621
  4547  0034DA                     u3350:
  4548  0034DA                     
  4549                           ; BSR set to: 0
  4550  0034DA  1E5E               	comf	(___fltol@f1+3)^0,f,c
  4551  0034DC  1E5D               	comf	(___fltol@f1+2)^0,f,c
  4552  0034DE  1E5C               	comf	(___fltol@f1+1)^0,f,c
  4553  0034E0  6C5B               	negf	___fltol@f1^0,c
  4554  0034E2  0E00               	movlw	0
  4555  0034E4  225C               	addwfc	(___fltol@f1+1)^0,f,c
  4556  0034E6  225D               	addwfc	(___fltol@f1+2)^0,f,c
  4557  0034E8  225E               	addwfc	(___fltol@f1+3)^0,f,c
  4558  0034EA                     l3621:
  4559                           
  4560                           ; BSR set to: 0
  4561  0034EA  C05B  F05B         	movff	___fltol@f1,?___fltol
  4562  0034EE  C05C  F05C         	movff	___fltol@f1+1,?___fltol+1
  4563  0034F2  C05D  F05D         	movff	___fltol@f1+2,?___fltol+2
  4564  0034F6  C05E  F05E         	movff	___fltol@f1+3,?___fltol+3
  4565  0034FA                     l818:
  4566                           
  4567                           ; BSR set to: 0
  4568  0034FA  0012               	return		;funcret
  4569  0034FC                     __end_of___fltol:
  4570                           	callstack 0
  4571                           
  4572 ;; *************** function _compare *****************
  4573 ;; Defined at:
  4574 ;;		line 272 in file "color.c"
  4575 ;; Parameters:    Size  Location     Type
  4576 ;;  lower           2   10[BANK0 ] unsigned int 
  4577 ;;  value2compar    2   12[BANK0 ] unsigned int 
  4578 ;;  upper           2   14[BANK0 ] unsigned int 
  4579 ;; Auto vars:     Size  Location     Type
  4580 ;;  result          1   94[COMRAM] unsigned char 
  4581 ;; Return value:  Size  Location     Type
  4582 ;;                  1    wreg      unsigned char 
  4583 ;; Registers used:
  4584 ;;		wreg, status,2, status,0
  4585 ;; Tracked objects:
  4586 ;;		On entry : 0/0
  4587 ;;		On exit  : 0/0
  4588 ;;		Unchanged: 0/0
  4589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4590 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4591 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4592 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4593 ;;      Totals:         1       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4594 ;;Total ram usage:        7 bytes
  4595 ;; Hardware stack levels used: 1
  4596 ;; This function calls:
  4597 ;;		Nothing
  4598 ;; This function is called by:
  4599 ;;		_detect_color
  4600 ;; This function uses a non-reentrant model
  4601 ;;
  4602                           
  4603                           	psect	text13
  4604  003DFE                     __ptext13:
  4605                           	callstack 0
  4606  003DFE                     _compare:
  4607                           	callstack 29
  4608  003DFE                     
  4609                           ;color.c: 272: unsigned char compare(unsigned int lower, unsigned int value2compare, uns
      +                          igned int upper);color.c: 273: {;color.c: 274:     unsigned char result = 0;
  4610  003DFE  0E00               	movlw	0
  4611  003E00  6E5F               	movwf	compare@result^0,c
  4612  003E02                     
  4613                           ;color.c: 275:     if (lower < value2compare && value2compare <= upper){result = 1;}
  4614  003E02  0100               	movlb	0	; () banked
  4615  003E04  516C               	movf	compare@value2compare& (0+255),w,b
  4616  003E06  5D6A               	subwf	compare@lower& (0+255),w,b
  4617  003E08  516D               	movf	(compare@value2compare+1)& (0+255),w,b
  4618  003E0A  596B               	subwfb	(compare@lower+1)& (0+255),w,b
  4619  003E0C  B0D8               	btfsc	status,0,c
  4620  003E0E  EF0B  F01F         	goto	u3551
  4621  003E12  EF0D  F01F         	goto	u3550
  4622  003E16                     u3551:
  4623  003E16  EF1A  F01F         	goto	l134
  4624  003E1A                     u3550:
  4625  003E1A                     
  4626                           ; BSR set to: 0
  4627  003E1A  516C               	movf	compare@value2compare& (0+255),w,b
  4628  003E1C  5D6E               	subwf	compare@upper& (0+255),w,b
  4629  003E1E  516D               	movf	(compare@value2compare+1)& (0+255),w,b
  4630  003E20  596F               	subwfb	(compare@upper+1)& (0+255),w,b
  4631  003E22  A0D8               	btfss	status,0,c
  4632  003E24  EF16  F01F         	goto	u3561
  4633  003E28  EF18  F01F         	goto	u3560
  4634  003E2C                     u3561:
  4635  003E2C  EF1A  F01F         	goto	l134
  4636  003E30                     u3560:
  4637  003E30                     
  4638                           ; BSR set to: 0
  4639  003E30  0E01               	movlw	1
  4640  003E32  6E5F               	movwf	compare@result^0,c
  4641  003E34                     l134:
  4642                           
  4643                           ; BSR set to: 0
  4644                           ;color.c: 276:     return result;
  4645  003E34  505F               	movf	compare@result^0,w,c
  4646  003E36                     
  4647                           ; BSR set to: 0
  4648  003E36  0012               	return		;funcret
  4649  003E38                     __end_of_compare:
  4650                           	callstack 0
  4651                           
  4652 ;; *************** function ___xxtofl *****************
  4653 ;; Defined at:
  4654 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\xxtofl.c"
  4655 ;; Parameters:    Size  Location     Type
  4656 ;;  sign            1    wreg     unsigned char 
  4657 ;;  val             4    0[COMRAM] long 
  4658 ;; Auto vars:     Size  Location     Type
  4659 ;;  sign            1    8[COMRAM] unsigned char 
  4660 ;;  arg             4   10[COMRAM] unsigned long 
  4661 ;;  exp             1    9[COMRAM] unsigned char 
  4662 ;; Return value:  Size  Location     Type
  4663 ;;                  4    0[COMRAM] unsigned char 
  4664 ;; Registers used:
  4665 ;;		wreg, status,2, status,0
  4666 ;; Tracked objects:
  4667 ;;		On entry : 0/0
  4668 ;;		On exit  : 0/0
  4669 ;;		Unchanged: 0/0
  4670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4671 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4672 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4673 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4674 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4675 ;;Total ram usage:       14 bytes
  4676 ;; Hardware stack levels used: 1
  4677 ;; This function calls:
  4678 ;;		Nothing
  4679 ;; This function is called by:
  4680 ;;		_detect_color
  4681 ;;		_check_color_reading
  4682 ;; This function uses a non-reentrant model
  4683 ;;
  4684                           
  4685                           	psect	text14
  4686  002C0A                     __ptext14:
  4687                           	callstack 0
  4688  002C0A                     ___xxtofl:
  4689                           	callstack 29
  4690                           
  4691                           ; BSR set to: 0
  4692                           ;incstack = 0
  4693                           ;___xxtofl@sign stored from wreg
  4694  002C0A  6E09               	movwf	___xxtofl@sign^0,c
  4695  002C0C  5009               	movf	___xxtofl@sign^0,w,c
  4696  002C0E  B4D8               	btfsc	status,2,c
  4697  002C10  EF0C  F016         	goto	u3821
  4698  002C14  EF0E  F016         	goto	u3820
  4699  002C18                     u3821:
  4700  002C18  EF30  F016         	goto	l1176
  4701  002C1C                     u3820:
  4702  002C1C  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  4703  002C1E  EF15  F016         	goto	u3830
  4704  002C22  EF13  F016         	goto	u3831
  4705  002C26                     u3831:
  4706  002C26  EF30  F016         	goto	l1176
  4707  002C2A                     u3830:
  4708  002C2A  C001  F005         	movff	___xxtofl@val,??___xxtofl
  4709  002C2E  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
  4710  002C32  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
  4711  002C36  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
  4712  002C3A  1E05               	comf	??___xxtofl^0,f,c
  4713  002C3C  1E06               	comf	(??___xxtofl+1)^0,f,c
  4714  002C3E  1E07               	comf	(??___xxtofl+2)^0,f,c
  4715  002C40  1E08               	comf	(??___xxtofl+3)^0,f,c
  4716  002C42  2A05               	incf	??___xxtofl^0,f,c
  4717  002C44  0E00               	movlw	0
  4718  002C46  2206               	addwfc	(??___xxtofl+1)^0,f,c
  4719  002C48  2207               	addwfc	(??___xxtofl+2)^0,f,c
  4720  002C4A  2208               	addwfc	(??___xxtofl+3)^0,f,c
  4721  002C4C  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
  4722  002C50  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
  4723  002C54  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
  4724  002C58  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
  4725  002C5C  EF38  F016         	goto	l3913
  4726  002C60                     l1176:
  4727  002C60  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
  4728  002C64  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  4729  002C68  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  4730  002C6C  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  4731  002C70                     l3913:
  4732  002C70  5001               	movf	___xxtofl@val^0,w,c
  4733  002C72  1002               	iorwf	(___xxtofl@val+1)^0,w,c
  4734  002C74  1003               	iorwf	(___xxtofl@val+2)^0,w,c
  4735  002C76  1004               	iorwf	(___xxtofl@val+3)^0,w,c
  4736  002C78  A4D8               	btfss	status,2,c
  4737  002C7A  EF41  F016         	goto	u3841
  4738  002C7E  EF43  F016         	goto	u3840
  4739  002C82                     u3841:
  4740  002C82  EF4D  F016         	goto	l3919
  4741  002C86                     u3840:
  4742  002C86  0E00               	movlw	0
  4743  002C88  6E01               	movwf	?___xxtofl^0,c
  4744  002C8A  0E00               	movlw	0
  4745  002C8C  6E02               	movwf	(?___xxtofl+1)^0,c
  4746  002C8E  0E00               	movlw	0
  4747  002C90  6E03               	movwf	(?___xxtofl+2)^0,c
  4748  002C92  0E00               	movlw	0
  4749  002C94  6E04               	movwf	(?___xxtofl+3)^0,c
  4750  002C96  EFDE  F016         	goto	l1179
  4751  002C9A                     l3919:
  4752  002C9A  0E96               	movlw	150
  4753  002C9C  6E0A               	movwf	___xxtofl@exp^0,c
  4754  002C9E  EF57  F016         	goto	l3923
  4755  002CA2                     l3921:
  4756  002CA2  2A0A               	incf	___xxtofl@exp^0,f,c
  4757  002CA4  90D8               	bcf	status,0,c
  4758  002CA6  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  4759  002CA8  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  4760  002CAA  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  4761  002CAC  320B               	rrcf	___xxtofl@arg^0,f,c
  4762  002CAE                     l3923:
  4763  002CAE  0E00               	movlw	0
  4764  002CB0  140B               	andwf	___xxtofl@arg^0,w,c
  4765  002CB2  6E05               	movwf	??___xxtofl^0,c
  4766  002CB4  0E00               	movlw	0
  4767  002CB6  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  4768  002CB8  6E06               	movwf	(??___xxtofl+1)^0,c
  4769  002CBA  0E00               	movlw	0
  4770  002CBC  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  4771  002CBE  6E07               	movwf	(??___xxtofl+2)^0,c
  4772  002CC0  0EFE               	movlw	254
  4773  002CC2  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  4774  002CC4  6E08               	movwf	(??___xxtofl+3)^0,c
  4775  002CC6  5005               	movf	??___xxtofl^0,w,c
  4776  002CC8  1006               	iorwf	(??___xxtofl+1)^0,w,c
  4777  002CCA  1007               	iorwf	(??___xxtofl+2)^0,w,c
  4778  002CCC  1008               	iorwf	(??___xxtofl+3)^0,w,c
  4779  002CCE  A4D8               	btfss	status,2,c
  4780  002CD0  EF6C  F016         	goto	u3851
  4781  002CD4  EF6E  F016         	goto	u3850
  4782  002CD8                     u3851:
  4783  002CD8  EF51  F016         	goto	l3921
  4784  002CDC                     u3850:
  4785  002CDC  EF7C  F016         	goto	l1183
  4786  002CE0                     l3925:
  4787  002CE0  2A0A               	incf	___xxtofl@exp^0,f,c
  4788  002CE2  0E01               	movlw	1
  4789  002CE4  260B               	addwf	___xxtofl@arg^0,f,c
  4790  002CE6  0E00               	movlw	0
  4791  002CE8  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
  4792  002CEA  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
  4793  002CEC  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
  4794  002CEE  90D8               	bcf	status,0,c
  4795  002CF0  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  4796  002CF2  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  4797  002CF4  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  4798  002CF6  320B               	rrcf	___xxtofl@arg^0,f,c
  4799  002CF8                     l1183:
  4800  002CF8  0E00               	movlw	0
  4801  002CFA  140B               	andwf	___xxtofl@arg^0,w,c
  4802  002CFC  6E05               	movwf	??___xxtofl^0,c
  4803  002CFE  0E00               	movlw	0
  4804  002D00  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  4805  002D02  6E06               	movwf	(??___xxtofl+1)^0,c
  4806  002D04  0E00               	movlw	0
  4807  002D06  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  4808  002D08  6E07               	movwf	(??___xxtofl+2)^0,c
  4809  002D0A  0EFF               	movlw	255
  4810  002D0C  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  4811  002D0E  6E08               	movwf	(??___xxtofl+3)^0,c
  4812  002D10  5005               	movf	??___xxtofl^0,w,c
  4813  002D12  1006               	iorwf	(??___xxtofl+1)^0,w,c
  4814  002D14  1007               	iorwf	(??___xxtofl+2)^0,w,c
  4815  002D16  1008               	iorwf	(??___xxtofl+3)^0,w,c
  4816  002D18  A4D8               	btfss	status,2,c
  4817  002D1A  EF91  F016         	goto	u3861
  4818  002D1E  EF93  F016         	goto	u3860
  4819  002D22                     u3861:
  4820  002D22  EF70  F016         	goto	l3925
  4821  002D26                     u3860:
  4822  002D26  EF9B  F016         	goto	l3933
  4823  002D2A                     l3931:
  4824  002D2A  060A               	decf	___xxtofl@exp^0,f,c
  4825  002D2C  90D8               	bcf	status,0,c
  4826  002D2E  360B               	rlcf	___xxtofl@arg^0,f,c
  4827  002D30  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
  4828  002D32  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
  4829  002D34  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
  4830  002D36                     l3933:
  4831  002D36  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
  4832  002D38  EFA0  F016         	goto	u3871
  4833  002D3C  EFA2  F016         	goto	u3870
  4834  002D40                     u3871:
  4835  002D40  EFAA  F016         	goto	l1190
  4836  002D44                     u3870:
  4837  002D44  0E02               	movlw	2
  4838  002D46  600A               	cpfslt	___xxtofl@exp^0,c
  4839  002D48  EFA8  F016         	goto	u3881
  4840  002D4C  EFAA  F016         	goto	u3880
  4841  002D50                     u3881:
  4842  002D50  EF95  F016         	goto	l3931
  4843  002D54                     u3880:
  4844  002D54                     l1190:
  4845  002D54  B00A               	btfsc	___xxtofl@exp^0,0,c
  4846  002D56  EFAF  F016         	goto	u3891
  4847  002D5A  EFB1  F016         	goto	u3890
  4848  002D5E                     u3891:
  4849  002D5E  EFB2  F016         	goto	l3939
  4850  002D62                     u3890:
  4851  002D62  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
  4852  002D64                     l3939:
  4853  002D64  90D8               	bcf	status,0,c
  4854  002D66  320A               	rrcf	___xxtofl@exp^0,f,c
  4855  002D68  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
  4856  002D6C  6A06               	clrf	(??___xxtofl+1)^0,c
  4857  002D6E  6A07               	clrf	(??___xxtofl+2)^0,c
  4858  002D70  6A08               	clrf	(??___xxtofl+3)^0,c
  4859  002D72  C005  F008         	movff	??___xxtofl,??___xxtofl+3
  4860  002D76  6A07               	clrf	(??___xxtofl+2)^0,c
  4861  002D78  6A06               	clrf	(??___xxtofl+1)^0,c
  4862  002D7A  6A05               	clrf	??___xxtofl^0,c
  4863  002D7C  5005               	movf	??___xxtofl^0,w,c
  4864  002D7E  120B               	iorwf	___xxtofl@arg^0,f,c
  4865  002D80  5006               	movf	(??___xxtofl+1)^0,w,c
  4866  002D82  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
  4867  002D84  5007               	movf	(??___xxtofl+2)^0,w,c
  4868  002D86  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
  4869  002D88  5008               	movf	(??___xxtofl+3)^0,w,c
  4870  002D8A  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
  4871  002D8C  5009               	movf	___xxtofl@sign^0,w,c
  4872  002D8E  B4D8               	btfsc	status,2,c
  4873  002D90  EFCC  F016         	goto	u3901
  4874  002D94  EFCE  F016         	goto	u3900
  4875  002D98                     u3901:
  4876  002D98  EFD6  F016         	goto	l3949
  4877  002D9C                     u3900:
  4878  002D9C  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  4879  002D9E  EFD5  F016         	goto	u3910
  4880  002DA2  EFD3  F016         	goto	u3911
  4881  002DA6                     u3911:
  4882  002DA6  EFD6  F016         	goto	l3949
  4883  002DAA                     u3910:
  4884  002DAA  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
  4885  002DAC                     l3949:
  4886  002DAC  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
  4887  002DB0  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
  4888  002DB4  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
  4889  002DB8  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
  4890  002DBC                     l1179:
  4891  002DBC  0012               	return		;funcret
  4892  002DBE                     __end_of___xxtofl:
  4893                           	callstack 0
  4894                           
  4895 ;; *************** function ___fldiv *****************
  4896 ;; Defined at:
  4897 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\sprcdiv.c"
  4898 ;; Parameters:    Size  Location     Type
  4899 ;;  b               4   14[COMRAM] unsigned char 
  4900 ;;  a               4   18[COMRAM] unsigned char 
  4901 ;; Auto vars:     Size  Location     Type
  4902 ;;  grs             4   33[COMRAM] unsigned long 
  4903 ;;  rem             4   26[COMRAM] unsigned long 
  4904 ;;  new_exp         2   31[COMRAM] short 
  4905 ;;  aexp            1   38[COMRAM] unsigned char 
  4906 ;;  bexp            1   37[COMRAM] unsigned char 
  4907 ;;  sign            1   30[COMRAM] unsigned char 
  4908 ;; Return value:  Size  Location     Type
  4909 ;;                  4   14[COMRAM] unsigned char 
  4910 ;; Registers used:
  4911 ;;		wreg, status,2, status,0
  4912 ;; Tracked objects:
  4913 ;;		On entry : 0/0
  4914 ;;		On exit  : 0/0
  4915 ;;		Unchanged: 0/0
  4916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4917 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4918 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4919 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4920 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4921 ;;Total ram usage:       25 bytes
  4922 ;; Hardware stack levels used: 1
  4923 ;; This function calls:
  4924 ;;		Nothing
  4925 ;; This function is called by:
  4926 ;;		_detect_color
  4927 ;;		_check_color_reading
  4928 ;; This function uses a non-reentrant model
  4929 ;;
  4930                           
  4931                           	psect	text15
  4932  00258C                     __ptext15:
  4933                           	callstack 0
  4934  00258C                     ___fldiv:
  4935                           	callstack 29
  4936  00258C  5012               	movf	(___fldiv@b+3)^0,w,c
  4937  00258E  0B80               	andlw	128
  4938  002590  6E1F               	movwf	___fldiv@sign^0,c
  4939  002592  5012               	movf	(___fldiv@b+3)^0,w,c
  4940  002594  2412               	addwf	(___fldiv@b+3)^0,w,c
  4941  002596  6E26               	movwf	___fldiv@bexp^0,c
  4942  002598  AE11               	btfss	(___fldiv@b+2)^0,7,c
  4943  00259A  EFD1  F012         	goto	u3591
  4944  00259E  EFD3  F012         	goto	u3590
  4945  0025A2                     u3591:
  4946  0025A2  EFD4  F012         	goto	l3775
  4947  0025A6                     u3590:
  4948  0025A6  8026               	bsf	___fldiv@bexp^0,0,c
  4949  0025A8                     l3775:
  4950  0025A8  5026               	movf	___fldiv@bexp^0,w,c
  4951  0025AA  B4D8               	btfsc	status,2,c
  4952  0025AC  EFDA  F012         	goto	u3601
  4953  0025B0  EFDC  F012         	goto	u3600
  4954  0025B4                     u3601:
  4955  0025B4  EFF1  F012         	goto	l3785
  4956  0025B8                     u3600:
  4957  0025B8  2826               	incf	___fldiv@bexp^0,w,c
  4958  0025BA  A4D8               	btfss	status,2,c
  4959  0025BC  EFE2  F012         	goto	u3611
  4960  0025C0  EFE4  F012         	goto	u3610
  4961  0025C4                     u3611:
  4962  0025C4  EFEC  F012         	goto	l3781
  4963  0025C8                     u3610:
  4964  0025C8  0E00               	movlw	0
  4965  0025CA  6E0F               	movwf	___fldiv@b^0,c
  4966  0025CC  0E00               	movlw	0
  4967  0025CE  6E10               	movwf	(___fldiv@b+1)^0,c
  4968  0025D0  0E00               	movlw	0
  4969  0025D2  6E11               	movwf	(___fldiv@b+2)^0,c
  4970  0025D4  0E00               	movlw	0
  4971  0025D6  6E12               	movwf	(___fldiv@b+3)^0,c
  4972  0025D8                     l3781:
  4973  0025D8  8E11               	bsf	(___fldiv@b+2)^0,7,c
  4974  0025DA  0E00               	movlw	0
  4975  0025DC  6E12               	movwf	(___fldiv@b+3)^0,c
  4976  0025DE  EFF9  F012         	goto	l3787
  4977  0025E2                     l3785:
  4978  0025E2  0E00               	movlw	0
  4979  0025E4  6E0F               	movwf	___fldiv@b^0,c
  4980  0025E6  0E00               	movlw	0
  4981  0025E8  6E10               	movwf	(___fldiv@b+1)^0,c
  4982  0025EA  0E00               	movlw	0
  4983  0025EC  6E11               	movwf	(___fldiv@b+2)^0,c
  4984  0025EE  0E00               	movlw	0
  4985  0025F0  6E12               	movwf	(___fldiv@b+3)^0,c
  4986  0025F2                     l3787:
  4987  0025F2  5016               	movf	(___fldiv@a+3)^0,w,c
  4988  0025F4  0B80               	andlw	128
  4989  0025F6  1A1F               	xorwf	___fldiv@sign^0,f,c
  4990  0025F8  5016               	movf	(___fldiv@a+3)^0,w,c
  4991  0025FA  2416               	addwf	(___fldiv@a+3)^0,w,c
  4992  0025FC  6E27               	movwf	___fldiv@aexp^0,c
  4993  0025FE  AE15               	btfss	(___fldiv@a+2)^0,7,c
  4994  002600  EF04  F013         	goto	u3621
  4995  002604  EF06  F013         	goto	u3620
  4996  002608                     u3621:
  4997  002608  EF07  F013         	goto	l3795
  4998  00260C                     u3620:
  4999  00260C  8027               	bsf	___fldiv@aexp^0,0,c
  5000  00260E                     l3795:
  5001  00260E  5027               	movf	___fldiv@aexp^0,w,c
  5002  002610  B4D8               	btfsc	status,2,c
  5003  002612  EF0D  F013         	goto	u3631
  5004  002616  EF0F  F013         	goto	u3630
  5005  00261A                     u3631:
  5006  00261A  EF24  F013         	goto	l3805
  5007  00261E                     u3630:
  5008  00261E  2827               	incf	___fldiv@aexp^0,w,c
  5009  002620  A4D8               	btfss	status,2,c
  5010  002622  EF15  F013         	goto	u3641
  5011  002626  EF17  F013         	goto	u3640
  5012  00262A                     u3641:
  5013  00262A  EF1F  F013         	goto	l3801
  5014  00262E                     u3640:
  5015  00262E  0E00               	movlw	0
  5016  002630  6E13               	movwf	___fldiv@a^0,c
  5017  002632  0E00               	movlw	0
  5018  002634  6E14               	movwf	(___fldiv@a+1)^0,c
  5019  002636  0E00               	movlw	0
  5020  002638  6E15               	movwf	(___fldiv@a+2)^0,c
  5021  00263A  0E00               	movlw	0
  5022  00263C  6E16               	movwf	(___fldiv@a+3)^0,c
  5023  00263E                     l3801:
  5024  00263E  8E15               	bsf	(___fldiv@a+2)^0,7,c
  5025  002640  0E00               	movlw	0
  5026  002642  6E16               	movwf	(___fldiv@a+3)^0,c
  5027  002644  EF2C  F013         	goto	l3807
  5028  002648                     l3805:
  5029  002648  0E00               	movlw	0
  5030  00264A  6E13               	movwf	___fldiv@a^0,c
  5031  00264C  0E00               	movlw	0
  5032  00264E  6E14               	movwf	(___fldiv@a+1)^0,c
  5033  002650  0E00               	movlw	0
  5034  002652  6E15               	movwf	(___fldiv@a+2)^0,c
  5035  002654  0E00               	movlw	0
  5036  002656  6E16               	movwf	(___fldiv@a+3)^0,c
  5037  002658                     l3807:
  5038  002658  5013               	movf	___fldiv@a^0,w,c
  5039  00265A  1014               	iorwf	(___fldiv@a+1)^0,w,c
  5040  00265C  1015               	iorwf	(___fldiv@a+2)^0,w,c
  5041  00265E  1016               	iorwf	(___fldiv@a+3)^0,w,c
  5042  002660  A4D8               	btfss	status,2,c
  5043  002662  EF35  F013         	goto	u3651
  5044  002666  EF37  F013         	goto	u3650
  5045  00266A                     u3651:
  5046  00266A  EF4F  F013         	goto	l3819
  5047  00266E                     u3650:
  5048  00266E  0E00               	movlw	0
  5049  002670  6E0F               	movwf	___fldiv@b^0,c
  5050  002672  0E00               	movlw	0
  5051  002674  6E10               	movwf	(___fldiv@b+1)^0,c
  5052  002676  0E00               	movlw	0
  5053  002678  6E11               	movwf	(___fldiv@b+2)^0,c
  5054  00267A  0E00               	movlw	0
  5055  00267C  6E12               	movwf	(___fldiv@b+3)^0,c
  5056  00267E  0E80               	movlw	128
  5057  002680  1211               	iorwf	(___fldiv@b+2)^0,f,c
  5058  002682  0E7F               	movlw	127
  5059  002684  1212               	iorwf	(___fldiv@b+3)^0,f,c
  5060  002686                     l3813:
  5061  002686  501F               	movf	___fldiv@sign^0,w,c
  5062  002688  1212               	iorwf	(___fldiv@b+3)^0,f,c
  5063  00268A  C00F  F00F         	movff	___fldiv@b,?___fldiv
  5064  00268E  C010  F010         	movff	___fldiv@b+1,?___fldiv+1
  5065  002692  C011  F011         	movff	___fldiv@b+2,?___fldiv+2
  5066  002696  C012  F012         	movff	___fldiv@b+3,?___fldiv+3
  5067  00269A  EF92  F014         	goto	l1103
  5068  00269E                     l3819:
  5069  00269E  5026               	movf	___fldiv@bexp^0,w,c
  5070  0026A0  A4D8               	btfss	status,2,c
  5071  0026A2  EF55  F013         	goto	u3661
  5072  0026A6  EF57  F013         	goto	u3660
  5073  0026AA                     u3661:
  5074  0026AA  EF61  F013         	goto	l3827
  5075  0026AE                     u3660:
  5076  0026AE  0E00               	movlw	0
  5077  0026B0  6E0F               	movwf	?___fldiv^0,c
  5078  0026B2  0E00               	movlw	0
  5079  0026B4  6E10               	movwf	(?___fldiv+1)^0,c
  5080  0026B6  0E00               	movlw	0
  5081  0026B8  6E11               	movwf	(?___fldiv+2)^0,c
  5082  0026BA  0E00               	movlw	0
  5083  0026BC  6E12               	movwf	(?___fldiv+3)^0,c
  5084  0026BE  EF92  F014         	goto	l1103
  5085  0026C2                     l3827:
  5086  0026C2  5027               	movf	___fldiv@aexp^0,w,c
  5087  0026C4  C026  F017         	movff	___fldiv@bexp,??___fldiv
  5088  0026C8  6A18               	clrf	(??___fldiv+1)^0,c
  5089  0026CA  5E17               	subwf	??___fldiv^0,f,c
  5090  0026CC  0E00               	movlw	0
  5091  0026CE  5A18               	subwfb	(??___fldiv+1)^0,f,c
  5092  0026D0  0E7F               	movlw	127
  5093  0026D2  2417               	addwf	??___fldiv^0,w,c
  5094  0026D4  6E20               	movwf	___fldiv@new_exp^0,c
  5095  0026D6  0E00               	movlw	0
  5096  0026D8  2018               	addwfc	(??___fldiv+1)^0,w,c
  5097  0026DA  6E21               	movwf	(___fldiv@new_exp+1)^0,c
  5098  0026DC  C00F  F01B         	movff	___fldiv@b,___fldiv@rem
  5099  0026E0  C010  F01C         	movff	___fldiv@b+1,___fldiv@rem+1
  5100  0026E4  C011  F01D         	movff	___fldiv@b+2,___fldiv@rem+2
  5101  0026E8  C012  F01E         	movff	___fldiv@b+3,___fldiv@rem+3
  5102  0026EC  0E00               	movlw	0
  5103  0026EE  6E0F               	movwf	___fldiv@b^0,c
  5104  0026F0  0E00               	movlw	0
  5105  0026F2  6E10               	movwf	(___fldiv@b+1)^0,c
  5106  0026F4  0E00               	movlw	0
  5107  0026F6  6E11               	movwf	(___fldiv@b+2)^0,c
  5108  0026F8  0E00               	movlw	0
  5109  0026FA  6E12               	movwf	(___fldiv@b+3)^0,c
  5110  0026FC  0E00               	movlw	0
  5111  0026FE  6E22               	movwf	___fldiv@grs^0,c
  5112  002700  0E00               	movlw	0
  5113  002702  6E23               	movwf	(___fldiv@grs+1)^0,c
  5114  002704  0E00               	movlw	0
  5115  002706  6E24               	movwf	(___fldiv@grs+2)^0,c
  5116  002708  0E00               	movlw	0
  5117  00270A  6E25               	movwf	(___fldiv@grs+3)^0,c
  5118  00270C  0E00               	movlw	0
  5119  00270E  6E27               	movwf	___fldiv@aexp^0,c
  5120  002710  EFC2  F013         	goto	l1105
  5121  002714                     l3837:
  5122  002714  5027               	movf	___fldiv@aexp^0,w,c
  5123  002716  B4D8               	btfsc	status,2,c
  5124  002718  EF90  F013         	goto	u3671
  5125  00271C  EF92  F013         	goto	u3670
  5126  002720                     u3671:
  5127  002720  EFA9  F013         	goto	l3845
  5128  002724                     u3670:
  5129  002724  90D8               	bcf	status,0,c
  5130  002726  361B               	rlcf	___fldiv@rem^0,f,c
  5131  002728  361C               	rlcf	(___fldiv@rem+1)^0,f,c
  5132  00272A  361D               	rlcf	(___fldiv@rem+2)^0,f,c
  5133  00272C  361E               	rlcf	(___fldiv@rem+3)^0,f,c
  5134  00272E  90D8               	bcf	status,0,c
  5135  002730  360F               	rlcf	___fldiv@b^0,f,c
  5136  002732  3610               	rlcf	(___fldiv@b+1)^0,f,c
  5137  002734  3611               	rlcf	(___fldiv@b+2)^0,f,c
  5138  002736  3612               	rlcf	(___fldiv@b+3)^0,f,c
  5139  002738  AE25               	btfss	(___fldiv@grs+3)^0,7,c
  5140  00273A  EFA1  F013         	goto	u3681
  5141  00273E  EFA3  F013         	goto	u3680
  5142  002742                     u3681:
  5143  002742  EFA4  F013         	goto	l1108
  5144  002746                     u3680:
  5145  002746  800F               	bsf	___fldiv@b^0,0,c
  5146  002748                     l1108:
  5147  002748  90D8               	bcf	status,0,c
  5148  00274A  3622               	rlcf	___fldiv@grs^0,f,c
  5149  00274C  3623               	rlcf	(___fldiv@grs+1)^0,f,c
  5150  00274E  3624               	rlcf	(___fldiv@grs+2)^0,f,c
  5151  002750  3625               	rlcf	(___fldiv@grs+3)^0,f,c
  5152  002752                     l3845:
  5153  002752  5013               	movf	___fldiv@a^0,w,c
  5154  002754  5C1B               	subwf	___fldiv@rem^0,w,c
  5155  002756  5014               	movf	(___fldiv@a+1)^0,w,c
  5156  002758  581C               	subwfb	(___fldiv@rem+1)^0,w,c
  5157  00275A  5015               	movf	(___fldiv@a+2)^0,w,c
  5158  00275C  581D               	subwfb	(___fldiv@rem+2)^0,w,c
  5159  00275E  5016               	movf	(___fldiv@a+3)^0,w,c
  5160  002760  581E               	subwfb	(___fldiv@rem+3)^0,w,c
  5161  002762  A0D8               	btfss	status,0,c
  5162  002764  EFB6  F013         	goto	u3691
  5163  002768  EFB8  F013         	goto	u3690
  5164  00276C                     u3691:
  5165  00276C  EFC1  F013         	goto	l3851
  5166  002770                     u3690:
  5167  002770  8C25               	bsf	(___fldiv@grs+3)^0,6,c
  5168  002772  5013               	movf	___fldiv@a^0,w,c
  5169  002774  5E1B               	subwf	___fldiv@rem^0,f,c
  5170  002776  5014               	movf	(___fldiv@a+1)^0,w,c
  5171  002778  5A1C               	subwfb	(___fldiv@rem+1)^0,f,c
  5172  00277A  5015               	movf	(___fldiv@a+2)^0,w,c
  5173  00277C  5A1D               	subwfb	(___fldiv@rem+2)^0,f,c
  5174  00277E  5016               	movf	(___fldiv@a+3)^0,w,c
  5175  002780  5A1E               	subwfb	(___fldiv@rem+3)^0,f,c
  5176  002782                     l3851:
  5177  002782  2A27               	incf	___fldiv@aexp^0,f,c
  5178  002784                     l1105:
  5179  002784  0E19               	movlw	25
  5180  002786  6427               	cpfsgt	___fldiv@aexp^0,c
  5181  002788  EFC8  F013         	goto	u3701
  5182  00278C  EFCA  F013         	goto	u3700
  5183  002790                     u3701:
  5184  002790  EF8A  F013         	goto	l3837
  5185  002794                     u3700:
  5186  002794  501B               	movf	___fldiv@rem^0,w,c
  5187  002796  101C               	iorwf	(___fldiv@rem+1)^0,w,c
  5188  002798  101D               	iorwf	(___fldiv@rem+2)^0,w,c
  5189  00279A  101E               	iorwf	(___fldiv@rem+3)^0,w,c
  5190  00279C  B4D8               	btfsc	status,2,c
  5191  00279E  EFD3  F013         	goto	u3711
  5192  0027A2  EFD5  F013         	goto	u3710
  5193  0027A6                     u3711:
  5194  0027A6  EFED  F013         	goto	l3863
  5195  0027AA                     u3710:
  5196  0027AA  8022               	bsf	___fldiv@grs^0,0,c
  5197  0027AC  EFED  F013         	goto	l3863
  5198  0027B0                     l3857:
  5199  0027B0  90D8               	bcf	status,0,c
  5200  0027B2  360F               	rlcf	___fldiv@b^0,f,c
  5201  0027B4  3610               	rlcf	(___fldiv@b+1)^0,f,c
  5202  0027B6  3611               	rlcf	(___fldiv@b+2)^0,f,c
  5203  0027B8  3612               	rlcf	(___fldiv@b+3)^0,f,c
  5204  0027BA  AE25               	btfss	(___fldiv@grs+3)^0,7,c
  5205  0027BC  EFE2  F013         	goto	u3721
  5206  0027C0  EFE4  F013         	goto	u3720
  5207  0027C4                     u3721:
  5208  0027C4  EFE5  F013         	goto	l1114
  5209  0027C8                     u3720:
  5210  0027C8  800F               	bsf	___fldiv@b^0,0,c
  5211  0027CA                     l1114:
  5212  0027CA  90D8               	bcf	status,0,c
  5213  0027CC  3622               	rlcf	___fldiv@grs^0,f,c
  5214  0027CE  3623               	rlcf	(___fldiv@grs+1)^0,f,c
  5215  0027D0  3624               	rlcf	(___fldiv@grs+2)^0,f,c
  5216  0027D2  3625               	rlcf	(___fldiv@grs+3)^0,f,c
  5217  0027D4  0620               	decf	___fldiv@new_exp^0,f,c
  5218  0027D6  A0D8               	btfss	status,0,c
  5219  0027D8  0621               	decf	(___fldiv@new_exp+1)^0,f,c
  5220  0027DA                     l3863:
  5221  0027DA  AE11               	btfss	(___fldiv@b+2)^0,7,c
  5222  0027DC  EFF2  F013         	goto	u3731
  5223  0027E0  EFF4  F013         	goto	u3730
  5224  0027E4                     u3731:
  5225  0027E4  EFD8  F013         	goto	l3857
  5226  0027E8                     u3730:
  5227  0027E8  0E00               	movlw	0
  5228  0027EA  6E27               	movwf	___fldiv@aexp^0,c
  5229  0027EC  AE25               	btfss	(___fldiv@grs+3)^0,7,c
  5230  0027EE  EFFB  F013         	goto	u3741
  5231  0027F2  EFFD  F013         	goto	u3740
  5232  0027F6                     u3741:
  5233  0027F6  EF21  F014         	goto	l1116
  5234  0027FA                     u3740:
  5235  0027FA  0EFF               	movlw	255
  5236  0027FC  1422               	andwf	___fldiv@grs^0,w,c
  5237  0027FE  6E17               	movwf	??___fldiv^0,c
  5238  002800  0EFF               	movlw	255
  5239  002802  1423               	andwf	(___fldiv@grs+1)^0,w,c
  5240  002804  6E18               	movwf	(??___fldiv+1)^0,c
  5241  002806  0EFF               	movlw	255
  5242  002808  1424               	andwf	(___fldiv@grs+2)^0,w,c
  5243  00280A  6E19               	movwf	(??___fldiv+2)^0,c
  5244  00280C  0E7F               	movlw	127
  5245  00280E  1425               	andwf	(___fldiv@grs+3)^0,w,c
  5246  002810  6E1A               	movwf	(??___fldiv+3)^0,c
  5247  002812  5017               	movf	??___fldiv^0,w,c
  5248  002814  1018               	iorwf	(??___fldiv+1)^0,w,c
  5249  002816  1019               	iorwf	(??___fldiv+2)^0,w,c
  5250  002818  101A               	iorwf	(??___fldiv+3)^0,w,c
  5251  00281A  B4D8               	btfsc	status,2,c
  5252  00281C  EF12  F014         	goto	u3751
  5253  002820  EF14  F014         	goto	u3750
  5254  002824                     u3751:
  5255  002824  EF18  F014         	goto	l1117
  5256  002828                     u3750:
  5257  002828                     l3871:
  5258  002828  0E01               	movlw	1
  5259  00282A  6E27               	movwf	___fldiv@aexp^0,c
  5260  00282C  EF21  F014         	goto	l1116
  5261  002830                     l1117:
  5262  002830  A00F               	btfss	___fldiv@b^0,0,c
  5263  002832  EF1D  F014         	goto	u3761
  5264  002836  EF1F  F014         	goto	u3760
  5265  00283A                     u3761:
  5266  00283A  EF21  F014         	goto	l1116
  5267  00283E                     u3760:
  5268  00283E  EF14  F014         	goto	l3871
  5269  002842                     l1116:
  5270  002842  5027               	movf	___fldiv@aexp^0,w,c
  5271  002844  B4D8               	btfsc	status,2,c
  5272  002846  EF27  F014         	goto	u3771
  5273  00284A  EF29  F014         	goto	u3770
  5274  00284E                     u3771:
  5275  00284E  EF4D  F014         	goto	l3883
  5276  002852                     u3770:
  5277  002852  0E01               	movlw	1
  5278  002854  260F               	addwf	___fldiv@b^0,f,c
  5279  002856  0E00               	movlw	0
  5280  002858  2210               	addwfc	(___fldiv@b+1)^0,f,c
  5281  00285A  2211               	addwfc	(___fldiv@b+2)^0,f,c
  5282  00285C  2212               	addwfc	(___fldiv@b+3)^0,f,c
  5283  00285E  A012               	btfss	(___fldiv@b+3)^0,0,c
  5284  002860  EF34  F014         	goto	u3781
  5285  002864  EF36  F014         	goto	u3780
  5286  002868                     u3781:
  5287  002868  EF4D  F014         	goto	l3883
  5288  00286C                     u3780:
  5289  00286C  C00F  F017         	movff	___fldiv@b,??___fldiv
  5290  002870  C010  F018         	movff	___fldiv@b+1,??___fldiv+1
  5291  002874  C011  F019         	movff	___fldiv@b+2,??___fldiv+2
  5292  002878  C012  F01A         	movff	___fldiv@b+3,??___fldiv+3
  5293  00287C  341A               	rlcf	(??___fldiv+3)^0,w,c
  5294  00287E  321A               	rrcf	(??___fldiv+3)^0,f,c
  5295  002880  3219               	rrcf	(??___fldiv+2)^0,f,c
  5296  002882  3218               	rrcf	(??___fldiv+1)^0,f,c
  5297  002884  3217               	rrcf	??___fldiv^0,f,c
  5298  002886  C017  F00F         	movff	??___fldiv,___fldiv@b
  5299  00288A  C018  F010         	movff	??___fldiv+1,___fldiv@b+1
  5300  00288E  C019  F011         	movff	??___fldiv+2,___fldiv@b+2
  5301  002892  C01A  F012         	movff	??___fldiv+3,___fldiv@b+3
  5302  002896  4A20               	infsnz	___fldiv@new_exp^0,f,c
  5303  002898  2A21               	incf	(___fldiv@new_exp+1)^0,f,c
  5304  00289A                     l3883:
  5305  00289A  BE21               	btfsc	(___fldiv@new_exp+1)^0,7,c
  5306  00289C  EF58  F014         	goto	u3791
  5307  0028A0  5021               	movf	(___fldiv@new_exp+1)^0,w,c
  5308  0028A2  E108               	bnz	u3790
  5309  0028A4  2820               	incf	___fldiv@new_exp^0,w,c
  5310  0028A6  A0D8               	btfss	status,0,c
  5311  0028A8  EF58  F014         	goto	u3791
  5312  0028AC  EF5A  F014         	goto	u3790
  5313  0028B0                     u3791:
  5314  0028B0  EF65  F014         	goto	l3887
  5315  0028B4                     u3790:
  5316  0028B4  0E00               	movlw	0
  5317  0028B6  6E21               	movwf	(___fldiv@new_exp+1)^0,c
  5318  0028B8  6820               	setf	___fldiv@new_exp^0,c
  5319  0028BA  0E00               	movlw	0
  5320  0028BC  6E0F               	movwf	___fldiv@b^0,c
  5321  0028BE  0E00               	movlw	0
  5322  0028C0  6E10               	movwf	(___fldiv@b+1)^0,c
  5323  0028C2  0E00               	movlw	0
  5324  0028C4  6E11               	movwf	(___fldiv@b+2)^0,c
  5325  0028C6  0E00               	movlw	0
  5326  0028C8  6E12               	movwf	(___fldiv@b+3)^0,c
  5327  0028CA                     l3887:
  5328  0028CA  BE21               	btfsc	(___fldiv@new_exp+1)^0,7,c
  5329  0028CC  EF72  F014         	goto	u3800
  5330  0028D0  5021               	movf	(___fldiv@new_exp+1)^0,w,c
  5331  0028D2  E106               	bnz	u3801
  5332  0028D4  0420               	decf	___fldiv@new_exp^0,w,c
  5333  0028D6  B0D8               	btfsc	status,0,c
  5334  0028D8  EF70  F014         	goto	u3801
  5335  0028DC  EF72  F014         	goto	u3800
  5336  0028E0                     u3801:
  5337  0028E0  EF80  F014         	goto	l3891
  5338  0028E4                     u3800:
  5339  0028E4  0E00               	movlw	0
  5340  0028E6  6E21               	movwf	(___fldiv@new_exp+1)^0,c
  5341  0028E8  0E00               	movlw	0
  5342  0028EA  6E20               	movwf	___fldiv@new_exp^0,c
  5343  0028EC  0E00               	movlw	0
  5344  0028EE  6E0F               	movwf	___fldiv@b^0,c
  5345  0028F0  0E00               	movlw	0
  5346  0028F2  6E10               	movwf	(___fldiv@b+1)^0,c
  5347  0028F4  0E00               	movlw	0
  5348  0028F6  6E11               	movwf	(___fldiv@b+2)^0,c
  5349  0028F8  0E00               	movlw	0
  5350  0028FA  6E12               	movwf	(___fldiv@b+3)^0,c
  5351  0028FC  0E00               	movlw	0
  5352  0028FE  6E1F               	movwf	___fldiv@sign^0,c
  5353  002900                     l3891:
  5354  002900  C020  F026         	movff	___fldiv@new_exp,___fldiv@bexp
  5355  002904  A026               	btfss	___fldiv@bexp^0,0,c
  5356  002906  EF87  F014         	goto	u3811
  5357  00290A  EF89  F014         	goto	u3810
  5358  00290E                     u3811:
  5359  00290E  EF8C  F014         	goto	l3897
  5360  002912                     u3810:
  5361  002912  8E11               	bsf	(___fldiv@b+2)^0,7,c
  5362  002914  EF8D  F014         	goto	l3899
  5363  002918                     l3897:
  5364  002918  9E11               	bcf	(___fldiv@b+2)^0,7,c
  5365  00291A                     l3899:
  5366  00291A  90D8               	bcf	status,0,c
  5367  00291C  3026               	rrcf	___fldiv@bexp^0,w,c
  5368  00291E  6E12               	movwf	(___fldiv@b+3)^0,c
  5369  002920  EF43  F013         	goto	l3813
  5370  002924                     l1103:
  5371  002924  0012               	return		;funcret
  5372  002926                     __end_of___fldiv:
  5373                           	callstack 0
  5374                           
  5375 ;; *************** function _color_data_collection *****************
  5376 ;; Defined at:
  5377 ;;		line 137 in file "color.c"
  5378 ;; Parameters:    Size  Location     Type
  5379 ;;  m               2   89[COMRAM] PTR struct color_rgb
  5380 ;;		 -> main@rgb(8), 
  5381 ;; Auto vars:     Size  Location     Type
  5382 ;;  x               2  132[BANK0 ] int 
  5383 ;;  k               2  130[BANK0 ] int 
  5384 ;;  j               2  128[BANK0 ] int 
  5385 ;;  i               2  126[BANK0 ] int 
  5386 ;; Return value:  Size  Location     Type
  5387 ;;                  1    wreg      void 
  5388 ;; Registers used:
  5389 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5390 ;; Tracked objects:
  5391 ;;		On entry : 0/0
  5392 ;;		On exit  : 0/0
  5393 ;;		Unchanged: 0/0
  5394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5395 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5396 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5397 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5398 ;;      Totals:         4       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5399 ;;Total ram usage:       12 bytes
  5400 ;; Hardware stack levels used: 1
  5401 ;; Hardware stack levels required when called: 9
  5402 ;; This function calls:
  5403 ;;		_LED_B
  5404 ;;		_LED_C
  5405 ;;		_LED_G
  5406 ;;		_LED_R
  5407 ;;		_color_display
  5408 ;;		_color_predict
  5409 ;;		_read_color
  5410 ;; This function is called by:
  5411 ;;		_main
  5412 ;; This function uses a non-reentrant model
  5413 ;;
  5414                           
  5415                           	psect	text16
  5416  002F72                     __ptext16:
  5417                           	callstack 0
  5418  002F72                     _color_data_collection:
  5419                           	callstack 21
  5420  002F72                     
  5421                           ;color.c: 139:     int i = 0; int j = 0; int k = 0; int x = 0;
  5422  002F72  0E00               	movlw	0
  5423  002F74  0100               	movlb	0	; () banked
  5424  002F76  6FDF               	movwf	(color_data_collection@i+1)& (0+255),b
  5425  002F78  0E00               	movlw	0
  5426  002F7A  6FDE               	movwf	color_data_collection@i& (0+255),b
  5427  002F7C  0E00               	movlw	0
  5428  002F7E  6FE3               	movwf	(color_data_collection@k+1)& (0+255),b
  5429  002F80  0E00               	movlw	0
  5430  002F82  6FE2               	movwf	color_data_collection@k& (0+255),b
  5431  002F84  0E00               	movlw	0
  5432  002F86  6FE5               	movwf	(color_data_collection@x+1)& (0+255),b
  5433  002F88  0E00               	movlw	0
  5434  002F8A  6FE4               	movwf	color_data_collection@x& (0+255),b
  5435                           
  5436                           ;color.c: 140:     for (i = 0; i < 1; ++i){
  5437  002F8C  0E00               	movlw	0
  5438  002F8E  6FDF               	movwf	(color_data_collection@i+1)& (0+255),b
  5439  002F90  0E00               	movlw	0
  5440  002F92  6FDE               	movwf	color_data_collection@i& (0+255),b
  5441  002F94                     l3969:
  5442                           
  5443                           ; BSR set to: 0
  5444                           ;color.c: 141:         LED_C();
  5445  002F94  ECEA  F01F         	call	_LED_C	;wreg free
  5446  002F98                     
  5447                           ;color.c: 142:         read_color(m);
  5448  002F98  C05A  F00C         	movff	color_data_collection@m,read_color@m
  5449  002F9C  C05B  F00D         	movff	color_data_collection@m+1,read_color@m+1
  5450  002FA0  EC43  F01D         	call	_read_color	;wreg free
  5451  002FA4                     
  5452                           ;color.c: 143:         color_display(m);
  5453  002FA4  C05A  F058         	movff	color_data_collection@m,color_display@m
  5454  002FA8  C05B  F059         	movff	color_data_collection@m+1,color_display@m+1
  5455  002FAC  ECDA  F01C         	call	_color_display	;wreg free
  5456  002FB0                     
  5457                           ;color.c: 144:         _delay((unsigned long)((500)*(64000000/4000.0)));
  5458  002FB0  0E29               	movlw	41
  5459  002FB2  6E5D               	movwf	(??_color_data_collection+1)^0,c
  5460  002FB4  0E96               	movlw	150
  5461  002FB6  6E5C               	movwf	??_color_data_collection^0,c
  5462  002FB8  0E7F               	movlw	127
  5463  002FBA                     u4347:
  5464  002FBA  2EE8               	decfsz	wreg,f,c
  5465  002FBC  D7FE               	bra	u4347
  5466  002FBE  2E5C               	decfsz	??_color_data_collection^0,f,c
  5467  002FC0  D7FC               	bra	u4347
  5468  002FC2  2E5D               	decfsz	(??_color_data_collection+1)^0,f,c
  5469  002FC4  D7FA               	bra	u4347
  5470  002FC6  F000               	nop	
  5471  002FC8                     
  5472                           ;color.c: 145:     }
  5473  002FC8  0100               	movlb	0	; () banked
  5474  002FCA  4BDE               	infsnz	color_data_collection@i& (0+255),f,b
  5475  002FCC  2BDF               	incf	(color_data_collection@i+1)& (0+255),f,b
  5476  002FCE                     
  5477                           ; BSR set to: 0
  5478  002FCE  BFDF               	btfsc	(color_data_collection@i+1)& (0+255),7,b
  5479  002FD0  EFF2  F017         	goto	u3921
  5480  002FD4  51DF               	movf	(color_data_collection@i+1)& (0+255),w,b
  5481  002FD6  E108               	bnz	u3920
  5482  002FD8  05DE               	decf	color_data_collection@i& (0+255),w,b
  5483  002FDA  A0D8               	btfss	status,0,c
  5484  002FDC  EFF2  F017         	goto	u3921
  5485  002FE0  EFF4  F017         	goto	u3920
  5486  002FE4                     u3921:
  5487  002FE4  EFCA  F017         	goto	l3969
  5488  002FE8                     u3920:
  5489  002FE8                     
  5490                           ; BSR set to: 0
  5491                           ;color.c: 147:     for (j = 0; j < 1; ++j){
  5492  002FE8  0E00               	movlw	0
  5493  002FEA  6FE1               	movwf	(color_data_collection@j+1)& (0+255),b
  5494  002FEC  0E00               	movlw	0
  5495  002FEE  6FE0               	movwf	color_data_collection@j& (0+255),b
  5496  002FF0                     l3987:
  5497                           
  5498                           ; BSR set to: 0
  5499                           ;color.c: 148:         LED_R();
  5500  002FF0  ECCA  F01F         	call	_LED_R	;wreg free
  5501  002FF4                     
  5502                           ;color.c: 149:         read_color(m);
  5503  002FF4  C05A  F00C         	movff	color_data_collection@m,read_color@m
  5504  002FF8  C05B  F00D         	movff	color_data_collection@m+1,read_color@m+1
  5505  002FFC  EC43  F01D         	call	_read_color	;wreg free
  5506  003000                     
  5507                           ;color.c: 150:         color_display(m);
  5508  003000  C05A  F058         	movff	color_data_collection@m,color_display@m
  5509  003004  C05B  F059         	movff	color_data_collection@m+1,color_display@m+1
  5510  003008  ECDA  F01C         	call	_color_display	;wreg free
  5511  00300C                     
  5512                           ;color.c: 151:         _delay((unsigned long)((500)*(64000000/4000.0)));
  5513  00300C  0E29               	movlw	41
  5514  00300E  6E5D               	movwf	(??_color_data_collection+1)^0,c
  5515  003010  0E96               	movlw	150
  5516  003012  6E5C               	movwf	??_color_data_collection^0,c
  5517  003014  0E7F               	movlw	127
  5518  003016                     u4357:
  5519  003016  2EE8               	decfsz	wreg,f,c
  5520  003018  D7FE               	bra	u4357
  5521  00301A  2E5C               	decfsz	??_color_data_collection^0,f,c
  5522  00301C  D7FC               	bra	u4357
  5523  00301E  2E5D               	decfsz	(??_color_data_collection+1)^0,f,c
  5524  003020  D7FA               	bra	u4357
  5525  003022  F000               	nop	
  5526  003024                     
  5527                           ;color.c: 152:     }
  5528  003024  0100               	movlb	0	; () banked
  5529  003026  4BE0               	infsnz	color_data_collection@j& (0+255),f,b
  5530  003028  2BE1               	incf	(color_data_collection@j+1)& (0+255),f,b
  5531  00302A                     
  5532                           ; BSR set to: 0
  5533  00302A  BFE1               	btfsc	(color_data_collection@j+1)& (0+255),7,b
  5534  00302C  EF20  F018         	goto	u3931
  5535  003030  51E1               	movf	(color_data_collection@j+1)& (0+255),w,b
  5536  003032  E108               	bnz	u3930
  5537  003034  05E0               	decf	color_data_collection@j& (0+255),w,b
  5538  003036  A0D8               	btfss	status,0,c
  5539  003038  EF20  F018         	goto	u3931
  5540  00303C  EF22  F018         	goto	u3930
  5541  003040                     u3931:
  5542  003040  EFF8  F017         	goto	l3987
  5543  003044                     u3930:
  5544  003044                     
  5545                           ; BSR set to: 0
  5546                           ;color.c: 154:     for (k = 0; k < 1; ++k){
  5547  003044  0E00               	movlw	0
  5548  003046  6FE3               	movwf	(color_data_collection@k+1)& (0+255),b
  5549  003048  0E00               	movlw	0
  5550  00304A  6FE2               	movwf	color_data_collection@k& (0+255),b
  5551  00304C                     l4005:
  5552                           
  5553                           ; BSR set to: 0
  5554                           ;color.c: 155:         LED_G();
  5555  00304C  ECDA  F01F         	call	_LED_G	;wreg free
  5556  003050                     
  5557                           ;color.c: 156:         read_color(m);
  5558  003050  C05A  F00C         	movff	color_data_collection@m,read_color@m
  5559  003054  C05B  F00D         	movff	color_data_collection@m+1,read_color@m+1
  5560  003058  EC43  F01D         	call	_read_color	;wreg free
  5561  00305C                     
  5562                           ;color.c: 157:         color_display(m);
  5563  00305C  C05A  F058         	movff	color_data_collection@m,color_display@m
  5564  003060  C05B  F059         	movff	color_data_collection@m+1,color_display@m+1
  5565  003064  ECDA  F01C         	call	_color_display	;wreg free
  5566  003068                     
  5567                           ;color.c: 158:         _delay((unsigned long)((500)*(64000000/4000.0)));
  5568  003068  0E29               	movlw	41
  5569  00306A  6E5D               	movwf	(??_color_data_collection+1)^0,c
  5570  00306C  0E96               	movlw	150
  5571  00306E  6E5C               	movwf	??_color_data_collection^0,c
  5572  003070  0E7F               	movlw	127
  5573  003072                     u4367:
  5574  003072  2EE8               	decfsz	wreg,f,c
  5575  003074  D7FE               	bra	u4367
  5576  003076  2E5C               	decfsz	??_color_data_collection^0,f,c
  5577  003078  D7FC               	bra	u4367
  5578  00307A  2E5D               	decfsz	(??_color_data_collection+1)^0,f,c
  5579  00307C  D7FA               	bra	u4367
  5580  00307E  F000               	nop	
  5581  003080                     
  5582                           ;color.c: 159:     }
  5583  003080  0100               	movlb	0	; () banked
  5584  003082  4BE2               	infsnz	color_data_collection@k& (0+255),f,b
  5585  003084  2BE3               	incf	(color_data_collection@k+1)& (0+255),f,b
  5586  003086                     
  5587                           ; BSR set to: 0
  5588  003086  BFE3               	btfsc	(color_data_collection@k+1)& (0+255),7,b
  5589  003088  EF4E  F018         	goto	u3941
  5590  00308C  51E3               	movf	(color_data_collection@k+1)& (0+255),w,b
  5591  00308E  E108               	bnz	u3940
  5592  003090  05E2               	decf	color_data_collection@k& (0+255),w,b
  5593  003092  A0D8               	btfss	status,0,c
  5594  003094  EF4E  F018         	goto	u3941
  5595  003098  EF50  F018         	goto	u3940
  5596  00309C                     u3941:
  5597  00309C  EF26  F018         	goto	l4005
  5598  0030A0                     u3940:
  5599  0030A0                     
  5600                           ; BSR set to: 0
  5601                           ;color.c: 161:     for (x = 0; x < 1; ++x){
  5602  0030A0  0E00               	movlw	0
  5603  0030A2  6FE5               	movwf	(color_data_collection@x+1)& (0+255),b
  5604  0030A4  0E00               	movlw	0
  5605  0030A6  6FE4               	movwf	color_data_collection@x& (0+255),b
  5606  0030A8                     l4023:
  5607                           
  5608                           ; BSR set to: 0
  5609                           ;color.c: 162:         LED_B();
  5610  0030A8  ECFA  F01F         	call	_LED_B	;wreg free
  5611  0030AC                     
  5612                           ;color.c: 163:         read_color(m);
  5613  0030AC  C05A  F00C         	movff	color_data_collection@m,read_color@m
  5614  0030B0  C05B  F00D         	movff	color_data_collection@m+1,read_color@m+1
  5615  0030B4  EC43  F01D         	call	_read_color	;wreg free
  5616  0030B8                     
  5617                           ;color.c: 164:         color_display(m);
  5618  0030B8  C05A  F058         	movff	color_data_collection@m,color_display@m
  5619  0030BC  C05B  F059         	movff	color_data_collection@m+1,color_display@m+1
  5620  0030C0  ECDA  F01C         	call	_color_display	;wreg free
  5621  0030C4                     
  5622                           ;color.c: 165:         _delay((unsigned long)((500)*(64000000/4000.0)));
  5623  0030C4  0E29               	movlw	41
  5624  0030C6  6E5D               	movwf	(??_color_data_collection+1)^0,c
  5625  0030C8  0E96               	movlw	150
  5626  0030CA  6E5C               	movwf	??_color_data_collection^0,c
  5627  0030CC  0E7F               	movlw	127
  5628  0030CE                     u4377:
  5629  0030CE  2EE8               	decfsz	wreg,f,c
  5630  0030D0  D7FE               	bra	u4377
  5631  0030D2  2E5C               	decfsz	??_color_data_collection^0,f,c
  5632  0030D4  D7FC               	bra	u4377
  5633  0030D6  2E5D               	decfsz	(??_color_data_collection+1)^0,f,c
  5634  0030D8  D7FA               	bra	u4377
  5635  0030DA  F000               	nop	
  5636  0030DC                     
  5637                           ;color.c: 166:     }
  5638  0030DC  0100               	movlb	0	; () banked
  5639  0030DE  4BE4               	infsnz	color_data_collection@x& (0+255),f,b
  5640  0030E0  2BE5               	incf	(color_data_collection@x+1)& (0+255),f,b
  5641  0030E2                     
  5642                           ; BSR set to: 0
  5643  0030E2  BFE5               	btfsc	(color_data_collection@x+1)& (0+255),7,b
  5644  0030E4  EF7C  F018         	goto	u3951
  5645  0030E8  51E5               	movf	(color_data_collection@x+1)& (0+255),w,b
  5646  0030EA  E108               	bnz	u3950
  5647  0030EC  05E4               	decf	color_data_collection@x& (0+255),w,b
  5648  0030EE  A0D8               	btfss	status,0,c
  5649  0030F0  EF7C  F018         	goto	u3951
  5650  0030F4  EF7E  F018         	goto	u3950
  5651  0030F8                     u3951:
  5652  0030F8  EF54  F018         	goto	l4023
  5653  0030FC                     u3950:
  5654  0030FC                     
  5655                           ; BSR set to: 0
  5656                           ;color.c: 167:     color_predict(00000);
  5657  0030FC  0E00               	movlw	0
  5658  0030FE  EC00  F01B         	call	_color_predict
  5659  003102                     
  5660                           ;color.c: 168:     LED_C();
  5661  003102  ECEA  F01F         	call	_LED_C	;wreg free
  5662  003106  0012               	return		;funcret
  5663  003108                     __end_of_color_data_collection:
  5664                           	callstack 0
  5665                           
  5666 ;; *************** function _read_color *****************
  5667 ;; Defined at:
  5668 ;;		line 92 in file "color.c"
  5669 ;; Parameters:    Size  Location     Type
  5670 ;;  m               2   11[COMRAM] PTR struct color_rgb
  5671 ;;		 -> main@rgb(8), 
  5672 ;; Auto vars:     Size  Location     Type
  5673 ;;		None
  5674 ;; Return value:  Size  Location     Type
  5675 ;;                  1    wreg      void 
  5676 ;; Registers used:
  5677 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5678 ;; Tracked objects:
  5679 ;;		On entry : 0/0
  5680 ;;		On exit  : 0/0
  5681 ;;		Unchanged: 0/0
  5682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5683 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5684 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5685 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5686 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5687 ;;Total ram usage:        2 bytes
  5688 ;; Hardware stack levels used: 1
  5689 ;; Hardware stack levels required when called: 3
  5690 ;; This function calls:
  5691 ;;		_color_read_Blue
  5692 ;;		_color_read_Clear
  5693 ;;		_color_read_Green
  5694 ;;		_color_read_Red
  5695 ;; This function is called by:
  5696 ;;		_color_data_collection
  5697 ;;		_detect_color
  5698 ;;		_main
  5699 ;; This function uses a non-reentrant model
  5700 ;;
  5701                           
  5702                           	psect	text17
  5703  003A86                     __ptext17:
  5704                           	callstack 0
  5705  003A86                     _read_color:
  5706                           	callstack 27
  5707  003A86                     
  5708                           ;color.c: 92: void read_color (struct color_rgb *m);color.c: 93: {;color.c: 94:     m->R
      +                           = color_read_Red();
  5709  003A86  EC9B  F01D         	call	_color_read_Red	;wreg free
  5710  003A8A  C00C  FFD9         	movff	read_color@m,fsr2l
  5711  003A8E  C00D  FFDA         	movff	read_color@m+1,fsr2h
  5712  003A92  C005  FFDE         	movff	?_color_read_Red,postinc2
  5713  003A96  C006  FFDD         	movff	?_color_read_Red+1,postdec2
  5714                           
  5715                           ;color.c: 95:     m->B = color_read_Blue();
  5716  003A9A  EC13  F01E         	call	_color_read_Blue	;wreg free
  5717  003A9E  EE20 F004          	lfsr	2,4
  5718  003AA2  500C               	movf	read_color@m^0,w,c
  5719  003AA4  26D9               	addwf	fsr2l,f,c
  5720  003AA6  500D               	movf	(read_color@m+1)^0,w,c
  5721  003AA8  22DA               	addwfc	fsr2h,f,c
  5722  003AAA  C005  FFDE         	movff	?_color_read_Blue,postinc2
  5723  003AAE  C006  FFDD         	movff	?_color_read_Blue+1,postdec2
  5724                           
  5725                           ;color.c: 96:     m->G = color_read_Green();
  5726  003AB2  ECC3  F01D         	call	_color_read_Green	;wreg free
  5727  003AB6  EE20 F002          	lfsr	2,2
  5728  003ABA  500C               	movf	read_color@m^0,w,c
  5729  003ABC  26D9               	addwf	fsr2l,f,c
  5730  003ABE  500D               	movf	(read_color@m+1)^0,w,c
  5731  003AC0  22DA               	addwfc	fsr2h,f,c
  5732  003AC2  C005  FFDE         	movff	?_color_read_Green,postinc2
  5733  003AC6  C006  FFDD         	movff	?_color_read_Green+1,postdec2
  5734                           
  5735                           ;color.c: 97:     m->C = color_read_Clear();
  5736  003ACA  ECEB  F01D         	call	_color_read_Clear	;wreg free
  5737  003ACE  EE20 F006          	lfsr	2,6
  5738  003AD2  500C               	movf	read_color@m^0,w,c
  5739  003AD4  26D9               	addwf	fsr2l,f,c
  5740  003AD6  500D               	movf	(read_color@m+1)^0,w,c
  5741  003AD8  22DA               	addwfc	fsr2h,f,c
  5742  003ADA  C005  FFDE         	movff	?_color_read_Clear,postinc2
  5743  003ADE  C006  FFDD         	movff	?_color_read_Clear+1,postdec2
  5744  003AE2  0012               	return		;funcret
  5745  003AE4                     __end_of_read_color:
  5746                           	callstack 0
  5747                           
  5748 ;; *************** function _color_read_Red *****************
  5749 ;; Defined at:
  5750 ;;		line 36 in file "color.c"
  5751 ;; Parameters:    Size  Location     Type
  5752 ;;		None
  5753 ;; Auto vars:     Size  Location     Type
  5754 ;;  tmp             2    9[COMRAM] unsigned int 
  5755 ;; Return value:  Size  Location     Type
  5756 ;;                  2    4[COMRAM] unsigned int 
  5757 ;; Registers used:
  5758 ;;		wreg, status,2, status,0, cstack
  5759 ;; Tracked objects:
  5760 ;;		On entry : 0/0
  5761 ;;		On exit  : 0/0
  5762 ;;		Unchanged: 0/0
  5763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5764 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5765 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5766 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5767 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5768 ;;Total ram usage:        7 bytes
  5769 ;; Hardware stack levels used: 1
  5770 ;; Hardware stack levels required when called: 2
  5771 ;; This function calls:
  5772 ;;		_I2C_2_Master_Read
  5773 ;;		_I2C_2_Master_RepStart
  5774 ;;		_I2C_2_Master_Start
  5775 ;;		_I2C_2_Master_Stop
  5776 ;;		_I2C_2_Master_Write
  5777 ;; This function is called by:
  5778 ;;		_read_color
  5779 ;;		_calibrate_white
  5780 ;; This function uses a non-reentrant model
  5781 ;;
  5782                           
  5783                           	psect	text18
  5784  003B36                     __ptext18:
  5785                           	callstack 0
  5786  003B36                     _color_read_Red:
  5787                           	callstack 27
  5788  003B36                     
  5789                           ;color.c: 38:  unsigned int tmp;;color.c: 39:  I2C_2_Master_Start();
  5790  003B36  EC4B  F020         	call	_I2C_2_Master_Start	;wreg free
  5791                           
  5792                           ;color.c: 40:  I2C_2_Master_Write(0x52 | 0x00);
  5793  003B3A  0E52               	movlw	82
  5794  003B3C  EC35  F020         	call	_I2C_2_Master_Write
  5795                           
  5796                           ;color.c: 41:  I2C_2_Master_Write(0xA0 | 0x16);
  5797  003B40  0EB6               	movlw	182
  5798  003B42  EC35  F020         	call	_I2C_2_Master_Write
  5799                           
  5800                           ;color.c: 42:  I2C_2_Master_RepStart();
  5801  003B46  EC41  F020         	call	_I2C_2_Master_RepStart	;wreg free
  5802                           
  5803                           ;color.c: 43:  I2C_2_Master_Write(0x52 | 0x01);
  5804  003B4A  0E53               	movlw	83
  5805  003B4C  EC35  F020         	call	_I2C_2_Master_Write
  5806                           
  5807                           ;color.c: 44:  tmp=I2C_2_Master_Read(1);
  5808  003B50  0E01               	movlw	1
  5809  003B52  ECA1  F01E         	call	_I2C_2_Master_Read
  5810  003B56  6E07               	movwf	??_color_read_Red^0,c
  5811  003B58  5007               	movf	??_color_read_Red^0,w,c
  5812  003B5A  6E0A               	movwf	color_read_Red@tmp^0,c
  5813  003B5C  6A0B               	clrf	(color_read_Red@tmp+1)^0,c
  5814                           
  5815                           ;color.c: 45:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  5816  003B5E  0E00               	movlw	0
  5817  003B60  ECA1  F01E         	call	_I2C_2_Master_Read
  5818  003B64  6E07               	movwf	??_color_read_Red^0,c
  5819  003B66  5007               	movf	??_color_read_Red^0,w,c
  5820  003B68  6E09               	movwf	(??_color_read_Red+2)^0,c
  5821  003B6A  6A08               	clrf	(??_color_read_Red+1)^0,c
  5822  003B6C  500A               	movf	color_read_Red@tmp^0,w,c
  5823  003B6E  1008               	iorwf	(??_color_read_Red+1)^0,w,c
  5824  003B70  6E0A               	movwf	color_read_Red@tmp^0,c
  5825  003B72  500B               	movf	(color_read_Red@tmp+1)^0,w,c
  5826  003B74  1009               	iorwf	(??_color_read_Red+2)^0,w,c
  5827  003B76  6E0B               	movwf	(color_read_Red@tmp+1)^0,c
  5828                           
  5829                           ;color.c: 46:  I2C_2_Master_Stop();
  5830  003B78  EC46  F020         	call	_I2C_2_Master_Stop	;wreg free
  5831  003B7C                     
  5832                           ;color.c: 47:  return tmp;
  5833  003B7C  C00A  F005         	movff	color_read_Red@tmp,?_color_read_Red
  5834  003B80  C00B  F006         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  5835  003B84  0012               	return		;funcret
  5836  003B86                     __end_of_color_read_Red:
  5837                           	callstack 0
  5838                           
  5839 ;; *************** function _color_read_Green *****************
  5840 ;; Defined at:
  5841 ;;		line 64 in file "color.c"
  5842 ;; Parameters:    Size  Location     Type
  5843 ;;		None
  5844 ;; Auto vars:     Size  Location     Type
  5845 ;;  tmp             2    9[COMRAM] unsigned int 
  5846 ;; Return value:  Size  Location     Type
  5847 ;;                  2    4[COMRAM] unsigned int 
  5848 ;; Registers used:
  5849 ;;		wreg, status,2, status,0, cstack
  5850 ;; Tracked objects:
  5851 ;;		On entry : 0/0
  5852 ;;		On exit  : 0/0
  5853 ;;		Unchanged: 0/0
  5854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5855 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5856 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5857 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5858 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5859 ;;Total ram usage:        7 bytes
  5860 ;; Hardware stack levels used: 1
  5861 ;; Hardware stack levels required when called: 2
  5862 ;; This function calls:
  5863 ;;		_I2C_2_Master_Read
  5864 ;;		_I2C_2_Master_RepStart
  5865 ;;		_I2C_2_Master_Start
  5866 ;;		_I2C_2_Master_Stop
  5867 ;;		_I2C_2_Master_Write
  5868 ;; This function is called by:
  5869 ;;		_read_color
  5870 ;;		_calibrate_white
  5871 ;; This function uses a non-reentrant model
  5872 ;;
  5873                           
  5874                           	psect	text19
  5875  003B86                     __ptext19:
  5876                           	callstack 0
  5877  003B86                     _color_read_Green:
  5878                           	callstack 27
  5879  003B86                     
  5880                           ;color.c: 66:  unsigned int tmp;;color.c: 67:  I2C_2_Master_Start();
  5881  003B86  EC4B  F020         	call	_I2C_2_Master_Start	;wreg free
  5882                           
  5883                           ;color.c: 68:  I2C_2_Master_Write(0x52 | 0x00);
  5884  003B8A  0E52               	movlw	82
  5885  003B8C  EC35  F020         	call	_I2C_2_Master_Write
  5886                           
  5887                           ;color.c: 69:  I2C_2_Master_Write(0xA0 | 0x18);
  5888  003B90  0EB8               	movlw	184
  5889  003B92  EC35  F020         	call	_I2C_2_Master_Write
  5890                           
  5891                           ;color.c: 70:  I2C_2_Master_RepStart();
  5892  003B96  EC41  F020         	call	_I2C_2_Master_RepStart	;wreg free
  5893                           
  5894                           ;color.c: 71:  I2C_2_Master_Write(0x52 | 0x01);
  5895  003B9A  0E53               	movlw	83
  5896  003B9C  EC35  F020         	call	_I2C_2_Master_Write
  5897                           
  5898                           ;color.c: 72:  tmp=I2C_2_Master_Read(1);
  5899  003BA0  0E01               	movlw	1
  5900  003BA2  ECA1  F01E         	call	_I2C_2_Master_Read
  5901  003BA6  6E07               	movwf	??_color_read_Green^0,c
  5902  003BA8  5007               	movf	??_color_read_Green^0,w,c
  5903  003BAA  6E0A               	movwf	color_read_Green@tmp^0,c
  5904  003BAC  6A0B               	clrf	(color_read_Green@tmp+1)^0,c
  5905                           
  5906                           ;color.c: 73:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  5907  003BAE  0E00               	movlw	0
  5908  003BB0  ECA1  F01E         	call	_I2C_2_Master_Read
  5909  003BB4  6E07               	movwf	??_color_read_Green^0,c
  5910  003BB6  5007               	movf	??_color_read_Green^0,w,c
  5911  003BB8  6E09               	movwf	(??_color_read_Green+2)^0,c
  5912  003BBA  6A08               	clrf	(??_color_read_Green+1)^0,c
  5913  003BBC  500A               	movf	color_read_Green@tmp^0,w,c
  5914  003BBE  1008               	iorwf	(??_color_read_Green+1)^0,w,c
  5915  003BC0  6E0A               	movwf	color_read_Green@tmp^0,c
  5916  003BC2  500B               	movf	(color_read_Green@tmp+1)^0,w,c
  5917  003BC4  1009               	iorwf	(??_color_read_Green+2)^0,w,c
  5918  003BC6  6E0B               	movwf	(color_read_Green@tmp+1)^0,c
  5919                           
  5920                           ;color.c: 74:  I2C_2_Master_Stop();
  5921  003BC8  EC46  F020         	call	_I2C_2_Master_Stop	;wreg free
  5922  003BCC                     
  5923                           ;color.c: 75:  return tmp;
  5924  003BCC  C00A  F005         	movff	color_read_Green@tmp,?_color_read_Green
  5925  003BD0  C00B  F006         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  5926  003BD4  0012               	return		;funcret
  5927  003BD6                     __end_of_color_read_Green:
  5928                           	callstack 0
  5929                           
  5930 ;; *************** function _color_read_Clear *****************
  5931 ;; Defined at:
  5932 ;;		line 78 in file "color.c"
  5933 ;; Parameters:    Size  Location     Type
  5934 ;;		None
  5935 ;; Auto vars:     Size  Location     Type
  5936 ;;  tmp             2    9[COMRAM] unsigned int 
  5937 ;; Return value:  Size  Location     Type
  5938 ;;                  2    4[COMRAM] unsigned int 
  5939 ;; Registers used:
  5940 ;;		wreg, status,2, status,0, cstack
  5941 ;; Tracked objects:
  5942 ;;		On entry : 0/0
  5943 ;;		On exit  : 0/0
  5944 ;;		Unchanged: 0/0
  5945 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5946 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5947 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5948 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5949 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5950 ;;Total ram usage:        7 bytes
  5951 ;; Hardware stack levels used: 1
  5952 ;; Hardware stack levels required when called: 2
  5953 ;; This function calls:
  5954 ;;		_I2C_2_Master_Read
  5955 ;;		_I2C_2_Master_RepStart
  5956 ;;		_I2C_2_Master_Start
  5957 ;;		_I2C_2_Master_Stop
  5958 ;;		_I2C_2_Master_Write
  5959 ;; This function is called by:
  5960 ;;		_read_color
  5961 ;; This function uses a non-reentrant model
  5962 ;;
  5963                           
  5964                           	psect	text20
  5965  003BD6                     __ptext20:
  5966                           	callstack 0
  5967  003BD6                     _color_read_Clear:
  5968                           	callstack 27
  5969  003BD6                     
  5970                           ;color.c: 80:  unsigned int tmp;;color.c: 81:  I2C_2_Master_Start();
  5971  003BD6  EC4B  F020         	call	_I2C_2_Master_Start	;wreg free
  5972                           
  5973                           ;color.c: 82:  I2C_2_Master_Write(0x52 | 0x00);
  5974  003BDA  0E52               	movlw	82
  5975  003BDC  EC35  F020         	call	_I2C_2_Master_Write
  5976                           
  5977                           ;color.c: 83:  I2C_2_Master_Write(0xA0 | 0x14);
  5978  003BE0  0EB4               	movlw	180
  5979  003BE2  EC35  F020         	call	_I2C_2_Master_Write
  5980                           
  5981                           ;color.c: 84:  I2C_2_Master_RepStart();
  5982  003BE6  EC41  F020         	call	_I2C_2_Master_RepStart	;wreg free
  5983                           
  5984                           ;color.c: 85:  I2C_2_Master_Write(0x52 | 0x01);
  5985  003BEA  0E53               	movlw	83
  5986  003BEC  EC35  F020         	call	_I2C_2_Master_Write
  5987                           
  5988                           ;color.c: 86:  tmp=I2C_2_Master_Read(1);
  5989  003BF0  0E01               	movlw	1
  5990  003BF2  ECA1  F01E         	call	_I2C_2_Master_Read
  5991  003BF6  6E07               	movwf	??_color_read_Clear^0,c
  5992  003BF8  5007               	movf	??_color_read_Clear^0,w,c
  5993  003BFA  6E0A               	movwf	color_read_Clear@tmp^0,c
  5994  003BFC  6A0B               	clrf	(color_read_Clear@tmp+1)^0,c
  5995                           
  5996                           ;color.c: 87:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  5997  003BFE  0E00               	movlw	0
  5998  003C00  ECA1  F01E         	call	_I2C_2_Master_Read
  5999  003C04  6E07               	movwf	??_color_read_Clear^0,c
  6000  003C06  5007               	movf	??_color_read_Clear^0,w,c
  6001  003C08  6E09               	movwf	(??_color_read_Clear+2)^0,c
  6002  003C0A  6A08               	clrf	(??_color_read_Clear+1)^0,c
  6003  003C0C  500A               	movf	color_read_Clear@tmp^0,w,c
  6004  003C0E  1008               	iorwf	(??_color_read_Clear+1)^0,w,c
  6005  003C10  6E0A               	movwf	color_read_Clear@tmp^0,c
  6006  003C12  500B               	movf	(color_read_Clear@tmp+1)^0,w,c
  6007  003C14  1009               	iorwf	(??_color_read_Clear+2)^0,w,c
  6008  003C16  6E0B               	movwf	(color_read_Clear@tmp+1)^0,c
  6009                           
  6010                           ;color.c: 88:  I2C_2_Master_Stop();
  6011  003C18  EC46  F020         	call	_I2C_2_Master_Stop	;wreg free
  6012  003C1C                     
  6013                           ;color.c: 89:  return tmp;
  6014  003C1C  C00A  F005         	movff	color_read_Clear@tmp,?_color_read_Clear
  6015  003C20  C00B  F006         	movff	color_read_Clear@tmp+1,?_color_read_Clear+1
  6016  003C24  0012               	return		;funcret
  6017  003C26                     __end_of_color_read_Clear:
  6018                           	callstack 0
  6019                           
  6020 ;; *************** function _color_read_Blue *****************
  6021 ;; Defined at:
  6022 ;;		line 50 in file "color.c"
  6023 ;; Parameters:    Size  Location     Type
  6024 ;;		None
  6025 ;; Auto vars:     Size  Location     Type
  6026 ;;  tmp             2    9[COMRAM] unsigned int 
  6027 ;; Return value:  Size  Location     Type
  6028 ;;                  2    4[COMRAM] unsigned int 
  6029 ;; Registers used:
  6030 ;;		wreg, status,2, status,0, cstack
  6031 ;; Tracked objects:
  6032 ;;		On entry : 0/0
  6033 ;;		On exit  : 0/0
  6034 ;;		Unchanged: 0/0
  6035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6036 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6037 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6038 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6039 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6040 ;;Total ram usage:        7 bytes
  6041 ;; Hardware stack levels used: 1
  6042 ;; Hardware stack levels required when called: 2
  6043 ;; This function calls:
  6044 ;;		_I2C_2_Master_Read
  6045 ;;		_I2C_2_Master_RepStart
  6046 ;;		_I2C_2_Master_Start
  6047 ;;		_I2C_2_Master_Stop
  6048 ;;		_I2C_2_Master_Write
  6049 ;; This function is called by:
  6050 ;;		_read_color
  6051 ;;		_calibrate_white
  6052 ;; This function uses a non-reentrant model
  6053 ;;
  6054                           
  6055                           	psect	text21
  6056  003C26                     __ptext21:
  6057                           	callstack 0
  6058  003C26                     _color_read_Blue:
  6059                           	callstack 27
  6060  003C26                     
  6061                           ;color.c: 52:  unsigned int tmp;;color.c: 53:  I2C_2_Master_Start();
  6062  003C26  EC4B  F020         	call	_I2C_2_Master_Start	;wreg free
  6063                           
  6064                           ;color.c: 54:  I2C_2_Master_Write(0x52 | 0x00);
  6065  003C2A  0E52               	movlw	82
  6066  003C2C  EC35  F020         	call	_I2C_2_Master_Write
  6067                           
  6068                           ;color.c: 55:  I2C_2_Master_Write(0xA0 | 0x1A);
  6069  003C30  0EBA               	movlw	186
  6070  003C32  EC35  F020         	call	_I2C_2_Master_Write
  6071                           
  6072                           ;color.c: 56:  I2C_2_Master_RepStart();
  6073  003C36  EC41  F020         	call	_I2C_2_Master_RepStart	;wreg free
  6074                           
  6075                           ;color.c: 57:  I2C_2_Master_Write(0x52 | 0x01);
  6076  003C3A  0E53               	movlw	83
  6077  003C3C  EC35  F020         	call	_I2C_2_Master_Write
  6078                           
  6079                           ;color.c: 58:  tmp=I2C_2_Master_Read(1);
  6080  003C40  0E01               	movlw	1
  6081  003C42  ECA1  F01E         	call	_I2C_2_Master_Read
  6082  003C46  6E07               	movwf	??_color_read_Blue^0,c
  6083  003C48  5007               	movf	??_color_read_Blue^0,w,c
  6084  003C4A  6E0A               	movwf	color_read_Blue@tmp^0,c
  6085  003C4C  6A0B               	clrf	(color_read_Blue@tmp+1)^0,c
  6086                           
  6087                           ;color.c: 59:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  6088  003C4E  0E00               	movlw	0
  6089  003C50  ECA1  F01E         	call	_I2C_2_Master_Read
  6090  003C54  6E07               	movwf	??_color_read_Blue^0,c
  6091  003C56  5007               	movf	??_color_read_Blue^0,w,c
  6092  003C58  6E09               	movwf	(??_color_read_Blue+2)^0,c
  6093  003C5A  6A08               	clrf	(??_color_read_Blue+1)^0,c
  6094  003C5C  500A               	movf	color_read_Blue@tmp^0,w,c
  6095  003C5E  1008               	iorwf	(??_color_read_Blue+1)^0,w,c
  6096  003C60  6E0A               	movwf	color_read_Blue@tmp^0,c
  6097  003C62  500B               	movf	(color_read_Blue@tmp+1)^0,w,c
  6098  003C64  1009               	iorwf	(??_color_read_Blue+2)^0,w,c
  6099  003C66  6E0B               	movwf	(color_read_Blue@tmp+1)^0,c
  6100                           
  6101                           ;color.c: 60:  I2C_2_Master_Stop();
  6102  003C68  EC46  F020         	call	_I2C_2_Master_Stop	;wreg free
  6103  003C6C                     
  6104                           ;color.c: 61:  return tmp;
  6105  003C6C  C00A  F005         	movff	color_read_Blue@tmp,?_color_read_Blue
  6106  003C70  C00B  F006         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  6107  003C74  0012               	return		;funcret
  6108  003C76                     __end_of_color_read_Blue:
  6109                           	callstack 0
  6110                           
  6111 ;; *************** function _I2C_2_Master_RepStart *****************
  6112 ;; Defined at:
  6113 ;;		line 33 in file "i2c.c"
  6114 ;; Parameters:    Size  Location     Type
  6115 ;;		None
  6116 ;; Auto vars:     Size  Location     Type
  6117 ;;		None
  6118 ;; Return value:  Size  Location     Type
  6119 ;;                  1    wreg      void 
  6120 ;; Registers used:
  6121 ;;		wreg, status,2, status,0, cstack
  6122 ;; Tracked objects:
  6123 ;;		On entry : 0/0
  6124 ;;		On exit  : 0/0
  6125 ;;		Unchanged: 0/0
  6126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6127 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6128 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6129 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6130 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6131 ;;Total ram usage:        0 bytes
  6132 ;; Hardware stack levels used: 1
  6133 ;; Hardware stack levels required when called: 1
  6134 ;; This function calls:
  6135 ;;		_I2C_2_Master_Idle
  6136 ;; This function is called by:
  6137 ;;		_color_read_Red
  6138 ;;		_color_read_Blue
  6139 ;;		_color_read_Green
  6140 ;;		_color_read_Clear
  6141 ;; This function uses a non-reentrant model
  6142 ;;
  6143                           
  6144                           	psect	text22
  6145  004082                     __ptext22:
  6146                           	callstack 0
  6147  004082                     _I2C_2_Master_RepStart:
  6148                           	callstack 27
  6149  004082                     
  6150                           ;i2c.c: 35:   I2C_2_Master_Idle();
  6151  004082  ECB6  F01F         	call	_I2C_2_Master_Idle	;wreg free
  6152  004086                     
  6153                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  6154  004086  010E               	movlb	14	; () banked
  6155  004088  83DA               	bsf	218,1,b	;volatile
  6156  00408A                     
  6157                           ; BSR set to: 14
  6158  00408A  0012               	return		;funcret
  6159  00408C                     __end_of_I2C_2_Master_RepStart:
  6160                           	callstack 0
  6161                           
  6162 ;; *************** function _I2C_2_Master_Read *****************
  6163 ;; Defined at:
  6164 ;;		line 51 in file "i2c.c"
  6165 ;; Parameters:    Size  Location     Type
  6166 ;;  ack             1    wreg     unsigned char 
  6167 ;; Auto vars:     Size  Location     Type
  6168 ;;  ack             1    2[COMRAM] unsigned char 
  6169 ;;  tmp             1    3[COMRAM] unsigned char 
  6170 ;; Return value:  Size  Location     Type
  6171 ;;                  1    wreg      unsigned char 
  6172 ;; Registers used:
  6173 ;;		wreg, status,2, status,0, cstack
  6174 ;; Tracked objects:
  6175 ;;		On entry : 0/0
  6176 ;;		On exit  : 0/0
  6177 ;;		Unchanged: 0/0
  6178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6179 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6180 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6181 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6182 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6183 ;;Total ram usage:        3 bytes
  6184 ;; Hardware stack levels used: 1
  6185 ;; Hardware stack levels required when called: 1
  6186 ;; This function calls:
  6187 ;;		_I2C_2_Master_Idle
  6188 ;; This function is called by:
  6189 ;;		_color_read_Red
  6190 ;;		_color_read_Blue
  6191 ;;		_color_read_Green
  6192 ;;		_color_read_Clear
  6193 ;; This function uses a non-reentrant model
  6194 ;;
  6195                           
  6196                           	psect	text23
  6197  003D42                     __ptext23:
  6198                           	callstack 0
  6199  003D42                     _I2C_2_Master_Read:
  6200                           	callstack 27
  6201                           
  6202                           ; BSR set to: 14
  6203                           ;incstack = 0
  6204                           ;I2C_2_Master_Read@ack stored from wreg
  6205  003D42  6E03               	movwf	I2C_2_Master_Read@ack^0,c
  6206  003D44                     
  6207                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  6208  003D44  ECB6  F01F         	call	_I2C_2_Master_Idle	;wreg free
  6209  003D48                     
  6210                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  6211  003D48  010E               	movlb	14	; () banked
  6212  003D4A  87DA               	bsf	218,3,b	;volatile
  6213                           
  6214                           ;i2c.c: 56:   I2C_2_Master_Idle();
  6215  003D4C  ECB6  F01F         	call	_I2C_2_Master_Idle	;wreg free
  6216  003D50                     
  6217                           ;i2c.c: 57:   tmp = SSP2BUF;
  6218  003D50  CED5 F004          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  6219                           
  6220                           ;i2c.c: 58:   I2C_2_Master_Idle();
  6221  003D54  ECB6  F01F         	call	_I2C_2_Master_Idle	;wreg free
  6222  003D58                     
  6223                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  6224  003D58  5003               	movf	I2C_2_Master_Read@ack^0,w,c
  6225  003D5A  B4D8               	btfsc	status,2,c
  6226  003D5C  EFB2  F01E         	goto	u2981
  6227  003D60  EFB6  F01E         	goto	u2980
  6228  003D64                     u2981:
  6229  003D64  6A02               	clrf	??_I2C_2_Master_Read^0,c
  6230  003D66  2A02               	incf	??_I2C_2_Master_Read^0,f,c
  6231  003D68  EFB7  F01E         	goto	u2998
  6232  003D6C                     u2980:
  6233  003D6C  6A02               	clrf	??_I2C_2_Master_Read^0,c
  6234  003D6E                     u2998:
  6235  003D6E  3A02               	swapf	??_I2C_2_Master_Read^0,f,c
  6236  003D70  4602               	rlncf	??_I2C_2_Master_Read^0,f,c
  6237  003D72  010E               	movlb	14	; () banked
  6238  003D74  51DA               	movf	218,w,b	;volatile
  6239  003D76  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  6240  003D78  0BDF               	andlw	-33
  6241  003D7A  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  6242  003D7C  6FDA               	movwf	218,b	;volatile
  6243  003D7E                     
  6244                           ; BSR set to: 14
  6245                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  6246  003D7E  89DA               	bsf	218,4,b	;volatile
  6247  003D80                     
  6248                           ; BSR set to: 14
  6249                           ;i2c.c: 61:   return tmp;
  6250  003D80  5004               	movf	I2C_2_Master_Read@tmp^0,w,c
  6251  003D82                     
  6252                           ; BSR set to: 14
  6253  003D82  0012               	return		;funcret
  6254  003D84                     __end_of_I2C_2_Master_Read:
  6255                           	callstack 0
  6256                           
  6257 ;; *************** function _color_predict *****************
  6258 ;; Defined at:
  6259 ;;		line 187 in file "color.c"
  6260 ;; Parameters:    Size  Location     Type
  6261 ;;  color           1    wreg     unsigned char 
  6262 ;; Auto vars:     Size  Location     Type
  6263 ;;  color           1  125[BANK0 ] unsigned char 
  6264 ;;  buf           100   25[BANK0 ] unsigned char [100]
  6265 ;;  color_name      1    0        unsigned char 
  6266 ;; Return value:  Size  Location     Type
  6267 ;;                  1    wreg      void 
  6268 ;; Registers used:
  6269 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6270 ;; Tracked objects:
  6271 ;;		On entry : 0/0
  6272 ;;		On exit  : 0/0
  6273 ;;		Unchanged: 0/0
  6274 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6275 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6276 ;;      Locals:         0     101       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6277 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6278 ;;      Totals:         0     101       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6279 ;;Total ram usage:      101 bytes
  6280 ;; Hardware stack levels used: 1
  6281 ;; Hardware stack levels required when called: 8
  6282 ;; This function calls:
  6283 ;;		_sendStringSerial4
  6284 ;;		_sprintf
  6285 ;; This function is called by:
  6286 ;;		_color_data_collection
  6287 ;;		_main
  6288 ;; This function uses a non-reentrant model
  6289 ;;
  6290                           
  6291                           	psect	text24
  6292  003600                     __ptext24:
  6293                           	callstack 0
  6294  003600                     _color_predict:
  6295                           	callstack 22
  6296                           
  6297                           ; BSR set to: 14
  6298                           ;incstack = 0
  6299                           ;color_predict@color stored from wreg
  6300  003600  0100               	movlb	0	; () banked
  6301  003602  6FDD               	movwf	color_predict@color& (0+255),b
  6302  003604                     
  6303                           ;color.c: 187: void color_predict(unsigned char color);color.c: 188: {;color.c: 189:    
      +                           char buf[100];;color.c: 190:     char color_name;;color.c: 191:     if (color == 0){col
      +                          or_name = "Error";}
  6304  003604  0100               	movlb	0	; () banked
  6305  003606  51DD               	movf	color_predict@color& (0+255),w,b
  6306  003608  A4D8               	btfss	status,2,c
  6307  00360A  EF09  F01B         	goto	u3451
  6308  00360E  EF0B  F01B         	goto	u3450
  6309  003612                     u3451:
  6310  003612  EF0B  F01B         	goto	l3699
  6311  003616                     u3450:
  6312  003616                     l3699:
  6313                           
  6314                           ; BSR set to: 0
  6315                           ;color.c: 192:     if (color == 1){color_name = "Red";}
  6316  003616  05DD               	decf	color_predict@color& (0+255),w,b
  6317  003618  A4D8               	btfss	status,2,c
  6318  00361A  EF11  F01B         	goto	u3461
  6319  00361E  EF13  F01B         	goto	u3460
  6320  003622                     u3461:
  6321  003622  EF13  F01B         	goto	l3703
  6322  003626                     u3460:
  6323  003626                     l3703:
  6324                           
  6325                           ; BSR set to: 0
  6326                           ;color.c: 193:     if (color == 2){color_name = "Green";}
  6327  003626  0E02               	movlw	2
  6328  003628  19DD               	xorwf	color_predict@color& (0+255),w,b
  6329  00362A  A4D8               	btfss	status,2,c
  6330  00362C  EF1A  F01B         	goto	u3471
  6331  003630  EF1C  F01B         	goto	u3470
  6332  003634                     u3471:
  6333  003634  EF1C  F01B         	goto	l3707
  6334  003638                     u3470:
  6335  003638                     l3707:
  6336                           
  6337                           ; BSR set to: 0
  6338                           ;color.c: 194:     if (color == 3){color_name = "Blue";}
  6339  003638  0E03               	movlw	3
  6340  00363A  19DD               	xorwf	color_predict@color& (0+255),w,b
  6341  00363C  A4D8               	btfss	status,2,c
  6342  00363E  EF23  F01B         	goto	u3481
  6343  003642  EF25  F01B         	goto	u3480
  6344  003646                     u3481:
  6345  003646  EF25  F01B         	goto	l3711
  6346  00364A                     u3480:
  6347  00364A                     l3711:
  6348                           
  6349                           ; BSR set to: 0
  6350                           ;color.c: 195:     if (color == 4){color_name = "Yellow";}
  6351  00364A  0E04               	movlw	4
  6352  00364C  19DD               	xorwf	color_predict@color& (0+255),w,b
  6353  00364E  A4D8               	btfss	status,2,c
  6354  003650  EF2C  F01B         	goto	u3491
  6355  003654  EF2E  F01B         	goto	u3490
  6356  003658                     u3491:
  6357  003658  EF2E  F01B         	goto	l3715
  6358  00365C                     u3490:
  6359  00365C                     l3715:
  6360                           
  6361                           ; BSR set to: 0
  6362                           ;color.c: 196:     if (color == 5){color_name = "Pink";}
  6363  00365C  0E05               	movlw	5
  6364  00365E  19DD               	xorwf	color_predict@color& (0+255),w,b
  6365  003660  A4D8               	btfss	status,2,c
  6366  003662  EF35  F01B         	goto	u3501
  6367  003666  EF37  F01B         	goto	u3500
  6368  00366A                     u3501:
  6369  00366A  EF37  F01B         	goto	l3719
  6370  00366E                     u3500:
  6371  00366E                     l3719:
  6372                           
  6373                           ; BSR set to: 0
  6374                           ;color.c: 197:     if (color == 6){color_name = "Orange";}
  6375  00366E  0E06               	movlw	6
  6376  003670  19DD               	xorwf	color_predict@color& (0+255),w,b
  6377  003672  A4D8               	btfss	status,2,c
  6378  003674  EF3E  F01B         	goto	u3511
  6379  003678  EF40  F01B         	goto	u3510
  6380  00367C                     u3511:
  6381  00367C  EF40  F01B         	goto	l3723
  6382  003680                     u3510:
  6383  003680                     l3723:
  6384                           
  6385                           ; BSR set to: 0
  6386                           ;color.c: 198:     if (color == 7){color_name = "Light blue";}
  6387  003680  0E07               	movlw	7
  6388  003682  19DD               	xorwf	color_predict@color& (0+255),w,b
  6389  003684  A4D8               	btfss	status,2,c
  6390  003686  EF47  F01B         	goto	u3521
  6391  00368A  EF49  F01B         	goto	u3520
  6392  00368E                     u3521:
  6393  00368E  EF49  F01B         	goto	l3727
  6394  003692                     u3520:
  6395  003692                     l3727:
  6396                           
  6397                           ; BSR set to: 0
  6398                           ;color.c: 199:     if (color == 8){color_name = "White";}
  6399  003692  0E08               	movlw	8
  6400  003694  19DD               	xorwf	color_predict@color& (0+255),w,b
  6401  003696  A4D8               	btfss	status,2,c
  6402  003698  EF50  F01B         	goto	u3531
  6403  00369C  EF52  F01B         	goto	u3530
  6404  0036A0                     u3531:
  6405  0036A0  EF52  F01B         	goto	l3731
  6406  0036A4                     u3530:
  6407  0036A4                     l3731:
  6408                           
  6409                           ; BSR set to: 0
  6410                           ;color.c: 200:     if (color == 9){color_name = "Black";}
  6411  0036A4  0E09               	movlw	9
  6412  0036A6  19DD               	xorwf	color_predict@color& (0+255),w,b
  6413  0036A8  A4D8               	btfss	status,2,c
  6414  0036AA  EF59  F01B         	goto	u3541
  6415  0036AE  EF5B  F01B         	goto	u3540
  6416  0036B2                     u3541:
  6417  0036B2  EF5B  F01B         	goto	l3735
  6418  0036B6                     u3540:
  6419  0036B6                     l3735:
  6420                           
  6421                           ; BSR set to: 0
  6422                           ;color.c: 202:     sprintf(buf,"\t%d\r\n", color);
  6423  0036B6  0E79               	movlw	low color_predict@buf
  6424  0036B8  6F60               	movwf	sprintf@s& (0+255),b
  6425  0036BA  0E00               	movlw	high color_predict@buf
  6426  0036BC  6F61               	movwf	(sprintf@s+1)& (0+255),b
  6427  0036BE  0E0D               	movlw	low (STR_1+8)
  6428  0036C0  6F62               	movwf	sprintf@fmt& (0+255),b
  6429  0036C2  0E0E               	movlw	high (STR_1+8)
  6430  0036C4  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
  6431  0036C6  C0DD  F064         	movff	color_predict@color,?_sprintf+4
  6432  0036CA  6B65               	clrf	(?_sprintf+5)& (0+255),b
  6433  0036CC  EC72  F01D         	call	_sprintf	;wreg free
  6434  0036D0                     
  6435                           ;color.c: 203:     sendStringSerial4(buf);
  6436  0036D0  0E79               	movlw	low color_predict@buf
  6437  0036D2  6E02               	movwf	sendStringSerial4@string^0,c
  6438  0036D4  0E00               	movlw	high color_predict@buf
  6439  0036D6  6E03               	movwf	(sendStringSerial4@string+1)^0,c
  6440  0036D8  EC89  F01F         	call	_sendStringSerial4	;wreg free
  6441  0036DC  0012               	return		;funcret
  6442  0036DE                     __end_of_color_predict:
  6443                           	callstack 0
  6444                           
  6445 ;; *************** function _color_display *****************
  6446 ;; Defined at:
  6447 ;;		line 171 in file "color.c"
  6448 ;; Parameters:    Size  Location     Type
  6449 ;;  m               2   87[COMRAM] PTR struct color_rgb
  6450 ;;		 -> main@rgb(8), 
  6451 ;; Auto vars:     Size  Location     Type
  6452 ;;  buf           100   25[BANK0 ] unsigned char [100]
  6453 ;; Return value:  Size  Location     Type
  6454 ;;                  1    wreg      void 
  6455 ;; Registers used:
  6456 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6457 ;; Tracked objects:
  6458 ;;		On entry : 0/0
  6459 ;;		On exit  : 0/0
  6460 ;;		Unchanged: 0/0
  6461 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6462 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6463 ;;      Locals:         0     100       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6464 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6465 ;;      Totals:         2     100       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6466 ;;Total ram usage:      102 bytes
  6467 ;; Hardware stack levels used: 1
  6468 ;; Hardware stack levels required when called: 8
  6469 ;; This function calls:
  6470 ;;		_sendStringSerial4
  6471 ;;		_sprintf
  6472 ;; This function is called by:
  6473 ;;		_color_data_collection
  6474 ;; This function uses a non-reentrant model
  6475 ;;
  6476                           
  6477                           	psect	text25
  6478  0039B4                     __ptext25:
  6479                           	callstack 0
  6480  0039B4                     _color_display:
  6481                           	callstack 21
  6482  0039B4                     
  6483                           ;color.c: 171: void color_display(struct color_rgb *m);color.c: 172: {;color.c: 173:    
      +                           char buf[100];;color.c: 174:     sprintf(buf,"%d\t%d\t%d\t%d\r\n", m->R, m->G, m->B, m-
      +                          >C);
  6484  0039B4  0E79               	movlw	low color_display@buf
  6485  0039B6  0100               	movlb	0	; () banked
  6486  0039B8  6F60               	movwf	sprintf@s& (0+255),b
  6487  0039BA  0E00               	movlw	high color_display@buf
  6488  0039BC  6F61               	movwf	(sprintf@s+1)& (0+255),b
  6489  0039BE  0E05               	movlw	low STR_1
  6490  0039C0  6F62               	movwf	sprintf@fmt& (0+255),b
  6491  0039C2  0E0E               	movlw	high STR_1
  6492  0039C4  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
  6493  0039C6  C058  FFD9         	movff	color_display@m,fsr2l
  6494  0039CA  C059  FFDA         	movff	color_display@m+1,fsr2h
  6495  0039CE  CFDE F064          	movff	postinc2,?_sprintf+4
  6496  0039D2  CFDD F065          	movff	postdec2,?_sprintf+5
  6497  0039D6  EE20 F002          	lfsr	2,2
  6498  0039DA  5058               	movf	color_display@m^0,w,c
  6499  0039DC  26D9               	addwf	fsr2l,f,c
  6500  0039DE  5059               	movf	(color_display@m+1)^0,w,c
  6501  0039E0  22DA               	addwfc	fsr2h,f,c
  6502  0039E2  CFDE F066          	movff	postinc2,?_sprintf+6
  6503  0039E6  CFDD F067          	movff	postdec2,?_sprintf+7
  6504  0039EA  EE20 F004          	lfsr	2,4
  6505  0039EE  5058               	movf	color_display@m^0,w,c
  6506  0039F0  26D9               	addwf	fsr2l,f,c
  6507  0039F2  5059               	movf	(color_display@m+1)^0,w,c
  6508  0039F4  22DA               	addwfc	fsr2h,f,c
  6509  0039F6  CFDE F068          	movff	postinc2,?_sprintf+8
  6510  0039FA  CFDD F069          	movff	postdec2,?_sprintf+9
  6511  0039FE  EE20 F006          	lfsr	2,6
  6512  003A02  5058               	movf	color_display@m^0,w,c
  6513  003A04  26D9               	addwf	fsr2l,f,c
  6514  003A06  5059               	movf	(color_display@m+1)^0,w,c
  6515  003A08  22DA               	addwfc	fsr2h,f,c
  6516  003A0A  CFDE F06A          	movff	postinc2,?_sprintf+10
  6517  003A0E  CFDD F06B          	movff	postdec2,?_sprintf+11
  6518  003A12  EC72  F01D         	call	_sprintf	;wreg free
  6519  003A16                     
  6520                           ;color.c: 175:     sendStringSerial4(buf);
  6521  003A16  0E79               	movlw	low color_display@buf
  6522  003A18  6E02               	movwf	sendStringSerial4@string^0,c
  6523  003A1A  0E00               	movlw	high color_display@buf
  6524  003A1C  6E03               	movwf	(sendStringSerial4@string+1)^0,c
  6525  003A1E  EC89  F01F         	call	_sendStringSerial4	;wreg free
  6526  003A22  0012               	return		;funcret
  6527  003A24                     __end_of_color_display:
  6528                           	callstack 0
  6529                           
  6530 ;; *************** function _sprintf *****************
  6531 ;; Defined at:
  6532 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\nf_sprintf.c"
  6533 ;; Parameters:    Size  Location     Type
  6534 ;;  s               2    0[BANK0 ] PTR unsigned char 
  6535 ;;		 -> voltage_display@buf(80), color_predict@buf(100), check_color_reading@buf(100), color_display@buf(100), 
  6536 ;;  fmt             2    2[BANK0 ] PTR const unsigned char 
  6537 ;;		 -> STR_14(5), STR_13(6), STR_2(12), STR_1(14), 
  6538 ;; Auto vars:     Size  Location     Type
  6539 ;;  f              11   14[BANK0 ] struct _IO_FILE
  6540 ;;  ap              2   12[BANK0 ] PTR void [1]
  6541 ;;		 -> ?_sprintf(2), 
  6542 ;;  ret             2    0        int 
  6543 ;; Return value:  Size  Location     Type
  6544 ;;                  2    0[BANK0 ] int 
  6545 ;; Registers used:
  6546 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6547 ;; Tracked objects:
  6548 ;;		On entry : 0/0
  6549 ;;		On exit  : 0/0
  6550 ;;		Unchanged: 0/0
  6551 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6552 ;;      Params:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6553 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6554 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6555 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6556 ;;Total ram usage:       25 bytes
  6557 ;; Hardware stack levels used: 1
  6558 ;; Hardware stack levels required when called: 7
  6559 ;; This function calls:
  6560 ;;		_vfprintf
  6561 ;; This function is called by:
  6562 ;;		_color_display
  6563 ;;		_color_predict
  6564 ;;		_check_color_reading
  6565 ;;		_voltage_display
  6566 ;; This function uses a non-reentrant model
  6567 ;;
  6568                           
  6569                           	psect	text26
  6570  003AE4                     __ptext26:
  6571                           	callstack 0
  6572  003AE4                     _sprintf:
  6573                           	callstack 22
  6574  003AE4  0E64               	movlw	low (?_sprintf+4)
  6575  003AE6  0100               	movlb	0	; () banked
  6576  003AE8  6F6C               	movwf	sprintf@ap& (0+255),b
  6577  003AEA  0E00               	movlw	high (?_sprintf+4)
  6578  003AEC  6F6D               	movwf	(sprintf@ap+1)& (0+255),b
  6579  003AEE  C060  F06E         	movff	sprintf@s,sprintf@f
  6580  003AF2  C061  F06F         	movff	sprintf@s+1,sprintf@f+1
  6581  003AF6                     
  6582                           ; BSR set to: 0
  6583  003AF6  0E00               	movlw	0
  6584  003AF8  6F72               	movwf	(sprintf@f+4)& (0+255),b
  6585  003AFA  0E00               	movlw	0
  6586  003AFC  6F71               	movwf	(sprintf@f+3)& (0+255),b
  6587  003AFE                     
  6588                           ; BSR set to: 0
  6589  003AFE  0E00               	movlw	0
  6590  003B00  6F78               	movwf	(sprintf@f+10)& (0+255),b
  6591  003B02  0E00               	movlw	0
  6592  003B04  6F77               	movwf	(sprintf@f+9)& (0+255),b
  6593  003B06                     
  6594                           ; BSR set to: 0
  6595  003B06  0E6E               	movlw	low sprintf@f
  6596  003B08  6E50               	movwf	vfprintf@fp^0,c
  6597  003B0A  0E00               	movlw	high sprintf@f
  6598  003B0C  6E51               	movwf	(vfprintf@fp+1)^0,c
  6599  003B0E  C062  F052         	movff	sprintf@fmt,vfprintf@fmt
  6600  003B12  C063  F053         	movff	sprintf@fmt+1,vfprintf@fmt+1
  6601  003B16  0E6C               	movlw	low sprintf@ap
  6602  003B18  6E54               	movwf	vfprintf@ap^0,c
  6603  003B1A  0E00               	movlw	high sprintf@ap
  6604  003B1C  6E55               	movwf	(vfprintf@ap+1)^0,c
  6605  003B1E  EC12  F01D         	call	_vfprintf	;wreg free
  6606  003B22  0100               	movlb	0	; () banked
  6607  003B24  5171               	movf	(sprintf@f+3)& (0+255),w,b
  6608  003B26  2560               	addwf	sprintf@s& (0+255),w,b
  6609  003B28  6ED9               	movwf	fsr2l,c
  6610  003B2A  5172               	movf	(sprintf@f+4)& (0+255),w,b
  6611  003B2C  2161               	addwfc	(sprintf@s+1)& (0+255),w,b
  6612  003B2E  6EDA               	movwf	fsr2h,c
  6613  003B30  0E00               	movlw	0
  6614  003B32  6EDF               	movwf	indf2,c
  6615  003B34                     
  6616                           ; BSR set to: 0
  6617  003B34  0012               	return		;funcret
  6618  003B36                     __end_of_sprintf:
  6619                           	callstack 0
  6620                           
  6621 ;; *************** function _vfprintf *****************
  6622 ;; Defined at:
  6623 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c"
  6624 ;; Parameters:    Size  Location     Type
  6625 ;;  fp              2   79[COMRAM] PTR struct _IO_FILE
  6626 ;;		 -> sprintf@f(11), 
  6627 ;;  fmt             2   81[COMRAM] PTR const unsigned char 
  6628 ;;		 -> STR_14(5), STR_13(6), STR_2(12), STR_1(14), 
  6629 ;;  ap              2   83[COMRAM] PTR PTR void 
  6630 ;;		 -> sprintf@ap(2), 
  6631 ;; Auto vars:     Size  Location     Type
  6632 ;;  cfmt            2   85[COMRAM] PTR unsigned char 
  6633 ;;		 -> STR_14(5), STR_13(6), STR_2(12), STR_1(14), 
  6634 ;; Return value:  Size  Location     Type
  6635 ;;                  2   79[COMRAM] int 
  6636 ;; Registers used:
  6637 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6638 ;; Tracked objects:
  6639 ;;		On entry : 0/0
  6640 ;;		On exit  : 0/0
  6641 ;;		Unchanged: 0/0
  6642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6643 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6644 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6645 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6646 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6647 ;;Total ram usage:        8 bytes
  6648 ;; Hardware stack levels used: 1
  6649 ;; Hardware stack levels required when called: 6
  6650 ;; This function calls:
  6651 ;;		_vfpfcnvrt
  6652 ;; This function is called by:
  6653 ;;		_sprintf
  6654 ;; This function uses a non-reentrant model
  6655 ;;
  6656                           
  6657                           	psect	text27
  6658  003A24                     __ptext27:
  6659                           	callstack 0
  6660  003A24                     _vfprintf:
  6661                           	callstack 22
  6662  003A24                     
  6663                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.35\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  6664  003A24  C052  F056         	movff	vfprintf@fmt,vfprintf@cfmt
  6665  003A28  C053  F057         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  6666  003A2C                     
  6667                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  6668  003A2C  0E00               	movlw	0
  6669  003A2E  0100               	movlb	0	; () banked
  6670  003A30  6FEB               	movwf	(_nout+1)& (0+255),b
  6671  003A32  0E00               	movlw	0
  6672  003A34  6FEA               	movwf	_nout& (0+255),b
  6673                           
  6674                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  6675  003A36  EF30  F01D         	goto	l3525
  6676  003A3A                     l3523:
  6677                           
  6678                           ; BSR set to: 0
  6679                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  6680  003A3A  C050  F040         	movff	vfprintf@fp,vfpfcnvrt@fp
  6681  003A3E  C051  F041         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  6682  003A42  0E56               	movlw	low vfprintf@cfmt
  6683  003A44  6E42               	movwf	vfpfcnvrt@fmt^0,c
  6684  003A46  0E00               	movlw	high vfprintf@cfmt
  6685  003A48  6E43               	movwf	(vfpfcnvrt@fmt+1)^0,c
  6686  003A4A  C054  F044         	movff	vfprintf@ap,vfpfcnvrt@ap
  6687  003A4E  C055  F045         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  6688  003A52  ECDF  F016         	call	_vfpfcnvrt	;wreg free
  6689  003A56  5040               	movf	?_vfpfcnvrt^0,w,c
  6690  003A58  0100               	movlb	0	; () banked
  6691  003A5A  27EA               	addwf	_nout& (0+255),f,b
  6692  003A5C  5041               	movf	(?_vfpfcnvrt+1)^0,w,c
  6693  003A5E  23EB               	addwfc	(_nout+1)& (0+255),f,b
  6694  003A60                     l3525:
  6695                           
  6696                           ; BSR set to: 0
  6697                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  6698  003A60  C056  FFF6         	movff	vfprintf@cfmt,tblptrl
  6699  003A64  C057  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  6700  003A68                     	if	0	;tblptru may be non-zero
  6701  003A68                     	endif
  6702  003A68                     	if	0	;tblptru may be non-zero
  6703  003A68                     	endif
  6704  003A68  0008               	tblrd		*
  6705  003A6A  50F5               	movf	tablat,w,c
  6706  003A6C  0900               	iorlw	0
  6707  003A6E  A4D8               	btfss	status,2,c
  6708  003A70  EF3C  F01D         	goto	u3261
  6709  003A74  EF3E  F01D         	goto	u3260
  6710  003A78                     u3261:
  6711  003A78  EF1D  F01D         	goto	l3523
  6712  003A7C                     u3260:
  6713  003A7C                     
  6714                           ; BSR set to: 0
  6715                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  6716  003A7C  C0EA  F050         	movff	_nout,?_vfprintf
  6717  003A80  C0EB  F051         	movff	_nout+1,?_vfprintf+1
  6718  003A84                     
  6719                           ; BSR set to: 0
  6720  003A84  0012               	return		;funcret
  6721  003A86                     __end_of_vfprintf:
  6722                           	callstack 0
  6723                           
  6724 ;; *************** function _vfpfcnvrt *****************
  6725 ;; Defined at:
  6726 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c"
  6727 ;; Parameters:    Size  Location     Type
  6728 ;;  fp              2   63[COMRAM] PTR struct _IO_FILE
  6729 ;;		 -> sprintf@f(11), 
  6730 ;;  fmt             2   65[COMRAM] PTR PTR unsigned char 
  6731 ;;		 -> vfprintf@cfmt(2), 
  6732 ;;  ap              2   67[COMRAM] PTR PTR void 
  6733 ;;		 -> sprintf@ap(2), 
  6734 ;; Auto vars:     Size  Location     Type
  6735 ;;  ll              8   71[COMRAM] long long 
  6736 ;;  llu             8    0        unsigned long long 
  6737 ;;  f               4    0        unsigned long long 
  6738 ;;  vp              3    0        PTR void 
  6739 ;;  ct              3    0        unsigned char [3]
  6740 ;;  cp              3    0        PTR unsigned char 
  6741 ;;  i               2    0        int 
  6742 ;;  done            2    0        int 
  6743 ;;  c               1    0        unsigned char 
  6744 ;; Return value:  Size  Location     Type
  6745 ;;                  2   63[COMRAM] int 
  6746 ;; Registers used:
  6747 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6748 ;; Tracked objects:
  6749 ;;		On entry : 0/0
  6750 ;;		On exit  : 0/0
  6751 ;;		Unchanged: 0/0
  6752 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6753 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6754 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6755 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6756 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6757 ;;Total ram usage:       16 bytes
  6758 ;; Hardware stack levels used: 1
  6759 ;; Hardware stack levels required when called: 5
  6760 ;; This function calls:
  6761 ;;		_dtoa
  6762 ;;		_fputc
  6763 ;; This function is called by:
  6764 ;;		_vfprintf
  6765 ;; This function uses a non-reentrant model
  6766 ;;
  6767                           
  6768                           	psect	text28
  6769  002DBE                     __ptext28:
  6770                           	callstack 0
  6771  002DBE                     _vfpfcnvrt:
  6772                           	callstack 22
  6773  002DBE                     
  6774                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.35\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.35\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.35\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          5\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  6775  002DBE  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6776  002DC2  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6777  002DC6  CFDE FFF6          	movff	postinc2,tblptrl
  6778  002DCA  CFDD FFF7          	movff	postdec2,tblptrh
  6779  002DCE                     	if	0	;tblptru may be non-zero
  6780  002DCE                     	endif
  6781  002DCE                     	if	0	;tblptru may be non-zero
  6782  002DCE                     	endif
  6783  002DCE  0008               	tblrd		*
  6784  002DD0  50F5               	movf	tablat,w,c
  6785  002DD2  0A25               	xorlw	37
  6786  002DD4  A4D8               	btfss	status,2,c
  6787  002DD6  EFEF  F016         	goto	u2941
  6788  002DDA  EFF1  F016         	goto	u2940
  6789  002DDE                     u2941:
  6790  002DDE  EF9D  F017         	goto	l3311
  6791  002DE2                     u2940:
  6792  002DE2                     
  6793                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  6794  002DE2  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6795  002DE6  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6796  002DEA  2ADE               	incf	postinc2,f,c
  6797  002DEC  0E00               	movlw	0
  6798  002DEE  22DD               	addwfc	postdec2,f,c
  6799  002DF0                     
  6800                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  6801  002DF0  0E00               	movlw	0
  6802  002DF2  0100               	movlb	0	; () banked
  6803  002DF4  6FED               	movwf	(_width+1)& (0+255),b
  6804  002DF6  0E00               	movlw	0
  6805  002DF8  6FEC               	movwf	_width& (0+255),b
  6806  002DFA  C0EC  F0F0         	movff	_width,_flags
  6807  002DFE  C0ED  F0F1         	movff	_width+1,_flags+1
  6808  002E02                     
  6809                           ; BSR set to: 0
  6810                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  6811  002E02  69EE               	setf	_prec& (0+255),b
  6812  002E04  69EF               	setf	(_prec+1)& (0+255),b
  6813  002E06                     
  6814                           ; BSR set to: 0
  6815                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  6816  002E06  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6817  002E0A  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6818  002E0E  CFDE FFF6          	movff	postinc2,tblptrl
  6819  002E12  CFDD FFF7          	movff	postdec2,tblptrh
  6820  002E16                     	if	0	;tblptru may be non-zero
  6821  002E16                     	endif
  6822  002E16                     	if	0	;tblptru may be non-zero
  6823  002E16                     	endif
  6824  002E16  0008               	tblrd		*
  6825  002E18  50F5               	movf	tablat,w,c
  6826  002E1A  0A64               	xorlw	100
  6827  002E1C  B4D8               	btfsc	status,2,c
  6828  002E1E  EF13  F017         	goto	u2951
  6829  002E22  EF15  F017         	goto	u2950
  6830  002E26                     u2951:
  6831  002E26  EF27  F017         	goto	l3289
  6832  002E2A                     u2950:
  6833  002E2A                     
  6834                           ; BSR set to: 0
  6835  002E2A  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6836  002E2E  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6837  002E32  CFDE FFF6          	movff	postinc2,tblptrl
  6838  002E36  CFDD FFF7          	movff	postdec2,tblptrh
  6839  002E3A                     	if	0	;tblptru may be non-zero
  6840  002E3A                     	endif
  6841  002E3A                     	if	0	;tblptru may be non-zero
  6842  002E3A                     	endif
  6843  002E3A  0008               	tblrd		*
  6844  002E3C  50F5               	movf	tablat,w,c
  6845  002E3E  0A69               	xorlw	105
  6846  002E40  A4D8               	btfss	status,2,c
  6847  002E42  EF25  F017         	goto	u2961
  6848  002E46  EF27  F017         	goto	u2960
  6849  002E4A                     u2961:
  6850  002E4A  EF67  F017         	goto	l3295
  6851  002E4E                     u2960:
  6852  002E4E                     l3289:
  6853                           
  6854                           ; BSR set to: 0
  6855                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  6856  002E4E  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6857  002E52  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6858  002E56  2ADE               	incf	postinc2,f,c
  6859  002E58  0E00               	movlw	0
  6860  002E5A  22DD               	addwfc	postdec2,f,c
  6861                           
  6862                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  6863  002E5C  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6864  002E60  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6865  002E64  CFDF F046          	movff	indf2,??_vfpfcnvrt
  6866  002E68  0E02               	movlw	2
  6867  002E6A  26DE               	addwf	postinc2,f,c
  6868  002E6C  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  6869  002E70  0E00               	movlw	0
  6870  002E72  22DD               	addwfc	postdec2,f,c
  6871  002E74  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6872  002E78  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6873  002E7C  CFDE F048          	movff	postinc2,vfpfcnvrt@ll
  6874  002E80  CFDD F049          	movff	postdec2,vfpfcnvrt@ll+1
  6875  002E84  0E00               	movlw	0
  6876  002E86  BE49               	btfsc	(vfpfcnvrt@ll+1)^0,7,c
  6877  002E88  0EFF               	movlw	-1
  6878  002E8A  6E4A               	movwf	(vfpfcnvrt@ll+2)^0,c
  6879  002E8C  6E4B               	movwf	(vfpfcnvrt@ll+3)^0,c
  6880  002E8E  6E4C               	movwf	(vfpfcnvrt@ll+4)^0,c
  6881  002E90  6E4D               	movwf	(vfpfcnvrt@ll+5)^0,c
  6882  002E92  6E4E               	movwf	(vfpfcnvrt@ll+6)^0,c
  6883  002E94  6E4F               	movwf	(vfpfcnvrt@ll+7)^0,c
  6884  002E96                     
  6885                           ; BSR set to: 0
  6886                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  6887  002E96  C040  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  6888  002E9A  C041  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  6889  002E9E  C048  F01E         	movff	vfpfcnvrt@ll,dtoa@d
  6890  002EA2  C049  F01F         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  6891  002EA6  C04A  F020         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  6892  002EAA  C04B  F021         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  6893  002EAE  C04C  F022         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  6894  002EB2  C04D  F023         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  6895  002EB6  C04E  F024         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  6896  002EBA  C04F  F025         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  6897  002EBE  EC93  F014         	call	_dtoa	;wreg free
  6898  002EC2  C01C  F040         	movff	?_dtoa,?_vfpfcnvrt
  6899  002EC6  C01D  F041         	movff	?_dtoa+1,?_vfpfcnvrt+1
  6900  002ECA  EFB8  F017         	goto	l1269
  6901  002ECE                     l3295:
  6902                           
  6903                           ; BSR set to: 0
  6904                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  6905  002ECE  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6906  002ED2  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6907  002ED6  CFDE FFF6          	movff	postinc2,tblptrl
  6908  002EDA  CFDD FFF7          	movff	postdec2,tblptrh
  6909  002EDE                     	if	0	;tblptru may be non-zero
  6910  002EDE                     	endif
  6911  002EDE                     	if	0	;tblptru may be non-zero
  6912  002EDE                     	endif
  6913  002EDE  0008               	tblrd		*
  6914  002EE0  50F5               	movf	tablat,w,c
  6915  002EE2  0A25               	xorlw	37
  6916  002EE4  A4D8               	btfss	status,2,c
  6917  002EE6  EF77  F017         	goto	u2971
  6918  002EEA  EF79  F017         	goto	u2970
  6919  002EEE                     u2971:
  6920  002EEE  EF90  F017         	goto	l3305
  6921  002EF2                     u2970:
  6922  002EF2                     
  6923                           ; BSR set to: 0
  6924                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  6925  002EF2  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6926  002EF6  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6927  002EFA  2ADE               	incf	postinc2,f,c
  6928  002EFC  0E00               	movlw	0
  6929  002EFE  22DD               	addwfc	postdec2,f,c
  6930  002F00                     
  6931                           ; BSR set to: 0
  6932                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  6933  002F00  0E00               	movlw	0
  6934  002F02  6E02               	movwf	(fputc@c+1)^0,c
  6935  002F04  0E25               	movlw	37
  6936  002F06  6E01               	movwf	fputc@c^0,c
  6937  002F08  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
  6938  002F0C  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  6939  002F10  ECD8  F01B         	call	_fputc	;wreg free
  6940  002F14                     l3301:
  6941                           
  6942                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  6943  002F14  0E00               	movlw	0
  6944  002F16  6E41               	movwf	(?_vfpfcnvrt+1)^0,c
  6945  002F18  0E01               	movlw	1
  6946  002F1A  6E40               	movwf	?_vfpfcnvrt^0,c
  6947  002F1C  EFB8  F017         	goto	l1269
  6948  002F20                     l3305:
  6949                           
  6950                           ; BSR set to: 0
  6951                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  6952  002F20  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6953  002F24  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6954  002F28  2ADE               	incf	postinc2,f,c
  6955  002F2A  0E00               	movlw	0
  6956  002F2C  22DD               	addwfc	postdec2,f,c
  6957  002F2E                     
  6958                           ; BSR set to: 0
  6959                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  6960  002F2E  0E00               	movlw	0
  6961  002F30  6E41               	movwf	(?_vfpfcnvrt+1)^0,c
  6962  002F32  0E00               	movlw	0
  6963  002F34  6E40               	movwf	?_vfpfcnvrt^0,c
  6964  002F36  EFB8  F017         	goto	l1269
  6965  002F3A                     l3311:
  6966                           
  6967                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  6968  002F3A  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6969  002F3E  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6970  002F42  CFDE FFF6          	movff	postinc2,tblptrl
  6971  002F46  CFDD FFF7          	movff	postdec2,tblptrh
  6972  002F4A                     	if	0	;tblptru may be non-zero
  6973  002F4A                     	endif
  6974  002F4A                     	if	0	;tblptru may be non-zero
  6975  002F4A                     	endif
  6976  002F4A  0008               	tblrd		*
  6977  002F4C  50F5               	movf	tablat,w,c
  6978  002F4E  6E01               	movwf	fputc@c^0,c
  6979  002F50  6A02               	clrf	(fputc@c+1)^0,c
  6980  002F52  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
  6981  002F56  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  6982  002F5A  ECD8  F01B         	call	_fputc	;wreg free
  6983  002F5E                     
  6984                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  6985  002F5E  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6986  002F62  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6987  002F66  2ADE               	incf	postinc2,f,c
  6988  002F68  0E00               	movlw	0
  6989  002F6A  22DD               	addwfc	postdec2,f,c
  6990  002F6C  EF8A  F017         	goto	l3301
  6991  002F70                     l1269:
  6992  002F70  0012               	return		;funcret
  6993  002F72                     __end_of_vfpfcnvrt:
  6994                           	callstack 0
  6995                           
  6996 ;; *************** function _dtoa *****************
  6997 ;; Defined at:
  6998 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c"
  6999 ;; Parameters:    Size  Location     Type
  7000 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  7001 ;;		 -> sprintf@f(11), 
  7002 ;;  d               8   29[COMRAM] long long 
  7003 ;; Auto vars:     Size  Location     Type
  7004 ;;  n               8   53[COMRAM] long long 
  7005 ;;  i               2   61[COMRAM] int 
  7006 ;;  s               2   51[COMRAM] int 
  7007 ;;  w               2   49[COMRAM] int 
  7008 ;;  p               2   47[COMRAM] int 
  7009 ;; Return value:  Size  Location     Type
  7010 ;;                  2   27[COMRAM] int 
  7011 ;; Registers used:
  7012 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7013 ;; Tracked objects:
  7014 ;;		On entry : 0/0
  7015 ;;		On exit  : 0/0
  7016 ;;		Unchanged: 0/0
  7017 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7018 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7019 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7020 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7021 ;;      Totals:        36       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7022 ;;Total ram usage:       36 bytes
  7023 ;; Hardware stack levels used: 1
  7024 ;; Hardware stack levels required when called: 4
  7025 ;; This function calls:
  7026 ;;		___aodiv
  7027 ;;		___aomod
  7028 ;;		_abs
  7029 ;;		_pad
  7030 ;; This function is called by:
  7031 ;;		_vfpfcnvrt
  7032 ;; This function uses a non-reentrant model
  7033 ;;
  7034                           
  7035                           	psect	text29
  7036  002926                     __ptext29:
  7037                           	callstack 0
  7038  002926                     _dtoa:
  7039                           	callstack 22
  7040  002926                     
  7041                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  7042  002926  C01E  F036         	movff	dtoa@d,dtoa@n
  7043  00292A  C01F  F037         	movff	dtoa@d+1,dtoa@n+1
  7044  00292E  C020  F038         	movff	dtoa@d+2,dtoa@n+2
  7045  002932  C021  F039         	movff	dtoa@d+3,dtoa@n+3
  7046  002936  C022  F03A         	movff	dtoa@d+4,dtoa@n+4
  7047  00293A  C023  F03B         	movff	dtoa@d+5,dtoa@n+5
  7048  00293E  C024  F03C         	movff	dtoa@d+6,dtoa@n+6
  7049  002942  C025  F03D         	movff	dtoa@d+7,dtoa@n+7
  7050  002946                     
  7051                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  7052  002946  BE3D               	btfsc	(dtoa@n+7)^0,7,c
  7053  002948  EFA8  F014         	goto	u2381
  7054  00294C  EFAB  F014         	goto	u2380
  7055  002950                     u2381:
  7056  002950  0E01               	movlw	1
  7057  002952  EFAC  F014         	goto	u2390
  7058  002956                     u2380:
  7059  002956  0E00               	movlw	0
  7060  002958                     u2390:
  7061  002958  6E34               	movwf	dtoa@s^0,c
  7062  00295A  6A35               	clrf	(dtoa@s+1)^0,c
  7063                           
  7064                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  7065  00295C  5034               	movf	dtoa@s^0,w,c
  7066  00295E  1035               	iorwf	(dtoa@s+1)^0,w,c
  7067  002960  B4D8               	btfsc	status,2,c
  7068  002962  EFB5  F014         	goto	u2401
  7069  002966  EFB7  F014         	goto	u2400
  7070  00296A                     u2401:
  7071  00296A  EFC7  F014         	goto	l3015
  7072  00296E                     u2400:
  7073  00296E                     
  7074                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  7075  00296E  1E3D               	comf	(dtoa@n+7)^0,f,c
  7076  002970  1E3C               	comf	(dtoa@n+6)^0,f,c
  7077  002972  1E3B               	comf	(dtoa@n+5)^0,f,c
  7078  002974  1E3A               	comf	(dtoa@n+4)^0,f,c
  7079  002976  1E39               	comf	(dtoa@n+3)^0,f,c
  7080  002978  1E38               	comf	(dtoa@n+2)^0,f,c
  7081  00297A  1E37               	comf	(dtoa@n+1)^0,f,c
  7082  00297C  6C36               	negf	dtoa@n^0,c
  7083  00297E  0E00               	movlw	0
  7084  002980  2237               	addwfc	(dtoa@n+1)^0,f,c
  7085  002982  2238               	addwfc	(dtoa@n+2)^0,f,c
  7086  002984  2239               	addwfc	(dtoa@n+3)^0,f,c
  7087  002986  223A               	addwfc	(dtoa@n+4)^0,f,c
  7088  002988  223B               	addwfc	(dtoa@n+5)^0,f,c
  7089  00298A  223C               	addwfc	(dtoa@n+6)^0,f,c
  7090  00298C  223D               	addwfc	(dtoa@n+7)^0,f,c
  7091  00298E                     l3015:
  7092                           
  7093                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  7094  00298E  0100               	movlb	0	; () banked
  7095  002990  BFEF               	btfsc	(_prec+1)& (0+255),7,b
  7096  002992  EFCD  F014         	goto	u2411
  7097  002996  EFCF  F014         	goto	u2410
  7098  00299A                     u2411:
  7099  00299A  EFD0  F014         	goto	l3019
  7100  00299E                     u2410:
  7101  00299E                     
  7102                           ; BSR set to: 0
  7103                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  7104  00299E  93F0               	bcf	_flags& (0+255),1,b
  7105  0029A0                     l3019:
  7106                           
  7107                           ; BSR set to: 0
  7108                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  7109  0029A0  BFEF               	btfsc	(_prec+1)& (0+255),7,b
  7110  0029A2  EFDD  F014         	goto	u2420
  7111  0029A6  51EF               	movf	(_prec+1)& (0+255),w,b
  7112  0029A8  E106               	bnz	u2421
  7113  0029AA  05EE               	decf	_prec& (0+255),w,b
  7114  0029AC  B0D8               	btfsc	status,0,c
  7115  0029AE  EFDB  F014         	goto	u2421
  7116  0029B2  EFDD  F014         	goto	u2420
  7117  0029B6                     u2421:
  7118  0029B6  EFE3  F014         	goto	l1242
  7119  0029BA                     u2420:
  7120  0029BA                     
  7121                           ; BSR set to: 0
  7122  0029BA  0E00               	movlw	0
  7123  0029BC  6E31               	movwf	(dtoa@p+1)^0,c
  7124  0029BE  0E01               	movlw	1
  7125  0029C0  6E30               	movwf	dtoa@p^0,c
  7126  0029C2  EFE7  F014         	goto	l1244
  7127  0029C6                     l1242:
  7128                           
  7129                           ; BSR set to: 0
  7130  0029C6  C0EE  F030         	movff	_prec,dtoa@p
  7131  0029CA  C0EF  F031         	movff	_prec+1,dtoa@p+1
  7132  0029CE                     l1244:
  7133                           
  7134                           ; BSR set to: 0
  7135                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  7136  0029CE  C0EC  F032         	movff	_width,dtoa@w
  7137  0029D2  C0ED  F033         	movff	_width+1,dtoa@w+1
  7138  0029D6                     
  7139                           ; BSR set to: 0
  7140                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  7141  0029D6  5034               	movf	dtoa@s^0,w,c
  7142  0029D8  1035               	iorwf	(dtoa@s+1)^0,w,c
  7143  0029DA  A4D8               	btfss	status,2,c
  7144  0029DC  EFF2  F014         	goto	u2431
  7145  0029E0  EFF4  F014         	goto	u2430
  7146  0029E4                     u2431:
  7147  0029E4  EFFB  F014         	goto	l3027
  7148  0029E8                     u2430:
  7149  0029E8                     
  7150                           ; BSR set to: 0
  7151  0029E8  A5F0               	btfss	_flags& (0+255),2,b
  7152  0029EA  EFF9  F014         	goto	u2441
  7153  0029EE  EFFB  F014         	goto	u2440
  7154  0029F2                     u2441:
  7155  0029F2  EFFE  F014         	goto	l3029
  7156  0029F6                     u2440:
  7157  0029F6                     l3027:
  7158                           
  7159                           ; BSR set to: 0
  7160                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 306:         --w;
  7161  0029F6  0632               	decf	dtoa@w^0,f,c
  7162  0029F8  A0D8               	btfss	status,0,c
  7163  0029FA  0633               	decf	(dtoa@w+1)^0,f,c
  7164  0029FC                     l3029:
  7165                           
  7166                           ; BSR set to: 0
  7167                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  7168  0029FC  0E00               	movlw	0
  7169  0029FE  6E3F               	movwf	(dtoa@i+1)^0,c
  7170  002A00  0E1F               	movlw	31
  7171  002A02  6E3E               	movwf	dtoa@i^0,c
  7172  002A04                     
  7173                           ; BSR set to: 0
  7174                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  7175  002A04  0E00               	movlw	0
  7176  002A06  0101               	movlb	1	; () banked
  7177  002A08  6F84               	movwf	(_dbuf+31)& (0+255),b
  7178                           
  7179                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7180  002A0A  EF83  F015         	goto	l3043
  7181  002A0E                     l3033:
  7182                           
  7183                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 313:         --i;
  7184  002A0E  063E               	decf	dtoa@i^0,f,c
  7185  002A10  A0D8               	btfss	status,0,c
  7186  002A12  063F               	decf	(dtoa@i+1)^0,f,c
  7187  002A14                     
  7188                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  7189  002A14  0E65               	movlw	low _dbuf
  7190  002A16  243E               	addwf	dtoa@i^0,w,c
  7191  002A18  6ED9               	movwf	fsr2l,c
  7192  002A1A  0E01               	movlw	high _dbuf
  7193  002A1C  203F               	addwfc	(dtoa@i+1)^0,w,c
  7194  002A1E  6EDA               	movwf	fsr2h,c
  7195  002A20  C036  F001         	movff	dtoa@n,___aomod@dividend
  7196  002A24  C037  F002         	movff	dtoa@n+1,___aomod@dividend+1
  7197  002A28  C038  F003         	movff	dtoa@n+2,___aomod@dividend+2
  7198  002A2C  C039  F004         	movff	dtoa@n+3,___aomod@dividend+3
  7199  002A30  C03A  F005         	movff	dtoa@n+4,___aomod@dividend+4
  7200  002A34  C03B  F006         	movff	dtoa@n+5,___aomod@dividend+5
  7201  002A38  C03C  F007         	movff	dtoa@n+6,___aomod@dividend+6
  7202  002A3C  C03D  F008         	movff	dtoa@n+7,___aomod@dividend+7
  7203  002A40  0E0A               	movlw	10
  7204  002A42  6E09               	movwf	___aomod@divisor^0,c
  7205  002A44  0E00               	movlw	0
  7206  002A46  6E0A               	movwf	(___aomod@divisor+1)^0,c
  7207  002A48  0E00               	movlw	0
  7208  002A4A  6E0B               	movwf	(___aomod@divisor+2)^0,c
  7209  002A4C  0E00               	movlw	0
  7210  002A4E  6E0C               	movwf	(___aomod@divisor+3)^0,c
  7211  002A50  0E00               	movlw	0
  7212  002A52  6E0D               	movwf	(___aomod@divisor+4)^0,c
  7213  002A54  0E00               	movlw	0
  7214  002A56  6E0E               	movwf	(___aomod@divisor+5)^0,c
  7215  002A58  0E00               	movlw	0
  7216  002A5A  6E0F               	movwf	(___aomod@divisor+6)^0,c
  7217  002A5C  0E00               	movlw	0
  7218  002A5E  6E10               	movwf	(___aomod@divisor+7)^0,c
  7219  002A60  EC48  F019         	call	___aomod	;wreg free
  7220  002A64  C001  F026         	movff	?___aomod,??_dtoa
  7221  002A68  C002  F027         	movff	?___aomod+1,??_dtoa+1
  7222  002A6C  C003  F028         	movff	?___aomod+2,??_dtoa+2
  7223  002A70  C004  F029         	movff	?___aomod+3,??_dtoa+3
  7224  002A74  C005  F02A         	movff	?___aomod+4,??_dtoa+4
  7225  002A78  C006  F02B         	movff	?___aomod+5,??_dtoa+5
  7226  002A7C  C007  F02C         	movff	?___aomod+6,??_dtoa+6
  7227  002A80  C008  F02D         	movff	?___aomod+7,??_dtoa+7
  7228  002A84  C026  F013         	movff	??_dtoa,abs@a
  7229  002A88  C028  F014         	movff	??_dtoa+2,abs@a+1
  7230  002A8C  ECC2  F01E         	call	_abs	;wreg free
  7231  002A90  5013               	movf	?_abs^0,w,c
  7232  002A92  0F30               	addlw	48
  7233  002A94  6EDF               	movwf	indf2,c
  7234  002A96                     
  7235                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 315:         --p;
  7236  002A96  0630               	decf	dtoa@p^0,f,c
  7237  002A98  A0D8               	btfss	status,0,c
  7238  002A9A  0631               	decf	(dtoa@p+1)^0,f,c
  7239  002A9C                     
  7240                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 316:         --w;
  7241  002A9C  0632               	decf	dtoa@w^0,f,c
  7242  002A9E  A0D8               	btfss	status,0,c
  7243  002AA0  0633               	decf	(dtoa@w+1)^0,f,c
  7244  002AA2                     
  7245                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  7246  002AA2  C036  F001         	movff	dtoa@n,___aodiv@dividend
  7247  002AA6  C037  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  7248  002AAA  C038  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  7249  002AAE  C039  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  7250  002AB2  C03A  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  7251  002AB6  C03B  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  7252  002ABA  C03C  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  7253  002ABE  C03D  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  7254  002AC2  0E0A               	movlw	10
  7255  002AC4  6E09               	movwf	___aodiv@divisor^0,c
  7256  002AC6  0E00               	movlw	0
  7257  002AC8  6E0A               	movwf	(___aodiv@divisor+1)^0,c
  7258  002ACA  0E00               	movlw	0
  7259  002ACC  6E0B               	movwf	(___aodiv@divisor+2)^0,c
  7260  002ACE  0E00               	movlw	0
  7261  002AD0  6E0C               	movwf	(___aodiv@divisor+3)^0,c
  7262  002AD2  0E00               	movlw	0
  7263  002AD4  6E0D               	movwf	(___aodiv@divisor+4)^0,c
  7264  002AD6  0E00               	movlw	0
  7265  002AD8  6E0E               	movwf	(___aodiv@divisor+5)^0,c
  7266  002ADA  0E00               	movlw	0
  7267  002ADC  6E0F               	movwf	(___aodiv@divisor+6)^0,c
  7268  002ADE  0E00               	movlw	0
  7269  002AE0  6E10               	movwf	(___aodiv@divisor+7)^0,c
  7270  002AE2  EC84  F018         	call	___aodiv	;wreg free
  7271  002AE6  C001  F036         	movff	?___aodiv,dtoa@n
  7272  002AEA  C002  F037         	movff	?___aodiv+1,dtoa@n+1
  7273  002AEE  C003  F038         	movff	?___aodiv+2,dtoa@n+2
  7274  002AF2  C004  F039         	movff	?___aodiv+3,dtoa@n+3
  7275  002AF6  C005  F03A         	movff	?___aodiv+4,dtoa@n+4
  7276  002AFA  C006  F03B         	movff	?___aodiv+5,dtoa@n+5
  7277  002AFE  C007  F03C         	movff	?___aodiv+6,dtoa@n+6
  7278  002B02  C008  F03D         	movff	?___aodiv+7,dtoa@n+7
  7279  002B06                     l3043:
  7280                           
  7281                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7282  002B06  BE3F               	btfsc	(dtoa@i+1)^0,7,c
  7283  002B08  EF8E  F015         	goto	u2451
  7284  002B0C  503F               	movf	(dtoa@i+1)^0,w,c
  7285  002B0E  E108               	bnz	u2450
  7286  002B10  043E               	decf	dtoa@i^0,w,c
  7287  002B12  A0D8               	btfss	status,0,c
  7288  002B14  EF8E  F015         	goto	u2451
  7289  002B18  EF90  F015         	goto	u2450
  7290  002B1C                     u2451:
  7291  002B1C  EFC1  F015         	goto	l3053
  7292  002B20                     u2450:
  7293  002B20  5036               	movf	dtoa@n^0,w,c
  7294  002B22  1037               	iorwf	(dtoa@n+1)^0,w,c
  7295  002B24  1038               	iorwf	(dtoa@n+2)^0,w,c
  7296  002B26  1039               	iorwf	(dtoa@n+3)^0,w,c
  7297  002B28  103A               	iorwf	(dtoa@n+4)^0,w,c
  7298  002B2A  103B               	iorwf	(dtoa@n+5)^0,w,c
  7299  002B2C  103C               	iorwf	(dtoa@n+6)^0,w,c
  7300  002B2E  103D               	iorwf	(dtoa@n+7)^0,w,c
  7301  002B30  A4D8               	btfss	status,2,c
  7302  002B32  EF9D  F015         	goto	u2461
  7303  002B36  EF9F  F015         	goto	u2460
  7304  002B3A                     u2461:
  7305  002B3A  EF07  F015         	goto	l3033
  7306  002B3E                     u2460:
  7307  002B3E  BE31               	btfsc	(dtoa@p+1)^0,7,c
  7308  002B40  EFAC  F015         	goto	u2470
  7309  002B44  5031               	movf	(dtoa@p+1)^0,w,c
  7310  002B46  E106               	bnz	u2471
  7311  002B48  0430               	decf	dtoa@p^0,w,c
  7312  002B4A  B0D8               	btfsc	status,0,c
  7313  002B4C  EFAA  F015         	goto	u2471
  7314  002B50  EFAC  F015         	goto	u2470
  7315  002B54                     u2471:
  7316  002B54  EF07  F015         	goto	l3033
  7317  002B58                     u2470:
  7318  002B58  BE33               	btfsc	(dtoa@w+1)^0,7,c
  7319  002B5A  EFB7  F015         	goto	u2481
  7320  002B5E  5033               	movf	(dtoa@w+1)^0,w,c
  7321  002B60  E108               	bnz	u2480
  7322  002B62  0432               	decf	dtoa@w^0,w,c
  7323  002B64  A0D8               	btfss	status,0,c
  7324  002B66  EFB7  F015         	goto	u2481
  7325  002B6A  EFB9  F015         	goto	u2480
  7326  002B6E                     u2481:
  7327  002B6E  EFC1  F015         	goto	l3053
  7328  002B72                     u2480:
  7329  002B72  0100               	movlb	0	; () banked
  7330  002B74  B3F0               	btfsc	_flags& (0+255),1,b
  7331  002B76  EFBF  F015         	goto	u2491
  7332  002B7A  EFC1  F015         	goto	u2490
  7333  002B7E                     u2491:
  7334  002B7E  EF07  F015         	goto	l3033
  7335  002B82                     u2490:
  7336  002B82                     l3053:
  7337                           
  7338                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  7339  002B82  5034               	movf	dtoa@s^0,w,c
  7340  002B84  1035               	iorwf	(dtoa@s+1)^0,w,c
  7341  002B86  A4D8               	btfss	status,2,c
  7342  002B88  EFC8  F015         	goto	u2501
  7343  002B8C  EFCA  F015         	goto	u2500
  7344  002B90                     u2501:
  7345  002B90  EFD2  F015         	goto	l3057
  7346  002B94                     u2500:
  7347  002B94  0100               	movlb	0	; () banked
  7348  002B96  A5F0               	btfss	_flags& (0+255),2,b
  7349  002B98  EFD0  F015         	goto	u2511
  7350  002B9C  EFD2  F015         	goto	u2510
  7351  002BA0                     u2511:
  7352  002BA0  EFF0  F015         	goto	l3067
  7353  002BA4                     u2510:
  7354  002BA4                     l3057:
  7355                           
  7356                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 322:         --i;
  7357  002BA4  063E               	decf	dtoa@i^0,f,c
  7358  002BA6  A0D8               	btfss	status,0,c
  7359  002BA8  063F               	decf	(dtoa@i+1)^0,f,c
  7360  002BAA                     
  7361                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  7362  002BAA  5034               	movf	dtoa@s^0,w,c
  7363  002BAC  1035               	iorwf	(dtoa@s+1)^0,w,c
  7364  002BAE  A4D8               	btfss	status,2,c
  7365  002BB0  EFDC  F015         	goto	u2521
  7366  002BB4  EFDE  F015         	goto	u2520
  7367  002BB8                     u2521:
  7368  002BB8  EFE4  F015         	goto	l3063
  7369  002BBC                     u2520:
  7370  002BBC  0E00               	movlw	0
  7371  002BBE  6E2F               	movwf	(_dtoa$2333+1)^0,c
  7372  002BC0  0E2B               	movlw	43
  7373  002BC2  6E2E               	movwf	_dtoa$2333^0,c
  7374  002BC4  EFE8  F015         	goto	l3065
  7375  002BC8                     l3063:
  7376  002BC8  0E00               	movlw	0
  7377  002BCA  6E2F               	movwf	(_dtoa$2333+1)^0,c
  7378  002BCC  0E2D               	movlw	45
  7379  002BCE  6E2E               	movwf	_dtoa$2333^0,c
  7380  002BD0                     l3065:
  7381  002BD0  0E65               	movlw	low _dbuf
  7382  002BD2  243E               	addwf	dtoa@i^0,w,c
  7383  002BD4  6ED9               	movwf	fsr2l,c
  7384  002BD6  0E01               	movlw	high _dbuf
  7385  002BD8  203F               	addwfc	(dtoa@i+1)^0,w,c
  7386  002BDA  6EDA               	movwf	fsr2h,c
  7387  002BDC  C02E  FFDF         	movff	_dtoa$2333,indf2
  7388  002BE0                     l3067:
  7389                           
  7390                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  7391  002BE0  C01C  F011         	movff	dtoa@fp,pad@fp
  7392  002BE4  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
  7393  002BE8  0E65               	movlw	low _dbuf
  7394  002BEA  243E               	addwf	dtoa@i^0,w,c
  7395  002BEC  6E13               	movwf	pad@buf^0,c
  7396  002BEE  0E01               	movlw	high _dbuf
  7397  002BF0  203F               	addwfc	(dtoa@i+1)^0,w,c
  7398  002BF2  6E14               	movwf	(pad@buf+1)^0,c
  7399  002BF4  C032  F015         	movff	dtoa@w,pad@p
  7400  002BF8  C033  F016         	movff	dtoa@w+1,pad@p+1
  7401  002BFC  EC3D  F01C         	call	_pad	;wreg free
  7402  002C00  C011  F01C         	movff	?_pad,?_dtoa
  7403  002C04  C012  F01D         	movff	?_pad+1,?_dtoa+1
  7404  002C08  0012               	return		;funcret
  7405  002C0A                     __end_of_dtoa:
  7406                           	callstack 0
  7407                           
  7408 ;; *************** function _pad *****************
  7409 ;; Defined at:
  7410 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c"
  7411 ;; Parameters:    Size  Location     Type
  7412 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  7413 ;;		 -> sprintf@f(11), 
  7414 ;;  buf             2   18[COMRAM] PTR unsigned char 
  7415 ;;		 -> dbuf(32), 
  7416 ;;  p               2   20[COMRAM] int 
  7417 ;; Auto vars:     Size  Location     Type
  7418 ;;  w               2   25[COMRAM] int 
  7419 ;;  i               2   23[COMRAM] int 
  7420 ;; Return value:  Size  Location     Type
  7421 ;;                  2   16[COMRAM] int 
  7422 ;; Registers used:
  7423 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7424 ;; Tracked objects:
  7425 ;;		On entry : 0/0
  7426 ;;		On exit  : 0/0
  7427 ;;		Unchanged: 0/0
  7428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7429 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7430 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7431 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7432 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7433 ;;Total ram usage:       11 bytes
  7434 ;; Hardware stack levels used: 1
  7435 ;; Hardware stack levels required when called: 3
  7436 ;; This function calls:
  7437 ;;		_fputc
  7438 ;;		_fputs
  7439 ;;		_strlen
  7440 ;; This function is called by:
  7441 ;;		_dtoa
  7442 ;; This function uses a non-reentrant model
  7443 ;;
  7444                           
  7445                           	psect	text30
  7446  00387A                     __ptext30:
  7447                           	callstack 0
  7448  00387A                     _pad:
  7449                           	callstack 22
  7450  00387A                     
  7451                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  7452  00387A  0100               	movlb	0	; () banked
  7453  00387C  A1F0               	btfss	_flags& (0+255),0,b
  7454  00387E  EF43  F01C         	goto	u2331
  7455  003882  EF45  F01C         	goto	u2330
  7456  003886                     u2331:
  7457  003886  EF4F  F01C         	goto	l2987
  7458  00388A                     u2330:
  7459  00388A                     
  7460                           ; BSR set to: 0
  7461                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  7462  00388A  C013  F00A         	movff	pad@buf,fputs@s
  7463  00388E  C014  F00B         	movff	pad@buf+1,fputs@s+1
  7464  003892  C011  F00C         	movff	pad@fp,fputs@fp
  7465  003896  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  7466  00389A  EC5E  F01E         	call	_fputs	;wreg free
  7467  00389E                     l2987:
  7468                           
  7469                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  7470  00389E  BE16               	btfsc	(pad@p+1)^0,7,c
  7471  0038A0  EF54  F01C         	goto	u2341
  7472  0038A4  EF56  F01C         	goto	u2340
  7473  0038A8                     u2341:
  7474  0038A8  EF5C  F01C         	goto	l2991
  7475  0038AC                     u2340:
  7476  0038AC  C015  F01A         	movff	pad@p,pad@w
  7477  0038B0  C016  F01B         	movff	pad@p+1,pad@w+1
  7478  0038B4  EF60  F01C         	goto	l1231
  7479  0038B8                     l2991:
  7480  0038B8  0E00               	movlw	0
  7481  0038BA  6E1B               	movwf	(pad@w+1)^0,c
  7482  0038BC  0E00               	movlw	0
  7483  0038BE  6E1A               	movwf	pad@w^0,c
  7484  0038C0                     l1231:
  7485                           
  7486                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  7487  0038C0  0E00               	movlw	0
  7488  0038C2  6E19               	movwf	(pad@i+1)^0,c
  7489  0038C4  0E00               	movlw	0
  7490  0038C6  6E18               	movwf	pad@i^0,c
  7491                           
  7492                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  7493  0038C8  EF72  F01C         	goto	l2997
  7494  0038CC                     l2993:
  7495                           
  7496                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  7497  0038CC  0E00               	movlw	0
  7498  0038CE  6E02               	movwf	(fputc@c+1)^0,c
  7499  0038D0  0E20               	movlw	32
  7500  0038D2  6E01               	movwf	fputc@c^0,c
  7501  0038D4  C011  F003         	movff	pad@fp,fputc@fp
  7502  0038D8  C012  F004         	movff	pad@fp+1,fputc@fp+1
  7503  0038DC  ECD8  F01B         	call	_fputc	;wreg free
  7504  0038E0                     
  7505                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 86:         ++i;
  7506  0038E0  4A18               	infsnz	pad@i^0,f,c
  7507  0038E2  2A19               	incf	(pad@i+1)^0,f,c
  7508  0038E4                     l2997:
  7509                           
  7510                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  7511  0038E4  501A               	movf	pad@w^0,w,c
  7512  0038E6  5C18               	subwf	pad@i^0,w,c
  7513  0038E8  5019               	movf	(pad@i+1)^0,w,c
  7514  0038EA  0A80               	xorlw	128
  7515  0038EC  6E17               	movwf	??_pad^0,c
  7516  0038EE  501B               	movf	(pad@w+1)^0,w,c
  7517  0038F0  0A80               	xorlw	128
  7518  0038F2  5817               	subwfb	??_pad^0,w,c
  7519  0038F4  A0D8               	btfss	status,0,c
  7520  0038F6  EF7F  F01C         	goto	u2351
  7521  0038FA  EF81  F01C         	goto	u2350
  7522  0038FE                     u2351:
  7523  0038FE  EF66  F01C         	goto	l2993
  7524  003902                     u2350:
  7525  003902                     
  7526                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  7527  003902  0100               	movlb	0	; () banked
  7528  003904  B1F0               	btfsc	_flags& (0+255),0,b
  7529  003906  EF87  F01C         	goto	u2361
  7530  00390A  EF89  F01C         	goto	u2360
  7531  00390E                     u2361:
  7532  00390E  EF93  F01C         	goto	l3001
  7533  003912                     u2360:
  7534  003912                     
  7535                           ; BSR set to: 0
  7536                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  7537  003912  C013  F00A         	movff	pad@buf,fputs@s
  7538  003916  C014  F00B         	movff	pad@buf+1,fputs@s+1
  7539  00391A  C011  F00C         	movff	pad@fp,fputs@fp
  7540  00391E  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  7541  003922  EC5E  F01E         	call	_fputs	;wreg free
  7542  003926                     l3001:
  7543                           
  7544                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  7545  003926  C013  F001         	movff	pad@buf,strlen@s
  7546  00392A  C014  F002         	movff	pad@buf+1,strlen@s+1
  7547  00392E  EC54  F01F         	call	_strlen	;wreg free
  7548  003932  501A               	movf	pad@w^0,w,c
  7549  003934  2401               	addwf	?_strlen^0,w,c
  7550  003936  6E11               	movwf	?_pad^0,c
  7551  003938  501B               	movf	(pad@w+1)^0,w,c
  7552  00393A  2002               	addwfc	(?_strlen+1)^0,w,c
  7553  00393C  6E12               	movwf	(?_pad+1)^0,c
  7554  00393E  0012               	return		;funcret
  7555  003940                     __end_of_pad:
  7556                           	callstack 0
  7557                           
  7558 ;; *************** function _strlen *****************
  7559 ;; Defined at:
  7560 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\strlen.c"
  7561 ;; Parameters:    Size  Location     Type
  7562 ;;  s               2    0[COMRAM] PTR const unsigned char 
  7563 ;;		 -> dbuf(32), 
  7564 ;; Auto vars:     Size  Location     Type
  7565 ;;  a               2    2[COMRAM] PTR const unsigned char 
  7566 ;;		 -> dbuf(32), 
  7567 ;; Return value:  Size  Location     Type
  7568 ;;                  2    0[COMRAM] unsigned int 
  7569 ;; Registers used:
  7570 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7571 ;; Tracked objects:
  7572 ;;		On entry : 0/0
  7573 ;;		On exit  : 0/0
  7574 ;;		Unchanged: 0/0
  7575 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7576 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7577 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7578 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7579 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7580 ;;Total ram usage:        4 bytes
  7581 ;; Hardware stack levels used: 1
  7582 ;; This function calls:
  7583 ;;		Nothing
  7584 ;; This function is called by:
  7585 ;;		_pad
  7586 ;; This function uses a non-reentrant model
  7587 ;;
  7588                           
  7589                           	psect	text31
  7590  003EA8                     __ptext31:
  7591                           	callstack 0
  7592  003EA8                     _strlen:
  7593                           	callstack 24
  7594  003EA8  C001  F003         	movff	strlen@s,strlen@a
  7595  003EAC  C002  F004         	movff	strlen@s+1,strlen@a+1
  7596  003EB0  EF5C  F01F         	goto	l2897
  7597  003EB4                     l2895:
  7598  003EB4  4A01               	infsnz	strlen@s^0,f,c
  7599  003EB6  2A02               	incf	(strlen@s+1)^0,f,c
  7600  003EB8                     l2897:
  7601  003EB8  C001  FFD9         	movff	strlen@s,fsr2l
  7602  003EBC  C002  FFDA         	movff	strlen@s+1,fsr2h
  7603  003EC0  50DF               	movf	indf2,w,c
  7604  003EC2  A4D8               	btfss	status,2,c
  7605  003EC4  EF66  F01F         	goto	u2191
  7606  003EC8  EF68  F01F         	goto	u2190
  7607  003ECC                     u2191:
  7608  003ECC  EF5A  F01F         	goto	l2895
  7609  003ED0                     u2190:
  7610  003ED0  5003               	movf	strlen@a^0,w,c
  7611  003ED2  5C01               	subwf	strlen@s^0,w,c
  7612  003ED4  6E01               	movwf	?_strlen^0,c
  7613  003ED6  5004               	movf	(strlen@a+1)^0,w,c
  7614  003ED8  5802               	subwfb	(strlen@s+1)^0,w,c
  7615  003EDA  6E02               	movwf	(?_strlen+1)^0,c
  7616  003EDC  0012               	return		;funcret
  7617  003EDE                     __end_of_strlen:
  7618                           	callstack 0
  7619                           
  7620 ;; *************** function _fputs *****************
  7621 ;; Defined at:
  7622 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\nf_fputs.c"
  7623 ;; Parameters:    Size  Location     Type
  7624 ;;  s               2    9[COMRAM] PTR const unsigned char 
  7625 ;;		 -> dbuf(32), 
  7626 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  7627 ;;		 -> sprintf@f(11), 
  7628 ;; Auto vars:     Size  Location     Type
  7629 ;;  i               2   14[COMRAM] int 
  7630 ;;  c               1   13[COMRAM] unsigned char 
  7631 ;; Return value:  Size  Location     Type
  7632 ;;                  2    9[COMRAM] int 
  7633 ;; Registers used:
  7634 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7635 ;; Tracked objects:
  7636 ;;		On entry : 0/0
  7637 ;;		On exit  : 0/0
  7638 ;;		Unchanged: 0/0
  7639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7640 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7641 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7642 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7643 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7644 ;;Total ram usage:        7 bytes
  7645 ;; Hardware stack levels used: 1
  7646 ;; Hardware stack levels required when called: 2
  7647 ;; This function calls:
  7648 ;;		_fputc
  7649 ;; This function is called by:
  7650 ;;		_pad
  7651 ;; This function uses a non-reentrant model
  7652 ;;
  7653                           
  7654                           	psect	text32
  7655  003CBC                     __ptext32:
  7656                           	callstack 0
  7657  003CBC                     _fputs:
  7658                           	callstack 22
  7659  003CBC  0E00               	movlw	0
  7660  003CBE  6E10               	movwf	(fputs@i+1)^0,c
  7661  003CC0  0E00               	movlw	0
  7662  003CC2  6E0F               	movwf	fputs@i^0,c
  7663  003CC4  EF6F  F01E         	goto	l2891
  7664  003CC8                     l2887:
  7665  003CC8  C00E  F001         	movff	fputs@c,fputc@c
  7666  003CCC  6A02               	clrf	(fputc@c+1)^0,c
  7667  003CCE  C00C  F003         	movff	fputs@fp,fputc@fp
  7668  003CD2  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  7669  003CD6  ECD8  F01B         	call	_fputc	;wreg free
  7670  003CDA  4A0F               	infsnz	fputs@i^0,f,c
  7671  003CDC  2A10               	incf	(fputs@i+1)^0,f,c
  7672  003CDE                     l2891:
  7673  003CDE  500F               	movf	fputs@i^0,w,c
  7674  003CE0  240A               	addwf	fputs@s^0,w,c
  7675  003CE2  6ED9               	movwf	fsr2l,c
  7676  003CE4  5010               	movf	(fputs@i+1)^0,w,c
  7677  003CE6  200B               	addwfc	(fputs@s+1)^0,w,c
  7678  003CE8  6EDA               	movwf	fsr2h,c
  7679  003CEA  50DF               	movf	indf2,w,c
  7680  003CEC  6E0E               	movwf	fputs@c^0,c
  7681  003CEE  500E               	movf	fputs@c^0,w,c
  7682  003CF0  A4D8               	btfss	status,2,c
  7683  003CF2  EF7D  F01E         	goto	u2181
  7684  003CF6  EF7F  F01E         	goto	u2180
  7685  003CFA                     u2181:
  7686  003CFA  EF64  F01E         	goto	l2887
  7687  003CFE                     u2180:
  7688  003CFE  0012               	return		;funcret
  7689  003D00                     __end_of_fputs:
  7690                           	callstack 0
  7691                           
  7692 ;; *************** function _fputc *****************
  7693 ;; Defined at:
  7694 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\nf_fputc.c"
  7695 ;; Parameters:    Size  Location     Type
  7696 ;;  c               2    0[COMRAM] int 
  7697 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  7698 ;;		 -> sprintf@f(11), 
  7699 ;; Auto vars:     Size  Location     Type
  7700 ;;		None
  7701 ;; Return value:  Size  Location     Type
  7702 ;;                  2    0[COMRAM] int 
  7703 ;; Registers used:
  7704 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7705 ;; Tracked objects:
  7706 ;;		On entry : 0/0
  7707 ;;		On exit  : 0/0
  7708 ;;		Unchanged: 0/0
  7709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7710 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7711 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7712 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7713 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7714 ;;Total ram usage:        9 bytes
  7715 ;; Hardware stack levels used: 1
  7716 ;; Hardware stack levels required when called: 1
  7717 ;; This function calls:
  7718 ;;		_putch
  7719 ;; This function is called by:
  7720 ;;		_pad
  7721 ;;		_vfpfcnvrt
  7722 ;;		_fputs
  7723 ;; This function uses a non-reentrant model
  7724 ;;
  7725                           
  7726                           	psect	text33
  7727  0037B0                     __ptext33:
  7728                           	callstack 0
  7729  0037B0                     _fputc:
  7730                           	callstack 25
  7731  0037B0  5003               	movf	fputc@fp^0,w,c
  7732  0037B2  1004               	iorwf	(fputc@fp+1)^0,w,c
  7733  0037B4  B4D8               	btfsc	status,2,c
  7734  0037B6  EFDF  F01B         	goto	u2141
  7735  0037BA  EFE1  F01B         	goto	u2140
  7736  0037BE                     u2141:
  7737  0037BE  EFEA  F01B         	goto	l2875
  7738  0037C2                     u2140:
  7739  0037C2  5003               	movf	fputc@fp^0,w,c
  7740  0037C4  1004               	iorwf	(fputc@fp+1)^0,w,c
  7741  0037C6  A4D8               	btfss	status,2,c
  7742  0037C8  EFE8  F01B         	goto	u2151
  7743  0037CC  EFEA  F01B         	goto	u2150
  7744  0037D0                     u2151:
  7745  0037D0  EFEF  F01B         	goto	l2877
  7746  0037D4                     u2150:
  7747  0037D4                     l2875:
  7748  0037D4  5001               	movf	fputc@c^0,w,c
  7749  0037D6  EC50  F020         	call	_putch
  7750  0037DA  EF3C  F01C         	goto	l1295
  7751  0037DE                     l2877:
  7752  0037DE  EE20 F009          	lfsr	2,9
  7753  0037E2  5003               	movf	fputc@fp^0,w,c
  7754  0037E4  26D9               	addwf	fsr2l,f,c
  7755  0037E6  5004               	movf	(fputc@fp+1)^0,w,c
  7756  0037E8  22DA               	addwfc	fsr2h,f,c
  7757  0037EA  50DE               	movf	postinc2,w,c
  7758  0037EC  10DE               	iorwf	postinc2,w,c
  7759  0037EE  B4D8               	btfsc	status,2,c
  7760  0037F0  EFFC  F01B         	goto	u2161
  7761  0037F4  EFFE  F01B         	goto	u2160
  7762  0037F8                     u2161:
  7763  0037F8  EF19  F01C         	goto	l2881
  7764  0037FC                     u2160:
  7765  0037FC  EE20 F009          	lfsr	2,9
  7766  003800  5003               	movf	fputc@fp^0,w,c
  7767  003802  26D9               	addwf	fsr2l,f,c
  7768  003804  5004               	movf	(fputc@fp+1)^0,w,c
  7769  003806  22DA               	addwfc	fsr2h,f,c
  7770  003808  EE10 F003          	lfsr	1,3
  7771  00380C  5003               	movf	fputc@fp^0,w,c
  7772  00380E  26E1               	addwf	fsr1l,f,c
  7773  003810  5004               	movf	(fputc@fp+1)^0,w,c
  7774  003812  22E2               	addwfc	fsr1h,f,c
  7775  003814  50DE               	movf	postinc2,w,c
  7776  003816  5CE6               	subwf	postinc1,w,c
  7777  003818  50E6               	movf	postinc1,w,c
  7778  00381A  0A80               	xorlw	128
  7779  00381C  6E09               	movwf	(??_fputc+4)^0,c
  7780  00381E  50DE               	movf	postinc2,w,c
  7781  003820  0A80               	xorlw	128
  7782  003822  5809               	subwfb	(??_fputc+4)^0,w,c
  7783  003824  B0D8               	btfsc	status,0,c
  7784  003826  EF17  F01C         	goto	u2171
  7785  00382A  EF19  F01C         	goto	u2170
  7786  00382E                     u2171:
  7787  00382E  EF3C  F01C         	goto	l1295
  7788  003832                     u2170:
  7789  003832                     l2881:
  7790  003832  EE20 F003          	lfsr	2,3
  7791  003836  5003               	movf	fputc@fp^0,w,c
  7792  003838  26D9               	addwf	fsr2l,f,c
  7793  00383A  5004               	movf	(fputc@fp+1)^0,w,c
  7794  00383C  22DA               	addwfc	fsr2h,f,c
  7795  00383E  CFDE F005          	movff	postinc2,??_fputc
  7796  003842  CFDD F006          	movff	postdec2,??_fputc+1
  7797  003846  C003  FFD9         	movff	fputc@fp,fsr2l
  7798  00384A  C004  FFDA         	movff	fputc@fp+1,fsr2h
  7799  00384E  CFDE F007          	movff	postinc2,??_fputc+2
  7800  003852  CFDD F008          	movff	postdec2,??_fputc+3
  7801  003856  5005               	movf	??_fputc^0,w,c
  7802  003858  2407               	addwf	(??_fputc+2)^0,w,c
  7803  00385A  6ED9               	movwf	fsr2l,c
  7804  00385C  5006               	movf	(??_fputc+1)^0,w,c
  7805  00385E  2008               	addwfc	(??_fputc+3)^0,w,c
  7806  003860  6EDA               	movwf	fsr2h,c
  7807  003862  C001  FFDF         	movff	fputc@c,indf2
  7808  003866  EE20 F003          	lfsr	2,3
  7809  00386A  5003               	movf	fputc@fp^0,w,c
  7810  00386C  26D9               	addwf	fsr2l,f,c
  7811  00386E  5004               	movf	(fputc@fp+1)^0,w,c
  7812  003870  22DA               	addwfc	fsr2h,f,c
  7813  003872  2ADE               	incf	postinc2,f,c
  7814  003874  0E00               	movlw	0
  7815  003876  22DD               	addwfc	postdec2,f,c
  7816  003878                     l1295:
  7817  003878  0012               	return		;funcret
  7818  00387A                     __end_of_fputc:
  7819                           	callstack 0
  7820                           
  7821 ;; *************** function _putch *****************
  7822 ;; Defined at:
  7823 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\putch.c"
  7824 ;; Parameters:    Size  Location     Type
  7825 ;;  c               1    wreg     unsigned char 
  7826 ;; Auto vars:     Size  Location     Type
  7827 ;;  c               1    0[COMRAM] unsigned char 
  7828 ;; Return value:  Size  Location     Type
  7829 ;;                  1    wreg      void 
  7830 ;; Registers used:
  7831 ;;		wreg
  7832 ;; Tracked objects:
  7833 ;;		On entry : 0/0
  7834 ;;		On exit  : 0/0
  7835 ;;		Unchanged: 0/0
  7836 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7837 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7838 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7839 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7840 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7841 ;;Total ram usage:        0 bytes
  7842 ;; Hardware stack levels used: 1
  7843 ;; This function calls:
  7844 ;;		Nothing
  7845 ;; This function is called by:
  7846 ;;		_fputc
  7847 ;; This function uses a non-reentrant model
  7848 ;;
  7849                           
  7850                           	psect	text34
  7851  0040A0                     __ptext34:
  7852                           	callstack 0
  7853  0040A0                     _putch:
  7854                           	callstack 25
  7855  0040A0  0012               	return		;funcret
  7856  0040A2                     __end_of_putch:
  7857                           	callstack 0
  7858                           
  7859 ;; *************** function _abs *****************
  7860 ;; Defined at:
  7861 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\abs.c"
  7862 ;; Parameters:    Size  Location     Type
  7863 ;;  a               2   18[COMRAM] int 
  7864 ;; Auto vars:     Size  Location     Type
  7865 ;;		None
  7866 ;; Return value:  Size  Location     Type
  7867 ;;                  2   18[COMRAM] int 
  7868 ;; Registers used:
  7869 ;;		wreg, status,2, status,0
  7870 ;; Tracked objects:
  7871 ;;		On entry : 0/0
  7872 ;;		On exit  : 0/0
  7873 ;;		Unchanged: 0/0
  7874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7875 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7876 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7877 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7878 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7879 ;;Total ram usage:        4 bytes
  7880 ;; Hardware stack levels used: 1
  7881 ;; This function calls:
  7882 ;;		Nothing
  7883 ;; This function is called by:
  7884 ;;		_dtoa
  7885 ;; This function uses a non-reentrant model
  7886 ;;
  7887                           
  7888                           	psect	text35
  7889  003D84                     __ptext35:
  7890                           	callstack 0
  7891  003D84                     _abs:
  7892                           	callstack 25
  7893  003D84  BE14               	btfsc	(abs@a+1)^0,7,c
  7894  003D86  EFCF  F01E         	goto	u2370
  7895  003D8A  5014               	movf	(abs@a+1)^0,w,c
  7896  003D8C  E106               	bnz	u2371
  7897  003D8E  0413               	decf	abs@a^0,w,c
  7898  003D90  B0D8               	btfsc	status,0,c
  7899  003D92  EFCD  F01E         	goto	u2371
  7900  003D96  EFCF  F01E         	goto	u2370
  7901  003D9A                     u2371:
  7902  003D9A  EFDD  F01E         	goto	l1280
  7903  003D9E                     u2370:
  7904  003D9E  C013  F015         	movff	abs@a,??_abs
  7905  003DA2  C014  F016         	movff	abs@a+1,??_abs+1
  7906  003DA6  1E15               	comf	??_abs^0,f,c
  7907  003DA8  1E16               	comf	(??_abs+1)^0,f,c
  7908  003DAA  4A15               	infsnz	??_abs^0,f,c
  7909  003DAC  2A16               	incf	(??_abs+1)^0,f,c
  7910  003DAE  C015  F013         	movff	??_abs,?_abs
  7911  003DB2  C016  F014         	movff	??_abs+1,?_abs+1
  7912  003DB6  EFE1  F01E         	goto	l1283
  7913  003DBA                     l1280:
  7914  003DBA  C013  F013         	movff	abs@a,?_abs
  7915  003DBE  C014  F014         	movff	abs@a+1,?_abs+1
  7916  003DC2                     l1283:
  7917  003DC2  0012               	return		;funcret
  7918  003DC4                     __end_of_abs:
  7919                           	callstack 0
  7920                           
  7921 ;; *************** function ___aomod *****************
  7922 ;; Defined at:
  7923 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\aomod.c"
  7924 ;; Parameters:    Size  Location     Type
  7925 ;;  dividend        8    0[COMRAM] long long 
  7926 ;;  divisor         8    8[COMRAM] long long 
  7927 ;; Auto vars:     Size  Location     Type
  7928 ;;  sign            1   17[COMRAM] unsigned char 
  7929 ;;  counter         1   16[COMRAM] unsigned char 
  7930 ;; Return value:  Size  Location     Type
  7931 ;;                  8    0[COMRAM] long long 
  7932 ;; Registers used:
  7933 ;;		wreg, status,2, status,0
  7934 ;; Tracked objects:
  7935 ;;		On entry : 0/0
  7936 ;;		On exit  : 0/0
  7937 ;;		Unchanged: 0/0
  7938 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7939 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7940 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7941 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7942 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7943 ;;Total ram usage:       18 bytes
  7944 ;; Hardware stack levels used: 1
  7945 ;; This function calls:
  7946 ;;		Nothing
  7947 ;; This function is called by:
  7948 ;;		_dtoa
  7949 ;; This function uses a non-reentrant model
  7950 ;;
  7951                           
  7952                           	psect	text36
  7953  003290                     __ptext36:
  7954                           	callstack 0
  7955  003290                     ___aomod:
  7956                           	callstack 25
  7957  003290  0E00               	movlw	0
  7958  003292  6E12               	movwf	___aomod@sign^0,c
  7959  003294  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
  7960  003296  EF51  F019         	goto	u2270
  7961  00329A  EF4F  F019         	goto	u2271
  7962  00329E                     u2271:
  7963  00329E  EF63  F019         	goto	l2955
  7964  0032A2                     u2270:
  7965  0032A2  1E08               	comf	(___aomod@dividend+7)^0,f,c
  7966  0032A4  1E07               	comf	(___aomod@dividend+6)^0,f,c
  7967  0032A6  1E06               	comf	(___aomod@dividend+5)^0,f,c
  7968  0032A8  1E05               	comf	(___aomod@dividend+4)^0,f,c
  7969  0032AA  1E04               	comf	(___aomod@dividend+3)^0,f,c
  7970  0032AC  1E03               	comf	(___aomod@dividend+2)^0,f,c
  7971  0032AE  1E02               	comf	(___aomod@dividend+1)^0,f,c
  7972  0032B0  6C01               	negf	___aomod@dividend^0,c
  7973  0032B2  0E00               	movlw	0
  7974  0032B4  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  7975  0032B6  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  7976  0032B8  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  7977  0032BA  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  7978  0032BC  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  7979  0032BE  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  7980  0032C0  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  7981  0032C2  0E01               	movlw	1
  7982  0032C4  6E12               	movwf	___aomod@sign^0,c
  7983  0032C6                     l2955:
  7984  0032C6  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
  7985  0032C8  EF6A  F019         	goto	u2280
  7986  0032CC  EF68  F019         	goto	u2281
  7987  0032D0                     u2281:
  7988  0032D0  EF7A  F019         	goto	l2959
  7989  0032D4                     u2280:
  7990  0032D4  1E10               	comf	(___aomod@divisor+7)^0,f,c
  7991  0032D6  1E0F               	comf	(___aomod@divisor+6)^0,f,c
  7992  0032D8  1E0E               	comf	(___aomod@divisor+5)^0,f,c
  7993  0032DA  1E0D               	comf	(___aomod@divisor+4)^0,f,c
  7994  0032DC  1E0C               	comf	(___aomod@divisor+3)^0,f,c
  7995  0032DE  1E0B               	comf	(___aomod@divisor+2)^0,f,c
  7996  0032E0  1E0A               	comf	(___aomod@divisor+1)^0,f,c
  7997  0032E2  6C09               	negf	___aomod@divisor^0,c
  7998  0032E4  0E00               	movlw	0
  7999  0032E6  220A               	addwfc	(___aomod@divisor+1)^0,f,c
  8000  0032E8  220B               	addwfc	(___aomod@divisor+2)^0,f,c
  8001  0032EA  220C               	addwfc	(___aomod@divisor+3)^0,f,c
  8002  0032EC  220D               	addwfc	(___aomod@divisor+4)^0,f,c
  8003  0032EE  220E               	addwfc	(___aomod@divisor+5)^0,f,c
  8004  0032F0  220F               	addwfc	(___aomod@divisor+6)^0,f,c
  8005  0032F2  2210               	addwfc	(___aomod@divisor+7)^0,f,c
  8006  0032F4                     l2959:
  8007  0032F4  5009               	movf	___aomod@divisor^0,w,c
  8008  0032F6  100A               	iorwf	(___aomod@divisor+1)^0,w,c
  8009  0032F8  100B               	iorwf	(___aomod@divisor+2)^0,w,c
  8010  0032FA  100C               	iorwf	(___aomod@divisor+3)^0,w,c
  8011  0032FC  100D               	iorwf	(___aomod@divisor+4)^0,w,c
  8012  0032FE  100E               	iorwf	(___aomod@divisor+5)^0,w,c
  8013  003300  100F               	iorwf	(___aomod@divisor+6)^0,w,c
  8014  003302  1010               	iorwf	(___aomod@divisor+7)^0,w,c
  8015  003304  B4D8               	btfsc	status,2,c
  8016  003306  EF87  F019         	goto	u2291
  8017  00330A  EF89  F019         	goto	u2290
  8018  00330E                     u2291:
  8019  00330E  EFD1  F019         	goto	l2975
  8020  003312                     u2290:
  8021  003312  0E01               	movlw	1
  8022  003314  6E11               	movwf	___aomod@counter^0,c
  8023  003316  EF97  F019         	goto	l2965
  8024  00331A                     l2963:
  8025  00331A  90D8               	bcf	status,0,c
  8026  00331C  3609               	rlcf	___aomod@divisor^0,f,c
  8027  00331E  360A               	rlcf	(___aomod@divisor+1)^0,f,c
  8028  003320  360B               	rlcf	(___aomod@divisor+2)^0,f,c
  8029  003322  360C               	rlcf	(___aomod@divisor+3)^0,f,c
  8030  003324  360D               	rlcf	(___aomod@divisor+4)^0,f,c
  8031  003326  360E               	rlcf	(___aomod@divisor+5)^0,f,c
  8032  003328  360F               	rlcf	(___aomod@divisor+6)^0,f,c
  8033  00332A  3610               	rlcf	(___aomod@divisor+7)^0,f,c
  8034  00332C  2A11               	incf	___aomod@counter^0,f,c
  8035  00332E                     l2965:
  8036  00332E  AE10               	btfss	(___aomod@divisor+7)^0,7,c
  8037  003330  EF9C  F019         	goto	u2301
  8038  003334  EF9E  F019         	goto	u2300
  8039  003338                     u2301:
  8040  003338  EF8D  F019         	goto	l2963
  8041  00333C                     u2300:
  8042  00333C                     l2967:
  8043  00333C  5009               	movf	___aomod@divisor^0,w,c
  8044  00333E  5C01               	subwf	___aomod@dividend^0,w,c
  8045  003340  500A               	movf	(___aomod@divisor+1)^0,w,c
  8046  003342  5802               	subwfb	(___aomod@dividend+1)^0,w,c
  8047  003344  500B               	movf	(___aomod@divisor+2)^0,w,c
  8048  003346  5803               	subwfb	(___aomod@dividend+2)^0,w,c
  8049  003348  500C               	movf	(___aomod@divisor+3)^0,w,c
  8050  00334A  5804               	subwfb	(___aomod@dividend+3)^0,w,c
  8051  00334C  500D               	movf	(___aomod@divisor+4)^0,w,c
  8052  00334E  5805               	subwfb	(___aomod@dividend+4)^0,w,c
  8053  003350  500E               	movf	(___aomod@divisor+5)^0,w,c
  8054  003352  5806               	subwfb	(___aomod@dividend+5)^0,w,c
  8055  003354  500F               	movf	(___aomod@divisor+6)^0,w,c
  8056  003356  5807               	subwfb	(___aomod@dividend+6)^0,w,c
  8057  003358  5010               	movf	(___aomod@divisor+7)^0,w,c
  8058  00335A  5808               	subwfb	(___aomod@dividend+7)^0,w,c
  8059  00335C  A0D8               	btfss	status,0,c
  8060  00335E  EFB3  F019         	goto	u2311
  8061  003362  EFB5  F019         	goto	u2310
  8062  003366                     u2311:
  8063  003366  EFC5  F019         	goto	l2971
  8064  00336A                     u2310:
  8065  00336A  5009               	movf	___aomod@divisor^0,w,c
  8066  00336C  5E01               	subwf	___aomod@dividend^0,f,c
  8067  00336E  500A               	movf	(___aomod@divisor+1)^0,w,c
  8068  003370  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
  8069  003372  500B               	movf	(___aomod@divisor+2)^0,w,c
  8070  003374  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
  8071  003376  500C               	movf	(___aomod@divisor+3)^0,w,c
  8072  003378  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
  8073  00337A  500D               	movf	(___aomod@divisor+4)^0,w,c
  8074  00337C  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
  8075  00337E  500E               	movf	(___aomod@divisor+5)^0,w,c
  8076  003380  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
  8077  003382  500F               	movf	(___aomod@divisor+6)^0,w,c
  8078  003384  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
  8079  003386  5010               	movf	(___aomod@divisor+7)^0,w,c
  8080  003388  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
  8081  00338A                     l2971:
  8082  00338A  90D8               	bcf	status,0,c
  8083  00338C  3210               	rrcf	(___aomod@divisor+7)^0,f,c
  8084  00338E  320F               	rrcf	(___aomod@divisor+6)^0,f,c
  8085  003390  320E               	rrcf	(___aomod@divisor+5)^0,f,c
  8086  003392  320D               	rrcf	(___aomod@divisor+4)^0,f,c
  8087  003394  320C               	rrcf	(___aomod@divisor+3)^0,f,c
  8088  003396  320B               	rrcf	(___aomod@divisor+2)^0,f,c
  8089  003398  320A               	rrcf	(___aomod@divisor+1)^0,f,c
  8090  00339A  3209               	rrcf	___aomod@divisor^0,f,c
  8091  00339C  2E11               	decfsz	___aomod@counter^0,f,c
  8092  00339E  EF9E  F019         	goto	l2967
  8093  0033A2                     l2975:
  8094  0033A2  5012               	movf	___aomod@sign^0,w,c
  8095  0033A4  B4D8               	btfsc	status,2,c
  8096  0033A6  EFD7  F019         	goto	u2321
  8097  0033AA  EFD9  F019         	goto	u2320
  8098  0033AE                     u2321:
  8099  0033AE  EFE9  F019         	goto	l2979
  8100  0033B2                     u2320:
  8101  0033B2  1E08               	comf	(___aomod@dividend+7)^0,f,c
  8102  0033B4  1E07               	comf	(___aomod@dividend+6)^0,f,c
  8103  0033B6  1E06               	comf	(___aomod@dividend+5)^0,f,c
  8104  0033B8  1E05               	comf	(___aomod@dividend+4)^0,f,c
  8105  0033BA  1E04               	comf	(___aomod@dividend+3)^0,f,c
  8106  0033BC  1E03               	comf	(___aomod@dividend+2)^0,f,c
  8107  0033BE  1E02               	comf	(___aomod@dividend+1)^0,f,c
  8108  0033C0  6C01               	negf	___aomod@dividend^0,c
  8109  0033C2  0E00               	movlw	0
  8110  0033C4  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  8111  0033C6  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  8112  0033C8  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  8113  0033CA  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  8114  0033CC  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  8115  0033CE  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  8116  0033D0  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  8117  0033D2                     l2979:
  8118  0033D2  C001  F001         	movff	___aomod@dividend,?___aomod
  8119  0033D6  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  8120  0033DA  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  8121  0033DE  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  8122  0033E2  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  8123  0033E6  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  8124  0033EA  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  8125  0033EE  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  8126  0033F2  0012               	return		;funcret
  8127  0033F4                     __end_of___aomod:
  8128                           	callstack 0
  8129                           
  8130 ;; *************** function ___aodiv *****************
  8131 ;; Defined at:
  8132 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\aodiv.c"
  8133 ;; Parameters:    Size  Location     Type
  8134 ;;  dividend        8    0[COMRAM] long long 
  8135 ;;  divisor         8    8[COMRAM] long long 
  8136 ;; Auto vars:     Size  Location     Type
  8137 ;;  quotient        8   18[COMRAM] long long 
  8138 ;;  sign            1   17[COMRAM] unsigned char 
  8139 ;;  counter         1   16[COMRAM] unsigned char 
  8140 ;; Return value:  Size  Location     Type
  8141 ;;                  8    0[COMRAM] long long 
  8142 ;; Registers used:
  8143 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8144 ;; Tracked objects:
  8145 ;;		On entry : 0/0
  8146 ;;		On exit  : 0/0
  8147 ;;		Unchanged: 0/0
  8148 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8149 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8150 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8151 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8152 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8153 ;;Total ram usage:       26 bytes
  8154 ;; Hardware stack levels used: 1
  8155 ;; This function calls:
  8156 ;;		Nothing
  8157 ;; This function is called by:
  8158 ;;		_dtoa
  8159 ;; This function uses a non-reentrant model
  8160 ;;
  8161                           
  8162                           	psect	text37
  8163  003108                     __ptext37:
  8164                           	callstack 0
  8165  003108                     ___aodiv:
  8166                           	callstack 25
  8167  003108  0E00               	movlw	0
  8168  00310A  6E12               	movwf	___aodiv@sign^0,c
  8169  00310C  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
  8170  00310E  EF8D  F018         	goto	u2200
  8171  003112  EF8B  F018         	goto	u2201
  8172  003116                     u2201:
  8173  003116  EF9F  F018         	goto	l2911
  8174  00311A                     u2200:
  8175  00311A  1E10               	comf	(___aodiv@divisor+7)^0,f,c
  8176  00311C  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
  8177  00311E  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
  8178  003120  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
  8179  003122  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
  8180  003124  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
  8181  003126  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
  8182  003128  6C09               	negf	___aodiv@divisor^0,c
  8183  00312A  0E00               	movlw	0
  8184  00312C  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
  8185  00312E  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
  8186  003130  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
  8187  003132  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
  8188  003134  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
  8189  003136  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
  8190  003138  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
  8191  00313A  0E01               	movlw	1
  8192  00313C  6E12               	movwf	___aodiv@sign^0,c
  8193  00313E                     l2911:
  8194  00313E  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
  8195  003140  EFA6  F018         	goto	u2210
  8196  003144  EFA4  F018         	goto	u2211
  8197  003148                     u2211:
  8198  003148  EFB8  F018         	goto	l2917
  8199  00314C                     u2210:
  8200  00314C  1E08               	comf	(___aodiv@dividend+7)^0,f,c
  8201  00314E  1E07               	comf	(___aodiv@dividend+6)^0,f,c
  8202  003150  1E06               	comf	(___aodiv@dividend+5)^0,f,c
  8203  003152  1E05               	comf	(___aodiv@dividend+4)^0,f,c
  8204  003154  1E04               	comf	(___aodiv@dividend+3)^0,f,c
  8205  003156  1E03               	comf	(___aodiv@dividend+2)^0,f,c
  8206  003158  1E02               	comf	(___aodiv@dividend+1)^0,f,c
  8207  00315A  6C01               	negf	___aodiv@dividend^0,c
  8208  00315C  0E00               	movlw	0
  8209  00315E  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
  8210  003160  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
  8211  003162  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
  8212  003164  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
  8213  003166  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
  8214  003168  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
  8215  00316A  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
  8216  00316C  0E01               	movlw	1
  8217  00316E  1A12               	xorwf	___aodiv@sign^0,f,c
  8218  003170                     l2917:
  8219  003170  EE20  F013         	lfsr	2,___aodiv@quotient
  8220  003174  0E07               	movlw	7
  8221  003176                     u2221:
  8222  003176  6ADE               	clrf	postinc2,c
  8223  003178  06E8               	decf	wreg,f,c
  8224  00317A  E2FD               	bc	u2221
  8225  00317C  5009               	movf	___aodiv@divisor^0,w,c
  8226  00317E  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
  8227  003180  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
  8228  003182  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
  8229  003184  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
  8230  003186  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
  8231  003188  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
  8232  00318A  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
  8233  00318C  B4D8               	btfsc	status,2,c
  8234  00318E  EFCB  F018         	goto	u2231
  8235  003192  EFCD  F018         	goto	u2230
  8236  003196                     u2231:
  8237  003196  EF1F  F019         	goto	l2939
  8238  00319A                     u2230:
  8239  00319A  0E01               	movlw	1
  8240  00319C  6E11               	movwf	___aodiv@counter^0,c
  8241  00319E  EFDB  F018         	goto	l2925
  8242  0031A2                     l2923:
  8243  0031A2  90D8               	bcf	status,0,c
  8244  0031A4  3609               	rlcf	___aodiv@divisor^0,f,c
  8245  0031A6  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
  8246  0031A8  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
  8247  0031AA  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
  8248  0031AC  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
  8249  0031AE  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
  8250  0031B0  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
  8251  0031B2  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
  8252  0031B4  2A11               	incf	___aodiv@counter^0,f,c
  8253  0031B6                     l2925:
  8254  0031B6  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
  8255  0031B8  EFE0  F018         	goto	u2241
  8256  0031BC  EFE2  F018         	goto	u2240
  8257  0031C0                     u2241:
  8258  0031C0  EFD1  F018         	goto	l2923
  8259  0031C4                     u2240:
  8260  0031C4                     l2927:
  8261  0031C4  90D8               	bcf	status,0,c
  8262  0031C6  3613               	rlcf	___aodiv@quotient^0,f,c
  8263  0031C8  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
  8264  0031CA  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
  8265  0031CC  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
  8266  0031CE  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
  8267  0031D0  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
  8268  0031D2  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
  8269  0031D4  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
  8270  0031D6  5009               	movf	___aodiv@divisor^0,w,c
  8271  0031D8  5C01               	subwf	___aodiv@dividend^0,w,c
  8272  0031DA  500A               	movf	(___aodiv@divisor+1)^0,w,c
  8273  0031DC  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
  8274  0031DE  500B               	movf	(___aodiv@divisor+2)^0,w,c
  8275  0031E0  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
  8276  0031E2  500C               	movf	(___aodiv@divisor+3)^0,w,c
  8277  0031E4  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
  8278  0031E6  500D               	movf	(___aodiv@divisor+4)^0,w,c
  8279  0031E8  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
  8280  0031EA  500E               	movf	(___aodiv@divisor+5)^0,w,c
  8281  0031EC  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
  8282  0031EE  500F               	movf	(___aodiv@divisor+6)^0,w,c
  8283  0031F0  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
  8284  0031F2  5010               	movf	(___aodiv@divisor+7)^0,w,c
  8285  0031F4  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
  8286  0031F6  A0D8               	btfss	status,0,c
  8287  0031F8  EF00  F019         	goto	u2251
  8288  0031FC  EF02  F019         	goto	u2250
  8289  003200                     u2251:
  8290  003200  EF13  F019         	goto	l2935
  8291  003204                     u2250:
  8292  003204  5009               	movf	___aodiv@divisor^0,w,c
  8293  003206  5E01               	subwf	___aodiv@dividend^0,f,c
  8294  003208  500A               	movf	(___aodiv@divisor+1)^0,w,c
  8295  00320A  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
  8296  00320C  500B               	movf	(___aodiv@divisor+2)^0,w,c
  8297  00320E  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
  8298  003210  500C               	movf	(___aodiv@divisor+3)^0,w,c
  8299  003212  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
  8300  003214  500D               	movf	(___aodiv@divisor+4)^0,w,c
  8301  003216  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
  8302  003218  500E               	movf	(___aodiv@divisor+5)^0,w,c
  8303  00321A  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
  8304  00321C  500F               	movf	(___aodiv@divisor+6)^0,w,c
  8305  00321E  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
  8306  003220  5010               	movf	(___aodiv@divisor+7)^0,w,c
  8307  003222  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
  8308  003224  8013               	bsf	___aodiv@quotient^0,0,c
  8309  003226                     l2935:
  8310  003226  90D8               	bcf	status,0,c
  8311  003228  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
  8312  00322A  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
  8313  00322C  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
  8314  00322E  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
  8315  003230  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
  8316  003232  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
  8317  003234  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
  8318  003236  3209               	rrcf	___aodiv@divisor^0,f,c
  8319  003238  2E11               	decfsz	___aodiv@counter^0,f,c
  8320  00323A  EFE2  F018         	goto	l2927
  8321  00323E                     l2939:
  8322  00323E  5012               	movf	___aodiv@sign^0,w,c
  8323  003240  B4D8               	btfsc	status,2,c
  8324  003242  EF25  F019         	goto	u2261
  8325  003246  EF27  F019         	goto	u2260
  8326  00324A                     u2261:
  8327  00324A  EF37  F019         	goto	l2943
  8328  00324E                     u2260:
  8329  00324E  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
  8330  003250  1E19               	comf	(___aodiv@quotient+6)^0,f,c
  8331  003252  1E18               	comf	(___aodiv@quotient+5)^0,f,c
  8332  003254  1E17               	comf	(___aodiv@quotient+4)^0,f,c
  8333  003256  1E16               	comf	(___aodiv@quotient+3)^0,f,c
  8334  003258  1E15               	comf	(___aodiv@quotient+2)^0,f,c
  8335  00325A  1E14               	comf	(___aodiv@quotient+1)^0,f,c
  8336  00325C  6C13               	negf	___aodiv@quotient^0,c
  8337  00325E  0E00               	movlw	0
  8338  003260  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
  8339  003262  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
  8340  003264  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
  8341  003266  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
  8342  003268  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
  8343  00326A  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
  8344  00326C  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
  8345  00326E                     l2943:
  8346  00326E  C013  F001         	movff	___aodiv@quotient,?___aodiv
  8347  003272  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  8348  003276  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  8349  00327A  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  8350  00327E  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  8351  003282  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  8352  003286  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  8353  00328A  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  8354  00328E  0012               	return		;funcret
  8355  003290                     __end_of___aodiv:
  8356                           	callstack 0
  8357                           
  8358 ;; *************** function _sendStringSerial4 *****************
  8359 ;; Defined at:
  8360 ;;		line 36 in file "serial.c"
  8361 ;; Parameters:    Size  Location     Type
  8362 ;;  string          2    1[COMRAM] PTR unsigned char 
  8363 ;;		 -> voltage_display@buf(80), color_predict@buf(100), check_color_reading@buf(100), color_display@buf(100), 
  8364 ;; Auto vars:     Size  Location     Type
  8365 ;;		None
  8366 ;; Return value:  Size  Location     Type
  8367 ;;                  1    wreg      void 
  8368 ;; Registers used:
  8369 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8370 ;; Tracked objects:
  8371 ;;		On entry : 0/0
  8372 ;;		On exit  : 0/0
  8373 ;;		Unchanged: 0/0
  8374 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8375 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8376 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8377 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8378 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8379 ;;Total ram usage:        2 bytes
  8380 ;; Hardware stack levels used: 1
  8381 ;; Hardware stack levels required when called: 1
  8382 ;; This function calls:
  8383 ;;		_sendCharSerial4
  8384 ;; This function is called by:
  8385 ;;		_color_display
  8386 ;;		_color_predict
  8387 ;;		_check_color_reading
  8388 ;;		_voltage_display
  8389 ;; This function uses a non-reentrant model
  8390 ;;
  8391                           
  8392                           	psect	text38
  8393  003F12                     __ptext38:
  8394                           	callstack 0
  8395  003F12                     _sendStringSerial4:
  8396                           	callstack 28
  8397  003F12                     
  8398                           ;serial.c: 38:     while(*string != 0){
  8399  003F12  EF94  F01F         	goto	l3569
  8400  003F16                     l3565:
  8401                           
  8402                           ;serial.c: 39:   sendCharSerial4(*string++);}
  8403  003F16  C002  FFD9         	movff	sendStringSerial4@string,fsr2l
  8404  003F1A  C003  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  8405  003F1E  50DF               	movf	indf2,w,c
  8406  003F20  EC29  F020         	call	_sendCharSerial4
  8407  003F24  4A02               	infsnz	sendStringSerial4@string^0,f,c
  8408  003F26  2A03               	incf	(sendStringSerial4@string+1)^0,f,c
  8409  003F28                     l3569:
  8410                           
  8411                           ;serial.c: 38:     while(*string != 0){
  8412  003F28  C002  FFD9         	movff	sendStringSerial4@string,fsr2l
  8413  003F2C  C003  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  8414  003F30  50DF               	movf	indf2,w,c
  8415  003F32  A4D8               	btfss	status,2,c
  8416  003F34  EF9E  F01F         	goto	u3271
  8417  003F38  EFA0  F01F         	goto	u3270
  8418  003F3C                     u3271:
  8419  003F3C  EF8B  F01F         	goto	l3565
  8420  003F40                     u3270:
  8421  003F40  0012               	return		;funcret
  8422  003F42                     __end_of_sendStringSerial4:
  8423                           	callstack 0
  8424                           
  8425 ;; *************** function _sendCharSerial4 *****************
  8426 ;; Defined at:
  8427 ;;		line 29 in file "serial.c"
  8428 ;; Parameters:    Size  Location     Type
  8429 ;;  charToSend      1    wreg     unsigned char 
  8430 ;; Auto vars:     Size  Location     Type
  8431 ;;  charToSend      1    0[COMRAM] unsigned char 
  8432 ;; Return value:  Size  Location     Type
  8433 ;;                  1    wreg      void 
  8434 ;; Registers used:
  8435 ;;		wreg
  8436 ;; Tracked objects:
  8437 ;;		On entry : 0/0
  8438 ;;		On exit  : 0/0
  8439 ;;		Unchanged: 0/0
  8440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8441 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8442 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8443 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8444 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8445 ;;Total ram usage:        1 bytes
  8446 ;; Hardware stack levels used: 1
  8447 ;; This function calls:
  8448 ;;		Nothing
  8449 ;; This function is called by:
  8450 ;;		_sendStringSerial4
  8451 ;; This function uses a non-reentrant model
  8452 ;;
  8453                           
  8454                           	psect	text39
  8455  004052                     __ptext39:
  8456                           	callstack 0
  8457  004052                     _sendCharSerial4:
  8458                           	callstack 28
  8459                           
  8460                           ;incstack = 0
  8461                           ;sendCharSerial4@charToSend stored from wreg
  8462  004052  6E01               	movwf	sendCharSerial4@charToSend^0,c
  8463  004054                     l367:
  8464  004054  010E               	movlb	14	; () banked
  8465  004056  A537               	btfss	55,2,b	;volatile
  8466  004058  EF30  F020         	goto	u3001
  8467  00405C  EF32  F020         	goto	u3000
  8468  004060                     u3001:
  8469  004060  EF2A  F020         	goto	l367
  8470  004064                     u3000:
  8471  004064                     
  8472                           ; BSR set to: 14
  8473                           ;serial.c: 31:     TX4REG = charToSend;
  8474  004064  C001  FEE4         	movff	sendCharSerial4@charToSend,3812	;volatile
  8475  004068                     
  8476                           ; BSR set to: 14
  8477  004068  0012               	return		;funcret
  8478  00406A                     __end_of_sendCharSerial4:
  8479                           	callstack 0
  8480                           
  8481 ;; *************** function _LED_R *****************
  8482 ;; Defined at:
  8483 ;;		line 100 in file "color.c"
  8484 ;; Parameters:    Size  Location     Type
  8485 ;;		None
  8486 ;; Auto vars:     Size  Location     Type
  8487 ;;		None
  8488 ;; Return value:  Size  Location     Type
  8489 ;;                  1    wreg      void 
  8490 ;; Registers used:
  8491 ;;		wreg
  8492 ;; Tracked objects:
  8493 ;;		On entry : 0/0
  8494 ;;		On exit  : 0/0
  8495 ;;		Unchanged: 0/0
  8496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8497 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8498 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8499 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8500 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8501 ;;Total ram usage:        2 bytes
  8502 ;; Hardware stack levels used: 1
  8503 ;; This function calls:
  8504 ;;		Nothing
  8505 ;; This function is called by:
  8506 ;;		_color_data_collection
  8507 ;;		_detect_color
  8508 ;;		_calibrate_white
  8509 ;; This function uses a non-reentrant model
  8510 ;;
  8511                           
  8512                           	psect	text40
  8513  003F94                     __ptext40:
  8514                           	callstack 0
  8515  003F94                     _LED_R:
  8516                           	callstack 29
  8517  003F94                     
  8518                           ;color.c: 102:     LATGbits.LATG1 = 1;
  8519  003F94  827F               	bsf	127,1,c	;volatile
  8520                           
  8521                           ;color.c: 103:     LATFbits.LATF7 = 0;
  8522  003F96  9E7E               	bcf	126,7,c	;volatile
  8523                           
  8524                           ;color.c: 104:     LATAbits.LATA4 = 0;
  8525  003F98  9879               	bcf	121,4,c	;volatile
  8526  003F9A                     
  8527                           ;color.c: 105:     _delay((unsigned long)((200)*(64000000/4000.0)));
  8528  003F9A  0E11               	movlw	17
  8529  003F9C  6E02               	movwf	(??_LED_R+1)^0,c
  8530  003F9E  0E3C               	movlw	60
  8531  003FA0  6E01               	movwf	??_LED_R^0,c
  8532  003FA2  0ECB               	movlw	203
  8533  003FA4                     u4387:
  8534  003FA4  2EE8               	decfsz	wreg,f,c
  8535  003FA6  D7FE               	bra	u4387
  8536  003FA8  2E01               	decfsz	??_LED_R^0,f,c
  8537  003FAA  D7FC               	bra	u4387
  8538  003FAC  2E02               	decfsz	(??_LED_R+1)^0,f,c
  8539  003FAE  D7FA               	bra	u4387
  8540  003FB0  F000               	nop	
  8541  003FB2  0012               	return		;funcret
  8542  003FB4                     __end_of_LED_R:
  8543                           	callstack 0
  8544                           
  8545 ;; *************** function _LED_G *****************
  8546 ;; Defined at:
  8547 ;;		line 127 in file "color.c"
  8548 ;; Parameters:    Size  Location     Type
  8549 ;;		None
  8550 ;; Auto vars:     Size  Location     Type
  8551 ;;		None
  8552 ;; Return value:  Size  Location     Type
  8553 ;;                  1    wreg      void 
  8554 ;; Registers used:
  8555 ;;		wreg
  8556 ;; Tracked objects:
  8557 ;;		On entry : 0/0
  8558 ;;		On exit  : 0/0
  8559 ;;		Unchanged: 0/0
  8560 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8561 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8562 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8563 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8564 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8565 ;;Total ram usage:        2 bytes
  8566 ;; Hardware stack levels used: 1
  8567 ;; This function calls:
  8568 ;;		Nothing
  8569 ;; This function is called by:
  8570 ;;		_color_data_collection
  8571 ;;		_detect_color
  8572 ;;		_calibrate_white
  8573 ;; This function uses a non-reentrant model
  8574 ;;
  8575                           
  8576                           	psect	text41
  8577  003FB4                     __ptext41:
  8578                           	callstack 0
  8579  003FB4                     _LED_G:
  8580                           	callstack 29
  8581  003FB4                     
  8582                           ;color.c: 129:     LATGbits.LATG1 = 0;
  8583  003FB4  927F               	bcf	127,1,c	;volatile
  8584                           
  8585                           ;color.c: 130:     LATFbits.LATF7 = 0;
  8586  003FB6  9E7E               	bcf	126,7,c	;volatile
  8587                           
  8588                           ;color.c: 131:     LATAbits.LATA4 = 1;
  8589  003FB8  8879               	bsf	121,4,c	;volatile
  8590  003FBA                     
  8591                           ;color.c: 132:     _delay((unsigned long)((200)*(64000000/4000.0)));
  8592  003FBA  0E11               	movlw	17
  8593  003FBC  6E02               	movwf	(??_LED_G+1)^0,c
  8594  003FBE  0E3C               	movlw	60
  8595  003FC0  6E01               	movwf	??_LED_G^0,c
  8596  003FC2  0ECB               	movlw	203
  8597  003FC4                     u4397:
  8598  003FC4  2EE8               	decfsz	wreg,f,c
  8599  003FC6  D7FE               	bra	u4397
  8600  003FC8  2E01               	decfsz	??_LED_G^0,f,c
  8601  003FCA  D7FC               	bra	u4397
  8602  003FCC  2E02               	decfsz	(??_LED_G+1)^0,f,c
  8603  003FCE  D7FA               	bra	u4397
  8604  003FD0  F000               	nop	
  8605  003FD2  0012               	return		;funcret
  8606  003FD4                     __end_of_LED_G:
  8607                           	callstack 0
  8608                           
  8609 ;; *************** function _LED_C *****************
  8610 ;; Defined at:
  8611 ;;		line 109 in file "color.c"
  8612 ;; Parameters:    Size  Location     Type
  8613 ;;		None
  8614 ;; Auto vars:     Size  Location     Type
  8615 ;;		None
  8616 ;; Return value:  Size  Location     Type
  8617 ;;                  1    wreg      void 
  8618 ;; Registers used:
  8619 ;;		wreg
  8620 ;; Tracked objects:
  8621 ;;		On entry : 0/0
  8622 ;;		On exit  : 0/0
  8623 ;;		Unchanged: 0/0
  8624 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8625 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8626 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8627 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8628 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8629 ;;Total ram usage:        2 bytes
  8630 ;; Hardware stack levels used: 1
  8631 ;; This function calls:
  8632 ;;		Nothing
  8633 ;; This function is called by:
  8634 ;;		_color_data_collection
  8635 ;; This function uses a non-reentrant model
  8636 ;;
  8637                           
  8638                           	psect	text42
  8639  003FD4                     __ptext42:
  8640                           	callstack 0
  8641  003FD4                     _LED_C:
  8642                           	callstack 29
  8643  003FD4                     
  8644                           ;color.c: 111:     LATGbits.LATG1 = 1;
  8645  003FD4  827F               	bsf	127,1,c	;volatile
  8646                           
  8647                           ;color.c: 112:     LATFbits.LATF7 = 1;
  8648  003FD6  8E7E               	bsf	126,7,c	;volatile
  8649                           
  8650                           ;color.c: 113:     LATAbits.LATA4 = 1;
  8651  003FD8  8879               	bsf	121,4,c	;volatile
  8652  003FDA                     
  8653                           ;color.c: 114:     _delay((unsigned long)((200)*(64000000/4000.0)));
  8654  003FDA  0E11               	movlw	17
  8655  003FDC  6E02               	movwf	(??_LED_C+1)^0,c
  8656  003FDE  0E3C               	movlw	60
  8657  003FE0  6E01               	movwf	??_LED_C^0,c
  8658  003FE2  0ECB               	movlw	203
  8659  003FE4                     u4407:
  8660  003FE4  2EE8               	decfsz	wreg,f,c
  8661  003FE6  D7FE               	bra	u4407
  8662  003FE8  2E01               	decfsz	??_LED_C^0,f,c
  8663  003FEA  D7FC               	bra	u4407
  8664  003FEC  2E02               	decfsz	(??_LED_C+1)^0,f,c
  8665  003FEE  D7FA               	bra	u4407
  8666  003FF0  F000               	nop	
  8667  003FF2  0012               	return		;funcret
  8668  003FF4                     __end_of_LED_C:
  8669                           	callstack 0
  8670                           
  8671 ;; *************** function _LED_B *****************
  8672 ;; Defined at:
  8673 ;;		line 118 in file "color.c"
  8674 ;; Parameters:    Size  Location     Type
  8675 ;;		None
  8676 ;; Auto vars:     Size  Location     Type
  8677 ;;		None
  8678 ;; Return value:  Size  Location     Type
  8679 ;;                  1    wreg      void 
  8680 ;; Registers used:
  8681 ;;		wreg
  8682 ;; Tracked objects:
  8683 ;;		On entry : 0/0
  8684 ;;		On exit  : 0/0
  8685 ;;		Unchanged: 0/0
  8686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8687 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8688 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8689 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8690 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8691 ;;Total ram usage:        2 bytes
  8692 ;; Hardware stack levels used: 1
  8693 ;; This function calls:
  8694 ;;		Nothing
  8695 ;; This function is called by:
  8696 ;;		_color_data_collection
  8697 ;;		_detect_color
  8698 ;;		_calibrate_white
  8699 ;; This function uses a non-reentrant model
  8700 ;;
  8701                           
  8702                           	psect	text43
  8703  003FF4                     __ptext43:
  8704                           	callstack 0
  8705  003FF4                     _LED_B:
  8706                           	callstack 29
  8707  003FF4                     
  8708                           ;color.c: 120:     LATGbits.LATG1 = 0;
  8709  003FF4  927F               	bcf	127,1,c	;volatile
  8710                           
  8711                           ;color.c: 121:     LATFbits.LATF7 = 1;
  8712  003FF6  8E7E               	bsf	126,7,c	;volatile
  8713                           
  8714                           ;color.c: 122:     LATAbits.LATA4 = 0;
  8715  003FF8  9879               	bcf	121,4,c	;volatile
  8716  003FFA                     
  8717                           ;color.c: 123:     _delay((unsigned long)((200)*(64000000/4000.0)));
  8718  003FFA  0E11               	movlw	17
  8719  003FFC  6E02               	movwf	(??_LED_B+1)^0,c
  8720  003FFE  0E3C               	movlw	60
  8721  004000  6E01               	movwf	??_LED_B^0,c
  8722  004002  0ECB               	movlw	203
  8723  004004                     u4417:
  8724  004004  2EE8               	decfsz	wreg,f,c
  8725  004006  D7FE               	bra	u4417
  8726  004008  2E01               	decfsz	??_LED_B^0,f,c
  8727  00400A  D7FC               	bra	u4417
  8728  00400C  2E02               	decfsz	(??_LED_B+1)^0,f,c
  8729  00400E  D7FA               	bra	u4417
  8730  004010  F000               	nop	
  8731  004012  0012               	return		;funcret
  8732  004014                     __end_of_LED_B:
  8733                           	callstack 0
  8734                           
  8735 ;; *************** function _color_click_init *****************
  8736 ;; Defined at:
  8737 ;;		line 12 in file "color.c"
  8738 ;; Parameters:    Size  Location     Type
  8739 ;;		None
  8740 ;; Auto vars:     Size  Location     Type
  8741 ;;		None
  8742 ;; Return value:  Size  Location     Type
  8743 ;;                  1    wreg      void 
  8744 ;; Registers used:
  8745 ;;		wreg, status,2, status,0, cstack
  8746 ;; Tracked objects:
  8747 ;;		On entry : 0/0
  8748 ;;		On exit  : 0/0
  8749 ;;		Unchanged: 0/0
  8750 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8751 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8752 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8753 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8754 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8755 ;;Total ram usage:        1 bytes
  8756 ;; Hardware stack levels used: 1
  8757 ;; Hardware stack levels required when called: 3
  8758 ;; This function calls:
  8759 ;;		_I2C_2_Master_Init
  8760 ;;		_color_writetoaddr
  8761 ;; This function is called by:
  8762 ;;		_main
  8763 ;; This function uses a non-reentrant model
  8764 ;;
  8765                           
  8766                           	psect	text44
  8767  003EDE                     __ptext44:
  8768                           	callstack 0
  8769  003EDE                     _color_click_init:
  8770                           	callstack 27
  8771  003EDE                     
  8772                           ;color.c: 15:     I2C_2_Master_Init();
  8773  003EDE  ECA1  F01F         	call	_I2C_2_Master_Init	;wreg free
  8774  003EE2                     
  8775                           ;color.c: 18:   color_writetoaddr(0x00, 0x01);
  8776  003EE2  0E01               	movlw	1
  8777  003EE4  6E03               	movwf	color_writetoaddr@value^0,c
  8778  003EE6  0E00               	movlw	0
  8779  003EE8  EC0A  F020         	call	_color_writetoaddr
  8780  003EEC                     
  8781                           ;color.c: 19:     _delay((unsigned long)((3)*(64000000/4000.0)));
  8782  003EEC  0E3F               	movlw	63
  8783  003EEE  6E05               	movwf	??_color_click_init^0,c
  8784  003EF0  0E55               	movlw	85
  8785  003EF2                     u4427:
  8786  003EF2  2EE8               	decfsz	wreg,f,c
  8787  003EF4  D7FE               	bra	u4427
  8788  003EF6  2E05               	decfsz	??_color_click_init^0,f,c
  8789  003EF8  D7FC               	bra	u4427
  8790  003EFA  F000               	nop	
  8791  003EFC                     
  8792                           ;color.c: 22:  color_writetoaddr(0x00, 0x03);
  8793  003EFC  0E03               	movlw	3
  8794  003EFE  6E03               	movwf	color_writetoaddr@value^0,c
  8795  003F00  0E00               	movlw	0
  8796  003F02  EC0A  F020         	call	_color_writetoaddr
  8797  003F06                     
  8798                           ;color.c: 25:  color_writetoaddr(0x01, 0xD5);
  8799  003F06  0ED5               	movlw	213
  8800  003F08  6E03               	movwf	color_writetoaddr@value^0,c
  8801  003F0A  0E01               	movlw	1
  8802  003F0C  EC0A  F020         	call	_color_writetoaddr
  8803  003F10  0012               	return		;funcret
  8804  003F12                     __end_of_color_click_init:
  8805                           	callstack 0
  8806                           
  8807 ;; *************** function _color_writetoaddr *****************
  8808 ;; Defined at:
  8809 ;;		line 28 in file "color.c"
  8810 ;; Parameters:    Size  Location     Type
  8811 ;;  address         1    wreg     unsigned char 
  8812 ;;  value           1    2[COMRAM] unsigned char 
  8813 ;; Auto vars:     Size  Location     Type
  8814 ;;  address         1    3[COMRAM] unsigned char 
  8815 ;; Return value:  Size  Location     Type
  8816 ;;                  1    wreg      void 
  8817 ;; Registers used:
  8818 ;;		wreg, status,2, status,0, cstack
  8819 ;; Tracked objects:
  8820 ;;		On entry : 0/0
  8821 ;;		On exit  : 0/0
  8822 ;;		Unchanged: 0/0
  8823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8824 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8825 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8826 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8827 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8828 ;;Total ram usage:        2 bytes
  8829 ;; Hardware stack levels used: 1
  8830 ;; Hardware stack levels required when called: 2
  8831 ;; This function calls:
  8832 ;;		_I2C_2_Master_Start
  8833 ;;		_I2C_2_Master_Stop
  8834 ;;		_I2C_2_Master_Write
  8835 ;; This function is called by:
  8836 ;;		_color_click_init
  8837 ;; This function uses a non-reentrant model
  8838 ;;
  8839                           
  8840                           	psect	text45
  8841  004014                     __ptext45:
  8842                           	callstack 0
  8843  004014                     _color_writetoaddr:
  8844                           	callstack 27
  8845                           
  8846                           ;incstack = 0
  8847                           ;color_writetoaddr@address stored from wreg
  8848  004014  6E04               	movwf	color_writetoaddr@address^0,c
  8849  004016                     
  8850                           ;color.c: 29:     I2C_2_Master_Start();
  8851  004016  EC4B  F020         	call	_I2C_2_Master_Start	;wreg free
  8852                           
  8853                           ;color.c: 30:     I2C_2_Master_Write(0x52 | 0x00);
  8854  00401A  0E52               	movlw	82
  8855  00401C  EC35  F020         	call	_I2C_2_Master_Write
  8856                           
  8857                           ;color.c: 31:     I2C_2_Master_Write(0x80 | address);
  8858  004020  5004               	movf	color_writetoaddr@address^0,w,c
  8859  004022  0980               	iorlw	128
  8860  004024  EC35  F020         	call	_I2C_2_Master_Write
  8861                           
  8862                           ;color.c: 32:     I2C_2_Master_Write(value);
  8863  004028  5003               	movf	color_writetoaddr@value^0,w,c
  8864  00402A  EC35  F020         	call	_I2C_2_Master_Write
  8865                           
  8866                           ;color.c: 33:     I2C_2_Master_Stop();
  8867  00402E  EC46  F020         	call	_I2C_2_Master_Stop	;wreg free
  8868  004032  0012               	return		;funcret
  8869  004034                     __end_of_color_writetoaddr:
  8870                           	callstack 0
  8871                           
  8872 ;; *************** function _I2C_2_Master_Write *****************
  8873 ;; Defined at:
  8874 ;;		line 45 in file "i2c.c"
  8875 ;; Parameters:    Size  Location     Type
  8876 ;;  data_byte       1    wreg     unsigned char 
  8877 ;; Auto vars:     Size  Location     Type
  8878 ;;  data_byte       1    1[COMRAM] unsigned char 
  8879 ;; Return value:  Size  Location     Type
  8880 ;;                  1    wreg      void 
  8881 ;; Registers used:
  8882 ;;		wreg, status,2, status,0, cstack
  8883 ;; Tracked objects:
  8884 ;;		On entry : 0/0
  8885 ;;		On exit  : 0/0
  8886 ;;		Unchanged: 0/0
  8887 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8888 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8889 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8890 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8891 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8892 ;;Total ram usage:        1 bytes
  8893 ;; Hardware stack levels used: 1
  8894 ;; Hardware stack levels required when called: 1
  8895 ;; This function calls:
  8896 ;;		_I2C_2_Master_Idle
  8897 ;; This function is called by:
  8898 ;;		_color_writetoaddr
  8899 ;;		_color_read_Red
  8900 ;;		_color_read_Blue
  8901 ;;		_color_read_Green
  8902 ;;		_color_read_Clear
  8903 ;; This function uses a non-reentrant model
  8904 ;;
  8905                           
  8906                           	psect	text46
  8907  00406A                     __ptext46:
  8908                           	callstack 0
  8909  00406A                     _I2C_2_Master_Write:
  8910                           	callstack 27
  8911                           
  8912                           ;incstack = 0
  8913                           ;I2C_2_Master_Write@data_byte stored from wreg
  8914  00406A  6E02               	movwf	I2C_2_Master_Write@data_byte^0,c
  8915  00406C                     
  8916                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  8917  00406C  ECB6  F01F         	call	_I2C_2_Master_Idle	;wreg free
  8918  004070                     
  8919                           ;i2c.c: 48:   SSP2BUF = data_byte;
  8920  004070  C002  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  8921  004074  0012               	return		;funcret
  8922  004076                     __end_of_I2C_2_Master_Write:
  8923                           	callstack 0
  8924                           
  8925 ;; *************** function _I2C_2_Master_Stop *****************
  8926 ;; Defined at:
  8927 ;;		line 39 in file "i2c.c"
  8928 ;; Parameters:    Size  Location     Type
  8929 ;;		None
  8930 ;; Auto vars:     Size  Location     Type
  8931 ;;		None
  8932 ;; Return value:  Size  Location     Type
  8933 ;;                  1    wreg      void 
  8934 ;; Registers used:
  8935 ;;		wreg, status,2, status,0, cstack
  8936 ;; Tracked objects:
  8937 ;;		On entry : 0/0
  8938 ;;		On exit  : 0/0
  8939 ;;		Unchanged: 0/0
  8940 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8941 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8942 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8943 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8944 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8945 ;;Total ram usage:        0 bytes
  8946 ;; Hardware stack levels used: 1
  8947 ;; Hardware stack levels required when called: 1
  8948 ;; This function calls:
  8949 ;;		_I2C_2_Master_Idle
  8950 ;; This function is called by:
  8951 ;;		_color_writetoaddr
  8952 ;;		_color_read_Red
  8953 ;;		_color_read_Blue
  8954 ;;		_color_read_Green
  8955 ;;		_color_read_Clear
  8956 ;; This function uses a non-reentrant model
  8957 ;;
  8958                           
  8959                           	psect	text47
  8960  00408C                     __ptext47:
  8961                           	callstack 0
  8962  00408C                     _I2C_2_Master_Stop:
  8963                           	callstack 27
  8964  00408C                     
  8965                           ;i2c.c: 41:   I2C_2_Master_Idle();
  8966  00408C  ECB6  F01F         	call	_I2C_2_Master_Idle	;wreg free
  8967  004090                     
  8968                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  8969  004090  010E               	movlb	14	; () banked
  8970  004092  85DA               	bsf	218,2,b	;volatile
  8971  004094                     
  8972                           ; BSR set to: 14
  8973  004094  0012               	return		;funcret
  8974  004096                     __end_of_I2C_2_Master_Stop:
  8975                           	callstack 0
  8976                           
  8977 ;; *************** function _I2C_2_Master_Start *****************
  8978 ;; Defined at:
  8979 ;;		line 27 in file "i2c.c"
  8980 ;; Parameters:    Size  Location     Type
  8981 ;;		None
  8982 ;; Auto vars:     Size  Location     Type
  8983 ;;		None
  8984 ;; Return value:  Size  Location     Type
  8985 ;;                  1    wreg      void 
  8986 ;; Registers used:
  8987 ;;		wreg, status,2, status,0, cstack
  8988 ;; Tracked objects:
  8989 ;;		On entry : 0/0
  8990 ;;		On exit  : 0/0
  8991 ;;		Unchanged: 0/0
  8992 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8993 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8994 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8995 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8996 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8997 ;;Total ram usage:        0 bytes
  8998 ;; Hardware stack levels used: 1
  8999 ;; Hardware stack levels required when called: 1
  9000 ;; This function calls:
  9001 ;;		_I2C_2_Master_Idle
  9002 ;; This function is called by:
  9003 ;;		_color_writetoaddr
  9004 ;;		_color_read_Red
  9005 ;;		_color_read_Blue
  9006 ;;		_color_read_Green
  9007 ;;		_color_read_Clear
  9008 ;; This function uses a non-reentrant model
  9009 ;;
  9010                           
  9011                           	psect	text48
  9012  004096                     __ptext48:
  9013                           	callstack 0
  9014  004096                     _I2C_2_Master_Start:
  9015                           	callstack 27
  9016  004096                     
  9017                           ;i2c.c: 29:   I2C_2_Master_Idle();
  9018  004096  ECB6  F01F         	call	_I2C_2_Master_Idle	;wreg free
  9019  00409A                     
  9020                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  9021  00409A  010E               	movlb	14	; () banked
  9022  00409C  81DA               	bsf	218,0,b	;volatile
  9023  00409E                     
  9024                           ; BSR set to: 14
  9025  00409E  0012               	return		;funcret
  9026  0040A0                     __end_of_I2C_2_Master_Start:
  9027                           	callstack 0
  9028                           
  9029 ;; *************** function _I2C_2_Master_Idle *****************
  9030 ;; Defined at:
  9031 ;;		line 22 in file "i2c.c"
  9032 ;; Parameters:    Size  Location     Type
  9033 ;;		None
  9034 ;; Auto vars:     Size  Location     Type
  9035 ;;		None
  9036 ;; Return value:  Size  Location     Type
  9037 ;;                  1    wreg      void 
  9038 ;; Registers used:
  9039 ;;		wreg, status,2, status,0
  9040 ;; Tracked objects:
  9041 ;;		On entry : 0/0
  9042 ;;		On exit  : 0/0
  9043 ;;		Unchanged: 0/0
  9044 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9045 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9046 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9047 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9048 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9049 ;;Total ram usage:        1 bytes
  9050 ;; Hardware stack levels used: 1
  9051 ;; This function calls:
  9052 ;;		Nothing
  9053 ;; This function is called by:
  9054 ;;		_I2C_2_Master_Start
  9055 ;;		_I2C_2_Master_RepStart
  9056 ;;		_I2C_2_Master_Stop
  9057 ;;		_I2C_2_Master_Write
  9058 ;;		_I2C_2_Master_Read
  9059 ;; This function uses a non-reentrant model
  9060 ;;
  9061                           
  9062                           	psect	text49
  9063  003F6C                     __ptext49:
  9064                           	callstack 0
  9065  003F6C                     _I2C_2_Master_Idle:
  9066                           	callstack 27
  9067  003F6C                     l172:
  9068  003F6C  010E               	movlb	14	; () banked
  9069  003F6E  B5D8               	btfsc	216,2,b	;volatile
  9070  003F70  EFBC  F01F         	goto	u2531
  9071  003F74  EFBE  F01F         	goto	u2530
  9072  003F78                     u2531:
  9073  003F78  EFB6  F01F         	goto	l172
  9074  003F7C                     u2530:
  9075  003F7C                     
  9076                           ; BSR set to: 14
  9077  003F7C  CEDA F001          	movff	3802,??_I2C_2_Master_Idle	;volatile
  9078  003F80  0E1F               	movlw	31
  9079  003F82  1601               	andwf	??_I2C_2_Master_Idle^0,f,c
  9080  003F84  A4D8               	btfss	status,2,c
  9081  003F86  EFC7  F01F         	goto	u2541
  9082  003F8A  EFC9  F01F         	goto	u2540
  9083  003F8E                     u2541:
  9084  003F8E  EFB6  F01F         	goto	l172
  9085  003F92                     u2540:
  9086  003F92                     
  9087                           ; BSR set to: 14
  9088  003F92  0012               	return		;funcret
  9089  003F94                     __end_of_I2C_2_Master_Idle:
  9090                           	callstack 0
  9091                           
  9092 ;; *************** function _I2C_2_Master_Init *****************
  9093 ;; Defined at:
  9094 ;;		line 4 in file "i2c.c"
  9095 ;; Parameters:    Size  Location     Type
  9096 ;;		None
  9097 ;; Auto vars:     Size  Location     Type
  9098 ;;		None
  9099 ;; Return value:  Size  Location     Type
  9100 ;;                  1    wreg      void 
  9101 ;; Registers used:
  9102 ;;		wreg, status,2
  9103 ;; Tracked objects:
  9104 ;;		On entry : 0/0
  9105 ;;		On exit  : 0/0
  9106 ;;		Unchanged: 0/0
  9107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9108 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9109 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9110 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9111 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9112 ;;Total ram usage:        0 bytes
  9113 ;; Hardware stack levels used: 1
  9114 ;; This function calls:
  9115 ;;		Nothing
  9116 ;; This function is called by:
  9117 ;;		_color_click_init
  9118 ;;		_main
  9119 ;; This function uses a non-reentrant model
  9120 ;;
  9121                           
  9122                           	psect	text50
  9123  003F42                     __ptext50:
  9124                           	callstack 0
  9125  003F42                     _I2C_2_Master_Init:
  9126                           	callstack 29
  9127  003F42                     
  9128                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  9129  003F42  010E               	movlb	14	; () banked
  9130  003F44  51D9               	movf	217,w,b	;volatile
  9131  003F46  0BF0               	andlw	-16
  9132  003F48  0908               	iorlw	8
  9133  003F4A  6FD9               	movwf	217,b	;volatile
  9134  003F4C                     
  9135                           ; BSR set to: 14
  9136                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  9137  003F4C  8BD9               	bsf	217,5,b	;volatile
  9138                           
  9139                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  9140  003F4E  0E9F               	movlw	159
  9141  003F50  6FD6               	movwf	214,b	;volatile
  9142  003F52                     
  9143                           ; BSR set to: 14
  9144                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  9145  003F52  8A84               	bsf	132,5,c	;volatile
  9146  003F54                     
  9147                           ; BSR set to: 14
  9148                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  9149  003F54  8C84               	bsf	132,6,c	;volatile
  9150  003F56                     
  9151                           ; BSR set to: 14
  9152                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  9153  003F56  9BA7               	bcf	167,5,b	;volatile
  9154  003F58                     
  9155                           ; BSR set to: 14
  9156                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  9157  003F58  9DA7               	bcf	167,6,b	;volatile
  9158                           
  9159                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  9160  003F5A  0E1D               	movlw	29
  9161  003F5C  6F1D               	movwf	29,b	;volatile
  9162                           
  9163                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  9164  003F5E  0E1E               	movlw	30
  9165  003F60  6F1C               	movwf	28,b	;volatile
  9166                           
  9167                           ;i2c.c: 18:   RD5PPS=0x1C;
  9168  003F62  0E1C               	movlw	28
  9169  003F64  6F6F               	movwf	111,b	;volatile
  9170                           
  9171                           ;i2c.c: 19:   RD6PPS=0x1B;
  9172  003F66  0E1B               	movlw	27
  9173  003F68  6F70               	movwf	112,b	;volatile
  9174  003F6A                     
  9175                           ; BSR set to: 14
  9176  003F6A  0012               	return		;funcret
  9177  003F6C                     __end_of_I2C_2_Master_Init:
  9178                           	callstack 0
  9179                           
  9180 ;; *************** function _calibration_init *****************
  9181 ;; Defined at:
  9182 ;;		line 20 in file "movement.c"
  9183 ;; Parameters:    Size  Location     Type
  9184 ;;		None
  9185 ;; Auto vars:     Size  Location     Type
  9186 ;;		None
  9187 ;; Return value:  Size  Location     Type
  9188 ;;                  1    wreg      void 
  9189 ;; Registers used:
  9190 ;;		None
  9191 ;; Tracked objects:
  9192 ;;		On entry : 0/0
  9193 ;;		On exit  : 0/0
  9194 ;;		Unchanged: 0/0
  9195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9196 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9197 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9198 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9199 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9200 ;;Total ram usage:        0 bytes
  9201 ;; Hardware stack levels used: 1
  9202 ;; This function calls:
  9203 ;;		Nothing
  9204 ;; This function is called by:
  9205 ;;		_main
  9206 ;; This function uses a non-reentrant model
  9207 ;;
  9208                           
  9209                           	psect	text51
  9210  004076                     __ptext51:
  9211                           	callstack 0
  9212  004076                     _calibration_init:
  9213                           	callstack 30
  9214  004076  8486               	bsf	134,2,c	;volatile
  9215                           
  9216                           ;movement.c: 22:     ANSELFbits.ANSELF2=0;
  9217  004078  010E               	movlb	14	; () banked
  9218  00407A  95B4               	bcf	180,2,b	;volatile
  9219                           
  9220                           ;movement.c: 23:     TRISFbits.TRISF3=1;
  9221  00407C  8686               	bsf	134,3,c	;volatile
  9222                           
  9223                           ;movement.c: 24:     ANSELFbits.ANSELF3=0;
  9224  00407E  97B4               	bcf	180,3,b	;volatile
  9225  004080                     
  9226                           ; BSR set to: 14
  9227  004080  0012               	return		;funcret
  9228  004082                     __end_of_calibration_init:
  9229                           	callstack 0
  9230                           
  9231                           	psect	rparam
  9232  0000                     
  9233                           	psect	idloc
  9234                           
  9235                           ;Config register IDLOC0 @ 0x200000
  9236                           ;	unspecified, using default values
  9237  200000                     	org	2097152
  9238  200000  0FFF               	dw	4095
  9239                           
  9240                           ;Config register IDLOC1 @ 0x200002
  9241                           ;	unspecified, using default values
  9242  200002                     	org	2097154
  9243  200002  0FFF               	dw	4095
  9244                           
  9245                           ;Config register IDLOC2 @ 0x200004
  9246                           ;	unspecified, using default values
  9247  200004                     	org	2097156
  9248  200004  0FFF               	dw	4095
  9249                           
  9250                           ;Config register IDLOC3 @ 0x200006
  9251                           ;	unspecified, using default values
  9252  200006                     	org	2097158
  9253  200006  0FFF               	dw	4095
  9254                           
  9255                           ;Config register IDLOC4 @ 0x200008
  9256                           ;	unspecified, using default values
  9257  200008                     	org	2097160
  9258  200008  0FFF               	dw	4095
  9259                           
  9260                           ;Config register IDLOC5 @ 0x20000A
  9261                           ;	unspecified, using default values
  9262  20000A                     	org	2097162
  9263  20000A  0FFF               	dw	4095
  9264                           
  9265                           ;Config register IDLOC6 @ 0x20000C
  9266                           ;	unspecified, using default values
  9267  20000C                     	org	2097164
  9268  20000C  0FFF               	dw	4095
  9269                           
  9270                           ;Config register IDLOC7 @ 0x20000E
  9271                           ;	unspecified, using default values
  9272  20000E                     	org	2097166
  9273  20000E  0FFF               	dw	4095
  9274                           
  9275                           	psect	config
  9276                           
  9277                           ;Config register CONFIG1L @ 0x300000
  9278                           ;	External Oscillator mode Selection bits
  9279                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  9280                           ;	Power-up default value for COSC bits
  9281                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  9282  300000                     	org	3145728
  9283  300000  AA                 	db	170
  9284                           
  9285                           ;Config register CONFIG1H @ 0x300001
  9286                           ;	unspecified, using default values
  9287                           ;	Clock Out Enable bit
  9288                           ;	CLKOUTEN = 0x1, unprogrammed default
  9289                           ;	Clock Switch Enable bit
  9290                           ;	CSWEN = 0x1, unprogrammed default
  9291                           ;	Fail-Safe Clock Monitor Enable bit
  9292                           ;	FCMEN = 0x1, unprogrammed default
  9293  300001                     	org	3145729
  9294  300001  FF                 	db	255
  9295                           
  9296                           ;Config register CONFIG2L @ 0x300002
  9297                           ;	unspecified, using default values
  9298                           ;	Master Clear Enable bit
  9299                           ;	MCLRE = 0x1, unprogrammed default
  9300                           ;	Power-up Timer Enable bit
  9301                           ;	PWRTE = 0x1, unprogrammed default
  9302                           ;	Low-power BOR enable bit
  9303                           ;	LPBOREN = 0x1, unprogrammed default
  9304                           ;	Brown-out Reset Enable bits
  9305                           ;	BOREN = 0x3, unprogrammed default
  9306  300002                     	org	3145730
  9307  300002  FF                 	db	255
  9308                           
  9309                           ;Config register CONFIG2H @ 0x300003
  9310                           ;	unspecified, using default values
  9311                           ;	Brown Out Reset Voltage selection bits
  9312                           ;	BORV = 0x3, unprogrammed default
  9313                           ;	ZCD Disable bit
  9314                           ;	ZCD = 0x1, unprogrammed default
  9315                           ;	PPSLOCK bit One-Way Set Enable bit
  9316                           ;	PPS1WAY = 0x1, unprogrammed default
  9317                           ;	Stack Full/Underflow Reset Enable bit
  9318                           ;	STVREN = 0x1, unprogrammed default
  9319                           ;	Debugger Enable bit
  9320                           ;	DEBUG = 0x1, unprogrammed default
  9321                           ;	Extended Instruction Set Enable bit
  9322                           ;	XINST = 0x1, unprogrammed default
  9323  300003                     	org	3145731
  9324  300003  FF                 	db	255
  9325                           
  9326                           ;Config register CONFIG3L @ 0x300004
  9327                           ;	WDT Period Select bits
  9328                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  9329                           ;	WDT operating mode
  9330                           ;	WDTE = OFF, WDT Disabled
  9331  300004                     	org	3145732
  9332  300004  9F                 	db	159
  9333                           
  9334                           ;Config register CONFIG3H @ 0x300005
  9335                           ;	unspecified, using default values
  9336                           ;	WDT Window Select bits
  9337                           ;	WDTCWS = 0x7, unprogrammed default
  9338                           ;	WDT input clock selector
  9339                           ;	WDTCCS = 0x7, unprogrammed default
  9340  300005                     	org	3145733
  9341  300005  FF                 	db	255
  9342                           
  9343                           ;Config register CONFIG4L @ 0x300006
  9344                           ;	unspecified, using default values
  9345                           ;	Write Protection Block 0
  9346                           ;	WRT0 = 0x1, unprogrammed default
  9347                           ;	Write Protection Block 1
  9348                           ;	WRT1 = 0x1, unprogrammed default
  9349                           ;	Write Protection Block 2
  9350                           ;	WRT2 = 0x1, unprogrammed default
  9351                           ;	Write Protection Block 3
  9352                           ;	WRT3 = 0x1, unprogrammed default
  9353                           ;	Write Protection Block 3
  9354                           ;	WRT4 = 0x1, unprogrammed default
  9355                           ;	Write Protection Block 3
  9356                           ;	WRT5 = 0x1, unprogrammed default
  9357                           ;	Write Protection Block 3
  9358                           ;	WRT6 = 0x1, unprogrammed default
  9359                           ;	Write Protection Block 3
  9360                           ;	WRT7 = 0x1, unprogrammed default
  9361  300006                     	org	3145734
  9362  300006  FF                 	db	255
  9363                           
  9364                           ;Config register CONFIG4H @ 0x300007
  9365                           ;	unspecified, using default values
  9366                           ;	Configuration Register Write Protection bit
  9367                           ;	WRTC = 0x1, unprogrammed default
  9368                           ;	Boot Block Write Protection bit
  9369                           ;	WRTB = 0x1, unprogrammed default
  9370                           ;	Data EEPROM Write Protection bit
  9371                           ;	WRTD = 0x1, unprogrammed default
  9372                           ;	Scanner Enable bit
  9373                           ;	SCANE = 0x1, unprogrammed default
  9374                           ;	Low Voltage Programming Enable bit
  9375                           ;	LVP = 0x1, unprogrammed default
  9376  300007                     	org	3145735
  9377  300007  FF                 	db	255
  9378                           
  9379                           ;Config register CONFIG5L @ 0x300008
  9380                           ;	unspecified, using default values
  9381                           ;	UserNVM Program Memory Code Protection bit
  9382                           ;	CP = 0x1, unprogrammed default
  9383                           ;	DataNVM Memory Code Protection bit
  9384                           ;	CPD = 0x1, unprogrammed default
  9385  300008                     	org	3145736
  9386  300008  FF                 	db	255
  9387                           
  9388                           ;Config register CONFIG5H @ 0x300009
  9389                           ;	unspecified, using default values
  9390  300009                     	org	3145737
  9391  300009  FF                 	db	255
  9392                           
  9393                           ;Config register CONFIG6L @ 0x30000A
  9394                           ;	unspecified, using default values
  9395                           ;	Table Read Protection Block 0
  9396                           ;	EBTR0 = 0x1, unprogrammed default
  9397                           ;	Table Read Protection Block 1
  9398                           ;	EBTR1 = 0x1, unprogrammed default
  9399                           ;	Table Read Protection Block 2
  9400                           ;	EBTR2 = 0x1, unprogrammed default
  9401                           ;	Table Read Protection Block 3
  9402                           ;	EBTR3 = 0x1, unprogrammed default
  9403                           ;	Table Read Protection Block 4
  9404                           ;	EBTR4 = 0x1, unprogrammed default
  9405                           ;	Table Read Protection Block 5
  9406                           ;	EBTR5 = 0x1, unprogrammed default
  9407                           ;	Table Read Protection Block 6
  9408                           ;	EBTR6 = 0x1, unprogrammed default
  9409                           ;	Table Read Protection Block 7
  9410                           ;	EBTR7 = 0x1, unprogrammed default
  9411  30000A                     	org	3145738
  9412  30000A  FF                 	db	255
  9413                           
  9414                           ;Config register CONFIG6H @ 0x30000B
  9415                           ;	unspecified, using default values
  9416                           ;	Boot Block Table Read Protection bit
  9417                           ;	EBTRB = 0x1, unprogrammed default
  9418  30000B                     	org	3145739
  9419  30000B  FF                 	db	255
  9420                           tosu	equ	0xFFF
  9421                           tosh	equ	0xFFE
  9422                           tosl	equ	0xFFD
  9423                           stkptr	equ	0xFFC
  9424                           pclatu	equ	0xFFB
  9425                           pclath	equ	0xFFA
  9426                           pcl	equ	0xFF9
  9427                           tblptru	equ	0xFF8
  9428                           tblptrh	equ	0xFF7
  9429                           tblptrl	equ	0xFF6
  9430                           tablat	equ	0xFF5
  9431                           prodh	equ	0xFF4
  9432                           prodl	equ	0xFF3
  9433                           indf0	equ	0xFEF
  9434                           postinc0	equ	0xFEE
  9435                           postdec0	equ	0xFED
  9436                           preinc0	equ	0xFEC
  9437                           plusw0	equ	0xFEB
  9438                           fsr0h	equ	0xFEA
  9439                           fsr0l	equ	0xFE9
  9440                           wreg	equ	0xFE8
  9441                           indf1	equ	0xFE7
  9442                           postinc1	equ	0xFE6
  9443                           postdec1	equ	0xFE5
  9444                           preinc1	equ	0xFE4
  9445                           plusw1	equ	0xFE3
  9446                           fsr1h	equ	0xFE2
  9447                           fsr1l	equ	0xFE1
  9448                           bsr	equ	0xFE0
  9449                           indf2	equ	0xFDF
  9450                           postinc2	equ	0xFDE
  9451                           postdec2	equ	0xFDD
  9452                           preinc2	equ	0xFDC
  9453                           plusw2	equ	0xFDB
  9454                           fsr2h	equ	0xFDA
  9455                           fsr2l	equ	0xFD9
  9456                           status	equ	0xFD8

Data Sizes:
    Strings     77
    Constant    4
    Data        1
    BSS         149
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     95      95
    BANK0           160    134     151
    BANK1           256     29     162
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_14(CODE[5]), STR_13(CODE[6]), STR_2(CODE[12]), STR_1(CODE[14]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 14
		 -> STR_14(CODE[5]), STR_13(CODE[6]), STR_2(CODE[12]), STR_1(CODE[14]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_14(CODE[5]), STR_13(CODE[6]), STR_2(CODE[12]), STR_1(CODE[14]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 100
		 -> voltage_display@buf(COMRAM[80]), color_predict@buf(BANK0[100]), check_color_reading@buf(BANK0[100]), color_display@buf(BANK0[100]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S2251$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S2251$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    motorR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    motorR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhhllll[1]), PWM6DCH(BITBIGSFRhhhllll[1]), 

    motorL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    motorL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhhllll[1]), PWM6DCH(BITBIGSFRhhhllll[1]), 

    sendStringSerial4@string	PTR unsigned char  size(2) Largest target is 100
		 -> voltage_display@buf(COMRAM[80]), color_predict@buf(BANK0[100]), check_color_reading@buf(BANK0[100]), color_display@buf(BANK0[100]), 

    voltage_display@m.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    voltage_display@m.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhhllll[1]), PWM6DCH(BITBIGSFRhhhllll[1]), 

    voltage_read@m.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    voltage_read@m.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhhllll[1]), PWM6DCH(BITBIGSFRhhhllll[1]), 

    fullSpeedAhead@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    fullSpeedAhead@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhhllll[1]), PWM6DCH(BITBIGSFRhhhllll[1]), 

    fullSpeedAhead@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    fullSpeedAhead@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhhllll[1]), PWM6DCH(BITBIGSFRhhhllll[1]), 

    turnRight@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turnRight@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhhllll[1]), PWM6DCH(BITBIGSFRhhhllll[1]), 

    turnRight@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turnRight@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhhllll[1]), PWM6DCH(BITBIGSFRhhhllll[1]), 

    turnLeft@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turnLeft@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhhllll[1]), PWM6DCH(BITBIGSFRhhhllll[1]), 

    turnLeft@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turnLeft@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhhllll[1]), PWM6DCH(BITBIGSFRhhhllll[1]), 

    stop@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    stop@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhhllll[1]), PWM6DCH(BITBIGSFRhhhllll[1]), 

    stop@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    stop@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhhllll[1]), PWM6DCH(BITBIGSFRhhhllll[1]), 

    setMotorPWM@m.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    setMotorPWM@m.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhhllll[1]), PWM6DCH(BITBIGSFRhhhllll[1]), 

    initDCmotors_parameter@motorR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    initDCmotors_parameter@motorR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhhllll[1]), PWM6DCH(BITBIGSFRhhhllll[1]), 

    initDCmotors_parameter@motorR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    initDCmotors_parameter@motorL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    initDCmotors_parameter@motorL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhhllll[1]), PWM6DCH(BITBIGSFRhhhllll[1]), 

    initDCmotors_parameter@motorL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    motorR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    motorR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhhllll[1]), PWM6DCH(BITBIGSFRhhhllll[1]), 

    S224DC_motor$dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    motorL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    S224DC_motor$dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhhllll[1]), PWM6DCH(BITBIGSFRhhhllll[1]), 

    motorL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhhllll[1]), PWM6DCH(BITBIGSFRhhhllll[1]), 

    detect_color@w	PTR struct white_card size(2) Largest target is 18
		 -> main@white(BANK1[18]), 

    detect_color@m	PTR struct color_rgb size(2) Largest target is 8
		 -> main@rgb(BANK1[8]), 

    color_display@m	PTR struct color_rgb size(2) Largest target is 8
		 -> main@rgb(BANK1[8]), 

    color_data_collection@m	PTR struct color_rgb size(2) Largest target is 8
		 -> main@rgb(BANK1[8]), 

    read_color@m	PTR struct color_rgb size(2) Largest target is 8
		 -> main@rgb(BANK1[8]), 


Critical Paths under _main in COMRAM

    _detect_color->_compare
    _lroundf->___fltol
    _roundf->___flmul
    ___flsub->___fladd
    ___flmul->___fldiv
    ___fltol->_roundf
    ___fldiv->___xxtofl
    _color_data_collection->_color_display
    _read_color->_color_read_Blue
    _read_color->_color_read_Clear
    _read_color->_color_read_Green
    _read_color->_color_read_Red
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Clear->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _sendStringSerial4->_sendCharSerial4
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle

Critical Paths under _main in BANK0

    _main->_color_data_collection
    _detect_color->_compare
    _lroundf->___fltol
    _compare->_lroundf
    _color_data_collection->_color_predict
    _color_predict->_sprintf
    _color_display->_sprintf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                47    47      0   51109
                                              0 BANK1     29    29      0
                  _I2C_2_Master_Init
                   _calibration_init
                   _color_click_init
              _color_data_collection
                      _color_predict
                       _detect_color
                    _initDCmotorsPWM
             _initDCmotors_parameter
                         _initUSART4
                         _read_color
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initDCmotors_parameter                               4     0      4     416
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2      76
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _detect_color                                        31    27      4   24482
                                             16 BANK0     31    27      4
                              _LED_B
                              _LED_G
                              _LED_R
                            ___fldiv
                            ___flmul
                           ___xxtofl
                            _compare
                            _lroundf
                         _read_color
 ---------------------------------------------------------------------------------
 (2) _lroundf                                              4     0      4   12618
                                              6 BANK0      4     0      4
                            ___fldiv (ARG)
                            ___fltol
                           ___xxtofl (ARG)
                             _roundf
 ---------------------------------------------------------------------------------
 (3) _roundf                                              26    22      4   11379
                                             64 COMRAM    26    22      4
                            ___fladd
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
 ---------------------------------------------------------------------------------
 (4) ___flsub                                              8     0      8    3649
                                             16 COMRAM     8     0      8
                            ___fladd
 ---------------------------------------------------------------------------------
 (5) ___fladd                                             16     8      8    3326
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (4) ___flneg                                              4     0      4     197
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (4) ___flmul                                             25    17      8    3082
                                             39 COMRAM    25    17      8
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___flge                                              12     4      8     486
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             10     6      4     305
                                             90 COMRAM     4     0      4
                                              0 BANK0      6     6      0
                             _roundf (ARG)
 ---------------------------------------------------------------------------------
 (2) _compare                                              7     1      6    2164
                                             94 COMRAM     1     1      0
                                             10 BANK0      6     0      6
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
                            _lroundf (ARG)
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4    1660
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             25    17      8    2585
                                             14 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _color_data_collection                               12    10      2   16898
                                             89 COMRAM     4     2      2
                                            126 BANK0      8     8      0
                              _LED_B
                              _LED_C
                              _LED_G
                              _LED_R
                      _color_display
                      _color_predict
                         _read_color
 ---------------------------------------------------------------------------------
 (1) _read_color                                           2     0      2    1148
                                             11 COMRAM     2     0      2
                    _color_read_Blue
                   _color_read_Clear
                   _color_read_Green
                     _color_read_Red
 ---------------------------------------------------------------------------------
 (2) _color_read_Red                                       7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Green                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Clear                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Blue                                      7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Read                                    3     3      0      45
                                              1 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (1) _color_predict                                      102   102      0    7585
                                             25 BANK0    101   101      0
                  _sendStringSerial4
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _color_display                                      102   100      2    7725
                                             87 COMRAM     2     0      2
                                             25 BANK0    100   100      0
                  _sendStringSerial4
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             27    15     12    6912
                                              0 BANK0     25    13     12
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6    6105
                                             79 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           42    36      6    5751
                                             63 COMRAM    16    10      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                36    26     10    4358
                                             27 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    2709
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1235
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                9     5      4     834
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (2) _sendStringSerial4                                    2     0      2     371
                                              1 COMRAM     2     0      2
                    _sendCharSerial4
 ---------------------------------------------------------------------------------
 (3) _sendCharSerial4                                      1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _LED_R                                                2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _LED_G                                                2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _LED_C                                                2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _LED_B                                                2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     294
                                              4 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     294
                                              2 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Write                                   1     1      0      22
                                              1 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Idle                                    1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _calibration_init                                     0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_2_Master_Init
   _calibration_init
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
   _color_data_collection
     _LED_B
     _LED_C
     _LED_G
     _LED_R
     _color_display
       _sendStringSerial4
         _sendCharSerial4
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                 _strlen
             _fputc
     _color_predict
       _sendStringSerial4
       _sprintf
     _read_color
       _color_read_Blue
         _I2C_2_Master_Read
           _I2C_2_Master_Idle
         _I2C_2_Master_RepStart
           _I2C_2_Master_Idle
         _I2C_2_Master_Start
         _I2C_2_Master_Stop
         _I2C_2_Master_Write
       _color_read_Clear
         _I2C_2_Master_Read
         _I2C_2_Master_RepStart
         _I2C_2_Master_Start
         _I2C_2_Master_Stop
         _I2C_2_Master_Write
       _color_read_Green
         _I2C_2_Master_Read
         _I2C_2_Master_RepStart
         _I2C_2_Master_Start
         _I2C_2_Master_Stop
         _I2C_2_Master_Write
       _color_read_Red
         _I2C_2_Master_Read
         _I2C_2_Master_RepStart
         _I2C_2_Master_Start
         _I2C_2_Master_Stop
         _I2C_2_Master_Write
   _color_predict
   _detect_color
     _LED_B
     _LED_G
     _LED_R
     ___fldiv
       ___xxtofl (ARG)
     ___flmul
       ___fldiv (ARG)
       ___xxtofl (ARG)
     ___xxtofl
     _compare
       ___fldiv (ARG)
       ___flmul (ARG)
       ___xxtofl (ARG)
       _lroundf (ARG)
         ___fldiv (ARG)
         ___fltol (ARG)
           _roundf (ARG)
             ___fladd
             ___flge
             ___flmul
             ___flneg
             ___flsub
               ___fladd
         ___xxtofl (ARG)
         _roundf (ARG)
     _lroundf
     _read_color
   _initDCmotorsPWM
   _initDCmotors_parameter
   _initUSART4
   _read_color

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      59        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     1D      A2       7       63.3%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     86      97       5       94.4%
BITBIGSFRllhhl      6E      0       0      44        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5F      5F       1      100.0%
BITBIGSFRhhhh       40      0       0      32        0.0%
BITBIGSFRlllllh     32      0       0      49        0.0%
BITBIGSFRlllllh     2A      0       0      53        0.0%
BITBIGSFRllllll     26      0       0      57        0.0%
BITBIGSFRllllhh     20      0       0      47        0.0%
BITBIGSFRhhhlh      17      0       0      33        0.0%
BITBIGSFRllhhhh     14      0       0      41        0.0%
BITBIGSFRhhhlll     11      0       0      35        0.0%
BITBIGSFRlllllh      F      0       0      55        0.0%
BITBIGSFRllllhl      C      0       0      48        0.0%
BITBIGSFRlllllh      9      0       0      54        0.0%
BITBIGSFRllhlll      8      0       0      45        0.0%
BITBIGSFRllhhhl      6      0       0      43        0.0%
BITBIGSFRllllll      6      0       0      56        0.0%
BITBIGSFRlllllh      6      0       0      52        0.0%
BITBIGSFRhhhlll      6      0       0      36        0.0%
BITBIGSFRlllllh      5      0       0      51        0.0%
BITBIGSFRllhhhh      3      0       0      42        0.0%
BITBIGSFRlllllh      3      0       0      50        0.0%
BITBIGSFRhlh         1      0       0      37        0.0%
BITBIGSFRhhhllh      1      0       0      34        0.0%
BITBIGSFRlhh         1      0       0      39        0.0%
BITBIGSFRlllh        1      0       0      46        0.0%
BITBIGSFRlhl         1      0       0      40        0.0%
BITBIGSFRhll         1      0       0      38        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     198      58        0.0%
DATA                 0      0     198       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.35 build 20211206165544 
Symbol Table                                                                                   Wed Mar 09 17:21:23 2022

                _color_read_Red 3B36                    ___fldiv@aexp 0027                    ___fldiv@bexp 0026  
                  ___fldiv@sign 001F                 _color_read_Blue 3C26                   _color_predict 3600  
                            l51 3F10                              l60 3C74                              l54 4032  
                            l63 3BD4                              l72 3FB2                              l81 3FD2  
                            l57 3B84                              l66 3C24                              l75 3FF2  
                            l92 3106                              l69 3AE2                              l78 4012  
                            l95 3A22                _color_read_Clear 3BD6                _color_read_Green 3B86  
                           l111 36DC                             l130 18EE                             l131 18F2  
                           l134 3E34                             l135 3E36                             l172 3F6C  
                           l181 408A                             l190 3D82                             l262 37AE  
                           l175 3F92                             l184 4094                             l169 3F6A  
                           l178 409E                             l370 4068                             l515 4080  
                           l187 4074                             l259 3D40                             l358 4050  
                           l367 4054                             l376 3F40                             l635 328E  
                           l648 33F2                             l818 34FA                             l791 35FE  
                           l786 35B8                             l795 3EA6                             _abs 3D84  
                           _pad 387A                             wreg 000FE8                    ___flmul@aexp 0039  
                  ___flmul@bexp 003A                    ___flmul@sign 0034                    ___flmul@temp 003F  
                  ___flmul@prod 003B                    ___fltol@exp1 0065                            l1103 2924  
                          l1105 2784                            l1114 27CA                            l1050 1AD0  
                          l1051 1A96                            ?_abs 0013                            l1204 3B34  
                          l1116 2842                            l1108 2748                            l1117 2830  
                          l1142 206E                            l1303 3CFE                            l1231 38C0  
                          l1135 1E78                            l1152 219E                            l1144 20E6  
                          l3001 3926                            l1145 20D4                            l1049 1AE2  
                          l1306 40A0                            l1234 3902                            l1242 29C6  
                          l1066 1BFC                            l1058 1DB2                            l1314 258A  
                          l3011 2946                            l1139 21DC                            l1075 1CCC  
                          l1091 3CBA                            l1236 393E                            l1244 29CE  
                          l1076 1CBA                            l3005 3D84                            l3021 29BA  
                          l3013 296E                            l3101 197A                            l1262 2C08  
                          l1190 2D54                            l3007 3D9E                            l1327 3EDC  
                          l3031 2A04                            l3023 29D6                            l3015 298E  
                          l1183 2CF8                            l3111 19BA                            l3103 1988  
                          l1280 3DBA                            l1176 2C60                            l3041 2AA2  
                          l3033 2A0E                            l3025 29E8                            l3017 299E  
                          l3009 2926                            l3201 1B96                            l3121 19F4  
                          l3113 19BC                            l3105 198A                            l1283 3DC2  
                          l3051 2B72                            l3035 2A14                            l3043 2B06  
                          l3027 29F6                            l3019 29A0                            l1275 3A7C  
                          l4011 3068                            l1179 2DBC                            l3211 1C12  
                          l3203 1BCA                            l3131 1A08                            l3123 19F8  
                          l3107 199A                            l3115 19C4                            l1276 3A84  
                          l3061 2BBC                            l3045 2B20                            l3053 2B82  
                          l3037 2A96                            l3029 29FC                            l3301 2F14  
                          l1269 2F70                            l4013 3080                            l4005 304C  
                          l3221 1C4E                            l3213 1C22                            l3205 1BCC  
                          l3141 1A1C                            l3133 1A0C                            l3125 19FC  
                          l3117 19D4                            l3109 19AA                            l1197 3DFC  
                          l4101 16C4                            l3071 3F6C                            l1295 3878  
                          l3063 2BC8                            l3055 2B94                            l3047 2B3E  
                          l3039 2A9C                            l3311 2F3A                            l4031 30DC  
                          l4023 30A8                            l4015 3086                            l4007 3050  
                          l3231 1C7A                            l3223 1C50                            l3207 1BDC  
                          l3151 1A30                            l3143 1A20                            l3135 1A10  
                          l3127 1A00                            l3119 19E6                            l4111 17D0  
                          l4103 16CE                            l3073 3F7C                            l3321 409A  
                          l3065 2BD0                            l3057 2BA4                            l3049 2B58  
                          l3313 2F5E                            l3305 2F20                            l4033 30E2  
                          l4025 30AC                            l4017 30A0                            l4009 305C  
                          l3401 1EE4                            l3241 1CB2                            l3225 1C5E  
                          l3217 1C36                            l3233 1C7C                            l3209 1BEC  
                          l3161 1A8E                            l3145 1A24                            l3137 1A14  
                          l3129 1A04                            l3153 1A34                            l3081 1910  
                          l4113 17FE                            l4105 16FC                            l4121 182C  
                          l4041 0E9A                            l4201 404A                            l4211 4076  
                          l3323 406C                            l3059 2BAA                            l3067 2BE0  
                          l3307 2F2E                            l3331 4082                            l4035 30FC  
                          l4027 30B8                            l3411 1F2E                            l3403 1EFC  
                          l3251 1D30                            l3227 1C66                            l3219 1C40  
                          l3235 1C8A                            l3171 1AC4                            l3163 1AA4  
                          l3155 1A38                            l3147 1A28                            l3139 1A18  
                          l3083 1920                            l3091 194A                            l3075 18F4  
                          l4131 18E8                            l4123 1858                            l4115 1808  
                          l4107 17BC                            l4051 100A                            l4043 0E9E  
                          l4203 404C                            l3325 4070                            l3341 3D58  
                          l3333 4086                            l4037 3102                            l4029 30C4  
                          l3501 3598                            l3421 1F84                            l3413 1F3E  
                          l3405 1F08                            l3261 1D76                            l3245 1CDC  
                          l3253 1D32                            l3237 1C8E                            l3229 1C6A  
                          l3181 1B14                            l3173 1ACE                            l3165 1AB0  
                          l3157 1A62                            l3149 1A2C                            l3093 195A  
                          l3085 1930                            l3077 1900                            l4125 1886  
                          l4117 1820                            l4109 17C6                            l4061 10F6  
                          l4053 101E                            l4045 0EAA                            l4205 404E  
                          l3319 4096                            l3327 408C                            l3351 4064  
                          l3343 3D7E                            l3335 3D44                            l3503 35A6  
                          l3431 2028                            l3423 1FA0                            l3415 1F4A  
                          l3407 1F14                            l3511 3E70                            l3271 1DA0  
                          l3263 1D84                            l3255 1D42                            l3247 1CE8  
                          l3239 1C9C                            l3191 1B50                            l3183 1B24  
                          l3175 1AF0                            l3167 1AB4                            l3159 1A7E  
                          l3095 1960                            l3087 1940                            l3079 190E  
                          l4127 188C                            l4119 1828                            l4071 127C  
                          l4063 1102                            l4055 10C6                            l4047 0F46  
                          l4039 0E54                            l3329 4090                            l3281 2DF0  
                          l3521 3A2C                            l3345 3D80                            l3337 3D48  
                          l3505 35F6                            l3441 207E                            l3433 2036  
                          l3425 1FAC                            l3417 1F5A                            l3409 1F22  
                          l3361 1DE0                            l3353 1DB4                            l3513 3E86  
                          l3273 1DA2                            l3265 1D8A                            l3257 1D52  
                          l3249 1CF6                            l3193 1B5E                            l3185 1B32  
                          l3177 1B00                            l3169 1AC2                            l3097 1972  
                          l3089 1942                            l4129 18BA                            l4081 1360  
                          l4073 1324                            l4065 11A4                            l4057 10DA  
                          l4049 0F62                            l4161 3D3E                            l4153 3D00  
                          l3291 2E96                            l3283 2E02                            l3523 3A3A  
                          l3339 3D50                            l3603 3486                            l3507 35FC  
                          l3443 208C                            l3435 2054                            l3427 1FC8  
                          l3419 1F74                            l3371 1E1C                            l3363 1DF0  
                          l3355 1DC0                            l3515 3E96                            l3267 1D8C  
                          l3259 1D72                            l3195 1B60                            l3187 1B40  
                          l3099 1974                            l4091 158A                            l4083 1402  
                          l4075 1338                            l4067 11B8                            l4059 10F2  
                          l4155 3D10                            l4171 3722                            l4163 36DE  
                          l3349 4054                            l3285 2E06                            l3277 2DBE  
                          l3525 3A60                            l3701 3626                            l3533 3C26  
                          l3541 3BCC                            l3621 34EA                            l3613 34AE  
                          l3605 3490                            l3453 20F6                            l3461 213E  
                          l3445 2090                            l3437 205E                            l3429 1FF2  
                          l3381 1E52                            l3373 1E22                            l3365 1E00  
                          l3357 1DCE                            l3269 1D92                            l3197 1B6A  
                          l3189 1B4C                            l4093 15A6                            l4085 141E  
                          l4077 1350                            l4069 1260                            l4157 3D28  
                          l4173 3732                            l4165 36EA                            l4341 3948  
                          l2911 313E                            l2903 3108                            l3295 2ECE  
                          l3287 2E2A                            l3279 2DE2                            l3519 3A24  
                          l3551 3AE4                            l3711 364A                            l3703 3626  
                          l3535 3C6C                            l3527 3B36                            l3615 34BA  
                          l3607 349A                            l3471 21B2                            l3463 2158  
                          l3455 2102                            l3447 209E                            l3439 206C  
                          l3383 1E62                            l3375 1E30                            l3367 1E06  
                          l3359 1DD0                            l3199 1B70                            l3631 225A  
                          l4095 15BE                            l4087 14C6                            l4079 1354  
                          l4159 3D3C                            l4175 3746                            l4167 36FA  
                          l4351 3972                            l4343 3954                            l2921 319A  
                          l2913 314C                            l2905 310C                            l3297 2EF2  
                          l3289 2E4E                            l3553 3AF6                            l3721 3680  
                          l3713 365C                            l3705 3638                            l3545 3BD6  
                          l3529 3B7C                            l3801 263E                            l3617 34CA  
                          l3473 21C0                            l3465 216C                            l3457 2110  
                          l3449 20CC                            l3393 1EAC                            l3385 1E68  
                          l3377 1E32                            l3369 1E16                            l3641 230E  
                          l3633 2296                            l3625 21DE                            l4097 15EC  
                          l4089 14E2                            l4169 370E                            l4361 397C  
                          l4353 3974                            l4345 3958                            l4337 3940  
                          l3563 3F12                            l2931 3204                            l2923 31A2  
                          l2915 316C                            l2907 311A                            l3299 2F00  
                          l3555 3AFE                            l3731 36A4                            l3723 3680  
                          l3715 365C                            l3707 3638                            l3547 3C1C  
                          l3539 3B86                            l3811 267E                            l3803 2640  
                          l3619 34DA                            l3491 352A                            l3475 21C2  
                          l3467 2186                            l3459 213A                            l3395 1EB8  
                          l3387 1E88                            l3379 1E42                            l3483 3C76  
                          l3651 251A                            l3643 23DC                            l3635 22BA  
                          l3627 21FE                            l4099 16BA                            l4195 4034  
                          l4363 397E                            l4355 3976                            l4347 396C  
                          l4339 3944                            l3661 3F4C                            l3565 3F16  
                          l2941 324E                            l2933 3224                            l2925 31B6  
                          l2917 3170                            l2909 313A                            l3557 3B06  
                          l3733 36B6                            l3725 3692                            l3717 366E  
                          l3709 364A                            l3821 26AE                            l3813 2686  
                          l3805 2648                            l3581 33F4                            l3493 353A  
                          l3469 21A2                            l3477 21C8                            l3397 1EC2  
                          l3389 1E98                            l3485 3C86                            l3653 2556  
                          l3645 2448                            l3637 22D6                            l3629 2246  
                          l4197 403E                            l4365 3980                            l4357 3978  
                          l4349 3970                            ?_pad 0011                            l3663 3F52  
                          l3671 4016                            l3567 3F24                            l2943 326E  
                          l2935 3226                            l2927 31C4                            l2919 317C  
                          l2951 32A2                            l2871 37B0                            l3559 3B22  
                          l3735 36B6                            l3727 3692                            l3719 366E  
                          l3831 26EC                            l3823 26AE                            l3815 268A  
                          l3807 2658                            l3911 2C2A                            l3743 3DFE  
                          l3591 344C                            l3583 340C                            l3495 3568  
                          l3479 21CC                            l3399 1ED8                            l3655 257A  
                          l3647 247A                            l4199 4040                            l4375 398A  
                          l4359 397A                            l3665 3F54                            l3681 3FDA  
                          l3569 3F28                            l2937 3238                            l2929 31D6  
                          l2961 3312                            l2953 32C2                            l2881 3832  
                          l2873 37C2                            l3737 36D0                            l3729 36A4  
                          l3673 3A86                            l3841 2738                            l3833 26FC  
                          l3809 266E                            l3921 2CA2                            l3913 2C70  
                          l3745 3E02                            l3593 345C                            l3497 3578  
                          l3489 34FC                            l3649 24E6                            l4377 3996  
                          l3667 3F56                            l3659 3F42                            l3683 3FF4  
                          l3675 3F94                            l2939 323E                            l2971 338A  
                          l2963 331A                            l2955 32C6                            l2947 3290  
                          l2875 37D4                            l2891 3CDE                            l3691 39B4  
                          l3851 2782                            l3843 2746                            l3835 270C  
                          l3827 26C2                            l3819 269E                            l3771 2598  
                          l3931 2D2A                            l3923 2CAE                            l3915 2C86  
                          l3907 2C0C                            l3747 3E1A                            l3595 3460  
                          l3587 3420                            l3499 3586                            l3739 3DC4  
                          l4379 399C                            l3669 3F58                            l3685 3FFA  
                          l3677 3F9A                            l2973 339C                            l2965 332E  
                          l2957 32D4                            l2949 3294                            l2877 37DE  
                          l2885 3CBC                            l2893 3EA8                            l3693 3A16  
                          l3861 27C8                            l3853 2794                            l3845 2752  
                          l3837 2714                            l3829 26DC                            l3781 25D8  
                          l3773 25A6                            l3941 2D68                            l3933 2D36  
                          l3925 2CE0                            l3909 2C1C                            l3749 3E30  
                          l3597 346E                            l3589 344A                            l3679 3FD4  
                          l3687 3FB4                            l2967 333C                            l2975 33A2  
                          l2959 32F4                            l2879 37FC                            l2887 3CC8  
                          l2895 3EB4                            l2991 38B8                            l2983 387A  
                          l3695 3604                            l3871 2828                            l3855 27AA  
                          l3863 27DA                            l3847 2770                            l3839 2724  
                          l3791 25FE                            l3783 25DA                            l3775 25A8  
                          l3943 2D8C                            l3935 2D44                            l3927 2CE2  
                          l3919 2C9A                            l3961 3F06                            l3953 3EDE  
                          l3689 3FBA                            l2977 33B2                            l2969 336A  
                          l2889 3CDA                            l2897 3EB8                            l2993 38CC  
                          l2985 388A                            l3697 3616                            l3881 2896  
                          l3865 27E8                            l3857 27B0                            l3849 2772  
                          l3793 260C                            l3777 25B8                            l3785 25E2  
                          l3769 258C                            l3945 2D9C                            l3937 2D62  
                          l3929 2CEE                            l3955 3EE2                            l2979 33D2  
                          l2899 3ED0                            l2995 38E0                            l2987 389E  
                          l3699 3616                            l3971 2F98                            l3963 2F72  
                          l3891 2900                            l3875 2852                            l3883 289A  
                          l3867 27EC                            l3859 27BA                            l3795 260E  
                          l3787 25F2                            l3779 25C8                            l3947 2DAA  
                          l3939 2D64                            l3957 3EEC                            l2997 38E4  
                          l2989 38AC                            l3981 2FE8                            l3973 2FA4  
                          l3893 2904                            l3885 28B4                            l3877 285E  
                          l3869 27FA                            l3797 261E                            l3789 25F8  
                          l3949 2DAC                            l3959 3EFC                            l2999 3912  
                          l3991 3000                            l3975 2FB0                            l3895 2912  
                          l3887 28CA                            l3879 286C                            l3799 262E  
                          l3993 300C                            l3977 2FC8                            l3969 2F94  
                          l3897 2918                            l3889 28E4                            l3995 3024  
                          l3987 2FF0                            l3979 2FCE                            l3899 291A  
                          l3997 302A                            l3989 2FF4                            l3999 3044  
                          STR_1 0E05                            STR_3 0E3E                            STR_4 0E4E  
                          STR_5 0E38                            STR_6 0E44                            STR_7 0E25  
                          STR_8 0E49                            STR_9 0E1E                            u3000 4064  
                          u2200 311A                            u3001 4060                            u2201 3116  
                          u2210 314C                            u3010 1DCE                            u2211 3148  
                          u3011 1DCA                            u2300 333C                            u2140 37C2  
                          u3100 206C                            u3020 1DE0                            u2221 3176  
                          u2301 3338                            u2141 37BE                            u3101 2068  
                          u3021 1DDC                            u2230 319A                            u2310 336A  
                          u2150 37D4                            u3110 208C                            u3030 1DF0  
                          u2231 3196                            u2311 3366                            u2151 37D0  
                          u3111 2088                            u3031 1DEC                            u2240 31C4  
                          u2320 33B2                            u2160 37FC                            u2400 296E  
                          u3200 352A                            u3120 209E                            u3040 1E30  
                          u4000 17FE                    _BAUD4CONbits 000EE9                            u2241 31C0  
                          u2321 33AE                            u2161 37F8                            u2401 296A  
                          u3201 3526                            u3121 209A                            u3041 1E2C  
                          u4001 17FA                            _LATE 000F7D                            u2250 3204  
                          u2170 3832                            u2330 388A                            u2410 299E  
                          u3210 3568                            u3130 20CC                            u3050 1E42  
                          u4010 1820                            u2251 3200                            u2171 382E  
                          u2331 3886                            u2411 299A                            u3211 3564  
                          u3131 20C8                            u3051 1E3E                            u4011 181C  
                          _LATG 000F7F                            u2260 324E                            u2180 3CFE  
                          u2340 38AC                            u2500 2B94                            u2420 29BA  
                          u3300 3440                            u3220 3586                            u3140 20E2  
                          u3060 1E52                            u4020 1858                            u2261 324A  
                          u2181 3CFA                            u2341 38A8                            u2501 2B90  
                          u2421 29B6                            u3221 3582                            u3141 20DE  
                          u3061 1E4E                            u4021 1854                            u2270 32A2  
                          u2190 3ED0                            u2350 3902                            u2510 2BA4  
                          u2430 29E8                            u3310 346E                            u3230 35A6  
                          u3150 20F6                            u3070 1E88                            u4030 1886  
                          u2271 329E                            u2191 3ECC                            u2351 38FE  
                          u2511 2BA0                            u2431 29E4                            u3311 346A  
                          u3231 35A2                            u3151 20F2                            u3071 1E84  
                          u4031 1882                            u2280 32D4                            u2360 3912  
                          u2520 2BBC                            u2440 29F6                            u3320 3482  
                          u3240 35F6                            u3160 2110                            u3080 1E98  
                          u2600 199A                            u3400 22D6                            u4040 18BA  
                          u2281 32D0                            u2361 390E                            u2521 2BB8  
                          u2441 29F2                            u3321 347E                            u3305 3436  
                          u3241 35F2                            u3161 210C                            u3081 1E94  
                          u2601 1996                            u3401 22D2                            u4041 18B6  
                          u2530 3F7C                            u2290 3312                            u2370 3D9E  
                          u2450 2B20                            u3330 34AA                            u3170 2158  
                          u3090 2012                            u3250 3E86                            u2610 19AA  
                          u3410 23DC                            u4050 18E8                            _T2PR 000FBC  
                          u2531 3F78                            u2291 330E                            u2371 3D9A  
                          u2451 2B1C                            u3331 34A6                            u3171 2154  
                          u3251 3E82                            u2611 19A6                            u3411 23D8  
                          u4051 18E4                            u2540 3F92                            u2460 2B3E  
                          u2380 2956                            u3260 3A7C                            u3500 366E  
                          u3340 34CA                            u3180 2186                            u2700 1AF0  
                          u2620 19E6                            u3420 247A                            u2541 3F8E  
                          u2461 2B3A                            u2381 2950                            u3261 3A78  
                          u3501 366A                            u3341 34C6                            u3181 2182  
                          u2701 1AEC                            u2621 19E2                            u3421 2476  
                          u3270 3F40                            u2470 2B58                            u2390 2958  
                          u3510 3680                            u3350 34DA                            u3190 21C0  
                          u2710 1B00                            u2630 19F4                            u2550 190E  
                          u3430 253A                            u3271 3F3C                            u2471 2B54  
                          u3511 367C                            u3351 34D6                            u3191 21BC  
                          u3095 2008                            u2711 1AFC                            u2631 19F0  
                          u2551 190A                            u2480 2B72                            u3520 3692  
                          u3600 25B8                            u2800 1C5E                            u2720 1B32  
                          u2640 1A62                            u2560 1920                            u3440 2556  
                          u3360 221E                            u4240 39AC                            u2481 2B6E  
                          u3521 368E                            u3601 25B4                            u2801 1C5A  
                          u2721 1B2E                            u2641 1A5E                            u2561 191C  
                          u3441 2552                            u4241 39A8                            u2490 2B82  
                          u3530 36A4                            u3450 3616                            u3610 25C8  
                          u3290 340C                            u2810 1C7A                            u2730 1B40  
                          u2650 1A7A                            u2570 1930                            u3370 2246  
                          u2491 2B7E                            u3531 36A0                            u3451 3612  
                          u3611 25C4                            u3291 3408                            u2811 1C76  
                          u2731 1B3C                            u2651 1A74                            u2571 192C  
                          u3435 2530                            u3371 2242                            u3540 36B6  
                          u3460 3626                            u3700 2794                            u3620 260C  
                          u2900 1D52                            u2820 1C8A                            u2740 1B5E  
                          u2660 1A7C                            u2580 1972                            u3380 227A  
                          u3541 36B2                            u3461 3622                            u3701 2790  
                          u3621 2608                            u2901 1D4E                            u2821 1C86  
                          u2741 1B5A                            u2581 196E                            u3365 2214  
                          u4317 10E6                            u3470 3638                            u3710 27AA  
                          u3630 261E                            u3550 3E1A                            u2910 1D72  
                          u2830 1C9C                            u2750 1B96                            u2670 1AA4  
                          u2590 1988                            u3390 2296                            u4407 3FE4  
                          u3471 3634                            u3711 27A6                            u3631 261A  
                          u3551 3E16                            u2911 1D6E                            u2831 1C98  
                          u2751 1B92                            u2671 1AA0                            u2591 1984  
                          u3391 2292                            u4327 1344                            u3480 364A  
                          u3800 28E4                            u3720 27C8                            u3640 262E  
                          u3560 3E30                            u2920 1D84                            u2840 1CB2  
                          u2760 1BDC                            u2680 1AC2                            u4417 4004  
                          u3481 3646                            u3801 28E0                            u3721 27C4  
                          u3641 262A                            u3561 3E2C                            u2921 1D80  
                          u2841 1CAE                            u2761 1BD8                            u2681 1ABE  
                          u3385 2270                            u4337 15B2                            u3490 365C  
                          u3810 2912                            u3730 27E8                            u3650 266E  
                          u2930 1DA0                            u2850 1CC8                            u2770 1C12  
                          u2690 1AE2                            u4427 3EF2                            u3491 3658  
                          u4347 2FBA                            u3811 290E                            u3731 27E4  
                          u3651 266A                            u2931 1D9C                            u2851 1CC4  
                          u2771 1C0E                            u2691 1ADE                            u2940 2DE2  
                          u3740 27FA                            u3660 26AE                            u3900 2D9C  
                          u3820 2C1C                            u2860 1CDC                            u2780 1C22  
                          u2941 2DDE                            u4357 3016                            u3741 27F6  
                          u3661 26AA                            u3901 2D98                            u3821 2C18  
                          u2861 1CD8                            u2781 1C1E                            u2950 2E2A  
                          u3750 2828                            u3670 2724                            u3590 25A6  
                          u3910 2DAA                            u3830 2C2A                            u2870 1CF6  
                          u2790 1C4E                            u2951 2E26                            u4367 3072  
                          u3751 2824                            u3671 2720                            u3591 25A2  
                          u3911 2DA6                            u3831 2C26                            u2871 1CF2  
                          u2791 1C4A                            u2960 2E4E                            u3920 2FE8  
                          u3760 283E                            u3680 2746                            u3840 2C86  
                          u2880 1D30                            u2961 2E4A                            u4377 30CE  
                          u3921 2FE4                            u3761 283A                            u3681 2742  
                          u3841 2C82                            u2881 1D2C                            u2970 2EF2  
                          u3930 3044                            u3770 2852                            u3690 2770  
                          u3850 2CDC                            u2890 1D42                            u4387 3FA4  
                          u2971 2EEE                            u3931 3040                            u3771 284E  
                          u3691 276C                            u3851 2CD8                            u2891 1D3E  
                          u2980 3D6C                            u3940 30A0                            u3780 286C  
                          u3860 2D26                            u4397 3FC4                            u2981 3D64  
                          u3941 309C                            u3781 2868                            u3861 2D22  
                          u3950 30FC                            u3790 28B4                            u3870 2D44  
                          u3951 30F8                            u3791 28B0                            u3871 2D40  
                          u3880 2D54                            u3960 15EC                            u3881 2D50  
                          u3961 15E8                            u3890 2D62                            u3970 16BA  
                          u3891 2D5E                            u3971 16B6                            u3980 16FC  
                          u3981 16F8                            u2998 3D6E                            u3990 17BC  
                          u3991 17B8                            abs@a 0013                            _dbuf 0165  
                          _main 3940                            _dtoa 2926                            _prec 00EE  
                          _nout 00EA                            pad@i 0018                            pad@p 0015  
                          fsr1h 000FE2                            fsr2h 000FDA                            indf2 000FDF  
                          fsr1l 000FE1                            pad@w 001A                            fsr2l 000FD9  
                          prodh 000FF4                            prodl 000FF3                            start 0000  
                ?_color_display 0058                 ___fldiv@new_exp 0020          __end_of_color_read_Red 3B86  
             ?_calibration_init 0001                    ___param_bank 000000                  ?_color_predict 0001  
            ??_calibration_init 0001                           ??_abs 0015                           ??_pad 0017  
                 ___fltol@sign1 0064                 __end_of___aodiv 3290                    main@complete 0185  
               __end_of___fladd 1DB4                           ?_main 0001                           ?_dtoa 001C  
               __end_of___aomod 33F4                           _ADPCH 000F5F                 __end_of___fldiv 2926  
               __end_of___flneg 3EA8                           STR_10 0E13                           STR_11 0E2C  
                         STR_12 0E32                           STR_13 0E0D                 __end_of___flmul 21DE  
               __end_of___flsub 3CBC                 __end_of___fltol 34FC                           _LED_B 3FF4  
                         _LED_C 3FD4                           _LED_G 3FB4                           _LED_R 3F94  
                  vfpfcnvrt@fmt 0042         __end_of_sendCharSerial4 406A      __end_of_I2C_2_Master_Start 40A0  
       ??_color_data_collection 005C      __end_of_I2C_2_Master_Write 4076                 __end_of_compare 3E38  
                  compare@lower 006A                           _flags 00F0                           _color 0164  
                  compare@upper 006E                           _fputc 37B0                           _fputs 3CBC  
                         pad@fp 0011                           _width 00EC                           _putch 40A0  
                         _toint 0E01                           dtoa@d 001E                           dtoa@i 003E  
                         dtoa@n 0036                           dtoa@p 0030                           dtoa@s 0034  
                         dtoa@w 0032                           tablat 000FF5                 __end_of_lroundf 3DFE  
                         status 000FD8                 __end_of_sprintf 3B36                color_display@buf 0079  
       __end_of_color_read_Blue 3C76           _I2C_2_Master_RepStart 4082                 ?_color_read_Red 0005  
               __initialization 3E38                    __end_of_main 39B4                    __end_of_dtoa 2C0A  
          __end_of_detect_color 18F4          color_data_collection@i 00DE          color_data_collection@j 00E0  
        color_data_collection@k 00E2          color_data_collection@m 005A          color_data_collection@x 00E4  
                        ??_main 0060                          ??_dtoa 0026                   __activetblptr 000001  
                        ?_LED_B 0001                          ?_LED_C 0001                          ?_LED_G 0001  
                        ?_LED_R 0001          _initDCmotors_parameter 36DE                          ?_fputc 0001  
                        ?_fputs 000A                          _ADRESH 000F64                          ?_putch 0001  
                        _RC0PPS 000E62                          _RC4REG 000EE3                          _RE2PPS 000E74  
                        _RD5PPS 000E6F                          _RC7PPS 000E69                          _RD6PPS 000E70  
      __end_of_color_click_init 3F12                          _RX4PPS 000E15                          _TX4REG 000EE4  
               ??_color_display 005A                __end_of___xxtofl 2DBE                 ??_color_predict 0058  
                  vfprintf@cfmt 0056                          ___flge 34FC                       ??___aodiv 0011  
                     ??___fladd 0009                       ??___aomod 0011                       ??___fldiv 0017  
                     ??___flneg 0005                       ??___flmul 0030                       ??___flsub 0019  
                     ??___fltol 0060                   compare@result 005F                          clear_0 3E50  
                        clear_1 3E5C                          _motorL 015A                          _motorR 0150  
                        isa$std 000001                          pad@buf 0013                          _roundf 21DE  
                        dtoa@fp 001C                          _strlen 3EA8                       ??_compare 005F  
                        fputc@c 0001                          fputs@c 000E                          fputs@i 000F  
                        fputs@s 000A                    __mediumconst 0000                          tblptrh 000FF7  
                        tblptrl 000FF6                          tblptru 000FF8                ?_sendCharSerial4 0001  
                     ??_lroundf 005F                     read_color@m 000C                          putch@c 0001  
              __end_of_vfprintf 3A86               ??_initDCmotorsPWM 0003                       ??_sprintf 0058  
                    ___flge@ff1 0001                      ___flge@ff2 0005                    ___xxtofl@arg 000B  
                  ___xxtofl@exp 000A                    ___xxtofl@val 0001                      __accesstop 0060  
       __end_of__initialization 3E62        __end_of_color_read_Clear 3C26                      ___flneg@f1 0001  
      __end_of_color_read_Green 3BD6          ?_I2C_2_Master_RepStart 0001              color_predict@color 00DD  
  initDCmotors_parameter@motorL 0001    initDCmotors_parameter@motorR 0003                   ___rparam_used 000001  
                    ___fltol@f1 005B                   __end_of_LED_B 4014                   __end_of_LED_C 3FF4  
                 __end_of_LED_G 3FD4                   __end_of_LED_R 3FB4                ?_color_read_Blue 0005  
                __pcstackCOMRAM 0001                    __pidataBANK0 40A2                   __end_of_fputc 387A  
             detect_color@color 0086                   __end_of_fputs 3D00                   __end_of_putch 40A2  
                 __end_of_toint 0E05                         ??_LED_B 0001                         ??_LED_C 0001  
                       ??_LED_G 0001                         ??_LED_R 0001                         ??_fputc 0005  
                       ??_fputs 000E                         ??_putch 0001                      __pbssBANK0 00E6  
                    __pbssBANK1 0100                color_predict@buf 0079               _color_writetoaddr 4014  
                  _T2CLKCONbits 000FBF                         ?___flge 0001              ?_color_writetoaddr 0003  
                       ?_roundf 0041             ??_color_writetoaddr 0004                         ?_strlen 0001  
                     ?___xxtofl 0001                         _SP4BRGH 000EE6                         _SP4BRGL 000EE5  
                       _PWM6DCH 000FA3                         _PWM7DCH 000FA0                         _SSP2ADD 000ED6  
                       _SSP2BUF 000ED5                    _detect_color 0E54   __end_of_color_data_collection 3108  
        color_writetoaddr@value 0003                ??_color_read_Red 0007       __end_of_color_writetoaddr 4034  
                     _ADREFbits 000F58              _I2C_2_Master_Start 4096                      _initUSART4 4034  
            _I2C_2_Master_Write 406A                         __Hparam 0000                         __Lparam 0000  
             color_read_Red@tmp 000A         sendStringSerial4@string 0002                         ___aodiv 3108  
                       ___fladd 18F4                         ___aomod 3290                         ___fldiv 258C  
                       ___flneg 3E70                         ___flmul 1DB4                         ___flsub 3C76  
                       ___fltol 33F4             ?_I2C_2_Master_Start 0001             ?_I2C_2_Master_Write 0001  
                     ?_vfprintf 0050                    __psmallconst 0E00                         __pcinit 3E38  
                       __ramtop 0E00                      _read_color 3A86                         __ptext0 3940  
                       __ptext1 4034                         __ptext2 36DE                         __ptext3 3D00  
                       __ptext4 0E54                         __ptext5 3DC4                         __ptext6 21DE  
                       __ptext7 3C76                         __ptext8 18F4                         __ptext9 3E70  
                       _compare 3DFE         ?_initDCmotors_parameter 0001                       _T2CONbits 000FBD  
                    ??___xxtofl 0005                       _T2HLTbits 000FBE                         _lroundf 3DC4  
                 _RxBufWriteCnt 00F5                         _sprintf 3AE4                         main@rgb 019A  
          ??_I2C_2_Master_Start 0002            ??_I2C_2_Master_Write 0002            end_of_initialization 3E62  
                       fputc@fp 0003                         fputs@fp 000C               ?_color_click_init 0001  
            ??_color_click_init 0005               __end_of_vfpfcnvrt 2F72                         postdec2 000FDD  
                       postinc0 000FEE                         postinc1 000FE6                         postinc2 000FDE  
                       roundf@e 004D                         roundf@u 0053                         roundf@x 0041  
                       roundf@y 0057                      ??_vfprintf 0056                         strlen@a 0003  
                       strlen@s 0001                 _initDCmotorsPWM 3D00  __end_of_initDCmotors_parameter 37B0  
                     _PORTFbits 000F8E                     ___fladd@grs 0010                   ___xxtofl@sign 0009  
                     _TRISAbits 000F81                       _TRISCbits 000F83                       _TRISDbits 000F84  
                     _TRISEbits 000F85                       _TRISFbits 000F86                       _TRISGbits 000F87  
                   ___fldiv@grs 0022                     ___fldiv@rem 001B        color_writetoaddr@address 0004  
       ??_I2C_2_Master_RepStart 0002                     ___flmul@grs 0035               ?_color_read_Clear 0005  
                  _EUSART4RXbuf 013C                    _EUSART4TXbuf 0100               ?_color_read_Green 0005  
                   ?_initUSART4 0001       sendCharSerial4@charToSend 0001           __end_of_color_display 3A24  
                    main@motorL 0186                      main@motorR 0190              ??_color_read_Clear 0007  
                color_display@m 0058              ??_color_read_Green 0007                  detect_color@BB 0084  
                detect_color@BG 0089                  detect_color@GB 007E                  detect_color@GG 0080  
                detect_color@BR 0087                  detect_color@GR 007C                  detect_color@RB 007A  
                detect_color@RG 0078                  detect_color@RR 0082           __end_of_color_predict 36DE  
                __end_of___flge 3600                     vfpfcnvrt@ap 0044                     vfpfcnvrt@fp 0040  
                   vfpfcnvrt@ll 0048                     ?_read_color 000C                  __end_of_roundf 258C  
                __end_of_strlen 3EDE             color_read_Clear@tmp 000A             start_initialization 3E38  
              _calibration_init 4076                     __end_of_abs 3DC4                     __end_of_pad 3940  
                 _TxBufWriteCnt 00F3             color_read_Green@tmp 000A         __end_of_initDCmotorsPWM 3D42  
                   vfprintf@fmt 0052                        ??___flge 0009                     __pdataBANK0 00F6  
                      ??_roundf 0045                        ??_strlen 0003                       ___fladd@a 0005  
                     ___fladd@b 0001                       ___fldiv@a 0013                       ___fldiv@b 000F  
                     ___flmul@a 002C                       ___flmul@b 0028                       ___flsub@a 0015  
                     ___flsub@b 0011                   __pcstackBANK0 0060                   __pcstackBANK1 0185  
              ___aodiv@dividend 0001                       _dtoa$2333 002E                        ?___aodiv 0001  
                      ?___fladd 0001                        ?___aomod 0001                        ?___fldiv 000F  
              ___aodiv@quotient 0013                        ?___flneg 0001                        ?___flmul 0028  
                      ?___flsub 0011                        ?___fltol 005B            I2C_2_Master_Read@ack 0003  
          I2C_2_Master_Read@tmp 0004                        ?_compare 006A                     __smallconst 0E00  
             _I2C_2_Master_Idle 3F6C               _I2C_2_Master_Init 3F42               _I2C_2_Master_Read 3D42  
             _I2C_2_Master_Stop 408C                    _RxBufReadCnt 00F4                        ?_lroundf 0066  
            ?_I2C_2_Master_Idle 0001              ?_I2C_2_Master_Init 0001              ?_I2C_2_Master_Read 0001  
            ?_I2C_2_Master_Stop 0001        initDCmotorsPWM@PWMperiod 0001                        ?_sprintf 0060  
             _sendStringSerial4 3F12           _color_data_collection 2F72             ??_I2C_2_Master_Idle 0001  
           ??_I2C_2_Master_Init 0001             ??_I2C_2_Master_Read 0002                        _LATAbits 000F79  
           ??_I2C_2_Master_Stop 0002                        _LATCbits 000F7B                        _LATEbits 000F7D  
                      _LATFbits 000F7E                        _LATGbits 000F7F              ?_sendStringSerial4 0002  
                      _PIE4bits 000E2D                        _PIR4bits 000E37                ?_initDCmotorsPWM 0001  
             ??_sendCharSerial4 0001                        _SSP2CON2 000EDA             ??_sendStringSerial4 0004  
                      _SSP2STAT 000ED8                       _vfpfcnvrt 2DBE                      _ADCON0bits 000F60  
     __end_of_I2C_2_Master_Idle 3F94       __end_of_I2C_2_Master_Init 3F6C       __end_of_I2C_2_Master_Read 3D84  
     __end_of_I2C_2_Master_Stop 4096     I2C_2_Master_Write@data_byte 0002                       main@white 0185  
             ??_color_read_Blue 0007                   detect_color@m 0070                   detect_color@w 0072  
                  _TxBufReadCnt 00F2       __end_of_sendStringSerial4 3F42   __end_of_I2C_2_Master_RepStart 408C  
            color_read_Blue@tmp 000A                      roundf@F527 00E6                    ??_initUSART4 0001  
                      __Hrparam 0000        __end_of_calibration_init 4082                      vfprintf@ap 0054  
                      __Lrparam 0000                      vfprintf@fp 0050                    __Lsmallconst 0E00  
          compare@value2compare 006C                      ?_vfpfcnvrt 0040                    ??_read_color 000E  
               ___aodiv@divisor 0009                 ___aodiv@counter 0011                      _ANSELDbits 000EA7  
                    _ANSELFbits 000EB4                      sprintf@fmt 0062                        ___xxtofl 2C0A  
            __end_of_initUSART4 4052                        __ptext10 1DB4                        __ptext11 34FC  
                      __ptext20 3BD6                        __ptext12 33F4                        __ptext21 3C26  
                      __ptext13 3DFE                        __ptext30 387A                        __ptext22 4082  
                      __ptext14 2C0A                        __ptext31 3EA8                        __ptext23 3D42  
                      __ptext15 258C                        __ptext40 3F94                        __ptext32 3CBC  
                      __ptext24 3600                        __ptext16 2F72                        __ptext41 3FB4  
                      __ptext33 37B0                        __ptext25 39B4                        __ptext17 3A86  
                      __ptext50 3F42                        __ptext42 3FD4                        __ptext34 40A0  
                      __ptext26 3AE4                        __ptext18 3B36                        __ptext51 4076  
                      __ptext43 3FF4                        __ptext35 3D84                        __ptext27 3A24  
                      __ptext19 3B86                        __ptext44 3EDE                        __ptext36 3290  
                      __ptext28 2DBE                        __ptext45 4014                        __ptext37 3108  
                      __ptext29 2926                        __ptext46 406A                        __ptext38 3F12  
                      __ptext47 408C                        __ptext39 4052                        __ptext48 4096  
                      __ptext49 3F6C                    _SSP2CON1bits 000ED9                    _SSP2CON2bits 000EDA  
        ?_color_data_collection 005A              __end_of_read_color 3AE4                        isa$xinst 000000  
                    _RC4STAbits 000EE7                     _SENSITIVITY 00F6                        _vfprintf 3A24  
              ___aomod@dividend 0001                   ?_detect_color 0070                     _PWM6CONbits 000FA4  
                   _PWM7CONbits 000FA1                       sprintf@ap 006C                        lroundf@x 0066  
      ??_initDCmotors_parameter 0005                 ___aomod@divisor 0009                     ??_vfpfcnvrt 0046  
               ___aomod@counter 0011                _color_click_init 3EDE                        sprintf@f 006E  
                      sprintf@s 0060               _detect_color$2688 008B                      _SSP2DATPPS 000E1D  
                    _SSP2CLKPPS 000E1C                  ??_detect_color 0074                   ___fladd@signs 000D  
                    _TX4STAbits 000EE8                    ___aodiv@sign 0012                 _sendCharSerial4 4052  
                  ___fladd@aexp 000E                    ___fladd@bexp 000F                    ___aomod@sign 0012  
                   _roundf$2690 0049                     _roundf$2689 004F                   _color_display 39B4  
