

Microchip MPLAB XC8 Assembler V2.35 build 20211206165544 
                                                                                               Thu Mar 17 09:41:20 2022

Microchip MPLAB XC8 C Compiler v2.35 (Free license) build 20211206165544 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
     9                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=3
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=3
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=3
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=3
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=3
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1
    47                           	psect	text34,global,reloc=2,class=CODE,delta=1
    48                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=2
    49                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=2
    50                           	psect	text37,global,reloc=2,class=CODE,delta=1
    51                           	psect	text38,global,reloc=2,class=CODE,delta=1
    52                           	psect	text39,global,reloc=2,class=CODE,delta=1
    53                           	psect	text40,global,reloc=2,class=CODE,delta=1
    54                           	psect	text41,global,reloc=2,class=CODE,delta=1
    55                           	psect	text42,global,reloc=2,class=CODE,delta=1
    56                           	psect	text43,global,reloc=2,class=CODE,delta=1
    57                           	psect	text44,global,reloc=2,class=CODE,delta=1
    58                           	psect	text45,global,reloc=2,class=CODE,delta=1
    59                           	psect	text46,global,reloc=2,class=CODE,delta=1
    60                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=3
    61                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=3
    62                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=2
    63                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=2
    64                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=2
    65                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=2
    66                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=2
    67                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=2
    68                           	psect	text55,global,reloc=2,class=CODE,delta=1
    69                           	psect	text56,global,reloc=2,class=CODE,delta=1
    70                           	psect	text57,global,reloc=2,class=CODE,delta=1
    71                           	psect	text58,global,reloc=2,class=CODE,delta=1,group=2
    72                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=2
    73                           	psect	text60,global,reloc=2,class=CODE,delta=1
    74                           	psect	text61,global,reloc=2,class=CODE,delta=1
    75                           	psect	text62,global,reloc=2,class=CODE,delta=1
    76                           	psect	text63,global,reloc=2,class=CODE,delta=1
    77                           	psect	text64,global,reloc=2,class=CODE,delta=1
    78                           	psect	text65,global,reloc=2,class=CODE,delta=1
    79                           	psect	text66,global,reloc=2,class=CODE,delta=1
    80                           	psect	text67,global,reloc=2,class=CODE,delta=1
    81                           	psect	text68,global,reloc=2,class=CODE,delta=1
    82                           	psect	text69,global,reloc=2,class=CODE,delta=1
    83                           	psect	text70,global,reloc=2,class=CODE,delta=1
    84                           	psect	text71,global,reloc=2,class=CODE,delta=1
    85                           	psect	text72,global,reloc=2,class=CODE,delta=1
    86                           	psect	text73,global,reloc=2,class=CODE,delta=1
    87                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    88                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    89                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    90                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    91                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    92                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    93  0000                     
    94                           ; Version 2.35
    95                           ; Generated 05/05/2021 GMT
    96                           ; 
    97                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    98                           ; All rights reserved.
    99                           ; 
   100                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   101                           ; 
   102                           ; Redistribution and use in source and binary forms, with or without modification, are
   103                           ; permitted provided that the following conditions are met:
   104                           ; 
   105                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   106                           ;        conditions and the following disclaimer.
   107                           ; 
   108                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   109                           ;        of conditions and the following disclaimer in the documentation and/or other
   110                           ;        materials provided with the distribution. Publication is not required when
   111                           ;        this file is used in an embedded application.
   112                           ; 
   113                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   114                           ;        software without specific prior written permission.
   115                           ; 
   116                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   117                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   118                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   119                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   120                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   121                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   122                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   123                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   124                           ; 
   125                           ; 
   126                           ; Code-generator required, PIC18F67K40 Definitions
   127                           ; 
   128                           ; SFR Addresses
   129  0000                     
   130                           	psect	idataBANK1
   131  005FA8                     __pidataBANK1:
   132                           	callstack 0
   133                           
   134                           ;initializer for _SENSITIVITY
   135  005FA8  0064               	dw	100
   136                           
   137                           	psect	smallconst
   138  000E00                     __psmallconst:
   139                           	callstack 0
   140  000E00  00                 	db	0
   141  000E01  0000               	dw	0
   142  000E03  4B00               	dw	19200
   143  000E05                     __end_of_toint:
   144                           	callstack 0
   145  0000                     _TX4REG	set	3812
   146  0000                     _RC4STAbits	set	3815
   147  0000                     _SP4BRGH	set	3814
   148  0000                     _LATEbits	set	3965
   149  0000                     _TRISEbits	set	3973
   150  0000                     _LATFbits	set	3966
   151  0000                     _LATGbits	set	3967
   152  0000                     _TRISGbits	set	3975
   153  0000                     _LATHbits	set	3968
   154  0000                     _TRISHbits	set	3976
   155  0000                     _SSP2CON2bits	set	3802
   156  0000                     _LATG	set	3967
   157  0000                     _LATE	set	3965
   158  0000                     _RX4PPS	set	3605
   159  0000                     _SSP2CLKPPS	set	3612
   160  0000                     _SSP2DATPPS	set	3613
   161  0000                     _ANSELDbits	set	3751
   162  0000                     _ANSELFbits	set	3764
   163  0000                     _TRISFbits	set	3974
   164  0000                     _SSP2BUF	set	3797
   165  0000                     _SSP2ADD	set	3798
   166  0000                     _SSP2CON1bits	set	3801
   167  0000                     _LATAbits	set	3961
   168  0000                     _LATDbits	set	3964
   169  0000                     _TRISDbits	set	3972
   170  0000                     _PORTFbits	set	3982
   171  0000                     _T2PR	set	4028
   172  0000                     _T2CONbits	set	4029
   173  0000                     _PWM7DCH	set	4000
   174  0000                     _PWM6DCH	set	4003
   175  0000                     _TRISCbits	set	3971
   176  0000                     _TRISAbits	set	3969
   177  0000                     _LATCbits	set	3963
   178  0000                     _RC4REG	set	3811
   179  0000                     _SP4BRGL	set	3813
   180  0000                     _TX4STAbits	set	3816
   181  0000                     _BAUD4CONbits	set	3817
   182  0000                     _SSP2CON2	set	3802
   183  0000                     _SSP2STAT	set	3800
   184  0000                     _PIE0bits	set	3625
   185  0000                     _PIR4bits	set	3639
   186  0000                     _RC0PPS	set	3682
   187  0000                     _RC7PPS	set	3689
   188  0000                     _RD5PPS	set	3695
   189  0000                     _RE2PPS	set	3700
   190  0000                     _RD6PPS	set	3696
   191  0000                     _TMR0L	set	4051
   192  0000                     _TMR0H	set	4052
   193  0000                     _T0CON0bits	set	4053
   194  0000                     _T2CLKCONbits	set	4031
   195  0000                     _T2HLTbits	set	4030
   196  0000                     _PWM6CONbits	set	4004
   197  0000                     _PWM7CONbits	set	4001
   198  0000                     _T0CON1bits	set	4054
   199  0000                     _INTCONbits	set	4082
   200  0000                     _PIR0bits	set	3635
   201  000E05                     STR_4:
   202                           
   203                           ; BSR set to: 14
   204  000E05  25                 	db	37
   205  000E06  64                 	db	100	;'d'
   206  000E07  09                 	db	9
   207  000E08  25                 	db	37
   208  000E09  64                 	db	100	;'d'
   209  000E0A  09                 	db	9
   210  000E0B  25                 	db	37
   211  000E0C  64                 	db	100	;'d'
   212  000E0D  09                 	db	9
   213  000E0E  25                 	db	37
   214  000E0F  64                 	db	100	;'d'
   215  000E10  0D                 	db	13
   216  000E11  0A                 	db	10
   217  000E12  00                 	db	0
   218  000E13  00                 	db	0	; dummy byte at the end
   219  0000                     
   220                           ; #config settings
   221                           
   222                           	psect	cinit
   223  005CB4                     __pcinit:
   224                           	callstack 0
   225  005CB4                     start_initialization:
   226                           	callstack 0
   227  005CB4                     __initialization:
   228                           	callstack 0
   229                           
   230                           ; Initialize objects allocated to BANK1 (2 bytes)
   231                           ; load TBLPTR registers with __pidataBANK1
   232  005CB4  0EA8               	movlw	low __pidataBANK1
   233  005CB6  6EF6               	movwf	tblptrl,c
   234  005CB8  0E5F               	movlw	high __pidataBANK1
   235  005CBA  6EF7               	movwf	tblptrh,c
   236  005CBC  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   237  005CBE  6EF8               	movwf	tblptru,c
   238  005CC0  0009               	tblrd		*+	;fetch initializer
   239  005CC2  CFF5 F1FE          	movff	tablat,__pdataBANK1
   240  005CC6  0009               	tblrd		*+	;fetch initializer
   241  005CC8  CFF5 F1FF          	movff	tablat,__pdataBANK1+1
   242                           
   243                           ; Clear objects allocated to BANK1 (166 bytes)
   244  005CCC  EE01  F000         	lfsr	0,__pbssBANK1
   245  005CD0  0EA6               	movlw	166
   246  005CD2                     clear_0:
   247  005CD2  6AEE               	clrf	postinc0,c
   248  005CD4  06E8               	decf	wreg,f,c
   249  005CD6  E1FD               	bnz	clear_0
   250  005CD8                     end_of_initialization:
   251                           	callstack 0
   252  005CD8                     __end_of__initialization:
   253                           	callstack 0
   254  005CD8  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   255  005CDA  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   256  005CDC  0E00               	movlw	low (__Lsmallconst shr (0+16))
   257  005CDE  6EF8               	movwf	tblptru,c
   258  005CE0  0E0E               	movlw	high __Lsmallconst
   259  005CE2  6EF7               	movwf	tblptrh,c
   260  005CE4  0100               	movlb	0
   261  005CE6  EF95  F01D         	goto	_main	;jump to C main() function
   262                           
   263                           	psect	bssBANK1
   264  000100                     __pbssBANK1:
   265                           	callstack 0
   266  000100                     _memory:
   267                           	callstack 0
   268  000100                     	ds	100
   269  000164                     _motorR:
   270                           	callstack 0
   271  000164                     	ds	9
   272  00016D                     _motorL:
   273                           	callstack 0
   274  00016D                     	ds	9
   275  000176                     roundf@F527:
   276                           	callstack 0
   277  000176                     	ds	4
   278  00017A                     _nout:
   279                           	callstack 0
   280  00017A                     	ds	2
   281  00017C                     _width:
   282                           	callstack 0
   283  00017C                     	ds	2
   284  00017E                     _prec:
   285                           	callstack 0
   286  00017E                     	ds	2
   287  000180                     _flags:
   288                           	callstack 0
   289  000180                     	ds	2
   290  000182                     _centisecond:
   291                           	callstack 0
   292  000182                     	ds	2
   293  000184                     _color:
   294                           	callstack 0
   295  000184                     	ds	1
   296  000185                     _array_index:
   297                           	callstack 0
   298  000185                     	ds	1
   299  000186                     _dbuf:
   300                           	callstack 0
   301  000186                     	ds	32
   302                           
   303                           	psect	dataBANK1
   304  0001FE                     __pdataBANK1:
   305                           	callstack 0
   306  0001FE                     _SENSITIVITY:
   307                           	callstack 0
   308  0001FE                     	ds	2
   309                           
   310                           	psect	cstackBANK1
   311  0001A6                     __pcstackBANK1:
   312                           	callstack 0
   313  0001A6                     verify_color@m:
   314                           	callstack 0
   315  0001A6                     test_function@m:
   316                           	callstack 0
   317                           
   318                           ; 2 bytes @ 0x0
   319  0001A6                     	ds	2
   320  0001A8                     verify_color@w:
   321                           	callstack 0
   322  0001A8                     test_function@w:
   323                           	callstack 0
   324                           
   325                           ; 2 bytes @ 0x2
   326  0001A8                     	ds	2
   327  0001AA                     verify_color@color2:
   328                           	callstack 0
   329  0001AA                     test_function@mL:
   330                           	callstack 0
   331                           
   332                           ; 2 bytes @ 0x4
   333  0001AA                     	ds	2
   334  0001AC                     verify_color@color:
   335                           	callstack 0
   336  0001AC                     test_function@mR:
   337                           	callstack 0
   338                           
   339                           ; 2 bytes @ 0x6
   340  0001AC                     	ds	2
   341  0001AE                     test_function@amb_light:
   342                           	callstack 0
   343                           
   344                           ; 2 bytes @ 0x8
   345  0001AE                     	ds	2
   346  0001B0                     test_function@complete:
   347                           	callstack 0
   348                           
   349                           ; 1 bytes @ 0xA
   350  0001B0                     	ds	1
   351  0001B1                     test_function@color:
   352                           	callstack 0
   353                           
   354                           ; 1 bytes @ 0xB
   355  0001B1                     	ds	1
   356  0001B2                     test_function@stop_signal:
   357                           	callstack 0
   358                           
   359                           ; 1 bytes @ 0xC
   360  0001B2                     	ds	1
   361  0001B3                     test_function@test_code:
   362                           	callstack 0
   363                           
   364                           ; 1 bytes @ 0xD
   365  0001B3                     	ds	1
   366  0001B4                     ??_main:
   367                           
   368                           ; 1 bytes @ 0xE
   369  0001B4                     	ds	4
   370  0001B8                     main@amb:
   371                           	callstack 0
   372                           
   373                           ; 8 bytes @ 0x12
   374  0001B8                     	ds	8
   375  0001C0                     main@amb_light:
   376                           	callstack 0
   377                           
   378                           ; 2 bytes @ 0x1A
   379  0001C0                     	ds	2
   380  0001C2                     main@stop_signal:
   381                           	callstack 0
   382                           
   383                           ; 1 bytes @ 0x1C
   384  0001C2                     	ds	1
   385  0001C3                     main@accident:
   386                           	callstack 0
   387                           
   388                           ; 1 bytes @ 0x1D
   389  0001C3                     	ds	1
   390  0001C4                     main@start_time:
   391                           	callstack 0
   392                           
   393                           ; 2 bytes @ 0x1E
   394  0001C4                     	ds	2
   395  0001C6                     main@stop_time:
   396                           	callstack 0
   397                           
   398                           ; 2 bytes @ 0x20
   399  0001C6                     	ds	2
   400  0001C8                     main@rgb:
   401                           	callstack 0
   402                           
   403                           ; 8 bytes @ 0x22
   404  0001C8                     	ds	8
   405  0001D0                     main@white:
   406                           	callstack 0
   407                           
   408                           ; 28 bytes @ 0x2A
   409  0001D0                     	ds	28
   410  0001EC                     main@motorL:
   411                           	callstack 0
   412                           
   413                           ; 9 bytes @ 0x46
   414  0001EC                     	ds	9
   415  0001F5                     main@motorR:
   416                           	callstack 0
   417                           
   418                           ; 9 bytes @ 0x4F
   419  0001F5                     	ds	9
   420                           
   421                           	psect	cstackBANK0
   422  000060                     __pcstackBANK0:
   423                           	callstack 0
   424  000060                     ??___fltol:
   425  000060                     ?_sprintf:
   426                           	callstack 0
   427  000060                     sprintf@s:
   428                           	callstack 0
   429                           
   430                           ; 2 bytes @ 0x0
   431  000060                     	ds	2
   432  000062                     sprintf@fmt:
   433                           	callstack 0
   434                           
   435                           ; 2 bytes @ 0x2
   436  000062                     	ds	2
   437  000064                     ___fltol@sign1:
   438                           	callstack 0
   439                           
   440                           ; 1 bytes @ 0x4
   441  000064                     	ds	1
   442  000065                     ___fltol@exp1:
   443                           	callstack 0
   444                           
   445                           ; 1 bytes @ 0x5
   446  000065                     	ds	1
   447  000066                     ?_lroundf:
   448                           	callstack 0
   449  000066                     lroundf@x:
   450                           	callstack 0
   451                           
   452                           ; 4 bytes @ 0x6
   453  000066                     	ds	4
   454  00006A                     ?_amb_light_measure:
   455                           	callstack 0
   456  00006A                     compare@lower:
   457                           	callstack 0
   458  00006A                     amb_light_measure@amb:
   459                           	callstack 0
   460  00006A                     detect_wall@mL:
   461                           	callstack 0
   462                           
   463                           ; 2 bytes @ 0xA
   464  00006A                     	ds	2
   465  00006C                     ??_amb_light_measure:
   466  00006C                     compare@value2compare:
   467                           	callstack 0
   468  00006C                     detect_wall@mR:
   469                           	callstack 0
   470  00006C                     sprintf@ap:
   471                           	callstack 0
   472                           
   473                           ; 2 bytes @ 0xC
   474  00006C                     	ds	2
   475  00006E                     compare@upper:
   476                           	callstack 0
   477  00006E                     amb_light_measure@upper_bound:
   478                           	callstack 0
   479  00006E                     detect_wall@amb_light:
   480                           	callstack 0
   481  00006E                     sprintf@f:
   482                           	callstack 0
   483                           
   484                           ; 11 bytes @ 0xE
   485  00006E                     	ds	2
   486  000070                     ??_detect_wall:
   487  000070                     compare@result:
   488                           	callstack 0
   489  000070                     amb_light_measure@CC_amb_ave:
   490                           	callstack 0
   491                           
   492                           ; 2 bytes @ 0x10
   493  000070                     	ds	2
   494  000072                     amb_light_measure@CC_amb_1:
   495                           	callstack 0
   496  000072                     detect_wall@CG_amb:
   497                           	callstack 0
   498                           
   499                           ; 2 bytes @ 0x12
   500  000072                     	ds	2
   501  000074                     amb_light_measure@CC_amb_2:
   502                           	callstack 0
   503  000074                     _detect_wall$2943:
   504                           	callstack 0
   505                           
   506                           ; 4 bytes @ 0x14
   507  000074                     	ds	2
   508  000076                     amb_light_measure@CC_amb_3:
   509                           	callstack 0
   510                           
   511                           ; 2 bytes @ 0x16
   512  000076                     	ds	2
   513  000078                     ?_setup:
   514                           	callstack 0
   515  000078                     detect_wall@CC_amb:
   516                           	callstack 0
   517  000078                     setup@white:
   518                           	callstack 0
   519                           
   520                           ; 2 bytes @ 0x18
   521  000078                     	ds	1
   522  000079                     detect_color@m:
   523                           	callstack 0
   524  000079                     color_display@buf:
   525                           	callstack 0
   526  000079                     color_predict@buf:
   527                           	callstack 0
   528                           
   529                           ; 100 bytes @ 0x19
   530  000079                     	ds	1
   531  00007A                     detect_wall@threshold:
   532                           	callstack 0
   533  00007A                     setup@amb:
   534                           	callstack 0
   535                           
   536                           ; 2 bytes @ 0x1A
   537  00007A                     	ds	1
   538  00007B                     detect_color@w:
   539                           	callstack 0
   540                           
   541                           ; 2 bytes @ 0x1B
   542  00007B                     	ds	1
   543  00007C                     detect_wall@stop:
   544                           	callstack 0
   545  00007C                     setup@mL:
   546                           	callstack 0
   547                           
   548                           ; 2 bytes @ 0x1C
   549  00007C                     	ds	1
   550  00007D                     ??_detect_color:
   551                           
   552                           ; 1 bytes @ 0x1D
   553  00007D                     	ds	1
   554  00007E                     setup@mR:
   555                           	callstack 0
   556                           
   557                           ; 2 bytes @ 0x1E
   558  00007E                     	ds	2
   559  000080                     ??_setup:
   560                           
   561                           ; 1 bytes @ 0x20
   562  000080                     	ds	1
   563  000081                     detect_color@buf:
   564                           	callstack 0
   565                           
   566                           ; 100 bytes @ 0x21
   567  000081                     	ds	1
   568  000082                     setup@amb_light:
   569                           	callstack 0
   570                           
   571                           ; 2 bytes @ 0x22
   572  000082                     	ds	91
   573  0000DD                     color_predict@color:
   574                           	callstack 0
   575                           
   576                           ; 1 bytes @ 0x7D
   577  0000DD                     	ds	1
   578  0000DE                     color_data_collection@i:
   579                           	callstack 0
   580                           
   581                           ; 2 bytes @ 0x7E
   582  0000DE                     	ds	7
   583  0000E5                     detect_color@BC:
   584                           	callstack 0
   585                           
   586                           ; 2 bytes @ 0x85
   587  0000E5                     	ds	2
   588  0000E7                     detect_color@RG:
   589                           	callstack 0
   590                           
   591                           ; 2 bytes @ 0x87
   592  0000E7                     	ds	2
   593  0000E9                     detect_color@BR:
   594                           	callstack 0
   595                           
   596                           ; 2 bytes @ 0x89
   597  0000E9                     	ds	2
   598  0000EB                     detect_color@GR:
   599                           	callstack 0
   600                           
   601                           ; 2 bytes @ 0x8B
   602  0000EB                     	ds	2
   603  0000ED                     detect_color@RB:
   604                           	callstack 0
   605                           
   606                           ; 2 bytes @ 0x8D
   607  0000ED                     	ds	2
   608  0000EF                     detect_color@BB:
   609                           	callstack 0
   610                           
   611                           ; 2 bytes @ 0x8F
   612  0000EF                     	ds	2
   613  0000F1                     detect_color@GB:
   614                           	callstack 0
   615                           
   616                           ; 2 bytes @ 0x91
   617  0000F1                     	ds	2
   618  0000F3                     detect_color@GG:
   619                           	callstack 0
   620                           
   621                           ; 2 bytes @ 0x93
   622  0000F3                     	ds	2
   623  0000F5                     detect_color@color:
   624                           	callstack 0
   625                           
   626                           ; 1 bytes @ 0x95
   627  0000F5                     	ds	1
   628  0000F6                     detect_color@RR:
   629                           	callstack 0
   630                           
   631                           ; 2 bytes @ 0x96
   632  0000F6                     	ds	2
   633  0000F8                     detect_color@BG:
   634                           	callstack 0
   635                           
   636                           ; 2 bytes @ 0x98
   637  0000F8                     	ds	2
   638  0000FA                     _detect_color$2942:
   639                           	callstack 0
   640                           
   641                           ; 4 bytes @ 0x9A
   642  0000FA                     	ds	4
   643  0000FE                     ??_test_function:
   644  0000FE                     ??_verify_color:
   645                           
   646                           ; 1 bytes @ 0x9E
   647  0000FE                     	ds	2
   648                           
   649                           	psect	cstackCOMRAM
   650  000001                     __pcstackCOMRAM:
   651                           	callstack 0
   652  000001                     ??_LED_OFF:
   653  000001                     ??_LED_R:
   654  000001                     ??_LED_C:
   655  000001                     ??_LED_B:
   656  000001                     ??_LED_G:
   657  000001                     ??_I2C_2_Master_Idle:
   658  000001                     ?_strlen:
   659                           	callstack 0
   660  000001                     ?___wmul:
   661                           	callstack 0
   662  000001                     ?___fladd:
   663                           	callstack 0
   664  000001                     ?___flneg:
   665                           	callstack 0
   666  000001                     ?___xxtofl:
   667                           	callstack 0
   668  000001                     ?___aodiv:
   669                           	callstack 0
   670  000001                     ?___aomod:
   671                           	callstack 0
   672  000001                     toggle_light@toggletime:
   673                           	callstack 0
   674  000001                     sendCharSerial4@charToSend:
   675                           	callstack 0
   676  000001                     initDCmotorsPWM@PWMperiod:
   677                           	callstack 0
   678  000001                     initDCmotors_parameter@motorL:
   679                           	callstack 0
   680  000001                     ___wmul@multiplier:
   681                           	callstack 0
   682  000001                     fputc@c:
   683                           	callstack 0
   684  000001                     strlen@s:
   685                           	callstack 0
   686  000001                     ___flge@ff1:
   687                           	callstack 0
   688  000001                     ___flneg@f1:
   689                           	callstack 0
   690  000001                     ___fladd@b:
   691                           	callstack 0
   692  000001                     ___xxtofl@val:
   693                           	callstack 0
   694  000001                     ___aodiv@dividend:
   695                           	callstack 0
   696  000001                     ___aomod@dividend:
   697                           	callstack 0
   698                           
   699                           ; 8 bytes @ 0x0
   700  000001                     	ds	1
   701  000002                     ??_I2C_2_Master_Read:
   702  000002                     ??_toggle_light:
   703  000002                     I2C_2_Master_Write@data_byte:
   704                           	callstack 0
   705  000002                     sendStringSerial4@string:
   706                           	callstack 0
   707                           
   708                           ; 2 bytes @ 0x1
   709  000002                     	ds	1
   710  000003                     color_writetoaddr@value:
   711                           	callstack 0
   712  000003                     I2C_2_Master_Read@ack:
   713                           	callstack 0
   714  000003                     initDCmotors_parameter@motorR:
   715                           	callstack 0
   716  000003                     ___wmul@multiplicand:
   717                           	callstack 0
   718  000003                     fputc@fp:
   719                           	callstack 0
   720  000003                     strlen@a:
   721                           	callstack 0
   722                           
   723                           ; 2 bytes @ 0x2
   724  000003                     	ds	1
   725  000004                     toggle_light@i:
   726                           	callstack 0
   727  000004                     color_writetoaddr@address:
   728                           	callstack 0
   729  000004                     I2C_2_Master_Read@tmp:
   730                           	callstack 0
   731                           
   732                           ; 1 bytes @ 0x3
   733  000004                     	ds	1
   734  000005                     ??_fputc:
   735  000005                     ??_color_click_init:
   736  000005                     ??___xxtofl:
   737  000005                     ?_color_read_Red:
   738                           	callstack 0
   739  000005                     ?_color_read_Blue:
   740                           	callstack 0
   741  000005                     ?_color_read_Green:
   742                           	callstack 0
   743  000005                     ?_color_read_Clear:
   744                           	callstack 0
   745  000005                     toggle_light@lightnumber:
   746                           	callstack 0
   747  000005                     ___wmul@product:
   748                           	callstack 0
   749  000005                     ___flge@ff2:
   750                           	callstack 0
   751  000005                     ___fladd@a:
   752                           	callstack 0
   753                           
   754                           ; 4 bytes @ 0x4
   755  000005                     	ds	2
   756  000007                     ??_color_read_Red:
   757  000007                     ??_color_read_Blue:
   758  000007                     ??_color_read_Green:
   759  000007                     ??_color_read_Clear:
   760  000007                     ?___awdiv:
   761                           	callstack 0
   762  000007                     ___awdiv@dividend:
   763                           	callstack 0
   764                           
   765                           ; 2 bytes @ 0x6
   766  000007                     	ds	2
   767  000009                     ??___fladd:
   768  000009                     ??___flge:
   769  000009                     ___xxtofl@sign:
   770                           	callstack 0
   771  000009                     ___awdiv@divisor:
   772                           	callstack 0
   773  000009                     ___aodiv@divisor:
   774                           	callstack 0
   775  000009                     ___aomod@divisor:
   776                           	callstack 0
   777                           
   778                           ; 8 bytes @ 0x8
   779  000009                     	ds	1
   780  00000A                     ___xxtofl@exp:
   781                           	callstack 0
   782  00000A                     color_read_Red@tmp:
   783                           	callstack 0
   784  00000A                     color_read_Blue@tmp:
   785                           	callstack 0
   786  00000A                     color_read_Green@tmp:
   787                           	callstack 0
   788  00000A                     color_read_Clear@tmp:
   789                           	callstack 0
   790  00000A                     fputs@s:
   791                           	callstack 0
   792                           
   793                           ; 2 bytes @ 0x9
   794  00000A                     	ds	1
   795  00000B                     ___awdiv@counter:
   796                           	callstack 0
   797  00000B                     ___xxtofl@arg:
   798                           	callstack 0
   799                           
   800                           ; 4 bytes @ 0xA
   801  00000B                     	ds	1
   802  00000C                     ___awdiv@sign:
   803                           	callstack 0
   804  00000C                     read_color@m:
   805                           	callstack 0
   806  00000C                     calibrate_white@w:
   807                           	callstack 0
   808  00000C                     fputs@fp:
   809                           	callstack 0
   810                           
   811                           ; 2 bytes @ 0xB
   812  00000C                     	ds	1
   813  00000D                     ___fladd@signs:
   814                           	callstack 0
   815  00000D                     ___awdiv@quotient:
   816                           	callstack 0
   817                           
   818                           ; 2 bytes @ 0xC
   819  00000D                     	ds	1
   820  00000E                     ??_calibrate_white:
   821  00000E                     ___fladd@aexp:
   822                           	callstack 0
   823  00000E                     fputs@c:
   824                           	callstack 0
   825                           
   826                           ; 1 bytes @ 0xD
   827  00000E                     	ds	1
   828  00000F                     ?___fldiv:
   829                           	callstack 0
   830  00000F                     ___fladd@bexp:
   831                           	callstack 0
   832  00000F                     setMotorPWM@m:
   833                           	callstack 0
   834  00000F                     fputs@i:
   835                           	callstack 0
   836  00000F                     ___fldiv@b:
   837                           	callstack 0
   838                           
   839                           ; 4 bytes @ 0xE
   840  00000F                     	ds	1
   841  000010                     ___fladd@grs:
   842                           	callstack 0
   843                           
   844                           ; 1 bytes @ 0xF
   845  000010                     	ds	1
   846  000011                     ??_setMotorPWM:
   847  000011                     ?_pad:
   848                           	callstack 0
   849  000011                     ?___flsub:
   850                           	callstack 0
   851  000011                     ___aodiv@counter:
   852                           	callstack 0
   853  000011                     ___aomod@counter:
   854                           	callstack 0
   855  000011                     pad@fp:
   856                           	callstack 0
   857  000011                     ___flsub@b:
   858                           	callstack 0
   859                           
   860                           ; 4 bytes @ 0x10
   861  000011                     	ds	1
   862  000012                     ___aodiv@sign:
   863                           	callstack 0
   864  000012                     ___aomod@sign:
   865                           	callstack 0
   866                           
   867                           ; 1 bytes @ 0x11
   868  000012                     	ds	1
   869  000013                     ?_abs:
   870                           	callstack 0
   871  000013                     pad@buf:
   872                           	callstack 0
   873  000013                     abs@a:
   874                           	callstack 0
   875  000013                     ___fldiv@a:
   876                           	callstack 0
   877  000013                     ___aodiv@quotient:
   878                           	callstack 0
   879                           
   880                           ; 8 bytes @ 0x12
   881  000013                     	ds	2
   882  000015                     ??_abs:
   883  000015                     pad@p:
   884                           	callstack 0
   885  000015                     ___flsub@a:
   886                           	callstack 0
   887                           
   888                           ; 4 bytes @ 0x14
   889  000015                     	ds	2
   890  000017                     ??___fldiv:
   891  000017                     ??_pad:
   892                           
   893                           ; 1 bytes @ 0x16
   894  000017                     	ds	1
   895  000018                     setMotorPWM@PWMduty:
   896                           	callstack 0
   897  000018                     pad@i:
   898                           	callstack 0
   899                           
   900                           ; 2 bytes @ 0x17
   901  000018                     	ds	1
   902  000019                     
   903                           ; 1 bytes @ 0x18
   904  000019                     	ds	1
   905  00001A                     stop@mL:
   906                           	callstack 0
   907  00001A                     fullSpeedAhead@mL:
   908                           	callstack 0
   909  00001A                     pad@w:
   910                           	callstack 0
   911                           
   912                           ; 2 bytes @ 0x19
   913  00001A                     	ds	1
   914  00001B                     ___fldiv@rem:
   915                           	callstack 0
   916                           
   917                           ; 4 bytes @ 0x1A
   918  00001B                     	ds	1
   919  00001C                     ?_dtoa:
   920                           	callstack 0
   921  00001C                     stop@mR:
   922                           	callstack 0
   923  00001C                     fullSpeedAhead@mR:
   924                           	callstack 0
   925  00001C                     dtoa@fp:
   926                           	callstack 0
   927                           
   928                           ; 2 bytes @ 0x1B
   929  00001C                     	ds	2
   930  00001E                     ??_stop:
   931  00001E                     ??_fullSpeedAhead:
   932  00001E                     dtoa@d:
   933                           	callstack 0
   934                           
   935                           ; 8 bytes @ 0x1D
   936  00001E                     	ds	1
   937  00001F                     ___fldiv@sign:
   938                           	callstack 0
   939                           
   940                           ; 1 bytes @ 0x1E
   941  00001F                     	ds	1
   942  000020                     turn45@mL:
   943                           	callstack 0
   944  000020                     fullSpeedBack@mL:
   945                           	callstack 0
   946  000020                     short_burst@mL:
   947                           	callstack 0
   948  000020                     ___fldiv@new_exp:
   949                           	callstack 0
   950                           
   951                           ; 2 bytes @ 0x1F
   952  000020                     	ds	2
   953  000022                     turn45@mR:
   954                           	callstack 0
   955  000022                     fullSpeedBack@mR:
   956                           	callstack 0
   957  000022                     short_burst@mR:
   958                           	callstack 0
   959  000022                     ___fldiv@grs:
   960                           	callstack 0
   961                           
   962                           ; 4 bytes @ 0x21
   963  000022                     	ds	2
   964  000024                     ??_short_burst:
   965  000024                     turn45@turn_time:
   966                           	callstack 0
   967  000024                     fullSpeedBack@instruction:
   968                           	callstack 0
   969                           
   970                           ; 1 bytes @ 0x23
   971  000024                     	ds	1
   972  000025                     ??_fullSpeedBack:
   973  000025                     turn45@direction:
   974                           	callstack 0
   975                           
   976                           ; 1 bytes @ 0x24
   977  000025                     	ds	1
   978  000026                     ??_turn45:
   979  000026                     ??_dtoa:
   980  000026                     ___fldiv@bexp:
   981                           	callstack 0
   982                           
   983                           ; 1 bytes @ 0x25
   984  000026                     	ds	1
   985  000027                     ___fldiv@aexp:
   986                           	callstack 0
   987                           
   988                           ; 1 bytes @ 0x26
   989  000027                     	ds	1
   990  000028                     ?___flmul:
   991                           	callstack 0
   992  000028                     turn45@i_1340:
   993                           	callstack 0
   994  000028                     ___flmul@b:
   995                           	callstack 0
   996                           
   997                           ; 4 bytes @ 0x27
   998  000028                     	ds	2
   999  00002A                     turn45@i_1342:
  1000                           	callstack 0
  1001                           
  1002                           ; 2 bytes @ 0x29
  1003  00002A                     	ds	2
  1004  00002C                     turn45@i:
  1005                           	callstack 0
  1006  00002C                     ___flmul@a:
  1007                           	callstack 0
  1008                           
  1009                           ; 4 bytes @ 0x2B
  1010  00002C                     	ds	1
  1011  00002D                     goback@mL:
  1012                           	callstack 0
  1013  00002D                     test_action@mL:
  1014                           	callstack 0
  1015                           
  1016                           ; 2 bytes @ 0x2C
  1017  00002D                     	ds	1
  1018  00002E                     _dtoa$2614:
  1019                           	callstack 0
  1020                           
  1021                           ; 2 bytes @ 0x2D
  1022  00002E                     	ds	1
  1023  00002F                     goback@mR:
  1024                           	callstack 0
  1025  00002F                     test_action@mR:
  1026                           	callstack 0
  1027                           
  1028                           ; 2 bytes @ 0x2E
  1029  00002F                     	ds	1
  1030  000030                     ??___flmul:
  1031  000030                     dtoa@p:
  1032                           	callstack 0
  1033                           
  1034                           ; 2 bytes @ 0x2F
  1035  000030                     	ds	1
  1036  000031                     ??_goback:
  1037  000031                     ??_test_action:
  1038                           
  1039                           ; 1 bytes @ 0x30
  1040  000031                     	ds	1
  1041  000032                     dtoa@w:
  1042                           	callstack 0
  1043                           
  1044                           ; 2 bytes @ 0x31
  1045  000032                     	ds	1
  1046  000033                     goback@i:
  1047                           	callstack 0
  1048  000033                     calibration_motor@mL:
  1049                           	callstack 0
  1050                           
  1051                           ; 2 bytes @ 0x32
  1052  000033                     	ds	1
  1053  000034                     ___flmul@sign:
  1054                           	callstack 0
  1055  000034                     dtoa@s:
  1056                           	callstack 0
  1057                           
  1058                           ; 2 bytes @ 0x33
  1059  000034                     	ds	1
  1060  000035                     turning_action@mL:
  1061                           	callstack 0
  1062  000035                     calibration_motor@mR:
  1063                           	callstack 0
  1064  000035                     ___flmul@grs:
  1065                           	callstack 0
  1066                           
  1067                           ; 4 bytes @ 0x34
  1068  000035                     	ds	1
  1069  000036                     dtoa@n:
  1070                           	callstack 0
  1071                           
  1072                           ; 8 bytes @ 0x35
  1073  000036                     	ds	1
  1074  000037                     ??_calibration_motor:
  1075  000037                     turning_action@mR:
  1076                           	callstack 0
  1077                           
  1078                           ; 2 bytes @ 0x36
  1079  000037                     	ds	2
  1080  000039                     turning_action@color:
  1081                           	callstack 0
  1082  000039                     ___flmul@aexp:
  1083                           	callstack 0
  1084                           
  1085                           ; 1 bytes @ 0x38
  1086  000039                     	ds	1
  1087  00003A                     ___flmul@bexp:
  1088                           	callstack 0
  1089                           
  1090                           ; 1 bytes @ 0x39
  1091  00003A                     	ds	1
  1092  00003B                     ___flmul@prod:
  1093                           	callstack 0
  1094                           
  1095                           ; 4 bytes @ 0x3A
  1096  00003B                     	ds	3
  1097  00003E                     dtoa@i:
  1098                           	callstack 0
  1099                           
  1100                           ; 2 bytes @ 0x3D
  1101  00003E                     	ds	1
  1102  00003F                     ___flmul@temp:
  1103                           	callstack 0
  1104                           
  1105                           ; 2 bytes @ 0x3E
  1106  00003F                     	ds	1
  1107  000040                     ?_vfpfcnvrt:
  1108                           	callstack 0
  1109  000040                     vfpfcnvrt@fp:
  1110                           	callstack 0
  1111                           
  1112                           ; 2 bytes @ 0x3F
  1113  000040                     	ds	1
  1114  000041                     ?_roundf:
  1115                           	callstack 0
  1116  000041                     roundf@x:
  1117                           	callstack 0
  1118                           
  1119                           ; 4 bytes @ 0x40
  1120  000041                     	ds	1
  1121  000042                     vfpfcnvrt@fmt:
  1122                           	callstack 0
  1123                           
  1124                           ; 2 bytes @ 0x41
  1125  000042                     	ds	2
  1126  000044                     vfpfcnvrt@ap:
  1127                           	callstack 0
  1128                           
  1129                           ; 2 bytes @ 0x43
  1130  000044                     	ds	1
  1131  000045                     ??_roundf:
  1132                           
  1133                           ; 1 bytes @ 0x44
  1134  000045                     	ds	1
  1135  000046                     ??_vfpfcnvrt:
  1136                           
  1137                           ; 1 bytes @ 0x45
  1138  000046                     	ds	2
  1139  000048                     vfpfcnvrt@ll:
  1140                           	callstack 0
  1141                           
  1142                           ; 8 bytes @ 0x47
  1143  000048                     	ds	1
  1144  000049                     _roundf$2945:
  1145                           	callstack 0
  1146                           
  1147                           ; 4 bytes @ 0x48
  1148  000049                     	ds	4
  1149  00004D                     roundf@e:
  1150                           	callstack 0
  1151                           
  1152                           ; 2 bytes @ 0x4C
  1153  00004D                     	ds	2
  1154  00004F                     _roundf$2944:
  1155                           	callstack 0
  1156                           
  1157                           ; 4 bytes @ 0x4E
  1158  00004F                     	ds	1
  1159  000050                     ?_vfprintf:
  1160                           	callstack 0
  1161  000050                     vfprintf@fp:
  1162                           	callstack 0
  1163                           
  1164                           ; 2 bytes @ 0x4F
  1165  000050                     	ds	2
  1166  000052                     vfprintf@fmt:
  1167                           	callstack 0
  1168                           
  1169                           ; 2 bytes @ 0x51
  1170  000052                     	ds	1
  1171  000053                     roundf@u:
  1172                           	callstack 0
  1173                           
  1174                           ; 4 bytes @ 0x52
  1175  000053                     	ds	1
  1176  000054                     vfprintf@ap:
  1177                           	callstack 0
  1178                           
  1179                           ; 2 bytes @ 0x53
  1180  000054                     	ds	2
  1181  000056                     vfprintf@cfmt:
  1182                           	callstack 0
  1183                           
  1184                           ; 2 bytes @ 0x55
  1185  000056                     	ds	1
  1186  000057                     roundf@y:
  1187                           	callstack 0
  1188                           
  1189                           ; 4 bytes @ 0x56
  1190  000057                     	ds	1
  1191  000058                     color_display@m:
  1192                           	callstack 0
  1193                           
  1194                           ; 2 bytes @ 0x57
  1195  000058                     	ds	2
  1196  00005A                     color_data_collection@m:
  1197                           	callstack 0
  1198                           
  1199                           ; 2 bytes @ 0x59
  1200  00005A                     	ds	1
  1201  00005B                     ?___fltol:
  1202                           	callstack 0
  1203  00005B                     ___fltol@f1:
  1204                           	callstack 0
  1205                           
  1206                           ; 4 bytes @ 0x5A
  1207  00005B                     	ds	1
  1208  00005C                     ??_color_data_collection:
  1209                           
  1210                           ; 1 bytes @ 0x5B
  1211  00005C                     	ds	3
  1212  00005F                     
  1213                           ; 1 bytes @ 0x5E
  1214 ;;
  1215 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  1216 ;;
  1217 ;; *************** function _main *****************
  1218 ;; Defined at:
  1219 ;;		line 27 in file "main.c"
  1220 ;; Parameters:    Size  Location     Type
  1221 ;;		None
  1222 ;; Auto vars:     Size  Location     Type
  1223 ;;  white          28   42[BANK1 ] struct white_card
  1224 ;;  motorR          9   79[BANK1 ] struct DC_motor
  1225 ;;  motorL          9   70[BANK1 ] struct DC_motor
  1226 ;;  rgb             8   34[BANK1 ] struct color_rgb
  1227 ;;  amb             8   18[BANK1 ] struct color_rgb
  1228 ;;  stop_time       2   32[BANK1 ] unsigned int 
  1229 ;;  start_time      2   30[BANK1 ] unsigned int 
  1230 ;;  amb_light       2   26[BANK1 ] unsigned int 
  1231 ;;  accident        1   29[BANK1 ] unsigned char 
  1232 ;;  stop_signal     1   28[BANK1 ] unsigned char 
  1233 ;; Return value:  Size  Location     Type
  1234 ;;                  1    wreg      void 
  1235 ;; Registers used:
  1236 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1237 ;; Tracked objects:
  1238 ;;		On entry : 0/0
  1239 ;;		On exit  : 0/0
  1240 ;;		Unchanged: 0/0
  1241 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1242 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1243 ;;      Locals:         0       0      70       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1244 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1245 ;;      Totals:         0       0      74       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1246 ;;Total ram usage:       74 bytes
  1247 ;; Hardware stack levels required when called: 12
  1248 ;; This function calls:
  1249 ;;		_Interrupts_init
  1250 ;;		_Timer0_init
  1251 ;;		_color_click_init
  1252 ;;		_detect_color
  1253 ;;		_detect_wall
  1254 ;;		_fullSpeedAhead
  1255 ;;		_goback
  1256 ;;		_initDCmotorsPWM
  1257 ;;		_initDCmotors_parameter
  1258 ;;		_initUSART4
  1259 ;;		_pin_init
  1260 ;;		_setup
  1261 ;;		_short_burst
  1262 ;;		_stop
  1263 ;;		_test_function
  1264 ;;		_turning_action
  1265 ;;		_verify_color
  1266 ;; This function is called by:
  1267 ;;		Startup code after reset
  1268 ;; This function uses a non-reentrant model
  1269 ;;
  1270                           
  1271                           	psect	text0
  1272  003B2A                     __ptext0:
  1273                           	callstack 0
  1274  003B2A                     _main:
  1275                           	callstack 19
  1276  003B2A                     
  1277                           ;main.c: 29:     struct color_rgb rgb, amb;;main.c: 30:     struct white_card white;;mai
      +                          n.c: 31:     struct DC_motor motorL, motorR;;main.c: 35:     color_click_init();
  1278  003B2A  ECAA  F02E         	call	_color_click_init	;wreg free
  1279  003B2E                     
  1280                           ;main.c: 36:     pin_init();
  1281  003B2E  EC90  F02E         	call	_pin_init	;wreg free
  1282  003B32                     
  1283                           ;main.c: 37:     initDCmotorsPWM(199);
  1284  003B32  0E00               	movlw	0
  1285  003B34  6E02               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
  1286  003B36  0EC7               	movlw	199
  1287  003B38  6E01               	movwf	initDCmotorsPWM@PWMperiod^0,c
  1288  003B3A  ECC3  F02D         	call	_initDCmotorsPWM	;wreg free
  1289  003B3E                     
  1290                           ;main.c: 38:     initDCmotors_parameter(&motorL, &motorR);
  1291  003B3E  0EEC               	movlw	low main@motorL
  1292  003B40  6E01               	movwf	initDCmotors_parameter@motorL^0,c
  1293  003B42  0E01               	movlw	high main@motorL
  1294  003B44  6E02               	movwf	(initDCmotors_parameter@motorL+1)^0,c
  1295  003B46  0EF5               	movlw	low main@motorR
  1296  003B48  6E03               	movwf	initDCmotors_parameter@motorR^0,c
  1297  003B4A  0E01               	movlw	high main@motorR
  1298  003B4C  6E04               	movwf	(initDCmotors_parameter@motorR+1)^0,c
  1299  003B4E  ECDF  F028         	call	_initDCmotors_parameter	;wreg free
  1300  003B52                     
  1301                           ;main.c: 39:     initUSART4();
  1302  003B52  EC8F  F02F         	call	_initUSART4	;wreg free
  1303  003B56                     
  1304                           ;main.c: 40:     Timer0_init();
  1305  003B56  EC9E  F02F         	call	_Timer0_init	;wreg free
  1306  003B5A                     
  1307                           ;main.c: 41:     Interrupts_init();
  1308  003B5A  ECBF  F02F         	call	_Interrupts_init	;wreg free
  1309  003B5E                     
  1310                           ;main.c: 43:     unsigned char stop_signal = 0;
  1311  003B5E  0E00               	movlw	0
  1312  003B60  0101               	movlb	1	; () banked
  1313  003B62  6FC2               	movwf	main@stop_signal& (0+255),b
  1314  003B64                     
  1315                           ; BSR set to: 1
  1316                           ;main.c: 45:     unsigned char accident = 0;
  1317  003B64  0E00               	movlw	0
  1318  003B66  6FC3               	movwf	main@accident& (0+255),b
  1319  003B68                     
  1320                           ; BSR set to: 1
  1321                           ;main.c: 50:         amb_light = setup(&white, &amb, &motorL, &motorR);
  1322  003B68  0ED0               	movlw	low main@white
  1323  003B6A  0100               	movlb	0	; () banked
  1324  003B6C  6F78               	movwf	setup@white& (0+255),b
  1325  003B6E  0E01               	movlw	high main@white
  1326  003B70  6F79               	movwf	(setup@white+1)& (0+255),b
  1327  003B72  0EB8               	movlw	low main@amb
  1328  003B74  6F7A               	movwf	setup@amb& (0+255),b
  1329  003B76  0E01               	movlw	high main@amb
  1330  003B78  6F7B               	movwf	(setup@amb+1)& (0+255),b
  1331  003B7A  0EEC               	movlw	low main@motorL
  1332  003B7C  6F7C               	movwf	setup@mL& (0+255),b
  1333  003B7E  0E01               	movlw	high main@motorL
  1334  003B80  6F7D               	movwf	(setup@mL+1)& (0+255),b
  1335  003B82  0EF5               	movlw	low main@motorR
  1336  003B84  6F7E               	movwf	setup@mR& (0+255),b
  1337  003B86  0E01               	movlw	high main@motorR
  1338  003B88  6F7F               	movwf	(setup@mR+1)& (0+255),b
  1339  003B8A  EC5A  F024         	call	_setup	;wreg free
  1340  003B8E  C078  F1C0         	movff	?_setup,main@amb_light
  1341  003B92  C079  F1C1         	movff	?_setup+1,main@amb_light+1
  1342  003B96                     l5322:
  1343                           
  1344                           ;main.c: 56:             T0CON0bits.T0EN=1;
  1345  003B96  8ED5               	bsf	213,7,c	;volatile
  1346  003B98                     
  1347                           ;main.c: 57:             start_time = centisecond;
  1348  003B98  C182  F1C4         	movff	_centisecond,main@start_time
  1349  003B9C  C183  F1C5         	movff	_centisecond+1,main@start_time+1
  1350                           
  1351                           ;main.c: 58:             while (stop_signal == 0){
  1352  003BA0  EFED  F01D         	goto	l5330
  1353  003BA4                     l5326:
  1354                           
  1355                           ; BSR set to: 1
  1356                           ;main.c: 59:                 fullSpeedAhead(&motorL, &motorR);
  1357  003BA4  0EEC               	movlw	low main@motorL
  1358  003BA6  6E1A               	movwf	fullSpeedAhead@mL^0,c
  1359  003BA8  0E01               	movlw	high main@motorL
  1360  003BAA  6E1B               	movwf	(fullSpeedAhead@mL+1)^0,c
  1361  003BAC  0EF5               	movlw	low main@motorR
  1362  003BAE  6E1C               	movwf	fullSpeedAhead@mR^0,c
  1363  003BB0  0E01               	movlw	high main@motorR
  1364  003BB2  6E1D               	movwf	(fullSpeedAhead@mR+1)^0,c
  1365  003BB4  EC73  F02A         	call	_fullSpeedAhead	;wreg free
  1366  003BB8                     
  1367                           ;main.c: 60:                 stop_signal = detect_wall(&motorL, &motorR, amb_light);
  1368  003BB8  0EEC               	movlw	low main@motorL
  1369  003BBA  0100               	movlb	0	; () banked
  1370  003BBC  6F6A               	movwf	detect_wall@mL& (0+255),b
  1371  003BBE  0E01               	movlw	high main@motorL
  1372  003BC0  6F6B               	movwf	(detect_wall@mL+1)& (0+255),b
  1373  003BC2  0EF5               	movlw	low main@motorR
  1374  003BC4  6F6C               	movwf	detect_wall@mR& (0+255),b
  1375  003BC6  0E01               	movlw	high main@motorR
  1376  003BC8  6F6D               	movwf	(detect_wall@mR+1)& (0+255),b
  1377  003BCA  C1C0  F06E         	movff	main@amb_light,detect_wall@amb_light
  1378  003BCE  C1C1  F06F         	movff	main@amb_light+1,detect_wall@amb_light+1
  1379  003BD2  ECAD  F029         	call	_detect_wall	;wreg free
  1380  003BD6  0101               	movlb	1	; () banked
  1381  003BD8  6FC2               	movwf	main@stop_signal& (0+255),b
  1382  003BDA                     l5330:
  1383                           
  1384                           ;main.c: 58:             while (stop_signal == 0){
  1385  003BDA  0101               	movlb	1	; () banked
  1386  003BDC  51C2               	movf	main@stop_signal& (0+255),w,b
  1387  003BDE  B4D8               	btfsc	status,2,c
  1388  003BE0  EFF4  F01D         	goto	u5791
  1389  003BE4  EFF6  F01D         	goto	u5790
  1390  003BE8                     u5791:
  1391  003BE8  EFD2  F01D         	goto	l5326
  1392  003BEC                     u5790:
  1393  003BEC                     
  1394                           ; BSR set to: 1
  1395                           ;main.c: 63:             T0CON0bits.T0EN=0;
  1396  003BEC  9ED5               	bcf	213,7,c	;volatile
  1397                           
  1398                           ;main.c: 64:             stop_time = centisecond;
  1399  003BEE  C182  F1C6         	movff	_centisecond,main@stop_time
  1400  003BF2  C183  F1C7         	movff	_centisecond+1,main@stop_time+1
  1401  003BF6                     
  1402                           ; BSR set to: 1
  1403                           ;main.c: 65:             if ((stop_time-start_time)>10){
  1404  003BF6  51C4               	movf	main@start_time& (0+255),w,b
  1405  003BF8  5DC6               	subwf	main@stop_time& (0+255),w,b
  1406  003BFA  6FB4               	movwf	??_main& (0+255),b
  1407  003BFC  51C5               	movf	(main@start_time+1)& (0+255),w,b
  1408  003BFE  59C7               	subwfb	(main@stop_time+1)& (0+255),w,b
  1409  003C00  6FB5               	movwf	(??_main+1)& (0+255),b
  1410  003C02  51B5               	movf	(??_main+1)& (0+255),w,b
  1411  003C04  E109               	bnz	u5800
  1412  003C06  0E0B               	movlw	11
  1413  003C08  5DB4               	subwf	??_main& (0+255),w,b
  1414  003C0A  A0D8               	btfss	status,0,c
  1415  003C0C  EF0A  F01E         	goto	u5801
  1416  003C10  EF0C  F01E         	goto	u5800
  1417  003C14                     u5801:
  1418  003C14  EF29  F01E         	goto	l5338
  1419  003C18                     u5800:
  1420  003C18                     
  1421                           ; BSR set to: 1
  1422                           ;main.c: 66:                 memory[array_index] = (stop_time-start_time-3);
  1423  003C18  0EFD               	movlw	253
  1424  003C1A  6FB4               	movwf	??_main& (0+255),b
  1425  003C1C  0EFF               	movlw	255
  1426  003C1E  6FB5               	movwf	(??_main+1)& (0+255),b
  1427  003C20  51C4               	movf	main@start_time& (0+255),w,b
  1428  003C22  5DC6               	subwf	main@stop_time& (0+255),w,b
  1429  003C24  6FB6               	movwf	(??_main+2)& (0+255),b
  1430  003C26  51C5               	movf	(main@start_time+1)& (0+255),w,b
  1431  003C28  59C7               	subwfb	(main@stop_time+1)& (0+255),w,b
  1432  003C2A  6FB7               	movwf	(??_main+3)& (0+255),b
  1433  003C2C  51B4               	movf	??_main& (0+255),w,b
  1434  003C2E  27B6               	addwf	(??_main+2)& (0+255),f,b
  1435  003C30  51B5               	movf	(??_main+1)& (0+255),w,b
  1436  003C32  23B7               	addwfc	(??_main+3)& (0+255),f,b
  1437  003C34  5185               	movf	_array_index& (0+255),w,b
  1438  003C36  0D02               	mullw	2
  1439  003C38  0E00               	movlw	low _memory
  1440  003C3A  24F3               	addwf	243,w,c
  1441  003C3C  6ED9               	movwf	fsr2l,c
  1442  003C3E  0E01               	movlw	high _memory
  1443  003C40  20F4               	addwfc	prodh,w,c
  1444  003C42  6EDA               	movwf	fsr2h,c
  1445  003C44  C1B6  FFDE         	movff	??_main+2,postinc2
  1446  003C48  C1B7  FFDD         	movff	??_main+3,postdec2
  1447  003C4C                     
  1448                           ; BSR set to: 1
  1449                           ;main.c: 67:                 array_index++;
  1450  003C4C  2B85               	incf	_array_index& (0+255),f,b
  1451                           
  1452                           ;main.c: 68:             }
  1453  003C4E  EF3F  F01E         	goto	l5346
  1454  003C52                     l5338:
  1455                           
  1456                           ; BSR set to: 1
  1457                           ;main.c: 70:                 accident++;
  1458  003C52  2BC3               	incf	main@accident& (0+255),f,b
  1459  003C54                     
  1460                           ; BSR set to: 1
  1461                           ;main.c: 71:                 if (accident >= 5){
  1462  003C54  0E04               	movlw	4
  1463  003C56  65C3               	cpfsgt	main@accident& (0+255),b
  1464  003C58  EF30  F01E         	goto	u5811
  1465  003C5C  EF32  F01E         	goto	u5810
  1466  003C60                     u5811:
  1467  003C60  EF3F  F01E         	goto	l5346
  1468  003C64                     u5810:
  1469  003C64                     
  1470                           ; BSR set to: 1
  1471                           ;main.c: 72:                     goback(&motorL, &motorR);
  1472  003C64  0EEC               	movlw	low main@motorL
  1473  003C66  6E2D               	movwf	goback@mL^0,c
  1474  003C68  0E01               	movlw	high main@motorL
  1475  003C6A  6E2E               	movwf	(goback@mL+1)^0,c
  1476  003C6C  0EF5               	movlw	low main@motorR
  1477  003C6E  6E2F               	movwf	goback@mR^0,c
  1478  003C70  0E01               	movlw	high main@motorR
  1479  003C72  6E30               	movwf	(goback@mR+1)^0,c
  1480  003C74  ECB2  F014         	call	_goback	;wreg free
  1481  003C78                     
  1482                           ;main.c: 73:                     accident = 0;
  1483  003C78  0E00               	movlw	0
  1484  003C7A  0101               	movlb	1	; () banked
  1485  003C7C  6FC3               	movwf	main@accident& (0+255),b
  1486  003C7E                     l5346:
  1487                           
  1488                           ; BSR set to: 1
  1489                           ;main.c: 76:             stop(&motorL, &motorR);
  1490  003C7E  0EEC               	movlw	low main@motorL
  1491  003C80  6E1A               	movwf	stop@mL^0,c
  1492  003C82  0E01               	movlw	high main@motorL
  1493  003C84  6E1B               	movwf	(stop@mL+1)^0,c
  1494  003C86  0EF5               	movlw	low main@motorR
  1495  003C88  6E1C               	movwf	stop@mR^0,c
  1496  003C8A  0E01               	movlw	high main@motorR
  1497  003C8C  6E1D               	movwf	(stop@mR+1)^0,c
  1498  003C8E  EC37  F02B         	call	_stop	;wreg free
  1499  003C92                     
  1500                           ;main.c: 77:             _delay((unsigned long)((1000)*(64000000/4000.0)));
  1501  003C92  0E52               	movlw	82
  1502  003C94  0101               	movlb	1	; () banked
  1503  003C96  6FB5               	movwf	(??_main+1)& (0+255),b
  1504  003C98  0E2B               	movlw	43
  1505  003C9A  6FB4               	movwf	??_main& (0+255),b
  1506  003C9C  0E00               	movlw	0
  1507  003C9E                     u5847:
  1508  003C9E  2EE8               	decfsz	wreg,f,c
  1509  003CA0  D7FE               	bra	u5847
  1510  003CA2  2FB4               	decfsz	??_main& (0+255),f,b
  1511  003CA4  D7FC               	bra	u5847
  1512  003CA6  2FB5               	decfsz	(??_main+1)& (0+255),f,b
  1513  003CA8  D7FA               	bra	u5847
  1514  003CAA  F000               	nop	
  1515  003CAC                     
  1516                           ;main.c: 78:             short_burst(&motorL, &motorR);
  1517  003CAC  0EEC               	movlw	low main@motorL
  1518  003CAE  6E20               	movwf	short_burst@mL^0,c
  1519  003CB0  0E01               	movlw	high main@motorL
  1520  003CB2  6E21               	movwf	(short_burst@mL+1)^0,c
  1521  003CB4  0EF5               	movlw	low main@motorR
  1522  003CB6  6E22               	movwf	short_burst@mR^0,c
  1523  003CB8  0E01               	movlw	high main@motorR
  1524  003CBA  6E23               	movwf	(short_burst@mR+1)^0,c
  1525  003CBC  EC81  F02D         	call	_short_burst	;wreg free
  1526  003CC0                     
  1527                           ;main.c: 79:             color = detect_color(&rgb, &white);
  1528  003CC0  0EC8               	movlw	low main@rgb
  1529  003CC2  0100               	movlb	0	; () banked
  1530  003CC4  6F79               	movwf	detect_color@m& (0+255),b
  1531  003CC6  0E01               	movlw	high main@rgb
  1532  003CC8  6F7A               	movwf	(detect_color@m+1)& (0+255),b
  1533  003CCA  0ED0               	movlw	low main@white
  1534  003CCC  6F7B               	movwf	detect_color@w& (0+255),b
  1535  003CCE  0E01               	movlw	high main@white
  1536  003CD0  6F7C               	movwf	(detect_color@w+1)& (0+255),b
  1537  003CD2  EC0A  F007         	call	_detect_color	;wreg free
  1538  003CD6  0101               	movlb	1	; () banked
  1539  003CD8  6F84               	movwf	_color& (0+255),b
  1540  003CDA                     
  1541                           ; BSR set to: 1
  1542                           ;main.c: 80:             color = verify_color(color, &rgb, &white);
  1543  003CDA  0EC8               	movlw	low main@rgb
  1544  003CDC  6FA6               	movwf	verify_color@m& (0+255),b
  1545  003CDE  0E01               	movlw	high main@rgb
  1546  003CE0  6FA7               	movwf	(verify_color@m+1)& (0+255),b
  1547  003CE2  0ED0               	movlw	low main@white
  1548  003CE4  6FA8               	movwf	verify_color@w& (0+255),b
  1549  003CE6  0E01               	movlw	high main@white
  1550  003CE8  6FA9               	movwf	(verify_color@w+1)& (0+255),b
  1551  003CEA  5184               	movf	_color& (0+255),w,b
  1552  003CEC  EC96  F02B         	call	_verify_color
  1553  003CF0  0101               	movlb	1	; () banked
  1554  003CF2  6F84               	movwf	_color& (0+255),b
  1555  003CF4                     
  1556                           ; BSR set to: 1
  1557                           ;main.c: 81:             if (color!= 0){turning_action(color, &motorL, &motorR); color =
      +                           0;}
  1558  003CF4  5184               	movf	_color& (0+255),w,b
  1559  003CF6  B4D8               	btfsc	status,2,c
  1560  003CF8  EF80  F01E         	goto	u5821
  1561  003CFC  EF82  F01E         	goto	u5820
  1562  003D00                     u5821:
  1563  003D00  EF90  F01E         	goto	l5362
  1564  003D04                     u5820:
  1565  003D04                     
  1566                           ; BSR set to: 1
  1567  003D04  0EEC               	movlw	low main@motorL
  1568  003D06  6E35               	movwf	turning_action@mL^0,c
  1569  003D08  0E01               	movlw	high main@motorL
  1570  003D0A  6E36               	movwf	(turning_action@mL+1)^0,c
  1571  003D0C  0EF5               	movlw	low main@motorR
  1572  003D0E  6E37               	movwf	turning_action@mR^0,c
  1573  003D10  0E01               	movlw	high main@motorR
  1574  003D12  6E38               	movwf	(turning_action@mR+1)^0,c
  1575  003D14  5184               	movf	_color& (0+255),w,b
  1576  003D16  EC51  F018         	call	_turning_action
  1577  003D1A  0E00               	movlw	0
  1578  003D1C  0101               	movlb	1	; () banked
  1579  003D1E  6F84               	movwf	_color& (0+255),b
  1580  003D20                     l5362:
  1581                           
  1582                           ; BSR set to: 1
  1583                           ;main.c: 82:             stop_signal = 0;
  1584  003D20  0E00               	movlw	0
  1585  003D22  6FC2               	movwf	main@stop_signal& (0+255),b
  1586  003D24  EFCB  F01D         	goto	l5322
  1587  003D28  EF18  F000         	goto	start
  1588  003D2C                     __end_of_main:
  1589                           	callstack 0
  1590                           
  1591 ;; *************** function _verify_color *****************
  1592 ;; Defined at:
  1593 ;;		line 371 in file "color.c"
  1594 ;; Parameters:    Size  Location     Type
  1595 ;;  color           1    wreg     unsigned char 
  1596 ;;  m               2    0[BANK1 ] PTR struct color_rgb
  1597 ;;		 -> main@rgb(8), 
  1598 ;;  w               2    2[BANK1 ] PTR struct white_card
  1599 ;;		 -> main@white(28), 
  1600 ;; Auto vars:     Size  Location     Type
  1601 ;;  color           1    6[BANK1 ] unsigned char 
  1602 ;;  color2          2    4[BANK1 ] unsigned int 
  1603 ;;  color3          2    0        unsigned int 
  1604 ;; Return value:  Size  Location     Type
  1605 ;;                  1    wreg      unsigned char 
  1606 ;; Registers used:
  1607 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1608 ;; Tracked objects:
  1609 ;;		On entry : 0/0
  1610 ;;		On exit  : 0/0
  1611 ;;		Unchanged: 0/0
  1612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1613 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1614 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1615 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1616 ;;      Totals:         0       2       7       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1617 ;;Total ram usage:        9 bytes
  1618 ;; Hardware stack levels used: 1
  1619 ;; Hardware stack levels required when called: 10
  1620 ;; This function calls:
  1621 ;;		_detect_color
  1622 ;; This function is called by:
  1623 ;;		_main
  1624 ;; This function uses a non-reentrant model
  1625 ;;
  1626                           
  1627                           	psect	text1
  1628  00572C                     __ptext1:
  1629                           	callstack 0
  1630  00572C                     _verify_color:
  1631                           	callstack 20
  1632                           
  1633                           ; BSR set to: 1
  1634                           ;incstack = 0
  1635                           ;verify_color@color stored from wreg
  1636  00572C  0101               	movlb	1	; () banked
  1637  00572E  6FAC               	movwf	verify_color@color& (0+255),b
  1638  005730                     
  1639                           ;color.c: 371: unsigned char verify_color(unsigned char color,struct color_rgb *m, struc
      +                          t white_card *w);color.c: 372: {;color.c: 373:     _delay((unsigned long)((50)*(64000000
      +                          /4000.0)));
  1640  005730  0E05               	movlw	5
  1641  005732  0100               	movlb	0	; () banked
  1642  005734  6FFF               	movwf	(??_verify_color+1)& (0+255),b
  1643  005736  0E0F               	movlw	15
  1644  005738  6FFE               	movwf	??_verify_color& (0+255),b
  1645  00573A  0EF1               	movlw	241
  1646  00573C                     u5857:
  1647  00573C  2EE8               	decfsz	wreg,f,c
  1648  00573E  D7FE               	bra	u5857
  1649  005740  2FFE               	decfsz	??_verify_color& (0+255),f,b
  1650  005742  D7FC               	bra	u5857
  1651  005744  2FFF               	decfsz	(??_verify_color+1)& (0+255),f,b
  1652  005746  D7FA               	bra	u5857
  1653  005748                     
  1654                           ;color.c: 374:     unsigned int color2, color3;;color.c: 375:     color2 = detect_color(
      +                          m,w);
  1655  005748  C1A6  F079         	movff	verify_color@m,detect_color@m
  1656  00574C  C1A7  F07A         	movff	verify_color@m+1,detect_color@m+1
  1657  005750  C1A8  F07B         	movff	verify_color@w,detect_color@w
  1658  005754  C1A9  F07C         	movff	verify_color@w+1,detect_color@w+1
  1659  005758  EC0A  F007         	call	_detect_color	;wreg free
  1660  00575C  0100               	movlb	0	; () banked
  1661  00575E  6FFE               	movwf	??_verify_color& (0+255),b
  1662  005760  51FE               	movf	??_verify_color& (0+255),w,b
  1663  005762  0101               	movlb	1	; () banked
  1664  005764  6FAA               	movwf	verify_color@color2& (0+255),b
  1665  005766  6BAB               	clrf	(verify_color@color2+1)& (0+255),b
  1666  005768                     
  1667                           ; BSR set to: 1
  1668                           ;color.c: 376:     _delay((unsigned long)((50)*(64000000/4000.0)));
  1669  005768  0E05               	movlw	5
  1670  00576A  0100               	movlb	0	; () banked
  1671  00576C  6FFF               	movwf	(??_verify_color+1)& (0+255),b
  1672  00576E  0E0F               	movlw	15
  1673  005770  6FFE               	movwf	??_verify_color& (0+255),b
  1674  005772  0EF1               	movlw	241
  1675  005774                     u5867:
  1676  005774  2EE8               	decfsz	wreg,f,c
  1677  005776  D7FE               	bra	u5867
  1678  005778  2FFE               	decfsz	??_verify_color& (0+255),f,b
  1679  00577A  D7FC               	bra	u5867
  1680  00577C  2FFF               	decfsz	(??_verify_color+1)& (0+255),f,b
  1681  00577E  D7FA               	bra	u5867
  1682  005780                     
  1683                           ;color.c: 378:     if (color == color2){return color;}
  1684  005780  0101               	movlb	1	; () banked
  1685  005782  51AC               	movf	verify_color@color& (0+255),w,b
  1686  005784  0100               	movlb	0	; () banked
  1687  005786  6FFE               	movwf	??_verify_color& (0+255),b
  1688  005788  6BFF               	clrf	(??_verify_color+1)& (0+255),b
  1689  00578A  0101               	movlb	1	; () banked
  1690  00578C  51AA               	movf	verify_color@color2& (0+255),w,b
  1691  00578E  0100               	movlb	0	; () banked
  1692  005790  19FE               	xorwf	??_verify_color& (0+255),w,b
  1693  005792  E109               	bnz	u5501
  1694  005794  0101               	movlb	1	; () banked
  1695  005796  51AB               	movf	(verify_color@color2+1)& (0+255),w,b
  1696  005798  0100               	movlb	0	; () banked
  1697  00579A  19FF               	xorwf	(??_verify_color+1)& (0+255),w,b
  1698  00579C  A4D8               	btfss	status,2,c
  1699  00579E  EFD3  F02B         	goto	u5501
  1700  0057A2  EFD5  F02B         	goto	u5500
  1701  0057A6                     u5501:
  1702  0057A6  EFD9  F02B         	goto	l5080
  1703  0057AA                     u5500:
  1704  0057AA                     
  1705                           ; BSR set to: 0
  1706  0057AA  0101               	movlb	1	; () banked
  1707  0057AC  51AC               	movf	verify_color@color& (0+255),w,b
  1708  0057AE  EFDA  F02B         	goto	l146
  1709  0057B2                     l5080:
  1710                           
  1711                           ; BSR set to: 0
  1712                           ;color.c: 381:         return color;}
  1713  0057B2  0E00               	movlw	0
  1714  0057B4                     l146:
  1715  0057B4  0012               	return		;funcret
  1716  0057B6                     __end_of_verify_color:
  1717                           	callstack 0
  1718                           
  1719 ;; *************** function _turning_action *****************
  1720 ;; Defined at:
  1721 ;;		line 14 in file "movement.c"
  1722 ;; Parameters:    Size  Location     Type
  1723 ;;  color           1    wreg     unsigned char 
  1724 ;;  mL              2   52[COMRAM] PTR struct DC_motor
  1725 ;;		 -> main@motorL(9), 
  1726 ;;  mR              2   54[COMRAM] PTR struct DC_motor
  1727 ;;		 -> main@motorR(9), 
  1728 ;; Auto vars:     Size  Location     Type
  1729 ;;  color           1   56[COMRAM] unsigned char 
  1730 ;; Return value:  Size  Location     Type
  1731 ;;                  1    wreg      void 
  1732 ;; Registers used:
  1733 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1734 ;; Tracked objects:
  1735 ;;		On entry : 0/0
  1736 ;;		On exit  : 0/0
  1737 ;;		Unchanged: 0/0
  1738 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1739 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1740 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1741 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1742 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1743 ;;Total ram usage:        5 bytes
  1744 ;; Hardware stack levels used: 1
  1745 ;; Hardware stack levels required when called: 6
  1746 ;; This function calls:
  1747 ;;		_fullSpeedBack
  1748 ;;		_goback
  1749 ;;		_toggle_light
  1750 ;;		_turn45
  1751 ;; This function is called by:
  1752 ;;		_main
  1753 ;; This function uses a non-reentrant model
  1754 ;;
  1755                           
  1756                           	psect	text2
  1757  0030A2                     __ptext2:
  1758                           	callstack 0
  1759  0030A2                     _turning_action:
  1760                           	callstack 24
  1761                           
  1762                           ;incstack = 0
  1763                           ;turning_action@color stored from wreg
  1764  0030A2  6E39               	movwf	turning_action@color^0,c
  1765  0030A4                     
  1766                           ;movement.c: 14: void turning_action(unsigned char color, struct DC_motor *mL, struct DC
      +                          _motor *mR);movement.c: 15: { if (color != 0){
  1767  0030A4  5039               	movf	turning_action@color^0,w,c
  1768  0030A6  B4D8               	btfsc	status,2,c
  1769  0030A8  EF58  F018         	goto	u5701
  1770  0030AC  EF5A  F018         	goto	u5700
  1771  0030B0                     u5701:
  1772  0030B0  EFC8  F019         	goto	l455
  1773  0030B4                     u5700:
  1774  0030B4                     
  1775                           ;movement.c: 16:         if (color == 1){
  1776  0030B4  0439               	decf	turning_action@color^0,w,c
  1777  0030B6  A4D8               	btfss	status,2,c
  1778  0030B8  EF60  F018         	goto	u5711
  1779  0030BC  EF62  F018         	goto	u5710
  1780  0030C0                     u5711:
  1781  0030C0  EF8A  F018         	goto	l5240
  1782  0030C4                     u5710:
  1783  0030C4                     
  1784                           ;movement.c: 17:             fullSpeedBack(mL,mR,1);
  1785  0030C4  C035  F020         	movff	turning_action@mL,fullSpeedBack@mL
  1786  0030C8  C036  F021         	movff	turning_action@mL+1,fullSpeedBack@mL+1
  1787  0030CC  C037  F022         	movff	turning_action@mR,fullSpeedBack@mR
  1788  0030D0  C038  F023         	movff	turning_action@mR+1,fullSpeedBack@mR+1
  1789  0030D4  0E01               	movlw	1
  1790  0030D6  6E24               	movwf	fullSpeedBack@instruction^0,c
  1791  0030D8  EC06  F025         	call	_fullSpeedBack	;wreg free
  1792                           
  1793                           ;movement.c: 18:             turn45(mL,mR,2,2);
  1794  0030DC  C035  F020         	movff	turning_action@mL,turn45@mL
  1795  0030E0  C036  F021         	movff	turning_action@mL+1,turn45@mL+1
  1796  0030E4  C037  F022         	movff	turning_action@mR,turn45@mR
  1797  0030E8  C038  F023         	movff	turning_action@mR+1,turn45@mR+1
  1798  0030EC  0E02               	movlw	2
  1799  0030EE  6E24               	movwf	turn45@turn_time^0,c
  1800  0030F0  0E02               	movlw	2
  1801  0030F2  6E25               	movwf	turn45@direction^0,c
  1802  0030F4  EC0C  F022         	call	_turn45	;wreg free
  1803  0030F8                     
  1804                           ;movement.c: 19:             memory[array_index] = 1;
  1805  0030F8  0101               	movlb	1	; () banked
  1806  0030FA  5185               	movf	_array_index& (0+255),w,b
  1807  0030FC  0D02               	mullw	2
  1808  0030FE  0E00               	movlw	low _memory
  1809  003100  24F3               	addwf	243,w,c
  1810  003102  6ED9               	movwf	fsr2l,c
  1811  003104  0E01               	movlw	high _memory
  1812  003106  20F4               	addwfc	prodh,w,c
  1813  003108  6EDA               	movwf	fsr2h,c
  1814  00310A  0E01               	movlw	1
  1815  00310C  6EDE               	movwf	postinc2,c
  1816  00310E  0E00               	movlw	0
  1817  003110  6EDD               	movwf	postdec2,c
  1818  003112                     
  1819                           ; BSR set to: 1
  1820                           ;movement.c: 20:             array_index++;
  1821  003112  2B85               	incf	_array_index& (0+255),f,b
  1822  003114                     l5240:
  1823                           
  1824                           ;movement.c: 22:         if (color == 2){
  1825  003114  0E02               	movlw	2
  1826  003116  1839               	xorwf	turning_action@color^0,w,c
  1827  003118  A4D8               	btfss	status,2,c
  1828  00311A  EF91  F018         	goto	u5721
  1829  00311E  EF93  F018         	goto	u5720
  1830  003122                     u5721:
  1831  003122  EFBB  F018         	goto	l5248
  1832  003126                     u5720:
  1833  003126                     
  1834                           ;movement.c: 23:             fullSpeedBack(mL,mR,1);
  1835  003126  C035  F020         	movff	turning_action@mL,fullSpeedBack@mL
  1836  00312A  C036  F021         	movff	turning_action@mL+1,fullSpeedBack@mL+1
  1837  00312E  C037  F022         	movff	turning_action@mR,fullSpeedBack@mR
  1838  003132  C038  F023         	movff	turning_action@mR+1,fullSpeedBack@mR+1
  1839  003136  0E01               	movlw	1
  1840  003138  6E24               	movwf	fullSpeedBack@instruction^0,c
  1841  00313A  EC06  F025         	call	_fullSpeedBack	;wreg free
  1842                           
  1843                           ;movement.c: 24:             turn45(mL,mR,2,1);
  1844  00313E  C035  F020         	movff	turning_action@mL,turn45@mL
  1845  003142  C036  F021         	movff	turning_action@mL+1,turn45@mL+1
  1846  003146  C037  F022         	movff	turning_action@mR,turn45@mR
  1847  00314A  C038  F023         	movff	turning_action@mR+1,turn45@mR+1
  1848  00314E  0E02               	movlw	2
  1849  003150  6E24               	movwf	turn45@turn_time^0,c
  1850  003152  0E01               	movlw	1
  1851  003154  6E25               	movwf	turn45@direction^0,c
  1852  003156  EC0C  F022         	call	_turn45	;wreg free
  1853  00315A                     
  1854                           ;movement.c: 25:             memory[array_index] = 2;
  1855  00315A  0101               	movlb	1	; () banked
  1856  00315C  5185               	movf	_array_index& (0+255),w,b
  1857  00315E  0D02               	mullw	2
  1858  003160  0E00               	movlw	low _memory
  1859  003162  24F3               	addwf	243,w,c
  1860  003164  6ED9               	movwf	fsr2l,c
  1861  003166  0E01               	movlw	high _memory
  1862  003168  20F4               	addwfc	prodh,w,c
  1863  00316A  6EDA               	movwf	fsr2h,c
  1864  00316C  0E02               	movlw	2
  1865  00316E  6EDE               	movwf	postinc2,c
  1866  003170  0E00               	movlw	0
  1867  003172  6EDD               	movwf	postdec2,c
  1868  003174                     
  1869                           ; BSR set to: 1
  1870                           ;movement.c: 26:             array_index++;
  1871  003174  2B85               	incf	_array_index& (0+255),f,b
  1872  003176                     l5248:
  1873                           
  1874                           ;movement.c: 28:         if (color == 3){
  1875  003176  0E03               	movlw	3
  1876  003178  1839               	xorwf	turning_action@color^0,w,c
  1877  00317A  A4D8               	btfss	status,2,c
  1878  00317C  EFC2  F018         	goto	u5731
  1879  003180  EFC4  F018         	goto	u5730
  1880  003184                     u5731:
  1881  003184  EFEC  F018         	goto	l5256
  1882  003188                     u5730:
  1883  003188                     
  1884                           ;movement.c: 29:             fullSpeedBack(mL,mR,1);
  1885  003188  C035  F020         	movff	turning_action@mL,fullSpeedBack@mL
  1886  00318C  C036  F021         	movff	turning_action@mL+1,fullSpeedBack@mL+1
  1887  003190  C037  F022         	movff	turning_action@mR,fullSpeedBack@mR
  1888  003194  C038  F023         	movff	turning_action@mR+1,fullSpeedBack@mR+1
  1889  003198  0E01               	movlw	1
  1890  00319A  6E24               	movwf	fullSpeedBack@instruction^0,c
  1891  00319C  EC06  F025         	call	_fullSpeedBack	;wreg free
  1892                           
  1893                           ;movement.c: 30:             turn45(mL,mR,4,1);
  1894  0031A0  C035  F020         	movff	turning_action@mL,turn45@mL
  1895  0031A4  C036  F021         	movff	turning_action@mL+1,turn45@mL+1
  1896  0031A8  C037  F022         	movff	turning_action@mR,turn45@mR
  1897  0031AC  C038  F023         	movff	turning_action@mR+1,turn45@mR+1
  1898  0031B0  0E04               	movlw	4
  1899  0031B2  6E24               	movwf	turn45@turn_time^0,c
  1900  0031B4  0E01               	movlw	1
  1901  0031B6  6E25               	movwf	turn45@direction^0,c
  1902  0031B8  EC0C  F022         	call	_turn45	;wreg free
  1903  0031BC                     
  1904                           ;movement.c: 31:             memory[array_index] = 3;
  1905  0031BC  0101               	movlb	1	; () banked
  1906  0031BE  5185               	movf	_array_index& (0+255),w,b
  1907  0031C0  0D02               	mullw	2
  1908  0031C2  0E00               	movlw	low _memory
  1909  0031C4  24F3               	addwf	243,w,c
  1910  0031C6  6ED9               	movwf	fsr2l,c
  1911  0031C8  0E01               	movlw	high _memory
  1912  0031CA  20F4               	addwfc	prodh,w,c
  1913  0031CC  6EDA               	movwf	fsr2h,c
  1914  0031CE  0E03               	movlw	3
  1915  0031D0  6EDE               	movwf	postinc2,c
  1916  0031D2  0E00               	movlw	0
  1917  0031D4  6EDD               	movwf	postdec2,c
  1918  0031D6                     
  1919                           ; BSR set to: 1
  1920                           ;movement.c: 32:             array_index++;
  1921  0031D6  2B85               	incf	_array_index& (0+255),f,b
  1922  0031D8                     l5256:
  1923                           
  1924                           ;movement.c: 34:         if (color == 4){
  1925  0031D8  0E04               	movlw	4
  1926  0031DA  1839               	xorwf	turning_action@color^0,w,c
  1927  0031DC  A4D8               	btfss	status,2,c
  1928  0031DE  EFF3  F018         	goto	u5741
  1929  0031E2  EFF5  F018         	goto	u5740
  1930  0031E6                     u5741:
  1931  0031E6  EF1D  F019         	goto	l5264
  1932  0031EA                     u5740:
  1933  0031EA                     
  1934                           ;movement.c: 35:             fullSpeedBack(mL,mR,3);
  1935  0031EA  C035  F020         	movff	turning_action@mL,fullSpeedBack@mL
  1936  0031EE  C036  F021         	movff	turning_action@mL+1,fullSpeedBack@mL+1
  1937  0031F2  C037  F022         	movff	turning_action@mR,fullSpeedBack@mR
  1938  0031F6  C038  F023         	movff	turning_action@mR+1,fullSpeedBack@mR+1
  1939  0031FA  0E03               	movlw	3
  1940  0031FC  6E24               	movwf	fullSpeedBack@instruction^0,c
  1941  0031FE  EC06  F025         	call	_fullSpeedBack	;wreg free
  1942                           
  1943                           ;movement.c: 36:             turn45(mL,mR,2,2);
  1944  003202  C035  F020         	movff	turning_action@mL,turn45@mL
  1945  003206  C036  F021         	movff	turning_action@mL+1,turn45@mL+1
  1946  00320A  C037  F022         	movff	turning_action@mR,turn45@mR
  1947  00320E  C038  F023         	movff	turning_action@mR+1,turn45@mR+1
  1948  003212  0E02               	movlw	2
  1949  003214  6E24               	movwf	turn45@turn_time^0,c
  1950  003216  0E02               	movlw	2
  1951  003218  6E25               	movwf	turn45@direction^0,c
  1952  00321A  EC0C  F022         	call	_turn45	;wreg free
  1953  00321E                     
  1954                           ;movement.c: 37:             memory[array_index] = 4;
  1955  00321E  0101               	movlb	1	; () banked
  1956  003220  5185               	movf	_array_index& (0+255),w,b
  1957  003222  0D02               	mullw	2
  1958  003224  0E00               	movlw	low _memory
  1959  003226  24F3               	addwf	243,w,c
  1960  003228  6ED9               	movwf	fsr2l,c
  1961  00322A  0E01               	movlw	high _memory
  1962  00322C  20F4               	addwfc	prodh,w,c
  1963  00322E  6EDA               	movwf	fsr2h,c
  1964  003230  0E04               	movlw	4
  1965  003232  6EDE               	movwf	postinc2,c
  1966  003234  0E00               	movlw	0
  1967  003236  6EDD               	movwf	postdec2,c
  1968  003238                     
  1969                           ; BSR set to: 1
  1970                           ;movement.c: 38:             array_index++;
  1971  003238  2B85               	incf	_array_index& (0+255),f,b
  1972  00323A                     l5264:
  1973                           
  1974                           ;movement.c: 40:         if (color == 5){
  1975  00323A  0E05               	movlw	5
  1976  00323C  1839               	xorwf	turning_action@color^0,w,c
  1977  00323E  A4D8               	btfss	status,2,c
  1978  003240  EF24  F019         	goto	u5751
  1979  003244  EF26  F019         	goto	u5750
  1980  003248                     u5751:
  1981  003248  EF4E  F019         	goto	l5272
  1982  00324C                     u5750:
  1983  00324C                     
  1984                           ;movement.c: 41:             fullSpeedBack(mL,mR,3);
  1985  00324C  C035  F020         	movff	turning_action@mL,fullSpeedBack@mL
  1986  003250  C036  F021         	movff	turning_action@mL+1,fullSpeedBack@mL+1
  1987  003254  C037  F022         	movff	turning_action@mR,fullSpeedBack@mR
  1988  003258  C038  F023         	movff	turning_action@mR+1,fullSpeedBack@mR+1
  1989  00325C  0E03               	movlw	3
  1990  00325E  6E24               	movwf	fullSpeedBack@instruction^0,c
  1991  003260  EC06  F025         	call	_fullSpeedBack	;wreg free
  1992                           
  1993                           ;movement.c: 42:             turn45(mL,mR,2,1);
  1994  003264  C035  F020         	movff	turning_action@mL,turn45@mL
  1995  003268  C036  F021         	movff	turning_action@mL+1,turn45@mL+1
  1996  00326C  C037  F022         	movff	turning_action@mR,turn45@mR
  1997  003270  C038  F023         	movff	turning_action@mR+1,turn45@mR+1
  1998  003274  0E02               	movlw	2
  1999  003276  6E24               	movwf	turn45@turn_time^0,c
  2000  003278  0E01               	movlw	1
  2001  00327A  6E25               	movwf	turn45@direction^0,c
  2002  00327C  EC0C  F022         	call	_turn45	;wreg free
  2003  003280                     
  2004                           ;movement.c: 43:             memory[array_index] = 5;
  2005  003280  0101               	movlb	1	; () banked
  2006  003282  5185               	movf	_array_index& (0+255),w,b
  2007  003284  0D02               	mullw	2
  2008  003286  0E00               	movlw	low _memory
  2009  003288  24F3               	addwf	243,w,c
  2010  00328A  6ED9               	movwf	fsr2l,c
  2011  00328C  0E01               	movlw	high _memory
  2012  00328E  20F4               	addwfc	prodh,w,c
  2013  003290  6EDA               	movwf	fsr2h,c
  2014  003292  0E05               	movlw	5
  2015  003294  6EDE               	movwf	postinc2,c
  2016  003296  0E00               	movlw	0
  2017  003298  6EDD               	movwf	postdec2,c
  2018  00329A                     
  2019                           ; BSR set to: 1
  2020                           ;movement.c: 44:             array_index++;
  2021  00329A  2B85               	incf	_array_index& (0+255),f,b
  2022  00329C                     l5272:
  2023                           
  2024                           ;movement.c: 46:         if (color == 6){
  2025  00329C  0E06               	movlw	6
  2026  00329E  1839               	xorwf	turning_action@color^0,w,c
  2027  0032A0  A4D8               	btfss	status,2,c
  2028  0032A2  EF55  F019         	goto	u5761
  2029  0032A6  EF57  F019         	goto	u5760
  2030  0032AA                     u5761:
  2031  0032AA  EF7F  F019         	goto	l5280
  2032  0032AE                     u5760:
  2033  0032AE                     
  2034                           ;movement.c: 47:             fullSpeedBack(mL,mR,1);
  2035  0032AE  C035  F020         	movff	turning_action@mL,fullSpeedBack@mL
  2036  0032B2  C036  F021         	movff	turning_action@mL+1,fullSpeedBack@mL+1
  2037  0032B6  C037  F022         	movff	turning_action@mR,fullSpeedBack@mR
  2038  0032BA  C038  F023         	movff	turning_action@mR+1,fullSpeedBack@mR+1
  2039  0032BE  0E01               	movlw	1
  2040  0032C0  6E24               	movwf	fullSpeedBack@instruction^0,c
  2041  0032C2  EC06  F025         	call	_fullSpeedBack	;wreg free
  2042                           
  2043                           ;movement.c: 48:             turn45(mL,mR,3,2);
  2044  0032C6  C035  F020         	movff	turning_action@mL,turn45@mL
  2045  0032CA  C036  F021         	movff	turning_action@mL+1,turn45@mL+1
  2046  0032CE  C037  F022         	movff	turning_action@mR,turn45@mR
  2047  0032D2  C038  F023         	movff	turning_action@mR+1,turn45@mR+1
  2048  0032D6  0E03               	movlw	3
  2049  0032D8  6E24               	movwf	turn45@turn_time^0,c
  2050  0032DA  0E02               	movlw	2
  2051  0032DC  6E25               	movwf	turn45@direction^0,c
  2052  0032DE  EC0C  F022         	call	_turn45	;wreg free
  2053  0032E2                     
  2054                           ;movement.c: 49:             memory[array_index] = 6;
  2055  0032E2  0101               	movlb	1	; () banked
  2056  0032E4  5185               	movf	_array_index& (0+255),w,b
  2057  0032E6  0D02               	mullw	2
  2058  0032E8  0E00               	movlw	low _memory
  2059  0032EA  24F3               	addwf	243,w,c
  2060  0032EC  6ED9               	movwf	fsr2l,c
  2061  0032EE  0E01               	movlw	high _memory
  2062  0032F0  20F4               	addwfc	prodh,w,c
  2063  0032F2  6EDA               	movwf	fsr2h,c
  2064  0032F4  0E06               	movlw	6
  2065  0032F6  6EDE               	movwf	postinc2,c
  2066  0032F8  0E00               	movlw	0
  2067  0032FA  6EDD               	movwf	postdec2,c
  2068  0032FC                     
  2069                           ; BSR set to: 1
  2070                           ;movement.c: 50:             array_index++;
  2071  0032FC  2B85               	incf	_array_index& (0+255),f,b
  2072  0032FE                     l5280:
  2073                           
  2074                           ;movement.c: 52:         if (color == 7){
  2075  0032FE  0E07               	movlw	7
  2076  003300  1839               	xorwf	turning_action@color^0,w,c
  2077  003302  A4D8               	btfss	status,2,c
  2078  003304  EF86  F019         	goto	u5771
  2079  003308  EF88  F019         	goto	u5770
  2080  00330C                     u5771:
  2081  00330C  EFB0  F019         	goto	l5288
  2082  003310                     u5770:
  2083  003310                     
  2084                           ;movement.c: 53:             fullSpeedBack(mL,mR,1);
  2085  003310  C035  F020         	movff	turning_action@mL,fullSpeedBack@mL
  2086  003314  C036  F021         	movff	turning_action@mL+1,fullSpeedBack@mL+1
  2087  003318  C037  F022         	movff	turning_action@mR,fullSpeedBack@mR
  2088  00331C  C038  F023         	movff	turning_action@mR+1,fullSpeedBack@mR+1
  2089  003320  0E01               	movlw	1
  2090  003322  6E24               	movwf	fullSpeedBack@instruction^0,c
  2091  003324  EC06  F025         	call	_fullSpeedBack	;wreg free
  2092                           
  2093                           ;movement.c: 54:             turn45(mL,mR,3,1);
  2094  003328  C035  F020         	movff	turning_action@mL,turn45@mL
  2095  00332C  C036  F021         	movff	turning_action@mL+1,turn45@mL+1
  2096  003330  C037  F022         	movff	turning_action@mR,turn45@mR
  2097  003334  C038  F023         	movff	turning_action@mR+1,turn45@mR+1
  2098  003338  0E03               	movlw	3
  2099  00333A  6E24               	movwf	turn45@turn_time^0,c
  2100  00333C  0E01               	movlw	1
  2101  00333E  6E25               	movwf	turn45@direction^0,c
  2102  003340  EC0C  F022         	call	_turn45	;wreg free
  2103  003344                     
  2104                           ;movement.c: 55:             memory[array_index] = 7;
  2105  003344  0101               	movlb	1	; () banked
  2106  003346  5185               	movf	_array_index& (0+255),w,b
  2107  003348  0D02               	mullw	2
  2108  00334A  0E00               	movlw	low _memory
  2109  00334C  24F3               	addwf	243,w,c
  2110  00334E  6ED9               	movwf	fsr2l,c
  2111  003350  0E01               	movlw	high _memory
  2112  003352  20F4               	addwfc	prodh,w,c
  2113  003354  6EDA               	movwf	fsr2h,c
  2114  003356  0E07               	movlw	7
  2115  003358  6EDE               	movwf	postinc2,c
  2116  00335A  0E00               	movlw	0
  2117  00335C  6EDD               	movwf	postdec2,c
  2118  00335E                     
  2119                           ; BSR set to: 1
  2120                           ;movement.c: 56:             array_index++;
  2121  00335E  2B85               	incf	_array_index& (0+255),f,b
  2122  003360                     l5288:
  2123                           
  2124                           ;movement.c: 58:         if (color == 8){
  2125  003360  0E08               	movlw	8
  2126  003362  1839               	xorwf	turning_action@color^0,w,c
  2127  003364  A4D8               	btfss	status,2,c
  2128  003366  EFB7  F019         	goto	u5781
  2129  00336A  EFB9  F019         	goto	u5780
  2130  00336E                     u5781:
  2131  00336E  EFC8  F019         	goto	l455
  2132  003372                     u5780:
  2133  003372                     
  2134                           ;movement.c: 59:             toggle_light(2,1);
  2135  003372  0E01               	movlw	1
  2136  003374  6E01               	movwf	toggle_light@toggletime^0,c
  2137  003376  0E02               	movlw	2
  2138  003378  EC3A  F01B         	call	_toggle_light
  2139  00337C                     
  2140                           ;movement.c: 60:             goback(mL,mR);
  2141  00337C  C035  F02D         	movff	turning_action@mL,goback@mL
  2142  003380  C036  F02E         	movff	turning_action@mL+1,goback@mL+1
  2143  003384  C037  F02F         	movff	turning_action@mR,goback@mR
  2144  003388  C038  F030         	movff	turning_action@mR+1,goback@mR+1
  2145  00338C  ECB2  F014         	call	_goback	;wreg free
  2146  003390                     l455:
  2147  003390  0012               	return		;funcret
  2148  003392                     __end_of_turning_action:
  2149                           	callstack 0
  2150                           
  2151 ;; *************** function _goback *****************
  2152 ;; Defined at:
  2153 ;;		line 65 in file "movement.c"
  2154 ;; Parameters:    Size  Location     Type
  2155 ;;  mL              2   44[COMRAM] PTR struct DC_motor
  2156 ;;		 -> main@motorL(9), 
  2157 ;;  mR              2   46[COMRAM] PTR struct DC_motor
  2158 ;;		 -> main@motorR(9), 
  2159 ;; Auto vars:     Size  Location     Type
  2160 ;;  i               2   50[COMRAM] unsigned int 
  2161 ;; Return value:  Size  Location     Type
  2162 ;;                  1    wreg      void 
  2163 ;; Registers used:
  2164 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2165 ;; Tracked objects:
  2166 ;;		On entry : 0/0
  2167 ;;		On exit  : 0/0
  2168 ;;		Unchanged: 0/0
  2169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2170 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2171 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2172 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2173 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2174 ;;Total ram usage:        8 bytes
  2175 ;; Hardware stack levels used: 1
  2176 ;; Hardware stack levels required when called: 5
  2177 ;; This function calls:
  2178 ;;		_fullSpeedAhead
  2179 ;;		_fullSpeedBack
  2180 ;;		_stop
  2181 ;;		_turn45
  2182 ;; This function is called by:
  2183 ;;		_main
  2184 ;;		_turning_action
  2185 ;; This function uses a non-reentrant model
  2186 ;;
  2187                           
  2188                           	psect	text3
  2189  002964                     __ptext3:
  2190                           	callstack 0
  2191  002964                     _goback:
  2192                           	callstack 24
  2193  002964                     
  2194                           ;movement.c: 65: void goback(struct DC_motor *mL, struct DC_motor *mR);movement.c: 66: {
      +                           fullSpeedBack(mL,mR,1);
  2195  002964  C02D  F020         	movff	goback@mL,fullSpeedBack@mL
  2196  002968  C02E  F021         	movff	goback@mL+1,fullSpeedBack@mL+1
  2197  00296C  C02F  F022         	movff	goback@mR,fullSpeedBack@mR
  2198  002970  C030  F023         	movff	goback@mR+1,fullSpeedBack@mR+1
  2199  002974  0E01               	movlw	1
  2200  002976  6E24               	movwf	fullSpeedBack@instruction^0,c
  2201  002978  EC06  F025         	call	_fullSpeedBack	;wreg free
  2202                           
  2203                           ;movement.c: 67:     turn45(mL,mR,4,1);
  2204  00297C  C02D  F020         	movff	goback@mL,turn45@mL
  2205  002980  C02E  F021         	movff	goback@mL+1,turn45@mL+1
  2206  002984  C02F  F022         	movff	goback@mR,turn45@mR
  2207  002988  C030  F023         	movff	goback@mR+1,turn45@mR+1
  2208  00298C  0E04               	movlw	4
  2209  00298E  6E24               	movwf	turn45@turn_time^0,c
  2210  002990  0E01               	movlw	1
  2211  002992  6E25               	movwf	turn45@direction^0,c
  2212  002994  EC0C  F022         	call	_turn45	;wreg free
  2213                           
  2214                           ;movement.c: 68:     fullSpeedBack(mL,mR,2);
  2215  002998  C02D  F020         	movff	goback@mL,fullSpeedBack@mL
  2216  00299C  C02E  F021         	movff	goback@mL+1,fullSpeedBack@mL+1
  2217  0029A0  C02F  F022         	movff	goback@mR,fullSpeedBack@mR
  2218  0029A4  C030  F023         	movff	goback@mR+1,fullSpeedBack@mR+1
  2219  0029A8  0E02               	movlw	2
  2220  0029AA  6E24               	movwf	fullSpeedBack@instruction^0,c
  2221  0029AC  EC06  F025         	call	_fullSpeedBack	;wreg free
  2222  0029B0                     l4958:
  2223                           
  2224                           ;movement.c: 69:     array_index--;
  2225  0029B0  0101               	movlb	1	; () banked
  2226  0029B2  0785               	decf	_array_index& (0+255),f,b
  2227  0029B4                     l4960:
  2228                           
  2229                           ; BSR set to: 1
  2230                           ;movement.c: 71:         fullSpeedAhead(mL,mR);
  2231  0029B4  C02D  F01A         	movff	goback@mL,fullSpeedAhead@mL
  2232  0029B8  C02E  F01B         	movff	goback@mL+1,fullSpeedAhead@mL+1
  2233  0029BC  C02F  F01C         	movff	goback@mR,fullSpeedAhead@mR
  2234  0029C0  C030  F01D         	movff	goback@mR+1,fullSpeedAhead@mR+1
  2235  0029C4  EC73  F02A         	call	_fullSpeedAhead	;wreg free
  2236  0029C8                     
  2237                           ;movement.c: 72:         for (unsigned int i=0; i<memory[array_index]; i++) {_delay((uns
      +                          igned long)((100)*(64000000/4000.0)));}
  2238  0029C8  0E00               	movlw	0
  2239  0029CA  6E34               	movwf	(goback@i+1)^0,c
  2240  0029CC  0E00               	movlw	0
  2241  0029CE  6E33               	movwf	goback@i^0,c
  2242  0029D0  EFF8  F014         	goto	l4968
  2243  0029D4                     l4964:
  2244                           
  2245                           ; BSR set to: 1
  2246  0029D4  0E09               	movlw	9
  2247  0029D6  6E32               	movwf	(??_goback+1)^0,c
  2248  0029D8  0E1E               	movlw	30
  2249  0029DA  6E31               	movwf	??_goback^0,c
  2250  0029DC  0EE4               	movlw	228
  2251  0029DE                     u5877:
  2252  0029DE  2EE8               	decfsz	wreg,f,c
  2253  0029E0  D7FE               	bra	u5877
  2254  0029E2  2E31               	decfsz	??_goback^0,f,c
  2255  0029E4  D7FC               	bra	u5877
  2256  0029E6  2E32               	decfsz	(??_goback+1)^0,f,c
  2257  0029E8  D7FA               	bra	u5877
  2258  0029EA  D000               	nop2	
  2259  0029EC  4A33               	infsnz	goback@i^0,f,c
  2260  0029EE  2A34               	incf	(goback@i+1)^0,f,c
  2261  0029F0                     l4968:
  2262  0029F0  0101               	movlb	1	; () banked
  2263  0029F2  5185               	movf	_array_index& (0+255),w,b
  2264  0029F4  0D02               	mullw	2
  2265  0029F6  0E00               	movlw	low _memory
  2266  0029F8  24F3               	addwf	243,w,c
  2267  0029FA  6ED9               	movwf	fsr2l,c
  2268  0029FC  0E01               	movlw	high _memory
  2269  0029FE  20F4               	addwfc	prodh,w,c
  2270  002A00  6EDA               	movwf	fsr2h,c
  2271  002A02  50DE               	movf	postinc2,w,c
  2272  002A04  5C33               	subwf	goback@i^0,w,c
  2273  002A06  50DE               	movf	postinc2,w,c
  2274  002A08  5834               	subwfb	(goback@i+1)^0,w,c
  2275  002A0A  A0D8               	btfss	status,0,c
  2276  002A0C  EF0A  F015         	goto	u5331
  2277  002A10  EF0C  F015         	goto	u5330
  2278  002A14                     u5331:
  2279  002A14  EFEA  F014         	goto	l4964
  2280  002A18                     u5330:
  2281  002A18                     
  2282                           ; BSR set to: 1
  2283                           ;movement.c: 73:         stop(mL,mR);
  2284  002A18  C02D  F01A         	movff	goback@mL,stop@mL
  2285  002A1C  C02E  F01B         	movff	goback@mL+1,stop@mL+1
  2286  002A20  C02F  F01C         	movff	goback@mR,stop@mR
  2287  002A24  C030  F01D         	movff	goback@mR+1,stop@mR+1
  2288  002A28  EC37  F02B         	call	_stop	;wreg free
  2289  002A2C                     
  2290                           ;movement.c: 74:         if (array_index == 0){break;}
  2291  002A2C  0101               	movlb	1	; () banked
  2292  002A2E  5185               	movf	_array_index& (0+255),w,b
  2293  002A30  A4D8               	btfss	status,2,c
  2294  002A32  EF1D  F015         	goto	u5341
  2295  002A36  EF1F  F015         	goto	u5340
  2296  002A3A                     u5341:
  2297  002A3A  EF21  F015         	goto	l4976
  2298  002A3E                     u5340:
  2299  002A3E  EF65  F016         	goto	l464
  2300  002A42                     l4976:
  2301                           
  2302                           ; BSR set to: 1
  2303                           ;movement.c: 75:         array_index--;
  2304  002A42  0785               	decf	_array_index& (0+255),f,b
  2305  002A44                     
  2306                           ; BSR set to: 1
  2307                           ;movement.c: 76:         if (memory[array_index] == 1){turn45(mL,mR,2,1);fullSpeedBack(m
      +                          L,mR,2);array_index--;}
  2308  002A44  5185               	movf	_array_index& (0+255),w,b
  2309  002A46  0D02               	mullw	2
  2310  002A48  0E00               	movlw	low _memory
  2311  002A4A  24F3               	addwf	243,w,c
  2312  002A4C  6ED9               	movwf	fsr2l,c
  2313  002A4E  0E01               	movlw	high _memory
  2314  002A50  20F4               	addwfc	prodh,w,c
  2315  002A52  6EDA               	movwf	fsr2h,c
  2316  002A54  04DE               	decf	postinc2,w,c
  2317  002A56  10DE               	iorwf	postinc2,w,c
  2318  002A58  A4D8               	btfss	status,2,c
  2319  002A5A  EF31  F015         	goto	u5351
  2320  002A5E  EF33  F015         	goto	u5350
  2321  002A62                     u5351:
  2322  002A62  EF4F  F015         	goto	l4984
  2323  002A66                     u5350:
  2324  002A66                     
  2325                           ; BSR set to: 1
  2326  002A66  C02D  F020         	movff	goback@mL,turn45@mL
  2327  002A6A  C02E  F021         	movff	goback@mL+1,turn45@mL+1
  2328  002A6E  C02F  F022         	movff	goback@mR,turn45@mR
  2329  002A72  C030  F023         	movff	goback@mR+1,turn45@mR+1
  2330  002A76  0E02               	movlw	2
  2331  002A78  6E24               	movwf	turn45@turn_time^0,c
  2332  002A7A  0E01               	movlw	1
  2333  002A7C  6E25               	movwf	turn45@direction^0,c
  2334  002A7E  EC0C  F022         	call	_turn45	;wreg free
  2335  002A82  C02D  F020         	movff	goback@mL,fullSpeedBack@mL
  2336  002A86  C02E  F021         	movff	goback@mL+1,fullSpeedBack@mL+1
  2337  002A8A  C02F  F022         	movff	goback@mR,fullSpeedBack@mR
  2338  002A8E  C030  F023         	movff	goback@mR+1,fullSpeedBack@mR+1
  2339  002A92  0E02               	movlw	2
  2340  002A94  6E24               	movwf	fullSpeedBack@instruction^0,c
  2341  002A96  EC06  F025         	call	_fullSpeedBack	;wreg free
  2342  002A9A  EFD8  F014         	goto	l4958
  2343  002A9E                     l4984:
  2344                           
  2345                           ; BSR set to: 1
  2346  002A9E  5185               	movf	_array_index& (0+255),w,b
  2347  002AA0  0D02               	mullw	2
  2348  002AA2  0E00               	movlw	low _memory
  2349  002AA4  24F3               	addwf	243,w,c
  2350  002AA6  6ED9               	movwf	fsr2l,c
  2351  002AA8  0E01               	movlw	high _memory
  2352  002AAA  20F4               	addwfc	prodh,w,c
  2353  002AAC  6EDA               	movwf	fsr2h,c
  2354  002AAE  0E02               	movlw	2
  2355  002AB0  18DE               	xorwf	postinc2,w,c
  2356  002AB2  10DE               	iorwf	postinc2,w,c
  2357  002AB4  A4D8               	btfss	status,2,c
  2358  002AB6  EF5F  F015         	goto	u5361
  2359  002ABA  EF61  F015         	goto	u5360
  2360  002ABE                     u5361:
  2361  002ABE  EF7D  F015         	goto	l4990
  2362  002AC2                     u5360:
  2363  002AC2                     
  2364                           ; BSR set to: 1
  2365  002AC2  C02D  F020         	movff	goback@mL,turn45@mL
  2366  002AC6  C02E  F021         	movff	goback@mL+1,turn45@mL+1
  2367  002ACA  C02F  F022         	movff	goback@mR,turn45@mR
  2368  002ACE  C030  F023         	movff	goback@mR+1,turn45@mR+1
  2369  002AD2  0E02               	movlw	2
  2370  002AD4  6E24               	movwf	turn45@turn_time^0,c
  2371  002AD6  0E02               	movlw	2
  2372  002AD8  6E25               	movwf	turn45@direction^0,c
  2373  002ADA  EC0C  F022         	call	_turn45	;wreg free
  2374  002ADE  C02D  F020         	movff	goback@mL,fullSpeedBack@mL
  2375  002AE2  C02E  F021         	movff	goback@mL+1,fullSpeedBack@mL+1
  2376  002AE6  C02F  F022         	movff	goback@mR,fullSpeedBack@mR
  2377  002AEA  C030  F023         	movff	goback@mR+1,fullSpeedBack@mR+1
  2378  002AEE  0E02               	movlw	2
  2379  002AF0  6E24               	movwf	fullSpeedBack@instruction^0,c
  2380  002AF2  EC06  F025         	call	_fullSpeedBack	;wreg free
  2381  002AF6  EFD8  F014         	goto	l4958
  2382  002AFA                     l4990:
  2383                           
  2384                           ; BSR set to: 1
  2385  002AFA  5185               	movf	_array_index& (0+255),w,b
  2386  002AFC  0D02               	mullw	2
  2387  002AFE  0E00               	movlw	low _memory
  2388  002B00  24F3               	addwf	243,w,c
  2389  002B02  6ED9               	movwf	fsr2l,c
  2390  002B04  0E01               	movlw	high _memory
  2391  002B06  20F4               	addwfc	prodh,w,c
  2392  002B08  6EDA               	movwf	fsr2h,c
  2393  002B0A  0E03               	movlw	3
  2394  002B0C  18DE               	xorwf	postinc2,w,c
  2395  002B0E  10DE               	iorwf	postinc2,w,c
  2396  002B10  A4D8               	btfss	status,2,c
  2397  002B12  EF8D  F015         	goto	u5371
  2398  002B16  EF8F  F015         	goto	u5370
  2399  002B1A                     u5371:
  2400  002B1A  EFAB  F015         	goto	l4996
  2401  002B1E                     u5370:
  2402  002B1E                     
  2403                           ; BSR set to: 1
  2404  002B1E  C02D  F020         	movff	goback@mL,turn45@mL
  2405  002B22  C02E  F021         	movff	goback@mL+1,turn45@mL+1
  2406  002B26  C02F  F022         	movff	goback@mR,turn45@mR
  2407  002B2A  C030  F023         	movff	goback@mR+1,turn45@mR+1
  2408  002B2E  0E04               	movlw	4
  2409  002B30  6E24               	movwf	turn45@turn_time^0,c
  2410  002B32  0E02               	movlw	2
  2411  002B34  6E25               	movwf	turn45@direction^0,c
  2412  002B36  EC0C  F022         	call	_turn45	;wreg free
  2413  002B3A  C02D  F020         	movff	goback@mL,fullSpeedBack@mL
  2414  002B3E  C02E  F021         	movff	goback@mL+1,fullSpeedBack@mL+1
  2415  002B42  C02F  F022         	movff	goback@mR,fullSpeedBack@mR
  2416  002B46  C030  F023         	movff	goback@mR+1,fullSpeedBack@mR+1
  2417  002B4A  0E02               	movlw	2
  2418  002B4C  6E24               	movwf	fullSpeedBack@instruction^0,c
  2419  002B4E  EC06  F025         	call	_fullSpeedBack	;wreg free
  2420  002B52  EFD8  F014         	goto	l4958
  2421  002B56                     l4996:
  2422                           
  2423                           ; BSR set to: 1
  2424  002B56  5185               	movf	_array_index& (0+255),w,b
  2425  002B58  0D02               	mullw	2
  2426  002B5A  0E00               	movlw	low _memory
  2427  002B5C  24F3               	addwf	243,w,c
  2428  002B5E  6ED9               	movwf	fsr2l,c
  2429  002B60  0E01               	movlw	high _memory
  2430  002B62  20F4               	addwfc	prodh,w,c
  2431  002B64  6EDA               	movwf	fsr2h,c
  2432  002B66  0E04               	movlw	4
  2433  002B68  18DE               	xorwf	postinc2,w,c
  2434  002B6A  10DE               	iorwf	postinc2,w,c
  2435  002B6C  A4D8               	btfss	status,2,c
  2436  002B6E  EFBB  F015         	goto	u5381
  2437  002B72  EFBD  F015         	goto	u5380
  2438  002B76                     u5381:
  2439  002B76  EFD9  F015         	goto	l5002
  2440  002B7A                     u5380:
  2441  002B7A                     
  2442                           ; BSR set to: 1
  2443  002B7A  C02D  F020         	movff	goback@mL,turn45@mL
  2444  002B7E  C02E  F021         	movff	goback@mL+1,turn45@mL+1
  2445  002B82  C02F  F022         	movff	goback@mR,turn45@mR
  2446  002B86  C030  F023         	movff	goback@mR+1,turn45@mR+1
  2447  002B8A  0E02               	movlw	2
  2448  002B8C  6E24               	movwf	turn45@turn_time^0,c
  2449  002B8E  0E01               	movlw	1
  2450  002B90  6E25               	movwf	turn45@direction^0,c
  2451  002B92  EC0C  F022         	call	_turn45	;wreg free
  2452  002B96  C02D  F020         	movff	goback@mL,fullSpeedBack@mL
  2453  002B9A  C02E  F021         	movff	goback@mL+1,fullSpeedBack@mL+1
  2454  002B9E  C02F  F022         	movff	goback@mR,fullSpeedBack@mR
  2455  002BA2  C030  F023         	movff	goback@mR+1,fullSpeedBack@mR+1
  2456  002BA6  0E03               	movlw	3
  2457  002BA8  6E24               	movwf	fullSpeedBack@instruction^0,c
  2458  002BAA  EC06  F025         	call	_fullSpeedBack	;wreg free
  2459  002BAE  EFD8  F014         	goto	l4958
  2460  002BB2                     l5002:
  2461                           
  2462                           ; BSR set to: 1
  2463  002BB2  5185               	movf	_array_index& (0+255),w,b
  2464  002BB4  0D02               	mullw	2
  2465  002BB6  0E00               	movlw	low _memory
  2466  002BB8  24F3               	addwf	243,w,c
  2467  002BBA  6ED9               	movwf	fsr2l,c
  2468  002BBC  0E01               	movlw	high _memory
  2469  002BBE  20F4               	addwfc	prodh,w,c
  2470  002BC0  6EDA               	movwf	fsr2h,c
  2471  002BC2  0E05               	movlw	5
  2472  002BC4  18DE               	xorwf	postinc2,w,c
  2473  002BC6  10DE               	iorwf	postinc2,w,c
  2474  002BC8  A4D8               	btfss	status,2,c
  2475  002BCA  EFE9  F015         	goto	u5391
  2476  002BCE  EFEB  F015         	goto	u5390
  2477  002BD2                     u5391:
  2478  002BD2  EF07  F016         	goto	l5008
  2479  002BD6                     u5390:
  2480  002BD6                     
  2481                           ; BSR set to: 1
  2482  002BD6  C02D  F020         	movff	goback@mL,turn45@mL
  2483  002BDA  C02E  F021         	movff	goback@mL+1,turn45@mL+1
  2484  002BDE  C02F  F022         	movff	goback@mR,turn45@mR
  2485  002BE2  C030  F023         	movff	goback@mR+1,turn45@mR+1
  2486  002BE6  0E02               	movlw	2
  2487  002BE8  6E24               	movwf	turn45@turn_time^0,c
  2488  002BEA  0E02               	movlw	2
  2489  002BEC  6E25               	movwf	turn45@direction^0,c
  2490  002BEE  EC0C  F022         	call	_turn45	;wreg free
  2491  002BF2  C02D  F020         	movff	goback@mL,fullSpeedBack@mL
  2492  002BF6  C02E  F021         	movff	goback@mL+1,fullSpeedBack@mL+1
  2493  002BFA  C02F  F022         	movff	goback@mR,fullSpeedBack@mR
  2494  002BFE  C030  F023         	movff	goback@mR+1,fullSpeedBack@mR+1
  2495  002C02  0E03               	movlw	3
  2496  002C04  6E24               	movwf	fullSpeedBack@instruction^0,c
  2497  002C06  EC06  F025         	call	_fullSpeedBack	;wreg free
  2498  002C0A  EFD8  F014         	goto	l4958
  2499  002C0E                     l5008:
  2500                           
  2501                           ; BSR set to: 1
  2502  002C0E  5185               	movf	_array_index& (0+255),w,b
  2503  002C10  0D02               	mullw	2
  2504  002C12  0E00               	movlw	low _memory
  2505  002C14  24F3               	addwf	243,w,c
  2506  002C16  6ED9               	movwf	fsr2l,c
  2507  002C18  0E01               	movlw	high _memory
  2508  002C1A  20F4               	addwfc	prodh,w,c
  2509  002C1C  6EDA               	movwf	fsr2h,c
  2510  002C1E  0E06               	movlw	6
  2511  002C20  18DE               	xorwf	postinc2,w,c
  2512  002C22  10DE               	iorwf	postinc2,w,c
  2513  002C24  A4D8               	btfss	status,2,c
  2514  002C26  EF17  F016         	goto	u5401
  2515  002C2A  EF19  F016         	goto	u5400
  2516  002C2E                     u5401:
  2517  002C2E  EF35  F016         	goto	l5014
  2518  002C32                     u5400:
  2519  002C32                     
  2520                           ; BSR set to: 1
  2521  002C32  C02D  F020         	movff	goback@mL,turn45@mL
  2522  002C36  C02E  F021         	movff	goback@mL+1,turn45@mL+1
  2523  002C3A  C02F  F022         	movff	goback@mR,turn45@mR
  2524  002C3E  C030  F023         	movff	goback@mR+1,turn45@mR+1
  2525  002C42  0E03               	movlw	3
  2526  002C44  6E24               	movwf	turn45@turn_time^0,c
  2527  002C46  0E01               	movlw	1
  2528  002C48  6E25               	movwf	turn45@direction^0,c
  2529  002C4A  EC0C  F022         	call	_turn45	;wreg free
  2530  002C4E  C02D  F020         	movff	goback@mL,fullSpeedBack@mL
  2531  002C52  C02E  F021         	movff	goback@mL+1,fullSpeedBack@mL+1
  2532  002C56  C02F  F022         	movff	goback@mR,fullSpeedBack@mR
  2533  002C5A  C030  F023         	movff	goback@mR+1,fullSpeedBack@mR+1
  2534  002C5E  0E02               	movlw	2
  2535  002C60  6E24               	movwf	fullSpeedBack@instruction^0,c
  2536  002C62  EC06  F025         	call	_fullSpeedBack	;wreg free
  2537  002C66  EFD8  F014         	goto	l4958
  2538  002C6A                     l5014:
  2539                           
  2540                           ; BSR set to: 1
  2541  002C6A  5185               	movf	_array_index& (0+255),w,b
  2542  002C6C  0D02               	mullw	2
  2543  002C6E  0E00               	movlw	low _memory
  2544  002C70  24F3               	addwf	243,w,c
  2545  002C72  6ED9               	movwf	fsr2l,c
  2546  002C74  0E01               	movlw	high _memory
  2547  002C76  20F4               	addwfc	prodh,w,c
  2548  002C78  6EDA               	movwf	fsr2h,c
  2549  002C7A  0E07               	movlw	7
  2550  002C7C  18DE               	xorwf	postinc2,w,c
  2551  002C7E  10DE               	iorwf	postinc2,w,c
  2552  002C80  A4D8               	btfss	status,2,c
  2553  002C82  EF45  F016         	goto	u5411
  2554  002C86  EF47  F016         	goto	u5410
  2555  002C8A                     u5411:
  2556  002C8A  EF63  F016         	goto	l472
  2557  002C8E                     u5410:
  2558  002C8E                     
  2559                           ; BSR set to: 1
  2560  002C8E  C02D  F020         	movff	goback@mL,turn45@mL
  2561  002C92  C02E  F021         	movff	goback@mL+1,turn45@mL+1
  2562  002C96  C02F  F022         	movff	goback@mR,turn45@mR
  2563  002C9A  C030  F023         	movff	goback@mR+1,turn45@mR+1
  2564  002C9E  0E03               	movlw	3
  2565  002CA0  6E24               	movwf	turn45@turn_time^0,c
  2566  002CA2  0E02               	movlw	2
  2567  002CA4  6E25               	movwf	turn45@direction^0,c
  2568  002CA6  EC0C  F022         	call	_turn45	;wreg free
  2569  002CAA  C02D  F020         	movff	goback@mL,fullSpeedBack@mL
  2570  002CAE  C02E  F021         	movff	goback@mL+1,fullSpeedBack@mL+1
  2571  002CB2  C02F  F022         	movff	goback@mR,fullSpeedBack@mR
  2572  002CB6  C030  F023         	movff	goback@mR+1,fullSpeedBack@mR+1
  2573  002CBA  0E02               	movlw	2
  2574  002CBC  6E24               	movwf	fullSpeedBack@instruction^0,c
  2575  002CBE  EC06  F025         	call	_fullSpeedBack	;wreg free
  2576  002CC2  EFD8  F014         	goto	l4958
  2577  002CC6                     l472:
  2578                           
  2579                           ; BSR set to: 1
  2580  002CC6  EFDA  F014         	goto	l4960
  2581  002CCA                     l464:
  2582                           
  2583                           ; BSR set to: 1
  2584                           ;movement.c: 84:     LATDbits.LATD7 = 1;
  2585  002CCA  8E7C               	bsf	124,7,c	;volatile
  2586                           
  2587                           ;movement.c: 85:     while(PORTFbits.RF2){
  2588  002CCC  EF7C  F016         	goto	l478
  2589  002CD0                     l5020:
  2590                           
  2591                           ;movement.c: 86:         stop(mL,mR);
  2592  002CD0  C02D  F01A         	movff	goback@mL,stop@mL
  2593  002CD4  C02E  F01B         	movff	goback@mL+1,stop@mL+1
  2594  002CD8  C02F  F01C         	movff	goback@mR,stop@mR
  2595  002CDC  C030  F01D         	movff	goback@mR+1,stop@mR+1
  2596  002CE0  EC37  F02B         	call	_stop	;wreg free
  2597  002CE4                     
  2598                           ;movement.c: 87:         if (!PORTFbits.RF2){LATDbits.LATD7 = 0;break;}
  2599  002CE4  B48E               	btfsc	142,2,c	;volatile
  2600  002CE6  EF77  F016         	goto	u5421
  2601  002CEA  EF79  F016         	goto	u5420
  2602  002CEE                     u5421:
  2603  002CEE  EF7C  F016         	goto	l478
  2604  002CF2                     u5420:
  2605  002CF2  9E7C               	bcf	124,7,c	;volatile
  2606  002CF4  EF83  F016         	goto	l482
  2607  002CF8                     l478:
  2608                           
  2609                           ;movement.c: 85:     while(PORTFbits.RF2){
  2610  002CF8  B48E               	btfsc	142,2,c	;volatile
  2611  002CFA  EF81  F016         	goto	u5431
  2612  002CFE  EF83  F016         	goto	u5430
  2613  002D02                     u5431:
  2614  002D02  EF68  F016         	goto	l5020
  2615  002D06                     u5430:
  2616  002D06                     l482:
  2617  002D06  0012               	return		;funcret
  2618  002D08                     __end_of_goback:
  2619                           	callstack 0
  2620                           
  2621 ;; *************** function _fullSpeedBack *****************
  2622 ;; Defined at:
  2623 ;;		line 136 in file "dc_motor.c"
  2624 ;; Parameters:    Size  Location     Type
  2625 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  2626 ;;		 -> main@motorL(9), 
  2627 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  2628 ;;		 -> main@motorR(9), 
  2629 ;;  instruction     1   35[COMRAM] unsigned char 
  2630 ;; Auto vars:     Size  Location     Type
  2631 ;;		None
  2632 ;; Return value:  Size  Location     Type
  2633 ;;                  1    wreg      void 
  2634 ;; Registers used:
  2635 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2636 ;; Tracked objects:
  2637 ;;		On entry : 0/0
  2638 ;;		On exit  : 0/0
  2639 ;;		Unchanged: 0/0
  2640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2641 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2642 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2643 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2644 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2645 ;;Total ram usage:        7 bytes
  2646 ;; Hardware stack levels used: 1
  2647 ;; Hardware stack levels required when called: 4
  2648 ;; This function calls:
  2649 ;;		_setMotorPWM
  2650 ;;		_stop
  2651 ;; This function is called by:
  2652 ;;		_turning_action
  2653 ;;		_goback
  2654 ;; This function uses a non-reentrant model
  2655 ;;
  2656                           
  2657                           	psect	text4
  2658  004A0C                     __ptext4:
  2659                           	callstack 0
  2660  004A0C                     _fullSpeedBack:
  2661                           	callstack 24
  2662  004A0C                     
  2663                           ;dc_motor.c: 136: void fullSpeedBack(struct DC_motor *mL, struct DC_motor *mR, unsigned 
      +                          char instruction);dc_motor.c: 137: {;dc_motor.c: 138:     mL->direction=0;
  2664  004A0C  EE20 F001          	lfsr	2,1
  2665  004A10  5020               	movf	fullSpeedBack@mL^0,w,c
  2666  004A12  26D9               	addwf	fsr2l,f,c
  2667  004A14  5021               	movf	(fullSpeedBack@mL+1)^0,w,c
  2668  004A16  22DA               	addwfc	fsr2h,f,c
  2669  004A18  0E00               	movlw	0
  2670  004A1A  6EDF               	movwf	indf2,c
  2671                           
  2672                           ;dc_motor.c: 139:     mR->direction=0;
  2673  004A1C  EE20 F001          	lfsr	2,1
  2674  004A20  5022               	movf	fullSpeedBack@mR^0,w,c
  2675  004A22  26D9               	addwf	fsr2l,f,c
  2676  004A24  5023               	movf	(fullSpeedBack@mR+1)^0,w,c
  2677  004A26  22DA               	addwfc	fsr2h,f,c
  2678  004A28  0E00               	movlw	0
  2679  004A2A  6EDF               	movwf	indf2,c
  2680                           
  2681                           ;dc_motor.c: 140:     while (mL->power<44 || mR->power<44){
  2682  004A2C  EF50  F025         	goto	l4440
  2683  004A30                     l4426:
  2684                           
  2685                           ;dc_motor.c: 141:         if (mL->power<44) {mL->power += 2;}
  2686  004A30  C020  FFD9         	movff	fullSpeedBack@mL,fsr2l
  2687  004A34  C021  FFDA         	movff	fullSpeedBack@mL+1,fsr2h
  2688  004A38  0E2C               	movlw	44
  2689  004A3A  60DF               	cpfslt	indf2,c
  2690  004A3C  EF22  F025         	goto	u4761
  2691  004A40  EF24  F025         	goto	u4760
  2692  004A44                     u4761:
  2693  004A44  EF2A  F025         	goto	l4430
  2694  004A48                     u4760:
  2695  004A48  C020  FFD9         	movff	fullSpeedBack@mL,fsr2l
  2696  004A4C  C021  FFDA         	movff	fullSpeedBack@mL+1,fsr2h
  2697  004A50  0E02               	movlw	2
  2698  004A52  26DF               	addwf	indf2,f,c
  2699  004A54                     l4430:
  2700                           
  2701                           ;dc_motor.c: 142:         if (mR->power<44) {mR->power += 2;}
  2702  004A54  C022  FFD9         	movff	fullSpeedBack@mR,fsr2l
  2703  004A58  C023  FFDA         	movff	fullSpeedBack@mR+1,fsr2h
  2704  004A5C  0E2C               	movlw	44
  2705  004A5E  60DF               	cpfslt	indf2,c
  2706  004A60  EF34  F025         	goto	u4771
  2707  004A64  EF36  F025         	goto	u4770
  2708  004A68                     u4771:
  2709  004A68  EF3C  F025         	goto	l4434
  2710  004A6C                     u4770:
  2711  004A6C  C022  FFD9         	movff	fullSpeedBack@mR,fsr2l
  2712  004A70  C023  FFDA         	movff	fullSpeedBack@mR+1,fsr2h
  2713  004A74  0E02               	movlw	2
  2714  004A76  26DF               	addwf	indf2,f,c
  2715  004A78                     l4434:
  2716                           
  2717                           ;dc_motor.c: 143:         setMotorPWM(mL);
  2718  004A78  C020  F00F         	movff	fullSpeedBack@mL,setMotorPWM@m
  2719  004A7C  C021  F010         	movff	fullSpeedBack@mL+1,setMotorPWM@m+1
  2720  004A80  EC96  F01E         	call	_setMotorPWM	;wreg free
  2721  004A84                     
  2722                           ;dc_motor.c: 144:         setMotorPWM(mR);
  2723  004A84  C022  F00F         	movff	fullSpeedBack@mR,setMotorPWM@m
  2724  004A88  C023  F010         	movff	fullSpeedBack@mR+1,setMotorPWM@m+1
  2725  004A8C  EC96  F01E         	call	_setMotorPWM	;wreg free
  2726  004A90                     
  2727                           ;dc_motor.c: 145:         _delay((unsigned long)((5)*(64000000/4000.0)));
  2728  004A90  0E68               	movlw	104
  2729  004A92  6E25               	movwf	??_fullSpeedBack^0,c
  2730  004A94  0EE4               	movlw	228
  2731  004A96                     u5887:
  2732  004A96  2EE8               	decfsz	wreg,f,c
  2733  004A98  D7FE               	bra	u5887
  2734  004A9A  2E25               	decfsz	??_fullSpeedBack^0,f,c
  2735  004A9C  D7FC               	bra	u5887
  2736  004A9E  D000               	nop2	
  2737  004AA0                     l4440:
  2738                           
  2739                           ;dc_motor.c: 140:     while (mL->power<44 || mR->power<44){
  2740  004AA0  C020  FFD9         	movff	fullSpeedBack@mL,fsr2l
  2741  004AA4  C021  FFDA         	movff	fullSpeedBack@mL+1,fsr2h
  2742  004AA8  0E2B               	movlw	43
  2743  004AAA  64DF               	cpfsgt	indf2,c
  2744  004AAC  EF5A  F025         	goto	u4781
  2745  004AB0  EF5C  F025         	goto	u4780
  2746  004AB4                     u4781:
  2747  004AB4  EF18  F025         	goto	l4426
  2748  004AB8                     u4780:
  2749  004AB8  C022  FFD9         	movff	fullSpeedBack@mR,fsr2l
  2750  004ABC  C023  FFDA         	movff	fullSpeedBack@mR+1,fsr2h
  2751  004AC0  0E2B               	movlw	43
  2752  004AC2  64DF               	cpfsgt	indf2,c
  2753  004AC4  EF66  F025         	goto	u4791
  2754  004AC8  EF68  F025         	goto	u4790
  2755  004ACC                     u4791:
  2756  004ACC  EF18  F025         	goto	l4426
  2757  004AD0                     u4790:
  2758  004AD0                     
  2759                           ;dc_motor.c: 148:     if (instruction == 1) {_delay((unsigned long)((600)*(64000000/4000
      +                          .0)));}
  2760  004AD0  0424               	decf	fullSpeedBack@instruction^0,w,c
  2761  004AD2  A4D8               	btfss	status,2,c
  2762  004AD4  EF6E  F025         	goto	u4801
  2763  004AD8  EF70  F025         	goto	u4800
  2764  004ADC                     u4801:
  2765  004ADC  EF7B  F025         	goto	l4448
  2766  004AE0                     u4800:
  2767  004AE0  0E31               	movlw	49
  2768  004AE2  6E26               	movwf	(??_fullSpeedBack+1)^0,c
  2769  004AE4  0EB4               	movlw	180
  2770  004AE6  6E25               	movwf	??_fullSpeedBack^0,c
  2771  004AE8  0E66               	movlw	102
  2772  004AEA                     u5897:
  2773  004AEA  2EE8               	decfsz	wreg,f,c
  2774  004AEC  D7FE               	bra	u5897
  2775  004AEE  2E25               	decfsz	??_fullSpeedBack^0,f,c
  2776  004AF0  D7FC               	bra	u5897
  2777  004AF2  2E26               	decfsz	(??_fullSpeedBack+1)^0,f,c
  2778  004AF4  D7FA               	bra	u5897
  2779  004AF6                     l4448:
  2780                           
  2781                           ;dc_motor.c: 149:     if (instruction == 2) {_delay((unsigned long)((1000)*(64000000/400
      +                          0.0)));}
  2782  004AF6  0E02               	movlw	2
  2783  004AF8  1824               	xorwf	fullSpeedBack@instruction^0,w,c
  2784  004AFA  A4D8               	btfss	status,2,c
  2785  004AFC  EF82  F025         	goto	u4811
  2786  004B00  EF84  F025         	goto	u4810
  2787  004B04                     u4811:
  2788  004B04  EF90  F025         	goto	l4452
  2789  004B08                     u4810:
  2790  004B08  0E52               	movlw	82
  2791  004B0A  6E26               	movwf	(??_fullSpeedBack+1)^0,c
  2792  004B0C  0E2B               	movlw	43
  2793  004B0E  6E25               	movwf	??_fullSpeedBack^0,c
  2794  004B10  0E00               	movlw	0
  2795  004B12                     u5907:
  2796  004B12  2EE8               	decfsz	wreg,f,c
  2797  004B14  D7FE               	bra	u5907
  2798  004B16  2E25               	decfsz	??_fullSpeedBack^0,f,c
  2799  004B18  D7FC               	bra	u5907
  2800  004B1A  2E26               	decfsz	(??_fullSpeedBack+1)^0,f,c
  2801  004B1C  D7FA               	bra	u5907
  2802  004B1E  D000               	nop2	
  2803  004B20                     l4452:
  2804                           
  2805                           ;dc_motor.c: 150:     if (instruction == 3) {_delay((unsigned long)((2000)*(64000000/400
      +                          0.0)));}
  2806  004B20  0E03               	movlw	3
  2807  004B22  1824               	xorwf	fullSpeedBack@instruction^0,w,c
  2808  004B24  A4D8               	btfss	status,2,c
  2809  004B26  EF97  F025         	goto	u4821
  2810  004B2A  EF99  F025         	goto	u4820
  2811  004B2E                     u4821:
  2812  004B2E  EFA5  F025         	goto	l4456
  2813  004B32                     u4820:
  2814  004B32  0EA3               	movlw	163
  2815  004B34  6E26               	movwf	(??_fullSpeedBack+1)^0,c
  2816  004B36  0E57               	movlw	87
  2817  004B38  6E25               	movwf	??_fullSpeedBack^0,c
  2818  004B3A  0E02               	movlw	2
  2819  004B3C                     u5917:
  2820  004B3C  2EE8               	decfsz	wreg,f,c
  2821  004B3E  D7FE               	bra	u5917
  2822  004B40  2E25               	decfsz	??_fullSpeedBack^0,f,c
  2823  004B42  D7FC               	bra	u5917
  2824  004B44  2E26               	decfsz	(??_fullSpeedBack+1)^0,f,c
  2825  004B46  D7FA               	bra	u5917
  2826  004B48  D000               	nop2	
  2827  004B4A                     l4456:
  2828                           
  2829                           ;dc_motor.c: 151:     stop(mL,mR);
  2830  004B4A  C020  F01A         	movff	fullSpeedBack@mL,stop@mL
  2831  004B4E  C021  F01B         	movff	fullSpeedBack@mL+1,stop@mL+1
  2832  004B52  C022  F01C         	movff	fullSpeedBack@mR,stop@mR
  2833  004B56  C023  F01D         	movff	fullSpeedBack@mR+1,stop@mR+1
  2834  004B5A  EC37  F02B         	call	_stop	;wreg free
  2835  004B5E  0012               	return		;funcret
  2836  004B60                     __end_of_fullSpeedBack:
  2837                           	callstack 0
  2838                           
  2839 ;; *************** function _test_function *****************
  2840 ;; Defined at:
  2841 ;;		line 48 in file "test_and_calibration.c"
  2842 ;; Parameters:    Size  Location     Type
  2843 ;;  test_code       1    wreg     unsigned char 
  2844 ;;  m               2    0[BANK1 ] PTR struct color_rgb
  2845 ;;		 -> main@rgb(8), 
  2846 ;;  w               2    2[BANK1 ] PTR struct white_card
  2847 ;;		 -> main@white(28), 
  2848 ;;  mL              2    4[BANK1 ] PTR struct DC_motor
  2849 ;;		 -> main@motorL(9), 
  2850 ;;  mR              2    6[BANK1 ] PTR struct DC_motor
  2851 ;;		 -> main@motorR(9), 
  2852 ;; Auto vars:     Size  Location     Type
  2853 ;;  test_code       1   13[BANK1 ] unsigned char 
  2854 ;;  amb_light       2    8[BANK1 ] unsigned int 
  2855 ;;  stop_signal     1   12[BANK1 ] unsigned char 
  2856 ;;  color           1   11[BANK1 ] unsigned char 
  2857 ;;  complete        1   10[BANK1 ] unsigned char 
  2858 ;; Return value:  Size  Location     Type
  2859 ;;                  1    wreg      void 
  2860 ;; Registers used:
  2861 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2862 ;; Tracked objects:
  2863 ;;		On entry : 0/0
  2864 ;;		On exit  : 0/0
  2865 ;;		Unchanged: 0/0
  2866 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2867 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2868 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2869 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2870 ;;      Totals:         0       2      14       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2871 ;;Total ram usage:       16 bytes
  2872 ;; Hardware stack levels used: 1
  2873 ;; Hardware stack levels required when called: 11
  2874 ;; This function calls:
  2875 ;;		_LED_C
  2876 ;;		_amb_light_measure
  2877 ;;		_calibrate_white
  2878 ;;		_color_data_collection
  2879 ;;		_color_display
  2880 ;;		_color_predict
  2881 ;;		_detect_color
  2882 ;;		_detect_wall
  2883 ;;		_fullSpeedAhead
  2884 ;;		_read_color
  2885 ;;		_stop
  2886 ;;		_test_action
  2887 ;; This function is called by:
  2888 ;;		_main
  2889 ;; This function uses a non-reentrant model
  2890 ;;
  2891                           
  2892                           	psect	text5
  2893  004268                     __ptext5:
  2894                           	callstack 0
  2895  004268                     _test_function:
  2896                           	callstack 19
  2897                           
  2898                           ;incstack = 0
  2899                           ;test_function@test_code stored from wreg
  2900  004268  0101               	movlb	1	; () banked
  2901  00426A  6FB3               	movwf	test_function@test_code& (0+255),b
  2902  00426C                     
  2903                           ;test_and_calibration.c: 48: void test_function(unsigned char test_code, struct color_rg
      +                          b *m, struct white_card *w, struct DC_motor *mL, struct DC_motor *mR);test_and_calibrati
      +                          on.c: 49: {;test_and_calibration.c: 50:     unsigned char complete = 0;
  2904  00426C  0E00               	movlw	0
  2905  00426E  0101               	movlb	1	; () banked
  2906  004270  6FB0               	movwf	test_function@complete& (0+255),b
  2907                           
  2908                           ;test_and_calibration.c: 52:     unsigned char stop_signal = 0;
  2909  004272  0E00               	movlw	0
  2910  004274  6FB2               	movwf	test_function@stop_signal& (0+255),b
  2911                           
  2912                           ;test_and_calibration.c: 53:     unsigned int amb_light = 0;
  2913  004276  0E00               	movlw	0
  2914  004278  6FAF               	movwf	(test_function@amb_light+1)& (0+255),b
  2915  00427A  0E00               	movlw	0
  2916  00427C  6FAE               	movwf	test_function@amb_light& (0+255),b
  2917  00427E                     
  2918                           ; BSR set to: 1
  2919                           ;test_and_calibration.c: 55:     if (test_code == 2){calibrate_white(w);}
  2920  00427E  0E02               	movlw	2
  2921  004280  19B3               	xorwf	test_function@test_code& (0+255),w,b
  2922  004282  A4D8               	btfss	status,2,c
  2923  004284  EF46  F021         	goto	u5611
  2924  004288  EF48  F021         	goto	u5610
  2925  00428C                     u5611:
  2926  00428C  EF4E  F021         	goto	l5176
  2927  004290                     u5610:
  2928  004290                     
  2929                           ; BSR set to: 1
  2930  004290  C1A8  F00C         	movff	test_function@w,calibrate_white@w
  2931  004294  C1A9  F00D         	movff	test_function@w+1,calibrate_white@w+1
  2932  004298  EC90  F01C         	call	_calibrate_white	;wreg free
  2933  00429C                     l5176:
  2934                           
  2935                           ;test_and_calibration.c: 56:     if (test_code == 4){amb_light = amb_light_measure(m);}
  2936  00429C  0E04               	movlw	4
  2937  00429E  0101               	movlb	1	; () banked
  2938  0042A0  19B3               	xorwf	test_function@test_code& (0+255),w,b
  2939  0042A2  A4D8               	btfss	status,2,c
  2940  0042A4  EF56  F021         	goto	u5621
  2941  0042A8  EF58  F021         	goto	u5620
  2942  0042AC                     u5621:
  2943  0042AC  EF62  F021         	goto	l5180
  2944  0042B0                     u5620:
  2945  0042B0                     
  2946                           ; BSR set to: 1
  2947  0042B0  C1A6  F06A         	movff	test_function@m,amb_light_measure@amb
  2948  0042B4  C1A7  F06B         	movff	test_function@m+1,amb_light_measure@amb+1
  2949  0042B8  EC47  F026         	call	_amb_light_measure	;wreg free
  2950  0042BC  C06A  F1AE         	movff	?_amb_light_measure,test_function@amb_light
  2951  0042C0  C06B  F1AF         	movff	?_amb_light_measure+1,test_function@amb_light+1
  2952  0042C4                     l5180:
  2953                           
  2954                           ;test_and_calibration.c: 60:         if (test_code == 1){
  2955  0042C4  0101               	movlb	1	; () banked
  2956  0042C6  05B3               	decf	test_function@test_code& (0+255),w,b
  2957  0042C8  A4D8               	btfss	status,2,c
  2958  0042CA  EF69  F021         	goto	u5631
  2959  0042CE  EF6B  F021         	goto	u5630
  2960  0042D2                     u5631:
  2961  0042D2  EF79  F021         	goto	l5188
  2962  0042D6                     u5630:
  2963  0042D6                     
  2964                           ; BSR set to: 1
  2965                           ;test_and_calibration.c: 61:             LED_C();
  2966  0042D6  EC6F  F02F         	call	_LED_C	;wreg free
  2967  0042DA                     
  2968                           ;test_and_calibration.c: 62:             read_color(m);
  2969  0042DA  C1A6  F00C         	movff	test_function@m,read_color@m
  2970  0042DE  C1A7  F00D         	movff	test_function@m+1,read_color@m+1
  2971  0042E2  EC44  F02C         	call	_read_color	;wreg free
  2972  0042E6                     
  2973                           ;test_and_calibration.c: 63:             color_display(m);
  2974  0042E6  C1A6  F058         	movff	test_function@m,color_display@m
  2975  0042EA  C1A7  F059         	movff	test_function@m+1,color_display@m+1
  2976  0042EE  ECDB  F02B         	call	_color_display	;wreg free
  2977  0042F2                     l5188:
  2978                           
  2979                           ;test_and_calibration.c: 66:         if (test_code == 2){
  2980  0042F2  0E02               	movlw	2
  2981  0042F4  0101               	movlb	1	; () banked
  2982  0042F6  19B3               	xorwf	test_function@test_code& (0+255),w,b
  2983  0042F8  A4D8               	btfss	status,2,c
  2984  0042FA  EF81  F021         	goto	u5641
  2985  0042FE  EF83  F021         	goto	u5640
  2986  004302                     u5641:
  2987  004302  EF92  F021         	goto	l5194
  2988  004306                     u5640:
  2989  004306                     
  2990                           ; BSR set to: 1
  2991                           ;test_and_calibration.c: 67:             color = detect_color(m,w);
  2992  004306  C1A6  F079         	movff	test_function@m,detect_color@m
  2993  00430A  C1A7  F07A         	movff	test_function@m+1,detect_color@m+1
  2994  00430E  C1A8  F07B         	movff	test_function@w,detect_color@w
  2995  004312  C1A9  F07C         	movff	test_function@w+1,detect_color@w+1
  2996  004316  EC0A  F007         	call	_detect_color	;wreg free
  2997  00431A  0101               	movlb	1	; () banked
  2998  00431C  6FB1               	movwf	test_function@color& (0+255),b
  2999  00431E                     
  3000                           ; BSR set to: 1
  3001                           ;test_and_calibration.c: 69:             color_predict(color);
  3002  00431E  51B1               	movf	test_function@color& (0+255),w,b
  3003  004320  ECDC  F02E         	call	_color_predict
  3004  004324                     l5194:
  3005                           
  3006                           ;test_and_calibration.c: 72:         if (test_code == 3){
  3007  004324  0E03               	movlw	3
  3008  004326  0101               	movlb	1	; () banked
  3009  004328  19B3               	xorwf	test_function@test_code& (0+255),w,b
  3010  00432A  A4D8               	btfss	status,2,c
  3011  00432C  EF9A  F021         	goto	u5651
  3012  004330  EF9C  F021         	goto	u5650
  3013  004334                     u5651:
  3014  004334  EFAF  F021         	goto	l5204
  3015  004338                     u5650:
  3016  004338  EFA7  F021         	goto	l5202
  3017  00433C                     l5198:
  3018                           
  3019                           ; BSR set to: 1
  3020                           ;test_and_calibration.c: 74:                 color_data_collection(m);
  3021  00433C  C1A6  F05A         	movff	test_function@m,color_data_collection@m
  3022  004340  C1A7  F05B         	movff	test_function@m+1,color_data_collection@m+1
  3023  004344  ECDB  F026         	call	_color_data_collection	;wreg free
  3024  004348                     
  3025                           ;test_and_calibration.c: 75:                 complete = 1;
  3026  004348  0E01               	movlw	1
  3027  00434A  0101               	movlb	1	; () banked
  3028  00434C  6FB0               	movwf	test_function@complete& (0+255),b
  3029  00434E                     l5202:
  3030                           
  3031                           ; BSR set to: 1
  3032                           ;test_and_calibration.c: 73:             while (complete == 0){
  3033  00434E  51B0               	movf	test_function@complete& (0+255),w,b
  3034  004350  B4D8               	btfsc	status,2,c
  3035  004352  EFAD  F021         	goto	u5661
  3036  004356  EFAF  F021         	goto	u5660
  3037  00435A                     u5661:
  3038  00435A  EF9E  F021         	goto	l5198
  3039  00435E                     u5660:
  3040  00435E                     l5204:
  3041                           
  3042                           ; BSR set to: 1
  3043                           ;test_and_calibration.c: 79:         if (test_code == 4){
  3044  00435E  0E04               	movlw	4
  3045  004360  19B3               	xorwf	test_function@test_code& (0+255),w,b
  3046  004362  A4D8               	btfss	status,2,c
  3047  004364  EFB6  F021         	goto	u5671
  3048  004368  EFB8  F021         	goto	u5670
  3049  00436C                     u5671:
  3050  00436C  EFF6  F021         	goto	l5220
  3051  004370                     u5670:
  3052  004370  EFD4  F021         	goto	l5212
  3053  004374                     l5208:
  3054                           
  3055                           ; BSR set to: 1
  3056                           ;test_and_calibration.c: 81:                 fullSpeedAhead(mL, mR);
  3057  004374  C1AA  F01A         	movff	test_function@mL,fullSpeedAhead@mL
  3058  004378  C1AB  F01B         	movff	test_function@mL+1,fullSpeedAhead@mL+1
  3059  00437C  C1AC  F01C         	movff	test_function@mR,fullSpeedAhead@mR
  3060  004380  C1AD  F01D         	movff	test_function@mR+1,fullSpeedAhead@mR+1
  3061  004384  EC73  F02A         	call	_fullSpeedAhead	;wreg free
  3062  004388                     
  3063                           ;test_and_calibration.c: 82:                 stop_signal = detect_wall(mL, mR, amb_light
      +                          );
  3064  004388  C1AA  F06A         	movff	test_function@mL,detect_wall@mL
  3065  00438C  C1AB  F06B         	movff	test_function@mL+1,detect_wall@mL+1
  3066  004390  C1AC  F06C         	movff	test_function@mR,detect_wall@mR
  3067  004394  C1AD  F06D         	movff	test_function@mR+1,detect_wall@mR+1
  3068  004398  C1AE  F06E         	movff	test_function@amb_light,detect_wall@amb_light
  3069  00439C  C1AF  F06F         	movff	test_function@amb_light+1,detect_wall@amb_light+1
  3070  0043A0  ECAD  F029         	call	_detect_wall	;wreg free
  3071  0043A4  0101               	movlb	1	; () banked
  3072  0043A6  6FB2               	movwf	test_function@stop_signal& (0+255),b
  3073  0043A8                     l5212:
  3074                           
  3075                           ; BSR set to: 1
  3076                           ;test_and_calibration.c: 80:             while (stop_signal == 0){
  3077  0043A8  51B2               	movf	test_function@stop_signal& (0+255),w,b
  3078  0043AA  B4D8               	btfsc	status,2,c
  3079  0043AC  EFDA  F021         	goto	u5681
  3080  0043B0  EFDC  F021         	goto	u5680
  3081  0043B4                     u5681:
  3082  0043B4  EFBA  F021         	goto	l5208
  3083  0043B8                     u5680:
  3084  0043B8                     
  3085                           ; BSR set to: 1
  3086                           ;test_and_calibration.c: 84:             stop(mL, mR);
  3087  0043B8  C1AA  F01A         	movff	test_function@mL,stop@mL
  3088  0043BC  C1AB  F01B         	movff	test_function@mL+1,stop@mL+1
  3089  0043C0  C1AC  F01C         	movff	test_function@mR,stop@mR
  3090  0043C4  C1AD  F01D         	movff	test_function@mR+1,stop@mR+1
  3091  0043C8  EC37  F02B         	call	_stop	;wreg free
  3092  0043CC                     
  3093                           ;test_and_calibration.c: 85:             _delay((unsigned long)((1000)*(64000000/4000.0)
      +                          ));
  3094  0043CC  0E52               	movlw	82
  3095  0043CE  0100               	movlb	0	; () banked
  3096  0043D0  6FFF               	movwf	(??_test_function+1)& (0+255),b
  3097  0043D2  0E2B               	movlw	43
  3098  0043D4  6FFE               	movwf	??_test_function& (0+255),b
  3099  0043D6  0E00               	movlw	0
  3100  0043D8                     u5927:
  3101  0043D8  2EE8               	decfsz	wreg,f,c
  3102  0043DA  D7FE               	bra	u5927
  3103  0043DC  2FFE               	decfsz	??_test_function& (0+255),f,b
  3104  0043DE  D7FC               	bra	u5927
  3105  0043E0  2FFF               	decfsz	(??_test_function+1)& (0+255),f,b
  3106  0043E2  D7FA               	bra	u5927
  3107  0043E4  F000               	nop	
  3108  0043E6                     
  3109                           ;test_and_calibration.c: 86:             stop_signal = 0;
  3110  0043E6  0E00               	movlw	0
  3111  0043E8  0101               	movlb	1	; () banked
  3112  0043EA  6FB2               	movwf	test_function@stop_signal& (0+255),b
  3113  0043EC                     l5220:
  3114                           
  3115                           ; BSR set to: 1
  3116                           ;test_and_calibration.c: 89:         if (test_code == 5){
  3117  0043EC  0E05               	movlw	5
  3118  0043EE  19B3               	xorwf	test_function@test_code& (0+255),w,b
  3119  0043F0  A4D8               	btfss	status,2,c
  3120  0043F2  EFFD  F021         	goto	u5691
  3121  0043F6  EFFF  F021         	goto	u5690
  3122  0043FA                     u5691:
  3123  0043FA  EF62  F021         	goto	l5180
  3124  0043FE                     u5690:
  3125  0043FE                     
  3126                           ; BSR set to: 1
  3127                           ;test_and_calibration.c: 90:             test_action(mL,mR);
  3128  0043FE  C1AA  F02D         	movff	test_function@mL,test_action@mL
  3129  004402  C1AB  F02E         	movff	test_function@mL+1,test_action@mL+1
  3130  004406  C1AC  F02F         	movff	test_function@mR,test_action@mR
  3131  00440A  C1AD  F030         	movff	test_function@mR+1,test_action@mR+1
  3132  00440E  ECB0  F025         	call	_test_action	;wreg free
  3133  004412  EF62  F021         	goto	l5180
  3134  004416  0012               	return		;funcret
  3135  004418                     __end_of_test_function:
  3136                           	callstack 0
  3137                           
  3138 ;; *************** function _detect_wall *****************
  3139 ;; Defined at:
  3140 ;;		line 407 in file "color.c"
  3141 ;; Parameters:    Size  Location     Type
  3142 ;;  mL              2   10[BANK0 ] PTR struct DC_motor
  3143 ;;		 -> main@motorL(9), 
  3144 ;;  mR              2   12[BANK0 ] PTR struct DC_motor
  3145 ;;		 -> main@motorR(9), 
  3146 ;;  amb_light       2   14[BANK0 ] unsigned int 
  3147 ;; Auto vars:     Size  Location     Type
  3148 ;;  threshold       2   26[BANK0 ] unsigned int 
  3149 ;;  CC_amb          2   24[BANK0 ] unsigned int 
  3150 ;;  CG_amb          2   18[BANK0 ] unsigned int 
  3151 ;;  stop            1   28[BANK0 ] unsigned char 
  3152 ;; Return value:  Size  Location     Type
  3153 ;;                  1    wreg      unsigned char 
  3154 ;; Registers used:
  3155 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  3156 ;; Tracked objects:
  3157 ;;		On entry : 0/0
  3158 ;;		On exit  : 0/0
  3159 ;;		Unchanged: 0/0
  3160 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3161 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3162 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3163 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3164 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3165 ;;Total ram usage:       19 bytes
  3166 ;; Hardware stack levels used: 1
  3167 ;; Hardware stack levels required when called: 5
  3168 ;; This function calls:
  3169 ;;		_LED_C
  3170 ;;		___flmul
  3171 ;;		___xxtofl
  3172 ;;		_color_read_Clear
  3173 ;;		_color_read_Green
  3174 ;;		_lroundf
  3175 ;; This function is called by:
  3176 ;;		_main
  3177 ;;		_test_function
  3178 ;; This function uses a non-reentrant model
  3179 ;;
  3180                           
  3181                           	psect	text6
  3182  00535A                     __ptext6:
  3183                           	callstack 0
  3184  00535A                     _detect_wall:
  3185                           	callstack 24
  3186  00535A  0E00               	movlw	0
  3187  00535C  0100               	movlb	0	; () banked
  3188  00535E  6F73               	movwf	(detect_wall@CG_amb+1)& (0+255),b
  3189  005360  0E00               	movlw	0
  3190  005362  6F72               	movwf	detect_wall@CG_amb& (0+255),b
  3191                           
  3192                           ;color.c: 410:     unsigned char stop = 0;
  3193  005364  0E00               	movlw	0
  3194  005366  6F7C               	movwf	detect_wall@stop& (0+255),b
  3195                           
  3196                           ;color.c: 411:     unsigned int threshold = 0;
  3197  005368  0E00               	movlw	0
  3198  00536A  6F7B               	movwf	(detect_wall@threshold+1)& (0+255),b
  3199  00536C  0E00               	movlw	0
  3200  00536E  6F7A               	movwf	detect_wall@threshold& (0+255),b
  3201  005370                     
  3202                           ; BSR set to: 0
  3203                           ;color.c: 412:     LED_C();
  3204  005370  EC6F  F02F         	call	_LED_C	;wreg free
  3205  005374                     
  3206                           ;color.c: 413:     _delay((unsigned long)((100)*(64000000/4000.0)));
  3207  005374  0E09               	movlw	9
  3208  005376  0100               	movlb	0	; () banked
  3209  005378  6F71               	movwf	(??_detect_wall+1)& (0+255),b
  3210  00537A  0E1E               	movlw	30
  3211  00537C  6F70               	movwf	??_detect_wall& (0+255),b
  3212  00537E  0EE4               	movlw	228
  3213  005380                     u5937:
  3214  005380  2EE8               	decfsz	wreg,f,c
  3215  005382  D7FE               	bra	u5937
  3216  005384  2F70               	decfsz	??_detect_wall& (0+255),f,b
  3217  005386  D7FC               	bra	u5937
  3218  005388  2F71               	decfsz	(??_detect_wall+1)& (0+255),f,b
  3219  00538A  D7FA               	bra	u5937
  3220  00538C  F000               	nop	
  3221  00538E                     
  3222                           ;color.c: 414:     CC_amb = color_read_Clear();
  3223  00538E  EC14  F02D         	call	_color_read_Clear	;wreg free
  3224  005392  C005  F078         	movff	?_color_read_Clear,detect_wall@CC_amb
  3225  005396  C006  F079         	movff	?_color_read_Clear+1,detect_wall@CC_amb+1
  3226  00539A  ECC4  F02C         	call	_color_read_Green	;wreg free
  3227  00539E                     
  3228                           ;color.c: 416:     threshold = lroundf((float)amb_light * 1.1);
  3229  00539E  C06E  F001         	movff	detect_wall@amb_light,___xxtofl@val
  3230  0053A2  C06F  F002         	movff	detect_wall@amb_light+1,___xxtofl@val+1
  3231  0053A6  6A03               	clrf	(___xxtofl@val+2)^0,c
  3232  0053A8  6A04               	clrf	(___xxtofl@val+3)^0,c
  3233  0053AA  0E00               	movlw	0
  3234  0053AC  EC5A  F020         	call	___xxtofl
  3235  0053B0  C001  F028         	movff	?___xxtofl,___flmul@b
  3236  0053B4  C002  F029         	movff	?___xxtofl+1,___flmul@b+1
  3237  0053B8  C003  F02A         	movff	?___xxtofl+2,___flmul@b+2
  3238  0053BC  C004  F02B         	movff	?___xxtofl+3,___flmul@b+3
  3239  0053C0  0ECD               	movlw	205
  3240  0053C2  6E2C               	movwf	___flmul@a^0,c
  3241  0053C4  0ECC               	movlw	204
  3242  0053C6  6E2D               	movwf	(___flmul@a+1)^0,c
  3243  0053C8  0E8C               	movlw	140
  3244  0053CA  6E2E               	movwf	(___flmul@a+2)^0,c
  3245  0053CC  0E3F               	movlw	63
  3246  0053CE  6E2F               	movwf	(___flmul@a+3)^0,c
  3247  0053D0  ECC6  F010         	call	___flmul	;wreg free
  3248  0053D4  C028  F074         	movff	?___flmul,_detect_wall$2943
  3249  0053D8  C029  F075         	movff	?___flmul+1,_detect_wall$2943+1
  3250  0053DC  C02A  F076         	movff	?___flmul+2,_detect_wall$2943+2
  3251  0053E0  C02B  F077         	movff	?___flmul+3,_detect_wall$2943+3
  3252  0053E4                     
  3253                           ;color.c: 416:     threshold = lroundf((float)amb_light * 1.1);
  3254  0053E4  C074  F066         	movff	_detect_wall$2943,lroundf@x
  3255  0053E8  C075  F067         	movff	_detect_wall$2943+1,lroundf@x+1
  3256  0053EC  C076  F068         	movff	_detect_wall$2943+2,lroundf@x+2
  3257  0053F0  C077  F069         	movff	_detect_wall$2943+3,lroundf@x+3
  3258  0053F4  EC21  F02E         	call	_lroundf	;wreg free
  3259  0053F8  C066  F07A         	movff	?_lroundf,detect_wall@threshold
  3260  0053FC  C067  F07B         	movff	?_lroundf+1,detect_wall@threshold+1
  3261  005400                     
  3262                           ;color.c: 419:     if (CC_amb >= threshold){stop = 1;}
  3263  005400  0100               	movlb	0	; () banked
  3264  005402  517A               	movf	detect_wall@threshold& (0+255),w,b
  3265  005404  5D78               	subwf	detect_wall@CC_amb& (0+255),w,b
  3266  005406  517B               	movf	(detect_wall@threshold+1)& (0+255),w,b
  3267  005408  5979               	subwfb	(detect_wall@CC_amb+1)& (0+255),w,b
  3268  00540A  A0D8               	btfss	status,0,c
  3269  00540C  EF0A  F02A         	goto	u5321
  3270  005410  EF0C  F02A         	goto	u5320
  3271  005414                     u5321:
  3272  005414  EF0E  F02A         	goto	l153
  3273  005418                     u5320:
  3274  005418                     
  3275                           ; BSR set to: 0
  3276  005418  0E01               	movlw	1
  3277  00541A  6F7C               	movwf	detect_wall@stop& (0+255),b
  3278  00541C                     l153:
  3279                           
  3280                           ; BSR set to: 0
  3281                           ;color.c: 420:     return stop;
  3282  00541C  517C               	movf	detect_wall@stop& (0+255),w,b
  3283  00541E                     
  3284                           ; BSR set to: 0
  3285  00541E  0012               	return		;funcret
  3286  005420                     __end_of_detect_wall:
  3287                           	callstack 0
  3288                           
  3289 ;; *************** function _detect_color *****************
  3290 ;; Defined at:
  3291 ;;		line 221 in file "color.c"
  3292 ;; Parameters:    Size  Location     Type
  3293 ;;  m               2   25[BANK0 ] PTR struct color_rgb
  3294 ;;		 -> main@rgb(8), 
  3295 ;;  w               2   27[BANK0 ] PTR struct white_card
  3296 ;;		 -> main@white(28), 
  3297 ;; Auto vars:     Size  Location     Type
  3298 ;;  buf           100   33[BANK0 ] unsigned char [100]
  3299 ;;  BG              2  152[BANK0 ] unsigned int 
  3300 ;;  RR              2  150[BANK0 ] unsigned int 
  3301 ;;  GG              2  147[BANK0 ] unsigned int 
  3302 ;;  GB              2  145[BANK0 ] unsigned int 
  3303 ;;  BB              2  143[BANK0 ] unsigned int 
  3304 ;;  RB              2  141[BANK0 ] unsigned int 
  3305 ;;  GR              2  139[BANK0 ] unsigned int 
  3306 ;;  BR              2  137[BANK0 ] unsigned int 
  3307 ;;  RG              2  135[BANK0 ] unsigned int 
  3308 ;;  BC              2  133[BANK0 ] unsigned int 
  3309 ;;  color           1  149[BANK0 ] unsigned char 
  3310 ;; Return value:  Size  Location     Type
  3311 ;;                  1    wreg      unsigned char 
  3312 ;; Registers used:
  3313 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3314 ;; Tracked objects:
  3315 ;;		On entry : 0/0
  3316 ;;		On exit  : 0/0
  3317 ;;		Unchanged: 0/0
  3318 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3319 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3320 ;;      Locals:         0     125       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3321 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3322 ;;      Totals:         0     133       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3323 ;;Total ram usage:      133 bytes
  3324 ;; Hardware stack levels used: 1
  3325 ;; Hardware stack levels required when called: 9
  3326 ;; This function calls:
  3327 ;;		_LED_B
  3328 ;;		_LED_G
  3329 ;;		_LED_R
  3330 ;;		___fldiv
  3331 ;;		___flmul
  3332 ;;		___fltol
  3333 ;;		___xxtofl
  3334 ;;		_compare
  3335 ;;		_lroundf
  3336 ;;		_read_color
  3337 ;;		_sendStringSerial4
  3338 ;;		_sprintf
  3339 ;;		_toggle_light
  3340 ;; This function is called by:
  3341 ;;		_verify_color
  3342 ;;		_main
  3343 ;;		_test_function
  3344 ;; This function uses a non-reentrant model
  3345 ;;
  3346                           
  3347                           	psect	text7
  3348  000E14                     __ptext7:
  3349                           	callstack 0
  3350  000E14                     _detect_color:
  3351                           	callstack 20
  3352  000E14  0E00               	movlw	0
  3353  000E16  0100               	movlb	0	; () banked
  3354  000E18  6FE8               	movwf	(detect_color@RG+1)& (0+255),b
  3355  000E1A  0E00               	movlw	0
  3356  000E1C  6FE7               	movwf	detect_color@RG& (0+255),b
  3357  000E1E  0E00               	movlw	0
  3358  000E20  6FEE               	movwf	(detect_color@RB+1)& (0+255),b
  3359  000E22  0E00               	movlw	0
  3360  000E24  6FED               	movwf	detect_color@RB& (0+255),b
  3361  000E26  0E00               	movlw	0
  3362  000E28  6FEC               	movwf	(detect_color@GR+1)& (0+255),b
  3363  000E2A  0E00               	movlw	0
  3364  000E2C  6FEB               	movwf	detect_color@GR& (0+255),b
  3365  000E2E  0E00               	movlw	0
  3366  000E30  6FF4               	movwf	(detect_color@GG+1)& (0+255),b
  3367  000E32  0E00               	movlw	0
  3368  000E34  6FF3               	movwf	detect_color@GG& (0+255),b
  3369  000E36  0E00               	movlw	0
  3370  000E38  6FF2               	movwf	(detect_color@GB+1)& (0+255),b
  3371  000E3A  0E00               	movlw	0
  3372  000E3C  6FF1               	movwf	detect_color@GB& (0+255),b
  3373  000E3E  0E00               	movlw	0
  3374  000E40  6FEA               	movwf	(detect_color@BR+1)& (0+255),b
  3375  000E42  0E00               	movlw	0
  3376  000E44  6FE9               	movwf	detect_color@BR& (0+255),b
  3377  000E46  0E00               	movlw	0
  3378  000E48  6FF9               	movwf	(detect_color@BG+1)& (0+255),b
  3379  000E4A  0E00               	movlw	0
  3380  000E4C  6FF8               	movwf	detect_color@BG& (0+255),b
  3381  000E4E  0E00               	movlw	0
  3382  000E50  6FF0               	movwf	(detect_color@BB+1)& (0+255),b
  3383  000E52  0E00               	movlw	0
  3384  000E54  6FEF               	movwf	detect_color@BB& (0+255),b
  3385  000E56  0E00               	movlw	0
  3386  000E58  6FE6               	movwf	(detect_color@BC+1)& (0+255),b
  3387  000E5A  0E00               	movlw	0
  3388  000E5C  6FE5               	movwf	detect_color@BC& (0+255),b
  3389                           
  3390                           ;color.c: 227:     unsigned char color = 0;
  3391  000E5E  0E00               	movlw	0
  3392  000E60  6FF5               	movwf	detect_color@color& (0+255),b
  3393  000E62                     
  3394                           ; BSR set to: 0
  3395                           ;color.c: 229:     LED_R();
  3396  000E62  EC2F  F02F         	call	_LED_R	;wreg free
  3397  000E66                     
  3398                           ;color.c: 230:     _delay((unsigned long)((100)*(64000000/4000.0)));
  3399  000E66  0E09               	movlw	9
  3400  000E68  0100               	movlb	0	; () banked
  3401  000E6A  6F7E               	movwf	(??_detect_color+1)& (0+255),b
  3402  000E6C  0E1E               	movlw	30
  3403  000E6E  6F7D               	movwf	??_detect_color& (0+255),b
  3404  000E70  0EE4               	movlw	228
  3405  000E72                     u5947:
  3406  000E72  2EE8               	decfsz	wreg,f,c
  3407  000E74  D7FE               	bra	u5947
  3408  000E76  2F7D               	decfsz	??_detect_color& (0+255),f,b
  3409  000E78  D7FC               	bra	u5947
  3410  000E7A  2F7E               	decfsz	(??_detect_color+1)& (0+255),f,b
  3411  000E7C  D7FA               	bra	u5947
  3412  000E7E  F000               	nop	
  3413  000E80                     
  3414                           ;color.c: 231:     read_color(m);
  3415  000E80  C079  F00C         	movff	detect_color@m,read_color@m
  3416  000E84  C07A  F00D         	movff	detect_color@m+1,read_color@m+1
  3417  000E88  EC44  F02C         	call	_read_color	;wreg free
  3418  000E8C                     
  3419                           ;color.c: 233:     RR = lroundf((float)(m->R)/(w->RR)*100); RG = lroundf((float)(m->G)/(
      +                          w->RG)*100); RB = lroundf((float)(m->B)/(w->RB)*100);
  3420  000E8C  C07B  FFD9         	movff	detect_color@w,fsr2l
  3421  000E90  C07C  FFDA         	movff	detect_color@w+1,fsr2h
  3422  000E94  CFDE F07D          	movff	postinc2,??_detect_color
  3423  000E98  CFDD F07E          	movff	postdec2,??_detect_color+1
  3424  000E9C  C07D  F001         	movff	??_detect_color,___xxtofl@val
  3425  000EA0  C07E  F002         	movff	??_detect_color+1,___xxtofl@val+1
  3426  000EA4  6A03               	clrf	(___xxtofl@val+2)^0,c
  3427  000EA6  6A04               	clrf	(___xxtofl@val+3)^0,c
  3428  000EA8  0E00               	movlw	0
  3429  000EAA  EC5A  F020         	call	___xxtofl
  3430  000EAE  C001  F013         	movff	?___xxtofl,___fldiv@a
  3431  000EB2  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  3432  000EB6  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  3433  000EBA  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  3434  000EBE  C079  FFD9         	movff	detect_color@m,fsr2l
  3435  000EC2  C07A  FFDA         	movff	detect_color@m+1,fsr2h
  3436  000EC6  CFDE F07F          	movff	postinc2,??_detect_color+2
  3437  000ECA  CFDD F080          	movff	postdec2,??_detect_color+3
  3438  000ECE  C07F  F001         	movff	??_detect_color+2,___xxtofl@val
  3439  000ED2  C080  F002         	movff	??_detect_color+3,___xxtofl@val+1
  3440  000ED6  6A03               	clrf	(___xxtofl@val+2)^0,c
  3441  000ED8  6A04               	clrf	(___xxtofl@val+3)^0,c
  3442  000EDA  0E00               	movlw	0
  3443  000EDC  EC5A  F020         	call	___xxtofl
  3444  000EE0  C001  F00F         	movff	?___xxtofl,___fldiv@b
  3445  000EE4  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  3446  000EE8  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  3447  000EEC  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  3448  000EF0  EC84  F016         	call	___fldiv	;wreg free
  3449  000EF4  C00F  F028         	movff	?___fldiv,___flmul@b
  3450  000EF8  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  3451  000EFC  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  3452  000F00  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  3453  000F04  0E00               	movlw	0
  3454  000F06  6E2C               	movwf	___flmul@a^0,c
  3455  000F08  0E00               	movlw	0
  3456  000F0A  6E2D               	movwf	(___flmul@a+1)^0,c
  3457  000F0C  0EC8               	movlw	200
  3458  000F0E  6E2E               	movwf	(___flmul@a+2)^0,c
  3459  000F10  0E42               	movlw	66
  3460  000F12  6E2F               	movwf	(___flmul@a+3)^0,c
  3461  000F14  ECC6  F010         	call	___flmul	;wreg free
  3462  000F18  C028  F0FA         	movff	?___flmul,_detect_color$2942
  3463  000F1C  C029  F0FB         	movff	?___flmul+1,_detect_color$2942+1
  3464  000F20  C02A  F0FC         	movff	?___flmul+2,_detect_color$2942+2
  3465  000F24  C02B  F0FD         	movff	?___flmul+3,_detect_color$2942+3
  3466  000F28                     
  3467                           ;color.c: 233:     RR = lroundf((float)(m->R)/(w->RR)*100); RG = lroundf((float)(m->G)/(
      +                          w->RG)*100); RB = lroundf((float)(m->B)/(w->RB)*100);
  3468  000F28  C0FA  F066         	movff	_detect_color$2942,lroundf@x
  3469  000F2C  C0FB  F067         	movff	_detect_color$2942+1,lroundf@x+1
  3470  000F30  C0FC  F068         	movff	_detect_color$2942+2,lroundf@x+2
  3471  000F34  C0FD  F069         	movff	_detect_color$2942+3,lroundf@x+3
  3472  000F38  EC21  F02E         	call	_lroundf	;wreg free
  3473  000F3C  C066  F0F6         	movff	?_lroundf,detect_color@RR
  3474  000F40  C067  F0F7         	movff	?_lroundf+1,detect_color@RR+1
  3475  000F44  0100               	movlb	0	; () banked
  3476  000F46  EE20 F002          	lfsr	2,2
  3477  000F4A  517B               	movf	detect_color@w& (0+255),w,b
  3478  000F4C  26D9               	addwf	fsr2l,f,c
  3479  000F4E  517C               	movf	(detect_color@w+1)& (0+255),w,b
  3480  000F50  22DA               	addwfc	fsr2h,f,c
  3481  000F52  CFDE F07D          	movff	postinc2,??_detect_color
  3482  000F56  CFDD F07E          	movff	postdec2,??_detect_color+1
  3483  000F5A  C07D  F001         	movff	??_detect_color,___xxtofl@val
  3484  000F5E  C07E  F002         	movff	??_detect_color+1,___xxtofl@val+1
  3485  000F62  6A03               	clrf	(___xxtofl@val+2)^0,c
  3486  000F64  6A04               	clrf	(___xxtofl@val+3)^0,c
  3487  000F66  0E00               	movlw	0
  3488  000F68  EC5A  F020         	call	___xxtofl
  3489  000F6C  C001  F013         	movff	?___xxtofl,___fldiv@a
  3490  000F70  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  3491  000F74  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  3492  000F78  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  3493  000F7C  0100               	movlb	0	; () banked
  3494  000F7E  EE20 F002          	lfsr	2,2
  3495  000F82  5179               	movf	detect_color@m& (0+255),w,b
  3496  000F84  26D9               	addwf	fsr2l,f,c
  3497  000F86  517A               	movf	(detect_color@m+1)& (0+255),w,b
  3498  000F88  22DA               	addwfc	fsr2h,f,c
  3499  000F8A  CFDE F07F          	movff	postinc2,??_detect_color+2
  3500  000F8E  CFDD F080          	movff	postdec2,??_detect_color+3
  3501  000F92  C07F  F001         	movff	??_detect_color+2,___xxtofl@val
  3502  000F96  C080  F002         	movff	??_detect_color+3,___xxtofl@val+1
  3503  000F9A  6A03               	clrf	(___xxtofl@val+2)^0,c
  3504  000F9C  6A04               	clrf	(___xxtofl@val+3)^0,c
  3505  000F9E  0E00               	movlw	0
  3506  000FA0  EC5A  F020         	call	___xxtofl
  3507  000FA4  C001  F00F         	movff	?___xxtofl,___fldiv@b
  3508  000FA8  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  3509  000FAC  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  3510  000FB0  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  3511  000FB4  EC84  F016         	call	___fldiv	;wreg free
  3512  000FB8  C00F  F028         	movff	?___fldiv,___flmul@b
  3513  000FBC  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  3514  000FC0  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  3515  000FC4  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  3516  000FC8  0E00               	movlw	0
  3517  000FCA  6E2C               	movwf	___flmul@a^0,c
  3518  000FCC  0E00               	movlw	0
  3519  000FCE  6E2D               	movwf	(___flmul@a+1)^0,c
  3520  000FD0  0EC8               	movlw	200
  3521  000FD2  6E2E               	movwf	(___flmul@a+2)^0,c
  3522  000FD4  0E42               	movlw	66
  3523  000FD6  6E2F               	movwf	(___flmul@a+3)^0,c
  3524  000FD8  ECC6  F010         	call	___flmul	;wreg free
  3525  000FDC  C028  F0FA         	movff	?___flmul,_detect_color$2942
  3526  000FE0  C029  F0FB         	movff	?___flmul+1,_detect_color$2942+1
  3527  000FE4  C02A  F0FC         	movff	?___flmul+2,_detect_color$2942+2
  3528  000FE8  C02B  F0FD         	movff	?___flmul+3,_detect_color$2942+3
  3529  000FEC  C0FA  F066         	movff	_detect_color$2942,lroundf@x
  3530  000FF0  C0FB  F067         	movff	_detect_color$2942+1,lroundf@x+1
  3531  000FF4  C0FC  F068         	movff	_detect_color$2942+2,lroundf@x+2
  3532  000FF8  C0FD  F069         	movff	_detect_color$2942+3,lroundf@x+3
  3533  000FFC  EC21  F02E         	call	_lroundf	;wreg free
  3534  001000  C066  F0E7         	movff	?_lroundf,detect_color@RG
  3535  001004  C067  F0E8         	movff	?_lroundf+1,detect_color@RG+1
  3536  001008  0100               	movlb	0	; () banked
  3537  00100A  EE20 F004          	lfsr	2,4
  3538  00100E  517B               	movf	detect_color@w& (0+255),w,b
  3539  001010  26D9               	addwf	fsr2l,f,c
  3540  001012  517C               	movf	(detect_color@w+1)& (0+255),w,b
  3541  001014  22DA               	addwfc	fsr2h,f,c
  3542  001016  CFDE F07D          	movff	postinc2,??_detect_color
  3543  00101A  CFDD F07E          	movff	postdec2,??_detect_color+1
  3544  00101E  C07D  F001         	movff	??_detect_color,___xxtofl@val
  3545  001022  C07E  F002         	movff	??_detect_color+1,___xxtofl@val+1
  3546  001026  6A03               	clrf	(___xxtofl@val+2)^0,c
  3547  001028  6A04               	clrf	(___xxtofl@val+3)^0,c
  3548  00102A  0E00               	movlw	0
  3549  00102C  EC5A  F020         	call	___xxtofl
  3550  001030  C001  F013         	movff	?___xxtofl,___fldiv@a
  3551  001034  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  3552  001038  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  3553  00103C  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  3554  001040  0100               	movlb	0	; () banked
  3555  001042  EE20 F004          	lfsr	2,4
  3556  001046  5179               	movf	detect_color@m& (0+255),w,b
  3557  001048  26D9               	addwf	fsr2l,f,c
  3558  00104A  517A               	movf	(detect_color@m+1)& (0+255),w,b
  3559  00104C  22DA               	addwfc	fsr2h,f,c
  3560  00104E  CFDE F07F          	movff	postinc2,??_detect_color+2
  3561  001052  CFDD F080          	movff	postdec2,??_detect_color+3
  3562  001056  C07F  F001         	movff	??_detect_color+2,___xxtofl@val
  3563  00105A  C080  F002         	movff	??_detect_color+3,___xxtofl@val+1
  3564  00105E  6A03               	clrf	(___xxtofl@val+2)^0,c
  3565  001060  6A04               	clrf	(___xxtofl@val+3)^0,c
  3566  001062  0E00               	movlw	0
  3567  001064  EC5A  F020         	call	___xxtofl
  3568  001068  C001  F00F         	movff	?___xxtofl,___fldiv@b
  3569  00106C  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  3570  001070  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  3571  001074  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  3572  001078  EC84  F016         	call	___fldiv	;wreg free
  3573  00107C  C00F  F028         	movff	?___fldiv,___flmul@b
  3574  001080  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  3575  001084  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  3576  001088  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  3577  00108C  0E00               	movlw	0
  3578  00108E  6E2C               	movwf	___flmul@a^0,c
  3579  001090  0E00               	movlw	0
  3580  001092  6E2D               	movwf	(___flmul@a+1)^0,c
  3581  001094  0EC8               	movlw	200
  3582  001096  6E2E               	movwf	(___flmul@a+2)^0,c
  3583  001098  0E42               	movlw	66
  3584  00109A  6E2F               	movwf	(___flmul@a+3)^0,c
  3585  00109C  ECC6  F010         	call	___flmul	;wreg free
  3586  0010A0  C028  F0FA         	movff	?___flmul,_detect_color$2942
  3587  0010A4  C029  F0FB         	movff	?___flmul+1,_detect_color$2942+1
  3588  0010A8  C02A  F0FC         	movff	?___flmul+2,_detect_color$2942+2
  3589  0010AC  C02B  F0FD         	movff	?___flmul+3,_detect_color$2942+3
  3590  0010B0  C0FA  F066         	movff	_detect_color$2942,lroundf@x
  3591  0010B4  C0FB  F067         	movff	_detect_color$2942+1,lroundf@x+1
  3592  0010B8  C0FC  F068         	movff	_detect_color$2942+2,lroundf@x+2
  3593  0010BC  C0FD  F069         	movff	_detect_color$2942+3,lroundf@x+3
  3594  0010C0  EC21  F02E         	call	_lroundf	;wreg free
  3595  0010C4  C066  F0ED         	movff	?_lroundf,detect_color@RB
  3596  0010C8  C067  F0EE         	movff	?_lroundf+1,detect_color@RB+1
  3597  0010CC                     
  3598                           ;color.c: 234:     _delay((unsigned long)((50)*(64000000/4000.0)));
  3599  0010CC  0E05               	movlw	5
  3600  0010CE  0100               	movlb	0	; () banked
  3601  0010D0  6F7E               	movwf	(??_detect_color+1)& (0+255),b
  3602  0010D2  0E0F               	movlw	15
  3603  0010D4  6F7D               	movwf	??_detect_color& (0+255),b
  3604  0010D6  0EF1               	movlw	241
  3605  0010D8                     u5957:
  3606  0010D8  2EE8               	decfsz	wreg,f,c
  3607  0010DA  D7FE               	bra	u5957
  3608  0010DC  2F7D               	decfsz	??_detect_color& (0+255),f,b
  3609  0010DE  D7FC               	bra	u5957
  3610  0010E0  2F7E               	decfsz	(??_detect_color+1)& (0+255),f,b
  3611  0010E2  D7FA               	bra	u5957
  3612  0010E4                     
  3613                           ;color.c: 236:     char buf[100];;color.c: 237:     sprintf(buf,"%d\t%d\t%d\r\n", RR, RG
      +                          , RB);
  3614  0010E4  0E81               	movlw	low detect_color@buf
  3615  0010E6  0100               	movlb	0	; () banked
  3616  0010E8  6F60               	movwf	sprintf@s& (0+255),b
  3617  0010EA  0E00               	movlw	high detect_color@buf
  3618  0010EC  6F61               	movwf	(sprintf@s+1)& (0+255),b
  3619  0010EE  0E08               	movlw	low (STR_4+3)
  3620  0010F0  6F62               	movwf	sprintf@fmt& (0+255),b
  3621  0010F2  0E0E               	movlw	high (STR_4+3)
  3622  0010F4  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
  3623  0010F6  C0F6  F064         	movff	detect_color@RR,?_sprintf+4
  3624  0010FA  C0F7  F065         	movff	detect_color@RR+1,?_sprintf+5
  3625  0010FE  C0E7  F066         	movff	detect_color@RG,?_sprintf+6
  3626  001102  C0E8  F067         	movff	detect_color@RG+1,?_sprintf+7
  3627  001106  C0ED  F068         	movff	detect_color@RB,?_sprintf+8
  3628  00110A  C0EE  F069         	movff	detect_color@RB+1,?_sprintf+9
  3629  00110E  EC73  F02C         	call	_sprintf	;wreg free
  3630  001112                     
  3631                           ;color.c: 238:     sendStringSerial4(buf);
  3632  001112  0E81               	movlw	low detect_color@buf
  3633  001114  6E02               	movwf	sendStringSerial4@string^0,c
  3634  001116  0E00               	movlw	high detect_color@buf
  3635  001118  6E03               	movwf	(sendStringSerial4@string+1)^0,c
  3636  00111A  ECC4  F02E         	call	_sendStringSerial4	;wreg free
  3637  00111E                     
  3638                           ;color.c: 240:     LED_G();
  3639  00111E  EC4F  F02F         	call	_LED_G	;wreg free
  3640  001122                     
  3641                           ;color.c: 241:     _delay((unsigned long)((100)*(64000000/4000.0)));
  3642  001122  0E09               	movlw	9
  3643  001124  0100               	movlb	0	; () banked
  3644  001126  6F7E               	movwf	(??_detect_color+1)& (0+255),b
  3645  001128  0E1E               	movlw	30
  3646  00112A  6F7D               	movwf	??_detect_color& (0+255),b
  3647  00112C  0EE4               	movlw	228
  3648  00112E                     u5967:
  3649  00112E  2EE8               	decfsz	wreg,f,c
  3650  001130  D7FE               	bra	u5967
  3651  001132  2F7D               	decfsz	??_detect_color& (0+255),f,b
  3652  001134  D7FC               	bra	u5967
  3653  001136  2F7E               	decfsz	(??_detect_color+1)& (0+255),f,b
  3654  001138  D7FA               	bra	u5967
  3655  00113A  F000               	nop	
  3656  00113C                     
  3657                           ;color.c: 242:     read_color(m);
  3658  00113C  C079  F00C         	movff	detect_color@m,read_color@m
  3659  001140  C07A  F00D         	movff	detect_color@m+1,read_color@m+1
  3660  001144  EC44  F02C         	call	_read_color	;wreg free
  3661  001148  0E00               	movlw	0
  3662  00114A  6E2C               	movwf	___flmul@a^0,c
  3663  00114C  0E00               	movlw	0
  3664  00114E  6E2D               	movwf	(___flmul@a+1)^0,c
  3665  001150  0EC8               	movlw	200
  3666  001152  6E2E               	movwf	(___flmul@a+2)^0,c
  3667  001154  0E42               	movlw	66
  3668  001156  6E2F               	movwf	(___flmul@a+3)^0,c
  3669  001158  0100               	movlb	0	; () banked
  3670  00115A  EE20 F006          	lfsr	2,6
  3671  00115E  517B               	movf	detect_color@w& (0+255),w,b
  3672  001160  26D9               	addwf	fsr2l,f,c
  3673  001162  517C               	movf	(detect_color@w+1)& (0+255),w,b
  3674  001164  22DA               	addwfc	fsr2h,f,c
  3675  001166  CFDE F07D          	movff	postinc2,??_detect_color
  3676  00116A  CFDD F07E          	movff	postdec2,??_detect_color+1
  3677  00116E  C07D  F001         	movff	??_detect_color,___xxtofl@val
  3678  001172  C07E  F002         	movff	??_detect_color+1,___xxtofl@val+1
  3679  001176  6A03               	clrf	(___xxtofl@val+2)^0,c
  3680  001178  6A04               	clrf	(___xxtofl@val+3)^0,c
  3681  00117A  0E00               	movlw	0
  3682  00117C  EC5A  F020         	call	___xxtofl
  3683  001180  C001  F013         	movff	?___xxtofl,___fldiv@a
  3684  001184  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  3685  001188  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  3686  00118C  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  3687  001190  C079  FFD9         	movff	detect_color@m,fsr2l
  3688  001194  C07A  FFDA         	movff	detect_color@m+1,fsr2h
  3689  001198  CFDE F07F          	movff	postinc2,??_detect_color+2
  3690  00119C  CFDD F080          	movff	postdec2,??_detect_color+3
  3691  0011A0  C07F  F001         	movff	??_detect_color+2,___xxtofl@val
  3692  0011A4  C080  F002         	movff	??_detect_color+3,___xxtofl@val+1
  3693  0011A8  6A03               	clrf	(___xxtofl@val+2)^0,c
  3694  0011AA  6A04               	clrf	(___xxtofl@val+3)^0,c
  3695  0011AC  0E00               	movlw	0
  3696  0011AE  EC5A  F020         	call	___xxtofl
  3697  0011B2  C001  F00F         	movff	?___xxtofl,___fldiv@b
  3698  0011B6  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  3699  0011BA  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  3700  0011BE  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  3701  0011C2  EC84  F016         	call	___fldiv	;wreg free
  3702  0011C6  C00F  F028         	movff	?___fldiv,___flmul@b
  3703  0011CA  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  3704  0011CE  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  3705  0011D2  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  3706  0011D6  ECC6  F010         	call	___flmul	;wreg free
  3707  0011DA  C028  F05B         	movff	?___flmul,___fltol@f1
  3708  0011DE  C029  F05C         	movff	?___flmul+1,___fltol@f1+1
  3709  0011E2  C02A  F05D         	movff	?___flmul+2,___fltol@f1+2
  3710  0011E6  C02B  F05E         	movff	?___flmul+3,___fltol@f1+3
  3711  0011EA  EC62  F027         	call	___fltol	;wreg free
  3712  0011EE  0E00               	movlw	0
  3713  0011F0  6E2C               	movwf	___flmul@a^0,c
  3714  0011F2  0E00               	movlw	0
  3715  0011F4  6E2D               	movwf	(___flmul@a+1)^0,c
  3716  0011F6  0EC8               	movlw	200
  3717  0011F8  6E2E               	movwf	(___flmul@a+2)^0,c
  3718  0011FA  0E42               	movlw	66
  3719  0011FC  6E2F               	movwf	(___flmul@a+3)^0,c
  3720  0011FE  0100               	movlb	0	; () banked
  3721  001200  EE20 F008          	lfsr	2,8
  3722  001204  517B               	movf	detect_color@w& (0+255),w,b
  3723  001206  26D9               	addwf	fsr2l,f,c
  3724  001208  517C               	movf	(detect_color@w+1)& (0+255),w,b
  3725  00120A  22DA               	addwfc	fsr2h,f,c
  3726  00120C  CFDE F07D          	movff	postinc2,??_detect_color
  3727  001210  CFDD F07E          	movff	postdec2,??_detect_color+1
  3728  001214  C07D  F001         	movff	??_detect_color,___xxtofl@val
  3729  001218  C07E  F002         	movff	??_detect_color+1,___xxtofl@val+1
  3730  00121C  6A03               	clrf	(___xxtofl@val+2)^0,c
  3731  00121E  6A04               	clrf	(___xxtofl@val+3)^0,c
  3732  001220  0E00               	movlw	0
  3733  001222  EC5A  F020         	call	___xxtofl
  3734  001226  C001  F013         	movff	?___xxtofl,___fldiv@a
  3735  00122A  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  3736  00122E  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  3737  001232  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  3738  001236  0100               	movlb	0	; () banked
  3739  001238  EE20 F002          	lfsr	2,2
  3740  00123C  5179               	movf	detect_color@m& (0+255),w,b
  3741  00123E  26D9               	addwf	fsr2l,f,c
  3742  001240  517A               	movf	(detect_color@m+1)& (0+255),w,b
  3743  001242  22DA               	addwfc	fsr2h,f,c
  3744  001244  CFDE F07F          	movff	postinc2,??_detect_color+2
  3745  001248  CFDD F080          	movff	postdec2,??_detect_color+3
  3746  00124C  C07F  F001         	movff	??_detect_color+2,___xxtofl@val
  3747  001250  C080  F002         	movff	??_detect_color+3,___xxtofl@val+1
  3748  001254  6A03               	clrf	(___xxtofl@val+2)^0,c
  3749  001256  6A04               	clrf	(___xxtofl@val+3)^0,c
  3750  001258  0E00               	movlw	0
  3751  00125A  EC5A  F020         	call	___xxtofl
  3752  00125E  C001  F00F         	movff	?___xxtofl,___fldiv@b
  3753  001262  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  3754  001266  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  3755  00126A  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  3756  00126E  EC84  F016         	call	___fldiv	;wreg free
  3757  001272  C00F  F028         	movff	?___fldiv,___flmul@b
  3758  001276  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  3759  00127A  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  3760  00127E  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  3761  001282  ECC6  F010         	call	___flmul	;wreg free
  3762  001286  C028  F05B         	movff	?___flmul,___fltol@f1
  3763  00128A  C029  F05C         	movff	?___flmul+1,___fltol@f1+1
  3764  00128E  C02A  F05D         	movff	?___flmul+2,___fltol@f1+2
  3765  001292  C02B  F05E         	movff	?___flmul+3,___fltol@f1+3
  3766  001296  EC62  F027         	call	___fltol	;wreg free
  3767  00129A  0E00               	movlw	0
  3768  00129C  6E2C               	movwf	___flmul@a^0,c
  3769  00129E  0E00               	movlw	0
  3770  0012A0  6E2D               	movwf	(___flmul@a+1)^0,c
  3771  0012A2  0EC8               	movlw	200
  3772  0012A4  6E2E               	movwf	(___flmul@a+2)^0,c
  3773  0012A6  0E42               	movlw	66
  3774  0012A8  6E2F               	movwf	(___flmul@a+3)^0,c
  3775  0012AA  0100               	movlb	0	; () banked
  3776  0012AC  EE20 F00A          	lfsr	2,10
  3777  0012B0  517B               	movf	detect_color@w& (0+255),w,b
  3778  0012B2  26D9               	addwf	fsr2l,f,c
  3779  0012B4  517C               	movf	(detect_color@w+1)& (0+255),w,b
  3780  0012B6  22DA               	addwfc	fsr2h,f,c
  3781  0012B8  CFDE F07D          	movff	postinc2,??_detect_color
  3782  0012BC  CFDD F07E          	movff	postdec2,??_detect_color+1
  3783  0012C0  C07D  F001         	movff	??_detect_color,___xxtofl@val
  3784  0012C4  C07E  F002         	movff	??_detect_color+1,___xxtofl@val+1
  3785  0012C8  6A03               	clrf	(___xxtofl@val+2)^0,c
  3786  0012CA  6A04               	clrf	(___xxtofl@val+3)^0,c
  3787  0012CC  0E00               	movlw	0
  3788  0012CE  EC5A  F020         	call	___xxtofl
  3789  0012D2  C001  F013         	movff	?___xxtofl,___fldiv@a
  3790  0012D6  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  3791  0012DA  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  3792  0012DE  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  3793  0012E2  0100               	movlb	0	; () banked
  3794  0012E4  EE20 F004          	lfsr	2,4
  3795  0012E8  5179               	movf	detect_color@m& (0+255),w,b
  3796  0012EA  26D9               	addwf	fsr2l,f,c
  3797  0012EC  517A               	movf	(detect_color@m+1)& (0+255),w,b
  3798  0012EE  22DA               	addwfc	fsr2h,f,c
  3799  0012F0  CFDE F07F          	movff	postinc2,??_detect_color+2
  3800  0012F4  CFDD F080          	movff	postdec2,??_detect_color+3
  3801  0012F8  C07F  F001         	movff	??_detect_color+2,___xxtofl@val
  3802  0012FC  C080  F002         	movff	??_detect_color+3,___xxtofl@val+1
  3803  001300  6A03               	clrf	(___xxtofl@val+2)^0,c
  3804  001302  6A04               	clrf	(___xxtofl@val+3)^0,c
  3805  001304  0E00               	movlw	0
  3806  001306  EC5A  F020         	call	___xxtofl
  3807  00130A  C001  F00F         	movff	?___xxtofl,___fldiv@b
  3808  00130E  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  3809  001312  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  3810  001316  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  3811  00131A  EC84  F016         	call	___fldiv	;wreg free
  3812  00131E  C00F  F028         	movff	?___fldiv,___flmul@b
  3813  001322  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  3814  001326  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  3815  00132A  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  3816  00132E  ECC6  F010         	call	___flmul	;wreg free
  3817  001332  C028  F05B         	movff	?___flmul,___fltol@f1
  3818  001336  C029  F05C         	movff	?___flmul+1,___fltol@f1+1
  3819  00133A  C02A  F05D         	movff	?___flmul+2,___fltol@f1+2
  3820  00133E  C02B  F05E         	movff	?___flmul+3,___fltol@f1+3
  3821  001342  EC62  F027         	call	___fltol	;wreg free
  3822  001346                     
  3823                           ;color.c: 245:     GR = lroundf((float)(m->R)/(w->GR)*100); GG = lroundf((float)(m->G)/(
      +                          w->GG)*100); GB = lroundf((float)(m->B)/(w->GB)*100);
  3824  001346  0100               	movlb	0	; () banked
  3825  001348  EE20 F006          	lfsr	2,6
  3826  00134C  517B               	movf	detect_color@w& (0+255),w,b
  3827  00134E  26D9               	addwf	fsr2l,f,c
  3828  001350  517C               	movf	(detect_color@w+1)& (0+255),w,b
  3829  001352  22DA               	addwfc	fsr2h,f,c
  3830  001354  CFDE F07D          	movff	postinc2,??_detect_color
  3831  001358  CFDD F07E          	movff	postdec2,??_detect_color+1
  3832  00135C  C07D  F001         	movff	??_detect_color,___xxtofl@val
  3833  001360  C07E  F002         	movff	??_detect_color+1,___xxtofl@val+1
  3834  001364  6A03               	clrf	(___xxtofl@val+2)^0,c
  3835  001366  6A04               	clrf	(___xxtofl@val+3)^0,c
  3836  001368  0E00               	movlw	0
  3837  00136A  EC5A  F020         	call	___xxtofl
  3838  00136E  C001  F013         	movff	?___xxtofl,___fldiv@a
  3839  001372  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  3840  001376  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  3841  00137A  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  3842  00137E  C079  FFD9         	movff	detect_color@m,fsr2l
  3843  001382  C07A  FFDA         	movff	detect_color@m+1,fsr2h
  3844  001386  CFDE F07F          	movff	postinc2,??_detect_color+2
  3845  00138A  CFDD F080          	movff	postdec2,??_detect_color+3
  3846  00138E  C07F  F001         	movff	??_detect_color+2,___xxtofl@val
  3847  001392  C080  F002         	movff	??_detect_color+3,___xxtofl@val+1
  3848  001396  6A03               	clrf	(___xxtofl@val+2)^0,c
  3849  001398  6A04               	clrf	(___xxtofl@val+3)^0,c
  3850  00139A  0E00               	movlw	0
  3851  00139C  EC5A  F020         	call	___xxtofl
  3852  0013A0  C001  F00F         	movff	?___xxtofl,___fldiv@b
  3853  0013A4  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  3854  0013A8  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  3855  0013AC  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  3856  0013B0  EC84  F016         	call	___fldiv	;wreg free
  3857  0013B4  C00F  F028         	movff	?___fldiv,___flmul@b
  3858  0013B8  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  3859  0013BC  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  3860  0013C0  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  3861  0013C4  0E00               	movlw	0
  3862  0013C6  6E2C               	movwf	___flmul@a^0,c
  3863  0013C8  0E00               	movlw	0
  3864  0013CA  6E2D               	movwf	(___flmul@a+1)^0,c
  3865  0013CC  0EC8               	movlw	200
  3866  0013CE  6E2E               	movwf	(___flmul@a+2)^0,c
  3867  0013D0  0E42               	movlw	66
  3868  0013D2  6E2F               	movwf	(___flmul@a+3)^0,c
  3869  0013D4  ECC6  F010         	call	___flmul	;wreg free
  3870  0013D8  C028  F0FA         	movff	?___flmul,_detect_color$2942
  3871  0013DC  C029  F0FB         	movff	?___flmul+1,_detect_color$2942+1
  3872  0013E0  C02A  F0FC         	movff	?___flmul+2,_detect_color$2942+2
  3873  0013E4  C02B  F0FD         	movff	?___flmul+3,_detect_color$2942+3
  3874  0013E8                     
  3875                           ;color.c: 245:     GR = lroundf((float)(m->R)/(w->GR)*100); GG = lroundf((float)(m->G)/(
      +                          w->GG)*100); GB = lroundf((float)(m->B)/(w->GB)*100);
  3876  0013E8  C0FA  F066         	movff	_detect_color$2942,lroundf@x
  3877  0013EC  C0FB  F067         	movff	_detect_color$2942+1,lroundf@x+1
  3878  0013F0  C0FC  F068         	movff	_detect_color$2942+2,lroundf@x+2
  3879  0013F4  C0FD  F069         	movff	_detect_color$2942+3,lroundf@x+3
  3880  0013F8  EC21  F02E         	call	_lroundf	;wreg free
  3881  0013FC  C066  F0EB         	movff	?_lroundf,detect_color@GR
  3882  001400  C067  F0EC         	movff	?_lroundf+1,detect_color@GR+1
  3883  001404  0100               	movlb	0	; () banked
  3884  001406  EE20 F008          	lfsr	2,8
  3885  00140A  517B               	movf	detect_color@w& (0+255),w,b
  3886  00140C  26D9               	addwf	fsr2l,f,c
  3887  00140E  517C               	movf	(detect_color@w+1)& (0+255),w,b
  3888  001410  22DA               	addwfc	fsr2h,f,c
  3889  001412  CFDE F07D          	movff	postinc2,??_detect_color
  3890  001416  CFDD F07E          	movff	postdec2,??_detect_color+1
  3891  00141A  C07D  F001         	movff	??_detect_color,___xxtofl@val
  3892  00141E  C07E  F002         	movff	??_detect_color+1,___xxtofl@val+1
  3893  001422  6A03               	clrf	(___xxtofl@val+2)^0,c
  3894  001424  6A04               	clrf	(___xxtofl@val+3)^0,c
  3895  001426  0E00               	movlw	0
  3896  001428  EC5A  F020         	call	___xxtofl
  3897  00142C  C001  F013         	movff	?___xxtofl,___fldiv@a
  3898  001430  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  3899  001434  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  3900  001438  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  3901  00143C  0100               	movlb	0	; () banked
  3902  00143E  EE20 F002          	lfsr	2,2
  3903  001442  5179               	movf	detect_color@m& (0+255),w,b
  3904  001444  26D9               	addwf	fsr2l,f,c
  3905  001446  517A               	movf	(detect_color@m+1)& (0+255),w,b
  3906  001448  22DA               	addwfc	fsr2h,f,c
  3907  00144A  CFDE F07F          	movff	postinc2,??_detect_color+2
  3908  00144E  CFDD F080          	movff	postdec2,??_detect_color+3
  3909  001452  C07F  F001         	movff	??_detect_color+2,___xxtofl@val
  3910  001456  C080  F002         	movff	??_detect_color+3,___xxtofl@val+1
  3911  00145A  6A03               	clrf	(___xxtofl@val+2)^0,c
  3912  00145C  6A04               	clrf	(___xxtofl@val+3)^0,c
  3913  00145E  0E00               	movlw	0
  3914  001460  EC5A  F020         	call	___xxtofl
  3915  001464  C001  F00F         	movff	?___xxtofl,___fldiv@b
  3916  001468  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  3917  00146C  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  3918  001470  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  3919  001474  EC84  F016         	call	___fldiv	;wreg free
  3920  001478  C00F  F028         	movff	?___fldiv,___flmul@b
  3921  00147C  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  3922  001480  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  3923  001484  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  3924  001488  0E00               	movlw	0
  3925  00148A  6E2C               	movwf	___flmul@a^0,c
  3926  00148C  0E00               	movlw	0
  3927  00148E  6E2D               	movwf	(___flmul@a+1)^0,c
  3928  001490  0EC8               	movlw	200
  3929  001492  6E2E               	movwf	(___flmul@a+2)^0,c
  3930  001494  0E42               	movlw	66
  3931  001496  6E2F               	movwf	(___flmul@a+3)^0,c
  3932  001498  ECC6  F010         	call	___flmul	;wreg free
  3933  00149C  C028  F0FA         	movff	?___flmul,_detect_color$2942
  3934  0014A0  C029  F0FB         	movff	?___flmul+1,_detect_color$2942+1
  3935  0014A4  C02A  F0FC         	movff	?___flmul+2,_detect_color$2942+2
  3936  0014A8  C02B  F0FD         	movff	?___flmul+3,_detect_color$2942+3
  3937  0014AC  C0FA  F066         	movff	_detect_color$2942,lroundf@x
  3938  0014B0  C0FB  F067         	movff	_detect_color$2942+1,lroundf@x+1
  3939  0014B4  C0FC  F068         	movff	_detect_color$2942+2,lroundf@x+2
  3940  0014B8  C0FD  F069         	movff	_detect_color$2942+3,lroundf@x+3
  3941  0014BC  EC21  F02E         	call	_lroundf	;wreg free
  3942  0014C0  C066  F0F3         	movff	?_lroundf,detect_color@GG
  3943  0014C4  C067  F0F4         	movff	?_lroundf+1,detect_color@GG+1
  3944  0014C8  0100               	movlb	0	; () banked
  3945  0014CA  EE20 F00A          	lfsr	2,10
  3946  0014CE  517B               	movf	detect_color@w& (0+255),w,b
  3947  0014D0  26D9               	addwf	fsr2l,f,c
  3948  0014D2  517C               	movf	(detect_color@w+1)& (0+255),w,b
  3949  0014D4  22DA               	addwfc	fsr2h,f,c
  3950  0014D6  CFDE F07D          	movff	postinc2,??_detect_color
  3951  0014DA  CFDD F07E          	movff	postdec2,??_detect_color+1
  3952  0014DE  C07D  F001         	movff	??_detect_color,___xxtofl@val
  3953  0014E2  C07E  F002         	movff	??_detect_color+1,___xxtofl@val+1
  3954  0014E6  6A03               	clrf	(___xxtofl@val+2)^0,c
  3955  0014E8  6A04               	clrf	(___xxtofl@val+3)^0,c
  3956  0014EA  0E00               	movlw	0
  3957  0014EC  EC5A  F020         	call	___xxtofl
  3958  0014F0  C001  F013         	movff	?___xxtofl,___fldiv@a
  3959  0014F4  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  3960  0014F8  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  3961  0014FC  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  3962  001500  0100               	movlb	0	; () banked
  3963  001502  EE20 F004          	lfsr	2,4
  3964  001506  5179               	movf	detect_color@m& (0+255),w,b
  3965  001508  26D9               	addwf	fsr2l,f,c
  3966  00150A  517A               	movf	(detect_color@m+1)& (0+255),w,b
  3967  00150C  22DA               	addwfc	fsr2h,f,c
  3968  00150E  CFDE F07F          	movff	postinc2,??_detect_color+2
  3969  001512  CFDD F080          	movff	postdec2,??_detect_color+3
  3970  001516  C07F  F001         	movff	??_detect_color+2,___xxtofl@val
  3971  00151A  C080  F002         	movff	??_detect_color+3,___xxtofl@val+1
  3972  00151E  6A03               	clrf	(___xxtofl@val+2)^0,c
  3973  001520  6A04               	clrf	(___xxtofl@val+3)^0,c
  3974  001522  0E00               	movlw	0
  3975  001524  EC5A  F020         	call	___xxtofl
  3976  001528  C001  F00F         	movff	?___xxtofl,___fldiv@b
  3977  00152C  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  3978  001530  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  3979  001534  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  3980  001538  EC84  F016         	call	___fldiv	;wreg free
  3981  00153C  C00F  F028         	movff	?___fldiv,___flmul@b
  3982  001540  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  3983  001544  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  3984  001548  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  3985  00154C  0E00               	movlw	0
  3986  00154E  6E2C               	movwf	___flmul@a^0,c
  3987  001550  0E00               	movlw	0
  3988  001552  6E2D               	movwf	(___flmul@a+1)^0,c
  3989  001554  0EC8               	movlw	200
  3990  001556  6E2E               	movwf	(___flmul@a+2)^0,c
  3991  001558  0E42               	movlw	66
  3992  00155A  6E2F               	movwf	(___flmul@a+3)^0,c
  3993  00155C  ECC6  F010         	call	___flmul	;wreg free
  3994  001560  C028  F0FA         	movff	?___flmul,_detect_color$2942
  3995  001564  C029  F0FB         	movff	?___flmul+1,_detect_color$2942+1
  3996  001568  C02A  F0FC         	movff	?___flmul+2,_detect_color$2942+2
  3997  00156C  C02B  F0FD         	movff	?___flmul+3,_detect_color$2942+3
  3998  001570  C0FA  F066         	movff	_detect_color$2942,lroundf@x
  3999  001574  C0FB  F067         	movff	_detect_color$2942+1,lroundf@x+1
  4000  001578  C0FC  F068         	movff	_detect_color$2942+2,lroundf@x+2
  4001  00157C  C0FD  F069         	movff	_detect_color$2942+3,lroundf@x+3
  4002  001580  EC21  F02E         	call	_lroundf	;wreg free
  4003  001584  C066  F0F1         	movff	?_lroundf,detect_color@GB
  4004  001588  C067  F0F2         	movff	?_lroundf+1,detect_color@GB+1
  4005  00158C                     
  4006                           ;color.c: 247:     sprintf(buf,"%d\t%d\t%d\r\n", GR, GG, GB);
  4007  00158C  0E81               	movlw	low detect_color@buf
  4008  00158E  0100               	movlb	0	; () banked
  4009  001590  6F60               	movwf	sprintf@s& (0+255),b
  4010  001592  0E00               	movlw	high detect_color@buf
  4011  001594  6F61               	movwf	(sprintf@s+1)& (0+255),b
  4012  001596  0E08               	movlw	low (STR_4+3)
  4013  001598  6F62               	movwf	sprintf@fmt& (0+255),b
  4014  00159A  0E0E               	movlw	high (STR_4+3)
  4015  00159C  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
  4016  00159E  C0EB  F064         	movff	detect_color@GR,?_sprintf+4
  4017  0015A2  C0EC  F065         	movff	detect_color@GR+1,?_sprintf+5
  4018  0015A6  C0F3  F066         	movff	detect_color@GG,?_sprintf+6
  4019  0015AA  C0F4  F067         	movff	detect_color@GG+1,?_sprintf+7
  4020  0015AE  C0F1  F068         	movff	detect_color@GB,?_sprintf+8
  4021  0015B2  C0F2  F069         	movff	detect_color@GB+1,?_sprintf+9
  4022  0015B6  EC73  F02C         	call	_sprintf	;wreg free
  4023  0015BA                     
  4024                           ;color.c: 248:     sendStringSerial4(buf);
  4025  0015BA  0E81               	movlw	low detect_color@buf
  4026  0015BC  6E02               	movwf	sendStringSerial4@string^0,c
  4027  0015BE  0E00               	movlw	high detect_color@buf
  4028  0015C0  6E03               	movwf	(sendStringSerial4@string+1)^0,c
  4029  0015C2  ECC4  F02E         	call	_sendStringSerial4	;wreg free
  4030  0015C6                     
  4031                           ;color.c: 250:     LED_B();
  4032  0015C6  EC5F  F02F         	call	_LED_B	;wreg free
  4033  0015CA                     
  4034                           ;color.c: 251:     _delay((unsigned long)((100)*(64000000/4000.0)));
  4035  0015CA  0E09               	movlw	9
  4036  0015CC  0100               	movlb	0	; () banked
  4037  0015CE  6F7E               	movwf	(??_detect_color+1)& (0+255),b
  4038  0015D0  0E1E               	movlw	30
  4039  0015D2  6F7D               	movwf	??_detect_color& (0+255),b
  4040  0015D4  0EE4               	movlw	228
  4041  0015D6                     u5977:
  4042  0015D6  2EE8               	decfsz	wreg,f,c
  4043  0015D8  D7FE               	bra	u5977
  4044  0015DA  2F7D               	decfsz	??_detect_color& (0+255),f,b
  4045  0015DC  D7FC               	bra	u5977
  4046  0015DE  2F7E               	decfsz	(??_detect_color+1)& (0+255),f,b
  4047  0015E0  D7FA               	bra	u5977
  4048  0015E2  F000               	nop	
  4049  0015E4                     
  4050                           ;color.c: 252:     read_color(m);
  4051  0015E4  C079  F00C         	movff	detect_color@m,read_color@m
  4052  0015E8  C07A  F00D         	movff	detect_color@m+1,read_color@m+1
  4053  0015EC  EC44  F02C         	call	_read_color	;wreg free
  4054  0015F0                     
  4055                           ;color.c: 253:     BR = lroundf((float)(m->R)/(w->BR)*100); BG = lroundf((float)(m->G)/(
      +                          w->BG)*100); BB = lroundf((float)(m->B)/(w->BB)*100);
  4056  0015F0  0100               	movlb	0	; () banked
  4057  0015F2  EE20 F00C          	lfsr	2,12
  4058  0015F6  517B               	movf	detect_color@w& (0+255),w,b
  4059  0015F8  26D9               	addwf	fsr2l,f,c
  4060  0015FA  517C               	movf	(detect_color@w+1)& (0+255),w,b
  4061  0015FC  22DA               	addwfc	fsr2h,f,c
  4062  0015FE  CFDE F07D          	movff	postinc2,??_detect_color
  4063  001602  CFDD F07E          	movff	postdec2,??_detect_color+1
  4064  001606  C07D  F001         	movff	??_detect_color,___xxtofl@val
  4065  00160A  C07E  F002         	movff	??_detect_color+1,___xxtofl@val+1
  4066  00160E  6A03               	clrf	(___xxtofl@val+2)^0,c
  4067  001610  6A04               	clrf	(___xxtofl@val+3)^0,c
  4068  001612  0E00               	movlw	0
  4069  001614  EC5A  F020         	call	___xxtofl
  4070  001618  C001  F013         	movff	?___xxtofl,___fldiv@a
  4071  00161C  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  4072  001620  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  4073  001624  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  4074  001628  C079  FFD9         	movff	detect_color@m,fsr2l
  4075  00162C  C07A  FFDA         	movff	detect_color@m+1,fsr2h
  4076  001630  CFDE F07F          	movff	postinc2,??_detect_color+2
  4077  001634  CFDD F080          	movff	postdec2,??_detect_color+3
  4078  001638  C07F  F001         	movff	??_detect_color+2,___xxtofl@val
  4079  00163C  C080  F002         	movff	??_detect_color+3,___xxtofl@val+1
  4080  001640  6A03               	clrf	(___xxtofl@val+2)^0,c
  4081  001642  6A04               	clrf	(___xxtofl@val+3)^0,c
  4082  001644  0E00               	movlw	0
  4083  001646  EC5A  F020         	call	___xxtofl
  4084  00164A  C001  F00F         	movff	?___xxtofl,___fldiv@b
  4085  00164E  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  4086  001652  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  4087  001656  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  4088  00165A  EC84  F016         	call	___fldiv	;wreg free
  4089  00165E  C00F  F028         	movff	?___fldiv,___flmul@b
  4090  001662  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  4091  001666  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  4092  00166A  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  4093  00166E  0E00               	movlw	0
  4094  001670  6E2C               	movwf	___flmul@a^0,c
  4095  001672  0E00               	movlw	0
  4096  001674  6E2D               	movwf	(___flmul@a+1)^0,c
  4097  001676  0EC8               	movlw	200
  4098  001678  6E2E               	movwf	(___flmul@a+2)^0,c
  4099  00167A  0E42               	movlw	66
  4100  00167C  6E2F               	movwf	(___flmul@a+3)^0,c
  4101  00167E  ECC6  F010         	call	___flmul	;wreg free
  4102  001682  C028  F0FA         	movff	?___flmul,_detect_color$2942
  4103  001686  C029  F0FB         	movff	?___flmul+1,_detect_color$2942+1
  4104  00168A  C02A  F0FC         	movff	?___flmul+2,_detect_color$2942+2
  4105  00168E  C02B  F0FD         	movff	?___flmul+3,_detect_color$2942+3
  4106  001692                     
  4107                           ;color.c: 253:     BR = lroundf((float)(m->R)/(w->BR)*100); BG = lroundf((float)(m->G)/(
      +                          w->BG)*100); BB = lroundf((float)(m->B)/(w->BB)*100);
  4108  001692  C0FA  F066         	movff	_detect_color$2942,lroundf@x
  4109  001696  C0FB  F067         	movff	_detect_color$2942+1,lroundf@x+1
  4110  00169A  C0FC  F068         	movff	_detect_color$2942+2,lroundf@x+2
  4111  00169E  C0FD  F069         	movff	_detect_color$2942+3,lroundf@x+3
  4112  0016A2  EC21  F02E         	call	_lroundf	;wreg free
  4113  0016A6  C066  F0E9         	movff	?_lroundf,detect_color@BR
  4114  0016AA  C067  F0EA         	movff	?_lroundf+1,detect_color@BR+1
  4115  0016AE  0100               	movlb	0	; () banked
  4116  0016B0  EE20 F00E          	lfsr	2,14
  4117  0016B4  517B               	movf	detect_color@w& (0+255),w,b
  4118  0016B6  26D9               	addwf	fsr2l,f,c
  4119  0016B8  517C               	movf	(detect_color@w+1)& (0+255),w,b
  4120  0016BA  22DA               	addwfc	fsr2h,f,c
  4121  0016BC  CFDE F07D          	movff	postinc2,??_detect_color
  4122  0016C0  CFDD F07E          	movff	postdec2,??_detect_color+1
  4123  0016C4  C07D  F001         	movff	??_detect_color,___xxtofl@val
  4124  0016C8  C07E  F002         	movff	??_detect_color+1,___xxtofl@val+1
  4125  0016CC  6A03               	clrf	(___xxtofl@val+2)^0,c
  4126  0016CE  6A04               	clrf	(___xxtofl@val+3)^0,c
  4127  0016D0  0E00               	movlw	0
  4128  0016D2  EC5A  F020         	call	___xxtofl
  4129  0016D6  C001  F013         	movff	?___xxtofl,___fldiv@a
  4130  0016DA  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  4131  0016DE  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  4132  0016E2  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  4133  0016E6  0100               	movlb	0	; () banked
  4134  0016E8  EE20 F002          	lfsr	2,2
  4135  0016EC  5179               	movf	detect_color@m& (0+255),w,b
  4136  0016EE  26D9               	addwf	fsr2l,f,c
  4137  0016F0  517A               	movf	(detect_color@m+1)& (0+255),w,b
  4138  0016F2  22DA               	addwfc	fsr2h,f,c
  4139  0016F4  CFDE F07F          	movff	postinc2,??_detect_color+2
  4140  0016F8  CFDD F080          	movff	postdec2,??_detect_color+3
  4141  0016FC  C07F  F001         	movff	??_detect_color+2,___xxtofl@val
  4142  001700  C080  F002         	movff	??_detect_color+3,___xxtofl@val+1
  4143  001704  6A03               	clrf	(___xxtofl@val+2)^0,c
  4144  001706  6A04               	clrf	(___xxtofl@val+3)^0,c
  4145  001708  0E00               	movlw	0
  4146  00170A  EC5A  F020         	call	___xxtofl
  4147  00170E  C001  F00F         	movff	?___xxtofl,___fldiv@b
  4148  001712  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  4149  001716  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  4150  00171A  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  4151  00171E  EC84  F016         	call	___fldiv	;wreg free
  4152  001722  C00F  F028         	movff	?___fldiv,___flmul@b
  4153  001726  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  4154  00172A  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  4155  00172E  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  4156  001732  0E00               	movlw	0
  4157  001734  6E2C               	movwf	___flmul@a^0,c
  4158  001736  0E00               	movlw	0
  4159  001738  6E2D               	movwf	(___flmul@a+1)^0,c
  4160  00173A  0EC8               	movlw	200
  4161  00173C  6E2E               	movwf	(___flmul@a+2)^0,c
  4162  00173E  0E42               	movlw	66
  4163  001740  6E2F               	movwf	(___flmul@a+3)^0,c
  4164  001742  ECC6  F010         	call	___flmul	;wreg free
  4165  001746  C028  F0FA         	movff	?___flmul,_detect_color$2942
  4166  00174A  C029  F0FB         	movff	?___flmul+1,_detect_color$2942+1
  4167  00174E  C02A  F0FC         	movff	?___flmul+2,_detect_color$2942+2
  4168  001752  C02B  F0FD         	movff	?___flmul+3,_detect_color$2942+3
  4169  001756  C0FA  F066         	movff	_detect_color$2942,lroundf@x
  4170  00175A  C0FB  F067         	movff	_detect_color$2942+1,lroundf@x+1
  4171  00175E  C0FC  F068         	movff	_detect_color$2942+2,lroundf@x+2
  4172  001762  C0FD  F069         	movff	_detect_color$2942+3,lroundf@x+3
  4173  001766  EC21  F02E         	call	_lroundf	;wreg free
  4174  00176A  C066  F0F8         	movff	?_lroundf,detect_color@BG
  4175  00176E  C067  F0F9         	movff	?_lroundf+1,detect_color@BG+1
  4176  001772  0100               	movlb	0	; () banked
  4177  001774  EE20 F010          	lfsr	2,16
  4178  001778  517B               	movf	detect_color@w& (0+255),w,b
  4179  00177A  26D9               	addwf	fsr2l,f,c
  4180  00177C  517C               	movf	(detect_color@w+1)& (0+255),w,b
  4181  00177E  22DA               	addwfc	fsr2h,f,c
  4182  001780  CFDE F07D          	movff	postinc2,??_detect_color
  4183  001784  CFDD F07E          	movff	postdec2,??_detect_color+1
  4184  001788  C07D  F001         	movff	??_detect_color,___xxtofl@val
  4185  00178C  C07E  F002         	movff	??_detect_color+1,___xxtofl@val+1
  4186  001790  6A03               	clrf	(___xxtofl@val+2)^0,c
  4187  001792  6A04               	clrf	(___xxtofl@val+3)^0,c
  4188  001794  0E00               	movlw	0
  4189  001796  EC5A  F020         	call	___xxtofl
  4190  00179A  C001  F013         	movff	?___xxtofl,___fldiv@a
  4191  00179E  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  4192  0017A2  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  4193  0017A6  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  4194  0017AA  0100               	movlb	0	; () banked
  4195  0017AC  EE20 F004          	lfsr	2,4
  4196  0017B0  5179               	movf	detect_color@m& (0+255),w,b
  4197  0017B2  26D9               	addwf	fsr2l,f,c
  4198  0017B4  517A               	movf	(detect_color@m+1)& (0+255),w,b
  4199  0017B6  22DA               	addwfc	fsr2h,f,c
  4200  0017B8  CFDE F07F          	movff	postinc2,??_detect_color+2
  4201  0017BC  CFDD F080          	movff	postdec2,??_detect_color+3
  4202  0017C0  C07F  F001         	movff	??_detect_color+2,___xxtofl@val
  4203  0017C4  C080  F002         	movff	??_detect_color+3,___xxtofl@val+1
  4204  0017C8  6A03               	clrf	(___xxtofl@val+2)^0,c
  4205  0017CA  6A04               	clrf	(___xxtofl@val+3)^0,c
  4206  0017CC  0E00               	movlw	0
  4207  0017CE  EC5A  F020         	call	___xxtofl
  4208  0017D2  C001  F00F         	movff	?___xxtofl,___fldiv@b
  4209  0017D6  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  4210  0017DA  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  4211  0017DE  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  4212  0017E2  EC84  F016         	call	___fldiv	;wreg free
  4213  0017E6  C00F  F028         	movff	?___fldiv,___flmul@b
  4214  0017EA  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  4215  0017EE  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  4216  0017F2  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  4217  0017F6  0E00               	movlw	0
  4218  0017F8  6E2C               	movwf	___flmul@a^0,c
  4219  0017FA  0E00               	movlw	0
  4220  0017FC  6E2D               	movwf	(___flmul@a+1)^0,c
  4221  0017FE  0EC8               	movlw	200
  4222  001800  6E2E               	movwf	(___flmul@a+2)^0,c
  4223  001802  0E42               	movlw	66
  4224  001804  6E2F               	movwf	(___flmul@a+3)^0,c
  4225  001806  ECC6  F010         	call	___flmul	;wreg free
  4226  00180A  C028  F0FA         	movff	?___flmul,_detect_color$2942
  4227  00180E  C029  F0FB         	movff	?___flmul+1,_detect_color$2942+1
  4228  001812  C02A  F0FC         	movff	?___flmul+2,_detect_color$2942+2
  4229  001816  C02B  F0FD         	movff	?___flmul+3,_detect_color$2942+3
  4230  00181A  C0FA  F066         	movff	_detect_color$2942,lroundf@x
  4231  00181E  C0FB  F067         	movff	_detect_color$2942+1,lroundf@x+1
  4232  001822  C0FC  F068         	movff	_detect_color$2942+2,lroundf@x+2
  4233  001826  C0FD  F069         	movff	_detect_color$2942+3,lroundf@x+3
  4234  00182A  EC21  F02E         	call	_lroundf	;wreg free
  4235  00182E  C066  F0EF         	movff	?_lroundf,detect_color@BB
  4236  001832  C067  F0F0         	movff	?_lroundf+1,detect_color@BB+1
  4237  001836                     
  4238                           ;color.c: 254:     BC = lroundf((float)(m->C)/(w->BC)*100);
  4239  001836  0100               	movlb	0	; () banked
  4240  001838  EE20 F01A          	lfsr	2,26
  4241  00183C  517B               	movf	detect_color@w& (0+255),w,b
  4242  00183E  26D9               	addwf	fsr2l,f,c
  4243  001840  517C               	movf	(detect_color@w+1)& (0+255),w,b
  4244  001842  22DA               	addwfc	fsr2h,f,c
  4245  001844  CFDE F07D          	movff	postinc2,??_detect_color
  4246  001848  CFDD F07E          	movff	postdec2,??_detect_color+1
  4247  00184C  C07D  F001         	movff	??_detect_color,___xxtofl@val
  4248  001850  C07E  F002         	movff	??_detect_color+1,___xxtofl@val+1
  4249  001854  6A03               	clrf	(___xxtofl@val+2)^0,c
  4250  001856  6A04               	clrf	(___xxtofl@val+3)^0,c
  4251  001858  0E00               	movlw	0
  4252  00185A  EC5A  F020         	call	___xxtofl
  4253  00185E  C001  F013         	movff	?___xxtofl,___fldiv@a
  4254  001862  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  4255  001866  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  4256  00186A  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  4257  00186E  0100               	movlb	0	; () banked
  4258  001870  EE20 F006          	lfsr	2,6
  4259  001874  5179               	movf	detect_color@m& (0+255),w,b
  4260  001876  26D9               	addwf	fsr2l,f,c
  4261  001878  517A               	movf	(detect_color@m+1)& (0+255),w,b
  4262  00187A  22DA               	addwfc	fsr2h,f,c
  4263  00187C  CFDE F07F          	movff	postinc2,??_detect_color+2
  4264  001880  CFDD F080          	movff	postdec2,??_detect_color+3
  4265  001884  C07F  F001         	movff	??_detect_color+2,___xxtofl@val
  4266  001888  C080  F002         	movff	??_detect_color+3,___xxtofl@val+1
  4267  00188C  6A03               	clrf	(___xxtofl@val+2)^0,c
  4268  00188E  6A04               	clrf	(___xxtofl@val+3)^0,c
  4269  001890  0E00               	movlw	0
  4270  001892  EC5A  F020         	call	___xxtofl
  4271  001896  C001  F00F         	movff	?___xxtofl,___fldiv@b
  4272  00189A  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  4273  00189E  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  4274  0018A2  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  4275  0018A6  EC84  F016         	call	___fldiv	;wreg free
  4276  0018AA  C00F  F028         	movff	?___fldiv,___flmul@b
  4277  0018AE  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  4278  0018B2  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  4279  0018B6  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  4280  0018BA  0E00               	movlw	0
  4281  0018BC  6E2C               	movwf	___flmul@a^0,c
  4282  0018BE  0E00               	movlw	0
  4283  0018C0  6E2D               	movwf	(___flmul@a+1)^0,c
  4284  0018C2  0EC8               	movlw	200
  4285  0018C4  6E2E               	movwf	(___flmul@a+2)^0,c
  4286  0018C6  0E42               	movlw	66
  4287  0018C8  6E2F               	movwf	(___flmul@a+3)^0,c
  4288  0018CA  ECC6  F010         	call	___flmul	;wreg free
  4289  0018CE  C028  F0FA         	movff	?___flmul,_detect_color$2942
  4290  0018D2  C029  F0FB         	movff	?___flmul+1,_detect_color$2942+1
  4291  0018D6  C02A  F0FC         	movff	?___flmul+2,_detect_color$2942+2
  4292  0018DA  C02B  F0FD         	movff	?___flmul+3,_detect_color$2942+3
  4293  0018DE  C0FA  F066         	movff	_detect_color$2942,lroundf@x
  4294  0018E2  C0FB  F067         	movff	_detect_color$2942+1,lroundf@x+1
  4295  0018E6  C0FC  F068         	movff	_detect_color$2942+2,lroundf@x+2
  4296  0018EA  C0FD  F069         	movff	_detect_color$2942+3,lroundf@x+3
  4297  0018EE  EC21  F02E         	call	_lroundf	;wreg free
  4298  0018F2                     
  4299                           ;color.c: 256:     sprintf(buf,"%d\t%d\t%d\r\n", BR, BG, BB);
  4300  0018F2  0E81               	movlw	low detect_color@buf
  4301  0018F4  0100               	movlb	0	; () banked
  4302  0018F6  6F60               	movwf	sprintf@s& (0+255),b
  4303  0018F8  0E00               	movlw	high detect_color@buf
  4304  0018FA  6F61               	movwf	(sprintf@s+1)& (0+255),b
  4305  0018FC  0E08               	movlw	low (STR_4+3)
  4306  0018FE  6F62               	movwf	sprintf@fmt& (0+255),b
  4307  001900  0E0E               	movlw	high (STR_4+3)
  4308  001902  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
  4309  001904  C0E9  F064         	movff	detect_color@BR,?_sprintf+4
  4310  001908  C0EA  F065         	movff	detect_color@BR+1,?_sprintf+5
  4311  00190C  C0F8  F066         	movff	detect_color@BG,?_sprintf+6
  4312  001910  C0F9  F067         	movff	detect_color@BG+1,?_sprintf+7
  4313  001914  C0EF  F068         	movff	detect_color@BB,?_sprintf+8
  4314  001918  C0F0  F069         	movff	detect_color@BB+1,?_sprintf+9
  4315  00191C  EC73  F02C         	call	_sprintf	;wreg free
  4316  001920                     
  4317                           ;color.c: 257:     sendStringSerial4(buf);
  4318  001920  0E81               	movlw	low detect_color@buf
  4319  001922  6E02               	movwf	sendStringSerial4@string^0,c
  4320  001924  0E00               	movlw	high detect_color@buf
  4321  001926  6E03               	movwf	(sendStringSerial4@string+1)^0,c
  4322  001928  ECC4  F02E         	call	_sendStringSerial4	;wreg free
  4323  00192C                     
  4324                           ;color.c: 260:     if (compare(0, RR, 45)){
  4325  00192C  0E00               	movlw	0
  4326  00192E  0100               	movlb	0	; () banked
  4327  001930  6F6B               	movwf	(compare@lower+1)& (0+255),b
  4328  001932  0E00               	movlw	0
  4329  001934  6F6A               	movwf	compare@lower& (0+255),b
  4330  001936  C0F6  F06C         	movff	detect_color@RR,compare@value2compare
  4331  00193A  C0F7  F06D         	movff	detect_color@RR+1,compare@value2compare+1
  4332  00193E  0E00               	movlw	0
  4333  001940  6F6F               	movwf	(compare@upper+1)& (0+255),b
  4334  001942  0E2D               	movlw	45
  4335  001944  6F6E               	movwf	compare@upper& (0+255),b
  4336  001946  EC04  F02E         	call	_compare	;wreg free
  4337  00194A  0900               	iorlw	0
  4338  00194C  B4D8               	btfsc	status,2,c
  4339  00194E  EFAB  F00C         	goto	u5161
  4340  001952  EFAD  F00C         	goto	u5160
  4341  001956                     u5161:
  4342  001956  EF1E  F00D         	goto	l4764
  4343  00195A                     u5160:
  4344  00195A                     
  4345                           ;color.c: 261:          if (compare(0, lroundf((float)(GG + BG)/BB * 200), 467)){color =
      +                           3;}
  4346  00195A  C0EF  F001         	movff	detect_color@BB,___xxtofl@val
  4347  00195E  C0F0  F002         	movff	detect_color@BB+1,___xxtofl@val+1
  4348  001962  6A03               	clrf	(___xxtofl@val+2)^0,c
  4349  001964  6A04               	clrf	(___xxtofl@val+3)^0,c
  4350  001966  0E00               	movlw	0
  4351  001968  EC5A  F020         	call	___xxtofl
  4352  00196C  C001  F013         	movff	?___xxtofl,___fldiv@a
  4353  001970  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  4354  001974  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  4355  001978  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  4356  00197C  0100               	movlb	0	; () banked
  4357  00197E  51F8               	movf	detect_color@BG& (0+255),w,b
  4358  001980  25F3               	addwf	detect_color@GG& (0+255),w,b
  4359  001982  6F7D               	movwf	??_detect_color& (0+255),b
  4360  001984  51F9               	movf	(detect_color@BG+1)& (0+255),w,b
  4361  001986  21F4               	addwfc	(detect_color@GG+1)& (0+255),w,b
  4362  001988  6F7E               	movwf	(??_detect_color+1)& (0+255),b
  4363  00198A  C07D  F001         	movff	??_detect_color,___xxtofl@val
  4364  00198E  C07E  F002         	movff	??_detect_color+1,___xxtofl@val+1
  4365  001992  6A03               	clrf	(___xxtofl@val+2)^0,c
  4366  001994  6A04               	clrf	(___xxtofl@val+3)^0,c
  4367  001996  0E00               	movlw	0
  4368  001998  EC5A  F020         	call	___xxtofl
  4369  00199C  C001  F00F         	movff	?___xxtofl,___fldiv@b
  4370  0019A0  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  4371  0019A4  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  4372  0019A8  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  4373  0019AC  EC84  F016         	call	___fldiv	;wreg free
  4374  0019B0  C00F  F028         	movff	?___fldiv,___flmul@b
  4375  0019B4  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  4376  0019B8  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  4377  0019BC  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  4378  0019C0  0E00               	movlw	0
  4379  0019C2  6E2C               	movwf	___flmul@a^0,c
  4380  0019C4  0E00               	movlw	0
  4381  0019C6  6E2D               	movwf	(___flmul@a+1)^0,c
  4382  0019C8  0E48               	movlw	72
  4383  0019CA  6E2E               	movwf	(___flmul@a+2)^0,c
  4384  0019CC  0E43               	movlw	67
  4385  0019CE  6E2F               	movwf	(___flmul@a+3)^0,c
  4386  0019D0  ECC6  F010         	call	___flmul	;wreg free
  4387  0019D4  C028  F0FA         	movff	?___flmul,_detect_color$2942
  4388  0019D8  C029  F0FB         	movff	?___flmul+1,_detect_color$2942+1
  4389  0019DC  C02A  F0FC         	movff	?___flmul+2,_detect_color$2942+2
  4390  0019E0  C02B  F0FD         	movff	?___flmul+3,_detect_color$2942+3
  4391                           
  4392                           ;color.c: 261:          if (compare(0, lroundf((float)(GG + BG)/BB * 200), 467)){color =
      +                           3;}
  4393  0019E4  0E00               	movlw	0
  4394  0019E6  0100               	movlb	0	; () banked
  4395  0019E8  6F6B               	movwf	(compare@lower+1)& (0+255),b
  4396  0019EA  0E00               	movlw	0
  4397  0019EC  6F6A               	movwf	compare@lower& (0+255),b
  4398  0019EE  C0FA  F066         	movff	_detect_color$2942,lroundf@x
  4399  0019F2  C0FB  F067         	movff	_detect_color$2942+1,lroundf@x+1
  4400  0019F6  C0FC  F068         	movff	_detect_color$2942+2,lroundf@x+2
  4401  0019FA  C0FD  F069         	movff	_detect_color$2942+3,lroundf@x+3
  4402  0019FE  EC21  F02E         	call	_lroundf	;wreg free
  4403  001A02  C066  F06C         	movff	?_lroundf,compare@value2compare
  4404  001A06  C067  F06D         	movff	?_lroundf+1,compare@value2compare+1
  4405  001A0A  0E01               	movlw	1
  4406  001A0C  0100               	movlb	0	; () banked
  4407  001A0E  6F6F               	movwf	(compare@upper+1)& (0+255),b
  4408  001A10  0ED3               	movlw	211
  4409  001A12  6F6E               	movwf	compare@upper& (0+255),b
  4410  001A14  EC04  F02E         	call	_compare	;wreg free
  4411  001A18  0900               	iorlw	0
  4412  001A1A  B4D8               	btfsc	status,2,c
  4413  001A1C  EF12  F00D         	goto	u5171
  4414  001A20  EF14  F00D         	goto	u5170
  4415  001A24                     u5171:
  4416  001A24  EF19  F00D         	goto	l4762
  4417  001A28                     u5170:
  4418  001A28  0E03               	movlw	3
  4419  001A2A  0100               	movlb	0	; () banked
  4420  001A2C  6FF5               	movwf	detect_color@color& (0+255),b
  4421  001A2E  EFD9  F00D         	goto	l4790
  4422  001A32                     l4762:
  4423  001A32  0E02               	movlw	2
  4424  001A34  0100               	movlb	0	; () banked
  4425  001A36  6FF5               	movwf	detect_color@color& (0+255),b
  4426  001A38  EFD9  F00D         	goto	l4790
  4427  001A3C                     l4764:
  4428                           
  4429                           ;color.c: 265:         if (GG <= 30 && GB <= 30){
  4430  001A3C  0100               	movlb	0	; () banked
  4431  001A3E  51F4               	movf	(detect_color@GG+1)& (0+255),w,b
  4432  001A40  E107               	bnz	u5181
  4433  001A42  0E1F               	movlw	31
  4434  001A44  5DF3               	subwf	detect_color@GG& (0+255),w,b
  4435  001A46  B0D8               	btfsc	status,0,c
  4436  001A48  EF28  F00D         	goto	u5181
  4437  001A4C  EF2A  F00D         	goto	u5180
  4438  001A50                     u5181:
  4439  001A50  EF9F  F00D         	goto	l4774
  4440  001A54                     u5180:
  4441  001A54                     
  4442                           ; BSR set to: 0
  4443  001A54  51F2               	movf	(detect_color@GB+1)& (0+255),w,b
  4444  001A56  E107               	bnz	u5191
  4445  001A58  0E1F               	movlw	31
  4446  001A5A  5DF1               	subwf	detect_color@GB& (0+255),w,b
  4447  001A5C  B0D8               	btfsc	status,0,c
  4448  001A5E  EF33  F00D         	goto	u5191
  4449  001A62  EF35  F00D         	goto	u5190
  4450  001A66                     u5191:
  4451  001A66  EF9F  F00D         	goto	l4774
  4452  001A6A                     u5190:
  4453  001A6A                     
  4454                           ; BSR set to: 0
  4455                           ;color.c: 267:             if (compare(0, lroundf((float)GR/RR * 500), 150)){color = 1;}
  4456  001A6A  C0F6  F001         	movff	detect_color@RR,___xxtofl@val
  4457  001A6E  C0F7  F002         	movff	detect_color@RR+1,___xxtofl@val+1
  4458  001A72  6A03               	clrf	(___xxtofl@val+2)^0,c
  4459  001A74  6A04               	clrf	(___xxtofl@val+3)^0,c
  4460  001A76  0E00               	movlw	0
  4461  001A78  EC5A  F020         	call	___xxtofl
  4462  001A7C  C001  F013         	movff	?___xxtofl,___fldiv@a
  4463  001A80  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  4464  001A84  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  4465  001A88  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  4466  001A8C  C0EB  F001         	movff	detect_color@GR,___xxtofl@val
  4467  001A90  C0EC  F002         	movff	detect_color@GR+1,___xxtofl@val+1
  4468  001A94  6A03               	clrf	(___xxtofl@val+2)^0,c
  4469  001A96  6A04               	clrf	(___xxtofl@val+3)^0,c
  4470  001A98  0E00               	movlw	0
  4471  001A9A  EC5A  F020         	call	___xxtofl
  4472  001A9E  C001  F00F         	movff	?___xxtofl,___fldiv@b
  4473  001AA2  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  4474  001AA6  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  4475  001AAA  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  4476  001AAE  EC84  F016         	call	___fldiv	;wreg free
  4477  001AB2  C00F  F028         	movff	?___fldiv,___flmul@b
  4478  001AB6  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  4479  001ABA  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  4480  001ABE  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  4481  001AC2  0E00               	movlw	0
  4482  001AC4  6E2C               	movwf	___flmul@a^0,c
  4483  001AC6  0E00               	movlw	0
  4484  001AC8  6E2D               	movwf	(___flmul@a+1)^0,c
  4485  001ACA  0EFA               	movlw	250
  4486  001ACC  6E2E               	movwf	(___flmul@a+2)^0,c
  4487  001ACE  0E43               	movlw	67
  4488  001AD0  6E2F               	movwf	(___flmul@a+3)^0,c
  4489  001AD2  ECC6  F010         	call	___flmul	;wreg free
  4490  001AD6  C028  F0FA         	movff	?___flmul,_detect_color$2942
  4491  001ADA  C029  F0FB         	movff	?___flmul+1,_detect_color$2942+1
  4492  001ADE  C02A  F0FC         	movff	?___flmul+2,_detect_color$2942+2
  4493  001AE2  C02B  F0FD         	movff	?___flmul+3,_detect_color$2942+3
  4494                           
  4495                           ;color.c: 267:             if (compare(0, lroundf((float)GR/RR * 500), 150)){color = 1;}
  4496  001AE6  0E00               	movlw	0
  4497  001AE8  0100               	movlb	0	; () banked
  4498  001AEA  6F6B               	movwf	(compare@lower+1)& (0+255),b
  4499  001AEC  0E00               	movlw	0
  4500  001AEE  6F6A               	movwf	compare@lower& (0+255),b
  4501  001AF0  C0FA  F066         	movff	_detect_color$2942,lroundf@x
  4502  001AF4  C0FB  F067         	movff	_detect_color$2942+1,lroundf@x+1
  4503  001AF8  C0FC  F068         	movff	_detect_color$2942+2,lroundf@x+2
  4504  001AFC  C0FD  F069         	movff	_detect_color$2942+3,lroundf@x+3
  4505  001B00  EC21  F02E         	call	_lroundf	;wreg free
  4506  001B04  C066  F06C         	movff	?_lroundf,compare@value2compare
  4507  001B08  C067  F06D         	movff	?_lroundf+1,compare@value2compare+1
  4508  001B0C  0E00               	movlw	0
  4509  001B0E  0100               	movlb	0	; () banked
  4510  001B10  6F6F               	movwf	(compare@upper+1)& (0+255),b
  4511  001B12  0E96               	movlw	150
  4512  001B14  6F6E               	movwf	compare@upper& (0+255),b
  4513  001B16  EC04  F02E         	call	_compare	;wreg free
  4514  001B1A  0900               	iorlw	0
  4515  001B1C  B4D8               	btfsc	status,2,c
  4516  001B1E  EF93  F00D         	goto	u5201
  4517  001B22  EF95  F00D         	goto	u5200
  4518  001B26                     u5201:
  4519  001B26  EF9A  F00D         	goto	l4772
  4520  001B2A                     u5200:
  4521  001B2A  0E01               	movlw	1
  4522  001B2C  0100               	movlb	0	; () banked
  4523  001B2E  6FF5               	movwf	detect_color@color& (0+255),b
  4524  001B30  EFD9  F00D         	goto	l4790
  4525  001B34                     l4772:
  4526  001B34  0E06               	movlw	6
  4527  001B36  0100               	movlb	0	; () banked
  4528  001B38  6FF5               	movwf	detect_color@color& (0+255),b
  4529  001B3A  EFD9  F00D         	goto	l4790
  4530  001B3E                     l4774:
  4531                           
  4532                           ; BSR set to: 0
  4533  001B3E  51F4               	movf	(detect_color@GG+1)& (0+255),w,b
  4534  001B40  E109               	bnz	u5210
  4535  001B42  0E1F               	movlw	31
  4536  001B44  5DF3               	subwf	detect_color@GG& (0+255),w,b
  4537  001B46  A0D8               	btfss	status,0,c
  4538  001B48  EFA8  F00D         	goto	u5211
  4539  001B4C  EFAA  F00D         	goto	u5210
  4540  001B50                     u5211:
  4541  001B50  EFD7  F00D         	goto	l4788
  4542  001B54                     u5210:
  4543  001B54                     
  4544                           ; BSR set to: 0
  4545  001B54  51F2               	movf	(detect_color@GB+1)& (0+255),w,b
  4546  001B56  E109               	bnz	u5220
  4547  001B58  0E1F               	movlw	31
  4548  001B5A  5DF1               	subwf	detect_color@GB& (0+255),w,b
  4549  001B5C  A0D8               	btfss	status,0,c
  4550  001B5E  EFB3  F00D         	goto	u5221
  4551  001B62  EFB5  F00D         	goto	u5220
  4552  001B66                     u5221:
  4553  001B66  EFD7  F00D         	goto	l4788
  4554  001B6A                     u5220:
  4555  001B6A                     
  4556                           ; BSR set to: 0
  4557                           ;color.c: 272:             if (BB >= 80){color = 7;}
  4558  001B6A  51F0               	movf	(detect_color@BB+1)& (0+255),w,b
  4559  001B6C  E109               	bnz	u5230
  4560  001B6E  0E50               	movlw	80
  4561  001B70  5DEF               	subwf	detect_color@BB& (0+255),w,b
  4562  001B72  A0D8               	btfss	status,0,c
  4563  001B74  EFBE  F00D         	goto	u5231
  4564  001B78  EFC0  F00D         	goto	u5230
  4565  001B7C                     u5231:
  4566  001B7C  EFC4  F00D         	goto	l4782
  4567  001B80                     u5230:
  4568  001B80                     
  4569                           ; BSR set to: 0
  4570  001B80  0E07               	movlw	7
  4571  001B82  6FF5               	movwf	detect_color@color& (0+255),b
  4572  001B84  EFD9  F00D         	goto	l4790
  4573  001B88                     l4782:
  4574                           
  4575                           ; BSR set to: 0
  4576                           ;color.c: 275:                 if (BG < 48){color = 4;}
  4577  001B88  51F9               	movf	(detect_color@BG+1)& (0+255),w,b
  4578  001B8A  E107               	bnz	u5241
  4579  001B8C  0E30               	movlw	48
  4580  001B8E  5DF8               	subwf	detect_color@BG& (0+255),w,b
  4581  001B90  B0D8               	btfsc	status,0,c
  4582  001B92  EFCD  F00D         	goto	u5241
  4583  001B96  EFCF  F00D         	goto	u5240
  4584  001B9A                     u5241:
  4585  001B9A  EFD3  F00D         	goto	l4786
  4586  001B9E                     u5240:
  4587  001B9E                     
  4588                           ; BSR set to: 0
  4589  001B9E  0E04               	movlw	4
  4590  001BA0  6FF5               	movwf	detect_color@color& (0+255),b
  4591  001BA2  EFD9  F00D         	goto	l4790
  4592  001BA6                     l4786:
  4593                           
  4594                           ; BSR set to: 0
  4595  001BA6  0E05               	movlw	5
  4596  001BA8  6FF5               	movwf	detect_color@color& (0+255),b
  4597  001BAA  EFD9  F00D         	goto	l4790
  4598  001BAE                     l4788:
  4599                           
  4600                           ; BSR set to: 0
  4601  001BAE  0E00               	movlw	0
  4602  001BB0  6FF5               	movwf	detect_color@color& (0+255),b
  4603  001BB2                     l4790:
  4604                           
  4605                           ; BSR set to: 0
  4606                           ;color.c: 282:     if (compare(90, RR, RR * 2) && compare(90, RB, RB * 2) && compare(90,
      +                           BG, BG * 2)){color = 8;}
  4607  001BB2  0E00               	movlw	0
  4608  001BB4  6F6B               	movwf	(compare@lower+1)& (0+255),b
  4609  001BB6  0E5A               	movlw	90
  4610  001BB8  6F6A               	movwf	compare@lower& (0+255),b
  4611  001BBA  C0F6  F06C         	movff	detect_color@RR,compare@value2compare
  4612  001BBE  C0F7  F06D         	movff	detect_color@RR+1,compare@value2compare+1
  4613  001BC2  90D8               	bcf	status,0,c
  4614  001BC4  35F6               	rlcf	detect_color@RR& (0+255),w,b
  4615  001BC6  6F6E               	movwf	compare@upper& (0+255),b
  4616  001BC8  35F7               	rlcf	(detect_color@RR+1)& (0+255),w,b
  4617  001BCA  6F6F               	movwf	(compare@upper+1)& (0+255),b
  4618  001BCC  EC04  F02E         	call	_compare	;wreg free
  4619  001BD0  0900               	iorlw	0
  4620  001BD2  B4D8               	btfsc	status,2,c
  4621  001BD4  EFEE  F00D         	goto	u5251
  4622  001BD8  EFF0  F00D         	goto	u5250
  4623  001BDC                     u5251:
  4624  001BDC  EF23  F00E         	goto	l4798
  4625  001BE0                     u5250:
  4626  001BE0  0E00               	movlw	0
  4627  001BE2  0100               	movlb	0	; () banked
  4628  001BE4  6F6B               	movwf	(compare@lower+1)& (0+255),b
  4629  001BE6  0E5A               	movlw	90
  4630  001BE8  6F6A               	movwf	compare@lower& (0+255),b
  4631  001BEA  C0ED  F06C         	movff	detect_color@RB,compare@value2compare
  4632  001BEE  C0EE  F06D         	movff	detect_color@RB+1,compare@value2compare+1
  4633  001BF2  90D8               	bcf	status,0,c
  4634  001BF4  35ED               	rlcf	detect_color@RB& (0+255),w,b
  4635  001BF6  6F6E               	movwf	compare@upper& (0+255),b
  4636  001BF8  35EE               	rlcf	(detect_color@RB+1)& (0+255),w,b
  4637  001BFA  6F6F               	movwf	(compare@upper+1)& (0+255),b
  4638  001BFC  EC04  F02E         	call	_compare	;wreg free
  4639  001C00  0900               	iorlw	0
  4640  001C02  B4D8               	btfsc	status,2,c
  4641  001C04  EF06  F00E         	goto	u5261
  4642  001C08  EF08  F00E         	goto	u5260
  4643  001C0C                     u5261:
  4644  001C0C  EF23  F00E         	goto	l4798
  4645  001C10                     u5260:
  4646  001C10  0E00               	movlw	0
  4647  001C12  0100               	movlb	0	; () banked
  4648  001C14  6F6B               	movwf	(compare@lower+1)& (0+255),b
  4649  001C16  0E5A               	movlw	90
  4650  001C18  6F6A               	movwf	compare@lower& (0+255),b
  4651  001C1A  C0F8  F06C         	movff	detect_color@BG,compare@value2compare
  4652  001C1E  C0F9  F06D         	movff	detect_color@BG+1,compare@value2compare+1
  4653  001C22  90D8               	bcf	status,0,c
  4654  001C24  35F8               	rlcf	detect_color@BG& (0+255),w,b
  4655  001C26  6F6E               	movwf	compare@upper& (0+255),b
  4656  001C28  35F9               	rlcf	(detect_color@BG+1)& (0+255),w,b
  4657  001C2A  6F6F               	movwf	(compare@upper+1)& (0+255),b
  4658  001C2C  EC04  F02E         	call	_compare	;wreg free
  4659  001C30  0900               	iorlw	0
  4660  001C32  B4D8               	btfsc	status,2,c
  4661  001C34  EF1E  F00E         	goto	u5271
  4662  001C38  EF20  F00E         	goto	u5270
  4663  001C3C                     u5271:
  4664  001C3C  EF23  F00E         	goto	l4798
  4665  001C40                     u5270:
  4666  001C40  0E08               	movlw	8
  4667  001C42  0100               	movlb	0	; () banked
  4668  001C44  6FF5               	movwf	detect_color@color& (0+255),b
  4669  001C46                     l4798:
  4670                           
  4671                           ;color.c: 283:     if (compare(0, BR, 30) && compare(0,BG,30)){color = 0;}
  4672  001C46  0E00               	movlw	0
  4673  001C48  0100               	movlb	0	; () banked
  4674  001C4A  6F6B               	movwf	(compare@lower+1)& (0+255),b
  4675  001C4C  0E00               	movlw	0
  4676  001C4E  6F6A               	movwf	compare@lower& (0+255),b
  4677  001C50  C0E9  F06C         	movff	detect_color@BR,compare@value2compare
  4678  001C54  C0EA  F06D         	movff	detect_color@BR+1,compare@value2compare+1
  4679  001C58  0E00               	movlw	0
  4680  001C5A  6F6F               	movwf	(compare@upper+1)& (0+255),b
  4681  001C5C  0E1E               	movlw	30
  4682  001C5E  6F6E               	movwf	compare@upper& (0+255),b
  4683  001C60  EC04  F02E         	call	_compare	;wreg free
  4684  001C64  0900               	iorlw	0
  4685  001C66  B4D8               	btfsc	status,2,c
  4686  001C68  EF38  F00E         	goto	u5281
  4687  001C6C  EF3A  F00E         	goto	u5280
  4688  001C70                     u5281:
  4689  001C70  EF54  F00E         	goto	l4804
  4690  001C74                     u5280:
  4691  001C74  0E00               	movlw	0
  4692  001C76  0100               	movlb	0	; () banked
  4693  001C78  6F6B               	movwf	(compare@lower+1)& (0+255),b
  4694  001C7A  0E00               	movlw	0
  4695  001C7C  6F6A               	movwf	compare@lower& (0+255),b
  4696  001C7E  C0F8  F06C         	movff	detect_color@BG,compare@value2compare
  4697  001C82  C0F9  F06D         	movff	detect_color@BG+1,compare@value2compare+1
  4698  001C86  0E00               	movlw	0
  4699  001C88  6F6F               	movwf	(compare@upper+1)& (0+255),b
  4700  001C8A  0E1E               	movlw	30
  4701  001C8C  6F6E               	movwf	compare@upper& (0+255),b
  4702  001C8E  EC04  F02E         	call	_compare	;wreg free
  4703  001C92  0900               	iorlw	0
  4704  001C94  B4D8               	btfsc	status,2,c
  4705  001C96  EF4F  F00E         	goto	u5291
  4706  001C9A  EF51  F00E         	goto	u5290
  4707  001C9E                     u5291:
  4708  001C9E  EF54  F00E         	goto	l4804
  4709  001CA2                     u5290:
  4710  001CA2  0E00               	movlw	0
  4711  001CA4  0100               	movlb	0	; () banked
  4712  001CA6  6FF5               	movwf	detect_color@color& (0+255),b
  4713  001CA8                     l4804:
  4714                           
  4715                           ;color.c: 285:     if (color == 8) {toggle_light(2,1);}
  4716  001CA8  0E08               	movlw	8
  4717  001CAA  0100               	movlb	0	; () banked
  4718  001CAC  19F5               	xorwf	detect_color@color& (0+255),w,b
  4719  001CAE  A4D8               	btfss	status,2,c
  4720  001CB0  EF5C  F00E         	goto	u5301
  4721  001CB4  EF5E  F00E         	goto	u5300
  4722  001CB8                     u5301:
  4723  001CB8  EF63  F00E         	goto	l4808
  4724  001CBC                     u5300:
  4725  001CBC                     
  4726                           ; BSR set to: 0
  4727  001CBC  0E01               	movlw	1
  4728  001CBE  6E01               	movwf	toggle_light@toggletime^0,c
  4729  001CC0  0E02               	movlw	2
  4730  001CC2  EC3A  F01B         	call	_toggle_light
  4731  001CC6                     l4808:
  4732                           
  4733                           ;color.c: 286:     return color;
  4734  001CC6  0100               	movlb	0	; () banked
  4735  001CC8  51F5               	movf	detect_color@color& (0+255),w,b
  4736  001CCA                     
  4737                           ; BSR set to: 0
  4738  001CCA  0012               	return		;funcret
  4739  001CCC                     __end_of_detect_color:
  4740                           	callstack 0
  4741                           
  4742 ;; *************** function _compare *****************
  4743 ;; Defined at:
  4744 ;;		line 363 in file "color.c"
  4745 ;; Parameters:    Size  Location     Type
  4746 ;;  lower           2   10[BANK0 ] unsigned int 
  4747 ;;  value2compar    2   12[BANK0 ] unsigned int 
  4748 ;;  upper           2   14[BANK0 ] unsigned int 
  4749 ;; Auto vars:     Size  Location     Type
  4750 ;;  result          1   16[BANK0 ] unsigned char 
  4751 ;; Return value:  Size  Location     Type
  4752 ;;                  1    wreg      unsigned char 
  4753 ;; Registers used:
  4754 ;;		wreg, status,2, status,0
  4755 ;; Tracked objects:
  4756 ;;		On entry : 0/0
  4757 ;;		On exit  : 0/0
  4758 ;;		Unchanged: 0/0
  4759 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4760 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4761 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4762 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4763 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4764 ;;Total ram usage:        7 bytes
  4765 ;; Hardware stack levels used: 1
  4766 ;; Hardware stack levels required when called: 1
  4767 ;; This function calls:
  4768 ;;		Nothing
  4769 ;; This function is called by:
  4770 ;;		_detect_color
  4771 ;; This function uses a non-reentrant model
  4772 ;;
  4773                           
  4774                           	psect	text8
  4775  005C08                     __ptext8:
  4776                           	callstack 0
  4777  005C08                     _compare:
  4778                           	callstack 27
  4779  005C08                     
  4780                           ;color.c: 363: unsigned char compare(unsigned int lower, unsigned int value2compare, uns
      +                          igned int upper);color.c: 364: {;color.c: 365:     unsigned char result = 0;
  4781  005C08  0E00               	movlw	0
  4782  005C0A  0100               	movlb	0	; () banked
  4783  005C0C  6F70               	movwf	compare@result& (0+255),b
  4784  005C0E                     
  4785                           ; BSR set to: 0
  4786                           ;color.c: 366:     if (lower < value2compare && value2compare <= upper){result = 1;}
  4787  005C0E  516C               	movf	compare@value2compare& (0+255),w,b
  4788  005C10  5D6A               	subwf	compare@lower& (0+255),w,b
  4789  005C12  516D               	movf	(compare@value2compare+1)& (0+255),w,b
  4790  005C14  596B               	subwfb	(compare@lower+1)& (0+255),w,b
  4791  005C16  B0D8               	btfsc	status,0,c
  4792  005C18  EF10  F02E         	goto	u4741
  4793  005C1C  EF12  F02E         	goto	u4740
  4794  005C20                     u4741:
  4795  005C20  EF1F  F02E         	goto	l141
  4796  005C24                     u4740:
  4797  005C24                     
  4798                           ; BSR set to: 0
  4799  005C24  516C               	movf	compare@value2compare& (0+255),w,b
  4800  005C26  5D6E               	subwf	compare@upper& (0+255),w,b
  4801  005C28  516D               	movf	(compare@value2compare+1)& (0+255),w,b
  4802  005C2A  596F               	subwfb	(compare@upper+1)& (0+255),w,b
  4803  005C2C  A0D8               	btfss	status,0,c
  4804  005C2E  EF1B  F02E         	goto	u4751
  4805  005C32  EF1D  F02E         	goto	u4750
  4806  005C36                     u4751:
  4807  005C36  EF1F  F02E         	goto	l141
  4808  005C3A                     u4750:
  4809  005C3A                     
  4810                           ; BSR set to: 0
  4811  005C3A  0E01               	movlw	1
  4812  005C3C  6F70               	movwf	compare@result& (0+255),b
  4813  005C3E                     l141:
  4814                           
  4815                           ; BSR set to: 0
  4816                           ;color.c: 367:     return result;
  4817  005C3E  5170               	movf	compare@result& (0+255),w,b
  4818  005C40                     
  4819                           ; BSR set to: 0
  4820  005C40  0012               	return		;funcret
  4821  005C42                     __end_of_compare:
  4822                           	callstack 0
  4823                           
  4824 ;; *************** function _color_data_collection *****************
  4825 ;; Defined at:
  4826 ;;		line 334 in file "color.c"
  4827 ;; Parameters:    Size  Location     Type
  4828 ;;  m               2   89[COMRAM] PTR struct color_rgb
  4829 ;;		 -> main@rgb(8), 
  4830 ;; Auto vars:     Size  Location     Type
  4831 ;;  i               2  126[BANK0 ] int 
  4832 ;; Return value:  Size  Location     Type
  4833 ;;                  1    wreg      void 
  4834 ;; Registers used:
  4835 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4836 ;; Tracked objects:
  4837 ;;		On entry : 0/0
  4838 ;;		On exit  : 0/0
  4839 ;;		Unchanged: 0/0
  4840 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4841 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4842 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4843 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4844 ;;      Totals:         4       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4845 ;;Total ram usage:        6 bytes
  4846 ;; Hardware stack levels used: 1
  4847 ;; Hardware stack levels required when called: 10
  4848 ;; This function calls:
  4849 ;;		_LED_B
  4850 ;;		_LED_C
  4851 ;;		_LED_G
  4852 ;;		_LED_R
  4853 ;;		_color_display
  4854 ;;		_color_predict
  4855 ;;		_read_color
  4856 ;; This function is called by:
  4857 ;;		_test_function
  4858 ;; This function uses a non-reentrant model
  4859 ;;
  4860                           
  4861                           	psect	text9
  4862  004DB6                     __ptext9:
  4863                           	callstack 0
  4864  004DB6                     _color_data_collection:
  4865                           	callstack 19
  4866  004DB6                     
  4867                           ;color.c: 334: void color_data_collection(struct color_rgb *m);color.c: 335: {;color.c: 
      +                          336:     int i = 0;
  4868  004DB6  0E00               	movlw	0
  4869  004DB8  0100               	movlb	0	; () banked
  4870  004DBA  6FDF               	movwf	(color_data_collection@i+1)& (0+255),b
  4871  004DBC  0E00               	movlw	0
  4872  004DBE  6FDE               	movwf	color_data_collection@i& (0+255),b
  4873                           
  4874                           ;color.c: 337:     for (i = 0; i < 1; ++i){
  4875  004DC0  0E00               	movlw	0
  4876  004DC2  6FDF               	movwf	(color_data_collection@i+1)& (0+255),b
  4877  004DC4  0E00               	movlw	0
  4878  004DC6  6FDE               	movwf	color_data_collection@i& (0+255),b
  4879  004DC8                     l4872:
  4880                           
  4881                           ; BSR set to: 0
  4882                           ;color.c: 338:         LED_C();
  4883  004DC8  EC6F  F02F         	call	_LED_C	;wreg free
  4884  004DCC                     
  4885                           ;color.c: 339:         _delay((unsigned long)((100)*(64000000/4000.0)));
  4886  004DCC  0E09               	movlw	9
  4887  004DCE  6E5D               	movwf	(??_color_data_collection+1)^0,c
  4888  004DD0  0E1E               	movlw	30
  4889  004DD2  6E5C               	movwf	??_color_data_collection^0,c
  4890  004DD4  0EE4               	movlw	228
  4891  004DD6                     u5987:
  4892  004DD6  2EE8               	decfsz	wreg,f,c
  4893  004DD8  D7FE               	bra	u5987
  4894  004DDA  2E5C               	decfsz	??_color_data_collection^0,f,c
  4895  004DDC  D7FC               	bra	u5987
  4896  004DDE  2E5D               	decfsz	(??_color_data_collection+1)^0,f,c
  4897  004DE0  D7FA               	bra	u5987
  4898  004DE2  D000               	nop2	
  4899  004DE4                     
  4900                           ;color.c: 340:         read_color(m);
  4901  004DE4  C05A  F00C         	movff	color_data_collection@m,read_color@m
  4902  004DE8  C05B  F00D         	movff	color_data_collection@m+1,read_color@m+1
  4903  004DEC  EC44  F02C         	call	_read_color	;wreg free
  4904  004DF0                     
  4905                           ;color.c: 341:         color_display(m);
  4906  004DF0  C05A  F058         	movff	color_data_collection@m,color_display@m
  4907  004DF4  C05B  F059         	movff	color_data_collection@m+1,color_display@m+1
  4908  004DF8  ECDB  F02B         	call	_color_display	;wreg free
  4909  004DFC                     
  4910                           ;color.c: 343:         LED_R();
  4911  004DFC  EC2F  F02F         	call	_LED_R	;wreg free
  4912  004E00                     
  4913                           ;color.c: 344:         _delay((unsigned long)((100)*(64000000/4000.0)));
  4914  004E00  0E09               	movlw	9
  4915  004E02  6E5D               	movwf	(??_color_data_collection+1)^0,c
  4916  004E04  0E1E               	movlw	30
  4917  004E06  6E5C               	movwf	??_color_data_collection^0,c
  4918  004E08  0EE4               	movlw	228
  4919  004E0A                     u5997:
  4920  004E0A  2EE8               	decfsz	wreg,f,c
  4921  004E0C  D7FE               	bra	u5997
  4922  004E0E  2E5C               	decfsz	??_color_data_collection^0,f,c
  4923  004E10  D7FC               	bra	u5997
  4924  004E12  2E5D               	decfsz	(??_color_data_collection+1)^0,f,c
  4925  004E14  D7FA               	bra	u5997
  4926  004E16  D000               	nop2	
  4927  004E18                     
  4928                           ;color.c: 345:         read_color(m);
  4929  004E18  C05A  F00C         	movff	color_data_collection@m,read_color@m
  4930  004E1C  C05B  F00D         	movff	color_data_collection@m+1,read_color@m+1
  4931  004E20  EC44  F02C         	call	_read_color	;wreg free
  4932                           
  4933                           ;color.c: 346:         color_display(m);
  4934  004E24  C05A  F058         	movff	color_data_collection@m,color_display@m
  4935  004E28  C05B  F059         	movff	color_data_collection@m+1,color_display@m+1
  4936  004E2C  ECDB  F02B         	call	_color_display	;wreg free
  4937  004E30                     
  4938                           ;color.c: 348:         LED_G();
  4939  004E30  EC4F  F02F         	call	_LED_G	;wreg free
  4940  004E34                     
  4941                           ;color.c: 349:         _delay((unsigned long)((100)*(64000000/4000.0)));
  4942  004E34  0E09               	movlw	9
  4943  004E36  6E5D               	movwf	(??_color_data_collection+1)^0,c
  4944  004E38  0E1E               	movlw	30
  4945  004E3A  6E5C               	movwf	??_color_data_collection^0,c
  4946  004E3C  0EE4               	movlw	228
  4947  004E3E                     u6007:
  4948  004E3E  2EE8               	decfsz	wreg,f,c
  4949  004E40  D7FE               	bra	u6007
  4950  004E42  2E5C               	decfsz	??_color_data_collection^0,f,c
  4951  004E44  D7FC               	bra	u6007
  4952  004E46  2E5D               	decfsz	(??_color_data_collection+1)^0,f,c
  4953  004E48  D7FA               	bra	u6007
  4954  004E4A  D000               	nop2	
  4955  004E4C                     
  4956                           ;color.c: 350:         read_color(m);
  4957  004E4C  C05A  F00C         	movff	color_data_collection@m,read_color@m
  4958  004E50  C05B  F00D         	movff	color_data_collection@m+1,read_color@m+1
  4959  004E54  EC44  F02C         	call	_read_color	;wreg free
  4960  004E58                     
  4961                           ;color.c: 351:         color_display(m);
  4962  004E58  C05A  F058         	movff	color_data_collection@m,color_display@m
  4963  004E5C  C05B  F059         	movff	color_data_collection@m+1,color_display@m+1
  4964  004E60  ECDB  F02B         	call	_color_display	;wreg free
  4965  004E64                     
  4966                           ;color.c: 353:         LED_B();
  4967  004E64  EC5F  F02F         	call	_LED_B	;wreg free
  4968  004E68                     
  4969                           ;color.c: 354:         _delay((unsigned long)((100)*(64000000/4000.0)));
  4970  004E68  0E09               	movlw	9
  4971  004E6A  6E5D               	movwf	(??_color_data_collection+1)^0,c
  4972  004E6C  0E1E               	movlw	30
  4973  004E6E  6E5C               	movwf	??_color_data_collection^0,c
  4974  004E70  0EE4               	movlw	228
  4975  004E72                     u6017:
  4976  004E72  2EE8               	decfsz	wreg,f,c
  4977  004E74  D7FE               	bra	u6017
  4978  004E76  2E5C               	decfsz	??_color_data_collection^0,f,c
  4979  004E78  D7FC               	bra	u6017
  4980  004E7A  2E5D               	decfsz	(??_color_data_collection+1)^0,f,c
  4981  004E7C  D7FA               	bra	u6017
  4982  004E7E  D000               	nop2	
  4983                           
  4984                           ;color.c: 355:         read_color(m);
  4985  004E80  C05A  F00C         	movff	color_data_collection@m,read_color@m
  4986  004E84  C05B  F00D         	movff	color_data_collection@m+1,read_color@m+1
  4987  004E88  EC44  F02C         	call	_read_color	;wreg free
  4988  004E8C                     
  4989                           ;color.c: 356:         color_display(m);
  4990  004E8C  C05A  F058         	movff	color_data_collection@m,color_display@m
  4991  004E90  C05B  F059         	movff	color_data_collection@m+1,color_display@m+1
  4992  004E94  ECDB  F02B         	call	_color_display	;wreg free
  4993  004E98                     
  4994                           ;color.c: 357:     }
  4995  004E98  0100               	movlb	0	; () banked
  4996  004E9A  4BDE               	infsnz	color_data_collection@i& (0+255),f,b
  4997  004E9C  2BDF               	incf	(color_data_collection@i+1)& (0+255),f,b
  4998  004E9E                     
  4999                           ; BSR set to: 0
  5000  004E9E  BFDF               	btfsc	(color_data_collection@i+1)& (0+255),7,b
  5001  004EA0  EF5A  F027         	goto	u5311
  5002  004EA4  51DF               	movf	(color_data_collection@i+1)& (0+255),w,b
  5003  004EA6  E108               	bnz	u5310
  5004  004EA8  05DE               	decf	color_data_collection@i& (0+255),w,b
  5005  004EAA  A0D8               	btfss	status,0,c
  5006  004EAC  EF5A  F027         	goto	u5311
  5007  004EB0  EF5C  F027         	goto	u5310
  5008  004EB4                     u5311:
  5009  004EB4  EFE4  F026         	goto	l4872
  5010  004EB8                     u5310:
  5011  004EB8                     
  5012                           ; BSR set to: 0
  5013                           ;color.c: 358:     color_predict(1);
  5014  004EB8  0E01               	movlw	1
  5015  004EBA  ECDC  F02E         	call	_color_predict
  5016  004EBE                     
  5017                           ;color.c: 359:     LED_C();
  5018  004EBE  EC6F  F02F         	call	_LED_C	;wreg free
  5019  004EC2  0012               	return		;funcret
  5020  004EC4                     __end_of_color_data_collection:
  5021                           	callstack 0
  5022                           
  5023 ;; *************** function _read_color *****************
  5024 ;; Defined at:
  5025 ;;		line 166 in file "color.c"
  5026 ;; Parameters:    Size  Location     Type
  5027 ;;  m               2   11[COMRAM] PTR struct color_rgb
  5028 ;;		 -> main@rgb(8), 
  5029 ;; Auto vars:     Size  Location     Type
  5030 ;;		None
  5031 ;; Return value:  Size  Location     Type
  5032 ;;                  1    wreg      void 
  5033 ;; Registers used:
  5034 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5035 ;; Tracked objects:
  5036 ;;		On entry : 0/0
  5037 ;;		On exit  : 0/0
  5038 ;;		Unchanged: 0/0
  5039 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5040 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5041 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5042 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5043 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5044 ;;Total ram usage:        2 bytes
  5045 ;; Hardware stack levels used: 1
  5046 ;; Hardware stack levels required when called: 4
  5047 ;; This function calls:
  5048 ;;		_color_read_Blue
  5049 ;;		_color_read_Clear
  5050 ;;		_color_read_Green
  5051 ;;		_color_read_Red
  5052 ;; This function is called by:
  5053 ;;		_detect_color
  5054 ;;		_color_data_collection
  5055 ;;		_test_function
  5056 ;; This function uses a non-reentrant model
  5057 ;;
  5058                           
  5059                           	psect	text10
  5060  005888                     __ptext10:
  5061                           	callstack 0
  5062  005888                     _read_color:
  5063                           	callstack 24
  5064  005888                     
  5065                           ;color.c: 166: void read_color (struct color_rgb *m);color.c: 167: {;color.c: 168:     m
      +                          ->R = color_read_Red();
  5066  005888  EC9C  F02C         	call	_color_read_Red	;wreg free
  5067  00588C  C00C  FFD9         	movff	read_color@m,fsr2l
  5068  005890  C00D  FFDA         	movff	read_color@m+1,fsr2h
  5069  005894  C005  FFDE         	movff	?_color_read_Red,postinc2
  5070  005898  C006  FFDD         	movff	?_color_read_Red+1,postdec2
  5071                           
  5072                           ;color.c: 169:     m->B = color_read_Blue();
  5073  00589C  ECEC  F02C         	call	_color_read_Blue	;wreg free
  5074  0058A0  EE20 F004          	lfsr	2,4
  5075  0058A4  500C               	movf	read_color@m^0,w,c
  5076  0058A6  26D9               	addwf	fsr2l,f,c
  5077  0058A8  500D               	movf	(read_color@m+1)^0,w,c
  5078  0058AA  22DA               	addwfc	fsr2h,f,c
  5079  0058AC  C005  FFDE         	movff	?_color_read_Blue,postinc2
  5080  0058B0  C006  FFDD         	movff	?_color_read_Blue+1,postdec2
  5081                           
  5082                           ;color.c: 170:     m->G = color_read_Green();
  5083  0058B4  ECC4  F02C         	call	_color_read_Green	;wreg free
  5084  0058B8  EE20 F002          	lfsr	2,2
  5085  0058BC  500C               	movf	read_color@m^0,w,c
  5086  0058BE  26D9               	addwf	fsr2l,f,c
  5087  0058C0  500D               	movf	(read_color@m+1)^0,w,c
  5088  0058C2  22DA               	addwfc	fsr2h,f,c
  5089  0058C4  C005  FFDE         	movff	?_color_read_Green,postinc2
  5090  0058C8  C006  FFDD         	movff	?_color_read_Green+1,postdec2
  5091                           
  5092                           ;color.c: 171:     m->C = color_read_Clear();
  5093  0058CC  EC14  F02D         	call	_color_read_Clear	;wreg free
  5094  0058D0  EE20 F006          	lfsr	2,6
  5095  0058D4  500C               	movf	read_color@m^0,w,c
  5096  0058D6  26D9               	addwf	fsr2l,f,c
  5097  0058D8  500D               	movf	(read_color@m+1)^0,w,c
  5098  0058DA  22DA               	addwfc	fsr2h,f,c
  5099  0058DC  C005  FFDE         	movff	?_color_read_Clear,postinc2
  5100  0058E0  C006  FFDD         	movff	?_color_read_Clear+1,postdec2
  5101  0058E4  0012               	return		;funcret
  5102  0058E6                     __end_of_read_color:
  5103                           	callstack 0
  5104                           
  5105 ;; *************** function _color_predict *****************
  5106 ;; Defined at:
  5107 ;;		line 298 in file "color.c"
  5108 ;; Parameters:    Size  Location     Type
  5109 ;;  color           1    wreg     unsigned char 
  5110 ;; Auto vars:     Size  Location     Type
  5111 ;;  color           1  125[BANK0 ] unsigned char 
  5112 ;;  buf           100   25[BANK0 ] unsigned char [100]
  5113 ;; Return value:  Size  Location     Type
  5114 ;;                  1    wreg      void 
  5115 ;; Registers used:
  5116 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5117 ;; Tracked objects:
  5118 ;;		On entry : 0/0
  5119 ;;		On exit  : 0/0
  5120 ;;		Unchanged: 0/0
  5121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5122 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5123 ;;      Locals:         0     101       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5124 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5125 ;;      Totals:         0     101       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5126 ;;Total ram usage:      101 bytes
  5127 ;; Hardware stack levels used: 1
  5128 ;; Hardware stack levels required when called: 9
  5129 ;; This function calls:
  5130 ;;		_sendStringSerial4
  5131 ;;		_sprintf
  5132 ;; This function is called by:
  5133 ;;		_color_data_collection
  5134 ;;		_test_function
  5135 ;; This function uses a non-reentrant model
  5136 ;;
  5137                           
  5138                           	psect	text11
  5139  005DB8                     __ptext11:
  5140                           	callstack 0
  5141  005DB8                     _color_predict:
  5142                           	callstack 20
  5143                           
  5144                           ;incstack = 0
  5145                           ;color_predict@color stored from wreg
  5146  005DB8  0100               	movlb	0	; () banked
  5147  005DBA  6FDD               	movwf	color_predict@color& (0+255),b
  5148  005DBC                     
  5149                           ;color.c: 298: void color_predict(unsigned char color);color.c: 299: {;color.c: 300:    
      +                           char buf[100];;color.c: 301:     sprintf(buf,"\t%d\r\n", color);
  5150  005DBC  0E79               	movlw	low color_predict@buf
  5151  005DBE  0100               	movlb	0	; () banked
  5152  005DC0  6F60               	movwf	sprintf@s& (0+255),b
  5153  005DC2  0E00               	movlw	high color_predict@buf
  5154  005DC4  6F61               	movwf	(sprintf@s+1)& (0+255),b
  5155  005DC6  0E0D               	movlw	low (STR_4+8)
  5156  005DC8  6F62               	movwf	sprintf@fmt& (0+255),b
  5157  005DCA  0E0E               	movlw	high (STR_4+8)
  5158  005DCC  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
  5159  005DCE  C0DD  F064         	movff	color_predict@color,?_sprintf+4
  5160  005DD2  6B65               	clrf	(?_sprintf+5)& (0+255),b
  5161  005DD4  EC73  F02C         	call	_sprintf	;wreg free
  5162  005DD8                     
  5163                           ;color.c: 302:     sendStringSerial4(buf);
  5164  005DD8  0E79               	movlw	low color_predict@buf
  5165  005DDA  6E02               	movwf	sendStringSerial4@string^0,c
  5166  005DDC  0E00               	movlw	high color_predict@buf
  5167  005DDE  6E03               	movwf	(sendStringSerial4@string+1)^0,c
  5168  005DE0  ECC4  F02E         	call	_sendStringSerial4	;wreg free
  5169  005DE4  0012               	return		;funcret
  5170  005DE6                     __end_of_color_predict:
  5171                           	callstack 0
  5172                           
  5173 ;; *************** function _color_display *****************
  5174 ;; Defined at:
  5175 ;;		line 290 in file "color.c"
  5176 ;; Parameters:    Size  Location     Type
  5177 ;;  m               2   87[COMRAM] PTR struct color_rgb
  5178 ;;		 -> main@rgb(8), 
  5179 ;; Auto vars:     Size  Location     Type
  5180 ;;  buf           100   25[BANK0 ] unsigned char [100]
  5181 ;; Return value:  Size  Location     Type
  5182 ;;                  1    wreg      void 
  5183 ;; Registers used:
  5184 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5185 ;; Tracked objects:
  5186 ;;		On entry : 0/0
  5187 ;;		On exit  : 0/0
  5188 ;;		Unchanged: 0/0
  5189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5190 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5191 ;;      Locals:         0     100       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5192 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5193 ;;      Totals:         2     100       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5194 ;;Total ram usage:      102 bytes
  5195 ;; Hardware stack levels used: 1
  5196 ;; Hardware stack levels required when called: 9
  5197 ;; This function calls:
  5198 ;;		_sendStringSerial4
  5199 ;;		_sprintf
  5200 ;; This function is called by:
  5201 ;;		_color_data_collection
  5202 ;;		_test_function
  5203 ;; This function uses a non-reentrant model
  5204 ;;
  5205                           
  5206                           	psect	text12
  5207  0057B6                     __ptext12:
  5208                           	callstack 0
  5209  0057B6                     _color_display:
  5210                           	callstack 20
  5211  0057B6                     
  5212                           ;color.c: 290: void color_display(struct color_rgb *m);color.c: 291: {;color.c: 292:    
      +                           char buf[100];;color.c: 293:     sprintf(buf,"%d\t%d\t%d\t%d\r\n", m->R, m->G, m->B, m-
      +                          >C);
  5213  0057B6  0E79               	movlw	low color_display@buf
  5214  0057B8  0100               	movlb	0	; () banked
  5215  0057BA  6F60               	movwf	sprintf@s& (0+255),b
  5216  0057BC  0E00               	movlw	high color_display@buf
  5217  0057BE  6F61               	movwf	(sprintf@s+1)& (0+255),b
  5218  0057C0  0E05               	movlw	low STR_4
  5219  0057C2  6F62               	movwf	sprintf@fmt& (0+255),b
  5220  0057C4  0E0E               	movlw	high STR_4
  5221  0057C6  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
  5222  0057C8  C058  FFD9         	movff	color_display@m,fsr2l
  5223  0057CC  C059  FFDA         	movff	color_display@m+1,fsr2h
  5224  0057D0  CFDE F064          	movff	postinc2,?_sprintf+4
  5225  0057D4  CFDD F065          	movff	postdec2,?_sprintf+5
  5226  0057D8  EE20 F002          	lfsr	2,2
  5227  0057DC  5058               	movf	color_display@m^0,w,c
  5228  0057DE  26D9               	addwf	fsr2l,f,c
  5229  0057E0  5059               	movf	(color_display@m+1)^0,w,c
  5230  0057E2  22DA               	addwfc	fsr2h,f,c
  5231  0057E4  CFDE F066          	movff	postinc2,?_sprintf+6
  5232  0057E8  CFDD F067          	movff	postdec2,?_sprintf+7
  5233  0057EC  EE20 F004          	lfsr	2,4
  5234  0057F0  5058               	movf	color_display@m^0,w,c
  5235  0057F2  26D9               	addwf	fsr2l,f,c
  5236  0057F4  5059               	movf	(color_display@m+1)^0,w,c
  5237  0057F6  22DA               	addwfc	fsr2h,f,c
  5238  0057F8  CFDE F068          	movff	postinc2,?_sprintf+8
  5239  0057FC  CFDD F069          	movff	postdec2,?_sprintf+9
  5240  005800  EE20 F006          	lfsr	2,6
  5241  005804  5058               	movf	color_display@m^0,w,c
  5242  005806  26D9               	addwf	fsr2l,f,c
  5243  005808  5059               	movf	(color_display@m+1)^0,w,c
  5244  00580A  22DA               	addwfc	fsr2h,f,c
  5245  00580C  CFDE F06A          	movff	postinc2,?_sprintf+10
  5246  005810  CFDD F06B          	movff	postdec2,?_sprintf+11
  5247  005814  EC73  F02C         	call	_sprintf	;wreg free
  5248  005818                     
  5249                           ;color.c: 294:     sendStringSerial4(buf);
  5250  005818  0E79               	movlw	low color_display@buf
  5251  00581A  6E02               	movwf	sendStringSerial4@string^0,c
  5252  00581C  0E00               	movlw	high color_display@buf
  5253  00581E  6E03               	movwf	(sendStringSerial4@string+1)^0,c
  5254  005820  ECC4  F02E         	call	_sendStringSerial4	;wreg free
  5255  005824  0012               	return		;funcret
  5256  005826                     __end_of_color_display:
  5257                           	callstack 0
  5258                           
  5259 ;; *************** function _sprintf *****************
  5260 ;; Defined at:
  5261 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\nf_sprintf.c"
  5262 ;; Parameters:    Size  Location     Type
  5263 ;;  s               2    0[BANK0 ] PTR unsigned char 
  5264 ;;		 -> color_predict@buf(100), color_display@buf(100), detect_color@buf(100), 
  5265 ;;  fmt             2    2[BANK0 ] PTR const unsigned char 
  5266 ;;		 -> STR_5(6), STR_4(14), STR_3(11), STR_2(11), 
  5267 ;;		 -> STR_1(11), 
  5268 ;; Auto vars:     Size  Location     Type
  5269 ;;  f              11   14[BANK0 ] struct _IO_FILE
  5270 ;;  ap              2   12[BANK0 ] PTR void [1]
  5271 ;;		 -> ?_sprintf(2), 
  5272 ;;  ret             2    0        int 
  5273 ;; Return value:  Size  Location     Type
  5274 ;;                  2    0[BANK0 ] int 
  5275 ;; Registers used:
  5276 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5277 ;; Tracked objects:
  5278 ;;		On entry : 0/0
  5279 ;;		On exit  : 0/0
  5280 ;;		Unchanged: 0/0
  5281 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5282 ;;      Params:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5283 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5284 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5285 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5286 ;;Total ram usage:       25 bytes
  5287 ;; Hardware stack levels used: 1
  5288 ;; Hardware stack levels required when called: 8
  5289 ;; This function calls:
  5290 ;;		_vfprintf
  5291 ;; This function is called by:
  5292 ;;		_detect_color
  5293 ;;		_color_display
  5294 ;;		_color_predict
  5295 ;; This function uses a non-reentrant model
  5296 ;;
  5297                           
  5298                           	psect	text13
  5299  0058E6                     __ptext13:
  5300                           	callstack 0
  5301  0058E6                     _sprintf:
  5302                           	callstack 20
  5303  0058E6  0E64               	movlw	low (?_sprintf+4)
  5304  0058E8  0100               	movlb	0	; () banked
  5305  0058EA  6F6C               	movwf	sprintf@ap& (0+255),b
  5306  0058EC  0E00               	movlw	high (?_sprintf+4)
  5307  0058EE  6F6D               	movwf	(sprintf@ap+1)& (0+255),b
  5308  0058F0  C060  F06E         	movff	sprintf@s,sprintf@f
  5309  0058F4  C061  F06F         	movff	sprintf@s+1,sprintf@f+1
  5310  0058F8                     
  5311                           ; BSR set to: 0
  5312  0058F8  0E00               	movlw	0
  5313  0058FA  6F72               	movwf	(sprintf@f+4)& (0+255),b
  5314  0058FC  0E00               	movlw	0
  5315  0058FE  6F71               	movwf	(sprintf@f+3)& (0+255),b
  5316  005900                     
  5317                           ; BSR set to: 0
  5318  005900  0E00               	movlw	0
  5319  005902  6F78               	movwf	(sprintf@f+10)& (0+255),b
  5320  005904  0E00               	movlw	0
  5321  005906  6F77               	movwf	(sprintf@f+9)& (0+255),b
  5322  005908                     
  5323                           ; BSR set to: 0
  5324  005908  0E6E               	movlw	low sprintf@f
  5325  00590A  6E50               	movwf	vfprintf@fp^0,c
  5326  00590C  0E00               	movlw	high sprintf@f
  5327  00590E  6E51               	movwf	(vfprintf@fp+1)^0,c
  5328  005910  C062  F052         	movff	sprintf@fmt,vfprintf@fmt
  5329  005914  C063  F053         	movff	sprintf@fmt+1,vfprintf@fmt+1
  5330  005918  0E6C               	movlw	low sprintf@ap
  5331  00591A  6E54               	movwf	vfprintf@ap^0,c
  5332  00591C  0E00               	movlw	high sprintf@ap
  5333  00591E  6E55               	movwf	(vfprintf@ap+1)^0,c
  5334  005920  EC13  F02C         	call	_vfprintf	;wreg free
  5335  005924  0100               	movlb	0	; () banked
  5336  005926  5171               	movf	(sprintf@f+3)& (0+255),w,b
  5337  005928  2560               	addwf	sprintf@s& (0+255),w,b
  5338  00592A  6ED9               	movwf	fsr2l,c
  5339  00592C  5172               	movf	(sprintf@f+4)& (0+255),w,b
  5340  00592E  2161               	addwfc	(sprintf@s+1)& (0+255),w,b
  5341  005930  6EDA               	movwf	fsr2h,c
  5342  005932  0E00               	movlw	0
  5343  005934  6EDF               	movwf	indf2,c
  5344  005936                     
  5345                           ; BSR set to: 0
  5346  005936  0012               	return		;funcret
  5347  005938                     __end_of_sprintf:
  5348                           	callstack 0
  5349                           
  5350 ;; *************** function _vfprintf *****************
  5351 ;; Defined at:
  5352 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c"
  5353 ;; Parameters:    Size  Location     Type
  5354 ;;  fp              2   79[COMRAM] PTR struct _IO_FILE
  5355 ;;		 -> sprintf@f(11), 
  5356 ;;  fmt             2   81[COMRAM] PTR const unsigned char 
  5357 ;;		 -> STR_5(6), STR_4(14), STR_3(11), STR_2(11), 
  5358 ;;		 -> STR_1(11), 
  5359 ;;  ap              2   83[COMRAM] PTR PTR void 
  5360 ;;		 -> sprintf@ap(2), 
  5361 ;; Auto vars:     Size  Location     Type
  5362 ;;  cfmt            2   85[COMRAM] PTR unsigned char 
  5363 ;;		 -> STR_5(6), STR_4(14), STR_3(11), STR_2(11), 
  5364 ;;		 -> STR_1(11), 
  5365 ;; Return value:  Size  Location     Type
  5366 ;;                  2   79[COMRAM] int 
  5367 ;; Registers used:
  5368 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5369 ;; Tracked objects:
  5370 ;;		On entry : 0/0
  5371 ;;		On exit  : 0/0
  5372 ;;		Unchanged: 0/0
  5373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5374 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5375 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5376 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5377 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5378 ;;Total ram usage:        8 bytes
  5379 ;; Hardware stack levels used: 1
  5380 ;; Hardware stack levels required when called: 7
  5381 ;; This function calls:
  5382 ;;		_vfpfcnvrt
  5383 ;; This function is called by:
  5384 ;;		_sprintf
  5385 ;; This function uses a non-reentrant model
  5386 ;;
  5387                           
  5388                           	psect	text14
  5389  005826                     __ptext14:
  5390                           	callstack 0
  5391  005826                     _vfprintf:
  5392                           	callstack 20
  5393  005826                     
  5394                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.35\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  5395  005826  C052  F056         	movff	vfprintf@fmt,vfprintf@cfmt
  5396  00582A  C053  F057         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  5397  00582E                     
  5398                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  5399  00582E  0E00               	movlw	0
  5400  005830  0101               	movlb	1	; () banked
  5401  005832  6F7B               	movwf	(_nout+1)& (0+255),b
  5402  005834  0E00               	movlw	0
  5403  005836  6F7A               	movwf	_nout& (0+255),b
  5404                           
  5405                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  5406  005838  EF31  F02C         	goto	l4140
  5407  00583C                     l4138:
  5408                           
  5409                           ; BSR set to: 1
  5410                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  5411  00583C  C050  F040         	movff	vfprintf@fp,vfpfcnvrt@fp
  5412  005840  C051  F041         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  5413  005844  0E56               	movlw	low vfprintf@cfmt
  5414  005846  6E42               	movwf	vfpfcnvrt@fmt^0,c
  5415  005848  0E00               	movlw	high vfprintf@cfmt
  5416  00584A  6E43               	movwf	(vfpfcnvrt@fmt+1)^0,c
  5417  00584C  C054  F044         	movff	vfprintf@ap,vfpfcnvrt@ap
  5418  005850  C055  F045         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  5419  005854  EC80  F01F         	call	_vfpfcnvrt	;wreg free
  5420  005858  5040               	movf	?_vfpfcnvrt^0,w,c
  5421  00585A  0101               	movlb	1	; () banked
  5422  00585C  277A               	addwf	_nout& (0+255),f,b
  5423  00585E  5041               	movf	(?_vfpfcnvrt+1)^0,w,c
  5424  005860  237B               	addwfc	(_nout+1)& (0+255),f,b
  5425  005862                     l4140:
  5426                           
  5427                           ; BSR set to: 1
  5428                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  5429  005862  C056  FFF6         	movff	vfprintf@cfmt,tblptrl
  5430  005866  C057  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  5431  00586A                     	if	0	;tblptru may be non-zero
  5432  00586A                     	endif
  5433  00586A                     	if	0	;tblptru may be non-zero
  5434  00586A                     	endif
  5435  00586A  0008               	tblrd		*
  5436  00586C  50F5               	movf	tablat,w,c
  5437  00586E  0900               	iorlw	0
  5438  005870  A4D8               	btfss	status,2,c
  5439  005872  EF3D  F02C         	goto	u4191
  5440  005876  EF3F  F02C         	goto	u4190
  5441  00587A                     u4191:
  5442  00587A  EF1E  F02C         	goto	l4138
  5443  00587E                     u4190:
  5444  00587E                     
  5445                           ; BSR set to: 1
  5446                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  5447  00587E  C17A  F050         	movff	_nout,?_vfprintf
  5448  005882  C17B  F051         	movff	_nout+1,?_vfprintf+1
  5449  005886                     
  5450                           ; BSR set to: 1
  5451  005886  0012               	return		;funcret
  5452  005888                     __end_of_vfprintf:
  5453                           	callstack 0
  5454                           
  5455 ;; *************** function _vfpfcnvrt *****************
  5456 ;; Defined at:
  5457 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c"
  5458 ;; Parameters:    Size  Location     Type
  5459 ;;  fp              2   63[COMRAM] PTR struct _IO_FILE
  5460 ;;		 -> sprintf@f(11), 
  5461 ;;  fmt             2   65[COMRAM] PTR PTR unsigned char 
  5462 ;;		 -> vfprintf@cfmt(2), 
  5463 ;;  ap              2   67[COMRAM] PTR PTR void 
  5464 ;;		 -> sprintf@ap(2), 
  5465 ;; Auto vars:     Size  Location     Type
  5466 ;;  ll              8   71[COMRAM] long long 
  5467 ;;  llu             8    0        unsigned long long 
  5468 ;;  f               4    0        unsigned long long 
  5469 ;;  vp              3    0        PTR void 
  5470 ;;  ct              3    0        unsigned char [3]
  5471 ;;  cp              3    0        PTR unsigned char 
  5472 ;;  i               2    0        int 
  5473 ;;  done            2    0        int 
  5474 ;;  c               1    0        unsigned char 
  5475 ;; Return value:  Size  Location     Type
  5476 ;;                  2   63[COMRAM] int 
  5477 ;; Registers used:
  5478 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5479 ;; Tracked objects:
  5480 ;;		On entry : 0/0
  5481 ;;		On exit  : 0/0
  5482 ;;		Unchanged: 0/0
  5483 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5484 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5485 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5486 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5487 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5488 ;;Total ram usage:       16 bytes
  5489 ;; Hardware stack levels used: 1
  5490 ;; Hardware stack levels required when called: 6
  5491 ;; This function calls:
  5492 ;;		_dtoa
  5493 ;;		_fputc
  5494 ;; This function is called by:
  5495 ;;		_vfprintf
  5496 ;; This function uses a non-reentrant model
  5497 ;;
  5498                           
  5499                           	psect	text15
  5500  003F00                     __ptext15:
  5501                           	callstack 0
  5502  003F00                     _vfpfcnvrt:
  5503                           	callstack 20
  5504  003F00                     
  5505                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.35\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.35\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.35\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          5\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  5506  003F00  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5507  003F04  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5508  003F08  CFDE FFF6          	movff	postinc2,tblptrl
  5509  003F0C  CFDD FFF7          	movff	postdec2,tblptrh
  5510  003F10                     	if	0	;tblptru may be non-zero
  5511  003F10                     	endif
  5512  003F10                     	if	0	;tblptru may be non-zero
  5513  003F10                     	endif
  5514  003F10  0008               	tblrd		*
  5515  003F12  50F5               	movf	tablat,w,c
  5516  003F14  0A25               	xorlw	37
  5517  003F16  A4D8               	btfss	status,2,c
  5518  003F18  EF90  F01F         	goto	u3831
  5519  003F1C  EF92  F01F         	goto	u3830
  5520  003F20                     u3831:
  5521  003F20  EF3E  F020         	goto	l3904
  5522  003F24                     u3830:
  5523  003F24                     
  5524                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  5525  003F24  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5526  003F28  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5527  003F2C  2ADE               	incf	postinc2,f,c
  5528  003F2E  0E00               	movlw	0
  5529  003F30  22DD               	addwfc	postdec2,f,c
  5530  003F32                     
  5531                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  5532  003F32  0E00               	movlw	0
  5533  003F34  0101               	movlb	1	; () banked
  5534  003F36  6F7D               	movwf	(_width+1)& (0+255),b
  5535  003F38  0E00               	movlw	0
  5536  003F3A  6F7C               	movwf	_width& (0+255),b
  5537  003F3C  C17C  F180         	movff	_width,_flags
  5538  003F40  C17D  F181         	movff	_width+1,_flags+1
  5539  003F44                     
  5540                           ; BSR set to: 1
  5541                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  5542  003F44  697E               	setf	_prec& (0+255),b
  5543  003F46  697F               	setf	(_prec+1)& (0+255),b
  5544  003F48                     
  5545                           ; BSR set to: 1
  5546                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  5547  003F48  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5548  003F4C  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5549  003F50  CFDE FFF6          	movff	postinc2,tblptrl
  5550  003F54  CFDD FFF7          	movff	postdec2,tblptrh
  5551  003F58                     	if	0	;tblptru may be non-zero
  5552  003F58                     	endif
  5553  003F58                     	if	0	;tblptru may be non-zero
  5554  003F58                     	endif
  5555  003F58  0008               	tblrd		*
  5556  003F5A  50F5               	movf	tablat,w,c
  5557  003F5C  0A64               	xorlw	100
  5558  003F5E  B4D8               	btfsc	status,2,c
  5559  003F60  EFB4  F01F         	goto	u3841
  5560  003F64  EFB6  F01F         	goto	u3840
  5561  003F68                     u3841:
  5562  003F68  EFC8  F01F         	goto	l3882
  5563  003F6C                     u3840:
  5564  003F6C                     
  5565                           ; BSR set to: 1
  5566  003F6C  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5567  003F70  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5568  003F74  CFDE FFF6          	movff	postinc2,tblptrl
  5569  003F78  CFDD FFF7          	movff	postdec2,tblptrh
  5570  003F7C                     	if	0	;tblptru may be non-zero
  5571  003F7C                     	endif
  5572  003F7C                     	if	0	;tblptru may be non-zero
  5573  003F7C                     	endif
  5574  003F7C  0008               	tblrd		*
  5575  003F7E  50F5               	movf	tablat,w,c
  5576  003F80  0A69               	xorlw	105
  5577  003F82  A4D8               	btfss	status,2,c
  5578  003F84  EFC6  F01F         	goto	u3851
  5579  003F88  EFC8  F01F         	goto	u3850
  5580  003F8C                     u3851:
  5581  003F8C  EF08  F020         	goto	l3888
  5582  003F90                     u3850:
  5583  003F90                     l3882:
  5584                           
  5585                           ; BSR set to: 1
  5586                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  5587  003F90  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5588  003F94  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5589  003F98  2ADE               	incf	postinc2,f,c
  5590  003F9A  0E00               	movlw	0
  5591  003F9C  22DD               	addwfc	postdec2,f,c
  5592                           
  5593                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  5594  003F9E  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5595  003FA2  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5596  003FA6  CFDF F046          	movff	indf2,??_vfpfcnvrt
  5597  003FAA  0E02               	movlw	2
  5598  003FAC  26DE               	addwf	postinc2,f,c
  5599  003FAE  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  5600  003FB2  0E00               	movlw	0
  5601  003FB4  22DD               	addwfc	postdec2,f,c
  5602  003FB6  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5603  003FBA  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5604  003FBE  CFDE F048          	movff	postinc2,vfpfcnvrt@ll
  5605  003FC2  CFDD F049          	movff	postdec2,vfpfcnvrt@ll+1
  5606  003FC6  0E00               	movlw	0
  5607  003FC8  BE49               	btfsc	(vfpfcnvrt@ll+1)^0,7,c
  5608  003FCA  0EFF               	movlw	-1
  5609  003FCC  6E4A               	movwf	(vfpfcnvrt@ll+2)^0,c
  5610  003FCE  6E4B               	movwf	(vfpfcnvrt@ll+3)^0,c
  5611  003FD0  6E4C               	movwf	(vfpfcnvrt@ll+4)^0,c
  5612  003FD2  6E4D               	movwf	(vfpfcnvrt@ll+5)^0,c
  5613  003FD4  6E4E               	movwf	(vfpfcnvrt@ll+6)^0,c
  5614  003FD6  6E4F               	movwf	(vfpfcnvrt@ll+7)^0,c
  5615  003FD8                     
  5616                           ; BSR set to: 1
  5617                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  5618  003FD8  C040  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  5619  003FDC  C041  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  5620  003FE0  C048  F01E         	movff	vfpfcnvrt@ll,dtoa@d
  5621  003FE4  C049  F01F         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  5622  003FE8  C04A  F020         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  5623  003FEC  C04B  F021         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  5624  003FF0  C04C  F022         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  5625  003FF4  C04D  F023         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  5626  003FF8  C04E  F024         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  5627  003FFC  C04F  F025         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  5628  004000  ECC9  F019         	call	_dtoa	;wreg free
  5629  004004  C01C  F040         	movff	?_dtoa,?_vfpfcnvrt
  5630  004008  C01D  F041         	movff	?_dtoa+1,?_vfpfcnvrt+1
  5631  00400C  EF59  F020         	goto	l1362
  5632  004010                     l3888:
  5633                           
  5634                           ; BSR set to: 1
  5635                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  5636  004010  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5637  004014  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5638  004018  CFDE FFF6          	movff	postinc2,tblptrl
  5639  00401C  CFDD FFF7          	movff	postdec2,tblptrh
  5640  004020                     	if	0	;tblptru may be non-zero
  5641  004020                     	endif
  5642  004020                     	if	0	;tblptru may be non-zero
  5643  004020                     	endif
  5644  004020  0008               	tblrd		*
  5645  004022  50F5               	movf	tablat,w,c
  5646  004024  0A25               	xorlw	37
  5647  004026  A4D8               	btfss	status,2,c
  5648  004028  EF18  F020         	goto	u3861
  5649  00402C  EF1A  F020         	goto	u3860
  5650  004030                     u3861:
  5651  004030  EF31  F020         	goto	l3898
  5652  004034                     u3860:
  5653  004034                     
  5654                           ; BSR set to: 1
  5655                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  5656  004034  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5657  004038  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5658  00403C  2ADE               	incf	postinc2,f,c
  5659  00403E  0E00               	movlw	0
  5660  004040  22DD               	addwfc	postdec2,f,c
  5661  004042                     
  5662                           ; BSR set to: 1
  5663                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  5664  004042  0E00               	movlw	0
  5665  004044  6E02               	movwf	(fputc@c+1)^0,c
  5666  004046  0E25               	movlw	37
  5667  004048  6E01               	movwf	fputc@c^0,c
  5668  00404A  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
  5669  00404E  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  5670  004052  EC48  F029         	call	_fputc	;wreg free
  5671  004056                     l3894:
  5672                           
  5673                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  5674  004056  0E00               	movlw	0
  5675  004058  6E41               	movwf	(?_vfpfcnvrt+1)^0,c
  5676  00405A  0E01               	movlw	1
  5677  00405C  6E40               	movwf	?_vfpfcnvrt^0,c
  5678  00405E  EF59  F020         	goto	l1362
  5679  004062                     l3898:
  5680                           
  5681                           ; BSR set to: 1
  5682                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  5683  004062  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5684  004066  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5685  00406A  2ADE               	incf	postinc2,f,c
  5686  00406C  0E00               	movlw	0
  5687  00406E  22DD               	addwfc	postdec2,f,c
  5688  004070                     
  5689                           ; BSR set to: 1
  5690                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  5691  004070  0E00               	movlw	0
  5692  004072  6E41               	movwf	(?_vfpfcnvrt+1)^0,c
  5693  004074  0E00               	movlw	0
  5694  004076  6E40               	movwf	?_vfpfcnvrt^0,c
  5695  004078  EF59  F020         	goto	l1362
  5696  00407C                     l3904:
  5697                           
  5698                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  5699  00407C  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5700  004080  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5701  004084  CFDE FFF6          	movff	postinc2,tblptrl
  5702  004088  CFDD FFF7          	movff	postdec2,tblptrh
  5703  00408C                     	if	0	;tblptru may be non-zero
  5704  00408C                     	endif
  5705  00408C                     	if	0	;tblptru may be non-zero
  5706  00408C                     	endif
  5707  00408C  0008               	tblrd		*
  5708  00408E  50F5               	movf	tablat,w,c
  5709  004090  6E01               	movwf	fputc@c^0,c
  5710  004092  6A02               	clrf	(fputc@c+1)^0,c
  5711  004094  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
  5712  004098  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  5713  00409C  EC48  F029         	call	_fputc	;wreg free
  5714  0040A0                     
  5715                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  5716  0040A0  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5717  0040A4  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5718  0040A8  2ADE               	incf	postinc2,f,c
  5719  0040AA  0E00               	movlw	0
  5720  0040AC  22DD               	addwfc	postdec2,f,c
  5721  0040AE  EF2B  F020         	goto	l3894
  5722  0040B2                     l1362:
  5723  0040B2  0012               	return		;funcret
  5724  0040B4                     __end_of_vfpfcnvrt:
  5725                           	callstack 0
  5726                           
  5727 ;; *************** function _dtoa *****************
  5728 ;; Defined at:
  5729 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c"
  5730 ;; Parameters:    Size  Location     Type
  5731 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  5732 ;;		 -> sprintf@f(11), 
  5733 ;;  d               8   29[COMRAM] long long 
  5734 ;; Auto vars:     Size  Location     Type
  5735 ;;  n               8   53[COMRAM] long long 
  5736 ;;  i               2   61[COMRAM] int 
  5737 ;;  s               2   51[COMRAM] int 
  5738 ;;  w               2   49[COMRAM] int 
  5739 ;;  p               2   47[COMRAM] int 
  5740 ;; Return value:  Size  Location     Type
  5741 ;;                  2   27[COMRAM] int 
  5742 ;; Registers used:
  5743 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5744 ;; Tracked objects:
  5745 ;;		On entry : 0/0
  5746 ;;		On exit  : 0/0
  5747 ;;		Unchanged: 0/0
  5748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5749 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5750 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5751 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5752 ;;      Totals:        36       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5753 ;;Total ram usage:       36 bytes
  5754 ;; Hardware stack levels used: 1
  5755 ;; Hardware stack levels required when called: 5
  5756 ;; This function calls:
  5757 ;;		___aodiv
  5758 ;;		___aomod
  5759 ;;		_abs
  5760 ;;		_pad
  5761 ;; This function is called by:
  5762 ;;		_vfpfcnvrt
  5763 ;; This function uses a non-reentrant model
  5764 ;;
  5765                           
  5766                           	psect	text16
  5767  003392                     __ptext16:
  5768                           	callstack 0
  5769  003392                     _dtoa:
  5770                           	callstack 20
  5771  003392                     
  5772                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  5773  003392  C01E  F036         	movff	dtoa@d,dtoa@n
  5774  003396  C01F  F037         	movff	dtoa@d+1,dtoa@n+1
  5775  00339A  C020  F038         	movff	dtoa@d+2,dtoa@n+2
  5776  00339E  C021  F039         	movff	dtoa@d+3,dtoa@n+3
  5777  0033A2  C022  F03A         	movff	dtoa@d+4,dtoa@n+4
  5778  0033A6  C023  F03B         	movff	dtoa@d+5,dtoa@n+5
  5779  0033AA  C024  F03C         	movff	dtoa@d+6,dtoa@n+6
  5780  0033AE  C025  F03D         	movff	dtoa@d+7,dtoa@n+7
  5781  0033B2                     
  5782                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  5783  0033B2  BE3D               	btfsc	(dtoa@n+7)^0,7,c
  5784  0033B4  EFDE  F019         	goto	u3231
  5785  0033B8  EFE1  F019         	goto	u3230
  5786  0033BC                     u3231:
  5787  0033BC  0E01               	movlw	1
  5788  0033BE  EFE2  F019         	goto	u3240
  5789  0033C2                     u3230:
  5790  0033C2  0E00               	movlw	0
  5791  0033C4                     u3240:
  5792  0033C4  6E34               	movwf	dtoa@s^0,c
  5793  0033C6  6A35               	clrf	(dtoa@s+1)^0,c
  5794                           
  5795                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  5796  0033C8  5034               	movf	dtoa@s^0,w,c
  5797  0033CA  1035               	iorwf	(dtoa@s+1)^0,w,c
  5798  0033CC  B4D8               	btfsc	status,2,c
  5799  0033CE  EFEB  F019         	goto	u3251
  5800  0033D2  EFED  F019         	goto	u3250
  5801  0033D6                     u3251:
  5802  0033D6  EFFD  F019         	goto	l3594
  5803  0033DA                     u3250:
  5804  0033DA                     
  5805                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  5806  0033DA  1E3D               	comf	(dtoa@n+7)^0,f,c
  5807  0033DC  1E3C               	comf	(dtoa@n+6)^0,f,c
  5808  0033DE  1E3B               	comf	(dtoa@n+5)^0,f,c
  5809  0033E0  1E3A               	comf	(dtoa@n+4)^0,f,c
  5810  0033E2  1E39               	comf	(dtoa@n+3)^0,f,c
  5811  0033E4  1E38               	comf	(dtoa@n+2)^0,f,c
  5812  0033E6  1E37               	comf	(dtoa@n+1)^0,f,c
  5813  0033E8  6C36               	negf	dtoa@n^0,c
  5814  0033EA  0E00               	movlw	0
  5815  0033EC  2237               	addwfc	(dtoa@n+1)^0,f,c
  5816  0033EE  2238               	addwfc	(dtoa@n+2)^0,f,c
  5817  0033F0  2239               	addwfc	(dtoa@n+3)^0,f,c
  5818  0033F2  223A               	addwfc	(dtoa@n+4)^0,f,c
  5819  0033F4  223B               	addwfc	(dtoa@n+5)^0,f,c
  5820  0033F6  223C               	addwfc	(dtoa@n+6)^0,f,c
  5821  0033F8  223D               	addwfc	(dtoa@n+7)^0,f,c
  5822  0033FA                     l3594:
  5823                           
  5824                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  5825  0033FA  0101               	movlb	1	; () banked
  5826  0033FC  BF7F               	btfsc	(_prec+1)& (0+255),7,b
  5827  0033FE  EF03  F01A         	goto	u3261
  5828  003402  EF05  F01A         	goto	u3260
  5829  003406                     u3261:
  5830  003406  EF06  F01A         	goto	l3598
  5831  00340A                     u3260:
  5832  00340A                     
  5833                           ; BSR set to: 1
  5834                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  5835  00340A  9380               	bcf	_flags& (0+255),1,b
  5836  00340C                     l3598:
  5837                           
  5838                           ; BSR set to: 1
  5839                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  5840  00340C  BF7F               	btfsc	(_prec+1)& (0+255),7,b
  5841  00340E  EF13  F01A         	goto	u3270
  5842  003412  517F               	movf	(_prec+1)& (0+255),w,b
  5843  003414  E106               	bnz	u3271
  5844  003416  057E               	decf	_prec& (0+255),w,b
  5845  003418  B0D8               	btfsc	status,0,c
  5846  00341A  EF11  F01A         	goto	u3271
  5847  00341E  EF13  F01A         	goto	u3270
  5848  003422                     u3271:
  5849  003422  EF19  F01A         	goto	l1335
  5850  003426                     u3270:
  5851  003426                     
  5852                           ; BSR set to: 1
  5853  003426  0E00               	movlw	0
  5854  003428  6E31               	movwf	(dtoa@p+1)^0,c
  5855  00342A  0E01               	movlw	1
  5856  00342C  6E30               	movwf	dtoa@p^0,c
  5857  00342E  EF1D  F01A         	goto	l1337
  5858  003432                     l1335:
  5859                           
  5860                           ; BSR set to: 1
  5861  003432  C17E  F030         	movff	_prec,dtoa@p
  5862  003436  C17F  F031         	movff	_prec+1,dtoa@p+1
  5863  00343A                     l1337:
  5864                           
  5865                           ; BSR set to: 1
  5866                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  5867  00343A  C17C  F032         	movff	_width,dtoa@w
  5868  00343E  C17D  F033         	movff	_width+1,dtoa@w+1
  5869  003442                     
  5870                           ; BSR set to: 1
  5871                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  5872  003442  5034               	movf	dtoa@s^0,w,c
  5873  003444  1035               	iorwf	(dtoa@s+1)^0,w,c
  5874  003446  A4D8               	btfss	status,2,c
  5875  003448  EF28  F01A         	goto	u3281
  5876  00344C  EF2A  F01A         	goto	u3280
  5877  003450                     u3281:
  5878  003450  EF31  F01A         	goto	l3606
  5879  003454                     u3280:
  5880  003454                     
  5881                           ; BSR set to: 1
  5882  003454  A580               	btfss	_flags& (0+255),2,b
  5883  003456  EF2F  F01A         	goto	u3291
  5884  00345A  EF31  F01A         	goto	u3290
  5885  00345E                     u3291:
  5886  00345E  EF34  F01A         	goto	l3608
  5887  003462                     u3290:
  5888  003462                     l3606:
  5889                           
  5890                           ; BSR set to: 1
  5891                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 306:         --w;
  5892  003462  0632               	decf	dtoa@w^0,f,c
  5893  003464  A0D8               	btfss	status,0,c
  5894  003466  0633               	decf	(dtoa@w+1)^0,f,c
  5895  003468                     l3608:
  5896                           
  5897                           ; BSR set to: 1
  5898                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  5899  003468  0E00               	movlw	0
  5900  00346A  6E3F               	movwf	(dtoa@i+1)^0,c
  5901  00346C  0E1F               	movlw	31
  5902  00346E  6E3E               	movwf	dtoa@i^0,c
  5903  003470                     
  5904                           ; BSR set to: 1
  5905                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  5906  003470  0E00               	movlw	0
  5907  003472  6FA5               	movwf	(_dbuf+31)& (0+255),b
  5908                           
  5909                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5910  003474  EFB8  F01A         	goto	l3622
  5911  003478                     l3612:
  5912                           
  5913                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 313:         --i;
  5914  003478  063E               	decf	dtoa@i^0,f,c
  5915  00347A  A0D8               	btfss	status,0,c
  5916  00347C  063F               	decf	(dtoa@i+1)^0,f,c
  5917  00347E                     
  5918                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  5919  00347E  0E86               	movlw	low _dbuf
  5920  003480  243E               	addwf	dtoa@i^0,w,c
  5921  003482  6ED9               	movwf	fsr2l,c
  5922  003484  0E01               	movlw	high _dbuf
  5923  003486  203F               	addwfc	(dtoa@i+1)^0,w,c
  5924  003488  6EDA               	movwf	fsr2h,c
  5925  00348A  C036  F001         	movff	dtoa@n,___aomod@dividend
  5926  00348E  C037  F002         	movff	dtoa@n+1,___aomod@dividend+1
  5927  003492  C038  F003         	movff	dtoa@n+2,___aomod@dividend+2
  5928  003496  C039  F004         	movff	dtoa@n+3,___aomod@dividend+3
  5929  00349A  C03A  F005         	movff	dtoa@n+4,___aomod@dividend+4
  5930  00349E  C03B  F006         	movff	dtoa@n+5,___aomod@dividend+5
  5931  0034A2  C03C  F007         	movff	dtoa@n+6,___aomod@dividend+6
  5932  0034A6  C03D  F008         	movff	dtoa@n+7,___aomod@dividend+7
  5933  0034AA  0E0A               	movlw	10
  5934  0034AC  6E09               	movwf	___aomod@divisor^0,c
  5935  0034AE  0E00               	movlw	0
  5936  0034B0  6E0A               	movwf	(___aomod@divisor+1)^0,c
  5937  0034B2  0E00               	movlw	0
  5938  0034B4  6E0B               	movwf	(___aomod@divisor+2)^0,c
  5939  0034B6  0E00               	movlw	0
  5940  0034B8  6E0C               	movwf	(___aomod@divisor+3)^0,c
  5941  0034BA  0E00               	movlw	0
  5942  0034BC  6E0D               	movwf	(___aomod@divisor+4)^0,c
  5943  0034BE  0E00               	movlw	0
  5944  0034C0  6E0E               	movwf	(___aomod@divisor+5)^0,c
  5945  0034C2  0E00               	movlw	0
  5946  0034C4  6E0F               	movwf	(___aomod@divisor+6)^0,c
  5947  0034C6  0E00               	movlw	0
  5948  0034C8  6E10               	movwf	(___aomod@divisor+7)^0,c
  5949  0034CA  ECA8  F023         	call	___aomod	;wreg free
  5950  0034CE  C001  F026         	movff	?___aomod,??_dtoa
  5951  0034D2  C002  F027         	movff	?___aomod+1,??_dtoa+1
  5952  0034D6  C003  F028         	movff	?___aomod+2,??_dtoa+2
  5953  0034DA  C004  F029         	movff	?___aomod+3,??_dtoa+3
  5954  0034DE  C005  F02A         	movff	?___aomod+4,??_dtoa+4
  5955  0034E2  C006  F02B         	movff	?___aomod+5,??_dtoa+5
  5956  0034E6  C007  F02C         	movff	?___aomod+6,??_dtoa+6
  5957  0034EA  C008  F02D         	movff	?___aomod+7,??_dtoa+7
  5958  0034EE  C026  F013         	movff	??_dtoa,abs@a
  5959  0034F2  C028  F014         	movff	??_dtoa+2,abs@a+1
  5960  0034F6  ECE4  F02D         	call	_abs	;wreg free
  5961  0034FA  5013               	movf	?_abs^0,w,c
  5962  0034FC  0F30               	addlw	48
  5963  0034FE  6EDF               	movwf	indf2,c
  5964  003500                     
  5965                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 315:         --p;
  5966  003500  0630               	decf	dtoa@p^0,f,c
  5967  003502  A0D8               	btfss	status,0,c
  5968  003504  0631               	decf	(dtoa@p+1)^0,f,c
  5969  003506                     
  5970                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 316:         --w;
  5971  003506  0632               	decf	dtoa@w^0,f,c
  5972  003508  A0D8               	btfss	status,0,c
  5973  00350A  0633               	decf	(dtoa@w+1)^0,f,c
  5974  00350C                     
  5975                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  5976  00350C  C036  F001         	movff	dtoa@n,___aodiv@dividend
  5977  003510  C037  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  5978  003514  C038  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  5979  003518  C039  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  5980  00351C  C03A  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  5981  003520  C03B  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  5982  003524  C03C  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  5983  003528  C03D  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  5984  00352C  0E0A               	movlw	10
  5985  00352E  6E09               	movwf	___aodiv@divisor^0,c
  5986  003530  0E00               	movlw	0
  5987  003532  6E0A               	movwf	(___aodiv@divisor+1)^0,c
  5988  003534  0E00               	movlw	0
  5989  003536  6E0B               	movwf	(___aodiv@divisor+2)^0,c
  5990  003538  0E00               	movlw	0
  5991  00353A  6E0C               	movwf	(___aodiv@divisor+3)^0,c
  5992  00353C  0E00               	movlw	0
  5993  00353E  6E0D               	movwf	(___aodiv@divisor+4)^0,c
  5994  003540  0E00               	movlw	0
  5995  003542  6E0E               	movwf	(___aodiv@divisor+5)^0,c
  5996  003544  0E00               	movlw	0
  5997  003546  6E0F               	movwf	(___aodiv@divisor+6)^0,c
  5998  003548  0E00               	movlw	0
  5999  00354A  6E10               	movwf	(___aodiv@divisor+7)^0,c
  6000  00354C  ECE4  F022         	call	___aodiv	;wreg free
  6001  003550  C001  F036         	movff	?___aodiv,dtoa@n
  6002  003554  C002  F037         	movff	?___aodiv+1,dtoa@n+1
  6003  003558  C003  F038         	movff	?___aodiv+2,dtoa@n+2
  6004  00355C  C004  F039         	movff	?___aodiv+3,dtoa@n+3
  6005  003560  C005  F03A         	movff	?___aodiv+4,dtoa@n+4
  6006  003564  C006  F03B         	movff	?___aodiv+5,dtoa@n+5
  6007  003568  C007  F03C         	movff	?___aodiv+6,dtoa@n+6
  6008  00356C  C008  F03D         	movff	?___aodiv+7,dtoa@n+7
  6009  003570                     l3622:
  6010                           
  6011                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6012  003570  BE3F               	btfsc	(dtoa@i+1)^0,7,c
  6013  003572  EFC3  F01A         	goto	u3301
  6014  003576  503F               	movf	(dtoa@i+1)^0,w,c
  6015  003578  E108               	bnz	u3300
  6016  00357A  043E               	decf	dtoa@i^0,w,c
  6017  00357C  A0D8               	btfss	status,0,c
  6018  00357E  EFC3  F01A         	goto	u3301
  6019  003582  EFC5  F01A         	goto	u3300
  6020  003586                     u3301:
  6021  003586  EFF6  F01A         	goto	l3632
  6022  00358A                     u3300:
  6023  00358A  5036               	movf	dtoa@n^0,w,c
  6024  00358C  1037               	iorwf	(dtoa@n+1)^0,w,c
  6025  00358E  1038               	iorwf	(dtoa@n+2)^0,w,c
  6026  003590  1039               	iorwf	(dtoa@n+3)^0,w,c
  6027  003592  103A               	iorwf	(dtoa@n+4)^0,w,c
  6028  003594  103B               	iorwf	(dtoa@n+5)^0,w,c
  6029  003596  103C               	iorwf	(dtoa@n+6)^0,w,c
  6030  003598  103D               	iorwf	(dtoa@n+7)^0,w,c
  6031  00359A  A4D8               	btfss	status,2,c
  6032  00359C  EFD2  F01A         	goto	u3311
  6033  0035A0  EFD4  F01A         	goto	u3310
  6034  0035A4                     u3311:
  6035  0035A4  EF3C  F01A         	goto	l3612
  6036  0035A8                     u3310:
  6037  0035A8  BE31               	btfsc	(dtoa@p+1)^0,7,c
  6038  0035AA  EFE1  F01A         	goto	u3320
  6039  0035AE  5031               	movf	(dtoa@p+1)^0,w,c
  6040  0035B0  E106               	bnz	u3321
  6041  0035B2  0430               	decf	dtoa@p^0,w,c
  6042  0035B4  B0D8               	btfsc	status,0,c
  6043  0035B6  EFDF  F01A         	goto	u3321
  6044  0035BA  EFE1  F01A         	goto	u3320
  6045  0035BE                     u3321:
  6046  0035BE  EF3C  F01A         	goto	l3612
  6047  0035C2                     u3320:
  6048  0035C2  BE33               	btfsc	(dtoa@w+1)^0,7,c
  6049  0035C4  EFEC  F01A         	goto	u3331
  6050  0035C8  5033               	movf	(dtoa@w+1)^0,w,c
  6051  0035CA  E108               	bnz	u3330
  6052  0035CC  0432               	decf	dtoa@w^0,w,c
  6053  0035CE  A0D8               	btfss	status,0,c
  6054  0035D0  EFEC  F01A         	goto	u3331
  6055  0035D4  EFEE  F01A         	goto	u3330
  6056  0035D8                     u3331:
  6057  0035D8  EFF6  F01A         	goto	l3632
  6058  0035DC                     u3330:
  6059  0035DC  0101               	movlb	1	; () banked
  6060  0035DE  B380               	btfsc	_flags& (0+255),1,b
  6061  0035E0  EFF4  F01A         	goto	u3341
  6062  0035E4  EFF6  F01A         	goto	u3340
  6063  0035E8                     u3341:
  6064  0035E8  EF3C  F01A         	goto	l3612
  6065  0035EC                     u3340:
  6066  0035EC                     l3632:
  6067                           
  6068                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  6069  0035EC  5034               	movf	dtoa@s^0,w,c
  6070  0035EE  1035               	iorwf	(dtoa@s+1)^0,w,c
  6071  0035F0  A4D8               	btfss	status,2,c
  6072  0035F2  EFFD  F01A         	goto	u3351
  6073  0035F6  EFFF  F01A         	goto	u3350
  6074  0035FA                     u3351:
  6075  0035FA  EF07  F01B         	goto	l3636
  6076  0035FE                     u3350:
  6077  0035FE  0101               	movlb	1	; () banked
  6078  003600  A580               	btfss	_flags& (0+255),2,b
  6079  003602  EF05  F01B         	goto	u3361
  6080  003606  EF07  F01B         	goto	u3360
  6081  00360A                     u3361:
  6082  00360A  EF25  F01B         	goto	l3646
  6083  00360E                     u3360:
  6084  00360E                     l3636:
  6085                           
  6086                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 322:         --i;
  6087  00360E  063E               	decf	dtoa@i^0,f,c
  6088  003610  A0D8               	btfss	status,0,c
  6089  003612  063F               	decf	(dtoa@i+1)^0,f,c
  6090  003614                     
  6091                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  6092  003614  5034               	movf	dtoa@s^0,w,c
  6093  003616  1035               	iorwf	(dtoa@s+1)^0,w,c
  6094  003618  A4D8               	btfss	status,2,c
  6095  00361A  EF11  F01B         	goto	u3371
  6096  00361E  EF13  F01B         	goto	u3370
  6097  003622                     u3371:
  6098  003622  EF19  F01B         	goto	l3642
  6099  003626                     u3370:
  6100  003626  0E00               	movlw	0
  6101  003628  6E2F               	movwf	(_dtoa$2614+1)^0,c
  6102  00362A  0E2B               	movlw	43
  6103  00362C  6E2E               	movwf	_dtoa$2614^0,c
  6104  00362E  EF1D  F01B         	goto	l3644
  6105  003632                     l3642:
  6106  003632  0E00               	movlw	0
  6107  003634  6E2F               	movwf	(_dtoa$2614+1)^0,c
  6108  003636  0E2D               	movlw	45
  6109  003638  6E2E               	movwf	_dtoa$2614^0,c
  6110  00363A                     l3644:
  6111  00363A  0E86               	movlw	low _dbuf
  6112  00363C  243E               	addwf	dtoa@i^0,w,c
  6113  00363E  6ED9               	movwf	fsr2l,c
  6114  003640  0E01               	movlw	high _dbuf
  6115  003642  203F               	addwfc	(dtoa@i+1)^0,w,c
  6116  003644  6EDA               	movwf	fsr2h,c
  6117  003646  C02E  FFDF         	movff	_dtoa$2614,indf2
  6118  00364A                     l3646:
  6119                           
  6120                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  6121  00364A  C01C  F011         	movff	dtoa@fp,pad@fp
  6122  00364E  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
  6123  003652  0E86               	movlw	low _dbuf
  6124  003654  243E               	addwf	dtoa@i^0,w,c
  6125  003656  6E13               	movwf	pad@buf^0,c
  6126  003658  0E01               	movlw	high _dbuf
  6127  00365A  203F               	addwfc	(dtoa@i+1)^0,w,c
  6128  00365C  6E14               	movwf	(pad@buf+1)^0,c
  6129  00365E  C032  F015         	movff	dtoa@w,pad@p
  6130  003662  C033  F016         	movff	dtoa@w+1,pad@p+1
  6131  003666  EC10  F02A         	call	_pad	;wreg free
  6132  00366A  C011  F01C         	movff	?_pad,?_dtoa
  6133  00366E  C012  F01D         	movff	?_pad+1,?_dtoa+1
  6134  003672  0012               	return		;funcret
  6135  003674                     __end_of_dtoa:
  6136                           	callstack 0
  6137                           
  6138 ;; *************** function _pad *****************
  6139 ;; Defined at:
  6140 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c"
  6141 ;; Parameters:    Size  Location     Type
  6142 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  6143 ;;		 -> sprintf@f(11), 
  6144 ;;  buf             2   18[COMRAM] PTR unsigned char 
  6145 ;;		 -> dbuf(32), 
  6146 ;;  p               2   20[COMRAM] int 
  6147 ;; Auto vars:     Size  Location     Type
  6148 ;;  w               2   25[COMRAM] int 
  6149 ;;  i               2   23[COMRAM] int 
  6150 ;; Return value:  Size  Location     Type
  6151 ;;                  2   16[COMRAM] int 
  6152 ;; Registers used:
  6153 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6154 ;; Tracked objects:
  6155 ;;		On entry : 0/0
  6156 ;;		On exit  : 0/0
  6157 ;;		Unchanged: 0/0
  6158 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6159 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6160 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6161 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6162 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6163 ;;Total ram usage:       11 bytes
  6164 ;; Hardware stack levels used: 1
  6165 ;; Hardware stack levels required when called: 4
  6166 ;; This function calls:
  6167 ;;		_fputc
  6168 ;;		_fputs
  6169 ;;		_strlen
  6170 ;; This function is called by:
  6171 ;;		_dtoa
  6172 ;; This function uses a non-reentrant model
  6173 ;;
  6174                           
  6175                           	psect	text17
  6176  005420                     __ptext17:
  6177                           	callstack 0
  6178  005420                     _pad:
  6179                           	callstack 20
  6180  005420                     
  6181                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  6182  005420  0101               	movlb	1	; () banked
  6183  005422  A180               	btfss	_flags& (0+255),0,b
  6184  005424  EF16  F02A         	goto	u3121
  6185  005428  EF18  F02A         	goto	u3120
  6186  00542C                     u3121:
  6187  00542C  EF22  F02A         	goto	l3516
  6188  005430                     u3120:
  6189  005430                     
  6190                           ; BSR set to: 1
  6191                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  6192  005430  C013  F00A         	movff	pad@buf,fputs@s
  6193  005434  C014  F00B         	movff	pad@buf+1,fputs@s+1
  6194  005438  C011  F00C         	movff	pad@fp,fputs@fp
  6195  00543C  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  6196  005440  EC5F  F02D         	call	_fputs	;wreg free
  6197  005444                     l3516:
  6198                           
  6199                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  6200  005444  BE16               	btfsc	(pad@p+1)^0,7,c
  6201  005446  EF27  F02A         	goto	u3131
  6202  00544A  EF29  F02A         	goto	u3130
  6203  00544E                     u3131:
  6204  00544E  EF2F  F02A         	goto	l3520
  6205  005452                     u3130:
  6206  005452  C015  F01A         	movff	pad@p,pad@w
  6207  005456  C016  F01B         	movff	pad@p+1,pad@w+1
  6208  00545A  EF33  F02A         	goto	l1324
  6209  00545E                     l3520:
  6210  00545E  0E00               	movlw	0
  6211  005460  6E1B               	movwf	(pad@w+1)^0,c
  6212  005462  0E00               	movlw	0
  6213  005464  6E1A               	movwf	pad@w^0,c
  6214  005466                     l1324:
  6215                           
  6216                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  6217  005466  0E00               	movlw	0
  6218  005468  6E19               	movwf	(pad@i+1)^0,c
  6219  00546A  0E00               	movlw	0
  6220  00546C  6E18               	movwf	pad@i^0,c
  6221                           
  6222                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  6223  00546E  EF45  F02A         	goto	l3526
  6224  005472                     l3522:
  6225                           
  6226                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  6227  005472  0E00               	movlw	0
  6228  005474  6E02               	movwf	(fputc@c+1)^0,c
  6229  005476  0E20               	movlw	32
  6230  005478  6E01               	movwf	fputc@c^0,c
  6231  00547A  C011  F003         	movff	pad@fp,fputc@fp
  6232  00547E  C012  F004         	movff	pad@fp+1,fputc@fp+1
  6233  005482  EC48  F029         	call	_fputc	;wreg free
  6234  005486                     
  6235                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 86:         ++i;
  6236  005486  4A18               	infsnz	pad@i^0,f,c
  6237  005488  2A19               	incf	(pad@i+1)^0,f,c
  6238  00548A                     l3526:
  6239                           
  6240                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  6241  00548A  501A               	movf	pad@w^0,w,c
  6242  00548C  5C18               	subwf	pad@i^0,w,c
  6243  00548E  5019               	movf	(pad@i+1)^0,w,c
  6244  005490  0A80               	xorlw	128
  6245  005492  6E17               	movwf	??_pad^0,c
  6246  005494  501B               	movf	(pad@w+1)^0,w,c
  6247  005496  0A80               	xorlw	128
  6248  005498  5817               	subwfb	??_pad^0,w,c
  6249  00549A  A0D8               	btfss	status,0,c
  6250  00549C  EF52  F02A         	goto	u3141
  6251  0054A0  EF54  F02A         	goto	u3140
  6252  0054A4                     u3141:
  6253  0054A4  EF39  F02A         	goto	l3522
  6254  0054A8                     u3140:
  6255  0054A8                     
  6256                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  6257  0054A8  0101               	movlb	1	; () banked
  6258  0054AA  B180               	btfsc	_flags& (0+255),0,b
  6259  0054AC  EF5A  F02A         	goto	u3151
  6260  0054B0  EF5C  F02A         	goto	u3150
  6261  0054B4                     u3151:
  6262  0054B4  EF66  F02A         	goto	l3530
  6263  0054B8                     u3150:
  6264  0054B8                     
  6265                           ; BSR set to: 1
  6266                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  6267  0054B8  C013  F00A         	movff	pad@buf,fputs@s
  6268  0054BC  C014  F00B         	movff	pad@buf+1,fputs@s+1
  6269  0054C0  C011  F00C         	movff	pad@fp,fputs@fp
  6270  0054C4  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  6271  0054C8  EC5F  F02D         	call	_fputs	;wreg free
  6272  0054CC                     l3530:
  6273                           
  6274                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  6275  0054CC  C013  F001         	movff	pad@buf,strlen@s
  6276  0054D0  C014  F002         	movff	pad@buf+1,strlen@s+1
  6277  0054D4  EC75  F02E         	call	_strlen	;wreg free
  6278  0054D8  501A               	movf	pad@w^0,w,c
  6279  0054DA  2401               	addwf	?_strlen^0,w,c
  6280  0054DC  6E11               	movwf	?_pad^0,c
  6281  0054DE  501B               	movf	(pad@w+1)^0,w,c
  6282  0054E0  2002               	addwfc	(?_strlen+1)^0,w,c
  6283  0054E2  6E12               	movwf	(?_pad+1)^0,c
  6284  0054E4  0012               	return		;funcret
  6285  0054E6                     __end_of_pad:
  6286                           	callstack 0
  6287                           
  6288 ;; *************** function _strlen *****************
  6289 ;; Defined at:
  6290 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\strlen.c"
  6291 ;; Parameters:    Size  Location     Type
  6292 ;;  s               2    0[COMRAM] PTR const unsigned char 
  6293 ;;		 -> dbuf(32), 
  6294 ;; Auto vars:     Size  Location     Type
  6295 ;;  a               2    2[COMRAM] PTR const unsigned char 
  6296 ;;		 -> dbuf(32), 
  6297 ;; Return value:  Size  Location     Type
  6298 ;;                  2    0[COMRAM] unsigned int 
  6299 ;; Registers used:
  6300 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6301 ;; Tracked objects:
  6302 ;;		On entry : 0/0
  6303 ;;		On exit  : 0/0
  6304 ;;		Unchanged: 0/0
  6305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6306 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6307 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6308 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6309 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6310 ;;Total ram usage:        4 bytes
  6311 ;; Hardware stack levels used: 1
  6312 ;; Hardware stack levels required when called: 1
  6313 ;; This function calls:
  6314 ;;		Nothing
  6315 ;; This function is called by:
  6316 ;;		_pad
  6317 ;; This function uses a non-reentrant model
  6318 ;;
  6319                           
  6320                           	psect	text18
  6321  005CEA                     __ptext18:
  6322                           	callstack 0
  6323  005CEA                     _strlen:
  6324                           	callstack 22
  6325  005CEA  C001  F003         	movff	strlen@s,strlen@a
  6326  005CEE  C002  F004         	movff	strlen@s+1,strlen@a+1
  6327  005CF2  EF7D  F02E         	goto	l3426
  6328  005CF6                     l3424:
  6329  005CF6  4A01               	infsnz	strlen@s^0,f,c
  6330  005CF8  2A02               	incf	(strlen@s+1)^0,f,c
  6331  005CFA                     l3426:
  6332  005CFA  C001  FFD9         	movff	strlen@s,fsr2l
  6333  005CFE  C002  FFDA         	movff	strlen@s+1,fsr2h
  6334  005D02  50DF               	movf	indf2,w,c
  6335  005D04  A4D8               	btfss	status,2,c
  6336  005D06  EF87  F02E         	goto	u2981
  6337  005D0A  EF89  F02E         	goto	u2980
  6338  005D0E                     u2981:
  6339  005D0E  EF7B  F02E         	goto	l3424
  6340  005D12                     u2980:
  6341  005D12  5003               	movf	strlen@a^0,w,c
  6342  005D14  5C01               	subwf	strlen@s^0,w,c
  6343  005D16  6E01               	movwf	?_strlen^0,c
  6344  005D18  5004               	movf	(strlen@a+1)^0,w,c
  6345  005D1A  5802               	subwfb	(strlen@s+1)^0,w,c
  6346  005D1C  6E02               	movwf	(?_strlen+1)^0,c
  6347  005D1E  0012               	return		;funcret
  6348  005D20                     __end_of_strlen:
  6349                           	callstack 0
  6350                           
  6351 ;; *************** function _fputs *****************
  6352 ;; Defined at:
  6353 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\nf_fputs.c"
  6354 ;; Parameters:    Size  Location     Type
  6355 ;;  s               2    9[COMRAM] PTR const unsigned char 
  6356 ;;		 -> dbuf(32), 
  6357 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  6358 ;;		 -> sprintf@f(11), 
  6359 ;; Auto vars:     Size  Location     Type
  6360 ;;  i               2   14[COMRAM] int 
  6361 ;;  c               1   13[COMRAM] unsigned char 
  6362 ;; Return value:  Size  Location     Type
  6363 ;;                  2    9[COMRAM] int 
  6364 ;; Registers used:
  6365 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6366 ;; Tracked objects:
  6367 ;;		On entry : 0/0
  6368 ;;		On exit  : 0/0
  6369 ;;		Unchanged: 0/0
  6370 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6371 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6372 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6373 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6374 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6375 ;;Total ram usage:        7 bytes
  6376 ;; Hardware stack levels used: 1
  6377 ;; Hardware stack levels required when called: 3
  6378 ;; This function calls:
  6379 ;;		_fputc
  6380 ;; This function is called by:
  6381 ;;		_pad
  6382 ;; This function uses a non-reentrant model
  6383 ;;
  6384                           
  6385                           	psect	text19
  6386  005ABE                     __ptext19:
  6387                           	callstack 0
  6388  005ABE                     _fputs:
  6389                           	callstack 20
  6390  005ABE  0E00               	movlw	0
  6391  005AC0  6E10               	movwf	(fputs@i+1)^0,c
  6392  005AC2  0E00               	movlw	0
  6393  005AC4  6E0F               	movwf	fputs@i^0,c
  6394  005AC6  EF70  F02D         	goto	l3420
  6395  005ACA                     l3416:
  6396  005ACA  C00E  F001         	movff	fputs@c,fputc@c
  6397  005ACE  6A02               	clrf	(fputc@c+1)^0,c
  6398  005AD0  C00C  F003         	movff	fputs@fp,fputc@fp
  6399  005AD4  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  6400  005AD8  EC48  F029         	call	_fputc	;wreg free
  6401  005ADC  4A0F               	infsnz	fputs@i^0,f,c
  6402  005ADE  2A10               	incf	(fputs@i+1)^0,f,c
  6403  005AE0                     l3420:
  6404  005AE0  500F               	movf	fputs@i^0,w,c
  6405  005AE2  240A               	addwf	fputs@s^0,w,c
  6406  005AE4  6ED9               	movwf	fsr2l,c
  6407  005AE6  5010               	movf	(fputs@i+1)^0,w,c
  6408  005AE8  200B               	addwfc	(fputs@s+1)^0,w,c
  6409  005AEA  6EDA               	movwf	fsr2h,c
  6410  005AEC  50DF               	movf	indf2,w,c
  6411  005AEE  6E0E               	movwf	fputs@c^0,c
  6412  005AF0  500E               	movf	fputs@c^0,w,c
  6413  005AF2  A4D8               	btfss	status,2,c
  6414  005AF4  EF7E  F02D         	goto	u2971
  6415  005AF8  EF80  F02D         	goto	u2970
  6416  005AFC                     u2971:
  6417  005AFC  EF65  F02D         	goto	l3416
  6418  005B00                     u2970:
  6419  005B00  0012               	return		;funcret
  6420  005B02                     __end_of_fputs:
  6421                           	callstack 0
  6422                           
  6423 ;; *************** function _fputc *****************
  6424 ;; Defined at:
  6425 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\nf_fputc.c"
  6426 ;; Parameters:    Size  Location     Type
  6427 ;;  c               2    0[COMRAM] int 
  6428 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  6429 ;;		 -> sprintf@f(11), 
  6430 ;; Auto vars:     Size  Location     Type
  6431 ;;		None
  6432 ;; Return value:  Size  Location     Type
  6433 ;;                  2    0[COMRAM] int 
  6434 ;; Registers used:
  6435 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6436 ;; Tracked objects:
  6437 ;;		On entry : 0/0
  6438 ;;		On exit  : 0/0
  6439 ;;		Unchanged: 0/0
  6440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6441 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6442 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6443 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6444 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6445 ;;Total ram usage:        9 bytes
  6446 ;; Hardware stack levels used: 1
  6447 ;; Hardware stack levels required when called: 2
  6448 ;; This function calls:
  6449 ;;		_putch
  6450 ;; This function is called by:
  6451 ;;		_pad
  6452 ;;		_vfpfcnvrt
  6453 ;;		_fputs
  6454 ;; This function uses a non-reentrant model
  6455 ;;
  6456                           
  6457                           	psect	text20
  6458  005290                     __ptext20:
  6459                           	callstack 0
  6460  005290                     _fputc:
  6461                           	callstack 23
  6462  005290  5003               	movf	fputc@fp^0,w,c
  6463  005292  1004               	iorwf	(fputc@fp+1)^0,w,c
  6464  005294  B4D8               	btfsc	status,2,c
  6465  005296  EF4F  F029         	goto	u2931
  6466  00529A  EF51  F029         	goto	u2930
  6467  00529E                     u2931:
  6468  00529E  EF5A  F029         	goto	l3404
  6469  0052A2                     u2930:
  6470  0052A2  5003               	movf	fputc@fp^0,w,c
  6471  0052A4  1004               	iorwf	(fputc@fp+1)^0,w,c
  6472  0052A6  A4D8               	btfss	status,2,c
  6473  0052A8  EF58  F029         	goto	u2941
  6474  0052AC  EF5A  F029         	goto	u2940
  6475  0052B0                     u2941:
  6476  0052B0  EF5F  F029         	goto	l3406
  6477  0052B4                     u2940:
  6478  0052B4                     l3404:
  6479  0052B4  5001               	movf	fputc@c^0,w,c
  6480  0052B6  ECD5  F02F         	call	_putch
  6481  0052BA  EFAC  F029         	goto	l1388
  6482  0052BE                     l3406:
  6483  0052BE  EE20 F009          	lfsr	2,9
  6484  0052C2  5003               	movf	fputc@fp^0,w,c
  6485  0052C4  26D9               	addwf	fsr2l,f,c
  6486  0052C6  5004               	movf	(fputc@fp+1)^0,w,c
  6487  0052C8  22DA               	addwfc	fsr2h,f,c
  6488  0052CA  50DE               	movf	postinc2,w,c
  6489  0052CC  10DE               	iorwf	postinc2,w,c
  6490  0052CE  B4D8               	btfsc	status,2,c
  6491  0052D0  EF6C  F029         	goto	u2951
  6492  0052D4  EF6E  F029         	goto	u2950
  6493  0052D8                     u2951:
  6494  0052D8  EF89  F029         	goto	l3410
  6495  0052DC                     u2950:
  6496  0052DC  EE20 F009          	lfsr	2,9
  6497  0052E0  5003               	movf	fputc@fp^0,w,c
  6498  0052E2  26D9               	addwf	fsr2l,f,c
  6499  0052E4  5004               	movf	(fputc@fp+1)^0,w,c
  6500  0052E6  22DA               	addwfc	fsr2h,f,c
  6501  0052E8  EE10 F003          	lfsr	1,3
  6502  0052EC  5003               	movf	fputc@fp^0,w,c
  6503  0052EE  26E1               	addwf	fsr1l,f,c
  6504  0052F0  5004               	movf	(fputc@fp+1)^0,w,c
  6505  0052F2  22E2               	addwfc	fsr1h,f,c
  6506  0052F4  50DE               	movf	postinc2,w,c
  6507  0052F6  5CE6               	subwf	postinc1,w,c
  6508  0052F8  50E6               	movf	postinc1,w,c
  6509  0052FA  0A80               	xorlw	128
  6510  0052FC  6E09               	movwf	(??_fputc+4)^0,c
  6511  0052FE  50DE               	movf	postinc2,w,c
  6512  005300  0A80               	xorlw	128
  6513  005302  5809               	subwfb	(??_fputc+4)^0,w,c
  6514  005304  B0D8               	btfsc	status,0,c
  6515  005306  EF87  F029         	goto	u2961
  6516  00530A  EF89  F029         	goto	u2960
  6517  00530E                     u2961:
  6518  00530E  EFAC  F029         	goto	l1388
  6519  005312                     u2960:
  6520  005312                     l3410:
  6521  005312  EE20 F003          	lfsr	2,3
  6522  005316  5003               	movf	fputc@fp^0,w,c
  6523  005318  26D9               	addwf	fsr2l,f,c
  6524  00531A  5004               	movf	(fputc@fp+1)^0,w,c
  6525  00531C  22DA               	addwfc	fsr2h,f,c
  6526  00531E  CFDE F005          	movff	postinc2,??_fputc
  6527  005322  CFDD F006          	movff	postdec2,??_fputc+1
  6528  005326  C003  FFD9         	movff	fputc@fp,fsr2l
  6529  00532A  C004  FFDA         	movff	fputc@fp+1,fsr2h
  6530  00532E  CFDE F007          	movff	postinc2,??_fputc+2
  6531  005332  CFDD F008          	movff	postdec2,??_fputc+3
  6532  005336  5005               	movf	??_fputc^0,w,c
  6533  005338  2407               	addwf	(??_fputc+2)^0,w,c
  6534  00533A  6ED9               	movwf	fsr2l,c
  6535  00533C  5006               	movf	(??_fputc+1)^0,w,c
  6536  00533E  2008               	addwfc	(??_fputc+3)^0,w,c
  6537  005340  6EDA               	movwf	fsr2h,c
  6538  005342  C001  FFDF         	movff	fputc@c,indf2
  6539  005346  EE20 F003          	lfsr	2,3
  6540  00534A  5003               	movf	fputc@fp^0,w,c
  6541  00534C  26D9               	addwf	fsr2l,f,c
  6542  00534E  5004               	movf	(fputc@fp+1)^0,w,c
  6543  005350  22DA               	addwfc	fsr2h,f,c
  6544  005352  2ADE               	incf	postinc2,f,c
  6545  005354  0E00               	movlw	0
  6546  005356  22DD               	addwfc	postdec2,f,c
  6547  005358                     l1388:
  6548  005358  0012               	return		;funcret
  6549  00535A                     __end_of_fputc:
  6550                           	callstack 0
  6551                           
  6552 ;; *************** function _putch *****************
  6553 ;; Defined at:
  6554 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\putch.c"
  6555 ;; Parameters:    Size  Location     Type
  6556 ;;  c               1    wreg     unsigned char 
  6557 ;; Auto vars:     Size  Location     Type
  6558 ;;  c               1    0[COMRAM] unsigned char 
  6559 ;; Return value:  Size  Location     Type
  6560 ;;                  1    wreg      void 
  6561 ;; Registers used:
  6562 ;;		wreg
  6563 ;; Tracked objects:
  6564 ;;		On entry : 0/0
  6565 ;;		On exit  : 0/0
  6566 ;;		Unchanged: 0/0
  6567 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6568 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6569 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6570 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6571 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6572 ;;Total ram usage:        0 bytes
  6573 ;; Hardware stack levels used: 1
  6574 ;; Hardware stack levels required when called: 1
  6575 ;; This function calls:
  6576 ;;		Nothing
  6577 ;; This function is called by:
  6578 ;;		_fputc
  6579 ;; This function uses a non-reentrant model
  6580 ;;
  6581                           
  6582                           	psect	text21
  6583  005FAA                     __ptext21:
  6584                           	callstack 0
  6585  005FAA                     _putch:
  6586                           	callstack 23
  6587  005FAA  0012               	return		;funcret
  6588  005FAC                     __end_of_putch:
  6589                           	callstack 0
  6590                           
  6591 ;; *************** function _abs *****************
  6592 ;; Defined at:
  6593 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\abs.c"
  6594 ;; Parameters:    Size  Location     Type
  6595 ;;  a               2   18[COMRAM] int 
  6596 ;; Auto vars:     Size  Location     Type
  6597 ;;		None
  6598 ;; Return value:  Size  Location     Type
  6599 ;;                  2   18[COMRAM] int 
  6600 ;; Registers used:
  6601 ;;		wreg, status,2, status,0
  6602 ;; Tracked objects:
  6603 ;;		On entry : 0/0
  6604 ;;		On exit  : 0/0
  6605 ;;		Unchanged: 0/0
  6606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6607 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6608 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6609 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6610 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6611 ;;Total ram usage:        4 bytes
  6612 ;; Hardware stack levels used: 1
  6613 ;; Hardware stack levels required when called: 1
  6614 ;; This function calls:
  6615 ;;		Nothing
  6616 ;; This function is called by:
  6617 ;;		_dtoa
  6618 ;; This function uses a non-reentrant model
  6619 ;;
  6620                           
  6621                           	psect	text22
  6622  005BC8                     __ptext22:
  6623                           	callstack 0
  6624  005BC8                     _abs:
  6625                           	callstack 23
  6626  005BC8  BE14               	btfsc	(abs@a+1)^0,7,c
  6627  005BCA  EFF1  F02D         	goto	u3160
  6628  005BCE  5014               	movf	(abs@a+1)^0,w,c
  6629  005BD0  E106               	bnz	u3161
  6630  005BD2  0413               	decf	abs@a^0,w,c
  6631  005BD4  B0D8               	btfsc	status,0,c
  6632  005BD6  EFEF  F02D         	goto	u3161
  6633  005BDA  EFF1  F02D         	goto	u3160
  6634  005BDE                     u3161:
  6635  005BDE  EFFF  F02D         	goto	l1373
  6636  005BE2                     u3160:
  6637  005BE2  C013  F015         	movff	abs@a,??_abs
  6638  005BE6  C014  F016         	movff	abs@a+1,??_abs+1
  6639  005BEA  1E15               	comf	??_abs^0,f,c
  6640  005BEC  1E16               	comf	(??_abs+1)^0,f,c
  6641  005BEE  4A15               	infsnz	??_abs^0,f,c
  6642  005BF0  2A16               	incf	(??_abs+1)^0,f,c
  6643  005BF2  C015  F013         	movff	??_abs,?_abs
  6644  005BF6  C016  F014         	movff	??_abs+1,?_abs+1
  6645  005BFA  EF03  F02E         	goto	l1376
  6646  005BFE                     l1373:
  6647  005BFE  C013  F013         	movff	abs@a,?_abs
  6648  005C02  C014  F014         	movff	abs@a+1,?_abs+1
  6649  005C06                     l1376:
  6650  005C06  0012               	return		;funcret
  6651  005C08                     __end_of_abs:
  6652                           	callstack 0
  6653                           
  6654 ;; *************** function ___aomod *****************
  6655 ;; Defined at:
  6656 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\aomod.c"
  6657 ;; Parameters:    Size  Location     Type
  6658 ;;  dividend        8    0[COMRAM] long long 
  6659 ;;  divisor         8    8[COMRAM] long long 
  6660 ;; Auto vars:     Size  Location     Type
  6661 ;;  sign            1   17[COMRAM] unsigned char 
  6662 ;;  counter         1   16[COMRAM] unsigned char 
  6663 ;; Return value:  Size  Location     Type
  6664 ;;                  8    0[COMRAM] long long 
  6665 ;; Registers used:
  6666 ;;		wreg, status,2, status,0
  6667 ;; Tracked objects:
  6668 ;;		On entry : 0/0
  6669 ;;		On exit  : 0/0
  6670 ;;		Unchanged: 0/0
  6671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6672 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6673 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6674 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6675 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6676 ;;Total ram usage:       18 bytes
  6677 ;; Hardware stack levels used: 1
  6678 ;; Hardware stack levels required when called: 1
  6679 ;; This function calls:
  6680 ;;		Nothing
  6681 ;; This function is called by:
  6682 ;;		_dtoa
  6683 ;; This function uses a non-reentrant model
  6684 ;;
  6685                           
  6686                           	psect	text23
  6687  004750                     __ptext23:
  6688                           	callstack 0
  6689  004750                     ___aomod:
  6690                           	callstack 23
  6691  004750  0E00               	movlw	0
  6692  004752  6E12               	movwf	___aomod@sign^0,c
  6693  004754  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
  6694  004756  EFB1  F023         	goto	u3060
  6695  00475A  EFAF  F023         	goto	u3061
  6696  00475E                     u3061:
  6697  00475E  EFC3  F023         	goto	l3484
  6698  004762                     u3060:
  6699  004762  1E08               	comf	(___aomod@dividend+7)^0,f,c
  6700  004764  1E07               	comf	(___aomod@dividend+6)^0,f,c
  6701  004766  1E06               	comf	(___aomod@dividend+5)^0,f,c
  6702  004768  1E05               	comf	(___aomod@dividend+4)^0,f,c
  6703  00476A  1E04               	comf	(___aomod@dividend+3)^0,f,c
  6704  00476C  1E03               	comf	(___aomod@dividend+2)^0,f,c
  6705  00476E  1E02               	comf	(___aomod@dividend+1)^0,f,c
  6706  004770  6C01               	negf	___aomod@dividend^0,c
  6707  004772  0E00               	movlw	0
  6708  004774  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  6709  004776  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  6710  004778  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  6711  00477A  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  6712  00477C  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  6713  00477E  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  6714  004780  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  6715  004782  0E01               	movlw	1
  6716  004784  6E12               	movwf	___aomod@sign^0,c
  6717  004786                     l3484:
  6718  004786  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
  6719  004788  EFCA  F023         	goto	u3070
  6720  00478C  EFC8  F023         	goto	u3071
  6721  004790                     u3071:
  6722  004790  EFDA  F023         	goto	l3488
  6723  004794                     u3070:
  6724  004794  1E10               	comf	(___aomod@divisor+7)^0,f,c
  6725  004796  1E0F               	comf	(___aomod@divisor+6)^0,f,c
  6726  004798  1E0E               	comf	(___aomod@divisor+5)^0,f,c
  6727  00479A  1E0D               	comf	(___aomod@divisor+4)^0,f,c
  6728  00479C  1E0C               	comf	(___aomod@divisor+3)^0,f,c
  6729  00479E  1E0B               	comf	(___aomod@divisor+2)^0,f,c
  6730  0047A0  1E0A               	comf	(___aomod@divisor+1)^0,f,c
  6731  0047A2  6C09               	negf	___aomod@divisor^0,c
  6732  0047A4  0E00               	movlw	0
  6733  0047A6  220A               	addwfc	(___aomod@divisor+1)^0,f,c
  6734  0047A8  220B               	addwfc	(___aomod@divisor+2)^0,f,c
  6735  0047AA  220C               	addwfc	(___aomod@divisor+3)^0,f,c
  6736  0047AC  220D               	addwfc	(___aomod@divisor+4)^0,f,c
  6737  0047AE  220E               	addwfc	(___aomod@divisor+5)^0,f,c
  6738  0047B0  220F               	addwfc	(___aomod@divisor+6)^0,f,c
  6739  0047B2  2210               	addwfc	(___aomod@divisor+7)^0,f,c
  6740  0047B4                     l3488:
  6741  0047B4  5009               	movf	___aomod@divisor^0,w,c
  6742  0047B6  100A               	iorwf	(___aomod@divisor+1)^0,w,c
  6743  0047B8  100B               	iorwf	(___aomod@divisor+2)^0,w,c
  6744  0047BA  100C               	iorwf	(___aomod@divisor+3)^0,w,c
  6745  0047BC  100D               	iorwf	(___aomod@divisor+4)^0,w,c
  6746  0047BE  100E               	iorwf	(___aomod@divisor+5)^0,w,c
  6747  0047C0  100F               	iorwf	(___aomod@divisor+6)^0,w,c
  6748  0047C2  1010               	iorwf	(___aomod@divisor+7)^0,w,c
  6749  0047C4  B4D8               	btfsc	status,2,c
  6750  0047C6  EFE7  F023         	goto	u3081
  6751  0047CA  EFE9  F023         	goto	u3080
  6752  0047CE                     u3081:
  6753  0047CE  EF31  F024         	goto	l3504
  6754  0047D2                     u3080:
  6755  0047D2  0E01               	movlw	1
  6756  0047D4  6E11               	movwf	___aomod@counter^0,c
  6757  0047D6  EFF7  F023         	goto	l3494
  6758  0047DA                     l3492:
  6759  0047DA  90D8               	bcf	status,0,c
  6760  0047DC  3609               	rlcf	___aomod@divisor^0,f,c
  6761  0047DE  360A               	rlcf	(___aomod@divisor+1)^0,f,c
  6762  0047E0  360B               	rlcf	(___aomod@divisor+2)^0,f,c
  6763  0047E2  360C               	rlcf	(___aomod@divisor+3)^0,f,c
  6764  0047E4  360D               	rlcf	(___aomod@divisor+4)^0,f,c
  6765  0047E6  360E               	rlcf	(___aomod@divisor+5)^0,f,c
  6766  0047E8  360F               	rlcf	(___aomod@divisor+6)^0,f,c
  6767  0047EA  3610               	rlcf	(___aomod@divisor+7)^0,f,c
  6768  0047EC  2A11               	incf	___aomod@counter^0,f,c
  6769  0047EE                     l3494:
  6770  0047EE  AE10               	btfss	(___aomod@divisor+7)^0,7,c
  6771  0047F0  EFFC  F023         	goto	u3091
  6772  0047F4  EFFE  F023         	goto	u3090
  6773  0047F8                     u3091:
  6774  0047F8  EFED  F023         	goto	l3492
  6775  0047FC                     u3090:
  6776  0047FC                     l3496:
  6777  0047FC  5009               	movf	___aomod@divisor^0,w,c
  6778  0047FE  5C01               	subwf	___aomod@dividend^0,w,c
  6779  004800  500A               	movf	(___aomod@divisor+1)^0,w,c
  6780  004802  5802               	subwfb	(___aomod@dividend+1)^0,w,c
  6781  004804  500B               	movf	(___aomod@divisor+2)^0,w,c
  6782  004806  5803               	subwfb	(___aomod@dividend+2)^0,w,c
  6783  004808  500C               	movf	(___aomod@divisor+3)^0,w,c
  6784  00480A  5804               	subwfb	(___aomod@dividend+3)^0,w,c
  6785  00480C  500D               	movf	(___aomod@divisor+4)^0,w,c
  6786  00480E  5805               	subwfb	(___aomod@dividend+4)^0,w,c
  6787  004810  500E               	movf	(___aomod@divisor+5)^0,w,c
  6788  004812  5806               	subwfb	(___aomod@dividend+5)^0,w,c
  6789  004814  500F               	movf	(___aomod@divisor+6)^0,w,c
  6790  004816  5807               	subwfb	(___aomod@dividend+6)^0,w,c
  6791  004818  5010               	movf	(___aomod@divisor+7)^0,w,c
  6792  00481A  5808               	subwfb	(___aomod@dividend+7)^0,w,c
  6793  00481C  A0D8               	btfss	status,0,c
  6794  00481E  EF13  F024         	goto	u3101
  6795  004822  EF15  F024         	goto	u3100
  6796  004826                     u3101:
  6797  004826  EF25  F024         	goto	l3500
  6798  00482A                     u3100:
  6799  00482A  5009               	movf	___aomod@divisor^0,w,c
  6800  00482C  5E01               	subwf	___aomod@dividend^0,f,c
  6801  00482E  500A               	movf	(___aomod@divisor+1)^0,w,c
  6802  004830  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
  6803  004832  500B               	movf	(___aomod@divisor+2)^0,w,c
  6804  004834  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
  6805  004836  500C               	movf	(___aomod@divisor+3)^0,w,c
  6806  004838  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
  6807  00483A  500D               	movf	(___aomod@divisor+4)^0,w,c
  6808  00483C  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
  6809  00483E  500E               	movf	(___aomod@divisor+5)^0,w,c
  6810  004840  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
  6811  004842  500F               	movf	(___aomod@divisor+6)^0,w,c
  6812  004844  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
  6813  004846  5010               	movf	(___aomod@divisor+7)^0,w,c
  6814  004848  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
  6815  00484A                     l3500:
  6816  00484A  90D8               	bcf	status,0,c
  6817  00484C  3210               	rrcf	(___aomod@divisor+7)^0,f,c
  6818  00484E  320F               	rrcf	(___aomod@divisor+6)^0,f,c
  6819  004850  320E               	rrcf	(___aomod@divisor+5)^0,f,c
  6820  004852  320D               	rrcf	(___aomod@divisor+4)^0,f,c
  6821  004854  320C               	rrcf	(___aomod@divisor+3)^0,f,c
  6822  004856  320B               	rrcf	(___aomod@divisor+2)^0,f,c
  6823  004858  320A               	rrcf	(___aomod@divisor+1)^0,f,c
  6824  00485A  3209               	rrcf	___aomod@divisor^0,f,c
  6825  00485C  2E11               	decfsz	___aomod@counter^0,f,c
  6826  00485E  EFFE  F023         	goto	l3496
  6827  004862                     l3504:
  6828  004862  5012               	movf	___aomod@sign^0,w,c
  6829  004864  B4D8               	btfsc	status,2,c
  6830  004866  EF37  F024         	goto	u3111
  6831  00486A  EF39  F024         	goto	u3110
  6832  00486E                     u3111:
  6833  00486E  EF49  F024         	goto	l3508
  6834  004872                     u3110:
  6835  004872  1E08               	comf	(___aomod@dividend+7)^0,f,c
  6836  004874  1E07               	comf	(___aomod@dividend+6)^0,f,c
  6837  004876  1E06               	comf	(___aomod@dividend+5)^0,f,c
  6838  004878  1E05               	comf	(___aomod@dividend+4)^0,f,c
  6839  00487A  1E04               	comf	(___aomod@dividend+3)^0,f,c
  6840  00487C  1E03               	comf	(___aomod@dividend+2)^0,f,c
  6841  00487E  1E02               	comf	(___aomod@dividend+1)^0,f,c
  6842  004880  6C01               	negf	___aomod@dividend^0,c
  6843  004882  0E00               	movlw	0
  6844  004884  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  6845  004886  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  6846  004888  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  6847  00488A  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  6848  00488C  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  6849  00488E  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  6850  004890  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  6851  004892                     l3508:
  6852  004892  C001  F001         	movff	___aomod@dividend,?___aomod
  6853  004896  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  6854  00489A  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  6855  00489E  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  6856  0048A2  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  6857  0048A6  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  6858  0048AA  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  6859  0048AE  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  6860  0048B2  0012               	return		;funcret
  6861  0048B4                     __end_of___aomod:
  6862                           	callstack 0
  6863                           
  6864 ;; *************** function ___aodiv *****************
  6865 ;; Defined at:
  6866 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\aodiv.c"
  6867 ;; Parameters:    Size  Location     Type
  6868 ;;  dividend        8    0[COMRAM] long long 
  6869 ;;  divisor         8    8[COMRAM] long long 
  6870 ;; Auto vars:     Size  Location     Type
  6871 ;;  quotient        8   18[COMRAM] long long 
  6872 ;;  sign            1   17[COMRAM] unsigned char 
  6873 ;;  counter         1   16[COMRAM] unsigned char 
  6874 ;; Return value:  Size  Location     Type
  6875 ;;                  8    0[COMRAM] long long 
  6876 ;; Registers used:
  6877 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6878 ;; Tracked objects:
  6879 ;;		On entry : 0/0
  6880 ;;		On exit  : 0/0
  6881 ;;		Unchanged: 0/0
  6882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6883 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6884 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6885 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6886 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6887 ;;Total ram usage:       26 bytes
  6888 ;; Hardware stack levels used: 1
  6889 ;; Hardware stack levels required when called: 1
  6890 ;; This function calls:
  6891 ;;		Nothing
  6892 ;; This function is called by:
  6893 ;;		_dtoa
  6894 ;; This function uses a non-reentrant model
  6895 ;;
  6896                           
  6897                           	psect	text24
  6898  0045C8                     __ptext24:
  6899                           	callstack 0
  6900  0045C8                     ___aodiv:
  6901                           	callstack 23
  6902  0045C8  0E00               	movlw	0
  6903  0045CA  6E12               	movwf	___aodiv@sign^0,c
  6904  0045CC  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
  6905  0045CE  EFED  F022         	goto	u2990
  6906  0045D2  EFEB  F022         	goto	u2991
  6907  0045D6                     u2991:
  6908  0045D6  EFFF  F022         	goto	l3440
  6909  0045DA                     u2990:
  6910  0045DA  1E10               	comf	(___aodiv@divisor+7)^0,f,c
  6911  0045DC  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
  6912  0045DE  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
  6913  0045E0  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
  6914  0045E2  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
  6915  0045E4  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
  6916  0045E6  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
  6917  0045E8  6C09               	negf	___aodiv@divisor^0,c
  6918  0045EA  0E00               	movlw	0
  6919  0045EC  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
  6920  0045EE  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
  6921  0045F0  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
  6922  0045F2  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
  6923  0045F4  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
  6924  0045F6  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
  6925  0045F8  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
  6926  0045FA  0E01               	movlw	1
  6927  0045FC  6E12               	movwf	___aodiv@sign^0,c
  6928  0045FE                     l3440:
  6929  0045FE  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
  6930  004600  EF06  F023         	goto	u3000
  6931  004604  EF04  F023         	goto	u3001
  6932  004608                     u3001:
  6933  004608  EF18  F023         	goto	l3446
  6934  00460C                     u3000:
  6935  00460C  1E08               	comf	(___aodiv@dividend+7)^0,f,c
  6936  00460E  1E07               	comf	(___aodiv@dividend+6)^0,f,c
  6937  004610  1E06               	comf	(___aodiv@dividend+5)^0,f,c
  6938  004612  1E05               	comf	(___aodiv@dividend+4)^0,f,c
  6939  004614  1E04               	comf	(___aodiv@dividend+3)^0,f,c
  6940  004616  1E03               	comf	(___aodiv@dividend+2)^0,f,c
  6941  004618  1E02               	comf	(___aodiv@dividend+1)^0,f,c
  6942  00461A  6C01               	negf	___aodiv@dividend^0,c
  6943  00461C  0E00               	movlw	0
  6944  00461E  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
  6945  004620  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
  6946  004622  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
  6947  004624  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
  6948  004626  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
  6949  004628  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
  6950  00462A  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
  6951  00462C  0E01               	movlw	1
  6952  00462E  1A12               	xorwf	___aodiv@sign^0,f,c
  6953  004630                     l3446:
  6954  004630  EE20  F013         	lfsr	2,___aodiv@quotient
  6955  004634  0E07               	movlw	7
  6956  004636                     u3011:
  6957  004636  6ADE               	clrf	postinc2,c
  6958  004638  06E8               	decf	wreg,f,c
  6959  00463A  E2FD               	bc	u3011
  6960  00463C  5009               	movf	___aodiv@divisor^0,w,c
  6961  00463E  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
  6962  004640  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
  6963  004642  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
  6964  004644  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
  6965  004646  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
  6966  004648  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
  6967  00464A  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
  6968  00464C  B4D8               	btfsc	status,2,c
  6969  00464E  EF2B  F023         	goto	u3021
  6970  004652  EF2D  F023         	goto	u3020
  6971  004656                     u3021:
  6972  004656  EF7F  F023         	goto	l3468
  6973  00465A                     u3020:
  6974  00465A  0E01               	movlw	1
  6975  00465C  6E11               	movwf	___aodiv@counter^0,c
  6976  00465E  EF3B  F023         	goto	l3454
  6977  004662                     l3452:
  6978  004662  90D8               	bcf	status,0,c
  6979  004664  3609               	rlcf	___aodiv@divisor^0,f,c
  6980  004666  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
  6981  004668  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
  6982  00466A  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
  6983  00466C  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
  6984  00466E  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
  6985  004670  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
  6986  004672  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
  6987  004674  2A11               	incf	___aodiv@counter^0,f,c
  6988  004676                     l3454:
  6989  004676  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
  6990  004678  EF40  F023         	goto	u3031
  6991  00467C  EF42  F023         	goto	u3030
  6992  004680                     u3031:
  6993  004680  EF31  F023         	goto	l3452
  6994  004684                     u3030:
  6995  004684                     l3456:
  6996  004684  90D8               	bcf	status,0,c
  6997  004686  3613               	rlcf	___aodiv@quotient^0,f,c
  6998  004688  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
  6999  00468A  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
  7000  00468C  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
  7001  00468E  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
  7002  004690  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
  7003  004692  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
  7004  004694  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
  7005  004696  5009               	movf	___aodiv@divisor^0,w,c
  7006  004698  5C01               	subwf	___aodiv@dividend^0,w,c
  7007  00469A  500A               	movf	(___aodiv@divisor+1)^0,w,c
  7008  00469C  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
  7009  00469E  500B               	movf	(___aodiv@divisor+2)^0,w,c
  7010  0046A0  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
  7011  0046A2  500C               	movf	(___aodiv@divisor+3)^0,w,c
  7012  0046A4  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
  7013  0046A6  500D               	movf	(___aodiv@divisor+4)^0,w,c
  7014  0046A8  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
  7015  0046AA  500E               	movf	(___aodiv@divisor+5)^0,w,c
  7016  0046AC  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
  7017  0046AE  500F               	movf	(___aodiv@divisor+6)^0,w,c
  7018  0046B0  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
  7019  0046B2  5010               	movf	(___aodiv@divisor+7)^0,w,c
  7020  0046B4  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
  7021  0046B6  A0D8               	btfss	status,0,c
  7022  0046B8  EF60  F023         	goto	u3041
  7023  0046BC  EF62  F023         	goto	u3040
  7024  0046C0                     u3041:
  7025  0046C0  EF73  F023         	goto	l3464
  7026  0046C4                     u3040:
  7027  0046C4  5009               	movf	___aodiv@divisor^0,w,c
  7028  0046C6  5E01               	subwf	___aodiv@dividend^0,f,c
  7029  0046C8  500A               	movf	(___aodiv@divisor+1)^0,w,c
  7030  0046CA  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
  7031  0046CC  500B               	movf	(___aodiv@divisor+2)^0,w,c
  7032  0046CE  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
  7033  0046D0  500C               	movf	(___aodiv@divisor+3)^0,w,c
  7034  0046D2  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
  7035  0046D4  500D               	movf	(___aodiv@divisor+4)^0,w,c
  7036  0046D6  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
  7037  0046D8  500E               	movf	(___aodiv@divisor+5)^0,w,c
  7038  0046DA  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
  7039  0046DC  500F               	movf	(___aodiv@divisor+6)^0,w,c
  7040  0046DE  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
  7041  0046E0  5010               	movf	(___aodiv@divisor+7)^0,w,c
  7042  0046E2  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
  7043  0046E4  8013               	bsf	___aodiv@quotient^0,0,c
  7044  0046E6                     l3464:
  7045  0046E6  90D8               	bcf	status,0,c
  7046  0046E8  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
  7047  0046EA  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
  7048  0046EC  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
  7049  0046EE  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
  7050  0046F0  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
  7051  0046F2  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
  7052  0046F4  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
  7053  0046F6  3209               	rrcf	___aodiv@divisor^0,f,c
  7054  0046F8  2E11               	decfsz	___aodiv@counter^0,f,c
  7055  0046FA  EF42  F023         	goto	l3456
  7056  0046FE                     l3468:
  7057  0046FE  5012               	movf	___aodiv@sign^0,w,c
  7058  004700  B4D8               	btfsc	status,2,c
  7059  004702  EF85  F023         	goto	u3051
  7060  004706  EF87  F023         	goto	u3050
  7061  00470A                     u3051:
  7062  00470A  EF97  F023         	goto	l3472
  7063  00470E                     u3050:
  7064  00470E  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
  7065  004710  1E19               	comf	(___aodiv@quotient+6)^0,f,c
  7066  004712  1E18               	comf	(___aodiv@quotient+5)^0,f,c
  7067  004714  1E17               	comf	(___aodiv@quotient+4)^0,f,c
  7068  004716  1E16               	comf	(___aodiv@quotient+3)^0,f,c
  7069  004718  1E15               	comf	(___aodiv@quotient+2)^0,f,c
  7070  00471A  1E14               	comf	(___aodiv@quotient+1)^0,f,c
  7071  00471C  6C13               	negf	___aodiv@quotient^0,c
  7072  00471E  0E00               	movlw	0
  7073  004720  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
  7074  004722  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
  7075  004724  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
  7076  004726  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
  7077  004728  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
  7078  00472A  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
  7079  00472C  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
  7080  00472E                     l3472:
  7081  00472E  C013  F001         	movff	___aodiv@quotient,?___aodiv
  7082  004732  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  7083  004736  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  7084  00473A  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  7085  00473E  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  7086  004742  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  7087  004746  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  7088  00474A  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  7089  00474E  0012               	return		;funcret
  7090  004750                     __end_of___aodiv:
  7091                           	callstack 0
  7092                           
  7093 ;; *************** function _sendStringSerial4 *****************
  7094 ;; Defined at:
  7095 ;;		line 35 in file "serial.c"
  7096 ;; Parameters:    Size  Location     Type
  7097 ;;  string          2    1[COMRAM] PTR unsigned char 
  7098 ;;		 -> color_predict@buf(100), color_display@buf(100), detect_color@buf(100), 
  7099 ;; Auto vars:     Size  Location     Type
  7100 ;;		None
  7101 ;; Return value:  Size  Location     Type
  7102 ;;                  1    wreg      void 
  7103 ;; Registers used:
  7104 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7105 ;; Tracked objects:
  7106 ;;		On entry : 0/0
  7107 ;;		On exit  : 0/0
  7108 ;;		Unchanged: 0/0
  7109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7110 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7111 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7112 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7113 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7114 ;;Total ram usage:        2 bytes
  7115 ;; Hardware stack levels used: 1
  7116 ;; Hardware stack levels required when called: 2
  7117 ;; This function calls:
  7118 ;;		_sendCharSerial4
  7119 ;; This function is called by:
  7120 ;;		_detect_color
  7121 ;;		_color_display
  7122 ;;		_color_predict
  7123 ;; This function uses a non-reentrant model
  7124 ;;
  7125                           
  7126                           	psect	text25
  7127  005D88                     __ptext25:
  7128                           	callstack 0
  7129  005D88                     _sendStringSerial4:
  7130                           	callstack 26
  7131  005D88                     
  7132                           ;serial.c: 37:     while(*string != 0){
  7133  005D88  EFCF  F02E         	goto	l4184
  7134  005D8C                     l4180:
  7135                           
  7136                           ;serial.c: 38:   sendCharSerial4(*string++);}
  7137  005D8C  C002  FFD9         	movff	sendStringSerial4@string,fsr2l
  7138  005D90  C003  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  7139  005D94  50DF               	movf	indf2,w,c
  7140  005D96  ECAD  F02F         	call	_sendCharSerial4
  7141  005D9A  4A02               	infsnz	sendStringSerial4@string^0,f,c
  7142  005D9C  2A03               	incf	(sendStringSerial4@string+1)^0,f,c
  7143  005D9E                     l4184:
  7144                           
  7145                           ;serial.c: 37:     while(*string != 0){
  7146  005D9E  C002  FFD9         	movff	sendStringSerial4@string,fsr2l
  7147  005DA2  C003  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  7148  005DA6  50DF               	movf	indf2,w,c
  7149  005DA8  A4D8               	btfss	status,2,c
  7150  005DAA  EFD9  F02E         	goto	u4201
  7151  005DAE  EFDB  F02E         	goto	u4200
  7152  005DB2                     u4201:
  7153  005DB2  EFC6  F02E         	goto	l4180
  7154  005DB6                     u4200:
  7155  005DB6  0012               	return		;funcret
  7156  005DB8                     __end_of_sendStringSerial4:
  7157                           	callstack 0
  7158                           
  7159 ;; *************** function _sendCharSerial4 *****************
  7160 ;; Defined at:
  7161 ;;		line 29 in file "serial.c"
  7162 ;; Parameters:    Size  Location     Type
  7163 ;;  charToSend      1    wreg     unsigned char 
  7164 ;; Auto vars:     Size  Location     Type
  7165 ;;  charToSend      1    0[COMRAM] unsigned char 
  7166 ;; Return value:  Size  Location     Type
  7167 ;;                  1    wreg      void 
  7168 ;; Registers used:
  7169 ;;		wreg
  7170 ;; Tracked objects:
  7171 ;;		On entry : 0/0
  7172 ;;		On exit  : 0/0
  7173 ;;		Unchanged: 0/0
  7174 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7175 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7176 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7177 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7178 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7179 ;;Total ram usage:        1 bytes
  7180 ;; Hardware stack levels used: 1
  7181 ;; Hardware stack levels required when called: 1
  7182 ;; This function calls:
  7183 ;;		Nothing
  7184 ;; This function is called by:
  7185 ;;		_sendStringSerial4
  7186 ;; This function uses a non-reentrant model
  7187 ;;
  7188                           
  7189                           	psect	text26
  7190  005F5A                     __ptext26:
  7191                           	callstack 0
  7192  005F5A                     _sendCharSerial4:
  7193                           	callstack 26
  7194                           
  7195                           ;incstack = 0
  7196                           ;sendCharSerial4@charToSend stored from wreg
  7197  005F5A  6E01               	movwf	sendCharSerial4@charToSend^0,c
  7198  005F5C                     l339:
  7199  005F5C  010E               	movlb	14	; () banked
  7200  005F5E  A537               	btfss	55,2,b	;volatile
  7201  005F60  EFB4  F02F         	goto	u3931
  7202  005F64  EFB6  F02F         	goto	u3930
  7203  005F68                     u3931:
  7204  005F68  EFAE  F02F         	goto	l339
  7205  005F6C                     u3930:
  7206  005F6C                     
  7207                           ; BSR set to: 14
  7208                           ;serial.c: 31:     TX4REG = charToSend;
  7209  005F6C  C001  FEE4         	movff	sendCharSerial4@charToSend,3812	;volatile
  7210  005F70                     
  7211                           ; BSR set to: 14
  7212  005F70  0012               	return		;funcret
  7213  005F72                     __end_of_sendCharSerial4:
  7214                           	callstack 0
  7215                           
  7216 ;; *************** function _short_burst *****************
  7217 ;; Defined at:
  7218 ;;		line 7 in file "movement.c"
  7219 ;; Parameters:    Size  Location     Type
  7220 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  7221 ;;		 -> main@motorL(9), 
  7222 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  7223 ;;		 -> main@motorR(9), 
  7224 ;; Auto vars:     Size  Location     Type
  7225 ;;		None
  7226 ;; Return value:  Size  Location     Type
  7227 ;;                  1    wreg      void 
  7228 ;; Registers used:
  7229 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7230 ;; Tracked objects:
  7231 ;;		On entry : 0/0
  7232 ;;		On exit  : 0/0
  7233 ;;		Unchanged: 0/0
  7234 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7235 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7236 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7237 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7238 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7239 ;;Total ram usage:        6 bytes
  7240 ;; Hardware stack levels used: 1
  7241 ;; Hardware stack levels required when called: 4
  7242 ;; This function calls:
  7243 ;;		_fullSpeedAhead
  7244 ;;		_stop
  7245 ;; This function is called by:
  7246 ;;		_main
  7247 ;; This function uses a non-reentrant model
  7248 ;;
  7249                           
  7250                           	psect	text27
  7251  005B02                     __ptext27:
  7252                           	callstack 0
  7253  005B02                     _short_burst:
  7254                           	callstack 26
  7255  005B02                     
  7256                           ;movement.c: 7: void short_burst(struct DC_motor *mL, struct DC_motor *mR);movement.c: 8
      +                          : {;movement.c: 9:     fullSpeedAhead(mL,mR);
  7257  005B02  C020  F01A         	movff	short_burst@mL,fullSpeedAhead@mL
  7258  005B06  C021  F01B         	movff	short_burst@mL+1,fullSpeedAhead@mL+1
  7259  005B0A  C022  F01C         	movff	short_burst@mR,fullSpeedAhead@mR
  7260  005B0E  C023  F01D         	movff	short_burst@mR+1,fullSpeedAhead@mR+1
  7261  005B12  EC73  F02A         	call	_fullSpeedAhead	;wreg free
  7262  005B16                     
  7263                           ;movement.c: 10:     _delay((unsigned long)((400)*(64000000/4000.0)));
  7264  005B16  0E21               	movlw	33
  7265  005B18  6E25               	movwf	(??_short_burst+1)^0,c
  7266  005B1A  0E78               	movlw	120
  7267  005B1C  6E24               	movwf	??_short_burst^0,c
  7268  005B1E  0E98               	movlw	152
  7269  005B20                     u6027:
  7270  005B20  2EE8               	decfsz	wreg,f,c
  7271  005B22  D7FE               	bra	u6027
  7272  005B24  2E24               	decfsz	??_short_burst^0,f,c
  7273  005B26  D7FC               	bra	u6027
  7274  005B28  2E25               	decfsz	(??_short_burst+1)^0,f,c
  7275  005B2A  D7FA               	bra	u6027
  7276  005B2C  D000               	nop2	
  7277  005B2E                     
  7278                           ;movement.c: 11:     stop(mL,mR);
  7279  005B2E  C020  F01A         	movff	short_burst@mL,stop@mL
  7280  005B32  C021  F01B         	movff	short_burst@mL+1,stop@mL+1
  7281  005B36  C022  F01C         	movff	short_burst@mR,stop@mR
  7282  005B3A  C023  F01D         	movff	short_burst@mR+1,stop@mR+1
  7283  005B3E  EC37  F02B         	call	_stop	;wreg free
  7284  005B42  0012               	return		;funcret
  7285  005B44                     __end_of_short_burst:
  7286                           	callstack 0
  7287                           
  7288 ;; *************** function _setup *****************
  7289 ;; Defined at:
  7290 ;;		line 6 in file "test_and_calibration.c"
  7291 ;; Parameters:    Size  Location     Type
  7292 ;;  white           2   24[BANK0 ] PTR struct white_card
  7293 ;;		 -> main@white(28), 
  7294 ;;  amb             2   26[BANK0 ] PTR struct color_rgb
  7295 ;;		 -> main@amb(8), 
  7296 ;;  mL              2   28[BANK0 ] PTR struct DC_motor
  7297 ;;		 -> main@motorL(9), 
  7298 ;;  mR              2   30[BANK0 ] PTR struct DC_motor
  7299 ;;		 -> main@motorR(9), 
  7300 ;; Auto vars:     Size  Location     Type
  7301 ;;  amb_light       2   34[BANK0 ] unsigned int 
  7302 ;; Return value:  Size  Location     Type
  7303 ;;                  2   24[BANK0 ] unsigned int 
  7304 ;; Registers used:
  7305 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7306 ;; Tracked objects:
  7307 ;;		On entry : 0/0
  7308 ;;		On exit  : 0/0
  7309 ;;		Unchanged: 0/0
  7310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7311 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7312 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7313 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7314 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7315 ;;Total ram usage:       12 bytes
  7316 ;; Hardware stack levels used: 1
  7317 ;; Hardware stack levels required when called: 7
  7318 ;; This function calls:
  7319 ;;		_LED_OFF
  7320 ;;		_amb_light_measure
  7321 ;;		_calibrate_white
  7322 ;;		_calibration_motor
  7323 ;; This function is called by:
  7324 ;;		_main
  7325 ;; This function uses a non-reentrant model
  7326 ;;
  7327                           
  7328                           	psect	text28
  7329  0048B4                     __ptext28:
  7330                           	callstack 0
  7331  0048B4                     _setup:
  7332                           	callstack 23
  7333  0048B4                     
  7334                           ;test_and_calibration.c: 6: unsigned int setup(struct white_card *white,struct color_rgb
      +                          *amb,struct DC_motor *mL, struct DC_motor *mR);test_and_calibration.c: 7: {;test_and_cal
      +                          ibration.c: 8:     unsigned int amb_light = 0;
  7335  0048B4  0E00               	movlw	0
  7336  0048B6  0100               	movlb	0	; () banked
  7337  0048B8  6F83               	movwf	(setup@amb_light+1)& (0+255),b
  7338  0048BA  0E00               	movlw	0
  7339  0048BC  6F82               	movwf	setup@amb_light& (0+255),b
  7340  0048BE                     
  7341                           ; BSR set to: 0
  7342                           ;test_and_calibration.c: 9:     LED_OFF();
  7343  0048BE  EC3F  F02F         	call	_LED_OFF	;wreg free
  7344  0048C2                     
  7345                           ;test_and_calibration.c: 10:     LATDbits.LATD7 = 1;
  7346  0048C2  8E7C               	bsf	124,7,c	;volatile
  7347  0048C4                     
  7348                           ;test_and_calibration.c: 11:     LATHbits.LATH3 = 1;
  7349  0048C4  8680               	bsf	128,3,c	;volatile
  7350  0048C6                     l559:
  7351  0048C6  B48E               	btfsc	142,2,c	;volatile
  7352  0048C8  EF68  F024         	goto	u5511
  7353  0048CC  EF6A  F024         	goto	u5510
  7354  0048D0                     u5511:
  7355  0048D0  EF63  F024         	goto	l559
  7356  0048D4                     u5510:
  7357  0048D4                     
  7358                           ;test_and_calibration.c: 14:     if (!PORTFbits.RF2){calibrate_white(white); LATDbits.LA
      +                          TD7 = 0; _delay((unsigned long)((500)*(64000000/4000.0)));}
  7359  0048D4  B48E               	btfsc	142,2,c	;volatile
  7360  0048D6  EF6F  F024         	goto	u5521
  7361  0048DA  EF71  F024         	goto	u5520
  7362  0048DE                     u5521:
  7363  0048DE  EF84  F024         	goto	l563
  7364  0048E2                     u5520:
  7365  0048E2  C078  F00C         	movff	setup@white,calibrate_white@w
  7366  0048E6  C079  F00D         	movff	setup@white+1,calibrate_white@w+1
  7367  0048EA  EC90  F01C         	call	_calibrate_white	;wreg free
  7368  0048EE  9E7C               	bcf	124,7,c	;volatile
  7369  0048F0  0E29               	movlw	41
  7370  0048F2  0100               	movlb	0	; () banked
  7371  0048F4  6F81               	movwf	(??_setup+1)& (0+255),b
  7372  0048F6  0E96               	movlw	150
  7373  0048F8  6F80               	movwf	??_setup& (0+255),b
  7374  0048FA  0E7F               	movlw	127
  7375  0048FC                     u6037:
  7376  0048FC  2EE8               	decfsz	wreg,f,c
  7377  0048FE  D7FE               	bra	u6037
  7378  004900  2F80               	decfsz	??_setup& (0+255),f,b
  7379  004902  D7FC               	bra	u6037
  7380  004904  2F81               	decfsz	(??_setup+1)& (0+255),f,b
  7381  004906  D7FA               	bra	u6037
  7382  004908                     l563:
  7383  004908  B68E               	btfsc	142,3,c	;volatile
  7384  00490A  EF89  F024         	goto	u5531
  7385  00490E  EF8B  F024         	goto	u5530
  7386  004912                     u5531:
  7387  004912  EF84  F024         	goto	l563
  7388  004916                     u5530:
  7389  004916                     
  7390                           ;test_and_calibration.c: 17:     if (!PORTFbits.RF3){amb_light = amb_light_measure(amb);
      +                           LATHbits.LATH3 = 0; _delay((unsigned long)((500)*(64000000/4000.0)));}
  7391  004916  B68E               	btfsc	142,3,c	;volatile
  7392  004918  EF90  F024         	goto	u5541
  7393  00491C  EF92  F024         	goto	u5540
  7394  004920                     u5541:
  7395  004920  EFCC  F024         	goto	l5152
  7396  004924                     u5540:
  7397  004924  C07A  F06A         	movff	setup@amb,amb_light_measure@amb
  7398  004928  C07B  F06B         	movff	setup@amb+1,amb_light_measure@amb+1
  7399  00492C  EC47  F026         	call	_amb_light_measure	;wreg free
  7400  004930  C06A  F082         	movff	?_amb_light_measure,setup@amb_light
  7401  004934  C06B  F083         	movff	?_amb_light_measure+1,setup@amb_light+1
  7402  004938  9680               	bcf	128,3,c	;volatile
  7403  00493A  0E29               	movlw	41
  7404  00493C  0100               	movlb	0	; () banked
  7405  00493E  6F81               	movwf	(??_setup+1)& (0+255),b
  7406  004940  0E96               	movlw	150
  7407  004942  6F80               	movwf	??_setup& (0+255),b
  7408  004944  0E7F               	movlw	127
  7409  004946                     u6047:
  7410  004946  2EE8               	decfsz	wreg,f,c
  7411  004948  D7FE               	bra	u6047
  7412  00494A  2F80               	decfsz	??_setup& (0+255),f,b
  7413  00494C  D7FC               	bra	u6047
  7414  00494E  2F81               	decfsz	(??_setup+1)& (0+255),f,b
  7415  004950  D7FA               	bra	u6047
  7416  004952  EFCC  F024         	goto	l5152
  7417  004956                     l569:
  7418  004956  8E7C               	bsf	124,7,c	;volatile
  7419  004958  A680               	btfss	128,3,c	;volatile
  7420  00495A  EFB1  F024         	goto	u5551
  7421  00495E  EFB6  F024         	goto	u5550
  7422  004962                     u5551:
  7423  004962  0100               	movlb	0	; () banked
  7424  004964  6B80               	clrf	??_setup& (0+255),b
  7425  004966  2B80               	incf	??_setup& (0+255),f,b
  7426  004968  EFB8  F024         	goto	u5568
  7427  00496C                     u5550:
  7428  00496C  0100               	movlb	0	; () banked
  7429  00496E  6B80               	clrf	??_setup& (0+255),b
  7430  004970                     u5568:
  7431  004970  4780               	rlncf	??_setup& (0+255),f,b
  7432  004972  4780               	rlncf	??_setup& (0+255),f,b
  7433  004974  4780               	rlncf	??_setup& (0+255),f,b
  7434  004976  5080               	movf	128,w,c	;volatile
  7435  004978  1980               	xorwf	??_setup& (0+255),w,b
  7436  00497A  0BF7               	andlw	-9
  7437  00497C  1980               	xorwf	??_setup& (0+255),w,b
  7438  00497E  6E80               	movwf	128,c	;volatile
  7439  004980                     
  7440                           ; BSR set to: 0
  7441  004980  0E11               	movlw	17
  7442  004982  0100               	movlb	0	; () banked
  7443  004984  6F81               	movwf	(??_setup+1)& (0+255),b
  7444  004986  0E3C               	movlw	60
  7445  004988  6F80               	movwf	??_setup& (0+255),b
  7446  00498A  0ECB               	movlw	203
  7447  00498C                     u6057:
  7448  00498C  2EE8               	decfsz	wreg,f,c
  7449  00498E  D7FE               	bra	u6057
  7450  004990  2F80               	decfsz	??_setup& (0+255),f,b
  7451  004992  D7FC               	bra	u6057
  7452  004994  2F81               	decfsz	(??_setup+1)& (0+255),f,b
  7453  004996  D7FA               	bra	u6057
  7454  004998                     l5152:
  7455  004998  A68E               	btfss	142,3,c	;volatile
  7456  00499A  EFD1  F024         	goto	u5571
  7457  00499E  EFD3  F024         	goto	u5570
  7458  0049A2                     u5571:
  7459  0049A2  EFDA  F024         	goto	l572
  7460  0049A6                     u5570:
  7461  0049A6  B48E               	btfsc	142,2,c	;volatile
  7462  0049A8  EFD8  F024         	goto	u5581
  7463  0049AC  EFDA  F024         	goto	u5580
  7464  0049B0                     u5581:
  7465  0049B0  EFAB  F024         	goto	l569
  7466  0049B4                     u5580:
  7467  0049B4                     l572:
  7468                           
  7469                           ;test_and_calibration.c: 22:         if (!PORTFbits.RF3){calibration_motor(mL,mR); LATDb
      +                          its.LATD7 = 0;}
  7470  0049B4  B68E               	btfsc	142,3,c	;volatile
  7471  0049B6  EFDF  F024         	goto	u5591
  7472  0049BA  EFE1  F024         	goto	u5590
  7473  0049BE                     u5591:
  7474  0049BE  EFEC  F024         	goto	l5160
  7475  0049C2                     u5590:
  7476  0049C2  C07C  F033         	movff	setup@mL,calibration_motor@mL
  7477  0049C6  C07D  F034         	movff	setup@mL+1,calibration_motor@mL+1
  7478  0049CA  C07E  F035         	movff	setup@mR,calibration_motor@mR
  7479  0049CE  C07F  F036         	movff	setup@mR+1,calibration_motor@mR+1
  7480  0049D2  EC68  F028         	call	_calibration_motor	;wreg free
  7481  0049D6  9E7C               	bcf	124,7,c	;volatile
  7482  0049D8                     l5160:
  7483                           
  7484                           ;test_and_calibration.c: 23:         if (!PORTFbits.RF2){LATDbits.LATD7 = 0; LATHbits.LA
      +                          TH3 = 0; _delay((unsigned long)((500)*(64000000/4000.0))); return amb_light;}
  7485  0049D8  B48E               	btfsc	142,2,c	;volatile
  7486  0049DA  EFF1  F024         	goto	u5601
  7487  0049DE  EFF3  F024         	goto	u5600
  7488  0049E2                     u5601:
  7489  0049E2  EFCC  F024         	goto	l5152
  7490  0049E6                     u5600:
  7491  0049E6  9E7C               	bcf	124,7,c	;volatile
  7492  0049E8  9680               	bcf	128,3,c	;volatile
  7493  0049EA  0E29               	movlw	41
  7494  0049EC  0100               	movlb	0	; () banked
  7495  0049EE  6F81               	movwf	(??_setup+1)& (0+255),b
  7496  0049F0  0E96               	movlw	150
  7497  0049F2  6F80               	movwf	??_setup& (0+255),b
  7498  0049F4  0E7F               	movlw	127
  7499  0049F6                     u6067:
  7500  0049F6  2EE8               	decfsz	wreg,f,c
  7501  0049F8  D7FE               	bra	u6067
  7502  0049FA  2F80               	decfsz	??_setup& (0+255),f,b
  7503  0049FC  D7FC               	bra	u6067
  7504  0049FE  2F81               	decfsz	(??_setup+1)& (0+255),f,b
  7505  004A00  D7FA               	bra	u6067
  7506  004A02  C082  F078         	movff	setup@amb_light,?_setup
  7507  004A06  C083  F079         	movff	setup@amb_light+1,?_setup+1
  7508  004A0A  0012               	return		;funcret
  7509  004A0C                     __end_of_setup:
  7510                           	callstack 0
  7511                           
  7512 ;; *************** function _calibration_motor *****************
  7513 ;; Defined at:
  7514 ;;		line 95 in file "test_and_calibration.c"
  7515 ;; Parameters:    Size  Location     Type
  7516 ;;  mL              2   50[COMRAM] PTR struct DC_motor
  7517 ;;		 -> main@motorL(9), 
  7518 ;;  mR              2   52[COMRAM] PTR struct DC_motor
  7519 ;;		 -> main@motorR(9), 
  7520 ;; Auto vars:     Size  Location     Type
  7521 ;;		None
  7522 ;; Return value:  Size  Location     Type
  7523 ;;                  1    wreg      void 
  7524 ;; Registers used:
  7525 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7526 ;; Tracked objects:
  7527 ;;		On entry : 0/0
  7528 ;;		On exit  : 0/0
  7529 ;;		Unchanged: 0/0
  7530 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7531 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7532 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7533 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7534 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7535 ;;Total ram usage:        6 bytes
  7536 ;; Hardware stack levels used: 1
  7537 ;; Hardware stack levels required when called: 6
  7538 ;; This function calls:
  7539 ;;		_test_action
  7540 ;; This function is called by:
  7541 ;;		_setup
  7542 ;; This function uses a non-reentrant model
  7543 ;;
  7544                           
  7545                           	psect	text29
  7546  0050D0                     __ptext29:
  7547                           	callstack 0
  7548  0050D0                     _calibration_motor:
  7549                           	callstack 23
  7550  0050D0                     l602:
  7551                           
  7552                           ;test_and_calibration.c: 98:         LATDbits.LATD7 = 1;
  7553  0050D0  8E7C               	bsf	124,7,c	;volatile
  7554                           
  7555                           ;test_and_calibration.c: 99:         LATHbits.LATH3 = 1;
  7556  0050D2  8680               	bsf	128,3,c	;volatile
  7557                           
  7558                           ;test_and_calibration.c: 100:         if (!PORTFbits.RF2) {
  7559  0050D4  B48E               	btfsc	142,2,c	;volatile
  7560  0050D6  EF6F  F028         	goto	u5441
  7561  0050DA  EF71  F028         	goto	u5440
  7562  0050DE                     u5441:
  7563  0050DE  EF9D  F028         	goto	l603
  7564  0050E2                     u5440:
  7565  0050E2                     
  7566                           ;test_and_calibration.c: 101:             _delay((unsigned long)((300)*(64000000/4000.0)
      +                          ));
  7567  0050E2  0E19               	movlw	25
  7568  0050E4  6E38               	movwf	(??_calibration_motor+1)^0,c
  7569  0050E6  0E5A               	movlw	90
  7570  0050E8  6E37               	movwf	??_calibration_motor^0,c
  7571  0050EA  0EB2               	movlw	178
  7572  0050EC                     u6077:
  7573  0050EC  2EE8               	decfsz	wreg,f,c
  7574  0050EE  D7FE               	bra	u6077
  7575  0050F0  2E37               	decfsz	??_calibration_motor^0,f,c
  7576  0050F2  D7FC               	bra	u6077
  7577  0050F4  2E38               	decfsz	(??_calibration_motor+1)^0,f,c
  7578  0050F6  D7FA               	bra	u6077
  7579  0050F8                     
  7580                           ;test_and_calibration.c: 102:             if (!PORTFbits.RF2){LATDbits.LATD7 = 0; _delay
      +                          ((unsigned long)((300)*(64000000/4000.0))); SENSITIVITY += 5; }
  7581  0050F8  B48E               	btfsc	142,2,c	;volatile
  7582  0050FA  EF81  F028         	goto	u5451
  7583  0050FE  EF83  F028         	goto	u5450
  7584  005102                     u5451:
  7585  005102  EF94  F028         	goto	l5036
  7586  005106                     u5450:
  7587  005106  9E7C               	bcf	124,7,c	;volatile
  7588  005108  0E19               	movlw	25
  7589  00510A  6E38               	movwf	(??_calibration_motor+1)^0,c
  7590  00510C  0E5A               	movlw	90
  7591  00510E  6E37               	movwf	??_calibration_motor^0,c
  7592  005110  0EB2               	movlw	178
  7593  005112                     u6087:
  7594  005112  2EE8               	decfsz	wreg,f,c
  7595  005114  D7FE               	bra	u6087
  7596  005116  2E37               	decfsz	??_calibration_motor^0,f,c
  7597  005118  D7FC               	bra	u6087
  7598  00511A  2E38               	decfsz	(??_calibration_motor+1)^0,f,c
  7599  00511C  D7FA               	bra	u6087
  7600  00511E  0E05               	movlw	5
  7601  005120  0101               	movlb	1	; () banked
  7602  005122  27FE               	addwf	_SENSITIVITY& (0+255),f,b
  7603  005124  0E00               	movlw	0
  7604  005126  23FF               	addwfc	(_SENSITIVITY+1)& (0+255),f,b
  7605  005128                     l5036:
  7606                           
  7607                           ;test_and_calibration.c: 103:             if (!PORTFbits.RF3){break;}
  7608  005128  B68E               	btfsc	142,3,c	;volatile
  7609  00512A  EF99  F028         	goto	u5461
  7610  00512E  EF9B  F028         	goto	u5460
  7611  005132                     u5461:
  7612  005132  EF9D  F028         	goto	l603
  7613  005136                     u5460:
  7614  005136  EFD2  F028         	goto	l606
  7615  00513A                     l603:
  7616                           
  7617                           ;test_and_calibration.c: 105:         if (!PORTFbits.RF3) {
  7618  00513A  B68E               	btfsc	142,3,c	;volatile
  7619  00513C  EFA2  F028         	goto	u5471
  7620  005140  EFA4  F028         	goto	u5470
  7621  005144                     u5471:
  7622  005144  EF68  F028         	goto	l602
  7623  005148                     u5470:
  7624  005148                     
  7625                           ;test_and_calibration.c: 106:             _delay((unsigned long)((300)*(64000000/4000.0)
      +                          ));
  7626  005148  0E19               	movlw	25
  7627  00514A  6E38               	movwf	(??_calibration_motor+1)^0,c
  7628  00514C  0E5A               	movlw	90
  7629  00514E  6E37               	movwf	??_calibration_motor^0,c
  7630  005150  0EB2               	movlw	178
  7631  005152                     u6097:
  7632  005152  2EE8               	decfsz	wreg,f,c
  7633  005154  D7FE               	bra	u6097
  7634  005156  2E37               	decfsz	??_calibration_motor^0,f,c
  7635  005158  D7FC               	bra	u6097
  7636  00515A  2E38               	decfsz	(??_calibration_motor+1)^0,f,c
  7637  00515C  D7FA               	bra	u6097
  7638  00515E                     
  7639                           ;test_and_calibration.c: 107:             if (!PORTFbits.RF2){break;}
  7640  00515E  B48E               	btfsc	142,2,c	;volatile
  7641  005160  EFB4  F028         	goto	u5481
  7642  005164  EFB6  F028         	goto	u5480
  7643  005168                     u5481:
  7644  005168  EFB8  F028         	goto	l608
  7645  00516C                     u5480:
  7646  00516C  EFD2  F028         	goto	l606
  7647  005170                     l608:
  7648                           
  7649                           ;test_and_calibration.c: 108:             if (!PORTFbits.RF3){LATHbits.LATH3 = 0; _delay
      +                          ((unsigned long)((300)*(64000000/4000.0))); SENSITIVITY -= 5; }
  7650  005170  B68E               	btfsc	142,3,c	;volatile
  7651  005172  EFBD  F028         	goto	u5491
  7652  005176  EFBF  F028         	goto	u5490
  7653  00517A                     u5491:
  7654  00517A  EF68  F028         	goto	l602
  7655  00517E                     u5490:
  7656  00517E  9680               	bcf	128,3,c	;volatile
  7657  005180  0E19               	movlw	25
  7658  005182  6E38               	movwf	(??_calibration_motor+1)^0,c
  7659  005184  0E5A               	movlw	90
  7660  005186  6E37               	movwf	??_calibration_motor^0,c
  7661  005188  0EB2               	movlw	178
  7662  00518A                     u6107:
  7663  00518A  2EE8               	decfsz	wreg,f,c
  7664  00518C  D7FE               	bra	u6107
  7665  00518E  2E37               	decfsz	??_calibration_motor^0,f,c
  7666  005190  D7FC               	bra	u6107
  7667  005192  2E38               	decfsz	(??_calibration_motor+1)^0,f,c
  7668  005194  D7FA               	bra	u6107
  7669  005196  0E05               	movlw	5
  7670  005198  0101               	movlb	1	; () banked
  7671  00519A  5FFE               	subwf	_SENSITIVITY& (0+255),f,b
  7672  00519C  0E00               	movlw	0
  7673  00519E  5BFF               	subwfb	(_SENSITIVITY+1)& (0+255),f,b
  7674  0051A0  EF68  F028         	goto	l602
  7675  0051A4                     l606:
  7676                           
  7677                           ;test_and_calibration.c: 111:     LATDbits.LATD7 = 0;
  7678  0051A4  9E7C               	bcf	124,7,c	;volatile
  7679                           
  7680                           ;test_and_calibration.c: 112:     LATHbits.LATH3 = 0;
  7681  0051A6  9680               	bcf	128,3,c	;volatile
  7682  0051A8                     
  7683                           ;test_and_calibration.c: 113:     test_action(mL, mR);
  7684  0051A8  C033  F02D         	movff	calibration_motor@mL,test_action@mL
  7685  0051AC  C034  F02E         	movff	calibration_motor@mL+1,test_action@mL+1
  7686  0051B0  C035  F02F         	movff	calibration_motor@mR,test_action@mR
  7687  0051B4  C036  F030         	movff	calibration_motor@mR+1,test_action@mR+1
  7688  0051B8  ECB0  F025         	call	_test_action	;wreg free
  7689  0051BC  0012               	return		;funcret
  7690  0051BE                     __end_of_calibration_motor:
  7691                           	callstack 0
  7692                           
  7693 ;; *************** function _test_action *****************
  7694 ;; Defined at:
  7695 ;;		line 30 in file "test_and_calibration.c"
  7696 ;; Parameters:    Size  Location     Type
  7697 ;;  mL              2   44[COMRAM] PTR struct DC_motor
  7698 ;;		 -> main@motorL(9), 
  7699 ;;  mR              2   46[COMRAM] PTR struct DC_motor
  7700 ;;		 -> main@motorR(9), 
  7701 ;; Auto vars:     Size  Location     Type
  7702 ;;		None
  7703 ;; Return value:  Size  Location     Type
  7704 ;;                  1    wreg      void 
  7705 ;; Registers used:
  7706 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7707 ;; Tracked objects:
  7708 ;;		On entry : 0/0
  7709 ;;		On exit  : 0/0
  7710 ;;		Unchanged: 0/0
  7711 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7712 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7713 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7714 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7715 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7716 ;;Total ram usage:        6 bytes
  7717 ;; Hardware stack levels used: 1
  7718 ;; Hardware stack levels required when called: 5
  7719 ;; This function calls:
  7720 ;;		_fullSpeedAhead
  7721 ;;		_stop
  7722 ;;		_turn45
  7723 ;; This function is called by:
  7724 ;;		_test_function
  7725 ;;		_calibration_motor
  7726 ;; This function uses a non-reentrant model
  7727 ;;
  7728                           
  7729                           	psect	text30
  7730  004B60                     __ptext30:
  7731                           	callstack 0
  7732  004B60                     _test_action:
  7733                           	callstack 24
  7734  004B60                     
  7735                           ;test_and_calibration.c: 30: void test_action(struct DC_motor *mL, struct DC_motor *mR);
      +                          test_and_calibration.c: 31: {;test_and_calibration.c: 32:     stop(mL,mR);
  7736  004B60  C02D  F01A         	movff	test_action@mL,stop@mL
  7737  004B64  C02E  F01B         	movff	test_action@mL+1,stop@mL+1
  7738  004B68  C02F  F01C         	movff	test_action@mR,stop@mR
  7739  004B6C  C030  F01D         	movff	test_action@mR+1,stop@mR+1
  7740  004B70  EC37  F02B         	call	_stop	;wreg free
  7741  004B74                     
  7742                           ;test_and_calibration.c: 33:     _delay((unsigned long)((2000)*(64000000/4000.0)));
  7743  004B74  0EA3               	movlw	163
  7744  004B76  6E32               	movwf	(??_test_action+1)^0,c
  7745  004B78  0E57               	movlw	87
  7746  004B7A  6E31               	movwf	??_test_action^0,c
  7747  004B7C  0E02               	movlw	2
  7748  004B7E                     u6117:
  7749  004B7E  2EE8               	decfsz	wreg,f,c
  7750  004B80  D7FE               	bra	u6117
  7751  004B82  2E31               	decfsz	??_test_action^0,f,c
  7752  004B84  D7FC               	bra	u6117
  7753  004B86  2E32               	decfsz	(??_test_action+1)^0,f,c
  7754  004B88  D7FA               	bra	u6117
  7755  004B8A  D000               	nop2	
  7756  004B8C                     
  7757                           ;test_and_calibration.c: 34:     turn45(mL,mR,8,1);
  7758  004B8C  C02D  F020         	movff	test_action@mL,turn45@mL
  7759  004B90  C02E  F021         	movff	test_action@mL+1,turn45@mL+1
  7760  004B94  C02F  F022         	movff	test_action@mR,turn45@mR
  7761  004B98  C030  F023         	movff	test_action@mR+1,turn45@mR+1
  7762  004B9C  0E08               	movlw	8
  7763  004B9E  6E24               	movwf	turn45@turn_time^0,c
  7764  004BA0  0E01               	movlw	1
  7765  004BA2  6E25               	movwf	turn45@direction^0,c
  7766  004BA4  EC0C  F022         	call	_turn45	;wreg free
  7767  004BA8                     
  7768                           ;test_and_calibration.c: 35:     stop(mL,mR);
  7769  004BA8  C02D  F01A         	movff	test_action@mL,stop@mL
  7770  004BAC  C02E  F01B         	movff	test_action@mL+1,stop@mL+1
  7771  004BB0  C02F  F01C         	movff	test_action@mR,stop@mR
  7772  004BB4  C030  F01D         	movff	test_action@mR+1,stop@mR+1
  7773  004BB8  EC37  F02B         	call	_stop	;wreg free
  7774  004BBC                     
  7775                           ;test_and_calibration.c: 36:     _delay((unsigned long)((2000)*(64000000/4000.0)));
  7776  004BBC  0EA3               	movlw	163
  7777  004BBE  6E32               	movwf	(??_test_action+1)^0,c
  7778  004BC0  0E57               	movlw	87
  7779  004BC2  6E31               	movwf	??_test_action^0,c
  7780  004BC4  0E02               	movlw	2
  7781  004BC6                     u6127:
  7782  004BC6  2EE8               	decfsz	wreg,f,c
  7783  004BC8  D7FE               	bra	u6127
  7784  004BCA  2E31               	decfsz	??_test_action^0,f,c
  7785  004BCC  D7FC               	bra	u6127
  7786  004BCE  2E32               	decfsz	(??_test_action+1)^0,f,c
  7787  004BD0  D7FA               	bra	u6127
  7788  004BD2  D000               	nop2	
  7789                           
  7790                           ;test_and_calibration.c: 37:     turn45(mL,mR,8,2);
  7791  004BD4  C02D  F020         	movff	test_action@mL,turn45@mL
  7792  004BD8  C02E  F021         	movff	test_action@mL+1,turn45@mL+1
  7793  004BDC  C02F  F022         	movff	test_action@mR,turn45@mR
  7794  004BE0  C030  F023         	movff	test_action@mR+1,turn45@mR+1
  7795  004BE4  0E08               	movlw	8
  7796  004BE6  6E24               	movwf	turn45@turn_time^0,c
  7797  004BE8  0E02               	movlw	2
  7798  004BEA  6E25               	movwf	turn45@direction^0,c
  7799  004BEC  EC0C  F022         	call	_turn45	;wreg free
  7800                           
  7801                           ;test_and_calibration.c: 38:     fullSpeedAhead(mL,mR);
  7802  004BF0  C02D  F01A         	movff	test_action@mL,fullSpeedAhead@mL
  7803  004BF4  C02E  F01B         	movff	test_action@mL+1,fullSpeedAhead@mL+1
  7804  004BF8  C02F  F01C         	movff	test_action@mR,fullSpeedAhead@mR
  7805  004BFC  C030  F01D         	movff	test_action@mR+1,fullSpeedAhead@mR+1
  7806  004C00  EC73  F02A         	call	_fullSpeedAhead	;wreg free
  7807  004C04                     
  7808                           ;test_and_calibration.c: 39:     _delay((unsigned long)((3000)*(64000000/4000.0)));
  7809  004C04  0EF4               	movlw	244
  7810  004C06  6E32               	movwf	(??_test_action+1)^0,c
  7811  004C08  0E82               	movlw	130
  7812  004C0A  6E31               	movwf	??_test_action^0,c
  7813  004C0C  0E05               	movlw	5
  7814  004C0E                     u6137:
  7815  004C0E  2EE8               	decfsz	wreg,f,c
  7816  004C10  D7FE               	bra	u6137
  7817  004C12  2E31               	decfsz	??_test_action^0,f,c
  7818  004C14  D7FC               	bra	u6137
  7819  004C16  2E32               	decfsz	(??_test_action+1)^0,f,c
  7820  004C18  D7FA               	bra	u6137
  7821  004C1A  F000               	nop	
  7822  004C1C                     
  7823                           ;test_and_calibration.c: 40:     stop(mL,mR);
  7824  004C1C  C02D  F01A         	movff	test_action@mL,stop@mL
  7825  004C20  C02E  F01B         	movff	test_action@mL+1,stop@mL+1
  7826  004C24  C02F  F01C         	movff	test_action@mR,stop@mR
  7827  004C28  C030  F01D         	movff	test_action@mR+1,stop@mR+1
  7828  004C2C  EC37  F02B         	call	_stop	;wreg free
  7829  004C30                     
  7830                           ;test_and_calibration.c: 41:     turn45(mL,mR,4,1);
  7831  004C30  C02D  F020         	movff	test_action@mL,turn45@mL
  7832  004C34  C02E  F021         	movff	test_action@mL+1,turn45@mL+1
  7833  004C38  C02F  F022         	movff	test_action@mR,turn45@mR
  7834  004C3C  C030  F023         	movff	test_action@mR+1,turn45@mR+1
  7835  004C40  0E04               	movlw	4
  7836  004C42  6E24               	movwf	turn45@turn_time^0,c
  7837  004C44  0E01               	movlw	1
  7838  004C46  6E25               	movwf	turn45@direction^0,c
  7839  004C48  EC0C  F022         	call	_turn45	;wreg free
  7840  004C4C                     
  7841                           ;test_and_calibration.c: 42:     fullSpeedAhead(mL,mR);
  7842  004C4C  C02D  F01A         	movff	test_action@mL,fullSpeedAhead@mL
  7843  004C50  C02E  F01B         	movff	test_action@mL+1,fullSpeedAhead@mL+1
  7844  004C54  C02F  F01C         	movff	test_action@mR,fullSpeedAhead@mR
  7845  004C58  C030  F01D         	movff	test_action@mR+1,fullSpeedAhead@mR+1
  7846  004C5C  EC73  F02A         	call	_fullSpeedAhead	;wreg free
  7847                           
  7848                           ;test_and_calibration.c: 43:     _delay((unsigned long)((3000)*(64000000/4000.0)));
  7849  004C60  0EF4               	movlw	244
  7850  004C62  6E32               	movwf	(??_test_action+1)^0,c
  7851  004C64  0E82               	movlw	130
  7852  004C66  6E31               	movwf	??_test_action^0,c
  7853  004C68  0E05               	movlw	5
  7854  004C6A                     u6147:
  7855  004C6A  2EE8               	decfsz	wreg,f,c
  7856  004C6C  D7FE               	bra	u6147
  7857  004C6E  2E31               	decfsz	??_test_action^0,f,c
  7858  004C70  D7FC               	bra	u6147
  7859  004C72  2E32               	decfsz	(??_test_action+1)^0,f,c
  7860  004C74  D7FA               	bra	u6147
  7861  004C76  F000               	nop	
  7862  004C78                     
  7863                           ;test_and_calibration.c: 44:     stop(mL,mR);
  7864  004C78  C02D  F01A         	movff	test_action@mL,stop@mL
  7865  004C7C  C02E  F01B         	movff	test_action@mL+1,stop@mL+1
  7866  004C80  C02F  F01C         	movff	test_action@mR,stop@mR
  7867  004C84  C030  F01D         	movff	test_action@mR+1,stop@mR+1
  7868  004C88  EC37  F02B         	call	_stop	;wreg free
  7869  004C8C  0012               	return		;funcret
  7870  004C8E                     __end_of_test_action:
  7871                           	callstack 0
  7872                           
  7873 ;; *************** function _turn45 *****************
  7874 ;; Defined at:
  7875 ;;		line 88 in file "dc_motor.c"
  7876 ;; Parameters:    Size  Location     Type
  7877 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  7878 ;;		 -> main@motorL(9), 
  7879 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  7880 ;;		 -> main@motorR(9), 
  7881 ;;  turn_time       1   35[COMRAM] unsigned char 
  7882 ;;  direction       1   36[COMRAM] unsigned char 
  7883 ;; Auto vars:     Size  Location     Type
  7884 ;;  i               2   41[COMRAM] unsigned int 
  7885 ;;  i               2   39[COMRAM] unsigned int 
  7886 ;;  i               1   43[COMRAM] unsigned char 
  7887 ;; Return value:  Size  Location     Type
  7888 ;;                  1    wreg      void 
  7889 ;; Registers used:
  7890 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7891 ;; Tracked objects:
  7892 ;;		On entry : 0/0
  7893 ;;		On exit  : 0/0
  7894 ;;		Unchanged: 0/0
  7895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7896 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7897 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7898 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7899 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7900 ;;Total ram usage:       13 bytes
  7901 ;; Hardware stack levels used: 1
  7902 ;; Hardware stack levels required when called: 4
  7903 ;; This function calls:
  7904 ;;		_setMotorPWM
  7905 ;;		_stop
  7906 ;; This function is called by:
  7907 ;;		_turning_action
  7908 ;;		_goback
  7909 ;;		_test_action
  7910 ;; This function uses a non-reentrant model
  7911 ;;
  7912                           
  7913                           	psect	text31
  7914  004418                     __ptext31:
  7915                           	callstack 0
  7916  004418                     _turn45:
  7917                           	callstack 25
  7918  004418                     
  7919                           ;dc_motor.c: 88: void turn45(struct DC_motor *mL, struct DC_motor *mR, unsigned char tur
      +                          n_time, unsigned char direction);dc_motor.c: 89: {;dc_motor.c: 91:     unsigned char i =
      +                           0;
  7920  004418  0E00               	movlw	0
  7921  00441A  6E2C               	movwf	turn45@i^0,c
  7922                           
  7923                           ;dc_motor.c: 92:     for (i = 0; i < turn_time; i++){
  7924  00441C  0E00               	movlw	0
  7925  00441E  6E2C               	movwf	turn45@i^0,c
  7926  004420  EFDA  F022         	goto	l4236
  7927  004424                     l4188:
  7928                           
  7929                           ;dc_motor.c: 93:         mL->direction=1;
  7930  004424  EE20 F001          	lfsr	2,1
  7931  004428  5020               	movf	turn45@mL^0,w,c
  7932  00442A  26D9               	addwf	fsr2l,f,c
  7933  00442C  5021               	movf	(turn45@mL+1)^0,w,c
  7934  00442E  22DA               	addwfc	fsr2h,f,c
  7935  004430  0E01               	movlw	1
  7936  004432  6EDF               	movwf	indf2,c
  7937                           
  7938                           ;dc_motor.c: 94:         mR->direction=1;
  7939  004434  EE20 F001          	lfsr	2,1
  7940  004438  5022               	movf	turn45@mR^0,w,c
  7941  00443A  26D9               	addwf	fsr2l,f,c
  7942  00443C  5023               	movf	(turn45@mR+1)^0,w,c
  7943  00443E  22DA               	addwfc	fsr2h,f,c
  7944  004440  0E01               	movlw	1
  7945  004442  6EDF               	movwf	indf2,c
  7946  004444                     
  7947                           ;dc_motor.c: 95:         if (direction == 1){
  7948  004444  0425               	decf	turn45@direction^0,w,c
  7949  004446  A4D8               	btfss	status,2,c
  7950  004448  EF28  F022         	goto	u4211
  7951  00444C  EF2A  F022         	goto	u4210
  7952  004450                     u4211:
  7953  004450  EF85  F022         	goto	l4212
  7954  004454                     u4210:
  7955  004454  EF4B  F022         	goto	l4202
  7956  004458                     l4194:
  7957                           
  7958                           ;dc_motor.c: 97:                 mR->power += 5;
  7959  004458  C022  FFD9         	movff	turn45@mR,fsr2l
  7960  00445C  C023  FFDA         	movff	turn45@mR+1,fsr2h
  7961  004460  0E05               	movlw	5
  7962  004462  26DF               	addwf	indf2,f,c
  7963                           
  7964                           ;dc_motor.c: 98:                 mL->power = 0;
  7965  004464  C020  FFD9         	movff	turn45@mL,fsr2l
  7966  004468  C021  FFDA         	movff	turn45@mL+1,fsr2h
  7967  00446C  0E00               	movlw	0
  7968  00446E  6EDF               	movwf	indf2,c
  7969  004470                     
  7970                           ;dc_motor.c: 99:                 setMotorPWM(mL);
  7971  004470  C020  F00F         	movff	turn45@mL,setMotorPWM@m
  7972  004474  C021  F010         	movff	turn45@mL+1,setMotorPWM@m+1
  7973  004478  EC96  F01E         	call	_setMotorPWM	;wreg free
  7974  00447C                     
  7975                           ;dc_motor.c: 100:                 setMotorPWM(mR);
  7976  00447C  C022  F00F         	movff	turn45@mR,setMotorPWM@m
  7977  004480  C023  F010         	movff	turn45@mR+1,setMotorPWM@m+1
  7978  004484  EC96  F01E         	call	_setMotorPWM	;wreg free
  7979  004488                     
  7980                           ;dc_motor.c: 101:                 _delay((unsigned long)((10)*(64000000/4000.0)));
  7981  004488  0ED0               	movlw	208
  7982  00448A  6E26               	movwf	??_turn45^0,c
  7983  00448C  0ECA               	movlw	202
  7984  00448E                     u6157:
  7985  00448E  2EE8               	decfsz	wreg,f,c
  7986  004490  D7FE               	bra	u6157
  7987  004492  2E26               	decfsz	??_turn45^0,f,c
  7988  004494  D7FC               	bra	u6157
  7989  004496                     l4202:
  7990                           
  7991                           ;dc_motor.c: 96:             while (mR->power <60){
  7992  004496  C022  FFD9         	movff	turn45@mR,fsr2l
  7993  00449A  C023  FFDA         	movff	turn45@mR+1,fsr2h
  7994  00449E  0E3B               	movlw	59
  7995  0044A0  64DF               	cpfsgt	indf2,c
  7996  0044A2  EF55  F022         	goto	u4221
  7997  0044A6  EF57  F022         	goto	u4220
  7998  0044AA                     u4221:
  7999  0044AA  EF2C  F022         	goto	l4194
  8000  0044AE                     u4220:
  8001  0044AE                     
  8002                           ;dc_motor.c: 103:             for(unsigned int i = 0; i<SENSITIVITY + 15; i++){_delay((u
      +                          nsigned long)((1)*(64000000/4000.0)));}
  8003  0044AE  0E00               	movlw	0
  8004  0044B0  6E29               	movwf	(turn45@i_1340+1)^0,c
  8005  0044B2  0E00               	movlw	0
  8006  0044B4  6E28               	movwf	turn45@i_1340^0,c
  8007  0044B6  EF67  F022         	goto	l276
  8008  0044BA                     l4206:
  8009                           
  8010                           ; BSR set to: 1
  8011  0044BA  0E15               	movlw	21
  8012  0044BC  6E26               	movwf	??_turn45^0,c
  8013  0044BE  0EC6               	movlw	198
  8014  0044C0                     u6167:
  8015  0044C0  2EE8               	decfsz	wreg,f,c
  8016  0044C2  D7FE               	bra	u6167
  8017  0044C4  2E26               	decfsz	??_turn45^0,f,c
  8018  0044C6  D7FC               	bra	u6167
  8019  0044C8  D000               	nop2	
  8020  0044CA  4A28               	infsnz	turn45@i_1340^0,f,c
  8021  0044CC  2A29               	incf	(turn45@i_1340+1)^0,f,c
  8022  0044CE                     l276:
  8023  0044CE  0E0F               	movlw	15
  8024  0044D0  0101               	movlb	1	; () banked
  8025  0044D2  25FE               	addwf	_SENSITIVITY& (0+255),w,b
  8026  0044D4  6E26               	movwf	??_turn45^0,c
  8027  0044D6  0E00               	movlw	0
  8028  0044D8  21FF               	addwfc	(_SENSITIVITY+1)& (0+255),w,b
  8029  0044DA  6E27               	movwf	(??_turn45+1)^0,c
  8030  0044DC  5026               	movf	??_turn45^0,w,c
  8031  0044DE  5C28               	subwf	turn45@i_1340^0,w,c
  8032  0044E0  5027               	movf	(??_turn45+1)^0,w,c
  8033  0044E2  5829               	subwfb	(turn45@i_1340+1)^0,w,c
  8034  0044E4  A0D8               	btfss	status,0,c
  8035  0044E6  EF77  F022         	goto	u4231
  8036  0044EA  EF79  F022         	goto	u4230
  8037  0044EE                     u4231:
  8038  0044EE  EF5D  F022         	goto	l4206
  8039  0044F2                     u4230:
  8040  0044F2                     l4210:
  8041                           
  8042                           ; BSR set to: 1
  8043                           ;dc_motor.c: 104:             stop(mL,mR);
  8044  0044F2  C020  F01A         	movff	turn45@mL,stop@mL
  8045  0044F6  C021  F01B         	movff	turn45@mL+1,stop@mL+1
  8046  0044FA  C022  F01C         	movff	turn45@mR,stop@mR
  8047  0044FE  C023  F01D         	movff	turn45@mR+1,stop@mR+1
  8048  004502  EC37  F02B         	call	_stop	;wreg free
  8049                           
  8050                           ;dc_motor.c: 105:         }
  8051  004506  EFD9  F022         	goto	l4234
  8052  00450A                     l4212:
  8053  00450A  0E02               	movlw	2
  8054  00450C  1825               	xorwf	turn45@direction^0,w,c
  8055  00450E  A4D8               	btfss	status,2,c
  8056  004510  EF8C  F022         	goto	u4241
  8057  004514  EF8E  F022         	goto	u4240
  8058  004518                     u4241:
  8059  004518  EFD9  F022         	goto	l4234
  8060  00451C                     u4240:
  8061  00451C  EFAF  F022         	goto	l4224
  8062  004520                     l4216:
  8063                           
  8064                           ;dc_motor.c: 108:                 mL->power += 5;
  8065  004520  C020  FFD9         	movff	turn45@mL,fsr2l
  8066  004524  C021  FFDA         	movff	turn45@mL+1,fsr2h
  8067  004528  0E05               	movlw	5
  8068  00452A  26DF               	addwf	indf2,f,c
  8069                           
  8070                           ;dc_motor.c: 109:                 mR->power = 0;
  8071  00452C  C022  FFD9         	movff	turn45@mR,fsr2l
  8072  004530  C023  FFDA         	movff	turn45@mR+1,fsr2h
  8073  004534  0E00               	movlw	0
  8074  004536  6EDF               	movwf	indf2,c
  8075  004538                     
  8076                           ;dc_motor.c: 110:                 setMotorPWM(mL);
  8077  004538  C020  F00F         	movff	turn45@mL,setMotorPWM@m
  8078  00453C  C021  F010         	movff	turn45@mL+1,setMotorPWM@m+1
  8079  004540  EC96  F01E         	call	_setMotorPWM	;wreg free
  8080  004544                     
  8081                           ;dc_motor.c: 111:                 setMotorPWM(mR);
  8082  004544  C022  F00F         	movff	turn45@mR,setMotorPWM@m
  8083  004548  C023  F010         	movff	turn45@mR+1,setMotorPWM@m+1
  8084  00454C  EC96  F01E         	call	_setMotorPWM	;wreg free
  8085  004550                     
  8086                           ;dc_motor.c: 112:                 _delay((unsigned long)((10)*(64000000/4000.0)));
  8087  004550  0ED0               	movlw	208
  8088  004552  6E26               	movwf	??_turn45^0,c
  8089  004554  0ECA               	movlw	202
  8090  004556                     u6177:
  8091  004556  2EE8               	decfsz	wreg,f,c
  8092  004558  D7FE               	bra	u6177
  8093  00455A  2E26               	decfsz	??_turn45^0,f,c
  8094  00455C  D7FC               	bra	u6177
  8095  00455E                     l4224:
  8096                           
  8097                           ;dc_motor.c: 107:             while (mL->power <60){
  8098  00455E  C020  FFD9         	movff	turn45@mL,fsr2l
  8099  004562  C021  FFDA         	movff	turn45@mL+1,fsr2h
  8100  004566  0E3B               	movlw	59
  8101  004568  64DF               	cpfsgt	indf2,c
  8102  00456A  EFB9  F022         	goto	u4251
  8103  00456E  EFBB  F022         	goto	u4250
  8104  004572                     u4251:
  8105  004572  EF90  F022         	goto	l4216
  8106  004576                     u4250:
  8107  004576                     
  8108                           ;dc_motor.c: 114:             for(unsigned int i = 0; i <SENSITIVITY; i++){_delay((unsig
      +                          ned long)((1)*(64000000/4000.0)));}
  8109  004576  0E00               	movlw	0
  8110  004578  6E2B               	movwf	(turn45@i_1342+1)^0,c
  8111  00457A  0E00               	movlw	0
  8112  00457C  6E2A               	movwf	turn45@i_1342^0,c
  8113  00457E  EFCB  F022         	goto	l284
  8114  004582                     l4228:
  8115                           
  8116                           ; BSR set to: 1
  8117  004582  0E15               	movlw	21
  8118  004584  6E26               	movwf	??_turn45^0,c
  8119  004586  0EC6               	movlw	198
  8120  004588                     u6187:
  8121  004588  2EE8               	decfsz	wreg,f,c
  8122  00458A  D7FE               	bra	u6187
  8123  00458C  2E26               	decfsz	??_turn45^0,f,c
  8124  00458E  D7FC               	bra	u6187
  8125  004590  D000               	nop2	
  8126  004592  4A2A               	infsnz	turn45@i_1342^0,f,c
  8127  004594  2A2B               	incf	(turn45@i_1342+1)^0,f,c
  8128  004596                     l284:
  8129  004596  0101               	movlb	1	; () banked
  8130  004598  51FE               	movf	_SENSITIVITY& (0+255),w,b
  8131  00459A  5C2A               	subwf	turn45@i_1342^0,w,c
  8132  00459C  51FF               	movf	(_SENSITIVITY+1)& (0+255),w,b
  8133  00459E  582B               	subwfb	(turn45@i_1342+1)^0,w,c
  8134  0045A0  A0D8               	btfss	status,0,c
  8135  0045A2  EFD5  F022         	goto	u4261
  8136  0045A6  EFD7  F022         	goto	u4260
  8137  0045AA                     u4261:
  8138  0045AA  EFC1  F022         	goto	l4228
  8139  0045AE                     u4260:
  8140  0045AE  EF79  F022         	goto	l4210
  8141  0045B2                     l4234:
  8142                           
  8143                           ;dc_motor.c: 117:     }
  8144  0045B2  2A2C               	incf	turn45@i^0,f,c
  8145  0045B4                     l4236:
  8146  0045B4  5024               	movf	turn45@turn_time^0,w,c
  8147  0045B6  5C2C               	subwf	turn45@i^0,w,c
  8148  0045B8  A0D8               	btfss	status,0,c
  8149  0045BA  EFE1  F022         	goto	u4271
  8150  0045BE  EFE3  F022         	goto	u4270
  8151  0045C2                     u4271:
  8152  0045C2  EF12  F022         	goto	l4188
  8153  0045C6                     u4270:
  8154  0045C6  0012               	return		;funcret
  8155  0045C8                     __end_of_turn45:
  8156                           	callstack 0
  8157                           
  8158 ;; *************** function _stop *****************
  8159 ;; Defined at:
  8160 ;;		line 76 in file "dc_motor.c"
  8161 ;; Parameters:    Size  Location     Type
  8162 ;;  mL              2   25[COMRAM] PTR struct DC_motor
  8163 ;;		 -> main@motorL(9), 
  8164 ;;  mR              2   27[COMRAM] PTR struct DC_motor
  8165 ;;		 -> main@motorR(9), 
  8166 ;; Auto vars:     Size  Location     Type
  8167 ;;		None
  8168 ;; Return value:  Size  Location     Type
  8169 ;;                  1    wreg      void 
  8170 ;; Registers used:
  8171 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8172 ;; Tracked objects:
  8173 ;;		On entry : 0/0
  8174 ;;		On exit  : 0/0
  8175 ;;		Unchanged: 0/0
  8176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8177 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8178 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8179 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8180 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8181 ;;Total ram usage:        6 bytes
  8182 ;; Hardware stack levels used: 1
  8183 ;; Hardware stack levels required when called: 3
  8184 ;; This function calls:
  8185 ;;		_setMotorPWM
  8186 ;; This function is called by:
  8187 ;;		_turn45
  8188 ;;		_fullSpeedBack
  8189 ;;		_main
  8190 ;;		_short_burst
  8191 ;;		_goback
  8192 ;;		_test_action
  8193 ;;		_test_function
  8194 ;; This function uses a non-reentrant model
  8195 ;;
  8196                           
  8197                           	psect	text32
  8198  00566E                     __ptext32:
  8199                           	callstack 0
  8200  00566E                     _stop:
  8201                           	callstack 25
  8202  00566E                     
  8203                           ;dc_motor.c: 76: void stop(struct DC_motor *mL, struct DC_motor *mR);dc_motor.c: 77: {;d
      +                          c_motor.c: 78:     while (mL->power >0 || mR->power >0){
  8204  00566E  EF71  F02B         	goto	l3958
  8205  005672                     l3944:
  8206                           
  8207                           ;dc_motor.c: 79:         if (mL->power !=0){mL->power -= 2;}
  8208  005672  C01A  FFD9         	movff	stop@mL,fsr2l
  8209  005676  C01B  FFDA         	movff	stop@mL+1,fsr2h
  8210  00567A  50DF               	movf	indf2,w,c
  8211  00567C  B4D8               	btfsc	status,2,c
  8212  00567E  EF43  F02B         	goto	u3891
  8213  005682  EF45  F02B         	goto	u3890
  8214  005686                     u3891:
  8215  005686  EF4B  F02B         	goto	l3948
  8216  00568A                     u3890:
  8217  00568A  C01A  FFD9         	movff	stop@mL,fsr2l
  8218  00568E  C01B  FFDA         	movff	stop@mL+1,fsr2h
  8219  005692  0E02               	movlw	2
  8220  005694  5EDF               	subwf	indf2,f,c
  8221  005696                     l3948:
  8222                           
  8223                           ;dc_motor.c: 80:         if (mR->power !=0){mR->power -= 2;}
  8224  005696  C01C  FFD9         	movff	stop@mR,fsr2l
  8225  00569A  C01D  FFDA         	movff	stop@mR+1,fsr2h
  8226  00569E  50DF               	movf	indf2,w,c
  8227  0056A0  B4D8               	btfsc	status,2,c
  8228  0056A2  EF55  F02B         	goto	u3901
  8229  0056A6  EF57  F02B         	goto	u3900
  8230  0056AA                     u3901:
  8231  0056AA  EF5D  F02B         	goto	l3952
  8232  0056AE                     u3900:
  8233  0056AE  C01C  FFD9         	movff	stop@mR,fsr2l
  8234  0056B2  C01D  FFDA         	movff	stop@mR+1,fsr2h
  8235  0056B6  0E02               	movlw	2
  8236  0056B8  5EDF               	subwf	indf2,f,c
  8237  0056BA                     l3952:
  8238                           
  8239                           ;dc_motor.c: 81:         setMotorPWM(mL);
  8240  0056BA  C01A  F00F         	movff	stop@mL,setMotorPWM@m
  8241  0056BE  C01B  F010         	movff	stop@mL+1,setMotorPWM@m+1
  8242  0056C2  EC96  F01E         	call	_setMotorPWM	;wreg free
  8243  0056C6                     
  8244                           ;dc_motor.c: 82:         setMotorPWM(mR);
  8245  0056C6  C01C  F00F         	movff	stop@mR,setMotorPWM@m
  8246  0056CA  C01D  F010         	movff	stop@mR+1,setMotorPWM@m+1
  8247  0056CE  EC96  F01E         	call	_setMotorPWM	;wreg free
  8248  0056D2                     
  8249                           ;dc_motor.c: 83:         _delay((unsigned long)((5)*(64000000/4000.0)));
  8250  0056D2  0E68               	movlw	104
  8251  0056D4  6E1E               	movwf	??_stop^0,c
  8252  0056D6  0EE4               	movlw	228
  8253  0056D8                     u6197:
  8254  0056D8  2EE8               	decfsz	wreg,f,c
  8255  0056DA  D7FE               	bra	u6197
  8256  0056DC  2E1E               	decfsz	??_stop^0,f,c
  8257  0056DE  D7FC               	bra	u6197
  8258  0056E0  D000               	nop2	
  8259  0056E2                     l3958:
  8260                           
  8261                           ;dc_motor.c: 78:     while (mL->power >0 || mR->power >0){
  8262  0056E2  C01A  FFD9         	movff	stop@mL,fsr2l
  8263  0056E6  C01B  FFDA         	movff	stop@mL+1,fsr2h
  8264  0056EA  50DF               	movf	indf2,w,c
  8265  0056EC  A4D8               	btfss	status,2,c
  8266  0056EE  EF7B  F02B         	goto	u3911
  8267  0056F2  EF7D  F02B         	goto	u3910
  8268  0056F6                     u3911:
  8269  0056F6  EF39  F02B         	goto	l3944
  8270  0056FA                     u3910:
  8271  0056FA  C01C  FFD9         	movff	stop@mR,fsr2l
  8272  0056FE  C01D  FFDA         	movff	stop@mR+1,fsr2h
  8273  005702  50DF               	movf	indf2,w,c
  8274  005704  A4D8               	btfss	status,2,c
  8275  005706  EF87  F02B         	goto	u3921
  8276  00570A  EF89  F02B         	goto	u3920
  8277  00570E                     u3921:
  8278  00570E  EF39  F02B         	goto	l3944
  8279  005712                     u3920:
  8280  005712                     
  8281                           ;dc_motor.c: 85:     _delay((unsigned long)((500)*(64000000/4000.0)));
  8282  005712  0E29               	movlw	41
  8283  005714  6E1F               	movwf	(??_stop+1)^0,c
  8284  005716  0E96               	movlw	150
  8285  005718  6E1E               	movwf	??_stop^0,c
  8286  00571A  0E7F               	movlw	127
  8287  00571C                     u6207:
  8288  00571C  2EE8               	decfsz	wreg,f,c
  8289  00571E  D7FE               	bra	u6207
  8290  005720  2E1E               	decfsz	??_stop^0,f,c
  8291  005722  D7FC               	bra	u6207
  8292  005724  2E1F               	decfsz	(??_stop+1)^0,f,c
  8293  005726  D7FA               	bra	u6207
  8294  005728  F000               	nop	
  8295  00572A  0012               	return		;funcret
  8296  00572C                     __end_of_stop:
  8297                           	callstack 0
  8298                           
  8299 ;; *************** function _fullSpeedAhead *****************
  8300 ;; Defined at:
  8301 ;;		line 121 in file "dc_motor.c"
  8302 ;; Parameters:    Size  Location     Type
  8303 ;;  mL              2   25[COMRAM] PTR struct DC_motor
  8304 ;;		 -> main@motorL(9), 
  8305 ;;  mR              2   27[COMRAM] PTR struct DC_motor
  8306 ;;		 -> main@motorR(9), 
  8307 ;; Auto vars:     Size  Location     Type
  8308 ;;		None
  8309 ;; Return value:  Size  Location     Type
  8310 ;;                  1    wreg      void 
  8311 ;; Registers used:
  8312 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8313 ;; Tracked objects:
  8314 ;;		On entry : 0/0
  8315 ;;		On exit  : 0/0
  8316 ;;		Unchanged: 0/0
  8317 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8318 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8319 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8320 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8321 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8322 ;;Total ram usage:        5 bytes
  8323 ;; Hardware stack levels used: 1
  8324 ;; Hardware stack levels required when called: 3
  8325 ;; This function calls:
  8326 ;;		_setMotorPWM
  8327 ;; This function is called by:
  8328 ;;		_main
  8329 ;;		_short_burst
  8330 ;;		_goback
  8331 ;;		_test_action
  8332 ;;		_test_function
  8333 ;; This function uses a non-reentrant model
  8334 ;;
  8335                           
  8336                           	psect	text33
  8337  0054E6                     __ptext33:
  8338                           	callstack 0
  8339  0054E6                     _fullSpeedAhead:
  8340                           	callstack 25
  8341  0054E6                     
  8342                           ;dc_motor.c: 121: void fullSpeedAhead(struct DC_motor *mL, struct DC_motor *mR);dc_motor
      +                          .c: 122: {;dc_motor.c: 123:     mL->direction=1;
  8343  0054E6  EE20 F001          	lfsr	2,1
  8344  0054EA  501A               	movf	fullSpeedAhead@mL^0,w,c
  8345  0054EC  26D9               	addwf	fsr2l,f,c
  8346  0054EE  501B               	movf	(fullSpeedAhead@mL+1)^0,w,c
  8347  0054F0  22DA               	addwfc	fsr2h,f,c
  8348  0054F2  0E01               	movlw	1
  8349  0054F4  6EDF               	movwf	indf2,c
  8350                           
  8351                           ;dc_motor.c: 124:     mR->direction=1;
  8352  0054F6  EE20 F001          	lfsr	2,1
  8353  0054FA  501C               	movf	fullSpeedAhead@mR^0,w,c
  8354  0054FC  26D9               	addwf	fsr2l,f,c
  8355  0054FE  501D               	movf	(fullSpeedAhead@mR+1)^0,w,c
  8356  005500  22DA               	addwfc	fsr2h,f,c
  8357  005502  0E01               	movlw	1
  8358  005504  6EDF               	movwf	indf2,c
  8359                           
  8360                           ;dc_motor.c: 125:     while (mL->power<30 || mR->power<30){
  8361  005506  EFBC  F02A         	goto	l4254
  8362  00550A                     l4240:
  8363                           
  8364                           ;dc_motor.c: 126:         if (mL->power<30) {mL->power += 2;}
  8365  00550A  C01A  FFD9         	movff	fullSpeedAhead@mL,fsr2l
  8366  00550E  C01B  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
  8367  005512  0E1E               	movlw	30
  8368  005514  60DF               	cpfslt	indf2,c
  8369  005516  EF8F  F02A         	goto	u4281
  8370  00551A  EF91  F02A         	goto	u4280
  8371  00551E                     u4281:
  8372  00551E  EF97  F02A         	goto	l4244
  8373  005522                     u4280:
  8374  005522  C01A  FFD9         	movff	fullSpeedAhead@mL,fsr2l
  8375  005526  C01B  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
  8376  00552A  0E02               	movlw	2
  8377  00552C  26DF               	addwf	indf2,f,c
  8378  00552E                     l4244:
  8379                           
  8380                           ;dc_motor.c: 127:         if (mR->power<30) {mR->power += 2;}
  8381  00552E  C01C  FFD9         	movff	fullSpeedAhead@mR,fsr2l
  8382  005532  C01D  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
  8383  005536  0E1E               	movlw	30
  8384  005538  60DF               	cpfslt	indf2,c
  8385  00553A  EFA1  F02A         	goto	u4291
  8386  00553E  EFA3  F02A         	goto	u4290
  8387  005542                     u4291:
  8388  005542  EFA9  F02A         	goto	l4248
  8389  005546                     u4290:
  8390  005546  C01C  FFD9         	movff	fullSpeedAhead@mR,fsr2l
  8391  00554A  C01D  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
  8392  00554E  0E02               	movlw	2
  8393  005550  26DF               	addwf	indf2,f,c
  8394  005552                     l4248:
  8395                           
  8396                           ;dc_motor.c: 128:         setMotorPWM(mL);
  8397  005552  C01A  F00F         	movff	fullSpeedAhead@mL,setMotorPWM@m
  8398  005556  C01B  F010         	movff	fullSpeedAhead@mL+1,setMotorPWM@m+1
  8399  00555A  EC96  F01E         	call	_setMotorPWM	;wreg free
  8400  00555E                     
  8401                           ;dc_motor.c: 129:         setMotorPWM(mR);
  8402  00555E  C01C  F00F         	movff	fullSpeedAhead@mR,setMotorPWM@m
  8403  005562  C01D  F010         	movff	fullSpeedAhead@mR+1,setMotorPWM@m+1
  8404  005566  EC96  F01E         	call	_setMotorPWM	;wreg free
  8405  00556A                     
  8406                           ;dc_motor.c: 130:         _delay((unsigned long)((10)*(64000000/4000.0)));
  8407  00556A  0ED0               	movlw	208
  8408  00556C  6E1E               	movwf	??_fullSpeedAhead^0,c
  8409  00556E  0ECA               	movlw	202
  8410  005570                     u6217:
  8411  005570  2EE8               	decfsz	wreg,f,c
  8412  005572  D7FE               	bra	u6217
  8413  005574  2E1E               	decfsz	??_fullSpeedAhead^0,f,c
  8414  005576  D7FC               	bra	u6217
  8415  005578                     l4254:
  8416                           
  8417                           ;dc_motor.c: 125:     while (mL->power<30 || mR->power<30){
  8418  005578  C01A  FFD9         	movff	fullSpeedAhead@mL,fsr2l
  8419  00557C  C01B  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
  8420  005580  0E1D               	movlw	29
  8421  005582  64DF               	cpfsgt	indf2,c
  8422  005584  EFC6  F02A         	goto	u4301
  8423  005588  EFC8  F02A         	goto	u4300
  8424  00558C                     u4301:
  8425  00558C  EF85  F02A         	goto	l4240
  8426  005590                     u4300:
  8427  005590  C01C  FFD9         	movff	fullSpeedAhead@mR,fsr2l
  8428  005594  C01D  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
  8429  005598  0E1D               	movlw	29
  8430  00559A  64DF               	cpfsgt	indf2,c
  8431  00559C  EFD2  F02A         	goto	u4311
  8432  0055A0  EFD4  F02A         	goto	u4310
  8433  0055A4                     u4311:
  8434  0055A4  EF85  F02A         	goto	l4240
  8435  0055A8                     u4310:
  8436  0055A8  0012               	return		;funcret
  8437  0055AA                     __end_of_fullSpeedAhead:
  8438                           	callstack 0
  8439                           
  8440 ;; *************** function _setMotorPWM *****************
  8441 ;; Defined at:
  8442 ;;		line 56 in file "dc_motor.c"
  8443 ;; Parameters:    Size  Location     Type
  8444 ;;  m               2   14[COMRAM] PTR struct DC_motor
  8445 ;;		 -> main@motorR(9), main@motorL(9), 
  8446 ;; Auto vars:     Size  Location     Type
  8447 ;;  PWMduty         2   23[COMRAM] int 
  8448 ;; Return value:  Size  Location     Type
  8449 ;;                  1    wreg      void 
  8450 ;; Registers used:
  8451 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8452 ;; Tracked objects:
  8453 ;;		On entry : 0/0
  8454 ;;		On exit  : 0/0
  8455 ;;		Unchanged: 0/0
  8456 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8457 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8458 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8459 ;;      Temps:          7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8460 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8461 ;;Total ram usage:       11 bytes
  8462 ;; Hardware stack levels used: 1
  8463 ;; Hardware stack levels required when called: 2
  8464 ;; This function calls:
  8465 ;;		___awdiv
  8466 ;;		___wmul
  8467 ;; This function is called by:
  8468 ;;		_stop
  8469 ;;		_turn45
  8470 ;;		_fullSpeedAhead
  8471 ;;		_fullSpeedBack
  8472 ;; This function uses a non-reentrant model
  8473 ;;
  8474                           
  8475                           	psect	text34
  8476  003D2C                     __ptext34:
  8477                           	callstack 0
  8478  003D2C                     _setMotorPWM:
  8479                           	callstack 25
  8480  003D2C                     
  8481                           ;dc_motor.c: 56: void setMotorPWM(struct DC_motor *m);dc_motor.c: 57: {;dc_motor.c: 58: 
      +                           int PWMduty;;dc_motor.c: 59:  if (m->direction){
  8482  003D2C  EE20 F001          	lfsr	2,1
  8483  003D30  500F               	movf	setMotorPWM@m^0,w,c
  8484  003D32  26D9               	addwf	fsr2l,f,c
  8485  003D34  5010               	movf	(setMotorPWM@m+1)^0,w,c
  8486  003D36  22DA               	addwfc	fsr2h,f,c
  8487  003D38  50DF               	movf	indf2,w,c
  8488  003D3A  B4D8               	btfsc	status,2,c
  8489  003D3C  EFA2  F01E         	goto	u3401
  8490  003D40  EFA4  F01E         	goto	u3400
  8491  003D44                     u3401:
  8492  003D44  EFD5  F01E         	goto	l3658
  8493  003D48                     u3400:
  8494  003D48                     
  8495                           ;dc_motor.c: 61:   PWMduty=m->PWMperiod - ((int)(m->power)*(m->PWMperiod))/100;
  8496  003D48  C00F  FFD9         	movff	setMotorPWM@m,fsr2l
  8497  003D4C  C010  FFDA         	movff	setMotorPWM@m+1,fsr2h
  8498  003D50  50DF               	movf	indf2,w,c
  8499  003D52  6E11               	movwf	??_setMotorPWM^0,c
  8500  003D54  5011               	movf	??_setMotorPWM^0,w,c
  8501  003D56  6E01               	movwf	___wmul@multiplier^0,c
  8502  003D58  6A02               	clrf	(___wmul@multiplier+1)^0,c
  8503  003D5A  EE20 F007          	lfsr	2,7
  8504  003D5E  500F               	movf	setMotorPWM@m^0,w,c
  8505  003D60  26D9               	addwf	fsr2l,f,c
  8506  003D62  5010               	movf	(setMotorPWM@m+1)^0,w,c
  8507  003D64  22DA               	addwfc	fsr2h,f,c
  8508  003D66  CFDE F003          	movff	postinc2,___wmul@multiplicand
  8509  003D6A  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
  8510  003D6E  EC1C  F02F         	call	___wmul	;wreg free
  8511  003D72  C001  F007         	movff	?___wmul,___awdiv@dividend
  8512  003D76  C002  F008         	movff	?___wmul+1,___awdiv@dividend+1
  8513  003D7A  0E00               	movlw	0
  8514  003D7C  6E0A               	movwf	(___awdiv@divisor+1)^0,c
  8515  003D7E  0E64               	movlw	100
  8516  003D80  6E09               	movwf	___awdiv@divisor^0,c
  8517  003D82  ECD5  F02A         	call	___awdiv	;wreg free
  8518  003D86  EE20 F007          	lfsr	2,7
  8519  003D8A  500F               	movf	setMotorPWM@m^0,w,c
  8520  003D8C  26D9               	addwf	fsr2l,f,c
  8521  003D8E  5010               	movf	(setMotorPWM@m+1)^0,w,c
  8522  003D90  22DA               	addwfc	fsr2h,f,c
  8523  003D92  CFDE F012          	movff	postinc2,??_setMotorPWM+1
  8524  003D96  CFDD F013          	movff	postdec2,??_setMotorPWM+2
  8525  003D9A  5007               	movf	?___awdiv^0,w,c
  8526  003D9C  5C12               	subwf	(??_setMotorPWM+1)^0,w,c
  8527  003D9E  6E18               	movwf	setMotorPWM@PWMduty^0,c
  8528  003DA0  5008               	movf	(?___awdiv+1)^0,w,c
  8529  003DA2  5813               	subwfb	(??_setMotorPWM+2)^0,w,c
  8530  003DA4  6E19               	movwf	(setMotorPWM@PWMduty+1)^0,c
  8531                           
  8532                           ;dc_motor.c: 62:  }
  8533  003DA6  EFF8  F01E         	goto	l3660
  8534  003DAA                     l3658:
  8535                           
  8536                           ;dc_motor.c: 65:   PWMduty=((int)(m->power)*(m->PWMperiod))/100;
  8537  003DAA  C00F  FFD9         	movff	setMotorPWM@m,fsr2l
  8538  003DAE  C010  FFDA         	movff	setMotorPWM@m+1,fsr2h
  8539  003DB2  50DF               	movf	indf2,w,c
  8540  003DB4  6E11               	movwf	??_setMotorPWM^0,c
  8541  003DB6  5011               	movf	??_setMotorPWM^0,w,c
  8542  003DB8  6E01               	movwf	___wmul@multiplier^0,c
  8543  003DBA  6A02               	clrf	(___wmul@multiplier+1)^0,c
  8544  003DBC  EE20 F007          	lfsr	2,7
  8545  003DC0  500F               	movf	setMotorPWM@m^0,w,c
  8546  003DC2  26D9               	addwf	fsr2l,f,c
  8547  003DC4  5010               	movf	(setMotorPWM@m+1)^0,w,c
  8548  003DC6  22DA               	addwfc	fsr2h,f,c
  8549  003DC8  CFDE F003          	movff	postinc2,___wmul@multiplicand
  8550  003DCC  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
  8551  003DD0  EC1C  F02F         	call	___wmul	;wreg free
  8552  003DD4  C001  F007         	movff	?___wmul,___awdiv@dividend
  8553  003DD8  C002  F008         	movff	?___wmul+1,___awdiv@dividend+1
  8554  003DDC  0E00               	movlw	0
  8555  003DDE  6E0A               	movwf	(___awdiv@divisor+1)^0,c
  8556  003DE0  0E64               	movlw	100
  8557  003DE2  6E09               	movwf	___awdiv@divisor^0,c
  8558  003DE4  ECD5  F02A         	call	___awdiv	;wreg free
  8559  003DE8  C007  F018         	movff	?___awdiv,setMotorPWM@PWMduty
  8560  003DEC  C008  F019         	movff	?___awdiv+1,setMotorPWM@PWMduty+1
  8561  003DF0                     l3660:
  8562                           
  8563                           ;dc_motor.c: 67:  *(m->dutyHighByte) = PWMduty;
  8564  003DF0  EE20 F002          	lfsr	2,2
  8565  003DF4  500F               	movf	setMotorPWM@m^0,w,c
  8566  003DF6  26D9               	addwf	fsr2l,f,c
  8567  003DF8  5010               	movf	(setMotorPWM@m+1)^0,w,c
  8568  003DFA  22DA               	addwfc	fsr2h,f,c
  8569  003DFC  CFDE F011          	movff	postinc2,??_setMotorPWM
  8570  003E00  CFDD F012          	movff	postdec2,??_setMotorPWM+1
  8571  003E04  C011  FFD9         	movff	??_setMotorPWM,fsr2l
  8572  003E08  C012  FFDA         	movff	??_setMotorPWM+1,fsr2h
  8573  003E0C  C018  FFDF         	movff	setMotorPWM@PWMduty,indf2
  8574  003E10                     
  8575                           ;dc_motor.c: 68:  if (m->direction){
  8576  003E10  EE20 F001          	lfsr	2,1
  8577  003E14  500F               	movf	setMotorPWM@m^0,w,c
  8578  003E16  26D9               	addwf	fsr2l,f,c
  8579  003E18  5010               	movf	(setMotorPWM@m+1)^0,w,c
  8580  003E1A  22DA               	addwfc	fsr2h,f,c
  8581  003E1C  50DF               	movf	indf2,w,c
  8582  003E1E  B4D8               	btfsc	status,2,c
  8583  003E20  EF14  F01F         	goto	u3411
  8584  003E24  EF16  F01F         	goto	u3410
  8585  003E28                     u3411:
  8586  003E28  EF4B  F01F         	goto	l3666
  8587  003E2C                     u3410:
  8588  003E2C                     
  8589                           ;dc_motor.c: 69:   *(m->dir_LAT) = *(m->dir_LAT) | (1<<(m->dir_pin));
  8590  003E2C  EE20 F004          	lfsr	2,4
  8591  003E30  500F               	movf	setMotorPWM@m^0,w,c
  8592  003E32  26D9               	addwf	fsr2l,f,c
  8593  003E34  5010               	movf	(setMotorPWM@m+1)^0,w,c
  8594  003E36  22DA               	addwfc	fsr2h,f,c
  8595  003E38  CFDE F011          	movff	postinc2,??_setMotorPWM
  8596  003E3C  CFDD F012          	movff	postdec2,??_setMotorPWM+1
  8597  003E40  C011  FFD9         	movff	??_setMotorPWM,fsr2l
  8598  003E44  C012  FFDA         	movff	??_setMotorPWM+1,fsr2h
  8599  003E48  EE10 F004          	lfsr	1,4
  8600  003E4C  500F               	movf	setMotorPWM@m^0,w,c
  8601  003E4E  26E1               	addwf	fsr1l,f,c
  8602  003E50  5010               	movf	(setMotorPWM@m+1)^0,w,c
  8603  003E52  22E2               	addwfc	fsr1h,f,c
  8604  003E54  CFE6 F013          	movff	postinc1,??_setMotorPWM+2
  8605  003E58  CFE5 F014          	movff	postdec1,??_setMotorPWM+3
  8606  003E5C  C013  FFE1         	movff	??_setMotorPWM+2,fsr1l
  8607  003E60  C014  FFE2         	movff	??_setMotorPWM+3,fsr1h
  8608  003E64  50E7               	movf	indf1,w,c
  8609  003E66  6E15               	movwf	(??_setMotorPWM+4)^0,c
  8610  003E68  EE10 F006          	lfsr	1,6
  8611  003E6C  500F               	movf	setMotorPWM@m^0,w,c
  8612  003E6E  26E1               	addwf	fsr1l,f,c
  8613  003E70  5010               	movf	(setMotorPWM@m+1)^0,w,c
  8614  003E72  22E2               	addwfc	fsr1h,f,c
  8615  003E74  50E7               	movf	indf1,w,c
  8616  003E76  6E16               	movwf	(??_setMotorPWM+5)^0,c
  8617  003E78  0E01               	movlw	1
  8618  003E7A  6E17               	movwf	(??_setMotorPWM+6)^0,c
  8619  003E7C  2A16               	incf	(??_setMotorPWM+5)^0,f,c
  8620  003E7E  EF43  F01F         	goto	u3424
  8621  003E82                     u3425:
  8622  003E82  90D8               	bcf	status,0,c
  8623  003E84  3617               	rlcf	(??_setMotorPWM+6)^0,f,c
  8624  003E86                     u3424:
  8625  003E86  2E16               	decfsz	(??_setMotorPWM+5)^0,f,c
  8626  003E88  EF41  F01F         	goto	u3425
  8627  003E8C  5017               	movf	(??_setMotorPWM+6)^0,w,c
  8628  003E8E  1015               	iorwf	(??_setMotorPWM+4)^0,w,c
  8629  003E90  6EDF               	movwf	indf2,c
  8630                           
  8631                           ;dc_motor.c: 70:  } else {
  8632  003E92  EF7F  F01F         	goto	l259
  8633  003E96                     l3666:
  8634                           
  8635                           ;dc_motor.c: 71:   *(m->dir_LAT) = *(m->dir_LAT) & (~(1<<(m->dir_pin)));
  8636  003E96  EE20 F004          	lfsr	2,4
  8637  003E9A  500F               	movf	setMotorPWM@m^0,w,c
  8638  003E9C  26D9               	addwf	fsr2l,f,c
  8639  003E9E  5010               	movf	(setMotorPWM@m+1)^0,w,c
  8640  003EA0  22DA               	addwfc	fsr2h,f,c
  8641  003EA2  CFDE F011          	movff	postinc2,??_setMotorPWM
  8642  003EA6  CFDD F012          	movff	postdec2,??_setMotorPWM+1
  8643  003EAA  C011  FFD9         	movff	??_setMotorPWM,fsr2l
  8644  003EAE  C012  FFDA         	movff	??_setMotorPWM+1,fsr2h
  8645  003EB2  EE10 F004          	lfsr	1,4
  8646  003EB6  500F               	movf	setMotorPWM@m^0,w,c
  8647  003EB8  26E1               	addwf	fsr1l,f,c
  8648  003EBA  5010               	movf	(setMotorPWM@m+1)^0,w,c
  8649  003EBC  22E2               	addwfc	fsr1h,f,c
  8650  003EBE  CFE6 F013          	movff	postinc1,??_setMotorPWM+2
  8651  003EC2  CFE5 F014          	movff	postdec1,??_setMotorPWM+3
  8652  003EC6  C013  FFE1         	movff	??_setMotorPWM+2,fsr1l
  8653  003ECA  C014  FFE2         	movff	??_setMotorPWM+3,fsr1h
  8654  003ECE  50E7               	movf	indf1,w,c
  8655  003ED0  6E15               	movwf	(??_setMotorPWM+4)^0,c
  8656  003ED2  EE10 F006          	lfsr	1,6
  8657  003ED6  500F               	movf	setMotorPWM@m^0,w,c
  8658  003ED8  26E1               	addwf	fsr1l,f,c
  8659  003EDA  5010               	movf	(setMotorPWM@m+1)^0,w,c
  8660  003EDC  22E2               	addwfc	fsr1h,f,c
  8661  003EDE  50E7               	movf	indf1,w,c
  8662  003EE0  6E16               	movwf	(??_setMotorPWM+5)^0,c
  8663  003EE2  0E01               	movlw	1
  8664  003EE4  6E17               	movwf	(??_setMotorPWM+6)^0,c
  8665  003EE6  2A16               	incf	(??_setMotorPWM+5)^0,f,c
  8666  003EE8  EF78  F01F         	goto	u3434
  8667  003EEC                     u3435:
  8668  003EEC  90D8               	bcf	status,0,c
  8669  003EEE  3617               	rlcf	(??_setMotorPWM+6)^0,f,c
  8670  003EF0                     u3434:
  8671  003EF0  2E16               	decfsz	(??_setMotorPWM+5)^0,f,c
  8672  003EF2  EF76  F01F         	goto	u3435
  8673  003EF6  5017               	movf	(??_setMotorPWM+6)^0,w,c
  8674  003EF8  0AFF               	xorlw	255
  8675  003EFA  1415               	andwf	(??_setMotorPWM+4)^0,w,c
  8676  003EFC  6EDF               	movwf	indf2,c
  8677  003EFE                     l259:
  8678  003EFE  0012               	return		;funcret
  8679  003F00                     __end_of_setMotorPWM:
  8680                           	callstack 0
  8681                           
  8682 ;; *************** function ___wmul *****************
  8683 ;; Defined at:
  8684 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\Umul16.c"
  8685 ;; Parameters:    Size  Location     Type
  8686 ;;  multiplier      2    0[COMRAM] unsigned int 
  8687 ;;  multiplicand    2    2[COMRAM] unsigned int 
  8688 ;; Auto vars:     Size  Location     Type
  8689 ;;  product         2    4[COMRAM] unsigned int 
  8690 ;; Return value:  Size  Location     Type
  8691 ;;                  2    0[COMRAM] unsigned int 
  8692 ;; Registers used:
  8693 ;;		wreg, status,2, status,0, prodl, prodh
  8694 ;; Tracked objects:
  8695 ;;		On entry : 0/0
  8696 ;;		On exit  : 0/0
  8697 ;;		Unchanged: 0/0
  8698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8699 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8700 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8701 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8702 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8703 ;;Total ram usage:        6 bytes
  8704 ;; Hardware stack levels used: 1
  8705 ;; Hardware stack levels required when called: 1
  8706 ;; This function calls:
  8707 ;;		Nothing
  8708 ;; This function is called by:
  8709 ;;		_setMotorPWM
  8710 ;; This function uses a non-reentrant model
  8711 ;;
  8712                           
  8713                           	psect	text35
  8714  005E38                     __ptext35:
  8715                           	callstack 0
  8716  005E38                     ___wmul:
  8717                           	callstack 25
  8718  005E38  5001               	movf	___wmul@multiplier^0,w,c
  8719  005E3A  0203               	mulwf	___wmul@multiplicand^0,c
  8720  005E3C  CFF3 F005          	movff	prodl,___wmul@product
  8721  005E40  CFF4 F006          	movff	prodh,___wmul@product+1
  8722  005E44  5001               	movf	___wmul@multiplier^0,w,c
  8723  005E46  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  8724  005E48  50F3               	movf	243,w,c
  8725  005E4A  2606               	addwf	(___wmul@product+1)^0,f,c
  8726  005E4C  5002               	movf	(___wmul@multiplier+1)^0,w,c
  8727  005E4E  0203               	mulwf	___wmul@multiplicand^0,c
  8728  005E50  50F3               	movf	243,w,c
  8729  005E52  2606               	addwf	(___wmul@product+1)^0,f,c
  8730  005E54  C005  F001         	movff	___wmul@product,?___wmul
  8731  005E58  C006  F002         	movff	___wmul@product+1,?___wmul+1
  8732  005E5C  0012               	return		;funcret
  8733  005E5E                     __end_of___wmul:
  8734                           	callstack 0
  8735                           
  8736 ;; *************** function ___awdiv *****************
  8737 ;; Defined at:
  8738 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\awdiv.c"
  8739 ;; Parameters:    Size  Location     Type
  8740 ;;  dividend        2    6[COMRAM] int 
  8741 ;;  divisor         2    8[COMRAM] int 
  8742 ;; Auto vars:     Size  Location     Type
  8743 ;;  quotient        2   12[COMRAM] int 
  8744 ;;  sign            1   11[COMRAM] unsigned char 
  8745 ;;  counter         1   10[COMRAM] unsigned char 
  8746 ;; Return value:  Size  Location     Type
  8747 ;;                  2    6[COMRAM] int 
  8748 ;; Registers used:
  8749 ;;		wreg, status,2, status,0
  8750 ;; Tracked objects:
  8751 ;;		On entry : 0/0
  8752 ;;		On exit  : 0/0
  8753 ;;		Unchanged: 0/0
  8754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8755 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8756 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8757 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8758 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8759 ;;Total ram usage:        8 bytes
  8760 ;; Hardware stack levels used: 1
  8761 ;; Hardware stack levels required when called: 1
  8762 ;; This function calls:
  8763 ;;		Nothing
  8764 ;; This function is called by:
  8765 ;;		_setMotorPWM
  8766 ;; This function uses a non-reentrant model
  8767 ;;
  8768                           
  8769                           	psect	text36
  8770  0055AA                     __ptext36:
  8771                           	callstack 0
  8772  0055AA                     ___awdiv:
  8773                           	callstack 25
  8774  0055AA  0E00               	movlw	0
  8775  0055AC  6E0C               	movwf	___awdiv@sign^0,c
  8776  0055AE  BE0A               	btfsc	(___awdiv@divisor+1)^0,7,c
  8777  0055B0  EFDE  F02A         	goto	u3170
  8778  0055B4  EFDC  F02A         	goto	u3171
  8779  0055B8                     u3171:
  8780  0055B8  EFE4  F02A         	goto	l3552
  8781  0055BC                     u3170:
  8782  0055BC  6C09               	negf	___awdiv@divisor^0,c
  8783  0055BE  1E0A               	comf	(___awdiv@divisor+1)^0,f,c
  8784  0055C0  B0D8               	btfsc	status,0,c
  8785  0055C2  2A0A               	incf	(___awdiv@divisor+1)^0,f,c
  8786  0055C4  0E01               	movlw	1
  8787  0055C6  6E0C               	movwf	___awdiv@sign^0,c
  8788  0055C8                     l3552:
  8789  0055C8  BE08               	btfsc	(___awdiv@dividend+1)^0,7,c
  8790  0055CA  EFEB  F02A         	goto	u3180
  8791  0055CE  EFE9  F02A         	goto	u3181
  8792  0055D2                     u3181:
  8793  0055D2  EFF1  F02A         	goto	l3558
  8794  0055D6                     u3180:
  8795  0055D6  6C07               	negf	___awdiv@dividend^0,c
  8796  0055D8  1E08               	comf	(___awdiv@dividend+1)^0,f,c
  8797  0055DA  B0D8               	btfsc	status,0,c
  8798  0055DC  2A08               	incf	(___awdiv@dividend+1)^0,f,c
  8799  0055DE  0E01               	movlw	1
  8800  0055E0  1A0C               	xorwf	___awdiv@sign^0,f,c
  8801  0055E2                     l3558:
  8802  0055E2  0E00               	movlw	0
  8803  0055E4  6E0E               	movwf	(___awdiv@quotient+1)^0,c
  8804  0055E6  0E00               	movlw	0
  8805  0055E8  6E0D               	movwf	___awdiv@quotient^0,c
  8806  0055EA  5009               	movf	___awdiv@divisor^0,w,c
  8807  0055EC  100A               	iorwf	(___awdiv@divisor+1)^0,w,c
  8808  0055EE  B4D8               	btfsc	status,2,c
  8809  0055F0  EFFC  F02A         	goto	u3191
  8810  0055F4  EFFE  F02A         	goto	u3190
  8811  0055F8                     u3191:
  8812  0055F8  EF26  F02B         	goto	l3580
  8813  0055FC                     u3190:
  8814  0055FC  0E01               	movlw	1
  8815  0055FE  6E0B               	movwf	___awdiv@counter^0,c
  8816  005600  EF06  F02B         	goto	l3566
  8817  005604                     l3564:
  8818  005604  90D8               	bcf	status,0,c
  8819  005606  3609               	rlcf	___awdiv@divisor^0,f,c
  8820  005608  360A               	rlcf	(___awdiv@divisor+1)^0,f,c
  8821  00560A  2A0B               	incf	___awdiv@counter^0,f,c
  8822  00560C                     l3566:
  8823  00560C  AE0A               	btfss	(___awdiv@divisor+1)^0,7,c
  8824  00560E  EF0B  F02B         	goto	u3201
  8825  005612  EF0D  F02B         	goto	u3200
  8826  005616                     u3201:
  8827  005616  EF02  F02B         	goto	l3564
  8828  00561A                     u3200:
  8829  00561A                     l3568:
  8830  00561A  90D8               	bcf	status,0,c
  8831  00561C  360D               	rlcf	___awdiv@quotient^0,f,c
  8832  00561E  360E               	rlcf	(___awdiv@quotient+1)^0,f,c
  8833  005620  5009               	movf	___awdiv@divisor^0,w,c
  8834  005622  5C07               	subwf	___awdiv@dividend^0,w,c
  8835  005624  500A               	movf	(___awdiv@divisor+1)^0,w,c
  8836  005626  5808               	subwfb	(___awdiv@dividend+1)^0,w,c
  8837  005628  A0D8               	btfss	status,0,c
  8838  00562A  EF19  F02B         	goto	u3211
  8839  00562E  EF1B  F02B         	goto	u3210
  8840  005632                     u3211:
  8841  005632  EF20  F02B         	goto	l3576
  8842  005636                     u3210:
  8843  005636  5009               	movf	___awdiv@divisor^0,w,c
  8844  005638  5E07               	subwf	___awdiv@dividend^0,f,c
  8845  00563A  500A               	movf	(___awdiv@divisor+1)^0,w,c
  8846  00563C  5A08               	subwfb	(___awdiv@dividend+1)^0,f,c
  8847  00563E  800D               	bsf	___awdiv@quotient^0,0,c
  8848  005640                     l3576:
  8849  005640  90D8               	bcf	status,0,c
  8850  005642  320A               	rrcf	(___awdiv@divisor+1)^0,f,c
  8851  005644  3209               	rrcf	___awdiv@divisor^0,f,c
  8852  005646  2E0B               	decfsz	___awdiv@counter^0,f,c
  8853  005648  EF0D  F02B         	goto	l3568
  8854  00564C                     l3580:
  8855  00564C  500C               	movf	___awdiv@sign^0,w,c
  8856  00564E  B4D8               	btfsc	status,2,c
  8857  005650  EF2C  F02B         	goto	u3221
  8858  005654  EF2E  F02B         	goto	u3220
  8859  005658                     u3221:
  8860  005658  EF32  F02B         	goto	l3584
  8861  00565C                     u3220:
  8862  00565C  6C0D               	negf	___awdiv@quotient^0,c
  8863  00565E  1E0E               	comf	(___awdiv@quotient+1)^0,f,c
  8864  005660  B0D8               	btfsc	status,0,c
  8865  005662  2A0E               	incf	(___awdiv@quotient+1)^0,f,c
  8866  005664                     l3584:
  8867  005664  C00D  F007         	movff	___awdiv@quotient,?___awdiv
  8868  005668  C00E  F008         	movff	___awdiv@quotient+1,?___awdiv+1
  8869  00566C  0012               	return		;funcret
  8870  00566E                     __end_of___awdiv:
  8871                           	callstack 0
  8872                           
  8873 ;; *************** function _calibrate_white *****************
  8874 ;; Defined at:
  8875 ;;		line 306 in file "color.c"
  8876 ;; Parameters:    Size  Location     Type
  8877 ;;  w               2   11[COMRAM] PTR struct white_card
  8878 ;;		 -> main@white(28), 
  8879 ;; Auto vars:     Size  Location     Type
  8880 ;;		None
  8881 ;; Return value:  Size  Location     Type
  8882 ;;                  1    wreg      void 
  8883 ;; Registers used:
  8884 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8885 ;; Tracked objects:
  8886 ;;		On entry : 0/0
  8887 ;;		On exit  : 0/0
  8888 ;;		Unchanged: 0/0
  8889 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8890 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8891 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8892 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8893 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8894 ;;Total ram usage:        4 bytes
  8895 ;; Hardware stack levels used: 1
  8896 ;; Hardware stack levels required when called: 4
  8897 ;; This function calls:
  8898 ;;		_LED_B
  8899 ;;		_LED_C
  8900 ;;		_LED_G
  8901 ;;		_LED_OFF
  8902 ;;		_LED_R
  8903 ;;		_color_read_Blue
  8904 ;;		_color_read_Clear
  8905 ;;		_color_read_Green
  8906 ;;		_color_read_Red
  8907 ;;		_toggle_light
  8908 ;; This function is called by:
  8909 ;;		_setup
  8910 ;;		_test_function
  8911 ;; This function uses a non-reentrant model
  8912 ;;
  8913                           
  8914                           	psect	text37
  8915  003920                     __ptext37:
  8916                           	callstack 0
  8917  003920                     _calibrate_white:
  8918                           	callstack 25
  8919  003920                     
  8920                           ;color.c: 306: void calibrate_white(struct white_card *w);color.c: 307: {;color.c: 308: 
      +                              LED_OFF();
  8921  003920  EC3F  F02F         	call	_LED_OFF	;wreg free
  8922  003924                     
  8923                           ;color.c: 309:     toggle_light(1,2);
  8924  003924  0E02               	movlw	2
  8925  003926  6E01               	movwf	toggle_light@toggletime^0,c
  8926  003928  0E01               	movlw	1
  8927  00392A  EC3A  F01B         	call	_toggle_light
  8928  00392E                     
  8929                           ;color.c: 310:     _delay((unsigned long)((500)*(64000000/4000.0)));
  8930  00392E  0E29               	movlw	41
  8931  003930  6E0F               	movwf	(??_calibrate_white+1)^0,c
  8932  003932  0E96               	movlw	150
  8933  003934  6E0E               	movwf	??_calibrate_white^0,c
  8934  003936  0E7F               	movlw	127
  8935  003938                     u6227:
  8936  003938  2EE8               	decfsz	wreg,f,c
  8937  00393A  D7FE               	bra	u6227
  8938  00393C  2E0E               	decfsz	??_calibrate_white^0,f,c
  8939  00393E  D7FC               	bra	u6227
  8940  003940  2E0F               	decfsz	(??_calibrate_white+1)^0,f,c
  8941  003942  D7FA               	bra	u6227
  8942  003944  F000               	nop	
  8943  003946                     
  8944                           ;color.c: 312:     LED_R();
  8945  003946  EC2F  F02F         	call	_LED_R	;wreg free
  8946  00394A                     
  8947                           ;color.c: 313:     _delay((unsigned long)((100)*(64000000/4000.0)));
  8948  00394A  0E09               	movlw	9
  8949  00394C  6E0F               	movwf	(??_calibrate_white+1)^0,c
  8950  00394E  0E1E               	movlw	30
  8951  003950  6E0E               	movwf	??_calibrate_white^0,c
  8952  003952  0EE4               	movlw	228
  8953  003954                     u6237:
  8954  003954  2EE8               	decfsz	wreg,f,c
  8955  003956  D7FE               	bra	u6237
  8956  003958  2E0E               	decfsz	??_calibrate_white^0,f,c
  8957  00395A  D7FC               	bra	u6237
  8958  00395C  2E0F               	decfsz	(??_calibrate_white+1)^0,f,c
  8959  00395E  D7FA               	bra	u6237
  8960  003960  D000               	nop2	
  8961  003962                     
  8962                           ;color.c: 314:     w->RR = color_read_Red(); w->RG = color_read_Green(); w->RB = color_r
      +                          ead_Blue();
  8963  003962  EC9C  F02C         	call	_color_read_Red	;wreg free
  8964  003966  C00C  FFD9         	movff	calibrate_white@w,fsr2l
  8965  00396A  C00D  FFDA         	movff	calibrate_white@w+1,fsr2h
  8966  00396E  C005  FFDE         	movff	?_color_read_Red,postinc2
  8967  003972  C006  FFDD         	movff	?_color_read_Red+1,postdec2
  8968  003976  ECC4  F02C         	call	_color_read_Green	;wreg free
  8969  00397A  EE20 F002          	lfsr	2,2
  8970  00397E  500C               	movf	calibrate_white@w^0,w,c
  8971  003980  26D9               	addwf	fsr2l,f,c
  8972  003982  500D               	movf	(calibrate_white@w+1)^0,w,c
  8973  003984  22DA               	addwfc	fsr2h,f,c
  8974  003986  C005  FFDE         	movff	?_color_read_Green,postinc2
  8975  00398A  C006  FFDD         	movff	?_color_read_Green+1,postdec2
  8976  00398E  ECEC  F02C         	call	_color_read_Blue	;wreg free
  8977  003992  EE20 F004          	lfsr	2,4
  8978  003996  500C               	movf	calibrate_white@w^0,w,c
  8979  003998  26D9               	addwf	fsr2l,f,c
  8980  00399A  500D               	movf	(calibrate_white@w+1)^0,w,c
  8981  00399C  22DA               	addwfc	fsr2h,f,c
  8982  00399E  C005  FFDE         	movff	?_color_read_Blue,postinc2
  8983  0039A2  C006  FFDD         	movff	?_color_read_Blue+1,postdec2
  8984  0039A6                     
  8985                           ;color.c: 316:     LED_G();
  8986  0039A6  EC4F  F02F         	call	_LED_G	;wreg free
  8987  0039AA                     
  8988                           ;color.c: 317:     _delay((unsigned long)((100)*(64000000/4000.0)));
  8989  0039AA  0E09               	movlw	9
  8990  0039AC  6E0F               	movwf	(??_calibrate_white+1)^0,c
  8991  0039AE  0E1E               	movlw	30
  8992  0039B0  6E0E               	movwf	??_calibrate_white^0,c
  8993  0039B2  0EE4               	movlw	228
  8994  0039B4                     u6247:
  8995  0039B4  2EE8               	decfsz	wreg,f,c
  8996  0039B6  D7FE               	bra	u6247
  8997  0039B8  2E0E               	decfsz	??_calibrate_white^0,f,c
  8998  0039BA  D7FC               	bra	u6247
  8999  0039BC  2E0F               	decfsz	(??_calibrate_white+1)^0,f,c
  9000  0039BE  D7FA               	bra	u6247
  9001  0039C0  D000               	nop2	
  9002  0039C2                     
  9003                           ;color.c: 318:     w->GR = color_read_Red(); w->GG = color_read_Green(); w->GB = color_r
      +                          ead_Blue();
  9004  0039C2  EC9C  F02C         	call	_color_read_Red	;wreg free
  9005  0039C6  EE20 F006          	lfsr	2,6
  9006  0039CA  500C               	movf	calibrate_white@w^0,w,c
  9007  0039CC  26D9               	addwf	fsr2l,f,c
  9008  0039CE  500D               	movf	(calibrate_white@w+1)^0,w,c
  9009  0039D0  22DA               	addwfc	fsr2h,f,c
  9010  0039D2  C005  FFDE         	movff	?_color_read_Red,postinc2
  9011  0039D6  C006  FFDD         	movff	?_color_read_Red+1,postdec2
  9012  0039DA  ECC4  F02C         	call	_color_read_Green	;wreg free
  9013  0039DE  EE20 F008          	lfsr	2,8
  9014  0039E2  500C               	movf	calibrate_white@w^0,w,c
  9015  0039E4  26D9               	addwf	fsr2l,f,c
  9016  0039E6  500D               	movf	(calibrate_white@w+1)^0,w,c
  9017  0039E8  22DA               	addwfc	fsr2h,f,c
  9018  0039EA  C005  FFDE         	movff	?_color_read_Green,postinc2
  9019  0039EE  C006  FFDD         	movff	?_color_read_Green+1,postdec2
  9020  0039F2  ECEC  F02C         	call	_color_read_Blue	;wreg free
  9021  0039F6  EE20 F00A          	lfsr	2,10
  9022  0039FA  500C               	movf	calibrate_white@w^0,w,c
  9023  0039FC  26D9               	addwf	fsr2l,f,c
  9024  0039FE  500D               	movf	(calibrate_white@w+1)^0,w,c
  9025  003A00  22DA               	addwfc	fsr2h,f,c
  9026  003A02  C005  FFDE         	movff	?_color_read_Blue,postinc2
  9027  003A06  C006  FFDD         	movff	?_color_read_Blue+1,postdec2
  9028  003A0A                     
  9029                           ;color.c: 320:     LED_B();
  9030  003A0A  EC5F  F02F         	call	_LED_B	;wreg free
  9031  003A0E                     
  9032                           ;color.c: 321:     _delay((unsigned long)((100)*(64000000/4000.0)));
  9033  003A0E  0E09               	movlw	9
  9034  003A10  6E0F               	movwf	(??_calibrate_white+1)^0,c
  9035  003A12  0E1E               	movlw	30
  9036  003A14  6E0E               	movwf	??_calibrate_white^0,c
  9037  003A16  0EE4               	movlw	228
  9038  003A18                     u6257:
  9039  003A18  2EE8               	decfsz	wreg,f,c
  9040  003A1A  D7FE               	bra	u6257
  9041  003A1C  2E0E               	decfsz	??_calibrate_white^0,f,c
  9042  003A1E  D7FC               	bra	u6257
  9043  003A20  2E0F               	decfsz	(??_calibrate_white+1)^0,f,c
  9044  003A22  D7FA               	bra	u6257
  9045  003A24  D000               	nop2	
  9046  003A26                     
  9047                           ;color.c: 322:     w->BR = color_read_Red(); w->BG = color_read_Green(); w->BB = color_r
      +                          ead_Blue(); w->BC = color_read_Clear();
  9048  003A26  EC9C  F02C         	call	_color_read_Red	;wreg free
  9049  003A2A  EE20 F00C          	lfsr	2,12
  9050  003A2E  500C               	movf	calibrate_white@w^0,w,c
  9051  003A30  26D9               	addwf	fsr2l,f,c
  9052  003A32  500D               	movf	(calibrate_white@w+1)^0,w,c
  9053  003A34  22DA               	addwfc	fsr2h,f,c
  9054  003A36  C005  FFDE         	movff	?_color_read_Red,postinc2
  9055  003A3A  C006  FFDD         	movff	?_color_read_Red+1,postdec2
  9056  003A3E  ECC4  F02C         	call	_color_read_Green	;wreg free
  9057  003A42  EE20 F00E          	lfsr	2,14
  9058  003A46  500C               	movf	calibrate_white@w^0,w,c
  9059  003A48  26D9               	addwf	fsr2l,f,c
  9060  003A4A  500D               	movf	(calibrate_white@w+1)^0,w,c
  9061  003A4C  22DA               	addwfc	fsr2h,f,c
  9062  003A4E  C005  FFDE         	movff	?_color_read_Green,postinc2
  9063  003A52  C006  FFDD         	movff	?_color_read_Green+1,postdec2
  9064  003A56  ECEC  F02C         	call	_color_read_Blue	;wreg free
  9065  003A5A  EE20 F010          	lfsr	2,16
  9066  003A5E  500C               	movf	calibrate_white@w^0,w,c
  9067  003A60  26D9               	addwf	fsr2l,f,c
  9068  003A62  500D               	movf	(calibrate_white@w+1)^0,w,c
  9069  003A64  22DA               	addwfc	fsr2h,f,c
  9070  003A66  C005  FFDE         	movff	?_color_read_Blue,postinc2
  9071  003A6A  C006  FFDD         	movff	?_color_read_Blue+1,postdec2
  9072  003A6E  EC14  F02D         	call	_color_read_Clear	;wreg free
  9073  003A72  EE20 F01A          	lfsr	2,26
  9074  003A76  500C               	movf	calibrate_white@w^0,w,c
  9075  003A78  26D9               	addwf	fsr2l,f,c
  9076  003A7A  500D               	movf	(calibrate_white@w+1)^0,w,c
  9077  003A7C  22DA               	addwfc	fsr2h,f,c
  9078  003A7E  C005  FFDE         	movff	?_color_read_Clear,postinc2
  9079  003A82  C006  FFDD         	movff	?_color_read_Clear+1,postdec2
  9080  003A86                     
  9081                           ;color.c: 324:     LED_C();
  9082  003A86  EC6F  F02F         	call	_LED_C	;wreg free
  9083  003A8A                     
  9084                           ;color.c: 325:     _delay((unsigned long)((100)*(64000000/4000.0)));
  9085  003A8A  0E09               	movlw	9
  9086  003A8C  6E0F               	movwf	(??_calibrate_white+1)^0,c
  9087  003A8E  0E1E               	movlw	30
  9088  003A90  6E0E               	movwf	??_calibrate_white^0,c
  9089  003A92  0EE4               	movlw	228
  9090  003A94                     u6267:
  9091  003A94  2EE8               	decfsz	wreg,f,c
  9092  003A96  D7FE               	bra	u6267
  9093  003A98  2E0E               	decfsz	??_calibrate_white^0,f,c
  9094  003A9A  D7FC               	bra	u6267
  9095  003A9C  2E0F               	decfsz	(??_calibrate_white+1)^0,f,c
  9096  003A9E  D7FA               	bra	u6267
  9097  003AA0  D000               	nop2	
  9098  003AA2                     
  9099                           ;color.c: 326:     w->CR = color_read_Red(); w->CG = color_read_Green(); w->CB = color_r
      +                          ead_Blue(); w->CC = color_read_Clear();
  9100  003AA2  EC9C  F02C         	call	_color_read_Red	;wreg free
  9101  003AA6  EE20 F012          	lfsr	2,18
  9102  003AAA  500C               	movf	calibrate_white@w^0,w,c
  9103  003AAC  26D9               	addwf	fsr2l,f,c
  9104  003AAE  500D               	movf	(calibrate_white@w+1)^0,w,c
  9105  003AB0  22DA               	addwfc	fsr2h,f,c
  9106  003AB2  C005  FFDE         	movff	?_color_read_Red,postinc2
  9107  003AB6  C006  FFDD         	movff	?_color_read_Red+1,postdec2
  9108  003ABA  ECC4  F02C         	call	_color_read_Green	;wreg free
  9109  003ABE  EE20 F014          	lfsr	2,20
  9110  003AC2  500C               	movf	calibrate_white@w^0,w,c
  9111  003AC4  26D9               	addwf	fsr2l,f,c
  9112  003AC6  500D               	movf	(calibrate_white@w+1)^0,w,c
  9113  003AC8  22DA               	addwfc	fsr2h,f,c
  9114  003ACA  C005  FFDE         	movff	?_color_read_Green,postinc2
  9115  003ACE  C006  FFDD         	movff	?_color_read_Green+1,postdec2
  9116  003AD2  ECEC  F02C         	call	_color_read_Blue	;wreg free
  9117  003AD6  EE20 F016          	lfsr	2,22
  9118  003ADA  500C               	movf	calibrate_white@w^0,w,c
  9119  003ADC  26D9               	addwf	fsr2l,f,c
  9120  003ADE  500D               	movf	(calibrate_white@w+1)^0,w,c
  9121  003AE0  22DA               	addwfc	fsr2h,f,c
  9122  003AE2  C005  FFDE         	movff	?_color_read_Blue,postinc2
  9123  003AE6  C006  FFDD         	movff	?_color_read_Blue+1,postdec2
  9124  003AEA  EC14  F02D         	call	_color_read_Clear	;wreg free
  9125  003AEE  EE20 F018          	lfsr	2,24
  9126  003AF2  500C               	movf	calibrate_white@w^0,w,c
  9127  003AF4  26D9               	addwf	fsr2l,f,c
  9128  003AF6  500D               	movf	(calibrate_white@w+1)^0,w,c
  9129  003AF8  22DA               	addwfc	fsr2h,f,c
  9130  003AFA  C005  FFDE         	movff	?_color_read_Clear,postinc2
  9131  003AFE  C006  FFDD         	movff	?_color_read_Clear+1,postdec2
  9132  003B02                     
  9133                           ;color.c: 328:     LED_OFF();
  9134  003B02  EC3F  F02F         	call	_LED_OFF	;wreg free
  9135  003B06                     
  9136                           ;color.c: 329:     _delay((unsigned long)((500)*(64000000/4000.0)));
  9137  003B06  0E29               	movlw	41
  9138  003B08  6E0F               	movwf	(??_calibrate_white+1)^0,c
  9139  003B0A  0E96               	movlw	150
  9140  003B0C  6E0E               	movwf	??_calibrate_white^0,c
  9141  003B0E  0E7F               	movlw	127
  9142  003B10                     u6277:
  9143  003B10  2EE8               	decfsz	wreg,f,c
  9144  003B12  D7FE               	bra	u6277
  9145  003B14  2E0E               	decfsz	??_calibrate_white^0,f,c
  9146  003B16  D7FC               	bra	u6277
  9147  003B18  2E0F               	decfsz	(??_calibrate_white+1)^0,f,c
  9148  003B1A  D7FA               	bra	u6277
  9149  003B1C  F000               	nop	
  9150                           
  9151                           ;color.c: 330:     toggle_light(1,2);
  9152  003B1E  0E02               	movlw	2
  9153  003B20  6E01               	movwf	toggle_light@toggletime^0,c
  9154  003B22  0E01               	movlw	1
  9155  003B24  EC3A  F01B         	call	_toggle_light
  9156  003B28  0012               	return		;funcret
  9157  003B2A                     __end_of_calibrate_white:
  9158                           	callstack 0
  9159                           
  9160 ;; *************** function _color_read_Red *****************
  9161 ;; Defined at:
  9162 ;;		line 109 in file "color.c"
  9163 ;; Parameters:    Size  Location     Type
  9164 ;;		None
  9165 ;; Auto vars:     Size  Location     Type
  9166 ;;  tmp             2    9[COMRAM] unsigned int 
  9167 ;; Return value:  Size  Location     Type
  9168 ;;                  2    4[COMRAM] unsigned int 
  9169 ;; Registers used:
  9170 ;;		wreg, status,2, status,0, cstack
  9171 ;; Tracked objects:
  9172 ;;		On entry : 0/0
  9173 ;;		On exit  : 0/0
  9174 ;;		Unchanged: 0/0
  9175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9176 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9177 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9178 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9179 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9180 ;;Total ram usage:        7 bytes
  9181 ;; Hardware stack levels used: 1
  9182 ;; Hardware stack levels required when called: 3
  9183 ;; This function calls:
  9184 ;;		_I2C_2_Master_Read
  9185 ;;		_I2C_2_Master_RepStart
  9186 ;;		_I2C_2_Master_Start
  9187 ;;		_I2C_2_Master_Stop
  9188 ;;		_I2C_2_Master_Write
  9189 ;; This function is called by:
  9190 ;;		_read_color
  9191 ;;		_calibrate_white
  9192 ;; This function uses a non-reentrant model
  9193 ;;
  9194                           
  9195                           	psect	text38
  9196  005938                     __ptext38:
  9197                           	callstack 0
  9198  005938                     _color_read_Red:
  9199                           	callstack 24
  9200  005938                     
  9201                           ;color.c: 111:  unsigned int tmp;;color.c: 112:  I2C_2_Master_Start();
  9202  005938  ECCF  F02F         	call	_I2C_2_Master_Start	;wreg free
  9203                           
  9204                           ;color.c: 113:  I2C_2_Master_Write(0x52 | 0x00);
  9205  00593C  0E52               	movlw	82
  9206  00593E  ECB9  F02F         	call	_I2C_2_Master_Write
  9207                           
  9208                           ;color.c: 114:  I2C_2_Master_Write(0xA0 | 0x16);
  9209  005942  0EB6               	movlw	182
  9210  005944  ECB9  F02F         	call	_I2C_2_Master_Write
  9211                           
  9212                           ;color.c: 115:  I2C_2_Master_RepStart();
  9213  005948  ECC5  F02F         	call	_I2C_2_Master_RepStart	;wreg free
  9214                           
  9215                           ;color.c: 116:  I2C_2_Master_Write(0x52 | 0x01);
  9216  00594C  0E53               	movlw	83
  9217  00594E  ECB9  F02F         	call	_I2C_2_Master_Write
  9218                           
  9219                           ;color.c: 117:  tmp=I2C_2_Master_Read(1);
  9220  005952  0E01               	movlw	1
  9221  005954  ECA2  F02D         	call	_I2C_2_Master_Read
  9222  005958  6E07               	movwf	??_color_read_Red^0,c
  9223  00595A  5007               	movf	??_color_read_Red^0,w,c
  9224  00595C  6E0A               	movwf	color_read_Red@tmp^0,c
  9225  00595E  6A0B               	clrf	(color_read_Red@tmp+1)^0,c
  9226                           
  9227                           ;color.c: 118:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  9228  005960  0E00               	movlw	0
  9229  005962  ECA2  F02D         	call	_I2C_2_Master_Read
  9230  005966  6E07               	movwf	??_color_read_Red^0,c
  9231  005968  5007               	movf	??_color_read_Red^0,w,c
  9232  00596A  6E09               	movwf	(??_color_read_Red+2)^0,c
  9233  00596C  6A08               	clrf	(??_color_read_Red+1)^0,c
  9234  00596E  500A               	movf	color_read_Red@tmp^0,w,c
  9235  005970  1008               	iorwf	(??_color_read_Red+1)^0,w,c
  9236  005972  6E0A               	movwf	color_read_Red@tmp^0,c
  9237  005974  500B               	movf	(color_read_Red@tmp+1)^0,w,c
  9238  005976  1009               	iorwf	(??_color_read_Red+2)^0,w,c
  9239  005978  6E0B               	movwf	(color_read_Red@tmp+1)^0,c
  9240                           
  9241                           ;color.c: 119:  I2C_2_Master_Stop();
  9242  00597A  ECCA  F02F         	call	_I2C_2_Master_Stop	;wreg free
  9243  00597E                     
  9244                           ;color.c: 120:  return tmp;
  9245  00597E  C00A  F005         	movff	color_read_Red@tmp,?_color_read_Red
  9246  005982  C00B  F006         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  9247  005986  0012               	return		;funcret
  9248  005988                     __end_of_color_read_Red:
  9249                           	callstack 0
  9250                           
  9251 ;; *************** function _color_read_Green *****************
  9252 ;; Defined at:
  9253 ;;		line 137 in file "color.c"
  9254 ;; Parameters:    Size  Location     Type
  9255 ;;		None
  9256 ;; Auto vars:     Size  Location     Type
  9257 ;;  tmp             2    9[COMRAM] unsigned int 
  9258 ;; Return value:  Size  Location     Type
  9259 ;;                  2    4[COMRAM] unsigned int 
  9260 ;; Registers used:
  9261 ;;		wreg, status,2, status,0, cstack
  9262 ;; Tracked objects:
  9263 ;;		On entry : 0/0
  9264 ;;		On exit  : 0/0
  9265 ;;		Unchanged: 0/0
  9266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9267 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9268 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9269 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9270 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9271 ;;Total ram usage:        7 bytes
  9272 ;; Hardware stack levels used: 1
  9273 ;; Hardware stack levels required when called: 3
  9274 ;; This function calls:
  9275 ;;		_I2C_2_Master_Read
  9276 ;;		_I2C_2_Master_RepStart
  9277 ;;		_I2C_2_Master_Start
  9278 ;;		_I2C_2_Master_Stop
  9279 ;;		_I2C_2_Master_Write
  9280 ;; This function is called by:
  9281 ;;		_read_color
  9282 ;;		_calibrate_white
  9283 ;;		_detect_wall
  9284 ;; This function uses a non-reentrant model
  9285 ;;
  9286                           
  9287                           	psect	text39
  9288  005988                     __ptext39:
  9289                           	callstack 0
  9290  005988                     _color_read_Green:
  9291                           	callstack 24
  9292  005988                     
  9293                           ;color.c: 139:  unsigned int tmp;;color.c: 140:  I2C_2_Master_Start();
  9294  005988  ECCF  F02F         	call	_I2C_2_Master_Start	;wreg free
  9295                           
  9296                           ;color.c: 141:  I2C_2_Master_Write(0x52 | 0x00);
  9297  00598C  0E52               	movlw	82
  9298  00598E  ECB9  F02F         	call	_I2C_2_Master_Write
  9299                           
  9300                           ;color.c: 142:  I2C_2_Master_Write(0xA0 | 0x18);
  9301  005992  0EB8               	movlw	184
  9302  005994  ECB9  F02F         	call	_I2C_2_Master_Write
  9303                           
  9304                           ;color.c: 143:  I2C_2_Master_RepStart();
  9305  005998  ECC5  F02F         	call	_I2C_2_Master_RepStart	;wreg free
  9306                           
  9307                           ;color.c: 144:  I2C_2_Master_Write(0x52 | 0x01);
  9308  00599C  0E53               	movlw	83
  9309  00599E  ECB9  F02F         	call	_I2C_2_Master_Write
  9310                           
  9311                           ;color.c: 145:  tmp=I2C_2_Master_Read(1);
  9312  0059A2  0E01               	movlw	1
  9313  0059A4  ECA2  F02D         	call	_I2C_2_Master_Read
  9314  0059A8  6E07               	movwf	??_color_read_Green^0,c
  9315  0059AA  5007               	movf	??_color_read_Green^0,w,c
  9316  0059AC  6E0A               	movwf	color_read_Green@tmp^0,c
  9317  0059AE  6A0B               	clrf	(color_read_Green@tmp+1)^0,c
  9318                           
  9319                           ;color.c: 146:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  9320  0059B0  0E00               	movlw	0
  9321  0059B2  ECA2  F02D         	call	_I2C_2_Master_Read
  9322  0059B6  6E07               	movwf	??_color_read_Green^0,c
  9323  0059B8  5007               	movf	??_color_read_Green^0,w,c
  9324  0059BA  6E09               	movwf	(??_color_read_Green+2)^0,c
  9325  0059BC  6A08               	clrf	(??_color_read_Green+1)^0,c
  9326  0059BE  500A               	movf	color_read_Green@tmp^0,w,c
  9327  0059C0  1008               	iorwf	(??_color_read_Green+1)^0,w,c
  9328  0059C2  6E0A               	movwf	color_read_Green@tmp^0,c
  9329  0059C4  500B               	movf	(color_read_Green@tmp+1)^0,w,c
  9330  0059C6  1009               	iorwf	(??_color_read_Green+2)^0,w,c
  9331  0059C8  6E0B               	movwf	(color_read_Green@tmp+1)^0,c
  9332                           
  9333                           ;color.c: 147:  I2C_2_Master_Stop();
  9334  0059CA  ECCA  F02F         	call	_I2C_2_Master_Stop	;wreg free
  9335  0059CE                     
  9336                           ;color.c: 148:  return tmp;
  9337  0059CE  C00A  F005         	movff	color_read_Green@tmp,?_color_read_Green
  9338  0059D2  C00B  F006         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  9339  0059D6  0012               	return		;funcret
  9340  0059D8                     __end_of_color_read_Green:
  9341                           	callstack 0
  9342                           
  9343 ;; *************** function _color_read_Blue *****************
  9344 ;; Defined at:
  9345 ;;		line 123 in file "color.c"
  9346 ;; Parameters:    Size  Location     Type
  9347 ;;		None
  9348 ;; Auto vars:     Size  Location     Type
  9349 ;;  tmp             2    9[COMRAM] unsigned int 
  9350 ;; Return value:  Size  Location     Type
  9351 ;;                  2    4[COMRAM] unsigned int 
  9352 ;; Registers used:
  9353 ;;		wreg, status,2, status,0, cstack
  9354 ;; Tracked objects:
  9355 ;;		On entry : 0/0
  9356 ;;		On exit  : 0/0
  9357 ;;		Unchanged: 0/0
  9358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9359 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9360 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9361 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9362 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9363 ;;Total ram usage:        7 bytes
  9364 ;; Hardware stack levels used: 1
  9365 ;; Hardware stack levels required when called: 3
  9366 ;; This function calls:
  9367 ;;		_I2C_2_Master_Read
  9368 ;;		_I2C_2_Master_RepStart
  9369 ;;		_I2C_2_Master_Start
  9370 ;;		_I2C_2_Master_Stop
  9371 ;;		_I2C_2_Master_Write
  9372 ;; This function is called by:
  9373 ;;		_read_color
  9374 ;;		_calibrate_white
  9375 ;; This function uses a non-reentrant model
  9376 ;;
  9377                           
  9378                           	psect	text40
  9379  0059D8                     __ptext40:
  9380                           	callstack 0
  9381  0059D8                     _color_read_Blue:
  9382                           	callstack 24
  9383  0059D8                     
  9384                           ;color.c: 125:  unsigned int tmp;;color.c: 126:  I2C_2_Master_Start();
  9385  0059D8  ECCF  F02F         	call	_I2C_2_Master_Start	;wreg free
  9386                           
  9387                           ;color.c: 127:  I2C_2_Master_Write(0x52 | 0x00);
  9388  0059DC  0E52               	movlw	82
  9389  0059DE  ECB9  F02F         	call	_I2C_2_Master_Write
  9390                           
  9391                           ;color.c: 128:  I2C_2_Master_Write(0xA0 | 0x1A);
  9392  0059E2  0EBA               	movlw	186
  9393  0059E4  ECB9  F02F         	call	_I2C_2_Master_Write
  9394                           
  9395                           ;color.c: 129:  I2C_2_Master_RepStart();
  9396  0059E8  ECC5  F02F         	call	_I2C_2_Master_RepStart	;wreg free
  9397                           
  9398                           ;color.c: 130:  I2C_2_Master_Write(0x52 | 0x01);
  9399  0059EC  0E53               	movlw	83
  9400  0059EE  ECB9  F02F         	call	_I2C_2_Master_Write
  9401                           
  9402                           ;color.c: 131:  tmp=I2C_2_Master_Read(1);
  9403  0059F2  0E01               	movlw	1
  9404  0059F4  ECA2  F02D         	call	_I2C_2_Master_Read
  9405  0059F8  6E07               	movwf	??_color_read_Blue^0,c
  9406  0059FA  5007               	movf	??_color_read_Blue^0,w,c
  9407  0059FC  6E0A               	movwf	color_read_Blue@tmp^0,c
  9408  0059FE  6A0B               	clrf	(color_read_Blue@tmp+1)^0,c
  9409                           
  9410                           ;color.c: 132:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  9411  005A00  0E00               	movlw	0
  9412  005A02  ECA2  F02D         	call	_I2C_2_Master_Read
  9413  005A06  6E07               	movwf	??_color_read_Blue^0,c
  9414  005A08  5007               	movf	??_color_read_Blue^0,w,c
  9415  005A0A  6E09               	movwf	(??_color_read_Blue+2)^0,c
  9416  005A0C  6A08               	clrf	(??_color_read_Blue+1)^0,c
  9417  005A0E  500A               	movf	color_read_Blue@tmp^0,w,c
  9418  005A10  1008               	iorwf	(??_color_read_Blue+1)^0,w,c
  9419  005A12  6E0A               	movwf	color_read_Blue@tmp^0,c
  9420  005A14  500B               	movf	(color_read_Blue@tmp+1)^0,w,c
  9421  005A16  1009               	iorwf	(??_color_read_Blue+2)^0,w,c
  9422  005A18  6E0B               	movwf	(color_read_Blue@tmp+1)^0,c
  9423                           
  9424                           ;color.c: 133:  I2C_2_Master_Stop();
  9425  005A1A  ECCA  F02F         	call	_I2C_2_Master_Stop	;wreg free
  9426  005A1E                     
  9427                           ;color.c: 134:  return tmp;
  9428  005A1E  C00A  F005         	movff	color_read_Blue@tmp,?_color_read_Blue
  9429  005A22  C00B  F006         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  9430  005A26  0012               	return		;funcret
  9431  005A28                     __end_of_color_read_Blue:
  9432                           	callstack 0
  9433                           
  9434 ;; *************** function _LED_R *****************
  9435 ;; Defined at:
  9436 ;;		line 184 in file "color.c"
  9437 ;; Parameters:    Size  Location     Type
  9438 ;;		None
  9439 ;; Auto vars:     Size  Location     Type
  9440 ;;		None
  9441 ;; Return value:  Size  Location     Type
  9442 ;;                  1    wreg      void 
  9443 ;; Registers used:
  9444 ;;		wreg
  9445 ;; Tracked objects:
  9446 ;;		On entry : 0/0
  9447 ;;		On exit  : 0/0
  9448 ;;		Unchanged: 0/0
  9449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9450 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9451 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9452 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9453 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9454 ;;Total ram usage:        2 bytes
  9455 ;; Hardware stack levels used: 1
  9456 ;; Hardware stack levels required when called: 1
  9457 ;; This function calls:
  9458 ;;		Nothing
  9459 ;; This function is called by:
  9460 ;;		_detect_color
  9461 ;;		_calibrate_white
  9462 ;;		_color_data_collection
  9463 ;; This function uses a non-reentrant model
  9464 ;;
  9465                           
  9466                           	psect	text41
  9467  005E5E                     __ptext41:
  9468                           	callstack 0
  9469  005E5E                     _LED_R:
  9470                           	callstack 27
  9471  005E5E                     
  9472                           ;color.c: 186:     LATGbits.LATG1 = 1;
  9473  005E5E  827F               	bsf	127,1,c	;volatile
  9474                           
  9475                           ;color.c: 187:     LATFbits.LATF7 = 0;
  9476  005E60  9E7E               	bcf	126,7,c	;volatile
  9477                           
  9478                           ;color.c: 188:     LATAbits.LATA4 = 0;
  9479  005E62  9879               	bcf	121,4,c	;volatile
  9480  005E64                     
  9481                           ;color.c: 189:     _delay((unsigned long)((200)*(64000000/4000.0)));
  9482  005E64  0E11               	movlw	17
  9483  005E66  6E02               	movwf	(??_LED_R+1)^0,c
  9484  005E68  0E3C               	movlw	60
  9485  005E6A  6E01               	movwf	??_LED_R^0,c
  9486  005E6C  0ECB               	movlw	203
  9487  005E6E                     u6287:
  9488  005E6E  2EE8               	decfsz	wreg,f,c
  9489  005E70  D7FE               	bra	u6287
  9490  005E72  2E01               	decfsz	??_LED_R^0,f,c
  9491  005E74  D7FC               	bra	u6287
  9492  005E76  2E02               	decfsz	(??_LED_R+1)^0,f,c
  9493  005E78  D7FA               	bra	u6287
  9494  005E7A  F000               	nop	
  9495  005E7C  0012               	return		;funcret
  9496  005E7E                     __end_of_LED_R:
  9497                           	callstack 0
  9498                           
  9499 ;; *************** function _LED_OFF *****************
  9500 ;; Defined at:
  9501 ;;		line 175 in file "color.c"
  9502 ;; Parameters:    Size  Location     Type
  9503 ;;		None
  9504 ;; Auto vars:     Size  Location     Type
  9505 ;;		None
  9506 ;; Return value:  Size  Location     Type
  9507 ;;                  1    wreg      void 
  9508 ;; Registers used:
  9509 ;;		wreg
  9510 ;; Tracked objects:
  9511 ;;		On entry : 0/0
  9512 ;;		On exit  : 0/0
  9513 ;;		Unchanged: 0/0
  9514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9515 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9516 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9517 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9518 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9519 ;;Total ram usage:        2 bytes
  9520 ;; Hardware stack levels used: 1
  9521 ;; Hardware stack levels required when called: 1
  9522 ;; This function calls:
  9523 ;;		Nothing
  9524 ;; This function is called by:
  9525 ;;		_calibrate_white
  9526 ;;		_setup
  9527 ;; This function uses a non-reentrant model
  9528 ;;
  9529                           
  9530                           	psect	text42
  9531  005E7E                     __ptext42:
  9532                           	callstack 0
  9533  005E7E                     _LED_OFF:
  9534                           	callstack 27
  9535  005E7E                     
  9536                           ;color.c: 177:     LATGbits.LATG1 = 0;
  9537  005E7E  927F               	bcf	127,1,c	;volatile
  9538                           
  9539                           ;color.c: 178:     LATFbits.LATF7 = 0;
  9540  005E80  9E7E               	bcf	126,7,c	;volatile
  9541                           
  9542                           ;color.c: 179:     LATAbits.LATA4 = 0;
  9543  005E82  9879               	bcf	121,4,c	;volatile
  9544  005E84                     
  9545                           ;color.c: 180:     _delay((unsigned long)((200)*(64000000/4000.0)));
  9546  005E84  0E11               	movlw	17
  9547  005E86  6E02               	movwf	(??_LED_OFF+1)^0,c
  9548  005E88  0E3C               	movlw	60
  9549  005E8A  6E01               	movwf	??_LED_OFF^0,c
  9550  005E8C  0ECB               	movlw	203
  9551  005E8E                     u6297:
  9552  005E8E  2EE8               	decfsz	wreg,f,c
  9553  005E90  D7FE               	bra	u6297
  9554  005E92  2E01               	decfsz	??_LED_OFF^0,f,c
  9555  005E94  D7FC               	bra	u6297
  9556  005E96  2E02               	decfsz	(??_LED_OFF+1)^0,f,c
  9557  005E98  D7FA               	bra	u6297
  9558  005E9A  F000               	nop	
  9559  005E9C  0012               	return		;funcret
  9560  005E9E                     __end_of_LED_OFF:
  9561                           	callstack 0
  9562                           
  9563 ;; *************** function _LED_G *****************
  9564 ;; Defined at:
  9565 ;;		line 211 in file "color.c"
  9566 ;; Parameters:    Size  Location     Type
  9567 ;;		None
  9568 ;; Auto vars:     Size  Location     Type
  9569 ;;		None
  9570 ;; Return value:  Size  Location     Type
  9571 ;;                  1    wreg      void 
  9572 ;; Registers used:
  9573 ;;		wreg
  9574 ;; Tracked objects:
  9575 ;;		On entry : 0/0
  9576 ;;		On exit  : 0/0
  9577 ;;		Unchanged: 0/0
  9578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9579 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9580 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9581 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9582 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9583 ;;Total ram usage:        2 bytes
  9584 ;; Hardware stack levels used: 1
  9585 ;; Hardware stack levels required when called: 1
  9586 ;; This function calls:
  9587 ;;		Nothing
  9588 ;; This function is called by:
  9589 ;;		_detect_color
  9590 ;;		_calibrate_white
  9591 ;;		_color_data_collection
  9592 ;; This function uses a non-reentrant model
  9593 ;;
  9594                           
  9595                           	psect	text43
  9596  005E9E                     __ptext43:
  9597                           	callstack 0
  9598  005E9E                     _LED_G:
  9599                           	callstack 27
  9600  005E9E                     
  9601                           ;color.c: 213:     LATGbits.LATG1 = 0;
  9602  005E9E  927F               	bcf	127,1,c	;volatile
  9603                           
  9604                           ;color.c: 214:     LATFbits.LATF7 = 0;
  9605  005EA0  9E7E               	bcf	126,7,c	;volatile
  9606                           
  9607                           ;color.c: 215:     LATAbits.LATA4 = 1;
  9608  005EA2  8879               	bsf	121,4,c	;volatile
  9609  005EA4                     
  9610                           ;color.c: 216:     _delay((unsigned long)((200)*(64000000/4000.0)));
  9611  005EA4  0E11               	movlw	17
  9612  005EA6  6E02               	movwf	(??_LED_G+1)^0,c
  9613  005EA8  0E3C               	movlw	60
  9614  005EAA  6E01               	movwf	??_LED_G^0,c
  9615  005EAC  0ECB               	movlw	203
  9616  005EAE                     u6307:
  9617  005EAE  2EE8               	decfsz	wreg,f,c
  9618  005EB0  D7FE               	bra	u6307
  9619  005EB2  2E01               	decfsz	??_LED_G^0,f,c
  9620  005EB4  D7FC               	bra	u6307
  9621  005EB6  2E02               	decfsz	(??_LED_G+1)^0,f,c
  9622  005EB8  D7FA               	bra	u6307
  9623  005EBA  F000               	nop	
  9624  005EBC  0012               	return		;funcret
  9625  005EBE                     __end_of_LED_G:
  9626                           	callstack 0
  9627                           
  9628 ;; *************** function _LED_B *****************
  9629 ;; Defined at:
  9630 ;;		line 202 in file "color.c"
  9631 ;; Parameters:    Size  Location     Type
  9632 ;;		None
  9633 ;; Auto vars:     Size  Location     Type
  9634 ;;		None
  9635 ;; Return value:  Size  Location     Type
  9636 ;;                  1    wreg      void 
  9637 ;; Registers used:
  9638 ;;		wreg
  9639 ;; Tracked objects:
  9640 ;;		On entry : 0/0
  9641 ;;		On exit  : 0/0
  9642 ;;		Unchanged: 0/0
  9643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9644 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9645 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9646 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9647 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9648 ;;Total ram usage:        2 bytes
  9649 ;; Hardware stack levels used: 1
  9650 ;; Hardware stack levels required when called: 1
  9651 ;; This function calls:
  9652 ;;		Nothing
  9653 ;; This function is called by:
  9654 ;;		_detect_color
  9655 ;;		_calibrate_white
  9656 ;;		_color_data_collection
  9657 ;; This function uses a non-reentrant model
  9658 ;;
  9659                           
  9660                           	psect	text44
  9661  005EBE                     __ptext44:
  9662                           	callstack 0
  9663  005EBE                     _LED_B:
  9664                           	callstack 27
  9665  005EBE                     
  9666                           ;color.c: 204:     LATGbits.LATG1 = 0;
  9667  005EBE  927F               	bcf	127,1,c	;volatile
  9668                           
  9669                           ;color.c: 205:     LATFbits.LATF7 = 1;
  9670  005EC0  8E7E               	bsf	126,7,c	;volatile
  9671                           
  9672                           ;color.c: 206:     LATAbits.LATA4 = 0;
  9673  005EC2  9879               	bcf	121,4,c	;volatile
  9674  005EC4                     
  9675                           ;color.c: 207:     _delay((unsigned long)((200)*(64000000/4000.0)));
  9676  005EC4  0E11               	movlw	17
  9677  005EC6  6E02               	movwf	(??_LED_B+1)^0,c
  9678  005EC8  0E3C               	movlw	60
  9679  005ECA  6E01               	movwf	??_LED_B^0,c
  9680  005ECC  0ECB               	movlw	203
  9681  005ECE                     u6317:
  9682  005ECE  2EE8               	decfsz	wreg,f,c
  9683  005ED0  D7FE               	bra	u6317
  9684  005ED2  2E01               	decfsz	??_LED_B^0,f,c
  9685  005ED4  D7FC               	bra	u6317
  9686  005ED6  2E02               	decfsz	(??_LED_B+1)^0,f,c
  9687  005ED8  D7FA               	bra	u6317
  9688  005EDA  F000               	nop	
  9689  005EDC  0012               	return		;funcret
  9690  005EDE                     __end_of_LED_B:
  9691                           	callstack 0
  9692                           
  9693 ;; *************** function _amb_light_measure *****************
  9694 ;; Defined at:
  9695 ;;		line 384 in file "color.c"
  9696 ;; Parameters:    Size  Location     Type
  9697 ;;  amb             2   10[BANK0 ] PTR struct color_rgb
  9698 ;;		 -> main@rgb(8), main@amb(8), 
  9699 ;; Auto vars:     Size  Location     Type
  9700 ;;  CC_amb_3        2   22[BANK0 ] unsigned int 
  9701 ;;  CC_amb_2        2   20[BANK0 ] unsigned int 
  9702 ;;  CC_amb_1        2   18[BANK0 ] unsigned int 
  9703 ;;  CC_amb_ave      2   16[BANK0 ] unsigned int 
  9704 ;;  upper_bound     2   14[BANK0 ] unsigned int 
  9705 ;; Return value:  Size  Location     Type
  9706 ;;                  2   10[BANK0 ] unsigned int 
  9707 ;; Registers used:
  9708 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  9709 ;; Tracked objects:
  9710 ;;		On entry : 0/0
  9711 ;;		On exit  : 0/0
  9712 ;;		Unchanged: 0/0
  9713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9714 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9715 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9716 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9717 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9718 ;;Total ram usage:       14 bytes
  9719 ;; Hardware stack levels used: 1
  9720 ;; Hardware stack levels required when called: 5
  9721 ;; This function calls:
  9722 ;;		_LED_C
  9723 ;;		___fldiv
  9724 ;;		___xxtofl
  9725 ;;		_color_read_Clear
  9726 ;;		_lroundf
  9727 ;;		_toggle_light
  9728 ;; This function is called by:
  9729 ;;		_setup
  9730 ;;		_test_function
  9731 ;; This function uses a non-reentrant model
  9732 ;;
  9733                           
  9734                           	psect	text45
  9735  004C8E                     __ptext45:
  9736                           	callstack 0
  9737  004C8E                     _amb_light_measure:
  9738                           	callstack 24
  9739  004C8E  0E00               	movlw	0
  9740  004C90  0100               	movlb	0	; () banked
  9741  004C92  6F75               	movwf	(amb_light_measure@CC_amb_2+1)& (0+255),b
  9742  004C94  0E00               	movlw	0
  9743  004C96  6F74               	movwf	amb_light_measure@CC_amb_2& (0+255),b
  9744  004C98  0E00               	movlw	0
  9745  004C9A  6F77               	movwf	(amb_light_measure@CC_amb_3+1)& (0+255),b
  9746  004C9C  0E00               	movlw	0
  9747  004C9E  6F76               	movwf	amb_light_measure@CC_amb_3& (0+255),b
  9748  004CA0  0E00               	movlw	0
  9749  004CA2  6F6F               	movwf	(amb_light_measure@upper_bound+1)& (0+255),b
  9750  004CA4  0E00               	movlw	0
  9751  004CA6  6F6E               	movwf	amb_light_measure@upper_bound& (0+255),b
  9752  004CA8                     
  9753                           ; BSR set to: 0
  9754                           ;color.c: 387:     toggle_light(2,2);
  9755  004CA8  0E02               	movlw	2
  9756  004CAA  6E01               	movwf	toggle_light@toggletime^0,c
  9757  004CAC  0E02               	movlw	2
  9758  004CAE  EC3A  F01B         	call	_toggle_light
  9759  004CB2                     
  9760                           ;color.c: 388:     LED_C();
  9761  004CB2  EC6F  F02F         	call	_LED_C	;wreg free
  9762  004CB6                     
  9763                           ;color.c: 389:     _delay((unsigned long)((500)*(64000000/4000.0)));
  9764  004CB6  0E29               	movlw	41
  9765  004CB8  0100               	movlb	0	; () banked
  9766  004CBA  6F6D               	movwf	(??_amb_light_measure+1)& (0+255),b
  9767  004CBC  0E96               	movlw	150
  9768  004CBE  6F6C               	movwf	??_amb_light_measure& (0+255),b
  9769  004CC0  0E7F               	movlw	127
  9770  004CC2                     u6327:
  9771  004CC2  2EE8               	decfsz	wreg,f,c
  9772  004CC4  D7FE               	bra	u6327
  9773  004CC6  2F6C               	decfsz	??_amb_light_measure& (0+255),f,b
  9774  004CC8  D7FC               	bra	u6327
  9775  004CCA  2F6D               	decfsz	(??_amb_light_measure+1)& (0+255),f,b
  9776  004CCC  D7FA               	bra	u6327
  9777  004CCE                     
  9778                           ;color.c: 391:     CC_amb_1 = color_read_Clear();
  9779  004CCE  EC14  F02D         	call	_color_read_Clear	;wreg free
  9780  004CD2  C005  F072         	movff	?_color_read_Clear,amb_light_measure@CC_amb_1
  9781  004CD6  C006  F073         	movff	?_color_read_Clear+1,amb_light_measure@CC_amb_1+1
  9782  004CDA                     
  9783                           ;color.c: 392:     _delay((unsigned long)((200)*(64000000/4000.0)));
  9784  004CDA  0E11               	movlw	17
  9785  004CDC  0100               	movlb	0	; () banked
  9786  004CDE  6F6D               	movwf	(??_amb_light_measure+1)& (0+255),b
  9787  004CE0  0E3C               	movlw	60
  9788  004CE2  6F6C               	movwf	??_amb_light_measure& (0+255),b
  9789  004CE4  0ECB               	movlw	203
  9790  004CE6                     u6337:
  9791  004CE6  2EE8               	decfsz	wreg,f,c
  9792  004CE8  D7FE               	bra	u6337
  9793  004CEA  2F6C               	decfsz	??_amb_light_measure& (0+255),f,b
  9794  004CEC  D7FC               	bra	u6337
  9795  004CEE  2F6D               	decfsz	(??_amb_light_measure+1)& (0+255),f,b
  9796  004CF0  D7FA               	bra	u6337
  9797  004CF2                     
  9798                           ;color.c: 394:     CC_amb_2 = color_read_Clear();
  9799  004CF2  EC14  F02D         	call	_color_read_Clear	;wreg free
  9800  004CF6  C005  F074         	movff	?_color_read_Clear,amb_light_measure@CC_amb_2
  9801  004CFA  C006  F075         	movff	?_color_read_Clear+1,amb_light_measure@CC_amb_2+1
  9802  004CFE                     
  9803                           ;color.c: 395:     _delay((unsigned long)((200)*(64000000/4000.0)));
  9804  004CFE  0E11               	movlw	17
  9805  004D00  0100               	movlb	0	; () banked
  9806  004D02  6F6D               	movwf	(??_amb_light_measure+1)& (0+255),b
  9807  004D04  0E3C               	movlw	60
  9808  004D06  6F6C               	movwf	??_amb_light_measure& (0+255),b
  9809  004D08  0ECB               	movlw	203
  9810  004D0A                     u6347:
  9811  004D0A  2EE8               	decfsz	wreg,f,c
  9812  004D0C  D7FE               	bra	u6347
  9813  004D0E  2F6C               	decfsz	??_amb_light_measure& (0+255),f,b
  9814  004D10  D7FC               	bra	u6347
  9815  004D12  2F6D               	decfsz	(??_amb_light_measure+1)& (0+255),f,b
  9816  004D14  D7FA               	bra	u6347
  9817  004D16                     
  9818                           ;color.c: 397:     CC_amb_3 = color_read_Clear();
  9819  004D16  EC14  F02D         	call	_color_read_Clear	;wreg free
  9820  004D1A  C005  F076         	movff	?_color_read_Clear,amb_light_measure@CC_amb_3
  9821  004D1E  C006  F077         	movff	?_color_read_Clear+1,amb_light_measure@CC_amb_3+1
  9822  004D22                     
  9823                           ;color.c: 398:     _delay((unsigned long)((200)*(64000000/4000.0)));
  9824  004D22  0E11               	movlw	17
  9825  004D24  0100               	movlb	0	; () banked
  9826  004D26  6F6D               	movwf	(??_amb_light_measure+1)& (0+255),b
  9827  004D28  0E3C               	movlw	60
  9828  004D2A  6F6C               	movwf	??_amb_light_measure& (0+255),b
  9829  004D2C  0ECB               	movlw	203
  9830  004D2E                     u6357:
  9831  004D2E  2EE8               	decfsz	wreg,f,c
  9832  004D30  D7FE               	bra	u6357
  9833  004D32  2F6C               	decfsz	??_amb_light_measure& (0+255),f,b
  9834  004D34  D7FC               	bra	u6357
  9835  004D36  2F6D               	decfsz	(??_amb_light_measure+1)& (0+255),f,b
  9836  004D38  D7FA               	bra	u6357
  9837  004D3A                     
  9838                           ;color.c: 400:     CC_amb_ave = lroundf((float)(CC_amb_1 + CC_amb_2 + CC_amb_3)/3);
  9839  004D3A  0100               	movlb	0	; () banked
  9840  004D3C  5174               	movf	amb_light_measure@CC_amb_2& (0+255),w,b
  9841  004D3E  2572               	addwf	amb_light_measure@CC_amb_1& (0+255),w,b
  9842  004D40  6F6C               	movwf	??_amb_light_measure& (0+255),b
  9843  004D42  5175               	movf	(amb_light_measure@CC_amb_2+1)& (0+255),w,b
  9844  004D44  2173               	addwfc	(amb_light_measure@CC_amb_1+1)& (0+255),w,b
  9845  004D46  6F6D               	movwf	(??_amb_light_measure+1)& (0+255),b
  9846  004D48  5176               	movf	amb_light_measure@CC_amb_3& (0+255),w,b
  9847  004D4A  276C               	addwf	??_amb_light_measure& (0+255),f,b
  9848  004D4C  5177               	movf	(amb_light_measure@CC_amb_3+1)& (0+255),w,b
  9849  004D4E  236D               	addwfc	(??_amb_light_measure+1)& (0+255),f,b
  9850  004D50  C06C  F001         	movff	??_amb_light_measure,___xxtofl@val
  9851  004D54  C06D  F002         	movff	??_amb_light_measure+1,___xxtofl@val+1
  9852  004D58  6A03               	clrf	(___xxtofl@val+2)^0,c
  9853  004D5A  6A04               	clrf	(___xxtofl@val+3)^0,c
  9854  004D5C  0E00               	movlw	0
  9855  004D5E  EC5A  F020         	call	___xxtofl
  9856  004D62  C001  F00F         	movff	?___xxtofl,___fldiv@b
  9857  004D66  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  9858  004D6A  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  9859  004D6E  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  9860  004D72  0E00               	movlw	0
  9861  004D74  6E13               	movwf	___fldiv@a^0,c
  9862  004D76  0E00               	movlw	0
  9863  004D78  6E14               	movwf	(___fldiv@a+1)^0,c
  9864  004D7A  0E40               	movlw	64
  9865  004D7C  6E15               	movwf	(___fldiv@a+2)^0,c
  9866  004D7E  0E40               	movlw	64
  9867  004D80  6E16               	movwf	(___fldiv@a+3)^0,c
  9868  004D82  EC84  F016         	call	___fldiv	;wreg free
  9869  004D86  C00F  F066         	movff	?___fldiv,lroundf@x
  9870  004D8A  C010  F067         	movff	?___fldiv+1,lroundf@x+1
  9871  004D8E  C011  F068         	movff	?___fldiv+2,lroundf@x+2
  9872  004D92  C012  F069         	movff	?___fldiv+3,lroundf@x+3
  9873  004D96  EC21  F02E         	call	_lroundf	;wreg free
  9874  004D9A  C066  F070         	movff	?_lroundf,amb_light_measure@CC_amb_ave
  9875  004D9E  C067  F071         	movff	?_lroundf+1,amb_light_measure@CC_amb_ave+1
  9876  004DA2                     
  9877                           ;color.c: 402:     toggle_light(2,2);
  9878  004DA2  0E02               	movlw	2
  9879  004DA4  6E01               	movwf	toggle_light@toggletime^0,c
  9880  004DA6  0E02               	movlw	2
  9881  004DA8  EC3A  F01B         	call	_toggle_light
  9882  004DAC                     
  9883                           ;color.c: 404:     return CC_amb_ave;
  9884  004DAC  C070  F06A         	movff	amb_light_measure@CC_amb_ave,?_amb_light_measure
  9885  004DB0  C071  F06B         	movff	amb_light_measure@CC_amb_ave+1,?_amb_light_measure+1
  9886  004DB4  0012               	return		;funcret
  9887  004DB6                     __end_of_amb_light_measure:
  9888                           	callstack 0
  9889                           
  9890 ;; *************** function _toggle_light *****************
  9891 ;; Defined at:
  9892 ;;		line 52 in file "color.c"
  9893 ;; Parameters:    Size  Location     Type
  9894 ;;  lightnumber     1    wreg     unsigned char 
  9895 ;;  toggletime      1    0[COMRAM] unsigned char 
  9896 ;; Auto vars:     Size  Location     Type
  9897 ;;  lightnumber     1    4[COMRAM] unsigned char 
  9898 ;;  i               1    3[COMRAM] unsigned char 
  9899 ;; Return value:  Size  Location     Type
  9900 ;;                  1    wreg      void 
  9901 ;; Registers used:
  9902 ;;		wreg, status,2, status,0
  9903 ;; Tracked objects:
  9904 ;;		On entry : 0/0
  9905 ;;		On exit  : 0/0
  9906 ;;		Unchanged: 0/0
  9907 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9908 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9909 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9910 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9911 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9912 ;;Total ram usage:        5 bytes
  9913 ;; Hardware stack levels used: 1
  9914 ;; Hardware stack levels required when called: 1
  9915 ;; This function calls:
  9916 ;;		Nothing
  9917 ;; This function is called by:
  9918 ;;		_detect_color
  9919 ;;		_calibrate_white
  9920 ;;		_amb_light_measure
  9921 ;;		_turning_action
  9922 ;; This function uses a non-reentrant model
  9923 ;;
  9924                           
  9925                           	psect	text46
  9926  003674                     __ptext46:
  9927                           	callstack 0
  9928  003674                     _toggle_light:
  9929                           	callstack 27
  9930                           
  9931                           ;incstack = 0
  9932                           ;toggle_light@lightnumber stored from wreg
  9933  003674  6E05               	movwf	toggle_light@lightnumber^0,c
  9934  003676                     
  9935                           ;color.c: 52: void toggle_light(unsigned char lightnumber, unsigned char toggletime);col
      +                          or.c: 53: {;color.c: 54:     unsigned char i = 0;
  9936  003676  0E00               	movlw	0
  9937  003678  6E04               	movwf	toggle_light@i^0,c
  9938                           
  9939                           ;color.c: 56:     for (i = 0; i < toggletime; i++){
  9940  00367A  0E00               	movlw	0
  9941  00367C  6E04               	movwf	toggle_light@i^0,c
  9942  00367E  EF86  F01C         	goto	l60
  9943  003682                     l4338:
  9944                           
  9945                           ;color.c: 57:         if (lightnumber == 1){
  9946  003682  0405               	decf	toggle_light@lightnumber^0,w,c
  9947  003684  A4D8               	btfss	status,2,c
  9948  003686  EF47  F01B         	goto	u4481
  9949  00368A  EF49  F01B         	goto	u4480
  9950  00368E                     u4481:
  9951  00368E  EF81  F01B         	goto	l4346
  9952  003692                     u4480:
  9953  003692                     
  9954                           ;color.c: 58:             LATHbits.LATH1 = !LATHbits.LATH1;
  9955  003692  A280               	btfss	128,1,c	;volatile
  9956  003694  EF4E  F01B         	goto	u4491
  9957  003698  EF52  F01B         	goto	u4490
  9958  00369C                     u4491:
  9959  00369C  6A02               	clrf	??_toggle_light^0,c
  9960  00369E  2A02               	incf	??_toggle_light^0,f,c
  9961  0036A0  EF53  F01B         	goto	u4508
  9962  0036A4                     u4490:
  9963  0036A4  6A02               	clrf	??_toggle_light^0,c
  9964  0036A6                     u4508:
  9965  0036A6  4602               	rlncf	??_toggle_light^0,f,c
  9966  0036A8  5080               	movf	128,w,c	;volatile
  9967  0036AA  1802               	xorwf	??_toggle_light^0,w,c
  9968  0036AC  0BFD               	andlw	-3
  9969  0036AE  1802               	xorwf	??_toggle_light^0,w,c
  9970  0036B0  6E80               	movwf	128,c	;volatile
  9971  0036B2                     
  9972                           ;color.c: 59:             _delay((unsigned long)((500)*(64000000/4000.0)));
  9973  0036B2  0E29               	movlw	41
  9974  0036B4  6E03               	movwf	(??_toggle_light+1)^0,c
  9975  0036B6  0E96               	movlw	150
  9976  0036B8  6E02               	movwf	??_toggle_light^0,c
  9977  0036BA  0E7F               	movlw	127
  9978  0036BC                     u6367:
  9979  0036BC  2EE8               	decfsz	wreg,f,c
  9980  0036BE  D7FE               	bra	u6367
  9981  0036C0  2E02               	decfsz	??_toggle_light^0,f,c
  9982  0036C2  D7FC               	bra	u6367
  9983  0036C4  2E03               	decfsz	(??_toggle_light+1)^0,f,c
  9984  0036C6  D7FA               	bra	u6367
  9985  0036C8  F000               	nop	
  9986  0036CA                     
  9987                           ;color.c: 60:             LATHbits.LATH1 = !LATHbits.LATH1;
  9988  0036CA  A280               	btfss	128,1,c	;volatile
  9989  0036CC  EF6A  F01B         	goto	u4511
  9990  0036D0  EF6E  F01B         	goto	u4510
  9991  0036D4                     u4511:
  9992  0036D4  6A02               	clrf	??_toggle_light^0,c
  9993  0036D6  2A02               	incf	??_toggle_light^0,f,c
  9994  0036D8  EF6F  F01B         	goto	u4528
  9995  0036DC                     u4510:
  9996  0036DC  6A02               	clrf	??_toggle_light^0,c
  9997  0036DE                     u4528:
  9998  0036DE  4602               	rlncf	??_toggle_light^0,f,c
  9999  0036E0  5080               	movf	128,w,c	;volatile
 10000  0036E2  1802               	xorwf	??_toggle_light^0,w,c
 10001  0036E4  0BFD               	andlw	-3
 10002  0036E6  1802               	xorwf	??_toggle_light^0,w,c
 10003  0036E8  6E80               	movwf	128,c	;volatile
 10004                           
 10005                           ;color.c: 61:             _delay((unsigned long)((500)*(64000000/4000.0)));
 10006  0036EA  0E29               	movlw	41
 10007  0036EC  6E03               	movwf	(??_toggle_light+1)^0,c
 10008  0036EE  0E96               	movlw	150
 10009  0036F0  6E02               	movwf	??_toggle_light^0,c
 10010  0036F2  0E7F               	movlw	127
 10011  0036F4                     u6377:
 10012  0036F4  2EE8               	decfsz	wreg,f,c
 10013  0036F6  D7FE               	bra	u6377
 10014  0036F8  2E02               	decfsz	??_toggle_light^0,f,c
 10015  0036FA  D7FC               	bra	u6377
 10016  0036FC  2E03               	decfsz	(??_toggle_light+1)^0,f,c
 10017  0036FE  D7FA               	bra	u6377
 10018  003700  F000               	nop	
 10019  003702                     l4346:
 10020                           
 10021                           ;color.c: 63:         if (lightnumber == 2){
 10022  003702  0E02               	movlw	2
 10023  003704  1805               	xorwf	toggle_light@lightnumber^0,w,c
 10024  003706  A4D8               	btfss	status,2,c
 10025  003708  EF88  F01B         	goto	u4531
 10026  00370C  EF8A  F01B         	goto	u4530
 10027  003710                     u4531:
 10028  003710  EFC2  F01B         	goto	l4354
 10029  003714                     u4530:
 10030  003714                     
 10031                           ;color.c: 64:             LATDbits.LATD4 = !LATDbits.LATD4;
 10032  003714  A87C               	btfss	124,4,c	;volatile
 10033  003716  EF8F  F01B         	goto	u4541
 10034  00371A  EF93  F01B         	goto	u4540
 10035  00371E                     u4541:
 10036  00371E  6A02               	clrf	??_toggle_light^0,c
 10037  003720  2A02               	incf	??_toggle_light^0,f,c
 10038  003722  EF94  F01B         	goto	u4558
 10039  003726                     u4540:
 10040  003726  6A02               	clrf	??_toggle_light^0,c
 10041  003728                     u4558:
 10042  003728  3A02               	swapf	??_toggle_light^0,f,c
 10043  00372A  507C               	movf	124,w,c	;volatile
 10044  00372C  1802               	xorwf	??_toggle_light^0,w,c
 10045  00372E  0BEF               	andlw	-17
 10046  003730  1802               	xorwf	??_toggle_light^0,w,c
 10047  003732  6E7C               	movwf	124,c	;volatile
 10048  003734                     
 10049                           ;color.c: 65:             _delay((unsigned long)((500)*(64000000/4000.0)));
 10050  003734  0E29               	movlw	41
 10051  003736  6E03               	movwf	(??_toggle_light+1)^0,c
 10052  003738  0E96               	movlw	150
 10053  00373A  6E02               	movwf	??_toggle_light^0,c
 10054  00373C  0E7F               	movlw	127
 10055  00373E                     u6387:
 10056  00373E  2EE8               	decfsz	wreg,f,c
 10057  003740  D7FE               	bra	u6387
 10058  003742  2E02               	decfsz	??_toggle_light^0,f,c
 10059  003744  D7FC               	bra	u6387
 10060  003746  2E03               	decfsz	(??_toggle_light+1)^0,f,c
 10061  003748  D7FA               	bra	u6387
 10062  00374A  F000               	nop	
 10063  00374C                     
 10064                           ;color.c: 66:             LATDbits.LATD4 = !LATDbits.LATD4;
 10065  00374C  A87C               	btfss	124,4,c	;volatile
 10066  00374E  EFAB  F01B         	goto	u4561
 10067  003752  EFAF  F01B         	goto	u4560
 10068  003756                     u4561:
 10069  003756  6A02               	clrf	??_toggle_light^0,c
 10070  003758  2A02               	incf	??_toggle_light^0,f,c
 10071  00375A  EFB0  F01B         	goto	u4578
 10072  00375E                     u4560:
 10073  00375E  6A02               	clrf	??_toggle_light^0,c
 10074  003760                     u4578:
 10075  003760  3A02               	swapf	??_toggle_light^0,f,c
 10076  003762  507C               	movf	124,w,c	;volatile
 10077  003764  1802               	xorwf	??_toggle_light^0,w,c
 10078  003766  0BEF               	andlw	-17
 10079  003768  1802               	xorwf	??_toggle_light^0,w,c
 10080  00376A  6E7C               	movwf	124,c	;volatile
 10081                           
 10082                           ;color.c: 67:             _delay((unsigned long)((500)*(64000000/4000.0)));
 10083  00376C  0E29               	movlw	41
 10084  00376E  6E03               	movwf	(??_toggle_light+1)^0,c
 10085  003770  0E96               	movlw	150
 10086  003772  6E02               	movwf	??_toggle_light^0,c
 10087  003774  0E7F               	movlw	127
 10088  003776                     u6397:
 10089  003776  2EE8               	decfsz	wreg,f,c
 10090  003778  D7FE               	bra	u6397
 10091  00377A  2E02               	decfsz	??_toggle_light^0,f,c
 10092  00377C  D7FC               	bra	u6397
 10093  00377E  2E03               	decfsz	(??_toggle_light+1)^0,f,c
 10094  003780  D7FA               	bra	u6397
 10095  003782  F000               	nop	
 10096  003784                     l4354:
 10097                           
 10098                           ;color.c: 69:         if (lightnumber == 3){
 10099  003784  0E03               	movlw	3
 10100  003786  1805               	xorwf	toggle_light@lightnumber^0,w,c
 10101  003788  A4D8               	btfss	status,2,c
 10102  00378A  EFC9  F01B         	goto	u4581
 10103  00378E  EFCB  F01B         	goto	u4580
 10104  003792                     u4581:
 10105  003792  EF07  F01C         	goto	l4362
 10106  003796                     u4580:
 10107  003796                     
 10108                           ;color.c: 70:             LATDbits.LATD3 = !LATDbits.LATD3;
 10109  003796  A67C               	btfss	124,3,c	;volatile
 10110  003798  EFD0  F01B         	goto	u4591
 10111  00379C  EFD4  F01B         	goto	u4590
 10112  0037A0                     u4591:
 10113  0037A0  6A02               	clrf	??_toggle_light^0,c
 10114  0037A2  2A02               	incf	??_toggle_light^0,f,c
 10115  0037A4  EFD5  F01B         	goto	u4608
 10116  0037A8                     u4590:
 10117  0037A8  6A02               	clrf	??_toggle_light^0,c
 10118  0037AA                     u4608:
 10119  0037AA  4602               	rlncf	??_toggle_light^0,f,c
 10120  0037AC  4602               	rlncf	??_toggle_light^0,f,c
 10121  0037AE  4602               	rlncf	??_toggle_light^0,f,c
 10122  0037B0  507C               	movf	124,w,c	;volatile
 10123  0037B2  1802               	xorwf	??_toggle_light^0,w,c
 10124  0037B4  0BF7               	andlw	-9
 10125  0037B6  1802               	xorwf	??_toggle_light^0,w,c
 10126  0037B8  6E7C               	movwf	124,c	;volatile
 10127  0037BA                     
 10128                           ;color.c: 71:             _delay((unsigned long)((500)*(64000000/4000.0)));
 10129  0037BA  0E29               	movlw	41
 10130  0037BC  6E03               	movwf	(??_toggle_light+1)^0,c
 10131  0037BE  0E96               	movlw	150
 10132  0037C0  6E02               	movwf	??_toggle_light^0,c
 10133  0037C2  0E7F               	movlw	127
 10134  0037C4                     u6407:
 10135  0037C4  2EE8               	decfsz	wreg,f,c
 10136  0037C6  D7FE               	bra	u6407
 10137  0037C8  2E02               	decfsz	??_toggle_light^0,f,c
 10138  0037CA  D7FC               	bra	u6407
 10139  0037CC  2E03               	decfsz	(??_toggle_light+1)^0,f,c
 10140  0037CE  D7FA               	bra	u6407
 10141  0037D0  F000               	nop	
 10142  0037D2                     
 10143                           ;color.c: 72:             LATDbits.LATD3 = !LATDbits.LATD3;
 10144  0037D2  A67C               	btfss	124,3,c	;volatile
 10145  0037D4  EFEE  F01B         	goto	u4611
 10146  0037D8  EFF2  F01B         	goto	u4610
 10147  0037DC                     u4611:
 10148  0037DC  6A02               	clrf	??_toggle_light^0,c
 10149  0037DE  2A02               	incf	??_toggle_light^0,f,c
 10150  0037E0  EFF3  F01B         	goto	u4628
 10151  0037E4                     u4610:
 10152  0037E4  6A02               	clrf	??_toggle_light^0,c
 10153  0037E6                     u4628:
 10154  0037E6  4602               	rlncf	??_toggle_light^0,f,c
 10155  0037E8  4602               	rlncf	??_toggle_light^0,f,c
 10156  0037EA  4602               	rlncf	??_toggle_light^0,f,c
 10157  0037EC  507C               	movf	124,w,c	;volatile
 10158  0037EE  1802               	xorwf	??_toggle_light^0,w,c
 10159  0037F0  0BF7               	andlw	-9
 10160  0037F2  1802               	xorwf	??_toggle_light^0,w,c
 10161  0037F4  6E7C               	movwf	124,c	;volatile
 10162                           
 10163                           ;color.c: 73:             _delay((unsigned long)((500)*(64000000/4000.0)));
 10164  0037F6  0E29               	movlw	41
 10165  0037F8  6E03               	movwf	(??_toggle_light+1)^0,c
 10166  0037FA  0E96               	movlw	150
 10167  0037FC  6E02               	movwf	??_toggle_light^0,c
 10168  0037FE  0E7F               	movlw	127
 10169  003800                     u6417:
 10170  003800  2EE8               	decfsz	wreg,f,c
 10171  003802  D7FE               	bra	u6417
 10172  003804  2E02               	decfsz	??_toggle_light^0,f,c
 10173  003806  D7FC               	bra	u6417
 10174  003808  2E03               	decfsz	(??_toggle_light+1)^0,f,c
 10175  00380A  D7FA               	bra	u6417
 10176  00380C  F000               	nop	
 10177  00380E                     l4362:
 10178                           
 10179                           ;color.c: 75:         if (lightnumber == 4){
 10180  00380E  0E04               	movlw	4
 10181  003810  1805               	xorwf	toggle_light@lightnumber^0,w,c
 10182  003812  A4D8               	btfss	status,2,c
 10183  003814  EF0E  F01C         	goto	u4631
 10184  003818  EF10  F01C         	goto	u4630
 10185  00381C                     u4631:
 10186  00381C  EF46  F01C         	goto	l4370
 10187  003820                     u4630:
 10188  003820                     
 10189                           ;color.c: 76:             LATFbits.LATF0 = !LATFbits.LATF0;
 10190  003820  A07E               	btfss	126,0,c	;volatile
 10191  003822  EF15  F01C         	goto	u4641
 10192  003826  EF19  F01C         	goto	u4640
 10193  00382A                     u4641:
 10194  00382A  6A02               	clrf	??_toggle_light^0,c
 10195  00382C  2A02               	incf	??_toggle_light^0,f,c
 10196  00382E  EF1A  F01C         	goto	u4658
 10197  003832                     u4640:
 10198  003832  6A02               	clrf	??_toggle_light^0,c
 10199  003834                     u4658:
 10200  003834  507E               	movf	126,w,c	;volatile
 10201  003836  1802               	xorwf	??_toggle_light^0,w,c
 10202  003838  0BFE               	andlw	-2
 10203  00383A  1802               	xorwf	??_toggle_light^0,w,c
 10204  00383C  6E7E               	movwf	126,c	;volatile
 10205  00383E                     
 10206                           ;color.c: 77:             _delay((unsigned long)((500)*(64000000/4000.0)));
 10207  00383E  0E29               	movlw	41
 10208  003840  6E03               	movwf	(??_toggle_light+1)^0,c
 10209  003842  0E96               	movlw	150
 10210  003844  6E02               	movwf	??_toggle_light^0,c
 10211  003846  0E7F               	movlw	127
 10212  003848                     u6427:
 10213  003848  2EE8               	decfsz	wreg,f,c
 10214  00384A  D7FE               	bra	u6427
 10215  00384C  2E02               	decfsz	??_toggle_light^0,f,c
 10216  00384E  D7FC               	bra	u6427
 10217  003850  2E03               	decfsz	(??_toggle_light+1)^0,f,c
 10218  003852  D7FA               	bra	u6427
 10219  003854  F000               	nop	
 10220  003856                     
 10221                           ;color.c: 78:             LATFbits.LATF0 = !LATFbits.LATF0;
 10222  003856  A07E               	btfss	126,0,c	;volatile
 10223  003858  EF30  F01C         	goto	u4661
 10224  00385C  EF34  F01C         	goto	u4660
 10225  003860                     u4661:
 10226  003860  6A02               	clrf	??_toggle_light^0,c
 10227  003862  2A02               	incf	??_toggle_light^0,f,c
 10228  003864  EF35  F01C         	goto	u4678
 10229  003868                     u4660:
 10230  003868  6A02               	clrf	??_toggle_light^0,c
 10231  00386A                     u4678:
 10232  00386A  507E               	movf	126,w,c	;volatile
 10233  00386C  1802               	xorwf	??_toggle_light^0,w,c
 10234  00386E  0BFE               	andlw	-2
 10235  003870  1802               	xorwf	??_toggle_light^0,w,c
 10236  003872  6E7E               	movwf	126,c	;volatile
 10237                           
 10238                           ;color.c: 79:             _delay((unsigned long)((500)*(64000000/4000.0)));
 10239  003874  0E29               	movlw	41
 10240  003876  6E03               	movwf	(??_toggle_light+1)^0,c
 10241  003878  0E96               	movlw	150
 10242  00387A  6E02               	movwf	??_toggle_light^0,c
 10243  00387C  0E7F               	movlw	127
 10244  00387E                     u6437:
 10245  00387E  2EE8               	decfsz	wreg,f,c
 10246  003880  D7FE               	bra	u6437
 10247  003882  2E02               	decfsz	??_toggle_light^0,f,c
 10248  003884  D7FC               	bra	u6437
 10249  003886  2E03               	decfsz	(??_toggle_light+1)^0,f,c
 10250  003888  D7FA               	bra	u6437
 10251  00388A  F000               	nop	
 10252  00388C                     l4370:
 10253                           
 10254                           ;color.c: 81:         if (lightnumber == 5){
 10255  00388C  0E05               	movlw	5
 10256  00388E  1805               	xorwf	toggle_light@lightnumber^0,w,c
 10257  003890  A4D8               	btfss	status,2,c
 10258  003892  EF4D  F01C         	goto	u4681
 10259  003896  EF4F  F01C         	goto	u4680
 10260  00389A                     u4681:
 10261  00389A  EF85  F01C         	goto	l4378
 10262  00389E                     u4680:
 10263  00389E                     
 10264                           ;color.c: 82:             LATHbits.LATH0 = !LATHbits.LATH0;
 10265  00389E  A080               	btfss	128,0,c	;volatile
 10266  0038A0  EF54  F01C         	goto	u4691
 10267  0038A4  EF58  F01C         	goto	u4690
 10268  0038A8                     u4691:
 10269  0038A8  6A02               	clrf	??_toggle_light^0,c
 10270  0038AA  2A02               	incf	??_toggle_light^0,f,c
 10271  0038AC  EF59  F01C         	goto	u4708
 10272  0038B0                     u4690:
 10273  0038B0  6A02               	clrf	??_toggle_light^0,c
 10274  0038B2                     u4708:
 10275  0038B2  5080               	movf	128,w,c	;volatile
 10276  0038B4  1802               	xorwf	??_toggle_light^0,w,c
 10277  0038B6  0BFE               	andlw	-2
 10278  0038B8  1802               	xorwf	??_toggle_light^0,w,c
 10279  0038BA  6E80               	movwf	128,c	;volatile
 10280  0038BC                     
 10281                           ;color.c: 83:             _delay((unsigned long)((500)*(64000000/4000.0)));
 10282  0038BC  0E29               	movlw	41
 10283  0038BE  6E03               	movwf	(??_toggle_light+1)^0,c
 10284  0038C0  0E96               	movlw	150
 10285  0038C2  6E02               	movwf	??_toggle_light^0,c
 10286  0038C4  0E7F               	movlw	127
 10287  0038C6                     u6447:
 10288  0038C6  2EE8               	decfsz	wreg,f,c
 10289  0038C8  D7FE               	bra	u6447
 10290  0038CA  2E02               	decfsz	??_toggle_light^0,f,c
 10291  0038CC  D7FC               	bra	u6447
 10292  0038CE  2E03               	decfsz	(??_toggle_light+1)^0,f,c
 10293  0038D0  D7FA               	bra	u6447
 10294  0038D2  F000               	nop	
 10295  0038D4                     
 10296                           ;color.c: 84:             LATHbits.LATH0 = !LATHbits.LATH0;
 10297  0038D4  A080               	btfss	128,0,c	;volatile
 10298  0038D6  EF6F  F01C         	goto	u4711
 10299  0038DA  EF73  F01C         	goto	u4710
 10300  0038DE                     u4711:
 10301  0038DE  6A02               	clrf	??_toggle_light^0,c
 10302  0038E0  2A02               	incf	??_toggle_light^0,f,c
 10303  0038E2  EF74  F01C         	goto	u4728
 10304  0038E6                     u4710:
 10305  0038E6  6A02               	clrf	??_toggle_light^0,c
 10306  0038E8                     u4728:
 10307  0038E8  5080               	movf	128,w,c	;volatile
 10308  0038EA  1802               	xorwf	??_toggle_light^0,w,c
 10309  0038EC  0BFE               	andlw	-2
 10310  0038EE  1802               	xorwf	??_toggle_light^0,w,c
 10311  0038F0  6E80               	movwf	128,c	;volatile
 10312                           
 10313                           ;color.c: 85:             _delay((unsigned long)((500)*(64000000/4000.0)));
 10314  0038F2  0E29               	movlw	41
 10315  0038F4  6E03               	movwf	(??_toggle_light+1)^0,c
 10316  0038F6  0E96               	movlw	150
 10317  0038F8  6E02               	movwf	??_toggle_light^0,c
 10318  0038FA  0E7F               	movlw	127
 10319  0038FC                     u6457:
 10320  0038FC  2EE8               	decfsz	wreg,f,c
 10321  0038FE  D7FE               	bra	u6457
 10322  003900  2E02               	decfsz	??_toggle_light^0,f,c
 10323  003902  D7FC               	bra	u6457
 10324  003904  2E03               	decfsz	(??_toggle_light+1)^0,f,c
 10325  003906  D7FA               	bra	u6457
 10326  003908  F000               	nop	
 10327  00390A                     l4378:
 10328                           
 10329                           ;color.c: 87:     }
 10330  00390A  2A04               	incf	toggle_light@i^0,f,c
 10331  00390C                     l60:
 10332  00390C  5001               	movf	toggle_light@toggletime^0,w,c
 10333  00390E  5C04               	subwf	toggle_light@i^0,w,c
 10334  003910  A0D8               	btfss	status,0,c
 10335  003912  EF8D  F01C         	goto	u4731
 10336  003916  EF8F  F01C         	goto	u4730
 10337  00391A                     u4731:
 10338  00391A  EF41  F01B         	goto	l4338
 10339  00391E                     u4730:
 10340  00391E  0012               	return		;funcret
 10341  003920                     __end_of_toggle_light:
 10342                           	callstack 0
 10343                           
 10344 ;; *************** function _lroundf *****************
 10345 ;; Defined at:
 10346 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\lroundf.c"
 10347 ;; Parameters:    Size  Location     Type
 10348 ;;  x               4    6[BANK0 ] float 
 10349 ;; Auto vars:     Size  Location     Type
 10350 ;;		None
 10351 ;; Return value:  Size  Location     Type
 10352 ;;                  4    6[BANK0 ] long 
 10353 ;; Registers used:
 10354 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 10355 ;; Tracked objects:
 10356 ;;		On entry : 0/0
 10357 ;;		On exit  : 0/0
 10358 ;;		Unchanged: 0/0
 10359 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10360 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10361 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10362 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10363 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10364 ;;Total ram usage:        4 bytes
 10365 ;; Hardware stack levels used: 1
 10366 ;; Hardware stack levels required when called: 4
 10367 ;; This function calls:
 10368 ;;		___fltol
 10369 ;;		_roundf
 10370 ;; This function is called by:
 10371 ;;		_detect_color
 10372 ;;		_amb_light_measure
 10373 ;;		_detect_wall
 10374 ;; This function uses a non-reentrant model
 10375 ;;
 10376                           
 10377                           	psect	text47
 10378  005C42                     __ptext47:
 10379                           	callstack 0
 10380  005C42                     _lroundf:
 10381                           	callstack 24
 10382  005C42  C066  F041         	movff	lroundf@x,roundf@x
 10383  005C46  C067  F042         	movff	lroundf@x+1,roundf@x+1
 10384  005C4A  C068  F043         	movff	lroundf@x+2,roundf@x+2
 10385  005C4E  C069  F044         	movff	lroundf@x+3,roundf@x+3
 10386  005C52  ECDB  F012         	call	_roundf	;wreg free
 10387  005C56  C041  F05B         	movff	?_roundf,___fltol@f1
 10388  005C5A  C042  F05C         	movff	?_roundf+1,___fltol@f1+1
 10389  005C5E  C043  F05D         	movff	?_roundf+2,___fltol@f1+2
 10390  005C62  C044  F05E         	movff	?_roundf+3,___fltol@f1+3
 10391  005C66  EC62  F027         	call	___fltol	;wreg free
 10392  005C6A  C05B  F066         	movff	?___fltol,?_lroundf
 10393  005C6E  C05C  F067         	movff	?___fltol+1,?_lroundf+1
 10394  005C72  C05D  F068         	movff	?___fltol+2,?_lroundf+2
 10395  005C76  C05E  F069         	movff	?___fltol+3,?_lroundf+3
 10396  005C7A  0012               	return		;funcret
 10397  005C7C                     __end_of_lroundf:
 10398                           	callstack 0
 10399                           
 10400 ;; *************** function _roundf *****************
 10401 ;; Defined at:
 10402 ;;		line 12 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\roundf.c"
 10403 ;; Parameters:    Size  Location     Type
 10404 ;;  x               4   64[COMRAM] float 
 10405 ;; Auto vars:     Size  Location     Type
 10406 ;;  y               4   86[COMRAM] float 
 10407 ;;  u               4   82[COMRAM] struct .
 10408 ;;  e               2   76[COMRAM] int 
 10409 ;; Return value:  Size  Location     Type
 10410 ;;                  4   64[COMRAM] float 
 10411 ;; Registers used:
 10412 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 10413 ;; Tracked objects:
 10414 ;;		On entry : 0/0
 10415 ;;		On exit  : 0/0
 10416 ;;		Unchanged: 0/0
 10417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10418 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10419 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10420 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10421 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10422 ;;Total ram usage:       26 bytes
 10423 ;; Hardware stack levels used: 1
 10424 ;; Hardware stack levels required when called: 3
 10425 ;; This function calls:
 10426 ;;		___fladd
 10427 ;;		___flge
 10428 ;;		___flmul
 10429 ;;		___flneg
 10430 ;;		___flsub
 10431 ;; This function is called by:
 10432 ;;		_lroundf
 10433 ;; This function uses a non-reentrant model
 10434 ;;
 10435                           
 10436                           	psect	text48
 10437  0025B6                     __ptext48:
 10438                           	callstack 0
 10439  0025B6                     _roundf:
 10440                           	callstack 24
 10441  0025B6  C176  F053         	movff	roundf@F527,roundf@u
 10442  0025BA  C177  F054         	movff	roundf@F527+1,roundf@u+1
 10443  0025BE  C178  F055         	movff	roundf@F527+2,roundf@u+2
 10444  0025C2  C179  F056         	movff	roundf@F527+3,roundf@u+3
 10445  0025C6  C041  F053         	movff	roundf@x,roundf@u
 10446  0025CA  C042  F054         	movff	roundf@x+1,roundf@u+1
 10447  0025CE  C043  F055         	movff	roundf@x+2,roundf@u+2
 10448  0025D2  C044  F056         	movff	roundf@x+3,roundf@u+3
 10449  0025D6  C053  F045         	movff	roundf@u,??_roundf
 10450  0025DA  C054  F046         	movff	roundf@u+1,??_roundf+1
 10451  0025DE  C055  F047         	movff	roundf@u+2,??_roundf+2
 10452  0025E2  C056  F048         	movff	roundf@u+3,??_roundf+3
 10453  0025E6  0E18               	movlw	24
 10454  0025E8  EFFB  F012         	goto	u4390
 10455  0025EC                     u4395:
 10456  0025EC  90D8               	bcf	status,0,c
 10457  0025EE  3248               	rrcf	(??_roundf+3)^0,f,c
 10458  0025F0  3247               	rrcf	(??_roundf+2)^0,f,c
 10459  0025F2  3246               	rrcf	(??_roundf+1)^0,f,c
 10460  0025F4  3245               	rrcf	??_roundf^0,f,c
 10461  0025F6                     u4390:
 10462  0025F6  2EE8               	decfsz	wreg,f,c
 10463  0025F8  EFF6  F012         	goto	u4395
 10464  0025FC  5045               	movf	??_roundf^0,w,c
 10465  0025FE  6E4D               	movwf	roundf@e^0,c
 10466  002600  6A4E               	clrf	(roundf@e+1)^0,c
 10467  002602  BE4E               	btfsc	(roundf@e+1)^0,7,c
 10468  002604  EF0D  F013         	goto	u4401
 10469  002608  504E               	movf	(roundf@e+1)^0,w,c
 10470  00260A  E109               	bnz	u4400
 10471  00260C  0E96               	movlw	150
 10472  00260E  5C4D               	subwf	roundf@e^0,w,c
 10473  002610  A0D8               	btfss	status,0,c
 10474  002612  EF0D  F013         	goto	u4401
 10475  002616  EF0F  F013         	goto	u4400
 10476  00261A                     u4401:
 10477  00261A  EF19  F013         	goto	l4308
 10478  00261E                     u4400:
 10479  00261E  C041  F041         	movff	roundf@x,?_roundf
 10480  002622  C042  F042         	movff	roundf@x+1,?_roundf+1
 10481  002626  C043  F043         	movff	roundf@x+2,?_roundf+2
 10482  00262A  C044  F044         	movff	roundf@x+3,?_roundf+3
 10483  00262E  EFB1  F014         	goto	l1407
 10484  002632                     l4308:
 10485  002632  C053  F045         	movff	roundf@u,??_roundf
 10486  002636  C054  F046         	movff	roundf@u+1,??_roundf+1
 10487  00263A  C055  F047         	movff	roundf@u+2,??_roundf+2
 10488  00263E  C056  F048         	movff	roundf@u+3,??_roundf+3
 10489  002642  0E20               	movlw	32
 10490  002644  EF29  F013         	goto	u4410
 10491  002648                     u4415:
 10492  002648  90D8               	bcf	status,0,c
 10493  00264A  3248               	rrcf	(??_roundf+3)^0,f,c
 10494  00264C  3247               	rrcf	(??_roundf+2)^0,f,c
 10495  00264E  3246               	rrcf	(??_roundf+1)^0,f,c
 10496  002650  3245               	rrcf	??_roundf^0,f,c
 10497  002652                     u4410:
 10498  002652  2EE8               	decfsz	wreg,f,c
 10499  002654  EF24  F013         	goto	u4415
 10500  002658  5045               	movf	??_roundf^0,w,c
 10501  00265A  1046               	iorwf	(??_roundf+1)^0,w,c
 10502  00265C  1047               	iorwf	(??_roundf+2)^0,w,c
 10503  00265E  1048               	iorwf	(??_roundf+3)^0,w,c
 10504  002660  B4D8               	btfsc	status,2,c
 10505  002662  EF35  F013         	goto	u4421
 10506  002666  EF37  F013         	goto	u4420
 10507  00266A                     u4421:
 10508  00266A  EF49  F013         	goto	l4312
 10509  00266E                     u4420:
 10510  00266E  C041  F001         	movff	roundf@x,___flneg@f1
 10511  002672  C042  F002         	movff	roundf@x+1,___flneg@f1+1
 10512  002676  C043  F003         	movff	roundf@x+2,___flneg@f1+2
 10513  00267A  C044  F004         	movff	roundf@x+3,___flneg@f1+3
 10514  00267E  EC3E  F02E         	call	___flneg	;wreg free
 10515  002682  C001  F041         	movff	?___flneg,roundf@x
 10516  002686  C002  F042         	movff	?___flneg+1,roundf@x+1
 10517  00268A  C003  F043         	movff	?___flneg+2,roundf@x+2
 10518  00268E  C004  F044         	movff	?___flneg+3,roundf@x+3
 10519  002692                     l4312:
 10520  002692  BE4E               	btfsc	(roundf@e+1)^0,7,c
 10521  002694  EF57  F013         	goto	u4430
 10522  002698  504E               	movf	(roundf@e+1)^0,w,c
 10523  00269A  E107               	bnz	u4431
 10524  00269C  0E7E               	movlw	126
 10525  00269E  5C4D               	subwf	roundf@e^0,w,c
 10526  0026A0  B0D8               	btfsc	status,0,c
 10527  0026A2  EF55  F013         	goto	u4431
 10528  0026A6  EF57  F013         	goto	u4430
 10529  0026AA                     u4431:
 10530  0026AA  EF73  F013         	goto	l4318
 10531  0026AE                     u4430:
 10532  0026AE  C053  F028         	movff	roundf@u,___flmul@b
 10533  0026B2  C054  F029         	movff	roundf@u+1,___flmul@b+1
 10534  0026B6  C055  F02A         	movff	roundf@u+2,___flmul@b+2
 10535  0026BA  C056  F02B         	movff	roundf@u+3,___flmul@b+3
 10536  0026BE  0E00               	movlw	0
 10537  0026C0  6E2C               	movwf	___flmul@a^0,c
 10538  0026C2  0E00               	movlw	0
 10539  0026C4  6E2D               	movwf	(___flmul@a+1)^0,c
 10540  0026C6  0E00               	movlw	0
 10541  0026C8  6E2E               	movwf	(___flmul@a+2)^0,c
 10542  0026CA  0E00               	movlw	0
 10543  0026CC  6E2F               	movwf	(___flmul@a+3)^0,c
 10544  0026CE  ECC6  F010         	call	___flmul	;wreg free
 10545  0026D2  C028  F041         	movff	?___flmul,?_roundf
 10546  0026D6  C029  F042         	movff	?___flmul+1,?_roundf+1
 10547  0026DA  C02A  F043         	movff	?___flmul+2,?_roundf+2
 10548  0026DE  C02B  F044         	movff	?___flmul+3,?_roundf+3
 10549  0026E2  EFB1  F014         	goto	l1407
 10550  0026E6                     l4318:
 10551  0026E6  0E00               	movlw	0
 10552  0026E8  6E05               	movwf	___fladd@a^0,c
 10553  0026EA  0E00               	movlw	0
 10554  0026EC  6E06               	movwf	(___fladd@a+1)^0,c
 10555  0026EE  0E00               	movlw	0
 10556  0026F0  6E07               	movwf	(___fladd@a+2)^0,c
 10557  0026F2  0E4B               	movlw	75
 10558  0026F4  6E08               	movwf	(___fladd@a+3)^0,c
 10559  0026F6  C041  F001         	movff	roundf@x,___fladd@b
 10560  0026FA  C042  F002         	movff	roundf@x+1,___fladd@b+1
 10561  0026FE  C043  F003         	movff	roundf@x+2,___fladd@b+2
 10562  002702  C044  F004         	movff	roundf@x+3,___fladd@b+3
 10563  002706  EC66  F00E         	call	___fladd	;wreg free
 10564  00270A  C001  F04F         	movff	?___fladd,_roundf$2944
 10565  00270E  C002  F050         	movff	?___fladd+1,_roundf$2944+1
 10566  002712  C003  F051         	movff	?___fladd+2,_roundf$2944+2
 10567  002716  C004  F052         	movff	?___fladd+3,_roundf$2944+3
 10568  00271A  0E00               	movlw	0
 10569  00271C  6E05               	movwf	___fladd@a^0,c
 10570  00271E  0E00               	movlw	0
 10571  002720  6E06               	movwf	(___fladd@a+1)^0,c
 10572  002722  0E00               	movlw	0
 10573  002724  6E07               	movwf	(___fladd@a+2)^0,c
 10574  002726  0ECB               	movlw	203
 10575  002728  6E08               	movwf	(___fladd@a+3)^0,c
 10576  00272A  C04F  F001         	movff	_roundf$2944,___fladd@b
 10577  00272E  C050  F002         	movff	_roundf$2944+1,___fladd@b+1
 10578  002732  C051  F003         	movff	_roundf$2944+2,___fladd@b+2
 10579  002736  C052  F004         	movff	_roundf$2944+3,___fladd@b+3
 10580  00273A  EC66  F00E         	call	___fladd	;wreg free
 10581  00273E  C001  F049         	movff	?___fladd,_roundf$2945
 10582  002742  C002  F04A         	movff	?___fladd+1,_roundf$2945+1
 10583  002746  C003  F04B         	movff	?___fladd+2,_roundf$2945+2
 10584  00274A  C004  F04C         	movff	?___fladd+3,_roundf$2945+3
 10585  00274E  C049  F011         	movff	_roundf$2945,___flsub@b
 10586  002752  C04A  F012         	movff	_roundf$2945+1,___flsub@b+1
 10587  002756  C04B  F013         	movff	_roundf$2945+2,___flsub@b+2
 10588  00275A  C04C  F014         	movff	_roundf$2945+3,___flsub@b+3
 10589  00275E  C041  F015         	movff	roundf@x,___flsub@a
 10590  002762  C042  F016         	movff	roundf@x+1,___flsub@a+1
 10591  002766  C043  F017         	movff	roundf@x+2,___flsub@a+2
 10592  00276A  C044  F018         	movff	roundf@x+3,___flsub@a+3
 10593  00276E  EC3C  F02D         	call	___flsub	;wreg free
 10594  002772  C011  F057         	movff	?___flsub,roundf@y
 10595  002776  C012  F058         	movff	?___flsub+1,roundf@y+1
 10596  00277A  C013  F059         	movff	?___flsub+2,roundf@y+2
 10597  00277E  C014  F05A         	movff	?___flsub+3,roundf@y+3
 10598  002782  0E00               	movlw	0
 10599  002784  6E01               	movwf	___flge@ff1^0,c
 10600  002786  0E00               	movlw	0
 10601  002788  6E02               	movwf	(___flge@ff1+1)^0,c
 10602  00278A  0E00               	movlw	0
 10603  00278C  6E03               	movwf	(___flge@ff1+2)^0,c
 10604  00278E  0E3F               	movlw	63
 10605  002790  6E04               	movwf	(___flge@ff1+3)^0,c
 10606  002792  C057  F005         	movff	roundf@y,___flge@ff2
 10607  002796  C058  F006         	movff	roundf@y+1,___flge@ff2+1
 10608  00279A  C059  F007         	movff	roundf@y+2,___flge@ff2+2
 10609  00279E  C05A  F008         	movff	roundf@y+3,___flge@ff2+3
 10610  0027A2  ECE6  F027         	call	___flge	;wreg free
 10611  0027A6  B0D8               	btfsc	status,0,c
 10612  0027A8  EFD8  F013         	goto	u4441
 10613  0027AC  EFDA  F013         	goto	u4440
 10614  0027B0                     u4441:
 10615  0027B0  EF10  F014         	goto	l4322
 10616  0027B4                     u4440:
 10617  0027B4  C041  F005         	movff	roundf@x,___fladd@a
 10618  0027B8  C042  F006         	movff	roundf@x+1,___fladd@a+1
 10619  0027BC  C043  F007         	movff	roundf@x+2,___fladd@a+2
 10620  0027C0  C044  F008         	movff	roundf@x+3,___fladd@a+3
 10621  0027C4  C057  F001         	movff	roundf@y,___fladd@b
 10622  0027C8  C058  F002         	movff	roundf@y+1,___fladd@b+1
 10623  0027CC  C059  F003         	movff	roundf@y+2,___fladd@b+2
 10624  0027D0  C05A  F004         	movff	roundf@y+3,___fladd@b+3
 10625  0027D4  EC66  F00E         	call	___fladd	;wreg free
 10626  0027D8  C001  F04F         	movff	?___fladd,_roundf$2944
 10627  0027DC  C002  F050         	movff	?___fladd+1,_roundf$2944+1
 10628  0027E0  C003  F051         	movff	?___fladd+2,_roundf$2944+2
 10629  0027E4  C004  F052         	movff	?___fladd+3,_roundf$2944+3
 10630  0027E8  C04F  F001         	movff	_roundf$2944,___fladd@b
 10631  0027EC  C050  F002         	movff	_roundf$2944+1,___fladd@b+1
 10632  0027F0  C051  F003         	movff	_roundf$2944+2,___fladd@b+2
 10633  0027F4  C052  F004         	movff	_roundf$2944+3,___fladd@b+3
 10634  0027F8  0E00               	movlw	0
 10635  0027FA  6E05               	movwf	___fladd@a^0,c
 10636  0027FC  0E00               	movlw	0
 10637  0027FE  6E06               	movwf	(___fladd@a+1)^0,c
 10638  002800  0E80               	movlw	128
 10639  002802  6E07               	movwf	(___fladd@a+2)^0,c
 10640  002804  0EBF               	movlw	191
 10641  002806  6E08               	movwf	(___fladd@a+3)^0,c
 10642  002808  EC66  F00E         	call	___fladd	;wreg free
 10643  00280C  C001  F057         	movff	?___fladd,roundf@y
 10644  002810  C002  F058         	movff	?___fladd+1,roundf@y+1
 10645  002814  C003  F059         	movff	?___fladd+2,roundf@y+2
 10646  002818  C004  F05A         	movff	?___fladd+3,roundf@y+3
 10647  00281C  EF79  F014         	goto	l4328
 10648  002820                     l4322:
 10649  002820  0E00               	movlw	0
 10650  002822  6E01               	movwf	___flge@ff1^0,c
 10651  002824  0E00               	movlw	0
 10652  002826  6E02               	movwf	(___flge@ff1+1)^0,c
 10653  002828  0E00               	movlw	0
 10654  00282A  6E03               	movwf	(___flge@ff1+2)^0,c
 10655  00282C  0EBF               	movlw	191
 10656  00282E  6E04               	movwf	(___flge@ff1+3)^0,c
 10657  002830  C057  F005         	movff	roundf@y,___flge@ff2
 10658  002834  C058  F006         	movff	roundf@y+1,___flge@ff2+1
 10659  002838  C059  F007         	movff	roundf@y+2,___flge@ff2+2
 10660  00283C  C05A  F008         	movff	roundf@y+3,___flge@ff2+3
 10661  002840  ECE6  F027         	call	___flge	;wreg free
 10662  002844  A0D8               	btfss	status,0,c
 10663  002846  EF27  F014         	goto	u4451
 10664  00284A  EF29  F014         	goto	u4450
 10665  00284E                     u4451:
 10666  00284E  EF5F  F014         	goto	l4326
 10667  002852                     u4450:
 10668  002852  C041  F005         	movff	roundf@x,___fladd@a
 10669  002856  C042  F006         	movff	roundf@x+1,___fladd@a+1
 10670  00285A  C043  F007         	movff	roundf@x+2,___fladd@a+2
 10671  00285E  C044  F008         	movff	roundf@x+3,___fladd@a+3
 10672  002862  C057  F001         	movff	roundf@y,___fladd@b
 10673  002866  C058  F002         	movff	roundf@y+1,___fladd@b+1
 10674  00286A  C059  F003         	movff	roundf@y+2,___fladd@b+2
 10675  00286E  C05A  F004         	movff	roundf@y+3,___fladd@b+3
 10676  002872  EC66  F00E         	call	___fladd	;wreg free
 10677  002876  C001  F04F         	movff	?___fladd,_roundf$2944
 10678  00287A  C002  F050         	movff	?___fladd+1,_roundf$2944+1
 10679  00287E  C003  F051         	movff	?___fladd+2,_roundf$2944+2
 10680  002882  C004  F052         	movff	?___fladd+3,_roundf$2944+3
 10681  002886  C04F  F001         	movff	_roundf$2944,___fladd@b
 10682  00288A  C050  F002         	movff	_roundf$2944+1,___fladd@b+1
 10683  00288E  C051  F003         	movff	_roundf$2944+2,___fladd@b+2
 10684  002892  C052  F004         	movff	_roundf$2944+3,___fladd@b+3
 10685  002896  0E00               	movlw	0
 10686  002898  6E05               	movwf	___fladd@a^0,c
 10687  00289A  0E00               	movlw	0
 10688  00289C  6E06               	movwf	(___fladd@a+1)^0,c
 10689  00289E  0E80               	movlw	128
 10690  0028A0  6E07               	movwf	(___fladd@a+2)^0,c
 10691  0028A2  0E3F               	movlw	63
 10692  0028A4  6E08               	movwf	(___fladd@a+3)^0,c
 10693  0028A6  EC66  F00E         	call	___fladd	;wreg free
 10694  0028AA  C001  F057         	movff	?___fladd,roundf@y
 10695  0028AE  C002  F058         	movff	?___fladd+1,roundf@y+1
 10696  0028B2  C003  F059         	movff	?___fladd+2,roundf@y+2
 10697  0028B6  C004  F05A         	movff	?___fladd+3,roundf@y+3
 10698  0028BA  EF79  F014         	goto	l4328
 10699  0028BE                     l4326:
 10700  0028BE  C057  F001         	movff	roundf@y,___fladd@b
 10701  0028C2  C058  F002         	movff	roundf@y+1,___fladd@b+1
 10702  0028C6  C059  F003         	movff	roundf@y+2,___fladd@b+2
 10703  0028CA  C05A  F004         	movff	roundf@y+3,___fladd@b+3
 10704  0028CE  C041  F005         	movff	roundf@x,___fladd@a
 10705  0028D2  C042  F006         	movff	roundf@x+1,___fladd@a+1
 10706  0028D6  C043  F007         	movff	roundf@x+2,___fladd@a+2
 10707  0028DA  C044  F008         	movff	roundf@x+3,___fladd@a+3
 10708  0028DE  EC66  F00E         	call	___fladd	;wreg free
 10709  0028E2  C001  F057         	movff	?___fladd,roundf@y
 10710  0028E6  C002  F058         	movff	?___fladd+1,roundf@y+1
 10711  0028EA  C003  F059         	movff	?___fladd+2,roundf@y+2
 10712  0028EE  C004  F05A         	movff	?___fladd+3,roundf@y+3
 10713  0028F2                     l4328:
 10714  0028F2  C053  F045         	movff	roundf@u,??_roundf
 10715  0028F6  C054  F046         	movff	roundf@u+1,??_roundf+1
 10716  0028FA  C055  F047         	movff	roundf@u+2,??_roundf+2
 10717  0028FE  C056  F048         	movff	roundf@u+3,??_roundf+3
 10718  002902  0E20               	movlw	32
 10719  002904  EF89  F014         	goto	u4460
 10720  002908                     u4465:
 10721  002908  90D8               	bcf	status,0,c
 10722  00290A  3248               	rrcf	(??_roundf+3)^0,f,c
 10723  00290C  3247               	rrcf	(??_roundf+2)^0,f,c
 10724  00290E  3246               	rrcf	(??_roundf+1)^0,f,c
 10725  002910  3245               	rrcf	??_roundf^0,f,c
 10726  002912                     u4460:
 10727  002912  2EE8               	decfsz	wreg,f,c
 10728  002914  EF84  F014         	goto	u4465
 10729  002918  5045               	movf	??_roundf^0,w,c
 10730  00291A  1046               	iorwf	(??_roundf+1)^0,w,c
 10731  00291C  1047               	iorwf	(??_roundf+2)^0,w,c
 10732  00291E  1048               	iorwf	(??_roundf+3)^0,w,c
 10733  002920  B4D8               	btfsc	status,2,c
 10734  002922  EF95  F014         	goto	u4471
 10735  002926  EF97  F014         	goto	u4470
 10736  00292A                     u4471:
 10737  00292A  EFA9  F014         	goto	l4332
 10738  00292E                     u4470:
 10739  00292E  C057  F001         	movff	roundf@y,___flneg@f1
 10740  002932  C058  F002         	movff	roundf@y+1,___flneg@f1+1
 10741  002936  C059  F003         	movff	roundf@y+2,___flneg@f1+2
 10742  00293A  C05A  F004         	movff	roundf@y+3,___flneg@f1+3
 10743  00293E  EC3E  F02E         	call	___flneg	;wreg free
 10744  002942  C001  F057         	movff	?___flneg,roundf@y
 10745  002946  C002  F058         	movff	?___flneg+1,roundf@y+1
 10746  00294A  C003  F059         	movff	?___flneg+2,roundf@y+2
 10747  00294E  C004  F05A         	movff	?___flneg+3,roundf@y+3
 10748  002952                     l4332:
 10749  002952  C057  F041         	movff	roundf@y,?_roundf
 10750  002956  C058  F042         	movff	roundf@y+1,?_roundf+1
 10751  00295A  C059  F043         	movff	roundf@y+2,?_roundf+2
 10752  00295E  C05A  F044         	movff	roundf@y+3,?_roundf+3
 10753  002962                     l1407:
 10754  002962  0012               	return		;funcret
 10755  002964                     __end_of_roundf:
 10756                           	callstack 0
 10757                           
 10758 ;; *************** function ___flsub *****************
 10759 ;; Defined at:
 10760 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\sprcadd.c"
 10761 ;; Parameters:    Size  Location     Type
 10762 ;;  b               4   16[COMRAM] float 
 10763 ;;  a               4   20[COMRAM] float 
 10764 ;; Auto vars:     Size  Location     Type
 10765 ;;		None
 10766 ;; Return value:  Size  Location     Type
 10767 ;;                  4   16[COMRAM] float 
 10768 ;; Registers used:
 10769 ;;		wreg, status,2, status,0, cstack
 10770 ;; Tracked objects:
 10771 ;;		On entry : 0/0
 10772 ;;		On exit  : 0/0
 10773 ;;		Unchanged: 0/0
 10774 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10775 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10776 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10777 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10778 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10779 ;;Total ram usage:        8 bytes
 10780 ;; Hardware stack levels used: 1
 10781 ;; Hardware stack levels required when called: 2
 10782 ;; This function calls:
 10783 ;;		___fladd
 10784 ;; This function is called by:
 10785 ;;		_roundf
 10786 ;; This function uses a non-reentrant model
 10787 ;;
 10788                           
 10789                           	psect	text49
 10790  005A78                     __ptext49:
 10791                           	callstack 0
 10792  005A78                     ___flsub:
 10793                           	callstack 24
 10794  005A78  0E00               	movlw	0
 10795  005A7A  1A15               	xorwf	___flsub@a^0,f,c
 10796  005A7C  0E00               	movlw	0
 10797  005A7E  1A16               	xorwf	(___flsub@a+1)^0,f,c
 10798  005A80  0E00               	movlw	0
 10799  005A82  1A17               	xorwf	(___flsub@a+2)^0,f,c
 10800  005A84  0E80               	movlw	128
 10801  005A86  1A18               	xorwf	(___flsub@a+3)^0,f,c
 10802  005A88  C011  F001         	movff	___flsub@b,___fladd@b
 10803  005A8C  C012  F002         	movff	___flsub@b+1,___fladd@b+1
 10804  005A90  C013  F003         	movff	___flsub@b+2,___fladd@b+2
 10805  005A94  C014  F004         	movff	___flsub@b+3,___fladd@b+3
 10806  005A98  C015  F005         	movff	___flsub@a,___fladd@a
 10807  005A9C  C016  F006         	movff	___flsub@a+1,___fladd@a+1
 10808  005AA0  C017  F007         	movff	___flsub@a+2,___fladd@a+2
 10809  005AA4  C018  F008         	movff	___flsub@a+3,___fladd@a+3
 10810  005AA8  EC66  F00E         	call	___fladd	;wreg free
 10811  005AAC  C001  F011         	movff	?___fladd,?___flsub
 10812  005AB0  C002  F012         	movff	?___fladd+1,?___flsub+1
 10813  005AB4  C003  F013         	movff	?___fladd+2,?___flsub+2
 10814  005AB8  C004  F014         	movff	?___fladd+3,?___flsub+3
 10815  005ABC  0012               	return		;funcret
 10816  005ABE                     __end_of___flsub:
 10817                           	callstack 0
 10818                           
 10819 ;; *************** function ___fladd *****************
 10820 ;; Defined at:
 10821 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\sprcadd.c"
 10822 ;; Parameters:    Size  Location     Type
 10823 ;;  b               4    0[COMRAM] float 
 10824 ;;  a               4    4[COMRAM] float 
 10825 ;; Auto vars:     Size  Location     Type
 10826 ;;  grs             1   15[COMRAM] unsigned char 
 10827 ;;  bexp            1   14[COMRAM] unsigned char 
 10828 ;;  aexp            1   13[COMRAM] unsigned char 
 10829 ;;  signs           1   12[COMRAM] unsigned char 
 10830 ;; Return value:  Size  Location     Type
 10831 ;;                  4    0[COMRAM] unsigned char 
 10832 ;; Registers used:
 10833 ;;		wreg, status,2, status,0
 10834 ;; Tracked objects:
 10835 ;;		On entry : 0/0
 10836 ;;		On exit  : 0/0
 10837 ;;		Unchanged: 0/0
 10838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10839 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10840 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10841 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10842 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10843 ;;Total ram usage:       16 bytes
 10844 ;; Hardware stack levels used: 1
 10845 ;; Hardware stack levels required when called: 1
 10846 ;; This function calls:
 10847 ;;		Nothing
 10848 ;; This function is called by:
 10849 ;;		___flsub
 10850 ;;		_roundf
 10851 ;; This function uses a non-reentrant model
 10852 ;;
 10853                           
 10854                           	psect	text50
 10855  001CCC                     __ptext50:
 10856                           	callstack 0
 10857  001CCC                     ___fladd:
 10858                           	callstack 24
 10859  001CCC  5004               	movf	(___fladd@b+3)^0,w,c
 10860  001CCE  0B80               	andlw	128
 10861  001CD0  6E0D               	movwf	___fladd@signs^0,c
 10862  001CD2  5004               	movf	(___fladd@b+3)^0,w,c
 10863  001CD4  2404               	addwf	(___fladd@b+3)^0,w,c
 10864  001CD6  6E0F               	movwf	___fladd@bexp^0,c
 10865  001CD8  AE03               	btfss	(___fladd@b+2)^0,7,c
 10866  001CDA  EF71  F00E         	goto	u3441
 10867  001CDE  EF73  F00E         	goto	u3440
 10868  001CE2                     u3441:
 10869  001CE2  EF74  F00E         	goto	l3674
 10870  001CE6                     u3440:
 10871  001CE6  800F               	bsf	___fladd@bexp^0,0,c
 10872  001CE8                     l3674:
 10873  001CE8  500F               	movf	___fladd@bexp^0,w,c
 10874  001CEA  B4D8               	btfsc	status,2,c
 10875  001CEC  EF7A  F00E         	goto	u3451
 10876  001CF0  EF7C  F00E         	goto	u3450
 10877  001CF4                     u3451:
 10878  001CF4  EF91  F00E         	goto	l3684
 10879  001CF8                     u3450:
 10880  001CF8  280F               	incf	___fladd@bexp^0,w,c
 10881  001CFA  A4D8               	btfss	status,2,c
 10882  001CFC  EF82  F00E         	goto	u3461
 10883  001D00  EF84  F00E         	goto	u3460
 10884  001D04                     u3461:
 10885  001D04  EF8C  F00E         	goto	l3680
 10886  001D08                     u3460:
 10887  001D08  0E00               	movlw	0
 10888  001D0A  6E01               	movwf	___fladd@b^0,c
 10889  001D0C  0E00               	movlw	0
 10890  001D0E  6E02               	movwf	(___fladd@b+1)^0,c
 10891  001D10  0E00               	movlw	0
 10892  001D12  6E03               	movwf	(___fladd@b+2)^0,c
 10893  001D14  0E00               	movlw	0
 10894  001D16  6E04               	movwf	(___fladd@b+3)^0,c
 10895  001D18                     l3680:
 10896  001D18  8E03               	bsf	(___fladd@b+2)^0,7,c
 10897  001D1A  0E00               	movlw	0
 10898  001D1C  6E04               	movwf	(___fladd@b+3)^0,c
 10899  001D1E  EF99  F00E         	goto	l3686
 10900  001D22                     l3684:
 10901  001D22  0E00               	movlw	0
 10902  001D24  6E01               	movwf	___fladd@b^0,c
 10903  001D26  0E00               	movlw	0
 10904  001D28  6E02               	movwf	(___fladd@b+1)^0,c
 10905  001D2A  0E00               	movlw	0
 10906  001D2C  6E03               	movwf	(___fladd@b+2)^0,c
 10907  001D2E  0E00               	movlw	0
 10908  001D30  6E04               	movwf	(___fladd@b+3)^0,c
 10909  001D32                     l3686:
 10910  001D32  5008               	movf	(___fladd@a+3)^0,w,c
 10911  001D34  0B80               	andlw	128
 10912  001D36  6E0E               	movwf	___fladd@aexp^0,c
 10913  001D38  500D               	movf	___fladd@signs^0,w,c
 10914  001D3A  180E               	xorwf	___fladd@aexp^0,w,c
 10915  001D3C  B4D8               	btfsc	status,2,c
 10916  001D3E  EFA3  F00E         	goto	u3471
 10917  001D42  EFA5  F00E         	goto	u3470
 10918  001D46                     u3471:
 10919  001D46  EFA6  F00E         	goto	l3692
 10920  001D4A                     u3470:
 10921  001D4A  8C0D               	bsf	___fladd@signs^0,6,c
 10922  001D4C                     l3692:
 10923  001D4C  5008               	movf	(___fladd@a+3)^0,w,c
 10924  001D4E  2408               	addwf	(___fladd@a+3)^0,w,c
 10925  001D50  6E0E               	movwf	___fladd@aexp^0,c
 10926  001D52  AE07               	btfss	(___fladd@a+2)^0,7,c
 10927  001D54  EFAE  F00E         	goto	u3481
 10928  001D58  EFB0  F00E         	goto	u3480
 10929  001D5C                     u3481:
 10930  001D5C  EFB1  F00E         	goto	l3698
 10931  001D60                     u3480:
 10932  001D60  800E               	bsf	___fladd@aexp^0,0,c
 10933  001D62                     l3698:
 10934  001D62  500E               	movf	___fladd@aexp^0,w,c
 10935  001D64  B4D8               	btfsc	status,2,c
 10936  001D66  EFB7  F00E         	goto	u3491
 10937  001D6A  EFB9  F00E         	goto	u3490
 10938  001D6E                     u3491:
 10939  001D6E  EFCE  F00E         	goto	l3708
 10940  001D72                     u3490:
 10941  001D72  280E               	incf	___fladd@aexp^0,w,c
 10942  001D74  A4D8               	btfss	status,2,c
 10943  001D76  EFBF  F00E         	goto	u3501
 10944  001D7A  EFC1  F00E         	goto	u3500
 10945  001D7E                     u3501:
 10946  001D7E  EFC9  F00E         	goto	l3704
 10947  001D82                     u3500:
 10948  001D82  0E00               	movlw	0
 10949  001D84  6E05               	movwf	___fladd@a^0,c
 10950  001D86  0E00               	movlw	0
 10951  001D88  6E06               	movwf	(___fladd@a+1)^0,c
 10952  001D8A  0E00               	movlw	0
 10953  001D8C  6E07               	movwf	(___fladd@a+2)^0,c
 10954  001D8E  0E00               	movlw	0
 10955  001D90  6E08               	movwf	(___fladd@a+3)^0,c
 10956  001D92                     l3704:
 10957  001D92  8E07               	bsf	(___fladd@a+2)^0,7,c
 10958  001D94  0E00               	movlw	0
 10959  001D96  6E08               	movwf	(___fladd@a+3)^0,c
 10960  001D98  EFD6  F00E         	goto	l3710
 10961  001D9C                     l3708:
 10962  001D9C  0E00               	movlw	0
 10963  001D9E  6E05               	movwf	___fladd@a^0,c
 10964  001DA0  0E00               	movlw	0
 10965  001DA2  6E06               	movwf	(___fladd@a+1)^0,c
 10966  001DA4  0E00               	movlw	0
 10967  001DA6  6E07               	movwf	(___fladd@a+2)^0,c
 10968  001DA8  0E00               	movlw	0
 10969  001DAA  6E08               	movwf	(___fladd@a+3)^0,c
 10970  001DAC                     l3710:
 10971  001DAC  500F               	movf	___fladd@bexp^0,w,c
 10972  001DAE  5C0E               	subwf	___fladd@aexp^0,w,c
 10973  001DB0  B0D8               	btfsc	status,0,c
 10974  001DB2  EFDD  F00E         	goto	u3511
 10975  001DB6  EFDF  F00E         	goto	u3510
 10976  001DBA                     u3511:
 10977  001DBA  EF06  F00F         	goto	l3746
 10978  001DBE                     u3510:
 10979  001DBE  AC0D               	btfss	___fladd@signs^0,6,c
 10980  001DC0  EFE4  F00E         	goto	u3521
 10981  001DC4  EFE6  F00E         	goto	u3520
 10982  001DC8                     u3521:
 10983  001DC8  EFE8  F00E         	goto	l3716
 10984  001DCC                     u3520:
 10985  001DCC  0E80               	movlw	128
 10986  001DCE  1A0D               	xorwf	___fladd@signs^0,f,c
 10987  001DD0                     l3716:
 10988  001DD0  C00F  F010         	movff	___fladd@bexp,___fladd@grs
 10989  001DD4  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
 10990  001DD8  C010  F00E         	movff	___fladd@grs,___fladd@aexp
 10991  001DDC  C001  F010         	movff	___fladd@b,___fladd@grs
 10992  001DE0  C005  F001         	movff	___fladd@a,___fladd@b
 10993  001DE4  C010  F005         	movff	___fladd@grs,___fladd@a
 10994  001DE8  C002  F010         	movff	___fladd@b+1,___fladd@grs
 10995  001DEC  C006  F002         	movff	___fladd@a+1,___fladd@b+1
 10996  001DF0  C010  F006         	movff	___fladd@grs,___fladd@a+1
 10997  001DF4  C003  F010         	movff	___fladd@b+2,___fladd@grs
 10998  001DF8  C007  F003         	movff	___fladd@a+2,___fladd@b+2
 10999  001DFC  C010  F007         	movff	___fladd@grs,___fladd@a+2
 11000  001E00  C004  F010         	movff	___fladd@b+3,___fladd@grs
 11001  001E04  C008  F004         	movff	___fladd@a+3,___fladd@b+3
 11002  001E08  C010  F008         	movff	___fladd@grs,___fladd@a+3
 11003  001E0C                     l3746:
 11004  001E0C  0E00               	movlw	0
 11005  001E0E  6E10               	movwf	___fladd@grs^0,c
 11006  001E10  500F               	movf	___fladd@bexp^0,w,c
 11007  001E12  C00E  F009         	movff	___fladd@aexp,??___fladd
 11008  001E16  6A0A               	clrf	(??___fladd+1)^0,c
 11009  001E18  5E09               	subwf	??___fladd^0,f,c
 11010  001E1A  0E00               	movlw	0
 11011  001E1C  5A0A               	subwfb	(??___fladd+1)^0,f,c
 11012  001E1E  BE0A               	btfsc	(??___fladd+1)^0,7,c
 11013  001E20  EF1B  F00F         	goto	u3531
 11014  001E24  500A               	movf	(??___fladd+1)^0,w,c
 11015  001E26  E109               	bnz	u3530
 11016  001E28  0E1A               	movlw	26
 11017  001E2A  5C09               	subwf	??___fladd^0,w,c
 11018  001E2C  A0D8               	btfss	status,0,c
 11019  001E2E  EF1B  F00F         	goto	u3531
 11020  001E32  EF1D  F00F         	goto	u3530
 11021  001E36                     u3531:
 11022  001E36  EF54  F00F         	goto	l1143
 11023  001E3A                     u3530:
 11024  001E3A  5001               	movf	___fladd@b^0,w,c
 11025  001E3C  1002               	iorwf	(___fladd@b+1)^0,w,c
 11026  001E3E  1003               	iorwf	(___fladd@b+2)^0,w,c
 11027  001E40  1004               	iorwf	(___fladd@b+3)^0,w,c
 11028  001E42  A4D8               	btfss	status,2,c
 11029  001E44  EF26  F00F         	goto	u3541
 11030  001E48  EF29  F00F         	goto	u3540
 11031  001E4C                     u3541:
 11032  001E4C  0E01               	movlw	1
 11033  001E4E  EF2A  F00F         	goto	u3550
 11034  001E52                     u3540:
 11035  001E52  0E00               	movlw	0
 11036  001E54                     u3550:
 11037  001E54  6E10               	movwf	___fladd@grs^0,c
 11038  001E56  0E00               	movlw	0
 11039  001E58  6E01               	movwf	___fladd@b^0,c
 11040  001E5A  0E00               	movlw	0
 11041  001E5C  6E02               	movwf	(___fladd@b+1)^0,c
 11042  001E5E  0E00               	movlw	0
 11043  001E60  6E03               	movwf	(___fladd@b+2)^0,c
 11044  001E62  0E00               	movlw	0
 11045  001E64  6E04               	movwf	(___fladd@b+3)^0,c
 11046  001E66  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
 11047  001E6A  EF5D  F00F         	goto	l1142
 11048  001E6E                     l1144:
 11049  001E6E  A010               	btfss	___fladd@grs^0,0,c
 11050  001E70  EF3C  F00F         	goto	u3561
 11051  001E74  EF3E  F00F         	goto	u3560
 11052  001E78                     u3561:
 11053  001E78  EF44  F00F         	goto	l3758
 11054  001E7C                     u3560:
 11055  001E7C  90D8               	bcf	status,0,c
 11056  001E7E  3010               	rrcf	___fladd@grs^0,w,c
 11057  001E80  0901               	iorlw	1
 11058  001E82  6E10               	movwf	___fladd@grs^0,c
 11059  001E84  EF46  F00F         	goto	l3760
 11060  001E88                     l3758:
 11061  001E88  90D8               	bcf	status,0,c
 11062  001E8A  3210               	rrcf	___fladd@grs^0,f,c
 11063  001E8C                     l3760:
 11064  001E8C  A001               	btfss	___fladd@b^0,0,c
 11065  001E8E  EF4B  F00F         	goto	u3571
 11066  001E92  EF4D  F00F         	goto	u3570
 11067  001E96                     u3571:
 11068  001E96  EF4E  F00F         	goto	l3764
 11069  001E9A                     u3570:
 11070  001E9A  8E10               	bsf	___fladd@grs^0,7,c
 11071  001E9C                     l3764:
 11072  001E9C  3404               	rlcf	(___fladd@b+3)^0,w,c
 11073  001E9E  3204               	rrcf	(___fladd@b+3)^0,f,c
 11074  001EA0  3203               	rrcf	(___fladd@b+2)^0,f,c
 11075  001EA2  3202               	rrcf	(___fladd@b+1)^0,f,c
 11076  001EA4  3201               	rrcf	___fladd@b^0,f,c
 11077  001EA6  2A0F               	incf	___fladd@bexp^0,f,c
 11078  001EA8                     l1143:
 11079  001EA8  500E               	movf	___fladd@aexp^0,w,c
 11080  001EAA  5C0F               	subwf	___fladd@bexp^0,w,c
 11081  001EAC  A0D8               	btfss	status,0,c
 11082  001EAE  EF5B  F00F         	goto	u3581
 11083  001EB2  EF5D  F00F         	goto	u3580
 11084  001EB6                     u3581:
 11085  001EB6  EF37  F00F         	goto	l1144
 11086  001EBA                     u3580:
 11087  001EBA                     l1142:
 11088  001EBA  BC0D               	btfsc	___fladd@signs^0,6,c
 11089  001EBC  EF62  F00F         	goto	u3591
 11090  001EC0  EF64  F00F         	goto	u3590
 11091  001EC4                     u3591:
 11092  001EC4  EFA4  F00F         	goto	l3792
 11093  001EC8                     u3590:
 11094  001EC8  500F               	movf	___fladd@bexp^0,w,c
 11095  001ECA  A4D8               	btfss	status,2,c
 11096  001ECC  EF6A  F00F         	goto	u3601
 11097  001ED0  EF6C  F00F         	goto	u3600
 11098  001ED4                     u3601:
 11099  001ED4  EF76  F00F         	goto	l3774
 11100  001ED8                     u3600:
 11101  001ED8  0E00               	movlw	0
 11102  001EDA  6E01               	movwf	?___fladd^0,c
 11103  001EDC  0E00               	movlw	0
 11104  001EDE  6E02               	movwf	(?___fladd+1)^0,c
 11105  001EE0  0E00               	movlw	0
 11106  001EE2  6E03               	movwf	(?___fladd+2)^0,c
 11107  001EE4  0E00               	movlw	0
 11108  001EE6  6E04               	movwf	(?___fladd+3)^0,c
 11109  001EE8  EFC5  F010         	goto	l1151
 11110  001EEC                     l3774:
 11111  001EEC  5005               	movf	___fladd@a^0,w,c
 11112  001EEE  2601               	addwf	___fladd@b^0,f,c
 11113  001EF0  5006               	movf	(___fladd@a+1)^0,w,c
 11114  001EF2  2202               	addwfc	(___fladd@b+1)^0,f,c
 11115  001EF4  5007               	movf	(___fladd@a+2)^0,w,c
 11116  001EF6  2203               	addwfc	(___fladd@b+2)^0,f,c
 11117  001EF8  5008               	movf	(___fladd@a+3)^0,w,c
 11118  001EFA  2204               	addwfc	(___fladd@b+3)^0,f,c
 11119  001EFC  A004               	btfss	(___fladd@b+3)^0,0,c
 11120  001EFE  EF83  F00F         	goto	u3611
 11121  001F02  EF85  F00F         	goto	u3610
 11122  001F06                     u3611:
 11123  001F06  EF31  F010         	goto	l3828
 11124  001F0A                     u3610:
 11125  001F0A  A010               	btfss	___fladd@grs^0,0,c
 11126  001F0C  EF8A  F00F         	goto	u3621
 11127  001F10  EF8C  F00F         	goto	u3620
 11128  001F14                     u3621:
 11129  001F14  EF92  F00F         	goto	l3782
 11130  001F18                     u3620:
 11131  001F18  90D8               	bcf	status,0,c
 11132  001F1A  3010               	rrcf	___fladd@grs^0,w,c
 11133  001F1C  0901               	iorlw	1
 11134  001F1E  6E10               	movwf	___fladd@grs^0,c
 11135  001F20  EF94  F00F         	goto	l3784
 11136  001F24                     l3782:
 11137  001F24  90D8               	bcf	status,0,c
 11138  001F26  3210               	rrcf	___fladd@grs^0,f,c
 11139  001F28                     l3784:
 11140  001F28  A001               	btfss	___fladd@b^0,0,c
 11141  001F2A  EF99  F00F         	goto	u3631
 11142  001F2E  EF9B  F00F         	goto	u3630
 11143  001F32                     u3631:
 11144  001F32  EF9C  F00F         	goto	l3788
 11145  001F36                     u3630:
 11146  001F36  8E10               	bsf	___fladd@grs^0,7,c
 11147  001F38                     l3788:
 11148  001F38  3404               	rlcf	(___fladd@b+3)^0,w,c
 11149  001F3A  3204               	rrcf	(___fladd@b+3)^0,f,c
 11150  001F3C  3203               	rrcf	(___fladd@b+2)^0,f,c
 11151  001F3E  3202               	rrcf	(___fladd@b+1)^0,f,c
 11152  001F40  3201               	rrcf	___fladd@b^0,f,c
 11153  001F42  2A0F               	incf	___fladd@bexp^0,f,c
 11154  001F44  EF31  F010         	goto	l3828
 11155  001F48                     l3792:
 11156  001F48  5005               	movf	___fladd@a^0,w,c
 11157  001F4A  5C01               	subwf	___fladd@b^0,w,c
 11158  001F4C  5006               	movf	(___fladd@a+1)^0,w,c
 11159  001F4E  5802               	subwfb	(___fladd@b+1)^0,w,c
 11160  001F50  5007               	movf	(___fladd@a+2)^0,w,c
 11161  001F52  5803               	subwfb	(___fladd@b+2)^0,w,c
 11162  001F54  5004               	movf	(___fladd@b+3)^0,w,c
 11163  001F56  0A80               	xorlw	128
 11164  001F58  6E09               	movwf	??___fladd^0,c
 11165  001F5A  5008               	movf	(___fladd@a+3)^0,w,c
 11166  001F5C  0A80               	xorlw	128
 11167  001F5E  5809               	subwfb	??___fladd^0,w,c
 11168  001F60  B0D8               	btfsc	status,0,c
 11169  001F62  EFB5  F00F         	goto	u3641
 11170  001F66  EFB7  F00F         	goto	u3640
 11171  001F6A                     u3641:
 11172  001F6A  EFE2  F00F         	goto	l3802
 11173  001F6E                     u3640:
 11174  001F6E  5001               	movf	___fladd@b^0,w,c
 11175  001F70  5C05               	subwf	___fladd@a^0,w,c
 11176  001F72  6E09               	movwf	??___fladd^0,c
 11177  001F74  5002               	movf	(___fladd@b+1)^0,w,c
 11178  001F76  5806               	subwfb	(___fladd@a+1)^0,w,c
 11179  001F78  6E0A               	movwf	(??___fladd+1)^0,c
 11180  001F7A  5003               	movf	(___fladd@b+2)^0,w,c
 11181  001F7C  5807               	subwfb	(___fladd@a+2)^0,w,c
 11182  001F7E  6E0B               	movwf	(??___fladd+2)^0,c
 11183  001F80  5004               	movf	(___fladd@b+3)^0,w,c
 11184  001F82  5808               	subwfb	(___fladd@a+3)^0,w,c
 11185  001F84  6E0C               	movwf	(??___fladd+3)^0,c
 11186  001F86  0EFF               	movlw	255
 11187  001F88  2409               	addwf	??___fladd^0,w,c
 11188  001F8A  6E01               	movwf	___fladd@b^0,c
 11189  001F8C  0EFF               	movlw	255
 11190  001F8E  200A               	addwfc	(??___fladd+1)^0,w,c
 11191  001F90  6E02               	movwf	(___fladd@b+1)^0,c
 11192  001F92  0EFF               	movlw	255
 11193  001F94  200B               	addwfc	(??___fladd+2)^0,w,c
 11194  001F96  6E03               	movwf	(___fladd@b+2)^0,c
 11195  001F98  0EFF               	movlw	255
 11196  001F9A  200C               	addwfc	(??___fladd+3)^0,w,c
 11197  001F9C  6E04               	movwf	(___fladd@b+3)^0,c
 11198  001F9E  0E80               	movlw	128
 11199  001FA0  1A0D               	xorwf	___fladd@signs^0,f,c
 11200  001FA2  6C10               	negf	___fladd@grs^0,c
 11201  001FA4  5010               	movf	___fladd@grs^0,w,c
 11202  001FA6  A4D8               	btfss	status,2,c
 11203  001FA8  EFD8  F00F         	goto	u3651
 11204  001FAC  EFDA  F00F         	goto	u3650
 11205  001FB0                     u3651:
 11206  001FB0  EFEA  F00F         	goto	l1159
 11207  001FB4                     u3650:
 11208  001FB4  0E01               	movlw	1
 11209  001FB6  2601               	addwf	___fladd@b^0,f,c
 11210  001FB8  0E00               	movlw	0
 11211  001FBA  2202               	addwfc	(___fladd@b+1)^0,f,c
 11212  001FBC  2203               	addwfc	(___fladd@b+2)^0,f,c
 11213  001FBE  2204               	addwfc	(___fladd@b+3)^0,f,c
 11214  001FC0  EFEA  F00F         	goto	l1159
 11215  001FC4                     l3802:
 11216  001FC4  5005               	movf	___fladd@a^0,w,c
 11217  001FC6  5E01               	subwf	___fladd@b^0,f,c
 11218  001FC8  5006               	movf	(___fladd@a+1)^0,w,c
 11219  001FCA  5A02               	subwfb	(___fladd@b+1)^0,f,c
 11220  001FCC  5007               	movf	(___fladd@a+2)^0,w,c
 11221  001FCE  5A03               	subwfb	(___fladd@b+2)^0,f,c
 11222  001FD0  5008               	movf	(___fladd@a+3)^0,w,c
 11223  001FD2  5A04               	subwfb	(___fladd@b+3)^0,f,c
 11224  001FD4                     l1159:
 11225  001FD4  5001               	movf	___fladd@b^0,w,c
 11226  001FD6  1002               	iorwf	(___fladd@b+1)^0,w,c
 11227  001FD8  1003               	iorwf	(___fladd@b+2)^0,w,c
 11228  001FDA  1004               	iorwf	(___fladd@b+3)^0,w,c
 11229  001FDC  A4D8               	btfss	status,2,c
 11230  001FDE  EFF3  F00F         	goto	u3661
 11231  001FE2  EFF5  F00F         	goto	u3660
 11232  001FE6                     u3661:
 11233  001FE6  EF2A  F010         	goto	l3826
 11234  001FEA                     u3660:
 11235  001FEA  5010               	movf	___fladd@grs^0,w,c
 11236  001FEC  A4D8               	btfss	status,2,c
 11237  001FEE  EFFB  F00F         	goto	u3671
 11238  001FF2  EFFD  F00F         	goto	u3670
 11239  001FF6                     u3671:
 11240  001FF6  EF2A  F010         	goto	l3826
 11241  001FFA                     u3670:
 11242  001FFA  0E00               	movlw	0
 11243  001FFC  6E01               	movwf	?___fladd^0,c
 11244  001FFE  0E00               	movlw	0
 11245  002000  6E02               	movwf	(?___fladd+1)^0,c
 11246  002002  0E00               	movlw	0
 11247  002004  6E03               	movwf	(?___fladd+2)^0,c
 11248  002006  0E00               	movlw	0
 11249  002008  6E04               	movwf	(?___fladd+3)^0,c
 11250  00200A  EFC5  F010         	goto	l1151
 11251  00200E                     l3810:
 11252  00200E  90D8               	bcf	status,0,c
 11253  002010  3601               	rlcf	___fladd@b^0,f,c
 11254  002012  3602               	rlcf	(___fladd@b+1)^0,f,c
 11255  002014  3603               	rlcf	(___fladd@b+2)^0,f,c
 11256  002016  3604               	rlcf	(___fladd@b+3)^0,f,c
 11257  002018  AE10               	btfss	___fladd@grs^0,7,c
 11258  00201A  EF11  F010         	goto	u3681
 11259  00201E  EF13  F010         	goto	u3680
 11260  002022                     u3681:
 11261  002022  EF14  F010         	goto	l3816
 11262  002026                     u3680:
 11263  002026  8001               	bsf	___fladd@b^0,0,c
 11264  002028                     l3816:
 11265  002028  A010               	btfss	___fladd@grs^0,0,c
 11266  00202A  EF19  F010         	goto	u3691
 11267  00202E  EF1B  F010         	goto	u3690
 11268  002032                     u3691:
 11269  002032  EF1F  F010         	goto	l3820
 11270  002036                     u3690:
 11271  002036  80D8               	bsf	status,0,c
 11272  002038  3610               	rlcf	___fladd@grs^0,f,c
 11273  00203A  EF21  F010         	goto	l3822
 11274  00203E                     l3820:
 11275  00203E  90D8               	bcf	status,0,c
 11276  002040  3610               	rlcf	___fladd@grs^0,f,c
 11277  002042                     l3822:
 11278  002042  500F               	movf	___fladd@bexp^0,w,c
 11279  002044  B4D8               	btfsc	status,2,c
 11280  002046  EF27  F010         	goto	u3701
 11281  00204A  EF29  F010         	goto	u3700
 11282  00204E                     u3701:
 11283  00204E  EF2A  F010         	goto	l3826
 11284  002052                     u3700:
 11285  002052  060F               	decf	___fladd@bexp^0,f,c
 11286  002054                     l3826:
 11287  002054  AE03               	btfss	(___fladd@b+2)^0,7,c
 11288  002056  EF2F  F010         	goto	u3711
 11289  00205A  EF31  F010         	goto	u3710
 11290  00205E                     u3711:
 11291  00205E  EF07  F010         	goto	l3810
 11292  002062                     u3710:
 11293  002062                     l3828:
 11294  002062  0E00               	movlw	0
 11295  002064  6E0E               	movwf	___fladd@aexp^0,c
 11296  002066  AE10               	btfss	___fladd@grs^0,7,c
 11297  002068  EF38  F010         	goto	u3721
 11298  00206C  EF3A  F010         	goto	u3720
 11299  002070                     u3721:
 11300  002070  EF52  F010         	goto	l1168
 11301  002074                     u3720:
 11302  002074  C010  F009         	movff	___fladd@grs,??___fladd
 11303  002078  0E7F               	movlw	127
 11304  00207A  1609               	andwf	??___fladd^0,f,c
 11305  00207C  B4D8               	btfsc	status,2,c
 11306  00207E  EF43  F010         	goto	u3731
 11307  002082  EF45  F010         	goto	u3730
 11308  002086                     u3731:
 11309  002086  EF49  F010         	goto	l1169
 11310  00208A                     u3730:
 11311  00208A                     l3834:
 11312  00208A  0E01               	movlw	1
 11313  00208C  6E0E               	movwf	___fladd@aexp^0,c
 11314  00208E  EF52  F010         	goto	l1168
 11315  002092                     l1169:
 11316  002092  A001               	btfss	___fladd@b^0,0,c
 11317  002094  EF4E  F010         	goto	u3741
 11318  002098  EF50  F010         	goto	u3740
 11319  00209C                     u3741:
 11320  00209C  EF52  F010         	goto	l1168
 11321  0020A0                     u3740:
 11322  0020A0  EF45  F010         	goto	l3834
 11323  0020A4                     l1168:
 11324  0020A4  500E               	movf	___fladd@aexp^0,w,c
 11325  0020A6  B4D8               	btfsc	status,2,c
 11326  0020A8  EF58  F010         	goto	u3751
 11327  0020AC  EF5A  F010         	goto	u3750
 11328  0020B0                     u3751:
 11329  0020B0  EF85  F010         	goto	l3846
 11330  0020B4                     u3750:
 11331  0020B4  0E01               	movlw	1
 11332  0020B6  2601               	addwf	___fladd@b^0,f,c
 11333  0020B8  0E00               	movlw	0
 11334  0020BA  2202               	addwfc	(___fladd@b+1)^0,f,c
 11335  0020BC  2203               	addwfc	(___fladd@b+2)^0,f,c
 11336  0020BE  2204               	addwfc	(___fladd@b+3)^0,f,c
 11337  0020C0  A004               	btfss	(___fladd@b+3)^0,0,c
 11338  0020C2  EF65  F010         	goto	u3761
 11339  0020C6  EF67  F010         	goto	u3760
 11340  0020CA                     u3761:
 11341  0020CA  EF85  F010         	goto	l3846
 11342  0020CE                     u3760:
 11343  0020CE  C001  F009         	movff	___fladd@b,??___fladd
 11344  0020D2  C002  F00A         	movff	___fladd@b+1,??___fladd+1
 11345  0020D6  C003  F00B         	movff	___fladd@b+2,??___fladd+2
 11346  0020DA  C004  F00C         	movff	___fladd@b+3,??___fladd+3
 11347  0020DE  340C               	rlcf	(??___fladd+3)^0,w,c
 11348  0020E0  320C               	rrcf	(??___fladd+3)^0,f,c
 11349  0020E2  320B               	rrcf	(??___fladd+2)^0,f,c
 11350  0020E4  320A               	rrcf	(??___fladd+1)^0,f,c
 11351  0020E6  3209               	rrcf	??___fladd^0,f,c
 11352  0020E8  C009  F001         	movff	??___fladd,___fladd@b
 11353  0020EC  C00A  F002         	movff	??___fladd+1,___fladd@b+1
 11354  0020F0  C00B  F003         	movff	??___fladd+2,___fladd@b+2
 11355  0020F4  C00C  F004         	movff	??___fladd+3,___fladd@b+3
 11356  0020F8  280F               	incf	___fladd@bexp^0,w,c
 11357  0020FA  B4D8               	btfsc	status,2,c
 11358  0020FC  EF82  F010         	goto	u3771
 11359  002100  EF84  F010         	goto	u3770
 11360  002104                     u3771:
 11361  002104  EF85  F010         	goto	l3846
 11362  002108                     u3770:
 11363  002108  2A0F               	incf	___fladd@bexp^0,f,c
 11364  00210A                     l3846:
 11365  00210A  280F               	incf	___fladd@bexp^0,w,c
 11366  00210C  B4D8               	btfsc	status,2,c
 11367  00210E  EF8B  F010         	goto	u3781
 11368  002112  EF8D  F010         	goto	u3780
 11369  002116                     u3781:
 11370  002116  EF95  F010         	goto	l3850
 11371  00211A                     u3780:
 11372  00211A  500F               	movf	___fladd@bexp^0,w,c
 11373  00211C  A4D8               	btfss	status,2,c
 11374  00211E  EF93  F010         	goto	u3791
 11375  002122  EF95  F010         	goto	u3790
 11376  002126                     u3791:
 11377  002126  EFA7  F010         	goto	l3854
 11378  00212A                     u3790:
 11379  00212A                     l3850:
 11380  00212A  0E00               	movlw	0
 11381  00212C  6E01               	movwf	___fladd@b^0,c
 11382  00212E  0E00               	movlw	0
 11383  002130  6E02               	movwf	(___fladd@b+1)^0,c
 11384  002132  0E00               	movlw	0
 11385  002134  6E03               	movwf	(___fladd@b+2)^0,c
 11386  002136  0E00               	movlw	0
 11387  002138  6E04               	movwf	(___fladd@b+3)^0,c
 11388  00213A  500F               	movf	___fladd@bexp^0,w,c
 11389  00213C  A4D8               	btfss	status,2,c
 11390  00213E  EFA3  F010         	goto	u3801
 11391  002142  EFA5  F010         	goto	u3800
 11392  002146                     u3801:
 11393  002146  EFA7  F010         	goto	l3854
 11394  00214A                     u3800:
 11395  00214A  0E00               	movlw	0
 11396  00214C  6E0D               	movwf	___fladd@signs^0,c
 11397  00214E                     l3854:
 11398  00214E  A00F               	btfss	___fladd@bexp^0,0,c
 11399  002150  EFAC  F010         	goto	u3811
 11400  002154  EFAE  F010         	goto	u3810
 11401  002158                     u3811:
 11402  002158  EFB1  F010         	goto	l3858
 11403  00215C                     u3810:
 11404  00215C  8E03               	bsf	(___fladd@b+2)^0,7,c
 11405  00215E  EFB2  F010         	goto	l3860
 11406  002162                     l3858:
 11407  002162  9E03               	bcf	(___fladd@b+2)^0,7,c
 11408  002164                     l3860:
 11409  002164  90D8               	bcf	status,0,c
 11410  002166  300F               	rrcf	___fladd@bexp^0,w,c
 11411  002168  6E04               	movwf	(___fladd@b+3)^0,c
 11412  00216A  AE0D               	btfss	___fladd@signs^0,7,c
 11413  00216C  EFBA  F010         	goto	u3821
 11414  002170  EFBC  F010         	goto	u3820
 11415  002174                     u3821:
 11416  002174  EFBD  F010         	goto	l3866
 11417  002178                     u3820:
 11418  002178  8E04               	bsf	(___fladd@b+3)^0,7,c
 11419  00217A                     l3866:
 11420  00217A  C001  F001         	movff	___fladd@b,?___fladd
 11421  00217E  C002  F002         	movff	___fladd@b+1,?___fladd+1
 11422  002182  C003  F003         	movff	___fladd@b+2,?___fladd+2
 11423  002186  C004  F004         	movff	___fladd@b+3,?___fladd+3
 11424  00218A                     l1151:
 11425  00218A  0012               	return		;funcret
 11426  00218C                     __end_of___fladd:
 11427                           	callstack 0
 11428                           
 11429 ;; *************** function ___flneg *****************
 11430 ;; Defined at:
 11431 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\flneg.c"
 11432 ;; Parameters:    Size  Location     Type
 11433 ;;  f1              4    0[COMRAM] unsigned char 
 11434 ;; Auto vars:     Size  Location     Type
 11435 ;;		None
 11436 ;; Return value:  Size  Location     Type
 11437 ;;                  4    0[COMRAM] unsigned char 
 11438 ;; Registers used:
 11439 ;;		wreg, status,2, status,0
 11440 ;; Tracked objects:
 11441 ;;		On entry : 0/0
 11442 ;;		On exit  : 0/0
 11443 ;;		Unchanged: 0/0
 11444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11445 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11446 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11447 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11448 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11449 ;;Total ram usage:        4 bytes
 11450 ;; Hardware stack levels used: 1
 11451 ;; Hardware stack levels required when called: 1
 11452 ;; This function calls:
 11453 ;;		Nothing
 11454 ;; This function is called by:
 11455 ;;		_roundf
 11456 ;; This function uses a non-reentrant model
 11457 ;;
 11458                           
 11459                           	psect	text51
 11460  005C7C                     __ptext51:
 11461                           	callstack 0
 11462  005C7C                     ___flneg:
 11463                           	callstack 25
 11464  005C7C  5001               	movf	___flneg@f1^0,w,c
 11465  005C7E  1002               	iorwf	(___flneg@f1+1)^0,w,c
 11466  005C80  1003               	iorwf	(___flneg@f1+2)^0,w,c
 11467  005C82  1004               	iorwf	(___flneg@f1+3)^0,w,c
 11468  005C84  B4D8               	btfsc	status,2,c
 11469  005C86  EF47  F02E         	goto	u4181
 11470  005C8A  EF49  F02E         	goto	u4180
 11471  005C8E                     u4181:
 11472  005C8E  EF51  F02E         	goto	l4130
 11473  005C92                     u4180:
 11474  005C92  0E00               	movlw	0
 11475  005C94  1A01               	xorwf	___flneg@f1^0,f,c
 11476  005C96  0E00               	movlw	0
 11477  005C98  1A02               	xorwf	(___flneg@f1+1)^0,f,c
 11478  005C9A  0E00               	movlw	0
 11479  005C9C  1A03               	xorwf	(___flneg@f1+2)^0,f,c
 11480  005C9E  0E80               	movlw	128
 11481  005CA0  1A04               	xorwf	(___flneg@f1+3)^0,f,c
 11482  005CA2                     l4130:
 11483  005CA2  C001  F001         	movff	___flneg@f1,?___flneg
 11484  005CA6  C002  F002         	movff	___flneg@f1+1,?___flneg+1
 11485  005CAA  C003  F003         	movff	___flneg@f1+2,?___flneg+2
 11486  005CAE  C004  F004         	movff	___flneg@f1+3,?___flneg+3
 11487  005CB2  0012               	return		;funcret
 11488  005CB4                     __end_of___flneg:
 11489                           	callstack 0
 11490                           
 11491 ;; *************** function ___flmul *****************
 11492 ;; Defined at:
 11493 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\sprcmul.c"
 11494 ;; Parameters:    Size  Location     Type
 11495 ;;  b               4   39[COMRAM] unsigned char 
 11496 ;;  a               4   43[COMRAM] unsigned char 
 11497 ;; Auto vars:     Size  Location     Type
 11498 ;;  prod            4   58[COMRAM] struct .
 11499 ;;  grs             4   52[COMRAM] unsigned long 
 11500 ;;  temp            2   62[COMRAM] struct .
 11501 ;;  bexp            1   57[COMRAM] unsigned char 
 11502 ;;  aexp            1   56[COMRAM] unsigned char 
 11503 ;;  sign            1   51[COMRAM] unsigned char 
 11504 ;; Return value:  Size  Location     Type
 11505 ;;                  4   39[COMRAM] unsigned char 
 11506 ;; Registers used:
 11507 ;;		wreg, status,2, status,0, prodl, prodh
 11508 ;; Tracked objects:
 11509 ;;		On entry : 0/0
 11510 ;;		On exit  : 0/0
 11511 ;;		Unchanged: 0/0
 11512 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11513 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11514 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11515 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11516 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11517 ;;Total ram usage:       25 bytes
 11518 ;; Hardware stack levels used: 1
 11519 ;; Hardware stack levels required when called: 1
 11520 ;; This function calls:
 11521 ;;		Nothing
 11522 ;; This function is called by:
 11523 ;;		_detect_color
 11524 ;;		_detect_wall
 11525 ;;		_roundf
 11526 ;; This function uses a non-reentrant model
 11527 ;;
 11528                           
 11529                           	psect	text52
 11530  00218C                     __ptext52:
 11531                           	callstack 0
 11532  00218C                     ___flmul:
 11533                           	callstack 25
 11534  00218C  502B               	movf	(___flmul@b+3)^0,w,c
 11535  00218E  0B80               	andlw	128
 11536  002190  6E34               	movwf	___flmul@sign^0,c
 11537  002192  502B               	movf	(___flmul@b+3)^0,w,c
 11538  002194  242B               	addwf	(___flmul@b+3)^0,w,c
 11539  002196  6E3A               	movwf	___flmul@bexp^0,c
 11540  002198  AE2A               	btfss	(___flmul@b+2)^0,7,c
 11541  00219A  EFD1  F010         	goto	u3941
 11542  00219E  EFD3  F010         	goto	u3940
 11543  0021A2                     u3941:
 11544  0021A2  EFD4  F010         	goto	l3974
 11545  0021A6                     u3940:
 11546  0021A6  803A               	bsf	___flmul@bexp^0,0,c
 11547  0021A8                     l3974:
 11548  0021A8  503A               	movf	___flmul@bexp^0,w,c
 11549  0021AA  B4D8               	btfsc	status,2,c
 11550  0021AC  EFDA  F010         	goto	u3951
 11551  0021B0  EFDC  F010         	goto	u3950
 11552  0021B4                     u3951:
 11553  0021B4  EFEF  F010         	goto	l3982
 11554  0021B8                     u3950:
 11555  0021B8  283A               	incf	___flmul@bexp^0,w,c
 11556  0021BA  A4D8               	btfss	status,2,c
 11557  0021BC  EFE2  F010         	goto	u3961
 11558  0021C0  EFE4  F010         	goto	u3960
 11559  0021C4                     u3961:
 11560  0021C4  EFEC  F010         	goto	l3980
 11561  0021C8                     u3960:
 11562  0021C8  0E00               	movlw	0
 11563  0021CA  6E28               	movwf	___flmul@b^0,c
 11564  0021CC  0E00               	movlw	0
 11565  0021CE  6E29               	movwf	(___flmul@b+1)^0,c
 11566  0021D0  0E00               	movlw	0
 11567  0021D2  6E2A               	movwf	(___flmul@b+2)^0,c
 11568  0021D4  0E00               	movlw	0
 11569  0021D6  6E2B               	movwf	(___flmul@b+3)^0,c
 11570  0021D8                     l3980:
 11571  0021D8  8E2A               	bsf	(___flmul@b+2)^0,7,c
 11572  0021DA  EFF7  F010         	goto	l3984
 11573  0021DE                     l3982:
 11574  0021DE  0E00               	movlw	0
 11575  0021E0  6E28               	movwf	___flmul@b^0,c
 11576  0021E2  0E00               	movlw	0
 11577  0021E4  6E29               	movwf	(___flmul@b+1)^0,c
 11578  0021E6  0E00               	movlw	0
 11579  0021E8  6E2A               	movwf	(___flmul@b+2)^0,c
 11580  0021EA  0E00               	movlw	0
 11581  0021EC  6E2B               	movwf	(___flmul@b+3)^0,c
 11582  0021EE                     l3984:
 11583  0021EE  502F               	movf	(___flmul@a+3)^0,w,c
 11584  0021F0  0B80               	andlw	128
 11585  0021F2  1A34               	xorwf	___flmul@sign^0,f,c
 11586  0021F4  502F               	movf	(___flmul@a+3)^0,w,c
 11587  0021F6  242F               	addwf	(___flmul@a+3)^0,w,c
 11588  0021F8  6E39               	movwf	___flmul@aexp^0,c
 11589  0021FA  AE2E               	btfss	(___flmul@a+2)^0,7,c
 11590  0021FC  EF02  F011         	goto	u3971
 11591  002200  EF04  F011         	goto	u3970
 11592  002204                     u3971:
 11593  002204  EF05  F011         	goto	l3992
 11594  002208                     u3970:
 11595  002208  8039               	bsf	___flmul@aexp^0,0,c
 11596  00220A                     l3992:
 11597  00220A  5039               	movf	___flmul@aexp^0,w,c
 11598  00220C  B4D8               	btfsc	status,2,c
 11599  00220E  EF0B  F011         	goto	u3981
 11600  002212  EF0D  F011         	goto	u3980
 11601  002216                     u3981:
 11602  002216  EF20  F011         	goto	l4000
 11603  00221A                     u3980:
 11604  00221A  2839               	incf	___flmul@aexp^0,w,c
 11605  00221C  A4D8               	btfss	status,2,c
 11606  00221E  EF13  F011         	goto	u3991
 11607  002222  EF15  F011         	goto	u3990
 11608  002226                     u3991:
 11609  002226  EF1D  F011         	goto	l3998
 11610  00222A                     u3990:
 11611  00222A  0E00               	movlw	0
 11612  00222C  6E2C               	movwf	___flmul@a^0,c
 11613  00222E  0E00               	movlw	0
 11614  002230  6E2D               	movwf	(___flmul@a+1)^0,c
 11615  002232  0E00               	movlw	0
 11616  002234  6E2E               	movwf	(___flmul@a+2)^0,c
 11617  002236  0E00               	movlw	0
 11618  002238  6E2F               	movwf	(___flmul@a+3)^0,c
 11619  00223A                     l3998:
 11620  00223A  8E2E               	bsf	(___flmul@a+2)^0,7,c
 11621  00223C  EF28  F011         	goto	l1228
 11622  002240                     l4000:
 11623  002240  0E00               	movlw	0
 11624  002242  6E2C               	movwf	___flmul@a^0,c
 11625  002244  0E00               	movlw	0
 11626  002246  6E2D               	movwf	(___flmul@a+1)^0,c
 11627  002248  0E00               	movlw	0
 11628  00224A  6E2E               	movwf	(___flmul@a+2)^0,c
 11629  00224C  0E00               	movlw	0
 11630  00224E  6E2F               	movwf	(___flmul@a+3)^0,c
 11631  002250                     l1228:
 11632  002250  5039               	movf	___flmul@aexp^0,w,c
 11633  002252  B4D8               	btfsc	status,2,c
 11634  002254  EF2E  F011         	goto	u4001
 11635  002258  EF30  F011         	goto	u4000
 11636  00225C                     u4001:
 11637  00225C  EF38  F011         	goto	l4004
 11638  002260                     u4000:
 11639  002260  503A               	movf	___flmul@bexp^0,w,c
 11640  002262  A4D8               	btfss	status,2,c
 11641  002264  EF36  F011         	goto	u4011
 11642  002268  EF38  F011         	goto	u4010
 11643  00226C                     u4011:
 11644  00226C  EF42  F011         	goto	l4008
 11645  002270                     u4010:
 11646  002270                     l4004:
 11647  002270  0E00               	movlw	0
 11648  002272  6E28               	movwf	?___flmul^0,c
 11649  002274  0E00               	movlw	0
 11650  002276  6E29               	movwf	(?___flmul+1)^0,c
 11651  002278  0E00               	movlw	0
 11652  00227A  6E2A               	movwf	(?___flmul+2)^0,c
 11653  00227C  0E00               	movlw	0
 11654  00227E  6E2B               	movwf	(?___flmul+3)^0,c
 11655  002280  EFDA  F012         	goto	l1232
 11656  002284                     l4008:
 11657  002284  502E               	movf	(___flmul@a+2)^0,w,c
 11658  002286  0228               	mulwf	___flmul@b^0,c
 11659  002288  CFF3 F03F          	movff	prodl,___flmul@temp
 11660  00228C  CFF4 F040          	movff	prodh,___flmul@temp+1
 11661  002290  503F               	movf	___flmul@temp^0,w,c
 11662  002292  6E35               	movwf	___flmul@grs^0,c
 11663  002294  6A36               	clrf	(___flmul@grs+1)^0,c
 11664  002296  6A37               	clrf	(___flmul@grs+2)^0,c
 11665  002298  6A38               	clrf	(___flmul@grs+3)^0,c
 11666  00229A  5040               	movf	(___flmul@temp+1)^0,w,c
 11667  00229C  6E3B               	movwf	___flmul@prod^0,c
 11668  00229E  6A3C               	clrf	(___flmul@prod+1)^0,c
 11669  0022A0  6A3D               	clrf	(___flmul@prod+2)^0,c
 11670  0022A2  6A3E               	clrf	(___flmul@prod+3)^0,c
 11671  0022A4  502D               	movf	(___flmul@a+1)^0,w,c
 11672  0022A6  0229               	mulwf	(___flmul@b+1)^0,c
 11673  0022A8  CFF3 F03F          	movff	prodl,___flmul@temp
 11674  0022AC  CFF4 F040          	movff	prodh,___flmul@temp+1
 11675  0022B0  503F               	movf	___flmul@temp^0,w,c
 11676  0022B2  2635               	addwf	___flmul@grs^0,f,c
 11677  0022B4  0E00               	movlw	0
 11678  0022B6  2236               	addwfc	(___flmul@grs+1)^0,f,c
 11679  0022B8  2237               	addwfc	(___flmul@grs+2)^0,f,c
 11680  0022BA  2238               	addwfc	(___flmul@grs+3)^0,f,c
 11681  0022BC  5040               	movf	(___flmul@temp+1)^0,w,c
 11682  0022BE  263B               	addwf	___flmul@prod^0,f,c
 11683  0022C0  0E00               	movlw	0
 11684  0022C2  223C               	addwfc	(___flmul@prod+1)^0,f,c
 11685  0022C4  223D               	addwfc	(___flmul@prod+2)^0,f,c
 11686  0022C6  223E               	addwfc	(___flmul@prod+3)^0,f,c
 11687  0022C8  502C               	movf	___flmul@a^0,w,c
 11688  0022CA  022A               	mulwf	(___flmul@b+2)^0,c
 11689  0022CC  CFF3 F03F          	movff	prodl,___flmul@temp
 11690  0022D0  CFF4 F040          	movff	prodh,___flmul@temp+1
 11691  0022D4  503F               	movf	___flmul@temp^0,w,c
 11692  0022D6  2635               	addwf	___flmul@grs^0,f,c
 11693  0022D8  0E00               	movlw	0
 11694  0022DA  2236               	addwfc	(___flmul@grs+1)^0,f,c
 11695  0022DC  2237               	addwfc	(___flmul@grs+2)^0,f,c
 11696  0022DE  2238               	addwfc	(___flmul@grs+3)^0,f,c
 11697  0022E0  5040               	movf	(___flmul@temp+1)^0,w,c
 11698  0022E2  263B               	addwf	___flmul@prod^0,f,c
 11699  0022E4  0E00               	movlw	0
 11700  0022E6  223C               	addwfc	(___flmul@prod+1)^0,f,c
 11701  0022E8  223D               	addwfc	(___flmul@prod+2)^0,f,c
 11702  0022EA  223E               	addwfc	(___flmul@prod+3)^0,f,c
 11703  0022EC  C037  F038         	movff	___flmul@grs+2,___flmul@grs+3
 11704  0022F0  C036  F037         	movff	___flmul@grs+1,___flmul@grs+2
 11705  0022F4  C035  F036         	movff	___flmul@grs,___flmul@grs+1
 11706  0022F8  6A35               	clrf	___flmul@grs^0,c
 11707  0022FA  502C               	movf	___flmul@a^0,w,c
 11708  0022FC  0229               	mulwf	(___flmul@b+1)^0,c
 11709  0022FE  CFF3 F03F          	movff	prodl,___flmul@temp
 11710  002302  CFF4 F040          	movff	prodh,___flmul@temp+1
 11711  002306  503F               	movf	___flmul@temp^0,w,c
 11712  002308  2635               	addwf	___flmul@grs^0,f,c
 11713  00230A  5040               	movf	(___flmul@temp+1)^0,w,c
 11714  00230C  2236               	addwfc	(___flmul@grs+1)^0,f,c
 11715  00230E  0E00               	movlw	0
 11716  002310  2237               	addwfc	(___flmul@grs+2)^0,f,c
 11717  002312  0E00               	movlw	0
 11718  002314  2238               	addwfc	(___flmul@grs+3)^0,f,c
 11719  002316  502D               	movf	(___flmul@a+1)^0,w,c
 11720  002318  0228               	mulwf	___flmul@b^0,c
 11721  00231A  CFF3 F03F          	movff	prodl,___flmul@temp
 11722  00231E  CFF4 F040          	movff	prodh,___flmul@temp+1
 11723  002322  503F               	movf	___flmul@temp^0,w,c
 11724  002324  2635               	addwf	___flmul@grs^0,f,c
 11725  002326  5040               	movf	(___flmul@temp+1)^0,w,c
 11726  002328  2236               	addwfc	(___flmul@grs+1)^0,f,c
 11727  00232A  0E00               	movlw	0
 11728  00232C  2237               	addwfc	(___flmul@grs+2)^0,f,c
 11729  00232E  0E00               	movlw	0
 11730  002330  2238               	addwfc	(___flmul@grs+3)^0,f,c
 11731  002332  C037  F038         	movff	___flmul@grs+2,___flmul@grs+3
 11732  002336  C036  F037         	movff	___flmul@grs+1,___flmul@grs+2
 11733  00233A  C035  F036         	movff	___flmul@grs,___flmul@grs+1
 11734  00233E  6A35               	clrf	___flmul@grs^0,c
 11735  002340  502C               	movf	___flmul@a^0,w,c
 11736  002342  0228               	mulwf	___flmul@b^0,c
 11737  002344  CFF3 F03F          	movff	prodl,___flmul@temp
 11738  002348  CFF4 F040          	movff	prodh,___flmul@temp+1
 11739  00234C  503F               	movf	___flmul@temp^0,w,c
 11740  00234E  2635               	addwf	___flmul@grs^0,f,c
 11741  002350  5040               	movf	(___flmul@temp+1)^0,w,c
 11742  002352  2236               	addwfc	(___flmul@grs+1)^0,f,c
 11743  002354  0E00               	movlw	0
 11744  002356  2237               	addwfc	(___flmul@grs+2)^0,f,c
 11745  002358  0E00               	movlw	0
 11746  00235A  2238               	addwfc	(___flmul@grs+3)^0,f,c
 11747  00235C  502E               	movf	(___flmul@a+2)^0,w,c
 11748  00235E  0229               	mulwf	(___flmul@b+1)^0,c
 11749  002360  CFF3 F03F          	movff	prodl,___flmul@temp
 11750  002364  CFF4 F040          	movff	prodh,___flmul@temp+1
 11751  002368  503F               	movf	___flmul@temp^0,w,c
 11752  00236A  263B               	addwf	___flmul@prod^0,f,c
 11753  00236C  5040               	movf	(___flmul@temp+1)^0,w,c
 11754  00236E  223C               	addwfc	(___flmul@prod+1)^0,f,c
 11755  002370  0E00               	movlw	0
 11756  002372  223D               	addwfc	(___flmul@prod+2)^0,f,c
 11757  002374  0E00               	movlw	0
 11758  002376  223E               	addwfc	(___flmul@prod+3)^0,f,c
 11759  002378  502D               	movf	(___flmul@a+1)^0,w,c
 11760  00237A  022A               	mulwf	(___flmul@b+2)^0,c
 11761  00237C  CFF3 F03F          	movff	prodl,___flmul@temp
 11762  002380  CFF4 F040          	movff	prodh,___flmul@temp+1
 11763  002384  503F               	movf	___flmul@temp^0,w,c
 11764  002386  263B               	addwf	___flmul@prod^0,f,c
 11765  002388  5040               	movf	(___flmul@temp+1)^0,w,c
 11766  00238A  223C               	addwfc	(___flmul@prod+1)^0,f,c
 11767  00238C  0E00               	movlw	0
 11768  00238E  223D               	addwfc	(___flmul@prod+2)^0,f,c
 11769  002390  0E00               	movlw	0
 11770  002392  223E               	addwfc	(___flmul@prod+3)^0,f,c
 11771  002394  502E               	movf	(___flmul@a+2)^0,w,c
 11772  002396  022A               	mulwf	(___flmul@b+2)^0,c
 11773  002398  CFF3 F03F          	movff	prodl,___flmul@temp
 11774  00239C  CFF4 F040          	movff	prodh,___flmul@temp+1
 11775  0023A0  503F               	movf	___flmul@temp^0,w,c
 11776  0023A2  6E30               	movwf	??___flmul^0,c
 11777  0023A4  5040               	movf	(___flmul@temp+1)^0,w,c
 11778  0023A6  6E31               	movwf	(??___flmul+1)^0,c
 11779  0023A8  6A32               	clrf	(??___flmul+2)^0,c
 11780  0023AA  6A33               	clrf	(??___flmul+3)^0,c
 11781  0023AC  C032  F033         	movff	??___flmul+2,??___flmul+3
 11782  0023B0  C031  F032         	movff	??___flmul+1,??___flmul+2
 11783  0023B4  C030  F031         	movff	??___flmul,??___flmul+1
 11784  0023B8  6A30               	clrf	??___flmul^0,c
 11785  0023BA  5030               	movf	??___flmul^0,w,c
 11786  0023BC  263B               	addwf	___flmul@prod^0,f,c
 11787  0023BE  5031               	movf	(??___flmul+1)^0,w,c
 11788  0023C0  223C               	addwfc	(___flmul@prod+1)^0,f,c
 11789  0023C2  5032               	movf	(??___flmul+2)^0,w,c
 11790  0023C4  223D               	addwfc	(___flmul@prod+2)^0,f,c
 11791  0023C6  5033               	movf	(??___flmul+3)^0,w,c
 11792  0023C8  223E               	addwfc	(___flmul@prod+3)^0,f,c
 11793  0023CA  C035  F030         	movff	___flmul@grs,??___flmul
 11794  0023CE  C036  F031         	movff	___flmul@grs+1,??___flmul+1
 11795  0023D2  C037  F032         	movff	___flmul@grs+2,??___flmul+2
 11796  0023D6  C038  F033         	movff	___flmul@grs+3,??___flmul+3
 11797  0023DA  0E19               	movlw	25
 11798  0023DC  EFF5  F011         	goto	u4020
 11799  0023E0                     u4025:
 11800  0023E0  90D8               	bcf	status,0,c
 11801  0023E2  3233               	rrcf	(??___flmul+3)^0,f,c
 11802  0023E4  3232               	rrcf	(??___flmul+2)^0,f,c
 11803  0023E6  3231               	rrcf	(??___flmul+1)^0,f,c
 11804  0023E8  3230               	rrcf	??___flmul^0,f,c
 11805  0023EA                     u4020:
 11806  0023EA  2EE8               	decfsz	wreg,f,c
 11807  0023EC  EFF0  F011         	goto	u4025
 11808  0023F0  5030               	movf	??___flmul^0,w,c
 11809  0023F2  263B               	addwf	___flmul@prod^0,f,c
 11810  0023F4  5031               	movf	(??___flmul+1)^0,w,c
 11811  0023F6  223C               	addwfc	(___flmul@prod+1)^0,f,c
 11812  0023F8  5032               	movf	(??___flmul+2)^0,w,c
 11813  0023FA  223D               	addwfc	(___flmul@prod+2)^0,f,c
 11814  0023FC  5033               	movf	(??___flmul+3)^0,w,c
 11815  0023FE  223E               	addwfc	(___flmul@prod+3)^0,f,c
 11816  002400  C037  F038         	movff	___flmul@grs+2,___flmul@grs+3
 11817  002404  C036  F037         	movff	___flmul@grs+1,___flmul@grs+2
 11818  002408  C035  F036         	movff	___flmul@grs,___flmul@grs+1
 11819  00240C  6A35               	clrf	___flmul@grs^0,c
 11820  00240E  5039               	movf	___flmul@aexp^0,w,c
 11821  002410  C03A  F030         	movff	___flmul@bexp,??___flmul
 11822  002414  6A31               	clrf	(??___flmul+1)^0,c
 11823  002416  2630               	addwf	??___flmul^0,f,c
 11824  002418  0E00               	movlw	0
 11825  00241A  2231               	addwfc	(??___flmul+1)^0,f,c
 11826  00241C  0E82               	movlw	130
 11827  00241E  2430               	addwf	??___flmul^0,w,c
 11828  002420  6E3F               	movwf	___flmul@temp^0,c
 11829  002422  0EFF               	movlw	255
 11830  002424  2031               	addwfc	(??___flmul+1)^0,w,c
 11831  002426  6E40               	movwf	(___flmul@temp+1)^0,c
 11832  002428  EF2B  F012         	goto	l4056
 11833  00242C                     l4050:
 11834  00242C  90D8               	bcf	status,0,c
 11835  00242E  363B               	rlcf	___flmul@prod^0,f,c
 11836  002430  363C               	rlcf	(___flmul@prod+1)^0,f,c
 11837  002432  363D               	rlcf	(___flmul@prod+2)^0,f,c
 11838  002434  363E               	rlcf	(___flmul@prod+3)^0,f,c
 11839  002436  AE38               	btfss	(___flmul@grs+3)^0,7,c
 11840  002438  EF20  F012         	goto	u4031
 11841  00243C  EF22  F012         	goto	u4030
 11842  002440                     u4031:
 11843  002440  EF23  F012         	goto	l1235
 11844  002444                     u4030:
 11845  002444  803B               	bsf	___flmul@prod^0,0,c
 11846  002446                     l1235:
 11847  002446  90D8               	bcf	status,0,c
 11848  002448  3635               	rlcf	___flmul@grs^0,f,c
 11849  00244A  3636               	rlcf	(___flmul@grs+1)^0,f,c
 11850  00244C  3637               	rlcf	(___flmul@grs+2)^0,f,c
 11851  00244E  3638               	rlcf	(___flmul@grs+3)^0,f,c
 11852  002450  063F               	decf	___flmul@temp^0,f,c
 11853  002452  A0D8               	btfss	status,0,c
 11854  002454  0640               	decf	(___flmul@temp+1)^0,f,c
 11855  002456                     l4056:
 11856  002456  AE3D               	btfss	(___flmul@prod+2)^0,7,c
 11857  002458  EF30  F012         	goto	u4041
 11858  00245C  EF32  F012         	goto	u4040
 11859  002460                     u4041:
 11860  002460  EF16  F012         	goto	l4050
 11861  002464                     u4040:
 11862  002464  0E00               	movlw	0
 11863  002466  6E39               	movwf	___flmul@aexp^0,c
 11864  002468  AE38               	btfss	(___flmul@grs+3)^0,7,c
 11865  00246A  EF39  F012         	goto	u4051
 11866  00246E  EF3B  F012         	goto	u4050
 11867  002472                     u4051:
 11868  002472  EF5F  F012         	goto	l1237
 11869  002476                     u4050:
 11870  002476  0EFF               	movlw	255
 11871  002478  1435               	andwf	___flmul@grs^0,w,c
 11872  00247A  6E30               	movwf	??___flmul^0,c
 11873  00247C  0EFF               	movlw	255
 11874  00247E  1436               	andwf	(___flmul@grs+1)^0,w,c
 11875  002480  6E31               	movwf	(??___flmul+1)^0,c
 11876  002482  0EFF               	movlw	255
 11877  002484  1437               	andwf	(___flmul@grs+2)^0,w,c
 11878  002486  6E32               	movwf	(??___flmul+2)^0,c
 11879  002488  0E7F               	movlw	127
 11880  00248A  1438               	andwf	(___flmul@grs+3)^0,w,c
 11881  00248C  6E33               	movwf	(??___flmul+3)^0,c
 11882  00248E  5030               	movf	??___flmul^0,w,c
 11883  002490  1031               	iorwf	(??___flmul+1)^0,w,c
 11884  002492  1032               	iorwf	(??___flmul+2)^0,w,c
 11885  002494  1033               	iorwf	(??___flmul+3)^0,w,c
 11886  002496  B4D8               	btfsc	status,2,c
 11887  002498  EF50  F012         	goto	u4061
 11888  00249C  EF52  F012         	goto	u4060
 11889  0024A0                     u4061:
 11890  0024A0  EF56  F012         	goto	l1238
 11891  0024A4                     u4060:
 11892  0024A4                     l4064:
 11893  0024A4  0E01               	movlw	1
 11894  0024A6  6E39               	movwf	___flmul@aexp^0,c
 11895  0024A8  EF5F  F012         	goto	l1237
 11896  0024AC                     l1238:
 11897  0024AC  A03B               	btfss	___flmul@prod^0,0,c
 11898  0024AE  EF5B  F012         	goto	u4071
 11899  0024B2  EF5D  F012         	goto	u4070
 11900  0024B6                     u4071:
 11901  0024B6  EF5F  F012         	goto	l1237
 11902  0024BA                     u4070:
 11903  0024BA  EF52  F012         	goto	l4064
 11904  0024BE                     l1237:
 11905  0024BE  5039               	movf	___flmul@aexp^0,w,c
 11906  0024C0  B4D8               	btfsc	status,2,c
 11907  0024C2  EF65  F012         	goto	u4081
 11908  0024C6  EF67  F012         	goto	u4080
 11909  0024CA                     u4081:
 11910  0024CA  EF8B  F012         	goto	l4076
 11911  0024CE                     u4080:
 11912  0024CE  0E01               	movlw	1
 11913  0024D0  263B               	addwf	___flmul@prod^0,f,c
 11914  0024D2  0E00               	movlw	0
 11915  0024D4  223C               	addwfc	(___flmul@prod+1)^0,f,c
 11916  0024D6  223D               	addwfc	(___flmul@prod+2)^0,f,c
 11917  0024D8  223E               	addwfc	(___flmul@prod+3)^0,f,c
 11918  0024DA  A03E               	btfss	(___flmul@prod+3)^0,0,c
 11919  0024DC  EF72  F012         	goto	u4091
 11920  0024E0  EF74  F012         	goto	u4090
 11921  0024E4                     u4091:
 11922  0024E4  EF8B  F012         	goto	l4076
 11923  0024E8                     u4090:
 11924  0024E8  C03B  F030         	movff	___flmul@prod,??___flmul
 11925  0024EC  C03C  F031         	movff	___flmul@prod+1,??___flmul+1
 11926  0024F0  C03D  F032         	movff	___flmul@prod+2,??___flmul+2
 11927  0024F4  C03E  F033         	movff	___flmul@prod+3,??___flmul+3
 11928  0024F8  3433               	rlcf	(??___flmul+3)^0,w,c
 11929  0024FA  3233               	rrcf	(??___flmul+3)^0,f,c
 11930  0024FC  3232               	rrcf	(??___flmul+2)^0,f,c
 11931  0024FE  3231               	rrcf	(??___flmul+1)^0,f,c
 11932  002500  3230               	rrcf	??___flmul^0,f,c
 11933  002502  C030  F03B         	movff	??___flmul,___flmul@prod
 11934  002506  C031  F03C         	movff	??___flmul+1,___flmul@prod+1
 11935  00250A  C032  F03D         	movff	??___flmul+2,___flmul@prod+2
 11936  00250E  C033  F03E         	movff	??___flmul+3,___flmul@prod+3
 11937  002512  4A3F               	infsnz	___flmul@temp^0,f,c
 11938  002514  2A40               	incf	(___flmul@temp+1)^0,f,c
 11939  002516                     l4076:
 11940  002516  BE40               	btfsc	(___flmul@temp+1)^0,7,c
 11941  002518  EF96  F012         	goto	u4101
 11942  00251C  5040               	movf	(___flmul@temp+1)^0,w,c
 11943  00251E  E108               	bnz	u4100
 11944  002520  283F               	incf	___flmul@temp^0,w,c
 11945  002522  A0D8               	btfss	status,0,c
 11946  002524  EF96  F012         	goto	u4101
 11947  002528  EF98  F012         	goto	u4100
 11948  00252C                     u4101:
 11949  00252C  EFA2  F012         	goto	l4080
 11950  002530                     u4100:
 11951  002530  0E00               	movlw	0
 11952  002532  6E3B               	movwf	___flmul@prod^0,c
 11953  002534  0E00               	movlw	0
 11954  002536  6E3C               	movwf	(___flmul@prod+1)^0,c
 11955  002538  0E80               	movlw	128
 11956  00253A  6E3D               	movwf	(___flmul@prod+2)^0,c
 11957  00253C  0E7F               	movlw	127
 11958  00253E  6E3E               	movwf	(___flmul@prod+3)^0,c
 11959  002540  EFD0  F012         	goto	l4092
 11960  002544                     l4080:
 11961  002544  BE40               	btfsc	(___flmul@temp+1)^0,7,c
 11962  002546  EFAF  F012         	goto	u4110
 11963  00254A  5040               	movf	(___flmul@temp+1)^0,w,c
 11964  00254C  E106               	bnz	u4111
 11965  00254E  043F               	decf	___flmul@temp^0,w,c
 11966  002550  B0D8               	btfsc	status,0,c
 11967  002552  EFAD  F012         	goto	u4111
 11968  002556  EFAF  F012         	goto	u4110
 11969  00255A                     u4111:
 11970  00255A  EFBB  F012         	goto	l1245
 11971  00255E                     u4110:
 11972  00255E  0E00               	movlw	0
 11973  002560  6E3B               	movwf	___flmul@prod^0,c
 11974  002562  0E00               	movlw	0
 11975  002564  6E3C               	movwf	(___flmul@prod+1)^0,c
 11976  002566  0E00               	movlw	0
 11977  002568  6E3D               	movwf	(___flmul@prod+2)^0,c
 11978  00256A  0E00               	movlw	0
 11979  00256C  6E3E               	movwf	(___flmul@prod+3)^0,c
 11980  00256E  0E00               	movlw	0
 11981  002570  6E34               	movwf	___flmul@sign^0,c
 11982  002572  EFD0  F012         	goto	l4092
 11983  002576                     l1245:
 11984  002576  C03F  F03A         	movff	___flmul@temp,___flmul@bexp
 11985  00257A  0EFF               	movlw	255
 11986  00257C  163B               	andwf	___flmul@prod^0,f,c
 11987  00257E  0EFF               	movlw	255
 11988  002580  163C               	andwf	(___flmul@prod+1)^0,f,c
 11989  002582  0E7F               	movlw	127
 11990  002584  163D               	andwf	(___flmul@prod+2)^0,f,c
 11991  002586  0E00               	movlw	0
 11992  002588  163E               	andwf	(___flmul@prod+3)^0,f,c
 11993  00258A  A03A               	btfss	___flmul@bexp^0,0,c
 11994  00258C  EFCA  F012         	goto	u4121
 11995  002590  EFCC  F012         	goto	u4120
 11996  002594                     u4121:
 11997  002594  EFCD  F012         	goto	l4090
 11998  002598                     u4120:
 11999  002598  8E3D               	bsf	(___flmul@prod+2)^0,7,c
 12000  00259A                     l4090:
 12001  00259A  90D8               	bcf	status,0,c
 12002  00259C  303A               	rrcf	___flmul@bexp^0,w,c
 12003  00259E  6E3E               	movwf	(___flmul@prod+3)^0,c
 12004  0025A0                     l4092:
 12005  0025A0  5034               	movf	___flmul@sign^0,w,c
 12006  0025A2  123E               	iorwf	(___flmul@prod+3)^0,f,c
 12007  0025A4  C03B  F028         	movff	___flmul@prod,?___flmul
 12008  0025A8  C03C  F029         	movff	___flmul@prod+1,?___flmul+1
 12009  0025AC  C03D  F02A         	movff	___flmul@prod+2,?___flmul+2
 12010  0025B0  C03E  F02B         	movff	___flmul@prod+3,?___flmul+3
 12011  0025B4                     l1232:
 12012  0025B4  0012               	return		;funcret
 12013  0025B6                     __end_of___flmul:
 12014                           	callstack 0
 12015                           
 12016 ;; *************** function ___flge *****************
 12017 ;; Defined at:
 12018 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\flge.c"
 12019 ;; Parameters:    Size  Location     Type
 12020 ;;  ff1             4    0[COMRAM] unsigned char 
 12021 ;;  ff2             4    4[COMRAM] unsigned char 
 12022 ;; Auto vars:     Size  Location     Type
 12023 ;;		None
 12024 ;; Return value:  Size  Location     Type
 12025 ;;		None               void
 12026 ;; Registers used:
 12027 ;;		wreg, status,2, status,0
 12028 ;; Tracked objects:
 12029 ;;		On entry : 0/0
 12030 ;;		On exit  : 0/0
 12031 ;;		Unchanged: 0/0
 12032 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12033 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12034 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12035 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12036 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12037 ;;Total ram usage:       12 bytes
 12038 ;; Hardware stack levels used: 1
 12039 ;; Hardware stack levels required when called: 1
 12040 ;; This function calls:
 12041 ;;		Nothing
 12042 ;; This function is called by:
 12043 ;;		_roundf
 12044 ;; This function uses a non-reentrant model
 12045 ;;
 12046                           
 12047                           	psect	text53
 12048  004FCC                     __ptext53:
 12049                           	callstack 0
 12050  004FCC                     ___flge:
 12051                           	callstack 25
 12052  004FCC  0E00               	movlw	0
 12053  004FCE  1401               	andwf	___flge@ff1^0,w,c
 12054  004FD0  6E09               	movwf	??___flge^0,c
 12055  004FD2  0E00               	movlw	0
 12056  004FD4  1402               	andwf	(___flge@ff1+1)^0,w,c
 12057  004FD6  6E0A               	movwf	(??___flge+1)^0,c
 12058  004FD8  0E80               	movlw	128
 12059  004FDA  1403               	andwf	(___flge@ff1+2)^0,w,c
 12060  004FDC  6E0B               	movwf	(??___flge+2)^0,c
 12061  004FDE  0E7F               	movlw	127
 12062  004FE0  1404               	andwf	(___flge@ff1+3)^0,w,c
 12063  004FE2  6E0C               	movwf	(??___flge+3)^0,c
 12064  004FE4  5009               	movf	??___flge^0,w,c
 12065  004FE6  100A               	iorwf	(??___flge+1)^0,w,c
 12066  004FE8  100B               	iorwf	(??___flge+2)^0,w,c
 12067  004FEA  100C               	iorwf	(??___flge+3)^0,w,c
 12068  004FEC  A4D8               	btfss	status,2,c
 12069  004FEE  EFFB  F027         	goto	u4131
 12070  004FF2  EFFD  F027         	goto	u4130
 12071  004FF6                     u4131:
 12072  004FF6  EF05  F028         	goto	l4108
 12073  004FFA                     u4130:
 12074  004FFA  0E00               	movlw	0
 12075  004FFC  6E01               	movwf	___flge@ff1^0,c
 12076  004FFE  0E00               	movlw	0
 12077  005000  6E02               	movwf	(___flge@ff1+1)^0,c
 12078  005002  0E00               	movlw	0
 12079  005004  6E03               	movwf	(___flge@ff1+2)^0,c
 12080  005006  0E00               	movlw	0
 12081  005008  6E04               	movwf	(___flge@ff1+3)^0,c
 12082  00500A                     l4108:
 12083  00500A  0E00               	movlw	0
 12084  00500C  1405               	andwf	___flge@ff2^0,w,c
 12085  00500E  6E09               	movwf	??___flge^0,c
 12086  005010  0E00               	movlw	0
 12087  005012  1406               	andwf	(___flge@ff2+1)^0,w,c
 12088  005014  6E0A               	movwf	(??___flge+1)^0,c
 12089  005016  0E80               	movlw	128
 12090  005018  1407               	andwf	(___flge@ff2+2)^0,w,c
 12091  00501A  6E0B               	movwf	(??___flge+2)^0,c
 12092  00501C  0E7F               	movlw	127
 12093  00501E  1408               	andwf	(___flge@ff2+3)^0,w,c
 12094  005020  6E0C               	movwf	(??___flge+3)^0,c
 12095  005022  5009               	movf	??___flge^0,w,c
 12096  005024  100A               	iorwf	(??___flge+1)^0,w,c
 12097  005026  100B               	iorwf	(??___flge+2)^0,w,c
 12098  005028  100C               	iorwf	(??___flge+3)^0,w,c
 12099  00502A  A4D8               	btfss	status,2,c
 12100  00502C  EF1A  F028         	goto	u4141
 12101  005030  EF1C  F028         	goto	u4140
 12102  005034                     u4141:
 12103  005034  EF24  F028         	goto	l4112
 12104  005038                     u4140:
 12105  005038  0E00               	movlw	0
 12106  00503A  6E05               	movwf	___flge@ff2^0,c
 12107  00503C  0E00               	movlw	0
 12108  00503E  6E06               	movwf	(___flge@ff2+1)^0,c
 12109  005040  0E00               	movlw	0
 12110  005042  6E07               	movwf	(___flge@ff2+2)^0,c
 12111  005044  0E00               	movlw	0
 12112  005046  6E08               	movwf	(___flge@ff2+3)^0,c
 12113  005048                     l4112:
 12114  005048  AE04               	btfss	(___flge@ff1+3)^0,7,c
 12115  00504A  EF29  F028         	goto	u4151
 12116  00504E  EF2B  F028         	goto	u4150
 12117  005052                     u4151:
 12118  005052  EF34  F028         	goto	l4116
 12119  005056                     u4150:
 12120  005056  6C01               	negf	___flge@ff1^0,c
 12121  005058  1E02               	comf	(___flge@ff1+1)^0,f,c
 12122  00505A  B0D8               	btfsc	status,0,c
 12123  00505C  2A02               	incf	(___flge@ff1+1)^0,f,c
 12124  00505E  1E03               	comf	(___flge@ff1+2)^0,f,c
 12125  005060  B0D8               	btfsc	status,0,c
 12126  005062  2A03               	incf	(___flge@ff1+2)^0,f,c
 12127  005064  0E80               	movlw	128
 12128  005066  5604               	subfwb	(___flge@ff1+3)^0,f,c
 12129  005068                     l4116:
 12130  005068  AE08               	btfss	(___flge@ff2+3)^0,7,c
 12131  00506A  EF39  F028         	goto	u4161
 12132  00506E  EF3B  F028         	goto	u4160
 12133  005072                     u4161:
 12134  005072  EF44  F028         	goto	l879
 12135  005076                     u4160:
 12136  005076  6C05               	negf	___flge@ff2^0,c
 12137  005078  1E06               	comf	(___flge@ff2+1)^0,f,c
 12138  00507A  B0D8               	btfsc	status,0,c
 12139  00507C  2A06               	incf	(___flge@ff2+1)^0,f,c
 12140  00507E  1E07               	comf	(___flge@ff2+2)^0,f,c
 12141  005080  B0D8               	btfsc	status,0,c
 12142  005082  2A07               	incf	(___flge@ff2+2)^0,f,c
 12143  005084  0E80               	movlw	128
 12144  005086  5608               	subfwb	(___flge@ff2+3)^0,f,c
 12145  005088                     l879:
 12146  005088  0E00               	movlw	0
 12147  00508A  1A01               	xorwf	___flge@ff1^0,f,c
 12148  00508C  0E00               	movlw	0
 12149  00508E  1A02               	xorwf	(___flge@ff1+1)^0,f,c
 12150  005090  0E00               	movlw	0
 12151  005092  1A03               	xorwf	(___flge@ff1+2)^0,f,c
 12152  005094  0E80               	movlw	128
 12153  005096  1A04               	xorwf	(___flge@ff1+3)^0,f,c
 12154  005098  0E00               	movlw	0
 12155  00509A  1A05               	xorwf	___flge@ff2^0,f,c
 12156  00509C  0E00               	movlw	0
 12157  00509E  1A06               	xorwf	(___flge@ff2+1)^0,f,c
 12158  0050A0  0E00               	movlw	0
 12159  0050A2  1A07               	xorwf	(___flge@ff2+2)^0,f,c
 12160  0050A4  0E80               	movlw	128
 12161  0050A6  1A08               	xorwf	(___flge@ff2+3)^0,f,c
 12162  0050A8  5005               	movf	___flge@ff2^0,w,c
 12163  0050AA  5C01               	subwf	___flge@ff1^0,w,c
 12164  0050AC  5006               	movf	(___flge@ff2+1)^0,w,c
 12165  0050AE  5802               	subwfb	(___flge@ff1+1)^0,w,c
 12166  0050B0  5007               	movf	(___flge@ff2+2)^0,w,c
 12167  0050B2  5803               	subwfb	(___flge@ff1+2)^0,w,c
 12168  0050B4  5008               	movf	(___flge@ff2+3)^0,w,c
 12169  0050B6  5804               	subwfb	(___flge@ff1+3)^0,w,c
 12170  0050B8  B0D8               	btfsc	status,0,c
 12171  0050BA  EF61  F028         	goto	u4171
 12172  0050BE  EF63  F028         	goto	u4170
 12173  0050C2                     u4171:
 12174  0050C2  EF66  F028         	goto	l4122
 12175  0050C6                     u4170:
 12176  0050C6  90D8               	bcf	status,0,c
 12177  0050C8  EF67  F028         	goto	l884
 12178  0050CC                     l4122:
 12179  0050CC  80D8               	bsf	status,0,c
 12180  0050CE                     l884:
 12181  0050CE  0012               	return		;funcret
 12182  0050D0                     __end_of___flge:
 12183                           	callstack 0
 12184                           
 12185 ;; *************** function ___fltol *****************
 12186 ;; Defined at:
 12187 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\fltol.c"
 12188 ;; Parameters:    Size  Location     Type
 12189 ;;  f1              4   90[COMRAM] unsigned char 
 12190 ;; Auto vars:     Size  Location     Type
 12191 ;;  exp1            1    5[BANK0 ] unsigned char 
 12192 ;;  sign1           1    4[BANK0 ] unsigned char 
 12193 ;; Return value:  Size  Location     Type
 12194 ;;                  4   90[COMRAM] long 
 12195 ;; Registers used:
 12196 ;;		wreg, status,2, status,0
 12197 ;; Tracked objects:
 12198 ;;		On entry : 0/0
 12199 ;;		On exit  : 0/0
 12200 ;;		Unchanged: 0/0
 12201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12202 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12203 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12204 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12205 ;;      Totals:         4       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12206 ;;Total ram usage:       10 bytes
 12207 ;; Hardware stack levels used: 1
 12208 ;; Hardware stack levels required when called: 1
 12209 ;; This function calls:
 12210 ;;		Nothing
 12211 ;; This function is called by:
 12212 ;;		_detect_color
 12213 ;;		_lroundf
 12214 ;; This function uses a non-reentrant model
 12215 ;;
 12216                           
 12217                           	psect	text54
 12218  004EC4                     __ptext54:
 12219                           	callstack 0
 12220  004EC4                     ___fltol:
 12221                           	callstack 26
 12222  004EC4  345D               	rlcf	(___fltol@f1+2)^0,w,c
 12223  004EC6  345E               	rlcf	(___fltol@f1+3)^0,w,c
 12224  004EC8  0100               	movlb	0	; () banked
 12225  004ECA  6F65               	movwf	___fltol@exp1& (0+255),b
 12226  004ECC  5165               	movf	___fltol@exp1& (0+255),w,b
 12227  004ECE  A4D8               	btfss	status,2,c
 12228  004ED0  EF6C  F027         	goto	u4321
 12229  004ED4  EF6E  F027         	goto	u4320
 12230  004ED8                     u4321:
 12231  004ED8  EF78  F027         	goto	l4264
 12232  004EDC                     u4320:
 12233  004EDC                     l4260:
 12234                           
 12235                           ; BSR set to: 0
 12236  004EDC  0E00               	movlw	0
 12237  004EDE  6E5B               	movwf	?___fltol^0,c
 12238  004EE0  0E00               	movlw	0
 12239  004EE2  6E5C               	movwf	(?___fltol+1)^0,c
 12240  004EE4  0E00               	movlw	0
 12241  004EE6  6E5D               	movwf	(?___fltol+2)^0,c
 12242  004EE8  0E00               	movlw	0
 12243  004EEA  6E5E               	movwf	(?___fltol+3)^0,c
 12244  004EEC  EFE5  F027         	goto	l911
 12245  004EF0                     l4264:
 12246                           
 12247                           ; BSR set to: 0
 12248  004EF0  C05B  F060         	movff	___fltol@f1,??___fltol
 12249  004EF4  C05C  F061         	movff	___fltol@f1+1,??___fltol+1
 12250  004EF8  C05D  F062         	movff	___fltol@f1+2,??___fltol+2
 12251  004EFC  C05E  F063         	movff	___fltol@f1+3,??___fltol+3
 12252  004F00  0E20               	movlw	32
 12253  004F02  EF88  F027         	goto	u4330
 12254  004F06                     u4335:
 12255  004F06  90D8               	bcf	status,0,c
 12256  004F08  3363               	rrcf	(??___fltol+3)& (0+255),f,b
 12257  004F0A  3362               	rrcf	(??___fltol+2)& (0+255),f,b
 12258  004F0C  3361               	rrcf	(??___fltol+1)& (0+255),f,b
 12259  004F0E  3360               	rrcf	??___fltol& (0+255),f,b
 12260  004F10                     u4330:
 12261  004F10  2EE8               	decfsz	wreg,f,c
 12262  004F12  EF83  F027         	goto	u4335
 12263  004F16  5160               	movf	??___fltol& (0+255),w,b
 12264  004F18  6F64               	movwf	___fltol@sign1& (0+255),b
 12265  004F1A                     
 12266                           ; BSR set to: 0
 12267  004F1A  8E5D               	bsf	(___fltol@f1+2)^0,7,c
 12268  004F1C                     
 12269                           ; BSR set to: 0
 12270  004F1C  0EFF               	movlw	255
 12271  004F1E  165B               	andwf	___fltol@f1^0,f,c
 12272  004F20  0EFF               	movlw	255
 12273  004F22  165C               	andwf	(___fltol@f1+1)^0,f,c
 12274  004F24  0EFF               	movlw	255
 12275  004F26  165D               	andwf	(___fltol@f1+2)^0,f,c
 12276  004F28  0E00               	movlw	0
 12277  004F2A  165E               	andwf	(___fltol@f1+3)^0,f,c
 12278  004F2C                     
 12279                           ; BSR set to: 0
 12280  004F2C  0E96               	movlw	150
 12281  004F2E  5F65               	subwf	___fltol@exp1& (0+255),f,b
 12282  004F30                     
 12283                           ; BSR set to: 0
 12284  004F30  BF65               	btfsc	___fltol@exp1& (0+255),7,b
 12285  004F32  EF9F  F027         	goto	u4340
 12286  004F36  EF9D  F027         	goto	u4341
 12287  004F3A                     u4341:
 12288  004F3A  EFB5  F027         	goto	l4284
 12289  004F3E                     u4340:
 12290  004F3E                     
 12291                           ; BSR set to: 0
 12292  004F3E  5165               	movf	___fltol@exp1& (0+255),w,b
 12293  004F40  0A80               	xorlw	128
 12294  004F42  0F97               	addlw	151
 12295  004F44  B0D8               	btfsc	status,0,c
 12296  004F46  EFA7  F027         	goto	u4351
 12297  004F4A  EFA9  F027         	goto	u4350
 12298  004F4E                     u4351:
 12299  004F4E  EFAB  F027         	goto	l4280
 12300  004F52                     u4350:
 12301  004F52  EF6E  F027         	goto	l4260
 12302  004F56                     l4280:
 12303                           
 12304                           ; BSR set to: 0
 12305  004F56  90D8               	bcf	status,0,c
 12306  004F58  325E               	rrcf	(___fltol@f1+3)^0,f,c
 12307  004F5A  325D               	rrcf	(___fltol@f1+2)^0,f,c
 12308  004F5C  325C               	rrcf	(___fltol@f1+1)^0,f,c
 12309  004F5E  325B               	rrcf	___fltol@f1^0,f,c
 12310  004F60                     
 12311                           ; BSR set to: 0
 12312  004F60  3F65               	incfsz	___fltol@exp1& (0+255),f,b
 12313  004F62  EFAB  F027         	goto	l4280
 12314  004F66  EFCD  F027         	goto	l4294
 12315  004F6A                     l4284:
 12316                           
 12317                           ; BSR set to: 0
 12318  004F6A  0E1F               	movlw	31
 12319  004F6C  6565               	cpfsgt	___fltol@exp1& (0+255),b
 12320  004F6E  EFBB  F027         	goto	u4361
 12321  004F72  EFBD  F027         	goto	u4360
 12322  004F76                     u4361:
 12323  004F76  EFC5  F027         	goto	l4292
 12324  004F7A                     u4360:
 12325  004F7A  EF6E  F027         	goto	l4260
 12326  004F7E                     l4290:
 12327                           
 12328                           ; BSR set to: 0
 12329  004F7E  90D8               	bcf	status,0,c
 12330  004F80  365B               	rlcf	___fltol@f1^0,f,c
 12331  004F82  365C               	rlcf	(___fltol@f1+1)^0,f,c
 12332  004F84  365D               	rlcf	(___fltol@f1+2)^0,f,c
 12333  004F86  365E               	rlcf	(___fltol@f1+3)^0,f,c
 12334  004F88  0765               	decf	___fltol@exp1& (0+255),f,b
 12335  004F8A                     l4292:
 12336                           
 12337                           ; BSR set to: 0
 12338  004F8A  5165               	movf	___fltol@exp1& (0+255),w,b
 12339  004F8C  A4D8               	btfss	status,2,c
 12340  004F8E  EFCB  F027         	goto	u4371
 12341  004F92  EFCD  F027         	goto	u4370
 12342  004F96                     u4371:
 12343  004F96  EFBF  F027         	goto	l4290
 12344  004F9A                     u4370:
 12345  004F9A                     l4294:
 12346                           
 12347                           ; BSR set to: 0
 12348  004F9A  5164               	movf	___fltol@sign1& (0+255),w,b
 12349  004F9C  B4D8               	btfsc	status,2,c
 12350  004F9E  EFD3  F027         	goto	u4381
 12351  004FA2  EFD5  F027         	goto	u4380
 12352  004FA6                     u4381:
 12353  004FA6  EFDD  F027         	goto	l4298
 12354  004FAA                     u4380:
 12355  004FAA                     
 12356                           ; BSR set to: 0
 12357  004FAA  1E5E               	comf	(___fltol@f1+3)^0,f,c
 12358  004FAC  1E5D               	comf	(___fltol@f1+2)^0,f,c
 12359  004FAE  1E5C               	comf	(___fltol@f1+1)^0,f,c
 12360  004FB0  6C5B               	negf	___fltol@f1^0,c
 12361  004FB2  0E00               	movlw	0
 12362  004FB4  225C               	addwfc	(___fltol@f1+1)^0,f,c
 12363  004FB6  225D               	addwfc	(___fltol@f1+2)^0,f,c
 12364  004FB8  225E               	addwfc	(___fltol@f1+3)^0,f,c
 12365  004FBA                     l4298:
 12366                           
 12367                           ; BSR set to: 0
 12368  004FBA  C05B  F05B         	movff	___fltol@f1,?___fltol
 12369  004FBE  C05C  F05C         	movff	___fltol@f1+1,?___fltol+1
 12370  004FC2  C05D  F05D         	movff	___fltol@f1+2,?___fltol+2
 12371  004FC6  C05E  F05E         	movff	___fltol@f1+3,?___fltol+3
 12372  004FCA                     l911:
 12373                           
 12374                           ; BSR set to: 0
 12375  004FCA  0012               	return		;funcret
 12376  004FCC                     __end_of___fltol:
 12377                           	callstack 0
 12378                           
 12379 ;; *************** function _color_read_Clear *****************
 12380 ;; Defined at:
 12381 ;;		line 151 in file "color.c"
 12382 ;; Parameters:    Size  Location     Type
 12383 ;;		None
 12384 ;; Auto vars:     Size  Location     Type
 12385 ;;  tmp             2    9[COMRAM] unsigned int 
 12386 ;; Return value:  Size  Location     Type
 12387 ;;                  2    4[COMRAM] unsigned int 
 12388 ;; Registers used:
 12389 ;;		wreg, status,2, status,0, cstack
 12390 ;; Tracked objects:
 12391 ;;		On entry : 0/0
 12392 ;;		On exit  : 0/0
 12393 ;;		Unchanged: 0/0
 12394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12395 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12396 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12397 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12398 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12399 ;;Total ram usage:        7 bytes
 12400 ;; Hardware stack levels used: 1
 12401 ;; Hardware stack levels required when called: 3
 12402 ;; This function calls:
 12403 ;;		_I2C_2_Master_Read
 12404 ;;		_I2C_2_Master_RepStart
 12405 ;;		_I2C_2_Master_Start
 12406 ;;		_I2C_2_Master_Stop
 12407 ;;		_I2C_2_Master_Write
 12408 ;; This function is called by:
 12409 ;;		_read_color
 12410 ;;		_calibrate_white
 12411 ;;		_amb_light_measure
 12412 ;;		_detect_wall
 12413 ;; This function uses a non-reentrant model
 12414 ;;
 12415                           
 12416                           	psect	text55
 12417  005A28                     __ptext55:
 12418                           	callstack 0
 12419  005A28                     _color_read_Clear:
 12420                           	callstack 24
 12421  005A28                     
 12422                           ;color.c: 153:  unsigned int tmp;;color.c: 154:  I2C_2_Master_Start();
 12423  005A28  ECCF  F02F         	call	_I2C_2_Master_Start	;wreg free
 12424                           
 12425                           ;color.c: 155:  I2C_2_Master_Write(0x52 | 0x00);
 12426  005A2C  0E52               	movlw	82
 12427  005A2E  ECB9  F02F         	call	_I2C_2_Master_Write
 12428                           
 12429                           ;color.c: 156:  I2C_2_Master_Write(0xA0 | 0x14);
 12430  005A32  0EB4               	movlw	180
 12431  005A34  ECB9  F02F         	call	_I2C_2_Master_Write
 12432                           
 12433                           ;color.c: 157:  I2C_2_Master_RepStart();
 12434  005A38  ECC5  F02F         	call	_I2C_2_Master_RepStart	;wreg free
 12435                           
 12436                           ;color.c: 158:  I2C_2_Master_Write(0x52 | 0x01);
 12437  005A3C  0E53               	movlw	83
 12438  005A3E  ECB9  F02F         	call	_I2C_2_Master_Write
 12439                           
 12440                           ;color.c: 159:  tmp=I2C_2_Master_Read(1);
 12441  005A42  0E01               	movlw	1
 12442  005A44  ECA2  F02D         	call	_I2C_2_Master_Read
 12443  005A48  6E07               	movwf	??_color_read_Clear^0,c
 12444  005A4A  5007               	movf	??_color_read_Clear^0,w,c
 12445  005A4C  6E0A               	movwf	color_read_Clear@tmp^0,c
 12446  005A4E  6A0B               	clrf	(color_read_Clear@tmp+1)^0,c
 12447                           
 12448                           ;color.c: 160:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
 12449  005A50  0E00               	movlw	0
 12450  005A52  ECA2  F02D         	call	_I2C_2_Master_Read
 12451  005A56  6E07               	movwf	??_color_read_Clear^0,c
 12452  005A58  5007               	movf	??_color_read_Clear^0,w,c
 12453  005A5A  6E09               	movwf	(??_color_read_Clear+2)^0,c
 12454  005A5C  6A08               	clrf	(??_color_read_Clear+1)^0,c
 12455  005A5E  500A               	movf	color_read_Clear@tmp^0,w,c
 12456  005A60  1008               	iorwf	(??_color_read_Clear+1)^0,w,c
 12457  005A62  6E0A               	movwf	color_read_Clear@tmp^0,c
 12458  005A64  500B               	movf	(color_read_Clear@tmp+1)^0,w,c
 12459  005A66  1009               	iorwf	(??_color_read_Clear+2)^0,w,c
 12460  005A68  6E0B               	movwf	(color_read_Clear@tmp+1)^0,c
 12461                           
 12462                           ;color.c: 161:  I2C_2_Master_Stop();
 12463  005A6A  ECCA  F02F         	call	_I2C_2_Master_Stop	;wreg free
 12464  005A6E                     
 12465                           ;color.c: 162:  return tmp;
 12466  005A6E  C00A  F005         	movff	color_read_Clear@tmp,?_color_read_Clear
 12467  005A72  C00B  F006         	movff	color_read_Clear@tmp+1,?_color_read_Clear+1
 12468  005A76  0012               	return		;funcret
 12469  005A78                     __end_of_color_read_Clear:
 12470                           	callstack 0
 12471                           
 12472 ;; *************** function _I2C_2_Master_RepStart *****************
 12473 ;; Defined at:
 12474 ;;		line 33 in file "i2c.c"
 12475 ;; Parameters:    Size  Location     Type
 12476 ;;		None
 12477 ;; Auto vars:     Size  Location     Type
 12478 ;;		None
 12479 ;; Return value:  Size  Location     Type
 12480 ;;                  1    wreg      void 
 12481 ;; Registers used:
 12482 ;;		wreg, status,2, status,0, cstack
 12483 ;; Tracked objects:
 12484 ;;		On entry : 0/0
 12485 ;;		On exit  : 0/0
 12486 ;;		Unchanged: 0/0
 12487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12488 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12489 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12490 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12491 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12492 ;;Total ram usage:        0 bytes
 12493 ;; Hardware stack levels used: 1
 12494 ;; Hardware stack levels required when called: 2
 12495 ;; This function calls:
 12496 ;;		_I2C_2_Master_Idle
 12497 ;; This function is called by:
 12498 ;;		_color_read_Red
 12499 ;;		_color_read_Blue
 12500 ;;		_color_read_Green
 12501 ;;		_color_read_Clear
 12502 ;; This function uses a non-reentrant model
 12503 ;;
 12504                           
 12505                           	psect	text56
 12506  005F8A                     __ptext56:
 12507                           	callstack 0
 12508  005F8A                     _I2C_2_Master_RepStart:
 12509                           	callstack 24
 12510  005F8A                     
 12511                           ;i2c.c: 35:   I2C_2_Master_Idle();
 12512  005F8A  EC08  F02F         	call	_I2C_2_Master_Idle	;wreg free
 12513  005F8E                     
 12514                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
 12515  005F8E  010E               	movlb	14	; () banked
 12516  005F90  83DA               	bsf	218,1,b	;volatile
 12517  005F92                     
 12518                           ; BSR set to: 14
 12519  005F92  0012               	return		;funcret
 12520  005F94                     __end_of_I2C_2_Master_RepStart:
 12521                           	callstack 0
 12522                           
 12523 ;; *************** function _I2C_2_Master_Read *****************
 12524 ;; Defined at:
 12525 ;;		line 51 in file "i2c.c"
 12526 ;; Parameters:    Size  Location     Type
 12527 ;;  ack             1    wreg     unsigned char 
 12528 ;; Auto vars:     Size  Location     Type
 12529 ;;  ack             1    2[COMRAM] unsigned char 
 12530 ;;  tmp             1    3[COMRAM] unsigned char 
 12531 ;; Return value:  Size  Location     Type
 12532 ;;                  1    wreg      unsigned char 
 12533 ;; Registers used:
 12534 ;;		wreg, status,2, status,0, cstack
 12535 ;; Tracked objects:
 12536 ;;		On entry : 0/0
 12537 ;;		On exit  : 0/0
 12538 ;;		Unchanged: 0/0
 12539 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12540 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12541 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12542 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12543 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12544 ;;Total ram usage:        3 bytes
 12545 ;; Hardware stack levels used: 1
 12546 ;; Hardware stack levels required when called: 2
 12547 ;; This function calls:
 12548 ;;		_I2C_2_Master_Idle
 12549 ;; This function is called by:
 12550 ;;		_color_read_Red
 12551 ;;		_color_read_Blue
 12552 ;;		_color_read_Green
 12553 ;;		_color_read_Clear
 12554 ;; This function uses a non-reentrant model
 12555 ;;
 12556                           
 12557                           	psect	text57
 12558  005B44                     __ptext57:
 12559                           	callstack 0
 12560  005B44                     _I2C_2_Master_Read:
 12561                           	callstack 24
 12562                           
 12563                           ; BSR set to: 14
 12564                           ;incstack = 0
 12565                           ;I2C_2_Master_Read@ack stored from wreg
 12566  005B44  6E03               	movwf	I2C_2_Master_Read@ack^0,c
 12567  005B46                     
 12568                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
 12569  005B46  EC08  F02F         	call	_I2C_2_Master_Idle	;wreg free
 12570  005B4A                     
 12571                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
 12572  005B4A  010E               	movlb	14	; () banked
 12573  005B4C  87DA               	bsf	218,3,b	;volatile
 12574                           
 12575                           ;i2c.c: 56:   I2C_2_Master_Idle();
 12576  005B4E  EC08  F02F         	call	_I2C_2_Master_Idle	;wreg free
 12577  005B52                     
 12578                           ;i2c.c: 57:   tmp = SSP2BUF;
 12579  005B52  CED5 F004          	movff	3797,I2C_2_Master_Read@tmp	;volatile
 12580                           
 12581                           ;i2c.c: 58:   I2C_2_Master_Idle();
 12582  005B56  EC08  F02F         	call	_I2C_2_Master_Idle	;wreg free
 12583  005B5A                     
 12584                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
 12585  005B5A  5003               	movf	I2C_2_Master_Read@ack^0,w,c
 12586  005B5C  B4D8               	btfsc	status,2,c
 12587  005B5E  EFB3  F02D         	goto	u3871
 12588  005B62  EFB7  F02D         	goto	u3870
 12589  005B66                     u3871:
 12590  005B66  6A02               	clrf	??_I2C_2_Master_Read^0,c
 12591  005B68  2A02               	incf	??_I2C_2_Master_Read^0,f,c
 12592  005B6A  EFB8  F02D         	goto	u3888
 12593  005B6E                     u3870:
 12594  005B6E  6A02               	clrf	??_I2C_2_Master_Read^0,c
 12595  005B70                     u3888:
 12596  005B70  3A02               	swapf	??_I2C_2_Master_Read^0,f,c
 12597  005B72  4602               	rlncf	??_I2C_2_Master_Read^0,f,c
 12598  005B74  010E               	movlb	14	; () banked
 12599  005B76  51DA               	movf	218,w,b	;volatile
 12600  005B78  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
 12601  005B7A  0BDF               	andlw	-33
 12602  005B7C  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
 12603  005B7E  6FDA               	movwf	218,b	;volatile
 12604  005B80                     
 12605                           ; BSR set to: 14
 12606                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
 12607  005B80  89DA               	bsf	218,4,b	;volatile
 12608  005B82                     
 12609                           ; BSR set to: 14
 12610                           ;i2c.c: 61:   return tmp;
 12611  005B82  5004               	movf	I2C_2_Master_Read@tmp^0,w,c
 12612  005B84                     
 12613                           ; BSR set to: 14
 12614  005B84  0012               	return		;funcret
 12615  005B86                     __end_of_I2C_2_Master_Read:
 12616                           	callstack 0
 12617                           
 12618 ;; *************** function ___xxtofl *****************
 12619 ;; Defined at:
 12620 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\xxtofl.c"
 12621 ;; Parameters:    Size  Location     Type
 12622 ;;  sign            1    wreg     unsigned char 
 12623 ;;  val             4    0[COMRAM] long 
 12624 ;; Auto vars:     Size  Location     Type
 12625 ;;  sign            1    8[COMRAM] unsigned char 
 12626 ;;  arg             4   10[COMRAM] unsigned long 
 12627 ;;  exp             1    9[COMRAM] unsigned char 
 12628 ;; Return value:  Size  Location     Type
 12629 ;;                  4    0[COMRAM] unsigned char 
 12630 ;; Registers used:
 12631 ;;		wreg, status,2, status,0
 12632 ;; Tracked objects:
 12633 ;;		On entry : 0/0
 12634 ;;		On exit  : 0/0
 12635 ;;		Unchanged: 0/0
 12636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12637 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12638 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12639 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12640 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12641 ;;Total ram usage:       14 bytes
 12642 ;; Hardware stack levels used: 1
 12643 ;; Hardware stack levels required when called: 1
 12644 ;; This function calls:
 12645 ;;		Nothing
 12646 ;; This function is called by:
 12647 ;;		_detect_color
 12648 ;;		_amb_light_measure
 12649 ;;		_detect_wall
 12650 ;; This function uses a non-reentrant model
 12651 ;;
 12652                           
 12653                           	psect	text58
 12654  0040B4                     __ptext58:
 12655                           	callstack 0
 12656  0040B4                     ___xxtofl:
 12657                           	callstack 27
 12658                           
 12659                           ; BSR set to: 14
 12660                           ;incstack = 0
 12661                           ;___xxtofl@sign stored from wreg
 12662  0040B4  6E09               	movwf	___xxtofl@sign^0,c
 12663  0040B6  5009               	movf	___xxtofl@sign^0,w,c
 12664  0040B8  B4D8               	btfsc	status,2,c
 12665  0040BA  EF61  F020         	goto	u5061
 12666  0040BE  EF63  F020         	goto	u5060
 12667  0040C2                     u5061:
 12668  0040C2  EF85  F020         	goto	l1269
 12669  0040C6                     u5060:
 12670  0040C6  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
 12671  0040C8  EF6A  F020         	goto	u5070
 12672  0040CC  EF68  F020         	goto	u5071
 12673  0040D0                     u5071:
 12674  0040D0  EF85  F020         	goto	l1269
 12675  0040D4                     u5070:
 12676  0040D4  C001  F005         	movff	___xxtofl@val,??___xxtofl
 12677  0040D8  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
 12678  0040DC  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
 12679  0040E0  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
 12680  0040E4  1E05               	comf	??___xxtofl^0,f,c
 12681  0040E6  1E06               	comf	(??___xxtofl+1)^0,f,c
 12682  0040E8  1E07               	comf	(??___xxtofl+2)^0,f,c
 12683  0040EA  1E08               	comf	(??___xxtofl+3)^0,f,c
 12684  0040EC  2A05               	incf	??___xxtofl^0,f,c
 12685  0040EE  0E00               	movlw	0
 12686  0040F0  2206               	addwfc	(??___xxtofl+1)^0,f,c
 12687  0040F2  2207               	addwfc	(??___xxtofl+2)^0,f,c
 12688  0040F4  2208               	addwfc	(??___xxtofl+3)^0,f,c
 12689  0040F6  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
 12690  0040FA  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
 12691  0040FE  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
 12692  004102  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
 12693  004106  EF8D  F020         	goto	l4622
 12694  00410A                     l1269:
 12695  00410A  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
 12696  00410E  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
 12697  004112  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
 12698  004116  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
 12699  00411A                     l4622:
 12700  00411A  5001               	movf	___xxtofl@val^0,w,c
 12701  00411C  1002               	iorwf	(___xxtofl@val+1)^0,w,c
 12702  00411E  1003               	iorwf	(___xxtofl@val+2)^0,w,c
 12703  004120  1004               	iorwf	(___xxtofl@val+3)^0,w,c
 12704  004122  A4D8               	btfss	status,2,c
 12705  004124  EF96  F020         	goto	u5081
 12706  004128  EF98  F020         	goto	u5080
 12707  00412C                     u5081:
 12708  00412C  EFA2  F020         	goto	l4628
 12709  004130                     u5080:
 12710  004130  0E00               	movlw	0
 12711  004132  6E01               	movwf	?___xxtofl^0,c
 12712  004134  0E00               	movlw	0
 12713  004136  6E02               	movwf	(?___xxtofl+1)^0,c
 12714  004138  0E00               	movlw	0
 12715  00413A  6E03               	movwf	(?___xxtofl+2)^0,c
 12716  00413C  0E00               	movlw	0
 12717  00413E  6E04               	movwf	(?___xxtofl+3)^0,c
 12718  004140  EF33  F021         	goto	l1272
 12719  004144                     l4628:
 12720  004144  0E96               	movlw	150
 12721  004146  6E0A               	movwf	___xxtofl@exp^0,c
 12722  004148  EFAC  F020         	goto	l4632
 12723  00414C                     l4630:
 12724  00414C  2A0A               	incf	___xxtofl@exp^0,f,c
 12725  00414E  90D8               	bcf	status,0,c
 12726  004150  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
 12727  004152  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
 12728  004154  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
 12729  004156  320B               	rrcf	___xxtofl@arg^0,f,c
 12730  004158                     l4632:
 12731  004158  0E00               	movlw	0
 12732  00415A  140B               	andwf	___xxtofl@arg^0,w,c
 12733  00415C  6E05               	movwf	??___xxtofl^0,c
 12734  00415E  0E00               	movlw	0
 12735  004160  140C               	andwf	(___xxtofl@arg+1)^0,w,c
 12736  004162  6E06               	movwf	(??___xxtofl+1)^0,c
 12737  004164  0E00               	movlw	0
 12738  004166  140D               	andwf	(___xxtofl@arg+2)^0,w,c
 12739  004168  6E07               	movwf	(??___xxtofl+2)^0,c
 12740  00416A  0EFE               	movlw	254
 12741  00416C  140E               	andwf	(___xxtofl@arg+3)^0,w,c
 12742  00416E  6E08               	movwf	(??___xxtofl+3)^0,c
 12743  004170  5005               	movf	??___xxtofl^0,w,c
 12744  004172  1006               	iorwf	(??___xxtofl+1)^0,w,c
 12745  004174  1007               	iorwf	(??___xxtofl+2)^0,w,c
 12746  004176  1008               	iorwf	(??___xxtofl+3)^0,w,c
 12747  004178  A4D8               	btfss	status,2,c
 12748  00417A  EFC1  F020         	goto	u5091
 12749  00417E  EFC3  F020         	goto	u5090
 12750  004182                     u5091:
 12751  004182  EFA6  F020         	goto	l4630
 12752  004186                     u5090:
 12753  004186  EFD1  F020         	goto	l1276
 12754  00418A                     l4634:
 12755  00418A  2A0A               	incf	___xxtofl@exp^0,f,c
 12756  00418C  0E01               	movlw	1
 12757  00418E  260B               	addwf	___xxtofl@arg^0,f,c
 12758  004190  0E00               	movlw	0
 12759  004192  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
 12760  004194  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
 12761  004196  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
 12762  004198  90D8               	bcf	status,0,c
 12763  00419A  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
 12764  00419C  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
 12765  00419E  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
 12766  0041A0  320B               	rrcf	___xxtofl@arg^0,f,c
 12767  0041A2                     l1276:
 12768  0041A2  0E00               	movlw	0
 12769  0041A4  140B               	andwf	___xxtofl@arg^0,w,c
 12770  0041A6  6E05               	movwf	??___xxtofl^0,c
 12771  0041A8  0E00               	movlw	0
 12772  0041AA  140C               	andwf	(___xxtofl@arg+1)^0,w,c
 12773  0041AC  6E06               	movwf	(??___xxtofl+1)^0,c
 12774  0041AE  0E00               	movlw	0
 12775  0041B0  140D               	andwf	(___xxtofl@arg+2)^0,w,c
 12776  0041B2  6E07               	movwf	(??___xxtofl+2)^0,c
 12777  0041B4  0EFF               	movlw	255
 12778  0041B6  140E               	andwf	(___xxtofl@arg+3)^0,w,c
 12779  0041B8  6E08               	movwf	(??___xxtofl+3)^0,c
 12780  0041BA  5005               	movf	??___xxtofl^0,w,c
 12781  0041BC  1006               	iorwf	(??___xxtofl+1)^0,w,c
 12782  0041BE  1007               	iorwf	(??___xxtofl+2)^0,w,c
 12783  0041C0  1008               	iorwf	(??___xxtofl+3)^0,w,c
 12784  0041C2  A4D8               	btfss	status,2,c
 12785  0041C4  EFE6  F020         	goto	u5101
 12786  0041C8  EFE8  F020         	goto	u5100
 12787  0041CC                     u5101:
 12788  0041CC  EFC5  F020         	goto	l4634
 12789  0041D0                     u5100:
 12790  0041D0  EFF0  F020         	goto	l4642
 12791  0041D4                     l4640:
 12792  0041D4  060A               	decf	___xxtofl@exp^0,f,c
 12793  0041D6  90D8               	bcf	status,0,c
 12794  0041D8  360B               	rlcf	___xxtofl@arg^0,f,c
 12795  0041DA  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
 12796  0041DC  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
 12797  0041DE  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
 12798  0041E0                     l4642:
 12799  0041E0  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
 12800  0041E2  EFF5  F020         	goto	u5111
 12801  0041E6  EFF7  F020         	goto	u5110
 12802  0041EA                     u5111:
 12803  0041EA  EFFF  F020         	goto	l1283
 12804  0041EE                     u5110:
 12805  0041EE  0E02               	movlw	2
 12806  0041F0  600A               	cpfslt	___xxtofl@exp^0,c
 12807  0041F2  EFFD  F020         	goto	u5121
 12808  0041F6  EFFF  F020         	goto	u5120
 12809  0041FA                     u5121:
 12810  0041FA  EFEA  F020         	goto	l4640
 12811  0041FE                     u5120:
 12812  0041FE                     l1283:
 12813  0041FE  B00A               	btfsc	___xxtofl@exp^0,0,c
 12814  004200  EF04  F021         	goto	u5131
 12815  004204  EF06  F021         	goto	u5130
 12816  004208                     u5131:
 12817  004208  EF07  F021         	goto	l4648
 12818  00420C                     u5130:
 12819  00420C  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
 12820  00420E                     l4648:
 12821  00420E  90D8               	bcf	status,0,c
 12822  004210  320A               	rrcf	___xxtofl@exp^0,f,c
 12823  004212  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
 12824  004216  6A06               	clrf	(??___xxtofl+1)^0,c
 12825  004218  6A07               	clrf	(??___xxtofl+2)^0,c
 12826  00421A  6A08               	clrf	(??___xxtofl+3)^0,c
 12827  00421C  C005  F008         	movff	??___xxtofl,??___xxtofl+3
 12828  004220  6A07               	clrf	(??___xxtofl+2)^0,c
 12829  004222  6A06               	clrf	(??___xxtofl+1)^0,c
 12830  004224  6A05               	clrf	??___xxtofl^0,c
 12831  004226  5005               	movf	??___xxtofl^0,w,c
 12832  004228  120B               	iorwf	___xxtofl@arg^0,f,c
 12833  00422A  5006               	movf	(??___xxtofl+1)^0,w,c
 12834  00422C  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
 12835  00422E  5007               	movf	(??___xxtofl+2)^0,w,c
 12836  004230  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
 12837  004232  5008               	movf	(??___xxtofl+3)^0,w,c
 12838  004234  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
 12839  004236  5009               	movf	___xxtofl@sign^0,w,c
 12840  004238  B4D8               	btfsc	status,2,c
 12841  00423A  EF21  F021         	goto	u5141
 12842  00423E  EF23  F021         	goto	u5140
 12843  004242                     u5141:
 12844  004242  EF2B  F021         	goto	l4658
 12845  004246                     u5140:
 12846  004246  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
 12847  004248  EF2A  F021         	goto	u5150
 12848  00424C  EF28  F021         	goto	u5151
 12849  004250                     u5151:
 12850  004250  EF2B  F021         	goto	l4658
 12851  004254                     u5150:
 12852  004254  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
 12853  004256                     l4658:
 12854  004256  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
 12855  00425A  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
 12856  00425E  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
 12857  004262  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
 12858  004266                     l1272:
 12859  004266  0012               	return		;funcret
 12860  004268                     __end_of___xxtofl:
 12861                           	callstack 0
 12862                           
 12863 ;; *************** function ___fldiv *****************
 12864 ;; Defined at:
 12865 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\sprcdiv.c"
 12866 ;; Parameters:    Size  Location     Type
 12867 ;;  b               4   14[COMRAM] unsigned char 
 12868 ;;  a               4   18[COMRAM] unsigned char 
 12869 ;; Auto vars:     Size  Location     Type
 12870 ;;  grs             4   33[COMRAM] unsigned long 
 12871 ;;  rem             4   26[COMRAM] unsigned long 
 12872 ;;  new_exp         2   31[COMRAM] short 
 12873 ;;  aexp            1   38[COMRAM] unsigned char 
 12874 ;;  bexp            1   37[COMRAM] unsigned char 
 12875 ;;  sign            1   30[COMRAM] unsigned char 
 12876 ;; Return value:  Size  Location     Type
 12877 ;;                  4   14[COMRAM] unsigned char 
 12878 ;; Registers used:
 12879 ;;		wreg, status,2, status,0
 12880 ;; Tracked objects:
 12881 ;;		On entry : 0/0
 12882 ;;		On exit  : 0/0
 12883 ;;		Unchanged: 0/0
 12884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12885 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12886 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12887 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12888 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12889 ;;Total ram usage:       25 bytes
 12890 ;; Hardware stack levels used: 1
 12891 ;; Hardware stack levels required when called: 1
 12892 ;; This function calls:
 12893 ;;		Nothing
 12894 ;; This function is called by:
 12895 ;;		_detect_color
 12896 ;;		_amb_light_measure
 12897 ;; This function uses a non-reentrant model
 12898 ;;
 12899                           
 12900                           	psect	text59
 12901  002D08                     __ptext59:
 12902                           	callstack 0
 12903  002D08                     ___fldiv:
 12904                           	callstack 27
 12905  002D08  5012               	movf	(___fldiv@b+3)^0,w,c
 12906  002D0A  0B80               	andlw	128
 12907  002D0C  6E1F               	movwf	___fldiv@sign^0,c
 12908  002D0E  5012               	movf	(___fldiv@b+3)^0,w,c
 12909  002D10  2412               	addwf	(___fldiv@b+3)^0,w,c
 12910  002D12  6E26               	movwf	___fldiv@bexp^0,c
 12911  002D14  AE11               	btfss	(___fldiv@b+2)^0,7,c
 12912  002D16  EF8F  F016         	goto	u4831
 12913  002D1A  EF91  F016         	goto	u4830
 12914  002D1E                     u4831:
 12915  002D1E  EF92  F016         	goto	l4484
 12916  002D22                     u4830:
 12917  002D22  8026               	bsf	___fldiv@bexp^0,0,c
 12918  002D24                     l4484:
 12919  002D24  5026               	movf	___fldiv@bexp^0,w,c
 12920  002D26  B4D8               	btfsc	status,2,c
 12921  002D28  EF98  F016         	goto	u4841
 12922  002D2C  EF9A  F016         	goto	u4840
 12923  002D30                     u4841:
 12924  002D30  EFAF  F016         	goto	l4494
 12925  002D34                     u4840:
 12926  002D34  2826               	incf	___fldiv@bexp^0,w,c
 12927  002D36  A4D8               	btfss	status,2,c
 12928  002D38  EFA0  F016         	goto	u4851
 12929  002D3C  EFA2  F016         	goto	u4850
 12930  002D40                     u4851:
 12931  002D40  EFAA  F016         	goto	l4490
 12932  002D44                     u4850:
 12933  002D44  0E00               	movlw	0
 12934  002D46  6E0F               	movwf	___fldiv@b^0,c
 12935  002D48  0E00               	movlw	0
 12936  002D4A  6E10               	movwf	(___fldiv@b+1)^0,c
 12937  002D4C  0E00               	movlw	0
 12938  002D4E  6E11               	movwf	(___fldiv@b+2)^0,c
 12939  002D50  0E00               	movlw	0
 12940  002D52  6E12               	movwf	(___fldiv@b+3)^0,c
 12941  002D54                     l4490:
 12942  002D54  8E11               	bsf	(___fldiv@b+2)^0,7,c
 12943  002D56  0E00               	movlw	0
 12944  002D58  6E12               	movwf	(___fldiv@b+3)^0,c
 12945  002D5A  EFB7  F016         	goto	l4496
 12946  002D5E                     l4494:
 12947  002D5E  0E00               	movlw	0
 12948  002D60  6E0F               	movwf	___fldiv@b^0,c
 12949  002D62  0E00               	movlw	0
 12950  002D64  6E10               	movwf	(___fldiv@b+1)^0,c
 12951  002D66  0E00               	movlw	0
 12952  002D68  6E11               	movwf	(___fldiv@b+2)^0,c
 12953  002D6A  0E00               	movlw	0
 12954  002D6C  6E12               	movwf	(___fldiv@b+3)^0,c
 12955  002D6E                     l4496:
 12956  002D6E  5016               	movf	(___fldiv@a+3)^0,w,c
 12957  002D70  0B80               	andlw	128
 12958  002D72  1A1F               	xorwf	___fldiv@sign^0,f,c
 12959  002D74  5016               	movf	(___fldiv@a+3)^0,w,c
 12960  002D76  2416               	addwf	(___fldiv@a+3)^0,w,c
 12961  002D78  6E27               	movwf	___fldiv@aexp^0,c
 12962  002D7A  AE15               	btfss	(___fldiv@a+2)^0,7,c
 12963  002D7C  EFC2  F016         	goto	u4861
 12964  002D80  EFC4  F016         	goto	u4860
 12965  002D84                     u4861:
 12966  002D84  EFC5  F016         	goto	l4504
 12967  002D88                     u4860:
 12968  002D88  8027               	bsf	___fldiv@aexp^0,0,c
 12969  002D8A                     l4504:
 12970  002D8A  5027               	movf	___fldiv@aexp^0,w,c
 12971  002D8C  B4D8               	btfsc	status,2,c
 12972  002D8E  EFCB  F016         	goto	u4871
 12973  002D92  EFCD  F016         	goto	u4870
 12974  002D96                     u4871:
 12975  002D96  EFE2  F016         	goto	l4514
 12976  002D9A                     u4870:
 12977  002D9A  2827               	incf	___fldiv@aexp^0,w,c
 12978  002D9C  A4D8               	btfss	status,2,c
 12979  002D9E  EFD3  F016         	goto	u4881
 12980  002DA2  EFD5  F016         	goto	u4880
 12981  002DA6                     u4881:
 12982  002DA6  EFDD  F016         	goto	l4510
 12983  002DAA                     u4880:
 12984  002DAA  0E00               	movlw	0
 12985  002DAC  6E13               	movwf	___fldiv@a^0,c
 12986  002DAE  0E00               	movlw	0
 12987  002DB0  6E14               	movwf	(___fldiv@a+1)^0,c
 12988  002DB2  0E00               	movlw	0
 12989  002DB4  6E15               	movwf	(___fldiv@a+2)^0,c
 12990  002DB6  0E00               	movlw	0
 12991  002DB8  6E16               	movwf	(___fldiv@a+3)^0,c
 12992  002DBA                     l4510:
 12993  002DBA  8E15               	bsf	(___fldiv@a+2)^0,7,c
 12994  002DBC  0E00               	movlw	0
 12995  002DBE  6E16               	movwf	(___fldiv@a+3)^0,c
 12996  002DC0  EFEA  F016         	goto	l4516
 12997  002DC4                     l4514:
 12998  002DC4  0E00               	movlw	0
 12999  002DC6  6E13               	movwf	___fldiv@a^0,c
 13000  002DC8  0E00               	movlw	0
 13001  002DCA  6E14               	movwf	(___fldiv@a+1)^0,c
 13002  002DCC  0E00               	movlw	0
 13003  002DCE  6E15               	movwf	(___fldiv@a+2)^0,c
 13004  002DD0  0E00               	movlw	0
 13005  002DD2  6E16               	movwf	(___fldiv@a+3)^0,c
 13006  002DD4                     l4516:
 13007  002DD4  5013               	movf	___fldiv@a^0,w,c
 13008  002DD6  1014               	iorwf	(___fldiv@a+1)^0,w,c
 13009  002DD8  1015               	iorwf	(___fldiv@a+2)^0,w,c
 13010  002DDA  1016               	iorwf	(___fldiv@a+3)^0,w,c
 13011  002DDC  A4D8               	btfss	status,2,c
 13012  002DDE  EFF3  F016         	goto	u4891
 13013  002DE2  EFF5  F016         	goto	u4890
 13014  002DE6                     u4891:
 13015  002DE6  EF0D  F017         	goto	l4528
 13016  002DEA                     u4890:
 13017  002DEA  0E00               	movlw	0
 13018  002DEC  6E0F               	movwf	___fldiv@b^0,c
 13019  002DEE  0E00               	movlw	0
 13020  002DF0  6E10               	movwf	(___fldiv@b+1)^0,c
 13021  002DF2  0E00               	movlw	0
 13022  002DF4  6E11               	movwf	(___fldiv@b+2)^0,c
 13023  002DF6  0E00               	movlw	0
 13024  002DF8  6E12               	movwf	(___fldiv@b+3)^0,c
 13025  002DFA  0E80               	movlw	128
 13026  002DFC  1211               	iorwf	(___fldiv@b+2)^0,f,c
 13027  002DFE  0E7F               	movlw	127
 13028  002E00  1212               	iorwf	(___fldiv@b+3)^0,f,c
 13029  002E02                     l4522:
 13030  002E02  501F               	movf	___fldiv@sign^0,w,c
 13031  002E04  1212               	iorwf	(___fldiv@b+3)^0,f,c
 13032  002E06  C00F  F00F         	movff	___fldiv@b,?___fldiv
 13033  002E0A  C010  F010         	movff	___fldiv@b+1,?___fldiv+1
 13034  002E0E  C011  F011         	movff	___fldiv@b+2,?___fldiv+2
 13035  002E12  C012  F012         	movff	___fldiv@b+3,?___fldiv+3
 13036  002E16  EF50  F018         	goto	l1196
 13037  002E1A                     l4528:
 13038  002E1A  5026               	movf	___fldiv@bexp^0,w,c
 13039  002E1C  A4D8               	btfss	status,2,c
 13040  002E1E  EF13  F017         	goto	u4901
 13041  002E22  EF15  F017         	goto	u4900
 13042  002E26                     u4901:
 13043  002E26  EF1F  F017         	goto	l4536
 13044  002E2A                     u4900:
 13045  002E2A  0E00               	movlw	0
 13046  002E2C  6E0F               	movwf	?___fldiv^0,c
 13047  002E2E  0E00               	movlw	0
 13048  002E30  6E10               	movwf	(?___fldiv+1)^0,c
 13049  002E32  0E00               	movlw	0
 13050  002E34  6E11               	movwf	(?___fldiv+2)^0,c
 13051  002E36  0E00               	movlw	0
 13052  002E38  6E12               	movwf	(?___fldiv+3)^0,c
 13053  002E3A  EF50  F018         	goto	l1196
 13054  002E3E                     l4536:
 13055  002E3E  5027               	movf	___fldiv@aexp^0,w,c
 13056  002E40  C026  F017         	movff	___fldiv@bexp,??___fldiv
 13057  002E44  6A18               	clrf	(??___fldiv+1)^0,c
 13058  002E46  5E17               	subwf	??___fldiv^0,f,c
 13059  002E48  0E00               	movlw	0
 13060  002E4A  5A18               	subwfb	(??___fldiv+1)^0,f,c
 13061  002E4C  0E7F               	movlw	127
 13062  002E4E  2417               	addwf	??___fldiv^0,w,c
 13063  002E50  6E20               	movwf	___fldiv@new_exp^0,c
 13064  002E52  0E00               	movlw	0
 13065  002E54  2018               	addwfc	(??___fldiv+1)^0,w,c
 13066  002E56  6E21               	movwf	(___fldiv@new_exp+1)^0,c
 13067  002E58  C00F  F01B         	movff	___fldiv@b,___fldiv@rem
 13068  002E5C  C010  F01C         	movff	___fldiv@b+1,___fldiv@rem+1
 13069  002E60  C011  F01D         	movff	___fldiv@b+2,___fldiv@rem+2
 13070  002E64  C012  F01E         	movff	___fldiv@b+3,___fldiv@rem+3
 13071  002E68  0E00               	movlw	0
 13072  002E6A  6E0F               	movwf	___fldiv@b^0,c
 13073  002E6C  0E00               	movlw	0
 13074  002E6E  6E10               	movwf	(___fldiv@b+1)^0,c
 13075  002E70  0E00               	movlw	0
 13076  002E72  6E11               	movwf	(___fldiv@b+2)^0,c
 13077  002E74  0E00               	movlw	0
 13078  002E76  6E12               	movwf	(___fldiv@b+3)^0,c
 13079  002E78  0E00               	movlw	0
 13080  002E7A  6E22               	movwf	___fldiv@grs^0,c
 13081  002E7C  0E00               	movlw	0
 13082  002E7E  6E23               	movwf	(___fldiv@grs+1)^0,c
 13083  002E80  0E00               	movlw	0
 13084  002E82  6E24               	movwf	(___fldiv@grs+2)^0,c
 13085  002E84  0E00               	movlw	0
 13086  002E86  6E25               	movwf	(___fldiv@grs+3)^0,c
 13087  002E88  0E00               	movlw	0
 13088  002E8A  6E27               	movwf	___fldiv@aexp^0,c
 13089  002E8C  EF80  F017         	goto	l1198
 13090  002E90                     l4546:
 13091  002E90  5027               	movf	___fldiv@aexp^0,w,c
 13092  002E92  B4D8               	btfsc	status,2,c
 13093  002E94  EF4E  F017         	goto	u4911
 13094  002E98  EF50  F017         	goto	u4910
 13095  002E9C                     u4911:
 13096  002E9C  EF67  F017         	goto	l4554
 13097  002EA0                     u4910:
 13098  002EA0  90D8               	bcf	status,0,c
 13099  002EA2  361B               	rlcf	___fldiv@rem^0,f,c
 13100  002EA4  361C               	rlcf	(___fldiv@rem+1)^0,f,c
 13101  002EA6  361D               	rlcf	(___fldiv@rem+2)^0,f,c
 13102  002EA8  361E               	rlcf	(___fldiv@rem+3)^0,f,c
 13103  002EAA  90D8               	bcf	status,0,c
 13104  002EAC  360F               	rlcf	___fldiv@b^0,f,c
 13105  002EAE  3610               	rlcf	(___fldiv@b+1)^0,f,c
 13106  002EB0  3611               	rlcf	(___fldiv@b+2)^0,f,c
 13107  002EB2  3612               	rlcf	(___fldiv@b+3)^0,f,c
 13108  002EB4  AE25               	btfss	(___fldiv@grs+3)^0,7,c
 13109  002EB6  EF5F  F017         	goto	u4921
 13110  002EBA  EF61  F017         	goto	u4920
 13111  002EBE                     u4921:
 13112  002EBE  EF62  F017         	goto	l1201
 13113  002EC2                     u4920:
 13114  002EC2  800F               	bsf	___fldiv@b^0,0,c
 13115  002EC4                     l1201:
 13116  002EC4  90D8               	bcf	status,0,c
 13117  002EC6  3622               	rlcf	___fldiv@grs^0,f,c
 13118  002EC8  3623               	rlcf	(___fldiv@grs+1)^0,f,c
 13119  002ECA  3624               	rlcf	(___fldiv@grs+2)^0,f,c
 13120  002ECC  3625               	rlcf	(___fldiv@grs+3)^0,f,c
 13121  002ECE                     l4554:
 13122  002ECE  5013               	movf	___fldiv@a^0,w,c
 13123  002ED0  5C1B               	subwf	___fldiv@rem^0,w,c
 13124  002ED2  5014               	movf	(___fldiv@a+1)^0,w,c
 13125  002ED4  581C               	subwfb	(___fldiv@rem+1)^0,w,c
 13126  002ED6  5015               	movf	(___fldiv@a+2)^0,w,c
 13127  002ED8  581D               	subwfb	(___fldiv@rem+2)^0,w,c
 13128  002EDA  5016               	movf	(___fldiv@a+3)^0,w,c
 13129  002EDC  581E               	subwfb	(___fldiv@rem+3)^0,w,c
 13130  002EDE  A0D8               	btfss	status,0,c
 13131  002EE0  EF74  F017         	goto	u4931
 13132  002EE4  EF76  F017         	goto	u4930
 13133  002EE8                     u4931:
 13134  002EE8  EF7F  F017         	goto	l4560
 13135  002EEC                     u4930:
 13136  002EEC  8C25               	bsf	(___fldiv@grs+3)^0,6,c
 13137  002EEE  5013               	movf	___fldiv@a^0,w,c
 13138  002EF0  5E1B               	subwf	___fldiv@rem^0,f,c
 13139  002EF2  5014               	movf	(___fldiv@a+1)^0,w,c
 13140  002EF4  5A1C               	subwfb	(___fldiv@rem+1)^0,f,c
 13141  002EF6  5015               	movf	(___fldiv@a+2)^0,w,c
 13142  002EF8  5A1D               	subwfb	(___fldiv@rem+2)^0,f,c
 13143  002EFA  5016               	movf	(___fldiv@a+3)^0,w,c
 13144  002EFC  5A1E               	subwfb	(___fldiv@rem+3)^0,f,c
 13145  002EFE                     l4560:
 13146  002EFE  2A27               	incf	___fldiv@aexp^0,f,c
 13147  002F00                     l1198:
 13148  002F00  0E19               	movlw	25
 13149  002F02  6427               	cpfsgt	___fldiv@aexp^0,c
 13150  002F04  EF86  F017         	goto	u4941
 13151  002F08  EF88  F017         	goto	u4940
 13152  002F0C                     u4941:
 13153  002F0C  EF48  F017         	goto	l4546
 13154  002F10                     u4940:
 13155  002F10  501B               	movf	___fldiv@rem^0,w,c
 13156  002F12  101C               	iorwf	(___fldiv@rem+1)^0,w,c
 13157  002F14  101D               	iorwf	(___fldiv@rem+2)^0,w,c
 13158  002F16  101E               	iorwf	(___fldiv@rem+3)^0,w,c
 13159  002F18  B4D8               	btfsc	status,2,c
 13160  002F1A  EF91  F017         	goto	u4951
 13161  002F1E  EF93  F017         	goto	u4950
 13162  002F22                     u4951:
 13163  002F22  EFAB  F017         	goto	l4572
 13164  002F26                     u4950:
 13165  002F26  8022               	bsf	___fldiv@grs^0,0,c
 13166  002F28  EFAB  F017         	goto	l4572
 13167  002F2C                     l4566:
 13168  002F2C  90D8               	bcf	status,0,c
 13169  002F2E  360F               	rlcf	___fldiv@b^0,f,c
 13170  002F30  3610               	rlcf	(___fldiv@b+1)^0,f,c
 13171  002F32  3611               	rlcf	(___fldiv@b+2)^0,f,c
 13172  002F34  3612               	rlcf	(___fldiv@b+3)^0,f,c
 13173  002F36  AE25               	btfss	(___fldiv@grs+3)^0,7,c
 13174  002F38  EFA0  F017         	goto	u4961
 13175  002F3C  EFA2  F017         	goto	u4960
 13176  002F40                     u4961:
 13177  002F40  EFA3  F017         	goto	l1207
 13178  002F44                     u4960:
 13179  002F44  800F               	bsf	___fldiv@b^0,0,c
 13180  002F46                     l1207:
 13181  002F46  90D8               	bcf	status,0,c
 13182  002F48  3622               	rlcf	___fldiv@grs^0,f,c
 13183  002F4A  3623               	rlcf	(___fldiv@grs+1)^0,f,c
 13184  002F4C  3624               	rlcf	(___fldiv@grs+2)^0,f,c
 13185  002F4E  3625               	rlcf	(___fldiv@grs+3)^0,f,c
 13186  002F50  0620               	decf	___fldiv@new_exp^0,f,c
 13187  002F52  A0D8               	btfss	status,0,c
 13188  002F54  0621               	decf	(___fldiv@new_exp+1)^0,f,c
 13189  002F56                     l4572:
 13190  002F56  AE11               	btfss	(___fldiv@b+2)^0,7,c
 13191  002F58  EFB0  F017         	goto	u4971
 13192  002F5C  EFB2  F017         	goto	u4970
 13193  002F60                     u4971:
 13194  002F60  EF96  F017         	goto	l4566
 13195  002F64                     u4970:
 13196  002F64  0E00               	movlw	0
 13197  002F66  6E27               	movwf	___fldiv@aexp^0,c
 13198  002F68  AE25               	btfss	(___fldiv@grs+3)^0,7,c
 13199  002F6A  EFB9  F017         	goto	u4981
 13200  002F6E  EFBB  F017         	goto	u4980
 13201  002F72                     u4981:
 13202  002F72  EFDF  F017         	goto	l1209
 13203  002F76                     u4980:
 13204  002F76  0EFF               	movlw	255
 13205  002F78  1422               	andwf	___fldiv@grs^0,w,c
 13206  002F7A  6E17               	movwf	??___fldiv^0,c
 13207  002F7C  0EFF               	movlw	255
 13208  002F7E  1423               	andwf	(___fldiv@grs+1)^0,w,c
 13209  002F80  6E18               	movwf	(??___fldiv+1)^0,c
 13210  002F82  0EFF               	movlw	255
 13211  002F84  1424               	andwf	(___fldiv@grs+2)^0,w,c
 13212  002F86  6E19               	movwf	(??___fldiv+2)^0,c
 13213  002F88  0E7F               	movlw	127
 13214  002F8A  1425               	andwf	(___fldiv@grs+3)^0,w,c
 13215  002F8C  6E1A               	movwf	(??___fldiv+3)^0,c
 13216  002F8E  5017               	movf	??___fldiv^0,w,c
 13217  002F90  1018               	iorwf	(??___fldiv+1)^0,w,c
 13218  002F92  1019               	iorwf	(??___fldiv+2)^0,w,c
 13219  002F94  101A               	iorwf	(??___fldiv+3)^0,w,c
 13220  002F96  B4D8               	btfsc	status,2,c
 13221  002F98  EFD0  F017         	goto	u4991
 13222  002F9C  EFD2  F017         	goto	u4990
 13223  002FA0                     u4991:
 13224  002FA0  EFD6  F017         	goto	l1210
 13225  002FA4                     u4990:
 13226  002FA4                     l4580:
 13227  002FA4  0E01               	movlw	1
 13228  002FA6  6E27               	movwf	___fldiv@aexp^0,c
 13229  002FA8  EFDF  F017         	goto	l1209
 13230  002FAC                     l1210:
 13231  002FAC  A00F               	btfss	___fldiv@b^0,0,c
 13232  002FAE  EFDB  F017         	goto	u5001
 13233  002FB2  EFDD  F017         	goto	u5000
 13234  002FB6                     u5001:
 13235  002FB6  EFDF  F017         	goto	l1209
 13236  002FBA                     u5000:
 13237  002FBA  EFD2  F017         	goto	l4580
 13238  002FBE                     l1209:
 13239  002FBE  5027               	movf	___fldiv@aexp^0,w,c
 13240  002FC0  B4D8               	btfsc	status,2,c
 13241  002FC2  EFE5  F017         	goto	u5011
 13242  002FC6  EFE7  F017         	goto	u5010
 13243  002FCA                     u5011:
 13244  002FCA  EF0B  F018         	goto	l4592
 13245  002FCE                     u5010:
 13246  002FCE  0E01               	movlw	1
 13247  002FD0  260F               	addwf	___fldiv@b^0,f,c
 13248  002FD2  0E00               	movlw	0
 13249  002FD4  2210               	addwfc	(___fldiv@b+1)^0,f,c
 13250  002FD6  2211               	addwfc	(___fldiv@b+2)^0,f,c
 13251  002FD8  2212               	addwfc	(___fldiv@b+3)^0,f,c
 13252  002FDA  A012               	btfss	(___fldiv@b+3)^0,0,c
 13253  002FDC  EFF2  F017         	goto	u5021
 13254  002FE0  EFF4  F017         	goto	u5020
 13255  002FE4                     u5021:
 13256  002FE4  EF0B  F018         	goto	l4592
 13257  002FE8                     u5020:
 13258  002FE8  C00F  F017         	movff	___fldiv@b,??___fldiv
 13259  002FEC  C010  F018         	movff	___fldiv@b+1,??___fldiv+1
 13260  002FF0  C011  F019         	movff	___fldiv@b+2,??___fldiv+2
 13261  002FF4  C012  F01A         	movff	___fldiv@b+3,??___fldiv+3
 13262  002FF8  341A               	rlcf	(??___fldiv+3)^0,w,c
 13263  002FFA  321A               	rrcf	(??___fldiv+3)^0,f,c
 13264  002FFC  3219               	rrcf	(??___fldiv+2)^0,f,c
 13265  002FFE  3218               	rrcf	(??___fldiv+1)^0,f,c
 13266  003000  3217               	rrcf	??___fldiv^0,f,c
 13267  003002  C017  F00F         	movff	??___fldiv,___fldiv@b
 13268  003006  C018  F010         	movff	??___fldiv+1,___fldiv@b+1
 13269  00300A  C019  F011         	movff	??___fldiv+2,___fldiv@b+2
 13270  00300E  C01A  F012         	movff	??___fldiv+3,___fldiv@b+3
 13271  003012  4A20               	infsnz	___fldiv@new_exp^0,f,c
 13272  003014  2A21               	incf	(___fldiv@new_exp+1)^0,f,c
 13273  003016                     l4592:
 13274  003016  BE21               	btfsc	(___fldiv@new_exp+1)^0,7,c
 13275  003018  EF16  F018         	goto	u5031
 13276  00301C  5021               	movf	(___fldiv@new_exp+1)^0,w,c
 13277  00301E  E108               	bnz	u5030
 13278  003020  2820               	incf	___fldiv@new_exp^0,w,c
 13279  003022  A0D8               	btfss	status,0,c
 13280  003024  EF16  F018         	goto	u5031
 13281  003028  EF18  F018         	goto	u5030
 13282  00302C                     u5031:
 13283  00302C  EF23  F018         	goto	l4596
 13284  003030                     u5030:
 13285  003030  0E00               	movlw	0
 13286  003032  6E21               	movwf	(___fldiv@new_exp+1)^0,c
 13287  003034  6820               	setf	___fldiv@new_exp^0,c
 13288  003036  0E00               	movlw	0
 13289  003038  6E0F               	movwf	___fldiv@b^0,c
 13290  00303A  0E00               	movlw	0
 13291  00303C  6E10               	movwf	(___fldiv@b+1)^0,c
 13292  00303E  0E00               	movlw	0
 13293  003040  6E11               	movwf	(___fldiv@b+2)^0,c
 13294  003042  0E00               	movlw	0
 13295  003044  6E12               	movwf	(___fldiv@b+3)^0,c
 13296  003046                     l4596:
 13297  003046  BE21               	btfsc	(___fldiv@new_exp+1)^0,7,c
 13298  003048  EF30  F018         	goto	u5040
 13299  00304C  5021               	movf	(___fldiv@new_exp+1)^0,w,c
 13300  00304E  E106               	bnz	u5041
 13301  003050  0420               	decf	___fldiv@new_exp^0,w,c
 13302  003052  B0D8               	btfsc	status,0,c
 13303  003054  EF2E  F018         	goto	u5041
 13304  003058  EF30  F018         	goto	u5040
 13305  00305C                     u5041:
 13306  00305C  EF3E  F018         	goto	l4600
 13307  003060                     u5040:
 13308  003060  0E00               	movlw	0
 13309  003062  6E21               	movwf	(___fldiv@new_exp+1)^0,c
 13310  003064  0E00               	movlw	0
 13311  003066  6E20               	movwf	___fldiv@new_exp^0,c
 13312  003068  0E00               	movlw	0
 13313  00306A  6E0F               	movwf	___fldiv@b^0,c
 13314  00306C  0E00               	movlw	0
 13315  00306E  6E10               	movwf	(___fldiv@b+1)^0,c
 13316  003070  0E00               	movlw	0
 13317  003072  6E11               	movwf	(___fldiv@b+2)^0,c
 13318  003074  0E00               	movlw	0
 13319  003076  6E12               	movwf	(___fldiv@b+3)^0,c
 13320  003078  0E00               	movlw	0
 13321  00307A  6E1F               	movwf	___fldiv@sign^0,c
 13322  00307C                     l4600:
 13323  00307C  C020  F026         	movff	___fldiv@new_exp,___fldiv@bexp
 13324  003080  A026               	btfss	___fldiv@bexp^0,0,c
 13325  003082  EF45  F018         	goto	u5051
 13326  003086  EF47  F018         	goto	u5050
 13327  00308A                     u5051:
 13328  00308A  EF4A  F018         	goto	l4606
 13329  00308E                     u5050:
 13330  00308E  8E11               	bsf	(___fldiv@b+2)^0,7,c
 13331  003090  EF4B  F018         	goto	l4608
 13332  003094                     l4606:
 13333  003094  9E11               	bcf	(___fldiv@b+2)^0,7,c
 13334  003096                     l4608:
 13335  003096  90D8               	bcf	status,0,c
 13336  003098  3026               	rrcf	___fldiv@bexp^0,w,c
 13337  00309A  6E12               	movwf	(___fldiv@b+3)^0,c
 13338  00309C  EF01  F017         	goto	l4522
 13339  0030A0                     l1196:
 13340  0030A0  0012               	return		;funcret
 13341  0030A2                     __end_of___fldiv:
 13342                           	callstack 0
 13343                           
 13344 ;; *************** function _LED_C *****************
 13345 ;; Defined at:
 13346 ;;		line 193 in file "color.c"
 13347 ;; Parameters:    Size  Location     Type
 13348 ;;		None
 13349 ;; Auto vars:     Size  Location     Type
 13350 ;;		None
 13351 ;; Return value:  Size  Location     Type
 13352 ;;                  1    wreg      void 
 13353 ;; Registers used:
 13354 ;;		wreg
 13355 ;; Tracked objects:
 13356 ;;		On entry : 0/0
 13357 ;;		On exit  : 0/0
 13358 ;;		Unchanged: 0/0
 13359 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13360 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13361 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13362 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13363 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13364 ;;Total ram usage:        2 bytes
 13365 ;; Hardware stack levels used: 1
 13366 ;; Hardware stack levels required when called: 1
 13367 ;; This function calls:
 13368 ;;		Nothing
 13369 ;; This function is called by:
 13370 ;;		_calibrate_white
 13371 ;;		_color_data_collection
 13372 ;;		_amb_light_measure
 13373 ;;		_detect_wall
 13374 ;;		_test_function
 13375 ;; This function uses a non-reentrant model
 13376 ;;
 13377                           
 13378                           	psect	text60
 13379  005EDE                     __ptext60:
 13380                           	callstack 0
 13381  005EDE                     _LED_C:
 13382                           	callstack 27
 13383  005EDE                     
 13384                           ;color.c: 195:     LATGbits.LATG1 = 1;
 13385  005EDE  827F               	bsf	127,1,c	;volatile
 13386                           
 13387                           ;color.c: 196:     LATFbits.LATF7 = 1;
 13388  005EE0  8E7E               	bsf	126,7,c	;volatile
 13389                           
 13390                           ;color.c: 197:     LATAbits.LATA4 = 1;
 13391  005EE2  8879               	bsf	121,4,c	;volatile
 13392  005EE4                     
 13393                           ;color.c: 198:     _delay((unsigned long)((200)*(64000000/4000.0)));
 13394  005EE4  0E11               	movlw	17
 13395  005EE6  6E02               	movwf	(??_LED_C+1)^0,c
 13396  005EE8  0E3C               	movlw	60
 13397  005EEA  6E01               	movwf	??_LED_C^0,c
 13398  005EEC  0ECB               	movlw	203
 13399  005EEE                     u6467:
 13400  005EEE  2EE8               	decfsz	wreg,f,c
 13401  005EF0  D7FE               	bra	u6467
 13402  005EF2  2E01               	decfsz	??_LED_C^0,f,c
 13403  005EF4  D7FC               	bra	u6467
 13404  005EF6  2E02               	decfsz	(??_LED_C+1)^0,f,c
 13405  005EF8  D7FA               	bra	u6467
 13406  005EFA  F000               	nop	
 13407  005EFC  0012               	return		;funcret
 13408  005EFE                     __end_of_LED_C:
 13409                           	callstack 0
 13410                           
 13411 ;; *************** function _pin_init *****************
 13412 ;; Defined at:
 13413 ;;		line 14 in file "color.c"
 13414 ;; Parameters:    Size  Location     Type
 13415 ;;		None
 13416 ;; Auto vars:     Size  Location     Type
 13417 ;;		None
 13418 ;; Return value:  Size  Location     Type
 13419 ;;                  1    wreg      void 
 13420 ;; Registers used:
 13421 ;;		None
 13422 ;; Tracked objects:
 13423 ;;		On entry : 0/0
 13424 ;;		On exit  : 0/0
 13425 ;;		Unchanged: 0/0
 13426 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13427 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13428 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13429 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13430 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13431 ;;Total ram usage:        0 bytes
 13432 ;; Hardware stack levels used: 1
 13433 ;; Hardware stack levels required when called: 1
 13434 ;; This function calls:
 13435 ;;		Nothing
 13436 ;; This function is called by:
 13437 ;;		_main
 13438 ;; This function uses a non-reentrant model
 13439 ;;
 13440                           
 13441                           	psect	text61
 13442  005D20                     __ptext61:
 13443                           	callstack 0
 13444  005D20                     _pin_init:
 13445                           	callstack 29
 13446  005D20                     
 13447                           ;color.c: 16:     TRISFbits.TRISF2=1;
 13448  005D20  8486               	bsf	134,2,c	;volatile
 13449                           
 13450                           ;color.c: 17:     ANSELFbits.ANSELF2=0;
 13451  005D22  010E               	movlb	14	; () banked
 13452  005D24  95B4               	bcf	180,2,b	;volatile
 13453                           
 13454                           ;color.c: 18:     TRISFbits.TRISF3=1;
 13455  005D26  8686               	bsf	134,3,c	;volatile
 13456                           
 13457                           ;color.c: 19:     ANSELFbits.ANSELF3=0;
 13458  005D28  97B4               	bcf	180,3,b	;volatile
 13459                           
 13460                           ;color.c: 22:     TRISDbits.TRISD7 = 0;
 13461  005D2A  9E84               	bcf	132,7,c	;volatile
 13462                           
 13463                           ;color.c: 23:     LATDbits.LATD7 = 0;
 13464  005D2C  9E7C               	bcf	124,7,c	;volatile
 13465                           
 13466                           ;color.c: 24:     TRISHbits.TRISH3 = 0;
 13467  005D2E  9688               	bcf	136,3,c	;volatile
 13468                           
 13469                           ;color.c: 25:     LATHbits.LATH3 = 0;
 13470  005D30  9680               	bcf	128,3,c	;volatile
 13471                           
 13472                           ;color.c: 28:     TRISGbits.TRISG1 = 0;
 13473  005D32  9287               	bcf	135,1,c	;volatile
 13474                           
 13475                           ;color.c: 29:     TRISFbits.TRISF7 = 0;
 13476  005D34  9E86               	bcf	134,7,c	;volatile
 13477                           
 13478                           ;color.c: 30:     TRISAbits.TRISA4 = 0;
 13479  005D36  9881               	bcf	129,4,c	;volatile
 13480                           
 13481                           ;color.c: 32:     LATGbits.LATG1 = 1;
 13482  005D38  827F               	bsf	127,1,c	;volatile
 13483                           
 13484                           ;color.c: 33:     LATFbits.LATF7 = 1;
 13485  005D3A  8E7E               	bsf	126,7,c	;volatile
 13486                           
 13487                           ;color.c: 34:     LATAbits.LATA4 = 1;
 13488  005D3C  8879               	bsf	121,4,c	;volatile
 13489                           
 13490                           ;color.c: 37:     TRISHbits.TRISH1=0;
 13491  005D3E  9288               	bcf	136,1,c	;volatile
 13492                           
 13493                           ;color.c: 38:     TRISDbits.TRISD4=0;
 13494  005D40  9884               	bcf	132,4,c	;volatile
 13495                           
 13496                           ;color.c: 39:     TRISDbits.TRISD3=0;
 13497  005D42  9684               	bcf	132,3,c	;volatile
 13498                           
 13499                           ;color.c: 40:     TRISFbits.TRISF0=0;
 13500  005D44  9086               	bcf	134,0,c	;volatile
 13501                           
 13502                           ;color.c: 41:     TRISHbits.TRISH0=0;
 13503  005D46  9088               	bcf	136,0,c	;volatile
 13504                           
 13505                           ;color.c: 43:     LATHbits.LATH1 = 0;
 13506  005D48  9280               	bcf	128,1,c	;volatile
 13507                           
 13508                           ;color.c: 44:     LATDbits.LATD4 = 0;
 13509  005D4A  987C               	bcf	124,4,c	;volatile
 13510                           
 13511                           ;color.c: 45:     LATDbits.LATD3 = 0;
 13512  005D4C  967C               	bcf	124,3,c	;volatile
 13513                           
 13514                           ;color.c: 46:     LATFbits.LATF0 = 0;
 13515  005D4E  907E               	bcf	126,0,c	;volatile
 13516                           
 13517                           ;color.c: 47:     LATHbits.LATH0 = 0;
 13518  005D50  9080               	bcf	128,0,c	;volatile
 13519  005D52                     
 13520                           ; BSR set to: 14
 13521  005D52  0012               	return		;funcret
 13522  005D54                     __end_of_pin_init:
 13523                           	callstack 0
 13524                           
 13525 ;; *************** function _initUSART4 *****************
 13526 ;; Defined at:
 13527 ;;		line 4 in file "serial.c"
 13528 ;; Parameters:    Size  Location     Type
 13529 ;;		None
 13530 ;; Auto vars:     Size  Location     Type
 13531 ;;		None
 13532 ;; Return value:  Size  Location     Type
 13533 ;;                  1    wreg      void 
 13534 ;; Registers used:
 13535 ;;		wreg, status,2
 13536 ;; Tracked objects:
 13537 ;;		On entry : 0/0
 13538 ;;		On exit  : 0/0
 13539 ;;		Unchanged: 0/0
 13540 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13541 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13542 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13543 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13544 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13545 ;;Total ram usage:        0 bytes
 13546 ;; Hardware stack levels used: 1
 13547 ;; Hardware stack levels required when called: 1
 13548 ;; This function calls:
 13549 ;;		Nothing
 13550 ;; This function is called by:
 13551 ;;		_main
 13552 ;; This function uses a non-reentrant model
 13553 ;;
 13554                           
 13555                           	psect	text62
 13556  005F1E                     __ptext62:
 13557                           	callstack 0
 13558  005F1E                     _initUSART4:
 13559                           	callstack 29
 13560  005F1E                     
 13561                           ;serial.c: 8:     RC0PPS = 0x12;
 13562  005F1E  0E12               	movlw	18
 13563  005F20  010E               	movlb	14	; () banked
 13564  005F22  6F62               	movwf	98,b	;volatile
 13565                           
 13566                           ;serial.c: 9:     RX4PPS = 0x11;
 13567  005F24  0E11               	movlw	17
 13568  005F26  6F15               	movwf	21,b	;volatile
 13569  005F28                     
 13570                           ; BSR set to: 14
 13571                           ;serial.c: 11:     BAUD4CONbits.BRG16 = 0;
 13572  005F28  97E9               	bcf	233,3,b	;volatile
 13573  005F2A                     
 13574                           ; BSR set to: 14
 13575                           ;serial.c: 12:     TX4STAbits.BRGH = 0;
 13576  005F2A  95E8               	bcf	232,2,b	;volatile
 13577                           
 13578                           ;serial.c: 13:     SP4BRGL = 51;
 13579  005F2C  0E33               	movlw	51
 13580  005F2E  6FE5               	movwf	229,b	;volatile
 13581                           
 13582                           ;serial.c: 15:     SP4BRGH = 0;
 13583  005F30  0E00               	movlw	0
 13584  005F32  6FE6               	movwf	230,b	;volatile
 13585  005F34                     
 13586                           ; BSR set to: 14
 13587                           ;serial.c: 17:     RC4STAbits.CREN = 1;
 13588  005F34  89E7               	bsf	231,4,b	;volatile
 13589  005F36                     
 13590                           ; BSR set to: 14
 13591                           ;serial.c: 18:     TX4STAbits.TXEN = 1;
 13592  005F36  8BE8               	bsf	232,5,b	;volatile
 13593  005F38                     
 13594                           ; BSR set to: 14
 13595                           ;serial.c: 19:     RC4STAbits.SPEN = 1;
 13596  005F38  8FE7               	bsf	231,7,b	;volatile
 13597  005F3A                     
 13598                           ; BSR set to: 14
 13599  005F3A  0012               	return		;funcret
 13600  005F3C                     __end_of_initUSART4:
 13601                           	callstack 0
 13602                           
 13603 ;; *************** function _initDCmotors_parameter *****************
 13604 ;; Defined at:
 13605 ;;		line 37 in file "dc_motor.c"
 13606 ;; Parameters:    Size  Location     Type
 13607 ;;  motorL          2    0[COMRAM] PTR struct DC_motor
 13608 ;;		 -> main@motorL(9), 
 13609 ;;  motorR          2    2[COMRAM] PTR struct DC_motor
 13610 ;;		 -> main@motorR(9), 
 13611 ;; Auto vars:     Size  Location     Type
 13612 ;;		None
 13613 ;; Return value:  Size  Location     Type
 13614 ;;                  1    wreg      void 
 13615 ;; Registers used:
 13616 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13617 ;; Tracked objects:
 13618 ;;		On entry : 0/0
 13619 ;;		On exit  : 0/0
 13620 ;;		Unchanged: 0/0
 13621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13622 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13623 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13624 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13625 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13626 ;;Total ram usage:        4 bytes
 13627 ;; Hardware stack levels used: 1
 13628 ;; Hardware stack levels required when called: 1
 13629 ;; This function calls:
 13630 ;;		Nothing
 13631 ;; This function is called by:
 13632 ;;		_main
 13633 ;; This function uses a non-reentrant model
 13634 ;;
 13635                           
 13636                           	psect	text63
 13637  0051BE                     __ptext63:
 13638                           	callstack 0
 13639  0051BE                     _initDCmotors_parameter:
 13640                           	callstack 29
 13641  0051BE                     
 13642                           ;dc_motor.c: 39:     motorL->power = 0;
 13643  0051BE  C001  FFD9         	movff	initDCmotors_parameter@motorL,fsr2l
 13644  0051C2  C002  FFDA         	movff	initDCmotors_parameter@motorL+1,fsr2h
 13645  0051C6  0E00               	movlw	0
 13646  0051C8  6EDF               	movwf	indf2,c
 13647  0051CA                     
 13648                           ;dc_motor.c: 40:     motorL->direction = 1;
 13649  0051CA  EE20 F001          	lfsr	2,1
 13650  0051CE  5001               	movf	initDCmotors_parameter@motorL^0,w,c
 13651  0051D0  26D9               	addwf	fsr2l,f,c
 13652  0051D2  5002               	movf	(initDCmotors_parameter@motorL+1)^0,w,c
 13653  0051D4  22DA               	addwfc	fsr2h,f,c
 13654  0051D6  0E01               	movlw	1
 13655  0051D8  6EDF               	movwf	indf2,c
 13656  0051DA                     
 13657                           ;dc_motor.c: 41:     motorL->dutyHighByte = (unsigned char *)(&PWM6DCH);
 13658  0051DA  EE20 F002          	lfsr	2,2
 13659  0051DE  5001               	movf	initDCmotors_parameter@motorL^0,w,c
 13660  0051E0  26D9               	addwf	fsr2l,f,c
 13661  0051E2  5002               	movf	(initDCmotors_parameter@motorL+1)^0,w,c
 13662  0051E4  22DA               	addwfc	fsr2h,f,c
 13663  0051E6  0EA3               	movlw	163
 13664  0051E8  6EDE               	movwf	postinc2,c
 13665  0051EA  0E0F               	movlw	15
 13666  0051EC  6EDD               	movwf	postdec2,c
 13667  0051EE                     
 13668                           ;dc_motor.c: 42:     motorL->dir_LAT = (unsigned char *)(&LATE);
 13669  0051EE  EE20 F004          	lfsr	2,4
 13670  0051F2  5001               	movf	initDCmotors_parameter@motorL^0,w,c
 13671  0051F4  26D9               	addwf	fsr2l,f,c
 13672  0051F6  5002               	movf	(initDCmotors_parameter@motorL+1)^0,w,c
 13673  0051F8  22DA               	addwfc	fsr2h,f,c
 13674  0051FA  0E7D               	movlw	125
 13675  0051FC  6EDE               	movwf	postinc2,c
 13676  0051FE  0E0F               	movlw	15
 13677  005200  6EDD               	movwf	postdec2,c
 13678  005202                     
 13679                           ;dc_motor.c: 43:     motorL->dir_pin = 4;
 13680  005202  EE20 F006          	lfsr	2,6
 13681  005206  5001               	movf	initDCmotors_parameter@motorL^0,w,c
 13682  005208  26D9               	addwf	fsr2l,f,c
 13683  00520A  5002               	movf	(initDCmotors_parameter@motorL+1)^0,w,c
 13684  00520C  22DA               	addwfc	fsr2h,f,c
 13685  00520E  0E04               	movlw	4
 13686  005210  6EDF               	movwf	indf2,c
 13687  005212                     
 13688                           ;dc_motor.c: 44:     motorL->PWMperiod = 199;
 13689  005212  EE20 F007          	lfsr	2,7
 13690  005216  5001               	movf	initDCmotors_parameter@motorL^0,w,c
 13691  005218  26D9               	addwf	fsr2l,f,c
 13692  00521A  5002               	movf	(initDCmotors_parameter@motorL+1)^0,w,c
 13693  00521C  22DA               	addwfc	fsr2h,f,c
 13694  00521E  0EC7               	movlw	199
 13695  005220  6EDE               	movwf	postinc2,c
 13696  005222  0E00               	movlw	0
 13697  005224  6EDD               	movwf	postdec2,c
 13698  005226                     
 13699                           ;dc_motor.c: 47:     motorR->power = 0;
 13700  005226  C003  FFD9         	movff	initDCmotors_parameter@motorR,fsr2l
 13701  00522A  C004  FFDA         	movff	initDCmotors_parameter@motorR+1,fsr2h
 13702  00522E  0E00               	movlw	0
 13703  005230  6EDF               	movwf	indf2,c
 13704                           
 13705                           ;dc_motor.c: 48:     motorR->direction = 1;
 13706  005232  EE20 F001          	lfsr	2,1
 13707  005236  5003               	movf	initDCmotors_parameter@motorR^0,w,c
 13708  005238  26D9               	addwf	fsr2l,f,c
 13709  00523A  5004               	movf	(initDCmotors_parameter@motorR+1)^0,w,c
 13710  00523C  22DA               	addwfc	fsr2h,f,c
 13711  00523E  0E01               	movlw	1
 13712  005240  6EDF               	movwf	indf2,c
 13713                           
 13714                           ;dc_motor.c: 49:     motorR->dutyHighByte = (unsigned char *)(&PWM7DCH);
 13715  005242  EE20 F002          	lfsr	2,2
 13716  005246  5003               	movf	initDCmotors_parameter@motorR^0,w,c
 13717  005248  26D9               	addwf	fsr2l,f,c
 13718  00524A  5004               	movf	(initDCmotors_parameter@motorR+1)^0,w,c
 13719  00524C  22DA               	addwfc	fsr2h,f,c
 13720  00524E  0EA0               	movlw	160
 13721  005250  6EDE               	movwf	postinc2,c
 13722  005252  0E0F               	movlw	15
 13723  005254  6EDD               	movwf	postdec2,c
 13724                           
 13725                           ;dc_motor.c: 50:     motorR->dir_LAT = (unsigned char *)(&LATG);
 13726  005256  EE20 F004          	lfsr	2,4
 13727  00525A  5003               	movf	initDCmotors_parameter@motorR^0,w,c
 13728  00525C  26D9               	addwf	fsr2l,f,c
 13729  00525E  5004               	movf	(initDCmotors_parameter@motorR+1)^0,w,c
 13730  005260  22DA               	addwfc	fsr2h,f,c
 13731  005262  0E7F               	movlw	127
 13732  005264  6EDE               	movwf	postinc2,c
 13733  005266  0E0F               	movlw	15
 13734  005268  6EDD               	movwf	postdec2,c
 13735                           
 13736                           ;dc_motor.c: 51:     motorR->dir_pin = 6;
 13737  00526A  EE20 F006          	lfsr	2,6
 13738  00526E  5003               	movf	initDCmotors_parameter@motorR^0,w,c
 13739  005270  26D9               	addwf	fsr2l,f,c
 13740  005272  5004               	movf	(initDCmotors_parameter@motorR+1)^0,w,c
 13741  005274  22DA               	addwfc	fsr2h,f,c
 13742  005276  0E06               	movlw	6
 13743  005278  6EDF               	movwf	indf2,c
 13744                           
 13745                           ;dc_motor.c: 52:     motorR->PWMperiod = 199;
 13746  00527A  EE20 F007          	lfsr	2,7
 13747  00527E  5003               	movf	initDCmotors_parameter@motorR^0,w,c
 13748  005280  26D9               	addwf	fsr2l,f,c
 13749  005282  5004               	movf	(initDCmotors_parameter@motorR+1)^0,w,c
 13750  005284  22DA               	addwfc	fsr2h,f,c
 13751  005286  0EC7               	movlw	199
 13752  005288  6EDE               	movwf	postinc2,c
 13753  00528A  0E00               	movlw	0
 13754  00528C  6EDD               	movwf	postdec2,c
 13755  00528E  0012               	return		;funcret
 13756  005290                     __end_of_initDCmotors_parameter:
 13757                           	callstack 0
 13758                           
 13759 ;; *************** function _initDCmotorsPWM *****************
 13760 ;; Defined at:
 13761 ;;		line 7 in file "dc_motor.c"
 13762 ;; Parameters:    Size  Location     Type
 13763 ;;  PWMperiod       2    0[COMRAM] int 
 13764 ;; Auto vars:     Size  Location     Type
 13765 ;;		None
 13766 ;; Return value:  Size  Location     Type
 13767 ;;                  1    wreg      void 
 13768 ;; Registers used:
 13769 ;;		wreg, status,2
 13770 ;; Tracked objects:
 13771 ;;		On entry : 0/0
 13772 ;;		On exit  : 0/0
 13773 ;;		Unchanged: 0/0
 13774 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13775 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13776 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13777 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13778 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13779 ;;Total ram usage:        2 bytes
 13780 ;; Hardware stack levels used: 1
 13781 ;; Hardware stack levels required when called: 1
 13782 ;; This function calls:
 13783 ;;		Nothing
 13784 ;; This function is called by:
 13785 ;;		_main
 13786 ;; This function uses a non-reentrant model
 13787 ;;
 13788                           
 13789                           	psect	text64
 13790  005B86                     __ptext64:
 13791                           	callstack 0
 13792  005B86                     _initDCmotorsPWM:
 13793                           	callstack 29
 13794  005B86                     
 13795                           ;dc_motor.c: 10:     TRISEbits.TRISE2=0;
 13796  005B86  9485               	bcf	133,2,c	;volatile
 13797                           
 13798                           ;dc_motor.c: 11:     TRISCbits.TRISC7=0;
 13799  005B88  9E83               	bcf	131,7,c	;volatile
 13800                           
 13801                           ;dc_motor.c: 12:     TRISGbits.TRISG6=0;
 13802  005B8A  9C87               	bcf	135,6,c	;volatile
 13803                           
 13804                           ;dc_motor.c: 13:     TRISEbits.TRISE4=0;
 13805  005B8C  9885               	bcf	133,4,c	;volatile
 13806                           
 13807                           ;dc_motor.c: 14:     LATEbits.LATE2=0;
 13808  005B8E  947D               	bcf	125,2,c	;volatile
 13809                           
 13810                           ;dc_motor.c: 15:     LATCbits.LATC7=0;
 13811  005B90  9E7B               	bcf	123,7,c	;volatile
 13812                           
 13813                           ;dc_motor.c: 16:     LATGbits.LATG6=0;
 13814  005B92  9C7F               	bcf	127,6,c	;volatile
 13815                           
 13816                           ;dc_motor.c: 17:     LATEbits.LATE4=0;
 13817  005B94  987D               	bcf	125,4,c	;volatile
 13818  005B96                     
 13819                           ;dc_motor.c: 20:     T2CONbits.CKPS=0b011;
 13820  005B96  50BD               	movf	189,w,c	;volatile
 13821  005B98  0B8F               	andlw	-113
 13822  005B9A  0930               	iorlw	48
 13823  005B9C  6EBD               	movwf	189,c	;volatile
 13824                           
 13825                           ;dc_motor.c: 21:     T2HLTbits.MODE=0b00000;
 13826  005B9E  0EE0               	movlw	-32
 13827  005BA0  16BE               	andwf	190,f,c	;volatile
 13828                           
 13829                           ;dc_motor.c: 22:     T2CLKCONbits.CS=0b0001;
 13830  005BA2  50BF               	movf	191,w,c	;volatile
 13831  005BA4  0BF0               	andlw	-16
 13832  005BA6  0901               	iorlw	1
 13833  005BA8  6EBF               	movwf	191,c	;volatile
 13834                           
 13835                           ;dc_motor.c: 25:     T2PR=200-1;
 13836  005BAA  0EC7               	movlw	199
 13837  005BAC  6EBC               	movwf	188,c	;volatile
 13838  005BAE                     
 13839                           ;dc_motor.c: 26:     T2CONbits.ON=1;
 13840  005BAE  8EBD               	bsf	189,7,c	;volatile
 13841                           
 13842                           ;dc_motor.c: 28:     RE2PPS=0x0A;
 13843  005BB0  0E0A               	movlw	10
 13844  005BB2  010E               	movlb	14	; () banked
 13845  005BB4  6F74               	movwf	116,b	;volatile
 13846                           
 13847                           ;dc_motor.c: 29:     RC7PPS=0x0B;
 13848  005BB6  0E0B               	movlw	11
 13849  005BB8  6F69               	movwf	105,b	;volatile
 13850                           
 13851                           ;dc_motor.c: 31:     PWM6DCH=0;
 13852  005BBA  0E00               	movlw	0
 13853  005BBC  6EA3               	movwf	163,c	;volatile
 13854                           
 13855                           ;dc_motor.c: 32:     PWM7DCH=0;
 13856  005BBE  0E00               	movlw	0
 13857  005BC0  6EA0               	movwf	160,c	;volatile
 13858  005BC2                     
 13859                           ; BSR set to: 14
 13860                           ;dc_motor.c: 34:     PWM6CONbits.EN = 1;
 13861  005BC2  8EA4               	bsf	164,7,c	;volatile
 13862  005BC4                     
 13863                           ; BSR set to: 14
 13864                           ;dc_motor.c: 35:     PWM7CONbits.EN = 1;
 13865  005BC4  8EA1               	bsf	161,7,c	;volatile
 13866  005BC6                     
 13867                           ; BSR set to: 14
 13868  005BC6  0012               	return		;funcret
 13869  005BC8                     __end_of_initDCmotorsPWM:
 13870                           	callstack 0
 13871                           
 13872 ;; *************** function _color_click_init *****************
 13873 ;; Defined at:
 13874 ;;		line 90 in file "color.c"
 13875 ;; Parameters:    Size  Location     Type
 13876 ;;		None
 13877 ;; Auto vars:     Size  Location     Type
 13878 ;;		None
 13879 ;; Return value:  Size  Location     Type
 13880 ;;                  1    wreg      void 
 13881 ;; Registers used:
 13882 ;;		wreg, status,2, status,0, cstack
 13883 ;; Tracked objects:
 13884 ;;		On entry : 0/0
 13885 ;;		On exit  : 0/0
 13886 ;;		Unchanged: 0/0
 13887 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13888 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13889 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13890 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13891 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13892 ;;Total ram usage:        1 bytes
 13893 ;; Hardware stack levels used: 1
 13894 ;; Hardware stack levels required when called: 4
 13895 ;; This function calls:
 13896 ;;		_I2C_2_Master_Init
 13897 ;;		_color_writetoaddr
 13898 ;; This function is called by:
 13899 ;;		_main
 13900 ;; This function uses a non-reentrant model
 13901 ;;
 13902                           
 13903                           	psect	text65
 13904  005D54                     __ptext65:
 13905                           	callstack 0
 13906  005D54                     _color_click_init:
 13907                           	callstack 26
 13908  005D54                     
 13909                           ;color.c: 93:     I2C_2_Master_Init();
 13910  005D54  ECF3  F02E         	call	_I2C_2_Master_Init	;wreg free
 13911  005D58                     
 13912                           ;color.c: 95:  color_writetoaddr(0x00, 0x01);
 13913  005D58  0E01               	movlw	1
 13914  005D5A  6E03               	movwf	color_writetoaddr@value^0,c
 13915  005D5C  0E00               	movlw	0
 13916  005D5E  EC7F  F02F         	call	_color_writetoaddr
 13917  005D62                     
 13918                           ;color.c: 96:     _delay((unsigned long)((3)*(64000000/4000.0)));
 13919  005D62  0E3F               	movlw	63
 13920  005D64  6E05               	movwf	??_color_click_init^0,c
 13921  005D66  0E55               	movlw	85
 13922  005D68                     u6477:
 13923  005D68  2EE8               	decfsz	wreg,f,c
 13924  005D6A  D7FE               	bra	u6477
 13925  005D6C  2E05               	decfsz	??_color_click_init^0,f,c
 13926  005D6E  D7FC               	bra	u6477
 13927  005D70  F000               	nop	
 13928  005D72                     
 13929                           ;color.c: 97:  color_writetoaddr(0x00, 0x03);
 13930  005D72  0E03               	movlw	3
 13931  005D74  6E03               	movwf	color_writetoaddr@value^0,c
 13932  005D76  0E00               	movlw	0
 13933  005D78  EC7F  F02F         	call	_color_writetoaddr
 13934  005D7C                     
 13935                           ;color.c: 98:  color_writetoaddr(0x01, 0xD5);
 13936  005D7C  0ED5               	movlw	213
 13937  005D7E  6E03               	movwf	color_writetoaddr@value^0,c
 13938  005D80  0E01               	movlw	1
 13939  005D82  EC7F  F02F         	call	_color_writetoaddr
 13940  005D86  0012               	return		;funcret
 13941  005D88                     __end_of_color_click_init:
 13942                           	callstack 0
 13943                           
 13944 ;; *************** function _color_writetoaddr *****************
 13945 ;; Defined at:
 13946 ;;		line 101 in file "color.c"
 13947 ;; Parameters:    Size  Location     Type
 13948 ;;  address         1    wreg     unsigned char 
 13949 ;;  value           1    2[COMRAM] unsigned char 
 13950 ;; Auto vars:     Size  Location     Type
 13951 ;;  address         1    3[COMRAM] unsigned char 
 13952 ;; Return value:  Size  Location     Type
 13953 ;;                  1    wreg      void 
 13954 ;; Registers used:
 13955 ;;		wreg, status,2, status,0, cstack
 13956 ;; Tracked objects:
 13957 ;;		On entry : 0/0
 13958 ;;		On exit  : 0/0
 13959 ;;		Unchanged: 0/0
 13960 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13961 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13962 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13963 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13964 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13965 ;;Total ram usage:        2 bytes
 13966 ;; Hardware stack levels used: 1
 13967 ;; Hardware stack levels required when called: 3
 13968 ;; This function calls:
 13969 ;;		_I2C_2_Master_Start
 13970 ;;		_I2C_2_Master_Stop
 13971 ;;		_I2C_2_Master_Write
 13972 ;; This function is called by:
 13973 ;;		_color_click_init
 13974 ;; This function uses a non-reentrant model
 13975 ;;
 13976                           
 13977                           	psect	text66
 13978  005EFE                     __ptext66:
 13979                           	callstack 0
 13980  005EFE                     _color_writetoaddr:
 13981                           	callstack 26
 13982                           
 13983                           ;incstack = 0
 13984                           ;color_writetoaddr@address stored from wreg
 13985  005EFE  6E04               	movwf	color_writetoaddr@address^0,c
 13986  005F00                     
 13987                           ;color.c: 102:     I2C_2_Master_Start();
 13988  005F00  ECCF  F02F         	call	_I2C_2_Master_Start	;wreg free
 13989                           
 13990                           ;color.c: 103:     I2C_2_Master_Write(0x52 | 0x00);
 13991  005F04  0E52               	movlw	82
 13992  005F06  ECB9  F02F         	call	_I2C_2_Master_Write
 13993                           
 13994                           ;color.c: 104:     I2C_2_Master_Write(0x80 | address);
 13995  005F0A  5004               	movf	color_writetoaddr@address^0,w,c
 13996  005F0C  0980               	iorlw	128
 13997  005F0E  ECB9  F02F         	call	_I2C_2_Master_Write
 13998                           
 13999                           ;color.c: 105:     I2C_2_Master_Write(value);
 14000  005F12  5003               	movf	color_writetoaddr@value^0,w,c
 14001  005F14  ECB9  F02F         	call	_I2C_2_Master_Write
 14002                           
 14003                           ;color.c: 106:     I2C_2_Master_Stop();
 14004  005F18  ECCA  F02F         	call	_I2C_2_Master_Stop	;wreg free
 14005  005F1C  0012               	return		;funcret
 14006  005F1E                     __end_of_color_writetoaddr:
 14007                           	callstack 0
 14008                           
 14009 ;; *************** function _I2C_2_Master_Write *****************
 14010 ;; Defined at:
 14011 ;;		line 45 in file "i2c.c"
 14012 ;; Parameters:    Size  Location     Type
 14013 ;;  data_byte       1    wreg     unsigned char 
 14014 ;; Auto vars:     Size  Location     Type
 14015 ;;  data_byte       1    1[COMRAM] unsigned char 
 14016 ;; Return value:  Size  Location     Type
 14017 ;;                  1    wreg      void 
 14018 ;; Registers used:
 14019 ;;		wreg, status,2, status,0, cstack
 14020 ;; Tracked objects:
 14021 ;;		On entry : 0/0
 14022 ;;		On exit  : 0/0
 14023 ;;		Unchanged: 0/0
 14024 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14025 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14026 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14027 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14028 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14029 ;;Total ram usage:        1 bytes
 14030 ;; Hardware stack levels used: 1
 14031 ;; Hardware stack levels required when called: 2
 14032 ;; This function calls:
 14033 ;;		_I2C_2_Master_Idle
 14034 ;; This function is called by:
 14035 ;;		_color_writetoaddr
 14036 ;;		_color_read_Red
 14037 ;;		_color_read_Blue
 14038 ;;		_color_read_Green
 14039 ;;		_color_read_Clear
 14040 ;; This function uses a non-reentrant model
 14041 ;;
 14042                           
 14043                           	psect	text67
 14044  005F72                     __ptext67:
 14045                           	callstack 0
 14046  005F72                     _I2C_2_Master_Write:
 14047                           	callstack 24
 14048                           
 14049                           ;incstack = 0
 14050                           ;I2C_2_Master_Write@data_byte stored from wreg
 14051  005F72  6E02               	movwf	I2C_2_Master_Write@data_byte^0,c
 14052  005F74                     
 14053                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
 14054  005F74  EC08  F02F         	call	_I2C_2_Master_Idle	;wreg free
 14055  005F78                     
 14056                           ;i2c.c: 48:   SSP2BUF = data_byte;
 14057  005F78  C002  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
 14058  005F7C  0012               	return		;funcret
 14059  005F7E                     __end_of_I2C_2_Master_Write:
 14060                           	callstack 0
 14061                           
 14062 ;; *************** function _I2C_2_Master_Stop *****************
 14063 ;; Defined at:
 14064 ;;		line 39 in file "i2c.c"
 14065 ;; Parameters:    Size  Location     Type
 14066 ;;		None
 14067 ;; Auto vars:     Size  Location     Type
 14068 ;;		None
 14069 ;; Return value:  Size  Location     Type
 14070 ;;                  1    wreg      void 
 14071 ;; Registers used:
 14072 ;;		wreg, status,2, status,0, cstack
 14073 ;; Tracked objects:
 14074 ;;		On entry : 0/0
 14075 ;;		On exit  : 0/0
 14076 ;;		Unchanged: 0/0
 14077 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14078 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14079 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14080 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14081 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14082 ;;Total ram usage:        0 bytes
 14083 ;; Hardware stack levels used: 1
 14084 ;; Hardware stack levels required when called: 2
 14085 ;; This function calls:
 14086 ;;		_I2C_2_Master_Idle
 14087 ;; This function is called by:
 14088 ;;		_color_writetoaddr
 14089 ;;		_color_read_Red
 14090 ;;		_color_read_Blue
 14091 ;;		_color_read_Green
 14092 ;;		_color_read_Clear
 14093 ;; This function uses a non-reentrant model
 14094 ;;
 14095                           
 14096                           	psect	text68
 14097  005F94                     __ptext68:
 14098                           	callstack 0
 14099  005F94                     _I2C_2_Master_Stop:
 14100                           	callstack 24
 14101  005F94                     
 14102                           ;i2c.c: 41:   I2C_2_Master_Idle();
 14103  005F94  EC08  F02F         	call	_I2C_2_Master_Idle	;wreg free
 14104  005F98                     
 14105                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
 14106  005F98  010E               	movlb	14	; () banked
 14107  005F9A  85DA               	bsf	218,2,b	;volatile
 14108  005F9C                     
 14109                           ; BSR set to: 14
 14110  005F9C  0012               	return		;funcret
 14111  005F9E                     __end_of_I2C_2_Master_Stop:
 14112                           	callstack 0
 14113                           
 14114 ;; *************** function _I2C_2_Master_Start *****************
 14115 ;; Defined at:
 14116 ;;		line 27 in file "i2c.c"
 14117 ;; Parameters:    Size  Location     Type
 14118 ;;		None
 14119 ;; Auto vars:     Size  Location     Type
 14120 ;;		None
 14121 ;; Return value:  Size  Location     Type
 14122 ;;                  1    wreg      void 
 14123 ;; Registers used:
 14124 ;;		wreg, status,2, status,0, cstack
 14125 ;; Tracked objects:
 14126 ;;		On entry : 0/0
 14127 ;;		On exit  : 0/0
 14128 ;;		Unchanged: 0/0
 14129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14130 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14131 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14132 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14133 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14134 ;;Total ram usage:        0 bytes
 14135 ;; Hardware stack levels used: 1
 14136 ;; Hardware stack levels required when called: 2
 14137 ;; This function calls:
 14138 ;;		_I2C_2_Master_Idle
 14139 ;; This function is called by:
 14140 ;;		_color_writetoaddr
 14141 ;;		_color_read_Red
 14142 ;;		_color_read_Blue
 14143 ;;		_color_read_Green
 14144 ;;		_color_read_Clear
 14145 ;; This function uses a non-reentrant model
 14146 ;;
 14147                           
 14148                           	psect	text69
 14149  005F9E                     __ptext69:
 14150                           	callstack 0
 14151  005F9E                     _I2C_2_Master_Start:
 14152                           	callstack 24
 14153  005F9E                     
 14154                           ;i2c.c: 29:   I2C_2_Master_Idle();
 14155  005F9E  EC08  F02F         	call	_I2C_2_Master_Idle	;wreg free
 14156  005FA2                     
 14157                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
 14158  005FA2  010E               	movlb	14	; () banked
 14159  005FA4  81DA               	bsf	218,0,b	;volatile
 14160  005FA6                     
 14161                           ; BSR set to: 14
 14162  005FA6  0012               	return		;funcret
 14163  005FA8                     __end_of_I2C_2_Master_Start:
 14164                           	callstack 0
 14165                           
 14166 ;; *************** function _I2C_2_Master_Idle *****************
 14167 ;; Defined at:
 14168 ;;		line 22 in file "i2c.c"
 14169 ;; Parameters:    Size  Location     Type
 14170 ;;		None
 14171 ;; Auto vars:     Size  Location     Type
 14172 ;;		None
 14173 ;; Return value:  Size  Location     Type
 14174 ;;                  1    wreg      void 
 14175 ;; Registers used:
 14176 ;;		wreg, status,2, status,0
 14177 ;; Tracked objects:
 14178 ;;		On entry : 0/0
 14179 ;;		On exit  : 0/0
 14180 ;;		Unchanged: 0/0
 14181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14182 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14183 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14184 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14185 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14186 ;;Total ram usage:        1 bytes
 14187 ;; Hardware stack levels used: 1
 14188 ;; Hardware stack levels required when called: 1
 14189 ;; This function calls:
 14190 ;;		Nothing
 14191 ;; This function is called by:
 14192 ;;		_I2C_2_Master_Start
 14193 ;;		_I2C_2_Master_RepStart
 14194 ;;		_I2C_2_Master_Stop
 14195 ;;		_I2C_2_Master_Write
 14196 ;;		_I2C_2_Master_Read
 14197 ;; This function uses a non-reentrant model
 14198 ;;
 14199                           
 14200                           	psect	text70
 14201  005E10                     __ptext70:
 14202                           	callstack 0
 14203  005E10                     _I2C_2_Master_Idle:
 14204                           	callstack 24
 14205  005E10                     l184:
 14206  005E10  010E               	movlb	14	; () banked
 14207  005E12  B5D8               	btfsc	216,2,b	;volatile
 14208  005E14  EF0E  F02F         	goto	u3381
 14209  005E18  EF10  F02F         	goto	u3380
 14210  005E1C                     u3381:
 14211  005E1C  EF08  F02F         	goto	l184
 14212  005E20                     u3380:
 14213  005E20                     
 14214                           ; BSR set to: 14
 14215  005E20  CEDA F001          	movff	3802,??_I2C_2_Master_Idle	;volatile
 14216  005E24  0E1F               	movlw	31
 14217  005E26  1601               	andwf	??_I2C_2_Master_Idle^0,f,c
 14218  005E28  A4D8               	btfss	status,2,c
 14219  005E2A  EF19  F02F         	goto	u3391
 14220  005E2E  EF1B  F02F         	goto	u3390
 14221  005E32                     u3391:
 14222  005E32  EF08  F02F         	goto	l184
 14223  005E36                     u3390:
 14224  005E36                     
 14225                           ; BSR set to: 14
 14226  005E36  0012               	return		;funcret
 14227  005E38                     __end_of_I2C_2_Master_Idle:
 14228                           	callstack 0
 14229                           
 14230 ;; *************** function _I2C_2_Master_Init *****************
 14231 ;; Defined at:
 14232 ;;		line 4 in file "i2c.c"
 14233 ;; Parameters:    Size  Location     Type
 14234 ;;		None
 14235 ;; Auto vars:     Size  Location     Type
 14236 ;;		None
 14237 ;; Return value:  Size  Location     Type
 14238 ;;                  1    wreg      void 
 14239 ;; Registers used:
 14240 ;;		wreg, status,2
 14241 ;; Tracked objects:
 14242 ;;		On entry : 0/0
 14243 ;;		On exit  : 0/0
 14244 ;;		Unchanged: 0/0
 14245 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14246 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14247 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14248 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14249 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14250 ;;Total ram usage:        0 bytes
 14251 ;; Hardware stack levels used: 1
 14252 ;; Hardware stack levels required when called: 1
 14253 ;; This function calls:
 14254 ;;		Nothing
 14255 ;; This function is called by:
 14256 ;;		_color_click_init
 14257 ;; This function uses a non-reentrant model
 14258 ;;
 14259                           
 14260                           	psect	text71
 14261  005DE6                     __ptext71:
 14262                           	callstack 0
 14263  005DE6                     _I2C_2_Master_Init:
 14264                           	callstack 28
 14265  005DE6                     
 14266                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
 14267  005DE6  010E               	movlb	14	; () banked
 14268  005DE8  51D9               	movf	217,w,b	;volatile
 14269  005DEA  0BF0               	andlw	-16
 14270  005DEC  0908               	iorlw	8
 14271  005DEE  6FD9               	movwf	217,b	;volatile
 14272  005DF0                     
 14273                           ; BSR set to: 14
 14274                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
 14275  005DF0  8BD9               	bsf	217,5,b	;volatile
 14276                           
 14277                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
 14278  005DF2  0E9F               	movlw	159
 14279  005DF4  6FD6               	movwf	214,b	;volatile
 14280  005DF6                     
 14281                           ; BSR set to: 14
 14282                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
 14283  005DF6  8A84               	bsf	132,5,c	;volatile
 14284  005DF8                     
 14285                           ; BSR set to: 14
 14286                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
 14287  005DF8  8C84               	bsf	132,6,c	;volatile
 14288  005DFA                     
 14289                           ; BSR set to: 14
 14290                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
 14291  005DFA  9BA7               	bcf	167,5,b	;volatile
 14292  005DFC                     
 14293                           ; BSR set to: 14
 14294                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
 14295  005DFC  9DA7               	bcf	167,6,b	;volatile
 14296                           
 14297                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
 14298  005DFE  0E1D               	movlw	29
 14299  005E00  6F1D               	movwf	29,b	;volatile
 14300                           
 14301                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
 14302  005E02  0E1E               	movlw	30
 14303  005E04  6F1C               	movwf	28,b	;volatile
 14304                           
 14305                           ;i2c.c: 18:   RD5PPS=0x1C;
 14306  005E06  0E1C               	movlw	28
 14307  005E08  6F6F               	movwf	111,b	;volatile
 14308                           
 14309                           ;i2c.c: 19:   RD6PPS=0x1B;
 14310  005E0A  0E1B               	movlw	27
 14311  005E0C  6F70               	movwf	112,b	;volatile
 14312  005E0E                     
 14313                           ; BSR set to: 14
 14314  005E0E  0012               	return		;funcret
 14315  005E10                     __end_of_I2C_2_Master_Init:
 14316                           	callstack 0
 14317                           
 14318 ;; *************** function _Timer0_init *****************
 14319 ;; Defined at:
 14320 ;;		line 7 in file "timers.c"
 14321 ;; Parameters:    Size  Location     Type
 14322 ;;		None
 14323 ;; Auto vars:     Size  Location     Type
 14324 ;;		None
 14325 ;; Return value:  Size  Location     Type
 14326 ;;                  1    wreg      void 
 14327 ;; Registers used:
 14328 ;;		wreg, status,2
 14329 ;; Tracked objects:
 14330 ;;		On entry : 0/0
 14331 ;;		On exit  : 0/0
 14332 ;;		Unchanged: 0/0
 14333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14334 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14335 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14336 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14337 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14338 ;;Total ram usage:        0 bytes
 14339 ;; Hardware stack levels used: 1
 14340 ;; Hardware stack levels required when called: 1
 14341 ;; This function calls:
 14342 ;;		Nothing
 14343 ;; This function is called by:
 14344 ;;		_main
 14345 ;; This function uses a non-reentrant model
 14346 ;;
 14347                           
 14348                           	psect	text72
 14349  005F3C                     __ptext72:
 14350                           	callstack 0
 14351  005F3C                     _Timer0_init:
 14352                           	callstack 29
 14353  005F3C                     
 14354                           ;timers.c: 9:     T0CON1bits.T0CS=0b010;
 14355  005F3C  50D6               	movf	214,w,c	;volatile
 14356  005F3E  0B1F               	andlw	-225
 14357  005F40  0940               	iorlw	64
 14358  005F42  6ED6               	movwf	214,c	;volatile
 14359  005F44                     
 14360                           ;timers.c: 10:     T0CON1bits.T0ASYNC=1;
 14361  005F44  88D6               	bsf	214,4,c	;volatile
 14362                           
 14363                           ;timers.c: 11:     T0CON1bits.T0CKPS=0b0101;
 14364  005F46  50D6               	movf	214,w,c	;volatile
 14365  005F48  0BF0               	andlw	-16
 14366  005F4A  0905               	iorlw	5
 14367  005F4C  6ED6               	movwf	214,c	;volatile
 14368  005F4E                     
 14369                           ;timers.c: 12:     T0CON0bits.T016BIT=1;
 14370  005F4E  88D5               	bsf	213,4,c	;volatile
 14371                           
 14372                           ;timers.c: 16:     TMR0H=0b00111100;
 14373  005F50  0E3C               	movlw	60
 14374  005F52  6ED4               	movwf	212,c	;volatile
 14375                           
 14376                           ;timers.c: 17:     TMR0L=0b10101111;
 14377  005F54  0EAF               	movlw	175
 14378  005F56  6ED3               	movwf	211,c	;volatile
 14379  005F58  0012               	return		;funcret
 14380  005F5A                     __end_of_Timer0_init:
 14381                           	callstack 0
 14382                           
 14383 ;; *************** function _Interrupts_init *****************
 14384 ;; Defined at:
 14385 ;;		line 9 in file "interrupts.c"
 14386 ;; Parameters:    Size  Location     Type
 14387 ;;		None
 14388 ;; Auto vars:     Size  Location     Type
 14389 ;;		None
 14390 ;; Return value:  Size  Location     Type
 14391 ;;                  1    wreg      void 
 14392 ;; Registers used:
 14393 ;;		None
 14394 ;; Tracked objects:
 14395 ;;		On entry : 0/0
 14396 ;;		On exit  : 0/0
 14397 ;;		Unchanged: 0/0
 14398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14399 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14400 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14401 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14402 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14403 ;;Total ram usage:        0 bytes
 14404 ;; Hardware stack levels used: 1
 14405 ;; Hardware stack levels required when called: 1
 14406 ;; This function calls:
 14407 ;;		Nothing
 14408 ;; This function is called by:
 14409 ;;		_main
 14410 ;; This function uses a non-reentrant model
 14411 ;;
 14412                           
 14413                           	psect	text73
 14414  005F7E                     __ptext73:
 14415                           	callstack 0
 14416  005F7E                     _Interrupts_init:
 14417                           	callstack 29
 14418  005F7E  8EF2               	bsf	242,7,c	;volatile
 14419                           
 14420                           ;interrupts.c: 11:     INTCONbits.IPEN=1;
 14421  005F80  8AF2               	bsf	242,5,c	;volatile
 14422                           
 14423                           ;interrupts.c: 12:     INTCONbits.GIEL=1;
 14424  005F82  8CF2               	bsf	242,6,c	;volatile
 14425                           
 14426                           ;interrupts.c: 13:  PIE0bits.TMR0IE = 1;
 14427  005F84  010E               	movlb	14	; () banked
 14428  005F86  8B29               	bsf	41,5,b	;volatile
 14429  005F88                     
 14430                           ; BSR set to: 14
 14431  005F88  0012               	return		;funcret
 14432  005F8A                     __end_of_Interrupts_init:
 14433                           	callstack 0
 14434                           
 14435 ;; *************** function _HighISR *****************
 14436 ;; Defined at:
 14437 ;;		line 21 in file "interrupts.c"
 14438 ;; Parameters:    Size  Location     Type
 14439 ;;		None
 14440 ;; Auto vars:     Size  Location     Type
 14441 ;;		None
 14442 ;; Return value:  Size  Location     Type
 14443 ;;                  1    wreg      void 
 14444 ;; Registers used:
 14445 ;;		wreg, status,2, status,0
 14446 ;; Tracked objects:
 14447 ;;		On entry : 0/0
 14448 ;;		On exit  : 0/0
 14449 ;;		Unchanged: 0/0
 14450 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14451 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14452 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14453 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14454 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14455 ;;Total ram usage:        0 bytes
 14456 ;; Hardware stack levels used: 1
 14457 ;; This function calls:
 14458 ;;		Nothing
 14459 ;; This function is called by:
 14460 ;;		Interrupt level 2
 14461 ;; This function uses a non-reentrant model
 14462 ;;
 14463                           
 14464                           	psect	intcode
 14465  000008                     __pintcode:
 14466                           	callstack 0
 14467  000008                     _HighISR:
 14468                           	callstack 19
 14469                           
 14470                           ; BSR set to: 14
 14471                           ;incstack = 0
 14472  000008  825F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 14473  00000A                     
 14474                           ;interrupts.c: 23:     if(PIR0bits.TMR0IF){
 14475  00000A  010E               	movlb	14	; () banked
 14476  00000C  AB33               	btfss	51,5,b	;volatile
 14477  00000E  EF0B  F000         	goto	i2u583_41
 14478  000012  EF0D  F000         	goto	i2u583_40
 14479  000016                     i2u583_41:
 14480  000016  EF16  F000         	goto	i2l507
 14481  00001A                     i2u583_40:
 14482  00001A                     
 14483                           ; BSR set to: 14
 14484                           ;interrupts.c: 24:         TMR0H=0b00111100;
 14485  00001A  0E3C               	movlw	60
 14486  00001C  6ED4               	movwf	212,c	;volatile
 14487                           
 14488                           ;interrupts.c: 25:         TMR0L=0b10101111;
 14489  00001E  0EAF               	movlw	175
 14490  000020  6ED3               	movwf	211,c	;volatile
 14491  000022                     
 14492                           ; BSR set to: 14
 14493                           ;interrupts.c: 26:         centisecond ++;
 14494  000022  0101               	movlb	1	; () banked
 14495  000024  4B82               	infsnz	_centisecond& (0+255),f,b
 14496  000026  2B83               	incf	(_centisecond+1)& (0+255),f,b
 14497  000028                     
 14498                           ; BSR set to: 1
 14499                           ;interrupts.c: 27:         PIR0bits.TMR0IF = 0;
 14500  000028  010E               	movlb	14	; () banked
 14501  00002A  9B33               	bcf	51,5,b	;volatile
 14502  00002C                     i2l507:
 14503                           
 14504                           ; BSR set to: 14
 14505  00002C  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 14506  00002E  0011               	retfie		f
 14507  000030                     __end_of_HighISR:
 14508                           	callstack 0
 14509                           
 14510                           	psect	rparam
 14511  0000                     
 14512                           	psect	temp
 14513  00005F                     btemp:
 14514                           	callstack 0
 14515  00005F                     	ds	1
 14516  0000                     int$flags	set	btemp
 14517  0000                     wtemp8	set	btemp+1
 14518  0000                     ttemp5	set	btemp+1
 14519  0000                     ttemp6	set	btemp+4
 14520  0000                     ttemp7	set	btemp+8
 14521                           
 14522                           	psect	idloc
 14523                           
 14524                           ;Config register IDLOC0 @ 0x200000
 14525                           ;	unspecified, using default values
 14526  200000                     	org	2097152
 14527  200000  0FFF               	dw	4095
 14528                           
 14529                           ;Config register IDLOC1 @ 0x200002
 14530                           ;	unspecified, using default values
 14531  200002                     	org	2097154
 14532  200002  0FFF               	dw	4095
 14533                           
 14534                           ;Config register IDLOC2 @ 0x200004
 14535                           ;	unspecified, using default values
 14536  200004                     	org	2097156
 14537  200004  0FFF               	dw	4095
 14538                           
 14539                           ;Config register IDLOC3 @ 0x200006
 14540                           ;	unspecified, using default values
 14541  200006                     	org	2097158
 14542  200006  0FFF               	dw	4095
 14543                           
 14544                           ;Config register IDLOC4 @ 0x200008
 14545                           ;	unspecified, using default values
 14546  200008                     	org	2097160
 14547  200008  0FFF               	dw	4095
 14548                           
 14549                           ;Config register IDLOC5 @ 0x20000A
 14550                           ;	unspecified, using default values
 14551  20000A                     	org	2097162
 14552  20000A  0FFF               	dw	4095
 14553                           
 14554                           ;Config register IDLOC6 @ 0x20000C
 14555                           ;	unspecified, using default values
 14556  20000C                     	org	2097164
 14557  20000C  0FFF               	dw	4095
 14558                           
 14559                           ;Config register IDLOC7 @ 0x20000E
 14560                           ;	unspecified, using default values
 14561  20000E                     	org	2097166
 14562  20000E  0FFF               	dw	4095
 14563                           
 14564                           	psect	config
 14565                           
 14566                           ;Config register CONFIG1L @ 0x300000
 14567                           ;	External Oscillator mode Selection bits
 14568                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
 14569                           ;	Power-up default value for COSC bits
 14570                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
 14571  300000                     	org	3145728
 14572  300000  AA                 	db	170
 14573                           
 14574                           ;Config register CONFIG1H @ 0x300001
 14575                           ;	unspecified, using default values
 14576                           ;	Clock Out Enable bit
 14577                           ;	CLKOUTEN = 0x1, unprogrammed default
 14578                           ;	Clock Switch Enable bit
 14579                           ;	CSWEN = 0x1, unprogrammed default
 14580                           ;	Fail-Safe Clock Monitor Enable bit
 14581                           ;	FCMEN = 0x1, unprogrammed default
 14582  300001                     	org	3145729
 14583  300001  FF                 	db	255
 14584                           
 14585                           ;Config register CONFIG2L @ 0x300002
 14586                           ;	unspecified, using default values
 14587                           ;	Master Clear Enable bit
 14588                           ;	MCLRE = 0x1, unprogrammed default
 14589                           ;	Power-up Timer Enable bit
 14590                           ;	PWRTE = 0x1, unprogrammed default
 14591                           ;	Low-power BOR enable bit
 14592                           ;	LPBOREN = 0x1, unprogrammed default
 14593                           ;	Brown-out Reset Enable bits
 14594                           ;	BOREN = 0x3, unprogrammed default
 14595  300002                     	org	3145730
 14596  300002  FF                 	db	255
 14597                           
 14598                           ;Config register CONFIG2H @ 0x300003
 14599                           ;	unspecified, using default values
 14600                           ;	Brown Out Reset Voltage selection bits
 14601                           ;	BORV = 0x3, unprogrammed default
 14602                           ;	ZCD Disable bit
 14603                           ;	ZCD = 0x1, unprogrammed default
 14604                           ;	PPSLOCK bit One-Way Set Enable bit
 14605                           ;	PPS1WAY = 0x1, unprogrammed default
 14606                           ;	Stack Full/Underflow Reset Enable bit
 14607                           ;	STVREN = 0x1, unprogrammed default
 14608                           ;	Debugger Enable bit
 14609                           ;	DEBUG = 0x1, unprogrammed default
 14610                           ;	Extended Instruction Set Enable bit
 14611                           ;	XINST = 0x1, unprogrammed default
 14612  300003                     	org	3145731
 14613  300003  FF                 	db	255
 14614                           
 14615                           ;Config register CONFIG3L @ 0x300004
 14616                           ;	WDT Period Select bits
 14617                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 14618                           ;	WDT operating mode
 14619                           ;	WDTE = OFF, WDT Disabled
 14620  300004                     	org	3145732
 14621  300004  9F                 	db	159
 14622                           
 14623                           ;Config register CONFIG3H @ 0x300005
 14624                           ;	unspecified, using default values
 14625                           ;	WDT Window Select bits
 14626                           ;	WDTCWS = 0x7, unprogrammed default
 14627                           ;	WDT input clock selector
 14628                           ;	WDTCCS = 0x7, unprogrammed default
 14629  300005                     	org	3145733
 14630  300005  FF                 	db	255
 14631                           
 14632                           ;Config register CONFIG4L @ 0x300006
 14633                           ;	unspecified, using default values
 14634                           ;	Write Protection Block 0
 14635                           ;	WRT0 = 0x1, unprogrammed default
 14636                           ;	Write Protection Block 1
 14637                           ;	WRT1 = 0x1, unprogrammed default
 14638                           ;	Write Protection Block 2
 14639                           ;	WRT2 = 0x1, unprogrammed default
 14640                           ;	Write Protection Block 3
 14641                           ;	WRT3 = 0x1, unprogrammed default
 14642                           ;	Write Protection Block 3
 14643                           ;	WRT4 = 0x1, unprogrammed default
 14644                           ;	Write Protection Block 3
 14645                           ;	WRT5 = 0x1, unprogrammed default
 14646                           ;	Write Protection Block 3
 14647                           ;	WRT6 = 0x1, unprogrammed default
 14648                           ;	Write Protection Block 3
 14649                           ;	WRT7 = 0x1, unprogrammed default
 14650  300006                     	org	3145734
 14651  300006  FF                 	db	255
 14652                           
 14653                           ;Config register CONFIG4H @ 0x300007
 14654                           ;	unspecified, using default values
 14655                           ;	Configuration Register Write Protection bit
 14656                           ;	WRTC = 0x1, unprogrammed default
 14657                           ;	Boot Block Write Protection bit
 14658                           ;	WRTB = 0x1, unprogrammed default
 14659                           ;	Data EEPROM Write Protection bit
 14660                           ;	WRTD = 0x1, unprogrammed default
 14661                           ;	Scanner Enable bit
 14662                           ;	SCANE = 0x1, unprogrammed default
 14663                           ;	Low Voltage Programming Enable bit
 14664                           ;	LVP = 0x1, unprogrammed default
 14665  300007                     	org	3145735
 14666  300007  FF                 	db	255
 14667                           
 14668                           ;Config register CONFIG5L @ 0x300008
 14669                           ;	unspecified, using default values
 14670                           ;	UserNVM Program Memory Code Protection bit
 14671                           ;	CP = 0x1, unprogrammed default
 14672                           ;	DataNVM Memory Code Protection bit
 14673                           ;	CPD = 0x1, unprogrammed default
 14674  300008                     	org	3145736
 14675  300008  FF                 	db	255
 14676                           
 14677                           ;Config register CONFIG5H @ 0x300009
 14678                           ;	unspecified, using default values
 14679  300009                     	org	3145737
 14680  300009  FF                 	db	255
 14681                           
 14682                           ;Config register CONFIG6L @ 0x30000A
 14683                           ;	unspecified, using default values
 14684                           ;	Table Read Protection Block 0
 14685                           ;	EBTR0 = 0x1, unprogrammed default
 14686                           ;	Table Read Protection Block 1
 14687                           ;	EBTR1 = 0x1, unprogrammed default
 14688                           ;	Table Read Protection Block 2
 14689                           ;	EBTR2 = 0x1, unprogrammed default
 14690                           ;	Table Read Protection Block 3
 14691                           ;	EBTR3 = 0x1, unprogrammed default
 14692                           ;	Table Read Protection Block 4
 14693                           ;	EBTR4 = 0x1, unprogrammed default
 14694                           ;	Table Read Protection Block 5
 14695                           ;	EBTR5 = 0x1, unprogrammed default
 14696                           ;	Table Read Protection Block 6
 14697                           ;	EBTR6 = 0x1, unprogrammed default
 14698                           ;	Table Read Protection Block 7
 14699                           ;	EBTR7 = 0x1, unprogrammed default
 14700  30000A                     	org	3145738
 14701  30000A  FF                 	db	255
 14702                           
 14703                           ;Config register CONFIG6H @ 0x30000B
 14704                           ;	unspecified, using default values
 14705                           ;	Boot Block Table Read Protection bit
 14706                           ;	EBTRB = 0x1, unprogrammed default
 14707  30000B                     	org	3145739
 14708  30000B  FF                 	db	255
 14709                           tosu	equ	0xFFF
 14710                           tosh	equ	0xFFE
 14711                           tosl	equ	0xFFD
 14712                           stkptr	equ	0xFFC
 14713                           pclatu	equ	0xFFB
 14714                           pclath	equ	0xFFA
 14715                           pcl	equ	0xFF9
 14716                           tblptru	equ	0xFF8
 14717                           tblptrh	equ	0xFF7
 14718                           tblptrl	equ	0xFF6
 14719                           tablat	equ	0xFF5
 14720                           prodh	equ	0xFF4
 14721                           prodl	equ	0xFF3
 14722                           indf0	equ	0xFEF
 14723                           postinc0	equ	0xFEE
 14724                           postdec0	equ	0xFED
 14725                           preinc0	equ	0xFEC
 14726                           plusw0	equ	0xFEB
 14727                           fsr0h	equ	0xFEA
 14728                           fsr0l	equ	0xFE9
 14729                           wreg	equ	0xFE8
 14730                           indf1	equ	0xFE7
 14731                           postinc1	equ	0xFE6
 14732                           postdec1	equ	0xFE5
 14733                           preinc1	equ	0xFE4
 14734                           plusw1	equ	0xFE3
 14735                           fsr1h	equ	0xFE2
 14736                           fsr1l	equ	0xFE1
 14737                           bsr	equ	0xFE0
 14738                           indf2	equ	0xFDF
 14739                           postinc2	equ	0xFDE
 14740                           postdec2	equ	0xFDD
 14741                           preinc2	equ	0xFDC
 14742                           plusw2	equ	0xFDB
 14743                           fsr2h	equ	0xFDA
 14744                           fsr2l	equ	0xFD9
 14745                           status	equ	0xFD8

Data Sizes:
    Strings     14
    Constant    4
    Data        2
    BSS         166
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     94      94
    BANK0           160    160     160
    BANK1           256     88     256
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    amb_light_measure@amb	PTR struct color_rgb size(2) Largest target is 8
		 -> main@rgb(BANK1[8]), main@amb(BANK1[8]), 

    detect_wall@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), 

    detect_wall@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK1[9]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_5(CODE[6]), STR_4(CODE[14]), STR_3(CODE[11]), STR_2(CODE[11]), 
		 -> STR_1(CODE[11]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 14
		 -> STR_5(CODE[6]), STR_4(CODE[14]), STR_3(CODE[11]), STR_2(CODE[11]), 
		 -> STR_1(CODE[11]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_5(CODE[6]), STR_4(CODE[14]), STR_3(CODE[11]), STR_2(CODE[11]), 
		 -> STR_1(CODE[11]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 100
		 -> color_predict@buf(BANK0[100]), color_display@buf(BANK0[100]), detect_color@buf(BANK0[100]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S2532$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S2532$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    calibration_motor@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), 

    calibration_motor@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK1[9]), 

    test_function@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), 

    test_function@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK1[9]), 

    test_function@m	PTR struct color_rgb size(2) Largest target is 8
		 -> main@rgb(BANK1[8]), 

    test_function@w	PTR struct white_card size(2) Largest target is 28
		 -> main@white(BANK1[28]), 

    test_action@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), 

    test_action@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK1[9]), 

    setup@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), 

    setup@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK1[9]), 

    setup@amb	PTR struct color_rgb size(2) Largest target is 8
		 -> main@amb(BANK1[8]), 

    setup@white	PTR struct white_card size(2) Largest target is 28
		 -> main@white(BANK1[28]), 

    goback@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), 

    goback@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK1[9]), 

    turning_action@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), 

    turning_action@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK1[9]), 

    short_burst@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), 

    short_burst@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK1[9]), 

    motorR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    motorR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhllll[1]), PWM6DCH(BITBIGSFRhhllll[1]), 

    motorL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    motorL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhllll[1]), PWM6DCH(BITBIGSFRhhllll[1]), 

    sendStringSerial4@string	PTR unsigned char  size(2) Largest target is 100
		 -> color_predict@buf(BANK0[100]), color_display@buf(BANK0[100]), detect_color@buf(BANK0[100]), 

    fullSpeedBack@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    fullSpeedBack@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhllll[1]), PWM6DCH(BITBIGSFRhhllll[1]), 

    fullSpeedBack@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), 

    fullSpeedBack@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    fullSpeedBack@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhllll[1]), PWM6DCH(BITBIGSFRhhllll[1]), 

    fullSpeedBack@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK1[9]), 

    fullSpeedAhead@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    fullSpeedAhead@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhllll[1]), PWM6DCH(BITBIGSFRhhllll[1]), 

    fullSpeedAhead@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), 

    fullSpeedAhead@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    fullSpeedAhead@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhllll[1]), PWM6DCH(BITBIGSFRhhllll[1]), 

    fullSpeedAhead@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK1[9]), 

    turn45@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turn45@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhllll[1]), PWM6DCH(BITBIGSFRhhllll[1]), 

    turn45@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), 

    turn45@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turn45@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhllll[1]), PWM6DCH(BITBIGSFRhhllll[1]), 

    turn45@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK1[9]), 

    stop@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    stop@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhllll[1]), PWM6DCH(BITBIGSFRhhllll[1]), 

    stop@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), 

    stop@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    stop@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhllll[1]), PWM6DCH(BITBIGSFRhhllll[1]), 

    stop@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK1[9]), 

    setMotorPWM@m.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    setMotorPWM@m.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhllll[1]), PWM6DCH(BITBIGSFRhhllll[1]), 

    setMotorPWM@m	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), main@motorL(BANK1[9]), 

    initDCmotors_parameter@motorR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    initDCmotors_parameter@motorR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhllll[1]), PWM6DCH(BITBIGSFRhhllll[1]), 

    initDCmotors_parameter@motorR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), 

    initDCmotors_parameter@motorL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    initDCmotors_parameter@motorL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhllll[1]), PWM6DCH(BITBIGSFRhhllll[1]), 

    initDCmotors_parameter@motorL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK1[9]), 

    motorR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    motorR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhllll[1]), PWM6DCH(BITBIGSFRhhllll[1]), 

    S429DC_motor$dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    motorL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    S429DC_motor$dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhllll[1]), PWM6DCH(BITBIGSFRhhllll[1]), 

    motorL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhllll[1]), PWM6DCH(BITBIGSFRhhllll[1]), 

    verify_color@w	PTR struct white_card size(2) Largest target is 28
		 -> main@white(BANK1[28]), 

    verify_color@m	PTR struct color_rgb size(2) Largest target is 8
		 -> main@rgb(BANK1[8]), 

    color_data_collection@m	PTR struct color_rgb size(2) Largest target is 8
		 -> main@rgb(BANK1[8]), 

    calibrate_white@w	PTR struct white_card size(2) Largest target is 28
		 -> main@white(BANK1[28]), 

    color_display@m	PTR struct color_rgb size(2) Largest target is 8
		 -> main@rgb(BANK1[8]), 

    detect_color@w	PTR struct white_card size(2) Largest target is 28
		 -> main@white(BANK1[28]), 

    detect_color@m	PTR struct color_rgb size(2) Largest target is 8
		 -> main@rgb(BANK1[8]), 

    read_color@m	PTR struct color_rgb size(2) Largest target is 8
		 -> main@rgb(BANK1[8]), 


Critical Paths under _main in COMRAM

    _turning_action->_goback
    _goback->_turn45
    _fullSpeedBack->_stop
    _detect_color->___fltol
    _color_data_collection->_color_display
    _read_color->_color_read_Blue
    _read_color->_color_read_Clear
    _read_color->_color_read_Green
    _read_color->_color_read_Red
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _sendStringSerial4->_sendCharSerial4
    _short_burst->_stop
    _calibration_motor->_test_action
    _test_action->_turn45
    _turn45->_stop
    _stop->_setMotorPWM
    _fullSpeedAhead->_setMotorPWM
    _setMotorPWM->___awdiv
    ___awdiv->___wmul
    _calibrate_white->_color_read_Blue
    _calibrate_white->_color_read_Clear
    _calibrate_white->_color_read_Green
    _calibrate_white->_color_read_Red
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _lroundf->___fltol
    _roundf->___flmul
    ___flsub->___fladd
    ___flmul->___fldiv
    ___fltol->_roundf
    _color_read_Clear->_I2C_2_Master_Read
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    ___fldiv->___xxtofl
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle

Critical Paths under _HighISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_test_function
    _main->_verify_color
    _verify_color->_detect_color
    _test_function->_detect_color
    _detect_wall->_lroundf
    _detect_color->_sprintf
    _compare->_lroundf
    _color_data_collection->_color_predict
    _color_predict->_sprintf
    _color_display->_sprintf
    _setup->_amb_light_measure
    _amb_light_measure->_lroundf
    _lroundf->___fltol

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_test_function

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                74    74      0  371726
                                             14 BANK1     74    74      0
                    _Interrupts_init
                        _Timer0_init
                   _color_click_init
                       _detect_color
                        _detect_wall
                     _fullSpeedAhead
                             _goback
                    _initDCmotorsPWM
             _initDCmotors_parameter
                         _initUSART4
                           _pin_init
                              _setup
                        _short_burst
                               _stop
                      _test_function
                     _turning_action
                       _verify_color
 ---------------------------------------------------------------------------------
 (1) _verify_color                                        11     7      4   35982
                                            158 BANK0      2     2      0
                                              0 BANK1      7     3      4
                       _detect_color
 ---------------------------------------------------------------------------------
 (1) _turning_action                                       5     1      4   54195
                                             52 COMRAM     5     1      4
                      _fullSpeedBack
                             _goback
                       _toggle_light
                             _turn45
 ---------------------------------------------------------------------------------
 (2) _goback                                               8     4      4   30491
                                             44 COMRAM     8     4      4
                     _fullSpeedAhead
                      _fullSpeedBack
                               _stop
                             _turn45
 ---------------------------------------------------------------------------------
 (3) _fullSpeedBack                                        7     2      5   10048
                                             31 COMRAM     7     2      5
                        _setMotorPWM
                               _stop
 ---------------------------------------------------------------------------------
 (1) _test_function                                       16     8      8  138010
                                            158 BANK0      2     2      0
                                              0 BANK1     14     6      8
                              _LED_C
                  _amb_light_measure
                    _calibrate_white
              _color_data_collection
                      _color_display
                      _color_predict
                       _detect_color
                        _detect_wall
                     _fullSpeedAhead
                         _read_color
                               _stop
                        _test_action
 ---------------------------------------------------------------------------------
 (2) _detect_wall                                         19    13      6   19636
                                             10 BANK0     19    13      6
                              _LED_C
                            ___flmul
                           ___xxtofl
                   _color_read_Clear
                   _color_read_Green
                            _lroundf
 ---------------------------------------------------------------------------------
 (2) _detect_color                                       133   129      4   35696
                                             25 BANK0    133   129      4
                              _LED_B
                              _LED_G
                              _LED_R
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                            _compare
                            _lroundf
                         _read_color
                  _sendStringSerial4
                            _sprintf
                       _toggle_light
 ---------------------------------------------------------------------------------
 (3) _compare                                              7     1      6    1936
                                             10 BANK0      7     1      6
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
                            _lroundf (ARG)
 ---------------------------------------------------------------------------------
 (2) _color_data_collection                                6     4      2   17059
                                             89 COMRAM     4     2      2
                                            126 BANK0      2     2      0
                              _LED_B
                              _LED_C
                              _LED_G
                              _LED_R
                      _color_display
                      _color_predict
                         _read_color
 ---------------------------------------------------------------------------------
 (3) _read_color                                           2     0      2    1148
                                             11 COMRAM     2     0      2
                    _color_read_Blue
                   _color_read_Clear
                   _color_read_Green
                     _color_read_Red
 ---------------------------------------------------------------------------------
 (2) _color_predict                                      101   101      0    7583
                                             25 BANK0    101   101      0
                  _sendStringSerial4
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _color_display                                      102   100      2    8029
                                             87 COMRAM     2     0      2
                                             25 BANK0    100   100      0
                  _sendStringSerial4
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             27    15     12    7064
                                              0 BANK0     25    13     12
                           _vfprintf
 ---------------------------------------------------------------------------------
 (4) _vfprintf                                             8     2      6    6105
                                             79 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (5) _vfpfcnvrt                                           42    36      6    5751
                                             63 COMRAM    16    10      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (6) _dtoa                                                36    26     10    4358
                                             27 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (7) _pad                                                 11     5      6    2709
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (8) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (8) _fputs                                                7     3      4    1235
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (6) _fputc                                                9     5      4     834
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (7) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (7) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (7) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (7) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (3) _sendStringSerial4                                    2     0      2     447
                                              1 COMRAM     2     0      2
                    _sendCharSerial4
 ---------------------------------------------------------------------------------
 (4) _sendCharSerial4                                      1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _short_burst                                          6     2      4    7442
                                             31 COMRAM     6     2      4
                     _fullSpeedAhead
                               _stop
 ---------------------------------------------------------------------------------
 (1) _setup                                               12     4      8   41384
                                             24 BANK0     12     4      8
                            _LED_OFF
                  _amb_light_measure
                    _calibrate_white
                  _calibration_motor
 ---------------------------------------------------------------------------------
 (2) _calibration_motor                                    6     2      4   20131
                                             50 COMRAM     6     2      4
                        _test_action
 ---------------------------------------------------------------------------------
 (2) _test_action                                          6     2      4   19935
                                             44 COMRAM     6     2      4
                     _fullSpeedAhead
                               _stop
                             _turn45
 ---------------------------------------------------------------------------------
 (2) _turn45                                              13     7      6   12033
                                             31 COMRAM    13     7      6
                        _setMotorPWM
                               _stop
 ---------------------------------------------------------------------------------
 (3) _stop                                                 6     2      4    4035
                                             25 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (3) _fullSpeedAhead                                       5     1      4    3167
                                             25 COMRAM     5     1      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (4) _setMotorPWM                                         11     9      2    2035
                                             14 COMRAM    11     9      2
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     447
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     496
                                              6 COMRAM     8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _calibrate_white                                      4     2      2    1525
                                             11 COMRAM     4     2      2
                              _LED_B
                              _LED_C
                              _LED_G
                            _LED_OFF
                              _LED_R
                    _color_read_Blue
                   _color_read_Clear
                   _color_read_Green
                     _color_read_Red
                       _toggle_light
 ---------------------------------------------------------------------------------
 (4) _color_read_Red                                       7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (4) _color_read_Green                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (4) _color_read_Blue                                      7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _LED_R                                                2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _LED_OFF                                              2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _LED_G                                                2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _LED_B                                                2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _amb_light_measure                                   14    12      2   19312
                                             10 BANK0     14    12      2
                              _LED_C
                            ___fldiv
                           ___xxtofl
                   _color_read_Clear
                            _lroundf
                       _toggle_light
 ---------------------------------------------------------------------------------
 (3) _toggle_light                                         5     4      1     613
                                              0 COMRAM     5     4      1
 ---------------------------------------------------------------------------------
 (3) _lroundf                                              4     0      4   13309
                                              6 BANK0      4     0      4
                            ___fldiv (ARG)
                            ___fltol
                           ___xxtofl (ARG)
                             _roundf
 ---------------------------------------------------------------------------------
 (4) _roundf                                              26    22      4   11771
                                             64 COMRAM    26    22      4
                            ___fladd
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    3649
                                             16 COMRAM     8     0      8
                            ___fladd
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    3326
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4     197
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    3474
                                             39 COMRAM    25    17      8
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8     486
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (4) ___fltol                                             10     6      4     452
                                             90 COMRAM     4     0      4
                                              0 BANK0      6     6      0
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
                             _roundf (ARG)
 ---------------------------------------------------------------------------------
 (4) _color_read_Clear                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (5) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (5) _I2C_2_Master_Read                                    3     3      0      45
                                              1 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4    2052
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (3) ___fldiv                                             25    17      8    2977
                                             14 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) _LED_C                                                2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _pin_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initDCmotors_parameter                               4     0      4     416
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2      76
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     294
                                              4 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     294
                                              2 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (5) _I2C_2_Master_Write                                   1     1      0      22
                                              1 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (5) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (5) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (6) _I2C_2_Master_Idle                                    1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _HighISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Interrupts_init
   _Timer0_init
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
   _detect_color
     _LED_B
     _LED_G
     _LED_R
     ___fldiv
       ___xxtofl (ARG)
     ___flmul
       ___fldiv (ARG)
       ___xxtofl (ARG)
     ___fltol
       ___fldiv (ARG)
       ___flmul (ARG)
       ___xxtofl (ARG)
       _roundf (ARG)
         ___fladd
         ___flge
         ___flmul
         ___flneg
         ___flsub
           ___fladd
     ___xxtofl
     _compare
       ___fldiv (ARG)
       ___flmul (ARG)
       ___xxtofl (ARG)
       _lroundf (ARG)
         ___fldiv (ARG)
         ___fltol (ARG)
         ___xxtofl (ARG)
         _roundf (ARG)
     _lroundf
     _read_color
       _color_read_Blue
         _I2C_2_Master_Read
           _I2C_2_Master_Idle
         _I2C_2_Master_RepStart
           _I2C_2_Master_Idle
         _I2C_2_Master_Start
         _I2C_2_Master_Stop
         _I2C_2_Master_Write
       _color_read_Clear
         _I2C_2_Master_Read
         _I2C_2_Master_RepStart
         _I2C_2_Master_Start
         _I2C_2_Master_Stop
         _I2C_2_Master_Write
       _color_read_Green
         _I2C_2_Master_Read
         _I2C_2_Master_RepStart
         _I2C_2_Master_Start
         _I2C_2_Master_Stop
         _I2C_2_Master_Write
       _color_read_Red
         _I2C_2_Master_Read
         _I2C_2_Master_RepStart
         _I2C_2_Master_Start
         _I2C_2_Master_Stop
         _I2C_2_Master_Write
     _sendStringSerial4
       _sendCharSerial4
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
               _strlen
           _fputc
     _toggle_light
   _detect_wall
     _LED_C
     ___flmul
     ___xxtofl
     _color_read_Clear
     _color_read_Green
     _lroundf
   _fullSpeedAhead
     _setMotorPWM
       ___awdiv
         ___wmul (ARG)
       ___wmul
   _goback
     _fullSpeedAhead
     _fullSpeedBack
       _setMotorPWM
       _stop
         _setMotorPWM
     _stop
     _turn45
       _setMotorPWM
       _stop
   _initDCmotorsPWM
   _initDCmotors_parameter
   _initUSART4
   _pin_init
   _setup
     _LED_OFF
     _amb_light_measure
       _LED_C
       ___fldiv
       ___xxtofl
       _color_read_Clear
       _lroundf
       _toggle_light
     _calibrate_white
       _LED_B
       _LED_C
       _LED_G
       _LED_OFF
       _LED_R
       _color_read_Blue
       _color_read_Clear
       _color_read_Green
       _color_read_Red
       _toggle_light
     _calibration_motor
       _test_action
         _fullSpeedAhead
         _stop
         _turn45
   _short_burst
     _fullSpeedAhead
     _stop
   _stop
   _test_function
     _LED_C
     _amb_light_measure
     _calibrate_white
     _color_data_collection
       _LED_B
       _LED_C
       _LED_G
       _LED_R
       _color_display
         _sendStringSerial4
         _sprintf
       _color_predict
         _sendStringSerial4
         _sprintf
       _read_color
     _color_display
     _color_predict
     _detect_color
     _detect_wall
     _fullSpeedAhead
     _read_color
     _stop
     _test_action
   _turning_action
     _fullSpeedBack
     _goback
     _toggle_light
     _turn45
   _verify_color
     _detect_color

 _HighISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      57        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     58     100       7      100.0%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     A0      A0       5      100.0%
BITBIGSFRlhlllh     8F      0       0      41        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5E      5E       1      100.0%
BITBIGSFRlllhhh     32      0       0      46        0.0%
BITBIGSFRlllhll     2A      0       0      50        0.0%
BITBIGSFRlllll      26      0       0      55        0.0%
BITBIGSFRlhllll     20      0       0      44        0.0%
BITBIGSFRhhhhl      1B      0       0      33        0.0%
BITBIGSFRhhlh       17      0       0      35        0.0%
BITBIGSFRhhhl       13      0       0      34        0.0%
BITBIGSFRhhlllh     11      0       0      37        0.0%
BITBIGSFRhhhhh       D      0       0      32        0.0%
BITBIGSFRllh         C      0       0      45        0.0%
BITBIGSFRlllhll      B      0       0      53        0.0%
BITBIGSFRlllhll      9      0       0      52        0.0%
BITBIGSFRlhlllh      8      0       0      42        0.0%
BITBIGSFRllllh       6      0       0      54        0.0%
BITBIGSFRlllhll      6      0       0      49        0.0%
BITBIGSFRlllhlh      5      0       0      48        0.0%
BITBIGSFRhhllll      5      0       0      38        0.0%
BITBIGSFRlllhll      3      0       0      51        0.0%
BITBIGSFRlllhhl      3      0       0      47        0.0%
BITBIGSFRhhllh       1      0       0      36        0.0%
BITBIGSFRlhllll      1      0       0      43        0.0%
BITBIGSFRlhllh       1      0       0      40        0.0%
BITBIGSFRlhlhh       1      0       0      39        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1FE      56        0.0%
DATA                 0      0     1FE       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.35 build 20211206165544 
Symbol Table                                                                                   Thu Mar 17 09:41:20 2022

                _color_read_Red 5938                    ___fldiv@aexp 0027                    ___fldiv@bexp 0026  
                  ___fldiv@sign 001F                 _color_read_Blue 59D8                   _color_predict 5DB8  
                            l60 390C                              l71 5D86                              l80 5A26  
                            l57 5D52                              l74 5F1C                              l83 59D6  
                            l68 391E                              l92 5E9C                              l77 5986  
                            l86 5A76                              l95 5E7C                              l89 58E4  
                            l98 5EFC                    ___awdiv@sign 000C                _detect_wall$2943 0074  
           ___wmul@multiplicand 0003                _color_read_Clear 5A28                _color_read_Green 5988  
             ??_Interrupts_init 0001                             l101 5EDC                             l104 5EBC  
                           l202 5B84                             l130 5DE4                             l124 1CCA  
                           l133 3B28                             l141 5C3E                             l150 4DB4  
                           l142 5C40                             l127 5824                             l153 541C  
                           l330 5F3A                             l138 4EC2                             l154 541E  
                           l146 57B4                             l307 4B5E                             l252 528E  
                           l501 5F88                             l181 5E0E                             l190 5FA6  
                           l342 5F70                             l407 3BEC                             l184 5E10  
                           l249 5BC6                             l193 5F92                             l602 50D0  
                           l187 5E36                             l259 3EFE                             l267 572A  
                           l611 51BC                             l603 513A                             l443 5B42  
                           l339 5F5C                             l196 5F9C                             l284 4596  
                           l276 44CE                             l348 5DB6                             l518 5F58  
                           l614 5E5C                             l606 51A4                             l199 5F7C  
                           l455 3390                             l296 55A8                             l288 45C6  
                           l608 5170                             l472 2CC6                             l464 2CCA  
                           l561 48D4                             l482 2D06                             l563 4908  
                           l580 4C8C                             l572 49B4                             l565 4916  
                           l741 48B2                             l478 2CF8                             l911 4FCA  
                           l575 4A0A                             l559 48C6                             l728 474E  
                           l569 4956                             l845 566C                             l884 50CE  
                           l879 5088                             l888 5CB2               verify_color@color 01AC  
              ?_calibrate_white 000C                             _abs 5BC8                             _pad 5420  
                           prod 000FF3                             wreg 000FE8                    ___flmul@aexp 0039  
                  ___flmul@bexp 003A                    ___flmul@sign 0034                    ___flmul@temp 003F  
                  ___flmul@prod 003B                 __end_of_LED_OFF 5E9E                    ___fltol@exp1 0065  
                          l1201 2EC4                            l1210 2FAC                            ?_abs 0013  
                          l1142 1EBA                            l1207 2F46                            l1151 218A  
                          l1143 1EA8                            l1232 25B4                            l1144 1E6E  
                          l1209 2FBE                            l1235 2446                            l1228 2250  
                          l1420 5D1E                            l1324 5466                            l1245 2576  
                          l1237 24BE                            l1238 24AC                            l1159 1FD4  
                          l1407 2962                            l1327 54A8                            l1335 3432  
                          l1272 4266                            l4000 2240                            l1168 20A4  
                          l1184 5ABC                            l1169 2092                            l1329 54E4  
                          l1337 343A                            l4010 2290                            l4002 2260  
                          l1290 5C7A                            l1362 40B2                            l1283 41FE  
                          l1355 3672                            l1196 30A0                            l1276 41A2  
                          l4020 22E0                            l4012 229A                            l4004 2270  
                          l4100 5A88                            l1269 410A                            l1373 5BFE  
                          l1198 2F00                            l4110 5038                            l4030 2322  
                          l4022 22EC                            l4014 22B0                            l4120 50C6  
                          l4112 5048                            l4104 4FCC                            l4040 2384  
                          l4032 2332                            l4024 22FA                            l4016 22BC  
                          l4008 2284                            l4200 4488                            l1376 5C06  
                          l3400 5290                            l1368 587E                            l1369 5886  
                          l1297 5936                            l4122 50CC                            l4114 5056  
                          l4106 4FFA                            l4050 242C                            l4042 23A0  
                          l4034 234C                            l4026 2306                            l4018 22D4  
                          l4130 5CA2                            l4210 44F2                            l4202 4496  
                          l3410 5312                            l3402 52A2                            l5010 2C32  
                          l5002 2BB2                            l5100 51EE                            l4116 5068  
                          l4108 500A                            l4060 2468                            l4052 2436  
                          l4044 23CA                            l4036 235C                            l4028 2316  
                          l4220 4544                            l4204 44AE                            l4212 450A  
                          l3500 484A                            l1388 5358                            l3404 52B4  
                          l1396 5B00                            l3420 5AE0                            l4140 5862  
                          l5020 2CD0                            l5004 2BD6                            l5102 5202  
                          l5110 5F28                            l4118 5076                            l4070 24DA  
                          l4062 2476                            l4054 2444                            l4046 2400  
                          l4038 2378                            l4126 5C7C                            l4310 266E  
                          l4302 25B6                            l4150 5A1E                            l4142 5938  
                          l4230 4592                            l4222 4550                            l4206 44BA  
                          l5030 5106                            l3502 485C                            l3406 52BE  
                          l3414 5ABE                            l3422 5CEA                            l4134 5826  
                          l5022 2CE4                            l5014 2C6A                            l1399 5FAA  
                          l5120 5F3C                            l5104 5212                            l5112 5F2A  
                          l4160 5A28                            l4080 2544                            l4072 24E8  
                          l4064 24A4                            l4056 2456                            l4048 240E  
                          l4128 5C92                            l4320 27B4                            l4312 2692  
                          l4304 25D6                            l4400 5EA4                            l4144 597E  
                          l4240 550A                            l4216 4520                            l4224 455E  
                          l4208 44CA                            l5040 5148                            l5032 5108  
                          l3440 45FE                            l3432 45C8                            l3504 4862  
                          l3408 52DC                            l3416 5ACA                            l3424 5CF6  
                          l3520 545E                            l3512 5420                            l3600 3426  
                          l4136 582E                            l5200 4348                            l5024 2CF2  
                          l5016 2C8E                            l5008 2C0E                            l5122 5F44  
                          l5106 5226                            l5114 5F34                            l4162 5A6E  
                          l4090 259A                            l4082 255E                            l4074 2512  
                          l4058 2464                            l4330 292E                            l4322 2820  
                          l4314 26AE                            l4306 261E                            l4402 5C42  
                          l4154 5988                            l4250 555E                            l4242 5522  
                          l4226 4576                            l4218 4538                            l4234 45B2  
                          l5050 5196                            l5042 515E                            l5034 511E  
                          l5026 50E2                            l5130 48BE                            l3450 465A  
                          l3442 460C                            l3434 45CC                            l3506 4872  
                          l3418 5ADC                            l3426 5CFA                            l3530 54CC  
                          l3522 5472                            l3514 5430                            l3610 3470  
                          l3602 3442                            l4138 583C                            l4170 5900  
                          l4410 5C24                            l5210 4388                            l5202 434E  
                          l5124 5F4E                            l5060 5D62                            l5116 5F36  
                          l5108 5F1E                            l4500 2D7A                            l4260 4EDC  
                          l4084 257A                            l4092 25A0                            l4068 24CE  
                          l4076 2516                            l3700 1D72                            l4332 2952  
                          l4324 2852                            l4308 2632                            l4340 3692  
                          l4148 59D8                            l4156 59CE                            l3540 5E54  
                          l4252 556A                            l4244 552E                            l4228 4582  
                          l4236 45B4                            l5052 51A8                            l5036 5128  
                          l5028 50F8                            l5140 48F0                            l5132 48C2  
                          l4180 5D8C                            l3460 46C4                            l3452 4662  
                          l3444 462C                            l3436 45DA                            l3508 4892  
                          l3428 5D12                            l3524 5486                            l3516 5444  
                          l3620 350C                            l3612 3478                            l3604 3454  
                          l4172 5908                            l4420 5DBC                            l4412 5C3A  
                          l5212 43A8                            l5220 43EC                            l5204 435E  
                          l5300 3B3E                            l5126 5F7E                            l5062 5D72  
                          l5118 5F38                            l5054 5D20                            l4510 2DBA  
                          l4502 2D88                            l4270 4F2C                            l4094 25A4  
                          l4086 258A                            l4078 2530                            l3710 1DAC  
                          l3702 1D82                            l4326 28BE                            l4318 26E6  
                          l4350 3734                            l4342 36B2                            l3550 55C4  
                          l4246 5546                            l4254 5578                            l4238 54E6  
                          l4190 4444                            l5046 517E                            l5150 4980  
                          l5142 4924                            l5134 48C4                            l4182 5D9A  
                          l3470 470E                            l3462 46E4                            l3454 4676  
                          l3446 4630                            l3438 45FA                            l3534 5BC8  
                          l3526 548A                            l3518 5452                            l3630 35DC  
                          l3614 347E                            l3622 3570                            l3606 3462  
                          l4174 5924                            l4166 58E6                            l4422 5DD8  
                          l4406 5C08                            l5222 43FE                            l5214 43B8  
                          l4430 4A54                            l5230 30A4                            l5070 5768  
                          l5310 3B64                            l5302 3B52                            l5064 5D7C  
                          l5056 5D54                            l4600 307C                            l4520 2DFA  
                          l4512 2DBC                            l4504 2D8A                            l4280 4F56  
                          l4272 4F30                            l4264 4EF0                            l4088 2598  
                          l3800 1FB4                            l3720 1DD8                            l3712 1DBE  
                          l3704 1D92                            l4328 28F2                            l4360 37D2  
                          l4352 374C                            l4344 36CA                            l4336 3676  
                          l3560 55EA                            l3552 55C8                            l3544 55AA  
                          l4256 5590                            l4248 5552                            l5048 5180  
                          l5160 49D8                            l5144 4938                            l5152 4998  
                          l5136 48E2                            l5128 48B4                            l5224 5B02  
                          l4184 5D9E                            l3472 472E                            l3464 46E6  
                          l3456 4684                            l3448 463C                            l3480 4762  
                          l3536 5BE2                            l3528 54B8                            l3640 3626  
                          l3624 358A                            l3632 35EC                            l3616 3500  
                          l3608 3468                            l4168 58F8                            l4416 57B6  
                          l4408 5C0E                            l5216 43CC                            l5208 4374  
                          l4432 4A6C                            l4440 4AA0                            l4424 4A0C  
                          l5240 3114                            l5232 30B4                            l5080 57B2  
                          l5072 5780                            l5312 3B64                            l5304 3B56  
                          l3650 5E10                            l5058 5D58                            l5090 5BC2  
                          l4602 3080                            l4530 2E2A                            l4522 2E02  
                          l4506 2D9A                            l4514 2DC4                            l4290 4F7E  
                          l4282 4F60                            l4274 4F3E                            l4266 4F1A  
                          l4258 4EC4                            l3810 200E                            l3802 1FC4  
                          l3730 1DEC                            l3722 1DDC                            l3714 1DCC  
                          l3706 1D94                            l4098 5A78                            l4370 388C  
                          l4362 380E                            l4354 3784                            l4346 3702  
                          l4338 3682                            l3570 5620                            l3562 55FC  
                          l3554 55D6                            l3546 55AE                            l3538 5E38  
                          l4194 4458                            l4186 4418                            l5162 49E6  
                          l5154 49A6                            l5146 493A                            l5138 48EE  
                          l5226 5B16                            l4178 5D88                            l3466 46F8  
                          l3458 4696                            l3490 47D2                            l3482 4782  
                          l3642 3632                            l3634 35FE                            l3626 35A8  
                          l3618 3506                            l4418 5818                            l5218 43E6  
                          l5170 426C                            l4450 4B08                            l4442 4AB8  
                          l4434 4A78                            l4426 4A30                            l5250 3188  
                          l5242 3126                            l5234 30C4                            l5074 57AA  
                          l5066 5730                            l5330 3BDA                            l5322 3B96  
                          l5314 3B68                            l5306 3B5A                            l3652 5E20  
                          l5092 5BC4                            l5084 5B86                            l4604 308E  
                          l4540 2E68                            l4532 2E2A                            l4524 2E06  
                          l4516 2DD4                            l4508 2DAA                            l4620 40D4  
                          l4292 4F8A                            l4284 4F6A                            l4268 4F1C  
                          l3820 203E                            l3812 2018                            l3804 1FEA  
                          l3740 1E00                            l3732 1DF0                            l3724 1DE0  
                          l3716 1DD0                            l3708 1D9C                            l4372 389E  
                          l4364 3820                            l4356 3796                            l4348 3714  
                          l3572 5636                            l3564 5604                            l3580 564C  
                          l3556 55DE                            l3548 55BC                            l3660 3DF0  
                          l4196 4470                            l4188 4424                            l4460 4B74  
                          l5164 49EA                            l5156 49C2                            l5148 4958  
                          l5228 5B2E                            l3468 46FE                            l3492 47DA  
                          l3484 4786                            l3476 4750                            l3644 363A  
                          l3636 360E                            l3628 35C2                            l3900 4070  
                          l4380 5888                            l4700 1112                            l5180 42C4  
                          l5172 427E                            l4452 4B20                            l4444 4AD0  
                          l4436 4A84                            l4428 4A48                            l5260 321E  
                          l5252 31BC                            l5244 315A                            l5236 30F8  
                          l5068 5748                            l5340 3C54                            l5332 3BF6  
                          l5324 3B98                            l5316 3B68                            l5308 3B5E  
                          l5086 5B96                            l5094 51BE                            l4390 5EDE  
                          l4606 3094                            l4550 2EB4                            l4542 2E78  
                          l4518 2DEA                            l4630 414C                            l4622 411A  
                          l4294 4F9A                            l3830 2066                            l3822 2042  
                          l3814 2026                            l3806 1FFA                            l3750 1E3A  
                          l3742 1E04                            l3734 1DF4                            l3726 1DE4  
                          l3718 1DD4                            l3670 1CD8                            l4374 38BC  
                          l4366 383E                            l4358 37BA                            l4382 5E7E  
                          l3582 565C                            l3574 563E                            l3566 560C  
                          l3558 55E2                            l3662 3E10                            l3654 3D2C  
                          l4198 447C                            l4470 4C1C                            l4462 4B8C  
                          l5166 4A02                            l5158 49D6                            l3494 47EE  
                          l3486 4794                            l3478 4754                            l3638 3614  
                          l3646 364A                            l3590 33B2                            l4710 11EE  
                          l4702 111E                            l5190 4306                            l5182 42D6  
                          l5174 4290                            l4454 4B32                            l4446 4AE0  
                          l4438 4A90                            l5270 329A                            l5262 3238  
                          l5254 31D6                            l5246 3174                            l5238 3112  
                          l5350 3CAC                            l5342 3C64                            l5334 3C18  
                          l5326 3BA4                            l5318 3B68                            ?_pad 0011  
                          l3912 5F9E                            l3920 5F94                            l5088 5BAE  
                          l5096 51CA                            l4392 5EE4                            l4608 3096  
                          l4560 2EFE                            l4552 2EC2                            l4544 2E88  
                          l4536 2E3E                            l4528 2E1A                            l4480 2D14  
                          l4640 41D4                            l4632 4158                            l4624 4130  
                          l4616 40B6                            l4296 4FAA                            l3840 20C0  
                          l3832 2074                            l3824 2052                            l3816 2028  
                          l3760 1E8C                            l3752 1E56                            l3744 1E08  
                          l3736 1DF8                            l3728 1DE8                            l3680 1D18  
                          l3672 1CE6                            l4376 38D4                            l4368 3856  
                          l4384 5E84                            l3584 5664                            l3576 5640  
                          l3568 561A                            l3664 3E2C                            l3656 3D48  
                          l4472 4C30                            l4464 4BA8                            l3496 47FC  
                          l3488 47B4                            l3592 33DA                            l3904 407C  
                          l4800 1C74                            l4720 14AC                            l4712 129A  
                          l4704 1122                            l5192 431E                            l5184 42DA  
                          l5176 429C                            l4456 4B4A                            l4448 4AF6  
                          l5280 32FE                            l5272 329C                            l5264 323A  
                          l5256 31D8                            l5248 3176                            l5360 3D1A  
                          l5352 3CC0                            l5344 3C78                            l5336 3C4C  
                          l5328 3BB8                            l3914 5FA2                            l3922 5F98  
                          l5098 51DA                            l4570 2F44                            l4562 2F10  
                          l4554 2ECE                            l4546 2E90                            l4538 2E58  
                          l4490 2D54                            l4482 2D22                            l4650 4212  
                          l4642 41E0                            l4634 418A                            l4618 40C6  
                          l3930 5B4A                            l4298 4FBA                            l3850 212A  
                          l3842 20CE                            l3834 208A                            l3818 2036  
                          l3826 2054                            l3770 1ED8                            l3762 1E9A  
                          l3754 1E66                            l3738 1DFC                            l3746 1E0C  
                          l3690 1D4A                            l3682 1D1A                            l3674 1CE8  
                          l4378 390A                            l4394 5EBE                            l4386 5E5E  
                          l3578 5646                            l3666 3E96                            l3658 3DAA  
                          l4474 4C4C                            l4466 4BBC                            l4458 4B60  
                          l3498 482A                            l3594 33FA                            l3906 40A0  
                          l4802 1CA2                            l4730 15C6                            l4722 14C8  
                          l4714 1346                            l4706 113C                            l5194 4324  
                          l5186 42E6                            l5178 42B0                            l5290 3372  
                          l5282 3310                            l5274 32AE                            l5266 324C  
                          l5258 31EA                            l5362 3D20                            l5354 3CDA  
                          l5346 3C7E                            l5338 3C52                            l3916 5F74  
                          l4580 2FA4                            l4564 2F26                            l4572 2F56  
                          l4556 2EEC                            l4548 2EA0                            l4492 2D56  
                          l4484 2D24                            l4652 4236                            l4644 41EE  
                          l4636 418C                            l4628 4144                            l3932 5B52  
                          l3924 5F8A                            l3860 2164                            l3852 214A  
                          l3844 2108                            l3780 1F18                            l3828 2062  
                          l3764 1E9C                            l3756 1E7C                            l3748 1E10  
                          l3692 1D4C                            l3676 1CF8                            l3684 1D22  
                          l3668 1CCC                            l4396 5EC4                            l4388 5E64  
                          l4820 394A                            l4812 3920                            l4476 4C78  
                          l4468 4C04                            l3596 340A                            l3588 3392  
                          l4900 4E98                            l4804 1CA8                            l4740 16AE  
                          l4732 15CA                            l4724 1570                            l4716 13E8  
                          l4708 1148                            l5188 42F2                            l5292 337C  
                          l5284 3344                            l5276 32E2                            l5268 3280  
                          l5356 3CF4                            l5348 3C92                            l4670 5DFA  
                          l4662 5DE6                            l3918 5F78                            l4590 3012  
                          l4574 2F64                            l4566 2F2C                            l4558 2EEE  
                          l4486 2D34                            l4494 2D5E                            l4478 2D08  
                          l4654 4246                            l4646 420C                            l4638 4198  
                          l3934 5B5A                            l3926 5F8E                            l3862 216A  
                          l3854 214E                            l3838 20B4                            l3846 210A  
                          l3790 1F42                            l3782 1F24                            l3774 1EEC  
                          l3766 1EA6                            l3758 1E88                            l3694 1D52  
                          l3686 1D32                            l3678 1D08                            l4910 4CA8  
                          l4398 5E9E                            l4830 39AA                            l4822 3962  
                          l4814 3924                            l3950 56AE                            l3942 566E  
                          l3598 340C                            l3870 3F00                            l4902 4E9E  
                          l4806 1CBC                            l4750 18DE                            l4742 1756  
                          l4734 15E4                            l4726 158C                            l4718 1404  
                          l5198 433C                            l5286 335E                            l5278 32FC  
                          l5358 3D04                            l5294 3B2A                            l4672 5DFC  
                          l4664 5DF0                            l4584 2FCE                            l4592 3016  
                          l4576 2F68                            l4568 2F36                            l4496 2D6E  
                          l4488 2D44                            l4656 4254                            l4648 420E  
                          l3936 5B80                            l3928 5B46                            l3864 2178  
                          l3856 215C                            l3848 211A                            l3784 1F28  
                          l3776 1EFC                            l3768 1EC8                            l3792 1F48  
                          l3696 1D60                            l3688 1D38                            l4920 4CF2  
                          l4912 4CB2                            l4840 3A0E                            l4832 39C2  
                          l4824 3976                            l4816 392E                            l3960 56FA  
                          l3952 56BA                            l3944 5672                            l3880 3F6C  
                          l3872 3F24                            l4904 4EB8                            l4808 1CC6  
                          l4760 1A28                            l4752 18F2                            l4744 1772  
                          l4736 15F0                            l4728 15BA                            l4680 0E66  
                          l5288 3360                            l5296 3B2E                            l4666 5DF6  
                          l4674 5F00                            l4594 3030                            l4586 2FDA  
                          l4578 2F76                            l4498 2D74                            l4658 4256  
                          l3938 5B82                            l3970 2198                            l3866 217A  
                          l3858 2162                            l3794 1F6E                            l3786 1F36  
                          l3778 1F0A                            l3698 1D62                            l4930 4DA2  
                          l4922 4CFE                            l4914 4CB6                            l4850 3A86  
                          l4842 3A26                            l4834 39DA                            l4826 398E  
                          l4818 3946                            l3962 5712                            l3954 56C6  
                          l3946 568A                            l3890 4034                            l3882 3F90  
                          l3874 3F32                            l4906 4EBE                            l4770 1B2A  
                          l4762 1A32                            l4754 1920                            l4746 181A  
                          l4738 1692                            l4690 0FEC                            l4682 0E80  
                          l5298 3B32                            l4668 5DF8                            l4596 3046  
                          l4588 2FE8                            l3980 21D8                            l3972 21A6  
                          l3796 1FA2                            l3788 1F38                            l4932 4DAC  
                          l4924 4D16                            l4916 4CCE                            l4908 4C8E  
                          l4860 3AEA                            l4852 3A8A                            l4844 3A3E  
                          l4836 39F2                            l4828 39A6                            l3956 56D2  
                          l3948 5696                            l3964 5F5C                            l3892 4042  
                          l3884 3FD8                            l3876 3F44                            l4780 1B80  
                          l4772 1B34                            l4764 1A3C                            l4756 192C  
                          l4748 1836                            l4692 1008                            l4684 0E8C  
                          l4676 0E14                            l4940 5374                            l4598 3060  
                          l3990 2208                            l3982 21DE                            l3974 21A8  
                          l3798 1FA4                            l4926 4D22                            l4918 4CDA  
                          l4862 3B02                            l4854 3AA2                            l4846 3A56  
                          l4838 3A0A                            l3958 56E2                            l3966 5F6C  
                          l3894 4056                            l3878 3F48                            l4782 1B88  
                          l4766 1A54                            l4774 1B3E                            l4790 1BB2  
                          l4758 195A                            l4694 10B0                            l4686 0F28  
                          l4678 0E62                            l4950 5400                            l4942 538E  
                          l3992 220A                            l3984 21EE                            l3976 21B8  
                          l3968 218C                            l4928 4D3A                            l4864 3B06  
                          l4856 3ABA                            l4848 3A6E                            l3888 4010  
                          l4880 4DFC                            l4872 4DC8                            l4792 1BE0  
                          l4784 1B9E                            l4776 1B54                            l4768 1A6A  
                          l4696 10CC                            l4688 0F44                            l4952 5418  
                          l4944 539A                            l4936 535A                            l4960 29B4  
                          l3994 221A                            l3986 21F4                            l3978 21C8  
                          l4858 3AD2                            l3898 4062                            l4890 4E4C  
                          l4882 4E00                            l4874 4DCC                            l4866 4DB6  
                          l4794 1C10                            l4786 1BA6                            l4778 1B6A  
                          l4698 10E4                            l4946 539E                            l4938 5370  
                          l4970 2A18                            l4962 29C8                            l3996 222A  
                          l3988 21FA                            l4892 4E58                            l4884 4E18  
                          l4876 4DE4                            l4796 1C40                            l4788 1BAE  
                          l4948 53E4                            l4980 2A66                            l4972 2A2C  
                          l4964 29D4                            l4956 2964                            l3998 223A  
                          l4894 4E64                            l4886 4E30                            l4878 4DF0  
                          l4798 1C46                            l4990 2AFA                            l4966 29EC  
                          l4958 29B0                            l4896 4E68                            l4888 4E34  
                          l4992 2B1E                            l4984 2A9E                            l4976 2A42  
                          l4968 29F0                            l4898 4E8C                            l4986 2AC2  
                          l4978 2A44                            l4996 2B56                            l4998 2B7A  
                          STR_1 0E08                            STR_2 0E08                            STR_3 0E08  
                          STR_4 0E05                            STR_5 0E0D                            u3000 460C  
                          u3001 4608                            u3011 4636                            u3020 465A  
                          u3100 482A                            u3021 4656                            u3101 4826  
                          u3030 4684                            u3110 4872                            u3031 4680  
                          u3111 486E                            u4000 2260                            u3200 561A  
                          u3040 46C4                            u3120 5430                    _BAUD4CONbits 000EE9  
                          u4001 225C                            u3201 5616                            u3041 46C0  
                          u3121 542C                            _LATE 000F7D                            u4010 2270  
                          u3210 5636                            u3050 470E                            u3130 5452  
                          u4011 226C                            u3211 5632                            u3051 470A  
                          u3131 544E                            _LATG 000F7F                            u4100 2530  
                          u4020 23EA                            u3220 565C                            u3060 4762  
                          u3140 54A8                            u3300 358A                            u4101 252C  
                          u3221 5658                            u3061 475E                            u3141 54A4  
                          u3301 3586                            u4110 255E                            u4030 2444  
                          u3070 4794                            u3150 54B8                            u3310 35A8  
                          u3230 33C2                            u4111 255A                            u4031 2440  
                          u3071 4790                            u3151 54B4                            u3311 35A4  
                          u3231 33BC                            u5000 2FBA                            u4120 2598  
                          u4040 2464                            u3400 3D48                            u4200 5DB6  
                          u3080 47D2                            u3160 5BE2                            u3320 35C2  
                          u3240 33C4                            u5001 2FB6                            u4121 2594  
                          u4041 2460                            u4025 23E0                            u3401 3D44  
                          u4201 5DB2                            u3081 47CE                            u3161 5BDE  
                          u3321 35BE                            u5010 2FCE                            u4130 4FFA  
                          u4050 2476                            u3170 55BC                            u3410 3E2C  
                          u4210 4454                            u3090 47FC                            u3330 35DC  
                          u3250 33DA                            _T2PR 000FBC                            u5011 2FCA  
                          u4131 4FF6                            u4051 2472                            u3171 55B8  
                          u3411 3E28                            u4211 4450                            u3091 47F8  
                          u3331 35D8                            u3251 33D6                            u5020 2FE8  
                          u5100 41D0                            u4140 5038                            u4060 24A4  
                          u3500 1D82                            u3180 55D6                            u4300 5590  
                          u4220 44AE                            u3340 35EC                            u3260 340A  
                          u5021 2FE4                            u5101 41CC                            u4141 5034  
                          u4061 24A0                            u3501 1D7E                            u3181 55D2  
                          u4301 558C                            u4221 44AA                            u3341 35E8  
                          u3261 3406                            u5030 3030                            u5110 41EE  
                          u4150 5056                            u4070 24BA                            u3510 1DBE  
                          u3190 55FC                            u4310 55A8                            u4230 44F2  
                          u3350 35FE                            u3270 3426                            u5031 302C  
                          u5111 41EA                            u4151 5052                            u4071 24B6  
                          u3511 1DBA                            u3191 55F8                            u4311 55A4  
                          u4231 44EE                            u3351 35FA                            u3271 3422  
                          u5040 3060                            u5120 41FE                            u4320 4EDC  
                          u4160 5076                            u4080 24CE                            u3600 1ED8  
                          u3520 1DCC                            u3440 1CE6                            u4400 261E  
                          u3424 3E86                            u4240 451C                            u3360 360E  
                          u3280 3454                            u5200 1B2A                            u5041 305C  
                          u5121 41FA                            u4321 4ED8                            u4161 5072  
                          u4081 24CA                            u3601 1ED4                            u3521 1DC8  
                          u3441 1CE2                            u4401 261A                            u3425 3E82  
                          u4241 4518                            u3361 360A                            u3281 3450  
                          u5201 1B26                            u5050 308E                            u5130 420C  
                          u4330 4F10                            u4170 50C6                            u4090 24E8  
                          u3610 1F0A                            u3530 1E3A                            u3450 1CF8  
                          u4410 2652                            u3434 3EF0                            u4250 4576  
                          u3370 3626                            u3290 3462                            u5210 1B54  
                          u5051 308A                            u5131 4208                            u4171 50C2  
                          u4091 24E4                            u3611 1F06                            u3531 1E36  
                          u3451 1CF4                            u3435 3EEC                            u4251 4572  
                          u3371 3622                            u3291 345E                            u5211 1B50  
                          u3380 5E20                            u5140 4246                            u5060 40C6  
                          u4340 4F3E                            u4180 5C92                            u3700 2052  
                          u3620 1F18                            u3540 1E52                            u3460 1D08  
                          u4420 266E                            u4260 45AE                            u5300 1CBC  
                          u5220 1B6A                            u3381 5E1C                            u5141 4242  
                          u5061 40C2                            u4341 4F3A                            u4181 5C8E  
                          u3701 204E                            u3621 1F14                            u3541 1E4C  
                          u3461 1D04                            u4421 266A                            u4261 45AA  
                          u5301 1CB8                            u5221 1B66                            u3390 5E36  
                          u5150 4254                            u5070 40D4                            u4350 4F52  
                          u3710 2062                            u3630 1F36                            u3550 1E54  
                          u3470 1D4A                            u4430 26AE                            u4510 36DC  
                          u4270 45C6                            u4190 587E                            u5310 4EB8  
                          u5230 1B80                            u3391 5E32                            u5151 4250  
                          u5071 40D0                            u4351 4F4E                            u4335 4F06  
                          u3711 205E                            u3631 1F32                            u3471 1D46  
                          u4431 26AA                            u4415 2648                            u4511 36D4  
                          u4271 45C2                            u4191 587A                            u5311 4EB4  
                          u6007 4E3E                            u5231 1B7C                            u5080 4130  
                          u4360 4F7A                            u3800 214A                            u3720 2074  
                          u3640 1F6E                            u3560 1E7C                            u3480 1D60  
                          u4440 27B4                            u4280 5522                            u5240 1B9E  
                          u5160 195A                            u5320 5418                            u5400 2C32  
                          u5081 412C                            u4361 4F76                            u3801 2146  
                          u3721 2070                            u3641 1F6A                            u3561 1E78  
                          u3481 1D5C                            u4441 27B0                            u4281 551E  
                          u6017 4E72                            u5241 1B9A                            u5161 1956  
                          u5321 5414                            u5401 2C2E                            u5090 4186  
                          u4370 4F9A                            u3810 215C                            u3730 208A  
                          u3650 1FB4                            u3570 1E9A                            u3490 1D72  
                          u4450 2852                            u4610 37E4                            u4530 3714  
                          u4290 5546                            u2930 52A2                            u5250 1BE0  
                          u5170 1A28                            u5410 2C8E                            u5330 2A18  
            verify_color@color2 01AA                            u5091 4182                            u4371 4F96  
                          u3811 2158                            u3731 2086                            u3651 1FB0  
                          u3571 1E96                            u3491 1D6E                            u4451 284E  
                          u4611 37DC                            u4531 3710                            u4291 5542  
                          u6107 518A                            u6027 5B20                            u2931 529E  
                          u5251 1BDC                            u5171 1A24                            u5411 2C8A  
                          u5331 2A14                            u4380 4FAA                            u3820 2178  
                          u3740 20A0                            u3660 1FEA                            u3580 1EBA  
                          u4460 2912                            u4540 3726                            u4508 36A6  
                          u3900 56AE                            u2940 52B4                            u5260 1C10  
                          u5180 1A54                            u5420 2CF2                            u5340 2A3E  
                          u5500 57AA                            u4381 4FA6                            u3821 2174  
                          u3741 209C                            u3661 1FE6                            u3581 1EB6  
                          u4541 371E                            u3901 56AA                            u6117 4B7E  
                          u6037 48FC                            u2941 52B0                            u5261 1C0C  
                          u5181 1A50                            u5421 2CEE                            u5341 2A3A  
                          u5501 57A6                            u3750 20B4                            u3670 1FFA  
                          u3590 1EC8                            u4470 292E                            u4390 25F6  
                          u4710 38E6                            u4630 3820                            u3910 56FA  
                          u5510 48D4                            u2950 52DC                            u3830 3F24  
                          u5270 1C40                            u5190 1A6A                            u5430 2D06  
                          u5350 2A66                            u3751 20B0                            u3671 1FF6  
                          u3591 1EC4                            u4471 292A                            u4711 38DE  
                          u4631 381C                            u6207 571C                            u3911 56F6  
                          u6127 4BC6                            u6047 4946                            u5511 48D0  
                          u2951 52D8                            u3831 3F20                            u5271 1C3C  
                          u5191 1A66                            u5431 2D02                            u5351 2A62  
                          u3760 20CE                            u3680 2026                            u4640 3832  
                          u4608 37AA                            u4560 375E                            u4528 36DE  
                          u4480 3692                            u3920 5712                            u5440 50E2  
                          u5600 49E6                            u5520 48E2                            u2960 5312  
                          u3840 3F6C                            u5280 1C74                            u4800 4AE0  
                          u5360 2AC2                            u3761 20CA                            u3681 2022  
                          u4465 2908                            u4641 382A                            u4561 3756  
                          u4481 368E                            u6217 5570                            u3921 570E  
                          u6137 4C0E                            u5441 50DE                            u5601 49E2  
                          u6057 498C                            u5521 48DE                            u2961 530E  
                          u3841 3F68                            u5281 1C70                            u4801 4ADC  
                          u5361 2ABE                            u3770 2108                            u3690 2036  
                          u4730 391E                            u4490 36A4                            u5450 5106  
                          u5530 4916                            u3930 5F6C                            u2970 5B00  
                          u3850 3F90                            u5290 1CA2                            u5610 4290  
                          u4810 4B08                            u5370 2B1E                            u3771 2104  
                          u3691 2032                            u4395 25EC                            u4731 391A  
                          u4491 369C                            u6307 5EAE                            u6227 3938  
                          u6147 4C6A                            u5451 5102                            u6067 49F6  
                          u5531 4912                            u3931 5F68                            u2971 5AFC  
                          u3851 3F8C                            u5291 1C9E                            u5611 428C  
                          u4811 4B04                            u5371 2B1A                            u4900 2E2A  
                          u3940 21A6                            u3780 211A                            u4708 38B2  
                          u4660 3868                            u4628 37E6                            u4580 3796  
                          u5460 5136                            u5540 4924                            u2980 5D12  
                          u3860 4034                            u4740 5C24                            u5620 42B0  
                          u4820 4B32                            u5380 2B7A                            u5700 30B4  
                          u4901 2E26                            u3941 21A2                            u3781 2116  
                          u4661 3860                            u4581 3792                            u6317 5ECE  
                          u6237 3954                            u6157 448E                            u5461 5132  
                          u6077 50EC                            u5541 4920                            u2981 5D0E  
                          u3861 4030                            u4741 5C20                            u5621 42AC  
                          u4821 4B2E                            u5381 2B76                            u5701 30B0  
                          u4910 2EA0                            u4830 2D22                            u3870 5B6E  
                          u3950 21B8                            u3790 212A                            u4590 37A8  
                          u4558 3728                            u5470 5148                            u5550 496C  
                          u2990 45DA                            u4750 5C3A                            u5630 42D6  
                          u5390 2BD6                            u5710 30C4                            u4911 2E9C  
                          u4831 2D1E                            u3871 5B66                            u3951 21B4  
                          u3791 2126                            u6407 37C4                            u4591 37A0  
                          u6327 4CC2                            u6247 39B4                            u6167 44C0  
                          u5471 5144                            u6087 5112                            u5551 4962  
                          u2991 45D6                            u4751 5C36                            u5631 42D2  
                          u5391 2BD2                            u5711 30C0                            u4920 2EC2  
                          u4840 2D34                            u3960 21C8                            u4728 38E8  
                          u4680 389E                            u5480 516C                            u5640 4306  
                          u4760 4A48                            u5720 3126                            u5800 3C18  
                          u4921 2EBE                            u4841 2D30                            u3961 21C4  
                          u4681 389A                            u6417 3800                            u6337 4CE6  
                          u6257 3A18                            u6177 4556                            u5481 5168  
                          u6097 5152                            u5641 4302                            u4761 4A44  
                          u5721 3122                            u5801 3C14                            u4930 2EEC  
                          u4850 2D44                            u3970 2208                            u4690 38B0  
                          u4658 3834                            u4578 3760                            u3890 568A  
                          u5490 517E                            u5570 49A6                            u5650 4338  
                          u4770 4A6C                            u5730 3188                            u5810 3C64  
                          u4931 2EE8                            u4851 2D40                            u3971 2204  
                          u4691 38A8                            u6427 3848                            u6347 4D0A  
                          u6267 3A94                            u3891 5686                            u6187 4588  
                          u5491 517A                            u5571 49A2                            u5651 4334  
                          u4771 4A68                            u5731 3184                            u5811 3C60  
                          u4940 2F10                            u4860 2D88                            u3980 221A  
                          u5580 49B4                            u5660 435E                            u4780 4AB8  
                          u5740 31EA                            u5820 3D04                            u4941 2F0C  
                          u4861 2D84                            u3981 2216                            u6437 387E  
                          u6357 4D2E                            u6277 3B10                            u6197 56D8  
                          u5581 49B0                            u5661 435A                            u4781 4AB4  
                          u5741 31E6                            u5821 3D00                            u4950 2F26  
                          u4870 2D9A                            u3990 222A                            u4678 386A  
                          u5590 49C2                            u5670 4370                            u4790 4AD0  
                          u5750 324C                            u4951 2F22                            u4871 2D96  
                          u3991 2226                            u6447 38C6                            u6367 36BC  
                          u6287 5E6E                            u5591 49BE                            u5671 436C  
                          u4791 4ACC                            u5751 3248                            u4960 2F44  
                          u4880 2DAA                            u3888 5B70                            u5568 4970  
                          u5680 43B8                            u5760 32AE                            u4961 2F40  
                          u4881 2DA6                            u6457 38FC                            u6377 36F4  
                          u6297 5E8E                            u5681 43B4                            u5761 32AA  
                          u4970 2F64                            u4890 2DEA                            u5690 43FE  
                          u5770 3310                            u6467 5EEE                            u4971 2F60  
                          u4891 2DE6                            u6387 373E                            u5691 43FA  
                          u5907 4B12                            u5771 330C                            u4980 2F76  
                          u5780 3372                            u6477 5D68                            u4981 2F72  
                          u6397 3776                            u5917 4B3C                            u5781 336E  
                          u4990 2FA4                            u5790 3BEC                            u4991 2FA0  
                          u5927 43D8                            u5847 3C9E                            u5791 3BE8  
                          u5937 5380                            u5857 573C                            u5947 0E72  
                          u5867 5774                            u5957 10D8                            u5877 29DE  
                          u5967 112E                            u5887 4A96                            u5977 15D6  
                          u5897 4AEA                            u5987 4DD6                            u5997 4E0A  
                          abs@a 0013                            _dbuf 0186                            _main 3B2A  
                          _dtoa 3392                turning_action@mL 0035                turning_action@mR 0037  
                          _prec 017E                            _nout 017A                            pad@i 0018  
                          pad@p 0015                            fsr1h 000FE2                            fsr2h 000FDA  
                          indf1 000FE7                            indf2 000FDF                            fsr1l 000FE1  
                          pad@w 001A                            fsr2l 000FD9                            btemp 005F  
                          _stop 566E                            prodh 000FF4                            prodl 000FF3  
                          start 0030                    main@accident 01C3                  ?_color_display 0058  
                 test_action@mL 002D                   test_action@mR 002F                 ___fldiv@new_exp 0020  
        __end_of_color_read_Red 5988                 __end_of_HighISR 0030                    ___param_bank 000000  
               detect_color@buf 0081                  ?_color_predict 0001                           ??_abs 0015  
                         ??_pad 0017                   ___fltol@sign1 0064                 __end_of___aodiv 4750  
     amb_light_measure@CC_amb_1 0072       amb_light_measure@CC_amb_2 0074       amb_light_measure@CC_amb_3 0076  
               __end_of___fladd 218C                           ?_main 0001                           ?_dtoa 001C  
               __end_of___aomod 48B4                 __end_of___fldiv 30A2                 __end_of___awdiv 566E  
               __end_of___flneg 5CB4                 __end_of___flmul 25B6                 __end_of___flsub 5ABE  
               __end_of___fltol 4FCC                           ?_stop 001A                 ___awdiv@divisor 0009  
                         _LED_B 5EBE                           _LED_C 5EDE                           _LED_G 5E9E  
                         _LED_R 5E5E                           i2l507 002C                 ___awdiv@counter 000B  
                  vfpfcnvrt@fmt 0042                           _TMR0H 000FD4                           _TMR0L 000FD3  
       __end_of_sendCharSerial4 5F72      __end_of_I2C_2_Master_Start 5FA8         ??_color_data_collection 005C  
    __end_of_I2C_2_Master_Write 5F7E                 __end_of_compare 5C42                    compare@lower 006A  
                         _flags 0180                           _color 0184                    compare@upper 006E  
                         _fputc 5290                           _fputs 5ABE                           _setup 48B4  
                         pad@fp 0011                           _width 017C                           _putch 5FAA  
                         _toint 0E01                           dtoa@d 001E                           dtoa@i 003E  
                         dtoa@n 0036                           dtoa@p 0030                           dtoa@s 0034  
                         dtoa@w 0032                 ??_test_function 00FE            amb_light_measure@amb 006A  
                         tablat 000FF5                 __end_of_lroundf 5C7C                 detect_wall@stop 007C  
                         ttemp5 0060                           ttemp6 0063                           ttemp7 0067  
                         status 000FD8                           wtemp8 0060                 __end_of_sprintf 5938  
              color_display@buf 0079         __end_of_color_read_Blue 5A28           _I2C_2_Master_RepStart 5F8A  
             _calibration_motor 50D0                 ?_color_read_Red 0005                 __initialization 5CB4  
                 short_burst@mL 0020                   short_burst@mR 0022              ?_calibration_motor 0033  
                  __end_of_main 3D2C                    __end_of_dtoa 3674                   main@amb_light 01C0  
          __end_of_detect_color 1CCC                    __end_of_stop 572C          color_data_collection@i 00DE  
        color_data_collection@m 005A             ??_calibration_motor 0037                          ??_main 01B4  
                        ??_dtoa 0026                          ??_stop 001E                   __activetblptr 000001  
                        ?_LED_B 0001                          ?_LED_C 0001                          ?_LED_G 0001  
                        ?_LED_R 0001                       ??_LED_OFF 0001          _initDCmotors_parameter 51BE  
                  turn45@i_1340 0028                    turn45@i_1342 002A                    ?_setMotorPWM 000F  
                        ?_fputc 0001                          ?_fputs 000A                ___awdiv@dividend 0007  
                        ?_setup 0078                          ?_putch 0001                          _RC0PPS 000E62  
                        _RC4REG 000EE3                          _RE2PPS 000E74                          _RD5PPS 000E6F  
                        _RC7PPS 000E69                          _RD6PPS 000E70                          i2l5370 0028  
                        i2l5364 000A                          i2l5366 001A                          i2l5368 0022  
                     ??_HighISR 0001        __end_of_color_click_init 5D88                          _RX4PPS 000E15  
                        _TX4REG 000EE4                 ??_color_display 005A       __end_of_calibration_motor 51BE  
              __end_of___xxtofl 4268                   ??_Timer0_init 0001                 ??_color_predict 0058  
                  vfprintf@cfmt 0056                          ___flge 4FCC                       ??___aodiv 0011  
                     ??___fladd 0009                       ??___aomod 0011                          ___wmul 5E38  
                     ??___fldiv 0017                       ??___awdiv 000B                       ??___flneg 0005  
                     ??___flmul 0030                       ??___flsub 0019                       ??___fltol 0060  
                        _goback 2964                   compare@result 0070                          _memory 0100  
                        clear_0 5CD2                ___awdiv@quotient 000D                          _motorL 016D  
                        _motorR 0164                          isa$std 000001                          pad@buf 0013  
                        _turn45 4418                          _roundf 25B6                          dtoa@fp 001C  
                        _strlen 5CEA                       ??_compare 005F                   toggle_light@i 0004  
              __end_of_pin_init 5D54                          fputc@c 0001         toggle_light@lightnumber 0005  
                        fputs@c 000E                          fputs@i 000F                          fputs@s 000A  
                test_function@m 01A6                  test_function@w 01A8                    __mediumconst 0000  
                        tblptrh 000FF7                          tblptrl 000FF6                          tblptru 000FF8  
              ?_sendCharSerial4 0001                       ??_lroundf 005F                     read_color@m 000C  
                        putch@c 0001                __end_of_vfprintf 5888                          stop@mL 001A  
                        stop@mR 001C               ??_initDCmotorsPWM 0003                ??_turning_action 0039  
                  ?_test_action 002D                       ??_sprintf 0058                      ___flge@ff1 0001  
                    ___flge@ff2 0005                    ___xxtofl@arg 000B                    ___xxtofl@exp 000A  
                  ___xxtofl@val 0001                    ?_short_burst 0020                calibrate_white@w 000C  
               fullSpeedBack@mL 0020                 fullSpeedBack@mR 0022                   main@stop_time 01C6  
                    __accesstop 0060         __end_of__initialization 5CD8                   verify_color@m 01A6  
                 verify_color@w 01A8        __end_of_color_read_Clear 5A78                      ___flneg@f1 0001  
      __end_of_color_read_Green 59D8          ?_I2C_2_Master_RepStart 0001              color_predict@color 00DD  
  initDCmotors_parameter@motorL 0001    initDCmotors_parameter@motorR 0003                   ___rparam_used 000001  
                    ___fltol@f1 005B                   __end_of_LED_B 5EDE                   __end_of_LED_C 5EFE  
                 __end_of_LED_G 5EBE                   __end_of_LED_R 5E7E                ?_color_read_Blue 0005  
               _Interrupts_init 5F7E                  __pcstackCOMRAM 0001                   _fullSpeedBack 4A0C  
                  __pidataBANK1 5FA8                   __end_of_fputc 535A               detect_color@color 00F5  
                 __end_of_fputs 5B02                   __end_of_setup 4A0C                   __end_of_putch 5FAC  
                 __end_of_toint 0E05             __end_of_Timer0_init 5F5A                         ??_LED_B 0001  
                       ??_LED_C 0001                         ??_LED_G 0001                         ??_LED_R 0001  
                       ??_fputc 0005                         ??_fputs 000E                         ??_setup 0080  
                       ??_putch 0001                      __pbssBANK1 0100             calibration_motor@mL 0033  
           calibration_motor@mR 0035                color_predict@buf 0079               _color_writetoaddr 5EFE  
                  _T2CLKCONbits 000FBF                  ?_fullSpeedBack 0020                         ?___flge 0001  
            ?_color_writetoaddr 0003                         ?___wmul 0001                         ?_goback 002D  
                       ?_turn45 0020                         ?_roundf 0041             ??_color_writetoaddr 0004  
                       ?_strlen 0001                         _LED_OFF 5E7E                       ?___xxtofl 0001  
                       _SP4BRGH 000EE6                         _SP4BRGL 000EE5                         _PWM6DCH 000FA3  
                       _PWM7DCH 000FA0                         _SSP2ADD 000ED6                         _SSP2BUF 000ED5  
  amb_light_measure@upper_bound 006E                    _detect_color 0E14   __end_of_color_data_collection 4EC4  
       __end_of_Interrupts_init 5F8A          color_writetoaddr@value 0003                ??_color_read_Red 0007  
                       _HighISR 0008       __end_of_color_writetoaddr 5F1E              _I2C_2_Master_Start 5F9E  
                    _initUSART4 5F1E              _I2C_2_Master_Write 5F72                       ?_pin_init 0001  
                       __Hparam 0000           test_function@complete 01B0                         __Lparam 0000  
             color_read_Red@tmp 000A                     _Timer0_init 5F3C         sendStringSerial4@string 0002  
                       ___aodiv 45C8                         ___fladd 1CCC                         ___aomod 4750  
                       ___fldiv 2D08                         ___awdiv 55AA                         ___flneg 5C7C  
                       ___flmul 218C                         ___flsub 5A78                         ___fltol 4EC4  
           ?_I2C_2_Master_Start 0001        fullSpeedBack@instruction 0024             ?_I2C_2_Master_Write 0001  
                     ?_vfprintf 0050                    __psmallconst 0E00                         __pcinit 5CB4  
                       __ramtop 0E00                      _read_color 5888                         __ptext0 3B2A  
                       __ptext1 572C                         __ptext2 30A2                         __ptext3 2964  
                       __ptext4 4A0C                         __ptext5 4268                         __ptext6 535A  
                       __ptext7 0E14                         __ptext8 5C08                         __ptext9 4DB6  
                       _compare 5C08         ?_initDCmotors_parameter 0001                       _T2CONbits 000FBD  
                    ??___xxtofl 0005               detect_wall@CC_amb 0078               detect_wall@CG_amb 0072  
           turning_action@color 0039                       _T2HLTbits 000FBE                         _lroundf 5C42  
                       goback@i 0033                         main@amb 01B8                         _sprintf 58E6  
                       main@rgb 01C8            ??_I2C_2_Master_Start 0002            ??_I2C_2_Master_Write 0002  
          end_of_initialization 5CD8              setMotorPWM@PWMduty 0018                         fputc@fp 0003  
         __end_of_test_function 4418                         fputs@fp 000C               ?_color_click_init 0001  
               test_function@mL 01AA                 test_function@mR 01AC                 ??_fullSpeedBack 0025  
                    ??_pin_init 0001              ??_color_click_init 0005                         setup@mL 007C  
             __end_of_vfpfcnvrt 40B4                         setup@mR 007E                         postdec1 000FE5  
                       postdec2 000FDD                         postinc0 000FEE                         postinc1 000FE6  
                       postinc2 000FDE                         turn45@i 002C                         roundf@e 004D  
                       roundf@u 0053                         roundf@x 0041                         roundf@y 0057  
                    ??_vfprintf 0056                  main@start_time 01C4                         strlen@a 0003  
                       strlen@s 0001                 _initDCmotorsPWM 5B86                 turn45@direction 0025  
__end_of_initDCmotors_parameter 5290                   ??_detect_wall 0070                       _PORTFbits 000F8E  
      test_function@stop_signal 01B2                     ___fladd@grs 0010                   ___xxtofl@sign 0009  
                     _TRISAbits 000F81                       _TRISCbits 000F83                       _TRISDbits 000F84  
                     _TRISEbits 000F85                       _TRISFbits 000F86                       _TRISGbits 000F87  
                     _TRISHbits 000F88                     ___fldiv@grs 0022                     ___fldiv@rem 001B  
              fullSpeedAhead@mL 001A                fullSpeedAhead@mR 001C        color_writetoaddr@address 0004  
       ??_I2C_2_Master_RepStart 0002                ?_Interrupts_init 0001                     ___flmul@grs 0035  
                 ?_toggle_light 0001               ?_color_read_Clear 0005               ?_color_read_Green 0005  
                   ?_initUSART4 0001       sendCharSerial4@charToSend 0001                   ?_verify_color 01A6  
         __end_of_color_display 5826                      main@motorL 01EC                      main@motorR 01F5  
   amb_light_measure@CC_amb_ave 0070               ??_calibrate_white 000E              ??_color_read_Clear 0007  
                color_display@m 0058              ??_color_read_Green 0007                  detect_color@BB 00EF  
                detect_color@BC 00E5                  detect_color@BG 00F8                  detect_color@GB 00F1  
                detect_color@GG 00F3                  detect_color@BR 00E9                  detect_color@GR 00EB  
                detect_color@RB 00ED                  detect_color@RG 00E7                  detect_color@RR 00F6  
         __end_of_color_predict 5DE6                  __end_of___flge 50D0                  _fullSpeedAhead 54E6  
                   vfpfcnvrt@ap 0044                     vfpfcnvrt@fp 0040                     vfpfcnvrt@ll 0048  
                __end_of___wmul 5E5E                     ?_read_color 000C                  __end_of_goback 2D08  
                __end_of_turn45 45C8                  __end_of_roundf 2964                  __end_of_strlen 5D20  
           color_read_Clear@tmp 000A             start_initialization 5CB4                     __end_of_abs 5C08  
                   __end_of_pad 54E6             __end_of_detect_wall 5420                 turn45@turn_time 0024  
                ??_toggle_light 0002                  ??_verify_color 00FE             color_read_Green@tmp 000A  
       __end_of_initDCmotorsPWM 5BC8                     vfprintf@fmt 0052          __end_of_fullSpeedAhead 55AA  
                      ??___flge 0009                        ??___wmul 0005                        ??_goback 0031  
                   __pdataBANK1 01FE                        ??_turn45 0026                        ??_roundf 0045  
                      ??_strlen 0003                       ___fladd@a 0005                       ___fladd@b 0001  
                      ?_LED_OFF 0001                       ___fldiv@a 0013                       ___fldiv@b 000F  
                     ___flmul@a 002C                       ___flmul@b 0028                       ___flsub@a 0015  
                     ___flsub@b 0011                   __pcstackBANK0 0060                   __pcstackBANK1 01A6  
              ___aodiv@dividend 0001            detect_wall@amb_light 006E                        ?_HighISR 0001  
                     _dtoa$2614 002E                    ?_Timer0_init 0001                 ?_fullSpeedAhead 001A  
                     __pintcode 0008                        ?___aodiv 0001                        ?___fladd 0001  
                      ?___aomod 0001                        ?___fldiv 000F                        ?___awdiv 0007  
              ___aodiv@quotient 0013                        ?___flneg 0001                        ?___flmul 0028  
                      ?___flsub 0011                        ?___fltol 005B              test_function@color 01B1  
                   _centisecond 0182            I2C_2_Master_Read@ack 0003            I2C_2_Master_Read@tmp 0004  
                      ?_compare 006A                     _detect_wall 535A                     __smallconst 0E00  
             _I2C_2_Master_Idle 5E10               _I2C_2_Master_Init 5DE6               _I2C_2_Master_Read 5B44  
             _I2C_2_Master_Stop 5F94          toggle_light@toggletime 0001                        ?_lroundf 0066  
            ?_I2C_2_Master_Idle 0001              ?_I2C_2_Master_Init 0001              ?_I2C_2_Master_Read 0001  
                 ??_setMotorPWM 0011              ?_I2C_2_Master_Stop 0001        initDCmotorsPWM@PWMperiod 0001  
                      ?_sprintf 0060               _sendStringSerial4 5D88           _color_data_collection 4DB6  
           ??_I2C_2_Master_Idle 0001             ??_I2C_2_Master_Init 0001             ??_I2C_2_Master_Read 0002  
                ___wmul@product 0005                        _LATAbits 000F79             ??_I2C_2_Master_Stop 0002  
                      _LATCbits 000F7B                        _LATDbits 000F7C                        _LATEbits 000F7D  
                      _LATFbits 000F7E                        _LATGbits 000F7F                        _LATHbits 000F80  
                      _PIE0bits 000E29              ?_sendStringSerial4 0002                        _PIR0bits 000E33  
                      _PIR4bits 000E37                        i2u583_40 001A                        i2u583_41 0016  
          detect_wall@threshold 007A                ?_initDCmotorsPWM 0001               ??_sendCharSerial4 0001  
                      _SSP2CON2 000EDA             ??_sendStringSerial4 0004                        _SSP2STAT 000ED8  
                   _array_index 0185                       _vfpfcnvrt 3F00                      setup@white 0078  
     __end_of_I2C_2_Master_Idle 5E38            __end_of_toggle_light 3920       __end_of_I2C_2_Master_Init 5E10  
     __end_of_I2C_2_Master_Read 5B86               ___wmul@multiplier 0001       __end_of_I2C_2_Master_Stop 5F9E  
                  setMotorPWM@m 000F     I2C_2_Master_Write@data_byte 0002            __end_of_verify_color 57B6  
        test_function@amb_light 01AE                       main@white 01D0               ??_color_read_Blue 0007  
                 detect_color@m 0079                   detect_color@w 007B                   ??_test_action 0031  
               _calibrate_white 3920       __end_of_sendStringSerial4 5DB8                   detect_wall@mL 006A  
                 detect_wall@mR 006C                   ??_short_burst 0024               _amb_light_measure 4C8E  
 __end_of_I2C_2_Master_RepStart 5F94              color_read_Blue@tmp 000A             __end_of_setMotorPWM 3F00  
                    roundf@F527 0176                    ??_initUSART4 0001              ?_amb_light_measure 006A  
                      __Hrparam 0000                      vfprintf@ap 0054                        __Lrparam 0000  
                    vfprintf@fp 0050           __end_of_fullSpeedBack 4B60                    __Lsmallconst 0E00  
          compare@value2compare 006C             ??_amb_light_measure 006C                      ?_vfpfcnvrt 0040  
                  ??_read_color 000E                 ___aodiv@divisor 0009                 ___aodiv@counter 0011  
                    _ANSELDbits 000EA7                      _ANSELFbits 000EB4                      sprintf@fmt 0062  
                      ___xxtofl 40B4                      _T0CON0bits 000FD5                      _T0CON1bits 000FD6  
            __end_of_initUSART4 5F3C                        __ptext10 5888                        __ptext11 5DB8  
                      __ptext20 5290                        __ptext12 57B6                        __ptext21 5FAA  
                      __ptext13 58E6                        __ptext30 4B60                        __ptext22 5BC8  
                      __ptext14 5826                        __ptext31 4418                        __ptext23 4750  
                      __ptext15 3F00                        __ptext40 59D8                        __ptext32 566E  
                      __ptext24 45C8                        __ptext16 3392                        __ptext41 5E5E  
                      __ptext33 54E6                        __ptext25 5D88                        __ptext17 5420  
                      __ptext50 1CCC                        __ptext42 5E7E                        __ptext34 3D2C  
                      __ptext26 5F5A                        __ptext18 5CEA                        __ptext51 5C7C  
                      __ptext43 5E9E                        __ptext35 5E38                        __ptext27 5B02  
                      __ptext19 5ABE                        __ptext60 5EDE                        __ptext52 218C  
                      __ptext44 5EBE                        __ptext36 55AA                        __ptext28 48B4  
                      __ptext61 5D20                        __ptext53 4FCC                        __ptext45 4C8E  
                      __ptext37 3920                        __ptext29 50D0                        __ptext70 5E10  
                      __ptext62 5F1E                        __ptext54 4EC4                        __ptext46 3674  
                      __ptext38 5938                        __ptext71 5DE6                        __ptext63 51BE  
                      __ptext55 5A28                        __ptext47 5C42                        __ptext39 5988  
                      __ptext72 5F3C                        __ptext64 5B86                        __ptext56 5F8A  
                      __ptext48 25B6                        __ptext73 5F7E                        __ptext65 5D54  
                      __ptext57 5B44                        __ptext49 5A78                        __ptext66 5EFE  
                      __ptext58 40B4                        __ptext67 5F72                        __ptext59 2D08  
                      __ptext68 5F94                        __ptext69 5F9E       __end_of_amb_light_measure 4DB6  
                  _SSP2CON1bits 000ED9                    _SSP2CON2bits 000EDA          ?_color_data_collection 005A  
        test_function@test_code 01B3             __end_of_test_action 4C8E              __end_of_read_color 58E6  
                      _pin_init 5D20                  _turning_action 30A2             __end_of_short_burst 5B44  
                      isa$xinst 000000                      _RC4STAbits 000EE7                        int$flags 005F  
                   _SENSITIVITY 01FE                        goback@mL 002D                        goback@mR 002F  
                      _vfprintf 5826                ___aomod@dividend 0001         __end_of_calibrate_white 3B2A  
                    _INTCONbits 000FF2                     _setMotorPWM 3D2C                   ?_detect_color 0079  
                   _PWM6CONbits 000FA4                     _PWM7CONbits 000FA1                        intlevel2 0000  
                     sprintf@ap 006C          __end_of_turning_action 3392                ??_fullSpeedAhead 001E  
                 _test_function 4268                  setup@amb_light 0082                        lroundf@x 0066  
      ??_initDCmotors_parameter 0005                        setup@amb 007A                 ___aomod@divisor 0009  
                   ??_vfpfcnvrt 0046                 ___aomod@counter 0011                        turn45@mL 0020  
                      turn45@mR 0022                _color_click_init 5D54                    ?_detect_wall 006A  
                      sprintf@f 006E                        sprintf@s 0060               _detect_color$2942 00FA  
                    _SSP2DATPPS 000E1D                      _SSP2CLKPPS 000E1C                  ??_detect_color 007D  
                   _test_action 4B60                   ___fladd@signs 000D                      _TX4STAbits 000EE8  
                  ___aodiv@sign 0012                 _sendCharSerial4 5F5A                     _short_burst 5B02  
                  ___fladd@aexp 000E                    ___fladd@bexp 000F                  ?_test_function 01A6  
               ?_turning_action 0035                    _toggle_light 3674                    ___aomod@sign 0012  
                  _verify_color 572C                     _roundf$2944 004F                     _roundf$2945 0049  
                 _color_display 57B6                 main@stop_signal 01C2  
