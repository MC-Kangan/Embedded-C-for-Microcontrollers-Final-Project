

Microchip MPLAB XC8 Assembler V2.35 build 20211206165544 
                                                                                               Thu Mar 03 00:33:22 2022

Microchip MPLAB XC8 C Compiler v2.35 (Free license) build 20211206165544 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=3
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=3
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=3
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=3
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=3
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text24,global,reloc=2,class=CODE,delta=1
    36                           	psect	text25,global,reloc=2,class=CODE,delta=1
    37                           	psect	text26,global,reloc=2,class=CODE,delta=1
    38                           	psect	text27,global,reloc=2,class=CODE,delta=1
    39                           	psect	text28,global,reloc=2,class=CODE,delta=1
    40                           	psect	text29,global,reloc=2,class=CODE,delta=1
    41                           	psect	text30,global,reloc=2,class=CODE,delta=1
    42                           	psect	text31,global,reloc=2,class=CODE,delta=1
    43                           	psect	text32,global,reloc=2,class=CODE,delta=1
    44                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    45                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    46                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    47                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    48  0000                     
    49                           ; Version 2.35
    50                           ; Generated 05/05/2021 GMT
    51                           ; 
    52                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    53                           ; All rights reserved.
    54                           ; 
    55                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    56                           ; 
    57                           ; Redistribution and use in source and binary forms, with or without modification, are
    58                           ; permitted provided that the following conditions are met:
    59                           ; 
    60                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    61                           ;        conditions and the following disclaimer.
    62                           ; 
    63                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    64                           ;        of conditions and the following disclaimer in the documentation and/or other
    65                           ;        materials provided with the distribution. Publication is not required when
    66                           ;        this file is used in an embedded application.
    67                           ; 
    68                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    69                           ;        software without specific prior written permission.
    70                           ; 
    71                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    72                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    73                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    74                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    75                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    76                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    77                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    78                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    79                           ; 
    80                           ; 
    81                           ; Code-generator required, PIC18F67K40 Definitions
    82                           ; 
    83                           ; SFR Addresses
    84  0000                     _TRISFbits	set	3974
    85  0000                     _TX4REG	set	3812
    86  0000                     _RC4STAbits	set	3815
    87  0000                     _SP4BRGH	set	3814
    88  0000                     _TRISGbits	set	3975
    89  0000                     _TRISEbits	set	3973
    90  0000                     _SSP2CON2bits	set	3802
    91  0000                     _LATG	set	3967
    92  0000                     _LATE	set	3965
    93  0000                     _RX4PPS	set	3605
    94  0000                     _SSP2CLKPPS	set	3612
    95  0000                     _SSP2DATPPS	set	3613
    96  0000                     _ANSELDbits	set	3751
    97  0000                     _SSP2ADD	set	3798
    98  0000                     _SSP2CON1bits	set	3801
    99  0000                     _LATAbits	set	3961
   100  0000                     _LATFbits	set	3966
   101  0000                     _LATGbits	set	3967
   102  0000                     _TRISAbits	set	3969
   103  0000                     _TRISCbits	set	3971
   104  0000                     _TRISDbits	set	3972
   105  0000                     _LATCbits	set	3963
   106  0000                     _LATEbits	set	3965
   107  0000                     _RC4REG	set	3811
   108  0000                     _SP4BRGL	set	3813
   109  0000                     _TX4STAbits	set	3816
   110  0000                     _BAUD4CONbits	set	3817
   111  0000                     _SSP2CON2	set	3802
   112  0000                     _SSP2STAT	set	3800
   113  0000                     _SSP2BUF	set	3797
   114  0000                     _PIE4bits	set	3629
   115  0000                     _PIR4bits	set	3639
   116  0000                     _RC0PPS	set	3682
   117  0000                     _RC7PPS	set	3689
   118  0000                     _RD5PPS	set	3695
   119  0000                     _RE2PPS	set	3700
   120  0000                     _RD6PPS	set	3696
   121  0000                     _T2PR	set	4028
   122  0000                     _T2CONbits	set	4029
   123  0000                     _PWM7DCH	set	4000
   124  0000                     _PWM6DCH	set	4003
   125  0000                     _T2CLKCONbits	set	4031
   126  0000                     _T2HLTbits	set	4030
   127  0000                     _PWM6CONbits	set	4004
   128  0000                     _PWM7CONbits	set	4001
   129                           
   130                           	psect	smallconst
   131  000E00                     __psmallconst:
   132                           	callstack 0
   133  000E00  00                 	db	0
   134  000E01                     STR_1:
   135                           
   136                           ; BSR set to: 14
   137  000E01  09                 	db	9
   138  000E02  25                 	db	37
   139  000E03  64                 	db	100	;'d'
   140  000E04  09                 	db	9
   141  000E05  25                 	db	37
   142  000E06  64                 	db	100	;'d'
   143  000E07  09                 	db	9
   144  000E08  25                 	db	37
   145  000E09  64                 	db	100	;'d'
   146  000E0A  09                 	db	9
   147  000E0B  25                 	db	37
   148  000E0C  64                 	db	100	;'d'
   149  000E0D  0D                 	db	13
   150  000E0E  0A                 	db	10
   151  000E0F  00                 	db	0
   152  000E10  00                 	db	0	; dummy byte at the end
   153  0000                     
   154                           ; #config settings
   155                           
   156                           	psect	cinit
   157  001CD0                     __pcinit:
   158                           	callstack 0
   159  001CD0                     start_initialization:
   160                           	callstack 0
   161  001CD0                     __initialization:
   162                           	callstack 0
   163                           
   164                           ; Clear objects allocated to BANK1 (92 bytes)
   165  001CD0  EE01  F000         	lfsr	0,__pbssBANK1
   166  001CD4  0E5C               	movlw	92
   167  001CD6                     clear_0:
   168  001CD6  6AEE               	clrf	postinc0,c
   169  001CD8  06E8               	decf	wreg,f,c
   170  001CDA  E1FD               	bnz	clear_0
   171                           
   172                           ; Clear objects allocated to BANK0 (32 bytes)
   173  001CDC  EE00  F0DF         	lfsr	0,__pbssBANK0
   174  001CE0  0E20               	movlw	32
   175  001CE2                     clear_1:
   176  001CE2  6AEE               	clrf	postinc0,c
   177  001CE4  06E8               	decf	wreg,f,c
   178  001CE6  E1FD               	bnz	clear_1
   179  001CE8                     end_of_initialization:
   180                           	callstack 0
   181  001CE8                     __end_of__initialization:
   182                           	callstack 0
   183  001CE8  0E00               	movlw	low (__Lsmallconst shr (0+16))
   184  001CEA  6EF8               	movwf	tblptru,c
   185  001CEC  0E0E               	movlw	high __Lsmallconst
   186  001CEE  6EF7               	movwf	tblptrh,c
   187  001CF0  0100               	movlb	0
   188  001CF2  EF93  F00B         	goto	_main	;jump to C main() function
   189                           
   190                           	psect	bssBANK0
   191  0000DF                     __pbssBANK0:
   192                           	callstack 0
   193  0000DF                     _EUSART4RXbuf:
   194                           	callstack 0
   195  0000DF                     	ds	20
   196  0000F3                     _nout:
   197                           	callstack 0
   198  0000F3                     	ds	2
   199  0000F5                     _width:
   200                           	callstack 0
   201  0000F5                     	ds	2
   202  0000F7                     _prec:
   203                           	callstack 0
   204  0000F7                     	ds	2
   205  0000F9                     _flags:
   206                           	callstack 0
   207  0000F9                     	ds	2
   208  0000FB                     _TxBufReadCnt:
   209                           	callstack 0
   210  0000FB                     	ds	1
   211  0000FC                     _TxBufWriteCnt:
   212                           	callstack 0
   213  0000FC                     	ds	1
   214  0000FD                     _RxBufReadCnt:
   215                           	callstack 0
   216  0000FD                     	ds	1
   217  0000FE                     _RxBufWriteCnt:
   218                           	callstack 0
   219  0000FE                     	ds	1
   220                           
   221                           	psect	bssBANK1
   222  000100                     __pbssBANK1:
   223                           	callstack 0
   224  000100                     _EUSART4TXbuf:
   225                           	callstack 0
   226  000100                     	ds	60
   227  00013C                     _dbuf:
   228                           	callstack 0
   229  00013C                     	ds	32
   230                           
   231                           	psect	cstackBANK0
   232  000060                     __pcstackBANK0:
   233                           	callstack 0
   234  000060                     ?_sprintf:
   235                           	callstack 0
   236  000060                     sprintf@s:
   237                           	callstack 0
   238                           
   239                           ; 2 bytes @ 0x0
   240  000060                     	ds	2
   241  000062                     sprintf@fmt:
   242                           	callstack 0
   243                           
   244                           ; 2 bytes @ 0x2
   245  000062                     	ds	10
   246  00006C                     sprintf@ap:
   247                           	callstack 0
   248                           
   249                           ; 2 bytes @ 0xC
   250  00006C                     	ds	2
   251  00006E                     sprintf@f:
   252                           	callstack 0
   253                           
   254                           ; 11 bytes @ 0xE
   255  00006E                     	ds	11
   256  000079                     color_display@buf:
   257                           	callstack 0
   258                           
   259                           ; 80 bytes @ 0x19
   260  000079                     	ds	80
   261  0000C9                     main@rgb:
   262                           	callstack 0
   263                           
   264                           ; 4 bytes @ 0x69
   265  0000C9                     	ds	4
   266  0000CD                     main@motorL:
   267                           	callstack 0
   268                           
   269                           ; 9 bytes @ 0x6D
   270  0000CD                     	ds	9
   271  0000D6                     main@motorR:
   272                           	callstack 0
   273                           
   274                           ; 9 bytes @ 0x76
   275  0000D6                     	ds	9
   276                           
   277                           	psect	cstackCOMRAM
   278  000001                     __pcstackCOMRAM:
   279                           	callstack 0
   280  000001                     ??_I2C_2_Master_Idle:
   281  000001                     ?_strlen:
   282                           	callstack 0
   283  000001                     ?___aodiv:
   284                           	callstack 0
   285  000001                     ?___aomod:
   286                           	callstack 0
   287  000001                     sendCharSerial4@charToSend:
   288                           	callstack 0
   289  000001                     initDCmotorsPWM@PWMperiod:
   290                           	callstack 0
   291  000001                     fputc@c:
   292                           	callstack 0
   293  000001                     strlen@s:
   294                           	callstack 0
   295  000001                     ___aodiv@dividend:
   296                           	callstack 0
   297  000001                     ___aomod@dividend:
   298                           	callstack 0
   299                           
   300                           ; 8 bytes @ 0x0
   301  000001                     	ds	1
   302  000002                     ??_I2C_2_Master_Read:
   303  000002                     I2C_2_Master_Write@data_byte:
   304                           	callstack 0
   305  000002                     sendStringSerial4@string:
   306                           	callstack 0
   307                           
   308                           ; 2 bytes @ 0x1
   309  000002                     	ds	1
   310  000003                     color_writetoaddr@value:
   311                           	callstack 0
   312  000003                     I2C_2_Master_Read@ack:
   313                           	callstack 0
   314  000003                     fputc@fp:
   315                           	callstack 0
   316  000003                     strlen@a:
   317                           	callstack 0
   318                           
   319                           ; 2 bytes @ 0x2
   320  000003                     	ds	1
   321  000004                     color_writetoaddr@address:
   322                           	callstack 0
   323  000004                     I2C_2_Master_Read@tmp:
   324                           	callstack 0
   325                           
   326                           ; 1 bytes @ 0x3
   327  000004                     	ds	1
   328  000005                     ??_fputc:
   329  000005                     ??_color_click_init:
   330  000005                     ?_color_read_Red:
   331                           	callstack 0
   332  000005                     ?_color_read_Blue:
   333                           	callstack 0
   334  000005                     ?_color_read_Green:
   335                           	callstack 0
   336  000005                     ?_color_read_Clear:
   337                           	callstack 0
   338                           
   339                           ; 2 bytes @ 0x4
   340  000005                     	ds	2
   341  000007                     ??_color_read_Red:
   342  000007                     ??_color_read_Blue:
   343  000007                     ??_color_read_Green:
   344  000007                     ??_color_read_Clear:
   345                           
   346                           ; 1 bytes @ 0x6
   347  000007                     	ds	2
   348  000009                     ___aodiv@divisor:
   349                           	callstack 0
   350  000009                     ___aomod@divisor:
   351                           	callstack 0
   352                           
   353                           ; 8 bytes @ 0x8
   354  000009                     	ds	1
   355  00000A                     color_read_Red@tmp:
   356                           	callstack 0
   357  00000A                     color_read_Blue@tmp:
   358                           	callstack 0
   359  00000A                     color_read_Green@tmp:
   360                           	callstack 0
   361  00000A                     color_read_Clear@tmp:
   362                           	callstack 0
   363  00000A                     fputs@s:
   364                           	callstack 0
   365                           
   366                           ; 2 bytes @ 0x9
   367  00000A                     	ds	2
   368  00000C                     get_color@m:
   369                           	callstack 0
   370  00000C                     fputs@fp:
   371                           	callstack 0
   372                           
   373                           ; 2 bytes @ 0xB
   374  00000C                     	ds	2
   375  00000E                     fputs@c:
   376                           	callstack 0
   377  00000E                     detect_color@m:
   378                           	callstack 0
   379                           
   380                           ; 2 bytes @ 0xD
   381  00000E                     	ds	1
   382  00000F                     fputs@i:
   383                           	callstack 0
   384                           
   385                           ; 2 bytes @ 0xE
   386  00000F                     	ds	1
   387  000010                     ??_detect_color:
   388                           
   389                           ; 1 bytes @ 0xF
   390  000010                     	ds	1
   391  000011                     ?_pad:
   392                           	callstack 0
   393  000011                     ___aodiv@counter:
   394                           	callstack 0
   395  000011                     ___aomod@counter:
   396                           	callstack 0
   397  000011                     pad@fp:
   398                           	callstack 0
   399                           
   400                           ; 2 bytes @ 0x10
   401  000011                     	ds	1
   402  000012                     ___aodiv@sign:
   403                           	callstack 0
   404  000012                     ___aomod@sign:
   405                           	callstack 0
   406                           
   407                           ; 1 bytes @ 0x11
   408  000012                     	ds	1
   409  000013                     ?_abs:
   410                           	callstack 0
   411  000013                     pad@buf:
   412                           	callstack 0
   413  000013                     abs@a:
   414                           	callstack 0
   415  000013                     ___aodiv@quotient:
   416                           	callstack 0
   417                           
   418                           ; 8 bytes @ 0x12
   419  000013                     	ds	2
   420  000015                     ??_abs:
   421  000015                     pad@p:
   422                           	callstack 0
   423                           
   424                           ; 2 bytes @ 0x14
   425  000015                     	ds	2
   426  000017                     ??_pad:
   427                           
   428                           ; 1 bytes @ 0x16
   429  000017                     	ds	1
   430  000018                     pad@i:
   431                           	callstack 0
   432                           
   433                           ; 2 bytes @ 0x17
   434  000018                     	ds	2
   435  00001A                     pad@w:
   436                           	callstack 0
   437                           
   438                           ; 2 bytes @ 0x19
   439  00001A                     	ds	2
   440  00001C                     ?_dtoa:
   441                           	callstack 0
   442  00001C                     dtoa@fp:
   443                           	callstack 0
   444                           
   445                           ; 2 bytes @ 0x1B
   446  00001C                     	ds	2
   447  00001E                     dtoa@d:
   448                           	callstack 0
   449                           
   450                           ; 8 bytes @ 0x1D
   451  00001E                     	ds	8
   452  000026                     ??_dtoa:
   453                           
   454                           ; 1 bytes @ 0x25
   455  000026                     	ds	8
   456  00002E                     _dtoa$1859:
   457                           	callstack 0
   458                           
   459                           ; 2 bytes @ 0x2D
   460  00002E                     	ds	2
   461  000030                     dtoa@p:
   462                           	callstack 0
   463                           
   464                           ; 2 bytes @ 0x2F
   465  000030                     	ds	2
   466  000032                     dtoa@w:
   467                           	callstack 0
   468                           
   469                           ; 2 bytes @ 0x31
   470  000032                     	ds	2
   471  000034                     dtoa@s:
   472                           	callstack 0
   473                           
   474                           ; 2 bytes @ 0x33
   475  000034                     	ds	2
   476  000036                     dtoa@n:
   477                           	callstack 0
   478                           
   479                           ; 8 bytes @ 0x35
   480  000036                     	ds	8
   481  00003E                     dtoa@i:
   482                           	callstack 0
   483                           
   484                           ; 2 bytes @ 0x3D
   485  00003E                     	ds	2
   486  000040                     ?_vfpfcnvrt:
   487                           	callstack 0
   488  000040                     vfpfcnvrt@fp:
   489                           	callstack 0
   490                           
   491                           ; 2 bytes @ 0x3F
   492  000040                     	ds	2
   493  000042                     vfpfcnvrt@fmt:
   494                           	callstack 0
   495                           
   496                           ; 2 bytes @ 0x41
   497  000042                     	ds	2
   498  000044                     vfpfcnvrt@ap:
   499                           	callstack 0
   500                           
   501                           ; 2 bytes @ 0x43
   502  000044                     	ds	2
   503  000046                     ??_vfpfcnvrt:
   504                           
   505                           ; 1 bytes @ 0x45
   506  000046                     	ds	2
   507  000048                     vfpfcnvrt@ll:
   508                           	callstack 0
   509                           
   510                           ; 8 bytes @ 0x47
   511  000048                     	ds	8
   512  000050                     ?_vfprintf:
   513                           	callstack 0
   514  000050                     vfprintf@fp:
   515                           	callstack 0
   516                           
   517                           ; 2 bytes @ 0x4F
   518  000050                     	ds	2
   519  000052                     vfprintf@fmt:
   520                           	callstack 0
   521                           
   522                           ; 2 bytes @ 0x51
   523  000052                     	ds	2
   524  000054                     vfprintf@ap:
   525                           	callstack 0
   526                           
   527                           ; 2 bytes @ 0x53
   528  000054                     	ds	2
   529  000056                     vfprintf@cfmt:
   530                           	callstack 0
   531                           
   532                           ; 2 bytes @ 0x55
   533  000056                     	ds	2
   534  000058                     color_display@m:
   535                           	callstack 0
   536                           
   537                           ; 2 bytes @ 0x57
   538  000058                     	ds	2
   539  00005A                     ??_color_display:
   540                           
   541                           ; 1 bytes @ 0x59
   542  00005A                     	ds	4
   543  00005E                     ??_main:
   544                           
   545                           ; 1 bytes @ 0x5D
   546  00005E                     	ds	2
   547                           
   548 ;;
   549 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   550 ;;
   551 ;; *************** function _main *****************
   552 ;; Defined at:
   553 ;;		line 25 in file "main.c"
   554 ;; Parameters:    Size  Location     Type
   555 ;;		None
   556 ;; Auto vars:     Size  Location     Type
   557 ;;  motorR          9  118[BANK0 ] struct DC_motor
   558 ;;  motorL          9  109[BANK0 ] struct DC_motor
   559 ;;  rgb             4  105[BANK0 ] struct color_rgb
   560 ;; Return value:  Size  Location     Type
   561 ;;                  1    wreg      void 
   562 ;; Registers used:
   563 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   564 ;; Tracked objects:
   565 ;;		On entry : 0/0
   566 ;;		On exit  : 0/0
   567 ;;		Unchanged: 0/0
   568 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   569 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   570 ;;      Locals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   571 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   572 ;;      Totals:         2      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   573 ;;Total ram usage:       24 bytes
   574 ;; Hardware stack levels required when called: 9
   575 ;; This function calls:
   576 ;;		_I2C_2_Master_Init
   577 ;;		_color_click_init
   578 ;;		_color_display
   579 ;;		_detect_color
   580 ;;		_initDCmotorsPWM
   581 ;;		_initUSART4
   582 ;; This function is called by:
   583 ;;		Startup code after reset
   584 ;; This function uses a non-reentrant model
   585 ;;
   586                           
   587                           	psect	text0
   588  001726                     __ptext0:
   589                           	callstack 0
   590  001726                     _main:
   591                           	callstack 22
   592  001726                     
   593                           ;main.c: 26:     I2C_2_Master_Init();
   594  001726  EC3F  F00E         	call	_I2C_2_Master_Init	;wreg free
   595  00172A                     
   596                           ;main.c: 27:     color_click_init();
   597  00172A  EC0D  F00E         	call	_color_click_init	;wreg free
   598  00172E                     
   599                           ;main.c: 28:     initDCmotorsPWM(199);
   600  00172E  0E00               	movlw	0
   601  001730  6E02               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
   602  001732  0EC7               	movlw	199
   603  001734  6E01               	movwf	initDCmotorsPWM@PWMperiod^0,c
   604  001736  EC90  F00D         	call	_initDCmotorsPWM	;wreg free
   605  00173A                     
   606                           ;main.c: 29:     initUSART4();
   607  00173A  EC8B  F00E         	call	_initUSART4	;wreg free
   608  00173E                     
   609                           ;main.c: 31:     struct DC_motor motorL, motorR;;main.c: 32:     struct color_rgb rgb;;m
      +                          ain.c: 35:     motorL.power = 0;
   610  00173E  0E00               	movlw	0
   611  001740  0100               	movlb	0	; () banked
   612  001742  6FCD               	movwf	main@motorL& (0+255),b
   613  001744                     
   614                           ; BSR set to: 0
   615                           ;main.c: 36:     motorL.direction = 1;
   616  001744  0E01               	movlw	1
   617  001746  6FCE               	movwf	(main@motorL+1)& (0+255),b
   618  001748                     
   619                           ; BSR set to: 0
   620                           ;main.c: 37:     motorL.dutyHighByte = (unsigned char *)(&PWM6DCH);
   621  001748  0EA3               	movlw	163
   622  00174A  6FCF               	movwf	(main@motorL+2)& (0+255),b
   623  00174C  0E0F               	movlw	15
   624  00174E  6FD0               	movwf	(main@motorL+3)& (0+255),b
   625  001750                     
   626                           ; BSR set to: 0
   627                           ;main.c: 38:     motorL.dir_LAT = (unsigned char *)(&LATE);
   628  001750  0E7D               	movlw	125
   629  001752  6FD1               	movwf	(main@motorL+4)& (0+255),b
   630  001754  0E0F               	movlw	15
   631  001756  6FD2               	movwf	(main@motorL+5)& (0+255),b
   632  001758                     
   633                           ; BSR set to: 0
   634                           ;main.c: 39:     motorL.dir_pin = 4;
   635  001758  0E04               	movlw	4
   636  00175A  6FD3               	movwf	(main@motorL+6)& (0+255),b
   637  00175C                     
   638                           ; BSR set to: 0
   639                           ;main.c: 40:     motorL.PWMperiod = 199;
   640  00175C  0E00               	movlw	0
   641  00175E  6FD5               	movwf	(main@motorL+8)& (0+255),b
   642  001760  0EC7               	movlw	199
   643  001762  6FD4               	movwf	(main@motorL+7)& (0+255),b
   644  001764                     
   645                           ; BSR set to: 0
   646                           ;main.c: 43:     motorR.power = 0;
   647  001764  0E00               	movlw	0
   648  001766  6FD6               	movwf	main@motorR& (0+255),b
   649  001768                     
   650                           ; BSR set to: 0
   651                           ;main.c: 44:     motorR.direction = 1;
   652  001768  0E01               	movlw	1
   653  00176A  6FD7               	movwf	(main@motorR+1)& (0+255),b
   654  00176C                     
   655                           ; BSR set to: 0
   656                           ;main.c: 45:     motorR.dutyHighByte = (unsigned char *)(&PWM7DCH);
   657  00176C  0EA0               	movlw	160
   658  00176E  6FD8               	movwf	(main@motorR+2)& (0+255),b
   659  001770  0E0F               	movlw	15
   660  001772  6FD9               	movwf	(main@motorR+3)& (0+255),b
   661  001774                     
   662                           ; BSR set to: 0
   663                           ;main.c: 46:     motorR.dir_LAT = (unsigned char *)(&LATG);
   664  001774  0E7F               	movlw	127
   665  001776  6FDA               	movwf	(main@motorR+4)& (0+255),b
   666  001778  0E0F               	movlw	15
   667  00177A  6FDB               	movwf	(main@motorR+5)& (0+255),b
   668  00177C                     
   669                           ; BSR set to: 0
   670                           ;main.c: 47:     motorR.dir_pin = 6;
   671  00177C  0E06               	movlw	6
   672  00177E  6FDC               	movwf	(main@motorR+6)& (0+255),b
   673  001780                     
   674                           ; BSR set to: 0
   675                           ;main.c: 48:     motorR.PWMperiod = 199;
   676  001780  0E00               	movlw	0
   677  001782  6FDE               	movwf	(main@motorR+8)& (0+255),b
   678  001784  0EC7               	movlw	199
   679  001786  6FDD               	movwf	(main@motorR+7)& (0+255),b
   680  001788                     
   681                           ; BSR set to: 0
   682                           ;main.c: 50:     TRISGbits.TRISG1 = 0;
   683  001788  9287               	bcf	135,1,c	;volatile
   684  00178A                     
   685                           ; BSR set to: 0
   686                           ;main.c: 51:     TRISFbits.TRISF7 = 0;
   687  00178A  9E86               	bcf	134,7,c	;volatile
   688  00178C                     
   689                           ; BSR set to: 0
   690                           ;main.c: 52:     TRISAbits.TRISA4 = 0;
   691  00178C  9881               	bcf	129,4,c	;volatile
   692  00178E                     
   693                           ; BSR set to: 0
   694                           ;main.c: 53:     LATGbits.LATG1 = 1;
   695  00178E  827F               	bsf	127,1,c	;volatile
   696  001790                     
   697                           ; BSR set to: 0
   698                           ;main.c: 54:     LATFbits.LATF7 = 1;
   699  001790  8E7E               	bsf	126,7,c	;volatile
   700  001792                     
   701                           ; BSR set to: 0
   702                           ;main.c: 55:     LATAbits.LATA4 = 1;
   703  001792  8879               	bsf	121,4,c	;volatile
   704  001794                     l2160:
   705                           
   706                           ;main.c: 58:         detect_color(&rgb);
   707  001794  0EC9               	movlw	low main@rgb
   708  001796  6E0E               	movwf	detect_color@m^0,c
   709  001798  0E00               	movlw	high main@rgb
   710  00179A  6E0F               	movwf	(detect_color@m+1)^0,c
   711  00179C  EC53  F00C         	call	_detect_color	;wreg free
   712  0017A0                     
   713                           ;main.c: 59:         color_display(&rgb);
   714  0017A0  0EC9               	movlw	low main@rgb
   715  0017A2  6E58               	movwf	color_display@m^0,c
   716  0017A4  0E00               	movlw	high main@rgb
   717  0017A6  6E59               	movwf	(color_display@m+1)^0,c
   718  0017A8  ECE6  F00B         	call	_color_display	;wreg free
   719  0017AC                     
   720                           ;main.c: 60:         _delay((unsigned long)((1000)*(64000000/4000.0)));
   721  0017AC  0E52               	movlw	82
   722  0017AE  6E5F               	movwf	(??_main+1)^0,c
   723  0017B0  0E2B               	movlw	43
   724  0017B2  6E5E               	movwf	??_main^0,c
   725  0017B4  0E00               	movlw	0
   726  0017B6                     u1247:
   727  0017B6  2EE8               	decfsz	wreg,f,c
   728  0017B8  D7FE               	bra	u1247
   729  0017BA  2E5E               	decfsz	??_main^0,f,c
   730  0017BC  D7FC               	bra	u1247
   731  0017BE  2E5F               	decfsz	(??_main+1)^0,f,c
   732  0017C0  D7FA               	bra	u1247
   733  0017C2  D000               	nop2	
   734  0017C4  EFCA  F00B         	goto	l2160
   735  0017C8  EF00  F000         	goto	start
   736  0017CC                     __end_of_main:
   737                           	callstack 0
   738                           
   739 ;; *************** function _initUSART4 *****************
   740 ;; Defined at:
   741 ;;		line 4 in file "serial.c"
   742 ;; Parameters:    Size  Location     Type
   743 ;;		None
   744 ;; Auto vars:     Size  Location     Type
   745 ;;		None
   746 ;; Return value:  Size  Location     Type
   747 ;;                  1    wreg      void 
   748 ;; Registers used:
   749 ;;		wreg, status,2
   750 ;; Tracked objects:
   751 ;;		On entry : 0/0
   752 ;;		On exit  : 0/0
   753 ;;		Unchanged: 0/0
   754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   755 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   756 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   757 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   758 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   759 ;;Total ram usage:        0 bytes
   760 ;; Hardware stack levels used: 1
   761 ;; This function calls:
   762 ;;		Nothing
   763 ;; This function is called by:
   764 ;;		_main
   765 ;; This function uses a non-reentrant model
   766 ;;
   767                           
   768                           	psect	text1
   769  001D16                     __ptext1:
   770                           	callstack 0
   771  001D16                     _initUSART4:
   772                           	callstack 30
   773  001D16                     
   774                           ;serial.c: 8:     RC0PPS = 0x12;
   775  001D16  0E12               	movlw	18
   776  001D18  010E               	movlb	14	; () banked
   777  001D1A  6F62               	movwf	98,b	;volatile
   778                           
   779                           ;serial.c: 9:     RX4PPS = 0x11;
   780  001D1C  0E11               	movlw	17
   781  001D1E  6F15               	movwf	21,b	;volatile
   782  001D20                     
   783                           ; BSR set to: 14
   784                           ;serial.c: 11:     BAUD4CONbits.BRG16 = 0;
   785  001D20  97E9               	bcf	233,3,b	;volatile
   786  001D22                     
   787                           ; BSR set to: 14
   788                           ;serial.c: 12:     TX4STAbits.BRGH = 0;
   789  001D22  95E8               	bcf	232,2,b	;volatile
   790                           
   791                           ;serial.c: 13:     SP4BRGL = 51;
   792  001D24  0E33               	movlw	51
   793  001D26  6FE5               	movwf	229,b	;volatile
   794                           
   795                           ;serial.c: 15:     SP4BRGH = 0;
   796  001D28  0E00               	movlw	0
   797  001D2A  6FE6               	movwf	230,b	;volatile
   798  001D2C                     
   799                           ; BSR set to: 14
   800                           ;serial.c: 17:     RC4STAbits.CREN = 1;
   801  001D2C  89E7               	bsf	231,4,b	;volatile
   802  001D2E                     
   803                           ; BSR set to: 14
   804                           ;serial.c: 18:     TX4STAbits.TXEN = 1;
   805  001D2E  8BE8               	bsf	232,5,b	;volatile
   806  001D30                     
   807                           ; BSR set to: 14
   808                           ;serial.c: 19:     RC4STAbits.SPEN = 1;
   809  001D30  8FE7               	bsf	231,7,b	;volatile
   810  001D32                     
   811                           ; BSR set to: 14
   812  001D32  0012               	return		;funcret
   813  001D34                     __end_of_initUSART4:
   814                           	callstack 0
   815                           
   816 ;; *************** function _initDCmotorsPWM *****************
   817 ;; Defined at:
   818 ;;		line 5 in file "dc_motor.c"
   819 ;; Parameters:    Size  Location     Type
   820 ;;  PWMperiod       2    0[COMRAM] int 
   821 ;; Auto vars:     Size  Location     Type
   822 ;;		None
   823 ;; Return value:  Size  Location     Type
   824 ;;                  1    wreg      void 
   825 ;; Registers used:
   826 ;;		wreg, status,2
   827 ;; Tracked objects:
   828 ;;		On entry : 0/0
   829 ;;		On exit  : 0/0
   830 ;;		Unchanged: 0/0
   831 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   832 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   833 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   834 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   835 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   836 ;;Total ram usage:        2 bytes
   837 ;; Hardware stack levels used: 1
   838 ;; This function calls:
   839 ;;		Nothing
   840 ;; This function is called by:
   841 ;;		_main
   842 ;; This function uses a non-reentrant model
   843 ;;
   844                           
   845                           	psect	text2
   846  001B20                     __ptext2:
   847                           	callstack 0
   848  001B20                     _initDCmotorsPWM:
   849                           	callstack 30
   850  001B20                     
   851                           ;dc_motor.c: 8:     TRISEbits.TRISE2=0;
   852  001B20  9485               	bcf	133,2,c	;volatile
   853                           
   854                           ;dc_motor.c: 9:     TRISCbits.TRISC7=0;
   855  001B22  9E83               	bcf	131,7,c	;volatile
   856                           
   857                           ;dc_motor.c: 10:     TRISGbits.TRISG6=0;
   858  001B24  9C87               	bcf	135,6,c	;volatile
   859                           
   860                           ;dc_motor.c: 11:     TRISEbits.TRISE4=0;
   861  001B26  9885               	bcf	133,4,c	;volatile
   862                           
   863                           ;dc_motor.c: 12:     LATEbits.LATE2=0;
   864  001B28  947D               	bcf	125,2,c	;volatile
   865                           
   866                           ;dc_motor.c: 13:     LATCbits.LATC7=0;
   867  001B2A  9E7B               	bcf	123,7,c	;volatile
   868                           
   869                           ;dc_motor.c: 14:     LATGbits.LATG6=0;
   870  001B2C  9C7F               	bcf	127,6,c	;volatile
   871                           
   872                           ;dc_motor.c: 15:     LATEbits.LATE4=0;
   873  001B2E  987D               	bcf	125,4,c	;volatile
   874  001B30                     
   875                           ;dc_motor.c: 18:     T2CONbits.CKPS=0b011;
   876  001B30  50BD               	movf	189,w,c	;volatile
   877  001B32  0B8F               	andlw	-113
   878  001B34  0930               	iorlw	48
   879  001B36  6EBD               	movwf	189,c	;volatile
   880                           
   881                           ;dc_motor.c: 19:     T2HLTbits.MODE=0b00000;
   882  001B38  0EE0               	movlw	-32
   883  001B3A  16BE               	andwf	190,f,c	;volatile
   884                           
   885                           ;dc_motor.c: 20:     T2CLKCONbits.CS=0b0001;
   886  001B3C  50BF               	movf	191,w,c	;volatile
   887  001B3E  0BF0               	andlw	-16
   888  001B40  0901               	iorlw	1
   889  001B42  6EBF               	movwf	191,c	;volatile
   890                           
   891                           ;dc_motor.c: 23:     T2PR=200-1;
   892  001B44  0EC7               	movlw	199
   893  001B46  6EBC               	movwf	188,c	;volatile
   894  001B48                     
   895                           ;dc_motor.c: 24:     T2CONbits.ON=1;
   896  001B48  8EBD               	bsf	189,7,c	;volatile
   897                           
   898                           ;dc_motor.c: 26:     RE2PPS=0x0A;
   899  001B4A  0E0A               	movlw	10
   900  001B4C  010E               	movlb	14	; () banked
   901  001B4E  6F74               	movwf	116,b	;volatile
   902                           
   903                           ;dc_motor.c: 27:     RC7PPS=0x0B;
   904  001B50  0E0B               	movlw	11
   905  001B52  6F69               	movwf	105,b	;volatile
   906                           
   907                           ;dc_motor.c: 29:     PWM6DCH=0;
   908  001B54  0E00               	movlw	0
   909  001B56  6EA3               	movwf	163,c	;volatile
   910                           
   911                           ;dc_motor.c: 30:     PWM7DCH=0;
   912  001B58  0E00               	movlw	0
   913  001B5A  6EA0               	movwf	160,c	;volatile
   914  001B5C                     
   915                           ; BSR set to: 14
   916                           ;dc_motor.c: 32:     PWM6CONbits.EN = 1;
   917  001B5C  8EA4               	bsf	164,7,c	;volatile
   918  001B5E                     
   919                           ; BSR set to: 14
   920                           ;dc_motor.c: 33:     PWM7CONbits.EN = 1;
   921  001B5E  8EA1               	bsf	161,7,c	;volatile
   922  001B60                     
   923                           ; BSR set to: 14
   924  001B60  0012               	return		;funcret
   925  001B62                     __end_of_initDCmotorsPWM:
   926                           	callstack 0
   927                           
   928 ;; *************** function _detect_color *****************
   929 ;; Defined at:
   930 ;;		line 97 in file "color.c"
   931 ;; Parameters:    Size  Location     Type
   932 ;;  m               2   13[COMRAM] PTR struct color_rgb
   933 ;;		 -> main@rgb(4), 
   934 ;; Auto vars:     Size  Location     Type
   935 ;;		None
   936 ;; Return value:  Size  Location     Type
   937 ;;                  1    wreg      void 
   938 ;; Registers used:
   939 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   940 ;; Tracked objects:
   941 ;;		On entry : 0/0
   942 ;;		On exit  : 0/0
   943 ;;		Unchanged: 0/0
   944 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   945 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   946 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   947 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   948 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   949 ;;Total ram usage:        4 bytes
   950 ;; Hardware stack levels used: 1
   951 ;; Hardware stack levels required when called: 4
   952 ;; This function calls:
   953 ;;		_get_color
   954 ;; This function is called by:
   955 ;;		_main
   956 ;; This function uses a non-reentrant model
   957 ;;
   958                           
   959                           	psect	text3
   960  0018A6                     __ptext3:
   961                           	callstack 0
   962  0018A6                     _detect_color:
   963                           	callstack 26
   964  0018A6                     
   965                           ;color.c: 97: void detect_color(struct color_rgb *m);color.c: 98: {;color.c: 99:     LAT
      +                          Gbits.LATG1 = 1;
   966  0018A6  827F               	bsf	127,1,c	;volatile
   967                           
   968                           ;color.c: 100:     LATFbits.LATF7 = 1;
   969  0018A8  8E7E               	bsf	126,7,c	;volatile
   970                           
   971                           ;color.c: 101:     LATAbits.LATA4 = 1;
   972  0018AA  8879               	bsf	121,4,c	;volatile
   973  0018AC                     
   974                           ;color.c: 102:     _delay((unsigned long)((200)*(64000000/4000.0)));
   975  0018AC  0E11               	movlw	17
   976  0018AE  6E11               	movwf	(??_detect_color+1)^0,c
   977  0018B0  0E3C               	movlw	60
   978  0018B2  6E10               	movwf	??_detect_color^0,c
   979  0018B4  0ECB               	movlw	203
   980  0018B6                     u1257:
   981  0018B6  2EE8               	decfsz	wreg,f,c
   982  0018B8  D7FE               	bra	u1257
   983  0018BA  2E10               	decfsz	??_detect_color^0,f,c
   984  0018BC  D7FC               	bra	u1257
   985  0018BE  2E11               	decfsz	(??_detect_color+1)^0,f,c
   986  0018C0  D7FA               	bra	u1257
   987  0018C2  F000               	nop	
   988  0018C4                     
   989                           ;color.c: 103:     get_color(m);
   990  0018C4  C00E  F00C         	movff	detect_color@m,get_color@m
   991  0018C8  C00F  F00D         	movff	detect_color@m+1,get_color@m+1
   992  0018CC  EC47  F00D         	call	_get_color	;wreg free
   993  0018D0                     
   994                           ;color.c: 105:     LATGbits.LATG1 = 1;
   995  0018D0  827F               	bsf	127,1,c	;volatile
   996  0018D2                     
   997                           ;color.c: 106:     LATFbits.LATF7 = 0;
   998  0018D2  9E7E               	bcf	126,7,c	;volatile
   999  0018D4                     
  1000                           ;color.c: 107:     LATAbits.LATA4 = 0;
  1001  0018D4  9879               	bcf	121,4,c	;volatile
  1002  0018D6                     
  1003                           ;color.c: 108:     _delay((unsigned long)((200)*(64000000/4000.0)));
  1004  0018D6  0E11               	movlw	17
  1005  0018D8  6E11               	movwf	(??_detect_color+1)^0,c
  1006  0018DA  0E3C               	movlw	60
  1007  0018DC  6E10               	movwf	??_detect_color^0,c
  1008  0018DE  0ECB               	movlw	203
  1009  0018E0                     u1267:
  1010  0018E0  2EE8               	decfsz	wreg,f,c
  1011  0018E2  D7FE               	bra	u1267
  1012  0018E4  2E10               	decfsz	??_detect_color^0,f,c
  1013  0018E6  D7FC               	bra	u1267
  1014  0018E8  2E11               	decfsz	(??_detect_color+1)^0,f,c
  1015  0018EA  D7FA               	bra	u1267
  1016  0018EC  F000               	nop	
  1017                           
  1018                           ;color.c: 109:     get_color(m);
  1019  0018EE  C00E  F00C         	movff	detect_color@m,get_color@m
  1020  0018F2  C00F  F00D         	movff	detect_color@m+1,get_color@m+1
  1021  0018F6  EC47  F00D         	call	_get_color	;wreg free
  1022  0018FA  0012               	return		;funcret
  1023  0018FC                     __end_of_detect_color:
  1024                           	callstack 0
  1025                           
  1026 ;; *************** function _get_color *****************
  1027 ;; Defined at:
  1028 ;;		line 88 in file "color.c"
  1029 ;; Parameters:    Size  Location     Type
  1030 ;;  m               2   11[COMRAM] PTR struct color_rgb
  1031 ;;		 -> main@rgb(4), 
  1032 ;; Auto vars:     Size  Location     Type
  1033 ;;		None
  1034 ;; Return value:  Size  Location     Type
  1035 ;;                  1    wreg      void 
  1036 ;; Registers used:
  1037 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1038 ;; Tracked objects:
  1039 ;;		On entry : 0/0
  1040 ;;		On exit  : 0/0
  1041 ;;		Unchanged: 0/0
  1042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1043 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1044 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1045 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1046 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1047 ;;Total ram usage:        2 bytes
  1048 ;; Hardware stack levels used: 1
  1049 ;; Hardware stack levels required when called: 3
  1050 ;; This function calls:
  1051 ;;		_color_read_Blue
  1052 ;;		_color_read_Clear
  1053 ;;		_color_read_Green
  1054 ;;		_color_read_Red
  1055 ;; This function is called by:
  1056 ;;		_detect_color
  1057 ;; This function uses a non-reentrant model
  1058 ;;
  1059                           
  1060                           	psect	text4
  1061  001A8E                     __ptext4:
  1062                           	callstack 0
  1063  001A8E                     _get_color:
  1064                           	callstack 26
  1065  001A8E                     
  1066                           ;color.c: 88: void get_color (struct color_rgb *m);color.c: 89: {;color.c: 90:     m->R 
      +                          = color_read_Red();
  1067  001A8E  ECA7  F00C         	call	_color_read_Red	;wreg free
  1068  001A92  5005               	movf	?_color_read_Red^0,w,c
  1069  001A94  C00C  FFD9         	movff	get_color@m,fsr2l
  1070  001A98  C00D  FFDA         	movff	get_color@m+1,fsr2h
  1071  001A9C  6EDF               	movwf	indf2,c
  1072                           
  1073                           ;color.c: 91:     m->B = color_read_Blue();
  1074  001A9E  EE20 F002          	lfsr	2,2
  1075  001AA2  500C               	movf	get_color@m^0,w,c
  1076  001AA4  26D9               	addwf	fsr2l,f,c
  1077  001AA6  500D               	movf	(get_color@m+1)^0,w,c
  1078  001AA8  22DA               	addwfc	fsr2h,f,c
  1079  001AAA  EC1F  F00D         	call	_color_read_Blue	;wreg free
  1080  001AAE  5005               	movf	?_color_read_Blue^0,w,c
  1081  001AB0  6EDF               	movwf	indf2,c
  1082                           
  1083                           ;color.c: 92:     m->G = color_read_Green();
  1084  001AB2  EE20 F001          	lfsr	2,1
  1085  001AB6  500C               	movf	get_color@m^0,w,c
  1086  001AB8  26D9               	addwf	fsr2l,f,c
  1087  001ABA  500D               	movf	(get_color@m+1)^0,w,c
  1088  001ABC  22DA               	addwfc	fsr2h,f,c
  1089  001ABE  ECCF  F00C         	call	_color_read_Green	;wreg free
  1090  001AC2  5005               	movf	?_color_read_Green^0,w,c
  1091  001AC4  6EDF               	movwf	indf2,c
  1092                           
  1093                           ;color.c: 93:     m->C = color_read_Clear();
  1094  001AC6  EE20 F003          	lfsr	2,3
  1095  001ACA  500C               	movf	get_color@m^0,w,c
  1096  001ACC  26D9               	addwf	fsr2l,f,c
  1097  001ACE  500D               	movf	(get_color@m+1)^0,w,c
  1098  001AD0  22DA               	addwfc	fsr2h,f,c
  1099  001AD2  ECF7  F00C         	call	_color_read_Clear	;wreg free
  1100  001AD6  5005               	movf	?_color_read_Clear^0,w,c
  1101  001AD8  6EDF               	movwf	indf2,c
  1102  001ADA  0012               	return		;funcret
  1103  001ADC                     __end_of_get_color:
  1104                           	callstack 0
  1105                           
  1106 ;; *************** function _color_read_Red *****************
  1107 ;; Defined at:
  1108 ;;		line 32 in file "color.c"
  1109 ;; Parameters:    Size  Location     Type
  1110 ;;		None
  1111 ;; Auto vars:     Size  Location     Type
  1112 ;;  tmp             2    9[COMRAM] unsigned int 
  1113 ;; Return value:  Size  Location     Type
  1114 ;;                  2    4[COMRAM] unsigned int 
  1115 ;; Registers used:
  1116 ;;		wreg, status,2, status,0, cstack
  1117 ;; Tracked objects:
  1118 ;;		On entry : 0/0
  1119 ;;		On exit  : 0/0
  1120 ;;		Unchanged: 0/0
  1121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1122 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1123 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1124 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1125 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1126 ;;Total ram usage:        7 bytes
  1127 ;; Hardware stack levels used: 1
  1128 ;; Hardware stack levels required when called: 2
  1129 ;; This function calls:
  1130 ;;		_I2C_2_Master_Read
  1131 ;;		_I2C_2_Master_RepStart
  1132 ;;		_I2C_2_Master_Start
  1133 ;;		_I2C_2_Master_Stop
  1134 ;;		_I2C_2_Master_Write
  1135 ;; This function is called by:
  1136 ;;		_get_color
  1137 ;; This function uses a non-reentrant model
  1138 ;;
  1139                           
  1140                           	psect	text5
  1141  00194E                     __ptext5:
  1142                           	callstack 0
  1143  00194E                     _color_read_Red:
  1144                           	callstack 26
  1145  00194E                     
  1146                           ;color.c: 34:  unsigned int tmp;;color.c: 35:  I2C_2_Master_Start();
  1147  00194E  ECB6  F00E         	call	_I2C_2_Master_Start	;wreg free
  1148                           
  1149                           ;color.c: 36:  I2C_2_Master_Write(0x52 | 0x00);
  1150  001952  0E52               	movlw	82
  1151  001954  ECA6  F00E         	call	_I2C_2_Master_Write
  1152                           
  1153                           ;color.c: 37:  I2C_2_Master_Write(0xA0 | 0x16);
  1154  001958  0EB6               	movlw	182
  1155  00195A  ECA6  F00E         	call	_I2C_2_Master_Write
  1156                           
  1157                           ;color.c: 38:  I2C_2_Master_RepStart();
  1158  00195E  ECAC  F00E         	call	_I2C_2_Master_RepStart	;wreg free
  1159                           
  1160                           ;color.c: 39:  I2C_2_Master_Write(0x52 | 0x01);
  1161  001962  0E53               	movlw	83
  1162  001964  ECA6  F00E         	call	_I2C_2_Master_Write
  1163                           
  1164                           ;color.c: 40:  tmp=I2C_2_Master_Read(1);
  1165  001968  0E01               	movlw	1
  1166  00196A  ECB1  F00D         	call	_I2C_2_Master_Read
  1167  00196E  6E07               	movwf	??_color_read_Red^0,c
  1168  001970  5007               	movf	??_color_read_Red^0,w,c
  1169  001972  6E0A               	movwf	color_read_Red@tmp^0,c
  1170  001974  6A0B               	clrf	(color_read_Red@tmp+1)^0,c
  1171                           
  1172                           ;color.c: 41:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  1173  001976  0E00               	movlw	0
  1174  001978  ECB1  F00D         	call	_I2C_2_Master_Read
  1175  00197C  6E07               	movwf	??_color_read_Red^0,c
  1176  00197E  5007               	movf	??_color_read_Red^0,w,c
  1177  001980  6E09               	movwf	(??_color_read_Red+2)^0,c
  1178  001982  6A08               	clrf	(??_color_read_Red+1)^0,c
  1179  001984  500A               	movf	color_read_Red@tmp^0,w,c
  1180  001986  1008               	iorwf	(??_color_read_Red+1)^0,w,c
  1181  001988  6E0A               	movwf	color_read_Red@tmp^0,c
  1182  00198A  500B               	movf	(color_read_Red@tmp+1)^0,w,c
  1183  00198C  1009               	iorwf	(??_color_read_Red+2)^0,w,c
  1184  00198E  6E0B               	movwf	(color_read_Red@tmp+1)^0,c
  1185                           
  1186                           ;color.c: 42:  I2C_2_Master_Stop();
  1187  001990  ECB1  F00E         	call	_I2C_2_Master_Stop	;wreg free
  1188  001994                     
  1189                           ;color.c: 43:  return tmp;
  1190  001994  C00A  F005         	movff	color_read_Red@tmp,?_color_read_Red
  1191  001998  C00B  F006         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  1192  00199C  0012               	return		;funcret
  1193  00199E                     __end_of_color_read_Red:
  1194                           	callstack 0
  1195                           
  1196 ;; *************** function _color_read_Green *****************
  1197 ;; Defined at:
  1198 ;;		line 60 in file "color.c"
  1199 ;; Parameters:    Size  Location     Type
  1200 ;;		None
  1201 ;; Auto vars:     Size  Location     Type
  1202 ;;  tmp             2    9[COMRAM] unsigned int 
  1203 ;; Return value:  Size  Location     Type
  1204 ;;                  2    4[COMRAM] unsigned int 
  1205 ;; Registers used:
  1206 ;;		wreg, status,2, status,0, cstack
  1207 ;; Tracked objects:
  1208 ;;		On entry : 0/0
  1209 ;;		On exit  : 0/0
  1210 ;;		Unchanged: 0/0
  1211 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1212 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1213 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1214 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1215 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1216 ;;Total ram usage:        7 bytes
  1217 ;; Hardware stack levels used: 1
  1218 ;; Hardware stack levels required when called: 2
  1219 ;; This function calls:
  1220 ;;		_I2C_2_Master_Read
  1221 ;;		_I2C_2_Master_RepStart
  1222 ;;		_I2C_2_Master_Start
  1223 ;;		_I2C_2_Master_Stop
  1224 ;;		_I2C_2_Master_Write
  1225 ;; This function is called by:
  1226 ;;		_get_color
  1227 ;; This function uses a non-reentrant model
  1228 ;;
  1229                           
  1230                           	psect	text6
  1231  00199E                     __ptext6:
  1232                           	callstack 0
  1233  00199E                     _color_read_Green:
  1234                           	callstack 26
  1235  00199E                     
  1236                           ;color.c: 62:  unsigned int tmp;;color.c: 63:  I2C_2_Master_Start();
  1237  00199E  ECB6  F00E         	call	_I2C_2_Master_Start	;wreg free
  1238                           
  1239                           ;color.c: 64:  I2C_2_Master_Write(0x52 | 0x00);
  1240  0019A2  0E52               	movlw	82
  1241  0019A4  ECA6  F00E         	call	_I2C_2_Master_Write
  1242                           
  1243                           ;color.c: 65:  I2C_2_Master_Write(0xA0 | 0x18);
  1244  0019A8  0EB8               	movlw	184
  1245  0019AA  ECA6  F00E         	call	_I2C_2_Master_Write
  1246                           
  1247                           ;color.c: 66:  I2C_2_Master_RepStart();
  1248  0019AE  ECAC  F00E         	call	_I2C_2_Master_RepStart	;wreg free
  1249                           
  1250                           ;color.c: 67:  I2C_2_Master_Write(0x52 | 0x01);
  1251  0019B2  0E53               	movlw	83
  1252  0019B4  ECA6  F00E         	call	_I2C_2_Master_Write
  1253                           
  1254                           ;color.c: 68:  tmp=I2C_2_Master_Read(1);
  1255  0019B8  0E01               	movlw	1
  1256  0019BA  ECB1  F00D         	call	_I2C_2_Master_Read
  1257  0019BE  6E07               	movwf	??_color_read_Green^0,c
  1258  0019C0  5007               	movf	??_color_read_Green^0,w,c
  1259  0019C2  6E0A               	movwf	color_read_Green@tmp^0,c
  1260  0019C4  6A0B               	clrf	(color_read_Green@tmp+1)^0,c
  1261                           
  1262                           ;color.c: 69:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  1263  0019C6  0E00               	movlw	0
  1264  0019C8  ECB1  F00D         	call	_I2C_2_Master_Read
  1265  0019CC  6E07               	movwf	??_color_read_Green^0,c
  1266  0019CE  5007               	movf	??_color_read_Green^0,w,c
  1267  0019D0  6E09               	movwf	(??_color_read_Green+2)^0,c
  1268  0019D2  6A08               	clrf	(??_color_read_Green+1)^0,c
  1269  0019D4  500A               	movf	color_read_Green@tmp^0,w,c
  1270  0019D6  1008               	iorwf	(??_color_read_Green+1)^0,w,c
  1271  0019D8  6E0A               	movwf	color_read_Green@tmp^0,c
  1272  0019DA  500B               	movf	(color_read_Green@tmp+1)^0,w,c
  1273  0019DC  1009               	iorwf	(??_color_read_Green+2)^0,w,c
  1274  0019DE  6E0B               	movwf	(color_read_Green@tmp+1)^0,c
  1275                           
  1276                           ;color.c: 70:  I2C_2_Master_Stop();
  1277  0019E0  ECB1  F00E         	call	_I2C_2_Master_Stop	;wreg free
  1278  0019E4                     
  1279                           ;color.c: 71:  return tmp;
  1280  0019E4  C00A  F005         	movff	color_read_Green@tmp,?_color_read_Green
  1281  0019E8  C00B  F006         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  1282  0019EC  0012               	return		;funcret
  1283  0019EE                     __end_of_color_read_Green:
  1284                           	callstack 0
  1285                           
  1286 ;; *************** function _color_read_Clear *****************
  1287 ;; Defined at:
  1288 ;;		line 74 in file "color.c"
  1289 ;; Parameters:    Size  Location     Type
  1290 ;;		None
  1291 ;; Auto vars:     Size  Location     Type
  1292 ;;  tmp             2    9[COMRAM] unsigned int 
  1293 ;; Return value:  Size  Location     Type
  1294 ;;                  2    4[COMRAM] unsigned int 
  1295 ;; Registers used:
  1296 ;;		wreg, status,2, status,0, cstack
  1297 ;; Tracked objects:
  1298 ;;		On entry : 0/0
  1299 ;;		On exit  : 0/0
  1300 ;;		Unchanged: 0/0
  1301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1302 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1303 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1304 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1305 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1306 ;;Total ram usage:        7 bytes
  1307 ;; Hardware stack levels used: 1
  1308 ;; Hardware stack levels required when called: 2
  1309 ;; This function calls:
  1310 ;;		_I2C_2_Master_Read
  1311 ;;		_I2C_2_Master_RepStart
  1312 ;;		_I2C_2_Master_Start
  1313 ;;		_I2C_2_Master_Stop
  1314 ;;		_I2C_2_Master_Write
  1315 ;; This function is called by:
  1316 ;;		_get_color
  1317 ;; This function uses a non-reentrant model
  1318 ;;
  1319                           
  1320                           	psect	text7
  1321  0019EE                     __ptext7:
  1322                           	callstack 0
  1323  0019EE                     _color_read_Clear:
  1324                           	callstack 26
  1325  0019EE                     
  1326                           ;color.c: 76:  unsigned int tmp;;color.c: 77:  I2C_2_Master_Start();
  1327  0019EE  ECB6  F00E         	call	_I2C_2_Master_Start	;wreg free
  1328                           
  1329                           ;color.c: 78:  I2C_2_Master_Write(0x52 | 0x00);
  1330  0019F2  0E52               	movlw	82
  1331  0019F4  ECA6  F00E         	call	_I2C_2_Master_Write
  1332                           
  1333                           ;color.c: 79:  I2C_2_Master_Write(0xA0 | 0x14);
  1334  0019F8  0EB4               	movlw	180
  1335  0019FA  ECA6  F00E         	call	_I2C_2_Master_Write
  1336                           
  1337                           ;color.c: 80:  I2C_2_Master_RepStart();
  1338  0019FE  ECAC  F00E         	call	_I2C_2_Master_RepStart	;wreg free
  1339                           
  1340                           ;color.c: 81:  I2C_2_Master_Write(0x52 | 0x01);
  1341  001A02  0E53               	movlw	83
  1342  001A04  ECA6  F00E         	call	_I2C_2_Master_Write
  1343                           
  1344                           ;color.c: 82:  tmp=I2C_2_Master_Read(1);
  1345  001A08  0E01               	movlw	1
  1346  001A0A  ECB1  F00D         	call	_I2C_2_Master_Read
  1347  001A0E  6E07               	movwf	??_color_read_Clear^0,c
  1348  001A10  5007               	movf	??_color_read_Clear^0,w,c
  1349  001A12  6E0A               	movwf	color_read_Clear@tmp^0,c
  1350  001A14  6A0B               	clrf	(color_read_Clear@tmp+1)^0,c
  1351                           
  1352                           ;color.c: 83:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  1353  001A16  0E00               	movlw	0
  1354  001A18  ECB1  F00D         	call	_I2C_2_Master_Read
  1355  001A1C  6E07               	movwf	??_color_read_Clear^0,c
  1356  001A1E  5007               	movf	??_color_read_Clear^0,w,c
  1357  001A20  6E09               	movwf	(??_color_read_Clear+2)^0,c
  1358  001A22  6A08               	clrf	(??_color_read_Clear+1)^0,c
  1359  001A24  500A               	movf	color_read_Clear@tmp^0,w,c
  1360  001A26  1008               	iorwf	(??_color_read_Clear+1)^0,w,c
  1361  001A28  6E0A               	movwf	color_read_Clear@tmp^0,c
  1362  001A2A  500B               	movf	(color_read_Clear@tmp+1)^0,w,c
  1363  001A2C  1009               	iorwf	(??_color_read_Clear+2)^0,w,c
  1364  001A2E  6E0B               	movwf	(color_read_Clear@tmp+1)^0,c
  1365                           
  1366                           ;color.c: 84:  I2C_2_Master_Stop();
  1367  001A30  ECB1  F00E         	call	_I2C_2_Master_Stop	;wreg free
  1368  001A34                     
  1369                           ;color.c: 85:  return tmp;
  1370  001A34  C00A  F005         	movff	color_read_Clear@tmp,?_color_read_Clear
  1371  001A38  C00B  F006         	movff	color_read_Clear@tmp+1,?_color_read_Clear+1
  1372  001A3C  0012               	return		;funcret
  1373  001A3E                     __end_of_color_read_Clear:
  1374                           	callstack 0
  1375                           
  1376 ;; *************** function _color_read_Blue *****************
  1377 ;; Defined at:
  1378 ;;		line 46 in file "color.c"
  1379 ;; Parameters:    Size  Location     Type
  1380 ;;		None
  1381 ;; Auto vars:     Size  Location     Type
  1382 ;;  tmp             2    9[COMRAM] unsigned int 
  1383 ;; Return value:  Size  Location     Type
  1384 ;;                  2    4[COMRAM] unsigned int 
  1385 ;; Registers used:
  1386 ;;		wreg, status,2, status,0, cstack
  1387 ;; Tracked objects:
  1388 ;;		On entry : 0/0
  1389 ;;		On exit  : 0/0
  1390 ;;		Unchanged: 0/0
  1391 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1392 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1393 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1394 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1395 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1396 ;;Total ram usage:        7 bytes
  1397 ;; Hardware stack levels used: 1
  1398 ;; Hardware stack levels required when called: 2
  1399 ;; This function calls:
  1400 ;;		_I2C_2_Master_Read
  1401 ;;		_I2C_2_Master_RepStart
  1402 ;;		_I2C_2_Master_Start
  1403 ;;		_I2C_2_Master_Stop
  1404 ;;		_I2C_2_Master_Write
  1405 ;; This function is called by:
  1406 ;;		_get_color
  1407 ;; This function uses a non-reentrant model
  1408 ;;
  1409                           
  1410                           	psect	text8
  1411  001A3E                     __ptext8:
  1412                           	callstack 0
  1413  001A3E                     _color_read_Blue:
  1414                           	callstack 26
  1415  001A3E                     
  1416                           ;color.c: 48:  unsigned int tmp;;color.c: 49:  I2C_2_Master_Start();
  1417  001A3E  ECB6  F00E         	call	_I2C_2_Master_Start	;wreg free
  1418                           
  1419                           ;color.c: 50:  I2C_2_Master_Write(0x52 | 0x00);
  1420  001A42  0E52               	movlw	82
  1421  001A44  ECA6  F00E         	call	_I2C_2_Master_Write
  1422                           
  1423                           ;color.c: 51:  I2C_2_Master_Write(0xA0 | 0x1A);
  1424  001A48  0EBA               	movlw	186
  1425  001A4A  ECA6  F00E         	call	_I2C_2_Master_Write
  1426                           
  1427                           ;color.c: 52:  I2C_2_Master_RepStart();
  1428  001A4E  ECAC  F00E         	call	_I2C_2_Master_RepStart	;wreg free
  1429                           
  1430                           ;color.c: 53:  I2C_2_Master_Write(0x52 | 0x01);
  1431  001A52  0E53               	movlw	83
  1432  001A54  ECA6  F00E         	call	_I2C_2_Master_Write
  1433                           
  1434                           ;color.c: 54:  tmp=I2C_2_Master_Read(1);
  1435  001A58  0E01               	movlw	1
  1436  001A5A  ECB1  F00D         	call	_I2C_2_Master_Read
  1437  001A5E  6E07               	movwf	??_color_read_Blue^0,c
  1438  001A60  5007               	movf	??_color_read_Blue^0,w,c
  1439  001A62  6E0A               	movwf	color_read_Blue@tmp^0,c
  1440  001A64  6A0B               	clrf	(color_read_Blue@tmp+1)^0,c
  1441                           
  1442                           ;color.c: 55:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  1443  001A66  0E00               	movlw	0
  1444  001A68  ECB1  F00D         	call	_I2C_2_Master_Read
  1445  001A6C  6E07               	movwf	??_color_read_Blue^0,c
  1446  001A6E  5007               	movf	??_color_read_Blue^0,w,c
  1447  001A70  6E09               	movwf	(??_color_read_Blue+2)^0,c
  1448  001A72  6A08               	clrf	(??_color_read_Blue+1)^0,c
  1449  001A74  500A               	movf	color_read_Blue@tmp^0,w,c
  1450  001A76  1008               	iorwf	(??_color_read_Blue+1)^0,w,c
  1451  001A78  6E0A               	movwf	color_read_Blue@tmp^0,c
  1452  001A7A  500B               	movf	(color_read_Blue@tmp+1)^0,w,c
  1453  001A7C  1009               	iorwf	(??_color_read_Blue+2)^0,w,c
  1454  001A7E  6E0B               	movwf	(color_read_Blue@tmp+1)^0,c
  1455                           
  1456                           ;color.c: 56:  I2C_2_Master_Stop();
  1457  001A80  ECB1  F00E         	call	_I2C_2_Master_Stop	;wreg free
  1458  001A84                     
  1459                           ;color.c: 57:  return tmp;
  1460  001A84  C00A  F005         	movff	color_read_Blue@tmp,?_color_read_Blue
  1461  001A88  C00B  F006         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  1462  001A8C  0012               	return		;funcret
  1463  001A8E                     __end_of_color_read_Blue:
  1464                           	callstack 0
  1465                           
  1466 ;; *************** function _I2C_2_Master_RepStart *****************
  1467 ;; Defined at:
  1468 ;;		line 33 in file "i2c.c"
  1469 ;; Parameters:    Size  Location     Type
  1470 ;;		None
  1471 ;; Auto vars:     Size  Location     Type
  1472 ;;		None
  1473 ;; Return value:  Size  Location     Type
  1474 ;;                  1    wreg      void 
  1475 ;; Registers used:
  1476 ;;		wreg, status,2, status,0, cstack
  1477 ;; Tracked objects:
  1478 ;;		On entry : 0/0
  1479 ;;		On exit  : 0/0
  1480 ;;		Unchanged: 0/0
  1481 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1482 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1483 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1484 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1485 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1486 ;;Total ram usage:        0 bytes
  1487 ;; Hardware stack levels used: 1
  1488 ;; Hardware stack levels required when called: 1
  1489 ;; This function calls:
  1490 ;;		_I2C_2_Master_Idle
  1491 ;; This function is called by:
  1492 ;;		_color_read_Red
  1493 ;;		_color_read_Blue
  1494 ;;		_color_read_Green
  1495 ;;		_color_read_Clear
  1496 ;; This function uses a non-reentrant model
  1497 ;;
  1498                           
  1499                           	psect	text9
  1500  001D58                     __ptext9:
  1501                           	callstack 0
  1502  001D58                     _I2C_2_Master_RepStart:
  1503                           	callstack 26
  1504  001D58                     
  1505                           ;i2c.c: 35:   I2C_2_Master_Idle();
  1506  001D58  EC54  F00E         	call	_I2C_2_Master_Idle	;wreg free
  1507  001D5C                     
  1508                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  1509  001D5C  010E               	movlb	14	; () banked
  1510  001D5E  83DA               	bsf	218,1,b	;volatile
  1511  001D60                     
  1512                           ; BSR set to: 14
  1513  001D60  0012               	return		;funcret
  1514  001D62                     __end_of_I2C_2_Master_RepStart:
  1515                           	callstack 0
  1516                           
  1517 ;; *************** function _I2C_2_Master_Read *****************
  1518 ;; Defined at:
  1519 ;;		line 51 in file "i2c.c"
  1520 ;; Parameters:    Size  Location     Type
  1521 ;;  ack             1    wreg     unsigned char 
  1522 ;; Auto vars:     Size  Location     Type
  1523 ;;  ack             1    2[COMRAM] unsigned char 
  1524 ;;  tmp             1    3[COMRAM] unsigned char 
  1525 ;; Return value:  Size  Location     Type
  1526 ;;                  1    wreg      unsigned char 
  1527 ;; Registers used:
  1528 ;;		wreg, status,2, status,0, cstack
  1529 ;; Tracked objects:
  1530 ;;		On entry : 0/0
  1531 ;;		On exit  : 0/0
  1532 ;;		Unchanged: 0/0
  1533 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1534 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1535 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1536 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1537 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1538 ;;Total ram usage:        3 bytes
  1539 ;; Hardware stack levels used: 1
  1540 ;; Hardware stack levels required when called: 1
  1541 ;; This function calls:
  1542 ;;		_I2C_2_Master_Idle
  1543 ;; This function is called by:
  1544 ;;		_color_read_Red
  1545 ;;		_color_read_Blue
  1546 ;;		_color_read_Green
  1547 ;;		_color_read_Clear
  1548 ;; This function uses a non-reentrant model
  1549 ;;
  1550                           
  1551                           	psect	text10
  1552  001B62                     __ptext10:
  1553                           	callstack 0
  1554  001B62                     _I2C_2_Master_Read:
  1555                           	callstack 26
  1556                           
  1557                           ; BSR set to: 14
  1558                           ;incstack = 0
  1559                           ;I2C_2_Master_Read@ack stored from wreg
  1560  001B62  6E03               	movwf	I2C_2_Master_Read@ack^0,c
  1561  001B64                     
  1562                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  1563  001B64  EC54  F00E         	call	_I2C_2_Master_Idle	;wreg free
  1564  001B68                     
  1565                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  1566  001B68  010E               	movlb	14	; () banked
  1567  001B6A  87DA               	bsf	218,3,b	;volatile
  1568                           
  1569                           ;i2c.c: 56:   I2C_2_Master_Idle();
  1570  001B6C  EC54  F00E         	call	_I2C_2_Master_Idle	;wreg free
  1571  001B70                     
  1572                           ;i2c.c: 57:   tmp = SSP2BUF;
  1573  001B70  CED5 F004          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  1574                           
  1575                           ;i2c.c: 58:   I2C_2_Master_Idle();
  1576  001B74  EC54  F00E         	call	_I2C_2_Master_Idle	;wreg free
  1577  001B78                     
  1578                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  1579  001B78  5003               	movf	I2C_2_Master_Read@ack^0,w,c
  1580  001B7A  B4D8               	btfsc	status,2,c
  1581  001B7C  EFC2  F00D         	goto	u1081
  1582  001B80  EFC6  F00D         	goto	u1080
  1583  001B84                     u1081:
  1584  001B84  6A02               	clrf	??_I2C_2_Master_Read^0,c
  1585  001B86  2A02               	incf	??_I2C_2_Master_Read^0,f,c
  1586  001B88  EFC7  F00D         	goto	u1098
  1587  001B8C                     u1080:
  1588  001B8C  6A02               	clrf	??_I2C_2_Master_Read^0,c
  1589  001B8E                     u1098:
  1590  001B8E  3A02               	swapf	??_I2C_2_Master_Read^0,f,c
  1591  001B90  4602               	rlncf	??_I2C_2_Master_Read^0,f,c
  1592  001B92  010E               	movlb	14	; () banked
  1593  001B94  51DA               	movf	218,w,b	;volatile
  1594  001B96  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  1595  001B98  0BDF               	andlw	-33
  1596  001B9A  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  1597  001B9C  6FDA               	movwf	218,b	;volatile
  1598  001B9E                     
  1599                           ; BSR set to: 14
  1600                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  1601  001B9E  89DA               	bsf	218,4,b	;volatile
  1602  001BA0                     
  1603                           ; BSR set to: 14
  1604                           ;i2c.c: 61:   return tmp;
  1605  001BA0  5004               	movf	I2C_2_Master_Read@tmp^0,w,c
  1606  001BA2                     
  1607                           ; BSR set to: 14
  1608  001BA2  0012               	return		;funcret
  1609  001BA4                     __end_of_I2C_2_Master_Read:
  1610                           	callstack 0
  1611                           
  1612 ;; *************** function _color_display *****************
  1613 ;; Defined at:
  1614 ;;		line 112 in file "color.c"
  1615 ;; Parameters:    Size  Location     Type
  1616 ;;  m               2   87[COMRAM] PTR struct color_rgb
  1617 ;;		 -> main@rgb(4), 
  1618 ;; Auto vars:     Size  Location     Type
  1619 ;;  buf            80   25[BANK0 ] unsigned char [80]
  1620 ;; Return value:  Size  Location     Type
  1621 ;;                  1    wreg      void 
  1622 ;; Registers used:
  1623 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1624 ;; Tracked objects:
  1625 ;;		On entry : 0/0
  1626 ;;		On exit  : 0/0
  1627 ;;		Unchanged: 0/0
  1628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1629 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1630 ;;      Locals:         0      80       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1631 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1632 ;;      Totals:         6      80       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1633 ;;Total ram usage:       86 bytes
  1634 ;; Hardware stack levels used: 1
  1635 ;; Hardware stack levels required when called: 8
  1636 ;; This function calls:
  1637 ;;		_sendStringSerial4
  1638 ;;		_sprintf
  1639 ;; This function is called by:
  1640 ;;		_main
  1641 ;; This function uses a non-reentrant model
  1642 ;;
  1643                           
  1644                           	psect	text11
  1645  0017CC                     __ptext11:
  1646                           	callstack 0
  1647  0017CC                     _color_display:
  1648                           	callstack 22
  1649  0017CC                     
  1650                           ;color.c: 112: void color_display(struct color_rgb *m);color.c: 113: {;color.c: 114:    
      +                           char buf[80];;color.c: 115:     sprintf(buf,"\t%d\t%d\t%d\t%d\r\n", m->R, m->G, m->B, m
      +                          ->C);
  1651  0017CC  0E79               	movlw	low color_display@buf
  1652  0017CE  0100               	movlb	0	; () banked
  1653  0017D0  6F60               	movwf	sprintf@s& (0+255),b
  1654  0017D2  0E00               	movlw	high color_display@buf
  1655  0017D4  6F61               	movwf	(sprintf@s+1)& (0+255),b
  1656  0017D6  0E01               	movlw	low STR_1
  1657  0017D8  6F62               	movwf	sprintf@fmt& (0+255),b
  1658  0017DA  0E0E               	movlw	high STR_1
  1659  0017DC  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
  1660  0017DE  C058  FFD9         	movff	color_display@m,fsr2l
  1661  0017E2  C059  FFDA         	movff	color_display@m+1,fsr2h
  1662  0017E6  50DF               	movf	indf2,w,c
  1663  0017E8  6E5A               	movwf	??_color_display^0,c
  1664  0017EA  505A               	movf	??_color_display^0,w,c
  1665  0017EC  6F64               	movwf	(?_sprintf+4)& (0+255),b
  1666  0017EE  6B65               	clrf	(?_sprintf+5)& (0+255),b
  1667  0017F0  EE20 F001          	lfsr	2,1
  1668  0017F4  5058               	movf	color_display@m^0,w,c
  1669  0017F6  26D9               	addwf	fsr2l,f,c
  1670  0017F8  5059               	movf	(color_display@m+1)^0,w,c
  1671  0017FA  22DA               	addwfc	fsr2h,f,c
  1672  0017FC  50DF               	movf	indf2,w,c
  1673  0017FE  6E5B               	movwf	(??_color_display+1)^0,c
  1674  001800  505B               	movf	(??_color_display+1)^0,w,c
  1675  001802  6F66               	movwf	(?_sprintf+6)& (0+255),b
  1676  001804  6B67               	clrf	(?_sprintf+7)& (0+255),b
  1677  001806  EE20 F002          	lfsr	2,2
  1678  00180A  5058               	movf	color_display@m^0,w,c
  1679  00180C  26D9               	addwf	fsr2l,f,c
  1680  00180E  5059               	movf	(color_display@m+1)^0,w,c
  1681  001810  22DA               	addwfc	fsr2h,f,c
  1682  001812  50DF               	movf	indf2,w,c
  1683  001814  6E5C               	movwf	(??_color_display+2)^0,c
  1684  001816  505C               	movf	(??_color_display+2)^0,w,c
  1685  001818  6F68               	movwf	(?_sprintf+8)& (0+255),b
  1686  00181A  6B69               	clrf	(?_sprintf+9)& (0+255),b
  1687  00181C  EE20 F003          	lfsr	2,3
  1688  001820  5058               	movf	color_display@m^0,w,c
  1689  001822  26D9               	addwf	fsr2l,f,c
  1690  001824  5059               	movf	(color_display@m+1)^0,w,c
  1691  001826  22DA               	addwfc	fsr2h,f,c
  1692  001828  50DF               	movf	indf2,w,c
  1693  00182A  6E5D               	movwf	(??_color_display+3)^0,c
  1694  00182C  505D               	movf	(??_color_display+3)^0,w,c
  1695  00182E  6F6A               	movwf	(?_sprintf+10)& (0+255),b
  1696  001830  6B6B               	clrf	(?_sprintf+11)& (0+255),b
  1697  001832  EC7E  F00C         	call	_sprintf	;wreg free
  1698  001836                     
  1699                           ;color.c: 116:     sendStringSerial4(buf);
  1700  001836  0E79               	movlw	low color_display@buf
  1701  001838  6E02               	movwf	sendStringSerial4@string^0,c
  1702  00183A  0E00               	movlw	high color_display@buf
  1703  00183C  6E03               	movwf	(sendStringSerial4@string+1)^0,c
  1704  00183E  EC27  F00E         	call	_sendStringSerial4	;wreg free
  1705  001842  0012               	return		;funcret
  1706  001844                     __end_of_color_display:
  1707                           	callstack 0
  1708                           
  1709 ;; *************** function _sprintf *****************
  1710 ;; Defined at:
  1711 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\nf_sprintf.c"
  1712 ;; Parameters:    Size  Location     Type
  1713 ;;  s               2    0[BANK0 ] PTR unsigned char 
  1714 ;;		 -> color_display@buf(80), 
  1715 ;;  fmt             2    2[BANK0 ] PTR const unsigned char 
  1716 ;;		 -> STR_1(15), 
  1717 ;; Auto vars:     Size  Location     Type
  1718 ;;  f              11   14[BANK0 ] struct _IO_FILE
  1719 ;;  ap              2   12[BANK0 ] PTR void [1]
  1720 ;;		 -> ?_sprintf(2), 
  1721 ;;  ret             2    0        int 
  1722 ;; Return value:  Size  Location     Type
  1723 ;;                  2    0[BANK0 ] int 
  1724 ;; Registers used:
  1725 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1726 ;; Tracked objects:
  1727 ;;		On entry : 0/0
  1728 ;;		On exit  : 0/0
  1729 ;;		Unchanged: 0/0
  1730 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1731 ;;      Params:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1732 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1733 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1734 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1735 ;;Total ram usage:       25 bytes
  1736 ;; Hardware stack levels used: 1
  1737 ;; Hardware stack levels required when called: 7
  1738 ;; This function calls:
  1739 ;;		_vfprintf
  1740 ;; This function is called by:
  1741 ;;		_color_display
  1742 ;; This function uses a non-reentrant model
  1743 ;;
  1744                           
  1745                           	psect	text12
  1746  0018FC                     __ptext12:
  1747                           	callstack 0
  1748  0018FC                     _sprintf:
  1749                           	callstack 22
  1750  0018FC  0E64               	movlw	low (?_sprintf+4)
  1751  0018FE  0100               	movlb	0	; () banked
  1752  001900  6F6C               	movwf	sprintf@ap& (0+255),b
  1753  001902  0E00               	movlw	high (?_sprintf+4)
  1754  001904  6F6D               	movwf	(sprintf@ap+1)& (0+255),b
  1755  001906  C060  F06E         	movff	sprintf@s,sprintf@f
  1756  00190A  C061  F06F         	movff	sprintf@s+1,sprintf@f+1
  1757  00190E                     
  1758                           ; BSR set to: 0
  1759  00190E  0E00               	movlw	0
  1760  001910  6F72               	movwf	(sprintf@f+4)& (0+255),b
  1761  001912  0E00               	movlw	0
  1762  001914  6F71               	movwf	(sprintf@f+3)& (0+255),b
  1763  001916                     
  1764                           ; BSR set to: 0
  1765  001916  0E00               	movlw	0
  1766  001918  6F78               	movwf	(sprintf@f+10)& (0+255),b
  1767  00191A  0E00               	movlw	0
  1768  00191C  6F77               	movwf	(sprintf@f+9)& (0+255),b
  1769  00191E                     
  1770                           ; BSR set to: 0
  1771  00191E  0E6E               	movlw	low sprintf@f
  1772  001920  6E50               	movwf	vfprintf@fp^0,c
  1773  001922  0E00               	movlw	high sprintf@f
  1774  001924  6E51               	movwf	(vfprintf@fp+1)^0,c
  1775  001926  C062  F052         	movff	sprintf@fmt,vfprintf@fmt
  1776  00192A  C063  F053         	movff	sprintf@fmt+1,vfprintf@fmt+1
  1777  00192E  0E6C               	movlw	low sprintf@ap
  1778  001930  6E54               	movwf	vfprintf@ap^0,c
  1779  001932  0E00               	movlw	high sprintf@ap
  1780  001934  6E55               	movwf	(vfprintf@ap+1)^0,c
  1781  001936  EC22  F00C         	call	_vfprintf	;wreg free
  1782  00193A  0100               	movlb	0	; () banked
  1783  00193C  5171               	movf	(sprintf@f+3)& (0+255),w,b
  1784  00193E  2560               	addwf	sprintf@s& (0+255),w,b
  1785  001940  6ED9               	movwf	fsr2l,c
  1786  001942  5172               	movf	(sprintf@f+4)& (0+255),w,b
  1787  001944  2161               	addwfc	(sprintf@s+1)& (0+255),w,b
  1788  001946  6EDA               	movwf	fsr2h,c
  1789  001948  0E00               	movlw	0
  1790  00194A  6EDF               	movwf	indf2,c
  1791  00194C                     
  1792                           ; BSR set to: 0
  1793  00194C  0012               	return		;funcret
  1794  00194E                     __end_of_sprintf:
  1795                           	callstack 0
  1796                           
  1797 ;; *************** function _vfprintf *****************
  1798 ;; Defined at:
  1799 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c"
  1800 ;; Parameters:    Size  Location     Type
  1801 ;;  fp              2   79[COMRAM] PTR struct _IO_FILE
  1802 ;;		 -> sprintf@f(11), 
  1803 ;;  fmt             2   81[COMRAM] PTR const unsigned char 
  1804 ;;		 -> STR_1(15), 
  1805 ;;  ap              2   83[COMRAM] PTR PTR void 
  1806 ;;		 -> sprintf@ap(2), 
  1807 ;; Auto vars:     Size  Location     Type
  1808 ;;  cfmt            2   85[COMRAM] PTR unsigned char 
  1809 ;;		 -> STR_1(15), 
  1810 ;; Return value:  Size  Location     Type
  1811 ;;                  2   79[COMRAM] int 
  1812 ;; Registers used:
  1813 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1814 ;; Tracked objects:
  1815 ;;		On entry : 0/0
  1816 ;;		On exit  : 0/0
  1817 ;;		Unchanged: 0/0
  1818 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1819 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1820 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1821 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1822 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1823 ;;Total ram usage:        8 bytes
  1824 ;; Hardware stack levels used: 1
  1825 ;; Hardware stack levels required when called: 6
  1826 ;; This function calls:
  1827 ;;		_vfpfcnvrt
  1828 ;; This function is called by:
  1829 ;;		_sprintf
  1830 ;; This function uses a non-reentrant model
  1831 ;;
  1832                           
  1833                           	psect	text13
  1834  001844                     __ptext13:
  1835                           	callstack 0
  1836  001844                     _vfprintf:
  1837                           	callstack 22
  1838  001844                     
  1839                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.35\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  1840  001844  C052  F056         	movff	vfprintf@fmt,vfprintf@cfmt
  1841  001848  C053  F057         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1842  00184C                     
  1843                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  1844  00184C  0E00               	movlw	0
  1845  00184E  0100               	movlb	0	; () banked
  1846  001850  6FF4               	movwf	(_nout+1)& (0+255),b
  1847  001852  0E00               	movlw	0
  1848  001854  6FF3               	movwf	_nout& (0+255),b
  1849                           
  1850                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1851  001856  EF40  F00C         	goto	l1984
  1852  00185A                     l1982:
  1853                           
  1854                           ; BSR set to: 0
  1855                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  1856  00185A  C050  F040         	movff	vfprintf@fp,vfpfcnvrt@fp
  1857  00185E  C051  F041         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1858  001862  0E56               	movlw	low vfprintf@cfmt
  1859  001864  6E42               	movwf	vfpfcnvrt@fmt^0,c
  1860  001866  0E00               	movlw	high vfprintf@cfmt
  1861  001868  6E43               	movwf	(vfpfcnvrt@fmt+1)^0,c
  1862  00186A  C054  F044         	movff	vfprintf@ap,vfpfcnvrt@ap
  1863  00186E  C055  F045         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1864  001872  EC7B  F008         	call	_vfpfcnvrt	;wreg free
  1865  001876  5040               	movf	?_vfpfcnvrt^0,w,c
  1866  001878  0100               	movlb	0	; () banked
  1867  00187A  27F3               	addwf	_nout& (0+255),f,b
  1868  00187C  5041               	movf	(?_vfpfcnvrt+1)^0,w,c
  1869  00187E  23F4               	addwfc	(_nout+1)& (0+255),f,b
  1870  001880                     l1984:
  1871                           
  1872                           ; BSR set to: 0
  1873                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1874  001880  C056  FFF6         	movff	vfprintf@cfmt,tblptrl
  1875  001884  C057  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1876  001888                     	if	0	;tblptru may be non-zero
  1877  001888                     	endif
  1878  001888                     	if	0	;tblptru may be non-zero
  1879  001888                     	endif
  1880  001888  0008               	tblrd		*
  1881  00188A  50F5               	movf	tablat,w,c
  1882  00188C  0900               	iorlw	0
  1883  00188E  A4D8               	btfss	status,2,c
  1884  001890  EF4C  F00C         	goto	u1151
  1885  001894  EF4E  F00C         	goto	u1150
  1886  001898                     u1151:
  1887  001898  EF2D  F00C         	goto	l1982
  1888  00189C                     u1150:
  1889  00189C                     
  1890                           ; BSR set to: 0
  1891                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  1892  00189C  C0F3  F050         	movff	_nout,?_vfprintf
  1893  0018A0  C0F4  F051         	movff	_nout+1,?_vfprintf+1
  1894  0018A4                     
  1895                           ; BSR set to: 0
  1896  0018A4  0012               	return		;funcret
  1897  0018A6                     __end_of_vfprintf:
  1898                           	callstack 0
  1899                           
  1900 ;; *************** function _vfpfcnvrt *****************
  1901 ;; Defined at:
  1902 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c"
  1903 ;; Parameters:    Size  Location     Type
  1904 ;;  fp              2   63[COMRAM] PTR struct _IO_FILE
  1905 ;;		 -> sprintf@f(11), 
  1906 ;;  fmt             2   65[COMRAM] PTR PTR unsigned char 
  1907 ;;		 -> vfprintf@cfmt(2), 
  1908 ;;  ap              2   67[COMRAM] PTR PTR void 
  1909 ;;		 -> sprintf@ap(2), 
  1910 ;; Auto vars:     Size  Location     Type
  1911 ;;  ll              8   71[COMRAM] long long 
  1912 ;;  llu             8    0        unsigned long long 
  1913 ;;  f               4    0        unsigned long long 
  1914 ;;  vp              3    0        PTR void 
  1915 ;;  ct              3    0        unsigned char [3]
  1916 ;;  cp              3    0        PTR unsigned char 
  1917 ;;  i               2    0        int 
  1918 ;;  done            2    0        int 
  1919 ;;  c               1    0        unsigned char 
  1920 ;; Return value:  Size  Location     Type
  1921 ;;                  2   63[COMRAM] int 
  1922 ;; Registers used:
  1923 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1924 ;; Tracked objects:
  1925 ;;		On entry : 0/0
  1926 ;;		On exit  : 0/0
  1927 ;;		Unchanged: 0/0
  1928 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1929 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1930 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1931 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1932 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1933 ;;Total ram usage:       16 bytes
  1934 ;; Hardware stack levels used: 1
  1935 ;; Hardware stack levels required when called: 5
  1936 ;; This function calls:
  1937 ;;		_dtoa
  1938 ;;		_fputc
  1939 ;; This function is called by:
  1940 ;;		_vfprintf
  1941 ;; This function uses a non-reentrant model
  1942 ;;
  1943                           
  1944                           	psect	text14
  1945  0010F6                     __ptext14:
  1946                           	callstack 0
  1947  0010F6                     _vfpfcnvrt:
  1948                           	callstack 22
  1949  0010F6                     
  1950                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.35\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.35\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.35\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          5\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  1951  0010F6  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1952  0010FA  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1953  0010FE  CFDE FFF6          	movff	postinc2,tblptrl
  1954  001102  CFDD FFF7          	movff	postdec2,tblptrh
  1955  001106                     	if	0	;tblptru may be non-zero
  1956  001106                     	endif
  1957  001106                     	if	0	;tblptru may be non-zero
  1958  001106                     	endif
  1959  001106  0008               	tblrd		*
  1960  001108  50F5               	movf	tablat,w,c
  1961  00110A  0A25               	xorlw	37
  1962  00110C  A4D8               	btfss	status,2,c
  1963  00110E  EF8B  F008         	goto	u1101
  1964  001112  EF8D  F008         	goto	u1100
  1965  001116                     u1101:
  1966  001116  EF39  F009         	goto	l1942
  1967  00111A                     u1100:
  1968  00111A                     
  1969                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  1970  00111A  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1971  00111E  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1972  001122  2ADE               	incf	postinc2,f,c
  1973  001124  0E00               	movlw	0
  1974  001126  22DD               	addwfc	postdec2,f,c
  1975  001128                     
  1976                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  1977  001128  0E00               	movlw	0
  1978  00112A  0100               	movlb	0	; () banked
  1979  00112C  6FF6               	movwf	(_width+1)& (0+255),b
  1980  00112E  0E00               	movlw	0
  1981  001130  6FF5               	movwf	_width& (0+255),b
  1982  001132  C0F5  F0F9         	movff	_width,_flags
  1983  001136  C0F6  F0FA         	movff	_width+1,_flags+1
  1984  00113A                     
  1985                           ; BSR set to: 0
  1986                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  1987  00113A  69F7               	setf	_prec& (0+255),b
  1988  00113C  69F8               	setf	(_prec+1)& (0+255),b
  1989  00113E                     
  1990                           ; BSR set to: 0
  1991                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  1992  00113E  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1993  001142  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1994  001146  CFDE FFF6          	movff	postinc2,tblptrl
  1995  00114A  CFDD FFF7          	movff	postdec2,tblptrh
  1996  00114E                     	if	0	;tblptru may be non-zero
  1997  00114E                     	endif
  1998  00114E                     	if	0	;tblptru may be non-zero
  1999  00114E                     	endif
  2000  00114E  0008               	tblrd		*
  2001  001150  50F5               	movf	tablat,w,c
  2002  001152  0A64               	xorlw	100
  2003  001154  B4D8               	btfsc	status,2,c
  2004  001156  EFAF  F008         	goto	u1111
  2005  00115A  EFB1  F008         	goto	u1110
  2006  00115E                     u1111:
  2007  00115E  EFC3  F008         	goto	l1920
  2008  001162                     u1110:
  2009  001162                     
  2010                           ; BSR set to: 0
  2011  001162  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2012  001166  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2013  00116A  CFDE FFF6          	movff	postinc2,tblptrl
  2014  00116E  CFDD FFF7          	movff	postdec2,tblptrh
  2015  001172                     	if	0	;tblptru may be non-zero
  2016  001172                     	endif
  2017  001172                     	if	0	;tblptru may be non-zero
  2018  001172                     	endif
  2019  001172  0008               	tblrd		*
  2020  001174  50F5               	movf	tablat,w,c
  2021  001176  0A69               	xorlw	105
  2022  001178  A4D8               	btfss	status,2,c
  2023  00117A  EFC1  F008         	goto	u1121
  2024  00117E  EFC3  F008         	goto	u1120
  2025  001182                     u1121:
  2026  001182  EF03  F009         	goto	l1926
  2027  001186                     u1120:
  2028  001186                     l1920:
  2029                           
  2030                           ; BSR set to: 0
  2031                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  2032  001186  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2033  00118A  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2034  00118E  2ADE               	incf	postinc2,f,c
  2035  001190  0E00               	movlw	0
  2036  001192  22DD               	addwfc	postdec2,f,c
  2037                           
  2038                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  2039  001194  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2040  001198  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2041  00119C  CFDF F046          	movff	indf2,??_vfpfcnvrt
  2042  0011A0  0E02               	movlw	2
  2043  0011A2  26DE               	addwf	postinc2,f,c
  2044  0011A4  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  2045  0011A8  0E00               	movlw	0
  2046  0011AA  22DD               	addwfc	postdec2,f,c
  2047  0011AC  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2048  0011B0  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2049  0011B4  CFDE F048          	movff	postinc2,vfpfcnvrt@ll
  2050  0011B8  CFDD F049          	movff	postdec2,vfpfcnvrt@ll+1
  2051  0011BC  0E00               	movlw	0
  2052  0011BE  BE49               	btfsc	(vfpfcnvrt@ll+1)^0,7,c
  2053  0011C0  0EFF               	movlw	-1
  2054  0011C2  6E4A               	movwf	(vfpfcnvrt@ll+2)^0,c
  2055  0011C4  6E4B               	movwf	(vfpfcnvrt@ll+3)^0,c
  2056  0011C6  6E4C               	movwf	(vfpfcnvrt@ll+4)^0,c
  2057  0011C8  6E4D               	movwf	(vfpfcnvrt@ll+5)^0,c
  2058  0011CA  6E4E               	movwf	(vfpfcnvrt@ll+6)^0,c
  2059  0011CC  6E4F               	movwf	(vfpfcnvrt@ll+7)^0,c
  2060  0011CE                     
  2061                           ; BSR set to: 0
  2062                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  2063  0011CE  C040  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  2064  0011D2  C041  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  2065  0011D6  C048  F01E         	movff	vfpfcnvrt@ll,dtoa@d
  2066  0011DA  C049  F01F         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  2067  0011DE  C04A  F020         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  2068  0011E2  C04B  F021         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  2069  0011E6  C04C  F022         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  2070  0011EA  C04D  F023         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  2071  0011EE  C04E  F024         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  2072  0011F2  C04F  F025         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  2073  0011F6  EC09  F007         	call	_dtoa	;wreg free
  2074  0011FA  C01C  F040         	movff	?_dtoa,?_vfpfcnvrt
  2075  0011FE  C01D  F041         	movff	?_dtoa+1,?_vfpfcnvrt+1
  2076  001202  EF54  F009         	goto	l1075
  2077  001206                     l1926:
  2078                           
  2079                           ; BSR set to: 0
  2080                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  2081  001206  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2082  00120A  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2083  00120E  CFDE FFF6          	movff	postinc2,tblptrl
  2084  001212  CFDD FFF7          	movff	postdec2,tblptrh
  2085  001216                     	if	0	;tblptru may be non-zero
  2086  001216                     	endif
  2087  001216                     	if	0	;tblptru may be non-zero
  2088  001216                     	endif
  2089  001216  0008               	tblrd		*
  2090  001218  50F5               	movf	tablat,w,c
  2091  00121A  0A25               	xorlw	37
  2092  00121C  A4D8               	btfss	status,2,c
  2093  00121E  EF13  F009         	goto	u1131
  2094  001222  EF15  F009         	goto	u1130
  2095  001226                     u1131:
  2096  001226  EF2C  F009         	goto	l1936
  2097  00122A                     u1130:
  2098  00122A                     
  2099                           ; BSR set to: 0
  2100                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  2101  00122A  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2102  00122E  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2103  001232  2ADE               	incf	postinc2,f,c
  2104  001234  0E00               	movlw	0
  2105  001236  22DD               	addwfc	postdec2,f,c
  2106  001238                     
  2107                           ; BSR set to: 0
  2108                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  2109  001238  0E00               	movlw	0
  2110  00123A  6E02               	movwf	(fputc@c+1)^0,c
  2111  00123C  0E25               	movlw	37
  2112  00123E  6E01               	movwf	fputc@c^0,c
  2113  001240  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
  2114  001244  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2115  001248  ECCB  F00A         	call	_fputc	;wreg free
  2116  00124C                     l1932:
  2117                           
  2118                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  2119  00124C  0E00               	movlw	0
  2120  00124E  6E41               	movwf	(?_vfpfcnvrt+1)^0,c
  2121  001250  0E01               	movlw	1
  2122  001252  6E40               	movwf	?_vfpfcnvrt^0,c
  2123  001254  EF54  F009         	goto	l1075
  2124  001258                     l1936:
  2125                           
  2126                           ; BSR set to: 0
  2127                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  2128  001258  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2129  00125C  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2130  001260  2ADE               	incf	postinc2,f,c
  2131  001262  0E00               	movlw	0
  2132  001264  22DD               	addwfc	postdec2,f,c
  2133  001266                     
  2134                           ; BSR set to: 0
  2135                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  2136  001266  0E00               	movlw	0
  2137  001268  6E41               	movwf	(?_vfpfcnvrt+1)^0,c
  2138  00126A  0E00               	movlw	0
  2139  00126C  6E40               	movwf	?_vfpfcnvrt^0,c
  2140  00126E  EF54  F009         	goto	l1075
  2141  001272                     l1942:
  2142                           
  2143                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  2144  001272  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2145  001276  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2146  00127A  CFDE FFF6          	movff	postinc2,tblptrl
  2147  00127E  CFDD FFF7          	movff	postdec2,tblptrh
  2148  001282                     	if	0	;tblptru may be non-zero
  2149  001282                     	endif
  2150  001282                     	if	0	;tblptru may be non-zero
  2151  001282                     	endif
  2152  001282  0008               	tblrd		*
  2153  001284  50F5               	movf	tablat,w,c
  2154  001286  6E01               	movwf	fputc@c^0,c
  2155  001288  6A02               	clrf	(fputc@c+1)^0,c
  2156  00128A  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
  2157  00128E  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2158  001292  ECCB  F00A         	call	_fputc	;wreg free
  2159  001296                     
  2160                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  2161  001296  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2162  00129A  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2163  00129E  2ADE               	incf	postinc2,f,c
  2164  0012A0  0E00               	movlw	0
  2165  0012A2  22DD               	addwfc	postdec2,f,c
  2166  0012A4  EF26  F009         	goto	l1932
  2167  0012A8                     l1075:
  2168  0012A8  0012               	return		;funcret
  2169  0012AA                     __end_of_vfpfcnvrt:
  2170                           	callstack 0
  2171                           
  2172 ;; *************** function _dtoa *****************
  2173 ;; Defined at:
  2174 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c"
  2175 ;; Parameters:    Size  Location     Type
  2176 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  2177 ;;		 -> sprintf@f(11), 
  2178 ;;  d               8   29[COMRAM] long long 
  2179 ;; Auto vars:     Size  Location     Type
  2180 ;;  n               8   53[COMRAM] long long 
  2181 ;;  i               2   61[COMRAM] int 
  2182 ;;  s               2   51[COMRAM] int 
  2183 ;;  w               2   49[COMRAM] int 
  2184 ;;  p               2   47[COMRAM] int 
  2185 ;; Return value:  Size  Location     Type
  2186 ;;                  2   27[COMRAM] int 
  2187 ;; Registers used:
  2188 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2189 ;; Tracked objects:
  2190 ;;		On entry : 0/0
  2191 ;;		On exit  : 0/0
  2192 ;;		Unchanged: 0/0
  2193 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2194 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2195 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2196 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2197 ;;      Totals:        36       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2198 ;;Total ram usage:       36 bytes
  2199 ;; Hardware stack levels used: 1
  2200 ;; Hardware stack levels required when called: 4
  2201 ;; This function calls:
  2202 ;;		___aodiv
  2203 ;;		___aomod
  2204 ;;		_abs
  2205 ;;		_pad
  2206 ;; This function is called by:
  2207 ;;		_vfpfcnvrt
  2208 ;; This function uses a non-reentrant model
  2209 ;;
  2210                           
  2211                           	psect	text15
  2212  000E12                     __ptext15:
  2213                           	callstack 0
  2214  000E12                     _dtoa:
  2215                           	callstack 22
  2216  000E12                     
  2217                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  2218  000E12  C01E  F036         	movff	dtoa@d,dtoa@n
  2219  000E16  C01F  F037         	movff	dtoa@d+1,dtoa@n+1
  2220  000E1A  C020  F038         	movff	dtoa@d+2,dtoa@n+2
  2221  000E1E  C021  F039         	movff	dtoa@d+3,dtoa@n+3
  2222  000E22  C022  F03A         	movff	dtoa@d+4,dtoa@n+4
  2223  000E26  C023  F03B         	movff	dtoa@d+5,dtoa@n+5
  2224  000E2A  C024  F03C         	movff	dtoa@d+6,dtoa@n+6
  2225  000E2E  C025  F03D         	movff	dtoa@d+7,dtoa@n+7
  2226  000E32                     
  2227                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  2228  000E32  BE3D               	btfsc	(dtoa@n+7)^0,7,c
  2229  000E34  EF1E  F007         	goto	u931
  2230  000E38  EF21  F007         	goto	u930
  2231  000E3C                     u931:
  2232  000E3C  0E01               	movlw	1
  2233  000E3E  EF22  F007         	goto	u940
  2234  000E42                     u930:
  2235  000E42  0E00               	movlw	0
  2236  000E44                     u940:
  2237  000E44  6E34               	movwf	dtoa@s^0,c
  2238  000E46  6A35               	clrf	(dtoa@s+1)^0,c
  2239                           
  2240                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  2241  000E48  5034               	movf	dtoa@s^0,w,c
  2242  000E4A  1035               	iorwf	(dtoa@s+1)^0,w,c
  2243  000E4C  B4D8               	btfsc	status,2,c
  2244  000E4E  EF2B  F007         	goto	u951
  2245  000E52  EF2D  F007         	goto	u950
  2246  000E56                     u951:
  2247  000E56  EF3D  F007         	goto	l1822
  2248  000E5A                     u950:
  2249  000E5A                     
  2250                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  2251  000E5A  1E3D               	comf	(dtoa@n+7)^0,f,c
  2252  000E5C  1E3C               	comf	(dtoa@n+6)^0,f,c
  2253  000E5E  1E3B               	comf	(dtoa@n+5)^0,f,c
  2254  000E60  1E3A               	comf	(dtoa@n+4)^0,f,c
  2255  000E62  1E39               	comf	(dtoa@n+3)^0,f,c
  2256  000E64  1E38               	comf	(dtoa@n+2)^0,f,c
  2257  000E66  1E37               	comf	(dtoa@n+1)^0,f,c
  2258  000E68  6C36               	negf	dtoa@n^0,c
  2259  000E6A  0E00               	movlw	0
  2260  000E6C  2237               	addwfc	(dtoa@n+1)^0,f,c
  2261  000E6E  2238               	addwfc	(dtoa@n+2)^0,f,c
  2262  000E70  2239               	addwfc	(dtoa@n+3)^0,f,c
  2263  000E72  223A               	addwfc	(dtoa@n+4)^0,f,c
  2264  000E74  223B               	addwfc	(dtoa@n+5)^0,f,c
  2265  000E76  223C               	addwfc	(dtoa@n+6)^0,f,c
  2266  000E78  223D               	addwfc	(dtoa@n+7)^0,f,c
  2267  000E7A                     l1822:
  2268                           
  2269                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  2270  000E7A  0100               	movlb	0	; () banked
  2271  000E7C  BFF8               	btfsc	(_prec+1)& (0+255),7,b
  2272  000E7E  EF43  F007         	goto	u961
  2273  000E82  EF45  F007         	goto	u960
  2274  000E86                     u961:
  2275  000E86  EF46  F007         	goto	l1826
  2276  000E8A                     u960:
  2277  000E8A                     
  2278                           ; BSR set to: 0
  2279                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  2280  000E8A  93F9               	bcf	_flags& (0+255),1,b
  2281  000E8C                     l1826:
  2282                           
  2283                           ; BSR set to: 0
  2284                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  2285  000E8C  BFF8               	btfsc	(_prec+1)& (0+255),7,b
  2286  000E8E  EF53  F007         	goto	u970
  2287  000E92  51F8               	movf	(_prec+1)& (0+255),w,b
  2288  000E94  E106               	bnz	u971
  2289  000E96  05F7               	decf	_prec& (0+255),w,b
  2290  000E98  B0D8               	btfsc	status,0,c
  2291  000E9A  EF51  F007         	goto	u971
  2292  000E9E  EF53  F007         	goto	u970
  2293  000EA2                     u971:
  2294  000EA2  EF59  F007         	goto	l1048
  2295  000EA6                     u970:
  2296  000EA6                     
  2297                           ; BSR set to: 0
  2298  000EA6  0E00               	movlw	0
  2299  000EA8  6E31               	movwf	(dtoa@p+1)^0,c
  2300  000EAA  0E01               	movlw	1
  2301  000EAC  6E30               	movwf	dtoa@p^0,c
  2302  000EAE  EF5D  F007         	goto	l1050
  2303  000EB2                     l1048:
  2304                           
  2305                           ; BSR set to: 0
  2306  000EB2  C0F7  F030         	movff	_prec,dtoa@p
  2307  000EB6  C0F8  F031         	movff	_prec+1,dtoa@p+1
  2308  000EBA                     l1050:
  2309                           
  2310                           ; BSR set to: 0
  2311                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  2312  000EBA  C0F5  F032         	movff	_width,dtoa@w
  2313  000EBE  C0F6  F033         	movff	_width+1,dtoa@w+1
  2314  000EC2                     
  2315                           ; BSR set to: 0
  2316                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  2317  000EC2  5034               	movf	dtoa@s^0,w,c
  2318  000EC4  1035               	iorwf	(dtoa@s+1)^0,w,c
  2319  000EC6  A4D8               	btfss	status,2,c
  2320  000EC8  EF68  F007         	goto	u981
  2321  000ECC  EF6A  F007         	goto	u980
  2322  000ED0                     u981:
  2323  000ED0  EF71  F007         	goto	l1834
  2324  000ED4                     u980:
  2325  000ED4                     
  2326                           ; BSR set to: 0
  2327  000ED4  A5F9               	btfss	_flags& (0+255),2,b
  2328  000ED6  EF6F  F007         	goto	u991
  2329  000EDA  EF71  F007         	goto	u990
  2330  000EDE                     u991:
  2331  000EDE  EF74  F007         	goto	l1836
  2332  000EE2                     u990:
  2333  000EE2                     l1834:
  2334                           
  2335                           ; BSR set to: 0
  2336                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 306:         --w;
  2337  000EE2  0632               	decf	dtoa@w^0,f,c
  2338  000EE4  A0D8               	btfss	status,0,c
  2339  000EE6  0633               	decf	(dtoa@w+1)^0,f,c
  2340  000EE8                     l1836:
  2341                           
  2342                           ; BSR set to: 0
  2343                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  2344  000EE8  0E00               	movlw	0
  2345  000EEA  6E3F               	movwf	(dtoa@i+1)^0,c
  2346  000EEC  0E1F               	movlw	31
  2347  000EEE  6E3E               	movwf	dtoa@i^0,c
  2348  000EF0                     
  2349                           ; BSR set to: 0
  2350                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  2351  000EF0  0E00               	movlw	0
  2352  000EF2  0101               	movlb	1	; () banked
  2353  000EF4  6F5B               	movwf	(_dbuf+31)& (0+255),b
  2354                           
  2355                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  2356  000EF6  EFF9  F007         	goto	l1850
  2357  000EFA                     l1840:
  2358                           
  2359                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 313:         --i;
  2360  000EFA  063E               	decf	dtoa@i^0,f,c
  2361  000EFC  A0D8               	btfss	status,0,c
  2362  000EFE  063F               	decf	(dtoa@i+1)^0,f,c
  2363  000F00                     
  2364                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  2365  000F00  0E3C               	movlw	low _dbuf
  2366  000F02  243E               	addwf	dtoa@i^0,w,c
  2367  000F04  6ED9               	movwf	fsr2l,c
  2368  000F06  0E01               	movlw	high _dbuf
  2369  000F08  203F               	addwfc	(dtoa@i+1)^0,w,c
  2370  000F0A  6EDA               	movwf	fsr2h,c
  2371  000F0C  C036  F001         	movff	dtoa@n,___aomod@dividend
  2372  000F10  C037  F002         	movff	dtoa@n+1,___aomod@dividend+1
  2373  000F14  C038  F003         	movff	dtoa@n+2,___aomod@dividend+2
  2374  000F18  C039  F004         	movff	dtoa@n+3,___aomod@dividend+3
  2375  000F1C  C03A  F005         	movff	dtoa@n+4,___aomod@dividend+4
  2376  000F20  C03B  F006         	movff	dtoa@n+5,___aomod@dividend+5
  2377  000F24  C03C  F007         	movff	dtoa@n+6,___aomod@dividend+6
  2378  000F28  C03D  F008         	movff	dtoa@n+7,___aomod@dividend+7
  2379  000F2C  0E0A               	movlw	10
  2380  000F2E  6E09               	movwf	___aomod@divisor^0,c
  2381  000F30  0E00               	movlw	0
  2382  000F32  6E0A               	movwf	(___aomod@divisor+1)^0,c
  2383  000F34  0E00               	movlw	0
  2384  000F36  6E0B               	movwf	(___aomod@divisor+2)^0,c
  2385  000F38  0E00               	movlw	0
  2386  000F3A  6E0C               	movwf	(___aomod@divisor+3)^0,c
  2387  000F3C  0E00               	movlw	0
  2388  000F3E  6E0D               	movwf	(___aomod@divisor+4)^0,c
  2389  000F40  0E00               	movlw	0
  2390  000F42  6E0E               	movwf	(___aomod@divisor+5)^0,c
  2391  000F44  0E00               	movlw	0
  2392  000F46  6E0F               	movwf	(___aomod@divisor+6)^0,c
  2393  000F48  0E00               	movlw	0
  2394  000F4A  6E10               	movwf	(___aomod@divisor+7)^0,c
  2395  000F4C  EC19  F00A         	call	___aomod	;wreg free
  2396  000F50  C001  F026         	movff	?___aomod,??_dtoa
  2397  000F54  C002  F027         	movff	?___aomod+1,??_dtoa+1
  2398  000F58  C003  F028         	movff	?___aomod+2,??_dtoa+2
  2399  000F5C  C004  F029         	movff	?___aomod+3,??_dtoa+3
  2400  000F60  C005  F02A         	movff	?___aomod+4,??_dtoa+4
  2401  000F64  C006  F02B         	movff	?___aomod+5,??_dtoa+5
  2402  000F68  C007  F02C         	movff	?___aomod+6,??_dtoa+6
  2403  000F6C  C008  F02D         	movff	?___aomod+7,??_dtoa+7
  2404  000F70  C026  F013         	movff	??_dtoa,abs@a
  2405  000F74  C028  F014         	movff	??_dtoa+2,abs@a+1
  2406  000F78  ECD2  F00D         	call	_abs	;wreg free
  2407  000F7C  5013               	movf	?_abs^0,w,c
  2408  000F7E  0F30               	addlw	48
  2409  000F80  6EDF               	movwf	indf2,c
  2410  000F82                     
  2411                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 315:         --p;
  2412  000F82  0630               	decf	dtoa@p^0,f,c
  2413  000F84  A0D8               	btfss	status,0,c
  2414  000F86  0631               	decf	(dtoa@p+1)^0,f,c
  2415  000F88                     
  2416                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 316:         --w;
  2417  000F88  0632               	decf	dtoa@w^0,f,c
  2418  000F8A  A0D8               	btfss	status,0,c
  2419  000F8C  0633               	decf	(dtoa@w+1)^0,f,c
  2420  000F8E                     
  2421                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  2422  000F8E  C036  F001         	movff	dtoa@n,___aodiv@dividend
  2423  000F92  C037  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  2424  000F96  C038  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  2425  000F9A  C039  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  2426  000F9E  C03A  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  2427  000FA2  C03B  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  2428  000FA6  C03C  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  2429  000FAA  C03D  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  2430  000FAE  0E0A               	movlw	10
  2431  000FB0  6E09               	movwf	___aodiv@divisor^0,c
  2432  000FB2  0E00               	movlw	0
  2433  000FB4  6E0A               	movwf	(___aodiv@divisor+1)^0,c
  2434  000FB6  0E00               	movlw	0
  2435  000FB8  6E0B               	movwf	(___aodiv@divisor+2)^0,c
  2436  000FBA  0E00               	movlw	0
  2437  000FBC  6E0C               	movwf	(___aodiv@divisor+3)^0,c
  2438  000FBE  0E00               	movlw	0
  2439  000FC0  6E0D               	movwf	(___aodiv@divisor+4)^0,c
  2440  000FC2  0E00               	movlw	0
  2441  000FC4  6E0E               	movwf	(___aodiv@divisor+5)^0,c
  2442  000FC6  0E00               	movlw	0
  2443  000FC8  6E0F               	movwf	(___aodiv@divisor+6)^0,c
  2444  000FCA  0E00               	movlw	0
  2445  000FCC  6E10               	movwf	(___aodiv@divisor+7)^0,c
  2446  000FCE  EC55  F009         	call	___aodiv	;wreg free
  2447  000FD2  C001  F036         	movff	?___aodiv,dtoa@n
  2448  000FD6  C002  F037         	movff	?___aodiv+1,dtoa@n+1
  2449  000FDA  C003  F038         	movff	?___aodiv+2,dtoa@n+2
  2450  000FDE  C004  F039         	movff	?___aodiv+3,dtoa@n+3
  2451  000FE2  C005  F03A         	movff	?___aodiv+4,dtoa@n+4
  2452  000FE6  C006  F03B         	movff	?___aodiv+5,dtoa@n+5
  2453  000FEA  C007  F03C         	movff	?___aodiv+6,dtoa@n+6
  2454  000FEE  C008  F03D         	movff	?___aodiv+7,dtoa@n+7
  2455  000FF2                     l1850:
  2456                           
  2457                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  2458  000FF2  BE3F               	btfsc	(dtoa@i+1)^0,7,c
  2459  000FF4  EF04  F008         	goto	u1001
  2460  000FF8  503F               	movf	(dtoa@i+1)^0,w,c
  2461  000FFA  E108               	bnz	u1000
  2462  000FFC  043E               	decf	dtoa@i^0,w,c
  2463  000FFE  A0D8               	btfss	status,0,c
  2464  001000  EF04  F008         	goto	u1001
  2465  001004  EF06  F008         	goto	u1000
  2466  001008                     u1001:
  2467  001008  EF37  F008         	goto	l1860
  2468  00100C                     u1000:
  2469  00100C  5036               	movf	dtoa@n^0,w,c
  2470  00100E  1037               	iorwf	(dtoa@n+1)^0,w,c
  2471  001010  1038               	iorwf	(dtoa@n+2)^0,w,c
  2472  001012  1039               	iorwf	(dtoa@n+3)^0,w,c
  2473  001014  103A               	iorwf	(dtoa@n+4)^0,w,c
  2474  001016  103B               	iorwf	(dtoa@n+5)^0,w,c
  2475  001018  103C               	iorwf	(dtoa@n+6)^0,w,c
  2476  00101A  103D               	iorwf	(dtoa@n+7)^0,w,c
  2477  00101C  A4D8               	btfss	status,2,c
  2478  00101E  EF13  F008         	goto	u1011
  2479  001022  EF15  F008         	goto	u1010
  2480  001026                     u1011:
  2481  001026  EF7D  F007         	goto	l1840
  2482  00102A                     u1010:
  2483  00102A  BE31               	btfsc	(dtoa@p+1)^0,7,c
  2484  00102C  EF22  F008         	goto	u1020
  2485  001030  5031               	movf	(dtoa@p+1)^0,w,c
  2486  001032  E106               	bnz	u1021
  2487  001034  0430               	decf	dtoa@p^0,w,c
  2488  001036  B0D8               	btfsc	status,0,c
  2489  001038  EF20  F008         	goto	u1021
  2490  00103C  EF22  F008         	goto	u1020
  2491  001040                     u1021:
  2492  001040  EF7D  F007         	goto	l1840
  2493  001044                     u1020:
  2494  001044  BE33               	btfsc	(dtoa@w+1)^0,7,c
  2495  001046  EF2D  F008         	goto	u1031
  2496  00104A  5033               	movf	(dtoa@w+1)^0,w,c
  2497  00104C  E108               	bnz	u1030
  2498  00104E  0432               	decf	dtoa@w^0,w,c
  2499  001050  A0D8               	btfss	status,0,c
  2500  001052  EF2D  F008         	goto	u1031
  2501  001056  EF2F  F008         	goto	u1030
  2502  00105A                     u1031:
  2503  00105A  EF37  F008         	goto	l1860
  2504  00105E                     u1030:
  2505  00105E  0100               	movlb	0	; () banked
  2506  001060  B3F9               	btfsc	_flags& (0+255),1,b
  2507  001062  EF35  F008         	goto	u1041
  2508  001066  EF37  F008         	goto	u1040
  2509  00106A                     u1041:
  2510  00106A  EF7D  F007         	goto	l1840
  2511  00106E                     u1040:
  2512  00106E                     l1860:
  2513                           
  2514                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  2515  00106E  5034               	movf	dtoa@s^0,w,c
  2516  001070  1035               	iorwf	(dtoa@s+1)^0,w,c
  2517  001072  A4D8               	btfss	status,2,c
  2518  001074  EF3E  F008         	goto	u1051
  2519  001078  EF40  F008         	goto	u1050
  2520  00107C                     u1051:
  2521  00107C  EF48  F008         	goto	l1864
  2522  001080                     u1050:
  2523  001080  0100               	movlb	0	; () banked
  2524  001082  A5F9               	btfss	_flags& (0+255),2,b
  2525  001084  EF46  F008         	goto	u1061
  2526  001088  EF48  F008         	goto	u1060
  2527  00108C                     u1061:
  2528  00108C  EF66  F008         	goto	l1874
  2529  001090                     u1060:
  2530  001090                     l1864:
  2531                           
  2532                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 322:         --i;
  2533  001090  063E               	decf	dtoa@i^0,f,c
  2534  001092  A0D8               	btfss	status,0,c
  2535  001094  063F               	decf	(dtoa@i+1)^0,f,c
  2536  001096                     
  2537                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  2538  001096  5034               	movf	dtoa@s^0,w,c
  2539  001098  1035               	iorwf	(dtoa@s+1)^0,w,c
  2540  00109A  A4D8               	btfss	status,2,c
  2541  00109C  EF52  F008         	goto	u1071
  2542  0010A0  EF54  F008         	goto	u1070
  2543  0010A4                     u1071:
  2544  0010A4  EF5A  F008         	goto	l1870
  2545  0010A8                     u1070:
  2546  0010A8  0E00               	movlw	0
  2547  0010AA  6E2F               	movwf	(_dtoa$1859+1)^0,c
  2548  0010AC  0E2B               	movlw	43
  2549  0010AE  6E2E               	movwf	_dtoa$1859^0,c
  2550  0010B0  EF5E  F008         	goto	l1872
  2551  0010B4                     l1870:
  2552  0010B4  0E00               	movlw	0
  2553  0010B6  6E2F               	movwf	(_dtoa$1859+1)^0,c
  2554  0010B8  0E2D               	movlw	45
  2555  0010BA  6E2E               	movwf	_dtoa$1859^0,c
  2556  0010BC                     l1872:
  2557  0010BC  0E3C               	movlw	low _dbuf
  2558  0010BE  243E               	addwf	dtoa@i^0,w,c
  2559  0010C0  6ED9               	movwf	fsr2l,c
  2560  0010C2  0E01               	movlw	high _dbuf
  2561  0010C4  203F               	addwfc	(dtoa@i+1)^0,w,c
  2562  0010C6  6EDA               	movwf	fsr2h,c
  2563  0010C8  C02E  FFDF         	movff	_dtoa$1859,indf2
  2564  0010CC                     l1874:
  2565                           
  2566                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  2567  0010CC  C01C  F011         	movff	dtoa@fp,pad@fp
  2568  0010D0  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
  2569  0010D4  0E3C               	movlw	low _dbuf
  2570  0010D6  243E               	addwf	dtoa@i^0,w,c
  2571  0010D8  6E13               	movwf	pad@buf^0,c
  2572  0010DA  0E01               	movlw	high _dbuf
  2573  0010DC  203F               	addwfc	(dtoa@i+1)^0,w,c
  2574  0010DE  6E14               	movwf	(pad@buf+1)^0,c
  2575  0010E0  C032  F015         	movff	dtoa@w,pad@p
  2576  0010E4  C033  F016         	movff	dtoa@w+1,pad@p+1
  2577  0010E8  EC30  F00B         	call	_pad	;wreg free
  2578  0010EC  C011  F01C         	movff	?_pad,?_dtoa
  2579  0010F0  C012  F01D         	movff	?_pad+1,?_dtoa+1
  2580  0010F4  0012               	return		;funcret
  2581  0010F6                     __end_of_dtoa:
  2582                           	callstack 0
  2583                           
  2584 ;; *************** function _pad *****************
  2585 ;; Defined at:
  2586 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c"
  2587 ;; Parameters:    Size  Location     Type
  2588 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  2589 ;;		 -> sprintf@f(11), 
  2590 ;;  buf             2   18[COMRAM] PTR unsigned char 
  2591 ;;		 -> dbuf(32), 
  2592 ;;  p               2   20[COMRAM] int 
  2593 ;; Auto vars:     Size  Location     Type
  2594 ;;  w               2   25[COMRAM] int 
  2595 ;;  i               2   23[COMRAM] int 
  2596 ;; Return value:  Size  Location     Type
  2597 ;;                  2   16[COMRAM] int 
  2598 ;; Registers used:
  2599 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2600 ;; Tracked objects:
  2601 ;;		On entry : 0/0
  2602 ;;		On exit  : 0/0
  2603 ;;		Unchanged: 0/0
  2604 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2605 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2606 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2607 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2608 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2609 ;;Total ram usage:       11 bytes
  2610 ;; Hardware stack levels used: 1
  2611 ;; Hardware stack levels required when called: 3
  2612 ;; This function calls:
  2613 ;;		_fputc
  2614 ;;		_fputs
  2615 ;;		_strlen
  2616 ;; This function is called by:
  2617 ;;		_dtoa
  2618 ;; This function uses a non-reentrant model
  2619 ;;
  2620                           
  2621                           	psect	text16
  2622  001660                     __ptext16:
  2623                           	callstack 0
  2624  001660                     _pad:
  2625                           	callstack 22
  2626  001660                     
  2627                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  2628  001660  0100               	movlb	0	; () banked
  2629  001662  A1F9               	btfss	_flags& (0+255),0,b
  2630  001664  EF36  F00B         	goto	u861
  2631  001668  EF38  F00B         	goto	u860
  2632  00166C                     u861:
  2633  00166C  EF42  F00B         	goto	l1790
  2634  001670                     u860:
  2635  001670                     
  2636                           ; BSR set to: 0
  2637                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  2638  001670  C013  F00A         	movff	pad@buf,fputs@s
  2639  001674  C014  F00B         	movff	pad@buf+1,fputs@s+1
  2640  001678  C011  F00C         	movff	pad@fp,fputs@fp
  2641  00167C  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  2642  001680  EC6E  F00D         	call	_fputs	;wreg free
  2643  001684                     l1790:
  2644                           
  2645                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  2646  001684  BE16               	btfsc	(pad@p+1)^0,7,c
  2647  001686  EF47  F00B         	goto	u871
  2648  00168A  EF49  F00B         	goto	u870
  2649  00168E                     u871:
  2650  00168E  EF4F  F00B         	goto	l1794
  2651  001692                     u870:
  2652  001692  C015  F01A         	movff	pad@p,pad@w
  2653  001696  C016  F01B         	movff	pad@p+1,pad@w+1
  2654  00169A  EF53  F00B         	goto	l1037
  2655  00169E                     l1794:
  2656  00169E  0E00               	movlw	0
  2657  0016A0  6E1B               	movwf	(pad@w+1)^0,c
  2658  0016A2  0E00               	movlw	0
  2659  0016A4  6E1A               	movwf	pad@w^0,c
  2660  0016A6                     l1037:
  2661                           
  2662                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  2663  0016A6  0E00               	movlw	0
  2664  0016A8  6E19               	movwf	(pad@i+1)^0,c
  2665  0016AA  0E00               	movlw	0
  2666  0016AC  6E18               	movwf	pad@i^0,c
  2667                           
  2668                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  2669  0016AE  EF65  F00B         	goto	l1800
  2670  0016B2                     l1796:
  2671                           
  2672                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  2673  0016B2  0E00               	movlw	0
  2674  0016B4  6E02               	movwf	(fputc@c+1)^0,c
  2675  0016B6  0E20               	movlw	32
  2676  0016B8  6E01               	movwf	fputc@c^0,c
  2677  0016BA  C011  F003         	movff	pad@fp,fputc@fp
  2678  0016BE  C012  F004         	movff	pad@fp+1,fputc@fp+1
  2679  0016C2  ECCB  F00A         	call	_fputc	;wreg free
  2680  0016C6                     
  2681                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 86:         ++i;
  2682  0016C6  4A18               	infsnz	pad@i^0,f,c
  2683  0016C8  2A19               	incf	(pad@i+1)^0,f,c
  2684  0016CA                     l1800:
  2685                           
  2686                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  2687  0016CA  501A               	movf	pad@w^0,w,c
  2688  0016CC  5C18               	subwf	pad@i^0,w,c
  2689  0016CE  5019               	movf	(pad@i+1)^0,w,c
  2690  0016D0  0A80               	xorlw	128
  2691  0016D2  6E17               	movwf	??_pad^0,c
  2692  0016D4  501B               	movf	(pad@w+1)^0,w,c
  2693  0016D6  0A80               	xorlw	128
  2694  0016D8  5817               	subwfb	??_pad^0,w,c
  2695  0016DA  A0D8               	btfss	status,0,c
  2696  0016DC  EF72  F00B         	goto	u881
  2697  0016E0  EF74  F00B         	goto	u880
  2698  0016E4                     u881:
  2699  0016E4  EF59  F00B         	goto	l1796
  2700  0016E8                     u880:
  2701  0016E8                     
  2702                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  2703  0016E8  0100               	movlb	0	; () banked
  2704  0016EA  B1F9               	btfsc	_flags& (0+255),0,b
  2705  0016EC  EF7A  F00B         	goto	u891
  2706  0016F0  EF7C  F00B         	goto	u890
  2707  0016F4                     u891:
  2708  0016F4  EF86  F00B         	goto	l1804
  2709  0016F8                     u890:
  2710  0016F8                     
  2711                           ; BSR set to: 0
  2712                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  2713  0016F8  C013  F00A         	movff	pad@buf,fputs@s
  2714  0016FC  C014  F00B         	movff	pad@buf+1,fputs@s+1
  2715  001700  C011  F00C         	movff	pad@fp,fputs@fp
  2716  001704  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  2717  001708  EC6E  F00D         	call	_fputs	;wreg free
  2718  00170C                     l1804:
  2719                           
  2720                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  2721  00170C  C013  F001         	movff	pad@buf,strlen@s
  2722  001710  C014  F002         	movff	pad@buf+1,strlen@s+1
  2723  001714  ECF2  F00D         	call	_strlen	;wreg free
  2724  001718  501A               	movf	pad@w^0,w,c
  2725  00171A  2401               	addwf	?_strlen^0,w,c
  2726  00171C  6E11               	movwf	?_pad^0,c
  2727  00171E  501B               	movf	(pad@w+1)^0,w,c
  2728  001720  2002               	addwfc	(?_strlen+1)^0,w,c
  2729  001722  6E12               	movwf	(?_pad+1)^0,c
  2730  001724  0012               	return		;funcret
  2731  001726                     __end_of_pad:
  2732                           	callstack 0
  2733                           
  2734 ;; *************** function _strlen *****************
  2735 ;; Defined at:
  2736 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\strlen.c"
  2737 ;; Parameters:    Size  Location     Type
  2738 ;;  s               2    0[COMRAM] PTR const unsigned char 
  2739 ;;		 -> dbuf(32), 
  2740 ;; Auto vars:     Size  Location     Type
  2741 ;;  a               2    2[COMRAM] PTR const unsigned char 
  2742 ;;		 -> dbuf(32), 
  2743 ;; Return value:  Size  Location     Type
  2744 ;;                  2    0[COMRAM] unsigned int 
  2745 ;; Registers used:
  2746 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2747 ;; Tracked objects:
  2748 ;;		On entry : 0/0
  2749 ;;		On exit  : 0/0
  2750 ;;		Unchanged: 0/0
  2751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2752 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2753 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2754 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2755 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2756 ;;Total ram usage:        4 bytes
  2757 ;; Hardware stack levels used: 1
  2758 ;; This function calls:
  2759 ;;		Nothing
  2760 ;; This function is called by:
  2761 ;;		_pad
  2762 ;; This function uses a non-reentrant model
  2763 ;;
  2764                           
  2765                           	psect	text17
  2766  001BE4                     __ptext17:
  2767                           	callstack 0
  2768  001BE4                     _strlen:
  2769                           	callstack 24
  2770  001BE4  C001  F003         	movff	strlen@s,strlen@a
  2771  001BE8  C002  F004         	movff	strlen@s+1,strlen@a+1
  2772  001BEC  EFFA  F00D         	goto	l1700
  2773  001BF0                     l1698:
  2774  001BF0  4A01               	infsnz	strlen@s^0,f,c
  2775  001BF2  2A02               	incf	(strlen@s+1)^0,f,c
  2776  001BF4                     l1700:
  2777  001BF4  C001  FFD9         	movff	strlen@s,fsr2l
  2778  001BF8  C002  FFDA         	movff	strlen@s+1,fsr2h
  2779  001BFC  50DF               	movf	indf2,w,c
  2780  001BFE  A4D8               	btfss	status,2,c
  2781  001C00  EF04  F00E         	goto	u721
  2782  001C04  EF06  F00E         	goto	u720
  2783  001C08                     u721:
  2784  001C08  EFF8  F00D         	goto	l1698
  2785  001C0C                     u720:
  2786  001C0C  5003               	movf	strlen@a^0,w,c
  2787  001C0E  5C01               	subwf	strlen@s^0,w,c
  2788  001C10  6E01               	movwf	?_strlen^0,c
  2789  001C12  5004               	movf	(strlen@a+1)^0,w,c
  2790  001C14  5802               	subwfb	(strlen@s+1)^0,w,c
  2791  001C16  6E02               	movwf	(?_strlen+1)^0,c
  2792  001C18  0012               	return		;funcret
  2793  001C1A                     __end_of_strlen:
  2794                           	callstack 0
  2795                           
  2796 ;; *************** function _fputs *****************
  2797 ;; Defined at:
  2798 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\nf_fputs.c"
  2799 ;; Parameters:    Size  Location     Type
  2800 ;;  s               2    9[COMRAM] PTR const unsigned char 
  2801 ;;		 -> dbuf(32), 
  2802 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  2803 ;;		 -> sprintf@f(11), 
  2804 ;; Auto vars:     Size  Location     Type
  2805 ;;  i               2   14[COMRAM] int 
  2806 ;;  c               1   13[COMRAM] unsigned char 
  2807 ;; Return value:  Size  Location     Type
  2808 ;;                  2    9[COMRAM] int 
  2809 ;; Registers used:
  2810 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2811 ;; Tracked objects:
  2812 ;;		On entry : 0/0
  2813 ;;		On exit  : 0/0
  2814 ;;		Unchanged: 0/0
  2815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2816 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2817 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2818 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2819 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2820 ;;Total ram usage:        7 bytes
  2821 ;; Hardware stack levels used: 1
  2822 ;; Hardware stack levels required when called: 2
  2823 ;; This function calls:
  2824 ;;		_fputc
  2825 ;; This function is called by:
  2826 ;;		_pad
  2827 ;; This function uses a non-reentrant model
  2828 ;;
  2829                           
  2830                           	psect	text18
  2831  001ADC                     __ptext18:
  2832                           	callstack 0
  2833  001ADC                     _fputs:
  2834                           	callstack 22
  2835  001ADC  0E00               	movlw	0
  2836  001ADE  6E10               	movwf	(fputs@i+1)^0,c
  2837  001AE0  0E00               	movlw	0
  2838  001AE2  6E0F               	movwf	fputs@i^0,c
  2839  001AE4  EF7F  F00D         	goto	l1694
  2840  001AE8                     l1690:
  2841  001AE8  C00E  F001         	movff	fputs@c,fputc@c
  2842  001AEC  6A02               	clrf	(fputc@c+1)^0,c
  2843  001AEE  C00C  F003         	movff	fputs@fp,fputc@fp
  2844  001AF2  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  2845  001AF6  ECCB  F00A         	call	_fputc	;wreg free
  2846  001AFA  4A0F               	infsnz	fputs@i^0,f,c
  2847  001AFC  2A10               	incf	(fputs@i+1)^0,f,c
  2848  001AFE                     l1694:
  2849  001AFE  500F               	movf	fputs@i^0,w,c
  2850  001B00  240A               	addwf	fputs@s^0,w,c
  2851  001B02  6ED9               	movwf	fsr2l,c
  2852  001B04  5010               	movf	(fputs@i+1)^0,w,c
  2853  001B06  200B               	addwfc	(fputs@s+1)^0,w,c
  2854  001B08  6EDA               	movwf	fsr2h,c
  2855  001B0A  50DF               	movf	indf2,w,c
  2856  001B0C  6E0E               	movwf	fputs@c^0,c
  2857  001B0E  500E               	movf	fputs@c^0,w,c
  2858  001B10  A4D8               	btfss	status,2,c
  2859  001B12  EF8D  F00D         	goto	u711
  2860  001B16  EF8F  F00D         	goto	u710
  2861  001B1A                     u711:
  2862  001B1A  EF74  F00D         	goto	l1690
  2863  001B1E                     u710:
  2864  001B1E  0012               	return		;funcret
  2865  001B20                     __end_of_fputs:
  2866                           	callstack 0
  2867                           
  2868 ;; *************** function _fputc *****************
  2869 ;; Defined at:
  2870 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\nf_fputc.c"
  2871 ;; Parameters:    Size  Location     Type
  2872 ;;  c               2    0[COMRAM] int 
  2873 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  2874 ;;		 -> sprintf@f(11), 
  2875 ;; Auto vars:     Size  Location     Type
  2876 ;;		None
  2877 ;; Return value:  Size  Location     Type
  2878 ;;                  2    0[COMRAM] int 
  2879 ;; Registers used:
  2880 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2881 ;; Tracked objects:
  2882 ;;		On entry : 0/0
  2883 ;;		On exit  : 0/0
  2884 ;;		Unchanged: 0/0
  2885 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2886 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2887 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2888 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2889 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2890 ;;Total ram usage:        9 bytes
  2891 ;; Hardware stack levels used: 1
  2892 ;; Hardware stack levels required when called: 1
  2893 ;; This function calls:
  2894 ;;		_putch
  2895 ;; This function is called by:
  2896 ;;		_pad
  2897 ;;		_vfpfcnvrt
  2898 ;;		_fputs
  2899 ;; This function uses a non-reentrant model
  2900 ;;
  2901                           
  2902                           	psect	text19
  2903  001596                     __ptext19:
  2904                           	callstack 0
  2905  001596                     _fputc:
  2906                           	callstack 25
  2907  001596  5003               	movf	fputc@fp^0,w,c
  2908  001598  1004               	iorwf	(fputc@fp+1)^0,w,c
  2909  00159A  B4D8               	btfsc	status,2,c
  2910  00159C  EFD2  F00A         	goto	u671
  2911  0015A0  EFD4  F00A         	goto	u670
  2912  0015A4                     u671:
  2913  0015A4  EFDD  F00A         	goto	l1678
  2914  0015A8                     u670:
  2915  0015A8  5003               	movf	fputc@fp^0,w,c
  2916  0015AA  1004               	iorwf	(fputc@fp+1)^0,w,c
  2917  0015AC  A4D8               	btfss	status,2,c
  2918  0015AE  EFDB  F00A         	goto	u681
  2919  0015B2  EFDD  F00A         	goto	u680
  2920  0015B6                     u681:
  2921  0015B6  EFE2  F00A         	goto	l1680
  2922  0015BA                     u680:
  2923  0015BA                     l1678:
  2924  0015BA  5001               	movf	fputc@c^0,w,c
  2925  0015BC  ECBB  F00E         	call	_putch
  2926  0015C0  EF2F  F00B         	goto	l1101
  2927  0015C4                     l1680:
  2928  0015C4  EE20 F009          	lfsr	2,9
  2929  0015C8  5003               	movf	fputc@fp^0,w,c
  2930  0015CA  26D9               	addwf	fsr2l,f,c
  2931  0015CC  5004               	movf	(fputc@fp+1)^0,w,c
  2932  0015CE  22DA               	addwfc	fsr2h,f,c
  2933  0015D0  50DE               	movf	postinc2,w,c
  2934  0015D2  10DE               	iorwf	postinc2,w,c
  2935  0015D4  B4D8               	btfsc	status,2,c
  2936  0015D6  EFEF  F00A         	goto	u691
  2937  0015DA  EFF1  F00A         	goto	u690
  2938  0015DE                     u691:
  2939  0015DE  EF0C  F00B         	goto	l1684
  2940  0015E2                     u690:
  2941  0015E2  EE20 F009          	lfsr	2,9
  2942  0015E6  5003               	movf	fputc@fp^0,w,c
  2943  0015E8  26D9               	addwf	fsr2l,f,c
  2944  0015EA  5004               	movf	(fputc@fp+1)^0,w,c
  2945  0015EC  22DA               	addwfc	fsr2h,f,c
  2946  0015EE  EE10 F003          	lfsr	1,3
  2947  0015F2  5003               	movf	fputc@fp^0,w,c
  2948  0015F4  26E1               	addwf	fsr1l,f,c
  2949  0015F6  5004               	movf	(fputc@fp+1)^0,w,c
  2950  0015F8  22E2               	addwfc	fsr1h,f,c
  2951  0015FA  50DE               	movf	postinc2,w,c
  2952  0015FC  5CE6               	subwf	postinc1,w,c
  2953  0015FE  50E6               	movf	postinc1,w,c
  2954  001600  0A80               	xorlw	128
  2955  001602  6E09               	movwf	(??_fputc+4)^0,c
  2956  001604  50DE               	movf	postinc2,w,c
  2957  001606  0A80               	xorlw	128
  2958  001608  5809               	subwfb	(??_fputc+4)^0,w,c
  2959  00160A  B0D8               	btfsc	status,0,c
  2960  00160C  EF0A  F00B         	goto	u701
  2961  001610  EF0C  F00B         	goto	u700
  2962  001614                     u701:
  2963  001614  EF2F  F00B         	goto	l1101
  2964  001618                     u700:
  2965  001618                     l1684:
  2966  001618  EE20 F003          	lfsr	2,3
  2967  00161C  5003               	movf	fputc@fp^0,w,c
  2968  00161E  26D9               	addwf	fsr2l,f,c
  2969  001620  5004               	movf	(fputc@fp+1)^0,w,c
  2970  001622  22DA               	addwfc	fsr2h,f,c
  2971  001624  CFDE F005          	movff	postinc2,??_fputc
  2972  001628  CFDD F006          	movff	postdec2,??_fputc+1
  2973  00162C  C003  FFD9         	movff	fputc@fp,fsr2l
  2974  001630  C004  FFDA         	movff	fputc@fp+1,fsr2h
  2975  001634  CFDE F007          	movff	postinc2,??_fputc+2
  2976  001638  CFDD F008          	movff	postdec2,??_fputc+3
  2977  00163C  5005               	movf	??_fputc^0,w,c
  2978  00163E  2407               	addwf	(??_fputc+2)^0,w,c
  2979  001640  6ED9               	movwf	fsr2l,c
  2980  001642  5006               	movf	(??_fputc+1)^0,w,c
  2981  001644  2008               	addwfc	(??_fputc+3)^0,w,c
  2982  001646  6EDA               	movwf	fsr2h,c
  2983  001648  C001  FFDF         	movff	fputc@c,indf2
  2984  00164C  EE20 F003          	lfsr	2,3
  2985  001650  5003               	movf	fputc@fp^0,w,c
  2986  001652  26D9               	addwf	fsr2l,f,c
  2987  001654  5004               	movf	(fputc@fp+1)^0,w,c
  2988  001656  22DA               	addwfc	fsr2h,f,c
  2989  001658  2ADE               	incf	postinc2,f,c
  2990  00165A  0E00               	movlw	0
  2991  00165C  22DD               	addwfc	postdec2,f,c
  2992  00165E                     l1101:
  2993  00165E  0012               	return		;funcret
  2994  001660                     __end_of_fputc:
  2995                           	callstack 0
  2996                           
  2997 ;; *************** function _putch *****************
  2998 ;; Defined at:
  2999 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\putch.c"
  3000 ;; Parameters:    Size  Location     Type
  3001 ;;  c               1    wreg     unsigned char 
  3002 ;; Auto vars:     Size  Location     Type
  3003 ;;  c               1    0[COMRAM] unsigned char 
  3004 ;; Return value:  Size  Location     Type
  3005 ;;                  1    wreg      void 
  3006 ;; Registers used:
  3007 ;;		wreg
  3008 ;; Tracked objects:
  3009 ;;		On entry : 0/0
  3010 ;;		On exit  : 0/0
  3011 ;;		Unchanged: 0/0
  3012 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3013 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3014 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3015 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3016 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3017 ;;Total ram usage:        0 bytes
  3018 ;; Hardware stack levels used: 1
  3019 ;; This function calls:
  3020 ;;		Nothing
  3021 ;; This function is called by:
  3022 ;;		_fputc
  3023 ;; This function uses a non-reentrant model
  3024 ;;
  3025                           
  3026                           	psect	text20
  3027  001D76                     __ptext20:
  3028                           	callstack 0
  3029  001D76                     _putch:
  3030                           	callstack 25
  3031  001D76  0012               	return		;funcret
  3032  001D78                     __end_of_putch:
  3033                           	callstack 0
  3034                           
  3035 ;; *************** function _abs *****************
  3036 ;; Defined at:
  3037 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\abs.c"
  3038 ;; Parameters:    Size  Location     Type
  3039 ;;  a               2   18[COMRAM] int 
  3040 ;; Auto vars:     Size  Location     Type
  3041 ;;		None
  3042 ;; Return value:  Size  Location     Type
  3043 ;;                  2   18[COMRAM] int 
  3044 ;; Registers used:
  3045 ;;		wreg, status,2, status,0
  3046 ;; Tracked objects:
  3047 ;;		On entry : 0/0
  3048 ;;		On exit  : 0/0
  3049 ;;		Unchanged: 0/0
  3050 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3051 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3052 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3053 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3054 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3055 ;;Total ram usage:        4 bytes
  3056 ;; Hardware stack levels used: 1
  3057 ;; This function calls:
  3058 ;;		Nothing
  3059 ;; This function is called by:
  3060 ;;		_dtoa
  3061 ;; This function uses a non-reentrant model
  3062 ;;
  3063                           
  3064                           	psect	text21
  3065  001BA4                     __ptext21:
  3066                           	callstack 0
  3067  001BA4                     _abs:
  3068                           	callstack 25
  3069  001BA4  BE14               	btfsc	(abs@a+1)^0,7,c
  3070  001BA6  EFDF  F00D         	goto	u900
  3071  001BAA  5014               	movf	(abs@a+1)^0,w,c
  3072  001BAC  E106               	bnz	u901
  3073  001BAE  0413               	decf	abs@a^0,w,c
  3074  001BB0  B0D8               	btfsc	status,0,c
  3075  001BB2  EFDD  F00D         	goto	u901
  3076  001BB6  EFDF  F00D         	goto	u900
  3077  001BBA                     u901:
  3078  001BBA  EFED  F00D         	goto	l1086
  3079  001BBE                     u900:
  3080  001BBE  C013  F015         	movff	abs@a,??_abs
  3081  001BC2  C014  F016         	movff	abs@a+1,??_abs+1
  3082  001BC6  1E15               	comf	??_abs^0,f,c
  3083  001BC8  1E16               	comf	(??_abs+1)^0,f,c
  3084  001BCA  4A15               	infsnz	??_abs^0,f,c
  3085  001BCC  2A16               	incf	(??_abs+1)^0,f,c
  3086  001BCE  C015  F013         	movff	??_abs,?_abs
  3087  001BD2  C016  F014         	movff	??_abs+1,?_abs+1
  3088  001BD6  EFF1  F00D         	goto	l1089
  3089  001BDA                     l1086:
  3090  001BDA  C013  F013         	movff	abs@a,?_abs
  3091  001BDE  C014  F014         	movff	abs@a+1,?_abs+1
  3092  001BE2                     l1089:
  3093  001BE2  0012               	return		;funcret
  3094  001BE4                     __end_of_abs:
  3095                           	callstack 0
  3096                           
  3097 ;; *************** function ___aomod *****************
  3098 ;; Defined at:
  3099 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\aomod.c"
  3100 ;; Parameters:    Size  Location     Type
  3101 ;;  dividend        8    0[COMRAM] long long 
  3102 ;;  divisor         8    8[COMRAM] long long 
  3103 ;; Auto vars:     Size  Location     Type
  3104 ;;  sign            1   17[COMRAM] unsigned char 
  3105 ;;  counter         1   16[COMRAM] unsigned char 
  3106 ;; Return value:  Size  Location     Type
  3107 ;;                  8    0[COMRAM] long long 
  3108 ;; Registers used:
  3109 ;;		wreg, status,2, status,0
  3110 ;; Tracked objects:
  3111 ;;		On entry : 0/0
  3112 ;;		On exit  : 0/0
  3113 ;;		Unchanged: 0/0
  3114 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3115 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3116 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3117 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3118 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3119 ;;Total ram usage:       18 bytes
  3120 ;; Hardware stack levels used: 1
  3121 ;; This function calls:
  3122 ;;		Nothing
  3123 ;; This function is called by:
  3124 ;;		_dtoa
  3125 ;; This function uses a non-reentrant model
  3126 ;;
  3127                           
  3128                           	psect	text22
  3129  001432                     __ptext22:
  3130                           	callstack 0
  3131  001432                     ___aomod:
  3132                           	callstack 25
  3133  001432  0E00               	movlw	0
  3134  001434  6E12               	movwf	___aomod@sign^0,c
  3135  001436  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
  3136  001438  EF22  F00A         	goto	u800
  3137  00143C  EF20  F00A         	goto	u801
  3138  001440                     u801:
  3139  001440  EF34  F00A         	goto	l1758
  3140  001444                     u800:
  3141  001444  1E08               	comf	(___aomod@dividend+7)^0,f,c
  3142  001446  1E07               	comf	(___aomod@dividend+6)^0,f,c
  3143  001448  1E06               	comf	(___aomod@dividend+5)^0,f,c
  3144  00144A  1E05               	comf	(___aomod@dividend+4)^0,f,c
  3145  00144C  1E04               	comf	(___aomod@dividend+3)^0,f,c
  3146  00144E  1E03               	comf	(___aomod@dividend+2)^0,f,c
  3147  001450  1E02               	comf	(___aomod@dividend+1)^0,f,c
  3148  001452  6C01               	negf	___aomod@dividend^0,c
  3149  001454  0E00               	movlw	0
  3150  001456  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  3151  001458  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  3152  00145A  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  3153  00145C  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  3154  00145E  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  3155  001460  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  3156  001462  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  3157  001464  0E01               	movlw	1
  3158  001466  6E12               	movwf	___aomod@sign^0,c
  3159  001468                     l1758:
  3160  001468  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
  3161  00146A  EF3B  F00A         	goto	u810
  3162  00146E  EF39  F00A         	goto	u811
  3163  001472                     u811:
  3164  001472  EF4B  F00A         	goto	l1762
  3165  001476                     u810:
  3166  001476  1E10               	comf	(___aomod@divisor+7)^0,f,c
  3167  001478  1E0F               	comf	(___aomod@divisor+6)^0,f,c
  3168  00147A  1E0E               	comf	(___aomod@divisor+5)^0,f,c
  3169  00147C  1E0D               	comf	(___aomod@divisor+4)^0,f,c
  3170  00147E  1E0C               	comf	(___aomod@divisor+3)^0,f,c
  3171  001480  1E0B               	comf	(___aomod@divisor+2)^0,f,c
  3172  001482  1E0A               	comf	(___aomod@divisor+1)^0,f,c
  3173  001484  6C09               	negf	___aomod@divisor^0,c
  3174  001486  0E00               	movlw	0
  3175  001488  220A               	addwfc	(___aomod@divisor+1)^0,f,c
  3176  00148A  220B               	addwfc	(___aomod@divisor+2)^0,f,c
  3177  00148C  220C               	addwfc	(___aomod@divisor+3)^0,f,c
  3178  00148E  220D               	addwfc	(___aomod@divisor+4)^0,f,c
  3179  001490  220E               	addwfc	(___aomod@divisor+5)^0,f,c
  3180  001492  220F               	addwfc	(___aomod@divisor+6)^0,f,c
  3181  001494  2210               	addwfc	(___aomod@divisor+7)^0,f,c
  3182  001496                     l1762:
  3183  001496  5009               	movf	___aomod@divisor^0,w,c
  3184  001498  100A               	iorwf	(___aomod@divisor+1)^0,w,c
  3185  00149A  100B               	iorwf	(___aomod@divisor+2)^0,w,c
  3186  00149C  100C               	iorwf	(___aomod@divisor+3)^0,w,c
  3187  00149E  100D               	iorwf	(___aomod@divisor+4)^0,w,c
  3188  0014A0  100E               	iorwf	(___aomod@divisor+5)^0,w,c
  3189  0014A2  100F               	iorwf	(___aomod@divisor+6)^0,w,c
  3190  0014A4  1010               	iorwf	(___aomod@divisor+7)^0,w,c
  3191  0014A6  B4D8               	btfsc	status,2,c
  3192  0014A8  EF58  F00A         	goto	u821
  3193  0014AC  EF5A  F00A         	goto	u820
  3194  0014B0                     u821:
  3195  0014B0  EFA2  F00A         	goto	l1778
  3196  0014B4                     u820:
  3197  0014B4  0E01               	movlw	1
  3198  0014B6  6E11               	movwf	___aomod@counter^0,c
  3199  0014B8  EF68  F00A         	goto	l1768
  3200  0014BC                     l1766:
  3201  0014BC  90D8               	bcf	status,0,c
  3202  0014BE  3609               	rlcf	___aomod@divisor^0,f,c
  3203  0014C0  360A               	rlcf	(___aomod@divisor+1)^0,f,c
  3204  0014C2  360B               	rlcf	(___aomod@divisor+2)^0,f,c
  3205  0014C4  360C               	rlcf	(___aomod@divisor+3)^0,f,c
  3206  0014C6  360D               	rlcf	(___aomod@divisor+4)^0,f,c
  3207  0014C8  360E               	rlcf	(___aomod@divisor+5)^0,f,c
  3208  0014CA  360F               	rlcf	(___aomod@divisor+6)^0,f,c
  3209  0014CC  3610               	rlcf	(___aomod@divisor+7)^0,f,c
  3210  0014CE  2A11               	incf	___aomod@counter^0,f,c
  3211  0014D0                     l1768:
  3212  0014D0  AE10               	btfss	(___aomod@divisor+7)^0,7,c
  3213  0014D2  EF6D  F00A         	goto	u831
  3214  0014D6  EF6F  F00A         	goto	u830
  3215  0014DA                     u831:
  3216  0014DA  EF5E  F00A         	goto	l1766
  3217  0014DE                     u830:
  3218  0014DE                     l1770:
  3219  0014DE  5009               	movf	___aomod@divisor^0,w,c
  3220  0014E0  5C01               	subwf	___aomod@dividend^0,w,c
  3221  0014E2  500A               	movf	(___aomod@divisor+1)^0,w,c
  3222  0014E4  5802               	subwfb	(___aomod@dividend+1)^0,w,c
  3223  0014E6  500B               	movf	(___aomod@divisor+2)^0,w,c
  3224  0014E8  5803               	subwfb	(___aomod@dividend+2)^0,w,c
  3225  0014EA  500C               	movf	(___aomod@divisor+3)^0,w,c
  3226  0014EC  5804               	subwfb	(___aomod@dividend+3)^0,w,c
  3227  0014EE  500D               	movf	(___aomod@divisor+4)^0,w,c
  3228  0014F0  5805               	subwfb	(___aomod@dividend+4)^0,w,c
  3229  0014F2  500E               	movf	(___aomod@divisor+5)^0,w,c
  3230  0014F4  5806               	subwfb	(___aomod@dividend+5)^0,w,c
  3231  0014F6  500F               	movf	(___aomod@divisor+6)^0,w,c
  3232  0014F8  5807               	subwfb	(___aomod@dividend+6)^0,w,c
  3233  0014FA  5010               	movf	(___aomod@divisor+7)^0,w,c
  3234  0014FC  5808               	subwfb	(___aomod@dividend+7)^0,w,c
  3235  0014FE  A0D8               	btfss	status,0,c
  3236  001500  EF84  F00A         	goto	u841
  3237  001504  EF86  F00A         	goto	u840
  3238  001508                     u841:
  3239  001508  EF96  F00A         	goto	l1774
  3240  00150C                     u840:
  3241  00150C  5009               	movf	___aomod@divisor^0,w,c
  3242  00150E  5E01               	subwf	___aomod@dividend^0,f,c
  3243  001510  500A               	movf	(___aomod@divisor+1)^0,w,c
  3244  001512  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
  3245  001514  500B               	movf	(___aomod@divisor+2)^0,w,c
  3246  001516  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
  3247  001518  500C               	movf	(___aomod@divisor+3)^0,w,c
  3248  00151A  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
  3249  00151C  500D               	movf	(___aomod@divisor+4)^0,w,c
  3250  00151E  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
  3251  001520  500E               	movf	(___aomod@divisor+5)^0,w,c
  3252  001522  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
  3253  001524  500F               	movf	(___aomod@divisor+6)^0,w,c
  3254  001526  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
  3255  001528  5010               	movf	(___aomod@divisor+7)^0,w,c
  3256  00152A  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
  3257  00152C                     l1774:
  3258  00152C  90D8               	bcf	status,0,c
  3259  00152E  3210               	rrcf	(___aomod@divisor+7)^0,f,c
  3260  001530  320F               	rrcf	(___aomod@divisor+6)^0,f,c
  3261  001532  320E               	rrcf	(___aomod@divisor+5)^0,f,c
  3262  001534  320D               	rrcf	(___aomod@divisor+4)^0,f,c
  3263  001536  320C               	rrcf	(___aomod@divisor+3)^0,f,c
  3264  001538  320B               	rrcf	(___aomod@divisor+2)^0,f,c
  3265  00153A  320A               	rrcf	(___aomod@divisor+1)^0,f,c
  3266  00153C  3209               	rrcf	___aomod@divisor^0,f,c
  3267  00153E  2E11               	decfsz	___aomod@counter^0,f,c
  3268  001540  EF6F  F00A         	goto	l1770
  3269  001544                     l1778:
  3270  001544  5012               	movf	___aomod@sign^0,w,c
  3271  001546  B4D8               	btfsc	status,2,c
  3272  001548  EFA8  F00A         	goto	u851
  3273  00154C  EFAA  F00A         	goto	u850
  3274  001550                     u851:
  3275  001550  EFBA  F00A         	goto	l1782
  3276  001554                     u850:
  3277  001554  1E08               	comf	(___aomod@dividend+7)^0,f,c
  3278  001556  1E07               	comf	(___aomod@dividend+6)^0,f,c
  3279  001558  1E06               	comf	(___aomod@dividend+5)^0,f,c
  3280  00155A  1E05               	comf	(___aomod@dividend+4)^0,f,c
  3281  00155C  1E04               	comf	(___aomod@dividend+3)^0,f,c
  3282  00155E  1E03               	comf	(___aomod@dividend+2)^0,f,c
  3283  001560  1E02               	comf	(___aomod@dividend+1)^0,f,c
  3284  001562  6C01               	negf	___aomod@dividend^0,c
  3285  001564  0E00               	movlw	0
  3286  001566  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  3287  001568  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  3288  00156A  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  3289  00156C  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  3290  00156E  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  3291  001570  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  3292  001572  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  3293  001574                     l1782:
  3294  001574  C001  F001         	movff	___aomod@dividend,?___aomod
  3295  001578  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  3296  00157C  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  3297  001580  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  3298  001584  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  3299  001588  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  3300  00158C  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  3301  001590  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  3302  001594  0012               	return		;funcret
  3303  001596                     __end_of___aomod:
  3304                           	callstack 0
  3305                           
  3306 ;; *************** function ___aodiv *****************
  3307 ;; Defined at:
  3308 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\aodiv.c"
  3309 ;; Parameters:    Size  Location     Type
  3310 ;;  dividend        8    0[COMRAM] long long 
  3311 ;;  divisor         8    8[COMRAM] long long 
  3312 ;; Auto vars:     Size  Location     Type
  3313 ;;  quotient        8   18[COMRAM] long long 
  3314 ;;  sign            1   17[COMRAM] unsigned char 
  3315 ;;  counter         1   16[COMRAM] unsigned char 
  3316 ;; Return value:  Size  Location     Type
  3317 ;;                  8    0[COMRAM] long long 
  3318 ;; Registers used:
  3319 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3320 ;; Tracked objects:
  3321 ;;		On entry : 0/0
  3322 ;;		On exit  : 0/0
  3323 ;;		Unchanged: 0/0
  3324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3325 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3326 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3327 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3328 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3329 ;;Total ram usage:       26 bytes
  3330 ;; Hardware stack levels used: 1
  3331 ;; This function calls:
  3332 ;;		Nothing
  3333 ;; This function is called by:
  3334 ;;		_dtoa
  3335 ;; This function uses a non-reentrant model
  3336 ;;
  3337                           
  3338                           	psect	text23
  3339  0012AA                     __ptext23:
  3340                           	callstack 0
  3341  0012AA                     ___aodiv:
  3342                           	callstack 25
  3343  0012AA  0E00               	movlw	0
  3344  0012AC  6E12               	movwf	___aodiv@sign^0,c
  3345  0012AE  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
  3346  0012B0  EF5E  F009         	goto	u730
  3347  0012B4  EF5C  F009         	goto	u731
  3348  0012B8                     u731:
  3349  0012B8  EF70  F009         	goto	l1714
  3350  0012BC                     u730:
  3351  0012BC  1E10               	comf	(___aodiv@divisor+7)^0,f,c
  3352  0012BE  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
  3353  0012C0  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
  3354  0012C2  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
  3355  0012C4  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
  3356  0012C6  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
  3357  0012C8  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
  3358  0012CA  6C09               	negf	___aodiv@divisor^0,c
  3359  0012CC  0E00               	movlw	0
  3360  0012CE  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
  3361  0012D0  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
  3362  0012D2  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
  3363  0012D4  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
  3364  0012D6  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
  3365  0012D8  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
  3366  0012DA  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
  3367  0012DC  0E01               	movlw	1
  3368  0012DE  6E12               	movwf	___aodiv@sign^0,c
  3369  0012E0                     l1714:
  3370  0012E0  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
  3371  0012E2  EF77  F009         	goto	u740
  3372  0012E6  EF75  F009         	goto	u741
  3373  0012EA                     u741:
  3374  0012EA  EF89  F009         	goto	l1720
  3375  0012EE                     u740:
  3376  0012EE  1E08               	comf	(___aodiv@dividend+7)^0,f,c
  3377  0012F0  1E07               	comf	(___aodiv@dividend+6)^0,f,c
  3378  0012F2  1E06               	comf	(___aodiv@dividend+5)^0,f,c
  3379  0012F4  1E05               	comf	(___aodiv@dividend+4)^0,f,c
  3380  0012F6  1E04               	comf	(___aodiv@dividend+3)^0,f,c
  3381  0012F8  1E03               	comf	(___aodiv@dividend+2)^0,f,c
  3382  0012FA  1E02               	comf	(___aodiv@dividend+1)^0,f,c
  3383  0012FC  6C01               	negf	___aodiv@dividend^0,c
  3384  0012FE  0E00               	movlw	0
  3385  001300  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
  3386  001302  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
  3387  001304  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
  3388  001306  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
  3389  001308  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
  3390  00130A  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
  3391  00130C  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
  3392  00130E  0E01               	movlw	1
  3393  001310  1A12               	xorwf	___aodiv@sign^0,f,c
  3394  001312                     l1720:
  3395  001312  EE20  F013         	lfsr	2,___aodiv@quotient
  3396  001316  0E07               	movlw	7
  3397  001318                     u751:
  3398  001318  6ADE               	clrf	postinc2,c
  3399  00131A  06E8               	decf	wreg,f,c
  3400  00131C  E2FD               	bc	u751
  3401  00131E  5009               	movf	___aodiv@divisor^0,w,c
  3402  001320  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
  3403  001322  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
  3404  001324  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
  3405  001326  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
  3406  001328  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
  3407  00132A  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
  3408  00132C  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
  3409  00132E  B4D8               	btfsc	status,2,c
  3410  001330  EF9C  F009         	goto	u761
  3411  001334  EF9E  F009         	goto	u760
  3412  001338                     u761:
  3413  001338  EFF0  F009         	goto	l1742
  3414  00133C                     u760:
  3415  00133C  0E01               	movlw	1
  3416  00133E  6E11               	movwf	___aodiv@counter^0,c
  3417  001340  EFAC  F009         	goto	l1728
  3418  001344                     l1726:
  3419  001344  90D8               	bcf	status,0,c
  3420  001346  3609               	rlcf	___aodiv@divisor^0,f,c
  3421  001348  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
  3422  00134A  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
  3423  00134C  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
  3424  00134E  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
  3425  001350  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
  3426  001352  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
  3427  001354  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
  3428  001356  2A11               	incf	___aodiv@counter^0,f,c
  3429  001358                     l1728:
  3430  001358  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
  3431  00135A  EFB1  F009         	goto	u771
  3432  00135E  EFB3  F009         	goto	u770
  3433  001362                     u771:
  3434  001362  EFA2  F009         	goto	l1726
  3435  001366                     u770:
  3436  001366                     l1730:
  3437  001366  90D8               	bcf	status,0,c
  3438  001368  3613               	rlcf	___aodiv@quotient^0,f,c
  3439  00136A  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
  3440  00136C  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
  3441  00136E  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
  3442  001370  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
  3443  001372  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
  3444  001374  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
  3445  001376  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
  3446  001378  5009               	movf	___aodiv@divisor^0,w,c
  3447  00137A  5C01               	subwf	___aodiv@dividend^0,w,c
  3448  00137C  500A               	movf	(___aodiv@divisor+1)^0,w,c
  3449  00137E  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
  3450  001380  500B               	movf	(___aodiv@divisor+2)^0,w,c
  3451  001382  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
  3452  001384  500C               	movf	(___aodiv@divisor+3)^0,w,c
  3453  001386  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
  3454  001388  500D               	movf	(___aodiv@divisor+4)^0,w,c
  3455  00138A  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
  3456  00138C  500E               	movf	(___aodiv@divisor+5)^0,w,c
  3457  00138E  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
  3458  001390  500F               	movf	(___aodiv@divisor+6)^0,w,c
  3459  001392  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
  3460  001394  5010               	movf	(___aodiv@divisor+7)^0,w,c
  3461  001396  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
  3462  001398  A0D8               	btfss	status,0,c
  3463  00139A  EFD1  F009         	goto	u781
  3464  00139E  EFD3  F009         	goto	u780
  3465  0013A2                     u781:
  3466  0013A2  EFE4  F009         	goto	l1738
  3467  0013A6                     u780:
  3468  0013A6  5009               	movf	___aodiv@divisor^0,w,c
  3469  0013A8  5E01               	subwf	___aodiv@dividend^0,f,c
  3470  0013AA  500A               	movf	(___aodiv@divisor+1)^0,w,c
  3471  0013AC  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
  3472  0013AE  500B               	movf	(___aodiv@divisor+2)^0,w,c
  3473  0013B0  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
  3474  0013B2  500C               	movf	(___aodiv@divisor+3)^0,w,c
  3475  0013B4  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
  3476  0013B6  500D               	movf	(___aodiv@divisor+4)^0,w,c
  3477  0013B8  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
  3478  0013BA  500E               	movf	(___aodiv@divisor+5)^0,w,c
  3479  0013BC  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
  3480  0013BE  500F               	movf	(___aodiv@divisor+6)^0,w,c
  3481  0013C0  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
  3482  0013C2  5010               	movf	(___aodiv@divisor+7)^0,w,c
  3483  0013C4  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
  3484  0013C6  8013               	bsf	___aodiv@quotient^0,0,c
  3485  0013C8                     l1738:
  3486  0013C8  90D8               	bcf	status,0,c
  3487  0013CA  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
  3488  0013CC  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
  3489  0013CE  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
  3490  0013D0  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
  3491  0013D2  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
  3492  0013D4  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
  3493  0013D6  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
  3494  0013D8  3209               	rrcf	___aodiv@divisor^0,f,c
  3495  0013DA  2E11               	decfsz	___aodiv@counter^0,f,c
  3496  0013DC  EFB3  F009         	goto	l1730
  3497  0013E0                     l1742:
  3498  0013E0  5012               	movf	___aodiv@sign^0,w,c
  3499  0013E2  B4D8               	btfsc	status,2,c
  3500  0013E4  EFF6  F009         	goto	u791
  3501  0013E8  EFF8  F009         	goto	u790
  3502  0013EC                     u791:
  3503  0013EC  EF08  F00A         	goto	l1746
  3504  0013F0                     u790:
  3505  0013F0  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
  3506  0013F2  1E19               	comf	(___aodiv@quotient+6)^0,f,c
  3507  0013F4  1E18               	comf	(___aodiv@quotient+5)^0,f,c
  3508  0013F6  1E17               	comf	(___aodiv@quotient+4)^0,f,c
  3509  0013F8  1E16               	comf	(___aodiv@quotient+3)^0,f,c
  3510  0013FA  1E15               	comf	(___aodiv@quotient+2)^0,f,c
  3511  0013FC  1E14               	comf	(___aodiv@quotient+1)^0,f,c
  3512  0013FE  6C13               	negf	___aodiv@quotient^0,c
  3513  001400  0E00               	movlw	0
  3514  001402  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
  3515  001404  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
  3516  001406  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
  3517  001408  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
  3518  00140A  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
  3519  00140C  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
  3520  00140E  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
  3521  001410                     l1746:
  3522  001410  C013  F001         	movff	___aodiv@quotient,?___aodiv
  3523  001414  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  3524  001418  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  3525  00141C  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  3526  001420  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  3527  001424  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  3528  001428  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  3529  00142C  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  3530  001430  0012               	return		;funcret
  3531  001432                     __end_of___aodiv:
  3532                           	callstack 0
  3533                           
  3534 ;; *************** function _sendStringSerial4 *****************
  3535 ;; Defined at:
  3536 ;;		line 36 in file "serial.c"
  3537 ;; Parameters:    Size  Location     Type
  3538 ;;  string          2    1[COMRAM] PTR unsigned char 
  3539 ;;		 -> color_display@buf(80), 
  3540 ;; Auto vars:     Size  Location     Type
  3541 ;;		None
  3542 ;; Return value:  Size  Location     Type
  3543 ;;                  1    wreg      void 
  3544 ;; Registers used:
  3545 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3546 ;; Tracked objects:
  3547 ;;		On entry : 0/0
  3548 ;;		On exit  : 0/0
  3549 ;;		Unchanged: 0/0
  3550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3551 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3552 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3553 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3554 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3555 ;;Total ram usage:        2 bytes
  3556 ;; Hardware stack levels used: 1
  3557 ;; Hardware stack levels required when called: 1
  3558 ;; This function calls:
  3559 ;;		_sendCharSerial4
  3560 ;; This function is called by:
  3561 ;;		_color_display
  3562 ;; This function uses a non-reentrant model
  3563 ;;
  3564                           
  3565                           	psect	text24
  3566  001C4E                     __ptext24:
  3567                           	callstack 0
  3568  001C4E                     _sendStringSerial4:
  3569                           	callstack 28
  3570  001C4E                     
  3571                           ;serial.c: 38:     while(*string != 0){
  3572  001C4E  EF32  F00E         	goto	l2020
  3573  001C52                     l2016:
  3574                           
  3575                           ;serial.c: 39:   sendCharSerial4(*string++);}
  3576  001C52  C002  FFD9         	movff	sendStringSerial4@string,fsr2l
  3577  001C56  C003  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  3578  001C5A  50DF               	movf	indf2,w,c
  3579  001C5C  EC9A  F00E         	call	_sendCharSerial4
  3580  001C60  4A02               	infsnz	sendStringSerial4@string^0,f,c
  3581  001C62  2A03               	incf	(sendStringSerial4@string+1)^0,f,c
  3582  001C64                     l2020:
  3583                           
  3584                           ;serial.c: 38:     while(*string != 0){
  3585  001C64  C002  FFD9         	movff	sendStringSerial4@string,fsr2l
  3586  001C68  C003  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  3587  001C6C  50DF               	movf	indf2,w,c
  3588  001C6E  A4D8               	btfss	status,2,c
  3589  001C70  EF3C  F00E         	goto	u1161
  3590  001C74  EF3E  F00E         	goto	u1160
  3591  001C78                     u1161:
  3592  001C78  EF29  F00E         	goto	l2016
  3593  001C7C                     u1160:
  3594  001C7C  0012               	return		;funcret
  3595  001C7E                     __end_of_sendStringSerial4:
  3596                           	callstack 0
  3597                           
  3598 ;; *************** function _sendCharSerial4 *****************
  3599 ;; Defined at:
  3600 ;;		line 29 in file "serial.c"
  3601 ;; Parameters:    Size  Location     Type
  3602 ;;  charToSend      1    wreg     unsigned char 
  3603 ;; Auto vars:     Size  Location     Type
  3604 ;;  charToSend      1    0[COMRAM] unsigned char 
  3605 ;; Return value:  Size  Location     Type
  3606 ;;                  1    wreg      void 
  3607 ;; Registers used:
  3608 ;;		wreg
  3609 ;; Tracked objects:
  3610 ;;		On entry : 0/0
  3611 ;;		On exit  : 0/0
  3612 ;;		Unchanged: 0/0
  3613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3614 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3615 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3616 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3617 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3618 ;;Total ram usage:        1 bytes
  3619 ;; Hardware stack levels used: 1
  3620 ;; This function calls:
  3621 ;;		Nothing
  3622 ;; This function is called by:
  3623 ;;		_sendStringSerial4
  3624 ;; This function uses a non-reentrant model
  3625 ;;
  3626                           
  3627                           	psect	text25
  3628  001D34                     __ptext25:
  3629                           	callstack 0
  3630  001D34                     _sendCharSerial4:
  3631                           	callstack 28
  3632                           
  3633                           ;incstack = 0
  3634                           ;sendCharSerial4@charToSend stored from wreg
  3635  001D34  6E01               	movwf	sendCharSerial4@charToSend^0,c
  3636  001D36                     l237:
  3637  001D36  010E               	movlb	14	; () banked
  3638  001D38  A537               	btfss	55,2,b	;volatile
  3639  001D3A  EFA1  F00E         	goto	u1141
  3640  001D3E  EFA3  F00E         	goto	u1140
  3641  001D42                     u1141:
  3642  001D42  EF9B  F00E         	goto	l237
  3643  001D46                     u1140:
  3644  001D46                     
  3645                           ; BSR set to: 14
  3646                           ;serial.c: 31:     TX4REG = charToSend;
  3647  001D46  C001  FEE4         	movff	sendCharSerial4@charToSend,3812	;volatile
  3648  001D4A                     
  3649                           ; BSR set to: 14
  3650  001D4A  0012               	return		;funcret
  3651  001D4C                     __end_of_sendCharSerial4:
  3652                           	callstack 0
  3653                           
  3654 ;; *************** function _color_click_init *****************
  3655 ;; Defined at:
  3656 ;;		line 8 in file "color.c"
  3657 ;; Parameters:    Size  Location     Type
  3658 ;;		None
  3659 ;; Auto vars:     Size  Location     Type
  3660 ;;		None
  3661 ;; Return value:  Size  Location     Type
  3662 ;;                  1    wreg      void 
  3663 ;; Registers used:
  3664 ;;		wreg, status,2, status,0, cstack
  3665 ;; Tracked objects:
  3666 ;;		On entry : 0/0
  3667 ;;		On exit  : 0/0
  3668 ;;		Unchanged: 0/0
  3669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3670 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3671 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3672 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3673 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3674 ;;Total ram usage:        1 bytes
  3675 ;; Hardware stack levels used: 1
  3676 ;; Hardware stack levels required when called: 3
  3677 ;; This function calls:
  3678 ;;		_I2C_2_Master_Init
  3679 ;;		_color_writetoaddr
  3680 ;; This function is called by:
  3681 ;;		_main
  3682 ;; This function uses a non-reentrant model
  3683 ;;
  3684                           
  3685                           	psect	text26
  3686  001C1A                     __ptext26:
  3687                           	callstack 0
  3688  001C1A                     _color_click_init:
  3689                           	callstack 27
  3690  001C1A                     
  3691                           ;color.c: 11:     I2C_2_Master_Init();
  3692  001C1A  EC3F  F00E         	call	_I2C_2_Master_Init	;wreg free
  3693  001C1E                     
  3694                           ;color.c: 14:   color_writetoaddr(0x00, 0x01);
  3695  001C1E  0E01               	movlw	1
  3696  001C20  6E03               	movwf	color_writetoaddr@value^0,c
  3697  001C22  0E00               	movlw	0
  3698  001C24  EC7B  F00E         	call	_color_writetoaddr
  3699  001C28                     
  3700                           ;color.c: 15:     _delay((unsigned long)((3)*(64000000/4000.0)));
  3701  001C28  0E3F               	movlw	63
  3702  001C2A  6E05               	movwf	??_color_click_init^0,c
  3703  001C2C  0E55               	movlw	85
  3704  001C2E                     u1277:
  3705  001C2E  2EE8               	decfsz	wreg,f,c
  3706  001C30  D7FE               	bra	u1277
  3707  001C32  2E05               	decfsz	??_color_click_init^0,f,c
  3708  001C34  D7FC               	bra	u1277
  3709  001C36  F000               	nop	
  3710  001C38                     
  3711                           ;color.c: 18:  color_writetoaddr(0x00, 0x03);
  3712  001C38  0E03               	movlw	3
  3713  001C3A  6E03               	movwf	color_writetoaddr@value^0,c
  3714  001C3C  0E00               	movlw	0
  3715  001C3E  EC7B  F00E         	call	_color_writetoaddr
  3716  001C42                     
  3717                           ;color.c: 21:  color_writetoaddr(0x01, 0xD5);
  3718  001C42  0ED5               	movlw	213
  3719  001C44  6E03               	movwf	color_writetoaddr@value^0,c
  3720  001C46  0E01               	movlw	1
  3721  001C48  EC7B  F00E         	call	_color_writetoaddr
  3722  001C4C  0012               	return		;funcret
  3723  001C4E                     __end_of_color_click_init:
  3724                           	callstack 0
  3725                           
  3726 ;; *************** function _color_writetoaddr *****************
  3727 ;; Defined at:
  3728 ;;		line 24 in file "color.c"
  3729 ;; Parameters:    Size  Location     Type
  3730 ;;  address         1    wreg     unsigned char 
  3731 ;;  value           1    2[COMRAM] unsigned char 
  3732 ;; Auto vars:     Size  Location     Type
  3733 ;;  address         1    3[COMRAM] unsigned char 
  3734 ;; Return value:  Size  Location     Type
  3735 ;;                  1    wreg      void 
  3736 ;; Registers used:
  3737 ;;		wreg, status,2, status,0, cstack
  3738 ;; Tracked objects:
  3739 ;;		On entry : 0/0
  3740 ;;		On exit  : 0/0
  3741 ;;		Unchanged: 0/0
  3742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3743 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3744 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3745 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3746 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3747 ;;Total ram usage:        2 bytes
  3748 ;; Hardware stack levels used: 1
  3749 ;; Hardware stack levels required when called: 2
  3750 ;; This function calls:
  3751 ;;		_I2C_2_Master_Start
  3752 ;;		_I2C_2_Master_Stop
  3753 ;;		_I2C_2_Master_Write
  3754 ;; This function is called by:
  3755 ;;		_color_click_init
  3756 ;; This function uses a non-reentrant model
  3757 ;;
  3758                           
  3759                           	psect	text27
  3760  001CF6                     __ptext27:
  3761                           	callstack 0
  3762  001CF6                     _color_writetoaddr:
  3763                           	callstack 27
  3764                           
  3765                           ;incstack = 0
  3766                           ;color_writetoaddr@address stored from wreg
  3767  001CF6  6E04               	movwf	color_writetoaddr@address^0,c
  3768  001CF8                     
  3769                           ;color.c: 25:     I2C_2_Master_Start();
  3770  001CF8  ECB6  F00E         	call	_I2C_2_Master_Start	;wreg free
  3771                           
  3772                           ;color.c: 26:     I2C_2_Master_Write(0x52 | 0x00);
  3773  001CFC  0E52               	movlw	82
  3774  001CFE  ECA6  F00E         	call	_I2C_2_Master_Write
  3775                           
  3776                           ;color.c: 27:     I2C_2_Master_Write(0x80 | address);
  3777  001D02  5004               	movf	color_writetoaddr@address^0,w,c
  3778  001D04  0980               	iorlw	128
  3779  001D06  ECA6  F00E         	call	_I2C_2_Master_Write
  3780                           
  3781                           ;color.c: 28:     I2C_2_Master_Write(value);
  3782  001D0A  5003               	movf	color_writetoaddr@value^0,w,c
  3783  001D0C  ECA6  F00E         	call	_I2C_2_Master_Write
  3784                           
  3785                           ;color.c: 29:     I2C_2_Master_Stop();
  3786  001D10  ECB1  F00E         	call	_I2C_2_Master_Stop	;wreg free
  3787  001D14  0012               	return		;funcret
  3788  001D16                     __end_of_color_writetoaddr:
  3789                           	callstack 0
  3790                           
  3791 ;; *************** function _I2C_2_Master_Write *****************
  3792 ;; Defined at:
  3793 ;;		line 45 in file "i2c.c"
  3794 ;; Parameters:    Size  Location     Type
  3795 ;;  data_byte       1    wreg     unsigned char 
  3796 ;; Auto vars:     Size  Location     Type
  3797 ;;  data_byte       1    1[COMRAM] unsigned char 
  3798 ;; Return value:  Size  Location     Type
  3799 ;;                  1    wreg      void 
  3800 ;; Registers used:
  3801 ;;		wreg, status,2, status,0, cstack
  3802 ;; Tracked objects:
  3803 ;;		On entry : 0/0
  3804 ;;		On exit  : 0/0
  3805 ;;		Unchanged: 0/0
  3806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3807 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3808 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3809 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3810 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3811 ;;Total ram usage:        1 bytes
  3812 ;; Hardware stack levels used: 1
  3813 ;; Hardware stack levels required when called: 1
  3814 ;; This function calls:
  3815 ;;		_I2C_2_Master_Idle
  3816 ;; This function is called by:
  3817 ;;		_color_writetoaddr
  3818 ;;		_color_read_Red
  3819 ;;		_color_read_Blue
  3820 ;;		_color_read_Green
  3821 ;;		_color_read_Clear
  3822 ;; This function uses a non-reentrant model
  3823 ;;
  3824                           
  3825                           	psect	text28
  3826  001D4C                     __ptext28:
  3827                           	callstack 0
  3828  001D4C                     _I2C_2_Master_Write:
  3829                           	callstack 26
  3830                           
  3831                           ;incstack = 0
  3832                           ;I2C_2_Master_Write@data_byte stored from wreg
  3833  001D4C  6E02               	movwf	I2C_2_Master_Write@data_byte^0,c
  3834  001D4E                     
  3835                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  3836  001D4E  EC54  F00E         	call	_I2C_2_Master_Idle	;wreg free
  3837  001D52                     
  3838                           ;i2c.c: 48:   SSP2BUF = data_byte;
  3839  001D52  C002  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  3840  001D56  0012               	return		;funcret
  3841  001D58                     __end_of_I2C_2_Master_Write:
  3842                           	callstack 0
  3843                           
  3844 ;; *************** function _I2C_2_Master_Stop *****************
  3845 ;; Defined at:
  3846 ;;		line 39 in file "i2c.c"
  3847 ;; Parameters:    Size  Location     Type
  3848 ;;		None
  3849 ;; Auto vars:     Size  Location     Type
  3850 ;;		None
  3851 ;; Return value:  Size  Location     Type
  3852 ;;                  1    wreg      void 
  3853 ;; Registers used:
  3854 ;;		wreg, status,2, status,0, cstack
  3855 ;; Tracked objects:
  3856 ;;		On entry : 0/0
  3857 ;;		On exit  : 0/0
  3858 ;;		Unchanged: 0/0
  3859 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3860 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3861 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3862 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3863 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3864 ;;Total ram usage:        0 bytes
  3865 ;; Hardware stack levels used: 1
  3866 ;; Hardware stack levels required when called: 1
  3867 ;; This function calls:
  3868 ;;		_I2C_2_Master_Idle
  3869 ;; This function is called by:
  3870 ;;		_color_writetoaddr
  3871 ;;		_color_read_Red
  3872 ;;		_color_read_Blue
  3873 ;;		_color_read_Green
  3874 ;;		_color_read_Clear
  3875 ;; This function uses a non-reentrant model
  3876 ;;
  3877                           
  3878                           	psect	text29
  3879  001D62                     __ptext29:
  3880                           	callstack 0
  3881  001D62                     _I2C_2_Master_Stop:
  3882                           	callstack 26
  3883  001D62                     
  3884                           ;i2c.c: 41:   I2C_2_Master_Idle();
  3885  001D62  EC54  F00E         	call	_I2C_2_Master_Idle	;wreg free
  3886  001D66                     
  3887                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  3888  001D66  010E               	movlb	14	; () banked
  3889  001D68  85DA               	bsf	218,2,b	;volatile
  3890  001D6A                     
  3891                           ; BSR set to: 14
  3892  001D6A  0012               	return		;funcret
  3893  001D6C                     __end_of_I2C_2_Master_Stop:
  3894                           	callstack 0
  3895                           
  3896 ;; *************** function _I2C_2_Master_Start *****************
  3897 ;; Defined at:
  3898 ;;		line 27 in file "i2c.c"
  3899 ;; Parameters:    Size  Location     Type
  3900 ;;		None
  3901 ;; Auto vars:     Size  Location     Type
  3902 ;;		None
  3903 ;; Return value:  Size  Location     Type
  3904 ;;                  1    wreg      void 
  3905 ;; Registers used:
  3906 ;;		wreg, status,2, status,0, cstack
  3907 ;; Tracked objects:
  3908 ;;		On entry : 0/0
  3909 ;;		On exit  : 0/0
  3910 ;;		Unchanged: 0/0
  3911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3912 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3913 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3914 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3915 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3916 ;;Total ram usage:        0 bytes
  3917 ;; Hardware stack levels used: 1
  3918 ;; Hardware stack levels required when called: 1
  3919 ;; This function calls:
  3920 ;;		_I2C_2_Master_Idle
  3921 ;; This function is called by:
  3922 ;;		_color_writetoaddr
  3923 ;;		_color_read_Red
  3924 ;;		_color_read_Blue
  3925 ;;		_color_read_Green
  3926 ;;		_color_read_Clear
  3927 ;; This function uses a non-reentrant model
  3928 ;;
  3929                           
  3930                           	psect	text30
  3931  001D6C                     __ptext30:
  3932                           	callstack 0
  3933  001D6C                     _I2C_2_Master_Start:
  3934                           	callstack 26
  3935  001D6C                     
  3936                           ;i2c.c: 29:   I2C_2_Master_Idle();
  3937  001D6C  EC54  F00E         	call	_I2C_2_Master_Idle	;wreg free
  3938  001D70                     
  3939                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  3940  001D70  010E               	movlb	14	; () banked
  3941  001D72  81DA               	bsf	218,0,b	;volatile
  3942  001D74                     
  3943                           ; BSR set to: 14
  3944  001D74  0012               	return		;funcret
  3945  001D76                     __end_of_I2C_2_Master_Start:
  3946                           	callstack 0
  3947                           
  3948 ;; *************** function _I2C_2_Master_Idle *****************
  3949 ;; Defined at:
  3950 ;;		line 22 in file "i2c.c"
  3951 ;; Parameters:    Size  Location     Type
  3952 ;;		None
  3953 ;; Auto vars:     Size  Location     Type
  3954 ;;		None
  3955 ;; Return value:  Size  Location     Type
  3956 ;;                  1    wreg      void 
  3957 ;; Registers used:
  3958 ;;		wreg, status,2, status,0
  3959 ;; Tracked objects:
  3960 ;;		On entry : 0/0
  3961 ;;		On exit  : 0/0
  3962 ;;		Unchanged: 0/0
  3963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3964 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3965 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3966 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3967 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3968 ;;Total ram usage:        1 bytes
  3969 ;; Hardware stack levels used: 1
  3970 ;; This function calls:
  3971 ;;		Nothing
  3972 ;; This function is called by:
  3973 ;;		_I2C_2_Master_Start
  3974 ;;		_I2C_2_Master_RepStart
  3975 ;;		_I2C_2_Master_Stop
  3976 ;;		_I2C_2_Master_Write
  3977 ;;		_I2C_2_Master_Read
  3978 ;; This function uses a non-reentrant model
  3979 ;;
  3980                           
  3981                           	psect	text31
  3982  001CA8                     __ptext31:
  3983                           	callstack 0
  3984  001CA8                     _I2C_2_Master_Idle:
  3985                           	callstack 26
  3986  001CA8                     l95:
  3987  001CA8  010E               	movlb	14	; () banked
  3988  001CAA  B5D8               	btfsc	216,2,b	;volatile
  3989  001CAC  EF5A  F00E         	goto	u911
  3990  001CB0  EF5C  F00E         	goto	u910
  3991  001CB4                     u911:
  3992  001CB4  EF54  F00E         	goto	l95
  3993  001CB8                     u910:
  3994  001CB8                     
  3995                           ; BSR set to: 14
  3996  001CB8  CEDA F001          	movff	3802,??_I2C_2_Master_Idle	;volatile
  3997  001CBC  0E1F               	movlw	31
  3998  001CBE  1601               	andwf	??_I2C_2_Master_Idle^0,f,c
  3999  001CC0  A4D8               	btfss	status,2,c
  4000  001CC2  EF65  F00E         	goto	u921
  4001  001CC6  EF67  F00E         	goto	u920
  4002  001CCA                     u921:
  4003  001CCA  EF54  F00E         	goto	l95
  4004  001CCE                     u920:
  4005  001CCE                     
  4006                           ; BSR set to: 14
  4007  001CCE  0012               	return		;funcret
  4008  001CD0                     __end_of_I2C_2_Master_Idle:
  4009                           	callstack 0
  4010                           
  4011 ;; *************** function _I2C_2_Master_Init *****************
  4012 ;; Defined at:
  4013 ;;		line 4 in file "i2c.c"
  4014 ;; Parameters:    Size  Location     Type
  4015 ;;		None
  4016 ;; Auto vars:     Size  Location     Type
  4017 ;;		None
  4018 ;; Return value:  Size  Location     Type
  4019 ;;                  1    wreg      void 
  4020 ;; Registers used:
  4021 ;;		wreg, status,2
  4022 ;; Tracked objects:
  4023 ;;		On entry : 0/0
  4024 ;;		On exit  : 0/0
  4025 ;;		Unchanged: 0/0
  4026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4027 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4028 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4029 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4030 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4031 ;;Total ram usage:        0 bytes
  4032 ;; Hardware stack levels used: 1
  4033 ;; This function calls:
  4034 ;;		Nothing
  4035 ;; This function is called by:
  4036 ;;		_color_click_init
  4037 ;;		_main
  4038 ;; This function uses a non-reentrant model
  4039 ;;
  4040                           
  4041                           	psect	text32
  4042  001C7E                     __ptext32:
  4043                           	callstack 0
  4044  001C7E                     _I2C_2_Master_Init:
  4045                           	callstack 29
  4046  001C7E                     
  4047                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  4048  001C7E  010E               	movlb	14	; () banked
  4049  001C80  51D9               	movf	217,w,b	;volatile
  4050  001C82  0BF0               	andlw	-16
  4051  001C84  0908               	iorlw	8
  4052  001C86  6FD9               	movwf	217,b	;volatile
  4053  001C88                     
  4054                           ; BSR set to: 14
  4055                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  4056  001C88  8BD9               	bsf	217,5,b	;volatile
  4057                           
  4058                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  4059  001C8A  0E9F               	movlw	159
  4060  001C8C  6FD6               	movwf	214,b	;volatile
  4061  001C8E                     
  4062                           ; BSR set to: 14
  4063                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  4064  001C8E  8A84               	bsf	132,5,c	;volatile
  4065  001C90                     
  4066                           ; BSR set to: 14
  4067                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  4068  001C90  8C84               	bsf	132,6,c	;volatile
  4069  001C92                     
  4070                           ; BSR set to: 14
  4071                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  4072  001C92  9BA7               	bcf	167,5,b	;volatile
  4073  001C94                     
  4074                           ; BSR set to: 14
  4075                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  4076  001C94  9DA7               	bcf	167,6,b	;volatile
  4077                           
  4078                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  4079  001C96  0E1D               	movlw	29
  4080  001C98  6F1D               	movwf	29,b	;volatile
  4081                           
  4082                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  4083  001C9A  0E1E               	movlw	30
  4084  001C9C  6F1C               	movwf	28,b	;volatile
  4085                           
  4086                           ;i2c.c: 18:   RD5PPS=0x1C;
  4087  001C9E  0E1C               	movlw	28
  4088  001CA0  6F6F               	movwf	111,b	;volatile
  4089                           
  4090                           ;i2c.c: 19:   RD6PPS=0x1B;
  4091  001CA2  0E1B               	movlw	27
  4092  001CA4  6F70               	movwf	112,b	;volatile
  4093  001CA6                     
  4094                           ; BSR set to: 14
  4095  001CA6  0012               	return		;funcret
  4096  001CA8                     __end_of_I2C_2_Master_Init:
  4097                           	callstack 0
  4098                           
  4099                           	psect	rparam
  4100  0000                     
  4101                           	psect	idloc
  4102                           
  4103                           ;Config register IDLOC0 @ 0x200000
  4104                           ;	unspecified, using default values
  4105  200000                     	org	2097152
  4106  200000  0FFF               	dw	4095
  4107                           
  4108                           ;Config register IDLOC1 @ 0x200002
  4109                           ;	unspecified, using default values
  4110  200002                     	org	2097154
  4111  200002  0FFF               	dw	4095
  4112                           
  4113                           ;Config register IDLOC2 @ 0x200004
  4114                           ;	unspecified, using default values
  4115  200004                     	org	2097156
  4116  200004  0FFF               	dw	4095
  4117                           
  4118                           ;Config register IDLOC3 @ 0x200006
  4119                           ;	unspecified, using default values
  4120  200006                     	org	2097158
  4121  200006  0FFF               	dw	4095
  4122                           
  4123                           ;Config register IDLOC4 @ 0x200008
  4124                           ;	unspecified, using default values
  4125  200008                     	org	2097160
  4126  200008  0FFF               	dw	4095
  4127                           
  4128                           ;Config register IDLOC5 @ 0x20000A
  4129                           ;	unspecified, using default values
  4130  20000A                     	org	2097162
  4131  20000A  0FFF               	dw	4095
  4132                           
  4133                           ;Config register IDLOC6 @ 0x20000C
  4134                           ;	unspecified, using default values
  4135  20000C                     	org	2097164
  4136  20000C  0FFF               	dw	4095
  4137                           
  4138                           ;Config register IDLOC7 @ 0x20000E
  4139                           ;	unspecified, using default values
  4140  20000E                     	org	2097166
  4141  20000E  0FFF               	dw	4095
  4142                           
  4143                           	psect	config
  4144                           
  4145                           ;Config register CONFIG1L @ 0x300000
  4146                           ;	External Oscillator mode Selection bits
  4147                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  4148                           ;	Power-up default value for COSC bits
  4149                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  4150  300000                     	org	3145728
  4151  300000  AA                 	db	170
  4152                           
  4153                           ;Config register CONFIG1H @ 0x300001
  4154                           ;	unspecified, using default values
  4155                           ;	Clock Out Enable bit
  4156                           ;	CLKOUTEN = 0x1, unprogrammed default
  4157                           ;	Clock Switch Enable bit
  4158                           ;	CSWEN = 0x1, unprogrammed default
  4159                           ;	Fail-Safe Clock Monitor Enable bit
  4160                           ;	FCMEN = 0x1, unprogrammed default
  4161  300001                     	org	3145729
  4162  300001  FF                 	db	255
  4163                           
  4164                           ;Config register CONFIG2L @ 0x300002
  4165                           ;	unspecified, using default values
  4166                           ;	Master Clear Enable bit
  4167                           ;	MCLRE = 0x1, unprogrammed default
  4168                           ;	Power-up Timer Enable bit
  4169                           ;	PWRTE = 0x1, unprogrammed default
  4170                           ;	Low-power BOR enable bit
  4171                           ;	LPBOREN = 0x1, unprogrammed default
  4172                           ;	Brown-out Reset Enable bits
  4173                           ;	BOREN = 0x3, unprogrammed default
  4174  300002                     	org	3145730
  4175  300002  FF                 	db	255
  4176                           
  4177                           ;Config register CONFIG2H @ 0x300003
  4178                           ;	unspecified, using default values
  4179                           ;	Brown Out Reset Voltage selection bits
  4180                           ;	BORV = 0x3, unprogrammed default
  4181                           ;	ZCD Disable bit
  4182                           ;	ZCD = 0x1, unprogrammed default
  4183                           ;	PPSLOCK bit One-Way Set Enable bit
  4184                           ;	PPS1WAY = 0x1, unprogrammed default
  4185                           ;	Stack Full/Underflow Reset Enable bit
  4186                           ;	STVREN = 0x1, unprogrammed default
  4187                           ;	Debugger Enable bit
  4188                           ;	DEBUG = 0x1, unprogrammed default
  4189                           ;	Extended Instruction Set Enable bit
  4190                           ;	XINST = 0x1, unprogrammed default
  4191  300003                     	org	3145731
  4192  300003  FF                 	db	255
  4193                           
  4194                           ;Config register CONFIG3L @ 0x300004
  4195                           ;	WDT Period Select bits
  4196                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  4197                           ;	WDT operating mode
  4198                           ;	WDTE = OFF, WDT Disabled
  4199  300004                     	org	3145732
  4200  300004  9F                 	db	159
  4201                           
  4202                           ;Config register CONFIG3H @ 0x300005
  4203                           ;	unspecified, using default values
  4204                           ;	WDT Window Select bits
  4205                           ;	WDTCWS = 0x7, unprogrammed default
  4206                           ;	WDT input clock selector
  4207                           ;	WDTCCS = 0x7, unprogrammed default
  4208  300005                     	org	3145733
  4209  300005  FF                 	db	255
  4210                           
  4211                           ;Config register CONFIG4L @ 0x300006
  4212                           ;	unspecified, using default values
  4213                           ;	Write Protection Block 0
  4214                           ;	WRT0 = 0x1, unprogrammed default
  4215                           ;	Write Protection Block 1
  4216                           ;	WRT1 = 0x1, unprogrammed default
  4217                           ;	Write Protection Block 2
  4218                           ;	WRT2 = 0x1, unprogrammed default
  4219                           ;	Write Protection Block 3
  4220                           ;	WRT3 = 0x1, unprogrammed default
  4221                           ;	Write Protection Block 3
  4222                           ;	WRT4 = 0x1, unprogrammed default
  4223                           ;	Write Protection Block 3
  4224                           ;	WRT5 = 0x1, unprogrammed default
  4225                           ;	Write Protection Block 3
  4226                           ;	WRT6 = 0x1, unprogrammed default
  4227                           ;	Write Protection Block 3
  4228                           ;	WRT7 = 0x1, unprogrammed default
  4229  300006                     	org	3145734
  4230  300006  FF                 	db	255
  4231                           
  4232                           ;Config register CONFIG4H @ 0x300007
  4233                           ;	unspecified, using default values
  4234                           ;	Configuration Register Write Protection bit
  4235                           ;	WRTC = 0x1, unprogrammed default
  4236                           ;	Boot Block Write Protection bit
  4237                           ;	WRTB = 0x1, unprogrammed default
  4238                           ;	Data EEPROM Write Protection bit
  4239                           ;	WRTD = 0x1, unprogrammed default
  4240                           ;	Scanner Enable bit
  4241                           ;	SCANE = 0x1, unprogrammed default
  4242                           ;	Low Voltage Programming Enable bit
  4243                           ;	LVP = 0x1, unprogrammed default
  4244  300007                     	org	3145735
  4245  300007  FF                 	db	255
  4246                           
  4247                           ;Config register CONFIG5L @ 0x300008
  4248                           ;	unspecified, using default values
  4249                           ;	UserNVM Program Memory Code Protection bit
  4250                           ;	CP = 0x1, unprogrammed default
  4251                           ;	DataNVM Memory Code Protection bit
  4252                           ;	CPD = 0x1, unprogrammed default
  4253  300008                     	org	3145736
  4254  300008  FF                 	db	255
  4255                           
  4256                           ;Config register CONFIG5H @ 0x300009
  4257                           ;	unspecified, using default values
  4258  300009                     	org	3145737
  4259  300009  FF                 	db	255
  4260                           
  4261                           ;Config register CONFIG6L @ 0x30000A
  4262                           ;	unspecified, using default values
  4263                           ;	Table Read Protection Block 0
  4264                           ;	EBTR0 = 0x1, unprogrammed default
  4265                           ;	Table Read Protection Block 1
  4266                           ;	EBTR1 = 0x1, unprogrammed default
  4267                           ;	Table Read Protection Block 2
  4268                           ;	EBTR2 = 0x1, unprogrammed default
  4269                           ;	Table Read Protection Block 3
  4270                           ;	EBTR3 = 0x1, unprogrammed default
  4271                           ;	Table Read Protection Block 4
  4272                           ;	EBTR4 = 0x1, unprogrammed default
  4273                           ;	Table Read Protection Block 5
  4274                           ;	EBTR5 = 0x1, unprogrammed default
  4275                           ;	Table Read Protection Block 6
  4276                           ;	EBTR6 = 0x1, unprogrammed default
  4277                           ;	Table Read Protection Block 7
  4278                           ;	EBTR7 = 0x1, unprogrammed default
  4279  30000A                     	org	3145738
  4280  30000A  FF                 	db	255
  4281                           
  4282                           ;Config register CONFIG6H @ 0x30000B
  4283                           ;	unspecified, using default values
  4284                           ;	Boot Block Table Read Protection bit
  4285                           ;	EBTRB = 0x1, unprogrammed default
  4286  30000B                     	org	3145739
  4287  30000B  FF                 	db	255
  4288                           tosu	equ	0xFFF
  4289                           tosh	equ	0xFFE
  4290                           tosl	equ	0xFFD
  4291                           stkptr	equ	0xFFC
  4292                           pclatu	equ	0xFFB
  4293                           pclath	equ	0xFFA
  4294                           pcl	equ	0xFF9
  4295                           tblptru	equ	0xFF8
  4296                           tblptrh	equ	0xFF7
  4297                           tblptrl	equ	0xFF6
  4298                           tablat	equ	0xFF5
  4299                           prodh	equ	0xFF4
  4300                           prodl	equ	0xFF3
  4301                           indf0	equ	0xFEF
  4302                           postinc0	equ	0xFEE
  4303                           postdec0	equ	0xFED
  4304                           preinc0	equ	0xFEC
  4305                           plusw0	equ	0xFEB
  4306                           fsr0h	equ	0xFEA
  4307                           fsr0l	equ	0xFE9
  4308                           wreg	equ	0xFE8
  4309                           indf1	equ	0xFE7
  4310                           postinc1	equ	0xFE6
  4311                           postdec1	equ	0xFE5
  4312                           preinc1	equ	0xFE4
  4313                           plusw1	equ	0xFE3
  4314                           fsr1h	equ	0xFE2
  4315                           fsr1l	equ	0xFE1
  4316                           bsr	equ	0xFE0
  4317                           indf2	equ	0xFDF
  4318                           postinc2	equ	0xFDE
  4319                           postdec2	equ	0xFDD
  4320                           preinc2	equ	0xFDC
  4321                           plusw2	equ	0xFDB
  4322                           fsr2h	equ	0xFDA
  4323                           fsr2l	equ	0xFD9
  4324                           status	equ	0xFD8

Data Sizes:
    Strings     15
    Constant    0
    Data        0
    BSS         124
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     95      95
    BANK0           160    127     159
    BANK1           256      0      92
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_1(CODE[15]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 15
		 -> STR_1(CODE[15]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_1(CODE[15]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 80
		 -> color_display@buf(BANK0[80]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S1777$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S1777$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    motorR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    motorR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhhlll[1]), PWM6DCH(BITBIGSFRhhhlll[1]), 

    motorL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    motorL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhhlll[1]), PWM6DCH(BITBIGSFRhhhlll[1]), 

    sendStringSerial4@string	PTR unsigned char  size(2) Largest target is 80
		 -> color_display@buf(BANK0[80]), 

    turn180@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turn180@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhhlll[1]), PWM6DCH(BITBIGSFRhhhlll[1]), 

    turn180@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turn180@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhhlll[1]), PWM6DCH(BITBIGSFRhhhlll[1]), 

    fullSpeedAhead@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    fullSpeedAhead@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhhlll[1]), PWM6DCH(BITBIGSFRhhhlll[1]), 

    fullSpeedAhead@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    fullSpeedAhead@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhhlll[1]), PWM6DCH(BITBIGSFRhhhlll[1]), 

    turnRight@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turnRight@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhhlll[1]), PWM6DCH(BITBIGSFRhhhlll[1]), 

    turnRight@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turnRight@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhhlll[1]), PWM6DCH(BITBIGSFRhhhlll[1]), 

    turnLeft@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turnLeft@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhhlll[1]), PWM6DCH(BITBIGSFRhhhlll[1]), 

    turnLeft@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turnLeft@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhhlll[1]), PWM6DCH(BITBIGSFRhhhlll[1]), 

    stop@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    stop@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhhlll[1]), PWM6DCH(BITBIGSFRhhhlll[1]), 

    stop@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    stop@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhhlll[1]), PWM6DCH(BITBIGSFRhhhlll[1]), 

    S830DC_motor$dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    setMotorPWM@m.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    S830DC_motor$dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhhlll[1]), PWM6DCH(BITBIGSFRhhhlll[1]), 

    setMotorPWM@m.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhhlll[1]), PWM6DCH(BITBIGSFRhhhlll[1]), 

    color_display@m	PTR struct color_rgb size(2) Largest target is 4
		 -> main@rgb(BANK0[4]), 

    detect_color@m	PTR struct color_rgb size(2) Largest target is 4
		 -> main@rgb(BANK0[4]), 

    get_color@m	PTR struct color_rgb size(2) Largest target is 4
		 -> main@rgb(BANK0[4]), 


Critical Paths under _main in COMRAM

    _main->_color_display
    _detect_color->_get_color
    _get_color->_color_read_Blue
    _get_color->_color_read_Clear
    _get_color->_color_read_Green
    _get_color->_color_read_Red
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Clear->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _sendStringSerial4->_sendCharSerial4
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle

Critical Paths under _main in BANK0

    _main->_color_display
    _color_display->_sprintf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                24    24      0    8293
                                             93 COMRAM     2     2      0
                                            105 BANK0     22    22      0
                  _I2C_2_Master_Init
                   _color_click_init
                      _color_display
                       _detect_color
                    _initDCmotorsPWM
                         _initUSART4
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2      76
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _detect_color                                         4     2      2     812
                                             13 COMRAM     4     2      2
                          _get_color
 ---------------------------------------------------------------------------------
 (2) _get_color                                            2     0      2     692
                                             11 COMRAM     2     0      2
                    _color_read_Blue
                   _color_read_Clear
                   _color_read_Green
                     _color_read_Red
 ---------------------------------------------------------------------------------
 (3) _color_read_Red                                       7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _color_read_Green                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _color_read_Clear                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _color_read_Blue                                      7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Read                                    3     3      0      45
                                              1 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (1) _color_display                                       86    84      2    6813
                                             87 COMRAM     6     4      2
                                             25 BANK0     80    80      0
                  _sendStringSerial4
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             27    15     12    6456
                                              0 BANK0     25    13     12
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6    6105
                                             79 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           42    36      6    5751
                                             63 COMRAM    16    10      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                36    26     10    4358
                                             27 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    2709
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1235
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                9     5      4     834
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (2) _sendStringSerial4                                    2     0      2     143
                                              1 COMRAM     2     0      2
                    _sendCharSerial4
 ---------------------------------------------------------------------------------
 (3) _sendCharSerial4                                      1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     294
                                              4 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     294
                                              2 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Write                                   1     1      0      22
                                              1 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (5) _I2C_2_Master_Idle                                    1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_2_Master_Init
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
   _color_display
     _sendStringSerial4
       _sendCharSerial4
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
               _strlen
           _fputc
   _detect_color
     _get_color
       _color_read_Blue
         _I2C_2_Master_Read
           _I2C_2_Master_Idle
         _I2C_2_Master_RepStart
           _I2C_2_Master_Idle
         _I2C_2_Master_Start
         _I2C_2_Master_Stop
         _I2C_2_Master_Write
       _color_read_Clear
         _I2C_2_Master_Read
         _I2C_2_Master_RepStart
         _I2C_2_Master_Start
         _I2C_2_Master_Stop
         _I2C_2_Master_Write
       _color_read_Green
         _I2C_2_Master_Read
         _I2C_2_Master_RepStart
         _I2C_2_Master_Start
         _I2C_2_Master_Stop
         _I2C_2_Master_Write
       _color_read_Red
         _I2C_2_Master_Read
         _I2C_2_Master_RepStart
         _I2C_2_Master_Start
         _I2C_2_Master_Stop
         _I2C_2_Master_Write
   _initDCmotorsPWM
   _initUSART4

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      54        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      5C       7       35.9%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     7F      9F       5       99.4%
BITBIGSFRllhh       8F      0       0      40        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5F      5F       1      100.0%
BITBIGSFRhhhh       40      0       0      32        0.0%
BITBIGSFRlllllh     32      0       0      44        0.0%
BITBIGSFRllllh      2D      0       0      43        0.0%
BITBIGSFRlllllh     2A      0       0      48        0.0%
BITBIGSFRllllll     26      0       0      52        0.0%
BITBIGSFRhhhlll     18      0       0      35        0.0%
BITBIGSFRhhhlh      17      0       0      33        0.0%
BITBIGSFRlllllh      F      0       0      50        0.0%
BITBIGSFRlllllh      9      0       0      49        0.0%
BITBIGSFRllhlll      8      0       0      41        0.0%
BITBIGSFRllllll      6      0       0      51        0.0%
BITBIGSFRlllllh      6      0       0      47        0.0%
BITBIGSFRlllllh      5      0       0      46        0.0%
BITBIGSFRlllllh      3      0       0      45        0.0%
BITBIGSFRhlh         1      0       0      36        0.0%
BITBIGSFRhhhllh      1      0       0      34        0.0%
BITBIGSFRlhh         1      0       0      38        0.0%
BITBIGSFRlllh        1      0       0      42        0.0%
BITBIGSFRlhl         1      0       0      39        0.0%
BITBIGSFRhll         1      0       0      37        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     15A      53        0.0%
DATA                 0      0     15A       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.35 build 20211206165544 
Symbol Table                                                                                   Thu Mar 03 00:33:22 2022

               _color_read_Red 194E                _color_read_Blue 1A3E                             l41 1C4C  
                           l50 1A8C                             l44 1D14                             l53 19EC  
                           l62 18FA                             l47 199C                             l56 1A3C  
                           l65 1842                             l59 1ADA                             l92 1CA6  
                           l95 1CA8                             l98 1CCE               _color_read_Clear 19EE  
             _color_read_Green 199E                            l101 1D74                            l110 1D56  
                          l104 1D60                            l113 1BA2                            l107 1D6A  
                          l150 1B60                            l240 1D4A                            l228 1D32  
                          l237 1D36                            l246 1C7C                            l446 1430  
                          l459 1594                            u700 1618                            u701 1614  
                          u710 1B1E                            u711 1B1A                            u800 1444  
                          u720 1C0C                            u801 1440                            u721 1C08  
                          u730 12BC                            u810 1476                            u731 12B8  
                          u811 1472                            u740 12EE                            u820 14B4  
                          u900 1BBE                            u741 12EA                            u821 14B0  
                          u901 1BBA                            u910 1CB8                            u830 14DE  
                          u670 15A8                            u911 1CB4                            u751 1318  
                          u831 14DA                            u671 15A4                            u920 1CCE  
                          u760 133C                            u840 150C                            u680 15BA  
                          u921 1CCA                            u761 1338                            u841 1508  
                          u681 15B6                            u770 1366                            u850 1554  
                          u690 15E2                            u930 0E42                            u771 1362  
                          u851 1550                            u691 15DE                            u931 0E3C  
                          u780 13A6                            u860 1670                            u940 0E44  
                          u781 13A2                            u861 166C                            u790 13F0  
                          u870 1692                            u950 0E5A                            u791 13EC  
                          u871 168E                            u951 0E56                            u880 16E8  
                          u960 0E8A                            u881 16E4                            u961 0E86  
                          u890 16F8                            u970 0EA6                            u891 16F4  
                          u971 0EA2                            u980 0ED4                            u981 0ED0  
                          u990 0EE2                            u991 0EDE                            _abs 1BA4  
                          _pad 1660                            wreg 000FE8                           l1010 194C  
                         l1101 165E                           l1112 1D76                           l1040 16E8  
                         l2000 1A8E                           l1042 1724                           l1050 0EBA  
                         l2010 193A                           l2002 18FC                           ?_abs 0013  
                         l2020 1C64                           l2004 190E                           l1109 1B1E  
                         l1037 16A6                           l2030 1C42                           l2022 1C1A  
                         l2014 1C4E                           l1118 1C18                           l2006 1916  
                         l2024 1C1E                           l2016 1C52                           l1048 0EB2  
                         l2008 191E                           l2040 18D2                           l2032 18A6  
                         l2120 172E                           l1081 189C                           l2026 1C28  
                         l2018 1C60                           l1082 18A4                           l2042 18D4  
                         l2034 18AC                           l2050 1B20                           l2130 1750  
                         l2122 173A                           l1075 12A8                           l2028 1C38  
                         l1068 10F4                           l2044 18D6                           l2036 18C4  
                         l2052 1B30                           l2060 1D16                           l2140 176C  
                         l2132 1758                           l2124 173E                           l2116 1726  
                         l1086 1BDA                           l2046 17CC                           l2038 18D0  
                         l2054 1B48                           l2070 1D30                           l2062 1D20  
                         l2150 178A                           l2142 1774                           l2134 175C  
                         l2126 1744                           l2118 172A                           l2048 1836  
                         l2056 1B5C                           l2064 1D22                           l2160 1794  
                         l2152 178C                           l2144 177C                           l2136 1764  
                         l2128 1748                           l1089 1BE2                           l2058 1B5E  
                         l2066 1D2C                           l2162 17A0                           l2154 178E  
                         l2146 1780                           l2138 1768                           l1700 1BF4  
                         l2068 1D2E                           l2164 17AC                           l2156 1790  
                         l2148 1788                           l1710 12BC                           l1702 1C0C  
                         l2158 1792                           l1720 1312                           l1712 12DC  
                         l1800 16CA                           l1730 1366                           l1722 131E  
                         l1714 12E0                           l1706 12AA                           l1810 1BBE  
                         l1802 16F8                           l1812 1CA8                           l1740 13DA  
                         l1732 1378                           l1724 133C                           l1716 12EE  
                         l1708 12AE                           l1804 170C                           l1820 0E5A  
                         l1900 1B78                           l1814 1CB8                           l1734 13A6  
                         l1726 1344                           l1742 13E0                           l1718 130E  
                         l1750 1432                           l1830 0EC2                           l1822 0E7A  
                         l1910 111A                           l1902 1B9E                           l1744 13F0  
                         l1736 13C6                           l1728 1358                           l1760 1476  
                         l1752 1436                           l1808 1BA4                           l1680 15C4  
                         l1840 0EFA                           l1832 0ED4                           l1824 0E8A  
                         l1816 0E12                           l1920 1186                           l1912 1128  
                         l1904 1BA0                           l1746 1410                           l1738 13C8  
                         l1770 14DE                           l1762 1496                           l1754 1444  
                         l1682 15E2                           l1674 1596                           l1690 1AE8  
                         l1842 0F00                           l1850 0FF2                           l1834 0EE2  
                         l1826 0E8C                           l1818 0E32                           l1930 1238  
                         l1922 11CE                           l1914 113A                           l1780 1554  
                         l1772 150C                           l1764 14B4                           l1756 1464  
                         l1684 1618                           l1676 15A8                           l1692 1AFA  
                         l1852 100C                           l1860 106E                           l1844 0F82  
                         l1836 0EE8                           l1828 0EA6                           l1932 124C  
                         l1916 113E                           l1908 10F6                           l1782 1574  
                         l1774 152C                           l1766 14BC                           l1758 1468  
                         l1678 15BA                           l1694 1AFE                           l1790 1684  
                         l1870 10B4                           l1862 1080                           l1854 102A  
                         l1846 0F88                           l1838 0EF0                           l1926 1206  
                         l1918 1162                           l1942 1272                           l1950 194E  
                         l1880 1D70                           l1776 153E                           l1768 14D0  
                         l1688 1ADC                           l1696 1BE4                           l1792 1692  
                         l1872 10BC                           l1864 1090                           l1856 1044  
                         l1848 0F8E                           l1944 1296                           l1928 122A  
                         l1936 1258                           l1952 1994                           l1882 1D4E  
                         l1778 1544                           l1698 1BF0                           l1794 169E  
                         l1786 1660                           l1866 1096                           l1874 10CC  
                         l1858 105E                           l1938 1266                           l1890 1D58  
                         l1970 1A34                           l1962 199E                           l1884 1D52  
                         l1796 16B2                           l1788 1670                           l1868 10A8  
                         l1980 184C                           l1892 1D5C                           l1956 1A3E  
                         l1964 19E4                           l1990 1C8E                           l1878 1D6C  
                         l1886 1D62                           l1974 1D36                           l1798 16C6  
                         l1982 185A                           l1894 1B64                           l1958 1A84  
                         ?_pad 0011                           l1992 1C90                           l1888 1D66  
                         l1976 1D46                           l1984 1880                           l1896 1B68  
                         l1968 19EE                           l1994 1C92                           l1986 1C7E  
                         l1978 1844                           l1898 1B70                           l1996 1C94  
                         l1988 1C88                           l1998 1CF8                           STR_1 0E01  
                         u1000 100C                           u1001 1008                           u1010 102A  
                         u1011 1026                           u1020 1044                           u1100 111A  
                         u1021 1040                           u1101 1116                           u1030 105E  
                         u1110 1162                           u1031 105A                           u1111 115E  
                         u1040 106E                           u1120 1186                           u1041 106A  
                         u1121 1182                           u1050 1080                           u1130 122A  
                         u1051 107C                           u1131 1226                           u1140 1D46  
                         u1060 1090                           u1141 1D42                           u1061 108C  
                         u1070 10A8                           u1150 189C                           u1071 10A4  
                         u1151 1898                           u1160 1C7C                           u1080 1B8C  
                         u1161 1C78                           u1081 1B84                           u1247 17B6  
                 _BAUD4CONbits 000EE9                           u1257 18B6                           _LATE 000F7D  
                         u1098 1B8E                           u1267 18E0                           _LATG 000F7F  
                         u1277 1C2E                           _T2PR 000FBC                           abs@a 0013  
                         _dbuf 013C                           _main 1726                           _dtoa 0E12  
                         _prec 00F7                           _nout 00F3                           pad@i 0018  
                         pad@p 0015                           fsr1h 000FE2                           fsr2h 000FDA  
                         indf2 000FDF                           fsr1l 000FE1                           pad@w 001A  
                         fsr2l 000FD9                           start 0000                 ?_color_display 0058  
       __end_of_color_read_Red 199E                   ___param_bank 000000                          ??_abs 0015  
                        ??_pad 0017                __end_of___aodiv 1432                          ?_main 0001  
                        ?_dtoa 001C                __end_of___aomod 1596                   vfpfcnvrt@fmt 0042  
      __end_of_sendCharSerial4 1D4C     __end_of_I2C_2_Master_Start 1D76     __end_of_I2C_2_Master_Write 1D58  
                        _flags 00F9                          _fputc 1596                          _fputs 1ADC  
                        pad@fp 0011                          _width 00F5                          _putch 1D76  
                        dtoa@d 001E                          dtoa@i 003E                          dtoa@n 0036  
                        dtoa@p 0030                          dtoa@s 0034                          dtoa@w 0032  
                        tablat 000FF5                          status 000FD8                __end_of_sprintf 194E  
             color_display@buf 0079        __end_of_color_read_Blue 1A8E          _I2C_2_Master_RepStart 1D58  
              ?_color_read_Red 0005                __initialization 1CD0                   __end_of_main 17CC  
                 __end_of_dtoa 10F6           __end_of_detect_color 18FC                         ??_main 005E  
                       ??_dtoa 0026                  __activetblptr 000001                         ?_fputc 0001  
                       ?_fputs 000A                         ?_putch 0001                         _RC0PPS 000E62  
                       _RC4REG 000EE3                         _RE2PPS 000E74                         _RD5PPS 000E6F  
                       _RC7PPS 000E69                         _RD6PPS 000E70       __end_of_color_click_init 1C4E  
                       _RX4PPS 000E15                         _TX4REG 000EE4                ??_color_display 005A  
                 vfprintf@cfmt 0056                      ??___aodiv 0011                      ??___aomod 0011  
                       clear_0 1CD6                         clear_1 1CE2                         isa$std 000001  
                       pad@buf 0013                         dtoa@fp 001C                         _strlen 1BE4  
                       fputc@c 0001                         fputs@c 000E                         fputs@i 000F  
                       fputs@s 000A                   __mediumconst 0000                         tblptrh 000FF7  
                       tblptrl 000FF6                         tblptru 000FF8               ?_sendCharSerial4 0001  
                       putch@c 0001               __end_of_vfprintf 18A6              ??_initDCmotorsPWM 0003  
                    ??_sprintf 0058                     __accesstop 0060        __end_of__initialization 1CE8  
     __end_of_color_read_Clear 1A3E       __end_of_color_read_Green 19EE         ?_I2C_2_Master_RepStart 0001  
                ___rparam_used 000001               ?_color_read_Blue 0005                 __pcstackCOMRAM 0001  
                __end_of_fputc 1660                  __end_of_fputs 1B20                  __end_of_putch 1D78  
                      ??_fputc 0005                        ??_fputs 000E                        ??_putch 0001  
                   __pbssBANK0 00DF                     __pbssBANK1 0100              _color_writetoaddr 1CF6  
                 _T2CLKCONbits 000FBF             ?_color_writetoaddr 0003            ??_color_writetoaddr 0004  
                      ?_strlen 0001                        _SP4BRGH 000EE6                        _SP4BRGL 000EE5  
                      _PWM6DCH 000FA3                        _PWM7DCH 000FA0                        _SSP2ADD 000ED6  
                      _SSP2BUF 000ED5                   _detect_color 18A6         color_writetoaddr@value 0003  
             ??_color_read_Red 0007      __end_of_color_writetoaddr 1D16             _I2C_2_Master_Start 1D6C  
                   _initUSART4 1D16             _I2C_2_Master_Write 1D4C                        __Hparam 0000  
                      __Lparam 0000              color_read_Red@tmp 000A              __end_of_get_color 1ADC  
      sendStringSerial4@string 0002                        ___aodiv 12AA                        ___aomod 1432  
          ?_I2C_2_Master_Start 0001            ?_I2C_2_Master_Write 0001                      ?_vfprintf 0050  
                 __psmallconst 0E00                        __pcinit 1CD0                        __ramtop 0E00  
                      __ptext0 1726                        __ptext1 1D16                        __ptext2 1B20  
                      __ptext3 18A6                        __ptext4 1A8E                        __ptext5 194E  
                      __ptext6 199E                        __ptext7 19EE                        __ptext8 1A3E  
                      __ptext9 1D58                      _T2CONbits 000FBD                      _T2HLTbits 000FBE  
                _RxBufWriteCnt 00FE                        _sprintf 18FC                        main@rgb 00C9  
         ??_I2C_2_Master_Start 0002           ??_I2C_2_Master_Write 0002           end_of_initialization 1CE8  
                      fputc@fp 0003                        fputs@fp 000C              ?_color_click_init 0001  
           ??_color_click_init 0005              __end_of_vfpfcnvrt 12AA                        postdec2 000FDD  
                      postinc0 000FEE                        postinc1 000FE6                        postinc2 000FDE  
                   ??_vfprintf 0056                        strlen@a 0003                        strlen@s 0001  
              _initDCmotorsPWM 1B20                      _TRISAbits 000F81                      _TRISCbits 000F83  
                    _TRISDbits 000F84                      _TRISEbits 000F85                      _TRISFbits 000F86  
                    _TRISGbits 000F87       color_writetoaddr@address 0004                     get_color@m 000C  
      ??_I2C_2_Master_RepStart 0002              ?_color_read_Clear 0005                   _EUSART4RXbuf 00DF  
                 _EUSART4TXbuf 0100              ?_color_read_Green 0005                    ?_initUSART4 0001  
    sendCharSerial4@charToSend 0001          __end_of_color_display 1844                     main@motorL 00CD  
                   main@motorR 00D6             ??_color_read_Clear 0007                 color_display@m 0058  
           ??_color_read_Green 0007                    vfpfcnvrt@ap 0044                    vfpfcnvrt@fp 0040  
                  vfpfcnvrt@ll 0048                 __end_of_strlen 1C1A            color_read_Clear@tmp 000A  
          start_initialization 1CD0                    __end_of_abs 1BE4                    __end_of_pad 1726  
                _TxBufWriteCnt 00FC            color_read_Green@tmp 000A        __end_of_initDCmotorsPWM 1B62  
                  vfprintf@fmt 0052                       ??_strlen 0003                  __pcstackBANK0 0060  
             ___aodiv@dividend 0001                      _dtoa$1859 002E                       ?___aodiv 0001  
                     ?___aomod 0001               ___aodiv@quotient 0013                      _get_color 1A8E  
         I2C_2_Master_Read@ack 0003           I2C_2_Master_Read@tmp 0004                    __smallconst 0E00  
            _I2C_2_Master_Idle 1CA8              _I2C_2_Master_Init 1C7E              _I2C_2_Master_Read 1B62  
            _I2C_2_Master_Stop 1D62                   _RxBufReadCnt 00FD             ?_I2C_2_Master_Idle 0001  
           ?_I2C_2_Master_Init 0001             ?_I2C_2_Master_Read 0001             ?_I2C_2_Master_Stop 0001  
     initDCmotorsPWM@PWMperiod 0001                       ?_sprintf 0060              _sendStringSerial4 1C4E  
          ??_I2C_2_Master_Idle 0001            ??_I2C_2_Master_Init 0001            ??_I2C_2_Master_Read 0002  
                     _LATAbits 000F79            ??_I2C_2_Master_Stop 0002                       _LATCbits 000F7B  
                     _LATEbits 000F7D                       _LATFbits 000F7E                       _LATGbits 000F7F  
           ?_sendStringSerial4 0002                       _PIE4bits 000E2D                       _PIR4bits 000E37  
             ?_initDCmotorsPWM 0001              ??_sendCharSerial4 0001                       _SSP2CON2 000EDA  
          ??_sendStringSerial4 0004                       _SSP2STAT 000ED8                      _vfpfcnvrt 10F6  
                   ?_get_color 000C      __end_of_I2C_2_Master_Idle 1CD0      __end_of_I2C_2_Master_Init 1CA8  
    __end_of_I2C_2_Master_Read 1BA4      __end_of_I2C_2_Master_Stop 1D6C    I2C_2_Master_Write@data_byte 0002  
            ??_color_read_Blue 0007                  detect_color@m 000E                   _TxBufReadCnt 00FB  
    __end_of_sendStringSerial4 1C7E  __end_of_I2C_2_Master_RepStart 1D62             color_read_Blue@tmp 000A  
                 ??_initUSART4 0001                       __Hrparam 0000                     vfprintf@ap 0054  
                     __Lrparam 0000                     vfprintf@fp 0050                   __Lsmallconst 0E00  
                   ?_vfpfcnvrt 0040                ___aodiv@divisor 0009                ___aodiv@counter 0011  
                   _ANSELDbits 000EA7                     sprintf@fmt 0062             __end_of_initUSART4 1D34  
                     __ptext10 1B62                       __ptext11 17CC                       __ptext20 1D76  
                     __ptext12 18FC                       __ptext21 1BA4                       __ptext13 1844  
                     __ptext30 1D6C                       __ptext22 1432                       __ptext14 10F6  
                     __ptext31 1CA8                       __ptext23 12AA                       __ptext15 0E12  
                     __ptext32 1C7E                       __ptext24 1C4E                       __ptext16 1660  
                     __ptext25 1D34                       __ptext17 1BE4                       __ptext26 1C1A  
                     __ptext18 1ADC                       __ptext27 1CF6                       __ptext19 1596  
                     __ptext28 1D4C                       __ptext29 1D62                   _SSP2CON1bits 000ED9  
                 _SSP2CON2bits 000EDA                       isa$xinst 000000                     _RC4STAbits 000EE7  
                     _vfprintf 1844                    ??_get_color 000E               ___aomod@dividend 0001  
                ?_detect_color 000E                    _PWM6CONbits 000FA4                    _PWM7CONbits 000FA1  
                    sprintf@ap 006C                ___aomod@divisor 0009                    ??_vfpfcnvrt 0046  
              ___aomod@counter 0011               _color_click_init 1C1A                       sprintf@f 006E  
                     sprintf@s 0060                     _SSP2DATPPS 000E1D                     _SSP2CLKPPS 000E1C  
               ??_detect_color 0010                     _TX4STAbits 000EE8                   ___aodiv@sign 0012  
              _sendCharSerial4 1D34                   ___aomod@sign 0012                  _color_display 17CC  
