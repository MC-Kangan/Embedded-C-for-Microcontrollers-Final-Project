

Microchip MPLAB XC8 Assembler V2.35 build 20211206165544 
                                                                                               Mon Mar 14 19:31:16 2022

Microchip MPLAB XC8 C Compiler v2.35 (Free license) build 20211206165544 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    17                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    18                           	psect	text0,global,reloc=2,class=CODE,delta=1
    19                           	psect	text1,global,reloc=2,class=CODE,delta=1
    20                           	psect	text2,global,reloc=2,class=CODE,delta=1
    21                           	psect	text3,global,reloc=2,class=CODE,delta=1
    22                           	psect	text4,global,reloc=2,class=CODE,delta=1
    23                           	psect	text5,global,reloc=2,class=CODE,delta=1
    24                           	psect	text6,global,reloc=2,class=CODE,delta=1
    25                           	psect	text7,global,reloc=2,class=CODE,delta=1
    26                           	psect	text8,global,reloc=2,class=CODE,delta=1
    27                           	psect	text9,global,reloc=2,class=CODE,delta=1
    28                           	psect	text10,global,reloc=2,class=CODE,delta=1
    29                           	psect	text11,global,reloc=2,class=CODE,delta=1
    30                           	psect	text12,global,reloc=2,class=CODE,delta=1
    31                           	psect	text13,global,reloc=2,class=CODE,delta=1
    32                           	psect	text14,global,reloc=2,class=CODE,delta=1
    33                           	psect	text15,global,reloc=2,class=CODE,delta=1
    34                           	psect	text16,global,reloc=2,class=CODE,delta=1
    35                           	psect	text17,global,reloc=2,class=CODE,delta=1
    36                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=3
    37                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=3
    38                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	text26,global,reloc=2,class=CODE,delta=1
    45                           	psect	text27,global,reloc=2,class=CODE,delta=1
    46                           	psect	text28,global,reloc=2,class=CODE,delta=1
    47                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=2
    48                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    49                           	psect	text31,global,reloc=2,class=CODE,delta=1
    50                           	psect	text32,global,reloc=2,class=CODE,delta=1
    51                           	psect	text33,global,reloc=2,class=CODE,delta=1
    52                           	psect	text34,global,reloc=2,class=CODE,delta=1
    53                           	psect	text35,global,reloc=2,class=CODE,delta=1
    54                           	psect	text36,global,reloc=2,class=CODE,delta=1
    55                           	psect	text37,global,reloc=2,class=CODE,delta=1
    56                           	psect	text38,global,reloc=2,class=CODE,delta=1
    57                           	psect	text39,global,reloc=2,class=CODE,delta=1
    58                           	psect	text40,global,reloc=2,class=CODE,delta=1
    59                           	psect	text41,global,reloc=2,class=CODE,delta=1
    60                           	psect	text42,global,reloc=2,class=CODE,delta=1
    61                           	psect	text43,global,reloc=2,class=CODE,delta=1
    62                           	psect	text44,global,reloc=2,class=CODE,delta=1
    63                           	psect	text45,global,reloc=2,class=CODE,delta=1
    64                           	psect	text46,global,reloc=2,class=CODE,delta=1
    65                           	psect	text47,global,reloc=2,class=CODE,delta=1
    66                           	psect	text48,global,reloc=2,class=CODE,delta=1
    67                           	psect	text49,global,reloc=2,class=CODE,delta=1
    68                           	psect	text50,global,reloc=2,class=CODE,delta=1
    69                           	psect	text51,global,reloc=2,class=CODE,delta=1
    70                           	psect	text52,global,reloc=2,class=CODE,delta=1
    71                           	psect	text53,global,reloc=2,class=CODE,delta=1
    72                           	psect	text54,global,reloc=2,class=CODE,delta=1
    73                           	psect	text55,global,reloc=2,class=CODE,delta=1
    74                           	psect	text56,global,reloc=2,class=CODE,delta=1
    75                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=2
    76                           	psect	text58,global,reloc=2,class=CODE,delta=1,group=2
    77                           	psect	text59,global,reloc=2,class=CODE,delta=1
    78                           	psect	text60,global,reloc=2,class=CODE,delta=1,group=3
    79                           	psect	text61,global,reloc=2,class=CODE,delta=1,group=1
    80                           	psect	text62,global,reloc=2,class=CODE,delta=1,group=1
    81                           	psect	text63,global,reloc=2,class=CODE,delta=1,group=1
    82                           	psect	text64,global,reloc=2,class=CODE,delta=1,group=1
    83                           	psect	text65,global,reloc=2,class=CODE,delta=1,group=3
    84                           	psect	text66,global,reloc=2,class=CODE,delta=1,group=3
    85                           	psect	text67,global,reloc=2,class=CODE,delta=1,group=3
    86                           	psect	text68,global,reloc=2,class=CODE,delta=1,group=3
    87                           	psect	text69,global,reloc=2,class=CODE,delta=1,group=3
    88                           	psect	text70,global,reloc=2,class=CODE,delta=1,group=2
    89                           	psect	text71,global,reloc=2,class=CODE,delta=1,group=2
    90                           	psect	text72,global,reloc=2,class=CODE,delta=1
    91                           	psect	text73,global,reloc=2,class=CODE,delta=1
    92                           	psect	text74,global,reloc=2,class=CODE,delta=1
    93                           	psect	text75,global,reloc=2,class=CODE,delta=1
    94                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    95                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    96                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    97                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    98                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    99                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
   100  0000                     
   101                           ; Version 2.35
   102                           ; Generated 05/05/2021 GMT
   103                           ; 
   104                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
   105                           ; All rights reserved.
   106                           ; 
   107                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   108                           ; 
   109                           ; Redistribution and use in source and binary forms, with or without modification, are
   110                           ; permitted provided that the following conditions are met:
   111                           ; 
   112                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   113                           ;        conditions and the following disclaimer.
   114                           ; 
   115                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   116                           ;        of conditions and the following disclaimer in the documentation and/or other
   117                           ;        materials provided with the distribution. Publication is not required when
   118                           ;        this file is used in an embedded application.
   119                           ; 
   120                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   121                           ;        software without specific prior written permission.
   122                           ; 
   123                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   124                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   125                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   126                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   127                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   128                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   129                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   130                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   131                           ; 
   132                           ; 
   133                           ; Code-generator required, PIC18F67K40 Definitions
   134                           ; 
   135                           ; SFR Addresses
   136  0000                     
   137                           	psect	idataBANK0
   138  005AD6                     __pidataBANK0:
   139                           	callstack 0
   140                           
   141                           ;initializer for _SENSITIVITY
   142  005AD6  0A                 	db	10
   143                           
   144                           ;initializer for _CALIBRATION_135
   145  005AD7  0F                 	db	15
   146                           
   147                           	psect	idataBANK2
   148  005ADA                     __pidataBANK2:
   149                           	callstack 0
   150                           
   151                           ;initializer for _CALIBRATION_180
   152  005ADA  0A                 	db	10
   153                           
   154                           	psect	smallconst
   155  000E00                     __psmallconst:
   156                           	callstack 0
   157  000E00  00                 	db	0
   158  000E01  0000               	dw	0
   159  000E03  4B00               	dw	19200
   160  000E05                     __end_of_toint:
   161                           	callstack 0
   162  0000                     _TX4REG	set	3812
   163  0000                     _RC4STAbits	set	3815
   164  0000                     _SP4BRGH	set	3814
   165  0000                     _LATEbits	set	3965
   166  0000                     _TRISGbits	set	3975
   167  0000                     _TRISEbits	set	3973
   168  0000                     _LATGbits	set	3967
   169  0000                     _LATFbits	set	3966
   170  0000                     _TRISFbits	set	3974
   171  0000                     _SSP2CON2bits	set	3802
   172  0000                     _LATG	set	3967
   173  0000                     _LATE	set	3965
   174  0000                     _RX4PPS	set	3605
   175  0000                     _SSP2CLKPPS	set	3612
   176  0000                     _SSP2DATPPS	set	3613
   177  0000                     _ANSELDbits	set	3751
   178  0000                     _SSP2ADD	set	3798
   179  0000                     _SSP2CON1bits	set	3801
   180  0000                     _LATAbits	set	3961
   181  0000                     _LATDbits	set	3964
   182  0000                     _LATHbits	set	3968
   183  0000                     _TRISDbits	set	3972
   184  0000                     _TRISHbits	set	3976
   185  0000                     _PORTFbits	set	3982
   186  0000                     _T2PR	set	4028
   187  0000                     _T2CONbits	set	4029
   188  0000                     _PWM7DCH	set	4000
   189  0000                     _PWM6DCH	set	4003
   190  0000                     _TRISAbits	set	3969
   191  0000                     _TRISCbits	set	3971
   192  0000                     _LATCbits	set	3963
   193  0000                     _RC4REG	set	3811
   194  0000                     _SP4BRGL	set	3813
   195  0000                     _TX4STAbits	set	3816
   196  0000                     _BAUD4CONbits	set	3817
   197  0000                     _SSP2CON2	set	3802
   198  0000                     _SSP2STAT	set	3800
   199  0000                     _ANSELFbits	set	3764
   200  0000                     _SSP2BUF	set	3797
   201  0000                     _PIE0bits	set	3625
   202  0000                     _PIE4bits	set	3629
   203  0000                     _PIR4bits	set	3639
   204  0000                     _RC0PPS	set	3682
   205  0000                     _RC7PPS	set	3689
   206  0000                     _RD5PPS	set	3695
   207  0000                     _RE2PPS	set	3700
   208  0000                     _RD6PPS	set	3696
   209  0000                     _TMR0L	set	4051
   210  0000                     _TMR0H	set	4052
   211  0000                     _T0CON0bits	set	4053
   212  0000                     _T2CLKCONbits	set	4031
   213  0000                     _T2HLTbits	set	4030
   214  0000                     _PWM6CONbits	set	4004
   215  0000                     _PWM7CONbits	set	4001
   216  0000                     _PIR0bits	set	3635
   217  0000                     _T0CON1bits	set	4054
   218  0000                     _INTCONbits	set	4082
   219  000E05                     STR_6:
   220                           
   221                           ; BSR set to: 14
   222  000E05  67                 	db	103	;'g'
   223  000E06  6F                 	db	111	;'o'
   224  000E07  20                 	db	32
   225  000E08  62                 	db	98	;'b'
   226  000E09  61                 	db	97	;'a'
   227  000E0A  63                 	db	99	;'c'
   228  000E0B  6B                 	db	107	;'k'
   229  000E0C  20                 	db	32
   230  000E0D  66                 	db	102	;'f'
   231  000E0E  69                 	db	105	;'i'
   232  000E0F  6E                 	db	110	;'n'
   233  000E10  69                 	db	105	;'i'
   234  000E11  73                 	db	115	;'s'
   235  000E12  68                 	db	104	;'h'
   236  000E13  0D                 	db	13
   237  000E14  0A                 	db	10
   238  000E15  00                 	db	0
   239  000E16                     STR_1:
   240                           
   241                           ; BSR set to: 14
   242  000E16  25                 	db	37
   243  000E17  64                 	db	100	;'d'
   244  000E18  09                 	db	9
   245  000E19  25                 	db	37
   246  000E1A  64                 	db	100	;'d'
   247  000E1B  09                 	db	9
   248  000E1C  25                 	db	37
   249  000E1D  64                 	db	100	;'d'
   250  000E1E  09                 	db	9
   251  000E1F  25                 	db	37
   252  000E20  64                 	db	100	;'d'
   253  000E21  0D                 	db	13
   254  000E22  0A                 	db	10
   255  000E23  00                 	db	0
   256  000E24                     STR_3:
   257                           
   258                           ; BSR set to: 14
   259  000E24  72                 	db	114	;'r'
   260  000E25  65                 	db	101	;'e'
   261  000E26  73                 	db	115	;'s'
   262  000E27  75                 	db	117	;'u'
   263  000E28  6C                 	db	108	;'l'
   264  000E29  74                 	db	116	;'t'
   265  000E2A  3A                 	db	58	;':'
   266  000E2B  20                 	db	32
   267  000E2C  25                 	db	37
   268  000E2D  64                 	db	100	;'d'
   269  000E2E  0D                 	db	13
   270  000E2F  0A                 	db	10
   271  000E30  00                 	db	0
   272  000E31                     STR_4:
   273                           
   274                           ; BSR set to: 14
   275  000E31  67                 	db	103	;'g'
   276  000E32  6F                 	db	111	;'o'
   277  000E33  20                 	db	32
   278  000E34  62                 	db	98	;'b'
   279  000E35  61                 	db	97	;'a'
   280  000E36  63                 	db	99	;'c'
   281  000E37  6B                 	db	107	;'k'
   282  000E38  0D                 	db	13
   283  000E39  0A                 	db	10
   284  000E3A  00                 	db	0
   285  000E3B                     STR_5:
   286                           
   287                           ; BSR set to: 14
   288  000E3B  72                 	db	114	;'r'
   289  000E3C  65                 	db	101	;'e'
   290  000E3D  70                 	db	112	;'p'
   291  000E3E  65                 	db	101	;'e'
   292  000E3F  61                 	db	97	;'a'
   293  000E40  74                 	db	116	;'t'
   294  000E41  0D                 	db	13
   295  000E42  0A                 	db	10
   296  000E43  00                 	db	0
   297  000E44  00                 	db	0	; dummy byte at the end
   298  0000                     
   299                           ; #config settings
   300                           
   301                           	psect	cinit
   302  0052F6                     __pcinit:
   303                           	callstack 0
   304  0052F6                     start_initialization:
   305                           	callstack 0
   306  0052F6                     __initialization:
   307                           	callstack 0
   308                           
   309                           ; Initialize objects allocated to BANK2 (1 bytes)
   310                           ; load TBLPTR registers with __pidataBANK2
   311  0052F6  0EDA               	movlw	low __pidataBANK2
   312  0052F8  6EF6               	movwf	tblptrl,c
   313  0052FA  0E5A               	movlw	high __pidataBANK2
   314  0052FC  6EF7               	movwf	tblptrh,c
   315  0052FE  0E00               	movlw	low (__pidataBANK2 shr (0+16))
   316  005300  6EF8               	movwf	tblptru,c
   317  005302  0009               	tblrd		*+	;fetch initializer
   318  005304  CFF5 F2ED          	movff	tablat,__pdataBANK2
   319                           
   320                           ; Initialize objects allocated to BANK0 (2 bytes)
   321                           ; load TBLPTR registers with __pidataBANK0
   322  005308  0ED6               	movlw	low __pidataBANK0
   323  00530A  6EF6               	movwf	tblptrl,c
   324  00530C  0E5A               	movlw	high __pidataBANK0
   325  00530E  6EF7               	movwf	tblptrh,c
   326  005310  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   327  005312  6EF8               	movwf	tblptru,c
   328  005314  0009               	tblrd		*+	;fetch initializer
   329  005316  CFF5 F0FE          	movff	tablat,__pdataBANK0
   330  00531A  0009               	tblrd		*+	;fetch initializer
   331  00531C  CFF5 F0FF          	movff	tablat,__pdataBANK0+1
   332                           
   333                           ; Clear objects allocated to BANK3 (152 bytes)
   334  005320  EE03  F000         	lfsr	0,__pbssBANK3
   335  005324  0E98               	movlw	152
   336  005326                     clear_0:
   337  005326  6AEE               	clrf	postinc0,c
   338  005328  06E8               	decf	wreg,f,c
   339  00532A  E1FD               	bnz	clear_0
   340                           
   341                           ; Clear objects allocated to BANK2 (36 bytes)
   342  00532C  EE02  F0C9         	lfsr	0,__pbssBANK2
   343  005330  0E24               	movlw	36
   344  005332                     clear_1:
   345  005332  6AEE               	clrf	postinc0,c
   346  005334  06E8               	decf	wreg,f,c
   347  005336  E1FD               	bnz	clear_1
   348                           
   349                           ; Clear objects allocated to BANK0 (8 bytes)
   350  005338  EE00  F0F6         	lfsr	0,__pbssBANK0
   351  00533C  0E08               	movlw	8
   352  00533E                     clear_2:
   353  00533E  6AEE               	clrf	postinc0,c
   354  005340  06E8               	decf	wreg,f,c
   355  005342  E1FD               	bnz	clear_2
   356  005344                     end_of_initialization:
   357                           	callstack 0
   358  005344                     __end_of__initialization:
   359                           	callstack 0
   360  005344  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   361  005346  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   362  005348  0E00               	movlw	low (__Lsmallconst shr (0+16))
   363  00534A  6EF8               	movwf	tblptru,c
   364  00534C  0E0E               	movlw	high __Lsmallconst
   365  00534E  6EF7               	movwf	tblptrh,c
   366  005350  0100               	movlb	0
   367  005352  EF14  F029         	goto	_main	;jump to C main() function
   368                           
   369                           	psect	bssBANK0
   370  0000F6                     __pbssBANK0:
   371                           	callstack 0
   372  0000F6                     _flags:
   373                           	callstack 0
   374  0000F6                     	ds	2
   375  0000F8                     _color:
   376                           	callstack 0
   377  0000F8                     	ds	1
   378  0000F9                     _array_index:
   379                           	callstack 0
   380  0000F9                     	ds	1
   381  0000FA                     _TxBufReadCnt:
   382                           	callstack 0
   383  0000FA                     	ds	1
   384  0000FB                     _TxBufWriteCnt:
   385                           	callstack 0
   386  0000FB                     	ds	1
   387  0000FC                     _RxBufReadCnt:
   388                           	callstack 0
   389  0000FC                     	ds	1
   390  0000FD                     _RxBufWriteCnt:
   391                           	callstack 0
   392  0000FD                     	ds	1
   393                           
   394                           	psect	dataBANK0
   395  0000FE                     __pdataBANK0:
   396                           	callstack 0
   397  0000FE                     _SENSITIVITY:
   398                           	callstack 0
   399  0000FE                     	ds	1
   400  0000FF                     _CALIBRATION_135:
   401                           	callstack 0
   402  0000FF                     	ds	1
   403                           
   404                           	psect	bssBANK2
   405  0002C9                     __pbssBANK2:
   406                           	callstack 0
   407  0002C9                     _motorR:
   408                           	callstack 0
   409  0002C9                     	ds	10
   410  0002D3                     _motorL:
   411                           	callstack 0
   412  0002D3                     	ds	10
   413  0002DD                     roundf@F527:
   414                           	callstack 0
   415  0002DD                     	ds	4
   416  0002E1                     _nout:
   417                           	callstack 0
   418  0002E1                     	ds	2
   419  0002E3                     _width:
   420                           	callstack 0
   421  0002E3                     	ds	2
   422  0002E5                     _prec:
   423                           	callstack 0
   424  0002E5                     	ds	2
   425  0002E7                     _stop_move:
   426                           	callstack 0
   427  0002E7                     	ds	2
   428  0002E9                     _start_move:
   429                           	callstack 0
   430  0002E9                     	ds	2
   431  0002EB                     _second:
   432                           	callstack 0
   433  0002EB                     	ds	2
   434                           
   435                           	psect	dataBANK2
   436  0002ED                     __pdataBANK2:
   437                           	callstack 0
   438  0002ED                     _CALIBRATION_180:
   439                           	callstack 0
   440  0002ED                     	ds	1
   441                           
   442                           	psect	bssBANK3
   443  000300                     __pbssBANK3:
   444                           	callstack 0
   445  000300                     _EUSART4TXbuf:
   446                           	callstack 0
   447  000300                     	ds	60
   448  00033C                     _memory:
   449                           	callstack 0
   450  00033C                     	ds	40
   451  000364                     _EUSART4RXbuf:
   452                           	callstack 0
   453  000364                     	ds	20
   454  000378                     _dbuf:
   455                           	callstack 0
   456  000378                     	ds	32
   457                           
   458                           	psect	cstackBANK2
   459  000200                     __pcstackBANK2:
   460                           	callstack 0
   461  000200                     goback@buf2:
   462                           	callstack 0
   463                           
   464                           ; 100 bytes @ 0x0
   465  000200                     	ds	100
   466  000264                     action@buf:
   467                           	callstack 0
   468                           
   469                           ; 100 bytes @ 0x64
   470  000264                     	ds	100
   471  0002C8                     action@color:
   472                           	callstack 0
   473                           
   474                           ; 1 bytes @ 0xC8
   475  0002C8                     	ds	1
   476                           
   477                           	psect	cstackBANK1
   478  000100                     __pcstackBANK1:
   479                           	callstack 0
   480  000100                     goback@buf:
   481                           	callstack 0
   482                           
   483                           ; 100 bytes @ 0x0
   484  000100                     	ds	100
   485  000164                     goback@buf3:
   486                           	callstack 0
   487                           
   488                           ; 100 bytes @ 0x64
   489  000164                     	ds	100
   490  0001C8                     main@rgb:
   491                           	callstack 0
   492                           
   493                           ; 8 bytes @ 0xC8
   494  0001C8                     	ds	8
   495  0001D0                     main@white:
   496                           	callstack 0
   497                           
   498                           ; 28 bytes @ 0xD0
   499  0001D0                     	ds	28
   500  0001EC                     main@motorL:
   501                           	callstack 0
   502                           
   503                           ; 10 bytes @ 0xEC
   504  0001EC                     	ds	10
   505  0001F6                     main@motorR:
   506                           	callstack 0
   507                           
   508                           ; 10 bytes @ 0xF6
   509  0001F6                     	ds	10
   510                           
   511                           	psect	cstackBANK0
   512  000060                     __pcstackBANK0:
   513                           	callstack 0
   514  000060                     ??___fltol:
   515  000060                     ?_sprintf:
   516                           	callstack 0
   517  000060                     sprintf@s:
   518                           	callstack 0
   519                           
   520                           ; 2 bytes @ 0x0
   521  000060                     	ds	2
   522  000062                     sprintf@fmt:
   523                           	callstack 0
   524                           
   525                           ; 2 bytes @ 0x2
   526  000062                     	ds	2
   527  000064                     ___fltol@sign1:
   528                           	callstack 0
   529                           
   530                           ; 1 bytes @ 0x4
   531  000064                     	ds	1
   532  000065                     ___fltol@exp1:
   533                           	callstack 0
   534                           
   535                           ; 1 bytes @ 0x5
   536  000065                     	ds	1
   537  000066                     ?_lroundf:
   538                           	callstack 0
   539  000066                     lroundf@x:
   540                           	callstack 0
   541                           
   542                           ; 4 bytes @ 0x6
   543  000066                     	ds	4
   544  00006A                     ?_amb_light_measure:
   545                           	callstack 0
   546  00006A                     compare@lower:
   547                           	callstack 0
   548  00006A                     amb_light_measure@amb:
   549                           	callstack 0
   550  00006A                     distance_measure@mL:
   551                           	callstack 0
   552                           
   553                           ; 2 bytes @ 0xA
   554  00006A                     	ds	2
   555  00006C                     ??_amb_light_measure:
   556  00006C                     compare@value2compare:
   557                           	callstack 0
   558  00006C                     distance_measure@mR:
   559                           	callstack 0
   560  00006C                     sprintf@ap:
   561                           	callstack 0
   562                           
   563                           ; 2 bytes @ 0xC
   564  00006C                     	ds	2
   565  00006E                     compare@upper:
   566                           	callstack 0
   567  00006E                     amb_light_measure@upper_bound:
   568                           	callstack 0
   569  00006E                     distance_measure@amb_light:
   570                           	callstack 0
   571  00006E                     sprintf@f:
   572                           	callstack 0
   573                           
   574                           ; 11 bytes @ 0xE
   575  00006E                     	ds	2
   576  000070                     ??_distance_measure:
   577  000070                     compare@result:
   578                           	callstack 0
   579  000070                     amb_light_measure@CC_amb_ave:
   580                           	callstack 0
   581                           
   582                           ; 2 bytes @ 0x10
   583  000070                     	ds	1
   584  000071                     detect_color@m:
   585                           	callstack 0
   586                           
   587                           ; 2 bytes @ 0x11
   588  000071                     	ds	1
   589  000072                     amb_light_measure@CC_amb_1:
   590                           	callstack 0
   591  000072                     distance_measure@CG_amb:
   592                           	callstack 0
   593                           
   594                           ; 2 bytes @ 0x12
   595  000072                     	ds	1
   596  000073                     detect_color@w:
   597                           	callstack 0
   598                           
   599                           ; 2 bytes @ 0x13
   600  000073                     	ds	1
   601  000074                     amb_light_measure@CC_amb_2:
   602                           	callstack 0
   603  000074                     _distance_measure$3277:
   604                           	callstack 0
   605                           
   606                           ; 4 bytes @ 0x14
   607  000074                     	ds	1
   608  000075                     ??_detect_color:
   609                           
   610                           ; 1 bytes @ 0x15
   611  000075                     	ds	1
   612  000076                     amb_light_measure@CC_amb_3:
   613                           	callstack 0
   614                           
   615                           ; 2 bytes @ 0x16
   616  000076                     	ds	2
   617  000078                     distance_measure@CC_amb:
   618                           	callstack 0
   619                           
   620                           ; 2 bytes @ 0x18
   621  000078                     	ds	1
   622  000079                     detect_color@RG:
   623                           	callstack 0
   624  000079                     color_display@buf:
   625                           	callstack 0
   626  000079                     color_predict@buf:
   627                           	callstack 0
   628                           
   629                           ; 100 bytes @ 0x19
   630  000079                     	ds	1
   631  00007A                     distance_measure@threshold:
   632                           	callstack 0
   633                           
   634                           ; 2 bytes @ 0x1A
   635  00007A                     	ds	1
   636  00007B                     detect_color@RB:
   637                           	callstack 0
   638                           
   639                           ; 2 bytes @ 0x1B
   640  00007B                     	ds	1
   641  00007C                     distance_measure@stop:
   642                           	callstack 0
   643                           
   644                           ; 1 bytes @ 0x1C
   645  00007C                     	ds	1
   646  00007D                     detect_color@GB:
   647                           	callstack 0
   648                           
   649                           ; 2 bytes @ 0x1D
   650  00007D                     	ds	2
   651  00007F                     detect_color@BC:
   652                           	callstack 0
   653                           
   654                           ; 2 bytes @ 0x1F
   655  00007F                     	ds	2
   656  000081                     detect_color@GR:
   657                           	callstack 0
   658                           
   659                           ; 2 bytes @ 0x21
   660  000081                     	ds	2
   661  000083                     detect_color@RR:
   662                           	callstack 0
   663                           
   664                           ; 2 bytes @ 0x23
   665  000083                     	ds	2
   666  000085                     detect_color@BB:
   667                           	callstack 0
   668                           
   669                           ; 2 bytes @ 0x25
   670  000085                     	ds	2
   671  000087                     detect_color@GG:
   672                           	callstack 0
   673                           
   674                           ; 2 bytes @ 0x27
   675  000087                     	ds	2
   676  000089                     detect_color@BG:
   677                           	callstack 0
   678                           
   679                           ; 2 bytes @ 0x29
   680  000089                     	ds	2
   681  00008B                     detect_color@color:
   682                           	callstack 0
   683                           
   684                           ; 1 bytes @ 0x2B
   685  00008B                     	ds	1
   686  00008C                     detect_color@BR:
   687                           	callstack 0
   688                           
   689                           ; 2 bytes @ 0x2C
   690  00008C                     	ds	2
   691  00008E                     _detect_color$3276:
   692                           	callstack 0
   693                           
   694                           ; 4 bytes @ 0x2E
   695  00008E                     	ds	4
   696  000092                     verify_color@m:
   697                           	callstack 0
   698                           
   699                           ; 2 bytes @ 0x32
   700  000092                     	ds	2
   701  000094                     verify_color@w:
   702                           	callstack 0
   703                           
   704                           ; 2 bytes @ 0x34
   705  000094                     	ds	2
   706  000096                     ??_verify_color:
   707                           
   708                           ; 1 bytes @ 0x36
   709  000096                     	ds	2
   710  000098                     verify_color@color2:
   711                           	callstack 0
   712                           
   713                           ; 2 bytes @ 0x38
   714  000098                     	ds	2
   715  00009A                     verify_color@color:
   716                           	callstack 0
   717                           
   718                           ; 1 bytes @ 0x3A
   719  00009A                     	ds	67
   720  0000DD                     color_predict@color:
   721                           	callstack 0
   722                           
   723                           ; 1 bytes @ 0x7D
   724  0000DD                     	ds	1
   725  0000DE                     color_data_collection@i:
   726                           	callstack 0
   727  0000DE                     goback@i:
   728                           	callstack 0
   729                           
   730                           ; 2 bytes @ 0x7E
   731  0000DE                     	ds	2
   732  0000E0                     color_data_collection@j:
   733                           	callstack 0
   734  0000E0                     action@mL:
   735                           	callstack 0
   736                           
   737                           ; 2 bytes @ 0x80
   738  0000E0                     	ds	2
   739  0000E2                     color_data_collection@k:
   740                           	callstack 0
   741  0000E2                     action@mR:
   742                           	callstack 0
   743                           
   744                           ; 2 bytes @ 0x82
   745  0000E2                     	ds	2
   746  0000E4                     color_data_collection@x:
   747                           	callstack 0
   748                           
   749                           ; 2 bytes @ 0x84
   750  0000E4                     	ds	2
   751  0000E6                     test_function@m:
   752                           	callstack 0
   753                           
   754                           ; 2 bytes @ 0x86
   755  0000E6                     	ds	2
   756  0000E8                     test_function@w:
   757                           	callstack 0
   758                           
   759                           ; 2 bytes @ 0x88
   760  0000E8                     	ds	2
   761  0000EA                     test_function@mL:
   762                           	callstack 0
   763                           
   764                           ; 2 bytes @ 0x8A
   765  0000EA                     	ds	2
   766  0000EC                     test_function@mR:
   767                           	callstack 0
   768                           
   769                           ; 2 bytes @ 0x8C
   770  0000EC                     	ds	2
   771  0000EE                     ??_test_function:
   772                           
   773                           ; 1 bytes @ 0x8E
   774  0000EE                     	ds	2
   775  0000F0                     test_function@amb_light:
   776                           	callstack 0
   777                           
   778                           ; 2 bytes @ 0x90
   779  0000F0                     	ds	2
   780  0000F2                     test_function@complete:
   781                           	callstack 0
   782                           
   783                           ; 1 bytes @ 0x92
   784  0000F2                     	ds	1
   785  0000F3                     test_function@color:
   786                           	callstack 0
   787                           
   788                           ; 1 bytes @ 0x93
   789  0000F3                     	ds	1
   790  0000F4                     test_function@stop_signal:
   791                           	callstack 0
   792                           
   793                           ; 1 bytes @ 0x94
   794  0000F4                     	ds	1
   795  0000F5                     test_function@test_code:
   796                           	callstack 0
   797                           
   798                           ; 1 bytes @ 0x95
   799  0000F5                     	ds	1
   800                           
   801                           	psect	cstackCOMRAM
   802  000001                     __pcstackCOMRAM:
   803                           	callstack 0
   804  000001                     ??_LED_OFF:
   805  000001                     ??_LED_R:
   806  000001                     ??_LED_C:
   807  000001                     ??_LED_B:
   808  000001                     ??_LED_G:
   809  000001                     ??_I2C_2_Master_Idle:
   810  000001                     ?_strlen:
   811                           	callstack 0
   812  000001                     ?___wmul:
   813                           	callstack 0
   814  000001                     ?___fladd:
   815                           	callstack 0
   816  000001                     ?___flneg:
   817                           	callstack 0
   818  000001                     ?___xxtofl:
   819                           	callstack 0
   820  000001                     ?___aodiv:
   821                           	callstack 0
   822  000001                     ?___aomod:
   823                           	callstack 0
   824  000001                     toggle_light@toggletime:
   825                           	callstack 0
   826  000001                     sendCharSerial4@charToSend:
   827                           	callstack 0
   828  000001                     initDCmotorsPWM@PWMperiod:
   829                           	callstack 0
   830  000001                     initDCmotors_parameter@motorL:
   831                           	callstack 0
   832  000001                     ___wmul@multiplier:
   833                           	callstack 0
   834  000001                     fputc@c:
   835                           	callstack 0
   836  000001                     strlen@s:
   837                           	callstack 0
   838  000001                     ___flge@ff1:
   839                           	callstack 0
   840  000001                     ___flneg@f1:
   841                           	callstack 0
   842  000001                     ___fladd@b:
   843                           	callstack 0
   844  000001                     ___xxtofl@val:
   845                           	callstack 0
   846  000001                     ___aodiv@dividend:
   847                           	callstack 0
   848  000001                     ___aomod@dividend:
   849                           	callstack 0
   850                           
   851                           ; 8 bytes @ 0x0
   852  000001                     	ds	1
   853  000002                     ??_I2C_2_Master_Read:
   854  000002                     ??_toggle_light:
   855  000002                     I2C_2_Master_Write@data_byte:
   856                           	callstack 0
   857  000002                     sendStringSerial4@string:
   858                           	callstack 0
   859                           
   860                           ; 2 bytes @ 0x1
   861  000002                     	ds	1
   862  000003                     color_writetoaddr@value:
   863                           	callstack 0
   864  000003                     I2C_2_Master_Read@ack:
   865                           	callstack 0
   866  000003                     initDCmotors_parameter@motorR:
   867                           	callstack 0
   868  000003                     ___wmul@multiplicand:
   869                           	callstack 0
   870  000003                     fputc@fp:
   871                           	callstack 0
   872  000003                     strlen@a:
   873                           	callstack 0
   874                           
   875                           ; 2 bytes @ 0x2
   876  000003                     	ds	1
   877  000004                     toggle_light@i:
   878                           	callstack 0
   879  000004                     color_writetoaddr@address:
   880                           	callstack 0
   881  000004                     I2C_2_Master_Read@tmp:
   882                           	callstack 0
   883                           
   884                           ; 1 bytes @ 0x3
   885  000004                     	ds	1
   886  000005                     ??_fputc:
   887  000005                     ??_color_click_init:
   888  000005                     ??___xxtofl:
   889  000005                     ?_color_read_Red:
   890                           	callstack 0
   891  000005                     ?_color_read_Blue:
   892                           	callstack 0
   893  000005                     ?_color_read_Green:
   894                           	callstack 0
   895  000005                     ?_color_read_Clear:
   896                           	callstack 0
   897  000005                     toggle_light@lightnumber:
   898                           	callstack 0
   899  000005                     ___wmul@product:
   900                           	callstack 0
   901  000005                     ___flge@ff2:
   902                           	callstack 0
   903  000005                     ___fladd@a:
   904                           	callstack 0
   905                           
   906                           ; 4 bytes @ 0x4
   907  000005                     	ds	2
   908  000007                     ??_color_read_Red:
   909  000007                     ??_color_read_Blue:
   910  000007                     ??_color_read_Green:
   911  000007                     ??_color_read_Clear:
   912  000007                     ?___awdiv:
   913                           	callstack 0
   914  000007                     ___awdiv@dividend:
   915                           	callstack 0
   916                           
   917                           ; 2 bytes @ 0x6
   918  000007                     	ds	2
   919  000009                     ??___fladd:
   920  000009                     ??___flge:
   921  000009                     ___xxtofl@sign:
   922                           	callstack 0
   923  000009                     ___awdiv@divisor:
   924                           	callstack 0
   925  000009                     ___aodiv@divisor:
   926                           	callstack 0
   927  000009                     ___aomod@divisor:
   928                           	callstack 0
   929                           
   930                           ; 8 bytes @ 0x8
   931  000009                     	ds	1
   932  00000A                     ___xxtofl@exp:
   933                           	callstack 0
   934  00000A                     color_read_Red@tmp:
   935                           	callstack 0
   936  00000A                     color_read_Blue@tmp:
   937                           	callstack 0
   938  00000A                     color_read_Green@tmp:
   939                           	callstack 0
   940  00000A                     color_read_Clear@tmp:
   941                           	callstack 0
   942  00000A                     fputs@s:
   943                           	callstack 0
   944                           
   945                           ; 2 bytes @ 0x9
   946  00000A                     	ds	1
   947  00000B                     ___awdiv@counter:
   948                           	callstack 0
   949  00000B                     ___xxtofl@arg:
   950                           	callstack 0
   951                           
   952                           ; 4 bytes @ 0xA
   953  00000B                     	ds	1
   954  00000C                     ___awdiv@sign:
   955                           	callstack 0
   956  00000C                     read_color@m:
   957                           	callstack 0
   958  00000C                     calibrate_white@w:
   959                           	callstack 0
   960  00000C                     fputs@fp:
   961                           	callstack 0
   962                           
   963                           ; 2 bytes @ 0xB
   964  00000C                     	ds	1
   965  00000D                     ___fladd@signs:
   966                           	callstack 0
   967  00000D                     ___awdiv@quotient:
   968                           	callstack 0
   969                           
   970                           ; 2 bytes @ 0xC
   971  00000D                     	ds	1
   972  00000E                     ??_calibrate_white:
   973  00000E                     ___fladd@aexp:
   974                           	callstack 0
   975  00000E                     fputs@c:
   976                           	callstack 0
   977                           
   978                           ; 1 bytes @ 0xD
   979  00000E                     	ds	1
   980  00000F                     ?___fldiv:
   981                           	callstack 0
   982  00000F                     ___fladd@bexp:
   983                           	callstack 0
   984  00000F                     setMotorPWM@m:
   985                           	callstack 0
   986  00000F                     fputs@i:
   987                           	callstack 0
   988  00000F                     ___fldiv@b:
   989                           	callstack 0
   990                           
   991                           ; 4 bytes @ 0xE
   992  00000F                     	ds	1
   993  000010                     ___fladd@grs:
   994                           	callstack 0
   995                           
   996                           ; 1 bytes @ 0xF
   997  000010                     	ds	1
   998  000011                     ??_setMotorPWM:
   999  000011                     ?_pad:
  1000                           	callstack 0
  1001  000011                     ?___flsub:
  1002                           	callstack 0
  1003  000011                     ___aodiv@counter:
  1004                           	callstack 0
  1005  000011                     ___aomod@counter:
  1006                           	callstack 0
  1007  000011                     pad@fp:
  1008                           	callstack 0
  1009  000011                     ___flsub@b:
  1010                           	callstack 0
  1011                           
  1012                           ; 4 bytes @ 0x10
  1013  000011                     	ds	1
  1014  000012                     ___aodiv@sign:
  1015                           	callstack 0
  1016  000012                     ___aomod@sign:
  1017                           	callstack 0
  1018                           
  1019                           ; 1 bytes @ 0x11
  1020  000012                     	ds	1
  1021  000013                     ?_abs:
  1022                           	callstack 0
  1023  000013                     pad@buf:
  1024                           	callstack 0
  1025  000013                     abs@a:
  1026                           	callstack 0
  1027  000013                     ___fldiv@a:
  1028                           	callstack 0
  1029  000013                     ___aodiv@quotient:
  1030                           	callstack 0
  1031                           
  1032                           ; 8 bytes @ 0x12
  1033  000013                     	ds	2
  1034  000015                     ??_abs:
  1035  000015                     pad@p:
  1036                           	callstack 0
  1037  000015                     ___flsub@a:
  1038                           	callstack 0
  1039                           
  1040                           ; 4 bytes @ 0x14
  1041  000015                     	ds	2
  1042  000017                     ??___fldiv:
  1043  000017                     ??_pad:
  1044                           
  1045                           ; 1 bytes @ 0x16
  1046  000017                     	ds	1
  1047  000018                     setMotorPWM@PWMduty:
  1048                           	callstack 0
  1049  000018                     pad@i:
  1050                           	callstack 0
  1051                           
  1052                           ; 2 bytes @ 0x17
  1053  000018                     	ds	1
  1054  000019                     
  1055                           ; 1 bytes @ 0x18
  1056  000019                     	ds	1
  1057  00001A                     stop@mL:
  1058                           	callstack 0
  1059  00001A                     fullSpeedAhead@mL:
  1060                           	callstack 0
  1061  00001A                     pad@w:
  1062                           	callstack 0
  1063                           
  1064                           ; 2 bytes @ 0x19
  1065  00001A                     	ds	1
  1066  00001B                     ___fldiv@rem:
  1067                           	callstack 0
  1068                           
  1069                           ; 4 bytes @ 0x1A
  1070  00001B                     	ds	1
  1071  00001C                     ?_dtoa:
  1072                           	callstack 0
  1073  00001C                     stop@mR:
  1074                           	callstack 0
  1075  00001C                     fullSpeedAhead@mR:
  1076                           	callstack 0
  1077  00001C                     dtoa@fp:
  1078                           	callstack 0
  1079                           
  1080                           ; 2 bytes @ 0x1B
  1081  00001C                     	ds	2
  1082  00001E                     ??_stop:
  1083  00001E                     ??_fullSpeedAhead:
  1084  00001E                     dtoa@d:
  1085                           	callstack 0
  1086                           
  1087                           ; 8 bytes @ 0x1D
  1088  00001E                     	ds	1
  1089  00001F                     ___fldiv@sign:
  1090                           	callstack 0
  1091                           
  1092                           ; 1 bytes @ 0x1E
  1093  00001F                     	ds	1
  1094  000020                     turnLeft@mL:
  1095                           	callstack 0
  1096  000020                     turnRight@mL:
  1097                           	callstack 0
  1098  000020                     fullSpeedBack@mL:
  1099                           	callstack 0
  1100  000020                     halfSpeedBack@mL:
  1101                           	callstack 0
  1102  000020                     ___fldiv@new_exp:
  1103                           	callstack 0
  1104                           
  1105                           ; 2 bytes @ 0x1F
  1106  000020                     	ds	2
  1107  000022                     turnLeft@mR:
  1108                           	callstack 0
  1109  000022                     turnRight@mR:
  1110                           	callstack 0
  1111  000022                     fullSpeedBack@mR:
  1112                           	callstack 0
  1113  000022                     halfSpeedBack@mR:
  1114                           	callstack 0
  1115  000022                     ___fldiv@grs:
  1116                           	callstack 0
  1117                           
  1118                           ; 4 bytes @ 0x21
  1119  000022                     	ds	2
  1120  000024                     ??_fullSpeedBack:
  1121  000024                     ??_halfSpeedBack:
  1122  000024                     turnLeft@angle_left:
  1123                           	callstack 0
  1124  000024                     turnRight@angle_right:
  1125                           	callstack 0
  1126                           
  1127                           ; 1 bytes @ 0x23
  1128  000024                     	ds	1
  1129  000025                     ??_turnLeft:
  1130  000025                     ??_turnRight:
  1131                           
  1132                           ; 1 bytes @ 0x24
  1133  000025                     	ds	1
  1134  000026                     ??_dtoa:
  1135  000026                     ___fldiv@bexp:
  1136                           	callstack 0
  1137  000026                     turnLeft@delay_135:
  1138                           	callstack 0
  1139  000026                     turnRight@delay_135:
  1140                           	callstack 0
  1141  000026                     short_reverse@mL:
  1142                           	callstack 0
  1143  000026                     reverse_square@mL:
  1144                           	callstack 0
  1145  000026                     short_burst_back@mL:
  1146                           	callstack 0
  1147                           
  1148                           ; 2 bytes @ 0x25
  1149  000026                     	ds	1
  1150  000027                     ___fldiv@aexp:
  1151                           	callstack 0
  1152                           
  1153                           ; 1 bytes @ 0x26
  1154  000027                     	ds	1
  1155  000028                     ?___flmul:
  1156                           	callstack 0
  1157  000028                     turnLeft@delay_180:
  1158                           	callstack 0
  1159  000028                     turnRight@delay_180:
  1160                           	callstack 0
  1161  000028                     short_reverse@mR:
  1162                           	callstack 0
  1163  000028                     reverse_square@mR:
  1164                           	callstack 0
  1165  000028                     short_burst_back@mR:
  1166                           	callstack 0
  1167  000028                     ___flmul@b:
  1168                           	callstack 0
  1169                           
  1170                           ; 4 bytes @ 0x27
  1171  000028                     	ds	2
  1172  00002A                     ??_short_burst_back:
  1173  00002A                     ??_short_reverse:
  1174  00002A                     ??_reverse_square:
  1175  00002A                     turnLeft@i:
  1176                           	callstack 0
  1177  00002A                     turnRight@i:
  1178                           	callstack 0
  1179                           
  1180                           ; 2 bytes @ 0x29
  1181  00002A                     	ds	2
  1182  00002C                     turnLeft@i_1332:
  1183                           	callstack 0
  1184  00002C                     turnRight@i_1357:
  1185                           	callstack 0
  1186  00002C                     ___flmul@a:
  1187                           	callstack 0
  1188                           
  1189                           ; 4 bytes @ 0x2B
  1190  00002C                     	ds	2
  1191  00002E                     turnLeft@i_1333:
  1192                           	callstack 0
  1193  00002E                     turnRight@i_1358:
  1194                           	callstack 0
  1195  00002E                     _dtoa$2912:
  1196                           	callstack 0
  1197                           
  1198                           ; 2 bytes @ 0x2D
  1199  00002E                     	ds	2
  1200  000030                     ??___flmul:
  1201  000030                     turnLeft@delay:
  1202                           	callstack 0
  1203  000030                     turnRight@delay:
  1204                           	callstack 0
  1205  000030                     dtoa@p:
  1206                           	callstack 0
  1207                           
  1208                           ; 2 bytes @ 0x2F
  1209  000030                     	ds	2
  1210  000032                     dtoa@w:
  1211                           	callstack 0
  1212                           
  1213                           ; 2 bytes @ 0x31
  1214  000032                     	ds	2
  1215  000034                     ___flmul@sign:
  1216                           	callstack 0
  1217  000034                     dtoa@s:
  1218                           	callstack 0
  1219                           
  1220                           ; 2 bytes @ 0x33
  1221  000034                     	ds	1
  1222  000035                     ___flmul@grs:
  1223                           	callstack 0
  1224                           
  1225                           ; 4 bytes @ 0x34
  1226  000035                     	ds	1
  1227  000036                     dtoa@n:
  1228                           	callstack 0
  1229                           
  1230                           ; 8 bytes @ 0x35
  1231  000036                     	ds	3
  1232  000039                     ___flmul@aexp:
  1233                           	callstack 0
  1234                           
  1235                           ; 1 bytes @ 0x38
  1236  000039                     	ds	1
  1237  00003A                     ___flmul@bexp:
  1238                           	callstack 0
  1239                           
  1240                           ; 1 bytes @ 0x39
  1241  00003A                     	ds	1
  1242  00003B                     ___flmul@prod:
  1243                           	callstack 0
  1244                           
  1245                           ; 4 bytes @ 0x3A
  1246  00003B                     	ds	3
  1247  00003E                     dtoa@i:
  1248                           	callstack 0
  1249                           
  1250                           ; 2 bytes @ 0x3D
  1251  00003E                     	ds	1
  1252  00003F                     ___flmul@temp:
  1253                           	callstack 0
  1254                           
  1255                           ; 2 bytes @ 0x3E
  1256  00003F                     	ds	1
  1257  000040                     ?_vfpfcnvrt:
  1258                           	callstack 0
  1259  000040                     vfpfcnvrt@fp:
  1260                           	callstack 0
  1261                           
  1262                           ; 2 bytes @ 0x3F
  1263  000040                     	ds	1
  1264  000041                     ?_roundf:
  1265                           	callstack 0
  1266  000041                     roundf@x:
  1267                           	callstack 0
  1268                           
  1269                           ; 4 bytes @ 0x40
  1270  000041                     	ds	1
  1271  000042                     vfpfcnvrt@fmt:
  1272                           	callstack 0
  1273                           
  1274                           ; 2 bytes @ 0x41
  1275  000042                     	ds	2
  1276  000044                     vfpfcnvrt@ap:
  1277                           	callstack 0
  1278                           
  1279                           ; 2 bytes @ 0x43
  1280  000044                     	ds	1
  1281  000045                     ??_roundf:
  1282                           
  1283                           ; 1 bytes @ 0x44
  1284  000045                     	ds	1
  1285  000046                     ??_vfpfcnvrt:
  1286                           
  1287                           ; 1 bytes @ 0x45
  1288  000046                     	ds	2
  1289  000048                     vfpfcnvrt@ll:
  1290                           	callstack 0
  1291                           
  1292                           ; 8 bytes @ 0x47
  1293  000048                     	ds	1
  1294  000049                     _roundf$3279:
  1295                           	callstack 0
  1296                           
  1297                           ; 4 bytes @ 0x48
  1298  000049                     	ds	4
  1299  00004D                     roundf@e:
  1300                           	callstack 0
  1301                           
  1302                           ; 2 bytes @ 0x4C
  1303  00004D                     	ds	2
  1304  00004F                     _roundf$3278:
  1305                           	callstack 0
  1306                           
  1307                           ; 4 bytes @ 0x4E
  1308  00004F                     	ds	1
  1309  000050                     ?_vfprintf:
  1310                           	callstack 0
  1311  000050                     vfprintf@fp:
  1312                           	callstack 0
  1313                           
  1314                           ; 2 bytes @ 0x4F
  1315  000050                     	ds	2
  1316  000052                     vfprintf@fmt:
  1317                           	callstack 0
  1318                           
  1319                           ; 2 bytes @ 0x51
  1320  000052                     	ds	1
  1321  000053                     roundf@u:
  1322                           	callstack 0
  1323                           
  1324                           ; 4 bytes @ 0x52
  1325  000053                     	ds	1
  1326  000054                     vfprintf@ap:
  1327                           	callstack 0
  1328                           
  1329                           ; 2 bytes @ 0x53
  1330  000054                     	ds	2
  1331  000056                     vfprintf@cfmt:
  1332                           	callstack 0
  1333                           
  1334                           ; 2 bytes @ 0x55
  1335  000056                     	ds	1
  1336  000057                     roundf@y:
  1337                           	callstack 0
  1338                           
  1339                           ; 4 bytes @ 0x56
  1340  000057                     	ds	1
  1341  000058                     color_display@m:
  1342                           	callstack 0
  1343  000058                     goback@mL:
  1344                           	callstack 0
  1345                           
  1346                           ; 2 bytes @ 0x57
  1347  000058                     	ds	2
  1348  00005A                     color_data_collection@m:
  1349                           	callstack 0
  1350  00005A                     goback@mR:
  1351                           	callstack 0
  1352                           
  1353                           ; 2 bytes @ 0x59
  1354  00005A                     	ds	1
  1355  00005B                     ?___fltol:
  1356                           	callstack 0
  1357  00005B                     ___fltol@f1:
  1358                           	callstack 0
  1359                           
  1360                           ; 4 bytes @ 0x5A
  1361  00005B                     	ds	1
  1362  00005C                     ??_goback:
  1363  00005C                     ??_color_data_collection:
  1364                           
  1365                           ; 1 bytes @ 0x5B
  1366  00005C                     	ds	2
  1367  00005E                     
  1368                           ; 1 bytes @ 0x5D
  1369  00005E                     	ds	1
  1370  00005F                     
  1371                           ; 1 bytes @ 0x5E
  1372 ;;
  1373 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1374 ;;
  1375 ;; *************** function _main *****************
  1376 ;; Defined at:
  1377 ;;		line 29 in file "main.c"
  1378 ;; Parameters:    Size  Location     Type
  1379 ;;		None
  1380 ;; Auto vars:     Size  Location     Type
  1381 ;;  white          28  208[BANK1 ] struct white_card
  1382 ;;  motorR         10  246[BANK1 ] struct DC_motor
  1383 ;;  motorL         10  236[BANK1 ] struct DC_motor
  1384 ;;  rgb             8  200[BANK1 ] struct color_rgb
  1385 ;;  amb             8    0        struct color_rgb
  1386 ;;  amb_light       2    0        unsigned int 
  1387 ;;  stop_signal     1    0        unsigned char 
  1388 ;; Return value:  Size  Location     Type
  1389 ;;                  1    wreg      void 
  1390 ;; Registers used:
  1391 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1392 ;; Tracked objects:
  1393 ;;		On entry : 0/0
  1394 ;;		On exit  : 0/0
  1395 ;;		Unchanged: 0/0
  1396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1397 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1398 ;;      Locals:         0       0      56       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1399 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1400 ;;      Totals:         0       0      56       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1401 ;;Total ram usage:       56 bytes
  1402 ;; Hardware stack levels required when called: 12
  1403 ;; This function calls:
  1404 ;;		_I2C_2_Master_Init
  1405 ;;		_Interrupts_init
  1406 ;;		_Timer0_init
  1407 ;;		_action
  1408 ;;		_amb_light_measure
  1409 ;;		_buggylight_init
  1410 ;;		_calibrate_white
  1411 ;;		_color_click_init
  1412 ;;		_color_predict
  1413 ;;		_detect_color
  1414 ;;		_distance_measure
  1415 ;;		_fullSpeedAhead
  1416 ;;		_initDCmotorsPWM
  1417 ;;		_initDCmotors_parameter
  1418 ;;		_initUSART4
  1419 ;;		_pin_init
  1420 ;;		_short_burst_back
  1421 ;;		_stop
  1422 ;;		_test_function
  1423 ;;		_verify_color
  1424 ;; This function is called by:
  1425 ;;		Startup code after reset
  1426 ;; This function uses a non-reentrant model
  1427 ;;
  1428                           
  1429                           	psect	text0
  1430  005228                     __ptext0:
  1431                           	callstack 0
  1432  005228                     _main:
  1433                           	callstack 19
  1434  005228                     
  1435                           ;main.c: 32:     I2C_2_Master_Init();
  1436  005228  EC6F  F02C         	call	_I2C_2_Master_Init	;wreg free
  1437  00522C                     
  1438                           ;main.c: 33:     color_click_init();
  1439  00522C  EC26  F02C         	call	_color_click_init	;wreg free
  1440  005230                     
  1441                           ;main.c: 34:     initDCmotorsPWM(199);
  1442  005230  0E00               	movlw	0
  1443  005232  6E02               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
  1444  005234  0EC7               	movlw	199
  1445  005236  6E01               	movwf	initDCmotorsPWM@PWMperiod^0,c
  1446  005238  EC34  F02B         	call	_initDCmotorsPWM	;wreg free
  1447  00523C                     
  1448                           ;main.c: 35:     buggylight_init();
  1449  00523C  EC45  F02D         	call	_buggylight_init	;wreg free
  1450  005240                     
  1451                           ;main.c: 36:     initUSART4();
  1452  005240  EC1B  F02D         	call	_initUSART4	;wreg free
  1453  005244                     
  1454                           ;main.c: 37:     Timer0_init();
  1455  005244  EC2A  F02D         	call	_Timer0_init	;wreg free
  1456  005248                     
  1457                           ;main.c: 38:     Interrupts_init();
  1458  005248  EC56  F02D         	call	_Interrupts_init	;wreg free
  1459  00524C                     
  1460                           ;main.c: 40:     struct color_rgb rgb, amb;;main.c: 41:     struct white_card white;;mai
      +                          n.c: 45:     struct DC_motor motorL, motorR;;main.c: 46:     pin_init();
  1461  00524C  ECFB  F02C         	call	_pin_init	;wreg free
  1462  005250                     
  1463                           ;main.c: 47:     initDCmotors_parameter(&motorL, &motorR);
  1464  005250  0EEC               	movlw	low main@motorL
  1465  005252  6E01               	movwf	initDCmotors_parameter@motorL^0,c
  1466  005254  0E01               	movlw	high main@motorL
  1467  005256  6E02               	movwf	(initDCmotors_parameter@motorL+1)^0,c
  1468  005258  0EF6               	movlw	low main@motorR
  1469  00525A  6E03               	movwf	initDCmotors_parameter@motorR^0,c
  1470  00525C  0E01               	movlw	high main@motorR
  1471  00525E  6E04               	movwf	(initDCmotors_parameter@motorR+1)^0,c
  1472  005260  EC40  F025         	call	_initDCmotors_parameter	;wreg free
  1473  005264                     l5606:
  1474                           
  1475                           ;main.c: 61:             test_function(3, &rgb, &white, &motorL, &motorR);
  1476  005264  0EC8               	movlw	low main@rgb
  1477  005266  0100               	movlb	0	; () banked
  1478  005268  6FE6               	movwf	test_function@m& (0+255),b
  1479  00526A  0E01               	movlw	high main@rgb
  1480  00526C  6FE7               	movwf	(test_function@m+1)& (0+255),b
  1481  00526E  0ED0               	movlw	low main@white
  1482  005270  6FE8               	movwf	test_function@w& (0+255),b
  1483  005272  0E01               	movlw	high main@white
  1484  005274  6FE9               	movwf	(test_function@w+1)& (0+255),b
  1485  005276  0EEC               	movlw	low main@motorL
  1486  005278  6FEA               	movwf	test_function@mL& (0+255),b
  1487  00527A  0E01               	movlw	high main@motorL
  1488  00527C  6FEB               	movwf	(test_function@mL+1)& (0+255),b
  1489  00527E  0EF6               	movlw	low main@motorR
  1490  005280  6FEC               	movwf	test_function@mR& (0+255),b
  1491  005282  0E01               	movlw	high main@motorR
  1492  005284  6FED               	movwf	(test_function@mR+1)& (0+255),b
  1493  005286  0E03               	movlw	3
  1494  005288  EC6B  F021         	call	_test_function
  1495  00528C  EF32  F029         	goto	l5606
  1496  005290  EF14  F000         	goto	start
  1497  005294                     __end_of_main:
  1498                           	callstack 0
  1499                           
  1500 ;; *************** function _verify_color *****************
  1501 ;; Defined at:
  1502 ;;		line 365 in file "color.c"
  1503 ;; Parameters:    Size  Location     Type
  1504 ;;  color           1    wreg     unsigned char 
  1505 ;;  m               2   50[BANK0 ] PTR struct color_rgb
  1506 ;;		 -> main@rgb(8), 
  1507 ;;  w               2   52[BANK0 ] PTR struct white_card
  1508 ;;		 -> main@white(28), 
  1509 ;; Auto vars:     Size  Location     Type
  1510 ;;  color           1   58[BANK0 ] unsigned char 
  1511 ;;  color2          2   56[BANK0 ] unsigned int 
  1512 ;;  color3          2    0        unsigned int 
  1513 ;; Return value:  Size  Location     Type
  1514 ;;                  1    wreg      unsigned char 
  1515 ;; Registers used:
  1516 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1517 ;; Tracked objects:
  1518 ;;		On entry : 0/0
  1519 ;;		On exit  : 0/0
  1520 ;;		Unchanged: 0/0
  1521 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1522 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1523 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1524 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1525 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1526 ;;Total ram usage:        9 bytes
  1527 ;; Hardware stack levels used: 1
  1528 ;; Hardware stack levels required when called: 6
  1529 ;; This function calls:
  1530 ;;		_detect_color
  1531 ;; This function is called by:
  1532 ;;		_main
  1533 ;; This function uses a non-reentrant model
  1534 ;;
  1535                           
  1536                           	psect	text1
  1537  00513C                     __ptext1:
  1538                           	callstack 0
  1539  00513C                     _verify_color:
  1540                           	callstack 24
  1541                           
  1542                           ;incstack = 0
  1543                           ;verify_color@color stored from wreg
  1544  00513C  0100               	movlb	0	; () banked
  1545  00513E  6F9A               	movwf	verify_color@color& (0+255),b
  1546  005140                     
  1547                           ;color.c: 365: unsigned char verify_color(unsigned char color,struct color_rgb *m, struc
      +                          t white_card *w);color.c: 366: {;color.c: 367:     _delay((unsigned long)((50)*(64000000
      +                          /4000.0)));
  1548  005140  0E05               	movlw	5
  1549  005142  0100               	movlb	0	; () banked
  1550  005144  6F97               	movwf	(??_verify_color+1)& (0+255),b
  1551  005146  0E0F               	movlw	15
  1552  005148  6F96               	movwf	??_verify_color& (0+255),b
  1553  00514A  0EF1               	movlw	241
  1554  00514C                     u5667:
  1555  00514C  2EE8               	decfsz	wreg,f,c
  1556  00514E  D7FE               	bra	u5667
  1557  005150  2F96               	decfsz	??_verify_color& (0+255),f,b
  1558  005152  D7FC               	bra	u5667
  1559  005154  2F97               	decfsz	(??_verify_color+1)& (0+255),f,b
  1560  005156  D7FA               	bra	u5667
  1561  005158                     
  1562                           ;color.c: 368:     unsigned int color2, color3;;color.c: 369:     color2 = detect_color(
      +                          m,w);
  1563  005158  C092  F071         	movff	verify_color@m,detect_color@m
  1564  00515C  C093  F072         	movff	verify_color@m+1,detect_color@m+1
  1565  005160  C094  F073         	movff	verify_color@w,detect_color@w
  1566  005164  C095  F074         	movff	verify_color@w+1,detect_color@w+1
  1567  005168  EC23  F007         	call	_detect_color	;wreg free
  1568  00516C  0100               	movlb	0	; () banked
  1569  00516E  6F96               	movwf	??_verify_color& (0+255),b
  1570  005170  5196               	movf	??_verify_color& (0+255),w,b
  1571  005172  6F98               	movwf	verify_color@color2& (0+255),b
  1572  005174  6B99               	clrf	(verify_color@color2+1)& (0+255),b
  1573  005176                     
  1574                           ; BSR set to: 0
  1575                           ;color.c: 370:     _delay((unsigned long)((50)*(64000000/4000.0)));
  1576  005176  0E05               	movlw	5
  1577  005178  0100               	movlb	0	; () banked
  1578  00517A  6F97               	movwf	(??_verify_color+1)& (0+255),b
  1579  00517C  0E0F               	movlw	15
  1580  00517E  6F96               	movwf	??_verify_color& (0+255),b
  1581  005180  0EF1               	movlw	241
  1582  005182                     u5677:
  1583  005182  2EE8               	decfsz	wreg,f,c
  1584  005184  D7FE               	bra	u5677
  1585  005186  2F96               	decfsz	??_verify_color& (0+255),f,b
  1586  005188  D7FC               	bra	u5677
  1587  00518A  2F97               	decfsz	(??_verify_color+1)& (0+255),f,b
  1588  00518C  D7FA               	bra	u5677
  1589  00518E                     
  1590                           ;color.c: 372:     if (color == color2){return color;}
  1591  00518E  0100               	movlb	0	; () banked
  1592  005190  519A               	movf	verify_color@color& (0+255),w,b
  1593  005192  6F96               	movwf	??_verify_color& (0+255),b
  1594  005194  6B97               	clrf	(??_verify_color+1)& (0+255),b
  1595  005196  5198               	movf	verify_color@color2& (0+255),w,b
  1596  005198  1996               	xorwf	??_verify_color& (0+255),w,b
  1597  00519A  E107               	bnz	u5341
  1598  00519C  5199               	movf	(verify_color@color2+1)& (0+255),w,b
  1599  00519E  1997               	xorwf	(??_verify_color+1)& (0+255),w,b
  1600  0051A0  A4D8               	btfss	status,2,c
  1601  0051A2  EFD5  F028         	goto	u5341
  1602  0051A6  EFD7  F028         	goto	u5340
  1603  0051AA                     u5341:
  1604  0051AA  EFDA  F028         	goto	l5352
  1605  0051AE                     u5340:
  1606  0051AE                     
  1607                           ; BSR set to: 0
  1608  0051AE  519A               	movf	verify_color@color& (0+255),w,b
  1609  0051B0  EFDB  F028         	goto	l167
  1610  0051B4                     l5352:
  1611                           
  1612                           ; BSR set to: 0
  1613                           ;color.c: 375:         return color;}
  1614  0051B4  0E00               	movlw	0
  1615  0051B6                     l167:
  1616                           
  1617                           ; BSR set to: 0
  1618  0051B6  0012               	return		;funcret
  1619  0051B8                     __end_of_verify_color:
  1620                           	callstack 0
  1621                           
  1622 ;; *************** function _test_function *****************
  1623 ;; Defined at:
  1624 ;;		line 16 in file "test_and_calibration.c"
  1625 ;; Parameters:    Size  Location     Type
  1626 ;;  test_code       1    wreg     unsigned char 
  1627 ;;  m               2  134[BANK0 ] PTR struct color_rgb
  1628 ;;		 -> main@rgb(8), 
  1629 ;;  w               2  136[BANK0 ] PTR struct white_card
  1630 ;;		 -> main@white(28), 
  1631 ;;  mL              2  138[BANK0 ] PTR struct DC_motor
  1632 ;;		 -> main@motorL(10), 
  1633 ;;  mR              2  140[BANK0 ] PTR struct DC_motor
  1634 ;;		 -> main@motorR(10), 
  1635 ;; Auto vars:     Size  Location     Type
  1636 ;;  test_code       1  149[BANK0 ] unsigned char 
  1637 ;;  amb_light       2  144[BANK0 ] unsigned int 
  1638 ;;  stop_signal     1  148[BANK0 ] unsigned char 
  1639 ;;  color           1  147[BANK0 ] unsigned char 
  1640 ;;  complete        1  146[BANK0 ] unsigned char 
  1641 ;; Return value:  Size  Location     Type
  1642 ;;                  1    wreg      void 
  1643 ;; Registers used:
  1644 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1645 ;; Tracked objects:
  1646 ;;		On entry : 0/0
  1647 ;;		On exit  : 0/0
  1648 ;;		Unchanged: 0/0
  1649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1650 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1651 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1652 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1653 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1654 ;;Total ram usage:       16 bytes
  1655 ;; Hardware stack levels used: 1
  1656 ;; Hardware stack levels required when called: 11
  1657 ;; This function calls:
  1658 ;;		_LED_C
  1659 ;;		_amb_light_measure
  1660 ;;		_calibrate_white
  1661 ;;		_color_data_collection
  1662 ;;		_color_display
  1663 ;;		_color_predict
  1664 ;;		_detect_color
  1665 ;;		_distance_measure
  1666 ;;		_fullSpeedAhead
  1667 ;;		_read_color
  1668 ;;		_stop
  1669 ;; This function is called by:
  1670 ;;		_main
  1671 ;; This function uses a non-reentrant model
  1672 ;;
  1673                           
  1674                           	psect	text2
  1675  0042D6                     __ptext2:
  1676                           	callstack 0
  1677  0042D6                     _test_function:
  1678                           	callstack 19
  1679                           
  1680                           ; BSR set to: 0
  1681                           ;incstack = 0
  1682                           ;test_function@test_code stored from wreg
  1683  0042D6  0100               	movlb	0	; () banked
  1684  0042D8  6FF5               	movwf	test_function@test_code& (0+255),b
  1685  0042DA                     
  1686                           ;test_and_calibration.c: 16: void test_function(unsigned char test_code, struct color_rg
      +                          b *m, struct white_card *w, struct DC_motor *mL, struct DC_motor *mR);test_and_calibrati
      +                          on.c: 17: {;test_and_calibration.c: 18:     unsigned char complete = 0;
  1687  0042DA  0E00               	movlw	0
  1688  0042DC  0100               	movlb	0	; () banked
  1689  0042DE  6FF2               	movwf	test_function@complete& (0+255),b
  1690                           
  1691                           ;test_and_calibration.c: 20:     unsigned char stop_signal = 0;
  1692  0042E0  0E00               	movlw	0
  1693  0042E2  6FF4               	movwf	test_function@stop_signal& (0+255),b
  1694                           
  1695                           ;test_and_calibration.c: 21:     unsigned int amb_light = 0;
  1696  0042E4  0E00               	movlw	0
  1697  0042E6  6FF1               	movwf	(test_function@amb_light+1)& (0+255),b
  1698  0042E8  0E00               	movlw	0
  1699  0042EA  6FF0               	movwf	test_function@amb_light& (0+255),b
  1700  0042EC                     
  1701                           ; BSR set to: 0
  1702                           ;test_and_calibration.c: 23:     if (test_code == 2){calibrate_white(w);}
  1703  0042EC  0E02               	movlw	2
  1704  0042EE  19F5               	xorwf	test_function@test_code& (0+255),w,b
  1705  0042F0  A4D8               	btfss	status,2,c
  1706  0042F2  EF7D  F021         	goto	u5371
  1707  0042F6  EF7F  F021         	goto	u5370
  1708  0042FA                     u5371:
  1709  0042FA  EF85  F021         	goto	l5412
  1710  0042FE                     u5370:
  1711  0042FE                     
  1712                           ; BSR set to: 0
  1713  0042FE  C0E8  F00C         	movff	test_function@w,calibrate_white@w
  1714  004302  C0E9  F00D         	movff	test_function@w+1,calibrate_white@w+1
  1715  004306  EC6F  F01B         	call	_calibrate_white	;wreg free
  1716  00430A                     l5412:
  1717                           
  1718                           ;test_and_calibration.c: 24:     if (test_code == 4){amb_light = amb_light_measure(m);}
  1719  00430A  0E04               	movlw	4
  1720  00430C  0100               	movlb	0	; () banked
  1721  00430E  19F5               	xorwf	test_function@test_code& (0+255),w,b
  1722  004310  A4D8               	btfss	status,2,c
  1723  004312  EF8D  F021         	goto	u5381
  1724  004316  EF8F  F021         	goto	u5380
  1725  00431A                     u5381:
  1726  00431A  EF99  F021         	goto	l5416
  1727  00431E                     u5380:
  1728  00431E                     
  1729                           ; BSR set to: 0
  1730  00431E  C0E6  F06A         	movff	test_function@m,amb_light_measure@amb
  1731  004322  C0E7  F06B         	movff	test_function@m+1,amb_light_measure@amb+1
  1732  004326  ECA6  F023         	call	_amb_light_measure	;wreg free
  1733  00432A  C06A  F0F0         	movff	?_amb_light_measure,test_function@amb_light
  1734  00432E  C06B  F0F1         	movff	?_amb_light_measure+1,test_function@amb_light+1
  1735  004332                     l5416:
  1736                           
  1737                           ;test_and_calibration.c: 28:         if (test_code == 1){
  1738  004332  0100               	movlb	0	; () banked
  1739  004334  05F5               	decf	test_function@test_code& (0+255),w,b
  1740  004336  A4D8               	btfss	status,2,c
  1741  004338  EFA0  F021         	goto	u5391
  1742  00433C  EFA2  F021         	goto	u5390
  1743  004340                     u5391:
  1744  004340  EFB0  F021         	goto	l5424
  1745  004344                     u5390:
  1746  004344                     
  1747                           ; BSR set to: 0
  1748                           ;test_and_calibration.c: 29:             LED_C();
  1749  004344  ECEB  F02C         	call	_LED_C	;wreg free
  1750  004348                     
  1751                           ;test_and_calibration.c: 30:             read_color(m);
  1752  004348  C0E6  F00C         	movff	test_function@m,read_color@m
  1753  00434C  C0E7  F00D         	movff	test_function@m+1,read_color@m+1
  1754  004350  ECAB  F029         	call	_read_color	;wreg free
  1755  004354                     
  1756                           ;test_and_calibration.c: 31:             color_display(m);
  1757  004354  C0E6  F058         	movff	test_function@m,color_display@m
  1758  004358  C0E7  F059         	movff	test_function@m+1,color_display@m+1
  1759  00435C  ECDC  F028         	call	_color_display	;wreg free
  1760  004360                     l5424:
  1761                           
  1762                           ;test_and_calibration.c: 34:         if (test_code == 2){
  1763  004360  0E02               	movlw	2
  1764  004362  0100               	movlb	0	; () banked
  1765  004364  19F5               	xorwf	test_function@test_code& (0+255),w,b
  1766  004366  A4D8               	btfss	status,2,c
  1767  004368  EFB8  F021         	goto	u5401
  1768  00436C  EFBA  F021         	goto	u5400
  1769  004370                     u5401:
  1770  004370  EFC9  F021         	goto	l5430
  1771  004374                     u5400:
  1772  004374                     
  1773                           ; BSR set to: 0
  1774                           ;test_and_calibration.c: 35:             color = detect_color(m,w);
  1775  004374  C0E6  F071         	movff	test_function@m,detect_color@m
  1776  004378  C0E7  F072         	movff	test_function@m+1,detect_color@m+1
  1777  00437C  C0E8  F073         	movff	test_function@w,detect_color@w
  1778  004380  C0E9  F074         	movff	test_function@w+1,detect_color@w+1
  1779  004384  EC23  F007         	call	_detect_color	;wreg free
  1780  004388  0100               	movlb	0	; () banked
  1781  00438A  6FF3               	movwf	test_function@color& (0+255),b
  1782  00438C                     
  1783                           ; BSR set to: 0
  1784                           ;test_and_calibration.c: 37:             color_predict(color);
  1785  00438C  51F3               	movf	test_function@color& (0+255),w,b
  1786  00438E  EC58  F02C         	call	_color_predict
  1787  004392                     l5430:
  1788                           
  1789                           ;test_and_calibration.c: 40:         if (test_code == 3){
  1790  004392  0E03               	movlw	3
  1791  004394  0100               	movlb	0	; () banked
  1792  004396  19F5               	xorwf	test_function@test_code& (0+255),w,b
  1793  004398  A4D8               	btfss	status,2,c
  1794  00439A  EFD1  F021         	goto	u5411
  1795  00439E  EFD3  F021         	goto	u5410
  1796  0043A2                     u5411:
  1797  0043A2  EFE6  F021         	goto	l5440
  1798  0043A6                     u5410:
  1799  0043A6  EFDE  F021         	goto	l5438
  1800  0043AA                     l5434:
  1801                           
  1802                           ; BSR set to: 0
  1803                           ;test_and_calibration.c: 42:                 color_data_collection(m);
  1804  0043AA  C0E6  F05A         	movff	test_function@m,color_data_collection@m
  1805  0043AE  C0E7  F05B         	movff	test_function@m+1,color_data_collection@m+1
  1806  0043B2  EC12  F01F         	call	_color_data_collection	;wreg free
  1807  0043B6                     
  1808                           ;test_and_calibration.c: 43:                 complete = 1;
  1809  0043B6  0E01               	movlw	1
  1810  0043B8  0100               	movlb	0	; () banked
  1811  0043BA  6FF2               	movwf	test_function@complete& (0+255),b
  1812  0043BC                     l5438:
  1813                           
  1814                           ; BSR set to: 0
  1815                           ;test_and_calibration.c: 41:             while (complete == 0){
  1816  0043BC  51F2               	movf	test_function@complete& (0+255),w,b
  1817  0043BE  B4D8               	btfsc	status,2,c
  1818  0043C0  EFE4  F021         	goto	u5421
  1819  0043C4  EFE6  F021         	goto	u5420
  1820  0043C8                     u5421:
  1821  0043C8  EFD5  F021         	goto	l5434
  1822  0043CC                     u5420:
  1823  0043CC                     l5440:
  1824                           
  1825                           ; BSR set to: 0
  1826                           ;test_and_calibration.c: 47:         if (test_code == 4){
  1827  0043CC  0E04               	movlw	4
  1828  0043CE  19F5               	xorwf	test_function@test_code& (0+255),w,b
  1829  0043D0  A4D8               	btfss	status,2,c
  1830  0043D2  EFED  F021         	goto	u5431
  1831  0043D6  EFEF  F021         	goto	u5430
  1832  0043DA                     u5431:
  1833  0043DA  EF99  F021         	goto	l5416
  1834  0043DE                     u5430:
  1835  0043DE  EF0B  F022         	goto	l5448
  1836  0043E2                     l5444:
  1837                           
  1838                           ; BSR set to: 0
  1839                           ;test_and_calibration.c: 49:                 fullSpeedAhead(mL, mR);
  1840  0043E2  C0EA  F01A         	movff	test_function@mL,fullSpeedAhead@mL
  1841  0043E6  C0EB  F01B         	movff	test_function@mL+1,fullSpeedAhead@mL+1
  1842  0043EA  C0EC  F01C         	movff	test_function@mR,fullSpeedAhead@mR
  1843  0043EE  C0ED  F01D         	movff	test_function@mR+1,fullSpeedAhead@mR+1
  1844  0043F2  EC54  F028         	call	_fullSpeedAhead	;wreg free
  1845  0043F6                     
  1846                           ;test_and_calibration.c: 50:                 stop_signal = distance_measure(mL, mR, amb_
      +                          light);
  1847  0043F6  C0EA  F06A         	movff	test_function@mL,distance_measure@mL
  1848  0043FA  C0EB  F06B         	movff	test_function@mL+1,distance_measure@mL+1
  1849  0043FE  C0EC  F06C         	movff	test_function@mR,distance_measure@mR
  1850  004402  C0ED  F06D         	movff	test_function@mR+1,distance_measure@mR+1
  1851  004406  C0F0  F06E         	movff	test_function@amb_light,distance_measure@amb_light
  1852  00440A  C0F1  F06F         	movff	test_function@amb_light+1,distance_measure@amb_light+1
  1853  00440E  EC0E  F026         	call	_distance_measure	;wreg free
  1854  004412  0100               	movlb	0	; () banked
  1855  004414  6FF4               	movwf	test_function@stop_signal& (0+255),b
  1856  004416                     l5448:
  1857                           
  1858                           ; BSR set to: 0
  1859                           ;test_and_calibration.c: 48:             while (stop_signal == 0){
  1860  004416  51F4               	movf	test_function@stop_signal& (0+255),w,b
  1861  004418  B4D8               	btfsc	status,2,c
  1862  00441A  EF11  F022         	goto	u5441
  1863  00441E  EF13  F022         	goto	u5440
  1864  004422                     u5441:
  1865  004422  EFF1  F021         	goto	l5444
  1866  004426                     u5440:
  1867  004426                     
  1868                           ; BSR set to: 0
  1869                           ;test_and_calibration.c: 52:             stop(mL, mR);
  1870  004426  C0EA  F01A         	movff	test_function@mL,stop@mL
  1871  00442A  C0EB  F01B         	movff	test_function@mL+1,stop@mL+1
  1872  00442E  C0EC  F01C         	movff	test_function@mR,stop@mR
  1873  004432  C0ED  F01D         	movff	test_function@mR+1,stop@mR+1
  1874  004436  ECF6  F027         	call	_stop	;wreg free
  1875  00443A                     
  1876                           ;test_and_calibration.c: 53:             _delay((unsigned long)((1000)*(64000000/4000.0)
      +                          ));
  1877  00443A  0E52               	movlw	82
  1878  00443C  0100               	movlb	0	; () banked
  1879  00443E  6FEF               	movwf	(??_test_function+1)& (0+255),b
  1880  004440  0E2B               	movlw	43
  1881  004442  6FEE               	movwf	??_test_function& (0+255),b
  1882  004444  0E00               	movlw	0
  1883  004446                     u5687:
  1884  004446  2EE8               	decfsz	wreg,f,c
  1885  004448  D7FE               	bra	u5687
  1886  00444A  2FEE               	decfsz	??_test_function& (0+255),f,b
  1887  00444C  D7FC               	bra	u5687
  1888  00444E  2FEF               	decfsz	(??_test_function+1)& (0+255),f,b
  1889  004450  D7FA               	bra	u5687
  1890  004452  F000               	nop	
  1891  004454                     
  1892                           ;test_and_calibration.c: 54:             stop_signal = 0;
  1893  004454  0E00               	movlw	0
  1894  004456  0100               	movlb	0	; () banked
  1895  004458  6FF4               	movwf	test_function@stop_signal& (0+255),b
  1896  00445A  EF99  F021         	goto	l5416
  1897  00445E  0012               	return		;funcret
  1898  004460                     __end_of_test_function:
  1899                           	callstack 0
  1900                           
  1901 ;; *************** function _distance_measure *****************
  1902 ;; Defined at:
  1903 ;;		line 401 in file "color.c"
  1904 ;; Parameters:    Size  Location     Type
  1905 ;;  mL              2   10[BANK0 ] PTR struct DC_motor
  1906 ;;		 -> main@motorL(10), 
  1907 ;;  mR              2   12[BANK0 ] PTR struct DC_motor
  1908 ;;		 -> main@motorR(10), 
  1909 ;;  amb_light       2   14[BANK0 ] unsigned int 
  1910 ;; Auto vars:     Size  Location     Type
  1911 ;;  threshold       2   26[BANK0 ] unsigned int 
  1912 ;;  CC_amb          2   24[BANK0 ] unsigned int 
  1913 ;;  CG_amb          2   18[BANK0 ] unsigned int 
  1914 ;;  stop            1   28[BANK0 ] unsigned char 
  1915 ;; Return value:  Size  Location     Type
  1916 ;;                  1    wreg      unsigned char 
  1917 ;; Registers used:
  1918 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  1919 ;; Tracked objects:
  1920 ;;		On entry : 0/0
  1921 ;;		On exit  : 0/0
  1922 ;;		Unchanged: 0/0
  1923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1924 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1925 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1926 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1927 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1928 ;;Total ram usage:       19 bytes
  1929 ;; Hardware stack levels used: 1
  1930 ;; Hardware stack levels required when called: 5
  1931 ;; This function calls:
  1932 ;;		_LED_C
  1933 ;;		___flmul
  1934 ;;		___xxtofl
  1935 ;;		_color_read_Clear
  1936 ;;		_color_read_Green
  1937 ;;		_lroundf
  1938 ;; This function is called by:
  1939 ;;		_main
  1940 ;;		_test_function
  1941 ;; This function uses a non-reentrant model
  1942 ;;
  1943                           
  1944                           	psect	text3
  1945  004C1C                     __ptext3:
  1946                           	callstack 0
  1947  004C1C                     _distance_measure:
  1948                           	callstack 24
  1949  004C1C  0E00               	movlw	0
  1950  004C1E  0100               	movlb	0	; () banked
  1951  004C20  6F73               	movwf	(distance_measure@CG_amb+1)& (0+255),b
  1952  004C22  0E00               	movlw	0
  1953  004C24  6F72               	movwf	distance_measure@CG_amb& (0+255),b
  1954                           
  1955                           ;color.c: 404:     unsigned char stop = 0;
  1956  004C26  0E00               	movlw	0
  1957  004C28  6F7C               	movwf	distance_measure@stop& (0+255),b
  1958                           
  1959                           ;color.c: 405:     unsigned int threshold = 0;
  1960  004C2A  0E00               	movlw	0
  1961  004C2C  6F7B               	movwf	(distance_measure@threshold+1)& (0+255),b
  1962  004C2E  0E00               	movlw	0
  1963  004C30  6F7A               	movwf	distance_measure@threshold& (0+255),b
  1964  004C32                     
  1965                           ; BSR set to: 0
  1966                           ;color.c: 406:     LED_C();
  1967  004C32  ECEB  F02C         	call	_LED_C	;wreg free
  1968  004C36                     
  1969                           ;color.c: 407:     _delay((unsigned long)((100)*(64000000/4000.0)));
  1970  004C36  0E09               	movlw	9
  1971  004C38  0100               	movlb	0	; () banked
  1972  004C3A  6F71               	movwf	(??_distance_measure+1)& (0+255),b
  1973  004C3C  0E1E               	movlw	30
  1974  004C3E  6F70               	movwf	??_distance_measure& (0+255),b
  1975  004C40  0EE4               	movlw	228
  1976  004C42                     u5697:
  1977  004C42  2EE8               	decfsz	wreg,f,c
  1978  004C44  D7FE               	bra	u5697
  1979  004C46  2F70               	decfsz	??_distance_measure& (0+255),f,b
  1980  004C48  D7FC               	bra	u5697
  1981  004C4A  2F71               	decfsz	(??_distance_measure+1)& (0+255),f,b
  1982  004C4C  D7FA               	bra	u5697
  1983  004C4E  F000               	nop	
  1984  004C50                     
  1985                           ;color.c: 408:     CC_amb = color_read_Clear();
  1986  004C50  ECA6  F02A         	call	_color_read_Clear	;wreg free
  1987  004C54  C005  F078         	movff	?_color_read_Clear,distance_measure@CC_amb
  1988  004C58  C006  F079         	movff	?_color_read_Clear+1,distance_measure@CC_amb+1
  1989  004C5C  EC56  F02A         	call	_color_read_Green	;wreg free
  1990  004C60                     
  1991                           ;color.c: 410:     threshold = lroundf((float)amb_light * 1.05);
  1992  004C60  C06E  F001         	movff	distance_measure@amb_light,___xxtofl@val
  1993  004C64  C06F  F002         	movff	distance_measure@amb_light+1,___xxtofl@val+1
  1994  004C68  6A03               	clrf	(___xxtofl@val+2)^0,c
  1995  004C6A  6A04               	clrf	(___xxtofl@val+3)^0,c
  1996  004C6C  0E00               	movlw	0
  1997  004C6E  EC5E  F01D         	call	___xxtofl
  1998  004C72  C001  F028         	movff	?___xxtofl,___flmul@b
  1999  004C76  C002  F029         	movff	?___xxtofl+1,___flmul@b+1
  2000  004C7A  C003  F02A         	movff	?___xxtofl+2,___flmul@b+2
  2001  004C7E  C004  F02B         	movff	?___xxtofl+3,___flmul@b+3
  2002  004C82  0E66               	movlw	102
  2003  004C84  6E2C               	movwf	___flmul@a^0,c
  2004  004C86  0E66               	movlw	102
  2005  004C88  6E2D               	movwf	(___flmul@a+1)^0,c
  2006  004C8A  0E86               	movlw	134
  2007  004C8C  6E2E               	movwf	(___flmul@a+2)^0,c
  2008  004C8E  0E3F               	movlw	63
  2009  004C90  6E2F               	movwf	(___flmul@a+3)^0,c
  2010  004C92  ECB5  F00F         	call	___flmul	;wreg free
  2011  004C96  C028  F074         	movff	?___flmul,_distance_measure$3277
  2012  004C9A  C029  F075         	movff	?___flmul+1,_distance_measure$3277+1
  2013  004C9E  C02A  F076         	movff	?___flmul+2,_distance_measure$3277+2
  2014  004CA2  C02B  F077         	movff	?___flmul+3,_distance_measure$3277+3
  2015  004CA6                     
  2016                           ;color.c: 410:     threshold = lroundf((float)amb_light * 1.05);
  2017  004CA6  C074  F066         	movff	_distance_measure$3277,lroundf@x
  2018  004CAA  C075  F067         	movff	_distance_measure$3277+1,lroundf@x+1
  2019  004CAE  C076  F068         	movff	_distance_measure$3277+2,lroundf@x+2
  2020  004CB2  C077  F069         	movff	_distance_measure$3277+3,lroundf@x+3
  2021  004CB6  ECD2  F02B         	call	_lroundf	;wreg free
  2022  004CBA  C066  F07A         	movff	?_lroundf,distance_measure@threshold
  2023  004CBE  C067  F07B         	movff	?_lroundf+1,distance_measure@threshold+1
  2024  004CC2                     
  2025                           ;color.c: 413:     if (CC_amb >= threshold){stop = 1;}
  2026  004CC2  0100               	movlb	0	; () banked
  2027  004CC4  517A               	movf	distance_measure@threshold& (0+255),w,b
  2028  004CC6  5D78               	subwf	distance_measure@CC_amb& (0+255),w,b
  2029  004CC8  517B               	movf	(distance_measure@threshold+1)& (0+255),w,b
  2030  004CCA  5979               	subwfb	(distance_measure@CC_amb+1)& (0+255),w,b
  2031  004CCC  A0D8               	btfss	status,0,c
  2032  004CCE  EF6B  F026         	goto	u5221
  2033  004CD2  EF6D  F026         	goto	u5220
  2034  004CD6                     u5221:
  2035  004CD6  EF6F  F026         	goto	l174
  2036  004CDA                     u5220:
  2037  004CDA                     
  2038                           ; BSR set to: 0
  2039  004CDA  0E01               	movlw	1
  2040  004CDC  6F7C               	movwf	distance_measure@stop& (0+255),b
  2041  004CDE                     l174:
  2042                           
  2043                           ; BSR set to: 0
  2044                           ;color.c: 414:     return stop;
  2045  004CDE  517C               	movf	distance_measure@stop& (0+255),w,b
  2046  004CE0                     
  2047                           ; BSR set to: 0
  2048  004CE0  0012               	return		;funcret
  2049  004CE2                     __end_of_distance_measure:
  2050                           	callstack 0
  2051                           
  2052 ;; *************** function _detect_color *****************
  2053 ;; Defined at:
  2054 ;;		line 290 in file "color.c"
  2055 ;; Parameters:    Size  Location     Type
  2056 ;;  m               2   17[BANK0 ] PTR struct color_rgb
  2057 ;;		 -> main@rgb(8), 
  2058 ;;  w               2   19[BANK0 ] PTR struct white_card
  2059 ;;		 -> main@white(28), 
  2060 ;; Auto vars:     Size  Location     Type
  2061 ;;  BR              2   44[BANK0 ] unsigned int 
  2062 ;;  BG              2   41[BANK0 ] unsigned int 
  2063 ;;  GG              2   39[BANK0 ] unsigned int 
  2064 ;;  BB              2   37[BANK0 ] unsigned int 
  2065 ;;  RR              2   35[BANK0 ] unsigned int 
  2066 ;;  GR              2   33[BANK0 ] unsigned int 
  2067 ;;  BC              2   31[BANK0 ] unsigned int 
  2068 ;;  GB              2   29[BANK0 ] unsigned int 
  2069 ;;  RB              2   27[BANK0 ] unsigned int 
  2070 ;;  RG              2   25[BANK0 ] unsigned int 
  2071 ;;  color           1   43[BANK0 ] unsigned char 
  2072 ;; Return value:  Size  Location     Type
  2073 ;;                  1    wreg      unsigned char 
  2074 ;; Registers used:
  2075 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2076 ;; Tracked objects:
  2077 ;;		On entry : 0/0
  2078 ;;		On exit  : 0/0
  2079 ;;		Unchanged: 0/0
  2080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2081 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2082 ;;      Locals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2083 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2084 ;;      Totals:         0      33       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2085 ;;Total ram usage:       33 bytes
  2086 ;; Hardware stack levels used: 1
  2087 ;; Hardware stack levels required when called: 5
  2088 ;; This function calls:
  2089 ;;		_LED_B
  2090 ;;		_LED_G
  2091 ;;		_LED_R
  2092 ;;		___fldiv
  2093 ;;		___flmul
  2094 ;;		___wmul
  2095 ;;		___xxtofl
  2096 ;;		_compare
  2097 ;;		_lroundf
  2098 ;;		_read_color
  2099 ;;		_toggle_light
  2100 ;; This function is called by:
  2101 ;;		_verify_color
  2102 ;;		_main
  2103 ;;		_test_function
  2104 ;; This function uses a non-reentrant model
  2105 ;;
  2106                           
  2107                           	psect	text4
  2108  000E46                     __ptext4:
  2109                           	callstack 0
  2110  000E46                     _detect_color:
  2111                           	callstack 24
  2112  000E46  0E00               	movlw	0
  2113  000E48  0100               	movlb	0	; () banked
  2114  000E4A  6F7A               	movwf	(detect_color@RG+1)& (0+255),b
  2115  000E4C  0E00               	movlw	0
  2116  000E4E  6F79               	movwf	detect_color@RG& (0+255),b
  2117  000E50  0E00               	movlw	0
  2118  000E52  6F7C               	movwf	(detect_color@RB+1)& (0+255),b
  2119  000E54  0E00               	movlw	0
  2120  000E56  6F7B               	movwf	detect_color@RB& (0+255),b
  2121  000E58  0E00               	movlw	0
  2122  000E5A  6F82               	movwf	(detect_color@GR+1)& (0+255),b
  2123  000E5C  0E00               	movlw	0
  2124  000E5E  6F81               	movwf	detect_color@GR& (0+255),b
  2125  000E60  0E00               	movlw	0
  2126  000E62  6F88               	movwf	(detect_color@GG+1)& (0+255),b
  2127  000E64  0E00               	movlw	0
  2128  000E66  6F87               	movwf	detect_color@GG& (0+255),b
  2129  000E68  0E00               	movlw	0
  2130  000E6A  6F7E               	movwf	(detect_color@GB+1)& (0+255),b
  2131  000E6C  0E00               	movlw	0
  2132  000E6E  6F7D               	movwf	detect_color@GB& (0+255),b
  2133  000E70  0E00               	movlw	0
  2134  000E72  6F8D               	movwf	(detect_color@BR+1)& (0+255),b
  2135  000E74  0E00               	movlw	0
  2136  000E76  6F8C               	movwf	detect_color@BR& (0+255),b
  2137  000E78  0E00               	movlw	0
  2138  000E7A  6F8A               	movwf	(detect_color@BG+1)& (0+255),b
  2139  000E7C  0E00               	movlw	0
  2140  000E7E  6F89               	movwf	detect_color@BG& (0+255),b
  2141  000E80  0E00               	movlw	0
  2142  000E82  6F86               	movwf	(detect_color@BB+1)& (0+255),b
  2143  000E84  0E00               	movlw	0
  2144  000E86  6F85               	movwf	detect_color@BB& (0+255),b
  2145  000E88  0E00               	movlw	0
  2146  000E8A  6F80               	movwf	(detect_color@BC+1)& (0+255),b
  2147  000E8C  0E00               	movlw	0
  2148  000E8E  6F7F               	movwf	detect_color@BC& (0+255),b
  2149                           
  2150                           ;color.c: 296:     unsigned char color = 0;
  2151  000E90  0E00               	movlw	0
  2152  000E92  6F8B               	movwf	detect_color@color& (0+255),b
  2153  000E94                     
  2154                           ; BSR set to: 0
  2155                           ;color.c: 298:     LED_R();
  2156  000E94  ECAB  F02C         	call	_LED_R	;wreg free
  2157  000E98                     
  2158                           ;color.c: 299:     _delay((unsigned long)((100)*(64000000/4000.0)));
  2159  000E98  0E09               	movlw	9
  2160  000E9A  0100               	movlb	0	; () banked
  2161  000E9C  6F76               	movwf	(??_detect_color+1)& (0+255),b
  2162  000E9E  0E1E               	movlw	30
  2163  000EA0  6F75               	movwf	??_detect_color& (0+255),b
  2164  000EA2  0EE4               	movlw	228
  2165  000EA4                     u5707:
  2166  000EA4  2EE8               	decfsz	wreg,f,c
  2167  000EA6  D7FE               	bra	u5707
  2168  000EA8  2F75               	decfsz	??_detect_color& (0+255),f,b
  2169  000EAA  D7FC               	bra	u5707
  2170  000EAC  2F76               	decfsz	(??_detect_color+1)& (0+255),f,b
  2171  000EAE  D7FA               	bra	u5707
  2172  000EB0  F000               	nop	
  2173  000EB2                     
  2174                           ;color.c: 300:     read_color(m);
  2175  000EB2  C071  F00C         	movff	detect_color@m,read_color@m
  2176  000EB6  C072  F00D         	movff	detect_color@m+1,read_color@m+1
  2177  000EBA  ECAB  F029         	call	_read_color	;wreg free
  2178  000EBE                     
  2179                           ;color.c: 302:     RR = lroundf((float)(m->R)/(w->RR)*100); RG = lroundf((float)(m->G)/(
      +                          w->RG)*100); RB = lroundf((float)(m->B)/(w->RB)*100);
  2180  000EBE  C073  FFD9         	movff	detect_color@w,fsr2l
  2181  000EC2  C074  FFDA         	movff	detect_color@w+1,fsr2h
  2182  000EC6  CFDE F075          	movff	postinc2,??_detect_color
  2183  000ECA  CFDD F076          	movff	postdec2,??_detect_color+1
  2184  000ECE  C075  F001         	movff	??_detect_color,___xxtofl@val
  2185  000ED2  C076  F002         	movff	??_detect_color+1,___xxtofl@val+1
  2186  000ED6  6A03               	clrf	(___xxtofl@val+2)^0,c
  2187  000ED8  6A04               	clrf	(___xxtofl@val+3)^0,c
  2188  000EDA  0E00               	movlw	0
  2189  000EDC  EC5E  F01D         	call	___xxtofl
  2190  000EE0  C001  F013         	movff	?___xxtofl,___fldiv@a
  2191  000EE4  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  2192  000EE8  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  2193  000EEC  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  2194  000EF0  C071  FFD9         	movff	detect_color@m,fsr2l
  2195  000EF4  C072  FFDA         	movff	detect_color@m+1,fsr2h
  2196  000EF8  CFDE F077          	movff	postinc2,??_detect_color+2
  2197  000EFC  CFDD F078          	movff	postdec2,??_detect_color+3
  2198  000F00  C077  F001         	movff	??_detect_color+2,___xxtofl@val
  2199  000F04  C078  F002         	movff	??_detect_color+3,___xxtofl@val+1
  2200  000F08  6A03               	clrf	(___xxtofl@val+2)^0,c
  2201  000F0A  6A04               	clrf	(___xxtofl@val+3)^0,c
  2202  000F0C  0E00               	movlw	0
  2203  000F0E  EC5E  F01D         	call	___xxtofl
  2204  000F12  C001  F00F         	movff	?___xxtofl,___fldiv@b
  2205  000F16  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  2206  000F1A  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  2207  000F1E  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  2208  000F22  ECA1  F013         	call	___fldiv	;wreg free
  2209  000F26  C00F  F028         	movff	?___fldiv,___flmul@b
  2210  000F2A  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  2211  000F2E  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  2212  000F32  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  2213  000F36  0E00               	movlw	0
  2214  000F38  6E2C               	movwf	___flmul@a^0,c
  2215  000F3A  0E00               	movlw	0
  2216  000F3C  6E2D               	movwf	(___flmul@a+1)^0,c
  2217  000F3E  0EC8               	movlw	200
  2218  000F40  6E2E               	movwf	(___flmul@a+2)^0,c
  2219  000F42  0E42               	movlw	66
  2220  000F44  6E2F               	movwf	(___flmul@a+3)^0,c
  2221  000F46  ECB5  F00F         	call	___flmul	;wreg free
  2222  000F4A  C028  F08E         	movff	?___flmul,_detect_color$3276
  2223  000F4E  C029  F08F         	movff	?___flmul+1,_detect_color$3276+1
  2224  000F52  C02A  F090         	movff	?___flmul+2,_detect_color$3276+2
  2225  000F56  C02B  F091         	movff	?___flmul+3,_detect_color$3276+3
  2226  000F5A                     
  2227                           ;color.c: 302:     RR = lroundf((float)(m->R)/(w->RR)*100); RG = lroundf((float)(m->G)/(
      +                          w->RG)*100); RB = lroundf((float)(m->B)/(w->RB)*100);
  2228  000F5A  C08E  F066         	movff	_detect_color$3276,lroundf@x
  2229  000F5E  C08F  F067         	movff	_detect_color$3276+1,lroundf@x+1
  2230  000F62  C090  F068         	movff	_detect_color$3276+2,lroundf@x+2
  2231  000F66  C091  F069         	movff	_detect_color$3276+3,lroundf@x+3
  2232  000F6A  ECD2  F02B         	call	_lroundf	;wreg free
  2233  000F6E  C066  F083         	movff	?_lroundf,detect_color@RR
  2234  000F72  C067  F084         	movff	?_lroundf+1,detect_color@RR+1
  2235  000F76  0100               	movlb	0	; () banked
  2236  000F78  EE20 F002          	lfsr	2,2
  2237  000F7C  5173               	movf	detect_color@w& (0+255),w,b
  2238  000F7E  26D9               	addwf	fsr2l,f,c
  2239  000F80  5174               	movf	(detect_color@w+1)& (0+255),w,b
  2240  000F82  22DA               	addwfc	fsr2h,f,c
  2241  000F84  CFDE F075          	movff	postinc2,??_detect_color
  2242  000F88  CFDD F076          	movff	postdec2,??_detect_color+1
  2243  000F8C  C075  F001         	movff	??_detect_color,___xxtofl@val
  2244  000F90  C076  F002         	movff	??_detect_color+1,___xxtofl@val+1
  2245  000F94  6A03               	clrf	(___xxtofl@val+2)^0,c
  2246  000F96  6A04               	clrf	(___xxtofl@val+3)^0,c
  2247  000F98  0E00               	movlw	0
  2248  000F9A  EC5E  F01D         	call	___xxtofl
  2249  000F9E  C001  F013         	movff	?___xxtofl,___fldiv@a
  2250  000FA2  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  2251  000FA6  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  2252  000FAA  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  2253  000FAE  0100               	movlb	0	; () banked
  2254  000FB0  EE20 F002          	lfsr	2,2
  2255  000FB4  5171               	movf	detect_color@m& (0+255),w,b
  2256  000FB6  26D9               	addwf	fsr2l,f,c
  2257  000FB8  5172               	movf	(detect_color@m+1)& (0+255),w,b
  2258  000FBA  22DA               	addwfc	fsr2h,f,c
  2259  000FBC  CFDE F077          	movff	postinc2,??_detect_color+2
  2260  000FC0  CFDD F078          	movff	postdec2,??_detect_color+3
  2261  000FC4  C077  F001         	movff	??_detect_color+2,___xxtofl@val
  2262  000FC8  C078  F002         	movff	??_detect_color+3,___xxtofl@val+1
  2263  000FCC  6A03               	clrf	(___xxtofl@val+2)^0,c
  2264  000FCE  6A04               	clrf	(___xxtofl@val+3)^0,c
  2265  000FD0  0E00               	movlw	0
  2266  000FD2  EC5E  F01D         	call	___xxtofl
  2267  000FD6  C001  F00F         	movff	?___xxtofl,___fldiv@b
  2268  000FDA  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  2269  000FDE  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  2270  000FE2  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  2271  000FE6  ECA1  F013         	call	___fldiv	;wreg free
  2272  000FEA  C00F  F028         	movff	?___fldiv,___flmul@b
  2273  000FEE  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  2274  000FF2  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  2275  000FF6  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  2276  000FFA  0E00               	movlw	0
  2277  000FFC  6E2C               	movwf	___flmul@a^0,c
  2278  000FFE  0E00               	movlw	0
  2279  001000  6E2D               	movwf	(___flmul@a+1)^0,c
  2280  001002  0EC8               	movlw	200
  2281  001004  6E2E               	movwf	(___flmul@a+2)^0,c
  2282  001006  0E42               	movlw	66
  2283  001008  6E2F               	movwf	(___flmul@a+3)^0,c
  2284  00100A  ECB5  F00F         	call	___flmul	;wreg free
  2285  00100E  C028  F08E         	movff	?___flmul,_detect_color$3276
  2286  001012  C029  F08F         	movff	?___flmul+1,_detect_color$3276+1
  2287  001016  C02A  F090         	movff	?___flmul+2,_detect_color$3276+2
  2288  00101A  C02B  F091         	movff	?___flmul+3,_detect_color$3276+3
  2289  00101E  C08E  F066         	movff	_detect_color$3276,lroundf@x
  2290  001022  C08F  F067         	movff	_detect_color$3276+1,lroundf@x+1
  2291  001026  C090  F068         	movff	_detect_color$3276+2,lroundf@x+2
  2292  00102A  C091  F069         	movff	_detect_color$3276+3,lroundf@x+3
  2293  00102E  ECD2  F02B         	call	_lroundf	;wreg free
  2294  001032  0100               	movlb	0	; () banked
  2295  001034  EE20 F004          	lfsr	2,4
  2296  001038  5173               	movf	detect_color@w& (0+255),w,b
  2297  00103A  26D9               	addwf	fsr2l,f,c
  2298  00103C  5174               	movf	(detect_color@w+1)& (0+255),w,b
  2299  00103E  22DA               	addwfc	fsr2h,f,c
  2300  001040  CFDE F075          	movff	postinc2,??_detect_color
  2301  001044  CFDD F076          	movff	postdec2,??_detect_color+1
  2302  001048  C075  F001         	movff	??_detect_color,___xxtofl@val
  2303  00104C  C076  F002         	movff	??_detect_color+1,___xxtofl@val+1
  2304  001050  6A03               	clrf	(___xxtofl@val+2)^0,c
  2305  001052  6A04               	clrf	(___xxtofl@val+3)^0,c
  2306  001054  0E00               	movlw	0
  2307  001056  EC5E  F01D         	call	___xxtofl
  2308  00105A  C001  F013         	movff	?___xxtofl,___fldiv@a
  2309  00105E  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  2310  001062  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  2311  001066  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  2312  00106A  0100               	movlb	0	; () banked
  2313  00106C  EE20 F004          	lfsr	2,4
  2314  001070  5171               	movf	detect_color@m& (0+255),w,b
  2315  001072  26D9               	addwf	fsr2l,f,c
  2316  001074  5172               	movf	(detect_color@m+1)& (0+255),w,b
  2317  001076  22DA               	addwfc	fsr2h,f,c
  2318  001078  CFDE F077          	movff	postinc2,??_detect_color+2
  2319  00107C  CFDD F078          	movff	postdec2,??_detect_color+3
  2320  001080  C077  F001         	movff	??_detect_color+2,___xxtofl@val
  2321  001084  C078  F002         	movff	??_detect_color+3,___xxtofl@val+1
  2322  001088  6A03               	clrf	(___xxtofl@val+2)^0,c
  2323  00108A  6A04               	clrf	(___xxtofl@val+3)^0,c
  2324  00108C  0E00               	movlw	0
  2325  00108E  EC5E  F01D         	call	___xxtofl
  2326  001092  C001  F00F         	movff	?___xxtofl,___fldiv@b
  2327  001096  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  2328  00109A  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  2329  00109E  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  2330  0010A2  ECA1  F013         	call	___fldiv	;wreg free
  2331  0010A6  C00F  F028         	movff	?___fldiv,___flmul@b
  2332  0010AA  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  2333  0010AE  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  2334  0010B2  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  2335  0010B6  0E00               	movlw	0
  2336  0010B8  6E2C               	movwf	___flmul@a^0,c
  2337  0010BA  0E00               	movlw	0
  2338  0010BC  6E2D               	movwf	(___flmul@a+1)^0,c
  2339  0010BE  0EC8               	movlw	200
  2340  0010C0  6E2E               	movwf	(___flmul@a+2)^0,c
  2341  0010C2  0E42               	movlw	66
  2342  0010C4  6E2F               	movwf	(___flmul@a+3)^0,c
  2343  0010C6  ECB5  F00F         	call	___flmul	;wreg free
  2344  0010CA  C028  F08E         	movff	?___flmul,_detect_color$3276
  2345  0010CE  C029  F08F         	movff	?___flmul+1,_detect_color$3276+1
  2346  0010D2  C02A  F090         	movff	?___flmul+2,_detect_color$3276+2
  2347  0010D6  C02B  F091         	movff	?___flmul+3,_detect_color$3276+3
  2348  0010DA  C08E  F066         	movff	_detect_color$3276,lroundf@x
  2349  0010DE  C08F  F067         	movff	_detect_color$3276+1,lroundf@x+1
  2350  0010E2  C090  F068         	movff	_detect_color$3276+2,lroundf@x+2
  2351  0010E6  C091  F069         	movff	_detect_color$3276+3,lroundf@x+3
  2352  0010EA  ECD2  F02B         	call	_lroundf	;wreg free
  2353  0010EE                     
  2354                           ;color.c: 303:     _delay((unsigned long)((50)*(64000000/4000.0)));
  2355  0010EE  0E05               	movlw	5
  2356  0010F0  0100               	movlb	0	; () banked
  2357  0010F2  6F76               	movwf	(??_detect_color+1)& (0+255),b
  2358  0010F4  0E0F               	movlw	15
  2359  0010F6  6F75               	movwf	??_detect_color& (0+255),b
  2360  0010F8  0EF1               	movlw	241
  2361  0010FA                     u5717:
  2362  0010FA  2EE8               	decfsz	wreg,f,c
  2363  0010FC  D7FE               	bra	u5717
  2364  0010FE  2F75               	decfsz	??_detect_color& (0+255),f,b
  2365  001100  D7FC               	bra	u5717
  2366  001102  2F76               	decfsz	(??_detect_color+1)& (0+255),f,b
  2367  001104  D7FA               	bra	u5717
  2368  001106                     
  2369                           ;color.c: 309:     LED_G();
  2370  001106  ECCB  F02C         	call	_LED_G	;wreg free
  2371  00110A                     
  2372                           ;color.c: 310:     _delay((unsigned long)((100)*(64000000/4000.0)));
  2373  00110A  0E09               	movlw	9
  2374  00110C  0100               	movlb	0	; () banked
  2375  00110E  6F76               	movwf	(??_detect_color+1)& (0+255),b
  2376  001110  0E1E               	movlw	30
  2377  001112  6F75               	movwf	??_detect_color& (0+255),b
  2378  001114  0EE4               	movlw	228
  2379  001116                     u5727:
  2380  001116  2EE8               	decfsz	wreg,f,c
  2381  001118  D7FE               	bra	u5727
  2382  00111A  2F75               	decfsz	??_detect_color& (0+255),f,b
  2383  00111C  D7FC               	bra	u5727
  2384  00111E  2F76               	decfsz	(??_detect_color+1)& (0+255),f,b
  2385  001120  D7FA               	bra	u5727
  2386  001122  F000               	nop	
  2387  001124                     
  2388                           ;color.c: 311:     read_color(m);
  2389  001124  C071  F00C         	movff	detect_color@m,read_color@m
  2390  001128  C072  F00D         	movff	detect_color@m+1,read_color@m+1
  2391  00112C  ECAB  F029         	call	_read_color	;wreg free
  2392  001130                     
  2393                           ;color.c: 314:     GR = lroundf((float)(m->R)/(w->GR)*100); GG = lroundf((float)(m->G)/(
      +                          w->GG)*100); GB = lroundf((float)(m->B)/(w->GB)*100);
  2394  001130  0100               	movlb	0	; () banked
  2395  001132  EE20 F006          	lfsr	2,6
  2396  001136  5173               	movf	detect_color@w& (0+255),w,b
  2397  001138  26D9               	addwf	fsr2l,f,c
  2398  00113A  5174               	movf	(detect_color@w+1)& (0+255),w,b
  2399  00113C  22DA               	addwfc	fsr2h,f,c
  2400  00113E  CFDE F075          	movff	postinc2,??_detect_color
  2401  001142  CFDD F076          	movff	postdec2,??_detect_color+1
  2402  001146  C075  F001         	movff	??_detect_color,___xxtofl@val
  2403  00114A  C076  F002         	movff	??_detect_color+1,___xxtofl@val+1
  2404  00114E  6A03               	clrf	(___xxtofl@val+2)^0,c
  2405  001150  6A04               	clrf	(___xxtofl@val+3)^0,c
  2406  001152  0E00               	movlw	0
  2407  001154  EC5E  F01D         	call	___xxtofl
  2408  001158  C001  F013         	movff	?___xxtofl,___fldiv@a
  2409  00115C  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  2410  001160  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  2411  001164  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  2412  001168  C071  FFD9         	movff	detect_color@m,fsr2l
  2413  00116C  C072  FFDA         	movff	detect_color@m+1,fsr2h
  2414  001170  CFDE F077          	movff	postinc2,??_detect_color+2
  2415  001174  CFDD F078          	movff	postdec2,??_detect_color+3
  2416  001178  C077  F001         	movff	??_detect_color+2,___xxtofl@val
  2417  00117C  C078  F002         	movff	??_detect_color+3,___xxtofl@val+1
  2418  001180  6A03               	clrf	(___xxtofl@val+2)^0,c
  2419  001182  6A04               	clrf	(___xxtofl@val+3)^0,c
  2420  001184  0E00               	movlw	0
  2421  001186  EC5E  F01D         	call	___xxtofl
  2422  00118A  C001  F00F         	movff	?___xxtofl,___fldiv@b
  2423  00118E  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  2424  001192  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  2425  001196  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  2426  00119A  ECA1  F013         	call	___fldiv	;wreg free
  2427  00119E  C00F  F028         	movff	?___fldiv,___flmul@b
  2428  0011A2  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  2429  0011A6  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  2430  0011AA  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  2431  0011AE  0E00               	movlw	0
  2432  0011B0  6E2C               	movwf	___flmul@a^0,c
  2433  0011B2  0E00               	movlw	0
  2434  0011B4  6E2D               	movwf	(___flmul@a+1)^0,c
  2435  0011B6  0EC8               	movlw	200
  2436  0011B8  6E2E               	movwf	(___flmul@a+2)^0,c
  2437  0011BA  0E42               	movlw	66
  2438  0011BC  6E2F               	movwf	(___flmul@a+3)^0,c
  2439  0011BE  ECB5  F00F         	call	___flmul	;wreg free
  2440  0011C2  C028  F08E         	movff	?___flmul,_detect_color$3276
  2441  0011C6  C029  F08F         	movff	?___flmul+1,_detect_color$3276+1
  2442  0011CA  C02A  F090         	movff	?___flmul+2,_detect_color$3276+2
  2443  0011CE  C02B  F091         	movff	?___flmul+3,_detect_color$3276+3
  2444  0011D2                     
  2445                           ;color.c: 314:     GR = lroundf((float)(m->R)/(w->GR)*100); GG = lroundf((float)(m->G)/(
      +                          w->GG)*100); GB = lroundf((float)(m->B)/(w->GB)*100);
  2446  0011D2  C08E  F066         	movff	_detect_color$3276,lroundf@x
  2447  0011D6  C08F  F067         	movff	_detect_color$3276+1,lroundf@x+1
  2448  0011DA  C090  F068         	movff	_detect_color$3276+2,lroundf@x+2
  2449  0011DE  C091  F069         	movff	_detect_color$3276+3,lroundf@x+3
  2450  0011E2  ECD2  F02B         	call	_lroundf	;wreg free
  2451  0011E6  C066  F081         	movff	?_lroundf,detect_color@GR
  2452  0011EA  C067  F082         	movff	?_lroundf+1,detect_color@GR+1
  2453  0011EE  0100               	movlb	0	; () banked
  2454  0011F0  EE20 F008          	lfsr	2,8
  2455  0011F4  5173               	movf	detect_color@w& (0+255),w,b
  2456  0011F6  26D9               	addwf	fsr2l,f,c
  2457  0011F8  5174               	movf	(detect_color@w+1)& (0+255),w,b
  2458  0011FA  22DA               	addwfc	fsr2h,f,c
  2459  0011FC  CFDE F075          	movff	postinc2,??_detect_color
  2460  001200  CFDD F076          	movff	postdec2,??_detect_color+1
  2461  001204  C075  F001         	movff	??_detect_color,___xxtofl@val
  2462  001208  C076  F002         	movff	??_detect_color+1,___xxtofl@val+1
  2463  00120C  6A03               	clrf	(___xxtofl@val+2)^0,c
  2464  00120E  6A04               	clrf	(___xxtofl@val+3)^0,c
  2465  001210  0E00               	movlw	0
  2466  001212  EC5E  F01D         	call	___xxtofl
  2467  001216  C001  F013         	movff	?___xxtofl,___fldiv@a
  2468  00121A  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  2469  00121E  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  2470  001222  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  2471  001226  0100               	movlb	0	; () banked
  2472  001228  EE20 F002          	lfsr	2,2
  2473  00122C  5171               	movf	detect_color@m& (0+255),w,b
  2474  00122E  26D9               	addwf	fsr2l,f,c
  2475  001230  5172               	movf	(detect_color@m+1)& (0+255),w,b
  2476  001232  22DA               	addwfc	fsr2h,f,c
  2477  001234  CFDE F077          	movff	postinc2,??_detect_color+2
  2478  001238  CFDD F078          	movff	postdec2,??_detect_color+3
  2479  00123C  C077  F001         	movff	??_detect_color+2,___xxtofl@val
  2480  001240  C078  F002         	movff	??_detect_color+3,___xxtofl@val+1
  2481  001244  6A03               	clrf	(___xxtofl@val+2)^0,c
  2482  001246  6A04               	clrf	(___xxtofl@val+3)^0,c
  2483  001248  0E00               	movlw	0
  2484  00124A  EC5E  F01D         	call	___xxtofl
  2485  00124E  C001  F00F         	movff	?___xxtofl,___fldiv@b
  2486  001252  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  2487  001256  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  2488  00125A  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  2489  00125E  ECA1  F013         	call	___fldiv	;wreg free
  2490  001262  C00F  F028         	movff	?___fldiv,___flmul@b
  2491  001266  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  2492  00126A  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  2493  00126E  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  2494  001272  0E00               	movlw	0
  2495  001274  6E2C               	movwf	___flmul@a^0,c
  2496  001276  0E00               	movlw	0
  2497  001278  6E2D               	movwf	(___flmul@a+1)^0,c
  2498  00127A  0EC8               	movlw	200
  2499  00127C  6E2E               	movwf	(___flmul@a+2)^0,c
  2500  00127E  0E42               	movlw	66
  2501  001280  6E2F               	movwf	(___flmul@a+3)^0,c
  2502  001282  ECB5  F00F         	call	___flmul	;wreg free
  2503  001286  C028  F08E         	movff	?___flmul,_detect_color$3276
  2504  00128A  C029  F08F         	movff	?___flmul+1,_detect_color$3276+1
  2505  00128E  C02A  F090         	movff	?___flmul+2,_detect_color$3276+2
  2506  001292  C02B  F091         	movff	?___flmul+3,_detect_color$3276+3
  2507  001296  C08E  F066         	movff	_detect_color$3276,lroundf@x
  2508  00129A  C08F  F067         	movff	_detect_color$3276+1,lroundf@x+1
  2509  00129E  C090  F068         	movff	_detect_color$3276+2,lroundf@x+2
  2510  0012A2  C091  F069         	movff	_detect_color$3276+3,lroundf@x+3
  2511  0012A6  ECD2  F02B         	call	_lroundf	;wreg free
  2512  0012AA  C066  F087         	movff	?_lroundf,detect_color@GG
  2513  0012AE  C067  F088         	movff	?_lroundf+1,detect_color@GG+1
  2514  0012B2  0100               	movlb	0	; () banked
  2515  0012B4  EE20 F00A          	lfsr	2,10
  2516  0012B8  5173               	movf	detect_color@w& (0+255),w,b
  2517  0012BA  26D9               	addwf	fsr2l,f,c
  2518  0012BC  5174               	movf	(detect_color@w+1)& (0+255),w,b
  2519  0012BE  22DA               	addwfc	fsr2h,f,c
  2520  0012C0  CFDE F075          	movff	postinc2,??_detect_color
  2521  0012C4  CFDD F076          	movff	postdec2,??_detect_color+1
  2522  0012C8  C075  F001         	movff	??_detect_color,___xxtofl@val
  2523  0012CC  C076  F002         	movff	??_detect_color+1,___xxtofl@val+1
  2524  0012D0  6A03               	clrf	(___xxtofl@val+2)^0,c
  2525  0012D2  6A04               	clrf	(___xxtofl@val+3)^0,c
  2526  0012D4  0E00               	movlw	0
  2527  0012D6  EC5E  F01D         	call	___xxtofl
  2528  0012DA  C001  F013         	movff	?___xxtofl,___fldiv@a
  2529  0012DE  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  2530  0012E2  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  2531  0012E6  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  2532  0012EA  0100               	movlb	0	; () banked
  2533  0012EC  EE20 F004          	lfsr	2,4
  2534  0012F0  5171               	movf	detect_color@m& (0+255),w,b
  2535  0012F2  26D9               	addwf	fsr2l,f,c
  2536  0012F4  5172               	movf	(detect_color@m+1)& (0+255),w,b
  2537  0012F6  22DA               	addwfc	fsr2h,f,c
  2538  0012F8  CFDE F077          	movff	postinc2,??_detect_color+2
  2539  0012FC  CFDD F078          	movff	postdec2,??_detect_color+3
  2540  001300  C077  F001         	movff	??_detect_color+2,___xxtofl@val
  2541  001304  C078  F002         	movff	??_detect_color+3,___xxtofl@val+1
  2542  001308  6A03               	clrf	(___xxtofl@val+2)^0,c
  2543  00130A  6A04               	clrf	(___xxtofl@val+3)^0,c
  2544  00130C  0E00               	movlw	0
  2545  00130E  EC5E  F01D         	call	___xxtofl
  2546  001312  C001  F00F         	movff	?___xxtofl,___fldiv@b
  2547  001316  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  2548  00131A  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  2549  00131E  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  2550  001322  ECA1  F013         	call	___fldiv	;wreg free
  2551  001326  C00F  F028         	movff	?___fldiv,___flmul@b
  2552  00132A  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  2553  00132E  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  2554  001332  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  2555  001336  0E00               	movlw	0
  2556  001338  6E2C               	movwf	___flmul@a^0,c
  2557  00133A  0E00               	movlw	0
  2558  00133C  6E2D               	movwf	(___flmul@a+1)^0,c
  2559  00133E  0EC8               	movlw	200
  2560  001340  6E2E               	movwf	(___flmul@a+2)^0,c
  2561  001342  0E42               	movlw	66
  2562  001344  6E2F               	movwf	(___flmul@a+3)^0,c
  2563  001346  ECB5  F00F         	call	___flmul	;wreg free
  2564  00134A  C028  F08E         	movff	?___flmul,_detect_color$3276
  2565  00134E  C029  F08F         	movff	?___flmul+1,_detect_color$3276+1
  2566  001352  C02A  F090         	movff	?___flmul+2,_detect_color$3276+2
  2567  001356  C02B  F091         	movff	?___flmul+3,_detect_color$3276+3
  2568  00135A  C08E  F066         	movff	_detect_color$3276,lroundf@x
  2569  00135E  C08F  F067         	movff	_detect_color$3276+1,lroundf@x+1
  2570  001362  C090  F068         	movff	_detect_color$3276+2,lroundf@x+2
  2571  001366  C091  F069         	movff	_detect_color$3276+3,lroundf@x+3
  2572  00136A  ECD2  F02B         	call	_lroundf	;wreg free
  2573  00136E                     
  2574                           ;color.c: 319:     LED_B();
  2575  00136E  ECDB  F02C         	call	_LED_B	;wreg free
  2576  001372                     
  2577                           ;color.c: 320:     _delay((unsigned long)((100)*(64000000/4000.0)));
  2578  001372  0E09               	movlw	9
  2579  001374  0100               	movlb	0	; () banked
  2580  001376  6F76               	movwf	(??_detect_color+1)& (0+255),b
  2581  001378  0E1E               	movlw	30
  2582  00137A  6F75               	movwf	??_detect_color& (0+255),b
  2583  00137C  0EE4               	movlw	228
  2584  00137E                     u5737:
  2585  00137E  2EE8               	decfsz	wreg,f,c
  2586  001380  D7FE               	bra	u5737
  2587  001382  2F75               	decfsz	??_detect_color& (0+255),f,b
  2588  001384  D7FC               	bra	u5737
  2589  001386  2F76               	decfsz	(??_detect_color+1)& (0+255),f,b
  2590  001388  D7FA               	bra	u5737
  2591  00138A  F000               	nop	
  2592  00138C                     
  2593                           ;color.c: 321:     read_color(m);
  2594  00138C  C071  F00C         	movff	detect_color@m,read_color@m
  2595  001390  C072  F00D         	movff	detect_color@m+1,read_color@m+1
  2596  001394  ECAB  F029         	call	_read_color	;wreg free
  2597  001398                     
  2598                           ;color.c: 322:     BR = lroundf((float)(m->R)/(w->BR)*100); BG = lroundf((float)(m->G)/(
      +                          w->BG)*100); BB = lroundf((float)(m->B)/(w->BB)*100);
  2599  001398  0100               	movlb	0	; () banked
  2600  00139A  EE20 F00C          	lfsr	2,12
  2601  00139E  5173               	movf	detect_color@w& (0+255),w,b
  2602  0013A0  26D9               	addwf	fsr2l,f,c
  2603  0013A2  5174               	movf	(detect_color@w+1)& (0+255),w,b
  2604  0013A4  22DA               	addwfc	fsr2h,f,c
  2605  0013A6  CFDE F075          	movff	postinc2,??_detect_color
  2606  0013AA  CFDD F076          	movff	postdec2,??_detect_color+1
  2607  0013AE  C075  F001         	movff	??_detect_color,___xxtofl@val
  2608  0013B2  C076  F002         	movff	??_detect_color+1,___xxtofl@val+1
  2609  0013B6  6A03               	clrf	(___xxtofl@val+2)^0,c
  2610  0013B8  6A04               	clrf	(___xxtofl@val+3)^0,c
  2611  0013BA  0E00               	movlw	0
  2612  0013BC  EC5E  F01D         	call	___xxtofl
  2613  0013C0  C001  F013         	movff	?___xxtofl,___fldiv@a
  2614  0013C4  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  2615  0013C8  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  2616  0013CC  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  2617  0013D0  C071  FFD9         	movff	detect_color@m,fsr2l
  2618  0013D4  C072  FFDA         	movff	detect_color@m+1,fsr2h
  2619  0013D8  CFDE F077          	movff	postinc2,??_detect_color+2
  2620  0013DC  CFDD F078          	movff	postdec2,??_detect_color+3
  2621  0013E0  C077  F001         	movff	??_detect_color+2,___xxtofl@val
  2622  0013E4  C078  F002         	movff	??_detect_color+3,___xxtofl@val+1
  2623  0013E8  6A03               	clrf	(___xxtofl@val+2)^0,c
  2624  0013EA  6A04               	clrf	(___xxtofl@val+3)^0,c
  2625  0013EC  0E00               	movlw	0
  2626  0013EE  EC5E  F01D         	call	___xxtofl
  2627  0013F2  C001  F00F         	movff	?___xxtofl,___fldiv@b
  2628  0013F6  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  2629  0013FA  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  2630  0013FE  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  2631  001402  ECA1  F013         	call	___fldiv	;wreg free
  2632  001406  C00F  F028         	movff	?___fldiv,___flmul@b
  2633  00140A  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  2634  00140E  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  2635  001412  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  2636  001416  0E00               	movlw	0
  2637  001418  6E2C               	movwf	___flmul@a^0,c
  2638  00141A  0E00               	movlw	0
  2639  00141C  6E2D               	movwf	(___flmul@a+1)^0,c
  2640  00141E  0EC8               	movlw	200
  2641  001420  6E2E               	movwf	(___flmul@a+2)^0,c
  2642  001422  0E42               	movlw	66
  2643  001424  6E2F               	movwf	(___flmul@a+3)^0,c
  2644  001426  ECB5  F00F         	call	___flmul	;wreg free
  2645  00142A  C028  F08E         	movff	?___flmul,_detect_color$3276
  2646  00142E  C029  F08F         	movff	?___flmul+1,_detect_color$3276+1
  2647  001432  C02A  F090         	movff	?___flmul+2,_detect_color$3276+2
  2648  001436  C02B  F091         	movff	?___flmul+3,_detect_color$3276+3
  2649  00143A                     
  2650                           ;color.c: 322:     BR = lroundf((float)(m->R)/(w->BR)*100); BG = lroundf((float)(m->G)/(
      +                          w->BG)*100); BB = lroundf((float)(m->B)/(w->BB)*100);
  2651  00143A  C08E  F066         	movff	_detect_color$3276,lroundf@x
  2652  00143E  C08F  F067         	movff	_detect_color$3276+1,lroundf@x+1
  2653  001442  C090  F068         	movff	_detect_color$3276+2,lroundf@x+2
  2654  001446  C091  F069         	movff	_detect_color$3276+3,lroundf@x+3
  2655  00144A  ECD2  F02B         	call	_lroundf	;wreg free
  2656  00144E  C066  F08C         	movff	?_lroundf,detect_color@BR
  2657  001452  C067  F08D         	movff	?_lroundf+1,detect_color@BR+1
  2658  001456  0100               	movlb	0	; () banked
  2659  001458  EE20 F00E          	lfsr	2,14
  2660  00145C  5173               	movf	detect_color@w& (0+255),w,b
  2661  00145E  26D9               	addwf	fsr2l,f,c
  2662  001460  5174               	movf	(detect_color@w+1)& (0+255),w,b
  2663  001462  22DA               	addwfc	fsr2h,f,c
  2664  001464  CFDE F075          	movff	postinc2,??_detect_color
  2665  001468  CFDD F076          	movff	postdec2,??_detect_color+1
  2666  00146C  C075  F001         	movff	??_detect_color,___xxtofl@val
  2667  001470  C076  F002         	movff	??_detect_color+1,___xxtofl@val+1
  2668  001474  6A03               	clrf	(___xxtofl@val+2)^0,c
  2669  001476  6A04               	clrf	(___xxtofl@val+3)^0,c
  2670  001478  0E00               	movlw	0
  2671  00147A  EC5E  F01D         	call	___xxtofl
  2672  00147E  C001  F013         	movff	?___xxtofl,___fldiv@a
  2673  001482  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  2674  001486  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  2675  00148A  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  2676  00148E  0100               	movlb	0	; () banked
  2677  001490  EE20 F002          	lfsr	2,2
  2678  001494  5171               	movf	detect_color@m& (0+255),w,b
  2679  001496  26D9               	addwf	fsr2l,f,c
  2680  001498  5172               	movf	(detect_color@m+1)& (0+255),w,b
  2681  00149A  22DA               	addwfc	fsr2h,f,c
  2682  00149C  CFDE F077          	movff	postinc2,??_detect_color+2
  2683  0014A0  CFDD F078          	movff	postdec2,??_detect_color+3
  2684  0014A4  C077  F001         	movff	??_detect_color+2,___xxtofl@val
  2685  0014A8  C078  F002         	movff	??_detect_color+3,___xxtofl@val+1
  2686  0014AC  6A03               	clrf	(___xxtofl@val+2)^0,c
  2687  0014AE  6A04               	clrf	(___xxtofl@val+3)^0,c
  2688  0014B0  0E00               	movlw	0
  2689  0014B2  EC5E  F01D         	call	___xxtofl
  2690  0014B6  C001  F00F         	movff	?___xxtofl,___fldiv@b
  2691  0014BA  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  2692  0014BE  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  2693  0014C2  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  2694  0014C6  ECA1  F013         	call	___fldiv	;wreg free
  2695  0014CA  C00F  F028         	movff	?___fldiv,___flmul@b
  2696  0014CE  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  2697  0014D2  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  2698  0014D6  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  2699  0014DA  0E00               	movlw	0
  2700  0014DC  6E2C               	movwf	___flmul@a^0,c
  2701  0014DE  0E00               	movlw	0
  2702  0014E0  6E2D               	movwf	(___flmul@a+1)^0,c
  2703  0014E2  0EC8               	movlw	200
  2704  0014E4  6E2E               	movwf	(___flmul@a+2)^0,c
  2705  0014E6  0E42               	movlw	66
  2706  0014E8  6E2F               	movwf	(___flmul@a+3)^0,c
  2707  0014EA  ECB5  F00F         	call	___flmul	;wreg free
  2708  0014EE  C028  F08E         	movff	?___flmul,_detect_color$3276
  2709  0014F2  C029  F08F         	movff	?___flmul+1,_detect_color$3276+1
  2710  0014F6  C02A  F090         	movff	?___flmul+2,_detect_color$3276+2
  2711  0014FA  C02B  F091         	movff	?___flmul+3,_detect_color$3276+3
  2712  0014FE  C08E  F066         	movff	_detect_color$3276,lroundf@x
  2713  001502  C08F  F067         	movff	_detect_color$3276+1,lroundf@x+1
  2714  001506  C090  F068         	movff	_detect_color$3276+2,lroundf@x+2
  2715  00150A  C091  F069         	movff	_detect_color$3276+3,lroundf@x+3
  2716  00150E  ECD2  F02B         	call	_lroundf	;wreg free
  2717  001512  C066  F089         	movff	?_lroundf,detect_color@BG
  2718  001516  C067  F08A         	movff	?_lroundf+1,detect_color@BG+1
  2719  00151A  0100               	movlb	0	; () banked
  2720  00151C  EE20 F010          	lfsr	2,16
  2721  001520  5173               	movf	detect_color@w& (0+255),w,b
  2722  001522  26D9               	addwf	fsr2l,f,c
  2723  001524  5174               	movf	(detect_color@w+1)& (0+255),w,b
  2724  001526  22DA               	addwfc	fsr2h,f,c
  2725  001528  CFDE F075          	movff	postinc2,??_detect_color
  2726  00152C  CFDD F076          	movff	postdec2,??_detect_color+1
  2727  001530  C075  F001         	movff	??_detect_color,___xxtofl@val
  2728  001534  C076  F002         	movff	??_detect_color+1,___xxtofl@val+1
  2729  001538  6A03               	clrf	(___xxtofl@val+2)^0,c
  2730  00153A  6A04               	clrf	(___xxtofl@val+3)^0,c
  2731  00153C  0E00               	movlw	0
  2732  00153E  EC5E  F01D         	call	___xxtofl
  2733  001542  C001  F013         	movff	?___xxtofl,___fldiv@a
  2734  001546  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  2735  00154A  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  2736  00154E  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  2737  001552  0100               	movlb	0	; () banked
  2738  001554  EE20 F004          	lfsr	2,4
  2739  001558  5171               	movf	detect_color@m& (0+255),w,b
  2740  00155A  26D9               	addwf	fsr2l,f,c
  2741  00155C  5172               	movf	(detect_color@m+1)& (0+255),w,b
  2742  00155E  22DA               	addwfc	fsr2h,f,c
  2743  001560  CFDE F077          	movff	postinc2,??_detect_color+2
  2744  001564  CFDD F078          	movff	postdec2,??_detect_color+3
  2745  001568  C077  F001         	movff	??_detect_color+2,___xxtofl@val
  2746  00156C  C078  F002         	movff	??_detect_color+3,___xxtofl@val+1
  2747  001570  6A03               	clrf	(___xxtofl@val+2)^0,c
  2748  001572  6A04               	clrf	(___xxtofl@val+3)^0,c
  2749  001574  0E00               	movlw	0
  2750  001576  EC5E  F01D         	call	___xxtofl
  2751  00157A  C001  F00F         	movff	?___xxtofl,___fldiv@b
  2752  00157E  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  2753  001582  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  2754  001586  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  2755  00158A  ECA1  F013         	call	___fldiv	;wreg free
  2756  00158E  C00F  F028         	movff	?___fldiv,___flmul@b
  2757  001592  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  2758  001596  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  2759  00159A  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  2760  00159E  0E00               	movlw	0
  2761  0015A0  6E2C               	movwf	___flmul@a^0,c
  2762  0015A2  0E00               	movlw	0
  2763  0015A4  6E2D               	movwf	(___flmul@a+1)^0,c
  2764  0015A6  0EC8               	movlw	200
  2765  0015A8  6E2E               	movwf	(___flmul@a+2)^0,c
  2766  0015AA  0E42               	movlw	66
  2767  0015AC  6E2F               	movwf	(___flmul@a+3)^0,c
  2768  0015AE  ECB5  F00F         	call	___flmul	;wreg free
  2769  0015B2  C028  F08E         	movff	?___flmul,_detect_color$3276
  2770  0015B6  C029  F08F         	movff	?___flmul+1,_detect_color$3276+1
  2771  0015BA  C02A  F090         	movff	?___flmul+2,_detect_color$3276+2
  2772  0015BE  C02B  F091         	movff	?___flmul+3,_detect_color$3276+3
  2773  0015C2  C08E  F066         	movff	_detect_color$3276,lroundf@x
  2774  0015C6  C08F  F067         	movff	_detect_color$3276+1,lroundf@x+1
  2775  0015CA  C090  F068         	movff	_detect_color$3276+2,lroundf@x+2
  2776  0015CE  C091  F069         	movff	_detect_color$3276+3,lroundf@x+3
  2777  0015D2  ECD2  F02B         	call	_lroundf	;wreg free
  2778  0015D6  C066  F085         	movff	?_lroundf,detect_color@BB
  2779  0015DA  C067  F086         	movff	?_lroundf+1,detect_color@BB+1
  2780  0015DE                     
  2781                           ;color.c: 323:     BC = lroundf((float)(m->C)/(w->BC)*100);
  2782  0015DE  0100               	movlb	0	; () banked
  2783  0015E0  EE20 F01A          	lfsr	2,26
  2784  0015E4  5173               	movf	detect_color@w& (0+255),w,b
  2785  0015E6  26D9               	addwf	fsr2l,f,c
  2786  0015E8  5174               	movf	(detect_color@w+1)& (0+255),w,b
  2787  0015EA  22DA               	addwfc	fsr2h,f,c
  2788  0015EC  CFDE F075          	movff	postinc2,??_detect_color
  2789  0015F0  CFDD F076          	movff	postdec2,??_detect_color+1
  2790  0015F4  C075  F001         	movff	??_detect_color,___xxtofl@val
  2791  0015F8  C076  F002         	movff	??_detect_color+1,___xxtofl@val+1
  2792  0015FC  6A03               	clrf	(___xxtofl@val+2)^0,c
  2793  0015FE  6A04               	clrf	(___xxtofl@val+3)^0,c
  2794  001600  0E00               	movlw	0
  2795  001602  EC5E  F01D         	call	___xxtofl
  2796  001606  C001  F013         	movff	?___xxtofl,___fldiv@a
  2797  00160A  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  2798  00160E  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  2799  001612  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  2800  001616  0100               	movlb	0	; () banked
  2801  001618  EE20 F006          	lfsr	2,6
  2802  00161C  5171               	movf	detect_color@m& (0+255),w,b
  2803  00161E  26D9               	addwf	fsr2l,f,c
  2804  001620  5172               	movf	(detect_color@m+1)& (0+255),w,b
  2805  001622  22DA               	addwfc	fsr2h,f,c
  2806  001624  CFDE F077          	movff	postinc2,??_detect_color+2
  2807  001628  CFDD F078          	movff	postdec2,??_detect_color+3
  2808  00162C  C077  F001         	movff	??_detect_color+2,___xxtofl@val
  2809  001630  C078  F002         	movff	??_detect_color+3,___xxtofl@val+1
  2810  001634  6A03               	clrf	(___xxtofl@val+2)^0,c
  2811  001636  6A04               	clrf	(___xxtofl@val+3)^0,c
  2812  001638  0E00               	movlw	0
  2813  00163A  EC5E  F01D         	call	___xxtofl
  2814  00163E  C001  F00F         	movff	?___xxtofl,___fldiv@b
  2815  001642  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  2816  001646  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  2817  00164A  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  2818  00164E  ECA1  F013         	call	___fldiv	;wreg free
  2819  001652  C00F  F028         	movff	?___fldiv,___flmul@b
  2820  001656  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  2821  00165A  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  2822  00165E  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  2823  001662  0E00               	movlw	0
  2824  001664  6E2C               	movwf	___flmul@a^0,c
  2825  001666  0E00               	movlw	0
  2826  001668  6E2D               	movwf	(___flmul@a+1)^0,c
  2827  00166A  0EC8               	movlw	200
  2828  00166C  6E2E               	movwf	(___flmul@a+2)^0,c
  2829  00166E  0E42               	movlw	66
  2830  001670  6E2F               	movwf	(___flmul@a+3)^0,c
  2831  001672  ECB5  F00F         	call	___flmul	;wreg free
  2832  001676  C028  F08E         	movff	?___flmul,_detect_color$3276
  2833  00167A  C029  F08F         	movff	?___flmul+1,_detect_color$3276+1
  2834  00167E  C02A  F090         	movff	?___flmul+2,_detect_color$3276+2
  2835  001682  C02B  F091         	movff	?___flmul+3,_detect_color$3276+3
  2836  001686  C08E  F066         	movff	_detect_color$3276,lroundf@x
  2837  00168A  C08F  F067         	movff	_detect_color$3276+1,lroundf@x+1
  2838  00168E  C090  F068         	movff	_detect_color$3276+2,lroundf@x+2
  2839  001692  C091  F069         	movff	_detect_color$3276+3,lroundf@x+3
  2840  001696  ECD2  F02B         	call	_lroundf	;wreg free
  2841  00169A                     
  2842                           ;color.c: 329:     if (compare(0, BR, 70)){
  2843  00169A  0E00               	movlw	0
  2844  00169C  0100               	movlb	0	; () banked
  2845  00169E  6F6B               	movwf	(compare@lower+1)& (0+255),b
  2846  0016A0  0E00               	movlw	0
  2847  0016A2  6F6A               	movwf	compare@lower& (0+255),b
  2848  0016A4  C08C  F06C         	movff	detect_color@BR,compare@value2compare
  2849  0016A8  C08D  F06D         	movff	detect_color@BR+1,compare@value2compare+1
  2850  0016AC  0E00               	movlw	0
  2851  0016AE  6F6F               	movwf	(compare@upper+1)& (0+255),b
  2852  0016B0  0E46               	movlw	70
  2853  0016B2  6F6E               	movwf	compare@upper& (0+255),b
  2854  0016B4  ECB5  F02B         	call	_compare	;wreg free
  2855  0016B8  0900               	iorlw	0
  2856  0016BA  B4D8               	btfsc	status,2,c
  2857  0016BC  EF62  F00B         	goto	u5111
  2858  0016C0  EF64  F00B         	goto	u5110
  2859  0016C4                     u5111:
  2860  0016C4  EFD5  F00B         	goto	l5120
  2861  0016C8                     u5110:
  2862  0016C8                     
  2863                           ;color.c: 330:          if (compare(0, lroundf((float)(GG + BG)/BB * 200), 411)){color =
      +                           3;}
  2864  0016C8  C085  F001         	movff	detect_color@BB,___xxtofl@val
  2865  0016CC  C086  F002         	movff	detect_color@BB+1,___xxtofl@val+1
  2866  0016D0  6A03               	clrf	(___xxtofl@val+2)^0,c
  2867  0016D2  6A04               	clrf	(___xxtofl@val+3)^0,c
  2868  0016D4  0E00               	movlw	0
  2869  0016D6  EC5E  F01D         	call	___xxtofl
  2870  0016DA  C001  F013         	movff	?___xxtofl,___fldiv@a
  2871  0016DE  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  2872  0016E2  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  2873  0016E6  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  2874  0016EA  0100               	movlb	0	; () banked
  2875  0016EC  5189               	movf	detect_color@BG& (0+255),w,b
  2876  0016EE  2587               	addwf	detect_color@GG& (0+255),w,b
  2877  0016F0  6F75               	movwf	??_detect_color& (0+255),b
  2878  0016F2  518A               	movf	(detect_color@BG+1)& (0+255),w,b
  2879  0016F4  2188               	addwfc	(detect_color@GG+1)& (0+255),w,b
  2880  0016F6  6F76               	movwf	(??_detect_color+1)& (0+255),b
  2881  0016F8  C075  F001         	movff	??_detect_color,___xxtofl@val
  2882  0016FC  C076  F002         	movff	??_detect_color+1,___xxtofl@val+1
  2883  001700  6A03               	clrf	(___xxtofl@val+2)^0,c
  2884  001702  6A04               	clrf	(___xxtofl@val+3)^0,c
  2885  001704  0E00               	movlw	0
  2886  001706  EC5E  F01D         	call	___xxtofl
  2887  00170A  C001  F00F         	movff	?___xxtofl,___fldiv@b
  2888  00170E  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  2889  001712  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  2890  001716  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  2891  00171A  ECA1  F013         	call	___fldiv	;wreg free
  2892  00171E  C00F  F028         	movff	?___fldiv,___flmul@b
  2893  001722  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  2894  001726  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  2895  00172A  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  2896  00172E  0E00               	movlw	0
  2897  001730  6E2C               	movwf	___flmul@a^0,c
  2898  001732  0E00               	movlw	0
  2899  001734  6E2D               	movwf	(___flmul@a+1)^0,c
  2900  001736  0E48               	movlw	72
  2901  001738  6E2E               	movwf	(___flmul@a+2)^0,c
  2902  00173A  0E43               	movlw	67
  2903  00173C  6E2F               	movwf	(___flmul@a+3)^0,c
  2904  00173E  ECB5  F00F         	call	___flmul	;wreg free
  2905  001742  C028  F08E         	movff	?___flmul,_detect_color$3276
  2906  001746  C029  F08F         	movff	?___flmul+1,_detect_color$3276+1
  2907  00174A  C02A  F090         	movff	?___flmul+2,_detect_color$3276+2
  2908  00174E  C02B  F091         	movff	?___flmul+3,_detect_color$3276+3
  2909                           
  2910                           ;color.c: 330:          if (compare(0, lroundf((float)(GG + BG)/BB * 200), 411)){color =
      +                           3;}
  2911  001752  0E00               	movlw	0
  2912  001754  0100               	movlb	0	; () banked
  2913  001756  6F6B               	movwf	(compare@lower+1)& (0+255),b
  2914  001758  0E00               	movlw	0
  2915  00175A  6F6A               	movwf	compare@lower& (0+255),b
  2916  00175C  C08E  F066         	movff	_detect_color$3276,lroundf@x
  2917  001760  C08F  F067         	movff	_detect_color$3276+1,lroundf@x+1
  2918  001764  C090  F068         	movff	_detect_color$3276+2,lroundf@x+2
  2919  001768  C091  F069         	movff	_detect_color$3276+3,lroundf@x+3
  2920  00176C  ECD2  F02B         	call	_lroundf	;wreg free
  2921  001770  C066  F06C         	movff	?_lroundf,compare@value2compare
  2922  001774  C067  F06D         	movff	?_lroundf+1,compare@value2compare+1
  2923  001778  0E01               	movlw	1
  2924  00177A  0100               	movlb	0	; () banked
  2925  00177C  6F6F               	movwf	(compare@upper+1)& (0+255),b
  2926  00177E  0E9B               	movlw	155
  2927  001780  6F6E               	movwf	compare@upper& (0+255),b
  2928  001782  ECB5  F02B         	call	_compare	;wreg free
  2929  001786  0900               	iorlw	0
  2930  001788  B4D8               	btfsc	status,2,c
  2931  00178A  EFC9  F00B         	goto	u5121
  2932  00178E  EFCB  F00B         	goto	u5120
  2933  001792                     u5121:
  2934  001792  EFD0  F00B         	goto	l5118
  2935  001796                     u5120:
  2936  001796  0E03               	movlw	3
  2937  001798  0100               	movlb	0	; () banked
  2938  00179A  6F8B               	movwf	detect_color@color& (0+255),b
  2939  00179C  EFCE  F00C         	goto	l5138
  2940  0017A0                     l5118:
  2941  0017A0  0E02               	movlw	2
  2942  0017A2  0100               	movlb	0	; () banked
  2943  0017A4  6F8B               	movwf	detect_color@color& (0+255),b
  2944  0017A6  EFCE  F00C         	goto	l5138
  2945  0017AA                     l5120:
  2946                           
  2947                           ;color.c: 334:         if (compare(0, BG, 75)){
  2948  0017AA  0E00               	movlw	0
  2949  0017AC  0100               	movlb	0	; () banked
  2950  0017AE  6F6B               	movwf	(compare@lower+1)& (0+255),b
  2951  0017B0  0E00               	movlw	0
  2952  0017B2  6F6A               	movwf	compare@lower& (0+255),b
  2953  0017B4  C089  F06C         	movff	detect_color@BG,compare@value2compare
  2954  0017B8  C08A  F06D         	movff	detect_color@BG+1,compare@value2compare+1
  2955  0017BC  0E00               	movlw	0
  2956  0017BE  6F6F               	movwf	(compare@upper+1)& (0+255),b
  2957  0017C0  0E4B               	movlw	75
  2958  0017C2  6F6E               	movwf	compare@upper& (0+255),b
  2959  0017C4  ECB5  F02B         	call	_compare	;wreg free
  2960  0017C8  0900               	iorlw	0
  2961  0017CA  B4D8               	btfsc	status,2,c
  2962  0017CC  EFEA  F00B         	goto	u5131
  2963  0017D0  EFEC  F00B         	goto	u5130
  2964  0017D4                     u5131:
  2965  0017D4  EF56  F00C         	goto	l5128
  2966  0017D8                     u5130:
  2967  0017D8                     
  2968                           ;color.c: 336:             if (compare(480, lroundf((float)GR/RR * 500), 520)){color = 6
      +                          ;}
  2969  0017D8  C083  F001         	movff	detect_color@RR,___xxtofl@val
  2970  0017DC  C084  F002         	movff	detect_color@RR+1,___xxtofl@val+1
  2971  0017E0  6A03               	clrf	(___xxtofl@val+2)^0,c
  2972  0017E2  6A04               	clrf	(___xxtofl@val+3)^0,c
  2973  0017E4  0E00               	movlw	0
  2974  0017E6  EC5E  F01D         	call	___xxtofl
  2975  0017EA  C001  F013         	movff	?___xxtofl,___fldiv@a
  2976  0017EE  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  2977  0017F2  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  2978  0017F6  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  2979  0017FA  C081  F001         	movff	detect_color@GR,___xxtofl@val
  2980  0017FE  C082  F002         	movff	detect_color@GR+1,___xxtofl@val+1
  2981  001802  6A03               	clrf	(___xxtofl@val+2)^0,c
  2982  001804  6A04               	clrf	(___xxtofl@val+3)^0,c
  2983  001806  0E00               	movlw	0
  2984  001808  EC5E  F01D         	call	___xxtofl
  2985  00180C  C001  F00F         	movff	?___xxtofl,___fldiv@b
  2986  001810  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  2987  001814  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  2988  001818  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  2989  00181C  ECA1  F013         	call	___fldiv	;wreg free
  2990  001820  C00F  F028         	movff	?___fldiv,___flmul@b
  2991  001824  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  2992  001828  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  2993  00182C  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  2994  001830  0E00               	movlw	0
  2995  001832  6E2C               	movwf	___flmul@a^0,c
  2996  001834  0E00               	movlw	0
  2997  001836  6E2D               	movwf	(___flmul@a+1)^0,c
  2998  001838  0EFA               	movlw	250
  2999  00183A  6E2E               	movwf	(___flmul@a+2)^0,c
  3000  00183C  0E43               	movlw	67
  3001  00183E  6E2F               	movwf	(___flmul@a+3)^0,c
  3002  001840  ECB5  F00F         	call	___flmul	;wreg free
  3003  001844  C028  F08E         	movff	?___flmul,_detect_color$3276
  3004  001848  C029  F08F         	movff	?___flmul+1,_detect_color$3276+1
  3005  00184C  C02A  F090         	movff	?___flmul+2,_detect_color$3276+2
  3006  001850  C02B  F091         	movff	?___flmul+3,_detect_color$3276+3
  3007                           
  3008                           ;color.c: 336:             if (compare(480, lroundf((float)GR/RR * 500), 520)){color = 6
      +                          ;}
  3009  001854  0E01               	movlw	1
  3010  001856  0100               	movlb	0	; () banked
  3011  001858  6F6B               	movwf	(compare@lower+1)& (0+255),b
  3012  00185A  0EE0               	movlw	224
  3013  00185C  6F6A               	movwf	compare@lower& (0+255),b
  3014  00185E  C08E  F066         	movff	_detect_color$3276,lroundf@x
  3015  001862  C08F  F067         	movff	_detect_color$3276+1,lroundf@x+1
  3016  001866  C090  F068         	movff	_detect_color$3276+2,lroundf@x+2
  3017  00186A  C091  F069         	movff	_detect_color$3276+3,lroundf@x+3
  3018  00186E  ECD2  F02B         	call	_lroundf	;wreg free
  3019  001872  C066  F06C         	movff	?_lroundf,compare@value2compare
  3020  001876  C067  F06D         	movff	?_lroundf+1,compare@value2compare+1
  3021  00187A  0E02               	movlw	2
  3022  00187C  0100               	movlb	0	; () banked
  3023  00187E  6F6F               	movwf	(compare@upper+1)& (0+255),b
  3024  001880  0E08               	movlw	8
  3025  001882  6F6E               	movwf	compare@upper& (0+255),b
  3026  001884  ECB5  F02B         	call	_compare	;wreg free
  3027  001888  0900               	iorlw	0
  3028  00188A  B4D8               	btfsc	status,2,c
  3029  00188C  EF4A  F00C         	goto	u5141
  3030  001890  EF4C  F00C         	goto	u5140
  3031  001894                     u5141:
  3032  001894  EF51  F00C         	goto	l5126
  3033  001898                     u5140:
  3034  001898  0E06               	movlw	6
  3035  00189A  0100               	movlb	0	; () banked
  3036  00189C  6F8B               	movwf	detect_color@color& (0+255),b
  3037  00189E  EFCE  F00C         	goto	l5138
  3038  0018A2                     l5126:
  3039  0018A2  0E01               	movlw	1
  3040  0018A4  0100               	movlb	0	; () banked
  3041  0018A6  6F8B               	movwf	detect_color@color& (0+255),b
  3042  0018A8  EFCE  F00C         	goto	l5138
  3043  0018AC                     l5128:
  3044                           
  3045                           ;color.c: 341:             if (BG > BR) {color = 7;}
  3046  0018AC  0100               	movlb	0	; () banked
  3047  0018AE  5189               	movf	detect_color@BG& (0+255),w,b
  3048  0018B0  5D8C               	subwf	detect_color@BR& (0+255),w,b
  3049  0018B2  518A               	movf	(detect_color@BG+1)& (0+255),w,b
  3050  0018B4  598D               	subwfb	(detect_color@BR+1)& (0+255),w,b
  3051  0018B6  B0D8               	btfsc	status,0,c
  3052  0018B8  EF60  F00C         	goto	u5151
  3053  0018BC  EF62  F00C         	goto	u5150
  3054  0018C0                     u5151:
  3055  0018C0  EF66  F00C         	goto	l5132
  3056  0018C4                     u5150:
  3057  0018C4                     
  3058                           ; BSR set to: 0
  3059  0018C4  0E07               	movlw	7
  3060  0018C6  6F8B               	movwf	detect_color@color& (0+255),b
  3061  0018C8  EFCE  F00C         	goto	l5138
  3062  0018CC                     l5132:
  3063                           
  3064                           ; BSR set to: 0
  3065                           ;color.c: 343:                 if (compare(0, lroundf((float)BG / BB * 500), 550)){color
      +                           = 5;}
  3066  0018CC  C085  F001         	movff	detect_color@BB,___xxtofl@val
  3067  0018D0  C086  F002         	movff	detect_color@BB+1,___xxtofl@val+1
  3068  0018D4  6A03               	clrf	(___xxtofl@val+2)^0,c
  3069  0018D6  6A04               	clrf	(___xxtofl@val+3)^0,c
  3070  0018D8  0E00               	movlw	0
  3071  0018DA  EC5E  F01D         	call	___xxtofl
  3072  0018DE  C001  F013         	movff	?___xxtofl,___fldiv@a
  3073  0018E2  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  3074  0018E6  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  3075  0018EA  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  3076  0018EE  C089  F001         	movff	detect_color@BG,___xxtofl@val
  3077  0018F2  C08A  F002         	movff	detect_color@BG+1,___xxtofl@val+1
  3078  0018F6  6A03               	clrf	(___xxtofl@val+2)^0,c
  3079  0018F8  6A04               	clrf	(___xxtofl@val+3)^0,c
  3080  0018FA  0E00               	movlw	0
  3081  0018FC  EC5E  F01D         	call	___xxtofl
  3082  001900  C001  F00F         	movff	?___xxtofl,___fldiv@b
  3083  001904  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  3084  001908  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  3085  00190C  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  3086  001910  ECA1  F013         	call	___fldiv	;wreg free
  3087  001914  C00F  F028         	movff	?___fldiv,___flmul@b
  3088  001918  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  3089  00191C  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  3090  001920  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  3091  001924  0E00               	movlw	0
  3092  001926  6E2C               	movwf	___flmul@a^0,c
  3093  001928  0E00               	movlw	0
  3094  00192A  6E2D               	movwf	(___flmul@a+1)^0,c
  3095  00192C  0EFA               	movlw	250
  3096  00192E  6E2E               	movwf	(___flmul@a+2)^0,c
  3097  001930  0E43               	movlw	67
  3098  001932  6E2F               	movwf	(___flmul@a+3)^0,c
  3099  001934  ECB5  F00F         	call	___flmul	;wreg free
  3100  001938  C028  F08E         	movff	?___flmul,_detect_color$3276
  3101  00193C  C029  F08F         	movff	?___flmul+1,_detect_color$3276+1
  3102  001940  C02A  F090         	movff	?___flmul+2,_detect_color$3276+2
  3103  001944  C02B  F091         	movff	?___flmul+3,_detect_color$3276+3
  3104                           
  3105                           ;color.c: 343:                 if (compare(0, lroundf((float)BG / BB * 500), 550)){color
      +                           = 5;}
  3106  001948  0E00               	movlw	0
  3107  00194A  0100               	movlb	0	; () banked
  3108  00194C  6F6B               	movwf	(compare@lower+1)& (0+255),b
  3109  00194E  0E00               	movlw	0
  3110  001950  6F6A               	movwf	compare@lower& (0+255),b
  3111  001952  C08E  F066         	movff	_detect_color$3276,lroundf@x
  3112  001956  C08F  F067         	movff	_detect_color$3276+1,lroundf@x+1
  3113  00195A  C090  F068         	movff	_detect_color$3276+2,lroundf@x+2
  3114  00195E  C091  F069         	movff	_detect_color$3276+3,lroundf@x+3
  3115  001962  ECD2  F02B         	call	_lroundf	;wreg free
  3116  001966  C066  F06C         	movff	?_lroundf,compare@value2compare
  3117  00196A  C067  F06D         	movff	?_lroundf+1,compare@value2compare+1
  3118  00196E  0E02               	movlw	2
  3119  001970  0100               	movlb	0	; () banked
  3120  001972  6F6F               	movwf	(compare@upper+1)& (0+255),b
  3121  001974  0E26               	movlw	38
  3122  001976  6F6E               	movwf	compare@upper& (0+255),b
  3123  001978  ECB5  F02B         	call	_compare	;wreg free
  3124  00197C  0900               	iorlw	0
  3125  00197E  B4D8               	btfsc	status,2,c
  3126  001980  EFC4  F00C         	goto	u5161
  3127  001984  EFC6  F00C         	goto	u5160
  3128  001988                     u5161:
  3129  001988  EFCB  F00C         	goto	l5136
  3130  00198C                     u5160:
  3131  00198C  0E05               	movlw	5
  3132  00198E  0100               	movlb	0	; () banked
  3133  001990  6F8B               	movwf	detect_color@color& (0+255),b
  3134  001992  EFCE  F00C         	goto	l5138
  3135  001996                     l5136:
  3136  001996  0E04               	movlw	4
  3137  001998  0100               	movlb	0	; () banked
  3138  00199A  6F8B               	movwf	detect_color@color& (0+255),b
  3139  00199C                     l5138:
  3140                           
  3141                           ; BSR set to: 0
  3142                           ;color.c: 349:     if (compare(90, BR, BR * 30) && compare(90, GG, GG * 30)){color = 8;}
  3143  00199C  0E00               	movlw	0
  3144  00199E  6F6B               	movwf	(compare@lower+1)& (0+255),b
  3145  0019A0  0E5A               	movlw	90
  3146  0019A2  6F6A               	movwf	compare@lower& (0+255),b
  3147  0019A4  C08C  F06C         	movff	detect_color@BR,compare@value2compare
  3148  0019A8  C08D  F06D         	movff	detect_color@BR+1,compare@value2compare+1
  3149  0019AC  C08C  F001         	movff	detect_color@BR,___wmul@multiplier
  3150  0019B0  C08D  F002         	movff	detect_color@BR+1,___wmul@multiplier+1
  3151  0019B4  0E00               	movlw	0
  3152  0019B6  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  3153  0019B8  0E1E               	movlw	30
  3154  0019BA  6E03               	movwf	___wmul@multiplicand^0,c
  3155  0019BC  EC98  F02C         	call	___wmul	;wreg free
  3156  0019C0  C001  F06E         	movff	?___wmul,compare@upper
  3157  0019C4  C002  F06F         	movff	?___wmul+1,compare@upper+1
  3158  0019C8  ECB5  F02B         	call	_compare	;wreg free
  3159  0019CC  0900               	iorlw	0
  3160  0019CE  B4D8               	btfsc	status,2,c
  3161  0019D0  EFEC  F00C         	goto	u5171
  3162  0019D4  EFEE  F00C         	goto	u5170
  3163  0019D8                     u5171:
  3164  0019D8  EF12  F00D         	goto	l5144
  3165  0019DC                     u5170:
  3166  0019DC  0E00               	movlw	0
  3167  0019DE  0100               	movlb	0	; () banked
  3168  0019E0  6F6B               	movwf	(compare@lower+1)& (0+255),b
  3169  0019E2  0E5A               	movlw	90
  3170  0019E4  6F6A               	movwf	compare@lower& (0+255),b
  3171  0019E6  C087  F06C         	movff	detect_color@GG,compare@value2compare
  3172  0019EA  C088  F06D         	movff	detect_color@GG+1,compare@value2compare+1
  3173  0019EE  C087  F001         	movff	detect_color@GG,___wmul@multiplier
  3174  0019F2  C088  F002         	movff	detect_color@GG+1,___wmul@multiplier+1
  3175  0019F6  0E00               	movlw	0
  3176  0019F8  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  3177  0019FA  0E1E               	movlw	30
  3178  0019FC  6E03               	movwf	___wmul@multiplicand^0,c
  3179  0019FE  EC98  F02C         	call	___wmul	;wreg free
  3180  001A02  C001  F06E         	movff	?___wmul,compare@upper
  3181  001A06  C002  F06F         	movff	?___wmul+1,compare@upper+1
  3182  001A0A  ECB5  F02B         	call	_compare	;wreg free
  3183  001A0E  0900               	iorlw	0
  3184  001A10  B4D8               	btfsc	status,2,c
  3185  001A12  EF0D  F00D         	goto	u5181
  3186  001A16  EF0F  F00D         	goto	u5180
  3187  001A1A                     u5181:
  3188  001A1A  EF12  F00D         	goto	l5144
  3189  001A1E                     u5180:
  3190  001A1E  0E08               	movlw	8
  3191  001A20  0100               	movlb	0	; () banked
  3192  001A22  6F8B               	movwf	detect_color@color& (0+255),b
  3193  001A24                     l5144:
  3194                           
  3195                           ;color.c: 350:     if (compare(0, BR, 25) && compare(0,RR,90)){color = 0;}
  3196  001A24  0E00               	movlw	0
  3197  001A26  0100               	movlb	0	; () banked
  3198  001A28  6F6B               	movwf	(compare@lower+1)& (0+255),b
  3199  001A2A  0E00               	movlw	0
  3200  001A2C  6F6A               	movwf	compare@lower& (0+255),b
  3201  001A2E  C08C  F06C         	movff	detect_color@BR,compare@value2compare
  3202  001A32  C08D  F06D         	movff	detect_color@BR+1,compare@value2compare+1
  3203  001A36  0E00               	movlw	0
  3204  001A38  6F6F               	movwf	(compare@upper+1)& (0+255),b
  3205  001A3A  0E19               	movlw	25
  3206  001A3C  6F6E               	movwf	compare@upper& (0+255),b
  3207  001A3E  ECB5  F02B         	call	_compare	;wreg free
  3208  001A42  0900               	iorlw	0
  3209  001A44  B4D8               	btfsc	status,2,c
  3210  001A46  EF27  F00D         	goto	u5191
  3211  001A4A  EF29  F00D         	goto	u5190
  3212  001A4E                     u5191:
  3213  001A4E  EF43  F00D         	goto	l5150
  3214  001A52                     u5190:
  3215  001A52  0E00               	movlw	0
  3216  001A54  0100               	movlb	0	; () banked
  3217  001A56  6F6B               	movwf	(compare@lower+1)& (0+255),b
  3218  001A58  0E00               	movlw	0
  3219  001A5A  6F6A               	movwf	compare@lower& (0+255),b
  3220  001A5C  C083  F06C         	movff	detect_color@RR,compare@value2compare
  3221  001A60  C084  F06D         	movff	detect_color@RR+1,compare@value2compare+1
  3222  001A64  0E00               	movlw	0
  3223  001A66  6F6F               	movwf	(compare@upper+1)& (0+255),b
  3224  001A68  0E5A               	movlw	90
  3225  001A6A  6F6E               	movwf	compare@upper& (0+255),b
  3226  001A6C  ECB5  F02B         	call	_compare	;wreg free
  3227  001A70  0900               	iorlw	0
  3228  001A72  B4D8               	btfsc	status,2,c
  3229  001A74  EF3E  F00D         	goto	u5201
  3230  001A78  EF40  F00D         	goto	u5200
  3231  001A7C                     u5201:
  3232  001A7C  EF43  F00D         	goto	l5150
  3233  001A80                     u5200:
  3234  001A80  0E00               	movlw	0
  3235  001A82  0100               	movlb	0	; () banked
  3236  001A84  6F8B               	movwf	detect_color@color& (0+255),b
  3237  001A86                     l5150:
  3238                           
  3239                           ;color.c: 352:     if (color == 8) {toggle_light(2,1);}
  3240  001A86  0E08               	movlw	8
  3241  001A88  0100               	movlb	0	; () banked
  3242  001A8A  198B               	xorwf	detect_color@color& (0+255),w,b
  3243  001A8C  A4D8               	btfss	status,2,c
  3244  001A8E  EF4B  F00D         	goto	u5211
  3245  001A92  EF4D  F00D         	goto	u5210
  3246  001A96                     u5211:
  3247  001A96  EF52  F00D         	goto	l5154
  3248  001A9A                     u5210:
  3249  001A9A                     
  3250                           ; BSR set to: 0
  3251  001A9A  0E01               	movlw	1
  3252  001A9C  6E01               	movwf	toggle_light@toggletime^0,c
  3253  001A9E  0E02               	movlw	2
  3254  001AA0  EC19  F01A         	call	_toggle_light
  3255  001AA4                     l5154:
  3256                           
  3257                           ;color.c: 354:     return color;
  3258  001AA4  0100               	movlb	0	; () banked
  3259  001AA6  518B               	movf	detect_color@color& (0+255),w,b
  3260  001AA8                     
  3261                           ; BSR set to: 0
  3262  001AA8  0012               	return		;funcret
  3263  001AAA                     __end_of_detect_color:
  3264                           	callstack 0
  3265                           
  3266 ;; *************** function _compare *****************
  3267 ;; Defined at:
  3268 ;;		line 357 in file "color.c"
  3269 ;; Parameters:    Size  Location     Type
  3270 ;;  lower           2   10[BANK0 ] unsigned int 
  3271 ;;  value2compar    2   12[BANK0 ] unsigned int 
  3272 ;;  upper           2   14[BANK0 ] unsigned int 
  3273 ;; Auto vars:     Size  Location     Type
  3274 ;;  result          1   16[BANK0 ] unsigned char 
  3275 ;; Return value:  Size  Location     Type
  3276 ;;                  1    wreg      unsigned char 
  3277 ;; Registers used:
  3278 ;;		wreg, status,2, status,0
  3279 ;; Tracked objects:
  3280 ;;		On entry : 0/0
  3281 ;;		On exit  : 0/0
  3282 ;;		Unchanged: 0/0
  3283 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3284 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3285 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3286 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3287 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3288 ;;Total ram usage:        7 bytes
  3289 ;; Hardware stack levels used: 1
  3290 ;; Hardware stack levels required when called: 1
  3291 ;; This function calls:
  3292 ;;		Nothing
  3293 ;; This function is called by:
  3294 ;;		_detect_color
  3295 ;; This function uses a non-reentrant model
  3296 ;;
  3297                           
  3298                           	psect	text5
  3299  00576A                     __ptext5:
  3300                           	callstack 0
  3301  00576A                     _compare:
  3302                           	callstack 27
  3303  00576A                     
  3304                           ;color.c: 357: unsigned char compare(unsigned int lower, unsigned int value2compare, uns
      +                          igned int upper);color.c: 358: {;color.c: 359:     unsigned char result = 0;
  3305  00576A  0E00               	movlw	0
  3306  00576C  0100               	movlb	0	; () banked
  3307  00576E  6F70               	movwf	compare@result& (0+255),b
  3308  005770                     
  3309                           ; BSR set to: 0
  3310                           ;color.c: 360:     if (lower < value2compare && value2compare <= upper){result = 1;}
  3311  005770  516C               	movf	compare@value2compare& (0+255),w,b
  3312  005772  5D6A               	subwf	compare@lower& (0+255),w,b
  3313  005774  516D               	movf	(compare@value2compare+1)& (0+255),w,b
  3314  005776  596B               	subwfb	(compare@lower+1)& (0+255),w,b
  3315  005778  B0D8               	btfsc	status,0,c
  3316  00577A  EFC1  F02B         	goto	u4561
  3317  00577E  EFC3  F02B         	goto	u4560
  3318  005782                     u4561:
  3319  005782  EFD0  F02B         	goto	l162
  3320  005786                     u4560:
  3321  005786                     
  3322                           ; BSR set to: 0
  3323  005786  516C               	movf	compare@value2compare& (0+255),w,b
  3324  005788  5D6E               	subwf	compare@upper& (0+255),w,b
  3325  00578A  516D               	movf	(compare@value2compare+1)& (0+255),w,b
  3326  00578C  596F               	subwfb	(compare@upper+1)& (0+255),w,b
  3327  00578E  A0D8               	btfss	status,0,c
  3328  005790  EFCC  F02B         	goto	u4571
  3329  005794  EFCE  F02B         	goto	u4570
  3330  005798                     u4571:
  3331  005798  EFD0  F02B         	goto	l162
  3332  00579C                     u4570:
  3333  00579C                     
  3334                           ; BSR set to: 0
  3335  00579C  0E01               	movlw	1
  3336  00579E  6F70               	movwf	compare@result& (0+255),b
  3337  0057A0                     l162:
  3338                           
  3339                           ; BSR set to: 0
  3340                           ;color.c: 361:     return result;
  3341  0057A0  5170               	movf	compare@result& (0+255),w,b
  3342  0057A2                     
  3343                           ; BSR set to: 0
  3344  0057A2  0012               	return		;funcret
  3345  0057A4                     __end_of_compare:
  3346                           	callstack 0
  3347                           
  3348 ;; *************** function _color_data_collection *****************
  3349 ;; Defined at:
  3350 ;;		line 200 in file "color.c"
  3351 ;; Parameters:    Size  Location     Type
  3352 ;;  m               2   89[COMRAM] PTR struct color_rgb
  3353 ;;		 -> main@rgb(8), 
  3354 ;; Auto vars:     Size  Location     Type
  3355 ;;  x               2  132[BANK0 ] int 
  3356 ;;  k               2  130[BANK0 ] int 
  3357 ;;  j               2  128[BANK0 ] int 
  3358 ;;  i               2  126[BANK0 ] int 
  3359 ;; Return value:  Size  Location     Type
  3360 ;;                  1    wreg      void 
  3361 ;; Registers used:
  3362 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3363 ;; Tracked objects:
  3364 ;;		On entry : 0/0
  3365 ;;		On exit  : 0/0
  3366 ;;		Unchanged: 0/0
  3367 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3368 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3369 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3370 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3371 ;;      Totals:         4       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3372 ;;Total ram usage:       12 bytes
  3373 ;; Hardware stack levels used: 1
  3374 ;; Hardware stack levels required when called: 10
  3375 ;; This function calls:
  3376 ;;		_LED_B
  3377 ;;		_LED_C
  3378 ;;		_LED_G
  3379 ;;		_LED_R
  3380 ;;		_color_display
  3381 ;;		_color_predict
  3382 ;;		_read_color
  3383 ;; This function is called by:
  3384 ;;		_test_function
  3385 ;; This function uses a non-reentrant model
  3386 ;;
  3387                           
  3388                           	psect	text6
  3389  003E24                     __ptext6:
  3390                           	callstack 0
  3391  003E24                     _color_data_collection:
  3392                           	callstack 19
  3393  003E24                     
  3394                           ;color.c: 202:     int i = 0; int j = 0; int k = 0; int x = 0;
  3395  003E24  0E00               	movlw	0
  3396  003E26  0100               	movlb	0	; () banked
  3397  003E28  6FDF               	movwf	(color_data_collection@i+1)& (0+255),b
  3398  003E2A  0E00               	movlw	0
  3399  003E2C  6FDE               	movwf	color_data_collection@i& (0+255),b
  3400  003E2E  0E00               	movlw	0
  3401  003E30  6FE3               	movwf	(color_data_collection@k+1)& (0+255),b
  3402  003E32  0E00               	movlw	0
  3403  003E34  6FE2               	movwf	color_data_collection@k& (0+255),b
  3404  003E36  0E00               	movlw	0
  3405  003E38  6FE5               	movwf	(color_data_collection@x+1)& (0+255),b
  3406  003E3A  0E00               	movlw	0
  3407  003E3C  6FE4               	movwf	color_data_collection@x& (0+255),b
  3408                           
  3409                           ;color.c: 203:     for (i = 0; i <1; ++i){
  3410  003E3E  0E00               	movlw	0
  3411  003E40  6FDF               	movwf	(color_data_collection@i+1)& (0+255),b
  3412  003E42  0E00               	movlw	0
  3413  003E44  6FDE               	movwf	color_data_collection@i& (0+255),b
  3414  003E46                     l4926:
  3415                           
  3416                           ; BSR set to: 0
  3417                           ;color.c: 204:         LED_C();
  3418  003E46  ECEB  F02C         	call	_LED_C	;wreg free
  3419  003E4A                     
  3420                           ;color.c: 205:         _delay((unsigned long)((100)*(64000000/4000.0)));
  3421  003E4A  0E09               	movlw	9
  3422  003E4C  6E5D               	movwf	(??_color_data_collection+1)^0,c
  3423  003E4E  0E1E               	movlw	30
  3424  003E50  6E5C               	movwf	??_color_data_collection^0,c
  3425  003E52  0EE4               	movlw	228
  3426  003E54                     u5747:
  3427  003E54  2EE8               	decfsz	wreg,f,c
  3428  003E56  D7FE               	bra	u5747
  3429  003E58  2E5C               	decfsz	??_color_data_collection^0,f,c
  3430  003E5A  D7FC               	bra	u5747
  3431  003E5C  2E5D               	decfsz	(??_color_data_collection+1)^0,f,c
  3432  003E5E  D7FA               	bra	u5747
  3433  003E60  D000               	nop2	
  3434  003E62                     
  3435                           ;color.c: 206:         read_color(m);
  3436  003E62  C05A  F00C         	movff	color_data_collection@m,read_color@m
  3437  003E66  C05B  F00D         	movff	color_data_collection@m+1,read_color@m+1
  3438  003E6A  ECAB  F029         	call	_read_color	;wreg free
  3439  003E6E                     
  3440                           ;color.c: 207:         color_display(m);
  3441  003E6E  C05A  F058         	movff	color_data_collection@m,color_display@m
  3442  003E72  C05B  F059         	movff	color_data_collection@m+1,color_display@m+1
  3443  003E76  ECDC  F028         	call	_color_display	;wreg free
  3444  003E7A                     
  3445                           ;color.c: 208:     }
  3446  003E7A  0100               	movlb	0	; () banked
  3447  003E7C  4BDE               	infsnz	color_data_collection@i& (0+255),f,b
  3448  003E7E  2BDF               	incf	(color_data_collection@i+1)& (0+255),f,b
  3449  003E80                     
  3450                           ; BSR set to: 0
  3451  003E80  BFDF               	btfsc	(color_data_collection@i+1)& (0+255),7,b
  3452  003E82  EF4B  F01F         	goto	u5071
  3453  003E86  51DF               	movf	(color_data_collection@i+1)& (0+255),w,b
  3454  003E88  E108               	bnz	u5070
  3455  003E8A  05DE               	decf	color_data_collection@i& (0+255),w,b
  3456  003E8C  A0D8               	btfss	status,0,c
  3457  003E8E  EF4B  F01F         	goto	u5071
  3458  003E92  EF4D  F01F         	goto	u5070
  3459  003E96                     u5071:
  3460  003E96  EF23  F01F         	goto	l4926
  3461  003E9A                     u5070:
  3462  003E9A                     
  3463                           ; BSR set to: 0
  3464                           ;color.c: 210:     for (j = 0; j < 1; ++j){
  3465  003E9A  0E00               	movlw	0
  3466  003E9C  6FE1               	movwf	(color_data_collection@j+1)& (0+255),b
  3467  003E9E  0E00               	movlw	0
  3468  003EA0  6FE0               	movwf	color_data_collection@j& (0+255),b
  3469  003EA2                     l4944:
  3470                           
  3471                           ; BSR set to: 0
  3472                           ;color.c: 211:         LED_R();
  3473  003EA2  ECAB  F02C         	call	_LED_R	;wreg free
  3474  003EA6                     
  3475                           ;color.c: 212:         _delay((unsigned long)((100)*(64000000/4000.0)));
  3476  003EA6  0E09               	movlw	9
  3477  003EA8  6E5D               	movwf	(??_color_data_collection+1)^0,c
  3478  003EAA  0E1E               	movlw	30
  3479  003EAC  6E5C               	movwf	??_color_data_collection^0,c
  3480  003EAE  0EE4               	movlw	228
  3481  003EB0                     u5757:
  3482  003EB0  2EE8               	decfsz	wreg,f,c
  3483  003EB2  D7FE               	bra	u5757
  3484  003EB4  2E5C               	decfsz	??_color_data_collection^0,f,c
  3485  003EB6  D7FC               	bra	u5757
  3486  003EB8  2E5D               	decfsz	(??_color_data_collection+1)^0,f,c
  3487  003EBA  D7FA               	bra	u5757
  3488  003EBC  D000               	nop2	
  3489  003EBE                     
  3490                           ;color.c: 213:         read_color(m);
  3491  003EBE  C05A  F00C         	movff	color_data_collection@m,read_color@m
  3492  003EC2  C05B  F00D         	movff	color_data_collection@m+1,read_color@m+1
  3493  003EC6  ECAB  F029         	call	_read_color	;wreg free
  3494  003ECA                     
  3495                           ;color.c: 214:         color_display(m);
  3496  003ECA  C05A  F058         	movff	color_data_collection@m,color_display@m
  3497  003ECE  C05B  F059         	movff	color_data_collection@m+1,color_display@m+1
  3498  003ED2  ECDC  F028         	call	_color_display	;wreg free
  3499  003ED6                     
  3500                           ;color.c: 215:     }
  3501  003ED6  0100               	movlb	0	; () banked
  3502  003ED8  4BE0               	infsnz	color_data_collection@j& (0+255),f,b
  3503  003EDA  2BE1               	incf	(color_data_collection@j+1)& (0+255),f,b
  3504  003EDC                     
  3505                           ; BSR set to: 0
  3506  003EDC  BFE1               	btfsc	(color_data_collection@j+1)& (0+255),7,b
  3507  003EDE  EF79  F01F         	goto	u5081
  3508  003EE2  51E1               	movf	(color_data_collection@j+1)& (0+255),w,b
  3509  003EE4  E108               	bnz	u5080
  3510  003EE6  05E0               	decf	color_data_collection@j& (0+255),w,b
  3511  003EE8  A0D8               	btfss	status,0,c
  3512  003EEA  EF79  F01F         	goto	u5081
  3513  003EEE  EF7B  F01F         	goto	u5080
  3514  003EF2                     u5081:
  3515  003EF2  EF51  F01F         	goto	l4944
  3516  003EF6                     u5080:
  3517  003EF6                     
  3518                           ; BSR set to: 0
  3519                           ;color.c: 217:     for (k = 0; k < 1; ++k){
  3520  003EF6  0E00               	movlw	0
  3521  003EF8  6FE3               	movwf	(color_data_collection@k+1)& (0+255),b
  3522  003EFA  0E00               	movlw	0
  3523  003EFC  6FE2               	movwf	color_data_collection@k& (0+255),b
  3524  003EFE                     l4962:
  3525                           
  3526                           ; BSR set to: 0
  3527                           ;color.c: 218:         LED_G();
  3528  003EFE  ECCB  F02C         	call	_LED_G	;wreg free
  3529  003F02                     
  3530                           ;color.c: 219:         _delay((unsigned long)((100)*(64000000/4000.0)));
  3531  003F02  0E09               	movlw	9
  3532  003F04  6E5D               	movwf	(??_color_data_collection+1)^0,c
  3533  003F06  0E1E               	movlw	30
  3534  003F08  6E5C               	movwf	??_color_data_collection^0,c
  3535  003F0A  0EE4               	movlw	228
  3536  003F0C                     u5767:
  3537  003F0C  2EE8               	decfsz	wreg,f,c
  3538  003F0E  D7FE               	bra	u5767
  3539  003F10  2E5C               	decfsz	??_color_data_collection^0,f,c
  3540  003F12  D7FC               	bra	u5767
  3541  003F14  2E5D               	decfsz	(??_color_data_collection+1)^0,f,c
  3542  003F16  D7FA               	bra	u5767
  3543  003F18  D000               	nop2	
  3544  003F1A                     
  3545                           ;color.c: 220:         read_color(m);
  3546  003F1A  C05A  F00C         	movff	color_data_collection@m,read_color@m
  3547  003F1E  C05B  F00D         	movff	color_data_collection@m+1,read_color@m+1
  3548  003F22  ECAB  F029         	call	_read_color	;wreg free
  3549  003F26                     
  3550                           ;color.c: 221:         color_display(m);
  3551  003F26  C05A  F058         	movff	color_data_collection@m,color_display@m
  3552  003F2A  C05B  F059         	movff	color_data_collection@m+1,color_display@m+1
  3553  003F2E  ECDC  F028         	call	_color_display	;wreg free
  3554  003F32                     
  3555                           ;color.c: 222:     }
  3556  003F32  0100               	movlb	0	; () banked
  3557  003F34  4BE2               	infsnz	color_data_collection@k& (0+255),f,b
  3558  003F36  2BE3               	incf	(color_data_collection@k+1)& (0+255),f,b
  3559  003F38                     
  3560                           ; BSR set to: 0
  3561  003F38  BFE3               	btfsc	(color_data_collection@k+1)& (0+255),7,b
  3562  003F3A  EFA7  F01F         	goto	u5091
  3563  003F3E  51E3               	movf	(color_data_collection@k+1)& (0+255),w,b
  3564  003F40  E108               	bnz	u5090
  3565  003F42  05E2               	decf	color_data_collection@k& (0+255),w,b
  3566  003F44  A0D8               	btfss	status,0,c
  3567  003F46  EFA7  F01F         	goto	u5091
  3568  003F4A  EFA9  F01F         	goto	u5090
  3569  003F4E                     u5091:
  3570  003F4E  EF7F  F01F         	goto	l4962
  3571  003F52                     u5090:
  3572  003F52                     
  3573                           ; BSR set to: 0
  3574                           ;color.c: 224:     for (x = 0; x < 1; ++x){
  3575  003F52  0E00               	movlw	0
  3576  003F54  6FE5               	movwf	(color_data_collection@x+1)& (0+255),b
  3577  003F56  0E00               	movlw	0
  3578  003F58  6FE4               	movwf	color_data_collection@x& (0+255),b
  3579  003F5A                     l4980:
  3580                           
  3581                           ; BSR set to: 0
  3582                           ;color.c: 225:         LED_B();
  3583  003F5A  ECDB  F02C         	call	_LED_B	;wreg free
  3584  003F5E                     
  3585                           ;color.c: 226:         _delay((unsigned long)((100)*(64000000/4000.0)));
  3586  003F5E  0E09               	movlw	9
  3587  003F60  6E5D               	movwf	(??_color_data_collection+1)^0,c
  3588  003F62  0E1E               	movlw	30
  3589  003F64  6E5C               	movwf	??_color_data_collection^0,c
  3590  003F66  0EE4               	movlw	228
  3591  003F68                     u5777:
  3592  003F68  2EE8               	decfsz	wreg,f,c
  3593  003F6A  D7FE               	bra	u5777
  3594  003F6C  2E5C               	decfsz	??_color_data_collection^0,f,c
  3595  003F6E  D7FC               	bra	u5777
  3596  003F70  2E5D               	decfsz	(??_color_data_collection+1)^0,f,c
  3597  003F72  D7FA               	bra	u5777
  3598  003F74  D000               	nop2	
  3599  003F76                     
  3600                           ;color.c: 227:         read_color(m);
  3601  003F76  C05A  F00C         	movff	color_data_collection@m,read_color@m
  3602  003F7A  C05B  F00D         	movff	color_data_collection@m+1,read_color@m+1
  3603  003F7E  ECAB  F029         	call	_read_color	;wreg free
  3604  003F82                     
  3605                           ;color.c: 228:         color_display(m);
  3606  003F82  C05A  F058         	movff	color_data_collection@m,color_display@m
  3607  003F86  C05B  F059         	movff	color_data_collection@m+1,color_display@m+1
  3608  003F8A  ECDC  F028         	call	_color_display	;wreg free
  3609  003F8E                     
  3610                           ;color.c: 229:     }
  3611  003F8E  0100               	movlb	0	; () banked
  3612  003F90  4BE4               	infsnz	color_data_collection@x& (0+255),f,b
  3613  003F92  2BE5               	incf	(color_data_collection@x+1)& (0+255),f,b
  3614  003F94                     
  3615                           ; BSR set to: 0
  3616  003F94  BFE5               	btfsc	(color_data_collection@x+1)& (0+255),7,b
  3617  003F96  EFD5  F01F         	goto	u5101
  3618  003F9A  51E5               	movf	(color_data_collection@x+1)& (0+255),w,b
  3619  003F9C  E108               	bnz	u5100
  3620  003F9E  05E4               	decf	color_data_collection@x& (0+255),w,b
  3621  003FA0  A0D8               	btfss	status,0,c
  3622  003FA2  EFD5  F01F         	goto	u5101
  3623  003FA6  EFD7  F01F         	goto	u5100
  3624  003FAA                     u5101:
  3625  003FAA  EFAD  F01F         	goto	l4980
  3626  003FAE                     u5100:
  3627  003FAE                     
  3628                           ; BSR set to: 0
  3629                           ;color.c: 230:     color_predict(1);
  3630  003FAE  0E01               	movlw	1
  3631  003FB0  EC58  F02C         	call	_color_predict
  3632  003FB4                     
  3633                           ;color.c: 231:     LED_C();
  3634  003FB4  ECEB  F02C         	call	_LED_C	;wreg free
  3635  003FB8  0012               	return		;funcret
  3636  003FBA                     __end_of_color_data_collection:
  3637                           	callstack 0
  3638                           
  3639 ;; *************** function _read_color *****************
  3640 ;; Defined at:
  3641 ;;		line 147 in file "color.c"
  3642 ;; Parameters:    Size  Location     Type
  3643 ;;  m               2   11[COMRAM] PTR struct color_rgb
  3644 ;;		 -> main@rgb(8), 
  3645 ;; Auto vars:     Size  Location     Type
  3646 ;;		None
  3647 ;; Return value:  Size  Location     Type
  3648 ;;                  1    wreg      void 
  3649 ;; Registers used:
  3650 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3651 ;; Tracked objects:
  3652 ;;		On entry : 0/0
  3653 ;;		On exit  : 0/0
  3654 ;;		Unchanged: 0/0
  3655 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3656 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3657 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3658 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3659 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3660 ;;Total ram usage:        2 bytes
  3661 ;; Hardware stack levels used: 1
  3662 ;; Hardware stack levels required when called: 4
  3663 ;; This function calls:
  3664 ;;		_color_read_Blue
  3665 ;;		_color_read_Clear
  3666 ;;		_color_read_Green
  3667 ;;		_color_read_Red
  3668 ;; This function is called by:
  3669 ;;		_color_data_collection
  3670 ;;		_detect_color
  3671 ;;		_test_function
  3672 ;; This function uses a non-reentrant model
  3673 ;;
  3674                           
  3675                           	psect	text7
  3676  005356                     __ptext7:
  3677                           	callstack 0
  3678  005356                     _read_color:
  3679                           	callstack 24
  3680  005356                     
  3681                           ;color.c: 147: void read_color (struct color_rgb *m);color.c: 148: {;color.c: 149:     m
      +                          ->R = color_read_Red();
  3682  005356  EC2E  F02A         	call	_color_read_Red	;wreg free
  3683  00535A  C00C  FFD9         	movff	read_color@m,fsr2l
  3684  00535E  C00D  FFDA         	movff	read_color@m+1,fsr2h
  3685  005362  C005  FFDE         	movff	?_color_read_Red,postinc2
  3686  005366  C006  FFDD         	movff	?_color_read_Red+1,postdec2
  3687                           
  3688                           ;color.c: 150:     m->B = color_read_Blue();
  3689  00536A  EC7E  F02A         	call	_color_read_Blue	;wreg free
  3690  00536E  EE20 F004          	lfsr	2,4
  3691  005372  500C               	movf	read_color@m^0,w,c
  3692  005374  26D9               	addwf	fsr2l,f,c
  3693  005376  500D               	movf	(read_color@m+1)^0,w,c
  3694  005378  22DA               	addwfc	fsr2h,f,c
  3695  00537A  C005  FFDE         	movff	?_color_read_Blue,postinc2
  3696  00537E  C006  FFDD         	movff	?_color_read_Blue+1,postdec2
  3697                           
  3698                           ;color.c: 151:     m->G = color_read_Green();
  3699  005382  EC56  F02A         	call	_color_read_Green	;wreg free
  3700  005386  EE20 F002          	lfsr	2,2
  3701  00538A  500C               	movf	read_color@m^0,w,c
  3702  00538C  26D9               	addwf	fsr2l,f,c
  3703  00538E  500D               	movf	(read_color@m+1)^0,w,c
  3704  005390  22DA               	addwfc	fsr2h,f,c
  3705  005392  C005  FFDE         	movff	?_color_read_Green,postinc2
  3706  005396  C006  FFDD         	movff	?_color_read_Green+1,postdec2
  3707                           
  3708                           ;color.c: 152:     m->C = color_read_Clear();
  3709  00539A  ECA6  F02A         	call	_color_read_Clear	;wreg free
  3710  00539E  EE20 F006          	lfsr	2,6
  3711  0053A2  500C               	movf	read_color@m^0,w,c
  3712  0053A4  26D9               	addwf	fsr2l,f,c
  3713  0053A6  500D               	movf	(read_color@m+1)^0,w,c
  3714  0053A8  22DA               	addwfc	fsr2h,f,c
  3715  0053AA  C005  FFDE         	movff	?_color_read_Clear,postinc2
  3716  0053AE  C006  FFDD         	movff	?_color_read_Clear+1,postdec2
  3717  0053B2  0012               	return		;funcret
  3718  0053B4                     __end_of_read_color:
  3719                           	callstack 0
  3720                           
  3721 ;; *************** function _color_display *****************
  3722 ;; Defined at:
  3723 ;;		line 234 in file "color.c"
  3724 ;; Parameters:    Size  Location     Type
  3725 ;;  m               2   87[COMRAM] PTR struct color_rgb
  3726 ;;		 -> main@rgb(8), 
  3727 ;; Auto vars:     Size  Location     Type
  3728 ;;  buf           100   25[BANK0 ] unsigned char [100]
  3729 ;; Return value:  Size  Location     Type
  3730 ;;                  1    wreg      void 
  3731 ;; Registers used:
  3732 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3733 ;; Tracked objects:
  3734 ;;		On entry : 0/0
  3735 ;;		On exit  : 0/0
  3736 ;;		Unchanged: 0/0
  3737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3738 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3739 ;;      Locals:         0     100       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3740 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3741 ;;      Totals:         2     100       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3742 ;;Total ram usage:      102 bytes
  3743 ;; Hardware stack levels used: 1
  3744 ;; Hardware stack levels required when called: 9
  3745 ;; This function calls:
  3746 ;;		_sendStringSerial4
  3747 ;;		_sprintf
  3748 ;; This function is called by:
  3749 ;;		_color_data_collection
  3750 ;;		_test_function
  3751 ;; This function uses a non-reentrant model
  3752 ;;
  3753                           
  3754                           	psect	text8
  3755  0051B8                     __ptext8:
  3756                           	callstack 0
  3757  0051B8                     _color_display:
  3758                           	callstack 20
  3759  0051B8                     
  3760                           ;color.c: 234: void color_display(struct color_rgb *m);color.c: 235: {;color.c: 236:    
      +                           char buf[100];;color.c: 237:     sprintf(buf,"%d\t%d\t%d\t%d\r\n", m->R, m->G, m->B, m-
      +                          >C);
  3761  0051B8  0E79               	movlw	low color_display@buf
  3762  0051BA  0100               	movlb	0	; () banked
  3763  0051BC  6F60               	movwf	sprintf@s& (0+255),b
  3764  0051BE  0E00               	movlw	high color_display@buf
  3765  0051C0  6F61               	movwf	(sprintf@s+1)& (0+255),b
  3766  0051C2  0E16               	movlw	low STR_1
  3767  0051C4  6F62               	movwf	sprintf@fmt& (0+255),b
  3768  0051C6  0E0E               	movlw	high STR_1
  3769  0051C8  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
  3770  0051CA  C058  FFD9         	movff	color_display@m,fsr2l
  3771  0051CE  C059  FFDA         	movff	color_display@m+1,fsr2h
  3772  0051D2  CFDE F064          	movff	postinc2,?_sprintf+4
  3773  0051D6  CFDD F065          	movff	postdec2,?_sprintf+5
  3774  0051DA  EE20 F002          	lfsr	2,2
  3775  0051DE  5058               	movf	color_display@m^0,w,c
  3776  0051E0  26D9               	addwf	fsr2l,f,c
  3777  0051E2  5059               	movf	(color_display@m+1)^0,w,c
  3778  0051E4  22DA               	addwfc	fsr2h,f,c
  3779  0051E6  CFDE F066          	movff	postinc2,?_sprintf+6
  3780  0051EA  CFDD F067          	movff	postdec2,?_sprintf+7
  3781  0051EE  EE20 F004          	lfsr	2,4
  3782  0051F2  5058               	movf	color_display@m^0,w,c
  3783  0051F4  26D9               	addwf	fsr2l,f,c
  3784  0051F6  5059               	movf	(color_display@m+1)^0,w,c
  3785  0051F8  22DA               	addwfc	fsr2h,f,c
  3786  0051FA  CFDE F068          	movff	postinc2,?_sprintf+8
  3787  0051FE  CFDD F069          	movff	postdec2,?_sprintf+9
  3788  005202  EE20 F006          	lfsr	2,6
  3789  005206  5058               	movf	color_display@m^0,w,c
  3790  005208  26D9               	addwf	fsr2l,f,c
  3791  00520A  5059               	movf	(color_display@m+1)^0,w,c
  3792  00520C  22DA               	addwfc	fsr2h,f,c
  3793  00520E  CFDE F06A          	movff	postinc2,?_sprintf+10
  3794  005212  CFDD F06B          	movff	postdec2,?_sprintf+11
  3795  005216  EC05  F02A         	call	_sprintf	;wreg free
  3796  00521A                     
  3797                           ;color.c: 238:     sendStringSerial4(buf);
  3798  00521A  0E79               	movlw	low color_display@buf
  3799  00521C  6E02               	movwf	sendStringSerial4@string^0,c
  3800  00521E  0E00               	movlw	high color_display@buf
  3801  005220  6E03               	movwf	(sendStringSerial4@string+1)^0,c
  3802  005222  EC40  F02C         	call	_sendStringSerial4	;wreg free
  3803  005226  0012               	return		;funcret
  3804  005228                     __end_of_color_display:
  3805                           	callstack 0
  3806                           
  3807 ;; *************** function _calibrate_white *****************
  3808 ;; Defined at:
  3809 ;;		line 258 in file "color.c"
  3810 ;; Parameters:    Size  Location     Type
  3811 ;;  w               2   11[COMRAM] PTR struct white_card
  3812 ;;		 -> main@white(28), 
  3813 ;; Auto vars:     Size  Location     Type
  3814 ;;		None
  3815 ;; Return value:  Size  Location     Type
  3816 ;;                  1    wreg      void 
  3817 ;; Registers used:
  3818 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3819 ;; Tracked objects:
  3820 ;;		On entry : 0/0
  3821 ;;		On exit  : 0/0
  3822 ;;		Unchanged: 0/0
  3823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3824 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3825 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3826 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3827 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3828 ;;Total ram usage:        4 bytes
  3829 ;; Hardware stack levels used: 1
  3830 ;; Hardware stack levels required when called: 4
  3831 ;; This function calls:
  3832 ;;		_LED_B
  3833 ;;		_LED_C
  3834 ;;		_LED_G
  3835 ;;		_LED_OFF
  3836 ;;		_LED_R
  3837 ;;		_color_read_Blue
  3838 ;;		_color_read_Clear
  3839 ;;		_color_read_Green
  3840 ;;		_color_read_Red
  3841 ;;		_toggle_light
  3842 ;; This function is called by:
  3843 ;;		_main
  3844 ;;		_test_function
  3845 ;; This function uses a non-reentrant model
  3846 ;;
  3847                           
  3848                           	psect	text9
  3849  0036DE                     __ptext9:
  3850                           	callstack 0
  3851  0036DE                     _calibrate_white:
  3852                           	callstack 25
  3853  0036DE                     
  3854                           ;color.c: 258: void calibrate_white(struct white_card *w);color.c: 259: {;color.c: 260: 
      +                              LED_OFF();
  3855  0036DE  ECBB  F02C         	call	_LED_OFF	;wreg free
  3856  0036E2                     
  3857                           ;color.c: 261:     toggle_light(1,2);
  3858  0036E2  0E02               	movlw	2
  3859  0036E4  6E01               	movwf	toggle_light@toggletime^0,c
  3860  0036E6  0E01               	movlw	1
  3861  0036E8  EC19  F01A         	call	_toggle_light
  3862  0036EC                     
  3863                           ;color.c: 262:     _delay((unsigned long)((500)*(64000000/4000.0)));
  3864  0036EC  0E29               	movlw	41
  3865  0036EE  6E0F               	movwf	(??_calibrate_white+1)^0,c
  3866  0036F0  0E96               	movlw	150
  3867  0036F2  6E0E               	movwf	??_calibrate_white^0,c
  3868  0036F4  0E7F               	movlw	127
  3869  0036F6                     u5787:
  3870  0036F6  2EE8               	decfsz	wreg,f,c
  3871  0036F8  D7FE               	bra	u5787
  3872  0036FA  2E0E               	decfsz	??_calibrate_white^0,f,c
  3873  0036FC  D7FC               	bra	u5787
  3874  0036FE  2E0F               	decfsz	(??_calibrate_white+1)^0,f,c
  3875  003700  D7FA               	bra	u5787
  3876  003702  F000               	nop	
  3877  003704                     
  3878                           ;color.c: 264:     LED_R();
  3879  003704  ECAB  F02C         	call	_LED_R	;wreg free
  3880  003708                     
  3881                           ;color.c: 265:     _delay((unsigned long)((100)*(64000000/4000.0)));
  3882  003708  0E09               	movlw	9
  3883  00370A  6E0F               	movwf	(??_calibrate_white+1)^0,c
  3884  00370C  0E1E               	movlw	30
  3885  00370E  6E0E               	movwf	??_calibrate_white^0,c
  3886  003710  0EE4               	movlw	228
  3887  003712                     u5797:
  3888  003712  2EE8               	decfsz	wreg,f,c
  3889  003714  D7FE               	bra	u5797
  3890  003716  2E0E               	decfsz	??_calibrate_white^0,f,c
  3891  003718  D7FC               	bra	u5797
  3892  00371A  2E0F               	decfsz	(??_calibrate_white+1)^0,f,c
  3893  00371C  D7FA               	bra	u5797
  3894  00371E  D000               	nop2	
  3895  003720                     
  3896                           ;color.c: 266:     w->RR = color_read_Red(); w->RG = color_read_Green(); w->RB = color_r
      +                          ead_Blue();
  3897  003720  EC2E  F02A         	call	_color_read_Red	;wreg free
  3898  003724  C00C  FFD9         	movff	calibrate_white@w,fsr2l
  3899  003728  C00D  FFDA         	movff	calibrate_white@w+1,fsr2h
  3900  00372C  C005  FFDE         	movff	?_color_read_Red,postinc2
  3901  003730  C006  FFDD         	movff	?_color_read_Red+1,postdec2
  3902  003734  EC56  F02A         	call	_color_read_Green	;wreg free
  3903  003738  EE20 F002          	lfsr	2,2
  3904  00373C  500C               	movf	calibrate_white@w^0,w,c
  3905  00373E  26D9               	addwf	fsr2l,f,c
  3906  003740  500D               	movf	(calibrate_white@w+1)^0,w,c
  3907  003742  22DA               	addwfc	fsr2h,f,c
  3908  003744  C005  FFDE         	movff	?_color_read_Green,postinc2
  3909  003748  C006  FFDD         	movff	?_color_read_Green+1,postdec2
  3910  00374C  EC7E  F02A         	call	_color_read_Blue	;wreg free
  3911  003750  EE20 F004          	lfsr	2,4
  3912  003754  500C               	movf	calibrate_white@w^0,w,c
  3913  003756  26D9               	addwf	fsr2l,f,c
  3914  003758  500D               	movf	(calibrate_white@w+1)^0,w,c
  3915  00375A  22DA               	addwfc	fsr2h,f,c
  3916  00375C  C005  FFDE         	movff	?_color_read_Blue,postinc2
  3917  003760  C006  FFDD         	movff	?_color_read_Blue+1,postdec2
  3918  003764                     
  3919                           ;color.c: 269:     LED_G();
  3920  003764  ECCB  F02C         	call	_LED_G	;wreg free
  3921  003768                     
  3922                           ;color.c: 270:     _delay((unsigned long)((100)*(64000000/4000.0)));
  3923  003768  0E09               	movlw	9
  3924  00376A  6E0F               	movwf	(??_calibrate_white+1)^0,c
  3925  00376C  0E1E               	movlw	30
  3926  00376E  6E0E               	movwf	??_calibrate_white^0,c
  3927  003770  0EE4               	movlw	228
  3928  003772                     u5807:
  3929  003772  2EE8               	decfsz	wreg,f,c
  3930  003774  D7FE               	bra	u5807
  3931  003776  2E0E               	decfsz	??_calibrate_white^0,f,c
  3932  003778  D7FC               	bra	u5807
  3933  00377A  2E0F               	decfsz	(??_calibrate_white+1)^0,f,c
  3934  00377C  D7FA               	bra	u5807
  3935  00377E  D000               	nop2	
  3936  003780                     
  3937                           ;color.c: 271:     w->GR = color_read_Red(); w->GG = color_read_Green(); w->GB = color_r
      +                          ead_Blue();
  3938  003780  EC2E  F02A         	call	_color_read_Red	;wreg free
  3939  003784  EE20 F006          	lfsr	2,6
  3940  003788  500C               	movf	calibrate_white@w^0,w,c
  3941  00378A  26D9               	addwf	fsr2l,f,c
  3942  00378C  500D               	movf	(calibrate_white@w+1)^0,w,c
  3943  00378E  22DA               	addwfc	fsr2h,f,c
  3944  003790  C005  FFDE         	movff	?_color_read_Red,postinc2
  3945  003794  C006  FFDD         	movff	?_color_read_Red+1,postdec2
  3946  003798  EC56  F02A         	call	_color_read_Green	;wreg free
  3947  00379C  EE20 F008          	lfsr	2,8
  3948  0037A0  500C               	movf	calibrate_white@w^0,w,c
  3949  0037A2  26D9               	addwf	fsr2l,f,c
  3950  0037A4  500D               	movf	(calibrate_white@w+1)^0,w,c
  3951  0037A6  22DA               	addwfc	fsr2h,f,c
  3952  0037A8  C005  FFDE         	movff	?_color_read_Green,postinc2
  3953  0037AC  C006  FFDD         	movff	?_color_read_Green+1,postdec2
  3954  0037B0  EC7E  F02A         	call	_color_read_Blue	;wreg free
  3955  0037B4  EE20 F00A          	lfsr	2,10
  3956  0037B8  500C               	movf	calibrate_white@w^0,w,c
  3957  0037BA  26D9               	addwf	fsr2l,f,c
  3958  0037BC  500D               	movf	(calibrate_white@w+1)^0,w,c
  3959  0037BE  22DA               	addwfc	fsr2h,f,c
  3960  0037C0  C005  FFDE         	movff	?_color_read_Blue,postinc2
  3961  0037C4  C006  FFDD         	movff	?_color_read_Blue+1,postdec2
  3962  0037C8                     
  3963                           ;color.c: 275:     LED_B();
  3964  0037C8  ECDB  F02C         	call	_LED_B	;wreg free
  3965  0037CC                     
  3966                           ;color.c: 276:     _delay((unsigned long)((100)*(64000000/4000.0)));
  3967  0037CC  0E09               	movlw	9
  3968  0037CE  6E0F               	movwf	(??_calibrate_white+1)^0,c
  3969  0037D0  0E1E               	movlw	30
  3970  0037D2  6E0E               	movwf	??_calibrate_white^0,c
  3971  0037D4  0EE4               	movlw	228
  3972  0037D6                     u5817:
  3973  0037D6  2EE8               	decfsz	wreg,f,c
  3974  0037D8  D7FE               	bra	u5817
  3975  0037DA  2E0E               	decfsz	??_calibrate_white^0,f,c
  3976  0037DC  D7FC               	bra	u5817
  3977  0037DE  2E0F               	decfsz	(??_calibrate_white+1)^0,f,c
  3978  0037E0  D7FA               	bra	u5817
  3979  0037E2  D000               	nop2	
  3980  0037E4                     
  3981                           ;color.c: 277:     w->BR = color_read_Red(); w->BG = color_read_Green(); w->BB = color_r
      +                          ead_Blue(); w->BC = color_read_Clear();
  3982  0037E4  EC2E  F02A         	call	_color_read_Red	;wreg free
  3983  0037E8  EE20 F00C          	lfsr	2,12
  3984  0037EC  500C               	movf	calibrate_white@w^0,w,c
  3985  0037EE  26D9               	addwf	fsr2l,f,c
  3986  0037F0  500D               	movf	(calibrate_white@w+1)^0,w,c
  3987  0037F2  22DA               	addwfc	fsr2h,f,c
  3988  0037F4  C005  FFDE         	movff	?_color_read_Red,postinc2
  3989  0037F8  C006  FFDD         	movff	?_color_read_Red+1,postdec2
  3990  0037FC  EC56  F02A         	call	_color_read_Green	;wreg free
  3991  003800  EE20 F00E          	lfsr	2,14
  3992  003804  500C               	movf	calibrate_white@w^0,w,c
  3993  003806  26D9               	addwf	fsr2l,f,c
  3994  003808  500D               	movf	(calibrate_white@w+1)^0,w,c
  3995  00380A  22DA               	addwfc	fsr2h,f,c
  3996  00380C  C005  FFDE         	movff	?_color_read_Green,postinc2
  3997  003810  C006  FFDD         	movff	?_color_read_Green+1,postdec2
  3998  003814  EC7E  F02A         	call	_color_read_Blue	;wreg free
  3999  003818  EE20 F010          	lfsr	2,16
  4000  00381C  500C               	movf	calibrate_white@w^0,w,c
  4001  00381E  26D9               	addwf	fsr2l,f,c
  4002  003820  500D               	movf	(calibrate_white@w+1)^0,w,c
  4003  003822  22DA               	addwfc	fsr2h,f,c
  4004  003824  C005  FFDE         	movff	?_color_read_Blue,postinc2
  4005  003828  C006  FFDD         	movff	?_color_read_Blue+1,postdec2
  4006  00382C  ECA6  F02A         	call	_color_read_Clear	;wreg free
  4007  003830  EE20 F01A          	lfsr	2,26
  4008  003834  500C               	movf	calibrate_white@w^0,w,c
  4009  003836  26D9               	addwf	fsr2l,f,c
  4010  003838  500D               	movf	(calibrate_white@w+1)^0,w,c
  4011  00383A  22DA               	addwfc	fsr2h,f,c
  4012  00383C  C005  FFDE         	movff	?_color_read_Clear,postinc2
  4013  003840  C006  FFDD         	movff	?_color_read_Clear+1,postdec2
  4014  003844                     
  4015                           ;color.c: 280:     LED_C();
  4016  003844  ECEB  F02C         	call	_LED_C	;wreg free
  4017  003848                     
  4018                           ;color.c: 281:     _delay((unsigned long)((100)*(64000000/4000.0)));
  4019  003848  0E09               	movlw	9
  4020  00384A  6E0F               	movwf	(??_calibrate_white+1)^0,c
  4021  00384C  0E1E               	movlw	30
  4022  00384E  6E0E               	movwf	??_calibrate_white^0,c
  4023  003850  0EE4               	movlw	228
  4024  003852                     u5827:
  4025  003852  2EE8               	decfsz	wreg,f,c
  4026  003854  D7FE               	bra	u5827
  4027  003856  2E0E               	decfsz	??_calibrate_white^0,f,c
  4028  003858  D7FC               	bra	u5827
  4029  00385A  2E0F               	decfsz	(??_calibrate_white+1)^0,f,c
  4030  00385C  D7FA               	bra	u5827
  4031  00385E  D000               	nop2	
  4032  003860                     
  4033                           ;color.c: 282:     w->CR = color_read_Red(); w->CG = color_read_Green(); w->CB = color_r
      +                          ead_Blue(); w->CC = color_read_Clear();
  4034  003860  EC2E  F02A         	call	_color_read_Red	;wreg free
  4035  003864  EE20 F012          	lfsr	2,18
  4036  003868  500C               	movf	calibrate_white@w^0,w,c
  4037  00386A  26D9               	addwf	fsr2l,f,c
  4038  00386C  500D               	movf	(calibrate_white@w+1)^0,w,c
  4039  00386E  22DA               	addwfc	fsr2h,f,c
  4040  003870  C005  FFDE         	movff	?_color_read_Red,postinc2
  4041  003874  C006  FFDD         	movff	?_color_read_Red+1,postdec2
  4042  003878  EC56  F02A         	call	_color_read_Green	;wreg free
  4043  00387C  EE20 F014          	lfsr	2,20
  4044  003880  500C               	movf	calibrate_white@w^0,w,c
  4045  003882  26D9               	addwf	fsr2l,f,c
  4046  003884  500D               	movf	(calibrate_white@w+1)^0,w,c
  4047  003886  22DA               	addwfc	fsr2h,f,c
  4048  003888  C005  FFDE         	movff	?_color_read_Green,postinc2
  4049  00388C  C006  FFDD         	movff	?_color_read_Green+1,postdec2
  4050  003890  EC7E  F02A         	call	_color_read_Blue	;wreg free
  4051  003894  EE20 F016          	lfsr	2,22
  4052  003898  500C               	movf	calibrate_white@w^0,w,c
  4053  00389A  26D9               	addwf	fsr2l,f,c
  4054  00389C  500D               	movf	(calibrate_white@w+1)^0,w,c
  4055  00389E  22DA               	addwfc	fsr2h,f,c
  4056  0038A0  C005  FFDE         	movff	?_color_read_Blue,postinc2
  4057  0038A4  C006  FFDD         	movff	?_color_read_Blue+1,postdec2
  4058  0038A8  ECA6  F02A         	call	_color_read_Clear	;wreg free
  4059  0038AC  EE20 F018          	lfsr	2,24
  4060  0038B0  500C               	movf	calibrate_white@w^0,w,c
  4061  0038B2  26D9               	addwf	fsr2l,f,c
  4062  0038B4  500D               	movf	(calibrate_white@w+1)^0,w,c
  4063  0038B6  22DA               	addwfc	fsr2h,f,c
  4064  0038B8  C005  FFDE         	movff	?_color_read_Clear,postinc2
  4065  0038BC  C006  FFDD         	movff	?_color_read_Clear+1,postdec2
  4066  0038C0                     
  4067                           ;color.c: 284:     LED_OFF();
  4068  0038C0  ECBB  F02C         	call	_LED_OFF	;wreg free
  4069  0038C4                     
  4070                           ;color.c: 285:     _delay((unsigned long)((500)*(64000000/4000.0)));
  4071  0038C4  0E29               	movlw	41
  4072  0038C6  6E0F               	movwf	(??_calibrate_white+1)^0,c
  4073  0038C8  0E96               	movlw	150
  4074  0038CA  6E0E               	movwf	??_calibrate_white^0,c
  4075  0038CC  0E7F               	movlw	127
  4076  0038CE                     u5837:
  4077  0038CE  2EE8               	decfsz	wreg,f,c
  4078  0038D0  D7FE               	bra	u5837
  4079  0038D2  2E0E               	decfsz	??_calibrate_white^0,f,c
  4080  0038D4  D7FC               	bra	u5837
  4081  0038D6  2E0F               	decfsz	(??_calibrate_white+1)^0,f,c
  4082  0038D8  D7FA               	bra	u5837
  4083  0038DA  F000               	nop	
  4084                           
  4085                           ;color.c: 286:     toggle_light(1,2);
  4086  0038DC  0E02               	movlw	2
  4087  0038DE  6E01               	movwf	toggle_light@toggletime^0,c
  4088  0038E0  0E01               	movlw	1
  4089  0038E2  EC19  F01A         	call	_toggle_light
  4090  0038E6  0012               	return		;funcret
  4091  0038E8                     __end_of_calibrate_white:
  4092                           	callstack 0
  4093                           
  4094 ;; *************** function _color_read_Red *****************
  4095 ;; Defined at:
  4096 ;;		line 91 in file "color.c"
  4097 ;; Parameters:    Size  Location     Type
  4098 ;;		None
  4099 ;; Auto vars:     Size  Location     Type
  4100 ;;  tmp             2    9[COMRAM] unsigned int 
  4101 ;; Return value:  Size  Location     Type
  4102 ;;                  2    4[COMRAM] unsigned int 
  4103 ;; Registers used:
  4104 ;;		wreg, status,2, status,0, cstack
  4105 ;; Tracked objects:
  4106 ;;		On entry : 0/0
  4107 ;;		On exit  : 0/0
  4108 ;;		Unchanged: 0/0
  4109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4110 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4111 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4112 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4113 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4114 ;;Total ram usage:        7 bytes
  4115 ;; Hardware stack levels used: 1
  4116 ;; Hardware stack levels required when called: 3
  4117 ;; This function calls:
  4118 ;;		_I2C_2_Master_Read
  4119 ;;		_I2C_2_Master_RepStart
  4120 ;;		_I2C_2_Master_Start
  4121 ;;		_I2C_2_Master_Stop
  4122 ;;		_I2C_2_Master_Write
  4123 ;; This function is called by:
  4124 ;;		_read_color
  4125 ;;		_calibrate_white
  4126 ;; This function uses a non-reentrant model
  4127 ;;
  4128                           
  4129                           	psect	text10
  4130  00545C                     __ptext10:
  4131                           	callstack 0
  4132  00545C                     _color_read_Red:
  4133                           	callstack 24
  4134  00545C                     
  4135                           ;color.c: 93:  unsigned int tmp;;color.c: 94:  I2C_2_Master_Start();
  4136  00545C  EC66  F02D         	call	_I2C_2_Master_Start	;wreg free
  4137                           
  4138                           ;color.c: 95:  I2C_2_Master_Write(0x52 | 0x00);
  4139  005460  0E52               	movlw	82
  4140  005462  EC50  F02D         	call	_I2C_2_Master_Write
  4141                           
  4142                           ;color.c: 96:  I2C_2_Master_Write(0xA0 | 0x16);
  4143  005466  0EB6               	movlw	182
  4144  005468  EC50  F02D         	call	_I2C_2_Master_Write
  4145                           
  4146                           ;color.c: 97:  I2C_2_Master_RepStart();
  4147  00546C  EC5C  F02D         	call	_I2C_2_Master_RepStart	;wreg free
  4148                           
  4149                           ;color.c: 98:  I2C_2_Master_Write(0x52 | 0x01);
  4150  005470  0E53               	movlw	83
  4151  005472  EC50  F02D         	call	_I2C_2_Master_Write
  4152                           
  4153                           ;color.c: 99:  tmp=I2C_2_Master_Read(1);
  4154  005476  0E01               	movlw	1
  4155  005478  EC13  F02B         	call	_I2C_2_Master_Read
  4156  00547C  6E07               	movwf	??_color_read_Red^0,c
  4157  00547E  5007               	movf	??_color_read_Red^0,w,c
  4158  005480  6E0A               	movwf	color_read_Red@tmp^0,c
  4159  005482  6A0B               	clrf	(color_read_Red@tmp+1)^0,c
  4160                           
  4161                           ;color.c: 100:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  4162  005484  0E00               	movlw	0
  4163  005486  EC13  F02B         	call	_I2C_2_Master_Read
  4164  00548A  6E07               	movwf	??_color_read_Red^0,c
  4165  00548C  5007               	movf	??_color_read_Red^0,w,c
  4166  00548E  6E09               	movwf	(??_color_read_Red+2)^0,c
  4167  005490  6A08               	clrf	(??_color_read_Red+1)^0,c
  4168  005492  500A               	movf	color_read_Red@tmp^0,w,c
  4169  005494  1008               	iorwf	(??_color_read_Red+1)^0,w,c
  4170  005496  6E0A               	movwf	color_read_Red@tmp^0,c
  4171  005498  500B               	movf	(color_read_Red@tmp+1)^0,w,c
  4172  00549A  1009               	iorwf	(??_color_read_Red+2)^0,w,c
  4173  00549C  6E0B               	movwf	(color_read_Red@tmp+1)^0,c
  4174                           
  4175                           ;color.c: 101:  I2C_2_Master_Stop();
  4176  00549E  EC61  F02D         	call	_I2C_2_Master_Stop	;wreg free
  4177  0054A2                     
  4178                           ;color.c: 102:  return tmp;
  4179  0054A2  C00A  F005         	movff	color_read_Red@tmp,?_color_read_Red
  4180  0054A6  C00B  F006         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  4181  0054AA  0012               	return		;funcret
  4182  0054AC                     __end_of_color_read_Red:
  4183                           	callstack 0
  4184                           
  4185 ;; *************** function _color_read_Green *****************
  4186 ;; Defined at:
  4187 ;;		line 119 in file "color.c"
  4188 ;; Parameters:    Size  Location     Type
  4189 ;;		None
  4190 ;; Auto vars:     Size  Location     Type
  4191 ;;  tmp             2    9[COMRAM] unsigned int 
  4192 ;; Return value:  Size  Location     Type
  4193 ;;                  2    4[COMRAM] unsigned int 
  4194 ;; Registers used:
  4195 ;;		wreg, status,2, status,0, cstack
  4196 ;; Tracked objects:
  4197 ;;		On entry : 0/0
  4198 ;;		On exit  : 0/0
  4199 ;;		Unchanged: 0/0
  4200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4201 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4202 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4203 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4204 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4205 ;;Total ram usage:        7 bytes
  4206 ;; Hardware stack levels used: 1
  4207 ;; Hardware stack levels required when called: 3
  4208 ;; This function calls:
  4209 ;;		_I2C_2_Master_Read
  4210 ;;		_I2C_2_Master_RepStart
  4211 ;;		_I2C_2_Master_Start
  4212 ;;		_I2C_2_Master_Stop
  4213 ;;		_I2C_2_Master_Write
  4214 ;; This function is called by:
  4215 ;;		_read_color
  4216 ;;		_calibrate_white
  4217 ;;		_distance_measure
  4218 ;; This function uses a non-reentrant model
  4219 ;;
  4220                           
  4221                           	psect	text11
  4222  0054AC                     __ptext11:
  4223                           	callstack 0
  4224  0054AC                     _color_read_Green:
  4225                           	callstack 24
  4226  0054AC                     
  4227                           ;color.c: 121:  unsigned int tmp;;color.c: 122:  I2C_2_Master_Start();
  4228  0054AC  EC66  F02D         	call	_I2C_2_Master_Start	;wreg free
  4229                           
  4230                           ;color.c: 123:  I2C_2_Master_Write(0x52 | 0x00);
  4231  0054B0  0E52               	movlw	82
  4232  0054B2  EC50  F02D         	call	_I2C_2_Master_Write
  4233                           
  4234                           ;color.c: 124:  I2C_2_Master_Write(0xA0 | 0x18);
  4235  0054B6  0EB8               	movlw	184
  4236  0054B8  EC50  F02D         	call	_I2C_2_Master_Write
  4237                           
  4238                           ;color.c: 125:  I2C_2_Master_RepStart();
  4239  0054BC  EC5C  F02D         	call	_I2C_2_Master_RepStart	;wreg free
  4240                           
  4241                           ;color.c: 126:  I2C_2_Master_Write(0x52 | 0x01);
  4242  0054C0  0E53               	movlw	83
  4243  0054C2  EC50  F02D         	call	_I2C_2_Master_Write
  4244                           
  4245                           ;color.c: 127:  tmp=I2C_2_Master_Read(1);
  4246  0054C6  0E01               	movlw	1
  4247  0054C8  EC13  F02B         	call	_I2C_2_Master_Read
  4248  0054CC  6E07               	movwf	??_color_read_Green^0,c
  4249  0054CE  5007               	movf	??_color_read_Green^0,w,c
  4250  0054D0  6E0A               	movwf	color_read_Green@tmp^0,c
  4251  0054D2  6A0B               	clrf	(color_read_Green@tmp+1)^0,c
  4252                           
  4253                           ;color.c: 128:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  4254  0054D4  0E00               	movlw	0
  4255  0054D6  EC13  F02B         	call	_I2C_2_Master_Read
  4256  0054DA  6E07               	movwf	??_color_read_Green^0,c
  4257  0054DC  5007               	movf	??_color_read_Green^0,w,c
  4258  0054DE  6E09               	movwf	(??_color_read_Green+2)^0,c
  4259  0054E0  6A08               	clrf	(??_color_read_Green+1)^0,c
  4260  0054E2  500A               	movf	color_read_Green@tmp^0,w,c
  4261  0054E4  1008               	iorwf	(??_color_read_Green+1)^0,w,c
  4262  0054E6  6E0A               	movwf	color_read_Green@tmp^0,c
  4263  0054E8  500B               	movf	(color_read_Green@tmp+1)^0,w,c
  4264  0054EA  1009               	iorwf	(??_color_read_Green+2)^0,w,c
  4265  0054EC  6E0B               	movwf	(color_read_Green@tmp+1)^0,c
  4266                           
  4267                           ;color.c: 129:  I2C_2_Master_Stop();
  4268  0054EE  EC61  F02D         	call	_I2C_2_Master_Stop	;wreg free
  4269  0054F2                     
  4270                           ;color.c: 130:  return tmp;
  4271  0054F2  C00A  F005         	movff	color_read_Green@tmp,?_color_read_Green
  4272  0054F6  C00B  F006         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  4273  0054FA  0012               	return		;funcret
  4274  0054FC                     __end_of_color_read_Green:
  4275                           	callstack 0
  4276                           
  4277 ;; *************** function _color_read_Blue *****************
  4278 ;; Defined at:
  4279 ;;		line 105 in file "color.c"
  4280 ;; Parameters:    Size  Location     Type
  4281 ;;		None
  4282 ;; Auto vars:     Size  Location     Type
  4283 ;;  tmp             2    9[COMRAM] unsigned int 
  4284 ;; Return value:  Size  Location     Type
  4285 ;;                  2    4[COMRAM] unsigned int 
  4286 ;; Registers used:
  4287 ;;		wreg, status,2, status,0, cstack
  4288 ;; Tracked objects:
  4289 ;;		On entry : 0/0
  4290 ;;		On exit  : 0/0
  4291 ;;		Unchanged: 0/0
  4292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4293 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4294 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4295 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4296 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4297 ;;Total ram usage:        7 bytes
  4298 ;; Hardware stack levels used: 1
  4299 ;; Hardware stack levels required when called: 3
  4300 ;; This function calls:
  4301 ;;		_I2C_2_Master_Read
  4302 ;;		_I2C_2_Master_RepStart
  4303 ;;		_I2C_2_Master_Start
  4304 ;;		_I2C_2_Master_Stop
  4305 ;;		_I2C_2_Master_Write
  4306 ;; This function is called by:
  4307 ;;		_read_color
  4308 ;;		_calibrate_white
  4309 ;; This function uses a non-reentrant model
  4310 ;;
  4311                           
  4312                           	psect	text12
  4313  0054FC                     __ptext12:
  4314                           	callstack 0
  4315  0054FC                     _color_read_Blue:
  4316                           	callstack 24
  4317  0054FC                     
  4318                           ;color.c: 107:  unsigned int tmp;;color.c: 108:  I2C_2_Master_Start();
  4319  0054FC  EC66  F02D         	call	_I2C_2_Master_Start	;wreg free
  4320                           
  4321                           ;color.c: 109:  I2C_2_Master_Write(0x52 | 0x00);
  4322  005500  0E52               	movlw	82
  4323  005502  EC50  F02D         	call	_I2C_2_Master_Write
  4324                           
  4325                           ;color.c: 110:  I2C_2_Master_Write(0xA0 | 0x1A);
  4326  005506  0EBA               	movlw	186
  4327  005508  EC50  F02D         	call	_I2C_2_Master_Write
  4328                           
  4329                           ;color.c: 111:  I2C_2_Master_RepStart();
  4330  00550C  EC5C  F02D         	call	_I2C_2_Master_RepStart	;wreg free
  4331                           
  4332                           ;color.c: 112:  I2C_2_Master_Write(0x52 | 0x01);
  4333  005510  0E53               	movlw	83
  4334  005512  EC50  F02D         	call	_I2C_2_Master_Write
  4335                           
  4336                           ;color.c: 113:  tmp=I2C_2_Master_Read(1);
  4337  005516  0E01               	movlw	1
  4338  005518  EC13  F02B         	call	_I2C_2_Master_Read
  4339  00551C  6E07               	movwf	??_color_read_Blue^0,c
  4340  00551E  5007               	movf	??_color_read_Blue^0,w,c
  4341  005520  6E0A               	movwf	color_read_Blue@tmp^0,c
  4342  005522  6A0B               	clrf	(color_read_Blue@tmp+1)^0,c
  4343                           
  4344                           ;color.c: 114:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  4345  005524  0E00               	movlw	0
  4346  005526  EC13  F02B         	call	_I2C_2_Master_Read
  4347  00552A  6E07               	movwf	??_color_read_Blue^0,c
  4348  00552C  5007               	movf	??_color_read_Blue^0,w,c
  4349  00552E  6E09               	movwf	(??_color_read_Blue+2)^0,c
  4350  005530  6A08               	clrf	(??_color_read_Blue+1)^0,c
  4351  005532  500A               	movf	color_read_Blue@tmp^0,w,c
  4352  005534  1008               	iorwf	(??_color_read_Blue+1)^0,w,c
  4353  005536  6E0A               	movwf	color_read_Blue@tmp^0,c
  4354  005538  500B               	movf	(color_read_Blue@tmp+1)^0,w,c
  4355  00553A  1009               	iorwf	(??_color_read_Blue+2)^0,w,c
  4356  00553C  6E0B               	movwf	(color_read_Blue@tmp+1)^0,c
  4357                           
  4358                           ;color.c: 115:  I2C_2_Master_Stop();
  4359  00553E  EC61  F02D         	call	_I2C_2_Master_Stop	;wreg free
  4360  005542                     
  4361                           ;color.c: 116:  return tmp;
  4362  005542  C00A  F005         	movff	color_read_Blue@tmp,?_color_read_Blue
  4363  005546  C00B  F006         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  4364  00554A  0012               	return		;funcret
  4365  00554C                     __end_of_color_read_Blue:
  4366                           	callstack 0
  4367                           
  4368 ;; *************** function _LED_R *****************
  4369 ;; Defined at:
  4370 ;;		line 164 in file "color.c"
  4371 ;; Parameters:    Size  Location     Type
  4372 ;;		None
  4373 ;; Auto vars:     Size  Location     Type
  4374 ;;		None
  4375 ;; Return value:  Size  Location     Type
  4376 ;;                  1    wreg      void 
  4377 ;; Registers used:
  4378 ;;		wreg
  4379 ;; Tracked objects:
  4380 ;;		On entry : 0/0
  4381 ;;		On exit  : 0/0
  4382 ;;		Unchanged: 0/0
  4383 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4384 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4385 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4386 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4387 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4388 ;;Total ram usage:        2 bytes
  4389 ;; Hardware stack levels used: 1
  4390 ;; Hardware stack levels required when called: 1
  4391 ;; This function calls:
  4392 ;;		Nothing
  4393 ;; This function is called by:
  4394 ;;		_color_data_collection
  4395 ;;		_calibrate_white
  4396 ;;		_detect_color
  4397 ;; This function uses a non-reentrant model
  4398 ;;
  4399                           
  4400                           	psect	text13
  4401  005956                     __ptext13:
  4402                           	callstack 0
  4403  005956                     _LED_R:
  4404                           	callstack 27
  4405  005956                     
  4406                           ;color.c: 166:     LATGbits.LATG1 = 1;
  4407  005956  827F               	bsf	127,1,c	;volatile
  4408                           
  4409                           ;color.c: 167:     LATFbits.LATF7 = 0;
  4410  005958  9E7E               	bcf	126,7,c	;volatile
  4411                           
  4412                           ;color.c: 168:     LATAbits.LATA4 = 0;
  4413  00595A  9879               	bcf	121,4,c	;volatile
  4414  00595C                     
  4415                           ;color.c: 169:     _delay((unsigned long)((200)*(64000000/4000.0)));
  4416  00595C  0E11               	movlw	17
  4417  00595E  6E02               	movwf	(??_LED_R+1)^0,c
  4418  005960  0E3C               	movlw	60
  4419  005962  6E01               	movwf	??_LED_R^0,c
  4420  005964  0ECB               	movlw	203
  4421  005966                     u5847:
  4422  005966  2EE8               	decfsz	wreg,f,c
  4423  005968  D7FE               	bra	u5847
  4424  00596A  2E01               	decfsz	??_LED_R^0,f,c
  4425  00596C  D7FC               	bra	u5847
  4426  00596E  2E02               	decfsz	(??_LED_R+1)^0,f,c
  4427  005970  D7FA               	bra	u5847
  4428  005972  F000               	nop	
  4429  005974  0012               	return		;funcret
  4430  005976                     __end_of_LED_R:
  4431                           	callstack 0
  4432                           
  4433 ;; *************** function _LED_OFF *****************
  4434 ;; Defined at:
  4435 ;;		line 155 in file "color.c"
  4436 ;; Parameters:    Size  Location     Type
  4437 ;;		None
  4438 ;; Auto vars:     Size  Location     Type
  4439 ;;		None
  4440 ;; Return value:  Size  Location     Type
  4441 ;;                  1    wreg      void 
  4442 ;; Registers used:
  4443 ;;		wreg
  4444 ;; Tracked objects:
  4445 ;;		On entry : 0/0
  4446 ;;		On exit  : 0/0
  4447 ;;		Unchanged: 0/0
  4448 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4449 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4450 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4451 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4452 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4453 ;;Total ram usage:        2 bytes
  4454 ;; Hardware stack levels used: 1
  4455 ;; Hardware stack levels required when called: 1
  4456 ;; This function calls:
  4457 ;;		Nothing
  4458 ;; This function is called by:
  4459 ;;		_calibrate_white
  4460 ;; This function uses a non-reentrant model
  4461 ;;
  4462                           
  4463                           	psect	text14
  4464  005976                     __ptext14:
  4465                           	callstack 0
  4466  005976                     _LED_OFF:
  4467                           	callstack 27
  4468  005976                     
  4469                           ;color.c: 157:     LATGbits.LATG1 = 0;
  4470  005976  927F               	bcf	127,1,c	;volatile
  4471                           
  4472                           ;color.c: 158:     LATFbits.LATF7 = 0;
  4473  005978  9E7E               	bcf	126,7,c	;volatile
  4474                           
  4475                           ;color.c: 159:     LATAbits.LATA4 = 0;
  4476  00597A  9879               	bcf	121,4,c	;volatile
  4477  00597C                     
  4478                           ;color.c: 160:     _delay((unsigned long)((200)*(64000000/4000.0)));
  4479  00597C  0E11               	movlw	17
  4480  00597E  6E02               	movwf	(??_LED_OFF+1)^0,c
  4481  005980  0E3C               	movlw	60
  4482  005982  6E01               	movwf	??_LED_OFF^0,c
  4483  005984  0ECB               	movlw	203
  4484  005986                     u5857:
  4485  005986  2EE8               	decfsz	wreg,f,c
  4486  005988  D7FE               	bra	u5857
  4487  00598A  2E01               	decfsz	??_LED_OFF^0,f,c
  4488  00598C  D7FC               	bra	u5857
  4489  00598E  2E02               	decfsz	(??_LED_OFF+1)^0,f,c
  4490  005990  D7FA               	bra	u5857
  4491  005992  F000               	nop	
  4492  005994  0012               	return		;funcret
  4493  005996                     __end_of_LED_OFF:
  4494                           	callstack 0
  4495                           
  4496 ;; *************** function _LED_G *****************
  4497 ;; Defined at:
  4498 ;;		line 191 in file "color.c"
  4499 ;; Parameters:    Size  Location     Type
  4500 ;;		None
  4501 ;; Auto vars:     Size  Location     Type
  4502 ;;		None
  4503 ;; Return value:  Size  Location     Type
  4504 ;;                  1    wreg      void 
  4505 ;; Registers used:
  4506 ;;		wreg
  4507 ;; Tracked objects:
  4508 ;;		On entry : 0/0
  4509 ;;		On exit  : 0/0
  4510 ;;		Unchanged: 0/0
  4511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4512 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4513 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4514 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4515 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4516 ;;Total ram usage:        2 bytes
  4517 ;; Hardware stack levels used: 1
  4518 ;; Hardware stack levels required when called: 1
  4519 ;; This function calls:
  4520 ;;		Nothing
  4521 ;; This function is called by:
  4522 ;;		_color_data_collection
  4523 ;;		_calibrate_white
  4524 ;;		_detect_color
  4525 ;; This function uses a non-reentrant model
  4526 ;;
  4527                           
  4528                           	psect	text15
  4529  005996                     __ptext15:
  4530                           	callstack 0
  4531  005996                     _LED_G:
  4532                           	callstack 27
  4533  005996                     
  4534                           ;color.c: 193:     LATGbits.LATG1 = 0;
  4535  005996  927F               	bcf	127,1,c	;volatile
  4536                           
  4537                           ;color.c: 194:     LATFbits.LATF7 = 0;
  4538  005998  9E7E               	bcf	126,7,c	;volatile
  4539                           
  4540                           ;color.c: 195:     LATAbits.LATA4 = 1;
  4541  00599A  8879               	bsf	121,4,c	;volatile
  4542  00599C                     
  4543                           ;color.c: 196:     _delay((unsigned long)((200)*(64000000/4000.0)));
  4544  00599C  0E11               	movlw	17
  4545  00599E  6E02               	movwf	(??_LED_G+1)^0,c
  4546  0059A0  0E3C               	movlw	60
  4547  0059A2  6E01               	movwf	??_LED_G^0,c
  4548  0059A4  0ECB               	movlw	203
  4549  0059A6                     u5867:
  4550  0059A6  2EE8               	decfsz	wreg,f,c
  4551  0059A8  D7FE               	bra	u5867
  4552  0059AA  2E01               	decfsz	??_LED_G^0,f,c
  4553  0059AC  D7FC               	bra	u5867
  4554  0059AE  2E02               	decfsz	(??_LED_G+1)^0,f,c
  4555  0059B0  D7FA               	bra	u5867
  4556  0059B2  F000               	nop	
  4557  0059B4  0012               	return		;funcret
  4558  0059B6                     __end_of_LED_G:
  4559                           	callstack 0
  4560                           
  4561 ;; *************** function _LED_B *****************
  4562 ;; Defined at:
  4563 ;;		line 182 in file "color.c"
  4564 ;; Parameters:    Size  Location     Type
  4565 ;;		None
  4566 ;; Auto vars:     Size  Location     Type
  4567 ;;		None
  4568 ;; Return value:  Size  Location     Type
  4569 ;;                  1    wreg      void 
  4570 ;; Registers used:
  4571 ;;		wreg
  4572 ;; Tracked objects:
  4573 ;;		On entry : 0/0
  4574 ;;		On exit  : 0/0
  4575 ;;		Unchanged: 0/0
  4576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4577 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4578 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4579 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4580 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4581 ;;Total ram usage:        2 bytes
  4582 ;; Hardware stack levels used: 1
  4583 ;; Hardware stack levels required when called: 1
  4584 ;; This function calls:
  4585 ;;		Nothing
  4586 ;; This function is called by:
  4587 ;;		_color_data_collection
  4588 ;;		_calibrate_white
  4589 ;;		_detect_color
  4590 ;; This function uses a non-reentrant model
  4591 ;;
  4592                           
  4593                           	psect	text16
  4594  0059B6                     __ptext16:
  4595                           	callstack 0
  4596  0059B6                     _LED_B:
  4597                           	callstack 27
  4598  0059B6                     
  4599                           ;color.c: 184:     LATGbits.LATG1 = 0;
  4600  0059B6  927F               	bcf	127,1,c	;volatile
  4601                           
  4602                           ;color.c: 185:     LATFbits.LATF7 = 1;
  4603  0059B8  8E7E               	bsf	126,7,c	;volatile
  4604                           
  4605                           ;color.c: 186:     LATAbits.LATA4 = 0;
  4606  0059BA  9879               	bcf	121,4,c	;volatile
  4607  0059BC                     
  4608                           ;color.c: 187:     _delay((unsigned long)((200)*(64000000/4000.0)));
  4609  0059BC  0E11               	movlw	17
  4610  0059BE  6E02               	movwf	(??_LED_B+1)^0,c
  4611  0059C0  0E3C               	movlw	60
  4612  0059C2  6E01               	movwf	??_LED_B^0,c
  4613  0059C4  0ECB               	movlw	203
  4614  0059C6                     u5877:
  4615  0059C6  2EE8               	decfsz	wreg,f,c
  4616  0059C8  D7FE               	bra	u5877
  4617  0059CA  2E01               	decfsz	??_LED_B^0,f,c
  4618  0059CC  D7FC               	bra	u5877
  4619  0059CE  2E02               	decfsz	(??_LED_B+1)^0,f,c
  4620  0059D0  D7FA               	bra	u5877
  4621  0059D2  F000               	nop	
  4622  0059D4  0012               	return		;funcret
  4623  0059D6                     __end_of_LED_B:
  4624                           	callstack 0
  4625                           
  4626 ;; *************** function _amb_light_measure *****************
  4627 ;; Defined at:
  4628 ;;		line 378 in file "color.c"
  4629 ;; Parameters:    Size  Location     Type
  4630 ;;  amb             2   10[BANK0 ] PTR struct color_rgb
  4631 ;;		 -> main@rgb(8), main@amb(8), 
  4632 ;; Auto vars:     Size  Location     Type
  4633 ;;  CC_amb_3        2   22[BANK0 ] unsigned int 
  4634 ;;  CC_amb_2        2   20[BANK0 ] unsigned int 
  4635 ;;  CC_amb_1        2   18[BANK0 ] unsigned int 
  4636 ;;  CC_amb_ave      2   16[BANK0 ] unsigned int 
  4637 ;;  upper_bound     2   14[BANK0 ] unsigned int 
  4638 ;; Return value:  Size  Location     Type
  4639 ;;                  2   10[BANK0 ] unsigned int 
  4640 ;; Registers used:
  4641 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4642 ;; Tracked objects:
  4643 ;;		On entry : 0/0
  4644 ;;		On exit  : 0/0
  4645 ;;		Unchanged: 0/0
  4646 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4647 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4648 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4649 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4650 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4651 ;;Total ram usage:       14 bytes
  4652 ;; Hardware stack levels used: 1
  4653 ;; Hardware stack levels required when called: 5
  4654 ;; This function calls:
  4655 ;;		_LED_C
  4656 ;;		___fldiv
  4657 ;;		___xxtofl
  4658 ;;		_color_read_Clear
  4659 ;;		_lroundf
  4660 ;;		_toggle_light
  4661 ;; This function is called by:
  4662 ;;		_main
  4663 ;;		_test_function
  4664 ;; This function uses a non-reentrant model
  4665 ;;
  4666                           
  4667                           	psect	text17
  4668  00474C                     __ptext17:
  4669                           	callstack 0
  4670  00474C                     _amb_light_measure:
  4671                           	callstack 24
  4672  00474C  0E00               	movlw	0
  4673  00474E  0100               	movlb	0	; () banked
  4674  004750  6F75               	movwf	(amb_light_measure@CC_amb_2+1)& (0+255),b
  4675  004752  0E00               	movlw	0
  4676  004754  6F74               	movwf	amb_light_measure@CC_amb_2& (0+255),b
  4677  004756  0E00               	movlw	0
  4678  004758  6F77               	movwf	(amb_light_measure@CC_amb_3+1)& (0+255),b
  4679  00475A  0E00               	movlw	0
  4680  00475C  6F76               	movwf	amb_light_measure@CC_amb_3& (0+255),b
  4681  00475E  0E00               	movlw	0
  4682  004760  6F6F               	movwf	(amb_light_measure@upper_bound+1)& (0+255),b
  4683  004762  0E00               	movlw	0
  4684  004764  6F6E               	movwf	amb_light_measure@upper_bound& (0+255),b
  4685  004766                     
  4686                           ; BSR set to: 0
  4687                           ;color.c: 381:     toggle_light(2,2);
  4688  004766  0E02               	movlw	2
  4689  004768  6E01               	movwf	toggle_light@toggletime^0,c
  4690  00476A  0E02               	movlw	2
  4691  00476C  EC19  F01A         	call	_toggle_light
  4692  004770                     
  4693                           ;color.c: 382:     LED_C();
  4694  004770  ECEB  F02C         	call	_LED_C	;wreg free
  4695  004774                     
  4696                           ;color.c: 383:     _delay((unsigned long)((500)*(64000000/4000.0)));
  4697  004774  0E29               	movlw	41
  4698  004776  0100               	movlb	0	; () banked
  4699  004778  6F6D               	movwf	(??_amb_light_measure+1)& (0+255),b
  4700  00477A  0E96               	movlw	150
  4701  00477C  6F6C               	movwf	??_amb_light_measure& (0+255),b
  4702  00477E  0E7F               	movlw	127
  4703  004780                     u5887:
  4704  004780  2EE8               	decfsz	wreg,f,c
  4705  004782  D7FE               	bra	u5887
  4706  004784  2F6C               	decfsz	??_amb_light_measure& (0+255),f,b
  4707  004786  D7FC               	bra	u5887
  4708  004788  2F6D               	decfsz	(??_amb_light_measure+1)& (0+255),f,b
  4709  00478A  D7FA               	bra	u5887
  4710  00478C                     
  4711                           ;color.c: 385:     CC_amb_1 = color_read_Clear();
  4712  00478C  ECA6  F02A         	call	_color_read_Clear	;wreg free
  4713  004790  C005  F072         	movff	?_color_read_Clear,amb_light_measure@CC_amb_1
  4714  004794  C006  F073         	movff	?_color_read_Clear+1,amb_light_measure@CC_amb_1+1
  4715  004798                     
  4716                           ;color.c: 386:     _delay((unsigned long)((200)*(64000000/4000.0)));
  4717  004798  0E11               	movlw	17
  4718  00479A  0100               	movlb	0	; () banked
  4719  00479C  6F6D               	movwf	(??_amb_light_measure+1)& (0+255),b
  4720  00479E  0E3C               	movlw	60
  4721  0047A0  6F6C               	movwf	??_amb_light_measure& (0+255),b
  4722  0047A2  0ECB               	movlw	203
  4723  0047A4                     u5897:
  4724  0047A4  2EE8               	decfsz	wreg,f,c
  4725  0047A6  D7FE               	bra	u5897
  4726  0047A8  2F6C               	decfsz	??_amb_light_measure& (0+255),f,b
  4727  0047AA  D7FC               	bra	u5897
  4728  0047AC  2F6D               	decfsz	(??_amb_light_measure+1)& (0+255),f,b
  4729  0047AE  D7FA               	bra	u5897
  4730  0047B0                     
  4731                           ;color.c: 388:     CC_amb_2 = color_read_Clear();
  4732  0047B0  ECA6  F02A         	call	_color_read_Clear	;wreg free
  4733  0047B4  C005  F074         	movff	?_color_read_Clear,amb_light_measure@CC_amb_2
  4734  0047B8  C006  F075         	movff	?_color_read_Clear+1,amb_light_measure@CC_amb_2+1
  4735  0047BC                     
  4736                           ;color.c: 389:     _delay((unsigned long)((200)*(64000000/4000.0)));
  4737  0047BC  0E11               	movlw	17
  4738  0047BE  0100               	movlb	0	; () banked
  4739  0047C0  6F6D               	movwf	(??_amb_light_measure+1)& (0+255),b
  4740  0047C2  0E3C               	movlw	60
  4741  0047C4  6F6C               	movwf	??_amb_light_measure& (0+255),b
  4742  0047C6  0ECB               	movlw	203
  4743  0047C8                     u5907:
  4744  0047C8  2EE8               	decfsz	wreg,f,c
  4745  0047CA  D7FE               	bra	u5907
  4746  0047CC  2F6C               	decfsz	??_amb_light_measure& (0+255),f,b
  4747  0047CE  D7FC               	bra	u5907
  4748  0047D0  2F6D               	decfsz	(??_amb_light_measure+1)& (0+255),f,b
  4749  0047D2  D7FA               	bra	u5907
  4750  0047D4                     
  4751                           ;color.c: 391:     CC_amb_3 = color_read_Clear();
  4752  0047D4  ECA6  F02A         	call	_color_read_Clear	;wreg free
  4753  0047D8  C005  F076         	movff	?_color_read_Clear,amb_light_measure@CC_amb_3
  4754  0047DC  C006  F077         	movff	?_color_read_Clear+1,amb_light_measure@CC_amb_3+1
  4755  0047E0                     
  4756                           ;color.c: 392:     _delay((unsigned long)((200)*(64000000/4000.0)));
  4757  0047E0  0E11               	movlw	17
  4758  0047E2  0100               	movlb	0	; () banked
  4759  0047E4  6F6D               	movwf	(??_amb_light_measure+1)& (0+255),b
  4760  0047E6  0E3C               	movlw	60
  4761  0047E8  6F6C               	movwf	??_amb_light_measure& (0+255),b
  4762  0047EA  0ECB               	movlw	203
  4763  0047EC                     u5917:
  4764  0047EC  2EE8               	decfsz	wreg,f,c
  4765  0047EE  D7FE               	bra	u5917
  4766  0047F0  2F6C               	decfsz	??_amb_light_measure& (0+255),f,b
  4767  0047F2  D7FC               	bra	u5917
  4768  0047F4  2F6D               	decfsz	(??_amb_light_measure+1)& (0+255),f,b
  4769  0047F6  D7FA               	bra	u5917
  4770  0047F8                     
  4771                           ;color.c: 394:     CC_amb_ave = lroundf((float)(CC_amb_1 + CC_amb_2 + CC_amb_3)/3);
  4772  0047F8  0100               	movlb	0	; () banked
  4773  0047FA  5174               	movf	amb_light_measure@CC_amb_2& (0+255),w,b
  4774  0047FC  2572               	addwf	amb_light_measure@CC_amb_1& (0+255),w,b
  4775  0047FE  6F6C               	movwf	??_amb_light_measure& (0+255),b
  4776  004800  5175               	movf	(amb_light_measure@CC_amb_2+1)& (0+255),w,b
  4777  004802  2173               	addwfc	(amb_light_measure@CC_amb_1+1)& (0+255),w,b
  4778  004804  6F6D               	movwf	(??_amb_light_measure+1)& (0+255),b
  4779  004806  5176               	movf	amb_light_measure@CC_amb_3& (0+255),w,b
  4780  004808  276C               	addwf	??_amb_light_measure& (0+255),f,b
  4781  00480A  5177               	movf	(amb_light_measure@CC_amb_3+1)& (0+255),w,b
  4782  00480C  236D               	addwfc	(??_amb_light_measure+1)& (0+255),f,b
  4783  00480E  C06C  F001         	movff	??_amb_light_measure,___xxtofl@val
  4784  004812  C06D  F002         	movff	??_amb_light_measure+1,___xxtofl@val+1
  4785  004816  6A03               	clrf	(___xxtofl@val+2)^0,c
  4786  004818  6A04               	clrf	(___xxtofl@val+3)^0,c
  4787  00481A  0E00               	movlw	0
  4788  00481C  EC5E  F01D         	call	___xxtofl
  4789  004820  C001  F00F         	movff	?___xxtofl,___fldiv@b
  4790  004824  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  4791  004828  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  4792  00482C  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  4793  004830  0E00               	movlw	0
  4794  004832  6E13               	movwf	___fldiv@a^0,c
  4795  004834  0E00               	movlw	0
  4796  004836  6E14               	movwf	(___fldiv@a+1)^0,c
  4797  004838  0E40               	movlw	64
  4798  00483A  6E15               	movwf	(___fldiv@a+2)^0,c
  4799  00483C  0E40               	movlw	64
  4800  00483E  6E16               	movwf	(___fldiv@a+3)^0,c
  4801  004840  ECA1  F013         	call	___fldiv	;wreg free
  4802  004844  C00F  F066         	movff	?___fldiv,lroundf@x
  4803  004848  C010  F067         	movff	?___fldiv+1,lroundf@x+1
  4804  00484C  C011  F068         	movff	?___fldiv+2,lroundf@x+2
  4805  004850  C012  F069         	movff	?___fldiv+3,lroundf@x+3
  4806  004854  ECD2  F02B         	call	_lroundf	;wreg free
  4807  004858  C066  F070         	movff	?_lroundf,amb_light_measure@CC_amb_ave
  4808  00485C  C067  F071         	movff	?_lroundf+1,amb_light_measure@CC_amb_ave+1
  4809  004860                     
  4810                           ;color.c: 396:     toggle_light(2,2);
  4811  004860  0E02               	movlw	2
  4812  004862  6E01               	movwf	toggle_light@toggletime^0,c
  4813  004864  0E02               	movlw	2
  4814  004866  EC19  F01A         	call	_toggle_light
  4815  00486A                     
  4816                           ;color.c: 398:     return CC_amb_ave;
  4817  00486A  C070  F06A         	movff	amb_light_measure@CC_amb_ave,?_amb_light_measure
  4818  00486E  C071  F06B         	movff	amb_light_measure@CC_amb_ave+1,?_amb_light_measure+1
  4819  004872  0012               	return		;funcret
  4820  004874                     __end_of_amb_light_measure:
  4821                           	callstack 0
  4822                           
  4823 ;; *************** function _lroundf *****************
  4824 ;; Defined at:
  4825 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\lroundf.c"
  4826 ;; Parameters:    Size  Location     Type
  4827 ;;  x               4    6[BANK0 ] float 
  4828 ;; Auto vars:     Size  Location     Type
  4829 ;;		None
  4830 ;; Return value:  Size  Location     Type
  4831 ;;                  4    6[BANK0 ] long 
  4832 ;; Registers used:
  4833 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4834 ;; Tracked objects:
  4835 ;;		On entry : 0/0
  4836 ;;		On exit  : 0/0
  4837 ;;		Unchanged: 0/0
  4838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4839 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4840 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4841 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4842 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4843 ;;Total ram usage:        4 bytes
  4844 ;; Hardware stack levels used: 1
  4845 ;; Hardware stack levels required when called: 4
  4846 ;; This function calls:
  4847 ;;		___fltol
  4848 ;;		_roundf
  4849 ;; This function is called by:
  4850 ;;		_detect_color
  4851 ;;		_amb_light_measure
  4852 ;;		_distance_measure
  4853 ;;		_check_color_reading
  4854 ;; This function uses a non-reentrant model
  4855 ;;
  4856                           
  4857                           	psect	text18
  4858  0057A4                     __ptext18:
  4859                           	callstack 0
  4860  0057A4                     _lroundf:
  4861                           	callstack 24
  4862  0057A4  C066  F041         	movff	lroundf@x,roundf@x
  4863  0057A8  C067  F042         	movff	lroundf@x+1,roundf@x+1
  4864  0057AC  C068  F043         	movff	lroundf@x+2,roundf@x+2
  4865  0057B0  C069  F044         	movff	lroundf@x+3,roundf@x+3
  4866  0057B4  ECCA  F011         	call	_roundf	;wreg free
  4867  0057B8  C041  F05B         	movff	?_roundf,___fltol@f1
  4868  0057BC  C042  F05C         	movff	?_roundf+1,___fltol@f1+1
  4869  0057C0  C043  F05D         	movff	?_roundf+2,___fltol@f1+2
  4870  0057C4  C044  F05E         	movff	?_roundf+3,___fltol@f1+3
  4871  0057C8  EC3A  F024         	call	___fltol	;wreg free
  4872  0057CC  C05B  F066         	movff	?___fltol,?_lroundf
  4873  0057D0  C05C  F067         	movff	?___fltol+1,?_lroundf+1
  4874  0057D4  C05D  F068         	movff	?___fltol+2,?_lroundf+2
  4875  0057D8  C05E  F069         	movff	?___fltol+3,?_lroundf+3
  4876  0057DC  0012               	return		;funcret
  4877  0057DE                     __end_of_lroundf:
  4878                           	callstack 0
  4879                           
  4880 ;; *************** function _roundf *****************
  4881 ;; Defined at:
  4882 ;;		line 12 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\roundf.c"
  4883 ;; Parameters:    Size  Location     Type
  4884 ;;  x               4   64[COMRAM] float 
  4885 ;; Auto vars:     Size  Location     Type
  4886 ;;  y               4   86[COMRAM] float 
  4887 ;;  u               4   82[COMRAM] struct .
  4888 ;;  e               2   76[COMRAM] int 
  4889 ;; Return value:  Size  Location     Type
  4890 ;;                  4   64[COMRAM] float 
  4891 ;; Registers used:
  4892 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4893 ;; Tracked objects:
  4894 ;;		On entry : 0/0
  4895 ;;		On exit  : 0/0
  4896 ;;		Unchanged: 0/0
  4897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4898 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4899 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4900 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4901 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4902 ;;Total ram usage:       26 bytes
  4903 ;; Hardware stack levels used: 1
  4904 ;; Hardware stack levels required when called: 3
  4905 ;; This function calls:
  4906 ;;		___fladd
  4907 ;;		___flge
  4908 ;;		___flmul
  4909 ;;		___flneg
  4910 ;;		___flsub
  4911 ;; This function is called by:
  4912 ;;		_lroundf
  4913 ;; This function uses a non-reentrant model
  4914 ;;
  4915                           
  4916                           	psect	text19
  4917  002394                     __ptext19:
  4918                           	callstack 0
  4919  002394                     _roundf:
  4920                           	callstack 24
  4921  002394  C2DD  F053         	movff	roundf@F527,roundf@u
  4922  002398  C2DE  F054         	movff	roundf@F527+1,roundf@u+1
  4923  00239C  C2DF  F055         	movff	roundf@F527+2,roundf@u+2
  4924  0023A0  C2E0  F056         	movff	roundf@F527+3,roundf@u+3
  4925  0023A4  C041  F053         	movff	roundf@x,roundf@u
  4926  0023A8  C042  F054         	movff	roundf@x+1,roundf@u+1
  4927  0023AC  C043  F055         	movff	roundf@x+2,roundf@u+2
  4928  0023B0  C044  F056         	movff	roundf@x+3,roundf@u+3
  4929  0023B4  C053  F045         	movff	roundf@u,??_roundf
  4930  0023B8  C054  F046         	movff	roundf@u+1,??_roundf+1
  4931  0023BC  C055  F047         	movff	roundf@u+2,??_roundf+2
  4932  0023C0  C056  F048         	movff	roundf@u+3,??_roundf+3
  4933  0023C4  0E18               	movlw	24
  4934  0023C6  EFEA  F011         	goto	u4210
  4935  0023CA                     u4215:
  4936  0023CA  90D8               	bcf	status,0,c
  4937  0023CC  3248               	rrcf	(??_roundf+3)^0,f,c
  4938  0023CE  3247               	rrcf	(??_roundf+2)^0,f,c
  4939  0023D0  3246               	rrcf	(??_roundf+1)^0,f,c
  4940  0023D2  3245               	rrcf	??_roundf^0,f,c
  4941  0023D4                     u4210:
  4942  0023D4  2EE8               	decfsz	wreg,f,c
  4943  0023D6  EFE5  F011         	goto	u4215
  4944  0023DA  5045               	movf	??_roundf^0,w,c
  4945  0023DC  6E4D               	movwf	roundf@e^0,c
  4946  0023DE  6A4E               	clrf	(roundf@e+1)^0,c
  4947  0023E0  BE4E               	btfsc	(roundf@e+1)^0,7,c
  4948  0023E2  EFFC  F011         	goto	u4221
  4949  0023E6  504E               	movf	(roundf@e+1)^0,w,c
  4950  0023E8  E109               	bnz	u4220
  4951  0023EA  0E96               	movlw	150
  4952  0023EC  5C4D               	subwf	roundf@e^0,w,c
  4953  0023EE  A0D8               	btfss	status,0,c
  4954  0023F0  EFFC  F011         	goto	u4221
  4955  0023F4  EFFE  F011         	goto	u4220
  4956  0023F8                     u4221:
  4957  0023F8  EF08  F012         	goto	l4498
  4958  0023FC                     u4220:
  4959  0023FC  C041  F041         	movff	roundf@x,?_roundf
  4960  002400  C042  F042         	movff	roundf@x+1,?_roundf+1
  4961  002404  C043  F043         	movff	roundf@x+2,?_roundf+2
  4962  002408  C044  F044         	movff	roundf@x+3,?_roundf+3
  4963  00240C  EFA0  F013         	goto	l1587
  4964  002410                     l4498:
  4965  002410  C053  F045         	movff	roundf@u,??_roundf
  4966  002414  C054  F046         	movff	roundf@u+1,??_roundf+1
  4967  002418  C055  F047         	movff	roundf@u+2,??_roundf+2
  4968  00241C  C056  F048         	movff	roundf@u+3,??_roundf+3
  4969  002420  0E20               	movlw	32
  4970  002422  EF18  F012         	goto	u4230
  4971  002426                     u4235:
  4972  002426  90D8               	bcf	status,0,c
  4973  002428  3248               	rrcf	(??_roundf+3)^0,f,c
  4974  00242A  3247               	rrcf	(??_roundf+2)^0,f,c
  4975  00242C  3246               	rrcf	(??_roundf+1)^0,f,c
  4976  00242E  3245               	rrcf	??_roundf^0,f,c
  4977  002430                     u4230:
  4978  002430  2EE8               	decfsz	wreg,f,c
  4979  002432  EF13  F012         	goto	u4235
  4980  002436  5045               	movf	??_roundf^0,w,c
  4981  002438  1046               	iorwf	(??_roundf+1)^0,w,c
  4982  00243A  1047               	iorwf	(??_roundf+2)^0,w,c
  4983  00243C  1048               	iorwf	(??_roundf+3)^0,w,c
  4984  00243E  B4D8               	btfsc	status,2,c
  4985  002440  EF24  F012         	goto	u4241
  4986  002444  EF26  F012         	goto	u4240
  4987  002448                     u4241:
  4988  002448  EF38  F012         	goto	l4502
  4989  00244C                     u4240:
  4990  00244C  C041  F001         	movff	roundf@x,___flneg@f1
  4991  002450  C042  F002         	movff	roundf@x+1,___flneg@f1+1
  4992  002454  C043  F003         	movff	roundf@x+2,___flneg@f1+2
  4993  002458  C044  F004         	movff	roundf@x+3,___flneg@f1+3
  4994  00245C  ECEF  F02B         	call	___flneg	;wreg free
  4995  002460  C001  F041         	movff	?___flneg,roundf@x
  4996  002464  C002  F042         	movff	?___flneg+1,roundf@x+1
  4997  002468  C003  F043         	movff	?___flneg+2,roundf@x+2
  4998  00246C  C004  F044         	movff	?___flneg+3,roundf@x+3
  4999  002470                     l4502:
  5000  002470  BE4E               	btfsc	(roundf@e+1)^0,7,c
  5001  002472  EF46  F012         	goto	u4250
  5002  002476  504E               	movf	(roundf@e+1)^0,w,c
  5003  002478  E107               	bnz	u4251
  5004  00247A  0E7E               	movlw	126
  5005  00247C  5C4D               	subwf	roundf@e^0,w,c
  5006  00247E  B0D8               	btfsc	status,0,c
  5007  002480  EF44  F012         	goto	u4251
  5008  002484  EF46  F012         	goto	u4250
  5009  002488                     u4251:
  5010  002488  EF62  F012         	goto	l4508
  5011  00248C                     u4250:
  5012  00248C  C053  F028         	movff	roundf@u,___flmul@b
  5013  002490  C054  F029         	movff	roundf@u+1,___flmul@b+1
  5014  002494  C055  F02A         	movff	roundf@u+2,___flmul@b+2
  5015  002498  C056  F02B         	movff	roundf@u+3,___flmul@b+3
  5016  00249C  0E00               	movlw	0
  5017  00249E  6E2C               	movwf	___flmul@a^0,c
  5018  0024A0  0E00               	movlw	0
  5019  0024A2  6E2D               	movwf	(___flmul@a+1)^0,c
  5020  0024A4  0E00               	movlw	0
  5021  0024A6  6E2E               	movwf	(___flmul@a+2)^0,c
  5022  0024A8  0E00               	movlw	0
  5023  0024AA  6E2F               	movwf	(___flmul@a+3)^0,c
  5024  0024AC  ECB5  F00F         	call	___flmul	;wreg free
  5025  0024B0  C028  F041         	movff	?___flmul,?_roundf
  5026  0024B4  C029  F042         	movff	?___flmul+1,?_roundf+1
  5027  0024B8  C02A  F043         	movff	?___flmul+2,?_roundf+2
  5028  0024BC  C02B  F044         	movff	?___flmul+3,?_roundf+3
  5029  0024C0  EFA0  F013         	goto	l1587
  5030  0024C4                     l4508:
  5031  0024C4  0E00               	movlw	0
  5032  0024C6  6E05               	movwf	___fladd@a^0,c
  5033  0024C8  0E00               	movlw	0
  5034  0024CA  6E06               	movwf	(___fladd@a+1)^0,c
  5035  0024CC  0E00               	movlw	0
  5036  0024CE  6E07               	movwf	(___fladd@a+2)^0,c
  5037  0024D0  0E4B               	movlw	75
  5038  0024D2  6E08               	movwf	(___fladd@a+3)^0,c
  5039  0024D4  C041  F001         	movff	roundf@x,___fladd@b
  5040  0024D8  C042  F002         	movff	roundf@x+1,___fladd@b+1
  5041  0024DC  C043  F003         	movff	roundf@x+2,___fladd@b+2
  5042  0024E0  C044  F004         	movff	roundf@x+3,___fladd@b+3
  5043  0024E4  EC55  F00D         	call	___fladd	;wreg free
  5044  0024E8  C001  F04F         	movff	?___fladd,_roundf$3278
  5045  0024EC  C002  F050         	movff	?___fladd+1,_roundf$3278+1
  5046  0024F0  C003  F051         	movff	?___fladd+2,_roundf$3278+2
  5047  0024F4  C004  F052         	movff	?___fladd+3,_roundf$3278+3
  5048  0024F8  0E00               	movlw	0
  5049  0024FA  6E05               	movwf	___fladd@a^0,c
  5050  0024FC  0E00               	movlw	0
  5051  0024FE  6E06               	movwf	(___fladd@a+1)^0,c
  5052  002500  0E00               	movlw	0
  5053  002502  6E07               	movwf	(___fladd@a+2)^0,c
  5054  002504  0ECB               	movlw	203
  5055  002506  6E08               	movwf	(___fladd@a+3)^0,c
  5056  002508  C04F  F001         	movff	_roundf$3278,___fladd@b
  5057  00250C  C050  F002         	movff	_roundf$3278+1,___fladd@b+1
  5058  002510  C051  F003         	movff	_roundf$3278+2,___fladd@b+2
  5059  002514  C052  F004         	movff	_roundf$3278+3,___fladd@b+3
  5060  002518  EC55  F00D         	call	___fladd	;wreg free
  5061  00251C  C001  F049         	movff	?___fladd,_roundf$3279
  5062  002520  C002  F04A         	movff	?___fladd+1,_roundf$3279+1
  5063  002524  C003  F04B         	movff	?___fladd+2,_roundf$3279+2
  5064  002528  C004  F04C         	movff	?___fladd+3,_roundf$3279+3
  5065  00252C  C049  F011         	movff	_roundf$3279,___flsub@b
  5066  002530  C04A  F012         	movff	_roundf$3279+1,___flsub@b+1
  5067  002534  C04B  F013         	movff	_roundf$3279+2,___flsub@b+2
  5068  002538  C04C  F014         	movff	_roundf$3279+3,___flsub@b+3
  5069  00253C  C041  F015         	movff	roundf@x,___flsub@a
  5070  002540  C042  F016         	movff	roundf@x+1,___flsub@a+1
  5071  002544  C043  F017         	movff	roundf@x+2,___flsub@a+2
  5072  002548  C044  F018         	movff	roundf@x+3,___flsub@a+3
  5073  00254C  ECCE  F02A         	call	___flsub	;wreg free
  5074  002550  C011  F057         	movff	?___flsub,roundf@y
  5075  002554  C012  F058         	movff	?___flsub+1,roundf@y+1
  5076  002558  C013  F059         	movff	?___flsub+2,roundf@y+2
  5077  00255C  C014  F05A         	movff	?___flsub+3,roundf@y+3
  5078  002560  0E00               	movlw	0
  5079  002562  6E01               	movwf	___flge@ff1^0,c
  5080  002564  0E00               	movlw	0
  5081  002566  6E02               	movwf	(___flge@ff1+1)^0,c
  5082  002568  0E00               	movlw	0
  5083  00256A  6E03               	movwf	(___flge@ff1+2)^0,c
  5084  00256C  0E3F               	movlw	63
  5085  00256E  6E04               	movwf	(___flge@ff1+3)^0,c
  5086  002570  C057  F005         	movff	roundf@y,___flge@ff2
  5087  002574  C058  F006         	movff	roundf@y+1,___flge@ff2+1
  5088  002578  C059  F007         	movff	roundf@y+2,___flge@ff2+2
  5089  00257C  C05A  F008         	movff	roundf@y+3,___flge@ff2+3
  5090  002580  ECBE  F024         	call	___flge	;wreg free
  5091  002584  B0D8               	btfsc	status,0,c
  5092  002586  EFC7  F012         	goto	u4261
  5093  00258A  EFC9  F012         	goto	u4260
  5094  00258E                     u4261:
  5095  00258E  EFFF  F012         	goto	l4512
  5096  002592                     u4260:
  5097  002592  C041  F005         	movff	roundf@x,___fladd@a
  5098  002596  C042  F006         	movff	roundf@x+1,___fladd@a+1
  5099  00259A  C043  F007         	movff	roundf@x+2,___fladd@a+2
  5100  00259E  C044  F008         	movff	roundf@x+3,___fladd@a+3
  5101  0025A2  C057  F001         	movff	roundf@y,___fladd@b
  5102  0025A6  C058  F002         	movff	roundf@y+1,___fladd@b+1
  5103  0025AA  C059  F003         	movff	roundf@y+2,___fladd@b+2
  5104  0025AE  C05A  F004         	movff	roundf@y+3,___fladd@b+3
  5105  0025B2  EC55  F00D         	call	___fladd	;wreg free
  5106  0025B6  C001  F04F         	movff	?___fladd,_roundf$3278
  5107  0025BA  C002  F050         	movff	?___fladd+1,_roundf$3278+1
  5108  0025BE  C003  F051         	movff	?___fladd+2,_roundf$3278+2
  5109  0025C2  C004  F052         	movff	?___fladd+3,_roundf$3278+3
  5110  0025C6  C04F  F001         	movff	_roundf$3278,___fladd@b
  5111  0025CA  C050  F002         	movff	_roundf$3278+1,___fladd@b+1
  5112  0025CE  C051  F003         	movff	_roundf$3278+2,___fladd@b+2
  5113  0025D2  C052  F004         	movff	_roundf$3278+3,___fladd@b+3
  5114  0025D6  0E00               	movlw	0
  5115  0025D8  6E05               	movwf	___fladd@a^0,c
  5116  0025DA  0E00               	movlw	0
  5117  0025DC  6E06               	movwf	(___fladd@a+1)^0,c
  5118  0025DE  0E80               	movlw	128
  5119  0025E0  6E07               	movwf	(___fladd@a+2)^0,c
  5120  0025E2  0EBF               	movlw	191
  5121  0025E4  6E08               	movwf	(___fladd@a+3)^0,c
  5122  0025E6  EC55  F00D         	call	___fladd	;wreg free
  5123  0025EA  C001  F057         	movff	?___fladd,roundf@y
  5124  0025EE  C002  F058         	movff	?___fladd+1,roundf@y+1
  5125  0025F2  C003  F059         	movff	?___fladd+2,roundf@y+2
  5126  0025F6  C004  F05A         	movff	?___fladd+3,roundf@y+3
  5127  0025FA  EF68  F013         	goto	l4518
  5128  0025FE                     l4512:
  5129  0025FE  0E00               	movlw	0
  5130  002600  6E01               	movwf	___flge@ff1^0,c
  5131  002602  0E00               	movlw	0
  5132  002604  6E02               	movwf	(___flge@ff1+1)^0,c
  5133  002606  0E00               	movlw	0
  5134  002608  6E03               	movwf	(___flge@ff1+2)^0,c
  5135  00260A  0EBF               	movlw	191
  5136  00260C  6E04               	movwf	(___flge@ff1+3)^0,c
  5137  00260E  C057  F005         	movff	roundf@y,___flge@ff2
  5138  002612  C058  F006         	movff	roundf@y+1,___flge@ff2+1
  5139  002616  C059  F007         	movff	roundf@y+2,___flge@ff2+2
  5140  00261A  C05A  F008         	movff	roundf@y+3,___flge@ff2+3
  5141  00261E  ECBE  F024         	call	___flge	;wreg free
  5142  002622  A0D8               	btfss	status,0,c
  5143  002624  EF16  F013         	goto	u4271
  5144  002628  EF18  F013         	goto	u4270
  5145  00262C                     u4271:
  5146  00262C  EF4E  F013         	goto	l4516
  5147  002630                     u4270:
  5148  002630  C041  F005         	movff	roundf@x,___fladd@a
  5149  002634  C042  F006         	movff	roundf@x+1,___fladd@a+1
  5150  002638  C043  F007         	movff	roundf@x+2,___fladd@a+2
  5151  00263C  C044  F008         	movff	roundf@x+3,___fladd@a+3
  5152  002640  C057  F001         	movff	roundf@y,___fladd@b
  5153  002644  C058  F002         	movff	roundf@y+1,___fladd@b+1
  5154  002648  C059  F003         	movff	roundf@y+2,___fladd@b+2
  5155  00264C  C05A  F004         	movff	roundf@y+3,___fladd@b+3
  5156  002650  EC55  F00D         	call	___fladd	;wreg free
  5157  002654  C001  F04F         	movff	?___fladd,_roundf$3278
  5158  002658  C002  F050         	movff	?___fladd+1,_roundf$3278+1
  5159  00265C  C003  F051         	movff	?___fladd+2,_roundf$3278+2
  5160  002660  C004  F052         	movff	?___fladd+3,_roundf$3278+3
  5161  002664  C04F  F001         	movff	_roundf$3278,___fladd@b
  5162  002668  C050  F002         	movff	_roundf$3278+1,___fladd@b+1
  5163  00266C  C051  F003         	movff	_roundf$3278+2,___fladd@b+2
  5164  002670  C052  F004         	movff	_roundf$3278+3,___fladd@b+3
  5165  002674  0E00               	movlw	0
  5166  002676  6E05               	movwf	___fladd@a^0,c
  5167  002678  0E00               	movlw	0
  5168  00267A  6E06               	movwf	(___fladd@a+1)^0,c
  5169  00267C  0E80               	movlw	128
  5170  00267E  6E07               	movwf	(___fladd@a+2)^0,c
  5171  002680  0E3F               	movlw	63
  5172  002682  6E08               	movwf	(___fladd@a+3)^0,c
  5173  002684  EC55  F00D         	call	___fladd	;wreg free
  5174  002688  C001  F057         	movff	?___fladd,roundf@y
  5175  00268C  C002  F058         	movff	?___fladd+1,roundf@y+1
  5176  002690  C003  F059         	movff	?___fladd+2,roundf@y+2
  5177  002694  C004  F05A         	movff	?___fladd+3,roundf@y+3
  5178  002698  EF68  F013         	goto	l4518
  5179  00269C                     l4516:
  5180  00269C  C057  F001         	movff	roundf@y,___fladd@b
  5181  0026A0  C058  F002         	movff	roundf@y+1,___fladd@b+1
  5182  0026A4  C059  F003         	movff	roundf@y+2,___fladd@b+2
  5183  0026A8  C05A  F004         	movff	roundf@y+3,___fladd@b+3
  5184  0026AC  C041  F005         	movff	roundf@x,___fladd@a
  5185  0026B0  C042  F006         	movff	roundf@x+1,___fladd@a+1
  5186  0026B4  C043  F007         	movff	roundf@x+2,___fladd@a+2
  5187  0026B8  C044  F008         	movff	roundf@x+3,___fladd@a+3
  5188  0026BC  EC55  F00D         	call	___fladd	;wreg free
  5189  0026C0  C001  F057         	movff	?___fladd,roundf@y
  5190  0026C4  C002  F058         	movff	?___fladd+1,roundf@y+1
  5191  0026C8  C003  F059         	movff	?___fladd+2,roundf@y+2
  5192  0026CC  C004  F05A         	movff	?___fladd+3,roundf@y+3
  5193  0026D0                     l4518:
  5194  0026D0  C053  F045         	movff	roundf@u,??_roundf
  5195  0026D4  C054  F046         	movff	roundf@u+1,??_roundf+1
  5196  0026D8  C055  F047         	movff	roundf@u+2,??_roundf+2
  5197  0026DC  C056  F048         	movff	roundf@u+3,??_roundf+3
  5198  0026E0  0E20               	movlw	32
  5199  0026E2  EF78  F013         	goto	u4280
  5200  0026E6                     u4285:
  5201  0026E6  90D8               	bcf	status,0,c
  5202  0026E8  3248               	rrcf	(??_roundf+3)^0,f,c
  5203  0026EA  3247               	rrcf	(??_roundf+2)^0,f,c
  5204  0026EC  3246               	rrcf	(??_roundf+1)^0,f,c
  5205  0026EE  3245               	rrcf	??_roundf^0,f,c
  5206  0026F0                     u4280:
  5207  0026F0  2EE8               	decfsz	wreg,f,c
  5208  0026F2  EF73  F013         	goto	u4285
  5209  0026F6  5045               	movf	??_roundf^0,w,c
  5210  0026F8  1046               	iorwf	(??_roundf+1)^0,w,c
  5211  0026FA  1047               	iorwf	(??_roundf+2)^0,w,c
  5212  0026FC  1048               	iorwf	(??_roundf+3)^0,w,c
  5213  0026FE  B4D8               	btfsc	status,2,c
  5214  002700  EF84  F013         	goto	u4291
  5215  002704  EF86  F013         	goto	u4290
  5216  002708                     u4291:
  5217  002708  EF98  F013         	goto	l4522
  5218  00270C                     u4290:
  5219  00270C  C057  F001         	movff	roundf@y,___flneg@f1
  5220  002710  C058  F002         	movff	roundf@y+1,___flneg@f1+1
  5221  002714  C059  F003         	movff	roundf@y+2,___flneg@f1+2
  5222  002718  C05A  F004         	movff	roundf@y+3,___flneg@f1+3
  5223  00271C  ECEF  F02B         	call	___flneg	;wreg free
  5224  002720  C001  F057         	movff	?___flneg,roundf@y
  5225  002724  C002  F058         	movff	?___flneg+1,roundf@y+1
  5226  002728  C003  F059         	movff	?___flneg+2,roundf@y+2
  5227  00272C  C004  F05A         	movff	?___flneg+3,roundf@y+3
  5228  002730                     l4522:
  5229  002730  C057  F041         	movff	roundf@y,?_roundf
  5230  002734  C058  F042         	movff	roundf@y+1,?_roundf+1
  5231  002738  C059  F043         	movff	roundf@y+2,?_roundf+2
  5232  00273C  C05A  F044         	movff	roundf@y+3,?_roundf+3
  5233  002740                     l1587:
  5234  002740  0012               	return		;funcret
  5235  002742                     __end_of_roundf:
  5236                           	callstack 0
  5237                           
  5238 ;; *************** function ___flsub *****************
  5239 ;; Defined at:
  5240 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\sprcadd.c"
  5241 ;; Parameters:    Size  Location     Type
  5242 ;;  b               4   16[COMRAM] float 
  5243 ;;  a               4   20[COMRAM] float 
  5244 ;; Auto vars:     Size  Location     Type
  5245 ;;		None
  5246 ;; Return value:  Size  Location     Type
  5247 ;;                  4   16[COMRAM] float 
  5248 ;; Registers used:
  5249 ;;		wreg, status,2, status,0, cstack
  5250 ;; Tracked objects:
  5251 ;;		On entry : 0/0
  5252 ;;		On exit  : 0/0
  5253 ;;		Unchanged: 0/0
  5254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5255 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5256 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5257 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5258 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5259 ;;Total ram usage:        8 bytes
  5260 ;; Hardware stack levels used: 1
  5261 ;; Hardware stack levels required when called: 2
  5262 ;; This function calls:
  5263 ;;		___fladd
  5264 ;; This function is called by:
  5265 ;;		_roundf
  5266 ;; This function uses a non-reentrant model
  5267 ;;
  5268                           
  5269                           	psect	text20
  5270  00559C                     __ptext20:
  5271                           	callstack 0
  5272  00559C                     ___flsub:
  5273                           	callstack 24
  5274  00559C  0E00               	movlw	0
  5275  00559E  1A15               	xorwf	___flsub@a^0,f,c
  5276  0055A0  0E00               	movlw	0
  5277  0055A2  1A16               	xorwf	(___flsub@a+1)^0,f,c
  5278  0055A4  0E00               	movlw	0
  5279  0055A6  1A17               	xorwf	(___flsub@a+2)^0,f,c
  5280  0055A8  0E80               	movlw	128
  5281  0055AA  1A18               	xorwf	(___flsub@a+3)^0,f,c
  5282  0055AC  C011  F001         	movff	___flsub@b,___fladd@b
  5283  0055B0  C012  F002         	movff	___flsub@b+1,___fladd@b+1
  5284  0055B4  C013  F003         	movff	___flsub@b+2,___fladd@b+2
  5285  0055B8  C014  F004         	movff	___flsub@b+3,___fladd@b+3
  5286  0055BC  C015  F005         	movff	___flsub@a,___fladd@a
  5287  0055C0  C016  F006         	movff	___flsub@a+1,___fladd@a+1
  5288  0055C4  C017  F007         	movff	___flsub@a+2,___fladd@a+2
  5289  0055C8  C018  F008         	movff	___flsub@a+3,___fladd@a+3
  5290  0055CC  EC55  F00D         	call	___fladd	;wreg free
  5291  0055D0  C001  F011         	movff	?___fladd,?___flsub
  5292  0055D4  C002  F012         	movff	?___fladd+1,?___flsub+1
  5293  0055D8  C003  F013         	movff	?___fladd+2,?___flsub+2
  5294  0055DC  C004  F014         	movff	?___fladd+3,?___flsub+3
  5295  0055E0  0012               	return		;funcret
  5296  0055E2                     __end_of___flsub:
  5297                           	callstack 0
  5298                           
  5299 ;; *************** function ___fladd *****************
  5300 ;; Defined at:
  5301 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\sprcadd.c"
  5302 ;; Parameters:    Size  Location     Type
  5303 ;;  b               4    0[COMRAM] float 
  5304 ;;  a               4    4[COMRAM] float 
  5305 ;; Auto vars:     Size  Location     Type
  5306 ;;  grs             1   15[COMRAM] unsigned char 
  5307 ;;  bexp            1   14[COMRAM] unsigned char 
  5308 ;;  aexp            1   13[COMRAM] unsigned char 
  5309 ;;  signs           1   12[COMRAM] unsigned char 
  5310 ;; Return value:  Size  Location     Type
  5311 ;;                  4    0[COMRAM] unsigned char 
  5312 ;; Registers used:
  5313 ;;		wreg, status,2, status,0
  5314 ;; Tracked objects:
  5315 ;;		On entry : 0/0
  5316 ;;		On exit  : 0/0
  5317 ;;		Unchanged: 0/0
  5318 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5319 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5320 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5321 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5322 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5323 ;;Total ram usage:       16 bytes
  5324 ;; Hardware stack levels used: 1
  5325 ;; Hardware stack levels required when called: 1
  5326 ;; This function calls:
  5327 ;;		Nothing
  5328 ;; This function is called by:
  5329 ;;		___flsub
  5330 ;;		_roundf
  5331 ;; This function uses a non-reentrant model
  5332 ;;
  5333                           
  5334                           	psect	text21
  5335  001AAA                     __ptext21:
  5336                           	callstack 0
  5337  001AAA                     ___fladd:
  5338                           	callstack 24
  5339  001AAA  5004               	movf	(___fladd@b+3)^0,w,c
  5340  001AAC  0B80               	andlw	128
  5341  001AAE  6E0D               	movwf	___fladd@signs^0,c
  5342  001AB0  5004               	movf	(___fladd@b+3)^0,w,c
  5343  001AB2  2404               	addwf	(___fladd@b+3)^0,w,c
  5344  001AB4  6E0F               	movwf	___fladd@bexp^0,c
  5345  001AB6  AE03               	btfss	(___fladd@b+2)^0,7,c
  5346  001AB8  EF60  F00D         	goto	u3351
  5347  001ABC  EF62  F00D         	goto	u3350
  5348  001AC0                     u3351:
  5349  001AC0  EF63  F00D         	goto	l3918
  5350  001AC4                     u3350:
  5351  001AC4  800F               	bsf	___fladd@bexp^0,0,c
  5352  001AC6                     l3918:
  5353  001AC6  500F               	movf	___fladd@bexp^0,w,c
  5354  001AC8  B4D8               	btfsc	status,2,c
  5355  001ACA  EF69  F00D         	goto	u3361
  5356  001ACE  EF6B  F00D         	goto	u3360
  5357  001AD2                     u3361:
  5358  001AD2  EF80  F00D         	goto	l3928
  5359  001AD6                     u3360:
  5360  001AD6  280F               	incf	___fladd@bexp^0,w,c
  5361  001AD8  A4D8               	btfss	status,2,c
  5362  001ADA  EF71  F00D         	goto	u3371
  5363  001ADE  EF73  F00D         	goto	u3370
  5364  001AE2                     u3371:
  5365  001AE2  EF7B  F00D         	goto	l3924
  5366  001AE6                     u3370:
  5367  001AE6  0E00               	movlw	0
  5368  001AE8  6E01               	movwf	___fladd@b^0,c
  5369  001AEA  0E00               	movlw	0
  5370  001AEC  6E02               	movwf	(___fladd@b+1)^0,c
  5371  001AEE  0E00               	movlw	0
  5372  001AF0  6E03               	movwf	(___fladd@b+2)^0,c
  5373  001AF2  0E00               	movlw	0
  5374  001AF4  6E04               	movwf	(___fladd@b+3)^0,c
  5375  001AF6                     l3924:
  5376  001AF6  8E03               	bsf	(___fladd@b+2)^0,7,c
  5377  001AF8  0E00               	movlw	0
  5378  001AFA  6E04               	movwf	(___fladd@b+3)^0,c
  5379  001AFC  EF88  F00D         	goto	l3930
  5380  001B00                     l3928:
  5381  001B00  0E00               	movlw	0
  5382  001B02  6E01               	movwf	___fladd@b^0,c
  5383  001B04  0E00               	movlw	0
  5384  001B06  6E02               	movwf	(___fladd@b+1)^0,c
  5385  001B08  0E00               	movlw	0
  5386  001B0A  6E03               	movwf	(___fladd@b+2)^0,c
  5387  001B0C  0E00               	movlw	0
  5388  001B0E  6E04               	movwf	(___fladd@b+3)^0,c
  5389  001B10                     l3930:
  5390  001B10  5008               	movf	(___fladd@a+3)^0,w,c
  5391  001B12  0B80               	andlw	128
  5392  001B14  6E0E               	movwf	___fladd@aexp^0,c
  5393  001B16  500D               	movf	___fladd@signs^0,w,c
  5394  001B18  180E               	xorwf	___fladd@aexp^0,w,c
  5395  001B1A  B4D8               	btfsc	status,2,c
  5396  001B1C  EF92  F00D         	goto	u3381
  5397  001B20  EF94  F00D         	goto	u3380
  5398  001B24                     u3381:
  5399  001B24  EF95  F00D         	goto	l3936
  5400  001B28                     u3380:
  5401  001B28  8C0D               	bsf	___fladd@signs^0,6,c
  5402  001B2A                     l3936:
  5403  001B2A  5008               	movf	(___fladd@a+3)^0,w,c
  5404  001B2C  2408               	addwf	(___fladd@a+3)^0,w,c
  5405  001B2E  6E0E               	movwf	___fladd@aexp^0,c
  5406  001B30  AE07               	btfss	(___fladd@a+2)^0,7,c
  5407  001B32  EF9D  F00D         	goto	u3391
  5408  001B36  EF9F  F00D         	goto	u3390
  5409  001B3A                     u3391:
  5410  001B3A  EFA0  F00D         	goto	l3942
  5411  001B3E                     u3390:
  5412  001B3E  800E               	bsf	___fladd@aexp^0,0,c
  5413  001B40                     l3942:
  5414  001B40  500E               	movf	___fladd@aexp^0,w,c
  5415  001B42  B4D8               	btfsc	status,2,c
  5416  001B44  EFA6  F00D         	goto	u3401
  5417  001B48  EFA8  F00D         	goto	u3400
  5418  001B4C                     u3401:
  5419  001B4C  EFBD  F00D         	goto	l3952
  5420  001B50                     u3400:
  5421  001B50  280E               	incf	___fladd@aexp^0,w,c
  5422  001B52  A4D8               	btfss	status,2,c
  5423  001B54  EFAE  F00D         	goto	u3411
  5424  001B58  EFB0  F00D         	goto	u3410
  5425  001B5C                     u3411:
  5426  001B5C  EFB8  F00D         	goto	l3948
  5427  001B60                     u3410:
  5428  001B60  0E00               	movlw	0
  5429  001B62  6E05               	movwf	___fladd@a^0,c
  5430  001B64  0E00               	movlw	0
  5431  001B66  6E06               	movwf	(___fladd@a+1)^0,c
  5432  001B68  0E00               	movlw	0
  5433  001B6A  6E07               	movwf	(___fladd@a+2)^0,c
  5434  001B6C  0E00               	movlw	0
  5435  001B6E  6E08               	movwf	(___fladd@a+3)^0,c
  5436  001B70                     l3948:
  5437  001B70  8E07               	bsf	(___fladd@a+2)^0,7,c
  5438  001B72  0E00               	movlw	0
  5439  001B74  6E08               	movwf	(___fladd@a+3)^0,c
  5440  001B76  EFC5  F00D         	goto	l3954
  5441  001B7A                     l3952:
  5442  001B7A  0E00               	movlw	0
  5443  001B7C  6E05               	movwf	___fladd@a^0,c
  5444  001B7E  0E00               	movlw	0
  5445  001B80  6E06               	movwf	(___fladd@a+1)^0,c
  5446  001B82  0E00               	movlw	0
  5447  001B84  6E07               	movwf	(___fladd@a+2)^0,c
  5448  001B86  0E00               	movlw	0
  5449  001B88  6E08               	movwf	(___fladd@a+3)^0,c
  5450  001B8A                     l3954:
  5451  001B8A  500F               	movf	___fladd@bexp^0,w,c
  5452  001B8C  5C0E               	subwf	___fladd@aexp^0,w,c
  5453  001B8E  B0D8               	btfsc	status,0,c
  5454  001B90  EFCC  F00D         	goto	u3421
  5455  001B94  EFCE  F00D         	goto	u3420
  5456  001B98                     u3421:
  5457  001B98  EFF5  F00D         	goto	l3990
  5458  001B9C                     u3420:
  5459  001B9C  AC0D               	btfss	___fladd@signs^0,6,c
  5460  001B9E  EFD3  F00D         	goto	u3431
  5461  001BA2  EFD5  F00D         	goto	u3430
  5462  001BA6                     u3431:
  5463  001BA6  EFD7  F00D         	goto	l3960
  5464  001BAA                     u3430:
  5465  001BAA  0E80               	movlw	128
  5466  001BAC  1A0D               	xorwf	___fladd@signs^0,f,c
  5467  001BAE                     l3960:
  5468  001BAE  C00F  F010         	movff	___fladd@bexp,___fladd@grs
  5469  001BB2  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  5470  001BB6  C010  F00E         	movff	___fladd@grs,___fladd@aexp
  5471  001BBA  C001  F010         	movff	___fladd@b,___fladd@grs
  5472  001BBE  C005  F001         	movff	___fladd@a,___fladd@b
  5473  001BC2  C010  F005         	movff	___fladd@grs,___fladd@a
  5474  001BC6  C002  F010         	movff	___fladd@b+1,___fladd@grs
  5475  001BCA  C006  F002         	movff	___fladd@a+1,___fladd@b+1
  5476  001BCE  C010  F006         	movff	___fladd@grs,___fladd@a+1
  5477  001BD2  C003  F010         	movff	___fladd@b+2,___fladd@grs
  5478  001BD6  C007  F003         	movff	___fladd@a+2,___fladd@b+2
  5479  001BDA  C010  F007         	movff	___fladd@grs,___fladd@a+2
  5480  001BDE  C004  F010         	movff	___fladd@b+3,___fladd@grs
  5481  001BE2  C008  F004         	movff	___fladd@a+3,___fladd@b+3
  5482  001BE6  C010  F008         	movff	___fladd@grs,___fladd@a+3
  5483  001BEA                     l3990:
  5484  001BEA  0E00               	movlw	0
  5485  001BEC  6E10               	movwf	___fladd@grs^0,c
  5486  001BEE  500F               	movf	___fladd@bexp^0,w,c
  5487  001BF0  C00E  F009         	movff	___fladd@aexp,??___fladd
  5488  001BF4  6A0A               	clrf	(??___fladd+1)^0,c
  5489  001BF6  5E09               	subwf	??___fladd^0,f,c
  5490  001BF8  0E00               	movlw	0
  5491  001BFA  5A0A               	subwfb	(??___fladd+1)^0,f,c
  5492  001BFC  BE0A               	btfsc	(??___fladd+1)^0,7,c
  5493  001BFE  EF0A  F00E         	goto	u3441
  5494  001C02  500A               	movf	(??___fladd+1)^0,w,c
  5495  001C04  E109               	bnz	u3440
  5496  001C06  0E1A               	movlw	26
  5497  001C08  5C09               	subwf	??___fladd^0,w,c
  5498  001C0A  A0D8               	btfss	status,0,c
  5499  001C0C  EF0A  F00E         	goto	u3441
  5500  001C10  EF0C  F00E         	goto	u3440
  5501  001C14                     u3441:
  5502  001C14  EF43  F00E         	goto	l1323
  5503  001C18                     u3440:
  5504  001C18  5001               	movf	___fladd@b^0,w,c
  5505  001C1A  1002               	iorwf	(___fladd@b+1)^0,w,c
  5506  001C1C  1003               	iorwf	(___fladd@b+2)^0,w,c
  5507  001C1E  1004               	iorwf	(___fladd@b+3)^0,w,c
  5508  001C20  A4D8               	btfss	status,2,c
  5509  001C22  EF15  F00E         	goto	u3451
  5510  001C26  EF18  F00E         	goto	u3450
  5511  001C2A                     u3451:
  5512  001C2A  0E01               	movlw	1
  5513  001C2C  EF19  F00E         	goto	u3460
  5514  001C30                     u3450:
  5515  001C30  0E00               	movlw	0
  5516  001C32                     u3460:
  5517  001C32  6E10               	movwf	___fladd@grs^0,c
  5518  001C34  0E00               	movlw	0
  5519  001C36  6E01               	movwf	___fladd@b^0,c
  5520  001C38  0E00               	movlw	0
  5521  001C3A  6E02               	movwf	(___fladd@b+1)^0,c
  5522  001C3C  0E00               	movlw	0
  5523  001C3E  6E03               	movwf	(___fladd@b+2)^0,c
  5524  001C40  0E00               	movlw	0
  5525  001C42  6E04               	movwf	(___fladd@b+3)^0,c
  5526  001C44  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  5527  001C48  EF4C  F00E         	goto	l1322
  5528  001C4C                     l1324:
  5529  001C4C  A010               	btfss	___fladd@grs^0,0,c
  5530  001C4E  EF2B  F00E         	goto	u3471
  5531  001C52  EF2D  F00E         	goto	u3470
  5532  001C56                     u3471:
  5533  001C56  EF33  F00E         	goto	l4002
  5534  001C5A                     u3470:
  5535  001C5A  90D8               	bcf	status,0,c
  5536  001C5C  3010               	rrcf	___fladd@grs^0,w,c
  5537  001C5E  0901               	iorlw	1
  5538  001C60  6E10               	movwf	___fladd@grs^0,c
  5539  001C62  EF35  F00E         	goto	l4004
  5540  001C66                     l4002:
  5541  001C66  90D8               	bcf	status,0,c
  5542  001C68  3210               	rrcf	___fladd@grs^0,f,c
  5543  001C6A                     l4004:
  5544  001C6A  A001               	btfss	___fladd@b^0,0,c
  5545  001C6C  EF3A  F00E         	goto	u3481
  5546  001C70  EF3C  F00E         	goto	u3480
  5547  001C74                     u3481:
  5548  001C74  EF3D  F00E         	goto	l4008
  5549  001C78                     u3480:
  5550  001C78  8E10               	bsf	___fladd@grs^0,7,c
  5551  001C7A                     l4008:
  5552  001C7A  3404               	rlcf	(___fladd@b+3)^0,w,c
  5553  001C7C  3204               	rrcf	(___fladd@b+3)^0,f,c
  5554  001C7E  3203               	rrcf	(___fladd@b+2)^0,f,c
  5555  001C80  3202               	rrcf	(___fladd@b+1)^0,f,c
  5556  001C82  3201               	rrcf	___fladd@b^0,f,c
  5557  001C84  2A0F               	incf	___fladd@bexp^0,f,c
  5558  001C86                     l1323:
  5559  001C86  500E               	movf	___fladd@aexp^0,w,c
  5560  001C88  5C0F               	subwf	___fladd@bexp^0,w,c
  5561  001C8A  A0D8               	btfss	status,0,c
  5562  001C8C  EF4A  F00E         	goto	u3491
  5563  001C90  EF4C  F00E         	goto	u3490
  5564  001C94                     u3491:
  5565  001C94  EF26  F00E         	goto	l1324
  5566  001C98                     u3490:
  5567  001C98                     l1322:
  5568  001C98  BC0D               	btfsc	___fladd@signs^0,6,c
  5569  001C9A  EF51  F00E         	goto	u3501
  5570  001C9E  EF53  F00E         	goto	u3500
  5571  001CA2                     u3501:
  5572  001CA2  EF93  F00E         	goto	l4036
  5573  001CA6                     u3500:
  5574  001CA6  500F               	movf	___fladd@bexp^0,w,c
  5575  001CA8  A4D8               	btfss	status,2,c
  5576  001CAA  EF59  F00E         	goto	u3511
  5577  001CAE  EF5B  F00E         	goto	u3510
  5578  001CB2                     u3511:
  5579  001CB2  EF65  F00E         	goto	l4018
  5580  001CB6                     u3510:
  5581  001CB6  0E00               	movlw	0
  5582  001CB8  6E01               	movwf	?___fladd^0,c
  5583  001CBA  0E00               	movlw	0
  5584  001CBC  6E02               	movwf	(?___fladd+1)^0,c
  5585  001CBE  0E00               	movlw	0
  5586  001CC0  6E03               	movwf	(?___fladd+2)^0,c
  5587  001CC2  0E00               	movlw	0
  5588  001CC4  6E04               	movwf	(?___fladd+3)^0,c
  5589  001CC6  EFB4  F00F         	goto	l1331
  5590  001CCA                     l4018:
  5591  001CCA  5005               	movf	___fladd@a^0,w,c
  5592  001CCC  2601               	addwf	___fladd@b^0,f,c
  5593  001CCE  5006               	movf	(___fladd@a+1)^0,w,c
  5594  001CD0  2202               	addwfc	(___fladd@b+1)^0,f,c
  5595  001CD2  5007               	movf	(___fladd@a+2)^0,w,c
  5596  001CD4  2203               	addwfc	(___fladd@b+2)^0,f,c
  5597  001CD6  5008               	movf	(___fladd@a+3)^0,w,c
  5598  001CD8  2204               	addwfc	(___fladd@b+3)^0,f,c
  5599  001CDA  A004               	btfss	(___fladd@b+3)^0,0,c
  5600  001CDC  EF72  F00E         	goto	u3521
  5601  001CE0  EF74  F00E         	goto	u3520
  5602  001CE4                     u3521:
  5603  001CE4  EF20  F00F         	goto	l4072
  5604  001CE8                     u3520:
  5605  001CE8  A010               	btfss	___fladd@grs^0,0,c
  5606  001CEA  EF79  F00E         	goto	u3531
  5607  001CEE  EF7B  F00E         	goto	u3530
  5608  001CF2                     u3531:
  5609  001CF2  EF81  F00E         	goto	l4026
  5610  001CF6                     u3530:
  5611  001CF6  90D8               	bcf	status,0,c
  5612  001CF8  3010               	rrcf	___fladd@grs^0,w,c
  5613  001CFA  0901               	iorlw	1
  5614  001CFC  6E10               	movwf	___fladd@grs^0,c
  5615  001CFE  EF83  F00E         	goto	l4028
  5616  001D02                     l4026:
  5617  001D02  90D8               	bcf	status,0,c
  5618  001D04  3210               	rrcf	___fladd@grs^0,f,c
  5619  001D06                     l4028:
  5620  001D06  A001               	btfss	___fladd@b^0,0,c
  5621  001D08  EF88  F00E         	goto	u3541
  5622  001D0C  EF8A  F00E         	goto	u3540
  5623  001D10                     u3541:
  5624  001D10  EF8B  F00E         	goto	l4032
  5625  001D14                     u3540:
  5626  001D14  8E10               	bsf	___fladd@grs^0,7,c
  5627  001D16                     l4032:
  5628  001D16  3404               	rlcf	(___fladd@b+3)^0,w,c
  5629  001D18  3204               	rrcf	(___fladd@b+3)^0,f,c
  5630  001D1A  3203               	rrcf	(___fladd@b+2)^0,f,c
  5631  001D1C  3202               	rrcf	(___fladd@b+1)^0,f,c
  5632  001D1E  3201               	rrcf	___fladd@b^0,f,c
  5633  001D20  2A0F               	incf	___fladd@bexp^0,f,c
  5634  001D22  EF20  F00F         	goto	l4072
  5635  001D26                     l4036:
  5636  001D26  5005               	movf	___fladd@a^0,w,c
  5637  001D28  5C01               	subwf	___fladd@b^0,w,c
  5638  001D2A  5006               	movf	(___fladd@a+1)^0,w,c
  5639  001D2C  5802               	subwfb	(___fladd@b+1)^0,w,c
  5640  001D2E  5007               	movf	(___fladd@a+2)^0,w,c
  5641  001D30  5803               	subwfb	(___fladd@b+2)^0,w,c
  5642  001D32  5004               	movf	(___fladd@b+3)^0,w,c
  5643  001D34  0A80               	xorlw	128
  5644  001D36  6E09               	movwf	??___fladd^0,c
  5645  001D38  5008               	movf	(___fladd@a+3)^0,w,c
  5646  001D3A  0A80               	xorlw	128
  5647  001D3C  5809               	subwfb	??___fladd^0,w,c
  5648  001D3E  B0D8               	btfsc	status,0,c
  5649  001D40  EFA4  F00E         	goto	u3551
  5650  001D44  EFA6  F00E         	goto	u3550
  5651  001D48                     u3551:
  5652  001D48  EFD1  F00E         	goto	l4046
  5653  001D4C                     u3550:
  5654  001D4C  5001               	movf	___fladd@b^0,w,c
  5655  001D4E  5C05               	subwf	___fladd@a^0,w,c
  5656  001D50  6E09               	movwf	??___fladd^0,c
  5657  001D52  5002               	movf	(___fladd@b+1)^0,w,c
  5658  001D54  5806               	subwfb	(___fladd@a+1)^0,w,c
  5659  001D56  6E0A               	movwf	(??___fladd+1)^0,c
  5660  001D58  5003               	movf	(___fladd@b+2)^0,w,c
  5661  001D5A  5807               	subwfb	(___fladd@a+2)^0,w,c
  5662  001D5C  6E0B               	movwf	(??___fladd+2)^0,c
  5663  001D5E  5004               	movf	(___fladd@b+3)^0,w,c
  5664  001D60  5808               	subwfb	(___fladd@a+3)^0,w,c
  5665  001D62  6E0C               	movwf	(??___fladd+3)^0,c
  5666  001D64  0EFF               	movlw	255
  5667  001D66  2409               	addwf	??___fladd^0,w,c
  5668  001D68  6E01               	movwf	___fladd@b^0,c
  5669  001D6A  0EFF               	movlw	255
  5670  001D6C  200A               	addwfc	(??___fladd+1)^0,w,c
  5671  001D6E  6E02               	movwf	(___fladd@b+1)^0,c
  5672  001D70  0EFF               	movlw	255
  5673  001D72  200B               	addwfc	(??___fladd+2)^0,w,c
  5674  001D74  6E03               	movwf	(___fladd@b+2)^0,c
  5675  001D76  0EFF               	movlw	255
  5676  001D78  200C               	addwfc	(??___fladd+3)^0,w,c
  5677  001D7A  6E04               	movwf	(___fladd@b+3)^0,c
  5678  001D7C  0E80               	movlw	128
  5679  001D7E  1A0D               	xorwf	___fladd@signs^0,f,c
  5680  001D80  6C10               	negf	___fladd@grs^0,c
  5681  001D82  5010               	movf	___fladd@grs^0,w,c
  5682  001D84  A4D8               	btfss	status,2,c
  5683  001D86  EFC7  F00E         	goto	u3561
  5684  001D8A  EFC9  F00E         	goto	u3560
  5685  001D8E                     u3561:
  5686  001D8E  EFD9  F00E         	goto	l1339
  5687  001D92                     u3560:
  5688  001D92  0E01               	movlw	1
  5689  001D94  2601               	addwf	___fladd@b^0,f,c
  5690  001D96  0E00               	movlw	0
  5691  001D98  2202               	addwfc	(___fladd@b+1)^0,f,c
  5692  001D9A  2203               	addwfc	(___fladd@b+2)^0,f,c
  5693  001D9C  2204               	addwfc	(___fladd@b+3)^0,f,c
  5694  001D9E  EFD9  F00E         	goto	l1339
  5695  001DA2                     l4046:
  5696  001DA2  5005               	movf	___fladd@a^0,w,c
  5697  001DA4  5E01               	subwf	___fladd@b^0,f,c
  5698  001DA6  5006               	movf	(___fladd@a+1)^0,w,c
  5699  001DA8  5A02               	subwfb	(___fladd@b+1)^0,f,c
  5700  001DAA  5007               	movf	(___fladd@a+2)^0,w,c
  5701  001DAC  5A03               	subwfb	(___fladd@b+2)^0,f,c
  5702  001DAE  5008               	movf	(___fladd@a+3)^0,w,c
  5703  001DB0  5A04               	subwfb	(___fladd@b+3)^0,f,c
  5704  001DB2                     l1339:
  5705  001DB2  5001               	movf	___fladd@b^0,w,c
  5706  001DB4  1002               	iorwf	(___fladd@b+1)^0,w,c
  5707  001DB6  1003               	iorwf	(___fladd@b+2)^0,w,c
  5708  001DB8  1004               	iorwf	(___fladd@b+3)^0,w,c
  5709  001DBA  A4D8               	btfss	status,2,c
  5710  001DBC  EFE2  F00E         	goto	u3571
  5711  001DC0  EFE4  F00E         	goto	u3570
  5712  001DC4                     u3571:
  5713  001DC4  EF19  F00F         	goto	l4070
  5714  001DC8                     u3570:
  5715  001DC8  5010               	movf	___fladd@grs^0,w,c
  5716  001DCA  A4D8               	btfss	status,2,c
  5717  001DCC  EFEA  F00E         	goto	u3581
  5718  001DD0  EFEC  F00E         	goto	u3580
  5719  001DD4                     u3581:
  5720  001DD4  EF19  F00F         	goto	l4070
  5721  001DD8                     u3580:
  5722  001DD8  0E00               	movlw	0
  5723  001DDA  6E01               	movwf	?___fladd^0,c
  5724  001DDC  0E00               	movlw	0
  5725  001DDE  6E02               	movwf	(?___fladd+1)^0,c
  5726  001DE0  0E00               	movlw	0
  5727  001DE2  6E03               	movwf	(?___fladd+2)^0,c
  5728  001DE4  0E00               	movlw	0
  5729  001DE6  6E04               	movwf	(?___fladd+3)^0,c
  5730  001DE8  EFB4  F00F         	goto	l1331
  5731  001DEC                     l4054:
  5732  001DEC  90D8               	bcf	status,0,c
  5733  001DEE  3601               	rlcf	___fladd@b^0,f,c
  5734  001DF0  3602               	rlcf	(___fladd@b+1)^0,f,c
  5735  001DF2  3603               	rlcf	(___fladd@b+2)^0,f,c
  5736  001DF4  3604               	rlcf	(___fladd@b+3)^0,f,c
  5737  001DF6  AE10               	btfss	___fladd@grs^0,7,c
  5738  001DF8  EF00  F00F         	goto	u3591
  5739  001DFC  EF02  F00F         	goto	u3590
  5740  001E00                     u3591:
  5741  001E00  EF03  F00F         	goto	l4060
  5742  001E04                     u3590:
  5743  001E04  8001               	bsf	___fladd@b^0,0,c
  5744  001E06                     l4060:
  5745  001E06  A010               	btfss	___fladd@grs^0,0,c
  5746  001E08  EF08  F00F         	goto	u3601
  5747  001E0C  EF0A  F00F         	goto	u3600
  5748  001E10                     u3601:
  5749  001E10  EF0E  F00F         	goto	l4064
  5750  001E14                     u3600:
  5751  001E14  80D8               	bsf	status,0,c
  5752  001E16  3610               	rlcf	___fladd@grs^0,f,c
  5753  001E18  EF10  F00F         	goto	l4066
  5754  001E1C                     l4064:
  5755  001E1C  90D8               	bcf	status,0,c
  5756  001E1E  3610               	rlcf	___fladd@grs^0,f,c
  5757  001E20                     l4066:
  5758  001E20  500F               	movf	___fladd@bexp^0,w,c
  5759  001E22  B4D8               	btfsc	status,2,c
  5760  001E24  EF16  F00F         	goto	u3611
  5761  001E28  EF18  F00F         	goto	u3610
  5762  001E2C                     u3611:
  5763  001E2C  EF19  F00F         	goto	l4070
  5764  001E30                     u3610:
  5765  001E30  060F               	decf	___fladd@bexp^0,f,c
  5766  001E32                     l4070:
  5767  001E32  AE03               	btfss	(___fladd@b+2)^0,7,c
  5768  001E34  EF1E  F00F         	goto	u3621
  5769  001E38  EF20  F00F         	goto	u3620
  5770  001E3C                     u3621:
  5771  001E3C  EFF6  F00E         	goto	l4054
  5772  001E40                     u3620:
  5773  001E40                     l4072:
  5774  001E40  0E00               	movlw	0
  5775  001E42  6E0E               	movwf	___fladd@aexp^0,c
  5776  001E44  AE10               	btfss	___fladd@grs^0,7,c
  5777  001E46  EF27  F00F         	goto	u3631
  5778  001E4A  EF29  F00F         	goto	u3630
  5779  001E4E                     u3631:
  5780  001E4E  EF41  F00F         	goto	l1348
  5781  001E52                     u3630:
  5782  001E52  C010  F009         	movff	___fladd@grs,??___fladd
  5783  001E56  0E7F               	movlw	127
  5784  001E58  1609               	andwf	??___fladd^0,f,c
  5785  001E5A  B4D8               	btfsc	status,2,c
  5786  001E5C  EF32  F00F         	goto	u3641
  5787  001E60  EF34  F00F         	goto	u3640
  5788  001E64                     u3641:
  5789  001E64  EF38  F00F         	goto	l1349
  5790  001E68                     u3640:
  5791  001E68                     l4078:
  5792  001E68  0E01               	movlw	1
  5793  001E6A  6E0E               	movwf	___fladd@aexp^0,c
  5794  001E6C  EF41  F00F         	goto	l1348
  5795  001E70                     l1349:
  5796  001E70  A001               	btfss	___fladd@b^0,0,c
  5797  001E72  EF3D  F00F         	goto	u3651
  5798  001E76  EF3F  F00F         	goto	u3650
  5799  001E7A                     u3651:
  5800  001E7A  EF41  F00F         	goto	l1348
  5801  001E7E                     u3650:
  5802  001E7E  EF34  F00F         	goto	l4078
  5803  001E82                     l1348:
  5804  001E82  500E               	movf	___fladd@aexp^0,w,c
  5805  001E84  B4D8               	btfsc	status,2,c
  5806  001E86  EF47  F00F         	goto	u3661
  5807  001E8A  EF49  F00F         	goto	u3660
  5808  001E8E                     u3661:
  5809  001E8E  EF74  F00F         	goto	l4090
  5810  001E92                     u3660:
  5811  001E92  0E01               	movlw	1
  5812  001E94  2601               	addwf	___fladd@b^0,f,c
  5813  001E96  0E00               	movlw	0
  5814  001E98  2202               	addwfc	(___fladd@b+1)^0,f,c
  5815  001E9A  2203               	addwfc	(___fladd@b+2)^0,f,c
  5816  001E9C  2204               	addwfc	(___fladd@b+3)^0,f,c
  5817  001E9E  A004               	btfss	(___fladd@b+3)^0,0,c
  5818  001EA0  EF54  F00F         	goto	u3671
  5819  001EA4  EF56  F00F         	goto	u3670
  5820  001EA8                     u3671:
  5821  001EA8  EF74  F00F         	goto	l4090
  5822  001EAC                     u3670:
  5823  001EAC  C001  F009         	movff	___fladd@b,??___fladd
  5824  001EB0  C002  F00A         	movff	___fladd@b+1,??___fladd+1
  5825  001EB4  C003  F00B         	movff	___fladd@b+2,??___fladd+2
  5826  001EB8  C004  F00C         	movff	___fladd@b+3,??___fladd+3
  5827  001EBC  340C               	rlcf	(??___fladd+3)^0,w,c
  5828  001EBE  320C               	rrcf	(??___fladd+3)^0,f,c
  5829  001EC0  320B               	rrcf	(??___fladd+2)^0,f,c
  5830  001EC2  320A               	rrcf	(??___fladd+1)^0,f,c
  5831  001EC4  3209               	rrcf	??___fladd^0,f,c
  5832  001EC6  C009  F001         	movff	??___fladd,___fladd@b
  5833  001ECA  C00A  F002         	movff	??___fladd+1,___fladd@b+1
  5834  001ECE  C00B  F003         	movff	??___fladd+2,___fladd@b+2
  5835  001ED2  C00C  F004         	movff	??___fladd+3,___fladd@b+3
  5836  001ED6  280F               	incf	___fladd@bexp^0,w,c
  5837  001ED8  B4D8               	btfsc	status,2,c
  5838  001EDA  EF71  F00F         	goto	u3681
  5839  001EDE  EF73  F00F         	goto	u3680
  5840  001EE2                     u3681:
  5841  001EE2  EF74  F00F         	goto	l4090
  5842  001EE6                     u3680:
  5843  001EE6  2A0F               	incf	___fladd@bexp^0,f,c
  5844  001EE8                     l4090:
  5845  001EE8  280F               	incf	___fladd@bexp^0,w,c
  5846  001EEA  B4D8               	btfsc	status,2,c
  5847  001EEC  EF7A  F00F         	goto	u3691
  5848  001EF0  EF7C  F00F         	goto	u3690
  5849  001EF4                     u3691:
  5850  001EF4  EF84  F00F         	goto	l4094
  5851  001EF8                     u3690:
  5852  001EF8  500F               	movf	___fladd@bexp^0,w,c
  5853  001EFA  A4D8               	btfss	status,2,c
  5854  001EFC  EF82  F00F         	goto	u3701
  5855  001F00  EF84  F00F         	goto	u3700
  5856  001F04                     u3701:
  5857  001F04  EF96  F00F         	goto	l4098
  5858  001F08                     u3700:
  5859  001F08                     l4094:
  5860  001F08  0E00               	movlw	0
  5861  001F0A  6E01               	movwf	___fladd@b^0,c
  5862  001F0C  0E00               	movlw	0
  5863  001F0E  6E02               	movwf	(___fladd@b+1)^0,c
  5864  001F10  0E00               	movlw	0
  5865  001F12  6E03               	movwf	(___fladd@b+2)^0,c
  5866  001F14  0E00               	movlw	0
  5867  001F16  6E04               	movwf	(___fladd@b+3)^0,c
  5868  001F18  500F               	movf	___fladd@bexp^0,w,c
  5869  001F1A  A4D8               	btfss	status,2,c
  5870  001F1C  EF92  F00F         	goto	u3711
  5871  001F20  EF94  F00F         	goto	u3710
  5872  001F24                     u3711:
  5873  001F24  EF96  F00F         	goto	l4098
  5874  001F28                     u3710:
  5875  001F28  0E00               	movlw	0
  5876  001F2A  6E0D               	movwf	___fladd@signs^0,c
  5877  001F2C                     l4098:
  5878  001F2C  A00F               	btfss	___fladd@bexp^0,0,c
  5879  001F2E  EF9B  F00F         	goto	u3721
  5880  001F32  EF9D  F00F         	goto	u3720
  5881  001F36                     u3721:
  5882  001F36  EFA0  F00F         	goto	l4102
  5883  001F3A                     u3720:
  5884  001F3A  8E03               	bsf	(___fladd@b+2)^0,7,c
  5885  001F3C  EFA1  F00F         	goto	l4104
  5886  001F40                     l4102:
  5887  001F40  9E03               	bcf	(___fladd@b+2)^0,7,c
  5888  001F42                     l4104:
  5889  001F42  90D8               	bcf	status,0,c
  5890  001F44  300F               	rrcf	___fladd@bexp^0,w,c
  5891  001F46  6E04               	movwf	(___fladd@b+3)^0,c
  5892  001F48  AE0D               	btfss	___fladd@signs^0,7,c
  5893  001F4A  EFA9  F00F         	goto	u3731
  5894  001F4E  EFAB  F00F         	goto	u3730
  5895  001F52                     u3731:
  5896  001F52  EFAC  F00F         	goto	l4110
  5897  001F56                     u3730:
  5898  001F56  8E04               	bsf	(___fladd@b+3)^0,7,c
  5899  001F58                     l4110:
  5900  001F58  C001  F001         	movff	___fladd@b,?___fladd
  5901  001F5C  C002  F002         	movff	___fladd@b+1,?___fladd+1
  5902  001F60  C003  F003         	movff	___fladd@b+2,?___fladd+2
  5903  001F64  C004  F004         	movff	___fladd@b+3,?___fladd+3
  5904  001F68                     l1331:
  5905  001F68  0012               	return		;funcret
  5906  001F6A                     __end_of___fladd:
  5907                           	callstack 0
  5908                           
  5909 ;; *************** function ___flneg *****************
  5910 ;; Defined at:
  5911 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\flneg.c"
  5912 ;; Parameters:    Size  Location     Type
  5913 ;;  f1              4    0[COMRAM] unsigned char 
  5914 ;; Auto vars:     Size  Location     Type
  5915 ;;		None
  5916 ;; Return value:  Size  Location     Type
  5917 ;;                  4    0[COMRAM] unsigned char 
  5918 ;; Registers used:
  5919 ;;		wreg, status,2, status,0
  5920 ;; Tracked objects:
  5921 ;;		On entry : 0/0
  5922 ;;		On exit  : 0/0
  5923 ;;		Unchanged: 0/0
  5924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5925 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5926 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5927 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5928 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5929 ;;Total ram usage:        4 bytes
  5930 ;; Hardware stack levels used: 1
  5931 ;; Hardware stack levels required when called: 1
  5932 ;; This function calls:
  5933 ;;		Nothing
  5934 ;; This function is called by:
  5935 ;;		_roundf
  5936 ;; This function uses a non-reentrant model
  5937 ;;
  5938                           
  5939                           	psect	text22
  5940  0057DE                     __ptext22:
  5941                           	callstack 0
  5942  0057DE                     ___flneg:
  5943                           	callstack 25
  5944  0057DE  5001               	movf	___flneg@f1^0,w,c
  5945  0057E0  1002               	iorwf	(___flneg@f1+1)^0,w,c
  5946  0057E2  1003               	iorwf	(___flneg@f1+2)^0,w,c
  5947  0057E4  1004               	iorwf	(___flneg@f1+3)^0,w,c
  5948  0057E6  B4D8               	btfsc	status,2,c
  5949  0057E8  EFF8  F02B         	goto	u4091
  5950  0057EC  EFFA  F02B         	goto	u4090
  5951  0057F0                     u4091:
  5952  0057F0  EF02  F02C         	goto	l4374
  5953  0057F4                     u4090:
  5954  0057F4  0E00               	movlw	0
  5955  0057F6  1A01               	xorwf	___flneg@f1^0,f,c
  5956  0057F8  0E00               	movlw	0
  5957  0057FA  1A02               	xorwf	(___flneg@f1+1)^0,f,c
  5958  0057FC  0E00               	movlw	0
  5959  0057FE  1A03               	xorwf	(___flneg@f1+2)^0,f,c
  5960  005800  0E80               	movlw	128
  5961  005802  1A04               	xorwf	(___flneg@f1+3)^0,f,c
  5962  005804                     l4374:
  5963  005804  C001  F001         	movff	___flneg@f1,?___flneg
  5964  005808  C002  F002         	movff	___flneg@f1+1,?___flneg+1
  5965  00580C  C003  F003         	movff	___flneg@f1+2,?___flneg+2
  5966  005810  C004  F004         	movff	___flneg@f1+3,?___flneg+3
  5967  005814  0012               	return		;funcret
  5968  005816                     __end_of___flneg:
  5969                           	callstack 0
  5970                           
  5971 ;; *************** function ___flmul *****************
  5972 ;; Defined at:
  5973 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\sprcmul.c"
  5974 ;; Parameters:    Size  Location     Type
  5975 ;;  b               4   39[COMRAM] unsigned char 
  5976 ;;  a               4   43[COMRAM] unsigned char 
  5977 ;; Auto vars:     Size  Location     Type
  5978 ;;  prod            4   58[COMRAM] struct .
  5979 ;;  grs             4   52[COMRAM] unsigned long 
  5980 ;;  temp            2   62[COMRAM] struct .
  5981 ;;  bexp            1   57[COMRAM] unsigned char 
  5982 ;;  aexp            1   56[COMRAM] unsigned char 
  5983 ;;  sign            1   51[COMRAM] unsigned char 
  5984 ;; Return value:  Size  Location     Type
  5985 ;;                  4   39[COMRAM] unsigned char 
  5986 ;; Registers used:
  5987 ;;		wreg, status,2, status,0, prodl, prodh
  5988 ;; Tracked objects:
  5989 ;;		On entry : 0/0
  5990 ;;		On exit  : 0/0
  5991 ;;		Unchanged: 0/0
  5992 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5993 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5994 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5995 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5996 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5997 ;;Total ram usage:       25 bytes
  5998 ;; Hardware stack levels used: 1
  5999 ;; Hardware stack levels required when called: 1
  6000 ;; This function calls:
  6001 ;;		Nothing
  6002 ;; This function is called by:
  6003 ;;		_detect_color
  6004 ;;		_distance_measure
  6005 ;;		_roundf
  6006 ;;		_check_color_reading
  6007 ;; This function uses a non-reentrant model
  6008 ;;
  6009                           
  6010                           	psect	text23
  6011  001F6A                     __ptext23:
  6012                           	callstack 0
  6013  001F6A                     ___flmul:
  6014                           	callstack 25
  6015  001F6A  502B               	movf	(___flmul@b+3)^0,w,c
  6016  001F6C  0B80               	andlw	128
  6017  001F6E  6E34               	movwf	___flmul@sign^0,c
  6018  001F70  502B               	movf	(___flmul@b+3)^0,w,c
  6019  001F72  242B               	addwf	(___flmul@b+3)^0,w,c
  6020  001F74  6E3A               	movwf	___flmul@bexp^0,c
  6021  001F76  AE2A               	btfss	(___flmul@b+2)^0,7,c
  6022  001F78  EFC0  F00F         	goto	u3851
  6023  001F7C  EFC2  F00F         	goto	u3850
  6024  001F80                     u3851:
  6025  001F80  EFC3  F00F         	goto	l4218
  6026  001F84                     u3850:
  6027  001F84  803A               	bsf	___flmul@bexp^0,0,c
  6028  001F86                     l4218:
  6029  001F86  503A               	movf	___flmul@bexp^0,w,c
  6030  001F88  B4D8               	btfsc	status,2,c
  6031  001F8A  EFC9  F00F         	goto	u3861
  6032  001F8E  EFCB  F00F         	goto	u3860
  6033  001F92                     u3861:
  6034  001F92  EFDE  F00F         	goto	l4226
  6035  001F96                     u3860:
  6036  001F96  283A               	incf	___flmul@bexp^0,w,c
  6037  001F98  A4D8               	btfss	status,2,c
  6038  001F9A  EFD1  F00F         	goto	u3871
  6039  001F9E  EFD3  F00F         	goto	u3870
  6040  001FA2                     u3871:
  6041  001FA2  EFDB  F00F         	goto	l4224
  6042  001FA6                     u3870:
  6043  001FA6  0E00               	movlw	0
  6044  001FA8  6E28               	movwf	___flmul@b^0,c
  6045  001FAA  0E00               	movlw	0
  6046  001FAC  6E29               	movwf	(___flmul@b+1)^0,c
  6047  001FAE  0E00               	movlw	0
  6048  001FB0  6E2A               	movwf	(___flmul@b+2)^0,c
  6049  001FB2  0E00               	movlw	0
  6050  001FB4  6E2B               	movwf	(___flmul@b+3)^0,c
  6051  001FB6                     l4224:
  6052  001FB6  8E2A               	bsf	(___flmul@b+2)^0,7,c
  6053  001FB8  EFE6  F00F         	goto	l4228
  6054  001FBC                     l4226:
  6055  001FBC  0E00               	movlw	0
  6056  001FBE  6E28               	movwf	___flmul@b^0,c
  6057  001FC0  0E00               	movlw	0
  6058  001FC2  6E29               	movwf	(___flmul@b+1)^0,c
  6059  001FC4  0E00               	movlw	0
  6060  001FC6  6E2A               	movwf	(___flmul@b+2)^0,c
  6061  001FC8  0E00               	movlw	0
  6062  001FCA  6E2B               	movwf	(___flmul@b+3)^0,c
  6063  001FCC                     l4228:
  6064  001FCC  502F               	movf	(___flmul@a+3)^0,w,c
  6065  001FCE  0B80               	andlw	128
  6066  001FD0  1A34               	xorwf	___flmul@sign^0,f,c
  6067  001FD2  502F               	movf	(___flmul@a+3)^0,w,c
  6068  001FD4  242F               	addwf	(___flmul@a+3)^0,w,c
  6069  001FD6  6E39               	movwf	___flmul@aexp^0,c
  6070  001FD8  AE2E               	btfss	(___flmul@a+2)^0,7,c
  6071  001FDA  EFF1  F00F         	goto	u3881
  6072  001FDE  EFF3  F00F         	goto	u3880
  6073  001FE2                     u3881:
  6074  001FE2  EFF4  F00F         	goto	l4236
  6075  001FE6                     u3880:
  6076  001FE6  8039               	bsf	___flmul@aexp^0,0,c
  6077  001FE8                     l4236:
  6078  001FE8  5039               	movf	___flmul@aexp^0,w,c
  6079  001FEA  B4D8               	btfsc	status,2,c
  6080  001FEC  EFFA  F00F         	goto	u3891
  6081  001FF0  EFFC  F00F         	goto	u3890
  6082  001FF4                     u3891:
  6083  001FF4  EF0F  F010         	goto	l4244
  6084  001FF8                     u3890:
  6085  001FF8  2839               	incf	___flmul@aexp^0,w,c
  6086  001FFA  A4D8               	btfss	status,2,c
  6087  001FFC  EF02  F010         	goto	u3901
  6088  002000  EF04  F010         	goto	u3900
  6089  002004                     u3901:
  6090  002004  EF0C  F010         	goto	l4242
  6091  002008                     u3900:
  6092  002008  0E00               	movlw	0
  6093  00200A  6E2C               	movwf	___flmul@a^0,c
  6094  00200C  0E00               	movlw	0
  6095  00200E  6E2D               	movwf	(___flmul@a+1)^0,c
  6096  002010  0E00               	movlw	0
  6097  002012  6E2E               	movwf	(___flmul@a+2)^0,c
  6098  002014  0E00               	movlw	0
  6099  002016  6E2F               	movwf	(___flmul@a+3)^0,c
  6100  002018                     l4242:
  6101  002018  8E2E               	bsf	(___flmul@a+2)^0,7,c
  6102  00201A  EF17  F010         	goto	l1408
  6103  00201E                     l4244:
  6104  00201E  0E00               	movlw	0
  6105  002020  6E2C               	movwf	___flmul@a^0,c
  6106  002022  0E00               	movlw	0
  6107  002024  6E2D               	movwf	(___flmul@a+1)^0,c
  6108  002026  0E00               	movlw	0
  6109  002028  6E2E               	movwf	(___flmul@a+2)^0,c
  6110  00202A  0E00               	movlw	0
  6111  00202C  6E2F               	movwf	(___flmul@a+3)^0,c
  6112  00202E                     l1408:
  6113  00202E  5039               	movf	___flmul@aexp^0,w,c
  6114  002030  B4D8               	btfsc	status,2,c
  6115  002032  EF1D  F010         	goto	u3911
  6116  002036  EF1F  F010         	goto	u3910
  6117  00203A                     u3911:
  6118  00203A  EF27  F010         	goto	l4248
  6119  00203E                     u3910:
  6120  00203E  503A               	movf	___flmul@bexp^0,w,c
  6121  002040  A4D8               	btfss	status,2,c
  6122  002042  EF25  F010         	goto	u3921
  6123  002046  EF27  F010         	goto	u3920
  6124  00204A                     u3921:
  6125  00204A  EF31  F010         	goto	l4252
  6126  00204E                     u3920:
  6127  00204E                     l4248:
  6128  00204E  0E00               	movlw	0
  6129  002050  6E28               	movwf	?___flmul^0,c
  6130  002052  0E00               	movlw	0
  6131  002054  6E29               	movwf	(?___flmul+1)^0,c
  6132  002056  0E00               	movlw	0
  6133  002058  6E2A               	movwf	(?___flmul+2)^0,c
  6134  00205A  0E00               	movlw	0
  6135  00205C  6E2B               	movwf	(?___flmul+3)^0,c
  6136  00205E  EFC9  F011         	goto	l1412
  6137  002062                     l4252:
  6138  002062  502E               	movf	(___flmul@a+2)^0,w,c
  6139  002064  0228               	mulwf	___flmul@b^0,c
  6140  002066  CFF3 F03F          	movff	prodl,___flmul@temp
  6141  00206A  CFF4 F040          	movff	prodh,___flmul@temp+1
  6142  00206E  503F               	movf	___flmul@temp^0,w,c
  6143  002070  6E35               	movwf	___flmul@grs^0,c
  6144  002072  6A36               	clrf	(___flmul@grs+1)^0,c
  6145  002074  6A37               	clrf	(___flmul@grs+2)^0,c
  6146  002076  6A38               	clrf	(___flmul@grs+3)^0,c
  6147  002078  5040               	movf	(___flmul@temp+1)^0,w,c
  6148  00207A  6E3B               	movwf	___flmul@prod^0,c
  6149  00207C  6A3C               	clrf	(___flmul@prod+1)^0,c
  6150  00207E  6A3D               	clrf	(___flmul@prod+2)^0,c
  6151  002080  6A3E               	clrf	(___flmul@prod+3)^0,c
  6152  002082  502D               	movf	(___flmul@a+1)^0,w,c
  6153  002084  0229               	mulwf	(___flmul@b+1)^0,c
  6154  002086  CFF3 F03F          	movff	prodl,___flmul@temp
  6155  00208A  CFF4 F040          	movff	prodh,___flmul@temp+1
  6156  00208E  503F               	movf	___flmul@temp^0,w,c
  6157  002090  2635               	addwf	___flmul@grs^0,f,c
  6158  002092  0E00               	movlw	0
  6159  002094  2236               	addwfc	(___flmul@grs+1)^0,f,c
  6160  002096  2237               	addwfc	(___flmul@grs+2)^0,f,c
  6161  002098  2238               	addwfc	(___flmul@grs+3)^0,f,c
  6162  00209A  5040               	movf	(___flmul@temp+1)^0,w,c
  6163  00209C  263B               	addwf	___flmul@prod^0,f,c
  6164  00209E  0E00               	movlw	0
  6165  0020A0  223C               	addwfc	(___flmul@prod+1)^0,f,c
  6166  0020A2  223D               	addwfc	(___flmul@prod+2)^0,f,c
  6167  0020A4  223E               	addwfc	(___flmul@prod+3)^0,f,c
  6168  0020A6  502C               	movf	___flmul@a^0,w,c
  6169  0020A8  022A               	mulwf	(___flmul@b+2)^0,c
  6170  0020AA  CFF3 F03F          	movff	prodl,___flmul@temp
  6171  0020AE  CFF4 F040          	movff	prodh,___flmul@temp+1
  6172  0020B2  503F               	movf	___flmul@temp^0,w,c
  6173  0020B4  2635               	addwf	___flmul@grs^0,f,c
  6174  0020B6  0E00               	movlw	0
  6175  0020B8  2236               	addwfc	(___flmul@grs+1)^0,f,c
  6176  0020BA  2237               	addwfc	(___flmul@grs+2)^0,f,c
  6177  0020BC  2238               	addwfc	(___flmul@grs+3)^0,f,c
  6178  0020BE  5040               	movf	(___flmul@temp+1)^0,w,c
  6179  0020C0  263B               	addwf	___flmul@prod^0,f,c
  6180  0020C2  0E00               	movlw	0
  6181  0020C4  223C               	addwfc	(___flmul@prod+1)^0,f,c
  6182  0020C6  223D               	addwfc	(___flmul@prod+2)^0,f,c
  6183  0020C8  223E               	addwfc	(___flmul@prod+3)^0,f,c
  6184  0020CA  C037  F038         	movff	___flmul@grs+2,___flmul@grs+3
  6185  0020CE  C036  F037         	movff	___flmul@grs+1,___flmul@grs+2
  6186  0020D2  C035  F036         	movff	___flmul@grs,___flmul@grs+1
  6187  0020D6  6A35               	clrf	___flmul@grs^0,c
  6188  0020D8  502C               	movf	___flmul@a^0,w,c
  6189  0020DA  0229               	mulwf	(___flmul@b+1)^0,c
  6190  0020DC  CFF3 F03F          	movff	prodl,___flmul@temp
  6191  0020E0  CFF4 F040          	movff	prodh,___flmul@temp+1
  6192  0020E4  503F               	movf	___flmul@temp^0,w,c
  6193  0020E6  2635               	addwf	___flmul@grs^0,f,c
  6194  0020E8  5040               	movf	(___flmul@temp+1)^0,w,c
  6195  0020EA  2236               	addwfc	(___flmul@grs+1)^0,f,c
  6196  0020EC  0E00               	movlw	0
  6197  0020EE  2237               	addwfc	(___flmul@grs+2)^0,f,c
  6198  0020F0  0E00               	movlw	0
  6199  0020F2  2238               	addwfc	(___flmul@grs+3)^0,f,c
  6200  0020F4  502D               	movf	(___flmul@a+1)^0,w,c
  6201  0020F6  0228               	mulwf	___flmul@b^0,c
  6202  0020F8  CFF3 F03F          	movff	prodl,___flmul@temp
  6203  0020FC  CFF4 F040          	movff	prodh,___flmul@temp+1
  6204  002100  503F               	movf	___flmul@temp^0,w,c
  6205  002102  2635               	addwf	___flmul@grs^0,f,c
  6206  002104  5040               	movf	(___flmul@temp+1)^0,w,c
  6207  002106  2236               	addwfc	(___flmul@grs+1)^0,f,c
  6208  002108  0E00               	movlw	0
  6209  00210A  2237               	addwfc	(___flmul@grs+2)^0,f,c
  6210  00210C  0E00               	movlw	0
  6211  00210E  2238               	addwfc	(___flmul@grs+3)^0,f,c
  6212  002110  C037  F038         	movff	___flmul@grs+2,___flmul@grs+3
  6213  002114  C036  F037         	movff	___flmul@grs+1,___flmul@grs+2
  6214  002118  C035  F036         	movff	___flmul@grs,___flmul@grs+1
  6215  00211C  6A35               	clrf	___flmul@grs^0,c
  6216  00211E  502C               	movf	___flmul@a^0,w,c
  6217  002120  0228               	mulwf	___flmul@b^0,c
  6218  002122  CFF3 F03F          	movff	prodl,___flmul@temp
  6219  002126  CFF4 F040          	movff	prodh,___flmul@temp+1
  6220  00212A  503F               	movf	___flmul@temp^0,w,c
  6221  00212C  2635               	addwf	___flmul@grs^0,f,c
  6222  00212E  5040               	movf	(___flmul@temp+1)^0,w,c
  6223  002130  2236               	addwfc	(___flmul@grs+1)^0,f,c
  6224  002132  0E00               	movlw	0
  6225  002134  2237               	addwfc	(___flmul@grs+2)^0,f,c
  6226  002136  0E00               	movlw	0
  6227  002138  2238               	addwfc	(___flmul@grs+3)^0,f,c
  6228  00213A  502E               	movf	(___flmul@a+2)^0,w,c
  6229  00213C  0229               	mulwf	(___flmul@b+1)^0,c
  6230  00213E  CFF3 F03F          	movff	prodl,___flmul@temp
  6231  002142  CFF4 F040          	movff	prodh,___flmul@temp+1
  6232  002146  503F               	movf	___flmul@temp^0,w,c
  6233  002148  263B               	addwf	___flmul@prod^0,f,c
  6234  00214A  5040               	movf	(___flmul@temp+1)^0,w,c
  6235  00214C  223C               	addwfc	(___flmul@prod+1)^0,f,c
  6236  00214E  0E00               	movlw	0
  6237  002150  223D               	addwfc	(___flmul@prod+2)^0,f,c
  6238  002152  0E00               	movlw	0
  6239  002154  223E               	addwfc	(___flmul@prod+3)^0,f,c
  6240  002156  502D               	movf	(___flmul@a+1)^0,w,c
  6241  002158  022A               	mulwf	(___flmul@b+2)^0,c
  6242  00215A  CFF3 F03F          	movff	prodl,___flmul@temp
  6243  00215E  CFF4 F040          	movff	prodh,___flmul@temp+1
  6244  002162  503F               	movf	___flmul@temp^0,w,c
  6245  002164  263B               	addwf	___flmul@prod^0,f,c
  6246  002166  5040               	movf	(___flmul@temp+1)^0,w,c
  6247  002168  223C               	addwfc	(___flmul@prod+1)^0,f,c
  6248  00216A  0E00               	movlw	0
  6249  00216C  223D               	addwfc	(___flmul@prod+2)^0,f,c
  6250  00216E  0E00               	movlw	0
  6251  002170  223E               	addwfc	(___flmul@prod+3)^0,f,c
  6252  002172  502E               	movf	(___flmul@a+2)^0,w,c
  6253  002174  022A               	mulwf	(___flmul@b+2)^0,c
  6254  002176  CFF3 F03F          	movff	prodl,___flmul@temp
  6255  00217A  CFF4 F040          	movff	prodh,___flmul@temp+1
  6256  00217E  503F               	movf	___flmul@temp^0,w,c
  6257  002180  6E30               	movwf	??___flmul^0,c
  6258  002182  5040               	movf	(___flmul@temp+1)^0,w,c
  6259  002184  6E31               	movwf	(??___flmul+1)^0,c
  6260  002186  6A32               	clrf	(??___flmul+2)^0,c
  6261  002188  6A33               	clrf	(??___flmul+3)^0,c
  6262  00218A  C032  F033         	movff	??___flmul+2,??___flmul+3
  6263  00218E  C031  F032         	movff	??___flmul+1,??___flmul+2
  6264  002192  C030  F031         	movff	??___flmul,??___flmul+1
  6265  002196  6A30               	clrf	??___flmul^0,c
  6266  002198  5030               	movf	??___flmul^0,w,c
  6267  00219A  263B               	addwf	___flmul@prod^0,f,c
  6268  00219C  5031               	movf	(??___flmul+1)^0,w,c
  6269  00219E  223C               	addwfc	(___flmul@prod+1)^0,f,c
  6270  0021A0  5032               	movf	(??___flmul+2)^0,w,c
  6271  0021A2  223D               	addwfc	(___flmul@prod+2)^0,f,c
  6272  0021A4  5033               	movf	(??___flmul+3)^0,w,c
  6273  0021A6  223E               	addwfc	(___flmul@prod+3)^0,f,c
  6274  0021A8  C035  F030         	movff	___flmul@grs,??___flmul
  6275  0021AC  C036  F031         	movff	___flmul@grs+1,??___flmul+1
  6276  0021B0  C037  F032         	movff	___flmul@grs+2,??___flmul+2
  6277  0021B4  C038  F033         	movff	___flmul@grs+3,??___flmul+3
  6278  0021B8  0E19               	movlw	25
  6279  0021BA  EFE4  F010         	goto	u3930
  6280  0021BE                     u3935:
  6281  0021BE  90D8               	bcf	status,0,c
  6282  0021C0  3233               	rrcf	(??___flmul+3)^0,f,c
  6283  0021C2  3232               	rrcf	(??___flmul+2)^0,f,c
  6284  0021C4  3231               	rrcf	(??___flmul+1)^0,f,c
  6285  0021C6  3230               	rrcf	??___flmul^0,f,c
  6286  0021C8                     u3930:
  6287  0021C8  2EE8               	decfsz	wreg,f,c
  6288  0021CA  EFDF  F010         	goto	u3935
  6289  0021CE  5030               	movf	??___flmul^0,w,c
  6290  0021D0  263B               	addwf	___flmul@prod^0,f,c
  6291  0021D2  5031               	movf	(??___flmul+1)^0,w,c
  6292  0021D4  223C               	addwfc	(___flmul@prod+1)^0,f,c
  6293  0021D6  5032               	movf	(??___flmul+2)^0,w,c
  6294  0021D8  223D               	addwfc	(___flmul@prod+2)^0,f,c
  6295  0021DA  5033               	movf	(??___flmul+3)^0,w,c
  6296  0021DC  223E               	addwfc	(___flmul@prod+3)^0,f,c
  6297  0021DE  C037  F038         	movff	___flmul@grs+2,___flmul@grs+3
  6298  0021E2  C036  F037         	movff	___flmul@grs+1,___flmul@grs+2
  6299  0021E6  C035  F036         	movff	___flmul@grs,___flmul@grs+1
  6300  0021EA  6A35               	clrf	___flmul@grs^0,c
  6301  0021EC  5039               	movf	___flmul@aexp^0,w,c
  6302  0021EE  C03A  F030         	movff	___flmul@bexp,??___flmul
  6303  0021F2  6A31               	clrf	(??___flmul+1)^0,c
  6304  0021F4  2630               	addwf	??___flmul^0,f,c
  6305  0021F6  0E00               	movlw	0
  6306  0021F8  2231               	addwfc	(??___flmul+1)^0,f,c
  6307  0021FA  0E82               	movlw	130
  6308  0021FC  2430               	addwf	??___flmul^0,w,c
  6309  0021FE  6E3F               	movwf	___flmul@temp^0,c
  6310  002200  0EFF               	movlw	255
  6311  002202  2031               	addwfc	(??___flmul+1)^0,w,c
  6312  002204  6E40               	movwf	(___flmul@temp+1)^0,c
  6313  002206  EF1A  F011         	goto	l4300
  6314  00220A                     l4294:
  6315  00220A  90D8               	bcf	status,0,c
  6316  00220C  363B               	rlcf	___flmul@prod^0,f,c
  6317  00220E  363C               	rlcf	(___flmul@prod+1)^0,f,c
  6318  002210  363D               	rlcf	(___flmul@prod+2)^0,f,c
  6319  002212  363E               	rlcf	(___flmul@prod+3)^0,f,c
  6320  002214  AE38               	btfss	(___flmul@grs+3)^0,7,c
  6321  002216  EF0F  F011         	goto	u3941
  6322  00221A  EF11  F011         	goto	u3940
  6323  00221E                     u3941:
  6324  00221E  EF12  F011         	goto	l1415
  6325  002222                     u3940:
  6326  002222  803B               	bsf	___flmul@prod^0,0,c
  6327  002224                     l1415:
  6328  002224  90D8               	bcf	status,0,c
  6329  002226  3635               	rlcf	___flmul@grs^0,f,c
  6330  002228  3636               	rlcf	(___flmul@grs+1)^0,f,c
  6331  00222A  3637               	rlcf	(___flmul@grs+2)^0,f,c
  6332  00222C  3638               	rlcf	(___flmul@grs+3)^0,f,c
  6333  00222E  063F               	decf	___flmul@temp^0,f,c
  6334  002230  A0D8               	btfss	status,0,c
  6335  002232  0640               	decf	(___flmul@temp+1)^0,f,c
  6336  002234                     l4300:
  6337  002234  AE3D               	btfss	(___flmul@prod+2)^0,7,c
  6338  002236  EF1F  F011         	goto	u3951
  6339  00223A  EF21  F011         	goto	u3950
  6340  00223E                     u3951:
  6341  00223E  EF05  F011         	goto	l4294
  6342  002242                     u3950:
  6343  002242  0E00               	movlw	0
  6344  002244  6E39               	movwf	___flmul@aexp^0,c
  6345  002246  AE38               	btfss	(___flmul@grs+3)^0,7,c
  6346  002248  EF28  F011         	goto	u3961
  6347  00224C  EF2A  F011         	goto	u3960
  6348  002250                     u3961:
  6349  002250  EF4E  F011         	goto	l1417
  6350  002254                     u3960:
  6351  002254  0EFF               	movlw	255
  6352  002256  1435               	andwf	___flmul@grs^0,w,c
  6353  002258  6E30               	movwf	??___flmul^0,c
  6354  00225A  0EFF               	movlw	255
  6355  00225C  1436               	andwf	(___flmul@grs+1)^0,w,c
  6356  00225E  6E31               	movwf	(??___flmul+1)^0,c
  6357  002260  0EFF               	movlw	255
  6358  002262  1437               	andwf	(___flmul@grs+2)^0,w,c
  6359  002264  6E32               	movwf	(??___flmul+2)^0,c
  6360  002266  0E7F               	movlw	127
  6361  002268  1438               	andwf	(___flmul@grs+3)^0,w,c
  6362  00226A  6E33               	movwf	(??___flmul+3)^0,c
  6363  00226C  5030               	movf	??___flmul^0,w,c
  6364  00226E  1031               	iorwf	(??___flmul+1)^0,w,c
  6365  002270  1032               	iorwf	(??___flmul+2)^0,w,c
  6366  002272  1033               	iorwf	(??___flmul+3)^0,w,c
  6367  002274  B4D8               	btfsc	status,2,c
  6368  002276  EF3F  F011         	goto	u3971
  6369  00227A  EF41  F011         	goto	u3970
  6370  00227E                     u3971:
  6371  00227E  EF45  F011         	goto	l1418
  6372  002282                     u3970:
  6373  002282                     l4308:
  6374  002282  0E01               	movlw	1
  6375  002284  6E39               	movwf	___flmul@aexp^0,c
  6376  002286  EF4E  F011         	goto	l1417
  6377  00228A                     l1418:
  6378  00228A  A03B               	btfss	___flmul@prod^0,0,c
  6379  00228C  EF4A  F011         	goto	u3981
  6380  002290  EF4C  F011         	goto	u3980
  6381  002294                     u3981:
  6382  002294  EF4E  F011         	goto	l1417
  6383  002298                     u3980:
  6384  002298  EF41  F011         	goto	l4308
  6385  00229C                     l1417:
  6386  00229C  5039               	movf	___flmul@aexp^0,w,c
  6387  00229E  B4D8               	btfsc	status,2,c
  6388  0022A0  EF54  F011         	goto	u3991
  6389  0022A4  EF56  F011         	goto	u3990
  6390  0022A8                     u3991:
  6391  0022A8  EF7A  F011         	goto	l4320
  6392  0022AC                     u3990:
  6393  0022AC  0E01               	movlw	1
  6394  0022AE  263B               	addwf	___flmul@prod^0,f,c
  6395  0022B0  0E00               	movlw	0
  6396  0022B2  223C               	addwfc	(___flmul@prod+1)^0,f,c
  6397  0022B4  223D               	addwfc	(___flmul@prod+2)^0,f,c
  6398  0022B6  223E               	addwfc	(___flmul@prod+3)^0,f,c
  6399  0022B8  A03E               	btfss	(___flmul@prod+3)^0,0,c
  6400  0022BA  EF61  F011         	goto	u4001
  6401  0022BE  EF63  F011         	goto	u4000
  6402  0022C2                     u4001:
  6403  0022C2  EF7A  F011         	goto	l4320
  6404  0022C6                     u4000:
  6405  0022C6  C03B  F030         	movff	___flmul@prod,??___flmul
  6406  0022CA  C03C  F031         	movff	___flmul@prod+1,??___flmul+1
  6407  0022CE  C03D  F032         	movff	___flmul@prod+2,??___flmul+2
  6408  0022D2  C03E  F033         	movff	___flmul@prod+3,??___flmul+3
  6409  0022D6  3433               	rlcf	(??___flmul+3)^0,w,c
  6410  0022D8  3233               	rrcf	(??___flmul+3)^0,f,c
  6411  0022DA  3232               	rrcf	(??___flmul+2)^0,f,c
  6412  0022DC  3231               	rrcf	(??___flmul+1)^0,f,c
  6413  0022DE  3230               	rrcf	??___flmul^0,f,c
  6414  0022E0  C030  F03B         	movff	??___flmul,___flmul@prod
  6415  0022E4  C031  F03C         	movff	??___flmul+1,___flmul@prod+1
  6416  0022E8  C032  F03D         	movff	??___flmul+2,___flmul@prod+2
  6417  0022EC  C033  F03E         	movff	??___flmul+3,___flmul@prod+3
  6418  0022F0  4A3F               	infsnz	___flmul@temp^0,f,c
  6419  0022F2  2A40               	incf	(___flmul@temp+1)^0,f,c
  6420  0022F4                     l4320:
  6421  0022F4  BE40               	btfsc	(___flmul@temp+1)^0,7,c
  6422  0022F6  EF85  F011         	goto	u4011
  6423  0022FA  5040               	movf	(___flmul@temp+1)^0,w,c
  6424  0022FC  E108               	bnz	u4010
  6425  0022FE  283F               	incf	___flmul@temp^0,w,c
  6426  002300  A0D8               	btfss	status,0,c
  6427  002302  EF85  F011         	goto	u4011
  6428  002306  EF87  F011         	goto	u4010
  6429  00230A                     u4011:
  6430  00230A  EF91  F011         	goto	l4324
  6431  00230E                     u4010:
  6432  00230E  0E00               	movlw	0
  6433  002310  6E3B               	movwf	___flmul@prod^0,c
  6434  002312  0E00               	movlw	0
  6435  002314  6E3C               	movwf	(___flmul@prod+1)^0,c
  6436  002316  0E80               	movlw	128
  6437  002318  6E3D               	movwf	(___flmul@prod+2)^0,c
  6438  00231A  0E7F               	movlw	127
  6439  00231C  6E3E               	movwf	(___flmul@prod+3)^0,c
  6440  00231E  EFBF  F011         	goto	l4336
  6441  002322                     l4324:
  6442  002322  BE40               	btfsc	(___flmul@temp+1)^0,7,c
  6443  002324  EF9E  F011         	goto	u4020
  6444  002328  5040               	movf	(___flmul@temp+1)^0,w,c
  6445  00232A  E106               	bnz	u4021
  6446  00232C  043F               	decf	___flmul@temp^0,w,c
  6447  00232E  B0D8               	btfsc	status,0,c
  6448  002330  EF9C  F011         	goto	u4021
  6449  002334  EF9E  F011         	goto	u4020
  6450  002338                     u4021:
  6451  002338  EFAA  F011         	goto	l1425
  6452  00233C                     u4020:
  6453  00233C  0E00               	movlw	0
  6454  00233E  6E3B               	movwf	___flmul@prod^0,c
  6455  002340  0E00               	movlw	0
  6456  002342  6E3C               	movwf	(___flmul@prod+1)^0,c
  6457  002344  0E00               	movlw	0
  6458  002346  6E3D               	movwf	(___flmul@prod+2)^0,c
  6459  002348  0E00               	movlw	0
  6460  00234A  6E3E               	movwf	(___flmul@prod+3)^0,c
  6461  00234C  0E00               	movlw	0
  6462  00234E  6E34               	movwf	___flmul@sign^0,c
  6463  002350  EFBF  F011         	goto	l4336
  6464  002354                     l1425:
  6465  002354  C03F  F03A         	movff	___flmul@temp,___flmul@bexp
  6466  002358  0EFF               	movlw	255
  6467  00235A  163B               	andwf	___flmul@prod^0,f,c
  6468  00235C  0EFF               	movlw	255
  6469  00235E  163C               	andwf	(___flmul@prod+1)^0,f,c
  6470  002360  0E7F               	movlw	127
  6471  002362  163D               	andwf	(___flmul@prod+2)^0,f,c
  6472  002364  0E00               	movlw	0
  6473  002366  163E               	andwf	(___flmul@prod+3)^0,f,c
  6474  002368  A03A               	btfss	___flmul@bexp^0,0,c
  6475  00236A  EFB9  F011         	goto	u4031
  6476  00236E  EFBB  F011         	goto	u4030
  6477  002372                     u4031:
  6478  002372  EFBC  F011         	goto	l4334
  6479  002376                     u4030:
  6480  002376  8E3D               	bsf	(___flmul@prod+2)^0,7,c
  6481  002378                     l4334:
  6482  002378  90D8               	bcf	status,0,c
  6483  00237A  303A               	rrcf	___flmul@bexp^0,w,c
  6484  00237C  6E3E               	movwf	(___flmul@prod+3)^0,c
  6485  00237E                     l4336:
  6486  00237E  5034               	movf	___flmul@sign^0,w,c
  6487  002380  123E               	iorwf	(___flmul@prod+3)^0,f,c
  6488  002382  C03B  F028         	movff	___flmul@prod,?___flmul
  6489  002386  C03C  F029         	movff	___flmul@prod+1,?___flmul+1
  6490  00238A  C03D  F02A         	movff	___flmul@prod+2,?___flmul+2
  6491  00238E  C03E  F02B         	movff	___flmul@prod+3,?___flmul+3
  6492  002392                     l1412:
  6493  002392  0012               	return		;funcret
  6494  002394                     __end_of___flmul:
  6495                           	callstack 0
  6496                           
  6497 ;; *************** function ___flge *****************
  6498 ;; Defined at:
  6499 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\flge.c"
  6500 ;; Parameters:    Size  Location     Type
  6501 ;;  ff1             4    0[COMRAM] unsigned char 
  6502 ;;  ff2             4    4[COMRAM] unsigned char 
  6503 ;; Auto vars:     Size  Location     Type
  6504 ;;		None
  6505 ;; Return value:  Size  Location     Type
  6506 ;;		None               void
  6507 ;; Registers used:
  6508 ;;		wreg, status,2, status,0
  6509 ;; Tracked objects:
  6510 ;;		On entry : 0/0
  6511 ;;		On exit  : 0/0
  6512 ;;		Unchanged: 0/0
  6513 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6514 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6515 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6516 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6517 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6518 ;;Total ram usage:       12 bytes
  6519 ;; Hardware stack levels used: 1
  6520 ;; Hardware stack levels required when called: 1
  6521 ;; This function calls:
  6522 ;;		Nothing
  6523 ;; This function is called by:
  6524 ;;		_roundf
  6525 ;; This function uses a non-reentrant model
  6526 ;;
  6527                           
  6528                           	psect	text24
  6529  00497C                     __ptext24:
  6530                           	callstack 0
  6531  00497C                     ___flge:
  6532                           	callstack 25
  6533  00497C  0E00               	movlw	0
  6534  00497E  1401               	andwf	___flge@ff1^0,w,c
  6535  004980  6E09               	movwf	??___flge^0,c
  6536  004982  0E00               	movlw	0
  6537  004984  1402               	andwf	(___flge@ff1+1)^0,w,c
  6538  004986  6E0A               	movwf	(??___flge+1)^0,c
  6539  004988  0E80               	movlw	128
  6540  00498A  1403               	andwf	(___flge@ff1+2)^0,w,c
  6541  00498C  6E0B               	movwf	(??___flge+2)^0,c
  6542  00498E  0E7F               	movlw	127
  6543  004990  1404               	andwf	(___flge@ff1+3)^0,w,c
  6544  004992  6E0C               	movwf	(??___flge+3)^0,c
  6545  004994  5009               	movf	??___flge^0,w,c
  6546  004996  100A               	iorwf	(??___flge+1)^0,w,c
  6547  004998  100B               	iorwf	(??___flge+2)^0,w,c
  6548  00499A  100C               	iorwf	(??___flge+3)^0,w,c
  6549  00499C  A4D8               	btfss	status,2,c
  6550  00499E  EFD3  F024         	goto	u4041
  6551  0049A2  EFD5  F024         	goto	u4040
  6552  0049A6                     u4041:
  6553  0049A6  EFDD  F024         	goto	l4352
  6554  0049AA                     u4040:
  6555  0049AA  0E00               	movlw	0
  6556  0049AC  6E01               	movwf	___flge@ff1^0,c
  6557  0049AE  0E00               	movlw	0
  6558  0049B0  6E02               	movwf	(___flge@ff1+1)^0,c
  6559  0049B2  0E00               	movlw	0
  6560  0049B4  6E03               	movwf	(___flge@ff1+2)^0,c
  6561  0049B6  0E00               	movlw	0
  6562  0049B8  6E04               	movwf	(___flge@ff1+3)^0,c
  6563  0049BA                     l4352:
  6564  0049BA  0E00               	movlw	0
  6565  0049BC  1405               	andwf	___flge@ff2^0,w,c
  6566  0049BE  6E09               	movwf	??___flge^0,c
  6567  0049C0  0E00               	movlw	0
  6568  0049C2  1406               	andwf	(___flge@ff2+1)^0,w,c
  6569  0049C4  6E0A               	movwf	(??___flge+1)^0,c
  6570  0049C6  0E80               	movlw	128
  6571  0049C8  1407               	andwf	(___flge@ff2+2)^0,w,c
  6572  0049CA  6E0B               	movwf	(??___flge+2)^0,c
  6573  0049CC  0E7F               	movlw	127
  6574  0049CE  1408               	andwf	(___flge@ff2+3)^0,w,c
  6575  0049D0  6E0C               	movwf	(??___flge+3)^0,c
  6576  0049D2  5009               	movf	??___flge^0,w,c
  6577  0049D4  100A               	iorwf	(??___flge+1)^0,w,c
  6578  0049D6  100B               	iorwf	(??___flge+2)^0,w,c
  6579  0049D8  100C               	iorwf	(??___flge+3)^0,w,c
  6580  0049DA  A4D8               	btfss	status,2,c
  6581  0049DC  EFF2  F024         	goto	u4051
  6582  0049E0  EFF4  F024         	goto	u4050
  6583  0049E4                     u4051:
  6584  0049E4  EFFC  F024         	goto	l4356
  6585  0049E8                     u4050:
  6586  0049E8  0E00               	movlw	0
  6587  0049EA  6E05               	movwf	___flge@ff2^0,c
  6588  0049EC  0E00               	movlw	0
  6589  0049EE  6E06               	movwf	(___flge@ff2+1)^0,c
  6590  0049F0  0E00               	movlw	0
  6591  0049F2  6E07               	movwf	(___flge@ff2+2)^0,c
  6592  0049F4  0E00               	movlw	0
  6593  0049F6  6E08               	movwf	(___flge@ff2+3)^0,c
  6594  0049F8                     l4356:
  6595  0049F8  AE04               	btfss	(___flge@ff1+3)^0,7,c
  6596  0049FA  EF01  F025         	goto	u4061
  6597  0049FE  EF03  F025         	goto	u4060
  6598  004A02                     u4061:
  6599  004A02  EF0C  F025         	goto	l4360
  6600  004A06                     u4060:
  6601  004A06  6C01               	negf	___flge@ff1^0,c
  6602  004A08  1E02               	comf	(___flge@ff1+1)^0,f,c
  6603  004A0A  B0D8               	btfsc	status,0,c
  6604  004A0C  2A02               	incf	(___flge@ff1+1)^0,f,c
  6605  004A0E  1E03               	comf	(___flge@ff1+2)^0,f,c
  6606  004A10  B0D8               	btfsc	status,0,c
  6607  004A12  2A03               	incf	(___flge@ff1+2)^0,f,c
  6608  004A14  0E80               	movlw	128
  6609  004A16  5604               	subfwb	(___flge@ff1+3)^0,f,c
  6610  004A18                     l4360:
  6611  004A18  AE08               	btfss	(___flge@ff2+3)^0,7,c
  6612  004A1A  EF11  F025         	goto	u4071
  6613  004A1E  EF13  F025         	goto	u4070
  6614  004A22                     u4071:
  6615  004A22  EF1C  F025         	goto	l1059
  6616  004A26                     u4070:
  6617  004A26  6C05               	negf	___flge@ff2^0,c
  6618  004A28  1E06               	comf	(___flge@ff2+1)^0,f,c
  6619  004A2A  B0D8               	btfsc	status,0,c
  6620  004A2C  2A06               	incf	(___flge@ff2+1)^0,f,c
  6621  004A2E  1E07               	comf	(___flge@ff2+2)^0,f,c
  6622  004A30  B0D8               	btfsc	status,0,c
  6623  004A32  2A07               	incf	(___flge@ff2+2)^0,f,c
  6624  004A34  0E80               	movlw	128
  6625  004A36  5608               	subfwb	(___flge@ff2+3)^0,f,c
  6626  004A38                     l1059:
  6627  004A38  0E00               	movlw	0
  6628  004A3A  1A01               	xorwf	___flge@ff1^0,f,c
  6629  004A3C  0E00               	movlw	0
  6630  004A3E  1A02               	xorwf	(___flge@ff1+1)^0,f,c
  6631  004A40  0E00               	movlw	0
  6632  004A42  1A03               	xorwf	(___flge@ff1+2)^0,f,c
  6633  004A44  0E80               	movlw	128
  6634  004A46  1A04               	xorwf	(___flge@ff1+3)^0,f,c
  6635  004A48  0E00               	movlw	0
  6636  004A4A  1A05               	xorwf	___flge@ff2^0,f,c
  6637  004A4C  0E00               	movlw	0
  6638  004A4E  1A06               	xorwf	(___flge@ff2+1)^0,f,c
  6639  004A50  0E00               	movlw	0
  6640  004A52  1A07               	xorwf	(___flge@ff2+2)^0,f,c
  6641  004A54  0E80               	movlw	128
  6642  004A56  1A08               	xorwf	(___flge@ff2+3)^0,f,c
  6643  004A58  5005               	movf	___flge@ff2^0,w,c
  6644  004A5A  5C01               	subwf	___flge@ff1^0,w,c
  6645  004A5C  5006               	movf	(___flge@ff2+1)^0,w,c
  6646  004A5E  5802               	subwfb	(___flge@ff1+1)^0,w,c
  6647  004A60  5007               	movf	(___flge@ff2+2)^0,w,c
  6648  004A62  5803               	subwfb	(___flge@ff1+2)^0,w,c
  6649  004A64  5008               	movf	(___flge@ff2+3)^0,w,c
  6650  004A66  5804               	subwfb	(___flge@ff1+3)^0,w,c
  6651  004A68  B0D8               	btfsc	status,0,c
  6652  004A6A  EF39  F025         	goto	u4081
  6653  004A6E  EF3B  F025         	goto	u4080
  6654  004A72                     u4081:
  6655  004A72  EF3E  F025         	goto	l4366
  6656  004A76                     u4080:
  6657  004A76  90D8               	bcf	status,0,c
  6658  004A78  EF3F  F025         	goto	l1064
  6659  004A7C                     l4366:
  6660  004A7C  80D8               	bsf	status,0,c
  6661  004A7E                     l1064:
  6662  004A7E  0012               	return		;funcret
  6663  004A80                     __end_of___flge:
  6664                           	callstack 0
  6665                           
  6666 ;; *************** function ___fltol *****************
  6667 ;; Defined at:
  6668 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\fltol.c"
  6669 ;; Parameters:    Size  Location     Type
  6670 ;;  f1              4   90[COMRAM] unsigned char 
  6671 ;; Auto vars:     Size  Location     Type
  6672 ;;  exp1            1    5[BANK0 ] unsigned char 
  6673 ;;  sign1           1    4[BANK0 ] unsigned char 
  6674 ;; Return value:  Size  Location     Type
  6675 ;;                  4   90[COMRAM] long 
  6676 ;; Registers used:
  6677 ;;		wreg, status,2, status,0
  6678 ;; Tracked objects:
  6679 ;;		On entry : 0/0
  6680 ;;		On exit  : 0/0
  6681 ;;		Unchanged: 0/0
  6682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6683 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6684 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6685 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6686 ;;      Totals:         4       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6687 ;;Total ram usage:       10 bytes
  6688 ;; Hardware stack levels used: 1
  6689 ;; Hardware stack levels required when called: 1
  6690 ;; This function calls:
  6691 ;;		Nothing
  6692 ;; This function is called by:
  6693 ;;		_lroundf
  6694 ;; This function uses a non-reentrant model
  6695 ;;
  6696                           
  6697                           	psect	text25
  6698  004874                     __ptext25:
  6699                           	callstack 0
  6700  004874                     ___fltol:
  6701                           	callstack 26
  6702  004874  345D               	rlcf	(___fltol@f1+2)^0,w,c
  6703  004876  345E               	rlcf	(___fltol@f1+3)^0,w,c
  6704  004878  0100               	movlb	0	; () banked
  6705  00487A  6F65               	movwf	___fltol@exp1& (0+255),b
  6706  00487C  5165               	movf	___fltol@exp1& (0+255),w,b
  6707  00487E  A4D8               	btfss	status,2,c
  6708  004880  EF44  F024         	goto	u4141
  6709  004884  EF46  F024         	goto	u4140
  6710  004888                     u4141:
  6711  004888  EF50  F024         	goto	l4454
  6712  00488C                     u4140:
  6713  00488C                     l4450:
  6714                           
  6715                           ; BSR set to: 0
  6716  00488C  0E00               	movlw	0
  6717  00488E  6E5B               	movwf	?___fltol^0,c
  6718  004890  0E00               	movlw	0
  6719  004892  6E5C               	movwf	(?___fltol+1)^0,c
  6720  004894  0E00               	movlw	0
  6721  004896  6E5D               	movwf	(?___fltol+2)^0,c
  6722  004898  0E00               	movlw	0
  6723  00489A  6E5E               	movwf	(?___fltol+3)^0,c
  6724  00489C  EFBD  F024         	goto	l1091
  6725  0048A0                     l4454:
  6726                           
  6727                           ; BSR set to: 0
  6728  0048A0  C05B  F060         	movff	___fltol@f1,??___fltol
  6729  0048A4  C05C  F061         	movff	___fltol@f1+1,??___fltol+1
  6730  0048A8  C05D  F062         	movff	___fltol@f1+2,??___fltol+2
  6731  0048AC  C05E  F063         	movff	___fltol@f1+3,??___fltol+3
  6732  0048B0  0E20               	movlw	32
  6733  0048B2  EF60  F024         	goto	u4150
  6734  0048B6                     u4155:
  6735  0048B6  90D8               	bcf	status,0,c
  6736  0048B8  3363               	rrcf	(??___fltol+3)& (0+255),f,b
  6737  0048BA  3362               	rrcf	(??___fltol+2)& (0+255),f,b
  6738  0048BC  3361               	rrcf	(??___fltol+1)& (0+255),f,b
  6739  0048BE  3360               	rrcf	??___fltol& (0+255),f,b
  6740  0048C0                     u4150:
  6741  0048C0  2EE8               	decfsz	wreg,f,c
  6742  0048C2  EF5B  F024         	goto	u4155
  6743  0048C6  5160               	movf	??___fltol& (0+255),w,b
  6744  0048C8  6F64               	movwf	___fltol@sign1& (0+255),b
  6745  0048CA                     
  6746                           ; BSR set to: 0
  6747  0048CA  8E5D               	bsf	(___fltol@f1+2)^0,7,c
  6748  0048CC                     
  6749                           ; BSR set to: 0
  6750  0048CC  0EFF               	movlw	255
  6751  0048CE  165B               	andwf	___fltol@f1^0,f,c
  6752  0048D0  0EFF               	movlw	255
  6753  0048D2  165C               	andwf	(___fltol@f1+1)^0,f,c
  6754  0048D4  0EFF               	movlw	255
  6755  0048D6  165D               	andwf	(___fltol@f1+2)^0,f,c
  6756  0048D8  0E00               	movlw	0
  6757  0048DA  165E               	andwf	(___fltol@f1+3)^0,f,c
  6758  0048DC                     
  6759                           ; BSR set to: 0
  6760  0048DC  0E96               	movlw	150
  6761  0048DE  5F65               	subwf	___fltol@exp1& (0+255),f,b
  6762  0048E0                     
  6763                           ; BSR set to: 0
  6764  0048E0  BF65               	btfsc	___fltol@exp1& (0+255),7,b
  6765  0048E2  EF77  F024         	goto	u4160
  6766  0048E6  EF75  F024         	goto	u4161
  6767  0048EA                     u4161:
  6768  0048EA  EF8D  F024         	goto	l4474
  6769  0048EE                     u4160:
  6770  0048EE                     
  6771                           ; BSR set to: 0
  6772  0048EE  5165               	movf	___fltol@exp1& (0+255),w,b
  6773  0048F0  0A80               	xorlw	128
  6774  0048F2  0F97               	addlw	151
  6775  0048F4  B0D8               	btfsc	status,0,c
  6776  0048F6  EF7F  F024         	goto	u4171
  6777  0048FA  EF81  F024         	goto	u4170
  6778  0048FE                     u4171:
  6779  0048FE  EF83  F024         	goto	l4470
  6780  004902                     u4170:
  6781  004902  EF46  F024         	goto	l4450
  6782  004906                     l4470:
  6783                           
  6784                           ; BSR set to: 0
  6785  004906  90D8               	bcf	status,0,c
  6786  004908  325E               	rrcf	(___fltol@f1+3)^0,f,c
  6787  00490A  325D               	rrcf	(___fltol@f1+2)^0,f,c
  6788  00490C  325C               	rrcf	(___fltol@f1+1)^0,f,c
  6789  00490E  325B               	rrcf	___fltol@f1^0,f,c
  6790  004910                     
  6791                           ; BSR set to: 0
  6792  004910  3F65               	incfsz	___fltol@exp1& (0+255),f,b
  6793  004912  EF83  F024         	goto	l4470
  6794  004916  EFA5  F024         	goto	l4484
  6795  00491A                     l4474:
  6796                           
  6797                           ; BSR set to: 0
  6798  00491A  0E1F               	movlw	31
  6799  00491C  6565               	cpfsgt	___fltol@exp1& (0+255),b
  6800  00491E  EF93  F024         	goto	u4181
  6801  004922  EF95  F024         	goto	u4180
  6802  004926                     u4181:
  6803  004926  EF9D  F024         	goto	l4482
  6804  00492A                     u4180:
  6805  00492A  EF46  F024         	goto	l4450
  6806  00492E                     l4480:
  6807                           
  6808                           ; BSR set to: 0
  6809  00492E  90D8               	bcf	status,0,c
  6810  004930  365B               	rlcf	___fltol@f1^0,f,c
  6811  004932  365C               	rlcf	(___fltol@f1+1)^0,f,c
  6812  004934  365D               	rlcf	(___fltol@f1+2)^0,f,c
  6813  004936  365E               	rlcf	(___fltol@f1+3)^0,f,c
  6814  004938  0765               	decf	___fltol@exp1& (0+255),f,b
  6815  00493A                     l4482:
  6816                           
  6817                           ; BSR set to: 0
  6818  00493A  5165               	movf	___fltol@exp1& (0+255),w,b
  6819  00493C  A4D8               	btfss	status,2,c
  6820  00493E  EFA3  F024         	goto	u4191
  6821  004942  EFA5  F024         	goto	u4190
  6822  004946                     u4191:
  6823  004946  EF97  F024         	goto	l4480
  6824  00494A                     u4190:
  6825  00494A                     l4484:
  6826                           
  6827                           ; BSR set to: 0
  6828  00494A  5164               	movf	___fltol@sign1& (0+255),w,b
  6829  00494C  B4D8               	btfsc	status,2,c
  6830  00494E  EFAB  F024         	goto	u4201
  6831  004952  EFAD  F024         	goto	u4200
  6832  004956                     u4201:
  6833  004956  EFB5  F024         	goto	l4488
  6834  00495A                     u4200:
  6835  00495A                     
  6836                           ; BSR set to: 0
  6837  00495A  1E5E               	comf	(___fltol@f1+3)^0,f,c
  6838  00495C  1E5D               	comf	(___fltol@f1+2)^0,f,c
  6839  00495E  1E5C               	comf	(___fltol@f1+1)^0,f,c
  6840  004960  6C5B               	negf	___fltol@f1^0,c
  6841  004962  0E00               	movlw	0
  6842  004964  225C               	addwfc	(___fltol@f1+1)^0,f,c
  6843  004966  225D               	addwfc	(___fltol@f1+2)^0,f,c
  6844  004968  225E               	addwfc	(___fltol@f1+3)^0,f,c
  6845  00496A                     l4488:
  6846                           
  6847                           ; BSR set to: 0
  6848  00496A  C05B  F05B         	movff	___fltol@f1,?___fltol
  6849  00496E  C05C  F05C         	movff	___fltol@f1+1,?___fltol+1
  6850  004972  C05D  F05D         	movff	___fltol@f1+2,?___fltol+2
  6851  004976  C05E  F05E         	movff	___fltol@f1+3,?___fltol+3
  6852  00497A                     l1091:
  6853                           
  6854                           ; BSR set to: 0
  6855  00497A  0012               	return		;funcret
  6856  00497C                     __end_of___fltol:
  6857                           	callstack 0
  6858                           
  6859 ;; *************** function _color_read_Clear *****************
  6860 ;; Defined at:
  6861 ;;		line 133 in file "color.c"
  6862 ;; Parameters:    Size  Location     Type
  6863 ;;		None
  6864 ;; Auto vars:     Size  Location     Type
  6865 ;;  tmp             2    9[COMRAM] unsigned int 
  6866 ;; Return value:  Size  Location     Type
  6867 ;;                  2    4[COMRAM] unsigned int 
  6868 ;; Registers used:
  6869 ;;		wreg, status,2, status,0, cstack
  6870 ;; Tracked objects:
  6871 ;;		On entry : 0/0
  6872 ;;		On exit  : 0/0
  6873 ;;		Unchanged: 0/0
  6874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6875 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6876 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6877 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6878 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6879 ;;Total ram usage:        7 bytes
  6880 ;; Hardware stack levels used: 1
  6881 ;; Hardware stack levels required when called: 3
  6882 ;; This function calls:
  6883 ;;		_I2C_2_Master_Read
  6884 ;;		_I2C_2_Master_RepStart
  6885 ;;		_I2C_2_Master_Start
  6886 ;;		_I2C_2_Master_Stop
  6887 ;;		_I2C_2_Master_Write
  6888 ;; This function is called by:
  6889 ;;		_read_color
  6890 ;;		_calibrate_white
  6891 ;;		_amb_light_measure
  6892 ;;		_distance_measure
  6893 ;; This function uses a non-reentrant model
  6894 ;;
  6895                           
  6896                           	psect	text26
  6897  00554C                     __ptext26:
  6898                           	callstack 0
  6899  00554C                     _color_read_Clear:
  6900                           	callstack 24
  6901  00554C                     
  6902                           ;color.c: 135:  unsigned int tmp;;color.c: 136:  I2C_2_Master_Start();
  6903  00554C  EC66  F02D         	call	_I2C_2_Master_Start	;wreg free
  6904                           
  6905                           ;color.c: 137:  I2C_2_Master_Write(0x52 | 0x00);
  6906  005550  0E52               	movlw	82
  6907  005552  EC50  F02D         	call	_I2C_2_Master_Write
  6908                           
  6909                           ;color.c: 138:  I2C_2_Master_Write(0xA0 | 0x14);
  6910  005556  0EB4               	movlw	180
  6911  005558  EC50  F02D         	call	_I2C_2_Master_Write
  6912                           
  6913                           ;color.c: 139:  I2C_2_Master_RepStart();
  6914  00555C  EC5C  F02D         	call	_I2C_2_Master_RepStart	;wreg free
  6915                           
  6916                           ;color.c: 140:  I2C_2_Master_Write(0x52 | 0x01);
  6917  005560  0E53               	movlw	83
  6918  005562  EC50  F02D         	call	_I2C_2_Master_Write
  6919                           
  6920                           ;color.c: 141:  tmp=I2C_2_Master_Read(1);
  6921  005566  0E01               	movlw	1
  6922  005568  EC13  F02B         	call	_I2C_2_Master_Read
  6923  00556C  6E07               	movwf	??_color_read_Clear^0,c
  6924  00556E  5007               	movf	??_color_read_Clear^0,w,c
  6925  005570  6E0A               	movwf	color_read_Clear@tmp^0,c
  6926  005572  6A0B               	clrf	(color_read_Clear@tmp+1)^0,c
  6927                           
  6928                           ;color.c: 142:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  6929  005574  0E00               	movlw	0
  6930  005576  EC13  F02B         	call	_I2C_2_Master_Read
  6931  00557A  6E07               	movwf	??_color_read_Clear^0,c
  6932  00557C  5007               	movf	??_color_read_Clear^0,w,c
  6933  00557E  6E09               	movwf	(??_color_read_Clear+2)^0,c
  6934  005580  6A08               	clrf	(??_color_read_Clear+1)^0,c
  6935  005582  500A               	movf	color_read_Clear@tmp^0,w,c
  6936  005584  1008               	iorwf	(??_color_read_Clear+1)^0,w,c
  6937  005586  6E0A               	movwf	color_read_Clear@tmp^0,c
  6938  005588  500B               	movf	(color_read_Clear@tmp+1)^0,w,c
  6939  00558A  1009               	iorwf	(??_color_read_Clear+2)^0,w,c
  6940  00558C  6E0B               	movwf	(color_read_Clear@tmp+1)^0,c
  6941                           
  6942                           ;color.c: 143:  I2C_2_Master_Stop();
  6943  00558E  EC61  F02D         	call	_I2C_2_Master_Stop	;wreg free
  6944  005592                     
  6945                           ;color.c: 144:  return tmp;
  6946  005592  C00A  F005         	movff	color_read_Clear@tmp,?_color_read_Clear
  6947  005596  C00B  F006         	movff	color_read_Clear@tmp+1,?_color_read_Clear+1
  6948  00559A  0012               	return		;funcret
  6949  00559C                     __end_of_color_read_Clear:
  6950                           	callstack 0
  6951                           
  6952 ;; *************** function _I2C_2_Master_RepStart *****************
  6953 ;; Defined at:
  6954 ;;		line 33 in file "i2c.c"
  6955 ;; Parameters:    Size  Location     Type
  6956 ;;		None
  6957 ;; Auto vars:     Size  Location     Type
  6958 ;;		None
  6959 ;; Return value:  Size  Location     Type
  6960 ;;                  1    wreg      void 
  6961 ;; Registers used:
  6962 ;;		wreg, status,2, status,0, cstack
  6963 ;; Tracked objects:
  6964 ;;		On entry : 0/0
  6965 ;;		On exit  : 0/0
  6966 ;;		Unchanged: 0/0
  6967 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6968 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6969 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6970 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6971 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6972 ;;Total ram usage:        0 bytes
  6973 ;; Hardware stack levels used: 1
  6974 ;; Hardware stack levels required when called: 2
  6975 ;; This function calls:
  6976 ;;		_I2C_2_Master_Idle
  6977 ;; This function is called by:
  6978 ;;		_color_read_Red
  6979 ;;		_color_read_Blue
  6980 ;;		_color_read_Green
  6981 ;;		_color_read_Clear
  6982 ;; This function uses a non-reentrant model
  6983 ;;
  6984                           
  6985                           	psect	text27
  6986  005AB8                     __ptext27:
  6987                           	callstack 0
  6988  005AB8                     _I2C_2_Master_RepStart:
  6989                           	callstack 24
  6990  005AB8                     
  6991                           ;i2c.c: 35:   I2C_2_Master_Idle();
  6992  005AB8  EC84  F02C         	call	_I2C_2_Master_Idle	;wreg free
  6993  005ABC                     
  6994                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  6995  005ABC  010E               	movlb	14	; () banked
  6996  005ABE  83DA               	bsf	218,1,b	;volatile
  6997  005AC0                     
  6998                           ; BSR set to: 14
  6999  005AC0  0012               	return		;funcret
  7000  005AC2                     __end_of_I2C_2_Master_RepStart:
  7001                           	callstack 0
  7002                           
  7003 ;; *************** function _I2C_2_Master_Read *****************
  7004 ;; Defined at:
  7005 ;;		line 51 in file "i2c.c"
  7006 ;; Parameters:    Size  Location     Type
  7007 ;;  ack             1    wreg     unsigned char 
  7008 ;; Auto vars:     Size  Location     Type
  7009 ;;  ack             1    2[COMRAM] unsigned char 
  7010 ;;  tmp             1    3[COMRAM] unsigned char 
  7011 ;; Return value:  Size  Location     Type
  7012 ;;                  1    wreg      unsigned char 
  7013 ;; Registers used:
  7014 ;;		wreg, status,2, status,0, cstack
  7015 ;; Tracked objects:
  7016 ;;		On entry : 0/0
  7017 ;;		On exit  : 0/0
  7018 ;;		Unchanged: 0/0
  7019 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7020 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7021 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7022 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7023 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7024 ;;Total ram usage:        3 bytes
  7025 ;; Hardware stack levels used: 1
  7026 ;; Hardware stack levels required when called: 2
  7027 ;; This function calls:
  7028 ;;		_I2C_2_Master_Idle
  7029 ;; This function is called by:
  7030 ;;		_color_read_Red
  7031 ;;		_color_read_Blue
  7032 ;;		_color_read_Green
  7033 ;;		_color_read_Clear
  7034 ;; This function uses a non-reentrant model
  7035 ;;
  7036                           
  7037                           	psect	text28
  7038  005626                     __ptext28:
  7039                           	callstack 0
  7040  005626                     _I2C_2_Master_Read:
  7041                           	callstack 24
  7042                           
  7043                           ; BSR set to: 14
  7044                           ;incstack = 0
  7045                           ;I2C_2_Master_Read@ack stored from wreg
  7046  005626  6E03               	movwf	I2C_2_Master_Read@ack^0,c
  7047  005628                     
  7048                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  7049  005628  EC84  F02C         	call	_I2C_2_Master_Idle	;wreg free
  7050  00562C                     
  7051                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  7052  00562C  010E               	movlb	14	; () banked
  7053  00562E  87DA               	bsf	218,3,b	;volatile
  7054                           
  7055                           ;i2c.c: 56:   I2C_2_Master_Idle();
  7056  005630  EC84  F02C         	call	_I2C_2_Master_Idle	;wreg free
  7057  005634                     
  7058                           ;i2c.c: 57:   tmp = SSP2BUF;
  7059  005634  CED5 F004          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  7060                           
  7061                           ;i2c.c: 58:   I2C_2_Master_Idle();
  7062  005638  EC84  F02C         	call	_I2C_2_Master_Idle	;wreg free
  7063  00563C                     
  7064                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  7065  00563C  5003               	movf	I2C_2_Master_Read@ack^0,w,c
  7066  00563E  B4D8               	btfsc	status,2,c
  7067  005640  EF24  F02B         	goto	u3781
  7068  005644  EF28  F02B         	goto	u3780
  7069  005648                     u3781:
  7070  005648  6A02               	clrf	??_I2C_2_Master_Read^0,c
  7071  00564A  2A02               	incf	??_I2C_2_Master_Read^0,f,c
  7072  00564C  EF29  F02B         	goto	u3798
  7073  005650                     u3780:
  7074  005650  6A02               	clrf	??_I2C_2_Master_Read^0,c
  7075  005652                     u3798:
  7076  005652  3A02               	swapf	??_I2C_2_Master_Read^0,f,c
  7077  005654  4602               	rlncf	??_I2C_2_Master_Read^0,f,c
  7078  005656  010E               	movlb	14	; () banked
  7079  005658  51DA               	movf	218,w,b	;volatile
  7080  00565A  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  7081  00565C  0BDF               	andlw	-33
  7082  00565E  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  7083  005660  6FDA               	movwf	218,b	;volatile
  7084  005662                     
  7085                           ; BSR set to: 14
  7086                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  7087  005662  89DA               	bsf	218,4,b	;volatile
  7088  005664                     
  7089                           ; BSR set to: 14
  7090                           ;i2c.c: 61:   return tmp;
  7091  005664  5004               	movf	I2C_2_Master_Read@tmp^0,w,c
  7092  005666                     
  7093                           ; BSR set to: 14
  7094  005666  0012               	return		;funcret
  7095  005668                     __end_of_I2C_2_Master_Read:
  7096                           	callstack 0
  7097                           
  7098 ;; *************** function ___xxtofl *****************
  7099 ;; Defined at:
  7100 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\xxtofl.c"
  7101 ;; Parameters:    Size  Location     Type
  7102 ;;  sign            1    wreg     unsigned char 
  7103 ;;  val             4    0[COMRAM] long 
  7104 ;; Auto vars:     Size  Location     Type
  7105 ;;  sign            1    8[COMRAM] unsigned char 
  7106 ;;  arg             4   10[COMRAM] unsigned long 
  7107 ;;  exp             1    9[COMRAM] unsigned char 
  7108 ;; Return value:  Size  Location     Type
  7109 ;;                  4    0[COMRAM] unsigned char 
  7110 ;; Registers used:
  7111 ;;		wreg, status,2, status,0
  7112 ;; Tracked objects:
  7113 ;;		On entry : 0/0
  7114 ;;		On exit  : 0/0
  7115 ;;		Unchanged: 0/0
  7116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7117 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7118 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7119 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7120 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7121 ;;Total ram usage:       14 bytes
  7122 ;; Hardware stack levels used: 1
  7123 ;; Hardware stack levels required when called: 1
  7124 ;; This function calls:
  7125 ;;		Nothing
  7126 ;; This function is called by:
  7127 ;;		_detect_color
  7128 ;;		_amb_light_measure
  7129 ;;		_distance_measure
  7130 ;;		_check_color_reading
  7131 ;; This function uses a non-reentrant model
  7132 ;;
  7133                           
  7134                           	psect	text29
  7135  003ABC                     __ptext29:
  7136                           	callstack 0
  7137  003ABC                     ___xxtofl:
  7138                           	callstack 27
  7139                           
  7140                           ; BSR set to: 14
  7141                           ;incstack = 0
  7142                           ;___xxtofl@sign stored from wreg
  7143  003ABC  6E09               	movwf	___xxtofl@sign^0,c
  7144  003ABE  5009               	movf	___xxtofl@sign^0,w,c
  7145  003AC0  B4D8               	btfsc	status,2,c
  7146  003AC2  EF65  F01D         	goto	u4971
  7147  003AC6  EF67  F01D         	goto	u4970
  7148  003ACA                     u4971:
  7149  003ACA  EF89  F01D         	goto	l1449
  7150  003ACE                     u4970:
  7151  003ACE  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  7152  003AD0  EF6E  F01D         	goto	u4980
  7153  003AD4  EF6C  F01D         	goto	u4981
  7154  003AD8                     u4981:
  7155  003AD8  EF89  F01D         	goto	l1449
  7156  003ADC                     u4980:
  7157  003ADC  C001  F005         	movff	___xxtofl@val,??___xxtofl
  7158  003AE0  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
  7159  003AE4  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
  7160  003AE8  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
  7161  003AEC  1E05               	comf	??___xxtofl^0,f,c
  7162  003AEE  1E06               	comf	(??___xxtofl+1)^0,f,c
  7163  003AF0  1E07               	comf	(??___xxtofl+2)^0,f,c
  7164  003AF2  1E08               	comf	(??___xxtofl+3)^0,f,c
  7165  003AF4  2A05               	incf	??___xxtofl^0,f,c
  7166  003AF6  0E00               	movlw	0
  7167  003AF8  2206               	addwfc	(??___xxtofl+1)^0,f,c
  7168  003AFA  2207               	addwfc	(??___xxtofl+2)^0,f,c
  7169  003AFC  2208               	addwfc	(??___xxtofl+3)^0,f,c
  7170  003AFE  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
  7171  003B02  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
  7172  003B06  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
  7173  003B0A  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
  7174  003B0E  EF91  F01D         	goto	l4866
  7175  003B12                     l1449:
  7176  003B12  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
  7177  003B16  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  7178  003B1A  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  7179  003B1E  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  7180  003B22                     l4866:
  7181  003B22  5001               	movf	___xxtofl@val^0,w,c
  7182  003B24  1002               	iorwf	(___xxtofl@val+1)^0,w,c
  7183  003B26  1003               	iorwf	(___xxtofl@val+2)^0,w,c
  7184  003B28  1004               	iorwf	(___xxtofl@val+3)^0,w,c
  7185  003B2A  A4D8               	btfss	status,2,c
  7186  003B2C  EF9A  F01D         	goto	u4991
  7187  003B30  EF9C  F01D         	goto	u4990
  7188  003B34                     u4991:
  7189  003B34  EFA6  F01D         	goto	l4872
  7190  003B38                     u4990:
  7191  003B38  0E00               	movlw	0
  7192  003B3A  6E01               	movwf	?___xxtofl^0,c
  7193  003B3C  0E00               	movlw	0
  7194  003B3E  6E02               	movwf	(?___xxtofl+1)^0,c
  7195  003B40  0E00               	movlw	0
  7196  003B42  6E03               	movwf	(?___xxtofl+2)^0,c
  7197  003B44  0E00               	movlw	0
  7198  003B46  6E04               	movwf	(?___xxtofl+3)^0,c
  7199  003B48  EF37  F01E         	goto	l1452
  7200  003B4C                     l4872:
  7201  003B4C  0E96               	movlw	150
  7202  003B4E  6E0A               	movwf	___xxtofl@exp^0,c
  7203  003B50  EFB0  F01D         	goto	l4876
  7204  003B54                     l4874:
  7205  003B54  2A0A               	incf	___xxtofl@exp^0,f,c
  7206  003B56  90D8               	bcf	status,0,c
  7207  003B58  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  7208  003B5A  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  7209  003B5C  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  7210  003B5E  320B               	rrcf	___xxtofl@arg^0,f,c
  7211  003B60                     l4876:
  7212  003B60  0E00               	movlw	0
  7213  003B62  140B               	andwf	___xxtofl@arg^0,w,c
  7214  003B64  6E05               	movwf	??___xxtofl^0,c
  7215  003B66  0E00               	movlw	0
  7216  003B68  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  7217  003B6A  6E06               	movwf	(??___xxtofl+1)^0,c
  7218  003B6C  0E00               	movlw	0
  7219  003B6E  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  7220  003B70  6E07               	movwf	(??___xxtofl+2)^0,c
  7221  003B72  0EFE               	movlw	254
  7222  003B74  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  7223  003B76  6E08               	movwf	(??___xxtofl+3)^0,c
  7224  003B78  5005               	movf	??___xxtofl^0,w,c
  7225  003B7A  1006               	iorwf	(??___xxtofl+1)^0,w,c
  7226  003B7C  1007               	iorwf	(??___xxtofl+2)^0,w,c
  7227  003B7E  1008               	iorwf	(??___xxtofl+3)^0,w,c
  7228  003B80  A4D8               	btfss	status,2,c
  7229  003B82  EFC5  F01D         	goto	u5001
  7230  003B86  EFC7  F01D         	goto	u5000
  7231  003B8A                     u5001:
  7232  003B8A  EFAA  F01D         	goto	l4874
  7233  003B8E                     u5000:
  7234  003B8E  EFD5  F01D         	goto	l1456
  7235  003B92                     l4878:
  7236  003B92  2A0A               	incf	___xxtofl@exp^0,f,c
  7237  003B94  0E01               	movlw	1
  7238  003B96  260B               	addwf	___xxtofl@arg^0,f,c
  7239  003B98  0E00               	movlw	0
  7240  003B9A  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
  7241  003B9C  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
  7242  003B9E  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
  7243  003BA0  90D8               	bcf	status,0,c
  7244  003BA2  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  7245  003BA4  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  7246  003BA6  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  7247  003BA8  320B               	rrcf	___xxtofl@arg^0,f,c
  7248  003BAA                     l1456:
  7249  003BAA  0E00               	movlw	0
  7250  003BAC  140B               	andwf	___xxtofl@arg^0,w,c
  7251  003BAE  6E05               	movwf	??___xxtofl^0,c
  7252  003BB0  0E00               	movlw	0
  7253  003BB2  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  7254  003BB4  6E06               	movwf	(??___xxtofl+1)^0,c
  7255  003BB6  0E00               	movlw	0
  7256  003BB8  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  7257  003BBA  6E07               	movwf	(??___xxtofl+2)^0,c
  7258  003BBC  0EFF               	movlw	255
  7259  003BBE  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  7260  003BC0  6E08               	movwf	(??___xxtofl+3)^0,c
  7261  003BC2  5005               	movf	??___xxtofl^0,w,c
  7262  003BC4  1006               	iorwf	(??___xxtofl+1)^0,w,c
  7263  003BC6  1007               	iorwf	(??___xxtofl+2)^0,w,c
  7264  003BC8  1008               	iorwf	(??___xxtofl+3)^0,w,c
  7265  003BCA  A4D8               	btfss	status,2,c
  7266  003BCC  EFEA  F01D         	goto	u5011
  7267  003BD0  EFEC  F01D         	goto	u5010
  7268  003BD4                     u5011:
  7269  003BD4  EFC9  F01D         	goto	l4878
  7270  003BD8                     u5010:
  7271  003BD8  EFF4  F01D         	goto	l4886
  7272  003BDC                     l4884:
  7273  003BDC  060A               	decf	___xxtofl@exp^0,f,c
  7274  003BDE  90D8               	bcf	status,0,c
  7275  003BE0  360B               	rlcf	___xxtofl@arg^0,f,c
  7276  003BE2  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
  7277  003BE4  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
  7278  003BE6  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
  7279  003BE8                     l4886:
  7280  003BE8  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
  7281  003BEA  EFF9  F01D         	goto	u5021
  7282  003BEE  EFFB  F01D         	goto	u5020
  7283  003BF2                     u5021:
  7284  003BF2  EF03  F01E         	goto	l1463
  7285  003BF6                     u5020:
  7286  003BF6  0E02               	movlw	2
  7287  003BF8  600A               	cpfslt	___xxtofl@exp^0,c
  7288  003BFA  EF01  F01E         	goto	u5031
  7289  003BFE  EF03  F01E         	goto	u5030
  7290  003C02                     u5031:
  7291  003C02  EFEE  F01D         	goto	l4884
  7292  003C06                     u5030:
  7293  003C06                     l1463:
  7294  003C06  B00A               	btfsc	___xxtofl@exp^0,0,c
  7295  003C08  EF08  F01E         	goto	u5041
  7296  003C0C  EF0A  F01E         	goto	u5040
  7297  003C10                     u5041:
  7298  003C10  EF0B  F01E         	goto	l4892
  7299  003C14                     u5040:
  7300  003C14  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
  7301  003C16                     l4892:
  7302  003C16  90D8               	bcf	status,0,c
  7303  003C18  320A               	rrcf	___xxtofl@exp^0,f,c
  7304  003C1A  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
  7305  003C1E  6A06               	clrf	(??___xxtofl+1)^0,c
  7306  003C20  6A07               	clrf	(??___xxtofl+2)^0,c
  7307  003C22  6A08               	clrf	(??___xxtofl+3)^0,c
  7308  003C24  C005  F008         	movff	??___xxtofl,??___xxtofl+3
  7309  003C28  6A07               	clrf	(??___xxtofl+2)^0,c
  7310  003C2A  6A06               	clrf	(??___xxtofl+1)^0,c
  7311  003C2C  6A05               	clrf	??___xxtofl^0,c
  7312  003C2E  5005               	movf	??___xxtofl^0,w,c
  7313  003C30  120B               	iorwf	___xxtofl@arg^0,f,c
  7314  003C32  5006               	movf	(??___xxtofl+1)^0,w,c
  7315  003C34  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
  7316  003C36  5007               	movf	(??___xxtofl+2)^0,w,c
  7317  003C38  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
  7318  003C3A  5008               	movf	(??___xxtofl+3)^0,w,c
  7319  003C3C  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
  7320  003C3E  5009               	movf	___xxtofl@sign^0,w,c
  7321  003C40  B4D8               	btfsc	status,2,c
  7322  003C42  EF25  F01E         	goto	u5051
  7323  003C46  EF27  F01E         	goto	u5050
  7324  003C4A                     u5051:
  7325  003C4A  EF2F  F01E         	goto	l4902
  7326  003C4E                     u5050:
  7327  003C4E  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  7328  003C50  EF2E  F01E         	goto	u5060
  7329  003C54  EF2C  F01E         	goto	u5061
  7330  003C58                     u5061:
  7331  003C58  EF2F  F01E         	goto	l4902
  7332  003C5C                     u5060:
  7333  003C5C  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
  7334  003C5E                     l4902:
  7335  003C5E  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
  7336  003C62  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
  7337  003C66  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
  7338  003C6A  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
  7339  003C6E                     l1452:
  7340  003C6E  0012               	return		;funcret
  7341  003C70                     __end_of___xxtofl:
  7342                           	callstack 0
  7343                           
  7344 ;; *************** function ___fldiv *****************
  7345 ;; Defined at:
  7346 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\sprcdiv.c"
  7347 ;; Parameters:    Size  Location     Type
  7348 ;;  b               4   14[COMRAM] unsigned char 
  7349 ;;  a               4   18[COMRAM] unsigned char 
  7350 ;; Auto vars:     Size  Location     Type
  7351 ;;  grs             4   33[COMRAM] unsigned long 
  7352 ;;  rem             4   26[COMRAM] unsigned long 
  7353 ;;  new_exp         2   31[COMRAM] short 
  7354 ;;  aexp            1   38[COMRAM] unsigned char 
  7355 ;;  bexp            1   37[COMRAM] unsigned char 
  7356 ;;  sign            1   30[COMRAM] unsigned char 
  7357 ;; Return value:  Size  Location     Type
  7358 ;;                  4   14[COMRAM] unsigned char 
  7359 ;; Registers used:
  7360 ;;		wreg, status,2, status,0
  7361 ;; Tracked objects:
  7362 ;;		On entry : 0/0
  7363 ;;		On exit  : 0/0
  7364 ;;		Unchanged: 0/0
  7365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7366 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7367 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7368 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7369 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7370 ;;Total ram usage:       25 bytes
  7371 ;; Hardware stack levels used: 1
  7372 ;; Hardware stack levels required when called: 1
  7373 ;; This function calls:
  7374 ;;		Nothing
  7375 ;; This function is called by:
  7376 ;;		_detect_color
  7377 ;;		_amb_light_measure
  7378 ;;		_check_color_reading
  7379 ;; This function uses a non-reentrant model
  7380 ;;
  7381                           
  7382                           	psect	text30
  7383  002742                     __ptext30:
  7384                           	callstack 0
  7385  002742                     ___fldiv:
  7386                           	callstack 27
  7387  002742  5012               	movf	(___fldiv@b+3)^0,w,c
  7388  002744  0B80               	andlw	128
  7389  002746  6E1F               	movwf	___fldiv@sign^0,c
  7390  002748  5012               	movf	(___fldiv@b+3)^0,w,c
  7391  00274A  2412               	addwf	(___fldiv@b+3)^0,w,c
  7392  00274C  6E26               	movwf	___fldiv@bexp^0,c
  7393  00274E  AE11               	btfss	(___fldiv@b+2)^0,7,c
  7394  002750  EFAC  F013         	goto	u4741
  7395  002754  EFAE  F013         	goto	u4740
  7396  002758                     u4741:
  7397  002758  EFAF  F013         	goto	l4728
  7398  00275C                     u4740:
  7399  00275C  8026               	bsf	___fldiv@bexp^0,0,c
  7400  00275E                     l4728:
  7401  00275E  5026               	movf	___fldiv@bexp^0,w,c
  7402  002760  B4D8               	btfsc	status,2,c
  7403  002762  EFB5  F013         	goto	u4751
  7404  002766  EFB7  F013         	goto	u4750
  7405  00276A                     u4751:
  7406  00276A  EFCC  F013         	goto	l4738
  7407  00276E                     u4750:
  7408  00276E  2826               	incf	___fldiv@bexp^0,w,c
  7409  002770  A4D8               	btfss	status,2,c
  7410  002772  EFBD  F013         	goto	u4761
  7411  002776  EFBF  F013         	goto	u4760
  7412  00277A                     u4761:
  7413  00277A  EFC7  F013         	goto	l4734
  7414  00277E                     u4760:
  7415  00277E  0E00               	movlw	0
  7416  002780  6E0F               	movwf	___fldiv@b^0,c
  7417  002782  0E00               	movlw	0
  7418  002784  6E10               	movwf	(___fldiv@b+1)^0,c
  7419  002786  0E00               	movlw	0
  7420  002788  6E11               	movwf	(___fldiv@b+2)^0,c
  7421  00278A  0E00               	movlw	0
  7422  00278C  6E12               	movwf	(___fldiv@b+3)^0,c
  7423  00278E                     l4734:
  7424  00278E  8E11               	bsf	(___fldiv@b+2)^0,7,c
  7425  002790  0E00               	movlw	0
  7426  002792  6E12               	movwf	(___fldiv@b+3)^0,c
  7427  002794  EFD4  F013         	goto	l4740
  7428  002798                     l4738:
  7429  002798  0E00               	movlw	0
  7430  00279A  6E0F               	movwf	___fldiv@b^0,c
  7431  00279C  0E00               	movlw	0
  7432  00279E  6E10               	movwf	(___fldiv@b+1)^0,c
  7433  0027A0  0E00               	movlw	0
  7434  0027A2  6E11               	movwf	(___fldiv@b+2)^0,c
  7435  0027A4  0E00               	movlw	0
  7436  0027A6  6E12               	movwf	(___fldiv@b+3)^0,c
  7437  0027A8                     l4740:
  7438  0027A8  5016               	movf	(___fldiv@a+3)^0,w,c
  7439  0027AA  0B80               	andlw	128
  7440  0027AC  1A1F               	xorwf	___fldiv@sign^0,f,c
  7441  0027AE  5016               	movf	(___fldiv@a+3)^0,w,c
  7442  0027B0  2416               	addwf	(___fldiv@a+3)^0,w,c
  7443  0027B2  6E27               	movwf	___fldiv@aexp^0,c
  7444  0027B4  AE15               	btfss	(___fldiv@a+2)^0,7,c
  7445  0027B6  EFDF  F013         	goto	u4771
  7446  0027BA  EFE1  F013         	goto	u4770
  7447  0027BE                     u4771:
  7448  0027BE  EFE2  F013         	goto	l4748
  7449  0027C2                     u4770:
  7450  0027C2  8027               	bsf	___fldiv@aexp^0,0,c
  7451  0027C4                     l4748:
  7452  0027C4  5027               	movf	___fldiv@aexp^0,w,c
  7453  0027C6  B4D8               	btfsc	status,2,c
  7454  0027C8  EFE8  F013         	goto	u4781
  7455  0027CC  EFEA  F013         	goto	u4780
  7456  0027D0                     u4781:
  7457  0027D0  EFFF  F013         	goto	l4758
  7458  0027D4                     u4780:
  7459  0027D4  2827               	incf	___fldiv@aexp^0,w,c
  7460  0027D6  A4D8               	btfss	status,2,c
  7461  0027D8  EFF0  F013         	goto	u4791
  7462  0027DC  EFF2  F013         	goto	u4790
  7463  0027E0                     u4791:
  7464  0027E0  EFFA  F013         	goto	l4754
  7465  0027E4                     u4790:
  7466  0027E4  0E00               	movlw	0
  7467  0027E6  6E13               	movwf	___fldiv@a^0,c
  7468  0027E8  0E00               	movlw	0
  7469  0027EA  6E14               	movwf	(___fldiv@a+1)^0,c
  7470  0027EC  0E00               	movlw	0
  7471  0027EE  6E15               	movwf	(___fldiv@a+2)^0,c
  7472  0027F0  0E00               	movlw	0
  7473  0027F2  6E16               	movwf	(___fldiv@a+3)^0,c
  7474  0027F4                     l4754:
  7475  0027F4  8E15               	bsf	(___fldiv@a+2)^0,7,c
  7476  0027F6  0E00               	movlw	0
  7477  0027F8  6E16               	movwf	(___fldiv@a+3)^0,c
  7478  0027FA  EF07  F014         	goto	l4760
  7479  0027FE                     l4758:
  7480  0027FE  0E00               	movlw	0
  7481  002800  6E13               	movwf	___fldiv@a^0,c
  7482  002802  0E00               	movlw	0
  7483  002804  6E14               	movwf	(___fldiv@a+1)^0,c
  7484  002806  0E00               	movlw	0
  7485  002808  6E15               	movwf	(___fldiv@a+2)^0,c
  7486  00280A  0E00               	movlw	0
  7487  00280C  6E16               	movwf	(___fldiv@a+3)^0,c
  7488  00280E                     l4760:
  7489  00280E  5013               	movf	___fldiv@a^0,w,c
  7490  002810  1014               	iorwf	(___fldiv@a+1)^0,w,c
  7491  002812  1015               	iorwf	(___fldiv@a+2)^0,w,c
  7492  002814  1016               	iorwf	(___fldiv@a+3)^0,w,c
  7493  002816  A4D8               	btfss	status,2,c
  7494  002818  EF10  F014         	goto	u4801
  7495  00281C  EF12  F014         	goto	u4800
  7496  002820                     u4801:
  7497  002820  EF2A  F014         	goto	l4772
  7498  002824                     u4800:
  7499  002824  0E00               	movlw	0
  7500  002826  6E0F               	movwf	___fldiv@b^0,c
  7501  002828  0E00               	movlw	0
  7502  00282A  6E10               	movwf	(___fldiv@b+1)^0,c
  7503  00282C  0E00               	movlw	0
  7504  00282E  6E11               	movwf	(___fldiv@b+2)^0,c
  7505  002830  0E00               	movlw	0
  7506  002832  6E12               	movwf	(___fldiv@b+3)^0,c
  7507  002834  0E80               	movlw	128
  7508  002836  1211               	iorwf	(___fldiv@b+2)^0,f,c
  7509  002838  0E7F               	movlw	127
  7510  00283A  1212               	iorwf	(___fldiv@b+3)^0,f,c
  7511  00283C                     l4766:
  7512  00283C  501F               	movf	___fldiv@sign^0,w,c
  7513  00283E  1212               	iorwf	(___fldiv@b+3)^0,f,c
  7514  002840  C00F  F00F         	movff	___fldiv@b,?___fldiv
  7515  002844  C010  F010         	movff	___fldiv@b+1,?___fldiv+1
  7516  002848  C011  F011         	movff	___fldiv@b+2,?___fldiv+2
  7517  00284C  C012  F012         	movff	___fldiv@b+3,?___fldiv+3
  7518  002850  EF6D  F015         	goto	l1376
  7519  002854                     l4772:
  7520  002854  5026               	movf	___fldiv@bexp^0,w,c
  7521  002856  A4D8               	btfss	status,2,c
  7522  002858  EF30  F014         	goto	u4811
  7523  00285C  EF32  F014         	goto	u4810
  7524  002860                     u4811:
  7525  002860  EF3C  F014         	goto	l4780
  7526  002864                     u4810:
  7527  002864  0E00               	movlw	0
  7528  002866  6E0F               	movwf	?___fldiv^0,c
  7529  002868  0E00               	movlw	0
  7530  00286A  6E10               	movwf	(?___fldiv+1)^0,c
  7531  00286C  0E00               	movlw	0
  7532  00286E  6E11               	movwf	(?___fldiv+2)^0,c
  7533  002870  0E00               	movlw	0
  7534  002872  6E12               	movwf	(?___fldiv+3)^0,c
  7535  002874  EF6D  F015         	goto	l1376
  7536  002878                     l4780:
  7537  002878  5027               	movf	___fldiv@aexp^0,w,c
  7538  00287A  C026  F017         	movff	___fldiv@bexp,??___fldiv
  7539  00287E  6A18               	clrf	(??___fldiv+1)^0,c
  7540  002880  5E17               	subwf	??___fldiv^0,f,c
  7541  002882  0E00               	movlw	0
  7542  002884  5A18               	subwfb	(??___fldiv+1)^0,f,c
  7543  002886  0E7F               	movlw	127
  7544  002888  2417               	addwf	??___fldiv^0,w,c
  7545  00288A  6E20               	movwf	___fldiv@new_exp^0,c
  7546  00288C  0E00               	movlw	0
  7547  00288E  2018               	addwfc	(??___fldiv+1)^0,w,c
  7548  002890  6E21               	movwf	(___fldiv@new_exp+1)^0,c
  7549  002892  C00F  F01B         	movff	___fldiv@b,___fldiv@rem
  7550  002896  C010  F01C         	movff	___fldiv@b+1,___fldiv@rem+1
  7551  00289A  C011  F01D         	movff	___fldiv@b+2,___fldiv@rem+2
  7552  00289E  C012  F01E         	movff	___fldiv@b+3,___fldiv@rem+3
  7553  0028A2  0E00               	movlw	0
  7554  0028A4  6E0F               	movwf	___fldiv@b^0,c
  7555  0028A6  0E00               	movlw	0
  7556  0028A8  6E10               	movwf	(___fldiv@b+1)^0,c
  7557  0028AA  0E00               	movlw	0
  7558  0028AC  6E11               	movwf	(___fldiv@b+2)^0,c
  7559  0028AE  0E00               	movlw	0
  7560  0028B0  6E12               	movwf	(___fldiv@b+3)^0,c
  7561  0028B2  0E00               	movlw	0
  7562  0028B4  6E22               	movwf	___fldiv@grs^0,c
  7563  0028B6  0E00               	movlw	0
  7564  0028B8  6E23               	movwf	(___fldiv@grs+1)^0,c
  7565  0028BA  0E00               	movlw	0
  7566  0028BC  6E24               	movwf	(___fldiv@grs+2)^0,c
  7567  0028BE  0E00               	movlw	0
  7568  0028C0  6E25               	movwf	(___fldiv@grs+3)^0,c
  7569  0028C2  0E00               	movlw	0
  7570  0028C4  6E27               	movwf	___fldiv@aexp^0,c
  7571  0028C6  EF9D  F014         	goto	l1378
  7572  0028CA                     l4790:
  7573  0028CA  5027               	movf	___fldiv@aexp^0,w,c
  7574  0028CC  B4D8               	btfsc	status,2,c
  7575  0028CE  EF6B  F014         	goto	u4821
  7576  0028D2  EF6D  F014         	goto	u4820
  7577  0028D6                     u4821:
  7578  0028D6  EF84  F014         	goto	l4798
  7579  0028DA                     u4820:
  7580  0028DA  90D8               	bcf	status,0,c
  7581  0028DC  361B               	rlcf	___fldiv@rem^0,f,c
  7582  0028DE  361C               	rlcf	(___fldiv@rem+1)^0,f,c
  7583  0028E0  361D               	rlcf	(___fldiv@rem+2)^0,f,c
  7584  0028E2  361E               	rlcf	(___fldiv@rem+3)^0,f,c
  7585  0028E4  90D8               	bcf	status,0,c
  7586  0028E6  360F               	rlcf	___fldiv@b^0,f,c
  7587  0028E8  3610               	rlcf	(___fldiv@b+1)^0,f,c
  7588  0028EA  3611               	rlcf	(___fldiv@b+2)^0,f,c
  7589  0028EC  3612               	rlcf	(___fldiv@b+3)^0,f,c
  7590  0028EE  AE25               	btfss	(___fldiv@grs+3)^0,7,c
  7591  0028F0  EF7C  F014         	goto	u4831
  7592  0028F4  EF7E  F014         	goto	u4830
  7593  0028F8                     u4831:
  7594  0028F8  EF7F  F014         	goto	l1381
  7595  0028FC                     u4830:
  7596  0028FC  800F               	bsf	___fldiv@b^0,0,c
  7597  0028FE                     l1381:
  7598  0028FE  90D8               	bcf	status,0,c
  7599  002900  3622               	rlcf	___fldiv@grs^0,f,c
  7600  002902  3623               	rlcf	(___fldiv@grs+1)^0,f,c
  7601  002904  3624               	rlcf	(___fldiv@grs+2)^0,f,c
  7602  002906  3625               	rlcf	(___fldiv@grs+3)^0,f,c
  7603  002908                     l4798:
  7604  002908  5013               	movf	___fldiv@a^0,w,c
  7605  00290A  5C1B               	subwf	___fldiv@rem^0,w,c
  7606  00290C  5014               	movf	(___fldiv@a+1)^0,w,c
  7607  00290E  581C               	subwfb	(___fldiv@rem+1)^0,w,c
  7608  002910  5015               	movf	(___fldiv@a+2)^0,w,c
  7609  002912  581D               	subwfb	(___fldiv@rem+2)^0,w,c
  7610  002914  5016               	movf	(___fldiv@a+3)^0,w,c
  7611  002916  581E               	subwfb	(___fldiv@rem+3)^0,w,c
  7612  002918  A0D8               	btfss	status,0,c
  7613  00291A  EF91  F014         	goto	u4841
  7614  00291E  EF93  F014         	goto	u4840
  7615  002922                     u4841:
  7616  002922  EF9C  F014         	goto	l4804
  7617  002926                     u4840:
  7618  002926  8C25               	bsf	(___fldiv@grs+3)^0,6,c
  7619  002928  5013               	movf	___fldiv@a^0,w,c
  7620  00292A  5E1B               	subwf	___fldiv@rem^0,f,c
  7621  00292C  5014               	movf	(___fldiv@a+1)^0,w,c
  7622  00292E  5A1C               	subwfb	(___fldiv@rem+1)^0,f,c
  7623  002930  5015               	movf	(___fldiv@a+2)^0,w,c
  7624  002932  5A1D               	subwfb	(___fldiv@rem+2)^0,f,c
  7625  002934  5016               	movf	(___fldiv@a+3)^0,w,c
  7626  002936  5A1E               	subwfb	(___fldiv@rem+3)^0,f,c
  7627  002938                     l4804:
  7628  002938  2A27               	incf	___fldiv@aexp^0,f,c
  7629  00293A                     l1378:
  7630  00293A  0E19               	movlw	25
  7631  00293C  6427               	cpfsgt	___fldiv@aexp^0,c
  7632  00293E  EFA3  F014         	goto	u4851
  7633  002942  EFA5  F014         	goto	u4850
  7634  002946                     u4851:
  7635  002946  EF65  F014         	goto	l4790
  7636  00294A                     u4850:
  7637  00294A  501B               	movf	___fldiv@rem^0,w,c
  7638  00294C  101C               	iorwf	(___fldiv@rem+1)^0,w,c
  7639  00294E  101D               	iorwf	(___fldiv@rem+2)^0,w,c
  7640  002950  101E               	iorwf	(___fldiv@rem+3)^0,w,c
  7641  002952  B4D8               	btfsc	status,2,c
  7642  002954  EFAE  F014         	goto	u4861
  7643  002958  EFB0  F014         	goto	u4860
  7644  00295C                     u4861:
  7645  00295C  EFC8  F014         	goto	l4816
  7646  002960                     u4860:
  7647  002960  8022               	bsf	___fldiv@grs^0,0,c
  7648  002962  EFC8  F014         	goto	l4816
  7649  002966                     l4810:
  7650  002966  90D8               	bcf	status,0,c
  7651  002968  360F               	rlcf	___fldiv@b^0,f,c
  7652  00296A  3610               	rlcf	(___fldiv@b+1)^0,f,c
  7653  00296C  3611               	rlcf	(___fldiv@b+2)^0,f,c
  7654  00296E  3612               	rlcf	(___fldiv@b+3)^0,f,c
  7655  002970  AE25               	btfss	(___fldiv@grs+3)^0,7,c
  7656  002972  EFBD  F014         	goto	u4871
  7657  002976  EFBF  F014         	goto	u4870
  7658  00297A                     u4871:
  7659  00297A  EFC0  F014         	goto	l1387
  7660  00297E                     u4870:
  7661  00297E  800F               	bsf	___fldiv@b^0,0,c
  7662  002980                     l1387:
  7663  002980  90D8               	bcf	status,0,c
  7664  002982  3622               	rlcf	___fldiv@grs^0,f,c
  7665  002984  3623               	rlcf	(___fldiv@grs+1)^0,f,c
  7666  002986  3624               	rlcf	(___fldiv@grs+2)^0,f,c
  7667  002988  3625               	rlcf	(___fldiv@grs+3)^0,f,c
  7668  00298A  0620               	decf	___fldiv@new_exp^0,f,c
  7669  00298C  A0D8               	btfss	status,0,c
  7670  00298E  0621               	decf	(___fldiv@new_exp+1)^0,f,c
  7671  002990                     l4816:
  7672  002990  AE11               	btfss	(___fldiv@b+2)^0,7,c
  7673  002992  EFCD  F014         	goto	u4881
  7674  002996  EFCF  F014         	goto	u4880
  7675  00299A                     u4881:
  7676  00299A  EFB3  F014         	goto	l4810
  7677  00299E                     u4880:
  7678  00299E  0E00               	movlw	0
  7679  0029A0  6E27               	movwf	___fldiv@aexp^0,c
  7680  0029A2  AE25               	btfss	(___fldiv@grs+3)^0,7,c
  7681  0029A4  EFD6  F014         	goto	u4891
  7682  0029A8  EFD8  F014         	goto	u4890
  7683  0029AC                     u4891:
  7684  0029AC  EFFC  F014         	goto	l1389
  7685  0029B0                     u4890:
  7686  0029B0  0EFF               	movlw	255
  7687  0029B2  1422               	andwf	___fldiv@grs^0,w,c
  7688  0029B4  6E17               	movwf	??___fldiv^0,c
  7689  0029B6  0EFF               	movlw	255
  7690  0029B8  1423               	andwf	(___fldiv@grs+1)^0,w,c
  7691  0029BA  6E18               	movwf	(??___fldiv+1)^0,c
  7692  0029BC  0EFF               	movlw	255
  7693  0029BE  1424               	andwf	(___fldiv@grs+2)^0,w,c
  7694  0029C0  6E19               	movwf	(??___fldiv+2)^0,c
  7695  0029C2  0E7F               	movlw	127
  7696  0029C4  1425               	andwf	(___fldiv@grs+3)^0,w,c
  7697  0029C6  6E1A               	movwf	(??___fldiv+3)^0,c
  7698  0029C8  5017               	movf	??___fldiv^0,w,c
  7699  0029CA  1018               	iorwf	(??___fldiv+1)^0,w,c
  7700  0029CC  1019               	iorwf	(??___fldiv+2)^0,w,c
  7701  0029CE  101A               	iorwf	(??___fldiv+3)^0,w,c
  7702  0029D0  B4D8               	btfsc	status,2,c
  7703  0029D2  EFED  F014         	goto	u4901
  7704  0029D6  EFEF  F014         	goto	u4900
  7705  0029DA                     u4901:
  7706  0029DA  EFF3  F014         	goto	l1390
  7707  0029DE                     u4900:
  7708  0029DE                     l4824:
  7709  0029DE  0E01               	movlw	1
  7710  0029E0  6E27               	movwf	___fldiv@aexp^0,c
  7711  0029E2  EFFC  F014         	goto	l1389
  7712  0029E6                     l1390:
  7713  0029E6  A00F               	btfss	___fldiv@b^0,0,c
  7714  0029E8  EFF8  F014         	goto	u4911
  7715  0029EC  EFFA  F014         	goto	u4910
  7716  0029F0                     u4911:
  7717  0029F0  EFFC  F014         	goto	l1389
  7718  0029F4                     u4910:
  7719  0029F4  EFEF  F014         	goto	l4824
  7720  0029F8                     l1389:
  7721  0029F8  5027               	movf	___fldiv@aexp^0,w,c
  7722  0029FA  B4D8               	btfsc	status,2,c
  7723  0029FC  EF02  F015         	goto	u4921
  7724  002A00  EF04  F015         	goto	u4920
  7725  002A04                     u4921:
  7726  002A04  EF28  F015         	goto	l4836
  7727  002A08                     u4920:
  7728  002A08  0E01               	movlw	1
  7729  002A0A  260F               	addwf	___fldiv@b^0,f,c
  7730  002A0C  0E00               	movlw	0
  7731  002A0E  2210               	addwfc	(___fldiv@b+1)^0,f,c
  7732  002A10  2211               	addwfc	(___fldiv@b+2)^0,f,c
  7733  002A12  2212               	addwfc	(___fldiv@b+3)^0,f,c
  7734  002A14  A012               	btfss	(___fldiv@b+3)^0,0,c
  7735  002A16  EF0F  F015         	goto	u4931
  7736  002A1A  EF11  F015         	goto	u4930
  7737  002A1E                     u4931:
  7738  002A1E  EF28  F015         	goto	l4836
  7739  002A22                     u4930:
  7740  002A22  C00F  F017         	movff	___fldiv@b,??___fldiv
  7741  002A26  C010  F018         	movff	___fldiv@b+1,??___fldiv+1
  7742  002A2A  C011  F019         	movff	___fldiv@b+2,??___fldiv+2
  7743  002A2E  C012  F01A         	movff	___fldiv@b+3,??___fldiv+3
  7744  002A32  341A               	rlcf	(??___fldiv+3)^0,w,c
  7745  002A34  321A               	rrcf	(??___fldiv+3)^0,f,c
  7746  002A36  3219               	rrcf	(??___fldiv+2)^0,f,c
  7747  002A38  3218               	rrcf	(??___fldiv+1)^0,f,c
  7748  002A3A  3217               	rrcf	??___fldiv^0,f,c
  7749  002A3C  C017  F00F         	movff	??___fldiv,___fldiv@b
  7750  002A40  C018  F010         	movff	??___fldiv+1,___fldiv@b+1
  7751  002A44  C019  F011         	movff	??___fldiv+2,___fldiv@b+2
  7752  002A48  C01A  F012         	movff	??___fldiv+3,___fldiv@b+3
  7753  002A4C  4A20               	infsnz	___fldiv@new_exp^0,f,c
  7754  002A4E  2A21               	incf	(___fldiv@new_exp+1)^0,f,c
  7755  002A50                     l4836:
  7756  002A50  BE21               	btfsc	(___fldiv@new_exp+1)^0,7,c
  7757  002A52  EF33  F015         	goto	u4941
  7758  002A56  5021               	movf	(___fldiv@new_exp+1)^0,w,c
  7759  002A58  E108               	bnz	u4940
  7760  002A5A  2820               	incf	___fldiv@new_exp^0,w,c
  7761  002A5C  A0D8               	btfss	status,0,c
  7762  002A5E  EF33  F015         	goto	u4941
  7763  002A62  EF35  F015         	goto	u4940
  7764  002A66                     u4941:
  7765  002A66  EF40  F015         	goto	l4840
  7766  002A6A                     u4940:
  7767  002A6A  0E00               	movlw	0
  7768  002A6C  6E21               	movwf	(___fldiv@new_exp+1)^0,c
  7769  002A6E  6820               	setf	___fldiv@new_exp^0,c
  7770  002A70  0E00               	movlw	0
  7771  002A72  6E0F               	movwf	___fldiv@b^0,c
  7772  002A74  0E00               	movlw	0
  7773  002A76  6E10               	movwf	(___fldiv@b+1)^0,c
  7774  002A78  0E00               	movlw	0
  7775  002A7A  6E11               	movwf	(___fldiv@b+2)^0,c
  7776  002A7C  0E00               	movlw	0
  7777  002A7E  6E12               	movwf	(___fldiv@b+3)^0,c
  7778  002A80                     l4840:
  7779  002A80  BE21               	btfsc	(___fldiv@new_exp+1)^0,7,c
  7780  002A82  EF4D  F015         	goto	u4950
  7781  002A86  5021               	movf	(___fldiv@new_exp+1)^0,w,c
  7782  002A88  E106               	bnz	u4951
  7783  002A8A  0420               	decf	___fldiv@new_exp^0,w,c
  7784  002A8C  B0D8               	btfsc	status,0,c
  7785  002A8E  EF4B  F015         	goto	u4951
  7786  002A92  EF4D  F015         	goto	u4950
  7787  002A96                     u4951:
  7788  002A96  EF5B  F015         	goto	l4844
  7789  002A9A                     u4950:
  7790  002A9A  0E00               	movlw	0
  7791  002A9C  6E21               	movwf	(___fldiv@new_exp+1)^0,c
  7792  002A9E  0E00               	movlw	0
  7793  002AA0  6E20               	movwf	___fldiv@new_exp^0,c
  7794  002AA2  0E00               	movlw	0
  7795  002AA4  6E0F               	movwf	___fldiv@b^0,c
  7796  002AA6  0E00               	movlw	0
  7797  002AA8  6E10               	movwf	(___fldiv@b+1)^0,c
  7798  002AAA  0E00               	movlw	0
  7799  002AAC  6E11               	movwf	(___fldiv@b+2)^0,c
  7800  002AAE  0E00               	movlw	0
  7801  002AB0  6E12               	movwf	(___fldiv@b+3)^0,c
  7802  002AB2  0E00               	movlw	0
  7803  002AB4  6E1F               	movwf	___fldiv@sign^0,c
  7804  002AB6                     l4844:
  7805  002AB6  C020  F026         	movff	___fldiv@new_exp,___fldiv@bexp
  7806  002ABA  A026               	btfss	___fldiv@bexp^0,0,c
  7807  002ABC  EF62  F015         	goto	u4961
  7808  002AC0  EF64  F015         	goto	u4960
  7809  002AC4                     u4961:
  7810  002AC4  EF67  F015         	goto	l4850
  7811  002AC8                     u4960:
  7812  002AC8  8E11               	bsf	(___fldiv@b+2)^0,7,c
  7813  002ACA  EF68  F015         	goto	l4852
  7814  002ACE                     l4850:
  7815  002ACE  9E11               	bcf	(___fldiv@b+2)^0,7,c
  7816  002AD0                     l4852:
  7817  002AD0  90D8               	bcf	status,0,c
  7818  002AD2  3026               	rrcf	___fldiv@bexp^0,w,c
  7819  002AD4  6E12               	movwf	(___fldiv@b+3)^0,c
  7820  002AD6  EF1E  F014         	goto	l4766
  7821  002ADA                     l1376:
  7822  002ADA  0012               	return		;funcret
  7823  002ADC                     __end_of___fldiv:
  7824                           	callstack 0
  7825                           
  7826 ;; *************** function _LED_C *****************
  7827 ;; Defined at:
  7828 ;;		line 173 in file "color.c"
  7829 ;; Parameters:    Size  Location     Type
  7830 ;;		None
  7831 ;; Auto vars:     Size  Location     Type
  7832 ;;		None
  7833 ;; Return value:  Size  Location     Type
  7834 ;;                  1    wreg      void 
  7835 ;; Registers used:
  7836 ;;		wreg
  7837 ;; Tracked objects:
  7838 ;;		On entry : 0/0
  7839 ;;		On exit  : 0/0
  7840 ;;		Unchanged: 0/0
  7841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7842 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7843 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7844 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7845 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7846 ;;Total ram usage:        2 bytes
  7847 ;; Hardware stack levels used: 1
  7848 ;; Hardware stack levels required when called: 1
  7849 ;; This function calls:
  7850 ;;		Nothing
  7851 ;; This function is called by:
  7852 ;;		_color_data_collection
  7853 ;;		_calibrate_white
  7854 ;;		_amb_light_measure
  7855 ;;		_distance_measure
  7856 ;;		_test_function
  7857 ;; This function uses a non-reentrant model
  7858 ;;
  7859                           
  7860                           	psect	text31
  7861  0059D6                     __ptext31:
  7862                           	callstack 0
  7863  0059D6                     _LED_C:
  7864                           	callstack 27
  7865  0059D6                     
  7866                           ;color.c: 175:     LATGbits.LATG1 = 1;
  7867  0059D6  827F               	bsf	127,1,c	;volatile
  7868                           
  7869                           ;color.c: 176:     LATFbits.LATF7 = 1;
  7870  0059D8  8E7E               	bsf	126,7,c	;volatile
  7871                           
  7872                           ;color.c: 177:     LATAbits.LATA4 = 1;
  7873  0059DA  8879               	bsf	121,4,c	;volatile
  7874  0059DC                     
  7875                           ;color.c: 178:     _delay((unsigned long)((200)*(64000000/4000.0)));
  7876  0059DC  0E11               	movlw	17
  7877  0059DE  6E02               	movwf	(??_LED_C+1)^0,c
  7878  0059E0  0E3C               	movlw	60
  7879  0059E2  6E01               	movwf	??_LED_C^0,c
  7880  0059E4  0ECB               	movlw	203
  7881  0059E6                     u5927:
  7882  0059E6  2EE8               	decfsz	wreg,f,c
  7883  0059E8  D7FE               	bra	u5927
  7884  0059EA  2E01               	decfsz	??_LED_C^0,f,c
  7885  0059EC  D7FC               	bra	u5927
  7886  0059EE  2E02               	decfsz	(??_LED_C+1)^0,f,c
  7887  0059F0  D7FA               	bra	u5927
  7888  0059F2  F000               	nop	
  7889  0059F4  0012               	return		;funcret
  7890  0059F6                     __end_of_LED_C:
  7891                           	callstack 0
  7892                           
  7893 ;; *************** function _short_burst_back *****************
  7894 ;; Defined at:
  7895 ;;		line 10 in file "movement.c"
  7896 ;; Parameters:    Size  Location     Type
  7897 ;;  mL              2   37[COMRAM] PTR struct DC_motor
  7898 ;;		 -> main@motorL(10), 
  7899 ;;  mR              2   39[COMRAM] PTR struct DC_motor
  7900 ;;		 -> main@motorR(10), 
  7901 ;; Auto vars:     Size  Location     Type
  7902 ;;		None
  7903 ;; Return value:  Size  Location     Type
  7904 ;;                  1    wreg      void 
  7905 ;; Registers used:
  7906 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7907 ;; Tracked objects:
  7908 ;;		On entry : 0/0
  7909 ;;		On exit  : 0/0
  7910 ;;		Unchanged: 0/0
  7911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7912 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7913 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7914 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7915 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7916 ;;Total ram usage:        6 bytes
  7917 ;; Hardware stack levels used: 1
  7918 ;; Hardware stack levels required when called: 5
  7919 ;; This function calls:
  7920 ;;		_fullSpeedAhead
  7921 ;;		_halfSpeedBack
  7922 ;;		_stop
  7923 ;; This function is called by:
  7924 ;;		_main
  7925 ;; This function uses a non-reentrant model
  7926 ;;
  7927                           
  7928                           	psect	text32
  7929  0053B4                     __ptext32:
  7930                           	callstack 0
  7931  0053B4                     _short_burst_back:
  7932                           	callstack 25
  7933  0053B4                     
  7934                           ;movement.c: 10: void short_burst_back(struct DC_motor *mL, struct DC_motor *mR);movemen
      +                          t.c: 11: {;movement.c: 12:     fullSpeedAhead(mL,mR);
  7935  0053B4  C026  F01A         	movff	short_burst_back@mL,fullSpeedAhead@mL
  7936  0053B8  C027  F01B         	movff	short_burst_back@mL+1,fullSpeedAhead@mL+1
  7937  0053BC  C028  F01C         	movff	short_burst_back@mR,fullSpeedAhead@mR
  7938  0053C0  C029  F01D         	movff	short_burst_back@mR+1,fullSpeedAhead@mR+1
  7939  0053C4  EC54  F028         	call	_fullSpeedAhead	;wreg free
  7940  0053C8                     
  7941                           ;movement.c: 13:     _delay((unsigned long)((500)*(64000000/4000.0)));
  7942  0053C8  0E29               	movlw	41
  7943  0053CA  6E2B               	movwf	(??_short_burst_back+1)^0,c
  7944  0053CC  0E96               	movlw	150
  7945  0053CE  6E2A               	movwf	??_short_burst_back^0,c
  7946  0053D0  0E7F               	movlw	127
  7947  0053D2                     u5937:
  7948  0053D2  2EE8               	decfsz	wreg,f,c
  7949  0053D4  D7FE               	bra	u5937
  7950  0053D6  2E2A               	decfsz	??_short_burst_back^0,f,c
  7951  0053D8  D7FC               	bra	u5937
  7952  0053DA  2E2B               	decfsz	(??_short_burst_back+1)^0,f,c
  7953  0053DC  D7FA               	bra	u5937
  7954  0053DE  F000               	nop	
  7955  0053E0                     
  7956                           ;movement.c: 14:     halfSpeedBack(mL,mR);
  7957  0053E0  C026  F020         	movff	short_burst_back@mL,halfSpeedBack@mL
  7958  0053E4  C027  F021         	movff	short_burst_back@mL+1,halfSpeedBack@mL+1
  7959  0053E8  C028  F022         	movff	short_burst_back@mR,halfSpeedBack@mR
  7960  0053EC  C029  F023         	movff	short_burst_back@mR+1,halfSpeedBack@mR+1
  7961  0053F0  EC36  F027         	call	_halfSpeedBack	;wreg free
  7962  0053F4                     
  7963                           ;movement.c: 15:     stop(mL,mR);
  7964  0053F4  C026  F01A         	movff	short_burst_back@mL,stop@mL
  7965  0053F8  C027  F01B         	movff	short_burst_back@mL+1,stop@mL+1
  7966  0053FC  C028  F01C         	movff	short_burst_back@mR,stop@mR
  7967  005400  C029  F01D         	movff	short_burst_back@mR+1,stop@mR+1
  7968  005404  ECF6  F027         	call	_stop	;wreg free
  7969  005408  0012               	return		;funcret
  7970  00540A                     __end_of_short_burst_back:
  7971                           	callstack 0
  7972                           
  7973 ;; *************** function _halfSpeedBack *****************
  7974 ;; Defined at:
  7975 ;;		line 183 in file "dc_motor.c"
  7976 ;; Parameters:    Size  Location     Type
  7977 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  7978 ;;		 -> main@motorL(10), 
  7979 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  7980 ;;		 -> main@motorR(10), 
  7981 ;; Auto vars:     Size  Location     Type
  7982 ;;		None
  7983 ;; Return value:  Size  Location     Type
  7984 ;;                  1    wreg      void 
  7985 ;; Registers used:
  7986 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7987 ;; Tracked objects:
  7988 ;;		On entry : 0/0
  7989 ;;		On exit  : 0/0
  7990 ;;		Unchanged: 0/0
  7991 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7992 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7993 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7994 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7995 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7996 ;;Total ram usage:        6 bytes
  7997 ;; Hardware stack levels used: 1
  7998 ;; Hardware stack levels required when called: 4
  7999 ;; This function calls:
  8000 ;;		_setMotorPWM
  8001 ;;		_stop
  8002 ;; This function is called by:
  8003 ;;		_short_burst_back
  8004 ;; This function uses a non-reentrant model
  8005 ;;
  8006                           
  8007                           	psect	text33
  8008  004E6C                     __ptext33:
  8009                           	callstack 0
  8010  004E6C                     _halfSpeedBack:
  8011                           	callstack 25
  8012  004E6C                     
  8013                           ;dc_motor.c: 183: void halfSpeedBack(struct DC_motor *mL, struct DC_motor *mR);dc_motor.
      +                          c: 184: {;dc_motor.c: 185:     mL->direction=0;
  8014  004E6C  EE20 F001          	lfsr	2,1
  8015  004E70  5020               	movf	halfSpeedBack@mL^0,w,c
  8016  004E72  26D9               	addwf	fsr2l,f,c
  8017  004E74  5021               	movf	(halfSpeedBack@mL+1)^0,w,c
  8018  004E76  22DA               	addwfc	fsr2h,f,c
  8019  004E78  0E00               	movlw	0
  8020  004E7A  6EDF               	movwf	indf2,c
  8021                           
  8022                           ;dc_motor.c: 186:     mR->direction=0;
  8023  004E7C  EE20 F001          	lfsr	2,1
  8024  004E80  5022               	movf	halfSpeedBack@mR^0,w,c
  8025  004E82  26D9               	addwf	fsr2l,f,c
  8026  004E84  5023               	movf	(halfSpeedBack@mR+1)^0,w,c
  8027  004E86  22DA               	addwfc	fsr2h,f,c
  8028  004E88  0E00               	movlw	0
  8029  004E8A  6EDF               	movwf	indf2,c
  8030                           
  8031                           ;dc_motor.c: 187:     while (mL->power<40 && mR->power<40){
  8032  004E8C  EF67  F027         	goto	l5222
  8033  004E90                     l5214:
  8034                           
  8035                           ;dc_motor.c: 188:         mL->power += 10;
  8036  004E90  C020  FFD9         	movff	halfSpeedBack@mL,fsr2l
  8037  004E94  C021  FFDA         	movff	halfSpeedBack@mL+1,fsr2h
  8038  004E98  0E0A               	movlw	10
  8039  004E9A  26DF               	addwf	indf2,f,c
  8040                           
  8041                           ;dc_motor.c: 189:         mR->power += 10;
  8042  004E9C  C022  FFD9         	movff	halfSpeedBack@mR,fsr2l
  8043  004EA0  C023  FFDA         	movff	halfSpeedBack@mR+1,fsr2h
  8044  004EA4  0E0A               	movlw	10
  8045  004EA6  26DF               	addwf	indf2,f,c
  8046  004EA8                     
  8047                           ;dc_motor.c: 190:         setMotorPWM(mL);
  8048  004EA8  C020  F00F         	movff	halfSpeedBack@mL,setMotorPWM@m
  8049  004EAC  C021  F010         	movff	halfSpeedBack@mL+1,setMotorPWM@m+1
  8050  004EB0  EC74  F01C         	call	_setMotorPWM	;wreg free
  8051  004EB4                     
  8052                           ;dc_motor.c: 191:         setMotorPWM(mR);
  8053  004EB4  C022  F00F         	movff	halfSpeedBack@mR,setMotorPWM@m
  8054  004EB8  C023  F010         	movff	halfSpeedBack@mR+1,setMotorPWM@m+1
  8055  004EBC  EC74  F01C         	call	_setMotorPWM	;wreg free
  8056  004EC0                     
  8057                           ;dc_motor.c: 192:         _delay((unsigned long)((10)*(64000000/4000.0)));
  8058  004EC0  0ED0               	movlw	208
  8059  004EC2  6E24               	movwf	??_halfSpeedBack^0,c
  8060  004EC4  0ECA               	movlw	202
  8061  004EC6                     u5947:
  8062  004EC6  2EE8               	decfsz	wreg,f,c
  8063  004EC8  D7FE               	bra	u5947
  8064  004ECA  2E24               	decfsz	??_halfSpeedBack^0,f,c
  8065  004ECC  D7FC               	bra	u5947
  8066  004ECE                     l5222:
  8067                           
  8068                           ;dc_motor.c: 187:     while (mL->power<40 && mR->power<40){
  8069  004ECE  C020  FFD9         	movff	halfSpeedBack@mL,fsr2l
  8070  004ED2  C021  FFDA         	movff	halfSpeedBack@mL+1,fsr2h
  8071  004ED6  0E28               	movlw	40
  8072  004ED8  60DF               	cpfslt	indf2,c
  8073  004EDA  EF71  F027         	goto	u5231
  8074  004EDE  EF73  F027         	goto	u5230
  8075  004EE2                     u5231:
  8076  004EE2  EF7F  F027         	goto	l5226
  8077  004EE6                     u5230:
  8078  004EE6  C022  FFD9         	movff	halfSpeedBack@mR,fsr2l
  8079  004EEA  C023  FFDA         	movff	halfSpeedBack@mR+1,fsr2h
  8080  004EEE  0E27               	movlw	39
  8081  004EF0  64DF               	cpfsgt	indf2,c
  8082  004EF2  EF7D  F027         	goto	u5241
  8083  004EF6  EF7F  F027         	goto	u5240
  8084  004EFA                     u5241:
  8085  004EFA  EF48  F027         	goto	l5214
  8086  004EFE                     u5240:
  8087  004EFE                     l5226:
  8088                           
  8089                           ;dc_motor.c: 194:     _delay((unsigned long)((100)*(64000000/4000.0)));
  8090  004EFE  0E09               	movlw	9
  8091  004F00  6E25               	movwf	(??_halfSpeedBack+1)^0,c
  8092  004F02  0E1E               	movlw	30
  8093  004F04  6E24               	movwf	??_halfSpeedBack^0,c
  8094  004F06  0EE4               	movlw	228
  8095  004F08                     u5957:
  8096  004F08  2EE8               	decfsz	wreg,f,c
  8097  004F0A  D7FE               	bra	u5957
  8098  004F0C  2E24               	decfsz	??_halfSpeedBack^0,f,c
  8099  004F0E  D7FC               	bra	u5957
  8100  004F10  2E25               	decfsz	(??_halfSpeedBack+1)^0,f,c
  8101  004F12  D7FA               	bra	u5957
  8102  004F14  D000               	nop2	
  8103  004F16                     
  8104                           ;dc_motor.c: 195:     stop(mL,mR);
  8105  004F16  C020  F01A         	movff	halfSpeedBack@mL,stop@mL
  8106  004F1A  C021  F01B         	movff	halfSpeedBack@mL+1,stop@mL+1
  8107  004F1E  C022  F01C         	movff	halfSpeedBack@mR,stop@mR
  8108  004F22  C023  F01D         	movff	halfSpeedBack@mR+1,stop@mR+1
  8109  004F26  ECF6  F027         	call	_stop	;wreg free
  8110  004F2A  0012               	return		;funcret
  8111  004F2C                     __end_of_halfSpeedBack:
  8112                           	callstack 0
  8113                           
  8114 ;; *************** function _pin_init *****************
  8115 ;; Defined at:
  8116 ;;		line 100 in file "movement.c"
  8117 ;; Parameters:    Size  Location     Type
  8118 ;;		None
  8119 ;; Auto vars:     Size  Location     Type
  8120 ;;		None
  8121 ;; Return value:  Size  Location     Type
  8122 ;;                  1    wreg      void 
  8123 ;; Registers used:
  8124 ;;		None
  8125 ;; Tracked objects:
  8126 ;;		On entry : 0/0
  8127 ;;		On exit  : 0/0
  8128 ;;		Unchanged: 0/0
  8129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8130 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8131 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8132 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8133 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8134 ;;Total ram usage:        0 bytes
  8135 ;; Hardware stack levels used: 1
  8136 ;; Hardware stack levels required when called: 1
  8137 ;; This function calls:
  8138 ;;		Nothing
  8139 ;; This function is called by:
  8140 ;;		_main
  8141 ;; This function uses a non-reentrant model
  8142 ;;
  8143                           
  8144                           	psect	text34
  8145  0059F6                     __ptext34:
  8146                           	callstack 0
  8147  0059F6                     _pin_init:
  8148                           	callstack 29
  8149  0059F6  8486               	bsf	134,2,c	;volatile
  8150                           
  8151                           ;movement.c: 102:     ANSELFbits.ANSELF2=0;
  8152  0059F8  010E               	movlb	14	; () banked
  8153  0059FA  95B4               	bcf	180,2,b	;volatile
  8154                           
  8155                           ;movement.c: 103:     TRISFbits.TRISF3=1;
  8156  0059FC  8686               	bsf	134,3,c	;volatile
  8157                           
  8158                           ;movement.c: 104:     ANSELFbits.ANSELF3=0;
  8159  0059FE  97B4               	bcf	180,3,b	;volatile
  8160                           
  8161                           ;movement.c: 109:     TRISGbits.TRISG1 = 0;
  8162  005A00  9287               	bcf	135,1,c	;volatile
  8163                           
  8164                           ;movement.c: 110:     TRISFbits.TRISF7 = 0;
  8165  005A02  9E86               	bcf	134,7,c	;volatile
  8166                           
  8167                           ;movement.c: 111:     TRISAbits.TRISA4 = 0;
  8168  005A04  9881               	bcf	129,4,c	;volatile
  8169                           
  8170                           ;movement.c: 112:     LATGbits.LATG1 = 1;
  8171  005A06  827F               	bsf	127,1,c	;volatile
  8172                           
  8173                           ;movement.c: 113:     LATFbits.LATF7 = 1;
  8174  005A08  8E7E               	bsf	126,7,c	;volatile
  8175                           
  8176                           ;movement.c: 114:     LATAbits.LATA4 = 1;
  8177  005A0A  8879               	bsf	121,4,c	;volatile
  8178                           
  8179                           ;movement.c: 117:     TRISDbits.TRISD7 = 0;
  8180  005A0C  9E84               	bcf	132,7,c	;volatile
  8181                           
  8182                           ;movement.c: 118:     LATDbits.LATD7 = 0;
  8183  005A0E  9E7C               	bcf	124,7,c	;volatile
  8184                           
  8185                           ;movement.c: 119:     TRISHbits.TRISH3 = 0;
  8186  005A10  9688               	bcf	136,3,c	;volatile
  8187                           
  8188                           ;movement.c: 120:     LATHbits.LATH3 = 0;
  8189  005A12  9680               	bcf	128,3,c	;volatile
  8190  005A14                     
  8191                           ; BSR set to: 14
  8192  005A14  0012               	return		;funcret
  8193  005A16                     __end_of_pin_init:
  8194                           	callstack 0
  8195                           
  8196 ;; *************** function _initUSART4 *****************
  8197 ;; Defined at:
  8198 ;;		line 4 in file "serial.c"
  8199 ;; Parameters:    Size  Location     Type
  8200 ;;		None
  8201 ;; Auto vars:     Size  Location     Type
  8202 ;;		None
  8203 ;; Return value:  Size  Location     Type
  8204 ;;                  1    wreg      void 
  8205 ;; Registers used:
  8206 ;;		wreg, status,2
  8207 ;; Tracked objects:
  8208 ;;		On entry : 0/0
  8209 ;;		On exit  : 0/0
  8210 ;;		Unchanged: 0/0
  8211 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8212 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8213 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8214 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8215 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8216 ;;Total ram usage:        0 bytes
  8217 ;; Hardware stack levels used: 1
  8218 ;; Hardware stack levels required when called: 1
  8219 ;; This function calls:
  8220 ;;		Nothing
  8221 ;; This function is called by:
  8222 ;;		_main
  8223 ;; This function uses a non-reentrant model
  8224 ;;
  8225                           
  8226                           	psect	text35
  8227  005A36                     __ptext35:
  8228                           	callstack 0
  8229  005A36                     _initUSART4:
  8230                           	callstack 29
  8231  005A36                     
  8232                           ;serial.c: 8:     RC0PPS = 0x12;
  8233  005A36  0E12               	movlw	18
  8234  005A38  010E               	movlb	14	; () banked
  8235  005A3A  6F62               	movwf	98,b	;volatile
  8236                           
  8237                           ;serial.c: 9:     RX4PPS = 0x11;
  8238  005A3C  0E11               	movlw	17
  8239  005A3E  6F15               	movwf	21,b	;volatile
  8240  005A40                     
  8241                           ; BSR set to: 14
  8242                           ;serial.c: 11:     BAUD4CONbits.BRG16 = 0;
  8243  005A40  97E9               	bcf	233,3,b	;volatile
  8244  005A42                     
  8245                           ; BSR set to: 14
  8246                           ;serial.c: 12:     TX4STAbits.BRGH = 0;
  8247  005A42  95E8               	bcf	232,2,b	;volatile
  8248                           
  8249                           ;serial.c: 13:     SP4BRGL = 51;
  8250  005A44  0E33               	movlw	51
  8251  005A46  6FE5               	movwf	229,b	;volatile
  8252                           
  8253                           ;serial.c: 15:     SP4BRGH = 0;
  8254  005A48  0E00               	movlw	0
  8255  005A4A  6FE6               	movwf	230,b	;volatile
  8256  005A4C                     
  8257                           ; BSR set to: 14
  8258                           ;serial.c: 17:     RC4STAbits.CREN = 1;
  8259  005A4C  89E7               	bsf	231,4,b	;volatile
  8260  005A4E                     
  8261                           ; BSR set to: 14
  8262                           ;serial.c: 18:     TX4STAbits.TXEN = 1;
  8263  005A4E  8BE8               	bsf	232,5,b	;volatile
  8264  005A50                     
  8265                           ; BSR set to: 14
  8266                           ;serial.c: 19:     RC4STAbits.SPEN = 1;
  8267  005A50  8FE7               	bsf	231,7,b	;volatile
  8268  005A52                     
  8269                           ; BSR set to: 14
  8270  005A52  0012               	return		;funcret
  8271  005A54                     __end_of_initUSART4:
  8272                           	callstack 0
  8273                           
  8274 ;; *************** function _initDCmotors_parameter *****************
  8275 ;; Defined at:
  8276 ;;		line 40 in file "dc_motor.c"
  8277 ;; Parameters:    Size  Location     Type
  8278 ;;  motorL          2    0[COMRAM] PTR struct DC_motor
  8279 ;;		 -> main@motorL(10), 
  8280 ;;  motorR          2    2[COMRAM] PTR struct DC_motor
  8281 ;;		 -> main@motorR(10), 
  8282 ;; Auto vars:     Size  Location     Type
  8283 ;;		None
  8284 ;; Return value:  Size  Location     Type
  8285 ;;                  1    wreg      void 
  8286 ;; Registers used:
  8287 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8288 ;; Tracked objects:
  8289 ;;		On entry : 0/0
  8290 ;;		On exit  : 0/0
  8291 ;;		Unchanged: 0/0
  8292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8293 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8294 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8295 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8296 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8297 ;;Total ram usage:        4 bytes
  8298 ;; Hardware stack levels used: 1
  8299 ;; Hardware stack levels required when called: 1
  8300 ;; This function calls:
  8301 ;;		Nothing
  8302 ;; This function is called by:
  8303 ;;		_main
  8304 ;; This function uses a non-reentrant model
  8305 ;;
  8306                           
  8307                           	psect	text36
  8308  004A80                     __ptext36:
  8309                           	callstack 0
  8310  004A80                     _initDCmotors_parameter:
  8311                           	callstack 29
  8312  004A80                     
  8313                           ;dc_motor.c: 42:     motorL->power = 0;
  8314  004A80  C001  FFD9         	movff	initDCmotors_parameter@motorL,fsr2l
  8315  004A84  C002  FFDA         	movff	initDCmotors_parameter@motorL+1,fsr2h
  8316  004A88  0E00               	movlw	0
  8317  004A8A  6EDF               	movwf	indf2,c
  8318  004A8C                     
  8319                           ;dc_motor.c: 43:     motorL->direction = 1;
  8320  004A8C  EE20 F001          	lfsr	2,1
  8321  004A90  5001               	movf	initDCmotors_parameter@motorL^0,w,c
  8322  004A92  26D9               	addwf	fsr2l,f,c
  8323  004A94  5002               	movf	(initDCmotors_parameter@motorL+1)^0,w,c
  8324  004A96  22DA               	addwfc	fsr2h,f,c
  8325  004A98  0E01               	movlw	1
  8326  004A9A  6EDF               	movwf	indf2,c
  8327  004A9C                     
  8328                           ;dc_motor.c: 44:     motorL->dutyHighByte = (unsigned char *)(&PWM6DCH);
  8329  004A9C  EE20 F002          	lfsr	2,2
  8330  004AA0  5001               	movf	initDCmotors_parameter@motorL^0,w,c
  8331  004AA2  26D9               	addwf	fsr2l,f,c
  8332  004AA4  5002               	movf	(initDCmotors_parameter@motorL+1)^0,w,c
  8333  004AA6  22DA               	addwfc	fsr2h,f,c
  8334  004AA8  0EA3               	movlw	163
  8335  004AAA  6EDE               	movwf	postinc2,c
  8336  004AAC  0E0F               	movlw	15
  8337  004AAE  6EDD               	movwf	postdec2,c
  8338  004AB0                     
  8339                           ;dc_motor.c: 45:     motorL->dir_LAT = (unsigned char *)(&LATE);
  8340  004AB0  EE20 F004          	lfsr	2,4
  8341  004AB4  5001               	movf	initDCmotors_parameter@motorL^0,w,c
  8342  004AB6  26D9               	addwf	fsr2l,f,c
  8343  004AB8  5002               	movf	(initDCmotors_parameter@motorL+1)^0,w,c
  8344  004ABA  22DA               	addwfc	fsr2h,f,c
  8345  004ABC  0E7D               	movlw	125
  8346  004ABE  6EDE               	movwf	postinc2,c
  8347  004AC0  0E0F               	movlw	15
  8348  004AC2  6EDD               	movwf	postdec2,c
  8349  004AC4                     
  8350                           ;dc_motor.c: 46:     motorL->dir_pin = 4;
  8351  004AC4  EE20 F006          	lfsr	2,6
  8352  004AC8  5001               	movf	initDCmotors_parameter@motorL^0,w,c
  8353  004ACA  26D9               	addwf	fsr2l,f,c
  8354  004ACC  5002               	movf	(initDCmotors_parameter@motorL+1)^0,w,c
  8355  004ACE  22DA               	addwfc	fsr2h,f,c
  8356  004AD0  0E04               	movlw	4
  8357  004AD2  6EDF               	movwf	indf2,c
  8358  004AD4                     
  8359                           ;dc_motor.c: 47:     motorL->PWMperiod = 199;
  8360  004AD4  EE20 F007          	lfsr	2,7
  8361  004AD8  5001               	movf	initDCmotors_parameter@motorL^0,w,c
  8362  004ADA  26D9               	addwf	fsr2l,f,c
  8363  004ADC  5002               	movf	(initDCmotors_parameter@motorL+1)^0,w,c
  8364  004ADE  22DA               	addwfc	fsr2h,f,c
  8365  004AE0  0EC7               	movlw	199
  8366  004AE2  6EDE               	movwf	postinc2,c
  8367  004AE4  0E00               	movlw	0
  8368  004AE6  6EDD               	movwf	postdec2,c
  8369  004AE8                     
  8370                           ;dc_motor.c: 50:     motorR->power = 0;
  8371  004AE8  C003  FFD9         	movff	initDCmotors_parameter@motorR,fsr2l
  8372  004AEC  C004  FFDA         	movff	initDCmotors_parameter@motorR+1,fsr2h
  8373  004AF0  0E00               	movlw	0
  8374  004AF2  6EDF               	movwf	indf2,c
  8375                           
  8376                           ;dc_motor.c: 51:     motorR->direction = 1;
  8377  004AF4  EE20 F001          	lfsr	2,1
  8378  004AF8  5003               	movf	initDCmotors_parameter@motorR^0,w,c
  8379  004AFA  26D9               	addwf	fsr2l,f,c
  8380  004AFC  5004               	movf	(initDCmotors_parameter@motorR+1)^0,w,c
  8381  004AFE  22DA               	addwfc	fsr2h,f,c
  8382  004B00  0E01               	movlw	1
  8383  004B02  6EDF               	movwf	indf2,c
  8384                           
  8385                           ;dc_motor.c: 52:     motorR->dutyHighByte = (unsigned char *)(&PWM7DCH);
  8386  004B04  EE20 F002          	lfsr	2,2
  8387  004B08  5003               	movf	initDCmotors_parameter@motorR^0,w,c
  8388  004B0A  26D9               	addwf	fsr2l,f,c
  8389  004B0C  5004               	movf	(initDCmotors_parameter@motorR+1)^0,w,c
  8390  004B0E  22DA               	addwfc	fsr2h,f,c
  8391  004B10  0EA0               	movlw	160
  8392  004B12  6EDE               	movwf	postinc2,c
  8393  004B14  0E0F               	movlw	15
  8394  004B16  6EDD               	movwf	postdec2,c
  8395                           
  8396                           ;dc_motor.c: 53:     motorR->dir_LAT = (unsigned char *)(&LATG);
  8397  004B18  EE20 F004          	lfsr	2,4
  8398  004B1C  5003               	movf	initDCmotors_parameter@motorR^0,w,c
  8399  004B1E  26D9               	addwf	fsr2l,f,c
  8400  004B20  5004               	movf	(initDCmotors_parameter@motorR+1)^0,w,c
  8401  004B22  22DA               	addwfc	fsr2h,f,c
  8402  004B24  0E7F               	movlw	127
  8403  004B26  6EDE               	movwf	postinc2,c
  8404  004B28  0E0F               	movlw	15
  8405  004B2A  6EDD               	movwf	postdec2,c
  8406                           
  8407                           ;dc_motor.c: 54:     motorR->dir_pin = 6;
  8408  004B2C  EE20 F006          	lfsr	2,6
  8409  004B30  5003               	movf	initDCmotors_parameter@motorR^0,w,c
  8410  004B32  26D9               	addwf	fsr2l,f,c
  8411  004B34  5004               	movf	(initDCmotors_parameter@motorR+1)^0,w,c
  8412  004B36  22DA               	addwfc	fsr2h,f,c
  8413  004B38  0E06               	movlw	6
  8414  004B3A  6EDF               	movwf	indf2,c
  8415                           
  8416                           ;dc_motor.c: 55:     motorR->PWMperiod = 199;
  8417  004B3C  EE20 F007          	lfsr	2,7
  8418  004B40  5003               	movf	initDCmotors_parameter@motorR^0,w,c
  8419  004B42  26D9               	addwf	fsr2l,f,c
  8420  004B44  5004               	movf	(initDCmotors_parameter@motorR+1)^0,w,c
  8421  004B46  22DA               	addwfc	fsr2h,f,c
  8422  004B48  0EC7               	movlw	199
  8423  004B4A  6EDE               	movwf	postinc2,c
  8424  004B4C  0E00               	movlw	0
  8425  004B4E  6EDD               	movwf	postdec2,c
  8426  004B50  0012               	return		;funcret
  8427  004B52                     __end_of_initDCmotors_parameter:
  8428                           	callstack 0
  8429                           
  8430 ;; *************** function _initDCmotorsPWM *****************
  8431 ;; Defined at:
  8432 ;;		line 10 in file "dc_motor.c"
  8433 ;; Parameters:    Size  Location     Type
  8434 ;;  PWMperiod       2    0[COMRAM] int 
  8435 ;; Auto vars:     Size  Location     Type
  8436 ;;		None
  8437 ;; Return value:  Size  Location     Type
  8438 ;;                  1    wreg      void 
  8439 ;; Registers used:
  8440 ;;		wreg, status,2
  8441 ;; Tracked objects:
  8442 ;;		On entry : 0/0
  8443 ;;		On exit  : 0/0
  8444 ;;		Unchanged: 0/0
  8445 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8446 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8447 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8448 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8449 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8450 ;;Total ram usage:        2 bytes
  8451 ;; Hardware stack levels used: 1
  8452 ;; Hardware stack levels required when called: 1
  8453 ;; This function calls:
  8454 ;;		Nothing
  8455 ;; This function is called by:
  8456 ;;		_main
  8457 ;; This function uses a non-reentrant model
  8458 ;;
  8459                           
  8460                           	psect	text37
  8461  005668                     __ptext37:
  8462                           	callstack 0
  8463  005668                     _initDCmotorsPWM:
  8464                           	callstack 29
  8465  005668                     
  8466                           ;dc_motor.c: 13:     TRISEbits.TRISE2=0;
  8467  005668  9485               	bcf	133,2,c	;volatile
  8468                           
  8469                           ;dc_motor.c: 14:     TRISCbits.TRISC7=0;
  8470  00566A  9E83               	bcf	131,7,c	;volatile
  8471                           
  8472                           ;dc_motor.c: 15:     TRISGbits.TRISG6=0;
  8473  00566C  9C87               	bcf	135,6,c	;volatile
  8474                           
  8475                           ;dc_motor.c: 16:     TRISEbits.TRISE4=0;
  8476  00566E  9885               	bcf	133,4,c	;volatile
  8477                           
  8478                           ;dc_motor.c: 17:     LATEbits.LATE2=0;
  8479  005670  947D               	bcf	125,2,c	;volatile
  8480                           
  8481                           ;dc_motor.c: 18:     LATCbits.LATC7=0;
  8482  005672  9E7B               	bcf	123,7,c	;volatile
  8483                           
  8484                           ;dc_motor.c: 19:     LATGbits.LATG6=0;
  8485  005674  9C7F               	bcf	127,6,c	;volatile
  8486                           
  8487                           ;dc_motor.c: 20:     LATEbits.LATE4=0;
  8488  005676  987D               	bcf	125,4,c	;volatile
  8489  005678                     
  8490                           ;dc_motor.c: 23:     T2CONbits.CKPS=0b011;
  8491  005678  50BD               	movf	189,w,c	;volatile
  8492  00567A  0B8F               	andlw	-113
  8493  00567C  0930               	iorlw	48
  8494  00567E  6EBD               	movwf	189,c	;volatile
  8495                           
  8496                           ;dc_motor.c: 24:     T2HLTbits.MODE=0b00000;
  8497  005680  0EE0               	movlw	-32
  8498  005682  16BE               	andwf	190,f,c	;volatile
  8499                           
  8500                           ;dc_motor.c: 25:     T2CLKCONbits.CS=0b0001;
  8501  005684  50BF               	movf	191,w,c	;volatile
  8502  005686  0BF0               	andlw	-16
  8503  005688  0901               	iorlw	1
  8504  00568A  6EBF               	movwf	191,c	;volatile
  8505                           
  8506                           ;dc_motor.c: 28:     T2PR=200-1;
  8507  00568C  0EC7               	movlw	199
  8508  00568E  6EBC               	movwf	188,c	;volatile
  8509  005690                     
  8510                           ;dc_motor.c: 29:     T2CONbits.ON=1;
  8511  005690  8EBD               	bsf	189,7,c	;volatile
  8512                           
  8513                           ;dc_motor.c: 31:     RE2PPS=0x0A;
  8514  005692  0E0A               	movlw	10
  8515  005694  010E               	movlb	14	; () banked
  8516  005696  6F74               	movwf	116,b	;volatile
  8517                           
  8518                           ;dc_motor.c: 32:     RC7PPS=0x0B;
  8519  005698  0E0B               	movlw	11
  8520  00569A  6F69               	movwf	105,b	;volatile
  8521                           
  8522                           ;dc_motor.c: 34:     PWM6DCH=0;
  8523  00569C  0E00               	movlw	0
  8524  00569E  6EA3               	movwf	163,c	;volatile
  8525                           
  8526                           ;dc_motor.c: 35:     PWM7DCH=0;
  8527  0056A0  0E00               	movlw	0
  8528  0056A2  6EA0               	movwf	160,c	;volatile
  8529  0056A4                     
  8530                           ; BSR set to: 14
  8531                           ;dc_motor.c: 37:     PWM6CONbits.EN = 1;
  8532  0056A4  8EA4               	bsf	164,7,c	;volatile
  8533  0056A6                     
  8534                           ; BSR set to: 14
  8535                           ;dc_motor.c: 38:     PWM7CONbits.EN = 1;
  8536  0056A6  8EA1               	bsf	161,7,c	;volatile
  8537  0056A8                     
  8538                           ; BSR set to: 14
  8539  0056A8  0012               	return		;funcret
  8540  0056AA                     __end_of_initDCmotorsPWM:
  8541                           	callstack 0
  8542                           
  8543 ;; *************** function _color_click_init *****************
  8544 ;; Defined at:
  8545 ;;		line 67 in file "color.c"
  8546 ;; Parameters:    Size  Location     Type
  8547 ;;		None
  8548 ;; Auto vars:     Size  Location     Type
  8549 ;;		None
  8550 ;; Return value:  Size  Location     Type
  8551 ;;                  1    wreg      void 
  8552 ;; Registers used:
  8553 ;;		wreg, status,2, status,0, cstack
  8554 ;; Tracked objects:
  8555 ;;		On entry : 0/0
  8556 ;;		On exit  : 0/0
  8557 ;;		Unchanged: 0/0
  8558 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8559 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8560 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8561 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8562 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8563 ;;Total ram usage:        1 bytes
  8564 ;; Hardware stack levels used: 1
  8565 ;; Hardware stack levels required when called: 4
  8566 ;; This function calls:
  8567 ;;		_I2C_2_Master_Init
  8568 ;;		_color_writetoaddr
  8569 ;; This function is called by:
  8570 ;;		_main
  8571 ;; This function uses a non-reentrant model
  8572 ;;
  8573                           
  8574                           	psect	text38
  8575  00584C                     __ptext38:
  8576                           	callstack 0
  8577  00584C                     _color_click_init:
  8578                           	callstack 26
  8579  00584C                     
  8580                           ;color.c: 70:     I2C_2_Master_Init();
  8581  00584C  EC6F  F02C         	call	_I2C_2_Master_Init	;wreg free
  8582  005850                     
  8583                           ;color.c: 73:  color_writetoaddr(0x00, 0x01);
  8584  005850  0E01               	movlw	1
  8585  005852  6E03               	movwf	color_writetoaddr@value^0,c
  8586  005854  0E00               	movlw	0
  8587  005856  EC0B  F02D         	call	_color_writetoaddr
  8588  00585A                     
  8589                           ;color.c: 74:     _delay((unsigned long)((3)*(64000000/4000.0)));
  8590  00585A  0E3F               	movlw	63
  8591  00585C  6E05               	movwf	??_color_click_init^0,c
  8592  00585E  0E55               	movlw	85
  8593  005860                     u5967:
  8594  005860  2EE8               	decfsz	wreg,f,c
  8595  005862  D7FE               	bra	u5967
  8596  005864  2E05               	decfsz	??_color_click_init^0,f,c
  8597  005866  D7FC               	bra	u5967
  8598  005868  F000               	nop	
  8599  00586A                     
  8600                           ;color.c: 77:  color_writetoaddr(0x00, 0x03);
  8601  00586A  0E03               	movlw	3
  8602  00586C  6E03               	movwf	color_writetoaddr@value^0,c
  8603  00586E  0E00               	movlw	0
  8604  005870  EC0B  F02D         	call	_color_writetoaddr
  8605  005874                     
  8606                           ;color.c: 80:  color_writetoaddr(0x01, 0xD5);
  8607  005874  0ED5               	movlw	213
  8608  005876  6E03               	movwf	color_writetoaddr@value^0,c
  8609  005878  0E01               	movlw	1
  8610  00587A  EC0B  F02D         	call	_color_writetoaddr
  8611  00587E  0012               	return		;funcret
  8612  005880                     __end_of_color_click_init:
  8613                           	callstack 0
  8614                           
  8615 ;; *************** function _color_writetoaddr *****************
  8616 ;; Defined at:
  8617 ;;		line 83 in file "color.c"
  8618 ;; Parameters:    Size  Location     Type
  8619 ;;  address         1    wreg     unsigned char 
  8620 ;;  value           1    2[COMRAM] unsigned char 
  8621 ;; Auto vars:     Size  Location     Type
  8622 ;;  address         1    3[COMRAM] unsigned char 
  8623 ;; Return value:  Size  Location     Type
  8624 ;;                  1    wreg      void 
  8625 ;; Registers used:
  8626 ;;		wreg, status,2, status,0, cstack
  8627 ;; Tracked objects:
  8628 ;;		On entry : 0/0
  8629 ;;		On exit  : 0/0
  8630 ;;		Unchanged: 0/0
  8631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8632 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8633 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8634 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8635 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8636 ;;Total ram usage:        2 bytes
  8637 ;; Hardware stack levels used: 1
  8638 ;; Hardware stack levels required when called: 3
  8639 ;; This function calls:
  8640 ;;		_I2C_2_Master_Start
  8641 ;;		_I2C_2_Master_Stop
  8642 ;;		_I2C_2_Master_Write
  8643 ;; This function is called by:
  8644 ;;		_color_click_init
  8645 ;; This function uses a non-reentrant model
  8646 ;;
  8647                           
  8648                           	psect	text39
  8649  005A16                     __ptext39:
  8650                           	callstack 0
  8651  005A16                     _color_writetoaddr:
  8652                           	callstack 26
  8653                           
  8654                           ;incstack = 0
  8655                           ;color_writetoaddr@address stored from wreg
  8656  005A16  6E04               	movwf	color_writetoaddr@address^0,c
  8657  005A18                     
  8658                           ;color.c: 84:     I2C_2_Master_Start();
  8659  005A18  EC66  F02D         	call	_I2C_2_Master_Start	;wreg free
  8660                           
  8661                           ;color.c: 85:     I2C_2_Master_Write(0x52 | 0x00);
  8662  005A1C  0E52               	movlw	82
  8663  005A1E  EC50  F02D         	call	_I2C_2_Master_Write
  8664                           
  8665                           ;color.c: 86:     I2C_2_Master_Write(0x80 | address);
  8666  005A22  5004               	movf	color_writetoaddr@address^0,w,c
  8667  005A24  0980               	iorlw	128
  8668  005A26  EC50  F02D         	call	_I2C_2_Master_Write
  8669                           
  8670                           ;color.c: 87:     I2C_2_Master_Write(value);
  8671  005A2A  5003               	movf	color_writetoaddr@value^0,w,c
  8672  005A2C  EC50  F02D         	call	_I2C_2_Master_Write
  8673                           
  8674                           ;color.c: 88:     I2C_2_Master_Stop();
  8675  005A30  EC61  F02D         	call	_I2C_2_Master_Stop	;wreg free
  8676  005A34  0012               	return		;funcret
  8677  005A36                     __end_of_color_writetoaddr:
  8678                           	callstack 0
  8679                           
  8680 ;; *************** function _I2C_2_Master_Write *****************
  8681 ;; Defined at:
  8682 ;;		line 45 in file "i2c.c"
  8683 ;; Parameters:    Size  Location     Type
  8684 ;;  data_byte       1    wreg     unsigned char 
  8685 ;; Auto vars:     Size  Location     Type
  8686 ;;  data_byte       1    1[COMRAM] unsigned char 
  8687 ;; Return value:  Size  Location     Type
  8688 ;;                  1    wreg      void 
  8689 ;; Registers used:
  8690 ;;		wreg, status,2, status,0, cstack
  8691 ;; Tracked objects:
  8692 ;;		On entry : 0/0
  8693 ;;		On exit  : 0/0
  8694 ;;		Unchanged: 0/0
  8695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8696 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8697 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8698 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8699 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8700 ;;Total ram usage:        1 bytes
  8701 ;; Hardware stack levels used: 1
  8702 ;; Hardware stack levels required when called: 2
  8703 ;; This function calls:
  8704 ;;		_I2C_2_Master_Idle
  8705 ;; This function is called by:
  8706 ;;		_color_writetoaddr
  8707 ;;		_color_read_Red
  8708 ;;		_color_read_Blue
  8709 ;;		_color_read_Green
  8710 ;;		_color_read_Clear
  8711 ;; This function uses a non-reentrant model
  8712 ;;
  8713                           
  8714                           	psect	text40
  8715  005AA0                     __ptext40:
  8716                           	callstack 0
  8717  005AA0                     _I2C_2_Master_Write:
  8718                           	callstack 24
  8719                           
  8720                           ;incstack = 0
  8721                           ;I2C_2_Master_Write@data_byte stored from wreg
  8722  005AA0  6E02               	movwf	I2C_2_Master_Write@data_byte^0,c
  8723  005AA2                     
  8724                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  8725  005AA2  EC84  F02C         	call	_I2C_2_Master_Idle	;wreg free
  8726  005AA6                     
  8727                           ;i2c.c: 48:   SSP2BUF = data_byte;
  8728  005AA6  C002  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  8729  005AAA  0012               	return		;funcret
  8730  005AAC                     __end_of_I2C_2_Master_Write:
  8731                           	callstack 0
  8732                           
  8733 ;; *************** function _I2C_2_Master_Stop *****************
  8734 ;; Defined at:
  8735 ;;		line 39 in file "i2c.c"
  8736 ;; Parameters:    Size  Location     Type
  8737 ;;		None
  8738 ;; Auto vars:     Size  Location     Type
  8739 ;;		None
  8740 ;; Return value:  Size  Location     Type
  8741 ;;                  1    wreg      void 
  8742 ;; Registers used:
  8743 ;;		wreg, status,2, status,0, cstack
  8744 ;; Tracked objects:
  8745 ;;		On entry : 0/0
  8746 ;;		On exit  : 0/0
  8747 ;;		Unchanged: 0/0
  8748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8749 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8750 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8751 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8752 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8753 ;;Total ram usage:        0 bytes
  8754 ;; Hardware stack levels used: 1
  8755 ;; Hardware stack levels required when called: 2
  8756 ;; This function calls:
  8757 ;;		_I2C_2_Master_Idle
  8758 ;; This function is called by:
  8759 ;;		_color_writetoaddr
  8760 ;;		_color_read_Red
  8761 ;;		_color_read_Blue
  8762 ;;		_color_read_Green
  8763 ;;		_color_read_Clear
  8764 ;; This function uses a non-reentrant model
  8765 ;;
  8766                           
  8767                           	psect	text41
  8768  005AC2                     __ptext41:
  8769                           	callstack 0
  8770  005AC2                     _I2C_2_Master_Stop:
  8771                           	callstack 24
  8772  005AC2                     
  8773                           ;i2c.c: 41:   I2C_2_Master_Idle();
  8774  005AC2  EC84  F02C         	call	_I2C_2_Master_Idle	;wreg free
  8775  005AC6                     
  8776                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  8777  005AC6  010E               	movlb	14	; () banked
  8778  005AC8  85DA               	bsf	218,2,b	;volatile
  8779  005ACA                     
  8780                           ; BSR set to: 14
  8781  005ACA  0012               	return		;funcret
  8782  005ACC                     __end_of_I2C_2_Master_Stop:
  8783                           	callstack 0
  8784                           
  8785 ;; *************** function _I2C_2_Master_Start *****************
  8786 ;; Defined at:
  8787 ;;		line 27 in file "i2c.c"
  8788 ;; Parameters:    Size  Location     Type
  8789 ;;		None
  8790 ;; Auto vars:     Size  Location     Type
  8791 ;;		None
  8792 ;; Return value:  Size  Location     Type
  8793 ;;                  1    wreg      void 
  8794 ;; Registers used:
  8795 ;;		wreg, status,2, status,0, cstack
  8796 ;; Tracked objects:
  8797 ;;		On entry : 0/0
  8798 ;;		On exit  : 0/0
  8799 ;;		Unchanged: 0/0
  8800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8801 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8802 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8803 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8804 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8805 ;;Total ram usage:        0 bytes
  8806 ;; Hardware stack levels used: 1
  8807 ;; Hardware stack levels required when called: 2
  8808 ;; This function calls:
  8809 ;;		_I2C_2_Master_Idle
  8810 ;; This function is called by:
  8811 ;;		_color_writetoaddr
  8812 ;;		_color_read_Red
  8813 ;;		_color_read_Blue
  8814 ;;		_color_read_Green
  8815 ;;		_color_read_Clear
  8816 ;; This function uses a non-reentrant model
  8817 ;;
  8818                           
  8819                           	psect	text42
  8820  005ACC                     __ptext42:
  8821                           	callstack 0
  8822  005ACC                     _I2C_2_Master_Start:
  8823                           	callstack 24
  8824  005ACC                     
  8825                           ;i2c.c: 29:   I2C_2_Master_Idle();
  8826  005ACC  EC84  F02C         	call	_I2C_2_Master_Idle	;wreg free
  8827  005AD0                     
  8828                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  8829  005AD0  010E               	movlb	14	; () banked
  8830  005AD2  81DA               	bsf	218,0,b	;volatile
  8831  005AD4                     
  8832                           ; BSR set to: 14
  8833  005AD4  0012               	return		;funcret
  8834  005AD6                     __end_of_I2C_2_Master_Start:
  8835                           	callstack 0
  8836                           
  8837 ;; *************** function _I2C_2_Master_Idle *****************
  8838 ;; Defined at:
  8839 ;;		line 22 in file "i2c.c"
  8840 ;; Parameters:    Size  Location     Type
  8841 ;;		None
  8842 ;; Auto vars:     Size  Location     Type
  8843 ;;		None
  8844 ;; Return value:  Size  Location     Type
  8845 ;;                  1    wreg      void 
  8846 ;; Registers used:
  8847 ;;		wreg, status,2, status,0
  8848 ;; Tracked objects:
  8849 ;;		On entry : 0/0
  8850 ;;		On exit  : 0/0
  8851 ;;		Unchanged: 0/0
  8852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8853 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8854 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8855 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8856 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8857 ;;Total ram usage:        1 bytes
  8858 ;; Hardware stack levels used: 1
  8859 ;; Hardware stack levels required when called: 1
  8860 ;; This function calls:
  8861 ;;		Nothing
  8862 ;; This function is called by:
  8863 ;;		_I2C_2_Master_Start
  8864 ;;		_I2C_2_Master_RepStart
  8865 ;;		_I2C_2_Master_Stop
  8866 ;;		_I2C_2_Master_Write
  8867 ;;		_I2C_2_Master_Read
  8868 ;; This function uses a non-reentrant model
  8869 ;;
  8870                           
  8871                           	psect	text43
  8872  005908                     __ptext43:
  8873                           	callstack 0
  8874  005908                     _I2C_2_Master_Idle:
  8875                           	callstack 24
  8876  005908                     l205:
  8877  005908  010E               	movlb	14	; () banked
  8878  00590A  B5D8               	btfsc	216,2,b	;volatile
  8879  00590C  EF8A  F02C         	goto	u3291
  8880  005910  EF8C  F02C         	goto	u3290
  8881  005914                     u3291:
  8882  005914  EF84  F02C         	goto	l205
  8883  005918                     u3290:
  8884  005918                     
  8885                           ; BSR set to: 14
  8886  005918  CEDA F001          	movff	3802,??_I2C_2_Master_Idle	;volatile
  8887  00591C  0E1F               	movlw	31
  8888  00591E  1601               	andwf	??_I2C_2_Master_Idle^0,f,c
  8889  005920  A4D8               	btfss	status,2,c
  8890  005922  EF95  F02C         	goto	u3301
  8891  005926  EF97  F02C         	goto	u3300
  8892  00592A                     u3301:
  8893  00592A  EF84  F02C         	goto	l205
  8894  00592E                     u3300:
  8895  00592E                     
  8896                           ; BSR set to: 14
  8897  00592E  0012               	return		;funcret
  8898  005930                     __end_of_I2C_2_Master_Idle:
  8899                           	callstack 0
  8900                           
  8901 ;; *************** function _I2C_2_Master_Init *****************
  8902 ;; Defined at:
  8903 ;;		line 4 in file "i2c.c"
  8904 ;; Parameters:    Size  Location     Type
  8905 ;;		None
  8906 ;; Auto vars:     Size  Location     Type
  8907 ;;		None
  8908 ;; Return value:  Size  Location     Type
  8909 ;;                  1    wreg      void 
  8910 ;; Registers used:
  8911 ;;		wreg, status,2
  8912 ;; Tracked objects:
  8913 ;;		On entry : 0/0
  8914 ;;		On exit  : 0/0
  8915 ;;		Unchanged: 0/0
  8916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8917 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8918 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8919 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8920 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8921 ;;Total ram usage:        0 bytes
  8922 ;; Hardware stack levels used: 1
  8923 ;; Hardware stack levels required when called: 1
  8924 ;; This function calls:
  8925 ;;		Nothing
  8926 ;; This function is called by:
  8927 ;;		_color_click_init
  8928 ;;		_main
  8929 ;; This function uses a non-reentrant model
  8930 ;;
  8931                           
  8932                           	psect	text44
  8933  0058DE                     __ptext44:
  8934                           	callstack 0
  8935  0058DE                     _I2C_2_Master_Init:
  8936                           	callstack 28
  8937  0058DE                     
  8938                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  8939  0058DE  010E               	movlb	14	; () banked
  8940  0058E0  51D9               	movf	217,w,b	;volatile
  8941  0058E2  0BF0               	andlw	-16
  8942  0058E4  0908               	iorlw	8
  8943  0058E6  6FD9               	movwf	217,b	;volatile
  8944  0058E8                     
  8945                           ; BSR set to: 14
  8946                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  8947  0058E8  8BD9               	bsf	217,5,b	;volatile
  8948                           
  8949                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  8950  0058EA  0E9F               	movlw	159
  8951  0058EC  6FD6               	movwf	214,b	;volatile
  8952  0058EE                     
  8953                           ; BSR set to: 14
  8954                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  8955  0058EE  8A84               	bsf	132,5,c	;volatile
  8956  0058F0                     
  8957                           ; BSR set to: 14
  8958                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  8959  0058F0  8C84               	bsf	132,6,c	;volatile
  8960  0058F2                     
  8961                           ; BSR set to: 14
  8962                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  8963  0058F2  9BA7               	bcf	167,5,b	;volatile
  8964  0058F4                     
  8965                           ; BSR set to: 14
  8966                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  8967  0058F4  9DA7               	bcf	167,6,b	;volatile
  8968                           
  8969                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  8970  0058F6  0E1D               	movlw	29
  8971  0058F8  6F1D               	movwf	29,b	;volatile
  8972                           
  8973                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  8974  0058FA  0E1E               	movlw	30
  8975  0058FC  6F1C               	movwf	28,b	;volatile
  8976                           
  8977                           ;i2c.c: 18:   RD5PPS=0x1C;
  8978  0058FE  0E1C               	movlw	28
  8979  005900  6F6F               	movwf	111,b	;volatile
  8980                           
  8981                           ;i2c.c: 19:   RD6PPS=0x1B;
  8982  005902  0E1B               	movlw	27
  8983  005904  6F70               	movwf	112,b	;volatile
  8984  005906                     
  8985                           ; BSR set to: 14
  8986  005906  0012               	return		;funcret
  8987  005908                     __end_of_I2C_2_Master_Init:
  8988                           	callstack 0
  8989                           
  8990 ;; *************** function _buggylight_init *****************
  8991 ;; Defined at:
  8992 ;;		line 13 in file "color.c"
  8993 ;; Parameters:    Size  Location     Type
  8994 ;;		None
  8995 ;; Auto vars:     Size  Location     Type
  8996 ;;		None
  8997 ;; Return value:  Size  Location     Type
  8998 ;;                  1    wreg      void 
  8999 ;; Registers used:
  9000 ;;		None
  9001 ;; Tracked objects:
  9002 ;;		On entry : 0/0
  9003 ;;		On exit  : 0/0
  9004 ;;		Unchanged: 0/0
  9005 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9006 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9007 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9008 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9009 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9010 ;;Total ram usage:        0 bytes
  9011 ;; Hardware stack levels used: 1
  9012 ;; Hardware stack levels required when called: 1
  9013 ;; This function calls:
  9014 ;;		Nothing
  9015 ;; This function is called by:
  9016 ;;		_main
  9017 ;; This function uses a non-reentrant model
  9018 ;;
  9019                           
  9020                           	psect	text45
  9021  005A8A                     __ptext45:
  9022                           	callstack 0
  9023  005A8A                     _buggylight_init:
  9024                           	callstack 29
  9025  005A8A                     
  9026                           ;color.c: 15:     TRISHbits.TRISH1=0;
  9027  005A8A  9288               	bcf	136,1,c	;volatile
  9028                           
  9029                           ;color.c: 16:     TRISDbits.TRISD4=0;
  9030  005A8C  9884               	bcf	132,4,c	;volatile
  9031                           
  9032                           ;color.c: 17:     TRISDbits.TRISD3=0;
  9033  005A8E  9684               	bcf	132,3,c	;volatile
  9034                           
  9035                           ;color.c: 18:     TRISFbits.TRISF0=0;
  9036  005A90  9086               	bcf	134,0,c	;volatile
  9037                           
  9038                           ;color.c: 19:     TRISHbits.TRISH0=0;
  9039  005A92  9088               	bcf	136,0,c	;volatile
  9040                           
  9041                           ;color.c: 21:     LATHbits.LATH1 = 0;
  9042  005A94  9280               	bcf	128,1,c	;volatile
  9043                           
  9044                           ;color.c: 22:     LATDbits.LATD4 = 0;
  9045  005A96  987C               	bcf	124,4,c	;volatile
  9046                           
  9047                           ;color.c: 23:     LATDbits.LATD3 = 0;
  9048  005A98  967C               	bcf	124,3,c	;volatile
  9049                           
  9050                           ;color.c: 24:     LATFbits.LATF0 = 0;
  9051  005A9A  907E               	bcf	126,0,c	;volatile
  9052                           
  9053                           ;color.c: 25:     LATHbits.LATH0 = 0;
  9054  005A9C  9080               	bcf	128,0,c	;volatile
  9055  005A9E  0012               	return		;funcret
  9056  005AA0                     __end_of_buggylight_init:
  9057                           	callstack 0
  9058                           
  9059 ;; *************** function _action *****************
  9060 ;; Defined at:
  9061 ;;		line 19 in file "movement.c"
  9062 ;; Parameters:    Size  Location     Type
  9063 ;;  color           1    wreg     unsigned char 
  9064 ;;  mL              2  128[BANK0 ] PTR struct DC_motor
  9065 ;;		 -> main@motorL(10), 
  9066 ;;  mR              2  130[BANK0 ] PTR struct DC_motor
  9067 ;;		 -> main@motorR(10), 
  9068 ;; Auto vars:     Size  Location     Type
  9069 ;;  color           1  200[BANK2 ] unsigned char 
  9070 ;;  buf           100  100[BANK2 ] unsigned char [100]
  9071 ;; Return value:  Size  Location     Type
  9072 ;;                  1    wreg      void 
  9073 ;; Registers used:
  9074 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9075 ;; Tracked objects:
  9076 ;;		On entry : 0/0
  9077 ;;		On exit  : 0/0
  9078 ;;		Unchanged: 0/0
  9079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9080 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9081 ;;      Locals:         0       0       0     101       0       0       0       0       0       0       0       0       
      +0       0       0
  9082 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9083 ;;      Totals:         0       4       0     101       0       0       0       0       0       0       0       0       
      +0       0       0
  9084 ;;Total ram usage:      105 bytes
  9085 ;; Hardware stack levels used: 1
  9086 ;; Hardware stack levels required when called: 11
  9087 ;; This function calls:
  9088 ;;		_goback
  9089 ;;		_reverse_square
  9090 ;;		_sendStringSerial4
  9091 ;;		_short_reverse
  9092 ;;		_sprintf
  9093 ;;		_toggle_light
  9094 ;;		_turnLeft
  9095 ;;		_turnRight
  9096 ;; This function is called by:
  9097 ;;		_main
  9098 ;; This function uses a non-reentrant model
  9099 ;;
  9100                           
  9101                           	psect	text46
  9102  002E40                     __ptext46:
  9103                           	callstack 0
  9104  002E40                     _action:
  9105                           	callstack 19
  9106                           
  9107                           ;incstack = 0
  9108                           ;action@color stored from wreg
  9109  002E40  0102               	movlb	2	; () banked
  9110  002E42  6FC8               	movwf	action@color& (0+255),b
  9111  002E44                     
  9112                           ;movement.c: 19: void action(unsigned char color, struct DC_motor *mL, struct DC_motor *
      +                          mR);movement.c: 20: {;movement.c: 23:     if (color != 0){
  9113  002E44  0102               	movlb	2	; () banked
  9114  002E46  51C8               	movf	action@color& (0+255),w,b
  9115  002E48  B4D8               	btfsc	status,2,c
  9116  002E4A  EF29  F017         	goto	u5451
  9117  002E4E  EF2B  F017         	goto	u5450
  9118  002E52                     u5451:
  9119  002E52  EFA3  F018         	goto	l641
  9120  002E56                     u5450:
  9121  002E56                     
  9122                           ; BSR set to: 2
  9123                           ;movement.c: 25:         char buf[100];;movement.c: 26:         sprintf(buf,"result: %d\
      +                          r\n", color);
  9124  002E56  0E64               	movlw	low action@buf
  9125  002E58  0100               	movlb	0	; () banked
  9126  002E5A  6F60               	movwf	sprintf@s& (0+255),b
  9127  002E5C  0E02               	movlw	high action@buf
  9128  002E5E  6F61               	movwf	(sprintf@s+1)& (0+255),b
  9129  002E60  0E24               	movlw	low STR_3
  9130  002E62  6F62               	movwf	sprintf@fmt& (0+255),b
  9131  002E64  0E0E               	movlw	high STR_3
  9132  002E66  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
  9133  002E68  C2C8  F064         	movff	action@color,?_sprintf+4
  9134  002E6C  6B65               	clrf	(?_sprintf+5)& (0+255),b
  9135  002E6E  EC05  F02A         	call	_sprintf	;wreg free
  9136  002E72                     
  9137                           ;movement.c: 27:         sendStringSerial4(buf);
  9138  002E72  0E64               	movlw	low action@buf
  9139  002E74  6E02               	movwf	sendStringSerial4@string^0,c
  9140  002E76  0E02               	movlw	high action@buf
  9141  002E78  6E03               	movwf	(sendStringSerial4@string+1)^0,c
  9142  002E7A  EC40  F02C         	call	_sendStringSerial4	;wreg free
  9143  002E7E                     
  9144                           ;movement.c: 28:         if (color == 1){
  9145  002E7E  0102               	movlb	2	; () banked
  9146  002E80  05C8               	decf	action@color& (0+255),w,b
  9147  002E82  A4D8               	btfss	status,2,c
  9148  002E84  EF46  F017         	goto	u5461
  9149  002E88  EF48  F017         	goto	u5460
  9150  002E8C                     u5461:
  9151  002E8C  EF6C  F017         	goto	l5478
  9152  002E90                     u5460:
  9153  002E90                     
  9154                           ; BSR set to: 2
  9155                           ;movement.c: 29:             short_reverse(mL,mR);
  9156  002E90  C0E0  F026         	movff	action@mL,short_reverse@mL
  9157  002E94  C0E1  F027         	movff	action@mL+1,short_reverse@mL+1
  9158  002E98  C0E2  F028         	movff	action@mR,short_reverse@mR
  9159  002E9C  C0E3  F029         	movff	action@mR+1,short_reverse@mR+1
  9160  002EA0  EC55  F02B         	call	_short_reverse	;wreg free
  9161                           
  9162                           ;movement.c: 30:             turnRight(mL,mR,90);
  9163  002EA4  C0E0  F020         	movff	action@mL,turnRight@mL
  9164  002EA8  C0E1  F021         	movff	action@mL+1,turnRight@mL+1
  9165  002EAC  C0E2  F022         	movff	action@mR,turnRight@mR
  9166  002EB0  C0E3  F023         	movff	action@mR+1,turnRight@mR+1
  9167  002EB4  0E5A               	movlw	90
  9168  002EB6  6E24               	movwf	turnRight@angle_right^0,c
  9169  002EB8  ECDD  F01F         	call	_turnRight	;wreg free
  9170  002EBC                     
  9171                           ;movement.c: 31:             memory[array_index] = 1;
  9172  002EBC  0100               	movlb	0	; () banked
  9173  002EBE  51F9               	movf	_array_index& (0+255),w,b
  9174  002EC0  0D02               	mullw	2
  9175  002EC2  0E3C               	movlw	low _memory
  9176  002EC4  24F3               	addwf	243,w,c
  9177  002EC6  6ED9               	movwf	fsr2l,c
  9178  002EC8  0E03               	movlw	high _memory
  9179  002ECA  20F4               	addwfc	prodh,w,c
  9180  002ECC  6EDA               	movwf	fsr2h,c
  9181  002ECE  0E01               	movlw	1
  9182  002ED0  6EDE               	movwf	postinc2,c
  9183  002ED2  0E00               	movlw	0
  9184  002ED4  6EDD               	movwf	postdec2,c
  9185  002ED6                     
  9186                           ; BSR set to: 0
  9187                           ;movement.c: 32:             array_index++;
  9188  002ED6  2BF9               	incf	_array_index& (0+255),f,b
  9189  002ED8                     l5478:
  9190                           
  9191                           ;movement.c: 34:         if (color == 2){
  9192  002ED8  0E02               	movlw	2
  9193  002EDA  0102               	movlb	2	; () banked
  9194  002EDC  19C8               	xorwf	action@color& (0+255),w,b
  9195  002EDE  A4D8               	btfss	status,2,c
  9196  002EE0  EF74  F017         	goto	u5471
  9197  002EE4  EF76  F017         	goto	u5470
  9198  002EE8                     u5471:
  9199  002EE8  EF9A  F017         	goto	l5486
  9200  002EEC                     u5470:
  9201  002EEC                     
  9202                           ; BSR set to: 2
  9203                           ;movement.c: 35:             short_reverse(mL,mR);
  9204  002EEC  C0E0  F026         	movff	action@mL,short_reverse@mL
  9205  002EF0  C0E1  F027         	movff	action@mL+1,short_reverse@mL+1
  9206  002EF4  C0E2  F028         	movff	action@mR,short_reverse@mR
  9207  002EF8  C0E3  F029         	movff	action@mR+1,short_reverse@mR+1
  9208  002EFC  EC55  F02B         	call	_short_reverse	;wreg free
  9209                           
  9210                           ;movement.c: 36:             turnLeft(mL,mR,90);
  9211  002F00  C0E0  F020         	movff	action@mL,turnLeft@mL
  9212  002F04  C0E1  F021         	movff	action@mL+1,turnLeft@mL+1
  9213  002F08  C0E2  F022         	movff	action@mR,turnLeft@mR
  9214  002F0C  C0E3  F023         	movff	action@mR+1,turnLeft@mR+1
  9215  002F10  0E5A               	movlw	90
  9216  002F12  6E24               	movwf	turnLeft@angle_left^0,c
  9217  002F14  ECA4  F020         	call	_turnLeft	;wreg free
  9218  002F18                     
  9219                           ;movement.c: 37:             memory[array_index] = 2;
  9220  002F18  0100               	movlb	0	; () banked
  9221  002F1A  51F9               	movf	_array_index& (0+255),w,b
  9222  002F1C  0D02               	mullw	2
  9223  002F1E  0E3C               	movlw	low _memory
  9224  002F20  24F3               	addwf	243,w,c
  9225  002F22  6ED9               	movwf	fsr2l,c
  9226  002F24  0E03               	movlw	high _memory
  9227  002F26  20F4               	addwfc	prodh,w,c
  9228  002F28  6EDA               	movwf	fsr2h,c
  9229  002F2A  0E02               	movlw	2
  9230  002F2C  6EDE               	movwf	postinc2,c
  9231  002F2E  0E00               	movlw	0
  9232  002F30  6EDD               	movwf	postdec2,c
  9233  002F32                     
  9234                           ; BSR set to: 0
  9235                           ;movement.c: 38:             array_index++;
  9236  002F32  2BF9               	incf	_array_index& (0+255),f,b
  9237  002F34                     l5486:
  9238                           
  9239                           ;movement.c: 40:         if (color == 3){
  9240  002F34  0E03               	movlw	3
  9241  002F36  0102               	movlb	2	; () banked
  9242  002F38  19C8               	xorwf	action@color& (0+255),w,b
  9243  002F3A  A4D8               	btfss	status,2,c
  9244  002F3C  EFA2  F017         	goto	u5481
  9245  002F40  EFA4  F017         	goto	u5480
  9246  002F44                     u5481:
  9247  002F44  EFC8  F017         	goto	l5494
  9248  002F48                     u5480:
  9249  002F48                     
  9250                           ; BSR set to: 2
  9251                           ;movement.c: 41:             short_reverse(mL,mR);
  9252  002F48  C0E0  F026         	movff	action@mL,short_reverse@mL
  9253  002F4C  C0E1  F027         	movff	action@mL+1,short_reverse@mL+1
  9254  002F50  C0E2  F028         	movff	action@mR,short_reverse@mR
  9255  002F54  C0E3  F029         	movff	action@mR+1,short_reverse@mR+1
  9256  002F58  EC55  F02B         	call	_short_reverse	;wreg free
  9257                           
  9258                           ;movement.c: 42:             turnLeft(mL,mR,180);
  9259  002F5C  C0E0  F020         	movff	action@mL,turnLeft@mL
  9260  002F60  C0E1  F021         	movff	action@mL+1,turnLeft@mL+1
  9261  002F64  C0E2  F022         	movff	action@mR,turnLeft@mR
  9262  002F68  C0E3  F023         	movff	action@mR+1,turnLeft@mR+1
  9263  002F6C  0EB4               	movlw	180
  9264  002F6E  6E24               	movwf	turnLeft@angle_left^0,c
  9265  002F70  ECA4  F020         	call	_turnLeft	;wreg free
  9266  002F74                     
  9267                           ;movement.c: 43:             memory[array_index] = 3;
  9268  002F74  0100               	movlb	0	; () banked
  9269  002F76  51F9               	movf	_array_index& (0+255),w,b
  9270  002F78  0D02               	mullw	2
  9271  002F7A  0E3C               	movlw	low _memory
  9272  002F7C  24F3               	addwf	243,w,c
  9273  002F7E  6ED9               	movwf	fsr2l,c
  9274  002F80  0E03               	movlw	high _memory
  9275  002F82  20F4               	addwfc	prodh,w,c
  9276  002F84  6EDA               	movwf	fsr2h,c
  9277  002F86  0E03               	movlw	3
  9278  002F88  6EDE               	movwf	postinc2,c
  9279  002F8A  0E00               	movlw	0
  9280  002F8C  6EDD               	movwf	postdec2,c
  9281  002F8E                     
  9282                           ; BSR set to: 0
  9283                           ;movement.c: 44:             array_index++;
  9284  002F8E  2BF9               	incf	_array_index& (0+255),f,b
  9285  002F90                     l5494:
  9286                           
  9287                           ;movement.c: 46:         if (color == 4){
  9288  002F90  0E04               	movlw	4
  9289  002F92  0102               	movlb	2	; () banked
  9290  002F94  19C8               	xorwf	action@color& (0+255),w,b
  9291  002F96  A4D8               	btfss	status,2,c
  9292  002F98  EFD0  F017         	goto	u5491
  9293  002F9C  EFD2  F017         	goto	u5490
  9294  002FA0                     u5491:
  9295  002FA0  EFF6  F017         	goto	l5502
  9296  002FA4                     u5490:
  9297  002FA4                     
  9298                           ; BSR set to: 2
  9299                           ;movement.c: 47:             reverse_square(mL,mR);
  9300  002FA4  C0E0  F026         	movff	action@mL,reverse_square@mL
  9301  002FA8  C0E1  F027         	movff	action@mL+1,reverse_square@mL+1
  9302  002FAC  C0E2  F028         	movff	action@mR,reverse_square@mR
  9303  002FB0  C0E3  F029         	movff	action@mR+1,reverse_square@mR+1
  9304  002FB4  EC75  F02B         	call	_reverse_square	;wreg free
  9305                           
  9306                           ;movement.c: 48:             turnRight(mL,mR,90);
  9307  002FB8  C0E0  F020         	movff	action@mL,turnRight@mL
  9308  002FBC  C0E1  F021         	movff	action@mL+1,turnRight@mL+1
  9309  002FC0  C0E2  F022         	movff	action@mR,turnRight@mR
  9310  002FC4  C0E3  F023         	movff	action@mR+1,turnRight@mR+1
  9311  002FC8  0E5A               	movlw	90
  9312  002FCA  6E24               	movwf	turnRight@angle_right^0,c
  9313  002FCC  ECDD  F01F         	call	_turnRight	;wreg free
  9314  002FD0                     
  9315                           ;movement.c: 49:             memory[array_index] = 4;
  9316  002FD0  0100               	movlb	0	; () banked
  9317  002FD2  51F9               	movf	_array_index& (0+255),w,b
  9318  002FD4  0D02               	mullw	2
  9319  002FD6  0E3C               	movlw	low _memory
  9320  002FD8  24F3               	addwf	243,w,c
  9321  002FDA  6ED9               	movwf	fsr2l,c
  9322  002FDC  0E03               	movlw	high _memory
  9323  002FDE  20F4               	addwfc	prodh,w,c
  9324  002FE0  6EDA               	movwf	fsr2h,c
  9325  002FE2  0E04               	movlw	4
  9326  002FE4  6EDE               	movwf	postinc2,c
  9327  002FE6  0E00               	movlw	0
  9328  002FE8  6EDD               	movwf	postdec2,c
  9329  002FEA                     
  9330                           ; BSR set to: 0
  9331                           ;movement.c: 50:             array_index++;
  9332  002FEA  2BF9               	incf	_array_index& (0+255),f,b
  9333  002FEC                     l5502:
  9334                           
  9335                           ;movement.c: 52:         if (color == 5){
  9336  002FEC  0E05               	movlw	5
  9337  002FEE  0102               	movlb	2	; () banked
  9338  002FF0  19C8               	xorwf	action@color& (0+255),w,b
  9339  002FF2  A4D8               	btfss	status,2,c
  9340  002FF4  EFFE  F017         	goto	u5501
  9341  002FF8  EF00  F018         	goto	u5500
  9342  002FFC                     u5501:
  9343  002FFC  EF24  F018         	goto	l5510
  9344  003000                     u5500:
  9345  003000                     
  9346                           ; BSR set to: 2
  9347                           ;movement.c: 53:             reverse_square(mL,mR);
  9348  003000  C0E0  F026         	movff	action@mL,reverse_square@mL
  9349  003004  C0E1  F027         	movff	action@mL+1,reverse_square@mL+1
  9350  003008  C0E2  F028         	movff	action@mR,reverse_square@mR
  9351  00300C  C0E3  F029         	movff	action@mR+1,reverse_square@mR+1
  9352  003010  EC75  F02B         	call	_reverse_square	;wreg free
  9353                           
  9354                           ;movement.c: 54:             turnLeft(mL,mR,90);
  9355  003014  C0E0  F020         	movff	action@mL,turnLeft@mL
  9356  003018  C0E1  F021         	movff	action@mL+1,turnLeft@mL+1
  9357  00301C  C0E2  F022         	movff	action@mR,turnLeft@mR
  9358  003020  C0E3  F023         	movff	action@mR+1,turnLeft@mR+1
  9359  003024  0E5A               	movlw	90
  9360  003026  6E24               	movwf	turnLeft@angle_left^0,c
  9361  003028  ECA4  F020         	call	_turnLeft	;wreg free
  9362  00302C                     
  9363                           ;movement.c: 55:             memory[array_index] = 5;
  9364  00302C  0100               	movlb	0	; () banked
  9365  00302E  51F9               	movf	_array_index& (0+255),w,b
  9366  003030  0D02               	mullw	2
  9367  003032  0E3C               	movlw	low _memory
  9368  003034  24F3               	addwf	243,w,c
  9369  003036  6ED9               	movwf	fsr2l,c
  9370  003038  0E03               	movlw	high _memory
  9371  00303A  20F4               	addwfc	prodh,w,c
  9372  00303C  6EDA               	movwf	fsr2h,c
  9373  00303E  0E05               	movlw	5
  9374  003040  6EDE               	movwf	postinc2,c
  9375  003042  0E00               	movlw	0
  9376  003044  6EDD               	movwf	postdec2,c
  9377  003046                     
  9378                           ; BSR set to: 0
  9379                           ;movement.c: 56:             array_index++;
  9380  003046  2BF9               	incf	_array_index& (0+255),f,b
  9381  003048                     l5510:
  9382                           
  9383                           ;movement.c: 58:         if (color == 6){
  9384  003048  0E06               	movlw	6
  9385  00304A  0102               	movlb	2	; () banked
  9386  00304C  19C8               	xorwf	action@color& (0+255),w,b
  9387  00304E  A4D8               	btfss	status,2,c
  9388  003050  EF2C  F018         	goto	u5511
  9389  003054  EF2E  F018         	goto	u5510
  9390  003058                     u5511:
  9391  003058  EF52  F018         	goto	l5518
  9392  00305C                     u5510:
  9393  00305C                     
  9394                           ; BSR set to: 2
  9395                           ;movement.c: 59:             short_reverse(mL,mR);
  9396  00305C  C0E0  F026         	movff	action@mL,short_reverse@mL
  9397  003060  C0E1  F027         	movff	action@mL+1,short_reverse@mL+1
  9398  003064  C0E2  F028         	movff	action@mR,short_reverse@mR
  9399  003068  C0E3  F029         	movff	action@mR+1,short_reverse@mR+1
  9400  00306C  EC55  F02B         	call	_short_reverse	;wreg free
  9401                           
  9402                           ;movement.c: 60:             turnRight(mL,mR,135);
  9403  003070  C0E0  F020         	movff	action@mL,turnRight@mL
  9404  003074  C0E1  F021         	movff	action@mL+1,turnRight@mL+1
  9405  003078  C0E2  F022         	movff	action@mR,turnRight@mR
  9406  00307C  C0E3  F023         	movff	action@mR+1,turnRight@mR+1
  9407  003080  0E87               	movlw	135
  9408  003082  6E24               	movwf	turnRight@angle_right^0,c
  9409  003084  ECDD  F01F         	call	_turnRight	;wreg free
  9410  003088                     
  9411                           ;movement.c: 61:             memory[array_index] = 6;
  9412  003088  0100               	movlb	0	; () banked
  9413  00308A  51F9               	movf	_array_index& (0+255),w,b
  9414  00308C  0D02               	mullw	2
  9415  00308E  0E3C               	movlw	low _memory
  9416  003090  24F3               	addwf	243,w,c
  9417  003092  6ED9               	movwf	fsr2l,c
  9418  003094  0E03               	movlw	high _memory
  9419  003096  20F4               	addwfc	prodh,w,c
  9420  003098  6EDA               	movwf	fsr2h,c
  9421  00309A  0E06               	movlw	6
  9422  00309C  6EDE               	movwf	postinc2,c
  9423  00309E  0E00               	movlw	0
  9424  0030A0  6EDD               	movwf	postdec2,c
  9425  0030A2                     
  9426                           ; BSR set to: 0
  9427                           ;movement.c: 62:             array_index++;
  9428  0030A2  2BF9               	incf	_array_index& (0+255),f,b
  9429  0030A4                     l5518:
  9430                           
  9431                           ;movement.c: 64:         if (color == 7){
  9432  0030A4  0E07               	movlw	7
  9433  0030A6  0102               	movlb	2	; () banked
  9434  0030A8  19C8               	xorwf	action@color& (0+255),w,b
  9435  0030AA  A4D8               	btfss	status,2,c
  9436  0030AC  EF5A  F018         	goto	u5521
  9437  0030B0  EF5C  F018         	goto	u5520
  9438  0030B4                     u5521:
  9439  0030B4  EF80  F018         	goto	l5526
  9440  0030B8                     u5520:
  9441  0030B8                     
  9442                           ; BSR set to: 2
  9443                           ;movement.c: 65:             short_reverse(mL,mR);
  9444  0030B8  C0E0  F026         	movff	action@mL,short_reverse@mL
  9445  0030BC  C0E1  F027         	movff	action@mL+1,short_reverse@mL+1
  9446  0030C0  C0E2  F028         	movff	action@mR,short_reverse@mR
  9447  0030C4  C0E3  F029         	movff	action@mR+1,short_reverse@mR+1
  9448  0030C8  EC55  F02B         	call	_short_reverse	;wreg free
  9449                           
  9450                           ;movement.c: 66:             turnLeft(mL,mR,135);
  9451  0030CC  C0E0  F020         	movff	action@mL,turnLeft@mL
  9452  0030D0  C0E1  F021         	movff	action@mL+1,turnLeft@mL+1
  9453  0030D4  C0E2  F022         	movff	action@mR,turnLeft@mR
  9454  0030D8  C0E3  F023         	movff	action@mR+1,turnLeft@mR+1
  9455  0030DC  0E87               	movlw	135
  9456  0030DE  6E24               	movwf	turnLeft@angle_left^0,c
  9457  0030E0  ECA4  F020         	call	_turnLeft	;wreg free
  9458  0030E4                     
  9459                           ;movement.c: 67:             memory[array_index] = 7;
  9460  0030E4  0100               	movlb	0	; () banked
  9461  0030E6  51F9               	movf	_array_index& (0+255),w,b
  9462  0030E8  0D02               	mullw	2
  9463  0030EA  0E3C               	movlw	low _memory
  9464  0030EC  24F3               	addwf	243,w,c
  9465  0030EE  6ED9               	movwf	fsr2l,c
  9466  0030F0  0E03               	movlw	high _memory
  9467  0030F2  20F4               	addwfc	prodh,w,c
  9468  0030F4  6EDA               	movwf	fsr2h,c
  9469  0030F6  0E07               	movlw	7
  9470  0030F8  6EDE               	movwf	postinc2,c
  9471  0030FA  0E00               	movlw	0
  9472  0030FC  6EDD               	movwf	postdec2,c
  9473  0030FE                     
  9474                           ; BSR set to: 0
  9475                           ;movement.c: 68:             array_index++;
  9476  0030FE  2BF9               	incf	_array_index& (0+255),f,b
  9477  003100                     l5526:
  9478                           
  9479                           ;movement.c: 70:         if (color == 8){
  9480  003100  0E08               	movlw	8
  9481  003102  0102               	movlb	2	; () banked
  9482  003104  19C8               	xorwf	action@color& (0+255),w,b
  9483  003106  A4D8               	btfss	status,2,c
  9484  003108  EF88  F018         	goto	u5531
  9485  00310C  EF8A  F018         	goto	u5530
  9486  003110                     u5531:
  9487  003110  EFA3  F018         	goto	l641
  9488  003114                     u5530:
  9489  003114                     
  9490                           ; BSR set to: 2
  9491                           ;movement.c: 71:             toggle_light(2,1);
  9492  003114  0E01               	movlw	1
  9493  003116  6E01               	movwf	toggle_light@toggletime^0,c
  9494  003118  0E02               	movlw	2
  9495  00311A  EC19  F01A         	call	_toggle_light
  9496  00311E                     
  9497                           ;movement.c: 72:             short_reverse(mL,mR);
  9498  00311E  C0E0  F026         	movff	action@mL,short_reverse@mL
  9499  003122  C0E1  F027         	movff	action@mL+1,short_reverse@mL+1
  9500  003126  C0E2  F028         	movff	action@mR,short_reverse@mR
  9501  00312A  C0E3  F029         	movff	action@mR+1,short_reverse@mR+1
  9502  00312E  EC55  F02B         	call	_short_reverse	;wreg free
  9503  003132                     
  9504                           ;movement.c: 73:             goback(mL,mR);
  9505  003132  C0E0  F058         	movff	action@mL,goback@mL
  9506  003136  C0E1  F059         	movff	action@mL+1,goback@mL+1
  9507  00313A  C0E2  F05A         	movff	action@mR,goback@mR
  9508  00313E  C0E3  F05B         	movff	action@mR+1,goback@mR+1
  9509  003142  EC6E  F015         	call	_goback	;wreg free
  9510  003146                     l641:
  9511  003146  0012               	return		;funcret
  9512  003148                     __end_of_action:
  9513                           	callstack 0
  9514                           
  9515 ;; *************** function _toggle_light *****************
  9516 ;; Defined at:
  9517 ;;		line 29 in file "color.c"
  9518 ;; Parameters:    Size  Location     Type
  9519 ;;  lightnumber     1    wreg     unsigned char 
  9520 ;;  toggletime      1    0[COMRAM] unsigned char 
  9521 ;; Auto vars:     Size  Location     Type
  9522 ;;  lightnumber     1    4[COMRAM] unsigned char 
  9523 ;;  i               1    3[COMRAM] unsigned char 
  9524 ;; Return value:  Size  Location     Type
  9525 ;;                  1    wreg      void 
  9526 ;; Registers used:
  9527 ;;		wreg, status,2, status,0
  9528 ;; Tracked objects:
  9529 ;;		On entry : 0/0
  9530 ;;		On exit  : 0/0
  9531 ;;		Unchanged: 0/0
  9532 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9533 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9534 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9535 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9536 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9537 ;;Total ram usage:        5 bytes
  9538 ;; Hardware stack levels used: 1
  9539 ;; Hardware stack levels required when called: 1
  9540 ;; This function calls:
  9541 ;;		Nothing
  9542 ;; This function is called by:
  9543 ;;		_calibrate_white
  9544 ;;		_detect_color
  9545 ;;		_amb_light_measure
  9546 ;;		_action
  9547 ;; This function uses a non-reentrant model
  9548 ;;
  9549                           
  9550                           	psect	text47
  9551  003432                     __ptext47:
  9552                           	callstack 0
  9553  003432                     _toggle_light:
  9554                           	callstack 27
  9555                           
  9556                           ;incstack = 0
  9557                           ;toggle_light@lightnumber stored from wreg
  9558  003432  6E05               	movwf	toggle_light@lightnumber^0,c
  9559  003434                     
  9560                           ;color.c: 29: void toggle_light(unsigned char lightnumber, unsigned char toggletime);col
      +                          or.c: 30: {;color.c: 31:     unsigned char i = 0;
  9561  003434  0E00               	movlw	0
  9562  003436  6E04               	movwf	toggle_light@i^0,c
  9563                           
  9564                           ;color.c: 33:     for (i = 0; i < toggletime; i++){
  9565  003438  0E00               	movlw	0
  9566  00343A  6E04               	movwf	toggle_light@i^0,c
  9567  00343C  EF65  F01B         	goto	l74
  9568  003440                     l4528:
  9569                           
  9570                           ;color.c: 34:         if (lightnumber == 1){
  9571  003440  0405               	decf	toggle_light@lightnumber^0,w,c
  9572  003442  A4D8               	btfss	status,2,c
  9573  003444  EF26  F01A         	goto	u4301
  9574  003448  EF28  F01A         	goto	u4300
  9575  00344C                     u4301:
  9576  00344C  EF60  F01A         	goto	l4536
  9577  003450                     u4300:
  9578  003450                     
  9579                           ;color.c: 35:             LATHbits.LATH1 = !LATHbits.LATH1;
  9580  003450  A280               	btfss	128,1,c	;volatile
  9581  003452  EF2D  F01A         	goto	u4311
  9582  003456  EF31  F01A         	goto	u4310
  9583  00345A                     u4311:
  9584  00345A  6A02               	clrf	??_toggle_light^0,c
  9585  00345C  2A02               	incf	??_toggle_light^0,f,c
  9586  00345E  EF32  F01A         	goto	u4328
  9587  003462                     u4310:
  9588  003462  6A02               	clrf	??_toggle_light^0,c
  9589  003464                     u4328:
  9590  003464  4602               	rlncf	??_toggle_light^0,f,c
  9591  003466  5080               	movf	128,w,c	;volatile
  9592  003468  1802               	xorwf	??_toggle_light^0,w,c
  9593  00346A  0BFD               	andlw	-3
  9594  00346C  1802               	xorwf	??_toggle_light^0,w,c
  9595  00346E  6E80               	movwf	128,c	;volatile
  9596  003470                     
  9597                           ;color.c: 36:             _delay((unsigned long)((500)*(64000000/4000.0)));
  9598  003470  0E29               	movlw	41
  9599  003472  6E03               	movwf	(??_toggle_light+1)^0,c
  9600  003474  0E96               	movlw	150
  9601  003476  6E02               	movwf	??_toggle_light^0,c
  9602  003478  0E7F               	movlw	127
  9603  00347A                     u5977:
  9604  00347A  2EE8               	decfsz	wreg,f,c
  9605  00347C  D7FE               	bra	u5977
  9606  00347E  2E02               	decfsz	??_toggle_light^0,f,c
  9607  003480  D7FC               	bra	u5977
  9608  003482  2E03               	decfsz	(??_toggle_light+1)^0,f,c
  9609  003484  D7FA               	bra	u5977
  9610  003486  F000               	nop	
  9611  003488                     
  9612                           ;color.c: 37:             LATHbits.LATH1 = !LATHbits.LATH1;
  9613  003488  A280               	btfss	128,1,c	;volatile
  9614  00348A  EF49  F01A         	goto	u4331
  9615  00348E  EF4D  F01A         	goto	u4330
  9616  003492                     u4331:
  9617  003492  6A02               	clrf	??_toggle_light^0,c
  9618  003494  2A02               	incf	??_toggle_light^0,f,c
  9619  003496  EF4E  F01A         	goto	u4348
  9620  00349A                     u4330:
  9621  00349A  6A02               	clrf	??_toggle_light^0,c
  9622  00349C                     u4348:
  9623  00349C  4602               	rlncf	??_toggle_light^0,f,c
  9624  00349E  5080               	movf	128,w,c	;volatile
  9625  0034A0  1802               	xorwf	??_toggle_light^0,w,c
  9626  0034A2  0BFD               	andlw	-3
  9627  0034A4  1802               	xorwf	??_toggle_light^0,w,c
  9628  0034A6  6E80               	movwf	128,c	;volatile
  9629                           
  9630                           ;color.c: 38:             _delay((unsigned long)((500)*(64000000/4000.0)));
  9631  0034A8  0E29               	movlw	41
  9632  0034AA  6E03               	movwf	(??_toggle_light+1)^0,c
  9633  0034AC  0E96               	movlw	150
  9634  0034AE  6E02               	movwf	??_toggle_light^0,c
  9635  0034B0  0E7F               	movlw	127
  9636  0034B2                     u5987:
  9637  0034B2  2EE8               	decfsz	wreg,f,c
  9638  0034B4  D7FE               	bra	u5987
  9639  0034B6  2E02               	decfsz	??_toggle_light^0,f,c
  9640  0034B8  D7FC               	bra	u5987
  9641  0034BA  2E03               	decfsz	(??_toggle_light+1)^0,f,c
  9642  0034BC  D7FA               	bra	u5987
  9643  0034BE  F000               	nop	
  9644  0034C0                     l4536:
  9645                           
  9646                           ;color.c: 40:         if (lightnumber == 2){
  9647  0034C0  0E02               	movlw	2
  9648  0034C2  1805               	xorwf	toggle_light@lightnumber^0,w,c
  9649  0034C4  A4D8               	btfss	status,2,c
  9650  0034C6  EF67  F01A         	goto	u4351
  9651  0034CA  EF69  F01A         	goto	u4350
  9652  0034CE                     u4351:
  9653  0034CE  EFA1  F01A         	goto	l4544
  9654  0034D2                     u4350:
  9655  0034D2                     
  9656                           ;color.c: 41:             LATDbits.LATD4 = !LATDbits.LATD4;
  9657  0034D2  A87C               	btfss	124,4,c	;volatile
  9658  0034D4  EF6E  F01A         	goto	u4361
  9659  0034D8  EF72  F01A         	goto	u4360
  9660  0034DC                     u4361:
  9661  0034DC  6A02               	clrf	??_toggle_light^0,c
  9662  0034DE  2A02               	incf	??_toggle_light^0,f,c
  9663  0034E0  EF73  F01A         	goto	u4378
  9664  0034E4                     u4360:
  9665  0034E4  6A02               	clrf	??_toggle_light^0,c
  9666  0034E6                     u4378:
  9667  0034E6  3A02               	swapf	??_toggle_light^0,f,c
  9668  0034E8  507C               	movf	124,w,c	;volatile
  9669  0034EA  1802               	xorwf	??_toggle_light^0,w,c
  9670  0034EC  0BEF               	andlw	-17
  9671  0034EE  1802               	xorwf	??_toggle_light^0,w,c
  9672  0034F0  6E7C               	movwf	124,c	;volatile
  9673  0034F2                     
  9674                           ;color.c: 42:             _delay((unsigned long)((500)*(64000000/4000.0)));
  9675  0034F2  0E29               	movlw	41
  9676  0034F4  6E03               	movwf	(??_toggle_light+1)^0,c
  9677  0034F6  0E96               	movlw	150
  9678  0034F8  6E02               	movwf	??_toggle_light^0,c
  9679  0034FA  0E7F               	movlw	127
  9680  0034FC                     u5997:
  9681  0034FC  2EE8               	decfsz	wreg,f,c
  9682  0034FE  D7FE               	bra	u5997
  9683  003500  2E02               	decfsz	??_toggle_light^0,f,c
  9684  003502  D7FC               	bra	u5997
  9685  003504  2E03               	decfsz	(??_toggle_light+1)^0,f,c
  9686  003506  D7FA               	bra	u5997
  9687  003508  F000               	nop	
  9688  00350A                     
  9689                           ;color.c: 43:             LATDbits.LATD4 = !LATDbits.LATD4;
  9690  00350A  A87C               	btfss	124,4,c	;volatile
  9691  00350C  EF8A  F01A         	goto	u4381
  9692  003510  EF8E  F01A         	goto	u4380
  9693  003514                     u4381:
  9694  003514  6A02               	clrf	??_toggle_light^0,c
  9695  003516  2A02               	incf	??_toggle_light^0,f,c
  9696  003518  EF8F  F01A         	goto	u4398
  9697  00351C                     u4380:
  9698  00351C  6A02               	clrf	??_toggle_light^0,c
  9699  00351E                     u4398:
  9700  00351E  3A02               	swapf	??_toggle_light^0,f,c
  9701  003520  507C               	movf	124,w,c	;volatile
  9702  003522  1802               	xorwf	??_toggle_light^0,w,c
  9703  003524  0BEF               	andlw	-17
  9704  003526  1802               	xorwf	??_toggle_light^0,w,c
  9705  003528  6E7C               	movwf	124,c	;volatile
  9706                           
  9707                           ;color.c: 44:             _delay((unsigned long)((500)*(64000000/4000.0)));
  9708  00352A  0E29               	movlw	41
  9709  00352C  6E03               	movwf	(??_toggle_light+1)^0,c
  9710  00352E  0E96               	movlw	150
  9711  003530  6E02               	movwf	??_toggle_light^0,c
  9712  003532  0E7F               	movlw	127
  9713  003534                     u6007:
  9714  003534  2EE8               	decfsz	wreg,f,c
  9715  003536  D7FE               	bra	u6007
  9716  003538  2E02               	decfsz	??_toggle_light^0,f,c
  9717  00353A  D7FC               	bra	u6007
  9718  00353C  2E03               	decfsz	(??_toggle_light+1)^0,f,c
  9719  00353E  D7FA               	bra	u6007
  9720  003540  F000               	nop	
  9721  003542                     l4544:
  9722                           
  9723                           ;color.c: 46:         if (lightnumber == 3){
  9724  003542  0E03               	movlw	3
  9725  003544  1805               	xorwf	toggle_light@lightnumber^0,w,c
  9726  003546  A4D8               	btfss	status,2,c
  9727  003548  EFA8  F01A         	goto	u4401
  9728  00354C  EFAA  F01A         	goto	u4400
  9729  003550                     u4401:
  9730  003550  EFE6  F01A         	goto	l4552
  9731  003554                     u4400:
  9732  003554                     
  9733                           ;color.c: 47:             LATDbits.LATD3 = !LATDbits.LATD3;
  9734  003554  A67C               	btfss	124,3,c	;volatile
  9735  003556  EFAF  F01A         	goto	u4411
  9736  00355A  EFB3  F01A         	goto	u4410
  9737  00355E                     u4411:
  9738  00355E  6A02               	clrf	??_toggle_light^0,c
  9739  003560  2A02               	incf	??_toggle_light^0,f,c
  9740  003562  EFB4  F01A         	goto	u4428
  9741  003566                     u4410:
  9742  003566  6A02               	clrf	??_toggle_light^0,c
  9743  003568                     u4428:
  9744  003568  4602               	rlncf	??_toggle_light^0,f,c
  9745  00356A  4602               	rlncf	??_toggle_light^0,f,c
  9746  00356C  4602               	rlncf	??_toggle_light^0,f,c
  9747  00356E  507C               	movf	124,w,c	;volatile
  9748  003570  1802               	xorwf	??_toggle_light^0,w,c
  9749  003572  0BF7               	andlw	-9
  9750  003574  1802               	xorwf	??_toggle_light^0,w,c
  9751  003576  6E7C               	movwf	124,c	;volatile
  9752  003578                     
  9753                           ;color.c: 48:             _delay((unsigned long)((500)*(64000000/4000.0)));
  9754  003578  0E29               	movlw	41
  9755  00357A  6E03               	movwf	(??_toggle_light+1)^0,c
  9756  00357C  0E96               	movlw	150
  9757  00357E  6E02               	movwf	??_toggle_light^0,c
  9758  003580  0E7F               	movlw	127
  9759  003582                     u6017:
  9760  003582  2EE8               	decfsz	wreg,f,c
  9761  003584  D7FE               	bra	u6017
  9762  003586  2E02               	decfsz	??_toggle_light^0,f,c
  9763  003588  D7FC               	bra	u6017
  9764  00358A  2E03               	decfsz	(??_toggle_light+1)^0,f,c
  9765  00358C  D7FA               	bra	u6017
  9766  00358E  F000               	nop	
  9767  003590                     
  9768                           ;color.c: 49:             LATDbits.LATD3 = !LATDbits.LATD3;
  9769  003590  A67C               	btfss	124,3,c	;volatile
  9770  003592  EFCD  F01A         	goto	u4431
  9771  003596  EFD1  F01A         	goto	u4430
  9772  00359A                     u4431:
  9773  00359A  6A02               	clrf	??_toggle_light^0,c
  9774  00359C  2A02               	incf	??_toggle_light^0,f,c
  9775  00359E  EFD2  F01A         	goto	u4448
  9776  0035A2                     u4430:
  9777  0035A2  6A02               	clrf	??_toggle_light^0,c
  9778  0035A4                     u4448:
  9779  0035A4  4602               	rlncf	??_toggle_light^0,f,c
  9780  0035A6  4602               	rlncf	??_toggle_light^0,f,c
  9781  0035A8  4602               	rlncf	??_toggle_light^0,f,c
  9782  0035AA  507C               	movf	124,w,c	;volatile
  9783  0035AC  1802               	xorwf	??_toggle_light^0,w,c
  9784  0035AE  0BF7               	andlw	-9
  9785  0035B0  1802               	xorwf	??_toggle_light^0,w,c
  9786  0035B2  6E7C               	movwf	124,c	;volatile
  9787                           
  9788                           ;color.c: 50:             _delay((unsigned long)((500)*(64000000/4000.0)));
  9789  0035B4  0E29               	movlw	41
  9790  0035B6  6E03               	movwf	(??_toggle_light+1)^0,c
  9791  0035B8  0E96               	movlw	150
  9792  0035BA  6E02               	movwf	??_toggle_light^0,c
  9793  0035BC  0E7F               	movlw	127
  9794  0035BE                     u6027:
  9795  0035BE  2EE8               	decfsz	wreg,f,c
  9796  0035C0  D7FE               	bra	u6027
  9797  0035C2  2E02               	decfsz	??_toggle_light^0,f,c
  9798  0035C4  D7FC               	bra	u6027
  9799  0035C6  2E03               	decfsz	(??_toggle_light+1)^0,f,c
  9800  0035C8  D7FA               	bra	u6027
  9801  0035CA  F000               	nop	
  9802  0035CC                     l4552:
  9803                           
  9804                           ;color.c: 52:         if (lightnumber == 4){
  9805  0035CC  0E04               	movlw	4
  9806  0035CE  1805               	xorwf	toggle_light@lightnumber^0,w,c
  9807  0035D0  A4D8               	btfss	status,2,c
  9808  0035D2  EFED  F01A         	goto	u4451
  9809  0035D6  EFEF  F01A         	goto	u4450
  9810  0035DA                     u4451:
  9811  0035DA  EF25  F01B         	goto	l4560
  9812  0035DE                     u4450:
  9813  0035DE                     
  9814                           ;color.c: 53:             LATFbits.LATF0 = !LATFbits.LATF0;
  9815  0035DE  A07E               	btfss	126,0,c	;volatile
  9816  0035E0  EFF4  F01A         	goto	u4461
  9817  0035E4  EFF8  F01A         	goto	u4460
  9818  0035E8                     u4461:
  9819  0035E8  6A02               	clrf	??_toggle_light^0,c
  9820  0035EA  2A02               	incf	??_toggle_light^0,f,c
  9821  0035EC  EFF9  F01A         	goto	u4478
  9822  0035F0                     u4460:
  9823  0035F0  6A02               	clrf	??_toggle_light^0,c
  9824  0035F2                     u4478:
  9825  0035F2  507E               	movf	126,w,c	;volatile
  9826  0035F4  1802               	xorwf	??_toggle_light^0,w,c
  9827  0035F6  0BFE               	andlw	-2
  9828  0035F8  1802               	xorwf	??_toggle_light^0,w,c
  9829  0035FA  6E7E               	movwf	126,c	;volatile
  9830  0035FC                     
  9831                           ;color.c: 54:             _delay((unsigned long)((500)*(64000000/4000.0)));
  9832  0035FC  0E29               	movlw	41
  9833  0035FE  6E03               	movwf	(??_toggle_light+1)^0,c
  9834  003600  0E96               	movlw	150
  9835  003602  6E02               	movwf	??_toggle_light^0,c
  9836  003604  0E7F               	movlw	127
  9837  003606                     u6037:
  9838  003606  2EE8               	decfsz	wreg,f,c
  9839  003608  D7FE               	bra	u6037
  9840  00360A  2E02               	decfsz	??_toggle_light^0,f,c
  9841  00360C  D7FC               	bra	u6037
  9842  00360E  2E03               	decfsz	(??_toggle_light+1)^0,f,c
  9843  003610  D7FA               	bra	u6037
  9844  003612  F000               	nop	
  9845  003614                     
  9846                           ;color.c: 55:             LATFbits.LATF0 = !LATFbits.LATF0;
  9847  003614  A07E               	btfss	126,0,c	;volatile
  9848  003616  EF0F  F01B         	goto	u4481
  9849  00361A  EF13  F01B         	goto	u4480
  9850  00361E                     u4481:
  9851  00361E  6A02               	clrf	??_toggle_light^0,c
  9852  003620  2A02               	incf	??_toggle_light^0,f,c
  9853  003622  EF14  F01B         	goto	u4498
  9854  003626                     u4480:
  9855  003626  6A02               	clrf	??_toggle_light^0,c
  9856  003628                     u4498:
  9857  003628  507E               	movf	126,w,c	;volatile
  9858  00362A  1802               	xorwf	??_toggle_light^0,w,c
  9859  00362C  0BFE               	andlw	-2
  9860  00362E  1802               	xorwf	??_toggle_light^0,w,c
  9861  003630  6E7E               	movwf	126,c	;volatile
  9862                           
  9863                           ;color.c: 56:             _delay((unsigned long)((500)*(64000000/4000.0)));
  9864  003632  0E29               	movlw	41
  9865  003634  6E03               	movwf	(??_toggle_light+1)^0,c
  9866  003636  0E96               	movlw	150
  9867  003638  6E02               	movwf	??_toggle_light^0,c
  9868  00363A  0E7F               	movlw	127
  9869  00363C                     u6047:
  9870  00363C  2EE8               	decfsz	wreg,f,c
  9871  00363E  D7FE               	bra	u6047
  9872  003640  2E02               	decfsz	??_toggle_light^0,f,c
  9873  003642  D7FC               	bra	u6047
  9874  003644  2E03               	decfsz	(??_toggle_light+1)^0,f,c
  9875  003646  D7FA               	bra	u6047
  9876  003648  F000               	nop	
  9877  00364A                     l4560:
  9878                           
  9879                           ;color.c: 58:         if (lightnumber == 3){
  9880  00364A  0E03               	movlw	3
  9881  00364C  1805               	xorwf	toggle_light@lightnumber^0,w,c
  9882  00364E  A4D8               	btfss	status,2,c
  9883  003650  EF2C  F01B         	goto	u4501
  9884  003654  EF2E  F01B         	goto	u4500
  9885  003658                     u4501:
  9886  003658  EF64  F01B         	goto	l4568
  9887  00365C                     u4500:
  9888  00365C                     
  9889                           ;color.c: 59:             LATHbits.LATH0 = !LATHbits.LATH0;
  9890  00365C  A080               	btfss	128,0,c	;volatile
  9891  00365E  EF33  F01B         	goto	u4511
  9892  003662  EF37  F01B         	goto	u4510
  9893  003666                     u4511:
  9894  003666  6A02               	clrf	??_toggle_light^0,c
  9895  003668  2A02               	incf	??_toggle_light^0,f,c
  9896  00366A  EF38  F01B         	goto	u4528
  9897  00366E                     u4510:
  9898  00366E  6A02               	clrf	??_toggle_light^0,c
  9899  003670                     u4528:
  9900  003670  5080               	movf	128,w,c	;volatile
  9901  003672  1802               	xorwf	??_toggle_light^0,w,c
  9902  003674  0BFE               	andlw	-2
  9903  003676  1802               	xorwf	??_toggle_light^0,w,c
  9904  003678  6E80               	movwf	128,c	;volatile
  9905  00367A                     
  9906                           ;color.c: 60:             _delay((unsigned long)((500)*(64000000/4000.0)));
  9907  00367A  0E29               	movlw	41
  9908  00367C  6E03               	movwf	(??_toggle_light+1)^0,c
  9909  00367E  0E96               	movlw	150
  9910  003680  6E02               	movwf	??_toggle_light^0,c
  9911  003682  0E7F               	movlw	127
  9912  003684                     u6057:
  9913  003684  2EE8               	decfsz	wreg,f,c
  9914  003686  D7FE               	bra	u6057
  9915  003688  2E02               	decfsz	??_toggle_light^0,f,c
  9916  00368A  D7FC               	bra	u6057
  9917  00368C  2E03               	decfsz	(??_toggle_light+1)^0,f,c
  9918  00368E  D7FA               	bra	u6057
  9919  003690  F000               	nop	
  9920  003692                     
  9921                           ;color.c: 61:             LATHbits.LATH0 = !LATHbits.LATH0;
  9922  003692  A080               	btfss	128,0,c	;volatile
  9923  003694  EF4E  F01B         	goto	u4531
  9924  003698  EF52  F01B         	goto	u4530
  9925  00369C                     u4531:
  9926  00369C  6A02               	clrf	??_toggle_light^0,c
  9927  00369E  2A02               	incf	??_toggle_light^0,f,c
  9928  0036A0  EF53  F01B         	goto	u4548
  9929  0036A4                     u4530:
  9930  0036A4  6A02               	clrf	??_toggle_light^0,c
  9931  0036A6                     u4548:
  9932  0036A6  5080               	movf	128,w,c	;volatile
  9933  0036A8  1802               	xorwf	??_toggle_light^0,w,c
  9934  0036AA  0BFE               	andlw	-2
  9935  0036AC  1802               	xorwf	??_toggle_light^0,w,c
  9936  0036AE  6E80               	movwf	128,c	;volatile
  9937                           
  9938                           ;color.c: 62:             _delay((unsigned long)((500)*(64000000/4000.0)));
  9939  0036B0  0E29               	movlw	41
  9940  0036B2  6E03               	movwf	(??_toggle_light+1)^0,c
  9941  0036B4  0E96               	movlw	150
  9942  0036B6  6E02               	movwf	??_toggle_light^0,c
  9943  0036B8  0E7F               	movlw	127
  9944  0036BA                     u6067:
  9945  0036BA  2EE8               	decfsz	wreg,f,c
  9946  0036BC  D7FE               	bra	u6067
  9947  0036BE  2E02               	decfsz	??_toggle_light^0,f,c
  9948  0036C0  D7FC               	bra	u6067
  9949  0036C2  2E03               	decfsz	(??_toggle_light+1)^0,f,c
  9950  0036C4  D7FA               	bra	u6067
  9951  0036C6  F000               	nop	
  9952  0036C8                     l4568:
  9953                           
  9954                           ;color.c: 64:     }
  9955  0036C8  2A04               	incf	toggle_light@i^0,f,c
  9956  0036CA                     l74:
  9957  0036CA  5001               	movf	toggle_light@toggletime^0,w,c
  9958  0036CC  5C04               	subwf	toggle_light@i^0,w,c
  9959  0036CE  A0D8               	btfss	status,0,c
  9960  0036D0  EF6C  F01B         	goto	u4551
  9961  0036D4  EF6E  F01B         	goto	u4550
  9962  0036D8                     u4551:
  9963  0036D8  EF20  F01A         	goto	l4528
  9964  0036DC                     u4550:
  9965  0036DC  0012               	return		;funcret
  9966  0036DE                     __end_of_toggle_light:
  9967                           	callstack 0
  9968                           
  9969 ;; *************** function _short_reverse *****************
  9970 ;; Defined at:
  9971 ;;		line 199 in file "dc_motor.c"
  9972 ;; Parameters:    Size  Location     Type
  9973 ;;  mL              2   37[COMRAM] PTR struct DC_motor
  9974 ;;		 -> main@motorL(10), 
  9975 ;;  mR              2   39[COMRAM] PTR struct DC_motor
  9976 ;;		 -> main@motorR(10), 
  9977 ;; Auto vars:     Size  Location     Type
  9978 ;;		None
  9979 ;; Return value:  Size  Location     Type
  9980 ;;                  1    wreg      void 
  9981 ;; Registers used:
  9982 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9983 ;; Tracked objects:
  9984 ;;		On entry : 0/0
  9985 ;;		On exit  : 0/0
  9986 ;;		Unchanged: 0/0
  9987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9988 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9989 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9990 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9991 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9992 ;;Total ram usage:        6 bytes
  9993 ;; Hardware stack levels used: 1
  9994 ;; Hardware stack levels required when called: 5
  9995 ;; This function calls:
  9996 ;;		_fullSpeedBack
  9997 ;;		_stop
  9998 ;; This function is called by:
  9999 ;;		_action
 10000 ;; This function uses a non-reentrant model
 10001 ;;
 10002                           
 10003                           	psect	text48
 10004  0056AA                     __ptext48:
 10005                           	callstack 0
 10006  0056AA                     _short_reverse:
 10007                           	callstack 24
 10008  0056AA                     
 10009                           ;dc_motor.c: 199: void short_reverse(struct DC_motor *mL, struct DC_motor *mR);dc_motor.
      +                          c: 200: { fullSpeedBack(mL, mR);
 10010  0056AA  C026  F020         	movff	short_reverse@mL,fullSpeedBack@mL
 10011  0056AE  C027  F021         	movff	short_reverse@mL+1,fullSpeedBack@mL+1
 10012  0056B2  C028  F022         	movff	short_reverse@mR,fullSpeedBack@mR
 10013  0056B6  C029  F023         	movff	short_reverse@mR+1,fullSpeedBack@mR+1
 10014  0056BA  EC96  F027         	call	_fullSpeedBack	;wreg free
 10015  0056BE                     
 10016                           ;dc_motor.c: 201:     _delay((unsigned long)((300)*(64000000/4000.0)));
 10017  0056BE  0E19               	movlw	25
 10018  0056C0  6E2B               	movwf	(??_short_reverse+1)^0,c
 10019  0056C2  0E5A               	movlw	90
 10020  0056C4  6E2A               	movwf	??_short_reverse^0,c
 10021  0056C6  0EB2               	movlw	178
 10022  0056C8                     u6077:
 10023  0056C8  2EE8               	decfsz	wreg,f,c
 10024  0056CA  D7FE               	bra	u6077
 10025  0056CC  2E2A               	decfsz	??_short_reverse^0,f,c
 10026  0056CE  D7FC               	bra	u6077
 10027  0056D0  2E2B               	decfsz	(??_short_reverse+1)^0,f,c
 10028  0056D2  D7FA               	bra	u6077
 10029  0056D4                     
 10030                           ;dc_motor.c: 202:     stop(mL,mR);
 10031  0056D4  C026  F01A         	movff	short_reverse@mL,stop@mL
 10032  0056D8  C027  F01B         	movff	short_reverse@mL+1,stop@mL+1
 10033  0056DC  C028  F01C         	movff	short_reverse@mR,stop@mR
 10034  0056E0  C029  F01D         	movff	short_reverse@mR+1,stop@mR+1
 10035  0056E4  ECF6  F027         	call	_stop	;wreg free
 10036  0056E8  0012               	return		;funcret
 10037  0056EA                     __end_of_short_reverse:
 10038                           	callstack 0
 10039                           
 10040 ;; *************** function _goback *****************
 10041 ;; Defined at:
 10042 ;;		line 123 in file "movement.c"
 10043 ;; Parameters:    Size  Location     Type
 10044 ;;  mL              2   87[COMRAM] PTR struct DC_motor
 10045 ;;		 -> main@motorL(10), 
 10046 ;;  mR              2   89[COMRAM] PTR struct DC_motor
 10047 ;;		 -> main@motorR(10), 
 10048 ;; Auto vars:     Size  Location     Type
 10049 ;;  i               2  126[BANK0 ] unsigned int 
 10050 ;;  buf3          100  100[BANK1 ] unsigned char [100]
 10051 ;;  buf2          100    0[BANK2 ] unsigned char [100]
 10052 ;;  buf           100    0[BANK1 ] unsigned char [100]
 10053 ;; Return value:  Size  Location     Type
 10054 ;;                  1    wreg      void 
 10055 ;; Registers used:
 10056 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10057 ;; Tracked objects:
 10058 ;;		On entry : 0/0
 10059 ;;		On exit  : 0/0
 10060 ;;		Unchanged: 0/0
 10061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10062 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10063 ;;      Locals:         0       2     200     100       0       0       0       0       0       0       0       0       
      +0       0       0
 10064 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10065 ;;      Totals:         6       2     200     100       0       0       0       0       0       0       0       0       
      +0       0       0
 10066 ;;Total ram usage:      308 bytes
 10067 ;; Hardware stack levels used: 1
 10068 ;; Hardware stack levels required when called: 10
 10069 ;; This function calls:
 10070 ;;		_color_predict
 10071 ;;		_fullSpeedAhead
 10072 ;;		_reverse_square
 10073 ;;		_sendStringSerial4
 10074 ;;		_sprintf
 10075 ;;		_stop
 10076 ;;		_turnLeft
 10077 ;;		_turnRight
 10078 ;; This function is called by:
 10079 ;;		_action
 10080 ;; This function uses a non-reentrant model
 10081 ;;
 10082                           
 10083                           	psect	text49
 10084  002ADC                     __ptext49:
 10085                           	callstack 0
 10086  002ADC                     _goback:
 10087                           	callstack 19
 10088  002ADC                     
 10089                           ;movement.c: 123: void goback(struct DC_motor *mL, struct DC_motor *mR);movement.c: 124:
      +                           { turnRight(mL,mR,180);
 10090  002ADC  C058  F020         	movff	goback@mL,turnRight@mL
 10091  002AE0  C059  F021         	movff	goback@mL+1,turnRight@mL+1
 10092  002AE4  C05A  F022         	movff	goback@mR,turnRight@mR
 10093  002AE8  C05B  F023         	movff	goback@mR+1,turnRight@mR+1
 10094  002AEC  0EB4               	movlw	180
 10095  002AEE  6E24               	movwf	turnRight@angle_right^0,c
 10096  002AF0  ECDD  F01F         	call	_turnRight	;wreg free
 10097  002AF4                     
 10098                           ;movement.c: 125:     array_index--;
 10099  002AF4  0100               	movlb	0	; () banked
 10100  002AF6  07F9               	decf	_array_index& (0+255),f,b
 10101  002AF8                     
 10102                           ; BSR set to: 0
 10103                           ;movement.c: 126:     char buf[100];;movement.c: 127:     sprintf(buf,"go back\r\n");
 10104  002AF8  0E00               	movlw	low goback@buf
 10105  002AFA  6F60               	movwf	sprintf@s& (0+255),b
 10106  002AFC  0E01               	movlw	high goback@buf
 10107  002AFE  6F61               	movwf	(sprintf@s+1)& (0+255),b
 10108  002B00  0E31               	movlw	low STR_4
 10109  002B02  6F62               	movwf	sprintf@fmt& (0+255),b
 10110  002B04  0E0E               	movlw	high STR_4
 10111  002B06  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
 10112  002B08  EC05  F02A         	call	_sprintf	;wreg free
 10113  002B0C                     
 10114                           ;movement.c: 128:     sendStringSerial4(buf);
 10115  002B0C  0E00               	movlw	low goback@buf
 10116  002B0E  6E02               	movwf	sendStringSerial4@string^0,c
 10117  002B10  0E01               	movlw	high goback@buf
 10118  002B12  6E03               	movwf	(sendStringSerial4@string+1)^0,c
 10119  002B14  EC40  F02C         	call	_sendStringSerial4	;wreg free
 10120  002B18                     l5244:
 10121                           
 10122                           ;movement.c: 130:         char buf3[100];;movement.c: 131:         sprintf(buf3,"repeat\
      +                          r\n");
 10123  002B18  0E64               	movlw	low goback@buf3
 10124  002B1A  0100               	movlb	0	; () banked
 10125  002B1C  6F60               	movwf	sprintf@s& (0+255),b
 10126  002B1E  0E01               	movlw	high goback@buf3
 10127  002B20  6F61               	movwf	(sprintf@s+1)& (0+255),b
 10128  002B22  0E3B               	movlw	low STR_5
 10129  002B24  6F62               	movwf	sprintf@fmt& (0+255),b
 10130  002B26  0E0E               	movlw	high STR_5
 10131  002B28  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
 10132  002B2A  EC05  F02A         	call	_sprintf	;wreg free
 10133  002B2E                     
 10134                           ;movement.c: 132:         sendStringSerial4(buf3);
 10135  002B2E  0E64               	movlw	low goback@buf3
 10136  002B30  6E02               	movwf	sendStringSerial4@string^0,c
 10137  002B32  0E01               	movlw	high goback@buf3
 10138  002B34  6E03               	movwf	(sendStringSerial4@string+1)^0,c
 10139  002B36  EC40  F02C         	call	_sendStringSerial4	;wreg free
 10140  002B3A                     
 10141                           ;movement.c: 133:         color_predict(array_index);
 10142  002B3A  0100               	movlb	0	; () banked
 10143  002B3C  51F9               	movf	_array_index& (0+255),w,b
 10144  002B3E  EC58  F02C         	call	_color_predict
 10145  002B42                     
 10146                           ;movement.c: 134:         color_predict(memory[array_index]);
 10147  002B42  0100               	movlb	0	; () banked
 10148  002B44  51F9               	movf	_array_index& (0+255),w,b
 10149  002B46  0D02               	mullw	2
 10150  002B48  0E3C               	movlw	low _memory
 10151  002B4A  24F3               	addwf	243,w,c
 10152  002B4C  6ED9               	movwf	fsr2l,c
 10153  002B4E  0E03               	movlw	high _memory
 10154  002B50  20F4               	addwfc	prodh,w,c
 10155  002B52  6EDA               	movwf	fsr2h,c
 10156  002B54  50DF               	movf	indf2,w,c
 10157  002B56  EC58  F02C         	call	_color_predict
 10158  002B5A                     
 10159                           ;movement.c: 135:         color_predict(200);
 10160  002B5A  0EC8               	movlw	200
 10161  002B5C  EC58  F02C         	call	_color_predict
 10162  002B60                     
 10163                           ;movement.c: 136:         fullSpeedAhead(mL,mR);
 10164  002B60  C058  F01A         	movff	goback@mL,fullSpeedAhead@mL
 10165  002B64  C059  F01B         	movff	goback@mL+1,fullSpeedAhead@mL+1
 10166  002B68  C05A  F01C         	movff	goback@mR,fullSpeedAhead@mR
 10167  002B6C  C05B  F01D         	movff	goback@mR+1,fullSpeedAhead@mR+1
 10168  002B70  EC54  F028         	call	_fullSpeedAhead	;wreg free
 10169  002B74                     
 10170                           ;movement.c: 137:         for (unsigned int i=0; i<memory[array_index]; i++) {_delay((un
      +                          signed long)((1000)*(64000000/4000.0)));}
 10171  002B74  0E00               	movlw	0
 10172  002B76  0100               	movlb	0	; () banked
 10173  002B78  6FDF               	movwf	(goback@i+1)& (0+255),b
 10174  002B7A  0E00               	movlw	0
 10175  002B7C  6FDE               	movwf	goback@i& (0+255),b
 10176  002B7E  EFD0  F015         	goto	l5262
 10177  002B82                     l5258:
 10178                           
 10179                           ; BSR set to: 0
 10180  002B82  0E52               	movlw	82
 10181  002B84  6E5D               	movwf	(??_goback+1)^0,c
 10182  002B86  0E2B               	movlw	43
 10183  002B88  6E5C               	movwf	??_goback^0,c
 10184  002B8A  0E00               	movlw	0
 10185  002B8C                     u6087:
 10186  002B8C  2EE8               	decfsz	wreg,f,c
 10187  002B8E  D7FE               	bra	u6087
 10188  002B90  2E5C               	decfsz	??_goback^0,f,c
 10189  002B92  D7FC               	bra	u6087
 10190  002B94  2E5D               	decfsz	(??_goback+1)^0,f,c
 10191  002B96  D7FA               	bra	u6087
 10192  002B98  D000               	nop2	
 10193  002B9A  0100               	movlb	0	; () banked
 10194  002B9C  4BDE               	infsnz	goback@i& (0+255),f,b
 10195  002B9E  2BDF               	incf	(goback@i+1)& (0+255),f,b
 10196  002BA0                     l5262:
 10197                           
 10198                           ; BSR set to: 0
 10199  002BA0  51F9               	movf	_array_index& (0+255),w,b
 10200  002BA2  0D02               	mullw	2
 10201  002BA4  0E3C               	movlw	low _memory
 10202  002BA6  24F3               	addwf	243,w,c
 10203  002BA8  6ED9               	movwf	fsr2l,c
 10204  002BAA  0E03               	movlw	high _memory
 10205  002BAC  20F4               	addwfc	prodh,w,c
 10206  002BAE  6EDA               	movwf	fsr2h,c
 10207  002BB0  50DE               	movf	postinc2,w,c
 10208  002BB2  5DDE               	subwf	goback@i& (0+255),w,b
 10209  002BB4  50DE               	movf	postinc2,w,c
 10210  002BB6  59DF               	subwfb	(goback@i+1)& (0+255),w,b
 10211  002BB8  A0D8               	btfss	status,0,c
 10212  002BBA  EFE1  F015         	goto	u5251
 10213  002BBE  EFE3  F015         	goto	u5250
 10214  002BC2                     u5251:
 10215  002BC2  EFC1  F015         	goto	l5258
 10216  002BC6                     u5250:
 10217  002BC6                     
 10218                           ; BSR set to: 0
 10219                           ;movement.c: 138:         stop(mL,mR);
 10220  002BC6  C058  F01A         	movff	goback@mL,stop@mL
 10221  002BCA  C059  F01B         	movff	goback@mL+1,stop@mL+1
 10222  002BCE  C05A  F01C         	movff	goback@mR,stop@mR
 10223  002BD2  C05B  F01D         	movff	goback@mR+1,stop@mR+1
 10224  002BD6  ECF6  F027         	call	_stop	;wreg free
 10225  002BDA                     
 10226                           ;movement.c: 139:         if (array_index == 0){break;}
 10227  002BDA  0100               	movlb	0	; () banked
 10228  002BDC  51F9               	movf	_array_index& (0+255),w,b
 10229  002BDE  A4D8               	btfss	status,2,c
 10230  002BE0  EFF4  F015         	goto	u5261
 10231  002BE4  EFF6  F015         	goto	u5260
 10232  002BE8                     u5261:
 10233  002BE8  EFF8  F015         	goto	l5270
 10234  002BEC                     u5260:
 10235  002BEC  EF03  F017         	goto	l5320
 10236  002BF0                     l5270:
 10237                           
 10238                           ; BSR set to: 0
 10239                           ;movement.c: 140:         array_index--;
 10240  002BF0  07F9               	decf	_array_index& (0+255),f,b
 10241  002BF2                     
 10242                           ; BSR set to: 0
 10243                           ;movement.c: 141:         color_predict(array_index);
 10244  002BF2  51F9               	movf	_array_index& (0+255),w,b
 10245  002BF4  EC58  F02C         	call	_color_predict
 10246  002BF8                     
 10247                           ;movement.c: 142:         color_predict(memory[array_index]);
 10248  002BF8  0100               	movlb	0	; () banked
 10249  002BFA  51F9               	movf	_array_index& (0+255),w,b
 10250  002BFC  0D02               	mullw	2
 10251  002BFE  0E3C               	movlw	low _memory
 10252  002C00  24F3               	addwf	243,w,c
 10253  002C02  6ED9               	movwf	fsr2l,c
 10254  002C04  0E03               	movlw	high _memory
 10255  002C06  20F4               	addwfc	prodh,w,c
 10256  002C08  6EDA               	movwf	fsr2h,c
 10257  002C0A  50DF               	movf	indf2,w,c
 10258  002C0C  EC58  F02C         	call	_color_predict
 10259  002C10                     
 10260                           ;movement.c: 143:         color_predict(200);
 10261  002C10  0EC8               	movlw	200
 10262  002C12  EC58  F02C         	call	_color_predict
 10263  002C16                     
 10264                           ;movement.c: 144:         if (memory[array_index] == 1){turnLeft(mL,mR,90);array_index--
      +                          ;}
 10265  002C16  0100               	movlb	0	; () banked
 10266  002C18  51F9               	movf	_array_index& (0+255),w,b
 10267  002C1A  0D02               	mullw	2
 10268  002C1C  0E3C               	movlw	low _memory
 10269  002C1E  24F3               	addwf	243,w,c
 10270  002C20  6ED9               	movwf	fsr2l,c
 10271  002C22  0E03               	movlw	high _memory
 10272  002C24  20F4               	addwfc	prodh,w,c
 10273  002C26  6EDA               	movwf	fsr2h,c
 10274  002C28  04DE               	decf	postinc2,w,c
 10275  002C2A  10DE               	iorwf	postinc2,w,c
 10276  002C2C  A4D8               	btfss	status,2,c
 10277  002C2E  EF1B  F016         	goto	u5271
 10278  002C32  EF1D  F016         	goto	u5270
 10279  002C36                     u5271:
 10280  002C36  EF2D  F016         	goto	l5284
 10281  002C3A                     u5270:
 10282  002C3A                     
 10283                           ; BSR set to: 0
 10284  002C3A  C058  F020         	movff	goback@mL,turnLeft@mL
 10285  002C3E  C059  F021         	movff	goback@mL+1,turnLeft@mL+1
 10286  002C42  C05A  F022         	movff	goback@mR,turnLeft@mR
 10287  002C46  C05B  F023         	movff	goback@mR+1,turnLeft@mR+1
 10288  002C4A  0E5A               	movlw	90
 10289  002C4C  6E24               	movwf	turnLeft@angle_left^0,c
 10290  002C4E  ECA4  F020         	call	_turnLeft	;wreg free
 10291  002C52                     l5282:
 10292  002C52  0100               	movlb	0	; () banked
 10293  002C54  07F9               	decf	_array_index& (0+255),f,b
 10294  002C56  EF8C  F015         	goto	l5244
 10295  002C5A                     l5284:
 10296                           
 10297                           ; BSR set to: 0
 10298  002C5A  51F9               	movf	_array_index& (0+255),w,b
 10299  002C5C  0D02               	mullw	2
 10300  002C5E  0E3C               	movlw	low _memory
 10301  002C60  24F3               	addwf	243,w,c
 10302  002C62  6ED9               	movwf	fsr2l,c
 10303  002C64  0E03               	movlw	high _memory
 10304  002C66  20F4               	addwfc	prodh,w,c
 10305  002C68  6EDA               	movwf	fsr2h,c
 10306  002C6A  0E02               	movlw	2
 10307  002C6C  18DE               	xorwf	postinc2,w,c
 10308  002C6E  10DE               	iorwf	postinc2,w,c
 10309  002C70  A4D8               	btfss	status,2,c
 10310  002C72  EF3D  F016         	goto	u5281
 10311  002C76  EF3F  F016         	goto	u5280
 10312  002C7A                     u5281:
 10313  002C7A  EF4D  F016         	goto	l5290
 10314  002C7E                     u5280:
 10315  002C7E                     
 10316                           ; BSR set to: 0
 10317  002C7E  C058  F020         	movff	goback@mL,turnRight@mL
 10318  002C82  C059  F021         	movff	goback@mL+1,turnRight@mL+1
 10319  002C86  C05A  F022         	movff	goback@mR,turnRight@mR
 10320  002C8A  C05B  F023         	movff	goback@mR+1,turnRight@mR+1
 10321  002C8E  0E5A               	movlw	90
 10322  002C90  6E24               	movwf	turnRight@angle_right^0,c
 10323  002C92  ECDD  F01F         	call	_turnRight	;wreg free
 10324  002C96  EF29  F016         	goto	l5282
 10325  002C9A                     l5290:
 10326                           
 10327                           ; BSR set to: 0
 10328  002C9A  51F9               	movf	_array_index& (0+255),w,b
 10329  002C9C  0D02               	mullw	2
 10330  002C9E  0E3C               	movlw	low _memory
 10331  002CA0  24F3               	addwf	243,w,c
 10332  002CA2  6ED9               	movwf	fsr2l,c
 10333  002CA4  0E03               	movlw	high _memory
 10334  002CA6  20F4               	addwfc	prodh,w,c
 10335  002CA8  6EDA               	movwf	fsr2h,c
 10336  002CAA  0E03               	movlw	3
 10337  002CAC  18DE               	xorwf	postinc2,w,c
 10338  002CAE  10DE               	iorwf	postinc2,w,c
 10339  002CB0  A4D8               	btfss	status,2,c
 10340  002CB2  EF5D  F016         	goto	u5291
 10341  002CB6  EF5F  F016         	goto	u5290
 10342  002CBA                     u5291:
 10343  002CBA  EF6D  F016         	goto	l5296
 10344  002CBE                     u5290:
 10345  002CBE                     
 10346                           ; BSR set to: 0
 10347  002CBE  C058  F020         	movff	goback@mL,turnLeft@mL
 10348  002CC2  C059  F021         	movff	goback@mL+1,turnLeft@mL+1
 10349  002CC6  C05A  F022         	movff	goback@mR,turnLeft@mR
 10350  002CCA  C05B  F023         	movff	goback@mR+1,turnLeft@mR+1
 10351  002CCE  0EB4               	movlw	180
 10352  002CD0  6E24               	movwf	turnLeft@angle_left^0,c
 10353  002CD2  ECA4  F020         	call	_turnLeft	;wreg free
 10354  002CD6  EF29  F016         	goto	l5282
 10355  002CDA                     l5296:
 10356                           
 10357                           ; BSR set to: 0
 10358  002CDA  51F9               	movf	_array_index& (0+255),w,b
 10359  002CDC  0D02               	mullw	2
 10360  002CDE  0E3C               	movlw	low _memory
 10361  002CE0  24F3               	addwf	243,w,c
 10362  002CE2  6ED9               	movwf	fsr2l,c
 10363  002CE4  0E03               	movlw	high _memory
 10364  002CE6  20F4               	addwfc	prodh,w,c
 10365  002CE8  6EDA               	movwf	fsr2h,c
 10366  002CEA  0E04               	movlw	4
 10367  002CEC  18DE               	xorwf	postinc2,w,c
 10368  002CEE  10DE               	iorwf	postinc2,w,c
 10369  002CF0  A4D8               	btfss	status,2,c
 10370  002CF2  EF7D  F016         	goto	u5301
 10371  002CF6  EF7F  F016         	goto	u5300
 10372  002CFA                     u5301:
 10373  002CFA  EF97  F016         	goto	l5302
 10374  002CFE                     u5300:
 10375  002CFE                     
 10376                           ; BSR set to: 0
 10377  002CFE  C058  F026         	movff	goback@mL,reverse_square@mL
 10378  002D02  C059  F027         	movff	goback@mL+1,reverse_square@mL+1
 10379  002D06  C05A  F028         	movff	goback@mR,reverse_square@mR
 10380  002D0A  C05B  F029         	movff	goback@mR+1,reverse_square@mR+1
 10381  002D0E  EC75  F02B         	call	_reverse_square	;wreg free
 10382  002D12  C058  F020         	movff	goback@mL,turnLeft@mL
 10383  002D16  C059  F021         	movff	goback@mL+1,turnLeft@mL+1
 10384  002D1A  C05A  F022         	movff	goback@mR,turnLeft@mR
 10385  002D1E  C05B  F023         	movff	goback@mR+1,turnLeft@mR+1
 10386  002D22  0E5A               	movlw	90
 10387  002D24  6E24               	movwf	turnLeft@angle_left^0,c
 10388  002D26  ECA4  F020         	call	_turnLeft	;wreg free
 10389  002D2A  EF29  F016         	goto	l5282
 10390  002D2E                     l5302:
 10391                           
 10392                           ; BSR set to: 0
 10393  002D2E  51F9               	movf	_array_index& (0+255),w,b
 10394  002D30  0D02               	mullw	2
 10395  002D32  0E3C               	movlw	low _memory
 10396  002D34  24F3               	addwf	243,w,c
 10397  002D36  6ED9               	movwf	fsr2l,c
 10398  002D38  0E03               	movlw	high _memory
 10399  002D3A  20F4               	addwfc	prodh,w,c
 10400  002D3C  6EDA               	movwf	fsr2h,c
 10401  002D3E  0E05               	movlw	5
 10402  002D40  18DE               	xorwf	postinc2,w,c
 10403  002D42  10DE               	iorwf	postinc2,w,c
 10404  002D44  A4D8               	btfss	status,2,c
 10405  002D46  EFA7  F016         	goto	u5311
 10406  002D4A  EFA9  F016         	goto	u5310
 10407  002D4E                     u5311:
 10408  002D4E  EFC1  F016         	goto	l5308
 10409  002D52                     u5310:
 10410  002D52                     
 10411                           ; BSR set to: 0
 10412  002D52  C058  F026         	movff	goback@mL,reverse_square@mL
 10413  002D56  C059  F027         	movff	goback@mL+1,reverse_square@mL+1
 10414  002D5A  C05A  F028         	movff	goback@mR,reverse_square@mR
 10415  002D5E  C05B  F029         	movff	goback@mR+1,reverse_square@mR+1
 10416  002D62  EC75  F02B         	call	_reverse_square	;wreg free
 10417  002D66  C058  F020         	movff	goback@mL,turnRight@mL
 10418  002D6A  C059  F021         	movff	goback@mL+1,turnRight@mL+1
 10419  002D6E  C05A  F022         	movff	goback@mR,turnRight@mR
 10420  002D72  C05B  F023         	movff	goback@mR+1,turnRight@mR+1
 10421  002D76  0E5A               	movlw	90
 10422  002D78  6E24               	movwf	turnRight@angle_right^0,c
 10423  002D7A  ECDD  F01F         	call	_turnRight	;wreg free
 10424  002D7E  EF29  F016         	goto	l5282
 10425  002D82                     l5308:
 10426                           
 10427                           ; BSR set to: 0
 10428  002D82  51F9               	movf	_array_index& (0+255),w,b
 10429  002D84  0D02               	mullw	2
 10430  002D86  0E3C               	movlw	low _memory
 10431  002D88  24F3               	addwf	243,w,c
 10432  002D8A  6ED9               	movwf	fsr2l,c
 10433  002D8C  0E03               	movlw	high _memory
 10434  002D8E  20F4               	addwfc	prodh,w,c
 10435  002D90  6EDA               	movwf	fsr2h,c
 10436  002D92  0E06               	movlw	6
 10437  002D94  18DE               	xorwf	postinc2,w,c
 10438  002D96  10DE               	iorwf	postinc2,w,c
 10439  002D98  A4D8               	btfss	status,2,c
 10440  002D9A  EFD1  F016         	goto	u5321
 10441  002D9E  EFD3  F016         	goto	u5320
 10442  002DA2                     u5321:
 10443  002DA2  EFE1  F016         	goto	l5314
 10444  002DA6                     u5320:
 10445  002DA6                     
 10446                           ; BSR set to: 0
 10447  002DA6  C058  F020         	movff	goback@mL,turnLeft@mL
 10448  002DAA  C059  F021         	movff	goback@mL+1,turnLeft@mL+1
 10449  002DAE  C05A  F022         	movff	goback@mR,turnLeft@mR
 10450  002DB2  C05B  F023         	movff	goback@mR+1,turnLeft@mR+1
 10451  002DB6  0E87               	movlw	135
 10452  002DB8  6E24               	movwf	turnLeft@angle_left^0,c
 10453  002DBA  ECA4  F020         	call	_turnLeft	;wreg free
 10454  002DBE  EF29  F016         	goto	l5282
 10455  002DC2                     l5314:
 10456                           
 10457                           ; BSR set to: 0
 10458  002DC2  51F9               	movf	_array_index& (0+255),w,b
 10459  002DC4  0D02               	mullw	2
 10460  002DC6  0E3C               	movlw	low _memory
 10461  002DC8  24F3               	addwf	243,w,c
 10462  002DCA  6ED9               	movwf	fsr2l,c
 10463  002DCC  0E03               	movlw	high _memory
 10464  002DCE  20F4               	addwfc	prodh,w,c
 10465  002DD0  6EDA               	movwf	fsr2h,c
 10466  002DD2  0E07               	movlw	7
 10467  002DD4  18DE               	xorwf	postinc2,w,c
 10468  002DD6  10DE               	iorwf	postinc2,w,c
 10469  002DD8  A4D8               	btfss	status,2,c
 10470  002DDA  EFF1  F016         	goto	u5331
 10471  002DDE  EFF3  F016         	goto	u5330
 10472  002DE2                     u5331:
 10473  002DE2  EF01  F017         	goto	l664
 10474  002DE6                     u5330:
 10475  002DE6                     
 10476                           ; BSR set to: 0
 10477  002DE6  C058  F020         	movff	goback@mL,turnRight@mL
 10478  002DEA  C059  F021         	movff	goback@mL+1,turnRight@mL+1
 10479  002DEE  C05A  F022         	movff	goback@mR,turnRight@mR
 10480  002DF2  C05B  F023         	movff	goback@mR+1,turnRight@mR+1
 10481  002DF6  0E87               	movlw	135
 10482  002DF8  6E24               	movwf	turnRight@angle_right^0,c
 10483  002DFA  ECDD  F01F         	call	_turnRight	;wreg free
 10484  002DFE  EF29  F016         	goto	l5282
 10485  002E02                     l664:
 10486                           
 10487                           ; BSR set to: 0
 10488  002E02  EF8C  F015         	goto	l5244
 10489  002E06                     l5320:
 10490                           
 10491                           ; BSR set to: 0
 10492                           ;movement.c: 152:     char buf2[100];;movement.c: 153:     sprintf(buf2,"go back finish\
      +                          r\n");
 10493  002E06  0E00               	movlw	low goback@buf2
 10494  002E08  6F60               	movwf	sprintf@s& (0+255),b
 10495  002E0A  0E02               	movlw	high goback@buf2
 10496  002E0C  6F61               	movwf	(sprintf@s+1)& (0+255),b
 10497  002E0E  0E05               	movlw	low STR_6
 10498  002E10  6F62               	movwf	sprintf@fmt& (0+255),b
 10499  002E12  0E0E               	movlw	high STR_6
 10500  002E14  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
 10501  002E16  EC05  F02A         	call	_sprintf	;wreg free
 10502  002E1A                     
 10503                           ;movement.c: 154:     sendStringSerial4(buf2);
 10504  002E1A  0E00               	movlw	low goback@buf2
 10505  002E1C  6E02               	movwf	sendStringSerial4@string^0,c
 10506  002E1E  0E02               	movlw	high goback@buf2
 10507  002E20  6E03               	movwf	(sendStringSerial4@string+1)^0,c
 10508  002E22  EC40  F02C         	call	_sendStringSerial4	;wreg free
 10509  002E26                     l5324:
 10510  002E26  C058  F01A         	movff	goback@mL,stop@mL
 10511  002E2A  C059  F01B         	movff	goback@mL+1,stop@mL+1
 10512  002E2E  C05A  F01C         	movff	goback@mR,stop@mR
 10513  002E32  C05B  F01D         	movff	goback@mR+1,stop@mR+1
 10514  002E36  ECF6  F027         	call	_stop	;wreg free
 10515  002E3A  EF13  F017         	goto	l5324
 10516  002E3E  0012               	return		;funcret
 10517  002E40                     __end_of_goback:
 10518                           	callstack 0
 10519                           
 10520 ;; *************** function _turnRight *****************
 10521 ;; Defined at:
 10522 ;;		line 122 in file "dc_motor.c"
 10523 ;; Parameters:    Size  Location     Type
 10524 ;;  mL              2   31[COMRAM] PTR struct DC_motor
 10525 ;;		 -> main@motorL(10), 
 10526 ;;  mR              2   33[COMRAM] PTR struct DC_motor
 10527 ;;		 -> main@motorR(10), 
 10528 ;;  angle_right     1   35[COMRAM] unsigned char 
 10529 ;; Auto vars:     Size  Location     Type
 10530 ;;  i               2   45[COMRAM] unsigned int 
 10531 ;;  i               2   43[COMRAM] unsigned int 
 10532 ;;  i               2   41[COMRAM] unsigned int 
 10533 ;;  delay           2   47[COMRAM] unsigned int 
 10534 ;;  delay_180       2   39[COMRAM] unsigned int 
 10535 ;;  delay_135       2   37[COMRAM] unsigned int 
 10536 ;; Return value:  Size  Location     Type
 10537 ;;                  1    wreg      void 
 10538 ;; Registers used:
 10539 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10540 ;; Tracked objects:
 10541 ;;		On entry : 0/0
 10542 ;;		On exit  : 0/0
 10543 ;;		Unchanged: 0/0
 10544 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10545 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10546 ;;      Locals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10547 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10548 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10549 ;;Total ram usage:       18 bytes
 10550 ;; Hardware stack levels used: 1
 10551 ;; Hardware stack levels required when called: 4
 10552 ;; This function calls:
 10553 ;;		_setMotorPWM
 10554 ;;		_stop
 10555 ;; This function is called by:
 10556 ;;		_action
 10557 ;;		_goback
 10558 ;;		_test_action
 10559 ;; This function uses a non-reentrant model
 10560 ;;
 10561                           
 10562                           	psect	text50
 10563  003FBA                     __ptext50:
 10564                           	callstack 0
 10565  003FBA                     _turnRight:
 10566                           	callstack 25
 10567  003FBA                     
 10568                           ;dc_motor.c: 122: void turnRight(struct DC_motor *mL, struct DC_motor *mR, unsigned char
      +                           angle_right);dc_motor.c: 123: {;dc_motor.c: 124:     mL->direction=1;
 10569  003FBA  EE20 F001          	lfsr	2,1
 10570  003FBE  5020               	movf	turnRight@mL^0,w,c
 10571  003FC0  26D9               	addwf	fsr2l,f,c
 10572  003FC2  5021               	movf	(turnRight@mL+1)^0,w,c
 10573  003FC4  22DA               	addwfc	fsr2h,f,c
 10574  003FC6  0E01               	movlw	1
 10575  003FC8  6EDF               	movwf	indf2,c
 10576                           
 10577                           ;dc_motor.c: 125:     mR->direction=1;
 10578  003FCA  EE20 F001          	lfsr	2,1
 10579  003FCE  5022               	movf	turnRight@mR^0,w,c
 10580  003FD0  26D9               	addwf	fsr2l,f,c
 10581  003FD2  5023               	movf	(turnRight@mR+1)^0,w,c
 10582  003FD4  22DA               	addwfc	fsr2h,f,c
 10583  003FD6  0E01               	movlw	1
 10584  003FD8  6EDF               	movwf	indf2,c
 10585                           
 10586                           ;dc_motor.c: 126:     while (mL->power <25){
 10587  003FDA  EF0E  F020         	goto	l4668
 10588  003FDE                     l4660:
 10589                           
 10590                           ;dc_motor.c: 127:         mL->power += 5;
 10591  003FDE  C020  FFD9         	movff	turnRight@mL,fsr2l
 10592  003FE2  C021  FFDA         	movff	turnRight@mL+1,fsr2h
 10593  003FE6  0E05               	movlw	5
 10594  003FE8  26DF               	addwf	indf2,f,c
 10595                           
 10596                           ;dc_motor.c: 128:         mR->power = 0;
 10597  003FEA  C022  FFD9         	movff	turnRight@mR,fsr2l
 10598  003FEE  C023  FFDA         	movff	turnRight@mR+1,fsr2h
 10599  003FF2  0E00               	movlw	0
 10600  003FF4  6EDF               	movwf	indf2,c
 10601  003FF6                     
 10602                           ;dc_motor.c: 129:         setMotorPWM(mL);
 10603  003FF6  C020  F00F         	movff	turnRight@mL,setMotorPWM@m
 10604  003FFA  C021  F010         	movff	turnRight@mL+1,setMotorPWM@m+1
 10605  003FFE  EC74  F01C         	call	_setMotorPWM	;wreg free
 10606  004002                     
 10607                           ;dc_motor.c: 130:         setMotorPWM(mR);
 10608  004002  C022  F00F         	movff	turnRight@mR,setMotorPWM@m
 10609  004006  C023  F010         	movff	turnRight@mR+1,setMotorPWM@m+1
 10610  00400A  EC74  F01C         	call	_setMotorPWM	;wreg free
 10611  00400E                     
 10612                           ;dc_motor.c: 131:         _delay((unsigned long)((10)*(64000000/4000.0)));
 10613  00400E  0ED0               	movlw	208
 10614  004010  6E25               	movwf	??_turnRight^0,c
 10615  004012  0ECA               	movlw	202
 10616  004014                     u6097:
 10617  004014  2EE8               	decfsz	wreg,f,c
 10618  004016  D7FE               	bra	u6097
 10619  004018  2E25               	decfsz	??_turnRight^0,f,c
 10620  00401A  D7FC               	bra	u6097
 10621  00401C                     l4668:
 10622                           
 10623                           ;dc_motor.c: 126:     while (mL->power <25){
 10624  00401C  C020  FFD9         	movff	turnRight@mL,fsr2l
 10625  004020  C021  FFDA         	movff	turnRight@mL+1,fsr2h
 10626  004024  0E18               	movlw	24
 10627  004026  64DF               	cpfsgt	indf2,c
 10628  004028  EF18  F020         	goto	u4651
 10629  00402C  EF1A  F020         	goto	u4650
 10630  004030                     u4651:
 10631  004030  EFEF  F01F         	goto	l4660
 10632  004034                     u4650:
 10633  004034                     
 10634                           ;dc_motor.c: 133:     unsigned int delay = angle_right * SENSITIVITY;
 10635  004034  5024               	movf	turnRight@angle_right^0,w,c
 10636  004036  0100               	movlb	0	; () banked
 10637  004038  03FE               	mulwf	_SENSITIVITY& (0+255),b
 10638  00403A  CFF3 F030          	movff	prodl,turnRight@delay
 10639  00403E  CFF4 F031          	movff	prodh,turnRight@delay+1
 10640  004042                     
 10641                           ; BSR set to: 0
 10642  004042  0E0F               	movlw	15
 10643  004044  2430               	addwf	turnRight@delay^0,w,c
 10644  004046  6E26               	movwf	turnRight@delay_135^0,c
 10645  004048  0E00               	movlw	0
 10646  00404A  2031               	addwfc	(turnRight@delay+1)^0,w,c
 10647  00404C  6E27               	movwf	(turnRight@delay_135+1)^0,c
 10648  00404E                     
 10649                           ; BSR set to: 0
 10650  00404E  0E0A               	movlw	10
 10651  004050  2430               	addwf	turnRight@delay^0,w,c
 10652  004052  6E28               	movwf	turnRight@delay_180^0,c
 10653  004054  0E00               	movlw	0
 10654  004056  2031               	addwfc	(turnRight@delay+1)^0,w,c
 10655  004058  6E29               	movwf	(turnRight@delay_180+1)^0,c
 10656  00405A                     
 10657                           ; BSR set to: 0
 10658                           ;dc_motor.c: 136:     if (angle_right == 180){
 10659  00405A  0EB4               	movlw	180
 10660  00405C  1824               	xorwf	turnRight@angle_right^0,w,c
 10661  00405E  A4D8               	btfss	status,2,c
 10662  004060  EF34  F020         	goto	u4661
 10663  004064  EF36  F020         	goto	u4660
 10664  004068                     u4661:
 10665  004068  EF51  F020         	goto	l4684
 10666  00406C                     u4660:
 10667  00406C                     
 10668                           ; BSR set to: 0
 10669                           ;dc_motor.c: 137:         for(unsigned int i = 0; i <delay_180; i++){_delay((unsigned lo
      +                          ng)((1)*(64000000/4000.0)));}
 10670  00406C  0E00               	movlw	0
 10671  00406E  6E2B               	movwf	(turnRight@i+1)^0,c
 10672  004070  0E00               	movlw	0
 10673  004072  6E2A               	movwf	turnRight@i^0,c
 10674  004074  EF46  F020         	goto	l335
 10675  004078                     l4680:
 10676  004078  0E15               	movlw	21
 10677  00407A  6E25               	movwf	??_turnRight^0,c
 10678  00407C  0EC6               	movlw	198
 10679  00407E                     u6107:
 10680  00407E  2EE8               	decfsz	wreg,f,c
 10681  004080  D7FE               	bra	u6107
 10682  004082  2E25               	decfsz	??_turnRight^0,f,c
 10683  004084  D7FC               	bra	u6107
 10684  004086  D000               	nop2	
 10685  004088  4A2A               	infsnz	turnRight@i^0,f,c
 10686  00408A  2A2B               	incf	(turnRight@i+1)^0,f,c
 10687  00408C                     l335:
 10688  00408C  5028               	movf	turnRight@delay_180^0,w,c
 10689  00408E  5C2A               	subwf	turnRight@i^0,w,c
 10690  004090  5029               	movf	(turnRight@delay_180+1)^0,w,c
 10691  004092  582B               	subwfb	(turnRight@i+1)^0,w,c
 10692  004094  A0D8               	btfss	status,0,c
 10693  004096  EF4F  F020         	goto	u4671
 10694  00409A  EF51  F020         	goto	u4670
 10695  00409E                     u4671:
 10696  00409E  EF3C  F020         	goto	l4680
 10697  0040A2                     u4670:
 10698  0040A2                     l4684:
 10699                           
 10700                           ;dc_motor.c: 139:     if (angle_right == 135){
 10701  0040A2  0E87               	movlw	135
 10702  0040A4  1824               	xorwf	turnRight@angle_right^0,w,c
 10703  0040A6  A4D8               	btfss	status,2,c
 10704  0040A8  EF58  F020         	goto	u4681
 10705  0040AC  EF5A  F020         	goto	u4680
 10706  0040B0                     u4681:
 10707  0040B0  EF75  F020         	goto	l4692
 10708  0040B4                     u4680:
 10709  0040B4                     
 10710                           ;dc_motor.c: 140:         for(unsigned int i = 0; i <delay_135; i++){_delay((unsigned lo
      +                          ng)((1)*(64000000/4000.0)));}
 10711  0040B4  0E00               	movlw	0
 10712  0040B6  6E2D               	movwf	(turnRight@i_1357+1)^0,c
 10713  0040B8  0E00               	movlw	0
 10714  0040BA  6E2C               	movwf	turnRight@i_1357^0,c
 10715  0040BC  EF6A  F020         	goto	l339
 10716  0040C0                     l4688:
 10717  0040C0  0E15               	movlw	21
 10718  0040C2  6E25               	movwf	??_turnRight^0,c
 10719  0040C4  0EC6               	movlw	198
 10720  0040C6                     u6117:
 10721  0040C6  2EE8               	decfsz	wreg,f,c
 10722  0040C8  D7FE               	bra	u6117
 10723  0040CA  2E25               	decfsz	??_turnRight^0,f,c
 10724  0040CC  D7FC               	bra	u6117
 10725  0040CE  D000               	nop2	
 10726  0040D0  4A2C               	infsnz	turnRight@i_1357^0,f,c
 10727  0040D2  2A2D               	incf	(turnRight@i_1357+1)^0,f,c
 10728  0040D4                     l339:
 10729  0040D4  5026               	movf	turnRight@delay_135^0,w,c
 10730  0040D6  5C2C               	subwf	turnRight@i_1357^0,w,c
 10731  0040D8  5027               	movf	(turnRight@delay_135+1)^0,w,c
 10732  0040DA  582D               	subwfb	(turnRight@i_1357+1)^0,w,c
 10733  0040DC  A0D8               	btfss	status,0,c
 10734  0040DE  EF73  F020         	goto	u4691
 10735  0040E2  EF75  F020         	goto	u4690
 10736  0040E6                     u4691:
 10737  0040E6  EF60  F020         	goto	l4688
 10738  0040EA                     u4690:
 10739  0040EA                     l4692:
 10740                           
 10741                           ;dc_motor.c: 142:     if (angle_right == 90){
 10742  0040EA  0E5A               	movlw	90
 10743  0040EC  1824               	xorwf	turnRight@angle_right^0,w,c
 10744  0040EE  A4D8               	btfss	status,2,c
 10745  0040F0  EF7C  F020         	goto	u4701
 10746  0040F4  EF7E  F020         	goto	u4700
 10747  0040F8                     u4701:
 10748  0040F8  EF99  F020         	goto	l4700
 10749  0040FC                     u4700:
 10750  0040FC                     
 10751                           ;dc_motor.c: 143:         for(unsigned int i = 0; i < delay; i++){_delay((unsigned long)
      +                          ((1)*(64000000/4000.0)));}
 10752  0040FC  0E00               	movlw	0
 10753  0040FE  6E2F               	movwf	(turnRight@i_1358+1)^0,c
 10754  004100  0E00               	movlw	0
 10755  004102  6E2E               	movwf	turnRight@i_1358^0,c
 10756  004104  EF8E  F020         	goto	l343
 10757  004108                     l4696:
 10758  004108  0E15               	movlw	21
 10759  00410A  6E25               	movwf	??_turnRight^0,c
 10760  00410C  0EC6               	movlw	198
 10761  00410E                     u6127:
 10762  00410E  2EE8               	decfsz	wreg,f,c
 10763  004110  D7FE               	bra	u6127
 10764  004112  2E25               	decfsz	??_turnRight^0,f,c
 10765  004114  D7FC               	bra	u6127
 10766  004116  D000               	nop2	
 10767  004118  4A2E               	infsnz	turnRight@i_1358^0,f,c
 10768  00411A  2A2F               	incf	(turnRight@i_1358+1)^0,f,c
 10769  00411C                     l343:
 10770  00411C  5030               	movf	turnRight@delay^0,w,c
 10771  00411E  5C2E               	subwf	turnRight@i_1358^0,w,c
 10772  004120  5031               	movf	(turnRight@delay+1)^0,w,c
 10773  004122  582F               	subwfb	(turnRight@i_1358+1)^0,w,c
 10774  004124  A0D8               	btfss	status,0,c
 10775  004126  EF97  F020         	goto	u4711
 10776  00412A  EF99  F020         	goto	u4710
 10777  00412E                     u4711:
 10778  00412E  EF84  F020         	goto	l4696
 10779  004132                     u4710:
 10780  004132                     l4700:
 10781                           
 10782                           ;dc_motor.c: 145:     stop(mL,mR);
 10783  004132  C020  F01A         	movff	turnRight@mL,stop@mL
 10784  004136  C021  F01B         	movff	turnRight@mL+1,stop@mL+1
 10785  00413A  C022  F01C         	movff	turnRight@mR,stop@mR
 10786  00413E  C023  F01D         	movff	turnRight@mR+1,stop@mR+1
 10787  004142  ECF6  F027         	call	_stop	;wreg free
 10788  004146  0012               	return		;funcret
 10789  004148                     __end_of_turnRight:
 10790                           	callstack 0
 10791                           
 10792 ;; *************** function _turnLeft *****************
 10793 ;; Defined at:
 10794 ;;		line 95 in file "dc_motor.c"
 10795 ;; Parameters:    Size  Location     Type
 10796 ;;  mL              2   31[COMRAM] PTR struct DC_motor
 10797 ;;		 -> main@motorL(10), 
 10798 ;;  mR              2   33[COMRAM] PTR struct DC_motor
 10799 ;;		 -> main@motorR(10), 
 10800 ;;  angle_left      1   35[COMRAM] unsigned char 
 10801 ;; Auto vars:     Size  Location     Type
 10802 ;;  i               2   45[COMRAM] unsigned int 
 10803 ;;  i               2   43[COMRAM] unsigned int 
 10804 ;;  i               2   41[COMRAM] unsigned int 
 10805 ;;  delay           2   47[COMRAM] unsigned int 
 10806 ;;  delay_180       2   39[COMRAM] unsigned int 
 10807 ;;  delay_135       2   37[COMRAM] unsigned int 
 10808 ;; Return value:  Size  Location     Type
 10809 ;;                  1    wreg      void 
 10810 ;; Registers used:
 10811 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10812 ;; Tracked objects:
 10813 ;;		On entry : 0/0
 10814 ;;		On exit  : 0/0
 10815 ;;		Unchanged: 0/0
 10816 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10817 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10818 ;;      Locals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10819 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10820 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10821 ;;Total ram usage:       18 bytes
 10822 ;; Hardware stack levels used: 1
 10823 ;; Hardware stack levels required when called: 4
 10824 ;; This function calls:
 10825 ;;		_setMotorPWM
 10826 ;;		_stop
 10827 ;; This function is called by:
 10828 ;;		_action
 10829 ;;		_goback
 10830 ;;		_test_action
 10831 ;; This function uses a non-reentrant model
 10832 ;;
 10833                           
 10834                           	psect	text51
 10835  004148                     __ptext51:
 10836                           	callstack 0
 10837  004148                     _turnLeft:
 10838                           	callstack 25
 10839  004148                     
 10840                           ;dc_motor.c: 95: void turnLeft(struct DC_motor *mL, struct DC_motor *mR, unsigned char a
      +                          ngle_left);dc_motor.c: 96: {;dc_motor.c: 97:       mL->direction=1;
 10841  004148  EE20 F001          	lfsr	2,1
 10842  00414C  5020               	movf	turnLeft@mL^0,w,c
 10843  00414E  26D9               	addwf	fsr2l,f,c
 10844  004150  5021               	movf	(turnLeft@mL+1)^0,w,c
 10845  004152  22DA               	addwfc	fsr2h,f,c
 10846  004154  0E01               	movlw	1
 10847  004156  6EDF               	movwf	indf2,c
 10848                           
 10849                           ;dc_motor.c: 98:       mR->direction=1;
 10850  004158  EE20 F001          	lfsr	2,1
 10851  00415C  5022               	movf	turnLeft@mR^0,w,c
 10852  00415E  26D9               	addwf	fsr2l,f,c
 10853  004160  5023               	movf	(turnLeft@mR+1)^0,w,c
 10854  004162  22DA               	addwfc	fsr2h,f,c
 10855  004164  0E01               	movlw	1
 10856  004166  6EDF               	movwf	indf2,c
 10857                           
 10858                           ;dc_motor.c: 99:       while (mR->power <25){
 10859  004168  EFD5  F020         	goto	l4624
 10860  00416C                     l4616:
 10861                           
 10862                           ;dc_motor.c: 100:         mR->power += 5;
 10863  00416C  C022  FFD9         	movff	turnLeft@mR,fsr2l
 10864  004170  C023  FFDA         	movff	turnLeft@mR+1,fsr2h
 10865  004174  0E05               	movlw	5
 10866  004176  26DF               	addwf	indf2,f,c
 10867                           
 10868                           ;dc_motor.c: 101:         mL->power = 0;
 10869  004178  C020  FFD9         	movff	turnLeft@mL,fsr2l
 10870  00417C  C021  FFDA         	movff	turnLeft@mL+1,fsr2h
 10871  004180  0E00               	movlw	0
 10872  004182  6EDF               	movwf	indf2,c
 10873  004184                     
 10874                           ;dc_motor.c: 102:         setMotorPWM(mL);
 10875  004184  C020  F00F         	movff	turnLeft@mL,setMotorPWM@m
 10876  004188  C021  F010         	movff	turnLeft@mL+1,setMotorPWM@m+1
 10877  00418C  EC74  F01C         	call	_setMotorPWM	;wreg free
 10878  004190                     
 10879                           ;dc_motor.c: 103:         setMotorPWM(mR);
 10880  004190  C022  F00F         	movff	turnLeft@mR,setMotorPWM@m
 10881  004194  C023  F010         	movff	turnLeft@mR+1,setMotorPWM@m+1
 10882  004198  EC74  F01C         	call	_setMotorPWM	;wreg free
 10883  00419C                     
 10884                           ;dc_motor.c: 104:         _delay((unsigned long)((10)*(64000000/4000.0)));
 10885  00419C  0ED0               	movlw	208
 10886  00419E  6E25               	movwf	??_turnLeft^0,c
 10887  0041A0  0ECA               	movlw	202
 10888  0041A2                     u6137:
 10889  0041A2  2EE8               	decfsz	wreg,f,c
 10890  0041A4  D7FE               	bra	u6137
 10891  0041A6  2E25               	decfsz	??_turnLeft^0,f,c
 10892  0041A8  D7FC               	bra	u6137
 10893  0041AA                     l4624:
 10894                           
 10895                           ;dc_motor.c: 99:       while (mR->power <25){
 10896  0041AA  C022  FFD9         	movff	turnLeft@mR,fsr2l
 10897  0041AE  C023  FFDA         	movff	turnLeft@mR+1,fsr2h
 10898  0041B2  0E18               	movlw	24
 10899  0041B4  64DF               	cpfsgt	indf2,c
 10900  0041B6  EFDF  F020         	goto	u4581
 10901  0041BA  EFE1  F020         	goto	u4580
 10902  0041BE                     u4581:
 10903  0041BE  EFB6  F020         	goto	l4616
 10904  0041C2                     u4580:
 10905  0041C2                     
 10906                           ;dc_motor.c: 106:     unsigned int delay = angle_left * SENSITIVITY;
 10907  0041C2  5024               	movf	turnLeft@angle_left^0,w,c
 10908  0041C4  0100               	movlb	0	; () banked
 10909  0041C6  03FE               	mulwf	_SENSITIVITY& (0+255),b
 10910  0041C8  CFF3 F030          	movff	prodl,turnLeft@delay
 10911  0041CC  CFF4 F031          	movff	prodh,turnLeft@delay+1
 10912  0041D0                     
 10913                           ; BSR set to: 0
 10914  0041D0  0E0F               	movlw	15
 10915  0041D2  2430               	addwf	turnLeft@delay^0,w,c
 10916  0041D4  6E26               	movwf	turnLeft@delay_135^0,c
 10917  0041D6  0E00               	movlw	0
 10918  0041D8  2031               	addwfc	(turnLeft@delay+1)^0,w,c
 10919  0041DA  6E27               	movwf	(turnLeft@delay_135+1)^0,c
 10920  0041DC                     
 10921                           ; BSR set to: 0
 10922  0041DC  0E0A               	movlw	10
 10923  0041DE  2430               	addwf	turnLeft@delay^0,w,c
 10924  0041E0  6E28               	movwf	turnLeft@delay_180^0,c
 10925  0041E2  0E00               	movlw	0
 10926  0041E4  2031               	addwfc	(turnLeft@delay+1)^0,w,c
 10927  0041E6  6E29               	movwf	(turnLeft@delay_180+1)^0,c
 10928  0041E8                     
 10929                           ; BSR set to: 0
 10930                           ;dc_motor.c: 109:     if (angle_left == 180){
 10931  0041E8  0EB4               	movlw	180
 10932  0041EA  1824               	xorwf	turnLeft@angle_left^0,w,c
 10933  0041EC  A4D8               	btfss	status,2,c
 10934  0041EE  EFFB  F020         	goto	u4591
 10935  0041F2  EFFD  F020         	goto	u4590
 10936  0041F6                     u4591:
 10937  0041F6  EF18  F021         	goto	l4640
 10938  0041FA                     u4590:
 10939  0041FA                     
 10940                           ; BSR set to: 0
 10941                           ;dc_motor.c: 110:         for(unsigned int i = 0; i <delay_180; i++){_delay((unsigned lo
      +                          ng)((1)*(64000000/4000.0)));}
 10942  0041FA  0E00               	movlw	0
 10943  0041FC  6E2B               	movwf	(turnLeft@i+1)^0,c
 10944  0041FE  0E00               	movlw	0
 10945  004200  6E2A               	movwf	turnLeft@i^0,c
 10946  004202  EF0D  F021         	goto	l317
 10947  004206                     l4636:
 10948  004206  0E15               	movlw	21
 10949  004208  6E25               	movwf	??_turnLeft^0,c
 10950  00420A  0EC6               	movlw	198
 10951  00420C                     u6147:
 10952  00420C  2EE8               	decfsz	wreg,f,c
 10953  00420E  D7FE               	bra	u6147
 10954  004210  2E25               	decfsz	??_turnLeft^0,f,c
 10955  004212  D7FC               	bra	u6147
 10956  004214  D000               	nop2	
 10957  004216  4A2A               	infsnz	turnLeft@i^0,f,c
 10958  004218  2A2B               	incf	(turnLeft@i+1)^0,f,c
 10959  00421A                     l317:
 10960  00421A  5028               	movf	turnLeft@delay_180^0,w,c
 10961  00421C  5C2A               	subwf	turnLeft@i^0,w,c
 10962  00421E  5029               	movf	(turnLeft@delay_180+1)^0,w,c
 10963  004220  582B               	subwfb	(turnLeft@i+1)^0,w,c
 10964  004222  A0D8               	btfss	status,0,c
 10965  004224  EF16  F021         	goto	u4601
 10966  004228  EF18  F021         	goto	u4600
 10967  00422C                     u4601:
 10968  00422C  EF03  F021         	goto	l4636
 10969  004230                     u4600:
 10970  004230                     l4640:
 10971                           
 10972                           ;dc_motor.c: 112:     if (angle_left == 135){
 10973  004230  0E87               	movlw	135
 10974  004232  1824               	xorwf	turnLeft@angle_left^0,w,c
 10975  004234  A4D8               	btfss	status,2,c
 10976  004236  EF1F  F021         	goto	u4611
 10977  00423A  EF21  F021         	goto	u4610
 10978  00423E                     u4611:
 10979  00423E  EF3C  F021         	goto	l4648
 10980  004242                     u4610:
 10981  004242                     
 10982                           ;dc_motor.c: 113:         for(unsigned int i = 0; i <delay_135; i++){_delay((unsigned lo
      +                          ng)((1)*(64000000/4000.0)));}
 10983  004242  0E00               	movlw	0
 10984  004244  6E2D               	movwf	(turnLeft@i_1332+1)^0,c
 10985  004246  0E00               	movlw	0
 10986  004248  6E2C               	movwf	turnLeft@i_1332^0,c
 10987  00424A  EF31  F021         	goto	l321
 10988  00424E                     l4644:
 10989  00424E  0E15               	movlw	21
 10990  004250  6E25               	movwf	??_turnLeft^0,c
 10991  004252  0EC6               	movlw	198
 10992  004254                     u6157:
 10993  004254  2EE8               	decfsz	wreg,f,c
 10994  004256  D7FE               	bra	u6157
 10995  004258  2E25               	decfsz	??_turnLeft^0,f,c
 10996  00425A  D7FC               	bra	u6157
 10997  00425C  D000               	nop2	
 10998  00425E  4A2C               	infsnz	turnLeft@i_1332^0,f,c
 10999  004260  2A2D               	incf	(turnLeft@i_1332+1)^0,f,c
 11000  004262                     l321:
 11001  004262  5026               	movf	turnLeft@delay_135^0,w,c
 11002  004264  5C2C               	subwf	turnLeft@i_1332^0,w,c
 11003  004266  5027               	movf	(turnLeft@delay_135+1)^0,w,c
 11004  004268  582D               	subwfb	(turnLeft@i_1332+1)^0,w,c
 11005  00426A  A0D8               	btfss	status,0,c
 11006  00426C  EF3A  F021         	goto	u4621
 11007  004270  EF3C  F021         	goto	u4620
 11008  004274                     u4621:
 11009  004274  EF27  F021         	goto	l4644
 11010  004278                     u4620:
 11011  004278                     l4648:
 11012                           
 11013                           ;dc_motor.c: 115:     if (angle_left == 90){
 11014  004278  0E5A               	movlw	90
 11015  00427A  1824               	xorwf	turnLeft@angle_left^0,w,c
 11016  00427C  A4D8               	btfss	status,2,c
 11017  00427E  EF43  F021         	goto	u4631
 11018  004282  EF45  F021         	goto	u4630
 11019  004286                     u4631:
 11020  004286  EF60  F021         	goto	l4656
 11021  00428A                     u4630:
 11022  00428A                     
 11023                           ;dc_motor.c: 116:         for(unsigned int i = 0; i < delay; i++){_delay((unsigned long)
      +                          ((1)*(64000000/4000.0)));}
 11024  00428A  0E00               	movlw	0
 11025  00428C  6E2F               	movwf	(turnLeft@i_1333+1)^0,c
 11026  00428E  0E00               	movlw	0
 11027  004290  6E2E               	movwf	turnLeft@i_1333^0,c
 11028  004292  EF55  F021         	goto	l325
 11029  004296                     l4652:
 11030  004296  0E15               	movlw	21
 11031  004298  6E25               	movwf	??_turnLeft^0,c
 11032  00429A  0EC6               	movlw	198
 11033  00429C                     u6167:
 11034  00429C  2EE8               	decfsz	wreg,f,c
 11035  00429E  D7FE               	bra	u6167
 11036  0042A0  2E25               	decfsz	??_turnLeft^0,f,c
 11037  0042A2  D7FC               	bra	u6167
 11038  0042A4  D000               	nop2	
 11039  0042A6  4A2E               	infsnz	turnLeft@i_1333^0,f,c
 11040  0042A8  2A2F               	incf	(turnLeft@i_1333+1)^0,f,c
 11041  0042AA                     l325:
 11042  0042AA  5030               	movf	turnLeft@delay^0,w,c
 11043  0042AC  5C2E               	subwf	turnLeft@i_1333^0,w,c
 11044  0042AE  5031               	movf	(turnLeft@delay+1)^0,w,c
 11045  0042B0  582F               	subwfb	(turnLeft@i_1333+1)^0,w,c
 11046  0042B2  A0D8               	btfss	status,0,c
 11047  0042B4  EF5E  F021         	goto	u4641
 11048  0042B8  EF60  F021         	goto	u4640
 11049  0042BC                     u4641:
 11050  0042BC  EF4B  F021         	goto	l4652
 11051  0042C0                     u4640:
 11052  0042C0                     l4656:
 11053                           
 11054                           ;dc_motor.c: 118:     stop(mL,mR);
 11055  0042C0  C020  F01A         	movff	turnLeft@mL,stop@mL
 11056  0042C4  C021  F01B         	movff	turnLeft@mL+1,stop@mL+1
 11057  0042C8  C022  F01C         	movff	turnLeft@mR,stop@mR
 11058  0042CC  C023  F01D         	movff	turnLeft@mR+1,stop@mR+1
 11059  0042D0  ECF6  F027         	call	_stop	;wreg free
 11060  0042D4  0012               	return		;funcret
 11061  0042D6                     __end_of_turnLeft:
 11062                           	callstack 0
 11063                           
 11064 ;; *************** function _reverse_square *****************
 11065 ;; Defined at:
 11066 ;;		line 205 in file "dc_motor.c"
 11067 ;; Parameters:    Size  Location     Type
 11068 ;;  mL              2   37[COMRAM] PTR struct DC_motor
 11069 ;;		 -> main@motorL(10), 
 11070 ;;  mR              2   39[COMRAM] PTR struct DC_motor
 11071 ;;		 -> main@motorR(10), 
 11072 ;; Auto vars:     Size  Location     Type
 11073 ;;		None
 11074 ;; Return value:  Size  Location     Type
 11075 ;;                  1    wreg      void 
 11076 ;; Registers used:
 11077 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11078 ;; Tracked objects:
 11079 ;;		On entry : 0/0
 11080 ;;		On exit  : 0/0
 11081 ;;		Unchanged: 0/0
 11082 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11083 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11084 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11085 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11086 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11087 ;;Total ram usage:        6 bytes
 11088 ;; Hardware stack levels used: 1
 11089 ;; Hardware stack levels required when called: 5
 11090 ;; This function calls:
 11091 ;;		_fullSpeedBack
 11092 ;;		_stop
 11093 ;; This function is called by:
 11094 ;;		_action
 11095 ;;		_goback
 11096 ;; This function uses a non-reentrant model
 11097 ;;
 11098                           
 11099                           	psect	text52
 11100  0056EA                     __ptext52:
 11101                           	callstack 0
 11102  0056EA                     _reverse_square:
 11103                           	callstack 24
 11104  0056EA                     
 11105                           ;dc_motor.c: 205: void reverse_square(struct DC_motor *mL, struct DC_motor *mR);dc_motor
      +                          .c: 206: { fullSpeedBack(mL, mR);
 11106  0056EA  C026  F020         	movff	reverse_square@mL,fullSpeedBack@mL
 11107  0056EE  C027  F021         	movff	reverse_square@mL+1,fullSpeedBack@mL+1
 11108  0056F2  C028  F022         	movff	reverse_square@mR,fullSpeedBack@mR
 11109  0056F6  C029  F023         	movff	reverse_square@mR+1,fullSpeedBack@mR+1
 11110  0056FA  EC96  F027         	call	_fullSpeedBack	;wreg free
 11111  0056FE                     
 11112                           ;dc_motor.c: 207:     _delay((unsigned long)((1500)*(64000000/4000.0)));
 11113  0056FE  0E7A               	movlw	122
 11114  005700  6E2B               	movwf	(??_reverse_square+1)^0,c
 11115  005702  0EC1               	movlw	193
 11116  005704  6E2A               	movwf	??_reverse_square^0,c
 11117  005706  0E82               	movlw	130
 11118  005708                     u6177:
 11119  005708  2EE8               	decfsz	wreg,f,c
 11120  00570A  D7FE               	bra	u6177
 11121  00570C  2E2A               	decfsz	??_reverse_square^0,f,c
 11122  00570E  D7FC               	bra	u6177
 11123  005710  2E2B               	decfsz	(??_reverse_square+1)^0,f,c
 11124  005712  D7FA               	bra	u6177
 11125  005714                     
 11126                           ;dc_motor.c: 208:     stop(mL,mR);
 11127  005714  C026  F01A         	movff	reverse_square@mL,stop@mL
 11128  005718  C027  F01B         	movff	reverse_square@mL+1,stop@mL+1
 11129  00571C  C028  F01C         	movff	reverse_square@mR,stop@mR
 11130  005720  C029  F01D         	movff	reverse_square@mR+1,stop@mR+1
 11131  005724  ECF6  F027         	call	_stop	;wreg free
 11132  005728  0012               	return		;funcret
 11133  00572A                     __end_of_reverse_square:
 11134                           	callstack 0
 11135                           
 11136 ;; *************** function _fullSpeedBack *****************
 11137 ;; Defined at:
 11138 ;;		line 168 in file "dc_motor.c"
 11139 ;; Parameters:    Size  Location     Type
 11140 ;;  mL              2   31[COMRAM] PTR struct DC_motor
 11141 ;;		 -> main@motorL(10), 
 11142 ;;  mR              2   33[COMRAM] PTR struct DC_motor
 11143 ;;		 -> main@motorR(10), 
 11144 ;; Auto vars:     Size  Location     Type
 11145 ;;		None
 11146 ;; Return value:  Size  Location     Type
 11147 ;;                  1    wreg      void 
 11148 ;; Registers used:
 11149 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11150 ;; Tracked objects:
 11151 ;;		On entry : 0/0
 11152 ;;		On exit  : 0/0
 11153 ;;		Unchanged: 0/0
 11154 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11155 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11156 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11157 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11158 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11159 ;;Total ram usage:        6 bytes
 11160 ;; Hardware stack levels used: 1
 11161 ;; Hardware stack levels required when called: 4
 11162 ;; This function calls:
 11163 ;;		_setMotorPWM
 11164 ;;		_stop
 11165 ;; This function is called by:
 11166 ;;		_short_reverse
 11167 ;;		_reverse_square
 11168 ;; This function uses a non-reentrant model
 11169 ;;
 11170                           
 11171                           	psect	text53
 11172  004F2C                     __ptext53:
 11173                           	callstack 0
 11174  004F2C                     _fullSpeedBack:
 11175                           	callstack 24
 11176  004F2C                     
 11177                           ;dc_motor.c: 168: void fullSpeedBack(struct DC_motor *mL, struct DC_motor *mR);dc_motor.
      +                          c: 169: {;dc_motor.c: 170:     mL->direction=0;
 11178  004F2C  EE20 F001          	lfsr	2,1
 11179  004F30  5020               	movf	fullSpeedBack@mL^0,w,c
 11180  004F32  26D9               	addwf	fsr2l,f,c
 11181  004F34  5021               	movf	(fullSpeedBack@mL+1)^0,w,c
 11182  004F36  22DA               	addwfc	fsr2h,f,c
 11183  004F38  0E00               	movlw	0
 11184  004F3A  6EDF               	movwf	indf2,c
 11185                           
 11186                           ;dc_motor.c: 171:     mR->direction=0;
 11187  004F3C  EE20 F001          	lfsr	2,1
 11188  004F40  5022               	movf	fullSpeedBack@mR^0,w,c
 11189  004F42  26D9               	addwf	fsr2l,f,c
 11190  004F44  5023               	movf	(fullSpeedBack@mR+1)^0,w,c
 11191  004F46  22DA               	addwfc	fsr2h,f,c
 11192  004F48  0E00               	movlw	0
 11193  004F4A  6EDF               	movwf	indf2,c
 11194                           
 11195                           ;dc_motor.c: 172:     while (mL->power<50 && mR->power<50){
 11196  004F4C  EFC7  F027         	goto	l4440
 11197  004F50                     l4432:
 11198                           
 11199                           ;dc_motor.c: 173:         mL->power += 10;
 11200  004F50  C020  FFD9         	movff	fullSpeedBack@mL,fsr2l
 11201  004F54  C021  FFDA         	movff	fullSpeedBack@mL+1,fsr2h
 11202  004F58  0E0A               	movlw	10
 11203  004F5A  26DF               	addwf	indf2,f,c
 11204                           
 11205                           ;dc_motor.c: 174:         mR->power += 10;
 11206  004F5C  C022  FFD9         	movff	fullSpeedBack@mR,fsr2l
 11207  004F60  C023  FFDA         	movff	fullSpeedBack@mR+1,fsr2h
 11208  004F64  0E0A               	movlw	10
 11209  004F66  26DF               	addwf	indf2,f,c
 11210  004F68                     
 11211                           ;dc_motor.c: 175:         setMotorPWM(mL);
 11212  004F68  C020  F00F         	movff	fullSpeedBack@mL,setMotorPWM@m
 11213  004F6C  C021  F010         	movff	fullSpeedBack@mL+1,setMotorPWM@m+1
 11214  004F70  EC74  F01C         	call	_setMotorPWM	;wreg free
 11215  004F74                     
 11216                           ;dc_motor.c: 176:         setMotorPWM(mR);
 11217  004F74  C022  F00F         	movff	fullSpeedBack@mR,setMotorPWM@m
 11218  004F78  C023  F010         	movff	fullSpeedBack@mR+1,setMotorPWM@m+1
 11219  004F7C  EC74  F01C         	call	_setMotorPWM	;wreg free
 11220  004F80                     
 11221                           ;dc_motor.c: 177:         _delay((unsigned long)((10)*(64000000/4000.0)));
 11222  004F80  0ED0               	movlw	208
 11223  004F82  6E24               	movwf	??_fullSpeedBack^0,c
 11224  004F84  0ECA               	movlw	202
 11225  004F86                     u6187:
 11226  004F86  2EE8               	decfsz	wreg,f,c
 11227  004F88  D7FE               	bra	u6187
 11228  004F8A  2E24               	decfsz	??_fullSpeedBack^0,f,c
 11229  004F8C  D7FC               	bra	u6187
 11230  004F8E                     l4440:
 11231                           
 11232                           ;dc_motor.c: 172:     while (mL->power<50 && mR->power<50){
 11233  004F8E  C020  FFD9         	movff	fullSpeedBack@mL,fsr2l
 11234  004F92  C021  FFDA         	movff	fullSpeedBack@mL+1,fsr2h
 11235  004F96  0E32               	movlw	50
 11236  004F98  60DF               	cpfslt	indf2,c
 11237  004F9A  EFD1  F027         	goto	u4121
 11238  004F9E  EFD3  F027         	goto	u4120
 11239  004FA2                     u4121:
 11240  004FA2  EFDF  F027         	goto	l4444
 11241  004FA6                     u4120:
 11242  004FA6  C022  FFD9         	movff	fullSpeedBack@mR,fsr2l
 11243  004FAA  C023  FFDA         	movff	fullSpeedBack@mR+1,fsr2h
 11244  004FAE  0E31               	movlw	49
 11245  004FB0  64DF               	cpfsgt	indf2,c
 11246  004FB2  EFDD  F027         	goto	u4131
 11247  004FB6  EFDF  F027         	goto	u4130
 11248  004FBA                     u4131:
 11249  004FBA  EFA8  F027         	goto	l4432
 11250  004FBE                     u4130:
 11251  004FBE                     l4444:
 11252                           
 11253                           ;dc_motor.c: 179:     _delay((unsigned long)((500)*(64000000/4000.0)));
 11254  004FBE  0E29               	movlw	41
 11255  004FC0  6E25               	movwf	(??_fullSpeedBack+1)^0,c
 11256  004FC2  0E96               	movlw	150
 11257  004FC4  6E24               	movwf	??_fullSpeedBack^0,c
 11258  004FC6  0E7F               	movlw	127
 11259  004FC8                     u6197:
 11260  004FC8  2EE8               	decfsz	wreg,f,c
 11261  004FCA  D7FE               	bra	u6197
 11262  004FCC  2E24               	decfsz	??_fullSpeedBack^0,f,c
 11263  004FCE  D7FC               	bra	u6197
 11264  004FD0  2E25               	decfsz	(??_fullSpeedBack+1)^0,f,c
 11265  004FD2  D7FA               	bra	u6197
 11266  004FD4  F000               	nop	
 11267  004FD6                     
 11268                           ;dc_motor.c: 180:     stop(mL,mR);
 11269  004FD6  C020  F01A         	movff	fullSpeedBack@mL,stop@mL
 11270  004FDA  C021  F01B         	movff	fullSpeedBack@mL+1,stop@mL+1
 11271  004FDE  C022  F01C         	movff	fullSpeedBack@mR,stop@mR
 11272  004FE2  C023  F01D         	movff	fullSpeedBack@mR+1,stop@mR+1
 11273  004FE6  ECF6  F027         	call	_stop	;wreg free
 11274  004FEA  0012               	return		;funcret
 11275  004FEC                     __end_of_fullSpeedBack:
 11276                           	callstack 0
 11277                           
 11278 ;; *************** function _stop *****************
 11279 ;; Defined at:
 11280 ;;		line 82 in file "dc_motor.c"
 11281 ;; Parameters:    Size  Location     Type
 11282 ;;  mL              2   25[COMRAM] PTR struct DC_motor
 11283 ;;		 -> main@motorL(10), 
 11284 ;;  mR              2   27[COMRAM] PTR struct DC_motor
 11285 ;;		 -> main@motorR(10), 
 11286 ;; Auto vars:     Size  Location     Type
 11287 ;;		None
 11288 ;; Return value:  Size  Location     Type
 11289 ;;                  1    wreg      void 
 11290 ;; Registers used:
 11291 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11292 ;; Tracked objects:
 11293 ;;		On entry : 0/0
 11294 ;;		On exit  : 0/0
 11295 ;;		Unchanged: 0/0
 11296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11297 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11298 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11299 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11300 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11301 ;;Total ram usage:        6 bytes
 11302 ;; Hardware stack levels used: 1
 11303 ;; Hardware stack levels required when called: 3
 11304 ;; This function calls:
 11305 ;;		_setMotorPWM
 11306 ;; This function is called by:
 11307 ;;		_turnLeft
 11308 ;;		_turnRight
 11309 ;;		_fullSpeedBack
 11310 ;;		_halfSpeedBack
 11311 ;;		_short_reverse
 11312 ;;		_reverse_square
 11313 ;;		_main
 11314 ;;		_short_burst_back
 11315 ;;		_goback
 11316 ;;		_test_function
 11317 ;;		_fullSpeedAhead_test
 11318 ;; This function uses a non-reentrant model
 11319 ;;
 11320                           
 11321                           	psect	text54
 11322  004FEC                     __ptext54:
 11323                           	callstack 0
 11324  004FEC                     _stop:
 11325                           	callstack 26
 11326  004FEC                     
 11327                           ;dc_motor.c: 82: void stop(struct DC_motor *mL, struct DC_motor *mR);dc_motor.c: 83: {;d
      +                          c_motor.c: 84:     while (mL->power >0 || mR->power >0){
 11328  004FEC  EF2F  F028         	goto	l4202
 11329  004FF0                     l4188:
 11330                           
 11331                           ;dc_motor.c: 85:         if (mL->power !=0){mL->power -= 5;}
 11332  004FF0  C01A  FFD9         	movff	stop@mL,fsr2l
 11333  004FF4  C01B  FFDA         	movff	stop@mL+1,fsr2h
 11334  004FF8  50DF               	movf	indf2,w,c
 11335  004FFA  B4D8               	btfsc	status,2,c
 11336  004FFC  EF02  F028         	goto	u3801
 11337  005000  EF04  F028         	goto	u3800
 11338  005004                     u3801:
 11339  005004  EF0A  F028         	goto	l4192
 11340  005008                     u3800:
 11341  005008  C01A  FFD9         	movff	stop@mL,fsr2l
 11342  00500C  C01B  FFDA         	movff	stop@mL+1,fsr2h
 11343  005010  0E05               	movlw	5
 11344  005012  5EDF               	subwf	indf2,f,c
 11345  005014                     l4192:
 11346                           
 11347                           ;dc_motor.c: 86:         if (mR->power !=0){mR->power -= 5;}
 11348  005014  C01C  FFD9         	movff	stop@mR,fsr2l
 11349  005018  C01D  FFDA         	movff	stop@mR+1,fsr2h
 11350  00501C  50DF               	movf	indf2,w,c
 11351  00501E  B4D8               	btfsc	status,2,c
 11352  005020  EF14  F028         	goto	u3811
 11353  005024  EF16  F028         	goto	u3810
 11354  005028                     u3811:
 11355  005028  EF1C  F028         	goto	l4196
 11356  00502C                     u3810:
 11357  00502C  C01C  FFD9         	movff	stop@mR,fsr2l
 11358  005030  C01D  FFDA         	movff	stop@mR+1,fsr2h
 11359  005034  0E05               	movlw	5
 11360  005036  5EDF               	subwf	indf2,f,c
 11361  005038                     l4196:
 11362                           
 11363                           ;dc_motor.c: 87:         setMotorPWM(mL);
 11364  005038  C01A  F00F         	movff	stop@mL,setMotorPWM@m
 11365  00503C  C01B  F010         	movff	stop@mL+1,setMotorPWM@m+1
 11366  005040  EC74  F01C         	call	_setMotorPWM	;wreg free
 11367  005044                     
 11368                           ;dc_motor.c: 88:         setMotorPWM(mR);
 11369  005044  C01C  F00F         	movff	stop@mR,setMotorPWM@m
 11370  005048  C01D  F010         	movff	stop@mR+1,setMotorPWM@m+1
 11371  00504C  EC74  F01C         	call	_setMotorPWM	;wreg free
 11372  005050                     
 11373                           ;dc_motor.c: 89:         _delay((unsigned long)((10)*(64000000/4000.0)));
 11374  005050  0ED0               	movlw	208
 11375  005052  6E1E               	movwf	??_stop^0,c
 11376  005054  0ECA               	movlw	202
 11377  005056                     u6207:
 11378  005056  2EE8               	decfsz	wreg,f,c
 11379  005058  D7FE               	bra	u6207
 11380  00505A  2E1E               	decfsz	??_stop^0,f,c
 11381  00505C  D7FC               	bra	u6207
 11382  00505E                     l4202:
 11383                           
 11384                           ;dc_motor.c: 84:     while (mL->power >0 || mR->power >0){
 11385  00505E  C01A  FFD9         	movff	stop@mL,fsr2l
 11386  005062  C01B  FFDA         	movff	stop@mL+1,fsr2h
 11387  005066  50DF               	movf	indf2,w,c
 11388  005068  A4D8               	btfss	status,2,c
 11389  00506A  EF39  F028         	goto	u3821
 11390  00506E  EF3B  F028         	goto	u3820
 11391  005072                     u3821:
 11392  005072  EFF8  F027         	goto	l4188
 11393  005076                     u3820:
 11394  005076  C01C  FFD9         	movff	stop@mR,fsr2l
 11395  00507A  C01D  FFDA         	movff	stop@mR+1,fsr2h
 11396  00507E  50DF               	movf	indf2,w,c
 11397  005080  A4D8               	btfss	status,2,c
 11398  005082  EF45  F028         	goto	u3831
 11399  005086  EF47  F028         	goto	u3830
 11400  00508A                     u3831:
 11401  00508A  EFF8  F027         	goto	l4188
 11402  00508E                     u3830:
 11403  00508E                     
 11404                           ;dc_motor.c: 91:     _delay((unsigned long)((500)*(64000000/4000.0)));
 11405  00508E  0E29               	movlw	41
 11406  005090  6E1F               	movwf	(??_stop+1)^0,c
 11407  005092  0E96               	movlw	150
 11408  005094  6E1E               	movwf	??_stop^0,c
 11409  005096  0E7F               	movlw	127
 11410  005098                     u6217:
 11411  005098  2EE8               	decfsz	wreg,f,c
 11412  00509A  D7FE               	bra	u6217
 11413  00509C  2E1E               	decfsz	??_stop^0,f,c
 11414  00509E  D7FC               	bra	u6217
 11415  0050A0  2E1F               	decfsz	(??_stop+1)^0,f,c
 11416  0050A2  D7FA               	bra	u6217
 11417  0050A4  F000               	nop	
 11418  0050A6  0012               	return		;funcret
 11419  0050A8                     __end_of_stop:
 11420                           	callstack 0
 11421                           
 11422 ;; *************** function _fullSpeedAhead *****************
 11423 ;; Defined at:
 11424 ;;		line 149 in file "dc_motor.c"
 11425 ;; Parameters:    Size  Location     Type
 11426 ;;  mL              2   25[COMRAM] PTR struct DC_motor
 11427 ;;		 -> main@motorL(10), 
 11428 ;;  mR              2   27[COMRAM] PTR struct DC_motor
 11429 ;;		 -> main@motorR(10), 
 11430 ;; Auto vars:     Size  Location     Type
 11431 ;;		None
 11432 ;; Return value:  Size  Location     Type
 11433 ;;                  1    wreg      void 
 11434 ;; Registers used:
 11435 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11436 ;; Tracked objects:
 11437 ;;		On entry : 0/0
 11438 ;;		On exit  : 0/0
 11439 ;;		Unchanged: 0/0
 11440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11441 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11442 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11443 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11444 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11445 ;;Total ram usage:        5 bytes
 11446 ;; Hardware stack levels used: 1
 11447 ;; Hardware stack levels required when called: 3
 11448 ;; This function calls:
 11449 ;;		_setMotorPWM
 11450 ;; This function is called by:
 11451 ;;		_main
 11452 ;;		_short_burst_back
 11453 ;;		_goback
 11454 ;;		_test_function
 11455 ;;		_fullSpeedAhead_test
 11456 ;; This function uses a non-reentrant model
 11457 ;;
 11458                           
 11459                           	psect	text55
 11460  0050A8                     __ptext55:
 11461                           	callstack 0
 11462  0050A8                     _fullSpeedAhead:
 11463                           	callstack 26
 11464  0050A8                     
 11465                           ;dc_motor.c: 149: void fullSpeedAhead(struct DC_motor *mL, struct DC_motor *mR);dc_motor
      +                          .c: 150: {;dc_motor.c: 151:     mL->direction=1;
 11466  0050A8  EE20 F001          	lfsr	2,1
 11467  0050AC  501A               	movf	fullSpeedAhead@mL^0,w,c
 11468  0050AE  26D9               	addwf	fsr2l,f,c
 11469  0050B0  501B               	movf	(fullSpeedAhead@mL+1)^0,w,c
 11470  0050B2  22DA               	addwfc	fsr2h,f,c
 11471  0050B4  0E01               	movlw	1
 11472  0050B6  6EDF               	movwf	indf2,c
 11473                           
 11474                           ;dc_motor.c: 152:     mR->direction=1;
 11475  0050B8  EE20 F001          	lfsr	2,1
 11476  0050BC  501C               	movf	fullSpeedAhead@mR^0,w,c
 11477  0050BE  26D9               	addwf	fsr2l,f,c
 11478  0050C0  501D               	movf	(fullSpeedAhead@mR+1)^0,w,c
 11479  0050C2  22DA               	addwfc	fsr2h,f,c
 11480  0050C4  0E01               	movlw	1
 11481  0050C6  6EDF               	movwf	indf2,c
 11482                           
 11483                           ;dc_motor.c: 153:     while (mL->power<20 && mR->power<20){
 11484  0050C8  EF85  F028         	goto	l4712
 11485  0050CC                     l4704:
 11486                           
 11487                           ;dc_motor.c: 154:         mL->power += 10;
 11488  0050CC  C01A  FFD9         	movff	fullSpeedAhead@mL,fsr2l
 11489  0050D0  C01B  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
 11490  0050D4  0E0A               	movlw	10
 11491  0050D6  26DF               	addwf	indf2,f,c
 11492                           
 11493                           ;dc_motor.c: 155:         mR->power += 10;
 11494  0050D8  C01C  FFD9         	movff	fullSpeedAhead@mR,fsr2l
 11495  0050DC  C01D  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
 11496  0050E0  0E0A               	movlw	10
 11497  0050E2  26DF               	addwf	indf2,f,c
 11498  0050E4                     
 11499                           ;dc_motor.c: 156:         setMotorPWM(mL);
 11500  0050E4  C01A  F00F         	movff	fullSpeedAhead@mL,setMotorPWM@m
 11501  0050E8  C01B  F010         	movff	fullSpeedAhead@mL+1,setMotorPWM@m+1
 11502  0050EC  EC74  F01C         	call	_setMotorPWM	;wreg free
 11503  0050F0                     
 11504                           ;dc_motor.c: 157:         setMotorPWM(mR);
 11505  0050F0  C01C  F00F         	movff	fullSpeedAhead@mR,setMotorPWM@m
 11506  0050F4  C01D  F010         	movff	fullSpeedAhead@mR+1,setMotorPWM@m+1
 11507  0050F8  EC74  F01C         	call	_setMotorPWM	;wreg free
 11508  0050FC                     
 11509                           ;dc_motor.c: 158:         _delay((unsigned long)((10)*(64000000/4000.0)));
 11510  0050FC  0ED0               	movlw	208
 11511  0050FE  6E1E               	movwf	??_fullSpeedAhead^0,c
 11512  005100  0ECA               	movlw	202
 11513  005102                     u6227:
 11514  005102  2EE8               	decfsz	wreg,f,c
 11515  005104  D7FE               	bra	u6227
 11516  005106  2E1E               	decfsz	??_fullSpeedAhead^0,f,c
 11517  005108  D7FC               	bra	u6227
 11518  00510A                     l4712:
 11519                           
 11520                           ;dc_motor.c: 153:     while (mL->power<20 && mR->power<20){
 11521  00510A  C01A  FFD9         	movff	fullSpeedAhead@mL,fsr2l
 11522  00510E  C01B  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
 11523  005112  0E14               	movlw	20
 11524  005114  60DF               	cpfslt	indf2,c
 11525  005116  EF8F  F028         	goto	u4721
 11526  00511A  EF91  F028         	goto	u4720
 11527  00511E                     u4721:
 11528  00511E  EF9D  F028         	goto	l354
 11529  005122                     u4720:
 11530  005122  C01C  FFD9         	movff	fullSpeedAhead@mR,fsr2l
 11531  005126  C01D  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
 11532  00512A  0E13               	movlw	19
 11533  00512C  64DF               	cpfsgt	indf2,c
 11534  00512E  EF9B  F028         	goto	u4731
 11535  005132  EF9D  F028         	goto	u4730
 11536  005136                     u4731:
 11537  005136  EF66  F028         	goto	l4704
 11538  00513A                     u4730:
 11539  00513A                     l354:
 11540  00513A  0012               	return		;funcret
 11541  00513C                     __end_of_fullSpeedAhead:
 11542                           	callstack 0
 11543                           
 11544 ;; *************** function _setMotorPWM *****************
 11545 ;; Defined at:
 11546 ;;		line 59 in file "dc_motor.c"
 11547 ;; Parameters:    Size  Location     Type
 11548 ;;  m               2   14[COMRAM] PTR struct DC_motor
 11549 ;;		 -> main@motorR(10), main@motorL(10), 
 11550 ;; Auto vars:     Size  Location     Type
 11551 ;;  PWMduty         2   23[COMRAM] int 
 11552 ;; Return value:  Size  Location     Type
 11553 ;;                  1    wreg      void 
 11554 ;; Registers used:
 11555 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11556 ;; Tracked objects:
 11557 ;;		On entry : 0/0
 11558 ;;		On exit  : 0/0
 11559 ;;		Unchanged: 0/0
 11560 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11561 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11562 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11563 ;;      Temps:          7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11564 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11565 ;;Total ram usage:       11 bytes
 11566 ;; Hardware stack levels used: 1
 11567 ;; Hardware stack levels required when called: 2
 11568 ;; This function calls:
 11569 ;;		___awdiv
 11570 ;;		___wmul
 11571 ;; This function is called by:
 11572 ;;		_stop
 11573 ;;		_turnLeft
 11574 ;;		_turnRight
 11575 ;;		_fullSpeedAhead
 11576 ;;		_fullSpeedBack
 11577 ;;		_halfSpeedBack
 11578 ;; This function uses a non-reentrant model
 11579 ;;
 11580                           
 11581                           	psect	text56
 11582  0038E8                     __ptext56:
 11583                           	callstack 0
 11584  0038E8                     _setMotorPWM:
 11585                           	callstack 26
 11586  0038E8                     
 11587                           ;dc_motor.c: 59: void setMotorPWM(struct DC_motor *m);dc_motor.c: 60: {;dc_motor.c: 61: 
      +                           int PWMduty;;dc_motor.c: 63:  if (m->direction){
 11588  0038E8  EE20 F001          	lfsr	2,1
 11589  0038EC  500F               	movf	setMotorPWM@m^0,w,c
 11590  0038EE  26D9               	addwf	fsr2l,f,c
 11591  0038F0  5010               	movf	(setMotorPWM@m+1)^0,w,c
 11592  0038F2  22DA               	addwfc	fsr2h,f,c
 11593  0038F4  50DF               	movf	indf2,w,c
 11594  0038F6  B4D8               	btfsc	status,2,c
 11595  0038F8  EF80  F01C         	goto	u3311
 11596  0038FC  EF82  F01C         	goto	u3310
 11597  003900                     u3311:
 11598  003900  EFB3  F01C         	goto	l3902
 11599  003904                     u3310:
 11600  003904                     
 11601                           ;dc_motor.c: 65:   PWMduty=m->PWMperiod - ((int)(m->power)*(m->PWMperiod))/100;
 11602  003904  C00F  FFD9         	movff	setMotorPWM@m,fsr2l
 11603  003908  C010  FFDA         	movff	setMotorPWM@m+1,fsr2h
 11604  00390C  50DF               	movf	indf2,w,c
 11605  00390E  6E11               	movwf	??_setMotorPWM^0,c
 11606  003910  5011               	movf	??_setMotorPWM^0,w,c
 11607  003912  6E01               	movwf	___wmul@multiplier^0,c
 11608  003914  6A02               	clrf	(___wmul@multiplier+1)^0,c
 11609  003916  EE20 F007          	lfsr	2,7
 11610  00391A  500F               	movf	setMotorPWM@m^0,w,c
 11611  00391C  26D9               	addwf	fsr2l,f,c
 11612  00391E  5010               	movf	(setMotorPWM@m+1)^0,w,c
 11613  003920  22DA               	addwfc	fsr2h,f,c
 11614  003922  CFDE F003          	movff	postinc2,___wmul@multiplicand
 11615  003926  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
 11616  00392A  EC98  F02C         	call	___wmul	;wreg free
 11617  00392E  C001  F007         	movff	?___wmul,___awdiv@dividend
 11618  003932  C002  F008         	movff	?___wmul+1,___awdiv@dividend+1
 11619  003936  0E00               	movlw	0
 11620  003938  6E0A               	movwf	(___awdiv@divisor+1)^0,c
 11621  00393A  0E64               	movlw	100
 11622  00393C  6E09               	movwf	___awdiv@divisor^0,c
 11623  00393E  ECD4  F026         	call	___awdiv	;wreg free
 11624  003942  EE20 F007          	lfsr	2,7
 11625  003946  500F               	movf	setMotorPWM@m^0,w,c
 11626  003948  26D9               	addwf	fsr2l,f,c
 11627  00394A  5010               	movf	(setMotorPWM@m+1)^0,w,c
 11628  00394C  22DA               	addwfc	fsr2h,f,c
 11629  00394E  CFDE F012          	movff	postinc2,??_setMotorPWM+1
 11630  003952  CFDD F013          	movff	postdec2,??_setMotorPWM+2
 11631  003956  5007               	movf	?___awdiv^0,w,c
 11632  003958  5C12               	subwf	(??_setMotorPWM+1)^0,w,c
 11633  00395A  6E18               	movwf	setMotorPWM@PWMduty^0,c
 11634  00395C  5008               	movf	(?___awdiv+1)^0,w,c
 11635  00395E  5813               	subwfb	(??_setMotorPWM+2)^0,w,c
 11636  003960  6E19               	movwf	(setMotorPWM@PWMduty+1)^0,c
 11637                           
 11638                           ;dc_motor.c: 66:  }
 11639  003962  EFD6  F01C         	goto	l3904
 11640  003966                     l3902:
 11641                           
 11642                           ;dc_motor.c: 69:   PWMduty=((int)(m->power)*(m->PWMperiod))/100;
 11643  003966  C00F  FFD9         	movff	setMotorPWM@m,fsr2l
 11644  00396A  C010  FFDA         	movff	setMotorPWM@m+1,fsr2h
 11645  00396E  50DF               	movf	indf2,w,c
 11646  003970  6E11               	movwf	??_setMotorPWM^0,c
 11647  003972  5011               	movf	??_setMotorPWM^0,w,c
 11648  003974  6E01               	movwf	___wmul@multiplier^0,c
 11649  003976  6A02               	clrf	(___wmul@multiplier+1)^0,c
 11650  003978  EE20 F007          	lfsr	2,7
 11651  00397C  500F               	movf	setMotorPWM@m^0,w,c
 11652  00397E  26D9               	addwf	fsr2l,f,c
 11653  003980  5010               	movf	(setMotorPWM@m+1)^0,w,c
 11654  003982  22DA               	addwfc	fsr2h,f,c
 11655  003984  CFDE F003          	movff	postinc2,___wmul@multiplicand
 11656  003988  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
 11657  00398C  EC98  F02C         	call	___wmul	;wreg free
 11658  003990  C001  F007         	movff	?___wmul,___awdiv@dividend
 11659  003994  C002  F008         	movff	?___wmul+1,___awdiv@dividend+1
 11660  003998  0E00               	movlw	0
 11661  00399A  6E0A               	movwf	(___awdiv@divisor+1)^0,c
 11662  00399C  0E64               	movlw	100
 11663  00399E  6E09               	movwf	___awdiv@divisor^0,c
 11664  0039A0  ECD4  F026         	call	___awdiv	;wreg free
 11665  0039A4  C007  F018         	movff	?___awdiv,setMotorPWM@PWMduty
 11666  0039A8  C008  F019         	movff	?___awdiv+1,setMotorPWM@PWMduty+1
 11667  0039AC                     l3904:
 11668                           
 11669                           ;dc_motor.c: 72:  *(m->dutyHighByte) = PWMduty;
 11670  0039AC  EE20 F002          	lfsr	2,2
 11671  0039B0  500F               	movf	setMotorPWM@m^0,w,c
 11672  0039B2  26D9               	addwf	fsr2l,f,c
 11673  0039B4  5010               	movf	(setMotorPWM@m+1)^0,w,c
 11674  0039B6  22DA               	addwfc	fsr2h,f,c
 11675  0039B8  CFDE F011          	movff	postinc2,??_setMotorPWM
 11676  0039BC  CFDD F012          	movff	postdec2,??_setMotorPWM+1
 11677  0039C0  C011  FFD9         	movff	??_setMotorPWM,fsr2l
 11678  0039C4  C012  FFDA         	movff	??_setMotorPWM+1,fsr2h
 11679  0039C8  C018  FFDF         	movff	setMotorPWM@PWMduty,indf2
 11680  0039CC                     
 11681                           ;dc_motor.c: 74:  if (m->direction){
 11682  0039CC  EE20 F001          	lfsr	2,1
 11683  0039D0  500F               	movf	setMotorPWM@m^0,w,c
 11684  0039D2  26D9               	addwf	fsr2l,f,c
 11685  0039D4  5010               	movf	(setMotorPWM@m+1)^0,w,c
 11686  0039D6  22DA               	addwfc	fsr2h,f,c
 11687  0039D8  50DF               	movf	indf2,w,c
 11688  0039DA  B4D8               	btfsc	status,2,c
 11689  0039DC  EFF2  F01C         	goto	u3321
 11690  0039E0  EFF4  F01C         	goto	u3320
 11691  0039E4                     u3321:
 11692  0039E4  EF29  F01D         	goto	l3910
 11693  0039E8                     u3320:
 11694  0039E8                     
 11695                           ;dc_motor.c: 75:   *(m->dir_LAT) = *(m->dir_LAT) | (1<<(m->dir_pin));
 11696  0039E8  EE20 F004          	lfsr	2,4
 11697  0039EC  500F               	movf	setMotorPWM@m^0,w,c
 11698  0039EE  26D9               	addwf	fsr2l,f,c
 11699  0039F0  5010               	movf	(setMotorPWM@m+1)^0,w,c
 11700  0039F2  22DA               	addwfc	fsr2h,f,c
 11701  0039F4  CFDE F011          	movff	postinc2,??_setMotorPWM
 11702  0039F8  CFDD F012          	movff	postdec2,??_setMotorPWM+1
 11703  0039FC  C011  FFD9         	movff	??_setMotorPWM,fsr2l
 11704  003A00  C012  FFDA         	movff	??_setMotorPWM+1,fsr2h
 11705  003A04  EE10 F004          	lfsr	1,4
 11706  003A08  500F               	movf	setMotorPWM@m^0,w,c
 11707  003A0A  26E1               	addwf	fsr1l,f,c
 11708  003A0C  5010               	movf	(setMotorPWM@m+1)^0,w,c
 11709  003A0E  22E2               	addwfc	fsr1h,f,c
 11710  003A10  CFE6 F013          	movff	postinc1,??_setMotorPWM+2
 11711  003A14  CFE5 F014          	movff	postdec1,??_setMotorPWM+3
 11712  003A18  C013  FFE1         	movff	??_setMotorPWM+2,fsr1l
 11713  003A1C  C014  FFE2         	movff	??_setMotorPWM+3,fsr1h
 11714  003A20  50E7               	movf	indf1,w,c
 11715  003A22  6E15               	movwf	(??_setMotorPWM+4)^0,c
 11716  003A24  EE10 F006          	lfsr	1,6
 11717  003A28  500F               	movf	setMotorPWM@m^0,w,c
 11718  003A2A  26E1               	addwf	fsr1l,f,c
 11719  003A2C  5010               	movf	(setMotorPWM@m+1)^0,w,c
 11720  003A2E  22E2               	addwfc	fsr1h,f,c
 11721  003A30  50E7               	movf	indf1,w,c
 11722  003A32  6E16               	movwf	(??_setMotorPWM+5)^0,c
 11723  003A34  0E01               	movlw	1
 11724  003A36  6E17               	movwf	(??_setMotorPWM+6)^0,c
 11725  003A38  2A16               	incf	(??_setMotorPWM+5)^0,f,c
 11726  003A3A  EF21  F01D         	goto	u3334
 11727  003A3E                     u3335:
 11728  003A3E  90D8               	bcf	status,0,c
 11729  003A40  3617               	rlcf	(??_setMotorPWM+6)^0,f,c
 11730  003A42                     u3334:
 11731  003A42  2E16               	decfsz	(??_setMotorPWM+5)^0,f,c
 11732  003A44  EF1F  F01D         	goto	u3335
 11733  003A48  5017               	movf	(??_setMotorPWM+6)^0,w,c
 11734  003A4A  1015               	iorwf	(??_setMotorPWM+4)^0,w,c
 11735  003A4C  6EDF               	movwf	indf2,c
 11736                           
 11737                           ;dc_motor.c: 76:  } else {
 11738  003A4E  EF5D  F01D         	goto	l302
 11739  003A52                     l3910:
 11740                           
 11741                           ;dc_motor.c: 77:   *(m->dir_LAT) = *(m->dir_LAT) & (~(1<<(m->dir_pin)));
 11742  003A52  EE20 F004          	lfsr	2,4
 11743  003A56  500F               	movf	setMotorPWM@m^0,w,c
 11744  003A58  26D9               	addwf	fsr2l,f,c
 11745  003A5A  5010               	movf	(setMotorPWM@m+1)^0,w,c
 11746  003A5C  22DA               	addwfc	fsr2h,f,c
 11747  003A5E  CFDE F011          	movff	postinc2,??_setMotorPWM
 11748  003A62  CFDD F012          	movff	postdec2,??_setMotorPWM+1
 11749  003A66  C011  FFD9         	movff	??_setMotorPWM,fsr2l
 11750  003A6A  C012  FFDA         	movff	??_setMotorPWM+1,fsr2h
 11751  003A6E  EE10 F004          	lfsr	1,4
 11752  003A72  500F               	movf	setMotorPWM@m^0,w,c
 11753  003A74  26E1               	addwf	fsr1l,f,c
 11754  003A76  5010               	movf	(setMotorPWM@m+1)^0,w,c
 11755  003A78  22E2               	addwfc	fsr1h,f,c
 11756  003A7A  CFE6 F013          	movff	postinc1,??_setMotorPWM+2
 11757  003A7E  CFE5 F014          	movff	postdec1,??_setMotorPWM+3
 11758  003A82  C013  FFE1         	movff	??_setMotorPWM+2,fsr1l
 11759  003A86  C014  FFE2         	movff	??_setMotorPWM+3,fsr1h
 11760  003A8A  50E7               	movf	indf1,w,c
 11761  003A8C  6E15               	movwf	(??_setMotorPWM+4)^0,c
 11762  003A8E  EE10 F006          	lfsr	1,6
 11763  003A92  500F               	movf	setMotorPWM@m^0,w,c
 11764  003A94  26E1               	addwf	fsr1l,f,c
 11765  003A96  5010               	movf	(setMotorPWM@m+1)^0,w,c
 11766  003A98  22E2               	addwfc	fsr1h,f,c
 11767  003A9A  50E7               	movf	indf1,w,c
 11768  003A9C  6E16               	movwf	(??_setMotorPWM+5)^0,c
 11769  003A9E  0E01               	movlw	1
 11770  003AA0  6E17               	movwf	(??_setMotorPWM+6)^0,c
 11771  003AA2  2A16               	incf	(??_setMotorPWM+5)^0,f,c
 11772  003AA4  EF56  F01D         	goto	u3344
 11773  003AA8                     u3345:
 11774  003AA8  90D8               	bcf	status,0,c
 11775  003AAA  3617               	rlcf	(??_setMotorPWM+6)^0,f,c
 11776  003AAC                     u3344:
 11777  003AAC  2E16               	decfsz	(??_setMotorPWM+5)^0,f,c
 11778  003AAE  EF54  F01D         	goto	u3345
 11779  003AB2  5017               	movf	(??_setMotorPWM+6)^0,w,c
 11780  003AB4  0AFF               	xorlw	255
 11781  003AB6  1415               	andwf	(??_setMotorPWM+4)^0,w,c
 11782  003AB8  6EDF               	movwf	indf2,c
 11783  003ABA                     l302:
 11784  003ABA  0012               	return		;funcret
 11785  003ABC                     __end_of_setMotorPWM:
 11786                           	callstack 0
 11787                           
 11788 ;; *************** function ___wmul *****************
 11789 ;; Defined at:
 11790 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\Umul16.c"
 11791 ;; Parameters:    Size  Location     Type
 11792 ;;  multiplier      2    0[COMRAM] unsigned int 
 11793 ;;  multiplicand    2    2[COMRAM] unsigned int 
 11794 ;; Auto vars:     Size  Location     Type
 11795 ;;  product         2    4[COMRAM] unsigned int 
 11796 ;; Return value:  Size  Location     Type
 11797 ;;                  2    0[COMRAM] unsigned int 
 11798 ;; Registers used:
 11799 ;;		wreg, status,2, status,0, prodl, prodh
 11800 ;; Tracked objects:
 11801 ;;		On entry : 0/0
 11802 ;;		On exit  : 0/0
 11803 ;;		Unchanged: 0/0
 11804 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11805 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11806 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11807 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11808 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11809 ;;Total ram usage:        6 bytes
 11810 ;; Hardware stack levels used: 1
 11811 ;; Hardware stack levels required when called: 1
 11812 ;; This function calls:
 11813 ;;		Nothing
 11814 ;; This function is called by:
 11815 ;;		_detect_color
 11816 ;;		_setMotorPWM
 11817 ;; This function uses a non-reentrant model
 11818 ;;
 11819                           
 11820                           	psect	text57
 11821  005930                     __ptext57:
 11822                           	callstack 0
 11823  005930                     ___wmul:
 11824                           	callstack 27
 11825  005930  5001               	movf	___wmul@multiplier^0,w,c
 11826  005932  0203               	mulwf	___wmul@multiplicand^0,c
 11827  005934  CFF3 F005          	movff	prodl,___wmul@product
 11828  005938  CFF4 F006          	movff	prodh,___wmul@product+1
 11829  00593C  5001               	movf	___wmul@multiplier^0,w,c
 11830  00593E  0204               	mulwf	(___wmul@multiplicand+1)^0,c
 11831  005940  50F3               	movf	243,w,c
 11832  005942  2606               	addwf	(___wmul@product+1)^0,f,c
 11833  005944  5002               	movf	(___wmul@multiplier+1)^0,w,c
 11834  005946  0203               	mulwf	___wmul@multiplicand^0,c
 11835  005948  50F3               	movf	243,w,c
 11836  00594A  2606               	addwf	(___wmul@product+1)^0,f,c
 11837  00594C  C005  F001         	movff	___wmul@product,?___wmul
 11838  005950  C006  F002         	movff	___wmul@product+1,?___wmul+1
 11839  005954  0012               	return		;funcret
 11840  005956                     __end_of___wmul:
 11841                           	callstack 0
 11842                           
 11843 ;; *************** function ___awdiv *****************
 11844 ;; Defined at:
 11845 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\awdiv.c"
 11846 ;; Parameters:    Size  Location     Type
 11847 ;;  dividend        2    6[COMRAM] int 
 11848 ;;  divisor         2    8[COMRAM] int 
 11849 ;; Auto vars:     Size  Location     Type
 11850 ;;  quotient        2   12[COMRAM] int 
 11851 ;;  sign            1   11[COMRAM] unsigned char 
 11852 ;;  counter         1   10[COMRAM] unsigned char 
 11853 ;; Return value:  Size  Location     Type
 11854 ;;                  2    6[COMRAM] int 
 11855 ;; Registers used:
 11856 ;;		wreg, status,2, status,0
 11857 ;; Tracked objects:
 11858 ;;		On entry : 0/0
 11859 ;;		On exit  : 0/0
 11860 ;;		Unchanged: 0/0
 11861 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11862 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11863 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11864 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11865 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11866 ;;Total ram usage:        8 bytes
 11867 ;; Hardware stack levels used: 1
 11868 ;; Hardware stack levels required when called: 1
 11869 ;; This function calls:
 11870 ;;		Nothing
 11871 ;; This function is called by:
 11872 ;;		_setMotorPWM
 11873 ;; This function uses a non-reentrant model
 11874 ;;
 11875                           
 11876                           	psect	text58
 11877  004DA8                     __ptext58:
 11878                           	callstack 0
 11879  004DA8                     ___awdiv:
 11880                           	callstack 26
 11881  004DA8  0E00               	movlw	0
 11882  004DAA  6E0C               	movwf	___awdiv@sign^0,c
 11883  004DAC  BE0A               	btfsc	(___awdiv@divisor+1)^0,7,c
 11884  004DAE  EFDD  F026         	goto	u3080
 11885  004DB2  EFDB  F026         	goto	u3081
 11886  004DB6                     u3081:
 11887  004DB6  EFE3  F026         	goto	l3796
 11888  004DBA                     u3080:
 11889  004DBA  6C09               	negf	___awdiv@divisor^0,c
 11890  004DBC  1E0A               	comf	(___awdiv@divisor+1)^0,f,c
 11891  004DBE  B0D8               	btfsc	status,0,c
 11892  004DC0  2A0A               	incf	(___awdiv@divisor+1)^0,f,c
 11893  004DC2  0E01               	movlw	1
 11894  004DC4  6E0C               	movwf	___awdiv@sign^0,c
 11895  004DC6                     l3796:
 11896  004DC6  BE08               	btfsc	(___awdiv@dividend+1)^0,7,c
 11897  004DC8  EFEA  F026         	goto	u3090
 11898  004DCC  EFE8  F026         	goto	u3091
 11899  004DD0                     u3091:
 11900  004DD0  EFF0  F026         	goto	l3802
 11901  004DD4                     u3090:
 11902  004DD4  6C07               	negf	___awdiv@dividend^0,c
 11903  004DD6  1E08               	comf	(___awdiv@dividend+1)^0,f,c
 11904  004DD8  B0D8               	btfsc	status,0,c
 11905  004DDA  2A08               	incf	(___awdiv@dividend+1)^0,f,c
 11906  004DDC  0E01               	movlw	1
 11907  004DDE  1A0C               	xorwf	___awdiv@sign^0,f,c
 11908  004DE0                     l3802:
 11909  004DE0  0E00               	movlw	0
 11910  004DE2  6E0E               	movwf	(___awdiv@quotient+1)^0,c
 11911  004DE4  0E00               	movlw	0
 11912  004DE6  6E0D               	movwf	___awdiv@quotient^0,c
 11913  004DE8  5009               	movf	___awdiv@divisor^0,w,c
 11914  004DEA  100A               	iorwf	(___awdiv@divisor+1)^0,w,c
 11915  004DEC  B4D8               	btfsc	status,2,c
 11916  004DEE  EFFB  F026         	goto	u3101
 11917  004DF2  EFFD  F026         	goto	u3100
 11918  004DF6                     u3101:
 11919  004DF6  EF25  F027         	goto	l3824
 11920  004DFA                     u3100:
 11921  004DFA  0E01               	movlw	1
 11922  004DFC  6E0B               	movwf	___awdiv@counter^0,c
 11923  004DFE  EF05  F027         	goto	l3810
 11924  004E02                     l3808:
 11925  004E02  90D8               	bcf	status,0,c
 11926  004E04  3609               	rlcf	___awdiv@divisor^0,f,c
 11927  004E06  360A               	rlcf	(___awdiv@divisor+1)^0,f,c
 11928  004E08  2A0B               	incf	___awdiv@counter^0,f,c
 11929  004E0A                     l3810:
 11930  004E0A  AE0A               	btfss	(___awdiv@divisor+1)^0,7,c
 11931  004E0C  EF0A  F027         	goto	u3111
 11932  004E10  EF0C  F027         	goto	u3110
 11933  004E14                     u3111:
 11934  004E14  EF01  F027         	goto	l3808
 11935  004E18                     u3110:
 11936  004E18                     l3812:
 11937  004E18  90D8               	bcf	status,0,c
 11938  004E1A  360D               	rlcf	___awdiv@quotient^0,f,c
 11939  004E1C  360E               	rlcf	(___awdiv@quotient+1)^0,f,c
 11940  004E1E  5009               	movf	___awdiv@divisor^0,w,c
 11941  004E20  5C07               	subwf	___awdiv@dividend^0,w,c
 11942  004E22  500A               	movf	(___awdiv@divisor+1)^0,w,c
 11943  004E24  5808               	subwfb	(___awdiv@dividend+1)^0,w,c
 11944  004E26  A0D8               	btfss	status,0,c
 11945  004E28  EF18  F027         	goto	u3121
 11946  004E2C  EF1A  F027         	goto	u3120
 11947  004E30                     u3121:
 11948  004E30  EF1F  F027         	goto	l3820
 11949  004E34                     u3120:
 11950  004E34  5009               	movf	___awdiv@divisor^0,w,c
 11951  004E36  5E07               	subwf	___awdiv@dividend^0,f,c
 11952  004E38  500A               	movf	(___awdiv@divisor+1)^0,w,c
 11953  004E3A  5A08               	subwfb	(___awdiv@dividend+1)^0,f,c
 11954  004E3C  800D               	bsf	___awdiv@quotient^0,0,c
 11955  004E3E                     l3820:
 11956  004E3E  90D8               	bcf	status,0,c
 11957  004E40  320A               	rrcf	(___awdiv@divisor+1)^0,f,c
 11958  004E42  3209               	rrcf	___awdiv@divisor^0,f,c
 11959  004E44  2E0B               	decfsz	___awdiv@counter^0,f,c
 11960  004E46  EF0C  F027         	goto	l3812
 11961  004E4A                     l3824:
 11962  004E4A  500C               	movf	___awdiv@sign^0,w,c
 11963  004E4C  B4D8               	btfsc	status,2,c
 11964  004E4E  EF2B  F027         	goto	u3131
 11965  004E52  EF2D  F027         	goto	u3130
 11966  004E56                     u3131:
 11967  004E56  EF31  F027         	goto	l3828
 11968  004E5A                     u3130:
 11969  004E5A  6C0D               	negf	___awdiv@quotient^0,c
 11970  004E5C  1E0E               	comf	(___awdiv@quotient+1)^0,f,c
 11971  004E5E  B0D8               	btfsc	status,0,c
 11972  004E60  2A0E               	incf	(___awdiv@quotient+1)^0,f,c
 11973  004E62                     l3828:
 11974  004E62  C00D  F007         	movff	___awdiv@quotient,?___awdiv
 11975  004E66  C00E  F008         	movff	___awdiv@quotient+1,?___awdiv+1
 11976  004E6A  0012               	return		;funcret
 11977  004E6C                     __end_of___awdiv:
 11978                           	callstack 0
 11979                           
 11980 ;; *************** function _color_predict *****************
 11981 ;; Defined at:
 11982 ;;		line 250 in file "color.c"
 11983 ;; Parameters:    Size  Location     Type
 11984 ;;  color           1    wreg     unsigned char 
 11985 ;; Auto vars:     Size  Location     Type
 11986 ;;  color           1  125[BANK0 ] unsigned char 
 11987 ;;  buf           100   25[BANK0 ] unsigned char [100]
 11988 ;; Return value:  Size  Location     Type
 11989 ;;                  1    wreg      void 
 11990 ;; Registers used:
 11991 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11992 ;; Tracked objects:
 11993 ;;		On entry : 0/0
 11994 ;;		On exit  : 0/0
 11995 ;;		Unchanged: 0/0
 11996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11997 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11998 ;;      Locals:         0     101       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11999 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12000 ;;      Totals:         0     101       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12001 ;;Total ram usage:      101 bytes
 12002 ;; Hardware stack levels used: 1
 12003 ;; Hardware stack levels required when called: 9
 12004 ;; This function calls:
 12005 ;;		_sendStringSerial4
 12006 ;;		_sprintf
 12007 ;; This function is called by:
 12008 ;;		_color_data_collection
 12009 ;;		_main
 12010 ;;		_goback
 12011 ;;		_test_function
 12012 ;; This function uses a non-reentrant model
 12013 ;;
 12014                           
 12015                           	psect	text59
 12016  0058B0                     __ptext59:
 12017                           	callstack 0
 12018  0058B0                     _color_predict:
 12019                           	callstack 20
 12020                           
 12021                           ;incstack = 0
 12022                           ;color_predict@color stored from wreg
 12023  0058B0  0100               	movlb	0	; () banked
 12024  0058B2  6FDD               	movwf	color_predict@color& (0+255),b
 12025  0058B4                     
 12026                           ;color.c: 250: void color_predict(unsigned char color);color.c: 251: {;color.c: 252:    
      +                           char buf[100];;color.c: 253:     sprintf(buf,"\t%d\r\n", color);
 12027  0058B4  0E79               	movlw	low color_predict@buf
 12028  0058B6  0100               	movlb	0	; () banked
 12029  0058B8  6F60               	movwf	sprintf@s& (0+255),b
 12030  0058BA  0E00               	movlw	high color_predict@buf
 12031  0058BC  6F61               	movwf	(sprintf@s+1)& (0+255),b
 12032  0058BE  0E1E               	movlw	low (STR_1+8)
 12033  0058C0  6F62               	movwf	sprintf@fmt& (0+255),b
 12034  0058C2  0E0E               	movlw	high (STR_1+8)
 12035  0058C4  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
 12036  0058C6  C0DD  F064         	movff	color_predict@color,?_sprintf+4
 12037  0058CA  6B65               	clrf	(?_sprintf+5)& (0+255),b
 12038  0058CC  EC05  F02A         	call	_sprintf	;wreg free
 12039  0058D0                     
 12040                           ;color.c: 254:     sendStringSerial4(buf);
 12041  0058D0  0E79               	movlw	low color_predict@buf
 12042  0058D2  6E02               	movwf	sendStringSerial4@string^0,c
 12043  0058D4  0E00               	movlw	high color_predict@buf
 12044  0058D6  6E03               	movwf	(sendStringSerial4@string+1)^0,c
 12045  0058D8  EC40  F02C         	call	_sendStringSerial4	;wreg free
 12046  0058DC  0012               	return		;funcret
 12047  0058DE                     __end_of_color_predict:
 12048                           	callstack 0
 12049                           
 12050 ;; *************** function _sprintf *****************
 12051 ;; Defined at:
 12052 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\nf_sprintf.c"
 12053 ;; Parameters:    Size  Location     Type
 12054 ;;  s               2    0[BANK0 ] PTR unsigned char 
 12055 ;;		 -> goback@buf2(100), goback@buf3(100), goback@buf(100), action@buf(100), 
 12056 ;;		 -> color_predict@buf(100), color_display@buf(100), 
 12057 ;;  fmt             2    2[BANK0 ] PTR const unsigned char 
 12058 ;;		 -> STR_6(17), STR_5(9), STR_4(10), STR_3(13), 
 12059 ;;		 -> STR_2(6), STR_1(14), 
 12060 ;; Auto vars:     Size  Location     Type
 12061 ;;  f              11   14[BANK0 ] struct _IO_FILE
 12062 ;;  ap              2   12[BANK0 ] PTR void [1]
 12063 ;;		 -> ?_sprintf(2), 
 12064 ;;  ret             2    0        int 
 12065 ;; Return value:  Size  Location     Type
 12066 ;;                  2    0[BANK0 ] int 
 12067 ;; Registers used:
 12068 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 12069 ;; Tracked objects:
 12070 ;;		On entry : 0/0
 12071 ;;		On exit  : 0/0
 12072 ;;		Unchanged: 0/0
 12073 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12074 ;;      Params:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12075 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12076 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12077 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12078 ;;Total ram usage:       25 bytes
 12079 ;; Hardware stack levels used: 1
 12080 ;; Hardware stack levels required when called: 8
 12081 ;; This function calls:
 12082 ;;		_vfprintf
 12083 ;; This function is called by:
 12084 ;;		_color_display
 12085 ;;		_color_predict
 12086 ;;		_action
 12087 ;;		_goback
 12088 ;; This function uses a non-reentrant model
 12089 ;;
 12090                           
 12091                           	psect	text60
 12092  00540A                     __ptext60:
 12093                           	callstack 0
 12094  00540A                     _sprintf:
 12095                           	callstack 20
 12096  00540A  0E64               	movlw	low (?_sprintf+4)
 12097  00540C  0100               	movlb	0	; () banked
 12098  00540E  6F6C               	movwf	sprintf@ap& (0+255),b
 12099  005410  0E00               	movlw	high (?_sprintf+4)
 12100  005412  6F6D               	movwf	(sprintf@ap+1)& (0+255),b
 12101  005414  C060  F06E         	movff	sprintf@s,sprintf@f
 12102  005418  C061  F06F         	movff	sprintf@s+1,sprintf@f+1
 12103  00541C                     
 12104                           ; BSR set to: 0
 12105  00541C  0E00               	movlw	0
 12106  00541E  6F72               	movwf	(sprintf@f+4)& (0+255),b
 12107  005420  0E00               	movlw	0
 12108  005422  6F71               	movwf	(sprintf@f+3)& (0+255),b
 12109  005424                     
 12110                           ; BSR set to: 0
 12111  005424  0E00               	movlw	0
 12112  005426  6F78               	movwf	(sprintf@f+10)& (0+255),b
 12113  005428  0E00               	movlw	0
 12114  00542A  6F77               	movwf	(sprintf@f+9)& (0+255),b
 12115  00542C                     
 12116                           ; BSR set to: 0
 12117  00542C  0E6E               	movlw	low sprintf@f
 12118  00542E  6E50               	movwf	vfprintf@fp^0,c
 12119  005430  0E00               	movlw	high sprintf@f
 12120  005432  6E51               	movwf	(vfprintf@fp+1)^0,c
 12121  005434  C062  F052         	movff	sprintf@fmt,vfprintf@fmt
 12122  005438  C063  F053         	movff	sprintf@fmt+1,vfprintf@fmt+1
 12123  00543C  0E6C               	movlw	low sprintf@ap
 12124  00543E  6E54               	movwf	vfprintf@ap^0,c
 12125  005440  0E00               	movlw	high sprintf@ap
 12126  005442  6E55               	movwf	(vfprintf@ap+1)^0,c
 12127  005444  EC4A  F029         	call	_vfprintf	;wreg free
 12128  005448  0100               	movlb	0	; () banked
 12129  00544A  5171               	movf	(sprintf@f+3)& (0+255),w,b
 12130  00544C  2560               	addwf	sprintf@s& (0+255),w,b
 12131  00544E  6ED9               	movwf	fsr2l,c
 12132  005450  5172               	movf	(sprintf@f+4)& (0+255),w,b
 12133  005452  2161               	addwfc	(sprintf@s+1)& (0+255),w,b
 12134  005454  6EDA               	movwf	fsr2h,c
 12135  005456  0E00               	movlw	0
 12136  005458  6EDF               	movwf	indf2,c
 12137  00545A                     
 12138                           ; BSR set to: 0
 12139  00545A  0012               	return		;funcret
 12140  00545C                     __end_of_sprintf:
 12141                           	callstack 0
 12142                           
 12143 ;; *************** function _vfprintf *****************
 12144 ;; Defined at:
 12145 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c"
 12146 ;; Parameters:    Size  Location     Type
 12147 ;;  fp              2   79[COMRAM] PTR struct _IO_FILE
 12148 ;;		 -> sprintf@f(11), 
 12149 ;;  fmt             2   81[COMRAM] PTR const unsigned char 
 12150 ;;		 -> STR_6(17), STR_5(9), STR_4(10), STR_3(13), 
 12151 ;;		 -> STR_2(6), STR_1(14), 
 12152 ;;  ap              2   83[COMRAM] PTR PTR void 
 12153 ;;		 -> sprintf@ap(2), 
 12154 ;; Auto vars:     Size  Location     Type
 12155 ;;  cfmt            2   85[COMRAM] PTR unsigned char 
 12156 ;;		 -> STR_6(17), STR_5(9), STR_4(10), STR_3(13), 
 12157 ;;		 -> STR_2(6), STR_1(14), 
 12158 ;; Return value:  Size  Location     Type
 12159 ;;                  2   79[COMRAM] int 
 12160 ;; Registers used:
 12161 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 12162 ;; Tracked objects:
 12163 ;;		On entry : 0/0
 12164 ;;		On exit  : 0/0
 12165 ;;		Unchanged: 0/0
 12166 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12167 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12168 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12169 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12170 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12171 ;;Total ram usage:        8 bytes
 12172 ;; Hardware stack levels used: 1
 12173 ;; Hardware stack levels required when called: 7
 12174 ;; This function calls:
 12175 ;;		_vfpfcnvrt
 12176 ;; This function is called by:
 12177 ;;		_sprintf
 12178 ;; This function uses a non-reentrant model
 12179 ;;
 12180                           
 12181                           	psect	text61
 12182  005294                     __ptext61:
 12183                           	callstack 0
 12184  005294                     _vfprintf:
 12185                           	callstack 20
 12186  005294                     
 12187                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.35\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
 12188  005294  C052  F056         	movff	vfprintf@fmt,vfprintf@cfmt
 12189  005298  C053  F057         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
 12190  00529C                     
 12191                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
 12192  00529C  0E00               	movlw	0
 12193  00529E  0102               	movlb	2	; () banked
 12194  0052A0  6FE2               	movwf	(_nout+1)& (0+255),b
 12195  0052A2  0E00               	movlw	0
 12196  0052A4  6FE1               	movwf	_nout& (0+255),b
 12197                           
 12198                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
 12199  0052A6  EF68  F029         	goto	l4384
 12200  0052AA                     l4382:
 12201                           
 12202                           ; BSR set to: 2
 12203                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
 12204  0052AA  C050  F040         	movff	vfprintf@fp,vfpfcnvrt@fp
 12205  0052AE  C051  F041         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
 12206  0052B2  0E56               	movlw	low vfprintf@cfmt
 12207  0052B4  6E42               	movwf	vfpfcnvrt@fmt^0,c
 12208  0052B6  0E00               	movlw	high vfprintf@cfmt
 12209  0052B8  6E43               	movwf	(vfpfcnvrt@fmt+1)^0,c
 12210  0052BA  C054  F044         	movff	vfprintf@ap,vfpfcnvrt@ap
 12211  0052BE  C055  F045         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
 12212  0052C2  EC38  F01E         	call	_vfpfcnvrt	;wreg free
 12213  0052C6  5040               	movf	?_vfpfcnvrt^0,w,c
 12214  0052C8  0102               	movlb	2	; () banked
 12215  0052CA  27E1               	addwf	_nout& (0+255),f,b
 12216  0052CC  5041               	movf	(?_vfpfcnvrt+1)^0,w,c
 12217  0052CE  23E2               	addwfc	(_nout+1)& (0+255),f,b
 12218  0052D0                     l4384:
 12219                           
 12220                           ; BSR set to: 2
 12221                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
 12222  0052D0  C056  FFF6         	movff	vfprintf@cfmt,tblptrl
 12223  0052D4  C057  FFF7         	movff	vfprintf@cfmt+1,tblptrh
 12224  0052D8                     	if	0	;tblptru may be non-zero
 12225  0052D8                     	endif
 12226  0052D8                     	if	0	;tblptru may be non-zero
 12227  0052D8                     	endif
 12228  0052D8  0008               	tblrd		*
 12229  0052DA  50F5               	movf	tablat,w,c
 12230  0052DC  0900               	iorlw	0
 12231  0052DE  A4D8               	btfss	status,2,c
 12232  0052E0  EF74  F029         	goto	u4101
 12233  0052E4  EF76  F029         	goto	u4100
 12234  0052E8                     u4101:
 12235  0052E8  EF55  F029         	goto	l4382
 12236  0052EC                     u4100:
 12237  0052EC                     
 12238                           ; BSR set to: 2
 12239                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
 12240  0052EC  C2E1  F050         	movff	_nout,?_vfprintf
 12241  0052F0  C2E2  F051         	movff	_nout+1,?_vfprintf+1
 12242  0052F4                     
 12243                           ; BSR set to: 2
 12244  0052F4  0012               	return		;funcret
 12245  0052F6                     __end_of_vfprintf:
 12246                           	callstack 0
 12247                           
 12248 ;; *************** function _vfpfcnvrt *****************
 12249 ;; Defined at:
 12250 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c"
 12251 ;; Parameters:    Size  Location     Type
 12252 ;;  fp              2   63[COMRAM] PTR struct _IO_FILE
 12253 ;;		 -> sprintf@f(11), 
 12254 ;;  fmt             2   65[COMRAM] PTR PTR unsigned char 
 12255 ;;		 -> vfprintf@cfmt(2), 
 12256 ;;  ap              2   67[COMRAM] PTR PTR void 
 12257 ;;		 -> sprintf@ap(2), 
 12258 ;; Auto vars:     Size  Location     Type
 12259 ;;  ll              8   71[COMRAM] long long 
 12260 ;;  llu             8    0        unsigned long long 
 12261 ;;  f               4    0        unsigned long long 
 12262 ;;  vp              3    0        PTR void 
 12263 ;;  ct              3    0        unsigned char [3]
 12264 ;;  cp              3    0        PTR unsigned char 
 12265 ;;  i               2    0        int 
 12266 ;;  done            2    0        int 
 12267 ;;  c               1    0        unsigned char 
 12268 ;; Return value:  Size  Location     Type
 12269 ;;                  2   63[COMRAM] int 
 12270 ;; Registers used:
 12271 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 12272 ;; Tracked objects:
 12273 ;;		On entry : 0/0
 12274 ;;		On exit  : 0/0
 12275 ;;		Unchanged: 0/0
 12276 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12277 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12278 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12279 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12280 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12281 ;;Total ram usage:       16 bytes
 12282 ;; Hardware stack levels used: 1
 12283 ;; Hardware stack levels required when called: 6
 12284 ;; This function calls:
 12285 ;;		_dtoa
 12286 ;;		_fputc
 12287 ;; This function is called by:
 12288 ;;		_vfprintf
 12289 ;; This function uses a non-reentrant model
 12290 ;;
 12291                           
 12292                           	psect	text62
 12293  003C70                     __ptext62:
 12294                           	callstack 0
 12295  003C70                     _vfpfcnvrt:
 12296                           	callstack 20
 12297  003C70                     
 12298                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.35\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.35\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.35\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          5\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
 12299  003C70  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 12300  003C74  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 12301  003C78  CFDE FFF6          	movff	postinc2,tblptrl
 12302  003C7C  CFDD FFF7          	movff	postdec2,tblptrh
 12303  003C80                     	if	0	;tblptru may be non-zero
 12304  003C80                     	endif
 12305  003C80                     	if	0	;tblptru may be non-zero
 12306  003C80                     	endif
 12307  003C80  0008               	tblrd		*
 12308  003C82  50F5               	movf	tablat,w,c
 12309  003C84  0A25               	xorlw	37
 12310  003C86  A4D8               	btfss	status,2,c
 12311  003C88  EF48  F01E         	goto	u3741
 12312  003C8C  EF4A  F01E         	goto	u3740
 12313  003C90                     u3741:
 12314  003C90  EFF6  F01E         	goto	l4148
 12315  003C94                     u3740:
 12316  003C94                     
 12317                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
 12318  003C94  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 12319  003C98  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 12320  003C9C  2ADE               	incf	postinc2,f,c
 12321  003C9E  0E00               	movlw	0
 12322  003CA0  22DD               	addwfc	postdec2,f,c
 12323  003CA2                     
 12324                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
 12325  003CA2  0E00               	movlw	0
 12326  003CA4  0102               	movlb	2	; () banked
 12327  003CA6  6FE4               	movwf	(_width+1)& (0+255),b
 12328  003CA8  0E00               	movlw	0
 12329  003CAA  6FE3               	movwf	_width& (0+255),b
 12330  003CAC  C2E3  F0F6         	movff	_width,_flags
 12331  003CB0  C2E4  F0F7         	movff	_width+1,_flags+1
 12332  003CB4                     
 12333                           ; BSR set to: 2
 12334                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
 12335  003CB4  69E5               	setf	_prec& (0+255),b
 12336  003CB6  69E6               	setf	(_prec+1)& (0+255),b
 12337  003CB8                     
 12338                           ; BSR set to: 2
 12339                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
 12340  003CB8  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 12341  003CBC  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 12342  003CC0  CFDE FFF6          	movff	postinc2,tblptrl
 12343  003CC4  CFDD FFF7          	movff	postdec2,tblptrh
 12344  003CC8                     	if	0	;tblptru may be non-zero
 12345  003CC8                     	endif
 12346  003CC8                     	if	0	;tblptru may be non-zero
 12347  003CC8                     	endif
 12348  003CC8  0008               	tblrd		*
 12349  003CCA  50F5               	movf	tablat,w,c
 12350  003CCC  0A64               	xorlw	100
 12351  003CCE  B4D8               	btfsc	status,2,c
 12352  003CD0  EF6C  F01E         	goto	u3751
 12353  003CD4  EF6E  F01E         	goto	u3750
 12354  003CD8                     u3751:
 12355  003CD8  EF80  F01E         	goto	l4126
 12356  003CDC                     u3750:
 12357  003CDC                     
 12358                           ; BSR set to: 2
 12359  003CDC  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 12360  003CE0  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 12361  003CE4  CFDE FFF6          	movff	postinc2,tblptrl
 12362  003CE8  CFDD FFF7          	movff	postdec2,tblptrh
 12363  003CEC                     	if	0	;tblptru may be non-zero
 12364  003CEC                     	endif
 12365  003CEC                     	if	0	;tblptru may be non-zero
 12366  003CEC                     	endif
 12367  003CEC  0008               	tblrd		*
 12368  003CEE  50F5               	movf	tablat,w,c
 12369  003CF0  0A69               	xorlw	105
 12370  003CF2  A4D8               	btfss	status,2,c
 12371  003CF4  EF7E  F01E         	goto	u3761
 12372  003CF8  EF80  F01E         	goto	u3760
 12373  003CFC                     u3761:
 12374  003CFC  EFC0  F01E         	goto	l4132
 12375  003D00                     u3760:
 12376  003D00                     l4126:
 12377                           
 12378                           ; BSR set to: 2
 12379                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
 12380  003D00  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 12381  003D04  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 12382  003D08  2ADE               	incf	postinc2,f,c
 12383  003D0A  0E00               	movlw	0
 12384  003D0C  22DD               	addwfc	postdec2,f,c
 12385                           
 12386                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
 12387  003D0E  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
 12388  003D12  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
 12389  003D16  CFDF F046          	movff	indf2,??_vfpfcnvrt
 12390  003D1A  0E02               	movlw	2
 12391  003D1C  26DE               	addwf	postinc2,f,c
 12392  003D1E  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
 12393  003D22  0E00               	movlw	0
 12394  003D24  22DD               	addwfc	postdec2,f,c
 12395  003D26  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
 12396  003D2A  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
 12397  003D2E  CFDE F048          	movff	postinc2,vfpfcnvrt@ll
 12398  003D32  CFDD F049          	movff	postdec2,vfpfcnvrt@ll+1
 12399  003D36  0E00               	movlw	0
 12400  003D38  BE49               	btfsc	(vfpfcnvrt@ll+1)^0,7,c
 12401  003D3A  0EFF               	movlw	-1
 12402  003D3C  6E4A               	movwf	(vfpfcnvrt@ll+2)^0,c
 12403  003D3E  6E4B               	movwf	(vfpfcnvrt@ll+3)^0,c
 12404  003D40  6E4C               	movwf	(vfpfcnvrt@ll+4)^0,c
 12405  003D42  6E4D               	movwf	(vfpfcnvrt@ll+5)^0,c
 12406  003D44  6E4E               	movwf	(vfpfcnvrt@ll+6)^0,c
 12407  003D46  6E4F               	movwf	(vfpfcnvrt@ll+7)^0,c
 12408  003D48                     
 12409                           ; BSR set to: 2
 12410                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
 12411  003D48  C040  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
 12412  003D4C  C041  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
 12413  003D50  C048  F01E         	movff	vfpfcnvrt@ll,dtoa@d
 12414  003D54  C049  F01F         	movff	vfpfcnvrt@ll+1,dtoa@d+1
 12415  003D58  C04A  F020         	movff	vfpfcnvrt@ll+2,dtoa@d+2
 12416  003D5C  C04B  F021         	movff	vfpfcnvrt@ll+3,dtoa@d+3
 12417  003D60  C04C  F022         	movff	vfpfcnvrt@ll+4,dtoa@d+4
 12418  003D64  C04D  F023         	movff	vfpfcnvrt@ll+5,dtoa@d+5
 12419  003D68  C04E  F024         	movff	vfpfcnvrt@ll+6,dtoa@d+6
 12420  003D6C  C04F  F025         	movff	vfpfcnvrt@ll+7,dtoa@d+7
 12421  003D70  ECA4  F018         	call	_dtoa	;wreg free
 12422  003D74  C01C  F040         	movff	?_dtoa,?_vfpfcnvrt
 12423  003D78  C01D  F041         	movff	?_dtoa+1,?_vfpfcnvrt+1
 12424  003D7C  EF11  F01F         	goto	l1542
 12425  003D80                     l4132:
 12426                           
 12427                           ; BSR set to: 2
 12428                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
 12429  003D80  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 12430  003D84  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 12431  003D88  CFDE FFF6          	movff	postinc2,tblptrl
 12432  003D8C  CFDD FFF7          	movff	postdec2,tblptrh
 12433  003D90                     	if	0	;tblptru may be non-zero
 12434  003D90                     	endif
 12435  003D90                     	if	0	;tblptru may be non-zero
 12436  003D90                     	endif
 12437  003D90  0008               	tblrd		*
 12438  003D92  50F5               	movf	tablat,w,c
 12439  003D94  0A25               	xorlw	37
 12440  003D96  A4D8               	btfss	status,2,c
 12441  003D98  EFD0  F01E         	goto	u3771
 12442  003D9C  EFD2  F01E         	goto	u3770
 12443  003DA0                     u3771:
 12444  003DA0  EFE9  F01E         	goto	l4142
 12445  003DA4                     u3770:
 12446  003DA4                     
 12447                           ; BSR set to: 2
 12448                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
 12449  003DA4  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 12450  003DA8  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 12451  003DAC  2ADE               	incf	postinc2,f,c
 12452  003DAE  0E00               	movlw	0
 12453  003DB0  22DD               	addwfc	postdec2,f,c
 12454  003DB2                     
 12455                           ; BSR set to: 2
 12456                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
 12457  003DB2  0E00               	movlw	0
 12458  003DB4  6E02               	movwf	(fputc@c+1)^0,c
 12459  003DB6  0E25               	movlw	37
 12460  003DB8  6E01               	movwf	fputc@c^0,c
 12461  003DBA  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
 12462  003DBE  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
 12463  003DC2  ECA9  F025         	call	_fputc	;wreg free
 12464  003DC6                     l4138:
 12465                           
 12466                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
 12467  003DC6  0E00               	movlw	0
 12468  003DC8  6E41               	movwf	(?_vfpfcnvrt+1)^0,c
 12469  003DCA  0E01               	movlw	1
 12470  003DCC  6E40               	movwf	?_vfpfcnvrt^0,c
 12471  003DCE  EF11  F01F         	goto	l1542
 12472  003DD2                     l4142:
 12473                           
 12474                           ; BSR set to: 2
 12475                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
 12476  003DD2  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 12477  003DD6  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 12478  003DDA  2ADE               	incf	postinc2,f,c
 12479  003DDC  0E00               	movlw	0
 12480  003DDE  22DD               	addwfc	postdec2,f,c
 12481  003DE0                     
 12482                           ; BSR set to: 2
 12483                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
 12484  003DE0  0E00               	movlw	0
 12485  003DE2  6E41               	movwf	(?_vfpfcnvrt+1)^0,c
 12486  003DE4  0E00               	movlw	0
 12487  003DE6  6E40               	movwf	?_vfpfcnvrt^0,c
 12488  003DE8  EF11  F01F         	goto	l1542
 12489  003DEC                     l4148:
 12490                           
 12491                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
 12492  003DEC  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 12493  003DF0  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 12494  003DF4  CFDE FFF6          	movff	postinc2,tblptrl
 12495  003DF8  CFDD FFF7          	movff	postdec2,tblptrh
 12496  003DFC                     	if	0	;tblptru may be non-zero
 12497  003DFC                     	endif
 12498  003DFC                     	if	0	;tblptru may be non-zero
 12499  003DFC                     	endif
 12500  003DFC  0008               	tblrd		*
 12501  003DFE  50F5               	movf	tablat,w,c
 12502  003E00  6E01               	movwf	fputc@c^0,c
 12503  003E02  6A02               	clrf	(fputc@c+1)^0,c
 12504  003E04  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
 12505  003E08  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
 12506  003E0C  ECA9  F025         	call	_fputc	;wreg free
 12507  003E10                     
 12508                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
 12509  003E10  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 12510  003E14  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 12511  003E18  2ADE               	incf	postinc2,f,c
 12512  003E1A  0E00               	movlw	0
 12513  003E1C  22DD               	addwfc	postdec2,f,c
 12514  003E1E  EFE3  F01E         	goto	l4138
 12515  003E22                     l1542:
 12516  003E22  0012               	return		;funcret
 12517  003E24                     __end_of_vfpfcnvrt:
 12518                           	callstack 0
 12519                           
 12520 ;; *************** function _dtoa *****************
 12521 ;; Defined at:
 12522 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c"
 12523 ;; Parameters:    Size  Location     Type
 12524 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
 12525 ;;		 -> sprintf@f(11), 
 12526 ;;  d               8   29[COMRAM] long long 
 12527 ;; Auto vars:     Size  Location     Type
 12528 ;;  n               8   53[COMRAM] long long 
 12529 ;;  i               2   61[COMRAM] int 
 12530 ;;  s               2   51[COMRAM] int 
 12531 ;;  w               2   49[COMRAM] int 
 12532 ;;  p               2   47[COMRAM] int 
 12533 ;; Return value:  Size  Location     Type
 12534 ;;                  2   27[COMRAM] int 
 12535 ;; Registers used:
 12536 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 12537 ;; Tracked objects:
 12538 ;;		On entry : 0/0
 12539 ;;		On exit  : 0/0
 12540 ;;		Unchanged: 0/0
 12541 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12542 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12543 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12544 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12545 ;;      Totals:        36       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12546 ;;Total ram usage:       36 bytes
 12547 ;; Hardware stack levels used: 1
 12548 ;; Hardware stack levels required when called: 5
 12549 ;; This function calls:
 12550 ;;		___aodiv
 12551 ;;		___aomod
 12552 ;;		_abs
 12553 ;;		_pad
 12554 ;; This function is called by:
 12555 ;;		_vfpfcnvrt
 12556 ;; This function uses a non-reentrant model
 12557 ;;
 12558                           
 12559                           	psect	text63
 12560  003148                     __ptext63:
 12561                           	callstack 0
 12562  003148                     _dtoa:
 12563                           	callstack 20
 12564  003148                     
 12565                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
 12566  003148  C01E  F036         	movff	dtoa@d,dtoa@n
 12567  00314C  C01F  F037         	movff	dtoa@d+1,dtoa@n+1
 12568  003150  C020  F038         	movff	dtoa@d+2,dtoa@n+2
 12569  003154  C021  F039         	movff	dtoa@d+3,dtoa@n+3
 12570  003158  C022  F03A         	movff	dtoa@d+4,dtoa@n+4
 12571  00315C  C023  F03B         	movff	dtoa@d+5,dtoa@n+5
 12572  003160  C024  F03C         	movff	dtoa@d+6,dtoa@n+6
 12573  003164  C025  F03D         	movff	dtoa@d+7,dtoa@n+7
 12574  003168                     
 12575                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
 12576  003168  BE3D               	btfsc	(dtoa@n+7)^0,7,c
 12577  00316A  EFB9  F018         	goto	u3141
 12578  00316E  EFBC  F018         	goto	u3140
 12579  003172                     u3141:
 12580  003172  0E01               	movlw	1
 12581  003174  EFBD  F018         	goto	u3150
 12582  003178                     u3140:
 12583  003178  0E00               	movlw	0
 12584  00317A                     u3150:
 12585  00317A  6E34               	movwf	dtoa@s^0,c
 12586  00317C  6A35               	clrf	(dtoa@s+1)^0,c
 12587                           
 12588                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 295:     if (s) {
 12589  00317E  5034               	movf	dtoa@s^0,w,c
 12590  003180  1035               	iorwf	(dtoa@s+1)^0,w,c
 12591  003182  B4D8               	btfsc	status,2,c
 12592  003184  EFC6  F018         	goto	u3161
 12593  003188  EFC8  F018         	goto	u3160
 12594  00318C                     u3161:
 12595  00318C  EFD8  F018         	goto	l3838
 12596  003190                     u3160:
 12597  003190                     
 12598                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
 12599  003190  1E3D               	comf	(dtoa@n+7)^0,f,c
 12600  003192  1E3C               	comf	(dtoa@n+6)^0,f,c
 12601  003194  1E3B               	comf	(dtoa@n+5)^0,f,c
 12602  003196  1E3A               	comf	(dtoa@n+4)^0,f,c
 12603  003198  1E39               	comf	(dtoa@n+3)^0,f,c
 12604  00319A  1E38               	comf	(dtoa@n+2)^0,f,c
 12605  00319C  1E37               	comf	(dtoa@n+1)^0,f,c
 12606  00319E  6C36               	negf	dtoa@n^0,c
 12607  0031A0  0E00               	movlw	0
 12608  0031A2  2237               	addwfc	(dtoa@n+1)^0,f,c
 12609  0031A4  2238               	addwfc	(dtoa@n+2)^0,f,c
 12610  0031A6  2239               	addwfc	(dtoa@n+3)^0,f,c
 12611  0031A8  223A               	addwfc	(dtoa@n+4)^0,f,c
 12612  0031AA  223B               	addwfc	(dtoa@n+5)^0,f,c
 12613  0031AC  223C               	addwfc	(dtoa@n+6)^0,f,c
 12614  0031AE  223D               	addwfc	(dtoa@n+7)^0,f,c
 12615  0031B0                     l3838:
 12616                           
 12617                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
 12618  0031B0  0102               	movlb	2	; () banked
 12619  0031B2  BFE6               	btfsc	(_prec+1)& (0+255),7,b
 12620  0031B4  EFDE  F018         	goto	u3171
 12621  0031B8  EFE0  F018         	goto	u3170
 12622  0031BC                     u3171:
 12623  0031BC  EFE2  F018         	goto	l3842
 12624  0031C0                     u3170:
 12625  0031C0                     
 12626                           ; BSR set to: 2
 12627                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
 12628  0031C0  0100               	movlb	0	; () banked
 12629  0031C2  93F6               	bcf	_flags& (0+255),1,b
 12630  0031C4                     l3842:
 12631                           
 12632                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
 12633  0031C4  0102               	movlb	2	; () banked
 12634  0031C6  BFE6               	btfsc	(_prec+1)& (0+255),7,b
 12635  0031C8  EFF0  F018         	goto	u3180
 12636  0031CC  51E6               	movf	(_prec+1)& (0+255),w,b
 12637  0031CE  E106               	bnz	u3181
 12638  0031D0  05E5               	decf	_prec& (0+255),w,b
 12639  0031D2  B0D8               	btfsc	status,0,c
 12640  0031D4  EFEE  F018         	goto	u3181
 12641  0031D8  EFF0  F018         	goto	u3180
 12642  0031DC                     u3181:
 12643  0031DC  EFF6  F018         	goto	l1515
 12644  0031E0                     u3180:
 12645  0031E0                     
 12646                           ; BSR set to: 2
 12647  0031E0  0E00               	movlw	0
 12648  0031E2  6E31               	movwf	(dtoa@p+1)^0,c
 12649  0031E4  0E01               	movlw	1
 12650  0031E6  6E30               	movwf	dtoa@p^0,c
 12651  0031E8  EFFA  F018         	goto	l1517
 12652  0031EC                     l1515:
 12653                           
 12654                           ; BSR set to: 2
 12655  0031EC  C2E5  F030         	movff	_prec,dtoa@p
 12656  0031F0  C2E6  F031         	movff	_prec+1,dtoa@p+1
 12657  0031F4                     l1517:
 12658                           
 12659                           ; BSR set to: 2
 12660                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
 12661  0031F4  C2E3  F032         	movff	_width,dtoa@w
 12662  0031F8  C2E4  F033         	movff	_width+1,dtoa@w+1
 12663  0031FC                     
 12664                           ; BSR set to: 2
 12665                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
 12666  0031FC  5034               	movf	dtoa@s^0,w,c
 12667  0031FE  1035               	iorwf	(dtoa@s+1)^0,w,c
 12668  003200  A4D8               	btfss	status,2,c
 12669  003202  EF05  F019         	goto	u3191
 12670  003206  EF07  F019         	goto	u3190
 12671  00320A                     u3191:
 12672  00320A  EF0F  F019         	goto	l3850
 12673  00320E                     u3190:
 12674  00320E                     
 12675                           ; BSR set to: 2
 12676  00320E  0100               	movlb	0	; () banked
 12677  003210  A5F6               	btfss	_flags& (0+255),2,b
 12678  003212  EF0D  F019         	goto	u3201
 12679  003216  EF0F  F019         	goto	u3200
 12680  00321A                     u3201:
 12681  00321A  EF12  F019         	goto	l3852
 12682  00321E                     u3200:
 12683  00321E                     l3850:
 12684                           
 12685                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 306:         --w;
 12686  00321E  0632               	decf	dtoa@w^0,f,c
 12687  003220  A0D8               	btfss	status,0,c
 12688  003222  0633               	decf	(dtoa@w+1)^0,f,c
 12689  003224                     l3852:
 12690                           
 12691                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
 12692  003224  0E00               	movlw	0
 12693  003226  6E3F               	movwf	(dtoa@i+1)^0,c
 12694  003228  0E1F               	movlw	31
 12695  00322A  6E3E               	movwf	dtoa@i^0,c
 12696  00322C                     
 12697                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
 12698  00322C  0E00               	movlw	0
 12699  00322E  0103               	movlb	3	; () banked
 12700  003230  6F97               	movwf	(_dbuf+31)& (0+255),b
 12701                           
 12702                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 12703  003232  EF97  F019         	goto	l3866
 12704  003236                     l3856:
 12705                           
 12706                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 313:         --i;
 12707  003236  063E               	decf	dtoa@i^0,f,c
 12708  003238  A0D8               	btfss	status,0,c
 12709  00323A  063F               	decf	(dtoa@i+1)^0,f,c
 12710  00323C                     
 12711                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
 12712  00323C  0E78               	movlw	low _dbuf
 12713  00323E  243E               	addwf	dtoa@i^0,w,c
 12714  003240  6ED9               	movwf	fsr2l,c
 12715  003242  0E03               	movlw	high _dbuf
 12716  003244  203F               	addwfc	(dtoa@i+1)^0,w,c
 12717  003246  6EDA               	movwf	fsr2h,c
 12718  003248  C036  F001         	movff	dtoa@n,___aomod@dividend
 12719  00324C  C037  F002         	movff	dtoa@n+1,___aomod@dividend+1
 12720  003250  C038  F003         	movff	dtoa@n+2,___aomod@dividend+2
 12721  003254  C039  F004         	movff	dtoa@n+3,___aomod@dividend+3
 12722  003258  C03A  F005         	movff	dtoa@n+4,___aomod@dividend+4
 12723  00325C  C03B  F006         	movff	dtoa@n+5,___aomod@dividend+5
 12724  003260  C03C  F007         	movff	dtoa@n+6,___aomod@dividend+6
 12725  003264  C03D  F008         	movff	dtoa@n+7,___aomod@dividend+7
 12726  003268  0E0A               	movlw	10
 12727  00326A  6E09               	movwf	___aomod@divisor^0,c
 12728  00326C  0E00               	movlw	0
 12729  00326E  6E0A               	movwf	(___aomod@divisor+1)^0,c
 12730  003270  0E00               	movlw	0
 12731  003272  6E0B               	movwf	(___aomod@divisor+2)^0,c
 12732  003274  0E00               	movlw	0
 12733  003276  6E0C               	movwf	(___aomod@divisor+3)^0,c
 12734  003278  0E00               	movlw	0
 12735  00327A  6E0D               	movwf	(___aomod@divisor+4)^0,c
 12736  00327C  0E00               	movlw	0
 12737  00327E  6E0E               	movwf	(___aomod@divisor+5)^0,c
 12738  003280  0E00               	movlw	0
 12739  003282  6E0F               	movwf	(___aomod@divisor+6)^0,c
 12740  003284  0E00               	movlw	0
 12741  003286  6E10               	movwf	(___aomod@divisor+7)^0,c
 12742  003288  ECF4  F022         	call	___aomod	;wreg free
 12743  00328C  C001  F026         	movff	?___aomod,??_dtoa
 12744  003290  C002  F027         	movff	?___aomod+1,??_dtoa+1
 12745  003294  C003  F028         	movff	?___aomod+2,??_dtoa+2
 12746  003298  C004  F029         	movff	?___aomod+3,??_dtoa+3
 12747  00329C  C005  F02A         	movff	?___aomod+4,??_dtoa+4
 12748  0032A0  C006  F02B         	movff	?___aomod+5,??_dtoa+5
 12749  0032A4  C007  F02C         	movff	?___aomod+6,??_dtoa+6
 12750  0032A8  C008  F02D         	movff	?___aomod+7,??_dtoa+7
 12751  0032AC  C026  F013         	movff	??_dtoa,abs@a
 12752  0032B0  C028  F014         	movff	??_dtoa+2,abs@a+1
 12753  0032B4  EC95  F02B         	call	_abs	;wreg free
 12754  0032B8  5013               	movf	?_abs^0,w,c
 12755  0032BA  0F30               	addlw	48
 12756  0032BC  6EDF               	movwf	indf2,c
 12757  0032BE                     
 12758                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 315:         --p;
 12759  0032BE  0630               	decf	dtoa@p^0,f,c
 12760  0032C0  A0D8               	btfss	status,0,c
 12761  0032C2  0631               	decf	(dtoa@p+1)^0,f,c
 12762  0032C4                     
 12763                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 316:         --w;
 12764  0032C4  0632               	decf	dtoa@w^0,f,c
 12765  0032C6  A0D8               	btfss	status,0,c
 12766  0032C8  0633               	decf	(dtoa@w+1)^0,f,c
 12767  0032CA                     
 12768                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
 12769  0032CA  C036  F001         	movff	dtoa@n,___aodiv@dividend
 12770  0032CE  C037  F002         	movff	dtoa@n+1,___aodiv@dividend+1
 12771  0032D2  C038  F003         	movff	dtoa@n+2,___aodiv@dividend+2
 12772  0032D6  C039  F004         	movff	dtoa@n+3,___aodiv@dividend+3
 12773  0032DA  C03A  F005         	movff	dtoa@n+4,___aodiv@dividend+4
 12774  0032DE  C03B  F006         	movff	dtoa@n+5,___aodiv@dividend+5
 12775  0032E2  C03C  F007         	movff	dtoa@n+6,___aodiv@dividend+6
 12776  0032E6  C03D  F008         	movff	dtoa@n+7,___aodiv@dividend+7
 12777  0032EA  0E0A               	movlw	10
 12778  0032EC  6E09               	movwf	___aodiv@divisor^0,c
 12779  0032EE  0E00               	movlw	0
 12780  0032F0  6E0A               	movwf	(___aodiv@divisor+1)^0,c
 12781  0032F2  0E00               	movlw	0
 12782  0032F4  6E0B               	movwf	(___aodiv@divisor+2)^0,c
 12783  0032F6  0E00               	movlw	0
 12784  0032F8  6E0C               	movwf	(___aodiv@divisor+3)^0,c
 12785  0032FA  0E00               	movlw	0
 12786  0032FC  6E0D               	movwf	(___aodiv@divisor+4)^0,c
 12787  0032FE  0E00               	movlw	0
 12788  003300  6E0E               	movwf	(___aodiv@divisor+5)^0,c
 12789  003302  0E00               	movlw	0
 12790  003304  6E0F               	movwf	(___aodiv@divisor+6)^0,c
 12791  003306  0E00               	movlw	0
 12792  003308  6E10               	movwf	(___aodiv@divisor+7)^0,c
 12793  00330A  EC30  F022         	call	___aodiv	;wreg free
 12794  00330E  C001  F036         	movff	?___aodiv,dtoa@n
 12795  003312  C002  F037         	movff	?___aodiv+1,dtoa@n+1
 12796  003316  C003  F038         	movff	?___aodiv+2,dtoa@n+2
 12797  00331A  C004  F039         	movff	?___aodiv+3,dtoa@n+3
 12798  00331E  C005  F03A         	movff	?___aodiv+4,dtoa@n+4
 12799  003322  C006  F03B         	movff	?___aodiv+5,dtoa@n+5
 12800  003326  C007  F03C         	movff	?___aodiv+6,dtoa@n+6
 12801  00332A  C008  F03D         	movff	?___aodiv+7,dtoa@n+7
 12802  00332E                     l3866:
 12803                           
 12804                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 12805  00332E  BE3F               	btfsc	(dtoa@i+1)^0,7,c
 12806  003330  EFA2  F019         	goto	u3211
 12807  003334  503F               	movf	(dtoa@i+1)^0,w,c
 12808  003336  E108               	bnz	u3210
 12809  003338  043E               	decf	dtoa@i^0,w,c
 12810  00333A  A0D8               	btfss	status,0,c
 12811  00333C  EFA2  F019         	goto	u3211
 12812  003340  EFA4  F019         	goto	u3210
 12813  003344                     u3211:
 12814  003344  EFD5  F019         	goto	l3876
 12815  003348                     u3210:
 12816  003348  5036               	movf	dtoa@n^0,w,c
 12817  00334A  1037               	iorwf	(dtoa@n+1)^0,w,c
 12818  00334C  1038               	iorwf	(dtoa@n+2)^0,w,c
 12819  00334E  1039               	iorwf	(dtoa@n+3)^0,w,c
 12820  003350  103A               	iorwf	(dtoa@n+4)^0,w,c
 12821  003352  103B               	iorwf	(dtoa@n+5)^0,w,c
 12822  003354  103C               	iorwf	(dtoa@n+6)^0,w,c
 12823  003356  103D               	iorwf	(dtoa@n+7)^0,w,c
 12824  003358  A4D8               	btfss	status,2,c
 12825  00335A  EFB1  F019         	goto	u3221
 12826  00335E  EFB3  F019         	goto	u3220
 12827  003362                     u3221:
 12828  003362  EF1B  F019         	goto	l3856
 12829  003366                     u3220:
 12830  003366  BE31               	btfsc	(dtoa@p+1)^0,7,c
 12831  003368  EFC0  F019         	goto	u3230
 12832  00336C  5031               	movf	(dtoa@p+1)^0,w,c
 12833  00336E  E106               	bnz	u3231
 12834  003370  0430               	decf	dtoa@p^0,w,c
 12835  003372  B0D8               	btfsc	status,0,c
 12836  003374  EFBE  F019         	goto	u3231
 12837  003378  EFC0  F019         	goto	u3230
 12838  00337C                     u3231:
 12839  00337C  EF1B  F019         	goto	l3856
 12840  003380                     u3230:
 12841  003380  BE33               	btfsc	(dtoa@w+1)^0,7,c
 12842  003382  EFCB  F019         	goto	u3241
 12843  003386  5033               	movf	(dtoa@w+1)^0,w,c
 12844  003388  E108               	bnz	u3240
 12845  00338A  0432               	decf	dtoa@w^0,w,c
 12846  00338C  A0D8               	btfss	status,0,c
 12847  00338E  EFCB  F019         	goto	u3241
 12848  003392  EFCD  F019         	goto	u3240
 12849  003396                     u3241:
 12850  003396  EFD5  F019         	goto	l3876
 12851  00339A                     u3240:
 12852  00339A  0100               	movlb	0	; () banked
 12853  00339C  B3F6               	btfsc	_flags& (0+255),1,b
 12854  00339E  EFD3  F019         	goto	u3251
 12855  0033A2  EFD5  F019         	goto	u3250
 12856  0033A6                     u3251:
 12857  0033A6  EF1B  F019         	goto	l3856
 12858  0033AA                     u3250:
 12859  0033AA                     l3876:
 12860                           
 12861                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
 12862  0033AA  5034               	movf	dtoa@s^0,w,c
 12863  0033AC  1035               	iorwf	(dtoa@s+1)^0,w,c
 12864  0033AE  A4D8               	btfss	status,2,c
 12865  0033B0  EFDC  F019         	goto	u3261
 12866  0033B4  EFDE  F019         	goto	u3260
 12867  0033B8                     u3261:
 12868  0033B8  EFE6  F019         	goto	l3880
 12869  0033BC                     u3260:
 12870  0033BC  0100               	movlb	0	; () banked
 12871  0033BE  A5F6               	btfss	_flags& (0+255),2,b
 12872  0033C0  EFE4  F019         	goto	u3271
 12873  0033C4  EFE6  F019         	goto	u3270
 12874  0033C8                     u3271:
 12875  0033C8  EF04  F01A         	goto	l3890
 12876  0033CC                     u3270:
 12877  0033CC                     l3880:
 12878                           
 12879                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 322:         --i;
 12880  0033CC  063E               	decf	dtoa@i^0,f,c
 12881  0033CE  A0D8               	btfss	status,0,c
 12882  0033D0  063F               	decf	(dtoa@i+1)^0,f,c
 12883  0033D2                     
 12884                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
 12885  0033D2  5034               	movf	dtoa@s^0,w,c
 12886  0033D4  1035               	iorwf	(dtoa@s+1)^0,w,c
 12887  0033D6  A4D8               	btfss	status,2,c
 12888  0033D8  EFF0  F019         	goto	u3281
 12889  0033DC  EFF2  F019         	goto	u3280
 12890  0033E0                     u3281:
 12891  0033E0  EFF8  F019         	goto	l3886
 12892  0033E4                     u3280:
 12893  0033E4  0E00               	movlw	0
 12894  0033E6  6E2F               	movwf	(_dtoa$2912+1)^0,c
 12895  0033E8  0E2B               	movlw	43
 12896  0033EA  6E2E               	movwf	_dtoa$2912^0,c
 12897  0033EC  EFFC  F019         	goto	l3888
 12898  0033F0                     l3886:
 12899  0033F0  0E00               	movlw	0
 12900  0033F2  6E2F               	movwf	(_dtoa$2912+1)^0,c
 12901  0033F4  0E2D               	movlw	45
 12902  0033F6  6E2E               	movwf	_dtoa$2912^0,c
 12903  0033F8                     l3888:
 12904  0033F8  0E78               	movlw	low _dbuf
 12905  0033FA  243E               	addwf	dtoa@i^0,w,c
 12906  0033FC  6ED9               	movwf	fsr2l,c
 12907  0033FE  0E03               	movlw	high _dbuf
 12908  003400  203F               	addwfc	(dtoa@i+1)^0,w,c
 12909  003402  6EDA               	movwf	fsr2h,c
 12910  003404  C02E  FFDF         	movff	_dtoa$2912,indf2
 12911  003408                     l3890:
 12912                           
 12913                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
 12914  003408  C01C  F011         	movff	dtoa@fp,pad@fp
 12915  00340C  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
 12916  003410  0E78               	movlw	low _dbuf
 12917  003412  243E               	addwf	dtoa@i^0,w,c
 12918  003414  6E13               	movwf	pad@buf^0,c
 12919  003416  0E03               	movlw	high _dbuf
 12920  003418  203F               	addwfc	(dtoa@i+1)^0,w,c
 12921  00341A  6E14               	movwf	(pad@buf+1)^0,c
 12922  00341C  C032  F015         	movff	dtoa@w,pad@p
 12923  003420  C033  F016         	movff	dtoa@w+1,pad@p+1
 12924  003424  EC71  F026         	call	_pad	;wreg free
 12925  003428  C011  F01C         	movff	?_pad,?_dtoa
 12926  00342C  C012  F01D         	movff	?_pad+1,?_dtoa+1
 12927  003430  0012               	return		;funcret
 12928  003432                     __end_of_dtoa:
 12929                           	callstack 0
 12930                           
 12931 ;; *************** function _pad *****************
 12932 ;; Defined at:
 12933 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c"
 12934 ;; Parameters:    Size  Location     Type
 12935 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
 12936 ;;		 -> sprintf@f(11), 
 12937 ;;  buf             2   18[COMRAM] PTR unsigned char 
 12938 ;;		 -> dbuf(32), 
 12939 ;;  p               2   20[COMRAM] int 
 12940 ;; Auto vars:     Size  Location     Type
 12941 ;;  w               2   25[COMRAM] int 
 12942 ;;  i               2   23[COMRAM] int 
 12943 ;; Return value:  Size  Location     Type
 12944 ;;                  2   16[COMRAM] int 
 12945 ;; Registers used:
 12946 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 12947 ;; Tracked objects:
 12948 ;;		On entry : 0/0
 12949 ;;		On exit  : 0/0
 12950 ;;		Unchanged: 0/0
 12951 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12952 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12953 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12954 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12955 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12956 ;;Total ram usage:       11 bytes
 12957 ;; Hardware stack levels used: 1
 12958 ;; Hardware stack levels required when called: 4
 12959 ;; This function calls:
 12960 ;;		_fputc
 12961 ;;		_fputs
 12962 ;;		_strlen
 12963 ;; This function is called by:
 12964 ;;		_dtoa
 12965 ;; This function uses a non-reentrant model
 12966 ;;
 12967                           
 12968                           	psect	text64
 12969  004CE2                     __ptext64:
 12970                           	callstack 0
 12971  004CE2                     _pad:
 12972                           	callstack 20
 12973  004CE2                     
 12974                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
 12975  004CE2  0100               	movlb	0	; () banked
 12976  004CE4  A1F6               	btfss	_flags& (0+255),0,b
 12977  004CE6  EF77  F026         	goto	u3031
 12978  004CEA  EF79  F026         	goto	u3030
 12979  004CEE                     u3031:
 12980  004CEE  EF83  F026         	goto	l3760
 12981  004CF2                     u3030:
 12982  004CF2                     
 12983                           ; BSR set to: 0
 12984                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
 12985  004CF2  C013  F00A         	movff	pad@buf,fputs@s
 12986  004CF6  C014  F00B         	movff	pad@buf+1,fputs@s+1
 12987  004CFA  C011  F00C         	movff	pad@fp,fputs@fp
 12988  004CFE  C012  F00D         	movff	pad@fp+1,fputs@fp+1
 12989  004D02  ECF1  F02A         	call	_fputs	;wreg free
 12990  004D06                     l3760:
 12991                           
 12992                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
 12993  004D06  BE16               	btfsc	(pad@p+1)^0,7,c
 12994  004D08  EF88  F026         	goto	u3041
 12995  004D0C  EF8A  F026         	goto	u3040
 12996  004D10                     u3041:
 12997  004D10  EF90  F026         	goto	l3764
 12998  004D14                     u3040:
 12999  004D14  C015  F01A         	movff	pad@p,pad@w
 13000  004D18  C016  F01B         	movff	pad@p+1,pad@w+1
 13001  004D1C  EF94  F026         	goto	l1504
 13002  004D20                     l3764:
 13003  004D20  0E00               	movlw	0
 13004  004D22  6E1B               	movwf	(pad@w+1)^0,c
 13005  004D24  0E00               	movlw	0
 13006  004D26  6E1A               	movwf	pad@w^0,c
 13007  004D28                     l1504:
 13008                           
 13009                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 83:     i = 0;
 13010  004D28  0E00               	movlw	0
 13011  004D2A  6E19               	movwf	(pad@i+1)^0,c
 13012  004D2C  0E00               	movlw	0
 13013  004D2E  6E18               	movwf	pad@i^0,c
 13014                           
 13015                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
 13016  004D30  EFA6  F026         	goto	l3770
 13017  004D34                     l3766:
 13018                           
 13019                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
 13020  004D34  0E00               	movlw	0
 13021  004D36  6E02               	movwf	(fputc@c+1)^0,c
 13022  004D38  0E20               	movlw	32
 13023  004D3A  6E01               	movwf	fputc@c^0,c
 13024  004D3C  C011  F003         	movff	pad@fp,fputc@fp
 13025  004D40  C012  F004         	movff	pad@fp+1,fputc@fp+1
 13026  004D44  ECA9  F025         	call	_fputc	;wreg free
 13027  004D48                     
 13028                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 86:         ++i;
 13029  004D48  4A18               	infsnz	pad@i^0,f,c
 13030  004D4A  2A19               	incf	(pad@i+1)^0,f,c
 13031  004D4C                     l3770:
 13032                           
 13033                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
 13034  004D4C  501A               	movf	pad@w^0,w,c
 13035  004D4E  5C18               	subwf	pad@i^0,w,c
 13036  004D50  5019               	movf	(pad@i+1)^0,w,c
 13037  004D52  0A80               	xorlw	128
 13038  004D54  6E17               	movwf	??_pad^0,c
 13039  004D56  501B               	movf	(pad@w+1)^0,w,c
 13040  004D58  0A80               	xorlw	128
 13041  004D5A  5817               	subwfb	??_pad^0,w,c
 13042  004D5C  A0D8               	btfss	status,0,c
 13043  004D5E  EFB3  F026         	goto	u3051
 13044  004D62  EFB5  F026         	goto	u3050
 13045  004D66                     u3051:
 13046  004D66  EF9A  F026         	goto	l3766
 13047  004D6A                     u3050:
 13048  004D6A                     
 13049                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
 13050  004D6A  0100               	movlb	0	; () banked
 13051  004D6C  B1F6               	btfsc	_flags& (0+255),0,b
 13052  004D6E  EFBB  F026         	goto	u3061
 13053  004D72  EFBD  F026         	goto	u3060
 13054  004D76                     u3061:
 13055  004D76  EFC7  F026         	goto	l3774
 13056  004D7A                     u3060:
 13057  004D7A                     
 13058                           ; BSR set to: 0
 13059                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
 13060  004D7A  C013  F00A         	movff	pad@buf,fputs@s
 13061  004D7E  C014  F00B         	movff	pad@buf+1,fputs@s+1
 13062  004D82  C011  F00C         	movff	pad@fp,fputs@fp
 13063  004D86  C012  F00D         	movff	pad@fp+1,fputs@fp+1
 13064  004D8A  ECF1  F02A         	call	_fputs	;wreg free
 13065  004D8E                     l3774:
 13066                           
 13067                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
 13068  004D8E  C013  F001         	movff	pad@buf,strlen@s
 13069  004D92  C014  F002         	movff	pad@buf+1,strlen@s+1
 13070  004D96  EC0B  F02C         	call	_strlen	;wreg free
 13071  004D9A  501A               	movf	pad@w^0,w,c
 13072  004D9C  2401               	addwf	?_strlen^0,w,c
 13073  004D9E  6E11               	movwf	?_pad^0,c
 13074  004DA0  501B               	movf	(pad@w+1)^0,w,c
 13075  004DA2  2002               	addwfc	(?_strlen+1)^0,w,c
 13076  004DA4  6E12               	movwf	(?_pad+1)^0,c
 13077  004DA6  0012               	return		;funcret
 13078  004DA8                     __end_of_pad:
 13079                           	callstack 0
 13080                           
 13081 ;; *************** function _strlen *****************
 13082 ;; Defined at:
 13083 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\strlen.c"
 13084 ;; Parameters:    Size  Location     Type
 13085 ;;  s               2    0[COMRAM] PTR const unsigned char 
 13086 ;;		 -> dbuf(32), 
 13087 ;; Auto vars:     Size  Location     Type
 13088 ;;  a               2    2[COMRAM] PTR const unsigned char 
 13089 ;;		 -> dbuf(32), 
 13090 ;; Return value:  Size  Location     Type
 13091 ;;                  2    0[COMRAM] unsigned int 
 13092 ;; Registers used:
 13093 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13094 ;; Tracked objects:
 13095 ;;		On entry : 0/0
 13096 ;;		On exit  : 0/0
 13097 ;;		Unchanged: 0/0
 13098 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13099 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13100 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13101 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13102 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13103 ;;Total ram usage:        4 bytes
 13104 ;; Hardware stack levels used: 1
 13105 ;; Hardware stack levels required when called: 1
 13106 ;; This function calls:
 13107 ;;		Nothing
 13108 ;; This function is called by:
 13109 ;;		_pad
 13110 ;; This function uses a non-reentrant model
 13111 ;;
 13112                           
 13113                           	psect	text65
 13114  005816                     __ptext65:
 13115                           	callstack 0
 13116  005816                     _strlen:
 13117                           	callstack 22
 13118  005816  C001  F003         	movff	strlen@s,strlen@a
 13119  00581A  C002  F004         	movff	strlen@s+1,strlen@a+1
 13120  00581E  EF13  F02C         	goto	l3670
 13121  005822                     l3668:
 13122  005822  4A01               	infsnz	strlen@s^0,f,c
 13123  005824  2A02               	incf	(strlen@s+1)^0,f,c
 13124  005826                     l3670:
 13125  005826  C001  FFD9         	movff	strlen@s,fsr2l
 13126  00582A  C002  FFDA         	movff	strlen@s+1,fsr2h
 13127  00582E  50DF               	movf	indf2,w,c
 13128  005830  A4D8               	btfss	status,2,c
 13129  005832  EF1D  F02C         	goto	u2891
 13130  005836  EF1F  F02C         	goto	u2890
 13131  00583A                     u2891:
 13132  00583A  EF11  F02C         	goto	l3668
 13133  00583E                     u2890:
 13134  00583E  5003               	movf	strlen@a^0,w,c
 13135  005840  5C01               	subwf	strlen@s^0,w,c
 13136  005842  6E01               	movwf	?_strlen^0,c
 13137  005844  5004               	movf	(strlen@a+1)^0,w,c
 13138  005846  5802               	subwfb	(strlen@s+1)^0,w,c
 13139  005848  6E02               	movwf	(?_strlen+1)^0,c
 13140  00584A  0012               	return		;funcret
 13141  00584C                     __end_of_strlen:
 13142                           	callstack 0
 13143                           
 13144 ;; *************** function _fputs *****************
 13145 ;; Defined at:
 13146 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\nf_fputs.c"
 13147 ;; Parameters:    Size  Location     Type
 13148 ;;  s               2    9[COMRAM] PTR const unsigned char 
 13149 ;;		 -> dbuf(32), 
 13150 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
 13151 ;;		 -> sprintf@f(11), 
 13152 ;; Auto vars:     Size  Location     Type
 13153 ;;  i               2   14[COMRAM] int 
 13154 ;;  c               1   13[COMRAM] unsigned char 
 13155 ;; Return value:  Size  Location     Type
 13156 ;;                  2    9[COMRAM] int 
 13157 ;; Registers used:
 13158 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 13159 ;; Tracked objects:
 13160 ;;		On entry : 0/0
 13161 ;;		On exit  : 0/0
 13162 ;;		Unchanged: 0/0
 13163 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13164 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13165 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13166 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13167 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13168 ;;Total ram usage:        7 bytes
 13169 ;; Hardware stack levels used: 1
 13170 ;; Hardware stack levels required when called: 3
 13171 ;; This function calls:
 13172 ;;		_fputc
 13173 ;; This function is called by:
 13174 ;;		_pad
 13175 ;; This function uses a non-reentrant model
 13176 ;;
 13177                           
 13178                           	psect	text66
 13179  0055E2                     __ptext66:
 13180                           	callstack 0
 13181  0055E2                     _fputs:
 13182                           	callstack 20
 13183  0055E2  0E00               	movlw	0
 13184  0055E4  6E10               	movwf	(fputs@i+1)^0,c
 13185  0055E6  0E00               	movlw	0
 13186  0055E8  6E0F               	movwf	fputs@i^0,c
 13187  0055EA  EF02  F02B         	goto	l3664
 13188  0055EE                     l3660:
 13189  0055EE  C00E  F001         	movff	fputs@c,fputc@c
 13190  0055F2  6A02               	clrf	(fputc@c+1)^0,c
 13191  0055F4  C00C  F003         	movff	fputs@fp,fputc@fp
 13192  0055F8  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
 13193  0055FC  ECA9  F025         	call	_fputc	;wreg free
 13194  005600  4A0F               	infsnz	fputs@i^0,f,c
 13195  005602  2A10               	incf	(fputs@i+1)^0,f,c
 13196  005604                     l3664:
 13197  005604  500F               	movf	fputs@i^0,w,c
 13198  005606  240A               	addwf	fputs@s^0,w,c
 13199  005608  6ED9               	movwf	fsr2l,c
 13200  00560A  5010               	movf	(fputs@i+1)^0,w,c
 13201  00560C  200B               	addwfc	(fputs@s+1)^0,w,c
 13202  00560E  6EDA               	movwf	fsr2h,c
 13203  005610  50DF               	movf	indf2,w,c
 13204  005612  6E0E               	movwf	fputs@c^0,c
 13205  005614  500E               	movf	fputs@c^0,w,c
 13206  005616  A4D8               	btfss	status,2,c
 13207  005618  EF10  F02B         	goto	u2881
 13208  00561C  EF12  F02B         	goto	u2880
 13209  005620                     u2881:
 13210  005620  EFF7  F02A         	goto	l3660
 13211  005624                     u2880:
 13212  005624  0012               	return		;funcret
 13213  005626                     __end_of_fputs:
 13214                           	callstack 0
 13215                           
 13216 ;; *************** function _fputc *****************
 13217 ;; Defined at:
 13218 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\nf_fputc.c"
 13219 ;; Parameters:    Size  Location     Type
 13220 ;;  c               2    0[COMRAM] int 
 13221 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
 13222 ;;		 -> sprintf@f(11), 
 13223 ;; Auto vars:     Size  Location     Type
 13224 ;;		None
 13225 ;; Return value:  Size  Location     Type
 13226 ;;                  2    0[COMRAM] int 
 13227 ;; Registers used:
 13228 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 13229 ;; Tracked objects:
 13230 ;;		On entry : 0/0
 13231 ;;		On exit  : 0/0
 13232 ;;		Unchanged: 0/0
 13233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13234 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13235 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13236 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13237 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13238 ;;Total ram usage:        9 bytes
 13239 ;; Hardware stack levels used: 1
 13240 ;; Hardware stack levels required when called: 2
 13241 ;; This function calls:
 13242 ;;		_putch
 13243 ;; This function is called by:
 13244 ;;		_pad
 13245 ;;		_vfpfcnvrt
 13246 ;;		_fputs
 13247 ;; This function uses a non-reentrant model
 13248 ;;
 13249                           
 13250                           	psect	text67
 13251  004B52                     __ptext67:
 13252                           	callstack 0
 13253  004B52                     _fputc:
 13254                           	callstack 23
 13255  004B52  5003               	movf	fputc@fp^0,w,c
 13256  004B54  1004               	iorwf	(fputc@fp+1)^0,w,c
 13257  004B56  B4D8               	btfsc	status,2,c
 13258  004B58  EFB0  F025         	goto	u2841
 13259  004B5C  EFB2  F025         	goto	u2840
 13260  004B60                     u2841:
 13261  004B60  EFBB  F025         	goto	l3648
 13262  004B64                     u2840:
 13263  004B64  5003               	movf	fputc@fp^0,w,c
 13264  004B66  1004               	iorwf	(fputc@fp+1)^0,w,c
 13265  004B68  A4D8               	btfss	status,2,c
 13266  004B6A  EFB9  F025         	goto	u2851
 13267  004B6E  EFBB  F025         	goto	u2850
 13268  004B72                     u2851:
 13269  004B72  EFC0  F025         	goto	l3650
 13270  004B76                     u2850:
 13271  004B76                     l3648:
 13272  004B76  5001               	movf	fputc@c^0,w,c
 13273  004B78  EC6C  F02D         	call	_putch
 13274  004B7C  EF0D  F026         	goto	l1568
 13275  004B80                     l3650:
 13276  004B80  EE20 F009          	lfsr	2,9
 13277  004B84  5003               	movf	fputc@fp^0,w,c
 13278  004B86  26D9               	addwf	fsr2l,f,c
 13279  004B88  5004               	movf	(fputc@fp+1)^0,w,c
 13280  004B8A  22DA               	addwfc	fsr2h,f,c
 13281  004B8C  50DE               	movf	postinc2,w,c
 13282  004B8E  10DE               	iorwf	postinc2,w,c
 13283  004B90  B4D8               	btfsc	status,2,c
 13284  004B92  EFCD  F025         	goto	u2861
 13285  004B96  EFCF  F025         	goto	u2860
 13286  004B9A                     u2861:
 13287  004B9A  EFEA  F025         	goto	l3654
 13288  004B9E                     u2860:
 13289  004B9E  EE20 F009          	lfsr	2,9
 13290  004BA2  5003               	movf	fputc@fp^0,w,c
 13291  004BA4  26D9               	addwf	fsr2l,f,c
 13292  004BA6  5004               	movf	(fputc@fp+1)^0,w,c
 13293  004BA8  22DA               	addwfc	fsr2h,f,c
 13294  004BAA  EE10 F003          	lfsr	1,3
 13295  004BAE  5003               	movf	fputc@fp^0,w,c
 13296  004BB0  26E1               	addwf	fsr1l,f,c
 13297  004BB2  5004               	movf	(fputc@fp+1)^0,w,c
 13298  004BB4  22E2               	addwfc	fsr1h,f,c
 13299  004BB6  50DE               	movf	postinc2,w,c
 13300  004BB8  5CE6               	subwf	postinc1,w,c
 13301  004BBA  50E6               	movf	postinc1,w,c
 13302  004BBC  0A80               	xorlw	128
 13303  004BBE  6E09               	movwf	(??_fputc+4)^0,c
 13304  004BC0  50DE               	movf	postinc2,w,c
 13305  004BC2  0A80               	xorlw	128
 13306  004BC4  5809               	subwfb	(??_fputc+4)^0,w,c
 13307  004BC6  B0D8               	btfsc	status,0,c
 13308  004BC8  EFE8  F025         	goto	u2871
 13309  004BCC  EFEA  F025         	goto	u2870
 13310  004BD0                     u2871:
 13311  004BD0  EF0D  F026         	goto	l1568
 13312  004BD4                     u2870:
 13313  004BD4                     l3654:
 13314  004BD4  EE20 F003          	lfsr	2,3
 13315  004BD8  5003               	movf	fputc@fp^0,w,c
 13316  004BDA  26D9               	addwf	fsr2l,f,c
 13317  004BDC  5004               	movf	(fputc@fp+1)^0,w,c
 13318  004BDE  22DA               	addwfc	fsr2h,f,c
 13319  004BE0  CFDE F005          	movff	postinc2,??_fputc
 13320  004BE4  CFDD F006          	movff	postdec2,??_fputc+1
 13321  004BE8  C003  FFD9         	movff	fputc@fp,fsr2l
 13322  004BEC  C004  FFDA         	movff	fputc@fp+1,fsr2h
 13323  004BF0  CFDE F007          	movff	postinc2,??_fputc+2
 13324  004BF4  CFDD F008          	movff	postdec2,??_fputc+3
 13325  004BF8  5005               	movf	??_fputc^0,w,c
 13326  004BFA  2407               	addwf	(??_fputc+2)^0,w,c
 13327  004BFC  6ED9               	movwf	fsr2l,c
 13328  004BFE  5006               	movf	(??_fputc+1)^0,w,c
 13329  004C00  2008               	addwfc	(??_fputc+3)^0,w,c
 13330  004C02  6EDA               	movwf	fsr2h,c
 13331  004C04  C001  FFDF         	movff	fputc@c,indf2
 13332  004C08  EE20 F003          	lfsr	2,3
 13333  004C0C  5003               	movf	fputc@fp^0,w,c
 13334  004C0E  26D9               	addwf	fsr2l,f,c
 13335  004C10  5004               	movf	(fputc@fp+1)^0,w,c
 13336  004C12  22DA               	addwfc	fsr2h,f,c
 13337  004C14  2ADE               	incf	postinc2,f,c
 13338  004C16  0E00               	movlw	0
 13339  004C18  22DD               	addwfc	postdec2,f,c
 13340  004C1A                     l1568:
 13341  004C1A  0012               	return		;funcret
 13342  004C1C                     __end_of_fputc:
 13343                           	callstack 0
 13344                           
 13345 ;; *************** function _putch *****************
 13346 ;; Defined at:
 13347 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\putch.c"
 13348 ;; Parameters:    Size  Location     Type
 13349 ;;  c               1    wreg     unsigned char 
 13350 ;; Auto vars:     Size  Location     Type
 13351 ;;  c               1    0[COMRAM] unsigned char 
 13352 ;; Return value:  Size  Location     Type
 13353 ;;                  1    wreg      void 
 13354 ;; Registers used:
 13355 ;;		wreg
 13356 ;; Tracked objects:
 13357 ;;		On entry : 0/0
 13358 ;;		On exit  : 0/0
 13359 ;;		Unchanged: 0/0
 13360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13361 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13362 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13363 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13364 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13365 ;;Total ram usage:        0 bytes
 13366 ;; Hardware stack levels used: 1
 13367 ;; Hardware stack levels required when called: 1
 13368 ;; This function calls:
 13369 ;;		Nothing
 13370 ;; This function is called by:
 13371 ;;		_fputc
 13372 ;; This function uses a non-reentrant model
 13373 ;;
 13374                           
 13375                           	psect	text68
 13376  005AD8                     __ptext68:
 13377                           	callstack 0
 13378  005AD8                     _putch:
 13379                           	callstack 23
 13380  005AD8  0012               	return		;funcret
 13381  005ADA                     __end_of_putch:
 13382                           	callstack 0
 13383                           
 13384 ;; *************** function _abs *****************
 13385 ;; Defined at:
 13386 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\abs.c"
 13387 ;; Parameters:    Size  Location     Type
 13388 ;;  a               2   18[COMRAM] int 
 13389 ;; Auto vars:     Size  Location     Type
 13390 ;;		None
 13391 ;; Return value:  Size  Location     Type
 13392 ;;                  2   18[COMRAM] int 
 13393 ;; Registers used:
 13394 ;;		wreg, status,2, status,0
 13395 ;; Tracked objects:
 13396 ;;		On entry : 0/0
 13397 ;;		On exit  : 0/0
 13398 ;;		Unchanged: 0/0
 13399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13400 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13401 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13402 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13403 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13404 ;;Total ram usage:        4 bytes
 13405 ;; Hardware stack levels used: 1
 13406 ;; Hardware stack levels required when called: 1
 13407 ;; This function calls:
 13408 ;;		Nothing
 13409 ;; This function is called by:
 13410 ;;		_dtoa
 13411 ;; This function uses a non-reentrant model
 13412 ;;
 13413                           
 13414                           	psect	text69
 13415  00572A                     __ptext69:
 13416                           	callstack 0
 13417  00572A                     _abs:
 13418                           	callstack 23
 13419  00572A  BE14               	btfsc	(abs@a+1)^0,7,c
 13420  00572C  EFA2  F02B         	goto	u3070
 13421  005730  5014               	movf	(abs@a+1)^0,w,c
 13422  005732  E106               	bnz	u3071
 13423  005734  0413               	decf	abs@a^0,w,c
 13424  005736  B0D8               	btfsc	status,0,c
 13425  005738  EFA0  F02B         	goto	u3071
 13426  00573C  EFA2  F02B         	goto	u3070
 13427  005740                     u3071:
 13428  005740  EFB0  F02B         	goto	l1553
 13429  005744                     u3070:
 13430  005744  C013  F015         	movff	abs@a,??_abs
 13431  005748  C014  F016         	movff	abs@a+1,??_abs+1
 13432  00574C  1E15               	comf	??_abs^0,f,c
 13433  00574E  1E16               	comf	(??_abs+1)^0,f,c
 13434  005750  4A15               	infsnz	??_abs^0,f,c
 13435  005752  2A16               	incf	(??_abs+1)^0,f,c
 13436  005754  C015  F013         	movff	??_abs,?_abs
 13437  005758  C016  F014         	movff	??_abs+1,?_abs+1
 13438  00575C  EFB4  F02B         	goto	l1556
 13439  005760                     l1553:
 13440  005760  C013  F013         	movff	abs@a,?_abs
 13441  005764  C014  F014         	movff	abs@a+1,?_abs+1
 13442  005768                     l1556:
 13443  005768  0012               	return		;funcret
 13444  00576A                     __end_of_abs:
 13445                           	callstack 0
 13446                           
 13447 ;; *************** function ___aomod *****************
 13448 ;; Defined at:
 13449 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\aomod.c"
 13450 ;; Parameters:    Size  Location     Type
 13451 ;;  dividend        8    0[COMRAM] long long 
 13452 ;;  divisor         8    8[COMRAM] long long 
 13453 ;; Auto vars:     Size  Location     Type
 13454 ;;  sign            1   17[COMRAM] unsigned char 
 13455 ;;  counter         1   16[COMRAM] unsigned char 
 13456 ;; Return value:  Size  Location     Type
 13457 ;;                  8    0[COMRAM] long long 
 13458 ;; Registers used:
 13459 ;;		wreg, status,2, status,0
 13460 ;; Tracked objects:
 13461 ;;		On entry : 0/0
 13462 ;;		On exit  : 0/0
 13463 ;;		Unchanged: 0/0
 13464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13465 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13466 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13467 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13468 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13469 ;;Total ram usage:       18 bytes
 13470 ;; Hardware stack levels used: 1
 13471 ;; Hardware stack levels required when called: 1
 13472 ;; This function calls:
 13473 ;;		Nothing
 13474 ;; This function is called by:
 13475 ;;		_dtoa
 13476 ;; This function uses a non-reentrant model
 13477 ;;
 13478                           
 13479                           	psect	text70
 13480  0045E8                     __ptext70:
 13481                           	callstack 0
 13482  0045E8                     ___aomod:
 13483                           	callstack 23
 13484  0045E8  0E00               	movlw	0
 13485  0045EA  6E12               	movwf	___aomod@sign^0,c
 13486  0045EC  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
 13487  0045EE  EFFD  F022         	goto	u2970
 13488  0045F2  EFFB  F022         	goto	u2971
 13489  0045F6                     u2971:
 13490  0045F6  EF0F  F023         	goto	l3728
 13491  0045FA                     u2970:
 13492  0045FA  1E08               	comf	(___aomod@dividend+7)^0,f,c
 13493  0045FC  1E07               	comf	(___aomod@dividend+6)^0,f,c
 13494  0045FE  1E06               	comf	(___aomod@dividend+5)^0,f,c
 13495  004600  1E05               	comf	(___aomod@dividend+4)^0,f,c
 13496  004602  1E04               	comf	(___aomod@dividend+3)^0,f,c
 13497  004604  1E03               	comf	(___aomod@dividend+2)^0,f,c
 13498  004606  1E02               	comf	(___aomod@dividend+1)^0,f,c
 13499  004608  6C01               	negf	___aomod@dividend^0,c
 13500  00460A  0E00               	movlw	0
 13501  00460C  2202               	addwfc	(___aomod@dividend+1)^0,f,c
 13502  00460E  2203               	addwfc	(___aomod@dividend+2)^0,f,c
 13503  004610  2204               	addwfc	(___aomod@dividend+3)^0,f,c
 13504  004612  2205               	addwfc	(___aomod@dividend+4)^0,f,c
 13505  004614  2206               	addwfc	(___aomod@dividend+5)^0,f,c
 13506  004616  2207               	addwfc	(___aomod@dividend+6)^0,f,c
 13507  004618  2208               	addwfc	(___aomod@dividend+7)^0,f,c
 13508  00461A  0E01               	movlw	1
 13509  00461C  6E12               	movwf	___aomod@sign^0,c
 13510  00461E                     l3728:
 13511  00461E  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
 13512  004620  EF16  F023         	goto	u2980
 13513  004624  EF14  F023         	goto	u2981
 13514  004628                     u2981:
 13515  004628  EF26  F023         	goto	l3732
 13516  00462C                     u2980:
 13517  00462C  1E10               	comf	(___aomod@divisor+7)^0,f,c
 13518  00462E  1E0F               	comf	(___aomod@divisor+6)^0,f,c
 13519  004630  1E0E               	comf	(___aomod@divisor+5)^0,f,c
 13520  004632  1E0D               	comf	(___aomod@divisor+4)^0,f,c
 13521  004634  1E0C               	comf	(___aomod@divisor+3)^0,f,c
 13522  004636  1E0B               	comf	(___aomod@divisor+2)^0,f,c
 13523  004638  1E0A               	comf	(___aomod@divisor+1)^0,f,c
 13524  00463A  6C09               	negf	___aomod@divisor^0,c
 13525  00463C  0E00               	movlw	0
 13526  00463E  220A               	addwfc	(___aomod@divisor+1)^0,f,c
 13527  004640  220B               	addwfc	(___aomod@divisor+2)^0,f,c
 13528  004642  220C               	addwfc	(___aomod@divisor+3)^0,f,c
 13529  004644  220D               	addwfc	(___aomod@divisor+4)^0,f,c
 13530  004646  220E               	addwfc	(___aomod@divisor+5)^0,f,c
 13531  004648  220F               	addwfc	(___aomod@divisor+6)^0,f,c
 13532  00464A  2210               	addwfc	(___aomod@divisor+7)^0,f,c
 13533  00464C                     l3732:
 13534  00464C  5009               	movf	___aomod@divisor^0,w,c
 13535  00464E  100A               	iorwf	(___aomod@divisor+1)^0,w,c
 13536  004650  100B               	iorwf	(___aomod@divisor+2)^0,w,c
 13537  004652  100C               	iorwf	(___aomod@divisor+3)^0,w,c
 13538  004654  100D               	iorwf	(___aomod@divisor+4)^0,w,c
 13539  004656  100E               	iorwf	(___aomod@divisor+5)^0,w,c
 13540  004658  100F               	iorwf	(___aomod@divisor+6)^0,w,c
 13541  00465A  1010               	iorwf	(___aomod@divisor+7)^0,w,c
 13542  00465C  B4D8               	btfsc	status,2,c
 13543  00465E  EF33  F023         	goto	u2991
 13544  004662  EF35  F023         	goto	u2990
 13545  004666                     u2991:
 13546  004666  EF7D  F023         	goto	l3748
 13547  00466A                     u2990:
 13548  00466A  0E01               	movlw	1
 13549  00466C  6E11               	movwf	___aomod@counter^0,c
 13550  00466E  EF43  F023         	goto	l3738
 13551  004672                     l3736:
 13552  004672  90D8               	bcf	status,0,c
 13553  004674  3609               	rlcf	___aomod@divisor^0,f,c
 13554  004676  360A               	rlcf	(___aomod@divisor+1)^0,f,c
 13555  004678  360B               	rlcf	(___aomod@divisor+2)^0,f,c
 13556  00467A  360C               	rlcf	(___aomod@divisor+3)^0,f,c
 13557  00467C  360D               	rlcf	(___aomod@divisor+4)^0,f,c
 13558  00467E  360E               	rlcf	(___aomod@divisor+5)^0,f,c
 13559  004680  360F               	rlcf	(___aomod@divisor+6)^0,f,c
 13560  004682  3610               	rlcf	(___aomod@divisor+7)^0,f,c
 13561  004684  2A11               	incf	___aomod@counter^0,f,c
 13562  004686                     l3738:
 13563  004686  AE10               	btfss	(___aomod@divisor+7)^0,7,c
 13564  004688  EF48  F023         	goto	u3001
 13565  00468C  EF4A  F023         	goto	u3000
 13566  004690                     u3001:
 13567  004690  EF39  F023         	goto	l3736
 13568  004694                     u3000:
 13569  004694                     l3740:
 13570  004694  5009               	movf	___aomod@divisor^0,w,c
 13571  004696  5C01               	subwf	___aomod@dividend^0,w,c
 13572  004698  500A               	movf	(___aomod@divisor+1)^0,w,c
 13573  00469A  5802               	subwfb	(___aomod@dividend+1)^0,w,c
 13574  00469C  500B               	movf	(___aomod@divisor+2)^0,w,c
 13575  00469E  5803               	subwfb	(___aomod@dividend+2)^0,w,c
 13576  0046A0  500C               	movf	(___aomod@divisor+3)^0,w,c
 13577  0046A2  5804               	subwfb	(___aomod@dividend+3)^0,w,c
 13578  0046A4  500D               	movf	(___aomod@divisor+4)^0,w,c
 13579  0046A6  5805               	subwfb	(___aomod@dividend+4)^0,w,c
 13580  0046A8  500E               	movf	(___aomod@divisor+5)^0,w,c
 13581  0046AA  5806               	subwfb	(___aomod@dividend+5)^0,w,c
 13582  0046AC  500F               	movf	(___aomod@divisor+6)^0,w,c
 13583  0046AE  5807               	subwfb	(___aomod@dividend+6)^0,w,c
 13584  0046B0  5010               	movf	(___aomod@divisor+7)^0,w,c
 13585  0046B2  5808               	subwfb	(___aomod@dividend+7)^0,w,c
 13586  0046B4  A0D8               	btfss	status,0,c
 13587  0046B6  EF5F  F023         	goto	u3011
 13588  0046BA  EF61  F023         	goto	u3010
 13589  0046BE                     u3011:
 13590  0046BE  EF71  F023         	goto	l3744
 13591  0046C2                     u3010:
 13592  0046C2  5009               	movf	___aomod@divisor^0,w,c
 13593  0046C4  5E01               	subwf	___aomod@dividend^0,f,c
 13594  0046C6  500A               	movf	(___aomod@divisor+1)^0,w,c
 13595  0046C8  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
 13596  0046CA  500B               	movf	(___aomod@divisor+2)^0,w,c
 13597  0046CC  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
 13598  0046CE  500C               	movf	(___aomod@divisor+3)^0,w,c
 13599  0046D0  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
 13600  0046D2  500D               	movf	(___aomod@divisor+4)^0,w,c
 13601  0046D4  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
 13602  0046D6  500E               	movf	(___aomod@divisor+5)^0,w,c
 13603  0046D8  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
 13604  0046DA  500F               	movf	(___aomod@divisor+6)^0,w,c
 13605  0046DC  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
 13606  0046DE  5010               	movf	(___aomod@divisor+7)^0,w,c
 13607  0046E0  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
 13608  0046E2                     l3744:
 13609  0046E2  90D8               	bcf	status,0,c
 13610  0046E4  3210               	rrcf	(___aomod@divisor+7)^0,f,c
 13611  0046E6  320F               	rrcf	(___aomod@divisor+6)^0,f,c
 13612  0046E8  320E               	rrcf	(___aomod@divisor+5)^0,f,c
 13613  0046EA  320D               	rrcf	(___aomod@divisor+4)^0,f,c
 13614  0046EC  320C               	rrcf	(___aomod@divisor+3)^0,f,c
 13615  0046EE  320B               	rrcf	(___aomod@divisor+2)^0,f,c
 13616  0046F0  320A               	rrcf	(___aomod@divisor+1)^0,f,c
 13617  0046F2  3209               	rrcf	___aomod@divisor^0,f,c
 13618  0046F4  2E11               	decfsz	___aomod@counter^0,f,c
 13619  0046F6  EF4A  F023         	goto	l3740
 13620  0046FA                     l3748:
 13621  0046FA  5012               	movf	___aomod@sign^0,w,c
 13622  0046FC  B4D8               	btfsc	status,2,c
 13623  0046FE  EF83  F023         	goto	u3021
 13624  004702  EF85  F023         	goto	u3020
 13625  004706                     u3021:
 13626  004706  EF95  F023         	goto	l3752
 13627  00470A                     u3020:
 13628  00470A  1E08               	comf	(___aomod@dividend+7)^0,f,c
 13629  00470C  1E07               	comf	(___aomod@dividend+6)^0,f,c
 13630  00470E  1E06               	comf	(___aomod@dividend+5)^0,f,c
 13631  004710  1E05               	comf	(___aomod@dividend+4)^0,f,c
 13632  004712  1E04               	comf	(___aomod@dividend+3)^0,f,c
 13633  004714  1E03               	comf	(___aomod@dividend+2)^0,f,c
 13634  004716  1E02               	comf	(___aomod@dividend+1)^0,f,c
 13635  004718  6C01               	negf	___aomod@dividend^0,c
 13636  00471A  0E00               	movlw	0
 13637  00471C  2202               	addwfc	(___aomod@dividend+1)^0,f,c
 13638  00471E  2203               	addwfc	(___aomod@dividend+2)^0,f,c
 13639  004720  2204               	addwfc	(___aomod@dividend+3)^0,f,c
 13640  004722  2205               	addwfc	(___aomod@dividend+4)^0,f,c
 13641  004724  2206               	addwfc	(___aomod@dividend+5)^0,f,c
 13642  004726  2207               	addwfc	(___aomod@dividend+6)^0,f,c
 13643  004728  2208               	addwfc	(___aomod@dividend+7)^0,f,c
 13644  00472A                     l3752:
 13645  00472A  C001  F001         	movff	___aomod@dividend,?___aomod
 13646  00472E  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
 13647  004732  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
 13648  004736  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
 13649  00473A  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
 13650  00473E  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
 13651  004742  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
 13652  004746  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
 13653  00474A  0012               	return		;funcret
 13654  00474C                     __end_of___aomod:
 13655                           	callstack 0
 13656                           
 13657 ;; *************** function ___aodiv *****************
 13658 ;; Defined at:
 13659 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\aodiv.c"
 13660 ;; Parameters:    Size  Location     Type
 13661 ;;  dividend        8    0[COMRAM] long long 
 13662 ;;  divisor         8    8[COMRAM] long long 
 13663 ;; Auto vars:     Size  Location     Type
 13664 ;;  quotient        8   18[COMRAM] long long 
 13665 ;;  sign            1   17[COMRAM] unsigned char 
 13666 ;;  counter         1   16[COMRAM] unsigned char 
 13667 ;; Return value:  Size  Location     Type
 13668 ;;                  8    0[COMRAM] long long 
 13669 ;; Registers used:
 13670 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13671 ;; Tracked objects:
 13672 ;;		On entry : 0/0
 13673 ;;		On exit  : 0/0
 13674 ;;		Unchanged: 0/0
 13675 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13676 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13677 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13678 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13679 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13680 ;;Total ram usage:       26 bytes
 13681 ;; Hardware stack levels used: 1
 13682 ;; Hardware stack levels required when called: 1
 13683 ;; This function calls:
 13684 ;;		Nothing
 13685 ;; This function is called by:
 13686 ;;		_dtoa
 13687 ;; This function uses a non-reentrant model
 13688 ;;
 13689                           
 13690                           	psect	text71
 13691  004460                     __ptext71:
 13692                           	callstack 0
 13693  004460                     ___aodiv:
 13694                           	callstack 23
 13695  004460  0E00               	movlw	0
 13696  004462  6E12               	movwf	___aodiv@sign^0,c
 13697  004464  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
 13698  004466  EF39  F022         	goto	u2900
 13699  00446A  EF37  F022         	goto	u2901
 13700  00446E                     u2901:
 13701  00446E  EF4B  F022         	goto	l3684
 13702  004472                     u2900:
 13703  004472  1E10               	comf	(___aodiv@divisor+7)^0,f,c
 13704  004474  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
 13705  004476  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
 13706  004478  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
 13707  00447A  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
 13708  00447C  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
 13709  00447E  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
 13710  004480  6C09               	negf	___aodiv@divisor^0,c
 13711  004482  0E00               	movlw	0
 13712  004484  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
 13713  004486  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
 13714  004488  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
 13715  00448A  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
 13716  00448C  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
 13717  00448E  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
 13718  004490  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
 13719  004492  0E01               	movlw	1
 13720  004494  6E12               	movwf	___aodiv@sign^0,c
 13721  004496                     l3684:
 13722  004496  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
 13723  004498  EF52  F022         	goto	u2910
 13724  00449C  EF50  F022         	goto	u2911
 13725  0044A0                     u2911:
 13726  0044A0  EF64  F022         	goto	l3690
 13727  0044A4                     u2910:
 13728  0044A4  1E08               	comf	(___aodiv@dividend+7)^0,f,c
 13729  0044A6  1E07               	comf	(___aodiv@dividend+6)^0,f,c
 13730  0044A8  1E06               	comf	(___aodiv@dividend+5)^0,f,c
 13731  0044AA  1E05               	comf	(___aodiv@dividend+4)^0,f,c
 13732  0044AC  1E04               	comf	(___aodiv@dividend+3)^0,f,c
 13733  0044AE  1E03               	comf	(___aodiv@dividend+2)^0,f,c
 13734  0044B0  1E02               	comf	(___aodiv@dividend+1)^0,f,c
 13735  0044B2  6C01               	negf	___aodiv@dividend^0,c
 13736  0044B4  0E00               	movlw	0
 13737  0044B6  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
 13738  0044B8  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
 13739  0044BA  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
 13740  0044BC  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
 13741  0044BE  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
 13742  0044C0  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
 13743  0044C2  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
 13744  0044C4  0E01               	movlw	1
 13745  0044C6  1A12               	xorwf	___aodiv@sign^0,f,c
 13746  0044C8                     l3690:
 13747  0044C8  EE20  F013         	lfsr	2,___aodiv@quotient
 13748  0044CC  0E07               	movlw	7
 13749  0044CE                     u2921:
 13750  0044CE  6ADE               	clrf	postinc2,c
 13751  0044D0  06E8               	decf	wreg,f,c
 13752  0044D2  E2FD               	bc	u2921
 13753  0044D4  5009               	movf	___aodiv@divisor^0,w,c
 13754  0044D6  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
 13755  0044D8  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
 13756  0044DA  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
 13757  0044DC  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
 13758  0044DE  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
 13759  0044E0  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
 13760  0044E2  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
 13761  0044E4  B4D8               	btfsc	status,2,c
 13762  0044E6  EF77  F022         	goto	u2931
 13763  0044EA  EF79  F022         	goto	u2930
 13764  0044EE                     u2931:
 13765  0044EE  EFCB  F022         	goto	l3712
 13766  0044F2                     u2930:
 13767  0044F2  0E01               	movlw	1
 13768  0044F4  6E11               	movwf	___aodiv@counter^0,c
 13769  0044F6  EF87  F022         	goto	l3698
 13770  0044FA                     l3696:
 13771  0044FA  90D8               	bcf	status,0,c
 13772  0044FC  3609               	rlcf	___aodiv@divisor^0,f,c
 13773  0044FE  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
 13774  004500  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
 13775  004502  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
 13776  004504  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
 13777  004506  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
 13778  004508  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
 13779  00450A  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
 13780  00450C  2A11               	incf	___aodiv@counter^0,f,c
 13781  00450E                     l3698:
 13782  00450E  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
 13783  004510  EF8C  F022         	goto	u2941
 13784  004514  EF8E  F022         	goto	u2940
 13785  004518                     u2941:
 13786  004518  EF7D  F022         	goto	l3696
 13787  00451C                     u2940:
 13788  00451C                     l3700:
 13789  00451C  90D8               	bcf	status,0,c
 13790  00451E  3613               	rlcf	___aodiv@quotient^0,f,c
 13791  004520  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
 13792  004522  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
 13793  004524  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
 13794  004526  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
 13795  004528  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
 13796  00452A  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
 13797  00452C  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
 13798  00452E  5009               	movf	___aodiv@divisor^0,w,c
 13799  004530  5C01               	subwf	___aodiv@dividend^0,w,c
 13800  004532  500A               	movf	(___aodiv@divisor+1)^0,w,c
 13801  004534  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
 13802  004536  500B               	movf	(___aodiv@divisor+2)^0,w,c
 13803  004538  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
 13804  00453A  500C               	movf	(___aodiv@divisor+3)^0,w,c
 13805  00453C  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
 13806  00453E  500D               	movf	(___aodiv@divisor+4)^0,w,c
 13807  004540  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
 13808  004542  500E               	movf	(___aodiv@divisor+5)^0,w,c
 13809  004544  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
 13810  004546  500F               	movf	(___aodiv@divisor+6)^0,w,c
 13811  004548  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
 13812  00454A  5010               	movf	(___aodiv@divisor+7)^0,w,c
 13813  00454C  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
 13814  00454E  A0D8               	btfss	status,0,c
 13815  004550  EFAC  F022         	goto	u2951
 13816  004554  EFAE  F022         	goto	u2950
 13817  004558                     u2951:
 13818  004558  EFBF  F022         	goto	l3708
 13819  00455C                     u2950:
 13820  00455C  5009               	movf	___aodiv@divisor^0,w,c
 13821  00455E  5E01               	subwf	___aodiv@dividend^0,f,c
 13822  004560  500A               	movf	(___aodiv@divisor+1)^0,w,c
 13823  004562  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
 13824  004564  500B               	movf	(___aodiv@divisor+2)^0,w,c
 13825  004566  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
 13826  004568  500C               	movf	(___aodiv@divisor+3)^0,w,c
 13827  00456A  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
 13828  00456C  500D               	movf	(___aodiv@divisor+4)^0,w,c
 13829  00456E  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
 13830  004570  500E               	movf	(___aodiv@divisor+5)^0,w,c
 13831  004572  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
 13832  004574  500F               	movf	(___aodiv@divisor+6)^0,w,c
 13833  004576  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
 13834  004578  5010               	movf	(___aodiv@divisor+7)^0,w,c
 13835  00457A  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
 13836  00457C  8013               	bsf	___aodiv@quotient^0,0,c
 13837  00457E                     l3708:
 13838  00457E  90D8               	bcf	status,0,c
 13839  004580  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
 13840  004582  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
 13841  004584  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
 13842  004586  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
 13843  004588  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
 13844  00458A  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
 13845  00458C  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
 13846  00458E  3209               	rrcf	___aodiv@divisor^0,f,c
 13847  004590  2E11               	decfsz	___aodiv@counter^0,f,c
 13848  004592  EF8E  F022         	goto	l3700
 13849  004596                     l3712:
 13850  004596  5012               	movf	___aodiv@sign^0,w,c
 13851  004598  B4D8               	btfsc	status,2,c
 13852  00459A  EFD1  F022         	goto	u2961
 13853  00459E  EFD3  F022         	goto	u2960
 13854  0045A2                     u2961:
 13855  0045A2  EFE3  F022         	goto	l3716
 13856  0045A6                     u2960:
 13857  0045A6  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
 13858  0045A8  1E19               	comf	(___aodiv@quotient+6)^0,f,c
 13859  0045AA  1E18               	comf	(___aodiv@quotient+5)^0,f,c
 13860  0045AC  1E17               	comf	(___aodiv@quotient+4)^0,f,c
 13861  0045AE  1E16               	comf	(___aodiv@quotient+3)^0,f,c
 13862  0045B0  1E15               	comf	(___aodiv@quotient+2)^0,f,c
 13863  0045B2  1E14               	comf	(___aodiv@quotient+1)^0,f,c
 13864  0045B4  6C13               	negf	___aodiv@quotient^0,c
 13865  0045B6  0E00               	movlw	0
 13866  0045B8  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
 13867  0045BA  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
 13868  0045BC  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
 13869  0045BE  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
 13870  0045C0  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
 13871  0045C2  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
 13872  0045C4  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
 13873  0045C6                     l3716:
 13874  0045C6  C013  F001         	movff	___aodiv@quotient,?___aodiv
 13875  0045CA  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
 13876  0045CE  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
 13877  0045D2  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
 13878  0045D6  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
 13879  0045DA  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
 13880  0045DE  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
 13881  0045E2  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
 13882  0045E6  0012               	return		;funcret
 13883  0045E8                     __end_of___aodiv:
 13884                           	callstack 0
 13885                           
 13886 ;; *************** function _sendStringSerial4 *****************
 13887 ;; Defined at:
 13888 ;;		line 36 in file "serial.c"
 13889 ;; Parameters:    Size  Location     Type
 13890 ;;  string          2    1[COMRAM] PTR unsigned char 
 13891 ;;		 -> goback@buf2(100), goback@buf3(100), goback@buf(100), action@buf(100), 
 13892 ;;		 -> color_predict@buf(100), color_display@buf(100), 
 13893 ;; Auto vars:     Size  Location     Type
 13894 ;;		None
 13895 ;; Return value:  Size  Location     Type
 13896 ;;                  1    wreg      void 
 13897 ;; Registers used:
 13898 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13899 ;; Tracked objects:
 13900 ;;		On entry : 0/0
 13901 ;;		On exit  : 0/0
 13902 ;;		Unchanged: 0/0
 13903 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13904 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13905 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13906 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13907 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13908 ;;Total ram usage:        2 bytes
 13909 ;; Hardware stack levels used: 1
 13910 ;; Hardware stack levels required when called: 2
 13911 ;; This function calls:
 13912 ;;		_sendCharSerial4
 13913 ;; This function is called by:
 13914 ;;		_color_display
 13915 ;;		_color_predict
 13916 ;;		_action
 13917 ;;		_goback
 13918 ;; This function uses a non-reentrant model
 13919 ;;
 13920                           
 13921                           	psect	text72
 13922  005880                     __ptext72:
 13923                           	callstack 0
 13924  005880                     _sendStringSerial4:
 13925                           	callstack 26
 13926  005880                     
 13927                           ;serial.c: 38:     while(*string != 0){
 13928  005880  EF4B  F02C         	goto	l4428
 13929  005884                     l4424:
 13930                           
 13931                           ;serial.c: 39:   sendCharSerial4(*string++);}
 13932  005884  C002  FFD9         	movff	sendStringSerial4@string,fsr2l
 13933  005888  C003  FFDA         	movff	sendStringSerial4@string+1,fsr2h
 13934  00588C  50DF               	movf	indf2,w,c
 13935  00588E  EC39  F02D         	call	_sendCharSerial4
 13936  005892  4A02               	infsnz	sendStringSerial4@string^0,f,c
 13937  005894  2A03               	incf	(sendStringSerial4@string+1)^0,f,c
 13938  005896                     l4428:
 13939                           
 13940                           ;serial.c: 38:     while(*string != 0){
 13941  005896  C002  FFD9         	movff	sendStringSerial4@string,fsr2l
 13942  00589A  C003  FFDA         	movff	sendStringSerial4@string+1,fsr2h
 13943  00589E  50DF               	movf	indf2,w,c
 13944  0058A0  A4D8               	btfss	status,2,c
 13945  0058A2  EF55  F02C         	goto	u4111
 13946  0058A6  EF57  F02C         	goto	u4110
 13947  0058AA                     u4111:
 13948  0058AA  EF42  F02C         	goto	l4424
 13949  0058AE                     u4110:
 13950  0058AE  0012               	return		;funcret
 13951  0058B0                     __end_of_sendStringSerial4:
 13952                           	callstack 0
 13953                           
 13954 ;; *************** function _sendCharSerial4 *****************
 13955 ;; Defined at:
 13956 ;;		line 29 in file "serial.c"
 13957 ;; Parameters:    Size  Location     Type
 13958 ;;  charToSend      1    wreg     unsigned char 
 13959 ;; Auto vars:     Size  Location     Type
 13960 ;;  charToSend      1    0[COMRAM] unsigned char 
 13961 ;; Return value:  Size  Location     Type
 13962 ;;                  1    wreg      void 
 13963 ;; Registers used:
 13964 ;;		wreg
 13965 ;; Tracked objects:
 13966 ;;		On entry : 0/0
 13967 ;;		On exit  : 0/0
 13968 ;;		Unchanged: 0/0
 13969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13970 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13971 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13972 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13973 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13974 ;;Total ram usage:        1 bytes
 13975 ;; Hardware stack levels used: 1
 13976 ;; Hardware stack levels required when called: 1
 13977 ;; This function calls:
 13978 ;;		Nothing
 13979 ;; This function is called by:
 13980 ;;		_sendStringSerial4
 13981 ;; This function uses a non-reentrant model
 13982 ;;
 13983                           
 13984                           	psect	text73
 13985  005A72                     __ptext73:
 13986                           	callstack 0
 13987  005A72                     _sendCharSerial4:
 13988                           	callstack 26
 13989                           
 13990                           ;incstack = 0
 13991                           ;sendCharSerial4@charToSend stored from wreg
 13992  005A72  6E01               	movwf	sendCharSerial4@charToSend^0,c
 13993  005A74                     l425:
 13994  005A74  010E               	movlb	14	; () banked
 13995  005A76  A537               	btfss	55,2,b	;volatile
 13996  005A78  EF40  F02D         	goto	u3841
 13997  005A7C  EF42  F02D         	goto	u3840
 13998  005A80                     u3841:
 13999  005A80  EF3A  F02D         	goto	l425
 14000  005A84                     u3840:
 14001  005A84                     
 14002                           ; BSR set to: 14
 14003                           ;serial.c: 31:     TX4REG = charToSend;
 14004  005A84  C001  FEE4         	movff	sendCharSerial4@charToSend,3812	;volatile
 14005  005A88                     
 14006                           ; BSR set to: 14
 14007  005A88  0012               	return		;funcret
 14008  005A8A                     __end_of_sendCharSerial4:
 14009                           	callstack 0
 14010                           
 14011 ;; *************** function _Timer0_init *****************
 14012 ;; Defined at:
 14013 ;;		line 7 in file "timers.c"
 14014 ;; Parameters:    Size  Location     Type
 14015 ;;		None
 14016 ;; Auto vars:     Size  Location     Type
 14017 ;;		None
 14018 ;; Return value:  Size  Location     Type
 14019 ;;                  1    wreg      void 
 14020 ;; Registers used:
 14021 ;;		wreg, status,2
 14022 ;; Tracked objects:
 14023 ;;		On entry : 0/0
 14024 ;;		On exit  : 0/0
 14025 ;;		Unchanged: 0/0
 14026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14027 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14028 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14029 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14030 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14031 ;;Total ram usage:        0 bytes
 14032 ;; Hardware stack levels used: 1
 14033 ;; Hardware stack levels required when called: 1
 14034 ;; This function calls:
 14035 ;;		Nothing
 14036 ;; This function is called by:
 14037 ;;		_main
 14038 ;; This function uses a non-reentrant model
 14039 ;;
 14040                           
 14041                           	psect	text74
 14042  005A54                     __ptext74:
 14043                           	callstack 0
 14044  005A54                     _Timer0_init:
 14045                           	callstack 29
 14046  005A54                     
 14047                           ;timers.c: 9:     T0CON1bits.T0CS=0b010;
 14048  005A54  50D6               	movf	214,w,c	;volatile
 14049  005A56  0B1F               	andlw	-225
 14050  005A58  0940               	iorlw	64
 14051  005A5A  6ED6               	movwf	214,c	;volatile
 14052  005A5C                     
 14053                           ;timers.c: 10:     T0CON1bits.T0ASYNC=1;
 14054  005A5C  88D6               	bsf	214,4,c	;volatile
 14055                           
 14056                           ;timers.c: 11:     T0CON1bits.T0CKPS=0b1000;
 14057  005A5E  50D6               	movf	214,w,c	;volatile
 14058  005A60  0BF0               	andlw	-16
 14059  005A62  0908               	iorlw	8
 14060  005A64  6ED6               	movwf	214,c	;volatile
 14061  005A66                     
 14062                           ;timers.c: 12:     T0CON0bits.T016BIT=1;
 14063  005A66  88D5               	bsf	213,4,c	;volatile
 14064                           
 14065                           ;timers.c: 16:     TMR0H=0b00001011;
 14066  005A68  0E0B               	movlw	11
 14067  005A6A  6ED4               	movwf	212,c	;volatile
 14068                           
 14069                           ;timers.c: 17:     TMR0L=0b11011011;
 14070  005A6C  0EDB               	movlw	219
 14071  005A6E  6ED3               	movwf	211,c	;volatile
 14072  005A70  0012               	return		;funcret
 14073  005A72                     __end_of_Timer0_init:
 14074                           	callstack 0
 14075                           
 14076 ;; *************** function _Interrupts_init *****************
 14077 ;; Defined at:
 14078 ;;		line 9 in file "interrupts.c"
 14079 ;; Parameters:    Size  Location     Type
 14080 ;;		None
 14081 ;; Auto vars:     Size  Location     Type
 14082 ;;		None
 14083 ;; Return value:  Size  Location     Type
 14084 ;;                  1    wreg      void 
 14085 ;; Registers used:
 14086 ;;		None
 14087 ;; Tracked objects:
 14088 ;;		On entry : 0/0
 14089 ;;		On exit  : 0/0
 14090 ;;		Unchanged: 0/0
 14091 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14092 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14093 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14094 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14095 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14096 ;;Total ram usage:        0 bytes
 14097 ;; Hardware stack levels used: 1
 14098 ;; Hardware stack levels required when called: 1
 14099 ;; This function calls:
 14100 ;;		Nothing
 14101 ;; This function is called by:
 14102 ;;		_main
 14103 ;; This function uses a non-reentrant model
 14104 ;;
 14105                           
 14106                           	psect	text75
 14107  005AAC                     __ptext75:
 14108                           	callstack 0
 14109  005AAC                     _Interrupts_init:
 14110                           	callstack 29
 14111  005AAC  8EF2               	bsf	242,7,c	;volatile
 14112                           
 14113                           ;interrupts.c: 11:     INTCONbits.IPEN=1;
 14114  005AAE  8AF2               	bsf	242,5,c	;volatile
 14115                           
 14116                           ;interrupts.c: 12:     INTCONbits.GIEL=1;
 14117  005AB0  8CF2               	bsf	242,6,c	;volatile
 14118                           
 14119                           ;interrupts.c: 13:  PIE0bits.TMR0IE = 1;
 14120  005AB2  010E               	movlb	14	; () banked
 14121  005AB4  8B29               	bsf	41,5,b	;volatile
 14122  005AB6                     
 14123                           ; BSR set to: 14
 14124  005AB6  0012               	return		;funcret
 14125  005AB8                     __end_of_Interrupts_init:
 14126                           	callstack 0
 14127                           
 14128 ;; *************** function _HighISR *****************
 14129 ;; Defined at:
 14130 ;;		line 21 in file "interrupts.c"
 14131 ;; Parameters:    Size  Location     Type
 14132 ;;		None
 14133 ;; Auto vars:     Size  Location     Type
 14134 ;;		None
 14135 ;; Return value:  Size  Location     Type
 14136 ;;                  1    wreg      void 
 14137 ;; Registers used:
 14138 ;;		status,2, status,0
 14139 ;; Tracked objects:
 14140 ;;		On entry : 0/0
 14141 ;;		On exit  : 0/0
 14142 ;;		Unchanged: 0/0
 14143 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14144 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14145 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14146 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14147 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14148 ;;Total ram usage:        0 bytes
 14149 ;; Hardware stack levels used: 1
 14150 ;; This function calls:
 14151 ;;		Nothing
 14152 ;; This function is called by:
 14153 ;;		Interrupt level 2
 14154 ;; This function uses a non-reentrant model
 14155 ;;
 14156                           
 14157                           	psect	intcode
 14158  000008                     __pintcode:
 14159                           	callstack 0
 14160  000008                     _HighISR:
 14161                           	callstack 19
 14162                           
 14163                           ; BSR set to: 14
 14164                           ;incstack = 0
 14165  000008  825F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 14166  00000A                     
 14167                           ;interrupts.c: 23:     if(PIR0bits.TMR0IF){
 14168  00000A  010E               	movlb	14	; () banked
 14169  00000C  AB33               	btfss	51,5,b	;volatile
 14170  00000E  EF0B  F000         	goto	i2u559_41
 14171  000012  EF0D  F000         	goto	i2u559_40
 14172  000016                     i2u559_41:
 14173  000016  EF12  F000         	goto	i2l694
 14174  00001A                     i2u559_40:
 14175  00001A                     
 14176                           ; BSR set to: 14
 14177                           ;interrupts.c: 24:         second ++;
 14178  00001A  0102               	movlb	2	; () banked
 14179  00001C  4BEB               	infsnz	_second& (0+255),f,b
 14180  00001E  2BEC               	incf	(_second+1)& (0+255),f,b
 14181  000020                     
 14182                           ; BSR set to: 2
 14183                           ;interrupts.c: 25:         PIR0bits.TMR0IF = 0;
 14184  000020  010E               	movlb	14	; () banked
 14185  000022  9B33               	bcf	51,5,b	;volatile
 14186  000024                     i2l694:
 14187                           
 14188                           ; BSR set to: 14
 14189  000024  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 14190  000026  0011               	retfie		f
 14191  000028                     __end_of_HighISR:
 14192                           	callstack 0
 14193                           
 14194                           	psect	rparam
 14195  0000                     
 14196                           	psect	temp
 14197  00005F                     btemp:
 14198                           	callstack 0
 14199  00005F                     	ds	1
 14200  0000                     int$flags	set	btemp
 14201  0000                     wtemp8	set	btemp+1
 14202  0000                     ttemp5	set	btemp+1
 14203  0000                     ttemp6	set	btemp+4
 14204  0000                     ttemp7	set	btemp+8
 14205                           
 14206                           	psect	idloc
 14207                           
 14208                           ;Config register IDLOC0 @ 0x200000
 14209                           ;	unspecified, using default values
 14210  200000                     	org	2097152
 14211  200000  0FFF               	dw	4095
 14212                           
 14213                           ;Config register IDLOC1 @ 0x200002
 14214                           ;	unspecified, using default values
 14215  200002                     	org	2097154
 14216  200002  0FFF               	dw	4095
 14217                           
 14218                           ;Config register IDLOC2 @ 0x200004
 14219                           ;	unspecified, using default values
 14220  200004                     	org	2097156
 14221  200004  0FFF               	dw	4095
 14222                           
 14223                           ;Config register IDLOC3 @ 0x200006
 14224                           ;	unspecified, using default values
 14225  200006                     	org	2097158
 14226  200006  0FFF               	dw	4095
 14227                           
 14228                           ;Config register IDLOC4 @ 0x200008
 14229                           ;	unspecified, using default values
 14230  200008                     	org	2097160
 14231  200008  0FFF               	dw	4095
 14232                           
 14233                           ;Config register IDLOC5 @ 0x20000A
 14234                           ;	unspecified, using default values
 14235  20000A                     	org	2097162
 14236  20000A  0FFF               	dw	4095
 14237                           
 14238                           ;Config register IDLOC6 @ 0x20000C
 14239                           ;	unspecified, using default values
 14240  20000C                     	org	2097164
 14241  20000C  0FFF               	dw	4095
 14242                           
 14243                           ;Config register IDLOC7 @ 0x20000E
 14244                           ;	unspecified, using default values
 14245  20000E                     	org	2097166
 14246  20000E  0FFF               	dw	4095
 14247                           
 14248                           	psect	config
 14249                           
 14250                           ;Config register CONFIG1L @ 0x300000
 14251                           ;	External Oscillator mode Selection bits
 14252                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
 14253                           ;	Power-up default value for COSC bits
 14254                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
 14255  300000                     	org	3145728
 14256  300000  AA                 	db	170
 14257                           
 14258                           ;Config register CONFIG1H @ 0x300001
 14259                           ;	unspecified, using default values
 14260                           ;	Clock Out Enable bit
 14261                           ;	CLKOUTEN = 0x1, unprogrammed default
 14262                           ;	Clock Switch Enable bit
 14263                           ;	CSWEN = 0x1, unprogrammed default
 14264                           ;	Fail-Safe Clock Monitor Enable bit
 14265                           ;	FCMEN = 0x1, unprogrammed default
 14266  300001                     	org	3145729
 14267  300001  FF                 	db	255
 14268                           
 14269                           ;Config register CONFIG2L @ 0x300002
 14270                           ;	unspecified, using default values
 14271                           ;	Master Clear Enable bit
 14272                           ;	MCLRE = 0x1, unprogrammed default
 14273                           ;	Power-up Timer Enable bit
 14274                           ;	PWRTE = 0x1, unprogrammed default
 14275                           ;	Low-power BOR enable bit
 14276                           ;	LPBOREN = 0x1, unprogrammed default
 14277                           ;	Brown-out Reset Enable bits
 14278                           ;	BOREN = 0x3, unprogrammed default
 14279  300002                     	org	3145730
 14280  300002  FF                 	db	255
 14281                           
 14282                           ;Config register CONFIG2H @ 0x300003
 14283                           ;	unspecified, using default values
 14284                           ;	Brown Out Reset Voltage selection bits
 14285                           ;	BORV = 0x3, unprogrammed default
 14286                           ;	ZCD Disable bit
 14287                           ;	ZCD = 0x1, unprogrammed default
 14288                           ;	PPSLOCK bit One-Way Set Enable bit
 14289                           ;	PPS1WAY = 0x1, unprogrammed default
 14290                           ;	Stack Full/Underflow Reset Enable bit
 14291                           ;	STVREN = 0x1, unprogrammed default
 14292                           ;	Debugger Enable bit
 14293                           ;	DEBUG = 0x1, unprogrammed default
 14294                           ;	Extended Instruction Set Enable bit
 14295                           ;	XINST = 0x1, unprogrammed default
 14296  300003                     	org	3145731
 14297  300003  FF                 	db	255
 14298                           
 14299                           ;Config register CONFIG3L @ 0x300004
 14300                           ;	WDT Period Select bits
 14301                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 14302                           ;	WDT operating mode
 14303                           ;	WDTE = OFF, WDT Disabled
 14304  300004                     	org	3145732
 14305  300004  9F                 	db	159
 14306                           
 14307                           ;Config register CONFIG3H @ 0x300005
 14308                           ;	unspecified, using default values
 14309                           ;	WDT Window Select bits
 14310                           ;	WDTCWS = 0x7, unprogrammed default
 14311                           ;	WDT input clock selector
 14312                           ;	WDTCCS = 0x7, unprogrammed default
 14313  300005                     	org	3145733
 14314  300005  FF                 	db	255
 14315                           
 14316                           ;Config register CONFIG4L @ 0x300006
 14317                           ;	unspecified, using default values
 14318                           ;	Write Protection Block 0
 14319                           ;	WRT0 = 0x1, unprogrammed default
 14320                           ;	Write Protection Block 1
 14321                           ;	WRT1 = 0x1, unprogrammed default
 14322                           ;	Write Protection Block 2
 14323                           ;	WRT2 = 0x1, unprogrammed default
 14324                           ;	Write Protection Block 3
 14325                           ;	WRT3 = 0x1, unprogrammed default
 14326                           ;	Write Protection Block 3
 14327                           ;	WRT4 = 0x1, unprogrammed default
 14328                           ;	Write Protection Block 3
 14329                           ;	WRT5 = 0x1, unprogrammed default
 14330                           ;	Write Protection Block 3
 14331                           ;	WRT6 = 0x1, unprogrammed default
 14332                           ;	Write Protection Block 3
 14333                           ;	WRT7 = 0x1, unprogrammed default
 14334  300006                     	org	3145734
 14335  300006  FF                 	db	255
 14336                           
 14337                           ;Config register CONFIG4H @ 0x300007
 14338                           ;	unspecified, using default values
 14339                           ;	Configuration Register Write Protection bit
 14340                           ;	WRTC = 0x1, unprogrammed default
 14341                           ;	Boot Block Write Protection bit
 14342                           ;	WRTB = 0x1, unprogrammed default
 14343                           ;	Data EEPROM Write Protection bit
 14344                           ;	WRTD = 0x1, unprogrammed default
 14345                           ;	Scanner Enable bit
 14346                           ;	SCANE = 0x1, unprogrammed default
 14347                           ;	Low Voltage Programming Enable bit
 14348                           ;	LVP = 0x1, unprogrammed default
 14349  300007                     	org	3145735
 14350  300007  FF                 	db	255
 14351                           
 14352                           ;Config register CONFIG5L @ 0x300008
 14353                           ;	unspecified, using default values
 14354                           ;	UserNVM Program Memory Code Protection bit
 14355                           ;	CP = 0x1, unprogrammed default
 14356                           ;	DataNVM Memory Code Protection bit
 14357                           ;	CPD = 0x1, unprogrammed default
 14358  300008                     	org	3145736
 14359  300008  FF                 	db	255
 14360                           
 14361                           ;Config register CONFIG5H @ 0x300009
 14362                           ;	unspecified, using default values
 14363  300009                     	org	3145737
 14364  300009  FF                 	db	255
 14365                           
 14366                           ;Config register CONFIG6L @ 0x30000A
 14367                           ;	unspecified, using default values
 14368                           ;	Table Read Protection Block 0
 14369                           ;	EBTR0 = 0x1, unprogrammed default
 14370                           ;	Table Read Protection Block 1
 14371                           ;	EBTR1 = 0x1, unprogrammed default
 14372                           ;	Table Read Protection Block 2
 14373                           ;	EBTR2 = 0x1, unprogrammed default
 14374                           ;	Table Read Protection Block 3
 14375                           ;	EBTR3 = 0x1, unprogrammed default
 14376                           ;	Table Read Protection Block 4
 14377                           ;	EBTR4 = 0x1, unprogrammed default
 14378                           ;	Table Read Protection Block 5
 14379                           ;	EBTR5 = 0x1, unprogrammed default
 14380                           ;	Table Read Protection Block 6
 14381                           ;	EBTR6 = 0x1, unprogrammed default
 14382                           ;	Table Read Protection Block 7
 14383                           ;	EBTR7 = 0x1, unprogrammed default
 14384  30000A                     	org	3145738
 14385  30000A  FF                 	db	255
 14386                           
 14387                           ;Config register CONFIG6H @ 0x30000B
 14388                           ;	unspecified, using default values
 14389                           ;	Boot Block Table Read Protection bit
 14390                           ;	EBTRB = 0x1, unprogrammed default
 14391  30000B                     	org	3145739
 14392  30000B  FF                 	db	255
 14393                           tosu	equ	0xFFF
 14394                           tosh	equ	0xFFE
 14395                           tosl	equ	0xFFD
 14396                           stkptr	equ	0xFFC
 14397                           pclatu	equ	0xFFB
 14398                           pclath	equ	0xFFA
 14399                           pcl	equ	0xFF9
 14400                           tblptru	equ	0xFF8
 14401                           tblptrh	equ	0xFF7
 14402                           tblptrl	equ	0xFF6
 14403                           tablat	equ	0xFF5
 14404                           prodh	equ	0xFF4
 14405                           prodl	equ	0xFF3
 14406                           indf0	equ	0xFEF
 14407                           postinc0	equ	0xFEE
 14408                           postdec0	equ	0xFED
 14409                           preinc0	equ	0xFEC
 14410                           plusw0	equ	0xFEB
 14411                           fsr0h	equ	0xFEA
 14412                           fsr0l	equ	0xFE9
 14413                           wreg	equ	0xFE8
 14414                           indf1	equ	0xFE7
 14415                           postinc1	equ	0xFE6
 14416                           postdec1	equ	0xFE5
 14417                           preinc1	equ	0xFE4
 14418                           plusw1	equ	0xFE3
 14419                           fsr1h	equ	0xFE2
 14420                           fsr1l	equ	0xFE1
 14421                           bsr	equ	0xFE0
 14422                           indf2	equ	0xFDF
 14423                           postinc2	equ	0xFDE
 14424                           postdec2	equ	0xFDD
 14425                           preinc2	equ	0xFDC
 14426                           plusw2	equ	0xFDB
 14427                           fsr2h	equ	0xFDA
 14428                           fsr2l	equ	0xFD9
 14429                           status	equ	0xFD8

Data Sizes:
    Strings     63
    Constant    4
    Data        3
    BSS         196
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     94      94
    BANK0           160    150     160
    BANK1           256    256     256
    BANK2           256    201     238
    BANK3           256      0     152
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    distance_measure@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    distance_measure@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    amb_light_measure@amb	PTR struct color_rgb size(2) Largest target is 8
		 -> main@rgb(BANK1[8]), main@amb(BANK3[8]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK3[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK3[32]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK3[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_6(CODE[17]), STR_5(CODE[9]), STR_4(CODE[10]), STR_3(CODE[13]), 
		 -> STR_2(CODE[6]), STR_1(CODE[14]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 17
		 -> STR_6(CODE[17]), STR_5(CODE[9]), STR_4(CODE[10]), STR_3(CODE[13]), 
		 -> STR_2(CODE[6]), STR_1(CODE[14]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK3[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_6(CODE[17]), STR_5(CODE[9]), STR_4(CODE[10]), STR_3(CODE[13]), 
		 -> STR_2(CODE[6]), STR_1(CODE[14]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 100
		 -> goback@buf2(BANK2[100]), goback@buf3(BANK1[100]), goback@buf(BANK1[100]), action@buf(BANK2[100]), 
		 -> color_predict@buf(BANK0[100]), color_display@buf(BANK0[100]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S2830$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S2830$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    test_function@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    test_function@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    test_function@m	PTR struct color_rgb size(2) Largest target is 8
		 -> main@rgb(BANK1[8]), 

    test_function@w	PTR struct white_card size(2) Largest target is 28
		 -> main@white(BANK1[28]), 

    goback@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    goback@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    action@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    action@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    short_burst_back@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    short_burst_back@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    motorR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    motorR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    motorL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    motorL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    sendStringSerial4@string	PTR unsigned char  size(2) Largest target is 100
		 -> goback@buf2(BANK2[100]), goback@buf3(BANK1[100]), goback@buf(BANK1[100]), action@buf(BANK2[100]), 
		 -> color_predict@buf(BANK0[100]), color_display@buf(BANK0[100]), 

    reverse_square@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    reverse_square@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    short_reverse@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    short_reverse@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    halfSpeedBack@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    halfSpeedBack@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    halfSpeedBack@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    halfSpeedBack@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    halfSpeedBack@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    halfSpeedBack@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    fullSpeedBack@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    fullSpeedBack@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    fullSpeedBack@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    fullSpeedBack@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    fullSpeedBack@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    fullSpeedBack@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    fullSpeedAhead@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    fullSpeedAhead@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    fullSpeedAhead@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    fullSpeedAhead@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    fullSpeedAhead@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    fullSpeedAhead@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    turnRight@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turnRight@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    turnRight@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    turnRight@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turnRight@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    turnRight@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    turnLeft@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turnLeft@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    turnLeft@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    turnLeft@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turnLeft@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    turnLeft@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    stop@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    stop@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    stop@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    stop@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    stop@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    stop@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    setMotorPWM@m.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    setMotorPWM@m.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    setMotorPWM@m	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), main@motorL(BANK1[10]), 

    initDCmotors_parameter@motorR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    initDCmotors_parameter@motorR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    initDCmotors_parameter@motorR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    initDCmotors_parameter@motorL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    initDCmotors_parameter@motorL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    initDCmotors_parameter@motorL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    motorR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    motorR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    S376DC_motor$dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    motorL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    S376DC_motor$dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    motorL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    verify_color@w	PTR struct white_card size(2) Largest target is 28
		 -> main@white(BANK1[28]), 

    verify_color@m	PTR struct color_rgb size(2) Largest target is 8
		 -> main@rgb(BANK1[8]), 

    detect_color@w	PTR struct white_card size(2) Largest target is 28
		 -> main@white(BANK1[28]), 

    detect_color@m	PTR struct color_rgb size(2) Largest target is 8
		 -> main@rgb(BANK1[8]), 

    calibrate_white@w	PTR struct white_card size(2) Largest target is 28
		 -> main@white(BANK1[28]), 

    color_display@m	PTR struct color_rgb size(2) Largest target is 8
		 -> main@rgb(BANK1[8]), 

    color_data_collection@m	PTR struct color_rgb size(2) Largest target is 8
		 -> main@rgb(BANK1[8]), 

    read_color@m	PTR struct color_rgb size(2) Largest target is 8
		 -> main@rgb(BANK1[8]), 


Critical Paths under _main in COMRAM

    _color_data_collection->_color_display
    _read_color->_color_read_Blue
    _read_color->_color_read_Clear
    _read_color->_color_read_Green
    _read_color->_color_read_Red
    _calibrate_white->_color_read_Blue
    _calibrate_white->_color_read_Clear
    _calibrate_white->_color_read_Green
    _calibrate_white->_color_read_Red
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _lroundf->___fltol
    _roundf->___flmul
    ___flsub->___fladd
    ___flmul->___fldiv
    ___fltol->_roundf
    _color_read_Clear->_I2C_2_Master_Read
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    ___fldiv->___xxtofl
    _short_burst_back->_halfSpeedBack
    _halfSpeedBack->_stop
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle
    _action->_goback
    _short_reverse->_fullSpeedBack
    _turnRight->_stop
    _turnLeft->_stop
    _reverse_square->_fullSpeedBack
    _fullSpeedBack->_stop
    _stop->_setMotorPWM
    _fullSpeedAhead->_setMotorPWM
    _setMotorPWM->___awdiv
    ___awdiv->___wmul
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _sendStringSerial4->_sendCharSerial4

Critical Paths under _HighISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_test_function
    _verify_color->_detect_color
    _test_function->_color_data_collection
    _distance_measure->_lroundf
    _detect_color->_compare
    _compare->_lroundf
    _color_data_collection->_color_predict
    _color_display->_sprintf
    _amb_light_measure->_lroundf
    _lroundf->___fltol
    _action->_goback
    _goback->_color_predict
    _color_predict->_sprintf

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    _action->_goback

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    _main->_action
    _action->_goback

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                67    67      0  355918
                                            200 BANK1     56    56      0
                  _I2C_2_Master_Init
                    _Interrupts_init
                        _Timer0_init
                             _action
                  _amb_light_measure
                    _buggylight_init
                    _calibrate_white
                   _color_click_init
                      _color_predict
                       _detect_color
                   _distance_measure
                     _fullSpeedAhead
                    _initDCmotorsPWM
             _initDCmotors_parameter
                         _initUSART4
                           _pin_init
                   _short_burst_back
                               _stop
                      _test_function
                       _verify_color
 ---------------------------------------------------------------------------------
 (1) _verify_color                                        11     7      4   28528
                                             50 BANK0      9     5      4
                       _detect_color
 ---------------------------------------------------------------------------------
 (1) _test_function                                       16     8      8  112394
                                            134 BANK0     16     8      8
                              _LED_C
                  _amb_light_measure
                    _calibrate_white
              _color_data_collection
                      _color_display
                      _color_predict
                       _detect_color
                   _distance_measure
                     _fullSpeedAhead
                         _read_color
                               _stop
 ---------------------------------------------------------------------------------
 (2) _distance_measure                                    19    13      6   19671
                                             10 BANK0     19    13      6
                              _LED_C
                            ___flmul
                           ___xxtofl
                   _color_read_Clear
                   _color_read_Green
                            _lroundf
 ---------------------------------------------------------------------------------
 (2) _detect_color                                        33    29      4   28242
                                             17 BANK0     33    29      4
                              _LED_B
                              _LED_G
                              _LED_R
                            ___fldiv
                            ___flmul
                             ___wmul
                           ___xxtofl
                            _compare
                            _lroundf
                         _read_color
                       _toggle_light
 ---------------------------------------------------------------------------------
 (3) _compare                                              7     1      6    2164
                                             10 BANK0      7     1      6
                            ___fldiv (ARG)
                            ___flmul (ARG)
                             ___wmul (ARG)
                           ___xxtofl (ARG)
                            _lroundf (ARG)
 ---------------------------------------------------------------------------------
 (2) _color_data_collection                               12    10      2   17656
                                             89 COMRAM     4     2      2
                                            126 BANK0      8     8      0
                              _LED_B
                              _LED_C
                              _LED_G
                              _LED_R
                      _color_display
                      _color_predict
                         _read_color
 ---------------------------------------------------------------------------------
 (3) _read_color                                           2     0      2    1148
                                             11 COMRAM     2     0      2
                    _color_read_Blue
                   _color_read_Clear
                   _color_read_Green
                     _color_read_Red
 ---------------------------------------------------------------------------------
 (2) _color_display                                      102   100      2    8257
                                             87 COMRAM     2     0      2
                                             25 BANK0    100   100      0
                  _sendStringSerial4
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _calibrate_white                                      4     2      2    1525
                                             11 COMRAM     4     2      2
                              _LED_B
                              _LED_C
                              _LED_G
                            _LED_OFF
                              _LED_R
                    _color_read_Blue
                   _color_read_Clear
                   _color_read_Green
                     _color_read_Red
                       _toggle_light
 ---------------------------------------------------------------------------------
 (4) _color_read_Red                                       7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (4) _color_read_Green                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (4) _color_read_Blue                                      7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _LED_R                                                2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _LED_OFF                                              2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _LED_G                                                2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _LED_B                                                2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _amb_light_measure                                   14    12      2   19347
                                             10 BANK0     14    12      2
                              _LED_C
                            ___fldiv
                           ___xxtofl
                   _color_read_Clear
                            _lroundf
                       _toggle_light
 ---------------------------------------------------------------------------------
 (3) _lroundf                                              4     0      4   13324
                                              6 BANK0      4     0      4
                            ___fldiv (ARG)
                            ___fltol
                           ___xxtofl (ARG)
                             _roundf
 ---------------------------------------------------------------------------------
 (4) _roundf                                              26    22      4   11781
                                             64 COMRAM    26    22      4
                            ___fladd
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    3649
                                             16 COMRAM     8     0      8
                            ___fladd
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    3326
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4     197
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    3484
                                             39 COMRAM    25    17      8
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8     486
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (4) ___fltol                                             10     6      4     305
                                             90 COMRAM     4     0      4
                                              0 BANK0      6     6      0
                             _roundf (ARG)
 ---------------------------------------------------------------------------------
 (4) _color_read_Clear                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (5) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (5) _I2C_2_Master_Read                                    3     3      0      45
                                              1 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4    2062
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (3) ___fldiv                                             25    17      8    2987
                                             14 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) _LED_C                                                2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _short_burst_back                                     6     2      4   15556
                                             37 COMRAM     6     2      4
                     _fullSpeedAhead
                      _halfSpeedBack
                               _stop
 ---------------------------------------------------------------------------------
 (2) _halfSpeedBack                                        6     2      4    7354
                                             31 COMRAM     6     2      4
                        _setMotorPWM
                               _stop
 ---------------------------------------------------------------------------------
 (1) _pin_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initDCmotors_parameter                               4     0      4     416
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2      76
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     294
                                              4 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     294
                                              2 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (5) _I2C_2_Master_Write                                   1     1      0      22
                                              1 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (5) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (5) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (6) _I2C_2_Master_Idle                                    1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _buggylight_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _action                                             105   101      4  113439
                                            128 BANK0      4     0      4
                                            100 BANK2    101   101      0
                             _goback
                     _reverse_square
                  _sendStringSerial4
                      _short_reverse
                            _sprintf
                       _toggle_light
                           _turnLeft
                          _turnRight
 ---------------------------------------------------------------------------------
 (3) _toggle_light                                         5     4      1     613
                                              0 COMRAM     5     4      1
 ---------------------------------------------------------------------------------
 (2) _short_reverse                                        6     2      4   12997
                                             37 COMRAM     6     2      4
                      _fullSpeedBack
                               _stop
 ---------------------------------------------------------------------------------
 (2) _goback                                             308   304      4   57665
                                             87 COMRAM     6     2      4
                                            126 BANK0      2     2      0
                                              0 BANK1    200   200      0
                                              0 BANK2    100   100      0
                      _color_predict
                     _fullSpeedAhead
                     _reverse_square
                  _sendStringSerial4
                            _sprintf
                               _stop
                           _turnLeft
                          _turnRight
 ---------------------------------------------------------------------------------
 (2) _turnRight                                           18    13      5    9961
                                             31 COMRAM    18    13      5
                        _setMotorPWM
                               _stop
 ---------------------------------------------------------------------------------
 (2) _turnLeft                                            18    13      5   10645
                                             31 COMRAM    18    13      5
                        _setMotorPWM
                               _stop
 ---------------------------------------------------------------------------------
 (2) _reverse_square                                       6     2      4   12693
                                             37 COMRAM     6     2      4
                      _fullSpeedBack
                               _stop
 ---------------------------------------------------------------------------------
 (3) _fullSpeedBack                                        6     2      4    7506
                                             31 COMRAM     6     2      4
                        _setMotorPWM
                               _stop
 ---------------------------------------------------------------------------------
 (2) _stop                                                 6     2      4    4491
                                             25 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _fullSpeedAhead                                       5     1      4    3427
                                             25 COMRAM     5     1      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (3) _setMotorPWM                                         11     9      2    2491
                                             14 COMRAM    11     9      2
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     751
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4     496
                                              6 COMRAM     8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _color_predict                                      101   101      0    7811
                                             25 BANK0    101   101      0
                  _sendStringSerial4
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             27    15     12    7216
                                              0 BANK0     25    13     12
                           _vfprintf
 ---------------------------------------------------------------------------------
 (4) _vfprintf                                             8     2      6    6105
                                             79 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (5) _vfpfcnvrt                                           42    36      6    5751
                                             63 COMRAM    16    10      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (6) _dtoa                                                36    26     10    4358
                                             27 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (7) _pad                                                 11     5      6    2709
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (8) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (8) _fputs                                                7     3      4    1235
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (6) _fputc                                                9     5      4     834
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (7) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (7) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (7) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (7) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (3) _sendStringSerial4                                    2     0      2     523
                                              1 COMRAM     2     0      2
                    _sendCharSerial4
 ---------------------------------------------------------------------------------
 (4) _sendCharSerial4                                      1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _HighISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_2_Master_Init
   _Interrupts_init
   _Timer0_init
   _action
     _goback
       _color_predict
         _sendStringSerial4
           _sendCharSerial4
         _sprintf
           _vfprintf
             _vfpfcnvrt
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                   _strlen
               _fputc
       _fullSpeedAhead
         _setMotorPWM
           ___awdiv
             ___wmul (ARG)
           ___wmul
       _reverse_square
         _fullSpeedBack
           _setMotorPWM
           _stop
             _setMotorPWM
         _stop
       _sendStringSerial4
       _sprintf
       _stop
       _turnLeft
         _setMotorPWM
         _stop
       _turnRight
         _setMotorPWM
         _stop
     _reverse_square
     _sendStringSerial4
     _short_reverse
       _fullSpeedBack
       _stop
     _sprintf
     _toggle_light
     _turnLeft
     _turnRight
   _amb_light_measure
     _LED_C
     ___fldiv
       ___xxtofl (ARG)
     ___xxtofl
     _color_read_Clear
       _I2C_2_Master_Read
         _I2C_2_Master_Idle
       _I2C_2_Master_RepStart
         _I2C_2_Master_Idle
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
     _lroundf
       ___fldiv (ARG)
       ___fltol (ARG)
         _roundf (ARG)
           ___fladd
           ___flge
           ___flmul
             ___fldiv (ARG)
             ___xxtofl (ARG)
           ___flneg
           ___flsub
             ___fladd
       ___xxtofl (ARG)
       _roundf (ARG)
     _toggle_light
   _buggylight_init
   _calibrate_white
     _LED_B
     _LED_C
     _LED_G
     _LED_OFF
     _LED_R
     _color_read_Blue
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Clear
     _color_read_Green
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Red
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _toggle_light
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _color_predict
   _detect_color
     _LED_B
     _LED_G
     _LED_R
     ___fldiv
     ___flmul
     ___wmul
     ___xxtofl
     _compare
       ___fldiv (ARG)
       ___flmul (ARG)
       ___wmul (ARG)
       ___xxtofl (ARG)
       _lroundf (ARG)
     _lroundf
     _read_color
       _color_read_Blue
       _color_read_Clear
       _color_read_Green
       _color_read_Red
     _toggle_light
   _distance_measure
     _LED_C
     ___flmul
     ___xxtofl
     _color_read_Clear
     _color_read_Green
     _lroundf
   _fullSpeedAhead
   _initDCmotorsPWM
   _initDCmotors_parameter
   _initUSART4
   _pin_init
   _short_burst_back
     _fullSpeedAhead
     _halfSpeedBack
       _setMotorPWM
       _stop
     _stop
   _stop
   _test_function
     _LED_C
     _amb_light_measure
     _calibrate_white
     _color_data_collection
       _LED_B
       _LED_C
       _LED_G
       _LED_R
       _color_display
         _sendStringSerial4
         _sprintf
       _color_predict
       _read_color
     _color_display
     _color_predict
     _detect_color
     _distance_measure
     _fullSpeedAhead
     _read_color
     _stop
   _verify_color
     _detect_color

 _HighISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      58        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      98      11       59.4%
BITBANK2           100      0       0       8        0.0%
BANK2              100     C9      EE       9       93.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100    100     100       7      100.0%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     96      A0       5      100.0%
BITBIGSFRlllllh     8F      0       0      41        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5E      5E       1      100.0%
BITBIGSFRllllll     32      0       0      46        0.0%
BITBIGSFRllllll     2A      0       0      50        0.0%
BITBIGSFRllllll     26      0       0      56        0.0%
BITBIGSFRllllll     20      0       0      44        0.0%
BITBIGSFRhhhl       1B      0       0      33        0.0%
BITBIGSFRhlh        17      0       0      35        0.0%
BITBIGSFRhhl        13      0       0      34        0.0%
BITBIGSFRhlllh      11      0       0      37        0.0%
BITBIGSFRhhhh        D      0       0      32        0.0%
BITBIGSFRllllll      C      0       0      45        0.0%
BITBIGSFRllllll      B      0       0      54        0.0%
BITBIGSFRlllllh      8      0       0      42        0.0%
BITBIGSFRllllll      6      0       0      55        0.0%
BITBIGSFRllllll      6      0       0      49        0.0%
BITBIGSFRllllll      5      0       0      52        0.0%
BITBIGSFRllllll      5      0       0      48        0.0%
BITBIGSFRhllll       5      0       0      38        0.0%
BITBIGSFRllllll      3      0       0      51        0.0%
BITBIGSFRllllll      3      0       0      53        0.0%
BITBIGSFRllllll      3      0       0      47        0.0%
BITBIGSFRhllh        1      0       0      36        0.0%
BITBIGSFRllllll      1      0       0      43        0.0%
BITBIGSFRllllh       1      0       0      40        0.0%
BITBIGSFRllh         1      0       0      39        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     384      57        0.0%
DATA                 0      0     384       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.35 build 20211206165544 
Symbol Table                                                                                   Mon Mar 14 19:31:16 2022

                ?_short_reverse 0026                  _color_read_Red 545C                    ___fldiv@aexp 0027  
                  ___fldiv@bexp 0026                    ___fldiv@sign 001F                 _color_read_Blue 54FC  
                 _color_predict 58B0                              l71 5A9E                              l82 36DC  
                            l74 36CA                              l91 54AA                              l85 587E  
                            l94 554A                              l88 5A34                              l97 54FA  
                  ___awdiv@sign 000C             ___wmul@multiplicand 0003                _color_read_Clear 554C  
              _color_read_Green 54AC               ??_Interrupts_init 0001                             l100 559A  
                           l103 53B2                             l112 59F4                             l202 5906  
                           l106 5994                             l211 5AD4                             l115 59D4  
                           l220 5AAA                             l132 5226                             l205 5908  
                           l109 5974                             l141 38E6                             l302 3ABA  
                           l310 50A6                             l214 5AC0                             l118 59B4  
                           l223 5666                             l208 592E                             l321 4262  
                           l217 5ACA                             l129 3FB8                             l138 58DC  
                           l162 57A0                             l171 4872                             l163 57A2  
                           l325 42AA                             l317 421A                             l174 4CDE  
                           l343 411C                             l335 408C                             l159 1AA8  
                           l175 4CE0                             l167 51B6                             l328 42D4  
                           l416 5A52                             l425 5A74                             l434 58AE  
                           l354 513A                             l346 4146                             l339 40D4  
                           l428 5A88                             l292 56A8                             l365 4FEA  
                           l373 4F2A                             l295 4B50                             l376 56E8  
                           l705 5A70                             l641 3146                             l379 5728  
                           l629 5408                             l647 5A14                             l664 2E02  
                           l921 474A                             l908 45E6                             l688 5AB6  
                           l794 5954               verify_color@color 009A                ?_calibrate_white 000C  
      __end_of_distance_measure 4CE2                             _abs 572A                             _pad 4CE2  
                           prod 000FF3                             wreg 000FE8                    ___flmul@aexp 0039  
                  ___flmul@bexp 003A                    ___flmul@sign 0034                    ___flmul@temp 003F  
                  ___flmul@prod 003B                 __end_of_LED_OFF 5996                    ___fltol@exp1 0065  
                          l1025 4E6A                            ?_abs 0013                            l1064 4A7E  
                          l1322 1C98                            l1091 497A                            l1059 4A38  
                          l1331 1F68                            l1323 1C86                            l1412 2392  
                          l1068 5814                            l1324 1C4C                            l1415 2224  
                          l1600 584A                            l1504 4D28                            l1408 202E  
                          l4000 1C5A                            l1425 2354                            l1417 229C  
                          l1418 228A                            l4010 1C84                            l4002 1C66  
                          l1507 4D6A                            l1515 31EC                            l1339 1DB2  
                          l1452 3C6E                            l4100 1F3A                            l1348 1E82  
                          l4020 1CDA                            l4012 1CA6                            l4004 1C6A  
                          l1364 55E0                            l1509 4DA6                            l1517 31F4  
                          l1381 28FE                            l1349 1E70                            l1542 3E22  
                          l1390 29E6                            l4110 1F58                            l4102 1F40  
                          l4030 1D14                            l4022 1CE8                            l4014 1CB6  
                          l4006 1C78                            l1470 57DC                            l1535 3430  
                          l1463 3C06                            l4120 3CB4                            l4200 5050  
                          l1376 2ADA                            l1456 3BAA                            l4104 1F42  
                          l4040 1D80                            l4032 1D16                            l4024 1CF6  
                          l4008 1C7A                            l5000 36EC                            l1553 5760  
                          l1449 3B12                            l4210 5A84                            l4122 3CB8  
                          l4114 3C70                            l4202 505E                            l1378 293A  
                          l4106 1F48                            l4050 1DD8                            l4042 1D82  
                          l4034 1D20                            l4026 1D02                            l4018 1CCA  
                          l5010 374C                            l5002 3704                            l1387 2980  
                          l1556 5768                            l4132 3D80                            l4124 3CDC  
                          l4116 3C94                            l1548 52EC                            l4204 5076  
                          l4300 2234                            l4220 1F96                            l4212 1F6A  
                          l4108 1F56                            l4060 1E06                            l4044 1D92  
                          l4028 1D06                            l4036 1D26                            l5020 37B0  
                          l5012 3764                            l5004 3708                            l5100 1456  
                          l1549 52F4                            l1477 545A                            l1389 29F8  
                          l4150 3E10                            l4134 3DA4                            l4142 3DD2  
                          l4126 3D00                            l4118 3CA2                            l4206 508E  
                          l4302 2242                            l4230 1FD2                            l4222 1FA6  
                          l4214 1F76                            l4062 1E14                            l4054 1DEC  
                          l4070 1E32                            l4038 1D4C                            l4046 1DA2  
                          l5030 3814                            l5022 37C8                            l5014 3768  
                          l5006 3720                            l5110 1686                            l5102 14FE  
                          l4208 5A74                            l1568 4C1A                            l1576 5624  
                          l4144 3DE0                            l4136 3DB2                            l4128 3D48  
                          l4160 5AA2                            l4312 22AC                            l4320 22F4  
                          l4304 2246                            l4240 2008                            l4232 1FD8  
                          l4224 1FB6                            l4216 1F84                            l4064 1E1C  
                          l4056 1DF6                            l4048 1DC8                            l4072 1E40  
                          l4400 54F2                            l5040 3878                            l5032 382C  
                          l5024 37CC                            l5016 3780                            l5008 3734  
                          l5120 17AA                            l5112 169A                            l5104 151A  
                          l5200 4CC2                            l4138 3DC6                            l4410 540A  
                          l4162 5AA6                            l4170 5ABC                            l4330 2368  
                          l4322 230E                            l4314 22B8                            l4306 2254  
                          l4242 2018                            l4234 1FE6                            l4226 1FBC  
                          l4218 1F86                            l4082 1E92                            l4090 1EE8  
                          l4074 1E44                            l4066 1E20                            l4058 1E04  
                          l5042 3890                            l5034 3844                            l5026 37E4  
                          l5018 3798                            l5130 18C4                            l5122 17D8  
                          l5114 16C8                            l5106 15C2                            l5050 0E46  
                          l5202 4CDA                            l1579 5AD8                            l1587 2740  
                          l3700 451C                            l4148 3DEC                            l4412 541C  
                          l4156 5ACC                            l4164 5AC2                            l5220 4EC0  
                          l5212 4E6C                            l4180 5662                            l4172 5628  
                          l4404 554C                            l4332 2376                            l4324 2322  
                          l4316 22C6                            l4308 2282                            l4260 209A  
                          l4252 2062                            l4244 201E                            l4236 1FE8  
                          l4228 1FCC                            l4092 1EF8                            l4084 1E9E  
                          l4076 1E52                            l4068 1E30                            l4500 244C  
                          l5044 38A8                            l5036 3848                            l5028 37FC  
                          l5140 19DC                            l5132 18CC                            l5124 1898  
                          l5116 1796                            l5108 15DE                            l5060 0F5A  
                          l5052 0E94                            l4422 5880                            l3710 4590  
                          l3702 452E                            l4414 5424                            l4190 5008  
                          l4430 4F2C                            l5310 2DA6                            l5302 2D2E  
                          l5230 56AA                            l4158 5AD0                            l4166 5AC6  
                          l5214 4E90                            l5222 4ECE                            l4182 5664  
                          l4174 562C                            l4406 5592                            l4350 49AA  
                          l4334 2378                            l4326 233C                            l4318 22F0  
                          l4270 20E4                            l4262 20B2                            l4254 206E  
                          l4246 203E                            l4238 1FF8                            l4094 1F08  
                          l4086 1EAC                            l4078 1E68                            l4342 559C  
                          l4510 2592                            l4502 2470                            l5046 38C0  
                          l5038 3860                            l5150 1A86                            l5142 1A1E  
                          l5134 198C                            l5126 18A2                            l5118 17A0  
                          l5070 10EE                            l5062 0F76                            l5054 0E98  
                          l5400 5A66                            l4424 5884                            l3704 455C  
                          l3712 4596                            l3720 45E8                            l4416 542C  
                          l3800 4DDC                            l4192 5014                            l4432 4F50  
                          l4440 4F8E                            l5304 2D52                            l5320 2E06  
                          l5240 2AF8                            l5232 56BE                            l5224 4EE6  
                          l5216 4EA8                            l4176 5634                            l4168 5AB8  
                          l4360 4A18                            l4352 49BA                            l4328 2358  
                          l4336 237E                            l4280 213A                            l4272 20F4  
                          l4264 20BE                            l4256 2078                            l4248 204E  
                          l4096 1F28                            l4088 1EE6                            l4344 55AC  
                          l4520 270C                            l4512 25FE                            l4504 248C  
                          l4600 57A4                            l5160 4766                            l5048 38C4  
                          l5152 1A9A                            l5144 1A24                            l5136 1996  
                          l5128 18AC                            l5080 11D2                            l5072 1106  
                          l5064 101E                            l5056 0EB2                            l5402 5AAC  
                          l4426 5892                            l3714 45A6                            l3706 457C  
                          l3730 462C                            l3722 45EC                            l3650 4B80  
                          l4418 5448                            l3810 4E0A                            l3802 4DE0  
                          l4194 502C                            l4186 4FEC                            l4442 4FA6  
                          l4434 4F68                            l5322 2E1A                            l5314 2DC2  
                          l5250 2B42                            l5242 2B0C                            l5234 56D4  
                          l4530 3450                            l5330 5850                            l5226 4EFE  
                          l5218 4EB4                            l4178 563C                            l4450 488C  
                          l4362 4A26                            l4354 49E8                            l4338 2382  
                          l4290 21DE                            l4282 2156                            l4274 2100  
                          l4266 20CA                            l4258 208E                            l4370 57DE  
                          l4098 1F2C                            l4522 2730                            l4514 2630  
                          l5170 47B0                            l5162 4770                            l4610 579C  
                          l5154 1AA4                            l5146 1A52                            l5138 199C  
                          l5090 136E                            l5082 11EE                            l5074 110A  
                          l5066 1032                            l5058 0EBE                            l5410 42FE  
                          l4428 5896                            l3716 45C6                            l3708 457E  
                          l3740 4694                            l3732 464C                            l3724 45FA  
                          l3652 4B9E                            l3644 4B52                            l3660 55EE  
                          l4380 529C                            l3820 4E3E                            l3812 4E18  
                          l3804 4DE8                            l3900 3904                            l4196 5038  
                          l4188 4FF0                            l4444 4FBE                            l4436 4F74  
                          l4620 4190                            l4700 4132                            l5324 2E26  
                          l5316 2DE6                            l5308 2D82                            l5260 2B9A  
                          l5252 2B5A                            l5244 2B18                            l5236 2ADC  
                          l4540 34F2                            l4532 3470                            l5500 2FEA  
                          l5332 585A                            l5404 59F6                            l5228 4F16  
                          l4460 48DC                            l4364 4A76                            l4356 49F8  
                          l4348 497C                            l4292 21EC                            l4284 2162  
                          l4276 2110                            l4268 20D8                            l4372 57F4  
                          l4516 269C                            l4508 24C4                            l5180 4860  
                          l5172 47BC                            l5164 4774                            l4604 576A  
                          l5148 1A80                            l5092 1372                            l5084 1296  
                          l5076 1124                            l5068 10DA                            l5420 4348  
                          l5412 430A                            l5340 5158                            l3750 470A  
                          l3742 46C2                            l3734 466A                            l3726 461A  
                          l3654 4BD4                            l3646 4B64                            l3662 5600  
                          l3670 5826                            l4382 52AA                            l3822 4E44  
                          l3814 4E1E                            l3806 4DFA                            l3910 3A52  
                          l3902 3966                            l4710 50FC                            l4702 50A8  
                          l4198 5044                            l4446 4FD6                            l4438 4F80  
                          l4630 41DC                            l4622 419C                            l4614 4148  
                          l5270 2BF0                            l5262 2BA0                            l5254 2B60  
                          l5246 2B2E                            l5238 2AF4                            l4550 3590  
                          l4542 350A                            l4534 3488                            l4526 3434  
                          l5510 3048                            l5502 2FEC                            l5326 5A8A  
                          l5334 586A                            l4470 4906                            l4462 48E0  
                          l4454 48A0                            l4366 4A7C                            l4358 4A06  
                          l4294 220A                            l4286 217E                            l4278 212A  
                          l4374 5804                            l4518 26D0                            l5182 486A  
                          l5174 47D4                            l5166 478C                            l5158 474C  
                          l4606 5770                            l5094 138C                            l5086 12B2  
                          l5078 1130                            l5190 4C36                            l5430 4392  
                          l5422 4354                            l5414 431E                            l5406 42DA  
                          l5342 5176                            ?_pad 0011                            l3680 4472  
                          l3752 472A                            l3744 46E2                            l3736 4672  
                          l3728 461E                            l3648 4B76                            l3664 5604  
                          l3672 583E                            l3760 4D06                            l3840 31C0  
                          l3832 3148                            l4384 52D0                            l3816 4E34  
                          l3808 4E02                            l3824 4E4A                            l3904 39AC  
                          l4704 50CC                            l4712 510A                            l4720 5714  
                          l4640 4230                            l4632 41E8                            l4616 416C  
                          l4624 41AA                            l5280 2C3A                            l5272 2BF2  
                          l5264 2BC6                            l5256 2B74                            l5248 2B3A  
                          l4560 364A                            l4552 35CC                            l4544 3542  
                          l4536 34C0                            l4528 3440                            l5520 30B8  
                          l5512 305C                            l5504 3000                            l5336 5874  
                          l5328 584C                            l5360 5690                            l4800 2926  
                          l4480 492E                            l4472 4910                            l4464 48EE  
                          l4456 48CA                            l4448 4874                            l4296 2214  
                          l4288 21A8                            l3920 1AD6                            l3912 1AAA  
                          l5176 47E0                            l5168 4798                            l4392 54FC  
                          l4608 5786                            l5096 1398                            l5088 135A  
                          l5192 4C50                            l5440 43CC                            l5424 4360  
                          l5416 4332                            l5408 42EC                            l5352 51B4  
                          l5344 518E                            l5600 5264                            l3690 44C8  
                          l3682 4492                            l3746 46F4                            l3738 4686  
                          l3658 55E2                            l3666 5816                            l3770 4D4C  
                          l3762 4D14                            l3850 321E                            l3842 31C4  
                          l3834 3168                            l4378 5294                            l3826 4E5A  
                          l3818 4E3C                            l3906 39CC                            l4714 5122  
                          l4706 50E4                            l4650 428A                            l4642 4242  
                          l4634 41FA                            l4626 41C2                            l4618 4184  
                          l5290 2C9A                            l5282 2C52                            l5274 2BF8  
                          l5266 2BDA                            l5258 2B82                            l4562 365C  
                          l4554 35DE                            l4546 3554                            l4538 34D2  
                          l5530 311E                            l5522 30E4                            l5514 3088  
                          l5506 302C                            l5362 56A4                            l5370 4A9C  
                          l4810 2966                            l4802 2928                            l4730 276E  
                          l4722 2742                            l4482 493A                            l4474 491A  
                          l4458 48CC                            l4298 2222                            l3930 1B10  
                          l3922 1AE6                            l3914 1AB6                            l5178 47F8  
                          l4394 5542                            l4386 545C                            l4570 5356  
                          l5098 143A                            l5194 4C5C                            l5186 4C1C  
                          l5450 4426                            l5434 43AA                            l5426 4374  
                          l5418 4344                            l5346 51AE                            l5338 5140  
                          l3692 44D4                            l3684 4496                            l3676 4460  
                          l3748 46FA                            l3780 5744                            l3668 5822  
                          l3772 4D7A                            l3764 4D20                            l3756 4CE2  
                          l3860 32BE                            l3852 3224                            l3844 31E0  
                          l3836 3190                            l3828 4E62                            l3908 39E8  
                          l4708 50F0                            l4716 56EA                            l4652 4296  
                          l4644 424E                            l4636 4206                            l4628 41D0  
                          l4660 3FDE                            l5292 2CBE                            l5284 2C5A  
                          l5276 2C10                            l4564 367A                            l4556 35FC  
                          l4548 3578                            l5532 3132                            l5524 30FE  
                          l5516 30A2                            l5508 3046                            l5364 56A6  
                          l5356 5668                            l5372 4AB0                            l5380 5A36  
                          l5460 53E0                            l4580 59D6                            l4820 29A2  
                          l4812 2970                            l4804 2938                            l4740 27A8  
                          l4732 277E                            l4724 274E                            l4900 3C5C  
                          l4484 494A                            l3940 1B3E                            l3932 1B16  
                          l3924 1AF6                            l3916 1AC4                            l4492 2394  
                          l4572 5976                            l4388 54A2                            l5196 4C60  
                          l5188 4C32                            l5452 443A                            l5444 43E2  
                          l5436 43B6                            l5428 438C                            l3694 44F2  
                          l3686 44A4                            l3678 4464                            l3774 4D8E  
                          l3766 4D34                            l3758 4CF2                            l3870 3366  
                          l3862 32C4                            l3854 322C                            l3846 31FC  
                          l3838 31B0                            l3790 4DAC                            l3782 5930  
                          l4718 56FE                            l4654 42A6                            l4646 425E  
                          l4638 4216                            l4670 4034                            l4662 3FF6  
                          l5286 2C7E                            l5278 2C16                            l4566 3692  
                          l4558 3614                            l5526 3100                            l5518 30A4  
                          l5470 2E7E                            l4910 58EE                            l5358 5678  
                          l5374 4AC4                            l5366 4A80                            l5390 5A50  
                          l5382 5A40                            l5462 53F4                            l4582 59DC  
                          l4830 2A14                            l4822 29B0                            l4814 297E  
                          l4806 294A                            l4750 27D4                            l4742 27AE  
                          l4734 278E                            l4726 275C                            l4902 3C5E  
                          l4486 495A                            l3950 1B72                            l3942 1B40  
                          l3934 1B28                            l3926 1AF8                            l3918 1AC6  
                          l4494 23B4                            l4590 599C                            l4574 597C  
                          l4398 54AC                            l5198 4CA6                            l5454 4454  
                          l5446 43F6                            l5438 43BC                            l5606 5264  
                          l3696 44FA                            l3688 44C4                            l3768 4D48  
                          l3880 33CC                            l3872 3380                            l3864 32CA  
                          l3856 3236                            l3848 320E                            l3792 4DBA  
                          l3784 594C                            l4656 42C0                            l4648 4278  
                          l4680 4078                            l4672 4042                            l4664 4002  
                          l5296 2CDA                            l4568 36C8                            l5528 3114  
                          l5480 2EEC                            l5472 2E90                            l5464 2E44  
                          l4912 58F0                            l5376 4AD4                            l5368 4A8C  
                          l5384 5A42                            l5456 53B4                            l4840 2A80  
                          l4832 2A22                            l4824 29DE                            l4808 2960  
                          l4816 2990                            l4760 280E                            l4752 27E4  
                          l4744 27B4                            l4736 2790                            l4728 275E  
                          l4488 496A                            l3960 1BAE                            l3944 1B50  
                          l3952 1B7A                            l3936 1B2A                            l3928 1B00  
                          l4496 23FC                            l4584 59B6                            l4576 5956  
                          l4592 51B8                            l4920 3E24                            l5448 4416  
                          l3698 450E                            l3778 572A                            l3882 33D2  
                          l3890 3408                            l3874 339A                            l3858 323C  
                          l3866 332E                            l3794 4DC2                            l4690 40D0  
                          l4682 4088                            l4674 404E                            l4666 400E  
                          l4658 3FBA                            l5298 2CFE                            l5490 2F74  
                          l5482 2F18                            l5474 2EBC                            l5466 2E56  
                          l4914 58F2                            l4906 58DE                            l5378 4AE8  
                          l5386 5A4C                            l5458 53C8                            l4850 2ACE  
                          l4842 2A9A                            l4834 2A4C                            l4818 299E  
                          l4762 2824                            l4754 27F4                            l4746 27C2  
                          l4738 2798                            l3970 1BC2                            l3962 1BB2  
                          l3954 1B8A                            l3946 1B60                            l3938 1B30  
                          l4498 2410                            l4586 59BC                            l4578 595C  
                          l4594 521A                            l4930 3E62                            l5396 5A54  
                          l3884 33E4                            l3868 3348                            l3876 33AA  
                          l4596 58B4                            l3796 4DC6                            l3788 4DA8  
                          l4692 40EA                            l4684 40A2                            l4676 405A  
                          l4668 401C                            l5492 2F8E                            l5484 2F32  
                          l5476 2ED6                            l5468 2E72                            l4916 58F4  
                          l4908 58E8                            l5388 5A4E                            l4852 2AD0  
                          l4844 2AB6                            l4828 2A08                            l4836 2A50  
                          l4780 2878                            l4764 2834                            l4772 2854  
                          l4756 27F6                            l4748 27C4                            l4860 3ABE  
                          l3980 1BD6                            l3972 1BC6                            l3964 1BB6  
                          l3956 1B9C                            l3948 1B70                            l4588 5996  
                          l4932 3E6E                            l5580 5228                            l5398 5A5C  
                          l3886 33F0                            l3878 33BC                            l4598 58D0  
                          l3798 4DD4                            l4694 40FC                            l4686 40B4  
                          l4678 406C                            l5494 2F90                            l5486 2F34  
                          l5478 2ED8                            l3894 5908                            l4918 5A18  
                          l4846 2ABA                            l4838 2A6A                            l4790 28CA  
                          l4782 2892                            l4774 2864                            l4766 283C  
                          l4758 27FE                            l4862 3ACE                            l3982 1BDA  
                          l3974 1BCA                            l3966 1BBA                            l3958 1BAA  
                          l3990 1BEA                            l4950 3ECA                            l4934 3E7A  
                          l4926 3E46                            l5590 5244                            l5582 522C  
                          l3888 33F8                            l4696 4108                            l4688 40C0  
                          l5496 2FA4                            l5488 2F48                            l3896 5918  
                          l4848 2AC8                            l4792 28DA                            l4784 28A2  
                          l4776 2864                            l4768 2840                            l4880 3B94  
                          l4872 3B4C                            l4864 3ADC                            l3992 1BEE  
                          l3984 1BDE                            l3976 1BCE                            l3968 1BBE  
                          l4952 3ED6                            l4944 3EA2                            l4936 3E80  
                          l4928 3E4A                            l5592 5248                            l5584 5230  
                          l3898 38E8                            l4698 4118                            l5498 2FD0  
                          l4794 28EE                            l4786 28B2                            l4890 3C14  
                          l4882 3BA0                            l4874 3B54                            l4866 3B22  
                          l3994 1C18                            l3986 1BE2                            l3978 1BD2  
                          l4970 3F32                            l4962 3EFE                            l4954 3EDC  
                          l4946 3EA6                            l4938 3E9A                            l5594 524C  
                          l5586 523C                            l4796 28FC                            l4788 28C2  
                          l4892 3C16                            l4884 3BDC                            l4876 3B60  
                          l4868 3B38                            l3996 1C34                            l3988 1BE6  
                          l4980 3F5A                            l4972 3F38                            l4964 3F02  
                          l4956 3EF6                            l4948 3EBE                            l5596 5250  
                          l5588 5240                            l4798 2908                            l4894 3C1A  
                          l4886 3BE8                            l4878 3B92                            l3998 1C44  
                          l4990 3F94                            l4982 3F5E                            l4974 3F52  
                          l4966 3F1A                            l5598 5264                            l4896 3C3E  
                          l4888 3BF6                            l4992 3FAE                            l4984 3F76  
                          l4968 3F26                            l4898 3C4E                            l4994 3FB4  
                          l4986 3F82                            l4996 36DE                            l4988 3F8E  
                          l4998 36E2                            STR_1 0E16                            STR_2 0E1E  
                          STR_3 0E24                            STR_4 0E31                            STR_5 0E3B  
                          STR_6 0E05                            u3000 4694                            u3001 4690  
                          u3010 46C2                            u3011 46BE                            u3020 470A  
                          u3100 4DFA                            u3021 4706                            u3101 4DF6  
                          u3030 4CF2                            u3110 4E18                            u3031 4CEE  
                          u3111 4E14                            u3040 4D14                            u3200 321E  
                          u3120 4E34                            u4000 22C6                    _BAUD4CONbits 000EE9  
                          u3041 4D10                            u3201 321A                            u3121 4E30  
                          u4001 22C2                            _LATE 000F7D                            u3050 4D6A  
                          u3210 3348                            u3130 4E5A                            u4010 230E  
                          u3051 4D66                            u3211 3344                            u3131 4E56  
                          u4011 230A                            _LATG 000F7F                            u3060 4D7A  
                          u3220 3366                            u3140 3178                            u4100 52EC  
                          u3300 592E                            u4020 233C                            u3061 4D76  
                          u3221 3362                            u3141 3172                            u4101 52E8  
                          u3301 592A                            u4021 2338                            u4110 58AE  
                          u3070 5744                            u3230 3380                            u3150 317A  
                          u3310 3904                            u4030 2376                            u4111 58AA  
                          u3071 5740                            u3231 337C                            u3311 3900  
                          u4031 2372                            u3240 339A                            u3160 3190  
                          u3080 4DBA                            u3320 39E8                            u4120 4FA6  
                          u5000 3B8E                            u4200 495A                            u4040 49AA  
                          u3400 1B50                            u3241 3396                            u3161 318C  
                          u3081 4DB6                            u3321 39E4                            u4121 4FA2  
                          u5001 3B8A                            u4201 4956                            u4041 49A6  
                          u3401 1B4C                            u3250 33AA                            u3170 31C0  
                          u3090 4DD4                            u4130 4FBE                            u5010 3BD8  
                          u4050 49E8                            u3410 1B60                            u4210 23D4  
                          _T2PR 000FBC                            u3251 33A6                            u3171 31BC  
                          u3091 4DD0                            u4131 4FBA                            u5011 3BD4  
                          u4051 49E4                            u3411 1B5C                            u3260 33BC  
                          u3180 31E0                            u4300 3450                            u5020 3BF6  
                          u4140 488C                            u4060 4A06                            u3500 1CA6  
                          u3420 1B9C                            u4220 23FC                            u5100 3FAE  
                          u3261 33B8                            u3181 31DC                            u4301 344C  
                          u5021 3BF2                            u4141 4888                            u4061 4A02  
                          u3501 1CA2                            u3421 1B98                            u4221 23F8  
                          u5101 3FAA                            u3270 33CC                            u3190 320E  
                          u3334 3A42                            u4310 3462                            u5030 3C06  
                          u4150 48C0                            u4070 4A26                            u3510 1CB6  
                          u3430 1BAA                            u3350 1AC4                            u4230 2430  
                          u5110 16C8                            u3271 33C8                            u3191 320A  
                          u3335 3A3E                            u4311 345A                            u5031 3C02  
                          u4071 4A22                            u3511 1CB2                            u3431 1BA6  
                          u3351 1AC0                            u4215 23CA                            u5111 16C4  
                          u3280 33E4                            u3344 3AAC                            u4400 3554  
                          u5040 3C14                            u4160 48EE                            u4080 4A76  
                          u3600 1E14                            u3520 1CE8                            u3440 1C18  
                          u3360 1AD6                            u4240 244C                            u5200 1A80  
                          u5120 1796                            u3281 33E0                            u3345 3AA8  
                          u4401 3550                            u5041 3C10                            u4161 48EA  
                          u4081 4A72                            u3601 1E10                            u3521 1CE4  
                          u3441 1C14                            u3361 1AD2                            u4241 2448  
                          u5201 1A7C                            u5121 1792                            u4410 3566  
                          u4330 349A                            u3290 5918                            u5050 3C4E  
                          u4170 4902                            u4090 57F4                            u3610 1E30  
                          u3530 1CF6                            u3450 1C30                            u3370 1AE6  
                          u4250 248C                            u5210 1A9A                            u5130 17D8  
                          u4411 355E                            u4331 3492                            u3291 5914  
                          u5051 3C4A                            u4171 48FE                            u4155 48B6  
                          u4091 57F0                            u3611 1E2C                            u3531 1CF2  
                          u3451 1C2A                            u3371 1AE2                            u4251 2488  
                          u4235 2426                            u5211 1A96                            u5131 17D4  
                          u2900 4472                            u5300 2CFE                            u4500 365C  
                          u5060 3C5C                            u4180 492A                            u3700 1F08  
                          u3620 1E40                            u3540 1D14                            u3460 1C32  
                          u3380 1B28                            u4260 2592                            u5140 1898  
                          u5220 4CDA                            u2901 446E                            u5301 2CFA  
                          u4501 3658                            u5061 3C58                            u4181 4926  
                          u3701 1F04                            u3621 1E3C                            u3541 1D10  
                          u3381 1B24                            u4261 258E                            u5141 1894  
                          u5221 4CD6                            u2910 44A4                            u5310 2D52  
                          u4510 366E                            u4430 35A2                            u4350 34D2  
                          u5230 4EE6                            u4190 494A                            u3710 1F28  
                          u3630 1E52                            u3550 1D4C                            u3470 1C5A  
                          u3390 1B3E                            u4270 2630                            u5070 3E9A  
                          u5150 18C4                            u2911 44A0                            u5311 2D4E  
                          u4511 3666                            u4431 359A                            u6007 3534  
                          u4351 34CE                            u5231 4EE2                            u4191 4946  
                          u3711 1F24                            u3631 1E4E                            u3551 1D48  
                          u3471 1C56                            u3391 1B3A                            u4271 262C  
                          u5071 3E96                            u5151 18C0                            u2840 4B64  
                          u3800 5008                            u4600 4230                            u5320 2DA6  
                          u4360 34E4                            u4328 3464                            u5240 4EFE  
                          u3720 1F3A                            u3640 1E68                            u3560 1D92  
                          u3480 1C78                            u4280 26F0                            u5080 3EF6  
                          u5160 198C                            u5400 4374                            u2921 44CE  
                          u2841 4B60                            u3801 5004                            u4601 422C  
                          u5321 2DA2                            u6017 3582                            u4361 34DC  
                          u5241 4EFA                            u3721 1F36                            u3641 1E64  
                          u3561 1D8E                            u3481 1C74                            u5081 3EF2  
                          u5161 1988                            u5401 4370                            u2930 44F2  
                          u2850 4B76                            u3810 502C                            u4610 4242  
                          u5330 2DE6                            u5250 2BC6                            u4530 36A4  
                          u4450 35DE                            u3730 1F56                            u3650 1E7E  
                          u3570 1DC8                            u3490 1C98                            u4290 270C  
                          u5090 3F52                            u5170 19DC                            u5410 43A6  
            verify_color@color2 0098                            u2931 44EE                            u2851 4B72  
                          u3811 5028                            u4611 423E                            u6107 407E  
                          u5331 2DE2                            u5251 2BC2                            u4531 369C  
                          u4451 35DA                            u6027 35BE                            u3731 1F52  
                          u3651 1E7A                            u3571 1DC4                            u3491 1C94  
                          u4291 2708                            u5091 3F4E                            u5171 19D8  
                          u5411 43A2                            u2940 451C                            u2860 4B9E  
                          u3740 3C94                            u3820 5076                            u4620 4278  
                          u4700 40FC                            u5260 2BEC                            u4460 35F0  
                          u4428 3568                            u4380 351C                            u4348 349C  
                          u5500 3000                            u3900 2008                            u3660 1E92  
                          u3580 1DD8                            u5180 1A1E                            u5420 43CC  
                          u5340 51AE                            u2941 4518                            u2861 4B9A  
                          u3741 3C90                            u3821 5072                            u4621 4274  
                          u4701 40F8                            u6117 40C6                            u5261 2BE8  
                          u6037 3606                            u4461 35E8                            u4381 3514  
                          u5501 2FFC                            u3901 2004                            u3661 1E8E  
                          u3581 1DD4                            u4285 26E6                            u5181 1A1A  
                          u5421 43C8                            u5341 51AA                            u2950 455C  
                          u2870 4BD4                            u3750 3CDC                            u3830 508E  
                          u4630 428A                            u4710 4132                            u5270 2C3A  
                          u4550 36DC                            u5510 305C                            u3910 203E  
                          u3670 1EAC                            u3590 1E04                            u5190 1A52  
                          u5430 43DE                            u2951 4558                            u2871 4BD0  
                          u3751 3CD8                            u3831 508A                            u6207 5056  
                          u4631 4286                            u4711 412E                            u6127 410E  
                          u5271 2C36                            u4551 36D8                            u6047 363C  
                          u5511 3058                            u3911 203A                            u3671 1EA8  
                          u3591 1E00                            u5191 1A4E                            u5431 43DA  
                          u3840 5A84                            u2960 45A6                            u2880 5624  
                          u3760 3D00                            u4720 5122                            u4640 42C0  
                          u5280 2C7E                            u4528 3670                            u4480 3626  
                          u4448 35A4                            u5520 30B8                            u4800 2824  
                          u3920 204E                            u3680 1EE6                            u4560 5786  
                          u5440 4426                            u3841 5A80                            u2961 45A2  
                          u2881 5620                            u3761 3CFC                            u4721 511E  
                          u6217 5098                            u4641 42BC                            u6137 41A2  
                          u5281 2C7A                            u6057 3684                            u4481 361E  
                          u5521 30B4                            u4801 2820                            u3921 204A  
                          u3681 1EE2                            u4561 5782                            u5441 4422  
                          u2970 45FA                            u2890 583E                            u3770 3DA4  
                          u4730 513A                            u4650 4034                            u5290 2CBE  
                          u4378 34E6                            u5530 3114                            u5450 2E56  
                          u4810 2864                            u3930 21C8                            u3850 1F84  
                          u3690 1EF8                            u4570 579C                            u5370 42FE  
                          u2971 45F6                            u2891 583A                            u3771 3DA0  
                          u4731 5136                            u6227 5102                            u6147 420C  
                          u4651 4030                            u5291 2CBA                            u6067 36BA  
                          u5531 3110                            u5451 2E52                            u4811 2860  
                          u3851 1F80                            u3691 1EF4                            u4571 5798  
                          u5371 42FA                            u2980 462C                            u4580 41C2  
                          u4660 406C                            u4548 36A6                            u5460 2E90  
                          u4900 29DE                            u4820 28DA                            u4740 275C  
                          u3780 5650                            u3940 2222                            u3860 1F96  
                          u5380 431E                            u2981 4628                            u6157 4254  
                          u4581 41BE                            u4661 4068                            u6077 56C8  
                          u5461 2E8C                            u4901 29DA                            u4821 28D6  
                          u4741 2758                            u3781 5648                            u3941 221E  
                          u3861 1F92                            u5381 431A                            u2990 466A  
                          u4590 41FA                            u4670 40A2                            u4478 35F2  
                          u4398 351E                            u5470 2EEC                            u4910 29F4  
                          u4830 28FC                            u4750 276E                            u3950 2242  
                          u3870 1FA6                            u5390 4344                            u2991 4666  
                          u6167 429C                            u4591 41F6                            u4671 409E  
                          u6087 2B8C                            u5471 2EE8                            u4911 29F0  
                          u4831 28F8                            u4751 276A                            u3951 223E  
                          u3935 21BE                            u3871 1FA2                            u5391 4340  
                          u4680 40B4                            u5480 2F48                            u4920 2A08  
                          u4840 2926                            u4760 277E                            u3960 2254  
                          u3880 1FE6                            u6177 5708                            u4681 40B0  
                          u6097 4014                            u5481 2F44                            u4921 2A04  
                          u4841 2922                            u4761 277A                            u3961 2250  
                          u3881 1FE2                            u4690 40EA                            u4498 3628  
                          u5490 2FA4                            u4930 2A22                            u4850 294A  
                          u4770 27C2                            u3970 2282                            u3890 1FF8  
                          u6187 4F86                            u4691 40E6                            u5491 2FA0  
                          u4931 2A1E                            u4851 2946                            u4771 27BE  
                          u3971 227E                            u3891 1FF4                            u5707 0EA4  
                          u4940 2A6A                            u4860 2960                            u4780 27D4  
                          u3980 2298                            u6197 4FC8                            u4941 2A66  
                          u4861 295C                            u4781 27D0                            u3981 2294  
                          u5717 10FA                            u4950 2A9A                            u4870 297E  
                          u4790 27E4                            u3798 5652                            u3990 22AC  
                          u4951 2A96                            u4871 297A                            u4791 27E0  
                          u3991 22A8                            u5807 3772                            u5727 1116  
                          u4960 2AC8                            u4880 299E                            u4961 2AC4  
                          u4881 299A                            u5817 37D6                            u5737 137E  
                          u4890 29B0                            u4970 3ACE                            u4891 29AC  
                          u4971 3ACA                            u5907 47C8                            u5827 3852  
                          u5747 3E54                            u5667 514C                            u4980 3ADC  
                          u4981 3AD8                            u5917 47EC                            u5837 38CE  
                          u5757 3EB0                            u5677 5182                            u4990 3B38  
                          u5927 59E6                            u4991 3B34                            u5847 5966  
                          u5767 3F0C                            u5687 4446                            u5937 53D2  
                          u5857 5986                            u5777 3F68                            u5697 4C42  
                          u5947 4EC6                            u5867 59A6                            u5787 36F6  
                          u5957 4F08                            u5877 59C6                            u5797 3712  
                          u5967 5860                            u5887 4780                            u5977 347A  
                          u5897 47A4                            u5987 34B2                            u5997 34FC  
                          abs@a 0013                            _dbuf 0378                            _main 5228  
                          _dtoa 3148                            _prec 02E5                            _nout 02E1  
                          pad@i 0018                            pad@p 0015                            fsr1h 000FE2  
                          fsr2h 000FDA                            indf1 000FE7                            indf2 000FDF  
                          fsr1l 000FE1                            pad@w 001A                            fsr2l 000FD9  
                          btemp 005F                            _stop 4FEC                            prodh 000FF4  
                          prodl 000FF3                            start 0028                  ?_color_display 0058  
               ___fldiv@new_exp 0020          __end_of_color_read_Red 54AC                 __end_of_HighISR 0028  
                  ___param_bank 000000                  ?_color_predict 0001                           ??_abs 0015  
                         ??_pad 0017                   ___fltol@sign1 0064                 __end_of___aodiv 45E8  
     amb_light_measure@CC_amb_1 0072       amb_light_measure@CC_amb_2 0074       amb_light_measure@CC_amb_3 0076  
               __end_of___fladd 1F6A                           ?_main 0001                           ?_dtoa 001C  
               __end_of___aomod 474C                 __end_of___fldiv 2ADC                 __end_of___awdiv 4E6C  
               __end_of___flneg 5816                 __end_of___flmul 2394                 __end_of___flsub 55E2  
               __end_of___fltol 497C                           ?_stop 001A                 ___awdiv@divisor 0009  
                         _LED_B 59B6                           _LED_C 59D6                           _LED_G 5996  
                         _LED_R 5956                           i2l694 0024                 ___awdiv@counter 000B  
                  vfpfcnvrt@fmt 0042                           _TMR0H 000FD4                           _TMR0L 000FD3  
       __end_of_sendCharSerial4 5A8A      __end_of_I2C_2_Master_Start 5AD6         ??_color_data_collection 005C  
    __end_of_I2C_2_Master_Write 5AAC                 __end_of_compare 57A4                    compare@lower 006A  
                         _flags 00F6                           _color 00F8                    compare@upper 006E  
                         _fputc 4B52                           _fputs 55E2                           pad@fp 0011  
                         _width 02E3                           _putch 5AD8                           _toint 0E01  
                         dtoa@d 001E                           dtoa@i 003E                           dtoa@n 0036  
                         dtoa@p 0030                           dtoa@s 0034                           dtoa@w 0032  
               ??_test_function 00EE            amb_light_measure@amb 006A                           tablat 000FF5  
               __end_of_lroundf 57DE                           ttemp5 0060                           ttemp6 0063  
                         ttemp7 0067                           status 000FD8                           wtemp8 0060  
               __end_of_sprintf 545C                color_display@buf 0079         __end_of_color_read_Blue 554C  
         _I2C_2_Master_RepStart 5AB8                 ??_short_reverse 002A                 ?_color_read_Red 0005  
               __initialization 52F6                    __end_of_main 5294                    __end_of_dtoa 3432  
          __end_of_detect_color 1AAA                    __end_of_stop 50A8          color_data_collection@i 00DE  
        color_data_collection@j 00E0          color_data_collection@k 00E2          color_data_collection@m 005A  
        color_data_collection@x 00E4                          ??_main 005F                          ??_dtoa 0026  
                        ??_stop 001E                   __activetblptr 000001                          ?_LED_B 0001  
                        ?_LED_C 0001                          ?_LED_G 0001                          ?_LED_R 0001  
               _buggylight_init 5A8A                       ??_LED_OFF 0001          _initDCmotors_parameter 4A80  
                  ?_setMotorPWM 000F                          ?_fputc 0001                          ?_fputs 000A  
              ___awdiv@dividend 0007                          ?_putch 0001                          _RC0PPS 000E62  
                        _RC4REG 000EE3                          _RE2PPS 000E74                          _RD5PPS 000E6F  
                        _RC7PPS 000E69                          _RD6PPS 000E70                          i2l5644 000A  
                        i2l5646 001A                          i2l5648 0020              turnLeft@angle_left 0024  
                     ??_HighISR 0001        __end_of_color_click_init 5880                          _RX4PPS 000E15  
                        _TX4REG 000EE4                 ??_color_display 005A                __end_of___xxtofl 3C70  
                 ??_Timer0_init 0001                 ??_color_predict 0058                    vfprintf@cfmt 0056  
                        ___flge 497C                       ??___aodiv 0011                       ??___fladd 0009  
                     ??___aomod 0011                          ___wmul 5930                       ??___fldiv 0017  
                     ??___awdiv 000B                       ??___flneg 0005                       ??___flmul 0030  
                        _action 2E40                       ??___flsub 0019                       ??___fltol 0060  
         __end_of_halfSpeedBack 4F2C                          _goback 2ADC                   compare@result 0070  
                        _memory 033C                          clear_0 5326                          clear_1 5332  
                        clear_2 533E                ___awdiv@quotient 000D                          _second 02EB  
                        _motorL 02D3                          _motorR 02C9                          isa$std 000001  
                        pad@buf 0013                          _roundf 2394                          dtoa@fp 001C  
                        _strlen 5816                       ??_compare 005F                   toggle_light@i 0004  
              __end_of_pin_init 5A16                          fputc@c 0001         toggle_light@lightnumber 0005  
                        fputs@c 000E                          fputs@i 000F                          fputs@s 000A  
                test_function@m 00E6                  test_function@w 00E8                    __mediumconst 0000  
                        tblptrh 000FF7                          tblptrl 000FF6                          tblptru 000FF8  
              ?_sendCharSerial4 0001                       ??_lroundf 005F                     read_color@m 000C  
                        putch@c 0001                __end_of_vfprintf 52F6                          stop@mL 001A  
                        stop@mR 001C               ??_initDCmotorsPWM 0003                       ??_sprintf 0058  
              __end_of_turnLeft 42D6                      ___flge@ff1 0001                      ___flge@ff2 0005  
                  ___xxtofl@arg 000B                    ___xxtofl@exp 000A                    ___xxtofl@val 0001  
              calibrate_white@w 000C                 fullSpeedBack@mL 0020                 fullSpeedBack@mR 0022  
                    __accesstop 0060         __end_of__initialization 5344                   verify_color@m 0092  
                 verify_color@w 0094        __end_of_color_read_Clear 559C                      ___flneg@f1 0001  
      __end_of_color_read_Green 54FC          ?_I2C_2_Master_RepStart 0001              color_predict@color 00DD  
  initDCmotors_parameter@motorL 0001    initDCmotors_parameter@motorR 0003                   ___rparam_used 000001  
                    ___fltol@f1 005B                   __end_of_LED_B 59D6                   __end_of_LED_C 59F6  
                 __end_of_LED_G 59B6                   __end_of_LED_R 5976                ?_color_read_Blue 0005  
               _Interrupts_init 5AAC                  __pcstackCOMRAM 0001                   _fullSpeedBack 4F2C  
                  __pidataBANK0 5AD6                    __pidataBANK2 5ADA         __end_of_buggylight_init 5AA0  
          turnRight@angle_right 0024           _distance_measure$3277 0074                   __end_of_fputc 4C1C  
             detect_color@color 008B                   __end_of_fputs 5626                   __end_of_putch 5ADA  
                 __end_of_toint 0E05             __end_of_Timer0_init 5A72                         ??_LED_B 0001  
                       ??_LED_C 0001                         ??_LED_G 0001                         ??_LED_R 0001  
             ?_distance_measure 006A              ??_distance_measure 0070                         ??_fputc 0005  
                       ??_fputs 000E                         ??_putch 0001                      __pbssBANK0 00F6  
                    __pbssBANK2 02C9                      __pbssBANK3 0300                color_predict@buf 0079  
     distance_measure@amb_light 006E               _color_writetoaddr 5A16                    _T2CLKCONbits 000FBF  
                ?_fullSpeedBack 0020                         ?___flge 0001              ?_color_writetoaddr 0003  
                       ?___wmul 0001                         ?_action 00E0                         ?_goback 0058  
                       ?_roundf 0041             ??_color_writetoaddr 0004                         ?_strlen 0001  
                       _LED_OFF 5976                       ?___xxtofl 0001                         _SP4BRGH 000EE6  
                       _SP4BRGL 000EE5                         _PWM6DCH 000FA3                         _PWM7DCH 000FA0  
                       _SSP2ADD 000ED6                         _SSP2BUF 000ED5    amb_light_measure@upper_bound 006E  
            short_burst_back@mL 0026              short_burst_back@mR 0028                    _detect_color 0E46  
 __end_of_color_data_collection 3FBA         __end_of_Interrupts_init 5AB8          color_writetoaddr@value 0003  
              ??_color_read_Red 0007                         _HighISR 0008       __end_of_color_writetoaddr 5A36  
            _I2C_2_Master_Start 5ACC                      _initUSART4 5A36              _I2C_2_Master_Write 5AA0  
                     ?_pin_init 0001                         __Hparam 0000           test_function@complete 00F2  
                       __Lparam 0000               color_read_Red@tmp 000A                     _Timer0_init 5A54  
       sendStringSerial4@string 0002                         ___aodiv 4460                         ___fladd 1AAA  
                       ___aomod 45E8                         ___fldiv 2742                         ___awdiv 4DA8  
                       ___flneg 57DE                         ___flmul 1F6A                         ___flsub 559C  
                       ___fltol 4874             ?_I2C_2_Master_Start 0001                ?_buggylight_init 0001  
           ?_I2C_2_Master_Write 0001                       ?_vfprintf 0050                    __psmallconst 0E00  
     distance_measure@threshold 007A                         __pcinit 52F6                         __ramtop 0E00  
                    _read_color 5356                       ?_turnLeft 0020                         __ptext0 5228  
                       __ptext1 513C                         __ptext2 42D6                         __ptext3 4C1C  
                       __ptext4 0E46                         __ptext5 576A                         __ptext6 3E24  
                       __ptext7 5356                         __ptext8 51B8                         __ptext9 36DE  
                       _compare 576A         ?_initDCmotors_parameter 0001                       _T2CONbits 000FBD  
                    ??___xxtofl 0005                       _T2HLTbits 000FBE                         _lroundf 57A4  
                 _RxBufWriteCnt 00FD                         goback@i 00DE          distance_measure@CC_amb 0078  
        distance_measure@CG_amb 0072                         _sprintf 540A                         main@rgb 01C8  
          ??_I2C_2_Master_Start 0002            ??_I2C_2_Master_Write 0002            end_of_initialization 5344  
            setMotorPWM@PWMduty 0018                 _CALIBRATION_135 00FF                 _CALIBRATION_180 02ED  
                       fputc@fp 0003           __end_of_test_function 4460                         fputs@fp 000C  
             ?_color_click_init 0001                 test_function@mL 00EA                 test_function@mR 00EC  
               ??_fullSpeedBack 0024                      ??_pin_init 0001              ??_color_click_init 0005  
              _short_burst_back 53B4               __end_of_vfpfcnvrt 3E24           __end_of_short_reverse 56EA  
                       postdec1 000FE5                         postdec2 000FDD                         postinc0 000FEE  
                       postinc1 000FE6                         postinc2 000FDE                         roundf@e 004D  
                       roundf@u 0053                         roundf@x 0041                         roundf@y 0057  
                    ??_vfprintf 0056                         strlen@a 0003                         strlen@s 0001  
               _initDCmotorsPWM 5668                      ??_turnLeft 0025  __end_of_initDCmotors_parameter 4B52  
                     _PORTFbits 000F8E        test_function@stop_signal 00F4               __end_of_turnRight 4148  
                   ___fladd@grs 0010                   ___xxtofl@sign 0009                       _TRISAbits 000F81  
                     _TRISCbits 000F83                       _TRISDbits 000F84                       _TRISEbits 000F85  
                     _TRISFbits 000F86                       _TRISGbits 000F87                       _TRISHbits 000F88  
                   ___fldiv@grs 0022                     ___fldiv@rem 001B                fullSpeedAhead@mL 001A  
              fullSpeedAhead@mR 001C                      goback@buf2 0200                      goback@buf3 0164  
      color_writetoaddr@address 0004         ??_I2C_2_Master_RepStart 0002                 halfSpeedBack@mL 0020  
               halfSpeedBack@mR 0022                      _start_move 02E9                ?_Interrupts_init 0001  
                   ___flmul@grs 0035                   ?_toggle_light 0001               ?_color_read_Clear 0005  
                  _EUSART4RXbuf 0364                    _EUSART4TXbuf 0300               ?_color_read_Green 0005  
                   ?_initUSART4 0001       sendCharSerial4@charToSend 0001                   ?_verify_color 0092  
         __end_of_color_display 5228                      main@motorL 01EC                      main@motorR 01F6  
   amb_light_measure@CC_amb_ave 0070               ??_calibrate_white 000E              ??_color_read_Clear 0007  
                color_display@m 0058              ??_color_read_Green 0007                  detect_color@BB 0085  
                detect_color@BC 007F                  detect_color@BG 0089                  detect_color@GB 007D  
                detect_color@GG 0087                  detect_color@BR 008C                  detect_color@GR 0081  
                detect_color@RB 007B                  detect_color@RG 0079                  detect_color@RR 0083  
         __end_of_color_predict 58DE                  __end_of___flge 4A80                  _fullSpeedAhead 50A8  
                   vfpfcnvrt@ap 0044                     vfpfcnvrt@fp 0040                     vfpfcnvrt@ll 0048  
                __end_of___wmul 5956                  __end_of_action 3148                     ?_read_color 000C  
                __end_of_goback 2E40                  __end_of_roundf 2742              turnRight@delay_135 0026  
            turnRight@delay_180 0028                  __end_of_strlen 584C             color_read_Clear@tmp 000A  
           start_initialization 52F6                     __end_of_abs 576A                     __end_of_pad 4DA8  
                 _TxBufWriteCnt 00FB               turnLeft@delay_135 0026               turnLeft@delay_180 0028  
                ??_toggle_light 0002                  ??_verify_color 0096             color_read_Green@tmp 000A  
                _reverse_square 56EA         __end_of_initDCmotorsPWM 56AA                     vfprintf@fmt 0052  
        __end_of_fullSpeedAhead 513C                        ??___flge 0009                        ??___wmul 0005  
                      ??_action 005E                        ??_goback 005C                 short_reverse@mL 0026  
               short_reverse@mR 0028                     __pdataBANK0 00FE                     __pdataBANK2 02ED  
                      ??_roundf 0045                        ??_strlen 0003                       ___fladd@a 0005  
                     ___fladd@b 0001                        ?_LED_OFF 0001                       ___fldiv@a 0013  
                     ___fldiv@b 000F                       ___flmul@a 002C                       ___flmul@b 0028  
                     ___flsub@a 0015                       ___flsub@b 0011                   __pcstackBANK0 0060  
                 __pcstackBANK1 0100                   __pcstackBANK2 0200                ___aodiv@dividend 0001  
                      ?_HighISR 0001          __end_of_reverse_square 572A                       _dtoa$2912 002E  
                  ?_Timer0_init 0001                 ?_fullSpeedAhead 001A                       __pintcode 0008  
                      ?___aodiv 0001                        ?___fladd 0001                        ?___aomod 0001  
                      ?___fldiv 000F                        ?___awdiv 0007                ___aodiv@quotient 0013  
                      ?___flneg 0001                        ?___flmul 0028                        ?___flsub 0011  
                      ?___fltol 005B              test_function@color 00F3                   _halfSpeedBack 4E6C  
               turnRight@i_1357 002C                 turnRight@i_1358 002E                  turnLeft@i_1332 002C  
                turnLeft@i_1333 002E            I2C_2_Master_Read@ack 0003            I2C_2_Master_Read@tmp 0004  
                      ?_compare 006A                     __smallconst 0E00               _I2C_2_Master_Idle 5908  
             _I2C_2_Master_Init 58DE               _I2C_2_Master_Read 5626               _I2C_2_Master_Stop 5AC2  
        toggle_light@toggletime 0001                    _RxBufReadCnt 00FC        __end_of_short_burst_back 540A  
                      ?_lroundf 0066              ?_I2C_2_Master_Idle 0001              ?_I2C_2_Master_Init 0001  
            ?_I2C_2_Master_Read 0001                   ??_setMotorPWM 0011              ?_I2C_2_Master_Stop 0001  
                     action@buf 0264        initDCmotorsPWM@PWMperiod 0001                        ?_sprintf 0060  
             _sendStringSerial4 5880           _color_data_collection 3E24             ??_I2C_2_Master_Idle 0001  
           ??_I2C_2_Master_Init 0001             ??_I2C_2_Master_Read 0002                  ___wmul@product 0005  
                      _LATAbits 000F79             ??_I2C_2_Master_Stop 0002                        _LATCbits 000F7B  
                      _LATDbits 000F7C                        _LATEbits 000F7D                        _LATFbits 000F7E  
                      _LATGbits 000F7F                        _LATHbits 000F80                 ?_reverse_square 0026  
                      _PIE0bits 000E29              ?_sendStringSerial4 0002                        _PIE4bits 000E2D  
                   turnRight@mL 0020                     turnRight@mR 0022                        _PIR0bits 000E33  
                      _PIR4bits 000E37                        i2u559_40 001A                        i2u559_41 0016  
              ?_initDCmotorsPWM 0001               ??_sendCharSerial4 0001                        _SSP2CON2 000EDA  
           ??_sendStringSerial4 0004                  ?_halfSpeedBack 0020                        _SSP2STAT 000ED8  
                   _array_index 00F9                       _vfpfcnvrt 3C70       __end_of_I2C_2_Master_Idle 5930  
          __end_of_toggle_light 36DE       __end_of_I2C_2_Master_Init 5908       __end_of_I2C_2_Master_Read 5668  
             ___wmul@multiplier 0001                       goback@buf 0100       __end_of_I2C_2_Master_Stop 5ACC  
                  setMotorPWM@m 000F     I2C_2_Master_Write@data_byte 0002            __end_of_verify_color 51B8  
        test_function@amb_light 00F0                       main@white 01D0               ??_color_read_Blue 0007  
                     _stop_move 02E7                   detect_color@m 0071                   detect_color@w 0073  
                  _TxBufReadCnt 00FA                       _turnRight 3FBA                 _calibrate_white 36DE  
     __end_of_sendStringSerial4 58B0               _amb_light_measure 474C   __end_of_I2C_2_Master_RepStart 5AC2  
            color_read_Blue@tmp 000A             __end_of_setMotorPWM 3ABC                      roundf@F527 02DD  
              _distance_measure 4C1C                    ??_initUSART4 0001              ?_amb_light_measure 006A  
                      __Hrparam 0000                      vfprintf@ap 0054                        __Lrparam 0000  
                    vfprintf@fp 0050           __end_of_fullSpeedBack 4FEC                    __Lsmallconst 0E00  
          compare@value2compare 006C             ??_amb_light_measure 006C                      ?_vfpfcnvrt 0040  
                  ??_read_color 000E                 ___aodiv@divisor 0009                 ___aodiv@counter 0011  
                    _ANSELDbits 000EA7                      _ANSELFbits 000EB4                     action@color 02C8  
                    sprintf@fmt 0062                        ___xxtofl 3ABC                      _T0CON0bits 000FD5  
                    _T0CON1bits 000FD6              __end_of_initUSART4 5A54                      ?_turnRight 0020  
                      __ptext10 545C                        __ptext11 54AC                        __ptext20 559C  
                      __ptext12 54FC                        __ptext21 1AAA                        __ptext13 5956  
                      __ptext30 2742                        __ptext22 57DE                        __ptext14 5976  
                      __ptext31 59D6                        __ptext23 1F6A                        __ptext15 5996  
                      __ptext40 5AA0                        __ptext32 53B4                        __ptext24 497C  
                      __ptext16 59B6                        __ptext41 5AC2                        __ptext33 4E6C  
                      __ptext25 4874                        __ptext17 474C                        __ptext50 3FBA  
                      __ptext42 5ACC                        __ptext34 59F6                        __ptext26 554C  
                      __ptext18 57A4                        __ptext51 4148                        __ptext43 5908  
                      __ptext35 5A36                        __ptext27 5AB8                        __ptext19 2394  
                      __ptext60 540A                        __ptext52 56EA                        __ptext44 58DE  
                      __ptext36 4A80                        __ptext28 5626                        __ptext61 5294  
                      __ptext53 4F2C                        __ptext45 5A8A                        __ptext37 5668  
                      __ptext29 3ABC                        __ptext70 45E8                        __ptext62 3C70  
                      __ptext54 4FEC                        __ptext46 2E40                        __ptext38 584C  
                      __ptext71 4460                        __ptext63 3148                        __ptext55 50A8  
                      __ptext47 3432                        __ptext39 5A16                        __ptext72 5880  
                      __ptext64 4CE2                        __ptext56 38E8                        __ptext48 56AA  
                      __ptext73 5A72                        __ptext65 5816                        __ptext57 5930  
                      __ptext49 2ADC                        __ptext74 5A54                        __ptext66 55E2  
                      __ptext58 4DA8                        __ptext75 5AAC                        __ptext67 4B52  
                      __ptext59 58B0                        __ptext68 5AD8                        __ptext69 572A  
     __end_of_amb_light_measure 4874                    _SSP2CON1bits 000ED9                    _SSP2CON2bits 000EDA  
        ?_color_data_collection 005A                  turnRight@delay 0030          test_function@test_code 00F5  
                 turnLeft@delay 0030                        action@mL 00E0                        action@mR 00E2  
                    turnLeft@mL 0020                      turnLeft@mR 0022              __end_of_read_color 53B4  
                      _pin_init 59F6                      turnRight@i 002A                 ??_halfSpeedBack 0024  
                      isa$xinst 000000            distance_measure@stop 007C                      _RC4STAbits 000EE7  
                      int$flags 005F                     _SENSITIVITY 00FE                        goback@mL 0058  
                      goback@mR 005A                        _vfprintf 5294                        _turnLeft 4148  
              ___aomod@dividend 0001         __end_of_calibrate_white 38E8                      _INTCONbits 000FF2  
                   _setMotorPWM 38E8                   ?_detect_color 0071                     _PWM6CONbits 000FA4  
                   _PWM7CONbits 000FA1                        intlevel2 0000                       sprintf@ap 006C  
             ??_buggylight_init 0001                ??_fullSpeedAhead 001E                   _test_function 42D6  
                     turnLeft@i 002A                reverse_square@mL 0026                reverse_square@mR 0028  
                      lroundf@x 0066        ??_initDCmotors_parameter 0005                   _short_reverse 56AA  
               ___aomod@divisor 0009                     ??_vfpfcnvrt 0046                 ___aomod@counter 0011  
              _color_click_init 584C                        sprintf@f 006E                        sprintf@s 0060  
             _detect_color$3276 008E                      _SSP2DATPPS 000E1D                      _SSP2CLKPPS 000E1C  
            distance_measure@mL 006A              distance_measure@mR 006C                  ??_detect_color 0075  
                   ??_turnRight 0025               ?_short_burst_back 0026                   ___fladd@signs 000D  
              ??_reverse_square 002A                      _TX4STAbits 000EE8                    ___aodiv@sign 0012  
            ??_short_burst_back 002A                 _sendCharSerial4 5A72                    ___fladd@aexp 000E  
                  ___fladd@bexp 000F                  ?_test_function 00E6                    _toggle_light 3432  
                  ___aomod@sign 0012                    _verify_color 513C                     _roundf$3278 004F  
                   _roundf$3279 0049                   _color_display 51B8  
