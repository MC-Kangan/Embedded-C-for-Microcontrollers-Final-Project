

Microchip MPLAB XC8 Assembler V2.35 build 20211206165544 
                                                                                               Tue Mar 15 12:16:20 2022

Microchip MPLAB XC8 C Compiler v2.35 (Free license) build 20211206165544 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=3
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=3
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=3
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=3
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=3
    48                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=3
    49                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=2
    50                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=2
    51                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    52                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=2
    53                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=2
    54                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=2
    55                           	psect	text41,global,reloc=2,class=CODE,delta=1
    56                           	psect	text42,global,reloc=2,class=CODE,delta=1
    57                           	psect	text43,global,reloc=2,class=CODE,delta=1
    58                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=2
    59                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=2
    60                           	psect	text46,global,reloc=2,class=CODE,delta=1
    61                           	psect	text47,global,reloc=2,class=CODE,delta=1
    62                           	psect	text48,global,reloc=2,class=CODE,delta=1
    63                           	psect	text49,global,reloc=2,class=CODE,delta=1
    64                           	psect	text50,global,reloc=2,class=CODE,delta=1
    65                           	psect	text51,global,reloc=2,class=CODE,delta=1
    66                           	psect	text52,global,reloc=2,class=CODE,delta=1
    67                           	psect	text53,global,reloc=2,class=CODE,delta=1
    68                           	psect	text54,global,reloc=2,class=CODE,delta=1
    69                           	psect	text55,global,reloc=2,class=CODE,delta=1
    70                           	psect	text56,global,reloc=2,class=CODE,delta=1
    71                           	psect	text57,global,reloc=2,class=CODE,delta=1
    72                           	psect	text58,global,reloc=2,class=CODE,delta=1
    73                           	psect	text59,global,reloc=2,class=CODE,delta=1
    74                           	psect	text60,global,reloc=2,class=CODE,delta=1
    75                           	psect	text61,global,reloc=2,class=CODE,delta=1
    76                           	psect	text62,global,reloc=2,class=CODE,delta=1
    77                           	psect	text63,global,reloc=2,class=CODE,delta=1
    78                           	psect	text64,global,reloc=2,class=CODE,delta=1
    79                           	psect	text65,global,reloc=2,class=CODE,delta=1
    80                           	psect	text66,global,reloc=2,class=CODE,delta=1
    81                           	psect	text67,global,reloc=2,class=CODE,delta=1
    82                           	psect	text68,global,reloc=2,class=CODE,delta=1
    83                           	psect	text69,global,reloc=2,class=CODE,delta=1
    84                           	psect	text70,global,reloc=2,class=CODE,delta=1
    85                           	psect	text71,global,reloc=2,class=CODE,delta=1
    86                           	psect	text72,global,reloc=2,class=CODE,delta=1
    87                           	psect	text73,global,reloc=2,class=CODE,delta=1
    88                           	psect	text74,global,reloc=2,class=CODE,delta=1
    89                           	psect	text75,global,reloc=2,class=CODE,delta=1,group=2
    90                           	psect	text76,global,reloc=2,class=CODE,delta=1,group=2
    91                           	psect	text77,global,reloc=2,class=CODE,delta=1
    92                           	psect	text78,global,reloc=2,class=CODE,delta=1
    93                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    94                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    95                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    96                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    97                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    98                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    99  0000                     
   100                           ; Version 2.35
   101                           ; Generated 05/05/2021 GMT
   102                           ; 
   103                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
   104                           ; All rights reserved.
   105                           ; 
   106                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   107                           ; 
   108                           ; Redistribution and use in source and binary forms, with or without modification, are
   109                           ; permitted provided that the following conditions are met:
   110                           ; 
   111                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   112                           ;        conditions and the following disclaimer.
   113                           ; 
   114                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   115                           ;        of conditions and the following disclaimer in the documentation and/or other
   116                           ;        materials provided with the distribution. Publication is not required when
   117                           ;        this file is used in an embedded application.
   118                           ; 
   119                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   120                           ;        software without specific prior written permission.
   121                           ; 
   122                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   123                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   124                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   125                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   126                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   127                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   128                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   129                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   130                           ; 
   131                           ; 
   132                           ; Code-generator required, PIC18F67K40 Definitions
   133                           ; 
   134                           ; SFR Addresses
   135  0000                     
   136                           	psect	idataBANK0
   137  005D8A                     __pidataBANK0:
   138                           	callstack 0
   139                           
   140                           ;initializer for _SENSITIVITY
   141  005D8A  0A                 	db	10
   142                           
   143                           ;initializer for _CALIBRATION_180
   144  005D8B  0A                 	db	10
   145                           
   146                           ;initializer for _CALIBRATION_135
   147  005D8C  0F                 	db	15
   148                           
   149                           	psect	smallconst
   150  000E00                     __psmallconst:
   151                           	callstack 0
   152  000E00  00                 	db	0
   153  000E01  0000               	dw	0
   154  000E03  4B00               	dw	19200
   155  000E05                     __end_of_toint:
   156                           	callstack 0
   157  0000                     _TX4REG	set	3812
   158  0000                     _RC4STAbits	set	3815
   159  0000                     _SP4BRGH	set	3814
   160  0000                     _LATEbits	set	3965
   161  0000                     _TRISGbits	set	3975
   162  0000                     _TRISEbits	set	3973
   163  0000                     _LATGbits	set	3967
   164  0000                     _LATFbits	set	3966
   165  0000                     _TRISFbits	set	3974
   166  0000                     _SSP2CON2bits	set	3802
   167  0000                     _LATG	set	3967
   168  0000                     _LATE	set	3965
   169  0000                     _RX4PPS	set	3605
   170  0000                     _SSP2CLKPPS	set	3612
   171  0000                     _SSP2DATPPS	set	3613
   172  0000                     _ANSELDbits	set	3751
   173  0000                     _SSP2ADD	set	3798
   174  0000                     _SSP2CON1bits	set	3801
   175  0000                     _LATAbits	set	3961
   176  0000                     _LATDbits	set	3964
   177  0000                     _LATHbits	set	3968
   178  0000                     _TRISDbits	set	3972
   179  0000                     _TRISHbits	set	3976
   180  0000                     _PORTFbits	set	3982
   181  0000                     _T2PR	set	4028
   182  0000                     _T2CONbits	set	4029
   183  0000                     _PWM7DCH	set	4000
   184  0000                     _PWM6DCH	set	4003
   185  0000                     _TRISAbits	set	3969
   186  0000                     _TRISCbits	set	3971
   187  0000                     _LATCbits	set	3963
   188  0000                     _RC4REG	set	3811
   189  0000                     _SP4BRGL	set	3813
   190  0000                     _TX4STAbits	set	3816
   191  0000                     _BAUD4CONbits	set	3817
   192  0000                     _SSP2CON2	set	3802
   193  0000                     _SSP2STAT	set	3800
   194  0000                     _ANSELFbits	set	3764
   195  0000                     _SSP2BUF	set	3797
   196  0000                     _PIE0bits	set	3625
   197  0000                     _PIR4bits	set	3639
   198  0000                     _RC0PPS	set	3682
   199  0000                     _RC7PPS	set	3689
   200  0000                     _RD5PPS	set	3695
   201  0000                     _RE2PPS	set	3700
   202  0000                     _RD6PPS	set	3696
   203  0000                     _TMR0L	set	4051
   204  0000                     _TMR0H	set	4052
   205  0000                     _T0CON0bits	set	4053
   206  0000                     _T2CLKCONbits	set	4031
   207  0000                     _T2HLTbits	set	4030
   208  0000                     _PWM6CONbits	set	4004
   209  0000                     _PWM7CONbits	set	4001
   210  0000                     _T0CON1bits	set	4054
   211  0000                     _INTCONbits	set	4082
   212  0000                     _PIR0bits	set	3635
   213  000E05                     STR_1:
   214                           
   215                           ; BSR set to: 14
   216  000E05  25                 	db	37
   217  000E06  64                 	db	100	;'d'
   218  000E07  09                 	db	9
   219  000E08  25                 	db	37
   220  000E09  64                 	db	100	;'d'
   221  000E0A  09                 	db	9
   222  000E0B  25                 	db	37
   223  000E0C  64                 	db	100	;'d'
   224  000E0D  09                 	db	9
   225  000E0E  25                 	db	37
   226  000E0F  64                 	db	100	;'d'
   227  000E10  0D                 	db	13
   228  000E11  0A                 	db	10
   229  000E12  00                 	db	0
   230  000E13  00                 	db	0	; dummy byte at the end
   231  0000                     
   232                           ; #config settings
   233                           
   234                           	psect	cinit
   235  00576E                     __pcinit:
   236                           	callstack 0
   237  00576E                     start_initialization:
   238                           	callstack 0
   239  00576E                     __initialization:
   240                           	callstack 0
   241                           
   242                           ; Initialize objects allocated to BANK0 (3 bytes)
   243                           ; load TBLPTR registers with __pidataBANK0
   244  00576E  0E8A               	movlw	low __pidataBANK0
   245  005770  6EF6               	movwf	tblptrl,c
   246  005772  0E5D               	movlw	high __pidataBANK0
   247  005774  6EF7               	movwf	tblptrh,c
   248  005776  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   249  005778  6EF8               	movwf	tblptru,c
   250  00577A  0009               	tblrd		*+	;fetch initializer
   251  00577C  CFF5 F0FC          	movff	tablat,__pdataBANK0
   252  005780  0009               	tblrd		*+	;fetch initializer
   253  005782  CFF5 F0FD          	movff	tablat,__pdataBANK0+1
   254  005786  0009               	tblrd		*+	;fetch initializer
   255  005788  CFF5 F0FE          	movff	tablat,__pdataBANK0+2
   256                           
   257                           ; Clear objects allocated to BANK1 (106 bytes)
   258  00578C  EE01  F000         	lfsr	0,__pbssBANK1
   259  005790  0E6A               	movlw	106
   260  005792                     clear_0:
   261  005792  6AEE               	clrf	postinc0,c
   262  005794  06E8               	decf	wreg,f,c
   263  005796  E1FD               	bnz	clear_0
   264                           
   265                           ; Clear objects allocated to BANK0 (4 bytes)
   266  005798  0100               	movlb	0
   267  00579A  6BFB               	clrf	(__pbssBANK0+3)& (0+255),b
   268  00579C  6BFA               	clrf	(__pbssBANK0+2)& (0+255),b
   269  00579E  6BF9               	clrf	(__pbssBANK0+1)& (0+255),b
   270  0057A0  6BF8               	clrf	__pbssBANK0& (0+255),b
   271  0057A2                     end_of_initialization:
   272                           	callstack 0
   273  0057A2                     __end_of__initialization:
   274                           	callstack 0
   275  0057A2  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   276  0057A4  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   277  0057A6  0E00               	movlw	low (__Lsmallconst shr (0+16))
   278  0057A8  6EF8               	movwf	tblptru,c
   279  0057AA  0E0E               	movlw	high __Lsmallconst
   280  0057AC  6EF7               	movwf	tblptrh,c
   281  0057AE  0100               	movlb	0
   282  0057B0  EFFD  F017         	goto	_main	;jump to C main() function
   283                           
   284                           	psect	bssBANK0
   285  0000F8                     __pbssBANK0:
   286                           	callstack 0
   287  0000F8                     _prec:
   288                           	callstack 0
   289  0000F8                     	ds	2
   290  0000FA                     _flags:
   291                           	callstack 0
   292  0000FA                     	ds	2
   293                           
   294                           	psect	dataBANK0
   295  0000FC                     __pdataBANK0:
   296                           	callstack 0
   297  0000FC                     _SENSITIVITY:
   298                           	callstack 0
   299  0000FC                     	ds	1
   300  0000FD                     _CALIBRATION_180:
   301                           	callstack 0
   302  0000FD                     	ds	1
   303  0000FE                     _CALIBRATION_135:
   304                           	callstack 0
   305  0000FE                     	ds	1
   306                           
   307                           	psect	bssBANK1
   308  000100                     __pbssBANK1:
   309                           	callstack 0
   310  000100                     _memory:
   311                           	callstack 0
   312  000100                     	ds	40
   313  000128                     _motorR:
   314                           	callstack 0
   315  000128                     	ds	9
   316  000131                     _motorL:
   317                           	callstack 0
   318  000131                     	ds	9
   319  00013A                     roundf@F527:
   320                           	callstack 0
   321  00013A                     	ds	4
   322  00013E                     _nout:
   323                           	callstack 0
   324  00013E                     	ds	2
   325  000140                     _width:
   326                           	callstack 0
   327  000140                     	ds	2
   328  000142                     _stop_move:
   329                           	callstack 0
   330  000142                     	ds	2
   331  000144                     _start_move:
   332                           	callstack 0
   333  000144                     	ds	2
   334  000146                     _centisecond:
   335                           	callstack 0
   336  000146                     	ds	2
   337  000148                     _color:
   338                           	callstack 0
   339  000148                     	ds	1
   340  000149                     _array_index:
   341                           	callstack 0
   342  000149                     	ds	1
   343  00014A                     _dbuf:
   344                           	callstack 0
   345  00014A                     	ds	32
   346                           
   347                           	psect	cstackBANK1
   348  00016A                     __pcstackBANK1:
   349                           	callstack 0
   350  00016A                     main@amb:
   351                           	callstack 0
   352                           
   353                           ; 8 bytes @ 0x0
   354  00016A                     	ds	8
   355  000172                     main@amb_light:
   356                           	callstack 0
   357                           
   358                           ; 2 bytes @ 0x8
   359  000172                     	ds	2
   360  000174                     main@setup:
   361                           	callstack 0
   362                           
   363                           ; 1 bytes @ 0xA
   364  000174                     	ds	1
   365  000175                     main@stop_signal:
   366                           	callstack 0
   367                           
   368                           ; 1 bytes @ 0xB
   369  000175                     	ds	1
   370  000176                     main@rgb:
   371                           	callstack 0
   372                           
   373                           ; 8 bytes @ 0xC
   374  000176                     	ds	8
   375  00017E                     main@white:
   376                           	callstack 0
   377                           
   378                           ; 28 bytes @ 0x14
   379  00017E                     	ds	28
   380  00019A                     main@motorL:
   381                           	callstack 0
   382                           
   383                           ; 9 bytes @ 0x30
   384  00019A                     	ds	9
   385  0001A3                     main@motorR:
   386                           	callstack 0
   387                           
   388                           ; 9 bytes @ 0x39
   389  0001A3                     	ds	9
   390                           
   391                           	psect	cstackBANK0
   392  000060                     __pcstackBANK0:
   393                           	callstack 0
   394  000060                     ??___fltol:
   395  000060                     ?_sprintf:
   396                           	callstack 0
   397  000060                     sprintf@s:
   398                           	callstack 0
   399                           
   400                           ; 2 bytes @ 0x0
   401  000060                     	ds	2
   402  000062                     sprintf@fmt:
   403                           	callstack 0
   404                           
   405                           ; 2 bytes @ 0x2
   406  000062                     	ds	2
   407  000064                     ___fltol@sign1:
   408                           	callstack 0
   409                           
   410                           ; 1 bytes @ 0x4
   411  000064                     	ds	1
   412  000065                     ___fltol@exp1:
   413                           	callstack 0
   414                           
   415                           ; 1 bytes @ 0x5
   416  000065                     	ds	1
   417  000066                     ?_lroundf:
   418                           	callstack 0
   419  000066                     lroundf@x:
   420                           	callstack 0
   421                           
   422                           ; 4 bytes @ 0x6
   423  000066                     	ds	4
   424  00006A                     ?_amb_light_measure:
   425                           	callstack 0
   426  00006A                     compare@lower:
   427                           	callstack 0
   428  00006A                     amb_light_measure@amb:
   429                           	callstack 0
   430  00006A                     distance_measure@mL:
   431                           	callstack 0
   432                           
   433                           ; 2 bytes @ 0xA
   434  00006A                     	ds	2
   435  00006C                     ??_amb_light_measure:
   436  00006C                     compare@value2compare:
   437                           	callstack 0
   438  00006C                     distance_measure@mR:
   439                           	callstack 0
   440  00006C                     sprintf@ap:
   441                           	callstack 0
   442                           
   443                           ; 2 bytes @ 0xC
   444  00006C                     	ds	2
   445  00006E                     compare@upper:
   446                           	callstack 0
   447  00006E                     amb_light_measure@upper_bound:
   448                           	callstack 0
   449  00006E                     distance_measure@amb_light:
   450                           	callstack 0
   451  00006E                     sprintf@f:
   452                           	callstack 0
   453                           
   454                           ; 11 bytes @ 0xE
   455  00006E                     	ds	2
   456  000070                     ??_distance_measure:
   457  000070                     compare@result:
   458                           	callstack 0
   459  000070                     amb_light_measure@CC_amb_ave:
   460                           	callstack 0
   461                           
   462                           ; 2 bytes @ 0x10
   463  000070                     	ds	1
   464  000071                     detect_color@m:
   465                           	callstack 0
   466                           
   467                           ; 2 bytes @ 0x11
   468  000071                     	ds	1
   469  000072                     amb_light_measure@CC_amb_1:
   470                           	callstack 0
   471  000072                     distance_measure@CG_amb:
   472                           	callstack 0
   473                           
   474                           ; 2 bytes @ 0x12
   475  000072                     	ds	1
   476  000073                     detect_color@w:
   477                           	callstack 0
   478                           
   479                           ; 2 bytes @ 0x13
   480  000073                     	ds	1
   481  000074                     amb_light_measure@CC_amb_2:
   482                           	callstack 0
   483  000074                     _distance_measure$3253:
   484                           	callstack 0
   485                           
   486                           ; 4 bytes @ 0x14
   487  000074                     	ds	1
   488  000075                     ??_detect_color:
   489                           
   490                           ; 1 bytes @ 0x15
   491  000075                     	ds	1
   492  000076                     amb_light_measure@CC_amb_3:
   493                           	callstack 0
   494                           
   495                           ; 2 bytes @ 0x16
   496  000076                     	ds	2
   497  000078                     distance_measure@CC_amb:
   498                           	callstack 0
   499                           
   500                           ; 2 bytes @ 0x18
   501  000078                     	ds	1
   502  000079                     detect_color@RG:
   503                           	callstack 0
   504  000079                     color_display@buf:
   505                           	callstack 0
   506  000079                     color_predict@buf:
   507                           	callstack 0
   508                           
   509                           ; 100 bytes @ 0x19
   510  000079                     	ds	1
   511  00007A                     distance_measure@threshold:
   512                           	callstack 0
   513                           
   514                           ; 2 bytes @ 0x1A
   515  00007A                     	ds	1
   516  00007B                     detect_color@BC:
   517                           	callstack 0
   518                           
   519                           ; 2 bytes @ 0x1B
   520  00007B                     	ds	1
   521  00007C                     distance_measure@stop:
   522                           	callstack 0
   523                           
   524                           ; 1 bytes @ 0x1C
   525  00007C                     	ds	1
   526  00007D                     detect_color@GR:
   527                           	callstack 0
   528                           
   529                           ; 2 bytes @ 0x1D
   530  00007D                     	ds	2
   531  00007F                     detect_color@BB:
   532                           	callstack 0
   533                           
   534                           ; 2 bytes @ 0x1F
   535  00007F                     	ds	2
   536  000081                     detect_color@RB:
   537                           	callstack 0
   538                           
   539                           ; 2 bytes @ 0x21
   540  000081                     	ds	2
   541  000083                     detect_color@GB:
   542                           	callstack 0
   543                           
   544                           ; 2 bytes @ 0x23
   545  000083                     	ds	2
   546  000085                     detect_color@BR:
   547                           	callstack 0
   548                           
   549                           ; 2 bytes @ 0x25
   550  000085                     	ds	2
   551  000087                     detect_color@GG:
   552                           	callstack 0
   553                           
   554                           ; 2 bytes @ 0x27
   555  000087                     	ds	2
   556  000089                     detect_color@color:
   557                           	callstack 0
   558                           
   559                           ; 1 bytes @ 0x29
   560  000089                     	ds	1
   561  00008A                     detect_color@RR:
   562                           	callstack 0
   563                           
   564                           ; 2 bytes @ 0x2A
   565  00008A                     	ds	2
   566  00008C                     detect_color@BG:
   567                           	callstack 0
   568                           
   569                           ; 2 bytes @ 0x2C
   570  00008C                     	ds	2
   571  00008E                     _detect_color$3252:
   572                           	callstack 0
   573                           
   574                           ; 4 bytes @ 0x2E
   575  00008E                     	ds	4
   576  000092                     verify_color@m:
   577                           	callstack 0
   578                           
   579                           ; 2 bytes @ 0x32
   580  000092                     	ds	2
   581  000094                     verify_color@w:
   582                           	callstack 0
   583                           
   584                           ; 2 bytes @ 0x34
   585  000094                     	ds	2
   586  000096                     ??_verify_color:
   587                           
   588                           ; 1 bytes @ 0x36
   589  000096                     	ds	2
   590  000098                     verify_color@color2:
   591                           	callstack 0
   592                           
   593                           ; 2 bytes @ 0x38
   594  000098                     	ds	2
   595  00009A                     verify_color@color:
   596                           	callstack 0
   597                           
   598                           ; 1 bytes @ 0x3A
   599  00009A                     	ds	67
   600  0000DD                     color_predict@color:
   601                           	callstack 0
   602                           
   603                           ; 1 bytes @ 0x7D
   604  0000DD                     	ds	1
   605  0000DE                     color_data_collection@i:
   606                           	callstack 0
   607                           
   608                           ; 2 bytes @ 0x7E
   609  0000DE                     	ds	2
   610  0000E0                     color_data_collection@j:
   611                           	callstack 0
   612                           
   613                           ; 2 bytes @ 0x80
   614  0000E0                     	ds	2
   615  0000E2                     color_data_collection@k:
   616                           	callstack 0
   617                           
   618                           ; 2 bytes @ 0x82
   619  0000E2                     	ds	2
   620  0000E4                     color_data_collection@x:
   621                           	callstack 0
   622                           
   623                           ; 2 bytes @ 0x84
   624  0000E4                     	ds	2
   625  0000E6                     test_function@m:
   626                           	callstack 0
   627                           
   628                           ; 2 bytes @ 0x86
   629  0000E6                     	ds	2
   630  0000E8                     test_function@w:
   631                           	callstack 0
   632                           
   633                           ; 2 bytes @ 0x88
   634  0000E8                     	ds	2
   635  0000EA                     test_function@mL:
   636                           	callstack 0
   637                           
   638                           ; 2 bytes @ 0x8A
   639  0000EA                     	ds	2
   640  0000EC                     test_function@mR:
   641                           	callstack 0
   642                           
   643                           ; 2 bytes @ 0x8C
   644  0000EC                     	ds	2
   645  0000EE                     ??_test_function:
   646                           
   647                           ; 1 bytes @ 0x8E
   648  0000EE                     	ds	2
   649  0000F0                     test_function@amb_light:
   650                           	callstack 0
   651                           
   652                           ; 2 bytes @ 0x90
   653  0000F0                     	ds	2
   654  0000F2                     test_function@complete:
   655                           	callstack 0
   656                           
   657                           ; 1 bytes @ 0x92
   658  0000F2                     	ds	1
   659  0000F3                     test_function@color:
   660                           	callstack 0
   661                           
   662                           ; 1 bytes @ 0x93
   663  0000F3                     	ds	1
   664  0000F4                     test_function@stop_signal:
   665                           	callstack 0
   666                           
   667                           ; 1 bytes @ 0x94
   668  0000F4                     	ds	1
   669  0000F5                     test_function@test_code:
   670                           	callstack 0
   671                           
   672                           ; 1 bytes @ 0x95
   673  0000F5                     	ds	1
   674  0000F6                     ??_main:
   675                           
   676                           ; 1 bytes @ 0x96
   677  0000F6                     	ds	2
   678                           
   679                           	psect	cstackCOMRAM
   680  000001                     __pcstackCOMRAM:
   681                           	callstack 0
   682  000001                     ??_LED_OFF:
   683  000001                     ??_LED_R:
   684  000001                     ??_LED_C:
   685  000001                     ??_LED_B:
   686  000001                     ??_LED_G:
   687  000001                     ??_I2C_2_Master_Idle:
   688  000001                     ?_strlen:
   689                           	callstack 0
   690  000001                     ?___wmul:
   691                           	callstack 0
   692  000001                     ?___fladd:
   693                           	callstack 0
   694  000001                     ?___flneg:
   695                           	callstack 0
   696  000001                     ?___xxtofl:
   697                           	callstack 0
   698  000001                     ?___aodiv:
   699                           	callstack 0
   700  000001                     ?___aomod:
   701                           	callstack 0
   702  000001                     toggle_light@toggletime:
   703                           	callstack 0
   704  000001                     sendCharSerial4@charToSend:
   705                           	callstack 0
   706  000001                     initDCmotorsPWM@PWMperiod:
   707                           	callstack 0
   708  000001                     initDCmotors_parameter@motorL:
   709                           	callstack 0
   710  000001                     ___wmul@multiplier:
   711                           	callstack 0
   712  000001                     fputc@c:
   713                           	callstack 0
   714  000001                     strlen@s:
   715                           	callstack 0
   716  000001                     ___flge@ff1:
   717                           	callstack 0
   718  000001                     ___flneg@f1:
   719                           	callstack 0
   720  000001                     ___fladd@b:
   721                           	callstack 0
   722  000001                     ___xxtofl@val:
   723                           	callstack 0
   724  000001                     ___aodiv@dividend:
   725                           	callstack 0
   726  000001                     ___aomod@dividend:
   727                           	callstack 0
   728                           
   729                           ; 8 bytes @ 0x0
   730  000001                     	ds	1
   731  000002                     ??_I2C_2_Master_Read:
   732  000002                     ??_toggle_light:
   733  000002                     I2C_2_Master_Write@data_byte:
   734                           	callstack 0
   735  000002                     sendStringSerial4@string:
   736                           	callstack 0
   737                           
   738                           ; 2 bytes @ 0x1
   739  000002                     	ds	1
   740  000003                     color_writetoaddr@value:
   741                           	callstack 0
   742  000003                     I2C_2_Master_Read@ack:
   743                           	callstack 0
   744  000003                     initDCmotors_parameter@motorR:
   745                           	callstack 0
   746  000003                     ___wmul@multiplicand:
   747                           	callstack 0
   748  000003                     fputc@fp:
   749                           	callstack 0
   750  000003                     strlen@a:
   751                           	callstack 0
   752                           
   753                           ; 2 bytes @ 0x2
   754  000003                     	ds	1
   755  000004                     toggle_light@i:
   756                           	callstack 0
   757  000004                     color_writetoaddr@address:
   758                           	callstack 0
   759  000004                     I2C_2_Master_Read@tmp:
   760                           	callstack 0
   761                           
   762                           ; 1 bytes @ 0x3
   763  000004                     	ds	1
   764  000005                     ??_fputc:
   765  000005                     ??_color_click_init:
   766  000005                     ??___xxtofl:
   767  000005                     ?_color_read_Red:
   768                           	callstack 0
   769  000005                     ?_color_read_Blue:
   770                           	callstack 0
   771  000005                     ?_color_read_Green:
   772                           	callstack 0
   773  000005                     ?_color_read_Clear:
   774                           	callstack 0
   775  000005                     toggle_light@lightnumber:
   776                           	callstack 0
   777  000005                     ___wmul@product:
   778                           	callstack 0
   779  000005                     ___flge@ff2:
   780                           	callstack 0
   781  000005                     ___fladd@a:
   782                           	callstack 0
   783                           
   784                           ; 4 bytes @ 0x4
   785  000005                     	ds	2
   786  000007                     ??_color_read_Red:
   787  000007                     ??_color_read_Blue:
   788  000007                     ??_color_read_Green:
   789  000007                     ??_color_read_Clear:
   790  000007                     ?___awdiv:
   791                           	callstack 0
   792  000007                     ___awdiv@dividend:
   793                           	callstack 0
   794                           
   795                           ; 2 bytes @ 0x6
   796  000007                     	ds	2
   797  000009                     ??___fladd:
   798  000009                     ??___flge:
   799  000009                     ___xxtofl@sign:
   800                           	callstack 0
   801  000009                     ___awdiv@divisor:
   802                           	callstack 0
   803  000009                     ___aodiv@divisor:
   804                           	callstack 0
   805  000009                     ___aomod@divisor:
   806                           	callstack 0
   807                           
   808                           ; 8 bytes @ 0x8
   809  000009                     	ds	1
   810  00000A                     ___xxtofl@exp:
   811                           	callstack 0
   812  00000A                     color_read_Red@tmp:
   813                           	callstack 0
   814  00000A                     color_read_Blue@tmp:
   815                           	callstack 0
   816  00000A                     color_read_Green@tmp:
   817                           	callstack 0
   818  00000A                     color_read_Clear@tmp:
   819                           	callstack 0
   820  00000A                     fputs@s:
   821                           	callstack 0
   822                           
   823                           ; 2 bytes @ 0x9
   824  00000A                     	ds	1
   825  00000B                     ___awdiv@counter:
   826                           	callstack 0
   827  00000B                     ___xxtofl@arg:
   828                           	callstack 0
   829                           
   830                           ; 4 bytes @ 0xA
   831  00000B                     	ds	1
   832  00000C                     ___awdiv@sign:
   833                           	callstack 0
   834  00000C                     read_color@m:
   835                           	callstack 0
   836  00000C                     calibrate_white@w:
   837                           	callstack 0
   838  00000C                     fputs@fp:
   839                           	callstack 0
   840                           
   841                           ; 2 bytes @ 0xB
   842  00000C                     	ds	1
   843  00000D                     ___fladd@signs:
   844                           	callstack 0
   845  00000D                     ___awdiv@quotient:
   846                           	callstack 0
   847                           
   848                           ; 2 bytes @ 0xC
   849  00000D                     	ds	1
   850  00000E                     ??_calibrate_white:
   851  00000E                     ___fladd@aexp:
   852                           	callstack 0
   853  00000E                     fputs@c:
   854                           	callstack 0
   855                           
   856                           ; 1 bytes @ 0xD
   857  00000E                     	ds	1
   858  00000F                     ?___fldiv:
   859                           	callstack 0
   860  00000F                     ___fladd@bexp:
   861                           	callstack 0
   862  00000F                     setMotorPWM@m:
   863                           	callstack 0
   864  00000F                     fputs@i:
   865                           	callstack 0
   866  00000F                     ___fldiv@b:
   867                           	callstack 0
   868                           
   869                           ; 4 bytes @ 0xE
   870  00000F                     	ds	1
   871  000010                     ___fladd@grs:
   872                           	callstack 0
   873                           
   874                           ; 1 bytes @ 0xF
   875  000010                     	ds	1
   876  000011                     ??_setMotorPWM:
   877  000011                     ?_pad:
   878                           	callstack 0
   879  000011                     ?___flsub:
   880                           	callstack 0
   881  000011                     ___aodiv@counter:
   882                           	callstack 0
   883  000011                     ___aomod@counter:
   884                           	callstack 0
   885  000011                     pad@fp:
   886                           	callstack 0
   887  000011                     ___flsub@b:
   888                           	callstack 0
   889                           
   890                           ; 4 bytes @ 0x10
   891  000011                     	ds	1
   892  000012                     ___aodiv@sign:
   893                           	callstack 0
   894  000012                     ___aomod@sign:
   895                           	callstack 0
   896                           
   897                           ; 1 bytes @ 0x11
   898  000012                     	ds	1
   899  000013                     ?_abs:
   900                           	callstack 0
   901  000013                     pad@buf:
   902                           	callstack 0
   903  000013                     abs@a:
   904                           	callstack 0
   905  000013                     ___fldiv@a:
   906                           	callstack 0
   907  000013                     ___aodiv@quotient:
   908                           	callstack 0
   909                           
   910                           ; 8 bytes @ 0x12
   911  000013                     	ds	2
   912  000015                     ??_abs:
   913  000015                     pad@p:
   914                           	callstack 0
   915  000015                     ___flsub@a:
   916                           	callstack 0
   917                           
   918                           ; 4 bytes @ 0x14
   919  000015                     	ds	2
   920  000017                     ??___fldiv:
   921  000017                     ??_pad:
   922                           
   923                           ; 1 bytes @ 0x16
   924  000017                     	ds	1
   925  000018                     setMotorPWM@PWMduty:
   926                           	callstack 0
   927  000018                     pad@i:
   928                           	callstack 0
   929                           
   930                           ; 2 bytes @ 0x17
   931  000018                     	ds	1
   932  000019                     
   933                           ; 1 bytes @ 0x18
   934  000019                     	ds	1
   935  00001A                     stop@mL:
   936                           	callstack 0
   937  00001A                     fullSpeedAhead@mL:
   938                           	callstack 0
   939  00001A                     fullSpeedBack@mL:
   940                           	callstack 0
   941  00001A                     pad@w:
   942                           	callstack 0
   943                           
   944                           ; 2 bytes @ 0x19
   945  00001A                     	ds	1
   946  00001B                     ___fldiv@rem:
   947                           	callstack 0
   948                           
   949                           ; 4 bytes @ 0x1A
   950  00001B                     	ds	1
   951  00001C                     ?_dtoa:
   952                           	callstack 0
   953  00001C                     stop@mR:
   954                           	callstack 0
   955  00001C                     fullSpeedAhead@mR:
   956                           	callstack 0
   957  00001C                     fullSpeedBack@mR:
   958                           	callstack 0
   959  00001C                     dtoa@fp:
   960                           	callstack 0
   961                           
   962                           ; 2 bytes @ 0x1B
   963  00001C                     	ds	2
   964  00001E                     ??_stop:
   965  00001E                     ??_fullSpeedAhead:
   966  00001E                     ??_fullSpeedBack:
   967  00001E                     dtoa@d:
   968                           	callstack 0
   969                           
   970                           ; 8 bytes @ 0x1D
   971  00001E                     	ds	1
   972  00001F                     ___fldiv@sign:
   973                           	callstack 0
   974                           
   975                           ; 1 bytes @ 0x1E
   976  00001F                     	ds	1
   977  000020                     turnLeft@mL:
   978                           	callstack 0
   979  000020                     turnRight@mL:
   980                           	callstack 0
   981  000020                     fullSpeedAhead_test@mL:
   982                           	callstack 0
   983  000020                     short_reverse@mL:
   984                           	callstack 0
   985  000020                     reverse_square@mL:
   986                           	callstack 0
   987  000020                     short_burst_back@mL:
   988                           	callstack 0
   989  000020                     ___fldiv@new_exp:
   990                           	callstack 0
   991                           
   992                           ; 2 bytes @ 0x1F
   993  000020                     	ds	2
   994  000022                     turnLeft@mR:
   995                           	callstack 0
   996  000022                     turnRight@mR:
   997                           	callstack 0
   998  000022                     fullSpeedAhead_test@mR:
   999                           	callstack 0
  1000  000022                     short_reverse@mR:
  1001                           	callstack 0
  1002  000022                     reverse_square@mR:
  1003                           	callstack 0
  1004  000022                     short_burst_back@mR:
  1005                           	callstack 0
  1006  000022                     ___fldiv@grs:
  1007                           	callstack 0
  1008                           
  1009                           ; 4 bytes @ 0x21
  1010  000022                     	ds	2
  1011  000024                     ??_short_burst_back:
  1012  000024                     ??_fullSpeedAhead_test:
  1013  000024                     ??_short_reverse:
  1014  000024                     ??_reverse_square:
  1015  000024                     turnLeft@angle_left:
  1016                           	callstack 0
  1017  000024                     turnRight@angle_right:
  1018                           	callstack 0
  1019                           
  1020                           ; 1 bytes @ 0x23
  1021  000024                     	ds	1
  1022  000025                     ??_turnLeft:
  1023  000025                     ??_turnRight:
  1024                           
  1025                           ; 1 bytes @ 0x24
  1026  000025                     	ds	1
  1027  000026                     ??_dtoa:
  1028  000026                     ___fldiv@bexp:
  1029                           	callstack 0
  1030  000026                     turnLeft@delay_135:
  1031                           	callstack 0
  1032  000026                     turnRight@delay_135:
  1033                           	callstack 0
  1034                           
  1035                           ; 2 bytes @ 0x25
  1036  000026                     	ds	1
  1037  000027                     ___fldiv@aexp:
  1038                           	callstack 0
  1039                           
  1040                           ; 1 bytes @ 0x26
  1041  000027                     	ds	1
  1042  000028                     ?___flmul:
  1043                           	callstack 0
  1044  000028                     turnLeft@delay_180:
  1045                           	callstack 0
  1046  000028                     turnRight@delay_180:
  1047                           	callstack 0
  1048  000028                     ___flmul@b:
  1049                           	callstack 0
  1050                           
  1051                           ; 4 bytes @ 0x27
  1052  000028                     	ds	2
  1053  00002A                     turnLeft@i:
  1054                           	callstack 0
  1055  00002A                     turnRight@i:
  1056                           	callstack 0
  1057                           
  1058                           ; 2 bytes @ 0x29
  1059  00002A                     	ds	2
  1060  00002C                     turnLeft@i_1309:
  1061                           	callstack 0
  1062  00002C                     turnRight@i_1332:
  1063                           	callstack 0
  1064  00002C                     ___flmul@a:
  1065                           	callstack 0
  1066                           
  1067                           ; 4 bytes @ 0x2B
  1068  00002C                     	ds	2
  1069  00002E                     turnLeft@i_1310:
  1070                           	callstack 0
  1071  00002E                     turnRight@i_1333:
  1072                           	callstack 0
  1073  00002E                     _dtoa$2916:
  1074                           	callstack 0
  1075                           
  1076                           ; 2 bytes @ 0x2D
  1077  00002E                     	ds	2
  1078  000030                     ??___flmul:
  1079  000030                     turnLeft@delay:
  1080                           	callstack 0
  1081  000030                     turnRight@delay:
  1082                           	callstack 0
  1083  000030                     dtoa@p:
  1084                           	callstack 0
  1085                           
  1086                           ; 2 bytes @ 0x2F
  1087  000030                     	ds	2
  1088  000032                     test_action@mL:
  1089                           	callstack 0
  1090  000032                     goback@mL:
  1091                           	callstack 0
  1092  000032                     dtoa@w:
  1093                           	callstack 0
  1094                           
  1095                           ; 2 bytes @ 0x31
  1096  000032                     	ds	2
  1097  000034                     ___flmul@sign:
  1098                           	callstack 0
  1099  000034                     test_action@mR:
  1100                           	callstack 0
  1101  000034                     goback@mR:
  1102                           	callstack 0
  1103  000034                     dtoa@s:
  1104                           	callstack 0
  1105                           
  1106                           ; 2 bytes @ 0x33
  1107  000034                     	ds	1
  1108  000035                     ___flmul@grs:
  1109                           	callstack 0
  1110                           
  1111                           ; 4 bytes @ 0x34
  1112  000035                     	ds	1
  1113  000036                     ??_goback:
  1114  000036                     calibration_motor@mL:
  1115                           	callstack 0
  1116  000036                     dtoa@n:
  1117                           	callstack 0
  1118                           
  1119                           ; 8 bytes @ 0x35
  1120  000036                     	ds	2
  1121  000038                     goback@i:
  1122                           	callstack 0
  1123  000038                     calibration_motor@mR:
  1124                           	callstack 0
  1125                           
  1126                           ; 2 bytes @ 0x37
  1127  000038                     	ds	1
  1128  000039                     ___flmul@aexp:
  1129                           	callstack 0
  1130                           
  1131                           ; 1 bytes @ 0x38
  1132  000039                     	ds	1
  1133  00003A                     ??_calibration_motor:
  1134  00003A                     ___flmul@bexp:
  1135                           	callstack 0
  1136  00003A                     action@mL:
  1137                           	callstack 0
  1138                           
  1139                           ; 2 bytes @ 0x39
  1140  00003A                     	ds	1
  1141  00003B                     ___flmul@prod:
  1142                           	callstack 0
  1143                           
  1144                           ; 4 bytes @ 0x3A
  1145  00003B                     	ds	1
  1146  00003C                     action@mR:
  1147                           	callstack 0
  1148                           
  1149                           ; 2 bytes @ 0x3B
  1150  00003C                     	ds	2
  1151  00003E                     action@color:
  1152                           	callstack 0
  1153  00003E                     dtoa@i:
  1154                           	callstack 0
  1155                           
  1156                           ; 2 bytes @ 0x3D
  1157  00003E                     	ds	1
  1158  00003F                     ___flmul@temp:
  1159                           	callstack 0
  1160                           
  1161                           ; 2 bytes @ 0x3E
  1162  00003F                     	ds	1
  1163  000040                     ?_vfpfcnvrt:
  1164                           	callstack 0
  1165  000040                     vfpfcnvrt@fp:
  1166                           	callstack 0
  1167                           
  1168                           ; 2 bytes @ 0x3F
  1169  000040                     	ds	1
  1170  000041                     ?_roundf:
  1171                           	callstack 0
  1172  000041                     roundf@x:
  1173                           	callstack 0
  1174                           
  1175                           ; 4 bytes @ 0x40
  1176  000041                     	ds	1
  1177  000042                     vfpfcnvrt@fmt:
  1178                           	callstack 0
  1179                           
  1180                           ; 2 bytes @ 0x41
  1181  000042                     	ds	2
  1182  000044                     vfpfcnvrt@ap:
  1183                           	callstack 0
  1184                           
  1185                           ; 2 bytes @ 0x43
  1186  000044                     	ds	1
  1187  000045                     ??_roundf:
  1188                           
  1189                           ; 1 bytes @ 0x44
  1190  000045                     	ds	1
  1191  000046                     ??_vfpfcnvrt:
  1192                           
  1193                           ; 1 bytes @ 0x45
  1194  000046                     	ds	2
  1195  000048                     vfpfcnvrt@ll:
  1196                           	callstack 0
  1197                           
  1198                           ; 8 bytes @ 0x47
  1199  000048                     	ds	1
  1200  000049                     _roundf$3255:
  1201                           	callstack 0
  1202                           
  1203                           ; 4 bytes @ 0x48
  1204  000049                     	ds	4
  1205  00004D                     roundf@e:
  1206                           	callstack 0
  1207                           
  1208                           ; 2 bytes @ 0x4C
  1209  00004D                     	ds	2
  1210  00004F                     _roundf$3254:
  1211                           	callstack 0
  1212                           
  1213                           ; 4 bytes @ 0x4E
  1214  00004F                     	ds	1
  1215  000050                     ?_vfprintf:
  1216                           	callstack 0
  1217  000050                     vfprintf@fp:
  1218                           	callstack 0
  1219                           
  1220                           ; 2 bytes @ 0x4F
  1221  000050                     	ds	2
  1222  000052                     vfprintf@fmt:
  1223                           	callstack 0
  1224                           
  1225                           ; 2 bytes @ 0x51
  1226  000052                     	ds	1
  1227  000053                     roundf@u:
  1228                           	callstack 0
  1229                           
  1230                           ; 4 bytes @ 0x52
  1231  000053                     	ds	1
  1232  000054                     vfprintf@ap:
  1233                           	callstack 0
  1234                           
  1235                           ; 2 bytes @ 0x53
  1236  000054                     	ds	2
  1237  000056                     vfprintf@cfmt:
  1238                           	callstack 0
  1239                           
  1240                           ; 2 bytes @ 0x55
  1241  000056                     	ds	1
  1242  000057                     roundf@y:
  1243                           	callstack 0
  1244                           
  1245                           ; 4 bytes @ 0x56
  1246  000057                     	ds	1
  1247  000058                     color_display@m:
  1248                           	callstack 0
  1249                           
  1250                           ; 2 bytes @ 0x57
  1251  000058                     	ds	2
  1252  00005A                     color_data_collection@m:
  1253                           	callstack 0
  1254                           
  1255                           ; 2 bytes @ 0x59
  1256  00005A                     	ds	1
  1257  00005B                     ?___fltol:
  1258                           	callstack 0
  1259  00005B                     ___fltol@f1:
  1260                           	callstack 0
  1261                           
  1262                           ; 4 bytes @ 0x5A
  1263  00005B                     	ds	1
  1264  00005C                     ??_color_data_collection:
  1265                           
  1266                           ; 1 bytes @ 0x5B
  1267  00005C                     	ds	3
  1268  00005F                     
  1269                           ; 1 bytes @ 0x5E
  1270 ;;
  1271 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1272 ;;
  1273 ;; *************** function _main *****************
  1274 ;; Defined at:
  1275 ;;		line 29 in file "main.c"
  1276 ;; Parameters:    Size  Location     Type
  1277 ;;		None
  1278 ;; Auto vars:     Size  Location     Type
  1279 ;;  white          28   20[BANK1 ] struct white_card
  1280 ;;  motorR          9   57[BANK1 ] struct DC_motor
  1281 ;;  motorL          9   48[BANK1 ] struct DC_motor
  1282 ;;  rgb             8   12[BANK1 ] struct color_rgb
  1283 ;;  amb             8    0[BANK1 ] struct color_rgb
  1284 ;;  amb_light       2    8[BANK1 ] unsigned int 
  1285 ;;  stop_signal     1   11[BANK1 ] unsigned char 
  1286 ;;  setup           1   10[BANK1 ] unsigned char 
  1287 ;; Return value:  Size  Location     Type
  1288 ;;                  1    wreg      void 
  1289 ;; Registers used:
  1290 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1291 ;; Tracked objects:
  1292 ;;		On entry : 0/0
  1293 ;;		On exit  : 0/0
  1294 ;;		Unchanged: 0/0
  1295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1296 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1297 ;;      Locals:         0       0      66       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1298 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1299 ;;      Totals:         0       2      66       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1300 ;;Total ram usage:       68 bytes
  1301 ;; Hardware stack levels required when called: 12
  1302 ;; This function calls:
  1303 ;;		_I2C_2_Master_Init
  1304 ;;		_Interrupts_init
  1305 ;;		_LED_OFF
  1306 ;;		_Timer0_init
  1307 ;;		_action
  1308 ;;		_amb_light_measure
  1309 ;;		_buggylight_init
  1310 ;;		_calibrate_white
  1311 ;;		_calibration_motor
  1312 ;;		_color_click_init
  1313 ;;		_detect_color
  1314 ;;		_distance_measure
  1315 ;;		_fullSpeedAhead
  1316 ;;		_initDCmotorsPWM
  1317 ;;		_initDCmotors_parameter
  1318 ;;		_initUSART4
  1319 ;;		_pin_init
  1320 ;;		_setup_init
  1321 ;;		_short_burst_back
  1322 ;;		_stop
  1323 ;;		_test_function
  1324 ;;		_verify_color
  1325 ;; This function is called by:
  1326 ;;		Startup code after reset
  1327 ;; This function uses a non-reentrant model
  1328 ;;
  1329                           
  1330                           	psect	text0
  1331  002FFA                     __ptext0:
  1332                           	callstack 0
  1333  002FFA                     _main:
  1334                           	callstack 19
  1335  002FFA                     
  1336                           ;main.c: 32:     I2C_2_Master_Init();
  1337  002FFA  ECBF  F02D         	call	_I2C_2_Master_Init	;wreg free
  1338  002FFE                     
  1339                           ;main.c: 33:     color_click_init();
  1340  002FFE  EC76  F02D         	call	_color_click_init	;wreg free
  1341  003002                     
  1342                           ;main.c: 34:     initDCmotorsPWM(199);
  1343  003002  0E00               	movlw	0
  1344  003004  6E02               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
  1345  003006  0EC7               	movlw	199
  1346  003008  6E01               	movwf	initDCmotorsPWM@PWMperiod^0,c
  1347  00300A  EC61  F02C         	call	_initDCmotorsPWM	;wreg free
  1348  00300E                     
  1349                           ;main.c: 35:     buggylight_init();
  1350  00300E  EC95  F02E         	call	_buggylight_init	;wreg free
  1351  003012                     
  1352                           ;main.c: 36:     initUSART4();
  1353  003012  EC6B  F02E         	call	_initUSART4	;wreg free
  1354  003016                     
  1355                           ;main.c: 37:     Timer0_init();
  1356  003016  EC7A  F02E         	call	_Timer0_init	;wreg free
  1357  00301A                     
  1358                           ;main.c: 38:     Interrupts_init();
  1359  00301A  ECB0  F02E         	call	_Interrupts_init	;wreg free
  1360  00301E                     
  1361                           ;main.c: 39:     setup_init();
  1362  00301E  ECA0  F02E         	call	_setup_init	;wreg free
  1363  003022                     
  1364                           ;main.c: 41:     struct color_rgb rgb, amb;;main.c: 42:     struct white_card white;;mai
      +                          n.c: 46:     struct DC_motor motorL, motorR;;main.c: 47:     pin_init();
  1365  003022  EC4B  F02E         	call	_pin_init	;wreg free
  1366  003026                     
  1367                           ;main.c: 48:     initDCmotors_parameter(&motorL, &motorR);
  1368  003026  0E9A               	movlw	low main@motorL
  1369  003028  6E01               	movwf	initDCmotors_parameter@motorL^0,c
  1370  00302A  0E01               	movlw	high main@motorL
  1371  00302C  6E02               	movwf	(initDCmotors_parameter@motorL+1)^0,c
  1372  00302E  0EA3               	movlw	low main@motorR
  1373  003030  6E03               	movwf	initDCmotors_parameter@motorR^0,c
  1374  003032  0E01               	movlw	high main@motorR
  1375  003034  6E04               	movwf	(initDCmotors_parameter@motorR+1)^0,c
  1376  003036  EC30  F027         	call	_initDCmotors_parameter	;wreg free
  1377  00303A                     
  1378                           ;main.c: 50:     unsigned char stop_signal = 0;
  1379  00303A  0E00               	movlw	0
  1380  00303C  0101               	movlb	1	; () banked
  1381  00303E  6F75               	movwf	main@stop_signal& (0+255),b
  1382  003040                     
  1383                           ; BSR set to: 1
  1384                           ;main.c: 52:     unsigned int amb_light = 0;
  1385  003040  0E00               	movlw	0
  1386  003042  6F73               	movwf	(main@amb_light+1)& (0+255),b
  1387  003044  0E00               	movlw	0
  1388  003046  6F72               	movwf	main@amb_light& (0+255),b
  1389  003048                     
  1390                           ; BSR set to: 1
  1391                           ;main.c: 55:     if (0 == 0){
  1392  003048  0E00               	movlw	0
  1393  00304A  6F74               	movwf	main@setup& (0+255),b
  1394                           
  1395                           ;main.c: 56:         while(!setup){
  1396  00304C  EFA3  F018         	goto	l5451
  1397  003050                     l5421:
  1398                           
  1399                           ; BSR set to: 1
  1400                           ;main.c: 57:             LED_OFF();
  1401  003050  EC0B  F02E         	call	_LED_OFF	;wreg free
  1402  003054                     
  1403                           ;main.c: 58:             LATDbits.LATD7 = 1;
  1404  003054  8E7C               	bsf	124,7,c	;volatile
  1405  003056                     
  1406                           ;main.c: 59:             LATHbits.LATH3 = 1;
  1407  003056  8680               	bsf	128,3,c	;volatile
  1408  003058                     l470:
  1409  003058  B48E               	btfsc	142,2,c	;volatile
  1410  00305A  EF31  F018         	goto	u5661
  1411  00305E  EF33  F018         	goto	u5660
  1412  003062                     u5661:
  1413  003062  EF2C  F018         	goto	l470
  1414  003066                     u5660:
  1415  003066                     
  1416                           ;main.c: 61:             if (!PORTFbits.RF2){calibrate_white(&white); LATDbits.LATD7 = 0
      +                          ; _delay((unsigned long)((500)*(64000000/4000.0)));}
  1417  003066  B48E               	btfsc	142,2,c	;volatile
  1418  003068  EF38  F018         	goto	u5671
  1419  00306C  EF3A  F018         	goto	u5670
  1420  003070                     u5671:
  1421  003070  EF4D  F018         	goto	l474
  1422  003074                     u5670:
  1423  003074  0E7E               	movlw	low main@white
  1424  003076  6E0C               	movwf	calibrate_white@w^0,c
  1425  003078  0E01               	movlw	high main@white
  1426  00307A  6E0D               	movwf	(calibrate_white@w+1)^0,c
  1427  00307C  EC0E  F01C         	call	_calibrate_white	;wreg free
  1428  003080  9E7C               	bcf	124,7,c	;volatile
  1429  003082  0E29               	movlw	41
  1430  003084  0100               	movlb	0	; () banked
  1431  003086  6FF7               	movwf	(??_main+1)& (0+255),b
  1432  003088  0E96               	movlw	150
  1433  00308A  6FF6               	movwf	??_main& (0+255),b
  1434  00308C  0E7F               	movlw	127
  1435  00308E                     u5787:
  1436  00308E  2EE8               	decfsz	wreg,f,c
  1437  003090  D7FE               	bra	u5787
  1438  003092  2FF6               	decfsz	??_main& (0+255),f,b
  1439  003094  D7FC               	bra	u5787
  1440  003096  2FF7               	decfsz	(??_main+1)& (0+255),f,b
  1441  003098  D7FA               	bra	u5787
  1442  00309A                     l474:
  1443  00309A  B68E               	btfsc	142,3,c	;volatile
  1444  00309C  EF52  F018         	goto	u5681
  1445  0030A0  EF54  F018         	goto	u5680
  1446  0030A4                     u5681:
  1447  0030A4  EF4D  F018         	goto	l474
  1448  0030A8                     u5680:
  1449  0030A8                     
  1450                           ;main.c: 63:             if (!PORTFbits.RF3){amb_light = amb_light_measure(&amb); LATHbi
      +                          ts.LATH3 = 0; _delay((unsigned long)((500)*(64000000/4000.0)));}
  1451  0030A8  B68E               	btfsc	142,3,c	;volatile
  1452  0030AA  EF59  F018         	goto	u5691
  1453  0030AE  EF5B  F018         	goto	u5690
  1454  0030B2                     u5691:
  1455  0030B2  EF73  F018         	goto	l5439
  1456  0030B6                     u5690:
  1457  0030B6  0E6A               	movlw	low main@amb
  1458  0030B8  0100               	movlb	0	; () banked
  1459  0030BA  6F6A               	movwf	amb_light_measure@amb& (0+255),b
  1460  0030BC  0E01               	movlw	high main@amb
  1461  0030BE  6F6B               	movwf	(amb_light_measure@amb+1)& (0+255),b
  1462  0030C0  EC23  F025         	call	_amb_light_measure	;wreg free
  1463  0030C4  C06A  F172         	movff	?_amb_light_measure,main@amb_light
  1464  0030C8  C06B  F173         	movff	?_amb_light_measure+1,main@amb_light+1
  1465  0030CC  9680               	bcf	128,3,c	;volatile
  1466  0030CE  0E29               	movlw	41
  1467  0030D0  0100               	movlb	0	; () banked
  1468  0030D2  6FF7               	movwf	(??_main+1)& (0+255),b
  1469  0030D4  0E96               	movlw	150
  1470  0030D6  6FF6               	movwf	??_main& (0+255),b
  1471  0030D8  0E7F               	movlw	127
  1472  0030DA                     u5797:
  1473  0030DA  2EE8               	decfsz	wreg,f,c
  1474  0030DC  D7FE               	bra	u5797
  1475  0030DE  2FF6               	decfsz	??_main& (0+255),f,b
  1476  0030E0  D7FC               	bra	u5797
  1477  0030E2  2FF7               	decfsz	(??_main+1)& (0+255),f,b
  1478  0030E4  D7FA               	bra	u5797
  1479  0030E6                     l5439:
  1480                           
  1481                           ;main.c: 64:             LATDbits.LATD7 = 1;
  1482  0030E6  8E7C               	bsf	124,7,c	;volatile
  1483  0030E8                     
  1484                           ;main.c: 65:             if (!PORTFbits.RF3){calibration_motor(&motorL, &motorR);}
  1485  0030E8  B68E               	btfsc	142,3,c	;volatile
  1486  0030EA  EF79  F018         	goto	u5701
  1487  0030EE  EF7B  F018         	goto	u5700
  1488  0030F2                     u5701:
  1489  0030F2  EF85  F018         	goto	l479
  1490  0030F6                     u5700:
  1491  0030F6  0E9A               	movlw	low main@motorL
  1492  0030F8  6E36               	movwf	calibration_motor@mL^0,c
  1493  0030FA  0E01               	movlw	high main@motorL
  1494  0030FC  6E37               	movwf	(calibration_motor@mL+1)^0,c
  1495  0030FE  0EA3               	movlw	low main@motorR
  1496  003100  6E38               	movwf	calibration_motor@mR^0,c
  1497  003102  0E01               	movlw	high main@motorR
  1498  003104  6E39               	movwf	(calibration_motor@mR+1)^0,c
  1499  003106  ECBD  F026         	call	_calibration_motor	;wreg free
  1500  00310A                     l479:
  1501  00310A  B48E               	btfsc	142,2,c	;volatile
  1502  00310C  EF8A  F018         	goto	u5711
  1503  003110  EF8C  F018         	goto	u5710
  1504  003114                     u5711:
  1505  003114  EF85  F018         	goto	l479
  1506  003118                     u5710:
  1507  003118                     
  1508                           ;main.c: 67:             if (!PORTFbits.RF2){LATDbits.LATD7 = 0; setup = 1;_delay((unsig
      +                          ned long)((500)*(64000000/4000.0)));}
  1509  003118  B48E               	btfsc	142,2,c	;volatile
  1510  00311A  EF91  F018         	goto	u5721
  1511  00311E  EF93  F018         	goto	u5720
  1512  003122                     u5721:
  1513  003122  EFA3  F018         	goto	l5451
  1514  003126                     u5720:
  1515  003126  9E7C               	bcf	124,7,c	;volatile
  1516  003128  0E01               	movlw	1
  1517  00312A  0101               	movlb	1	; () banked
  1518  00312C  6F74               	movwf	main@setup& (0+255),b
  1519  00312E                     
  1520                           ; BSR set to: 1
  1521  00312E  0E29               	movlw	41
  1522  003130  0100               	movlb	0	; () banked
  1523  003132  6FF7               	movwf	(??_main+1)& (0+255),b
  1524  003134  0E96               	movlw	150
  1525  003136  6FF6               	movwf	??_main& (0+255),b
  1526  003138  0E7F               	movlw	127
  1527  00313A                     u5807:
  1528  00313A  2EE8               	decfsz	wreg,f,c
  1529  00313C  D7FE               	bra	u5807
  1530  00313E  2FF6               	decfsz	??_main& (0+255),f,b
  1531  003140  D7FC               	bra	u5807
  1532  003142  2FF7               	decfsz	(??_main+1)& (0+255),f,b
  1533  003144  D7FA               	bra	u5807
  1534  003146                     l5451:
  1535                           
  1536                           ;main.c: 56:         while(!setup){
  1537  003146  0101               	movlb	1	; () banked
  1538  003148  5174               	movf	main@setup& (0+255),w,b
  1539  00314A  B4D8               	btfsc	status,2,c
  1540  00314C  EFAA  F018         	goto	u5731
  1541  003150  EFAC  F018         	goto	u5730
  1542  003154                     u5731:
  1543  003154  EF28  F018         	goto	l5421
  1544  003158                     u5730:
  1545  003158                     l5455:
  1546                           
  1547                           ; BSR set to: 1
  1548                           ;main.c: 80:             T0CON0bits.T0EN=1;
  1549  003158  8ED5               	bsf	213,7,c	;volatile
  1550  00315A                     
  1551                           ; BSR set to: 1
  1552                           ;main.c: 81:             start_move = centisecond;
  1553  00315A  C146  F144         	movff	_centisecond,_start_move
  1554  00315E  C147  F145         	movff	_centisecond+1,_start_move+1
  1555                           
  1556                           ;main.c: 82:             while (stop_signal == 0){
  1557  003162  EFCE  F018         	goto	l5463
  1558  003166                     l5459:
  1559                           
  1560                           ; BSR set to: 1
  1561                           ;main.c: 83:                 fullSpeedAhead(&motorL, &motorR);
  1562  003166  0E9A               	movlw	low main@motorL
  1563  003168  6E1A               	movwf	fullSpeedAhead@mL^0,c
  1564  00316A  0E01               	movlw	high main@motorL
  1565  00316C  6E1B               	movwf	(fullSpeedAhead@mL+1)^0,c
  1566  00316E  0EA3               	movlw	low main@motorR
  1567  003170  6E1C               	movwf	fullSpeedAhead@mR^0,c
  1568  003172  0E01               	movlw	high main@motorR
  1569  003174  6E1D               	movwf	(fullSpeedAhead@mR+1)^0,c
  1570  003176  ECCE  F029         	call	_fullSpeedAhead	;wreg free
  1571  00317A                     
  1572                           ;main.c: 84:                 stop_signal = distance_measure(&motorL, &motorR, amb_light)
      +                          ;
  1573  00317A  0E9A               	movlw	low main@motorL
  1574  00317C  0100               	movlb	0	; () banked
  1575  00317E  6F6A               	movwf	distance_measure@mL& (0+255),b
  1576  003180  0E01               	movlw	high main@motorL
  1577  003182  6F6B               	movwf	(distance_measure@mL+1)& (0+255),b
  1578  003184  0EA3               	movlw	low main@motorR
  1579  003186  6F6C               	movwf	distance_measure@mR& (0+255),b
  1580  003188  0E01               	movlw	high main@motorR
  1581  00318A  6F6D               	movwf	(distance_measure@mR+1)& (0+255),b
  1582  00318C  C172  F06E         	movff	main@amb_light,distance_measure@amb_light
  1583  003190  C173  F06F         	movff	main@amb_light+1,distance_measure@amb_light+1
  1584  003194  ECFE  F027         	call	_distance_measure	;wreg free
  1585  003198  0101               	movlb	1	; () banked
  1586  00319A  6F75               	movwf	main@stop_signal& (0+255),b
  1587  00319C                     l5463:
  1588                           
  1589                           ; BSR set to: 1
  1590                           ;main.c: 82:             while (stop_signal == 0){
  1591  00319C  5175               	movf	main@stop_signal& (0+255),w,b
  1592  00319E  B4D8               	btfsc	status,2,c
  1593  0031A0  EFD4  F018         	goto	u5741
  1594  0031A4  EFD6  F018         	goto	u5740
  1595  0031A8                     u5741:
  1596  0031A8  EFB3  F018         	goto	l5459
  1597  0031AC                     u5740:
  1598  0031AC                     
  1599                           ; BSR set to: 1
  1600                           ;main.c: 86:             T0CON0bits.T0EN=0;
  1601  0031AC  9ED5               	bcf	213,7,c	;volatile
  1602                           
  1603                           ;main.c: 87:             stop_move = centisecond;
  1604  0031AE  C146  F142         	movff	_centisecond,_stop_move
  1605  0031B2  C147  F143         	movff	_centisecond+1,_stop_move+1
  1606  0031B6                     
  1607                           ; BSR set to: 1
  1608                           ;main.c: 88:             if ((stop_move-start_move)>1){
  1609  0031B6  5144               	movf	_start_move& (0+255),w,b
  1610  0031B8  5D42               	subwf	_stop_move& (0+255),w,b
  1611  0031BA  0100               	movlb	0	; () banked
  1612  0031BC  6FF6               	movwf	??_main& (0+255),b
  1613  0031BE  0101               	movlb	1	; () banked
  1614  0031C0  5145               	movf	(_start_move+1)& (0+255),w,b
  1615  0031C2  5943               	subwfb	(_stop_move+1)& (0+255),w,b
  1616  0031C4  0100               	movlb	0	; () banked
  1617  0031C6  6FF7               	movwf	(??_main+1)& (0+255),b
  1618  0031C8  51F7               	movf	(??_main+1)& (0+255),w,b
  1619  0031CA  E109               	bnz	u5750
  1620  0031CC  0E02               	movlw	2
  1621  0031CE  5DF6               	subwf	??_main& (0+255),w,b
  1622  0031D0  A0D8               	btfss	status,0,c
  1623  0031D2  EFED  F018         	goto	u5751
  1624  0031D6  EFEF  F018         	goto	u5750
  1625  0031DA                     u5751:
  1626  0031DA  EF07  F019         	goto	l5471
  1627  0031DE                     u5750:
  1628  0031DE                     
  1629                           ; BSR set to: 0
  1630                           ;main.c: 89:                 memory[array_index] = (stop_move-start_move);
  1631  0031DE  0101               	movlb	1	; () banked
  1632  0031E0  5144               	movf	_start_move& (0+255),w,b
  1633  0031E2  5D42               	subwf	_stop_move& (0+255),w,b
  1634  0031E4  0100               	movlb	0	; () banked
  1635  0031E6  6FF6               	movwf	??_main& (0+255),b
  1636  0031E8  0101               	movlb	1	; () banked
  1637  0031EA  5145               	movf	(_start_move+1)& (0+255),w,b
  1638  0031EC  5943               	subwfb	(_stop_move+1)& (0+255),w,b
  1639  0031EE  0100               	movlb	0	; () banked
  1640  0031F0  6FF7               	movwf	(??_main+1)& (0+255),b
  1641  0031F2  0101               	movlb	1	; () banked
  1642  0031F4  5149               	movf	_array_index& (0+255),w,b
  1643  0031F6  0D02               	mullw	2
  1644  0031F8  0E00               	movlw	low _memory
  1645  0031FA  24F3               	addwf	243,w,c
  1646  0031FC  6ED9               	movwf	fsr2l,c
  1647  0031FE  0E01               	movlw	high _memory
  1648  003200  20F4               	addwfc	prodh,w,c
  1649  003202  6EDA               	movwf	fsr2h,c
  1650  003204  C0F6  FFDE         	movff	??_main,postinc2
  1651  003208  C0F7  FFDD         	movff	??_main+1,postdec2
  1652  00320C                     
  1653                           ; BSR set to: 1
  1654                           ;main.c: 90:                 array_index++;
  1655  00320C  2B49               	incf	_array_index& (0+255),f,b
  1656  00320E                     l5471:
  1657                           
  1658                           ;main.c: 92:             stop(&motorL, &motorR);
  1659  00320E  0E9A               	movlw	low main@motorL
  1660  003210  6E1A               	movwf	stop@mL^0,c
  1661  003212  0E01               	movlw	high main@motorL
  1662  003214  6E1B               	movwf	(stop@mL+1)^0,c
  1663  003216  0EA3               	movlw	low main@motorR
  1664  003218  6E1C               	movwf	stop@mR^0,c
  1665  00321A  0E01               	movlw	high main@motorR
  1666  00321C  6E1D               	movwf	(stop@mR+1)^0,c
  1667  00321E  EC26  F029         	call	_stop	;wreg free
  1668  003222                     
  1669                           ;main.c: 93:             _delay((unsigned long)((1000)*(64000000/4000.0)));
  1670  003222  0E52               	movlw	82
  1671  003224  0100               	movlb	0	; () banked
  1672  003226  6FF7               	movwf	(??_main+1)& (0+255),b
  1673  003228  0E2B               	movlw	43
  1674  00322A  6FF6               	movwf	??_main& (0+255),b
  1675  00322C  0E00               	movlw	0
  1676  00322E                     u5817:
  1677  00322E  2EE8               	decfsz	wreg,f,c
  1678  003230  D7FE               	bra	u5817
  1679  003232  2FF6               	decfsz	??_main& (0+255),f,b
  1680  003234  D7FC               	bra	u5817
  1681  003236  2FF7               	decfsz	(??_main+1)& (0+255),f,b
  1682  003238  D7FA               	bra	u5817
  1683  00323A  F000               	nop	
  1684  00323C                     
  1685                           ;main.c: 94:             short_burst_back(&motorL, &motorR);
  1686  00323C  0E9A               	movlw	low main@motorL
  1687  00323E  6E20               	movwf	short_burst_back@mL^0,c
  1688  003240  0E01               	movlw	high main@motorL
  1689  003242  6E21               	movwf	(short_burst_back@mL+1)^0,c
  1690  003244  0EA3               	movlw	low main@motorR
  1691  003246  6E22               	movwf	short_burst_back@mR^0,c
  1692  003248  0E01               	movlw	high main@motorR
  1693  00324A  6E23               	movwf	(short_burst_back@mR+1)^0,c
  1694  00324C  EC40  F02C         	call	_short_burst_back	;wreg free
  1695  003250                     
  1696                           ;main.c: 95:             color = detect_color(&rgb, &white);
  1697  003250  0E76               	movlw	low main@rgb
  1698  003252  0100               	movlb	0	; () banked
  1699  003254  6F71               	movwf	detect_color@m& (0+255),b
  1700  003256  0E01               	movlw	high main@rgb
  1701  003258  6F72               	movwf	(detect_color@m+1)& (0+255),b
  1702  00325A  0E7E               	movlw	low main@white
  1703  00325C  6F73               	movwf	detect_color@w& (0+255),b
  1704  00325E  0E01               	movlw	high main@white
  1705  003260  6F74               	movwf	(detect_color@w+1)& (0+255),b
  1706  003262  EC0A  F007         	call	_detect_color	;wreg free
  1707  003266  0101               	movlb	1	; () banked
  1708  003268  6F48               	movwf	_color& (0+255),b
  1709  00326A                     
  1710                           ; BSR set to: 1
  1711                           ;main.c: 96:             color = verify_color(color, &rgb, &white);
  1712  00326A  0E76               	movlw	low main@rgb
  1713  00326C  0100               	movlb	0	; () banked
  1714  00326E  6F92               	movwf	verify_color@m& (0+255),b
  1715  003270  0E01               	movlw	high main@rgb
  1716  003272  6F93               	movwf	(verify_color@m+1)& (0+255),b
  1717  003274  0E7E               	movlw	low main@white
  1718  003276  6F94               	movwf	verify_color@w& (0+255),b
  1719  003278  0E01               	movlw	high main@white
  1720  00327A  6F95               	movwf	(verify_color@w+1)& (0+255),b
  1721  00327C  0101               	movlb	1	; () banked
  1722  00327E  5148               	movf	_color& (0+255),w,b
  1723  003280  EC18  F02A         	call	_verify_color
  1724  003284  0101               	movlb	1	; () banked
  1725  003286  6F48               	movwf	_color& (0+255),b
  1726  003288                     
  1727                           ; BSR set to: 1
  1728                           ;main.c: 97:             if (color!= 0){action(color, &motorL, &motorR); color = 0;}
  1729  003288  5148               	movf	_color& (0+255),w,b
  1730  00328A  B4D8               	btfsc	status,2,c
  1731  00328C  EF4A  F019         	goto	u5761
  1732  003290  EF4C  F019         	goto	u5760
  1733  003294                     u5761:
  1734  003294  EF5A  F019         	goto	l5487
  1735  003298                     u5760:
  1736  003298                     
  1737                           ; BSR set to: 1
  1738  003298  0E9A               	movlw	low main@motorL
  1739  00329A  6E3A               	movwf	action@mL^0,c
  1740  00329C  0E01               	movlw	high main@motorL
  1741  00329E  6E3B               	movwf	(action@mL+1)^0,c
  1742  0032A0  0EA3               	movlw	low main@motorR
  1743  0032A2  6E3C               	movwf	action@mR^0,c
  1744  0032A4  0E01               	movlw	high main@motorR
  1745  0032A6  6E3D               	movwf	(action@mR+1)^0,c
  1746  0032A8  5148               	movf	_color& (0+255),w,b
  1747  0032AA  EC97  F016         	call	_action
  1748  0032AE  0E00               	movlw	0
  1749  0032B0  0101               	movlb	1	; () banked
  1750  0032B2  6F48               	movwf	_color& (0+255),b
  1751  0032B4                     l5487:
  1752                           
  1753                           ; BSR set to: 1
  1754                           ;main.c: 98:             stop_signal = 0;
  1755  0032B4  0E00               	movlw	0
  1756  0032B6  6F75               	movwf	main@stop_signal& (0+255),b
  1757  0032B8  EFAC  F018         	goto	l5455
  1758  0032BC  EF18  F000         	goto	start
  1759  0032C0                     __end_of_main:
  1760                           	callstack 0
  1761                           
  1762 ;; *************** function _verify_color *****************
  1763 ;; Defined at:
  1764 ;;		line 365 in file "color.c"
  1765 ;; Parameters:    Size  Location     Type
  1766 ;;  color           1    wreg     unsigned char 
  1767 ;;  m               2   50[BANK0 ] PTR struct color_rgb
  1768 ;;		 -> main@rgb(8), 
  1769 ;;  w               2   52[BANK0 ] PTR struct white_card
  1770 ;;		 -> main@white(28), 
  1771 ;; Auto vars:     Size  Location     Type
  1772 ;;  color           1   58[BANK0 ] unsigned char 
  1773 ;;  color2          2   56[BANK0 ] unsigned int 
  1774 ;;  color3          2    0        unsigned int 
  1775 ;; Return value:  Size  Location     Type
  1776 ;;                  1    wreg      unsigned char 
  1777 ;; Registers used:
  1778 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1779 ;; Tracked objects:
  1780 ;;		On entry : 0/0
  1781 ;;		On exit  : 0/0
  1782 ;;		Unchanged: 0/0
  1783 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1784 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1785 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1786 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1787 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1788 ;;Total ram usage:        9 bytes
  1789 ;; Hardware stack levels used: 1
  1790 ;; Hardware stack levels required when called: 6
  1791 ;; This function calls:
  1792 ;;		_detect_color
  1793 ;; This function is called by:
  1794 ;;		_main
  1795 ;; This function uses a non-reentrant model
  1796 ;;
  1797                           
  1798                           	psect	text1
  1799  005430                     __ptext1:
  1800                           	callstack 0
  1801  005430                     _verify_color:
  1802                           	callstack 24
  1803                           
  1804                           ; BSR set to: 1
  1805                           ;incstack = 0
  1806                           ;verify_color@color stored from wreg
  1807  005430  0100               	movlb	0	; () banked
  1808  005432  6F9A               	movwf	verify_color@color& (0+255),b
  1809  005434                     
  1810                           ;color.c: 365: unsigned char verify_color(unsigned char color,struct color_rgb *m, struc
      +                          t white_card *w);color.c: 366: {;color.c: 367:     _delay((unsigned long)((50)*(64000000
      +                          /4000.0)));
  1811  005434  0E05               	movlw	5
  1812  005436  0100               	movlb	0	; () banked
  1813  005438  6F97               	movwf	(??_verify_color+1)& (0+255),b
  1814  00543A  0E0F               	movlw	15
  1815  00543C  6F96               	movwf	??_verify_color& (0+255),b
  1816  00543E  0EF1               	movlw	241
  1817  005440                     u5827:
  1818  005440  2EE8               	decfsz	wreg,f,c
  1819  005442  D7FE               	bra	u5827
  1820  005444  2F96               	decfsz	??_verify_color& (0+255),f,b
  1821  005446  D7FC               	bra	u5827
  1822  005448  2F97               	decfsz	(??_verify_color+1)& (0+255),f,b
  1823  00544A  D7FA               	bra	u5827
  1824  00544C                     
  1825                           ;color.c: 368:     unsigned int color2, color3;;color.c: 369:     color2 = detect_color(
      +                          m,w);
  1826  00544C  C092  F071         	movff	verify_color@m,detect_color@m
  1827  005450  C093  F072         	movff	verify_color@m+1,detect_color@m+1
  1828  005454  C094  F073         	movff	verify_color@w,detect_color@w
  1829  005458  C095  F074         	movff	verify_color@w+1,detect_color@w+1
  1830  00545C  EC0A  F007         	call	_detect_color	;wreg free
  1831  005460  0100               	movlb	0	; () banked
  1832  005462  6F96               	movwf	??_verify_color& (0+255),b
  1833  005464  5196               	movf	??_verify_color& (0+255),w,b
  1834  005466  6F98               	movwf	verify_color@color2& (0+255),b
  1835  005468  6B99               	clrf	(verify_color@color2+1)& (0+255),b
  1836  00546A                     
  1837                           ; BSR set to: 0
  1838                           ;color.c: 370:     _delay((unsigned long)((50)*(64000000/4000.0)));
  1839  00546A  0E05               	movlw	5
  1840  00546C  0100               	movlb	0	; () banked
  1841  00546E  6F97               	movwf	(??_verify_color+1)& (0+255),b
  1842  005470  0E0F               	movlw	15
  1843  005472  6F96               	movwf	??_verify_color& (0+255),b
  1844  005474  0EF1               	movlw	241
  1845  005476                     u5837:
  1846  005476  2EE8               	decfsz	wreg,f,c
  1847  005478  D7FE               	bra	u5837
  1848  00547A  2F96               	decfsz	??_verify_color& (0+255),f,b
  1849  00547C  D7FC               	bra	u5837
  1850  00547E  2F97               	decfsz	(??_verify_color+1)& (0+255),f,b
  1851  005480  D7FA               	bra	u5837
  1852  005482                     
  1853                           ;color.c: 372:     if (color == color2){return color;}
  1854  005482  0100               	movlb	0	; () banked
  1855  005484  519A               	movf	verify_color@color& (0+255),w,b
  1856  005486  6F96               	movwf	??_verify_color& (0+255),b
  1857  005488  6B97               	clrf	(??_verify_color+1)& (0+255),b
  1858  00548A  5198               	movf	verify_color@color2& (0+255),w,b
  1859  00548C  1996               	xorwf	??_verify_color& (0+255),w,b
  1860  00548E  E107               	bnz	u5421
  1861  005490  5199               	movf	(verify_color@color2+1)& (0+255),w,b
  1862  005492  1997               	xorwf	(??_verify_color+1)& (0+255),w,b
  1863  005494  A4D8               	btfss	status,2,c
  1864  005496  EF4F  F02A         	goto	u5421
  1865  00549A  EF51  F02A         	goto	u5420
  1866  00549E                     u5421:
  1867  00549E  EF54  F02A         	goto	l5189
  1868  0054A2                     u5420:
  1869  0054A2                     
  1870                           ; BSR set to: 0
  1871  0054A2  519A               	movf	verify_color@color& (0+255),w,b
  1872  0054A4  EF55  F02A         	goto	l157
  1873  0054A8                     l5189:
  1874                           
  1875                           ; BSR set to: 0
  1876                           ;color.c: 375:         return color;}
  1877  0054A8  0E00               	movlw	0
  1878  0054AA                     l157:
  1879                           
  1880                           ; BSR set to: 0
  1881  0054AA  0012               	return		;funcret
  1882  0054AC                     __end_of_verify_color:
  1883                           	callstack 0
  1884                           
  1885 ;; *************** function _test_function *****************
  1886 ;; Defined at:
  1887 ;;		line 34 in file "test_and_calibration.c"
  1888 ;; Parameters:    Size  Location     Type
  1889 ;;  test_code       1    wreg     unsigned char 
  1890 ;;  m               2  134[BANK0 ] PTR struct color_rgb
  1891 ;;		 -> main@rgb(8), 
  1892 ;;  w               2  136[BANK0 ] PTR struct white_card
  1893 ;;		 -> main@white(28), 
  1894 ;;  mL              2  138[BANK0 ] PTR struct DC_motor
  1895 ;;		 -> main@motorL(9), 
  1896 ;;  mR              2  140[BANK0 ] PTR struct DC_motor
  1897 ;;		 -> main@motorR(9), 
  1898 ;; Auto vars:     Size  Location     Type
  1899 ;;  test_code       1  149[BANK0 ] unsigned char 
  1900 ;;  amb_light       2  144[BANK0 ] unsigned int 
  1901 ;;  stop_signal     1  148[BANK0 ] unsigned char 
  1902 ;;  color           1  147[BANK0 ] unsigned char 
  1903 ;;  complete        1  146[BANK0 ] unsigned char 
  1904 ;; Return value:  Size  Location     Type
  1905 ;;                  1    wreg      void 
  1906 ;; Registers used:
  1907 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1908 ;; Tracked objects:
  1909 ;;		On entry : 0/0
  1910 ;;		On exit  : 0/0
  1911 ;;		Unchanged: 0/0
  1912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1913 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1914 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1915 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1916 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1917 ;;Total ram usage:       16 bytes
  1918 ;; Hardware stack levels used: 1
  1919 ;; Hardware stack levels required when called: 11
  1920 ;; This function calls:
  1921 ;;		_LED_C
  1922 ;;		_amb_light_measure
  1923 ;;		_calibrate_white
  1924 ;;		_color_data_collection
  1925 ;;		_color_display
  1926 ;;		_color_predict
  1927 ;;		_detect_color
  1928 ;;		_distance_measure
  1929 ;;		_fullSpeedAhead
  1930 ;;		_read_color
  1931 ;;		_stop
  1932 ;; This function is called by:
  1933 ;;		_main
  1934 ;; This function uses a non-reentrant model
  1935 ;;
  1936                           
  1937                           	psect	text2
  1938  0045D0                     __ptext2:
  1939                           	callstack 0
  1940  0045D0                     _test_function:
  1941                           	callstack 19
  1942                           
  1943                           ; BSR set to: 0
  1944                           ;incstack = 0
  1945                           ;test_function@test_code stored from wreg
  1946  0045D0  0100               	movlb	0	; () banked
  1947  0045D2  6FF5               	movwf	test_function@test_code& (0+255),b
  1948  0045D4                     
  1949                           ;test_and_calibration.c: 34: void test_function(unsigned char test_code, struct color_rg
      +                          b *m, struct white_card *w, struct DC_motor *mL, struct DC_motor *mR);test_and_calibrati
      +                          on.c: 35: {;test_and_calibration.c: 36:     unsigned char complete = 0;
  1950  0045D4  0E00               	movlw	0
  1951  0045D6  0100               	movlb	0	; () banked
  1952  0045D8  6FF2               	movwf	test_function@complete& (0+255),b
  1953                           
  1954                           ;test_and_calibration.c: 38:     unsigned char stop_signal = 0;
  1955  0045DA  0E00               	movlw	0
  1956  0045DC  6FF4               	movwf	test_function@stop_signal& (0+255),b
  1957                           
  1958                           ;test_and_calibration.c: 39:     unsigned int amb_light = 0;
  1959  0045DE  0E00               	movlw	0
  1960  0045E0  6FF1               	movwf	(test_function@amb_light+1)& (0+255),b
  1961  0045E2  0E00               	movlw	0
  1962  0045E4  6FF0               	movwf	test_function@amb_light& (0+255),b
  1963  0045E6                     
  1964                           ; BSR set to: 0
  1965                           ;test_and_calibration.c: 41:     if (test_code == 2){calibrate_white(w);}
  1966  0045E6  0E02               	movlw	2
  1967  0045E8  19F5               	xorwf	test_function@test_code& (0+255),w,b
  1968  0045EA  A4D8               	btfss	status,2,c
  1969  0045EC  EFFA  F022         	goto	u5491
  1970  0045F0  EFFC  F022         	goto	u5490
  1971  0045F4                     u5491:
  1972  0045F4  EF02  F023         	goto	l5275
  1973  0045F8                     u5490:
  1974  0045F8                     
  1975                           ; BSR set to: 0
  1976  0045F8  C0E8  F00C         	movff	test_function@w,calibrate_white@w
  1977  0045FC  C0E9  F00D         	movff	test_function@w+1,calibrate_white@w+1
  1978  004600  EC0E  F01C         	call	_calibrate_white	;wreg free
  1979  004604                     l5275:
  1980                           
  1981                           ;test_and_calibration.c: 42:     if (test_code == 4){amb_light = amb_light_measure(m);}
  1982  004604  0E04               	movlw	4
  1983  004606  0100               	movlb	0	; () banked
  1984  004608  19F5               	xorwf	test_function@test_code& (0+255),w,b
  1985  00460A  A4D8               	btfss	status,2,c
  1986  00460C  EF0A  F023         	goto	u5501
  1987  004610  EF0C  F023         	goto	u5500
  1988  004614                     u5501:
  1989  004614  EF16  F023         	goto	l5279
  1990  004618                     u5500:
  1991  004618                     
  1992                           ; BSR set to: 0
  1993  004618  C0E6  F06A         	movff	test_function@m,amb_light_measure@amb
  1994  00461C  C0E7  F06B         	movff	test_function@m+1,amb_light_measure@amb+1
  1995  004620  EC23  F025         	call	_amb_light_measure	;wreg free
  1996  004624  C06A  F0F0         	movff	?_amb_light_measure,test_function@amb_light
  1997  004628  C06B  F0F1         	movff	?_amb_light_measure+1,test_function@amb_light+1
  1998  00462C                     l5279:
  1999                           
  2000                           ;test_and_calibration.c: 46:         if (test_code == 1){
  2001  00462C  0100               	movlb	0	; () banked
  2002  00462E  05F5               	decf	test_function@test_code& (0+255),w,b
  2003  004630  A4D8               	btfss	status,2,c
  2004  004632  EF1D  F023         	goto	u5511
  2005  004636  EF1F  F023         	goto	u5510
  2006  00463A                     u5511:
  2007  00463A  EF2D  F023         	goto	l5287
  2008  00463E                     u5510:
  2009  00463E                     
  2010                           ; BSR set to: 0
  2011                           ;test_and_calibration.c: 47:             LED_C();
  2012  00463E  EC3B  F02E         	call	_LED_C	;wreg free
  2013  004642                     
  2014                           ;test_and_calibration.c: 48:             read_color(m);
  2015  004642  C0E6  F00C         	movff	test_function@m,read_color@m
  2016  004646  C0E7  F00D         	movff	test_function@m+1,read_color@m+1
  2017  00464A  ECBF  F02A         	call	_read_color	;wreg free
  2018  00464E                     
  2019                           ;test_and_calibration.c: 49:             color_display(m);
  2020  00464E  C0E6  F058         	movff	test_function@m,color_display@m
  2021  004652  C0E7  F059         	movff	test_function@m+1,color_display@m+1
  2022  004656  EC56  F02A         	call	_color_display	;wreg free
  2023  00465A                     l5287:
  2024                           
  2025                           ;test_and_calibration.c: 52:         if (test_code == 2){
  2026  00465A  0E02               	movlw	2
  2027  00465C  0100               	movlb	0	; () banked
  2028  00465E  19F5               	xorwf	test_function@test_code& (0+255),w,b
  2029  004660  A4D8               	btfss	status,2,c
  2030  004662  EF35  F023         	goto	u5521
  2031  004666  EF37  F023         	goto	u5520
  2032  00466A                     u5521:
  2033  00466A  EF46  F023         	goto	l5293
  2034  00466E                     u5520:
  2035  00466E                     
  2036                           ; BSR set to: 0
  2037                           ;test_and_calibration.c: 53:             color = detect_color(m,w);
  2038  00466E  C0E6  F071         	movff	test_function@m,detect_color@m
  2039  004672  C0E7  F072         	movff	test_function@m+1,detect_color@m+1
  2040  004676  C0E8  F073         	movff	test_function@w,detect_color@w
  2041  00467A  C0E9  F074         	movff	test_function@w+1,detect_color@w+1
  2042  00467E  EC0A  F007         	call	_detect_color	;wreg free
  2043  004682  0100               	movlb	0	; () banked
  2044  004684  6FF3               	movwf	test_function@color& (0+255),b
  2045  004686                     
  2046                           ; BSR set to: 0
  2047                           ;test_and_calibration.c: 55:             color_predict(color);
  2048  004686  51F3               	movf	test_function@color& (0+255),w,b
  2049  004688  ECA8  F02D         	call	_color_predict
  2050  00468C                     l5293:
  2051                           
  2052                           ;test_and_calibration.c: 58:         if (test_code == 3){
  2053  00468C  0E03               	movlw	3
  2054  00468E  0100               	movlb	0	; () banked
  2055  004690  19F5               	xorwf	test_function@test_code& (0+255),w,b
  2056  004692  A4D8               	btfss	status,2,c
  2057  004694  EF4E  F023         	goto	u5531
  2058  004698  EF50  F023         	goto	u5530
  2059  00469C                     u5531:
  2060  00469C  EF63  F023         	goto	l5303
  2061  0046A0                     u5530:
  2062  0046A0  EF5B  F023         	goto	l5301
  2063  0046A4                     l5297:
  2064                           
  2065                           ; BSR set to: 0
  2066                           ;test_and_calibration.c: 60:                 color_data_collection(m);
  2067  0046A4  C0E6  F05A         	movff	test_function@m,color_data_collection@m
  2068  0046A8  C0E7  F05B         	movff	test_function@m+1,color_data_collection@m+1
  2069  0046AC  EC8F  F020         	call	_color_data_collection	;wreg free
  2070  0046B0                     
  2071                           ;test_and_calibration.c: 61:                 complete = 1;
  2072  0046B0  0E01               	movlw	1
  2073  0046B2  0100               	movlb	0	; () banked
  2074  0046B4  6FF2               	movwf	test_function@complete& (0+255),b
  2075  0046B6                     l5301:
  2076                           
  2077                           ; BSR set to: 0
  2078                           ;test_and_calibration.c: 59:             while (complete == 0){
  2079  0046B6  51F2               	movf	test_function@complete& (0+255),w,b
  2080  0046B8  B4D8               	btfsc	status,2,c
  2081  0046BA  EF61  F023         	goto	u5541
  2082  0046BE  EF63  F023         	goto	u5540
  2083  0046C2                     u5541:
  2084  0046C2  EF52  F023         	goto	l5297
  2085  0046C6                     u5540:
  2086  0046C6                     l5303:
  2087                           
  2088                           ; BSR set to: 0
  2089                           ;test_and_calibration.c: 65:         if (test_code == 4){
  2090  0046C6  0E04               	movlw	4
  2091  0046C8  19F5               	xorwf	test_function@test_code& (0+255),w,b
  2092  0046CA  A4D8               	btfss	status,2,c
  2093  0046CC  EF6A  F023         	goto	u5551
  2094  0046D0  EF6C  F023         	goto	u5550
  2095  0046D4                     u5551:
  2096  0046D4  EF16  F023         	goto	l5279
  2097  0046D8                     u5550:
  2098  0046D8  EF88  F023         	goto	l5311
  2099  0046DC                     l5307:
  2100                           
  2101                           ; BSR set to: 0
  2102                           ;test_and_calibration.c: 67:                 fullSpeedAhead(mL, mR);
  2103  0046DC  C0EA  F01A         	movff	test_function@mL,fullSpeedAhead@mL
  2104  0046E0  C0EB  F01B         	movff	test_function@mL+1,fullSpeedAhead@mL+1
  2105  0046E4  C0EC  F01C         	movff	test_function@mR,fullSpeedAhead@mR
  2106  0046E8  C0ED  F01D         	movff	test_function@mR+1,fullSpeedAhead@mR+1
  2107  0046EC  ECCE  F029         	call	_fullSpeedAhead	;wreg free
  2108  0046F0                     
  2109                           ;test_and_calibration.c: 68:                 stop_signal = distance_measure(mL, mR, amb_
      +                          light);
  2110  0046F0  C0EA  F06A         	movff	test_function@mL,distance_measure@mL
  2111  0046F4  C0EB  F06B         	movff	test_function@mL+1,distance_measure@mL+1
  2112  0046F8  C0EC  F06C         	movff	test_function@mR,distance_measure@mR
  2113  0046FC  C0ED  F06D         	movff	test_function@mR+1,distance_measure@mR+1
  2114  004700  C0F0  F06E         	movff	test_function@amb_light,distance_measure@amb_light
  2115  004704  C0F1  F06F         	movff	test_function@amb_light+1,distance_measure@amb_light+1
  2116  004708  ECFE  F027         	call	_distance_measure	;wreg free
  2117  00470C  0100               	movlb	0	; () banked
  2118  00470E  6FF4               	movwf	test_function@stop_signal& (0+255),b
  2119  004710                     l5311:
  2120                           
  2121                           ; BSR set to: 0
  2122                           ;test_and_calibration.c: 66:             while (stop_signal == 0){
  2123  004710  51F4               	movf	test_function@stop_signal& (0+255),w,b
  2124  004712  B4D8               	btfsc	status,2,c
  2125  004714  EF8E  F023         	goto	u5561
  2126  004718  EF90  F023         	goto	u5560
  2127  00471C                     u5561:
  2128  00471C  EF6E  F023         	goto	l5307
  2129  004720                     u5560:
  2130  004720                     
  2131                           ; BSR set to: 0
  2132                           ;test_and_calibration.c: 70:             stop(mL, mR);
  2133  004720  C0EA  F01A         	movff	test_function@mL,stop@mL
  2134  004724  C0EB  F01B         	movff	test_function@mL+1,stop@mL+1
  2135  004728  C0EC  F01C         	movff	test_function@mR,stop@mR
  2136  00472C  C0ED  F01D         	movff	test_function@mR+1,stop@mR+1
  2137  004730  EC26  F029         	call	_stop	;wreg free
  2138  004734                     
  2139                           ;test_and_calibration.c: 71:             _delay((unsigned long)((1000)*(64000000/4000.0)
      +                          ));
  2140  004734  0E52               	movlw	82
  2141  004736  0100               	movlb	0	; () banked
  2142  004738  6FEF               	movwf	(??_test_function+1)& (0+255),b
  2143  00473A  0E2B               	movlw	43
  2144  00473C  6FEE               	movwf	??_test_function& (0+255),b
  2145  00473E  0E00               	movlw	0
  2146  004740                     u5847:
  2147  004740  2EE8               	decfsz	wreg,f,c
  2148  004742  D7FE               	bra	u5847
  2149  004744  2FEE               	decfsz	??_test_function& (0+255),f,b
  2150  004746  D7FC               	bra	u5847
  2151  004748  2FEF               	decfsz	(??_test_function+1)& (0+255),f,b
  2152  00474A  D7FA               	bra	u5847
  2153  00474C  F000               	nop	
  2154  00474E                     
  2155                           ;test_and_calibration.c: 72:             stop_signal = 0;
  2156  00474E  0E00               	movlw	0
  2157  004750  0100               	movlb	0	; () banked
  2158  004752  6FF4               	movwf	test_function@stop_signal& (0+255),b
  2159  004754  EF16  F023         	goto	l5279
  2160  004758  0012               	return		;funcret
  2161  00475A                     __end_of_test_function:
  2162                           	callstack 0
  2163                           
  2164 ;; *************** function _distance_measure *****************
  2165 ;; Defined at:
  2166 ;;		line 401 in file "color.c"
  2167 ;; Parameters:    Size  Location     Type
  2168 ;;  mL              2   10[BANK0 ] PTR struct DC_motor
  2169 ;;		 -> main@motorL(9), 
  2170 ;;  mR              2   12[BANK0 ] PTR struct DC_motor
  2171 ;;		 -> main@motorR(9), 
  2172 ;;  amb_light       2   14[BANK0 ] unsigned int 
  2173 ;; Auto vars:     Size  Location     Type
  2174 ;;  threshold       2   26[BANK0 ] unsigned int 
  2175 ;;  CC_amb          2   24[BANK0 ] unsigned int 
  2176 ;;  CG_amb          2   18[BANK0 ] unsigned int 
  2177 ;;  stop            1   28[BANK0 ] unsigned char 
  2178 ;; Return value:  Size  Location     Type
  2179 ;;                  1    wreg      unsigned char 
  2180 ;; Registers used:
  2181 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2182 ;; Tracked objects:
  2183 ;;		On entry : 0/0
  2184 ;;		On exit  : 0/0
  2185 ;;		Unchanged: 0/0
  2186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2187 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2188 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2189 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2190 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2191 ;;Total ram usage:       19 bytes
  2192 ;; Hardware stack levels used: 1
  2193 ;; Hardware stack levels required when called: 5
  2194 ;; This function calls:
  2195 ;;		_LED_C
  2196 ;;		___flmul
  2197 ;;		___xxtofl
  2198 ;;		_color_read_Clear
  2199 ;;		_color_read_Green
  2200 ;;		_lroundf
  2201 ;; This function is called by:
  2202 ;;		_main
  2203 ;;		_test_function
  2204 ;; This function uses a non-reentrant model
  2205 ;;
  2206                           
  2207                           	psect	text3
  2208  004FFC                     __ptext3:
  2209                           	callstack 0
  2210  004FFC                     _distance_measure:
  2211                           	callstack 24
  2212  004FFC  0E00               	movlw	0
  2213  004FFE  0100               	movlb	0	; () banked
  2214  005000  6F73               	movwf	(distance_measure@CG_amb+1)& (0+255),b
  2215  005002  0E00               	movlw	0
  2216  005004  6F72               	movwf	distance_measure@CG_amb& (0+255),b
  2217                           
  2218                           ;color.c: 404:     unsigned char stop = 0;
  2219  005006  0E00               	movlw	0
  2220  005008  6F7C               	movwf	distance_measure@stop& (0+255),b
  2221                           
  2222                           ;color.c: 405:     unsigned int threshold = 0;
  2223  00500A  0E00               	movlw	0
  2224  00500C  6F7B               	movwf	(distance_measure@threshold+1)& (0+255),b
  2225  00500E  0E00               	movlw	0
  2226  005010  6F7A               	movwf	distance_measure@threshold& (0+255),b
  2227  005012                     
  2228                           ; BSR set to: 0
  2229                           ;color.c: 406:     LED_C();
  2230  005012  EC3B  F02E         	call	_LED_C	;wreg free
  2231  005016                     
  2232                           ;color.c: 407:     _delay((unsigned long)((100)*(64000000/4000.0)));
  2233  005016  0E09               	movlw	9
  2234  005018  0100               	movlb	0	; () banked
  2235  00501A  6F71               	movwf	(??_distance_measure+1)& (0+255),b
  2236  00501C  0E1E               	movlw	30
  2237  00501E  6F70               	movwf	??_distance_measure& (0+255),b
  2238  005020  0EE4               	movlw	228
  2239  005022                     u5857:
  2240  005022  2EE8               	decfsz	wreg,f,c
  2241  005024  D7FE               	bra	u5857
  2242  005026  2F70               	decfsz	??_distance_measure& (0+255),f,b
  2243  005028  D7FC               	bra	u5857
  2244  00502A  2F71               	decfsz	(??_distance_measure+1)& (0+255),f,b
  2245  00502C  D7FA               	bra	u5857
  2246  00502E  F000               	nop	
  2247  005030                     
  2248                           ;color.c: 408:     CC_amb = color_read_Clear();
  2249  005030  EC8F  F02B         	call	_color_read_Clear	;wreg free
  2250  005034  C005  F078         	movff	?_color_read_Clear,distance_measure@CC_amb
  2251  005038  C006  F079         	movff	?_color_read_Clear+1,distance_measure@CC_amb+1
  2252  00503C  EC3F  F02B         	call	_color_read_Green	;wreg free
  2253  005040                     
  2254                           ;color.c: 410:     threshold = lroundf((float)amb_light * 1.1);
  2255  005040  C06E  F001         	movff	distance_measure@amb_light,___xxtofl@val
  2256  005044  C06F  F002         	movff	distance_measure@amb_light+1,___xxtofl@val+1
  2257  005048  6A03               	clrf	(___xxtofl@val+2)^0,c
  2258  00504A  6A04               	clrf	(___xxtofl@val+3)^0,c
  2259  00504C  0E00               	movlw	0
  2260  00504E  ECB5  F01F         	call	___xxtofl
  2261  005052  C001  F028         	movff	?___xxtofl,___flmul@b
  2262  005056  C002  F029         	movff	?___xxtofl+1,___flmul@b+1
  2263  00505A  C003  F02A         	movff	?___xxtofl+2,___flmul@b+2
  2264  00505E  C004  F02B         	movff	?___xxtofl+3,___flmul@b+3
  2265  005062  0ECD               	movlw	205
  2266  005064  6E2C               	movwf	___flmul@a^0,c
  2267  005066  0ECC               	movlw	204
  2268  005068  6E2D               	movwf	(___flmul@a+1)^0,c
  2269  00506A  0E8C               	movlw	140
  2270  00506C  6E2E               	movwf	(___flmul@a+2)^0,c
  2271  00506E  0E3F               	movlw	63
  2272  005070  6E2F               	movwf	(___flmul@a+3)^0,c
  2273  005072  EC6C  F00F         	call	___flmul	;wreg free
  2274  005076  C028  F074         	movff	?___flmul,_distance_measure$3253
  2275  00507A  C029  F075         	movff	?___flmul+1,_distance_measure$3253+1
  2276  00507E  C02A  F076         	movff	?___flmul+2,_distance_measure$3253+2
  2277  005082  C02B  F077         	movff	?___flmul+3,_distance_measure$3253+3
  2278  005086                     
  2279                           ;color.c: 410:     threshold = lroundf((float)amb_light * 1.1);
  2280  005086  C074  F066         	movff	_distance_measure$3253,lroundf@x
  2281  00508A  C075  F067         	movff	_distance_measure$3253+1,lroundf@x+1
  2282  00508E  C076  F068         	movff	_distance_measure$3253+2,lroundf@x+2
  2283  005092  C077  F069         	movff	_distance_measure$3253+3,lroundf@x+3
  2284  005096  EC22  F02D         	call	_lroundf	;wreg free
  2285  00509A  C066  F07A         	movff	?_lroundf,distance_measure@threshold
  2286  00509E  C067  F07B         	movff	?_lroundf+1,distance_measure@threshold+1
  2287  0050A2                     
  2288                           ;color.c: 413:     if (CC_amb >= threshold){stop = 1;}
  2289  0050A2  0100               	movlb	0	; () banked
  2290  0050A4  517A               	movf	distance_measure@threshold& (0+255),w,b
  2291  0050A6  5D78               	subwf	distance_measure@CC_amb& (0+255),w,b
  2292  0050A8  517B               	movf	(distance_measure@threshold+1)& (0+255),w,b
  2293  0050AA  5979               	subwfb	(distance_measure@CC_amb+1)& (0+255),w,b
  2294  0050AC  A0D8               	btfss	status,0,c
  2295  0050AE  EF5B  F028         	goto	u5321
  2296  0050B2  EF5D  F028         	goto	u5320
  2297  0050B6                     u5321:
  2298  0050B6  EF5F  F028         	goto	l164
  2299  0050BA                     u5320:
  2300  0050BA                     
  2301                           ; BSR set to: 0
  2302  0050BA  0E01               	movlw	1
  2303  0050BC  6F7C               	movwf	distance_measure@stop& (0+255),b
  2304  0050BE                     l164:
  2305                           
  2306                           ; BSR set to: 0
  2307                           ;color.c: 414:     return stop;
  2308  0050BE  517C               	movf	distance_measure@stop& (0+255),w,b
  2309  0050C0                     
  2310                           ; BSR set to: 0
  2311  0050C0  0012               	return		;funcret
  2312  0050C2                     __end_of_distance_measure:
  2313                           	callstack 0
  2314                           
  2315 ;; *************** function _detect_color *****************
  2316 ;; Defined at:
  2317 ;;		line 290 in file "color.c"
  2318 ;; Parameters:    Size  Location     Type
  2319 ;;  m               2   17[BANK0 ] PTR struct color_rgb
  2320 ;;		 -> main@rgb(8), 
  2321 ;;  w               2   19[BANK0 ] PTR struct white_card
  2322 ;;		 -> main@white(28), 
  2323 ;; Auto vars:     Size  Location     Type
  2324 ;;  BG              2   44[BANK0 ] unsigned int 
  2325 ;;  RR              2   42[BANK0 ] unsigned int 
  2326 ;;  GG              2   39[BANK0 ] unsigned int 
  2327 ;;  BR              2   37[BANK0 ] unsigned int 
  2328 ;;  GB              2   35[BANK0 ] unsigned int 
  2329 ;;  RB              2   33[BANK0 ] unsigned int 
  2330 ;;  BB              2   31[BANK0 ] unsigned int 
  2331 ;;  GR              2   29[BANK0 ] unsigned int 
  2332 ;;  BC              2   27[BANK0 ] unsigned int 
  2333 ;;  RG              2   25[BANK0 ] unsigned int 
  2334 ;;  color           1   41[BANK0 ] unsigned char 
  2335 ;; Return value:  Size  Location     Type
  2336 ;;                  1    wreg      unsigned char 
  2337 ;; Registers used:
  2338 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2339 ;; Tracked objects:
  2340 ;;		On entry : 0/0
  2341 ;;		On exit  : 0/0
  2342 ;;		Unchanged: 0/0
  2343 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2344 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2345 ;;      Locals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2346 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2347 ;;      Totals:         0      33       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2348 ;;Total ram usage:       33 bytes
  2349 ;; Hardware stack levels used: 1
  2350 ;; Hardware stack levels required when called: 5
  2351 ;; This function calls:
  2352 ;;		_LED_B
  2353 ;;		_LED_G
  2354 ;;		_LED_R
  2355 ;;		___fldiv
  2356 ;;		___flmul
  2357 ;;		___xxtofl
  2358 ;;		_compare
  2359 ;;		_lroundf
  2360 ;;		_read_color
  2361 ;;		_toggle_light
  2362 ;; This function is called by:
  2363 ;;		_verify_color
  2364 ;;		_main
  2365 ;;		_test_function
  2366 ;; This function uses a non-reentrant model
  2367 ;;
  2368                           
  2369                           	psect	text4
  2370  000E14                     __ptext4:
  2371                           	callstack 0
  2372  000E14                     _detect_color:
  2373                           	callstack 24
  2374  000E14  0E00               	movlw	0
  2375  000E16  0100               	movlb	0	; () banked
  2376  000E18  6F7A               	movwf	(detect_color@RG+1)& (0+255),b
  2377  000E1A  0E00               	movlw	0
  2378  000E1C  6F79               	movwf	detect_color@RG& (0+255),b
  2379  000E1E  0E00               	movlw	0
  2380  000E20  6F82               	movwf	(detect_color@RB+1)& (0+255),b
  2381  000E22  0E00               	movlw	0
  2382  000E24  6F81               	movwf	detect_color@RB& (0+255),b
  2383  000E26  0E00               	movlw	0
  2384  000E28  6F7E               	movwf	(detect_color@GR+1)& (0+255),b
  2385  000E2A  0E00               	movlw	0
  2386  000E2C  6F7D               	movwf	detect_color@GR& (0+255),b
  2387  000E2E  0E00               	movlw	0
  2388  000E30  6F88               	movwf	(detect_color@GG+1)& (0+255),b
  2389  000E32  0E00               	movlw	0
  2390  000E34  6F87               	movwf	detect_color@GG& (0+255),b
  2391  000E36  0E00               	movlw	0
  2392  000E38  6F84               	movwf	(detect_color@GB+1)& (0+255),b
  2393  000E3A  0E00               	movlw	0
  2394  000E3C  6F83               	movwf	detect_color@GB& (0+255),b
  2395  000E3E  0E00               	movlw	0
  2396  000E40  6F86               	movwf	(detect_color@BR+1)& (0+255),b
  2397  000E42  0E00               	movlw	0
  2398  000E44  6F85               	movwf	detect_color@BR& (0+255),b
  2399  000E46  0E00               	movlw	0
  2400  000E48  6F8D               	movwf	(detect_color@BG+1)& (0+255),b
  2401  000E4A  0E00               	movlw	0
  2402  000E4C  6F8C               	movwf	detect_color@BG& (0+255),b
  2403  000E4E  0E00               	movlw	0
  2404  000E50  6F80               	movwf	(detect_color@BB+1)& (0+255),b
  2405  000E52  0E00               	movlw	0
  2406  000E54  6F7F               	movwf	detect_color@BB& (0+255),b
  2407  000E56  0E00               	movlw	0
  2408  000E58  6F7C               	movwf	(detect_color@BC+1)& (0+255),b
  2409  000E5A  0E00               	movlw	0
  2410  000E5C  6F7B               	movwf	detect_color@BC& (0+255),b
  2411                           
  2412                           ;color.c: 296:     unsigned char color = 0;
  2413  000E5E  0E00               	movlw	0
  2414  000E60  6F89               	movwf	detect_color@color& (0+255),b
  2415  000E62                     
  2416                           ; BSR set to: 0
  2417                           ;color.c: 298:     LED_R();
  2418  000E62  ECFB  F02D         	call	_LED_R	;wreg free
  2419  000E66                     
  2420                           ;color.c: 299:     _delay((unsigned long)((100)*(64000000/4000.0)));
  2421  000E66  0E09               	movlw	9
  2422  000E68  0100               	movlb	0	; () banked
  2423  000E6A  6F76               	movwf	(??_detect_color+1)& (0+255),b
  2424  000E6C  0E1E               	movlw	30
  2425  000E6E  6F75               	movwf	??_detect_color& (0+255),b
  2426  000E70  0EE4               	movlw	228
  2427  000E72                     u5867:
  2428  000E72  2EE8               	decfsz	wreg,f,c
  2429  000E74  D7FE               	bra	u5867
  2430  000E76  2F75               	decfsz	??_detect_color& (0+255),f,b
  2431  000E78  D7FC               	bra	u5867
  2432  000E7A  2F76               	decfsz	(??_detect_color+1)& (0+255),f,b
  2433  000E7C  D7FA               	bra	u5867
  2434  000E7E  F000               	nop	
  2435  000E80                     
  2436                           ;color.c: 300:     read_color(m);
  2437  000E80  C071  F00C         	movff	detect_color@m,read_color@m
  2438  000E84  C072  F00D         	movff	detect_color@m+1,read_color@m+1
  2439  000E88  ECBF  F02A         	call	_read_color	;wreg free
  2440  000E8C                     
  2441                           ;color.c: 302:     RR = lroundf((float)(m->R)/(w->RR)*100); RG = lroundf((float)(m->G)/(
      +                          w->RG)*100); RB = lroundf((float)(m->B)/(w->RB)*100);
  2442  000E8C  C073  FFD9         	movff	detect_color@w,fsr2l
  2443  000E90  C074  FFDA         	movff	detect_color@w+1,fsr2h
  2444  000E94  CFDE F075          	movff	postinc2,??_detect_color
  2445  000E98  CFDD F076          	movff	postdec2,??_detect_color+1
  2446  000E9C  C075  F001         	movff	??_detect_color,___xxtofl@val
  2447  000EA0  C076  F002         	movff	??_detect_color+1,___xxtofl@val+1
  2448  000EA4  6A03               	clrf	(___xxtofl@val+2)^0,c
  2449  000EA6  6A04               	clrf	(___xxtofl@val+3)^0,c
  2450  000EA8  0E00               	movlw	0
  2451  000EAA  ECB5  F01F         	call	___xxtofl
  2452  000EAE  C001  F013         	movff	?___xxtofl,___fldiv@a
  2453  000EB2  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  2454  000EB6  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  2455  000EBA  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  2456  000EBE  C071  FFD9         	movff	detect_color@m,fsr2l
  2457  000EC2  C072  FFDA         	movff	detect_color@m+1,fsr2h
  2458  000EC6  CFDE F077          	movff	postinc2,??_detect_color+2
  2459  000ECA  CFDD F078          	movff	postdec2,??_detect_color+3
  2460  000ECE  C077  F001         	movff	??_detect_color+2,___xxtofl@val
  2461  000ED2  C078  F002         	movff	??_detect_color+3,___xxtofl@val+1
  2462  000ED6  6A03               	clrf	(___xxtofl@val+2)^0,c
  2463  000ED8  6A04               	clrf	(___xxtofl@val+3)^0,c
  2464  000EDA  0E00               	movlw	0
  2465  000EDC  ECB5  F01F         	call	___xxtofl
  2466  000EE0  C001  F00F         	movff	?___xxtofl,___fldiv@b
  2467  000EE4  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  2468  000EE8  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  2469  000EEC  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  2470  000EF0  EC58  F013         	call	___fldiv	;wreg free
  2471  000EF4  C00F  F028         	movff	?___fldiv,___flmul@b
  2472  000EF8  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  2473  000EFC  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  2474  000F00  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  2475  000F04  0E00               	movlw	0
  2476  000F06  6E2C               	movwf	___flmul@a^0,c
  2477  000F08  0E00               	movlw	0
  2478  000F0A  6E2D               	movwf	(___flmul@a+1)^0,c
  2479  000F0C  0EC8               	movlw	200
  2480  000F0E  6E2E               	movwf	(___flmul@a+2)^0,c
  2481  000F10  0E42               	movlw	66
  2482  000F12  6E2F               	movwf	(___flmul@a+3)^0,c
  2483  000F14  EC6C  F00F         	call	___flmul	;wreg free
  2484  000F18  C028  F08E         	movff	?___flmul,_detect_color$3252
  2485  000F1C  C029  F08F         	movff	?___flmul+1,_detect_color$3252+1
  2486  000F20  C02A  F090         	movff	?___flmul+2,_detect_color$3252+2
  2487  000F24  C02B  F091         	movff	?___flmul+3,_detect_color$3252+3
  2488  000F28                     
  2489                           ;color.c: 302:     RR = lroundf((float)(m->R)/(w->RR)*100); RG = lroundf((float)(m->G)/(
      +                          w->RG)*100); RB = lroundf((float)(m->B)/(w->RB)*100);
  2490  000F28  C08E  F066         	movff	_detect_color$3252,lroundf@x
  2491  000F2C  C08F  F067         	movff	_detect_color$3252+1,lroundf@x+1
  2492  000F30  C090  F068         	movff	_detect_color$3252+2,lroundf@x+2
  2493  000F34  C091  F069         	movff	_detect_color$3252+3,lroundf@x+3
  2494  000F38  EC22  F02D         	call	_lroundf	;wreg free
  2495  000F3C  C066  F08A         	movff	?_lroundf,detect_color@RR
  2496  000F40  C067  F08B         	movff	?_lroundf+1,detect_color@RR+1
  2497  000F44  0100               	movlb	0	; () banked
  2498  000F46  EE20 F002          	lfsr	2,2
  2499  000F4A  5173               	movf	detect_color@w& (0+255),w,b
  2500  000F4C  26D9               	addwf	fsr2l,f,c
  2501  000F4E  5174               	movf	(detect_color@w+1)& (0+255),w,b
  2502  000F50  22DA               	addwfc	fsr2h,f,c
  2503  000F52  CFDE F075          	movff	postinc2,??_detect_color
  2504  000F56  CFDD F076          	movff	postdec2,??_detect_color+1
  2505  000F5A  C075  F001         	movff	??_detect_color,___xxtofl@val
  2506  000F5E  C076  F002         	movff	??_detect_color+1,___xxtofl@val+1
  2507  000F62  6A03               	clrf	(___xxtofl@val+2)^0,c
  2508  000F64  6A04               	clrf	(___xxtofl@val+3)^0,c
  2509  000F66  0E00               	movlw	0
  2510  000F68  ECB5  F01F         	call	___xxtofl
  2511  000F6C  C001  F013         	movff	?___xxtofl,___fldiv@a
  2512  000F70  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  2513  000F74  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  2514  000F78  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  2515  000F7C  0100               	movlb	0	; () banked
  2516  000F7E  EE20 F002          	lfsr	2,2
  2517  000F82  5171               	movf	detect_color@m& (0+255),w,b
  2518  000F84  26D9               	addwf	fsr2l,f,c
  2519  000F86  5172               	movf	(detect_color@m+1)& (0+255),w,b
  2520  000F88  22DA               	addwfc	fsr2h,f,c
  2521  000F8A  CFDE F077          	movff	postinc2,??_detect_color+2
  2522  000F8E  CFDD F078          	movff	postdec2,??_detect_color+3
  2523  000F92  C077  F001         	movff	??_detect_color+2,___xxtofl@val
  2524  000F96  C078  F002         	movff	??_detect_color+3,___xxtofl@val+1
  2525  000F9A  6A03               	clrf	(___xxtofl@val+2)^0,c
  2526  000F9C  6A04               	clrf	(___xxtofl@val+3)^0,c
  2527  000F9E  0E00               	movlw	0
  2528  000FA0  ECB5  F01F         	call	___xxtofl
  2529  000FA4  C001  F00F         	movff	?___xxtofl,___fldiv@b
  2530  000FA8  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  2531  000FAC  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  2532  000FB0  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  2533  000FB4  EC58  F013         	call	___fldiv	;wreg free
  2534  000FB8  C00F  F028         	movff	?___fldiv,___flmul@b
  2535  000FBC  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  2536  000FC0  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  2537  000FC4  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  2538  000FC8  0E00               	movlw	0
  2539  000FCA  6E2C               	movwf	___flmul@a^0,c
  2540  000FCC  0E00               	movlw	0
  2541  000FCE  6E2D               	movwf	(___flmul@a+1)^0,c
  2542  000FD0  0EC8               	movlw	200
  2543  000FD2  6E2E               	movwf	(___flmul@a+2)^0,c
  2544  000FD4  0E42               	movlw	66
  2545  000FD6  6E2F               	movwf	(___flmul@a+3)^0,c
  2546  000FD8  EC6C  F00F         	call	___flmul	;wreg free
  2547  000FDC  C028  F08E         	movff	?___flmul,_detect_color$3252
  2548  000FE0  C029  F08F         	movff	?___flmul+1,_detect_color$3252+1
  2549  000FE4  C02A  F090         	movff	?___flmul+2,_detect_color$3252+2
  2550  000FE8  C02B  F091         	movff	?___flmul+3,_detect_color$3252+3
  2551  000FEC  C08E  F066         	movff	_detect_color$3252,lroundf@x
  2552  000FF0  C08F  F067         	movff	_detect_color$3252+1,lroundf@x+1
  2553  000FF4  C090  F068         	movff	_detect_color$3252+2,lroundf@x+2
  2554  000FF8  C091  F069         	movff	_detect_color$3252+3,lroundf@x+3
  2555  000FFC  EC22  F02D         	call	_lroundf	;wreg free
  2556  001000  0100               	movlb	0	; () banked
  2557  001002  EE20 F004          	lfsr	2,4
  2558  001006  5173               	movf	detect_color@w& (0+255),w,b
  2559  001008  26D9               	addwf	fsr2l,f,c
  2560  00100A  5174               	movf	(detect_color@w+1)& (0+255),w,b
  2561  00100C  22DA               	addwfc	fsr2h,f,c
  2562  00100E  CFDE F075          	movff	postinc2,??_detect_color
  2563  001012  CFDD F076          	movff	postdec2,??_detect_color+1
  2564  001016  C075  F001         	movff	??_detect_color,___xxtofl@val
  2565  00101A  C076  F002         	movff	??_detect_color+1,___xxtofl@val+1
  2566  00101E  6A03               	clrf	(___xxtofl@val+2)^0,c
  2567  001020  6A04               	clrf	(___xxtofl@val+3)^0,c
  2568  001022  0E00               	movlw	0
  2569  001024  ECB5  F01F         	call	___xxtofl
  2570  001028  C001  F013         	movff	?___xxtofl,___fldiv@a
  2571  00102C  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  2572  001030  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  2573  001034  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  2574  001038  0100               	movlb	0	; () banked
  2575  00103A  EE20 F004          	lfsr	2,4
  2576  00103E  5171               	movf	detect_color@m& (0+255),w,b
  2577  001040  26D9               	addwf	fsr2l,f,c
  2578  001042  5172               	movf	(detect_color@m+1)& (0+255),w,b
  2579  001044  22DA               	addwfc	fsr2h,f,c
  2580  001046  CFDE F077          	movff	postinc2,??_detect_color+2
  2581  00104A  CFDD F078          	movff	postdec2,??_detect_color+3
  2582  00104E  C077  F001         	movff	??_detect_color+2,___xxtofl@val
  2583  001052  C078  F002         	movff	??_detect_color+3,___xxtofl@val+1
  2584  001056  6A03               	clrf	(___xxtofl@val+2)^0,c
  2585  001058  6A04               	clrf	(___xxtofl@val+3)^0,c
  2586  00105A  0E00               	movlw	0
  2587  00105C  ECB5  F01F         	call	___xxtofl
  2588  001060  C001  F00F         	movff	?___xxtofl,___fldiv@b
  2589  001064  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  2590  001068  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  2591  00106C  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  2592  001070  EC58  F013         	call	___fldiv	;wreg free
  2593  001074  C00F  F028         	movff	?___fldiv,___flmul@b
  2594  001078  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  2595  00107C  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  2596  001080  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  2597  001084  0E00               	movlw	0
  2598  001086  6E2C               	movwf	___flmul@a^0,c
  2599  001088  0E00               	movlw	0
  2600  00108A  6E2D               	movwf	(___flmul@a+1)^0,c
  2601  00108C  0EC8               	movlw	200
  2602  00108E  6E2E               	movwf	(___flmul@a+2)^0,c
  2603  001090  0E42               	movlw	66
  2604  001092  6E2F               	movwf	(___flmul@a+3)^0,c
  2605  001094  EC6C  F00F         	call	___flmul	;wreg free
  2606  001098  C028  F08E         	movff	?___flmul,_detect_color$3252
  2607  00109C  C029  F08F         	movff	?___flmul+1,_detect_color$3252+1
  2608  0010A0  C02A  F090         	movff	?___flmul+2,_detect_color$3252+2
  2609  0010A4  C02B  F091         	movff	?___flmul+3,_detect_color$3252+3
  2610  0010A8  C08E  F066         	movff	_detect_color$3252,lroundf@x
  2611  0010AC  C08F  F067         	movff	_detect_color$3252+1,lroundf@x+1
  2612  0010B0  C090  F068         	movff	_detect_color$3252+2,lroundf@x+2
  2613  0010B4  C091  F069         	movff	_detect_color$3252+3,lroundf@x+3
  2614  0010B8  EC22  F02D         	call	_lroundf	;wreg free
  2615  0010BC  C066  F081         	movff	?_lroundf,detect_color@RB
  2616  0010C0  C067  F082         	movff	?_lroundf+1,detect_color@RB+1
  2617  0010C4                     
  2618                           ;color.c: 303:     _delay((unsigned long)((50)*(64000000/4000.0)));
  2619  0010C4  0E05               	movlw	5
  2620  0010C6  0100               	movlb	0	; () banked
  2621  0010C8  6F76               	movwf	(??_detect_color+1)& (0+255),b
  2622  0010CA  0E0F               	movlw	15
  2623  0010CC  6F75               	movwf	??_detect_color& (0+255),b
  2624  0010CE  0EF1               	movlw	241
  2625  0010D0                     u5877:
  2626  0010D0  2EE8               	decfsz	wreg,f,c
  2627  0010D2  D7FE               	bra	u5877
  2628  0010D4  2F75               	decfsz	??_detect_color& (0+255),f,b
  2629  0010D6  D7FC               	bra	u5877
  2630  0010D8  2F76               	decfsz	(??_detect_color+1)& (0+255),f,b
  2631  0010DA  D7FA               	bra	u5877
  2632  0010DC                     
  2633                           ;color.c: 309:     LED_G();
  2634  0010DC  EC1B  F02E         	call	_LED_G	;wreg free
  2635  0010E0                     
  2636                           ;color.c: 310:     _delay((unsigned long)((100)*(64000000/4000.0)));
  2637  0010E0  0E09               	movlw	9
  2638  0010E2  0100               	movlb	0	; () banked
  2639  0010E4  6F76               	movwf	(??_detect_color+1)& (0+255),b
  2640  0010E6  0E1E               	movlw	30
  2641  0010E8  6F75               	movwf	??_detect_color& (0+255),b
  2642  0010EA  0EE4               	movlw	228
  2643  0010EC                     u5887:
  2644  0010EC  2EE8               	decfsz	wreg,f,c
  2645  0010EE  D7FE               	bra	u5887
  2646  0010F0  2F75               	decfsz	??_detect_color& (0+255),f,b
  2647  0010F2  D7FC               	bra	u5887
  2648  0010F4  2F76               	decfsz	(??_detect_color+1)& (0+255),f,b
  2649  0010F6  D7FA               	bra	u5887
  2650  0010F8  F000               	nop	
  2651  0010FA                     
  2652                           ;color.c: 311:     read_color(m);
  2653  0010FA  C071  F00C         	movff	detect_color@m,read_color@m
  2654  0010FE  C072  F00D         	movff	detect_color@m+1,read_color@m+1
  2655  001102  ECBF  F02A         	call	_read_color	;wreg free
  2656  001106                     
  2657                           ;color.c: 314:     GR = lroundf((float)(m->R)/(w->GR)*100); GG = lroundf((float)(m->G)/(
      +                          w->GG)*100); GB = lroundf((float)(m->B)/(w->GB)*100);
  2658  001106  0100               	movlb	0	; () banked
  2659  001108  EE20 F006          	lfsr	2,6
  2660  00110C  5173               	movf	detect_color@w& (0+255),w,b
  2661  00110E  26D9               	addwf	fsr2l,f,c
  2662  001110  5174               	movf	(detect_color@w+1)& (0+255),w,b
  2663  001112  22DA               	addwfc	fsr2h,f,c
  2664  001114  CFDE F075          	movff	postinc2,??_detect_color
  2665  001118  CFDD F076          	movff	postdec2,??_detect_color+1
  2666  00111C  C075  F001         	movff	??_detect_color,___xxtofl@val
  2667  001120  C076  F002         	movff	??_detect_color+1,___xxtofl@val+1
  2668  001124  6A03               	clrf	(___xxtofl@val+2)^0,c
  2669  001126  6A04               	clrf	(___xxtofl@val+3)^0,c
  2670  001128  0E00               	movlw	0
  2671  00112A  ECB5  F01F         	call	___xxtofl
  2672  00112E  C001  F013         	movff	?___xxtofl,___fldiv@a
  2673  001132  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  2674  001136  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  2675  00113A  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  2676  00113E  C071  FFD9         	movff	detect_color@m,fsr2l
  2677  001142  C072  FFDA         	movff	detect_color@m+1,fsr2h
  2678  001146  CFDE F077          	movff	postinc2,??_detect_color+2
  2679  00114A  CFDD F078          	movff	postdec2,??_detect_color+3
  2680  00114E  C077  F001         	movff	??_detect_color+2,___xxtofl@val
  2681  001152  C078  F002         	movff	??_detect_color+3,___xxtofl@val+1
  2682  001156  6A03               	clrf	(___xxtofl@val+2)^0,c
  2683  001158  6A04               	clrf	(___xxtofl@val+3)^0,c
  2684  00115A  0E00               	movlw	0
  2685  00115C  ECB5  F01F         	call	___xxtofl
  2686  001160  C001  F00F         	movff	?___xxtofl,___fldiv@b
  2687  001164  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  2688  001168  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  2689  00116C  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  2690  001170  EC58  F013         	call	___fldiv	;wreg free
  2691  001174  C00F  F028         	movff	?___fldiv,___flmul@b
  2692  001178  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  2693  00117C  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  2694  001180  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  2695  001184  0E00               	movlw	0
  2696  001186  6E2C               	movwf	___flmul@a^0,c
  2697  001188  0E00               	movlw	0
  2698  00118A  6E2D               	movwf	(___flmul@a+1)^0,c
  2699  00118C  0EC8               	movlw	200
  2700  00118E  6E2E               	movwf	(___flmul@a+2)^0,c
  2701  001190  0E42               	movlw	66
  2702  001192  6E2F               	movwf	(___flmul@a+3)^0,c
  2703  001194  EC6C  F00F         	call	___flmul	;wreg free
  2704  001198  C028  F08E         	movff	?___flmul,_detect_color$3252
  2705  00119C  C029  F08F         	movff	?___flmul+1,_detect_color$3252+1
  2706  0011A0  C02A  F090         	movff	?___flmul+2,_detect_color$3252+2
  2707  0011A4  C02B  F091         	movff	?___flmul+3,_detect_color$3252+3
  2708  0011A8                     
  2709                           ;color.c: 314:     GR = lroundf((float)(m->R)/(w->GR)*100); GG = lroundf((float)(m->G)/(
      +                          w->GG)*100); GB = lroundf((float)(m->B)/(w->GB)*100);
  2710  0011A8  C08E  F066         	movff	_detect_color$3252,lroundf@x
  2711  0011AC  C08F  F067         	movff	_detect_color$3252+1,lroundf@x+1
  2712  0011B0  C090  F068         	movff	_detect_color$3252+2,lroundf@x+2
  2713  0011B4  C091  F069         	movff	_detect_color$3252+3,lroundf@x+3
  2714  0011B8  EC22  F02D         	call	_lroundf	;wreg free
  2715  0011BC  C066  F07D         	movff	?_lroundf,detect_color@GR
  2716  0011C0  C067  F07E         	movff	?_lroundf+1,detect_color@GR+1
  2717  0011C4  0100               	movlb	0	; () banked
  2718  0011C6  EE20 F008          	lfsr	2,8
  2719  0011CA  5173               	movf	detect_color@w& (0+255),w,b
  2720  0011CC  26D9               	addwf	fsr2l,f,c
  2721  0011CE  5174               	movf	(detect_color@w+1)& (0+255),w,b
  2722  0011D0  22DA               	addwfc	fsr2h,f,c
  2723  0011D2  CFDE F075          	movff	postinc2,??_detect_color
  2724  0011D6  CFDD F076          	movff	postdec2,??_detect_color+1
  2725  0011DA  C075  F001         	movff	??_detect_color,___xxtofl@val
  2726  0011DE  C076  F002         	movff	??_detect_color+1,___xxtofl@val+1
  2727  0011E2  6A03               	clrf	(___xxtofl@val+2)^0,c
  2728  0011E4  6A04               	clrf	(___xxtofl@val+3)^0,c
  2729  0011E6  0E00               	movlw	0
  2730  0011E8  ECB5  F01F         	call	___xxtofl
  2731  0011EC  C001  F013         	movff	?___xxtofl,___fldiv@a
  2732  0011F0  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  2733  0011F4  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  2734  0011F8  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  2735  0011FC  0100               	movlb	0	; () banked
  2736  0011FE  EE20 F002          	lfsr	2,2
  2737  001202  5171               	movf	detect_color@m& (0+255),w,b
  2738  001204  26D9               	addwf	fsr2l,f,c
  2739  001206  5172               	movf	(detect_color@m+1)& (0+255),w,b
  2740  001208  22DA               	addwfc	fsr2h,f,c
  2741  00120A  CFDE F077          	movff	postinc2,??_detect_color+2
  2742  00120E  CFDD F078          	movff	postdec2,??_detect_color+3
  2743  001212  C077  F001         	movff	??_detect_color+2,___xxtofl@val
  2744  001216  C078  F002         	movff	??_detect_color+3,___xxtofl@val+1
  2745  00121A  6A03               	clrf	(___xxtofl@val+2)^0,c
  2746  00121C  6A04               	clrf	(___xxtofl@val+3)^0,c
  2747  00121E  0E00               	movlw	0
  2748  001220  ECB5  F01F         	call	___xxtofl
  2749  001224  C001  F00F         	movff	?___xxtofl,___fldiv@b
  2750  001228  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  2751  00122C  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  2752  001230  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  2753  001234  EC58  F013         	call	___fldiv	;wreg free
  2754  001238  C00F  F028         	movff	?___fldiv,___flmul@b
  2755  00123C  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  2756  001240  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  2757  001244  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  2758  001248  0E00               	movlw	0
  2759  00124A  6E2C               	movwf	___flmul@a^0,c
  2760  00124C  0E00               	movlw	0
  2761  00124E  6E2D               	movwf	(___flmul@a+1)^0,c
  2762  001250  0EC8               	movlw	200
  2763  001252  6E2E               	movwf	(___flmul@a+2)^0,c
  2764  001254  0E42               	movlw	66
  2765  001256  6E2F               	movwf	(___flmul@a+3)^0,c
  2766  001258  EC6C  F00F         	call	___flmul	;wreg free
  2767  00125C  C028  F08E         	movff	?___flmul,_detect_color$3252
  2768  001260  C029  F08F         	movff	?___flmul+1,_detect_color$3252+1
  2769  001264  C02A  F090         	movff	?___flmul+2,_detect_color$3252+2
  2770  001268  C02B  F091         	movff	?___flmul+3,_detect_color$3252+3
  2771  00126C  C08E  F066         	movff	_detect_color$3252,lroundf@x
  2772  001270  C08F  F067         	movff	_detect_color$3252+1,lroundf@x+1
  2773  001274  C090  F068         	movff	_detect_color$3252+2,lroundf@x+2
  2774  001278  C091  F069         	movff	_detect_color$3252+3,lroundf@x+3
  2775  00127C  EC22  F02D         	call	_lroundf	;wreg free
  2776  001280  C066  F087         	movff	?_lroundf,detect_color@GG
  2777  001284  C067  F088         	movff	?_lroundf+1,detect_color@GG+1
  2778  001288  0100               	movlb	0	; () banked
  2779  00128A  EE20 F00A          	lfsr	2,10
  2780  00128E  5173               	movf	detect_color@w& (0+255),w,b
  2781  001290  26D9               	addwf	fsr2l,f,c
  2782  001292  5174               	movf	(detect_color@w+1)& (0+255),w,b
  2783  001294  22DA               	addwfc	fsr2h,f,c
  2784  001296  CFDE F075          	movff	postinc2,??_detect_color
  2785  00129A  CFDD F076          	movff	postdec2,??_detect_color+1
  2786  00129E  C075  F001         	movff	??_detect_color,___xxtofl@val
  2787  0012A2  C076  F002         	movff	??_detect_color+1,___xxtofl@val+1
  2788  0012A6  6A03               	clrf	(___xxtofl@val+2)^0,c
  2789  0012A8  6A04               	clrf	(___xxtofl@val+3)^0,c
  2790  0012AA  0E00               	movlw	0
  2791  0012AC  ECB5  F01F         	call	___xxtofl
  2792  0012B0  C001  F013         	movff	?___xxtofl,___fldiv@a
  2793  0012B4  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  2794  0012B8  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  2795  0012BC  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  2796  0012C0  0100               	movlb	0	; () banked
  2797  0012C2  EE20 F004          	lfsr	2,4
  2798  0012C6  5171               	movf	detect_color@m& (0+255),w,b
  2799  0012C8  26D9               	addwf	fsr2l,f,c
  2800  0012CA  5172               	movf	(detect_color@m+1)& (0+255),w,b
  2801  0012CC  22DA               	addwfc	fsr2h,f,c
  2802  0012CE  CFDE F077          	movff	postinc2,??_detect_color+2
  2803  0012D2  CFDD F078          	movff	postdec2,??_detect_color+3
  2804  0012D6  C077  F001         	movff	??_detect_color+2,___xxtofl@val
  2805  0012DA  C078  F002         	movff	??_detect_color+3,___xxtofl@val+1
  2806  0012DE  6A03               	clrf	(___xxtofl@val+2)^0,c
  2807  0012E0  6A04               	clrf	(___xxtofl@val+3)^0,c
  2808  0012E2  0E00               	movlw	0
  2809  0012E4  ECB5  F01F         	call	___xxtofl
  2810  0012E8  C001  F00F         	movff	?___xxtofl,___fldiv@b
  2811  0012EC  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  2812  0012F0  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  2813  0012F4  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  2814  0012F8  EC58  F013         	call	___fldiv	;wreg free
  2815  0012FC  C00F  F028         	movff	?___fldiv,___flmul@b
  2816  001300  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  2817  001304  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  2818  001308  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  2819  00130C  0E00               	movlw	0
  2820  00130E  6E2C               	movwf	___flmul@a^0,c
  2821  001310  0E00               	movlw	0
  2822  001312  6E2D               	movwf	(___flmul@a+1)^0,c
  2823  001314  0EC8               	movlw	200
  2824  001316  6E2E               	movwf	(___flmul@a+2)^0,c
  2825  001318  0E42               	movlw	66
  2826  00131A  6E2F               	movwf	(___flmul@a+3)^0,c
  2827  00131C  EC6C  F00F         	call	___flmul	;wreg free
  2828  001320  C028  F08E         	movff	?___flmul,_detect_color$3252
  2829  001324  C029  F08F         	movff	?___flmul+1,_detect_color$3252+1
  2830  001328  C02A  F090         	movff	?___flmul+2,_detect_color$3252+2
  2831  00132C  C02B  F091         	movff	?___flmul+3,_detect_color$3252+3
  2832  001330  C08E  F066         	movff	_detect_color$3252,lroundf@x
  2833  001334  C08F  F067         	movff	_detect_color$3252+1,lroundf@x+1
  2834  001338  C090  F068         	movff	_detect_color$3252+2,lroundf@x+2
  2835  00133C  C091  F069         	movff	_detect_color$3252+3,lroundf@x+3
  2836  001340  EC22  F02D         	call	_lroundf	;wreg free
  2837  001344  C066  F083         	movff	?_lroundf,detect_color@GB
  2838  001348  C067  F084         	movff	?_lroundf+1,detect_color@GB+1
  2839  00134C                     
  2840                           ;color.c: 319:     LED_B();
  2841  00134C  EC2B  F02E         	call	_LED_B	;wreg free
  2842  001350                     
  2843                           ;color.c: 320:     _delay((unsigned long)((100)*(64000000/4000.0)));
  2844  001350  0E09               	movlw	9
  2845  001352  0100               	movlb	0	; () banked
  2846  001354  6F76               	movwf	(??_detect_color+1)& (0+255),b
  2847  001356  0E1E               	movlw	30
  2848  001358  6F75               	movwf	??_detect_color& (0+255),b
  2849  00135A  0EE4               	movlw	228
  2850  00135C                     u5897:
  2851  00135C  2EE8               	decfsz	wreg,f,c
  2852  00135E  D7FE               	bra	u5897
  2853  001360  2F75               	decfsz	??_detect_color& (0+255),f,b
  2854  001362  D7FC               	bra	u5897
  2855  001364  2F76               	decfsz	(??_detect_color+1)& (0+255),f,b
  2856  001366  D7FA               	bra	u5897
  2857  001368  F000               	nop	
  2858  00136A                     
  2859                           ;color.c: 321:     read_color(m);
  2860  00136A  C071  F00C         	movff	detect_color@m,read_color@m
  2861  00136E  C072  F00D         	movff	detect_color@m+1,read_color@m+1
  2862  001372  ECBF  F02A         	call	_read_color	;wreg free
  2863  001376                     
  2864                           ;color.c: 322:     BR = lroundf((float)(m->R)/(w->BR)*100); BG = lroundf((float)(m->G)/(
      +                          w->BG)*100); BB = lroundf((float)(m->B)/(w->BB)*100);
  2865  001376  0100               	movlb	0	; () banked
  2866  001378  EE20 F00C          	lfsr	2,12
  2867  00137C  5173               	movf	detect_color@w& (0+255),w,b
  2868  00137E  26D9               	addwf	fsr2l,f,c
  2869  001380  5174               	movf	(detect_color@w+1)& (0+255),w,b
  2870  001382  22DA               	addwfc	fsr2h,f,c
  2871  001384  CFDE F075          	movff	postinc2,??_detect_color
  2872  001388  CFDD F076          	movff	postdec2,??_detect_color+1
  2873  00138C  C075  F001         	movff	??_detect_color,___xxtofl@val
  2874  001390  C076  F002         	movff	??_detect_color+1,___xxtofl@val+1
  2875  001394  6A03               	clrf	(___xxtofl@val+2)^0,c
  2876  001396  6A04               	clrf	(___xxtofl@val+3)^0,c
  2877  001398  0E00               	movlw	0
  2878  00139A  ECB5  F01F         	call	___xxtofl
  2879  00139E  C001  F013         	movff	?___xxtofl,___fldiv@a
  2880  0013A2  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  2881  0013A6  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  2882  0013AA  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  2883  0013AE  C071  FFD9         	movff	detect_color@m,fsr2l
  2884  0013B2  C072  FFDA         	movff	detect_color@m+1,fsr2h
  2885  0013B6  CFDE F077          	movff	postinc2,??_detect_color+2
  2886  0013BA  CFDD F078          	movff	postdec2,??_detect_color+3
  2887  0013BE  C077  F001         	movff	??_detect_color+2,___xxtofl@val
  2888  0013C2  C078  F002         	movff	??_detect_color+3,___xxtofl@val+1
  2889  0013C6  6A03               	clrf	(___xxtofl@val+2)^0,c
  2890  0013C8  6A04               	clrf	(___xxtofl@val+3)^0,c
  2891  0013CA  0E00               	movlw	0
  2892  0013CC  ECB5  F01F         	call	___xxtofl
  2893  0013D0  C001  F00F         	movff	?___xxtofl,___fldiv@b
  2894  0013D4  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  2895  0013D8  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  2896  0013DC  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  2897  0013E0  EC58  F013         	call	___fldiv	;wreg free
  2898  0013E4  C00F  F028         	movff	?___fldiv,___flmul@b
  2899  0013E8  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  2900  0013EC  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  2901  0013F0  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  2902  0013F4  0E00               	movlw	0
  2903  0013F6  6E2C               	movwf	___flmul@a^0,c
  2904  0013F8  0E00               	movlw	0
  2905  0013FA  6E2D               	movwf	(___flmul@a+1)^0,c
  2906  0013FC  0EC8               	movlw	200
  2907  0013FE  6E2E               	movwf	(___flmul@a+2)^0,c
  2908  001400  0E42               	movlw	66
  2909  001402  6E2F               	movwf	(___flmul@a+3)^0,c
  2910  001404  EC6C  F00F         	call	___flmul	;wreg free
  2911  001408  C028  F08E         	movff	?___flmul,_detect_color$3252
  2912  00140C  C029  F08F         	movff	?___flmul+1,_detect_color$3252+1
  2913  001410  C02A  F090         	movff	?___flmul+2,_detect_color$3252+2
  2914  001414  C02B  F091         	movff	?___flmul+3,_detect_color$3252+3
  2915  001418                     
  2916                           ;color.c: 322:     BR = lroundf((float)(m->R)/(w->BR)*100); BG = lroundf((float)(m->G)/(
      +                          w->BG)*100); BB = lroundf((float)(m->B)/(w->BB)*100);
  2917  001418  C08E  F066         	movff	_detect_color$3252,lroundf@x
  2918  00141C  C08F  F067         	movff	_detect_color$3252+1,lroundf@x+1
  2919  001420  C090  F068         	movff	_detect_color$3252+2,lroundf@x+2
  2920  001424  C091  F069         	movff	_detect_color$3252+3,lroundf@x+3
  2921  001428  EC22  F02D         	call	_lroundf	;wreg free
  2922  00142C  C066  F085         	movff	?_lroundf,detect_color@BR
  2923  001430  C067  F086         	movff	?_lroundf+1,detect_color@BR+1
  2924  001434  0100               	movlb	0	; () banked
  2925  001436  EE20 F00E          	lfsr	2,14
  2926  00143A  5173               	movf	detect_color@w& (0+255),w,b
  2927  00143C  26D9               	addwf	fsr2l,f,c
  2928  00143E  5174               	movf	(detect_color@w+1)& (0+255),w,b
  2929  001440  22DA               	addwfc	fsr2h,f,c
  2930  001442  CFDE F075          	movff	postinc2,??_detect_color
  2931  001446  CFDD F076          	movff	postdec2,??_detect_color+1
  2932  00144A  C075  F001         	movff	??_detect_color,___xxtofl@val
  2933  00144E  C076  F002         	movff	??_detect_color+1,___xxtofl@val+1
  2934  001452  6A03               	clrf	(___xxtofl@val+2)^0,c
  2935  001454  6A04               	clrf	(___xxtofl@val+3)^0,c
  2936  001456  0E00               	movlw	0
  2937  001458  ECB5  F01F         	call	___xxtofl
  2938  00145C  C001  F013         	movff	?___xxtofl,___fldiv@a
  2939  001460  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  2940  001464  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  2941  001468  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  2942  00146C  0100               	movlb	0	; () banked
  2943  00146E  EE20 F002          	lfsr	2,2
  2944  001472  5171               	movf	detect_color@m& (0+255),w,b
  2945  001474  26D9               	addwf	fsr2l,f,c
  2946  001476  5172               	movf	(detect_color@m+1)& (0+255),w,b
  2947  001478  22DA               	addwfc	fsr2h,f,c
  2948  00147A  CFDE F077          	movff	postinc2,??_detect_color+2
  2949  00147E  CFDD F078          	movff	postdec2,??_detect_color+3
  2950  001482  C077  F001         	movff	??_detect_color+2,___xxtofl@val
  2951  001486  C078  F002         	movff	??_detect_color+3,___xxtofl@val+1
  2952  00148A  6A03               	clrf	(___xxtofl@val+2)^0,c
  2953  00148C  6A04               	clrf	(___xxtofl@val+3)^0,c
  2954  00148E  0E00               	movlw	0
  2955  001490  ECB5  F01F         	call	___xxtofl
  2956  001494  C001  F00F         	movff	?___xxtofl,___fldiv@b
  2957  001498  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  2958  00149C  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  2959  0014A0  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  2960  0014A4  EC58  F013         	call	___fldiv	;wreg free
  2961  0014A8  C00F  F028         	movff	?___fldiv,___flmul@b
  2962  0014AC  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  2963  0014B0  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  2964  0014B4  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  2965  0014B8  0E00               	movlw	0
  2966  0014BA  6E2C               	movwf	___flmul@a^0,c
  2967  0014BC  0E00               	movlw	0
  2968  0014BE  6E2D               	movwf	(___flmul@a+1)^0,c
  2969  0014C0  0EC8               	movlw	200
  2970  0014C2  6E2E               	movwf	(___flmul@a+2)^0,c
  2971  0014C4  0E42               	movlw	66
  2972  0014C6  6E2F               	movwf	(___flmul@a+3)^0,c
  2973  0014C8  EC6C  F00F         	call	___flmul	;wreg free
  2974  0014CC  C028  F08E         	movff	?___flmul,_detect_color$3252
  2975  0014D0  C029  F08F         	movff	?___flmul+1,_detect_color$3252+1
  2976  0014D4  C02A  F090         	movff	?___flmul+2,_detect_color$3252+2
  2977  0014D8  C02B  F091         	movff	?___flmul+3,_detect_color$3252+3
  2978  0014DC  C08E  F066         	movff	_detect_color$3252,lroundf@x
  2979  0014E0  C08F  F067         	movff	_detect_color$3252+1,lroundf@x+1
  2980  0014E4  C090  F068         	movff	_detect_color$3252+2,lroundf@x+2
  2981  0014E8  C091  F069         	movff	_detect_color$3252+3,lroundf@x+3
  2982  0014EC  EC22  F02D         	call	_lroundf	;wreg free
  2983  0014F0  C066  F08C         	movff	?_lroundf,detect_color@BG
  2984  0014F4  C067  F08D         	movff	?_lroundf+1,detect_color@BG+1
  2985  0014F8  0100               	movlb	0	; () banked
  2986  0014FA  EE20 F010          	lfsr	2,16
  2987  0014FE  5173               	movf	detect_color@w& (0+255),w,b
  2988  001500  26D9               	addwf	fsr2l,f,c
  2989  001502  5174               	movf	(detect_color@w+1)& (0+255),w,b
  2990  001504  22DA               	addwfc	fsr2h,f,c
  2991  001506  CFDE F075          	movff	postinc2,??_detect_color
  2992  00150A  CFDD F076          	movff	postdec2,??_detect_color+1
  2993  00150E  C075  F001         	movff	??_detect_color,___xxtofl@val
  2994  001512  C076  F002         	movff	??_detect_color+1,___xxtofl@val+1
  2995  001516  6A03               	clrf	(___xxtofl@val+2)^0,c
  2996  001518  6A04               	clrf	(___xxtofl@val+3)^0,c
  2997  00151A  0E00               	movlw	0
  2998  00151C  ECB5  F01F         	call	___xxtofl
  2999  001520  C001  F013         	movff	?___xxtofl,___fldiv@a
  3000  001524  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  3001  001528  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  3002  00152C  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  3003  001530  0100               	movlb	0	; () banked
  3004  001532  EE20 F004          	lfsr	2,4
  3005  001536  5171               	movf	detect_color@m& (0+255),w,b
  3006  001538  26D9               	addwf	fsr2l,f,c
  3007  00153A  5172               	movf	(detect_color@m+1)& (0+255),w,b
  3008  00153C  22DA               	addwfc	fsr2h,f,c
  3009  00153E  CFDE F077          	movff	postinc2,??_detect_color+2
  3010  001542  CFDD F078          	movff	postdec2,??_detect_color+3
  3011  001546  C077  F001         	movff	??_detect_color+2,___xxtofl@val
  3012  00154A  C078  F002         	movff	??_detect_color+3,___xxtofl@val+1
  3013  00154E  6A03               	clrf	(___xxtofl@val+2)^0,c
  3014  001550  6A04               	clrf	(___xxtofl@val+3)^0,c
  3015  001552  0E00               	movlw	0
  3016  001554  ECB5  F01F         	call	___xxtofl
  3017  001558  C001  F00F         	movff	?___xxtofl,___fldiv@b
  3018  00155C  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  3019  001560  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  3020  001564  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  3021  001568  EC58  F013         	call	___fldiv	;wreg free
  3022  00156C  C00F  F028         	movff	?___fldiv,___flmul@b
  3023  001570  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  3024  001574  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  3025  001578  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  3026  00157C  0E00               	movlw	0
  3027  00157E  6E2C               	movwf	___flmul@a^0,c
  3028  001580  0E00               	movlw	0
  3029  001582  6E2D               	movwf	(___flmul@a+1)^0,c
  3030  001584  0EC8               	movlw	200
  3031  001586  6E2E               	movwf	(___flmul@a+2)^0,c
  3032  001588  0E42               	movlw	66
  3033  00158A  6E2F               	movwf	(___flmul@a+3)^0,c
  3034  00158C  EC6C  F00F         	call	___flmul	;wreg free
  3035  001590  C028  F08E         	movff	?___flmul,_detect_color$3252
  3036  001594  C029  F08F         	movff	?___flmul+1,_detect_color$3252+1
  3037  001598  C02A  F090         	movff	?___flmul+2,_detect_color$3252+2
  3038  00159C  C02B  F091         	movff	?___flmul+3,_detect_color$3252+3
  3039  0015A0  C08E  F066         	movff	_detect_color$3252,lroundf@x
  3040  0015A4  C08F  F067         	movff	_detect_color$3252+1,lroundf@x+1
  3041  0015A8  C090  F068         	movff	_detect_color$3252+2,lroundf@x+2
  3042  0015AC  C091  F069         	movff	_detect_color$3252+3,lroundf@x+3
  3043  0015B0  EC22  F02D         	call	_lroundf	;wreg free
  3044  0015B4  C066  F07F         	movff	?_lroundf,detect_color@BB
  3045  0015B8  C067  F080         	movff	?_lroundf+1,detect_color@BB+1
  3046  0015BC                     
  3047                           ;color.c: 323:     BC = lroundf((float)(m->C)/(w->BC)*100);
  3048  0015BC  0100               	movlb	0	; () banked
  3049  0015BE  EE20 F01A          	lfsr	2,26
  3050  0015C2  5173               	movf	detect_color@w& (0+255),w,b
  3051  0015C4  26D9               	addwf	fsr2l,f,c
  3052  0015C6  5174               	movf	(detect_color@w+1)& (0+255),w,b
  3053  0015C8  22DA               	addwfc	fsr2h,f,c
  3054  0015CA  CFDE F075          	movff	postinc2,??_detect_color
  3055  0015CE  CFDD F076          	movff	postdec2,??_detect_color+1
  3056  0015D2  C075  F001         	movff	??_detect_color,___xxtofl@val
  3057  0015D6  C076  F002         	movff	??_detect_color+1,___xxtofl@val+1
  3058  0015DA  6A03               	clrf	(___xxtofl@val+2)^0,c
  3059  0015DC  6A04               	clrf	(___xxtofl@val+3)^0,c
  3060  0015DE  0E00               	movlw	0
  3061  0015E0  ECB5  F01F         	call	___xxtofl
  3062  0015E4  C001  F013         	movff	?___xxtofl,___fldiv@a
  3063  0015E8  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  3064  0015EC  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  3065  0015F0  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  3066  0015F4  0100               	movlb	0	; () banked
  3067  0015F6  EE20 F006          	lfsr	2,6
  3068  0015FA  5171               	movf	detect_color@m& (0+255),w,b
  3069  0015FC  26D9               	addwf	fsr2l,f,c
  3070  0015FE  5172               	movf	(detect_color@m+1)& (0+255),w,b
  3071  001600  22DA               	addwfc	fsr2h,f,c
  3072  001602  CFDE F077          	movff	postinc2,??_detect_color+2
  3073  001606  CFDD F078          	movff	postdec2,??_detect_color+3
  3074  00160A  C077  F001         	movff	??_detect_color+2,___xxtofl@val
  3075  00160E  C078  F002         	movff	??_detect_color+3,___xxtofl@val+1
  3076  001612  6A03               	clrf	(___xxtofl@val+2)^0,c
  3077  001614  6A04               	clrf	(___xxtofl@val+3)^0,c
  3078  001616  0E00               	movlw	0
  3079  001618  ECB5  F01F         	call	___xxtofl
  3080  00161C  C001  F00F         	movff	?___xxtofl,___fldiv@b
  3081  001620  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  3082  001624  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  3083  001628  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  3084  00162C  EC58  F013         	call	___fldiv	;wreg free
  3085  001630  C00F  F028         	movff	?___fldiv,___flmul@b
  3086  001634  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  3087  001638  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  3088  00163C  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  3089  001640  0E00               	movlw	0
  3090  001642  6E2C               	movwf	___flmul@a^0,c
  3091  001644  0E00               	movlw	0
  3092  001646  6E2D               	movwf	(___flmul@a+1)^0,c
  3093  001648  0EC8               	movlw	200
  3094  00164A  6E2E               	movwf	(___flmul@a+2)^0,c
  3095  00164C  0E42               	movlw	66
  3096  00164E  6E2F               	movwf	(___flmul@a+3)^0,c
  3097  001650  EC6C  F00F         	call	___flmul	;wreg free
  3098  001654  C028  F08E         	movff	?___flmul,_detect_color$3252
  3099  001658  C029  F08F         	movff	?___flmul+1,_detect_color$3252+1
  3100  00165C  C02A  F090         	movff	?___flmul+2,_detect_color$3252+2
  3101  001660  C02B  F091         	movff	?___flmul+3,_detect_color$3252+3
  3102  001664  C08E  F066         	movff	_detect_color$3252,lroundf@x
  3103  001668  C08F  F067         	movff	_detect_color$3252+1,lroundf@x+1
  3104  00166C  C090  F068         	movff	_detect_color$3252+2,lroundf@x+2
  3105  001670  C091  F069         	movff	_detect_color$3252+3,lroundf@x+3
  3106  001674  EC22  F02D         	call	_lroundf	;wreg free
  3107  001678                     
  3108                           ;color.c: 329:     if (compare(0, RR, 45)){
  3109  001678  0E00               	movlw	0
  3110  00167A  0100               	movlb	0	; () banked
  3111  00167C  6F6B               	movwf	(compare@lower+1)& (0+255),b
  3112  00167E  0E00               	movlw	0
  3113  001680  6F6A               	movwf	compare@lower& (0+255),b
  3114  001682  C08A  F06C         	movff	detect_color@RR,compare@value2compare
  3115  001686  C08B  F06D         	movff	detect_color@RR+1,compare@value2compare+1
  3116  00168A  0E00               	movlw	0
  3117  00168C  6F6F               	movwf	(compare@upper+1)& (0+255),b
  3118  00168E  0E2D               	movlw	45
  3119  001690  6F6E               	movwf	compare@upper& (0+255),b
  3120  001692  EC05  F02D         	call	_compare	;wreg free
  3121  001696  0900               	iorlw	0
  3122  001698  B4D8               	btfsc	status,2,c
  3123  00169A  EF51  F00B         	goto	u5171
  3124  00169E  EF53  F00B         	goto	u5170
  3125  0016A2                     u5171:
  3126  0016A2  EFC4  F00B         	goto	l4993
  3127  0016A6                     u5170:
  3128  0016A6                     
  3129                           ;color.c: 330:          if (compare(0, lroundf((float)(GG + BG)/BB * 200), 467)){color =
      +                           3;}
  3130  0016A6  C07F  F001         	movff	detect_color@BB,___xxtofl@val
  3131  0016AA  C080  F002         	movff	detect_color@BB+1,___xxtofl@val+1
  3132  0016AE  6A03               	clrf	(___xxtofl@val+2)^0,c
  3133  0016B0  6A04               	clrf	(___xxtofl@val+3)^0,c
  3134  0016B2  0E00               	movlw	0
  3135  0016B4  ECB5  F01F         	call	___xxtofl
  3136  0016B8  C001  F013         	movff	?___xxtofl,___fldiv@a
  3137  0016BC  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  3138  0016C0  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  3139  0016C4  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  3140  0016C8  0100               	movlb	0	; () banked
  3141  0016CA  518C               	movf	detect_color@BG& (0+255),w,b
  3142  0016CC  2587               	addwf	detect_color@GG& (0+255),w,b
  3143  0016CE  6F75               	movwf	??_detect_color& (0+255),b
  3144  0016D0  518D               	movf	(detect_color@BG+1)& (0+255),w,b
  3145  0016D2  2188               	addwfc	(detect_color@GG+1)& (0+255),w,b
  3146  0016D4  6F76               	movwf	(??_detect_color+1)& (0+255),b
  3147  0016D6  C075  F001         	movff	??_detect_color,___xxtofl@val
  3148  0016DA  C076  F002         	movff	??_detect_color+1,___xxtofl@val+1
  3149  0016DE  6A03               	clrf	(___xxtofl@val+2)^0,c
  3150  0016E0  6A04               	clrf	(___xxtofl@val+3)^0,c
  3151  0016E2  0E00               	movlw	0
  3152  0016E4  ECB5  F01F         	call	___xxtofl
  3153  0016E8  C001  F00F         	movff	?___xxtofl,___fldiv@b
  3154  0016EC  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  3155  0016F0  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  3156  0016F4  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  3157  0016F8  EC58  F013         	call	___fldiv	;wreg free
  3158  0016FC  C00F  F028         	movff	?___fldiv,___flmul@b
  3159  001700  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  3160  001704  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  3161  001708  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  3162  00170C  0E00               	movlw	0
  3163  00170E  6E2C               	movwf	___flmul@a^0,c
  3164  001710  0E00               	movlw	0
  3165  001712  6E2D               	movwf	(___flmul@a+1)^0,c
  3166  001714  0E48               	movlw	72
  3167  001716  6E2E               	movwf	(___flmul@a+2)^0,c
  3168  001718  0E43               	movlw	67
  3169  00171A  6E2F               	movwf	(___flmul@a+3)^0,c
  3170  00171C  EC6C  F00F         	call	___flmul	;wreg free
  3171  001720  C028  F08E         	movff	?___flmul,_detect_color$3252
  3172  001724  C029  F08F         	movff	?___flmul+1,_detect_color$3252+1
  3173  001728  C02A  F090         	movff	?___flmul+2,_detect_color$3252+2
  3174  00172C  C02B  F091         	movff	?___flmul+3,_detect_color$3252+3
  3175                           
  3176                           ;color.c: 330:          if (compare(0, lroundf((float)(GG + BG)/BB * 200), 467)){color =
      +                           3;}
  3177  001730  0E00               	movlw	0
  3178  001732  0100               	movlb	0	; () banked
  3179  001734  6F6B               	movwf	(compare@lower+1)& (0+255),b
  3180  001736  0E00               	movlw	0
  3181  001738  6F6A               	movwf	compare@lower& (0+255),b
  3182  00173A  C08E  F066         	movff	_detect_color$3252,lroundf@x
  3183  00173E  C08F  F067         	movff	_detect_color$3252+1,lroundf@x+1
  3184  001742  C090  F068         	movff	_detect_color$3252+2,lroundf@x+2
  3185  001746  C091  F069         	movff	_detect_color$3252+3,lroundf@x+3
  3186  00174A  EC22  F02D         	call	_lroundf	;wreg free
  3187  00174E  C066  F06C         	movff	?_lroundf,compare@value2compare
  3188  001752  C067  F06D         	movff	?_lroundf+1,compare@value2compare+1
  3189  001756  0E01               	movlw	1
  3190  001758  0100               	movlb	0	; () banked
  3191  00175A  6F6F               	movwf	(compare@upper+1)& (0+255),b
  3192  00175C  0ED3               	movlw	211
  3193  00175E  6F6E               	movwf	compare@upper& (0+255),b
  3194  001760  EC05  F02D         	call	_compare	;wreg free
  3195  001764  0900               	iorlw	0
  3196  001766  B4D8               	btfsc	status,2,c
  3197  001768  EFB8  F00B         	goto	u5181
  3198  00176C  EFBA  F00B         	goto	u5180
  3199  001770                     u5181:
  3200  001770  EFBF  F00B         	goto	l4991
  3201  001774                     u5180:
  3202  001774  0E03               	movlw	3
  3203  001776  0100               	movlb	0	; () banked
  3204  001778  6F89               	movwf	detect_color@color& (0+255),b
  3205  00177A  EF7F  F00C         	goto	l5019
  3206  00177E                     l4991:
  3207  00177E  0E02               	movlw	2
  3208  001780  0100               	movlb	0	; () banked
  3209  001782  6F89               	movwf	detect_color@color& (0+255),b
  3210  001784  EF7F  F00C         	goto	l5019
  3211  001788                     l4993:
  3212                           
  3213                           ;color.c: 334:         if (GG <= 30 && GB <= 30){
  3214  001788  0100               	movlb	0	; () banked
  3215  00178A  5188               	movf	(detect_color@GG+1)& (0+255),w,b
  3216  00178C  E107               	bnz	u5191
  3217  00178E  0E1F               	movlw	31
  3218  001790  5D87               	subwf	detect_color@GG& (0+255),w,b
  3219  001792  B0D8               	btfsc	status,0,c
  3220  001794  EFCE  F00B         	goto	u5191
  3221  001798  EFD0  F00B         	goto	u5190
  3222  00179C                     u5191:
  3223  00179C  EF45  F00C         	goto	l5003
  3224  0017A0                     u5190:
  3225  0017A0                     
  3226                           ; BSR set to: 0
  3227  0017A0  5184               	movf	(detect_color@GB+1)& (0+255),w,b
  3228  0017A2  E107               	bnz	u5201
  3229  0017A4  0E1F               	movlw	31
  3230  0017A6  5D83               	subwf	detect_color@GB& (0+255),w,b
  3231  0017A8  B0D8               	btfsc	status,0,c
  3232  0017AA  EFD9  F00B         	goto	u5201
  3233  0017AE  EFDB  F00B         	goto	u5200
  3234  0017B2                     u5201:
  3235  0017B2  EF45  F00C         	goto	l5003
  3236  0017B6                     u5200:
  3237  0017B6                     
  3238                           ; BSR set to: 0
  3239                           ;color.c: 336:             if (compare(0, lroundf((float)GR/RR * 500), 150)){color = 1;}
  3240  0017B6  C08A  F001         	movff	detect_color@RR,___xxtofl@val
  3241  0017BA  C08B  F002         	movff	detect_color@RR+1,___xxtofl@val+1
  3242  0017BE  6A03               	clrf	(___xxtofl@val+2)^0,c
  3243  0017C0  6A04               	clrf	(___xxtofl@val+3)^0,c
  3244  0017C2  0E00               	movlw	0
  3245  0017C4  ECB5  F01F         	call	___xxtofl
  3246  0017C8  C001  F013         	movff	?___xxtofl,___fldiv@a
  3247  0017CC  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  3248  0017D0  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  3249  0017D4  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  3250  0017D8  C07D  F001         	movff	detect_color@GR,___xxtofl@val
  3251  0017DC  C07E  F002         	movff	detect_color@GR+1,___xxtofl@val+1
  3252  0017E0  6A03               	clrf	(___xxtofl@val+2)^0,c
  3253  0017E2  6A04               	clrf	(___xxtofl@val+3)^0,c
  3254  0017E4  0E00               	movlw	0
  3255  0017E6  ECB5  F01F         	call	___xxtofl
  3256  0017EA  C001  F00F         	movff	?___xxtofl,___fldiv@b
  3257  0017EE  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  3258  0017F2  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  3259  0017F6  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  3260  0017FA  EC58  F013         	call	___fldiv	;wreg free
  3261  0017FE  C00F  F028         	movff	?___fldiv,___flmul@b
  3262  001802  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  3263  001806  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  3264  00180A  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  3265  00180E  0E00               	movlw	0
  3266  001810  6E2C               	movwf	___flmul@a^0,c
  3267  001812  0E00               	movlw	0
  3268  001814  6E2D               	movwf	(___flmul@a+1)^0,c
  3269  001816  0EFA               	movlw	250
  3270  001818  6E2E               	movwf	(___flmul@a+2)^0,c
  3271  00181A  0E43               	movlw	67
  3272  00181C  6E2F               	movwf	(___flmul@a+3)^0,c
  3273  00181E  EC6C  F00F         	call	___flmul	;wreg free
  3274  001822  C028  F08E         	movff	?___flmul,_detect_color$3252
  3275  001826  C029  F08F         	movff	?___flmul+1,_detect_color$3252+1
  3276  00182A  C02A  F090         	movff	?___flmul+2,_detect_color$3252+2
  3277  00182E  C02B  F091         	movff	?___flmul+3,_detect_color$3252+3
  3278                           
  3279                           ;color.c: 336:             if (compare(0, lroundf((float)GR/RR * 500), 150)){color = 1;}
  3280  001832  0E00               	movlw	0
  3281  001834  0100               	movlb	0	; () banked
  3282  001836  6F6B               	movwf	(compare@lower+1)& (0+255),b
  3283  001838  0E00               	movlw	0
  3284  00183A  6F6A               	movwf	compare@lower& (0+255),b
  3285  00183C  C08E  F066         	movff	_detect_color$3252,lroundf@x
  3286  001840  C08F  F067         	movff	_detect_color$3252+1,lroundf@x+1
  3287  001844  C090  F068         	movff	_detect_color$3252+2,lroundf@x+2
  3288  001848  C091  F069         	movff	_detect_color$3252+3,lroundf@x+3
  3289  00184C  EC22  F02D         	call	_lroundf	;wreg free
  3290  001850  C066  F06C         	movff	?_lroundf,compare@value2compare
  3291  001854  C067  F06D         	movff	?_lroundf+1,compare@value2compare+1
  3292  001858  0E00               	movlw	0
  3293  00185A  0100               	movlb	0	; () banked
  3294  00185C  6F6F               	movwf	(compare@upper+1)& (0+255),b
  3295  00185E  0E96               	movlw	150
  3296  001860  6F6E               	movwf	compare@upper& (0+255),b
  3297  001862  EC05  F02D         	call	_compare	;wreg free
  3298  001866  0900               	iorlw	0
  3299  001868  B4D8               	btfsc	status,2,c
  3300  00186A  EF39  F00C         	goto	u5211
  3301  00186E  EF3B  F00C         	goto	u5210
  3302  001872                     u5211:
  3303  001872  EF40  F00C         	goto	l5001
  3304  001876                     u5210:
  3305  001876  0E01               	movlw	1
  3306  001878  0100               	movlb	0	; () banked
  3307  00187A  6F89               	movwf	detect_color@color& (0+255),b
  3308  00187C  EF7F  F00C         	goto	l5019
  3309  001880                     l5001:
  3310  001880  0E06               	movlw	6
  3311  001882  0100               	movlb	0	; () banked
  3312  001884  6F89               	movwf	detect_color@color& (0+255),b
  3313  001886  EF7F  F00C         	goto	l5019
  3314  00188A                     l5003:
  3315                           
  3316                           ; BSR set to: 0
  3317  00188A  5188               	movf	(detect_color@GG+1)& (0+255),w,b
  3318  00188C  E109               	bnz	u5220
  3319  00188E  0E1F               	movlw	31
  3320  001890  5D87               	subwf	detect_color@GG& (0+255),w,b
  3321  001892  A0D8               	btfss	status,0,c
  3322  001894  EF4E  F00C         	goto	u5221
  3323  001898  EF50  F00C         	goto	u5220
  3324  00189C                     u5221:
  3325  00189C  EF7D  F00C         	goto	l5017
  3326  0018A0                     u5220:
  3327  0018A0                     
  3328                           ; BSR set to: 0
  3329  0018A0  5184               	movf	(detect_color@GB+1)& (0+255),w,b
  3330  0018A2  E109               	bnz	u5230
  3331  0018A4  0E1F               	movlw	31
  3332  0018A6  5D83               	subwf	detect_color@GB& (0+255),w,b
  3333  0018A8  A0D8               	btfss	status,0,c
  3334  0018AA  EF59  F00C         	goto	u5231
  3335  0018AE  EF5B  F00C         	goto	u5230
  3336  0018B2                     u5231:
  3337  0018B2  EF7D  F00C         	goto	l5017
  3338  0018B6                     u5230:
  3339  0018B6                     
  3340                           ; BSR set to: 0
  3341                           ;color.c: 341:             if (BG >= BR) {color = 7;}
  3342  0018B6  5185               	movf	detect_color@BR& (0+255),w,b
  3343  0018B8  5D8C               	subwf	detect_color@BG& (0+255),w,b
  3344  0018BA  5186               	movf	(detect_color@BR+1)& (0+255),w,b
  3345  0018BC  598D               	subwfb	(detect_color@BG+1)& (0+255),w,b
  3346  0018BE  A0D8               	btfss	status,0,c
  3347  0018C0  EF64  F00C         	goto	u5241
  3348  0018C4  EF66  F00C         	goto	u5240
  3349  0018C8                     u5241:
  3350  0018C8  EF6A  F00C         	goto	l5011
  3351  0018CC                     u5240:
  3352  0018CC                     
  3353                           ; BSR set to: 0
  3354  0018CC  0E07               	movlw	7
  3355  0018CE  6F89               	movwf	detect_color@color& (0+255),b
  3356  0018D0  EF7F  F00C         	goto	l5019
  3357  0018D4                     l5011:
  3358                           
  3359                           ; BSR set to: 0
  3360                           ;color.c: 343:                 if (BG < 48){color = 4;}
  3361  0018D4  518D               	movf	(detect_color@BG+1)& (0+255),w,b
  3362  0018D6  E107               	bnz	u5251
  3363  0018D8  0E30               	movlw	48
  3364  0018DA  5D8C               	subwf	detect_color@BG& (0+255),w,b
  3365  0018DC  B0D8               	btfsc	status,0,c
  3366  0018DE  EF73  F00C         	goto	u5251
  3367  0018E2  EF75  F00C         	goto	u5250
  3368  0018E6                     u5251:
  3369  0018E6  EF79  F00C         	goto	l5015
  3370  0018EA                     u5250:
  3371  0018EA                     
  3372                           ; BSR set to: 0
  3373  0018EA  0E04               	movlw	4
  3374  0018EC  6F89               	movwf	detect_color@color& (0+255),b
  3375  0018EE  EF7F  F00C         	goto	l5019
  3376  0018F2                     l5015:
  3377                           
  3378                           ; BSR set to: 0
  3379  0018F2  0E05               	movlw	5
  3380  0018F4  6F89               	movwf	detect_color@color& (0+255),b
  3381  0018F6  EF7F  F00C         	goto	l5019
  3382  0018FA                     l5017:
  3383                           
  3384                           ; BSR set to: 0
  3385  0018FA  0E00               	movlw	0
  3386  0018FC  6F89               	movwf	detect_color@color& (0+255),b
  3387  0018FE                     l5019:
  3388                           
  3389                           ; BSR set to: 0
  3390                           ;color.c: 350:     if (compare(90, RR, RR * 2) && compare(90, RB, RB * 2) && compare(90,
      +                           BG, BG * 2)){color = 8;}
  3391  0018FE  0E00               	movlw	0
  3392  001900  6F6B               	movwf	(compare@lower+1)& (0+255),b
  3393  001902  0E5A               	movlw	90
  3394  001904  6F6A               	movwf	compare@lower& (0+255),b
  3395  001906  C08A  F06C         	movff	detect_color@RR,compare@value2compare
  3396  00190A  C08B  F06D         	movff	detect_color@RR+1,compare@value2compare+1
  3397  00190E  90D8               	bcf	status,0,c
  3398  001910  358A               	rlcf	detect_color@RR& (0+255),w,b
  3399  001912  6F6E               	movwf	compare@upper& (0+255),b
  3400  001914  358B               	rlcf	(detect_color@RR+1)& (0+255),w,b
  3401  001916  6F6F               	movwf	(compare@upper+1)& (0+255),b
  3402  001918  EC05  F02D         	call	_compare	;wreg free
  3403  00191C  0900               	iorlw	0
  3404  00191E  B4D8               	btfsc	status,2,c
  3405  001920  EF94  F00C         	goto	u5261
  3406  001924  EF96  F00C         	goto	u5260
  3407  001928                     u5261:
  3408  001928  EFC9  F00C         	goto	l5027
  3409  00192C                     u5260:
  3410  00192C  0E00               	movlw	0
  3411  00192E  0100               	movlb	0	; () banked
  3412  001930  6F6B               	movwf	(compare@lower+1)& (0+255),b
  3413  001932  0E5A               	movlw	90
  3414  001934  6F6A               	movwf	compare@lower& (0+255),b
  3415  001936  C081  F06C         	movff	detect_color@RB,compare@value2compare
  3416  00193A  C082  F06D         	movff	detect_color@RB+1,compare@value2compare+1
  3417  00193E  90D8               	bcf	status,0,c
  3418  001940  3581               	rlcf	detect_color@RB& (0+255),w,b
  3419  001942  6F6E               	movwf	compare@upper& (0+255),b
  3420  001944  3582               	rlcf	(detect_color@RB+1)& (0+255),w,b
  3421  001946  6F6F               	movwf	(compare@upper+1)& (0+255),b
  3422  001948  EC05  F02D         	call	_compare	;wreg free
  3423  00194C  0900               	iorlw	0
  3424  00194E  B4D8               	btfsc	status,2,c
  3425  001950  EFAC  F00C         	goto	u5271
  3426  001954  EFAE  F00C         	goto	u5270
  3427  001958                     u5271:
  3428  001958  EFC9  F00C         	goto	l5027
  3429  00195C                     u5270:
  3430  00195C  0E00               	movlw	0
  3431  00195E  0100               	movlb	0	; () banked
  3432  001960  6F6B               	movwf	(compare@lower+1)& (0+255),b
  3433  001962  0E5A               	movlw	90
  3434  001964  6F6A               	movwf	compare@lower& (0+255),b
  3435  001966  C08C  F06C         	movff	detect_color@BG,compare@value2compare
  3436  00196A  C08D  F06D         	movff	detect_color@BG+1,compare@value2compare+1
  3437  00196E  90D8               	bcf	status,0,c
  3438  001970  358C               	rlcf	detect_color@BG& (0+255),w,b
  3439  001972  6F6E               	movwf	compare@upper& (0+255),b
  3440  001974  358D               	rlcf	(detect_color@BG+1)& (0+255),w,b
  3441  001976  6F6F               	movwf	(compare@upper+1)& (0+255),b
  3442  001978  EC05  F02D         	call	_compare	;wreg free
  3443  00197C  0900               	iorlw	0
  3444  00197E  B4D8               	btfsc	status,2,c
  3445  001980  EFC4  F00C         	goto	u5281
  3446  001984  EFC6  F00C         	goto	u5280
  3447  001988                     u5281:
  3448  001988  EFC9  F00C         	goto	l5027
  3449  00198C                     u5280:
  3450  00198C  0E08               	movlw	8
  3451  00198E  0100               	movlb	0	; () banked
  3452  001990  6F89               	movwf	detect_color@color& (0+255),b
  3453  001992                     l5027:
  3454                           
  3455                           ;color.c: 351:     if (compare(0, BR, 25) && compare(0,RR,30)){color = 0;}
  3456  001992  0E00               	movlw	0
  3457  001994  0100               	movlb	0	; () banked
  3458  001996  6F6B               	movwf	(compare@lower+1)& (0+255),b
  3459  001998  0E00               	movlw	0
  3460  00199A  6F6A               	movwf	compare@lower& (0+255),b
  3461  00199C  C085  F06C         	movff	detect_color@BR,compare@value2compare
  3462  0019A0  C086  F06D         	movff	detect_color@BR+1,compare@value2compare+1
  3463  0019A4  0E00               	movlw	0
  3464  0019A6  6F6F               	movwf	(compare@upper+1)& (0+255),b
  3465  0019A8  0E19               	movlw	25
  3466  0019AA  6F6E               	movwf	compare@upper& (0+255),b
  3467  0019AC  EC05  F02D         	call	_compare	;wreg free
  3468  0019B0  0900               	iorlw	0
  3469  0019B2  B4D8               	btfsc	status,2,c
  3470  0019B4  EFDE  F00C         	goto	u5291
  3471  0019B8  EFE0  F00C         	goto	u5290
  3472  0019BC                     u5291:
  3473  0019BC  EFFA  F00C         	goto	l5033
  3474  0019C0                     u5290:
  3475  0019C0  0E00               	movlw	0
  3476  0019C2  0100               	movlb	0	; () banked
  3477  0019C4  6F6B               	movwf	(compare@lower+1)& (0+255),b
  3478  0019C6  0E00               	movlw	0
  3479  0019C8  6F6A               	movwf	compare@lower& (0+255),b
  3480  0019CA  C08A  F06C         	movff	detect_color@RR,compare@value2compare
  3481  0019CE  C08B  F06D         	movff	detect_color@RR+1,compare@value2compare+1
  3482  0019D2  0E00               	movlw	0
  3483  0019D4  6F6F               	movwf	(compare@upper+1)& (0+255),b
  3484  0019D6  0E1E               	movlw	30
  3485  0019D8  6F6E               	movwf	compare@upper& (0+255),b
  3486  0019DA  EC05  F02D         	call	_compare	;wreg free
  3487  0019DE  0900               	iorlw	0
  3488  0019E0  B4D8               	btfsc	status,2,c
  3489  0019E2  EFF5  F00C         	goto	u5301
  3490  0019E6  EFF7  F00C         	goto	u5300
  3491  0019EA                     u5301:
  3492  0019EA  EFFA  F00C         	goto	l5033
  3493  0019EE                     u5300:
  3494  0019EE  0E00               	movlw	0
  3495  0019F0  0100               	movlb	0	; () banked
  3496  0019F2  6F89               	movwf	detect_color@color& (0+255),b
  3497  0019F4                     l5033:
  3498                           
  3499                           ;color.c: 353:     if (color == 8) {toggle_light(2,1);}
  3500  0019F4  0E08               	movlw	8
  3501  0019F6  0100               	movlb	0	; () banked
  3502  0019F8  1989               	xorwf	detect_color@color& (0+255),w,b
  3503  0019FA  A4D8               	btfss	status,2,c
  3504  0019FC  EF02  F00D         	goto	u5311
  3505  001A00  EF04  F00D         	goto	u5310
  3506  001A04                     u5311:
  3507  001A04  EF09  F00D         	goto	l5037
  3508  001A08                     u5310:
  3509  001A08                     
  3510                           ; BSR set to: 0
  3511  001A08  0E01               	movlw	1
  3512  001A0A  6E01               	movwf	toggle_light@toggletime^0,c
  3513  001A0C  0E02               	movlw	2
  3514  001A0E  ECB8  F01A         	call	_toggle_light
  3515  001A12                     l5037:
  3516                           
  3517                           ;color.c: 354:     return color;
  3518  001A12  0100               	movlb	0	; () banked
  3519  001A14  5189               	movf	detect_color@color& (0+255),w,b
  3520  001A16                     
  3521                           ; BSR set to: 0
  3522  001A16  0012               	return		;funcret
  3523  001A18                     __end_of_detect_color:
  3524                           	callstack 0
  3525                           
  3526 ;; *************** function _compare *****************
  3527 ;; Defined at:
  3528 ;;		line 357 in file "color.c"
  3529 ;; Parameters:    Size  Location     Type
  3530 ;;  lower           2   10[BANK0 ] unsigned int 
  3531 ;;  value2compar    2   12[BANK0 ] unsigned int 
  3532 ;;  upper           2   14[BANK0 ] unsigned int 
  3533 ;; Auto vars:     Size  Location     Type
  3534 ;;  result          1   16[BANK0 ] unsigned char 
  3535 ;; Return value:  Size  Location     Type
  3536 ;;                  1    wreg      unsigned char 
  3537 ;; Registers used:
  3538 ;;		wreg, status,2, status,0
  3539 ;; Tracked objects:
  3540 ;;		On entry : 0/0
  3541 ;;		On exit  : 0/0
  3542 ;;		Unchanged: 0/0
  3543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3544 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3545 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3546 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3547 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3548 ;;Total ram usage:        7 bytes
  3549 ;; Hardware stack levels used: 1
  3550 ;; Hardware stack levels required when called: 1
  3551 ;; This function calls:
  3552 ;;		Nothing
  3553 ;; This function is called by:
  3554 ;;		_detect_color
  3555 ;; This function uses a non-reentrant model
  3556 ;;
  3557                           
  3558                           	psect	text5
  3559  005A0A                     __ptext5:
  3560                           	callstack 0
  3561  005A0A                     _compare:
  3562                           	callstack 27
  3563  005A0A                     
  3564                           ;color.c: 357: unsigned char compare(unsigned int lower, unsigned int value2compare, uns
      +                          igned int upper);color.c: 358: {;color.c: 359:     unsigned char result = 0;
  3565  005A0A  0E00               	movlw	0
  3566  005A0C  0100               	movlb	0	; () banked
  3567  005A0E  6F70               	movwf	compare@result& (0+255),b
  3568  005A10                     
  3569                           ; BSR set to: 0
  3570                           ;color.c: 360:     if (lower < value2compare && value2compare <= upper){result = 1;}
  3571  005A10  516C               	movf	compare@value2compare& (0+255),w,b
  3572  005A12  5D6A               	subwf	compare@lower& (0+255),w,b
  3573  005A14  516D               	movf	(compare@value2compare+1)& (0+255),w,b
  3574  005A16  596B               	subwfb	(compare@lower+1)& (0+255),w,b
  3575  005A18  B0D8               	btfsc	status,0,c
  3576  005A1A  EF11  F02D         	goto	u4641
  3577  005A1E  EF13  F02D         	goto	u4640
  3578  005A22                     u4641:
  3579  005A22  EF20  F02D         	goto	l152
  3580  005A26                     u4640:
  3581  005A26                     
  3582                           ; BSR set to: 0
  3583  005A26  516C               	movf	compare@value2compare& (0+255),w,b
  3584  005A28  5D6E               	subwf	compare@upper& (0+255),w,b
  3585  005A2A  516D               	movf	(compare@value2compare+1)& (0+255),w,b
  3586  005A2C  596F               	subwfb	(compare@upper+1)& (0+255),w,b
  3587  005A2E  A0D8               	btfss	status,0,c
  3588  005A30  EF1C  F02D         	goto	u4651
  3589  005A34  EF1E  F02D         	goto	u4650
  3590  005A38                     u4651:
  3591  005A38  EF20  F02D         	goto	l152
  3592  005A3C                     u4650:
  3593  005A3C                     
  3594                           ; BSR set to: 0
  3595  005A3C  0E01               	movlw	1
  3596  005A3E  6F70               	movwf	compare@result& (0+255),b
  3597  005A40                     l152:
  3598                           
  3599                           ; BSR set to: 0
  3600                           ;color.c: 361:     return result;
  3601  005A40  5170               	movf	compare@result& (0+255),w,b
  3602  005A42                     
  3603                           ; BSR set to: 0
  3604  005A42  0012               	return		;funcret
  3605  005A44                     __end_of_compare:
  3606                           	callstack 0
  3607                           
  3608 ;; *************** function _color_data_collection *****************
  3609 ;; Defined at:
  3610 ;;		line 200 in file "color.c"
  3611 ;; Parameters:    Size  Location     Type
  3612 ;;  m               2   89[COMRAM] PTR struct color_rgb
  3613 ;;		 -> main@rgb(8), 
  3614 ;; Auto vars:     Size  Location     Type
  3615 ;;  x               2  132[BANK0 ] int 
  3616 ;;  k               2  130[BANK0 ] int 
  3617 ;;  j               2  128[BANK0 ] int 
  3618 ;;  i               2  126[BANK0 ] int 
  3619 ;; Return value:  Size  Location     Type
  3620 ;;                  1    wreg      void 
  3621 ;; Registers used:
  3622 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3623 ;; Tracked objects:
  3624 ;;		On entry : 0/0
  3625 ;;		On exit  : 0/0
  3626 ;;		Unchanged: 0/0
  3627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3628 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3629 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3630 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3631 ;;      Totals:         4       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3632 ;;Total ram usage:       12 bytes
  3633 ;; Hardware stack levels used: 1
  3634 ;; Hardware stack levels required when called: 10
  3635 ;; This function calls:
  3636 ;;		_LED_B
  3637 ;;		_LED_C
  3638 ;;		_LED_G
  3639 ;;		_LED_R
  3640 ;;		_color_display
  3641 ;;		_color_predict
  3642 ;;		_read_color
  3643 ;; This function is called by:
  3644 ;;		_test_function
  3645 ;; This function uses a non-reentrant model
  3646 ;;
  3647                           
  3648                           	psect	text6
  3649  00411E                     __ptext6:
  3650                           	callstack 0
  3651  00411E                     _color_data_collection:
  3652                           	callstack 19
  3653  00411E                     
  3654                           ;color.c: 202:     int i = 0; int j = 0; int k = 0; int x = 0;
  3655  00411E  0E00               	movlw	0
  3656  004120  0100               	movlb	0	; () banked
  3657  004122  6FDF               	movwf	(color_data_collection@i+1)& (0+255),b
  3658  004124  0E00               	movlw	0
  3659  004126  6FDE               	movwf	color_data_collection@i& (0+255),b
  3660  004128  0E00               	movlw	0
  3661  00412A  6FE3               	movwf	(color_data_collection@k+1)& (0+255),b
  3662  00412C  0E00               	movlw	0
  3663  00412E  6FE2               	movwf	color_data_collection@k& (0+255),b
  3664  004130  0E00               	movlw	0
  3665  004132  6FE5               	movwf	(color_data_collection@x+1)& (0+255),b
  3666  004134  0E00               	movlw	0
  3667  004136  6FE4               	movwf	color_data_collection@x& (0+255),b
  3668                           
  3669                           ;color.c: 203:     for (i = 0; i < 1; ++i){
  3670  004138  0E00               	movlw	0
  3671  00413A  6FDF               	movwf	(color_data_collection@i+1)& (0+255),b
  3672  00413C  0E00               	movlw	0
  3673  00413E  6FDE               	movwf	color_data_collection@i& (0+255),b
  3674  004140                     l4799:
  3675                           
  3676                           ; BSR set to: 0
  3677                           ;color.c: 204:         LED_C();
  3678  004140  EC3B  F02E         	call	_LED_C	;wreg free
  3679  004144                     
  3680                           ;color.c: 205:         _delay((unsigned long)((100)*(64000000/4000.0)));
  3681  004144  0E09               	movlw	9
  3682  004146  6E5D               	movwf	(??_color_data_collection+1)^0,c
  3683  004148  0E1E               	movlw	30
  3684  00414A  6E5C               	movwf	??_color_data_collection^0,c
  3685  00414C  0EE4               	movlw	228
  3686  00414E                     u5907:
  3687  00414E  2EE8               	decfsz	wreg,f,c
  3688  004150  D7FE               	bra	u5907
  3689  004152  2E5C               	decfsz	??_color_data_collection^0,f,c
  3690  004154  D7FC               	bra	u5907
  3691  004156  2E5D               	decfsz	(??_color_data_collection+1)^0,f,c
  3692  004158  D7FA               	bra	u5907
  3693  00415A  D000               	nop2	
  3694  00415C                     
  3695                           ;color.c: 206:         read_color(m);
  3696  00415C  C05A  F00C         	movff	color_data_collection@m,read_color@m
  3697  004160  C05B  F00D         	movff	color_data_collection@m+1,read_color@m+1
  3698  004164  ECBF  F02A         	call	_read_color	;wreg free
  3699  004168                     
  3700                           ;color.c: 207:         color_display(m);
  3701  004168  C05A  F058         	movff	color_data_collection@m,color_display@m
  3702  00416C  C05B  F059         	movff	color_data_collection@m+1,color_display@m+1
  3703  004170  EC56  F02A         	call	_color_display	;wreg free
  3704  004174                     
  3705                           ;color.c: 208:     }
  3706  004174  0100               	movlb	0	; () banked
  3707  004176  4BDE               	infsnz	color_data_collection@i& (0+255),f,b
  3708  004178  2BDF               	incf	(color_data_collection@i+1)& (0+255),f,b
  3709  00417A                     
  3710                           ; BSR set to: 0
  3711  00417A  BFDF               	btfsc	(color_data_collection@i+1)& (0+255),7,b
  3712  00417C  EFC8  F020         	goto	u5131
  3713  004180  51DF               	movf	(color_data_collection@i+1)& (0+255),w,b
  3714  004182  E108               	bnz	u5130
  3715  004184  05DE               	decf	color_data_collection@i& (0+255),w,b
  3716  004186  A0D8               	btfss	status,0,c
  3717  004188  EFC8  F020         	goto	u5131
  3718  00418C  EFCA  F020         	goto	u5130
  3719  004190                     u5131:
  3720  004190  EFA0  F020         	goto	l4799
  3721  004194                     u5130:
  3722  004194                     
  3723                           ; BSR set to: 0
  3724                           ;color.c: 210:     for (j = 0; j < 1; ++j){
  3725  004194  0E00               	movlw	0
  3726  004196  6FE1               	movwf	(color_data_collection@j+1)& (0+255),b
  3727  004198  0E00               	movlw	0
  3728  00419A  6FE0               	movwf	color_data_collection@j& (0+255),b
  3729  00419C                     l4817:
  3730                           
  3731                           ; BSR set to: 0
  3732                           ;color.c: 211:         LED_R();
  3733  00419C  ECFB  F02D         	call	_LED_R	;wreg free
  3734  0041A0                     
  3735                           ;color.c: 212:         _delay((unsigned long)((100)*(64000000/4000.0)));
  3736  0041A0  0E09               	movlw	9
  3737  0041A2  6E5D               	movwf	(??_color_data_collection+1)^0,c
  3738  0041A4  0E1E               	movlw	30
  3739  0041A6  6E5C               	movwf	??_color_data_collection^0,c
  3740  0041A8  0EE4               	movlw	228
  3741  0041AA                     u5917:
  3742  0041AA  2EE8               	decfsz	wreg,f,c
  3743  0041AC  D7FE               	bra	u5917
  3744  0041AE  2E5C               	decfsz	??_color_data_collection^0,f,c
  3745  0041B0  D7FC               	bra	u5917
  3746  0041B2  2E5D               	decfsz	(??_color_data_collection+1)^0,f,c
  3747  0041B4  D7FA               	bra	u5917
  3748  0041B6  D000               	nop2	
  3749  0041B8                     
  3750                           ;color.c: 213:         read_color(m);
  3751  0041B8  C05A  F00C         	movff	color_data_collection@m,read_color@m
  3752  0041BC  C05B  F00D         	movff	color_data_collection@m+1,read_color@m+1
  3753  0041C0  ECBF  F02A         	call	_read_color	;wreg free
  3754  0041C4                     
  3755                           ;color.c: 214:         color_display(m);
  3756  0041C4  C05A  F058         	movff	color_data_collection@m,color_display@m
  3757  0041C8  C05B  F059         	movff	color_data_collection@m+1,color_display@m+1
  3758  0041CC  EC56  F02A         	call	_color_display	;wreg free
  3759  0041D0                     
  3760                           ;color.c: 215:     }
  3761  0041D0  0100               	movlb	0	; () banked
  3762  0041D2  4BE0               	infsnz	color_data_collection@j& (0+255),f,b
  3763  0041D4  2BE1               	incf	(color_data_collection@j+1)& (0+255),f,b
  3764  0041D6                     
  3765                           ; BSR set to: 0
  3766  0041D6  BFE1               	btfsc	(color_data_collection@j+1)& (0+255),7,b
  3767  0041D8  EFF6  F020         	goto	u5141
  3768  0041DC  51E1               	movf	(color_data_collection@j+1)& (0+255),w,b
  3769  0041DE  E108               	bnz	u5140
  3770  0041E0  05E0               	decf	color_data_collection@j& (0+255),w,b
  3771  0041E2  A0D8               	btfss	status,0,c
  3772  0041E4  EFF6  F020         	goto	u5141
  3773  0041E8  EFF8  F020         	goto	u5140
  3774  0041EC                     u5141:
  3775  0041EC  EFCE  F020         	goto	l4817
  3776  0041F0                     u5140:
  3777  0041F0                     
  3778                           ; BSR set to: 0
  3779                           ;color.c: 217:     for (k = 0; k < 1; ++k){
  3780  0041F0  0E00               	movlw	0
  3781  0041F2  6FE3               	movwf	(color_data_collection@k+1)& (0+255),b
  3782  0041F4  0E00               	movlw	0
  3783  0041F6  6FE2               	movwf	color_data_collection@k& (0+255),b
  3784  0041F8                     l4835:
  3785                           
  3786                           ; BSR set to: 0
  3787                           ;color.c: 218:         LED_G();
  3788  0041F8  EC1B  F02E         	call	_LED_G	;wreg free
  3789  0041FC                     
  3790                           ;color.c: 219:         _delay((unsigned long)((100)*(64000000/4000.0)));
  3791  0041FC  0E09               	movlw	9
  3792  0041FE  6E5D               	movwf	(??_color_data_collection+1)^0,c
  3793  004200  0E1E               	movlw	30
  3794  004202  6E5C               	movwf	??_color_data_collection^0,c
  3795  004204  0EE4               	movlw	228
  3796  004206                     u5927:
  3797  004206  2EE8               	decfsz	wreg,f,c
  3798  004208  D7FE               	bra	u5927
  3799  00420A  2E5C               	decfsz	??_color_data_collection^0,f,c
  3800  00420C  D7FC               	bra	u5927
  3801  00420E  2E5D               	decfsz	(??_color_data_collection+1)^0,f,c
  3802  004210  D7FA               	bra	u5927
  3803  004212  D000               	nop2	
  3804  004214                     
  3805                           ;color.c: 220:         read_color(m);
  3806  004214  C05A  F00C         	movff	color_data_collection@m,read_color@m
  3807  004218  C05B  F00D         	movff	color_data_collection@m+1,read_color@m+1
  3808  00421C  ECBF  F02A         	call	_read_color	;wreg free
  3809  004220                     
  3810                           ;color.c: 221:         color_display(m);
  3811  004220  C05A  F058         	movff	color_data_collection@m,color_display@m
  3812  004224  C05B  F059         	movff	color_data_collection@m+1,color_display@m+1
  3813  004228  EC56  F02A         	call	_color_display	;wreg free
  3814  00422C                     
  3815                           ;color.c: 222:     }
  3816  00422C  0100               	movlb	0	; () banked
  3817  00422E  4BE2               	infsnz	color_data_collection@k& (0+255),f,b
  3818  004230  2BE3               	incf	(color_data_collection@k+1)& (0+255),f,b
  3819  004232                     
  3820                           ; BSR set to: 0
  3821  004232  BFE3               	btfsc	(color_data_collection@k+1)& (0+255),7,b
  3822  004234  EF24  F021         	goto	u5151
  3823  004238  51E3               	movf	(color_data_collection@k+1)& (0+255),w,b
  3824  00423A  E108               	bnz	u5150
  3825  00423C  05E2               	decf	color_data_collection@k& (0+255),w,b
  3826  00423E  A0D8               	btfss	status,0,c
  3827  004240  EF24  F021         	goto	u5151
  3828  004244  EF26  F021         	goto	u5150
  3829  004248                     u5151:
  3830  004248  EFFC  F020         	goto	l4835
  3831  00424C                     u5150:
  3832  00424C                     
  3833                           ; BSR set to: 0
  3834                           ;color.c: 224:     for (x = 0; x < 1; ++x){
  3835  00424C  0E00               	movlw	0
  3836  00424E  6FE5               	movwf	(color_data_collection@x+1)& (0+255),b
  3837  004250  0E00               	movlw	0
  3838  004252  6FE4               	movwf	color_data_collection@x& (0+255),b
  3839  004254                     l4853:
  3840                           
  3841                           ; BSR set to: 0
  3842                           ;color.c: 225:         LED_B();
  3843  004254  EC2B  F02E         	call	_LED_B	;wreg free
  3844  004258                     
  3845                           ;color.c: 226:         _delay((unsigned long)((100)*(64000000/4000.0)));
  3846  004258  0E09               	movlw	9
  3847  00425A  6E5D               	movwf	(??_color_data_collection+1)^0,c
  3848  00425C  0E1E               	movlw	30
  3849  00425E  6E5C               	movwf	??_color_data_collection^0,c
  3850  004260  0EE4               	movlw	228
  3851  004262                     u5937:
  3852  004262  2EE8               	decfsz	wreg,f,c
  3853  004264  D7FE               	bra	u5937
  3854  004266  2E5C               	decfsz	??_color_data_collection^0,f,c
  3855  004268  D7FC               	bra	u5937
  3856  00426A  2E5D               	decfsz	(??_color_data_collection+1)^0,f,c
  3857  00426C  D7FA               	bra	u5937
  3858  00426E  D000               	nop2	
  3859  004270                     
  3860                           ;color.c: 227:         read_color(m);
  3861  004270  C05A  F00C         	movff	color_data_collection@m,read_color@m
  3862  004274  C05B  F00D         	movff	color_data_collection@m+1,read_color@m+1
  3863  004278  ECBF  F02A         	call	_read_color	;wreg free
  3864  00427C                     
  3865                           ;color.c: 228:         color_display(m);
  3866  00427C  C05A  F058         	movff	color_data_collection@m,color_display@m
  3867  004280  C05B  F059         	movff	color_data_collection@m+1,color_display@m+1
  3868  004284  EC56  F02A         	call	_color_display	;wreg free
  3869  004288                     
  3870                           ;color.c: 229:     }
  3871  004288  0100               	movlb	0	; () banked
  3872  00428A  4BE4               	infsnz	color_data_collection@x& (0+255),f,b
  3873  00428C  2BE5               	incf	(color_data_collection@x+1)& (0+255),f,b
  3874  00428E                     
  3875                           ; BSR set to: 0
  3876  00428E  BFE5               	btfsc	(color_data_collection@x+1)& (0+255),7,b
  3877  004290  EF52  F021         	goto	u5161
  3878  004294  51E5               	movf	(color_data_collection@x+1)& (0+255),w,b
  3879  004296  E108               	bnz	u5160
  3880  004298  05E4               	decf	color_data_collection@x& (0+255),w,b
  3881  00429A  A0D8               	btfss	status,0,c
  3882  00429C  EF52  F021         	goto	u5161
  3883  0042A0  EF54  F021         	goto	u5160
  3884  0042A4                     u5161:
  3885  0042A4  EF2A  F021         	goto	l4853
  3886  0042A8                     u5160:
  3887  0042A8                     
  3888                           ; BSR set to: 0
  3889                           ;color.c: 230:     color_predict(1);
  3890  0042A8  0E01               	movlw	1
  3891  0042AA  ECA8  F02D         	call	_color_predict
  3892  0042AE                     
  3893                           ;color.c: 231:     LED_C();
  3894  0042AE  EC3B  F02E         	call	_LED_C	;wreg free
  3895  0042B2  0012               	return		;funcret
  3896  0042B4                     __end_of_color_data_collection:
  3897                           	callstack 0
  3898                           
  3899 ;; *************** function _read_color *****************
  3900 ;; Defined at:
  3901 ;;		line 147 in file "color.c"
  3902 ;; Parameters:    Size  Location     Type
  3903 ;;  m               2   11[COMRAM] PTR struct color_rgb
  3904 ;;		 -> main@rgb(8), 
  3905 ;; Auto vars:     Size  Location     Type
  3906 ;;		None
  3907 ;; Return value:  Size  Location     Type
  3908 ;;                  1    wreg      void 
  3909 ;; Registers used:
  3910 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3911 ;; Tracked objects:
  3912 ;;		On entry : 0/0
  3913 ;;		On exit  : 0/0
  3914 ;;		Unchanged: 0/0
  3915 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3916 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3917 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3918 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3919 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3920 ;;Total ram usage:        2 bytes
  3921 ;; Hardware stack levels used: 1
  3922 ;; Hardware stack levels required when called: 4
  3923 ;; This function calls:
  3924 ;;		_color_read_Blue
  3925 ;;		_color_read_Clear
  3926 ;;		_color_read_Green
  3927 ;;		_color_read_Red
  3928 ;; This function is called by:
  3929 ;;		_color_data_collection
  3930 ;;		_detect_color
  3931 ;;		_test_function
  3932 ;; This function uses a non-reentrant model
  3933 ;;
  3934                           
  3935                           	psect	text7
  3936  00557E                     __ptext7:
  3937                           	callstack 0
  3938  00557E                     _read_color:
  3939                           	callstack 24
  3940  00557E                     
  3941                           ;color.c: 147: void read_color (struct color_rgb *m);color.c: 148: {;color.c: 149:     m
      +                          ->R = color_read_Red();
  3942  00557E  EC17  F02B         	call	_color_read_Red	;wreg free
  3943  005582  C00C  FFD9         	movff	read_color@m,fsr2l
  3944  005586  C00D  FFDA         	movff	read_color@m+1,fsr2h
  3945  00558A  C005  FFDE         	movff	?_color_read_Red,postinc2
  3946  00558E  C006  FFDD         	movff	?_color_read_Red+1,postdec2
  3947                           
  3948                           ;color.c: 150:     m->B = color_read_Blue();
  3949  005592  EC67  F02B         	call	_color_read_Blue	;wreg free
  3950  005596  EE20 F004          	lfsr	2,4
  3951  00559A  500C               	movf	read_color@m^0,w,c
  3952  00559C  26D9               	addwf	fsr2l,f,c
  3953  00559E  500D               	movf	(read_color@m+1)^0,w,c
  3954  0055A0  22DA               	addwfc	fsr2h,f,c
  3955  0055A2  C005  FFDE         	movff	?_color_read_Blue,postinc2
  3956  0055A6  C006  FFDD         	movff	?_color_read_Blue+1,postdec2
  3957                           
  3958                           ;color.c: 151:     m->G = color_read_Green();
  3959  0055AA  EC3F  F02B         	call	_color_read_Green	;wreg free
  3960  0055AE  EE20 F002          	lfsr	2,2
  3961  0055B2  500C               	movf	read_color@m^0,w,c
  3962  0055B4  26D9               	addwf	fsr2l,f,c
  3963  0055B6  500D               	movf	(read_color@m+1)^0,w,c
  3964  0055B8  22DA               	addwfc	fsr2h,f,c
  3965  0055BA  C005  FFDE         	movff	?_color_read_Green,postinc2
  3966  0055BE  C006  FFDD         	movff	?_color_read_Green+1,postdec2
  3967                           
  3968                           ;color.c: 152:     m->C = color_read_Clear();
  3969  0055C2  EC8F  F02B         	call	_color_read_Clear	;wreg free
  3970  0055C6  EE20 F006          	lfsr	2,6
  3971  0055CA  500C               	movf	read_color@m^0,w,c
  3972  0055CC  26D9               	addwf	fsr2l,f,c
  3973  0055CE  500D               	movf	(read_color@m+1)^0,w,c
  3974  0055D0  22DA               	addwfc	fsr2h,f,c
  3975  0055D2  C005  FFDE         	movff	?_color_read_Clear,postinc2
  3976  0055D6  C006  FFDD         	movff	?_color_read_Clear+1,postdec2
  3977  0055DA  0012               	return		;funcret
  3978  0055DC                     __end_of_read_color:
  3979                           	callstack 0
  3980                           
  3981 ;; *************** function _color_predict *****************
  3982 ;; Defined at:
  3983 ;;		line 250 in file "color.c"
  3984 ;; Parameters:    Size  Location     Type
  3985 ;;  color           1    wreg     unsigned char 
  3986 ;; Auto vars:     Size  Location     Type
  3987 ;;  color           1  125[BANK0 ] unsigned char 
  3988 ;;  buf           100   25[BANK0 ] unsigned char [100]
  3989 ;; Return value:  Size  Location     Type
  3990 ;;                  1    wreg      void 
  3991 ;; Registers used:
  3992 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3993 ;; Tracked objects:
  3994 ;;		On entry : 0/0
  3995 ;;		On exit  : 0/0
  3996 ;;		Unchanged: 0/0
  3997 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3998 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3999 ;;      Locals:         0     101       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4000 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4001 ;;      Totals:         0     101       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4002 ;;Total ram usage:      101 bytes
  4003 ;; Hardware stack levels used: 1
  4004 ;; Hardware stack levels required when called: 9
  4005 ;; This function calls:
  4006 ;;		_sendStringSerial4
  4007 ;;		_sprintf
  4008 ;; This function is called by:
  4009 ;;		_color_data_collection
  4010 ;;		_test_function
  4011 ;; This function uses a non-reentrant model
  4012 ;;
  4013                           
  4014                           	psect	text8
  4015  005B50                     __ptext8:
  4016                           	callstack 0
  4017  005B50                     _color_predict:
  4018                           	callstack 20
  4019                           
  4020                           ;incstack = 0
  4021                           ;color_predict@color stored from wreg
  4022  005B50  0100               	movlb	0	; () banked
  4023  005B52  6FDD               	movwf	color_predict@color& (0+255),b
  4024  005B54                     
  4025                           ;color.c: 250: void color_predict(unsigned char color);color.c: 251: {;color.c: 252:    
      +                           char buf[100];;color.c: 253:     sprintf(buf,"\t%d\r\n", color);
  4026  005B54  0E79               	movlw	low color_predict@buf
  4027  005B56  0100               	movlb	0	; () banked
  4028  005B58  6F60               	movwf	sprintf@s& (0+255),b
  4029  005B5A  0E00               	movlw	high color_predict@buf
  4030  005B5C  6F61               	movwf	(sprintf@s+1)& (0+255),b
  4031  005B5E  0E0D               	movlw	low (STR_1+8)
  4032  005B60  6F62               	movwf	sprintf@fmt& (0+255),b
  4033  005B62  0E0E               	movlw	high (STR_1+8)
  4034  005B64  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
  4035  005B66  C0DD  F064         	movff	color_predict@color,?_sprintf+4
  4036  005B6A  6B65               	clrf	(?_sprintf+5)& (0+255),b
  4037  005B6C  ECEE  F02A         	call	_sprintf	;wreg free
  4038  005B70                     
  4039                           ;color.c: 254:     sendStringSerial4(buf);
  4040  005B70  0E79               	movlw	low color_predict@buf
  4041  005B72  6E02               	movwf	sendStringSerial4@string^0,c
  4042  005B74  0E00               	movlw	high color_predict@buf
  4043  005B76  6E03               	movwf	(sendStringSerial4@string+1)^0,c
  4044  005B78  EC90  F02D         	call	_sendStringSerial4	;wreg free
  4045  005B7C  0012               	return		;funcret
  4046  005B7E                     __end_of_color_predict:
  4047                           	callstack 0
  4048                           
  4049 ;; *************** function _color_display *****************
  4050 ;; Defined at:
  4051 ;;		line 234 in file "color.c"
  4052 ;; Parameters:    Size  Location     Type
  4053 ;;  m               2   87[COMRAM] PTR struct color_rgb
  4054 ;;		 -> main@rgb(8), 
  4055 ;; Auto vars:     Size  Location     Type
  4056 ;;  buf           100   25[BANK0 ] unsigned char [100]
  4057 ;; Return value:  Size  Location     Type
  4058 ;;                  1    wreg      void 
  4059 ;; Registers used:
  4060 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4061 ;; Tracked objects:
  4062 ;;		On entry : 0/0
  4063 ;;		On exit  : 0/0
  4064 ;;		Unchanged: 0/0
  4065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4066 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4067 ;;      Locals:         0     100       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4068 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4069 ;;      Totals:         2     100       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4070 ;;Total ram usage:      102 bytes
  4071 ;; Hardware stack levels used: 1
  4072 ;; Hardware stack levels required when called: 9
  4073 ;; This function calls:
  4074 ;;		_sendStringSerial4
  4075 ;;		_sprintf
  4076 ;; This function is called by:
  4077 ;;		_color_data_collection
  4078 ;;		_test_function
  4079 ;; This function uses a non-reentrant model
  4080 ;;
  4081                           
  4082                           	psect	text9
  4083  0054AC                     __ptext9:
  4084                           	callstack 0
  4085  0054AC                     _color_display:
  4086                           	callstack 20
  4087  0054AC                     
  4088                           ;color.c: 234: void color_display(struct color_rgb *m);color.c: 235: {;color.c: 236:    
      +                           char buf[100];;color.c: 237:     sprintf(buf,"%d\t%d\t%d\t%d\r\n", m->R, m->G, m->B, m-
      +                          >C);
  4089  0054AC  0E79               	movlw	low color_display@buf
  4090  0054AE  0100               	movlb	0	; () banked
  4091  0054B0  6F60               	movwf	sprintf@s& (0+255),b
  4092  0054B2  0E00               	movlw	high color_display@buf
  4093  0054B4  6F61               	movwf	(sprintf@s+1)& (0+255),b
  4094  0054B6  0E05               	movlw	low STR_1
  4095  0054B8  6F62               	movwf	sprintf@fmt& (0+255),b
  4096  0054BA  0E0E               	movlw	high STR_1
  4097  0054BC  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
  4098  0054BE  C058  FFD9         	movff	color_display@m,fsr2l
  4099  0054C2  C059  FFDA         	movff	color_display@m+1,fsr2h
  4100  0054C6  CFDE F064          	movff	postinc2,?_sprintf+4
  4101  0054CA  CFDD F065          	movff	postdec2,?_sprintf+5
  4102  0054CE  EE20 F002          	lfsr	2,2
  4103  0054D2  5058               	movf	color_display@m^0,w,c
  4104  0054D4  26D9               	addwf	fsr2l,f,c
  4105  0054D6  5059               	movf	(color_display@m+1)^0,w,c
  4106  0054D8  22DA               	addwfc	fsr2h,f,c
  4107  0054DA  CFDE F066          	movff	postinc2,?_sprintf+6
  4108  0054DE  CFDD F067          	movff	postdec2,?_sprintf+7
  4109  0054E2  EE20 F004          	lfsr	2,4
  4110  0054E6  5058               	movf	color_display@m^0,w,c
  4111  0054E8  26D9               	addwf	fsr2l,f,c
  4112  0054EA  5059               	movf	(color_display@m+1)^0,w,c
  4113  0054EC  22DA               	addwfc	fsr2h,f,c
  4114  0054EE  CFDE F068          	movff	postinc2,?_sprintf+8
  4115  0054F2  CFDD F069          	movff	postdec2,?_sprintf+9
  4116  0054F6  EE20 F006          	lfsr	2,6
  4117  0054FA  5058               	movf	color_display@m^0,w,c
  4118  0054FC  26D9               	addwf	fsr2l,f,c
  4119  0054FE  5059               	movf	(color_display@m+1)^0,w,c
  4120  005500  22DA               	addwfc	fsr2h,f,c
  4121  005502  CFDE F06A          	movff	postinc2,?_sprintf+10
  4122  005506  CFDD F06B          	movff	postdec2,?_sprintf+11
  4123  00550A  ECEE  F02A         	call	_sprintf	;wreg free
  4124  00550E                     
  4125                           ;color.c: 238:     sendStringSerial4(buf);
  4126  00550E  0E79               	movlw	low color_display@buf
  4127  005510  6E02               	movwf	sendStringSerial4@string^0,c
  4128  005512  0E00               	movlw	high color_display@buf
  4129  005514  6E03               	movwf	(sendStringSerial4@string+1)^0,c
  4130  005516  EC90  F02D         	call	_sendStringSerial4	;wreg free
  4131  00551A  0012               	return		;funcret
  4132  00551C                     __end_of_color_display:
  4133                           	callstack 0
  4134                           
  4135 ;; *************** function _sprintf *****************
  4136 ;; Defined at:
  4137 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\nf_sprintf.c"
  4138 ;; Parameters:    Size  Location     Type
  4139 ;;  s               2    0[BANK0 ] PTR unsigned char 
  4140 ;;		 -> color_predict@buf(100), color_display@buf(100), 
  4141 ;;  fmt             2    2[BANK0 ] PTR const unsigned char 
  4142 ;;		 -> STR_2(6), STR_1(14), 
  4143 ;; Auto vars:     Size  Location     Type
  4144 ;;  f              11   14[BANK0 ] struct _IO_FILE
  4145 ;;  ap              2   12[BANK0 ] PTR void [1]
  4146 ;;		 -> ?_sprintf(2), 
  4147 ;;  ret             2    0        int 
  4148 ;; Return value:  Size  Location     Type
  4149 ;;                  2    0[BANK0 ] int 
  4150 ;; Registers used:
  4151 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4152 ;; Tracked objects:
  4153 ;;		On entry : 0/0
  4154 ;;		On exit  : 0/0
  4155 ;;		Unchanged: 0/0
  4156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4157 ;;      Params:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4158 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4159 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4160 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4161 ;;Total ram usage:       25 bytes
  4162 ;; Hardware stack levels used: 1
  4163 ;; Hardware stack levels required when called: 8
  4164 ;; This function calls:
  4165 ;;		_vfprintf
  4166 ;; This function is called by:
  4167 ;;		_color_display
  4168 ;;		_color_predict
  4169 ;; This function uses a non-reentrant model
  4170 ;;
  4171                           
  4172                           	psect	text10
  4173  0055DC                     __ptext10:
  4174                           	callstack 0
  4175  0055DC                     _sprintf:
  4176                           	callstack 20
  4177  0055DC  0E64               	movlw	low (?_sprintf+4)
  4178  0055DE  0100               	movlb	0	; () banked
  4179  0055E0  6F6C               	movwf	sprintf@ap& (0+255),b
  4180  0055E2  0E00               	movlw	high (?_sprintf+4)
  4181  0055E4  6F6D               	movwf	(sprintf@ap+1)& (0+255),b
  4182  0055E6  C060  F06E         	movff	sprintf@s,sprintf@f
  4183  0055EA  C061  F06F         	movff	sprintf@s+1,sprintf@f+1
  4184  0055EE                     
  4185                           ; BSR set to: 0
  4186  0055EE  0E00               	movlw	0
  4187  0055F0  6F72               	movwf	(sprintf@f+4)& (0+255),b
  4188  0055F2  0E00               	movlw	0
  4189  0055F4  6F71               	movwf	(sprintf@f+3)& (0+255),b
  4190  0055F6                     
  4191                           ; BSR set to: 0
  4192  0055F6  0E00               	movlw	0
  4193  0055F8  6F78               	movwf	(sprintf@f+10)& (0+255),b
  4194  0055FA  0E00               	movlw	0
  4195  0055FC  6F77               	movwf	(sprintf@f+9)& (0+255),b
  4196  0055FE                     
  4197                           ; BSR set to: 0
  4198  0055FE  0E6E               	movlw	low sprintf@f
  4199  005600  6E50               	movwf	vfprintf@fp^0,c
  4200  005602  0E00               	movlw	high sprintf@f
  4201  005604  6E51               	movwf	(vfprintf@fp+1)^0,c
  4202  005606  C062  F052         	movff	sprintf@fmt,vfprintf@fmt
  4203  00560A  C063  F053         	movff	sprintf@fmt+1,vfprintf@fmt+1
  4204  00560E  0E6C               	movlw	low sprintf@ap
  4205  005610  6E54               	movwf	vfprintf@ap^0,c
  4206  005612  0E00               	movlw	high sprintf@ap
  4207  005614  6E55               	movwf	(vfprintf@ap+1)^0,c
  4208  005616  EC8E  F02A         	call	_vfprintf	;wreg free
  4209  00561A  0100               	movlb	0	; () banked
  4210  00561C  5171               	movf	(sprintf@f+3)& (0+255),w,b
  4211  00561E  2560               	addwf	sprintf@s& (0+255),w,b
  4212  005620  6ED9               	movwf	fsr2l,c
  4213  005622  5172               	movf	(sprintf@f+4)& (0+255),w,b
  4214  005624  2161               	addwfc	(sprintf@s+1)& (0+255),w,b
  4215  005626  6EDA               	movwf	fsr2h,c
  4216  005628  0E00               	movlw	0
  4217  00562A  6EDF               	movwf	indf2,c
  4218  00562C                     
  4219                           ; BSR set to: 0
  4220  00562C  0012               	return		;funcret
  4221  00562E                     __end_of_sprintf:
  4222                           	callstack 0
  4223                           
  4224 ;; *************** function _vfprintf *****************
  4225 ;; Defined at:
  4226 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c"
  4227 ;; Parameters:    Size  Location     Type
  4228 ;;  fp              2   79[COMRAM] PTR struct _IO_FILE
  4229 ;;		 -> sprintf@f(11), 
  4230 ;;  fmt             2   81[COMRAM] PTR const unsigned char 
  4231 ;;		 -> STR_2(6), STR_1(14), 
  4232 ;;  ap              2   83[COMRAM] PTR PTR void 
  4233 ;;		 -> sprintf@ap(2), 
  4234 ;; Auto vars:     Size  Location     Type
  4235 ;;  cfmt            2   85[COMRAM] PTR unsigned char 
  4236 ;;		 -> STR_2(6), STR_1(14), 
  4237 ;; Return value:  Size  Location     Type
  4238 ;;                  2   79[COMRAM] int 
  4239 ;; Registers used:
  4240 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4241 ;; Tracked objects:
  4242 ;;		On entry : 0/0
  4243 ;;		On exit  : 0/0
  4244 ;;		Unchanged: 0/0
  4245 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4246 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4247 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4248 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4249 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4250 ;;Total ram usage:        8 bytes
  4251 ;; Hardware stack levels used: 1
  4252 ;; Hardware stack levels required when called: 7
  4253 ;; This function calls:
  4254 ;;		_vfpfcnvrt
  4255 ;; This function is called by:
  4256 ;;		_sprintf
  4257 ;; This function uses a non-reentrant model
  4258 ;;
  4259                           
  4260                           	psect	text11
  4261  00551C                     __ptext11:
  4262                           	callstack 0
  4263  00551C                     _vfprintf:
  4264                           	callstack 20
  4265  00551C                     
  4266                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.35\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  4267  00551C  C052  F056         	movff	vfprintf@fmt,vfprintf@cfmt
  4268  005520  C053  F057         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  4269  005524                     
  4270                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  4271  005524  0E00               	movlw	0
  4272  005526  0101               	movlb	1	; () banked
  4273  005528  6F3F               	movwf	(_nout+1)& (0+255),b
  4274  00552A  0E00               	movlw	0
  4275  00552C  6F3E               	movwf	_nout& (0+255),b
  4276                           
  4277                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  4278  00552E  EFAC  F02A         	goto	l4233
  4279  005532                     l4231:
  4280                           
  4281                           ; BSR set to: 1
  4282                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  4283  005532  C050  F040         	movff	vfprintf@fp,vfpfcnvrt@fp
  4284  005536  C051  F041         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  4285  00553A  0E56               	movlw	low vfprintf@cfmt
  4286  00553C  6E42               	movwf	vfpfcnvrt@fmt^0,c
  4287  00553E  0E00               	movlw	high vfprintf@cfmt
  4288  005540  6E43               	movwf	(vfpfcnvrt@fmt+1)^0,c
  4289  005542  C054  F044         	movff	vfprintf@ap,vfpfcnvrt@ap
  4290  005546  C055  F045         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  4291  00554A  ECDA  F01E         	call	_vfpfcnvrt	;wreg free
  4292  00554E  5040               	movf	?_vfpfcnvrt^0,w,c
  4293  005550  0101               	movlb	1	; () banked
  4294  005552  273E               	addwf	_nout& (0+255),f,b
  4295  005554  5041               	movf	(?_vfpfcnvrt+1)^0,w,c
  4296  005556  233F               	addwfc	(_nout+1)& (0+255),f,b
  4297  005558                     l4233:
  4298                           
  4299                           ; BSR set to: 1
  4300                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  4301  005558  C056  FFF6         	movff	vfprintf@cfmt,tblptrl
  4302  00555C  C057  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  4303  005560                     	if	0	;tblptru may be non-zero
  4304  005560                     	endif
  4305  005560                     	if	0	;tblptru may be non-zero
  4306  005560                     	endif
  4307  005560  0008               	tblrd		*
  4308  005562  50F5               	movf	tablat,w,c
  4309  005564  0900               	iorlw	0
  4310  005566  A4D8               	btfss	status,2,c
  4311  005568  EFB8  F02A         	goto	u4121
  4312  00556C  EFBA  F02A         	goto	u4120
  4313  005570                     u4121:
  4314  005570  EF99  F02A         	goto	l4231
  4315  005574                     u4120:
  4316  005574                     
  4317                           ; BSR set to: 1
  4318                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  4319  005574  C13E  F050         	movff	_nout,?_vfprintf
  4320  005578  C13F  F051         	movff	_nout+1,?_vfprintf+1
  4321  00557C                     
  4322                           ; BSR set to: 1
  4323  00557C  0012               	return		;funcret
  4324  00557E                     __end_of_vfprintf:
  4325                           	callstack 0
  4326                           
  4327 ;; *************** function _vfpfcnvrt *****************
  4328 ;; Defined at:
  4329 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c"
  4330 ;; Parameters:    Size  Location     Type
  4331 ;;  fp              2   63[COMRAM] PTR struct _IO_FILE
  4332 ;;		 -> sprintf@f(11), 
  4333 ;;  fmt             2   65[COMRAM] PTR PTR unsigned char 
  4334 ;;		 -> vfprintf@cfmt(2), 
  4335 ;;  ap              2   67[COMRAM] PTR PTR void 
  4336 ;;		 -> sprintf@ap(2), 
  4337 ;; Auto vars:     Size  Location     Type
  4338 ;;  ll              8   71[COMRAM] long long 
  4339 ;;  llu             8    0        unsigned long long 
  4340 ;;  f               4    0        unsigned long long 
  4341 ;;  vp              3    0        PTR void 
  4342 ;;  ct              3    0        unsigned char [3]
  4343 ;;  cp              3    0        PTR unsigned char 
  4344 ;;  i               2    0        int 
  4345 ;;  done            2    0        int 
  4346 ;;  c               1    0        unsigned char 
  4347 ;; Return value:  Size  Location     Type
  4348 ;;                  2   63[COMRAM] int 
  4349 ;; Registers used:
  4350 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4351 ;; Tracked objects:
  4352 ;;		On entry : 0/0
  4353 ;;		On exit  : 0/0
  4354 ;;		Unchanged: 0/0
  4355 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4356 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4357 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4358 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4359 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4360 ;;Total ram usage:       16 bytes
  4361 ;; Hardware stack levels used: 1
  4362 ;; Hardware stack levels required when called: 6
  4363 ;; This function calls:
  4364 ;;		_dtoa
  4365 ;;		_fputc
  4366 ;; This function is called by:
  4367 ;;		_vfprintf
  4368 ;; This function uses a non-reentrant model
  4369 ;;
  4370                           
  4371                           	psect	text12
  4372  003DB4                     __ptext12:
  4373                           	callstack 0
  4374  003DB4                     _vfpfcnvrt:
  4375                           	callstack 20
  4376  003DB4                     
  4377                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.35\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.35\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.35\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          5\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  4378  003DB4  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4379  003DB8  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4380  003DBC  CFDE FFF6          	movff	postinc2,tblptrl
  4381  003DC0  CFDD FFF7          	movff	postdec2,tblptrh
  4382  003DC4                     	if	0	;tblptru may be non-zero
  4383  003DC4                     	endif
  4384  003DC4                     	if	0	;tblptru may be non-zero
  4385  003DC4                     	endif
  4386  003DC4  0008               	tblrd		*
  4387  003DC6  50F5               	movf	tablat,w,c
  4388  003DC8  0A25               	xorlw	37
  4389  003DCA  A4D8               	btfss	status,2,c
  4390  003DCC  EFEA  F01E         	goto	u3761
  4391  003DD0  EFEC  F01E         	goto	u3760
  4392  003DD4                     u3761:
  4393  003DD4  EF99  F01F         	goto	l4005
  4394  003DD8                     u3760:
  4395  003DD8                     
  4396                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  4397  003DD8  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4398  003DDC  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4399  003DE0  2ADE               	incf	postinc2,f,c
  4400  003DE2  0E00               	movlw	0
  4401  003DE4  22DD               	addwfc	postdec2,f,c
  4402  003DE6                     
  4403                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  4404  003DE6  0E00               	movlw	0
  4405  003DE8  0101               	movlb	1	; () banked
  4406  003DEA  6F41               	movwf	(_width+1)& (0+255),b
  4407  003DEC  0E00               	movlw	0
  4408  003DEE  6F40               	movwf	_width& (0+255),b
  4409  003DF0  C140  F0FA         	movff	_width,_flags
  4410  003DF4  C141  F0FB         	movff	_width+1,_flags+1
  4411  003DF8                     
  4412                           ; BSR set to: 1
  4413                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  4414  003DF8  0100               	movlb	0	; () banked
  4415  003DFA  69F8               	setf	_prec& (0+255),b
  4416  003DFC  69F9               	setf	(_prec+1)& (0+255),b
  4417  003DFE                     
  4418                           ; BSR set to: 0
  4419                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  4420  003DFE  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4421  003E02  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4422  003E06  CFDE FFF6          	movff	postinc2,tblptrl
  4423  003E0A  CFDD FFF7          	movff	postdec2,tblptrh
  4424  003E0E                     	if	0	;tblptru may be non-zero
  4425  003E0E                     	endif
  4426  003E0E                     	if	0	;tblptru may be non-zero
  4427  003E0E                     	endif
  4428  003E0E  0008               	tblrd		*
  4429  003E10  50F5               	movf	tablat,w,c
  4430  003E12  0A64               	xorlw	100
  4431  003E14  B4D8               	btfsc	status,2,c
  4432  003E16  EF0F  F01F         	goto	u3771
  4433  003E1A  EF11  F01F         	goto	u3770
  4434  003E1E                     u3771:
  4435  003E1E  EF23  F01F         	goto	l3983
  4436  003E22                     u3770:
  4437  003E22                     
  4438                           ; BSR set to: 0
  4439  003E22  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4440  003E26  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4441  003E2A  CFDE FFF6          	movff	postinc2,tblptrl
  4442  003E2E  CFDD FFF7          	movff	postdec2,tblptrh
  4443  003E32                     	if	0	;tblptru may be non-zero
  4444  003E32                     	endif
  4445  003E32                     	if	0	;tblptru may be non-zero
  4446  003E32                     	endif
  4447  003E32  0008               	tblrd		*
  4448  003E34  50F5               	movf	tablat,w,c
  4449  003E36  0A69               	xorlw	105
  4450  003E38  A4D8               	btfss	status,2,c
  4451  003E3A  EF21  F01F         	goto	u3781
  4452  003E3E  EF23  F01F         	goto	u3780
  4453  003E42                     u3781:
  4454  003E42  EF63  F01F         	goto	l3989
  4455  003E46                     u3780:
  4456  003E46                     l3983:
  4457                           
  4458                           ; BSR set to: 0
  4459                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  4460  003E46  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4461  003E4A  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4462  003E4E  2ADE               	incf	postinc2,f,c
  4463  003E50  0E00               	movlw	0
  4464  003E52  22DD               	addwfc	postdec2,f,c
  4465                           
  4466                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  4467  003E54  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4468  003E58  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4469  003E5C  CFDF F046          	movff	indf2,??_vfpfcnvrt
  4470  003E60  0E02               	movlw	2
  4471  003E62  26DE               	addwf	postinc2,f,c
  4472  003E64  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  4473  003E68  0E00               	movlw	0
  4474  003E6A  22DD               	addwfc	postdec2,f,c
  4475  003E6C  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4476  003E70  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4477  003E74  CFDE F048          	movff	postinc2,vfpfcnvrt@ll
  4478  003E78  CFDD F049          	movff	postdec2,vfpfcnvrt@ll+1
  4479  003E7C  0E00               	movlw	0
  4480  003E7E  BE49               	btfsc	(vfpfcnvrt@ll+1)^0,7,c
  4481  003E80  0EFF               	movlw	-1
  4482  003E82  6E4A               	movwf	(vfpfcnvrt@ll+2)^0,c
  4483  003E84  6E4B               	movwf	(vfpfcnvrt@ll+3)^0,c
  4484  003E86  6E4C               	movwf	(vfpfcnvrt@ll+4)^0,c
  4485  003E88  6E4D               	movwf	(vfpfcnvrt@ll+5)^0,c
  4486  003E8A  6E4E               	movwf	(vfpfcnvrt@ll+6)^0,c
  4487  003E8C  6E4F               	movwf	(vfpfcnvrt@ll+7)^0,c
  4488  003E8E                     
  4489                           ; BSR set to: 0
  4490                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  4491  003E8E  C040  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  4492  003E92  C041  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  4493  003E96  C048  F01E         	movff	vfpfcnvrt@ll,dtoa@d
  4494  003E9A  C049  F01F         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  4495  003E9E  C04A  F020         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  4496  003EA2  C04B  F021         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  4497  003EA6  C04C  F022         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  4498  003EAA  C04D  F023         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  4499  003EAE  C04E  F024         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  4500  003EB2  C04F  F025         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  4501  003EB6  EC25  F015         	call	_dtoa	;wreg free
  4502  003EBA  C01C  F040         	movff	?_dtoa,?_vfpfcnvrt
  4503  003EBE  C01D  F041         	movff	?_dtoa+1,?_vfpfcnvrt+1
  4504  003EC2  EFB4  F01F         	goto	l1467
  4505  003EC6                     l3989:
  4506                           
  4507                           ; BSR set to: 0
  4508                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  4509  003EC6  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4510  003ECA  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4511  003ECE  CFDE FFF6          	movff	postinc2,tblptrl
  4512  003ED2  CFDD FFF7          	movff	postdec2,tblptrh
  4513  003ED6                     	if	0	;tblptru may be non-zero
  4514  003ED6                     	endif
  4515  003ED6                     	if	0	;tblptru may be non-zero
  4516  003ED6                     	endif
  4517  003ED6  0008               	tblrd		*
  4518  003ED8  50F5               	movf	tablat,w,c
  4519  003EDA  0A25               	xorlw	37
  4520  003EDC  A4D8               	btfss	status,2,c
  4521  003EDE  EF73  F01F         	goto	u3791
  4522  003EE2  EF75  F01F         	goto	u3790
  4523  003EE6                     u3791:
  4524  003EE6  EF8C  F01F         	goto	l3999
  4525  003EEA                     u3790:
  4526  003EEA                     
  4527                           ; BSR set to: 0
  4528                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  4529  003EEA  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4530  003EEE  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4531  003EF2  2ADE               	incf	postinc2,f,c
  4532  003EF4  0E00               	movlw	0
  4533  003EF6  22DD               	addwfc	postdec2,f,c
  4534  003EF8                     
  4535                           ; BSR set to: 0
  4536                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  4537  003EF8  0E00               	movlw	0
  4538  003EFA  6E02               	movwf	(fputc@c+1)^0,c
  4539  003EFC  0E25               	movlw	37
  4540  003EFE  6E01               	movwf	fputc@c^0,c
  4541  003F00  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
  4542  003F04  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  4543  003F08  EC99  F027         	call	_fputc	;wreg free
  4544  003F0C                     l3995:
  4545                           
  4546                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  4547  003F0C  0E00               	movlw	0
  4548  003F0E  6E41               	movwf	(?_vfpfcnvrt+1)^0,c
  4549  003F10  0E01               	movlw	1
  4550  003F12  6E40               	movwf	?_vfpfcnvrt^0,c
  4551  003F14  EFB4  F01F         	goto	l1467
  4552  003F18                     l3999:
  4553                           
  4554                           ; BSR set to: 0
  4555                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  4556  003F18  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4557  003F1C  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4558  003F20  2ADE               	incf	postinc2,f,c
  4559  003F22  0E00               	movlw	0
  4560  003F24  22DD               	addwfc	postdec2,f,c
  4561  003F26                     
  4562                           ; BSR set to: 0
  4563                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  4564  003F26  0E00               	movlw	0
  4565  003F28  6E41               	movwf	(?_vfpfcnvrt+1)^0,c
  4566  003F2A  0E00               	movlw	0
  4567  003F2C  6E40               	movwf	?_vfpfcnvrt^0,c
  4568  003F2E  EFB4  F01F         	goto	l1467
  4569  003F32                     l4005:
  4570                           
  4571                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  4572  003F32  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4573  003F36  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4574  003F3A  CFDE FFF6          	movff	postinc2,tblptrl
  4575  003F3E  CFDD FFF7          	movff	postdec2,tblptrh
  4576  003F42                     	if	0	;tblptru may be non-zero
  4577  003F42                     	endif
  4578  003F42                     	if	0	;tblptru may be non-zero
  4579  003F42                     	endif
  4580  003F42  0008               	tblrd		*
  4581  003F44  50F5               	movf	tablat,w,c
  4582  003F46  6E01               	movwf	fputc@c^0,c
  4583  003F48  6A02               	clrf	(fputc@c+1)^0,c
  4584  003F4A  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
  4585  003F4E  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  4586  003F52  EC99  F027         	call	_fputc	;wreg free
  4587  003F56                     
  4588                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  4589  003F56  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4590  003F5A  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4591  003F5E  2ADE               	incf	postinc2,f,c
  4592  003F60  0E00               	movlw	0
  4593  003F62  22DD               	addwfc	postdec2,f,c
  4594  003F64  EF86  F01F         	goto	l3995
  4595  003F68                     l1467:
  4596  003F68  0012               	return		;funcret
  4597  003F6A                     __end_of_vfpfcnvrt:
  4598                           	callstack 0
  4599                           
  4600 ;; *************** function _dtoa *****************
  4601 ;; Defined at:
  4602 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c"
  4603 ;; Parameters:    Size  Location     Type
  4604 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  4605 ;;		 -> sprintf@f(11), 
  4606 ;;  d               8   29[COMRAM] long long 
  4607 ;; Auto vars:     Size  Location     Type
  4608 ;;  n               8   53[COMRAM] long long 
  4609 ;;  i               2   61[COMRAM] int 
  4610 ;;  s               2   51[COMRAM] int 
  4611 ;;  w               2   49[COMRAM] int 
  4612 ;;  p               2   47[COMRAM] int 
  4613 ;; Return value:  Size  Location     Type
  4614 ;;                  2   27[COMRAM] int 
  4615 ;; Registers used:
  4616 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4617 ;; Tracked objects:
  4618 ;;		On entry : 0/0
  4619 ;;		On exit  : 0/0
  4620 ;;		Unchanged: 0/0
  4621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4622 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4623 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4624 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4625 ;;      Totals:        36       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4626 ;;Total ram usage:       36 bytes
  4627 ;; Hardware stack levels used: 1
  4628 ;; Hardware stack levels required when called: 5
  4629 ;; This function calls:
  4630 ;;		___aodiv
  4631 ;;		___aomod
  4632 ;;		_abs
  4633 ;;		_pad
  4634 ;; This function is called by:
  4635 ;;		_vfpfcnvrt
  4636 ;; This function uses a non-reentrant model
  4637 ;;
  4638                           
  4639                           	psect	text13
  4640  002A4A                     __ptext13:
  4641                           	callstack 0
  4642  002A4A                     _dtoa:
  4643                           	callstack 20
  4644  002A4A                     
  4645                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  4646  002A4A  C01E  F036         	movff	dtoa@d,dtoa@n
  4647  002A4E  C01F  F037         	movff	dtoa@d+1,dtoa@n+1
  4648  002A52  C020  F038         	movff	dtoa@d+2,dtoa@n+2
  4649  002A56  C021  F039         	movff	dtoa@d+3,dtoa@n+3
  4650  002A5A  C022  F03A         	movff	dtoa@d+4,dtoa@n+4
  4651  002A5E  C023  F03B         	movff	dtoa@d+5,dtoa@n+5
  4652  002A62  C024  F03C         	movff	dtoa@d+6,dtoa@n+6
  4653  002A66  C025  F03D         	movff	dtoa@d+7,dtoa@n+7
  4654  002A6A                     
  4655                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  4656  002A6A  BE3D               	btfsc	(dtoa@n+7)^0,7,c
  4657  002A6C  EF3A  F015         	goto	u3141
  4658  002A70  EF3D  F015         	goto	u3140
  4659  002A74                     u3141:
  4660  002A74  0E01               	movlw	1
  4661  002A76  EF3E  F015         	goto	u3150
  4662  002A7A                     u3140:
  4663  002A7A  0E00               	movlw	0
  4664  002A7C                     u3150:
  4665  002A7C  6E34               	movwf	dtoa@s^0,c
  4666  002A7E  6A35               	clrf	(dtoa@s+1)^0,c
  4667                           
  4668                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  4669  002A80  5034               	movf	dtoa@s^0,w,c
  4670  002A82  1035               	iorwf	(dtoa@s+1)^0,w,c
  4671  002A84  B4D8               	btfsc	status,2,c
  4672  002A86  EF47  F015         	goto	u3161
  4673  002A8A  EF49  F015         	goto	u3160
  4674  002A8E                     u3161:
  4675  002A8E  EF59  F015         	goto	l3659
  4676  002A92                     u3160:
  4677  002A92                     
  4678                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  4679  002A92  1E3D               	comf	(dtoa@n+7)^0,f,c
  4680  002A94  1E3C               	comf	(dtoa@n+6)^0,f,c
  4681  002A96  1E3B               	comf	(dtoa@n+5)^0,f,c
  4682  002A98  1E3A               	comf	(dtoa@n+4)^0,f,c
  4683  002A9A  1E39               	comf	(dtoa@n+3)^0,f,c
  4684  002A9C  1E38               	comf	(dtoa@n+2)^0,f,c
  4685  002A9E  1E37               	comf	(dtoa@n+1)^0,f,c
  4686  002AA0  6C36               	negf	dtoa@n^0,c
  4687  002AA2  0E00               	movlw	0
  4688  002AA4  2237               	addwfc	(dtoa@n+1)^0,f,c
  4689  002AA6  2238               	addwfc	(dtoa@n+2)^0,f,c
  4690  002AA8  2239               	addwfc	(dtoa@n+3)^0,f,c
  4691  002AAA  223A               	addwfc	(dtoa@n+4)^0,f,c
  4692  002AAC  223B               	addwfc	(dtoa@n+5)^0,f,c
  4693  002AAE  223C               	addwfc	(dtoa@n+6)^0,f,c
  4694  002AB0  223D               	addwfc	(dtoa@n+7)^0,f,c
  4695  002AB2                     l3659:
  4696                           
  4697                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  4698  002AB2  0100               	movlb	0	; () banked
  4699  002AB4  BFF9               	btfsc	(_prec+1)& (0+255),7,b
  4700  002AB6  EF5F  F015         	goto	u3171
  4701  002ABA  EF61  F015         	goto	u3170
  4702  002ABE                     u3171:
  4703  002ABE  EF62  F015         	goto	l3663
  4704  002AC2                     u3170:
  4705  002AC2                     
  4706                           ; BSR set to: 0
  4707                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  4708  002AC2  93FA               	bcf	_flags& (0+255),1,b
  4709  002AC4                     l3663:
  4710                           
  4711                           ; BSR set to: 0
  4712                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  4713  002AC4  BFF9               	btfsc	(_prec+1)& (0+255),7,b
  4714  002AC6  EF6F  F015         	goto	u3180
  4715  002ACA  51F9               	movf	(_prec+1)& (0+255),w,b
  4716  002ACC  E106               	bnz	u3181
  4717  002ACE  05F8               	decf	_prec& (0+255),w,b
  4718  002AD0  B0D8               	btfsc	status,0,c
  4719  002AD2  EF6D  F015         	goto	u3181
  4720  002AD6  EF6F  F015         	goto	u3180
  4721  002ADA                     u3181:
  4722  002ADA  EF75  F015         	goto	l1440
  4723  002ADE                     u3180:
  4724  002ADE                     
  4725                           ; BSR set to: 0
  4726  002ADE  0E00               	movlw	0
  4727  002AE0  6E31               	movwf	(dtoa@p+1)^0,c
  4728  002AE2  0E01               	movlw	1
  4729  002AE4  6E30               	movwf	dtoa@p^0,c
  4730  002AE6  EF79  F015         	goto	l1442
  4731  002AEA                     l1440:
  4732                           
  4733                           ; BSR set to: 0
  4734  002AEA  C0F8  F030         	movff	_prec,dtoa@p
  4735  002AEE  C0F9  F031         	movff	_prec+1,dtoa@p+1
  4736  002AF2                     l1442:
  4737                           
  4738                           ; BSR set to: 0
  4739                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  4740  002AF2  C140  F032         	movff	_width,dtoa@w
  4741  002AF6  C141  F033         	movff	_width+1,dtoa@w+1
  4742  002AFA                     
  4743                           ; BSR set to: 0
  4744                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  4745  002AFA  5034               	movf	dtoa@s^0,w,c
  4746  002AFC  1035               	iorwf	(dtoa@s+1)^0,w,c
  4747  002AFE  A4D8               	btfss	status,2,c
  4748  002B00  EF84  F015         	goto	u3191
  4749  002B04  EF86  F015         	goto	u3190
  4750  002B08                     u3191:
  4751  002B08  EF8D  F015         	goto	l3671
  4752  002B0C                     u3190:
  4753  002B0C                     
  4754                           ; BSR set to: 0
  4755  002B0C  A5FA               	btfss	_flags& (0+255),2,b
  4756  002B0E  EF8B  F015         	goto	u3201
  4757  002B12  EF8D  F015         	goto	u3200
  4758  002B16                     u3201:
  4759  002B16  EF90  F015         	goto	l3673
  4760  002B1A                     u3200:
  4761  002B1A                     l3671:
  4762                           
  4763                           ; BSR set to: 0
  4764                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 306:         --w;
  4765  002B1A  0632               	decf	dtoa@w^0,f,c
  4766  002B1C  A0D8               	btfss	status,0,c
  4767  002B1E  0633               	decf	(dtoa@w+1)^0,f,c
  4768  002B20                     l3673:
  4769                           
  4770                           ; BSR set to: 0
  4771                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  4772  002B20  0E00               	movlw	0
  4773  002B22  6E3F               	movwf	(dtoa@i+1)^0,c
  4774  002B24  0E1F               	movlw	31
  4775  002B26  6E3E               	movwf	dtoa@i^0,c
  4776  002B28                     
  4777                           ; BSR set to: 0
  4778                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  4779  002B28  0E00               	movlw	0
  4780  002B2A  0101               	movlb	1	; () banked
  4781  002B2C  6F69               	movwf	(_dbuf+31)& (0+255),b
  4782                           
  4783                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  4784  002B2E  EF15  F016         	goto	l3687
  4785  002B32                     l3677:
  4786                           
  4787                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 313:         --i;
  4788  002B32  063E               	decf	dtoa@i^0,f,c
  4789  002B34  A0D8               	btfss	status,0,c
  4790  002B36  063F               	decf	(dtoa@i+1)^0,f,c
  4791  002B38                     
  4792                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  4793  002B38  0E4A               	movlw	low _dbuf
  4794  002B3A  243E               	addwf	dtoa@i^0,w,c
  4795  002B3C  6ED9               	movwf	fsr2l,c
  4796  002B3E  0E01               	movlw	high _dbuf
  4797  002B40  203F               	addwfc	(dtoa@i+1)^0,w,c
  4798  002B42  6EDA               	movwf	fsr2h,c
  4799  002B44  C036  F001         	movff	dtoa@n,___aomod@dividend
  4800  002B48  C037  F002         	movff	dtoa@n+1,___aomod@dividend+1
  4801  002B4C  C038  F003         	movff	dtoa@n+2,___aomod@dividend+2
  4802  002B50  C039  F004         	movff	dtoa@n+3,___aomod@dividend+3
  4803  002B54  C03A  F005         	movff	dtoa@n+4,___aomod@dividend+4
  4804  002B58  C03B  F006         	movff	dtoa@n+5,___aomod@dividend+5
  4805  002B5C  C03C  F007         	movff	dtoa@n+6,___aomod@dividend+6
  4806  002B60  C03D  F008         	movff	dtoa@n+7,___aomod@dividend+7
  4807  002B64  0E0A               	movlw	10
  4808  002B66  6E09               	movwf	___aomod@divisor^0,c
  4809  002B68  0E00               	movlw	0
  4810  002B6A  6E0A               	movwf	(___aomod@divisor+1)^0,c
  4811  002B6C  0E00               	movlw	0
  4812  002B6E  6E0B               	movwf	(___aomod@divisor+2)^0,c
  4813  002B70  0E00               	movlw	0
  4814  002B72  6E0C               	movwf	(___aomod@divisor+3)^0,c
  4815  002B74  0E00               	movlw	0
  4816  002B76  6E0D               	movwf	(___aomod@divisor+4)^0,c
  4817  002B78  0E00               	movlw	0
  4818  002B7A  6E0E               	movwf	(___aomod@divisor+5)^0,c
  4819  002B7C  0E00               	movlw	0
  4820  002B7E  6E0F               	movwf	(___aomod@divisor+6)^0,c
  4821  002B80  0E00               	movlw	0
  4822  002B82  6E10               	movwf	(___aomod@divisor+7)^0,c
  4823  002B84  EC71  F024         	call	___aomod	;wreg free
  4824  002B88  C001  F026         	movff	?___aomod,??_dtoa
  4825  002B8C  C002  F027         	movff	?___aomod+1,??_dtoa+1
  4826  002B90  C003  F028         	movff	?___aomod+2,??_dtoa+2
  4827  002B94  C004  F029         	movff	?___aomod+3,??_dtoa+3
  4828  002B98  C005  F02A         	movff	?___aomod+4,??_dtoa+4
  4829  002B9C  C006  F02B         	movff	?___aomod+5,??_dtoa+5
  4830  002BA0  C007  F02C         	movff	?___aomod+6,??_dtoa+6
  4831  002BA4  C008  F02D         	movff	?___aomod+7,??_dtoa+7
  4832  002BA8  C026  F013         	movff	??_dtoa,abs@a
  4833  002BAC  C028  F014         	movff	??_dtoa+2,abs@a+1
  4834  002BB0  ECE5  F02C         	call	_abs	;wreg free
  4835  002BB4  5013               	movf	?_abs^0,w,c
  4836  002BB6  0F30               	addlw	48
  4837  002BB8  6EDF               	movwf	indf2,c
  4838  002BBA                     
  4839                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 315:         --p;
  4840  002BBA  0630               	decf	dtoa@p^0,f,c
  4841  002BBC  A0D8               	btfss	status,0,c
  4842  002BBE  0631               	decf	(dtoa@p+1)^0,f,c
  4843  002BC0                     
  4844                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 316:         --w;
  4845  002BC0  0632               	decf	dtoa@w^0,f,c
  4846  002BC2  A0D8               	btfss	status,0,c
  4847  002BC4  0633               	decf	(dtoa@w+1)^0,f,c
  4848  002BC6                     
  4849                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  4850  002BC6  C036  F001         	movff	dtoa@n,___aodiv@dividend
  4851  002BCA  C037  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  4852  002BCE  C038  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  4853  002BD2  C039  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  4854  002BD6  C03A  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  4855  002BDA  C03B  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  4856  002BDE  C03C  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  4857  002BE2  C03D  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  4858  002BE6  0E0A               	movlw	10
  4859  002BE8  6E09               	movwf	___aodiv@divisor^0,c
  4860  002BEA  0E00               	movlw	0
  4861  002BEC  6E0A               	movwf	(___aodiv@divisor+1)^0,c
  4862  002BEE  0E00               	movlw	0
  4863  002BF0  6E0B               	movwf	(___aodiv@divisor+2)^0,c
  4864  002BF2  0E00               	movlw	0
  4865  002BF4  6E0C               	movwf	(___aodiv@divisor+3)^0,c
  4866  002BF6  0E00               	movlw	0
  4867  002BF8  6E0D               	movwf	(___aodiv@divisor+4)^0,c
  4868  002BFA  0E00               	movlw	0
  4869  002BFC  6E0E               	movwf	(___aodiv@divisor+5)^0,c
  4870  002BFE  0E00               	movlw	0
  4871  002C00  6E0F               	movwf	(___aodiv@divisor+6)^0,c
  4872  002C02  0E00               	movlw	0
  4873  002C04  6E10               	movwf	(___aodiv@divisor+7)^0,c
  4874  002C06  ECAD  F023         	call	___aodiv	;wreg free
  4875  002C0A  C001  F036         	movff	?___aodiv,dtoa@n
  4876  002C0E  C002  F037         	movff	?___aodiv+1,dtoa@n+1
  4877  002C12  C003  F038         	movff	?___aodiv+2,dtoa@n+2
  4878  002C16  C004  F039         	movff	?___aodiv+3,dtoa@n+3
  4879  002C1A  C005  F03A         	movff	?___aodiv+4,dtoa@n+4
  4880  002C1E  C006  F03B         	movff	?___aodiv+5,dtoa@n+5
  4881  002C22  C007  F03C         	movff	?___aodiv+6,dtoa@n+6
  4882  002C26  C008  F03D         	movff	?___aodiv+7,dtoa@n+7
  4883  002C2A                     l3687:
  4884                           
  4885                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  4886  002C2A  BE3F               	btfsc	(dtoa@i+1)^0,7,c
  4887  002C2C  EF20  F016         	goto	u3211
  4888  002C30  503F               	movf	(dtoa@i+1)^0,w,c
  4889  002C32  E108               	bnz	u3210
  4890  002C34  043E               	decf	dtoa@i^0,w,c
  4891  002C36  A0D8               	btfss	status,0,c
  4892  002C38  EF20  F016         	goto	u3211
  4893  002C3C  EF22  F016         	goto	u3210
  4894  002C40                     u3211:
  4895  002C40  EF53  F016         	goto	l3697
  4896  002C44                     u3210:
  4897  002C44  5036               	movf	dtoa@n^0,w,c
  4898  002C46  1037               	iorwf	(dtoa@n+1)^0,w,c
  4899  002C48  1038               	iorwf	(dtoa@n+2)^0,w,c
  4900  002C4A  1039               	iorwf	(dtoa@n+3)^0,w,c
  4901  002C4C  103A               	iorwf	(dtoa@n+4)^0,w,c
  4902  002C4E  103B               	iorwf	(dtoa@n+5)^0,w,c
  4903  002C50  103C               	iorwf	(dtoa@n+6)^0,w,c
  4904  002C52  103D               	iorwf	(dtoa@n+7)^0,w,c
  4905  002C54  A4D8               	btfss	status,2,c
  4906  002C56  EF2F  F016         	goto	u3221
  4907  002C5A  EF31  F016         	goto	u3220
  4908  002C5E                     u3221:
  4909  002C5E  EF99  F015         	goto	l3677
  4910  002C62                     u3220:
  4911  002C62  BE31               	btfsc	(dtoa@p+1)^0,7,c
  4912  002C64  EF3E  F016         	goto	u3230
  4913  002C68  5031               	movf	(dtoa@p+1)^0,w,c
  4914  002C6A  E106               	bnz	u3231
  4915  002C6C  0430               	decf	dtoa@p^0,w,c
  4916  002C6E  B0D8               	btfsc	status,0,c
  4917  002C70  EF3C  F016         	goto	u3231
  4918  002C74  EF3E  F016         	goto	u3230
  4919  002C78                     u3231:
  4920  002C78  EF99  F015         	goto	l3677
  4921  002C7C                     u3230:
  4922  002C7C  BE33               	btfsc	(dtoa@w+1)^0,7,c
  4923  002C7E  EF49  F016         	goto	u3241
  4924  002C82  5033               	movf	(dtoa@w+1)^0,w,c
  4925  002C84  E108               	bnz	u3240
  4926  002C86  0432               	decf	dtoa@w^0,w,c
  4927  002C88  A0D8               	btfss	status,0,c
  4928  002C8A  EF49  F016         	goto	u3241
  4929  002C8E  EF4B  F016         	goto	u3240
  4930  002C92                     u3241:
  4931  002C92  EF53  F016         	goto	l3697
  4932  002C96                     u3240:
  4933  002C96  0100               	movlb	0	; () banked
  4934  002C98  B3FA               	btfsc	_flags& (0+255),1,b
  4935  002C9A  EF51  F016         	goto	u3251
  4936  002C9E  EF53  F016         	goto	u3250
  4937  002CA2                     u3251:
  4938  002CA2  EF99  F015         	goto	l3677
  4939  002CA6                     u3250:
  4940  002CA6                     l3697:
  4941                           
  4942                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  4943  002CA6  5034               	movf	dtoa@s^0,w,c
  4944  002CA8  1035               	iorwf	(dtoa@s+1)^0,w,c
  4945  002CAA  A4D8               	btfss	status,2,c
  4946  002CAC  EF5A  F016         	goto	u3261
  4947  002CB0  EF5C  F016         	goto	u3260
  4948  002CB4                     u3261:
  4949  002CB4  EF64  F016         	goto	l3701
  4950  002CB8                     u3260:
  4951  002CB8  0100               	movlb	0	; () banked
  4952  002CBA  A5FA               	btfss	_flags& (0+255),2,b
  4953  002CBC  EF62  F016         	goto	u3271
  4954  002CC0  EF64  F016         	goto	u3270
  4955  002CC4                     u3271:
  4956  002CC4  EF82  F016         	goto	l3711
  4957  002CC8                     u3270:
  4958  002CC8                     l3701:
  4959                           
  4960                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 322:         --i;
  4961  002CC8  063E               	decf	dtoa@i^0,f,c
  4962  002CCA  A0D8               	btfss	status,0,c
  4963  002CCC  063F               	decf	(dtoa@i+1)^0,f,c
  4964  002CCE                     
  4965                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  4966  002CCE  5034               	movf	dtoa@s^0,w,c
  4967  002CD0  1035               	iorwf	(dtoa@s+1)^0,w,c
  4968  002CD2  A4D8               	btfss	status,2,c
  4969  002CD4  EF6E  F016         	goto	u3281
  4970  002CD8  EF70  F016         	goto	u3280
  4971  002CDC                     u3281:
  4972  002CDC  EF76  F016         	goto	l3707
  4973  002CE0                     u3280:
  4974  002CE0  0E00               	movlw	0
  4975  002CE2  6E2F               	movwf	(_dtoa$2916+1)^0,c
  4976  002CE4  0E2B               	movlw	43
  4977  002CE6  6E2E               	movwf	_dtoa$2916^0,c
  4978  002CE8  EF7A  F016         	goto	l3709
  4979  002CEC                     l3707:
  4980  002CEC  0E00               	movlw	0
  4981  002CEE  6E2F               	movwf	(_dtoa$2916+1)^0,c
  4982  002CF0  0E2D               	movlw	45
  4983  002CF2  6E2E               	movwf	_dtoa$2916^0,c
  4984  002CF4                     l3709:
  4985  002CF4  0E4A               	movlw	low _dbuf
  4986  002CF6  243E               	addwf	dtoa@i^0,w,c
  4987  002CF8  6ED9               	movwf	fsr2l,c
  4988  002CFA  0E01               	movlw	high _dbuf
  4989  002CFC  203F               	addwfc	(dtoa@i+1)^0,w,c
  4990  002CFE  6EDA               	movwf	fsr2h,c
  4991  002D00  C02E  FFDF         	movff	_dtoa$2916,indf2
  4992  002D04                     l3711:
  4993                           
  4994                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  4995  002D04  C01C  F011         	movff	dtoa@fp,pad@fp
  4996  002D08  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
  4997  002D0C  0E4A               	movlw	low _dbuf
  4998  002D0E  243E               	addwf	dtoa@i^0,w,c
  4999  002D10  6E13               	movwf	pad@buf^0,c
  5000  002D12  0E01               	movlw	high _dbuf
  5001  002D14  203F               	addwfc	(dtoa@i+1)^0,w,c
  5002  002D16  6E14               	movwf	(pad@buf+1)^0,c
  5003  002D18  C032  F015         	movff	dtoa@w,pad@p
  5004  002D1C  C033  F016         	movff	dtoa@w+1,pad@p+1
  5005  002D20  EC61  F028         	call	_pad	;wreg free
  5006  002D24  C011  F01C         	movff	?_pad,?_dtoa
  5007  002D28  C012  F01D         	movff	?_pad+1,?_dtoa+1
  5008  002D2C  0012               	return		;funcret
  5009  002D2E                     __end_of_dtoa:
  5010                           	callstack 0
  5011                           
  5012 ;; *************** function _pad *****************
  5013 ;; Defined at:
  5014 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c"
  5015 ;; Parameters:    Size  Location     Type
  5016 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  5017 ;;		 -> sprintf@f(11), 
  5018 ;;  buf             2   18[COMRAM] PTR unsigned char 
  5019 ;;		 -> dbuf(32), 
  5020 ;;  p               2   20[COMRAM] int 
  5021 ;; Auto vars:     Size  Location     Type
  5022 ;;  w               2   25[COMRAM] int 
  5023 ;;  i               2   23[COMRAM] int 
  5024 ;; Return value:  Size  Location     Type
  5025 ;;                  2   16[COMRAM] int 
  5026 ;; Registers used:
  5027 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5028 ;; Tracked objects:
  5029 ;;		On entry : 0/0
  5030 ;;		On exit  : 0/0
  5031 ;;		Unchanged: 0/0
  5032 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5033 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5034 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5035 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5036 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5037 ;;Total ram usage:       11 bytes
  5038 ;; Hardware stack levels used: 1
  5039 ;; Hardware stack levels required when called: 4
  5040 ;; This function calls:
  5041 ;;		_fputc
  5042 ;;		_fputs
  5043 ;;		_strlen
  5044 ;; This function is called by:
  5045 ;;		_dtoa
  5046 ;; This function uses a non-reentrant model
  5047 ;;
  5048                           
  5049                           	psect	text14
  5050  0050C2                     __ptext14:
  5051                           	callstack 0
  5052  0050C2                     _pad:
  5053                           	callstack 20
  5054  0050C2                     
  5055                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  5056  0050C2  0100               	movlb	0	; () banked
  5057  0050C4  A1FA               	btfss	_flags& (0+255),0,b
  5058  0050C6  EF67  F028         	goto	u3091
  5059  0050CA  EF69  F028         	goto	u3090
  5060  0050CE                     u3091:
  5061  0050CE  EF73  F028         	goto	l3631
  5062  0050D2                     u3090:
  5063  0050D2                     
  5064                           ; BSR set to: 0
  5065                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  5066  0050D2  C013  F00A         	movff	pad@buf,fputs@s
  5067  0050D6  C014  F00B         	movff	pad@buf+1,fputs@s+1
  5068  0050DA  C011  F00C         	movff	pad@fp,fputs@fp
  5069  0050DE  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  5070  0050E2  ECFD  F02B         	call	_fputs	;wreg free
  5071  0050E6                     l3631:
  5072                           
  5073                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  5074  0050E6  BE16               	btfsc	(pad@p+1)^0,7,c
  5075  0050E8  EF78  F028         	goto	u3101
  5076  0050EC  EF7A  F028         	goto	u3100
  5077  0050F0                     u3101:
  5078  0050F0  EF80  F028         	goto	l3635
  5079  0050F4                     u3100:
  5080  0050F4  C015  F01A         	movff	pad@p,pad@w
  5081  0050F8  C016  F01B         	movff	pad@p+1,pad@w+1
  5082  0050FC  EF84  F028         	goto	l1429
  5083  005100                     l3635:
  5084  005100  0E00               	movlw	0
  5085  005102  6E1B               	movwf	(pad@w+1)^0,c
  5086  005104  0E00               	movlw	0
  5087  005106  6E1A               	movwf	pad@w^0,c
  5088  005108                     l1429:
  5089                           
  5090                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  5091  005108  0E00               	movlw	0
  5092  00510A  6E19               	movwf	(pad@i+1)^0,c
  5093  00510C  0E00               	movlw	0
  5094  00510E  6E18               	movwf	pad@i^0,c
  5095                           
  5096                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  5097  005110  EF96  F028         	goto	l3641
  5098  005114                     l3637:
  5099                           
  5100                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  5101  005114  0E00               	movlw	0
  5102  005116  6E02               	movwf	(fputc@c+1)^0,c
  5103  005118  0E20               	movlw	32
  5104  00511A  6E01               	movwf	fputc@c^0,c
  5105  00511C  C011  F003         	movff	pad@fp,fputc@fp
  5106  005120  C012  F004         	movff	pad@fp+1,fputc@fp+1
  5107  005124  EC99  F027         	call	_fputc	;wreg free
  5108  005128                     
  5109                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 86:         ++i;
  5110  005128  4A18               	infsnz	pad@i^0,f,c
  5111  00512A  2A19               	incf	(pad@i+1)^0,f,c
  5112  00512C                     l3641:
  5113                           
  5114                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  5115  00512C  501A               	movf	pad@w^0,w,c
  5116  00512E  5C18               	subwf	pad@i^0,w,c
  5117  005130  5019               	movf	(pad@i+1)^0,w,c
  5118  005132  0A80               	xorlw	128
  5119  005134  6E17               	movwf	??_pad^0,c
  5120  005136  501B               	movf	(pad@w+1)^0,w,c
  5121  005138  0A80               	xorlw	128
  5122  00513A  5817               	subwfb	??_pad^0,w,c
  5123  00513C  A0D8               	btfss	status,0,c
  5124  00513E  EFA3  F028         	goto	u3111
  5125  005142  EFA5  F028         	goto	u3110
  5126  005146                     u3111:
  5127  005146  EF8A  F028         	goto	l3637
  5128  00514A                     u3110:
  5129  00514A                     
  5130                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  5131  00514A  0100               	movlb	0	; () banked
  5132  00514C  B1FA               	btfsc	_flags& (0+255),0,b
  5133  00514E  EFAB  F028         	goto	u3121
  5134  005152  EFAD  F028         	goto	u3120
  5135  005156                     u3121:
  5136  005156  EFB7  F028         	goto	l3645
  5137  00515A                     u3120:
  5138  00515A                     
  5139                           ; BSR set to: 0
  5140                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  5141  00515A  C013  F00A         	movff	pad@buf,fputs@s
  5142  00515E  C014  F00B         	movff	pad@buf+1,fputs@s+1
  5143  005162  C011  F00C         	movff	pad@fp,fputs@fp
  5144  005166  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  5145  00516A  ECFD  F02B         	call	_fputs	;wreg free
  5146  00516E                     l3645:
  5147                           
  5148                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  5149  00516E  C013  F001         	movff	pad@buf,strlen@s
  5150  005172  C014  F002         	movff	pad@buf+1,strlen@s+1
  5151  005176  EC5B  F02D         	call	_strlen	;wreg free
  5152  00517A  501A               	movf	pad@w^0,w,c
  5153  00517C  2401               	addwf	?_strlen^0,w,c
  5154  00517E  6E11               	movwf	?_pad^0,c
  5155  005180  501B               	movf	(pad@w+1)^0,w,c
  5156  005182  2002               	addwfc	(?_strlen+1)^0,w,c
  5157  005184  6E12               	movwf	(?_pad+1)^0,c
  5158  005186  0012               	return		;funcret
  5159  005188                     __end_of_pad:
  5160                           	callstack 0
  5161                           
  5162 ;; *************** function _strlen *****************
  5163 ;; Defined at:
  5164 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\strlen.c"
  5165 ;; Parameters:    Size  Location     Type
  5166 ;;  s               2    0[COMRAM] PTR const unsigned char 
  5167 ;;		 -> dbuf(32), 
  5168 ;; Auto vars:     Size  Location     Type
  5169 ;;  a               2    2[COMRAM] PTR const unsigned char 
  5170 ;;		 -> dbuf(32), 
  5171 ;; Return value:  Size  Location     Type
  5172 ;;                  2    0[COMRAM] unsigned int 
  5173 ;; Registers used:
  5174 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5175 ;; Tracked objects:
  5176 ;;		On entry : 0/0
  5177 ;;		On exit  : 0/0
  5178 ;;		Unchanged: 0/0
  5179 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5180 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5181 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5182 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5183 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5184 ;;Total ram usage:        4 bytes
  5185 ;; Hardware stack levels used: 1
  5186 ;; Hardware stack levels required when called: 1
  5187 ;; This function calls:
  5188 ;;		Nothing
  5189 ;; This function is called by:
  5190 ;;		_pad
  5191 ;; This function uses a non-reentrant model
  5192 ;;
  5193                           
  5194                           	psect	text15
  5195  005AB6                     __ptext15:
  5196                           	callstack 0
  5197  005AB6                     _strlen:
  5198                           	callstack 22
  5199  005AB6  C001  F003         	movff	strlen@s,strlen@a
  5200  005ABA  C002  F004         	movff	strlen@s+1,strlen@a+1
  5201  005ABE  EF63  F02D         	goto	l3541
  5202  005AC2                     l3539:
  5203  005AC2  4A01               	infsnz	strlen@s^0,f,c
  5204  005AC4  2A02               	incf	(strlen@s+1)^0,f,c
  5205  005AC6                     l3541:
  5206  005AC6  C001  FFD9         	movff	strlen@s,fsr2l
  5207  005ACA  C002  FFDA         	movff	strlen@s+1,fsr2h
  5208  005ACE  50DF               	movf	indf2,w,c
  5209  005AD0  A4D8               	btfss	status,2,c
  5210  005AD2  EF6D  F02D         	goto	u2951
  5211  005AD6  EF6F  F02D         	goto	u2950
  5212  005ADA                     u2951:
  5213  005ADA  EF61  F02D         	goto	l3539
  5214  005ADE                     u2950:
  5215  005ADE  5003               	movf	strlen@a^0,w,c
  5216  005AE0  5C01               	subwf	strlen@s^0,w,c
  5217  005AE2  6E01               	movwf	?_strlen^0,c
  5218  005AE4  5004               	movf	(strlen@a+1)^0,w,c
  5219  005AE6  5802               	subwfb	(strlen@s+1)^0,w,c
  5220  005AE8  6E02               	movwf	(?_strlen+1)^0,c
  5221  005AEA  0012               	return		;funcret
  5222  005AEC                     __end_of_strlen:
  5223                           	callstack 0
  5224                           
  5225 ;; *************** function _fputs *****************
  5226 ;; Defined at:
  5227 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\nf_fputs.c"
  5228 ;; Parameters:    Size  Location     Type
  5229 ;;  s               2    9[COMRAM] PTR const unsigned char 
  5230 ;;		 -> dbuf(32), 
  5231 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  5232 ;;		 -> sprintf@f(11), 
  5233 ;; Auto vars:     Size  Location     Type
  5234 ;;  i               2   14[COMRAM] int 
  5235 ;;  c               1   13[COMRAM] unsigned char 
  5236 ;; Return value:  Size  Location     Type
  5237 ;;                  2    9[COMRAM] int 
  5238 ;; Registers used:
  5239 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5240 ;; Tracked objects:
  5241 ;;		On entry : 0/0
  5242 ;;		On exit  : 0/0
  5243 ;;		Unchanged: 0/0
  5244 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5245 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5246 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5247 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5248 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5249 ;;Total ram usage:        7 bytes
  5250 ;; Hardware stack levels used: 1
  5251 ;; Hardware stack levels required when called: 3
  5252 ;; This function calls:
  5253 ;;		_fputc
  5254 ;; This function is called by:
  5255 ;;		_pad
  5256 ;; This function uses a non-reentrant model
  5257 ;;
  5258                           
  5259                           	psect	text16
  5260  0057FA                     __ptext16:
  5261                           	callstack 0
  5262  0057FA                     _fputs:
  5263                           	callstack 20
  5264  0057FA  0E00               	movlw	0
  5265  0057FC  6E10               	movwf	(fputs@i+1)^0,c
  5266  0057FE  0E00               	movlw	0
  5267  005800  6E0F               	movwf	fputs@i^0,c
  5268  005802  EF0E  F02C         	goto	l3535
  5269  005806                     l3531:
  5270  005806  C00E  F001         	movff	fputs@c,fputc@c
  5271  00580A  6A02               	clrf	(fputc@c+1)^0,c
  5272  00580C  C00C  F003         	movff	fputs@fp,fputc@fp
  5273  005810  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  5274  005814  EC99  F027         	call	_fputc	;wreg free
  5275  005818  4A0F               	infsnz	fputs@i^0,f,c
  5276  00581A  2A10               	incf	(fputs@i+1)^0,f,c
  5277  00581C                     l3535:
  5278  00581C  500F               	movf	fputs@i^0,w,c
  5279  00581E  240A               	addwf	fputs@s^0,w,c
  5280  005820  6ED9               	movwf	fsr2l,c
  5281  005822  5010               	movf	(fputs@i+1)^0,w,c
  5282  005824  200B               	addwfc	(fputs@s+1)^0,w,c
  5283  005826  6EDA               	movwf	fsr2h,c
  5284  005828  50DF               	movf	indf2,w,c
  5285  00582A  6E0E               	movwf	fputs@c^0,c
  5286  00582C  500E               	movf	fputs@c^0,w,c
  5287  00582E  A4D8               	btfss	status,2,c
  5288  005830  EF1C  F02C         	goto	u2941
  5289  005834  EF1E  F02C         	goto	u2940
  5290  005838                     u2941:
  5291  005838  EF03  F02C         	goto	l3531
  5292  00583C                     u2940:
  5293  00583C  0012               	return		;funcret
  5294  00583E                     __end_of_fputs:
  5295                           	callstack 0
  5296                           
  5297 ;; *************** function _fputc *****************
  5298 ;; Defined at:
  5299 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\nf_fputc.c"
  5300 ;; Parameters:    Size  Location     Type
  5301 ;;  c               2    0[COMRAM] int 
  5302 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  5303 ;;		 -> sprintf@f(11), 
  5304 ;; Auto vars:     Size  Location     Type
  5305 ;;		None
  5306 ;; Return value:  Size  Location     Type
  5307 ;;                  2    0[COMRAM] int 
  5308 ;; Registers used:
  5309 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5310 ;; Tracked objects:
  5311 ;;		On entry : 0/0
  5312 ;;		On exit  : 0/0
  5313 ;;		Unchanged: 0/0
  5314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5315 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5316 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5317 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5318 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5319 ;;Total ram usage:        9 bytes
  5320 ;; Hardware stack levels used: 1
  5321 ;; Hardware stack levels required when called: 2
  5322 ;; This function calls:
  5323 ;;		_putch
  5324 ;; This function is called by:
  5325 ;;		_pad
  5326 ;;		_vfpfcnvrt
  5327 ;;		_fputs
  5328 ;; This function uses a non-reentrant model
  5329 ;;
  5330                           
  5331                           	psect	text17
  5332  004F32                     __ptext17:
  5333                           	callstack 0
  5334  004F32                     _fputc:
  5335                           	callstack 23
  5336  004F32  5003               	movf	fputc@fp^0,w,c
  5337  004F34  1004               	iorwf	(fputc@fp+1)^0,w,c
  5338  004F36  B4D8               	btfsc	status,2,c
  5339  004F38  EFA0  F027         	goto	u2901
  5340  004F3C  EFA2  F027         	goto	u2900
  5341  004F40                     u2901:
  5342  004F40  EFAB  F027         	goto	l3519
  5343  004F44                     u2900:
  5344  004F44  5003               	movf	fputc@fp^0,w,c
  5345  004F46  1004               	iorwf	(fputc@fp+1)^0,w,c
  5346  004F48  A4D8               	btfss	status,2,c
  5347  004F4A  EFA9  F027         	goto	u2911
  5348  004F4E  EFAB  F027         	goto	u2910
  5349  004F52                     u2911:
  5350  004F52  EFB0  F027         	goto	l3521
  5351  004F56                     u2910:
  5352  004F56                     l3519:
  5353  004F56  5001               	movf	fputc@c^0,w,c
  5354  004F58  ECC7  F02E         	call	_putch
  5355  004F5C  EFFD  F027         	goto	l1493
  5356  004F60                     l3521:
  5357  004F60  EE20 F009          	lfsr	2,9
  5358  004F64  5003               	movf	fputc@fp^0,w,c
  5359  004F66  26D9               	addwf	fsr2l,f,c
  5360  004F68  5004               	movf	(fputc@fp+1)^0,w,c
  5361  004F6A  22DA               	addwfc	fsr2h,f,c
  5362  004F6C  50DE               	movf	postinc2,w,c
  5363  004F6E  10DE               	iorwf	postinc2,w,c
  5364  004F70  B4D8               	btfsc	status,2,c
  5365  004F72  EFBD  F027         	goto	u2921
  5366  004F76  EFBF  F027         	goto	u2920
  5367  004F7A                     u2921:
  5368  004F7A  EFDA  F027         	goto	l3525
  5369  004F7E                     u2920:
  5370  004F7E  EE20 F009          	lfsr	2,9
  5371  004F82  5003               	movf	fputc@fp^0,w,c
  5372  004F84  26D9               	addwf	fsr2l,f,c
  5373  004F86  5004               	movf	(fputc@fp+1)^0,w,c
  5374  004F88  22DA               	addwfc	fsr2h,f,c
  5375  004F8A  EE10 F003          	lfsr	1,3
  5376  004F8E  5003               	movf	fputc@fp^0,w,c
  5377  004F90  26E1               	addwf	fsr1l,f,c
  5378  004F92  5004               	movf	(fputc@fp+1)^0,w,c
  5379  004F94  22E2               	addwfc	fsr1h,f,c
  5380  004F96  50DE               	movf	postinc2,w,c
  5381  004F98  5CE6               	subwf	postinc1,w,c
  5382  004F9A  50E6               	movf	postinc1,w,c
  5383  004F9C  0A80               	xorlw	128
  5384  004F9E  6E09               	movwf	(??_fputc+4)^0,c
  5385  004FA0  50DE               	movf	postinc2,w,c
  5386  004FA2  0A80               	xorlw	128
  5387  004FA4  5809               	subwfb	(??_fputc+4)^0,w,c
  5388  004FA6  B0D8               	btfsc	status,0,c
  5389  004FA8  EFD8  F027         	goto	u2931
  5390  004FAC  EFDA  F027         	goto	u2930
  5391  004FB0                     u2931:
  5392  004FB0  EFFD  F027         	goto	l1493
  5393  004FB4                     u2930:
  5394  004FB4                     l3525:
  5395  004FB4  EE20 F003          	lfsr	2,3
  5396  004FB8  5003               	movf	fputc@fp^0,w,c
  5397  004FBA  26D9               	addwf	fsr2l,f,c
  5398  004FBC  5004               	movf	(fputc@fp+1)^0,w,c
  5399  004FBE  22DA               	addwfc	fsr2h,f,c
  5400  004FC0  CFDE F005          	movff	postinc2,??_fputc
  5401  004FC4  CFDD F006          	movff	postdec2,??_fputc+1
  5402  004FC8  C003  FFD9         	movff	fputc@fp,fsr2l
  5403  004FCC  C004  FFDA         	movff	fputc@fp+1,fsr2h
  5404  004FD0  CFDE F007          	movff	postinc2,??_fputc+2
  5405  004FD4  CFDD F008          	movff	postdec2,??_fputc+3
  5406  004FD8  5005               	movf	??_fputc^0,w,c
  5407  004FDA  2407               	addwf	(??_fputc+2)^0,w,c
  5408  004FDC  6ED9               	movwf	fsr2l,c
  5409  004FDE  5006               	movf	(??_fputc+1)^0,w,c
  5410  004FE0  2008               	addwfc	(??_fputc+3)^0,w,c
  5411  004FE2  6EDA               	movwf	fsr2h,c
  5412  004FE4  C001  FFDF         	movff	fputc@c,indf2
  5413  004FE8  EE20 F003          	lfsr	2,3
  5414  004FEC  5003               	movf	fputc@fp^0,w,c
  5415  004FEE  26D9               	addwf	fsr2l,f,c
  5416  004FF0  5004               	movf	(fputc@fp+1)^0,w,c
  5417  004FF2  22DA               	addwfc	fsr2h,f,c
  5418  004FF4  2ADE               	incf	postinc2,f,c
  5419  004FF6  0E00               	movlw	0
  5420  004FF8  22DD               	addwfc	postdec2,f,c
  5421  004FFA                     l1493:
  5422  004FFA  0012               	return		;funcret
  5423  004FFC                     __end_of_fputc:
  5424                           	callstack 0
  5425                           
  5426 ;; *************** function _putch *****************
  5427 ;; Defined at:
  5428 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\putch.c"
  5429 ;; Parameters:    Size  Location     Type
  5430 ;;  c               1    wreg     unsigned char 
  5431 ;; Auto vars:     Size  Location     Type
  5432 ;;  c               1    0[COMRAM] unsigned char 
  5433 ;; Return value:  Size  Location     Type
  5434 ;;                  1    wreg      void 
  5435 ;; Registers used:
  5436 ;;		wreg
  5437 ;; Tracked objects:
  5438 ;;		On entry : 0/0
  5439 ;;		On exit  : 0/0
  5440 ;;		Unchanged: 0/0
  5441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5442 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5443 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5444 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5445 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5446 ;;Total ram usage:        0 bytes
  5447 ;; Hardware stack levels used: 1
  5448 ;; Hardware stack levels required when called: 1
  5449 ;; This function calls:
  5450 ;;		Nothing
  5451 ;; This function is called by:
  5452 ;;		_fputc
  5453 ;; This function uses a non-reentrant model
  5454 ;;
  5455                           
  5456                           	psect	text18
  5457  005D8E                     __ptext18:
  5458                           	callstack 0
  5459  005D8E                     _putch:
  5460                           	callstack 23
  5461  005D8E  0012               	return		;funcret
  5462  005D90                     __end_of_putch:
  5463                           	callstack 0
  5464                           
  5465 ;; *************** function _abs *****************
  5466 ;; Defined at:
  5467 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\abs.c"
  5468 ;; Parameters:    Size  Location     Type
  5469 ;;  a               2   18[COMRAM] int 
  5470 ;; Auto vars:     Size  Location     Type
  5471 ;;		None
  5472 ;; Return value:  Size  Location     Type
  5473 ;;                  2   18[COMRAM] int 
  5474 ;; Registers used:
  5475 ;;		wreg, status,2, status,0
  5476 ;; Tracked objects:
  5477 ;;		On entry : 0/0
  5478 ;;		On exit  : 0/0
  5479 ;;		Unchanged: 0/0
  5480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5481 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5482 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5483 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5484 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5485 ;;Total ram usage:        4 bytes
  5486 ;; Hardware stack levels used: 1
  5487 ;; Hardware stack levels required when called: 1
  5488 ;; This function calls:
  5489 ;;		Nothing
  5490 ;; This function is called by:
  5491 ;;		_dtoa
  5492 ;; This function uses a non-reentrant model
  5493 ;;
  5494                           
  5495                           	psect	text19
  5496  0059CA                     __ptext19:
  5497                           	callstack 0
  5498  0059CA                     _abs:
  5499                           	callstack 23
  5500  0059CA  BE14               	btfsc	(abs@a+1)^0,7,c
  5501  0059CC  EFF2  F02C         	goto	u3130
  5502  0059D0  5014               	movf	(abs@a+1)^0,w,c
  5503  0059D2  E106               	bnz	u3131
  5504  0059D4  0413               	decf	abs@a^0,w,c
  5505  0059D6  B0D8               	btfsc	status,0,c
  5506  0059D8  EFF0  F02C         	goto	u3131
  5507  0059DC  EFF2  F02C         	goto	u3130
  5508  0059E0                     u3131:
  5509  0059E0  EF00  F02D         	goto	l1478
  5510  0059E4                     u3130:
  5511  0059E4  C013  F015         	movff	abs@a,??_abs
  5512  0059E8  C014  F016         	movff	abs@a+1,??_abs+1
  5513  0059EC  1E15               	comf	??_abs^0,f,c
  5514  0059EE  1E16               	comf	(??_abs+1)^0,f,c
  5515  0059F0  4A15               	infsnz	??_abs^0,f,c
  5516  0059F2  2A16               	incf	(??_abs+1)^0,f,c
  5517  0059F4  C015  F013         	movff	??_abs,?_abs
  5518  0059F8  C016  F014         	movff	??_abs+1,?_abs+1
  5519  0059FC  EF04  F02D         	goto	l1481
  5520  005A00                     l1478:
  5521  005A00  C013  F013         	movff	abs@a,?_abs
  5522  005A04  C014  F014         	movff	abs@a+1,?_abs+1
  5523  005A08                     l1481:
  5524  005A08  0012               	return		;funcret
  5525  005A0A                     __end_of_abs:
  5526                           	callstack 0
  5527                           
  5528 ;; *************** function ___aomod *****************
  5529 ;; Defined at:
  5530 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\aomod.c"
  5531 ;; Parameters:    Size  Location     Type
  5532 ;;  dividend        8    0[COMRAM] long long 
  5533 ;;  divisor         8    8[COMRAM] long long 
  5534 ;; Auto vars:     Size  Location     Type
  5535 ;;  sign            1   17[COMRAM] unsigned char 
  5536 ;;  counter         1   16[COMRAM] unsigned char 
  5537 ;; Return value:  Size  Location     Type
  5538 ;;                  8    0[COMRAM] long long 
  5539 ;; Registers used:
  5540 ;;		wreg, status,2, status,0
  5541 ;; Tracked objects:
  5542 ;;		On entry : 0/0
  5543 ;;		On exit  : 0/0
  5544 ;;		Unchanged: 0/0
  5545 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5546 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5547 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5548 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5549 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5550 ;;Total ram usage:       18 bytes
  5551 ;; Hardware stack levels used: 1
  5552 ;; Hardware stack levels required when called: 1
  5553 ;; This function calls:
  5554 ;;		Nothing
  5555 ;; This function is called by:
  5556 ;;		_dtoa
  5557 ;; This function uses a non-reentrant model
  5558 ;;
  5559                           
  5560                           	psect	text20
  5561  0048E2                     __ptext20:
  5562                           	callstack 0
  5563  0048E2                     ___aomod:
  5564                           	callstack 23
  5565  0048E2  0E00               	movlw	0
  5566  0048E4  6E12               	movwf	___aomod@sign^0,c
  5567  0048E6  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
  5568  0048E8  EF7A  F024         	goto	u3030
  5569  0048EC  EF78  F024         	goto	u3031
  5570  0048F0                     u3031:
  5571  0048F0  EF8C  F024         	goto	l3599
  5572  0048F4                     u3030:
  5573  0048F4  1E08               	comf	(___aomod@dividend+7)^0,f,c
  5574  0048F6  1E07               	comf	(___aomod@dividend+6)^0,f,c
  5575  0048F8  1E06               	comf	(___aomod@dividend+5)^0,f,c
  5576  0048FA  1E05               	comf	(___aomod@dividend+4)^0,f,c
  5577  0048FC  1E04               	comf	(___aomod@dividend+3)^0,f,c
  5578  0048FE  1E03               	comf	(___aomod@dividend+2)^0,f,c
  5579  004900  1E02               	comf	(___aomod@dividend+1)^0,f,c
  5580  004902  6C01               	negf	___aomod@dividend^0,c
  5581  004904  0E00               	movlw	0
  5582  004906  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  5583  004908  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  5584  00490A  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  5585  00490C  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  5586  00490E  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  5587  004910  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  5588  004912  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  5589  004914  0E01               	movlw	1
  5590  004916  6E12               	movwf	___aomod@sign^0,c
  5591  004918                     l3599:
  5592  004918  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
  5593  00491A  EF93  F024         	goto	u3040
  5594  00491E  EF91  F024         	goto	u3041
  5595  004922                     u3041:
  5596  004922  EFA3  F024         	goto	l3603
  5597  004926                     u3040:
  5598  004926  1E10               	comf	(___aomod@divisor+7)^0,f,c
  5599  004928  1E0F               	comf	(___aomod@divisor+6)^0,f,c
  5600  00492A  1E0E               	comf	(___aomod@divisor+5)^0,f,c
  5601  00492C  1E0D               	comf	(___aomod@divisor+4)^0,f,c
  5602  00492E  1E0C               	comf	(___aomod@divisor+3)^0,f,c
  5603  004930  1E0B               	comf	(___aomod@divisor+2)^0,f,c
  5604  004932  1E0A               	comf	(___aomod@divisor+1)^0,f,c
  5605  004934  6C09               	negf	___aomod@divisor^0,c
  5606  004936  0E00               	movlw	0
  5607  004938  220A               	addwfc	(___aomod@divisor+1)^0,f,c
  5608  00493A  220B               	addwfc	(___aomod@divisor+2)^0,f,c
  5609  00493C  220C               	addwfc	(___aomod@divisor+3)^0,f,c
  5610  00493E  220D               	addwfc	(___aomod@divisor+4)^0,f,c
  5611  004940  220E               	addwfc	(___aomod@divisor+5)^0,f,c
  5612  004942  220F               	addwfc	(___aomod@divisor+6)^0,f,c
  5613  004944  2210               	addwfc	(___aomod@divisor+7)^0,f,c
  5614  004946                     l3603:
  5615  004946  5009               	movf	___aomod@divisor^0,w,c
  5616  004948  100A               	iorwf	(___aomod@divisor+1)^0,w,c
  5617  00494A  100B               	iorwf	(___aomod@divisor+2)^0,w,c
  5618  00494C  100C               	iorwf	(___aomod@divisor+3)^0,w,c
  5619  00494E  100D               	iorwf	(___aomod@divisor+4)^0,w,c
  5620  004950  100E               	iorwf	(___aomod@divisor+5)^0,w,c
  5621  004952  100F               	iorwf	(___aomod@divisor+6)^0,w,c
  5622  004954  1010               	iorwf	(___aomod@divisor+7)^0,w,c
  5623  004956  B4D8               	btfsc	status,2,c
  5624  004958  EFB0  F024         	goto	u3051
  5625  00495C  EFB2  F024         	goto	u3050
  5626  004960                     u3051:
  5627  004960  EFFA  F024         	goto	l3619
  5628  004964                     u3050:
  5629  004964  0E01               	movlw	1
  5630  004966  6E11               	movwf	___aomod@counter^0,c
  5631  004968  EFC0  F024         	goto	l3609
  5632  00496C                     l3607:
  5633  00496C  90D8               	bcf	status,0,c
  5634  00496E  3609               	rlcf	___aomod@divisor^0,f,c
  5635  004970  360A               	rlcf	(___aomod@divisor+1)^0,f,c
  5636  004972  360B               	rlcf	(___aomod@divisor+2)^0,f,c
  5637  004974  360C               	rlcf	(___aomod@divisor+3)^0,f,c
  5638  004976  360D               	rlcf	(___aomod@divisor+4)^0,f,c
  5639  004978  360E               	rlcf	(___aomod@divisor+5)^0,f,c
  5640  00497A  360F               	rlcf	(___aomod@divisor+6)^0,f,c
  5641  00497C  3610               	rlcf	(___aomod@divisor+7)^0,f,c
  5642  00497E  2A11               	incf	___aomod@counter^0,f,c
  5643  004980                     l3609:
  5644  004980  AE10               	btfss	(___aomod@divisor+7)^0,7,c
  5645  004982  EFC5  F024         	goto	u3061
  5646  004986  EFC7  F024         	goto	u3060
  5647  00498A                     u3061:
  5648  00498A  EFB6  F024         	goto	l3607
  5649  00498E                     u3060:
  5650  00498E                     l3611:
  5651  00498E  5009               	movf	___aomod@divisor^0,w,c
  5652  004990  5C01               	subwf	___aomod@dividend^0,w,c
  5653  004992  500A               	movf	(___aomod@divisor+1)^0,w,c
  5654  004994  5802               	subwfb	(___aomod@dividend+1)^0,w,c
  5655  004996  500B               	movf	(___aomod@divisor+2)^0,w,c
  5656  004998  5803               	subwfb	(___aomod@dividend+2)^0,w,c
  5657  00499A  500C               	movf	(___aomod@divisor+3)^0,w,c
  5658  00499C  5804               	subwfb	(___aomod@dividend+3)^0,w,c
  5659  00499E  500D               	movf	(___aomod@divisor+4)^0,w,c
  5660  0049A0  5805               	subwfb	(___aomod@dividend+4)^0,w,c
  5661  0049A2  500E               	movf	(___aomod@divisor+5)^0,w,c
  5662  0049A4  5806               	subwfb	(___aomod@dividend+5)^0,w,c
  5663  0049A6  500F               	movf	(___aomod@divisor+6)^0,w,c
  5664  0049A8  5807               	subwfb	(___aomod@dividend+6)^0,w,c
  5665  0049AA  5010               	movf	(___aomod@divisor+7)^0,w,c
  5666  0049AC  5808               	subwfb	(___aomod@dividend+7)^0,w,c
  5667  0049AE  A0D8               	btfss	status,0,c
  5668  0049B0  EFDC  F024         	goto	u3071
  5669  0049B4  EFDE  F024         	goto	u3070
  5670  0049B8                     u3071:
  5671  0049B8  EFEE  F024         	goto	l3615
  5672  0049BC                     u3070:
  5673  0049BC  5009               	movf	___aomod@divisor^0,w,c
  5674  0049BE  5E01               	subwf	___aomod@dividend^0,f,c
  5675  0049C0  500A               	movf	(___aomod@divisor+1)^0,w,c
  5676  0049C2  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
  5677  0049C4  500B               	movf	(___aomod@divisor+2)^0,w,c
  5678  0049C6  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
  5679  0049C8  500C               	movf	(___aomod@divisor+3)^0,w,c
  5680  0049CA  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
  5681  0049CC  500D               	movf	(___aomod@divisor+4)^0,w,c
  5682  0049CE  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
  5683  0049D0  500E               	movf	(___aomod@divisor+5)^0,w,c
  5684  0049D2  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
  5685  0049D4  500F               	movf	(___aomod@divisor+6)^0,w,c
  5686  0049D6  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
  5687  0049D8  5010               	movf	(___aomod@divisor+7)^0,w,c
  5688  0049DA  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
  5689  0049DC                     l3615:
  5690  0049DC  90D8               	bcf	status,0,c
  5691  0049DE  3210               	rrcf	(___aomod@divisor+7)^0,f,c
  5692  0049E0  320F               	rrcf	(___aomod@divisor+6)^0,f,c
  5693  0049E2  320E               	rrcf	(___aomod@divisor+5)^0,f,c
  5694  0049E4  320D               	rrcf	(___aomod@divisor+4)^0,f,c
  5695  0049E6  320C               	rrcf	(___aomod@divisor+3)^0,f,c
  5696  0049E8  320B               	rrcf	(___aomod@divisor+2)^0,f,c
  5697  0049EA  320A               	rrcf	(___aomod@divisor+1)^0,f,c
  5698  0049EC  3209               	rrcf	___aomod@divisor^0,f,c
  5699  0049EE  2E11               	decfsz	___aomod@counter^0,f,c
  5700  0049F0  EFC7  F024         	goto	l3611
  5701  0049F4                     l3619:
  5702  0049F4  5012               	movf	___aomod@sign^0,w,c
  5703  0049F6  B4D8               	btfsc	status,2,c
  5704  0049F8  EF00  F025         	goto	u3081
  5705  0049FC  EF02  F025         	goto	u3080
  5706  004A00                     u3081:
  5707  004A00  EF12  F025         	goto	l3623
  5708  004A04                     u3080:
  5709  004A04  1E08               	comf	(___aomod@dividend+7)^0,f,c
  5710  004A06  1E07               	comf	(___aomod@dividend+6)^0,f,c
  5711  004A08  1E06               	comf	(___aomod@dividend+5)^0,f,c
  5712  004A0A  1E05               	comf	(___aomod@dividend+4)^0,f,c
  5713  004A0C  1E04               	comf	(___aomod@dividend+3)^0,f,c
  5714  004A0E  1E03               	comf	(___aomod@dividend+2)^0,f,c
  5715  004A10  1E02               	comf	(___aomod@dividend+1)^0,f,c
  5716  004A12  6C01               	negf	___aomod@dividend^0,c
  5717  004A14  0E00               	movlw	0
  5718  004A16  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  5719  004A18  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  5720  004A1A  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  5721  004A1C  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  5722  004A1E  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  5723  004A20  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  5724  004A22  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  5725  004A24                     l3623:
  5726  004A24  C001  F001         	movff	___aomod@dividend,?___aomod
  5727  004A28  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  5728  004A2C  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  5729  004A30  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  5730  004A34  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  5731  004A38  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  5732  004A3C  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  5733  004A40  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  5734  004A44  0012               	return		;funcret
  5735  004A46                     __end_of___aomod:
  5736                           	callstack 0
  5737                           
  5738 ;; *************** function ___aodiv *****************
  5739 ;; Defined at:
  5740 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\aodiv.c"
  5741 ;; Parameters:    Size  Location     Type
  5742 ;;  dividend        8    0[COMRAM] long long 
  5743 ;;  divisor         8    8[COMRAM] long long 
  5744 ;; Auto vars:     Size  Location     Type
  5745 ;;  quotient        8   18[COMRAM] long long 
  5746 ;;  sign            1   17[COMRAM] unsigned char 
  5747 ;;  counter         1   16[COMRAM] unsigned char 
  5748 ;; Return value:  Size  Location     Type
  5749 ;;                  8    0[COMRAM] long long 
  5750 ;; Registers used:
  5751 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5752 ;; Tracked objects:
  5753 ;;		On entry : 0/0
  5754 ;;		On exit  : 0/0
  5755 ;;		Unchanged: 0/0
  5756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5757 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5758 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5759 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5760 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5761 ;;Total ram usage:       26 bytes
  5762 ;; Hardware stack levels used: 1
  5763 ;; Hardware stack levels required when called: 1
  5764 ;; This function calls:
  5765 ;;		Nothing
  5766 ;; This function is called by:
  5767 ;;		_dtoa
  5768 ;; This function uses a non-reentrant model
  5769 ;;
  5770                           
  5771                           	psect	text21
  5772  00475A                     __ptext21:
  5773                           	callstack 0
  5774  00475A                     ___aodiv:
  5775                           	callstack 23
  5776  00475A  0E00               	movlw	0
  5777  00475C  6E12               	movwf	___aodiv@sign^0,c
  5778  00475E  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
  5779  004760  EFB6  F023         	goto	u2960
  5780  004764  EFB4  F023         	goto	u2961
  5781  004768                     u2961:
  5782  004768  EFC8  F023         	goto	l3555
  5783  00476C                     u2960:
  5784  00476C  1E10               	comf	(___aodiv@divisor+7)^0,f,c
  5785  00476E  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
  5786  004770  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
  5787  004772  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
  5788  004774  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
  5789  004776  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
  5790  004778  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
  5791  00477A  6C09               	negf	___aodiv@divisor^0,c
  5792  00477C  0E00               	movlw	0
  5793  00477E  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
  5794  004780  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
  5795  004782  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
  5796  004784  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
  5797  004786  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
  5798  004788  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
  5799  00478A  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
  5800  00478C  0E01               	movlw	1
  5801  00478E  6E12               	movwf	___aodiv@sign^0,c
  5802  004790                     l3555:
  5803  004790  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
  5804  004792  EFCF  F023         	goto	u2970
  5805  004796  EFCD  F023         	goto	u2971
  5806  00479A                     u2971:
  5807  00479A  EFE1  F023         	goto	l3561
  5808  00479E                     u2970:
  5809  00479E  1E08               	comf	(___aodiv@dividend+7)^0,f,c
  5810  0047A0  1E07               	comf	(___aodiv@dividend+6)^0,f,c
  5811  0047A2  1E06               	comf	(___aodiv@dividend+5)^0,f,c
  5812  0047A4  1E05               	comf	(___aodiv@dividend+4)^0,f,c
  5813  0047A6  1E04               	comf	(___aodiv@dividend+3)^0,f,c
  5814  0047A8  1E03               	comf	(___aodiv@dividend+2)^0,f,c
  5815  0047AA  1E02               	comf	(___aodiv@dividend+1)^0,f,c
  5816  0047AC  6C01               	negf	___aodiv@dividend^0,c
  5817  0047AE  0E00               	movlw	0
  5818  0047B0  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
  5819  0047B2  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
  5820  0047B4  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
  5821  0047B6  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
  5822  0047B8  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
  5823  0047BA  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
  5824  0047BC  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
  5825  0047BE  0E01               	movlw	1
  5826  0047C0  1A12               	xorwf	___aodiv@sign^0,f,c
  5827  0047C2                     l3561:
  5828  0047C2  EE20  F013         	lfsr	2,___aodiv@quotient
  5829  0047C6  0E07               	movlw	7
  5830  0047C8                     u2981:
  5831  0047C8  6ADE               	clrf	postinc2,c
  5832  0047CA  06E8               	decf	wreg,f,c
  5833  0047CC  E2FD               	bc	u2981
  5834  0047CE  5009               	movf	___aodiv@divisor^0,w,c
  5835  0047D0  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
  5836  0047D2  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
  5837  0047D4  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
  5838  0047D6  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
  5839  0047D8  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
  5840  0047DA  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
  5841  0047DC  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
  5842  0047DE  B4D8               	btfsc	status,2,c
  5843  0047E0  EFF4  F023         	goto	u2991
  5844  0047E4  EFF6  F023         	goto	u2990
  5845  0047E8                     u2991:
  5846  0047E8  EF48  F024         	goto	l3583
  5847  0047EC                     u2990:
  5848  0047EC  0E01               	movlw	1
  5849  0047EE  6E11               	movwf	___aodiv@counter^0,c
  5850  0047F0  EF04  F024         	goto	l3569
  5851  0047F4                     l3567:
  5852  0047F4  90D8               	bcf	status,0,c
  5853  0047F6  3609               	rlcf	___aodiv@divisor^0,f,c
  5854  0047F8  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
  5855  0047FA  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
  5856  0047FC  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
  5857  0047FE  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
  5858  004800  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
  5859  004802  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
  5860  004804  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
  5861  004806  2A11               	incf	___aodiv@counter^0,f,c
  5862  004808                     l3569:
  5863  004808  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
  5864  00480A  EF09  F024         	goto	u3001
  5865  00480E  EF0B  F024         	goto	u3000
  5866  004812                     u3001:
  5867  004812  EFFA  F023         	goto	l3567
  5868  004816                     u3000:
  5869  004816                     l3571:
  5870  004816  90D8               	bcf	status,0,c
  5871  004818  3613               	rlcf	___aodiv@quotient^0,f,c
  5872  00481A  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
  5873  00481C  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
  5874  00481E  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
  5875  004820  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
  5876  004822  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
  5877  004824  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
  5878  004826  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
  5879  004828  5009               	movf	___aodiv@divisor^0,w,c
  5880  00482A  5C01               	subwf	___aodiv@dividend^0,w,c
  5881  00482C  500A               	movf	(___aodiv@divisor+1)^0,w,c
  5882  00482E  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
  5883  004830  500B               	movf	(___aodiv@divisor+2)^0,w,c
  5884  004832  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
  5885  004834  500C               	movf	(___aodiv@divisor+3)^0,w,c
  5886  004836  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
  5887  004838  500D               	movf	(___aodiv@divisor+4)^0,w,c
  5888  00483A  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
  5889  00483C  500E               	movf	(___aodiv@divisor+5)^0,w,c
  5890  00483E  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
  5891  004840  500F               	movf	(___aodiv@divisor+6)^0,w,c
  5892  004842  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
  5893  004844  5010               	movf	(___aodiv@divisor+7)^0,w,c
  5894  004846  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
  5895  004848  A0D8               	btfss	status,0,c
  5896  00484A  EF29  F024         	goto	u3011
  5897  00484E  EF2B  F024         	goto	u3010
  5898  004852                     u3011:
  5899  004852  EF3C  F024         	goto	l3579
  5900  004856                     u3010:
  5901  004856  5009               	movf	___aodiv@divisor^0,w,c
  5902  004858  5E01               	subwf	___aodiv@dividend^0,f,c
  5903  00485A  500A               	movf	(___aodiv@divisor+1)^0,w,c
  5904  00485C  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
  5905  00485E  500B               	movf	(___aodiv@divisor+2)^0,w,c
  5906  004860  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
  5907  004862  500C               	movf	(___aodiv@divisor+3)^0,w,c
  5908  004864  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
  5909  004866  500D               	movf	(___aodiv@divisor+4)^0,w,c
  5910  004868  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
  5911  00486A  500E               	movf	(___aodiv@divisor+5)^0,w,c
  5912  00486C  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
  5913  00486E  500F               	movf	(___aodiv@divisor+6)^0,w,c
  5914  004870  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
  5915  004872  5010               	movf	(___aodiv@divisor+7)^0,w,c
  5916  004874  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
  5917  004876  8013               	bsf	___aodiv@quotient^0,0,c
  5918  004878                     l3579:
  5919  004878  90D8               	bcf	status,0,c
  5920  00487A  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
  5921  00487C  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
  5922  00487E  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
  5923  004880  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
  5924  004882  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
  5925  004884  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
  5926  004886  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
  5927  004888  3209               	rrcf	___aodiv@divisor^0,f,c
  5928  00488A  2E11               	decfsz	___aodiv@counter^0,f,c
  5929  00488C  EF0B  F024         	goto	l3571
  5930  004890                     l3583:
  5931  004890  5012               	movf	___aodiv@sign^0,w,c
  5932  004892  B4D8               	btfsc	status,2,c
  5933  004894  EF4E  F024         	goto	u3021
  5934  004898  EF50  F024         	goto	u3020
  5935  00489C                     u3021:
  5936  00489C  EF60  F024         	goto	l3587
  5937  0048A0                     u3020:
  5938  0048A0  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
  5939  0048A2  1E19               	comf	(___aodiv@quotient+6)^0,f,c
  5940  0048A4  1E18               	comf	(___aodiv@quotient+5)^0,f,c
  5941  0048A6  1E17               	comf	(___aodiv@quotient+4)^0,f,c
  5942  0048A8  1E16               	comf	(___aodiv@quotient+3)^0,f,c
  5943  0048AA  1E15               	comf	(___aodiv@quotient+2)^0,f,c
  5944  0048AC  1E14               	comf	(___aodiv@quotient+1)^0,f,c
  5945  0048AE  6C13               	negf	___aodiv@quotient^0,c
  5946  0048B0  0E00               	movlw	0
  5947  0048B2  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
  5948  0048B4  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
  5949  0048B6  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
  5950  0048B8  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
  5951  0048BA  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
  5952  0048BC  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
  5953  0048BE  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
  5954  0048C0                     l3587:
  5955  0048C0  C013  F001         	movff	___aodiv@quotient,?___aodiv
  5956  0048C4  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  5957  0048C8  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  5958  0048CC  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  5959  0048D0  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  5960  0048D4  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  5961  0048D8  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  5962  0048DC  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  5963  0048E0  0012               	return		;funcret
  5964  0048E2                     __end_of___aodiv:
  5965                           	callstack 0
  5966                           
  5967 ;; *************** function _sendStringSerial4 *****************
  5968 ;; Defined at:
  5969 ;;		line 35 in file "serial.c"
  5970 ;; Parameters:    Size  Location     Type
  5971 ;;  string          2    1[COMRAM] PTR unsigned char 
  5972 ;;		 -> color_predict@buf(100), color_display@buf(100), 
  5973 ;; Auto vars:     Size  Location     Type
  5974 ;;		None
  5975 ;; Return value:  Size  Location     Type
  5976 ;;                  1    wreg      void 
  5977 ;; Registers used:
  5978 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5979 ;; Tracked objects:
  5980 ;;		On entry : 0/0
  5981 ;;		On exit  : 0/0
  5982 ;;		Unchanged: 0/0
  5983 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5984 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5985 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5986 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5987 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5988 ;;Total ram usage:        2 bytes
  5989 ;; Hardware stack levels used: 1
  5990 ;; Hardware stack levels required when called: 2
  5991 ;; This function calls:
  5992 ;;		_sendCharSerial4
  5993 ;; This function is called by:
  5994 ;;		_color_display
  5995 ;;		_color_predict
  5996 ;; This function uses a non-reentrant model
  5997 ;;
  5998                           
  5999                           	psect	text22
  6000  005B20                     __ptext22:
  6001                           	callstack 0
  6002  005B20                     _sendStringSerial4:
  6003                           	callstack 26
  6004  005B20                     
  6005                           ;serial.c: 37:     while(*string != 0){
  6006  005B20  EF9B  F02D         	goto	l4277
  6007  005B24                     l4273:
  6008                           
  6009                           ;serial.c: 38:   sendCharSerial4(*string++);}
  6010  005B24  C002  FFD9         	movff	sendStringSerial4@string,fsr2l
  6011  005B28  C003  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  6012  005B2C  50DF               	movf	indf2,w,c
  6013  005B2E  EC89  F02E         	call	_sendCharSerial4
  6014  005B32  4A02               	infsnz	sendStringSerial4@string^0,f,c
  6015  005B34  2A03               	incf	(sendStringSerial4@string+1)^0,f,c
  6016  005B36                     l4277:
  6017                           
  6018                           ;serial.c: 37:     while(*string != 0){
  6019  005B36  C002  FFD9         	movff	sendStringSerial4@string,fsr2l
  6020  005B3A  C003  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  6021  005B3E  50DF               	movf	indf2,w,c
  6022  005B40  A4D8               	btfss	status,2,c
  6023  005B42  EFA5  F02D         	goto	u4131
  6024  005B46  EFA7  F02D         	goto	u4130
  6025  005B4A                     u4131:
  6026  005B4A  EF92  F02D         	goto	l4273
  6027  005B4E                     u4130:
  6028  005B4E  0012               	return		;funcret
  6029  005B50                     __end_of_sendStringSerial4:
  6030                           	callstack 0
  6031                           
  6032 ;; *************** function _sendCharSerial4 *****************
  6033 ;; Defined at:
  6034 ;;		line 29 in file "serial.c"
  6035 ;; Parameters:    Size  Location     Type
  6036 ;;  charToSend      1    wreg     unsigned char 
  6037 ;; Auto vars:     Size  Location     Type
  6038 ;;  charToSend      1    0[COMRAM] unsigned char 
  6039 ;; Return value:  Size  Location     Type
  6040 ;;                  1    wreg      void 
  6041 ;; Registers used:
  6042 ;;		wreg
  6043 ;; Tracked objects:
  6044 ;;		On entry : 0/0
  6045 ;;		On exit  : 0/0
  6046 ;;		Unchanged: 0/0
  6047 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6048 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6049 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6050 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6051 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6052 ;;Total ram usage:        1 bytes
  6053 ;; Hardware stack levels used: 1
  6054 ;; Hardware stack levels required when called: 1
  6055 ;; This function calls:
  6056 ;;		Nothing
  6057 ;; This function is called by:
  6058 ;;		_sendStringSerial4
  6059 ;; This function uses a non-reentrant model
  6060 ;;
  6061                           
  6062                           	psect	text23
  6063  005D12                     __ptext23:
  6064                           	callstack 0
  6065  005D12                     _sendCharSerial4:
  6066                           	callstack 26
  6067                           
  6068                           ;incstack = 0
  6069                           ;sendCharSerial4@charToSend stored from wreg
  6070  005D12  6E01               	movwf	sendCharSerial4@charToSend^0,c
  6071  005D14                     l381:
  6072  005D14  010E               	movlb	14	; () banked
  6073  005D16  A537               	btfss	55,2,b	;volatile
  6074  005D18  EF90  F02E         	goto	u3861
  6075  005D1C  EF92  F02E         	goto	u3860
  6076  005D20                     u3861:
  6077  005D20  EF8A  F02E         	goto	l381
  6078  005D24                     u3860:
  6079  005D24                     
  6080                           ; BSR set to: 14
  6081                           ;serial.c: 31:     TX4REG = charToSend;
  6082  005D24  C001  FEE4         	movff	sendCharSerial4@charToSend,3812	;volatile
  6083  005D28                     
  6084                           ; BSR set to: 14
  6085  005D28  0012               	return		;funcret
  6086  005D2A                     __end_of_sendCharSerial4:
  6087                           	callstack 0
  6088                           
  6089 ;; *************** function _calibrate_white *****************
  6090 ;; Defined at:
  6091 ;;		line 258 in file "color.c"
  6092 ;; Parameters:    Size  Location     Type
  6093 ;;  w               2   11[COMRAM] PTR struct white_card
  6094 ;;		 -> main@white(28), 
  6095 ;; Auto vars:     Size  Location     Type
  6096 ;;		None
  6097 ;; Return value:  Size  Location     Type
  6098 ;;                  1    wreg      void 
  6099 ;; Registers used:
  6100 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6101 ;; Tracked objects:
  6102 ;;		On entry : 0/0
  6103 ;;		On exit  : 0/0
  6104 ;;		Unchanged: 0/0
  6105 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6106 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6107 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6108 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6109 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6110 ;;Total ram usage:        4 bytes
  6111 ;; Hardware stack levels used: 1
  6112 ;; Hardware stack levels required when called: 4
  6113 ;; This function calls:
  6114 ;;		_LED_B
  6115 ;;		_LED_C
  6116 ;;		_LED_G
  6117 ;;		_LED_OFF
  6118 ;;		_LED_R
  6119 ;;		_color_read_Blue
  6120 ;;		_color_read_Clear
  6121 ;;		_color_read_Green
  6122 ;;		_color_read_Red
  6123 ;;		_toggle_light
  6124 ;; This function is called by:
  6125 ;;		_main
  6126 ;;		_test_function
  6127 ;; This function uses a non-reentrant model
  6128 ;;
  6129                           
  6130                           	psect	text24
  6131  00381C                     __ptext24:
  6132                           	callstack 0
  6133  00381C                     _calibrate_white:
  6134                           	callstack 25
  6135  00381C                     
  6136                           ;color.c: 258: void calibrate_white(struct white_card *w);color.c: 259: {;color.c: 260: 
      +                              LED_OFF();
  6137  00381C  EC0B  F02E         	call	_LED_OFF	;wreg free
  6138  003820                     
  6139                           ;color.c: 261:     toggle_light(1,2);
  6140  003820  0E02               	movlw	2
  6141  003822  6E01               	movwf	toggle_light@toggletime^0,c
  6142  003824  0E01               	movlw	1
  6143  003826  ECB8  F01A         	call	_toggle_light
  6144  00382A                     
  6145                           ;color.c: 262:     _delay((unsigned long)((500)*(64000000/4000.0)));
  6146  00382A  0E29               	movlw	41
  6147  00382C  6E0F               	movwf	(??_calibrate_white+1)^0,c
  6148  00382E  0E96               	movlw	150
  6149  003830  6E0E               	movwf	??_calibrate_white^0,c
  6150  003832  0E7F               	movlw	127
  6151  003834                     u5947:
  6152  003834  2EE8               	decfsz	wreg,f,c
  6153  003836  D7FE               	bra	u5947
  6154  003838  2E0E               	decfsz	??_calibrate_white^0,f,c
  6155  00383A  D7FC               	bra	u5947
  6156  00383C  2E0F               	decfsz	(??_calibrate_white+1)^0,f,c
  6157  00383E  D7FA               	bra	u5947
  6158  003840  F000               	nop	
  6159  003842                     
  6160                           ;color.c: 264:     LED_R();
  6161  003842  ECFB  F02D         	call	_LED_R	;wreg free
  6162  003846                     
  6163                           ;color.c: 265:     _delay((unsigned long)((100)*(64000000/4000.0)));
  6164  003846  0E09               	movlw	9
  6165  003848  6E0F               	movwf	(??_calibrate_white+1)^0,c
  6166  00384A  0E1E               	movlw	30
  6167  00384C  6E0E               	movwf	??_calibrate_white^0,c
  6168  00384E  0EE4               	movlw	228
  6169  003850                     u5957:
  6170  003850  2EE8               	decfsz	wreg,f,c
  6171  003852  D7FE               	bra	u5957
  6172  003854  2E0E               	decfsz	??_calibrate_white^0,f,c
  6173  003856  D7FC               	bra	u5957
  6174  003858  2E0F               	decfsz	(??_calibrate_white+1)^0,f,c
  6175  00385A  D7FA               	bra	u5957
  6176  00385C  D000               	nop2	
  6177  00385E                     
  6178                           ;color.c: 266:     w->RR = color_read_Red(); w->RG = color_read_Green(); w->RB = color_r
      +                          ead_Blue();
  6179  00385E  EC17  F02B         	call	_color_read_Red	;wreg free
  6180  003862  C00C  FFD9         	movff	calibrate_white@w,fsr2l
  6181  003866  C00D  FFDA         	movff	calibrate_white@w+1,fsr2h
  6182  00386A  C005  FFDE         	movff	?_color_read_Red,postinc2
  6183  00386E  C006  FFDD         	movff	?_color_read_Red+1,postdec2
  6184  003872  EC3F  F02B         	call	_color_read_Green	;wreg free
  6185  003876  EE20 F002          	lfsr	2,2
  6186  00387A  500C               	movf	calibrate_white@w^0,w,c
  6187  00387C  26D9               	addwf	fsr2l,f,c
  6188  00387E  500D               	movf	(calibrate_white@w+1)^0,w,c
  6189  003880  22DA               	addwfc	fsr2h,f,c
  6190  003882  C005  FFDE         	movff	?_color_read_Green,postinc2
  6191  003886  C006  FFDD         	movff	?_color_read_Green+1,postdec2
  6192  00388A  EC67  F02B         	call	_color_read_Blue	;wreg free
  6193  00388E  EE20 F004          	lfsr	2,4
  6194  003892  500C               	movf	calibrate_white@w^0,w,c
  6195  003894  26D9               	addwf	fsr2l,f,c
  6196  003896  500D               	movf	(calibrate_white@w+1)^0,w,c
  6197  003898  22DA               	addwfc	fsr2h,f,c
  6198  00389A  C005  FFDE         	movff	?_color_read_Blue,postinc2
  6199  00389E  C006  FFDD         	movff	?_color_read_Blue+1,postdec2
  6200  0038A2                     
  6201                           ;color.c: 269:     LED_G();
  6202  0038A2  EC1B  F02E         	call	_LED_G	;wreg free
  6203  0038A6                     
  6204                           ;color.c: 270:     _delay((unsigned long)((100)*(64000000/4000.0)));
  6205  0038A6  0E09               	movlw	9
  6206  0038A8  6E0F               	movwf	(??_calibrate_white+1)^0,c
  6207  0038AA  0E1E               	movlw	30
  6208  0038AC  6E0E               	movwf	??_calibrate_white^0,c
  6209  0038AE  0EE4               	movlw	228
  6210  0038B0                     u5967:
  6211  0038B0  2EE8               	decfsz	wreg,f,c
  6212  0038B2  D7FE               	bra	u5967
  6213  0038B4  2E0E               	decfsz	??_calibrate_white^0,f,c
  6214  0038B6  D7FC               	bra	u5967
  6215  0038B8  2E0F               	decfsz	(??_calibrate_white+1)^0,f,c
  6216  0038BA  D7FA               	bra	u5967
  6217  0038BC  D000               	nop2	
  6218  0038BE                     
  6219                           ;color.c: 271:     w->GR = color_read_Red(); w->GG = color_read_Green(); w->GB = color_r
      +                          ead_Blue();
  6220  0038BE  EC17  F02B         	call	_color_read_Red	;wreg free
  6221  0038C2  EE20 F006          	lfsr	2,6
  6222  0038C6  500C               	movf	calibrate_white@w^0,w,c
  6223  0038C8  26D9               	addwf	fsr2l,f,c
  6224  0038CA  500D               	movf	(calibrate_white@w+1)^0,w,c
  6225  0038CC  22DA               	addwfc	fsr2h,f,c
  6226  0038CE  C005  FFDE         	movff	?_color_read_Red,postinc2
  6227  0038D2  C006  FFDD         	movff	?_color_read_Red+1,postdec2
  6228  0038D6  EC3F  F02B         	call	_color_read_Green	;wreg free
  6229  0038DA  EE20 F008          	lfsr	2,8
  6230  0038DE  500C               	movf	calibrate_white@w^0,w,c
  6231  0038E0  26D9               	addwf	fsr2l,f,c
  6232  0038E2  500D               	movf	(calibrate_white@w+1)^0,w,c
  6233  0038E4  22DA               	addwfc	fsr2h,f,c
  6234  0038E6  C005  FFDE         	movff	?_color_read_Green,postinc2
  6235  0038EA  C006  FFDD         	movff	?_color_read_Green+1,postdec2
  6236  0038EE  EC67  F02B         	call	_color_read_Blue	;wreg free
  6237  0038F2  EE20 F00A          	lfsr	2,10
  6238  0038F6  500C               	movf	calibrate_white@w^0,w,c
  6239  0038F8  26D9               	addwf	fsr2l,f,c
  6240  0038FA  500D               	movf	(calibrate_white@w+1)^0,w,c
  6241  0038FC  22DA               	addwfc	fsr2h,f,c
  6242  0038FE  C005  FFDE         	movff	?_color_read_Blue,postinc2
  6243  003902  C006  FFDD         	movff	?_color_read_Blue+1,postdec2
  6244  003906                     
  6245                           ;color.c: 275:     LED_B();
  6246  003906  EC2B  F02E         	call	_LED_B	;wreg free
  6247  00390A                     
  6248                           ;color.c: 276:     _delay((unsigned long)((100)*(64000000/4000.0)));
  6249  00390A  0E09               	movlw	9
  6250  00390C  6E0F               	movwf	(??_calibrate_white+1)^0,c
  6251  00390E  0E1E               	movlw	30
  6252  003910  6E0E               	movwf	??_calibrate_white^0,c
  6253  003912  0EE4               	movlw	228
  6254  003914                     u5977:
  6255  003914  2EE8               	decfsz	wreg,f,c
  6256  003916  D7FE               	bra	u5977
  6257  003918  2E0E               	decfsz	??_calibrate_white^0,f,c
  6258  00391A  D7FC               	bra	u5977
  6259  00391C  2E0F               	decfsz	(??_calibrate_white+1)^0,f,c
  6260  00391E  D7FA               	bra	u5977
  6261  003920  D000               	nop2	
  6262  003922                     
  6263                           ;color.c: 277:     w->BR = color_read_Red(); w->BG = color_read_Green(); w->BB = color_r
      +                          ead_Blue(); w->BC = color_read_Clear();
  6264  003922  EC17  F02B         	call	_color_read_Red	;wreg free
  6265  003926  EE20 F00C          	lfsr	2,12
  6266  00392A  500C               	movf	calibrate_white@w^0,w,c
  6267  00392C  26D9               	addwf	fsr2l,f,c
  6268  00392E  500D               	movf	(calibrate_white@w+1)^0,w,c
  6269  003930  22DA               	addwfc	fsr2h,f,c
  6270  003932  C005  FFDE         	movff	?_color_read_Red,postinc2
  6271  003936  C006  FFDD         	movff	?_color_read_Red+1,postdec2
  6272  00393A  EC3F  F02B         	call	_color_read_Green	;wreg free
  6273  00393E  EE20 F00E          	lfsr	2,14
  6274  003942  500C               	movf	calibrate_white@w^0,w,c
  6275  003944  26D9               	addwf	fsr2l,f,c
  6276  003946  500D               	movf	(calibrate_white@w+1)^0,w,c
  6277  003948  22DA               	addwfc	fsr2h,f,c
  6278  00394A  C005  FFDE         	movff	?_color_read_Green,postinc2
  6279  00394E  C006  FFDD         	movff	?_color_read_Green+1,postdec2
  6280  003952  EC67  F02B         	call	_color_read_Blue	;wreg free
  6281  003956  EE20 F010          	lfsr	2,16
  6282  00395A  500C               	movf	calibrate_white@w^0,w,c
  6283  00395C  26D9               	addwf	fsr2l,f,c
  6284  00395E  500D               	movf	(calibrate_white@w+1)^0,w,c
  6285  003960  22DA               	addwfc	fsr2h,f,c
  6286  003962  C005  FFDE         	movff	?_color_read_Blue,postinc2
  6287  003966  C006  FFDD         	movff	?_color_read_Blue+1,postdec2
  6288  00396A  EC8F  F02B         	call	_color_read_Clear	;wreg free
  6289  00396E  EE20 F01A          	lfsr	2,26
  6290  003972  500C               	movf	calibrate_white@w^0,w,c
  6291  003974  26D9               	addwf	fsr2l,f,c
  6292  003976  500D               	movf	(calibrate_white@w+1)^0,w,c
  6293  003978  22DA               	addwfc	fsr2h,f,c
  6294  00397A  C005  FFDE         	movff	?_color_read_Clear,postinc2
  6295  00397E  C006  FFDD         	movff	?_color_read_Clear+1,postdec2
  6296  003982                     
  6297                           ;color.c: 280:     LED_C();
  6298  003982  EC3B  F02E         	call	_LED_C	;wreg free
  6299  003986                     
  6300                           ;color.c: 281:     _delay((unsigned long)((100)*(64000000/4000.0)));
  6301  003986  0E09               	movlw	9
  6302  003988  6E0F               	movwf	(??_calibrate_white+1)^0,c
  6303  00398A  0E1E               	movlw	30
  6304  00398C  6E0E               	movwf	??_calibrate_white^0,c
  6305  00398E  0EE4               	movlw	228
  6306  003990                     u5987:
  6307  003990  2EE8               	decfsz	wreg,f,c
  6308  003992  D7FE               	bra	u5987
  6309  003994  2E0E               	decfsz	??_calibrate_white^0,f,c
  6310  003996  D7FC               	bra	u5987
  6311  003998  2E0F               	decfsz	(??_calibrate_white+1)^0,f,c
  6312  00399A  D7FA               	bra	u5987
  6313  00399C  D000               	nop2	
  6314  00399E                     
  6315                           ;color.c: 282:     w->CR = color_read_Red(); w->CG = color_read_Green(); w->CB = color_r
      +                          ead_Blue(); w->CC = color_read_Clear();
  6316  00399E  EC17  F02B         	call	_color_read_Red	;wreg free
  6317  0039A2  EE20 F012          	lfsr	2,18
  6318  0039A6  500C               	movf	calibrate_white@w^0,w,c
  6319  0039A8  26D9               	addwf	fsr2l,f,c
  6320  0039AA  500D               	movf	(calibrate_white@w+1)^0,w,c
  6321  0039AC  22DA               	addwfc	fsr2h,f,c
  6322  0039AE  C005  FFDE         	movff	?_color_read_Red,postinc2
  6323  0039B2  C006  FFDD         	movff	?_color_read_Red+1,postdec2
  6324  0039B6  EC3F  F02B         	call	_color_read_Green	;wreg free
  6325  0039BA  EE20 F014          	lfsr	2,20
  6326  0039BE  500C               	movf	calibrate_white@w^0,w,c
  6327  0039C0  26D9               	addwf	fsr2l,f,c
  6328  0039C2  500D               	movf	(calibrate_white@w+1)^0,w,c
  6329  0039C4  22DA               	addwfc	fsr2h,f,c
  6330  0039C6  C005  FFDE         	movff	?_color_read_Green,postinc2
  6331  0039CA  C006  FFDD         	movff	?_color_read_Green+1,postdec2
  6332  0039CE  EC67  F02B         	call	_color_read_Blue	;wreg free
  6333  0039D2  EE20 F016          	lfsr	2,22
  6334  0039D6  500C               	movf	calibrate_white@w^0,w,c
  6335  0039D8  26D9               	addwf	fsr2l,f,c
  6336  0039DA  500D               	movf	(calibrate_white@w+1)^0,w,c
  6337  0039DC  22DA               	addwfc	fsr2h,f,c
  6338  0039DE  C005  FFDE         	movff	?_color_read_Blue,postinc2
  6339  0039E2  C006  FFDD         	movff	?_color_read_Blue+1,postdec2
  6340  0039E6  EC8F  F02B         	call	_color_read_Clear	;wreg free
  6341  0039EA  EE20 F018          	lfsr	2,24
  6342  0039EE  500C               	movf	calibrate_white@w^0,w,c
  6343  0039F0  26D9               	addwf	fsr2l,f,c
  6344  0039F2  500D               	movf	(calibrate_white@w+1)^0,w,c
  6345  0039F4  22DA               	addwfc	fsr2h,f,c
  6346  0039F6  C005  FFDE         	movff	?_color_read_Clear,postinc2
  6347  0039FA  C006  FFDD         	movff	?_color_read_Clear+1,postdec2
  6348  0039FE                     
  6349                           ;color.c: 284:     LED_OFF();
  6350  0039FE  EC0B  F02E         	call	_LED_OFF	;wreg free
  6351  003A02                     
  6352                           ;color.c: 285:     _delay((unsigned long)((500)*(64000000/4000.0)));
  6353  003A02  0E29               	movlw	41
  6354  003A04  6E0F               	movwf	(??_calibrate_white+1)^0,c
  6355  003A06  0E96               	movlw	150
  6356  003A08  6E0E               	movwf	??_calibrate_white^0,c
  6357  003A0A  0E7F               	movlw	127
  6358  003A0C                     u5997:
  6359  003A0C  2EE8               	decfsz	wreg,f,c
  6360  003A0E  D7FE               	bra	u5997
  6361  003A10  2E0E               	decfsz	??_calibrate_white^0,f,c
  6362  003A12  D7FC               	bra	u5997
  6363  003A14  2E0F               	decfsz	(??_calibrate_white+1)^0,f,c
  6364  003A16  D7FA               	bra	u5997
  6365  003A18  F000               	nop	
  6366                           
  6367                           ;color.c: 286:     toggle_light(1,2);
  6368  003A1A  0E02               	movlw	2
  6369  003A1C  6E01               	movwf	toggle_light@toggletime^0,c
  6370  003A1E  0E01               	movlw	1
  6371  003A20  ECB8  F01A         	call	_toggle_light
  6372  003A24  0012               	return		;funcret
  6373  003A26                     __end_of_calibrate_white:
  6374                           	callstack 0
  6375                           
  6376 ;; *************** function _color_read_Red *****************
  6377 ;; Defined at:
  6378 ;;		line 91 in file "color.c"
  6379 ;; Parameters:    Size  Location     Type
  6380 ;;		None
  6381 ;; Auto vars:     Size  Location     Type
  6382 ;;  tmp             2    9[COMRAM] unsigned int 
  6383 ;; Return value:  Size  Location     Type
  6384 ;;                  2    4[COMRAM] unsigned int 
  6385 ;; Registers used:
  6386 ;;		wreg, status,2, status,0, cstack
  6387 ;; Tracked objects:
  6388 ;;		On entry : 0/0
  6389 ;;		On exit  : 0/0
  6390 ;;		Unchanged: 0/0
  6391 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6392 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6393 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6394 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6395 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6396 ;;Total ram usage:        7 bytes
  6397 ;; Hardware stack levels used: 1
  6398 ;; Hardware stack levels required when called: 3
  6399 ;; This function calls:
  6400 ;;		_I2C_2_Master_Read
  6401 ;;		_I2C_2_Master_RepStart
  6402 ;;		_I2C_2_Master_Start
  6403 ;;		_I2C_2_Master_Stop
  6404 ;;		_I2C_2_Master_Write
  6405 ;; This function is called by:
  6406 ;;		_read_color
  6407 ;;		_calibrate_white
  6408 ;; This function uses a non-reentrant model
  6409 ;;
  6410                           
  6411                           	psect	text25
  6412  00562E                     __ptext25:
  6413                           	callstack 0
  6414  00562E                     _color_read_Red:
  6415                           	callstack 24
  6416  00562E                     
  6417                           ;color.c: 93:  unsigned int tmp;;color.c: 94:  I2C_2_Master_Start();
  6418  00562E  ECC0  F02E         	call	_I2C_2_Master_Start	;wreg free
  6419                           
  6420                           ;color.c: 95:  I2C_2_Master_Write(0x52 | 0x00);
  6421  005632  0E52               	movlw	82
  6422  005634  ECAA  F02E         	call	_I2C_2_Master_Write
  6423                           
  6424                           ;color.c: 96:  I2C_2_Master_Write(0xA0 | 0x16);
  6425  005638  0EB6               	movlw	182
  6426  00563A  ECAA  F02E         	call	_I2C_2_Master_Write
  6427                           
  6428                           ;color.c: 97:  I2C_2_Master_RepStart();
  6429  00563E  ECB6  F02E         	call	_I2C_2_Master_RepStart	;wreg free
  6430                           
  6431                           ;color.c: 98:  I2C_2_Master_Write(0x52 | 0x01);
  6432  005642  0E53               	movlw	83
  6433  005644  ECAA  F02E         	call	_I2C_2_Master_Write
  6434                           
  6435                           ;color.c: 99:  tmp=I2C_2_Master_Read(1);
  6436  005648  0E01               	movlw	1
  6437  00564A  EC1F  F02C         	call	_I2C_2_Master_Read
  6438  00564E  6E07               	movwf	??_color_read_Red^0,c
  6439  005650  5007               	movf	??_color_read_Red^0,w,c
  6440  005652  6E0A               	movwf	color_read_Red@tmp^0,c
  6441  005654  6A0B               	clrf	(color_read_Red@tmp+1)^0,c
  6442                           
  6443                           ;color.c: 100:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  6444  005656  0E00               	movlw	0
  6445  005658  EC1F  F02C         	call	_I2C_2_Master_Read
  6446  00565C  6E07               	movwf	??_color_read_Red^0,c
  6447  00565E  5007               	movf	??_color_read_Red^0,w,c
  6448  005660  6E09               	movwf	(??_color_read_Red+2)^0,c
  6449  005662  6A08               	clrf	(??_color_read_Red+1)^0,c
  6450  005664  500A               	movf	color_read_Red@tmp^0,w,c
  6451  005666  1008               	iorwf	(??_color_read_Red+1)^0,w,c
  6452  005668  6E0A               	movwf	color_read_Red@tmp^0,c
  6453  00566A  500B               	movf	(color_read_Red@tmp+1)^0,w,c
  6454  00566C  1009               	iorwf	(??_color_read_Red+2)^0,w,c
  6455  00566E  6E0B               	movwf	(color_read_Red@tmp+1)^0,c
  6456                           
  6457                           ;color.c: 101:  I2C_2_Master_Stop();
  6458  005670  ECBB  F02E         	call	_I2C_2_Master_Stop	;wreg free
  6459  005674                     
  6460                           ;color.c: 102:  return tmp;
  6461  005674  C00A  F005         	movff	color_read_Red@tmp,?_color_read_Red
  6462  005678  C00B  F006         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  6463  00567C  0012               	return		;funcret
  6464  00567E                     __end_of_color_read_Red:
  6465                           	callstack 0
  6466                           
  6467 ;; *************** function _color_read_Green *****************
  6468 ;; Defined at:
  6469 ;;		line 119 in file "color.c"
  6470 ;; Parameters:    Size  Location     Type
  6471 ;;		None
  6472 ;; Auto vars:     Size  Location     Type
  6473 ;;  tmp             2    9[COMRAM] unsigned int 
  6474 ;; Return value:  Size  Location     Type
  6475 ;;                  2    4[COMRAM] unsigned int 
  6476 ;; Registers used:
  6477 ;;		wreg, status,2, status,0, cstack
  6478 ;; Tracked objects:
  6479 ;;		On entry : 0/0
  6480 ;;		On exit  : 0/0
  6481 ;;		Unchanged: 0/0
  6482 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6483 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6484 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6485 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6486 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6487 ;;Total ram usage:        7 bytes
  6488 ;; Hardware stack levels used: 1
  6489 ;; Hardware stack levels required when called: 3
  6490 ;; This function calls:
  6491 ;;		_I2C_2_Master_Read
  6492 ;;		_I2C_2_Master_RepStart
  6493 ;;		_I2C_2_Master_Start
  6494 ;;		_I2C_2_Master_Stop
  6495 ;;		_I2C_2_Master_Write
  6496 ;; This function is called by:
  6497 ;;		_read_color
  6498 ;;		_calibrate_white
  6499 ;;		_distance_measure
  6500 ;; This function uses a non-reentrant model
  6501 ;;
  6502                           
  6503                           	psect	text26
  6504  00567E                     __ptext26:
  6505                           	callstack 0
  6506  00567E                     _color_read_Green:
  6507                           	callstack 24
  6508  00567E                     
  6509                           ;color.c: 121:  unsigned int tmp;;color.c: 122:  I2C_2_Master_Start();
  6510  00567E  ECC0  F02E         	call	_I2C_2_Master_Start	;wreg free
  6511                           
  6512                           ;color.c: 123:  I2C_2_Master_Write(0x52 | 0x00);
  6513  005682  0E52               	movlw	82
  6514  005684  ECAA  F02E         	call	_I2C_2_Master_Write
  6515                           
  6516                           ;color.c: 124:  I2C_2_Master_Write(0xA0 | 0x18);
  6517  005688  0EB8               	movlw	184
  6518  00568A  ECAA  F02E         	call	_I2C_2_Master_Write
  6519                           
  6520                           ;color.c: 125:  I2C_2_Master_RepStart();
  6521  00568E  ECB6  F02E         	call	_I2C_2_Master_RepStart	;wreg free
  6522                           
  6523                           ;color.c: 126:  I2C_2_Master_Write(0x52 | 0x01);
  6524  005692  0E53               	movlw	83
  6525  005694  ECAA  F02E         	call	_I2C_2_Master_Write
  6526                           
  6527                           ;color.c: 127:  tmp=I2C_2_Master_Read(1);
  6528  005698  0E01               	movlw	1
  6529  00569A  EC1F  F02C         	call	_I2C_2_Master_Read
  6530  00569E  6E07               	movwf	??_color_read_Green^0,c
  6531  0056A0  5007               	movf	??_color_read_Green^0,w,c
  6532  0056A2  6E0A               	movwf	color_read_Green@tmp^0,c
  6533  0056A4  6A0B               	clrf	(color_read_Green@tmp+1)^0,c
  6534                           
  6535                           ;color.c: 128:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  6536  0056A6  0E00               	movlw	0
  6537  0056A8  EC1F  F02C         	call	_I2C_2_Master_Read
  6538  0056AC  6E07               	movwf	??_color_read_Green^0,c
  6539  0056AE  5007               	movf	??_color_read_Green^0,w,c
  6540  0056B0  6E09               	movwf	(??_color_read_Green+2)^0,c
  6541  0056B2  6A08               	clrf	(??_color_read_Green+1)^0,c
  6542  0056B4  500A               	movf	color_read_Green@tmp^0,w,c
  6543  0056B6  1008               	iorwf	(??_color_read_Green+1)^0,w,c
  6544  0056B8  6E0A               	movwf	color_read_Green@tmp^0,c
  6545  0056BA  500B               	movf	(color_read_Green@tmp+1)^0,w,c
  6546  0056BC  1009               	iorwf	(??_color_read_Green+2)^0,w,c
  6547  0056BE  6E0B               	movwf	(color_read_Green@tmp+1)^0,c
  6548                           
  6549                           ;color.c: 129:  I2C_2_Master_Stop();
  6550  0056C0  ECBB  F02E         	call	_I2C_2_Master_Stop	;wreg free
  6551  0056C4                     
  6552                           ;color.c: 130:  return tmp;
  6553  0056C4  C00A  F005         	movff	color_read_Green@tmp,?_color_read_Green
  6554  0056C8  C00B  F006         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  6555  0056CC  0012               	return		;funcret
  6556  0056CE                     __end_of_color_read_Green:
  6557                           	callstack 0
  6558                           
  6559 ;; *************** function _color_read_Blue *****************
  6560 ;; Defined at:
  6561 ;;		line 105 in file "color.c"
  6562 ;; Parameters:    Size  Location     Type
  6563 ;;		None
  6564 ;; Auto vars:     Size  Location     Type
  6565 ;;  tmp             2    9[COMRAM] unsigned int 
  6566 ;; Return value:  Size  Location     Type
  6567 ;;                  2    4[COMRAM] unsigned int 
  6568 ;; Registers used:
  6569 ;;		wreg, status,2, status,0, cstack
  6570 ;; Tracked objects:
  6571 ;;		On entry : 0/0
  6572 ;;		On exit  : 0/0
  6573 ;;		Unchanged: 0/0
  6574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6575 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6576 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6577 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6578 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6579 ;;Total ram usage:        7 bytes
  6580 ;; Hardware stack levels used: 1
  6581 ;; Hardware stack levels required when called: 3
  6582 ;; This function calls:
  6583 ;;		_I2C_2_Master_Read
  6584 ;;		_I2C_2_Master_RepStart
  6585 ;;		_I2C_2_Master_Start
  6586 ;;		_I2C_2_Master_Stop
  6587 ;;		_I2C_2_Master_Write
  6588 ;; This function is called by:
  6589 ;;		_read_color
  6590 ;;		_calibrate_white
  6591 ;; This function uses a non-reentrant model
  6592 ;;
  6593                           
  6594                           	psect	text27
  6595  0056CE                     __ptext27:
  6596                           	callstack 0
  6597  0056CE                     _color_read_Blue:
  6598                           	callstack 24
  6599  0056CE                     
  6600                           ;color.c: 107:  unsigned int tmp;;color.c: 108:  I2C_2_Master_Start();
  6601  0056CE  ECC0  F02E         	call	_I2C_2_Master_Start	;wreg free
  6602                           
  6603                           ;color.c: 109:  I2C_2_Master_Write(0x52 | 0x00);
  6604  0056D2  0E52               	movlw	82
  6605  0056D4  ECAA  F02E         	call	_I2C_2_Master_Write
  6606                           
  6607                           ;color.c: 110:  I2C_2_Master_Write(0xA0 | 0x1A);
  6608  0056D8  0EBA               	movlw	186
  6609  0056DA  ECAA  F02E         	call	_I2C_2_Master_Write
  6610                           
  6611                           ;color.c: 111:  I2C_2_Master_RepStart();
  6612  0056DE  ECB6  F02E         	call	_I2C_2_Master_RepStart	;wreg free
  6613                           
  6614                           ;color.c: 112:  I2C_2_Master_Write(0x52 | 0x01);
  6615  0056E2  0E53               	movlw	83
  6616  0056E4  ECAA  F02E         	call	_I2C_2_Master_Write
  6617                           
  6618                           ;color.c: 113:  tmp=I2C_2_Master_Read(1);
  6619  0056E8  0E01               	movlw	1
  6620  0056EA  EC1F  F02C         	call	_I2C_2_Master_Read
  6621  0056EE  6E07               	movwf	??_color_read_Blue^0,c
  6622  0056F0  5007               	movf	??_color_read_Blue^0,w,c
  6623  0056F2  6E0A               	movwf	color_read_Blue@tmp^0,c
  6624  0056F4  6A0B               	clrf	(color_read_Blue@tmp+1)^0,c
  6625                           
  6626                           ;color.c: 114:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  6627  0056F6  0E00               	movlw	0
  6628  0056F8  EC1F  F02C         	call	_I2C_2_Master_Read
  6629  0056FC  6E07               	movwf	??_color_read_Blue^0,c
  6630  0056FE  5007               	movf	??_color_read_Blue^0,w,c
  6631  005700  6E09               	movwf	(??_color_read_Blue+2)^0,c
  6632  005702  6A08               	clrf	(??_color_read_Blue+1)^0,c
  6633  005704  500A               	movf	color_read_Blue@tmp^0,w,c
  6634  005706  1008               	iorwf	(??_color_read_Blue+1)^0,w,c
  6635  005708  6E0A               	movwf	color_read_Blue@tmp^0,c
  6636  00570A  500B               	movf	(color_read_Blue@tmp+1)^0,w,c
  6637  00570C  1009               	iorwf	(??_color_read_Blue+2)^0,w,c
  6638  00570E  6E0B               	movwf	(color_read_Blue@tmp+1)^0,c
  6639                           
  6640                           ;color.c: 115:  I2C_2_Master_Stop();
  6641  005710  ECBB  F02E         	call	_I2C_2_Master_Stop	;wreg free
  6642  005714                     
  6643                           ;color.c: 116:  return tmp;
  6644  005714  C00A  F005         	movff	color_read_Blue@tmp,?_color_read_Blue
  6645  005718  C00B  F006         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  6646  00571C  0012               	return		;funcret
  6647  00571E                     __end_of_color_read_Blue:
  6648                           	callstack 0
  6649                           
  6650 ;; *************** function _LED_R *****************
  6651 ;; Defined at:
  6652 ;;		line 164 in file "color.c"
  6653 ;; Parameters:    Size  Location     Type
  6654 ;;		None
  6655 ;; Auto vars:     Size  Location     Type
  6656 ;;		None
  6657 ;; Return value:  Size  Location     Type
  6658 ;;                  1    wreg      void 
  6659 ;; Registers used:
  6660 ;;		wreg
  6661 ;; Tracked objects:
  6662 ;;		On entry : 0/0
  6663 ;;		On exit  : 0/0
  6664 ;;		Unchanged: 0/0
  6665 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6666 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6667 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6668 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6669 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6670 ;;Total ram usage:        2 bytes
  6671 ;; Hardware stack levels used: 1
  6672 ;; Hardware stack levels required when called: 1
  6673 ;; This function calls:
  6674 ;;		Nothing
  6675 ;; This function is called by:
  6676 ;;		_color_data_collection
  6677 ;;		_calibrate_white
  6678 ;;		_detect_color
  6679 ;; This function uses a non-reentrant model
  6680 ;;
  6681                           
  6682                           	psect	text28
  6683  005BF6                     __ptext28:
  6684                           	callstack 0
  6685  005BF6                     _LED_R:
  6686                           	callstack 27
  6687  005BF6                     
  6688                           ;color.c: 166:     LATGbits.LATG1 = 1;
  6689  005BF6  827F               	bsf	127,1,c	;volatile
  6690                           
  6691                           ;color.c: 167:     LATFbits.LATF7 = 0;
  6692  005BF8  9E7E               	bcf	126,7,c	;volatile
  6693                           
  6694                           ;color.c: 168:     LATAbits.LATA4 = 0;
  6695  005BFA  9879               	bcf	121,4,c	;volatile
  6696  005BFC                     
  6697                           ;color.c: 169:     _delay((unsigned long)((200)*(64000000/4000.0)));
  6698  005BFC  0E11               	movlw	17
  6699  005BFE  6E02               	movwf	(??_LED_R+1)^0,c
  6700  005C00  0E3C               	movlw	60
  6701  005C02  6E01               	movwf	??_LED_R^0,c
  6702  005C04  0ECB               	movlw	203
  6703  005C06                     u6007:
  6704  005C06  2EE8               	decfsz	wreg,f,c
  6705  005C08  D7FE               	bra	u6007
  6706  005C0A  2E01               	decfsz	??_LED_R^0,f,c
  6707  005C0C  D7FC               	bra	u6007
  6708  005C0E  2E02               	decfsz	(??_LED_R+1)^0,f,c
  6709  005C10  D7FA               	bra	u6007
  6710  005C12  F000               	nop	
  6711  005C14  0012               	return		;funcret
  6712  005C16                     __end_of_LED_R:
  6713                           	callstack 0
  6714                           
  6715 ;; *************** function _LED_OFF *****************
  6716 ;; Defined at:
  6717 ;;		line 155 in file "color.c"
  6718 ;; Parameters:    Size  Location     Type
  6719 ;;		None
  6720 ;; Auto vars:     Size  Location     Type
  6721 ;;		None
  6722 ;; Return value:  Size  Location     Type
  6723 ;;                  1    wreg      void 
  6724 ;; Registers used:
  6725 ;;		wreg
  6726 ;; Tracked objects:
  6727 ;;		On entry : 0/0
  6728 ;;		On exit  : 0/0
  6729 ;;		Unchanged: 0/0
  6730 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6731 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6732 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6733 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6734 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6735 ;;Total ram usage:        2 bytes
  6736 ;; Hardware stack levels used: 1
  6737 ;; Hardware stack levels required when called: 1
  6738 ;; This function calls:
  6739 ;;		Nothing
  6740 ;; This function is called by:
  6741 ;;		_calibrate_white
  6742 ;;		_main
  6743 ;; This function uses a non-reentrant model
  6744 ;;
  6745                           
  6746                           	psect	text29
  6747  005C16                     __ptext29:
  6748                           	callstack 0
  6749  005C16                     _LED_OFF:
  6750                           	callstack 27
  6751  005C16                     
  6752                           ;color.c: 157:     LATGbits.LATG1 = 0;
  6753  005C16  927F               	bcf	127,1,c	;volatile
  6754                           
  6755                           ;color.c: 158:     LATFbits.LATF7 = 0;
  6756  005C18  9E7E               	bcf	126,7,c	;volatile
  6757                           
  6758                           ;color.c: 159:     LATAbits.LATA4 = 0;
  6759  005C1A  9879               	bcf	121,4,c	;volatile
  6760  005C1C                     
  6761                           ;color.c: 160:     _delay((unsigned long)((200)*(64000000/4000.0)));
  6762  005C1C  0E11               	movlw	17
  6763  005C1E  6E02               	movwf	(??_LED_OFF+1)^0,c
  6764  005C20  0E3C               	movlw	60
  6765  005C22  6E01               	movwf	??_LED_OFF^0,c
  6766  005C24  0ECB               	movlw	203
  6767  005C26                     u6017:
  6768  005C26  2EE8               	decfsz	wreg,f,c
  6769  005C28  D7FE               	bra	u6017
  6770  005C2A  2E01               	decfsz	??_LED_OFF^0,f,c
  6771  005C2C  D7FC               	bra	u6017
  6772  005C2E  2E02               	decfsz	(??_LED_OFF+1)^0,f,c
  6773  005C30  D7FA               	bra	u6017
  6774  005C32  F000               	nop	
  6775  005C34  0012               	return		;funcret
  6776  005C36                     __end_of_LED_OFF:
  6777                           	callstack 0
  6778                           
  6779 ;; *************** function _LED_G *****************
  6780 ;; Defined at:
  6781 ;;		line 191 in file "color.c"
  6782 ;; Parameters:    Size  Location     Type
  6783 ;;		None
  6784 ;; Auto vars:     Size  Location     Type
  6785 ;;		None
  6786 ;; Return value:  Size  Location     Type
  6787 ;;                  1    wreg      void 
  6788 ;; Registers used:
  6789 ;;		wreg
  6790 ;; Tracked objects:
  6791 ;;		On entry : 0/0
  6792 ;;		On exit  : 0/0
  6793 ;;		Unchanged: 0/0
  6794 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6795 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6796 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6797 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6798 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6799 ;;Total ram usage:        2 bytes
  6800 ;; Hardware stack levels used: 1
  6801 ;; Hardware stack levels required when called: 1
  6802 ;; This function calls:
  6803 ;;		Nothing
  6804 ;; This function is called by:
  6805 ;;		_color_data_collection
  6806 ;;		_calibrate_white
  6807 ;;		_detect_color
  6808 ;; This function uses a non-reentrant model
  6809 ;;
  6810                           
  6811                           	psect	text30
  6812  005C36                     __ptext30:
  6813                           	callstack 0
  6814  005C36                     _LED_G:
  6815                           	callstack 27
  6816  005C36                     
  6817                           ;color.c: 193:     LATGbits.LATG1 = 0;
  6818  005C36  927F               	bcf	127,1,c	;volatile
  6819                           
  6820                           ;color.c: 194:     LATFbits.LATF7 = 0;
  6821  005C38  9E7E               	bcf	126,7,c	;volatile
  6822                           
  6823                           ;color.c: 195:     LATAbits.LATA4 = 1;
  6824  005C3A  8879               	bsf	121,4,c	;volatile
  6825  005C3C                     
  6826                           ;color.c: 196:     _delay((unsigned long)((200)*(64000000/4000.0)));
  6827  005C3C  0E11               	movlw	17
  6828  005C3E  6E02               	movwf	(??_LED_G+1)^0,c
  6829  005C40  0E3C               	movlw	60
  6830  005C42  6E01               	movwf	??_LED_G^0,c
  6831  005C44  0ECB               	movlw	203
  6832  005C46                     u6027:
  6833  005C46  2EE8               	decfsz	wreg,f,c
  6834  005C48  D7FE               	bra	u6027
  6835  005C4A  2E01               	decfsz	??_LED_G^0,f,c
  6836  005C4C  D7FC               	bra	u6027
  6837  005C4E  2E02               	decfsz	(??_LED_G+1)^0,f,c
  6838  005C50  D7FA               	bra	u6027
  6839  005C52  F000               	nop	
  6840  005C54  0012               	return		;funcret
  6841  005C56                     __end_of_LED_G:
  6842                           	callstack 0
  6843                           
  6844 ;; *************** function _LED_B *****************
  6845 ;; Defined at:
  6846 ;;		line 182 in file "color.c"
  6847 ;; Parameters:    Size  Location     Type
  6848 ;;		None
  6849 ;; Auto vars:     Size  Location     Type
  6850 ;;		None
  6851 ;; Return value:  Size  Location     Type
  6852 ;;                  1    wreg      void 
  6853 ;; Registers used:
  6854 ;;		wreg
  6855 ;; Tracked objects:
  6856 ;;		On entry : 0/0
  6857 ;;		On exit  : 0/0
  6858 ;;		Unchanged: 0/0
  6859 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6860 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6861 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6862 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6863 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6864 ;;Total ram usage:        2 bytes
  6865 ;; Hardware stack levels used: 1
  6866 ;; Hardware stack levels required when called: 1
  6867 ;; This function calls:
  6868 ;;		Nothing
  6869 ;; This function is called by:
  6870 ;;		_color_data_collection
  6871 ;;		_calibrate_white
  6872 ;;		_detect_color
  6873 ;; This function uses a non-reentrant model
  6874 ;;
  6875                           
  6876                           	psect	text31
  6877  005C56                     __ptext31:
  6878                           	callstack 0
  6879  005C56                     _LED_B:
  6880                           	callstack 27
  6881  005C56                     
  6882                           ;color.c: 184:     LATGbits.LATG1 = 0;
  6883  005C56  927F               	bcf	127,1,c	;volatile
  6884                           
  6885                           ;color.c: 185:     LATFbits.LATF7 = 1;
  6886  005C58  8E7E               	bsf	126,7,c	;volatile
  6887                           
  6888                           ;color.c: 186:     LATAbits.LATA4 = 0;
  6889  005C5A  9879               	bcf	121,4,c	;volatile
  6890  005C5C                     
  6891                           ;color.c: 187:     _delay((unsigned long)((200)*(64000000/4000.0)));
  6892  005C5C  0E11               	movlw	17
  6893  005C5E  6E02               	movwf	(??_LED_B+1)^0,c
  6894  005C60  0E3C               	movlw	60
  6895  005C62  6E01               	movwf	??_LED_B^0,c
  6896  005C64  0ECB               	movlw	203
  6897  005C66                     u6037:
  6898  005C66  2EE8               	decfsz	wreg,f,c
  6899  005C68  D7FE               	bra	u6037
  6900  005C6A  2E01               	decfsz	??_LED_B^0,f,c
  6901  005C6C  D7FC               	bra	u6037
  6902  005C6E  2E02               	decfsz	(??_LED_B+1)^0,f,c
  6903  005C70  D7FA               	bra	u6037
  6904  005C72  F000               	nop	
  6905  005C74  0012               	return		;funcret
  6906  005C76                     __end_of_LED_B:
  6907                           	callstack 0
  6908                           
  6909 ;; *************** function _amb_light_measure *****************
  6910 ;; Defined at:
  6911 ;;		line 378 in file "color.c"
  6912 ;; Parameters:    Size  Location     Type
  6913 ;;  amb             2   10[BANK0 ] PTR struct color_rgb
  6914 ;;		 -> main@rgb(8), main@amb(8), 
  6915 ;; Auto vars:     Size  Location     Type
  6916 ;;  CC_amb_3        2   22[BANK0 ] unsigned int 
  6917 ;;  CC_amb_2        2   20[BANK0 ] unsigned int 
  6918 ;;  CC_amb_1        2   18[BANK0 ] unsigned int 
  6919 ;;  CC_amb_ave      2   16[BANK0 ] unsigned int 
  6920 ;;  upper_bound     2   14[BANK0 ] unsigned int 
  6921 ;; Return value:  Size  Location     Type
  6922 ;;                  2   10[BANK0 ] unsigned int 
  6923 ;; Registers used:
  6924 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  6925 ;; Tracked objects:
  6926 ;;		On entry : 0/0
  6927 ;;		On exit  : 0/0
  6928 ;;		Unchanged: 0/0
  6929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6930 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6931 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6932 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6933 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6934 ;;Total ram usage:       14 bytes
  6935 ;; Hardware stack levels used: 1
  6936 ;; Hardware stack levels required when called: 5
  6937 ;; This function calls:
  6938 ;;		_LED_C
  6939 ;;		___fldiv
  6940 ;;		___xxtofl
  6941 ;;		_color_read_Clear
  6942 ;;		_lroundf
  6943 ;;		_toggle_light
  6944 ;; This function is called by:
  6945 ;;		_main
  6946 ;;		_test_function
  6947 ;; This function uses a non-reentrant model
  6948 ;;
  6949                           
  6950                           	psect	text32
  6951  004A46                     __ptext32:
  6952                           	callstack 0
  6953  004A46                     _amb_light_measure:
  6954                           	callstack 24
  6955  004A46  0E00               	movlw	0
  6956  004A48  0100               	movlb	0	; () banked
  6957  004A4A  6F75               	movwf	(amb_light_measure@CC_amb_2+1)& (0+255),b
  6958  004A4C  0E00               	movlw	0
  6959  004A4E  6F74               	movwf	amb_light_measure@CC_amb_2& (0+255),b
  6960  004A50  0E00               	movlw	0
  6961  004A52  6F77               	movwf	(amb_light_measure@CC_amb_3+1)& (0+255),b
  6962  004A54  0E00               	movlw	0
  6963  004A56  6F76               	movwf	amb_light_measure@CC_amb_3& (0+255),b
  6964  004A58  0E00               	movlw	0
  6965  004A5A  6F6F               	movwf	(amb_light_measure@upper_bound+1)& (0+255),b
  6966  004A5C  0E00               	movlw	0
  6967  004A5E  6F6E               	movwf	amb_light_measure@upper_bound& (0+255),b
  6968  004A60                     
  6969                           ; BSR set to: 0
  6970                           ;color.c: 381:     toggle_light(2,2);
  6971  004A60  0E02               	movlw	2
  6972  004A62  6E01               	movwf	toggle_light@toggletime^0,c
  6973  004A64  0E02               	movlw	2
  6974  004A66  ECB8  F01A         	call	_toggle_light
  6975  004A6A                     
  6976                           ;color.c: 382:     LED_C();
  6977  004A6A  EC3B  F02E         	call	_LED_C	;wreg free
  6978  004A6E                     
  6979                           ;color.c: 383:     _delay((unsigned long)((500)*(64000000/4000.0)));
  6980  004A6E  0E29               	movlw	41
  6981  004A70  0100               	movlb	0	; () banked
  6982  004A72  6F6D               	movwf	(??_amb_light_measure+1)& (0+255),b
  6983  004A74  0E96               	movlw	150
  6984  004A76  6F6C               	movwf	??_amb_light_measure& (0+255),b
  6985  004A78  0E7F               	movlw	127
  6986  004A7A                     u6047:
  6987  004A7A  2EE8               	decfsz	wreg,f,c
  6988  004A7C  D7FE               	bra	u6047
  6989  004A7E  2F6C               	decfsz	??_amb_light_measure& (0+255),f,b
  6990  004A80  D7FC               	bra	u6047
  6991  004A82  2F6D               	decfsz	(??_amb_light_measure+1)& (0+255),f,b
  6992  004A84  D7FA               	bra	u6047
  6993  004A86                     
  6994                           ;color.c: 385:     CC_amb_1 = color_read_Clear();
  6995  004A86  EC8F  F02B         	call	_color_read_Clear	;wreg free
  6996  004A8A  C005  F072         	movff	?_color_read_Clear,amb_light_measure@CC_amb_1
  6997  004A8E  C006  F073         	movff	?_color_read_Clear+1,amb_light_measure@CC_amb_1+1
  6998  004A92                     
  6999                           ;color.c: 386:     _delay((unsigned long)((200)*(64000000/4000.0)));
  7000  004A92  0E11               	movlw	17
  7001  004A94  0100               	movlb	0	; () banked
  7002  004A96  6F6D               	movwf	(??_amb_light_measure+1)& (0+255),b
  7003  004A98  0E3C               	movlw	60
  7004  004A9A  6F6C               	movwf	??_amb_light_measure& (0+255),b
  7005  004A9C  0ECB               	movlw	203
  7006  004A9E                     u6057:
  7007  004A9E  2EE8               	decfsz	wreg,f,c
  7008  004AA0  D7FE               	bra	u6057
  7009  004AA2  2F6C               	decfsz	??_amb_light_measure& (0+255),f,b
  7010  004AA4  D7FC               	bra	u6057
  7011  004AA6  2F6D               	decfsz	(??_amb_light_measure+1)& (0+255),f,b
  7012  004AA8  D7FA               	bra	u6057
  7013  004AAA                     
  7014                           ;color.c: 388:     CC_amb_2 = color_read_Clear();
  7015  004AAA  EC8F  F02B         	call	_color_read_Clear	;wreg free
  7016  004AAE  C005  F074         	movff	?_color_read_Clear,amb_light_measure@CC_amb_2
  7017  004AB2  C006  F075         	movff	?_color_read_Clear+1,amb_light_measure@CC_amb_2+1
  7018  004AB6                     
  7019                           ;color.c: 389:     _delay((unsigned long)((200)*(64000000/4000.0)));
  7020  004AB6  0E11               	movlw	17
  7021  004AB8  0100               	movlb	0	; () banked
  7022  004ABA  6F6D               	movwf	(??_amb_light_measure+1)& (0+255),b
  7023  004ABC  0E3C               	movlw	60
  7024  004ABE  6F6C               	movwf	??_amb_light_measure& (0+255),b
  7025  004AC0  0ECB               	movlw	203
  7026  004AC2                     u6067:
  7027  004AC2  2EE8               	decfsz	wreg,f,c
  7028  004AC4  D7FE               	bra	u6067
  7029  004AC6  2F6C               	decfsz	??_amb_light_measure& (0+255),f,b
  7030  004AC8  D7FC               	bra	u6067
  7031  004ACA  2F6D               	decfsz	(??_amb_light_measure+1)& (0+255),f,b
  7032  004ACC  D7FA               	bra	u6067
  7033  004ACE                     
  7034                           ;color.c: 391:     CC_amb_3 = color_read_Clear();
  7035  004ACE  EC8F  F02B         	call	_color_read_Clear	;wreg free
  7036  004AD2  C005  F076         	movff	?_color_read_Clear,amb_light_measure@CC_amb_3
  7037  004AD6  C006  F077         	movff	?_color_read_Clear+1,amb_light_measure@CC_amb_3+1
  7038  004ADA                     
  7039                           ;color.c: 392:     _delay((unsigned long)((200)*(64000000/4000.0)));
  7040  004ADA  0E11               	movlw	17
  7041  004ADC  0100               	movlb	0	; () banked
  7042  004ADE  6F6D               	movwf	(??_amb_light_measure+1)& (0+255),b
  7043  004AE0  0E3C               	movlw	60
  7044  004AE2  6F6C               	movwf	??_amb_light_measure& (0+255),b
  7045  004AE4  0ECB               	movlw	203
  7046  004AE6                     u6077:
  7047  004AE6  2EE8               	decfsz	wreg,f,c
  7048  004AE8  D7FE               	bra	u6077
  7049  004AEA  2F6C               	decfsz	??_amb_light_measure& (0+255),f,b
  7050  004AEC  D7FC               	bra	u6077
  7051  004AEE  2F6D               	decfsz	(??_amb_light_measure+1)& (0+255),f,b
  7052  004AF0  D7FA               	bra	u6077
  7053  004AF2                     
  7054                           ;color.c: 394:     CC_amb_ave = lroundf((float)(CC_amb_1 + CC_amb_2 + CC_amb_3)/3);
  7055  004AF2  0100               	movlb	0	; () banked
  7056  004AF4  5174               	movf	amb_light_measure@CC_amb_2& (0+255),w,b
  7057  004AF6  2572               	addwf	amb_light_measure@CC_amb_1& (0+255),w,b
  7058  004AF8  6F6C               	movwf	??_amb_light_measure& (0+255),b
  7059  004AFA  5175               	movf	(amb_light_measure@CC_amb_2+1)& (0+255),w,b
  7060  004AFC  2173               	addwfc	(amb_light_measure@CC_amb_1+1)& (0+255),w,b
  7061  004AFE  6F6D               	movwf	(??_amb_light_measure+1)& (0+255),b
  7062  004B00  5176               	movf	amb_light_measure@CC_amb_3& (0+255),w,b
  7063  004B02  276C               	addwf	??_amb_light_measure& (0+255),f,b
  7064  004B04  5177               	movf	(amb_light_measure@CC_amb_3+1)& (0+255),w,b
  7065  004B06  236D               	addwfc	(??_amb_light_measure+1)& (0+255),f,b
  7066  004B08  C06C  F001         	movff	??_amb_light_measure,___xxtofl@val
  7067  004B0C  C06D  F002         	movff	??_amb_light_measure+1,___xxtofl@val+1
  7068  004B10  6A03               	clrf	(___xxtofl@val+2)^0,c
  7069  004B12  6A04               	clrf	(___xxtofl@val+3)^0,c
  7070  004B14  0E00               	movlw	0
  7071  004B16  ECB5  F01F         	call	___xxtofl
  7072  004B1A  C001  F00F         	movff	?___xxtofl,___fldiv@b
  7073  004B1E  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  7074  004B22  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  7075  004B26  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  7076  004B2A  0E00               	movlw	0
  7077  004B2C  6E13               	movwf	___fldiv@a^0,c
  7078  004B2E  0E00               	movlw	0
  7079  004B30  6E14               	movwf	(___fldiv@a+1)^0,c
  7080  004B32  0E40               	movlw	64
  7081  004B34  6E15               	movwf	(___fldiv@a+2)^0,c
  7082  004B36  0E40               	movlw	64
  7083  004B38  6E16               	movwf	(___fldiv@a+3)^0,c
  7084  004B3A  EC58  F013         	call	___fldiv	;wreg free
  7085  004B3E  C00F  F066         	movff	?___fldiv,lroundf@x
  7086  004B42  C010  F067         	movff	?___fldiv+1,lroundf@x+1
  7087  004B46  C011  F068         	movff	?___fldiv+2,lroundf@x+2
  7088  004B4A  C012  F069         	movff	?___fldiv+3,lroundf@x+3
  7089  004B4E  EC22  F02D         	call	_lroundf	;wreg free
  7090  004B52  C066  F070         	movff	?_lroundf,amb_light_measure@CC_amb_ave
  7091  004B56  C067  F071         	movff	?_lroundf+1,amb_light_measure@CC_amb_ave+1
  7092  004B5A                     
  7093                           ;color.c: 396:     toggle_light(2,2);
  7094  004B5A  0E02               	movlw	2
  7095  004B5C  6E01               	movwf	toggle_light@toggletime^0,c
  7096  004B5E  0E02               	movlw	2
  7097  004B60  ECB8  F01A         	call	_toggle_light
  7098  004B64                     
  7099                           ;color.c: 398:     return CC_amb_ave;
  7100  004B64  C070  F06A         	movff	amb_light_measure@CC_amb_ave,?_amb_light_measure
  7101  004B68  C071  F06B         	movff	amb_light_measure@CC_amb_ave+1,?_amb_light_measure+1
  7102  004B6C  0012               	return		;funcret
  7103  004B6E                     __end_of_amb_light_measure:
  7104                           	callstack 0
  7105                           
  7106 ;; *************** function _lroundf *****************
  7107 ;; Defined at:
  7108 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\lroundf.c"
  7109 ;; Parameters:    Size  Location     Type
  7110 ;;  x               4    6[BANK0 ] float 
  7111 ;; Auto vars:     Size  Location     Type
  7112 ;;		None
  7113 ;; Return value:  Size  Location     Type
  7114 ;;                  4    6[BANK0 ] long 
  7115 ;; Registers used:
  7116 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  7117 ;; Tracked objects:
  7118 ;;		On entry : 0/0
  7119 ;;		On exit  : 0/0
  7120 ;;		Unchanged: 0/0
  7121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7122 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7123 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7124 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7125 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7126 ;;Total ram usage:        4 bytes
  7127 ;; Hardware stack levels used: 1
  7128 ;; Hardware stack levels required when called: 4
  7129 ;; This function calls:
  7130 ;;		___fltol
  7131 ;;		_roundf
  7132 ;; This function is called by:
  7133 ;;		_detect_color
  7134 ;;		_amb_light_measure
  7135 ;;		_distance_measure
  7136 ;;		_check_color_reading
  7137 ;; This function uses a non-reentrant model
  7138 ;;
  7139                           
  7140                           	psect	text33
  7141  005A44                     __ptext33:
  7142                           	callstack 0
  7143  005A44                     _lroundf:
  7144                           	callstack 24
  7145  005A44  C066  F041         	movff	lroundf@x,roundf@x
  7146  005A48  C067  F042         	movff	lroundf@x+1,roundf@x+1
  7147  005A4C  C068  F043         	movff	lroundf@x+2,roundf@x+2
  7148  005A50  C069  F044         	movff	lroundf@x+3,roundf@x+3
  7149  005A54  EC81  F011         	call	_roundf	;wreg free
  7150  005A58  C041  F05B         	movff	?_roundf,___fltol@f1
  7151  005A5C  C042  F05C         	movff	?_roundf+1,___fltol@f1+1
  7152  005A60  C043  F05D         	movff	?_roundf+2,___fltol@f1+2
  7153  005A64  C044  F05E         	movff	?_roundf+3,___fltol@f1+3
  7154  005A68  ECB7  F025         	call	___fltol	;wreg free
  7155  005A6C  C05B  F066         	movff	?___fltol,?_lroundf
  7156  005A70  C05C  F067         	movff	?___fltol+1,?_lroundf+1
  7157  005A74  C05D  F068         	movff	?___fltol+2,?_lroundf+2
  7158  005A78  C05E  F069         	movff	?___fltol+3,?_lroundf+3
  7159  005A7C  0012               	return		;funcret
  7160  005A7E                     __end_of_lroundf:
  7161                           	callstack 0
  7162                           
  7163 ;; *************** function _roundf *****************
  7164 ;; Defined at:
  7165 ;;		line 12 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\roundf.c"
  7166 ;; Parameters:    Size  Location     Type
  7167 ;;  x               4   64[COMRAM] float 
  7168 ;; Auto vars:     Size  Location     Type
  7169 ;;  y               4   86[COMRAM] float 
  7170 ;;  u               4   82[COMRAM] struct .
  7171 ;;  e               2   76[COMRAM] int 
  7172 ;; Return value:  Size  Location     Type
  7173 ;;                  4   64[COMRAM] float 
  7174 ;; Registers used:
  7175 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  7176 ;; Tracked objects:
  7177 ;;		On entry : 0/0
  7178 ;;		On exit  : 0/0
  7179 ;;		Unchanged: 0/0
  7180 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7181 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7182 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7183 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7184 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7185 ;;Total ram usage:       26 bytes
  7186 ;; Hardware stack levels used: 1
  7187 ;; Hardware stack levels required when called: 3
  7188 ;; This function calls:
  7189 ;;		___fladd
  7190 ;;		___flge
  7191 ;;		___flmul
  7192 ;;		___flneg
  7193 ;;		___flsub
  7194 ;; This function is called by:
  7195 ;;		_lroundf
  7196 ;; This function uses a non-reentrant model
  7197 ;;
  7198                           
  7199                           	psect	text34
  7200  002302                     __ptext34:
  7201                           	callstack 0
  7202  002302                     _roundf:
  7203                           	callstack 24
  7204  002302  C13A  F053         	movff	roundf@F527,roundf@u
  7205  002306  C13B  F054         	movff	roundf@F527+1,roundf@u+1
  7206  00230A  C13C  F055         	movff	roundf@F527+2,roundf@u+2
  7207  00230E  C13D  F056         	movff	roundf@F527+3,roundf@u+3
  7208  002312  C041  F053         	movff	roundf@x,roundf@u
  7209  002316  C042  F054         	movff	roundf@x+1,roundf@u+1
  7210  00231A  C043  F055         	movff	roundf@x+2,roundf@u+2
  7211  00231E  C044  F056         	movff	roundf@x+3,roundf@u+3
  7212  002322  C053  F045         	movff	roundf@u,??_roundf
  7213  002326  C054  F046         	movff	roundf@u+1,??_roundf+1
  7214  00232A  C055  F047         	movff	roundf@u+2,??_roundf+2
  7215  00232E  C056  F048         	movff	roundf@u+3,??_roundf+3
  7216  002332  0E18               	movlw	24
  7217  002334  EFA1  F011         	goto	u4290
  7218  002338                     u4295:
  7219  002338  90D8               	bcf	status,0,c
  7220  00233A  3248               	rrcf	(??_roundf+3)^0,f,c
  7221  00233C  3247               	rrcf	(??_roundf+2)^0,f,c
  7222  00233E  3246               	rrcf	(??_roundf+1)^0,f,c
  7223  002340  3245               	rrcf	??_roundf^0,f,c
  7224  002342                     u4290:
  7225  002342  2EE8               	decfsz	wreg,f,c
  7226  002344  EF9C  F011         	goto	u4295
  7227  002348  5045               	movf	??_roundf^0,w,c
  7228  00234A  6E4D               	movwf	roundf@e^0,c
  7229  00234C  6A4E               	clrf	(roundf@e+1)^0,c
  7230  00234E  BE4E               	btfsc	(roundf@e+1)^0,7,c
  7231  002350  EFB3  F011         	goto	u4301
  7232  002354  504E               	movf	(roundf@e+1)^0,w,c
  7233  002356  E109               	bnz	u4300
  7234  002358  0E96               	movlw	150
  7235  00235A  5C4D               	subwf	roundf@e^0,w,c
  7236  00235C  A0D8               	btfss	status,0,c
  7237  00235E  EFB3  F011         	goto	u4301
  7238  002362  EFB5  F011         	goto	u4300
  7239  002366                     u4301:
  7240  002366  EFBF  F011         	goto	l4379
  7241  00236A                     u4300:
  7242  00236A  C041  F041         	movff	roundf@x,?_roundf
  7243  00236E  C042  F042         	movff	roundf@x+1,?_roundf+1
  7244  002372  C043  F043         	movff	roundf@x+2,?_roundf+2
  7245  002376  C044  F044         	movff	roundf@x+3,?_roundf+3
  7246  00237A  EF57  F013         	goto	l1512
  7247  00237E                     l4379:
  7248  00237E  C053  F045         	movff	roundf@u,??_roundf
  7249  002382  C054  F046         	movff	roundf@u+1,??_roundf+1
  7250  002386  C055  F047         	movff	roundf@u+2,??_roundf+2
  7251  00238A  C056  F048         	movff	roundf@u+3,??_roundf+3
  7252  00238E  0E20               	movlw	32
  7253  002390  EFCF  F011         	goto	u4310
  7254  002394                     u4315:
  7255  002394  90D8               	bcf	status,0,c
  7256  002396  3248               	rrcf	(??_roundf+3)^0,f,c
  7257  002398  3247               	rrcf	(??_roundf+2)^0,f,c
  7258  00239A  3246               	rrcf	(??_roundf+1)^0,f,c
  7259  00239C  3245               	rrcf	??_roundf^0,f,c
  7260  00239E                     u4310:
  7261  00239E  2EE8               	decfsz	wreg,f,c
  7262  0023A0  EFCA  F011         	goto	u4315
  7263  0023A4  5045               	movf	??_roundf^0,w,c
  7264  0023A6  1046               	iorwf	(??_roundf+1)^0,w,c
  7265  0023A8  1047               	iorwf	(??_roundf+2)^0,w,c
  7266  0023AA  1048               	iorwf	(??_roundf+3)^0,w,c
  7267  0023AC  B4D8               	btfsc	status,2,c
  7268  0023AE  EFDB  F011         	goto	u4321
  7269  0023B2  EFDD  F011         	goto	u4320
  7270  0023B6                     u4321:
  7271  0023B6  EFEF  F011         	goto	l4383
  7272  0023BA                     u4320:
  7273  0023BA  C041  F001         	movff	roundf@x,___flneg@f1
  7274  0023BE  C042  F002         	movff	roundf@x+1,___flneg@f1+1
  7275  0023C2  C043  F003         	movff	roundf@x+2,___flneg@f1+2
  7276  0023C6  C044  F004         	movff	roundf@x+3,___flneg@f1+3
  7277  0023CA  EC3F  F02D         	call	___flneg	;wreg free
  7278  0023CE  C001  F041         	movff	?___flneg,roundf@x
  7279  0023D2  C002  F042         	movff	?___flneg+1,roundf@x+1
  7280  0023D6  C003  F043         	movff	?___flneg+2,roundf@x+2
  7281  0023DA  C004  F044         	movff	?___flneg+3,roundf@x+3
  7282  0023DE                     l4383:
  7283  0023DE  BE4E               	btfsc	(roundf@e+1)^0,7,c
  7284  0023E0  EFFD  F011         	goto	u4330
  7285  0023E4  504E               	movf	(roundf@e+1)^0,w,c
  7286  0023E6  E107               	bnz	u4331
  7287  0023E8  0E7E               	movlw	126
  7288  0023EA  5C4D               	subwf	roundf@e^0,w,c
  7289  0023EC  B0D8               	btfsc	status,0,c
  7290  0023EE  EFFB  F011         	goto	u4331
  7291  0023F2  EFFD  F011         	goto	u4330
  7292  0023F6                     u4331:
  7293  0023F6  EF19  F012         	goto	l4389
  7294  0023FA                     u4330:
  7295  0023FA  C053  F028         	movff	roundf@u,___flmul@b
  7296  0023FE  C054  F029         	movff	roundf@u+1,___flmul@b+1
  7297  002402  C055  F02A         	movff	roundf@u+2,___flmul@b+2
  7298  002406  C056  F02B         	movff	roundf@u+3,___flmul@b+3
  7299  00240A  0E00               	movlw	0
  7300  00240C  6E2C               	movwf	___flmul@a^0,c
  7301  00240E  0E00               	movlw	0
  7302  002410  6E2D               	movwf	(___flmul@a+1)^0,c
  7303  002412  0E00               	movlw	0
  7304  002414  6E2E               	movwf	(___flmul@a+2)^0,c
  7305  002416  0E00               	movlw	0
  7306  002418  6E2F               	movwf	(___flmul@a+3)^0,c
  7307  00241A  EC6C  F00F         	call	___flmul	;wreg free
  7308  00241E  C028  F041         	movff	?___flmul,?_roundf
  7309  002422  C029  F042         	movff	?___flmul+1,?_roundf+1
  7310  002426  C02A  F043         	movff	?___flmul+2,?_roundf+2
  7311  00242A  C02B  F044         	movff	?___flmul+3,?_roundf+3
  7312  00242E  EF57  F013         	goto	l1512
  7313  002432                     l4389:
  7314  002432  0E00               	movlw	0
  7315  002434  6E05               	movwf	___fladd@a^0,c
  7316  002436  0E00               	movlw	0
  7317  002438  6E06               	movwf	(___fladd@a+1)^0,c
  7318  00243A  0E00               	movlw	0
  7319  00243C  6E07               	movwf	(___fladd@a+2)^0,c
  7320  00243E  0E4B               	movlw	75
  7321  002440  6E08               	movwf	(___fladd@a+3)^0,c
  7322  002442  C041  F001         	movff	roundf@x,___fladd@b
  7323  002446  C042  F002         	movff	roundf@x+1,___fladd@b+1
  7324  00244A  C043  F003         	movff	roundf@x+2,___fladd@b+2
  7325  00244E  C044  F004         	movff	roundf@x+3,___fladd@b+3
  7326  002452  EC0C  F00D         	call	___fladd	;wreg free
  7327  002456  C001  F04F         	movff	?___fladd,_roundf$3254
  7328  00245A  C002  F050         	movff	?___fladd+1,_roundf$3254+1
  7329  00245E  C003  F051         	movff	?___fladd+2,_roundf$3254+2
  7330  002462  C004  F052         	movff	?___fladd+3,_roundf$3254+3
  7331  002466  0E00               	movlw	0
  7332  002468  6E05               	movwf	___fladd@a^0,c
  7333  00246A  0E00               	movlw	0
  7334  00246C  6E06               	movwf	(___fladd@a+1)^0,c
  7335  00246E  0E00               	movlw	0
  7336  002470  6E07               	movwf	(___fladd@a+2)^0,c
  7337  002472  0ECB               	movlw	203
  7338  002474  6E08               	movwf	(___fladd@a+3)^0,c
  7339  002476  C04F  F001         	movff	_roundf$3254,___fladd@b
  7340  00247A  C050  F002         	movff	_roundf$3254+1,___fladd@b+1
  7341  00247E  C051  F003         	movff	_roundf$3254+2,___fladd@b+2
  7342  002482  C052  F004         	movff	_roundf$3254+3,___fladd@b+3
  7343  002486  EC0C  F00D         	call	___fladd	;wreg free
  7344  00248A  C001  F049         	movff	?___fladd,_roundf$3255
  7345  00248E  C002  F04A         	movff	?___fladd+1,_roundf$3255+1
  7346  002492  C003  F04B         	movff	?___fladd+2,_roundf$3255+2
  7347  002496  C004  F04C         	movff	?___fladd+3,_roundf$3255+3
  7348  00249A  C049  F011         	movff	_roundf$3255,___flsub@b
  7349  00249E  C04A  F012         	movff	_roundf$3255+1,___flsub@b+1
  7350  0024A2  C04B  F013         	movff	_roundf$3255+2,___flsub@b+2
  7351  0024A6  C04C  F014         	movff	_roundf$3255+3,___flsub@b+3
  7352  0024AA  C041  F015         	movff	roundf@x,___flsub@a
  7353  0024AE  C042  F016         	movff	roundf@x+1,___flsub@a+1
  7354  0024B2  C043  F017         	movff	roundf@x+2,___flsub@a+2
  7355  0024B6  C044  F018         	movff	roundf@x+3,___flsub@a+3
  7356  0024BA  ECDA  F02B         	call	___flsub	;wreg free
  7357  0024BE  C011  F057         	movff	?___flsub,roundf@y
  7358  0024C2  C012  F058         	movff	?___flsub+1,roundf@y+1
  7359  0024C6  C013  F059         	movff	?___flsub+2,roundf@y+2
  7360  0024CA  C014  F05A         	movff	?___flsub+3,roundf@y+3
  7361  0024CE  0E00               	movlw	0
  7362  0024D0  6E01               	movwf	___flge@ff1^0,c
  7363  0024D2  0E00               	movlw	0
  7364  0024D4  6E02               	movwf	(___flge@ff1+1)^0,c
  7365  0024D6  0E00               	movlw	0
  7366  0024D8  6E03               	movwf	(___flge@ff1+2)^0,c
  7367  0024DA  0E3F               	movlw	63
  7368  0024DC  6E04               	movwf	(___flge@ff1+3)^0,c
  7369  0024DE  C057  F005         	movff	roundf@y,___flge@ff2
  7370  0024E2  C058  F006         	movff	roundf@y+1,___flge@ff2+1
  7371  0024E6  C059  F007         	movff	roundf@y+2,___flge@ff2+2
  7372  0024EA  C05A  F008         	movff	roundf@y+3,___flge@ff2+3
  7373  0024EE  EC3B  F026         	call	___flge	;wreg free
  7374  0024F2  B0D8               	btfsc	status,0,c
  7375  0024F4  EF7E  F012         	goto	u4341
  7376  0024F8  EF80  F012         	goto	u4340
  7377  0024FC                     u4341:
  7378  0024FC  EFB6  F012         	goto	l4393
  7379  002500                     u4340:
  7380  002500  C041  F005         	movff	roundf@x,___fladd@a
  7381  002504  C042  F006         	movff	roundf@x+1,___fladd@a+1
  7382  002508  C043  F007         	movff	roundf@x+2,___fladd@a+2
  7383  00250C  C044  F008         	movff	roundf@x+3,___fladd@a+3
  7384  002510  C057  F001         	movff	roundf@y,___fladd@b
  7385  002514  C058  F002         	movff	roundf@y+1,___fladd@b+1
  7386  002518  C059  F003         	movff	roundf@y+2,___fladd@b+2
  7387  00251C  C05A  F004         	movff	roundf@y+3,___fladd@b+3
  7388  002520  EC0C  F00D         	call	___fladd	;wreg free
  7389  002524  C001  F04F         	movff	?___fladd,_roundf$3254
  7390  002528  C002  F050         	movff	?___fladd+1,_roundf$3254+1
  7391  00252C  C003  F051         	movff	?___fladd+2,_roundf$3254+2
  7392  002530  C004  F052         	movff	?___fladd+3,_roundf$3254+3
  7393  002534  C04F  F001         	movff	_roundf$3254,___fladd@b
  7394  002538  C050  F002         	movff	_roundf$3254+1,___fladd@b+1
  7395  00253C  C051  F003         	movff	_roundf$3254+2,___fladd@b+2
  7396  002540  C052  F004         	movff	_roundf$3254+3,___fladd@b+3
  7397  002544  0E00               	movlw	0
  7398  002546  6E05               	movwf	___fladd@a^0,c
  7399  002548  0E00               	movlw	0
  7400  00254A  6E06               	movwf	(___fladd@a+1)^0,c
  7401  00254C  0E80               	movlw	128
  7402  00254E  6E07               	movwf	(___fladd@a+2)^0,c
  7403  002550  0EBF               	movlw	191
  7404  002552  6E08               	movwf	(___fladd@a+3)^0,c
  7405  002554  EC0C  F00D         	call	___fladd	;wreg free
  7406  002558  C001  F057         	movff	?___fladd,roundf@y
  7407  00255C  C002  F058         	movff	?___fladd+1,roundf@y+1
  7408  002560  C003  F059         	movff	?___fladd+2,roundf@y+2
  7409  002564  C004  F05A         	movff	?___fladd+3,roundf@y+3
  7410  002568  EF1F  F013         	goto	l4399
  7411  00256C                     l4393:
  7412  00256C  0E00               	movlw	0
  7413  00256E  6E01               	movwf	___flge@ff1^0,c
  7414  002570  0E00               	movlw	0
  7415  002572  6E02               	movwf	(___flge@ff1+1)^0,c
  7416  002574  0E00               	movlw	0
  7417  002576  6E03               	movwf	(___flge@ff1+2)^0,c
  7418  002578  0EBF               	movlw	191
  7419  00257A  6E04               	movwf	(___flge@ff1+3)^0,c
  7420  00257C  C057  F005         	movff	roundf@y,___flge@ff2
  7421  002580  C058  F006         	movff	roundf@y+1,___flge@ff2+1
  7422  002584  C059  F007         	movff	roundf@y+2,___flge@ff2+2
  7423  002588  C05A  F008         	movff	roundf@y+3,___flge@ff2+3
  7424  00258C  EC3B  F026         	call	___flge	;wreg free
  7425  002590  A0D8               	btfss	status,0,c
  7426  002592  EFCD  F012         	goto	u4351
  7427  002596  EFCF  F012         	goto	u4350
  7428  00259A                     u4351:
  7429  00259A  EF05  F013         	goto	l4397
  7430  00259E                     u4350:
  7431  00259E  C041  F005         	movff	roundf@x,___fladd@a
  7432  0025A2  C042  F006         	movff	roundf@x+1,___fladd@a+1
  7433  0025A6  C043  F007         	movff	roundf@x+2,___fladd@a+2
  7434  0025AA  C044  F008         	movff	roundf@x+3,___fladd@a+3
  7435  0025AE  C057  F001         	movff	roundf@y,___fladd@b
  7436  0025B2  C058  F002         	movff	roundf@y+1,___fladd@b+1
  7437  0025B6  C059  F003         	movff	roundf@y+2,___fladd@b+2
  7438  0025BA  C05A  F004         	movff	roundf@y+3,___fladd@b+3
  7439  0025BE  EC0C  F00D         	call	___fladd	;wreg free
  7440  0025C2  C001  F04F         	movff	?___fladd,_roundf$3254
  7441  0025C6  C002  F050         	movff	?___fladd+1,_roundf$3254+1
  7442  0025CA  C003  F051         	movff	?___fladd+2,_roundf$3254+2
  7443  0025CE  C004  F052         	movff	?___fladd+3,_roundf$3254+3
  7444  0025D2  C04F  F001         	movff	_roundf$3254,___fladd@b
  7445  0025D6  C050  F002         	movff	_roundf$3254+1,___fladd@b+1
  7446  0025DA  C051  F003         	movff	_roundf$3254+2,___fladd@b+2
  7447  0025DE  C052  F004         	movff	_roundf$3254+3,___fladd@b+3
  7448  0025E2  0E00               	movlw	0
  7449  0025E4  6E05               	movwf	___fladd@a^0,c
  7450  0025E6  0E00               	movlw	0
  7451  0025E8  6E06               	movwf	(___fladd@a+1)^0,c
  7452  0025EA  0E80               	movlw	128
  7453  0025EC  6E07               	movwf	(___fladd@a+2)^0,c
  7454  0025EE  0E3F               	movlw	63
  7455  0025F0  6E08               	movwf	(___fladd@a+3)^0,c
  7456  0025F2  EC0C  F00D         	call	___fladd	;wreg free
  7457  0025F6  C001  F057         	movff	?___fladd,roundf@y
  7458  0025FA  C002  F058         	movff	?___fladd+1,roundf@y+1
  7459  0025FE  C003  F059         	movff	?___fladd+2,roundf@y+2
  7460  002602  C004  F05A         	movff	?___fladd+3,roundf@y+3
  7461  002606  EF1F  F013         	goto	l4399
  7462  00260A                     l4397:
  7463  00260A  C057  F001         	movff	roundf@y,___fladd@b
  7464  00260E  C058  F002         	movff	roundf@y+1,___fladd@b+1
  7465  002612  C059  F003         	movff	roundf@y+2,___fladd@b+2
  7466  002616  C05A  F004         	movff	roundf@y+3,___fladd@b+3
  7467  00261A  C041  F005         	movff	roundf@x,___fladd@a
  7468  00261E  C042  F006         	movff	roundf@x+1,___fladd@a+1
  7469  002622  C043  F007         	movff	roundf@x+2,___fladd@a+2
  7470  002626  C044  F008         	movff	roundf@x+3,___fladd@a+3
  7471  00262A  EC0C  F00D         	call	___fladd	;wreg free
  7472  00262E  C001  F057         	movff	?___fladd,roundf@y
  7473  002632  C002  F058         	movff	?___fladd+1,roundf@y+1
  7474  002636  C003  F059         	movff	?___fladd+2,roundf@y+2
  7475  00263A  C004  F05A         	movff	?___fladd+3,roundf@y+3
  7476  00263E                     l4399:
  7477  00263E  C053  F045         	movff	roundf@u,??_roundf
  7478  002642  C054  F046         	movff	roundf@u+1,??_roundf+1
  7479  002646  C055  F047         	movff	roundf@u+2,??_roundf+2
  7480  00264A  C056  F048         	movff	roundf@u+3,??_roundf+3
  7481  00264E  0E20               	movlw	32
  7482  002650  EF2F  F013         	goto	u4360
  7483  002654                     u4365:
  7484  002654  90D8               	bcf	status,0,c
  7485  002656  3248               	rrcf	(??_roundf+3)^0,f,c
  7486  002658  3247               	rrcf	(??_roundf+2)^0,f,c
  7487  00265A  3246               	rrcf	(??_roundf+1)^0,f,c
  7488  00265C  3245               	rrcf	??_roundf^0,f,c
  7489  00265E                     u4360:
  7490  00265E  2EE8               	decfsz	wreg,f,c
  7491  002660  EF2A  F013         	goto	u4365
  7492  002664  5045               	movf	??_roundf^0,w,c
  7493  002666  1046               	iorwf	(??_roundf+1)^0,w,c
  7494  002668  1047               	iorwf	(??_roundf+2)^0,w,c
  7495  00266A  1048               	iorwf	(??_roundf+3)^0,w,c
  7496  00266C  B4D8               	btfsc	status,2,c
  7497  00266E  EF3B  F013         	goto	u4371
  7498  002672  EF3D  F013         	goto	u4370
  7499  002676                     u4371:
  7500  002676  EF4F  F013         	goto	l4403
  7501  00267A                     u4370:
  7502  00267A  C057  F001         	movff	roundf@y,___flneg@f1
  7503  00267E  C058  F002         	movff	roundf@y+1,___flneg@f1+1
  7504  002682  C059  F003         	movff	roundf@y+2,___flneg@f1+2
  7505  002686  C05A  F004         	movff	roundf@y+3,___flneg@f1+3
  7506  00268A  EC3F  F02D         	call	___flneg	;wreg free
  7507  00268E  C001  F057         	movff	?___flneg,roundf@y
  7508  002692  C002  F058         	movff	?___flneg+1,roundf@y+1
  7509  002696  C003  F059         	movff	?___flneg+2,roundf@y+2
  7510  00269A  C004  F05A         	movff	?___flneg+3,roundf@y+3
  7511  00269E                     l4403:
  7512  00269E  C057  F041         	movff	roundf@y,?_roundf
  7513  0026A2  C058  F042         	movff	roundf@y+1,?_roundf+1
  7514  0026A6  C059  F043         	movff	roundf@y+2,?_roundf+2
  7515  0026AA  C05A  F044         	movff	roundf@y+3,?_roundf+3
  7516  0026AE                     l1512:
  7517  0026AE  0012               	return		;funcret
  7518  0026B0                     __end_of_roundf:
  7519                           	callstack 0
  7520                           
  7521 ;; *************** function ___flsub *****************
  7522 ;; Defined at:
  7523 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\sprcadd.c"
  7524 ;; Parameters:    Size  Location     Type
  7525 ;;  b               4   16[COMRAM] float 
  7526 ;;  a               4   20[COMRAM] float 
  7527 ;; Auto vars:     Size  Location     Type
  7528 ;;		None
  7529 ;; Return value:  Size  Location     Type
  7530 ;;                  4   16[COMRAM] float 
  7531 ;; Registers used:
  7532 ;;		wreg, status,2, status,0, cstack
  7533 ;; Tracked objects:
  7534 ;;		On entry : 0/0
  7535 ;;		On exit  : 0/0
  7536 ;;		Unchanged: 0/0
  7537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7538 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7539 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7540 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7541 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7542 ;;Total ram usage:        8 bytes
  7543 ;; Hardware stack levels used: 1
  7544 ;; Hardware stack levels required when called: 2
  7545 ;; This function calls:
  7546 ;;		___fladd
  7547 ;; This function is called by:
  7548 ;;		_roundf
  7549 ;; This function uses a non-reentrant model
  7550 ;;
  7551                           
  7552                           	psect	text35
  7553  0057B4                     __ptext35:
  7554                           	callstack 0
  7555  0057B4                     ___flsub:
  7556                           	callstack 24
  7557  0057B4  0E00               	movlw	0
  7558  0057B6  1A15               	xorwf	___flsub@a^0,f,c
  7559  0057B8  0E00               	movlw	0
  7560  0057BA  1A16               	xorwf	(___flsub@a+1)^0,f,c
  7561  0057BC  0E00               	movlw	0
  7562  0057BE  1A17               	xorwf	(___flsub@a+2)^0,f,c
  7563  0057C0  0E80               	movlw	128
  7564  0057C2  1A18               	xorwf	(___flsub@a+3)^0,f,c
  7565  0057C4  C011  F001         	movff	___flsub@b,___fladd@b
  7566  0057C8  C012  F002         	movff	___flsub@b+1,___fladd@b+1
  7567  0057CC  C013  F003         	movff	___flsub@b+2,___fladd@b+2
  7568  0057D0  C014  F004         	movff	___flsub@b+3,___fladd@b+3
  7569  0057D4  C015  F005         	movff	___flsub@a,___fladd@a
  7570  0057D8  C016  F006         	movff	___flsub@a+1,___fladd@a+1
  7571  0057DC  C017  F007         	movff	___flsub@a+2,___fladd@a+2
  7572  0057E0  C018  F008         	movff	___flsub@a+3,___fladd@a+3
  7573  0057E4  EC0C  F00D         	call	___fladd	;wreg free
  7574  0057E8  C001  F011         	movff	?___fladd,?___flsub
  7575  0057EC  C002  F012         	movff	?___fladd+1,?___flsub+1
  7576  0057F0  C003  F013         	movff	?___fladd+2,?___flsub+2
  7577  0057F4  C004  F014         	movff	?___fladd+3,?___flsub+3
  7578  0057F8  0012               	return		;funcret
  7579  0057FA                     __end_of___flsub:
  7580                           	callstack 0
  7581                           
  7582 ;; *************** function ___fladd *****************
  7583 ;; Defined at:
  7584 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\sprcadd.c"
  7585 ;; Parameters:    Size  Location     Type
  7586 ;;  b               4    0[COMRAM] float 
  7587 ;;  a               4    4[COMRAM] float 
  7588 ;; Auto vars:     Size  Location     Type
  7589 ;;  grs             1   15[COMRAM] unsigned char 
  7590 ;;  bexp            1   14[COMRAM] unsigned char 
  7591 ;;  aexp            1   13[COMRAM] unsigned char 
  7592 ;;  signs           1   12[COMRAM] unsigned char 
  7593 ;; Return value:  Size  Location     Type
  7594 ;;                  4    0[COMRAM] unsigned char 
  7595 ;; Registers used:
  7596 ;;		wreg, status,2, status,0
  7597 ;; Tracked objects:
  7598 ;;		On entry : 0/0
  7599 ;;		On exit  : 0/0
  7600 ;;		Unchanged: 0/0
  7601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7602 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7603 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7604 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7605 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7606 ;;Total ram usage:       16 bytes
  7607 ;; Hardware stack levels used: 1
  7608 ;; Hardware stack levels required when called: 1
  7609 ;; This function calls:
  7610 ;;		Nothing
  7611 ;; This function is called by:
  7612 ;;		___flsub
  7613 ;;		_roundf
  7614 ;; This function uses a non-reentrant model
  7615 ;;
  7616                           
  7617                           	psect	text36
  7618  001A18                     __ptext36:
  7619                           	callstack 0
  7620  001A18                     ___fladd:
  7621                           	callstack 24
  7622  001A18  5004               	movf	(___fladd@b+3)^0,w,c
  7623  001A1A  0B80               	andlw	128
  7624  001A1C  6E0D               	movwf	___fladd@signs^0,c
  7625  001A1E  5004               	movf	(___fladd@b+3)^0,w,c
  7626  001A20  2404               	addwf	(___fladd@b+3)^0,w,c
  7627  001A22  6E0F               	movwf	___fladd@bexp^0,c
  7628  001A24  AE03               	btfss	(___fladd@b+2)^0,7,c
  7629  001A26  EF17  F00D         	goto	u3311
  7630  001A2A  EF19  F00D         	goto	u3310
  7631  001A2E                     u3311:
  7632  001A2E  EF1A  F00D         	goto	l3731
  7633  001A32                     u3310:
  7634  001A32  800F               	bsf	___fladd@bexp^0,0,c
  7635  001A34                     l3731:
  7636  001A34  500F               	movf	___fladd@bexp^0,w,c
  7637  001A36  B4D8               	btfsc	status,2,c
  7638  001A38  EF20  F00D         	goto	u3321
  7639  001A3C  EF22  F00D         	goto	u3320
  7640  001A40                     u3321:
  7641  001A40  EF37  F00D         	goto	l3741
  7642  001A44                     u3320:
  7643  001A44  280F               	incf	___fladd@bexp^0,w,c
  7644  001A46  A4D8               	btfss	status,2,c
  7645  001A48  EF28  F00D         	goto	u3331
  7646  001A4C  EF2A  F00D         	goto	u3330
  7647  001A50                     u3331:
  7648  001A50  EF32  F00D         	goto	l3737
  7649  001A54                     u3330:
  7650  001A54  0E00               	movlw	0
  7651  001A56  6E01               	movwf	___fladd@b^0,c
  7652  001A58  0E00               	movlw	0
  7653  001A5A  6E02               	movwf	(___fladd@b+1)^0,c
  7654  001A5C  0E00               	movlw	0
  7655  001A5E  6E03               	movwf	(___fladd@b+2)^0,c
  7656  001A60  0E00               	movlw	0
  7657  001A62  6E04               	movwf	(___fladd@b+3)^0,c
  7658  001A64                     l3737:
  7659  001A64  8E03               	bsf	(___fladd@b+2)^0,7,c
  7660  001A66  0E00               	movlw	0
  7661  001A68  6E04               	movwf	(___fladd@b+3)^0,c
  7662  001A6A  EF3F  F00D         	goto	l3743
  7663  001A6E                     l3741:
  7664  001A6E  0E00               	movlw	0
  7665  001A70  6E01               	movwf	___fladd@b^0,c
  7666  001A72  0E00               	movlw	0
  7667  001A74  6E02               	movwf	(___fladd@b+1)^0,c
  7668  001A76  0E00               	movlw	0
  7669  001A78  6E03               	movwf	(___fladd@b+2)^0,c
  7670  001A7A  0E00               	movlw	0
  7671  001A7C  6E04               	movwf	(___fladd@b+3)^0,c
  7672  001A7E                     l3743:
  7673  001A7E  5008               	movf	(___fladd@a+3)^0,w,c
  7674  001A80  0B80               	andlw	128
  7675  001A82  6E0E               	movwf	___fladd@aexp^0,c
  7676  001A84  500D               	movf	___fladd@signs^0,w,c
  7677  001A86  180E               	xorwf	___fladd@aexp^0,w,c
  7678  001A88  B4D8               	btfsc	status,2,c
  7679  001A8A  EF49  F00D         	goto	u3341
  7680  001A8E  EF4B  F00D         	goto	u3340
  7681  001A92                     u3341:
  7682  001A92  EF4C  F00D         	goto	l3749
  7683  001A96                     u3340:
  7684  001A96  8C0D               	bsf	___fladd@signs^0,6,c
  7685  001A98                     l3749:
  7686  001A98  5008               	movf	(___fladd@a+3)^0,w,c
  7687  001A9A  2408               	addwf	(___fladd@a+3)^0,w,c
  7688  001A9C  6E0E               	movwf	___fladd@aexp^0,c
  7689  001A9E  AE07               	btfss	(___fladd@a+2)^0,7,c
  7690  001AA0  EF54  F00D         	goto	u3351
  7691  001AA4  EF56  F00D         	goto	u3350
  7692  001AA8                     u3351:
  7693  001AA8  EF57  F00D         	goto	l3755
  7694  001AAC                     u3350:
  7695  001AAC  800E               	bsf	___fladd@aexp^0,0,c
  7696  001AAE                     l3755:
  7697  001AAE  500E               	movf	___fladd@aexp^0,w,c
  7698  001AB0  B4D8               	btfsc	status,2,c
  7699  001AB2  EF5D  F00D         	goto	u3361
  7700  001AB6  EF5F  F00D         	goto	u3360
  7701  001ABA                     u3361:
  7702  001ABA  EF74  F00D         	goto	l3765
  7703  001ABE                     u3360:
  7704  001ABE  280E               	incf	___fladd@aexp^0,w,c
  7705  001AC0  A4D8               	btfss	status,2,c
  7706  001AC2  EF65  F00D         	goto	u3371
  7707  001AC6  EF67  F00D         	goto	u3370
  7708  001ACA                     u3371:
  7709  001ACA  EF6F  F00D         	goto	l3761
  7710  001ACE                     u3370:
  7711  001ACE  0E00               	movlw	0
  7712  001AD0  6E05               	movwf	___fladd@a^0,c
  7713  001AD2  0E00               	movlw	0
  7714  001AD4  6E06               	movwf	(___fladd@a+1)^0,c
  7715  001AD6  0E00               	movlw	0
  7716  001AD8  6E07               	movwf	(___fladd@a+2)^0,c
  7717  001ADA  0E00               	movlw	0
  7718  001ADC  6E08               	movwf	(___fladd@a+3)^0,c
  7719  001ADE                     l3761:
  7720  001ADE  8E07               	bsf	(___fladd@a+2)^0,7,c
  7721  001AE0  0E00               	movlw	0
  7722  001AE2  6E08               	movwf	(___fladd@a+3)^0,c
  7723  001AE4  EF7C  F00D         	goto	l3767
  7724  001AE8                     l3765:
  7725  001AE8  0E00               	movlw	0
  7726  001AEA  6E05               	movwf	___fladd@a^0,c
  7727  001AEC  0E00               	movlw	0
  7728  001AEE  6E06               	movwf	(___fladd@a+1)^0,c
  7729  001AF0  0E00               	movlw	0
  7730  001AF2  6E07               	movwf	(___fladd@a+2)^0,c
  7731  001AF4  0E00               	movlw	0
  7732  001AF6  6E08               	movwf	(___fladd@a+3)^0,c
  7733  001AF8                     l3767:
  7734  001AF8  500F               	movf	___fladd@bexp^0,w,c
  7735  001AFA  5C0E               	subwf	___fladd@aexp^0,w,c
  7736  001AFC  B0D8               	btfsc	status,0,c
  7737  001AFE  EF83  F00D         	goto	u3381
  7738  001B02  EF85  F00D         	goto	u3380
  7739  001B06                     u3381:
  7740  001B06  EFAC  F00D         	goto	l3803
  7741  001B0A                     u3380:
  7742  001B0A  AC0D               	btfss	___fladd@signs^0,6,c
  7743  001B0C  EF8A  F00D         	goto	u3391
  7744  001B10  EF8C  F00D         	goto	u3390
  7745  001B14                     u3391:
  7746  001B14  EF8E  F00D         	goto	l3773
  7747  001B18                     u3390:
  7748  001B18  0E80               	movlw	128
  7749  001B1A  1A0D               	xorwf	___fladd@signs^0,f,c
  7750  001B1C                     l3773:
  7751  001B1C  C00F  F010         	movff	___fladd@bexp,___fladd@grs
  7752  001B20  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  7753  001B24  C010  F00E         	movff	___fladd@grs,___fladd@aexp
  7754  001B28  C001  F010         	movff	___fladd@b,___fladd@grs
  7755  001B2C  C005  F001         	movff	___fladd@a,___fladd@b
  7756  001B30  C010  F005         	movff	___fladd@grs,___fladd@a
  7757  001B34  C002  F010         	movff	___fladd@b+1,___fladd@grs
  7758  001B38  C006  F002         	movff	___fladd@a+1,___fladd@b+1
  7759  001B3C  C010  F006         	movff	___fladd@grs,___fladd@a+1
  7760  001B40  C003  F010         	movff	___fladd@b+2,___fladd@grs
  7761  001B44  C007  F003         	movff	___fladd@a+2,___fladd@b+2
  7762  001B48  C010  F007         	movff	___fladd@grs,___fladd@a+2
  7763  001B4C  C004  F010         	movff	___fladd@b+3,___fladd@grs
  7764  001B50  C008  F004         	movff	___fladd@a+3,___fladd@b+3
  7765  001B54  C010  F008         	movff	___fladd@grs,___fladd@a+3
  7766  001B58                     l3803:
  7767  001B58  0E00               	movlw	0
  7768  001B5A  6E10               	movwf	___fladd@grs^0,c
  7769  001B5C  500F               	movf	___fladd@bexp^0,w,c
  7770  001B5E  C00E  F009         	movff	___fladd@aexp,??___fladd
  7771  001B62  6A0A               	clrf	(??___fladd+1)^0,c
  7772  001B64  5E09               	subwf	??___fladd^0,f,c
  7773  001B66  0E00               	movlw	0
  7774  001B68  5A0A               	subwfb	(??___fladd+1)^0,f,c
  7775  001B6A  BE0A               	btfsc	(??___fladd+1)^0,7,c
  7776  001B6C  EFC1  F00D         	goto	u3401
  7777  001B70  500A               	movf	(??___fladd+1)^0,w,c
  7778  001B72  E109               	bnz	u3400
  7779  001B74  0E1A               	movlw	26
  7780  001B76  5C09               	subwf	??___fladd^0,w,c
  7781  001B78  A0D8               	btfss	status,0,c
  7782  001B7A  EFC1  F00D         	goto	u3401
  7783  001B7E  EFC3  F00D         	goto	u3400
  7784  001B82                     u3401:
  7785  001B82  EFFA  F00D         	goto	l1248
  7786  001B86                     u3400:
  7787  001B86  5001               	movf	___fladd@b^0,w,c
  7788  001B88  1002               	iorwf	(___fladd@b+1)^0,w,c
  7789  001B8A  1003               	iorwf	(___fladd@b+2)^0,w,c
  7790  001B8C  1004               	iorwf	(___fladd@b+3)^0,w,c
  7791  001B8E  A4D8               	btfss	status,2,c
  7792  001B90  EFCC  F00D         	goto	u3411
  7793  001B94  EFCF  F00D         	goto	u3410
  7794  001B98                     u3411:
  7795  001B98  0E01               	movlw	1
  7796  001B9A  EFD0  F00D         	goto	u3420
  7797  001B9E                     u3410:
  7798  001B9E  0E00               	movlw	0
  7799  001BA0                     u3420:
  7800  001BA0  6E10               	movwf	___fladd@grs^0,c
  7801  001BA2  0E00               	movlw	0
  7802  001BA4  6E01               	movwf	___fladd@b^0,c
  7803  001BA6  0E00               	movlw	0
  7804  001BA8  6E02               	movwf	(___fladd@b+1)^0,c
  7805  001BAA  0E00               	movlw	0
  7806  001BAC  6E03               	movwf	(___fladd@b+2)^0,c
  7807  001BAE  0E00               	movlw	0
  7808  001BB0  6E04               	movwf	(___fladd@b+3)^0,c
  7809  001BB2  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  7810  001BB6  EF03  F00E         	goto	l1247
  7811  001BBA                     l1249:
  7812  001BBA  A010               	btfss	___fladd@grs^0,0,c
  7813  001BBC  EFE2  F00D         	goto	u3431
  7814  001BC0  EFE4  F00D         	goto	u3430
  7815  001BC4                     u3431:
  7816  001BC4  EFEA  F00D         	goto	l3815
  7817  001BC8                     u3430:
  7818  001BC8  90D8               	bcf	status,0,c
  7819  001BCA  3010               	rrcf	___fladd@grs^0,w,c
  7820  001BCC  0901               	iorlw	1
  7821  001BCE  6E10               	movwf	___fladd@grs^0,c
  7822  001BD0  EFEC  F00D         	goto	l3817
  7823  001BD4                     l3815:
  7824  001BD4  90D8               	bcf	status,0,c
  7825  001BD6  3210               	rrcf	___fladd@grs^0,f,c
  7826  001BD8                     l3817:
  7827  001BD8  A001               	btfss	___fladd@b^0,0,c
  7828  001BDA  EFF1  F00D         	goto	u3441
  7829  001BDE  EFF3  F00D         	goto	u3440
  7830  001BE2                     u3441:
  7831  001BE2  EFF4  F00D         	goto	l3821
  7832  001BE6                     u3440:
  7833  001BE6  8E10               	bsf	___fladd@grs^0,7,c
  7834  001BE8                     l3821:
  7835  001BE8  3404               	rlcf	(___fladd@b+3)^0,w,c
  7836  001BEA  3204               	rrcf	(___fladd@b+3)^0,f,c
  7837  001BEC  3203               	rrcf	(___fladd@b+2)^0,f,c
  7838  001BEE  3202               	rrcf	(___fladd@b+1)^0,f,c
  7839  001BF0  3201               	rrcf	___fladd@b^0,f,c
  7840  001BF2  2A0F               	incf	___fladd@bexp^0,f,c
  7841  001BF4                     l1248:
  7842  001BF4  500E               	movf	___fladd@aexp^0,w,c
  7843  001BF6  5C0F               	subwf	___fladd@bexp^0,w,c
  7844  001BF8  A0D8               	btfss	status,0,c
  7845  001BFA  EF01  F00E         	goto	u3451
  7846  001BFE  EF03  F00E         	goto	u3450
  7847  001C02                     u3451:
  7848  001C02  EFDD  F00D         	goto	l1249
  7849  001C06                     u3450:
  7850  001C06                     l1247:
  7851  001C06  BC0D               	btfsc	___fladd@signs^0,6,c
  7852  001C08  EF08  F00E         	goto	u3461
  7853  001C0C  EF0A  F00E         	goto	u3460
  7854  001C10                     u3461:
  7855  001C10  EF4A  F00E         	goto	l3849
  7856  001C14                     u3460:
  7857  001C14  500F               	movf	___fladd@bexp^0,w,c
  7858  001C16  A4D8               	btfss	status,2,c
  7859  001C18  EF10  F00E         	goto	u3471
  7860  001C1C  EF12  F00E         	goto	u3470
  7861  001C20                     u3471:
  7862  001C20  EF1C  F00E         	goto	l3831
  7863  001C24                     u3470:
  7864  001C24  0E00               	movlw	0
  7865  001C26  6E01               	movwf	?___fladd^0,c
  7866  001C28  0E00               	movlw	0
  7867  001C2A  6E02               	movwf	(?___fladd+1)^0,c
  7868  001C2C  0E00               	movlw	0
  7869  001C2E  6E03               	movwf	(?___fladd+2)^0,c
  7870  001C30  0E00               	movlw	0
  7871  001C32  6E04               	movwf	(?___fladd+3)^0,c
  7872  001C34  EF6B  F00F         	goto	l1256
  7873  001C38                     l3831:
  7874  001C38  5005               	movf	___fladd@a^0,w,c
  7875  001C3A  2601               	addwf	___fladd@b^0,f,c
  7876  001C3C  5006               	movf	(___fladd@a+1)^0,w,c
  7877  001C3E  2202               	addwfc	(___fladd@b+1)^0,f,c
  7878  001C40  5007               	movf	(___fladd@a+2)^0,w,c
  7879  001C42  2203               	addwfc	(___fladd@b+2)^0,f,c
  7880  001C44  5008               	movf	(___fladd@a+3)^0,w,c
  7881  001C46  2204               	addwfc	(___fladd@b+3)^0,f,c
  7882  001C48  A004               	btfss	(___fladd@b+3)^0,0,c
  7883  001C4A  EF29  F00E         	goto	u3481
  7884  001C4E  EF2B  F00E         	goto	u3480
  7885  001C52                     u3481:
  7886  001C52  EFD7  F00E         	goto	l3885
  7887  001C56                     u3480:
  7888  001C56  A010               	btfss	___fladd@grs^0,0,c
  7889  001C58  EF30  F00E         	goto	u3491
  7890  001C5C  EF32  F00E         	goto	u3490
  7891  001C60                     u3491:
  7892  001C60  EF38  F00E         	goto	l3839
  7893  001C64                     u3490:
  7894  001C64  90D8               	bcf	status,0,c
  7895  001C66  3010               	rrcf	___fladd@grs^0,w,c
  7896  001C68  0901               	iorlw	1
  7897  001C6A  6E10               	movwf	___fladd@grs^0,c
  7898  001C6C  EF3A  F00E         	goto	l3841
  7899  001C70                     l3839:
  7900  001C70  90D8               	bcf	status,0,c
  7901  001C72  3210               	rrcf	___fladd@grs^0,f,c
  7902  001C74                     l3841:
  7903  001C74  A001               	btfss	___fladd@b^0,0,c
  7904  001C76  EF3F  F00E         	goto	u3501
  7905  001C7A  EF41  F00E         	goto	u3500
  7906  001C7E                     u3501:
  7907  001C7E  EF42  F00E         	goto	l3845
  7908  001C82                     u3500:
  7909  001C82  8E10               	bsf	___fladd@grs^0,7,c
  7910  001C84                     l3845:
  7911  001C84  3404               	rlcf	(___fladd@b+3)^0,w,c
  7912  001C86  3204               	rrcf	(___fladd@b+3)^0,f,c
  7913  001C88  3203               	rrcf	(___fladd@b+2)^0,f,c
  7914  001C8A  3202               	rrcf	(___fladd@b+1)^0,f,c
  7915  001C8C  3201               	rrcf	___fladd@b^0,f,c
  7916  001C8E  2A0F               	incf	___fladd@bexp^0,f,c
  7917  001C90  EFD7  F00E         	goto	l3885
  7918  001C94                     l3849:
  7919  001C94  5005               	movf	___fladd@a^0,w,c
  7920  001C96  5C01               	subwf	___fladd@b^0,w,c
  7921  001C98  5006               	movf	(___fladd@a+1)^0,w,c
  7922  001C9A  5802               	subwfb	(___fladd@b+1)^0,w,c
  7923  001C9C  5007               	movf	(___fladd@a+2)^0,w,c
  7924  001C9E  5803               	subwfb	(___fladd@b+2)^0,w,c
  7925  001CA0  5004               	movf	(___fladd@b+3)^0,w,c
  7926  001CA2  0A80               	xorlw	128
  7927  001CA4  6E09               	movwf	??___fladd^0,c
  7928  001CA6  5008               	movf	(___fladd@a+3)^0,w,c
  7929  001CA8  0A80               	xorlw	128
  7930  001CAA  5809               	subwfb	??___fladd^0,w,c
  7931  001CAC  B0D8               	btfsc	status,0,c
  7932  001CAE  EF5B  F00E         	goto	u3511
  7933  001CB2  EF5D  F00E         	goto	u3510
  7934  001CB6                     u3511:
  7935  001CB6  EF88  F00E         	goto	l3859
  7936  001CBA                     u3510:
  7937  001CBA  5001               	movf	___fladd@b^0,w,c
  7938  001CBC  5C05               	subwf	___fladd@a^0,w,c
  7939  001CBE  6E09               	movwf	??___fladd^0,c
  7940  001CC0  5002               	movf	(___fladd@b+1)^0,w,c
  7941  001CC2  5806               	subwfb	(___fladd@a+1)^0,w,c
  7942  001CC4  6E0A               	movwf	(??___fladd+1)^0,c
  7943  001CC6  5003               	movf	(___fladd@b+2)^0,w,c
  7944  001CC8  5807               	subwfb	(___fladd@a+2)^0,w,c
  7945  001CCA  6E0B               	movwf	(??___fladd+2)^0,c
  7946  001CCC  5004               	movf	(___fladd@b+3)^0,w,c
  7947  001CCE  5808               	subwfb	(___fladd@a+3)^0,w,c
  7948  001CD0  6E0C               	movwf	(??___fladd+3)^0,c
  7949  001CD2  0EFF               	movlw	255
  7950  001CD4  2409               	addwf	??___fladd^0,w,c
  7951  001CD6  6E01               	movwf	___fladd@b^0,c
  7952  001CD8  0EFF               	movlw	255
  7953  001CDA  200A               	addwfc	(??___fladd+1)^0,w,c
  7954  001CDC  6E02               	movwf	(___fladd@b+1)^0,c
  7955  001CDE  0EFF               	movlw	255
  7956  001CE0  200B               	addwfc	(??___fladd+2)^0,w,c
  7957  001CE2  6E03               	movwf	(___fladd@b+2)^0,c
  7958  001CE4  0EFF               	movlw	255
  7959  001CE6  200C               	addwfc	(??___fladd+3)^0,w,c
  7960  001CE8  6E04               	movwf	(___fladd@b+3)^0,c
  7961  001CEA  0E80               	movlw	128
  7962  001CEC  1A0D               	xorwf	___fladd@signs^0,f,c
  7963  001CEE  6C10               	negf	___fladd@grs^0,c
  7964  001CF0  5010               	movf	___fladd@grs^0,w,c
  7965  001CF2  A4D8               	btfss	status,2,c
  7966  001CF4  EF7E  F00E         	goto	u3521
  7967  001CF8  EF80  F00E         	goto	u3520
  7968  001CFC                     u3521:
  7969  001CFC  EF90  F00E         	goto	l1264
  7970  001D00                     u3520:
  7971  001D00  0E01               	movlw	1
  7972  001D02  2601               	addwf	___fladd@b^0,f,c
  7973  001D04  0E00               	movlw	0
  7974  001D06  2202               	addwfc	(___fladd@b+1)^0,f,c
  7975  001D08  2203               	addwfc	(___fladd@b+2)^0,f,c
  7976  001D0A  2204               	addwfc	(___fladd@b+3)^0,f,c
  7977  001D0C  EF90  F00E         	goto	l1264
  7978  001D10                     l3859:
  7979  001D10  5005               	movf	___fladd@a^0,w,c
  7980  001D12  5E01               	subwf	___fladd@b^0,f,c
  7981  001D14  5006               	movf	(___fladd@a+1)^0,w,c
  7982  001D16  5A02               	subwfb	(___fladd@b+1)^0,f,c
  7983  001D18  5007               	movf	(___fladd@a+2)^0,w,c
  7984  001D1A  5A03               	subwfb	(___fladd@b+2)^0,f,c
  7985  001D1C  5008               	movf	(___fladd@a+3)^0,w,c
  7986  001D1E  5A04               	subwfb	(___fladd@b+3)^0,f,c
  7987  001D20                     l1264:
  7988  001D20  5001               	movf	___fladd@b^0,w,c
  7989  001D22  1002               	iorwf	(___fladd@b+1)^0,w,c
  7990  001D24  1003               	iorwf	(___fladd@b+2)^0,w,c
  7991  001D26  1004               	iorwf	(___fladd@b+3)^0,w,c
  7992  001D28  A4D8               	btfss	status,2,c
  7993  001D2A  EF99  F00E         	goto	u3531
  7994  001D2E  EF9B  F00E         	goto	u3530
  7995  001D32                     u3531:
  7996  001D32  EFD0  F00E         	goto	l3883
  7997  001D36                     u3530:
  7998  001D36  5010               	movf	___fladd@grs^0,w,c
  7999  001D38  A4D8               	btfss	status,2,c
  8000  001D3A  EFA1  F00E         	goto	u3541
  8001  001D3E  EFA3  F00E         	goto	u3540
  8002  001D42                     u3541:
  8003  001D42  EFD0  F00E         	goto	l3883
  8004  001D46                     u3540:
  8005  001D46  0E00               	movlw	0
  8006  001D48  6E01               	movwf	?___fladd^0,c
  8007  001D4A  0E00               	movlw	0
  8008  001D4C  6E02               	movwf	(?___fladd+1)^0,c
  8009  001D4E  0E00               	movlw	0
  8010  001D50  6E03               	movwf	(?___fladd+2)^0,c
  8011  001D52  0E00               	movlw	0
  8012  001D54  6E04               	movwf	(?___fladd+3)^0,c
  8013  001D56  EF6B  F00F         	goto	l1256
  8014  001D5A                     l3867:
  8015  001D5A  90D8               	bcf	status,0,c
  8016  001D5C  3601               	rlcf	___fladd@b^0,f,c
  8017  001D5E  3602               	rlcf	(___fladd@b+1)^0,f,c
  8018  001D60  3603               	rlcf	(___fladd@b+2)^0,f,c
  8019  001D62  3604               	rlcf	(___fladd@b+3)^0,f,c
  8020  001D64  AE10               	btfss	___fladd@grs^0,7,c
  8021  001D66  EFB7  F00E         	goto	u3551
  8022  001D6A  EFB9  F00E         	goto	u3550
  8023  001D6E                     u3551:
  8024  001D6E  EFBA  F00E         	goto	l3873
  8025  001D72                     u3550:
  8026  001D72  8001               	bsf	___fladd@b^0,0,c
  8027  001D74                     l3873:
  8028  001D74  A010               	btfss	___fladd@grs^0,0,c
  8029  001D76  EFBF  F00E         	goto	u3561
  8030  001D7A  EFC1  F00E         	goto	u3560
  8031  001D7E                     u3561:
  8032  001D7E  EFC5  F00E         	goto	l3877
  8033  001D82                     u3560:
  8034  001D82  80D8               	bsf	status,0,c
  8035  001D84  3610               	rlcf	___fladd@grs^0,f,c
  8036  001D86  EFC7  F00E         	goto	l3879
  8037  001D8A                     l3877:
  8038  001D8A  90D8               	bcf	status,0,c
  8039  001D8C  3610               	rlcf	___fladd@grs^0,f,c
  8040  001D8E                     l3879:
  8041  001D8E  500F               	movf	___fladd@bexp^0,w,c
  8042  001D90  B4D8               	btfsc	status,2,c
  8043  001D92  EFCD  F00E         	goto	u3571
  8044  001D96  EFCF  F00E         	goto	u3570
  8045  001D9A                     u3571:
  8046  001D9A  EFD0  F00E         	goto	l3883
  8047  001D9E                     u3570:
  8048  001D9E  060F               	decf	___fladd@bexp^0,f,c
  8049  001DA0                     l3883:
  8050  001DA0  AE03               	btfss	(___fladd@b+2)^0,7,c
  8051  001DA2  EFD5  F00E         	goto	u3581
  8052  001DA6  EFD7  F00E         	goto	u3580
  8053  001DAA                     u3581:
  8054  001DAA  EFAD  F00E         	goto	l3867
  8055  001DAE                     u3580:
  8056  001DAE                     l3885:
  8057  001DAE  0E00               	movlw	0
  8058  001DB0  6E0E               	movwf	___fladd@aexp^0,c
  8059  001DB2  AE10               	btfss	___fladd@grs^0,7,c
  8060  001DB4  EFDE  F00E         	goto	u3591
  8061  001DB8  EFE0  F00E         	goto	u3590
  8062  001DBC                     u3591:
  8063  001DBC  EFF8  F00E         	goto	l1273
  8064  001DC0                     u3590:
  8065  001DC0  C010  F009         	movff	___fladd@grs,??___fladd
  8066  001DC4  0E7F               	movlw	127
  8067  001DC6  1609               	andwf	??___fladd^0,f,c
  8068  001DC8  B4D8               	btfsc	status,2,c
  8069  001DCA  EFE9  F00E         	goto	u3601
  8070  001DCE  EFEB  F00E         	goto	u3600
  8071  001DD2                     u3601:
  8072  001DD2  EFEF  F00E         	goto	l1274
  8073  001DD6                     u3600:
  8074  001DD6                     l3891:
  8075  001DD6  0E01               	movlw	1
  8076  001DD8  6E0E               	movwf	___fladd@aexp^0,c
  8077  001DDA  EFF8  F00E         	goto	l1273
  8078  001DDE                     l1274:
  8079  001DDE  A001               	btfss	___fladd@b^0,0,c
  8080  001DE0  EFF4  F00E         	goto	u3611
  8081  001DE4  EFF6  F00E         	goto	u3610
  8082  001DE8                     u3611:
  8083  001DE8  EFF8  F00E         	goto	l1273
  8084  001DEC                     u3610:
  8085  001DEC  EFEB  F00E         	goto	l3891
  8086  001DF0                     l1273:
  8087  001DF0  500E               	movf	___fladd@aexp^0,w,c
  8088  001DF2  B4D8               	btfsc	status,2,c
  8089  001DF4  EFFE  F00E         	goto	u3621
  8090  001DF8  EF00  F00F         	goto	u3620
  8091  001DFC                     u3621:
  8092  001DFC  EF2B  F00F         	goto	l3903
  8093  001E00                     u3620:
  8094  001E00  0E01               	movlw	1
  8095  001E02  2601               	addwf	___fladd@b^0,f,c
  8096  001E04  0E00               	movlw	0
  8097  001E06  2202               	addwfc	(___fladd@b+1)^0,f,c
  8098  001E08  2203               	addwfc	(___fladd@b+2)^0,f,c
  8099  001E0A  2204               	addwfc	(___fladd@b+3)^0,f,c
  8100  001E0C  A004               	btfss	(___fladd@b+3)^0,0,c
  8101  001E0E  EF0B  F00F         	goto	u3631
  8102  001E12  EF0D  F00F         	goto	u3630
  8103  001E16                     u3631:
  8104  001E16  EF2B  F00F         	goto	l3903
  8105  001E1A                     u3630:
  8106  001E1A  C001  F009         	movff	___fladd@b,??___fladd
  8107  001E1E  C002  F00A         	movff	___fladd@b+1,??___fladd+1
  8108  001E22  C003  F00B         	movff	___fladd@b+2,??___fladd+2
  8109  001E26  C004  F00C         	movff	___fladd@b+3,??___fladd+3
  8110  001E2A  340C               	rlcf	(??___fladd+3)^0,w,c
  8111  001E2C  320C               	rrcf	(??___fladd+3)^0,f,c
  8112  001E2E  320B               	rrcf	(??___fladd+2)^0,f,c
  8113  001E30  320A               	rrcf	(??___fladd+1)^0,f,c
  8114  001E32  3209               	rrcf	??___fladd^0,f,c
  8115  001E34  C009  F001         	movff	??___fladd,___fladd@b
  8116  001E38  C00A  F002         	movff	??___fladd+1,___fladd@b+1
  8117  001E3C  C00B  F003         	movff	??___fladd+2,___fladd@b+2
  8118  001E40  C00C  F004         	movff	??___fladd+3,___fladd@b+3
  8119  001E44  280F               	incf	___fladd@bexp^0,w,c
  8120  001E46  B4D8               	btfsc	status,2,c
  8121  001E48  EF28  F00F         	goto	u3641
  8122  001E4C  EF2A  F00F         	goto	u3640
  8123  001E50                     u3641:
  8124  001E50  EF2B  F00F         	goto	l3903
  8125  001E54                     u3640:
  8126  001E54  2A0F               	incf	___fladd@bexp^0,f,c
  8127  001E56                     l3903:
  8128  001E56  280F               	incf	___fladd@bexp^0,w,c
  8129  001E58  B4D8               	btfsc	status,2,c
  8130  001E5A  EF31  F00F         	goto	u3651
  8131  001E5E  EF33  F00F         	goto	u3650
  8132  001E62                     u3651:
  8133  001E62  EF3B  F00F         	goto	l3907
  8134  001E66                     u3650:
  8135  001E66  500F               	movf	___fladd@bexp^0,w,c
  8136  001E68  A4D8               	btfss	status,2,c
  8137  001E6A  EF39  F00F         	goto	u3661
  8138  001E6E  EF3B  F00F         	goto	u3660
  8139  001E72                     u3661:
  8140  001E72  EF4D  F00F         	goto	l3911
  8141  001E76                     u3660:
  8142  001E76                     l3907:
  8143  001E76  0E00               	movlw	0
  8144  001E78  6E01               	movwf	___fladd@b^0,c
  8145  001E7A  0E00               	movlw	0
  8146  001E7C  6E02               	movwf	(___fladd@b+1)^0,c
  8147  001E7E  0E00               	movlw	0
  8148  001E80  6E03               	movwf	(___fladd@b+2)^0,c
  8149  001E82  0E00               	movlw	0
  8150  001E84  6E04               	movwf	(___fladd@b+3)^0,c
  8151  001E86  500F               	movf	___fladd@bexp^0,w,c
  8152  001E88  A4D8               	btfss	status,2,c
  8153  001E8A  EF49  F00F         	goto	u3671
  8154  001E8E  EF4B  F00F         	goto	u3670
  8155  001E92                     u3671:
  8156  001E92  EF4D  F00F         	goto	l3911
  8157  001E96                     u3670:
  8158  001E96  0E00               	movlw	0
  8159  001E98  6E0D               	movwf	___fladd@signs^0,c
  8160  001E9A                     l3911:
  8161  001E9A  A00F               	btfss	___fladd@bexp^0,0,c
  8162  001E9C  EF52  F00F         	goto	u3681
  8163  001EA0  EF54  F00F         	goto	u3680
  8164  001EA4                     u3681:
  8165  001EA4  EF57  F00F         	goto	l3915
  8166  001EA8                     u3680:
  8167  001EA8  8E03               	bsf	(___fladd@b+2)^0,7,c
  8168  001EAA  EF58  F00F         	goto	l3917
  8169  001EAE                     l3915:
  8170  001EAE  9E03               	bcf	(___fladd@b+2)^0,7,c
  8171  001EB0                     l3917:
  8172  001EB0  90D8               	bcf	status,0,c
  8173  001EB2  300F               	rrcf	___fladd@bexp^0,w,c
  8174  001EB4  6E04               	movwf	(___fladd@b+3)^0,c
  8175  001EB6  AE0D               	btfss	___fladd@signs^0,7,c
  8176  001EB8  EF60  F00F         	goto	u3691
  8177  001EBC  EF62  F00F         	goto	u3690
  8178  001EC0                     u3691:
  8179  001EC0  EF63  F00F         	goto	l3923
  8180  001EC4                     u3690:
  8181  001EC4  8E04               	bsf	(___fladd@b+3)^0,7,c
  8182  001EC6                     l3923:
  8183  001EC6  C001  F001         	movff	___fladd@b,?___fladd
  8184  001ECA  C002  F002         	movff	___fladd@b+1,?___fladd+1
  8185  001ECE  C003  F003         	movff	___fladd@b+2,?___fladd+2
  8186  001ED2  C004  F004         	movff	___fladd@b+3,?___fladd+3
  8187  001ED6                     l1256:
  8188  001ED6  0012               	return		;funcret
  8189  001ED8                     __end_of___fladd:
  8190                           	callstack 0
  8191                           
  8192 ;; *************** function ___flneg *****************
  8193 ;; Defined at:
  8194 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\flneg.c"
  8195 ;; Parameters:    Size  Location     Type
  8196 ;;  f1              4    0[COMRAM] unsigned char 
  8197 ;; Auto vars:     Size  Location     Type
  8198 ;;		None
  8199 ;; Return value:  Size  Location     Type
  8200 ;;                  4    0[COMRAM] unsigned char 
  8201 ;; Registers used:
  8202 ;;		wreg, status,2, status,0
  8203 ;; Tracked objects:
  8204 ;;		On entry : 0/0
  8205 ;;		On exit  : 0/0
  8206 ;;		Unchanged: 0/0
  8207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8208 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8209 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8210 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8211 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8212 ;;Total ram usage:        4 bytes
  8213 ;; Hardware stack levels used: 1
  8214 ;; Hardware stack levels required when called: 1
  8215 ;; This function calls:
  8216 ;;		Nothing
  8217 ;; This function is called by:
  8218 ;;		_roundf
  8219 ;; This function uses a non-reentrant model
  8220 ;;
  8221                           
  8222                           	psect	text37
  8223  005A7E                     __ptext37:
  8224                           	callstack 0
  8225  005A7E                     ___flneg:
  8226                           	callstack 25
  8227  005A7E  5001               	movf	___flneg@f1^0,w,c
  8228  005A80  1002               	iorwf	(___flneg@f1+1)^0,w,c
  8229  005A82  1003               	iorwf	(___flneg@f1+2)^0,w,c
  8230  005A84  1004               	iorwf	(___flneg@f1+3)^0,w,c
  8231  005A86  B4D8               	btfsc	status,2,c
  8232  005A88  EF48  F02D         	goto	u4111
  8233  005A8C  EF4A  F02D         	goto	u4110
  8234  005A90                     u4111:
  8235  005A90  EF52  F02D         	goto	l4223
  8236  005A94                     u4110:
  8237  005A94  0E00               	movlw	0
  8238  005A96  1A01               	xorwf	___flneg@f1^0,f,c
  8239  005A98  0E00               	movlw	0
  8240  005A9A  1A02               	xorwf	(___flneg@f1+1)^0,f,c
  8241  005A9C  0E00               	movlw	0
  8242  005A9E  1A03               	xorwf	(___flneg@f1+2)^0,f,c
  8243  005AA0  0E80               	movlw	128
  8244  005AA2  1A04               	xorwf	(___flneg@f1+3)^0,f,c
  8245  005AA4                     l4223:
  8246  005AA4  C001  F001         	movff	___flneg@f1,?___flneg
  8247  005AA8  C002  F002         	movff	___flneg@f1+1,?___flneg+1
  8248  005AAC  C003  F003         	movff	___flneg@f1+2,?___flneg+2
  8249  005AB0  C004  F004         	movff	___flneg@f1+3,?___flneg+3
  8250  005AB4  0012               	return		;funcret
  8251  005AB6                     __end_of___flneg:
  8252                           	callstack 0
  8253                           
  8254 ;; *************** function ___flmul *****************
  8255 ;; Defined at:
  8256 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\sprcmul.c"
  8257 ;; Parameters:    Size  Location     Type
  8258 ;;  b               4   39[COMRAM] unsigned char 
  8259 ;;  a               4   43[COMRAM] unsigned char 
  8260 ;; Auto vars:     Size  Location     Type
  8261 ;;  prod            4   58[COMRAM] struct .
  8262 ;;  grs             4   52[COMRAM] unsigned long 
  8263 ;;  temp            2   62[COMRAM] struct .
  8264 ;;  bexp            1   57[COMRAM] unsigned char 
  8265 ;;  aexp            1   56[COMRAM] unsigned char 
  8266 ;;  sign            1   51[COMRAM] unsigned char 
  8267 ;; Return value:  Size  Location     Type
  8268 ;;                  4   39[COMRAM] unsigned char 
  8269 ;; Registers used:
  8270 ;;		wreg, status,2, status,0, prodl, prodh
  8271 ;; Tracked objects:
  8272 ;;		On entry : 0/0
  8273 ;;		On exit  : 0/0
  8274 ;;		Unchanged: 0/0
  8275 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8276 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8277 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8278 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8279 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8280 ;;Total ram usage:       25 bytes
  8281 ;; Hardware stack levels used: 1
  8282 ;; Hardware stack levels required when called: 1
  8283 ;; This function calls:
  8284 ;;		Nothing
  8285 ;; This function is called by:
  8286 ;;		_detect_color
  8287 ;;		_distance_measure
  8288 ;;		_roundf
  8289 ;;		_check_color_reading
  8290 ;; This function uses a non-reentrant model
  8291 ;;
  8292                           
  8293                           	psect	text38
  8294  001ED8                     __ptext38:
  8295                           	callstack 0
  8296  001ED8                     ___flmul:
  8297                           	callstack 25
  8298  001ED8  502B               	movf	(___flmul@b+3)^0,w,c
  8299  001EDA  0B80               	andlw	128
  8300  001EDC  6E34               	movwf	___flmul@sign^0,c
  8301  001EDE  502B               	movf	(___flmul@b+3)^0,w,c
  8302  001EE0  242B               	addwf	(___flmul@b+3)^0,w,c
  8303  001EE2  6E3A               	movwf	___flmul@bexp^0,c
  8304  001EE4  AE2A               	btfss	(___flmul@b+2)^0,7,c
  8305  001EE6  EF77  F00F         	goto	u3871
  8306  001EEA  EF79  F00F         	goto	u3870
  8307  001EEE                     u3871:
  8308  001EEE  EF7A  F00F         	goto	l4067
  8309  001EF2                     u3870:
  8310  001EF2  803A               	bsf	___flmul@bexp^0,0,c
  8311  001EF4                     l4067:
  8312  001EF4  503A               	movf	___flmul@bexp^0,w,c
  8313  001EF6  B4D8               	btfsc	status,2,c
  8314  001EF8  EF80  F00F         	goto	u3881
  8315  001EFC  EF82  F00F         	goto	u3880
  8316  001F00                     u3881:
  8317  001F00  EF95  F00F         	goto	l4075
  8318  001F04                     u3880:
  8319  001F04  283A               	incf	___flmul@bexp^0,w,c
  8320  001F06  A4D8               	btfss	status,2,c
  8321  001F08  EF88  F00F         	goto	u3891
  8322  001F0C  EF8A  F00F         	goto	u3890
  8323  001F10                     u3891:
  8324  001F10  EF92  F00F         	goto	l4073
  8325  001F14                     u3890:
  8326  001F14  0E00               	movlw	0
  8327  001F16  6E28               	movwf	___flmul@b^0,c
  8328  001F18  0E00               	movlw	0
  8329  001F1A  6E29               	movwf	(___flmul@b+1)^0,c
  8330  001F1C  0E00               	movlw	0
  8331  001F1E  6E2A               	movwf	(___flmul@b+2)^0,c
  8332  001F20  0E00               	movlw	0
  8333  001F22  6E2B               	movwf	(___flmul@b+3)^0,c
  8334  001F24                     l4073:
  8335  001F24  8E2A               	bsf	(___flmul@b+2)^0,7,c
  8336  001F26  EF9D  F00F         	goto	l4077
  8337  001F2A                     l4075:
  8338  001F2A  0E00               	movlw	0
  8339  001F2C  6E28               	movwf	___flmul@b^0,c
  8340  001F2E  0E00               	movlw	0
  8341  001F30  6E29               	movwf	(___flmul@b+1)^0,c
  8342  001F32  0E00               	movlw	0
  8343  001F34  6E2A               	movwf	(___flmul@b+2)^0,c
  8344  001F36  0E00               	movlw	0
  8345  001F38  6E2B               	movwf	(___flmul@b+3)^0,c
  8346  001F3A                     l4077:
  8347  001F3A  502F               	movf	(___flmul@a+3)^0,w,c
  8348  001F3C  0B80               	andlw	128
  8349  001F3E  1A34               	xorwf	___flmul@sign^0,f,c
  8350  001F40  502F               	movf	(___flmul@a+3)^0,w,c
  8351  001F42  242F               	addwf	(___flmul@a+3)^0,w,c
  8352  001F44  6E39               	movwf	___flmul@aexp^0,c
  8353  001F46  AE2E               	btfss	(___flmul@a+2)^0,7,c
  8354  001F48  EFA8  F00F         	goto	u3901
  8355  001F4C  EFAA  F00F         	goto	u3900
  8356  001F50                     u3901:
  8357  001F50  EFAB  F00F         	goto	l4085
  8358  001F54                     u3900:
  8359  001F54  8039               	bsf	___flmul@aexp^0,0,c
  8360  001F56                     l4085:
  8361  001F56  5039               	movf	___flmul@aexp^0,w,c
  8362  001F58  B4D8               	btfsc	status,2,c
  8363  001F5A  EFB1  F00F         	goto	u3911
  8364  001F5E  EFB3  F00F         	goto	u3910
  8365  001F62                     u3911:
  8366  001F62  EFC6  F00F         	goto	l4093
  8367  001F66                     u3910:
  8368  001F66  2839               	incf	___flmul@aexp^0,w,c
  8369  001F68  A4D8               	btfss	status,2,c
  8370  001F6A  EFB9  F00F         	goto	u3921
  8371  001F6E  EFBB  F00F         	goto	u3920
  8372  001F72                     u3921:
  8373  001F72  EFC3  F00F         	goto	l4091
  8374  001F76                     u3920:
  8375  001F76  0E00               	movlw	0
  8376  001F78  6E2C               	movwf	___flmul@a^0,c
  8377  001F7A  0E00               	movlw	0
  8378  001F7C  6E2D               	movwf	(___flmul@a+1)^0,c
  8379  001F7E  0E00               	movlw	0
  8380  001F80  6E2E               	movwf	(___flmul@a+2)^0,c
  8381  001F82  0E00               	movlw	0
  8382  001F84  6E2F               	movwf	(___flmul@a+3)^0,c
  8383  001F86                     l4091:
  8384  001F86  8E2E               	bsf	(___flmul@a+2)^0,7,c
  8385  001F88  EFCE  F00F         	goto	l1333
  8386  001F8C                     l4093:
  8387  001F8C  0E00               	movlw	0
  8388  001F8E  6E2C               	movwf	___flmul@a^0,c
  8389  001F90  0E00               	movlw	0
  8390  001F92  6E2D               	movwf	(___flmul@a+1)^0,c
  8391  001F94  0E00               	movlw	0
  8392  001F96  6E2E               	movwf	(___flmul@a+2)^0,c
  8393  001F98  0E00               	movlw	0
  8394  001F9A  6E2F               	movwf	(___flmul@a+3)^0,c
  8395  001F9C                     l1333:
  8396  001F9C  5039               	movf	___flmul@aexp^0,w,c
  8397  001F9E  B4D8               	btfsc	status,2,c
  8398  001FA0  EFD4  F00F         	goto	u3931
  8399  001FA4  EFD6  F00F         	goto	u3930
  8400  001FA8                     u3931:
  8401  001FA8  EFDE  F00F         	goto	l4097
  8402  001FAC                     u3930:
  8403  001FAC  503A               	movf	___flmul@bexp^0,w,c
  8404  001FAE  A4D8               	btfss	status,2,c
  8405  001FB0  EFDC  F00F         	goto	u3941
  8406  001FB4  EFDE  F00F         	goto	u3940
  8407  001FB8                     u3941:
  8408  001FB8  EFE8  F00F         	goto	l4101
  8409  001FBC                     u3940:
  8410  001FBC                     l4097:
  8411  001FBC  0E00               	movlw	0
  8412  001FBE  6E28               	movwf	?___flmul^0,c
  8413  001FC0  0E00               	movlw	0
  8414  001FC2  6E29               	movwf	(?___flmul+1)^0,c
  8415  001FC4  0E00               	movlw	0
  8416  001FC6  6E2A               	movwf	(?___flmul+2)^0,c
  8417  001FC8  0E00               	movlw	0
  8418  001FCA  6E2B               	movwf	(?___flmul+3)^0,c
  8419  001FCC  EF80  F011         	goto	l1337
  8420  001FD0                     l4101:
  8421  001FD0  502E               	movf	(___flmul@a+2)^0,w,c
  8422  001FD2  0228               	mulwf	___flmul@b^0,c
  8423  001FD4  CFF3 F03F          	movff	prodl,___flmul@temp
  8424  001FD8  CFF4 F040          	movff	prodh,___flmul@temp+1
  8425  001FDC  503F               	movf	___flmul@temp^0,w,c
  8426  001FDE  6E35               	movwf	___flmul@grs^0,c
  8427  001FE0  6A36               	clrf	(___flmul@grs+1)^0,c
  8428  001FE2  6A37               	clrf	(___flmul@grs+2)^0,c
  8429  001FE4  6A38               	clrf	(___flmul@grs+3)^0,c
  8430  001FE6  5040               	movf	(___flmul@temp+1)^0,w,c
  8431  001FE8  6E3B               	movwf	___flmul@prod^0,c
  8432  001FEA  6A3C               	clrf	(___flmul@prod+1)^0,c
  8433  001FEC  6A3D               	clrf	(___flmul@prod+2)^0,c
  8434  001FEE  6A3E               	clrf	(___flmul@prod+3)^0,c
  8435  001FF0  502D               	movf	(___flmul@a+1)^0,w,c
  8436  001FF2  0229               	mulwf	(___flmul@b+1)^0,c
  8437  001FF4  CFF3 F03F          	movff	prodl,___flmul@temp
  8438  001FF8  CFF4 F040          	movff	prodh,___flmul@temp+1
  8439  001FFC  503F               	movf	___flmul@temp^0,w,c
  8440  001FFE  2635               	addwf	___flmul@grs^0,f,c
  8441  002000  0E00               	movlw	0
  8442  002002  2236               	addwfc	(___flmul@grs+1)^0,f,c
  8443  002004  2237               	addwfc	(___flmul@grs+2)^0,f,c
  8444  002006  2238               	addwfc	(___flmul@grs+3)^0,f,c
  8445  002008  5040               	movf	(___flmul@temp+1)^0,w,c
  8446  00200A  263B               	addwf	___flmul@prod^0,f,c
  8447  00200C  0E00               	movlw	0
  8448  00200E  223C               	addwfc	(___flmul@prod+1)^0,f,c
  8449  002010  223D               	addwfc	(___flmul@prod+2)^0,f,c
  8450  002012  223E               	addwfc	(___flmul@prod+3)^0,f,c
  8451  002014  502C               	movf	___flmul@a^0,w,c
  8452  002016  022A               	mulwf	(___flmul@b+2)^0,c
  8453  002018  CFF3 F03F          	movff	prodl,___flmul@temp
  8454  00201C  CFF4 F040          	movff	prodh,___flmul@temp+1
  8455  002020  503F               	movf	___flmul@temp^0,w,c
  8456  002022  2635               	addwf	___flmul@grs^0,f,c
  8457  002024  0E00               	movlw	0
  8458  002026  2236               	addwfc	(___flmul@grs+1)^0,f,c
  8459  002028  2237               	addwfc	(___flmul@grs+2)^0,f,c
  8460  00202A  2238               	addwfc	(___flmul@grs+3)^0,f,c
  8461  00202C  5040               	movf	(___flmul@temp+1)^0,w,c
  8462  00202E  263B               	addwf	___flmul@prod^0,f,c
  8463  002030  0E00               	movlw	0
  8464  002032  223C               	addwfc	(___flmul@prod+1)^0,f,c
  8465  002034  223D               	addwfc	(___flmul@prod+2)^0,f,c
  8466  002036  223E               	addwfc	(___flmul@prod+3)^0,f,c
  8467  002038  C037  F038         	movff	___flmul@grs+2,___flmul@grs+3
  8468  00203C  C036  F037         	movff	___flmul@grs+1,___flmul@grs+2
  8469  002040  C035  F036         	movff	___flmul@grs,___flmul@grs+1
  8470  002044  6A35               	clrf	___flmul@grs^0,c
  8471  002046  502C               	movf	___flmul@a^0,w,c
  8472  002048  0229               	mulwf	(___flmul@b+1)^0,c
  8473  00204A  CFF3 F03F          	movff	prodl,___flmul@temp
  8474  00204E  CFF4 F040          	movff	prodh,___flmul@temp+1
  8475  002052  503F               	movf	___flmul@temp^0,w,c
  8476  002054  2635               	addwf	___flmul@grs^0,f,c
  8477  002056  5040               	movf	(___flmul@temp+1)^0,w,c
  8478  002058  2236               	addwfc	(___flmul@grs+1)^0,f,c
  8479  00205A  0E00               	movlw	0
  8480  00205C  2237               	addwfc	(___flmul@grs+2)^0,f,c
  8481  00205E  0E00               	movlw	0
  8482  002060  2238               	addwfc	(___flmul@grs+3)^0,f,c
  8483  002062  502D               	movf	(___flmul@a+1)^0,w,c
  8484  002064  0228               	mulwf	___flmul@b^0,c
  8485  002066  CFF3 F03F          	movff	prodl,___flmul@temp
  8486  00206A  CFF4 F040          	movff	prodh,___flmul@temp+1
  8487  00206E  503F               	movf	___flmul@temp^0,w,c
  8488  002070  2635               	addwf	___flmul@grs^0,f,c
  8489  002072  5040               	movf	(___flmul@temp+1)^0,w,c
  8490  002074  2236               	addwfc	(___flmul@grs+1)^0,f,c
  8491  002076  0E00               	movlw	0
  8492  002078  2237               	addwfc	(___flmul@grs+2)^0,f,c
  8493  00207A  0E00               	movlw	0
  8494  00207C  2238               	addwfc	(___flmul@grs+3)^0,f,c
  8495  00207E  C037  F038         	movff	___flmul@grs+2,___flmul@grs+3
  8496  002082  C036  F037         	movff	___flmul@grs+1,___flmul@grs+2
  8497  002086  C035  F036         	movff	___flmul@grs,___flmul@grs+1
  8498  00208A  6A35               	clrf	___flmul@grs^0,c
  8499  00208C  502C               	movf	___flmul@a^0,w,c
  8500  00208E  0228               	mulwf	___flmul@b^0,c
  8501  002090  CFF3 F03F          	movff	prodl,___flmul@temp
  8502  002094  CFF4 F040          	movff	prodh,___flmul@temp+1
  8503  002098  503F               	movf	___flmul@temp^0,w,c
  8504  00209A  2635               	addwf	___flmul@grs^0,f,c
  8505  00209C  5040               	movf	(___flmul@temp+1)^0,w,c
  8506  00209E  2236               	addwfc	(___flmul@grs+1)^0,f,c
  8507  0020A0  0E00               	movlw	0
  8508  0020A2  2237               	addwfc	(___flmul@grs+2)^0,f,c
  8509  0020A4  0E00               	movlw	0
  8510  0020A6  2238               	addwfc	(___flmul@grs+3)^0,f,c
  8511  0020A8  502E               	movf	(___flmul@a+2)^0,w,c
  8512  0020AA  0229               	mulwf	(___flmul@b+1)^0,c
  8513  0020AC  CFF3 F03F          	movff	prodl,___flmul@temp
  8514  0020B0  CFF4 F040          	movff	prodh,___flmul@temp+1
  8515  0020B4  503F               	movf	___flmul@temp^0,w,c
  8516  0020B6  263B               	addwf	___flmul@prod^0,f,c
  8517  0020B8  5040               	movf	(___flmul@temp+1)^0,w,c
  8518  0020BA  223C               	addwfc	(___flmul@prod+1)^0,f,c
  8519  0020BC  0E00               	movlw	0
  8520  0020BE  223D               	addwfc	(___flmul@prod+2)^0,f,c
  8521  0020C0  0E00               	movlw	0
  8522  0020C2  223E               	addwfc	(___flmul@prod+3)^0,f,c
  8523  0020C4  502D               	movf	(___flmul@a+1)^0,w,c
  8524  0020C6  022A               	mulwf	(___flmul@b+2)^0,c
  8525  0020C8  CFF3 F03F          	movff	prodl,___flmul@temp
  8526  0020CC  CFF4 F040          	movff	prodh,___flmul@temp+1
  8527  0020D0  503F               	movf	___flmul@temp^0,w,c
  8528  0020D2  263B               	addwf	___flmul@prod^0,f,c
  8529  0020D4  5040               	movf	(___flmul@temp+1)^0,w,c
  8530  0020D6  223C               	addwfc	(___flmul@prod+1)^0,f,c
  8531  0020D8  0E00               	movlw	0
  8532  0020DA  223D               	addwfc	(___flmul@prod+2)^0,f,c
  8533  0020DC  0E00               	movlw	0
  8534  0020DE  223E               	addwfc	(___flmul@prod+3)^0,f,c
  8535  0020E0  502E               	movf	(___flmul@a+2)^0,w,c
  8536  0020E2  022A               	mulwf	(___flmul@b+2)^0,c
  8537  0020E4  CFF3 F03F          	movff	prodl,___flmul@temp
  8538  0020E8  CFF4 F040          	movff	prodh,___flmul@temp+1
  8539  0020EC  503F               	movf	___flmul@temp^0,w,c
  8540  0020EE  6E30               	movwf	??___flmul^0,c
  8541  0020F0  5040               	movf	(___flmul@temp+1)^0,w,c
  8542  0020F2  6E31               	movwf	(??___flmul+1)^0,c
  8543  0020F4  6A32               	clrf	(??___flmul+2)^0,c
  8544  0020F6  6A33               	clrf	(??___flmul+3)^0,c
  8545  0020F8  C032  F033         	movff	??___flmul+2,??___flmul+3
  8546  0020FC  C031  F032         	movff	??___flmul+1,??___flmul+2
  8547  002100  C030  F031         	movff	??___flmul,??___flmul+1
  8548  002104  6A30               	clrf	??___flmul^0,c
  8549  002106  5030               	movf	??___flmul^0,w,c
  8550  002108  263B               	addwf	___flmul@prod^0,f,c
  8551  00210A  5031               	movf	(??___flmul+1)^0,w,c
  8552  00210C  223C               	addwfc	(___flmul@prod+1)^0,f,c
  8553  00210E  5032               	movf	(??___flmul+2)^0,w,c
  8554  002110  223D               	addwfc	(___flmul@prod+2)^0,f,c
  8555  002112  5033               	movf	(??___flmul+3)^0,w,c
  8556  002114  223E               	addwfc	(___flmul@prod+3)^0,f,c
  8557  002116  C035  F030         	movff	___flmul@grs,??___flmul
  8558  00211A  C036  F031         	movff	___flmul@grs+1,??___flmul+1
  8559  00211E  C037  F032         	movff	___flmul@grs+2,??___flmul+2
  8560  002122  C038  F033         	movff	___flmul@grs+3,??___flmul+3
  8561  002126  0E19               	movlw	25
  8562  002128  EF9B  F010         	goto	u3950
  8563  00212C                     u3955:
  8564  00212C  90D8               	bcf	status,0,c
  8565  00212E  3233               	rrcf	(??___flmul+3)^0,f,c
  8566  002130  3232               	rrcf	(??___flmul+2)^0,f,c
  8567  002132  3231               	rrcf	(??___flmul+1)^0,f,c
  8568  002134  3230               	rrcf	??___flmul^0,f,c
  8569  002136                     u3950:
  8570  002136  2EE8               	decfsz	wreg,f,c
  8571  002138  EF96  F010         	goto	u3955
  8572  00213C  5030               	movf	??___flmul^0,w,c
  8573  00213E  263B               	addwf	___flmul@prod^0,f,c
  8574  002140  5031               	movf	(??___flmul+1)^0,w,c
  8575  002142  223C               	addwfc	(___flmul@prod+1)^0,f,c
  8576  002144  5032               	movf	(??___flmul+2)^0,w,c
  8577  002146  223D               	addwfc	(___flmul@prod+2)^0,f,c
  8578  002148  5033               	movf	(??___flmul+3)^0,w,c
  8579  00214A  223E               	addwfc	(___flmul@prod+3)^0,f,c
  8580  00214C  C037  F038         	movff	___flmul@grs+2,___flmul@grs+3
  8581  002150  C036  F037         	movff	___flmul@grs+1,___flmul@grs+2
  8582  002154  C035  F036         	movff	___flmul@grs,___flmul@grs+1
  8583  002158  6A35               	clrf	___flmul@grs^0,c
  8584  00215A  5039               	movf	___flmul@aexp^0,w,c
  8585  00215C  C03A  F030         	movff	___flmul@bexp,??___flmul
  8586  002160  6A31               	clrf	(??___flmul+1)^0,c
  8587  002162  2630               	addwf	??___flmul^0,f,c
  8588  002164  0E00               	movlw	0
  8589  002166  2231               	addwfc	(??___flmul+1)^0,f,c
  8590  002168  0E82               	movlw	130
  8591  00216A  2430               	addwf	??___flmul^0,w,c
  8592  00216C  6E3F               	movwf	___flmul@temp^0,c
  8593  00216E  0EFF               	movlw	255
  8594  002170  2031               	addwfc	(??___flmul+1)^0,w,c
  8595  002172  6E40               	movwf	(___flmul@temp+1)^0,c
  8596  002174  EFD1  F010         	goto	l4149
  8597  002178                     l4143:
  8598  002178  90D8               	bcf	status,0,c
  8599  00217A  363B               	rlcf	___flmul@prod^0,f,c
  8600  00217C  363C               	rlcf	(___flmul@prod+1)^0,f,c
  8601  00217E  363D               	rlcf	(___flmul@prod+2)^0,f,c
  8602  002180  363E               	rlcf	(___flmul@prod+3)^0,f,c
  8603  002182  AE38               	btfss	(___flmul@grs+3)^0,7,c
  8604  002184  EFC6  F010         	goto	u3961
  8605  002188  EFC8  F010         	goto	u3960
  8606  00218C                     u3961:
  8607  00218C  EFC9  F010         	goto	l1340
  8608  002190                     u3960:
  8609  002190  803B               	bsf	___flmul@prod^0,0,c
  8610  002192                     l1340:
  8611  002192  90D8               	bcf	status,0,c
  8612  002194  3635               	rlcf	___flmul@grs^0,f,c
  8613  002196  3636               	rlcf	(___flmul@grs+1)^0,f,c
  8614  002198  3637               	rlcf	(___flmul@grs+2)^0,f,c
  8615  00219A  3638               	rlcf	(___flmul@grs+3)^0,f,c
  8616  00219C  063F               	decf	___flmul@temp^0,f,c
  8617  00219E  A0D8               	btfss	status,0,c
  8618  0021A0  0640               	decf	(___flmul@temp+1)^0,f,c
  8619  0021A2                     l4149:
  8620  0021A2  AE3D               	btfss	(___flmul@prod+2)^0,7,c
  8621  0021A4  EFD6  F010         	goto	u3971
  8622  0021A8  EFD8  F010         	goto	u3970
  8623  0021AC                     u3971:
  8624  0021AC  EFBC  F010         	goto	l4143
  8625  0021B0                     u3970:
  8626  0021B0  0E00               	movlw	0
  8627  0021B2  6E39               	movwf	___flmul@aexp^0,c
  8628  0021B4  AE38               	btfss	(___flmul@grs+3)^0,7,c
  8629  0021B6  EFDF  F010         	goto	u3981
  8630  0021BA  EFE1  F010         	goto	u3980
  8631  0021BE                     u3981:
  8632  0021BE  EF05  F011         	goto	l1342
  8633  0021C2                     u3980:
  8634  0021C2  0EFF               	movlw	255
  8635  0021C4  1435               	andwf	___flmul@grs^0,w,c
  8636  0021C6  6E30               	movwf	??___flmul^0,c
  8637  0021C8  0EFF               	movlw	255
  8638  0021CA  1436               	andwf	(___flmul@grs+1)^0,w,c
  8639  0021CC  6E31               	movwf	(??___flmul+1)^0,c
  8640  0021CE  0EFF               	movlw	255
  8641  0021D0  1437               	andwf	(___flmul@grs+2)^0,w,c
  8642  0021D2  6E32               	movwf	(??___flmul+2)^0,c
  8643  0021D4  0E7F               	movlw	127
  8644  0021D6  1438               	andwf	(___flmul@grs+3)^0,w,c
  8645  0021D8  6E33               	movwf	(??___flmul+3)^0,c
  8646  0021DA  5030               	movf	??___flmul^0,w,c
  8647  0021DC  1031               	iorwf	(??___flmul+1)^0,w,c
  8648  0021DE  1032               	iorwf	(??___flmul+2)^0,w,c
  8649  0021E0  1033               	iorwf	(??___flmul+3)^0,w,c
  8650  0021E2  B4D8               	btfsc	status,2,c
  8651  0021E4  EFF6  F010         	goto	u3991
  8652  0021E8  EFF8  F010         	goto	u3990
  8653  0021EC                     u3991:
  8654  0021EC  EFFC  F010         	goto	l1343
  8655  0021F0                     u3990:
  8656  0021F0                     l4157:
  8657  0021F0  0E01               	movlw	1
  8658  0021F2  6E39               	movwf	___flmul@aexp^0,c
  8659  0021F4  EF05  F011         	goto	l1342
  8660  0021F8                     l1343:
  8661  0021F8  A03B               	btfss	___flmul@prod^0,0,c
  8662  0021FA  EF01  F011         	goto	u4001
  8663  0021FE  EF03  F011         	goto	u4000
  8664  002202                     u4001:
  8665  002202  EF05  F011         	goto	l1342
  8666  002206                     u4000:
  8667  002206  EFF8  F010         	goto	l4157
  8668  00220A                     l1342:
  8669  00220A  5039               	movf	___flmul@aexp^0,w,c
  8670  00220C  B4D8               	btfsc	status,2,c
  8671  00220E  EF0B  F011         	goto	u4011
  8672  002212  EF0D  F011         	goto	u4010
  8673  002216                     u4011:
  8674  002216  EF31  F011         	goto	l4169
  8675  00221A                     u4010:
  8676  00221A  0E01               	movlw	1
  8677  00221C  263B               	addwf	___flmul@prod^0,f,c
  8678  00221E  0E00               	movlw	0
  8679  002220  223C               	addwfc	(___flmul@prod+1)^0,f,c
  8680  002222  223D               	addwfc	(___flmul@prod+2)^0,f,c
  8681  002224  223E               	addwfc	(___flmul@prod+3)^0,f,c
  8682  002226  A03E               	btfss	(___flmul@prod+3)^0,0,c
  8683  002228  EF18  F011         	goto	u4021
  8684  00222C  EF1A  F011         	goto	u4020
  8685  002230                     u4021:
  8686  002230  EF31  F011         	goto	l4169
  8687  002234                     u4020:
  8688  002234  C03B  F030         	movff	___flmul@prod,??___flmul
  8689  002238  C03C  F031         	movff	___flmul@prod+1,??___flmul+1
  8690  00223C  C03D  F032         	movff	___flmul@prod+2,??___flmul+2
  8691  002240  C03E  F033         	movff	___flmul@prod+3,??___flmul+3
  8692  002244  3433               	rlcf	(??___flmul+3)^0,w,c
  8693  002246  3233               	rrcf	(??___flmul+3)^0,f,c
  8694  002248  3232               	rrcf	(??___flmul+2)^0,f,c
  8695  00224A  3231               	rrcf	(??___flmul+1)^0,f,c
  8696  00224C  3230               	rrcf	??___flmul^0,f,c
  8697  00224E  C030  F03B         	movff	??___flmul,___flmul@prod
  8698  002252  C031  F03C         	movff	??___flmul+1,___flmul@prod+1
  8699  002256  C032  F03D         	movff	??___flmul+2,___flmul@prod+2
  8700  00225A  C033  F03E         	movff	??___flmul+3,___flmul@prod+3
  8701  00225E  4A3F               	infsnz	___flmul@temp^0,f,c
  8702  002260  2A40               	incf	(___flmul@temp+1)^0,f,c
  8703  002262                     l4169:
  8704  002262  BE40               	btfsc	(___flmul@temp+1)^0,7,c
  8705  002264  EF3C  F011         	goto	u4031
  8706  002268  5040               	movf	(___flmul@temp+1)^0,w,c
  8707  00226A  E108               	bnz	u4030
  8708  00226C  283F               	incf	___flmul@temp^0,w,c
  8709  00226E  A0D8               	btfss	status,0,c
  8710  002270  EF3C  F011         	goto	u4031
  8711  002274  EF3E  F011         	goto	u4030
  8712  002278                     u4031:
  8713  002278  EF48  F011         	goto	l4173
  8714  00227C                     u4030:
  8715  00227C  0E00               	movlw	0
  8716  00227E  6E3B               	movwf	___flmul@prod^0,c
  8717  002280  0E00               	movlw	0
  8718  002282  6E3C               	movwf	(___flmul@prod+1)^0,c
  8719  002284  0E80               	movlw	128
  8720  002286  6E3D               	movwf	(___flmul@prod+2)^0,c
  8721  002288  0E7F               	movlw	127
  8722  00228A  6E3E               	movwf	(___flmul@prod+3)^0,c
  8723  00228C  EF76  F011         	goto	l4185
  8724  002290                     l4173:
  8725  002290  BE40               	btfsc	(___flmul@temp+1)^0,7,c
  8726  002292  EF55  F011         	goto	u4040
  8727  002296  5040               	movf	(___flmul@temp+1)^0,w,c
  8728  002298  E106               	bnz	u4041
  8729  00229A  043F               	decf	___flmul@temp^0,w,c
  8730  00229C  B0D8               	btfsc	status,0,c
  8731  00229E  EF53  F011         	goto	u4041
  8732  0022A2  EF55  F011         	goto	u4040
  8733  0022A6                     u4041:
  8734  0022A6  EF61  F011         	goto	l1350
  8735  0022AA                     u4040:
  8736  0022AA  0E00               	movlw	0
  8737  0022AC  6E3B               	movwf	___flmul@prod^0,c
  8738  0022AE  0E00               	movlw	0
  8739  0022B0  6E3C               	movwf	(___flmul@prod+1)^0,c
  8740  0022B2  0E00               	movlw	0
  8741  0022B4  6E3D               	movwf	(___flmul@prod+2)^0,c
  8742  0022B6  0E00               	movlw	0
  8743  0022B8  6E3E               	movwf	(___flmul@prod+3)^0,c
  8744  0022BA  0E00               	movlw	0
  8745  0022BC  6E34               	movwf	___flmul@sign^0,c
  8746  0022BE  EF76  F011         	goto	l4185
  8747  0022C2                     l1350:
  8748  0022C2  C03F  F03A         	movff	___flmul@temp,___flmul@bexp
  8749  0022C6  0EFF               	movlw	255
  8750  0022C8  163B               	andwf	___flmul@prod^0,f,c
  8751  0022CA  0EFF               	movlw	255
  8752  0022CC  163C               	andwf	(___flmul@prod+1)^0,f,c
  8753  0022CE  0E7F               	movlw	127
  8754  0022D0  163D               	andwf	(___flmul@prod+2)^0,f,c
  8755  0022D2  0E00               	movlw	0
  8756  0022D4  163E               	andwf	(___flmul@prod+3)^0,f,c
  8757  0022D6  A03A               	btfss	___flmul@bexp^0,0,c
  8758  0022D8  EF70  F011         	goto	u4051
  8759  0022DC  EF72  F011         	goto	u4050
  8760  0022E0                     u4051:
  8761  0022E0  EF73  F011         	goto	l4183
  8762  0022E4                     u4050:
  8763  0022E4  8E3D               	bsf	(___flmul@prod+2)^0,7,c
  8764  0022E6                     l4183:
  8765  0022E6  90D8               	bcf	status,0,c
  8766  0022E8  303A               	rrcf	___flmul@bexp^0,w,c
  8767  0022EA  6E3E               	movwf	(___flmul@prod+3)^0,c
  8768  0022EC                     l4185:
  8769  0022EC  5034               	movf	___flmul@sign^0,w,c
  8770  0022EE  123E               	iorwf	(___flmul@prod+3)^0,f,c
  8771  0022F0  C03B  F028         	movff	___flmul@prod,?___flmul
  8772  0022F4  C03C  F029         	movff	___flmul@prod+1,?___flmul+1
  8773  0022F8  C03D  F02A         	movff	___flmul@prod+2,?___flmul+2
  8774  0022FC  C03E  F02B         	movff	___flmul@prod+3,?___flmul+3
  8775  002300                     l1337:
  8776  002300  0012               	return		;funcret
  8777  002302                     __end_of___flmul:
  8778                           	callstack 0
  8779                           
  8780 ;; *************** function ___flge *****************
  8781 ;; Defined at:
  8782 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\flge.c"
  8783 ;; Parameters:    Size  Location     Type
  8784 ;;  ff1             4    0[COMRAM] unsigned char 
  8785 ;;  ff2             4    4[COMRAM] unsigned char 
  8786 ;; Auto vars:     Size  Location     Type
  8787 ;;		None
  8788 ;; Return value:  Size  Location     Type
  8789 ;;		None               void
  8790 ;; Registers used:
  8791 ;;		wreg, status,2, status,0
  8792 ;; Tracked objects:
  8793 ;;		On entry : 0/0
  8794 ;;		On exit  : 0/0
  8795 ;;		Unchanged: 0/0
  8796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8797 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8798 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8799 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8800 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8801 ;;Total ram usage:       12 bytes
  8802 ;; Hardware stack levels used: 1
  8803 ;; Hardware stack levels required when called: 1
  8804 ;; This function calls:
  8805 ;;		Nothing
  8806 ;; This function is called by:
  8807 ;;		_roundf
  8808 ;; This function uses a non-reentrant model
  8809 ;;
  8810                           
  8811                           	psect	text39
  8812  004C76                     __ptext39:
  8813                           	callstack 0
  8814  004C76                     ___flge:
  8815                           	callstack 25
  8816  004C76  0E00               	movlw	0
  8817  004C78  1401               	andwf	___flge@ff1^0,w,c
  8818  004C7A  6E09               	movwf	??___flge^0,c
  8819  004C7C  0E00               	movlw	0
  8820  004C7E  1402               	andwf	(___flge@ff1+1)^0,w,c
  8821  004C80  6E0A               	movwf	(??___flge+1)^0,c
  8822  004C82  0E80               	movlw	128
  8823  004C84  1403               	andwf	(___flge@ff1+2)^0,w,c
  8824  004C86  6E0B               	movwf	(??___flge+2)^0,c
  8825  004C88  0E7F               	movlw	127
  8826  004C8A  1404               	andwf	(___flge@ff1+3)^0,w,c
  8827  004C8C  6E0C               	movwf	(??___flge+3)^0,c
  8828  004C8E  5009               	movf	??___flge^0,w,c
  8829  004C90  100A               	iorwf	(??___flge+1)^0,w,c
  8830  004C92  100B               	iorwf	(??___flge+2)^0,w,c
  8831  004C94  100C               	iorwf	(??___flge+3)^0,w,c
  8832  004C96  A4D8               	btfss	status,2,c
  8833  004C98  EF50  F026         	goto	u4061
  8834  004C9C  EF52  F026         	goto	u4060
  8835  004CA0                     u4061:
  8836  004CA0  EF5A  F026         	goto	l4201
  8837  004CA4                     u4060:
  8838  004CA4  0E00               	movlw	0
  8839  004CA6  6E01               	movwf	___flge@ff1^0,c
  8840  004CA8  0E00               	movlw	0
  8841  004CAA  6E02               	movwf	(___flge@ff1+1)^0,c
  8842  004CAC  0E00               	movlw	0
  8843  004CAE  6E03               	movwf	(___flge@ff1+2)^0,c
  8844  004CB0  0E00               	movlw	0
  8845  004CB2  6E04               	movwf	(___flge@ff1+3)^0,c
  8846  004CB4                     l4201:
  8847  004CB4  0E00               	movlw	0
  8848  004CB6  1405               	andwf	___flge@ff2^0,w,c
  8849  004CB8  6E09               	movwf	??___flge^0,c
  8850  004CBA  0E00               	movlw	0
  8851  004CBC  1406               	andwf	(___flge@ff2+1)^0,w,c
  8852  004CBE  6E0A               	movwf	(??___flge+1)^0,c
  8853  004CC0  0E80               	movlw	128
  8854  004CC2  1407               	andwf	(___flge@ff2+2)^0,w,c
  8855  004CC4  6E0B               	movwf	(??___flge+2)^0,c
  8856  004CC6  0E7F               	movlw	127
  8857  004CC8  1408               	andwf	(___flge@ff2+3)^0,w,c
  8858  004CCA  6E0C               	movwf	(??___flge+3)^0,c
  8859  004CCC  5009               	movf	??___flge^0,w,c
  8860  004CCE  100A               	iorwf	(??___flge+1)^0,w,c
  8861  004CD0  100B               	iorwf	(??___flge+2)^0,w,c
  8862  004CD2  100C               	iorwf	(??___flge+3)^0,w,c
  8863  004CD4  A4D8               	btfss	status,2,c
  8864  004CD6  EF6F  F026         	goto	u4071
  8865  004CDA  EF71  F026         	goto	u4070
  8866  004CDE                     u4071:
  8867  004CDE  EF79  F026         	goto	l4205
  8868  004CE2                     u4070:
  8869  004CE2  0E00               	movlw	0
  8870  004CE4  6E05               	movwf	___flge@ff2^0,c
  8871  004CE6  0E00               	movlw	0
  8872  004CE8  6E06               	movwf	(___flge@ff2+1)^0,c
  8873  004CEA  0E00               	movlw	0
  8874  004CEC  6E07               	movwf	(___flge@ff2+2)^0,c
  8875  004CEE  0E00               	movlw	0
  8876  004CF0  6E08               	movwf	(___flge@ff2+3)^0,c
  8877  004CF2                     l4205:
  8878  004CF2  AE04               	btfss	(___flge@ff1+3)^0,7,c
  8879  004CF4  EF7E  F026         	goto	u4081
  8880  004CF8  EF80  F026         	goto	u4080
  8881  004CFC                     u4081:
  8882  004CFC  EF89  F026         	goto	l4209
  8883  004D00                     u4080:
  8884  004D00  6C01               	negf	___flge@ff1^0,c
  8885  004D02  1E02               	comf	(___flge@ff1+1)^0,f,c
  8886  004D04  B0D8               	btfsc	status,0,c
  8887  004D06  2A02               	incf	(___flge@ff1+1)^0,f,c
  8888  004D08  1E03               	comf	(___flge@ff1+2)^0,f,c
  8889  004D0A  B0D8               	btfsc	status,0,c
  8890  004D0C  2A03               	incf	(___flge@ff1+2)^0,f,c
  8891  004D0E  0E80               	movlw	128
  8892  004D10  5604               	subfwb	(___flge@ff1+3)^0,f,c
  8893  004D12                     l4209:
  8894  004D12  AE08               	btfss	(___flge@ff2+3)^0,7,c
  8895  004D14  EF8E  F026         	goto	u4091
  8896  004D18  EF90  F026         	goto	u4090
  8897  004D1C                     u4091:
  8898  004D1C  EF99  F026         	goto	l984
  8899  004D20                     u4090:
  8900  004D20  6C05               	negf	___flge@ff2^0,c
  8901  004D22  1E06               	comf	(___flge@ff2+1)^0,f,c
  8902  004D24  B0D8               	btfsc	status,0,c
  8903  004D26  2A06               	incf	(___flge@ff2+1)^0,f,c
  8904  004D28  1E07               	comf	(___flge@ff2+2)^0,f,c
  8905  004D2A  B0D8               	btfsc	status,0,c
  8906  004D2C  2A07               	incf	(___flge@ff2+2)^0,f,c
  8907  004D2E  0E80               	movlw	128
  8908  004D30  5608               	subfwb	(___flge@ff2+3)^0,f,c
  8909  004D32                     l984:
  8910  004D32  0E00               	movlw	0
  8911  004D34  1A01               	xorwf	___flge@ff1^0,f,c
  8912  004D36  0E00               	movlw	0
  8913  004D38  1A02               	xorwf	(___flge@ff1+1)^0,f,c
  8914  004D3A  0E00               	movlw	0
  8915  004D3C  1A03               	xorwf	(___flge@ff1+2)^0,f,c
  8916  004D3E  0E80               	movlw	128
  8917  004D40  1A04               	xorwf	(___flge@ff1+3)^0,f,c
  8918  004D42  0E00               	movlw	0
  8919  004D44  1A05               	xorwf	___flge@ff2^0,f,c
  8920  004D46  0E00               	movlw	0
  8921  004D48  1A06               	xorwf	(___flge@ff2+1)^0,f,c
  8922  004D4A  0E00               	movlw	0
  8923  004D4C  1A07               	xorwf	(___flge@ff2+2)^0,f,c
  8924  004D4E  0E80               	movlw	128
  8925  004D50  1A08               	xorwf	(___flge@ff2+3)^0,f,c
  8926  004D52  5005               	movf	___flge@ff2^0,w,c
  8927  004D54  5C01               	subwf	___flge@ff1^0,w,c
  8928  004D56  5006               	movf	(___flge@ff2+1)^0,w,c
  8929  004D58  5802               	subwfb	(___flge@ff1+1)^0,w,c
  8930  004D5A  5007               	movf	(___flge@ff2+2)^0,w,c
  8931  004D5C  5803               	subwfb	(___flge@ff1+2)^0,w,c
  8932  004D5E  5008               	movf	(___flge@ff2+3)^0,w,c
  8933  004D60  5804               	subwfb	(___flge@ff1+3)^0,w,c
  8934  004D62  B0D8               	btfsc	status,0,c
  8935  004D64  EFB6  F026         	goto	u4101
  8936  004D68  EFB8  F026         	goto	u4100
  8937  004D6C                     u4101:
  8938  004D6C  EFBB  F026         	goto	l4215
  8939  004D70                     u4100:
  8940  004D70  90D8               	bcf	status,0,c
  8941  004D72  EFBC  F026         	goto	l989
  8942  004D76                     l4215:
  8943  004D76  80D8               	bsf	status,0,c
  8944  004D78                     l989:
  8945  004D78  0012               	return		;funcret
  8946  004D7A                     __end_of___flge:
  8947                           	callstack 0
  8948                           
  8949 ;; *************** function ___fltol *****************
  8950 ;; Defined at:
  8951 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\fltol.c"
  8952 ;; Parameters:    Size  Location     Type
  8953 ;;  f1              4   90[COMRAM] unsigned char 
  8954 ;; Auto vars:     Size  Location     Type
  8955 ;;  exp1            1    5[BANK0 ] unsigned char 
  8956 ;;  sign1           1    4[BANK0 ] unsigned char 
  8957 ;; Return value:  Size  Location     Type
  8958 ;;                  4   90[COMRAM] long 
  8959 ;; Registers used:
  8960 ;;		wreg, status,2, status,0
  8961 ;; Tracked objects:
  8962 ;;		On entry : 0/0
  8963 ;;		On exit  : 0/0
  8964 ;;		Unchanged: 0/0
  8965 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8966 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8967 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8968 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8969 ;;      Totals:         4       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8970 ;;Total ram usage:       10 bytes
  8971 ;; Hardware stack levels used: 1
  8972 ;; Hardware stack levels required when called: 1
  8973 ;; This function calls:
  8974 ;;		Nothing
  8975 ;; This function is called by:
  8976 ;;		_lroundf
  8977 ;; This function uses a non-reentrant model
  8978 ;;
  8979                           
  8980                           	psect	text40
  8981  004B6E                     __ptext40:
  8982                           	callstack 0
  8983  004B6E                     ___fltol:
  8984                           	callstack 26
  8985  004B6E  345D               	rlcf	(___fltol@f1+2)^0,w,c
  8986  004B70  345E               	rlcf	(___fltol@f1+3)^0,w,c
  8987  004B72  0100               	movlb	0	; () banked
  8988  004B74  6F65               	movwf	___fltol@exp1& (0+255),b
  8989  004B76  5165               	movf	___fltol@exp1& (0+255),w,b
  8990  004B78  A4D8               	btfss	status,2,c
  8991  004B7A  EFC1  F025         	goto	u4221
  8992  004B7E  EFC3  F025         	goto	u4220
  8993  004B82                     u4221:
  8994  004B82  EFCD  F025         	goto	l4335
  8995  004B86                     u4220:
  8996  004B86                     l4331:
  8997                           
  8998                           ; BSR set to: 0
  8999  004B86  0E00               	movlw	0
  9000  004B88  6E5B               	movwf	?___fltol^0,c
  9001  004B8A  0E00               	movlw	0
  9002  004B8C  6E5C               	movwf	(?___fltol+1)^0,c
  9003  004B8E  0E00               	movlw	0
  9004  004B90  6E5D               	movwf	(?___fltol+2)^0,c
  9005  004B92  0E00               	movlw	0
  9006  004B94  6E5E               	movwf	(?___fltol+3)^0,c
  9007  004B96  EF3A  F026         	goto	l1016
  9008  004B9A                     l4335:
  9009                           
  9010                           ; BSR set to: 0
  9011  004B9A  C05B  F060         	movff	___fltol@f1,??___fltol
  9012  004B9E  C05C  F061         	movff	___fltol@f1+1,??___fltol+1
  9013  004BA2  C05D  F062         	movff	___fltol@f1+2,??___fltol+2
  9014  004BA6  C05E  F063         	movff	___fltol@f1+3,??___fltol+3
  9015  004BAA  0E20               	movlw	32
  9016  004BAC  EFDD  F025         	goto	u4230
  9017  004BB0                     u4235:
  9018  004BB0  90D8               	bcf	status,0,c
  9019  004BB2  3363               	rrcf	(??___fltol+3)& (0+255),f,b
  9020  004BB4  3362               	rrcf	(??___fltol+2)& (0+255),f,b
  9021  004BB6  3361               	rrcf	(??___fltol+1)& (0+255),f,b
  9022  004BB8  3360               	rrcf	??___fltol& (0+255),f,b
  9023  004BBA                     u4230:
  9024  004BBA  2EE8               	decfsz	wreg,f,c
  9025  004BBC  EFD8  F025         	goto	u4235
  9026  004BC0  5160               	movf	??___fltol& (0+255),w,b
  9027  004BC2  6F64               	movwf	___fltol@sign1& (0+255),b
  9028  004BC4                     
  9029                           ; BSR set to: 0
  9030  004BC4  8E5D               	bsf	(___fltol@f1+2)^0,7,c
  9031  004BC6                     
  9032                           ; BSR set to: 0
  9033  004BC6  0EFF               	movlw	255
  9034  004BC8  165B               	andwf	___fltol@f1^0,f,c
  9035  004BCA  0EFF               	movlw	255
  9036  004BCC  165C               	andwf	(___fltol@f1+1)^0,f,c
  9037  004BCE  0EFF               	movlw	255
  9038  004BD0  165D               	andwf	(___fltol@f1+2)^0,f,c
  9039  004BD2  0E00               	movlw	0
  9040  004BD4  165E               	andwf	(___fltol@f1+3)^0,f,c
  9041  004BD6                     
  9042                           ; BSR set to: 0
  9043  004BD6  0E96               	movlw	150
  9044  004BD8  5F65               	subwf	___fltol@exp1& (0+255),f,b
  9045  004BDA                     
  9046                           ; BSR set to: 0
  9047  004BDA  BF65               	btfsc	___fltol@exp1& (0+255),7,b
  9048  004BDC  EFF4  F025         	goto	u4240
  9049  004BE0  EFF2  F025         	goto	u4241
  9050  004BE4                     u4241:
  9051  004BE4  EF0A  F026         	goto	l4355
  9052  004BE8                     u4240:
  9053  004BE8                     
  9054                           ; BSR set to: 0
  9055  004BE8  5165               	movf	___fltol@exp1& (0+255),w,b
  9056  004BEA  0A80               	xorlw	128
  9057  004BEC  0F97               	addlw	151
  9058  004BEE  B0D8               	btfsc	status,0,c
  9059  004BF0  EFFC  F025         	goto	u4251
  9060  004BF4  EFFE  F025         	goto	u4250
  9061  004BF8                     u4251:
  9062  004BF8  EF00  F026         	goto	l4351
  9063  004BFC                     u4250:
  9064  004BFC  EFC3  F025         	goto	l4331
  9065  004C00                     l4351:
  9066                           
  9067                           ; BSR set to: 0
  9068  004C00  90D8               	bcf	status,0,c
  9069  004C02  325E               	rrcf	(___fltol@f1+3)^0,f,c
  9070  004C04  325D               	rrcf	(___fltol@f1+2)^0,f,c
  9071  004C06  325C               	rrcf	(___fltol@f1+1)^0,f,c
  9072  004C08  325B               	rrcf	___fltol@f1^0,f,c
  9073  004C0A                     
  9074                           ; BSR set to: 0
  9075  004C0A  3F65               	incfsz	___fltol@exp1& (0+255),f,b
  9076  004C0C  EF00  F026         	goto	l4351
  9077  004C10  EF22  F026         	goto	l4365
  9078  004C14                     l4355:
  9079                           
  9080                           ; BSR set to: 0
  9081  004C14  0E1F               	movlw	31
  9082  004C16  6565               	cpfsgt	___fltol@exp1& (0+255),b
  9083  004C18  EF10  F026         	goto	u4261
  9084  004C1C  EF12  F026         	goto	u4260
  9085  004C20                     u4261:
  9086  004C20  EF1A  F026         	goto	l4363
  9087  004C24                     u4260:
  9088  004C24  EFC3  F025         	goto	l4331
  9089  004C28                     l4361:
  9090                           
  9091                           ; BSR set to: 0
  9092  004C28  90D8               	bcf	status,0,c
  9093  004C2A  365B               	rlcf	___fltol@f1^0,f,c
  9094  004C2C  365C               	rlcf	(___fltol@f1+1)^0,f,c
  9095  004C2E  365D               	rlcf	(___fltol@f1+2)^0,f,c
  9096  004C30  365E               	rlcf	(___fltol@f1+3)^0,f,c
  9097  004C32  0765               	decf	___fltol@exp1& (0+255),f,b
  9098  004C34                     l4363:
  9099                           
  9100                           ; BSR set to: 0
  9101  004C34  5165               	movf	___fltol@exp1& (0+255),w,b
  9102  004C36  A4D8               	btfss	status,2,c
  9103  004C38  EF20  F026         	goto	u4271
  9104  004C3C  EF22  F026         	goto	u4270
  9105  004C40                     u4271:
  9106  004C40  EF14  F026         	goto	l4361
  9107  004C44                     u4270:
  9108  004C44                     l4365:
  9109                           
  9110                           ; BSR set to: 0
  9111  004C44  5164               	movf	___fltol@sign1& (0+255),w,b
  9112  004C46  B4D8               	btfsc	status,2,c
  9113  004C48  EF28  F026         	goto	u4281
  9114  004C4C  EF2A  F026         	goto	u4280
  9115  004C50                     u4281:
  9116  004C50  EF32  F026         	goto	l4369
  9117  004C54                     u4280:
  9118  004C54                     
  9119                           ; BSR set to: 0
  9120  004C54  1E5E               	comf	(___fltol@f1+3)^0,f,c
  9121  004C56  1E5D               	comf	(___fltol@f1+2)^0,f,c
  9122  004C58  1E5C               	comf	(___fltol@f1+1)^0,f,c
  9123  004C5A  6C5B               	negf	___fltol@f1^0,c
  9124  004C5C  0E00               	movlw	0
  9125  004C5E  225C               	addwfc	(___fltol@f1+1)^0,f,c
  9126  004C60  225D               	addwfc	(___fltol@f1+2)^0,f,c
  9127  004C62  225E               	addwfc	(___fltol@f1+3)^0,f,c
  9128  004C64                     l4369:
  9129                           
  9130                           ; BSR set to: 0
  9131  004C64  C05B  F05B         	movff	___fltol@f1,?___fltol
  9132  004C68  C05C  F05C         	movff	___fltol@f1+1,?___fltol+1
  9133  004C6C  C05D  F05D         	movff	___fltol@f1+2,?___fltol+2
  9134  004C70  C05E  F05E         	movff	___fltol@f1+3,?___fltol+3
  9135  004C74                     l1016:
  9136                           
  9137                           ; BSR set to: 0
  9138  004C74  0012               	return		;funcret
  9139  004C76                     __end_of___fltol:
  9140                           	callstack 0
  9141                           
  9142 ;; *************** function _color_read_Clear *****************
  9143 ;; Defined at:
  9144 ;;		line 133 in file "color.c"
  9145 ;; Parameters:    Size  Location     Type
  9146 ;;		None
  9147 ;; Auto vars:     Size  Location     Type
  9148 ;;  tmp             2    9[COMRAM] unsigned int 
  9149 ;; Return value:  Size  Location     Type
  9150 ;;                  2    4[COMRAM] unsigned int 
  9151 ;; Registers used:
  9152 ;;		wreg, status,2, status,0, cstack
  9153 ;; Tracked objects:
  9154 ;;		On entry : 0/0
  9155 ;;		On exit  : 0/0
  9156 ;;		Unchanged: 0/0
  9157 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9158 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9159 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9160 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9161 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9162 ;;Total ram usage:        7 bytes
  9163 ;; Hardware stack levels used: 1
  9164 ;; Hardware stack levels required when called: 3
  9165 ;; This function calls:
  9166 ;;		_I2C_2_Master_Read
  9167 ;;		_I2C_2_Master_RepStart
  9168 ;;		_I2C_2_Master_Start
  9169 ;;		_I2C_2_Master_Stop
  9170 ;;		_I2C_2_Master_Write
  9171 ;; This function is called by:
  9172 ;;		_read_color
  9173 ;;		_calibrate_white
  9174 ;;		_amb_light_measure
  9175 ;;		_distance_measure
  9176 ;; This function uses a non-reentrant model
  9177 ;;
  9178                           
  9179                           	psect	text41
  9180  00571E                     __ptext41:
  9181                           	callstack 0
  9182  00571E                     _color_read_Clear:
  9183                           	callstack 24
  9184  00571E                     
  9185                           ;color.c: 135:  unsigned int tmp;;color.c: 136:  I2C_2_Master_Start();
  9186  00571E  ECC0  F02E         	call	_I2C_2_Master_Start	;wreg free
  9187                           
  9188                           ;color.c: 137:  I2C_2_Master_Write(0x52 | 0x00);
  9189  005722  0E52               	movlw	82
  9190  005724  ECAA  F02E         	call	_I2C_2_Master_Write
  9191                           
  9192                           ;color.c: 138:  I2C_2_Master_Write(0xA0 | 0x14);
  9193  005728  0EB4               	movlw	180
  9194  00572A  ECAA  F02E         	call	_I2C_2_Master_Write
  9195                           
  9196                           ;color.c: 139:  I2C_2_Master_RepStart();
  9197  00572E  ECB6  F02E         	call	_I2C_2_Master_RepStart	;wreg free
  9198                           
  9199                           ;color.c: 140:  I2C_2_Master_Write(0x52 | 0x01);
  9200  005732  0E53               	movlw	83
  9201  005734  ECAA  F02E         	call	_I2C_2_Master_Write
  9202                           
  9203                           ;color.c: 141:  tmp=I2C_2_Master_Read(1);
  9204  005738  0E01               	movlw	1
  9205  00573A  EC1F  F02C         	call	_I2C_2_Master_Read
  9206  00573E  6E07               	movwf	??_color_read_Clear^0,c
  9207  005740  5007               	movf	??_color_read_Clear^0,w,c
  9208  005742  6E0A               	movwf	color_read_Clear@tmp^0,c
  9209  005744  6A0B               	clrf	(color_read_Clear@tmp+1)^0,c
  9210                           
  9211                           ;color.c: 142:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  9212  005746  0E00               	movlw	0
  9213  005748  EC1F  F02C         	call	_I2C_2_Master_Read
  9214  00574C  6E07               	movwf	??_color_read_Clear^0,c
  9215  00574E  5007               	movf	??_color_read_Clear^0,w,c
  9216  005750  6E09               	movwf	(??_color_read_Clear+2)^0,c
  9217  005752  6A08               	clrf	(??_color_read_Clear+1)^0,c
  9218  005754  500A               	movf	color_read_Clear@tmp^0,w,c
  9219  005756  1008               	iorwf	(??_color_read_Clear+1)^0,w,c
  9220  005758  6E0A               	movwf	color_read_Clear@tmp^0,c
  9221  00575A  500B               	movf	(color_read_Clear@tmp+1)^0,w,c
  9222  00575C  1009               	iorwf	(??_color_read_Clear+2)^0,w,c
  9223  00575E  6E0B               	movwf	(color_read_Clear@tmp+1)^0,c
  9224                           
  9225                           ;color.c: 143:  I2C_2_Master_Stop();
  9226  005760  ECBB  F02E         	call	_I2C_2_Master_Stop	;wreg free
  9227  005764                     
  9228                           ;color.c: 144:  return tmp;
  9229  005764  C00A  F005         	movff	color_read_Clear@tmp,?_color_read_Clear
  9230  005768  C00B  F006         	movff	color_read_Clear@tmp+1,?_color_read_Clear+1
  9231  00576C  0012               	return		;funcret
  9232  00576E                     __end_of_color_read_Clear:
  9233                           	callstack 0
  9234                           
  9235 ;; *************** function _I2C_2_Master_RepStart *****************
  9236 ;; Defined at:
  9237 ;;		line 33 in file "i2c.c"
  9238 ;; Parameters:    Size  Location     Type
  9239 ;;		None
  9240 ;; Auto vars:     Size  Location     Type
  9241 ;;		None
  9242 ;; Return value:  Size  Location     Type
  9243 ;;                  1    wreg      void 
  9244 ;; Registers used:
  9245 ;;		wreg, status,2, status,0, cstack
  9246 ;; Tracked objects:
  9247 ;;		On entry : 0/0
  9248 ;;		On exit  : 0/0
  9249 ;;		Unchanged: 0/0
  9250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9251 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9252 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9253 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9254 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9255 ;;Total ram usage:        0 bytes
  9256 ;; Hardware stack levels used: 1
  9257 ;; Hardware stack levels required when called: 2
  9258 ;; This function calls:
  9259 ;;		_I2C_2_Master_Idle
  9260 ;; This function is called by:
  9261 ;;		_color_read_Red
  9262 ;;		_color_read_Blue
  9263 ;;		_color_read_Green
  9264 ;;		_color_read_Clear
  9265 ;; This function uses a non-reentrant model
  9266 ;;
  9267                           
  9268                           	psect	text42
  9269  005D6C                     __ptext42:
  9270                           	callstack 0
  9271  005D6C                     _I2C_2_Master_RepStart:
  9272                           	callstack 24
  9273  005D6C                     
  9274                           ;i2c.c: 35:   I2C_2_Master_Idle();
  9275  005D6C  ECD4  F02D         	call	_I2C_2_Master_Idle	;wreg free
  9276  005D70                     
  9277                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  9278  005D70  010E               	movlb	14	; () banked
  9279  005D72  83DA               	bsf	218,1,b	;volatile
  9280  005D74                     
  9281                           ; BSR set to: 14
  9282  005D74  0012               	return		;funcret
  9283  005D76                     __end_of_I2C_2_Master_RepStart:
  9284                           	callstack 0
  9285                           
  9286 ;; *************** function _I2C_2_Master_Read *****************
  9287 ;; Defined at:
  9288 ;;		line 51 in file "i2c.c"
  9289 ;; Parameters:    Size  Location     Type
  9290 ;;  ack             1    wreg     unsigned char 
  9291 ;; Auto vars:     Size  Location     Type
  9292 ;;  ack             1    2[COMRAM] unsigned char 
  9293 ;;  tmp             1    3[COMRAM] unsigned char 
  9294 ;; Return value:  Size  Location     Type
  9295 ;;                  1    wreg      unsigned char 
  9296 ;; Registers used:
  9297 ;;		wreg, status,2, status,0, cstack
  9298 ;; Tracked objects:
  9299 ;;		On entry : 0/0
  9300 ;;		On exit  : 0/0
  9301 ;;		Unchanged: 0/0
  9302 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9303 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9304 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9305 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9306 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9307 ;;Total ram usage:        3 bytes
  9308 ;; Hardware stack levels used: 1
  9309 ;; Hardware stack levels required when called: 2
  9310 ;; This function calls:
  9311 ;;		_I2C_2_Master_Idle
  9312 ;; This function is called by:
  9313 ;;		_color_read_Red
  9314 ;;		_color_read_Blue
  9315 ;;		_color_read_Green
  9316 ;;		_color_read_Clear
  9317 ;; This function uses a non-reentrant model
  9318 ;;
  9319                           
  9320                           	psect	text43
  9321  00583E                     __ptext43:
  9322                           	callstack 0
  9323  00583E                     _I2C_2_Master_Read:
  9324                           	callstack 24
  9325                           
  9326                           ; BSR set to: 14
  9327                           ;incstack = 0
  9328                           ;I2C_2_Master_Read@ack stored from wreg
  9329  00583E  6E03               	movwf	I2C_2_Master_Read@ack^0,c
  9330  005840                     
  9331                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  9332  005840  ECD4  F02D         	call	_I2C_2_Master_Idle	;wreg free
  9333  005844                     
  9334                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  9335  005844  010E               	movlb	14	; () banked
  9336  005846  87DA               	bsf	218,3,b	;volatile
  9337                           
  9338                           ;i2c.c: 56:   I2C_2_Master_Idle();
  9339  005848  ECD4  F02D         	call	_I2C_2_Master_Idle	;wreg free
  9340  00584C                     
  9341                           ;i2c.c: 57:   tmp = SSP2BUF;
  9342  00584C  CED5 F004          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  9343                           
  9344                           ;i2c.c: 58:   I2C_2_Master_Idle();
  9345  005850  ECD4  F02D         	call	_I2C_2_Master_Idle	;wreg free
  9346  005854                     
  9347                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  9348  005854  5003               	movf	I2C_2_Master_Read@ack^0,w,c
  9349  005856  B4D8               	btfsc	status,2,c
  9350  005858  EF30  F02C         	goto	u3801
  9351  00585C  EF34  F02C         	goto	u3800
  9352  005860                     u3801:
  9353  005860  6A02               	clrf	??_I2C_2_Master_Read^0,c
  9354  005862  2A02               	incf	??_I2C_2_Master_Read^0,f,c
  9355  005864  EF35  F02C         	goto	u3818
  9356  005868                     u3800:
  9357  005868  6A02               	clrf	??_I2C_2_Master_Read^0,c
  9358  00586A                     u3818:
  9359  00586A  3A02               	swapf	??_I2C_2_Master_Read^0,f,c
  9360  00586C  4602               	rlncf	??_I2C_2_Master_Read^0,f,c
  9361  00586E  010E               	movlb	14	; () banked
  9362  005870  51DA               	movf	218,w,b	;volatile
  9363  005872  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  9364  005874  0BDF               	andlw	-33
  9365  005876  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  9366  005878  6FDA               	movwf	218,b	;volatile
  9367  00587A                     
  9368                           ; BSR set to: 14
  9369                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  9370  00587A  89DA               	bsf	218,4,b	;volatile
  9371  00587C                     
  9372                           ; BSR set to: 14
  9373                           ;i2c.c: 61:   return tmp;
  9374  00587C  5004               	movf	I2C_2_Master_Read@tmp^0,w,c
  9375  00587E                     
  9376                           ; BSR set to: 14
  9377  00587E  0012               	return		;funcret
  9378  005880                     __end_of_I2C_2_Master_Read:
  9379                           	callstack 0
  9380                           
  9381 ;; *************** function ___xxtofl *****************
  9382 ;; Defined at:
  9383 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\xxtofl.c"
  9384 ;; Parameters:    Size  Location     Type
  9385 ;;  sign            1    wreg     unsigned char 
  9386 ;;  val             4    0[COMRAM] long 
  9387 ;; Auto vars:     Size  Location     Type
  9388 ;;  sign            1    8[COMRAM] unsigned char 
  9389 ;;  arg             4   10[COMRAM] unsigned long 
  9390 ;;  exp             1    9[COMRAM] unsigned char 
  9391 ;; Return value:  Size  Location     Type
  9392 ;;                  4    0[COMRAM] unsigned char 
  9393 ;; Registers used:
  9394 ;;		wreg, status,2, status,0
  9395 ;; Tracked objects:
  9396 ;;		On entry : 0/0
  9397 ;;		On exit  : 0/0
  9398 ;;		Unchanged: 0/0
  9399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9400 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9401 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9402 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9403 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9404 ;;Total ram usage:       14 bytes
  9405 ;; Hardware stack levels used: 1
  9406 ;; Hardware stack levels required when called: 1
  9407 ;; This function calls:
  9408 ;;		Nothing
  9409 ;; This function is called by:
  9410 ;;		_detect_color
  9411 ;;		_amb_light_measure
  9412 ;;		_distance_measure
  9413 ;;		_check_color_reading
  9414 ;; This function uses a non-reentrant model
  9415 ;;
  9416                           
  9417                           	psect	text44
  9418  003F6A                     __ptext44:
  9419                           	callstack 0
  9420  003F6A                     ___xxtofl:
  9421                           	callstack 27
  9422                           
  9423                           ; BSR set to: 14
  9424                           ;incstack = 0
  9425                           ;___xxtofl@sign stored from wreg
  9426  003F6A  6E09               	movwf	___xxtofl@sign^0,c
  9427  003F6C  5009               	movf	___xxtofl@sign^0,w,c
  9428  003F6E  B4D8               	btfsc	status,2,c
  9429  003F70  EFBC  F01F         	goto	u5031
  9430  003F74  EFBE  F01F         	goto	u5030
  9431  003F78                     u5031:
  9432  003F78  EFE0  F01F         	goto	l1374
  9433  003F7C                     u5030:
  9434  003F7C  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  9435  003F7E  EFC5  F01F         	goto	u5040
  9436  003F82  EFC3  F01F         	goto	u5041
  9437  003F86                     u5041:
  9438  003F86  EFE0  F01F         	goto	l1374
  9439  003F8A                     u5040:
  9440  003F8A  C001  F005         	movff	___xxtofl@val,??___xxtofl
  9441  003F8E  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
  9442  003F92  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
  9443  003F96  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
  9444  003F9A  1E05               	comf	??___xxtofl^0,f,c
  9445  003F9C  1E06               	comf	(??___xxtofl+1)^0,f,c
  9446  003F9E  1E07               	comf	(??___xxtofl+2)^0,f,c
  9447  003FA0  1E08               	comf	(??___xxtofl+3)^0,f,c
  9448  003FA2  2A05               	incf	??___xxtofl^0,f,c
  9449  003FA4  0E00               	movlw	0
  9450  003FA6  2206               	addwfc	(??___xxtofl+1)^0,f,c
  9451  003FA8  2207               	addwfc	(??___xxtofl+2)^0,f,c
  9452  003FAA  2208               	addwfc	(??___xxtofl+3)^0,f,c
  9453  003FAC  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
  9454  003FB0  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
  9455  003FB4  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
  9456  003FB8  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
  9457  003FBC  EFE8  F01F         	goto	l4739
  9458  003FC0                     l1374:
  9459  003FC0  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
  9460  003FC4  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  9461  003FC8  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  9462  003FCC  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  9463  003FD0                     l4739:
  9464  003FD0  5001               	movf	___xxtofl@val^0,w,c
  9465  003FD2  1002               	iorwf	(___xxtofl@val+1)^0,w,c
  9466  003FD4  1003               	iorwf	(___xxtofl@val+2)^0,w,c
  9467  003FD6  1004               	iorwf	(___xxtofl@val+3)^0,w,c
  9468  003FD8  A4D8               	btfss	status,2,c
  9469  003FDA  EFF1  F01F         	goto	u5051
  9470  003FDE  EFF3  F01F         	goto	u5050
  9471  003FE2                     u5051:
  9472  003FE2  EFFD  F01F         	goto	l4745
  9473  003FE6                     u5050:
  9474  003FE6  0E00               	movlw	0
  9475  003FE8  6E01               	movwf	?___xxtofl^0,c
  9476  003FEA  0E00               	movlw	0
  9477  003FEC  6E02               	movwf	(?___xxtofl+1)^0,c
  9478  003FEE  0E00               	movlw	0
  9479  003FF0  6E03               	movwf	(?___xxtofl+2)^0,c
  9480  003FF2  0E00               	movlw	0
  9481  003FF4  6E04               	movwf	(?___xxtofl+3)^0,c
  9482  003FF6  EF8E  F020         	goto	l1377
  9483  003FFA                     l4745:
  9484  003FFA  0E96               	movlw	150
  9485  003FFC  6E0A               	movwf	___xxtofl@exp^0,c
  9486  003FFE  EF07  F020         	goto	l4749
  9487  004002                     l4747:
  9488  004002  2A0A               	incf	___xxtofl@exp^0,f,c
  9489  004004  90D8               	bcf	status,0,c
  9490  004006  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  9491  004008  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  9492  00400A  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  9493  00400C  320B               	rrcf	___xxtofl@arg^0,f,c
  9494  00400E                     l4749:
  9495  00400E  0E00               	movlw	0
  9496  004010  140B               	andwf	___xxtofl@arg^0,w,c
  9497  004012  6E05               	movwf	??___xxtofl^0,c
  9498  004014  0E00               	movlw	0
  9499  004016  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  9500  004018  6E06               	movwf	(??___xxtofl+1)^0,c
  9501  00401A  0E00               	movlw	0
  9502  00401C  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  9503  00401E  6E07               	movwf	(??___xxtofl+2)^0,c
  9504  004020  0EFE               	movlw	254
  9505  004022  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  9506  004024  6E08               	movwf	(??___xxtofl+3)^0,c
  9507  004026  5005               	movf	??___xxtofl^0,w,c
  9508  004028  1006               	iorwf	(??___xxtofl+1)^0,w,c
  9509  00402A  1007               	iorwf	(??___xxtofl+2)^0,w,c
  9510  00402C  1008               	iorwf	(??___xxtofl+3)^0,w,c
  9511  00402E  A4D8               	btfss	status,2,c
  9512  004030  EF1C  F020         	goto	u5061
  9513  004034  EF1E  F020         	goto	u5060
  9514  004038                     u5061:
  9515  004038  EF01  F020         	goto	l4747
  9516  00403C                     u5060:
  9517  00403C  EF2C  F020         	goto	l1381
  9518  004040                     l4751:
  9519  004040  2A0A               	incf	___xxtofl@exp^0,f,c
  9520  004042  0E01               	movlw	1
  9521  004044  260B               	addwf	___xxtofl@arg^0,f,c
  9522  004046  0E00               	movlw	0
  9523  004048  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
  9524  00404A  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
  9525  00404C  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
  9526  00404E  90D8               	bcf	status,0,c
  9527  004050  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  9528  004052  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  9529  004054  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  9530  004056  320B               	rrcf	___xxtofl@arg^0,f,c
  9531  004058                     l1381:
  9532  004058  0E00               	movlw	0
  9533  00405A  140B               	andwf	___xxtofl@arg^0,w,c
  9534  00405C  6E05               	movwf	??___xxtofl^0,c
  9535  00405E  0E00               	movlw	0
  9536  004060  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  9537  004062  6E06               	movwf	(??___xxtofl+1)^0,c
  9538  004064  0E00               	movlw	0
  9539  004066  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  9540  004068  6E07               	movwf	(??___xxtofl+2)^0,c
  9541  00406A  0EFF               	movlw	255
  9542  00406C  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  9543  00406E  6E08               	movwf	(??___xxtofl+3)^0,c
  9544  004070  5005               	movf	??___xxtofl^0,w,c
  9545  004072  1006               	iorwf	(??___xxtofl+1)^0,w,c
  9546  004074  1007               	iorwf	(??___xxtofl+2)^0,w,c
  9547  004076  1008               	iorwf	(??___xxtofl+3)^0,w,c
  9548  004078  A4D8               	btfss	status,2,c
  9549  00407A  EF41  F020         	goto	u5071
  9550  00407E  EF43  F020         	goto	u5070
  9551  004082                     u5071:
  9552  004082  EF20  F020         	goto	l4751
  9553  004086                     u5070:
  9554  004086  EF4B  F020         	goto	l4759
  9555  00408A                     l4757:
  9556  00408A  060A               	decf	___xxtofl@exp^0,f,c
  9557  00408C  90D8               	bcf	status,0,c
  9558  00408E  360B               	rlcf	___xxtofl@arg^0,f,c
  9559  004090  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
  9560  004092  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
  9561  004094  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
  9562  004096                     l4759:
  9563  004096  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
  9564  004098  EF50  F020         	goto	u5081
  9565  00409C  EF52  F020         	goto	u5080
  9566  0040A0                     u5081:
  9567  0040A0  EF5A  F020         	goto	l1388
  9568  0040A4                     u5080:
  9569  0040A4  0E02               	movlw	2
  9570  0040A6  600A               	cpfslt	___xxtofl@exp^0,c
  9571  0040A8  EF58  F020         	goto	u5091
  9572  0040AC  EF5A  F020         	goto	u5090
  9573  0040B0                     u5091:
  9574  0040B0  EF45  F020         	goto	l4757
  9575  0040B4                     u5090:
  9576  0040B4                     l1388:
  9577  0040B4  B00A               	btfsc	___xxtofl@exp^0,0,c
  9578  0040B6  EF5F  F020         	goto	u5101
  9579  0040BA  EF61  F020         	goto	u5100
  9580  0040BE                     u5101:
  9581  0040BE  EF62  F020         	goto	l4765
  9582  0040C2                     u5100:
  9583  0040C2  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
  9584  0040C4                     l4765:
  9585  0040C4  90D8               	bcf	status,0,c
  9586  0040C6  320A               	rrcf	___xxtofl@exp^0,f,c
  9587  0040C8  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
  9588  0040CC  6A06               	clrf	(??___xxtofl+1)^0,c
  9589  0040CE  6A07               	clrf	(??___xxtofl+2)^0,c
  9590  0040D0  6A08               	clrf	(??___xxtofl+3)^0,c
  9591  0040D2  C005  F008         	movff	??___xxtofl,??___xxtofl+3
  9592  0040D6  6A07               	clrf	(??___xxtofl+2)^0,c
  9593  0040D8  6A06               	clrf	(??___xxtofl+1)^0,c
  9594  0040DA  6A05               	clrf	??___xxtofl^0,c
  9595  0040DC  5005               	movf	??___xxtofl^0,w,c
  9596  0040DE  120B               	iorwf	___xxtofl@arg^0,f,c
  9597  0040E0  5006               	movf	(??___xxtofl+1)^0,w,c
  9598  0040E2  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
  9599  0040E4  5007               	movf	(??___xxtofl+2)^0,w,c
  9600  0040E6  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
  9601  0040E8  5008               	movf	(??___xxtofl+3)^0,w,c
  9602  0040EA  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
  9603  0040EC  5009               	movf	___xxtofl@sign^0,w,c
  9604  0040EE  B4D8               	btfsc	status,2,c
  9605  0040F0  EF7C  F020         	goto	u5111
  9606  0040F4  EF7E  F020         	goto	u5110
  9607  0040F8                     u5111:
  9608  0040F8  EF86  F020         	goto	l4775
  9609  0040FC                     u5110:
  9610  0040FC  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  9611  0040FE  EF85  F020         	goto	u5120
  9612  004102  EF83  F020         	goto	u5121
  9613  004106                     u5121:
  9614  004106  EF86  F020         	goto	l4775
  9615  00410A                     u5120:
  9616  00410A  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
  9617  00410C                     l4775:
  9618  00410C  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
  9619  004110  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
  9620  004114  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
  9621  004118  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
  9622  00411C                     l1377:
  9623  00411C  0012               	return		;funcret
  9624  00411E                     __end_of___xxtofl:
  9625                           	callstack 0
  9626                           
  9627 ;; *************** function ___fldiv *****************
  9628 ;; Defined at:
  9629 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\sprcdiv.c"
  9630 ;; Parameters:    Size  Location     Type
  9631 ;;  b               4   14[COMRAM] unsigned char 
  9632 ;;  a               4   18[COMRAM] unsigned char 
  9633 ;; Auto vars:     Size  Location     Type
  9634 ;;  grs             4   33[COMRAM] unsigned long 
  9635 ;;  rem             4   26[COMRAM] unsigned long 
  9636 ;;  new_exp         2   31[COMRAM] short 
  9637 ;;  aexp            1   38[COMRAM] unsigned char 
  9638 ;;  bexp            1   37[COMRAM] unsigned char 
  9639 ;;  sign            1   30[COMRAM] unsigned char 
  9640 ;; Return value:  Size  Location     Type
  9641 ;;                  4   14[COMRAM] unsigned char 
  9642 ;; Registers used:
  9643 ;;		wreg, status,2, status,0
  9644 ;; Tracked objects:
  9645 ;;		On entry : 0/0
  9646 ;;		On exit  : 0/0
  9647 ;;		Unchanged: 0/0
  9648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9649 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9650 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9651 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9652 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9653 ;;Total ram usage:       25 bytes
  9654 ;; Hardware stack levels used: 1
  9655 ;; Hardware stack levels required when called: 1
  9656 ;; This function calls:
  9657 ;;		Nothing
  9658 ;; This function is called by:
  9659 ;;		_detect_color
  9660 ;;		_amb_light_measure
  9661 ;;		_check_color_reading
  9662 ;; This function uses a non-reentrant model
  9663 ;;
  9664                           
  9665                           	psect	text45
  9666  0026B0                     __ptext45:
  9667                           	callstack 0
  9668  0026B0                     ___fldiv:
  9669                           	callstack 27
  9670  0026B0  5012               	movf	(___fldiv@b+3)^0,w,c
  9671  0026B2  0B80               	andlw	128
  9672  0026B4  6E1F               	movwf	___fldiv@sign^0,c
  9673  0026B6  5012               	movf	(___fldiv@b+3)^0,w,c
  9674  0026B8  2412               	addwf	(___fldiv@b+3)^0,w,c
  9675  0026BA  6E26               	movwf	___fldiv@bexp^0,c
  9676  0026BC  AE11               	btfss	(___fldiv@b+2)^0,7,c
  9677  0026BE  EF63  F013         	goto	u4801
  9678  0026C2  EF65  F013         	goto	u4800
  9679  0026C6                     u4801:
  9680  0026C6  EF66  F013         	goto	l4601
  9681  0026CA                     u4800:
  9682  0026CA  8026               	bsf	___fldiv@bexp^0,0,c
  9683  0026CC                     l4601:
  9684  0026CC  5026               	movf	___fldiv@bexp^0,w,c
  9685  0026CE  B4D8               	btfsc	status,2,c
  9686  0026D0  EF6C  F013         	goto	u4811
  9687  0026D4  EF6E  F013         	goto	u4810
  9688  0026D8                     u4811:
  9689  0026D8  EF83  F013         	goto	l4611
  9690  0026DC                     u4810:
  9691  0026DC  2826               	incf	___fldiv@bexp^0,w,c
  9692  0026DE  A4D8               	btfss	status,2,c
  9693  0026E0  EF74  F013         	goto	u4821
  9694  0026E4  EF76  F013         	goto	u4820
  9695  0026E8                     u4821:
  9696  0026E8  EF7E  F013         	goto	l4607
  9697  0026EC                     u4820:
  9698  0026EC  0E00               	movlw	0
  9699  0026EE  6E0F               	movwf	___fldiv@b^0,c
  9700  0026F0  0E00               	movlw	0
  9701  0026F2  6E10               	movwf	(___fldiv@b+1)^0,c
  9702  0026F4  0E00               	movlw	0
  9703  0026F6  6E11               	movwf	(___fldiv@b+2)^0,c
  9704  0026F8  0E00               	movlw	0
  9705  0026FA  6E12               	movwf	(___fldiv@b+3)^0,c
  9706  0026FC                     l4607:
  9707  0026FC  8E11               	bsf	(___fldiv@b+2)^0,7,c
  9708  0026FE  0E00               	movlw	0
  9709  002700  6E12               	movwf	(___fldiv@b+3)^0,c
  9710  002702  EF8B  F013         	goto	l4613
  9711  002706                     l4611:
  9712  002706  0E00               	movlw	0
  9713  002708  6E0F               	movwf	___fldiv@b^0,c
  9714  00270A  0E00               	movlw	0
  9715  00270C  6E10               	movwf	(___fldiv@b+1)^0,c
  9716  00270E  0E00               	movlw	0
  9717  002710  6E11               	movwf	(___fldiv@b+2)^0,c
  9718  002712  0E00               	movlw	0
  9719  002714  6E12               	movwf	(___fldiv@b+3)^0,c
  9720  002716                     l4613:
  9721  002716  5016               	movf	(___fldiv@a+3)^0,w,c
  9722  002718  0B80               	andlw	128
  9723  00271A  1A1F               	xorwf	___fldiv@sign^0,f,c
  9724  00271C  5016               	movf	(___fldiv@a+3)^0,w,c
  9725  00271E  2416               	addwf	(___fldiv@a+3)^0,w,c
  9726  002720  6E27               	movwf	___fldiv@aexp^0,c
  9727  002722  AE15               	btfss	(___fldiv@a+2)^0,7,c
  9728  002724  EF96  F013         	goto	u4831
  9729  002728  EF98  F013         	goto	u4830
  9730  00272C                     u4831:
  9731  00272C  EF99  F013         	goto	l4621
  9732  002730                     u4830:
  9733  002730  8027               	bsf	___fldiv@aexp^0,0,c
  9734  002732                     l4621:
  9735  002732  5027               	movf	___fldiv@aexp^0,w,c
  9736  002734  B4D8               	btfsc	status,2,c
  9737  002736  EF9F  F013         	goto	u4841
  9738  00273A  EFA1  F013         	goto	u4840
  9739  00273E                     u4841:
  9740  00273E  EFB6  F013         	goto	l4631
  9741  002742                     u4840:
  9742  002742  2827               	incf	___fldiv@aexp^0,w,c
  9743  002744  A4D8               	btfss	status,2,c
  9744  002746  EFA7  F013         	goto	u4851
  9745  00274A  EFA9  F013         	goto	u4850
  9746  00274E                     u4851:
  9747  00274E  EFB1  F013         	goto	l4627
  9748  002752                     u4850:
  9749  002752  0E00               	movlw	0
  9750  002754  6E13               	movwf	___fldiv@a^0,c
  9751  002756  0E00               	movlw	0
  9752  002758  6E14               	movwf	(___fldiv@a+1)^0,c
  9753  00275A  0E00               	movlw	0
  9754  00275C  6E15               	movwf	(___fldiv@a+2)^0,c
  9755  00275E  0E00               	movlw	0
  9756  002760  6E16               	movwf	(___fldiv@a+3)^0,c
  9757  002762                     l4627:
  9758  002762  8E15               	bsf	(___fldiv@a+2)^0,7,c
  9759  002764  0E00               	movlw	0
  9760  002766  6E16               	movwf	(___fldiv@a+3)^0,c
  9761  002768  EFBE  F013         	goto	l4633
  9762  00276C                     l4631:
  9763  00276C  0E00               	movlw	0
  9764  00276E  6E13               	movwf	___fldiv@a^0,c
  9765  002770  0E00               	movlw	0
  9766  002772  6E14               	movwf	(___fldiv@a+1)^0,c
  9767  002774  0E00               	movlw	0
  9768  002776  6E15               	movwf	(___fldiv@a+2)^0,c
  9769  002778  0E00               	movlw	0
  9770  00277A  6E16               	movwf	(___fldiv@a+3)^0,c
  9771  00277C                     l4633:
  9772  00277C  5013               	movf	___fldiv@a^0,w,c
  9773  00277E  1014               	iorwf	(___fldiv@a+1)^0,w,c
  9774  002780  1015               	iorwf	(___fldiv@a+2)^0,w,c
  9775  002782  1016               	iorwf	(___fldiv@a+3)^0,w,c
  9776  002784  A4D8               	btfss	status,2,c
  9777  002786  EFC7  F013         	goto	u4861
  9778  00278A  EFC9  F013         	goto	u4860
  9779  00278E                     u4861:
  9780  00278E  EFE1  F013         	goto	l4645
  9781  002792                     u4860:
  9782  002792  0E00               	movlw	0
  9783  002794  6E0F               	movwf	___fldiv@b^0,c
  9784  002796  0E00               	movlw	0
  9785  002798  6E10               	movwf	(___fldiv@b+1)^0,c
  9786  00279A  0E00               	movlw	0
  9787  00279C  6E11               	movwf	(___fldiv@b+2)^0,c
  9788  00279E  0E00               	movlw	0
  9789  0027A0  6E12               	movwf	(___fldiv@b+3)^0,c
  9790  0027A2  0E80               	movlw	128
  9791  0027A4  1211               	iorwf	(___fldiv@b+2)^0,f,c
  9792  0027A6  0E7F               	movlw	127
  9793  0027A8  1212               	iorwf	(___fldiv@b+3)^0,f,c
  9794  0027AA                     l4639:
  9795  0027AA  501F               	movf	___fldiv@sign^0,w,c
  9796  0027AC  1212               	iorwf	(___fldiv@b+3)^0,f,c
  9797  0027AE  C00F  F00F         	movff	___fldiv@b,?___fldiv
  9798  0027B2  C010  F010         	movff	___fldiv@b+1,?___fldiv+1
  9799  0027B6  C011  F011         	movff	___fldiv@b+2,?___fldiv+2
  9800  0027BA  C012  F012         	movff	___fldiv@b+3,?___fldiv+3
  9801  0027BE  EF24  F015         	goto	l1301
  9802  0027C2                     l4645:
  9803  0027C2  5026               	movf	___fldiv@bexp^0,w,c
  9804  0027C4  A4D8               	btfss	status,2,c
  9805  0027C6  EFE7  F013         	goto	u4871
  9806  0027CA  EFE9  F013         	goto	u4870
  9807  0027CE                     u4871:
  9808  0027CE  EFF3  F013         	goto	l4653
  9809  0027D2                     u4870:
  9810  0027D2  0E00               	movlw	0
  9811  0027D4  6E0F               	movwf	?___fldiv^0,c
  9812  0027D6  0E00               	movlw	0
  9813  0027D8  6E10               	movwf	(?___fldiv+1)^0,c
  9814  0027DA  0E00               	movlw	0
  9815  0027DC  6E11               	movwf	(?___fldiv+2)^0,c
  9816  0027DE  0E00               	movlw	0
  9817  0027E0  6E12               	movwf	(?___fldiv+3)^0,c
  9818  0027E2  EF24  F015         	goto	l1301
  9819  0027E6                     l4653:
  9820  0027E6  5027               	movf	___fldiv@aexp^0,w,c
  9821  0027E8  C026  F017         	movff	___fldiv@bexp,??___fldiv
  9822  0027EC  6A18               	clrf	(??___fldiv+1)^0,c
  9823  0027EE  5E17               	subwf	??___fldiv^0,f,c
  9824  0027F0  0E00               	movlw	0
  9825  0027F2  5A18               	subwfb	(??___fldiv+1)^0,f,c
  9826  0027F4  0E7F               	movlw	127
  9827  0027F6  2417               	addwf	??___fldiv^0,w,c
  9828  0027F8  6E20               	movwf	___fldiv@new_exp^0,c
  9829  0027FA  0E00               	movlw	0
  9830  0027FC  2018               	addwfc	(??___fldiv+1)^0,w,c
  9831  0027FE  6E21               	movwf	(___fldiv@new_exp+1)^0,c
  9832  002800  C00F  F01B         	movff	___fldiv@b,___fldiv@rem
  9833  002804  C010  F01C         	movff	___fldiv@b+1,___fldiv@rem+1
  9834  002808  C011  F01D         	movff	___fldiv@b+2,___fldiv@rem+2
  9835  00280C  C012  F01E         	movff	___fldiv@b+3,___fldiv@rem+3
  9836  002810  0E00               	movlw	0
  9837  002812  6E0F               	movwf	___fldiv@b^0,c
  9838  002814  0E00               	movlw	0
  9839  002816  6E10               	movwf	(___fldiv@b+1)^0,c
  9840  002818  0E00               	movlw	0
  9841  00281A  6E11               	movwf	(___fldiv@b+2)^0,c
  9842  00281C  0E00               	movlw	0
  9843  00281E  6E12               	movwf	(___fldiv@b+3)^0,c
  9844  002820  0E00               	movlw	0
  9845  002822  6E22               	movwf	___fldiv@grs^0,c
  9846  002824  0E00               	movlw	0
  9847  002826  6E23               	movwf	(___fldiv@grs+1)^0,c
  9848  002828  0E00               	movlw	0
  9849  00282A  6E24               	movwf	(___fldiv@grs+2)^0,c
  9850  00282C  0E00               	movlw	0
  9851  00282E  6E25               	movwf	(___fldiv@grs+3)^0,c
  9852  002830  0E00               	movlw	0
  9853  002832  6E27               	movwf	___fldiv@aexp^0,c
  9854  002834  EF54  F014         	goto	l1303
  9855  002838                     l4663:
  9856  002838  5027               	movf	___fldiv@aexp^0,w,c
  9857  00283A  B4D8               	btfsc	status,2,c
  9858  00283C  EF22  F014         	goto	u4881
  9859  002840  EF24  F014         	goto	u4880
  9860  002844                     u4881:
  9861  002844  EF3B  F014         	goto	l4671
  9862  002848                     u4880:
  9863  002848  90D8               	bcf	status,0,c
  9864  00284A  361B               	rlcf	___fldiv@rem^0,f,c
  9865  00284C  361C               	rlcf	(___fldiv@rem+1)^0,f,c
  9866  00284E  361D               	rlcf	(___fldiv@rem+2)^0,f,c
  9867  002850  361E               	rlcf	(___fldiv@rem+3)^0,f,c
  9868  002852  90D8               	bcf	status,0,c
  9869  002854  360F               	rlcf	___fldiv@b^0,f,c
  9870  002856  3610               	rlcf	(___fldiv@b+1)^0,f,c
  9871  002858  3611               	rlcf	(___fldiv@b+2)^0,f,c
  9872  00285A  3612               	rlcf	(___fldiv@b+3)^0,f,c
  9873  00285C  AE25               	btfss	(___fldiv@grs+3)^0,7,c
  9874  00285E  EF33  F014         	goto	u4891
  9875  002862  EF35  F014         	goto	u4890
  9876  002866                     u4891:
  9877  002866  EF36  F014         	goto	l1306
  9878  00286A                     u4890:
  9879  00286A  800F               	bsf	___fldiv@b^0,0,c
  9880  00286C                     l1306:
  9881  00286C  90D8               	bcf	status,0,c
  9882  00286E  3622               	rlcf	___fldiv@grs^0,f,c
  9883  002870  3623               	rlcf	(___fldiv@grs+1)^0,f,c
  9884  002872  3624               	rlcf	(___fldiv@grs+2)^0,f,c
  9885  002874  3625               	rlcf	(___fldiv@grs+3)^0,f,c
  9886  002876                     l4671:
  9887  002876  5013               	movf	___fldiv@a^0,w,c
  9888  002878  5C1B               	subwf	___fldiv@rem^0,w,c
  9889  00287A  5014               	movf	(___fldiv@a+1)^0,w,c
  9890  00287C  581C               	subwfb	(___fldiv@rem+1)^0,w,c
  9891  00287E  5015               	movf	(___fldiv@a+2)^0,w,c
  9892  002880  581D               	subwfb	(___fldiv@rem+2)^0,w,c
  9893  002882  5016               	movf	(___fldiv@a+3)^0,w,c
  9894  002884  581E               	subwfb	(___fldiv@rem+3)^0,w,c
  9895  002886  A0D8               	btfss	status,0,c
  9896  002888  EF48  F014         	goto	u4901
  9897  00288C  EF4A  F014         	goto	u4900
  9898  002890                     u4901:
  9899  002890  EF53  F014         	goto	l4677
  9900  002894                     u4900:
  9901  002894  8C25               	bsf	(___fldiv@grs+3)^0,6,c
  9902  002896  5013               	movf	___fldiv@a^0,w,c
  9903  002898  5E1B               	subwf	___fldiv@rem^0,f,c
  9904  00289A  5014               	movf	(___fldiv@a+1)^0,w,c
  9905  00289C  5A1C               	subwfb	(___fldiv@rem+1)^0,f,c
  9906  00289E  5015               	movf	(___fldiv@a+2)^0,w,c
  9907  0028A0  5A1D               	subwfb	(___fldiv@rem+2)^0,f,c
  9908  0028A2  5016               	movf	(___fldiv@a+3)^0,w,c
  9909  0028A4  5A1E               	subwfb	(___fldiv@rem+3)^0,f,c
  9910  0028A6                     l4677:
  9911  0028A6  2A27               	incf	___fldiv@aexp^0,f,c
  9912  0028A8                     l1303:
  9913  0028A8  0E19               	movlw	25
  9914  0028AA  6427               	cpfsgt	___fldiv@aexp^0,c
  9915  0028AC  EF5A  F014         	goto	u4911
  9916  0028B0  EF5C  F014         	goto	u4910
  9917  0028B4                     u4911:
  9918  0028B4  EF1C  F014         	goto	l4663
  9919  0028B8                     u4910:
  9920  0028B8  501B               	movf	___fldiv@rem^0,w,c
  9921  0028BA  101C               	iorwf	(___fldiv@rem+1)^0,w,c
  9922  0028BC  101D               	iorwf	(___fldiv@rem+2)^0,w,c
  9923  0028BE  101E               	iorwf	(___fldiv@rem+3)^0,w,c
  9924  0028C0  B4D8               	btfsc	status,2,c
  9925  0028C2  EF65  F014         	goto	u4921
  9926  0028C6  EF67  F014         	goto	u4920
  9927  0028CA                     u4921:
  9928  0028CA  EF7F  F014         	goto	l4689
  9929  0028CE                     u4920:
  9930  0028CE  8022               	bsf	___fldiv@grs^0,0,c
  9931  0028D0  EF7F  F014         	goto	l4689
  9932  0028D4                     l4683:
  9933  0028D4  90D8               	bcf	status,0,c
  9934  0028D6  360F               	rlcf	___fldiv@b^0,f,c
  9935  0028D8  3610               	rlcf	(___fldiv@b+1)^0,f,c
  9936  0028DA  3611               	rlcf	(___fldiv@b+2)^0,f,c
  9937  0028DC  3612               	rlcf	(___fldiv@b+3)^0,f,c
  9938  0028DE  AE25               	btfss	(___fldiv@grs+3)^0,7,c
  9939  0028E0  EF74  F014         	goto	u4931
  9940  0028E4  EF76  F014         	goto	u4930
  9941  0028E8                     u4931:
  9942  0028E8  EF77  F014         	goto	l1312
  9943  0028EC                     u4930:
  9944  0028EC  800F               	bsf	___fldiv@b^0,0,c
  9945  0028EE                     l1312:
  9946  0028EE  90D8               	bcf	status,0,c
  9947  0028F0  3622               	rlcf	___fldiv@grs^0,f,c
  9948  0028F2  3623               	rlcf	(___fldiv@grs+1)^0,f,c
  9949  0028F4  3624               	rlcf	(___fldiv@grs+2)^0,f,c
  9950  0028F6  3625               	rlcf	(___fldiv@grs+3)^0,f,c
  9951  0028F8  0620               	decf	___fldiv@new_exp^0,f,c
  9952  0028FA  A0D8               	btfss	status,0,c
  9953  0028FC  0621               	decf	(___fldiv@new_exp+1)^0,f,c
  9954  0028FE                     l4689:
  9955  0028FE  AE11               	btfss	(___fldiv@b+2)^0,7,c
  9956  002900  EF84  F014         	goto	u4941
  9957  002904  EF86  F014         	goto	u4940
  9958  002908                     u4941:
  9959  002908  EF6A  F014         	goto	l4683
  9960  00290C                     u4940:
  9961  00290C  0E00               	movlw	0
  9962  00290E  6E27               	movwf	___fldiv@aexp^0,c
  9963  002910  AE25               	btfss	(___fldiv@grs+3)^0,7,c
  9964  002912  EF8D  F014         	goto	u4951
  9965  002916  EF8F  F014         	goto	u4950
  9966  00291A                     u4951:
  9967  00291A  EFB3  F014         	goto	l1314
  9968  00291E                     u4950:
  9969  00291E  0EFF               	movlw	255
  9970  002920  1422               	andwf	___fldiv@grs^0,w,c
  9971  002922  6E17               	movwf	??___fldiv^0,c
  9972  002924  0EFF               	movlw	255
  9973  002926  1423               	andwf	(___fldiv@grs+1)^0,w,c
  9974  002928  6E18               	movwf	(??___fldiv+1)^0,c
  9975  00292A  0EFF               	movlw	255
  9976  00292C  1424               	andwf	(___fldiv@grs+2)^0,w,c
  9977  00292E  6E19               	movwf	(??___fldiv+2)^0,c
  9978  002930  0E7F               	movlw	127
  9979  002932  1425               	andwf	(___fldiv@grs+3)^0,w,c
  9980  002934  6E1A               	movwf	(??___fldiv+3)^0,c
  9981  002936  5017               	movf	??___fldiv^0,w,c
  9982  002938  1018               	iorwf	(??___fldiv+1)^0,w,c
  9983  00293A  1019               	iorwf	(??___fldiv+2)^0,w,c
  9984  00293C  101A               	iorwf	(??___fldiv+3)^0,w,c
  9985  00293E  B4D8               	btfsc	status,2,c
  9986  002940  EFA4  F014         	goto	u4961
  9987  002944  EFA6  F014         	goto	u4960
  9988  002948                     u4961:
  9989  002948  EFAA  F014         	goto	l1315
  9990  00294C                     u4960:
  9991  00294C                     l4697:
  9992  00294C  0E01               	movlw	1
  9993  00294E  6E27               	movwf	___fldiv@aexp^0,c
  9994  002950  EFB3  F014         	goto	l1314
  9995  002954                     l1315:
  9996  002954  A00F               	btfss	___fldiv@b^0,0,c
  9997  002956  EFAF  F014         	goto	u4971
  9998  00295A  EFB1  F014         	goto	u4970
  9999  00295E                     u4971:
 10000  00295E  EFB3  F014         	goto	l1314
 10001  002962                     u4970:
 10002  002962  EFA6  F014         	goto	l4697
 10003  002966                     l1314:
 10004  002966  5027               	movf	___fldiv@aexp^0,w,c
 10005  002968  B4D8               	btfsc	status,2,c
 10006  00296A  EFB9  F014         	goto	u4981
 10007  00296E  EFBB  F014         	goto	u4980
 10008  002972                     u4981:
 10009  002972  EFDF  F014         	goto	l4709
 10010  002976                     u4980:
 10011  002976  0E01               	movlw	1
 10012  002978  260F               	addwf	___fldiv@b^0,f,c
 10013  00297A  0E00               	movlw	0
 10014  00297C  2210               	addwfc	(___fldiv@b+1)^0,f,c
 10015  00297E  2211               	addwfc	(___fldiv@b+2)^0,f,c
 10016  002980  2212               	addwfc	(___fldiv@b+3)^0,f,c
 10017  002982  A012               	btfss	(___fldiv@b+3)^0,0,c
 10018  002984  EFC6  F014         	goto	u4991
 10019  002988  EFC8  F014         	goto	u4990
 10020  00298C                     u4991:
 10021  00298C  EFDF  F014         	goto	l4709
 10022  002990                     u4990:
 10023  002990  C00F  F017         	movff	___fldiv@b,??___fldiv
 10024  002994  C010  F018         	movff	___fldiv@b+1,??___fldiv+1
 10025  002998  C011  F019         	movff	___fldiv@b+2,??___fldiv+2
 10026  00299C  C012  F01A         	movff	___fldiv@b+3,??___fldiv+3
 10027  0029A0  341A               	rlcf	(??___fldiv+3)^0,w,c
 10028  0029A2  321A               	rrcf	(??___fldiv+3)^0,f,c
 10029  0029A4  3219               	rrcf	(??___fldiv+2)^0,f,c
 10030  0029A6  3218               	rrcf	(??___fldiv+1)^0,f,c
 10031  0029A8  3217               	rrcf	??___fldiv^0,f,c
 10032  0029AA  C017  F00F         	movff	??___fldiv,___fldiv@b
 10033  0029AE  C018  F010         	movff	??___fldiv+1,___fldiv@b+1
 10034  0029B2  C019  F011         	movff	??___fldiv+2,___fldiv@b+2
 10035  0029B6  C01A  F012         	movff	??___fldiv+3,___fldiv@b+3
 10036  0029BA  4A20               	infsnz	___fldiv@new_exp^0,f,c
 10037  0029BC  2A21               	incf	(___fldiv@new_exp+1)^0,f,c
 10038  0029BE                     l4709:
 10039  0029BE  BE21               	btfsc	(___fldiv@new_exp+1)^0,7,c
 10040  0029C0  EFEA  F014         	goto	u5001
 10041  0029C4  5021               	movf	(___fldiv@new_exp+1)^0,w,c
 10042  0029C6  E108               	bnz	u5000
 10043  0029C8  2820               	incf	___fldiv@new_exp^0,w,c
 10044  0029CA  A0D8               	btfss	status,0,c
 10045  0029CC  EFEA  F014         	goto	u5001
 10046  0029D0  EFEC  F014         	goto	u5000
 10047  0029D4                     u5001:
 10048  0029D4  EFF7  F014         	goto	l4713
 10049  0029D8                     u5000:
 10050  0029D8  0E00               	movlw	0
 10051  0029DA  6E21               	movwf	(___fldiv@new_exp+1)^0,c
 10052  0029DC  6820               	setf	___fldiv@new_exp^0,c
 10053  0029DE  0E00               	movlw	0
 10054  0029E0  6E0F               	movwf	___fldiv@b^0,c
 10055  0029E2  0E00               	movlw	0
 10056  0029E4  6E10               	movwf	(___fldiv@b+1)^0,c
 10057  0029E6  0E00               	movlw	0
 10058  0029E8  6E11               	movwf	(___fldiv@b+2)^0,c
 10059  0029EA  0E00               	movlw	0
 10060  0029EC  6E12               	movwf	(___fldiv@b+3)^0,c
 10061  0029EE                     l4713:
 10062  0029EE  BE21               	btfsc	(___fldiv@new_exp+1)^0,7,c
 10063  0029F0  EF04  F015         	goto	u5010
 10064  0029F4  5021               	movf	(___fldiv@new_exp+1)^0,w,c
 10065  0029F6  E106               	bnz	u5011
 10066  0029F8  0420               	decf	___fldiv@new_exp^0,w,c
 10067  0029FA  B0D8               	btfsc	status,0,c
 10068  0029FC  EF02  F015         	goto	u5011
 10069  002A00  EF04  F015         	goto	u5010
 10070  002A04                     u5011:
 10071  002A04  EF12  F015         	goto	l4717
 10072  002A08                     u5010:
 10073  002A08  0E00               	movlw	0
 10074  002A0A  6E21               	movwf	(___fldiv@new_exp+1)^0,c
 10075  002A0C  0E00               	movlw	0
 10076  002A0E  6E20               	movwf	___fldiv@new_exp^0,c
 10077  002A10  0E00               	movlw	0
 10078  002A12  6E0F               	movwf	___fldiv@b^0,c
 10079  002A14  0E00               	movlw	0
 10080  002A16  6E10               	movwf	(___fldiv@b+1)^0,c
 10081  002A18  0E00               	movlw	0
 10082  002A1A  6E11               	movwf	(___fldiv@b+2)^0,c
 10083  002A1C  0E00               	movlw	0
 10084  002A1E  6E12               	movwf	(___fldiv@b+3)^0,c
 10085  002A20  0E00               	movlw	0
 10086  002A22  6E1F               	movwf	___fldiv@sign^0,c
 10087  002A24                     l4717:
 10088  002A24  C020  F026         	movff	___fldiv@new_exp,___fldiv@bexp
 10089  002A28  A026               	btfss	___fldiv@bexp^0,0,c
 10090  002A2A  EF19  F015         	goto	u5021
 10091  002A2E  EF1B  F015         	goto	u5020
 10092  002A32                     u5021:
 10093  002A32  EF1E  F015         	goto	l4723
 10094  002A36                     u5020:
 10095  002A36  8E11               	bsf	(___fldiv@b+2)^0,7,c
 10096  002A38  EF1F  F015         	goto	l4725
 10097  002A3C                     l4723:
 10098  002A3C  9E11               	bcf	(___fldiv@b+2)^0,7,c
 10099  002A3E                     l4725:
 10100  002A3E  90D8               	bcf	status,0,c
 10101  002A40  3026               	rrcf	___fldiv@bexp^0,w,c
 10102  002A42  6E12               	movwf	(___fldiv@b+3)^0,c
 10103  002A44  EFD5  F013         	goto	l4639
 10104  002A48                     l1301:
 10105  002A48  0012               	return		;funcret
 10106  002A4A                     __end_of___fldiv:
 10107                           	callstack 0
 10108                           
 10109 ;; *************** function _LED_C *****************
 10110 ;; Defined at:
 10111 ;;		line 173 in file "color.c"
 10112 ;; Parameters:    Size  Location     Type
 10113 ;;		None
 10114 ;; Auto vars:     Size  Location     Type
 10115 ;;		None
 10116 ;; Return value:  Size  Location     Type
 10117 ;;                  1    wreg      void 
 10118 ;; Registers used:
 10119 ;;		wreg
 10120 ;; Tracked objects:
 10121 ;;		On entry : 0/0
 10122 ;;		On exit  : 0/0
 10123 ;;		Unchanged: 0/0
 10124 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10125 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10126 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10127 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10128 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10129 ;;Total ram usage:        2 bytes
 10130 ;; Hardware stack levels used: 1
 10131 ;; Hardware stack levels required when called: 1
 10132 ;; This function calls:
 10133 ;;		Nothing
 10134 ;; This function is called by:
 10135 ;;		_color_data_collection
 10136 ;;		_calibrate_white
 10137 ;;		_amb_light_measure
 10138 ;;		_distance_measure
 10139 ;;		_test_function
 10140 ;; This function uses a non-reentrant model
 10141 ;;
 10142                           
 10143                           	psect	text46
 10144  005C76                     __ptext46:
 10145                           	callstack 0
 10146  005C76                     _LED_C:
 10147                           	callstack 27
 10148  005C76                     
 10149                           ;color.c: 175:     LATGbits.LATG1 = 1;
 10150  005C76  827F               	bsf	127,1,c	;volatile
 10151                           
 10152                           ;color.c: 176:     LATFbits.LATF7 = 1;
 10153  005C78  8E7E               	bsf	126,7,c	;volatile
 10154                           
 10155                           ;color.c: 177:     LATAbits.LATA4 = 1;
 10156  005C7A  8879               	bsf	121,4,c	;volatile
 10157  005C7C                     
 10158                           ;color.c: 178:     _delay((unsigned long)((200)*(64000000/4000.0)));
 10159  005C7C  0E11               	movlw	17
 10160  005C7E  6E02               	movwf	(??_LED_C+1)^0,c
 10161  005C80  0E3C               	movlw	60
 10162  005C82  6E01               	movwf	??_LED_C^0,c
 10163  005C84  0ECB               	movlw	203
 10164  005C86                     u6087:
 10165  005C86  2EE8               	decfsz	wreg,f,c
 10166  005C88  D7FE               	bra	u6087
 10167  005C8A  2E01               	decfsz	??_LED_C^0,f,c
 10168  005C8C  D7FC               	bra	u6087
 10169  005C8E  2E02               	decfsz	(??_LED_C+1)^0,f,c
 10170  005C90  D7FA               	bra	u6087
 10171  005C92  F000               	nop	
 10172  005C94  0012               	return		;funcret
 10173  005C96                     __end_of_LED_C:
 10174                           	callstack 0
 10175                           
 10176 ;; *************** function _short_burst_back *****************
 10177 ;; Defined at:
 10178 ;;		line 10 in file "movement.c"
 10179 ;; Parameters:    Size  Location     Type
 10180 ;;  mL              2   31[COMRAM] PTR struct DC_motor
 10181 ;;		 -> main@motorL(9), 
 10182 ;;  mR              2   33[COMRAM] PTR struct DC_motor
 10183 ;;		 -> main@motorR(9), 
 10184 ;; Auto vars:     Size  Location     Type
 10185 ;;		None
 10186 ;; Return value:  Size  Location     Type
 10187 ;;                  1    wreg      void 
 10188 ;; Registers used:
 10189 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10190 ;; Tracked objects:
 10191 ;;		On entry : 0/0
 10192 ;;		On exit  : 0/0
 10193 ;;		Unchanged: 0/0
 10194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10195 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10196 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10197 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10198 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10199 ;;Total ram usage:        6 bytes
 10200 ;; Hardware stack levels used: 1
 10201 ;; Hardware stack levels required when called: 4
 10202 ;; This function calls:
 10203 ;;		_fullSpeedAhead
 10204 ;;		_stop
 10205 ;; This function is called by:
 10206 ;;		_main
 10207 ;; This function uses a non-reentrant model
 10208 ;;
 10209                           
 10210                           	psect	text47
 10211  005880                     __ptext47:
 10212                           	callstack 0
 10213  005880                     _short_burst_back:
 10214                           	callstack 26
 10215  005880                     
 10216                           ;movement.c: 10: void short_burst_back(struct DC_motor *mL, struct DC_motor *mR);movemen
      +                          t.c: 11: {;movement.c: 12:     fullSpeedAhead(mL,mR);
 10217  005880  C020  F01A         	movff	short_burst_back@mL,fullSpeedAhead@mL
 10218  005884  C021  F01B         	movff	short_burst_back@mL+1,fullSpeedAhead@mL+1
 10219  005888  C022  F01C         	movff	short_burst_back@mR,fullSpeedAhead@mR
 10220  00588C  C023  F01D         	movff	short_burst_back@mR+1,fullSpeedAhead@mR+1
 10221  005890  ECCE  F029         	call	_fullSpeedAhead	;wreg free
 10222  005894                     
 10223                           ;movement.c: 13:     _delay((unsigned long)((500)*(64000000/4000.0)));
 10224  005894  0E29               	movlw	41
 10225  005896  6E25               	movwf	(??_short_burst_back+1)^0,c
 10226  005898  0E96               	movlw	150
 10227  00589A  6E24               	movwf	??_short_burst_back^0,c
 10228  00589C  0E7F               	movlw	127
 10229  00589E                     u6097:
 10230  00589E  2EE8               	decfsz	wreg,f,c
 10231  0058A0  D7FE               	bra	u6097
 10232  0058A2  2E24               	decfsz	??_short_burst_back^0,f,c
 10233  0058A4  D7FC               	bra	u6097
 10234  0058A6  2E25               	decfsz	(??_short_burst_back+1)^0,f,c
 10235  0058A8  D7FA               	bra	u6097
 10236  0058AA  F000               	nop	
 10237  0058AC                     
 10238                           ;movement.c: 14:     stop(mL,mR);
 10239  0058AC  C020  F01A         	movff	short_burst_back@mL,stop@mL
 10240  0058B0  C021  F01B         	movff	short_burst_back@mL+1,stop@mL+1
 10241  0058B4  C022  F01C         	movff	short_burst_back@mR,stop@mR
 10242  0058B8  C023  F01D         	movff	short_burst_back@mR+1,stop@mR+1
 10243  0058BC  EC26  F029         	call	_stop	;wreg free
 10244  0058C0  0012               	return		;funcret
 10245  0058C2                     __end_of_short_burst_back:
 10246                           	callstack 0
 10247                           
 10248 ;; *************** function _setup_init *****************
 10249 ;; Defined at:
 10250 ;;		line 16 in file "test_and_calibration.c"
 10251 ;; Parameters:    Size  Location     Type
 10252 ;;		None
 10253 ;; Auto vars:     Size  Location     Type
 10254 ;;		None
 10255 ;; Return value:  Size  Location     Type
 10256 ;;                  1    wreg      void 
 10257 ;; Registers used:
 10258 ;;		None
 10259 ;; Tracked objects:
 10260 ;;		On entry : 0/0
 10261 ;;		On exit  : 0/0
 10262 ;;		Unchanged: 0/0
 10263 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10264 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10265 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10266 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10267 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10268 ;;Total ram usage:        0 bytes
 10269 ;; Hardware stack levels used: 1
 10270 ;; Hardware stack levels required when called: 1
 10271 ;; This function calls:
 10272 ;;		Nothing
 10273 ;; This function is called by:
 10274 ;;		_main
 10275 ;; This function uses a non-reentrant model
 10276 ;;
 10277                           
 10278                           	psect	text48
 10279  005D40                     __ptext48:
 10280                           	callstack 0
 10281  005D40                     _setup_init:
 10282                           	callstack 29
 10283  005D40                     
 10284                           ;test_and_calibration.c: 18:     LATDbits.LATD7=0;
 10285  005D40  9E7C               	bcf	124,7,c	;volatile
 10286                           
 10287                           ;test_and_calibration.c: 19:     TRISDbits.TRISD7=0;
 10288  005D42  9E84               	bcf	132,7,c	;volatile
 10289                           
 10290                           ;test_and_calibration.c: 22:     LATHbits.LATH3=0;
 10291  005D44  9680               	bcf	128,3,c	;volatile
 10292                           
 10293                           ;test_and_calibration.c: 23:     TRISHbits.TRISH3=0;
 10294  005D46  9688               	bcf	136,3,c	;volatile
 10295                           
 10296                           ;test_and_calibration.c: 26:     TRISFbits.TRISF2=1;
 10297  005D48  8486               	bsf	134,2,c	;volatile
 10298                           
 10299                           ;test_and_calibration.c: 27:     ANSELFbits.ANSELF2=0;
 10300  005D4A  010E               	movlb	14	; () banked
 10301  005D4C  95B4               	bcf	180,2,b	;volatile
 10302                           
 10303                           ;test_and_calibration.c: 30:     TRISFbits.TRISF3=1;
 10304  005D4E  8686               	bsf	134,3,c	;volatile
 10305                           
 10306                           ;test_and_calibration.c: 31:     ANSELFbits.ANSELF3=0;
 10307  005D50  97B4               	bcf	180,3,b	;volatile
 10308  005D52                     
 10309                           ; BSR set to: 14
 10310  005D52  0012               	return		;funcret
 10311  005D54                     __end_of_setup_init:
 10312                           	callstack 0
 10313                           
 10314 ;; *************** function _pin_init *****************
 10315 ;; Defined at:
 10316 ;;		line 91 in file "movement.c"
 10317 ;; Parameters:    Size  Location     Type
 10318 ;;		None
 10319 ;; Auto vars:     Size  Location     Type
 10320 ;;		None
 10321 ;; Return value:  Size  Location     Type
 10322 ;;                  1    wreg      void 
 10323 ;; Registers used:
 10324 ;;		None
 10325 ;; Tracked objects:
 10326 ;;		On entry : 0/0
 10327 ;;		On exit  : 0/0
 10328 ;;		Unchanged: 0/0
 10329 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10330 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10331 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10332 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10333 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10334 ;;Total ram usage:        0 bytes
 10335 ;; Hardware stack levels used: 1
 10336 ;; Hardware stack levels required when called: 1
 10337 ;; This function calls:
 10338 ;;		Nothing
 10339 ;; This function is called by:
 10340 ;;		_main
 10341 ;; This function uses a non-reentrant model
 10342 ;;
 10343                           
 10344                           	psect	text49
 10345  005C96                     __ptext49:
 10346                           	callstack 0
 10347  005C96                     _pin_init:
 10348                           	callstack 29
 10349  005C96  8486               	bsf	134,2,c	;volatile
 10350                           
 10351                           ;movement.c: 93:     ANSELFbits.ANSELF2=0;
 10352  005C98  010E               	movlb	14	; () banked
 10353  005C9A  95B4               	bcf	180,2,b	;volatile
 10354                           
 10355                           ;movement.c: 94:     TRISFbits.TRISF3=1;
 10356  005C9C  8686               	bsf	134,3,c	;volatile
 10357                           
 10358                           ;movement.c: 95:     ANSELFbits.ANSELF3=0;
 10359  005C9E  97B4               	bcf	180,3,b	;volatile
 10360                           
 10361                           ;movement.c: 100:     TRISGbits.TRISG1 = 0;
 10362  005CA0  9287               	bcf	135,1,c	;volatile
 10363                           
 10364                           ;movement.c: 101:     TRISFbits.TRISF7 = 0;
 10365  005CA2  9E86               	bcf	134,7,c	;volatile
 10366                           
 10367                           ;movement.c: 102:     TRISAbits.TRISA4 = 0;
 10368  005CA4  9881               	bcf	129,4,c	;volatile
 10369                           
 10370                           ;movement.c: 103:     LATGbits.LATG1 = 1;
 10371  005CA6  827F               	bsf	127,1,c	;volatile
 10372                           
 10373                           ;movement.c: 104:     LATFbits.LATF7 = 1;
 10374  005CA8  8E7E               	bsf	126,7,c	;volatile
 10375                           
 10376                           ;movement.c: 105:     LATAbits.LATA4 = 1;
 10377  005CAA  8879               	bsf	121,4,c	;volatile
 10378                           
 10379                           ;movement.c: 108:     TRISDbits.TRISD7 = 0;
 10380  005CAC  9E84               	bcf	132,7,c	;volatile
 10381                           
 10382                           ;movement.c: 109:     LATDbits.LATD7 = 0;
 10383  005CAE  9E7C               	bcf	124,7,c	;volatile
 10384                           
 10385                           ;movement.c: 110:     TRISHbits.TRISH3 = 0;
 10386  005CB0  9688               	bcf	136,3,c	;volatile
 10387                           
 10388                           ;movement.c: 111:     LATHbits.LATH3 = 0;
 10389  005CB2  9680               	bcf	128,3,c	;volatile
 10390  005CB4                     
 10391                           ; BSR set to: 14
 10392  005CB4  0012               	return		;funcret
 10393  005CB6                     __end_of_pin_init:
 10394                           	callstack 0
 10395                           
 10396 ;; *************** function _initUSART4 *****************
 10397 ;; Defined at:
 10398 ;;		line 4 in file "serial.c"
 10399 ;; Parameters:    Size  Location     Type
 10400 ;;		None
 10401 ;; Auto vars:     Size  Location     Type
 10402 ;;		None
 10403 ;; Return value:  Size  Location     Type
 10404 ;;                  1    wreg      void 
 10405 ;; Registers used:
 10406 ;;		wreg, status,2
 10407 ;; Tracked objects:
 10408 ;;		On entry : 0/0
 10409 ;;		On exit  : 0/0
 10410 ;;		Unchanged: 0/0
 10411 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10412 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10413 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10414 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10415 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10416 ;;Total ram usage:        0 bytes
 10417 ;; Hardware stack levels used: 1
 10418 ;; Hardware stack levels required when called: 1
 10419 ;; This function calls:
 10420 ;;		Nothing
 10421 ;; This function is called by:
 10422 ;;		_main
 10423 ;; This function uses a non-reentrant model
 10424 ;;
 10425                           
 10426                           	psect	text50
 10427  005CD6                     __ptext50:
 10428                           	callstack 0
 10429  005CD6                     _initUSART4:
 10430                           	callstack 29
 10431  005CD6                     
 10432                           ;serial.c: 8:     RC0PPS = 0x12;
 10433  005CD6  0E12               	movlw	18
 10434  005CD8  010E               	movlb	14	; () banked
 10435  005CDA  6F62               	movwf	98,b	;volatile
 10436                           
 10437                           ;serial.c: 9:     RX4PPS = 0x11;
 10438  005CDC  0E11               	movlw	17
 10439  005CDE  6F15               	movwf	21,b	;volatile
 10440  005CE0                     
 10441                           ; BSR set to: 14
 10442                           ;serial.c: 11:     BAUD4CONbits.BRG16 = 0;
 10443  005CE0  97E9               	bcf	233,3,b	;volatile
 10444  005CE2                     
 10445                           ; BSR set to: 14
 10446                           ;serial.c: 12:     TX4STAbits.BRGH = 0;
 10447  005CE2  95E8               	bcf	232,2,b	;volatile
 10448                           
 10449                           ;serial.c: 13:     SP4BRGL = 51;
 10450  005CE4  0E33               	movlw	51
 10451  005CE6  6FE5               	movwf	229,b	;volatile
 10452                           
 10453                           ;serial.c: 15:     SP4BRGH = 0;
 10454  005CE8  0E00               	movlw	0
 10455  005CEA  6FE6               	movwf	230,b	;volatile
 10456  005CEC                     
 10457                           ; BSR set to: 14
 10458                           ;serial.c: 17:     RC4STAbits.CREN = 1;
 10459  005CEC  89E7               	bsf	231,4,b	;volatile
 10460  005CEE                     
 10461                           ; BSR set to: 14
 10462                           ;serial.c: 18:     TX4STAbits.TXEN = 1;
 10463  005CEE  8BE8               	bsf	232,5,b	;volatile
 10464  005CF0                     
 10465                           ; BSR set to: 14
 10466                           ;serial.c: 19:     RC4STAbits.SPEN = 1;
 10467  005CF0  8FE7               	bsf	231,7,b	;volatile
 10468  005CF2                     
 10469                           ; BSR set to: 14
 10470  005CF2  0012               	return		;funcret
 10471  005CF4                     __end_of_initUSART4:
 10472                           	callstack 0
 10473                           
 10474 ;; *************** function _initDCmotors_parameter *****************
 10475 ;; Defined at:
 10476 ;;		line 40 in file "dc_motor.c"
 10477 ;; Parameters:    Size  Location     Type
 10478 ;;  motorL          2    0[COMRAM] PTR struct DC_motor
 10479 ;;		 -> main@motorL(9), 
 10480 ;;  motorR          2    2[COMRAM] PTR struct DC_motor
 10481 ;;		 -> main@motorR(9), 
 10482 ;; Auto vars:     Size  Location     Type
 10483 ;;		None
 10484 ;; Return value:  Size  Location     Type
 10485 ;;                  1    wreg      void 
 10486 ;; Registers used:
 10487 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10488 ;; Tracked objects:
 10489 ;;		On entry : 0/0
 10490 ;;		On exit  : 0/0
 10491 ;;		Unchanged: 0/0
 10492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10493 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10494 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10495 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10496 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10497 ;;Total ram usage:        4 bytes
 10498 ;; Hardware stack levels used: 1
 10499 ;; Hardware stack levels required when called: 1
 10500 ;; This function calls:
 10501 ;;		Nothing
 10502 ;; This function is called by:
 10503 ;;		_main
 10504 ;; This function uses a non-reentrant model
 10505 ;;
 10506                           
 10507                           	psect	text51
 10508  004E60                     __ptext51:
 10509                           	callstack 0
 10510  004E60                     _initDCmotors_parameter:
 10511                           	callstack 29
 10512  004E60                     
 10513                           ;dc_motor.c: 42:     motorL->power = 0;
 10514  004E60  C001  FFD9         	movff	initDCmotors_parameter@motorL,fsr2l
 10515  004E64  C002  FFDA         	movff	initDCmotors_parameter@motorL+1,fsr2h
 10516  004E68  0E00               	movlw	0
 10517  004E6A  6EDF               	movwf	indf2,c
 10518  004E6C                     
 10519                           ;dc_motor.c: 43:     motorL->direction = 1;
 10520  004E6C  EE20 F001          	lfsr	2,1
 10521  004E70  5001               	movf	initDCmotors_parameter@motorL^0,w,c
 10522  004E72  26D9               	addwf	fsr2l,f,c
 10523  004E74  5002               	movf	(initDCmotors_parameter@motorL+1)^0,w,c
 10524  004E76  22DA               	addwfc	fsr2h,f,c
 10525  004E78  0E01               	movlw	1
 10526  004E7A  6EDF               	movwf	indf2,c
 10527  004E7C                     
 10528                           ;dc_motor.c: 44:     motorL->dutyHighByte = (unsigned char *)(&PWM6DCH);
 10529  004E7C  EE20 F002          	lfsr	2,2
 10530  004E80  5001               	movf	initDCmotors_parameter@motorL^0,w,c
 10531  004E82  26D9               	addwf	fsr2l,f,c
 10532  004E84  5002               	movf	(initDCmotors_parameter@motorL+1)^0,w,c
 10533  004E86  22DA               	addwfc	fsr2h,f,c
 10534  004E88  0EA3               	movlw	163
 10535  004E8A  6EDE               	movwf	postinc2,c
 10536  004E8C  0E0F               	movlw	15
 10537  004E8E  6EDD               	movwf	postdec2,c
 10538  004E90                     
 10539                           ;dc_motor.c: 45:     motorL->dir_LAT = (unsigned char *)(&LATE);
 10540  004E90  EE20 F004          	lfsr	2,4
 10541  004E94  5001               	movf	initDCmotors_parameter@motorL^0,w,c
 10542  004E96  26D9               	addwf	fsr2l,f,c
 10543  004E98  5002               	movf	(initDCmotors_parameter@motorL+1)^0,w,c
 10544  004E9A  22DA               	addwfc	fsr2h,f,c
 10545  004E9C  0E7D               	movlw	125
 10546  004E9E  6EDE               	movwf	postinc2,c
 10547  004EA0  0E0F               	movlw	15
 10548  004EA2  6EDD               	movwf	postdec2,c
 10549  004EA4                     
 10550                           ;dc_motor.c: 46:     motorL->dir_pin = 4;
 10551  004EA4  EE20 F006          	lfsr	2,6
 10552  004EA8  5001               	movf	initDCmotors_parameter@motorL^0,w,c
 10553  004EAA  26D9               	addwf	fsr2l,f,c
 10554  004EAC  5002               	movf	(initDCmotors_parameter@motorL+1)^0,w,c
 10555  004EAE  22DA               	addwfc	fsr2h,f,c
 10556  004EB0  0E04               	movlw	4
 10557  004EB2  6EDF               	movwf	indf2,c
 10558  004EB4                     
 10559                           ;dc_motor.c: 47:     motorL->PWMperiod = 199;
 10560  004EB4  EE20 F007          	lfsr	2,7
 10561  004EB8  5001               	movf	initDCmotors_parameter@motorL^0,w,c
 10562  004EBA  26D9               	addwf	fsr2l,f,c
 10563  004EBC  5002               	movf	(initDCmotors_parameter@motorL+1)^0,w,c
 10564  004EBE  22DA               	addwfc	fsr2h,f,c
 10565  004EC0  0EC7               	movlw	199
 10566  004EC2  6EDE               	movwf	postinc2,c
 10567  004EC4  0E00               	movlw	0
 10568  004EC6  6EDD               	movwf	postdec2,c
 10569  004EC8                     
 10570                           ;dc_motor.c: 50:     motorR->power = 0;
 10571  004EC8  C003  FFD9         	movff	initDCmotors_parameter@motorR,fsr2l
 10572  004ECC  C004  FFDA         	movff	initDCmotors_parameter@motorR+1,fsr2h
 10573  004ED0  0E00               	movlw	0
 10574  004ED2  6EDF               	movwf	indf2,c
 10575                           
 10576                           ;dc_motor.c: 51:     motorR->direction = 1;
 10577  004ED4  EE20 F001          	lfsr	2,1
 10578  004ED8  5003               	movf	initDCmotors_parameter@motorR^0,w,c
 10579  004EDA  26D9               	addwf	fsr2l,f,c
 10580  004EDC  5004               	movf	(initDCmotors_parameter@motorR+1)^0,w,c
 10581  004EDE  22DA               	addwfc	fsr2h,f,c
 10582  004EE0  0E01               	movlw	1
 10583  004EE2  6EDF               	movwf	indf2,c
 10584                           
 10585                           ;dc_motor.c: 52:     motorR->dutyHighByte = (unsigned char *)(&PWM7DCH);
 10586  004EE4  EE20 F002          	lfsr	2,2
 10587  004EE8  5003               	movf	initDCmotors_parameter@motorR^0,w,c
 10588  004EEA  26D9               	addwf	fsr2l,f,c
 10589  004EEC  5004               	movf	(initDCmotors_parameter@motorR+1)^0,w,c
 10590  004EEE  22DA               	addwfc	fsr2h,f,c
 10591  004EF0  0EA0               	movlw	160
 10592  004EF2  6EDE               	movwf	postinc2,c
 10593  004EF4  0E0F               	movlw	15
 10594  004EF6  6EDD               	movwf	postdec2,c
 10595                           
 10596                           ;dc_motor.c: 53:     motorR->dir_LAT = (unsigned char *)(&LATG);
 10597  004EF8  EE20 F004          	lfsr	2,4
 10598  004EFC  5003               	movf	initDCmotors_parameter@motorR^0,w,c
 10599  004EFE  26D9               	addwf	fsr2l,f,c
 10600  004F00  5004               	movf	(initDCmotors_parameter@motorR+1)^0,w,c
 10601  004F02  22DA               	addwfc	fsr2h,f,c
 10602  004F04  0E7F               	movlw	127
 10603  004F06  6EDE               	movwf	postinc2,c
 10604  004F08  0E0F               	movlw	15
 10605  004F0A  6EDD               	movwf	postdec2,c
 10606                           
 10607                           ;dc_motor.c: 54:     motorR->dir_pin = 6;
 10608  004F0C  EE20 F006          	lfsr	2,6
 10609  004F10  5003               	movf	initDCmotors_parameter@motorR^0,w,c
 10610  004F12  26D9               	addwf	fsr2l,f,c
 10611  004F14  5004               	movf	(initDCmotors_parameter@motorR+1)^0,w,c
 10612  004F16  22DA               	addwfc	fsr2h,f,c
 10613  004F18  0E06               	movlw	6
 10614  004F1A  6EDF               	movwf	indf2,c
 10615                           
 10616                           ;dc_motor.c: 55:     motorR->PWMperiod = 199;
 10617  004F1C  EE20 F007          	lfsr	2,7
 10618  004F20  5003               	movf	initDCmotors_parameter@motorR^0,w,c
 10619  004F22  26D9               	addwf	fsr2l,f,c
 10620  004F24  5004               	movf	(initDCmotors_parameter@motorR+1)^0,w,c
 10621  004F26  22DA               	addwfc	fsr2h,f,c
 10622  004F28  0EC7               	movlw	199
 10623  004F2A  6EDE               	movwf	postinc2,c
 10624  004F2C  0E00               	movlw	0
 10625  004F2E  6EDD               	movwf	postdec2,c
 10626  004F30  0012               	return		;funcret
 10627  004F32                     __end_of_initDCmotors_parameter:
 10628                           	callstack 0
 10629                           
 10630 ;; *************** function _initDCmotorsPWM *****************
 10631 ;; Defined at:
 10632 ;;		line 10 in file "dc_motor.c"
 10633 ;; Parameters:    Size  Location     Type
 10634 ;;  PWMperiod       2    0[COMRAM] int 
 10635 ;; Auto vars:     Size  Location     Type
 10636 ;;		None
 10637 ;; Return value:  Size  Location     Type
 10638 ;;                  1    wreg      void 
 10639 ;; Registers used:
 10640 ;;		wreg, status,2
 10641 ;; Tracked objects:
 10642 ;;		On entry : 0/0
 10643 ;;		On exit  : 0/0
 10644 ;;		Unchanged: 0/0
 10645 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10646 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10647 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10648 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10649 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10650 ;;Total ram usage:        2 bytes
 10651 ;; Hardware stack levels used: 1
 10652 ;; Hardware stack levels required when called: 1
 10653 ;; This function calls:
 10654 ;;		Nothing
 10655 ;; This function is called by:
 10656 ;;		_main
 10657 ;; This function uses a non-reentrant model
 10658 ;;
 10659                           
 10660                           	psect	text52
 10661  0058C2                     __ptext52:
 10662                           	callstack 0
 10663  0058C2                     _initDCmotorsPWM:
 10664                           	callstack 29
 10665  0058C2                     
 10666                           ;dc_motor.c: 13:     TRISEbits.TRISE2=0;
 10667  0058C2  9485               	bcf	133,2,c	;volatile
 10668                           
 10669                           ;dc_motor.c: 14:     TRISCbits.TRISC7=0;
 10670  0058C4  9E83               	bcf	131,7,c	;volatile
 10671                           
 10672                           ;dc_motor.c: 15:     TRISGbits.TRISG6=0;
 10673  0058C6  9C87               	bcf	135,6,c	;volatile
 10674                           
 10675                           ;dc_motor.c: 16:     TRISEbits.TRISE4=0;
 10676  0058C8  9885               	bcf	133,4,c	;volatile
 10677                           
 10678                           ;dc_motor.c: 17:     LATEbits.LATE2=0;
 10679  0058CA  947D               	bcf	125,2,c	;volatile
 10680                           
 10681                           ;dc_motor.c: 18:     LATCbits.LATC7=0;
 10682  0058CC  9E7B               	bcf	123,7,c	;volatile
 10683                           
 10684                           ;dc_motor.c: 19:     LATGbits.LATG6=0;
 10685  0058CE  9C7F               	bcf	127,6,c	;volatile
 10686                           
 10687                           ;dc_motor.c: 20:     LATEbits.LATE4=0;
 10688  0058D0  987D               	bcf	125,4,c	;volatile
 10689  0058D2                     
 10690                           ;dc_motor.c: 23:     T2CONbits.CKPS=0b011;
 10691  0058D2  50BD               	movf	189,w,c	;volatile
 10692  0058D4  0B8F               	andlw	-113
 10693  0058D6  0930               	iorlw	48
 10694  0058D8  6EBD               	movwf	189,c	;volatile
 10695                           
 10696                           ;dc_motor.c: 24:     T2HLTbits.MODE=0b00000;
 10697  0058DA  0EE0               	movlw	-32
 10698  0058DC  16BE               	andwf	190,f,c	;volatile
 10699                           
 10700                           ;dc_motor.c: 25:     T2CLKCONbits.CS=0b0001;
 10701  0058DE  50BF               	movf	191,w,c	;volatile
 10702  0058E0  0BF0               	andlw	-16
 10703  0058E2  0901               	iorlw	1
 10704  0058E4  6EBF               	movwf	191,c	;volatile
 10705                           
 10706                           ;dc_motor.c: 28:     T2PR=200-1;
 10707  0058E6  0EC7               	movlw	199
 10708  0058E8  6EBC               	movwf	188,c	;volatile
 10709  0058EA                     
 10710                           ;dc_motor.c: 29:     T2CONbits.ON=1;
 10711  0058EA  8EBD               	bsf	189,7,c	;volatile
 10712                           
 10713                           ;dc_motor.c: 31:     RE2PPS=0x0A;
 10714  0058EC  0E0A               	movlw	10
 10715  0058EE  010E               	movlb	14	; () banked
 10716  0058F0  6F74               	movwf	116,b	;volatile
 10717                           
 10718                           ;dc_motor.c: 32:     RC7PPS=0x0B;
 10719  0058F2  0E0B               	movlw	11
 10720  0058F4  6F69               	movwf	105,b	;volatile
 10721                           
 10722                           ;dc_motor.c: 34:     PWM6DCH=0;
 10723  0058F6  0E00               	movlw	0
 10724  0058F8  6EA3               	movwf	163,c	;volatile
 10725                           
 10726                           ;dc_motor.c: 35:     PWM7DCH=0;
 10727  0058FA  0E00               	movlw	0
 10728  0058FC  6EA0               	movwf	160,c	;volatile
 10729  0058FE                     
 10730                           ; BSR set to: 14
 10731                           ;dc_motor.c: 37:     PWM6CONbits.EN = 1;
 10732  0058FE  8EA4               	bsf	164,7,c	;volatile
 10733  005900                     
 10734                           ; BSR set to: 14
 10735                           ;dc_motor.c: 38:     PWM7CONbits.EN = 1;
 10736  005900  8EA1               	bsf	161,7,c	;volatile
 10737  005902                     
 10738                           ; BSR set to: 14
 10739  005902  0012               	return		;funcret
 10740  005904                     __end_of_initDCmotorsPWM:
 10741                           	callstack 0
 10742                           
 10743 ;; *************** function _color_click_init *****************
 10744 ;; Defined at:
 10745 ;;		line 67 in file "color.c"
 10746 ;; Parameters:    Size  Location     Type
 10747 ;;		None
 10748 ;; Auto vars:     Size  Location     Type
 10749 ;;		None
 10750 ;; Return value:  Size  Location     Type
 10751 ;;                  1    wreg      void 
 10752 ;; Registers used:
 10753 ;;		wreg, status,2, status,0, cstack
 10754 ;; Tracked objects:
 10755 ;;		On entry : 0/0
 10756 ;;		On exit  : 0/0
 10757 ;;		Unchanged: 0/0
 10758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10759 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10760 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10761 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10762 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10763 ;;Total ram usage:        1 bytes
 10764 ;; Hardware stack levels used: 1
 10765 ;; Hardware stack levels required when called: 4
 10766 ;; This function calls:
 10767 ;;		_I2C_2_Master_Init
 10768 ;;		_color_writetoaddr
 10769 ;; This function is called by:
 10770 ;;		_main
 10771 ;; This function uses a non-reentrant model
 10772 ;;
 10773                           
 10774                           	psect	text53
 10775  005AEC                     __ptext53:
 10776                           	callstack 0
 10777  005AEC                     _color_click_init:
 10778                           	callstack 26
 10779  005AEC                     
 10780                           ;color.c: 70:     I2C_2_Master_Init();
 10781  005AEC  ECBF  F02D         	call	_I2C_2_Master_Init	;wreg free
 10782  005AF0                     
 10783                           ;color.c: 73:  color_writetoaddr(0x00, 0x01);
 10784  005AF0  0E01               	movlw	1
 10785  005AF2  6E03               	movwf	color_writetoaddr@value^0,c
 10786  005AF4  0E00               	movlw	0
 10787  005AF6  EC5B  F02E         	call	_color_writetoaddr
 10788  005AFA                     
 10789                           ;color.c: 74:     _delay((unsigned long)((3)*(64000000/4000.0)));
 10790  005AFA  0E3F               	movlw	63
 10791  005AFC  6E05               	movwf	??_color_click_init^0,c
 10792  005AFE  0E55               	movlw	85
 10793  005B00                     u6107:
 10794  005B00  2EE8               	decfsz	wreg,f,c
 10795  005B02  D7FE               	bra	u6107
 10796  005B04  2E05               	decfsz	??_color_click_init^0,f,c
 10797  005B06  D7FC               	bra	u6107
 10798  005B08  F000               	nop	
 10799  005B0A                     
 10800                           ;color.c: 77:  color_writetoaddr(0x00, 0x03);
 10801  005B0A  0E03               	movlw	3
 10802  005B0C  6E03               	movwf	color_writetoaddr@value^0,c
 10803  005B0E  0E00               	movlw	0
 10804  005B10  EC5B  F02E         	call	_color_writetoaddr
 10805  005B14                     
 10806                           ;color.c: 80:  color_writetoaddr(0x01, 0xD5);
 10807  005B14  0ED5               	movlw	213
 10808  005B16  6E03               	movwf	color_writetoaddr@value^0,c
 10809  005B18  0E01               	movlw	1
 10810  005B1A  EC5B  F02E         	call	_color_writetoaddr
 10811  005B1E  0012               	return		;funcret
 10812  005B20                     __end_of_color_click_init:
 10813                           	callstack 0
 10814                           
 10815 ;; *************** function _color_writetoaddr *****************
 10816 ;; Defined at:
 10817 ;;		line 83 in file "color.c"
 10818 ;; Parameters:    Size  Location     Type
 10819 ;;  address         1    wreg     unsigned char 
 10820 ;;  value           1    2[COMRAM] unsigned char 
 10821 ;; Auto vars:     Size  Location     Type
 10822 ;;  address         1    3[COMRAM] unsigned char 
 10823 ;; Return value:  Size  Location     Type
 10824 ;;                  1    wreg      void 
 10825 ;; Registers used:
 10826 ;;		wreg, status,2, status,0, cstack
 10827 ;; Tracked objects:
 10828 ;;		On entry : 0/0
 10829 ;;		On exit  : 0/0
 10830 ;;		Unchanged: 0/0
 10831 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10832 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10833 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10834 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10835 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10836 ;;Total ram usage:        2 bytes
 10837 ;; Hardware stack levels used: 1
 10838 ;; Hardware stack levels required when called: 3
 10839 ;; This function calls:
 10840 ;;		_I2C_2_Master_Start
 10841 ;;		_I2C_2_Master_Stop
 10842 ;;		_I2C_2_Master_Write
 10843 ;; This function is called by:
 10844 ;;		_color_click_init
 10845 ;; This function uses a non-reentrant model
 10846 ;;
 10847                           
 10848                           	psect	text54
 10849  005CB6                     __ptext54:
 10850                           	callstack 0
 10851  005CB6                     _color_writetoaddr:
 10852                           	callstack 26
 10853                           
 10854                           ;incstack = 0
 10855                           ;color_writetoaddr@address stored from wreg
 10856  005CB6  6E04               	movwf	color_writetoaddr@address^0,c
 10857  005CB8                     
 10858                           ;color.c: 84:     I2C_2_Master_Start();
 10859  005CB8  ECC0  F02E         	call	_I2C_2_Master_Start	;wreg free
 10860                           
 10861                           ;color.c: 85:     I2C_2_Master_Write(0x52 | 0x00);
 10862  005CBC  0E52               	movlw	82
 10863  005CBE  ECAA  F02E         	call	_I2C_2_Master_Write
 10864                           
 10865                           ;color.c: 86:     I2C_2_Master_Write(0x80 | address);
 10866  005CC2  5004               	movf	color_writetoaddr@address^0,w,c
 10867  005CC4  0980               	iorlw	128
 10868  005CC6  ECAA  F02E         	call	_I2C_2_Master_Write
 10869                           
 10870                           ;color.c: 87:     I2C_2_Master_Write(value);
 10871  005CCA  5003               	movf	color_writetoaddr@value^0,w,c
 10872  005CCC  ECAA  F02E         	call	_I2C_2_Master_Write
 10873                           
 10874                           ;color.c: 88:     I2C_2_Master_Stop();
 10875  005CD0  ECBB  F02E         	call	_I2C_2_Master_Stop	;wreg free
 10876  005CD4  0012               	return		;funcret
 10877  005CD6                     __end_of_color_writetoaddr:
 10878                           	callstack 0
 10879                           
 10880 ;; *************** function _I2C_2_Master_Write *****************
 10881 ;; Defined at:
 10882 ;;		line 45 in file "i2c.c"
 10883 ;; Parameters:    Size  Location     Type
 10884 ;;  data_byte       1    wreg     unsigned char 
 10885 ;; Auto vars:     Size  Location     Type
 10886 ;;  data_byte       1    1[COMRAM] unsigned char 
 10887 ;; Return value:  Size  Location     Type
 10888 ;;                  1    wreg      void 
 10889 ;; Registers used:
 10890 ;;		wreg, status,2, status,0, cstack
 10891 ;; Tracked objects:
 10892 ;;		On entry : 0/0
 10893 ;;		On exit  : 0/0
 10894 ;;		Unchanged: 0/0
 10895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10896 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10897 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10898 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10899 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10900 ;;Total ram usage:        1 bytes
 10901 ;; Hardware stack levels used: 1
 10902 ;; Hardware stack levels required when called: 2
 10903 ;; This function calls:
 10904 ;;		_I2C_2_Master_Idle
 10905 ;; This function is called by:
 10906 ;;		_color_writetoaddr
 10907 ;;		_color_read_Red
 10908 ;;		_color_read_Blue
 10909 ;;		_color_read_Green
 10910 ;;		_color_read_Clear
 10911 ;; This function uses a non-reentrant model
 10912 ;;
 10913                           
 10914                           	psect	text55
 10915  005D54                     __ptext55:
 10916                           	callstack 0
 10917  005D54                     _I2C_2_Master_Write:
 10918                           	callstack 24
 10919                           
 10920                           ;incstack = 0
 10921                           ;I2C_2_Master_Write@data_byte stored from wreg
 10922  005D54  6E02               	movwf	I2C_2_Master_Write@data_byte^0,c
 10923  005D56                     
 10924                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
 10925  005D56  ECD4  F02D         	call	_I2C_2_Master_Idle	;wreg free
 10926  005D5A                     
 10927                           ;i2c.c: 48:   SSP2BUF = data_byte;
 10928  005D5A  C002  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
 10929  005D5E  0012               	return		;funcret
 10930  005D60                     __end_of_I2C_2_Master_Write:
 10931                           	callstack 0
 10932                           
 10933 ;; *************** function _I2C_2_Master_Stop *****************
 10934 ;; Defined at:
 10935 ;;		line 39 in file "i2c.c"
 10936 ;; Parameters:    Size  Location     Type
 10937 ;;		None
 10938 ;; Auto vars:     Size  Location     Type
 10939 ;;		None
 10940 ;; Return value:  Size  Location     Type
 10941 ;;                  1    wreg      void 
 10942 ;; Registers used:
 10943 ;;		wreg, status,2, status,0, cstack
 10944 ;; Tracked objects:
 10945 ;;		On entry : 0/0
 10946 ;;		On exit  : 0/0
 10947 ;;		Unchanged: 0/0
 10948 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10949 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10950 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10951 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10952 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10953 ;;Total ram usage:        0 bytes
 10954 ;; Hardware stack levels used: 1
 10955 ;; Hardware stack levels required when called: 2
 10956 ;; This function calls:
 10957 ;;		_I2C_2_Master_Idle
 10958 ;; This function is called by:
 10959 ;;		_color_writetoaddr
 10960 ;;		_color_read_Red
 10961 ;;		_color_read_Blue
 10962 ;;		_color_read_Green
 10963 ;;		_color_read_Clear
 10964 ;; This function uses a non-reentrant model
 10965 ;;
 10966                           
 10967                           	psect	text56
 10968  005D76                     __ptext56:
 10969                           	callstack 0
 10970  005D76                     _I2C_2_Master_Stop:
 10971                           	callstack 24
 10972  005D76                     
 10973                           ;i2c.c: 41:   I2C_2_Master_Idle();
 10974  005D76  ECD4  F02D         	call	_I2C_2_Master_Idle	;wreg free
 10975  005D7A                     
 10976                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
 10977  005D7A  010E               	movlb	14	; () banked
 10978  005D7C  85DA               	bsf	218,2,b	;volatile
 10979  005D7E                     
 10980                           ; BSR set to: 14
 10981  005D7E  0012               	return		;funcret
 10982  005D80                     __end_of_I2C_2_Master_Stop:
 10983                           	callstack 0
 10984                           
 10985 ;; *************** function _I2C_2_Master_Start *****************
 10986 ;; Defined at:
 10987 ;;		line 27 in file "i2c.c"
 10988 ;; Parameters:    Size  Location     Type
 10989 ;;		None
 10990 ;; Auto vars:     Size  Location     Type
 10991 ;;		None
 10992 ;; Return value:  Size  Location     Type
 10993 ;;                  1    wreg      void 
 10994 ;; Registers used:
 10995 ;;		wreg, status,2, status,0, cstack
 10996 ;; Tracked objects:
 10997 ;;		On entry : 0/0
 10998 ;;		On exit  : 0/0
 10999 ;;		Unchanged: 0/0
 11000 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11001 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11002 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11003 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11004 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11005 ;;Total ram usage:        0 bytes
 11006 ;; Hardware stack levels used: 1
 11007 ;; Hardware stack levels required when called: 2
 11008 ;; This function calls:
 11009 ;;		_I2C_2_Master_Idle
 11010 ;; This function is called by:
 11011 ;;		_color_writetoaddr
 11012 ;;		_color_read_Red
 11013 ;;		_color_read_Blue
 11014 ;;		_color_read_Green
 11015 ;;		_color_read_Clear
 11016 ;; This function uses a non-reentrant model
 11017 ;;
 11018                           
 11019                           	psect	text57
 11020  005D80                     __ptext57:
 11021                           	callstack 0
 11022  005D80                     _I2C_2_Master_Start:
 11023                           	callstack 24
 11024  005D80                     
 11025                           ;i2c.c: 29:   I2C_2_Master_Idle();
 11026  005D80  ECD4  F02D         	call	_I2C_2_Master_Idle	;wreg free
 11027  005D84                     
 11028                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
 11029  005D84  010E               	movlb	14	; () banked
 11030  005D86  81DA               	bsf	218,0,b	;volatile
 11031  005D88                     
 11032                           ; BSR set to: 14
 11033  005D88  0012               	return		;funcret
 11034  005D8A                     __end_of_I2C_2_Master_Start:
 11035                           	callstack 0
 11036                           
 11037 ;; *************** function _I2C_2_Master_Idle *****************
 11038 ;; Defined at:
 11039 ;;		line 22 in file "i2c.c"
 11040 ;; Parameters:    Size  Location     Type
 11041 ;;		None
 11042 ;; Auto vars:     Size  Location     Type
 11043 ;;		None
 11044 ;; Return value:  Size  Location     Type
 11045 ;;                  1    wreg      void 
 11046 ;; Registers used:
 11047 ;;		wreg, status,2, status,0
 11048 ;; Tracked objects:
 11049 ;;		On entry : 0/0
 11050 ;;		On exit  : 0/0
 11051 ;;		Unchanged: 0/0
 11052 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11053 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11054 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11055 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11056 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11057 ;;Total ram usage:        1 bytes
 11058 ;; Hardware stack levels used: 1
 11059 ;; Hardware stack levels required when called: 1
 11060 ;; This function calls:
 11061 ;;		Nothing
 11062 ;; This function is called by:
 11063 ;;		_I2C_2_Master_Start
 11064 ;;		_I2C_2_Master_RepStart
 11065 ;;		_I2C_2_Master_Stop
 11066 ;;		_I2C_2_Master_Write
 11067 ;;		_I2C_2_Master_Read
 11068 ;; This function uses a non-reentrant model
 11069 ;;
 11070                           
 11071                           	psect	text58
 11072  005BA8                     __ptext58:
 11073                           	callstack 0
 11074  005BA8                     _I2C_2_Master_Idle:
 11075                           	callstack 24
 11076  005BA8                     l195:
 11077  005BA8  010E               	movlb	14	; () banked
 11078  005BAA  B5D8               	btfsc	216,2,b	;volatile
 11079  005BAC  EFDA  F02D         	goto	u3291
 11080  005BB0  EFDC  F02D         	goto	u3290
 11081  005BB4                     u3291:
 11082  005BB4  EFD4  F02D         	goto	l195
 11083  005BB8                     u3290:
 11084  005BB8                     
 11085                           ; BSR set to: 14
 11086  005BB8  CEDA F001          	movff	3802,??_I2C_2_Master_Idle	;volatile
 11087  005BBC  0E1F               	movlw	31
 11088  005BBE  1601               	andwf	??_I2C_2_Master_Idle^0,f,c
 11089  005BC0  A4D8               	btfss	status,2,c
 11090  005BC2  EFE5  F02D         	goto	u3301
 11091  005BC6  EFE7  F02D         	goto	u3300
 11092  005BCA                     u3301:
 11093  005BCA  EFD4  F02D         	goto	l195
 11094  005BCE                     u3300:
 11095  005BCE                     
 11096                           ; BSR set to: 14
 11097  005BCE  0012               	return		;funcret
 11098  005BD0                     __end_of_I2C_2_Master_Idle:
 11099                           	callstack 0
 11100                           
 11101 ;; *************** function _I2C_2_Master_Init *****************
 11102 ;; Defined at:
 11103 ;;		line 4 in file "i2c.c"
 11104 ;; Parameters:    Size  Location     Type
 11105 ;;		None
 11106 ;; Auto vars:     Size  Location     Type
 11107 ;;		None
 11108 ;; Return value:  Size  Location     Type
 11109 ;;                  1    wreg      void 
 11110 ;; Registers used:
 11111 ;;		wreg, status,2
 11112 ;; Tracked objects:
 11113 ;;		On entry : 0/0
 11114 ;;		On exit  : 0/0
 11115 ;;		Unchanged: 0/0
 11116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11117 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11118 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11119 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11120 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11121 ;;Total ram usage:        0 bytes
 11122 ;; Hardware stack levels used: 1
 11123 ;; Hardware stack levels required when called: 1
 11124 ;; This function calls:
 11125 ;;		Nothing
 11126 ;; This function is called by:
 11127 ;;		_color_click_init
 11128 ;;		_main
 11129 ;; This function uses a non-reentrant model
 11130 ;;
 11131                           
 11132                           	psect	text59
 11133  005B7E                     __ptext59:
 11134                           	callstack 0
 11135  005B7E                     _I2C_2_Master_Init:
 11136                           	callstack 28
 11137  005B7E                     
 11138                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
 11139  005B7E  010E               	movlb	14	; () banked
 11140  005B80  51D9               	movf	217,w,b	;volatile
 11141  005B82  0BF0               	andlw	-16
 11142  005B84  0908               	iorlw	8
 11143  005B86  6FD9               	movwf	217,b	;volatile
 11144  005B88                     
 11145                           ; BSR set to: 14
 11146                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
 11147  005B88  8BD9               	bsf	217,5,b	;volatile
 11148                           
 11149                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
 11150  005B8A  0E9F               	movlw	159
 11151  005B8C  6FD6               	movwf	214,b	;volatile
 11152  005B8E                     
 11153                           ; BSR set to: 14
 11154                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
 11155  005B8E  8A84               	bsf	132,5,c	;volatile
 11156  005B90                     
 11157                           ; BSR set to: 14
 11158                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
 11159  005B90  8C84               	bsf	132,6,c	;volatile
 11160  005B92                     
 11161                           ; BSR set to: 14
 11162                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
 11163  005B92  9BA7               	bcf	167,5,b	;volatile
 11164  005B94                     
 11165                           ; BSR set to: 14
 11166                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
 11167  005B94  9DA7               	bcf	167,6,b	;volatile
 11168                           
 11169                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
 11170  005B96  0E1D               	movlw	29
 11171  005B98  6F1D               	movwf	29,b	;volatile
 11172                           
 11173                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
 11174  005B9A  0E1E               	movlw	30
 11175  005B9C  6F1C               	movwf	28,b	;volatile
 11176                           
 11177                           ;i2c.c: 18:   RD5PPS=0x1C;
 11178  005B9E  0E1C               	movlw	28
 11179  005BA0  6F6F               	movwf	111,b	;volatile
 11180                           
 11181                           ;i2c.c: 19:   RD6PPS=0x1B;
 11182  005BA2  0E1B               	movlw	27
 11183  005BA4  6F70               	movwf	112,b	;volatile
 11184  005BA6                     
 11185                           ; BSR set to: 14
 11186  005BA6  0012               	return		;funcret
 11187  005BA8                     __end_of_I2C_2_Master_Init:
 11188                           	callstack 0
 11189                           
 11190 ;; *************** function _calibration_motor *****************
 11191 ;; Defined at:
 11192 ;;		line 77 in file "test_and_calibration.c"
 11193 ;; Parameters:    Size  Location     Type
 11194 ;;  mL              2   53[COMRAM] PTR struct DC_motor
 11195 ;;		 -> main@motorL(9), 
 11196 ;;  mR              2   55[COMRAM] PTR struct DC_motor
 11197 ;;		 -> main@motorR(9), 
 11198 ;; Auto vars:     Size  Location     Type
 11199 ;;		None
 11200 ;; Return value:  Size  Location     Type
 11201 ;;                  1    wreg      void 
 11202 ;; Registers used:
 11203 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11204 ;; Tracked objects:
 11205 ;;		On entry : 0/0
 11206 ;;		On exit  : 0/0
 11207 ;;		Unchanged: 0/0
 11208 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11209 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11210 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11211 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11212 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11213 ;;Total ram usage:        6 bytes
 11214 ;; Hardware stack levels used: 1
 11215 ;; Hardware stack levels required when called: 6
 11216 ;; This function calls:
 11217 ;;		_test_action
 11218 ;; This function is called by:
 11219 ;;		_main
 11220 ;; This function uses a non-reentrant model
 11221 ;;
 11222                           
 11223                           	psect	text60
 11224  004D7A                     __ptext60:
 11225                           	callstack 0
 11226  004D7A                     _calibration_motor:
 11227                           	callstack 24
 11228  004D7A                     l707:
 11229                           
 11230                           ;test_and_calibration.c: 80:         LATDbits.LATD7 = 1;
 11231  004D7A  8E7C               	bsf	124,7,c	;volatile
 11232                           
 11233                           ;test_and_calibration.c: 81:         LATHbits.LATH3 = 1;
 11234  004D7C  8680               	bsf	128,3,c	;volatile
 11235                           
 11236                           ;test_and_calibration.c: 83:         if (!PORTFbits.RF2) {
 11237  004D7E  B48E               	btfsc	142,2,c	;volatile
 11238  004D80  EFC4  F026         	goto	u5431
 11239  004D84  EFC6  F026         	goto	u5430
 11240  004D88                     u5431:
 11241  004D88  EFF0  F026         	goto	l708
 11242  004D8C                     u5430:
 11243  004D8C                     
 11244                           ;test_and_calibration.c: 84:             _delay((unsigned long)((300)*(64000000/4000.0))
      +                          );
 11245  004D8C  0E19               	movlw	25
 11246  004D8E  6E3B               	movwf	(??_calibration_motor+1)^0,c
 11247  004D90  0E5A               	movlw	90
 11248  004D92  6E3A               	movwf	??_calibration_motor^0,c
 11249  004D94  0EB2               	movlw	178
 11250  004D96                     u6117:
 11251  004D96  2EE8               	decfsz	wreg,f,c
 11252  004D98  D7FE               	bra	u6117
 11253  004D9A  2E3A               	decfsz	??_calibration_motor^0,f,c
 11254  004D9C  D7FC               	bra	u6117
 11255  004D9E  2E3B               	decfsz	(??_calibration_motor+1)^0,f,c
 11256  004DA0  D7FA               	bra	u6117
 11257  004DA2                     
 11258                           ;test_and_calibration.c: 85:             if (!PORTFbits.RF2){LATDbits.LATD7 = 0; _delay(
      +                          (unsigned long)((300)*(64000000/4000.0))); SENSITIVITY += 5; }
 11259  004DA2  B48E               	btfsc	142,2,c	;volatile
 11260  004DA4  EFD6  F026         	goto	u5441
 11261  004DA8  EFD8  F026         	goto	u5440
 11262  004DAC                     u5441:
 11263  004DAC  EFE7  F026         	goto	l5251
 11264  004DB0                     u5440:
 11265  004DB0  9E7C               	bcf	124,7,c	;volatile
 11266  004DB2  0E19               	movlw	25
 11267  004DB4  6E3B               	movwf	(??_calibration_motor+1)^0,c
 11268  004DB6  0E5A               	movlw	90
 11269  004DB8  6E3A               	movwf	??_calibration_motor^0,c
 11270  004DBA  0EB2               	movlw	178
 11271  004DBC                     u6127:
 11272  004DBC  2EE8               	decfsz	wreg,f,c
 11273  004DBE  D7FE               	bra	u6127
 11274  004DC0  2E3A               	decfsz	??_calibration_motor^0,f,c
 11275  004DC2  D7FC               	bra	u6127
 11276  004DC4  2E3B               	decfsz	(??_calibration_motor+1)^0,f,c
 11277  004DC6  D7FA               	bra	u6127
 11278  004DC8  0E05               	movlw	5
 11279  004DCA  0100               	movlb	0	; () banked
 11280  004DCC  27FC               	addwf	_SENSITIVITY& (0+255),f,b
 11281  004DCE                     l5251:
 11282                           
 11283                           ;test_and_calibration.c: 86:             if (!PORTFbits.RF3){break;}
 11284  004DCE  B68E               	btfsc	142,3,c	;volatile
 11285  004DD0  EFEC  F026         	goto	u5451
 11286  004DD4  EFEE  F026         	goto	u5450
 11287  004DD8                     u5451:
 11288  004DD8  EFF0  F026         	goto	l708
 11289  004DDC                     u5450:
 11290  004DDC  EF23  F027         	goto	l711
 11291  004DE0                     l708:
 11292                           
 11293                           ;test_and_calibration.c: 88:         if (!PORTFbits.RF3) {
 11294  004DE0  B68E               	btfsc	142,3,c	;volatile
 11295  004DE2  EFF5  F026         	goto	u5461
 11296  004DE6  EFF7  F026         	goto	u5460
 11297  004DEA                     u5461:
 11298  004DEA  EFBD  F026         	goto	l707
 11299  004DEE                     u5460:
 11300  004DEE                     
 11301                           ;test_and_calibration.c: 89:             _delay((unsigned long)((300)*(64000000/4000.0))
      +                          );
 11302  004DEE  0E19               	movlw	25
 11303  004DF0  6E3B               	movwf	(??_calibration_motor+1)^0,c
 11304  004DF2  0E5A               	movlw	90
 11305  004DF4  6E3A               	movwf	??_calibration_motor^0,c
 11306  004DF6  0EB2               	movlw	178
 11307  004DF8                     u6137:
 11308  004DF8  2EE8               	decfsz	wreg,f,c
 11309  004DFA  D7FE               	bra	u6137
 11310  004DFC  2E3A               	decfsz	??_calibration_motor^0,f,c
 11311  004DFE  D7FC               	bra	u6137
 11312  004E00  2E3B               	decfsz	(??_calibration_motor+1)^0,f,c
 11313  004E02  D7FA               	bra	u6137
 11314  004E04                     
 11315                           ;test_and_calibration.c: 90:             if (!PORTFbits.RF2){break;}
 11316  004E04  B48E               	btfsc	142,2,c	;volatile
 11317  004E06  EF07  F027         	goto	u5471
 11318  004E0A  EF09  F027         	goto	u5470
 11319  004E0E                     u5471:
 11320  004E0E  EF0B  F027         	goto	l713
 11321  004E12                     u5470:
 11322  004E12  EF23  F027         	goto	l711
 11323  004E16                     l713:
 11324                           
 11325                           ;test_and_calibration.c: 91:             if (!PORTFbits.RF3){LATHbits.LATH3 = 0; _delay(
      +                          (unsigned long)((300)*(64000000/4000.0))); SENSITIVITY -= 5; }
 11326  004E16  B68E               	btfsc	142,3,c	;volatile
 11327  004E18  EF10  F027         	goto	u5481
 11328  004E1C  EF12  F027         	goto	u5480
 11329  004E20                     u5481:
 11330  004E20  EFBD  F026         	goto	l707
 11331  004E24                     u5480:
 11332  004E24  9680               	bcf	128,3,c	;volatile
 11333  004E26  0E19               	movlw	25
 11334  004E28  6E3B               	movwf	(??_calibration_motor+1)^0,c
 11335  004E2A  0E5A               	movlw	90
 11336  004E2C  6E3A               	movwf	??_calibration_motor^0,c
 11337  004E2E  0EB2               	movlw	178
 11338  004E30                     u6147:
 11339  004E30  2EE8               	decfsz	wreg,f,c
 11340  004E32  D7FE               	bra	u6147
 11341  004E34  2E3A               	decfsz	??_calibration_motor^0,f,c
 11342  004E36  D7FC               	bra	u6147
 11343  004E38  2E3B               	decfsz	(??_calibration_motor+1)^0,f,c
 11344  004E3A  D7FA               	bra	u6147
 11345  004E3C  0E05               	movlw	5
 11346  004E3E  0100               	movlb	0	; () banked
 11347  004E40  5FFC               	subwf	_SENSITIVITY& (0+255),f,b
 11348  004E42  EFBD  F026         	goto	l707
 11349  004E46                     l711:
 11350                           
 11351                           ;test_and_calibration.c: 94:     LATDbits.LATD7 = 0;
 11352  004E46  9E7C               	bcf	124,7,c	;volatile
 11353                           
 11354                           ;test_and_calibration.c: 95:     LATHbits.LATH3 = 0;
 11355  004E48  9680               	bcf	128,3,c	;volatile
 11356  004E4A                     
 11357                           ;test_and_calibration.c: 96:     test_action(mL, mR);
 11358  004E4A  C036  F032         	movff	calibration_motor@mL,test_action@mL
 11359  004E4E  C037  F033         	movff	calibration_motor@mL+1,test_action@mL+1
 11360  004E52  C038  F034         	movff	calibration_motor@mR,test_action@mR
 11361  004E56  C039  F035         	movff	calibration_motor@mR+1,test_action@mR+1
 11362  004E5A  ECFD  F01D         	call	_test_action	;wreg free
 11363  004E5E  0012               	return		;funcret
 11364  004E60                     __end_of_calibration_motor:
 11365                           	callstack 0
 11366                           
 11367 ;; *************** function _test_action *****************
 11368 ;; Defined at:
 11369 ;;		line 69 in file "movement.c"
 11370 ;; Parameters:    Size  Location     Type
 11371 ;;  mL              2   49[COMRAM] PTR struct DC_motor
 11372 ;;		 -> main@motorL(9), 
 11373 ;;  mR              2   51[COMRAM] PTR struct DC_motor
 11374 ;;		 -> main@motorR(9), 
 11375 ;; Auto vars:     Size  Location     Type
 11376 ;;		None
 11377 ;; Return value:  Size  Location     Type
 11378 ;;                  1    wreg      void 
 11379 ;; Registers used:
 11380 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11381 ;; Tracked objects:
 11382 ;;		On entry : 0/0
 11383 ;;		On exit  : 0/0
 11384 ;;		Unchanged: 0/0
 11385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11386 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11387 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11388 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11389 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11390 ;;Total ram usage:        4 bytes
 11391 ;; Hardware stack levels used: 1
 11392 ;; Hardware stack levels required when called: 5
 11393 ;; This function calls:
 11394 ;;		_fullSpeedAhead_test
 11395 ;;		_turnLeft
 11396 ;;		_turnRight
 11397 ;; This function is called by:
 11398 ;;		_calibration_motor
 11399 ;; This function uses a non-reentrant model
 11400 ;;
 11401                           
 11402                           	psect	text61
 11403  003BFA                     __ptext61:
 11404                           	callstack 0
 11405  003BFA                     _test_action:
 11406                           	callstack 24
 11407  003BFA                     
 11408                           ;movement.c: 69: void test_action (struct DC_motor *mL, struct DC_motor *mR);movement.c:
      +                           70: { fullSpeedAhead_test(mL,mR);
 11409  003BFA  C032  F020         	movff	test_action@mL,fullSpeedAhead_test@mL
 11410  003BFE  C033  F021         	movff	test_action@mL+1,fullSpeedAhead_test@mL+1
 11411  003C02  C034  F022         	movff	test_action@mR,fullSpeedAhead_test@mR
 11412  003C06  C035  F023         	movff	test_action@mR+1,fullSpeedAhead_test@mR+1
 11413  003C0A  EC82  F02C         	call	_fullSpeedAhead_test	;wreg free
 11414                           
 11415                           ;movement.c: 71:     turnLeft(mL,mR,90);
 11416  003C0E  C032  F020         	movff	test_action@mL,turnLeft@mL
 11417  003C12  C033  F021         	movff	test_action@mL+1,turnLeft@mL+1
 11418  003C16  C034  F022         	movff	test_action@mR,turnLeft@mR
 11419  003C1A  C035  F023         	movff	test_action@mR+1,turnLeft@mR+1
 11420  003C1E  0E5A               	movlw	90
 11421  003C20  6E24               	movwf	turnLeft@angle_left^0,c
 11422  003C22  EC21  F022         	call	_turnLeft	;wreg free
 11423                           
 11424                           ;movement.c: 72:     fullSpeedAhead_test(mL,mR);
 11425  003C26  C032  F020         	movff	test_action@mL,fullSpeedAhead_test@mL
 11426  003C2A  C033  F021         	movff	test_action@mL+1,fullSpeedAhead_test@mL+1
 11427  003C2E  C034  F022         	movff	test_action@mR,fullSpeedAhead_test@mR
 11428  003C32  C035  F023         	movff	test_action@mR+1,fullSpeedAhead_test@mR+1
 11429  003C36  EC82  F02C         	call	_fullSpeedAhead_test	;wreg free
 11430                           
 11431                           ;movement.c: 73:     turnLeft(mL,mR,90);
 11432  003C3A  C032  F020         	movff	test_action@mL,turnLeft@mL
 11433  003C3E  C033  F021         	movff	test_action@mL+1,turnLeft@mL+1
 11434  003C42  C034  F022         	movff	test_action@mR,turnLeft@mR
 11435  003C46  C035  F023         	movff	test_action@mR+1,turnLeft@mR+1
 11436  003C4A  0E5A               	movlw	90
 11437  003C4C  6E24               	movwf	turnLeft@angle_left^0,c
 11438  003C4E  EC21  F022         	call	_turnLeft	;wreg free
 11439                           
 11440                           ;movement.c: 74:     fullSpeedAhead_test(mL,mR);
 11441  003C52  C032  F020         	movff	test_action@mL,fullSpeedAhead_test@mL
 11442  003C56  C033  F021         	movff	test_action@mL+1,fullSpeedAhead_test@mL+1
 11443  003C5A  C034  F022         	movff	test_action@mR,fullSpeedAhead_test@mR
 11444  003C5E  C035  F023         	movff	test_action@mR+1,fullSpeedAhead_test@mR+1
 11445  003C62  EC82  F02C         	call	_fullSpeedAhead_test	;wreg free
 11446                           
 11447                           ;movement.c: 75:     turnLeft(mL,mR,180);
 11448  003C66  C032  F020         	movff	test_action@mL,turnLeft@mL
 11449  003C6A  C033  F021         	movff	test_action@mL+1,turnLeft@mL+1
 11450  003C6E  C034  F022         	movff	test_action@mR,turnLeft@mR
 11451  003C72  C035  F023         	movff	test_action@mR+1,turnLeft@mR+1
 11452  003C76  0EB4               	movlw	180
 11453  003C78  6E24               	movwf	turnLeft@angle_left^0,c
 11454  003C7A  EC21  F022         	call	_turnLeft	;wreg free
 11455                           
 11456                           ;movement.c: 76:     fullSpeedAhead_test(mL,mR);
 11457  003C7E  C032  F020         	movff	test_action@mL,fullSpeedAhead_test@mL
 11458  003C82  C033  F021         	movff	test_action@mL+1,fullSpeedAhead_test@mL+1
 11459  003C86  C034  F022         	movff	test_action@mR,fullSpeedAhead_test@mR
 11460  003C8A  C035  F023         	movff	test_action@mR+1,fullSpeedAhead_test@mR+1
 11461  003C8E  EC82  F02C         	call	_fullSpeedAhead_test	;wreg free
 11462                           
 11463                           ;movement.c: 77:     turnRight(mL,mR,90);
 11464  003C92  C032  F020         	movff	test_action@mL,turnRight@mL
 11465  003C96  C033  F021         	movff	test_action@mL+1,turnRight@mL+1
 11466  003C9A  C034  F022         	movff	test_action@mR,turnRight@mR
 11467  003C9E  C035  F023         	movff	test_action@mR+1,turnRight@mR+1
 11468  003CA2  0E5A               	movlw	90
 11469  003CA4  6E24               	movwf	turnRight@angle_right^0,c
 11470  003CA6  EC5A  F021         	call	_turnRight	;wreg free
 11471                           
 11472                           ;movement.c: 78:     fullSpeedAhead_test(mL,mR);
 11473  003CAA  C032  F020         	movff	test_action@mL,fullSpeedAhead_test@mL
 11474  003CAE  C033  F021         	movff	test_action@mL+1,fullSpeedAhead_test@mL+1
 11475  003CB2  C034  F022         	movff	test_action@mR,fullSpeedAhead_test@mR
 11476  003CB6  C035  F023         	movff	test_action@mR+1,fullSpeedAhead_test@mR+1
 11477  003CBA  EC82  F02C         	call	_fullSpeedAhead_test	;wreg free
 11478                           
 11479                           ;movement.c: 79:     turnRight(mL,mR,90);
 11480  003CBE  C032  F020         	movff	test_action@mL,turnRight@mL
 11481  003CC2  C033  F021         	movff	test_action@mL+1,turnRight@mL+1
 11482  003CC6  C034  F022         	movff	test_action@mR,turnRight@mR
 11483  003CCA  C035  F023         	movff	test_action@mR+1,turnRight@mR+1
 11484  003CCE  0E5A               	movlw	90
 11485  003CD0  6E24               	movwf	turnRight@angle_right^0,c
 11486  003CD2  EC5A  F021         	call	_turnRight	;wreg free
 11487                           
 11488                           ;movement.c: 80:     fullSpeedAhead_test(mL,mR);
 11489  003CD6  C032  F020         	movff	test_action@mL,fullSpeedAhead_test@mL
 11490  003CDA  C033  F021         	movff	test_action@mL+1,fullSpeedAhead_test@mL+1
 11491  003CDE  C034  F022         	movff	test_action@mR,fullSpeedAhead_test@mR
 11492  003CE2  C035  F023         	movff	test_action@mR+1,fullSpeedAhead_test@mR+1
 11493  003CE6  EC82  F02C         	call	_fullSpeedAhead_test	;wreg free
 11494                           
 11495                           ;movement.c: 81:     turnLeft(mL,mR,180);
 11496  003CEA  C032  F020         	movff	test_action@mL,turnLeft@mL
 11497  003CEE  C033  F021         	movff	test_action@mL+1,turnLeft@mL+1
 11498  003CF2  C034  F022         	movff	test_action@mR,turnLeft@mR
 11499  003CF6  C035  F023         	movff	test_action@mR+1,turnLeft@mR+1
 11500  003CFA  0EB4               	movlw	180
 11501  003CFC  6E24               	movwf	turnLeft@angle_left^0,c
 11502  003CFE  EC21  F022         	call	_turnLeft	;wreg free
 11503                           
 11504                           ;movement.c: 82:     fullSpeedAhead_test(mL,mR);
 11505  003D02  C032  F020         	movff	test_action@mL,fullSpeedAhead_test@mL
 11506  003D06  C033  F021         	movff	test_action@mL+1,fullSpeedAhead_test@mL+1
 11507  003D0A  C034  F022         	movff	test_action@mR,fullSpeedAhead_test@mR
 11508  003D0E  C035  F023         	movff	test_action@mR+1,fullSpeedAhead_test@mR+1
 11509  003D12  EC82  F02C         	call	_fullSpeedAhead_test	;wreg free
 11510                           
 11511                           ;movement.c: 83:     turnLeft(mL,mR,135);
 11512  003D16  C032  F020         	movff	test_action@mL,turnLeft@mL
 11513  003D1A  C033  F021         	movff	test_action@mL+1,turnLeft@mL+1
 11514  003D1E  C034  F022         	movff	test_action@mR,turnLeft@mR
 11515  003D22  C035  F023         	movff	test_action@mR+1,turnLeft@mR+1
 11516  003D26  0E87               	movlw	135
 11517  003D28  6E24               	movwf	turnLeft@angle_left^0,c
 11518  003D2A  EC21  F022         	call	_turnLeft	;wreg free
 11519                           
 11520                           ;movement.c: 84:     fullSpeedAhead_test(mL,mR);
 11521  003D2E  C032  F020         	movff	test_action@mL,fullSpeedAhead_test@mL
 11522  003D32  C033  F021         	movff	test_action@mL+1,fullSpeedAhead_test@mL+1
 11523  003D36  C034  F022         	movff	test_action@mR,fullSpeedAhead_test@mR
 11524  003D3A  C035  F023         	movff	test_action@mR+1,fullSpeedAhead_test@mR+1
 11525  003D3E  EC82  F02C         	call	_fullSpeedAhead_test	;wreg free
 11526                           
 11527                           ;movement.c: 85:     turnRight(mL,mR,135);
 11528  003D42  C032  F020         	movff	test_action@mL,turnRight@mL
 11529  003D46  C033  F021         	movff	test_action@mL+1,turnRight@mL+1
 11530  003D4A  C034  F022         	movff	test_action@mR,turnRight@mR
 11531  003D4E  C035  F023         	movff	test_action@mR+1,turnRight@mR+1
 11532  003D52  0E87               	movlw	135
 11533  003D54  6E24               	movwf	turnRight@angle_right^0,c
 11534  003D56  EC5A  F021         	call	_turnRight	;wreg free
 11535                           
 11536                           ;movement.c: 86:     fullSpeedAhead_test(mL,mR);
 11537  003D5A  C032  F020         	movff	test_action@mL,fullSpeedAhead_test@mL
 11538  003D5E  C033  F021         	movff	test_action@mL+1,fullSpeedAhead_test@mL+1
 11539  003D62  C034  F022         	movff	test_action@mR,fullSpeedAhead_test@mR
 11540  003D66  C035  F023         	movff	test_action@mR+1,fullSpeedAhead_test@mR+1
 11541  003D6A  EC82  F02C         	call	_fullSpeedAhead_test	;wreg free
 11542                           
 11543                           ;movement.c: 87:     turnLeft(mL,mR,135);
 11544  003D6E  C032  F020         	movff	test_action@mL,turnLeft@mL
 11545  003D72  C033  F021         	movff	test_action@mL+1,turnLeft@mL+1
 11546  003D76  C034  F022         	movff	test_action@mR,turnLeft@mR
 11547  003D7A  C035  F023         	movff	test_action@mR+1,turnLeft@mR+1
 11548  003D7E  0E87               	movlw	135
 11549  003D80  6E24               	movwf	turnLeft@angle_left^0,c
 11550  003D82  EC21  F022         	call	_turnLeft	;wreg free
 11551                           
 11552                           ;movement.c: 88:     fullSpeedAhead_test(mL,mR);
 11553  003D86  C032  F020         	movff	test_action@mL,fullSpeedAhead_test@mL
 11554  003D8A  C033  F021         	movff	test_action@mL+1,fullSpeedAhead_test@mL+1
 11555  003D8E  C034  F022         	movff	test_action@mR,fullSpeedAhead_test@mR
 11556  003D92  C035  F023         	movff	test_action@mR+1,fullSpeedAhead_test@mR+1
 11557  003D96  EC82  F02C         	call	_fullSpeedAhead_test	;wreg free
 11558                           
 11559                           ;movement.c: 89:     turnRight(mL,mR,135);
 11560  003D9A  C032  F020         	movff	test_action@mL,turnRight@mL
 11561  003D9E  C033  F021         	movff	test_action@mL+1,turnRight@mL+1
 11562  003DA2  C034  F022         	movff	test_action@mR,turnRight@mR
 11563  003DA6  C035  F023         	movff	test_action@mR+1,turnRight@mR+1
 11564  003DAA  0E87               	movlw	135
 11565  003DAC  6E24               	movwf	turnRight@angle_right^0,c
 11566  003DAE  EC5A  F021         	call	_turnRight	;wreg free
 11567  003DB2  0012               	return		;funcret
 11568  003DB4                     __end_of_test_action:
 11569                           	callstack 0
 11570                           
 11571 ;; *************** function _fullSpeedAhead_test *****************
 11572 ;; Defined at:
 11573 ;;		line 162 in file "dc_motor.c"
 11574 ;; Parameters:    Size  Location     Type
 11575 ;;  mL              2   31[COMRAM] PTR struct DC_motor
 11576 ;;		 -> main@motorL(9), 
 11577 ;;  mR              2   33[COMRAM] PTR struct DC_motor
 11578 ;;		 -> main@motorR(9), 
 11579 ;; Auto vars:     Size  Location     Type
 11580 ;;		None
 11581 ;; Return value:  Size  Location     Type
 11582 ;;                  1    wreg      void 
 11583 ;; Registers used:
 11584 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11585 ;; Tracked objects:
 11586 ;;		On entry : 0/0
 11587 ;;		On exit  : 0/0
 11588 ;;		Unchanged: 0/0
 11589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11590 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11591 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11592 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11593 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11594 ;;Total ram usage:        6 bytes
 11595 ;; Hardware stack levels used: 1
 11596 ;; Hardware stack levels required when called: 4
 11597 ;; This function calls:
 11598 ;;		_fullSpeedAhead
 11599 ;;		_stop
 11600 ;; This function is called by:
 11601 ;;		_test_action
 11602 ;; This function uses a non-reentrant model
 11603 ;;
 11604                           
 11605                           	psect	text62
 11606  005904                     __ptext62:
 11607                           	callstack 0
 11608  005904                     _fullSpeedAhead_test:
 11609                           	callstack 24
 11610  005904                     
 11611                           ;dc_motor.c: 162: void fullSpeedAhead_test(struct DC_motor *mL, struct DC_motor *mR);dc_
      +                          motor.c: 163: { fullSpeedAhead(mL, mR);
 11612  005904  C020  F01A         	movff	fullSpeedAhead_test@mL,fullSpeedAhead@mL
 11613  005908  C021  F01B         	movff	fullSpeedAhead_test@mL+1,fullSpeedAhead@mL+1
 11614  00590C  C022  F01C         	movff	fullSpeedAhead_test@mR,fullSpeedAhead@mR
 11615  005910  C023  F01D         	movff	fullSpeedAhead_test@mR+1,fullSpeedAhead@mR+1
 11616  005914  ECCE  F029         	call	_fullSpeedAhead	;wreg free
 11617  005918                     
 11618                           ;dc_motor.c: 164:     _delay((unsigned long)((1000)*(64000000/4000.0)));
 11619  005918  0E52               	movlw	82
 11620  00591A  6E25               	movwf	(??_fullSpeedAhead_test+1)^0,c
 11621  00591C  0E2B               	movlw	43
 11622  00591E  6E24               	movwf	??_fullSpeedAhead_test^0,c
 11623  005920  0E00               	movlw	0
 11624  005922                     u6157:
 11625  005922  2EE8               	decfsz	wreg,f,c
 11626  005924  D7FE               	bra	u6157
 11627  005926  2E24               	decfsz	??_fullSpeedAhead_test^0,f,c
 11628  005928  D7FC               	bra	u6157
 11629  00592A  2E25               	decfsz	(??_fullSpeedAhead_test+1)^0,f,c
 11630  00592C  D7FA               	bra	u6157
 11631  00592E  D000               	nop2	
 11632  005930                     
 11633                           ;dc_motor.c: 165:     stop(mL,mR);
 11634  005930  C020  F01A         	movff	fullSpeedAhead_test@mL,stop@mL
 11635  005934  C021  F01B         	movff	fullSpeedAhead_test@mL+1,stop@mL+1
 11636  005938  C022  F01C         	movff	fullSpeedAhead_test@mR,stop@mR
 11637  00593C  C023  F01D         	movff	fullSpeedAhead_test@mR+1,stop@mR+1
 11638  005940  EC26  F029         	call	_stop	;wreg free
 11639  005944  0012               	return		;funcret
 11640  005946                     __end_of_fullSpeedAhead_test:
 11641                           	callstack 0
 11642                           
 11643 ;; *************** function _buggylight_init *****************
 11644 ;; Defined at:
 11645 ;;		line 13 in file "color.c"
 11646 ;; Parameters:    Size  Location     Type
 11647 ;;		None
 11648 ;; Auto vars:     Size  Location     Type
 11649 ;;		None
 11650 ;; Return value:  Size  Location     Type
 11651 ;;                  1    wreg      void 
 11652 ;; Registers used:
 11653 ;;		None
 11654 ;; Tracked objects:
 11655 ;;		On entry : 0/0
 11656 ;;		On exit  : 0/0
 11657 ;;		Unchanged: 0/0
 11658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11659 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11660 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11661 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11662 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11663 ;;Total ram usage:        0 bytes
 11664 ;; Hardware stack levels used: 1
 11665 ;; Hardware stack levels required when called: 1
 11666 ;; This function calls:
 11667 ;;		Nothing
 11668 ;; This function is called by:
 11669 ;;		_main
 11670 ;; This function uses a non-reentrant model
 11671 ;;
 11672                           
 11673                           	psect	text63
 11674  005D2A                     __ptext63:
 11675                           	callstack 0
 11676  005D2A                     _buggylight_init:
 11677                           	callstack 29
 11678  005D2A                     
 11679                           ;color.c: 15:     TRISHbits.TRISH1=0;
 11680  005D2A  9288               	bcf	136,1,c	;volatile
 11681                           
 11682                           ;color.c: 16:     TRISDbits.TRISD4=0;
 11683  005D2C  9884               	bcf	132,4,c	;volatile
 11684                           
 11685                           ;color.c: 17:     TRISDbits.TRISD3=0;
 11686  005D2E  9684               	bcf	132,3,c	;volatile
 11687                           
 11688                           ;color.c: 18:     TRISFbits.TRISF0=0;
 11689  005D30  9086               	bcf	134,0,c	;volatile
 11690                           
 11691                           ;color.c: 19:     TRISHbits.TRISH0=0;
 11692  005D32  9088               	bcf	136,0,c	;volatile
 11693                           
 11694                           ;color.c: 21:     LATHbits.LATH1 = 0;
 11695  005D34  9280               	bcf	128,1,c	;volatile
 11696                           
 11697                           ;color.c: 22:     LATDbits.LATD4 = 0;
 11698  005D36  987C               	bcf	124,4,c	;volatile
 11699                           
 11700                           ;color.c: 23:     LATDbits.LATD3 = 0;
 11701  005D38  967C               	bcf	124,3,c	;volatile
 11702                           
 11703                           ;color.c: 24:     LATFbits.LATF0 = 0;
 11704  005D3A  907E               	bcf	126,0,c	;volatile
 11705                           
 11706                           ;color.c: 25:     LATHbits.LATH0 = 0;
 11707  005D3C  9080               	bcf	128,0,c	;volatile
 11708  005D3E  0012               	return		;funcret
 11709  005D40                     __end_of_buggylight_init:
 11710                           	callstack 0
 11711                           
 11712 ;; *************** function _action *****************
 11713 ;; Defined at:
 11714 ;;		line 17 in file "movement.c"
 11715 ;; Parameters:    Size  Location     Type
 11716 ;;  color           1    wreg     unsigned char 
 11717 ;;  mL              2   57[COMRAM] PTR struct DC_motor
 11718 ;;		 -> main@motorL(9), 
 11719 ;;  mR              2   59[COMRAM] PTR struct DC_motor
 11720 ;;		 -> main@motorR(9), 
 11721 ;; Auto vars:     Size  Location     Type
 11722 ;;  color           1   61[COMRAM] unsigned char 
 11723 ;; Return value:  Size  Location     Type
 11724 ;;                  1    wreg      void 
 11725 ;; Registers used:
 11726 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11727 ;; Tracked objects:
 11728 ;;		On entry : 0/0
 11729 ;;		On exit  : 0/0
 11730 ;;		Unchanged: 0/0
 11731 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11732 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11733 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11734 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11735 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11736 ;;Total ram usage:        5 bytes
 11737 ;; Hardware stack levels used: 1
 11738 ;; Hardware stack levels required when called: 6
 11739 ;; This function calls:
 11740 ;;		_goback
 11741 ;;		_reverse_square
 11742 ;;		_short_reverse
 11743 ;;		_toggle_light
 11744 ;;		_turnLeft
 11745 ;;		_turnRight
 11746 ;; This function is called by:
 11747 ;;		_main
 11748 ;; This function uses a non-reentrant model
 11749 ;;
 11750                           
 11751                           	psect	text64
 11752  002D2E                     __ptext64:
 11753                           	callstack 0
 11754  002D2E                     _action:
 11755                           	callstack 24
 11756                           
 11757                           ;incstack = 0
 11758                           ;action@color stored from wreg
 11759  002D2E  6E3E               	movwf	action@color^0,c
 11760  002D30                     
 11761                           ;movement.c: 17: void action(unsigned char color, struct DC_motor *mL, struct DC_motor *
      +                          mR);movement.c: 18: { if (color != 0){
 11762  002D30  503E               	movf	action@color^0,w,c
 11763  002D32  B4D8               	btfsc	status,2,c
 11764  002D34  EF9E  F016         	goto	u5571
 11765  002D38  EFA0  F016         	goto	u5570
 11766  002D3C                     u5571:
 11767  002D3C  EFFC  F017         	goto	l563
 11768  002D40                     u5570:
 11769  002D40                     
 11770                           ;movement.c: 19:         if (color == 1){
 11771  002D40  043E               	decf	action@color^0,w,c
 11772  002D42  A4D8               	btfss	status,2,c
 11773  002D44  EFA6  F016         	goto	u5581
 11774  002D48  EFA8  F016         	goto	u5580
 11775  002D4C                     u5581:
 11776  002D4C  EFCC  F016         	goto	l5335
 11777  002D50                     u5580:
 11778  002D50                     
 11779                           ;movement.c: 20:             short_reverse(mL,mR);
 11780  002D50  C03A  F020         	movff	action@mL,short_reverse@mL
 11781  002D54  C03B  F021         	movff	action@mL+1,short_reverse@mL+1
 11782  002D58  C03C  F022         	movff	action@mR,short_reverse@mR
 11783  002D5C  C03D  F023         	movff	action@mR+1,short_reverse@mR+1
 11784  002D60  ECA3  F02C         	call	_short_reverse	;wreg free
 11785                           
 11786                           ;movement.c: 21:             turnRight(mL,mR,90);
 11787  002D64  C03A  F020         	movff	action@mL,turnRight@mL
 11788  002D68  C03B  F021         	movff	action@mL+1,turnRight@mL+1
 11789  002D6C  C03C  F022         	movff	action@mR,turnRight@mR
 11790  002D70  C03D  F023         	movff	action@mR+1,turnRight@mR+1
 11791  002D74  0E5A               	movlw	90
 11792  002D76  6E24               	movwf	turnRight@angle_right^0,c
 11793  002D78  EC5A  F021         	call	_turnRight	;wreg free
 11794  002D7C                     
 11795                           ;movement.c: 22:             memory[array_index] = 1;
 11796  002D7C  0101               	movlb	1	; () banked
 11797  002D7E  5149               	movf	_array_index& (0+255),w,b
 11798  002D80  0D02               	mullw	2
 11799  002D82  0E00               	movlw	low _memory
 11800  002D84  24F3               	addwf	243,w,c
 11801  002D86  6ED9               	movwf	fsr2l,c
 11802  002D88  0E01               	movlw	high _memory
 11803  002D8A  20F4               	addwfc	prodh,w,c
 11804  002D8C  6EDA               	movwf	fsr2h,c
 11805  002D8E  0E01               	movlw	1
 11806  002D90  6EDE               	movwf	postinc2,c
 11807  002D92  0E00               	movlw	0
 11808  002D94  6EDD               	movwf	postdec2,c
 11809  002D96                     
 11810                           ; BSR set to: 1
 11811                           ;movement.c: 23:             array_index++;
 11812  002D96  2B49               	incf	_array_index& (0+255),f,b
 11813  002D98                     l5335:
 11814                           
 11815                           ;movement.c: 25:         if (color == 2){
 11816  002D98  0E02               	movlw	2
 11817  002D9A  183E               	xorwf	action@color^0,w,c
 11818  002D9C  A4D8               	btfss	status,2,c
 11819  002D9E  EFD3  F016         	goto	u5591
 11820  002DA2  EFD5  F016         	goto	u5590
 11821  002DA6                     u5591:
 11822  002DA6  EFF9  F016         	goto	l5343
 11823  002DAA                     u5590:
 11824  002DAA                     
 11825                           ;movement.c: 26:             short_reverse(mL,mR);
 11826  002DAA  C03A  F020         	movff	action@mL,short_reverse@mL
 11827  002DAE  C03B  F021         	movff	action@mL+1,short_reverse@mL+1
 11828  002DB2  C03C  F022         	movff	action@mR,short_reverse@mR
 11829  002DB6  C03D  F023         	movff	action@mR+1,short_reverse@mR+1
 11830  002DBA  ECA3  F02C         	call	_short_reverse	;wreg free
 11831                           
 11832                           ;movement.c: 27:             turnLeft(mL,mR,90);
 11833  002DBE  C03A  F020         	movff	action@mL,turnLeft@mL
 11834  002DC2  C03B  F021         	movff	action@mL+1,turnLeft@mL+1
 11835  002DC6  C03C  F022         	movff	action@mR,turnLeft@mR
 11836  002DCA  C03D  F023         	movff	action@mR+1,turnLeft@mR+1
 11837  002DCE  0E5A               	movlw	90
 11838  002DD0  6E24               	movwf	turnLeft@angle_left^0,c
 11839  002DD2  EC21  F022         	call	_turnLeft	;wreg free
 11840  002DD6                     
 11841                           ;movement.c: 28:             memory[array_index] = 2;
 11842  002DD6  0101               	movlb	1	; () banked
 11843  002DD8  5149               	movf	_array_index& (0+255),w,b
 11844  002DDA  0D02               	mullw	2
 11845  002DDC  0E00               	movlw	low _memory
 11846  002DDE  24F3               	addwf	243,w,c
 11847  002DE0  6ED9               	movwf	fsr2l,c
 11848  002DE2  0E01               	movlw	high _memory
 11849  002DE4  20F4               	addwfc	prodh,w,c
 11850  002DE6  6EDA               	movwf	fsr2h,c
 11851  002DE8  0E02               	movlw	2
 11852  002DEA  6EDE               	movwf	postinc2,c
 11853  002DEC  0E00               	movlw	0
 11854  002DEE  6EDD               	movwf	postdec2,c
 11855  002DF0                     
 11856                           ; BSR set to: 1
 11857                           ;movement.c: 29:             array_index++;
 11858  002DF0  2B49               	incf	_array_index& (0+255),f,b
 11859  002DF2                     l5343:
 11860                           
 11861                           ;movement.c: 31:         if (color == 3){
 11862  002DF2  0E03               	movlw	3
 11863  002DF4  183E               	xorwf	action@color^0,w,c
 11864  002DF6  A4D8               	btfss	status,2,c
 11865  002DF8  EF00  F017         	goto	u5601
 11866  002DFC  EF02  F017         	goto	u5600
 11867  002E00                     u5601:
 11868  002E00  EF26  F017         	goto	l5351
 11869  002E04                     u5600:
 11870  002E04                     
 11871                           ;movement.c: 32:             short_reverse(mL,mR);
 11872  002E04  C03A  F020         	movff	action@mL,short_reverse@mL
 11873  002E08  C03B  F021         	movff	action@mL+1,short_reverse@mL+1
 11874  002E0C  C03C  F022         	movff	action@mR,short_reverse@mR
 11875  002E10  C03D  F023         	movff	action@mR+1,short_reverse@mR+1
 11876  002E14  ECA3  F02C         	call	_short_reverse	;wreg free
 11877                           
 11878                           ;movement.c: 33:             turnLeft(mL,mR,180);
 11879  002E18  C03A  F020         	movff	action@mL,turnLeft@mL
 11880  002E1C  C03B  F021         	movff	action@mL+1,turnLeft@mL+1
 11881  002E20  C03C  F022         	movff	action@mR,turnLeft@mR
 11882  002E24  C03D  F023         	movff	action@mR+1,turnLeft@mR+1
 11883  002E28  0EB4               	movlw	180
 11884  002E2A  6E24               	movwf	turnLeft@angle_left^0,c
 11885  002E2C  EC21  F022         	call	_turnLeft	;wreg free
 11886  002E30                     
 11887                           ;movement.c: 34:             memory[array_index] = 3;
 11888  002E30  0101               	movlb	1	; () banked
 11889  002E32  5149               	movf	_array_index& (0+255),w,b
 11890  002E34  0D02               	mullw	2
 11891  002E36  0E00               	movlw	low _memory
 11892  002E38  24F3               	addwf	243,w,c
 11893  002E3A  6ED9               	movwf	fsr2l,c
 11894  002E3C  0E01               	movlw	high _memory
 11895  002E3E  20F4               	addwfc	prodh,w,c
 11896  002E40  6EDA               	movwf	fsr2h,c
 11897  002E42  0E03               	movlw	3
 11898  002E44  6EDE               	movwf	postinc2,c
 11899  002E46  0E00               	movlw	0
 11900  002E48  6EDD               	movwf	postdec2,c
 11901  002E4A                     
 11902                           ; BSR set to: 1
 11903                           ;movement.c: 35:             array_index++;
 11904  002E4A  2B49               	incf	_array_index& (0+255),f,b
 11905  002E4C                     l5351:
 11906                           
 11907                           ;movement.c: 37:         if (color == 4){
 11908  002E4C  0E04               	movlw	4
 11909  002E4E  183E               	xorwf	action@color^0,w,c
 11910  002E50  A4D8               	btfss	status,2,c
 11911  002E52  EF2D  F017         	goto	u5611
 11912  002E56  EF2F  F017         	goto	u5610
 11913  002E5A                     u5611:
 11914  002E5A  EF53  F017         	goto	l5359
 11915  002E5E                     u5610:
 11916  002E5E                     
 11917                           ;movement.c: 38:             reverse_square(mL,mR);
 11918  002E5E  C03A  F020         	movff	action@mL,reverse_square@mL
 11919  002E62  C03B  F021         	movff	action@mL+1,reverse_square@mL+1
 11920  002E66  C03C  F022         	movff	action@mR,reverse_square@mR
 11921  002E6A  C03D  F023         	movff	action@mR+1,reverse_square@mR+1
 11922  002E6E  ECC4  F02C         	call	_reverse_square	;wreg free
 11923                           
 11924                           ;movement.c: 39:             turnRight(mL,mR,90);
 11925  002E72  C03A  F020         	movff	action@mL,turnRight@mL
 11926  002E76  C03B  F021         	movff	action@mL+1,turnRight@mL+1
 11927  002E7A  C03C  F022         	movff	action@mR,turnRight@mR
 11928  002E7E  C03D  F023         	movff	action@mR+1,turnRight@mR+1
 11929  002E82  0E5A               	movlw	90
 11930  002E84  6E24               	movwf	turnRight@angle_right^0,c
 11931  002E86  EC5A  F021         	call	_turnRight	;wreg free
 11932  002E8A                     
 11933                           ;movement.c: 40:             memory[array_index] = 4;
 11934  002E8A  0101               	movlb	1	; () banked
 11935  002E8C  5149               	movf	_array_index& (0+255),w,b
 11936  002E8E  0D02               	mullw	2
 11937  002E90  0E00               	movlw	low _memory
 11938  002E92  24F3               	addwf	243,w,c
 11939  002E94  6ED9               	movwf	fsr2l,c
 11940  002E96  0E01               	movlw	high _memory
 11941  002E98  20F4               	addwfc	prodh,w,c
 11942  002E9A  6EDA               	movwf	fsr2h,c
 11943  002E9C  0E04               	movlw	4
 11944  002E9E  6EDE               	movwf	postinc2,c
 11945  002EA0  0E00               	movlw	0
 11946  002EA2  6EDD               	movwf	postdec2,c
 11947  002EA4                     
 11948                           ; BSR set to: 1
 11949                           ;movement.c: 41:             array_index++;
 11950  002EA4  2B49               	incf	_array_index& (0+255),f,b
 11951  002EA6                     l5359:
 11952                           
 11953                           ;movement.c: 43:         if (color == 5){
 11954  002EA6  0E05               	movlw	5
 11955  002EA8  183E               	xorwf	action@color^0,w,c
 11956  002EAA  A4D8               	btfss	status,2,c
 11957  002EAC  EF5A  F017         	goto	u5621
 11958  002EB0  EF5C  F017         	goto	u5620
 11959  002EB4                     u5621:
 11960  002EB4  EF80  F017         	goto	l5367
 11961  002EB8                     u5620:
 11962  002EB8                     
 11963                           ;movement.c: 44:             reverse_square(mL,mR);
 11964  002EB8  C03A  F020         	movff	action@mL,reverse_square@mL
 11965  002EBC  C03B  F021         	movff	action@mL+1,reverse_square@mL+1
 11966  002EC0  C03C  F022         	movff	action@mR,reverse_square@mR
 11967  002EC4  C03D  F023         	movff	action@mR+1,reverse_square@mR+1
 11968  002EC8  ECC4  F02C         	call	_reverse_square	;wreg free
 11969                           
 11970                           ;movement.c: 45:             turnLeft(mL,mR,90);
 11971  002ECC  C03A  F020         	movff	action@mL,turnLeft@mL
 11972  002ED0  C03B  F021         	movff	action@mL+1,turnLeft@mL+1
 11973  002ED4  C03C  F022         	movff	action@mR,turnLeft@mR
 11974  002ED8  C03D  F023         	movff	action@mR+1,turnLeft@mR+1
 11975  002EDC  0E5A               	movlw	90
 11976  002EDE  6E24               	movwf	turnLeft@angle_left^0,c
 11977  002EE0  EC21  F022         	call	_turnLeft	;wreg free
 11978  002EE4                     
 11979                           ;movement.c: 46:             memory[array_index] = 5;
 11980  002EE4  0101               	movlb	1	; () banked
 11981  002EE6  5149               	movf	_array_index& (0+255),w,b
 11982  002EE8  0D02               	mullw	2
 11983  002EEA  0E00               	movlw	low _memory
 11984  002EEC  24F3               	addwf	243,w,c
 11985  002EEE  6ED9               	movwf	fsr2l,c
 11986  002EF0  0E01               	movlw	high _memory
 11987  002EF2  20F4               	addwfc	prodh,w,c
 11988  002EF4  6EDA               	movwf	fsr2h,c
 11989  002EF6  0E05               	movlw	5
 11990  002EF8  6EDE               	movwf	postinc2,c
 11991  002EFA  0E00               	movlw	0
 11992  002EFC  6EDD               	movwf	postdec2,c
 11993  002EFE                     
 11994                           ; BSR set to: 1
 11995                           ;movement.c: 47:             array_index++;
 11996  002EFE  2B49               	incf	_array_index& (0+255),f,b
 11997  002F00                     l5367:
 11998                           
 11999                           ;movement.c: 49:         if (color == 6){
 12000  002F00  0E06               	movlw	6
 12001  002F02  183E               	xorwf	action@color^0,w,c
 12002  002F04  A4D8               	btfss	status,2,c
 12003  002F06  EF87  F017         	goto	u5631
 12004  002F0A  EF89  F017         	goto	u5630
 12005  002F0E                     u5631:
 12006  002F0E  EFAD  F017         	goto	l5375
 12007  002F12                     u5630:
 12008  002F12                     
 12009                           ;movement.c: 50:             short_reverse(mL,mR);
 12010  002F12  C03A  F020         	movff	action@mL,short_reverse@mL
 12011  002F16  C03B  F021         	movff	action@mL+1,short_reverse@mL+1
 12012  002F1A  C03C  F022         	movff	action@mR,short_reverse@mR
 12013  002F1E  C03D  F023         	movff	action@mR+1,short_reverse@mR+1
 12014  002F22  ECA3  F02C         	call	_short_reverse	;wreg free
 12015                           
 12016                           ;movement.c: 51:             turnRight(mL,mR,135);
 12017  002F26  C03A  F020         	movff	action@mL,turnRight@mL
 12018  002F2A  C03B  F021         	movff	action@mL+1,turnRight@mL+1
 12019  002F2E  C03C  F022         	movff	action@mR,turnRight@mR
 12020  002F32  C03D  F023         	movff	action@mR+1,turnRight@mR+1
 12021  002F36  0E87               	movlw	135
 12022  002F38  6E24               	movwf	turnRight@angle_right^0,c
 12023  002F3A  EC5A  F021         	call	_turnRight	;wreg free
 12024  002F3E                     
 12025                           ;movement.c: 52:             memory[array_index] = 6;
 12026  002F3E  0101               	movlb	1	; () banked
 12027  002F40  5149               	movf	_array_index& (0+255),w,b
 12028  002F42  0D02               	mullw	2
 12029  002F44  0E00               	movlw	low _memory
 12030  002F46  24F3               	addwf	243,w,c
 12031  002F48  6ED9               	movwf	fsr2l,c
 12032  002F4A  0E01               	movlw	high _memory
 12033  002F4C  20F4               	addwfc	prodh,w,c
 12034  002F4E  6EDA               	movwf	fsr2h,c
 12035  002F50  0E06               	movlw	6
 12036  002F52  6EDE               	movwf	postinc2,c
 12037  002F54  0E00               	movlw	0
 12038  002F56  6EDD               	movwf	postdec2,c
 12039  002F58                     
 12040                           ; BSR set to: 1
 12041                           ;movement.c: 53:             array_index++;
 12042  002F58  2B49               	incf	_array_index& (0+255),f,b
 12043  002F5A                     l5375:
 12044                           
 12045                           ;movement.c: 55:         if (color == 7){
 12046  002F5A  0E07               	movlw	7
 12047  002F5C  183E               	xorwf	action@color^0,w,c
 12048  002F5E  A4D8               	btfss	status,2,c
 12049  002F60  EFB4  F017         	goto	u5641
 12050  002F64  EFB6  F017         	goto	u5640
 12051  002F68                     u5641:
 12052  002F68  EFDA  F017         	goto	l5383
 12053  002F6C                     u5640:
 12054  002F6C                     
 12055                           ;movement.c: 56:             short_reverse(mL,mR);
 12056  002F6C  C03A  F020         	movff	action@mL,short_reverse@mL
 12057  002F70  C03B  F021         	movff	action@mL+1,short_reverse@mL+1
 12058  002F74  C03C  F022         	movff	action@mR,short_reverse@mR
 12059  002F78  C03D  F023         	movff	action@mR+1,short_reverse@mR+1
 12060  002F7C  ECA3  F02C         	call	_short_reverse	;wreg free
 12061                           
 12062                           ;movement.c: 57:             turnLeft(mL,mR,135);
 12063  002F80  C03A  F020         	movff	action@mL,turnLeft@mL
 12064  002F84  C03B  F021         	movff	action@mL+1,turnLeft@mL+1
 12065  002F88  C03C  F022         	movff	action@mR,turnLeft@mR
 12066  002F8C  C03D  F023         	movff	action@mR+1,turnLeft@mR+1
 12067  002F90  0E87               	movlw	135
 12068  002F92  6E24               	movwf	turnLeft@angle_left^0,c
 12069  002F94  EC21  F022         	call	_turnLeft	;wreg free
 12070  002F98                     
 12071                           ;movement.c: 58:             memory[array_index] = 7;
 12072  002F98  0101               	movlb	1	; () banked
 12073  002F9A  5149               	movf	_array_index& (0+255),w,b
 12074  002F9C  0D02               	mullw	2
 12075  002F9E  0E00               	movlw	low _memory
 12076  002FA0  24F3               	addwf	243,w,c
 12077  002FA2  6ED9               	movwf	fsr2l,c
 12078  002FA4  0E01               	movlw	high _memory
 12079  002FA6  20F4               	addwfc	prodh,w,c
 12080  002FA8  6EDA               	movwf	fsr2h,c
 12081  002FAA  0E07               	movlw	7
 12082  002FAC  6EDE               	movwf	postinc2,c
 12083  002FAE  0E00               	movlw	0
 12084  002FB0  6EDD               	movwf	postdec2,c
 12085  002FB2                     
 12086                           ; BSR set to: 1
 12087                           ;movement.c: 59:             array_index++;
 12088  002FB2  2B49               	incf	_array_index& (0+255),f,b
 12089  002FB4                     l5383:
 12090                           
 12091                           ;movement.c: 61:         if (color == 8){
 12092  002FB4  0E08               	movlw	8
 12093  002FB6  183E               	xorwf	action@color^0,w,c
 12094  002FB8  A4D8               	btfss	status,2,c
 12095  002FBA  EFE1  F017         	goto	u5651
 12096  002FBE  EFE3  F017         	goto	u5650
 12097  002FC2                     u5651:
 12098  002FC2  EFFC  F017         	goto	l563
 12099  002FC6                     u5650:
 12100  002FC6                     
 12101                           ;movement.c: 62:             toggle_light(2,1);
 12102  002FC6  0E01               	movlw	1
 12103  002FC8  6E01               	movwf	toggle_light@toggletime^0,c
 12104  002FCA  0E02               	movlw	2
 12105  002FCC  ECB8  F01A         	call	_toggle_light
 12106  002FD0                     
 12107                           ;movement.c: 63:             short_reverse(mL,mR);
 12108  002FD0  C03A  F020         	movff	action@mL,short_reverse@mL
 12109  002FD4  C03B  F021         	movff	action@mL+1,short_reverse@mL+1
 12110  002FD8  C03C  F022         	movff	action@mR,short_reverse@mR
 12111  002FDC  C03D  F023         	movff	action@mR+1,short_reverse@mR+1
 12112  002FE0  ECA3  F02C         	call	_short_reverse	;wreg free
 12113  002FE4                     
 12114                           ;movement.c: 64:             goback(mL,mR);
 12115  002FE4  C03A  F032         	movff	action@mL,goback@mL
 12116  002FE8  C03B  F033         	movff	action@mL+1,goback@mL+1
 12117  002FEC  C03C  F034         	movff	action@mR,goback@mR
 12118  002FF0  C03D  F035         	movff	action@mR+1,goback@mR+1
 12119  002FF4  EC60  F019         	call	_goback	;wreg free
 12120  002FF8                     l563:
 12121  002FF8  0012               	return		;funcret
 12122  002FFA                     __end_of_action:
 12123                           	callstack 0
 12124                           
 12125 ;; *************** function _toggle_light *****************
 12126 ;; Defined at:
 12127 ;;		line 29 in file "color.c"
 12128 ;; Parameters:    Size  Location     Type
 12129 ;;  lightnumber     1    wreg     unsigned char 
 12130 ;;  toggletime      1    0[COMRAM] unsigned char 
 12131 ;; Auto vars:     Size  Location     Type
 12132 ;;  lightnumber     1    4[COMRAM] unsigned char 
 12133 ;;  i               1    3[COMRAM] unsigned char 
 12134 ;; Return value:  Size  Location     Type
 12135 ;;                  1    wreg      void 
 12136 ;; Registers used:
 12137 ;;		wreg, status,2, status,0
 12138 ;; Tracked objects:
 12139 ;;		On entry : 0/0
 12140 ;;		On exit  : 0/0
 12141 ;;		Unchanged: 0/0
 12142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12143 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12144 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12145 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12146 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12147 ;;Total ram usage:        5 bytes
 12148 ;; Hardware stack levels used: 1
 12149 ;; Hardware stack levels required when called: 1
 12150 ;; This function calls:
 12151 ;;		Nothing
 12152 ;; This function is called by:
 12153 ;;		_calibrate_white
 12154 ;;		_detect_color
 12155 ;;		_amb_light_measure
 12156 ;;		_action
 12157 ;; This function uses a non-reentrant model
 12158 ;;
 12159                           
 12160                           	psect	text65
 12161  003570                     __ptext65:
 12162                           	callstack 0
 12163  003570                     _toggle_light:
 12164                           	callstack 27
 12165                           
 12166                           ;incstack = 0
 12167                           ;toggle_light@lightnumber stored from wreg
 12168  003570  6E05               	movwf	toggle_light@lightnumber^0,c
 12169  003572                     
 12170                           ;color.c: 29: void toggle_light(unsigned char lightnumber, unsigned char toggletime);col
      +                          or.c: 30: {;color.c: 31:     unsigned char i = 0;
 12171  003572  0E00               	movlw	0
 12172  003574  6E04               	movwf	toggle_light@i^0,c
 12173                           
 12174                           ;color.c: 33:     for (i = 0; i < toggletime; i++){
 12175  003576  0E00               	movlw	0
 12176  003578  6E04               	movwf	toggle_light@i^0,c
 12177  00357A  EF04  F01C         	goto	l62
 12178  00357E                     l4409:
 12179                           
 12180                           ;color.c: 34:         if (lightnumber == 1){
 12181  00357E  0405               	decf	toggle_light@lightnumber^0,w,c
 12182  003580  A4D8               	btfss	status,2,c
 12183  003582  EFC5  F01A         	goto	u4381
 12184  003586  EFC7  F01A         	goto	u4380
 12185  00358A                     u4381:
 12186  00358A  EFFF  F01A         	goto	l4417
 12187  00358E                     u4380:
 12188  00358E                     
 12189                           ;color.c: 35:             LATHbits.LATH1 = !LATHbits.LATH1;
 12190  00358E  A280               	btfss	128,1,c	;volatile
 12191  003590  EFCC  F01A         	goto	u4391
 12192  003594  EFD0  F01A         	goto	u4390
 12193  003598                     u4391:
 12194  003598  6A02               	clrf	??_toggle_light^0,c
 12195  00359A  2A02               	incf	??_toggle_light^0,f,c
 12196  00359C  EFD1  F01A         	goto	u4408
 12197  0035A0                     u4390:
 12198  0035A0  6A02               	clrf	??_toggle_light^0,c
 12199  0035A2                     u4408:
 12200  0035A2  4602               	rlncf	??_toggle_light^0,f,c
 12201  0035A4  5080               	movf	128,w,c	;volatile
 12202  0035A6  1802               	xorwf	??_toggle_light^0,w,c
 12203  0035A8  0BFD               	andlw	-3
 12204  0035AA  1802               	xorwf	??_toggle_light^0,w,c
 12205  0035AC  6E80               	movwf	128,c	;volatile
 12206  0035AE                     
 12207                           ;color.c: 36:             _delay((unsigned long)((500)*(64000000/4000.0)));
 12208  0035AE  0E29               	movlw	41
 12209  0035B0  6E03               	movwf	(??_toggle_light+1)^0,c
 12210  0035B2  0E96               	movlw	150
 12211  0035B4  6E02               	movwf	??_toggle_light^0,c
 12212  0035B6  0E7F               	movlw	127
 12213  0035B8                     u6167:
 12214  0035B8  2EE8               	decfsz	wreg,f,c
 12215  0035BA  D7FE               	bra	u6167
 12216  0035BC  2E02               	decfsz	??_toggle_light^0,f,c
 12217  0035BE  D7FC               	bra	u6167
 12218  0035C0  2E03               	decfsz	(??_toggle_light+1)^0,f,c
 12219  0035C2  D7FA               	bra	u6167
 12220  0035C4  F000               	nop	
 12221  0035C6                     
 12222                           ;color.c: 37:             LATHbits.LATH1 = !LATHbits.LATH1;
 12223  0035C6  A280               	btfss	128,1,c	;volatile
 12224  0035C8  EFE8  F01A         	goto	u4411
 12225  0035CC  EFEC  F01A         	goto	u4410
 12226  0035D0                     u4411:
 12227  0035D0  6A02               	clrf	??_toggle_light^0,c
 12228  0035D2  2A02               	incf	??_toggle_light^0,f,c
 12229  0035D4  EFED  F01A         	goto	u4428
 12230  0035D8                     u4410:
 12231  0035D8  6A02               	clrf	??_toggle_light^0,c
 12232  0035DA                     u4428:
 12233  0035DA  4602               	rlncf	??_toggle_light^0,f,c
 12234  0035DC  5080               	movf	128,w,c	;volatile
 12235  0035DE  1802               	xorwf	??_toggle_light^0,w,c
 12236  0035E0  0BFD               	andlw	-3
 12237  0035E2  1802               	xorwf	??_toggle_light^0,w,c
 12238  0035E4  6E80               	movwf	128,c	;volatile
 12239                           
 12240                           ;color.c: 38:             _delay((unsigned long)((500)*(64000000/4000.0)));
 12241  0035E6  0E29               	movlw	41
 12242  0035E8  6E03               	movwf	(??_toggle_light+1)^0,c
 12243  0035EA  0E96               	movlw	150
 12244  0035EC  6E02               	movwf	??_toggle_light^0,c
 12245  0035EE  0E7F               	movlw	127
 12246  0035F0                     u6177:
 12247  0035F0  2EE8               	decfsz	wreg,f,c
 12248  0035F2  D7FE               	bra	u6177
 12249  0035F4  2E02               	decfsz	??_toggle_light^0,f,c
 12250  0035F6  D7FC               	bra	u6177
 12251  0035F8  2E03               	decfsz	(??_toggle_light+1)^0,f,c
 12252  0035FA  D7FA               	bra	u6177
 12253  0035FC  F000               	nop	
 12254  0035FE                     l4417:
 12255                           
 12256                           ;color.c: 40:         if (lightnumber == 2){
 12257  0035FE  0E02               	movlw	2
 12258  003600  1805               	xorwf	toggle_light@lightnumber^0,w,c
 12259  003602  A4D8               	btfss	status,2,c
 12260  003604  EF06  F01B         	goto	u4431
 12261  003608  EF08  F01B         	goto	u4430
 12262  00360C                     u4431:
 12263  00360C  EF40  F01B         	goto	l4425
 12264  003610                     u4430:
 12265  003610                     
 12266                           ;color.c: 41:             LATDbits.LATD4 = !LATDbits.LATD4;
 12267  003610  A87C               	btfss	124,4,c	;volatile
 12268  003612  EF0D  F01B         	goto	u4441
 12269  003616  EF11  F01B         	goto	u4440
 12270  00361A                     u4441:
 12271  00361A  6A02               	clrf	??_toggle_light^0,c
 12272  00361C  2A02               	incf	??_toggle_light^0,f,c
 12273  00361E  EF12  F01B         	goto	u4458
 12274  003622                     u4440:
 12275  003622  6A02               	clrf	??_toggle_light^0,c
 12276  003624                     u4458:
 12277  003624  3A02               	swapf	??_toggle_light^0,f,c
 12278  003626  507C               	movf	124,w,c	;volatile
 12279  003628  1802               	xorwf	??_toggle_light^0,w,c
 12280  00362A  0BEF               	andlw	-17
 12281  00362C  1802               	xorwf	??_toggle_light^0,w,c
 12282  00362E  6E7C               	movwf	124,c	;volatile
 12283  003630                     
 12284                           ;color.c: 42:             _delay((unsigned long)((500)*(64000000/4000.0)));
 12285  003630  0E29               	movlw	41
 12286  003632  6E03               	movwf	(??_toggle_light+1)^0,c
 12287  003634  0E96               	movlw	150
 12288  003636  6E02               	movwf	??_toggle_light^0,c
 12289  003638  0E7F               	movlw	127
 12290  00363A                     u6187:
 12291  00363A  2EE8               	decfsz	wreg,f,c
 12292  00363C  D7FE               	bra	u6187
 12293  00363E  2E02               	decfsz	??_toggle_light^0,f,c
 12294  003640  D7FC               	bra	u6187
 12295  003642  2E03               	decfsz	(??_toggle_light+1)^0,f,c
 12296  003644  D7FA               	bra	u6187
 12297  003646  F000               	nop	
 12298  003648                     
 12299                           ;color.c: 43:             LATDbits.LATD4 = !LATDbits.LATD4;
 12300  003648  A87C               	btfss	124,4,c	;volatile
 12301  00364A  EF29  F01B         	goto	u4461
 12302  00364E  EF2D  F01B         	goto	u4460
 12303  003652                     u4461:
 12304  003652  6A02               	clrf	??_toggle_light^0,c
 12305  003654  2A02               	incf	??_toggle_light^0,f,c
 12306  003656  EF2E  F01B         	goto	u4478
 12307  00365A                     u4460:
 12308  00365A  6A02               	clrf	??_toggle_light^0,c
 12309  00365C                     u4478:
 12310  00365C  3A02               	swapf	??_toggle_light^0,f,c
 12311  00365E  507C               	movf	124,w,c	;volatile
 12312  003660  1802               	xorwf	??_toggle_light^0,w,c
 12313  003662  0BEF               	andlw	-17
 12314  003664  1802               	xorwf	??_toggle_light^0,w,c
 12315  003666  6E7C               	movwf	124,c	;volatile
 12316                           
 12317                           ;color.c: 44:             _delay((unsigned long)((500)*(64000000/4000.0)));
 12318  003668  0E29               	movlw	41
 12319  00366A  6E03               	movwf	(??_toggle_light+1)^0,c
 12320  00366C  0E96               	movlw	150
 12321  00366E  6E02               	movwf	??_toggle_light^0,c
 12322  003670  0E7F               	movlw	127
 12323  003672                     u6197:
 12324  003672  2EE8               	decfsz	wreg,f,c
 12325  003674  D7FE               	bra	u6197
 12326  003676  2E02               	decfsz	??_toggle_light^0,f,c
 12327  003678  D7FC               	bra	u6197
 12328  00367A  2E03               	decfsz	(??_toggle_light+1)^0,f,c
 12329  00367C  D7FA               	bra	u6197
 12330  00367E  F000               	nop	
 12331  003680                     l4425:
 12332                           
 12333                           ;color.c: 46:         if (lightnumber == 3){
 12334  003680  0E03               	movlw	3
 12335  003682  1805               	xorwf	toggle_light@lightnumber^0,w,c
 12336  003684  A4D8               	btfss	status,2,c
 12337  003686  EF47  F01B         	goto	u4481
 12338  00368A  EF49  F01B         	goto	u4480
 12339  00368E                     u4481:
 12340  00368E  EF85  F01B         	goto	l4433
 12341  003692                     u4480:
 12342  003692                     
 12343                           ;color.c: 47:             LATDbits.LATD3 = !LATDbits.LATD3;
 12344  003692  A67C               	btfss	124,3,c	;volatile
 12345  003694  EF4E  F01B         	goto	u4491
 12346  003698  EF52  F01B         	goto	u4490
 12347  00369C                     u4491:
 12348  00369C  6A02               	clrf	??_toggle_light^0,c
 12349  00369E  2A02               	incf	??_toggle_light^0,f,c
 12350  0036A0  EF53  F01B         	goto	u4508
 12351  0036A4                     u4490:
 12352  0036A4  6A02               	clrf	??_toggle_light^0,c
 12353  0036A6                     u4508:
 12354  0036A6  4602               	rlncf	??_toggle_light^0,f,c
 12355  0036A8  4602               	rlncf	??_toggle_light^0,f,c
 12356  0036AA  4602               	rlncf	??_toggle_light^0,f,c
 12357  0036AC  507C               	movf	124,w,c	;volatile
 12358  0036AE  1802               	xorwf	??_toggle_light^0,w,c
 12359  0036B0  0BF7               	andlw	-9
 12360  0036B2  1802               	xorwf	??_toggle_light^0,w,c
 12361  0036B4  6E7C               	movwf	124,c	;volatile
 12362  0036B6                     
 12363                           ;color.c: 48:             _delay((unsigned long)((500)*(64000000/4000.0)));
 12364  0036B6  0E29               	movlw	41
 12365  0036B8  6E03               	movwf	(??_toggle_light+1)^0,c
 12366  0036BA  0E96               	movlw	150
 12367  0036BC  6E02               	movwf	??_toggle_light^0,c
 12368  0036BE  0E7F               	movlw	127
 12369  0036C0                     u6207:
 12370  0036C0  2EE8               	decfsz	wreg,f,c
 12371  0036C2  D7FE               	bra	u6207
 12372  0036C4  2E02               	decfsz	??_toggle_light^0,f,c
 12373  0036C6  D7FC               	bra	u6207
 12374  0036C8  2E03               	decfsz	(??_toggle_light+1)^0,f,c
 12375  0036CA  D7FA               	bra	u6207
 12376  0036CC  F000               	nop	
 12377  0036CE                     
 12378                           ;color.c: 49:             LATDbits.LATD3 = !LATDbits.LATD3;
 12379  0036CE  A67C               	btfss	124,3,c	;volatile
 12380  0036D0  EF6C  F01B         	goto	u4511
 12381  0036D4  EF70  F01B         	goto	u4510
 12382  0036D8                     u4511:
 12383  0036D8  6A02               	clrf	??_toggle_light^0,c
 12384  0036DA  2A02               	incf	??_toggle_light^0,f,c
 12385  0036DC  EF71  F01B         	goto	u4528
 12386  0036E0                     u4510:
 12387  0036E0  6A02               	clrf	??_toggle_light^0,c
 12388  0036E2                     u4528:
 12389  0036E2  4602               	rlncf	??_toggle_light^0,f,c
 12390  0036E4  4602               	rlncf	??_toggle_light^0,f,c
 12391  0036E6  4602               	rlncf	??_toggle_light^0,f,c
 12392  0036E8  507C               	movf	124,w,c	;volatile
 12393  0036EA  1802               	xorwf	??_toggle_light^0,w,c
 12394  0036EC  0BF7               	andlw	-9
 12395  0036EE  1802               	xorwf	??_toggle_light^0,w,c
 12396  0036F0  6E7C               	movwf	124,c	;volatile
 12397                           
 12398                           ;color.c: 50:             _delay((unsigned long)((500)*(64000000/4000.0)));
 12399  0036F2  0E29               	movlw	41
 12400  0036F4  6E03               	movwf	(??_toggle_light+1)^0,c
 12401  0036F6  0E96               	movlw	150
 12402  0036F8  6E02               	movwf	??_toggle_light^0,c
 12403  0036FA  0E7F               	movlw	127
 12404  0036FC                     u6217:
 12405  0036FC  2EE8               	decfsz	wreg,f,c
 12406  0036FE  D7FE               	bra	u6217
 12407  003700  2E02               	decfsz	??_toggle_light^0,f,c
 12408  003702  D7FC               	bra	u6217
 12409  003704  2E03               	decfsz	(??_toggle_light+1)^0,f,c
 12410  003706  D7FA               	bra	u6217
 12411  003708  F000               	nop	
 12412  00370A                     l4433:
 12413                           
 12414                           ;color.c: 52:         if (lightnumber == 4){
 12415  00370A  0E04               	movlw	4
 12416  00370C  1805               	xorwf	toggle_light@lightnumber^0,w,c
 12417  00370E  A4D8               	btfss	status,2,c
 12418  003710  EF8C  F01B         	goto	u4531
 12419  003714  EF8E  F01B         	goto	u4530
 12420  003718                     u4531:
 12421  003718  EFC4  F01B         	goto	l4441
 12422  00371C                     u4530:
 12423  00371C                     
 12424                           ;color.c: 53:             LATFbits.LATF0 = !LATFbits.LATF0;
 12425  00371C  A07E               	btfss	126,0,c	;volatile
 12426  00371E  EF93  F01B         	goto	u4541
 12427  003722  EF97  F01B         	goto	u4540
 12428  003726                     u4541:
 12429  003726  6A02               	clrf	??_toggle_light^0,c
 12430  003728  2A02               	incf	??_toggle_light^0,f,c
 12431  00372A  EF98  F01B         	goto	u4558
 12432  00372E                     u4540:
 12433  00372E  6A02               	clrf	??_toggle_light^0,c
 12434  003730                     u4558:
 12435  003730  507E               	movf	126,w,c	;volatile
 12436  003732  1802               	xorwf	??_toggle_light^0,w,c
 12437  003734  0BFE               	andlw	-2
 12438  003736  1802               	xorwf	??_toggle_light^0,w,c
 12439  003738  6E7E               	movwf	126,c	;volatile
 12440  00373A                     
 12441                           ;color.c: 54:             _delay((unsigned long)((500)*(64000000/4000.0)));
 12442  00373A  0E29               	movlw	41
 12443  00373C  6E03               	movwf	(??_toggle_light+1)^0,c
 12444  00373E  0E96               	movlw	150
 12445  003740  6E02               	movwf	??_toggle_light^0,c
 12446  003742  0E7F               	movlw	127
 12447  003744                     u6227:
 12448  003744  2EE8               	decfsz	wreg,f,c
 12449  003746  D7FE               	bra	u6227
 12450  003748  2E02               	decfsz	??_toggle_light^0,f,c
 12451  00374A  D7FC               	bra	u6227
 12452  00374C  2E03               	decfsz	(??_toggle_light+1)^0,f,c
 12453  00374E  D7FA               	bra	u6227
 12454  003750  F000               	nop	
 12455  003752                     
 12456                           ;color.c: 55:             LATFbits.LATF0 = !LATFbits.LATF0;
 12457  003752  A07E               	btfss	126,0,c	;volatile
 12458  003754  EFAE  F01B         	goto	u4561
 12459  003758  EFB2  F01B         	goto	u4560
 12460  00375C                     u4561:
 12461  00375C  6A02               	clrf	??_toggle_light^0,c
 12462  00375E  2A02               	incf	??_toggle_light^0,f,c
 12463  003760  EFB3  F01B         	goto	u4578
 12464  003764                     u4560:
 12465  003764  6A02               	clrf	??_toggle_light^0,c
 12466  003766                     u4578:
 12467  003766  507E               	movf	126,w,c	;volatile
 12468  003768  1802               	xorwf	??_toggle_light^0,w,c
 12469  00376A  0BFE               	andlw	-2
 12470  00376C  1802               	xorwf	??_toggle_light^0,w,c
 12471  00376E  6E7E               	movwf	126,c	;volatile
 12472                           
 12473                           ;color.c: 56:             _delay((unsigned long)((500)*(64000000/4000.0)));
 12474  003770  0E29               	movlw	41
 12475  003772  6E03               	movwf	(??_toggle_light+1)^0,c
 12476  003774  0E96               	movlw	150
 12477  003776  6E02               	movwf	??_toggle_light^0,c
 12478  003778  0E7F               	movlw	127
 12479  00377A                     u6237:
 12480  00377A  2EE8               	decfsz	wreg,f,c
 12481  00377C  D7FE               	bra	u6237
 12482  00377E  2E02               	decfsz	??_toggle_light^0,f,c
 12483  003780  D7FC               	bra	u6237
 12484  003782  2E03               	decfsz	(??_toggle_light+1)^0,f,c
 12485  003784  D7FA               	bra	u6237
 12486  003786  F000               	nop	
 12487  003788                     l4441:
 12488                           
 12489                           ;color.c: 58:         if (lightnumber == 3){
 12490  003788  0E03               	movlw	3
 12491  00378A  1805               	xorwf	toggle_light@lightnumber^0,w,c
 12492  00378C  A4D8               	btfss	status,2,c
 12493  00378E  EFCB  F01B         	goto	u4581
 12494  003792  EFCD  F01B         	goto	u4580
 12495  003796                     u4581:
 12496  003796  EF03  F01C         	goto	l4449
 12497  00379A                     u4580:
 12498  00379A                     
 12499                           ;color.c: 59:             LATHbits.LATH0 = !LATHbits.LATH0;
 12500  00379A  A080               	btfss	128,0,c	;volatile
 12501  00379C  EFD2  F01B         	goto	u4591
 12502  0037A0  EFD6  F01B         	goto	u4590
 12503  0037A4                     u4591:
 12504  0037A4  6A02               	clrf	??_toggle_light^0,c
 12505  0037A6  2A02               	incf	??_toggle_light^0,f,c
 12506  0037A8  EFD7  F01B         	goto	u4608
 12507  0037AC                     u4590:
 12508  0037AC  6A02               	clrf	??_toggle_light^0,c
 12509  0037AE                     u4608:
 12510  0037AE  5080               	movf	128,w,c	;volatile
 12511  0037B0  1802               	xorwf	??_toggle_light^0,w,c
 12512  0037B2  0BFE               	andlw	-2
 12513  0037B4  1802               	xorwf	??_toggle_light^0,w,c
 12514  0037B6  6E80               	movwf	128,c	;volatile
 12515  0037B8                     
 12516                           ;color.c: 60:             _delay((unsigned long)((500)*(64000000/4000.0)));
 12517  0037B8  0E29               	movlw	41
 12518  0037BA  6E03               	movwf	(??_toggle_light+1)^0,c
 12519  0037BC  0E96               	movlw	150
 12520  0037BE  6E02               	movwf	??_toggle_light^0,c
 12521  0037C0  0E7F               	movlw	127
 12522  0037C2                     u6247:
 12523  0037C2  2EE8               	decfsz	wreg,f,c
 12524  0037C4  D7FE               	bra	u6247
 12525  0037C6  2E02               	decfsz	??_toggle_light^0,f,c
 12526  0037C8  D7FC               	bra	u6247
 12527  0037CA  2E03               	decfsz	(??_toggle_light+1)^0,f,c
 12528  0037CC  D7FA               	bra	u6247
 12529  0037CE  F000               	nop	
 12530  0037D0                     
 12531                           ;color.c: 61:             LATHbits.LATH0 = !LATHbits.LATH0;
 12532  0037D0  A080               	btfss	128,0,c	;volatile
 12533  0037D2  EFED  F01B         	goto	u4611
 12534  0037D6  EFF1  F01B         	goto	u4610
 12535  0037DA                     u4611:
 12536  0037DA  6A02               	clrf	??_toggle_light^0,c
 12537  0037DC  2A02               	incf	??_toggle_light^0,f,c
 12538  0037DE  EFF2  F01B         	goto	u4628
 12539  0037E2                     u4610:
 12540  0037E2  6A02               	clrf	??_toggle_light^0,c
 12541  0037E4                     u4628:
 12542  0037E4  5080               	movf	128,w,c	;volatile
 12543  0037E6  1802               	xorwf	??_toggle_light^0,w,c
 12544  0037E8  0BFE               	andlw	-2
 12545  0037EA  1802               	xorwf	??_toggle_light^0,w,c
 12546  0037EC  6E80               	movwf	128,c	;volatile
 12547                           
 12548                           ;color.c: 62:             _delay((unsigned long)((500)*(64000000/4000.0)));
 12549  0037EE  0E29               	movlw	41
 12550  0037F0  6E03               	movwf	(??_toggle_light+1)^0,c
 12551  0037F2  0E96               	movlw	150
 12552  0037F4  6E02               	movwf	??_toggle_light^0,c
 12553  0037F6  0E7F               	movlw	127
 12554  0037F8                     u6257:
 12555  0037F8  2EE8               	decfsz	wreg,f,c
 12556  0037FA  D7FE               	bra	u6257
 12557  0037FC  2E02               	decfsz	??_toggle_light^0,f,c
 12558  0037FE  D7FC               	bra	u6257
 12559  003800  2E03               	decfsz	(??_toggle_light+1)^0,f,c
 12560  003802  D7FA               	bra	u6257
 12561  003804  F000               	nop	
 12562  003806                     l4449:
 12563                           
 12564                           ;color.c: 64:     }
 12565  003806  2A04               	incf	toggle_light@i^0,f,c
 12566  003808                     l62:
 12567  003808  5001               	movf	toggle_light@toggletime^0,w,c
 12568  00380A  5C04               	subwf	toggle_light@i^0,w,c
 12569  00380C  A0D8               	btfss	status,0,c
 12570  00380E  EF0B  F01C         	goto	u4631
 12571  003812  EF0D  F01C         	goto	u4630
 12572  003816                     u4631:
 12573  003816  EFBF  F01A         	goto	l4409
 12574  00381A                     u4630:
 12575  00381A  0012               	return		;funcret
 12576  00381C                     __end_of_toggle_light:
 12577                           	callstack 0
 12578                           
 12579 ;; *************** function _short_reverse *****************
 12580 ;; Defined at:
 12581 ;;		line 183 in file "dc_motor.c"
 12582 ;; Parameters:    Size  Location     Type
 12583 ;;  mL              2   31[COMRAM] PTR struct DC_motor
 12584 ;;		 -> main@motorL(9), 
 12585 ;;  mR              2   33[COMRAM] PTR struct DC_motor
 12586 ;;		 -> main@motorR(9), 
 12587 ;; Auto vars:     Size  Location     Type
 12588 ;;		None
 12589 ;; Return value:  Size  Location     Type
 12590 ;;                  1    wreg      void 
 12591 ;; Registers used:
 12592 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12593 ;; Tracked objects:
 12594 ;;		On entry : 0/0
 12595 ;;		On exit  : 0/0
 12596 ;;		Unchanged: 0/0
 12597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12598 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12599 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12600 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12601 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12602 ;;Total ram usage:        6 bytes
 12603 ;; Hardware stack levels used: 1
 12604 ;; Hardware stack levels required when called: 4
 12605 ;; This function calls:
 12606 ;;		_fullSpeedBack
 12607 ;;		_stop
 12608 ;; This function is called by:
 12609 ;;		_action
 12610 ;; This function uses a non-reentrant model
 12611 ;;
 12612                           
 12613                           	psect	text66
 12614  005946                     __ptext66:
 12615                           	callstack 0
 12616  005946                     _short_reverse:
 12617                           	callstack 25
 12618  005946                     
 12619                           ;dc_motor.c: 183: void short_reverse(struct DC_motor *mL, struct DC_motor *mR);dc_motor.
      +                          c: 184: { fullSpeedBack(mL, mR);
 12620  005946  C020  F01A         	movff	short_reverse@mL,fullSpeedBack@mL
 12621  00594A  C021  F01B         	movff	short_reverse@mL+1,fullSpeedBack@mL+1
 12622  00594E  C022  F01C         	movff	short_reverse@mR,fullSpeedBack@mR
 12623  005952  C023  F01D         	movff	short_reverse@mR+1,fullSpeedBack@mR+1
 12624  005956  EC84  F029         	call	_fullSpeedBack	;wreg free
 12625  00595A                     
 12626                           ;dc_motor.c: 185:     _delay((unsigned long)((800)*(64000000/4000.0)));
 12627  00595A  0E41               	movlw	65
 12628  00595C  6E25               	movwf	(??_short_reverse+1)^0,c
 12629  00595E  0EF0               	movlw	240
 12630  005960  6E24               	movwf	??_short_reverse^0,c
 12631  005962  0E33               	movlw	51
 12632  005964                     u6267:
 12633  005964  2EE8               	decfsz	wreg,f,c
 12634  005966  D7FE               	bra	u6267
 12635  005968  2E24               	decfsz	??_short_reverse^0,f,c
 12636  00596A  D7FC               	bra	u6267
 12637  00596C  2E25               	decfsz	(??_short_reverse+1)^0,f,c
 12638  00596E  D7FA               	bra	u6267
 12639  005970  F000               	nop	
 12640  005972                     
 12641                           ;dc_motor.c: 186:     stop(mL,mR);
 12642  005972  C020  F01A         	movff	short_reverse@mL,stop@mL
 12643  005976  C021  F01B         	movff	short_reverse@mL+1,stop@mL+1
 12644  00597A  C022  F01C         	movff	short_reverse@mR,stop@mR
 12645  00597E  C023  F01D         	movff	short_reverse@mR+1,stop@mR+1
 12646  005982  EC26  F029         	call	_stop	;wreg free
 12647  005986  0012               	return		;funcret
 12648  005988                     __end_of_short_reverse:
 12649                           	callstack 0
 12650                           
 12651 ;; *************** function _goback *****************
 12652 ;; Defined at:
 12653 ;;		line 114 in file "movement.c"
 12654 ;; Parameters:    Size  Location     Type
 12655 ;;  mL              2   49[COMRAM] PTR struct DC_motor
 12656 ;;		 -> main@motorL(9), 
 12657 ;;  mR              2   51[COMRAM] PTR struct DC_motor
 12658 ;;		 -> main@motorR(9), 
 12659 ;; Auto vars:     Size  Location     Type
 12660 ;;  i               2   55[COMRAM] unsigned int 
 12661 ;; Return value:  Size  Location     Type
 12662 ;;                  1    wreg      void 
 12663 ;; Registers used:
 12664 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12665 ;; Tracked objects:
 12666 ;;		On entry : 0/0
 12667 ;;		On exit  : 0/0
 12668 ;;		Unchanged: 0/0
 12669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12670 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12671 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12672 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12673 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12674 ;;Total ram usage:        8 bytes
 12675 ;; Hardware stack levels used: 1
 12676 ;; Hardware stack levels required when called: 5
 12677 ;; This function calls:
 12678 ;;		_fullSpeedAhead
 12679 ;;		_reverse_square
 12680 ;;		_stop
 12681 ;;		_turnLeft
 12682 ;;		_turnRight
 12683 ;; This function is called by:
 12684 ;;		_action
 12685 ;; This function uses a non-reentrant model
 12686 ;;
 12687                           
 12688                           	psect	text67
 12689  0032C0                     __ptext67:
 12690                           	callstack 0
 12691  0032C0                     _goback:
 12692                           	callstack 24
 12693  0032C0                     
 12694                           ;movement.c: 114: void goback(struct DC_motor *mL, struct DC_motor *mR);movement.c: 115:
      +                           { turnRight(mL,mR,180);
 12695  0032C0  C032  F020         	movff	goback@mL,turnRight@mL
 12696  0032C4  C033  F021         	movff	goback@mL+1,turnRight@mL+1
 12697  0032C8  C034  F022         	movff	goback@mR,turnRight@mR
 12698  0032CC  C035  F023         	movff	goback@mR+1,turnRight@mR+1
 12699  0032D0  0EB4               	movlw	180
 12700  0032D2  6E24               	movwf	turnRight@angle_right^0,c
 12701  0032D4  EC5A  F021         	call	_turnRight	;wreg free
 12702  0032D8                     l5097:
 12703                           
 12704                           ;movement.c: 116:     array_index--;
 12705  0032D8  0101               	movlb	1	; () banked
 12706  0032DA  0749               	decf	_array_index& (0+255),f,b
 12707  0032DC                     l5099:
 12708                           
 12709                           ; BSR set to: 1
 12710                           ;movement.c: 118:         fullSpeedAhead(mL,mR);
 12711  0032DC  C032  F01A         	movff	goback@mL,fullSpeedAhead@mL
 12712  0032E0  C033  F01B         	movff	goback@mL+1,fullSpeedAhead@mL+1
 12713  0032E4  C034  F01C         	movff	goback@mR,fullSpeedAhead@mR
 12714  0032E8  C035  F01D         	movff	goback@mR+1,fullSpeedAhead@mR+1
 12715  0032EC  ECCE  F029         	call	_fullSpeedAhead	;wreg free
 12716  0032F0                     
 12717                           ;movement.c: 119:         for (unsigned int i=0; i<memory[array_index]; i++) {_delay((un
      +                          signed long)((100)*(64000000/4000.0)));}
 12718  0032F0  0E00               	movlw	0
 12719  0032F2  6E39               	movwf	(goback@i+1)^0,c
 12720  0032F4  0E00               	movlw	0
 12721  0032F6  6E38               	movwf	goback@i^0,c
 12722  0032F8  EF8C  F019         	goto	l5107
 12723  0032FC                     l5103:
 12724                           
 12725                           ; BSR set to: 1
 12726  0032FC  0E09               	movlw	9
 12727  0032FE  6E37               	movwf	(??_goback+1)^0,c
 12728  003300  0E1E               	movlw	30
 12729  003302  6E36               	movwf	??_goback^0,c
 12730  003304  0EE4               	movlw	228
 12731  003306                     u6277:
 12732  003306  2EE8               	decfsz	wreg,f,c
 12733  003308  D7FE               	bra	u6277
 12734  00330A  2E36               	decfsz	??_goback^0,f,c
 12735  00330C  D7FC               	bra	u6277
 12736  00330E  2E37               	decfsz	(??_goback+1)^0,f,c
 12737  003310  D7FA               	bra	u6277
 12738  003312  D000               	nop2	
 12739  003314  4A38               	infsnz	goback@i^0,f,c
 12740  003316  2A39               	incf	(goback@i+1)^0,f,c
 12741  003318                     l5107:
 12742  003318  0101               	movlb	1	; () banked
 12743  00331A  5149               	movf	_array_index& (0+255),w,b
 12744  00331C  0D02               	mullw	2
 12745  00331E  0E00               	movlw	low _memory
 12746  003320  24F3               	addwf	243,w,c
 12747  003322  6ED9               	movwf	fsr2l,c
 12748  003324  0E01               	movlw	high _memory
 12749  003326  20F4               	addwfc	prodh,w,c
 12750  003328  6EDA               	movwf	fsr2h,c
 12751  00332A  50DE               	movf	postinc2,w,c
 12752  00332C  5C38               	subwf	goback@i^0,w,c
 12753  00332E  50DE               	movf	postinc2,w,c
 12754  003330  5839               	subwfb	(goback@i+1)^0,w,c
 12755  003332  A0D8               	btfss	status,0,c
 12756  003334  EF9E  F019         	goto	u5331
 12757  003338  EFA0  F019         	goto	u5330
 12758  00333C                     u5331:
 12759  00333C  EF7E  F019         	goto	l5103
 12760  003340                     u5330:
 12761  003340                     
 12762                           ; BSR set to: 1
 12763                           ;movement.c: 120:         stop(mL,mR);
 12764  003340  C032  F01A         	movff	goback@mL,stop@mL
 12765  003344  C033  F01B         	movff	goback@mL+1,stop@mL+1
 12766  003348  C034  F01C         	movff	goback@mR,stop@mR
 12767  00334C  C035  F01D         	movff	goback@mR+1,stop@mR+1
 12768  003350  EC26  F029         	call	_stop	;wreg free
 12769  003354                     
 12770                           ;movement.c: 121:         if (array_index == 0){break;}
 12771  003354  0101               	movlb	1	; () banked
 12772  003356  5149               	movf	_array_index& (0+255),w,b
 12773  003358  A4D8               	btfss	status,2,c
 12774  00335A  EFB1  F019         	goto	u5341
 12775  00335E  EFB3  F019         	goto	u5340
 12776  003362                     u5341:
 12777  003362  EFB5  F019         	goto	l5115
 12778  003366                     u5340:
 12779  003366  EFAB  F01A         	goto	l5159
 12780  00336A                     l5115:
 12781                           
 12782                           ; BSR set to: 1
 12783                           ;movement.c: 122:         array_index--;
 12784  00336A  0749               	decf	_array_index& (0+255),f,b
 12785  00336C                     
 12786                           ; BSR set to: 1
 12787                           ;movement.c: 123:         if (memory[array_index] == 1){turnLeft(mL,mR,90);array_index--
      +                          ;}
 12788  00336C  5149               	movf	_array_index& (0+255),w,b
 12789  00336E  0D02               	mullw	2
 12790  003370  0E00               	movlw	low _memory
 12791  003372  24F3               	addwf	243,w,c
 12792  003374  6ED9               	movwf	fsr2l,c
 12793  003376  0E01               	movlw	high _memory
 12794  003378  20F4               	addwfc	prodh,w,c
 12795  00337A  6EDA               	movwf	fsr2h,c
 12796  00337C  04DE               	decf	postinc2,w,c
 12797  00337E  10DE               	iorwf	postinc2,w,c
 12798  003380  A4D8               	btfss	status,2,c
 12799  003382  EFC5  F019         	goto	u5351
 12800  003386  EFC7  F019         	goto	u5350
 12801  00338A                     u5351:
 12802  00338A  EFD5  F019         	goto	l5123
 12803  00338E                     u5350:
 12804  00338E                     
 12805                           ; BSR set to: 1
 12806  00338E  C032  F020         	movff	goback@mL,turnLeft@mL
 12807  003392  C033  F021         	movff	goback@mL+1,turnLeft@mL+1
 12808  003396  C034  F022         	movff	goback@mR,turnLeft@mR
 12809  00339A  C035  F023         	movff	goback@mR+1,turnLeft@mR+1
 12810  00339E  0E5A               	movlw	90
 12811  0033A0  6E24               	movwf	turnLeft@angle_left^0,c
 12812  0033A2  EC21  F022         	call	_turnLeft	;wreg free
 12813  0033A6  EF6C  F019         	goto	l5097
 12814  0033AA                     l5123:
 12815                           
 12816                           ; BSR set to: 1
 12817  0033AA  5149               	movf	_array_index& (0+255),w,b
 12818  0033AC  0D02               	mullw	2
 12819  0033AE  0E00               	movlw	low _memory
 12820  0033B0  24F3               	addwf	243,w,c
 12821  0033B2  6ED9               	movwf	fsr2l,c
 12822  0033B4  0E01               	movlw	high _memory
 12823  0033B6  20F4               	addwfc	prodh,w,c
 12824  0033B8  6EDA               	movwf	fsr2h,c
 12825  0033BA  0E02               	movlw	2
 12826  0033BC  18DE               	xorwf	postinc2,w,c
 12827  0033BE  10DE               	iorwf	postinc2,w,c
 12828  0033C0  A4D8               	btfss	status,2,c
 12829  0033C2  EFE5  F019         	goto	u5361
 12830  0033C6  EFE7  F019         	goto	u5360
 12831  0033CA                     u5361:
 12832  0033CA  EFF5  F019         	goto	l5129
 12833  0033CE                     u5360:
 12834  0033CE                     
 12835                           ; BSR set to: 1
 12836  0033CE  C032  F020         	movff	goback@mL,turnRight@mL
 12837  0033D2  C033  F021         	movff	goback@mL+1,turnRight@mL+1
 12838  0033D6  C034  F022         	movff	goback@mR,turnRight@mR
 12839  0033DA  C035  F023         	movff	goback@mR+1,turnRight@mR+1
 12840  0033DE  0E5A               	movlw	90
 12841  0033E0  6E24               	movwf	turnRight@angle_right^0,c
 12842  0033E2  EC5A  F021         	call	_turnRight	;wreg free
 12843  0033E6  EF6C  F019         	goto	l5097
 12844  0033EA                     l5129:
 12845                           
 12846                           ; BSR set to: 1
 12847  0033EA  5149               	movf	_array_index& (0+255),w,b
 12848  0033EC  0D02               	mullw	2
 12849  0033EE  0E00               	movlw	low _memory
 12850  0033F0  24F3               	addwf	243,w,c
 12851  0033F2  6ED9               	movwf	fsr2l,c
 12852  0033F4  0E01               	movlw	high _memory
 12853  0033F6  20F4               	addwfc	prodh,w,c
 12854  0033F8  6EDA               	movwf	fsr2h,c
 12855  0033FA  0E03               	movlw	3
 12856  0033FC  18DE               	xorwf	postinc2,w,c
 12857  0033FE  10DE               	iorwf	postinc2,w,c
 12858  003400  A4D8               	btfss	status,2,c
 12859  003402  EF05  F01A         	goto	u5371
 12860  003406  EF07  F01A         	goto	u5370
 12861  00340A                     u5371:
 12862  00340A  EF15  F01A         	goto	l5135
 12863  00340E                     u5370:
 12864  00340E                     
 12865                           ; BSR set to: 1
 12866  00340E  C032  F020         	movff	goback@mL,turnLeft@mL
 12867  003412  C033  F021         	movff	goback@mL+1,turnLeft@mL+1
 12868  003416  C034  F022         	movff	goback@mR,turnLeft@mR
 12869  00341A  C035  F023         	movff	goback@mR+1,turnLeft@mR+1
 12870  00341E  0EB4               	movlw	180
 12871  003420  6E24               	movwf	turnLeft@angle_left^0,c
 12872  003422  EC21  F022         	call	_turnLeft	;wreg free
 12873  003426  EF6C  F019         	goto	l5097
 12874  00342A                     l5135:
 12875                           
 12876                           ; BSR set to: 1
 12877  00342A  5149               	movf	_array_index& (0+255),w,b
 12878  00342C  0D02               	mullw	2
 12879  00342E  0E00               	movlw	low _memory
 12880  003430  24F3               	addwf	243,w,c
 12881  003432  6ED9               	movwf	fsr2l,c
 12882  003434  0E01               	movlw	high _memory
 12883  003436  20F4               	addwfc	prodh,w,c
 12884  003438  6EDA               	movwf	fsr2h,c
 12885  00343A  0E04               	movlw	4
 12886  00343C  18DE               	xorwf	postinc2,w,c
 12887  00343E  10DE               	iorwf	postinc2,w,c
 12888  003440  A4D8               	btfss	status,2,c
 12889  003442  EF25  F01A         	goto	u5381
 12890  003446  EF27  F01A         	goto	u5380
 12891  00344A                     u5381:
 12892  00344A  EF3F  F01A         	goto	l5141
 12893  00344E                     u5380:
 12894  00344E                     
 12895                           ; BSR set to: 1
 12896  00344E  C032  F020         	movff	goback@mL,turnLeft@mL
 12897  003452  C033  F021         	movff	goback@mL+1,turnLeft@mL+1
 12898  003456  C034  F022         	movff	goback@mR,turnLeft@mR
 12899  00345A  C035  F023         	movff	goback@mR+1,turnLeft@mR+1
 12900  00345E  0E5A               	movlw	90
 12901  003460  6E24               	movwf	turnLeft@angle_left^0,c
 12902  003462  EC21  F022         	call	_turnLeft	;wreg free
 12903  003466  C032  F020         	movff	goback@mL,reverse_square@mL
 12904  00346A  C033  F021         	movff	goback@mL+1,reverse_square@mL+1
 12905  00346E  C034  F022         	movff	goback@mR,reverse_square@mR
 12906  003472  C035  F023         	movff	goback@mR+1,reverse_square@mR+1
 12907  003476  ECC4  F02C         	call	_reverse_square	;wreg free
 12908  00347A  EF6C  F019         	goto	l5097
 12909  00347E                     l5141:
 12910                           
 12911                           ; BSR set to: 1
 12912  00347E  5149               	movf	_array_index& (0+255),w,b
 12913  003480  0D02               	mullw	2
 12914  003482  0E00               	movlw	low _memory
 12915  003484  24F3               	addwf	243,w,c
 12916  003486  6ED9               	movwf	fsr2l,c
 12917  003488  0E01               	movlw	high _memory
 12918  00348A  20F4               	addwfc	prodh,w,c
 12919  00348C  6EDA               	movwf	fsr2h,c
 12920  00348E  0E05               	movlw	5
 12921  003490  18DE               	xorwf	postinc2,w,c
 12922  003492  10DE               	iorwf	postinc2,w,c
 12923  003494  A4D8               	btfss	status,2,c
 12924  003496  EF4F  F01A         	goto	u5391
 12925  00349A  EF51  F01A         	goto	u5390
 12926  00349E                     u5391:
 12927  00349E  EF69  F01A         	goto	l5147
 12928  0034A2                     u5390:
 12929  0034A2                     
 12930                           ; BSR set to: 1
 12931  0034A2  C032  F020         	movff	goback@mL,turnRight@mL
 12932  0034A6  C033  F021         	movff	goback@mL+1,turnRight@mL+1
 12933  0034AA  C034  F022         	movff	goback@mR,turnRight@mR
 12934  0034AE  C035  F023         	movff	goback@mR+1,turnRight@mR+1
 12935  0034B2  0E5A               	movlw	90
 12936  0034B4  6E24               	movwf	turnRight@angle_right^0,c
 12937  0034B6  EC5A  F021         	call	_turnRight	;wreg free
 12938  0034BA  C032  F020         	movff	goback@mL,reverse_square@mL
 12939  0034BE  C033  F021         	movff	goback@mL+1,reverse_square@mL+1
 12940  0034C2  C034  F022         	movff	goback@mR,reverse_square@mR
 12941  0034C6  C035  F023         	movff	goback@mR+1,reverse_square@mR+1
 12942  0034CA  ECC4  F02C         	call	_reverse_square	;wreg free
 12943  0034CE  EF6C  F019         	goto	l5097
 12944  0034D2                     l5147:
 12945                           
 12946                           ; BSR set to: 1
 12947  0034D2  5149               	movf	_array_index& (0+255),w,b
 12948  0034D4  0D02               	mullw	2
 12949  0034D6  0E00               	movlw	low _memory
 12950  0034D8  24F3               	addwf	243,w,c
 12951  0034DA  6ED9               	movwf	fsr2l,c
 12952  0034DC  0E01               	movlw	high _memory
 12953  0034DE  20F4               	addwfc	prodh,w,c
 12954  0034E0  6EDA               	movwf	fsr2h,c
 12955  0034E2  0E06               	movlw	6
 12956  0034E4  18DE               	xorwf	postinc2,w,c
 12957  0034E6  10DE               	iorwf	postinc2,w,c
 12958  0034E8  A4D8               	btfss	status,2,c
 12959  0034EA  EF79  F01A         	goto	u5401
 12960  0034EE  EF7B  F01A         	goto	u5400
 12961  0034F2                     u5401:
 12962  0034F2  EF89  F01A         	goto	l5153
 12963  0034F6                     u5400:
 12964  0034F6                     
 12965                           ; BSR set to: 1
 12966  0034F6  C032  F020         	movff	goback@mL,turnLeft@mL
 12967  0034FA  C033  F021         	movff	goback@mL+1,turnLeft@mL+1
 12968  0034FE  C034  F022         	movff	goback@mR,turnLeft@mR
 12969  003502  C035  F023         	movff	goback@mR+1,turnLeft@mR+1
 12970  003506  0E87               	movlw	135
 12971  003508  6E24               	movwf	turnLeft@angle_left^0,c
 12972  00350A  EC21  F022         	call	_turnLeft	;wreg free
 12973  00350E  EF6C  F019         	goto	l5097
 12974  003512                     l5153:
 12975                           
 12976                           ; BSR set to: 1
 12977  003512  5149               	movf	_array_index& (0+255),w,b
 12978  003514  0D02               	mullw	2
 12979  003516  0E00               	movlw	low _memory
 12980  003518  24F3               	addwf	243,w,c
 12981  00351A  6ED9               	movwf	fsr2l,c
 12982  00351C  0E01               	movlw	high _memory
 12983  00351E  20F4               	addwfc	prodh,w,c
 12984  003520  6EDA               	movwf	fsr2h,c
 12985  003522  0E07               	movlw	7
 12986  003524  18DE               	xorwf	postinc2,w,c
 12987  003526  10DE               	iorwf	postinc2,w,c
 12988  003528  A4D8               	btfss	status,2,c
 12989  00352A  EF99  F01A         	goto	u5411
 12990  00352E  EF9B  F01A         	goto	u5410
 12991  003532                     u5411:
 12992  003532  EFA9  F01A         	goto	l586
 12993  003536                     u5410:
 12994  003536                     
 12995                           ; BSR set to: 1
 12996  003536  C032  F020         	movff	goback@mL,turnRight@mL
 12997  00353A  C033  F021         	movff	goback@mL+1,turnRight@mL+1
 12998  00353E  C034  F022         	movff	goback@mR,turnRight@mR
 12999  003542  C035  F023         	movff	goback@mR+1,turnRight@mR+1
 13000  003546  0E87               	movlw	135
 13001  003548  6E24               	movwf	turnRight@angle_right^0,c
 13002  00354A  EC5A  F021         	call	_turnRight	;wreg free
 13003  00354E  EF6C  F019         	goto	l5097
 13004  003552                     l586:
 13005                           
 13006                           ; BSR set to: 1
 13007  003552  EF6E  F019         	goto	l5099
 13008  003556                     l5159:
 13009  003556  C032  F01A         	movff	goback@mL,stop@mL
 13010  00355A  C033  F01B         	movff	goback@mL+1,stop@mL+1
 13011  00355E  C034  F01C         	movff	goback@mR,stop@mR
 13012  003562  C035  F01D         	movff	goback@mR+1,stop@mR+1
 13013  003566  EC26  F029         	call	_stop	;wreg free
 13014  00356A  EFAB  F01A         	goto	l5159
 13015  00356E  0012               	return		;funcret
 13016  003570                     __end_of_goback:
 13017                           	callstack 0
 13018                           
 13019 ;; *************** function _turnRight *****************
 13020 ;; Defined at:
 13021 ;;		line 122 in file "dc_motor.c"
 13022 ;; Parameters:    Size  Location     Type
 13023 ;;  mL              2   31[COMRAM] PTR struct DC_motor
 13024 ;;		 -> main@motorL(9), 
 13025 ;;  mR              2   33[COMRAM] PTR struct DC_motor
 13026 ;;		 -> main@motorR(9), 
 13027 ;;  angle_right     1   35[COMRAM] unsigned char 
 13028 ;; Auto vars:     Size  Location     Type
 13029 ;;  i               2   45[COMRAM] unsigned int 
 13030 ;;  i               2   43[COMRAM] unsigned int 
 13031 ;;  i               2   41[COMRAM] unsigned int 
 13032 ;;  delay           2   47[COMRAM] unsigned int 
 13033 ;;  delay_180       2   39[COMRAM] unsigned int 
 13034 ;;  delay_135       2   37[COMRAM] unsigned int 
 13035 ;; Return value:  Size  Location     Type
 13036 ;;                  1    wreg      void 
 13037 ;; Registers used:
 13038 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13039 ;; Tracked objects:
 13040 ;;		On entry : 0/0
 13041 ;;		On exit  : 0/0
 13042 ;;		Unchanged: 0/0
 13043 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13044 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13045 ;;      Locals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13046 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13047 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13048 ;;Total ram usage:       18 bytes
 13049 ;; Hardware stack levels used: 1
 13050 ;; Hardware stack levels required when called: 4
 13051 ;; This function calls:
 13052 ;;		_setMotorPWM
 13053 ;;		_stop
 13054 ;; This function is called by:
 13055 ;;		_action
 13056 ;;		_test_action
 13057 ;;		_goback
 13058 ;; This function uses a non-reentrant model
 13059 ;;
 13060                           
 13061                           	psect	text68
 13062  0042B4                     __ptext68:
 13063                           	callstack 0
 13064  0042B4                     _turnRight:
 13065                           	callstack 24
 13066  0042B4                     
 13067                           ;dc_motor.c: 122: void turnRight(struct DC_motor *mL, struct DC_motor *mR, unsigned char
      +                           angle_right);dc_motor.c: 123: {;dc_motor.c: 124:     mL->direction=1;
 13068  0042B4  EE20 F001          	lfsr	2,1
 13069  0042B8  5020               	movf	turnRight@mL^0,w,c
 13070  0042BA  26D9               	addwf	fsr2l,f,c
 13071  0042BC  5021               	movf	(turnRight@mL+1)^0,w,c
 13072  0042BE  22DA               	addwfc	fsr2h,f,c
 13073  0042C0  0E01               	movlw	1
 13074  0042C2  6EDF               	movwf	indf2,c
 13075                           
 13076                           ;dc_motor.c: 125:     mR->direction=1;
 13077  0042C4  EE20 F001          	lfsr	2,1
 13078  0042C8  5022               	movf	turnRight@mR^0,w,c
 13079  0042CA  26D9               	addwf	fsr2l,f,c
 13080  0042CC  5023               	movf	(turnRight@mR+1)^0,w,c
 13081  0042CE  22DA               	addwfc	fsr2h,f,c
 13082  0042D0  0E01               	movlw	1
 13083  0042D2  6EDF               	movwf	indf2,c
 13084                           
 13085                           ;dc_motor.c: 126:     while (mL->power <25){
 13086  0042D4  EF8B  F021         	goto	l4549
 13087  0042D8                     l4541:
 13088                           
 13089                           ;dc_motor.c: 127:         mL->power += 5;
 13090  0042D8  C020  FFD9         	movff	turnRight@mL,fsr2l
 13091  0042DC  C021  FFDA         	movff	turnRight@mL+1,fsr2h
 13092  0042E0  0E05               	movlw	5
 13093  0042E2  26DF               	addwf	indf2,f,c
 13094                           
 13095                           ;dc_motor.c: 128:         mR->power = 0;
 13096  0042E4  C022  FFD9         	movff	turnRight@mR,fsr2l
 13097  0042E8  C023  FFDA         	movff	turnRight@mR+1,fsr2h
 13098  0042EC  0E00               	movlw	0
 13099  0042EE  6EDF               	movwf	indf2,c
 13100  0042F0                     
 13101                           ;dc_motor.c: 129:         setMotorPWM(mL);
 13102  0042F0  C020  F00F         	movff	turnRight@mL,setMotorPWM@m
 13103  0042F4  C021  F010         	movff	turnRight@mL+1,setMotorPWM@m+1
 13104  0042F8  EC13  F01D         	call	_setMotorPWM	;wreg free
 13105  0042FC                     
 13106                           ;dc_motor.c: 130:         setMotorPWM(mR);
 13107  0042FC  C022  F00F         	movff	turnRight@mR,setMotorPWM@m
 13108  004300  C023  F010         	movff	turnRight@mR+1,setMotorPWM@m+1
 13109  004304  EC13  F01D         	call	_setMotorPWM	;wreg free
 13110  004308                     
 13111                           ;dc_motor.c: 131:         _delay((unsigned long)((10)*(64000000/4000.0)));
 13112  004308  0ED0               	movlw	208
 13113  00430A  6E25               	movwf	??_turnRight^0,c
 13114  00430C  0ECA               	movlw	202
 13115  00430E                     u6287:
 13116  00430E  2EE8               	decfsz	wreg,f,c
 13117  004310  D7FE               	bra	u6287
 13118  004312  2E25               	decfsz	??_turnRight^0,f,c
 13119  004314  D7FC               	bra	u6287
 13120  004316                     l4549:
 13121                           
 13122                           ;dc_motor.c: 126:     while (mL->power <25){
 13123  004316  C020  FFD9         	movff	turnRight@mL,fsr2l
 13124  00431A  C021  FFDA         	movff	turnRight@mL+1,fsr2h
 13125  00431E  0E18               	movlw	24
 13126  004320  64DF               	cpfsgt	indf2,c
 13127  004322  EF95  F021         	goto	u4731
 13128  004326  EF97  F021         	goto	u4730
 13129  00432A                     u4731:
 13130  00432A  EF6C  F021         	goto	l4541
 13131  00432E                     u4730:
 13132  00432E                     
 13133                           ;dc_motor.c: 133:     unsigned int delay = angle_right * SENSITIVITY;
 13134  00432E  5024               	movf	turnRight@angle_right^0,w,c
 13135  004330  0100               	movlb	0	; () banked
 13136  004332  03FC               	mulwf	_SENSITIVITY& (0+255),b
 13137  004334  CFF3 F030          	movff	prodl,turnRight@delay
 13138  004338  CFF4 F031          	movff	prodh,turnRight@delay+1
 13139  00433C                     
 13140                           ; BSR set to: 0
 13141  00433C  0E0F               	movlw	15
 13142  00433E  2430               	addwf	turnRight@delay^0,w,c
 13143  004340  6E26               	movwf	turnRight@delay_135^0,c
 13144  004342  0E00               	movlw	0
 13145  004344  2031               	addwfc	(turnRight@delay+1)^0,w,c
 13146  004346  6E27               	movwf	(turnRight@delay_135+1)^0,c
 13147  004348                     
 13148                           ; BSR set to: 0
 13149  004348  0E0A               	movlw	10
 13150  00434A  2430               	addwf	turnRight@delay^0,w,c
 13151  00434C  6E28               	movwf	turnRight@delay_180^0,c
 13152  00434E  0E00               	movlw	0
 13153  004350  2031               	addwfc	(turnRight@delay+1)^0,w,c
 13154  004352  6E29               	movwf	(turnRight@delay_180+1)^0,c
 13155  004354                     
 13156                           ; BSR set to: 0
 13157                           ;dc_motor.c: 136:     if (angle_right == 180){
 13158  004354  0EB4               	movlw	180
 13159  004356  1824               	xorwf	turnRight@angle_right^0,w,c
 13160  004358  A4D8               	btfss	status,2,c
 13161  00435A  EFB1  F021         	goto	u4741
 13162  00435E  EFB3  F021         	goto	u4740
 13163  004362                     u4741:
 13164  004362  EFCE  F021         	goto	l4565
 13165  004366                     u4740:
 13166  004366                     
 13167                           ; BSR set to: 0
 13168                           ;dc_motor.c: 137:         for(unsigned int i = 0; i <delay_180; i++){_delay((unsigned lo
      +                          ng)((1)*(64000000/4000.0)));}
 13169  004366  0E00               	movlw	0
 13170  004368  6E2B               	movwf	(turnRight@i+1)^0,c
 13171  00436A  0E00               	movlw	0
 13172  00436C  6E2A               	movwf	turnRight@i^0,c
 13173  00436E  EFC3  F021         	goto	l313
 13174  004372                     l4561:
 13175  004372  0E15               	movlw	21
 13176  004374  6E25               	movwf	??_turnRight^0,c
 13177  004376  0EC6               	movlw	198
 13178  004378                     u6297:
 13179  004378  2EE8               	decfsz	wreg,f,c
 13180  00437A  D7FE               	bra	u6297
 13181  00437C  2E25               	decfsz	??_turnRight^0,f,c
 13182  00437E  D7FC               	bra	u6297
 13183  004380  D000               	nop2	
 13184  004382  4A2A               	infsnz	turnRight@i^0,f,c
 13185  004384  2A2B               	incf	(turnRight@i+1)^0,f,c
 13186  004386                     l313:
 13187  004386  5028               	movf	turnRight@delay_180^0,w,c
 13188  004388  5C2A               	subwf	turnRight@i^0,w,c
 13189  00438A  5029               	movf	(turnRight@delay_180+1)^0,w,c
 13190  00438C  582B               	subwfb	(turnRight@i+1)^0,w,c
 13191  00438E  A0D8               	btfss	status,0,c
 13192  004390  EFCC  F021         	goto	u4751
 13193  004394  EFCE  F021         	goto	u4750
 13194  004398                     u4751:
 13195  004398  EFB9  F021         	goto	l4561
 13196  00439C                     u4750:
 13197  00439C                     l4565:
 13198                           
 13199                           ;dc_motor.c: 139:     if (angle_right == 135){
 13200  00439C  0E87               	movlw	135
 13201  00439E  1824               	xorwf	turnRight@angle_right^0,w,c
 13202  0043A0  A4D8               	btfss	status,2,c
 13203  0043A2  EFD5  F021         	goto	u4761
 13204  0043A6  EFD7  F021         	goto	u4760
 13205  0043AA                     u4761:
 13206  0043AA  EFF2  F021         	goto	l4573
 13207  0043AE                     u4760:
 13208  0043AE                     
 13209                           ;dc_motor.c: 140:         for(unsigned int i = 0; i <delay_135; i++){_delay((unsigned lo
      +                          ng)((1)*(64000000/4000.0)));}
 13210  0043AE  0E00               	movlw	0
 13211  0043B0  6E2D               	movwf	(turnRight@i_1332+1)^0,c
 13212  0043B2  0E00               	movlw	0
 13213  0043B4  6E2C               	movwf	turnRight@i_1332^0,c
 13214  0043B6  EFE7  F021         	goto	l317
 13215  0043BA                     l4569:
 13216  0043BA  0E15               	movlw	21
 13217  0043BC  6E25               	movwf	??_turnRight^0,c
 13218  0043BE  0EC6               	movlw	198
 13219  0043C0                     u6307:
 13220  0043C0  2EE8               	decfsz	wreg,f,c
 13221  0043C2  D7FE               	bra	u6307
 13222  0043C4  2E25               	decfsz	??_turnRight^0,f,c
 13223  0043C6  D7FC               	bra	u6307
 13224  0043C8  D000               	nop2	
 13225  0043CA  4A2C               	infsnz	turnRight@i_1332^0,f,c
 13226  0043CC  2A2D               	incf	(turnRight@i_1332+1)^0,f,c
 13227  0043CE                     l317:
 13228  0043CE  5026               	movf	turnRight@delay_135^0,w,c
 13229  0043D0  5C2C               	subwf	turnRight@i_1332^0,w,c
 13230  0043D2  5027               	movf	(turnRight@delay_135+1)^0,w,c
 13231  0043D4  582D               	subwfb	(turnRight@i_1332+1)^0,w,c
 13232  0043D6  A0D8               	btfss	status,0,c
 13233  0043D8  EFF0  F021         	goto	u4771
 13234  0043DC  EFF2  F021         	goto	u4770
 13235  0043E0                     u4771:
 13236  0043E0  EFDD  F021         	goto	l4569
 13237  0043E4                     u4770:
 13238  0043E4                     l4573:
 13239                           
 13240                           ;dc_motor.c: 142:     if (angle_right == 90){
 13241  0043E4  0E5A               	movlw	90
 13242  0043E6  1824               	xorwf	turnRight@angle_right^0,w,c
 13243  0043E8  A4D8               	btfss	status,2,c
 13244  0043EA  EFF9  F021         	goto	u4781
 13245  0043EE  EFFB  F021         	goto	u4780
 13246  0043F2                     u4781:
 13247  0043F2  EF16  F022         	goto	l4581
 13248  0043F6                     u4780:
 13249  0043F6                     
 13250                           ;dc_motor.c: 143:         for(unsigned int i = 0; i < delay; i++){_delay((unsigned long)
      +                          ((1)*(64000000/4000.0)));}
 13251  0043F6  0E00               	movlw	0
 13252  0043F8  6E2F               	movwf	(turnRight@i_1333+1)^0,c
 13253  0043FA  0E00               	movlw	0
 13254  0043FC  6E2E               	movwf	turnRight@i_1333^0,c
 13255  0043FE  EF0B  F022         	goto	l321
 13256  004402                     l4577:
 13257  004402  0E15               	movlw	21
 13258  004404  6E25               	movwf	??_turnRight^0,c
 13259  004406  0EC6               	movlw	198
 13260  004408                     u6317:
 13261  004408  2EE8               	decfsz	wreg,f,c
 13262  00440A  D7FE               	bra	u6317
 13263  00440C  2E25               	decfsz	??_turnRight^0,f,c
 13264  00440E  D7FC               	bra	u6317
 13265  004410  D000               	nop2	
 13266  004412  4A2E               	infsnz	turnRight@i_1333^0,f,c
 13267  004414  2A2F               	incf	(turnRight@i_1333+1)^0,f,c
 13268  004416                     l321:
 13269  004416  5030               	movf	turnRight@delay^0,w,c
 13270  004418  5C2E               	subwf	turnRight@i_1333^0,w,c
 13271  00441A  5031               	movf	(turnRight@delay+1)^0,w,c
 13272  00441C  582F               	subwfb	(turnRight@i_1333+1)^0,w,c
 13273  00441E  A0D8               	btfss	status,0,c
 13274  004420  EF14  F022         	goto	u4791
 13275  004424  EF16  F022         	goto	u4790
 13276  004428                     u4791:
 13277  004428  EF01  F022         	goto	l4577
 13278  00442C                     u4790:
 13279  00442C                     l4581:
 13280                           
 13281                           ;dc_motor.c: 145:     stop(mL,mR);
 13282  00442C  C020  F01A         	movff	turnRight@mL,stop@mL
 13283  004430  C021  F01B         	movff	turnRight@mL+1,stop@mL+1
 13284  004434  C022  F01C         	movff	turnRight@mR,stop@mR
 13285  004438  C023  F01D         	movff	turnRight@mR+1,stop@mR+1
 13286  00443C  EC26  F029         	call	_stop	;wreg free
 13287  004440  0012               	return		;funcret
 13288  004442                     __end_of_turnRight:
 13289                           	callstack 0
 13290                           
 13291 ;; *************** function _turnLeft *****************
 13292 ;; Defined at:
 13293 ;;		line 95 in file "dc_motor.c"
 13294 ;; Parameters:    Size  Location     Type
 13295 ;;  mL              2   31[COMRAM] PTR struct DC_motor
 13296 ;;		 -> main@motorL(9), 
 13297 ;;  mR              2   33[COMRAM] PTR struct DC_motor
 13298 ;;		 -> main@motorR(9), 
 13299 ;;  angle_left      1   35[COMRAM] unsigned char 
 13300 ;; Auto vars:     Size  Location     Type
 13301 ;;  i               2   45[COMRAM] unsigned int 
 13302 ;;  i               2   43[COMRAM] unsigned int 
 13303 ;;  i               2   41[COMRAM] unsigned int 
 13304 ;;  delay           2   47[COMRAM] unsigned int 
 13305 ;;  delay_180       2   39[COMRAM] unsigned int 
 13306 ;;  delay_135       2   37[COMRAM] unsigned int 
 13307 ;; Return value:  Size  Location     Type
 13308 ;;                  1    wreg      void 
 13309 ;; Registers used:
 13310 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13311 ;; Tracked objects:
 13312 ;;		On entry : 0/0
 13313 ;;		On exit  : 0/0
 13314 ;;		Unchanged: 0/0
 13315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13316 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13317 ;;      Locals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13318 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13319 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13320 ;;Total ram usage:       18 bytes
 13321 ;; Hardware stack levels used: 1
 13322 ;; Hardware stack levels required when called: 4
 13323 ;; This function calls:
 13324 ;;		_setMotorPWM
 13325 ;;		_stop
 13326 ;; This function is called by:
 13327 ;;		_action
 13328 ;;		_test_action
 13329 ;;		_goback
 13330 ;; This function uses a non-reentrant model
 13331 ;;
 13332                           
 13333                           	psect	text69
 13334  004442                     __ptext69:
 13335                           	callstack 0
 13336  004442                     _turnLeft:
 13337                           	callstack 24
 13338  004442                     
 13339                           ;dc_motor.c: 95: void turnLeft(struct DC_motor *mL, struct DC_motor *mR, unsigned char a
      +                          ngle_left);dc_motor.c: 96: {;dc_motor.c: 97:       mL->direction=1;
 13340  004442  EE20 F001          	lfsr	2,1
 13341  004446  5020               	movf	turnLeft@mL^0,w,c
 13342  004448  26D9               	addwf	fsr2l,f,c
 13343  00444A  5021               	movf	(turnLeft@mL+1)^0,w,c
 13344  00444C  22DA               	addwfc	fsr2h,f,c
 13345  00444E  0E01               	movlw	1
 13346  004450  6EDF               	movwf	indf2,c
 13347                           
 13348                           ;dc_motor.c: 98:       mR->direction=1;
 13349  004452  EE20 F001          	lfsr	2,1
 13350  004456  5022               	movf	turnLeft@mR^0,w,c
 13351  004458  26D9               	addwf	fsr2l,f,c
 13352  00445A  5023               	movf	(turnLeft@mR+1)^0,w,c
 13353  00445C  22DA               	addwfc	fsr2h,f,c
 13354  00445E  0E01               	movlw	1
 13355  004460  6EDF               	movwf	indf2,c
 13356                           
 13357                           ;dc_motor.c: 99:       while (mR->power <25){
 13358  004462  EF52  F022         	goto	l4505
 13359  004466                     l4497:
 13360                           
 13361                           ;dc_motor.c: 100:         mR->power += 5;
 13362  004466  C022  FFD9         	movff	turnLeft@mR,fsr2l
 13363  00446A  C023  FFDA         	movff	turnLeft@mR+1,fsr2h
 13364  00446E  0E05               	movlw	5
 13365  004470  26DF               	addwf	indf2,f,c
 13366                           
 13367                           ;dc_motor.c: 101:         mL->power = 0;
 13368  004472  C020  FFD9         	movff	turnLeft@mL,fsr2l
 13369  004476  C021  FFDA         	movff	turnLeft@mL+1,fsr2h
 13370  00447A  0E00               	movlw	0
 13371  00447C  6EDF               	movwf	indf2,c
 13372  00447E                     
 13373                           ;dc_motor.c: 102:         setMotorPWM(mL);
 13374  00447E  C020  F00F         	movff	turnLeft@mL,setMotorPWM@m
 13375  004482  C021  F010         	movff	turnLeft@mL+1,setMotorPWM@m+1
 13376  004486  EC13  F01D         	call	_setMotorPWM	;wreg free
 13377  00448A                     
 13378                           ;dc_motor.c: 103:         setMotorPWM(mR);
 13379  00448A  C022  F00F         	movff	turnLeft@mR,setMotorPWM@m
 13380  00448E  C023  F010         	movff	turnLeft@mR+1,setMotorPWM@m+1
 13381  004492  EC13  F01D         	call	_setMotorPWM	;wreg free
 13382  004496                     
 13383                           ;dc_motor.c: 104:         _delay((unsigned long)((10)*(64000000/4000.0)));
 13384  004496  0ED0               	movlw	208
 13385  004498  6E25               	movwf	??_turnLeft^0,c
 13386  00449A  0ECA               	movlw	202
 13387  00449C                     u6327:
 13388  00449C  2EE8               	decfsz	wreg,f,c
 13389  00449E  D7FE               	bra	u6327
 13390  0044A0  2E25               	decfsz	??_turnLeft^0,f,c
 13391  0044A2  D7FC               	bra	u6327
 13392  0044A4                     l4505:
 13393                           
 13394                           ;dc_motor.c: 99:       while (mR->power <25){
 13395  0044A4  C022  FFD9         	movff	turnLeft@mR,fsr2l
 13396  0044A8  C023  FFDA         	movff	turnLeft@mR+1,fsr2h
 13397  0044AC  0E18               	movlw	24
 13398  0044AE  64DF               	cpfsgt	indf2,c
 13399  0044B0  EF5C  F022         	goto	u4661
 13400  0044B4  EF5E  F022         	goto	u4660
 13401  0044B8                     u4661:
 13402  0044B8  EF33  F022         	goto	l4497
 13403  0044BC                     u4660:
 13404  0044BC                     
 13405                           ;dc_motor.c: 106:     unsigned int delay = angle_left * SENSITIVITY;
 13406  0044BC  5024               	movf	turnLeft@angle_left^0,w,c
 13407  0044BE  0100               	movlb	0	; () banked
 13408  0044C0  03FC               	mulwf	_SENSITIVITY& (0+255),b
 13409  0044C2  CFF3 F030          	movff	prodl,turnLeft@delay
 13410  0044C6  CFF4 F031          	movff	prodh,turnLeft@delay+1
 13411  0044CA                     
 13412                           ; BSR set to: 0
 13413  0044CA  0E0F               	movlw	15
 13414  0044CC  2430               	addwf	turnLeft@delay^0,w,c
 13415  0044CE  6E26               	movwf	turnLeft@delay_135^0,c
 13416  0044D0  0E00               	movlw	0
 13417  0044D2  2031               	addwfc	(turnLeft@delay+1)^0,w,c
 13418  0044D4  6E27               	movwf	(turnLeft@delay_135+1)^0,c
 13419  0044D6                     
 13420                           ; BSR set to: 0
 13421  0044D6  0E0A               	movlw	10
 13422  0044D8  2430               	addwf	turnLeft@delay^0,w,c
 13423  0044DA  6E28               	movwf	turnLeft@delay_180^0,c
 13424  0044DC  0E00               	movlw	0
 13425  0044DE  2031               	addwfc	(turnLeft@delay+1)^0,w,c
 13426  0044E0  6E29               	movwf	(turnLeft@delay_180+1)^0,c
 13427  0044E2                     
 13428                           ; BSR set to: 0
 13429                           ;dc_motor.c: 109:     if (angle_left == 180){
 13430  0044E2  0EB4               	movlw	180
 13431  0044E4  1824               	xorwf	turnLeft@angle_left^0,w,c
 13432  0044E6  A4D8               	btfss	status,2,c
 13433  0044E8  EF78  F022         	goto	u4671
 13434  0044EC  EF7A  F022         	goto	u4670
 13435  0044F0                     u4671:
 13436  0044F0  EF95  F022         	goto	l4521
 13437  0044F4                     u4670:
 13438  0044F4                     
 13439                           ; BSR set to: 0
 13440                           ;dc_motor.c: 110:         for(unsigned int i = 0; i <delay_180; i++){_delay((unsigned lo
      +                          ng)((1)*(64000000/4000.0)));}
 13441  0044F4  0E00               	movlw	0
 13442  0044F6  6E2B               	movwf	(turnLeft@i+1)^0,c
 13443  0044F8  0E00               	movlw	0
 13444  0044FA  6E2A               	movwf	turnLeft@i^0,c
 13445  0044FC  EF8A  F022         	goto	l295
 13446  004500                     l4517:
 13447  004500  0E15               	movlw	21
 13448  004502  6E25               	movwf	??_turnLeft^0,c
 13449  004504  0EC6               	movlw	198
 13450  004506                     u6337:
 13451  004506  2EE8               	decfsz	wreg,f,c
 13452  004508  D7FE               	bra	u6337
 13453  00450A  2E25               	decfsz	??_turnLeft^0,f,c
 13454  00450C  D7FC               	bra	u6337
 13455  00450E  D000               	nop2	
 13456  004510  4A2A               	infsnz	turnLeft@i^0,f,c
 13457  004512  2A2B               	incf	(turnLeft@i+1)^0,f,c
 13458  004514                     l295:
 13459  004514  5028               	movf	turnLeft@delay_180^0,w,c
 13460  004516  5C2A               	subwf	turnLeft@i^0,w,c
 13461  004518  5029               	movf	(turnLeft@delay_180+1)^0,w,c
 13462  00451A  582B               	subwfb	(turnLeft@i+1)^0,w,c
 13463  00451C  A0D8               	btfss	status,0,c
 13464  00451E  EF93  F022         	goto	u4681
 13465  004522  EF95  F022         	goto	u4680
 13466  004526                     u4681:
 13467  004526  EF80  F022         	goto	l4517
 13468  00452A                     u4680:
 13469  00452A                     l4521:
 13470                           
 13471                           ;dc_motor.c: 112:     if (angle_left == 135){
 13472  00452A  0E87               	movlw	135
 13473  00452C  1824               	xorwf	turnLeft@angle_left^0,w,c
 13474  00452E  A4D8               	btfss	status,2,c
 13475  004530  EF9C  F022         	goto	u4691
 13476  004534  EF9E  F022         	goto	u4690
 13477  004538                     u4691:
 13478  004538  EFB9  F022         	goto	l4529
 13479  00453C                     u4690:
 13480  00453C                     
 13481                           ;dc_motor.c: 113:         for(unsigned int i = 0; i <delay_135; i++){_delay((unsigned lo
      +                          ng)((1)*(64000000/4000.0)));}
 13482  00453C  0E00               	movlw	0
 13483  00453E  6E2D               	movwf	(turnLeft@i_1309+1)^0,c
 13484  004540  0E00               	movlw	0
 13485  004542  6E2C               	movwf	turnLeft@i_1309^0,c
 13486  004544  EFAE  F022         	goto	l299
 13487  004548                     l4525:
 13488  004548  0E15               	movlw	21
 13489  00454A  6E25               	movwf	??_turnLeft^0,c
 13490  00454C  0EC6               	movlw	198
 13491  00454E                     u6347:
 13492  00454E  2EE8               	decfsz	wreg,f,c
 13493  004550  D7FE               	bra	u6347
 13494  004552  2E25               	decfsz	??_turnLeft^0,f,c
 13495  004554  D7FC               	bra	u6347
 13496  004556  D000               	nop2	
 13497  004558  4A2C               	infsnz	turnLeft@i_1309^0,f,c
 13498  00455A  2A2D               	incf	(turnLeft@i_1309+1)^0,f,c
 13499  00455C                     l299:
 13500  00455C  5026               	movf	turnLeft@delay_135^0,w,c
 13501  00455E  5C2C               	subwf	turnLeft@i_1309^0,w,c
 13502  004560  5027               	movf	(turnLeft@delay_135+1)^0,w,c
 13503  004562  582D               	subwfb	(turnLeft@i_1309+1)^0,w,c
 13504  004564  A0D8               	btfss	status,0,c
 13505  004566  EFB7  F022         	goto	u4701
 13506  00456A  EFB9  F022         	goto	u4700
 13507  00456E                     u4701:
 13508  00456E  EFA4  F022         	goto	l4525
 13509  004572                     u4700:
 13510  004572                     l4529:
 13511                           
 13512                           ;dc_motor.c: 115:     if (angle_left == 90){
 13513  004572  0E5A               	movlw	90
 13514  004574  1824               	xorwf	turnLeft@angle_left^0,w,c
 13515  004576  A4D8               	btfss	status,2,c
 13516  004578  EFC0  F022         	goto	u4711
 13517  00457C  EFC2  F022         	goto	u4710
 13518  004580                     u4711:
 13519  004580  EFDD  F022         	goto	l4537
 13520  004584                     u4710:
 13521  004584                     
 13522                           ;dc_motor.c: 116:         for(unsigned int i = 0; i < delay; i++){_delay((unsigned long)
      +                          ((1)*(64000000/4000.0)));}
 13523  004584  0E00               	movlw	0
 13524  004586  6E2F               	movwf	(turnLeft@i_1310+1)^0,c
 13525  004588  0E00               	movlw	0
 13526  00458A  6E2E               	movwf	turnLeft@i_1310^0,c
 13527  00458C  EFD2  F022         	goto	l303
 13528  004590                     l4533:
 13529  004590  0E15               	movlw	21
 13530  004592  6E25               	movwf	??_turnLeft^0,c
 13531  004594  0EC6               	movlw	198
 13532  004596                     u6357:
 13533  004596  2EE8               	decfsz	wreg,f,c
 13534  004598  D7FE               	bra	u6357
 13535  00459A  2E25               	decfsz	??_turnLeft^0,f,c
 13536  00459C  D7FC               	bra	u6357
 13537  00459E  D000               	nop2	
 13538  0045A0  4A2E               	infsnz	turnLeft@i_1310^0,f,c
 13539  0045A2  2A2F               	incf	(turnLeft@i_1310+1)^0,f,c
 13540  0045A4                     l303:
 13541  0045A4  5030               	movf	turnLeft@delay^0,w,c
 13542  0045A6  5C2E               	subwf	turnLeft@i_1310^0,w,c
 13543  0045A8  5031               	movf	(turnLeft@delay+1)^0,w,c
 13544  0045AA  582F               	subwfb	(turnLeft@i_1310+1)^0,w,c
 13545  0045AC  A0D8               	btfss	status,0,c
 13546  0045AE  EFDB  F022         	goto	u4721
 13547  0045B2  EFDD  F022         	goto	u4720
 13548  0045B6                     u4721:
 13549  0045B6  EFC8  F022         	goto	l4533
 13550  0045BA                     u4720:
 13551  0045BA                     l4537:
 13552                           
 13553                           ;dc_motor.c: 118:     stop(mL,mR);
 13554  0045BA  C020  F01A         	movff	turnLeft@mL,stop@mL
 13555  0045BE  C021  F01B         	movff	turnLeft@mL+1,stop@mL+1
 13556  0045C2  C022  F01C         	movff	turnLeft@mR,stop@mR
 13557  0045C6  C023  F01D         	movff	turnLeft@mR+1,stop@mR+1
 13558  0045CA  EC26  F029         	call	_stop	;wreg free
 13559  0045CE  0012               	return		;funcret
 13560  0045D0                     __end_of_turnLeft:
 13561                           	callstack 0
 13562                           
 13563 ;; *************** function _reverse_square *****************
 13564 ;; Defined at:
 13565 ;;		line 189 in file "dc_motor.c"
 13566 ;; Parameters:    Size  Location     Type
 13567 ;;  mL              2   31[COMRAM] PTR struct DC_motor
 13568 ;;		 -> main@motorL(9), 
 13569 ;;  mR              2   33[COMRAM] PTR struct DC_motor
 13570 ;;		 -> main@motorR(9), 
 13571 ;; Auto vars:     Size  Location     Type
 13572 ;;		None
 13573 ;; Return value:  Size  Location     Type
 13574 ;;                  1    wreg      void 
 13575 ;; Registers used:
 13576 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13577 ;; Tracked objects:
 13578 ;;		On entry : 0/0
 13579 ;;		On exit  : 0/0
 13580 ;;		Unchanged: 0/0
 13581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13582 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13583 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13584 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13585 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13586 ;;Total ram usage:        6 bytes
 13587 ;; Hardware stack levels used: 1
 13588 ;; Hardware stack levels required when called: 4
 13589 ;; This function calls:
 13590 ;;		_fullSpeedBack
 13591 ;;		_stop
 13592 ;; This function is called by:
 13593 ;;		_action
 13594 ;;		_goback
 13595 ;; This function uses a non-reentrant model
 13596 ;;
 13597                           
 13598                           	psect	text70
 13599  005988                     __ptext70:
 13600                           	callstack 0
 13601  005988                     _reverse_square:
 13602                           	callstack 25
 13603  005988                     
 13604                           ;dc_motor.c: 189: void reverse_square(struct DC_motor *mL, struct DC_motor *mR);dc_motor
      +                          .c: 190: { fullSpeedBack(mL, mR);
 13605  005988  C020  F01A         	movff	reverse_square@mL,fullSpeedBack@mL
 13606  00598C  C021  F01B         	movff	reverse_square@mL+1,fullSpeedBack@mL+1
 13607  005990  C022  F01C         	movff	reverse_square@mR,fullSpeedBack@mR
 13608  005994  C023  F01D         	movff	reverse_square@mR+1,fullSpeedBack@mR+1
 13609  005998  EC84  F029         	call	_fullSpeedBack	;wreg free
 13610  00599C                     
 13611                           ;dc_motor.c: 191:     _delay((unsigned long)((1300)*(64000000/4000.0)));
 13612  00599C  0E6A               	movlw	106
 13613  00599E  6E25               	movwf	(??_reverse_square+1)^0,c
 13614  0059A0  0E85               	movlw	133
 13615  0059A2  6E24               	movwf	??_reverse_square^0,c
 13616  0059A4  0EB4               	movlw	180
 13617  0059A6                     u6367:
 13618  0059A6  2EE8               	decfsz	wreg,f,c
 13619  0059A8  D7FE               	bra	u6367
 13620  0059AA  2E24               	decfsz	??_reverse_square^0,f,c
 13621  0059AC  D7FC               	bra	u6367
 13622  0059AE  2E25               	decfsz	(??_reverse_square+1)^0,f,c
 13623  0059B0  D7FA               	bra	u6367
 13624  0059B2  D000               	nop2	
 13625  0059B4                     
 13626                           ;dc_motor.c: 192:     stop(mL,mR);
 13627  0059B4  C020  F01A         	movff	reverse_square@mL,stop@mL
 13628  0059B8  C021  F01B         	movff	reverse_square@mL+1,stop@mL+1
 13629  0059BC  C022  F01C         	movff	reverse_square@mR,stop@mR
 13630  0059C0  C023  F01D         	movff	reverse_square@mR+1,stop@mR+1
 13631  0059C4  EC26  F029         	call	_stop	;wreg free
 13632  0059C8  0012               	return		;funcret
 13633  0059CA                     __end_of_reverse_square:
 13634                           	callstack 0
 13635                           
 13636 ;; *************** function _stop *****************
 13637 ;; Defined at:
 13638 ;;		line 82 in file "dc_motor.c"
 13639 ;; Parameters:    Size  Location     Type
 13640 ;;  mL              2   25[COMRAM] PTR struct DC_motor
 13641 ;;		 -> main@motorL(9), 
 13642 ;;  mR              2   27[COMRAM] PTR struct DC_motor
 13643 ;;		 -> main@motorR(9), 
 13644 ;; Auto vars:     Size  Location     Type
 13645 ;;		None
 13646 ;; Return value:  Size  Location     Type
 13647 ;;                  1    wreg      void 
 13648 ;; Registers used:
 13649 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13650 ;; Tracked objects:
 13651 ;;		On entry : 0/0
 13652 ;;		On exit  : 0/0
 13653 ;;		Unchanged: 0/0
 13654 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13655 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13656 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13657 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13658 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13659 ;;Total ram usage:        6 bytes
 13660 ;; Hardware stack levels used: 1
 13661 ;; Hardware stack levels required when called: 3
 13662 ;; This function calls:
 13663 ;;		_setMotorPWM
 13664 ;; This function is called by:
 13665 ;;		_turnLeft
 13666 ;;		_turnRight
 13667 ;;		_fullSpeedAhead_test
 13668 ;;		_short_reverse
 13669 ;;		_reverse_square
 13670 ;;		_main
 13671 ;;		_short_burst_back
 13672 ;;		_goback
 13673 ;;		_test_function
 13674 ;; This function uses a non-reentrant model
 13675 ;;
 13676                           
 13677                           	psect	text71
 13678  00524C                     __ptext71:
 13679                           	callstack 0
 13680  00524C                     _stop:
 13681                           	callstack 26
 13682  00524C                     
 13683                           ;dc_motor.c: 82: void stop(struct DC_motor *mL, struct DC_motor *mR);dc_motor.c: 83: {;d
      +                          c_motor.c: 84:     while (mL->power >0 || mR->power >0){
 13684  00524C  EF5F  F029         	goto	l4295
 13685  005250                     l4281:
 13686                           
 13687                           ;dc_motor.c: 85:         if (mL->power !=0){mL->power -= 5;}
 13688  005250  C01A  FFD9         	movff	stop@mL,fsr2l
 13689  005254  C01B  FFDA         	movff	stop@mL+1,fsr2h
 13690  005258  50DF               	movf	indf2,w,c
 13691  00525A  B4D8               	btfsc	status,2,c
 13692  00525C  EF32  F029         	goto	u4141
 13693  005260  EF34  F029         	goto	u4140
 13694  005264                     u4141:
 13695  005264  EF3A  F029         	goto	l4285
 13696  005268                     u4140:
 13697  005268  C01A  FFD9         	movff	stop@mL,fsr2l
 13698  00526C  C01B  FFDA         	movff	stop@mL+1,fsr2h
 13699  005270  0E05               	movlw	5
 13700  005272  5EDF               	subwf	indf2,f,c
 13701  005274                     l4285:
 13702                           
 13703                           ;dc_motor.c: 86:         if (mR->power !=0){mR->power -= 5;}
 13704  005274  C01C  FFD9         	movff	stop@mR,fsr2l
 13705  005278  C01D  FFDA         	movff	stop@mR+1,fsr2h
 13706  00527C  50DF               	movf	indf2,w,c
 13707  00527E  B4D8               	btfsc	status,2,c
 13708  005280  EF44  F029         	goto	u4151
 13709  005284  EF46  F029         	goto	u4150
 13710  005288                     u4151:
 13711  005288  EF4C  F029         	goto	l4289
 13712  00528C                     u4150:
 13713  00528C  C01C  FFD9         	movff	stop@mR,fsr2l
 13714  005290  C01D  FFDA         	movff	stop@mR+1,fsr2h
 13715  005294  0E05               	movlw	5
 13716  005296  5EDF               	subwf	indf2,f,c
 13717  005298                     l4289:
 13718                           
 13719                           ;dc_motor.c: 87:         setMotorPWM(mL);
 13720  005298  C01A  F00F         	movff	stop@mL,setMotorPWM@m
 13721  00529C  C01B  F010         	movff	stop@mL+1,setMotorPWM@m+1
 13722  0052A0  EC13  F01D         	call	_setMotorPWM	;wreg free
 13723  0052A4                     
 13724                           ;dc_motor.c: 88:         setMotorPWM(mR);
 13725  0052A4  C01C  F00F         	movff	stop@mR,setMotorPWM@m
 13726  0052A8  C01D  F010         	movff	stop@mR+1,setMotorPWM@m+1
 13727  0052AC  EC13  F01D         	call	_setMotorPWM	;wreg free
 13728  0052B0                     
 13729                           ;dc_motor.c: 89:         _delay((unsigned long)((10)*(64000000/4000.0)));
 13730  0052B0  0ED0               	movlw	208
 13731  0052B2  6E1E               	movwf	??_stop^0,c
 13732  0052B4  0ECA               	movlw	202
 13733  0052B6                     u6377:
 13734  0052B6  2EE8               	decfsz	wreg,f,c
 13735  0052B8  D7FE               	bra	u6377
 13736  0052BA  2E1E               	decfsz	??_stop^0,f,c
 13737  0052BC  D7FC               	bra	u6377
 13738  0052BE                     l4295:
 13739                           
 13740                           ;dc_motor.c: 84:     while (mL->power >0 || mR->power >0){
 13741  0052BE  C01A  FFD9         	movff	stop@mL,fsr2l
 13742  0052C2  C01B  FFDA         	movff	stop@mL+1,fsr2h
 13743  0052C6  50DF               	movf	indf2,w,c
 13744  0052C8  A4D8               	btfss	status,2,c
 13745  0052CA  EF69  F029         	goto	u4161
 13746  0052CE  EF6B  F029         	goto	u4160
 13747  0052D2                     u4161:
 13748  0052D2  EF28  F029         	goto	l4281
 13749  0052D6                     u4160:
 13750  0052D6  C01C  FFD9         	movff	stop@mR,fsr2l
 13751  0052DA  C01D  FFDA         	movff	stop@mR+1,fsr2h
 13752  0052DE  50DF               	movf	indf2,w,c
 13753  0052E0  A4D8               	btfss	status,2,c
 13754  0052E2  EF75  F029         	goto	u4171
 13755  0052E6  EF77  F029         	goto	u4170
 13756  0052EA                     u4171:
 13757  0052EA  EF28  F029         	goto	l4281
 13758  0052EE                     u4170:
 13759  0052EE                     
 13760                           ;dc_motor.c: 91:     _delay((unsigned long)((500)*(64000000/4000.0)));
 13761  0052EE  0E29               	movlw	41
 13762  0052F0  6E1F               	movwf	(??_stop+1)^0,c
 13763  0052F2  0E96               	movlw	150
 13764  0052F4  6E1E               	movwf	??_stop^0,c
 13765  0052F6  0E7F               	movlw	127
 13766  0052F8                     u6387:
 13767  0052F8  2EE8               	decfsz	wreg,f,c
 13768  0052FA  D7FE               	bra	u6387
 13769  0052FC  2E1E               	decfsz	??_stop^0,f,c
 13770  0052FE  D7FC               	bra	u6387
 13771  005300  2E1F               	decfsz	(??_stop+1)^0,f,c
 13772  005302  D7FA               	bra	u6387
 13773  005304  F000               	nop	
 13774  005306  0012               	return		;funcret
 13775  005308                     __end_of_stop:
 13776                           	callstack 0
 13777                           
 13778 ;; *************** function _fullSpeedBack *****************
 13779 ;; Defined at:
 13780 ;;		line 168 in file "dc_motor.c"
 13781 ;; Parameters:    Size  Location     Type
 13782 ;;  mL              2   25[COMRAM] PTR struct DC_motor
 13783 ;;		 -> main@motorL(9), 
 13784 ;;  mR              2   27[COMRAM] PTR struct DC_motor
 13785 ;;		 -> main@motorR(9), 
 13786 ;; Auto vars:     Size  Location     Type
 13787 ;;		None
 13788 ;; Return value:  Size  Location     Type
 13789 ;;                  1    wreg      void 
 13790 ;; Registers used:
 13791 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13792 ;; Tracked objects:
 13793 ;;		On entry : 0/0
 13794 ;;		On exit  : 0/0
 13795 ;;		Unchanged: 0/0
 13796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13797 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13798 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13799 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13800 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13801 ;;Total ram usage:        5 bytes
 13802 ;; Hardware stack levels used: 1
 13803 ;; Hardware stack levels required when called: 3
 13804 ;; This function calls:
 13805 ;;		_setMotorPWM
 13806 ;; This function is called by:
 13807 ;;		_short_reverse
 13808 ;;		_reverse_square
 13809 ;; This function uses a non-reentrant model
 13810 ;;
 13811                           
 13812                           	psect	text72
 13813  005308                     __ptext72:
 13814                           	callstack 0
 13815  005308                     _fullSpeedBack:
 13816                           	callstack 25
 13817  005308                     
 13818                           ;dc_motor.c: 168: void fullSpeedBack(struct DC_motor *mL, struct DC_motor *mR);dc_motor.
      +                          c: 169: {;dc_motor.c: 170:     mL->direction=0;
 13819  005308  EE20 F001          	lfsr	2,1
 13820  00530C  501A               	movf	fullSpeedBack@mL^0,w,c
 13821  00530E  26D9               	addwf	fsr2l,f,c
 13822  005310  501B               	movf	(fullSpeedBack@mL+1)^0,w,c
 13823  005312  22DA               	addwfc	fsr2h,f,c
 13824  005314  0E00               	movlw	0
 13825  005316  6EDF               	movwf	indf2,c
 13826                           
 13827                           ;dc_motor.c: 171:     mR->direction=0;
 13828  005318  EE20 F001          	lfsr	2,1
 13829  00531C  501C               	movf	fullSpeedBack@mR^0,w,c
 13830  00531E  26D9               	addwf	fsr2l,f,c
 13831  005320  501D               	movf	(fullSpeedBack@mR+1)^0,w,c
 13832  005322  22DA               	addwfc	fsr2h,f,c
 13833  005324  0E00               	movlw	0
 13834  005326  6EDF               	movwf	indf2,c
 13835                           
 13836                           ;dc_motor.c: 172:     while (mL->power<50 && mR->power<50){
 13837  005328  EFB5  F029         	goto	l4325
 13838  00532C                     l4317:
 13839                           
 13840                           ;dc_motor.c: 173:         mL->power += 10;
 13841  00532C  C01A  FFD9         	movff	fullSpeedBack@mL,fsr2l
 13842  005330  C01B  FFDA         	movff	fullSpeedBack@mL+1,fsr2h
 13843  005334  0E0A               	movlw	10
 13844  005336  26DF               	addwf	indf2,f,c
 13845                           
 13846                           ;dc_motor.c: 174:         mR->power += 10;
 13847  005338  C01C  FFD9         	movff	fullSpeedBack@mR,fsr2l
 13848  00533C  C01D  FFDA         	movff	fullSpeedBack@mR+1,fsr2h
 13849  005340  0E0A               	movlw	10
 13850  005342  26DF               	addwf	indf2,f,c
 13851  005344                     
 13852                           ;dc_motor.c: 175:         setMotorPWM(mL);
 13853  005344  C01A  F00F         	movff	fullSpeedBack@mL,setMotorPWM@m
 13854  005348  C01B  F010         	movff	fullSpeedBack@mL+1,setMotorPWM@m+1
 13855  00534C  EC13  F01D         	call	_setMotorPWM	;wreg free
 13856  005350                     
 13857                           ;dc_motor.c: 176:         setMotorPWM(mR);
 13858  005350  C01C  F00F         	movff	fullSpeedBack@mR,setMotorPWM@m
 13859  005354  C01D  F010         	movff	fullSpeedBack@mR+1,setMotorPWM@m+1
 13860  005358  EC13  F01D         	call	_setMotorPWM	;wreg free
 13861  00535C                     
 13862                           ;dc_motor.c: 177:         _delay((unsigned long)((10)*(64000000/4000.0)));
 13863  00535C  0ED0               	movlw	208
 13864  00535E  6E1E               	movwf	??_fullSpeedBack^0,c
 13865  005360  0ECA               	movlw	202
 13866  005362                     u6397:
 13867  005362  2EE8               	decfsz	wreg,f,c
 13868  005364  D7FE               	bra	u6397
 13869  005366  2E1E               	decfsz	??_fullSpeedBack^0,f,c
 13870  005368  D7FC               	bra	u6397
 13871  00536A                     l4325:
 13872                           
 13873                           ;dc_motor.c: 172:     while (mL->power<50 && mR->power<50){
 13874  00536A  C01A  FFD9         	movff	fullSpeedBack@mL,fsr2l
 13875  00536E  C01B  FFDA         	movff	fullSpeedBack@mL+1,fsr2h
 13876  005372  0E32               	movlw	50
 13877  005374  60DF               	cpfslt	indf2,c
 13878  005376  EFBF  F029         	goto	u4201
 13879  00537A  EFC1  F029         	goto	u4200
 13880  00537E                     u4201:
 13881  00537E  EFCD  F029         	goto	l343
 13882  005382                     u4200:
 13883  005382  C01C  FFD9         	movff	fullSpeedBack@mR,fsr2l
 13884  005386  C01D  FFDA         	movff	fullSpeedBack@mR+1,fsr2h
 13885  00538A  0E31               	movlw	49
 13886  00538C  64DF               	cpfsgt	indf2,c
 13887  00538E  EFCB  F029         	goto	u4211
 13888  005392  EFCD  F029         	goto	u4210
 13889  005396                     u4211:
 13890  005396  EF96  F029         	goto	l4317
 13891  00539A                     u4210:
 13892  00539A                     l343:
 13893  00539A  0012               	return		;funcret
 13894  00539C                     __end_of_fullSpeedBack:
 13895                           	callstack 0
 13896                           
 13897 ;; *************** function _fullSpeedAhead *****************
 13898 ;; Defined at:
 13899 ;;		line 149 in file "dc_motor.c"
 13900 ;; Parameters:    Size  Location     Type
 13901 ;;  mL              2   25[COMRAM] PTR struct DC_motor
 13902 ;;		 -> main@motorL(9), 
 13903 ;;  mR              2   27[COMRAM] PTR struct DC_motor
 13904 ;;		 -> main@motorR(9), 
 13905 ;; Auto vars:     Size  Location     Type
 13906 ;;		None
 13907 ;; Return value:  Size  Location     Type
 13908 ;;                  1    wreg      void 
 13909 ;; Registers used:
 13910 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13911 ;; Tracked objects:
 13912 ;;		On entry : 0/0
 13913 ;;		On exit  : 0/0
 13914 ;;		Unchanged: 0/0
 13915 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13916 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13917 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13918 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13919 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13920 ;;Total ram usage:        5 bytes
 13921 ;; Hardware stack levels used: 1
 13922 ;; Hardware stack levels required when called: 3
 13923 ;; This function calls:
 13924 ;;		_setMotorPWM
 13925 ;; This function is called by:
 13926 ;;		_fullSpeedAhead_test
 13927 ;;		_main
 13928 ;;		_short_burst_back
 13929 ;;		_goback
 13930 ;;		_test_function
 13931 ;; This function uses a non-reentrant model
 13932 ;;
 13933                           
 13934                           	psect	text73
 13935  00539C                     __ptext73:
 13936                           	callstack 0
 13937  00539C                     _fullSpeedAhead:
 13938                           	callstack 26
 13939  00539C                     
 13940                           ;dc_motor.c: 149: void fullSpeedAhead(struct DC_motor *mL, struct DC_motor *mR);dc_motor
      +                          .c: 150: {;dc_motor.c: 151:     mL->direction=1;
 13941  00539C  EE20 F001          	lfsr	2,1
 13942  0053A0  501A               	movf	fullSpeedAhead@mL^0,w,c
 13943  0053A2  26D9               	addwf	fsr2l,f,c
 13944  0053A4  501B               	movf	(fullSpeedAhead@mL+1)^0,w,c
 13945  0053A6  22DA               	addwfc	fsr2h,f,c
 13946  0053A8  0E01               	movlw	1
 13947  0053AA  6EDF               	movwf	indf2,c
 13948                           
 13949                           ;dc_motor.c: 152:     mR->direction=1;
 13950  0053AC  EE20 F001          	lfsr	2,1
 13951  0053B0  501C               	movf	fullSpeedAhead@mR^0,w,c
 13952  0053B2  26D9               	addwf	fsr2l,f,c
 13953  0053B4  501D               	movf	(fullSpeedAhead@mR+1)^0,w,c
 13954  0053B6  22DA               	addwfc	fsr2h,f,c
 13955  0053B8  0E01               	movlw	1
 13956  0053BA  6EDF               	movwf	indf2,c
 13957                           
 13958                           ;dc_motor.c: 153:     while (mL->power<30 && mR->power<30){
 13959  0053BC  EFFF  F029         	goto	l4311
 13960  0053C0                     l4303:
 13961                           
 13962                           ;dc_motor.c: 154:         mL->power += 10;
 13963  0053C0  C01A  FFD9         	movff	fullSpeedAhead@mL,fsr2l
 13964  0053C4  C01B  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
 13965  0053C8  0E0A               	movlw	10
 13966  0053CA  26DF               	addwf	indf2,f,c
 13967                           
 13968                           ;dc_motor.c: 155:         mR->power += 10;
 13969  0053CC  C01C  FFD9         	movff	fullSpeedAhead@mR,fsr2l
 13970  0053D0  C01D  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
 13971  0053D4  0E0A               	movlw	10
 13972  0053D6  26DF               	addwf	indf2,f,c
 13973  0053D8                     
 13974                           ;dc_motor.c: 156:         setMotorPWM(mL);
 13975  0053D8  C01A  F00F         	movff	fullSpeedAhead@mL,setMotorPWM@m
 13976  0053DC  C01B  F010         	movff	fullSpeedAhead@mL+1,setMotorPWM@m+1
 13977  0053E0  EC13  F01D         	call	_setMotorPWM	;wreg free
 13978  0053E4                     
 13979                           ;dc_motor.c: 157:         setMotorPWM(mR);
 13980  0053E4  C01C  F00F         	movff	fullSpeedAhead@mR,setMotorPWM@m
 13981  0053E8  C01D  F010         	movff	fullSpeedAhead@mR+1,setMotorPWM@m+1
 13982  0053EC  EC13  F01D         	call	_setMotorPWM	;wreg free
 13983  0053F0                     
 13984                           ;dc_motor.c: 158:         _delay((unsigned long)((10)*(64000000/4000.0)));
 13985  0053F0  0ED0               	movlw	208
 13986  0053F2  6E1E               	movwf	??_fullSpeedAhead^0,c
 13987  0053F4  0ECA               	movlw	202
 13988  0053F6                     u6407:
 13989  0053F6  2EE8               	decfsz	wreg,f,c
 13990  0053F8  D7FE               	bra	u6407
 13991  0053FA  2E1E               	decfsz	??_fullSpeedAhead^0,f,c
 13992  0053FC  D7FC               	bra	u6407
 13993  0053FE                     l4311:
 13994                           
 13995                           ;dc_motor.c: 153:     while (mL->power<30 && mR->power<30){
 13996  0053FE  C01A  FFD9         	movff	fullSpeedAhead@mL,fsr2l
 13997  005402  C01B  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
 13998  005406  0E1E               	movlw	30
 13999  005408  60DF               	cpfslt	indf2,c
 14000  00540A  EF09  F02A         	goto	u4181
 14001  00540E  EF0B  F02A         	goto	u4180
 14002  005412                     u4181:
 14003  005412  EF17  F02A         	goto	l332
 14004  005416                     u4180:
 14005  005416  C01C  FFD9         	movff	fullSpeedAhead@mR,fsr2l
 14006  00541A  C01D  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
 14007  00541E  0E1D               	movlw	29
 14008  005420  64DF               	cpfsgt	indf2,c
 14009  005422  EF15  F02A         	goto	u4191
 14010  005426  EF17  F02A         	goto	u4190
 14011  00542A                     u4191:
 14012  00542A  EFE0  F029         	goto	l4303
 14013  00542E                     u4190:
 14014  00542E                     l332:
 14015  00542E  0012               	return		;funcret
 14016  005430                     __end_of_fullSpeedAhead:
 14017                           	callstack 0
 14018                           
 14019 ;; *************** function _setMotorPWM *****************
 14020 ;; Defined at:
 14021 ;;		line 59 in file "dc_motor.c"
 14022 ;; Parameters:    Size  Location     Type
 14023 ;;  m               2   14[COMRAM] PTR struct DC_motor
 14024 ;;		 -> main@motorR(9), main@motorL(9), 
 14025 ;; Auto vars:     Size  Location     Type
 14026 ;;  PWMduty         2   23[COMRAM] int 
 14027 ;; Return value:  Size  Location     Type
 14028 ;;                  1    wreg      void 
 14029 ;; Registers used:
 14030 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14031 ;; Tracked objects:
 14032 ;;		On entry : 0/0
 14033 ;;		On exit  : 0/0
 14034 ;;		Unchanged: 0/0
 14035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14036 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14037 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14038 ;;      Temps:          7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14039 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14040 ;;Total ram usage:       11 bytes
 14041 ;; Hardware stack levels used: 1
 14042 ;; Hardware stack levels required when called: 2
 14043 ;; This function calls:
 14044 ;;		___awdiv
 14045 ;;		___wmul
 14046 ;; This function is called by:
 14047 ;;		_stop
 14048 ;;		_turnLeft
 14049 ;;		_turnRight
 14050 ;;		_fullSpeedAhead
 14051 ;;		_fullSpeedBack
 14052 ;; This function uses a non-reentrant model
 14053 ;;
 14054                           
 14055                           	psect	text74
 14056  003A26                     __ptext74:
 14057                           	callstack 0
 14058  003A26                     _setMotorPWM:
 14059                           	callstack 26
 14060  003A26                     
 14061                           ;dc_motor.c: 59: void setMotorPWM(struct DC_motor *m);dc_motor.c: 60: {;dc_motor.c: 61: 
      +                           int PWMduty;;dc_motor.c: 63:  if (m->direction){
 14062  003A26  EE20 F001          	lfsr	2,1
 14063  003A2A  500F               	movf	setMotorPWM@m^0,w,c
 14064  003A2C  26D9               	addwf	fsr2l,f,c
 14065  003A2E  5010               	movf	(setMotorPWM@m+1)^0,w,c
 14066  003A30  22DA               	addwfc	fsr2h,f,c
 14067  003A32  50DF               	movf	indf2,w,c
 14068  003A34  B4D8               	btfsc	status,2,c
 14069  003A36  EF1F  F01D         	goto	u3821
 14070  003A3A  EF21  F01D         	goto	u3820
 14071  003A3E                     u3821:
 14072  003A3E  EF52  F01D         	goto	l4047
 14073  003A42                     u3820:
 14074  003A42                     
 14075                           ;dc_motor.c: 65:   PWMduty=m->PWMperiod - ((int)(m->power)*(m->PWMperiod))/100;
 14076  003A42  C00F  FFD9         	movff	setMotorPWM@m,fsr2l
 14077  003A46  C010  FFDA         	movff	setMotorPWM@m+1,fsr2h
 14078  003A4A  50DF               	movf	indf2,w,c
 14079  003A4C  6E11               	movwf	??_setMotorPWM^0,c
 14080  003A4E  5011               	movf	??_setMotorPWM^0,w,c
 14081  003A50  6E01               	movwf	___wmul@multiplier^0,c
 14082  003A52  6A02               	clrf	(___wmul@multiplier+1)^0,c
 14083  003A54  EE20 F007          	lfsr	2,7
 14084  003A58  500F               	movf	setMotorPWM@m^0,w,c
 14085  003A5A  26D9               	addwf	fsr2l,f,c
 14086  003A5C  5010               	movf	(setMotorPWM@m+1)^0,w,c
 14087  003A5E  22DA               	addwfc	fsr2h,f,c
 14088  003A60  CFDE F003          	movff	postinc2,___wmul@multiplicand
 14089  003A64  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
 14090  003A68  ECE8  F02D         	call	___wmul	;wreg free
 14091  003A6C  C001  F007         	movff	?___wmul,___awdiv@dividend
 14092  003A70  C002  F008         	movff	?___wmul+1,___awdiv@dividend+1
 14093  003A74  0E00               	movlw	0
 14094  003A76  6E0A               	movwf	(___awdiv@divisor+1)^0,c
 14095  003A78  0E64               	movlw	100
 14096  003A7A  6E09               	movwf	___awdiv@divisor^0,c
 14097  003A7C  ECC4  F028         	call	___awdiv	;wreg free
 14098  003A80  EE20 F007          	lfsr	2,7
 14099  003A84  500F               	movf	setMotorPWM@m^0,w,c
 14100  003A86  26D9               	addwf	fsr2l,f,c
 14101  003A88  5010               	movf	(setMotorPWM@m+1)^0,w,c
 14102  003A8A  22DA               	addwfc	fsr2h,f,c
 14103  003A8C  CFDE F012          	movff	postinc2,??_setMotorPWM+1
 14104  003A90  CFDD F013          	movff	postdec2,??_setMotorPWM+2
 14105  003A94  5007               	movf	?___awdiv^0,w,c
 14106  003A96  5C12               	subwf	(??_setMotorPWM+1)^0,w,c
 14107  003A98  6E18               	movwf	setMotorPWM@PWMduty^0,c
 14108  003A9A  5008               	movf	(?___awdiv+1)^0,w,c
 14109  003A9C  5813               	subwfb	(??_setMotorPWM+2)^0,w,c
 14110  003A9E  6E19               	movwf	(setMotorPWM@PWMduty+1)^0,c
 14111                           
 14112                           ;dc_motor.c: 66:  }
 14113  003AA0  EF75  F01D         	goto	l4049
 14114  003AA4                     l4047:
 14115                           
 14116                           ;dc_motor.c: 69:   PWMduty=((int)(m->power)*(m->PWMperiod))/100;
 14117  003AA4  C00F  FFD9         	movff	setMotorPWM@m,fsr2l
 14118  003AA8  C010  FFDA         	movff	setMotorPWM@m+1,fsr2h
 14119  003AAC  50DF               	movf	indf2,w,c
 14120  003AAE  6E11               	movwf	??_setMotorPWM^0,c
 14121  003AB0  5011               	movf	??_setMotorPWM^0,w,c
 14122  003AB2  6E01               	movwf	___wmul@multiplier^0,c
 14123  003AB4  6A02               	clrf	(___wmul@multiplier+1)^0,c
 14124  003AB6  EE20 F007          	lfsr	2,7
 14125  003ABA  500F               	movf	setMotorPWM@m^0,w,c
 14126  003ABC  26D9               	addwf	fsr2l,f,c
 14127  003ABE  5010               	movf	(setMotorPWM@m+1)^0,w,c
 14128  003AC0  22DA               	addwfc	fsr2h,f,c
 14129  003AC2  CFDE F003          	movff	postinc2,___wmul@multiplicand
 14130  003AC6  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
 14131  003ACA  ECE8  F02D         	call	___wmul	;wreg free
 14132  003ACE  C001  F007         	movff	?___wmul,___awdiv@dividend
 14133  003AD2  C002  F008         	movff	?___wmul+1,___awdiv@dividend+1
 14134  003AD6  0E00               	movlw	0
 14135  003AD8  6E0A               	movwf	(___awdiv@divisor+1)^0,c
 14136  003ADA  0E64               	movlw	100
 14137  003ADC  6E09               	movwf	___awdiv@divisor^0,c
 14138  003ADE  ECC4  F028         	call	___awdiv	;wreg free
 14139  003AE2  C007  F018         	movff	?___awdiv,setMotorPWM@PWMduty
 14140  003AE6  C008  F019         	movff	?___awdiv+1,setMotorPWM@PWMduty+1
 14141  003AEA                     l4049:
 14142                           
 14143                           ;dc_motor.c: 72:  *(m->dutyHighByte) = PWMduty;
 14144  003AEA  EE20 F002          	lfsr	2,2
 14145  003AEE  500F               	movf	setMotorPWM@m^0,w,c
 14146  003AF0  26D9               	addwf	fsr2l,f,c
 14147  003AF2  5010               	movf	(setMotorPWM@m+1)^0,w,c
 14148  003AF4  22DA               	addwfc	fsr2h,f,c
 14149  003AF6  CFDE F011          	movff	postinc2,??_setMotorPWM
 14150  003AFA  CFDD F012          	movff	postdec2,??_setMotorPWM+1
 14151  003AFE  C011  FFD9         	movff	??_setMotorPWM,fsr2l
 14152  003B02  C012  FFDA         	movff	??_setMotorPWM+1,fsr2h
 14153  003B06  C018  FFDF         	movff	setMotorPWM@PWMduty,indf2
 14154  003B0A                     
 14155                           ;dc_motor.c: 74:  if (m->direction){
 14156  003B0A  EE20 F001          	lfsr	2,1
 14157  003B0E  500F               	movf	setMotorPWM@m^0,w,c
 14158  003B10  26D9               	addwf	fsr2l,f,c
 14159  003B12  5010               	movf	(setMotorPWM@m+1)^0,w,c
 14160  003B14  22DA               	addwfc	fsr2h,f,c
 14161  003B16  50DF               	movf	indf2,w,c
 14162  003B18  B4D8               	btfsc	status,2,c
 14163  003B1A  EF91  F01D         	goto	u3831
 14164  003B1E  EF93  F01D         	goto	u3830
 14165  003B22                     u3831:
 14166  003B22  EFC8  F01D         	goto	l4055
 14167  003B26                     u3830:
 14168  003B26                     
 14169                           ;dc_motor.c: 75:   *(m->dir_LAT) = *(m->dir_LAT) | (1<<(m->dir_pin));
 14170  003B26  EE20 F004          	lfsr	2,4
 14171  003B2A  500F               	movf	setMotorPWM@m^0,w,c
 14172  003B2C  26D9               	addwf	fsr2l,f,c
 14173  003B2E  5010               	movf	(setMotorPWM@m+1)^0,w,c
 14174  003B30  22DA               	addwfc	fsr2h,f,c
 14175  003B32  CFDE F011          	movff	postinc2,??_setMotorPWM
 14176  003B36  CFDD F012          	movff	postdec2,??_setMotorPWM+1
 14177  003B3A  C011  FFD9         	movff	??_setMotorPWM,fsr2l
 14178  003B3E  C012  FFDA         	movff	??_setMotorPWM+1,fsr2h
 14179  003B42  EE10 F004          	lfsr	1,4
 14180  003B46  500F               	movf	setMotorPWM@m^0,w,c
 14181  003B48  26E1               	addwf	fsr1l,f,c
 14182  003B4A  5010               	movf	(setMotorPWM@m+1)^0,w,c
 14183  003B4C  22E2               	addwfc	fsr1h,f,c
 14184  003B4E  CFE6 F013          	movff	postinc1,??_setMotorPWM+2
 14185  003B52  CFE5 F014          	movff	postdec1,??_setMotorPWM+3
 14186  003B56  C013  FFE1         	movff	??_setMotorPWM+2,fsr1l
 14187  003B5A  C014  FFE2         	movff	??_setMotorPWM+3,fsr1h
 14188  003B5E  50E7               	movf	indf1,w,c
 14189  003B60  6E15               	movwf	(??_setMotorPWM+4)^0,c
 14190  003B62  EE10 F006          	lfsr	1,6
 14191  003B66  500F               	movf	setMotorPWM@m^0,w,c
 14192  003B68  26E1               	addwf	fsr1l,f,c
 14193  003B6A  5010               	movf	(setMotorPWM@m+1)^0,w,c
 14194  003B6C  22E2               	addwfc	fsr1h,f,c
 14195  003B6E  50E7               	movf	indf1,w,c
 14196  003B70  6E16               	movwf	(??_setMotorPWM+5)^0,c
 14197  003B72  0E01               	movlw	1
 14198  003B74  6E17               	movwf	(??_setMotorPWM+6)^0,c
 14199  003B76  2A16               	incf	(??_setMotorPWM+5)^0,f,c
 14200  003B78  EFC0  F01D         	goto	u3844
 14201  003B7C                     u3845:
 14202  003B7C  90D8               	bcf	status,0,c
 14203  003B7E  3617               	rlcf	(??_setMotorPWM+6)^0,f,c
 14204  003B80                     u3844:
 14205  003B80  2E16               	decfsz	(??_setMotorPWM+5)^0,f,c
 14206  003B82  EFBE  F01D         	goto	u3845
 14207  003B86  5017               	movf	(??_setMotorPWM+6)^0,w,c
 14208  003B88  1015               	iorwf	(??_setMotorPWM+4)^0,w,c
 14209  003B8A  6EDF               	movwf	indf2,c
 14210                           
 14211                           ;dc_motor.c: 76:  } else {
 14212  003B8C  EFFC  F01D         	goto	l280
 14213  003B90                     l4055:
 14214                           
 14215                           ;dc_motor.c: 77:   *(m->dir_LAT) = *(m->dir_LAT) & (~(1<<(m->dir_pin)));
 14216  003B90  EE20 F004          	lfsr	2,4
 14217  003B94  500F               	movf	setMotorPWM@m^0,w,c
 14218  003B96  26D9               	addwf	fsr2l,f,c
 14219  003B98  5010               	movf	(setMotorPWM@m+1)^0,w,c
 14220  003B9A  22DA               	addwfc	fsr2h,f,c
 14221  003B9C  CFDE F011          	movff	postinc2,??_setMotorPWM
 14222  003BA0  CFDD F012          	movff	postdec2,??_setMotorPWM+1
 14223  003BA4  C011  FFD9         	movff	??_setMotorPWM,fsr2l
 14224  003BA8  C012  FFDA         	movff	??_setMotorPWM+1,fsr2h
 14225  003BAC  EE10 F004          	lfsr	1,4
 14226  003BB0  500F               	movf	setMotorPWM@m^0,w,c
 14227  003BB2  26E1               	addwf	fsr1l,f,c
 14228  003BB4  5010               	movf	(setMotorPWM@m+1)^0,w,c
 14229  003BB6  22E2               	addwfc	fsr1h,f,c
 14230  003BB8  CFE6 F013          	movff	postinc1,??_setMotorPWM+2
 14231  003BBC  CFE5 F014          	movff	postdec1,??_setMotorPWM+3
 14232  003BC0  C013  FFE1         	movff	??_setMotorPWM+2,fsr1l
 14233  003BC4  C014  FFE2         	movff	??_setMotorPWM+3,fsr1h
 14234  003BC8  50E7               	movf	indf1,w,c
 14235  003BCA  6E15               	movwf	(??_setMotorPWM+4)^0,c
 14236  003BCC  EE10 F006          	lfsr	1,6
 14237  003BD0  500F               	movf	setMotorPWM@m^0,w,c
 14238  003BD2  26E1               	addwf	fsr1l,f,c
 14239  003BD4  5010               	movf	(setMotorPWM@m+1)^0,w,c
 14240  003BD6  22E2               	addwfc	fsr1h,f,c
 14241  003BD8  50E7               	movf	indf1,w,c
 14242  003BDA  6E16               	movwf	(??_setMotorPWM+5)^0,c
 14243  003BDC  0E01               	movlw	1
 14244  003BDE  6E17               	movwf	(??_setMotorPWM+6)^0,c
 14245  003BE0  2A16               	incf	(??_setMotorPWM+5)^0,f,c
 14246  003BE2  EFF5  F01D         	goto	u3854
 14247  003BE6                     u3855:
 14248  003BE6  90D8               	bcf	status,0,c
 14249  003BE8  3617               	rlcf	(??_setMotorPWM+6)^0,f,c
 14250  003BEA                     u3854:
 14251  003BEA  2E16               	decfsz	(??_setMotorPWM+5)^0,f,c
 14252  003BEC  EFF3  F01D         	goto	u3855
 14253  003BF0  5017               	movf	(??_setMotorPWM+6)^0,w,c
 14254  003BF2  0AFF               	xorlw	255
 14255  003BF4  1415               	andwf	(??_setMotorPWM+4)^0,w,c
 14256  003BF6  6EDF               	movwf	indf2,c
 14257  003BF8                     l280:
 14258  003BF8  0012               	return		;funcret
 14259  003BFA                     __end_of_setMotorPWM:
 14260                           	callstack 0
 14261                           
 14262 ;; *************** function ___wmul *****************
 14263 ;; Defined at:
 14264 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\Umul16.c"
 14265 ;; Parameters:    Size  Location     Type
 14266 ;;  multiplier      2    0[COMRAM] unsigned int 
 14267 ;;  multiplicand    2    2[COMRAM] unsigned int 
 14268 ;; Auto vars:     Size  Location     Type
 14269 ;;  product         2    4[COMRAM] unsigned int 
 14270 ;; Return value:  Size  Location     Type
 14271 ;;                  2    0[COMRAM] unsigned int 
 14272 ;; Registers used:
 14273 ;;		wreg, status,2, status,0, prodl, prodh
 14274 ;; Tracked objects:
 14275 ;;		On entry : 0/0
 14276 ;;		On exit  : 0/0
 14277 ;;		Unchanged: 0/0
 14278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14279 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14280 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14281 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14282 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14283 ;;Total ram usage:        6 bytes
 14284 ;; Hardware stack levels used: 1
 14285 ;; Hardware stack levels required when called: 1
 14286 ;; This function calls:
 14287 ;;		Nothing
 14288 ;; This function is called by:
 14289 ;;		_setMotorPWM
 14290 ;; This function uses a non-reentrant model
 14291 ;;
 14292                           
 14293                           	psect	text75
 14294  005BD0                     __ptext75:
 14295                           	callstack 0
 14296  005BD0                     ___wmul:
 14297                           	callstack 26
 14298  005BD0  5001               	movf	___wmul@multiplier^0,w,c
 14299  005BD2  0203               	mulwf	___wmul@multiplicand^0,c
 14300  005BD4  CFF3 F005          	movff	prodl,___wmul@product
 14301  005BD8  CFF4 F006          	movff	prodh,___wmul@product+1
 14302  005BDC  5001               	movf	___wmul@multiplier^0,w,c
 14303  005BDE  0204               	mulwf	(___wmul@multiplicand+1)^0,c
 14304  005BE0  50F3               	movf	243,w,c
 14305  005BE2  2606               	addwf	(___wmul@product+1)^0,f,c
 14306  005BE4  5002               	movf	(___wmul@multiplier+1)^0,w,c
 14307  005BE6  0203               	mulwf	___wmul@multiplicand^0,c
 14308  005BE8  50F3               	movf	243,w,c
 14309  005BEA  2606               	addwf	(___wmul@product+1)^0,f,c
 14310  005BEC  C005  F001         	movff	___wmul@product,?___wmul
 14311  005BF0  C006  F002         	movff	___wmul@product+1,?___wmul+1
 14312  005BF4  0012               	return		;funcret
 14313  005BF6                     __end_of___wmul:
 14314                           	callstack 0
 14315                           
 14316 ;; *************** function ___awdiv *****************
 14317 ;; Defined at:
 14318 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\awdiv.c"
 14319 ;; Parameters:    Size  Location     Type
 14320 ;;  dividend        2    6[COMRAM] int 
 14321 ;;  divisor         2    8[COMRAM] int 
 14322 ;; Auto vars:     Size  Location     Type
 14323 ;;  quotient        2   12[COMRAM] int 
 14324 ;;  sign            1   11[COMRAM] unsigned char 
 14325 ;;  counter         1   10[COMRAM] unsigned char 
 14326 ;; Return value:  Size  Location     Type
 14327 ;;                  2    6[COMRAM] int 
 14328 ;; Registers used:
 14329 ;;		wreg, status,2, status,0
 14330 ;; Tracked objects:
 14331 ;;		On entry : 0/0
 14332 ;;		On exit  : 0/0
 14333 ;;		Unchanged: 0/0
 14334 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14335 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14336 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14337 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14338 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14339 ;;Total ram usage:        8 bytes
 14340 ;; Hardware stack levels used: 1
 14341 ;; Hardware stack levels required when called: 1
 14342 ;; This function calls:
 14343 ;;		Nothing
 14344 ;; This function is called by:
 14345 ;;		_setMotorPWM
 14346 ;; This function uses a non-reentrant model
 14347 ;;
 14348                           
 14349                           	psect	text76
 14350  005188                     __ptext76:
 14351                           	callstack 0
 14352  005188                     ___awdiv:
 14353                           	callstack 26
 14354  005188  0E00               	movlw	0
 14355  00518A  6E0C               	movwf	___awdiv@sign^0,c
 14356  00518C  BE0A               	btfsc	(___awdiv@divisor+1)^0,7,c
 14357  00518E  EFCD  F028         	goto	u3700
 14358  005192  EFCB  F028         	goto	u3701
 14359  005196                     u3701:
 14360  005196  EFD3  F028         	goto	l3935
 14361  00519A                     u3700:
 14362  00519A  6C09               	negf	___awdiv@divisor^0,c
 14363  00519C  1E0A               	comf	(___awdiv@divisor+1)^0,f,c
 14364  00519E  B0D8               	btfsc	status,0,c
 14365  0051A0  2A0A               	incf	(___awdiv@divisor+1)^0,f,c
 14366  0051A2  0E01               	movlw	1
 14367  0051A4  6E0C               	movwf	___awdiv@sign^0,c
 14368  0051A6                     l3935:
 14369  0051A6  BE08               	btfsc	(___awdiv@dividend+1)^0,7,c
 14370  0051A8  EFDA  F028         	goto	u3710
 14371  0051AC  EFD8  F028         	goto	u3711
 14372  0051B0                     u3711:
 14373  0051B0  EFE0  F028         	goto	l3941
 14374  0051B4                     u3710:
 14375  0051B4  6C07               	negf	___awdiv@dividend^0,c
 14376  0051B6  1E08               	comf	(___awdiv@dividend+1)^0,f,c
 14377  0051B8  B0D8               	btfsc	status,0,c
 14378  0051BA  2A08               	incf	(___awdiv@dividend+1)^0,f,c
 14379  0051BC  0E01               	movlw	1
 14380  0051BE  1A0C               	xorwf	___awdiv@sign^0,f,c
 14381  0051C0                     l3941:
 14382  0051C0  0E00               	movlw	0
 14383  0051C2  6E0E               	movwf	(___awdiv@quotient+1)^0,c
 14384  0051C4  0E00               	movlw	0
 14385  0051C6  6E0D               	movwf	___awdiv@quotient^0,c
 14386  0051C8  5009               	movf	___awdiv@divisor^0,w,c
 14387  0051CA  100A               	iorwf	(___awdiv@divisor+1)^0,w,c
 14388  0051CC  B4D8               	btfsc	status,2,c
 14389  0051CE  EFEB  F028         	goto	u3721
 14390  0051D2  EFED  F028         	goto	u3720
 14391  0051D6                     u3721:
 14392  0051D6  EF15  F029         	goto	l3963
 14393  0051DA                     u3720:
 14394  0051DA  0E01               	movlw	1
 14395  0051DC  6E0B               	movwf	___awdiv@counter^0,c
 14396  0051DE  EFF5  F028         	goto	l3949
 14397  0051E2                     l3947:
 14398  0051E2  90D8               	bcf	status,0,c
 14399  0051E4  3609               	rlcf	___awdiv@divisor^0,f,c
 14400  0051E6  360A               	rlcf	(___awdiv@divisor+1)^0,f,c
 14401  0051E8  2A0B               	incf	___awdiv@counter^0,f,c
 14402  0051EA                     l3949:
 14403  0051EA  AE0A               	btfss	(___awdiv@divisor+1)^0,7,c
 14404  0051EC  EFFA  F028         	goto	u3731
 14405  0051F0  EFFC  F028         	goto	u3730
 14406  0051F4                     u3731:
 14407  0051F4  EFF1  F028         	goto	l3947
 14408  0051F8                     u3730:
 14409  0051F8                     l3951:
 14410  0051F8  90D8               	bcf	status,0,c
 14411  0051FA  360D               	rlcf	___awdiv@quotient^0,f,c
 14412  0051FC  360E               	rlcf	(___awdiv@quotient+1)^0,f,c
 14413  0051FE  5009               	movf	___awdiv@divisor^0,w,c
 14414  005200  5C07               	subwf	___awdiv@dividend^0,w,c
 14415  005202  500A               	movf	(___awdiv@divisor+1)^0,w,c
 14416  005204  5808               	subwfb	(___awdiv@dividend+1)^0,w,c
 14417  005206  A0D8               	btfss	status,0,c
 14418  005208  EF08  F029         	goto	u3741
 14419  00520C  EF0A  F029         	goto	u3740
 14420  005210                     u3741:
 14421  005210  EF0F  F029         	goto	l3959
 14422  005214                     u3740:
 14423  005214  5009               	movf	___awdiv@divisor^0,w,c
 14424  005216  5E07               	subwf	___awdiv@dividend^0,f,c
 14425  005218  500A               	movf	(___awdiv@divisor+1)^0,w,c
 14426  00521A  5A08               	subwfb	(___awdiv@dividend+1)^0,f,c
 14427  00521C  800D               	bsf	___awdiv@quotient^0,0,c
 14428  00521E                     l3959:
 14429  00521E  90D8               	bcf	status,0,c
 14430  005220  320A               	rrcf	(___awdiv@divisor+1)^0,f,c
 14431  005222  3209               	rrcf	___awdiv@divisor^0,f,c
 14432  005224  2E0B               	decfsz	___awdiv@counter^0,f,c
 14433  005226  EFFC  F028         	goto	l3951
 14434  00522A                     l3963:
 14435  00522A  500C               	movf	___awdiv@sign^0,w,c
 14436  00522C  B4D8               	btfsc	status,2,c
 14437  00522E  EF1B  F029         	goto	u3751
 14438  005232  EF1D  F029         	goto	u3750
 14439  005236                     u3751:
 14440  005236  EF21  F029         	goto	l3967
 14441  00523A                     u3750:
 14442  00523A  6C0D               	negf	___awdiv@quotient^0,c
 14443  00523C  1E0E               	comf	(___awdiv@quotient+1)^0,f,c
 14444  00523E  B0D8               	btfsc	status,0,c
 14445  005240  2A0E               	incf	(___awdiv@quotient+1)^0,f,c
 14446  005242                     l3967:
 14447  005242  C00D  F007         	movff	___awdiv@quotient,?___awdiv
 14448  005246  C00E  F008         	movff	___awdiv@quotient+1,?___awdiv+1
 14449  00524A  0012               	return		;funcret
 14450  00524C                     __end_of___awdiv:
 14451                           	callstack 0
 14452                           
 14453 ;; *************** function _Timer0_init *****************
 14454 ;; Defined at:
 14455 ;;		line 7 in file "timers.c"
 14456 ;; Parameters:    Size  Location     Type
 14457 ;;		None
 14458 ;; Auto vars:     Size  Location     Type
 14459 ;;		None
 14460 ;; Return value:  Size  Location     Type
 14461 ;;                  1    wreg      void 
 14462 ;; Registers used:
 14463 ;;		wreg, status,2
 14464 ;; Tracked objects:
 14465 ;;		On entry : 0/0
 14466 ;;		On exit  : 0/0
 14467 ;;		Unchanged: 0/0
 14468 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14469 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14470 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14471 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14472 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14473 ;;Total ram usage:        0 bytes
 14474 ;; Hardware stack levels used: 1
 14475 ;; Hardware stack levels required when called: 1
 14476 ;; This function calls:
 14477 ;;		Nothing
 14478 ;; This function is called by:
 14479 ;;		_main
 14480 ;; This function uses a non-reentrant model
 14481 ;;
 14482                           
 14483                           	psect	text77
 14484  005CF4                     __ptext77:
 14485                           	callstack 0
 14486  005CF4                     _Timer0_init:
 14487                           	callstack 29
 14488  005CF4                     
 14489                           ;timers.c: 9:     T0CON1bits.T0CS=0b010;
 14490  005CF4  50D6               	movf	214,w,c	;volatile
 14491  005CF6  0B1F               	andlw	-225
 14492  005CF8  0940               	iorlw	64
 14493  005CFA  6ED6               	movwf	214,c	;volatile
 14494  005CFC                     
 14495                           ;timers.c: 10:     T0CON1bits.T0ASYNC=1;
 14496  005CFC  88D6               	bsf	214,4,c	;volatile
 14497                           
 14498                           ;timers.c: 11:     T0CON1bits.T0CKPS=0b0101;
 14499  005CFE  50D6               	movf	214,w,c	;volatile
 14500  005D00  0BF0               	andlw	-16
 14501  005D02  0905               	iorlw	5
 14502  005D04  6ED6               	movwf	214,c	;volatile
 14503  005D06                     
 14504                           ;timers.c: 12:     T0CON0bits.T016BIT=1;
 14505  005D06  88D5               	bsf	213,4,c	;volatile
 14506                           
 14507                           ;timers.c: 16:     TMR0H=0b00111100;
 14508  005D08  0E3C               	movlw	60
 14509  005D0A  6ED4               	movwf	212,c	;volatile
 14510                           
 14511                           ;timers.c: 17:     TMR0L=0b10101111;
 14512  005D0C  0EAF               	movlw	175
 14513  005D0E  6ED3               	movwf	211,c	;volatile
 14514  005D10  0012               	return		;funcret
 14515  005D12                     __end_of_Timer0_init:
 14516                           	callstack 0
 14517                           
 14518 ;; *************** function _Interrupts_init *****************
 14519 ;; Defined at:
 14520 ;;		line 9 in file "interrupts.c"
 14521 ;; Parameters:    Size  Location     Type
 14522 ;;		None
 14523 ;; Auto vars:     Size  Location     Type
 14524 ;;		None
 14525 ;; Return value:  Size  Location     Type
 14526 ;;                  1    wreg      void 
 14527 ;; Registers used:
 14528 ;;		None
 14529 ;; Tracked objects:
 14530 ;;		On entry : 0/0
 14531 ;;		On exit  : 0/0
 14532 ;;		Unchanged: 0/0
 14533 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14534 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14535 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14536 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14537 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14538 ;;Total ram usage:        0 bytes
 14539 ;; Hardware stack levels used: 1
 14540 ;; Hardware stack levels required when called: 1
 14541 ;; This function calls:
 14542 ;;		Nothing
 14543 ;; This function is called by:
 14544 ;;		_main
 14545 ;; This function uses a non-reentrant model
 14546 ;;
 14547                           
 14548                           	psect	text78
 14549  005D60                     __ptext78:
 14550                           	callstack 0
 14551  005D60                     _Interrupts_init:
 14552                           	callstack 29
 14553  005D60  8EF2               	bsf	242,7,c	;volatile
 14554                           
 14555                           ;interrupts.c: 11:     INTCONbits.IPEN=1;
 14556  005D62  8AF2               	bsf	242,5,c	;volatile
 14557                           
 14558                           ;interrupts.c: 12:     INTCONbits.GIEL=1;
 14559  005D64  8CF2               	bsf	242,6,c	;volatile
 14560                           
 14561                           ;interrupts.c: 13:  PIE0bits.TMR0IE = 1;
 14562  005D66  010E               	movlb	14	; () banked
 14563  005D68  8B29               	bsf	41,5,b	;volatile
 14564  005D6A                     
 14565                           ; BSR set to: 14
 14566  005D6A  0012               	return		;funcret
 14567  005D6C                     __end_of_Interrupts_init:
 14568                           	callstack 0
 14569                           
 14570 ;; *************** function _HighISR *****************
 14571 ;; Defined at:
 14572 ;;		line 21 in file "interrupts.c"
 14573 ;; Parameters:    Size  Location     Type
 14574 ;;		None
 14575 ;; Auto vars:     Size  Location     Type
 14576 ;;		None
 14577 ;; Return value:  Size  Location     Type
 14578 ;;                  1    wreg      void 
 14579 ;; Registers used:
 14580 ;;		wreg, status,2, status,0
 14581 ;; Tracked objects:
 14582 ;;		On entry : 0/0
 14583 ;;		On exit  : 0/0
 14584 ;;		Unchanged: 0/0
 14585 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14586 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14587 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14588 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14589 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14590 ;;Total ram usage:        0 bytes
 14591 ;; Hardware stack levels used: 1
 14592 ;; This function calls:
 14593 ;;		Nothing
 14594 ;; This function is called by:
 14595 ;;		Interrupt level 2
 14596 ;; This function uses a non-reentrant model
 14597 ;;
 14598                           
 14599                           	psect	intcode
 14600  000008                     __pintcode:
 14601                           	callstack 0
 14602  000008                     _HighISR:
 14603                           	callstack 19
 14604                           
 14605                           ; BSR set to: 14
 14606                           ;incstack = 0
 14607  000008  825F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 14608  00000A                     
 14609                           ;interrupts.c: 23:     if(PIR0bits.TMR0IF){
 14610  00000A  010E               	movlb	14	; () banked
 14611  00000C  AB33               	btfss	51,5,b	;volatile
 14612  00000E  EF0B  F000         	goto	i2u577_41
 14613  000012  EF0D  F000         	goto	i2u577_40
 14614  000016                     i2u577_41:
 14615  000016  EF16  F000         	goto	i2l620
 14616  00001A                     i2u577_40:
 14617  00001A                     
 14618                           ; BSR set to: 14
 14619                           ;interrupts.c: 24:         TMR0H=0b00111100;
 14620  00001A  0E3C               	movlw	60
 14621  00001C  6ED4               	movwf	212,c	;volatile
 14622                           
 14623                           ;interrupts.c: 25:         TMR0L=0b10101111;
 14624  00001E  0EAF               	movlw	175
 14625  000020  6ED3               	movwf	211,c	;volatile
 14626  000022                     
 14627                           ; BSR set to: 14
 14628                           ;interrupts.c: 26:         centisecond ++;
 14629  000022  0101               	movlb	1	; () banked
 14630  000024  4B46               	infsnz	_centisecond& (0+255),f,b
 14631  000026  2B47               	incf	(_centisecond+1)& (0+255),f,b
 14632  000028                     
 14633                           ; BSR set to: 1
 14634                           ;interrupts.c: 27:         PIR0bits.TMR0IF = 0;
 14635  000028  010E               	movlb	14	; () banked
 14636  00002A  9B33               	bcf	51,5,b	;volatile
 14637  00002C                     i2l620:
 14638                           
 14639                           ; BSR set to: 14
 14640  00002C  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 14641  00002E  0011               	retfie		f
 14642  000030                     __end_of_HighISR:
 14643                           	callstack 0
 14644                           
 14645                           	psect	rparam
 14646  0000                     
 14647                           	psect	temp
 14648  00005F                     btemp:
 14649                           	callstack 0
 14650  00005F                     	ds	1
 14651  0000                     int$flags	set	btemp
 14652  0000                     wtemp8	set	btemp+1
 14653  0000                     ttemp5	set	btemp+1
 14654  0000                     ttemp6	set	btemp+4
 14655  0000                     ttemp7	set	btemp+8
 14656                           
 14657                           	psect	idloc
 14658                           
 14659                           ;Config register IDLOC0 @ 0x200000
 14660                           ;	unspecified, using default values
 14661  200000                     	org	2097152
 14662  200000  0FFF               	dw	4095
 14663                           
 14664                           ;Config register IDLOC1 @ 0x200002
 14665                           ;	unspecified, using default values
 14666  200002                     	org	2097154
 14667  200002  0FFF               	dw	4095
 14668                           
 14669                           ;Config register IDLOC2 @ 0x200004
 14670                           ;	unspecified, using default values
 14671  200004                     	org	2097156
 14672  200004  0FFF               	dw	4095
 14673                           
 14674                           ;Config register IDLOC3 @ 0x200006
 14675                           ;	unspecified, using default values
 14676  200006                     	org	2097158
 14677  200006  0FFF               	dw	4095
 14678                           
 14679                           ;Config register IDLOC4 @ 0x200008
 14680                           ;	unspecified, using default values
 14681  200008                     	org	2097160
 14682  200008  0FFF               	dw	4095
 14683                           
 14684                           ;Config register IDLOC5 @ 0x20000A
 14685                           ;	unspecified, using default values
 14686  20000A                     	org	2097162
 14687  20000A  0FFF               	dw	4095
 14688                           
 14689                           ;Config register IDLOC6 @ 0x20000C
 14690                           ;	unspecified, using default values
 14691  20000C                     	org	2097164
 14692  20000C  0FFF               	dw	4095
 14693                           
 14694                           ;Config register IDLOC7 @ 0x20000E
 14695                           ;	unspecified, using default values
 14696  20000E                     	org	2097166
 14697  20000E  0FFF               	dw	4095
 14698                           
 14699                           	psect	config
 14700                           
 14701                           ;Config register CONFIG1L @ 0x300000
 14702                           ;	External Oscillator mode Selection bits
 14703                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
 14704                           ;	Power-up default value for COSC bits
 14705                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
 14706  300000                     	org	3145728
 14707  300000  AA                 	db	170
 14708                           
 14709                           ;Config register CONFIG1H @ 0x300001
 14710                           ;	unspecified, using default values
 14711                           ;	Clock Out Enable bit
 14712                           ;	CLKOUTEN = 0x1, unprogrammed default
 14713                           ;	Clock Switch Enable bit
 14714                           ;	CSWEN = 0x1, unprogrammed default
 14715                           ;	Fail-Safe Clock Monitor Enable bit
 14716                           ;	FCMEN = 0x1, unprogrammed default
 14717  300001                     	org	3145729
 14718  300001  FF                 	db	255
 14719                           
 14720                           ;Config register CONFIG2L @ 0x300002
 14721                           ;	unspecified, using default values
 14722                           ;	Master Clear Enable bit
 14723                           ;	MCLRE = 0x1, unprogrammed default
 14724                           ;	Power-up Timer Enable bit
 14725                           ;	PWRTE = 0x1, unprogrammed default
 14726                           ;	Low-power BOR enable bit
 14727                           ;	LPBOREN = 0x1, unprogrammed default
 14728                           ;	Brown-out Reset Enable bits
 14729                           ;	BOREN = 0x3, unprogrammed default
 14730  300002                     	org	3145730
 14731  300002  FF                 	db	255
 14732                           
 14733                           ;Config register CONFIG2H @ 0x300003
 14734                           ;	unspecified, using default values
 14735                           ;	Brown Out Reset Voltage selection bits
 14736                           ;	BORV = 0x3, unprogrammed default
 14737                           ;	ZCD Disable bit
 14738                           ;	ZCD = 0x1, unprogrammed default
 14739                           ;	PPSLOCK bit One-Way Set Enable bit
 14740                           ;	PPS1WAY = 0x1, unprogrammed default
 14741                           ;	Stack Full/Underflow Reset Enable bit
 14742                           ;	STVREN = 0x1, unprogrammed default
 14743                           ;	Debugger Enable bit
 14744                           ;	DEBUG = 0x1, unprogrammed default
 14745                           ;	Extended Instruction Set Enable bit
 14746                           ;	XINST = 0x1, unprogrammed default
 14747  300003                     	org	3145731
 14748  300003  FF                 	db	255
 14749                           
 14750                           ;Config register CONFIG3L @ 0x300004
 14751                           ;	WDT Period Select bits
 14752                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 14753                           ;	WDT operating mode
 14754                           ;	WDTE = OFF, WDT Disabled
 14755  300004                     	org	3145732
 14756  300004  9F                 	db	159
 14757                           
 14758                           ;Config register CONFIG3H @ 0x300005
 14759                           ;	unspecified, using default values
 14760                           ;	WDT Window Select bits
 14761                           ;	WDTCWS = 0x7, unprogrammed default
 14762                           ;	WDT input clock selector
 14763                           ;	WDTCCS = 0x7, unprogrammed default
 14764  300005                     	org	3145733
 14765  300005  FF                 	db	255
 14766                           
 14767                           ;Config register CONFIG4L @ 0x300006
 14768                           ;	unspecified, using default values
 14769                           ;	Write Protection Block 0
 14770                           ;	WRT0 = 0x1, unprogrammed default
 14771                           ;	Write Protection Block 1
 14772                           ;	WRT1 = 0x1, unprogrammed default
 14773                           ;	Write Protection Block 2
 14774                           ;	WRT2 = 0x1, unprogrammed default
 14775                           ;	Write Protection Block 3
 14776                           ;	WRT3 = 0x1, unprogrammed default
 14777                           ;	Write Protection Block 3
 14778                           ;	WRT4 = 0x1, unprogrammed default
 14779                           ;	Write Protection Block 3
 14780                           ;	WRT5 = 0x1, unprogrammed default
 14781                           ;	Write Protection Block 3
 14782                           ;	WRT6 = 0x1, unprogrammed default
 14783                           ;	Write Protection Block 3
 14784                           ;	WRT7 = 0x1, unprogrammed default
 14785  300006                     	org	3145734
 14786  300006  FF                 	db	255
 14787                           
 14788                           ;Config register CONFIG4H @ 0x300007
 14789                           ;	unspecified, using default values
 14790                           ;	Configuration Register Write Protection bit
 14791                           ;	WRTC = 0x1, unprogrammed default
 14792                           ;	Boot Block Write Protection bit
 14793                           ;	WRTB = 0x1, unprogrammed default
 14794                           ;	Data EEPROM Write Protection bit
 14795                           ;	WRTD = 0x1, unprogrammed default
 14796                           ;	Scanner Enable bit
 14797                           ;	SCANE = 0x1, unprogrammed default
 14798                           ;	Low Voltage Programming Enable bit
 14799                           ;	LVP = 0x1, unprogrammed default
 14800  300007                     	org	3145735
 14801  300007  FF                 	db	255
 14802                           
 14803                           ;Config register CONFIG5L @ 0x300008
 14804                           ;	unspecified, using default values
 14805                           ;	UserNVM Program Memory Code Protection bit
 14806                           ;	CP = 0x1, unprogrammed default
 14807                           ;	DataNVM Memory Code Protection bit
 14808                           ;	CPD = 0x1, unprogrammed default
 14809  300008                     	org	3145736
 14810  300008  FF                 	db	255
 14811                           
 14812                           ;Config register CONFIG5H @ 0x300009
 14813                           ;	unspecified, using default values
 14814  300009                     	org	3145737
 14815  300009  FF                 	db	255
 14816                           
 14817                           ;Config register CONFIG6L @ 0x30000A
 14818                           ;	unspecified, using default values
 14819                           ;	Table Read Protection Block 0
 14820                           ;	EBTR0 = 0x1, unprogrammed default
 14821                           ;	Table Read Protection Block 1
 14822                           ;	EBTR1 = 0x1, unprogrammed default
 14823                           ;	Table Read Protection Block 2
 14824                           ;	EBTR2 = 0x1, unprogrammed default
 14825                           ;	Table Read Protection Block 3
 14826                           ;	EBTR3 = 0x1, unprogrammed default
 14827                           ;	Table Read Protection Block 4
 14828                           ;	EBTR4 = 0x1, unprogrammed default
 14829                           ;	Table Read Protection Block 5
 14830                           ;	EBTR5 = 0x1, unprogrammed default
 14831                           ;	Table Read Protection Block 6
 14832                           ;	EBTR6 = 0x1, unprogrammed default
 14833                           ;	Table Read Protection Block 7
 14834                           ;	EBTR7 = 0x1, unprogrammed default
 14835  30000A                     	org	3145738
 14836  30000A  FF                 	db	255
 14837                           
 14838                           ;Config register CONFIG6H @ 0x30000B
 14839                           ;	unspecified, using default values
 14840                           ;	Boot Block Table Read Protection bit
 14841                           ;	EBTRB = 0x1, unprogrammed default
 14842  30000B                     	org	3145739
 14843  30000B  FF                 	db	255
 14844                           tosu	equ	0xFFF
 14845                           tosh	equ	0xFFE
 14846                           tosl	equ	0xFFD
 14847                           stkptr	equ	0xFFC
 14848                           pclatu	equ	0xFFB
 14849                           pclath	equ	0xFFA
 14850                           pcl	equ	0xFF9
 14851                           tblptru	equ	0xFF8
 14852                           tblptrh	equ	0xFF7
 14853                           tblptrl	equ	0xFF6
 14854                           tablat	equ	0xFF5
 14855                           prodh	equ	0xFF4
 14856                           prodl	equ	0xFF3
 14857                           indf0	equ	0xFEF
 14858                           postinc0	equ	0xFEE
 14859                           postdec0	equ	0xFED
 14860                           preinc0	equ	0xFEC
 14861                           plusw0	equ	0xFEB
 14862                           fsr0h	equ	0xFEA
 14863                           fsr0l	equ	0xFE9
 14864                           wreg	equ	0xFE8
 14865                           indf1	equ	0xFE7
 14866                           postinc1	equ	0xFE6
 14867                           postdec1	equ	0xFE5
 14868                           preinc1	equ	0xFE4
 14869                           plusw1	equ	0xFE3
 14870                           fsr1h	equ	0xFE2
 14871                           fsr1l	equ	0xFE1
 14872                           bsr	equ	0xFE0
 14873                           indf2	equ	0xFDF
 14874                           postinc2	equ	0xFDE
 14875                           postdec2	equ	0xFDD
 14876                           preinc2	equ	0xFDC
 14877                           plusw2	equ	0xFDB
 14878                           fsr2h	equ	0xFDA
 14879                           fsr2l	equ	0xFD9
 14880                           status	equ	0xFD8

Data Sizes:
    Strings     14
    Constant    4
    Data        3
    BSS         110
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     94      94
    BANK0           160    152     159
    BANK1           256     66     172
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    distance_measure@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), 

    distance_measure@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK1[9]), 

    amb_light_measure@amb	PTR struct color_rgb size(2) Largest target is 8
		 -> main@rgb(BANK1[8]), main@amb(BANK1[8]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_2(CODE[6]), STR_1(CODE[14]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 14
		 -> STR_2(CODE[6]), STR_1(CODE[14]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_2(CODE[6]), STR_1(CODE[14]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 100
		 -> color_predict@buf(BANK0[100]), color_display@buf(BANK0[100]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S2834$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S2834$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    calibration_motor@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), 

    calibration_motor@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK1[9]), 

    test_function@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), 

    test_function@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK1[9]), 

    test_function@m	PTR struct color_rgb size(2) Largest target is 8
		 -> main@rgb(BANK1[8]), 

    test_function@w	PTR struct white_card size(2) Largest target is 28
		 -> main@white(BANK1[28]), 

    goback@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), 

    goback@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK1[9]), 

    test_action@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), 

    test_action@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK1[9]), 

    action@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), 

    action@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK1[9]), 

    short_burst_back@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), 

    short_burst_back@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK1[9]), 

    motorR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    motorR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    motorL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    motorL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    sendStringSerial4@string	PTR unsigned char  size(2) Largest target is 100
		 -> color_predict@buf(BANK0[100]), color_display@buf(BANK0[100]), 

    reverse_square@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), 

    reverse_square@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK1[9]), 

    short_reverse@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), 

    short_reverse@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK1[9]), 

    fullSpeedBack@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    fullSpeedBack@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    fullSpeedBack@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), 

    fullSpeedBack@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    fullSpeedBack@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    fullSpeedBack@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK1[9]), 

    fullSpeedAhead_test@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), 

    fullSpeedAhead_test@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK1[9]), 

    fullSpeedAhead@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    fullSpeedAhead@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    fullSpeedAhead@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), 

    fullSpeedAhead@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    fullSpeedAhead@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    fullSpeedAhead@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK1[9]), 

    turnRight@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turnRight@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    turnRight@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), 

    turnRight@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turnRight@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    turnRight@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK1[9]), 

    turnLeft@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turnLeft@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    turnLeft@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), 

    turnLeft@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turnLeft@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    turnLeft@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK1[9]), 

    stop@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    stop@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    stop@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), 

    stop@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    stop@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    stop@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK1[9]), 

    setMotorPWM@m.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    setMotorPWM@m.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    setMotorPWM@m	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), main@motorL(BANK1[9]), 

    initDCmotors_parameter@motorR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    initDCmotors_parameter@motorR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    initDCmotors_parameter@motorR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), 

    initDCmotors_parameter@motorL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    initDCmotors_parameter@motorL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    initDCmotors_parameter@motorL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK1[9]), 

    motorR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    motorR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    S376DC_motor$dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    motorL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    S376DC_motor$dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    motorL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    verify_color@w	PTR struct white_card size(2) Largest target is 28
		 -> main@white(BANK1[28]), 

    verify_color@m	PTR struct color_rgb size(2) Largest target is 8
		 -> main@rgb(BANK1[8]), 

    detect_color@w	PTR struct white_card size(2) Largest target is 28
		 -> main@white(BANK1[28]), 

    detect_color@m	PTR struct color_rgb size(2) Largest target is 8
		 -> main@rgb(BANK1[8]), 

    calibrate_white@w	PTR struct white_card size(2) Largest target is 28
		 -> main@white(BANK1[28]), 

    color_display@m	PTR struct color_rgb size(2) Largest target is 8
		 -> main@rgb(BANK1[8]), 

    color_data_collection@m	PTR struct color_rgb size(2) Largest target is 8
		 -> main@rgb(BANK1[8]), 

    read_color@m	PTR struct color_rgb size(2) Largest target is 8
		 -> main@rgb(BANK1[8]), 


Critical Paths under _main in COMRAM

    _color_data_collection->_color_display
    _read_color->_color_read_Blue
    _read_color->_color_read_Clear
    _read_color->_color_read_Green
    _read_color->_color_read_Red
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _sendStringSerial4->_sendCharSerial4
    _calibrate_white->_color_read_Blue
    _calibrate_white->_color_read_Clear
    _calibrate_white->_color_read_Green
    _calibrate_white->_color_read_Red
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _lroundf->___fltol
    _roundf->___flmul
    ___flsub->___fladd
    ___flmul->___fldiv
    ___fltol->_roundf
    _color_read_Clear->_I2C_2_Master_Read
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    ___fldiv->___xxtofl
    _short_burst_back->_stop
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle
    _calibration_motor->_test_action
    _test_action->_turnLeft
    _test_action->_turnRight
    _fullSpeedAhead_test->_stop
    _action->_goback
    _short_reverse->_stop
    _goback->_turnLeft
    _goback->_turnRight
    _turnRight->_stop
    _turnLeft->_stop
    _reverse_square->_stop
    _stop->_setMotorPWM
    _fullSpeedBack->_setMotorPWM
    _fullSpeedAhead->_setMotorPWM
    _setMotorPWM->___awdiv
    ___awdiv->___wmul

Critical Paths under _HighISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_test_function
    _verify_color->_detect_color
    _test_function->_color_data_collection
    _distance_measure->_lroundf
    _detect_color->_compare
    _compare->_lroundf
    _color_data_collection->_color_predict
    _color_predict->_sprintf
    _color_display->_sprintf
    _amb_light_measure->_lroundf
    _lroundf->___fltol

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                68    68      0  307420
                                            150 BANK0      2     2      0
                                              0 BANK1     66    66      0
                  _I2C_2_Master_Init
                    _Interrupts_init
                            _LED_OFF
                        _Timer0_init
                             _action
                  _amb_light_measure
                    _buggylight_init
                    _calibrate_white
                  _calibration_motor
                   _color_click_init
                       _detect_color
                   _distance_measure
                     _fullSpeedAhead
                    _initDCmotorsPWM
             _initDCmotors_parameter
                         _initUSART4
                           _pin_init
                         _setup_init
                   _short_burst_back
                               _stop
                      _test_function
                       _verify_color
 ---------------------------------------------------------------------------------
 (1) _verify_color                                        11     7      4   26931
                                             50 BANK0      9     5      4
                       _detect_color
 ---------------------------------------------------------------------------------
 (1) _test_function                                       16     8      8  104869
                                            134 BANK0     16     8      8
                              _LED_C
                  _amb_light_measure
                    _calibrate_white
              _color_data_collection
                      _color_display
                      _color_predict
                       _detect_color
                   _distance_measure
                     _fullSpeedAhead
                         _read_color
                               _stop
 ---------------------------------------------------------------------------------
 (2) _distance_measure                                    19    13      6   19139
                                             10 BANK0     19    13      6
                              _LED_C
                            ___flmul
                           ___xxtofl
                   _color_read_Clear
                   _color_read_Green
                            _lroundf
 ---------------------------------------------------------------------------------
 (2) _detect_color                                        33    29      4   26645
                                             17 BANK0     33    29      4
                              _LED_B
                              _LED_G
                              _LED_R
                            ___fldiv
                            ___flmul
                           ___xxtofl
                            _compare
                            _lroundf
                         _read_color
                       _toggle_light
 ---------------------------------------------------------------------------------
 (3) _compare                                              7     1      6    1936
                                             10 BANK0      7     1      6
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
                            _lroundf (ARG)
 ---------------------------------------------------------------------------------
 (2) _color_data_collection                               12    10      2   15832
                                             89 COMRAM     4     2      2
                                            126 BANK0      8     8      0
                              _LED_B
                              _LED_C
                              _LED_G
                              _LED_R
                      _color_display
                      _color_predict
                         _read_color
 ---------------------------------------------------------------------------------
 (3) _read_color                                           2     0      2    1148
                                             11 COMRAM     2     0      2
                    _color_read_Blue
                   _color_read_Clear
                   _color_read_Green
                     _color_read_Red
 ---------------------------------------------------------------------------------
 (2) _color_predict                                      101   101      0    6899
                                             25 BANK0    101   101      0
                  _sendStringSerial4
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _color_display                                      102   100      2    7345
                                             87 COMRAM     2     0      2
                                             25 BANK0    100   100      0
                  _sendStringSerial4
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             27    15     12    6608
                                              0 BANK0     25    13     12
                           _vfprintf
 ---------------------------------------------------------------------------------
 (4) _vfprintf                                             8     2      6    6105
                                             79 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (5) _vfpfcnvrt                                           42    36      6    5751
                                             63 COMRAM    16    10      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (6) _dtoa                                                36    26     10    4358
                                             27 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (7) _pad                                                 11     5      6    2709
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (8) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (8) _fputs                                                7     3      4    1235
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (6) _fputc                                                9     5      4     834
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (7) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (7) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (7) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (7) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (3) _sendStringSerial4                                    2     0      2     219
                                              1 COMRAM     2     0      2
                    _sendCharSerial4
 ---------------------------------------------------------------------------------
 (4) _sendCharSerial4                                      1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _calibrate_white                                      4     2      2    1525
                                             11 COMRAM     4     2      2
                              _LED_B
                              _LED_C
                              _LED_G
                            _LED_OFF
                              _LED_R
                    _color_read_Blue
                   _color_read_Clear
                   _color_read_Green
                     _color_read_Red
                       _toggle_light
 ---------------------------------------------------------------------------------
 (4) _color_read_Red                                       7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (4) _color_read_Green                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (4) _color_read_Blue                                      7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _LED_R                                                2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _LED_OFF                                              2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _LED_G                                                2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _LED_B                                                2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _amb_light_measure                                   14    12      2   18815
                                             10 BANK0     14    12      2
                              _LED_C
                            ___fldiv
                           ___xxtofl
                   _color_read_Clear
                            _lroundf
                       _toggle_light
 ---------------------------------------------------------------------------------
 (3) _lroundf                                              4     0      4   13096
                                              6 BANK0      4     0      4
                            ___fldiv (ARG)
                            ___fltol
                           ___xxtofl (ARG)
                             _roundf
 ---------------------------------------------------------------------------------
 (4) _roundf                                              26    22      4   11629
                                             64 COMRAM    26    22      4
                            ___fladd
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    3649
                                             16 COMRAM     8     0      8
                            ___fladd
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    3326
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4     197
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    3332
                                             39 COMRAM    25    17      8
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8     486
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (4) ___fltol                                             10     6      4     305
                                             90 COMRAM     4     0      4
                                              0 BANK0      6     6      0
                             _roundf (ARG)
 ---------------------------------------------------------------------------------
 (4) _color_read_Clear                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (5) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (5) _I2C_2_Master_Read                                    3     3      0      45
                                              1 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4    1910
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (3) ___fldiv                                             25    17      8    2835
                                             14 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) _LED_C                                                2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _short_burst_back                                     6     2      4    6942
                                             31 COMRAM     6     2      4
                     _fullSpeedAhead
                               _stop
 ---------------------------------------------------------------------------------
 (1) _setup_init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _pin_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initDCmotors_parameter                               4     0      4     416
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2      76
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     294
                                              4 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     294
                                              2 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (5) _I2C_2_Master_Write                                   1     1      0      22
                                              1 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (5) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (5) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (6) _I2C_2_Master_Idle                                    1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _calibration_motor                                    6     2      4   27712
                                             53 COMRAM     6     2      4
                        _test_action
 ---------------------------------------------------------------------------------
 (2) _test_action                                          4     0      4   27516
                                             49 COMRAM     4     0      4
                _fullSpeedAhead_test
                           _turnLeft
                          _turnRight
 ---------------------------------------------------------------------------------
 (3) _fullSpeedAhead_test                                  6     2      4    8310
                                             31 COMRAM     6     2      4
                     _fullSpeedAhead
                               _stop
 ---------------------------------------------------------------------------------
 (1) _buggylight_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _action                                               5     1      4   66595
                                             57 COMRAM     5     1      4
                             _goback
                     _reverse_square
                      _short_reverse
                       _toggle_light
                           _turnLeft
                          _turnRight
 ---------------------------------------------------------------------------------
 (3) _toggle_light                                         5     4      1     613
                                              0 COMRAM     5     4      1
 ---------------------------------------------------------------------------------
 (2) _short_reverse                                        6     2      4    7246
                                             31 COMRAM     6     2      4
                      _fullSpeedBack
                               _stop
 ---------------------------------------------------------------------------------
 (2) _goback                                               8     4      4   32566
                                             49 COMRAM     8     4      4
                     _fullSpeedAhead
                     _reverse_square
                               _stop
                           _turnLeft
                          _turnRight
 ---------------------------------------------------------------------------------
 (3) _turnRight                                           18    13      5    8745
                                             31 COMRAM    18    13      5
                        _setMotorPWM
                               _stop
 ---------------------------------------------------------------------------------
 (3) _turnLeft                                            18    13      5    9429
                                             31 COMRAM    18    13      5
                        _setMotorPWM
                               _stop
 ---------------------------------------------------------------------------------
 (2) _reverse_square                                       6     2      4    6942
                                             31 COMRAM     6     2      4
                      _fullSpeedBack
                               _stop
 ---------------------------------------------------------------------------------
 (2) _stop                                                 6     2      4    3731
                                             25 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (3) _fullSpeedBack                                        5     1      4    2515
                                             25 COMRAM     5     1      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _fullSpeedAhead                                       5     1      4    2971
                                             25 COMRAM     5     1      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (3) _setMotorPWM                                         11     9      2    2035
                                             14 COMRAM    11     9      2
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     447
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4     496
                                              6 COMRAM     8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _Timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _HighISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_2_Master_Init
   _Interrupts_init
   _LED_OFF
   _Timer0_init
   _action
     _goback
       _fullSpeedAhead
         _setMotorPWM
           ___awdiv
             ___wmul (ARG)
           ___wmul
       _reverse_square
         _fullSpeedBack
           _setMotorPWM
         _stop
           _setMotorPWM
       _stop
       _turnLeft
         _setMotorPWM
         _stop
       _turnRight
         _setMotorPWM
         _stop
     _reverse_square
     _short_reverse
       _fullSpeedBack
       _stop
     _toggle_light
     _turnLeft
     _turnRight
   _amb_light_measure
     _LED_C
     ___fldiv
       ___xxtofl (ARG)
     ___xxtofl
     _color_read_Clear
       _I2C_2_Master_Read
         _I2C_2_Master_Idle
       _I2C_2_Master_RepStart
         _I2C_2_Master_Idle
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
     _lroundf
       ___fldiv (ARG)
       ___fltol (ARG)
         _roundf (ARG)
           ___fladd
           ___flge
           ___flmul
             ___fldiv (ARG)
             ___xxtofl (ARG)
           ___flneg
           ___flsub
             ___fladd
       ___xxtofl (ARG)
       _roundf (ARG)
     _toggle_light
   _buggylight_init
   _calibrate_white
     _LED_B
     _LED_C
     _LED_G
     _LED_OFF
     _LED_R
     _color_read_Blue
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Clear
     _color_read_Green
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Red
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _toggle_light
   _calibration_motor
     _test_action
       _fullSpeedAhead_test
         _fullSpeedAhead
         _stop
       _turnLeft
       _turnRight
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _detect_color
     _LED_B
     _LED_G
     _LED_R
     ___fldiv
     ___flmul
     ___xxtofl
     _compare
       ___fldiv (ARG)
       ___flmul (ARG)
       ___xxtofl (ARG)
       _lroundf (ARG)
     _lroundf
     _read_color
       _color_read_Blue
       _color_read_Clear
       _color_read_Green
       _color_read_Red
     _toggle_light
   _distance_measure
     _LED_C
     ___flmul
     ___xxtofl
     _color_read_Clear
     _color_read_Green
     _lroundf
   _fullSpeedAhead
   _initDCmotorsPWM
   _initDCmotors_parameter
   _initUSART4
   _pin_init
   _setup_init
   _short_burst_back
     _fullSpeedAhead
     _stop
   _stop
   _test_function
     _LED_C
     _amb_light_measure
     _calibrate_white
     _color_data_collection
       _LED_B
       _LED_C
       _LED_G
       _LED_R
       _color_display
         _sendStringSerial4
           _sendCharSerial4
         _sprintf
           _vfprintf
             _vfpfcnvrt
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                   _strlen
               _fputc
       _color_predict
         _sendStringSerial4
         _sprintf
       _read_color
     _color_display
     _color_predict
     _detect_color
     _distance_measure
     _fullSpeedAhead
     _read_color
     _stop
   _verify_color
     _detect_color

 _HighISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      57        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     42      AC       7       67.2%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     98      9F       5       99.4%
BITBIGSFRlllllh     8F      0       0      41        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5E      5E       1      100.0%
BITBIGSFRllllll     32      0       0      46        0.0%
BITBIGSFRllllll     2A      0       0      50        0.0%
BITBIGSFRllllll     26      0       0      55        0.0%
BITBIGSFRllllll     20      0       0      44        0.0%
BITBIGSFRhhhl       1B      0       0      33        0.0%
BITBIGSFRhlh        17      0       0      35        0.0%
BITBIGSFRhhl        13      0       0      34        0.0%
BITBIGSFRhlllh      11      0       0      37        0.0%
BITBIGSFRhhhh        D      0       0      32        0.0%
BITBIGSFRllllll      C      0       0      45        0.0%
BITBIGSFRllllll      B      0       0      53        0.0%
BITBIGSFRllllll      9      0       0      52        0.0%
BITBIGSFRlllllh      8      0       0      42        0.0%
BITBIGSFRllllll      6      0       0      54        0.0%
BITBIGSFRllllll      6      0       0      49        0.0%
BITBIGSFRllllll      5      0       0      48        0.0%
BITBIGSFRhllll       5      0       0      38        0.0%
BITBIGSFRllllll      3      0       0      51        0.0%
BITBIGSFRllllll      3      0       0      47        0.0%
BITBIGSFRhllh        1      0       0      36        0.0%
BITBIGSFRllllll      1      0       0      43        0.0%
BITBIGSFRllllh       1      0       0      40        0.0%
BITBIGSFRllh         1      0       0      39        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1A9      56        0.0%
DATA                 0      0     1A9       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.35 build 20211206165544 
Symbol Table                                                                                   Tue Mar 15 12:16:20 2022

                ?_short_reverse 0020                  _color_read_Red 562E                    ___fldiv@aexp 0027  
                  ___fldiv@bexp 0026                    ___fldiv@sign 001F                 _color_read_Blue 56CE  
                 _color_predict 5B50                              l70 381A                              l62 3808  
                            l73 5B1E                              l82 571C                              l59 5D3E  
                            l91 55DA                              l76 5CD4                              l85 56CC  
                            l94 5C34                              l79 567C                              l88 576C  
                            l97 5C14                    ___awdiv@sign 000C             ___wmul@multiplicand 0003  
              _color_read_Clear 571E                _color_read_Green 567E               ??_Interrupts_init 0001  
                           l100 5C94                             l103 5C74                             l120 551A  
                           l201 5D88                             l210 5D5E                             l106 5C54  
                           l204 5D74                             l213 587E                             l117 42B2  
                           l126 5B7C                             l303 45A4                             l207 5D7E  
                           l152 5A40                             l321 4416                             l313 4386  
                           l161 4B6C                             l129 3A24                             l153 5A42  
                           l306 45CE                             l332 542E                             l324 4440  
                           l164 50BE                             l317 43CE                             l149 1A16  
                           l165 50C0                             l157 54AA                             l270 5902  
                           l343 539A                             l335 5944                             l280 3BF8  
                           l192 5BA6                             l273 4F30                             l346 5986  
                           l195 5BA8                             l372 5CF2                             l349 59C8  
                           l381 5D14                             l614 5D6A                             l198 5BCE  
                           l390 5B4E                             l470 3058                             l631 5D10  
                           l295 4514                             l711 4E46                             l551 58C0  
                           l288 5306                             l384 5D28                             l472 3066  
                           l713 4E16                             l481 3118                             l474 309A  
                           l299 455C                             l563 2FF8                             l707 4D7A  
                           l716 4E5E                             l708 4DE0                             l476 30A8  
                           l566 3DB2                             l719 5BF4                             l479 310A  
                           l569 5CB4                             l833 48E0                             l489 31AC  
                           l586 3552                             l950 524A                             l686 5D52  
                           l846 4A44                             l984 4D32                             l993 5AB4  
                           l989 4D78               verify_color@color 009A                ?_calibrate_white 000C  
      __end_of_distance_measure 50C2                             _abs 59CA                             _pad 50C2  
                           prod 000FF3                             wreg 000FE8                    ___flmul@aexp 0039  
                  ___flmul@bexp 003A                    ___flmul@sign 0034                    ___flmul@temp 003F  
                  ___flmul@prod 003B                 __end_of_LED_OFF 5C36                    ___fltol@exp1 0065  
                          l1016 4C74                            ?_abs 0013                            l1301 2A48  
                          l1303 28A8                            l1312 28EE                            l1314 2966  
                          l1306 286C                            l1402 562C                            l1315 2954  
                          l1340 2192                            l1333 1F9C                            l1501 583C  
                          l1350 22C2                            l1342 220A                            l1343 21F8  
                          l1247 1C06                            l1264 1D20                            l1256 1ED6  
                          l1248 1BF4                            l1512 26AE                            l1504 5D8E  
                          l1432 514A                            l1440 2AEA                            l1337 2300  
                          l1273 1DF0                            l1249 1BBA                            l4001 3F26  
                          l1274 1DDE                            l1434 5186                            l1442 2AF2  
                          l1460 2D2C                            l4013 5D80                            l4021 5D76  
                          l1381 4058                            l4101 1FD0                            l1525 5AEA  
                          l1429 5108                            l4005 3F32                            l1374 3FC0  
                          l4015 5D84                            l4023 5D7A                            l4031 5844  
                          l4111 2020                            l4103 1FDC                            l4007 3F56  
                          l4017 5D56                            l1377 411C                            l4033 584C  
                          l4025 5D6C                            l4201 4CB4                            l4121 2062  
                          l4113 202C                            l4105 1FE6                            l1289 57F8  
                          l1481 5A08                            l1473 5574                            l5001 1880  
                          l1474 557C                            l4051 3B0A                            l4043 3A26  
                          l4019 5D5A                            l4035 5854                            l4027 5D70  
                          l4211 4D20                            l4203 4CE2                            l4131 20C4  
                          l4123 206E                            l4115 2038                            l4107 1FFC  
                          l1395 5A7C                            l1467 3F68                            l5011 18D4  
                          l5003 188A                            l1388 40B4                            l4053 3B26  
                          l4045 3A42                            l4301 539C                            l5101 32F0  
                          l4037 587A                            l4029 5840                            l4213 4D70  
                          l4205 4CF2                            l4141 215A                            l4133 20D0  
                          l4125 207E                            l4117 2046                            l4109 2008  
                          l4061 1ED8                            l4221 5A94                            l1493 4FFA  
                          l5021 192C                            l5013 18EA                            l5005 18A0  
                          l1478 5A00                            l4055 3B90                            l4047 3AA4  
                          l4303 53C0                            l4311 53FE                            l5111 3354  
                          l5103 32FC                            l4039 587C                            l4215 4D76  
                          l4207 4D00                            l4151 21B0                            l4143 2178  
                          l4135 20EC                            l4127 2098                            l4119 2052  
                          l4071 1F14                            l4063 1EE4                            l4223 5AA4  
                          l4231 5532                            l5031 19EE                            l5023 195C  
                          l5015 18F2                            l5007 18B6                            l4049 3AEA  
                          l4313 5416                            l4305 53D8                            l4321 5350  
                          l5105 3314                            l5201 5900                            l4209 4D12  
                          l4161 221A                            l4153 21B4                            l4145 2182  
                          l4137 2116                            l4129 20A8                            l4081 1F46  
                          l4073 1F24                            l4065 1EF2                            l4401 267A  
                          l5041 4A46                            l4241 56CE                            l4057 5D14  
                          l3601 4926                            l3521 4F60                            l4233 5558  
                          l5033 19F4                            l5025 198C                            l5009 18CC  
                          l5017 18FA                            l4307 53E4                            l4323 535C  
                          l4315 5308                            l5131 340E                            l5123 33AA  
                          l5115 336A                            l5107 3318                            l4411 358E  
                          l5211 4EA4                            l5203 4E60                            l4331 4B86  
                          l4171 227C                            l4163 2226                            l4155 21C2  
                          l4147 2190                            l4139 214C                            l4091 1F86  
                          l4083 1F54                            l4075 1F2A                            l4067 1EF4  
                          l4219 5A7E                            l4403 269E                            l5051 4A92  
                          l5043 4A60                            l4243 5714                            l4235 562E  
                          l4059 5D24                            l3611 498E                            l3603 4946  
                          l3523 4F7E                            l3515 4F32                            l3531 5806  
                          l4227 551C                            l5035 1A08                            l5027 1992  
                          l5019 18FE                            l4309 53F0                            l4317 532C  
                          l4325 536A                            l4501 448A                            l5141 347E  
                          l5125 33CE                            l5117 336C                            l5109 3340  
                          l4421 3630                            l4413 35AE                            l5213 4EB4  
                          l5205 4E6C                            l5221 5CE2                            l4253 571E  
                          l4341 4BD6                            l4181 22E4                            l4173 2290  
                          l4165 2234                            l4157 21F0                            l4149 21A2  
                          l4093 1F8C                            l4085 1F56                            l4077 1F3A  
                          l4069 1F04                            l5061 4AF2                            l5053 4AAA  
                          l5045 4A6A                            l4237 5674                            l3621 4A04  
                          l3613 49BC                            l3605 4964                            l3525 4FB4  
                          l3517 4F44                            l3533 5818                            l3541 5AC6  
                          l3701 2CC8                            l4229 5524                            l4261 55EE  
                          l5037 1A12                            l5029 19C0                            l5301 46B6  
                          l5231 5CFC                            l4327 5382                            l4319 5344  
                          l4511 44D6                            l4503 4496                            l5143 34A2  
                          l5135 342A                            l5119 338E                            l4431 36CE  
                          l4423 3648                            l4415 35C6                            l4407 3572  
                          l5215 4EC8                            l5207 4E7C                            l5223 5CEC  
                          l4255 5764                            l4351 4C00                            l4343 4BDA  
                          l4335 4B9A                            l4183 22E6                            l4175 22AA  
                          l4167 225E                            l4095 1FAC                            l4087 1F66  
                          l4079 1F40                            l4191 57B4                            l5063 4B5A  
                          l5055 4AB6                            l5047 4A6E                            l4247 567E  
                          l4271 5B20                            l3551 476C                            l3623 4A24  
                          l3615 49DC                            l3607 496C                            l3519 4F56  
                          l3535 581C                            l3543 5ADE                            l3631 50E6  
                          l3703 2CCE                            l3711 2D04                            l4263 55F6  
                          l5071 5012                            l5311 4710                            l5303 46C6  
                          l5233 5D06                            l3721 5BEC                            l4281 5250  
                          l4521 452A                            l4513 44E2                            l4505 44A4  
                          l5153 3512                            l5137 344E                            l5129 33EA  
                          l4441 3788                            l4433 370A                            l4425 3680  
                          l4417 35FE                            l4409 357E                            l5161 3BFA  
                          l5241 4D8C                            l5209 4E90                            l5225 5CEE  
                          l5217 5CD6                            l5321 5894                            l4601 26CC  
                          l4361 4C28                            l4353 4C0A                            l4345 4BE8  
                          l4337 4BC4                            l4329 4B6E                            l4177 22C6  
                          l4185 22EC                            l4169 2262                            l4097 1FBC  
                          l4089 1F76                            l3801 1B54                            l4193 57C4  
                          l5065 4B64                            l5057 4ACE                            l5049 4A86  
                          l4249 56C4                            l4273 5B24                            l3561 47C2  
                          l3553 478C                            l3617 49EE                            l3609 4980  
                          l3529 57FA                            l3537 5AB6                            l3641 512C  
                          l3633 50F4                            l3705 2CE0                            l4265 55FE  
                          l5081 5086                            l5073 5016                            l5313 4720  
                          l5401 300E                            l5235 5D60                            l4291 52A4  
                          l4283 5268                            l4531 4584                            l4523 453C  
                          l4515 44F4                            l4507 44BC                            l5155 3536  
                          l5147 34D2                            l5091 595A                            l4443 379A  
                          l4435 371C                            l4427 3692                            l4419 3610  
                          l5331 2D7C                            l5163 5D2A                            l5251 4DCE  
                          l5243 4DA2                            l3715 5BA8                            l5171 5B0A  
                          l5227 5CF0                            l5219 5CE0                            l5323 58AC  
                          l4603 26DC                            l4611 2706                            l4363 4C34  
                          l4355 4C14                            l4339 4BC6                            l4187 22F0  
                          l4179 22D6                            l3811 1BB2                            l3803 1B58  
                          l3731 1A34                            l5059 4ADA                            l4275 5B32  
                          l3571 4816                            l3563 47CE                            l3555 4790  
                          l3547 475A                            l3619 49F4                            l3651 59E4  
                          l3539 5AC2                            l3643 515A                            l3635 5100  
                          l3627 50C2                            l3707 2CEC                            l4267 561A  
                          l4259 55DC                            l4451 557E                            l5083 50A2  
                          l5075 5030                            l5315 4734                            l5307 46DC  
                          l5411 3022                            l5403 3012                            l5229 5CF4  
                          l4293 52B0                            l4285 5274                            l4533 4590  
                          l4525 4548                            l4517 4500                            l4509 44CA  
                          l4541 42D8                            l5149 34F6                            l5093 5972  
                          l4445 37B8                            l4437 373A                            l4429 36B6  
                          l5341 2DF0                            l5333 2D96                            l5325 2D30  
                          l5261 4E24                            l5245 4DB0                            l3717 5BB8  
                          l5173 5B14                            l5165 5AEC                            l5237 5D40  
                          l4461 5C76                            l4701 2976                            l4621 2732  
                          l4613 2716                            l4605 26EC                            l4365 4C44  
                          l4197 4C76                            l3901 1E54                            l3821 1BE8  
                          l3813 1BC8                            l3805 1B5C                            l3733 1A44  
                          l3741 1A6E                            l3725 1A18                            l4381 23BA  
                          l4373 2302                            l4453 5C16                            l4277 5B36  
                          l3581 488A                            l3573 4828                            l3565 47EC  
                          l3557 479E                            l3549 475E                            l3645 516E  
                          l3637 5114                            l3629 50D2                            l3709 2CF4  
                          l3661 2AC2                            l3653 2A4A                            l5085 50BA  
                          l5077 503C                            l5069 4FFC                            l5317 474E  
                          l5309 46F0                            l5181 5482                            l5421 3050  
                          l5413 3026                            l5405 3016                            ?_pad 0011  
                          l3719 5BD0                            l4287 528C                            l4295 52BE  
                          l4279 524C                            l4535 45A0                            l4527 4558  
                          l4519 4510                            l4551 432E                            l4543 42F0  
                          l5159 3556                            l5095 32C0                            l4447 37D0  
                          l4439 3752                            l5351 2E4C                            l5343 2DF2  
                          l5335 2D98                            l5327 2D40                            l5263 4E26  
                          l5255 4DEE                            l5247 4DB2                            l5167 5AF0  
                          l5239 5C96                            l5319 5880                            l4463 5C7C  
                          l4711 29D8                            l4703 2982                            l4623 2742  
                          l4631 276C                            l4615 271C                            l4607 26FC  
                          l4367 4C54                            l4199 4CA4                            l3911 1E9A  
                          l3903 1E56                            l3831 1C38                            l3823 1BF2  
                          l3815 1BD4                            l3807 1B86                            l3751 1A9E  
                          l3743 1A7E                            l3735 1A54                            l3727 1A24  
                          l4391 2500                            l4383 23DE                            l4375 2322  
                          l4471 5C3C                            l4455 5C1C                            l3575 4856  
                          l3567 47F4                            l3583 4890                            l3559 47BE  
                          l3591 48E2                            l3639 5128                            l3671 2B1A  
                          l3663 2AC4                            l3655 2A6A                            l5079 5040  
                          l5271 45E6                            l5183 54A2                            l5175 5434  
                          l5431 3082                            l5423 3054                            l5415 303A  
                          l5407 301A                            l4297 52D6                            l4289 5298  
                          l4537 45BA                            l4529 4572                            l4561 4372  
                          l4553 433C                            l4545 42FC                            l5097 32D8  
                          l5089 5946                            l4449 3806                            l5361 2EB8  
                          l5353 2E5E                            l5345 2E04                            l5337 2DAA  
                          l5329 2D50                            l5265 4E3C                            l5257 4E04  
                          l5249 4DC8                            l5169 5AFA                            l5193 58C2  
                          l4721 2A36                            l4713 29EE                            l4705 2990  
                          l4641 27AE                            l4633 277C                            l4625 2752  
                          l4617 2722                            l4609 26FE                            l4369 4C64  
                          l3921 1EC4                            l3913 1EA8                            l3905 1E66  
                          l3841 1C74                            l3833 1C48                            l3825 1C14  
                          l3817 1BD8                            l3809 1BA2                            l3761 1ADE  
                          l3753 1AAC                            l3745 1A84                            l3737 1A64  
                          l3729 1A32                            l4393 256C                            l4385 23FA  
                          l4377 236A                            l4481 5A44                            l4465 5C56  
                          l4457 5BF6                            l3585 48A0                            l3577 4876  
                          l3569 4808                            l3593 48E6                            l3649 59CA  
                          l3681 2BBA                            l3673 2B20                            l3665 2ADE  
                          l3657 2A92                            l4473 54AC                            l4801 4144  
                          l5281 463E                            l5273 45F8                            l5177 544C  
                          l5441 30E8                            l5433 30B6                            l5425 3056  
                          l5417 3040                            l5409 301E                            l3931 519A  
                          l4299 52EE                            l4571 43CA                            l4563 4382  
                          l4555 4348                            l4547 4308                            l4539 42B4  
                          l5099 32DC                            l5371 2F3E                            l5363 2EE4  
                          l5355 2E8A                            l5347 2E30                            l5339 2DD6  
                          l5267 4E4A                            l5195 58D2                            l4723 2A3C  
                          l4715 2A08                            l4707 29BA                            l4635 2792  
                          l4627 2762                            l4619 2730                            l3923 1EC6  
                          l3915 1EAE                            l3907 1E76                            l3851 1CBA  
                          l3843 1C82                            l3835 1C56                            l3827 1C24  
                          l3819 1BE6                            l3771 1B18                            l3763 1AE0  
                          l3755 1AAE                            l3747 1A96                            l3739 1A66  
                          l4395 259E                            l4379 237E                            l4467 5C5C  
                          l4459 5BFC                            l3587 48C0                            l3579 4878  
                          l3595 48F4                            l3691 2C62                            l3683 2BC0  
                          l3675 2B28                            l3667 2AFA                            l3659 2AB2  
                          l4475 550E                            l4811 4194                            l4803 415C  
                          l4491 5A3C                            l5291 4686                            l5283 4642  
                          l5275 4604                            l5179 546A                            l5443 30F6  
                          l5435 30CC                            l5427 3074                            l5451 3146  
                          l5419 3048                            l3941 51C0                            l3933 51A2  
                          l4581 442C                            l4573 43E4                            l4565 439C  
                          l4557 4354                            l4549 4316                            l5381 2FB2  
                          l5373 2F58                            l5365 2EFE                            l5357 2EA4  
                          l5349 2E4A                            l5197 58EA                            l4725 2A3E  
                          l4717 2A24                            l4709 29BE                            l4661 2830  
                          l4653 27E6                            l4637 27A2                            l4645 27C2  
                          l4629 2764                            l4741 3FE6                            l4733 3F6C  
                          l3917 1EB0                            l3909 1E96                            l3861 1D36  
                          l3853 1CEE                            l3845 1C84                            l3837 1C64  
                          l3781 1B2C                            l3773 1B1C                            l3757 1ABE  
                          l3765 1AE8                            l3749 1A98                            l4397 260A  
                          l4389 2432                            l4469 5C36                            l4901 393A  
                          l3597 4914                            l3693 2C7C                            l3685 2BC6  
                          l3677 2B32                            l3669 2B0C                            l4477 5B54  
                          l4821 41B8                            l4805 4168                            l4485 5A0A  
                          l5293 468C                            l5285 464E                            l5277 4618  
                          l5269 45D4                            l5189 54A8                            l5461 317A  
                          l5445 3126                            l5437 30CE                            l5429 3080  
                          l3951 51F8                            l3943 51C8                            l3935 51A6  
                          l3927 5188                            l4591 599C                            l4495 4442  
                          l4575 43F6                            l4567 43AE                            l4559 4366  
                          l5383 2FB4                            l5375 2F5A                            l5367 2F00  
                          l5359 2EA6                            l4583 5904                            l5199 58FE  
                          l4719 2A28                            l4671 2876                            l4663 2838  
                          l4655 2800                            l4647 27D2                            l4639 27AA  
                          l4751 4040                            l4735 3F7C                            l3919 1EB6  
                          l3871 1D72                            l3863 1D46                            l3855 1CF0  
                          l3847 1C8E                            l3839 1C70                            l3791 1B40  
                          l3783 1B30                            l3775 1B20                            l3767 1AF8  
                          l3759 1ACE                            l4399 263E                            l4911 399E  
                          l4903 3952                            l3599 4918                            l3695 2C96  
                          l3679 2B38                            l3687 2C2A                            l4479 5B70  
                          l4823 41C4                            l4807 4174                            l4487 5A10  
                          l5287 465A                            l5279 462C                            l5471 320E  
                          l5463 319C                            l5455 3158                            l5447 3128  
                          l5439 30E6                            l3961 5224                            l3953 51FE  
                          l3945 51DA                            l3937 51B4                            l3929 518C  
                          l4593 59B4                            l4497 4466                            l4577 4402  
                          l4569 43BA                            l5385 2FC6                            l5377 2F6C  
                          l5369 2F12                            l4585 5918                            l4681 28CE  
                          l4673 2894                            l4665 2848                            l4657 2810  
                          l4649 27D2                            l4761 40A4                            l4753 4042  
                          l4745 3FFA                            l4737 3F8A                            l3881 1D9E  
                          l3873 1D74                            l3857 1D00                            l3849 1C94  
                          l3793 1B44                            l3785 1B34                            l3777 1B24  
                          l3769 1B0A                            l4921 3A02                            l4913 39B6  
                          l4905 396A                            l3689 2C44                            l3697 2CA6  
                          l4841 4220                            l4825 41D0                            l4817 419C  
                          l4809 417A                            l4489 5A26                            l5297 46A4  
                          l5289 466E                            l5481 3288                            l5473 3222  
                          l5465 31B6                            l5457 315A                            l5449 312E  
                          l3955 5214                            l3947 51E2                            l3963 522A  
                          l3939 51BC                            l4499 447E                            l4579 4412  
                          l5387 2FD0                            l5379 2F98                            l4587 5930  
                          l4691 290C                            l4683 28D4                            l4675 2896  
                          l4667 285C                            l4659 2820                            l4595 26B0  
                          l4771 40FC                            l4763 40C2                            l4755 404E  
                          l4747 4002                            l4739 3FD0                            l3891 1DD6  
                          l3875 1D82                            l3867 1D5A                            l3883 1DA0  
                          l3859 1D10                            l3795 1B48                            l3787 1B38  
                          l3779 1B28                            l4915 39CE                            l4907 3982  
                          l3699 2CB8                            l3971 3DB4                            l4843 422C  
                          l4835 41F8                            l4827 41D6                            l4819 41A0  
                          l4931 0E8C                            l4923 0E14                            l5299 46B0  
                          l5483 3298                            l5475 323C                            l5467 31DE  
                          l5459 3166                            l5395 2FFA                            l3965 523A  
                          l3957 521C                            l3949 51EA                            l4589 5988  
                          l5389 2FE4                            l4781 5B88                            l4693 2910  
                          l4685 28DE                            l4677 28A6                            l4669 286A  
                          l4597 26BC                            l4773 410A                            l4765 40C4  
                          l4757 408A                            l4749 400E                            l3877 1D8A  
                          l3869 1D64                            l3885 1DAE                            l3797 1B4C  
                          l3789 1B3C                            l4917 39E6                            l4909 3986  
                          l3981 3E22                            l3973 3DD8                            l4861 4288  
                          l4853 4254                            l4845 4232                            l4837 41FC  
                          l4829 41F0                            l4941 10A8                            l4933 0F28  
                          l4925 0E62                            l5485 32AE                            l5477 3250  
                          l5469 320C                            l5397 2FFE                            l3967 5242  
                          l3959 521E                            l4783 5B8E                            l4791 5CB8  
                          l4695 291E                            l4687 28EC                            l4679 28B8  
                          l4599 26CA                            l4775 410C                            l4767 40C8  
                          l4759 4096                            l3895 1E00                            l3887 1DB2  
                          l3879 1D8E                            l3799 1B50                            l4919 39FE  
                          l4871 3820                            l3991 3EEA                            l3983 3E46  
                          l3975 3DE6                            l4863 428E                            l4855 4258  
                          l4847 424C                            l4839 4214                            l4951 1106  
                          l4943 10C4                            l4935 0F44                            l4927 0E66  
                          l5487 32B4                            l5479 326A                            l5399 3002  
                          l4785 5B90                            l4697 294C                            l4689 28FE  
                          l4769 40EC                            l3897 1E0C                            l3889 1DC0  
                          l4881 3872                            l4873 382A                            l3993 3EF8  
                          l3985 3E8E                            l3977 3DF8                            l4865 42A8  
                          l4857 4270                            l4793 411E                            l4961 1330  
                          l4953 11A8                            l4945 10DC                            l4937 0FEC  
                          l4929 0E80                            l4787 5B92                            l4779 5B7E  
                          l3899 1E1A                            l4891 38D6                            l4883 388A  
                          l4875 3842                            l3995 3F0C                            l3979 3DFE  
                          l4867 42AE                            l4859 427C                            l4971 1418  
                          l4963 134C                            l4955 11C4                            l4947 10E0  
                          l4939 1000                            l4789 5B94                            l4893 38EE  
                          l4885 38A2                            l4877 3846                            l4869 381C  
                          l3989 3EC6                            l4981 15BC                            l4973 1434  
                          l4965 1350                            l4957 126C                            l4949 10FA  
                          l4895 3906                            l4887 38A6                            l4879 385E  
                          l3999 3F18                            l4799 4140                            l4991 177E  
                          l4983 1664                            l4975 14DC                            l4967 136A  
                          l4959 1288                            l4897 390A                            l4889 38BE  
                          l4993 1788                            l4985 1678                            l4977 14F8  
                          l4969 1376                            l4899 3922                            l4995 17A0  
                          l4987 16A6                            l4979 15A0                            l4997 17B6  
                          l4989 1774                            l4999 1876                            STR_1 0E05  
                          STR_2 0E0D                            u3000 4816                            u3001 4812  
                          u3010 4856                            u3011 4852                            u3020 48A0  
                          u3100 50F4                            u3021 489C                            u3101 50F0  
                          u3030 48F4                            u3110 514A                            u3031 48F0  
                          u3111 5146                            u4000 2206                            u3040 4926  
                          u3120 515A                            u3200 2B1A                    _BAUD4CONbits 000EE9  
                          u4001 2202                            u3041 4922                            u3121 5156  
                          u3201 2B16                            _LATE 000F7D                            u4010 221A  
                          u3050 4964                            u3130 59E4                            u3210 2C44  
                          u4011 2216                            u3051 4960                            u3131 59E0  
                          u3211 2C40                            _LATG 000F7F                            u3300 5BCE  
                          u4100 4D70                            u4020 2234                            u3060 498E  
                          u3220 2C62                            u3140 2A7A                            u3301 5BCA  
                          u4101 4D6C                            u4021 2230                            u3061 498A  
                          u3221 2C5E                            u3141 2A74                            u4030 227C  
                          u4110 5A94                            u3310 1A32                            u3070 49BC  
                          u3230 2C7C                            u3150 2A7C                            u4031 2278  
                          u4111 5A90                            u3311 1A2E                            u3071 49B8  
                          u3231 2C78                            u4200 5382                            u5000 29D8  
                          u4040 22AA                            u3400 1B86                            u3320 1A44  
                          u3080 4A04                            u3240 2C96                            u3160 2A92  
                          u4120 5574                            u4201 537E                            u5001 29D4  
                          u4041 22A6                            u3401 1B82                            u3321 1A40  
                          u3081 4A00                            u3241 2C92                            u3161 2A8E  
                          u4121 5570                            u4210 539A                            u5010 2A08  
                          u4050 22E4                            u3410 1B9E                            u3330 1A54  
                          u4130 5B4E                            u3090 50D2                            u3250 2CA6  
                          u3170 2AC2                            _T2PR 000FBC                            u4211 5396  
                          u5011 2A04                            u4051 22E0                            u3411 1B98  
                          u3331 1A50                            u4131 5B4A                            u3091 50CE  
                          u3251 2CA2                            u3171 2ABE                            u4140 5268  
                          u5020 2A36                            u5100 40C2                            u4220 4B86  
                          u4060 4CA4                            u3500 1C82                            u3420 1BA0  
                          u3340 1A96                            u4300 236A                            u3260 2CB8  
                          u3180 2ADE                            u4141 5264                            u5021 2A32  
                          u5101 40BE                            u4221 4B82                            u4061 4CA0  
                          u3501 1C7E                            u3341 1A92                            u4301 2366  
                          u3261 2CB4                            u3181 2ADA                            u4150 528C  
                          u5110 40FC                            u5030 3F7C                            u4230 4BBA  
                          u4070 4CE2                            u3510 1CBA                            u3430 1BC8  
                          u3350 1AAC                            u4310 239E                            u3270 2CC8  
                          u3190 2B0C                            u4151 5288                            u5111 40F8  
                          u5031 3F78                            u4071 4CDE                            u3511 1CB6  
                          u3431 1BC4                            u3351 1AA8                            u3271 2CC4  
                          u3191 2B08                            u4160 52D6                            u5120 410A  
                          u5040 3F8A                            u4240 4BE8                            u4080 4D00  
                          u3600 1DD6                            u3520 1D00                            u3440 1BE6  
                          u3360 1ABE                            u4320 23BA                            u3280 2CE0  
                          u5200 17B6                            u4161 52D2                            u5121 4106  
                          u5041 3F86                            u4241 4BE4                            u4081 4CFC  
                          u3601 1DD2                            u3521 1CFC                            u3441 1BE2  
                          u3361 1ABA                            u4321 23B6                            u3281 2CDC  
                          u5201 17B2                            u4170 52EE                            u4410 35D8  
                          u3290 5BB8                            u5050 3FE6                            u4250 4BFC  
                          u4090 4D20                            u3610 1DEC                            u3530 1D36  
                          u3450 1C06                            u3370 1ACE                            u4330 23FA  
                          u5130 4194                            u5210 1876                            u4171 52EA  
                          u4411 35D0                            u3291 5BB4                            u5051 3FE2  
                          u4251 4BF8                            u4235 4BB0                            u4091 4D1C  
                          u3611 1DE8                            u3531 1D32                            u3451 1C02  
                          u3371 1ACA                            u4331 23F6                            u4315 2394  
                          u5131 4190                            u5211 1872                            u3700 519A  
                          u4180 5416                            u5060 403C                            u4260 4C24  
                          u3620 1E00                            u3540 1D46                            u3460 1C14  
                          u3380 1B0A                            u4340 2500                            u2900 4F44  
                          u5140 41F0                            u5300 19EE                            u5220 18A0  
                          u3701 5196                            u4181 5412                            u5061 4038  
                          u4261 4C20                            u3621 1DFC                            u3541 1D42  
                          u3461 1C10                            u3381 1B06                            u4341 24FC  
                          u2901 4F40                            u5141 41EC                            u5301 19EA  
                          u5221 189C                            u3710 51B4                            u4190 542E  
                          u4510 36E0                            u4430 3610                            u5070 4086  
                          u4270 4C44                            u3630 1E1A                            u3550 1D72  
                          u3470 1C24                            u3390 1B18                            u4350 259E  
                          u2910 4F56                            u5150 424C                            u5310 1A08  
                          u5230 18B6                            u3711 51B0                            u4191 542A  
                          u4511 36D8                            u4431 360C                            u5071 4082  
                          u4271 4C40                            u3631 1E16                            u3551 1D6E  
                          u3471 1C20                            u3391 1B14                            u4351 259A  
                          u6007 5C06                            u2911 4F52                            u5151 4248  
                          u5311 1A04                            u5231 18B2                            u3720 51DA  
                          u5400 34F6                            u4440 3622                            u4408 35A2  
                          u5080 40A4                            u3800 5868                            u4280 4C54  
                          u3640 1E54                            u3560 1D82                            u3480 1C56  
                          u4360 265E                            u2920 4F7E                            u5160 42A8  
                          u5240 18CC                            u5320 50BA                            u3721 51D6  
                          u5401 34F2                            u4441 361A                            u5081 40A0  
                          u3801 5860                            u4281 4C50                            u3641 1E50  
                          u3561 1D7E                            u3481 1C52                            u6017 5C26  
                          u2921 4F7A                            u5161 42A4                            u5241 18C8  
                          u5321 50B6                            u3730 51F8                            u5410 3536  
                          u5330 3340                            u4610 37E2                            u4530 371C  
                          u5090 40B4                            u3650 1E66                            u3570 1D9E  
                          u3490 1C64                            u4370 267A                            u4290 2342  
                          u2930 4FB4                            u5250 18EA                            u5170 16A6  
            verify_color@color2 0098                            u3731 51F4                            u5411 3532  
                          u5331 333C                            u4611 37DA                            u4531 3718  
                          u6107 5B00                            u5091 40B0                            u3651 1E62  
                          u3571 1D9A                            u3491 1C60                            u4371 2676  
                          u6027 5C46                            u2931 4FB0                            u5251 18E6  
                          u5171 16A2                            u3740 5214                            u3820 3A42  
                          u4700 4572                            u5340 3366                            u4540 372E  
                          u4508 36A6                            u4460 365A                            u4428 35DA  
                          u4380 358E                            u3900 1F54                            u3660 1E76  
                          u3580 1DAE                            u2940 583C                            u5260 192C  
                          u5180 1774                            u5500 4618                            u5420 54A2  
                          u3741 5210                            u3821 3A3E                            u4701 456E  
                          u5341 3362                            u4541 3726                            u4461 3652  
                          u4381 358A                            u6117 4D96                            u3901 1F50  
                          u3661 1E72                            u3581 1DAA                            u4365 2654  
                          u6037 5C66                            u2941 5838                            u5261 1928  
                          u5181 1770                            u5501 4614                            u5421 549E  
                          u3750 523A                            u3830 3B26                            u4710 4584  
                          u5350 338E                            u4630 381A                            u4390 35A0  
                          u5430 4D8C                            u3910 1F66                            u3670 1E96  
                          u3590 1DC0                            u2950 5ADE                            u5270 195C  
                          u5190 17A0                            u5510 463E                            u3751 5236  
                          u3831 3B22                            u4711 4580                            u5351 338A  
                          u4631 3816                            u6207 36C0                            u4391 3598  
                          u6127 4DBC                            u5431 4D88                            u3911 1F62  
                          u3671 1E92                            u3591 1DBC                            u4295 2338  
                          u6047 4A7A                            u2951 5ADA                            u5271 1958  
                          u5191 179C                            u5511 463A                            u4720 45BA  
                          u5360 33CE                            u4608 37AE                            u4560 3764  
                          u4528 36E2                            u4480 3692                            u5600 2E04  
                          u5440 4DB0                            u4800 26CA                            u3920 1F76  
                          u3680 1EA8                            u2960 476C                            u3760 3DD8  
                          u4640 5A26                            u5280 198C                            u5520 466E  
                          u4721 45B6                            u5361 33CA                            u4561 375C  
                          u6217 36FC                            u4481 368E                            u5601 2E00  
                          u6137 4DF8                            u5441 4DAC                            u4801 26C6  
                          u3921 1F72                            u3681 1EA4                            u6057 4A9E  
                          u2961 4768                            u3761 3DD4                            u4641 5A22  
                          u5281 1988                            u5521 466A                            u4730 432E  
                          u5370 340E                            u4490 36A4                            u4458 3624  
                          u5610 2E5E                            u5450 4DDC                            u4810 26DC  
                          u3818 586A                            u3930 1FAC                            u3690 1EC4  
                          u2970 479E                            u3770 3E22                            u4650 5A3C  
                          u5290 19C0                            u5530 46A0                            u6307 43C0  
                          u4731 432A                            u5371 340A                            u6227 3744  
                          u4491 369C                            u5611 2E5A                            u6147 4E30  
                          u5451 4DD8                            u4811 26D8                            u3931 1FA8  
                          u3691 1EC0                            u6067 4AC2                            u2971 479A  
                          u3771 3E1E                            u4651 5A38                            u5291 19BC  
                          u5531 469C                            u3844 3B80                            u4660 44BC  
                          u4740 4366                            u5380 344E                            u4628 37E4  
                          u4580 379A                            u5620 2EB8                            u5460 4DEE  
                          u4900 2894                            u4820 26EC                            u3940 1FBC  
                          u3860 5D24                            u3780 3E46                            u5540 46C6  
                          u5700 30F6                            u3845 3B7C                            u4661 44B8  
                          u6317 4408                            u4741 4362                            u5381 344A  
                          u4581 3796                            u6237 377A                            u5621 2EB4  
                          u6157 5922                            u5461 4DEA                            u4901 2890  
                          u4821 26E8                            u3941 1FB8                            u6077 4AE6  
                          u3861 5D20                            u2981 47C8                            u3781 3E42  
                          u5541 46C2                            u5701 30F2                            u3854 3BEA  
                          u4670 44F4                            u4750 439C                            u5390 34A2  
                          u4590 37AC                            u4558 3730                            u4478 365C  
                          u5630 2F12                            u5470 4E12                            u4910 28B8  
                          u4830 2730                            u3950 2136                            u3870 1EF2  
                          u2990 47EC                            u3790 3EEA                            u5550 46D8  
                          u5710 3118                            u3855 3BE6                            u6407 53F6  
                          u4671 44F0                            u6327 449C                            u4751 4398  
                          u5391 349E                            u6247 37C2                            u4591 37A4  
                          u6167 35B8                            u5631 2F0E                            u5471 4E0E  
                          u6087 5C86                            u4911 28B4                            u4831 272C  
                          u3871 1EEE                            u2991 47E8                            u3791 3EE6  
                          u5551 46D4                            u5711 3114                            u4680 452A  
                          u4760 43AE                            u5640 2F6C                            u5480 4E24  
                          u4920 28CE                            u4840 2742                            u3960 2190  
                          u3880 1F04                            u5560 4720                            u5720 3126  
                          u4681 4526                            u6337 4506                            u4761 43AA  
                          u6257 37F8                            u6177 35F0                            u5641 2F68  
                          u5481 4E20                            u6097 589E                            u4921 28CA  
                          u4841 273E                            u3961 218C                            u3881 1F00  
                          u5561 471C                            u5721 3122                            u4690 453C  
                          u4770 43E4                            u4578 3766                            u5650 2FC6  
                          u5570 2D40                            u4930 28EC                            u4850 2752  
                          u3970 21B0                            u3890 1F14                            u5490 45F8  
                          u5730 3158                            u6347 454E                            u4691 4538  
                          u4771 43E0                            u6267 5964                            u6187 363A  
                          u5651 2FC2                            u5571 2D3C                            u4931 28E8  
                          u4851 274E                            u3971 21AC                            u3955 212C  
                          u3891 1F10                            u5491 45F4                            u5731 3154  
                          u4780 43F6                            u5580 2D50                            u4940 290C  
                          u4860 2792                            u3980 21C2                            u5740 31AC  
                          u5660 3066                            u6357 4596                            u4781 43F2  
                          u6277 3306                            u6197 3672                            u5581 2D4C  
                          u4941 2908                            u4861 278E                            u3981 21BE  
                          u5741 31A8                            u5661 3062                            u4790 442C  
                          u5590 2DAA                            u4950 291E                            u4870 27D2  
                          u3990 21F0                            u5750 31DE                            u5670 3074  
                          u6367 59A6                            u4791 4428                            u6287 430E  
                          u5591 2DA6                            u4951 291A                            u4871 27CE  
                          u3991 21EC                            u5751 31DA                            u5807 313A  
                          u5671 3070                            u4960 294C                            u4880 2848  
                          u5760 3298                            u5680 30A8                            u6377 52B6  
                          u6297 4378                            u4961 2948                            u4881 2844  
                          u5761 3294                            u5817 322E                            u5681 30A4  
                          u4970 2962                            u4890 286A                            u5690 30B6  
                          u6387 52F8                            u4971 295E                            u4891 2866  
                          u5907 414E                            u5827 5440                            u5691 30B2  
                          u4980 2976                            u6397 5362                            u4981 2972  
                          u5917 41AA                            u5837 5476                            u4990 2990  
                          u4991 298C                            u5927 4206                            u5847 4740  
                          u5937 4262                            u5857 5022                            u5947 3834  
                          u5867 0E72                            u5787 308E                            u5957 3850  
                          u5877 10D0                            u5797 30DA                            u5967 38B0  
                          u5887 10EC                            u5977 3914                            u5897 135C  
                          u5987 3990                            u5997 3A0C                            abs@a 0013  
                          _dbuf 014A                            _main 2FFA                            _dtoa 2A4A  
                          _prec 00F8                            _nout 013E                            pad@i 0018  
                          pad@p 0015                            fsr1h 000FE2                            fsr2h 000FDA  
                          indf1 000FE7                            indf2 000FDF                            fsr1l 000FE1  
                          pad@w 001A                            fsr2l 000FD9                            btemp 005F  
                          _stop 524C                            prodh 000FF4                            prodl 000FF3  
                          start 0030                  ?_color_display 0058                   test_action@mL 0032  
                 test_action@mR 0034                 ___fldiv@new_exp 0020          __end_of_color_read_Red 567E  
               __end_of_HighISR 0030                    ___param_bank 000000                  ?_color_predict 0001  
                         ??_abs 0015                           ??_pad 0017                   ___fltol@sign1 0064  
               __end_of___aodiv 48E2       amb_light_measure@CC_amb_1 0072       amb_light_measure@CC_amb_2 0074  
     amb_light_measure@CC_amb_3 0076                 __end_of___fladd 1ED8                           ?_main 0001  
                         ?_dtoa 001C                 __end_of___aomod 4A46                 __end_of___fldiv 2A4A  
               __end_of___awdiv 524C                 __end_of___flneg 5AB6                 __end_of___flmul 2302  
               __end_of___flsub 57FA                 __end_of___fltol 4C76                           ?_stop 001A  
               ___awdiv@divisor 0009                           _LED_B 5C56                           _LED_C 5C76  
                         _LED_G 5C36                           _LED_R 5BF6                           i2l620 002C  
               ___awdiv@counter 000B                    vfpfcnvrt@fmt 0042                           _TMR0H 000FD4  
                         _TMR0L 000FD3         __end_of_sendCharSerial4 5D2A      __end_of_I2C_2_Master_Start 5D8A  
       ??_color_data_collection 005C      __end_of_I2C_2_Master_Write 5D60                 __end_of_compare 5A44  
                  compare@lower 006A                           _flags 00FA                           _color 0148  
                  compare@upper 006E                           _fputc 4F32                           _fputs 57FA  
                         pad@fp 0011                           _width 0140                           _putch 5D8E  
                         _toint 0E01                           dtoa@d 001E                           dtoa@i 003E  
                         dtoa@n 0036                           dtoa@p 0030                           dtoa@s 0034  
                         dtoa@w 0032                 ??_test_function 00EE            amb_light_measure@amb 006A  
                         tablat 000FF5                 __end_of_lroundf 5A7E                           ttemp5 0060  
                         ttemp6 0063                           ttemp7 0067                           status 000FD8  
                         wtemp8 0060                 __end_of_sprintf 562E                color_display@buf 0079  
       __end_of_color_read_Blue 571E           _I2C_2_Master_RepStart 5D6C               _calibration_motor 4D7A  
               ??_short_reverse 0024                 ?_color_read_Red 0005                 __initialization 576E  
            ?_calibration_motor 0036                    __end_of_main 32C0                    __end_of_dtoa 2D2E  
                 main@amb_light 0172            __end_of_detect_color 1A18                    __end_of_stop 5308  
        color_data_collection@i 00DE          color_data_collection@j 00E0          color_data_collection@k 00E2  
        color_data_collection@m 005A          color_data_collection@x 00E4             ??_calibration_motor 003A  
                        ??_main 00F6                          ??_dtoa 0026                          ??_stop 001E  
                 __activetblptr 000001                          ?_LED_B 0001                          ?_LED_C 0001  
                        ?_LED_G 0001                          ?_LED_R 0001                 _buggylight_init 5D2A  
                     ??_LED_OFF 0001          _initDCmotors_parameter 4E60                    ?_setMotorPWM 000F  
                        ?_fputc 0001                          ?_fputs 000A                ___awdiv@dividend 0007  
                        ?_putch 0001                          _RC0PPS 000E62                          _RC4REG 000EE3  
                        _RE2PPS 000E74                          _RD5PPS 000E6F                          _RC7PPS 000E69  
                        _RD6PPS 000E70                          i2l5491 001A                          i2l5493 0022  
                        i2l5495 0028                          i2l5489 000A              turnLeft@angle_left 0024  
                     ??_HighISR 0001        __end_of_color_click_init 5B20                          _RX4PPS 000E15  
                        _TX4REG 000EE4                 ??_color_display 005A       __end_of_calibration_motor 4E60  
              __end_of___xxtofl 411E                   ??_Timer0_init 0001                 ??_color_predict 0058  
                  vfprintf@cfmt 0056                          ___flge 4C76                       ??___aodiv 0011  
                     ??___fladd 0009                       ??___aomod 0011                          ___wmul 5BD0  
                     ??___fldiv 0017                       ??___awdiv 000B                       ??___flneg 0005  
                     ??___flmul 0030                          _action 2D2E                       ??___flsub 0019  
                     ??___fltol 0060                          _goback 32C0                   compare@result 0070  
                        _memory 0100                          clear_0 5792                ___awdiv@quotient 000D  
                        _motorL 0131                          _motorR 0128                          isa$std 000001  
                        pad@buf 0013                          _roundf 2302                          dtoa@fp 001C  
                        _strlen 5AB6                       ??_compare 005F                   toggle_light@i 0004  
              __end_of_pin_init 5CB6                          fputc@c 0001         toggle_light@lightnumber 0005  
                        fputs@c 000E                          fputs@i 000F                          fputs@s 000A  
                test_function@m 00E6                  test_function@w 00E8                    __mediumconst 0000  
                        tblptrh 000FF7                          tblptrl 000FF6                          tblptru 000FF8  
              ?_sendCharSerial4 0001                       ??_lroundf 005F                     read_color@m 000C  
                        putch@c 0001                __end_of_vfprintf 557E                          stop@mL 001A  
                        stop@mR 001C               ??_initDCmotorsPWM 0003                    ?_test_action 0032  
                     ??_sprintf 0058                __end_of_turnLeft 45D0                      ___flge@ff1 0001  
                    ___flge@ff2 0005                    ___xxtofl@arg 000B                    ___xxtofl@exp 000A  
                  ___xxtofl@val 0001                calibrate_white@w 000C                 fullSpeedBack@mL 001A  
               fullSpeedBack@mR 001C                      __accesstop 0060         __end_of__initialization 57A2  
                 verify_color@m 0092                   verify_color@w 0094        __end_of_color_read_Clear 576E  
                    ___flneg@f1 0001        __end_of_color_read_Green 56CE          ?_I2C_2_Master_RepStart 0001  
            color_predict@color 00DD    initDCmotors_parameter@motorL 0001    initDCmotors_parameter@motorR 0003  
                 ___rparam_used 000001                      ___fltol@f1 005B                   __end_of_LED_B 5C76  
                 __end_of_LED_C 5C96                   __end_of_LED_G 5C56                   __end_of_LED_R 5C16  
              ?_color_read_Blue 0005                 _Interrupts_init 5D60                  __pcstackCOMRAM 0001  
                 _fullSpeedBack 5308                    __pidataBANK0 5D8A         __end_of_buggylight_init 5D40  
          turnRight@angle_right 0024           _distance_measure$3253 0074                   __end_of_fputc 4FFC  
             detect_color@color 0089                   __end_of_fputs 583E                   __end_of_putch 5D90  
                 __end_of_toint 0E05             __end_of_Timer0_init 5D12                         ??_LED_B 0001  
                       ??_LED_C 0001                         ??_LED_G 0001                         ??_LED_R 0001  
             ?_distance_measure 006A           fullSpeedAhead_test@mL 0020           fullSpeedAhead_test@mR 0022  
            ??_distance_measure 0070                         ??_fputc 0005                         ??_fputs 000E  
                       ??_putch 0001                      __pbssBANK0 00F8                      __pbssBANK1 0100  
           calibration_motor@mL 0036             calibration_motor@mR 0038                color_predict@buf 0079  
     distance_measure@amb_light 006E               _color_writetoaddr 5CB6                    _T2CLKCONbits 000FBF  
                ?_fullSpeedBack 001A                         ?___flge 0001              ?_color_writetoaddr 0003  
                       ?___wmul 0001                         ?_action 003A                         ?_goback 0032  
                       ?_roundf 0041             ??_color_writetoaddr 0004                         ?_strlen 0001  
                       _LED_OFF 5C16                       ?___xxtofl 0001                         _SP4BRGH 000EE6  
                       _SP4BRGL 000EE5                         _PWM6DCH 000FA3                         _PWM7DCH 000FA0  
                       _SSP2ADD 000ED6                         _SSP2BUF 000ED5    amb_light_measure@upper_bound 006E  
            short_burst_back@mL 0020              short_burst_back@mR 0022                    _detect_color 0E14  
 __end_of_color_data_collection 42B4         __end_of_Interrupts_init 5D6C          color_writetoaddr@value 0003  
              ??_color_read_Red 0007                         _HighISR 0008       __end_of_color_writetoaddr 5CD6  
            _I2C_2_Master_Start 5D80                      _initUSART4 5CD6              _I2C_2_Master_Write 5D54  
           _fullSpeedAhead_test 5904                       ?_pin_init 0001                         __Hparam 0000  
         test_function@complete 00F2                         __Lparam 0000               color_read_Red@tmp 000A  
                   _Timer0_init 5CF4         sendStringSerial4@string 0002                         ___aodiv 475A  
                       ___fladd 1A18                         ___aomod 48E2                         ___fldiv 26B0  
                       ___awdiv 5188                         ___flneg 5A7E                         ___flmul 1ED8  
                       ___flsub 57B4                         ___fltol 4B6E             ?_I2C_2_Master_Start 0001  
              ?_buggylight_init 0001             ?_I2C_2_Master_Write 0001                       ?_vfprintf 0050  
                  __psmallconst 0E00       distance_measure@threshold 007A                         __pcinit 576E  
                       __ramtop 0E00                      _read_color 557E                       ?_turnLeft 0020  
                       __ptext0 2FFA                         __ptext1 5430                         __ptext2 45D0  
                       __ptext3 4FFC                         __ptext4 0E14                         __ptext5 5A0A  
                       __ptext6 411E                         __ptext7 557E                         __ptext8 5B50  
                       __ptext9 54AC                         _compare 5A0A         ?_initDCmotors_parameter 0001  
                     _T2CONbits 000FBD            ?_fullSpeedAhead_test 0020                      ??___xxtofl 0005  
                     _T2HLTbits 000FBE                         _lroundf 5A44                         goback@i 0038  
        distance_measure@CC_amb 0078                         main@amb 016A          distance_measure@CG_amb 0072  
                       _sprintf 55DC                         main@rgb 0176            ??_I2C_2_Master_Start 0002  
          ??_I2C_2_Master_Write 0002            end_of_initialization 57A2              setMotorPWM@PWMduty 0018  
               _CALIBRATION_135 00FE                 _CALIBRATION_180 00FD                         fputc@fp 0003  
         __end_of_test_function 475A                         fputs@fp 000C               ?_color_click_init 0001  
               test_function@mL 00EA                 test_function@mR 00EC                 ??_fullSpeedBack 001E  
                    ??_pin_init 0001              ??_color_click_init 0005                _short_burst_back 5880  
             __end_of_vfpfcnvrt 3F6A           __end_of_short_reverse 5988                         postdec1 000FE5  
                       postdec2 000FDD                         postinc0 000FEE                         postinc1 000FE6  
                       postinc2 000FDE                         roundf@e 004D                         roundf@u 0053  
                       roundf@x 0041                         roundf@y 0057                      ??_vfprintf 0056  
                       strlen@a 0003                         strlen@s 0001                 _initDCmotorsPWM 58C2  
                    ??_turnLeft 0025  __end_of_initDCmotors_parameter 4F32                       _PORTFbits 000F8E  
      test_function@stop_signal 00F4           ??_fullSpeedAhead_test 0024                      _setup_init 5D40  
             __end_of_turnRight 4442                     ___fladd@grs 0010                   ___xxtofl@sign 0009  
                     _TRISAbits 000F81                       _TRISCbits 000F83                       _TRISDbits 000F84  
                     _TRISEbits 000F85                       _TRISFbits 000F86                       _TRISGbits 000F87  
                     _TRISHbits 000F88                     ___fldiv@grs 0022                     ___fldiv@rem 001B  
              fullSpeedAhead@mL 001A                fullSpeedAhead@mR 001C        color_writetoaddr@address 0004  
       ??_I2C_2_Master_RepStart 0002                      _start_move 0144                ?_Interrupts_init 0001  
                   ___flmul@grs 0035                   ?_toggle_light 0001               ?_color_read_Clear 0005  
             ?_color_read_Green 0005                     ?_initUSART4 0001       sendCharSerial4@charToSend 0001  
                 ?_verify_color 0092           __end_of_color_display 551C                      main@motorL 019A  
                    main@motorR 01A3     amb_light_measure@CC_amb_ave 0070               ??_calibrate_white 000E  
            ??_color_read_Clear 0007                  color_display@m 0058              ??_color_read_Green 0007  
                detect_color@BB 007F                  detect_color@BC 007B                  detect_color@BG 008C  
                detect_color@GB 0083                  detect_color@GG 0087                  detect_color@BR 0085  
                detect_color@GR 007D                  detect_color@RB 0081                  detect_color@RG 0079  
                detect_color@RR 008A           __end_of_color_predict 5B7E                  __end_of___flge 4D7A  
                _fullSpeedAhead 539C                     vfpfcnvrt@ap 0044                     vfpfcnvrt@fp 0040  
                   vfpfcnvrt@ll 0048                  __end_of___wmul 5BF6                  __end_of_action 2FFA  
                   ?_read_color 000C                  __end_of_goback 3570                  __end_of_roundf 26B0  
            turnRight@delay_135 0026              turnRight@delay_180 0028                  __end_of_strlen 5AEC  
           color_read_Clear@tmp 000A             start_initialization 576E                     __end_of_abs 5A0A  
                   __end_of_pad 5188               turnLeft@delay_135 0026               turnLeft@delay_180 0028  
                ??_toggle_light 0002                  ??_verify_color 0096             color_read_Green@tmp 000A  
                _reverse_square 5988         __end_of_initDCmotorsPWM 5904                     vfprintf@fmt 0052  
        __end_of_fullSpeedAhead 5430                        ??___flge 0009                        ??___wmul 0005  
                      ??_action 003E                        ??_goback 0036                 short_reverse@mL 0020  
               short_reverse@mR 0022                     __pdataBANK0 00FC                        ??_roundf 0045  
                      ??_strlen 0003                       ___fladd@a 0005                       ___fladd@b 0001  
                   ?_setup_init 0001                        ?_LED_OFF 0001                       ___fldiv@a 0013  
                     ___fldiv@b 000F                       ___flmul@a 002C                       ___flmul@b 0028  
                     ___flsub@a 0015                       ___flsub@b 0011                   __pcstackBANK0 0060  
                 __pcstackBANK1 016A                ___aodiv@dividend 0001                        ?_HighISR 0001  
        __end_of_reverse_square 59CA                       _dtoa$2916 002E                    ?_Timer0_init 0001  
               ?_fullSpeedAhead 001A                       __pintcode 0008                        ?___aodiv 0001  
                      ?___fladd 0001                        ?___aomod 0001                        ?___fldiv 000F  
                      ?___awdiv 0007                ___aodiv@quotient 0013                        ?___flneg 0001  
                      ?___flmul 0028                        ?___flsub 0011                        ?___fltol 005B  
            test_function@color 00F3                 turnRight@i_1332 002C                 turnRight@i_1333 002E  
                   _centisecond 0146                  turnLeft@i_1310 002E                  turnLeft@i_1309 002C  
          I2C_2_Master_Read@ack 0003            I2C_2_Master_Read@tmp 0004                        ?_compare 006A  
                   __smallconst 0E00               _I2C_2_Master_Idle 5BA8               _I2C_2_Master_Init 5B7E  
             _I2C_2_Master_Read 583E               _I2C_2_Master_Stop 5D76          toggle_light@toggletime 0001  
      __end_of_short_burst_back 58C2                        ?_lroundf 0066              ?_I2C_2_Master_Idle 0001  
            ?_I2C_2_Master_Init 0001              ?_I2C_2_Master_Read 0001                   ??_setMotorPWM 0011  
            ?_I2C_2_Master_Stop 0001        initDCmotorsPWM@PWMperiod 0001                        ?_sprintf 0060  
             _sendStringSerial4 5B20           _color_data_collection 411E             ??_I2C_2_Master_Idle 0001  
           ??_I2C_2_Master_Init 0001             ??_I2C_2_Master_Read 0002                  ___wmul@product 0005  
                      _LATAbits 000F79             ??_I2C_2_Master_Stop 0002                        _LATCbits 000F7B  
                      _LATDbits 000F7C                        _LATEbits 000F7D                        _LATFbits 000F7E  
                      _LATGbits 000F7F                        _LATHbits 000F80                 ?_reverse_square 0020  
                      _PIE0bits 000E29              ?_sendStringSerial4 0002                     turnRight@mL 0020  
                   turnRight@mR 0022                        _PIR0bits 000E33                        _PIR4bits 000E37  
                      i2u577_40 001A                        i2u577_41 0016                ?_initDCmotorsPWM 0001  
             ??_sendCharSerial4 0001                        _SSP2CON2 000EDA             ??_sendStringSerial4 0004  
                      _SSP2STAT 000ED8                     _array_index 0149                       _vfpfcnvrt 3DB4  
     __end_of_I2C_2_Master_Idle 5BD0            __end_of_toggle_light 381C       __end_of_I2C_2_Master_Init 5BA8  
     __end_of_I2C_2_Master_Read 5880               ___wmul@multiplier 0001       __end_of_I2C_2_Master_Stop 5D80  
                  setMotorPWM@m 000F     I2C_2_Master_Write@data_byte 0002            __end_of_verify_color 54AC  
        test_function@amb_light 00F0                       main@setup 0174                       main@white 017E  
             ??_color_read_Blue 0007                       _stop_move 0142                   detect_color@m 0071  
                 detect_color@w 0073                       _turnRight 42B4                   ??_test_action 0036  
               _calibrate_white 381C       __end_of_sendStringSerial4 5B50               _amb_light_measure 4A46  
 __end_of_I2C_2_Master_RepStart 5D76              color_read_Blue@tmp 000A             __end_of_setMotorPWM 3BFA  
                    roundf@F527 013A                _distance_measure 4FFC                    ??_initUSART4 0001  
            ?_amb_light_measure 006A                        __Hrparam 0000                      vfprintf@ap 0054  
                      __Lrparam 0000                      vfprintf@fp 0050           __end_of_fullSpeedBack 539C  
                  __Lsmallconst 0E00            compare@value2compare 006C             ??_amb_light_measure 006C  
   __end_of_fullSpeedAhead_test 5946                      ?_vfpfcnvrt 0040                    ??_read_color 000E  
               ___aodiv@divisor 0009                 ___aodiv@counter 0011                      _ANSELDbits 000EA7  
                    _ANSELFbits 000EB4                     action@color 003E                      sprintf@fmt 0062  
                      ___xxtofl 3F6A                      _T0CON0bits 000FD5                      _T0CON1bits 000FD6  
            __end_of_initUSART4 5CF4                      ?_turnRight 0020                        __ptext10 55DC  
                      __ptext11 551C                        __ptext20 48E2                        __ptext12 3DB4  
                      __ptext21 475A                        __ptext13 2A4A                        __ptext30 5C36  
                      __ptext22 5B20                        __ptext14 50C2                        __ptext31 5C56  
                      __ptext23 5D12                        __ptext15 5AB6                        __ptext40 4B6E  
                      __ptext32 4A46                        __ptext24 381C                        __ptext16 57FA  
                      __ptext41 571E                        __ptext33 5A44                        __ptext25 562E  
                      __ptext17 4F32                        __ptext50 5CD6                        __ptext42 5D6C  
                      __ptext34 2302                        __ptext26 567E                        __ptext18 5D8E  
                      __ptext51 4E60                        __ptext43 583E                        __ptext35 57B4  
                      __ptext27 56CE                        __ptext19 59CA                        __ptext60 4D7A  
                      __ptext52 58C2                        __ptext44 3F6A                        __ptext36 1A18  
                      __ptext28 5BF6                        __ptext61 3BFA                        __ptext53 5AEC  
                      __ptext45 26B0                        __ptext37 5A7E                        __ptext29 5C16  
                      __ptext70 5988                        __ptext62 5904                        __ptext54 5CB6  
                      __ptext46 5C76                        __ptext38 1ED8                        __ptext71 524C  
                      __ptext63 5D2A                        __ptext55 5D54                        __ptext47 5880  
                      __ptext39 4C76                        __ptext72 5308                        __ptext64 2D2E  
                      __ptext56 5D76                        __ptext48 5D40                        __ptext73 539C  
                      __ptext65 3570                        __ptext57 5D80                        __ptext49 5C96  
                      __ptext74 3A26                        __ptext66 5946                        __ptext58 5BA8  
                      __ptext75 5BD0                        __ptext67 32C0                        __ptext59 5B7E  
                      __ptext76 5188                        __ptext68 42B4                        __ptext77 5CF4  
                      __ptext69 4442                        __ptext78 5D60       __end_of_amb_light_measure 4B6E  
                  _SSP2CON1bits 000ED9                    _SSP2CON2bits 000EDA          ?_color_data_collection 005A  
                turnRight@delay 0030          test_function@test_code 00F5                   turnLeft@delay 0030  
                      action@mL 003A                        action@mR 003C                      turnLeft@mL 0020  
                    turnLeft@mR 0022             __end_of_test_action 3DB4              __end_of_read_color 55DC  
                      _pin_init 5C96                      turnRight@i 002A                        isa$xinst 000000  
          distance_measure@stop 007C                      _RC4STAbits 000EE7                        int$flags 005F  
                   _SENSITIVITY 00FC                        goback@mL 0032                        goback@mR 0034  
                      _vfprintf 551C                        _turnLeft 4442                ___aomod@dividend 0001  
                  ??_setup_init 0001         __end_of_calibrate_white 3A26                      _INTCONbits 000FF2  
                   _setMotorPWM 3A26                   ?_detect_color 0071                     _PWM6CONbits 000FA4  
                   _PWM7CONbits 000FA1                        intlevel2 0000                       sprintf@ap 006C  
             ??_buggylight_init 0001                ??_fullSpeedAhead 001E                   _test_function 45D0  
                     turnLeft@i 002A                reverse_square@mL 0020                reverse_square@mR 0022  
            __end_of_setup_init 5D54                        lroundf@x 0066        ??_initDCmotors_parameter 0005  
                 _short_reverse 5946                 ___aomod@divisor 0009                     ??_vfpfcnvrt 0046  
               ___aomod@counter 0011                _color_click_init 5AEC                        sprintf@f 006E  
                      sprintf@s 0060               _detect_color$3252 008E                      _SSP2DATPPS 000E1D  
                    _SSP2CLKPPS 000E1C              distance_measure@mL 006A              distance_measure@mR 006C  
                ??_detect_color 0075                     ??_turnRight 0025               ?_short_burst_back 0020  
                   _test_action 3BFA                   ___fladd@signs 000D                ??_reverse_square 0024  
                    _TX4STAbits 000EE8                    ___aodiv@sign 0012              ??_short_burst_back 0024  
               _sendCharSerial4 5D12                    ___fladd@aexp 000E                    ___fladd@bexp 000F  
                ?_test_function 00E6                    _toggle_light 3570                    ___aomod@sign 0012  
                  _verify_color 5430                     _roundf$3254 004F                     _roundf$3255 0049  
                 _color_display 54AC                 main@stop_signal 0175  
