

Microchip MPLAB XC8 Assembler V2.35 build 20211206165544 
                                                                                               Fri Mar 11 18:42:30 2022

Microchip MPLAB XC8 C Compiler v2.35 (Free license) build 20211206165544 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=3
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=3
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=3
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=3
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=3
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1
    54                           	psect	text39,global,reloc=2,class=CODE,delta=1
    55                           	psect	text40,global,reloc=2,class=CODE,delta=1
    56                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=3
    57                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=3
    58                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=2
    59                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=2
    60                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=2
    61                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=2
    62                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=2
    63                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=2
    64                           	psect	text49,global,reloc=2,class=CODE,delta=1
    65                           	psect	text50,global,reloc=2,class=CODE,delta=1
    66                           	psect	text51,global,reloc=2,class=CODE,delta=1
    67                           	psect	text52,global,reloc=2,class=CODE,delta=1
    68                           	psect	text53,global,reloc=2,class=CODE,delta=1
    69                           	psect	text54,global,reloc=2,class=CODE,delta=1
    70                           	psect	text55,global,reloc=2,class=CODE,delta=1
    71                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=2
    72                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=2
    73                           	psect	text58,global,reloc=2,class=CODE,delta=1
    74                           	psect	text59,global,reloc=2,class=CODE,delta=1
    75                           	psect	text60,global,reloc=2,class=CODE,delta=1
    76                           	psect	text61,global,reloc=2,class=CODE,delta=1
    77                           	psect	text62,global,reloc=2,class=CODE,delta=1
    78                           	psect	text63,global,reloc=2,class=CODE,delta=1
    79                           	psect	text64,global,reloc=2,class=CODE,delta=1
    80                           	psect	text65,global,reloc=2,class=CODE,delta=1
    81                           	psect	text66,global,reloc=2,class=CODE,delta=1
    82                           	psect	text67,global,reloc=2,class=CODE,delta=1
    83                           	psect	text68,global,reloc=2,class=CODE,delta=1
    84                           	psect	text69,global,reloc=2,class=CODE,delta=1,group=2
    85                           	psect	text70,global,reloc=2,class=CODE,delta=1,group=2
    86                           	psect	text71,global,reloc=2,class=CODE,delta=1
    87                           	psect	text72,global,reloc=2,class=CODE,delta=1
    88                           	psect	text73,global,reloc=2,class=CODE,delta=1
    89                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    90                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    91                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    92                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    93                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    94                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    95                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    96                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    97  0000                     
    98                           ; Version 2.35
    99                           ; Generated 05/05/2021 GMT
   100                           ; 
   101                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
   102                           ; All rights reserved.
   103                           ; 
   104                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   105                           ; 
   106                           ; Redistribution and use in source and binary forms, with or without modification, are
   107                           ; permitted provided that the following conditions are met:
   108                           ; 
   109                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   110                           ;        conditions and the following disclaimer.
   111                           ; 
   112                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   113                           ;        of conditions and the following disclaimer in the documentation and/or other
   114                           ;        materials provided with the distribution. Publication is not required when
   115                           ;        this file is used in an embedded application.
   116                           ; 
   117                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   118                           ;        software without specific prior written permission.
   119                           ; 
   120                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   121                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   122                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   123                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   124                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   125                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   126                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   127                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   128                           ; 
   129                           ; 
   130                           ; Code-generator required, PIC18F67K40 Definitions
   131                           ; 
   132                           ; SFR Addresses
   133  0000                     
   134                           	psect	idataBANK0
   135  005810                     __pidataBANK0:
   136                           	callstack 0
   137                           
   138                           ;initializer for _SENSITIVITY
   139  005810  0A                 	db	10
   140                           
   141                           ;initializer for _CALIBRATION_180
   142  005811  14                 	db	20
   143                           
   144                           ;initializer for _CALIBRATION_135
   145  005812  0A                 	db	10
   146                           
   147                           	psect	smallconst
   148  000E00                     __psmallconst:
   149                           	callstack 0
   150  000E00  00                 	db	0
   151  000E01  0000               	dw	0
   152  000E03  4B00               	dw	19200
   153  000E05                     __end_of_toint:
   154                           	callstack 0
   155  0000                     _TX4REG	set	3812
   156  0000                     _RC4STAbits	set	3815
   157  0000                     _SP4BRGH	set	3814
   158  0000                     _LATEbits	set	3965
   159  0000                     _TRISGbits	set	3975
   160  0000                     _TRISEbits	set	3973
   161  0000                     _LATGbits	set	3967
   162  0000                     _LATFbits	set	3966
   163  0000                     _TRISFbits	set	3974
   164  0000                     _SSP2CON2bits	set	3802
   165  0000                     _LATG	set	3967
   166  0000                     _LATE	set	3965
   167  0000                     _RX4PPS	set	3605
   168  0000                     _SSP2CLKPPS	set	3612
   169  0000                     _SSP2DATPPS	set	3613
   170  0000                     _ANSELDbits	set	3751
   171  0000                     _SSP2ADD	set	3798
   172  0000                     _SSP2CON1bits	set	3801
   173  0000                     _LATAbits	set	3961
   174  0000                     _LATDbits	set	3964
   175  0000                     _LATHbits	set	3968
   176  0000                     _TRISDbits	set	3972
   177  0000                     _TRISHbits	set	3976
   178  0000                     _PORTFbits	set	3982
   179  0000                     _T2PR	set	4028
   180  0000                     _T2CONbits	set	4029
   181  0000                     _PWM7DCH	set	4000
   182  0000                     _PWM6DCH	set	4003
   183  0000                     _TRISAbits	set	3969
   184  0000                     _TRISCbits	set	3971
   185  0000                     _LATCbits	set	3963
   186  0000                     _RC4REG	set	3811
   187  0000                     _SP4BRGL	set	3813
   188  0000                     _TX4STAbits	set	3816
   189  0000                     _BAUD4CONbits	set	3817
   190  0000                     _SSP2CON2	set	3802
   191  0000                     _SSP2STAT	set	3800
   192  0000                     _ANSELFbits	set	3764
   193  0000                     _SSP2BUF	set	3797
   194  0000                     _PIE0bits	set	3625
   195  0000                     _PIE4bits	set	3629
   196  0000                     _PIR4bits	set	3639
   197  0000                     _RC0PPS	set	3682
   198  0000                     _RC7PPS	set	3689
   199  0000                     _RD5PPS	set	3695
   200  0000                     _RE2PPS	set	3700
   201  0000                     _RD6PPS	set	3696
   202  0000                     _TMR0L	set	4051
   203  0000                     _TMR0H	set	4052
   204  0000                     _T0CON0bits	set	4053
   205  0000                     _T2CLKCONbits	set	4031
   206  0000                     _T2HLTbits	set	4030
   207  0000                     _PWM6CONbits	set	4004
   208  0000                     _PWM7CONbits	set	4001
   209  0000                     _PIR0bits	set	3635
   210  0000                     _T0CON1bits	set	4054
   211  0000                     _INTCONbits	set	4082
   212  000E05                     STR_1:
   213  000E05  25                 	db	37
   214  000E06  64                 	db	100	;'d'
   215  000E07  09                 	db	9
   216  000E08  25                 	db	37
   217  000E09  64                 	db	100	;'d'
   218  000E0A  09                 	db	9
   219  000E0B  25                 	db	37
   220  000E0C  64                 	db	100	;'d'
   221  000E0D  09                 	db	9
   222  000E0E  25                 	db	37
   223  000E0F  64                 	db	100	;'d'
   224  000E10  0D                 	db	13
   225  000E11  0A                 	db	10
   226  000E12  00                 	db	0
   227  000E13  00                 	db	0	; dummy byte at the end
   228  0000                     
   229                           ; #config settings
   230                           
   231                           	psect	cinit
   232  005282                     __pcinit:
   233                           	callstack 0
   234  005282                     start_initialization:
   235                           	callstack 0
   236  005282                     __initialization:
   237                           	callstack 0
   238                           
   239                           ; Initialize objects allocated to BANK0 (3 bytes)
   240                           ; load TBLPTR registers with __pidataBANK0
   241  005282  0E10               	movlw	low __pidataBANK0
   242  005284  6EF6               	movwf	tblptrl,c
   243  005286  0E58               	movlw	high __pidataBANK0
   244  005288  6EF7               	movwf	tblptrh,c
   245  00528A  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   246  00528C  6EF8               	movwf	tblptru,c
   247  00528E  0009               	tblrd		*+	;fetch initializer
   248  005290  CFF5 F0FC          	movff	tablat,__pdataBANK0
   249  005294  0009               	tblrd		*+	;fetch initializer
   250  005296  CFF5 F0FD          	movff	tablat,__pdataBANK0+1
   251  00529A  0009               	tblrd		*+	;fetch initializer
   252  00529C  CFF5 F0FE          	movff	tablat,__pdataBANK0+2
   253                           
   254                           ; Clear objects allocated to BANK1 (177 bytes)
   255  0052A0  EE01  F000         	lfsr	0,__pbssBANK1
   256  0052A4  0EB1               	movlw	177
   257  0052A6                     clear_0:
   258  0052A6  6AEE               	clrf	postinc0,c
   259  0052A8  06E8               	decf	wreg,f,c
   260  0052AA  E1FD               	bnz	clear_0
   261                           
   262                           ; Clear objects allocated to BANK0 (17 bytes)
   263  0052AC  EE00  F0EB         	lfsr	0,__pbssBANK0
   264  0052B0  0E11               	movlw	17
   265  0052B2                     clear_1:
   266  0052B2  6AEE               	clrf	postinc0,c
   267  0052B4  06E8               	decf	wreg,f,c
   268  0052B6  E1FD               	bnz	clear_1
   269                           
   270                           ; Clear objects allocated to COMRAM (2 bytes)
   271  0052B8  6A5B               	clrf	(__pbssCOMRAM+1)& (0+255),c
   272  0052BA  6A5A               	clrf	__pbssCOMRAM& (0+255),c
   273  0052BC                     end_of_initialization:
   274                           	callstack 0
   275  0052BC                     __end_of__initialization:
   276                           	callstack 0
   277  0052BC  905C               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   278  0052BE  925C               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   279  0052C0  0E00               	movlw	low (__Lsmallconst shr (0+16))
   280  0052C2  6EF8               	movwf	tblptru,c
   281  0052C4  0E0E               	movlw	high __Lsmallconst
   282  0052C6  6EF7               	movwf	tblptrh,c
   283  0052C8  0100               	movlb	0
   284  0052CA  EF08  F01F         	goto	_main	;jump to C main() function
   285                           
   286                           	psect	bssCOMRAM
   287  00005A                     __pbssCOMRAM:
   288                           	callstack 0
   289  00005A                     _array_index:
   290                           	callstack 0
   291  00005A                     	ds	1
   292  00005B                     _TxBufWriteCnt:
   293                           	callstack 0
   294  00005B                     	ds	1
   295                           
   296                           	psect	bssBANK0
   297  0000EB                     __pbssBANK0:
   298                           	callstack 0
   299  0000EB                     _nout:
   300                           	callstack 0
   301  0000EB                     	ds	2
   302  0000ED                     _width:
   303                           	callstack 0
   304  0000ED                     	ds	2
   305  0000EF                     _prec:
   306                           	callstack 0
   307  0000EF                     	ds	2
   308  0000F1                     _flags:
   309                           	callstack 0
   310  0000F1                     	ds	2
   311  0000F3                     _stop_move:
   312                           	callstack 0
   313  0000F3                     	ds	2
   314  0000F5                     _start_move:
   315                           	callstack 0
   316  0000F5                     	ds	2
   317  0000F7                     _second:
   318                           	callstack 0
   319  0000F7                     	ds	2
   320  0000F9                     _TxBufReadCnt:
   321                           	callstack 0
   322  0000F9                     	ds	1
   323  0000FA                     _RxBufReadCnt:
   324                           	callstack 0
   325  0000FA                     	ds	1
   326  0000FB                     _RxBufWriteCnt:
   327                           	callstack 0
   328  0000FB                     	ds	1
   329                           
   330                           	psect	dataBANK0
   331  0000FC                     __pdataBANK0:
   332                           	callstack 0
   333  0000FC                     _SENSITIVITY:
   334                           	callstack 0
   335  0000FC                     	ds	1
   336  0000FD                     _CALIBRATION_180:
   337                           	callstack 0
   338  0000FD                     	ds	1
   339  0000FE                     _CALIBRATION_135:
   340                           	callstack 0
   341  0000FE                     	ds	1
   342                           
   343                           	psect	bssBANK1
   344  000100                     __pbssBANK1:
   345                           	callstack 0
   346  000100                     _EUSART4TXbuf:
   347                           	callstack 0
   348  000100                     	ds	60
   349  00013C                     _memory:
   350                           	callstack 0
   351  00013C                     	ds	40
   352  000164                     _EUSART4RXbuf:
   353                           	callstack 0
   354  000164                     	ds	20
   355  000178                     _motorR:
   356                           	callstack 0
   357  000178                     	ds	10
   358  000182                     _motorL:
   359                           	callstack 0
   360  000182                     	ds	10
   361  00018C                     roundf@F527:
   362                           	callstack 0
   363  00018C                     	ds	4
   364  000190                     _color:
   365                           	callstack 0
   366  000190                     	ds	1
   367  000191                     _dbuf:
   368                           	callstack 0
   369  000191                     	ds	32
   370                           
   371                           	psect	cstackBANK1
   372  0001B1                     __pcstackBANK1:
   373                           	callstack 0
   374  0001B1                     ??_main:
   375                           
   376                           ; 1 bytes @ 0x0
   377  0001B1                     	ds	2
   378  0001B3                     main@amb:
   379                           	callstack 0
   380                           
   381                           ; 8 bytes @ 0x2
   382  0001B3                     	ds	8
   383  0001BB                     main@amb_light:
   384                           	callstack 0
   385                           
   386                           ; 2 bytes @ 0xA
   387  0001BB                     	ds	2
   388  0001BD                     main@stop_signal:
   389                           	callstack 0
   390                           
   391                           ; 1 bytes @ 0xC
   392  0001BD                     	ds	1
   393  0001BE                     main@rgb:
   394                           	callstack 0
   395                           
   396                           ; 8 bytes @ 0xD
   397  0001BE                     	ds	8
   398  0001C6                     main@white:
   399                           	callstack 0
   400                           
   401                           ; 26 bytes @ 0x15
   402  0001C6                     	ds	26
   403  0001E0                     main@motorL:
   404                           	callstack 0
   405                           
   406                           ; 10 bytes @ 0x2F
   407  0001E0                     	ds	10
   408  0001EA                     main@motorR:
   409                           	callstack 0
   410                           
   411                           ; 10 bytes @ 0x39
   412  0001EA                     	ds	10
   413                           
   414                           	psect	cstackBANK0
   415  000060                     __pcstackBANK0:
   416                           	callstack 0
   417  000060                     ?_sprintf:
   418                           	callstack 0
   419  000060                     sprintf@s:
   420                           	callstack 0
   421  000060                     _roundf$3192:
   422                           	callstack 0
   423                           
   424                           ; 4 bytes @ 0x0
   425  000060                     	ds	2
   426  000062                     sprintf@fmt:
   427                           	callstack 0
   428                           
   429                           ; 2 bytes @ 0x2
   430  000062                     	ds	2
   431  000064                     roundf@e:
   432                           	callstack 0
   433                           
   434                           ; 2 bytes @ 0x4
   435  000064                     	ds	2
   436  000066                     _roundf$3191:
   437                           	callstack 0
   438                           
   439                           ; 4 bytes @ 0x6
   440  000066                     	ds	4
   441  00006A                     roundf@u:
   442                           	callstack 0
   443                           
   444                           ; 4 bytes @ 0xA
   445  00006A                     	ds	2
   446  00006C                     sprintf@ap:
   447                           	callstack 0
   448                           
   449                           ; 2 bytes @ 0xC
   450  00006C                     	ds	2
   451  00006E                     roundf@y:
   452                           	callstack 0
   453  00006E                     sprintf@f:
   454                           	callstack 0
   455                           
   456                           ; 11 bytes @ 0xE
   457  00006E                     	ds	4
   458  000072                     ?___fltol:
   459                           	callstack 0
   460  000072                     ___fltol@f1:
   461                           	callstack 0
   462                           
   463                           ; 4 bytes @ 0x12
   464  000072                     	ds	4
   465  000076                     ?_lroundf:
   466                           	callstack 0
   467  000076                     lroundf@x:
   468                           	callstack 0
   469                           
   470                           ; 4 bytes @ 0x16
   471  000076                     	ds	3
   472  000079                     color_display@m:
   473                           	callstack 0
   474  000079                     color_predict@buf:
   475                           	callstack 0
   476                           
   477                           ; 100 bytes @ 0x19
   478  000079                     	ds	1
   479  00007A                     ?_amb_light_measure:
   480                           	callstack 0
   481  00007A                     compare@lower:
   482                           	callstack 0
   483  00007A                     amb_light_measure@amb:
   484                           	callstack 0
   485  00007A                     distance_measure@mL:
   486                           	callstack 0
   487                           
   488                           ; 2 bytes @ 0x1A
   489  00007A                     	ds	1
   490  00007B                     color_display@buf:
   491                           	callstack 0
   492                           
   493                           ; 100 bytes @ 0x1B
   494  00007B                     	ds	1
   495  00007C                     compare@value2compare:
   496                           	callstack 0
   497  00007C                     amb_light_measure@upper_bound:
   498                           	callstack 0
   499  00007C                     distance_measure@mR:
   500                           	callstack 0
   501                           
   502                           ; 2 bytes @ 0x1C
   503  00007C                     	ds	2
   504  00007E                     compare@upper:
   505                           	callstack 0
   506  00007E                     amb_light_measure@CC_amb_ave:
   507                           	callstack 0
   508  00007E                     distance_measure@amb_light:
   509                           	callstack 0
   510                           
   511                           ; 2 bytes @ 0x1E
   512  00007E                     	ds	2
   513  000080                     detect_color@m:
   514                           	callstack 0
   515  000080                     amb_light_measure@CC_amb_1:
   516                           	callstack 0
   517  000080                     distance_measure@CG_amb:
   518                           	callstack 0
   519                           
   520                           ; 2 bytes @ 0x20
   521  000080                     	ds	2
   522  000082                     detect_color@w:
   523                           	callstack 0
   524  000082                     amb_light_measure@CC_amb_2:
   525                           	callstack 0
   526  000082                     _distance_measure$3190:
   527                           	callstack 0
   528                           
   529                           ; 4 bytes @ 0x22
   530  000082                     	ds	2
   531  000084                     detect_color@RB:
   532                           	callstack 0
   533  000084                     amb_light_measure@CC_amb_3:
   534                           	callstack 0
   535                           
   536                           ; 2 bytes @ 0x24
   537  000084                     	ds	2
   538  000086                     detect_color@GB:
   539                           	callstack 0
   540  000086                     distance_measure@CC_amb:
   541                           	callstack 0
   542                           
   543                           ; 2 bytes @ 0x26
   544  000086                     	ds	2
   545  000088                     detect_color@GC:
   546                           	callstack 0
   547  000088                     distance_measure@threshold:
   548                           	callstack 0
   549                           
   550                           ; 2 bytes @ 0x28
   551  000088                     	ds	2
   552  00008A                     distance_measure@stop:
   553                           	callstack 0
   554  00008A                     detect_color@RG:
   555                           	callstack 0
   556                           
   557                           ; 2 bytes @ 0x2A
   558  00008A                     	ds	2
   559  00008C                     detect_color@GR:
   560                           	callstack 0
   561                           
   562                           ; 2 bytes @ 0x2C
   563  00008C                     	ds	2
   564  00008E                     detect_color@GG:
   565                           	callstack 0
   566                           
   567                           ; 2 bytes @ 0x2E
   568  00008E                     	ds	2
   569  000090                     detect_color@RR:
   570                           	callstack 0
   571                           
   572                           ; 2 bytes @ 0x30
   573  000090                     	ds	2
   574  000092                     detect_color@BR:
   575                           	callstack 0
   576                           
   577                           ; 2 bytes @ 0x32
   578  000092                     	ds	2
   579  000094                     detect_color@BB:
   580                           	callstack 0
   581                           
   582                           ; 2 bytes @ 0x34
   583  000094                     	ds	2
   584  000096                     detect_color@color:
   585                           	callstack 0
   586                           
   587                           ; 1 bytes @ 0x36
   588  000096                     	ds	1
   589  000097                     detect_color@BG:
   590                           	callstack 0
   591                           
   592                           ; 2 bytes @ 0x37
   593  000097                     	ds	2
   594  000099                     _detect_color$3189:
   595                           	callstack 0
   596                           
   597                           ; 4 bytes @ 0x39
   598  000099                     	ds	4
   599  00009D                     verify_color@m:
   600                           	callstack 0
   601                           
   602                           ; 2 bytes @ 0x3D
   603  00009D                     	ds	2
   604  00009F                     verify_color@w:
   605                           	callstack 0
   606                           
   607                           ; 2 bytes @ 0x3F
   608  00009F                     	ds	2
   609  0000A1                     verify_color@color3:
   610                           	callstack 0
   611                           
   612                           ; 2 bytes @ 0x41
   613  0000A1                     	ds	2
   614  0000A3                     verify_color@color2:
   615                           	callstack 0
   616                           
   617                           ; 2 bytes @ 0x43
   618  0000A3                     	ds	2
   619  0000A5                     verify_color@color:
   620                           	callstack 0
   621                           
   622                           ; 1 bytes @ 0x45
   623  0000A5                     	ds	56
   624  0000DD                     color_predict@color:
   625                           	callstack 0
   626                           
   627                           ; 1 bytes @ 0x7D
   628  0000DD                     	ds	2
   629  0000DF                     color_data_collection@m:
   630                           	callstack 0
   631                           
   632                           ; 2 bytes @ 0x7F
   633  0000DF                     	ds	2
   634  0000E1                     ??_color_data_collection:
   635                           
   636                           ; 1 bytes @ 0x81
   637  0000E1                     	ds	2
   638  0000E3                     color_data_collection@i:
   639                           	callstack 0
   640                           
   641                           ; 2 bytes @ 0x83
   642  0000E3                     	ds	2
   643  0000E5                     color_data_collection@j:
   644                           	callstack 0
   645                           
   646                           ; 2 bytes @ 0x85
   647  0000E5                     	ds	2
   648  0000E7                     color_data_collection@k:
   649                           	callstack 0
   650                           
   651                           ; 2 bytes @ 0x87
   652  0000E7                     	ds	2
   653  0000E9                     color_data_collection@x:
   654                           	callstack 0
   655                           
   656                           ; 2 bytes @ 0x89
   657  0000E9                     	ds	2
   658                           
   659                           	psect	cstackCOMRAM
   660  000001                     __pcstackCOMRAM:
   661                           	callstack 0
   662  000001                     ??_LowISR:
   663  000001                     
   664                           ; 1 bytes @ 0x0
   665  000001                     	ds	2
   666  000003                     ??_LED_OFF:
   667  000003                     ??_LED_R:
   668  000003                     ??_LED_C:
   669  000003                     ??_LED_B:
   670  000003                     ??_LED_G:
   671  000003                     ??_I2C_2_Master_Idle:
   672  000003                     ?_strlen:
   673                           	callstack 0
   674  000003                     ?___wmul:
   675                           	callstack 0
   676  000003                     ?___fladd:
   677                           	callstack 0
   678  000003                     ?___flneg:
   679                           	callstack 0
   680  000003                     ?___xxtofl:
   681                           	callstack 0
   682  000003                     ?___aodiv:
   683                           	callstack 0
   684  000003                     ?___aomod:
   685                           	callstack 0
   686  000003                     toggle_light@toggletime:
   687                           	callstack 0
   688  000003                     sendCharSerial4@charToSend:
   689                           	callstack 0
   690  000003                     initDCmotorsPWM@PWMperiod:
   691                           	callstack 0
   692  000003                     initDCmotors_parameter@motorL:
   693                           	callstack 0
   694  000003                     ___wmul@multiplier:
   695                           	callstack 0
   696  000003                     fputc@c:
   697                           	callstack 0
   698  000003                     strlen@s:
   699                           	callstack 0
   700  000003                     ___flge@ff1:
   701                           	callstack 0
   702  000003                     ___flneg@f1:
   703                           	callstack 0
   704  000003                     ___fladd@b:
   705                           	callstack 0
   706  000003                     ___xxtofl@val:
   707                           	callstack 0
   708  000003                     ___aodiv@dividend:
   709                           	callstack 0
   710  000003                     ___aomod@dividend:
   711                           	callstack 0
   712                           
   713                           ; 8 bytes @ 0x2
   714  000003                     	ds	1
   715  000004                     ??_I2C_2_Master_Read:
   716  000004                     ??_toggle_light:
   717  000004                     I2C_2_Master_Write@data_byte:
   718                           	callstack 0
   719  000004                     sendStringSerial4@string:
   720                           	callstack 0
   721                           
   722                           ; 2 bytes @ 0x3
   723  000004                     	ds	1
   724  000005                     color_writetoaddr@value:
   725                           	callstack 0
   726  000005                     I2C_2_Master_Read@ack:
   727                           	callstack 0
   728  000005                     initDCmotors_parameter@motorR:
   729                           	callstack 0
   730  000005                     ___wmul@multiplicand:
   731                           	callstack 0
   732  000005                     fputc@fp:
   733                           	callstack 0
   734  000005                     strlen@a:
   735                           	callstack 0
   736                           
   737                           ; 2 bytes @ 0x4
   738  000005                     	ds	1
   739  000006                     toggle_light@i:
   740                           	callstack 0
   741  000006                     color_writetoaddr@address:
   742                           	callstack 0
   743  000006                     I2C_2_Master_Read@tmp:
   744                           	callstack 0
   745                           
   746                           ; 1 bytes @ 0x5
   747  000006                     	ds	1
   748  000007                     ??_fputc:
   749  000007                     ??_color_click_init:
   750  000007                     ??___xxtofl:
   751  000007                     ?_color_read_Red:
   752                           	callstack 0
   753  000007                     ?_color_read_Blue:
   754                           	callstack 0
   755  000007                     ?_color_read_Green:
   756                           	callstack 0
   757  000007                     ?_color_read_Clear:
   758                           	callstack 0
   759  000007                     toggle_light@lightnumber:
   760                           	callstack 0
   761  000007                     ___wmul@product:
   762                           	callstack 0
   763  000007                     ___flge@ff2:
   764                           	callstack 0
   765  000007                     ___fladd@a:
   766                           	callstack 0
   767                           
   768                           ; 4 bytes @ 0x6
   769  000007                     	ds	2
   770  000009                     ??_color_read_Red:
   771  000009                     ??_color_read_Blue:
   772  000009                     ??_color_read_Green:
   773  000009                     ??_color_read_Clear:
   774  000009                     ?___awdiv:
   775                           	callstack 0
   776  000009                     ___awdiv@dividend:
   777                           	callstack 0
   778                           
   779                           ; 2 bytes @ 0x8
   780  000009                     	ds	2
   781  00000B                     ??___fladd:
   782  00000B                     ??___flge:
   783  00000B                     ___xxtofl@sign:
   784                           	callstack 0
   785  00000B                     ___awdiv@divisor:
   786                           	callstack 0
   787  00000B                     ___aodiv@divisor:
   788                           	callstack 0
   789  00000B                     ___aomod@divisor:
   790                           	callstack 0
   791                           
   792                           ; 8 bytes @ 0xA
   793  00000B                     	ds	1
   794  00000C                     ___xxtofl@exp:
   795                           	callstack 0
   796  00000C                     color_read_Red@tmp:
   797                           	callstack 0
   798  00000C                     color_read_Blue@tmp:
   799                           	callstack 0
   800  00000C                     color_read_Green@tmp:
   801                           	callstack 0
   802  00000C                     color_read_Clear@tmp:
   803                           	callstack 0
   804  00000C                     fputs@s:
   805                           	callstack 0
   806                           
   807                           ; 2 bytes @ 0xB
   808  00000C                     	ds	1
   809  00000D                     ___awdiv@counter:
   810                           	callstack 0
   811  00000D                     ___xxtofl@arg:
   812                           	callstack 0
   813                           
   814                           ; 4 bytes @ 0xC
   815  00000D                     	ds	1
   816  00000E                     ___awdiv@sign:
   817                           	callstack 0
   818  00000E                     read_color@m:
   819                           	callstack 0
   820  00000E                     calibrate_white@w:
   821                           	callstack 0
   822  00000E                     fputs@fp:
   823                           	callstack 0
   824                           
   825                           ; 2 bytes @ 0xD
   826  00000E                     	ds	1
   827  00000F                     ___fladd@signs:
   828                           	callstack 0
   829  00000F                     ___awdiv@quotient:
   830                           	callstack 0
   831                           
   832                           ; 2 bytes @ 0xE
   833  00000F                     	ds	1
   834  000010                     ??_calibrate_white:
   835  000010                     ___fladd@aexp:
   836                           	callstack 0
   837  000010                     fputs@c:
   838                           	callstack 0
   839                           
   840                           ; 1 bytes @ 0xF
   841  000010                     	ds	1
   842  000011                     ?___fldiv:
   843                           	callstack 0
   844  000011                     ___fladd@bexp:
   845                           	callstack 0
   846  000011                     setMotorPWM@m:
   847                           	callstack 0
   848  000011                     fputs@i:
   849                           	callstack 0
   850  000011                     ___fldiv@b:
   851                           	callstack 0
   852                           
   853                           ; 4 bytes @ 0x10
   854  000011                     	ds	1
   855  000012                     ___fladd@grs:
   856                           	callstack 0
   857                           
   858                           ; 1 bytes @ 0x11
   859  000012                     	ds	1
   860  000013                     ??_setMotorPWM:
   861  000013                     ?_pad:
   862                           	callstack 0
   863  000013                     ?___flsub:
   864                           	callstack 0
   865  000013                     ___aodiv@counter:
   866                           	callstack 0
   867  000013                     ___aomod@counter:
   868                           	callstack 0
   869  000013                     pad@fp:
   870                           	callstack 0
   871  000013                     ___flsub@b:
   872                           	callstack 0
   873                           
   874                           ; 4 bytes @ 0x12
   875  000013                     	ds	1
   876  000014                     ___aodiv@sign:
   877                           	callstack 0
   878  000014                     ___aomod@sign:
   879                           	callstack 0
   880                           
   881                           ; 1 bytes @ 0x13
   882  000014                     	ds	1
   883  000015                     ?_abs:
   884                           	callstack 0
   885  000015                     pad@buf:
   886                           	callstack 0
   887  000015                     abs@a:
   888                           	callstack 0
   889  000015                     ___fldiv@a:
   890                           	callstack 0
   891  000015                     ___aodiv@quotient:
   892                           	callstack 0
   893                           
   894                           ; 8 bytes @ 0x14
   895  000015                     	ds	2
   896  000017                     ??_abs:
   897  000017                     pad@p:
   898                           	callstack 0
   899  000017                     ___flsub@a:
   900                           	callstack 0
   901                           
   902                           ; 4 bytes @ 0x16
   903  000017                     	ds	2
   904  000019                     ??___fldiv:
   905  000019                     ??_pad:
   906                           
   907                           ; 1 bytes @ 0x18
   908  000019                     	ds	1
   909  00001A                     setMotorPWM@PWMduty:
   910                           	callstack 0
   911  00001A                     pad@i:
   912                           	callstack 0
   913                           
   914                           ; 2 bytes @ 0x19
   915  00001A                     	ds	1
   916  00001B                     
   917                           ; 1 bytes @ 0x1A
   918  00001B                     	ds	1
   919  00001C                     stop@mL:
   920                           	callstack 0
   921  00001C                     fullSpeedAhead@mL:
   922                           	callstack 0
   923  00001C                     pad@w:
   924                           	callstack 0
   925                           
   926                           ; 2 bytes @ 0x1B
   927  00001C                     	ds	1
   928  00001D                     ___fldiv@rem:
   929                           	callstack 0
   930                           
   931                           ; 4 bytes @ 0x1C
   932  00001D                     	ds	1
   933  00001E                     ?_dtoa:
   934                           	callstack 0
   935  00001E                     stop@mR:
   936                           	callstack 0
   937  00001E                     fullSpeedAhead@mR:
   938                           	callstack 0
   939  00001E                     dtoa@fp:
   940                           	callstack 0
   941                           
   942                           ; 2 bytes @ 0x1D
   943  00001E                     	ds	2
   944  000020                     ??_stop:
   945  000020                     ??_fullSpeedAhead:
   946  000020                     dtoa@d:
   947                           	callstack 0
   948                           
   949                           ; 8 bytes @ 0x1F
   950  000020                     	ds	1
   951  000021                     ___fldiv@sign:
   952                           	callstack 0
   953                           
   954                           ; 1 bytes @ 0x20
   955  000021                     	ds	1
   956  000022                     turnLeft@mL:
   957                           	callstack 0
   958  000022                     turnRight@mL:
   959                           	callstack 0
   960  000022                     fullSpeedBack@mL:
   961                           	callstack 0
   962  000022                     short_burst@mL:
   963                           	callstack 0
   964  000022                     ___fldiv@new_exp:
   965                           	callstack 0
   966                           
   967                           ; 2 bytes @ 0x21
   968  000022                     	ds	2
   969  000024                     turnLeft@mR:
   970                           	callstack 0
   971  000024                     turnRight@mR:
   972                           	callstack 0
   973  000024                     fullSpeedBack@mR:
   974                           	callstack 0
   975  000024                     short_burst@mR:
   976                           	callstack 0
   977  000024                     ___fldiv@grs:
   978                           	callstack 0
   979                           
   980                           ; 4 bytes @ 0x23
   981  000024                     	ds	2
   982  000026                     ??_short_burst:
   983  000026                     ??_fullSpeedBack:
   984  000026                     turnLeft@angle_left:
   985                           	callstack 0
   986  000026                     turnRight@angle_right:
   987                           	callstack 0
   988                           
   989                           ; 1 bytes @ 0x25
   990  000026                     	ds	1
   991  000027                     ??_turnLeft:
   992  000027                     ??_turnRight:
   993                           
   994                           ; 1 bytes @ 0x26
   995  000027                     	ds	1
   996  000028                     ??_dtoa:
   997  000028                     ___fldiv@bexp:
   998                           	callstack 0
   999  000028                     turnLeft@delay_135:
  1000                           	callstack 0
  1001  000028                     turnRight@delay_135:
  1002                           	callstack 0
  1003  000028                     short_reverse@mL:
  1004                           	callstack 0
  1005  000028                     reverse_square@mL:
  1006                           	callstack 0
  1007                           
  1008                           ; 2 bytes @ 0x27
  1009  000028                     	ds	1
  1010  000029                     ___fldiv@aexp:
  1011                           	callstack 0
  1012                           
  1013                           ; 1 bytes @ 0x28
  1014  000029                     	ds	1
  1015  00002A                     ?___flmul:
  1016                           	callstack 0
  1017  00002A                     turnLeft@delay_180:
  1018                           	callstack 0
  1019  00002A                     turnRight@delay_180:
  1020                           	callstack 0
  1021  00002A                     short_reverse@mR:
  1022                           	callstack 0
  1023  00002A                     reverse_square@mR:
  1024                           	callstack 0
  1025  00002A                     ___flmul@b:
  1026                           	callstack 0
  1027                           
  1028                           ; 4 bytes @ 0x29
  1029  00002A                     	ds	2
  1030  00002C                     ??_short_reverse:
  1031  00002C                     ??_reverse_square:
  1032  00002C                     turnLeft@i:
  1033                           	callstack 0
  1034  00002C                     turnRight@i:
  1035                           	callstack 0
  1036                           
  1037                           ; 2 bytes @ 0x2B
  1038  00002C                     	ds	2
  1039  00002E                     turnLeft@i_1420:
  1040                           	callstack 0
  1041  00002E                     turnRight@i_1445:
  1042                           	callstack 0
  1043  00002E                     ___flmul@a:
  1044                           	callstack 0
  1045                           
  1046                           ; 4 bytes @ 0x2D
  1047  00002E                     	ds	2
  1048  000030                     turnLeft@i_1421:
  1049                           	callstack 0
  1050  000030                     turnRight@i_1446:
  1051                           	callstack 0
  1052  000030                     _dtoa$2826:
  1053                           	callstack 0
  1054                           
  1055                           ; 2 bytes @ 0x2F
  1056  000030                     	ds	2
  1057  000032                     ??___flmul:
  1058  000032                     turnLeft@delay:
  1059                           	callstack 0
  1060  000032                     turnRight@delay:
  1061                           	callstack 0
  1062  000032                     dtoa@p:
  1063                           	callstack 0
  1064                           
  1065                           ; 2 bytes @ 0x31
  1066  000032                     	ds	2
  1067  000034                     goback@mL:
  1068                           	callstack 0
  1069  000034                     dtoa@w:
  1070                           	callstack 0
  1071                           
  1072                           ; 2 bytes @ 0x33
  1073  000034                     	ds	2
  1074  000036                     ___flmul@sign:
  1075                           	callstack 0
  1076  000036                     goback@mR:
  1077                           	callstack 0
  1078  000036                     dtoa@s:
  1079                           	callstack 0
  1080                           
  1081                           ; 2 bytes @ 0x35
  1082  000036                     	ds	1
  1083  000037                     ___flmul@aexp:
  1084                           	callstack 0
  1085                           
  1086                           ; 1 bytes @ 0x36
  1087  000037                     	ds	1
  1088  000038                     ??_goback:
  1089  000038                     ___flmul@grs:
  1090                           	callstack 0
  1091  000038                     dtoa@n:
  1092                           	callstack 0
  1093                           
  1094                           ; 8 bytes @ 0x37
  1095  000038                     	ds	2
  1096  00003A                     goback@i:
  1097                           	callstack 0
  1098                           
  1099                           ; 2 bytes @ 0x39
  1100  00003A                     	ds	2
  1101  00003C                     ___flmul@bexp:
  1102                           	callstack 0
  1103  00003C                     action@mL:
  1104                           	callstack 0
  1105                           
  1106                           ; 2 bytes @ 0x3B
  1107  00003C                     	ds	1
  1108  00003D                     ___flmul@prod:
  1109                           	callstack 0
  1110                           
  1111                           ; 4 bytes @ 0x3C
  1112  00003D                     	ds	1
  1113  00003E                     action@mR:
  1114                           	callstack 0
  1115                           
  1116                           ; 2 bytes @ 0x3D
  1117  00003E                     	ds	2
  1118  000040                     ??_action:
  1119  000040                     dtoa@i:
  1120                           	callstack 0
  1121                           
  1122                           ; 2 bytes @ 0x3F
  1123  000040                     	ds	1
  1124  000041                     ___flmul@temp:
  1125                           	callstack 0
  1126                           
  1127                           ; 2 bytes @ 0x40
  1128  000041                     	ds	1
  1129  000042                     ?_vfpfcnvrt:
  1130                           	callstack 0
  1131  000042                     action@color:
  1132                           	callstack 0
  1133  000042                     vfpfcnvrt@fp:
  1134                           	callstack 0
  1135                           
  1136                           ; 2 bytes @ 0x41
  1137  000042                     	ds	1
  1138  000043                     ?_roundf:
  1139                           	callstack 0
  1140  000043                     roundf@x:
  1141                           	callstack 0
  1142                           
  1143                           ; 4 bytes @ 0x42
  1144  000043                     	ds	1
  1145  000044                     vfpfcnvrt@fmt:
  1146                           	callstack 0
  1147                           
  1148                           ; 2 bytes @ 0x43
  1149  000044                     	ds	2
  1150  000046                     vfpfcnvrt@ap:
  1151                           	callstack 0
  1152                           
  1153                           ; 2 bytes @ 0x45
  1154  000046                     	ds	1
  1155  000047                     ??_roundf:
  1156                           
  1157                           ; 1 bytes @ 0x46
  1158  000047                     	ds	1
  1159  000048                     ??_vfpfcnvrt:
  1160                           
  1161                           ; 1 bytes @ 0x47
  1162  000048                     	ds	2
  1163  00004A                     vfpfcnvrt@ll:
  1164                           	callstack 0
  1165                           
  1166                           ; 8 bytes @ 0x49
  1167  00004A                     	ds	1
  1168  00004B                     ??___fltol:
  1169                           
  1170                           ; 1 bytes @ 0x4A
  1171  00004B                     	ds	4
  1172  00004F                     ___fltol@sign1:
  1173                           	callstack 0
  1174                           
  1175                           ; 1 bytes @ 0x4E
  1176  00004F                     	ds	1
  1177  000050                     ___fltol@exp1:
  1178                           	callstack 0
  1179                           
  1180                           ; 1 bytes @ 0x4F
  1181  000050                     	ds	1
  1182  000051                     ??_amb_light_measure:
  1183  000051                     ??_distance_measure:
  1184  000051                     compare@result:
  1185                           	callstack 0
  1186                           
  1187                           ; 1 bytes @ 0x50
  1188  000051                     	ds	1
  1189  000052                     ??_detect_color:
  1190  000052                     ?_vfprintf:
  1191                           	callstack 0
  1192  000052                     vfprintf@fp:
  1193                           	callstack 0
  1194                           
  1195                           ; 2 bytes @ 0x51
  1196  000052                     	ds	2
  1197  000054                     vfprintf@fmt:
  1198                           	callstack 0
  1199                           
  1200                           ; 2 bytes @ 0x53
  1201  000054                     	ds	2
  1202  000056                     ??_verify_color:
  1203  000056                     vfprintf@ap:
  1204                           	callstack 0
  1205                           
  1206                           ; 2 bytes @ 0x55
  1207  000056                     	ds	2
  1208  000058                     vfprintf@cfmt:
  1209                           	callstack 0
  1210                           
  1211                           ; 2 bytes @ 0x57
  1212  000058                     	ds	2
  1213  00005A                     
  1214                           ; 1 bytes @ 0x59
  1215 ;;
  1216 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1217 ;;
  1218 ;; *************** function _main *****************
  1219 ;; Defined at:
  1220 ;;		line 26 in file "main.c"
  1221 ;; Parameters:    Size  Location     Type
  1222 ;;		None
  1223 ;; Auto vars:     Size  Location     Type
  1224 ;;  white          26   21[BANK1 ] struct white_card
  1225 ;;  motorR         10   57[BANK1 ] struct DC_motor
  1226 ;;  motorL         10   47[BANK1 ] struct DC_motor
  1227 ;;  rgb             8   13[BANK1 ] struct color_rgb
  1228 ;;  amb             8    2[BANK1 ] struct color_rgb
  1229 ;;  amb_light       2   10[BANK1 ] unsigned int 
  1230 ;;  stop_signal     1   12[BANK1 ] unsigned char 
  1231 ;;  complete        1    0        unsigned char 
  1232 ;; Return value:  Size  Location     Type
  1233 ;;                  1    wreg      void 
  1234 ;; Registers used:
  1235 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1236 ;; Tracked objects:
  1237 ;;		On entry : 0/0
  1238 ;;		On exit  : 0/0
  1239 ;;		Unchanged: 0/0
  1240 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1241 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1242 ;;      Locals:         0       0      65       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1243 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1244 ;;      Totals:         0       0      67       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1245 ;;Total ram usage:       67 bytes
  1246 ;; Hardware stack levels required when called: 12
  1247 ;; This function calls:
  1248 ;;		_I2C_2_Master_Init
  1249 ;;		_Interrupts_init
  1250 ;;		_LED_C
  1251 ;;		_LED_OFF
  1252 ;;		_Timer0_init
  1253 ;;		_action
  1254 ;;		_amb_light_measure
  1255 ;;		_buggylight_init
  1256 ;;		_calibrate_white
  1257 ;;		_color_click_init
  1258 ;;		_color_data_collection
  1259 ;;		_detect_color
  1260 ;;		_distance_measure
  1261 ;;		_fullSpeedAhead
  1262 ;;		_initDCmotorsPWM
  1263 ;;		_initDCmotors_parameter
  1264 ;;		_initUSART4
  1265 ;;		_pin_init
  1266 ;;		_read_color
  1267 ;;		_short_burst
  1268 ;;		_stop
  1269 ;;		_toggle_light
  1270 ;;		_verify_color
  1271 ;; This function is called by:
  1272 ;;		Startup code after reset
  1273 ;; This function uses a non-reentrant model
  1274 ;;
  1275                           
  1276                           	psect	text0
  1277  003E10                     __ptext0:
  1278                           	callstack 0
  1279  003E10                     _main:
  1280                           	callstack 19
  1281  003E10                     
  1282                           ;main.c: 27:     Interrupts_init();
  1283  003E10  ECF1  F02B         	call	_Interrupts_init	;wreg free
  1284  003E14                     
  1285                           ;main.c: 28:     Timer0_init();
  1286  003E14  ECC5  F02B         	call	_Timer0_init	;wreg free
  1287  003E18                     
  1288                           ;main.c: 29:     I2C_2_Master_Init();
  1289  003E18  EC0A  F02B         	call	_I2C_2_Master_Init	;wreg free
  1290  003E1C                     
  1291                           ;main.c: 30:     color_click_init();
  1292  003E1C  ECC1  F02A         	call	_color_click_init	;wreg free
  1293  003E20                     
  1294                           ;main.c: 31:     initDCmotorsPWM(199);
  1295  003E20  0E00               	movlw	0
  1296  003E22  6E04               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
  1297  003E24  0EC7               	movlw	199
  1298  003E26  6E03               	movwf	initDCmotorsPWM@PWMperiod^0,c
  1299  003E28  ECAC  F029         	call	_initDCmotorsPWM	;wreg free
  1300  003E2C                     
  1301                           ;main.c: 32:     buggylight_init();
  1302  003E2C  ECE0  F02B         	call	_buggylight_init	;wreg free
  1303  003E30                     
  1304                           ;main.c: 33:     initUSART4();
  1305  003E30  ECB6  F02B         	call	_initUSART4	;wreg free
  1306  003E34                     
  1307                           ;main.c: 35:     struct color_rgb rgb, amb;;main.c: 36:     struct white_card white;;mai
      +                          n.c: 40:     struct DC_motor motorL, motorR;;main.c: 42:     initDCmotors_parameter(&mot
      +                          orL, &motorR);
  1308  003E34  0EE0               	movlw	low main@motorL
  1309  003E36  6E03               	movwf	initDCmotors_parameter@motorL^0,c
  1310  003E38  0E01               	movlw	high main@motorL
  1311  003E3A  6E04               	movwf	(initDCmotors_parameter@motorL+1)^0,c
  1312  003E3C  0EEA               	movlw	low main@motorR
  1313  003E3E  6E05               	movwf	initDCmotors_parameter@motorR^0,c
  1314  003E40  0E01               	movlw	high main@motorR
  1315  003E42  6E06               	movwf	(initDCmotors_parameter@motorR+1)^0,c
  1316  003E44  EC5F  F024         	call	_initDCmotors_parameter	;wreg free
  1317  003E48                     
  1318                           ;main.c: 46:     if (4 == 1 || 4 == 3 || 4 == 4){
  1319  003E48  EC46  F02B         	call	_pin_init	;wreg free
  1320  003E4C                     
  1321                           ;main.c: 47:         LED_OFF();
  1322  003E4C  ECA6  F02B         	call	_LED_OFF	;wreg free
  1323  003E50                     
  1324                           ;main.c: 48:         toggle_light(1,2);
  1325  003E50  0E02               	movlw	2
  1326  003E52  6E03               	movwf	toggle_light@toggletime^0,c
  1327  003E54  0E01               	movlw	1
  1328  003E56  EC19  F018         	call	_toggle_light
  1329  003E5A                     
  1330                           ;main.c: 49:         _delay((unsigned long)((1000)*(64000000/4000.0)));
  1331  003E5A  0E52               	movlw	82
  1332  003E5C  0101               	movlb	1	; () banked
  1333  003E5E  6FB2               	movwf	(??_main+1)& (0+255),b
  1334  003E60  0E2B               	movlw	43
  1335  003E62  6FB1               	movwf	??_main& (0+255),b
  1336  003E64  0E00               	movlw	0
  1337  003E66                     u6587:
  1338  003E66  2EE8               	decfsz	wreg,f,c
  1339  003E68  D7FE               	bra	u6587
  1340  003E6A  2FB1               	decfsz	??_main& (0+255),f,b
  1341  003E6C  D7FC               	bra	u6587
  1342  003E6E  2FB2               	decfsz	(??_main+1)& (0+255),f,b
  1343  003E70  D7FA               	bra	u6587
  1344  003E72  F000               	nop	
  1345                           
  1346                           ;main.c: 50:         calibrate_white(&white);
  1347  003E74  0EC6               	movlw	low main@white
  1348  003E76  6E0E               	movwf	calibrate_white@w^0,c
  1349  003E78  0E01               	movlw	high main@white
  1350  003E7A  6E0F               	movwf	(calibrate_white@w+1)^0,c
  1351  003E7C  EC35  F01E         	call	_calibrate_white	;wreg free
  1352  003E80                     
  1353                           ;main.c: 51:         _delay((unsigned long)((1000)*(64000000/4000.0)));
  1354  003E80  0E52               	movlw	82
  1355  003E82  0101               	movlb	1	; () banked
  1356  003E84  6FB2               	movwf	(??_main+1)& (0+255),b
  1357  003E86  0E2B               	movlw	43
  1358  003E88  6FB1               	movwf	??_main& (0+255),b
  1359  003E8A  0E00               	movlw	0
  1360  003E8C                     u6597:
  1361  003E8C  2EE8               	decfsz	wreg,f,c
  1362  003E8E  D7FE               	bra	u6597
  1363  003E90  2FB1               	decfsz	??_main& (0+255),f,b
  1364  003E92  D7FC               	bra	u6597
  1365  003E94  2FB2               	decfsz	(??_main+1)& (0+255),f,b
  1366  003E96  D7FA               	bra	u6597
  1367  003E98  F000               	nop	
  1368  003E9A                     
  1369                           ;main.c: 52:         LED_OFF();
  1370  003E9A  ECA6  F02B         	call	_LED_OFF	;wreg free
  1371  003E9E                     
  1372                           ;main.c: 53:         toggle_light(1,2);
  1373  003E9E  0E02               	movlw	2
  1374  003EA0  6E03               	movwf	toggle_light@toggletime^0,c
  1375  003EA2  0E01               	movlw	1
  1376  003EA4  EC19  F018         	call	_toggle_light
  1377  003EA8                     
  1378                           ;main.c: 57:     unsigned char stop_signal = 0;
  1379  003EA8  0E00               	movlw	0
  1380  003EAA  0101               	movlb	1	; () banked
  1381  003EAC  6FBD               	movwf	main@stop_signal& (0+255),b
  1382  003EAE                     
  1383                           ; BSR set to: 1
  1384                           ;main.c: 61:     amb_light = amb_light_measure(&amb);
  1385  003EAE  0EB3               	movlw	low main@amb
  1386  003EB0  0100               	movlb	0	; () banked
  1387  003EB2  6F7A               	movwf	amb_light_measure@amb& (0+255),b
  1388  003EB4  0E01               	movlw	high main@amb
  1389  003EB6  6F7B               	movwf	(amb_light_measure@amb+1)& (0+255),b
  1390  003EB8  ECC5  F022         	call	_amb_light_measure	;wreg free
  1391  003EBC  C07A  F1BB         	movff	?_amb_light_measure,main@amb_light
  1392  003EC0  C07B  F1BC         	movff	?_amb_light_measure+1,main@amb_light+1
  1393  003EC4  EF7F  F01F         	goto	l6276
  1394  003EC8                     l6272:
  1395                           
  1396                           ; BSR set to: 1
  1397                           ;main.c: 97:                 fullSpeedAhead(&motorL, &motorR);
  1398  003EC8  0EE0               	movlw	low main@motorL
  1399  003ECA  6E1C               	movwf	fullSpeedAhead@mL^0,c
  1400  003ECC  0E01               	movlw	high main@motorL
  1401  003ECE  6E1D               	movwf	(fullSpeedAhead@mL+1)^0,c
  1402  003ED0  0EEA               	movlw	low main@motorR
  1403  003ED2  6E1E               	movwf	fullSpeedAhead@mR^0,c
  1404  003ED4  0E01               	movlw	high main@motorR
  1405  003ED6  6E1F               	movwf	(fullSpeedAhead@mR+1)^0,c
  1406  003ED8  EC6A  F027         	call	_fullSpeedAhead	;wreg free
  1407  003EDC                     
  1408                           ;main.c: 98:                 stop_signal = distance_measure(&motorL, &motorR, amb_light)
      +                          ;
  1409  003EDC  0EE0               	movlw	low main@motorL
  1410  003EDE  0100               	movlb	0	; () banked
  1411  003EE0  6F7A               	movwf	distance_measure@mL& (0+255),b
  1412  003EE2  0E01               	movlw	high main@motorL
  1413  003EE4  6F7B               	movwf	(distance_measure@mL+1)& (0+255),b
  1414  003EE6  0EEA               	movlw	low main@motorR
  1415  003EE8  6F7C               	movwf	distance_measure@mR& (0+255),b
  1416  003EEA  0E01               	movlw	high main@motorR
  1417  003EEC  6F7D               	movwf	(distance_measure@mR+1)& (0+255),b
  1418  003EEE  C1BB  F07E         	movff	main@amb_light,distance_measure@amb_light
  1419  003EF2  C1BC  F07F         	movff	main@amb_light+1,distance_measure@amb_light+1
  1420  003EF6  EC90  F025         	call	_distance_measure	;wreg free
  1421  003EFA  0101               	movlb	1	; () banked
  1422  003EFC  6FBD               	movwf	main@stop_signal& (0+255),b
  1423  003EFE                     l6276:
  1424                           
  1425                           ;main.c: 96:             while (stop_signal == 0){
  1426  003EFE  0101               	movlb	1	; () banked
  1427  003F00  51BD               	movf	main@stop_signal& (0+255),w,b
  1428  003F02  B4D8               	btfsc	status,2,c
  1429  003F04  EF86  F01F         	goto	u6571
  1430  003F08  EF88  F01F         	goto	u6570
  1431  003F0C                     u6571:
  1432  003F0C  EF64  F01F         	goto	l6272
  1433  003F10                     u6570:
  1434  003F10                     
  1435                           ; BSR set to: 1
  1436                           ;main.c: 101:             stop(&motorL, &motorR);
  1437  003F10  0EE0               	movlw	low main@motorL
  1438  003F12  6E1C               	movwf	stop@mL^0,c
  1439  003F14  0E01               	movlw	high main@motorL
  1440  003F16  6E1D               	movwf	(stop@mL+1)^0,c
  1441  003F18  0EEA               	movlw	low main@motorR
  1442  003F1A  6E1E               	movwf	stop@mR^0,c
  1443  003F1C  0E01               	movlw	high main@motorR
  1444  003F1E  6E1F               	movwf	(stop@mR+1)^0,c
  1445  003F20  ECB4  F026         	call	_stop	;wreg free
  1446  003F24                     
  1447                           ;main.c: 102:             _delay((unsigned long)((1000)*(64000000/4000.0)));
  1448  003F24  0E52               	movlw	82
  1449  003F26  0101               	movlb	1	; () banked
  1450  003F28  6FB2               	movwf	(??_main+1)& (0+255),b
  1451  003F2A  0E2B               	movlw	43
  1452  003F2C  6FB1               	movwf	??_main& (0+255),b
  1453  003F2E  0E00               	movlw	0
  1454  003F30                     u6607:
  1455  003F30  2EE8               	decfsz	wreg,f,c
  1456  003F32  D7FE               	bra	u6607
  1457  003F34  2FB1               	decfsz	??_main& (0+255),f,b
  1458  003F36  D7FC               	bra	u6607
  1459  003F38  2FB2               	decfsz	(??_main+1)& (0+255),f,b
  1460  003F3A  D7FA               	bra	u6607
  1461  003F3C  F000               	nop	
  1462  003F3E                     
  1463                           ;main.c: 103:             color = detect_color(&rgb, &white);
  1464  003F3E  0EBE               	movlw	low main@rgb
  1465  003F40  0100               	movlb	0	; () banked
  1466  003F42  6F80               	movwf	detect_color@m& (0+255),b
  1467  003F44  0E01               	movlw	high main@rgb
  1468  003F46  6F81               	movwf	(detect_color@m+1)& (0+255),b
  1469  003F48  0EC6               	movlw	low main@white
  1470  003F4A  6F82               	movwf	detect_color@w& (0+255),b
  1471  003F4C  0E01               	movlw	high main@white
  1472  003F4E  6F83               	movwf	(detect_color@w+1)& (0+255),b
  1473  003F50  EC0A  F007         	call	_detect_color	;wreg free
  1474  003F54  0101               	movlb	1	; () banked
  1475  003F56  6F90               	movwf	_color& (0+255),b
  1476  003F58                     
  1477                           ; BSR set to: 1
  1478                           ;main.c: 104:             color = verify_color(color, &rgb, &white);
  1479  003F58  0EBE               	movlw	low main@rgb
  1480  003F5A  0100               	movlb	0	; () banked
  1481  003F5C  6F9D               	movwf	verify_color@m& (0+255),b
  1482  003F5E  0E01               	movlw	high main@rgb
  1483  003F60  6F9E               	movwf	(verify_color@m+1)& (0+255),b
  1484  003F62  0EC6               	movlw	low main@white
  1485  003F64  6F9F               	movwf	verify_color@w& (0+255),b
  1486  003F66  0E01               	movlw	high main@white
  1487  003F68  6FA0               	movwf	(verify_color@w+1)& (0+255),b
  1488  003F6A  0101               	movlb	1	; () banked
  1489  003F6C  5190               	movf	_color& (0+255),w,b
  1490  003F6E  EC12  F027         	call	_verify_color
  1491  003F72  0101               	movlb	1	; () banked
  1492  003F74  6F90               	movwf	_color& (0+255),b
  1493  003F76                     
  1494                           ; BSR set to: 1
  1495                           ;main.c: 105:             action(color, &motorL, &motorR);
  1496  003F76  0EE0               	movlw	low main@motorL
  1497  003F78  6E3C               	movwf	action@mL^0,c
  1498  003F7A  0E01               	movlw	high main@motorL
  1499  003F7C  6E3D               	movwf	(action@mL+1)^0,c
  1500  003F7E  0EEA               	movlw	low main@motorR
  1501  003F80  6E3E               	movwf	action@mR^0,c
  1502  003F82  0E01               	movlw	high main@motorR
  1503  003F84  6E3F               	movwf	(action@mR+1)^0,c
  1504  003F86  5190               	movf	_color& (0+255),w,b
  1505  003F88  EC25  F015         	call	_action
  1506  003F8C                     
  1507                           ;main.c: 106:             color = 0;
  1508  003F8C  0E00               	movlw	0
  1509  003F8E  0101               	movlb	1	; () banked
  1510  003F90  6F90               	movwf	_color& (0+255),b
  1511  003F92                     
  1512                           ; BSR set to: 1
  1513                           ;main.c: 108:             stop_signal = 0;
  1514  003F92  0E00               	movlw	0
  1515  003F94  6FBD               	movwf	main@stop_signal& (0+255),b
  1516  003F96  EF7F  F01F         	goto	l6276
  1517  003F9A  EF24  F000         	goto	start
  1518  003F9E                     __end_of_main:
  1519                           	callstack 0
  1520                           
  1521 ;; *************** function _verify_color *****************
  1522 ;; Defined at:
  1523 ;;		line 366 in file "color.c"
  1524 ;; Parameters:    Size  Location     Type
  1525 ;;  color           1    wreg     unsigned char 
  1526 ;;  m               2   61[BANK0 ] PTR struct color_rgb
  1527 ;;		 -> main@rgb(8), 
  1528 ;;  w               2   63[BANK0 ] PTR struct white_card
  1529 ;;		 -> main@white(26), 
  1530 ;; Auto vars:     Size  Location     Type
  1531 ;;  color           1   69[BANK0 ] unsigned char 
  1532 ;;  color2          2   67[BANK0 ] unsigned int 
  1533 ;;  color3          2   65[BANK0 ] unsigned int 
  1534 ;; Return value:  Size  Location     Type
  1535 ;;                  1    wreg      unsigned char 
  1536 ;; Registers used:
  1537 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1538 ;; Tracked objects:
  1539 ;;		On entry : 0/0
  1540 ;;		On exit  : 0/0
  1541 ;;		Unchanged: 0/0
  1542 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1543 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1544 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1545 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1546 ;;      Totals:         2       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1547 ;;Total ram usage:       11 bytes
  1548 ;; Hardware stack levels used: 1
  1549 ;; Hardware stack levels required when called: 7
  1550 ;; This function calls:
  1551 ;;		_detect_color
  1552 ;; This function is called by:
  1553 ;;		_main
  1554 ;; This function uses a non-reentrant model
  1555 ;;
  1556                           
  1557                           	psect	text1
  1558  004E24                     __ptext1:
  1559                           	callstack 0
  1560  004E24                     _verify_color:
  1561                           	callstack 23
  1562                           
  1563                           ; BSR set to: 1
  1564                           ;incstack = 0
  1565                           ;verify_color@color stored from wreg
  1566  004E24  0100               	movlb	0	; () banked
  1567  004E26  6FA5               	movwf	verify_color@color& (0+255),b
  1568  004E28                     
  1569                           ;color.c: 366: unsigned char verify_color(unsigned char color,struct color_rgb *m, struc
      +                          t white_card *w);color.c: 367: {;color.c: 368:     _delay((unsigned long)((50)*(64000000
      +                          /4000.0)));
  1570  004E28  0E05               	movlw	5
  1571  004E2A  6E57               	movwf	(??_verify_color+1)^0,c
  1572  004E2C  0E0F               	movlw	15
  1573  004E2E  6E56               	movwf	??_verify_color^0,c
  1574  004E30  0EF1               	movlw	241
  1575  004E32                     u6617:
  1576  004E32  2EE8               	decfsz	wreg,f,c
  1577  004E34  D7FE               	bra	u6617
  1578  004E36  2E56               	decfsz	??_verify_color^0,f,c
  1579  004E38  D7FC               	bra	u6617
  1580  004E3A  2E57               	decfsz	(??_verify_color+1)^0,f,c
  1581  004E3C  D7FA               	bra	u6617
  1582  004E3E  F000               	nop	
  1583  004E40                     
  1584                           ;color.c: 369:     unsigned int color2, color3;;color.c: 370:     color2 = detect_color(
      +                          m,w);
  1585  004E40  C09D  F080         	movff	verify_color@m,detect_color@m
  1586  004E44  C09E  F081         	movff	verify_color@m+1,detect_color@m+1
  1587  004E48  C09F  F082         	movff	verify_color@w,detect_color@w
  1588  004E4C  C0A0  F083         	movff	verify_color@w+1,detect_color@w+1
  1589  004E50  EC0A  F007         	call	_detect_color	;wreg free
  1590  004E54  6E56               	movwf	??_verify_color^0,c
  1591  004E56  5056               	movf	??_verify_color^0,w,c
  1592  004E58  0100               	movlb	0	; () banked
  1593  004E5A  6FA3               	movwf	verify_color@color2& (0+255),b
  1594  004E5C  6BA4               	clrf	(verify_color@color2+1)& (0+255),b
  1595  004E5E                     
  1596                           ; BSR set to: 0
  1597                           ;color.c: 371:     _delay((unsigned long)((50)*(64000000/4000.0)));
  1598  004E5E  0E05               	movlw	5
  1599  004E60  6E57               	movwf	(??_verify_color+1)^0,c
  1600  004E62  0E0F               	movlw	15
  1601  004E64  6E56               	movwf	??_verify_color^0,c
  1602  004E66  0EF1               	movlw	241
  1603  004E68                     u6627:
  1604  004E68  2EE8               	decfsz	wreg,f,c
  1605  004E6A  D7FE               	bra	u6627
  1606  004E6C  2E56               	decfsz	??_verify_color^0,f,c
  1607  004E6E  D7FC               	bra	u6627
  1608  004E70  2E57               	decfsz	(??_verify_color+1)^0,f,c
  1609  004E72  D7FA               	bra	u6627
  1610  004E74  F000               	nop	
  1611  004E76                     
  1612                           ;color.c: 372:     color3 = detect_color(m,w);
  1613  004E76  C09D  F080         	movff	verify_color@m,detect_color@m
  1614  004E7A  C09E  F081         	movff	verify_color@m+1,detect_color@m+1
  1615  004E7E  C09F  F082         	movff	verify_color@w,detect_color@w
  1616  004E82  C0A0  F083         	movff	verify_color@w+1,detect_color@w+1
  1617  004E86  EC0A  F007         	call	_detect_color	;wreg free
  1618  004E8A  6E56               	movwf	??_verify_color^0,c
  1619  004E8C  5056               	movf	??_verify_color^0,w,c
  1620  004E8E  0100               	movlb	0	; () banked
  1621  004E90  6FA1               	movwf	verify_color@color3& (0+255),b
  1622  004E92  6BA2               	clrf	(verify_color@color3+1)& (0+255),b
  1623  004E94                     
  1624                           ; BSR set to: 0
  1625                           ;color.c: 373:     if (color == color2 && color2 == color3){return color;}
  1626  004E94  51A5               	movf	verify_color@color& (0+255),w,b
  1627  004E96  6E56               	movwf	??_verify_color^0,c
  1628  004E98  6A57               	clrf	(??_verify_color+1)^0,c
  1629  004E9A  51A3               	movf	verify_color@color2& (0+255),w,b
  1630  004E9C  1856               	xorwf	??_verify_color^0,w,c
  1631  004E9E  E107               	bnz	u6541
  1632  004EA0  51A4               	movf	(verify_color@color2+1)& (0+255),w,b
  1633  004EA2  1857               	xorwf	(??_verify_color+1)^0,w,c
  1634  004EA4  A4D8               	btfss	status,2,c
  1635  004EA6  EF57  F027         	goto	u6541
  1636  004EAA  EF59  F027         	goto	u6540
  1637  004EAE                     u6541:
  1638  004EAE  EF68  F027         	goto	l6148
  1639  004EB2                     u6540:
  1640  004EB2                     
  1641                           ; BSR set to: 0
  1642  004EB2  51A1               	movf	verify_color@color3& (0+255),w,b
  1643  004EB4  19A3               	xorwf	verify_color@color2& (0+255),w,b
  1644  004EB6  E107               	bnz	u6551
  1645  004EB8  51A2               	movf	(verify_color@color3+1)& (0+255),w,b
  1646  004EBA  19A4               	xorwf	(verify_color@color2+1)& (0+255),w,b
  1647  004EBC  A4D8               	btfss	status,2,c
  1648  004EBE  EF63  F027         	goto	u6551
  1649  004EC2  EF65  F027         	goto	u6550
  1650  004EC6                     u6551:
  1651  004EC6  EF68  F027         	goto	l6148
  1652  004ECA                     u6550:
  1653  004ECA                     
  1654                           ; BSR set to: 0
  1655  004ECA  51A5               	movf	verify_color@color& (0+255),w,b
  1656  004ECC  EF69  F027         	goto	l176
  1657  004ED0                     l6148:
  1658                           
  1659                           ; BSR set to: 0
  1660                           ;color.c: 376:         return color;}
  1661  004ED0  0E00               	movlw	0
  1662  004ED2                     l176:
  1663                           
  1664                           ; BSR set to: 0
  1665  004ED2  0012               	return		;funcret
  1666  004ED4                     __end_of_verify_color:
  1667                           	callstack 0
  1668                           
  1669 ;; *************** function _detect_color *****************
  1670 ;; Defined at:
  1671 ;;		line 280 in file "color.c"
  1672 ;; Parameters:    Size  Location     Type
  1673 ;;  m               2   32[BANK0 ] PTR struct color_rgb
  1674 ;;		 -> main@rgb(8), 
  1675 ;;  w               2   34[BANK0 ] PTR struct white_card
  1676 ;;		 -> main@white(26), 
  1677 ;; Auto vars:     Size  Location     Type
  1678 ;;  BG              2   55[BANK0 ] unsigned int 
  1679 ;;  BB              2   52[BANK0 ] unsigned int 
  1680 ;;  BR              2   50[BANK0 ] unsigned int 
  1681 ;;  RR              2   48[BANK0 ] unsigned int 
  1682 ;;  GG              2   46[BANK0 ] unsigned int 
  1683 ;;  GR              2   44[BANK0 ] unsigned int 
  1684 ;;  RG              2   42[BANK0 ] unsigned int 
  1685 ;;  GC              2   40[BANK0 ] unsigned int 
  1686 ;;  GB              2   38[BANK0 ] unsigned int 
  1687 ;;  RB              2   36[BANK0 ] unsigned int 
  1688 ;;  color           1   54[BANK0 ] unsigned char 
  1689 ;; Return value:  Size  Location     Type
  1690 ;;                  1    wreg      unsigned char 
  1691 ;; Registers used:
  1692 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1693 ;; Tracked objects:
  1694 ;;		On entry : 0/0
  1695 ;;		On exit  : 0/0
  1696 ;;		Unchanged: 0/0
  1697 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1698 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1699 ;;      Locals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1700 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1701 ;;      Totals:         4      29       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1702 ;;Total ram usage:       33 bytes
  1703 ;; Hardware stack levels used: 1
  1704 ;; Hardware stack levels required when called: 6
  1705 ;; This function calls:
  1706 ;;		_LED_B
  1707 ;;		_LED_G
  1708 ;;		_LED_R
  1709 ;;		___fldiv
  1710 ;;		___flmul
  1711 ;;		___xxtofl
  1712 ;;		_compare
  1713 ;;		_lroundf
  1714 ;;		_read_color
  1715 ;; This function is called by:
  1716 ;;		_verify_color
  1717 ;;		_main
  1718 ;; This function uses a non-reentrant model
  1719 ;;
  1720                           
  1721                           	psect	text2
  1722  000E14                     __ptext2:
  1723                           	callstack 0
  1724  000E14                     _detect_color:
  1725                           	callstack 23
  1726  000E14  0E00               	movlw	0
  1727  000E16  0100               	movlb	0	; () banked
  1728  000E18  6F8B               	movwf	(detect_color@RG+1)& (0+255),b
  1729  000E1A  0E00               	movlw	0
  1730  000E1C  6F8A               	movwf	detect_color@RG& (0+255),b
  1731  000E1E  0E00               	movlw	0
  1732  000E20  6F85               	movwf	(detect_color@RB+1)& (0+255),b
  1733  000E22  0E00               	movlw	0
  1734  000E24  6F84               	movwf	detect_color@RB& (0+255),b
  1735  000E26  0E00               	movlw	0
  1736  000E28  6F8D               	movwf	(detect_color@GR+1)& (0+255),b
  1737  000E2A  0E00               	movlw	0
  1738  000E2C  6F8C               	movwf	detect_color@GR& (0+255),b
  1739  000E2E  0E00               	movlw	0
  1740  000E30  6F8F               	movwf	(detect_color@GG+1)& (0+255),b
  1741  000E32  0E00               	movlw	0
  1742  000E34  6F8E               	movwf	detect_color@GG& (0+255),b
  1743  000E36  0E00               	movlw	0
  1744  000E38  6F87               	movwf	(detect_color@GB+1)& (0+255),b
  1745  000E3A  0E00               	movlw	0
  1746  000E3C  6F86               	movwf	detect_color@GB& (0+255),b
  1747  000E3E  0E00               	movlw	0
  1748  000E40  6F93               	movwf	(detect_color@BR+1)& (0+255),b
  1749  000E42  0E00               	movlw	0
  1750  000E44  6F92               	movwf	detect_color@BR& (0+255),b
  1751  000E46  0E00               	movlw	0
  1752  000E48  6F98               	movwf	(detect_color@BG+1)& (0+255),b
  1753  000E4A  0E00               	movlw	0
  1754  000E4C  6F97               	movwf	detect_color@BG& (0+255),b
  1755  000E4E  0E00               	movlw	0
  1756  000E50  6F95               	movwf	(detect_color@BB+1)& (0+255),b
  1757  000E52  0E00               	movlw	0
  1758  000E54  6F94               	movwf	detect_color@BB& (0+255),b
  1759                           
  1760                           ;color.c: 285:     unsigned int GC = 0;
  1761  000E56  0E00               	movlw	0
  1762  000E58  6F89               	movwf	(detect_color@GC+1)& (0+255),b
  1763  000E5A  0E00               	movlw	0
  1764  000E5C  6F88               	movwf	detect_color@GC& (0+255),b
  1765                           
  1766                           ;color.c: 286:     unsigned char color = 0;
  1767  000E5E  0E00               	movlw	0
  1768  000E60  6F96               	movwf	detect_color@color& (0+255),b
  1769  000E62                     
  1770                           ; BSR set to: 0
  1771                           ;color.c: 288:     LED_R();
  1772  000E62  EC66  F02B         	call	_LED_R	;wreg free
  1773  000E66                     
  1774                           ;color.c: 289:     read_color(m);
  1775  000E66  C080  F00E         	movff	detect_color@m,read_color@m
  1776  000E6A  C081  F00F         	movff	detect_color@m+1,read_color@m+1
  1777  000E6E  EC1D  F028         	call	_read_color	;wreg free
  1778  000E72                     
  1779                           ;color.c: 291:     RR = lroundf((float)(m->R)/(w->RR)*100); RG = lroundf((float)(m->G)/(
      +                          w->RG)*100); RB = lroundf((float)(m->B)/(w->RB)*100);
  1780  000E72  C082  FFD9         	movff	detect_color@w,fsr2l
  1781  000E76  C083  FFDA         	movff	detect_color@w+1,fsr2h
  1782  000E7A  CFDE F052          	movff	postinc2,??_detect_color
  1783  000E7E  CFDD F053          	movff	postdec2,??_detect_color+1
  1784  000E82  C052  F003         	movff	??_detect_color,___xxtofl@val
  1785  000E86  C053  F004         	movff	??_detect_color+1,___xxtofl@val+1
  1786  000E8A  6A05               	clrf	(___xxtofl@val+2)^0,c
  1787  000E8C  6A06               	clrf	(___xxtofl@val+3)^0,c
  1788  000E8E  0E00               	movlw	0
  1789  000E90  EC5B  F01D         	call	___xxtofl
  1790  000E94  C003  F015         	movff	?___xxtofl,___fldiv@a
  1791  000E98  C004  F016         	movff	?___xxtofl+1,___fldiv@a+1
  1792  000E9C  C005  F017         	movff	?___xxtofl+2,___fldiv@a+2
  1793  000EA0  C006  F018         	movff	?___xxtofl+3,___fldiv@a+3
  1794  000EA4  C080  FFD9         	movff	detect_color@m,fsr2l
  1795  000EA8  C081  FFDA         	movff	detect_color@m+1,fsr2h
  1796  000EAC  CFDE F054          	movff	postinc2,??_detect_color+2
  1797  000EB0  CFDD F055          	movff	postdec2,??_detect_color+3
  1798  000EB4  C054  F003         	movff	??_detect_color+2,___xxtofl@val
  1799  000EB8  C055  F004         	movff	??_detect_color+3,___xxtofl@val+1
  1800  000EBC  6A05               	clrf	(___xxtofl@val+2)^0,c
  1801  000EBE  6A06               	clrf	(___xxtofl@val+3)^0,c
  1802  000EC0  0E00               	movlw	0
  1803  000EC2  EC5B  F01D         	call	___xxtofl
  1804  000EC6  C003  F011         	movff	?___xxtofl,___fldiv@b
  1805  000ECA  C004  F012         	movff	?___xxtofl+1,___fldiv@b+1
  1806  000ECE  C005  F013         	movff	?___xxtofl+2,___fldiv@b+2
  1807  000ED2  C006  F014         	movff	?___xxtofl+3,___fldiv@b+3
  1808  000ED6  EC58  F013         	call	___fldiv	;wreg free
  1809  000EDA  C011  F02A         	movff	?___fldiv,___flmul@b
  1810  000EDE  C012  F02B         	movff	?___fldiv+1,___flmul@b+1
  1811  000EE2  C013  F02C         	movff	?___fldiv+2,___flmul@b+2
  1812  000EE6  C014  F02D         	movff	?___fldiv+3,___flmul@b+3
  1813  000EEA  0E00               	movlw	0
  1814  000EEC  6E2E               	movwf	___flmul@a^0,c
  1815  000EEE  0E00               	movlw	0
  1816  000EF0  6E2F               	movwf	(___flmul@a+1)^0,c
  1817  000EF2  0EC8               	movlw	200
  1818  000EF4  6E30               	movwf	(___flmul@a+2)^0,c
  1819  000EF6  0E42               	movlw	66
  1820  000EF8  6E31               	movwf	(___flmul@a+3)^0,c
  1821  000EFA  EC6A  F00F         	call	___flmul	;wreg free
  1822  000EFE  C02A  F099         	movff	?___flmul,_detect_color$3189
  1823  000F02  C02B  F09A         	movff	?___flmul+1,_detect_color$3189+1
  1824  000F06  C02C  F09B         	movff	?___flmul+2,_detect_color$3189+2
  1825  000F0A  C02D  F09C         	movff	?___flmul+3,_detect_color$3189+3
  1826  000F0E                     
  1827                           ;color.c: 291:     RR = lroundf((float)(m->R)/(w->RR)*100); RG = lroundf((float)(m->G)/(
      +                          w->RG)*100); RB = lroundf((float)(m->B)/(w->RB)*100);
  1828  000F0E  C099  F076         	movff	_detect_color$3189,lroundf@x
  1829  000F12  C09A  F077         	movff	_detect_color$3189+1,lroundf@x+1
  1830  000F16  C09B  F078         	movff	_detect_color$3189+2,lroundf@x+2
  1831  000F1A  C09C  F079         	movff	_detect_color$3189+3,lroundf@x+3
  1832  000F1E  EC6D  F02A         	call	_lroundf	;wreg free
  1833  000F22  C076  F090         	movff	?_lroundf,detect_color@RR
  1834  000F26  C077  F091         	movff	?_lroundf+1,detect_color@RR+1
  1835  000F2A  0100               	movlb	0	; () banked
  1836  000F2C  EE20 F002          	lfsr	2,2
  1837  000F30  5182               	movf	detect_color@w& (0+255),w,b
  1838  000F32  26D9               	addwf	fsr2l,f,c
  1839  000F34  5183               	movf	(detect_color@w+1)& (0+255),w,b
  1840  000F36  22DA               	addwfc	fsr2h,f,c
  1841  000F38  CFDE F052          	movff	postinc2,??_detect_color
  1842  000F3C  CFDD F053          	movff	postdec2,??_detect_color+1
  1843  000F40  C052  F003         	movff	??_detect_color,___xxtofl@val
  1844  000F44  C053  F004         	movff	??_detect_color+1,___xxtofl@val+1
  1845  000F48  6A05               	clrf	(___xxtofl@val+2)^0,c
  1846  000F4A  6A06               	clrf	(___xxtofl@val+3)^0,c
  1847  000F4C  0E00               	movlw	0
  1848  000F4E  EC5B  F01D         	call	___xxtofl
  1849  000F52  C003  F015         	movff	?___xxtofl,___fldiv@a
  1850  000F56  C004  F016         	movff	?___xxtofl+1,___fldiv@a+1
  1851  000F5A  C005  F017         	movff	?___xxtofl+2,___fldiv@a+2
  1852  000F5E  C006  F018         	movff	?___xxtofl+3,___fldiv@a+3
  1853  000F62  0100               	movlb	0	; () banked
  1854  000F64  EE20 F002          	lfsr	2,2
  1855  000F68  5180               	movf	detect_color@m& (0+255),w,b
  1856  000F6A  26D9               	addwf	fsr2l,f,c
  1857  000F6C  5181               	movf	(detect_color@m+1)& (0+255),w,b
  1858  000F6E  22DA               	addwfc	fsr2h,f,c
  1859  000F70  CFDE F054          	movff	postinc2,??_detect_color+2
  1860  000F74  CFDD F055          	movff	postdec2,??_detect_color+3
  1861  000F78  C054  F003         	movff	??_detect_color+2,___xxtofl@val
  1862  000F7C  C055  F004         	movff	??_detect_color+3,___xxtofl@val+1
  1863  000F80  6A05               	clrf	(___xxtofl@val+2)^0,c
  1864  000F82  6A06               	clrf	(___xxtofl@val+3)^0,c
  1865  000F84  0E00               	movlw	0
  1866  000F86  EC5B  F01D         	call	___xxtofl
  1867  000F8A  C003  F011         	movff	?___xxtofl,___fldiv@b
  1868  000F8E  C004  F012         	movff	?___xxtofl+1,___fldiv@b+1
  1869  000F92  C005  F013         	movff	?___xxtofl+2,___fldiv@b+2
  1870  000F96  C006  F014         	movff	?___xxtofl+3,___fldiv@b+3
  1871  000F9A  EC58  F013         	call	___fldiv	;wreg free
  1872  000F9E  C011  F02A         	movff	?___fldiv,___flmul@b
  1873  000FA2  C012  F02B         	movff	?___fldiv+1,___flmul@b+1
  1874  000FA6  C013  F02C         	movff	?___fldiv+2,___flmul@b+2
  1875  000FAA  C014  F02D         	movff	?___fldiv+3,___flmul@b+3
  1876  000FAE  0E00               	movlw	0
  1877  000FB0  6E2E               	movwf	___flmul@a^0,c
  1878  000FB2  0E00               	movlw	0
  1879  000FB4  6E2F               	movwf	(___flmul@a+1)^0,c
  1880  000FB6  0EC8               	movlw	200
  1881  000FB8  6E30               	movwf	(___flmul@a+2)^0,c
  1882  000FBA  0E42               	movlw	66
  1883  000FBC  6E31               	movwf	(___flmul@a+3)^0,c
  1884  000FBE  EC6A  F00F         	call	___flmul	;wreg free
  1885  000FC2  C02A  F099         	movff	?___flmul,_detect_color$3189
  1886  000FC6  C02B  F09A         	movff	?___flmul+1,_detect_color$3189+1
  1887  000FCA  C02C  F09B         	movff	?___flmul+2,_detect_color$3189+2
  1888  000FCE  C02D  F09C         	movff	?___flmul+3,_detect_color$3189+3
  1889  000FD2  C099  F076         	movff	_detect_color$3189,lroundf@x
  1890  000FD6  C09A  F077         	movff	_detect_color$3189+1,lroundf@x+1
  1891  000FDA  C09B  F078         	movff	_detect_color$3189+2,lroundf@x+2
  1892  000FDE  C09C  F079         	movff	_detect_color$3189+3,lroundf@x+3
  1893  000FE2  EC6D  F02A         	call	_lroundf	;wreg free
  1894  000FE6  C076  F08A         	movff	?_lroundf,detect_color@RG
  1895  000FEA  C077  F08B         	movff	?_lroundf+1,detect_color@RG+1
  1896  000FEE  0100               	movlb	0	; () banked
  1897  000FF0  EE20 F004          	lfsr	2,4
  1898  000FF4  5182               	movf	detect_color@w& (0+255),w,b
  1899  000FF6  26D9               	addwf	fsr2l,f,c
  1900  000FF8  5183               	movf	(detect_color@w+1)& (0+255),w,b
  1901  000FFA  22DA               	addwfc	fsr2h,f,c
  1902  000FFC  CFDE F052          	movff	postinc2,??_detect_color
  1903  001000  CFDD F053          	movff	postdec2,??_detect_color+1
  1904  001004  C052  F003         	movff	??_detect_color,___xxtofl@val
  1905  001008  C053  F004         	movff	??_detect_color+1,___xxtofl@val+1
  1906  00100C  6A05               	clrf	(___xxtofl@val+2)^0,c
  1907  00100E  6A06               	clrf	(___xxtofl@val+3)^0,c
  1908  001010  0E00               	movlw	0
  1909  001012  EC5B  F01D         	call	___xxtofl
  1910  001016  C003  F015         	movff	?___xxtofl,___fldiv@a
  1911  00101A  C004  F016         	movff	?___xxtofl+1,___fldiv@a+1
  1912  00101E  C005  F017         	movff	?___xxtofl+2,___fldiv@a+2
  1913  001022  C006  F018         	movff	?___xxtofl+3,___fldiv@a+3
  1914  001026  0100               	movlb	0	; () banked
  1915  001028  EE20 F004          	lfsr	2,4
  1916  00102C  5180               	movf	detect_color@m& (0+255),w,b
  1917  00102E  26D9               	addwf	fsr2l,f,c
  1918  001030  5181               	movf	(detect_color@m+1)& (0+255),w,b
  1919  001032  22DA               	addwfc	fsr2h,f,c
  1920  001034  CFDE F054          	movff	postinc2,??_detect_color+2
  1921  001038  CFDD F055          	movff	postdec2,??_detect_color+3
  1922  00103C  C054  F003         	movff	??_detect_color+2,___xxtofl@val
  1923  001040  C055  F004         	movff	??_detect_color+3,___xxtofl@val+1
  1924  001044  6A05               	clrf	(___xxtofl@val+2)^0,c
  1925  001046  6A06               	clrf	(___xxtofl@val+3)^0,c
  1926  001048  0E00               	movlw	0
  1927  00104A  EC5B  F01D         	call	___xxtofl
  1928  00104E  C003  F011         	movff	?___xxtofl,___fldiv@b
  1929  001052  C004  F012         	movff	?___xxtofl+1,___fldiv@b+1
  1930  001056  C005  F013         	movff	?___xxtofl+2,___fldiv@b+2
  1931  00105A  C006  F014         	movff	?___xxtofl+3,___fldiv@b+3
  1932  00105E  EC58  F013         	call	___fldiv	;wreg free
  1933  001062  C011  F02A         	movff	?___fldiv,___flmul@b
  1934  001066  C012  F02B         	movff	?___fldiv+1,___flmul@b+1
  1935  00106A  C013  F02C         	movff	?___fldiv+2,___flmul@b+2
  1936  00106E  C014  F02D         	movff	?___fldiv+3,___flmul@b+3
  1937  001072  0E00               	movlw	0
  1938  001074  6E2E               	movwf	___flmul@a^0,c
  1939  001076  0E00               	movlw	0
  1940  001078  6E2F               	movwf	(___flmul@a+1)^0,c
  1941  00107A  0EC8               	movlw	200
  1942  00107C  6E30               	movwf	(___flmul@a+2)^0,c
  1943  00107E  0E42               	movlw	66
  1944  001080  6E31               	movwf	(___flmul@a+3)^0,c
  1945  001082  EC6A  F00F         	call	___flmul	;wreg free
  1946  001086  C02A  F099         	movff	?___flmul,_detect_color$3189
  1947  00108A  C02B  F09A         	movff	?___flmul+1,_detect_color$3189+1
  1948  00108E  C02C  F09B         	movff	?___flmul+2,_detect_color$3189+2
  1949  001092  C02D  F09C         	movff	?___flmul+3,_detect_color$3189+3
  1950  001096  C099  F076         	movff	_detect_color$3189,lroundf@x
  1951  00109A  C09A  F077         	movff	_detect_color$3189+1,lroundf@x+1
  1952  00109E  C09B  F078         	movff	_detect_color$3189+2,lroundf@x+2
  1953  0010A2  C09C  F079         	movff	_detect_color$3189+3,lroundf@x+3
  1954  0010A6  EC6D  F02A         	call	_lroundf	;wreg free
  1955  0010AA                     
  1956                           ;color.c: 292:     _delay((unsigned long)((50)*(64000000/4000.0)));
  1957  0010AA  0E05               	movlw	5
  1958  0010AC  6E53               	movwf	(??_detect_color+1)^0,c
  1959  0010AE  0E0F               	movlw	15
  1960  0010B0  6E52               	movwf	??_detect_color^0,c
  1961  0010B2  0EF1               	movlw	241
  1962  0010B4                     u6637:
  1963  0010B4  2EE8               	decfsz	wreg,f,c
  1964  0010B6  D7FE               	bra	u6637
  1965  0010B8  2E52               	decfsz	??_detect_color^0,f,c
  1966  0010BA  D7FC               	bra	u6637
  1967  0010BC  2E53               	decfsz	(??_detect_color+1)^0,f,c
  1968  0010BE  D7FA               	bra	u6637
  1969  0010C0  F000               	nop	
  1970  0010C2                     
  1971                           ;color.c: 294:     LED_G();
  1972  0010C2  EC76  F02B         	call	_LED_G	;wreg free
  1973  0010C6                     
  1974                           ;color.c: 295:     read_color(m);
  1975  0010C6  C080  F00E         	movff	detect_color@m,read_color@m
  1976  0010CA  C081  F00F         	movff	detect_color@m+1,read_color@m+1
  1977  0010CE  EC1D  F028         	call	_read_color	;wreg free
  1978  0010D2                     
  1979                           ;color.c: 298:     GR = lroundf((float)(m->R)/(w->GR)*100); GG = lroundf((float)(m->G)/(
      +                          w->GG)*100); GB = lroundf((float)(m->B)/(w->GB)*100);
  1980  0010D2  0100               	movlb	0	; () banked
  1981  0010D4  EE20 F006          	lfsr	2,6
  1982  0010D8  5182               	movf	detect_color@w& (0+255),w,b
  1983  0010DA  26D9               	addwf	fsr2l,f,c
  1984  0010DC  5183               	movf	(detect_color@w+1)& (0+255),w,b
  1985  0010DE  22DA               	addwfc	fsr2h,f,c
  1986  0010E0  CFDE F052          	movff	postinc2,??_detect_color
  1987  0010E4  CFDD F053          	movff	postdec2,??_detect_color+1
  1988  0010E8  C052  F003         	movff	??_detect_color,___xxtofl@val
  1989  0010EC  C053  F004         	movff	??_detect_color+1,___xxtofl@val+1
  1990  0010F0  6A05               	clrf	(___xxtofl@val+2)^0,c
  1991  0010F2  6A06               	clrf	(___xxtofl@val+3)^0,c
  1992  0010F4  0E00               	movlw	0
  1993  0010F6  EC5B  F01D         	call	___xxtofl
  1994  0010FA  C003  F015         	movff	?___xxtofl,___fldiv@a
  1995  0010FE  C004  F016         	movff	?___xxtofl+1,___fldiv@a+1
  1996  001102  C005  F017         	movff	?___xxtofl+2,___fldiv@a+2
  1997  001106  C006  F018         	movff	?___xxtofl+3,___fldiv@a+3
  1998  00110A  C080  FFD9         	movff	detect_color@m,fsr2l
  1999  00110E  C081  FFDA         	movff	detect_color@m+1,fsr2h
  2000  001112  CFDE F054          	movff	postinc2,??_detect_color+2
  2001  001116  CFDD F055          	movff	postdec2,??_detect_color+3
  2002  00111A  C054  F003         	movff	??_detect_color+2,___xxtofl@val
  2003  00111E  C055  F004         	movff	??_detect_color+3,___xxtofl@val+1
  2004  001122  6A05               	clrf	(___xxtofl@val+2)^0,c
  2005  001124  6A06               	clrf	(___xxtofl@val+3)^0,c
  2006  001126  0E00               	movlw	0
  2007  001128  EC5B  F01D         	call	___xxtofl
  2008  00112C  C003  F011         	movff	?___xxtofl,___fldiv@b
  2009  001130  C004  F012         	movff	?___xxtofl+1,___fldiv@b+1
  2010  001134  C005  F013         	movff	?___xxtofl+2,___fldiv@b+2
  2011  001138  C006  F014         	movff	?___xxtofl+3,___fldiv@b+3
  2012  00113C  EC58  F013         	call	___fldiv	;wreg free
  2013  001140  C011  F02A         	movff	?___fldiv,___flmul@b
  2014  001144  C012  F02B         	movff	?___fldiv+1,___flmul@b+1
  2015  001148  C013  F02C         	movff	?___fldiv+2,___flmul@b+2
  2016  00114C  C014  F02D         	movff	?___fldiv+3,___flmul@b+3
  2017  001150  0E00               	movlw	0
  2018  001152  6E2E               	movwf	___flmul@a^0,c
  2019  001154  0E00               	movlw	0
  2020  001156  6E2F               	movwf	(___flmul@a+1)^0,c
  2021  001158  0EC8               	movlw	200
  2022  00115A  6E30               	movwf	(___flmul@a+2)^0,c
  2023  00115C  0E42               	movlw	66
  2024  00115E  6E31               	movwf	(___flmul@a+3)^0,c
  2025  001160  EC6A  F00F         	call	___flmul	;wreg free
  2026  001164  C02A  F099         	movff	?___flmul,_detect_color$3189
  2027  001168  C02B  F09A         	movff	?___flmul+1,_detect_color$3189+1
  2028  00116C  C02C  F09B         	movff	?___flmul+2,_detect_color$3189+2
  2029  001170  C02D  F09C         	movff	?___flmul+3,_detect_color$3189+3
  2030  001174                     
  2031                           ;color.c: 298:     GR = lroundf((float)(m->R)/(w->GR)*100); GG = lroundf((float)(m->G)/(
      +                          w->GG)*100); GB = lroundf((float)(m->B)/(w->GB)*100);
  2032  001174  C099  F076         	movff	_detect_color$3189,lroundf@x
  2033  001178  C09A  F077         	movff	_detect_color$3189+1,lroundf@x+1
  2034  00117C  C09B  F078         	movff	_detect_color$3189+2,lroundf@x+2
  2035  001180  C09C  F079         	movff	_detect_color$3189+3,lroundf@x+3
  2036  001184  EC6D  F02A         	call	_lroundf	;wreg free
  2037  001188  C076  F08C         	movff	?_lroundf,detect_color@GR
  2038  00118C  C077  F08D         	movff	?_lroundf+1,detect_color@GR+1
  2039  001190  0100               	movlb	0	; () banked
  2040  001192  EE20 F008          	lfsr	2,8
  2041  001196  5182               	movf	detect_color@w& (0+255),w,b
  2042  001198  26D9               	addwf	fsr2l,f,c
  2043  00119A  5183               	movf	(detect_color@w+1)& (0+255),w,b
  2044  00119C  22DA               	addwfc	fsr2h,f,c
  2045  00119E  CFDE F052          	movff	postinc2,??_detect_color
  2046  0011A2  CFDD F053          	movff	postdec2,??_detect_color+1
  2047  0011A6  C052  F003         	movff	??_detect_color,___xxtofl@val
  2048  0011AA  C053  F004         	movff	??_detect_color+1,___xxtofl@val+1
  2049  0011AE  6A05               	clrf	(___xxtofl@val+2)^0,c
  2050  0011B0  6A06               	clrf	(___xxtofl@val+3)^0,c
  2051  0011B2  0E00               	movlw	0
  2052  0011B4  EC5B  F01D         	call	___xxtofl
  2053  0011B8  C003  F015         	movff	?___xxtofl,___fldiv@a
  2054  0011BC  C004  F016         	movff	?___xxtofl+1,___fldiv@a+1
  2055  0011C0  C005  F017         	movff	?___xxtofl+2,___fldiv@a+2
  2056  0011C4  C006  F018         	movff	?___xxtofl+3,___fldiv@a+3
  2057  0011C8  0100               	movlb	0	; () banked
  2058  0011CA  EE20 F002          	lfsr	2,2
  2059  0011CE  5180               	movf	detect_color@m& (0+255),w,b
  2060  0011D0  26D9               	addwf	fsr2l,f,c
  2061  0011D2  5181               	movf	(detect_color@m+1)& (0+255),w,b
  2062  0011D4  22DA               	addwfc	fsr2h,f,c
  2063  0011D6  CFDE F054          	movff	postinc2,??_detect_color+2
  2064  0011DA  CFDD F055          	movff	postdec2,??_detect_color+3
  2065  0011DE  C054  F003         	movff	??_detect_color+2,___xxtofl@val
  2066  0011E2  C055  F004         	movff	??_detect_color+3,___xxtofl@val+1
  2067  0011E6  6A05               	clrf	(___xxtofl@val+2)^0,c
  2068  0011E8  6A06               	clrf	(___xxtofl@val+3)^0,c
  2069  0011EA  0E00               	movlw	0
  2070  0011EC  EC5B  F01D         	call	___xxtofl
  2071  0011F0  C003  F011         	movff	?___xxtofl,___fldiv@b
  2072  0011F4  C004  F012         	movff	?___xxtofl+1,___fldiv@b+1
  2073  0011F8  C005  F013         	movff	?___xxtofl+2,___fldiv@b+2
  2074  0011FC  C006  F014         	movff	?___xxtofl+3,___fldiv@b+3
  2075  001200  EC58  F013         	call	___fldiv	;wreg free
  2076  001204  C011  F02A         	movff	?___fldiv,___flmul@b
  2077  001208  C012  F02B         	movff	?___fldiv+1,___flmul@b+1
  2078  00120C  C013  F02C         	movff	?___fldiv+2,___flmul@b+2
  2079  001210  C014  F02D         	movff	?___fldiv+3,___flmul@b+3
  2080  001214  0E00               	movlw	0
  2081  001216  6E2E               	movwf	___flmul@a^0,c
  2082  001218  0E00               	movlw	0
  2083  00121A  6E2F               	movwf	(___flmul@a+1)^0,c
  2084  00121C  0EC8               	movlw	200
  2085  00121E  6E30               	movwf	(___flmul@a+2)^0,c
  2086  001220  0E42               	movlw	66
  2087  001222  6E31               	movwf	(___flmul@a+3)^0,c
  2088  001224  EC6A  F00F         	call	___flmul	;wreg free
  2089  001228  C02A  F099         	movff	?___flmul,_detect_color$3189
  2090  00122C  C02B  F09A         	movff	?___flmul+1,_detect_color$3189+1
  2091  001230  C02C  F09B         	movff	?___flmul+2,_detect_color$3189+2
  2092  001234  C02D  F09C         	movff	?___flmul+3,_detect_color$3189+3
  2093  001238  C099  F076         	movff	_detect_color$3189,lroundf@x
  2094  00123C  C09A  F077         	movff	_detect_color$3189+1,lroundf@x+1
  2095  001240  C09B  F078         	movff	_detect_color$3189+2,lroundf@x+2
  2096  001244  C09C  F079         	movff	_detect_color$3189+3,lroundf@x+3
  2097  001248  EC6D  F02A         	call	_lroundf	;wreg free
  2098  00124C  C076  F08E         	movff	?_lroundf,detect_color@GG
  2099  001250  C077  F08F         	movff	?_lroundf+1,detect_color@GG+1
  2100  001254  0100               	movlb	0	; () banked
  2101  001256  EE20 F00A          	lfsr	2,10
  2102  00125A  5182               	movf	detect_color@w& (0+255),w,b
  2103  00125C  26D9               	addwf	fsr2l,f,c
  2104  00125E  5183               	movf	(detect_color@w+1)& (0+255),w,b
  2105  001260  22DA               	addwfc	fsr2h,f,c
  2106  001262  CFDE F052          	movff	postinc2,??_detect_color
  2107  001266  CFDD F053          	movff	postdec2,??_detect_color+1
  2108  00126A  C052  F003         	movff	??_detect_color,___xxtofl@val
  2109  00126E  C053  F004         	movff	??_detect_color+1,___xxtofl@val+1
  2110  001272  6A05               	clrf	(___xxtofl@val+2)^0,c
  2111  001274  6A06               	clrf	(___xxtofl@val+3)^0,c
  2112  001276  0E00               	movlw	0
  2113  001278  EC5B  F01D         	call	___xxtofl
  2114  00127C  C003  F015         	movff	?___xxtofl,___fldiv@a
  2115  001280  C004  F016         	movff	?___xxtofl+1,___fldiv@a+1
  2116  001284  C005  F017         	movff	?___xxtofl+2,___fldiv@a+2
  2117  001288  C006  F018         	movff	?___xxtofl+3,___fldiv@a+3
  2118  00128C  0100               	movlb	0	; () banked
  2119  00128E  EE20 F004          	lfsr	2,4
  2120  001292  5180               	movf	detect_color@m& (0+255),w,b
  2121  001294  26D9               	addwf	fsr2l,f,c
  2122  001296  5181               	movf	(detect_color@m+1)& (0+255),w,b
  2123  001298  22DA               	addwfc	fsr2h,f,c
  2124  00129A  CFDE F054          	movff	postinc2,??_detect_color+2
  2125  00129E  CFDD F055          	movff	postdec2,??_detect_color+3
  2126  0012A2  C054  F003         	movff	??_detect_color+2,___xxtofl@val
  2127  0012A6  C055  F004         	movff	??_detect_color+3,___xxtofl@val+1
  2128  0012AA  6A05               	clrf	(___xxtofl@val+2)^0,c
  2129  0012AC  6A06               	clrf	(___xxtofl@val+3)^0,c
  2130  0012AE  0E00               	movlw	0
  2131  0012B0  EC5B  F01D         	call	___xxtofl
  2132  0012B4  C003  F011         	movff	?___xxtofl,___fldiv@b
  2133  0012B8  C004  F012         	movff	?___xxtofl+1,___fldiv@b+1
  2134  0012BC  C005  F013         	movff	?___xxtofl+2,___fldiv@b+2
  2135  0012C0  C006  F014         	movff	?___xxtofl+3,___fldiv@b+3
  2136  0012C4  EC58  F013         	call	___fldiv	;wreg free
  2137  0012C8  C011  F02A         	movff	?___fldiv,___flmul@b
  2138  0012CC  C012  F02B         	movff	?___fldiv+1,___flmul@b+1
  2139  0012D0  C013  F02C         	movff	?___fldiv+2,___flmul@b+2
  2140  0012D4  C014  F02D         	movff	?___fldiv+3,___flmul@b+3
  2141  0012D8  0E00               	movlw	0
  2142  0012DA  6E2E               	movwf	___flmul@a^0,c
  2143  0012DC  0E00               	movlw	0
  2144  0012DE  6E2F               	movwf	(___flmul@a+1)^0,c
  2145  0012E0  0EC8               	movlw	200
  2146  0012E2  6E30               	movwf	(___flmul@a+2)^0,c
  2147  0012E4  0E42               	movlw	66
  2148  0012E6  6E31               	movwf	(___flmul@a+3)^0,c
  2149  0012E8  EC6A  F00F         	call	___flmul	;wreg free
  2150  0012EC  C02A  F099         	movff	?___flmul,_detect_color$3189
  2151  0012F0  C02B  F09A         	movff	?___flmul+1,_detect_color$3189+1
  2152  0012F4  C02C  F09B         	movff	?___flmul+2,_detect_color$3189+2
  2153  0012F8  C02D  F09C         	movff	?___flmul+3,_detect_color$3189+3
  2154  0012FC  C099  F076         	movff	_detect_color$3189,lroundf@x
  2155  001300  C09A  F077         	movff	_detect_color$3189+1,lroundf@x+1
  2156  001304  C09B  F078         	movff	_detect_color$3189+2,lroundf@x+2
  2157  001308  C09C  F079         	movff	_detect_color$3189+3,lroundf@x+3
  2158  00130C  EC6D  F02A         	call	_lroundf	;wreg free
  2159  001310                     
  2160                           ;color.c: 299:     GC = lroundf((float)(m->R)/(w->GR)*100);
  2161  001310  0100               	movlb	0	; () banked
  2162  001312  EE20 F006          	lfsr	2,6
  2163  001316  5182               	movf	detect_color@w& (0+255),w,b
  2164  001318  26D9               	addwf	fsr2l,f,c
  2165  00131A  5183               	movf	(detect_color@w+1)& (0+255),w,b
  2166  00131C  22DA               	addwfc	fsr2h,f,c
  2167  00131E  CFDE F052          	movff	postinc2,??_detect_color
  2168  001322  CFDD F053          	movff	postdec2,??_detect_color+1
  2169  001326  C052  F003         	movff	??_detect_color,___xxtofl@val
  2170  00132A  C053  F004         	movff	??_detect_color+1,___xxtofl@val+1
  2171  00132E  6A05               	clrf	(___xxtofl@val+2)^0,c
  2172  001330  6A06               	clrf	(___xxtofl@val+3)^0,c
  2173  001332  0E00               	movlw	0
  2174  001334  EC5B  F01D         	call	___xxtofl
  2175  001338  C003  F015         	movff	?___xxtofl,___fldiv@a
  2176  00133C  C004  F016         	movff	?___xxtofl+1,___fldiv@a+1
  2177  001340  C005  F017         	movff	?___xxtofl+2,___fldiv@a+2
  2178  001344  C006  F018         	movff	?___xxtofl+3,___fldiv@a+3
  2179  001348  C080  FFD9         	movff	detect_color@m,fsr2l
  2180  00134C  C081  FFDA         	movff	detect_color@m+1,fsr2h
  2181  001350  CFDE F054          	movff	postinc2,??_detect_color+2
  2182  001354  CFDD F055          	movff	postdec2,??_detect_color+3
  2183  001358  C054  F003         	movff	??_detect_color+2,___xxtofl@val
  2184  00135C  C055  F004         	movff	??_detect_color+3,___xxtofl@val+1
  2185  001360  6A05               	clrf	(___xxtofl@val+2)^0,c
  2186  001362  6A06               	clrf	(___xxtofl@val+3)^0,c
  2187  001364  0E00               	movlw	0
  2188  001366  EC5B  F01D         	call	___xxtofl
  2189  00136A  C003  F011         	movff	?___xxtofl,___fldiv@b
  2190  00136E  C004  F012         	movff	?___xxtofl+1,___fldiv@b+1
  2191  001372  C005  F013         	movff	?___xxtofl+2,___fldiv@b+2
  2192  001376  C006  F014         	movff	?___xxtofl+3,___fldiv@b+3
  2193  00137A  EC58  F013         	call	___fldiv	;wreg free
  2194  00137E  C011  F02A         	movff	?___fldiv,___flmul@b
  2195  001382  C012  F02B         	movff	?___fldiv+1,___flmul@b+1
  2196  001386  C013  F02C         	movff	?___fldiv+2,___flmul@b+2
  2197  00138A  C014  F02D         	movff	?___fldiv+3,___flmul@b+3
  2198  00138E  0E00               	movlw	0
  2199  001390  6E2E               	movwf	___flmul@a^0,c
  2200  001392  0E00               	movlw	0
  2201  001394  6E2F               	movwf	(___flmul@a+1)^0,c
  2202  001396  0EC8               	movlw	200
  2203  001398  6E30               	movwf	(___flmul@a+2)^0,c
  2204  00139A  0E42               	movlw	66
  2205  00139C  6E31               	movwf	(___flmul@a+3)^0,c
  2206  00139E  EC6A  F00F         	call	___flmul	;wreg free
  2207  0013A2  C02A  F099         	movff	?___flmul,_detect_color$3189
  2208  0013A6  C02B  F09A         	movff	?___flmul+1,_detect_color$3189+1
  2209  0013AA  C02C  F09B         	movff	?___flmul+2,_detect_color$3189+2
  2210  0013AE  C02D  F09C         	movff	?___flmul+3,_detect_color$3189+3
  2211  0013B2  C099  F076         	movff	_detect_color$3189,lroundf@x
  2212  0013B6  C09A  F077         	movff	_detect_color$3189+1,lroundf@x+1
  2213  0013BA  C09B  F078         	movff	_detect_color$3189+2,lroundf@x+2
  2214  0013BE  C09C  F079         	movff	_detect_color$3189+3,lroundf@x+3
  2215  0013C2  EC6D  F02A         	call	_lroundf	;wreg free
  2216  0013C6                     
  2217                           ;color.c: 301:     _delay((unsigned long)((50)*(64000000/4000.0)));
  2218  0013C6  0E05               	movlw	5
  2219  0013C8  6E53               	movwf	(??_detect_color+1)^0,c
  2220  0013CA  0E0F               	movlw	15
  2221  0013CC  6E52               	movwf	??_detect_color^0,c
  2222  0013CE  0EF1               	movlw	241
  2223  0013D0                     u6647:
  2224  0013D0  2EE8               	decfsz	wreg,f,c
  2225  0013D2  D7FE               	bra	u6647
  2226  0013D4  2E52               	decfsz	??_detect_color^0,f,c
  2227  0013D6  D7FC               	bra	u6647
  2228  0013D8  2E53               	decfsz	(??_detect_color+1)^0,f,c
  2229  0013DA  D7FA               	bra	u6647
  2230  0013DC  F000               	nop	
  2231  0013DE                     
  2232                           ;color.c: 303:     LED_B();
  2233  0013DE  EC86  F02B         	call	_LED_B	;wreg free
  2234  0013E2                     
  2235                           ;color.c: 304:     read_color(m);
  2236  0013E2  C080  F00E         	movff	detect_color@m,read_color@m
  2237  0013E6  C081  F00F         	movff	detect_color@m+1,read_color@m+1
  2238  0013EA  EC1D  F028         	call	_read_color	;wreg free
  2239  0013EE                     
  2240                           ;color.c: 305:     BR = lroundf((float)(m->R)/(w->BR)*100); BG = lroundf((float)(m->G)/(
      +                          w->BG)*100); BB = lroundf((float)(m->B)/(w->BB)*100);
  2241  0013EE  0100               	movlb	0	; () banked
  2242  0013F0  EE20 F00C          	lfsr	2,12
  2243  0013F4  5182               	movf	detect_color@w& (0+255),w,b
  2244  0013F6  26D9               	addwf	fsr2l,f,c
  2245  0013F8  5183               	movf	(detect_color@w+1)& (0+255),w,b
  2246  0013FA  22DA               	addwfc	fsr2h,f,c
  2247  0013FC  CFDE F052          	movff	postinc2,??_detect_color
  2248  001400  CFDD F053          	movff	postdec2,??_detect_color+1
  2249  001404  C052  F003         	movff	??_detect_color,___xxtofl@val
  2250  001408  C053  F004         	movff	??_detect_color+1,___xxtofl@val+1
  2251  00140C  6A05               	clrf	(___xxtofl@val+2)^0,c
  2252  00140E  6A06               	clrf	(___xxtofl@val+3)^0,c
  2253  001410  0E00               	movlw	0
  2254  001412  EC5B  F01D         	call	___xxtofl
  2255  001416  C003  F015         	movff	?___xxtofl,___fldiv@a
  2256  00141A  C004  F016         	movff	?___xxtofl+1,___fldiv@a+1
  2257  00141E  C005  F017         	movff	?___xxtofl+2,___fldiv@a+2
  2258  001422  C006  F018         	movff	?___xxtofl+3,___fldiv@a+3
  2259  001426  C080  FFD9         	movff	detect_color@m,fsr2l
  2260  00142A  C081  FFDA         	movff	detect_color@m+1,fsr2h
  2261  00142E  CFDE F054          	movff	postinc2,??_detect_color+2
  2262  001432  CFDD F055          	movff	postdec2,??_detect_color+3
  2263  001436  C054  F003         	movff	??_detect_color+2,___xxtofl@val
  2264  00143A  C055  F004         	movff	??_detect_color+3,___xxtofl@val+1
  2265  00143E  6A05               	clrf	(___xxtofl@val+2)^0,c
  2266  001440  6A06               	clrf	(___xxtofl@val+3)^0,c
  2267  001442  0E00               	movlw	0
  2268  001444  EC5B  F01D         	call	___xxtofl
  2269  001448  C003  F011         	movff	?___xxtofl,___fldiv@b
  2270  00144C  C004  F012         	movff	?___xxtofl+1,___fldiv@b+1
  2271  001450  C005  F013         	movff	?___xxtofl+2,___fldiv@b+2
  2272  001454  C006  F014         	movff	?___xxtofl+3,___fldiv@b+3
  2273  001458  EC58  F013         	call	___fldiv	;wreg free
  2274  00145C  C011  F02A         	movff	?___fldiv,___flmul@b
  2275  001460  C012  F02B         	movff	?___fldiv+1,___flmul@b+1
  2276  001464  C013  F02C         	movff	?___fldiv+2,___flmul@b+2
  2277  001468  C014  F02D         	movff	?___fldiv+3,___flmul@b+3
  2278  00146C  0E00               	movlw	0
  2279  00146E  6E2E               	movwf	___flmul@a^0,c
  2280  001470  0E00               	movlw	0
  2281  001472  6E2F               	movwf	(___flmul@a+1)^0,c
  2282  001474  0EC8               	movlw	200
  2283  001476  6E30               	movwf	(___flmul@a+2)^0,c
  2284  001478  0E42               	movlw	66
  2285  00147A  6E31               	movwf	(___flmul@a+3)^0,c
  2286  00147C  EC6A  F00F         	call	___flmul	;wreg free
  2287  001480  C02A  F099         	movff	?___flmul,_detect_color$3189
  2288  001484  C02B  F09A         	movff	?___flmul+1,_detect_color$3189+1
  2289  001488  C02C  F09B         	movff	?___flmul+2,_detect_color$3189+2
  2290  00148C  C02D  F09C         	movff	?___flmul+3,_detect_color$3189+3
  2291  001490                     
  2292                           ;color.c: 305:     BR = lroundf((float)(m->R)/(w->BR)*100); BG = lroundf((float)(m->G)/(
      +                          w->BG)*100); BB = lroundf((float)(m->B)/(w->BB)*100);
  2293  001490  C099  F076         	movff	_detect_color$3189,lroundf@x
  2294  001494  C09A  F077         	movff	_detect_color$3189+1,lroundf@x+1
  2295  001498  C09B  F078         	movff	_detect_color$3189+2,lroundf@x+2
  2296  00149C  C09C  F079         	movff	_detect_color$3189+3,lroundf@x+3
  2297  0014A0  EC6D  F02A         	call	_lroundf	;wreg free
  2298  0014A4  C076  F092         	movff	?_lroundf,detect_color@BR
  2299  0014A8  C077  F093         	movff	?_lroundf+1,detect_color@BR+1
  2300  0014AC  0100               	movlb	0	; () banked
  2301  0014AE  EE20 F00E          	lfsr	2,14
  2302  0014B2  5182               	movf	detect_color@w& (0+255),w,b
  2303  0014B4  26D9               	addwf	fsr2l,f,c
  2304  0014B6  5183               	movf	(detect_color@w+1)& (0+255),w,b
  2305  0014B8  22DA               	addwfc	fsr2h,f,c
  2306  0014BA  CFDE F052          	movff	postinc2,??_detect_color
  2307  0014BE  CFDD F053          	movff	postdec2,??_detect_color+1
  2308  0014C2  C052  F003         	movff	??_detect_color,___xxtofl@val
  2309  0014C6  C053  F004         	movff	??_detect_color+1,___xxtofl@val+1
  2310  0014CA  6A05               	clrf	(___xxtofl@val+2)^0,c
  2311  0014CC  6A06               	clrf	(___xxtofl@val+3)^0,c
  2312  0014CE  0E00               	movlw	0
  2313  0014D0  EC5B  F01D         	call	___xxtofl
  2314  0014D4  C003  F015         	movff	?___xxtofl,___fldiv@a
  2315  0014D8  C004  F016         	movff	?___xxtofl+1,___fldiv@a+1
  2316  0014DC  C005  F017         	movff	?___xxtofl+2,___fldiv@a+2
  2317  0014E0  C006  F018         	movff	?___xxtofl+3,___fldiv@a+3
  2318  0014E4  0100               	movlb	0	; () banked
  2319  0014E6  EE20 F002          	lfsr	2,2
  2320  0014EA  5180               	movf	detect_color@m& (0+255),w,b
  2321  0014EC  26D9               	addwf	fsr2l,f,c
  2322  0014EE  5181               	movf	(detect_color@m+1)& (0+255),w,b
  2323  0014F0  22DA               	addwfc	fsr2h,f,c
  2324  0014F2  CFDE F054          	movff	postinc2,??_detect_color+2
  2325  0014F6  CFDD F055          	movff	postdec2,??_detect_color+3
  2326  0014FA  C054  F003         	movff	??_detect_color+2,___xxtofl@val
  2327  0014FE  C055  F004         	movff	??_detect_color+3,___xxtofl@val+1
  2328  001502  6A05               	clrf	(___xxtofl@val+2)^0,c
  2329  001504  6A06               	clrf	(___xxtofl@val+3)^0,c
  2330  001506  0E00               	movlw	0
  2331  001508  EC5B  F01D         	call	___xxtofl
  2332  00150C  C003  F011         	movff	?___xxtofl,___fldiv@b
  2333  001510  C004  F012         	movff	?___xxtofl+1,___fldiv@b+1
  2334  001514  C005  F013         	movff	?___xxtofl+2,___fldiv@b+2
  2335  001518  C006  F014         	movff	?___xxtofl+3,___fldiv@b+3
  2336  00151C  EC58  F013         	call	___fldiv	;wreg free
  2337  001520  C011  F02A         	movff	?___fldiv,___flmul@b
  2338  001524  C012  F02B         	movff	?___fldiv+1,___flmul@b+1
  2339  001528  C013  F02C         	movff	?___fldiv+2,___flmul@b+2
  2340  00152C  C014  F02D         	movff	?___fldiv+3,___flmul@b+3
  2341  001530  0E00               	movlw	0
  2342  001532  6E2E               	movwf	___flmul@a^0,c
  2343  001534  0E00               	movlw	0
  2344  001536  6E2F               	movwf	(___flmul@a+1)^0,c
  2345  001538  0EC8               	movlw	200
  2346  00153A  6E30               	movwf	(___flmul@a+2)^0,c
  2347  00153C  0E42               	movlw	66
  2348  00153E  6E31               	movwf	(___flmul@a+3)^0,c
  2349  001540  EC6A  F00F         	call	___flmul	;wreg free
  2350  001544  C02A  F099         	movff	?___flmul,_detect_color$3189
  2351  001548  C02B  F09A         	movff	?___flmul+1,_detect_color$3189+1
  2352  00154C  C02C  F09B         	movff	?___flmul+2,_detect_color$3189+2
  2353  001550  C02D  F09C         	movff	?___flmul+3,_detect_color$3189+3
  2354  001554  C099  F076         	movff	_detect_color$3189,lroundf@x
  2355  001558  C09A  F077         	movff	_detect_color$3189+1,lroundf@x+1
  2356  00155C  C09B  F078         	movff	_detect_color$3189+2,lroundf@x+2
  2357  001560  C09C  F079         	movff	_detect_color$3189+3,lroundf@x+3
  2358  001564  EC6D  F02A         	call	_lroundf	;wreg free
  2359  001568  C076  F097         	movff	?_lroundf,detect_color@BG
  2360  00156C  C077  F098         	movff	?_lroundf+1,detect_color@BG+1
  2361  001570  0100               	movlb	0	; () banked
  2362  001572  EE20 F010          	lfsr	2,16
  2363  001576  5182               	movf	detect_color@w& (0+255),w,b
  2364  001578  26D9               	addwf	fsr2l,f,c
  2365  00157A  5183               	movf	(detect_color@w+1)& (0+255),w,b
  2366  00157C  22DA               	addwfc	fsr2h,f,c
  2367  00157E  CFDE F052          	movff	postinc2,??_detect_color
  2368  001582  CFDD F053          	movff	postdec2,??_detect_color+1
  2369  001586  C052  F003         	movff	??_detect_color,___xxtofl@val
  2370  00158A  C053  F004         	movff	??_detect_color+1,___xxtofl@val+1
  2371  00158E  6A05               	clrf	(___xxtofl@val+2)^0,c
  2372  001590  6A06               	clrf	(___xxtofl@val+3)^0,c
  2373  001592  0E00               	movlw	0
  2374  001594  EC5B  F01D         	call	___xxtofl
  2375  001598  C003  F015         	movff	?___xxtofl,___fldiv@a
  2376  00159C  C004  F016         	movff	?___xxtofl+1,___fldiv@a+1
  2377  0015A0  C005  F017         	movff	?___xxtofl+2,___fldiv@a+2
  2378  0015A4  C006  F018         	movff	?___xxtofl+3,___fldiv@a+3
  2379  0015A8  0100               	movlb	0	; () banked
  2380  0015AA  EE20 F004          	lfsr	2,4
  2381  0015AE  5180               	movf	detect_color@m& (0+255),w,b
  2382  0015B0  26D9               	addwf	fsr2l,f,c
  2383  0015B2  5181               	movf	(detect_color@m+1)& (0+255),w,b
  2384  0015B4  22DA               	addwfc	fsr2h,f,c
  2385  0015B6  CFDE F054          	movff	postinc2,??_detect_color+2
  2386  0015BA  CFDD F055          	movff	postdec2,??_detect_color+3
  2387  0015BE  C054  F003         	movff	??_detect_color+2,___xxtofl@val
  2388  0015C2  C055  F004         	movff	??_detect_color+3,___xxtofl@val+1
  2389  0015C6  6A05               	clrf	(___xxtofl@val+2)^0,c
  2390  0015C8  6A06               	clrf	(___xxtofl@val+3)^0,c
  2391  0015CA  0E00               	movlw	0
  2392  0015CC  EC5B  F01D         	call	___xxtofl
  2393  0015D0  C003  F011         	movff	?___xxtofl,___fldiv@b
  2394  0015D4  C004  F012         	movff	?___xxtofl+1,___fldiv@b+1
  2395  0015D8  C005  F013         	movff	?___xxtofl+2,___fldiv@b+2
  2396  0015DC  C006  F014         	movff	?___xxtofl+3,___fldiv@b+3
  2397  0015E0  EC58  F013         	call	___fldiv	;wreg free
  2398  0015E4  C011  F02A         	movff	?___fldiv,___flmul@b
  2399  0015E8  C012  F02B         	movff	?___fldiv+1,___flmul@b+1
  2400  0015EC  C013  F02C         	movff	?___fldiv+2,___flmul@b+2
  2401  0015F0  C014  F02D         	movff	?___fldiv+3,___flmul@b+3
  2402  0015F4  0E00               	movlw	0
  2403  0015F6  6E2E               	movwf	___flmul@a^0,c
  2404  0015F8  0E00               	movlw	0
  2405  0015FA  6E2F               	movwf	(___flmul@a+1)^0,c
  2406  0015FC  0EC8               	movlw	200
  2407  0015FE  6E30               	movwf	(___flmul@a+2)^0,c
  2408  001600  0E42               	movlw	66
  2409  001602  6E31               	movwf	(___flmul@a+3)^0,c
  2410  001604  EC6A  F00F         	call	___flmul	;wreg free
  2411  001608  C02A  F099         	movff	?___flmul,_detect_color$3189
  2412  00160C  C02B  F09A         	movff	?___flmul+1,_detect_color$3189+1
  2413  001610  C02C  F09B         	movff	?___flmul+2,_detect_color$3189+2
  2414  001614  C02D  F09C         	movff	?___flmul+3,_detect_color$3189+3
  2415  001618  C099  F076         	movff	_detect_color$3189,lroundf@x
  2416  00161C  C09A  F077         	movff	_detect_color$3189+1,lroundf@x+1
  2417  001620  C09B  F078         	movff	_detect_color$3189+2,lroundf@x+2
  2418  001624  C09C  F079         	movff	_detect_color$3189+3,lroundf@x+3
  2419  001628  EC6D  F02A         	call	_lroundf	;wreg free
  2420  00162C  C076  F094         	movff	?_lroundf,detect_color@BB
  2421  001630  C077  F095         	movff	?_lroundf+1,detect_color@BB+1
  2422  001634                     
  2423                           ;color.c: 306:     _delay((unsigned long)((50)*(64000000/4000.0)));
  2424  001634  0E05               	movlw	5
  2425  001636  6E53               	movwf	(??_detect_color+1)^0,c
  2426  001638  0E0F               	movlw	15
  2427  00163A  6E52               	movwf	??_detect_color^0,c
  2428  00163C  0EF1               	movlw	241
  2429  00163E                     u6657:
  2430  00163E  2EE8               	decfsz	wreg,f,c
  2431  001640  D7FE               	bra	u6657
  2432  001642  2E52               	decfsz	??_detect_color^0,f,c
  2433  001644  D7FC               	bra	u6657
  2434  001646  2E53               	decfsz	(??_detect_color+1)^0,f,c
  2435  001648  D7FA               	bra	u6657
  2436  00164A  F000               	nop	
  2437  00164C                     
  2438                           ;color.c: 309:     if (compare(0, BR, 70)){
  2439  00164C  0E00               	movlw	0
  2440  00164E  0100               	movlb	0	; () banked
  2441  001650  6F7B               	movwf	(compare@lower+1)& (0+255),b
  2442  001652  0E00               	movlw	0
  2443  001654  6F7A               	movwf	compare@lower& (0+255),b
  2444  001656  C092  F07C         	movff	detect_color@BR,compare@value2compare
  2445  00165A  C093  F07D         	movff	detect_color@BR+1,compare@value2compare+1
  2446  00165E  0E00               	movlw	0
  2447  001660  6F7F               	movwf	(compare@upper+1)& (0+255),b
  2448  001662  0E46               	movlw	70
  2449  001664  6F7E               	movwf	compare@upper& (0+255),b
  2450  001666  EC50  F02A         	call	_compare	;wreg free
  2451  00166A  0900               	iorlw	0
  2452  00166C  B4D8               	btfsc	status,2,c
  2453  00166E  EF3B  F00B         	goto	u6361
  2454  001672  EF3D  F00B         	goto	u6360
  2455  001676                     u6361:
  2456  001676  EFAE  F00B         	goto	l6002
  2457  00167A                     u6360:
  2458  00167A                     
  2459                           ;color.c: 311:          if (compare(0, lroundf((float)(GG + BG)/BB * 200), 414)){color =
      +                           3;}
  2460  00167A  C094  F003         	movff	detect_color@BB,___xxtofl@val
  2461  00167E  C095  F004         	movff	detect_color@BB+1,___xxtofl@val+1
  2462  001682  6A05               	clrf	(___xxtofl@val+2)^0,c
  2463  001684  6A06               	clrf	(___xxtofl@val+3)^0,c
  2464  001686  0E00               	movlw	0
  2465  001688  EC5B  F01D         	call	___xxtofl
  2466  00168C  C003  F015         	movff	?___xxtofl,___fldiv@a
  2467  001690  C004  F016         	movff	?___xxtofl+1,___fldiv@a+1
  2468  001694  C005  F017         	movff	?___xxtofl+2,___fldiv@a+2
  2469  001698  C006  F018         	movff	?___xxtofl+3,___fldiv@a+3
  2470  00169C  0100               	movlb	0	; () banked
  2471  00169E  5197               	movf	detect_color@BG& (0+255),w,b
  2472  0016A0  258E               	addwf	detect_color@GG& (0+255),w,b
  2473  0016A2  6E52               	movwf	??_detect_color^0,c
  2474  0016A4  5198               	movf	(detect_color@BG+1)& (0+255),w,b
  2475  0016A6  218F               	addwfc	(detect_color@GG+1)& (0+255),w,b
  2476  0016A8  6E53               	movwf	(??_detect_color+1)^0,c
  2477  0016AA  C052  F003         	movff	??_detect_color,___xxtofl@val
  2478  0016AE  C053  F004         	movff	??_detect_color+1,___xxtofl@val+1
  2479  0016B2  6A05               	clrf	(___xxtofl@val+2)^0,c
  2480  0016B4  6A06               	clrf	(___xxtofl@val+3)^0,c
  2481  0016B6  0E00               	movlw	0
  2482  0016B8  EC5B  F01D         	call	___xxtofl
  2483  0016BC  C003  F011         	movff	?___xxtofl,___fldiv@b
  2484  0016C0  C004  F012         	movff	?___xxtofl+1,___fldiv@b+1
  2485  0016C4  C005  F013         	movff	?___xxtofl+2,___fldiv@b+2
  2486  0016C8  C006  F014         	movff	?___xxtofl+3,___fldiv@b+3
  2487  0016CC  EC58  F013         	call	___fldiv	;wreg free
  2488  0016D0  C011  F02A         	movff	?___fldiv,___flmul@b
  2489  0016D4  C012  F02B         	movff	?___fldiv+1,___flmul@b+1
  2490  0016D8  C013  F02C         	movff	?___fldiv+2,___flmul@b+2
  2491  0016DC  C014  F02D         	movff	?___fldiv+3,___flmul@b+3
  2492  0016E0  0E00               	movlw	0
  2493  0016E2  6E2E               	movwf	___flmul@a^0,c
  2494  0016E4  0E00               	movlw	0
  2495  0016E6  6E2F               	movwf	(___flmul@a+1)^0,c
  2496  0016E8  0E48               	movlw	72
  2497  0016EA  6E30               	movwf	(___flmul@a+2)^0,c
  2498  0016EC  0E43               	movlw	67
  2499  0016EE  6E31               	movwf	(___flmul@a+3)^0,c
  2500  0016F0  EC6A  F00F         	call	___flmul	;wreg free
  2501  0016F4  C02A  F099         	movff	?___flmul,_detect_color$3189
  2502  0016F8  C02B  F09A         	movff	?___flmul+1,_detect_color$3189+1
  2503  0016FC  C02C  F09B         	movff	?___flmul+2,_detect_color$3189+2
  2504  001700  C02D  F09C         	movff	?___flmul+3,_detect_color$3189+3
  2505                           
  2506                           ;color.c: 311:          if (compare(0, lroundf((float)(GG + BG)/BB * 200), 414)){color =
      +                           3;}
  2507  001704  0E00               	movlw	0
  2508  001706  0100               	movlb	0	; () banked
  2509  001708  6F7B               	movwf	(compare@lower+1)& (0+255),b
  2510  00170A  0E00               	movlw	0
  2511  00170C  6F7A               	movwf	compare@lower& (0+255),b
  2512  00170E  C099  F076         	movff	_detect_color$3189,lroundf@x
  2513  001712  C09A  F077         	movff	_detect_color$3189+1,lroundf@x+1
  2514  001716  C09B  F078         	movff	_detect_color$3189+2,lroundf@x+2
  2515  00171A  C09C  F079         	movff	_detect_color$3189+3,lroundf@x+3
  2516  00171E  EC6D  F02A         	call	_lroundf	;wreg free
  2517  001722  C076  F07C         	movff	?_lroundf,compare@value2compare
  2518  001726  C077  F07D         	movff	?_lroundf+1,compare@value2compare+1
  2519  00172A  0E01               	movlw	1
  2520  00172C  0100               	movlb	0	; () banked
  2521  00172E  6F7F               	movwf	(compare@upper+1)& (0+255),b
  2522  001730  0E9E               	movlw	158
  2523  001732  6F7E               	movwf	compare@upper& (0+255),b
  2524  001734  EC50  F02A         	call	_compare	;wreg free
  2525  001738  0900               	iorlw	0
  2526  00173A  B4D8               	btfsc	status,2,c
  2527  00173C  EFA2  F00B         	goto	u6371
  2528  001740  EFA4  F00B         	goto	u6370
  2529  001744                     u6371:
  2530  001744  EFA9  F00B         	goto	l6000
  2531  001748                     u6370:
  2532  001748  0E03               	movlw	3
  2533  00174A  0100               	movlb	0	; () banked
  2534  00174C  6F96               	movwf	detect_color@color& (0+255),b
  2535  00174E  EF8F  F00C         	goto	l6032
  2536  001752                     l6000:
  2537  001752  0E02               	movlw	2
  2538  001754  0100               	movlb	0	; () banked
  2539  001756  6F96               	movwf	detect_color@color& (0+255),b
  2540  001758  EF8F  F00C         	goto	l6032
  2541  00175C                     l6002:
  2542                           
  2543                           ;color.c: 315:         if (compare(0, BG, 75)){
  2544  00175C  0E00               	movlw	0
  2545  00175E  0100               	movlb	0	; () banked
  2546  001760  6F7B               	movwf	(compare@lower+1)& (0+255),b
  2547  001762  0E00               	movlw	0
  2548  001764  6F7A               	movwf	compare@lower& (0+255),b
  2549  001766  C097  F07C         	movff	detect_color@BG,compare@value2compare
  2550  00176A  C098  F07D         	movff	detect_color@BG+1,compare@value2compare+1
  2551  00176E  0E00               	movlw	0
  2552  001770  6F7F               	movwf	(compare@upper+1)& (0+255),b
  2553  001772  0E4B               	movlw	75
  2554  001774  6F7E               	movwf	compare@upper& (0+255),b
  2555  001776  EC50  F02A         	call	_compare	;wreg free
  2556  00177A  0900               	iorlw	0
  2557  00177C  B4D8               	btfsc	status,2,c
  2558  00177E  EFC3  F00B         	goto	u6381
  2559  001782  EFC5  F00B         	goto	u6380
  2560  001786                     u6381:
  2561  001786  EF3F  F00C         	goto	l6014
  2562  00178A                     u6380:
  2563  00178A                     
  2564                           ;color.c: 317:             if (compare(0, lroundf((float)RR/RG * 500), 670)){
  2565  00178A  C08A  F003         	movff	detect_color@RG,___xxtofl@val
  2566  00178E  C08B  F004         	movff	detect_color@RG+1,___xxtofl@val+1
  2567  001792  6A05               	clrf	(___xxtofl@val+2)^0,c
  2568  001794  6A06               	clrf	(___xxtofl@val+3)^0,c
  2569  001796  0E00               	movlw	0
  2570  001798  EC5B  F01D         	call	___xxtofl
  2571  00179C  C003  F015         	movff	?___xxtofl,___fldiv@a
  2572  0017A0  C004  F016         	movff	?___xxtofl+1,___fldiv@a+1
  2573  0017A4  C005  F017         	movff	?___xxtofl+2,___fldiv@a+2
  2574  0017A8  C006  F018         	movff	?___xxtofl+3,___fldiv@a+3
  2575  0017AC  C090  F003         	movff	detect_color@RR,___xxtofl@val
  2576  0017B0  C091  F004         	movff	detect_color@RR+1,___xxtofl@val+1
  2577  0017B4  6A05               	clrf	(___xxtofl@val+2)^0,c
  2578  0017B6  6A06               	clrf	(___xxtofl@val+3)^0,c
  2579  0017B8  0E00               	movlw	0
  2580  0017BA  EC5B  F01D         	call	___xxtofl
  2581  0017BE  C003  F011         	movff	?___xxtofl,___fldiv@b
  2582  0017C2  C004  F012         	movff	?___xxtofl+1,___fldiv@b+1
  2583  0017C6  C005  F013         	movff	?___xxtofl+2,___fldiv@b+2
  2584  0017CA  C006  F014         	movff	?___xxtofl+3,___fldiv@b+3
  2585  0017CE  EC58  F013         	call	___fldiv	;wreg free
  2586  0017D2  C011  F02A         	movff	?___fldiv,___flmul@b
  2587  0017D6  C012  F02B         	movff	?___fldiv+1,___flmul@b+1
  2588  0017DA  C013  F02C         	movff	?___fldiv+2,___flmul@b+2
  2589  0017DE  C014  F02D         	movff	?___fldiv+3,___flmul@b+3
  2590  0017E2  0E00               	movlw	0
  2591  0017E4  6E2E               	movwf	___flmul@a^0,c
  2592  0017E6  0E00               	movlw	0
  2593  0017E8  6E2F               	movwf	(___flmul@a+1)^0,c
  2594  0017EA  0EFA               	movlw	250
  2595  0017EC  6E30               	movwf	(___flmul@a+2)^0,c
  2596  0017EE  0E43               	movlw	67
  2597  0017F0  6E31               	movwf	(___flmul@a+3)^0,c
  2598  0017F2  EC6A  F00F         	call	___flmul	;wreg free
  2599  0017F6  C02A  F099         	movff	?___flmul,_detect_color$3189
  2600  0017FA  C02B  F09A         	movff	?___flmul+1,_detect_color$3189+1
  2601  0017FE  C02C  F09B         	movff	?___flmul+2,_detect_color$3189+2
  2602  001802  C02D  F09C         	movff	?___flmul+3,_detect_color$3189+3
  2603                           
  2604                           ;color.c: 317:             if (compare(0, lroundf((float)RR/RG * 500), 670)){
  2605  001806  0E00               	movlw	0
  2606  001808  0100               	movlb	0	; () banked
  2607  00180A  6F7B               	movwf	(compare@lower+1)& (0+255),b
  2608  00180C  0E00               	movlw	0
  2609  00180E  6F7A               	movwf	compare@lower& (0+255),b
  2610  001810  C099  F076         	movff	_detect_color$3189,lroundf@x
  2611  001814  C09A  F077         	movff	_detect_color$3189+1,lroundf@x+1
  2612  001818  C09B  F078         	movff	_detect_color$3189+2,lroundf@x+2
  2613  00181C  C09C  F079         	movff	_detect_color$3189+3,lroundf@x+3
  2614  001820  EC6D  F02A         	call	_lroundf	;wreg free
  2615  001824  C076  F07C         	movff	?_lroundf,compare@value2compare
  2616  001828  C077  F07D         	movff	?_lroundf+1,compare@value2compare+1
  2617  00182C  0E02               	movlw	2
  2618  00182E  0100               	movlb	0	; () banked
  2619  001830  6F7F               	movwf	(compare@upper+1)& (0+255),b
  2620  001832  0E9E               	movlw	158
  2621  001834  6F7E               	movwf	compare@upper& (0+255),b
  2622  001836  EC50  F02A         	call	_compare	;wreg free
  2623  00183A  0900               	iorlw	0
  2624  00183C  B4D8               	btfsc	status,2,c
  2625  00183E  EF23  F00C         	goto	u6391
  2626  001842  EF25  F00C         	goto	u6390
  2627  001846                     u6391:
  2628  001846  EF3A  F00C         	goto	l6012
  2629  00184A                     u6390:
  2630  00184A                     
  2631                           ;color.c: 318:                 if (GR > 90){color = 6;}
  2632  00184A  0100               	movlb	0	; () banked
  2633  00184C  518D               	movf	(detect_color@GR+1)& (0+255),w,b
  2634  00184E  E109               	bnz	u6400
  2635  001850  0E5B               	movlw	91
  2636  001852  5D8C               	subwf	detect_color@GR& (0+255),w,b
  2637  001854  A0D8               	btfss	status,0,c
  2638  001856  EF2F  F00C         	goto	u6401
  2639  00185A  EF31  F00C         	goto	u6400
  2640  00185E                     u6401:
  2641  00185E  EF35  F00C         	goto	l6010
  2642  001862                     u6400:
  2643  001862                     
  2644                           ; BSR set to: 0
  2645  001862  0E06               	movlw	6
  2646  001864  6F96               	movwf	detect_color@color& (0+255),b
  2647  001866  EF8F  F00C         	goto	l6032
  2648  00186A                     l6010:
  2649  00186A  0E00               	movlw	0
  2650  00186C  0100               	movlb	0	; () banked
  2651  00186E  6F96               	movwf	detect_color@color& (0+255),b
  2652  001870  EF8F  F00C         	goto	l6032
  2653  001874                     l6012:
  2654  001874  0E01               	movlw	1
  2655  001876  0100               	movlb	0	; () banked
  2656  001878  6F96               	movwf	detect_color@color& (0+255),b
  2657  00187A  EF8F  F00C         	goto	l6032
  2658  00187E                     l6014:
  2659                           
  2660                           ;color.c: 324:             if (compare(0, BR, 90)){
  2661  00187E  0E00               	movlw	0
  2662  001880  0100               	movlb	0	; () banked
  2663  001882  6F7B               	movwf	(compare@lower+1)& (0+255),b
  2664  001884  0E00               	movlw	0
  2665  001886  6F7A               	movwf	compare@lower& (0+255),b
  2666  001888  C092  F07C         	movff	detect_color@BR,compare@value2compare
  2667  00188C  C093  F07D         	movff	detect_color@BR+1,compare@value2compare+1
  2668  001890  0E00               	movlw	0
  2669  001892  6F7F               	movwf	(compare@upper+1)& (0+255),b
  2670  001894  0E5A               	movlw	90
  2671  001896  6F7E               	movwf	compare@upper& (0+255),b
  2672  001898  EC50  F02A         	call	_compare	;wreg free
  2673  00189C  0900               	iorlw	0
  2674  00189E  B4D8               	btfsc	status,2,c
  2675  0018A0  EF54  F00C         	goto	u6411
  2676  0018A4  EF56  F00C         	goto	u6410
  2677  0018A8                     u6411:
  2678  0018A8  EF66  F00C         	goto	l6022
  2679  0018AC                     u6410:
  2680  0018AC                     
  2681                           ;color.c: 325:                 if (BG > 90){color = 7;}
  2682  0018AC  0100               	movlb	0	; () banked
  2683  0018AE  5198               	movf	(detect_color@BG+1)& (0+255),w,b
  2684  0018B0  E109               	bnz	u6420
  2685  0018B2  0E5B               	movlw	91
  2686  0018B4  5D97               	subwf	detect_color@BG& (0+255),w,b
  2687  0018B6  A0D8               	btfss	status,0,c
  2688  0018B8  EF60  F00C         	goto	u6421
  2689  0018BC  EF62  F00C         	goto	u6420
  2690  0018C0                     u6421:
  2691  0018C0  EF35  F00C         	goto	l6010
  2692  0018C4                     u6420:
  2693  0018C4                     
  2694                           ; BSR set to: 0
  2695  0018C4  0E07               	movlw	7
  2696  0018C6  6F96               	movwf	detect_color@color& (0+255),b
  2697  0018C8  EF8F  F00C         	goto	l6032
  2698  0018CC                     l6022:
  2699                           
  2700                           ;color.c: 329:                 if (BG < BB){color = 5;}
  2701  0018CC  0100               	movlb	0	; () banked
  2702  0018CE  5194               	movf	detect_color@BB& (0+255),w,b
  2703  0018D0  5D97               	subwf	detect_color@BG& (0+255),w,b
  2704  0018D2  5195               	movf	(detect_color@BB+1)& (0+255),w,b
  2705  0018D4  5998               	subwfb	(detect_color@BG+1)& (0+255),w,b
  2706  0018D6  B0D8               	btfsc	status,0,c
  2707  0018D8  EF70  F00C         	goto	u6431
  2708  0018DC  EF72  F00C         	goto	u6430
  2709  0018E0                     u6431:
  2710  0018E0  EF76  F00C         	goto	l6026
  2711  0018E4                     u6430:
  2712  0018E4                     
  2713                           ; BSR set to: 0
  2714  0018E4  0E05               	movlw	5
  2715  0018E6  6F96               	movwf	detect_color@color& (0+255),b
  2716  0018E8  EF8F  F00C         	goto	l6032
  2717  0018EC                     l6026:
  2718                           
  2719                           ; BSR set to: 0
  2720                           ;color.c: 331:                     if (compare(0, BB, 90)){color = 4;}
  2721  0018EC  0E00               	movlw	0
  2722  0018EE  6F7B               	movwf	(compare@lower+1)& (0+255),b
  2723  0018F0  0E00               	movlw	0
  2724  0018F2  6F7A               	movwf	compare@lower& (0+255),b
  2725  0018F4  C094  F07C         	movff	detect_color@BB,compare@value2compare
  2726  0018F8  C095  F07D         	movff	detect_color@BB+1,compare@value2compare+1
  2727  0018FC  0E00               	movlw	0
  2728  0018FE  6F7F               	movwf	(compare@upper+1)& (0+255),b
  2729  001900  0E5A               	movlw	90
  2730  001902  6F7E               	movwf	compare@upper& (0+255),b
  2731  001904  EC50  F02A         	call	_compare	;wreg free
  2732  001908  0900               	iorlw	0
  2733  00190A  B4D8               	btfsc	status,2,c
  2734  00190C  EF8A  F00C         	goto	u6441
  2735  001910  EF8C  F00C         	goto	u6440
  2736  001914                     u6441:
  2737  001914  EF35  F00C         	goto	l6010
  2738  001918                     u6440:
  2739  001918  0E04               	movlw	4
  2740  00191A  0100               	movlb	0	; () banked
  2741  00191C  6F96               	movwf	detect_color@color& (0+255),b
  2742  00191E                     l6032:
  2743                           
  2744                           ; BSR set to: 0
  2745                           ;color.c: 338:     if (compare(95, BR, 105) && compare(95,BG,105) && compare(95,BB,105))
      +                          {color = 8;}
  2746  00191E  0E00               	movlw	0
  2747  001920  6F7B               	movwf	(compare@lower+1)& (0+255),b
  2748  001922  0E5F               	movlw	95
  2749  001924  6F7A               	movwf	compare@lower& (0+255),b
  2750  001926  C092  F07C         	movff	detect_color@BR,compare@value2compare
  2751  00192A  C093  F07D         	movff	detect_color@BR+1,compare@value2compare+1
  2752  00192E  0E00               	movlw	0
  2753  001930  6F7F               	movwf	(compare@upper+1)& (0+255),b
  2754  001932  0E69               	movlw	105
  2755  001934  6F7E               	movwf	compare@upper& (0+255),b
  2756  001936  EC50  F02A         	call	_compare	;wreg free
  2757  00193A  0900               	iorlw	0
  2758  00193C  B4D8               	btfsc	status,2,c
  2759  00193E  EFA3  F00C         	goto	u6451
  2760  001942  EFA5  F00C         	goto	u6450
  2761  001946                     u6451:
  2762  001946  EFD6  F00C         	goto	l6040
  2763  00194A                     u6450:
  2764  00194A  0E00               	movlw	0
  2765  00194C  0100               	movlb	0	; () banked
  2766  00194E  6F7B               	movwf	(compare@lower+1)& (0+255),b
  2767  001950  0E5F               	movlw	95
  2768  001952  6F7A               	movwf	compare@lower& (0+255),b
  2769  001954  C097  F07C         	movff	detect_color@BG,compare@value2compare
  2770  001958  C098  F07D         	movff	detect_color@BG+1,compare@value2compare+1
  2771  00195C  0E00               	movlw	0
  2772  00195E  6F7F               	movwf	(compare@upper+1)& (0+255),b
  2773  001960  0E69               	movlw	105
  2774  001962  6F7E               	movwf	compare@upper& (0+255),b
  2775  001964  EC50  F02A         	call	_compare	;wreg free
  2776  001968  0900               	iorlw	0
  2777  00196A  B4D8               	btfsc	status,2,c
  2778  00196C  EFBA  F00C         	goto	u6461
  2779  001970  EFBC  F00C         	goto	u6460
  2780  001974                     u6461:
  2781  001974  EFD6  F00C         	goto	l6040
  2782  001978                     u6460:
  2783  001978  0E00               	movlw	0
  2784  00197A  0100               	movlb	0	; () banked
  2785  00197C  6F7B               	movwf	(compare@lower+1)& (0+255),b
  2786  00197E  0E5F               	movlw	95
  2787  001980  6F7A               	movwf	compare@lower& (0+255),b
  2788  001982  C094  F07C         	movff	detect_color@BB,compare@value2compare
  2789  001986  C095  F07D         	movff	detect_color@BB+1,compare@value2compare+1
  2790  00198A  0E00               	movlw	0
  2791  00198C  6F7F               	movwf	(compare@upper+1)& (0+255),b
  2792  00198E  0E69               	movlw	105
  2793  001990  6F7E               	movwf	compare@upper& (0+255),b
  2794  001992  EC50  F02A         	call	_compare	;wreg free
  2795  001996  0900               	iorlw	0
  2796  001998  B4D8               	btfsc	status,2,c
  2797  00199A  EFD1  F00C         	goto	u6471
  2798  00199E  EFD3  F00C         	goto	u6470
  2799  0019A2                     u6471:
  2800  0019A2  EFD6  F00C         	goto	l6040
  2801  0019A6                     u6470:
  2802  0019A6  0E08               	movlw	8
  2803  0019A8  0100               	movlb	0	; () banked
  2804  0019AA  6F96               	movwf	detect_color@color& (0+255),b
  2805  0019AC                     l6040:
  2806                           
  2807                           ;color.c: 339:     if (compare(0, BR, 25) && compare(0,RR,90)){color = 0;}
  2808  0019AC  0E00               	movlw	0
  2809  0019AE  0100               	movlb	0	; () banked
  2810  0019B0  6F7B               	movwf	(compare@lower+1)& (0+255),b
  2811  0019B2  0E00               	movlw	0
  2812  0019B4  6F7A               	movwf	compare@lower& (0+255),b
  2813  0019B6  C092  F07C         	movff	detect_color@BR,compare@value2compare
  2814  0019BA  C093  F07D         	movff	detect_color@BR+1,compare@value2compare+1
  2815  0019BE  0E00               	movlw	0
  2816  0019C0  6F7F               	movwf	(compare@upper+1)& (0+255),b
  2817  0019C2  0E19               	movlw	25
  2818  0019C4  6F7E               	movwf	compare@upper& (0+255),b
  2819  0019C6  EC50  F02A         	call	_compare	;wreg free
  2820  0019CA  0900               	iorlw	0
  2821  0019CC  B4D8               	btfsc	status,2,c
  2822  0019CE  EFEB  F00C         	goto	u6481
  2823  0019D2  EFED  F00C         	goto	u6480
  2824  0019D6                     u6481:
  2825  0019D6  EF07  F00D         	goto	l167
  2826  0019DA                     u6480:
  2827  0019DA  0E00               	movlw	0
  2828  0019DC  0100               	movlb	0	; () banked
  2829  0019DE  6F7B               	movwf	(compare@lower+1)& (0+255),b
  2830  0019E0  0E00               	movlw	0
  2831  0019E2  6F7A               	movwf	compare@lower& (0+255),b
  2832  0019E4  C090  F07C         	movff	detect_color@RR,compare@value2compare
  2833  0019E8  C091  F07D         	movff	detect_color@RR+1,compare@value2compare+1
  2834  0019EC  0E00               	movlw	0
  2835  0019EE  6F7F               	movwf	(compare@upper+1)& (0+255),b
  2836  0019F0  0E5A               	movlw	90
  2837  0019F2  6F7E               	movwf	compare@upper& (0+255),b
  2838  0019F4  EC50  F02A         	call	_compare	;wreg free
  2839  0019F8  0900               	iorlw	0
  2840  0019FA  B4D8               	btfsc	status,2,c
  2841  0019FC  EF02  F00D         	goto	u6491
  2842  001A00  EF04  F00D         	goto	u6490
  2843  001A04                     u6491:
  2844  001A04  EF07  F00D         	goto	l167
  2845  001A08                     u6490:
  2846  001A08  0E00               	movlw	0
  2847  001A0A  0100               	movlb	0	; () banked
  2848  001A0C  6F96               	movwf	detect_color@color& (0+255),b
  2849  001A0E                     l167:
  2850                           
  2851                           ;color.c: 355:     return color;
  2852  001A0E  0100               	movlb	0	; () banked
  2853  001A10  5196               	movf	detect_color@color& (0+255),w,b
  2854  001A12                     
  2855                           ; BSR set to: 0
  2856  001A12  0012               	return		;funcret
  2857  001A14                     __end_of_detect_color:
  2858                           	callstack 0
  2859                           
  2860 ;; *************** function _compare *****************
  2861 ;; Defined at:
  2862 ;;		line 358 in file "color.c"
  2863 ;; Parameters:    Size  Location     Type
  2864 ;;  lower           2   26[BANK0 ] unsigned int 
  2865 ;;  value2compar    2   28[BANK0 ] unsigned int 
  2866 ;;  upper           2   30[BANK0 ] unsigned int 
  2867 ;; Auto vars:     Size  Location     Type
  2868 ;;  result          1   80[COMRAM] unsigned char 
  2869 ;; Return value:  Size  Location     Type
  2870 ;;                  1    wreg      unsigned char 
  2871 ;; Registers used:
  2872 ;;		wreg, status,2, status,0
  2873 ;; Tracked objects:
  2874 ;;		On entry : 0/0
  2875 ;;		On exit  : 0/0
  2876 ;;		Unchanged: 0/0
  2877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2878 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2879 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2880 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2881 ;;      Totals:         1       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2882 ;;Total ram usage:        7 bytes
  2883 ;; Hardware stack levels used: 1
  2884 ;; Hardware stack levels required when called: 2
  2885 ;; This function calls:
  2886 ;;		Nothing
  2887 ;; This function is called by:
  2888 ;;		_detect_color
  2889 ;; This function uses a non-reentrant model
  2890 ;;
  2891                           
  2892                           	psect	text3
  2893  0054A0                     __ptext3:
  2894                           	callstack 0
  2895  0054A0                     _compare:
  2896                           	callstack 26
  2897  0054A0                     
  2898                           ;color.c: 358: unsigned char compare(unsigned int lower, unsigned int value2compare, uns
      +                          igned int upper);color.c: 359: {;color.c: 360:     unsigned char result = 0;
  2899  0054A0  0E00               	movlw	0
  2900  0054A2  6E51               	movwf	compare@result^0,c
  2901  0054A4                     
  2902                           ;color.c: 361:     if (lower < value2compare && value2compare <= upper){result = 1;}
  2903  0054A4  0100               	movlb	0	; () banked
  2904  0054A6  517C               	movf	compare@value2compare& (0+255),w,b
  2905  0054A8  5D7A               	subwf	compare@lower& (0+255),w,b
  2906  0054AA  517D               	movf	(compare@value2compare+1)& (0+255),w,b
  2907  0054AC  597B               	subwfb	(compare@lower+1)& (0+255),w,b
  2908  0054AE  B0D8               	btfsc	status,0,c
  2909  0054B0  EF5C  F02A         	goto	u6341
  2910  0054B4  EF5E  F02A         	goto	u6340
  2911  0054B8                     u6341:
  2912  0054B8  EF6B  F02A         	goto	l171
  2913  0054BC                     u6340:
  2914  0054BC                     
  2915                           ; BSR set to: 0
  2916  0054BC  517C               	movf	compare@value2compare& (0+255),w,b
  2917  0054BE  5D7E               	subwf	compare@upper& (0+255),w,b
  2918  0054C0  517D               	movf	(compare@value2compare+1)& (0+255),w,b
  2919  0054C2  597F               	subwfb	(compare@upper+1)& (0+255),w,b
  2920  0054C4  A0D8               	btfss	status,0,c
  2921  0054C6  EF67  F02A         	goto	u6351
  2922  0054CA  EF69  F02A         	goto	u6350
  2923  0054CE                     u6351:
  2924  0054CE  EF6B  F02A         	goto	l171
  2925  0054D2                     u6350:
  2926  0054D2                     
  2927                           ; BSR set to: 0
  2928  0054D2  0E01               	movlw	1
  2929  0054D4  6E51               	movwf	compare@result^0,c
  2930  0054D6                     l171:
  2931                           
  2932                           ; BSR set to: 0
  2933                           ;color.c: 362:     return result;
  2934  0054D6  5051               	movf	compare@result^0,w,c
  2935  0054D8                     
  2936                           ; BSR set to: 0
  2937  0054D8  0012               	return		;funcret
  2938  0054DA                     __end_of_compare:
  2939                           	callstack 0
  2940                           
  2941 ;; *************** function _short_burst *****************
  2942 ;; Defined at:
  2943 ;;		line 11 in file "movement.c"
  2944 ;; Parameters:    Size  Location     Type
  2945 ;;  mL              2   33[COMRAM] PTR struct DC_motor
  2946 ;;		 -> main@motorL(10), 
  2947 ;;  mR              2   35[COMRAM] PTR struct DC_motor
  2948 ;;		 -> main@motorR(10), 
  2949 ;; Auto vars:     Size  Location     Type
  2950 ;;		None
  2951 ;; Return value:  Size  Location     Type
  2952 ;;                  1    wreg      void 
  2953 ;; Registers used:
  2954 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2955 ;; Tracked objects:
  2956 ;;		On entry : 0/0
  2957 ;;		On exit  : 0/0
  2958 ;;		Unchanged: 0/0
  2959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2960 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2961 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2962 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2963 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2964 ;;Total ram usage:        6 bytes
  2965 ;; Hardware stack levels used: 1
  2966 ;; Hardware stack levels required when called: 5
  2967 ;; This function calls:
  2968 ;;		_fullSpeedAhead
  2969 ;;		_stop
  2970 ;; This function is called by:
  2971 ;;		_main
  2972 ;; This function uses a non-reentrant model
  2973 ;;
  2974                           
  2975                           	psect	text4
  2976  005098                     __ptext4:
  2977                           	callstack 0
  2978  005098                     _short_burst:
  2979                           	callstack 25
  2980  005098                     
  2981                           ;movement.c: 11: void short_burst(struct DC_motor *mL, struct DC_motor *mR);movement.c: 
      +                          12: {;movement.c: 13:     fullSpeedAhead(mL,mR);
  2982  005098  C022  F01C         	movff	short_burst@mL,fullSpeedAhead@mL
  2983  00509C  C023  F01D         	movff	short_burst@mL+1,fullSpeedAhead@mL+1
  2984  0050A0  C024  F01E         	movff	short_burst@mR,fullSpeedAhead@mR
  2985  0050A4  C025  F01F         	movff	short_burst@mR+1,fullSpeedAhead@mR+1
  2986  0050A8  EC6A  F027         	call	_fullSpeedAhead	;wreg free
  2987  0050AC                     
  2988                           ;movement.c: 14:     _delay((unsigned long)((300)*(64000000/4000.0)));
  2989  0050AC  0E19               	movlw	25
  2990  0050AE  6E27               	movwf	(??_short_burst+1)^0,c
  2991  0050B0  0E5A               	movlw	90
  2992  0050B2  6E26               	movwf	??_short_burst^0,c
  2993  0050B4  0EB2               	movlw	178
  2994  0050B6                     u6667:
  2995  0050B6  2EE8               	decfsz	wreg,f,c
  2996  0050B8  D7FE               	bra	u6667
  2997  0050BA  2E26               	decfsz	??_short_burst^0,f,c
  2998  0050BC  D7FC               	bra	u6667
  2999  0050BE  2E27               	decfsz	(??_short_burst+1)^0,f,c
  3000  0050C0  D7FA               	bra	u6667
  3001  0050C2                     
  3002                           ;movement.c: 15:     stop(mL,mR);
  3003  0050C2  C022  F01C         	movff	short_burst@mL,stop@mL
  3004  0050C6  C023  F01D         	movff	short_burst@mL+1,stop@mL+1
  3005  0050CA  C024  F01E         	movff	short_burst@mR,stop@mR
  3006  0050CE  C025  F01F         	movff	short_burst@mR+1,stop@mR+1
  3007  0050D2  ECB4  F026         	call	_stop	;wreg free
  3008                           
  3009                           ;movement.c: 16:     _delay((unsigned long)((500)*(64000000/4000.0)));
  3010  0050D6  0E29               	movlw	41
  3011  0050D8  6E27               	movwf	(??_short_burst+1)^0,c
  3012  0050DA  0E96               	movlw	150
  3013  0050DC  6E26               	movwf	??_short_burst^0,c
  3014  0050DE  0E7F               	movlw	127
  3015  0050E0                     u6677:
  3016  0050E0  2EE8               	decfsz	wreg,f,c
  3017  0050E2  D7FE               	bra	u6677
  3018  0050E4  2E26               	decfsz	??_short_burst^0,f,c
  3019  0050E6  D7FC               	bra	u6677
  3020  0050E8  2E27               	decfsz	(??_short_burst+1)^0,f,c
  3021  0050EA  D7FA               	bra	u6677
  3022  0050EC  F000               	nop	
  3023  0050EE  0012               	return		;funcret
  3024  0050F0                     __end_of_short_burst:
  3025                           	callstack 0
  3026                           
  3027 ;; *************** function _pin_init *****************
  3028 ;; Defined at:
  3029 ;;		line 91 in file "movement.c"
  3030 ;; Parameters:    Size  Location     Type
  3031 ;;		None
  3032 ;; Auto vars:     Size  Location     Type
  3033 ;;		None
  3034 ;; Return value:  Size  Location     Type
  3035 ;;                  1    wreg      void 
  3036 ;; Registers used:
  3037 ;;		None
  3038 ;; Tracked objects:
  3039 ;;		On entry : 0/0
  3040 ;;		On exit  : 0/0
  3041 ;;		Unchanged: 0/0
  3042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3043 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3044 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3045 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3046 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3047 ;;Total ram usage:        0 bytes
  3048 ;; Hardware stack levels used: 1
  3049 ;; Hardware stack levels required when called: 2
  3050 ;; This function calls:
  3051 ;;		Nothing
  3052 ;; This function is called by:
  3053 ;;		_main
  3054 ;; This function uses a non-reentrant model
  3055 ;;
  3056                           
  3057                           	psect	text5
  3058  00568C                     __ptext5:
  3059                           	callstack 0
  3060  00568C                     _pin_init:
  3061                           	callstack 28
  3062  00568C  8486               	bsf	134,2,c	;volatile
  3063                           
  3064                           ;movement.c: 93:     ANSELFbits.ANSELF2=0;
  3065  00568E  010E               	movlb	14	; () banked
  3066  005690  95B4               	bcf	180,2,b	;volatile
  3067                           
  3068                           ;movement.c: 94:     TRISFbits.TRISF3=1;
  3069  005692  8686               	bsf	134,3,c	;volatile
  3070                           
  3071                           ;movement.c: 95:     ANSELFbits.ANSELF3=0;
  3072  005694  97B4               	bcf	180,3,b	;volatile
  3073                           
  3074                           ;movement.c: 100:     TRISGbits.TRISG1 = 0;
  3075  005696  9287               	bcf	135,1,c	;volatile
  3076                           
  3077                           ;movement.c: 101:     TRISFbits.TRISF7 = 0;
  3078  005698  9E86               	bcf	134,7,c	;volatile
  3079                           
  3080                           ;movement.c: 102:     TRISAbits.TRISA4 = 0;
  3081  00569A  9881               	bcf	129,4,c	;volatile
  3082                           
  3083                           ;movement.c: 103:     LATGbits.LATG1 = 1;
  3084  00569C  827F               	bsf	127,1,c	;volatile
  3085                           
  3086                           ;movement.c: 104:     LATFbits.LATF7 = 1;
  3087  00569E  8E7E               	bsf	126,7,c	;volatile
  3088                           
  3089                           ;movement.c: 105:     LATAbits.LATA4 = 1;
  3090  0056A0  8879               	bsf	121,4,c	;volatile
  3091                           
  3092                           ;movement.c: 108:     TRISDbits.TRISD7 = 0;
  3093  0056A2  9E84               	bcf	132,7,c	;volatile
  3094                           
  3095                           ;movement.c: 109:     LATDbits.LATD7 = 0;
  3096  0056A4  9E7C               	bcf	124,7,c	;volatile
  3097                           
  3098                           ;movement.c: 110:     TRISHbits.TRISH3 = 0;
  3099  0056A6  9688               	bcf	136,3,c	;volatile
  3100                           
  3101                           ;movement.c: 111:     LATHbits.LATH3 = 0;
  3102  0056A8  9680               	bcf	128,3,c	;volatile
  3103  0056AA                     
  3104                           ; BSR set to: 14
  3105  0056AA  0012               	return		;funcret
  3106  0056AC                     __end_of_pin_init:
  3107                           	callstack 0
  3108                           
  3109 ;; *************** function _initUSART4 *****************
  3110 ;; Defined at:
  3111 ;;		line 4 in file "serial.c"
  3112 ;; Parameters:    Size  Location     Type
  3113 ;;		None
  3114 ;; Auto vars:     Size  Location     Type
  3115 ;;		None
  3116 ;; Return value:  Size  Location     Type
  3117 ;;                  1    wreg      void 
  3118 ;; Registers used:
  3119 ;;		wreg, status,2
  3120 ;; Tracked objects:
  3121 ;;		On entry : 0/0
  3122 ;;		On exit  : 0/0
  3123 ;;		Unchanged: 0/0
  3124 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3125 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3126 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3127 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3128 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3129 ;;Total ram usage:        0 bytes
  3130 ;; Hardware stack levels used: 1
  3131 ;; Hardware stack levels required when called: 2
  3132 ;; This function calls:
  3133 ;;		Nothing
  3134 ;; This function is called by:
  3135 ;;		_main
  3136 ;; This function uses a non-reentrant model
  3137 ;;
  3138                           
  3139                           	psect	text6
  3140  00576C                     __ptext6:
  3141                           	callstack 0
  3142  00576C                     _initUSART4:
  3143                           	callstack 28
  3144  00576C                     
  3145                           ;serial.c: 8:     RC0PPS = 0x12;
  3146  00576C  0E12               	movlw	18
  3147  00576E  010E               	movlb	14	; () banked
  3148  005770  6F62               	movwf	98,b	;volatile
  3149                           
  3150                           ;serial.c: 9:     RX4PPS = 0x11;
  3151  005772  0E11               	movlw	17
  3152  005774  6F15               	movwf	21,b	;volatile
  3153  005776                     
  3154                           ; BSR set to: 14
  3155                           ;serial.c: 11:     BAUD4CONbits.BRG16 = 0;
  3156  005776  97E9               	bcf	233,3,b	;volatile
  3157  005778                     
  3158                           ; BSR set to: 14
  3159                           ;serial.c: 12:     TX4STAbits.BRGH = 0;
  3160  005778  95E8               	bcf	232,2,b	;volatile
  3161                           
  3162                           ;serial.c: 13:     SP4BRGL = 51;
  3163  00577A  0E33               	movlw	51
  3164  00577C  6FE5               	movwf	229,b	;volatile
  3165                           
  3166                           ;serial.c: 15:     SP4BRGH = 0;
  3167  00577E  0E00               	movlw	0
  3168  005780  6FE6               	movwf	230,b	;volatile
  3169  005782                     
  3170                           ; BSR set to: 14
  3171                           ;serial.c: 17:     RC4STAbits.CREN = 1;
  3172  005782  89E7               	bsf	231,4,b	;volatile
  3173  005784                     
  3174                           ; BSR set to: 14
  3175                           ;serial.c: 18:     TX4STAbits.TXEN = 1;
  3176  005784  8BE8               	bsf	232,5,b	;volatile
  3177  005786                     
  3178                           ; BSR set to: 14
  3179                           ;serial.c: 19:     RC4STAbits.SPEN = 1;
  3180  005786  8FE7               	bsf	231,7,b	;volatile
  3181  005788                     
  3182                           ; BSR set to: 14
  3183  005788  0012               	return		;funcret
  3184  00578A                     __end_of_initUSART4:
  3185                           	callstack 0
  3186                           
  3187 ;; *************** function _initDCmotors_parameter *****************
  3188 ;; Defined at:
  3189 ;;		line 39 in file "dc_motor.c"
  3190 ;; Parameters:    Size  Location     Type
  3191 ;;  motorL          2    2[COMRAM] PTR struct DC_motor
  3192 ;;		 -> main@motorL(10), 
  3193 ;;  motorR          2    4[COMRAM] PTR struct DC_motor
  3194 ;;		 -> main@motorR(10), 
  3195 ;; Auto vars:     Size  Location     Type
  3196 ;;		None
  3197 ;; Return value:  Size  Location     Type
  3198 ;;                  1    wreg      void 
  3199 ;; Registers used:
  3200 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3201 ;; Tracked objects:
  3202 ;;		On entry : 0/0
  3203 ;;		On exit  : 0/0
  3204 ;;		Unchanged: 0/0
  3205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3206 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3207 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3208 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3209 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3210 ;;Total ram usage:        4 bytes
  3211 ;; Hardware stack levels used: 1
  3212 ;; Hardware stack levels required when called: 2
  3213 ;; This function calls:
  3214 ;;		Nothing
  3215 ;; This function is called by:
  3216 ;;		_main
  3217 ;; This function uses a non-reentrant model
  3218 ;;
  3219                           
  3220                           	psect	text7
  3221  0048BE                     __ptext7:
  3222                           	callstack 0
  3223  0048BE                     _initDCmotors_parameter:
  3224                           	callstack 28
  3225  0048BE                     
  3226                           ;dc_motor.c: 41:     motorL->power = 0;
  3227  0048BE  C003  FFD9         	movff	initDCmotors_parameter@motorL,fsr2l
  3228  0048C2  C004  FFDA         	movff	initDCmotors_parameter@motorL+1,fsr2h
  3229  0048C6  0E00               	movlw	0
  3230  0048C8  6EDF               	movwf	indf2,c
  3231  0048CA                     
  3232                           ;dc_motor.c: 42:     motorL->direction = 1;
  3233  0048CA  EE20 F001          	lfsr	2,1
  3234  0048CE  5003               	movf	initDCmotors_parameter@motorL^0,w,c
  3235  0048D0  26D9               	addwf	fsr2l,f,c
  3236  0048D2  5004               	movf	(initDCmotors_parameter@motorL+1)^0,w,c
  3237  0048D4  22DA               	addwfc	fsr2h,f,c
  3238  0048D6  0E01               	movlw	1
  3239  0048D8  6EDF               	movwf	indf2,c
  3240  0048DA                     
  3241                           ;dc_motor.c: 43:     motorL->dutyHighByte = (unsigned char *)(&PWM6DCH);
  3242  0048DA  EE20 F002          	lfsr	2,2
  3243  0048DE  5003               	movf	initDCmotors_parameter@motorL^0,w,c
  3244  0048E0  26D9               	addwf	fsr2l,f,c
  3245  0048E2  5004               	movf	(initDCmotors_parameter@motorL+1)^0,w,c
  3246  0048E4  22DA               	addwfc	fsr2h,f,c
  3247  0048E6  0EA3               	movlw	163
  3248  0048E8  6EDE               	movwf	postinc2,c
  3249  0048EA  0E0F               	movlw	15
  3250  0048EC  6EDD               	movwf	postdec2,c
  3251  0048EE                     
  3252                           ;dc_motor.c: 44:     motorL->dir_LAT = (unsigned char *)(&LATE);
  3253  0048EE  EE20 F004          	lfsr	2,4
  3254  0048F2  5003               	movf	initDCmotors_parameter@motorL^0,w,c
  3255  0048F4  26D9               	addwf	fsr2l,f,c
  3256  0048F6  5004               	movf	(initDCmotors_parameter@motorL+1)^0,w,c
  3257  0048F8  22DA               	addwfc	fsr2h,f,c
  3258  0048FA  0E7D               	movlw	125
  3259  0048FC  6EDE               	movwf	postinc2,c
  3260  0048FE  0E0F               	movlw	15
  3261  004900  6EDD               	movwf	postdec2,c
  3262  004902                     
  3263                           ;dc_motor.c: 45:     motorL->dir_pin = 4;
  3264  004902  EE20 F006          	lfsr	2,6
  3265  004906  5003               	movf	initDCmotors_parameter@motorL^0,w,c
  3266  004908  26D9               	addwf	fsr2l,f,c
  3267  00490A  5004               	movf	(initDCmotors_parameter@motorL+1)^0,w,c
  3268  00490C  22DA               	addwfc	fsr2h,f,c
  3269  00490E  0E04               	movlw	4
  3270  004910  6EDF               	movwf	indf2,c
  3271  004912                     
  3272                           ;dc_motor.c: 46:     motorL->PWMperiod = 199;
  3273  004912  EE20 F007          	lfsr	2,7
  3274  004916  5003               	movf	initDCmotors_parameter@motorL^0,w,c
  3275  004918  26D9               	addwf	fsr2l,f,c
  3276  00491A  5004               	movf	(initDCmotors_parameter@motorL+1)^0,w,c
  3277  00491C  22DA               	addwfc	fsr2h,f,c
  3278  00491E  0EC7               	movlw	199
  3279  004920  6EDE               	movwf	postinc2,c
  3280  004922  0E00               	movlw	0
  3281  004924  6EDD               	movwf	postdec2,c
  3282  004926                     
  3283                           ;dc_motor.c: 49:     motorR->power = 0;
  3284  004926  C005  FFD9         	movff	initDCmotors_parameter@motorR,fsr2l
  3285  00492A  C006  FFDA         	movff	initDCmotors_parameter@motorR+1,fsr2h
  3286  00492E  0E00               	movlw	0
  3287  004930  6EDF               	movwf	indf2,c
  3288                           
  3289                           ;dc_motor.c: 50:     motorR->direction = 1;
  3290  004932  EE20 F001          	lfsr	2,1
  3291  004936  5005               	movf	initDCmotors_parameter@motorR^0,w,c
  3292  004938  26D9               	addwf	fsr2l,f,c
  3293  00493A  5006               	movf	(initDCmotors_parameter@motorR+1)^0,w,c
  3294  00493C  22DA               	addwfc	fsr2h,f,c
  3295  00493E  0E01               	movlw	1
  3296  004940  6EDF               	movwf	indf2,c
  3297                           
  3298                           ;dc_motor.c: 51:     motorR->dutyHighByte = (unsigned char *)(&PWM7DCH);
  3299  004942  EE20 F002          	lfsr	2,2
  3300  004946  5005               	movf	initDCmotors_parameter@motorR^0,w,c
  3301  004948  26D9               	addwf	fsr2l,f,c
  3302  00494A  5006               	movf	(initDCmotors_parameter@motorR+1)^0,w,c
  3303  00494C  22DA               	addwfc	fsr2h,f,c
  3304  00494E  0EA0               	movlw	160
  3305  004950  6EDE               	movwf	postinc2,c
  3306  004952  0E0F               	movlw	15
  3307  004954  6EDD               	movwf	postdec2,c
  3308                           
  3309                           ;dc_motor.c: 52:     motorR->dir_LAT = (unsigned char *)(&LATG);
  3310  004956  EE20 F004          	lfsr	2,4
  3311  00495A  5005               	movf	initDCmotors_parameter@motorR^0,w,c
  3312  00495C  26D9               	addwf	fsr2l,f,c
  3313  00495E  5006               	movf	(initDCmotors_parameter@motorR+1)^0,w,c
  3314  004960  22DA               	addwfc	fsr2h,f,c
  3315  004962  0E7F               	movlw	127
  3316  004964  6EDE               	movwf	postinc2,c
  3317  004966  0E0F               	movlw	15
  3318  004968  6EDD               	movwf	postdec2,c
  3319                           
  3320                           ;dc_motor.c: 53:     motorR->dir_pin = 6;
  3321  00496A  EE20 F006          	lfsr	2,6
  3322  00496E  5005               	movf	initDCmotors_parameter@motorR^0,w,c
  3323  004970  26D9               	addwf	fsr2l,f,c
  3324  004972  5006               	movf	(initDCmotors_parameter@motorR+1)^0,w,c
  3325  004974  22DA               	addwfc	fsr2h,f,c
  3326  004976  0E06               	movlw	6
  3327  004978  6EDF               	movwf	indf2,c
  3328                           
  3329                           ;dc_motor.c: 54:     motorR->PWMperiod = 199;
  3330  00497A  EE20 F007          	lfsr	2,7
  3331  00497E  5005               	movf	initDCmotors_parameter@motorR^0,w,c
  3332  004980  26D9               	addwf	fsr2l,f,c
  3333  004982  5006               	movf	(initDCmotors_parameter@motorR+1)^0,w,c
  3334  004984  22DA               	addwfc	fsr2h,f,c
  3335  004986  0EC7               	movlw	199
  3336  004988  6EDE               	movwf	postinc2,c
  3337  00498A  0E00               	movlw	0
  3338  00498C  6EDD               	movwf	postdec2,c
  3339  00498E  0012               	return		;funcret
  3340  004990                     __end_of_initDCmotors_parameter:
  3341                           	callstack 0
  3342                           
  3343 ;; *************** function _initDCmotorsPWM *****************
  3344 ;; Defined at:
  3345 ;;		line 9 in file "dc_motor.c"
  3346 ;; Parameters:    Size  Location     Type
  3347 ;;  PWMperiod       2    2[COMRAM] int 
  3348 ;; Auto vars:     Size  Location     Type
  3349 ;;		None
  3350 ;; Return value:  Size  Location     Type
  3351 ;;                  1    wreg      void 
  3352 ;; Registers used:
  3353 ;;		wreg, status,2
  3354 ;; Tracked objects:
  3355 ;;		On entry : 0/0
  3356 ;;		On exit  : 0/0
  3357 ;;		Unchanged: 0/0
  3358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3359 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3360 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3361 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3362 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3363 ;;Total ram usage:        2 bytes
  3364 ;; Hardware stack levels used: 1
  3365 ;; Hardware stack levels required when called: 2
  3366 ;; This function calls:
  3367 ;;		Nothing
  3368 ;; This function is called by:
  3369 ;;		_main
  3370 ;; This function uses a non-reentrant model
  3371 ;;
  3372                           
  3373                           	psect	text8
  3374  005358                     __ptext8:
  3375                           	callstack 0
  3376  005358                     _initDCmotorsPWM:
  3377                           	callstack 28
  3378  005358                     
  3379                           ;dc_motor.c: 12:     TRISEbits.TRISE2=0;
  3380  005358  9485               	bcf	133,2,c	;volatile
  3381                           
  3382                           ;dc_motor.c: 13:     TRISCbits.TRISC7=0;
  3383  00535A  9E83               	bcf	131,7,c	;volatile
  3384                           
  3385                           ;dc_motor.c: 14:     TRISGbits.TRISG6=0;
  3386  00535C  9C87               	bcf	135,6,c	;volatile
  3387                           
  3388                           ;dc_motor.c: 15:     TRISEbits.TRISE4=0;
  3389  00535E  9885               	bcf	133,4,c	;volatile
  3390                           
  3391                           ;dc_motor.c: 16:     LATEbits.LATE2=0;
  3392  005360  947D               	bcf	125,2,c	;volatile
  3393                           
  3394                           ;dc_motor.c: 17:     LATCbits.LATC7=0;
  3395  005362  9E7B               	bcf	123,7,c	;volatile
  3396                           
  3397                           ;dc_motor.c: 18:     LATGbits.LATG6=0;
  3398  005364  9C7F               	bcf	127,6,c	;volatile
  3399                           
  3400                           ;dc_motor.c: 19:     LATEbits.LATE4=0;
  3401  005366  987D               	bcf	125,4,c	;volatile
  3402  005368                     
  3403                           ;dc_motor.c: 22:     T2CONbits.CKPS=0b011;
  3404  005368  50BD               	movf	189,w,c	;volatile
  3405  00536A  0B8F               	andlw	-113
  3406  00536C  0930               	iorlw	48
  3407  00536E  6EBD               	movwf	189,c	;volatile
  3408                           
  3409                           ;dc_motor.c: 23:     T2HLTbits.MODE=0b00000;
  3410  005370  0EE0               	movlw	-32
  3411  005372  16BE               	andwf	190,f,c	;volatile
  3412                           
  3413                           ;dc_motor.c: 24:     T2CLKCONbits.CS=0b0001;
  3414  005374  50BF               	movf	191,w,c	;volatile
  3415  005376  0BF0               	andlw	-16
  3416  005378  0901               	iorlw	1
  3417  00537A  6EBF               	movwf	191,c	;volatile
  3418                           
  3419                           ;dc_motor.c: 27:     T2PR=200-1;
  3420  00537C  0EC7               	movlw	199
  3421  00537E  6EBC               	movwf	188,c	;volatile
  3422  005380                     
  3423                           ;dc_motor.c: 28:     T2CONbits.ON=1;
  3424  005380  8EBD               	bsf	189,7,c	;volatile
  3425                           
  3426                           ;dc_motor.c: 30:     RE2PPS=0x0A;
  3427  005382  0E0A               	movlw	10
  3428  005384  010E               	movlb	14	; () banked
  3429  005386  6F74               	movwf	116,b	;volatile
  3430                           
  3431                           ;dc_motor.c: 31:     RC7PPS=0x0B;
  3432  005388  0E0B               	movlw	11
  3433  00538A  6F69               	movwf	105,b	;volatile
  3434                           
  3435                           ;dc_motor.c: 33:     PWM6DCH=0;
  3436  00538C  0E00               	movlw	0
  3437  00538E  6EA3               	movwf	163,c	;volatile
  3438                           
  3439                           ;dc_motor.c: 34:     PWM7DCH=0;
  3440  005390  0E00               	movlw	0
  3441  005392  6EA0               	movwf	160,c	;volatile
  3442  005394                     
  3443                           ; BSR set to: 14
  3444                           ;dc_motor.c: 36:     PWM6CONbits.EN = 1;
  3445  005394  8EA4               	bsf	164,7,c	;volatile
  3446  005396                     
  3447                           ; BSR set to: 14
  3448                           ;dc_motor.c: 37:     PWM7CONbits.EN = 1;
  3449  005396  8EA1               	bsf	161,7,c	;volatile
  3450  005398                     
  3451                           ; BSR set to: 14
  3452  005398  0012               	return		;funcret
  3453  00539A                     __end_of_initDCmotorsPWM:
  3454                           	callstack 0
  3455                           
  3456 ;; *************** function _distance_measure *****************
  3457 ;; Defined at:
  3458 ;;		line 404 in file "color.c"
  3459 ;; Parameters:    Size  Location     Type
  3460 ;;  mL              2   26[BANK0 ] PTR struct DC_motor
  3461 ;;		 -> main@motorL(10), 
  3462 ;;  mR              2   28[BANK0 ] PTR struct DC_motor
  3463 ;;		 -> main@motorR(10), 
  3464 ;;  amb_light       2   30[BANK0 ] unsigned int 
  3465 ;; Auto vars:     Size  Location     Type
  3466 ;;  threshold       2   40[BANK0 ] unsigned int 
  3467 ;;  CC_amb          2   38[BANK0 ] unsigned int 
  3468 ;;  CG_amb          2   32[BANK0 ] unsigned int 
  3469 ;;  stop            1   42[BANK0 ] unsigned char 
  3470 ;; Return value:  Size  Location     Type
  3471 ;;                  1    wreg      unsigned char 
  3472 ;; Registers used:
  3473 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  3474 ;; Tracked objects:
  3475 ;;		On entry : 0/0
  3476 ;;		On exit  : 0/0
  3477 ;;		Unchanged: 0/0
  3478 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3479 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3480 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3481 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3482 ;;      Totals:         2      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3483 ;;Total ram usage:       19 bytes
  3484 ;; Hardware stack levels used: 1
  3485 ;; Hardware stack levels required when called: 6
  3486 ;; This function calls:
  3487 ;;		_LED_C
  3488 ;;		___flmul
  3489 ;;		___xxtofl
  3490 ;;		_color_read_Clear
  3491 ;;		_color_read_Green
  3492 ;;		_lroundf
  3493 ;; This function is called by:
  3494 ;;		_main
  3495 ;; This function uses a non-reentrant model
  3496 ;;
  3497                           
  3498                           	psect	text9
  3499  004B20                     __ptext9:
  3500                           	callstack 0
  3501  004B20                     _distance_measure:
  3502                           	callstack 24
  3503  004B20  0E00               	movlw	0
  3504  004B22  0100               	movlb	0	; () banked
  3505  004B24  6F81               	movwf	(distance_measure@CG_amb+1)& (0+255),b
  3506  004B26  0E00               	movlw	0
  3507  004B28  6F80               	movwf	distance_measure@CG_amb& (0+255),b
  3508                           
  3509                           ;color.c: 407:     unsigned char stop = 0;
  3510  004B2A  0E00               	movlw	0
  3511  004B2C  6F8A               	movwf	distance_measure@stop& (0+255),b
  3512                           
  3513                           ;color.c: 408:     unsigned int threshold = 0;
  3514  004B2E  0E00               	movlw	0
  3515  004B30  6F89               	movwf	(distance_measure@threshold+1)& (0+255),b
  3516  004B32  0E00               	movlw	0
  3517  004B34  6F88               	movwf	distance_measure@threshold& (0+255),b
  3518  004B36                     
  3519                           ; BSR set to: 0
  3520                           ;color.c: 409:     LED_C();
  3521  004B36  EC96  F02B         	call	_LED_C	;wreg free
  3522  004B3A                     
  3523                           ;color.c: 410:     _delay((unsigned long)((100)*(64000000/4000.0)));
  3524  004B3A  0E09               	movlw	9
  3525  004B3C  6E52               	movwf	(??_distance_measure+1)^0,c
  3526  004B3E  0E1E               	movlw	30
  3527  004B40  6E51               	movwf	??_distance_measure^0,c
  3528  004B42  0EE4               	movlw	228
  3529  004B44                     u6687:
  3530  004B44  2EE8               	decfsz	wreg,f,c
  3531  004B46  D7FE               	bra	u6687
  3532  004B48  2E51               	decfsz	??_distance_measure^0,f,c
  3533  004B4A  D7FC               	bra	u6687
  3534  004B4C  2E52               	decfsz	(??_distance_measure+1)^0,f,c
  3535  004B4E  D7FA               	bra	u6687
  3536  004B50  D000               	nop2	
  3537  004B52                     
  3538                           ;color.c: 411:     CC_amb = color_read_Clear();
  3539  004B52  EC19  F029         	call	_color_read_Clear	;wreg free
  3540  004B56  C007  F086         	movff	?_color_read_Clear,distance_measure@CC_amb
  3541  004B5A  C008  F087         	movff	?_color_read_Clear+1,distance_measure@CC_amb+1
  3542  004B5E  ECC9  F028         	call	_color_read_Green	;wreg free
  3543  004B62                     
  3544                           ;color.c: 413:     threshold = lroundf((float)amb_light * 1.1);
  3545  004B62  C07E  F003         	movff	distance_measure@amb_light,___xxtofl@val
  3546  004B66  C07F  F004         	movff	distance_measure@amb_light+1,___xxtofl@val+1
  3547  004B6A  6A05               	clrf	(___xxtofl@val+2)^0,c
  3548  004B6C  6A06               	clrf	(___xxtofl@val+3)^0,c
  3549  004B6E  0E00               	movlw	0
  3550  004B70  EC5B  F01D         	call	___xxtofl
  3551  004B74  C003  F02A         	movff	?___xxtofl,___flmul@b
  3552  004B78  C004  F02B         	movff	?___xxtofl+1,___flmul@b+1
  3553  004B7C  C005  F02C         	movff	?___xxtofl+2,___flmul@b+2
  3554  004B80  C006  F02D         	movff	?___xxtofl+3,___flmul@b+3
  3555  004B84  0ECD               	movlw	205
  3556  004B86  6E2E               	movwf	___flmul@a^0,c
  3557  004B88  0ECC               	movlw	204
  3558  004B8A  6E2F               	movwf	(___flmul@a+1)^0,c
  3559  004B8C  0E8C               	movlw	140
  3560  004B8E  6E30               	movwf	(___flmul@a+2)^0,c
  3561  004B90  0E3F               	movlw	63
  3562  004B92  6E31               	movwf	(___flmul@a+3)^0,c
  3563  004B94  EC6A  F00F         	call	___flmul	;wreg free
  3564  004B98  C02A  F082         	movff	?___flmul,_distance_measure$3190
  3565  004B9C  C02B  F083         	movff	?___flmul+1,_distance_measure$3190+1
  3566  004BA0  C02C  F084         	movff	?___flmul+2,_distance_measure$3190+2
  3567  004BA4  C02D  F085         	movff	?___flmul+3,_distance_measure$3190+3
  3568  004BA8                     
  3569                           ;color.c: 413:     threshold = lroundf((float)amb_light * 1.1);
  3570  004BA8  C082  F076         	movff	_distance_measure$3190,lroundf@x
  3571  004BAC  C083  F077         	movff	_distance_measure$3190+1,lroundf@x+1
  3572  004BB0  C084  F078         	movff	_distance_measure$3190+2,lroundf@x+2
  3573  004BB4  C085  F079         	movff	_distance_measure$3190+3,lroundf@x+3
  3574  004BB8  EC6D  F02A         	call	_lroundf	;wreg free
  3575  004BBC  C076  F088         	movff	?_lroundf,distance_measure@threshold
  3576  004BC0  C077  F089         	movff	?_lroundf+1,distance_measure@threshold+1
  3577  004BC4                     
  3578                           ;color.c: 416:     if (CC_amb >= threshold){stop = 1;}
  3579  004BC4  0100               	movlb	0	; () banked
  3580  004BC6  5188               	movf	distance_measure@threshold& (0+255),w,b
  3581  004BC8  5D86               	subwf	distance_measure@CC_amb& (0+255),w,b
  3582  004BCA  5189               	movf	(distance_measure@threshold+1)& (0+255),w,b
  3583  004BCC  5987               	subwfb	(distance_measure@CC_amb+1)& (0+255),w,b
  3584  004BCE  A0D8               	btfss	status,0,c
  3585  004BD0  EFEC  F025         	goto	u6561
  3586  004BD4  EFEE  F025         	goto	u6560
  3587  004BD8                     u6561:
  3588  004BD8  EFF0  F025         	goto	l183
  3589  004BDC                     u6560:
  3590  004BDC                     
  3591                           ; BSR set to: 0
  3592  004BDC  0E01               	movlw	1
  3593  004BDE  6F8A               	movwf	distance_measure@stop& (0+255),b
  3594  004BE0                     l183:
  3595                           
  3596                           ; BSR set to: 0
  3597                           ;color.c: 417:     return stop;
  3598  004BE0  518A               	movf	distance_measure@stop& (0+255),w,b
  3599  004BE2                     
  3600                           ; BSR set to: 0
  3601  004BE2  0012               	return		;funcret
  3602  004BE4                     __end_of_distance_measure:
  3603                           	callstack 0
  3604                           
  3605 ;; *************** function _color_data_collection *****************
  3606 ;; Defined at:
  3607 ;;		line 198 in file "color.c"
  3608 ;; Parameters:    Size  Location     Type
  3609 ;;  m               2  127[BANK0 ] PTR struct color_rgb
  3610 ;;		 -> main@rgb(8), 
  3611 ;; Auto vars:     Size  Location     Type
  3612 ;;  x               2  137[BANK0 ] int 
  3613 ;;  k               2  135[BANK0 ] int 
  3614 ;;  j               2  133[BANK0 ] int 
  3615 ;;  i               2  131[BANK0 ] int 
  3616 ;; Return value:  Size  Location     Type
  3617 ;;                  1    wreg      void 
  3618 ;; Registers used:
  3619 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3620 ;; Tracked objects:
  3621 ;;		On entry : 0/0
  3622 ;;		On exit  : 0/0
  3623 ;;		Unchanged: 0/0
  3624 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3625 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3626 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3627 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3628 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3629 ;;Total ram usage:       12 bytes
  3630 ;; Hardware stack levels used: 1
  3631 ;; Hardware stack levels required when called: 11
  3632 ;; This function calls:
  3633 ;;		_LED_B
  3634 ;;		_LED_C
  3635 ;;		_LED_G
  3636 ;;		_LED_R
  3637 ;;		_color_display
  3638 ;;		_color_predict
  3639 ;;		_read_color
  3640 ;; This function is called by:
  3641 ;;		_main
  3642 ;; This function uses a non-reentrant model
  3643 ;;
  3644                           
  3645                           	psect	text10
  3646  003744                     __ptext10:
  3647                           	callstack 0
  3648  003744                     _color_data_collection:
  3649                           	callstack 19
  3650  003744                     
  3651                           ;color.c: 200:     int i = 0; int j = 0; int k = 0; int x = 0;
  3652  003744  0E00               	movlw	0
  3653  003746  0100               	movlb	0	; () banked
  3654  003748  6FE4               	movwf	(color_data_collection@i+1)& (0+255),b
  3655  00374A  0E00               	movlw	0
  3656  00374C  6FE3               	movwf	color_data_collection@i& (0+255),b
  3657  00374E  0E00               	movlw	0
  3658  003750  6FE8               	movwf	(color_data_collection@k+1)& (0+255),b
  3659  003752  0E00               	movlw	0
  3660  003754  6FE7               	movwf	color_data_collection@k& (0+255),b
  3661  003756  0E00               	movlw	0
  3662  003758  6FEA               	movwf	(color_data_collection@x+1)& (0+255),b
  3663  00375A  0E00               	movlw	0
  3664  00375C  6FE9               	movwf	color_data_collection@x& (0+255),b
  3665                           
  3666                           ;color.c: 201:     for (i = 0; i <5; ++i){
  3667  00375E  0E00               	movlw	0
  3668  003760  6FE4               	movwf	(color_data_collection@i+1)& (0+255),b
  3669  003762  0E00               	movlw	0
  3670  003764  6FE3               	movwf	color_data_collection@i& (0+255),b
  3671  003766                     l6054:
  3672                           
  3673                           ; BSR set to: 0
  3674                           ;color.c: 202:         LED_C();
  3675  003766  EC96  F02B         	call	_LED_C	;wreg free
  3676  00376A                     
  3677                           ;color.c: 203:         read_color(m);
  3678  00376A  C0DF  F00E         	movff	color_data_collection@m,read_color@m
  3679  00376E  C0E0  F00F         	movff	color_data_collection@m+1,read_color@m+1
  3680  003772  EC1D  F028         	call	_read_color	;wreg free
  3681  003776                     
  3682                           ;color.c: 204:         color_display(m);
  3683  003776  C0DF  F079         	movff	color_data_collection@m,color_display@m
  3684  00377A  C0E0  F07A         	movff	color_data_collection@m+1,color_display@m+1
  3685  00377E  ECB4  F027         	call	_color_display	;wreg free
  3686  003782                     
  3687                           ;color.c: 205:         _delay((unsigned long)((100)*(64000000/4000.0)));
  3688  003782  0E09               	movlw	9
  3689  003784  0100               	movlb	0	; () banked
  3690  003786  6FE2               	movwf	(??_color_data_collection+1)& (0+255),b
  3691  003788  0E1E               	movlw	30
  3692  00378A  6FE1               	movwf	??_color_data_collection& (0+255),b
  3693  00378C  0EE4               	movlw	228
  3694  00378E                     u6697:
  3695  00378E  2EE8               	decfsz	wreg,f,c
  3696  003790  D7FE               	bra	u6697
  3697  003792  2FE1               	decfsz	??_color_data_collection& (0+255),f,b
  3698  003794  D7FC               	bra	u6697
  3699  003796  2FE2               	decfsz	(??_color_data_collection+1)& (0+255),f,b
  3700  003798  D7FA               	bra	u6697
  3701  00379A  F000               	nop	
  3702  00379C                     
  3703                           ;color.c: 206:     }
  3704  00379C  0100               	movlb	0	; () banked
  3705  00379E  4BE3               	infsnz	color_data_collection@i& (0+255),f,b
  3706  0037A0  2BE4               	incf	(color_data_collection@i+1)& (0+255),f,b
  3707  0037A2                     
  3708                           ; BSR set to: 0
  3709  0037A2  BFE4               	btfsc	(color_data_collection@i+1)& (0+255),7,b
  3710  0037A4  EFDD  F01B         	goto	u6501
  3711  0037A8  51E4               	movf	(color_data_collection@i+1)& (0+255),w,b
  3712  0037AA  E109               	bnz	u6500
  3713  0037AC  0E05               	movlw	5
  3714  0037AE  5DE3               	subwf	color_data_collection@i& (0+255),w,b
  3715  0037B0  A0D8               	btfss	status,0,c
  3716  0037B2  EFDD  F01B         	goto	u6501
  3717  0037B6  EFDF  F01B         	goto	u6500
  3718  0037BA                     u6501:
  3719  0037BA  EFB3  F01B         	goto	l6054
  3720  0037BE                     u6500:
  3721  0037BE                     
  3722                           ; BSR set to: 0
  3723                           ;color.c: 207:     color_predict(00000);
  3724  0037BE  0E00               	movlw	0
  3725  0037C0  ECF3  F02A         	call	_color_predict
  3726  0037C4                     
  3727                           ;color.c: 208:     for (j = 0; j < 5; ++j){
  3728  0037C4  0E00               	movlw	0
  3729  0037C6  0100               	movlb	0	; () banked
  3730  0037C8  6FE6               	movwf	(color_data_collection@j+1)& (0+255),b
  3731  0037CA  0E00               	movlw	0
  3732  0037CC  6FE5               	movwf	color_data_collection@j& (0+255),b
  3733  0037CE                     l6074:
  3734                           
  3735                           ; BSR set to: 0
  3736                           ;color.c: 209:         LED_R();
  3737  0037CE  EC66  F02B         	call	_LED_R	;wreg free
  3738  0037D2                     
  3739                           ;color.c: 210:         read_color(m);
  3740  0037D2  C0DF  F00E         	movff	color_data_collection@m,read_color@m
  3741  0037D6  C0E0  F00F         	movff	color_data_collection@m+1,read_color@m+1
  3742  0037DA  EC1D  F028         	call	_read_color	;wreg free
  3743  0037DE                     
  3744                           ;color.c: 211:         color_display(m);
  3745  0037DE  C0DF  F079         	movff	color_data_collection@m,color_display@m
  3746  0037E2  C0E0  F07A         	movff	color_data_collection@m+1,color_display@m+1
  3747  0037E6  ECB4  F027         	call	_color_display	;wreg free
  3748  0037EA                     
  3749                           ;color.c: 212:         _delay((unsigned long)((100)*(64000000/4000.0)));
  3750  0037EA  0E09               	movlw	9
  3751  0037EC  0100               	movlb	0	; () banked
  3752  0037EE  6FE2               	movwf	(??_color_data_collection+1)& (0+255),b
  3753  0037F0  0E1E               	movlw	30
  3754  0037F2  6FE1               	movwf	??_color_data_collection& (0+255),b
  3755  0037F4  0EE4               	movlw	228
  3756  0037F6                     u6707:
  3757  0037F6  2EE8               	decfsz	wreg,f,c
  3758  0037F8  D7FE               	bra	u6707
  3759  0037FA  2FE1               	decfsz	??_color_data_collection& (0+255),f,b
  3760  0037FC  D7FC               	bra	u6707
  3761  0037FE  2FE2               	decfsz	(??_color_data_collection+1)& (0+255),f,b
  3762  003800  D7FA               	bra	u6707
  3763  003802  F000               	nop	
  3764  003804                     
  3765                           ;color.c: 213:     }
  3766  003804  0100               	movlb	0	; () banked
  3767  003806  4BE5               	infsnz	color_data_collection@j& (0+255),f,b
  3768  003808  2BE6               	incf	(color_data_collection@j+1)& (0+255),f,b
  3769  00380A                     
  3770                           ; BSR set to: 0
  3771  00380A  BFE6               	btfsc	(color_data_collection@j+1)& (0+255),7,b
  3772  00380C  EF11  F01C         	goto	u6511
  3773  003810  51E6               	movf	(color_data_collection@j+1)& (0+255),w,b
  3774  003812  E109               	bnz	u6510
  3775  003814  0E05               	movlw	5
  3776  003816  5DE5               	subwf	color_data_collection@j& (0+255),w,b
  3777  003818  A0D8               	btfss	status,0,c
  3778  00381A  EF11  F01C         	goto	u6511
  3779  00381E  EF13  F01C         	goto	u6510
  3780  003822                     u6511:
  3781  003822  EFE7  F01B         	goto	l6074
  3782  003826                     u6510:
  3783  003826                     
  3784                           ; BSR set to: 0
  3785                           ;color.c: 214:     color_predict(00000);
  3786  003826  0E00               	movlw	0
  3787  003828  ECF3  F02A         	call	_color_predict
  3788  00382C                     
  3789                           ;color.c: 215:     for (k = 0; k < 5; ++k){
  3790  00382C  0E00               	movlw	0
  3791  00382E  0100               	movlb	0	; () banked
  3792  003830  6FE8               	movwf	(color_data_collection@k+1)& (0+255),b
  3793  003832  0E00               	movlw	0
  3794  003834  6FE7               	movwf	color_data_collection@k& (0+255),b
  3795  003836                     l6094:
  3796                           
  3797                           ; BSR set to: 0
  3798                           ;color.c: 216:         LED_G();
  3799  003836  EC76  F02B         	call	_LED_G	;wreg free
  3800  00383A                     
  3801                           ;color.c: 217:         read_color(m);
  3802  00383A  C0DF  F00E         	movff	color_data_collection@m,read_color@m
  3803  00383E  C0E0  F00F         	movff	color_data_collection@m+1,read_color@m+1
  3804  003842  EC1D  F028         	call	_read_color	;wreg free
  3805  003846                     
  3806                           ;color.c: 218:         color_display(m);
  3807  003846  C0DF  F079         	movff	color_data_collection@m,color_display@m
  3808  00384A  C0E0  F07A         	movff	color_data_collection@m+1,color_display@m+1
  3809  00384E  ECB4  F027         	call	_color_display	;wreg free
  3810  003852                     
  3811                           ;color.c: 219:         _delay((unsigned long)((100)*(64000000/4000.0)));
  3812  003852  0E09               	movlw	9
  3813  003854  0100               	movlb	0	; () banked
  3814  003856  6FE2               	movwf	(??_color_data_collection+1)& (0+255),b
  3815  003858  0E1E               	movlw	30
  3816  00385A  6FE1               	movwf	??_color_data_collection& (0+255),b
  3817  00385C  0EE4               	movlw	228
  3818  00385E                     u6717:
  3819  00385E  2EE8               	decfsz	wreg,f,c
  3820  003860  D7FE               	bra	u6717
  3821  003862  2FE1               	decfsz	??_color_data_collection& (0+255),f,b
  3822  003864  D7FC               	bra	u6717
  3823  003866  2FE2               	decfsz	(??_color_data_collection+1)& (0+255),f,b
  3824  003868  D7FA               	bra	u6717
  3825  00386A  F000               	nop	
  3826  00386C                     
  3827                           ;color.c: 220:     }
  3828  00386C  0100               	movlb	0	; () banked
  3829  00386E  4BE7               	infsnz	color_data_collection@k& (0+255),f,b
  3830  003870  2BE8               	incf	(color_data_collection@k+1)& (0+255),f,b
  3831  003872                     
  3832                           ; BSR set to: 0
  3833  003872  BFE8               	btfsc	(color_data_collection@k+1)& (0+255),7,b
  3834  003874  EF45  F01C         	goto	u6521
  3835  003878  51E8               	movf	(color_data_collection@k+1)& (0+255),w,b
  3836  00387A  E109               	bnz	u6520
  3837  00387C  0E05               	movlw	5
  3838  00387E  5DE7               	subwf	color_data_collection@k& (0+255),w,b
  3839  003880  A0D8               	btfss	status,0,c
  3840  003882  EF45  F01C         	goto	u6521
  3841  003886  EF47  F01C         	goto	u6520
  3842  00388A                     u6521:
  3843  00388A  EF1B  F01C         	goto	l6094
  3844  00388E                     u6520:
  3845  00388E                     
  3846                           ; BSR set to: 0
  3847                           ;color.c: 221:     color_predict(00000);
  3848  00388E  0E00               	movlw	0
  3849  003890  ECF3  F02A         	call	_color_predict
  3850  003894                     
  3851                           ;color.c: 222:     for (x = 0; x < 5; ++x){
  3852  003894  0E00               	movlw	0
  3853  003896  0100               	movlb	0	; () banked
  3854  003898  6FEA               	movwf	(color_data_collection@x+1)& (0+255),b
  3855  00389A  0E00               	movlw	0
  3856  00389C  6FE9               	movwf	color_data_collection@x& (0+255),b
  3857  00389E                     l6114:
  3858                           
  3859                           ; BSR set to: 0
  3860                           ;color.c: 223:         LED_B();
  3861  00389E  EC86  F02B         	call	_LED_B	;wreg free
  3862  0038A2                     
  3863                           ;color.c: 224:         read_color(m);
  3864  0038A2  C0DF  F00E         	movff	color_data_collection@m,read_color@m
  3865  0038A6  C0E0  F00F         	movff	color_data_collection@m+1,read_color@m+1
  3866  0038AA  EC1D  F028         	call	_read_color	;wreg free
  3867  0038AE                     
  3868                           ;color.c: 225:         color_display(m);
  3869  0038AE  C0DF  F079         	movff	color_data_collection@m,color_display@m
  3870  0038B2  C0E0  F07A         	movff	color_data_collection@m+1,color_display@m+1
  3871  0038B6  ECB4  F027         	call	_color_display	;wreg free
  3872  0038BA                     
  3873                           ;color.c: 226:         _delay((unsigned long)((100)*(64000000/4000.0)));
  3874  0038BA  0E09               	movlw	9
  3875  0038BC  0100               	movlb	0	; () banked
  3876  0038BE  6FE2               	movwf	(??_color_data_collection+1)& (0+255),b
  3877  0038C0  0E1E               	movlw	30
  3878  0038C2  6FE1               	movwf	??_color_data_collection& (0+255),b
  3879  0038C4  0EE4               	movlw	228
  3880  0038C6                     u6727:
  3881  0038C6  2EE8               	decfsz	wreg,f,c
  3882  0038C8  D7FE               	bra	u6727
  3883  0038CA  2FE1               	decfsz	??_color_data_collection& (0+255),f,b
  3884  0038CC  D7FC               	bra	u6727
  3885  0038CE  2FE2               	decfsz	(??_color_data_collection+1)& (0+255),f,b
  3886  0038D0  D7FA               	bra	u6727
  3887  0038D2  F000               	nop	
  3888  0038D4                     
  3889                           ;color.c: 227:     }
  3890  0038D4  0100               	movlb	0	; () banked
  3891  0038D6  4BE9               	infsnz	color_data_collection@x& (0+255),f,b
  3892  0038D8  2BEA               	incf	(color_data_collection@x+1)& (0+255),f,b
  3893  0038DA                     
  3894                           ; BSR set to: 0
  3895  0038DA  BFEA               	btfsc	(color_data_collection@x+1)& (0+255),7,b
  3896  0038DC  EF79  F01C         	goto	u6531
  3897  0038E0  51EA               	movf	(color_data_collection@x+1)& (0+255),w,b
  3898  0038E2  E109               	bnz	u6530
  3899  0038E4  0E05               	movlw	5
  3900  0038E6  5DE9               	subwf	color_data_collection@x& (0+255),w,b
  3901  0038E8  A0D8               	btfss	status,0,c
  3902  0038EA  EF79  F01C         	goto	u6531
  3903  0038EE  EF7B  F01C         	goto	u6530
  3904  0038F2                     u6531:
  3905  0038F2  EF4F  F01C         	goto	l6114
  3906  0038F6                     u6530:
  3907  0038F6                     
  3908                           ; BSR set to: 0
  3909                           ;color.c: 228:     color_predict(1);
  3910  0038F6  0E01               	movlw	1
  3911  0038F8  ECF3  F02A         	call	_color_predict
  3912  0038FC                     
  3913                           ;color.c: 229:     LED_C();
  3914  0038FC  EC96  F02B         	call	_LED_C	;wreg free
  3915  003900  0012               	return		;funcret
  3916  003902                     __end_of_color_data_collection:
  3917                           	callstack 0
  3918                           
  3919 ;; *************** function _read_color *****************
  3920 ;; Defined at:
  3921 ;;		line 145 in file "color.c"
  3922 ;; Parameters:    Size  Location     Type
  3923 ;;  m               2   13[COMRAM] PTR struct color_rgb
  3924 ;;		 -> main@rgb(8), 
  3925 ;; Auto vars:     Size  Location     Type
  3926 ;;		None
  3927 ;; Return value:  Size  Location     Type
  3928 ;;                  1    wreg      void 
  3929 ;; Registers used:
  3930 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3931 ;; Tracked objects:
  3932 ;;		On entry : 0/0
  3933 ;;		On exit  : 0/0
  3934 ;;		Unchanged: 0/0
  3935 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3936 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3937 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3938 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3939 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3940 ;;Total ram usage:        2 bytes
  3941 ;; Hardware stack levels used: 1
  3942 ;; Hardware stack levels required when called: 5
  3943 ;; This function calls:
  3944 ;;		_color_read_Blue
  3945 ;;		_color_read_Clear
  3946 ;;		_color_read_Green
  3947 ;;		_color_read_Red
  3948 ;; This function is called by:
  3949 ;;		_color_data_collection
  3950 ;;		_detect_color
  3951 ;;		_main
  3952 ;; This function uses a non-reentrant model
  3953 ;;
  3954                           
  3955                           	psect	text11
  3956  00503A                     __ptext11:
  3957                           	callstack 0
  3958  00503A                     _read_color:
  3959                           	callstack 23
  3960  00503A                     
  3961                           ;color.c: 145: void read_color (struct color_rgb *m);color.c: 146: {;color.c: 147:     m
      +                          ->R = color_read_Red();
  3962  00503A  ECA1  F028         	call	_color_read_Red	;wreg free
  3963  00503E  C00E  FFD9         	movff	read_color@m,fsr2l
  3964  005042  C00F  FFDA         	movff	read_color@m+1,fsr2h
  3965  005046  C007  FFDE         	movff	?_color_read_Red,postinc2
  3966  00504A  C008  FFDD         	movff	?_color_read_Red+1,postdec2
  3967                           
  3968                           ;color.c: 148:     m->B = color_read_Blue();
  3969  00504E  ECF1  F028         	call	_color_read_Blue	;wreg free
  3970  005052  EE20 F004          	lfsr	2,4
  3971  005056  500E               	movf	read_color@m^0,w,c
  3972  005058  26D9               	addwf	fsr2l,f,c
  3973  00505A  500F               	movf	(read_color@m+1)^0,w,c
  3974  00505C  22DA               	addwfc	fsr2h,f,c
  3975  00505E  C007  FFDE         	movff	?_color_read_Blue,postinc2
  3976  005062  C008  FFDD         	movff	?_color_read_Blue+1,postdec2
  3977                           
  3978                           ;color.c: 149:     m->G = color_read_Green();
  3979  005066  ECC9  F028         	call	_color_read_Green	;wreg free
  3980  00506A  EE20 F002          	lfsr	2,2
  3981  00506E  500E               	movf	read_color@m^0,w,c
  3982  005070  26D9               	addwf	fsr2l,f,c
  3983  005072  500F               	movf	(read_color@m+1)^0,w,c
  3984  005074  22DA               	addwfc	fsr2h,f,c
  3985  005076  C007  FFDE         	movff	?_color_read_Green,postinc2
  3986  00507A  C008  FFDD         	movff	?_color_read_Green+1,postdec2
  3987                           
  3988                           ;color.c: 150:     m->C = color_read_Clear();
  3989  00507E  EC19  F029         	call	_color_read_Clear	;wreg free
  3990  005082  EE20 F006          	lfsr	2,6
  3991  005086  500E               	movf	read_color@m^0,w,c
  3992  005088  26D9               	addwf	fsr2l,f,c
  3993  00508A  500F               	movf	(read_color@m+1)^0,w,c
  3994  00508C  22DA               	addwfc	fsr2h,f,c
  3995  00508E  C007  FFDE         	movff	?_color_read_Clear,postinc2
  3996  005092  C008  FFDD         	movff	?_color_read_Clear+1,postdec2
  3997  005096  0012               	return		;funcret
  3998  005098                     __end_of_read_color:
  3999                           	callstack 0
  4000                           
  4001 ;; *************** function _color_predict *****************
  4002 ;; Defined at:
  4003 ;;		line 248 in file "color.c"
  4004 ;; Parameters:    Size  Location     Type
  4005 ;;  color           1    wreg     unsigned char 
  4006 ;; Auto vars:     Size  Location     Type
  4007 ;;  color           1  125[BANK0 ] unsigned char 
  4008 ;;  buf           100   25[BANK0 ] unsigned char [100]
  4009 ;; Return value:  Size  Location     Type
  4010 ;;                  1    wreg      void 
  4011 ;; Registers used:
  4012 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4013 ;; Tracked objects:
  4014 ;;		On entry : 0/0
  4015 ;;		On exit  : 0/0
  4016 ;;		Unchanged: 0/0
  4017 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4018 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4019 ;;      Locals:         0     101       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4020 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4021 ;;      Totals:         0     101       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4022 ;;Total ram usage:      101 bytes
  4023 ;; Hardware stack levels used: 1
  4024 ;; Hardware stack levels required when called: 10
  4025 ;; This function calls:
  4026 ;;		_sendStringSerial4
  4027 ;;		_sprintf
  4028 ;; This function is called by:
  4029 ;;		_color_data_collection
  4030 ;; This function uses a non-reentrant model
  4031 ;;
  4032                           
  4033                           	psect	text12
  4034  0055E6                     __ptext12:
  4035                           	callstack 0
  4036  0055E6                     _color_predict:
  4037                           	callstack 19
  4038                           
  4039                           ;incstack = 0
  4040                           ;color_predict@color stored from wreg
  4041  0055E6  0100               	movlb	0	; () banked
  4042  0055E8  6FDD               	movwf	color_predict@color& (0+255),b
  4043  0055EA                     
  4044                           ;color.c: 248: void color_predict(unsigned char color);color.c: 249: {;color.c: 250:    
      +                           char buf[100];;color.c: 251:     sprintf(buf,"\t%d\r\n", color);
  4045  0055EA  0E79               	movlw	low color_predict@buf
  4046  0055EC  0100               	movlb	0	; () banked
  4047  0055EE  6F60               	movwf	sprintf@s& (0+255),b
  4048  0055F0  0E00               	movlw	high color_predict@buf
  4049  0055F2  6F61               	movwf	(sprintf@s+1)& (0+255),b
  4050  0055F4  0E0D               	movlw	low (STR_1+8)
  4051  0055F6  6F62               	movwf	sprintf@fmt& (0+255),b
  4052  0055F8  0E0E               	movlw	high (STR_1+8)
  4053  0055FA  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
  4054  0055FC  C0DD  F064         	movff	color_predict@color,?_sprintf+4
  4055  005600  6B65               	clrf	(?_sprintf+5)& (0+255),b
  4056  005602  EC78  F028         	call	_sprintf	;wreg free
  4057  005606                     
  4058                           ;color.c: 252:     sendStringSerial4(buf);
  4059  005606  0E79               	movlw	low color_predict@buf
  4060  005608  6E04               	movwf	sendStringSerial4@string^0,c
  4061  00560A  0E00               	movlw	high color_predict@buf
  4062  00560C  6E05               	movwf	(sendStringSerial4@string+1)^0,c
  4063  00560E  ECDB  F02A         	call	_sendStringSerial4	;wreg free
  4064  005612  0012               	return		;funcret
  4065  005614                     __end_of_color_predict:
  4066                           	callstack 0
  4067                           
  4068 ;; *************** function _color_display *****************
  4069 ;; Defined at:
  4070 ;;		line 232 in file "color.c"
  4071 ;; Parameters:    Size  Location     Type
  4072 ;;  m               2   25[BANK0 ] PTR struct color_rgb
  4073 ;;		 -> main@rgb(8), 
  4074 ;; Auto vars:     Size  Location     Type
  4075 ;;  buf           100   27[BANK0 ] unsigned char [100]
  4076 ;; Return value:  Size  Location     Type
  4077 ;;                  1    wreg      void 
  4078 ;; Registers used:
  4079 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4080 ;; Tracked objects:
  4081 ;;		On entry : 0/0
  4082 ;;		On exit  : 0/0
  4083 ;;		Unchanged: 0/0
  4084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4085 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4086 ;;      Locals:         0     100       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4087 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4088 ;;      Totals:         0     102       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4089 ;;Total ram usage:      102 bytes
  4090 ;; Hardware stack levels used: 1
  4091 ;; Hardware stack levels required when called: 10
  4092 ;; This function calls:
  4093 ;;		_sendStringSerial4
  4094 ;;		_sprintf
  4095 ;; This function is called by:
  4096 ;;		_color_data_collection
  4097 ;; This function uses a non-reentrant model
  4098 ;;
  4099                           
  4100                           	psect	text13
  4101  004F68                     __ptext13:
  4102                           	callstack 0
  4103  004F68                     _color_display:
  4104                           	callstack 19
  4105  004F68                     
  4106                           ;color.c: 232: void color_display(struct color_rgb *m);color.c: 233: {;color.c: 234:    
      +                           char buf[100];;color.c: 235:     sprintf(buf,"%d\t%d\t%d\t%d\r\n", m->R, m->G, m->B, m-
      +                          >C);
  4107  004F68  0E7B               	movlw	low color_display@buf
  4108  004F6A  0100               	movlb	0	; () banked
  4109  004F6C  6F60               	movwf	sprintf@s& (0+255),b
  4110  004F6E  0E00               	movlw	high color_display@buf
  4111  004F70  6F61               	movwf	(sprintf@s+1)& (0+255),b
  4112  004F72  0E05               	movlw	low STR_1
  4113  004F74  6F62               	movwf	sprintf@fmt& (0+255),b
  4114  004F76  0E0E               	movlw	high STR_1
  4115  004F78  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
  4116  004F7A  C079  FFD9         	movff	color_display@m,fsr2l
  4117  004F7E  C07A  FFDA         	movff	color_display@m+1,fsr2h
  4118  004F82  CFDE F064          	movff	postinc2,?_sprintf+4
  4119  004F86  CFDD F065          	movff	postdec2,?_sprintf+5
  4120  004F8A  EE20 F002          	lfsr	2,2
  4121  004F8E  5179               	movf	color_display@m& (0+255),w,b
  4122  004F90  26D9               	addwf	fsr2l,f,c
  4123  004F92  517A               	movf	(color_display@m+1)& (0+255),w,b
  4124  004F94  22DA               	addwfc	fsr2h,f,c
  4125  004F96  CFDE F066          	movff	postinc2,?_sprintf+6
  4126  004F9A  CFDD F067          	movff	postdec2,?_sprintf+7
  4127  004F9E  EE20 F004          	lfsr	2,4
  4128  004FA2  5179               	movf	color_display@m& (0+255),w,b
  4129  004FA4  26D9               	addwf	fsr2l,f,c
  4130  004FA6  517A               	movf	(color_display@m+1)& (0+255),w,b
  4131  004FA8  22DA               	addwfc	fsr2h,f,c
  4132  004FAA  CFDE F068          	movff	postinc2,?_sprintf+8
  4133  004FAE  CFDD F069          	movff	postdec2,?_sprintf+9
  4134  004FB2  EE20 F006          	lfsr	2,6
  4135  004FB6  5179               	movf	color_display@m& (0+255),w,b
  4136  004FB8  26D9               	addwf	fsr2l,f,c
  4137  004FBA  517A               	movf	(color_display@m+1)& (0+255),w,b
  4138  004FBC  22DA               	addwfc	fsr2h,f,c
  4139  004FBE  CFDE F06A          	movff	postinc2,?_sprintf+10
  4140  004FC2  CFDD F06B          	movff	postdec2,?_sprintf+11
  4141  004FC6  EC78  F028         	call	_sprintf	;wreg free
  4142  004FCA                     
  4143                           ;color.c: 236:     sendStringSerial4(buf);
  4144  004FCA  0E7B               	movlw	low color_display@buf
  4145  004FCC  6E04               	movwf	sendStringSerial4@string^0,c
  4146  004FCE  0E00               	movlw	high color_display@buf
  4147  004FD0  6E05               	movwf	(sendStringSerial4@string+1)^0,c
  4148  004FD2  ECDB  F02A         	call	_sendStringSerial4	;wreg free
  4149  004FD6  0012               	return		;funcret
  4150  004FD8                     __end_of_color_display:
  4151                           	callstack 0
  4152                           
  4153 ;; *************** function _sprintf *****************
  4154 ;; Defined at:
  4155 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\nf_sprintf.c"
  4156 ;; Parameters:    Size  Location     Type
  4157 ;;  s               2    0[BANK0 ] PTR unsigned char 
  4158 ;;		 -> color_predict@buf(100), check_color_reading@buf(100), color_display@buf(100), 
  4159 ;;  fmt             2    2[BANK0 ] PTR const unsigned char 
  4160 ;;		 -> STR_3(6), STR_2(12), STR_1(14), 
  4161 ;; Auto vars:     Size  Location     Type
  4162 ;;  f              11   14[BANK0 ] struct _IO_FILE
  4163 ;;  ap              2   12[BANK0 ] PTR void [1]
  4164 ;;		 -> ?_sprintf(2), 
  4165 ;;  ret             2    0        int 
  4166 ;; Return value:  Size  Location     Type
  4167 ;;                  2    0[BANK0 ] int 
  4168 ;; Registers used:
  4169 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4170 ;; Tracked objects:
  4171 ;;		On entry : 0/0
  4172 ;;		On exit  : 0/0
  4173 ;;		Unchanged: 0/0
  4174 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4175 ;;      Params:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4176 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4177 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4178 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4179 ;;Total ram usage:       25 bytes
  4180 ;; Hardware stack levels used: 1
  4181 ;; Hardware stack levels required when called: 9
  4182 ;; This function calls:
  4183 ;;		_vfprintf
  4184 ;; This function is called by:
  4185 ;;		_color_display
  4186 ;;		_color_predict
  4187 ;;		_check_color_reading
  4188 ;; This function uses a non-reentrant model
  4189 ;;
  4190                           
  4191                           	psect	text14
  4192  0050F0                     __ptext14:
  4193                           	callstack 0
  4194  0050F0                     _sprintf:
  4195                           	callstack 19
  4196  0050F0  0E64               	movlw	low (?_sprintf+4)
  4197  0050F2  0100               	movlb	0	; () banked
  4198  0050F4  6F6C               	movwf	sprintf@ap& (0+255),b
  4199  0050F6  0E00               	movlw	high (?_sprintf+4)
  4200  0050F8  6F6D               	movwf	(sprintf@ap+1)& (0+255),b
  4201  0050FA  C060  F06E         	movff	sprintf@s,sprintf@f
  4202  0050FE  C061  F06F         	movff	sprintf@s+1,sprintf@f+1
  4203  005102                     
  4204                           ; BSR set to: 0
  4205  005102  0E00               	movlw	0
  4206  005104  6F72               	movwf	(sprintf@f+4)& (0+255),b
  4207  005106  0E00               	movlw	0
  4208  005108  6F71               	movwf	(sprintf@f+3)& (0+255),b
  4209  00510A                     
  4210                           ; BSR set to: 0
  4211  00510A  0E00               	movlw	0
  4212  00510C  6F78               	movwf	(sprintf@f+10)& (0+255),b
  4213  00510E  0E00               	movlw	0
  4214  005110  6F77               	movwf	(sprintf@f+9)& (0+255),b
  4215  005112                     
  4216                           ; BSR set to: 0
  4217  005112  0E6E               	movlw	low sprintf@f
  4218  005114  6E52               	movwf	vfprintf@fp^0,c
  4219  005116  0E00               	movlw	high sprintf@f
  4220  005118  6E53               	movwf	(vfprintf@fp+1)^0,c
  4221  00511A  C062  F054         	movff	sprintf@fmt,vfprintf@fmt
  4222  00511E  C063  F055         	movff	sprintf@fmt+1,vfprintf@fmt+1
  4223  005122  0E6C               	movlw	low sprintf@ap
  4224  005124  6E56               	movwf	vfprintf@ap^0,c
  4225  005126  0E00               	movlw	high sprintf@ap
  4226  005128  6E57               	movwf	(vfprintf@ap+1)^0,c
  4227  00512A  ECEC  F027         	call	_vfprintf	;wreg free
  4228  00512E  0100               	movlb	0	; () banked
  4229  005130  5171               	movf	(sprintf@f+3)& (0+255),w,b
  4230  005132  2560               	addwf	sprintf@s& (0+255),w,b
  4231  005134  6ED9               	movwf	fsr2l,c
  4232  005136  5172               	movf	(sprintf@f+4)& (0+255),w,b
  4233  005138  2161               	addwfc	(sprintf@s+1)& (0+255),w,b
  4234  00513A  6EDA               	movwf	fsr2h,c
  4235  00513C  0E00               	movlw	0
  4236  00513E  6EDF               	movwf	indf2,c
  4237  005140                     
  4238                           ; BSR set to: 0
  4239  005140  0012               	return		;funcret
  4240  005142                     __end_of_sprintf:
  4241                           	callstack 0
  4242                           
  4243 ;; *************** function _vfprintf *****************
  4244 ;; Defined at:
  4245 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c"
  4246 ;; Parameters:    Size  Location     Type
  4247 ;;  fp              2   81[COMRAM] PTR struct _IO_FILE
  4248 ;;		 -> sprintf@f(11), 
  4249 ;;  fmt             2   83[COMRAM] PTR const unsigned char 
  4250 ;;		 -> STR_3(6), STR_2(12), STR_1(14), 
  4251 ;;  ap              2   85[COMRAM] PTR PTR void 
  4252 ;;		 -> sprintf@ap(2), 
  4253 ;; Auto vars:     Size  Location     Type
  4254 ;;  cfmt            2   87[COMRAM] PTR unsigned char 
  4255 ;;		 -> STR_3(6), STR_2(12), STR_1(14), 
  4256 ;; Return value:  Size  Location     Type
  4257 ;;                  2   81[COMRAM] int 
  4258 ;; Registers used:
  4259 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4260 ;; Tracked objects:
  4261 ;;		On entry : 0/0
  4262 ;;		On exit  : 0/0
  4263 ;;		Unchanged: 0/0
  4264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4265 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4266 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4267 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4268 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4269 ;;Total ram usage:        8 bytes
  4270 ;; Hardware stack levels used: 1
  4271 ;; Hardware stack levels required when called: 8
  4272 ;; This function calls:
  4273 ;;		_vfpfcnvrt
  4274 ;; This function is called by:
  4275 ;;		_sprintf
  4276 ;; This function uses a non-reentrant model
  4277 ;;
  4278                           
  4279                           	psect	text15
  4280  004FD8                     __ptext15:
  4281                           	callstack 0
  4282  004FD8                     _vfprintf:
  4283                           	callstack 19
  4284  004FD8                     
  4285                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.35\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  4286  004FD8  C054  F058         	movff	vfprintf@fmt,vfprintf@cfmt
  4287  004FDC  C055  F059         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  4288  004FE0                     
  4289                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  4290  004FE0  0E00               	movlw	0
  4291  004FE2  0100               	movlb	0	; () banked
  4292  004FE4  6FEC               	movwf	(_nout+1)& (0+255),b
  4293  004FE6  0E00               	movlw	0
  4294  004FE8  6FEB               	movwf	_nout& (0+255),b
  4295                           
  4296                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  4297  004FEA  EF0A  F028         	goto	l4374
  4298  004FEE                     l4372:
  4299                           
  4300                           ; BSR set to: 0
  4301                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  4302  004FEE  C052  F042         	movff	vfprintf@fp,vfpfcnvrt@fp
  4303  004FF2  C053  F043         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  4304  004FF6  0E58               	movlw	low vfprintf@cfmt
  4305  004FF8  6E44               	movwf	vfpfcnvrt@fmt^0,c
  4306  004FFA  0E00               	movlw	high vfprintf@cfmt
  4307  004FFC  6E45               	movwf	(vfpfcnvrt@fmt+1)^0,c
  4308  004FFE  C056  F046         	movff	vfprintf@ap,vfpfcnvrt@ap
  4309  005002  C057  F047         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  4310  005006  EC81  F01C         	call	_vfpfcnvrt	;wreg free
  4311  00500A  5042               	movf	?_vfpfcnvrt^0,w,c
  4312  00500C  0100               	movlb	0	; () banked
  4313  00500E  27EB               	addwf	_nout& (0+255),f,b
  4314  005010  5043               	movf	(?_vfpfcnvrt+1)^0,w,c
  4315  005012  23EC               	addwfc	(_nout+1)& (0+255),f,b
  4316  005014                     l4374:
  4317                           
  4318                           ; BSR set to: 0
  4319                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  4320  005014  C058  FFF6         	movff	vfprintf@cfmt,tblptrl
  4321  005018  C059  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  4322  00501C                     	if	0	;tblptru may be non-zero
  4323  00501C                     	endif
  4324  00501C                     	if	0	;tblptru may be non-zero
  4325  00501C                     	endif
  4326  00501C  0008               	tblrd		*
  4327  00501E  50F5               	movf	tablat,w,c
  4328  005020  0900               	iorlw	0
  4329  005022  A4D8               	btfss	status,2,c
  4330  005024  EF16  F028         	goto	u4221
  4331  005028  EF18  F028         	goto	u4220
  4332  00502C                     u4221:
  4333  00502C  EFF7  F027         	goto	l4372
  4334  005030                     u4220:
  4335  005030                     
  4336                           ; BSR set to: 0
  4337                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  4338  005030  C0EB  F052         	movff	_nout,?_vfprintf
  4339  005034  C0EC  F053         	movff	_nout+1,?_vfprintf+1
  4340  005038                     
  4341                           ; BSR set to: 0
  4342  005038  0012               	return		;funcret
  4343  00503A                     __end_of_vfprintf:
  4344                           	callstack 0
  4345                           
  4346 ;; *************** function _vfpfcnvrt *****************
  4347 ;; Defined at:
  4348 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c"
  4349 ;; Parameters:    Size  Location     Type
  4350 ;;  fp              2   65[COMRAM] PTR struct _IO_FILE
  4351 ;;		 -> sprintf@f(11), 
  4352 ;;  fmt             2   67[COMRAM] PTR PTR unsigned char 
  4353 ;;		 -> vfprintf@cfmt(2), 
  4354 ;;  ap              2   69[COMRAM] PTR PTR void 
  4355 ;;		 -> sprintf@ap(2), 
  4356 ;; Auto vars:     Size  Location     Type
  4357 ;;  ll              8   73[COMRAM] long long 
  4358 ;;  llu             8    0        unsigned long long 
  4359 ;;  f               4    0        unsigned long long 
  4360 ;;  vp              3    0        PTR void 
  4361 ;;  ct              3    0        unsigned char [3]
  4362 ;;  cp              3    0        PTR unsigned char 
  4363 ;;  i               2    0        int 
  4364 ;;  done            2    0        int 
  4365 ;;  c               1    0        unsigned char 
  4366 ;; Return value:  Size  Location     Type
  4367 ;;                  2   65[COMRAM] int 
  4368 ;; Registers used:
  4369 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4370 ;; Tracked objects:
  4371 ;;		On entry : 0/0
  4372 ;;		On exit  : 0/0
  4373 ;;		Unchanged: 0/0
  4374 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4375 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4376 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4377 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4378 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4379 ;;Total ram usage:       16 bytes
  4380 ;; Hardware stack levels used: 1
  4381 ;; Hardware stack levels required when called: 7
  4382 ;; This function calls:
  4383 ;;		_dtoa
  4384 ;;		_fputc
  4385 ;; This function is called by:
  4386 ;;		_vfprintf
  4387 ;; This function uses a non-reentrant model
  4388 ;;
  4389                           
  4390                           	psect	text16
  4391  003902                     __ptext16:
  4392                           	callstack 0
  4393  003902                     _vfpfcnvrt:
  4394                           	callstack 19
  4395  003902                     
  4396                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.35\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.35\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.35\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          5\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  4397  003902  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4398  003906  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4399  00390A  CFDE FFF6          	movff	postinc2,tblptrl
  4400  00390E  CFDD FFF7          	movff	postdec2,tblptrh
  4401  003912                     	if	0	;tblptru may be non-zero
  4402  003912                     	endif
  4403  003912                     	if	0	;tblptru may be non-zero
  4404  003912                     	endif
  4405  003912  0008               	tblrd		*
  4406  003914  50F5               	movf	tablat,w,c
  4407  003916  0A25               	xorlw	37
  4408  003918  A4D8               	btfss	status,2,c
  4409  00391A  EF91  F01C         	goto	u3991
  4410  00391E  EF93  F01C         	goto	u3990
  4411  003922                     u3991:
  4412  003922  EF3F  F01D         	goto	l4236
  4413  003926                     u3990:
  4414  003926                     
  4415                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  4416  003926  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4417  00392A  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4418  00392E  2ADE               	incf	postinc2,f,c
  4419  003930  0E00               	movlw	0
  4420  003932  22DD               	addwfc	postdec2,f,c
  4421  003934                     
  4422                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  4423  003934  0E00               	movlw	0
  4424  003936  0100               	movlb	0	; () banked
  4425  003938  6FEE               	movwf	(_width+1)& (0+255),b
  4426  00393A  0E00               	movlw	0
  4427  00393C  6FED               	movwf	_width& (0+255),b
  4428  00393E  C0ED  F0F1         	movff	_width,_flags
  4429  003942  C0EE  F0F2         	movff	_width+1,_flags+1
  4430  003946                     
  4431                           ; BSR set to: 0
  4432                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  4433  003946  69EF               	setf	_prec& (0+255),b
  4434  003948  69F0               	setf	(_prec+1)& (0+255),b
  4435  00394A                     
  4436                           ; BSR set to: 0
  4437                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  4438  00394A  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4439  00394E  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4440  003952  CFDE FFF6          	movff	postinc2,tblptrl
  4441  003956  CFDD FFF7          	movff	postdec2,tblptrh
  4442  00395A                     	if	0	;tblptru may be non-zero
  4443  00395A                     	endif
  4444  00395A                     	if	0	;tblptru may be non-zero
  4445  00395A                     	endif
  4446  00395A  0008               	tblrd		*
  4447  00395C  50F5               	movf	tablat,w,c
  4448  00395E  0A64               	xorlw	100
  4449  003960  B4D8               	btfsc	status,2,c
  4450  003962  EFB5  F01C         	goto	u4001
  4451  003966  EFB7  F01C         	goto	u4000
  4452  00396A                     u4001:
  4453  00396A  EFC9  F01C         	goto	l4214
  4454  00396E                     u4000:
  4455  00396E                     
  4456                           ; BSR set to: 0
  4457  00396E  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4458  003972  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4459  003976  CFDE FFF6          	movff	postinc2,tblptrl
  4460  00397A  CFDD FFF7          	movff	postdec2,tblptrh
  4461  00397E                     	if	0	;tblptru may be non-zero
  4462  00397E                     	endif
  4463  00397E                     	if	0	;tblptru may be non-zero
  4464  00397E                     	endif
  4465  00397E  0008               	tblrd		*
  4466  003980  50F5               	movf	tablat,w,c
  4467  003982  0A69               	xorlw	105
  4468  003984  A4D8               	btfss	status,2,c
  4469  003986  EFC7  F01C         	goto	u4011
  4470  00398A  EFC9  F01C         	goto	u4010
  4471  00398E                     u4011:
  4472  00398E  EF09  F01D         	goto	l4220
  4473  003992                     u4010:
  4474  003992                     l4214:
  4475                           
  4476                           ; BSR set to: 0
  4477                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  4478  003992  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4479  003996  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4480  00399A  2ADE               	incf	postinc2,f,c
  4481  00399C  0E00               	movlw	0
  4482  00399E  22DD               	addwfc	postdec2,f,c
  4483                           
  4484                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  4485  0039A0  C046  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4486  0039A4  C047  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4487  0039A8  CFDF F048          	movff	indf2,??_vfpfcnvrt
  4488  0039AC  0E02               	movlw	2
  4489  0039AE  26DE               	addwf	postinc2,f,c
  4490  0039B0  CFDF F049          	movff	indf2,??_vfpfcnvrt+1
  4491  0039B4  0E00               	movlw	0
  4492  0039B6  22DD               	addwfc	postdec2,f,c
  4493  0039B8  C048  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4494  0039BC  C049  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4495  0039C0  CFDE F04A          	movff	postinc2,vfpfcnvrt@ll
  4496  0039C4  CFDD F04B          	movff	postdec2,vfpfcnvrt@ll+1
  4497  0039C8  0E00               	movlw	0
  4498  0039CA  BE4B               	btfsc	(vfpfcnvrt@ll+1)^0,7,c
  4499  0039CC  0EFF               	movlw	-1
  4500  0039CE  6E4C               	movwf	(vfpfcnvrt@ll+2)^0,c
  4501  0039D0  6E4D               	movwf	(vfpfcnvrt@ll+3)^0,c
  4502  0039D2  6E4E               	movwf	(vfpfcnvrt@ll+4)^0,c
  4503  0039D4  6E4F               	movwf	(vfpfcnvrt@ll+5)^0,c
  4504  0039D6  6E50               	movwf	(vfpfcnvrt@ll+6)^0,c
  4505  0039D8  6E51               	movwf	(vfpfcnvrt@ll+7)^0,c
  4506  0039DA                     
  4507                           ; BSR set to: 0
  4508                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  4509  0039DA  C042  F01E         	movff	vfpfcnvrt@fp,dtoa@fp
  4510  0039DE  C043  F01F         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  4511  0039E2  C04A  F020         	movff	vfpfcnvrt@ll,dtoa@d
  4512  0039E6  C04B  F021         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  4513  0039EA  C04C  F022         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  4514  0039EE  C04D  F023         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  4515  0039F2  C04E  F024         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  4516  0039F6  C04F  F025         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  4517  0039FA  C050  F026         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  4518  0039FE  C051  F027         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  4519  003A02  ECA7  F016         	call	_dtoa	;wreg free
  4520  003A06  C01E  F042         	movff	?_dtoa,?_vfpfcnvrt
  4521  003A0A  C01F  F043         	movff	?_dtoa+1,?_vfpfcnvrt+1
  4522  003A0E  EF5A  F01D         	goto	l1490
  4523  003A12                     l4220:
  4524                           
  4525                           ; BSR set to: 0
  4526                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  4527  003A12  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4528  003A16  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4529  003A1A  CFDE FFF6          	movff	postinc2,tblptrl
  4530  003A1E  CFDD FFF7          	movff	postdec2,tblptrh
  4531  003A22                     	if	0	;tblptru may be non-zero
  4532  003A22                     	endif
  4533  003A22                     	if	0	;tblptru may be non-zero
  4534  003A22                     	endif
  4535  003A22  0008               	tblrd		*
  4536  003A24  50F5               	movf	tablat,w,c
  4537  003A26  0A25               	xorlw	37
  4538  003A28  A4D8               	btfss	status,2,c
  4539  003A2A  EF19  F01D         	goto	u4021
  4540  003A2E  EF1B  F01D         	goto	u4020
  4541  003A32                     u4021:
  4542  003A32  EF32  F01D         	goto	l4230
  4543  003A36                     u4020:
  4544  003A36                     
  4545                           ; BSR set to: 0
  4546                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  4547  003A36  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4548  003A3A  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4549  003A3E  2ADE               	incf	postinc2,f,c
  4550  003A40  0E00               	movlw	0
  4551  003A42  22DD               	addwfc	postdec2,f,c
  4552  003A44                     
  4553                           ; BSR set to: 0
  4554                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  4555  003A44  0E00               	movlw	0
  4556  003A46  6E04               	movwf	(fputc@c+1)^0,c
  4557  003A48  0E25               	movlw	37
  4558  003A4A  6E03               	movwf	fputc@c^0,c
  4559  003A4C  C042  F005         	movff	vfpfcnvrt@fp,fputc@fp
  4560  003A50  C043  F006         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  4561  003A54  ECC8  F024         	call	_fputc	;wreg free
  4562  003A58                     l4226:
  4563                           
  4564                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  4565  003A58  0E00               	movlw	0
  4566  003A5A  6E43               	movwf	(?_vfpfcnvrt+1)^0,c
  4567  003A5C  0E01               	movlw	1
  4568  003A5E  6E42               	movwf	?_vfpfcnvrt^0,c
  4569  003A60  EF5A  F01D         	goto	l1490
  4570  003A64                     l4230:
  4571                           
  4572                           ; BSR set to: 0
  4573                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  4574  003A64  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4575  003A68  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4576  003A6C  2ADE               	incf	postinc2,f,c
  4577  003A6E  0E00               	movlw	0
  4578  003A70  22DD               	addwfc	postdec2,f,c
  4579  003A72                     
  4580                           ; BSR set to: 0
  4581                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  4582  003A72  0E00               	movlw	0
  4583  003A74  6E43               	movwf	(?_vfpfcnvrt+1)^0,c
  4584  003A76  0E00               	movlw	0
  4585  003A78  6E42               	movwf	?_vfpfcnvrt^0,c
  4586  003A7A  EF5A  F01D         	goto	l1490
  4587  003A7E                     l4236:
  4588                           
  4589                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  4590  003A7E  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4591  003A82  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4592  003A86  CFDE FFF6          	movff	postinc2,tblptrl
  4593  003A8A  CFDD FFF7          	movff	postdec2,tblptrh
  4594  003A8E                     	if	0	;tblptru may be non-zero
  4595  003A8E                     	endif
  4596  003A8E                     	if	0	;tblptru may be non-zero
  4597  003A8E                     	endif
  4598  003A8E  0008               	tblrd		*
  4599  003A90  50F5               	movf	tablat,w,c
  4600  003A92  6E03               	movwf	fputc@c^0,c
  4601  003A94  6A04               	clrf	(fputc@c+1)^0,c
  4602  003A96  C042  F005         	movff	vfpfcnvrt@fp,fputc@fp
  4603  003A9A  C043  F006         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  4604  003A9E  ECC8  F024         	call	_fputc	;wreg free
  4605  003AA2                     
  4606                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  4607  003AA2  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4608  003AA6  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4609  003AAA  2ADE               	incf	postinc2,f,c
  4610  003AAC  0E00               	movlw	0
  4611  003AAE  22DD               	addwfc	postdec2,f,c
  4612  003AB0  EF2C  F01D         	goto	l4226
  4613  003AB4                     l1490:
  4614  003AB4  0012               	return		;funcret
  4615  003AB6                     __end_of_vfpfcnvrt:
  4616                           	callstack 0
  4617                           
  4618 ;; *************** function _dtoa *****************
  4619 ;; Defined at:
  4620 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c"
  4621 ;; Parameters:    Size  Location     Type
  4622 ;;  fp              2   29[COMRAM] PTR struct _IO_FILE
  4623 ;;		 -> sprintf@f(11), 
  4624 ;;  d               8   31[COMRAM] long long 
  4625 ;; Auto vars:     Size  Location     Type
  4626 ;;  n               8   55[COMRAM] long long 
  4627 ;;  i               2   63[COMRAM] int 
  4628 ;;  s               2   53[COMRAM] int 
  4629 ;;  w               2   51[COMRAM] int 
  4630 ;;  p               2   49[COMRAM] int 
  4631 ;; Return value:  Size  Location     Type
  4632 ;;                  2   29[COMRAM] int 
  4633 ;; Registers used:
  4634 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4635 ;; Tracked objects:
  4636 ;;		On entry : 0/0
  4637 ;;		On exit  : 0/0
  4638 ;;		Unchanged: 0/0
  4639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4640 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4641 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4642 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4643 ;;      Totals:        36       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4644 ;;Total ram usage:       36 bytes
  4645 ;; Hardware stack levels used: 1
  4646 ;; Hardware stack levels required when called: 6
  4647 ;; This function calls:
  4648 ;;		___aodiv
  4649 ;;		___aomod
  4650 ;;		_abs
  4651 ;;		_pad
  4652 ;; This function is called by:
  4653 ;;		_vfpfcnvrt
  4654 ;; This function uses a non-reentrant model
  4655 ;;
  4656                           
  4657                           	psect	text17
  4658  002D4E                     __ptext17:
  4659                           	callstack 0
  4660  002D4E                     _dtoa:
  4661                           	callstack 19
  4662  002D4E                     
  4663                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  4664  002D4E  C020  F038         	movff	dtoa@d,dtoa@n
  4665  002D52  C021  F039         	movff	dtoa@d+1,dtoa@n+1
  4666  002D56  C022  F03A         	movff	dtoa@d+2,dtoa@n+2
  4667  002D5A  C023  F03B         	movff	dtoa@d+3,dtoa@n+3
  4668  002D5E  C024  F03C         	movff	dtoa@d+4,dtoa@n+4
  4669  002D62  C025  F03D         	movff	dtoa@d+5,dtoa@n+5
  4670  002D66  C026  F03E         	movff	dtoa@d+6,dtoa@n+6
  4671  002D6A  C027  F03F         	movff	dtoa@d+7,dtoa@n+7
  4672  002D6E                     
  4673                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  4674  002D6E  BE3F               	btfsc	(dtoa@n+7)^0,7,c
  4675  002D70  EFBC  F016         	goto	u3531
  4676  002D74  EFBF  F016         	goto	u3530
  4677  002D78                     u3531:
  4678  002D78  0E01               	movlw	1
  4679  002D7A  EFC0  F016         	goto	u3540
  4680  002D7E                     u3530:
  4681  002D7E  0E00               	movlw	0
  4682  002D80                     u3540:
  4683  002D80  6E36               	movwf	dtoa@s^0,c
  4684  002D82  6A37               	clrf	(dtoa@s+1)^0,c
  4685                           
  4686                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  4687  002D84  5036               	movf	dtoa@s^0,w,c
  4688  002D86  1037               	iorwf	(dtoa@s+1)^0,w,c
  4689  002D88  B4D8               	btfsc	status,2,c
  4690  002D8A  EFC9  F016         	goto	u3551
  4691  002D8E  EFCB  F016         	goto	u3550
  4692  002D92                     u3551:
  4693  002D92  EFDB  F016         	goto	l3928
  4694  002D96                     u3550:
  4695  002D96                     
  4696                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  4697  002D96  1E3F               	comf	(dtoa@n+7)^0,f,c
  4698  002D98  1E3E               	comf	(dtoa@n+6)^0,f,c
  4699  002D9A  1E3D               	comf	(dtoa@n+5)^0,f,c
  4700  002D9C  1E3C               	comf	(dtoa@n+4)^0,f,c
  4701  002D9E  1E3B               	comf	(dtoa@n+3)^0,f,c
  4702  002DA0  1E3A               	comf	(dtoa@n+2)^0,f,c
  4703  002DA2  1E39               	comf	(dtoa@n+1)^0,f,c
  4704  002DA4  6C38               	negf	dtoa@n^0,c
  4705  002DA6  0E00               	movlw	0
  4706  002DA8  2239               	addwfc	(dtoa@n+1)^0,f,c
  4707  002DAA  223A               	addwfc	(dtoa@n+2)^0,f,c
  4708  002DAC  223B               	addwfc	(dtoa@n+3)^0,f,c
  4709  002DAE  223C               	addwfc	(dtoa@n+4)^0,f,c
  4710  002DB0  223D               	addwfc	(dtoa@n+5)^0,f,c
  4711  002DB2  223E               	addwfc	(dtoa@n+6)^0,f,c
  4712  002DB4  223F               	addwfc	(dtoa@n+7)^0,f,c
  4713  002DB6                     l3928:
  4714                           
  4715                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  4716  002DB6  0100               	movlb	0	; () banked
  4717  002DB8  BFF0               	btfsc	(_prec+1)& (0+255),7,b
  4718  002DBA  EFE1  F016         	goto	u3561
  4719  002DBE  EFE3  F016         	goto	u3560
  4720  002DC2                     u3561:
  4721  002DC2  EFE4  F016         	goto	l3932
  4722  002DC6                     u3560:
  4723  002DC6                     
  4724                           ; BSR set to: 0
  4725                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  4726  002DC6  93F1               	bcf	_flags& (0+255),1,b
  4727  002DC8                     l3932:
  4728                           
  4729                           ; BSR set to: 0
  4730                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  4731  002DC8  BFF0               	btfsc	(_prec+1)& (0+255),7,b
  4732  002DCA  EFF1  F016         	goto	u3570
  4733  002DCE  51F0               	movf	(_prec+1)& (0+255),w,b
  4734  002DD0  E106               	bnz	u3571
  4735  002DD2  05EF               	decf	_prec& (0+255),w,b
  4736  002DD4  B0D8               	btfsc	status,0,c
  4737  002DD6  EFEF  F016         	goto	u3571
  4738  002DDA  EFF1  F016         	goto	u3570
  4739  002DDE                     u3571:
  4740  002DDE  EFF7  F016         	goto	l1463
  4741  002DE2                     u3570:
  4742  002DE2                     
  4743                           ; BSR set to: 0
  4744  002DE2  0E00               	movlw	0
  4745  002DE4  6E33               	movwf	(dtoa@p+1)^0,c
  4746  002DE6  0E01               	movlw	1
  4747  002DE8  6E32               	movwf	dtoa@p^0,c
  4748  002DEA  EFFB  F016         	goto	l1465
  4749  002DEE                     l1463:
  4750                           
  4751                           ; BSR set to: 0
  4752  002DEE  C0EF  F032         	movff	_prec,dtoa@p
  4753  002DF2  C0F0  F033         	movff	_prec+1,dtoa@p+1
  4754  002DF6                     l1465:
  4755                           
  4756                           ; BSR set to: 0
  4757                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  4758  002DF6  C0ED  F034         	movff	_width,dtoa@w
  4759  002DFA  C0EE  F035         	movff	_width+1,dtoa@w+1
  4760  002DFE                     
  4761                           ; BSR set to: 0
  4762                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  4763  002DFE  5036               	movf	dtoa@s^0,w,c
  4764  002E00  1037               	iorwf	(dtoa@s+1)^0,w,c
  4765  002E02  A4D8               	btfss	status,2,c
  4766  002E04  EF06  F017         	goto	u3581
  4767  002E08  EF08  F017         	goto	u3580
  4768  002E0C                     u3581:
  4769  002E0C  EF0F  F017         	goto	l3940
  4770  002E10                     u3580:
  4771  002E10                     
  4772                           ; BSR set to: 0
  4773  002E10  A5F1               	btfss	_flags& (0+255),2,b
  4774  002E12  EF0D  F017         	goto	u3591
  4775  002E16  EF0F  F017         	goto	u3590
  4776  002E1A                     u3591:
  4777  002E1A  EF12  F017         	goto	l3942
  4778  002E1E                     u3590:
  4779  002E1E                     l3940:
  4780                           
  4781                           ; BSR set to: 0
  4782                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 306:         --w;
  4783  002E1E  0634               	decf	dtoa@w^0,f,c
  4784  002E20  A0D8               	btfss	status,0,c
  4785  002E22  0635               	decf	(dtoa@w+1)^0,f,c
  4786  002E24                     l3942:
  4787                           
  4788                           ; BSR set to: 0
  4789                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  4790  002E24  0E00               	movlw	0
  4791  002E26  6E41               	movwf	(dtoa@i+1)^0,c
  4792  002E28  0E1F               	movlw	31
  4793  002E2A  6E40               	movwf	dtoa@i^0,c
  4794  002E2C                     
  4795                           ; BSR set to: 0
  4796                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  4797  002E2C  0E00               	movlw	0
  4798  002E2E  0101               	movlb	1	; () banked
  4799  002E30  6FB0               	movwf	(_dbuf+31)& (0+255),b
  4800                           
  4801                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  4802  002E32  EF97  F017         	goto	l3956
  4803  002E36                     l3946:
  4804                           
  4805                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 313:         --i;
  4806  002E36  0640               	decf	dtoa@i^0,f,c
  4807  002E38  A0D8               	btfss	status,0,c
  4808  002E3A  0641               	decf	(dtoa@i+1)^0,f,c
  4809  002E3C                     
  4810                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  4811  002E3C  0E91               	movlw	low _dbuf
  4812  002E3E  2440               	addwf	dtoa@i^0,w,c
  4813  002E40  6ED9               	movwf	fsr2l,c
  4814  002E42  0E01               	movlw	high _dbuf
  4815  002E44  2041               	addwfc	(dtoa@i+1)^0,w,c
  4816  002E46  6EDA               	movwf	fsr2h,c
  4817  002E48  C038  F003         	movff	dtoa@n,___aomod@dividend
  4818  002E4C  C039  F004         	movff	dtoa@n+1,___aomod@dividend+1
  4819  002E50  C03A  F005         	movff	dtoa@n+2,___aomod@dividend+2
  4820  002E54  C03B  F006         	movff	dtoa@n+3,___aomod@dividend+3
  4821  002E58  C03C  F007         	movff	dtoa@n+4,___aomod@dividend+4
  4822  002E5C  C03D  F008         	movff	dtoa@n+5,___aomod@dividend+5
  4823  002E60  C03E  F009         	movff	dtoa@n+6,___aomod@dividend+6
  4824  002E64  C03F  F00A         	movff	dtoa@n+7,___aomod@dividend+7
  4825  002E68  0E0A               	movlw	10
  4826  002E6A  6E0B               	movwf	___aomod@divisor^0,c
  4827  002E6C  0E00               	movlw	0
  4828  002E6E  6E0C               	movwf	(___aomod@divisor+1)^0,c
  4829  002E70  0E00               	movlw	0
  4830  002E72  6E0D               	movwf	(___aomod@divisor+2)^0,c
  4831  002E74  0E00               	movlw	0
  4832  002E76  6E0E               	movwf	(___aomod@divisor+3)^0,c
  4833  002E78  0E00               	movlw	0
  4834  002E7A  6E0F               	movwf	(___aomod@divisor+4)^0,c
  4835  002E7C  0E00               	movlw	0
  4836  002E7E  6E10               	movwf	(___aomod@divisor+5)^0,c
  4837  002E80  0E00               	movlw	0
  4838  002E82  6E11               	movwf	(___aomod@divisor+6)^0,c
  4839  002E84  0E00               	movlw	0
  4840  002E86  6E12               	movwf	(___aomod@divisor+7)^0,c
  4841  002E88  EC13  F022         	call	___aomod	;wreg free
  4842  002E8C  C003  F028         	movff	?___aomod,??_dtoa
  4843  002E90  C004  F029         	movff	?___aomod+1,??_dtoa+1
  4844  002E94  C005  F02A         	movff	?___aomod+2,??_dtoa+2
  4845  002E98  C006  F02B         	movff	?___aomod+3,??_dtoa+3
  4846  002E9C  C007  F02C         	movff	?___aomod+4,??_dtoa+4
  4847  002EA0  C008  F02D         	movff	?___aomod+5,??_dtoa+5
  4848  002EA4  C009  F02E         	movff	?___aomod+6,??_dtoa+6
  4849  002EA8  C00A  F02F         	movff	?___aomod+7,??_dtoa+7
  4850  002EAC  C028  F015         	movff	??_dtoa,abs@a
  4851  002EB0  C02A  F016         	movff	??_dtoa+2,abs@a+1
  4852  002EB4  EC30  F02A         	call	_abs	;wreg free
  4853  002EB8  5015               	movf	?_abs^0,w,c
  4854  002EBA  0F30               	addlw	48
  4855  002EBC  6EDF               	movwf	indf2,c
  4856  002EBE                     
  4857                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 315:         --p;
  4858  002EBE  0632               	decf	dtoa@p^0,f,c
  4859  002EC0  A0D8               	btfss	status,0,c
  4860  002EC2  0633               	decf	(dtoa@p+1)^0,f,c
  4861  002EC4                     
  4862                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 316:         --w;
  4863  002EC4  0634               	decf	dtoa@w^0,f,c
  4864  002EC6  A0D8               	btfss	status,0,c
  4865  002EC8  0635               	decf	(dtoa@w+1)^0,f,c
  4866  002ECA                     
  4867                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  4868  002ECA  C038  F003         	movff	dtoa@n,___aodiv@dividend
  4869  002ECE  C039  F004         	movff	dtoa@n+1,___aodiv@dividend+1
  4870  002ED2  C03A  F005         	movff	dtoa@n+2,___aodiv@dividend+2
  4871  002ED6  C03B  F006         	movff	dtoa@n+3,___aodiv@dividend+3
  4872  002EDA  C03C  F007         	movff	dtoa@n+4,___aodiv@dividend+4
  4873  002EDE  C03D  F008         	movff	dtoa@n+5,___aodiv@dividend+5
  4874  002EE2  C03E  F009         	movff	dtoa@n+6,___aodiv@dividend+6
  4875  002EE6  C03F  F00A         	movff	dtoa@n+7,___aodiv@dividend+7
  4876  002EEA  0E0A               	movlw	10
  4877  002EEC  6E0B               	movwf	___aodiv@divisor^0,c
  4878  002EEE  0E00               	movlw	0
  4879  002EF0  6E0C               	movwf	(___aodiv@divisor+1)^0,c
  4880  002EF2  0E00               	movlw	0
  4881  002EF4  6E0D               	movwf	(___aodiv@divisor+2)^0,c
  4882  002EF6  0E00               	movlw	0
  4883  002EF8  6E0E               	movwf	(___aodiv@divisor+3)^0,c
  4884  002EFA  0E00               	movlw	0
  4885  002EFC  6E0F               	movwf	(___aodiv@divisor+4)^0,c
  4886  002EFE  0E00               	movlw	0
  4887  002F00  6E10               	movwf	(___aodiv@divisor+5)^0,c
  4888  002F02  0E00               	movlw	0
  4889  002F04  6E11               	movwf	(___aodiv@divisor+6)^0,c
  4890  002F06  0E00               	movlw	0
  4891  002F08  6E12               	movwf	(___aodiv@divisor+7)^0,c
  4892  002F0A  ECCF  F01F         	call	___aodiv	;wreg free
  4893  002F0E  C003  F038         	movff	?___aodiv,dtoa@n
  4894  002F12  C004  F039         	movff	?___aodiv+1,dtoa@n+1
  4895  002F16  C005  F03A         	movff	?___aodiv+2,dtoa@n+2
  4896  002F1A  C006  F03B         	movff	?___aodiv+3,dtoa@n+3
  4897  002F1E  C007  F03C         	movff	?___aodiv+4,dtoa@n+4
  4898  002F22  C008  F03D         	movff	?___aodiv+5,dtoa@n+5
  4899  002F26  C009  F03E         	movff	?___aodiv+6,dtoa@n+6
  4900  002F2A  C00A  F03F         	movff	?___aodiv+7,dtoa@n+7
  4901  002F2E                     l3956:
  4902                           
  4903                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  4904  002F2E  BE41               	btfsc	(dtoa@i+1)^0,7,c
  4905  002F30  EFA2  F017         	goto	u3601
  4906  002F34  5041               	movf	(dtoa@i+1)^0,w,c
  4907  002F36  E108               	bnz	u3600
  4908  002F38  0440               	decf	dtoa@i^0,w,c
  4909  002F3A  A0D8               	btfss	status,0,c
  4910  002F3C  EFA2  F017         	goto	u3601
  4911  002F40  EFA4  F017         	goto	u3600
  4912  002F44                     u3601:
  4913  002F44  EFD5  F017         	goto	l3966
  4914  002F48                     u3600:
  4915  002F48  5038               	movf	dtoa@n^0,w,c
  4916  002F4A  1039               	iorwf	(dtoa@n+1)^0,w,c
  4917  002F4C  103A               	iorwf	(dtoa@n+2)^0,w,c
  4918  002F4E  103B               	iorwf	(dtoa@n+3)^0,w,c
  4919  002F50  103C               	iorwf	(dtoa@n+4)^0,w,c
  4920  002F52  103D               	iorwf	(dtoa@n+5)^0,w,c
  4921  002F54  103E               	iorwf	(dtoa@n+6)^0,w,c
  4922  002F56  103F               	iorwf	(dtoa@n+7)^0,w,c
  4923  002F58  A4D8               	btfss	status,2,c
  4924  002F5A  EFB1  F017         	goto	u3611
  4925  002F5E  EFB3  F017         	goto	u3610
  4926  002F62                     u3611:
  4927  002F62  EF1B  F017         	goto	l3946
  4928  002F66                     u3610:
  4929  002F66  BE33               	btfsc	(dtoa@p+1)^0,7,c
  4930  002F68  EFC0  F017         	goto	u3620
  4931  002F6C  5033               	movf	(dtoa@p+1)^0,w,c
  4932  002F6E  E106               	bnz	u3621
  4933  002F70  0432               	decf	dtoa@p^0,w,c
  4934  002F72  B0D8               	btfsc	status,0,c
  4935  002F74  EFBE  F017         	goto	u3621
  4936  002F78  EFC0  F017         	goto	u3620
  4937  002F7C                     u3621:
  4938  002F7C  EF1B  F017         	goto	l3946
  4939  002F80                     u3620:
  4940  002F80  BE35               	btfsc	(dtoa@w+1)^0,7,c
  4941  002F82  EFCB  F017         	goto	u3631
  4942  002F86  5035               	movf	(dtoa@w+1)^0,w,c
  4943  002F88  E108               	bnz	u3630
  4944  002F8A  0434               	decf	dtoa@w^0,w,c
  4945  002F8C  A0D8               	btfss	status,0,c
  4946  002F8E  EFCB  F017         	goto	u3631
  4947  002F92  EFCD  F017         	goto	u3630
  4948  002F96                     u3631:
  4949  002F96  EFD5  F017         	goto	l3966
  4950  002F9A                     u3630:
  4951  002F9A  0100               	movlb	0	; () banked
  4952  002F9C  B3F1               	btfsc	_flags& (0+255),1,b
  4953  002F9E  EFD3  F017         	goto	u3641
  4954  002FA2  EFD5  F017         	goto	u3640
  4955  002FA6                     u3641:
  4956  002FA6  EF1B  F017         	goto	l3946
  4957  002FAA                     u3640:
  4958  002FAA                     l3966:
  4959                           
  4960                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  4961  002FAA  5036               	movf	dtoa@s^0,w,c
  4962  002FAC  1037               	iorwf	(dtoa@s+1)^0,w,c
  4963  002FAE  A4D8               	btfss	status,2,c
  4964  002FB0  EFDC  F017         	goto	u3651
  4965  002FB4  EFDE  F017         	goto	u3650
  4966  002FB8                     u3651:
  4967  002FB8  EFE6  F017         	goto	l3970
  4968  002FBC                     u3650:
  4969  002FBC  0100               	movlb	0	; () banked
  4970  002FBE  A5F1               	btfss	_flags& (0+255),2,b
  4971  002FC0  EFE4  F017         	goto	u3661
  4972  002FC4  EFE6  F017         	goto	u3660
  4973  002FC8                     u3661:
  4974  002FC8  EF04  F018         	goto	l3980
  4975  002FCC                     u3660:
  4976  002FCC                     l3970:
  4977                           
  4978                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 322:         --i;
  4979  002FCC  0640               	decf	dtoa@i^0,f,c
  4980  002FCE  A0D8               	btfss	status,0,c
  4981  002FD0  0641               	decf	(dtoa@i+1)^0,f,c
  4982  002FD2                     
  4983                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  4984  002FD2  5036               	movf	dtoa@s^0,w,c
  4985  002FD4  1037               	iorwf	(dtoa@s+1)^0,w,c
  4986  002FD6  A4D8               	btfss	status,2,c
  4987  002FD8  EFF0  F017         	goto	u3671
  4988  002FDC  EFF2  F017         	goto	u3670
  4989  002FE0                     u3671:
  4990  002FE0  EFF8  F017         	goto	l3976
  4991  002FE4                     u3670:
  4992  002FE4  0E00               	movlw	0
  4993  002FE6  6E31               	movwf	(_dtoa$2826+1)^0,c
  4994  002FE8  0E2B               	movlw	43
  4995  002FEA  6E30               	movwf	_dtoa$2826^0,c
  4996  002FEC  EFFC  F017         	goto	l3978
  4997  002FF0                     l3976:
  4998  002FF0  0E00               	movlw	0
  4999  002FF2  6E31               	movwf	(_dtoa$2826+1)^0,c
  5000  002FF4  0E2D               	movlw	45
  5001  002FF6  6E30               	movwf	_dtoa$2826^0,c
  5002  002FF8                     l3978:
  5003  002FF8  0E91               	movlw	low _dbuf
  5004  002FFA  2440               	addwf	dtoa@i^0,w,c
  5005  002FFC  6ED9               	movwf	fsr2l,c
  5006  002FFE  0E01               	movlw	high _dbuf
  5007  003000  2041               	addwfc	(dtoa@i+1)^0,w,c
  5008  003002  6EDA               	movwf	fsr2h,c
  5009  003004  C030  FFDF         	movff	_dtoa$2826,indf2
  5010  003008                     l3980:
  5011                           
  5012                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  5013  003008  C01E  F013         	movff	dtoa@fp,pad@fp
  5014  00300C  C01F  F014         	movff	dtoa@fp+1,pad@fp+1
  5015  003010  0E91               	movlw	low _dbuf
  5016  003012  2440               	addwf	dtoa@i^0,w,c
  5017  003014  6E15               	movwf	pad@buf^0,c
  5018  003016  0E01               	movlw	high _dbuf
  5019  003018  2041               	addwfc	(dtoa@i+1)^0,w,c
  5020  00301A  6E16               	movwf	(pad@buf+1)^0,c
  5021  00301C  C034  F017         	movff	dtoa@w,pad@p
  5022  003020  C035  F018         	movff	dtoa@w+1,pad@p+1
  5023  003024  EC2D  F025         	call	_pad	;wreg free
  5024  003028  C013  F01E         	movff	?_pad,?_dtoa
  5025  00302C  C014  F01F         	movff	?_pad+1,?_dtoa+1
  5026  003030  0012               	return		;funcret
  5027  003032                     __end_of_dtoa:
  5028                           	callstack 0
  5029                           
  5030 ;; *************** function _pad *****************
  5031 ;; Defined at:
  5032 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c"
  5033 ;; Parameters:    Size  Location     Type
  5034 ;;  fp              2   18[COMRAM] PTR struct _IO_FILE
  5035 ;;		 -> sprintf@f(11), 
  5036 ;;  buf             2   20[COMRAM] PTR unsigned char 
  5037 ;;		 -> dbuf(32), 
  5038 ;;  p               2   22[COMRAM] int 
  5039 ;; Auto vars:     Size  Location     Type
  5040 ;;  w               2   27[COMRAM] int 
  5041 ;;  i               2   25[COMRAM] int 
  5042 ;; Return value:  Size  Location     Type
  5043 ;;                  2   18[COMRAM] int 
  5044 ;; Registers used:
  5045 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5046 ;; Tracked objects:
  5047 ;;		On entry : 0/0
  5048 ;;		On exit  : 0/0
  5049 ;;		Unchanged: 0/0
  5050 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5051 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5052 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5053 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5054 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5055 ;;Total ram usage:       11 bytes
  5056 ;; Hardware stack levels used: 1
  5057 ;; Hardware stack levels required when called: 5
  5058 ;; This function calls:
  5059 ;;		_fputc
  5060 ;;		_fputs
  5061 ;;		_strlen
  5062 ;; This function is called by:
  5063 ;;		_dtoa
  5064 ;; This function uses a non-reentrant model
  5065 ;;
  5066                           
  5067                           	psect	text18
  5068  004A5A                     __ptext18:
  5069                           	callstack 0
  5070  004A5A                     _pad:
  5071                           	callstack 19
  5072  004A5A                     
  5073                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  5074  004A5A  0100               	movlb	0	; () banked
  5075  004A5C  A1F1               	btfss	_flags& (0+255),0,b
  5076  004A5E  EF33  F025         	goto	u3031
  5077  004A62  EF35  F025         	goto	u3030
  5078  004A66                     u3031:
  5079  004A66  EF3F  F025         	goto	l3680
  5080  004A6A                     u3030:
  5081  004A6A                     
  5082                           ; BSR set to: 0
  5083                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  5084  004A6A  C015  F00C         	movff	pad@buf,fputs@s
  5085  004A6E  C016  F00D         	movff	pad@buf+1,fputs@s+1
  5086  004A72  C013  F00E         	movff	pad@fp,fputs@fp
  5087  004A76  C014  F00F         	movff	pad@fp+1,fputs@fp+1
  5088  004A7A  EC8A  F029         	call	_fputs	;wreg free
  5089  004A7E                     l3680:
  5090                           
  5091                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  5092  004A7E  BE18               	btfsc	(pad@p+1)^0,7,c
  5093  004A80  EF44  F025         	goto	u3041
  5094  004A84  EF46  F025         	goto	u3040
  5095  004A88                     u3041:
  5096  004A88  EF4C  F025         	goto	l3684
  5097  004A8C                     u3040:
  5098  004A8C  C017  F01C         	movff	pad@p,pad@w
  5099  004A90  C018  F01D         	movff	pad@p+1,pad@w+1
  5100  004A94  EF50  F025         	goto	l1452
  5101  004A98                     l3684:
  5102  004A98  0E00               	movlw	0
  5103  004A9A  6E1D               	movwf	(pad@w+1)^0,c
  5104  004A9C  0E00               	movlw	0
  5105  004A9E  6E1C               	movwf	pad@w^0,c
  5106  004AA0                     l1452:
  5107                           
  5108                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  5109  004AA0  0E00               	movlw	0
  5110  004AA2  6E1B               	movwf	(pad@i+1)^0,c
  5111  004AA4  0E00               	movlw	0
  5112  004AA6  6E1A               	movwf	pad@i^0,c
  5113                           
  5114                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  5115  004AA8  EF62  F025         	goto	l3690
  5116  004AAC                     l3686:
  5117                           
  5118                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  5119  004AAC  0E00               	movlw	0
  5120  004AAE  6E04               	movwf	(fputc@c+1)^0,c
  5121  004AB0  0E20               	movlw	32
  5122  004AB2  6E03               	movwf	fputc@c^0,c
  5123  004AB4  C013  F005         	movff	pad@fp,fputc@fp
  5124  004AB8  C014  F006         	movff	pad@fp+1,fputc@fp+1
  5125  004ABC  ECC8  F024         	call	_fputc	;wreg free
  5126  004AC0                     
  5127                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 86:         ++i;
  5128  004AC0  4A1A               	infsnz	pad@i^0,f,c
  5129  004AC2  2A1B               	incf	(pad@i+1)^0,f,c
  5130  004AC4                     l3690:
  5131                           
  5132                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  5133  004AC4  501C               	movf	pad@w^0,w,c
  5134  004AC6  5C1A               	subwf	pad@i^0,w,c
  5135  004AC8  501B               	movf	(pad@i+1)^0,w,c
  5136  004ACA  0A80               	xorlw	128
  5137  004ACC  6E19               	movwf	??_pad^0,c
  5138  004ACE  501D               	movf	(pad@w+1)^0,w,c
  5139  004AD0  0A80               	xorlw	128
  5140  004AD2  5819               	subwfb	??_pad^0,w,c
  5141  004AD4  A0D8               	btfss	status,0,c
  5142  004AD6  EF6F  F025         	goto	u3051
  5143  004ADA  EF71  F025         	goto	u3050
  5144  004ADE                     u3051:
  5145  004ADE  EF56  F025         	goto	l3686
  5146  004AE2                     u3050:
  5147  004AE2                     
  5148                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  5149  004AE2  0100               	movlb	0	; () banked
  5150  004AE4  B1F1               	btfsc	_flags& (0+255),0,b
  5151  004AE6  EF77  F025         	goto	u3061
  5152  004AEA  EF79  F025         	goto	u3060
  5153  004AEE                     u3061:
  5154  004AEE  EF83  F025         	goto	l3694
  5155  004AF2                     u3060:
  5156  004AF2                     
  5157                           ; BSR set to: 0
  5158                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  5159  004AF2  C015  F00C         	movff	pad@buf,fputs@s
  5160  004AF6  C016  F00D         	movff	pad@buf+1,fputs@s+1
  5161  004AFA  C013  F00E         	movff	pad@fp,fputs@fp
  5162  004AFE  C014  F00F         	movff	pad@fp+1,fputs@fp+1
  5163  004B02  EC8A  F029         	call	_fputs	;wreg free
  5164  004B06                     l3694:
  5165                           
  5166                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  5167  004B06  C015  F003         	movff	pad@buf,strlen@s
  5168  004B0A  C016  F004         	movff	pad@buf+1,strlen@s+1
  5169  004B0E  ECA6  F02A         	call	_strlen	;wreg free
  5170  004B12  501C               	movf	pad@w^0,w,c
  5171  004B14  2403               	addwf	?_strlen^0,w,c
  5172  004B16  6E13               	movwf	?_pad^0,c
  5173  004B18  501D               	movf	(pad@w+1)^0,w,c
  5174  004B1A  2004               	addwfc	(?_strlen+1)^0,w,c
  5175  004B1C  6E14               	movwf	(?_pad+1)^0,c
  5176  004B1E  0012               	return		;funcret
  5177  004B20                     __end_of_pad:
  5178                           	callstack 0
  5179                           
  5180 ;; *************** function _strlen *****************
  5181 ;; Defined at:
  5182 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\strlen.c"
  5183 ;; Parameters:    Size  Location     Type
  5184 ;;  s               2    2[COMRAM] PTR const unsigned char 
  5185 ;;		 -> dbuf(32), 
  5186 ;; Auto vars:     Size  Location     Type
  5187 ;;  a               2    4[COMRAM] PTR const unsigned char 
  5188 ;;		 -> dbuf(32), 
  5189 ;; Return value:  Size  Location     Type
  5190 ;;                  2    2[COMRAM] unsigned int 
  5191 ;; Registers used:
  5192 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5193 ;; Tracked objects:
  5194 ;;		On entry : 0/0
  5195 ;;		On exit  : 0/0
  5196 ;;		Unchanged: 0/0
  5197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5198 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5199 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5200 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5201 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5202 ;;Total ram usage:        4 bytes
  5203 ;; Hardware stack levels used: 1
  5204 ;; Hardware stack levels required when called: 2
  5205 ;; This function calls:
  5206 ;;		Nothing
  5207 ;; This function is called by:
  5208 ;;		_pad
  5209 ;; This function uses a non-reentrant model
  5210 ;;
  5211                           
  5212                           	psect	text19
  5213  00554C                     __ptext19:
  5214                           	callstack 0
  5215  00554C                     _strlen:
  5216                           	callstack 21
  5217  00554C  C003  F005         	movff	strlen@s,strlen@a
  5218  005550  C004  F006         	movff	strlen@s+1,strlen@a+1
  5219  005554  EFAE  F02A         	goto	l3540
  5220  005558                     l3538:
  5221  005558  4A03               	infsnz	strlen@s^0,f,c
  5222  00555A  2A04               	incf	(strlen@s+1)^0,f,c
  5223  00555C                     l3540:
  5224  00555C  C003  FFD9         	movff	strlen@s,fsr2l
  5225  005560  C004  FFDA         	movff	strlen@s+1,fsr2h
  5226  005564  50DF               	movf	indf2,w,c
  5227  005566  A4D8               	btfss	status,2,c
  5228  005568  EFB8  F02A         	goto	u2831
  5229  00556C  EFBA  F02A         	goto	u2830
  5230  005570                     u2831:
  5231  005570  EFAC  F02A         	goto	l3538
  5232  005574                     u2830:
  5233  005574  5005               	movf	strlen@a^0,w,c
  5234  005576  5C03               	subwf	strlen@s^0,w,c
  5235  005578  6E03               	movwf	?_strlen^0,c
  5236  00557A  5006               	movf	(strlen@a+1)^0,w,c
  5237  00557C  5804               	subwfb	(strlen@s+1)^0,w,c
  5238  00557E  6E04               	movwf	(?_strlen+1)^0,c
  5239  005580  0012               	return		;funcret
  5240  005582                     __end_of_strlen:
  5241                           	callstack 0
  5242                           
  5243 ;; *************** function _fputs *****************
  5244 ;; Defined at:
  5245 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\nf_fputs.c"
  5246 ;; Parameters:    Size  Location     Type
  5247 ;;  s               2   11[COMRAM] PTR const unsigned char 
  5248 ;;		 -> dbuf(32), 
  5249 ;;  fp              2   13[COMRAM] PTR struct _IO_FILE
  5250 ;;		 -> sprintf@f(11), 
  5251 ;; Auto vars:     Size  Location     Type
  5252 ;;  i               2   16[COMRAM] int 
  5253 ;;  c               1   15[COMRAM] unsigned char 
  5254 ;; Return value:  Size  Location     Type
  5255 ;;                  2   11[COMRAM] int 
  5256 ;; Registers used:
  5257 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5258 ;; Tracked objects:
  5259 ;;		On entry : 0/0
  5260 ;;		On exit  : 0/0
  5261 ;;		Unchanged: 0/0
  5262 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5263 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5264 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5265 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5266 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5267 ;;Total ram usage:        7 bytes
  5268 ;; Hardware stack levels used: 1
  5269 ;; Hardware stack levels required when called: 4
  5270 ;; This function calls:
  5271 ;;		_fputc
  5272 ;; This function is called by:
  5273 ;;		_pad
  5274 ;; This function uses a non-reentrant model
  5275 ;;
  5276                           
  5277                           	psect	text20
  5278  005314                     __ptext20:
  5279                           	callstack 0
  5280  005314                     _fputs:
  5281                           	callstack 19
  5282  005314  0E00               	movlw	0
  5283  005316  6E12               	movwf	(fputs@i+1)^0,c
  5284  005318  0E00               	movlw	0
  5285  00531A  6E11               	movwf	fputs@i^0,c
  5286  00531C  EF9B  F029         	goto	l3534
  5287  005320                     l3530:
  5288  005320  C010  F003         	movff	fputs@c,fputc@c
  5289  005324  6A04               	clrf	(fputc@c+1)^0,c
  5290  005326  C00E  F005         	movff	fputs@fp,fputc@fp
  5291  00532A  C00F  F006         	movff	fputs@fp+1,fputc@fp+1
  5292  00532E  ECC8  F024         	call	_fputc	;wreg free
  5293  005332  4A11               	infsnz	fputs@i^0,f,c
  5294  005334  2A12               	incf	(fputs@i+1)^0,f,c
  5295  005336                     l3534:
  5296  005336  5011               	movf	fputs@i^0,w,c
  5297  005338  240C               	addwf	fputs@s^0,w,c
  5298  00533A  6ED9               	movwf	fsr2l,c
  5299  00533C  5012               	movf	(fputs@i+1)^0,w,c
  5300  00533E  200D               	addwfc	(fputs@s+1)^0,w,c
  5301  005340  6EDA               	movwf	fsr2h,c
  5302  005342  50DF               	movf	indf2,w,c
  5303  005344  6E10               	movwf	fputs@c^0,c
  5304  005346  5010               	movf	fputs@c^0,w,c
  5305  005348  A4D8               	btfss	status,2,c
  5306  00534A  EFA9  F029         	goto	u2821
  5307  00534E  EFAB  F029         	goto	u2820
  5308  005352                     u2821:
  5309  005352  EF90  F029         	goto	l3530
  5310  005356                     u2820:
  5311  005356  0012               	return		;funcret
  5312  005358                     __end_of_fputs:
  5313                           	callstack 0
  5314                           
  5315 ;; *************** function _fputc *****************
  5316 ;; Defined at:
  5317 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\nf_fputc.c"
  5318 ;; Parameters:    Size  Location     Type
  5319 ;;  c               2    2[COMRAM] int 
  5320 ;;  fp              2    4[COMRAM] PTR struct _IO_FILE
  5321 ;;		 -> sprintf@f(11), 
  5322 ;; Auto vars:     Size  Location     Type
  5323 ;;		None
  5324 ;; Return value:  Size  Location     Type
  5325 ;;                  2    2[COMRAM] int 
  5326 ;; Registers used:
  5327 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5328 ;; Tracked objects:
  5329 ;;		On entry : 0/0
  5330 ;;		On exit  : 0/0
  5331 ;;		Unchanged: 0/0
  5332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5333 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5334 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5335 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5336 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5337 ;;Total ram usage:        9 bytes
  5338 ;; Hardware stack levels used: 1
  5339 ;; Hardware stack levels required when called: 3
  5340 ;; This function calls:
  5341 ;;		_putch
  5342 ;; This function is called by:
  5343 ;;		_pad
  5344 ;;		_vfpfcnvrt
  5345 ;;		_fputs
  5346 ;; This function uses a non-reentrant model
  5347 ;;
  5348                           
  5349                           	psect	text21
  5350  004990                     __ptext21:
  5351                           	callstack 0
  5352  004990                     _fputc:
  5353                           	callstack 22
  5354  004990  5005               	movf	fputc@fp^0,w,c
  5355  004992  1006               	iorwf	(fputc@fp+1)^0,w,c
  5356  004994  B4D8               	btfsc	status,2,c
  5357  004996  EFCF  F024         	goto	u2781
  5358  00499A  EFD1  F024         	goto	u2780
  5359  00499E                     u2781:
  5360  00499E  EFDA  F024         	goto	l3518
  5361  0049A2                     u2780:
  5362  0049A2  5005               	movf	fputc@fp^0,w,c
  5363  0049A4  1006               	iorwf	(fputc@fp+1)^0,w,c
  5364  0049A6  A4D8               	btfss	status,2,c
  5365  0049A8  EFD8  F024         	goto	u2791
  5366  0049AC  EFDA  F024         	goto	u2790
  5367  0049B0                     u2791:
  5368  0049B0  EFDF  F024         	goto	l3520
  5369  0049B4                     u2790:
  5370  0049B4                     l3518:
  5371  0049B4  5003               	movf	fputc@c^0,w,c
  5372  0049B6  EC0A  F02C         	call	_putch
  5373  0049BA  EF2C  F025         	goto	l1516
  5374  0049BE                     l3520:
  5375  0049BE  EE20 F009          	lfsr	2,9
  5376  0049C2  5005               	movf	fputc@fp^0,w,c
  5377  0049C4  26D9               	addwf	fsr2l,f,c
  5378  0049C6  5006               	movf	(fputc@fp+1)^0,w,c
  5379  0049C8  22DA               	addwfc	fsr2h,f,c
  5380  0049CA  50DE               	movf	postinc2,w,c
  5381  0049CC  10DE               	iorwf	postinc2,w,c
  5382  0049CE  B4D8               	btfsc	status,2,c
  5383  0049D0  EFEC  F024         	goto	u2801
  5384  0049D4  EFEE  F024         	goto	u2800
  5385  0049D8                     u2801:
  5386  0049D8  EF09  F025         	goto	l3524
  5387  0049DC                     u2800:
  5388  0049DC  EE20 F009          	lfsr	2,9
  5389  0049E0  5005               	movf	fputc@fp^0,w,c
  5390  0049E2  26D9               	addwf	fsr2l,f,c
  5391  0049E4  5006               	movf	(fputc@fp+1)^0,w,c
  5392  0049E6  22DA               	addwfc	fsr2h,f,c
  5393  0049E8  EE10 F003          	lfsr	1,3
  5394  0049EC  5005               	movf	fputc@fp^0,w,c
  5395  0049EE  26E1               	addwf	fsr1l,f,c
  5396  0049F0  5006               	movf	(fputc@fp+1)^0,w,c
  5397  0049F2  22E2               	addwfc	fsr1h,f,c
  5398  0049F4  50DE               	movf	postinc2,w,c
  5399  0049F6  5CE6               	subwf	postinc1,w,c
  5400  0049F8  50E6               	movf	postinc1,w,c
  5401  0049FA  0A80               	xorlw	128
  5402  0049FC  6E0B               	movwf	(??_fputc+4)^0,c
  5403  0049FE  50DE               	movf	postinc2,w,c
  5404  004A00  0A80               	xorlw	128
  5405  004A02  580B               	subwfb	(??_fputc+4)^0,w,c
  5406  004A04  B0D8               	btfsc	status,0,c
  5407  004A06  EF07  F025         	goto	u2811
  5408  004A0A  EF09  F025         	goto	u2810
  5409  004A0E                     u2811:
  5410  004A0E  EF2C  F025         	goto	l1516
  5411  004A12                     u2810:
  5412  004A12                     l3524:
  5413  004A12  EE20 F003          	lfsr	2,3
  5414  004A16  5005               	movf	fputc@fp^0,w,c
  5415  004A18  26D9               	addwf	fsr2l,f,c
  5416  004A1A  5006               	movf	(fputc@fp+1)^0,w,c
  5417  004A1C  22DA               	addwfc	fsr2h,f,c
  5418  004A1E  CFDE F007          	movff	postinc2,??_fputc
  5419  004A22  CFDD F008          	movff	postdec2,??_fputc+1
  5420  004A26  C005  FFD9         	movff	fputc@fp,fsr2l
  5421  004A2A  C006  FFDA         	movff	fputc@fp+1,fsr2h
  5422  004A2E  CFDE F009          	movff	postinc2,??_fputc+2
  5423  004A32  CFDD F00A          	movff	postdec2,??_fputc+3
  5424  004A36  5007               	movf	??_fputc^0,w,c
  5425  004A38  2409               	addwf	(??_fputc+2)^0,w,c
  5426  004A3A  6ED9               	movwf	fsr2l,c
  5427  004A3C  5008               	movf	(??_fputc+1)^0,w,c
  5428  004A3E  200A               	addwfc	(??_fputc+3)^0,w,c
  5429  004A40  6EDA               	movwf	fsr2h,c
  5430  004A42  C003  FFDF         	movff	fputc@c,indf2
  5431  004A46  EE20 F003          	lfsr	2,3
  5432  004A4A  5005               	movf	fputc@fp^0,w,c
  5433  004A4C  26D9               	addwf	fsr2l,f,c
  5434  004A4E  5006               	movf	(fputc@fp+1)^0,w,c
  5435  004A50  22DA               	addwfc	fsr2h,f,c
  5436  004A52  2ADE               	incf	postinc2,f,c
  5437  004A54  0E00               	movlw	0
  5438  004A56  22DD               	addwfc	postdec2,f,c
  5439  004A58                     l1516:
  5440  004A58  0012               	return		;funcret
  5441  004A5A                     __end_of_fputc:
  5442                           	callstack 0
  5443                           
  5444 ;; *************** function _putch *****************
  5445 ;; Defined at:
  5446 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\putch.c"
  5447 ;; Parameters:    Size  Location     Type
  5448 ;;  c               1    wreg     unsigned char 
  5449 ;; Auto vars:     Size  Location     Type
  5450 ;;  c               1    0[COMRAM] unsigned char 
  5451 ;; Return value:  Size  Location     Type
  5452 ;;                  1    wreg      void 
  5453 ;; Registers used:
  5454 ;;		wreg
  5455 ;; Tracked objects:
  5456 ;;		On entry : 0/0
  5457 ;;		On exit  : 0/0
  5458 ;;		Unchanged: 0/0
  5459 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5460 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5461 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5462 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5463 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5464 ;;Total ram usage:        0 bytes
  5465 ;; Hardware stack levels used: 1
  5466 ;; Hardware stack levels required when called: 2
  5467 ;; This function calls:
  5468 ;;		Nothing
  5469 ;; This function is called by:
  5470 ;;		_fputc
  5471 ;; This function uses a non-reentrant model
  5472 ;;
  5473                           
  5474                           	psect	text22
  5475  005814                     __ptext22:
  5476                           	callstack 0
  5477  005814                     _putch:
  5478                           	callstack 22
  5479  005814  0012               	return		;funcret
  5480  005816                     __end_of_putch:
  5481                           	callstack 0
  5482                           
  5483 ;; *************** function _abs *****************
  5484 ;; Defined at:
  5485 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\abs.c"
  5486 ;; Parameters:    Size  Location     Type
  5487 ;;  a               2   20[COMRAM] int 
  5488 ;; Auto vars:     Size  Location     Type
  5489 ;;		None
  5490 ;; Return value:  Size  Location     Type
  5491 ;;                  2   20[COMRAM] int 
  5492 ;; Registers used:
  5493 ;;		wreg, status,2, status,0
  5494 ;; Tracked objects:
  5495 ;;		On entry : 0/0
  5496 ;;		On exit  : 0/0
  5497 ;;		Unchanged: 0/0
  5498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5499 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5500 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5501 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5502 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5503 ;;Total ram usage:        4 bytes
  5504 ;; Hardware stack levels used: 1
  5505 ;; Hardware stack levels required when called: 2
  5506 ;; This function calls:
  5507 ;;		Nothing
  5508 ;; This function is called by:
  5509 ;;		_dtoa
  5510 ;; This function uses a non-reentrant model
  5511 ;;
  5512                           
  5513                           	psect	text23
  5514  005460                     __ptext23:
  5515                           	callstack 0
  5516  005460                     _abs:
  5517                           	callstack 22
  5518  005460  BE16               	btfsc	(abs@a+1)^0,7,c
  5519  005462  EF3D  F02A         	goto	u3070
  5520  005466  5016               	movf	(abs@a+1)^0,w,c
  5521  005468  E106               	bnz	u3071
  5522  00546A  0415               	decf	abs@a^0,w,c
  5523  00546C  B0D8               	btfsc	status,0,c
  5524  00546E  EF3B  F02A         	goto	u3071
  5525  005472  EF3D  F02A         	goto	u3070
  5526  005476                     u3071:
  5527  005476  EF4B  F02A         	goto	l1501
  5528  00547A                     u3070:
  5529  00547A  C015  F017         	movff	abs@a,??_abs
  5530  00547E  C016  F018         	movff	abs@a+1,??_abs+1
  5531  005482  1E17               	comf	??_abs^0,f,c
  5532  005484  1E18               	comf	(??_abs+1)^0,f,c
  5533  005486  4A17               	infsnz	??_abs^0,f,c
  5534  005488  2A18               	incf	(??_abs+1)^0,f,c
  5535  00548A  C017  F015         	movff	??_abs,?_abs
  5536  00548E  C018  F016         	movff	??_abs+1,?_abs+1
  5537  005492  EF4F  F02A         	goto	l1504
  5538  005496                     l1501:
  5539  005496  C015  F015         	movff	abs@a,?_abs
  5540  00549A  C016  F016         	movff	abs@a+1,?_abs+1
  5541  00549E                     l1504:
  5542  00549E  0012               	return		;funcret
  5543  0054A0                     __end_of_abs:
  5544                           	callstack 0
  5545                           
  5546 ;; *************** function ___aomod *****************
  5547 ;; Defined at:
  5548 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\aomod.c"
  5549 ;; Parameters:    Size  Location     Type
  5550 ;;  dividend        8    2[COMRAM] long long 
  5551 ;;  divisor         8   10[COMRAM] long long 
  5552 ;; Auto vars:     Size  Location     Type
  5553 ;;  sign            1   19[COMRAM] unsigned char 
  5554 ;;  counter         1   18[COMRAM] unsigned char 
  5555 ;; Return value:  Size  Location     Type
  5556 ;;                  8    2[COMRAM] long long 
  5557 ;; Registers used:
  5558 ;;		wreg, status,2, status,0
  5559 ;; Tracked objects:
  5560 ;;		On entry : 0/0
  5561 ;;		On exit  : 0/0
  5562 ;;		Unchanged: 0/0
  5563 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5564 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5565 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5566 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5567 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5568 ;;Total ram usage:       18 bytes
  5569 ;; Hardware stack levels used: 1
  5570 ;; Hardware stack levels required when called: 2
  5571 ;; This function calls:
  5572 ;;		Nothing
  5573 ;; This function is called by:
  5574 ;;		_dtoa
  5575 ;; This function uses a non-reentrant model
  5576 ;;
  5577                           
  5578                           	psect	text24
  5579  004426                     __ptext24:
  5580                           	callstack 0
  5581  004426                     ___aomod:
  5582                           	callstack 22
  5583  004426  0E00               	movlw	0
  5584  004428  6E14               	movwf	___aomod@sign^0,c
  5585  00442A  BE0A               	btfsc	(___aomod@dividend+7)^0,7,c
  5586  00442C  EF1C  F022         	goto	u2910
  5587  004430  EF1A  F022         	goto	u2911
  5588  004434                     u2911:
  5589  004434  EF2E  F022         	goto	l3604
  5590  004438                     u2910:
  5591  004438  1E0A               	comf	(___aomod@dividend+7)^0,f,c
  5592  00443A  1E09               	comf	(___aomod@dividend+6)^0,f,c
  5593  00443C  1E08               	comf	(___aomod@dividend+5)^0,f,c
  5594  00443E  1E07               	comf	(___aomod@dividend+4)^0,f,c
  5595  004440  1E06               	comf	(___aomod@dividend+3)^0,f,c
  5596  004442  1E05               	comf	(___aomod@dividend+2)^0,f,c
  5597  004444  1E04               	comf	(___aomod@dividend+1)^0,f,c
  5598  004446  6C03               	negf	___aomod@dividend^0,c
  5599  004448  0E00               	movlw	0
  5600  00444A  2204               	addwfc	(___aomod@dividend+1)^0,f,c
  5601  00444C  2205               	addwfc	(___aomod@dividend+2)^0,f,c
  5602  00444E  2206               	addwfc	(___aomod@dividend+3)^0,f,c
  5603  004450  2207               	addwfc	(___aomod@dividend+4)^0,f,c
  5604  004452  2208               	addwfc	(___aomod@dividend+5)^0,f,c
  5605  004454  2209               	addwfc	(___aomod@dividend+6)^0,f,c
  5606  004456  220A               	addwfc	(___aomod@dividend+7)^0,f,c
  5607  004458  0E01               	movlw	1
  5608  00445A  6E14               	movwf	___aomod@sign^0,c
  5609  00445C                     l3604:
  5610  00445C  BE12               	btfsc	(___aomod@divisor+7)^0,7,c
  5611  00445E  EF35  F022         	goto	u2920
  5612  004462  EF33  F022         	goto	u2921
  5613  004466                     u2921:
  5614  004466  EF45  F022         	goto	l3608
  5615  00446A                     u2920:
  5616  00446A  1E12               	comf	(___aomod@divisor+7)^0,f,c
  5617  00446C  1E11               	comf	(___aomod@divisor+6)^0,f,c
  5618  00446E  1E10               	comf	(___aomod@divisor+5)^0,f,c
  5619  004470  1E0F               	comf	(___aomod@divisor+4)^0,f,c
  5620  004472  1E0E               	comf	(___aomod@divisor+3)^0,f,c
  5621  004474  1E0D               	comf	(___aomod@divisor+2)^0,f,c
  5622  004476  1E0C               	comf	(___aomod@divisor+1)^0,f,c
  5623  004478  6C0B               	negf	___aomod@divisor^0,c
  5624  00447A  0E00               	movlw	0
  5625  00447C  220C               	addwfc	(___aomod@divisor+1)^0,f,c
  5626  00447E  220D               	addwfc	(___aomod@divisor+2)^0,f,c
  5627  004480  220E               	addwfc	(___aomod@divisor+3)^0,f,c
  5628  004482  220F               	addwfc	(___aomod@divisor+4)^0,f,c
  5629  004484  2210               	addwfc	(___aomod@divisor+5)^0,f,c
  5630  004486  2211               	addwfc	(___aomod@divisor+6)^0,f,c
  5631  004488  2212               	addwfc	(___aomod@divisor+7)^0,f,c
  5632  00448A                     l3608:
  5633  00448A  500B               	movf	___aomod@divisor^0,w,c
  5634  00448C  100C               	iorwf	(___aomod@divisor+1)^0,w,c
  5635  00448E  100D               	iorwf	(___aomod@divisor+2)^0,w,c
  5636  004490  100E               	iorwf	(___aomod@divisor+3)^0,w,c
  5637  004492  100F               	iorwf	(___aomod@divisor+4)^0,w,c
  5638  004494  1010               	iorwf	(___aomod@divisor+5)^0,w,c
  5639  004496  1011               	iorwf	(___aomod@divisor+6)^0,w,c
  5640  004498  1012               	iorwf	(___aomod@divisor+7)^0,w,c
  5641  00449A  B4D8               	btfsc	status,2,c
  5642  00449C  EF52  F022         	goto	u2931
  5643  0044A0  EF54  F022         	goto	u2930
  5644  0044A4                     u2931:
  5645  0044A4  EF9C  F022         	goto	l3624
  5646  0044A8                     u2930:
  5647  0044A8  0E01               	movlw	1
  5648  0044AA  6E13               	movwf	___aomod@counter^0,c
  5649  0044AC  EF62  F022         	goto	l3614
  5650  0044B0                     l3612:
  5651  0044B0  90D8               	bcf	status,0,c
  5652  0044B2  360B               	rlcf	___aomod@divisor^0,f,c
  5653  0044B4  360C               	rlcf	(___aomod@divisor+1)^0,f,c
  5654  0044B6  360D               	rlcf	(___aomod@divisor+2)^0,f,c
  5655  0044B8  360E               	rlcf	(___aomod@divisor+3)^0,f,c
  5656  0044BA  360F               	rlcf	(___aomod@divisor+4)^0,f,c
  5657  0044BC  3610               	rlcf	(___aomod@divisor+5)^0,f,c
  5658  0044BE  3611               	rlcf	(___aomod@divisor+6)^0,f,c
  5659  0044C0  3612               	rlcf	(___aomod@divisor+7)^0,f,c
  5660  0044C2  2A13               	incf	___aomod@counter^0,f,c
  5661  0044C4                     l3614:
  5662  0044C4  AE12               	btfss	(___aomod@divisor+7)^0,7,c
  5663  0044C6  EF67  F022         	goto	u2941
  5664  0044CA  EF69  F022         	goto	u2940
  5665  0044CE                     u2941:
  5666  0044CE  EF58  F022         	goto	l3612
  5667  0044D2                     u2940:
  5668  0044D2                     l3616:
  5669  0044D2  500B               	movf	___aomod@divisor^0,w,c
  5670  0044D4  5C03               	subwf	___aomod@dividend^0,w,c
  5671  0044D6  500C               	movf	(___aomod@divisor+1)^0,w,c
  5672  0044D8  5804               	subwfb	(___aomod@dividend+1)^0,w,c
  5673  0044DA  500D               	movf	(___aomod@divisor+2)^0,w,c
  5674  0044DC  5805               	subwfb	(___aomod@dividend+2)^0,w,c
  5675  0044DE  500E               	movf	(___aomod@divisor+3)^0,w,c
  5676  0044E0  5806               	subwfb	(___aomod@dividend+3)^0,w,c
  5677  0044E2  500F               	movf	(___aomod@divisor+4)^0,w,c
  5678  0044E4  5807               	subwfb	(___aomod@dividend+4)^0,w,c
  5679  0044E6  5010               	movf	(___aomod@divisor+5)^0,w,c
  5680  0044E8  5808               	subwfb	(___aomod@dividend+5)^0,w,c
  5681  0044EA  5011               	movf	(___aomod@divisor+6)^0,w,c
  5682  0044EC  5809               	subwfb	(___aomod@dividend+6)^0,w,c
  5683  0044EE  5012               	movf	(___aomod@divisor+7)^0,w,c
  5684  0044F0  580A               	subwfb	(___aomod@dividend+7)^0,w,c
  5685  0044F2  A0D8               	btfss	status,0,c
  5686  0044F4  EF7E  F022         	goto	u2951
  5687  0044F8  EF80  F022         	goto	u2950
  5688  0044FC                     u2951:
  5689  0044FC  EF90  F022         	goto	l3620
  5690  004500                     u2950:
  5691  004500  500B               	movf	___aomod@divisor^0,w,c
  5692  004502  5E03               	subwf	___aomod@dividend^0,f,c
  5693  004504  500C               	movf	(___aomod@divisor+1)^0,w,c
  5694  004506  5A04               	subwfb	(___aomod@dividend+1)^0,f,c
  5695  004508  500D               	movf	(___aomod@divisor+2)^0,w,c
  5696  00450A  5A05               	subwfb	(___aomod@dividend+2)^0,f,c
  5697  00450C  500E               	movf	(___aomod@divisor+3)^0,w,c
  5698  00450E  5A06               	subwfb	(___aomod@dividend+3)^0,f,c
  5699  004510  500F               	movf	(___aomod@divisor+4)^0,w,c
  5700  004512  5A07               	subwfb	(___aomod@dividend+4)^0,f,c
  5701  004514  5010               	movf	(___aomod@divisor+5)^0,w,c
  5702  004516  5A08               	subwfb	(___aomod@dividend+5)^0,f,c
  5703  004518  5011               	movf	(___aomod@divisor+6)^0,w,c
  5704  00451A  5A09               	subwfb	(___aomod@dividend+6)^0,f,c
  5705  00451C  5012               	movf	(___aomod@divisor+7)^0,w,c
  5706  00451E  5A0A               	subwfb	(___aomod@dividend+7)^0,f,c
  5707  004520                     l3620:
  5708  004520  90D8               	bcf	status,0,c
  5709  004522  3212               	rrcf	(___aomod@divisor+7)^0,f,c
  5710  004524  3211               	rrcf	(___aomod@divisor+6)^0,f,c
  5711  004526  3210               	rrcf	(___aomod@divisor+5)^0,f,c
  5712  004528  320F               	rrcf	(___aomod@divisor+4)^0,f,c
  5713  00452A  320E               	rrcf	(___aomod@divisor+3)^0,f,c
  5714  00452C  320D               	rrcf	(___aomod@divisor+2)^0,f,c
  5715  00452E  320C               	rrcf	(___aomod@divisor+1)^0,f,c
  5716  004530  320B               	rrcf	___aomod@divisor^0,f,c
  5717  004532  2E13               	decfsz	___aomod@counter^0,f,c
  5718  004534  EF69  F022         	goto	l3616
  5719  004538                     l3624:
  5720  004538  5014               	movf	___aomod@sign^0,w,c
  5721  00453A  B4D8               	btfsc	status,2,c
  5722  00453C  EFA2  F022         	goto	u2961
  5723  004540  EFA4  F022         	goto	u2960
  5724  004544                     u2961:
  5725  004544  EFB4  F022         	goto	l3628
  5726  004548                     u2960:
  5727  004548  1E0A               	comf	(___aomod@dividend+7)^0,f,c
  5728  00454A  1E09               	comf	(___aomod@dividend+6)^0,f,c
  5729  00454C  1E08               	comf	(___aomod@dividend+5)^0,f,c
  5730  00454E  1E07               	comf	(___aomod@dividend+4)^0,f,c
  5731  004550  1E06               	comf	(___aomod@dividend+3)^0,f,c
  5732  004552  1E05               	comf	(___aomod@dividend+2)^0,f,c
  5733  004554  1E04               	comf	(___aomod@dividend+1)^0,f,c
  5734  004556  6C03               	negf	___aomod@dividend^0,c
  5735  004558  0E00               	movlw	0
  5736  00455A  2204               	addwfc	(___aomod@dividend+1)^0,f,c
  5737  00455C  2205               	addwfc	(___aomod@dividend+2)^0,f,c
  5738  00455E  2206               	addwfc	(___aomod@dividend+3)^0,f,c
  5739  004560  2207               	addwfc	(___aomod@dividend+4)^0,f,c
  5740  004562  2208               	addwfc	(___aomod@dividend+5)^0,f,c
  5741  004564  2209               	addwfc	(___aomod@dividend+6)^0,f,c
  5742  004566  220A               	addwfc	(___aomod@dividend+7)^0,f,c
  5743  004568                     l3628:
  5744  004568  C003  F003         	movff	___aomod@dividend,?___aomod
  5745  00456C  C004  F004         	movff	___aomod@dividend+1,?___aomod+1
  5746  004570  C005  F005         	movff	___aomod@dividend+2,?___aomod+2
  5747  004574  C006  F006         	movff	___aomod@dividend+3,?___aomod+3
  5748  004578  C007  F007         	movff	___aomod@dividend+4,?___aomod+4
  5749  00457C  C008  F008         	movff	___aomod@dividend+5,?___aomod+5
  5750  004580  C009  F009         	movff	___aomod@dividend+6,?___aomod+6
  5751  004584  C00A  F00A         	movff	___aomod@dividend+7,?___aomod+7
  5752  004588  0012               	return		;funcret
  5753  00458A                     __end_of___aomod:
  5754                           	callstack 0
  5755                           
  5756 ;; *************** function ___aodiv *****************
  5757 ;; Defined at:
  5758 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\aodiv.c"
  5759 ;; Parameters:    Size  Location     Type
  5760 ;;  dividend        8    2[COMRAM] long long 
  5761 ;;  divisor         8   10[COMRAM] long long 
  5762 ;; Auto vars:     Size  Location     Type
  5763 ;;  quotient        8   20[COMRAM] long long 
  5764 ;;  sign            1   19[COMRAM] unsigned char 
  5765 ;;  counter         1   18[COMRAM] unsigned char 
  5766 ;; Return value:  Size  Location     Type
  5767 ;;                  8    2[COMRAM] long long 
  5768 ;; Registers used:
  5769 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5770 ;; Tracked objects:
  5771 ;;		On entry : 0/0
  5772 ;;		On exit  : 0/0
  5773 ;;		Unchanged: 0/0
  5774 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5775 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5776 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5777 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5778 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5779 ;;Total ram usage:       26 bytes
  5780 ;; Hardware stack levels used: 1
  5781 ;; Hardware stack levels required when called: 2
  5782 ;; This function calls:
  5783 ;;		Nothing
  5784 ;; This function is called by:
  5785 ;;		_dtoa
  5786 ;; This function uses a non-reentrant model
  5787 ;;
  5788                           
  5789                           	psect	text25
  5790  003F9E                     __ptext25:
  5791                           	callstack 0
  5792  003F9E                     ___aodiv:
  5793                           	callstack 22
  5794  003F9E  0E00               	movlw	0
  5795  003FA0  6E14               	movwf	___aodiv@sign^0,c
  5796  003FA2  BE12               	btfsc	(___aodiv@divisor+7)^0,7,c
  5797  003FA4  EFD8  F01F         	goto	u2840
  5798  003FA8  EFD6  F01F         	goto	u2841
  5799  003FAC                     u2841:
  5800  003FAC  EFEA  F01F         	goto	l3560
  5801  003FB0                     u2840:
  5802  003FB0  1E12               	comf	(___aodiv@divisor+7)^0,f,c
  5803  003FB2  1E11               	comf	(___aodiv@divisor+6)^0,f,c
  5804  003FB4  1E10               	comf	(___aodiv@divisor+5)^0,f,c
  5805  003FB6  1E0F               	comf	(___aodiv@divisor+4)^0,f,c
  5806  003FB8  1E0E               	comf	(___aodiv@divisor+3)^0,f,c
  5807  003FBA  1E0D               	comf	(___aodiv@divisor+2)^0,f,c
  5808  003FBC  1E0C               	comf	(___aodiv@divisor+1)^0,f,c
  5809  003FBE  6C0B               	negf	___aodiv@divisor^0,c
  5810  003FC0  0E00               	movlw	0
  5811  003FC2  220C               	addwfc	(___aodiv@divisor+1)^0,f,c
  5812  003FC4  220D               	addwfc	(___aodiv@divisor+2)^0,f,c
  5813  003FC6  220E               	addwfc	(___aodiv@divisor+3)^0,f,c
  5814  003FC8  220F               	addwfc	(___aodiv@divisor+4)^0,f,c
  5815  003FCA  2210               	addwfc	(___aodiv@divisor+5)^0,f,c
  5816  003FCC  2211               	addwfc	(___aodiv@divisor+6)^0,f,c
  5817  003FCE  2212               	addwfc	(___aodiv@divisor+7)^0,f,c
  5818  003FD0  0E01               	movlw	1
  5819  003FD2  6E14               	movwf	___aodiv@sign^0,c
  5820  003FD4                     l3560:
  5821  003FD4  BE0A               	btfsc	(___aodiv@dividend+7)^0,7,c
  5822  003FD6  EFF1  F01F         	goto	u2850
  5823  003FDA  EFEF  F01F         	goto	u2851
  5824  003FDE                     u2851:
  5825  003FDE  EF03  F020         	goto	l3566
  5826  003FE2                     u2850:
  5827  003FE2  1E0A               	comf	(___aodiv@dividend+7)^0,f,c
  5828  003FE4  1E09               	comf	(___aodiv@dividend+6)^0,f,c
  5829  003FE6  1E08               	comf	(___aodiv@dividend+5)^0,f,c
  5830  003FE8  1E07               	comf	(___aodiv@dividend+4)^0,f,c
  5831  003FEA  1E06               	comf	(___aodiv@dividend+3)^0,f,c
  5832  003FEC  1E05               	comf	(___aodiv@dividend+2)^0,f,c
  5833  003FEE  1E04               	comf	(___aodiv@dividend+1)^0,f,c
  5834  003FF0  6C03               	negf	___aodiv@dividend^0,c
  5835  003FF2  0E00               	movlw	0
  5836  003FF4  2204               	addwfc	(___aodiv@dividend+1)^0,f,c
  5837  003FF6  2205               	addwfc	(___aodiv@dividend+2)^0,f,c
  5838  003FF8  2206               	addwfc	(___aodiv@dividend+3)^0,f,c
  5839  003FFA  2207               	addwfc	(___aodiv@dividend+4)^0,f,c
  5840  003FFC  2208               	addwfc	(___aodiv@dividend+5)^0,f,c
  5841  003FFE  2209               	addwfc	(___aodiv@dividend+6)^0,f,c
  5842  004000  220A               	addwfc	(___aodiv@dividend+7)^0,f,c
  5843  004002  0E01               	movlw	1
  5844  004004  1A14               	xorwf	___aodiv@sign^0,f,c
  5845  004006                     l3566:
  5846  004006  EE20  F015         	lfsr	2,___aodiv@quotient
  5847  00400A  0E07               	movlw	7
  5848  00400C                     u2861:
  5849  00400C  6ADE               	clrf	postinc2,c
  5850  00400E  06E8               	decf	wreg,f,c
  5851  004010  E2FD               	bc	u2861
  5852  004012  500B               	movf	___aodiv@divisor^0,w,c
  5853  004014  100C               	iorwf	(___aodiv@divisor+1)^0,w,c
  5854  004016  100D               	iorwf	(___aodiv@divisor+2)^0,w,c
  5855  004018  100E               	iorwf	(___aodiv@divisor+3)^0,w,c
  5856  00401A  100F               	iorwf	(___aodiv@divisor+4)^0,w,c
  5857  00401C  1010               	iorwf	(___aodiv@divisor+5)^0,w,c
  5858  00401E  1011               	iorwf	(___aodiv@divisor+6)^0,w,c
  5859  004020  1012               	iorwf	(___aodiv@divisor+7)^0,w,c
  5860  004022  B4D8               	btfsc	status,2,c
  5861  004024  EF16  F020         	goto	u2871
  5862  004028  EF18  F020         	goto	u2870
  5863  00402C                     u2871:
  5864  00402C  EF6A  F020         	goto	l3588
  5865  004030                     u2870:
  5866  004030  0E01               	movlw	1
  5867  004032  6E13               	movwf	___aodiv@counter^0,c
  5868  004034  EF26  F020         	goto	l3574
  5869  004038                     l3572:
  5870  004038  90D8               	bcf	status,0,c
  5871  00403A  360B               	rlcf	___aodiv@divisor^0,f,c
  5872  00403C  360C               	rlcf	(___aodiv@divisor+1)^0,f,c
  5873  00403E  360D               	rlcf	(___aodiv@divisor+2)^0,f,c
  5874  004040  360E               	rlcf	(___aodiv@divisor+3)^0,f,c
  5875  004042  360F               	rlcf	(___aodiv@divisor+4)^0,f,c
  5876  004044  3610               	rlcf	(___aodiv@divisor+5)^0,f,c
  5877  004046  3611               	rlcf	(___aodiv@divisor+6)^0,f,c
  5878  004048  3612               	rlcf	(___aodiv@divisor+7)^0,f,c
  5879  00404A  2A13               	incf	___aodiv@counter^0,f,c
  5880  00404C                     l3574:
  5881  00404C  AE12               	btfss	(___aodiv@divisor+7)^0,7,c
  5882  00404E  EF2B  F020         	goto	u2881
  5883  004052  EF2D  F020         	goto	u2880
  5884  004056                     u2881:
  5885  004056  EF1C  F020         	goto	l3572
  5886  00405A                     u2880:
  5887  00405A                     l3576:
  5888  00405A  90D8               	bcf	status,0,c
  5889  00405C  3615               	rlcf	___aodiv@quotient^0,f,c
  5890  00405E  3616               	rlcf	(___aodiv@quotient+1)^0,f,c
  5891  004060  3617               	rlcf	(___aodiv@quotient+2)^0,f,c
  5892  004062  3618               	rlcf	(___aodiv@quotient+3)^0,f,c
  5893  004064  3619               	rlcf	(___aodiv@quotient+4)^0,f,c
  5894  004066  361A               	rlcf	(___aodiv@quotient+5)^0,f,c
  5895  004068  361B               	rlcf	(___aodiv@quotient+6)^0,f,c
  5896  00406A  361C               	rlcf	(___aodiv@quotient+7)^0,f,c
  5897  00406C  500B               	movf	___aodiv@divisor^0,w,c
  5898  00406E  5C03               	subwf	___aodiv@dividend^0,w,c
  5899  004070  500C               	movf	(___aodiv@divisor+1)^0,w,c
  5900  004072  5804               	subwfb	(___aodiv@dividend+1)^0,w,c
  5901  004074  500D               	movf	(___aodiv@divisor+2)^0,w,c
  5902  004076  5805               	subwfb	(___aodiv@dividend+2)^0,w,c
  5903  004078  500E               	movf	(___aodiv@divisor+3)^0,w,c
  5904  00407A  5806               	subwfb	(___aodiv@dividend+3)^0,w,c
  5905  00407C  500F               	movf	(___aodiv@divisor+4)^0,w,c
  5906  00407E  5807               	subwfb	(___aodiv@dividend+4)^0,w,c
  5907  004080  5010               	movf	(___aodiv@divisor+5)^0,w,c
  5908  004082  5808               	subwfb	(___aodiv@dividend+5)^0,w,c
  5909  004084  5011               	movf	(___aodiv@divisor+6)^0,w,c
  5910  004086  5809               	subwfb	(___aodiv@dividend+6)^0,w,c
  5911  004088  5012               	movf	(___aodiv@divisor+7)^0,w,c
  5912  00408A  580A               	subwfb	(___aodiv@dividend+7)^0,w,c
  5913  00408C  A0D8               	btfss	status,0,c
  5914  00408E  EF4B  F020         	goto	u2891
  5915  004092  EF4D  F020         	goto	u2890
  5916  004096                     u2891:
  5917  004096  EF5E  F020         	goto	l3584
  5918  00409A                     u2890:
  5919  00409A  500B               	movf	___aodiv@divisor^0,w,c
  5920  00409C  5E03               	subwf	___aodiv@dividend^0,f,c
  5921  00409E  500C               	movf	(___aodiv@divisor+1)^0,w,c
  5922  0040A0  5A04               	subwfb	(___aodiv@dividend+1)^0,f,c
  5923  0040A2  500D               	movf	(___aodiv@divisor+2)^0,w,c
  5924  0040A4  5A05               	subwfb	(___aodiv@dividend+2)^0,f,c
  5925  0040A6  500E               	movf	(___aodiv@divisor+3)^0,w,c
  5926  0040A8  5A06               	subwfb	(___aodiv@dividend+3)^0,f,c
  5927  0040AA  500F               	movf	(___aodiv@divisor+4)^0,w,c
  5928  0040AC  5A07               	subwfb	(___aodiv@dividend+4)^0,f,c
  5929  0040AE  5010               	movf	(___aodiv@divisor+5)^0,w,c
  5930  0040B0  5A08               	subwfb	(___aodiv@dividend+5)^0,f,c
  5931  0040B2  5011               	movf	(___aodiv@divisor+6)^0,w,c
  5932  0040B4  5A09               	subwfb	(___aodiv@dividend+6)^0,f,c
  5933  0040B6  5012               	movf	(___aodiv@divisor+7)^0,w,c
  5934  0040B8  5A0A               	subwfb	(___aodiv@dividend+7)^0,f,c
  5935  0040BA  8015               	bsf	___aodiv@quotient^0,0,c
  5936  0040BC                     l3584:
  5937  0040BC  90D8               	bcf	status,0,c
  5938  0040BE  3212               	rrcf	(___aodiv@divisor+7)^0,f,c
  5939  0040C0  3211               	rrcf	(___aodiv@divisor+6)^0,f,c
  5940  0040C2  3210               	rrcf	(___aodiv@divisor+5)^0,f,c
  5941  0040C4  320F               	rrcf	(___aodiv@divisor+4)^0,f,c
  5942  0040C6  320E               	rrcf	(___aodiv@divisor+3)^0,f,c
  5943  0040C8  320D               	rrcf	(___aodiv@divisor+2)^0,f,c
  5944  0040CA  320C               	rrcf	(___aodiv@divisor+1)^0,f,c
  5945  0040CC  320B               	rrcf	___aodiv@divisor^0,f,c
  5946  0040CE  2E13               	decfsz	___aodiv@counter^0,f,c
  5947  0040D0  EF2D  F020         	goto	l3576
  5948  0040D4                     l3588:
  5949  0040D4  5014               	movf	___aodiv@sign^0,w,c
  5950  0040D6  B4D8               	btfsc	status,2,c
  5951  0040D8  EF70  F020         	goto	u2901
  5952  0040DC  EF72  F020         	goto	u2900
  5953  0040E0                     u2901:
  5954  0040E0  EF82  F020         	goto	l3592
  5955  0040E4                     u2900:
  5956  0040E4  1E1C               	comf	(___aodiv@quotient+7)^0,f,c
  5957  0040E6  1E1B               	comf	(___aodiv@quotient+6)^0,f,c
  5958  0040E8  1E1A               	comf	(___aodiv@quotient+5)^0,f,c
  5959  0040EA  1E19               	comf	(___aodiv@quotient+4)^0,f,c
  5960  0040EC  1E18               	comf	(___aodiv@quotient+3)^0,f,c
  5961  0040EE  1E17               	comf	(___aodiv@quotient+2)^0,f,c
  5962  0040F0  1E16               	comf	(___aodiv@quotient+1)^0,f,c
  5963  0040F2  6C15               	negf	___aodiv@quotient^0,c
  5964  0040F4  0E00               	movlw	0
  5965  0040F6  2216               	addwfc	(___aodiv@quotient+1)^0,f,c
  5966  0040F8  2217               	addwfc	(___aodiv@quotient+2)^0,f,c
  5967  0040FA  2218               	addwfc	(___aodiv@quotient+3)^0,f,c
  5968  0040FC  2219               	addwfc	(___aodiv@quotient+4)^0,f,c
  5969  0040FE  221A               	addwfc	(___aodiv@quotient+5)^0,f,c
  5970  004100  221B               	addwfc	(___aodiv@quotient+6)^0,f,c
  5971  004102  221C               	addwfc	(___aodiv@quotient+7)^0,f,c
  5972  004104                     l3592:
  5973  004104  C015  F003         	movff	___aodiv@quotient,?___aodiv
  5974  004108  C016  F004         	movff	___aodiv@quotient+1,?___aodiv+1
  5975  00410C  C017  F005         	movff	___aodiv@quotient+2,?___aodiv+2
  5976  004110  C018  F006         	movff	___aodiv@quotient+3,?___aodiv+3
  5977  004114  C019  F007         	movff	___aodiv@quotient+4,?___aodiv+4
  5978  004118  C01A  F008         	movff	___aodiv@quotient+5,?___aodiv+5
  5979  00411C  C01B  F009         	movff	___aodiv@quotient+6,?___aodiv+6
  5980  004120  C01C  F00A         	movff	___aodiv@quotient+7,?___aodiv+7
  5981  004124  0012               	return		;funcret
  5982  004126                     __end_of___aodiv:
  5983                           	callstack 0
  5984                           
  5985 ;; *************** function _sendStringSerial4 *****************
  5986 ;; Defined at:
  5987 ;;		line 36 in file "serial.c"
  5988 ;; Parameters:    Size  Location     Type
  5989 ;;  string          2    3[COMRAM] PTR unsigned char 
  5990 ;;		 -> color_predict@buf(100), check_color_reading@buf(100), color_display@buf(100), 
  5991 ;; Auto vars:     Size  Location     Type
  5992 ;;		None
  5993 ;; Return value:  Size  Location     Type
  5994 ;;                  1    wreg      void 
  5995 ;; Registers used:
  5996 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5997 ;; Tracked objects:
  5998 ;;		On entry : 0/0
  5999 ;;		On exit  : 0/0
  6000 ;;		Unchanged: 0/0
  6001 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6002 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6003 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6004 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6005 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6006 ;;Total ram usage:        2 bytes
  6007 ;; Hardware stack levels used: 1
  6008 ;; Hardware stack levels required when called: 3
  6009 ;; This function calls:
  6010 ;;		_sendCharSerial4
  6011 ;; This function is called by:
  6012 ;;		_color_display
  6013 ;;		_color_predict
  6014 ;;		_check_color_reading
  6015 ;; This function uses a non-reentrant model
  6016 ;;
  6017                           
  6018                           	psect	text26
  6019  0055B6                     __ptext26:
  6020                           	callstack 0
  6021  0055B6                     _sendStringSerial4:
  6022                           	callstack 25
  6023  0055B6                     
  6024                           ;serial.c: 38:     while(*string != 0){
  6025  0055B6  EFE6  F02A         	goto	l4408
  6026  0055BA                     l4404:
  6027                           
  6028                           ;serial.c: 39:   sendCharSerial4(*string++);}
  6029  0055BA  C004  FFD9         	movff	sendStringSerial4@string,fsr2l
  6030  0055BE  C005  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  6031  0055C2  50DF               	movf	indf2,w,c
  6032  0055C4  ECD4  F02B         	call	_sendCharSerial4
  6033  0055C8  4A04               	infsnz	sendStringSerial4@string^0,f,c
  6034  0055CA  2A05               	incf	(sendStringSerial4@string+1)^0,f,c
  6035  0055CC                     l4408:
  6036                           
  6037                           ;serial.c: 38:     while(*string != 0){
  6038  0055CC  C004  FFD9         	movff	sendStringSerial4@string,fsr2l
  6039  0055D0  C005  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  6040  0055D4  50DF               	movf	indf2,w,c
  6041  0055D6  A4D8               	btfss	status,2,c
  6042  0055D8  EFF0  F02A         	goto	u4231
  6043  0055DC  EFF2  F02A         	goto	u4230
  6044  0055E0                     u4231:
  6045  0055E0  EFDD  F02A         	goto	l4404
  6046  0055E4                     u4230:
  6047  0055E4  0012               	return		;funcret
  6048  0055E6                     __end_of_sendStringSerial4:
  6049                           	callstack 0
  6050                           
  6051 ;; *************** function _sendCharSerial4 *****************
  6052 ;; Defined at:
  6053 ;;		line 29 in file "serial.c"
  6054 ;; Parameters:    Size  Location     Type
  6055 ;;  charToSend      1    wreg     unsigned char 
  6056 ;; Auto vars:     Size  Location     Type
  6057 ;;  charToSend      1    2[COMRAM] unsigned char 
  6058 ;; Return value:  Size  Location     Type
  6059 ;;                  1    wreg      void 
  6060 ;; Registers used:
  6061 ;;		wreg
  6062 ;; Tracked objects:
  6063 ;;		On entry : 0/0
  6064 ;;		On exit  : 0/0
  6065 ;;		Unchanged: 0/0
  6066 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6067 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6068 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6069 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6070 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6071 ;;Total ram usage:        1 bytes
  6072 ;; Hardware stack levels used: 1
  6073 ;; Hardware stack levels required when called: 2
  6074 ;; This function calls:
  6075 ;;		Nothing
  6076 ;; This function is called by:
  6077 ;;		_sendStringSerial4
  6078 ;; This function uses a non-reentrant model
  6079 ;;
  6080                           
  6081                           	psect	text27
  6082  0057A8                     __ptext27:
  6083                           	callstack 0
  6084  0057A8                     _sendCharSerial4:
  6085                           	callstack 25
  6086                           
  6087                           ;incstack = 0
  6088                           ;sendCharSerial4@charToSend stored from wreg
  6089  0057A8  6E03               	movwf	sendCharSerial4@charToSend^0,c
  6090  0057AA                     l450:
  6091  0057AA  010E               	movlb	14	; () banked
  6092  0057AC  A537               	btfss	55,2,b	;volatile
  6093  0057AE  EFDB  F02B         	goto	u4051
  6094  0057B2  EFDD  F02B         	goto	u4050
  6095  0057B6                     u4051:
  6096  0057B6  EFD5  F02B         	goto	l450
  6097  0057BA                     u4050:
  6098  0057BA                     
  6099                           ; BSR set to: 14
  6100                           ;serial.c: 31:     TX4REG = charToSend;
  6101  0057BA  C003  FEE4         	movff	sendCharSerial4@charToSend,3812	;volatile
  6102  0057BE                     
  6103                           ; BSR set to: 14
  6104  0057BE  0012               	return		;funcret
  6105  0057C0                     __end_of_sendCharSerial4:
  6106                           	callstack 0
  6107                           
  6108 ;; *************** function _color_click_init *****************
  6109 ;; Defined at:
  6110 ;;		line 65 in file "color.c"
  6111 ;; Parameters:    Size  Location     Type
  6112 ;;		None
  6113 ;; Auto vars:     Size  Location     Type
  6114 ;;		None
  6115 ;; Return value:  Size  Location     Type
  6116 ;;                  1    wreg      void 
  6117 ;; Registers used:
  6118 ;;		wreg, status,2, status,0, cstack
  6119 ;; Tracked objects:
  6120 ;;		On entry : 0/0
  6121 ;;		On exit  : 0/0
  6122 ;;		Unchanged: 0/0
  6123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6124 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6125 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6126 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6127 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6128 ;;Total ram usage:        1 bytes
  6129 ;; Hardware stack levels used: 1
  6130 ;; Hardware stack levels required when called: 5
  6131 ;; This function calls:
  6132 ;;		_I2C_2_Master_Init
  6133 ;;		_color_writetoaddr
  6134 ;; This function is called by:
  6135 ;;		_main
  6136 ;; This function uses a non-reentrant model
  6137 ;;
  6138                           
  6139                           	psect	text28
  6140  005582                     __ptext28:
  6141                           	callstack 0
  6142  005582                     _color_click_init:
  6143                           	callstack 25
  6144  005582                     
  6145                           ;color.c: 68:     I2C_2_Master_Init();
  6146  005582  EC0A  F02B         	call	_I2C_2_Master_Init	;wreg free
  6147  005586                     
  6148                           ;color.c: 71:  color_writetoaddr(0x00, 0x01);
  6149  005586  0E01               	movlw	1
  6150  005588  6E05               	movwf	color_writetoaddr@value^0,c
  6151  00558A  0E00               	movlw	0
  6152  00558C  EC56  F02B         	call	_color_writetoaddr
  6153  005590                     
  6154                           ;color.c: 72:     _delay((unsigned long)((3)*(64000000/4000.0)));
  6155  005590  0E3F               	movlw	63
  6156  005592  6E07               	movwf	??_color_click_init^0,c
  6157  005594  0E55               	movlw	85
  6158  005596                     u6737:
  6159  005596  2EE8               	decfsz	wreg,f,c
  6160  005598  D7FE               	bra	u6737
  6161  00559A  2E07               	decfsz	??_color_click_init^0,f,c
  6162  00559C  D7FC               	bra	u6737
  6163  00559E  F000               	nop	
  6164  0055A0                     
  6165                           ;color.c: 75:  color_writetoaddr(0x00, 0x03);
  6166  0055A0  0E03               	movlw	3
  6167  0055A2  6E05               	movwf	color_writetoaddr@value^0,c
  6168  0055A4  0E00               	movlw	0
  6169  0055A6  EC56  F02B         	call	_color_writetoaddr
  6170  0055AA                     
  6171                           ;color.c: 78:  color_writetoaddr(0x01, 0xD5);
  6172  0055AA  0ED5               	movlw	213
  6173  0055AC  6E05               	movwf	color_writetoaddr@value^0,c
  6174  0055AE  0E01               	movlw	1
  6175  0055B0  EC56  F02B         	call	_color_writetoaddr
  6176  0055B4  0012               	return		;funcret
  6177  0055B6                     __end_of_color_click_init:
  6178                           	callstack 0
  6179                           
  6180 ;; *************** function _color_writetoaddr *****************
  6181 ;; Defined at:
  6182 ;;		line 81 in file "color.c"
  6183 ;; Parameters:    Size  Location     Type
  6184 ;;  address         1    wreg     unsigned char 
  6185 ;;  value           1    4[COMRAM] unsigned char 
  6186 ;; Auto vars:     Size  Location     Type
  6187 ;;  address         1    5[COMRAM] unsigned char 
  6188 ;; Return value:  Size  Location     Type
  6189 ;;                  1    wreg      void 
  6190 ;; Registers used:
  6191 ;;		wreg, status,2, status,0, cstack
  6192 ;; Tracked objects:
  6193 ;;		On entry : 0/0
  6194 ;;		On exit  : 0/0
  6195 ;;		Unchanged: 0/0
  6196 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6197 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6198 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6199 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6200 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6201 ;;Total ram usage:        2 bytes
  6202 ;; Hardware stack levels used: 1
  6203 ;; Hardware stack levels required when called: 4
  6204 ;; This function calls:
  6205 ;;		_I2C_2_Master_Start
  6206 ;;		_I2C_2_Master_Stop
  6207 ;;		_I2C_2_Master_Write
  6208 ;; This function is called by:
  6209 ;;		_color_click_init
  6210 ;; This function uses a non-reentrant model
  6211 ;;
  6212                           
  6213                           	psect	text29
  6214  0056AC                     __ptext29:
  6215                           	callstack 0
  6216  0056AC                     _color_writetoaddr:
  6217                           	callstack 25
  6218                           
  6219                           ;incstack = 0
  6220                           ;color_writetoaddr@address stored from wreg
  6221  0056AC  6E06               	movwf	color_writetoaddr@address^0,c
  6222  0056AE                     
  6223                           ;color.c: 82:     I2C_2_Master_Start();
  6224  0056AE  ECFC  F02B         	call	_I2C_2_Master_Start	;wreg free
  6225                           
  6226                           ;color.c: 83:     I2C_2_Master_Write(0x52 | 0x00);
  6227  0056B2  0E52               	movlw	82
  6228  0056B4  ECEB  F02B         	call	_I2C_2_Master_Write
  6229                           
  6230                           ;color.c: 84:     I2C_2_Master_Write(0x80 | address);
  6231  0056B8  5006               	movf	color_writetoaddr@address^0,w,c
  6232  0056BA  0980               	iorlw	128
  6233  0056BC  ECEB  F02B         	call	_I2C_2_Master_Write
  6234                           
  6235                           ;color.c: 85:     I2C_2_Master_Write(value);
  6236  0056C0  5005               	movf	color_writetoaddr@value^0,w,c
  6237  0056C2  ECEB  F02B         	call	_I2C_2_Master_Write
  6238                           
  6239                           ;color.c: 86:     I2C_2_Master_Stop();
  6240  0056C6  ECF7  F02B         	call	_I2C_2_Master_Stop	;wreg free
  6241  0056CA  0012               	return		;funcret
  6242  0056CC                     __end_of_color_writetoaddr:
  6243                           	callstack 0
  6244                           
  6245 ;; *************** function _I2C_2_Master_Init *****************
  6246 ;; Defined at:
  6247 ;;		line 4 in file "i2c.c"
  6248 ;; Parameters:    Size  Location     Type
  6249 ;;		None
  6250 ;; Auto vars:     Size  Location     Type
  6251 ;;		None
  6252 ;; Return value:  Size  Location     Type
  6253 ;;                  1    wreg      void 
  6254 ;; Registers used:
  6255 ;;		wreg, status,2
  6256 ;; Tracked objects:
  6257 ;;		On entry : 0/0
  6258 ;;		On exit  : 0/0
  6259 ;;		Unchanged: 0/0
  6260 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6261 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6262 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6263 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6264 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6265 ;;Total ram usage:        0 bytes
  6266 ;; Hardware stack levels used: 1
  6267 ;; Hardware stack levels required when called: 2
  6268 ;; This function calls:
  6269 ;;		Nothing
  6270 ;; This function is called by:
  6271 ;;		_color_click_init
  6272 ;;		_main
  6273 ;; This function uses a non-reentrant model
  6274 ;;
  6275                           
  6276                           	psect	text30
  6277  005614                     __ptext30:
  6278                           	callstack 0
  6279  005614                     _I2C_2_Master_Init:
  6280                           	callstack 27
  6281  005614                     
  6282                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  6283  005614  010E               	movlb	14	; () banked
  6284  005616  51D9               	movf	217,w,b	;volatile
  6285  005618  0BF0               	andlw	-16
  6286  00561A  0908               	iorlw	8
  6287  00561C  6FD9               	movwf	217,b	;volatile
  6288  00561E                     
  6289                           ; BSR set to: 14
  6290                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  6291  00561E  8BD9               	bsf	217,5,b	;volatile
  6292                           
  6293                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  6294  005620  0E9F               	movlw	159
  6295  005622  6FD6               	movwf	214,b	;volatile
  6296  005624                     
  6297                           ; BSR set to: 14
  6298                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  6299  005624  8A84               	bsf	132,5,c	;volatile
  6300  005626                     
  6301                           ; BSR set to: 14
  6302                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  6303  005626  8C84               	bsf	132,6,c	;volatile
  6304  005628                     
  6305                           ; BSR set to: 14
  6306                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  6307  005628  9BA7               	bcf	167,5,b	;volatile
  6308  00562A                     
  6309                           ; BSR set to: 14
  6310                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  6311  00562A  9DA7               	bcf	167,6,b	;volatile
  6312                           
  6313                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  6314  00562C  0E1D               	movlw	29
  6315  00562E  6F1D               	movwf	29,b	;volatile
  6316                           
  6317                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  6318  005630  0E1E               	movlw	30
  6319  005632  6F1C               	movwf	28,b	;volatile
  6320                           
  6321                           ;i2c.c: 18:   RD5PPS=0x1C;
  6322  005634  0E1C               	movlw	28
  6323  005636  6F6F               	movwf	111,b	;volatile
  6324                           
  6325                           ;i2c.c: 19:   RD6PPS=0x1B;
  6326  005638  0E1B               	movlw	27
  6327  00563A  6F70               	movwf	112,b	;volatile
  6328  00563C                     
  6329                           ; BSR set to: 14
  6330  00563C  0012               	return		;funcret
  6331  00563E                     __end_of_I2C_2_Master_Init:
  6332                           	callstack 0
  6333                           
  6334 ;; *************** function _calibrate_white *****************
  6335 ;; Defined at:
  6336 ;;		line 256 in file "color.c"
  6337 ;; Parameters:    Size  Location     Type
  6338 ;;  w               2   13[COMRAM] PTR struct white_card
  6339 ;;		 -> main@white(26), 
  6340 ;; Auto vars:     Size  Location     Type
  6341 ;;		None
  6342 ;; Return value:  Size  Location     Type
  6343 ;;                  1    wreg      void 
  6344 ;; Registers used:
  6345 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6346 ;; Tracked objects:
  6347 ;;		On entry : 0/0
  6348 ;;		On exit  : 0/0
  6349 ;;		Unchanged: 0/0
  6350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6351 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6352 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6353 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6354 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6355 ;;Total ram usage:        4 bytes
  6356 ;; Hardware stack levels used: 1
  6357 ;; Hardware stack levels required when called: 5
  6358 ;; This function calls:
  6359 ;;		_LED_B
  6360 ;;		_LED_C
  6361 ;;		_LED_G
  6362 ;;		_LED_R
  6363 ;;		_color_read_Blue
  6364 ;;		_color_read_Clear
  6365 ;;		_color_read_Green
  6366 ;;		_color_read_Red
  6367 ;; This function is called by:
  6368 ;;		_main
  6369 ;; This function uses a non-reentrant model
  6370 ;;
  6371                           
  6372                           	psect	text31
  6373  003C6A                     __ptext31:
  6374                           	callstack 0
  6375  003C6A                     _calibrate_white:
  6376                           	callstack 25
  6377  003C6A                     
  6378                           ;color.c: 256: void calibrate_white(struct white_card *w);color.c: 257: {;color.c: 258: 
      +                              LED_R();
  6379  003C6A  EC66  F02B         	call	_LED_R	;wreg free
  6380  003C6E                     
  6381                           ;color.c: 260:     w->RR = color_read_Red(); w->RG = color_read_Green(); w->RB = color_r
      +                          ead_Blue();
  6382  003C6E  ECA1  F028         	call	_color_read_Red	;wreg free
  6383  003C72  C00E  FFD9         	movff	calibrate_white@w,fsr2l
  6384  003C76  C00F  FFDA         	movff	calibrate_white@w+1,fsr2h
  6385  003C7A  C007  FFDE         	movff	?_color_read_Red,postinc2
  6386  003C7E  C008  FFDD         	movff	?_color_read_Red+1,postdec2
  6387  003C82  ECC9  F028         	call	_color_read_Green	;wreg free
  6388  003C86  EE20 F002          	lfsr	2,2
  6389  003C8A  500E               	movf	calibrate_white@w^0,w,c
  6390  003C8C  26D9               	addwf	fsr2l,f,c
  6391  003C8E  500F               	movf	(calibrate_white@w+1)^0,w,c
  6392  003C90  22DA               	addwfc	fsr2h,f,c
  6393  003C92  C007  FFDE         	movff	?_color_read_Green,postinc2
  6394  003C96  C008  FFDD         	movff	?_color_read_Green+1,postdec2
  6395  003C9A  ECF1  F028         	call	_color_read_Blue	;wreg free
  6396  003C9E  EE20 F004          	lfsr	2,4
  6397  003CA2  500E               	movf	calibrate_white@w^0,w,c
  6398  003CA4  26D9               	addwf	fsr2l,f,c
  6399  003CA6  500F               	movf	(calibrate_white@w+1)^0,w,c
  6400  003CA8  22DA               	addwfc	fsr2h,f,c
  6401  003CAA  C007  FFDE         	movff	?_color_read_Blue,postinc2
  6402  003CAE  C008  FFDD         	movff	?_color_read_Blue+1,postdec2
  6403  003CB2                     
  6404                           ;color.c: 261:     _delay((unsigned long)((100)*(64000000/4000.0)));
  6405  003CB2  0E09               	movlw	9
  6406  003CB4  6E11               	movwf	(??_calibrate_white+1)^0,c
  6407  003CB6  0E1E               	movlw	30
  6408  003CB8  6E10               	movwf	??_calibrate_white^0,c
  6409  003CBA  0EE4               	movlw	228
  6410  003CBC                     u6747:
  6411  003CBC  2EE8               	decfsz	wreg,f,c
  6412  003CBE  D7FE               	bra	u6747
  6413  003CC0  2E10               	decfsz	??_calibrate_white^0,f,c
  6414  003CC2  D7FC               	bra	u6747
  6415  003CC4  2E11               	decfsz	(??_calibrate_white+1)^0,f,c
  6416  003CC6  D7FA               	bra	u6747
  6417  003CC8  D000               	nop2	
  6418  003CCA                     
  6419                           ;color.c: 263:     LED_G();
  6420  003CCA  EC76  F02B         	call	_LED_G	;wreg free
  6421  003CCE                     
  6422                           ;color.c: 265:     w->GR = color_read_Red(); w->GG = color_read_Green(); w->GB = color_r
      +                          ead_Blue();
  6423  003CCE  ECA1  F028         	call	_color_read_Red	;wreg free
  6424  003CD2  EE20 F006          	lfsr	2,6
  6425  003CD6  500E               	movf	calibrate_white@w^0,w,c
  6426  003CD8  26D9               	addwf	fsr2l,f,c
  6427  003CDA  500F               	movf	(calibrate_white@w+1)^0,w,c
  6428  003CDC  22DA               	addwfc	fsr2h,f,c
  6429  003CDE  C007  FFDE         	movff	?_color_read_Red,postinc2
  6430  003CE2  C008  FFDD         	movff	?_color_read_Red+1,postdec2
  6431  003CE6  ECC9  F028         	call	_color_read_Green	;wreg free
  6432  003CEA  EE20 F008          	lfsr	2,8
  6433  003CEE  500E               	movf	calibrate_white@w^0,w,c
  6434  003CF0  26D9               	addwf	fsr2l,f,c
  6435  003CF2  500F               	movf	(calibrate_white@w+1)^0,w,c
  6436  003CF4  22DA               	addwfc	fsr2h,f,c
  6437  003CF6  C007  FFDE         	movff	?_color_read_Green,postinc2
  6438  003CFA  C008  FFDD         	movff	?_color_read_Green+1,postdec2
  6439  003CFE  ECF1  F028         	call	_color_read_Blue	;wreg free
  6440  003D02  EE20 F00A          	lfsr	2,10
  6441  003D06  500E               	movf	calibrate_white@w^0,w,c
  6442  003D08  26D9               	addwf	fsr2l,f,c
  6443  003D0A  500F               	movf	(calibrate_white@w+1)^0,w,c
  6444  003D0C  22DA               	addwfc	fsr2h,f,c
  6445  003D0E  C007  FFDE         	movff	?_color_read_Blue,postinc2
  6446  003D12  C008  FFDD         	movff	?_color_read_Blue+1,postdec2
  6447                           
  6448                           ;color.c: 267:     _delay((unsigned long)((100)*(64000000/4000.0)));
  6449  003D16  0E09               	movlw	9
  6450  003D18  6E11               	movwf	(??_calibrate_white+1)^0,c
  6451  003D1A  0E1E               	movlw	30
  6452  003D1C  6E10               	movwf	??_calibrate_white^0,c
  6453  003D1E  0EE4               	movlw	228
  6454  003D20                     u6757:
  6455  003D20  2EE8               	decfsz	wreg,f,c
  6456  003D22  D7FE               	bra	u6757
  6457  003D24  2E10               	decfsz	??_calibrate_white^0,f,c
  6458  003D26  D7FC               	bra	u6757
  6459  003D28  2E11               	decfsz	(??_calibrate_white+1)^0,f,c
  6460  003D2A  D7FA               	bra	u6757
  6461  003D2C  D000               	nop2	
  6462  003D2E                     
  6463                           ;color.c: 269:     LED_B();
  6464  003D2E  EC86  F02B         	call	_LED_B	;wreg free
  6465  003D32                     
  6466                           ;color.c: 271:     w->BR = color_read_Red(); w->BG = color_read_Green(); w->BB = color_r
      +                          ead_Blue();
  6467  003D32  ECA1  F028         	call	_color_read_Red	;wreg free
  6468  003D36  EE20 F00C          	lfsr	2,12
  6469  003D3A  500E               	movf	calibrate_white@w^0,w,c
  6470  003D3C  26D9               	addwf	fsr2l,f,c
  6471  003D3E  500F               	movf	(calibrate_white@w+1)^0,w,c
  6472  003D40  22DA               	addwfc	fsr2h,f,c
  6473  003D42  C007  FFDE         	movff	?_color_read_Red,postinc2
  6474  003D46  C008  FFDD         	movff	?_color_read_Red+1,postdec2
  6475  003D4A  ECC9  F028         	call	_color_read_Green	;wreg free
  6476  003D4E  EE20 F00E          	lfsr	2,14
  6477  003D52  500E               	movf	calibrate_white@w^0,w,c
  6478  003D54  26D9               	addwf	fsr2l,f,c
  6479  003D56  500F               	movf	(calibrate_white@w+1)^0,w,c
  6480  003D58  22DA               	addwfc	fsr2h,f,c
  6481  003D5A  C007  FFDE         	movff	?_color_read_Green,postinc2
  6482  003D5E  C008  FFDD         	movff	?_color_read_Green+1,postdec2
  6483  003D62  ECF1  F028         	call	_color_read_Blue	;wreg free
  6484  003D66  EE20 F010          	lfsr	2,16
  6485  003D6A  500E               	movf	calibrate_white@w^0,w,c
  6486  003D6C  26D9               	addwf	fsr2l,f,c
  6487  003D6E  500F               	movf	(calibrate_white@w+1)^0,w,c
  6488  003D70  22DA               	addwfc	fsr2h,f,c
  6489  003D72  C007  FFDE         	movff	?_color_read_Blue,postinc2
  6490  003D76  C008  FFDD         	movff	?_color_read_Blue+1,postdec2
  6491  003D7A                     
  6492                           ;color.c: 272:     _delay((unsigned long)((100)*(64000000/4000.0)));
  6493  003D7A  0E09               	movlw	9
  6494  003D7C  6E11               	movwf	(??_calibrate_white+1)^0,c
  6495  003D7E  0E1E               	movlw	30
  6496  003D80  6E10               	movwf	??_calibrate_white^0,c
  6497  003D82  0EE4               	movlw	228
  6498  003D84                     u6767:
  6499  003D84  2EE8               	decfsz	wreg,f,c
  6500  003D86  D7FE               	bra	u6767
  6501  003D88  2E10               	decfsz	??_calibrate_white^0,f,c
  6502  003D8A  D7FC               	bra	u6767
  6503  003D8C  2E11               	decfsz	(??_calibrate_white+1)^0,f,c
  6504  003D8E  D7FA               	bra	u6767
  6505  003D90  D000               	nop2	
  6506  003D92                     
  6507                           ;color.c: 274:     LED_C();
  6508  003D92  EC96  F02B         	call	_LED_C	;wreg free
  6509                           
  6510                           ;color.c: 275:     w->CR = color_read_Red(); w->CG = color_read_Green(); w->CB = color_r
      +                          ead_Blue(); w->CC = color_read_Clear();
  6511  003D96  ECA1  F028         	call	_color_read_Red	;wreg free
  6512  003D9A  EE20 F012          	lfsr	2,18
  6513  003D9E  500E               	movf	calibrate_white@w^0,w,c
  6514  003DA0  26D9               	addwf	fsr2l,f,c
  6515  003DA2  500F               	movf	(calibrate_white@w+1)^0,w,c
  6516  003DA4  22DA               	addwfc	fsr2h,f,c
  6517  003DA6  C007  FFDE         	movff	?_color_read_Red,postinc2
  6518  003DAA  C008  FFDD         	movff	?_color_read_Red+1,postdec2
  6519  003DAE  ECC9  F028         	call	_color_read_Green	;wreg free
  6520  003DB2  EE20 F014          	lfsr	2,20
  6521  003DB6  500E               	movf	calibrate_white@w^0,w,c
  6522  003DB8  26D9               	addwf	fsr2l,f,c
  6523  003DBA  500F               	movf	(calibrate_white@w+1)^0,w,c
  6524  003DBC  22DA               	addwfc	fsr2h,f,c
  6525  003DBE  C007  FFDE         	movff	?_color_read_Green,postinc2
  6526  003DC2  C008  FFDD         	movff	?_color_read_Green+1,postdec2
  6527  003DC6  ECF1  F028         	call	_color_read_Blue	;wreg free
  6528  003DCA  EE20 F016          	lfsr	2,22
  6529  003DCE  500E               	movf	calibrate_white@w^0,w,c
  6530  003DD0  26D9               	addwf	fsr2l,f,c
  6531  003DD2  500F               	movf	(calibrate_white@w+1)^0,w,c
  6532  003DD4  22DA               	addwfc	fsr2h,f,c
  6533  003DD6  C007  FFDE         	movff	?_color_read_Blue,postinc2
  6534  003DDA  C008  FFDD         	movff	?_color_read_Blue+1,postdec2
  6535  003DDE  EC19  F029         	call	_color_read_Clear	;wreg free
  6536  003DE2  EE20 F018          	lfsr	2,24
  6537  003DE6  500E               	movf	calibrate_white@w^0,w,c
  6538  003DE8  26D9               	addwf	fsr2l,f,c
  6539  003DEA  500F               	movf	(calibrate_white@w+1)^0,w,c
  6540  003DEC  22DA               	addwfc	fsr2h,f,c
  6541  003DEE  C007  FFDE         	movff	?_color_read_Clear,postinc2
  6542  003DF2  C008  FFDD         	movff	?_color_read_Clear+1,postdec2
  6543  003DF6                     
  6544                           ;color.c: 276:     _delay((unsigned long)((100)*(64000000/4000.0)));
  6545  003DF6  0E09               	movlw	9
  6546  003DF8  6E11               	movwf	(??_calibrate_white+1)^0,c
  6547  003DFA  0E1E               	movlw	30
  6548  003DFC  6E10               	movwf	??_calibrate_white^0,c
  6549  003DFE  0EE4               	movlw	228
  6550  003E00                     u6777:
  6551  003E00  2EE8               	decfsz	wreg,f,c
  6552  003E02  D7FE               	bra	u6777
  6553  003E04  2E10               	decfsz	??_calibrate_white^0,f,c
  6554  003E06  D7FC               	bra	u6777
  6555  003E08  2E11               	decfsz	(??_calibrate_white+1)^0,f,c
  6556  003E0A  D7FA               	bra	u6777
  6557  003E0C  D000               	nop2	
  6558  003E0E  0012               	return		;funcret
  6559  003E10                     __end_of_calibrate_white:
  6560                           	callstack 0
  6561                           
  6562 ;; *************** function _color_read_Red *****************
  6563 ;; Defined at:
  6564 ;;		line 89 in file "color.c"
  6565 ;; Parameters:    Size  Location     Type
  6566 ;;		None
  6567 ;; Auto vars:     Size  Location     Type
  6568 ;;  tmp             2   11[COMRAM] unsigned int 
  6569 ;; Return value:  Size  Location     Type
  6570 ;;                  2    6[COMRAM] unsigned int 
  6571 ;; Registers used:
  6572 ;;		wreg, status,2, status,0, cstack
  6573 ;; Tracked objects:
  6574 ;;		On entry : 0/0
  6575 ;;		On exit  : 0/0
  6576 ;;		Unchanged: 0/0
  6577 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6578 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6579 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6580 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6581 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6582 ;;Total ram usage:        7 bytes
  6583 ;; Hardware stack levels used: 1
  6584 ;; Hardware stack levels required when called: 4
  6585 ;; This function calls:
  6586 ;;		_I2C_2_Master_Read
  6587 ;;		_I2C_2_Master_RepStart
  6588 ;;		_I2C_2_Master_Start
  6589 ;;		_I2C_2_Master_Stop
  6590 ;;		_I2C_2_Master_Write
  6591 ;; This function is called by:
  6592 ;;		_read_color
  6593 ;;		_calibrate_white
  6594 ;; This function uses a non-reentrant model
  6595 ;;
  6596                           
  6597                           	psect	text32
  6598  005142                     __ptext32:
  6599                           	callstack 0
  6600  005142                     _color_read_Red:
  6601                           	callstack 23
  6602  005142                     
  6603                           ;color.c: 91:  unsigned int tmp;;color.c: 92:  I2C_2_Master_Start();
  6604  005142  ECFC  F02B         	call	_I2C_2_Master_Start	;wreg free
  6605                           
  6606                           ;color.c: 93:  I2C_2_Master_Write(0x52 | 0x00);
  6607  005146  0E52               	movlw	82
  6608  005148  ECEB  F02B         	call	_I2C_2_Master_Write
  6609                           
  6610                           ;color.c: 94:  I2C_2_Master_Write(0xA0 | 0x16);
  6611  00514C  0EB6               	movlw	182
  6612  00514E  ECEB  F02B         	call	_I2C_2_Master_Write
  6613                           
  6614                           ;color.c: 95:  I2C_2_Master_RepStart();
  6615  005152  EC01  F02C         	call	_I2C_2_Master_RepStart	;wreg free
  6616                           
  6617                           ;color.c: 96:  I2C_2_Master_Write(0x52 | 0x01);
  6618  005156  0E53               	movlw	83
  6619  005158  ECEB  F02B         	call	_I2C_2_Master_Write
  6620                           
  6621                           ;color.c: 97:  tmp=I2C_2_Master_Read(1);
  6622  00515C  0E01               	movlw	1
  6623  00515E  ECCD  F029         	call	_I2C_2_Master_Read
  6624  005162  6E09               	movwf	??_color_read_Red^0,c
  6625  005164  5009               	movf	??_color_read_Red^0,w,c
  6626  005166  6E0C               	movwf	color_read_Red@tmp^0,c
  6627  005168  6A0D               	clrf	(color_read_Red@tmp+1)^0,c
  6628                           
  6629                           ;color.c: 98:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  6630  00516A  0E00               	movlw	0
  6631  00516C  ECCD  F029         	call	_I2C_2_Master_Read
  6632  005170  6E09               	movwf	??_color_read_Red^0,c
  6633  005172  5009               	movf	??_color_read_Red^0,w,c
  6634  005174  6E0B               	movwf	(??_color_read_Red+2)^0,c
  6635  005176  6A0A               	clrf	(??_color_read_Red+1)^0,c
  6636  005178  500C               	movf	color_read_Red@tmp^0,w,c
  6637  00517A  100A               	iorwf	(??_color_read_Red+1)^0,w,c
  6638  00517C  6E0C               	movwf	color_read_Red@tmp^0,c
  6639  00517E  500D               	movf	(color_read_Red@tmp+1)^0,w,c
  6640  005180  100B               	iorwf	(??_color_read_Red+2)^0,w,c
  6641  005182  6E0D               	movwf	(color_read_Red@tmp+1)^0,c
  6642                           
  6643                           ;color.c: 99:  I2C_2_Master_Stop();
  6644  005184  ECF7  F02B         	call	_I2C_2_Master_Stop	;wreg free
  6645  005188                     
  6646                           ;color.c: 100:  return tmp;
  6647  005188  C00C  F007         	movff	color_read_Red@tmp,?_color_read_Red
  6648  00518C  C00D  F008         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  6649  005190  0012               	return		;funcret
  6650  005192                     __end_of_color_read_Red:
  6651                           	callstack 0
  6652                           
  6653 ;; *************** function _color_read_Green *****************
  6654 ;; Defined at:
  6655 ;;		line 117 in file "color.c"
  6656 ;; Parameters:    Size  Location     Type
  6657 ;;		None
  6658 ;; Auto vars:     Size  Location     Type
  6659 ;;  tmp             2   11[COMRAM] unsigned int 
  6660 ;; Return value:  Size  Location     Type
  6661 ;;                  2    6[COMRAM] unsigned int 
  6662 ;; Registers used:
  6663 ;;		wreg, status,2, status,0, cstack
  6664 ;; Tracked objects:
  6665 ;;		On entry : 0/0
  6666 ;;		On exit  : 0/0
  6667 ;;		Unchanged: 0/0
  6668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6669 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6670 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6671 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6672 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6673 ;;Total ram usage:        7 bytes
  6674 ;; Hardware stack levels used: 1
  6675 ;; Hardware stack levels required when called: 4
  6676 ;; This function calls:
  6677 ;;		_I2C_2_Master_Read
  6678 ;;		_I2C_2_Master_RepStart
  6679 ;;		_I2C_2_Master_Start
  6680 ;;		_I2C_2_Master_Stop
  6681 ;;		_I2C_2_Master_Write
  6682 ;; This function is called by:
  6683 ;;		_read_color
  6684 ;;		_calibrate_white
  6685 ;;		_distance_measure
  6686 ;; This function uses a non-reentrant model
  6687 ;;
  6688                           
  6689                           	psect	text33
  6690  005192                     __ptext33:
  6691                           	callstack 0
  6692  005192                     _color_read_Green:
  6693                           	callstack 23
  6694  005192                     
  6695                           ;color.c: 119:  unsigned int tmp;;color.c: 120:  I2C_2_Master_Start();
  6696  005192  ECFC  F02B         	call	_I2C_2_Master_Start	;wreg free
  6697                           
  6698                           ;color.c: 121:  I2C_2_Master_Write(0x52 | 0x00);
  6699  005196  0E52               	movlw	82
  6700  005198  ECEB  F02B         	call	_I2C_2_Master_Write
  6701                           
  6702                           ;color.c: 122:  I2C_2_Master_Write(0xA0 | 0x18);
  6703  00519C  0EB8               	movlw	184
  6704  00519E  ECEB  F02B         	call	_I2C_2_Master_Write
  6705                           
  6706                           ;color.c: 123:  I2C_2_Master_RepStart();
  6707  0051A2  EC01  F02C         	call	_I2C_2_Master_RepStart	;wreg free
  6708                           
  6709                           ;color.c: 124:  I2C_2_Master_Write(0x52 | 0x01);
  6710  0051A6  0E53               	movlw	83
  6711  0051A8  ECEB  F02B         	call	_I2C_2_Master_Write
  6712                           
  6713                           ;color.c: 125:  tmp=I2C_2_Master_Read(1);
  6714  0051AC  0E01               	movlw	1
  6715  0051AE  ECCD  F029         	call	_I2C_2_Master_Read
  6716  0051B2  6E09               	movwf	??_color_read_Green^0,c
  6717  0051B4  5009               	movf	??_color_read_Green^0,w,c
  6718  0051B6  6E0C               	movwf	color_read_Green@tmp^0,c
  6719  0051B8  6A0D               	clrf	(color_read_Green@tmp+1)^0,c
  6720                           
  6721                           ;color.c: 126:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  6722  0051BA  0E00               	movlw	0
  6723  0051BC  ECCD  F029         	call	_I2C_2_Master_Read
  6724  0051C0  6E09               	movwf	??_color_read_Green^0,c
  6725  0051C2  5009               	movf	??_color_read_Green^0,w,c
  6726  0051C4  6E0B               	movwf	(??_color_read_Green+2)^0,c
  6727  0051C6  6A0A               	clrf	(??_color_read_Green+1)^0,c
  6728  0051C8  500C               	movf	color_read_Green@tmp^0,w,c
  6729  0051CA  100A               	iorwf	(??_color_read_Green+1)^0,w,c
  6730  0051CC  6E0C               	movwf	color_read_Green@tmp^0,c
  6731  0051CE  500D               	movf	(color_read_Green@tmp+1)^0,w,c
  6732  0051D0  100B               	iorwf	(??_color_read_Green+2)^0,w,c
  6733  0051D2  6E0D               	movwf	(color_read_Green@tmp+1)^0,c
  6734                           
  6735                           ;color.c: 127:  I2C_2_Master_Stop();
  6736  0051D4  ECF7  F02B         	call	_I2C_2_Master_Stop	;wreg free
  6737  0051D8                     
  6738                           ;color.c: 128:  return tmp;
  6739  0051D8  C00C  F007         	movff	color_read_Green@tmp,?_color_read_Green
  6740  0051DC  C00D  F008         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  6741  0051E0  0012               	return		;funcret
  6742  0051E2                     __end_of_color_read_Green:
  6743                           	callstack 0
  6744                           
  6745 ;; *************** function _color_read_Blue *****************
  6746 ;; Defined at:
  6747 ;;		line 103 in file "color.c"
  6748 ;; Parameters:    Size  Location     Type
  6749 ;;		None
  6750 ;; Auto vars:     Size  Location     Type
  6751 ;;  tmp             2   11[COMRAM] unsigned int 
  6752 ;; Return value:  Size  Location     Type
  6753 ;;                  2    6[COMRAM] unsigned int 
  6754 ;; Registers used:
  6755 ;;		wreg, status,2, status,0, cstack
  6756 ;; Tracked objects:
  6757 ;;		On entry : 0/0
  6758 ;;		On exit  : 0/0
  6759 ;;		Unchanged: 0/0
  6760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6761 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6762 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6763 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6764 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6765 ;;Total ram usage:        7 bytes
  6766 ;; Hardware stack levels used: 1
  6767 ;; Hardware stack levels required when called: 4
  6768 ;; This function calls:
  6769 ;;		_I2C_2_Master_Read
  6770 ;;		_I2C_2_Master_RepStart
  6771 ;;		_I2C_2_Master_Start
  6772 ;;		_I2C_2_Master_Stop
  6773 ;;		_I2C_2_Master_Write
  6774 ;; This function is called by:
  6775 ;;		_read_color
  6776 ;;		_calibrate_white
  6777 ;; This function uses a non-reentrant model
  6778 ;;
  6779                           
  6780                           	psect	text34
  6781  0051E2                     __ptext34:
  6782                           	callstack 0
  6783  0051E2                     _color_read_Blue:
  6784                           	callstack 23
  6785  0051E2                     
  6786                           ;color.c: 105:  unsigned int tmp;;color.c: 106:  I2C_2_Master_Start();
  6787  0051E2  ECFC  F02B         	call	_I2C_2_Master_Start	;wreg free
  6788                           
  6789                           ;color.c: 107:  I2C_2_Master_Write(0x52 | 0x00);
  6790  0051E6  0E52               	movlw	82
  6791  0051E8  ECEB  F02B         	call	_I2C_2_Master_Write
  6792                           
  6793                           ;color.c: 108:  I2C_2_Master_Write(0xA0 | 0x1A);
  6794  0051EC  0EBA               	movlw	186
  6795  0051EE  ECEB  F02B         	call	_I2C_2_Master_Write
  6796                           
  6797                           ;color.c: 109:  I2C_2_Master_RepStart();
  6798  0051F2  EC01  F02C         	call	_I2C_2_Master_RepStart	;wreg free
  6799                           
  6800                           ;color.c: 110:  I2C_2_Master_Write(0x52 | 0x01);
  6801  0051F6  0E53               	movlw	83
  6802  0051F8  ECEB  F02B         	call	_I2C_2_Master_Write
  6803                           
  6804                           ;color.c: 111:  tmp=I2C_2_Master_Read(1);
  6805  0051FC  0E01               	movlw	1
  6806  0051FE  ECCD  F029         	call	_I2C_2_Master_Read
  6807  005202  6E09               	movwf	??_color_read_Blue^0,c
  6808  005204  5009               	movf	??_color_read_Blue^0,w,c
  6809  005206  6E0C               	movwf	color_read_Blue@tmp^0,c
  6810  005208  6A0D               	clrf	(color_read_Blue@tmp+1)^0,c
  6811                           
  6812                           ;color.c: 112:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  6813  00520A  0E00               	movlw	0
  6814  00520C  ECCD  F029         	call	_I2C_2_Master_Read
  6815  005210  6E09               	movwf	??_color_read_Blue^0,c
  6816  005212  5009               	movf	??_color_read_Blue^0,w,c
  6817  005214  6E0B               	movwf	(??_color_read_Blue+2)^0,c
  6818  005216  6A0A               	clrf	(??_color_read_Blue+1)^0,c
  6819  005218  500C               	movf	color_read_Blue@tmp^0,w,c
  6820  00521A  100A               	iorwf	(??_color_read_Blue+1)^0,w,c
  6821  00521C  6E0C               	movwf	color_read_Blue@tmp^0,c
  6822  00521E  500D               	movf	(color_read_Blue@tmp+1)^0,w,c
  6823  005220  100B               	iorwf	(??_color_read_Blue+2)^0,w,c
  6824  005222  6E0D               	movwf	(color_read_Blue@tmp+1)^0,c
  6825                           
  6826                           ;color.c: 113:  I2C_2_Master_Stop();
  6827  005224  ECF7  F02B         	call	_I2C_2_Master_Stop	;wreg free
  6828  005228                     
  6829                           ;color.c: 114:  return tmp;
  6830  005228  C00C  F007         	movff	color_read_Blue@tmp,?_color_read_Blue
  6831  00522C  C00D  F008         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  6832  005230  0012               	return		;funcret
  6833  005232                     __end_of_color_read_Blue:
  6834                           	callstack 0
  6835                           
  6836 ;; *************** function _LED_R *****************
  6837 ;; Defined at:
  6838 ;;		line 162 in file "color.c"
  6839 ;; Parameters:    Size  Location     Type
  6840 ;;		None
  6841 ;; Auto vars:     Size  Location     Type
  6842 ;;		None
  6843 ;; Return value:  Size  Location     Type
  6844 ;;                  1    wreg      void 
  6845 ;; Registers used:
  6846 ;;		wreg
  6847 ;; Tracked objects:
  6848 ;;		On entry : 0/0
  6849 ;;		On exit  : 0/0
  6850 ;;		Unchanged: 0/0
  6851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6852 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6853 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6854 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6855 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6856 ;;Total ram usage:        2 bytes
  6857 ;; Hardware stack levels used: 1
  6858 ;; Hardware stack levels required when called: 2
  6859 ;; This function calls:
  6860 ;;		Nothing
  6861 ;; This function is called by:
  6862 ;;		_color_data_collection
  6863 ;;		_calibrate_white
  6864 ;;		_detect_color
  6865 ;; This function uses a non-reentrant model
  6866 ;;
  6867                           
  6868                           	psect	text35
  6869  0056CC                     __ptext35:
  6870                           	callstack 0
  6871  0056CC                     _LED_R:
  6872                           	callstack 26
  6873  0056CC                     
  6874                           ;color.c: 164:     LATGbits.LATG1 = 1;
  6875  0056CC  827F               	bsf	127,1,c	;volatile
  6876                           
  6877                           ;color.c: 165:     LATFbits.LATF7 = 0;
  6878  0056CE  9E7E               	bcf	126,7,c	;volatile
  6879                           
  6880                           ;color.c: 166:     LATAbits.LATA4 = 0;
  6881  0056D0  9879               	bcf	121,4,c	;volatile
  6882  0056D2                     
  6883                           ;color.c: 167:     _delay((unsigned long)((200)*(64000000/4000.0)));
  6884  0056D2  0E11               	movlw	17
  6885  0056D4  6E04               	movwf	(??_LED_R+1)^0,c
  6886  0056D6  0E3C               	movlw	60
  6887  0056D8  6E03               	movwf	??_LED_R^0,c
  6888  0056DA  0ECB               	movlw	203
  6889  0056DC                     u6787:
  6890  0056DC  2EE8               	decfsz	wreg,f,c
  6891  0056DE  D7FE               	bra	u6787
  6892  0056E0  2E03               	decfsz	??_LED_R^0,f,c
  6893  0056E2  D7FC               	bra	u6787
  6894  0056E4  2E04               	decfsz	(??_LED_R+1)^0,f,c
  6895  0056E6  D7FA               	bra	u6787
  6896  0056E8  F000               	nop	
  6897  0056EA  0012               	return		;funcret
  6898  0056EC                     __end_of_LED_R:
  6899                           	callstack 0
  6900                           
  6901 ;; *************** function _LED_G *****************
  6902 ;; Defined at:
  6903 ;;		line 189 in file "color.c"
  6904 ;; Parameters:    Size  Location     Type
  6905 ;;		None
  6906 ;; Auto vars:     Size  Location     Type
  6907 ;;		None
  6908 ;; Return value:  Size  Location     Type
  6909 ;;                  1    wreg      void 
  6910 ;; Registers used:
  6911 ;;		wreg
  6912 ;; Tracked objects:
  6913 ;;		On entry : 0/0
  6914 ;;		On exit  : 0/0
  6915 ;;		Unchanged: 0/0
  6916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6917 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6918 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6919 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6920 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6921 ;;Total ram usage:        2 bytes
  6922 ;; Hardware stack levels used: 1
  6923 ;; Hardware stack levels required when called: 2
  6924 ;; This function calls:
  6925 ;;		Nothing
  6926 ;; This function is called by:
  6927 ;;		_color_data_collection
  6928 ;;		_calibrate_white
  6929 ;;		_detect_color
  6930 ;; This function uses a non-reentrant model
  6931 ;;
  6932                           
  6933                           	psect	text36
  6934  0056EC                     __ptext36:
  6935                           	callstack 0
  6936  0056EC                     _LED_G:
  6937                           	callstack 26
  6938  0056EC                     
  6939                           ;color.c: 191:     LATGbits.LATG1 = 0;
  6940  0056EC  927F               	bcf	127,1,c	;volatile
  6941                           
  6942                           ;color.c: 192:     LATFbits.LATF7 = 0;
  6943  0056EE  9E7E               	bcf	126,7,c	;volatile
  6944                           
  6945                           ;color.c: 193:     LATAbits.LATA4 = 1;
  6946  0056F0  8879               	bsf	121,4,c	;volatile
  6947  0056F2                     
  6948                           ;color.c: 194:     _delay((unsigned long)((200)*(64000000/4000.0)));
  6949  0056F2  0E11               	movlw	17
  6950  0056F4  6E04               	movwf	(??_LED_G+1)^0,c
  6951  0056F6  0E3C               	movlw	60
  6952  0056F8  6E03               	movwf	??_LED_G^0,c
  6953  0056FA  0ECB               	movlw	203
  6954  0056FC                     u6797:
  6955  0056FC  2EE8               	decfsz	wreg,f,c
  6956  0056FE  D7FE               	bra	u6797
  6957  005700  2E03               	decfsz	??_LED_G^0,f,c
  6958  005702  D7FC               	bra	u6797
  6959  005704  2E04               	decfsz	(??_LED_G+1)^0,f,c
  6960  005706  D7FA               	bra	u6797
  6961  005708  F000               	nop	
  6962  00570A  0012               	return		;funcret
  6963  00570C                     __end_of_LED_G:
  6964                           	callstack 0
  6965                           
  6966 ;; *************** function _LED_B *****************
  6967 ;; Defined at:
  6968 ;;		line 180 in file "color.c"
  6969 ;; Parameters:    Size  Location     Type
  6970 ;;		None
  6971 ;; Auto vars:     Size  Location     Type
  6972 ;;		None
  6973 ;; Return value:  Size  Location     Type
  6974 ;;                  1    wreg      void 
  6975 ;; Registers used:
  6976 ;;		wreg
  6977 ;; Tracked objects:
  6978 ;;		On entry : 0/0
  6979 ;;		On exit  : 0/0
  6980 ;;		Unchanged: 0/0
  6981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6982 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6983 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6984 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6985 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6986 ;;Total ram usage:        2 bytes
  6987 ;; Hardware stack levels used: 1
  6988 ;; Hardware stack levels required when called: 2
  6989 ;; This function calls:
  6990 ;;		Nothing
  6991 ;; This function is called by:
  6992 ;;		_color_data_collection
  6993 ;;		_calibrate_white
  6994 ;;		_detect_color
  6995 ;; This function uses a non-reentrant model
  6996 ;;
  6997                           
  6998                           	psect	text37
  6999  00570C                     __ptext37:
  7000                           	callstack 0
  7001  00570C                     _LED_B:
  7002                           	callstack 26
  7003  00570C                     
  7004                           ;color.c: 182:     LATGbits.LATG1 = 0;
  7005  00570C  927F               	bcf	127,1,c	;volatile
  7006                           
  7007                           ;color.c: 183:     LATFbits.LATF7 = 1;
  7008  00570E  8E7E               	bsf	126,7,c	;volatile
  7009                           
  7010                           ;color.c: 184:     LATAbits.LATA4 = 0;
  7011  005710  9879               	bcf	121,4,c	;volatile
  7012  005712                     
  7013                           ;color.c: 185:     _delay((unsigned long)((200)*(64000000/4000.0)));
  7014  005712  0E11               	movlw	17
  7015  005714  6E04               	movwf	(??_LED_B+1)^0,c
  7016  005716  0E3C               	movlw	60
  7017  005718  6E03               	movwf	??_LED_B^0,c
  7018  00571A  0ECB               	movlw	203
  7019  00571C                     u6807:
  7020  00571C  2EE8               	decfsz	wreg,f,c
  7021  00571E  D7FE               	bra	u6807
  7022  005720  2E03               	decfsz	??_LED_B^0,f,c
  7023  005722  D7FC               	bra	u6807
  7024  005724  2E04               	decfsz	(??_LED_B+1)^0,f,c
  7025  005726  D7FA               	bra	u6807
  7026  005728  F000               	nop	
  7027  00572A  0012               	return		;funcret
  7028  00572C                     __end_of_LED_B:
  7029                           	callstack 0
  7030                           
  7031 ;; *************** function _buggylight_init *****************
  7032 ;; Defined at:
  7033 ;;		line 12 in file "color.c"
  7034 ;; Parameters:    Size  Location     Type
  7035 ;;		None
  7036 ;; Auto vars:     Size  Location     Type
  7037 ;;		None
  7038 ;; Return value:  Size  Location     Type
  7039 ;;                  1    wreg      void 
  7040 ;; Registers used:
  7041 ;;		None
  7042 ;; Tracked objects:
  7043 ;;		On entry : 0/0
  7044 ;;		On exit  : 0/0
  7045 ;;		Unchanged: 0/0
  7046 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7047 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7048 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7049 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7050 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7051 ;;Total ram usage:        0 bytes
  7052 ;; Hardware stack levels used: 1
  7053 ;; Hardware stack levels required when called: 2
  7054 ;; This function calls:
  7055 ;;		Nothing
  7056 ;; This function is called by:
  7057 ;;		_main
  7058 ;; This function uses a non-reentrant model
  7059 ;;
  7060                           
  7061                           	psect	text38
  7062  0057C0                     __ptext38:
  7063                           	callstack 0
  7064  0057C0                     _buggylight_init:
  7065                           	callstack 28
  7066  0057C0                     
  7067                           ;color.c: 14:     TRISHbits.TRISH1=0;
  7068  0057C0  9288               	bcf	136,1,c	;volatile
  7069                           
  7070                           ;color.c: 15:     TRISDbits.TRISD4=0;
  7071  0057C2  9884               	bcf	132,4,c	;volatile
  7072                           
  7073                           ;color.c: 16:     TRISDbits.TRISD3=0;
  7074  0057C4  9684               	bcf	132,3,c	;volatile
  7075                           
  7076                           ;color.c: 17:     TRISFbits.TRISF0=0;
  7077  0057C6  9086               	bcf	134,0,c	;volatile
  7078                           
  7079                           ;color.c: 18:     TRISHbits.TRISH0=0;
  7080  0057C8  9088               	bcf	136,0,c	;volatile
  7081                           
  7082                           ;color.c: 20:     LATHbits.LATH1 = 0;
  7083  0057CA  9280               	bcf	128,1,c	;volatile
  7084                           
  7085                           ;color.c: 21:     LATDbits.LATD4 = 0;
  7086  0057CC  987C               	bcf	124,4,c	;volatile
  7087                           
  7088                           ;color.c: 22:     LATDbits.LATD3 = 0;
  7089  0057CE  967C               	bcf	124,3,c	;volatile
  7090                           
  7091                           ;color.c: 23:     LATFbits.LATF0 = 0;
  7092  0057D0  907E               	bcf	126,0,c	;volatile
  7093                           
  7094                           ;color.c: 24:     LATHbits.LATH0 = 0;
  7095  0057D2  9080               	bcf	128,0,c	;volatile
  7096  0057D4  0012               	return		;funcret
  7097  0057D6                     __end_of_buggylight_init:
  7098                           	callstack 0
  7099                           
  7100 ;; *************** function _amb_light_measure *****************
  7101 ;; Defined at:
  7102 ;;		line 381 in file "color.c"
  7103 ;; Parameters:    Size  Location     Type
  7104 ;;  amb             2   26[BANK0 ] PTR struct color_rgb
  7105 ;;		 -> main@amb(8), 
  7106 ;; Auto vars:     Size  Location     Type
  7107 ;;  CC_amb_3        2   36[BANK0 ] unsigned int 
  7108 ;;  CC_amb_2        2   34[BANK0 ] unsigned int 
  7109 ;;  CC_amb_1        2   32[BANK0 ] unsigned int 
  7110 ;;  CC_amb_ave      2   30[BANK0 ] unsigned int 
  7111 ;;  upper_bound     2   28[BANK0 ] unsigned int 
  7112 ;; Return value:  Size  Location     Type
  7113 ;;                  2   26[BANK0 ] unsigned int 
  7114 ;; Registers used:
  7115 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  7116 ;; Tracked objects:
  7117 ;;		On entry : 0/0
  7118 ;;		On exit  : 0/0
  7119 ;;		Unchanged: 0/0
  7120 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7121 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7122 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7123 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7124 ;;      Totals:         2      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7125 ;;Total ram usage:       14 bytes
  7126 ;; Hardware stack levels used: 1
  7127 ;; Hardware stack levels required when called: 6
  7128 ;; This function calls:
  7129 ;;		_LED_C
  7130 ;;		___fldiv
  7131 ;;		___xxtofl
  7132 ;;		_color_read_Clear
  7133 ;;		_lroundf
  7134 ;;		_toggle_light
  7135 ;; This function is called by:
  7136 ;;		_main
  7137 ;; This function uses a non-reentrant model
  7138 ;;
  7139                           
  7140                           	psect	text39
  7141  00458A                     __ptext39:
  7142                           	callstack 0
  7143  00458A                     _amb_light_measure:
  7144                           	callstack 24
  7145  00458A  0E00               	movlw	0
  7146  00458C  0100               	movlb	0	; () banked
  7147  00458E  6F83               	movwf	(amb_light_measure@CC_amb_2+1)& (0+255),b
  7148  004590  0E00               	movlw	0
  7149  004592  6F82               	movwf	amb_light_measure@CC_amb_2& (0+255),b
  7150  004594  0E00               	movlw	0
  7151  004596  6F85               	movwf	(amb_light_measure@CC_amb_3+1)& (0+255),b
  7152  004598  0E00               	movlw	0
  7153  00459A  6F84               	movwf	amb_light_measure@CC_amb_3& (0+255),b
  7154  00459C  0E00               	movlw	0
  7155  00459E  6F7D               	movwf	(amb_light_measure@upper_bound+1)& (0+255),b
  7156  0045A0  0E00               	movlw	0
  7157  0045A2  6F7C               	movwf	amb_light_measure@upper_bound& (0+255),b
  7158  0045A4                     
  7159                           ; BSR set to: 0
  7160                           ;color.c: 384:     toggle_light(2,2);
  7161  0045A4  0E02               	movlw	2
  7162  0045A6  6E03               	movwf	toggle_light@toggletime^0,c
  7163  0045A8  0E02               	movlw	2
  7164  0045AA  EC19  F018         	call	_toggle_light
  7165  0045AE                     
  7166                           ;color.c: 385:     LED_C();
  7167  0045AE  EC96  F02B         	call	_LED_C	;wreg free
  7168  0045B2                     
  7169                           ;color.c: 386:     _delay((unsigned long)((500)*(64000000/4000.0)));
  7170  0045B2  0E29               	movlw	41
  7171  0045B4  6E52               	movwf	(??_amb_light_measure+1)^0,c
  7172  0045B6  0E96               	movlw	150
  7173  0045B8  6E51               	movwf	??_amb_light_measure^0,c
  7174  0045BA  0E7F               	movlw	127
  7175  0045BC                     u6817:
  7176  0045BC  2EE8               	decfsz	wreg,f,c
  7177  0045BE  D7FE               	bra	u6817
  7178  0045C0  2E51               	decfsz	??_amb_light_measure^0,f,c
  7179  0045C2  D7FC               	bra	u6817
  7180  0045C4  2E52               	decfsz	(??_amb_light_measure+1)^0,f,c
  7181  0045C6  D7FA               	bra	u6817
  7182  0045C8  F000               	nop	
  7183  0045CA                     
  7184                           ;color.c: 388:     CC_amb_1 = color_read_Clear();
  7185  0045CA  EC19  F029         	call	_color_read_Clear	;wreg free
  7186  0045CE  C007  F080         	movff	?_color_read_Clear,amb_light_measure@CC_amb_1
  7187  0045D2  C008  F081         	movff	?_color_read_Clear+1,amb_light_measure@CC_amb_1+1
  7188  0045D6                     
  7189                           ;color.c: 389:     _delay((unsigned long)((200)*(64000000/4000.0)));
  7190  0045D6  0E11               	movlw	17
  7191  0045D8  6E52               	movwf	(??_amb_light_measure+1)^0,c
  7192  0045DA  0E3C               	movlw	60
  7193  0045DC  6E51               	movwf	??_amb_light_measure^0,c
  7194  0045DE  0ECB               	movlw	203
  7195  0045E0                     u6827:
  7196  0045E0  2EE8               	decfsz	wreg,f,c
  7197  0045E2  D7FE               	bra	u6827
  7198  0045E4  2E51               	decfsz	??_amb_light_measure^0,f,c
  7199  0045E6  D7FC               	bra	u6827
  7200  0045E8  2E52               	decfsz	(??_amb_light_measure+1)^0,f,c
  7201  0045EA  D7FA               	bra	u6827
  7202  0045EC  F000               	nop	
  7203  0045EE                     
  7204                           ;color.c: 391:     CC_amb_2 = color_read_Clear();
  7205  0045EE  EC19  F029         	call	_color_read_Clear	;wreg free
  7206  0045F2  C007  F082         	movff	?_color_read_Clear,amb_light_measure@CC_amb_2
  7207  0045F6  C008  F083         	movff	?_color_read_Clear+1,amb_light_measure@CC_amb_2+1
  7208  0045FA                     
  7209                           ;color.c: 392:     _delay((unsigned long)((200)*(64000000/4000.0)));
  7210  0045FA  0E11               	movlw	17
  7211  0045FC  6E52               	movwf	(??_amb_light_measure+1)^0,c
  7212  0045FE  0E3C               	movlw	60
  7213  004600  6E51               	movwf	??_amb_light_measure^0,c
  7214  004602  0ECB               	movlw	203
  7215  004604                     u6837:
  7216  004604  2EE8               	decfsz	wreg,f,c
  7217  004606  D7FE               	bra	u6837
  7218  004608  2E51               	decfsz	??_amb_light_measure^0,f,c
  7219  00460A  D7FC               	bra	u6837
  7220  00460C  2E52               	decfsz	(??_amb_light_measure+1)^0,f,c
  7221  00460E  D7FA               	bra	u6837
  7222  004610  F000               	nop	
  7223  004612                     
  7224                           ;color.c: 394:     CC_amb_3 = color_read_Clear();
  7225  004612  EC19  F029         	call	_color_read_Clear	;wreg free
  7226  004616  C007  F084         	movff	?_color_read_Clear,amb_light_measure@CC_amb_3
  7227  00461A  C008  F085         	movff	?_color_read_Clear+1,amb_light_measure@CC_amb_3+1
  7228  00461E                     
  7229                           ;color.c: 395:     _delay((unsigned long)((200)*(64000000/4000.0)));
  7230  00461E  0E11               	movlw	17
  7231  004620  6E52               	movwf	(??_amb_light_measure+1)^0,c
  7232  004622  0E3C               	movlw	60
  7233  004624  6E51               	movwf	??_amb_light_measure^0,c
  7234  004626  0ECB               	movlw	203
  7235  004628                     u6847:
  7236  004628  2EE8               	decfsz	wreg,f,c
  7237  00462A  D7FE               	bra	u6847
  7238  00462C  2E51               	decfsz	??_amb_light_measure^0,f,c
  7239  00462E  D7FC               	bra	u6847
  7240  004630  2E52               	decfsz	(??_amb_light_measure+1)^0,f,c
  7241  004632  D7FA               	bra	u6847
  7242  004634  F000               	nop	
  7243  004636                     
  7244                           ;color.c: 397:     CC_amb_ave = lroundf((float)(CC_amb_1 + CC_amb_2 + CC_amb_3)/3);
  7245  004636  0100               	movlb	0	; () banked
  7246  004638  5182               	movf	amb_light_measure@CC_amb_2& (0+255),w,b
  7247  00463A  2580               	addwf	amb_light_measure@CC_amb_1& (0+255),w,b
  7248  00463C  6E51               	movwf	??_amb_light_measure^0,c
  7249  00463E  5183               	movf	(amb_light_measure@CC_amb_2+1)& (0+255),w,b
  7250  004640  2181               	addwfc	(amb_light_measure@CC_amb_1+1)& (0+255),w,b
  7251  004642  6E52               	movwf	(??_amb_light_measure+1)^0,c
  7252  004644  5184               	movf	amb_light_measure@CC_amb_3& (0+255),w,b
  7253  004646  2651               	addwf	??_amb_light_measure^0,f,c
  7254  004648  5185               	movf	(amb_light_measure@CC_amb_3+1)& (0+255),w,b
  7255  00464A  2252               	addwfc	(??_amb_light_measure+1)^0,f,c
  7256  00464C  C051  F003         	movff	??_amb_light_measure,___xxtofl@val
  7257  004650  C052  F004         	movff	??_amb_light_measure+1,___xxtofl@val+1
  7258  004654  6A05               	clrf	(___xxtofl@val+2)^0,c
  7259  004656  6A06               	clrf	(___xxtofl@val+3)^0,c
  7260  004658  0E00               	movlw	0
  7261  00465A  EC5B  F01D         	call	___xxtofl
  7262  00465E  C003  F011         	movff	?___xxtofl,___fldiv@b
  7263  004662  C004  F012         	movff	?___xxtofl+1,___fldiv@b+1
  7264  004666  C005  F013         	movff	?___xxtofl+2,___fldiv@b+2
  7265  00466A  C006  F014         	movff	?___xxtofl+3,___fldiv@b+3
  7266  00466E  0E00               	movlw	0
  7267  004670  6E15               	movwf	___fldiv@a^0,c
  7268  004672  0E00               	movlw	0
  7269  004674  6E16               	movwf	(___fldiv@a+1)^0,c
  7270  004676  0E40               	movlw	64
  7271  004678  6E17               	movwf	(___fldiv@a+2)^0,c
  7272  00467A  0E40               	movlw	64
  7273  00467C  6E18               	movwf	(___fldiv@a+3)^0,c
  7274  00467E  EC58  F013         	call	___fldiv	;wreg free
  7275  004682  C011  F076         	movff	?___fldiv,lroundf@x
  7276  004686  C012  F077         	movff	?___fldiv+1,lroundf@x+1
  7277  00468A  C013  F078         	movff	?___fldiv+2,lroundf@x+2
  7278  00468E  C014  F079         	movff	?___fldiv+3,lroundf@x+3
  7279  004692  EC6D  F02A         	call	_lroundf	;wreg free
  7280  004696  C076  F07E         	movff	?_lroundf,amb_light_measure@CC_amb_ave
  7281  00469A  C077  F07F         	movff	?_lroundf+1,amb_light_measure@CC_amb_ave+1
  7282  00469E                     
  7283                           ;color.c: 399:     toggle_light(2,2);
  7284  00469E  0E02               	movlw	2
  7285  0046A0  6E03               	movwf	toggle_light@toggletime^0,c
  7286  0046A2  0E02               	movlw	2
  7287  0046A4  EC19  F018         	call	_toggle_light
  7288  0046A8                     
  7289                           ;color.c: 401:     return CC_amb_ave;
  7290  0046A8  C07E  F07A         	movff	amb_light_measure@CC_amb_ave,?_amb_light_measure
  7291  0046AC  C07F  F07B         	movff	amb_light_measure@CC_amb_ave+1,?_amb_light_measure+1
  7292  0046B0  0012               	return		;funcret
  7293  0046B2                     __end_of_amb_light_measure:
  7294                           	callstack 0
  7295                           
  7296 ;; *************** function _toggle_light *****************
  7297 ;; Defined at:
  7298 ;;		line 27 in file "color.c"
  7299 ;; Parameters:    Size  Location     Type
  7300 ;;  lightnumber     1    wreg     unsigned char 
  7301 ;;  toggletime      1    2[COMRAM] unsigned char 
  7302 ;; Auto vars:     Size  Location     Type
  7303 ;;  lightnumber     1    6[COMRAM] unsigned char 
  7304 ;;  i               1    5[COMRAM] unsigned char 
  7305 ;; Return value:  Size  Location     Type
  7306 ;;                  1    wreg      void 
  7307 ;; Registers used:
  7308 ;;		wreg, status,2, status,0
  7309 ;; Tracked objects:
  7310 ;;		On entry : 0/0
  7311 ;;		On exit  : 0/0
  7312 ;;		Unchanged: 0/0
  7313 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7314 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7315 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7316 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7317 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7318 ;;Total ram usage:        5 bytes
  7319 ;; Hardware stack levels used: 1
  7320 ;; Hardware stack levels required when called: 2
  7321 ;; This function calls:
  7322 ;;		Nothing
  7323 ;; This function is called by:
  7324 ;;		_amb_light_measure
  7325 ;;		_main
  7326 ;; This function uses a non-reentrant model
  7327 ;;
  7328                           
  7329                           	psect	text40
  7330  003032                     __ptext40:
  7331                           	callstack 0
  7332  003032                     _toggle_light:
  7333                           	callstack 28
  7334                           
  7335                           ;incstack = 0
  7336                           ;toggle_light@lightnumber stored from wreg
  7337  003032  6E07               	movwf	toggle_light@lightnumber^0,c
  7338  003034                     
  7339                           ;color.c: 27: void toggle_light(unsigned char lightnumber, unsigned char toggletime);col
      +                          or.c: 28: {;color.c: 29:     unsigned char i = 0;
  7340  003034  0E00               	movlw	0
  7341  003036  6E06               	movwf	toggle_light@i^0,c
  7342                           
  7343                           ;color.c: 31:     for (i = 0; i < toggletime; i++){
  7344  003038  0E00               	movlw	0
  7345  00303A  6E06               	movwf	toggle_light@i^0,c
  7346  00303C  EF65  F019         	goto	l78
  7347  003040                     l4714:
  7348                           
  7349                           ;color.c: 32:         if (lightnumber == 1){
  7350  003040  0407               	decf	toggle_light@lightnumber^0,w,c
  7351  003042  A4D8               	btfss	status,2,c
  7352  003044  EF26  F018         	goto	u4731
  7353  003048  EF28  F018         	goto	u4730
  7354  00304C                     u4731:
  7355  00304C  EF60  F018         	goto	l4722
  7356  003050                     u4730:
  7357  003050                     
  7358                           ;color.c: 33:             LATHbits.LATH1 = !LATHbits.LATH1;
  7359  003050  A280               	btfss	128,1,c	;volatile
  7360  003052  EF2D  F018         	goto	u4741
  7361  003056  EF31  F018         	goto	u4740
  7362  00305A                     u4741:
  7363  00305A  6A04               	clrf	??_toggle_light^0,c
  7364  00305C  2A04               	incf	??_toggle_light^0,f,c
  7365  00305E  EF32  F018         	goto	u4758
  7366  003062                     u4740:
  7367  003062  6A04               	clrf	??_toggle_light^0,c
  7368  003064                     u4758:
  7369  003064  4604               	rlncf	??_toggle_light^0,f,c
  7370  003066  5080               	movf	128,w,c	;volatile
  7371  003068  1804               	xorwf	??_toggle_light^0,w,c
  7372  00306A  0BFD               	andlw	-3
  7373  00306C  1804               	xorwf	??_toggle_light^0,w,c
  7374  00306E  6E80               	movwf	128,c	;volatile
  7375  003070                     
  7376                           ;color.c: 34:             _delay((unsigned long)((500)*(64000000/4000.0)));
  7377  003070  0E29               	movlw	41
  7378  003072  6E05               	movwf	(??_toggle_light+1)^0,c
  7379  003074  0E96               	movlw	150
  7380  003076  6E04               	movwf	??_toggle_light^0,c
  7381  003078  0E7F               	movlw	127
  7382  00307A                     u6857:
  7383  00307A  2EE8               	decfsz	wreg,f,c
  7384  00307C  D7FE               	bra	u6857
  7385  00307E  2E04               	decfsz	??_toggle_light^0,f,c
  7386  003080  D7FC               	bra	u6857
  7387  003082  2E05               	decfsz	(??_toggle_light+1)^0,f,c
  7388  003084  D7FA               	bra	u6857
  7389  003086  F000               	nop	
  7390  003088                     
  7391                           ;color.c: 35:             LATHbits.LATH1 = !LATHbits.LATH1;
  7392  003088  A280               	btfss	128,1,c	;volatile
  7393  00308A  EF49  F018         	goto	u4761
  7394  00308E  EF4D  F018         	goto	u4760
  7395  003092                     u4761:
  7396  003092  6A04               	clrf	??_toggle_light^0,c
  7397  003094  2A04               	incf	??_toggle_light^0,f,c
  7398  003096  EF4E  F018         	goto	u4778
  7399  00309A                     u4760:
  7400  00309A  6A04               	clrf	??_toggle_light^0,c
  7401  00309C                     u4778:
  7402  00309C  4604               	rlncf	??_toggle_light^0,f,c
  7403  00309E  5080               	movf	128,w,c	;volatile
  7404  0030A0  1804               	xorwf	??_toggle_light^0,w,c
  7405  0030A2  0BFD               	andlw	-3
  7406  0030A4  1804               	xorwf	??_toggle_light^0,w,c
  7407  0030A6  6E80               	movwf	128,c	;volatile
  7408                           
  7409                           ;color.c: 36:             _delay((unsigned long)((500)*(64000000/4000.0)));
  7410  0030A8  0E29               	movlw	41
  7411  0030AA  6E05               	movwf	(??_toggle_light+1)^0,c
  7412  0030AC  0E96               	movlw	150
  7413  0030AE  6E04               	movwf	??_toggle_light^0,c
  7414  0030B0  0E7F               	movlw	127
  7415  0030B2                     u6867:
  7416  0030B2  2EE8               	decfsz	wreg,f,c
  7417  0030B4  D7FE               	bra	u6867
  7418  0030B6  2E04               	decfsz	??_toggle_light^0,f,c
  7419  0030B8  D7FC               	bra	u6867
  7420  0030BA  2E05               	decfsz	(??_toggle_light+1)^0,f,c
  7421  0030BC  D7FA               	bra	u6867
  7422  0030BE  F000               	nop	
  7423  0030C0                     l4722:
  7424                           
  7425                           ;color.c: 38:         if (lightnumber == 2){
  7426  0030C0  0E02               	movlw	2
  7427  0030C2  1807               	xorwf	toggle_light@lightnumber^0,w,c
  7428  0030C4  A4D8               	btfss	status,2,c
  7429  0030C6  EF67  F018         	goto	u4781
  7430  0030CA  EF69  F018         	goto	u4780
  7431  0030CE                     u4781:
  7432  0030CE  EFA1  F018         	goto	l4730
  7433  0030D2                     u4780:
  7434  0030D2                     
  7435                           ;color.c: 39:             LATDbits.LATD4 = !LATDbits.LATD4;
  7436  0030D2  A87C               	btfss	124,4,c	;volatile
  7437  0030D4  EF6E  F018         	goto	u4791
  7438  0030D8  EF72  F018         	goto	u4790
  7439  0030DC                     u4791:
  7440  0030DC  6A04               	clrf	??_toggle_light^0,c
  7441  0030DE  2A04               	incf	??_toggle_light^0,f,c
  7442  0030E0  EF73  F018         	goto	u4808
  7443  0030E4                     u4790:
  7444  0030E4  6A04               	clrf	??_toggle_light^0,c
  7445  0030E6                     u4808:
  7446  0030E6  3A04               	swapf	??_toggle_light^0,f,c
  7447  0030E8  507C               	movf	124,w,c	;volatile
  7448  0030EA  1804               	xorwf	??_toggle_light^0,w,c
  7449  0030EC  0BEF               	andlw	-17
  7450  0030EE  1804               	xorwf	??_toggle_light^0,w,c
  7451  0030F0  6E7C               	movwf	124,c	;volatile
  7452  0030F2                     
  7453                           ;color.c: 40:             _delay((unsigned long)((500)*(64000000/4000.0)));
  7454  0030F2  0E29               	movlw	41
  7455  0030F4  6E05               	movwf	(??_toggle_light+1)^0,c
  7456  0030F6  0E96               	movlw	150
  7457  0030F8  6E04               	movwf	??_toggle_light^0,c
  7458  0030FA  0E7F               	movlw	127
  7459  0030FC                     u6877:
  7460  0030FC  2EE8               	decfsz	wreg,f,c
  7461  0030FE  D7FE               	bra	u6877
  7462  003100  2E04               	decfsz	??_toggle_light^0,f,c
  7463  003102  D7FC               	bra	u6877
  7464  003104  2E05               	decfsz	(??_toggle_light+1)^0,f,c
  7465  003106  D7FA               	bra	u6877
  7466  003108  F000               	nop	
  7467  00310A                     
  7468                           ;color.c: 41:             LATDbits.LATD4 = !LATDbits.LATD4;
  7469  00310A  A87C               	btfss	124,4,c	;volatile
  7470  00310C  EF8A  F018         	goto	u4811
  7471  003110  EF8E  F018         	goto	u4810
  7472  003114                     u4811:
  7473  003114  6A04               	clrf	??_toggle_light^0,c
  7474  003116  2A04               	incf	??_toggle_light^0,f,c
  7475  003118  EF8F  F018         	goto	u4828
  7476  00311C                     u4810:
  7477  00311C  6A04               	clrf	??_toggle_light^0,c
  7478  00311E                     u4828:
  7479  00311E  3A04               	swapf	??_toggle_light^0,f,c
  7480  003120  507C               	movf	124,w,c	;volatile
  7481  003122  1804               	xorwf	??_toggle_light^0,w,c
  7482  003124  0BEF               	andlw	-17
  7483  003126  1804               	xorwf	??_toggle_light^0,w,c
  7484  003128  6E7C               	movwf	124,c	;volatile
  7485                           
  7486                           ;color.c: 42:             _delay((unsigned long)((500)*(64000000/4000.0)));
  7487  00312A  0E29               	movlw	41
  7488  00312C  6E05               	movwf	(??_toggle_light+1)^0,c
  7489  00312E  0E96               	movlw	150
  7490  003130  6E04               	movwf	??_toggle_light^0,c
  7491  003132  0E7F               	movlw	127
  7492  003134                     u6887:
  7493  003134  2EE8               	decfsz	wreg,f,c
  7494  003136  D7FE               	bra	u6887
  7495  003138  2E04               	decfsz	??_toggle_light^0,f,c
  7496  00313A  D7FC               	bra	u6887
  7497  00313C  2E05               	decfsz	(??_toggle_light+1)^0,f,c
  7498  00313E  D7FA               	bra	u6887
  7499  003140  F000               	nop	
  7500  003142                     l4730:
  7501                           
  7502                           ;color.c: 44:         if (lightnumber == 3){
  7503  003142  0E03               	movlw	3
  7504  003144  1807               	xorwf	toggle_light@lightnumber^0,w,c
  7505  003146  A4D8               	btfss	status,2,c
  7506  003148  EFA8  F018         	goto	u4831
  7507  00314C  EFAA  F018         	goto	u4830
  7508  003150                     u4831:
  7509  003150  EFE6  F018         	goto	l4738
  7510  003154                     u4830:
  7511  003154                     
  7512                           ;color.c: 45:             LATDbits.LATD3 = !LATDbits.LATD3;
  7513  003154  A67C               	btfss	124,3,c	;volatile
  7514  003156  EFAF  F018         	goto	u4841
  7515  00315A  EFB3  F018         	goto	u4840
  7516  00315E                     u4841:
  7517  00315E  6A04               	clrf	??_toggle_light^0,c
  7518  003160  2A04               	incf	??_toggle_light^0,f,c
  7519  003162  EFB4  F018         	goto	u4858
  7520  003166                     u4840:
  7521  003166  6A04               	clrf	??_toggle_light^0,c
  7522  003168                     u4858:
  7523  003168  4604               	rlncf	??_toggle_light^0,f,c
  7524  00316A  4604               	rlncf	??_toggle_light^0,f,c
  7525  00316C  4604               	rlncf	??_toggle_light^0,f,c
  7526  00316E  507C               	movf	124,w,c	;volatile
  7527  003170  1804               	xorwf	??_toggle_light^0,w,c
  7528  003172  0BF7               	andlw	-9
  7529  003174  1804               	xorwf	??_toggle_light^0,w,c
  7530  003176  6E7C               	movwf	124,c	;volatile
  7531  003178                     
  7532                           ;color.c: 46:             _delay((unsigned long)((500)*(64000000/4000.0)));
  7533  003178  0E29               	movlw	41
  7534  00317A  6E05               	movwf	(??_toggle_light+1)^0,c
  7535  00317C  0E96               	movlw	150
  7536  00317E  6E04               	movwf	??_toggle_light^0,c
  7537  003180  0E7F               	movlw	127
  7538  003182                     u6897:
  7539  003182  2EE8               	decfsz	wreg,f,c
  7540  003184  D7FE               	bra	u6897
  7541  003186  2E04               	decfsz	??_toggle_light^0,f,c
  7542  003188  D7FC               	bra	u6897
  7543  00318A  2E05               	decfsz	(??_toggle_light+1)^0,f,c
  7544  00318C  D7FA               	bra	u6897
  7545  00318E  F000               	nop	
  7546  003190                     
  7547                           ;color.c: 47:             LATDbits.LATD3 = !LATDbits.LATD3;
  7548  003190  A67C               	btfss	124,3,c	;volatile
  7549  003192  EFCD  F018         	goto	u4861
  7550  003196  EFD1  F018         	goto	u4860
  7551  00319A                     u4861:
  7552  00319A  6A04               	clrf	??_toggle_light^0,c
  7553  00319C  2A04               	incf	??_toggle_light^0,f,c
  7554  00319E  EFD2  F018         	goto	u4878
  7555  0031A2                     u4860:
  7556  0031A2  6A04               	clrf	??_toggle_light^0,c
  7557  0031A4                     u4878:
  7558  0031A4  4604               	rlncf	??_toggle_light^0,f,c
  7559  0031A6  4604               	rlncf	??_toggle_light^0,f,c
  7560  0031A8  4604               	rlncf	??_toggle_light^0,f,c
  7561  0031AA  507C               	movf	124,w,c	;volatile
  7562  0031AC  1804               	xorwf	??_toggle_light^0,w,c
  7563  0031AE  0BF7               	andlw	-9
  7564  0031B0  1804               	xorwf	??_toggle_light^0,w,c
  7565  0031B2  6E7C               	movwf	124,c	;volatile
  7566                           
  7567                           ;color.c: 48:             _delay((unsigned long)((500)*(64000000/4000.0)));
  7568  0031B4  0E29               	movlw	41
  7569  0031B6  6E05               	movwf	(??_toggle_light+1)^0,c
  7570  0031B8  0E96               	movlw	150
  7571  0031BA  6E04               	movwf	??_toggle_light^0,c
  7572  0031BC  0E7F               	movlw	127
  7573  0031BE                     u6907:
  7574  0031BE  2EE8               	decfsz	wreg,f,c
  7575  0031C0  D7FE               	bra	u6907
  7576  0031C2  2E04               	decfsz	??_toggle_light^0,f,c
  7577  0031C4  D7FC               	bra	u6907
  7578  0031C6  2E05               	decfsz	(??_toggle_light+1)^0,f,c
  7579  0031C8  D7FA               	bra	u6907
  7580  0031CA  F000               	nop	
  7581  0031CC                     l4738:
  7582                           
  7583                           ;color.c: 50:         if (lightnumber == 4){
  7584  0031CC  0E04               	movlw	4
  7585  0031CE  1807               	xorwf	toggle_light@lightnumber^0,w,c
  7586  0031D0  A4D8               	btfss	status,2,c
  7587  0031D2  EFED  F018         	goto	u4881
  7588  0031D6  EFEF  F018         	goto	u4880
  7589  0031DA                     u4881:
  7590  0031DA  EF25  F019         	goto	l4746
  7591  0031DE                     u4880:
  7592  0031DE                     
  7593                           ;color.c: 51:             LATFbits.LATF0 = !LATFbits.LATF0;
  7594  0031DE  A07E               	btfss	126,0,c	;volatile
  7595  0031E0  EFF4  F018         	goto	u4891
  7596  0031E4  EFF8  F018         	goto	u4890
  7597  0031E8                     u4891:
  7598  0031E8  6A04               	clrf	??_toggle_light^0,c
  7599  0031EA  2A04               	incf	??_toggle_light^0,f,c
  7600  0031EC  EFF9  F018         	goto	u4908
  7601  0031F0                     u4890:
  7602  0031F0  6A04               	clrf	??_toggle_light^0,c
  7603  0031F2                     u4908:
  7604  0031F2  507E               	movf	126,w,c	;volatile
  7605  0031F4  1804               	xorwf	??_toggle_light^0,w,c
  7606  0031F6  0BFE               	andlw	-2
  7607  0031F8  1804               	xorwf	??_toggle_light^0,w,c
  7608  0031FA  6E7E               	movwf	126,c	;volatile
  7609  0031FC                     
  7610                           ;color.c: 52:             _delay((unsigned long)((500)*(64000000/4000.0)));
  7611  0031FC  0E29               	movlw	41
  7612  0031FE  6E05               	movwf	(??_toggle_light+1)^0,c
  7613  003200  0E96               	movlw	150
  7614  003202  6E04               	movwf	??_toggle_light^0,c
  7615  003204  0E7F               	movlw	127
  7616  003206                     u6917:
  7617  003206  2EE8               	decfsz	wreg,f,c
  7618  003208  D7FE               	bra	u6917
  7619  00320A  2E04               	decfsz	??_toggle_light^0,f,c
  7620  00320C  D7FC               	bra	u6917
  7621  00320E  2E05               	decfsz	(??_toggle_light+1)^0,f,c
  7622  003210  D7FA               	bra	u6917
  7623  003212  F000               	nop	
  7624  003214                     
  7625                           ;color.c: 53:             LATFbits.LATF0 = !LATFbits.LATF0;
  7626  003214  A07E               	btfss	126,0,c	;volatile
  7627  003216  EF0F  F019         	goto	u4911
  7628  00321A  EF13  F019         	goto	u4910
  7629  00321E                     u4911:
  7630  00321E  6A04               	clrf	??_toggle_light^0,c
  7631  003220  2A04               	incf	??_toggle_light^0,f,c
  7632  003222  EF14  F019         	goto	u4928
  7633  003226                     u4910:
  7634  003226  6A04               	clrf	??_toggle_light^0,c
  7635  003228                     u4928:
  7636  003228  507E               	movf	126,w,c	;volatile
  7637  00322A  1804               	xorwf	??_toggle_light^0,w,c
  7638  00322C  0BFE               	andlw	-2
  7639  00322E  1804               	xorwf	??_toggle_light^0,w,c
  7640  003230  6E7E               	movwf	126,c	;volatile
  7641                           
  7642                           ;color.c: 54:             _delay((unsigned long)((500)*(64000000/4000.0)));
  7643  003232  0E29               	movlw	41
  7644  003234  6E05               	movwf	(??_toggle_light+1)^0,c
  7645  003236  0E96               	movlw	150
  7646  003238  6E04               	movwf	??_toggle_light^0,c
  7647  00323A  0E7F               	movlw	127
  7648  00323C                     u6927:
  7649  00323C  2EE8               	decfsz	wreg,f,c
  7650  00323E  D7FE               	bra	u6927
  7651  003240  2E04               	decfsz	??_toggle_light^0,f,c
  7652  003242  D7FC               	bra	u6927
  7653  003244  2E05               	decfsz	(??_toggle_light+1)^0,f,c
  7654  003246  D7FA               	bra	u6927
  7655  003248  F000               	nop	
  7656  00324A                     l4746:
  7657                           
  7658                           ;color.c: 56:         if (lightnumber == 3){
  7659  00324A  0E03               	movlw	3
  7660  00324C  1807               	xorwf	toggle_light@lightnumber^0,w,c
  7661  00324E  A4D8               	btfss	status,2,c
  7662  003250  EF2C  F019         	goto	u4931
  7663  003254  EF2E  F019         	goto	u4930
  7664  003258                     u4931:
  7665  003258  EF64  F019         	goto	l4754
  7666  00325C                     u4930:
  7667  00325C                     
  7668                           ;color.c: 57:             LATHbits.LATH0 = !LATHbits.LATH0;
  7669  00325C  A080               	btfss	128,0,c	;volatile
  7670  00325E  EF33  F019         	goto	u4941
  7671  003262  EF37  F019         	goto	u4940
  7672  003266                     u4941:
  7673  003266  6A04               	clrf	??_toggle_light^0,c
  7674  003268  2A04               	incf	??_toggle_light^0,f,c
  7675  00326A  EF38  F019         	goto	u4958
  7676  00326E                     u4940:
  7677  00326E  6A04               	clrf	??_toggle_light^0,c
  7678  003270                     u4958:
  7679  003270  5080               	movf	128,w,c	;volatile
  7680  003272  1804               	xorwf	??_toggle_light^0,w,c
  7681  003274  0BFE               	andlw	-2
  7682  003276  1804               	xorwf	??_toggle_light^0,w,c
  7683  003278  6E80               	movwf	128,c	;volatile
  7684  00327A                     
  7685                           ;color.c: 58:             _delay((unsigned long)((500)*(64000000/4000.0)));
  7686  00327A  0E29               	movlw	41
  7687  00327C  6E05               	movwf	(??_toggle_light+1)^0,c
  7688  00327E  0E96               	movlw	150
  7689  003280  6E04               	movwf	??_toggle_light^0,c
  7690  003282  0E7F               	movlw	127
  7691  003284                     u6937:
  7692  003284  2EE8               	decfsz	wreg,f,c
  7693  003286  D7FE               	bra	u6937
  7694  003288  2E04               	decfsz	??_toggle_light^0,f,c
  7695  00328A  D7FC               	bra	u6937
  7696  00328C  2E05               	decfsz	(??_toggle_light+1)^0,f,c
  7697  00328E  D7FA               	bra	u6937
  7698  003290  F000               	nop	
  7699  003292                     
  7700                           ;color.c: 59:             LATHbits.LATH0 = !LATHbits.LATH0;
  7701  003292  A080               	btfss	128,0,c	;volatile
  7702  003294  EF4E  F019         	goto	u4961
  7703  003298  EF52  F019         	goto	u4960
  7704  00329C                     u4961:
  7705  00329C  6A04               	clrf	??_toggle_light^0,c
  7706  00329E  2A04               	incf	??_toggle_light^0,f,c
  7707  0032A0  EF53  F019         	goto	u4978
  7708  0032A4                     u4960:
  7709  0032A4  6A04               	clrf	??_toggle_light^0,c
  7710  0032A6                     u4978:
  7711  0032A6  5080               	movf	128,w,c	;volatile
  7712  0032A8  1804               	xorwf	??_toggle_light^0,w,c
  7713  0032AA  0BFE               	andlw	-2
  7714  0032AC  1804               	xorwf	??_toggle_light^0,w,c
  7715  0032AE  6E80               	movwf	128,c	;volatile
  7716                           
  7717                           ;color.c: 60:             _delay((unsigned long)((500)*(64000000/4000.0)));
  7718  0032B0  0E29               	movlw	41
  7719  0032B2  6E05               	movwf	(??_toggle_light+1)^0,c
  7720  0032B4  0E96               	movlw	150
  7721  0032B6  6E04               	movwf	??_toggle_light^0,c
  7722  0032B8  0E7F               	movlw	127
  7723  0032BA                     u6947:
  7724  0032BA  2EE8               	decfsz	wreg,f,c
  7725  0032BC  D7FE               	bra	u6947
  7726  0032BE  2E04               	decfsz	??_toggle_light^0,f,c
  7727  0032C0  D7FC               	bra	u6947
  7728  0032C2  2E05               	decfsz	(??_toggle_light+1)^0,f,c
  7729  0032C4  D7FA               	bra	u6947
  7730  0032C6  F000               	nop	
  7731  0032C8                     l4754:
  7732                           
  7733                           ;color.c: 62:     }
  7734  0032C8  2A06               	incf	toggle_light@i^0,f,c
  7735  0032CA                     l78:
  7736  0032CA  5003               	movf	toggle_light@toggletime^0,w,c
  7737  0032CC  5C06               	subwf	toggle_light@i^0,w,c
  7738  0032CE  A0D8               	btfss	status,0,c
  7739  0032D0  EF6C  F019         	goto	u4981
  7740  0032D4  EF6E  F019         	goto	u4980
  7741  0032D8                     u4981:
  7742  0032D8  EF20  F018         	goto	l4714
  7743  0032DC                     u4980:
  7744  0032DC  0012               	return		;funcret
  7745  0032DE                     __end_of_toggle_light:
  7746                           	callstack 0
  7747                           
  7748 ;; *************** function _lroundf *****************
  7749 ;; Defined at:
  7750 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\lroundf.c"
  7751 ;; Parameters:    Size  Location     Type
  7752 ;;  x               4   22[BANK0 ] float 
  7753 ;; Auto vars:     Size  Location     Type
  7754 ;;		None
  7755 ;; Return value:  Size  Location     Type
  7756 ;;                  4   22[BANK0 ] long 
  7757 ;; Registers used:
  7758 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  7759 ;; Tracked objects:
  7760 ;;		On entry : 0/0
  7761 ;;		On exit  : 0/0
  7762 ;;		Unchanged: 0/0
  7763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7764 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7765 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7766 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7767 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7768 ;;Total ram usage:        4 bytes
  7769 ;; Hardware stack levels used: 1
  7770 ;; Hardware stack levels required when called: 5
  7771 ;; This function calls:
  7772 ;;		___fltol
  7773 ;;		_roundf
  7774 ;; This function is called by:
  7775 ;;		_detect_color
  7776 ;;		_amb_light_measure
  7777 ;;		_distance_measure
  7778 ;;		_check_color_reading
  7779 ;; This function uses a non-reentrant model
  7780 ;;
  7781                           
  7782                           	psect	text41
  7783  0054DA                     __ptext41:
  7784                           	callstack 0
  7785  0054DA                     _lroundf:
  7786                           	callstack 23
  7787  0054DA  C076  F043         	movff	lroundf@x,roundf@x
  7788  0054DE  C077  F044         	movff	lroundf@x+1,roundf@x+1
  7789  0054E2  C078  F045         	movff	lroundf@x+2,roundf@x+2
  7790  0054E6  C079  F046         	movff	lroundf@x+3,roundf@x+3
  7791  0054EA  EC7F  F011         	call	_roundf	;wreg free
  7792  0054EE  C043  F072         	movff	?_roundf,___fltol@f1
  7793  0054F2  C044  F073         	movff	?_roundf+1,___fltol@f1+1
  7794  0054F6  C045  F074         	movff	?_roundf+2,___fltol@f1+2
  7795  0054FA  C046  F075         	movff	?_roundf+3,___fltol@f1+3
  7796  0054FE  EC59  F023         	call	___fltol	;wreg free
  7797  005502  C072  F076         	movff	?___fltol,?_lroundf
  7798  005506  C073  F077         	movff	?___fltol+1,?_lroundf+1
  7799  00550A  C074  F078         	movff	?___fltol+2,?_lroundf+2
  7800  00550E  C075  F079         	movff	?___fltol+3,?_lroundf+3
  7801  005512  0012               	return		;funcret
  7802  005514                     __end_of_lroundf:
  7803                           	callstack 0
  7804                           
  7805 ;; *************** function _roundf *****************
  7806 ;; Defined at:
  7807 ;;		line 12 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\roundf.c"
  7808 ;; Parameters:    Size  Location     Type
  7809 ;;  x               4   66[COMRAM] float 
  7810 ;; Auto vars:     Size  Location     Type
  7811 ;;  y               4   14[BANK0 ] float 
  7812 ;;  u               4   10[BANK0 ] struct .
  7813 ;;  e               2    4[BANK0 ] int 
  7814 ;; Return value:  Size  Location     Type
  7815 ;;                  4   66[COMRAM] float 
  7816 ;; Registers used:
  7817 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  7818 ;; Tracked objects:
  7819 ;;		On entry : 0/0
  7820 ;;		On exit  : 0/0
  7821 ;;		Unchanged: 0/0
  7822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7823 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7824 ;;      Locals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7825 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7826 ;;      Totals:         8      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7827 ;;Total ram usage:       26 bytes
  7828 ;; Hardware stack levels used: 1
  7829 ;; Hardware stack levels required when called: 4
  7830 ;; This function calls:
  7831 ;;		___fladd
  7832 ;;		___flge
  7833 ;;		___flmul
  7834 ;;		___flneg
  7835 ;;		___flsub
  7836 ;; This function is called by:
  7837 ;;		_lroundf
  7838 ;; This function uses a non-reentrant model
  7839 ;;
  7840                           
  7841                           	psect	text42
  7842  0022FE                     __ptext42:
  7843                           	callstack 0
  7844  0022FE                     _roundf:
  7845                           	callstack 23
  7846  0022FE  C18C  F06A         	movff	roundf@F527,roundf@u
  7847  002302  C18D  F06B         	movff	roundf@F527+1,roundf@u+1
  7848  002306  C18E  F06C         	movff	roundf@F527+2,roundf@u+2
  7849  00230A  C18F  F06D         	movff	roundf@F527+3,roundf@u+3
  7850  00230E  C043  F06A         	movff	roundf@x,roundf@u
  7851  002312  C044  F06B         	movff	roundf@x+1,roundf@u+1
  7852  002316  C045  F06C         	movff	roundf@x+2,roundf@u+2
  7853  00231A  C046  F06D         	movff	roundf@x+3,roundf@u+3
  7854  00231E  C06A  F047         	movff	roundf@u,??_roundf
  7855  002322  C06B  F048         	movff	roundf@u+1,??_roundf+1
  7856  002326  C06C  F049         	movff	roundf@u+2,??_roundf+2
  7857  00232A  C06D  F04A         	movff	roundf@u+3,??_roundf+3
  7858  00232E  0E18               	movlw	24
  7859  002330  EF9F  F011         	goto	u6250
  7860  002334                     u6255:
  7861  002334  90D8               	bcf	status,0,c
  7862  002336  324A               	rrcf	(??_roundf+3)^0,f,c
  7863  002338  3249               	rrcf	(??_roundf+2)^0,f,c
  7864  00233A  3248               	rrcf	(??_roundf+1)^0,f,c
  7865  00233C  3247               	rrcf	??_roundf^0,f,c
  7866  00233E                     u6250:
  7867  00233E  2EE8               	decfsz	wreg,f,c
  7868  002340  EF9A  F011         	goto	u6255
  7869  002344  5047               	movf	??_roundf^0,w,c
  7870  002346  0100               	movlb	0	; () banked
  7871  002348  6F64               	movwf	roundf@e& (0+255),b
  7872  00234A  6B65               	clrf	(roundf@e+1)& (0+255),b
  7873  00234C  BF65               	btfsc	(roundf@e+1)& (0+255),7,b
  7874  00234E  EFB2  F011         	goto	u6261
  7875  002352  5165               	movf	(roundf@e+1)& (0+255),w,b
  7876  002354  E109               	bnz	u6260
  7877  002356  0E96               	movlw	150
  7878  002358  5D64               	subwf	roundf@e& (0+255),w,b
  7879  00235A  A0D8               	btfss	status,0,c
  7880  00235C  EFB2  F011         	goto	u6261
  7881  002360  EFB4  F011         	goto	u6260
  7882  002364                     u6261:
  7883  002364  EFBE  F011         	goto	l5888
  7884  002368                     u6260:
  7885  002368                     
  7886                           ; BSR set to: 0
  7887  002368  C043  F043         	movff	roundf@x,?_roundf
  7888  00236C  C044  F044         	movff	roundf@x+1,?_roundf+1
  7889  002370  C045  F045         	movff	roundf@x+2,?_roundf+2
  7890  002374  C046  F046         	movff	roundf@x+3,?_roundf+3
  7891  002378  EF57  F013         	goto	l1535
  7892  00237C                     l5888:
  7893                           
  7894                           ; BSR set to: 0
  7895  00237C  C06A  F047         	movff	roundf@u,??_roundf
  7896  002380  C06B  F048         	movff	roundf@u+1,??_roundf+1
  7897  002384  C06C  F049         	movff	roundf@u+2,??_roundf+2
  7898  002388  C06D  F04A         	movff	roundf@u+3,??_roundf+3
  7899  00238C  0E20               	movlw	32
  7900  00238E  EFCE  F011         	goto	u6270
  7901  002392                     u6275:
  7902  002392  90D8               	bcf	status,0,c
  7903  002394  324A               	rrcf	(??_roundf+3)^0,f,c
  7904  002396  3249               	rrcf	(??_roundf+2)^0,f,c
  7905  002398  3248               	rrcf	(??_roundf+1)^0,f,c
  7906  00239A  3247               	rrcf	??_roundf^0,f,c
  7907  00239C                     u6270:
  7908  00239C  2EE8               	decfsz	wreg,f,c
  7909  00239E  EFC9  F011         	goto	u6275
  7910  0023A2  5047               	movf	??_roundf^0,w,c
  7911  0023A4  1048               	iorwf	(??_roundf+1)^0,w,c
  7912  0023A6  1049               	iorwf	(??_roundf+2)^0,w,c
  7913  0023A8  104A               	iorwf	(??_roundf+3)^0,w,c
  7914  0023AA  B4D8               	btfsc	status,2,c
  7915  0023AC  EFDA  F011         	goto	u6281
  7916  0023B0  EFDC  F011         	goto	u6280
  7917  0023B4                     u6281:
  7918  0023B4  EFEE  F011         	goto	l5892
  7919  0023B8                     u6280:
  7920  0023B8                     
  7921                           ; BSR set to: 0
  7922  0023B8  C043  F003         	movff	roundf@x,___flneg@f1
  7923  0023BC  C044  F004         	movff	roundf@x+1,___flneg@f1+1
  7924  0023C0  C045  F005         	movff	roundf@x+2,___flneg@f1+2
  7925  0023C4  C046  F006         	movff	roundf@x+3,___flneg@f1+3
  7926  0023C8  EC8A  F02A         	call	___flneg	;wreg free
  7927  0023CC  C003  F043         	movff	?___flneg,roundf@x
  7928  0023D0  C004  F044         	movff	?___flneg+1,roundf@x+1
  7929  0023D4  C005  F045         	movff	?___flneg+2,roundf@x+2
  7930  0023D8  C006  F046         	movff	?___flneg+3,roundf@x+3
  7931  0023DC                     l5892:
  7932  0023DC  0100               	movlb	0	; () banked
  7933  0023DE  BF65               	btfsc	(roundf@e+1)& (0+255),7,b
  7934  0023E0  EFFD  F011         	goto	u6290
  7935  0023E4  5165               	movf	(roundf@e+1)& (0+255),w,b
  7936  0023E6  E107               	bnz	u6291
  7937  0023E8  0E7E               	movlw	126
  7938  0023EA  5D64               	subwf	roundf@e& (0+255),w,b
  7939  0023EC  B0D8               	btfsc	status,0,c
  7940  0023EE  EFFB  F011         	goto	u6291
  7941  0023F2  EFFD  F011         	goto	u6290
  7942  0023F6                     u6291:
  7943  0023F6  EF19  F012         	goto	l5898
  7944  0023FA                     u6290:
  7945  0023FA                     
  7946                           ; BSR set to: 0
  7947  0023FA  C06A  F02A         	movff	roundf@u,___flmul@b
  7948  0023FE  C06B  F02B         	movff	roundf@u+1,___flmul@b+1
  7949  002402  C06C  F02C         	movff	roundf@u+2,___flmul@b+2
  7950  002406  C06D  F02D         	movff	roundf@u+3,___flmul@b+3
  7951  00240A  0E00               	movlw	0
  7952  00240C  6E2E               	movwf	___flmul@a^0,c
  7953  00240E  0E00               	movlw	0
  7954  002410  6E2F               	movwf	(___flmul@a+1)^0,c
  7955  002412  0E00               	movlw	0
  7956  002414  6E30               	movwf	(___flmul@a+2)^0,c
  7957  002416  0E00               	movlw	0
  7958  002418  6E31               	movwf	(___flmul@a+3)^0,c
  7959  00241A  EC6A  F00F         	call	___flmul	;wreg free
  7960  00241E  C02A  F043         	movff	?___flmul,?_roundf
  7961  002422  C02B  F044         	movff	?___flmul+1,?_roundf+1
  7962  002426  C02C  F045         	movff	?___flmul+2,?_roundf+2
  7963  00242A  C02D  F046         	movff	?___flmul+3,?_roundf+3
  7964  00242E  EF57  F013         	goto	l1535
  7965  002432                     l5898:
  7966                           
  7967                           ; BSR set to: 0
  7968  002432  0E00               	movlw	0
  7969  002434  6E07               	movwf	___fladd@a^0,c
  7970  002436  0E00               	movlw	0
  7971  002438  6E08               	movwf	(___fladd@a+1)^0,c
  7972  00243A  0E00               	movlw	0
  7973  00243C  6E09               	movwf	(___fladd@a+2)^0,c
  7974  00243E  0E4B               	movlw	75
  7975  002440  6E0A               	movwf	(___fladd@a+3)^0,c
  7976  002442  C043  F003         	movff	roundf@x,___fladd@b
  7977  002446  C044  F004         	movff	roundf@x+1,___fladd@b+1
  7978  00244A  C045  F005         	movff	roundf@x+2,___fladd@b+2
  7979  00244E  C046  F006         	movff	roundf@x+3,___fladd@b+3
  7980  002452  EC0A  F00D         	call	___fladd	;wreg free
  7981  002456  C003  F066         	movff	?___fladd,_roundf$3191
  7982  00245A  C004  F067         	movff	?___fladd+1,_roundf$3191+1
  7983  00245E  C005  F068         	movff	?___fladd+2,_roundf$3191+2
  7984  002462  C006  F069         	movff	?___fladd+3,_roundf$3191+3
  7985  002466  0E00               	movlw	0
  7986  002468  6E07               	movwf	___fladd@a^0,c
  7987  00246A  0E00               	movlw	0
  7988  00246C  6E08               	movwf	(___fladd@a+1)^0,c
  7989  00246E  0E00               	movlw	0
  7990  002470  6E09               	movwf	(___fladd@a+2)^0,c
  7991  002472  0ECB               	movlw	203
  7992  002474  6E0A               	movwf	(___fladd@a+3)^0,c
  7993  002476  C066  F003         	movff	_roundf$3191,___fladd@b
  7994  00247A  C067  F004         	movff	_roundf$3191+1,___fladd@b+1
  7995  00247E  C068  F005         	movff	_roundf$3191+2,___fladd@b+2
  7996  002482  C069  F006         	movff	_roundf$3191+3,___fladd@b+3
  7997  002486  EC0A  F00D         	call	___fladd	;wreg free
  7998  00248A  C003  F060         	movff	?___fladd,_roundf$3192
  7999  00248E  C004  F061         	movff	?___fladd+1,_roundf$3192+1
  8000  002492  C005  F062         	movff	?___fladd+2,_roundf$3192+2
  8001  002496  C006  F063         	movff	?___fladd+3,_roundf$3192+3
  8002  00249A  C060  F013         	movff	_roundf$3192,___flsub@b
  8003  00249E  C061  F014         	movff	_roundf$3192+1,___flsub@b+1
  8004  0024A2  C062  F015         	movff	_roundf$3192+2,___flsub@b+2
  8005  0024A6  C063  F016         	movff	_roundf$3192+3,___flsub@b+3
  8006  0024AA  C043  F017         	movff	roundf@x,___flsub@a
  8007  0024AE  C044  F018         	movff	roundf@x+1,___flsub@a+1
  8008  0024B2  C045  F019         	movff	roundf@x+2,___flsub@a+2
  8009  0024B6  C046  F01A         	movff	roundf@x+3,___flsub@a+3
  8010  0024BA  EC67  F029         	call	___flsub	;wreg free
  8011  0024BE  C013  F06E         	movff	?___flsub,roundf@y
  8012  0024C2  C014  F06F         	movff	?___flsub+1,roundf@y+1
  8013  0024C6  C015  F070         	movff	?___flsub+2,roundf@y+2
  8014  0024CA  C016  F071         	movff	?___flsub+3,roundf@y+3
  8015  0024CE  0E00               	movlw	0
  8016  0024D0  6E03               	movwf	___flge@ff1^0,c
  8017  0024D2  0E00               	movlw	0
  8018  0024D4  6E04               	movwf	(___flge@ff1+1)^0,c
  8019  0024D6  0E00               	movlw	0
  8020  0024D8  6E05               	movwf	(___flge@ff1+2)^0,c
  8021  0024DA  0E3F               	movlw	63
  8022  0024DC  6E06               	movwf	(___flge@ff1+3)^0,c
  8023  0024DE  C06E  F007         	movff	roundf@y,___flge@ff2
  8024  0024E2  C06F  F008         	movff	roundf@y+1,___flge@ff2+1
  8025  0024E6  C070  F009         	movff	roundf@y+2,___flge@ff2+2
  8026  0024EA  C071  F00A         	movff	roundf@y+3,___flge@ff2+3
  8027  0024EE  ECDD  F023         	call	___flge	;wreg free
  8028  0024F2  B0D8               	btfsc	status,0,c
  8029  0024F4  EF7E  F012         	goto	u6301
  8030  0024F8  EF80  F012         	goto	u6300
  8031  0024FC                     u6301:
  8032  0024FC  EFB6  F012         	goto	l5902
  8033  002500                     u6300:
  8034  002500  C043  F007         	movff	roundf@x,___fladd@a
  8035  002504  C044  F008         	movff	roundf@x+1,___fladd@a+1
  8036  002508  C045  F009         	movff	roundf@x+2,___fladd@a+2
  8037  00250C  C046  F00A         	movff	roundf@x+3,___fladd@a+3
  8038  002510  C06E  F003         	movff	roundf@y,___fladd@b
  8039  002514  C06F  F004         	movff	roundf@y+1,___fladd@b+1
  8040  002518  C070  F005         	movff	roundf@y+2,___fladd@b+2
  8041  00251C  C071  F006         	movff	roundf@y+3,___fladd@b+3
  8042  002520  EC0A  F00D         	call	___fladd	;wreg free
  8043  002524  C003  F066         	movff	?___fladd,_roundf$3191
  8044  002528  C004  F067         	movff	?___fladd+1,_roundf$3191+1
  8045  00252C  C005  F068         	movff	?___fladd+2,_roundf$3191+2
  8046  002530  C006  F069         	movff	?___fladd+3,_roundf$3191+3
  8047  002534  C066  F003         	movff	_roundf$3191,___fladd@b
  8048  002538  C067  F004         	movff	_roundf$3191+1,___fladd@b+1
  8049  00253C  C068  F005         	movff	_roundf$3191+2,___fladd@b+2
  8050  002540  C069  F006         	movff	_roundf$3191+3,___fladd@b+3
  8051  002544  0E00               	movlw	0
  8052  002546  6E07               	movwf	___fladd@a^0,c
  8053  002548  0E00               	movlw	0
  8054  00254A  6E08               	movwf	(___fladd@a+1)^0,c
  8055  00254C  0E80               	movlw	128
  8056  00254E  6E09               	movwf	(___fladd@a+2)^0,c
  8057  002550  0EBF               	movlw	191
  8058  002552  6E0A               	movwf	(___fladd@a+3)^0,c
  8059  002554  EC0A  F00D         	call	___fladd	;wreg free
  8060  002558  C003  F06E         	movff	?___fladd,roundf@y
  8061  00255C  C004  F06F         	movff	?___fladd+1,roundf@y+1
  8062  002560  C005  F070         	movff	?___fladd+2,roundf@y+2
  8063  002564  C006  F071         	movff	?___fladd+3,roundf@y+3
  8064  002568  EF1F  F013         	goto	l5908
  8065  00256C                     l5902:
  8066  00256C  0E00               	movlw	0
  8067  00256E  6E03               	movwf	___flge@ff1^0,c
  8068  002570  0E00               	movlw	0
  8069  002572  6E04               	movwf	(___flge@ff1+1)^0,c
  8070  002574  0E00               	movlw	0
  8071  002576  6E05               	movwf	(___flge@ff1+2)^0,c
  8072  002578  0EBF               	movlw	191
  8073  00257A  6E06               	movwf	(___flge@ff1+3)^0,c
  8074  00257C  C06E  F007         	movff	roundf@y,___flge@ff2
  8075  002580  C06F  F008         	movff	roundf@y+1,___flge@ff2+1
  8076  002584  C070  F009         	movff	roundf@y+2,___flge@ff2+2
  8077  002588  C071  F00A         	movff	roundf@y+3,___flge@ff2+3
  8078  00258C  ECDD  F023         	call	___flge	;wreg free
  8079  002590  A0D8               	btfss	status,0,c
  8080  002592  EFCD  F012         	goto	u6311
  8081  002596  EFCF  F012         	goto	u6310
  8082  00259A                     u6311:
  8083  00259A  EF05  F013         	goto	l5906
  8084  00259E                     u6310:
  8085  00259E  C043  F007         	movff	roundf@x,___fladd@a
  8086  0025A2  C044  F008         	movff	roundf@x+1,___fladd@a+1
  8087  0025A6  C045  F009         	movff	roundf@x+2,___fladd@a+2
  8088  0025AA  C046  F00A         	movff	roundf@x+3,___fladd@a+3
  8089  0025AE  C06E  F003         	movff	roundf@y,___fladd@b
  8090  0025B2  C06F  F004         	movff	roundf@y+1,___fladd@b+1
  8091  0025B6  C070  F005         	movff	roundf@y+2,___fladd@b+2
  8092  0025BA  C071  F006         	movff	roundf@y+3,___fladd@b+3
  8093  0025BE  EC0A  F00D         	call	___fladd	;wreg free
  8094  0025C2  C003  F066         	movff	?___fladd,_roundf$3191
  8095  0025C6  C004  F067         	movff	?___fladd+1,_roundf$3191+1
  8096  0025CA  C005  F068         	movff	?___fladd+2,_roundf$3191+2
  8097  0025CE  C006  F069         	movff	?___fladd+3,_roundf$3191+3
  8098  0025D2  C066  F003         	movff	_roundf$3191,___fladd@b
  8099  0025D6  C067  F004         	movff	_roundf$3191+1,___fladd@b+1
  8100  0025DA  C068  F005         	movff	_roundf$3191+2,___fladd@b+2
  8101  0025DE  C069  F006         	movff	_roundf$3191+3,___fladd@b+3
  8102  0025E2  0E00               	movlw	0
  8103  0025E4  6E07               	movwf	___fladd@a^0,c
  8104  0025E6  0E00               	movlw	0
  8105  0025E8  6E08               	movwf	(___fladd@a+1)^0,c
  8106  0025EA  0E80               	movlw	128
  8107  0025EC  6E09               	movwf	(___fladd@a+2)^0,c
  8108  0025EE  0E3F               	movlw	63
  8109  0025F0  6E0A               	movwf	(___fladd@a+3)^0,c
  8110  0025F2  EC0A  F00D         	call	___fladd	;wreg free
  8111  0025F6  C003  F06E         	movff	?___fladd,roundf@y
  8112  0025FA  C004  F06F         	movff	?___fladd+1,roundf@y+1
  8113  0025FE  C005  F070         	movff	?___fladd+2,roundf@y+2
  8114  002602  C006  F071         	movff	?___fladd+3,roundf@y+3
  8115  002606  EF1F  F013         	goto	l5908
  8116  00260A                     l5906:
  8117  00260A  C06E  F003         	movff	roundf@y,___fladd@b
  8118  00260E  C06F  F004         	movff	roundf@y+1,___fladd@b+1
  8119  002612  C070  F005         	movff	roundf@y+2,___fladd@b+2
  8120  002616  C071  F006         	movff	roundf@y+3,___fladd@b+3
  8121  00261A  C043  F007         	movff	roundf@x,___fladd@a
  8122  00261E  C044  F008         	movff	roundf@x+1,___fladd@a+1
  8123  002622  C045  F009         	movff	roundf@x+2,___fladd@a+2
  8124  002626  C046  F00A         	movff	roundf@x+3,___fladd@a+3
  8125  00262A  EC0A  F00D         	call	___fladd	;wreg free
  8126  00262E  C003  F06E         	movff	?___fladd,roundf@y
  8127  002632  C004  F06F         	movff	?___fladd+1,roundf@y+1
  8128  002636  C005  F070         	movff	?___fladd+2,roundf@y+2
  8129  00263A  C006  F071         	movff	?___fladd+3,roundf@y+3
  8130  00263E                     l5908:
  8131  00263E  C06A  F047         	movff	roundf@u,??_roundf
  8132  002642  C06B  F048         	movff	roundf@u+1,??_roundf+1
  8133  002646  C06C  F049         	movff	roundf@u+2,??_roundf+2
  8134  00264A  C06D  F04A         	movff	roundf@u+3,??_roundf+3
  8135  00264E  0E20               	movlw	32
  8136  002650  EF2F  F013         	goto	u6320
  8137  002654                     u6325:
  8138  002654  90D8               	bcf	status,0,c
  8139  002656  324A               	rrcf	(??_roundf+3)^0,f,c
  8140  002658  3249               	rrcf	(??_roundf+2)^0,f,c
  8141  00265A  3248               	rrcf	(??_roundf+1)^0,f,c
  8142  00265C  3247               	rrcf	??_roundf^0,f,c
  8143  00265E                     u6320:
  8144  00265E  2EE8               	decfsz	wreg,f,c
  8145  002660  EF2A  F013         	goto	u6325
  8146  002664  5047               	movf	??_roundf^0,w,c
  8147  002666  1048               	iorwf	(??_roundf+1)^0,w,c
  8148  002668  1049               	iorwf	(??_roundf+2)^0,w,c
  8149  00266A  104A               	iorwf	(??_roundf+3)^0,w,c
  8150  00266C  B4D8               	btfsc	status,2,c
  8151  00266E  EF3B  F013         	goto	u6331
  8152  002672  EF3D  F013         	goto	u6330
  8153  002676                     u6331:
  8154  002676  EF4F  F013         	goto	l5912
  8155  00267A                     u6330:
  8156  00267A  C06E  F003         	movff	roundf@y,___flneg@f1
  8157  00267E  C06F  F004         	movff	roundf@y+1,___flneg@f1+1
  8158  002682  C070  F005         	movff	roundf@y+2,___flneg@f1+2
  8159  002686  C071  F006         	movff	roundf@y+3,___flneg@f1+3
  8160  00268A  EC8A  F02A         	call	___flneg	;wreg free
  8161  00268E  C003  F06E         	movff	?___flneg,roundf@y
  8162  002692  C004  F06F         	movff	?___flneg+1,roundf@y+1
  8163  002696  C005  F070         	movff	?___flneg+2,roundf@y+2
  8164  00269A  C006  F071         	movff	?___flneg+3,roundf@y+3
  8165  00269E                     l5912:
  8166  00269E  C06E  F043         	movff	roundf@y,?_roundf
  8167  0026A2  C06F  F044         	movff	roundf@y+1,?_roundf+1
  8168  0026A6  C070  F045         	movff	roundf@y+2,?_roundf+2
  8169  0026AA  C071  F046         	movff	roundf@y+3,?_roundf+3
  8170  0026AE                     l1535:
  8171  0026AE  0012               	return		;funcret
  8172  0026B0                     __end_of_roundf:
  8173                           	callstack 0
  8174                           
  8175 ;; *************** function ___flsub *****************
  8176 ;; Defined at:
  8177 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\sprcadd.c"
  8178 ;; Parameters:    Size  Location     Type
  8179 ;;  b               4   18[COMRAM] float 
  8180 ;;  a               4   22[COMRAM] float 
  8181 ;; Auto vars:     Size  Location     Type
  8182 ;;		None
  8183 ;; Return value:  Size  Location     Type
  8184 ;;                  4   18[COMRAM] float 
  8185 ;; Registers used:
  8186 ;;		wreg, status,2, status,0, cstack
  8187 ;; Tracked objects:
  8188 ;;		On entry : 0/0
  8189 ;;		On exit  : 0/0
  8190 ;;		Unchanged: 0/0
  8191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8192 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8193 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8194 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8195 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8196 ;;Total ram usage:        8 bytes
  8197 ;; Hardware stack levels used: 1
  8198 ;; Hardware stack levels required when called: 3
  8199 ;; This function calls:
  8200 ;;		___fladd
  8201 ;; This function is called by:
  8202 ;;		_roundf
  8203 ;; This function uses a non-reentrant model
  8204 ;;
  8205                           
  8206                           	psect	text43
  8207  0052CE                     __ptext43:
  8208                           	callstack 0
  8209  0052CE                     ___flsub:
  8210                           	callstack 23
  8211  0052CE  0E00               	movlw	0
  8212  0052D0  1A17               	xorwf	___flsub@a^0,f,c
  8213  0052D2  0E00               	movlw	0
  8214  0052D4  1A18               	xorwf	(___flsub@a+1)^0,f,c
  8215  0052D6  0E00               	movlw	0
  8216  0052D8  1A19               	xorwf	(___flsub@a+2)^0,f,c
  8217  0052DA  0E80               	movlw	128
  8218  0052DC  1A1A               	xorwf	(___flsub@a+3)^0,f,c
  8219  0052DE  C013  F003         	movff	___flsub@b,___fladd@b
  8220  0052E2  C014  F004         	movff	___flsub@b+1,___fladd@b+1
  8221  0052E6  C015  F005         	movff	___flsub@b+2,___fladd@b+2
  8222  0052EA  C016  F006         	movff	___flsub@b+3,___fladd@b+3
  8223  0052EE  C017  F007         	movff	___flsub@a,___fladd@a
  8224  0052F2  C018  F008         	movff	___flsub@a+1,___fladd@a+1
  8225  0052F6  C019  F009         	movff	___flsub@a+2,___fladd@a+2
  8226  0052FA  C01A  F00A         	movff	___flsub@a+3,___fladd@a+3
  8227  0052FE  EC0A  F00D         	call	___fladd	;wreg free
  8228  005302  C003  F013         	movff	?___fladd,?___flsub
  8229  005306  C004  F014         	movff	?___fladd+1,?___flsub+1
  8230  00530A  C005  F015         	movff	?___fladd+2,?___flsub+2
  8231  00530E  C006  F016         	movff	?___fladd+3,?___flsub+3
  8232  005312  0012               	return		;funcret
  8233  005314                     __end_of___flsub:
  8234                           	callstack 0
  8235                           
  8236 ;; *************** function ___fladd *****************
  8237 ;; Defined at:
  8238 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\sprcadd.c"
  8239 ;; Parameters:    Size  Location     Type
  8240 ;;  b               4    2[COMRAM] float 
  8241 ;;  a               4    6[COMRAM] float 
  8242 ;; Auto vars:     Size  Location     Type
  8243 ;;  grs             1   17[COMRAM] unsigned char 
  8244 ;;  bexp            1   16[COMRAM] unsigned char 
  8245 ;;  aexp            1   15[COMRAM] unsigned char 
  8246 ;;  signs           1   14[COMRAM] unsigned char 
  8247 ;; Return value:  Size  Location     Type
  8248 ;;                  4    2[COMRAM] unsigned char 
  8249 ;; Registers used:
  8250 ;;		wreg, status,2, status,0
  8251 ;; Tracked objects:
  8252 ;;		On entry : 0/0
  8253 ;;		On exit  : 0/0
  8254 ;;		Unchanged: 0/0
  8255 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8256 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8257 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8258 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8259 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8260 ;;Total ram usage:       16 bytes
  8261 ;; Hardware stack levels used: 1
  8262 ;; Hardware stack levels required when called: 2
  8263 ;; This function calls:
  8264 ;;		Nothing
  8265 ;; This function is called by:
  8266 ;;		___flsub
  8267 ;;		_roundf
  8268 ;; This function uses a non-reentrant model
  8269 ;;
  8270                           
  8271                           	psect	text44
  8272  001A14                     __ptext44:
  8273                           	callstack 0
  8274  001A14                     ___fladd:
  8275                           	callstack 23
  8276  001A14  5006               	movf	(___fladd@b+3)^0,w,c
  8277  001A16  0B80               	andlw	128
  8278  001A18  6E0F               	movwf	___fladd@signs^0,c
  8279  001A1A  5006               	movf	(___fladd@b+3)^0,w,c
  8280  001A1C  2406               	addwf	(___fladd@b+3)^0,w,c
  8281  001A1E  6E11               	movwf	___fladd@bexp^0,c
  8282  001A20  AE05               	btfss	(___fladd@b+2)^0,7,c
  8283  001A22  EF15  F00D         	goto	u5541
  8284  001A26  EF17  F00D         	goto	u5540
  8285  001A2A                     u5541:
  8286  001A2A  EF18  F00D         	goto	l5476
  8287  001A2E                     u5540:
  8288  001A2E  8011               	bsf	___fladd@bexp^0,0,c
  8289  001A30                     l5476:
  8290  001A30  5011               	movf	___fladd@bexp^0,w,c
  8291  001A32  B4D8               	btfsc	status,2,c
  8292  001A34  EF1E  F00D         	goto	u5551
  8293  001A38  EF20  F00D         	goto	u5550
  8294  001A3C                     u5551:
  8295  001A3C  EF35  F00D         	goto	l5486
  8296  001A40                     u5550:
  8297  001A40  2811               	incf	___fladd@bexp^0,w,c
  8298  001A42  A4D8               	btfss	status,2,c
  8299  001A44  EF26  F00D         	goto	u5561
  8300  001A48  EF28  F00D         	goto	u5560
  8301  001A4C                     u5561:
  8302  001A4C  EF30  F00D         	goto	l5482
  8303  001A50                     u5560:
  8304  001A50  0E00               	movlw	0
  8305  001A52  6E03               	movwf	___fladd@b^0,c
  8306  001A54  0E00               	movlw	0
  8307  001A56  6E04               	movwf	(___fladd@b+1)^0,c
  8308  001A58  0E00               	movlw	0
  8309  001A5A  6E05               	movwf	(___fladd@b+2)^0,c
  8310  001A5C  0E00               	movlw	0
  8311  001A5E  6E06               	movwf	(___fladd@b+3)^0,c
  8312  001A60                     l5482:
  8313  001A60  8E05               	bsf	(___fladd@b+2)^0,7,c
  8314  001A62  0E00               	movlw	0
  8315  001A64  6E06               	movwf	(___fladd@b+3)^0,c
  8316  001A66  EF3D  F00D         	goto	l5488
  8317  001A6A                     l5486:
  8318  001A6A  0E00               	movlw	0
  8319  001A6C  6E03               	movwf	___fladd@b^0,c
  8320  001A6E  0E00               	movlw	0
  8321  001A70  6E04               	movwf	(___fladd@b+1)^0,c
  8322  001A72  0E00               	movlw	0
  8323  001A74  6E05               	movwf	(___fladd@b+2)^0,c
  8324  001A76  0E00               	movlw	0
  8325  001A78  6E06               	movwf	(___fladd@b+3)^0,c
  8326  001A7A                     l5488:
  8327  001A7A  500A               	movf	(___fladd@a+3)^0,w,c
  8328  001A7C  0B80               	andlw	128
  8329  001A7E  6E10               	movwf	___fladd@aexp^0,c
  8330  001A80  500F               	movf	___fladd@signs^0,w,c
  8331  001A82  1810               	xorwf	___fladd@aexp^0,w,c
  8332  001A84  B4D8               	btfsc	status,2,c
  8333  001A86  EF47  F00D         	goto	u5571
  8334  001A8A  EF49  F00D         	goto	u5570
  8335  001A8E                     u5571:
  8336  001A8E  EF4A  F00D         	goto	l5494
  8337  001A92                     u5570:
  8338  001A92  8C0F               	bsf	___fladd@signs^0,6,c
  8339  001A94                     l5494:
  8340  001A94  500A               	movf	(___fladd@a+3)^0,w,c
  8341  001A96  240A               	addwf	(___fladd@a+3)^0,w,c
  8342  001A98  6E10               	movwf	___fladd@aexp^0,c
  8343  001A9A  AE09               	btfss	(___fladd@a+2)^0,7,c
  8344  001A9C  EF52  F00D         	goto	u5581
  8345  001AA0  EF54  F00D         	goto	u5580
  8346  001AA4                     u5581:
  8347  001AA4  EF55  F00D         	goto	l5500
  8348  001AA8                     u5580:
  8349  001AA8  8010               	bsf	___fladd@aexp^0,0,c
  8350  001AAA                     l5500:
  8351  001AAA  5010               	movf	___fladd@aexp^0,w,c
  8352  001AAC  B4D8               	btfsc	status,2,c
  8353  001AAE  EF5B  F00D         	goto	u5591
  8354  001AB2  EF5D  F00D         	goto	u5590
  8355  001AB6                     u5591:
  8356  001AB6  EF72  F00D         	goto	l5510
  8357  001ABA                     u5590:
  8358  001ABA  2810               	incf	___fladd@aexp^0,w,c
  8359  001ABC  A4D8               	btfss	status,2,c
  8360  001ABE  EF63  F00D         	goto	u5601
  8361  001AC2  EF65  F00D         	goto	u5600
  8362  001AC6                     u5601:
  8363  001AC6  EF6D  F00D         	goto	l5506
  8364  001ACA                     u5600:
  8365  001ACA  0E00               	movlw	0
  8366  001ACC  6E07               	movwf	___fladd@a^0,c
  8367  001ACE  0E00               	movlw	0
  8368  001AD0  6E08               	movwf	(___fladd@a+1)^0,c
  8369  001AD2  0E00               	movlw	0
  8370  001AD4  6E09               	movwf	(___fladd@a+2)^0,c
  8371  001AD6  0E00               	movlw	0
  8372  001AD8  6E0A               	movwf	(___fladd@a+3)^0,c
  8373  001ADA                     l5506:
  8374  001ADA  8E09               	bsf	(___fladd@a+2)^0,7,c
  8375  001ADC  0E00               	movlw	0
  8376  001ADE  6E0A               	movwf	(___fladd@a+3)^0,c
  8377  001AE0  EF7A  F00D         	goto	l5512
  8378  001AE4                     l5510:
  8379  001AE4  0E00               	movlw	0
  8380  001AE6  6E07               	movwf	___fladd@a^0,c
  8381  001AE8  0E00               	movlw	0
  8382  001AEA  6E08               	movwf	(___fladd@a+1)^0,c
  8383  001AEC  0E00               	movlw	0
  8384  001AEE  6E09               	movwf	(___fladd@a+2)^0,c
  8385  001AF0  0E00               	movlw	0
  8386  001AF2  6E0A               	movwf	(___fladd@a+3)^0,c
  8387  001AF4                     l5512:
  8388  001AF4  5011               	movf	___fladd@bexp^0,w,c
  8389  001AF6  5C10               	subwf	___fladd@aexp^0,w,c
  8390  001AF8  B0D8               	btfsc	status,0,c
  8391  001AFA  EF81  F00D         	goto	u5611
  8392  001AFE  EF83  F00D         	goto	u5610
  8393  001B02                     u5611:
  8394  001B02  EFAA  F00D         	goto	l5548
  8395  001B06                     u5610:
  8396  001B06  AC0F               	btfss	___fladd@signs^0,6,c
  8397  001B08  EF88  F00D         	goto	u5621
  8398  001B0C  EF8A  F00D         	goto	u5620
  8399  001B10                     u5621:
  8400  001B10  EF8C  F00D         	goto	l5518
  8401  001B14                     u5620:
  8402  001B14  0E80               	movlw	128
  8403  001B16  1A0F               	xorwf	___fladd@signs^0,f,c
  8404  001B18                     l5518:
  8405  001B18  C011  F012         	movff	___fladd@bexp,___fladd@grs
  8406  001B1C  C010  F011         	movff	___fladd@aexp,___fladd@bexp
  8407  001B20  C012  F010         	movff	___fladd@grs,___fladd@aexp
  8408  001B24  C003  F012         	movff	___fladd@b,___fladd@grs
  8409  001B28  C007  F003         	movff	___fladd@a,___fladd@b
  8410  001B2C  C012  F007         	movff	___fladd@grs,___fladd@a
  8411  001B30  C004  F012         	movff	___fladd@b+1,___fladd@grs
  8412  001B34  C008  F004         	movff	___fladd@a+1,___fladd@b+1
  8413  001B38  C012  F008         	movff	___fladd@grs,___fladd@a+1
  8414  001B3C  C005  F012         	movff	___fladd@b+2,___fladd@grs
  8415  001B40  C009  F005         	movff	___fladd@a+2,___fladd@b+2
  8416  001B44  C012  F009         	movff	___fladd@grs,___fladd@a+2
  8417  001B48  C006  F012         	movff	___fladd@b+3,___fladd@grs
  8418  001B4C  C00A  F006         	movff	___fladd@a+3,___fladd@b+3
  8419  001B50  C012  F00A         	movff	___fladd@grs,___fladd@a+3
  8420  001B54                     l5548:
  8421  001B54  0E00               	movlw	0
  8422  001B56  6E12               	movwf	___fladd@grs^0,c
  8423  001B58  5011               	movf	___fladd@bexp^0,w,c
  8424  001B5A  C010  F00B         	movff	___fladd@aexp,??___fladd
  8425  001B5E  6A0C               	clrf	(??___fladd+1)^0,c
  8426  001B60  5E0B               	subwf	??___fladd^0,f,c
  8427  001B62  0E00               	movlw	0
  8428  001B64  5A0C               	subwfb	(??___fladd+1)^0,f,c
  8429  001B66  BE0C               	btfsc	(??___fladd+1)^0,7,c
  8430  001B68  EFBF  F00D         	goto	u5631
  8431  001B6C  500C               	movf	(??___fladd+1)^0,w,c
  8432  001B6E  E109               	bnz	u5630
  8433  001B70  0E1A               	movlw	26
  8434  001B72  5C0B               	subwf	??___fladd^0,w,c
  8435  001B74  A0D8               	btfss	status,0,c
  8436  001B76  EFBF  F00D         	goto	u5631
  8437  001B7A  EFC1  F00D         	goto	u5630
  8438  001B7E                     u5631:
  8439  001B7E  EFF8  F00D         	goto	l1271
  8440  001B82                     u5630:
  8441  001B82  5003               	movf	___fladd@b^0,w,c
  8442  001B84  1004               	iorwf	(___fladd@b+1)^0,w,c
  8443  001B86  1005               	iorwf	(___fladd@b+2)^0,w,c
  8444  001B88  1006               	iorwf	(___fladd@b+3)^0,w,c
  8445  001B8A  A4D8               	btfss	status,2,c
  8446  001B8C  EFCA  F00D         	goto	u5641
  8447  001B90  EFCD  F00D         	goto	u5640
  8448  001B94                     u5641:
  8449  001B94  0E01               	movlw	1
  8450  001B96  EFCE  F00D         	goto	u5650
  8451  001B9A                     u5640:
  8452  001B9A  0E00               	movlw	0
  8453  001B9C                     u5650:
  8454  001B9C  6E12               	movwf	___fladd@grs^0,c
  8455  001B9E  0E00               	movlw	0
  8456  001BA0  6E03               	movwf	___fladd@b^0,c
  8457  001BA2  0E00               	movlw	0
  8458  001BA4  6E04               	movwf	(___fladd@b+1)^0,c
  8459  001BA6  0E00               	movlw	0
  8460  001BA8  6E05               	movwf	(___fladd@b+2)^0,c
  8461  001BAA  0E00               	movlw	0
  8462  001BAC  6E06               	movwf	(___fladd@b+3)^0,c
  8463  001BAE  C010  F011         	movff	___fladd@aexp,___fladd@bexp
  8464  001BB2  EF01  F00E         	goto	l1270
  8465  001BB6                     l1272:
  8466  001BB6  A012               	btfss	___fladd@grs^0,0,c
  8467  001BB8  EFE0  F00D         	goto	u5661
  8468  001BBC  EFE2  F00D         	goto	u5660
  8469  001BC0                     u5661:
  8470  001BC0  EFE8  F00D         	goto	l5560
  8471  001BC4                     u5660:
  8472  001BC4  90D8               	bcf	status,0,c
  8473  001BC6  3012               	rrcf	___fladd@grs^0,w,c
  8474  001BC8  0901               	iorlw	1
  8475  001BCA  6E12               	movwf	___fladd@grs^0,c
  8476  001BCC  EFEA  F00D         	goto	l5562
  8477  001BD0                     l5560:
  8478  001BD0  90D8               	bcf	status,0,c
  8479  001BD2  3212               	rrcf	___fladd@grs^0,f,c
  8480  001BD4                     l5562:
  8481  001BD4  A003               	btfss	___fladd@b^0,0,c
  8482  001BD6  EFEF  F00D         	goto	u5671
  8483  001BDA  EFF1  F00D         	goto	u5670
  8484  001BDE                     u5671:
  8485  001BDE  EFF2  F00D         	goto	l5566
  8486  001BE2                     u5670:
  8487  001BE2  8E12               	bsf	___fladd@grs^0,7,c
  8488  001BE4                     l5566:
  8489  001BE4  3406               	rlcf	(___fladd@b+3)^0,w,c
  8490  001BE6  3206               	rrcf	(___fladd@b+3)^0,f,c
  8491  001BE8  3205               	rrcf	(___fladd@b+2)^0,f,c
  8492  001BEA  3204               	rrcf	(___fladd@b+1)^0,f,c
  8493  001BEC  3203               	rrcf	___fladd@b^0,f,c
  8494  001BEE  2A11               	incf	___fladd@bexp^0,f,c
  8495  001BF0                     l1271:
  8496  001BF0  5010               	movf	___fladd@aexp^0,w,c
  8497  001BF2  5C11               	subwf	___fladd@bexp^0,w,c
  8498  001BF4  A0D8               	btfss	status,0,c
  8499  001BF6  EFFF  F00D         	goto	u5681
  8500  001BFA  EF01  F00E         	goto	u5680
  8501  001BFE                     u5681:
  8502  001BFE  EFDB  F00D         	goto	l1272
  8503  001C02                     u5680:
  8504  001C02                     l1270:
  8505  001C02  BC0F               	btfsc	___fladd@signs^0,6,c
  8506  001C04  EF06  F00E         	goto	u5691
  8507  001C08  EF08  F00E         	goto	u5690
  8508  001C0C                     u5691:
  8509  001C0C  EF48  F00E         	goto	l5594
  8510  001C10                     u5690:
  8511  001C10  5011               	movf	___fladd@bexp^0,w,c
  8512  001C12  A4D8               	btfss	status,2,c
  8513  001C14  EF0E  F00E         	goto	u5701
  8514  001C18  EF10  F00E         	goto	u5700
  8515  001C1C                     u5701:
  8516  001C1C  EF1A  F00E         	goto	l5576
  8517  001C20                     u5700:
  8518  001C20  0E00               	movlw	0
  8519  001C22  6E03               	movwf	?___fladd^0,c
  8520  001C24  0E00               	movlw	0
  8521  001C26  6E04               	movwf	(?___fladd+1)^0,c
  8522  001C28  0E00               	movlw	0
  8523  001C2A  6E05               	movwf	(?___fladd+2)^0,c
  8524  001C2C  0E00               	movlw	0
  8525  001C2E  6E06               	movwf	(?___fladd+3)^0,c
  8526  001C30  EF69  F00F         	goto	l1279
  8527  001C34                     l5576:
  8528  001C34  5007               	movf	___fladd@a^0,w,c
  8529  001C36  2603               	addwf	___fladd@b^0,f,c
  8530  001C38  5008               	movf	(___fladd@a+1)^0,w,c
  8531  001C3A  2204               	addwfc	(___fladd@b+1)^0,f,c
  8532  001C3C  5009               	movf	(___fladd@a+2)^0,w,c
  8533  001C3E  2205               	addwfc	(___fladd@b+2)^0,f,c
  8534  001C40  500A               	movf	(___fladd@a+3)^0,w,c
  8535  001C42  2206               	addwfc	(___fladd@b+3)^0,f,c
  8536  001C44  A006               	btfss	(___fladd@b+3)^0,0,c
  8537  001C46  EF27  F00E         	goto	u5711
  8538  001C4A  EF29  F00E         	goto	u5710
  8539  001C4E                     u5711:
  8540  001C4E  EFD5  F00E         	goto	l5630
  8541  001C52                     u5710:
  8542  001C52  A012               	btfss	___fladd@grs^0,0,c
  8543  001C54  EF2E  F00E         	goto	u5721
  8544  001C58  EF30  F00E         	goto	u5720
  8545  001C5C                     u5721:
  8546  001C5C  EF36  F00E         	goto	l5584
  8547  001C60                     u5720:
  8548  001C60  90D8               	bcf	status,0,c
  8549  001C62  3012               	rrcf	___fladd@grs^0,w,c
  8550  001C64  0901               	iorlw	1
  8551  001C66  6E12               	movwf	___fladd@grs^0,c
  8552  001C68  EF38  F00E         	goto	l5586
  8553  001C6C                     l5584:
  8554  001C6C  90D8               	bcf	status,0,c
  8555  001C6E  3212               	rrcf	___fladd@grs^0,f,c
  8556  001C70                     l5586:
  8557  001C70  A003               	btfss	___fladd@b^0,0,c
  8558  001C72  EF3D  F00E         	goto	u5731
  8559  001C76  EF3F  F00E         	goto	u5730
  8560  001C7A                     u5731:
  8561  001C7A  EF40  F00E         	goto	l5590
  8562  001C7E                     u5730:
  8563  001C7E  8E12               	bsf	___fladd@grs^0,7,c
  8564  001C80                     l5590:
  8565  001C80  3406               	rlcf	(___fladd@b+3)^0,w,c
  8566  001C82  3206               	rrcf	(___fladd@b+3)^0,f,c
  8567  001C84  3205               	rrcf	(___fladd@b+2)^0,f,c
  8568  001C86  3204               	rrcf	(___fladd@b+1)^0,f,c
  8569  001C88  3203               	rrcf	___fladd@b^0,f,c
  8570  001C8A  2A11               	incf	___fladd@bexp^0,f,c
  8571  001C8C  EFD5  F00E         	goto	l5630
  8572  001C90                     l5594:
  8573  001C90  5007               	movf	___fladd@a^0,w,c
  8574  001C92  5C03               	subwf	___fladd@b^0,w,c
  8575  001C94  5008               	movf	(___fladd@a+1)^0,w,c
  8576  001C96  5804               	subwfb	(___fladd@b+1)^0,w,c
  8577  001C98  5009               	movf	(___fladd@a+2)^0,w,c
  8578  001C9A  5805               	subwfb	(___fladd@b+2)^0,w,c
  8579  001C9C  5006               	movf	(___fladd@b+3)^0,w,c
  8580  001C9E  0A80               	xorlw	128
  8581  001CA0  6E0B               	movwf	??___fladd^0,c
  8582  001CA2  500A               	movf	(___fladd@a+3)^0,w,c
  8583  001CA4  0A80               	xorlw	128
  8584  001CA6  580B               	subwfb	??___fladd^0,w,c
  8585  001CA8  B0D8               	btfsc	status,0,c
  8586  001CAA  EF59  F00E         	goto	u5741
  8587  001CAE  EF5B  F00E         	goto	u5740
  8588  001CB2                     u5741:
  8589  001CB2  EF86  F00E         	goto	l5604
  8590  001CB6                     u5740:
  8591  001CB6  5003               	movf	___fladd@b^0,w,c
  8592  001CB8  5C07               	subwf	___fladd@a^0,w,c
  8593  001CBA  6E0B               	movwf	??___fladd^0,c
  8594  001CBC  5004               	movf	(___fladd@b+1)^0,w,c
  8595  001CBE  5808               	subwfb	(___fladd@a+1)^0,w,c
  8596  001CC0  6E0C               	movwf	(??___fladd+1)^0,c
  8597  001CC2  5005               	movf	(___fladd@b+2)^0,w,c
  8598  001CC4  5809               	subwfb	(___fladd@a+2)^0,w,c
  8599  001CC6  6E0D               	movwf	(??___fladd+2)^0,c
  8600  001CC8  5006               	movf	(___fladd@b+3)^0,w,c
  8601  001CCA  580A               	subwfb	(___fladd@a+3)^0,w,c
  8602  001CCC  6E0E               	movwf	(??___fladd+3)^0,c
  8603  001CCE  0EFF               	movlw	255
  8604  001CD0  240B               	addwf	??___fladd^0,w,c
  8605  001CD2  6E03               	movwf	___fladd@b^0,c
  8606  001CD4  0EFF               	movlw	255
  8607  001CD6  200C               	addwfc	(??___fladd+1)^0,w,c
  8608  001CD8  6E04               	movwf	(___fladd@b+1)^0,c
  8609  001CDA  0EFF               	movlw	255
  8610  001CDC  200D               	addwfc	(??___fladd+2)^0,w,c
  8611  001CDE  6E05               	movwf	(___fladd@b+2)^0,c
  8612  001CE0  0EFF               	movlw	255
  8613  001CE2  200E               	addwfc	(??___fladd+3)^0,w,c
  8614  001CE4  6E06               	movwf	(___fladd@b+3)^0,c
  8615  001CE6  0E80               	movlw	128
  8616  001CE8  1A0F               	xorwf	___fladd@signs^0,f,c
  8617  001CEA  6C12               	negf	___fladd@grs^0,c
  8618  001CEC  5012               	movf	___fladd@grs^0,w,c
  8619  001CEE  A4D8               	btfss	status,2,c
  8620  001CF0  EF7C  F00E         	goto	u5751
  8621  001CF4  EF7E  F00E         	goto	u5750
  8622  001CF8                     u5751:
  8623  001CF8  EF8E  F00E         	goto	l1287
  8624  001CFC                     u5750:
  8625  001CFC  0E01               	movlw	1
  8626  001CFE  2603               	addwf	___fladd@b^0,f,c
  8627  001D00  0E00               	movlw	0
  8628  001D02  2204               	addwfc	(___fladd@b+1)^0,f,c
  8629  001D04  2205               	addwfc	(___fladd@b+2)^0,f,c
  8630  001D06  2206               	addwfc	(___fladd@b+3)^0,f,c
  8631  001D08  EF8E  F00E         	goto	l1287
  8632  001D0C                     l5604:
  8633  001D0C  5007               	movf	___fladd@a^0,w,c
  8634  001D0E  5E03               	subwf	___fladd@b^0,f,c
  8635  001D10  5008               	movf	(___fladd@a+1)^0,w,c
  8636  001D12  5A04               	subwfb	(___fladd@b+1)^0,f,c
  8637  001D14  5009               	movf	(___fladd@a+2)^0,w,c
  8638  001D16  5A05               	subwfb	(___fladd@b+2)^0,f,c
  8639  001D18  500A               	movf	(___fladd@a+3)^0,w,c
  8640  001D1A  5A06               	subwfb	(___fladd@b+3)^0,f,c
  8641  001D1C                     l1287:
  8642  001D1C  5003               	movf	___fladd@b^0,w,c
  8643  001D1E  1004               	iorwf	(___fladd@b+1)^0,w,c
  8644  001D20  1005               	iorwf	(___fladd@b+2)^0,w,c
  8645  001D22  1006               	iorwf	(___fladd@b+3)^0,w,c
  8646  001D24  A4D8               	btfss	status,2,c
  8647  001D26  EF97  F00E         	goto	u5761
  8648  001D2A  EF99  F00E         	goto	u5760
  8649  001D2E                     u5761:
  8650  001D2E  EFCE  F00E         	goto	l5628
  8651  001D32                     u5760:
  8652  001D32  5012               	movf	___fladd@grs^0,w,c
  8653  001D34  A4D8               	btfss	status,2,c
  8654  001D36  EF9F  F00E         	goto	u5771
  8655  001D3A  EFA1  F00E         	goto	u5770
  8656  001D3E                     u5771:
  8657  001D3E  EFCE  F00E         	goto	l5628
  8658  001D42                     u5770:
  8659  001D42  0E00               	movlw	0
  8660  001D44  6E03               	movwf	?___fladd^0,c
  8661  001D46  0E00               	movlw	0
  8662  001D48  6E04               	movwf	(?___fladd+1)^0,c
  8663  001D4A  0E00               	movlw	0
  8664  001D4C  6E05               	movwf	(?___fladd+2)^0,c
  8665  001D4E  0E00               	movlw	0
  8666  001D50  6E06               	movwf	(?___fladd+3)^0,c
  8667  001D52  EF69  F00F         	goto	l1279
  8668  001D56                     l5612:
  8669  001D56  90D8               	bcf	status,0,c
  8670  001D58  3603               	rlcf	___fladd@b^0,f,c
  8671  001D5A  3604               	rlcf	(___fladd@b+1)^0,f,c
  8672  001D5C  3605               	rlcf	(___fladd@b+2)^0,f,c
  8673  001D5E  3606               	rlcf	(___fladd@b+3)^0,f,c
  8674  001D60  AE12               	btfss	___fladd@grs^0,7,c
  8675  001D62  EFB5  F00E         	goto	u5781
  8676  001D66  EFB7  F00E         	goto	u5780
  8677  001D6A                     u5781:
  8678  001D6A  EFB8  F00E         	goto	l5618
  8679  001D6E                     u5780:
  8680  001D6E  8003               	bsf	___fladd@b^0,0,c
  8681  001D70                     l5618:
  8682  001D70  A012               	btfss	___fladd@grs^0,0,c
  8683  001D72  EFBD  F00E         	goto	u5791
  8684  001D76  EFBF  F00E         	goto	u5790
  8685  001D7A                     u5791:
  8686  001D7A  EFC3  F00E         	goto	l5622
  8687  001D7E                     u5790:
  8688  001D7E  80D8               	bsf	status,0,c
  8689  001D80  3612               	rlcf	___fladd@grs^0,f,c
  8690  001D82  EFC5  F00E         	goto	l5624
  8691  001D86                     l5622:
  8692  001D86  90D8               	bcf	status,0,c
  8693  001D88  3612               	rlcf	___fladd@grs^0,f,c
  8694  001D8A                     l5624:
  8695  001D8A  5011               	movf	___fladd@bexp^0,w,c
  8696  001D8C  B4D8               	btfsc	status,2,c
  8697  001D8E  EFCB  F00E         	goto	u5801
  8698  001D92  EFCD  F00E         	goto	u5800
  8699  001D96                     u5801:
  8700  001D96  EFCE  F00E         	goto	l5628
  8701  001D9A                     u5800:
  8702  001D9A  0611               	decf	___fladd@bexp^0,f,c
  8703  001D9C                     l5628:
  8704  001D9C  AE05               	btfss	(___fladd@b+2)^0,7,c
  8705  001D9E  EFD3  F00E         	goto	u5811
  8706  001DA2  EFD5  F00E         	goto	u5810
  8707  001DA6                     u5811:
  8708  001DA6  EFAB  F00E         	goto	l5612
  8709  001DAA                     u5810:
  8710  001DAA                     l5630:
  8711  001DAA  0E00               	movlw	0
  8712  001DAC  6E10               	movwf	___fladd@aexp^0,c
  8713  001DAE  AE12               	btfss	___fladd@grs^0,7,c
  8714  001DB0  EFDC  F00E         	goto	u5821
  8715  001DB4  EFDE  F00E         	goto	u5820
  8716  001DB8                     u5821:
  8717  001DB8  EFF6  F00E         	goto	l1296
  8718  001DBC                     u5820:
  8719  001DBC  C012  F00B         	movff	___fladd@grs,??___fladd
  8720  001DC0  0E7F               	movlw	127
  8721  001DC2  160B               	andwf	??___fladd^0,f,c
  8722  001DC4  B4D8               	btfsc	status,2,c
  8723  001DC6  EFE7  F00E         	goto	u5831
  8724  001DCA  EFE9  F00E         	goto	u5830
  8725  001DCE                     u5831:
  8726  001DCE  EFED  F00E         	goto	l1297
  8727  001DD2                     u5830:
  8728  001DD2                     l5636:
  8729  001DD2  0E01               	movlw	1
  8730  001DD4  6E10               	movwf	___fladd@aexp^0,c
  8731  001DD6  EFF6  F00E         	goto	l1296
  8732  001DDA                     l1297:
  8733  001DDA  A003               	btfss	___fladd@b^0,0,c
  8734  001DDC  EFF2  F00E         	goto	u5841
  8735  001DE0  EFF4  F00E         	goto	u5840
  8736  001DE4                     u5841:
  8737  001DE4  EFF6  F00E         	goto	l1296
  8738  001DE8                     u5840:
  8739  001DE8  EFE9  F00E         	goto	l5636
  8740  001DEC                     l1296:
  8741  001DEC  5010               	movf	___fladd@aexp^0,w,c
  8742  001DEE  B4D8               	btfsc	status,2,c
  8743  001DF0  EFFC  F00E         	goto	u5851
  8744  001DF4  EFFE  F00E         	goto	u5850
  8745  001DF8                     u5851:
  8746  001DF8  EF29  F00F         	goto	l5648
  8747  001DFC                     u5850:
  8748  001DFC  0E01               	movlw	1
  8749  001DFE  2603               	addwf	___fladd@b^0,f,c
  8750  001E00  0E00               	movlw	0
  8751  001E02  2204               	addwfc	(___fladd@b+1)^0,f,c
  8752  001E04  2205               	addwfc	(___fladd@b+2)^0,f,c
  8753  001E06  2206               	addwfc	(___fladd@b+3)^0,f,c
  8754  001E08  A006               	btfss	(___fladd@b+3)^0,0,c
  8755  001E0A  EF09  F00F         	goto	u5861
  8756  001E0E  EF0B  F00F         	goto	u5860
  8757  001E12                     u5861:
  8758  001E12  EF29  F00F         	goto	l5648
  8759  001E16                     u5860:
  8760  001E16  C003  F00B         	movff	___fladd@b,??___fladd
  8761  001E1A  C004  F00C         	movff	___fladd@b+1,??___fladd+1
  8762  001E1E  C005  F00D         	movff	___fladd@b+2,??___fladd+2
  8763  001E22  C006  F00E         	movff	___fladd@b+3,??___fladd+3
  8764  001E26  340E               	rlcf	(??___fladd+3)^0,w,c
  8765  001E28  320E               	rrcf	(??___fladd+3)^0,f,c
  8766  001E2A  320D               	rrcf	(??___fladd+2)^0,f,c
  8767  001E2C  320C               	rrcf	(??___fladd+1)^0,f,c
  8768  001E2E  320B               	rrcf	??___fladd^0,f,c
  8769  001E30  C00B  F003         	movff	??___fladd,___fladd@b
  8770  001E34  C00C  F004         	movff	??___fladd+1,___fladd@b+1
  8771  001E38  C00D  F005         	movff	??___fladd+2,___fladd@b+2
  8772  001E3C  C00E  F006         	movff	??___fladd+3,___fladd@b+3
  8773  001E40  2811               	incf	___fladd@bexp^0,w,c
  8774  001E42  B4D8               	btfsc	status,2,c
  8775  001E44  EF26  F00F         	goto	u5871
  8776  001E48  EF28  F00F         	goto	u5870
  8777  001E4C                     u5871:
  8778  001E4C  EF29  F00F         	goto	l5648
  8779  001E50                     u5870:
  8780  001E50  2A11               	incf	___fladd@bexp^0,f,c
  8781  001E52                     l5648:
  8782  001E52  2811               	incf	___fladd@bexp^0,w,c
  8783  001E54  B4D8               	btfsc	status,2,c
  8784  001E56  EF2F  F00F         	goto	u5881
  8785  001E5A  EF31  F00F         	goto	u5880
  8786  001E5E                     u5881:
  8787  001E5E  EF39  F00F         	goto	l5652
  8788  001E62                     u5880:
  8789  001E62  5011               	movf	___fladd@bexp^0,w,c
  8790  001E64  A4D8               	btfss	status,2,c
  8791  001E66  EF37  F00F         	goto	u5891
  8792  001E6A  EF39  F00F         	goto	u5890
  8793  001E6E                     u5891:
  8794  001E6E  EF4B  F00F         	goto	l5656
  8795  001E72                     u5890:
  8796  001E72                     l5652:
  8797  001E72  0E00               	movlw	0
  8798  001E74  6E03               	movwf	___fladd@b^0,c
  8799  001E76  0E00               	movlw	0
  8800  001E78  6E04               	movwf	(___fladd@b+1)^0,c
  8801  001E7A  0E00               	movlw	0
  8802  001E7C  6E05               	movwf	(___fladd@b+2)^0,c
  8803  001E7E  0E00               	movlw	0
  8804  001E80  6E06               	movwf	(___fladd@b+3)^0,c
  8805  001E82  5011               	movf	___fladd@bexp^0,w,c
  8806  001E84  A4D8               	btfss	status,2,c
  8807  001E86  EF47  F00F         	goto	u5901
  8808  001E8A  EF49  F00F         	goto	u5900
  8809  001E8E                     u5901:
  8810  001E8E  EF4B  F00F         	goto	l5656
  8811  001E92                     u5900:
  8812  001E92  0E00               	movlw	0
  8813  001E94  6E0F               	movwf	___fladd@signs^0,c
  8814  001E96                     l5656:
  8815  001E96  A011               	btfss	___fladd@bexp^0,0,c
  8816  001E98  EF50  F00F         	goto	u5911
  8817  001E9C  EF52  F00F         	goto	u5910
  8818  001EA0                     u5911:
  8819  001EA0  EF55  F00F         	goto	l5660
  8820  001EA4                     u5910:
  8821  001EA4  8E05               	bsf	(___fladd@b+2)^0,7,c
  8822  001EA6  EF56  F00F         	goto	l5662
  8823  001EAA                     l5660:
  8824  001EAA  9E05               	bcf	(___fladd@b+2)^0,7,c
  8825  001EAC                     l5662:
  8826  001EAC  90D8               	bcf	status,0,c
  8827  001EAE  3011               	rrcf	___fladd@bexp^0,w,c
  8828  001EB0  6E06               	movwf	(___fladd@b+3)^0,c
  8829  001EB2  AE0F               	btfss	___fladd@signs^0,7,c
  8830  001EB4  EF5E  F00F         	goto	u5921
  8831  001EB8  EF60  F00F         	goto	u5920
  8832  001EBC                     u5921:
  8833  001EBC  EF61  F00F         	goto	l5668
  8834  001EC0                     u5920:
  8835  001EC0  8E06               	bsf	(___fladd@b+3)^0,7,c
  8836  001EC2                     l5668:
  8837  001EC2  C003  F003         	movff	___fladd@b,?___fladd
  8838  001EC6  C004  F004         	movff	___fladd@b+1,?___fladd+1
  8839  001ECA  C005  F005         	movff	___fladd@b+2,?___fladd+2
  8840  001ECE  C006  F006         	movff	___fladd@b+3,?___fladd+3
  8841  001ED2                     l1279:
  8842  001ED2  0012               	return		;funcret
  8843  001ED4                     __end_of___fladd:
  8844                           	callstack 0
  8845                           
  8846 ;; *************** function ___flneg *****************
  8847 ;; Defined at:
  8848 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\flneg.c"
  8849 ;; Parameters:    Size  Location     Type
  8850 ;;  f1              4    2[COMRAM] unsigned char 
  8851 ;; Auto vars:     Size  Location     Type
  8852 ;;		None
  8853 ;; Return value:  Size  Location     Type
  8854 ;;                  4    2[COMRAM] unsigned char 
  8855 ;; Registers used:
  8856 ;;		wreg, status,2, status,0
  8857 ;; Tracked objects:
  8858 ;;		On entry : 0/0
  8859 ;;		On exit  : 0/0
  8860 ;;		Unchanged: 0/0
  8861 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8862 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8863 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8864 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8865 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8866 ;;Total ram usage:        4 bytes
  8867 ;; Hardware stack levels used: 1
  8868 ;; Hardware stack levels required when called: 2
  8869 ;; This function calls:
  8870 ;;		Nothing
  8871 ;; This function is called by:
  8872 ;;		_roundf
  8873 ;; This function uses a non-reentrant model
  8874 ;;
  8875                           
  8876                           	psect	text45
  8877  005514                     __ptext45:
  8878                           	callstack 0
  8879  005514                     ___flneg:
  8880                           	callstack 24
  8881  005514  5003               	movf	___flneg@f1^0,w,c
  8882  005516  1004               	iorwf	(___flneg@f1+1)^0,w,c
  8883  005518  1005               	iorwf	(___flneg@f1+2)^0,w,c
  8884  00551A  1006               	iorwf	(___flneg@f1+3)^0,w,c
  8885  00551C  B4D8               	btfsc	status,2,c
  8886  00551E  EF93  F02A         	goto	u6171
  8887  005522  EF95  F02A         	goto	u6170
  8888  005526                     u6171:
  8889  005526  EF9D  F02A         	goto	l5834
  8890  00552A                     u6170:
  8891  00552A  0E00               	movlw	0
  8892  00552C  1A03               	xorwf	___flneg@f1^0,f,c
  8893  00552E  0E00               	movlw	0
  8894  005530  1A04               	xorwf	(___flneg@f1+1)^0,f,c
  8895  005532  0E00               	movlw	0
  8896  005534  1A05               	xorwf	(___flneg@f1+2)^0,f,c
  8897  005536  0E80               	movlw	128
  8898  005538  1A06               	xorwf	(___flneg@f1+3)^0,f,c
  8899  00553A                     l5834:
  8900  00553A  C003  F003         	movff	___flneg@f1,?___flneg
  8901  00553E  C004  F004         	movff	___flneg@f1+1,?___flneg+1
  8902  005542  C005  F005         	movff	___flneg@f1+2,?___flneg+2
  8903  005546  C006  F006         	movff	___flneg@f1+3,?___flneg+3
  8904  00554A  0012               	return		;funcret
  8905  00554C                     __end_of___flneg:
  8906                           	callstack 0
  8907                           
  8908 ;; *************** function ___flmul *****************
  8909 ;; Defined at:
  8910 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\sprcmul.c"
  8911 ;; Parameters:    Size  Location     Type
  8912 ;;  b               4   41[COMRAM] unsigned char 
  8913 ;;  a               4   45[COMRAM] unsigned char 
  8914 ;; Auto vars:     Size  Location     Type
  8915 ;;  prod            4   60[COMRAM] struct .
  8916 ;;  grs             4   55[COMRAM] unsigned long 
  8917 ;;  temp            2   64[COMRAM] struct .
  8918 ;;  bexp            1   59[COMRAM] unsigned char 
  8919 ;;  aexp            1   54[COMRAM] unsigned char 
  8920 ;;  sign            1   53[COMRAM] unsigned char 
  8921 ;; Return value:  Size  Location     Type
  8922 ;;                  4   41[COMRAM] unsigned char 
  8923 ;; Registers used:
  8924 ;;		wreg, status,2, status,0, prodl, prodh
  8925 ;; Tracked objects:
  8926 ;;		On entry : 0/0
  8927 ;;		On exit  : 0/0
  8928 ;;		Unchanged: 0/0
  8929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8930 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8931 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8932 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8933 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8934 ;;Total ram usage:       25 bytes
  8935 ;; Hardware stack levels used: 1
  8936 ;; Hardware stack levels required when called: 2
  8937 ;; This function calls:
  8938 ;;		Nothing
  8939 ;; This function is called by:
  8940 ;;		_detect_color
  8941 ;;		_distance_measure
  8942 ;;		_roundf
  8943 ;;		_check_color_reading
  8944 ;; This function uses a non-reentrant model
  8945 ;;
  8946                           
  8947                           	psect	text46
  8948  001ED4                     __ptext46:
  8949                           	callstack 0
  8950  001ED4                     ___flmul:
  8951                           	callstack 24
  8952  001ED4  502D               	movf	(___flmul@b+3)^0,w,c
  8953  001ED6  0B80               	andlw	128
  8954  001ED8  6E36               	movwf	___flmul@sign^0,c
  8955  001EDA  502D               	movf	(___flmul@b+3)^0,w,c
  8956  001EDC  242D               	addwf	(___flmul@b+3)^0,w,c
  8957  001EDE  6E3C               	movwf	___flmul@bexp^0,c
  8958  001EE0  AE2C               	btfss	(___flmul@b+2)^0,7,c
  8959  001EE2  EF75  F00F         	goto	u5931
  8960  001EE6  EF77  F00F         	goto	u5930
  8961  001EEA                     u5931:
  8962  001EEA  EF78  F00F         	goto	l5678
  8963  001EEE                     u5930:
  8964  001EEE  803C               	bsf	___flmul@bexp^0,0,c
  8965  001EF0                     l5678:
  8966  001EF0  503C               	movf	___flmul@bexp^0,w,c
  8967  001EF2  B4D8               	btfsc	status,2,c
  8968  001EF4  EF7E  F00F         	goto	u5941
  8969  001EF8  EF80  F00F         	goto	u5940
  8970  001EFC                     u5941:
  8971  001EFC  EF93  F00F         	goto	l5686
  8972  001F00                     u5940:
  8973  001F00  283C               	incf	___flmul@bexp^0,w,c
  8974  001F02  A4D8               	btfss	status,2,c
  8975  001F04  EF86  F00F         	goto	u5951
  8976  001F08  EF88  F00F         	goto	u5950
  8977  001F0C                     u5951:
  8978  001F0C  EF90  F00F         	goto	l5684
  8979  001F10                     u5950:
  8980  001F10  0E00               	movlw	0
  8981  001F12  6E2A               	movwf	___flmul@b^0,c
  8982  001F14  0E00               	movlw	0
  8983  001F16  6E2B               	movwf	(___flmul@b+1)^0,c
  8984  001F18  0E00               	movlw	0
  8985  001F1A  6E2C               	movwf	(___flmul@b+2)^0,c
  8986  001F1C  0E00               	movlw	0
  8987  001F1E  6E2D               	movwf	(___flmul@b+3)^0,c
  8988  001F20                     l5684:
  8989  001F20  8E2C               	bsf	(___flmul@b+2)^0,7,c
  8990  001F22  EF9B  F00F         	goto	l5688
  8991  001F26                     l5686:
  8992  001F26  0E00               	movlw	0
  8993  001F28  6E2A               	movwf	___flmul@b^0,c
  8994  001F2A  0E00               	movlw	0
  8995  001F2C  6E2B               	movwf	(___flmul@b+1)^0,c
  8996  001F2E  0E00               	movlw	0
  8997  001F30  6E2C               	movwf	(___flmul@b+2)^0,c
  8998  001F32  0E00               	movlw	0
  8999  001F34  6E2D               	movwf	(___flmul@b+3)^0,c
  9000  001F36                     l5688:
  9001  001F36  5031               	movf	(___flmul@a+3)^0,w,c
  9002  001F38  0B80               	andlw	128
  9003  001F3A  1A36               	xorwf	___flmul@sign^0,f,c
  9004  001F3C  5031               	movf	(___flmul@a+3)^0,w,c
  9005  001F3E  2431               	addwf	(___flmul@a+3)^0,w,c
  9006  001F40  6E37               	movwf	___flmul@aexp^0,c
  9007  001F42  AE30               	btfss	(___flmul@a+2)^0,7,c
  9008  001F44  EFA6  F00F         	goto	u5961
  9009  001F48  EFA8  F00F         	goto	u5960
  9010  001F4C                     u5961:
  9011  001F4C  EFA9  F00F         	goto	l5696
  9012  001F50                     u5960:
  9013  001F50  8037               	bsf	___flmul@aexp^0,0,c
  9014  001F52                     l5696:
  9015  001F52  5037               	movf	___flmul@aexp^0,w,c
  9016  001F54  B4D8               	btfsc	status,2,c
  9017  001F56  EFAF  F00F         	goto	u5971
  9018  001F5A  EFB1  F00F         	goto	u5970
  9019  001F5E                     u5971:
  9020  001F5E  EFC4  F00F         	goto	l5704
  9021  001F62                     u5970:
  9022  001F62  2837               	incf	___flmul@aexp^0,w,c
  9023  001F64  A4D8               	btfss	status,2,c
  9024  001F66  EFB7  F00F         	goto	u5981
  9025  001F6A  EFB9  F00F         	goto	u5980
  9026  001F6E                     u5981:
  9027  001F6E  EFC1  F00F         	goto	l5702
  9028  001F72                     u5980:
  9029  001F72  0E00               	movlw	0
  9030  001F74  6E2E               	movwf	___flmul@a^0,c
  9031  001F76  0E00               	movlw	0
  9032  001F78  6E2F               	movwf	(___flmul@a+1)^0,c
  9033  001F7A  0E00               	movlw	0
  9034  001F7C  6E30               	movwf	(___flmul@a+2)^0,c
  9035  001F7E  0E00               	movlw	0
  9036  001F80  6E31               	movwf	(___flmul@a+3)^0,c
  9037  001F82                     l5702:
  9038  001F82  8E30               	bsf	(___flmul@a+2)^0,7,c
  9039  001F84  EFCC  F00F         	goto	l1356
  9040  001F88                     l5704:
  9041  001F88  0E00               	movlw	0
  9042  001F8A  6E2E               	movwf	___flmul@a^0,c
  9043  001F8C  0E00               	movlw	0
  9044  001F8E  6E2F               	movwf	(___flmul@a+1)^0,c
  9045  001F90  0E00               	movlw	0
  9046  001F92  6E30               	movwf	(___flmul@a+2)^0,c
  9047  001F94  0E00               	movlw	0
  9048  001F96  6E31               	movwf	(___flmul@a+3)^0,c
  9049  001F98                     l1356:
  9050  001F98  5037               	movf	___flmul@aexp^0,w,c
  9051  001F9A  B4D8               	btfsc	status,2,c
  9052  001F9C  EFD2  F00F         	goto	u5991
  9053  001FA0  EFD4  F00F         	goto	u5990
  9054  001FA4                     u5991:
  9055  001FA4  EFDC  F00F         	goto	l5708
  9056  001FA8                     u5990:
  9057  001FA8  503C               	movf	___flmul@bexp^0,w,c
  9058  001FAA  A4D8               	btfss	status,2,c
  9059  001FAC  EFDA  F00F         	goto	u6001
  9060  001FB0  EFDC  F00F         	goto	u6000
  9061  001FB4                     u6001:
  9062  001FB4  EFE6  F00F         	goto	l5712
  9063  001FB8                     u6000:
  9064  001FB8                     l5708:
  9065  001FB8  0E00               	movlw	0
  9066  001FBA  6E2A               	movwf	?___flmul^0,c
  9067  001FBC  0E00               	movlw	0
  9068  001FBE  6E2B               	movwf	(?___flmul+1)^0,c
  9069  001FC0  0E00               	movlw	0
  9070  001FC2  6E2C               	movwf	(?___flmul+2)^0,c
  9071  001FC4  0E00               	movlw	0
  9072  001FC6  6E2D               	movwf	(?___flmul+3)^0,c
  9073  001FC8  EF7E  F011         	goto	l1360
  9074  001FCC                     l5712:
  9075  001FCC  5030               	movf	(___flmul@a+2)^0,w,c
  9076  001FCE  022A               	mulwf	___flmul@b^0,c
  9077  001FD0  CFF3 F041          	movff	prodl,___flmul@temp
  9078  001FD4  CFF4 F042          	movff	prodh,___flmul@temp+1
  9079  001FD8  5041               	movf	___flmul@temp^0,w,c
  9080  001FDA  6E38               	movwf	___flmul@grs^0,c
  9081  001FDC  6A39               	clrf	(___flmul@grs+1)^0,c
  9082  001FDE  6A3A               	clrf	(___flmul@grs+2)^0,c
  9083  001FE0  6A3B               	clrf	(___flmul@grs+3)^0,c
  9084  001FE2  5042               	movf	(___flmul@temp+1)^0,w,c
  9085  001FE4  6E3D               	movwf	___flmul@prod^0,c
  9086  001FE6  6A3E               	clrf	(___flmul@prod+1)^0,c
  9087  001FE8  6A3F               	clrf	(___flmul@prod+2)^0,c
  9088  001FEA  6A40               	clrf	(___flmul@prod+3)^0,c
  9089  001FEC  502F               	movf	(___flmul@a+1)^0,w,c
  9090  001FEE  022B               	mulwf	(___flmul@b+1)^0,c
  9091  001FF0  CFF3 F041          	movff	prodl,___flmul@temp
  9092  001FF4  CFF4 F042          	movff	prodh,___flmul@temp+1
  9093  001FF8  5041               	movf	___flmul@temp^0,w,c
  9094  001FFA  2638               	addwf	___flmul@grs^0,f,c
  9095  001FFC  0E00               	movlw	0
  9096  001FFE  2239               	addwfc	(___flmul@grs+1)^0,f,c
  9097  002000  223A               	addwfc	(___flmul@grs+2)^0,f,c
  9098  002002  223B               	addwfc	(___flmul@grs+3)^0,f,c
  9099  002004  5042               	movf	(___flmul@temp+1)^0,w,c
  9100  002006  263D               	addwf	___flmul@prod^0,f,c
  9101  002008  0E00               	movlw	0
  9102  00200A  223E               	addwfc	(___flmul@prod+1)^0,f,c
  9103  00200C  223F               	addwfc	(___flmul@prod+2)^0,f,c
  9104  00200E  2240               	addwfc	(___flmul@prod+3)^0,f,c
  9105  002010  502E               	movf	___flmul@a^0,w,c
  9106  002012  022C               	mulwf	(___flmul@b+2)^0,c
  9107  002014  CFF3 F041          	movff	prodl,___flmul@temp
  9108  002018  CFF4 F042          	movff	prodh,___flmul@temp+1
  9109  00201C  5041               	movf	___flmul@temp^0,w,c
  9110  00201E  2638               	addwf	___flmul@grs^0,f,c
  9111  002020  0E00               	movlw	0
  9112  002022  2239               	addwfc	(___flmul@grs+1)^0,f,c
  9113  002024  223A               	addwfc	(___flmul@grs+2)^0,f,c
  9114  002026  223B               	addwfc	(___flmul@grs+3)^0,f,c
  9115  002028  5042               	movf	(___flmul@temp+1)^0,w,c
  9116  00202A  263D               	addwf	___flmul@prod^0,f,c
  9117  00202C  0E00               	movlw	0
  9118  00202E  223E               	addwfc	(___flmul@prod+1)^0,f,c
  9119  002030  223F               	addwfc	(___flmul@prod+2)^0,f,c
  9120  002032  2240               	addwfc	(___flmul@prod+3)^0,f,c
  9121  002034  C03A  F03B         	movff	___flmul@grs+2,___flmul@grs+3
  9122  002038  C039  F03A         	movff	___flmul@grs+1,___flmul@grs+2
  9123  00203C  C038  F039         	movff	___flmul@grs,___flmul@grs+1
  9124  002040  6A38               	clrf	___flmul@grs^0,c
  9125  002042  502E               	movf	___flmul@a^0,w,c
  9126  002044  022B               	mulwf	(___flmul@b+1)^0,c
  9127  002046  CFF3 F041          	movff	prodl,___flmul@temp
  9128  00204A  CFF4 F042          	movff	prodh,___flmul@temp+1
  9129  00204E  5041               	movf	___flmul@temp^0,w,c
  9130  002050  2638               	addwf	___flmul@grs^0,f,c
  9131  002052  5042               	movf	(___flmul@temp+1)^0,w,c
  9132  002054  2239               	addwfc	(___flmul@grs+1)^0,f,c
  9133  002056  0E00               	movlw	0
  9134  002058  223A               	addwfc	(___flmul@grs+2)^0,f,c
  9135  00205A  0E00               	movlw	0
  9136  00205C  223B               	addwfc	(___flmul@grs+3)^0,f,c
  9137  00205E  502F               	movf	(___flmul@a+1)^0,w,c
  9138  002060  022A               	mulwf	___flmul@b^0,c
  9139  002062  CFF3 F041          	movff	prodl,___flmul@temp
  9140  002066  CFF4 F042          	movff	prodh,___flmul@temp+1
  9141  00206A  5041               	movf	___flmul@temp^0,w,c
  9142  00206C  2638               	addwf	___flmul@grs^0,f,c
  9143  00206E  5042               	movf	(___flmul@temp+1)^0,w,c
  9144  002070  2239               	addwfc	(___flmul@grs+1)^0,f,c
  9145  002072  0E00               	movlw	0
  9146  002074  223A               	addwfc	(___flmul@grs+2)^0,f,c
  9147  002076  0E00               	movlw	0
  9148  002078  223B               	addwfc	(___flmul@grs+3)^0,f,c
  9149  00207A  C03A  F03B         	movff	___flmul@grs+2,___flmul@grs+3
  9150  00207E  C039  F03A         	movff	___flmul@grs+1,___flmul@grs+2
  9151  002082  C038  F039         	movff	___flmul@grs,___flmul@grs+1
  9152  002086  6A38               	clrf	___flmul@grs^0,c
  9153  002088  502E               	movf	___flmul@a^0,w,c
  9154  00208A  022A               	mulwf	___flmul@b^0,c
  9155  00208C  CFF3 F041          	movff	prodl,___flmul@temp
  9156  002090  CFF4 F042          	movff	prodh,___flmul@temp+1
  9157  002094  5041               	movf	___flmul@temp^0,w,c
  9158  002096  2638               	addwf	___flmul@grs^0,f,c
  9159  002098  5042               	movf	(___flmul@temp+1)^0,w,c
  9160  00209A  2239               	addwfc	(___flmul@grs+1)^0,f,c
  9161  00209C  0E00               	movlw	0
  9162  00209E  223A               	addwfc	(___flmul@grs+2)^0,f,c
  9163  0020A0  0E00               	movlw	0
  9164  0020A2  223B               	addwfc	(___flmul@grs+3)^0,f,c
  9165  0020A4  5030               	movf	(___flmul@a+2)^0,w,c
  9166  0020A6  022B               	mulwf	(___flmul@b+1)^0,c
  9167  0020A8  CFF3 F041          	movff	prodl,___flmul@temp
  9168  0020AC  CFF4 F042          	movff	prodh,___flmul@temp+1
  9169  0020B0  5041               	movf	___flmul@temp^0,w,c
  9170  0020B2  263D               	addwf	___flmul@prod^0,f,c
  9171  0020B4  5042               	movf	(___flmul@temp+1)^0,w,c
  9172  0020B6  223E               	addwfc	(___flmul@prod+1)^0,f,c
  9173  0020B8  0E00               	movlw	0
  9174  0020BA  223F               	addwfc	(___flmul@prod+2)^0,f,c
  9175  0020BC  0E00               	movlw	0
  9176  0020BE  2240               	addwfc	(___flmul@prod+3)^0,f,c
  9177  0020C0  502F               	movf	(___flmul@a+1)^0,w,c
  9178  0020C2  022C               	mulwf	(___flmul@b+2)^0,c
  9179  0020C4  CFF3 F041          	movff	prodl,___flmul@temp
  9180  0020C8  CFF4 F042          	movff	prodh,___flmul@temp+1
  9181  0020CC  5041               	movf	___flmul@temp^0,w,c
  9182  0020CE  263D               	addwf	___flmul@prod^0,f,c
  9183  0020D0  5042               	movf	(___flmul@temp+1)^0,w,c
  9184  0020D2  223E               	addwfc	(___flmul@prod+1)^0,f,c
  9185  0020D4  0E00               	movlw	0
  9186  0020D6  223F               	addwfc	(___flmul@prod+2)^0,f,c
  9187  0020D8  0E00               	movlw	0
  9188  0020DA  2240               	addwfc	(___flmul@prod+3)^0,f,c
  9189  0020DC  5030               	movf	(___flmul@a+2)^0,w,c
  9190  0020DE  022C               	mulwf	(___flmul@b+2)^0,c
  9191  0020E0  CFF3 F041          	movff	prodl,___flmul@temp
  9192  0020E4  CFF4 F042          	movff	prodh,___flmul@temp+1
  9193  0020E8  5041               	movf	___flmul@temp^0,w,c
  9194  0020EA  6E32               	movwf	??___flmul^0,c
  9195  0020EC  5042               	movf	(___flmul@temp+1)^0,w,c
  9196  0020EE  6E33               	movwf	(??___flmul+1)^0,c
  9197  0020F0  6A34               	clrf	(??___flmul+2)^0,c
  9198  0020F2  6A35               	clrf	(??___flmul+3)^0,c
  9199  0020F4  C034  F035         	movff	??___flmul+2,??___flmul+3
  9200  0020F8  C033  F034         	movff	??___flmul+1,??___flmul+2
  9201  0020FC  C032  F033         	movff	??___flmul,??___flmul+1
  9202  002100  6A32               	clrf	??___flmul^0,c
  9203  002102  5032               	movf	??___flmul^0,w,c
  9204  002104  263D               	addwf	___flmul@prod^0,f,c
  9205  002106  5033               	movf	(??___flmul+1)^0,w,c
  9206  002108  223E               	addwfc	(___flmul@prod+1)^0,f,c
  9207  00210A  5034               	movf	(??___flmul+2)^0,w,c
  9208  00210C  223F               	addwfc	(___flmul@prod+2)^0,f,c
  9209  00210E  5035               	movf	(??___flmul+3)^0,w,c
  9210  002110  2240               	addwfc	(___flmul@prod+3)^0,f,c
  9211  002112  C038  F032         	movff	___flmul@grs,??___flmul
  9212  002116  C039  F033         	movff	___flmul@grs+1,??___flmul+1
  9213  00211A  C03A  F034         	movff	___flmul@grs+2,??___flmul+2
  9214  00211E  C03B  F035         	movff	___flmul@grs+3,??___flmul+3
  9215  002122  0E19               	movlw	25
  9216  002124  EF99  F010         	goto	u6010
  9217  002128                     u6015:
  9218  002128  90D8               	bcf	status,0,c
  9219  00212A  3235               	rrcf	(??___flmul+3)^0,f,c
  9220  00212C  3234               	rrcf	(??___flmul+2)^0,f,c
  9221  00212E  3233               	rrcf	(??___flmul+1)^0,f,c
  9222  002130  3232               	rrcf	??___flmul^0,f,c
  9223  002132                     u6010:
  9224  002132  2EE8               	decfsz	wreg,f,c
  9225  002134  EF94  F010         	goto	u6015
  9226  002138  5032               	movf	??___flmul^0,w,c
  9227  00213A  263D               	addwf	___flmul@prod^0,f,c
  9228  00213C  5033               	movf	(??___flmul+1)^0,w,c
  9229  00213E  223E               	addwfc	(___flmul@prod+1)^0,f,c
  9230  002140  5034               	movf	(??___flmul+2)^0,w,c
  9231  002142  223F               	addwfc	(___flmul@prod+2)^0,f,c
  9232  002144  5035               	movf	(??___flmul+3)^0,w,c
  9233  002146  2240               	addwfc	(___flmul@prod+3)^0,f,c
  9234  002148  C03A  F03B         	movff	___flmul@grs+2,___flmul@grs+3
  9235  00214C  C039  F03A         	movff	___flmul@grs+1,___flmul@grs+2
  9236  002150  C038  F039         	movff	___flmul@grs,___flmul@grs+1
  9237  002154  6A38               	clrf	___flmul@grs^0,c
  9238  002156  5037               	movf	___flmul@aexp^0,w,c
  9239  002158  C03C  F032         	movff	___flmul@bexp,??___flmul
  9240  00215C  6A33               	clrf	(??___flmul+1)^0,c
  9241  00215E  2632               	addwf	??___flmul^0,f,c
  9242  002160  0E00               	movlw	0
  9243  002162  2233               	addwfc	(??___flmul+1)^0,f,c
  9244  002164  0E82               	movlw	130
  9245  002166  2432               	addwf	??___flmul^0,w,c
  9246  002168  6E41               	movwf	___flmul@temp^0,c
  9247  00216A  0EFF               	movlw	255
  9248  00216C  2033               	addwfc	(??___flmul+1)^0,w,c
  9249  00216E  6E42               	movwf	(___flmul@temp+1)^0,c
  9250  002170  EFCF  F010         	goto	l5760
  9251  002174                     l5754:
  9252  002174  90D8               	bcf	status,0,c
  9253  002176  363D               	rlcf	___flmul@prod^0,f,c
  9254  002178  363E               	rlcf	(___flmul@prod+1)^0,f,c
  9255  00217A  363F               	rlcf	(___flmul@prod+2)^0,f,c
  9256  00217C  3640               	rlcf	(___flmul@prod+3)^0,f,c
  9257  00217E  AE3B               	btfss	(___flmul@grs+3)^0,7,c
  9258  002180  EFC4  F010         	goto	u6021
  9259  002184  EFC6  F010         	goto	u6020
  9260  002188                     u6021:
  9261  002188  EFC7  F010         	goto	l1363
  9262  00218C                     u6020:
  9263  00218C  803D               	bsf	___flmul@prod^0,0,c
  9264  00218E                     l1363:
  9265  00218E  90D8               	bcf	status,0,c
  9266  002190  3638               	rlcf	___flmul@grs^0,f,c
  9267  002192  3639               	rlcf	(___flmul@grs+1)^0,f,c
  9268  002194  363A               	rlcf	(___flmul@grs+2)^0,f,c
  9269  002196  363B               	rlcf	(___flmul@grs+3)^0,f,c
  9270  002198  0641               	decf	___flmul@temp^0,f,c
  9271  00219A  A0D8               	btfss	status,0,c
  9272  00219C  0642               	decf	(___flmul@temp+1)^0,f,c
  9273  00219E                     l5760:
  9274  00219E  AE3F               	btfss	(___flmul@prod+2)^0,7,c
  9275  0021A0  EFD4  F010         	goto	u6031
  9276  0021A4  EFD6  F010         	goto	u6030
  9277  0021A8                     u6031:
  9278  0021A8  EFBA  F010         	goto	l5754
  9279  0021AC                     u6030:
  9280  0021AC  0E00               	movlw	0
  9281  0021AE  6E37               	movwf	___flmul@aexp^0,c
  9282  0021B0  AE3B               	btfss	(___flmul@grs+3)^0,7,c
  9283  0021B2  EFDD  F010         	goto	u6041
  9284  0021B6  EFDF  F010         	goto	u6040
  9285  0021BA                     u6041:
  9286  0021BA  EF03  F011         	goto	l1365
  9287  0021BE                     u6040:
  9288  0021BE  0EFF               	movlw	255
  9289  0021C0  1438               	andwf	___flmul@grs^0,w,c
  9290  0021C2  6E32               	movwf	??___flmul^0,c
  9291  0021C4  0EFF               	movlw	255
  9292  0021C6  1439               	andwf	(___flmul@grs+1)^0,w,c
  9293  0021C8  6E33               	movwf	(??___flmul+1)^0,c
  9294  0021CA  0EFF               	movlw	255
  9295  0021CC  143A               	andwf	(___flmul@grs+2)^0,w,c
  9296  0021CE  6E34               	movwf	(??___flmul+2)^0,c
  9297  0021D0  0E7F               	movlw	127
  9298  0021D2  143B               	andwf	(___flmul@grs+3)^0,w,c
  9299  0021D4  6E35               	movwf	(??___flmul+3)^0,c
  9300  0021D6  5032               	movf	??___flmul^0,w,c
  9301  0021D8  1033               	iorwf	(??___flmul+1)^0,w,c
  9302  0021DA  1034               	iorwf	(??___flmul+2)^0,w,c
  9303  0021DC  1035               	iorwf	(??___flmul+3)^0,w,c
  9304  0021DE  B4D8               	btfsc	status,2,c
  9305  0021E0  EFF4  F010         	goto	u6051
  9306  0021E4  EFF6  F010         	goto	u6050
  9307  0021E8                     u6051:
  9308  0021E8  EFFA  F010         	goto	l1366
  9309  0021EC                     u6050:
  9310  0021EC                     l5768:
  9311  0021EC  0E01               	movlw	1
  9312  0021EE  6E37               	movwf	___flmul@aexp^0,c
  9313  0021F0  EF03  F011         	goto	l1365
  9314  0021F4                     l1366:
  9315  0021F4  A03D               	btfss	___flmul@prod^0,0,c
  9316  0021F6  EFFF  F010         	goto	u6061
  9317  0021FA  EF01  F011         	goto	u6060
  9318  0021FE                     u6061:
  9319  0021FE  EF03  F011         	goto	l1365
  9320  002202                     u6060:
  9321  002202  EFF6  F010         	goto	l5768
  9322  002206                     l1365:
  9323  002206  5037               	movf	___flmul@aexp^0,w,c
  9324  002208  B4D8               	btfsc	status,2,c
  9325  00220A  EF09  F011         	goto	u6071
  9326  00220E  EF0B  F011         	goto	u6070
  9327  002212                     u6071:
  9328  002212  EF2F  F011         	goto	l5780
  9329  002216                     u6070:
  9330  002216  0E01               	movlw	1
  9331  002218  263D               	addwf	___flmul@prod^0,f,c
  9332  00221A  0E00               	movlw	0
  9333  00221C  223E               	addwfc	(___flmul@prod+1)^0,f,c
  9334  00221E  223F               	addwfc	(___flmul@prod+2)^0,f,c
  9335  002220  2240               	addwfc	(___flmul@prod+3)^0,f,c
  9336  002222  A040               	btfss	(___flmul@prod+3)^0,0,c
  9337  002224  EF16  F011         	goto	u6081
  9338  002228  EF18  F011         	goto	u6080
  9339  00222C                     u6081:
  9340  00222C  EF2F  F011         	goto	l5780
  9341  002230                     u6080:
  9342  002230  C03D  F032         	movff	___flmul@prod,??___flmul
  9343  002234  C03E  F033         	movff	___flmul@prod+1,??___flmul+1
  9344  002238  C03F  F034         	movff	___flmul@prod+2,??___flmul+2
  9345  00223C  C040  F035         	movff	___flmul@prod+3,??___flmul+3
  9346  002240  3435               	rlcf	(??___flmul+3)^0,w,c
  9347  002242  3235               	rrcf	(??___flmul+3)^0,f,c
  9348  002244  3234               	rrcf	(??___flmul+2)^0,f,c
  9349  002246  3233               	rrcf	(??___flmul+1)^0,f,c
  9350  002248  3232               	rrcf	??___flmul^0,f,c
  9351  00224A  C032  F03D         	movff	??___flmul,___flmul@prod
  9352  00224E  C033  F03E         	movff	??___flmul+1,___flmul@prod+1
  9353  002252  C034  F03F         	movff	??___flmul+2,___flmul@prod+2
  9354  002256  C035  F040         	movff	??___flmul+3,___flmul@prod+3
  9355  00225A  4A41               	infsnz	___flmul@temp^0,f,c
  9356  00225C  2A42               	incf	(___flmul@temp+1)^0,f,c
  9357  00225E                     l5780:
  9358  00225E  BE42               	btfsc	(___flmul@temp+1)^0,7,c
  9359  002260  EF3A  F011         	goto	u6091
  9360  002264  5042               	movf	(___flmul@temp+1)^0,w,c
  9361  002266  E108               	bnz	u6090
  9362  002268  2841               	incf	___flmul@temp^0,w,c
  9363  00226A  A0D8               	btfss	status,0,c
  9364  00226C  EF3A  F011         	goto	u6091
  9365  002270  EF3C  F011         	goto	u6090
  9366  002274                     u6091:
  9367  002274  EF46  F011         	goto	l5784
  9368  002278                     u6090:
  9369  002278  0E00               	movlw	0
  9370  00227A  6E3D               	movwf	___flmul@prod^0,c
  9371  00227C  0E00               	movlw	0
  9372  00227E  6E3E               	movwf	(___flmul@prod+1)^0,c
  9373  002280  0E80               	movlw	128
  9374  002282  6E3F               	movwf	(___flmul@prod+2)^0,c
  9375  002284  0E7F               	movlw	127
  9376  002286  6E40               	movwf	(___flmul@prod+3)^0,c
  9377  002288  EF74  F011         	goto	l5796
  9378  00228C                     l5784:
  9379  00228C  BE42               	btfsc	(___flmul@temp+1)^0,7,c
  9380  00228E  EF53  F011         	goto	u6100
  9381  002292  5042               	movf	(___flmul@temp+1)^0,w,c
  9382  002294  E106               	bnz	u6101
  9383  002296  0441               	decf	___flmul@temp^0,w,c
  9384  002298  B0D8               	btfsc	status,0,c
  9385  00229A  EF51  F011         	goto	u6101
  9386  00229E  EF53  F011         	goto	u6100
  9387  0022A2                     u6101:
  9388  0022A2  EF5F  F011         	goto	l1373
  9389  0022A6                     u6100:
  9390  0022A6  0E00               	movlw	0
  9391  0022A8  6E3D               	movwf	___flmul@prod^0,c
  9392  0022AA  0E00               	movlw	0
  9393  0022AC  6E3E               	movwf	(___flmul@prod+1)^0,c
  9394  0022AE  0E00               	movlw	0
  9395  0022B0  6E3F               	movwf	(___flmul@prod+2)^0,c
  9396  0022B2  0E00               	movlw	0
  9397  0022B4  6E40               	movwf	(___flmul@prod+3)^0,c
  9398  0022B6  0E00               	movlw	0
  9399  0022B8  6E36               	movwf	___flmul@sign^0,c
  9400  0022BA  EF74  F011         	goto	l5796
  9401  0022BE                     l1373:
  9402  0022BE  C041  F03C         	movff	___flmul@temp,___flmul@bexp
  9403  0022C2  0EFF               	movlw	255
  9404  0022C4  163D               	andwf	___flmul@prod^0,f,c
  9405  0022C6  0EFF               	movlw	255
  9406  0022C8  163E               	andwf	(___flmul@prod+1)^0,f,c
  9407  0022CA  0E7F               	movlw	127
  9408  0022CC  163F               	andwf	(___flmul@prod+2)^0,f,c
  9409  0022CE  0E00               	movlw	0
  9410  0022D0  1640               	andwf	(___flmul@prod+3)^0,f,c
  9411  0022D2  A03C               	btfss	___flmul@bexp^0,0,c
  9412  0022D4  EF6E  F011         	goto	u6111
  9413  0022D8  EF70  F011         	goto	u6110
  9414  0022DC                     u6111:
  9415  0022DC  EF71  F011         	goto	l5794
  9416  0022E0                     u6110:
  9417  0022E0  8E3F               	bsf	(___flmul@prod+2)^0,7,c
  9418  0022E2                     l5794:
  9419  0022E2  90D8               	bcf	status,0,c
  9420  0022E4  303C               	rrcf	___flmul@bexp^0,w,c
  9421  0022E6  6E40               	movwf	(___flmul@prod+3)^0,c
  9422  0022E8                     l5796:
  9423  0022E8  5036               	movf	___flmul@sign^0,w,c
  9424  0022EA  1240               	iorwf	(___flmul@prod+3)^0,f,c
  9425  0022EC  C03D  F02A         	movff	___flmul@prod,?___flmul
  9426  0022F0  C03E  F02B         	movff	___flmul@prod+1,?___flmul+1
  9427  0022F4  C03F  F02C         	movff	___flmul@prod+2,?___flmul+2
  9428  0022F8  C040  F02D         	movff	___flmul@prod+3,?___flmul+3
  9429  0022FC                     l1360:
  9430  0022FC  0012               	return		;funcret
  9431  0022FE                     __end_of___flmul:
  9432                           	callstack 0
  9433                           
  9434 ;; *************** function ___flge *****************
  9435 ;; Defined at:
  9436 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\flge.c"
  9437 ;; Parameters:    Size  Location     Type
  9438 ;;  ff1             4    2[COMRAM] unsigned char 
  9439 ;;  ff2             4    6[COMRAM] unsigned char 
  9440 ;; Auto vars:     Size  Location     Type
  9441 ;;		None
  9442 ;; Return value:  Size  Location     Type
  9443 ;;		None               void
  9444 ;; Registers used:
  9445 ;;		wreg, status,2, status,0
  9446 ;; Tracked objects:
  9447 ;;		On entry : 0/0
  9448 ;;		On exit  : 0/0
  9449 ;;		Unchanged: 0/0
  9450 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9451 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9452 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9453 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9454 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9455 ;;Total ram usage:       12 bytes
  9456 ;; Hardware stack levels used: 1
  9457 ;; Hardware stack levels required when called: 2
  9458 ;; This function calls:
  9459 ;;		Nothing
  9460 ;; This function is called by:
  9461 ;;		_roundf
  9462 ;; This function uses a non-reentrant model
  9463 ;;
  9464                           
  9465                           	psect	text47
  9466  0047BA                     __ptext47:
  9467                           	callstack 0
  9468  0047BA                     ___flge:
  9469                           	callstack 24
  9470  0047BA  0E00               	movlw	0
  9471  0047BC  1403               	andwf	___flge@ff1^0,w,c
  9472  0047BE  6E0B               	movwf	??___flge^0,c
  9473  0047C0  0E00               	movlw	0
  9474  0047C2  1404               	andwf	(___flge@ff1+1)^0,w,c
  9475  0047C4  6E0C               	movwf	(??___flge+1)^0,c
  9476  0047C6  0E80               	movlw	128
  9477  0047C8  1405               	andwf	(___flge@ff1+2)^0,w,c
  9478  0047CA  6E0D               	movwf	(??___flge+2)^0,c
  9479  0047CC  0E7F               	movlw	127
  9480  0047CE  1406               	andwf	(___flge@ff1+3)^0,w,c
  9481  0047D0  6E0E               	movwf	(??___flge+3)^0,c
  9482  0047D2  500B               	movf	??___flge^0,w,c
  9483  0047D4  100C               	iorwf	(??___flge+1)^0,w,c
  9484  0047D6  100D               	iorwf	(??___flge+2)^0,w,c
  9485  0047D8  100E               	iorwf	(??___flge+3)^0,w,c
  9486  0047DA  A4D8               	btfss	status,2,c
  9487  0047DC  EFF2  F023         	goto	u6121
  9488  0047E0  EFF4  F023         	goto	u6120
  9489  0047E4                     u6121:
  9490  0047E4  EFFC  F023         	goto	l5812
  9491  0047E8                     u6120:
  9492  0047E8  0E00               	movlw	0
  9493  0047EA  6E03               	movwf	___flge@ff1^0,c
  9494  0047EC  0E00               	movlw	0
  9495  0047EE  6E04               	movwf	(___flge@ff1+1)^0,c
  9496  0047F0  0E00               	movlw	0
  9497  0047F2  6E05               	movwf	(___flge@ff1+2)^0,c
  9498  0047F4  0E00               	movlw	0
  9499  0047F6  6E06               	movwf	(___flge@ff1+3)^0,c
  9500  0047F8                     l5812:
  9501  0047F8  0E00               	movlw	0
  9502  0047FA  1407               	andwf	___flge@ff2^0,w,c
  9503  0047FC  6E0B               	movwf	??___flge^0,c
  9504  0047FE  0E00               	movlw	0
  9505  004800  1408               	andwf	(___flge@ff2+1)^0,w,c
  9506  004802  6E0C               	movwf	(??___flge+1)^0,c
  9507  004804  0E80               	movlw	128
  9508  004806  1409               	andwf	(___flge@ff2+2)^0,w,c
  9509  004808  6E0D               	movwf	(??___flge+2)^0,c
  9510  00480A  0E7F               	movlw	127
  9511  00480C  140A               	andwf	(___flge@ff2+3)^0,w,c
  9512  00480E  6E0E               	movwf	(??___flge+3)^0,c
  9513  004810  500B               	movf	??___flge^0,w,c
  9514  004812  100C               	iorwf	(??___flge+1)^0,w,c
  9515  004814  100D               	iorwf	(??___flge+2)^0,w,c
  9516  004816  100E               	iorwf	(??___flge+3)^0,w,c
  9517  004818  A4D8               	btfss	status,2,c
  9518  00481A  EF11  F024         	goto	u6131
  9519  00481E  EF13  F024         	goto	u6130
  9520  004822                     u6131:
  9521  004822  EF1B  F024         	goto	l5816
  9522  004826                     u6130:
  9523  004826  0E00               	movlw	0
  9524  004828  6E07               	movwf	___flge@ff2^0,c
  9525  00482A  0E00               	movlw	0
  9526  00482C  6E08               	movwf	(___flge@ff2+1)^0,c
  9527  00482E  0E00               	movlw	0
  9528  004830  6E09               	movwf	(___flge@ff2+2)^0,c
  9529  004832  0E00               	movlw	0
  9530  004834  6E0A               	movwf	(___flge@ff2+3)^0,c
  9531  004836                     l5816:
  9532  004836  AE06               	btfss	(___flge@ff1+3)^0,7,c
  9533  004838  EF20  F024         	goto	u6141
  9534  00483C  EF22  F024         	goto	u6140
  9535  004840                     u6141:
  9536  004840  EF2B  F024         	goto	l5820
  9537  004844                     u6140:
  9538  004844  6C03               	negf	___flge@ff1^0,c
  9539  004846  1E04               	comf	(___flge@ff1+1)^0,f,c
  9540  004848  B0D8               	btfsc	status,0,c
  9541  00484A  2A04               	incf	(___flge@ff1+1)^0,f,c
  9542  00484C  1E05               	comf	(___flge@ff1+2)^0,f,c
  9543  00484E  B0D8               	btfsc	status,0,c
  9544  004850  2A05               	incf	(___flge@ff1+2)^0,f,c
  9545  004852  0E80               	movlw	128
  9546  004854  5606               	subfwb	(___flge@ff1+3)^0,f,c
  9547  004856                     l5820:
  9548  004856  AE0A               	btfss	(___flge@ff2+3)^0,7,c
  9549  004858  EF30  F024         	goto	u6151
  9550  00485C  EF32  F024         	goto	u6150
  9551  004860                     u6151:
  9552  004860  EF3B  F024         	goto	l1007
  9553  004864                     u6150:
  9554  004864  6C07               	negf	___flge@ff2^0,c
  9555  004866  1E08               	comf	(___flge@ff2+1)^0,f,c
  9556  004868  B0D8               	btfsc	status,0,c
  9557  00486A  2A08               	incf	(___flge@ff2+1)^0,f,c
  9558  00486C  1E09               	comf	(___flge@ff2+2)^0,f,c
  9559  00486E  B0D8               	btfsc	status,0,c
  9560  004870  2A09               	incf	(___flge@ff2+2)^0,f,c
  9561  004872  0E80               	movlw	128
  9562  004874  560A               	subfwb	(___flge@ff2+3)^0,f,c
  9563  004876                     l1007:
  9564  004876  0E00               	movlw	0
  9565  004878  1A03               	xorwf	___flge@ff1^0,f,c
  9566  00487A  0E00               	movlw	0
  9567  00487C  1A04               	xorwf	(___flge@ff1+1)^0,f,c
  9568  00487E  0E00               	movlw	0
  9569  004880  1A05               	xorwf	(___flge@ff1+2)^0,f,c
  9570  004882  0E80               	movlw	128
  9571  004884  1A06               	xorwf	(___flge@ff1+3)^0,f,c
  9572  004886  0E00               	movlw	0
  9573  004888  1A07               	xorwf	___flge@ff2^0,f,c
  9574  00488A  0E00               	movlw	0
  9575  00488C  1A08               	xorwf	(___flge@ff2+1)^0,f,c
  9576  00488E  0E00               	movlw	0
  9577  004890  1A09               	xorwf	(___flge@ff2+2)^0,f,c
  9578  004892  0E80               	movlw	128
  9579  004894  1A0A               	xorwf	(___flge@ff2+3)^0,f,c
  9580  004896  5007               	movf	___flge@ff2^0,w,c
  9581  004898  5C03               	subwf	___flge@ff1^0,w,c
  9582  00489A  5008               	movf	(___flge@ff2+1)^0,w,c
  9583  00489C  5804               	subwfb	(___flge@ff1+1)^0,w,c
  9584  00489E  5009               	movf	(___flge@ff2+2)^0,w,c
  9585  0048A0  5805               	subwfb	(___flge@ff1+2)^0,w,c
  9586  0048A2  500A               	movf	(___flge@ff2+3)^0,w,c
  9587  0048A4  5806               	subwfb	(___flge@ff1+3)^0,w,c
  9588  0048A6  B0D8               	btfsc	status,0,c
  9589  0048A8  EF58  F024         	goto	u6161
  9590  0048AC  EF5A  F024         	goto	u6160
  9591  0048B0                     u6161:
  9592  0048B0  EF5D  F024         	goto	l5826
  9593  0048B4                     u6160:
  9594  0048B4  90D8               	bcf	status,0,c
  9595  0048B6  EF5E  F024         	goto	l1012
  9596  0048BA                     l5826:
  9597  0048BA  80D8               	bsf	status,0,c
  9598  0048BC                     l1012:
  9599  0048BC  0012               	return		;funcret
  9600  0048BE                     __end_of___flge:
  9601                           	callstack 0
  9602                           
  9603 ;; *************** function ___fltol *****************
  9604 ;; Defined at:
  9605 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\fltol.c"
  9606 ;; Parameters:    Size  Location     Type
  9607 ;;  f1              4   18[BANK0 ] unsigned char 
  9608 ;; Auto vars:     Size  Location     Type
  9609 ;;  exp1            1   79[COMRAM] unsigned char 
  9610 ;;  sign1           1   78[COMRAM] unsigned char 
  9611 ;; Return value:  Size  Location     Type
  9612 ;;                  4   18[BANK0 ] long 
  9613 ;; Registers used:
  9614 ;;		wreg, status,2, status,0
  9615 ;; Tracked objects:
  9616 ;;		On entry : 0/0
  9617 ;;		On exit  : 0/0
  9618 ;;		Unchanged: 0/0
  9619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9620 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9621 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9622 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9623 ;;      Totals:         6       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9624 ;;Total ram usage:       10 bytes
  9625 ;; Hardware stack levels used: 1
  9626 ;; Hardware stack levels required when called: 2
  9627 ;; This function calls:
  9628 ;;		Nothing
  9629 ;; This function is called by:
  9630 ;;		_lroundf
  9631 ;; This function uses a non-reentrant model
  9632 ;;
  9633                           
  9634                           	psect	text48
  9635  0046B2                     __ptext48:
  9636                           	callstack 0
  9637  0046B2                     ___fltol:
  9638                           	callstack 25
  9639  0046B2  0100               	movlb	0	; () banked
  9640  0046B4  3574               	rlcf	(___fltol@f1+2)& (0+255),w,b
  9641  0046B6  3575               	rlcf	(___fltol@f1+3)& (0+255),w,b
  9642  0046B8  6E50               	movwf	___fltol@exp1^0,c
  9643  0046BA  5050               	movf	___fltol@exp1^0,w,c
  9644  0046BC  A4D8               	btfss	status,2,c
  9645  0046BE  EF63  F023         	goto	u6181
  9646  0046C2  EF65  F023         	goto	u6180
  9647  0046C6                     u6181:
  9648  0046C6  EF6F  F023         	goto	l5844
  9649  0046CA                     u6180:
  9650  0046CA                     l5840:
  9651                           
  9652                           ; BSR set to: 0
  9653  0046CA  0E00               	movlw	0
  9654  0046CC  6F72               	movwf	?___fltol& (0+255),b
  9655  0046CE  0E00               	movlw	0
  9656  0046D0  6F73               	movwf	(?___fltol+1)& (0+255),b
  9657  0046D2  0E00               	movlw	0
  9658  0046D4  6F74               	movwf	(?___fltol+2)& (0+255),b
  9659  0046D6  0E00               	movlw	0
  9660  0046D8  6F75               	movwf	(?___fltol+3)& (0+255),b
  9661  0046DA  EFDC  F023         	goto	l1039
  9662  0046DE                     l5844:
  9663                           
  9664                           ; BSR set to: 0
  9665  0046DE  C072  F04B         	movff	___fltol@f1,??___fltol
  9666  0046E2  C073  F04C         	movff	___fltol@f1+1,??___fltol+1
  9667  0046E6  C074  F04D         	movff	___fltol@f1+2,??___fltol+2
  9668  0046EA  C075  F04E         	movff	___fltol@f1+3,??___fltol+3
  9669  0046EE  0E20               	movlw	32
  9670  0046F0  EF7F  F023         	goto	u6190
  9671  0046F4                     u6195:
  9672  0046F4  90D8               	bcf	status,0,c
  9673  0046F6  324E               	rrcf	(??___fltol+3)^0,f,c
  9674  0046F8  324D               	rrcf	(??___fltol+2)^0,f,c
  9675  0046FA  324C               	rrcf	(??___fltol+1)^0,f,c
  9676  0046FC  324B               	rrcf	??___fltol^0,f,c
  9677  0046FE                     u6190:
  9678  0046FE  2EE8               	decfsz	wreg,f,c
  9679  004700  EF7A  F023         	goto	u6195
  9680  004704  504B               	movf	??___fltol^0,w,c
  9681  004706  6E4F               	movwf	___fltol@sign1^0,c
  9682  004708                     
  9683                           ; BSR set to: 0
  9684  004708  8F74               	bsf	(___fltol@f1+2)& (0+255),7,b
  9685  00470A                     
  9686                           ; BSR set to: 0
  9687  00470A  0EFF               	movlw	255
  9688  00470C  1772               	andwf	___fltol@f1& (0+255),f,b
  9689  00470E  0EFF               	movlw	255
  9690  004710  1773               	andwf	(___fltol@f1+1)& (0+255),f,b
  9691  004712  0EFF               	movlw	255
  9692  004714  1774               	andwf	(___fltol@f1+2)& (0+255),f,b
  9693  004716  0E00               	movlw	0
  9694  004718  1775               	andwf	(___fltol@f1+3)& (0+255),f,b
  9695  00471A                     
  9696                           ; BSR set to: 0
  9697  00471A  0E96               	movlw	150
  9698  00471C  5E50               	subwf	___fltol@exp1^0,f,c
  9699  00471E                     
  9700                           ; BSR set to: 0
  9701  00471E  BE50               	btfsc	___fltol@exp1^0,7,c
  9702  004720  EF96  F023         	goto	u6200
  9703  004724  EF94  F023         	goto	u6201
  9704  004728                     u6201:
  9705  004728  EFAC  F023         	goto	l5864
  9706  00472C                     u6200:
  9707  00472C                     
  9708                           ; BSR set to: 0
  9709  00472C  5050               	movf	___fltol@exp1^0,w,c
  9710  00472E  0A80               	xorlw	128
  9711  004730  0F97               	addlw	151
  9712  004732  B0D8               	btfsc	status,0,c
  9713  004734  EF9E  F023         	goto	u6211
  9714  004738  EFA0  F023         	goto	u6210
  9715  00473C                     u6211:
  9716  00473C  EFA2  F023         	goto	l5860
  9717  004740                     u6210:
  9718  004740  EF65  F023         	goto	l5840
  9719  004744                     l5860:
  9720                           
  9721                           ; BSR set to: 0
  9722  004744  90D8               	bcf	status,0,c
  9723  004746  3375               	rrcf	(___fltol@f1+3)& (0+255),f,b
  9724  004748  3374               	rrcf	(___fltol@f1+2)& (0+255),f,b
  9725  00474A  3373               	rrcf	(___fltol@f1+1)& (0+255),f,b
  9726  00474C  3372               	rrcf	___fltol@f1& (0+255),f,b
  9727  00474E                     
  9728                           ; BSR set to: 0
  9729  00474E  3E50               	incfsz	___fltol@exp1^0,f,c
  9730  004750  EFA2  F023         	goto	l5860
  9731  004754  EFC4  F023         	goto	l5874
  9732  004758                     l5864:
  9733                           
  9734                           ; BSR set to: 0
  9735  004758  0E1F               	movlw	31
  9736  00475A  6450               	cpfsgt	___fltol@exp1^0,c
  9737  00475C  EFB2  F023         	goto	u6221
  9738  004760  EFB4  F023         	goto	u6220
  9739  004764                     u6221:
  9740  004764  EFBC  F023         	goto	l5872
  9741  004768                     u6220:
  9742  004768  EF65  F023         	goto	l5840
  9743  00476C                     l5870:
  9744                           
  9745                           ; BSR set to: 0
  9746  00476C  90D8               	bcf	status,0,c
  9747  00476E  3772               	rlcf	___fltol@f1& (0+255),f,b
  9748  004770  3773               	rlcf	(___fltol@f1+1)& (0+255),f,b
  9749  004772  3774               	rlcf	(___fltol@f1+2)& (0+255),f,b
  9750  004774  3775               	rlcf	(___fltol@f1+3)& (0+255),f,b
  9751  004776  0650               	decf	___fltol@exp1^0,f,c
  9752  004778                     l5872:
  9753                           
  9754                           ; BSR set to: 0
  9755  004778  5050               	movf	___fltol@exp1^0,w,c
  9756  00477A  A4D8               	btfss	status,2,c
  9757  00477C  EFC2  F023         	goto	u6231
  9758  004780  EFC4  F023         	goto	u6230
  9759  004784                     u6231:
  9760  004784  EFB6  F023         	goto	l5870
  9761  004788                     u6230:
  9762  004788                     l5874:
  9763                           
  9764                           ; BSR set to: 0
  9765  004788  504F               	movf	___fltol@sign1^0,w,c
  9766  00478A  B4D8               	btfsc	status,2,c
  9767  00478C  EFCA  F023         	goto	u6241
  9768  004790  EFCC  F023         	goto	u6240
  9769  004794                     u6241:
  9770  004794  EFD4  F023         	goto	l5878
  9771  004798                     u6240:
  9772  004798                     
  9773                           ; BSR set to: 0
  9774  004798  1F75               	comf	(___fltol@f1+3)& (0+255),f,b
  9775  00479A  1F74               	comf	(___fltol@f1+2)& (0+255),f,b
  9776  00479C  1F73               	comf	(___fltol@f1+1)& (0+255),f,b
  9777  00479E  6D72               	negf	___fltol@f1& (0+255),b
  9778  0047A0  0E00               	movlw	0
  9779  0047A2  2373               	addwfc	(___fltol@f1+1)& (0+255),f,b
  9780  0047A4  2374               	addwfc	(___fltol@f1+2)& (0+255),f,b
  9781  0047A6  2375               	addwfc	(___fltol@f1+3)& (0+255),f,b
  9782  0047A8                     l5878:
  9783                           
  9784                           ; BSR set to: 0
  9785  0047A8  C072  F072         	movff	___fltol@f1,?___fltol
  9786  0047AC  C073  F073         	movff	___fltol@f1+1,?___fltol+1
  9787  0047B0  C074  F074         	movff	___fltol@f1+2,?___fltol+2
  9788  0047B4  C075  F075         	movff	___fltol@f1+3,?___fltol+3
  9789  0047B8                     l1039:
  9790                           
  9791                           ; BSR set to: 0
  9792  0047B8  0012               	return		;funcret
  9793  0047BA                     __end_of___fltol:
  9794                           	callstack 0
  9795                           
  9796 ;; *************** function _color_read_Clear *****************
  9797 ;; Defined at:
  9798 ;;		line 131 in file "color.c"
  9799 ;; Parameters:    Size  Location     Type
  9800 ;;		None
  9801 ;; Auto vars:     Size  Location     Type
  9802 ;;  tmp             2   11[COMRAM] unsigned int 
  9803 ;; Return value:  Size  Location     Type
  9804 ;;                  2    6[COMRAM] unsigned int 
  9805 ;; Registers used:
  9806 ;;		wreg, status,2, status,0, cstack
  9807 ;; Tracked objects:
  9808 ;;		On entry : 0/0
  9809 ;;		On exit  : 0/0
  9810 ;;		Unchanged: 0/0
  9811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9812 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9813 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9814 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9815 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9816 ;;Total ram usage:        7 bytes
  9817 ;; Hardware stack levels used: 1
  9818 ;; Hardware stack levels required when called: 4
  9819 ;; This function calls:
  9820 ;;		_I2C_2_Master_Read
  9821 ;;		_I2C_2_Master_RepStart
  9822 ;;		_I2C_2_Master_Start
  9823 ;;		_I2C_2_Master_Stop
  9824 ;;		_I2C_2_Master_Write
  9825 ;; This function is called by:
  9826 ;;		_read_color
  9827 ;;		_calibrate_white
  9828 ;;		_amb_light_measure
  9829 ;;		_distance_measure
  9830 ;; This function uses a non-reentrant model
  9831 ;;
  9832                           
  9833                           	psect	text49
  9834  005232                     __ptext49:
  9835                           	callstack 0
  9836  005232                     _color_read_Clear:
  9837                           	callstack 23
  9838  005232                     
  9839                           ;color.c: 133:  unsigned int tmp;;color.c: 134:  I2C_2_Master_Start();
  9840  005232  ECFC  F02B         	call	_I2C_2_Master_Start	;wreg free
  9841                           
  9842                           ;color.c: 135:  I2C_2_Master_Write(0x52 | 0x00);
  9843  005236  0E52               	movlw	82
  9844  005238  ECEB  F02B         	call	_I2C_2_Master_Write
  9845                           
  9846                           ;color.c: 136:  I2C_2_Master_Write(0xA0 | 0x14);
  9847  00523C  0EB4               	movlw	180
  9848  00523E  ECEB  F02B         	call	_I2C_2_Master_Write
  9849                           
  9850                           ;color.c: 137:  I2C_2_Master_RepStart();
  9851  005242  EC01  F02C         	call	_I2C_2_Master_RepStart	;wreg free
  9852                           
  9853                           ;color.c: 138:  I2C_2_Master_Write(0x52 | 0x01);
  9854  005246  0E53               	movlw	83
  9855  005248  ECEB  F02B         	call	_I2C_2_Master_Write
  9856                           
  9857                           ;color.c: 139:  tmp=I2C_2_Master_Read(1);
  9858  00524C  0E01               	movlw	1
  9859  00524E  ECCD  F029         	call	_I2C_2_Master_Read
  9860  005252  6E09               	movwf	??_color_read_Clear^0,c
  9861  005254  5009               	movf	??_color_read_Clear^0,w,c
  9862  005256  6E0C               	movwf	color_read_Clear@tmp^0,c
  9863  005258  6A0D               	clrf	(color_read_Clear@tmp+1)^0,c
  9864                           
  9865                           ;color.c: 140:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  9866  00525A  0E00               	movlw	0
  9867  00525C  ECCD  F029         	call	_I2C_2_Master_Read
  9868  005260  6E09               	movwf	??_color_read_Clear^0,c
  9869  005262  5009               	movf	??_color_read_Clear^0,w,c
  9870  005264  6E0B               	movwf	(??_color_read_Clear+2)^0,c
  9871  005266  6A0A               	clrf	(??_color_read_Clear+1)^0,c
  9872  005268  500C               	movf	color_read_Clear@tmp^0,w,c
  9873  00526A  100A               	iorwf	(??_color_read_Clear+1)^0,w,c
  9874  00526C  6E0C               	movwf	color_read_Clear@tmp^0,c
  9875  00526E  500D               	movf	(color_read_Clear@tmp+1)^0,w,c
  9876  005270  100B               	iorwf	(??_color_read_Clear+2)^0,w,c
  9877  005272  6E0D               	movwf	(color_read_Clear@tmp+1)^0,c
  9878                           
  9879                           ;color.c: 141:  I2C_2_Master_Stop();
  9880  005274  ECF7  F02B         	call	_I2C_2_Master_Stop	;wreg free
  9881  005278                     
  9882                           ;color.c: 142:  return tmp;
  9883  005278  C00C  F007         	movff	color_read_Clear@tmp,?_color_read_Clear
  9884  00527C  C00D  F008         	movff	color_read_Clear@tmp+1,?_color_read_Clear+1
  9885  005280  0012               	return		;funcret
  9886  005282                     __end_of_color_read_Clear:
  9887                           	callstack 0
  9888                           
  9889 ;; *************** function _I2C_2_Master_Write *****************
  9890 ;; Defined at:
  9891 ;;		line 45 in file "i2c.c"
  9892 ;; Parameters:    Size  Location     Type
  9893 ;;  data_byte       1    wreg     unsigned char 
  9894 ;; Auto vars:     Size  Location     Type
  9895 ;;  data_byte       1    3[COMRAM] unsigned char 
  9896 ;; Return value:  Size  Location     Type
  9897 ;;                  1    wreg      void 
  9898 ;; Registers used:
  9899 ;;		wreg, status,2, status,0, cstack
  9900 ;; Tracked objects:
  9901 ;;		On entry : 0/0
  9902 ;;		On exit  : 0/0
  9903 ;;		Unchanged: 0/0
  9904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9905 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9906 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9907 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9908 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9909 ;;Total ram usage:        1 bytes
  9910 ;; Hardware stack levels used: 1
  9911 ;; Hardware stack levels required when called: 3
  9912 ;; This function calls:
  9913 ;;		_I2C_2_Master_Idle
  9914 ;; This function is called by:
  9915 ;;		_color_writetoaddr
  9916 ;;		_color_read_Red
  9917 ;;		_color_read_Blue
  9918 ;;		_color_read_Green
  9919 ;;		_color_read_Clear
  9920 ;; This function uses a non-reentrant model
  9921 ;;
  9922                           
  9923                           	psect	text50
  9924  0057D6                     __ptext50:
  9925                           	callstack 0
  9926  0057D6                     _I2C_2_Master_Write:
  9927                           	callstack 23
  9928                           
  9929                           ;incstack = 0
  9930                           ;I2C_2_Master_Write@data_byte stored from wreg
  9931  0057D6  6E04               	movwf	I2C_2_Master_Write@data_byte^0,c
  9932  0057D8                     
  9933                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  9934  0057D8  EC1F  F02B         	call	_I2C_2_Master_Idle	;wreg free
  9935  0057DC                     
  9936                           ;i2c.c: 48:   SSP2BUF = data_byte;
  9937  0057DC  C004  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  9938  0057E0  0012               	return		;funcret
  9939  0057E2                     __end_of_I2C_2_Master_Write:
  9940                           	callstack 0
  9941                           
  9942 ;; *************** function _I2C_2_Master_Stop *****************
  9943 ;; Defined at:
  9944 ;;		line 39 in file "i2c.c"
  9945 ;; Parameters:    Size  Location     Type
  9946 ;;		None
  9947 ;; Auto vars:     Size  Location     Type
  9948 ;;		None
  9949 ;; Return value:  Size  Location     Type
  9950 ;;                  1    wreg      void 
  9951 ;; Registers used:
  9952 ;;		wreg, status,2, status,0, cstack
  9953 ;; Tracked objects:
  9954 ;;		On entry : 0/0
  9955 ;;		On exit  : 0/0
  9956 ;;		Unchanged: 0/0
  9957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9958 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9959 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9960 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9961 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9962 ;;Total ram usage:        0 bytes
  9963 ;; Hardware stack levels used: 1
  9964 ;; Hardware stack levels required when called: 3
  9965 ;; This function calls:
  9966 ;;		_I2C_2_Master_Idle
  9967 ;; This function is called by:
  9968 ;;		_color_writetoaddr
  9969 ;;		_color_read_Red
  9970 ;;		_color_read_Blue
  9971 ;;		_color_read_Green
  9972 ;;		_color_read_Clear
  9973 ;; This function uses a non-reentrant model
  9974 ;;
  9975                           
  9976                           	psect	text51
  9977  0057EE                     __ptext51:
  9978                           	callstack 0
  9979  0057EE                     _I2C_2_Master_Stop:
  9980                           	callstack 23
  9981  0057EE                     
  9982                           ;i2c.c: 41:   I2C_2_Master_Idle();
  9983  0057EE  EC1F  F02B         	call	_I2C_2_Master_Idle	;wreg free
  9984  0057F2                     
  9985                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  9986  0057F2  010E               	movlb	14	; () banked
  9987  0057F4  85DA               	bsf	218,2,b	;volatile
  9988  0057F6                     
  9989                           ; BSR set to: 14
  9990  0057F6  0012               	return		;funcret
  9991  0057F8                     __end_of_I2C_2_Master_Stop:
  9992                           	callstack 0
  9993                           
  9994 ;; *************** function _I2C_2_Master_Start *****************
  9995 ;; Defined at:
  9996 ;;		line 27 in file "i2c.c"
  9997 ;; Parameters:    Size  Location     Type
  9998 ;;		None
  9999 ;; Auto vars:     Size  Location     Type
 10000 ;;		None
 10001 ;; Return value:  Size  Location     Type
 10002 ;;                  1    wreg      void 
 10003 ;; Registers used:
 10004 ;;		wreg, status,2, status,0, cstack
 10005 ;; Tracked objects:
 10006 ;;		On entry : 0/0
 10007 ;;		On exit  : 0/0
 10008 ;;		Unchanged: 0/0
 10009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10010 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10011 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10012 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10013 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10014 ;;Total ram usage:        0 bytes
 10015 ;; Hardware stack levels used: 1
 10016 ;; Hardware stack levels required when called: 3
 10017 ;; This function calls:
 10018 ;;		_I2C_2_Master_Idle
 10019 ;; This function is called by:
 10020 ;;		_color_writetoaddr
 10021 ;;		_color_read_Red
 10022 ;;		_color_read_Blue
 10023 ;;		_color_read_Green
 10024 ;;		_color_read_Clear
 10025 ;; This function uses a non-reentrant model
 10026 ;;
 10027                           
 10028                           	psect	text52
 10029  0057F8                     __ptext52:
 10030                           	callstack 0
 10031  0057F8                     _I2C_2_Master_Start:
 10032                           	callstack 23
 10033  0057F8                     
 10034                           ;i2c.c: 29:   I2C_2_Master_Idle();
 10035  0057F8  EC1F  F02B         	call	_I2C_2_Master_Idle	;wreg free
 10036  0057FC                     
 10037                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
 10038  0057FC  010E               	movlb	14	; () banked
 10039  0057FE  81DA               	bsf	218,0,b	;volatile
 10040  005800                     
 10041                           ; BSR set to: 14
 10042  005800  0012               	return		;funcret
 10043  005802                     __end_of_I2C_2_Master_Start:
 10044                           	callstack 0
 10045                           
 10046 ;; *************** function _I2C_2_Master_RepStart *****************
 10047 ;; Defined at:
 10048 ;;		line 33 in file "i2c.c"
 10049 ;; Parameters:    Size  Location     Type
 10050 ;;		None
 10051 ;; Auto vars:     Size  Location     Type
 10052 ;;		None
 10053 ;; Return value:  Size  Location     Type
 10054 ;;                  1    wreg      void 
 10055 ;; Registers used:
 10056 ;;		wreg, status,2, status,0, cstack
 10057 ;; Tracked objects:
 10058 ;;		On entry : 0/0
 10059 ;;		On exit  : 0/0
 10060 ;;		Unchanged: 0/0
 10061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10062 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10063 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10064 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10065 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10066 ;;Total ram usage:        0 bytes
 10067 ;; Hardware stack levels used: 1
 10068 ;; Hardware stack levels required when called: 3
 10069 ;; This function calls:
 10070 ;;		_I2C_2_Master_Idle
 10071 ;; This function is called by:
 10072 ;;		_color_read_Red
 10073 ;;		_color_read_Blue
 10074 ;;		_color_read_Green
 10075 ;;		_color_read_Clear
 10076 ;; This function uses a non-reentrant model
 10077 ;;
 10078                           
 10079                           	psect	text53
 10080  005802                     __ptext53:
 10081                           	callstack 0
 10082  005802                     _I2C_2_Master_RepStart:
 10083                           	callstack 23
 10084  005802                     
 10085                           ;i2c.c: 35:   I2C_2_Master_Idle();
 10086  005802  EC1F  F02B         	call	_I2C_2_Master_Idle	;wreg free
 10087  005806                     
 10088                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
 10089  005806  010E               	movlb	14	; () banked
 10090  005808  83DA               	bsf	218,1,b	;volatile
 10091  00580A                     
 10092                           ; BSR set to: 14
 10093  00580A  0012               	return		;funcret
 10094  00580C                     __end_of_I2C_2_Master_RepStart:
 10095                           	callstack 0
 10096                           
 10097 ;; *************** function _I2C_2_Master_Read *****************
 10098 ;; Defined at:
 10099 ;;		line 51 in file "i2c.c"
 10100 ;; Parameters:    Size  Location     Type
 10101 ;;  ack             1    wreg     unsigned char 
 10102 ;; Auto vars:     Size  Location     Type
 10103 ;;  ack             1    4[COMRAM] unsigned char 
 10104 ;;  tmp             1    5[COMRAM] unsigned char 
 10105 ;; Return value:  Size  Location     Type
 10106 ;;                  1    wreg      unsigned char 
 10107 ;; Registers used:
 10108 ;;		wreg, status,2, status,0, cstack
 10109 ;; Tracked objects:
 10110 ;;		On entry : 0/0
 10111 ;;		On exit  : 0/0
 10112 ;;		Unchanged: 0/0
 10113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10114 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10115 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10116 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10117 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10118 ;;Total ram usage:        3 bytes
 10119 ;; Hardware stack levels used: 1
 10120 ;; Hardware stack levels required when called: 3
 10121 ;; This function calls:
 10122 ;;		_I2C_2_Master_Idle
 10123 ;; This function is called by:
 10124 ;;		_color_read_Red
 10125 ;;		_color_read_Blue
 10126 ;;		_color_read_Green
 10127 ;;		_color_read_Clear
 10128 ;; This function uses a non-reentrant model
 10129 ;;
 10130                           
 10131                           	psect	text54
 10132  00539A                     __ptext54:
 10133                           	callstack 0
 10134  00539A                     _I2C_2_Master_Read:
 10135                           	callstack 23
 10136                           
 10137                           ; BSR set to: 14
 10138                           ;incstack = 0
 10139                           ;I2C_2_Master_Read@ack stored from wreg
 10140  00539A  6E05               	movwf	I2C_2_Master_Read@ack^0,c
 10141  00539C                     
 10142                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
 10143  00539C  EC1F  F02B         	call	_I2C_2_Master_Idle	;wreg free
 10144  0053A0                     
 10145                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
 10146  0053A0  010E               	movlb	14	; () banked
 10147  0053A2  87DA               	bsf	218,3,b	;volatile
 10148                           
 10149                           ;i2c.c: 56:   I2C_2_Master_Idle();
 10150  0053A4  EC1F  F02B         	call	_I2C_2_Master_Idle	;wreg free
 10151  0053A8                     
 10152                           ;i2c.c: 57:   tmp = SSP2BUF;
 10153  0053A8  CED5 F006          	movff	3797,I2C_2_Master_Read@tmp	;volatile
 10154                           
 10155                           ;i2c.c: 58:   I2C_2_Master_Idle();
 10156  0053AC  EC1F  F02B         	call	_I2C_2_Master_Idle	;wreg free
 10157  0053B0                     
 10158                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
 10159  0053B0  5005               	movf	I2C_2_Master_Read@ack^0,w,c
 10160  0053B2  B4D8               	btfsc	status,2,c
 10161  0053B4  EFDE  F029         	goto	u3681
 10162  0053B8  EFE2  F029         	goto	u3680
 10163  0053BC                     u3681:
 10164  0053BC  6A04               	clrf	??_I2C_2_Master_Read^0,c
 10165  0053BE  2A04               	incf	??_I2C_2_Master_Read^0,f,c
 10166  0053C0  EFE3  F029         	goto	u3698
 10167  0053C4                     u3680:
 10168  0053C4  6A04               	clrf	??_I2C_2_Master_Read^0,c
 10169  0053C6                     u3698:
 10170  0053C6  3A04               	swapf	??_I2C_2_Master_Read^0,f,c
 10171  0053C8  4604               	rlncf	??_I2C_2_Master_Read^0,f,c
 10172  0053CA  010E               	movlb	14	; () banked
 10173  0053CC  51DA               	movf	218,w,b	;volatile
 10174  0053CE  1804               	xorwf	??_I2C_2_Master_Read^0,w,c
 10175  0053D0  0BDF               	andlw	-33
 10176  0053D2  1804               	xorwf	??_I2C_2_Master_Read^0,w,c
 10177  0053D4  6FDA               	movwf	218,b	;volatile
 10178  0053D6                     
 10179                           ; BSR set to: 14
 10180                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
 10181  0053D6  89DA               	bsf	218,4,b	;volatile
 10182  0053D8                     
 10183                           ; BSR set to: 14
 10184                           ;i2c.c: 61:   return tmp;
 10185  0053D8  5006               	movf	I2C_2_Master_Read@tmp^0,w,c
 10186  0053DA                     
 10187                           ; BSR set to: 14
 10188  0053DA  0012               	return		;funcret
 10189  0053DC                     __end_of_I2C_2_Master_Read:
 10190                           	callstack 0
 10191                           
 10192 ;; *************** function _I2C_2_Master_Idle *****************
 10193 ;; Defined at:
 10194 ;;		line 22 in file "i2c.c"
 10195 ;; Parameters:    Size  Location     Type
 10196 ;;		None
 10197 ;; Auto vars:     Size  Location     Type
 10198 ;;		None
 10199 ;; Return value:  Size  Location     Type
 10200 ;;                  1    wreg      void 
 10201 ;; Registers used:
 10202 ;;		wreg, status,2, status,0
 10203 ;; Tracked objects:
 10204 ;;		On entry : 0/0
 10205 ;;		On exit  : 0/0
 10206 ;;		Unchanged: 0/0
 10207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10208 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10209 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10210 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10211 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10212 ;;Total ram usage:        1 bytes
 10213 ;; Hardware stack levels used: 1
 10214 ;; Hardware stack levels required when called: 2
 10215 ;; This function calls:
 10216 ;;		Nothing
 10217 ;; This function is called by:
 10218 ;;		_I2C_2_Master_Start
 10219 ;;		_I2C_2_Master_RepStart
 10220 ;;		_I2C_2_Master_Stop
 10221 ;;		_I2C_2_Master_Write
 10222 ;;		_I2C_2_Master_Read
 10223 ;; This function uses a non-reentrant model
 10224 ;;
 10225                           
 10226                           	psect	text55
 10227  00563E                     __ptext55:
 10228                           	callstack 0
 10229  00563E                     _I2C_2_Master_Idle:
 10230                           	callstack 23
 10231  00563E                     l214:
 10232  00563E  010E               	movlb	14	; () banked
 10233  005640  B5D8               	btfsc	216,2,b	;volatile
 10234  005642  EF25  F02B         	goto	u3081
 10235  005646  EF27  F02B         	goto	u3080
 10236  00564A                     u3081:
 10237  00564A  EF1F  F02B         	goto	l214
 10238  00564E                     u3080:
 10239  00564E                     
 10240                           ; BSR set to: 14
 10241  00564E  CEDA F003          	movff	3802,??_I2C_2_Master_Idle	;volatile
 10242  005652  0E1F               	movlw	31
 10243  005654  1603               	andwf	??_I2C_2_Master_Idle^0,f,c
 10244  005656  A4D8               	btfss	status,2,c
 10245  005658  EF30  F02B         	goto	u3091
 10246  00565C  EF32  F02B         	goto	u3090
 10247  005660                     u3091:
 10248  005660  EF1F  F02B         	goto	l214
 10249  005664                     u3090:
 10250  005664                     
 10251                           ; BSR set to: 14
 10252  005664  0012               	return		;funcret
 10253  005666                     __end_of_I2C_2_Master_Idle:
 10254                           	callstack 0
 10255                           
 10256 ;; *************** function ___xxtofl *****************
 10257 ;; Defined at:
 10258 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\xxtofl.c"
 10259 ;; Parameters:    Size  Location     Type
 10260 ;;  sign            1    wreg     unsigned char 
 10261 ;;  val             4    2[COMRAM] long 
 10262 ;; Auto vars:     Size  Location     Type
 10263 ;;  sign            1   10[COMRAM] unsigned char 
 10264 ;;  arg             4   12[COMRAM] unsigned long 
 10265 ;;  exp             1   11[COMRAM] unsigned char 
 10266 ;; Return value:  Size  Location     Type
 10267 ;;                  4    2[COMRAM] unsigned char 
 10268 ;; Registers used:
 10269 ;;		wreg, status,2, status,0
 10270 ;; Tracked objects:
 10271 ;;		On entry : 0/0
 10272 ;;		On exit  : 0/0
 10273 ;;		Unchanged: 0/0
 10274 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10275 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10276 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10277 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10278 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10279 ;;Total ram usage:       14 bytes
 10280 ;; Hardware stack levels used: 1
 10281 ;; Hardware stack levels required when called: 2
 10282 ;; This function calls:
 10283 ;;		Nothing
 10284 ;; This function is called by:
 10285 ;;		_detect_color
 10286 ;;		_amb_light_measure
 10287 ;;		_distance_measure
 10288 ;;		_check_color_reading
 10289 ;; This function uses a non-reentrant model
 10290 ;;
 10291                           
 10292                           	psect	text56
 10293  003AB6                     __ptext56:
 10294                           	callstack 0
 10295  003AB6                     ___xxtofl:
 10296                           	callstack 26
 10297                           
 10298                           ; BSR set to: 14
 10299                           ;incstack = 0
 10300                           ;___xxtofl@sign stored from wreg
 10301  003AB6  6E0B               	movwf	___xxtofl@sign^0,c
 10302  003AB8  500B               	movf	___xxtofl@sign^0,w,c
 10303  003ABA  B4D8               	btfsc	status,2,c
 10304  003ABC  EF62  F01D         	goto	u4631
 10305  003AC0  EF64  F01D         	goto	u4630
 10306  003AC4                     u4631:
 10307  003AC4  EF86  F01D         	goto	l1397
 10308  003AC8                     u4630:
 10309  003AC8  BE06               	btfsc	(___xxtofl@val+3)^0,7,c
 10310  003ACA  EF6B  F01D         	goto	u4640
 10311  003ACE  EF69  F01D         	goto	u4641
 10312  003AD2                     u4641:
 10313  003AD2  EF86  F01D         	goto	l1397
 10314  003AD6                     u4640:
 10315  003AD6  C003  F007         	movff	___xxtofl@val,??___xxtofl
 10316  003ADA  C004  F008         	movff	___xxtofl@val+1,??___xxtofl+1
 10317  003ADE  C005  F009         	movff	___xxtofl@val+2,??___xxtofl+2
 10318  003AE2  C006  F00A         	movff	___xxtofl@val+3,??___xxtofl+3
 10319  003AE6  1E07               	comf	??___xxtofl^0,f,c
 10320  003AE8  1E08               	comf	(??___xxtofl+1)^0,f,c
 10321  003AEA  1E09               	comf	(??___xxtofl+2)^0,f,c
 10322  003AEC  1E0A               	comf	(??___xxtofl+3)^0,f,c
 10323  003AEE  2A07               	incf	??___xxtofl^0,f,c
 10324  003AF0  0E00               	movlw	0
 10325  003AF2  2208               	addwfc	(??___xxtofl+1)^0,f,c
 10326  003AF4  2209               	addwfc	(??___xxtofl+2)^0,f,c
 10327  003AF6  220A               	addwfc	(??___xxtofl+3)^0,f,c
 10328  003AF8  C007  F00D         	movff	??___xxtofl,___xxtofl@arg
 10329  003AFC  C008  F00E         	movff	??___xxtofl+1,___xxtofl@arg+1
 10330  003B00  C009  F00F         	movff	??___xxtofl+2,___xxtofl@arg+2
 10331  003B04  C00A  F010         	movff	??___xxtofl+3,___xxtofl@arg+3
 10332  003B08  EF8E  F01D         	goto	l4672
 10333  003B0C                     l1397:
 10334  003B0C  C003  F00D         	movff	___xxtofl@val,___xxtofl@arg
 10335  003B10  C004  F00E         	movff	___xxtofl@val+1,___xxtofl@arg+1
 10336  003B14  C005  F00F         	movff	___xxtofl@val+2,___xxtofl@arg+2
 10337  003B18  C006  F010         	movff	___xxtofl@val+3,___xxtofl@arg+3
 10338  003B1C                     l4672:
 10339  003B1C  5003               	movf	___xxtofl@val^0,w,c
 10340  003B1E  1004               	iorwf	(___xxtofl@val+1)^0,w,c
 10341  003B20  1005               	iorwf	(___xxtofl@val+2)^0,w,c
 10342  003B22  1006               	iorwf	(___xxtofl@val+3)^0,w,c
 10343  003B24  A4D8               	btfss	status,2,c
 10344  003B26  EF97  F01D         	goto	u4651
 10345  003B2A  EF99  F01D         	goto	u4650
 10346  003B2E                     u4651:
 10347  003B2E  EFA3  F01D         	goto	l4678
 10348  003B32                     u4650:
 10349  003B32  0E00               	movlw	0
 10350  003B34  6E03               	movwf	?___xxtofl^0,c
 10351  003B36  0E00               	movlw	0
 10352  003B38  6E04               	movwf	(?___xxtofl+1)^0,c
 10353  003B3A  0E00               	movlw	0
 10354  003B3C  6E05               	movwf	(?___xxtofl+2)^0,c
 10355  003B3E  0E00               	movlw	0
 10356  003B40  6E06               	movwf	(?___xxtofl+3)^0,c
 10357  003B42  EF34  F01E         	goto	l1400
 10358  003B46                     l4678:
 10359  003B46  0E96               	movlw	150
 10360  003B48  6E0C               	movwf	___xxtofl@exp^0,c
 10361  003B4A  EFAD  F01D         	goto	l4682
 10362  003B4E                     l4680:
 10363  003B4E  2A0C               	incf	___xxtofl@exp^0,f,c
 10364  003B50  90D8               	bcf	status,0,c
 10365  003B52  3210               	rrcf	(___xxtofl@arg+3)^0,f,c
 10366  003B54  320F               	rrcf	(___xxtofl@arg+2)^0,f,c
 10367  003B56  320E               	rrcf	(___xxtofl@arg+1)^0,f,c
 10368  003B58  320D               	rrcf	___xxtofl@arg^0,f,c
 10369  003B5A                     l4682:
 10370  003B5A  0E00               	movlw	0
 10371  003B5C  140D               	andwf	___xxtofl@arg^0,w,c
 10372  003B5E  6E07               	movwf	??___xxtofl^0,c
 10373  003B60  0E00               	movlw	0
 10374  003B62  140E               	andwf	(___xxtofl@arg+1)^0,w,c
 10375  003B64  6E08               	movwf	(??___xxtofl+1)^0,c
 10376  003B66  0E00               	movlw	0
 10377  003B68  140F               	andwf	(___xxtofl@arg+2)^0,w,c
 10378  003B6A  6E09               	movwf	(??___xxtofl+2)^0,c
 10379  003B6C  0EFE               	movlw	254
 10380  003B6E  1410               	andwf	(___xxtofl@arg+3)^0,w,c
 10381  003B70  6E0A               	movwf	(??___xxtofl+3)^0,c
 10382  003B72  5007               	movf	??___xxtofl^0,w,c
 10383  003B74  1008               	iorwf	(??___xxtofl+1)^0,w,c
 10384  003B76  1009               	iorwf	(??___xxtofl+2)^0,w,c
 10385  003B78  100A               	iorwf	(??___xxtofl+3)^0,w,c
 10386  003B7A  A4D8               	btfss	status,2,c
 10387  003B7C  EFC2  F01D         	goto	u4661
 10388  003B80  EFC4  F01D         	goto	u4660
 10389  003B84                     u4661:
 10390  003B84  EFA7  F01D         	goto	l4680
 10391  003B88                     u4660:
 10392  003B88  EFD2  F01D         	goto	l1404
 10393  003B8C                     l4684:
 10394  003B8C  2A0C               	incf	___xxtofl@exp^0,f,c
 10395  003B8E  0E01               	movlw	1
 10396  003B90  260D               	addwf	___xxtofl@arg^0,f,c
 10397  003B92  0E00               	movlw	0
 10398  003B94  220E               	addwfc	(___xxtofl@arg+1)^0,f,c
 10399  003B96  220F               	addwfc	(___xxtofl@arg+2)^0,f,c
 10400  003B98  2210               	addwfc	(___xxtofl@arg+3)^0,f,c
 10401  003B9A  90D8               	bcf	status,0,c
 10402  003B9C  3210               	rrcf	(___xxtofl@arg+3)^0,f,c
 10403  003B9E  320F               	rrcf	(___xxtofl@arg+2)^0,f,c
 10404  003BA0  320E               	rrcf	(___xxtofl@arg+1)^0,f,c
 10405  003BA2  320D               	rrcf	___xxtofl@arg^0,f,c
 10406  003BA4                     l1404:
 10407  003BA4  0E00               	movlw	0
 10408  003BA6  140D               	andwf	___xxtofl@arg^0,w,c
 10409  003BA8  6E07               	movwf	??___xxtofl^0,c
 10410  003BAA  0E00               	movlw	0
 10411  003BAC  140E               	andwf	(___xxtofl@arg+1)^0,w,c
 10412  003BAE  6E08               	movwf	(??___xxtofl+1)^0,c
 10413  003BB0  0E00               	movlw	0
 10414  003BB2  140F               	andwf	(___xxtofl@arg+2)^0,w,c
 10415  003BB4  6E09               	movwf	(??___xxtofl+2)^0,c
 10416  003BB6  0EFF               	movlw	255
 10417  003BB8  1410               	andwf	(___xxtofl@arg+3)^0,w,c
 10418  003BBA  6E0A               	movwf	(??___xxtofl+3)^0,c
 10419  003BBC  5007               	movf	??___xxtofl^0,w,c
 10420  003BBE  1008               	iorwf	(??___xxtofl+1)^0,w,c
 10421  003BC0  1009               	iorwf	(??___xxtofl+2)^0,w,c
 10422  003BC2  100A               	iorwf	(??___xxtofl+3)^0,w,c
 10423  003BC4  A4D8               	btfss	status,2,c
 10424  003BC6  EFE7  F01D         	goto	u4671
 10425  003BCA  EFE9  F01D         	goto	u4670
 10426  003BCE                     u4671:
 10427  003BCE  EFC6  F01D         	goto	l4684
 10428  003BD2                     u4670:
 10429  003BD2  EFF1  F01D         	goto	l4692
 10430  003BD6                     l4690:
 10431  003BD6  060C               	decf	___xxtofl@exp^0,f,c
 10432  003BD8  90D8               	bcf	status,0,c
 10433  003BDA  360D               	rlcf	___xxtofl@arg^0,f,c
 10434  003BDC  360E               	rlcf	(___xxtofl@arg+1)^0,f,c
 10435  003BDE  360F               	rlcf	(___xxtofl@arg+2)^0,f,c
 10436  003BE0  3610               	rlcf	(___xxtofl@arg+3)^0,f,c
 10437  003BE2                     l4692:
 10438  003BE2  BE0F               	btfsc	(___xxtofl@arg+2)^0,7,c
 10439  003BE4  EFF6  F01D         	goto	u4681
 10440  003BE8  EFF8  F01D         	goto	u4680
 10441  003BEC                     u4681:
 10442  003BEC  EF00  F01E         	goto	l1411
 10443  003BF0                     u4680:
 10444  003BF0  0E02               	movlw	2
 10445  003BF2  600C               	cpfslt	___xxtofl@exp^0,c
 10446  003BF4  EFFE  F01D         	goto	u4691
 10447  003BF8  EF00  F01E         	goto	u4690
 10448  003BFC                     u4691:
 10449  003BFC  EFEB  F01D         	goto	l4690
 10450  003C00                     u4690:
 10451  003C00                     l1411:
 10452  003C00  B00C               	btfsc	___xxtofl@exp^0,0,c
 10453  003C02  EF05  F01E         	goto	u4701
 10454  003C06  EF07  F01E         	goto	u4700
 10455  003C0A                     u4701:
 10456  003C0A  EF08  F01E         	goto	l4698
 10457  003C0E                     u4700:
 10458  003C0E  9E0F               	bcf	(___xxtofl@arg+2)^0,7,c
 10459  003C10                     l4698:
 10460  003C10  90D8               	bcf	status,0,c
 10461  003C12  320C               	rrcf	___xxtofl@exp^0,f,c
 10462  003C14  C00C  F007         	movff	___xxtofl@exp,??___xxtofl
 10463  003C18  6A08               	clrf	(??___xxtofl+1)^0,c
 10464  003C1A  6A09               	clrf	(??___xxtofl+2)^0,c
 10465  003C1C  6A0A               	clrf	(??___xxtofl+3)^0,c
 10466  003C1E  C007  F00A         	movff	??___xxtofl,??___xxtofl+3
 10467  003C22  6A09               	clrf	(??___xxtofl+2)^0,c
 10468  003C24  6A08               	clrf	(??___xxtofl+1)^0,c
 10469  003C26  6A07               	clrf	??___xxtofl^0,c
 10470  003C28  5007               	movf	??___xxtofl^0,w,c
 10471  003C2A  120D               	iorwf	___xxtofl@arg^0,f,c
 10472  003C2C  5008               	movf	(??___xxtofl+1)^0,w,c
 10473  003C2E  120E               	iorwf	(___xxtofl@arg+1)^0,f,c
 10474  003C30  5009               	movf	(??___xxtofl+2)^0,w,c
 10475  003C32  120F               	iorwf	(___xxtofl@arg+2)^0,f,c
 10476  003C34  500A               	movf	(??___xxtofl+3)^0,w,c
 10477  003C36  1210               	iorwf	(___xxtofl@arg+3)^0,f,c
 10478  003C38  500B               	movf	___xxtofl@sign^0,w,c
 10479  003C3A  B4D8               	btfsc	status,2,c
 10480  003C3C  EF22  F01E         	goto	u4711
 10481  003C40  EF24  F01E         	goto	u4710
 10482  003C44                     u4711:
 10483  003C44  EF2C  F01E         	goto	l4708
 10484  003C48                     u4710:
 10485  003C48  BE06               	btfsc	(___xxtofl@val+3)^0,7,c
 10486  003C4A  EF2B  F01E         	goto	u4720
 10487  003C4E  EF29  F01E         	goto	u4721
 10488  003C52                     u4721:
 10489  003C52  EF2C  F01E         	goto	l4708
 10490  003C56                     u4720:
 10491  003C56  8E10               	bsf	(___xxtofl@arg+3)^0,7,c
 10492  003C58                     l4708:
 10493  003C58  C00D  F003         	movff	___xxtofl@arg,?___xxtofl
 10494  003C5C  C00E  F004         	movff	___xxtofl@arg+1,?___xxtofl+1
 10495  003C60  C00F  F005         	movff	___xxtofl@arg+2,?___xxtofl+2
 10496  003C64  C010  F006         	movff	___xxtofl@arg+3,?___xxtofl+3
 10497  003C68                     l1400:
 10498  003C68  0012               	return		;funcret
 10499  003C6A                     __end_of___xxtofl:
 10500                           	callstack 0
 10501                           
 10502 ;; *************** function ___fldiv *****************
 10503 ;; Defined at:
 10504 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\sprcdiv.c"
 10505 ;; Parameters:    Size  Location     Type
 10506 ;;  b               4   16[COMRAM] unsigned char 
 10507 ;;  a               4   20[COMRAM] unsigned char 
 10508 ;; Auto vars:     Size  Location     Type
 10509 ;;  grs             4   35[COMRAM] unsigned long 
 10510 ;;  rem             4   28[COMRAM] unsigned long 
 10511 ;;  new_exp         2   33[COMRAM] short 
 10512 ;;  aexp            1   40[COMRAM] unsigned char 
 10513 ;;  bexp            1   39[COMRAM] unsigned char 
 10514 ;;  sign            1   32[COMRAM] unsigned char 
 10515 ;; Return value:  Size  Location     Type
 10516 ;;                  4   16[COMRAM] unsigned char 
 10517 ;; Registers used:
 10518 ;;		wreg, status,2, status,0
 10519 ;; Tracked objects:
 10520 ;;		On entry : 0/0
 10521 ;;		On exit  : 0/0
 10522 ;;		Unchanged: 0/0
 10523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10524 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10525 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10526 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10527 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10528 ;;Total ram usage:       25 bytes
 10529 ;; Hardware stack levels used: 1
 10530 ;; Hardware stack levels required when called: 2
 10531 ;; This function calls:
 10532 ;;		Nothing
 10533 ;; This function is called by:
 10534 ;;		_detect_color
 10535 ;;		_amb_light_measure
 10536 ;;		_check_color_reading
 10537 ;; This function uses a non-reentrant model
 10538 ;;
 10539                           
 10540                           	psect	text57
 10541  0026B0                     __ptext57:
 10542                           	callstack 0
 10543  0026B0                     ___fldiv:
 10544                           	callstack 26
 10545  0026B0  5014               	movf	(___fldiv@b+3)^0,w,c
 10546  0026B2  0B80               	andlw	128
 10547  0026B4  6E21               	movwf	___fldiv@sign^0,c
 10548  0026B6  5014               	movf	(___fldiv@b+3)^0,w,c
 10549  0026B8  2414               	addwf	(___fldiv@b+3)^0,w,c
 10550  0026BA  6E28               	movwf	___fldiv@bexp^0,c
 10551  0026BC  AE13               	btfss	(___fldiv@b+2)^0,7,c
 10552  0026BE  EF63  F013         	goto	u4401
 10553  0026C2  EF65  F013         	goto	u4400
 10554  0026C6                     u4401:
 10555  0026C6  EF66  F013         	goto	l4534
 10556  0026CA                     u4400:
 10557  0026CA  8028               	bsf	___fldiv@bexp^0,0,c
 10558  0026CC                     l4534:
 10559  0026CC  5028               	movf	___fldiv@bexp^0,w,c
 10560  0026CE  B4D8               	btfsc	status,2,c
 10561  0026D0  EF6C  F013         	goto	u4411
 10562  0026D4  EF6E  F013         	goto	u4410
 10563  0026D8                     u4411:
 10564  0026D8  EF83  F013         	goto	l4544
 10565  0026DC                     u4410:
 10566  0026DC  2828               	incf	___fldiv@bexp^0,w,c
 10567  0026DE  A4D8               	btfss	status,2,c
 10568  0026E0  EF74  F013         	goto	u4421
 10569  0026E4  EF76  F013         	goto	u4420
 10570  0026E8                     u4421:
 10571  0026E8  EF7E  F013         	goto	l4540
 10572  0026EC                     u4420:
 10573  0026EC  0E00               	movlw	0
 10574  0026EE  6E11               	movwf	___fldiv@b^0,c
 10575  0026F0  0E00               	movlw	0
 10576  0026F2  6E12               	movwf	(___fldiv@b+1)^0,c
 10577  0026F4  0E00               	movlw	0
 10578  0026F6  6E13               	movwf	(___fldiv@b+2)^0,c
 10579  0026F8  0E00               	movlw	0
 10580  0026FA  6E14               	movwf	(___fldiv@b+3)^0,c
 10581  0026FC                     l4540:
 10582  0026FC  8E13               	bsf	(___fldiv@b+2)^0,7,c
 10583  0026FE  0E00               	movlw	0
 10584  002700  6E14               	movwf	(___fldiv@b+3)^0,c
 10585  002702  EF8B  F013         	goto	l4546
 10586  002706                     l4544:
 10587  002706  0E00               	movlw	0
 10588  002708  6E11               	movwf	___fldiv@b^0,c
 10589  00270A  0E00               	movlw	0
 10590  00270C  6E12               	movwf	(___fldiv@b+1)^0,c
 10591  00270E  0E00               	movlw	0
 10592  002710  6E13               	movwf	(___fldiv@b+2)^0,c
 10593  002712  0E00               	movlw	0
 10594  002714  6E14               	movwf	(___fldiv@b+3)^0,c
 10595  002716                     l4546:
 10596  002716  5018               	movf	(___fldiv@a+3)^0,w,c
 10597  002718  0B80               	andlw	128
 10598  00271A  1A21               	xorwf	___fldiv@sign^0,f,c
 10599  00271C  5018               	movf	(___fldiv@a+3)^0,w,c
 10600  00271E  2418               	addwf	(___fldiv@a+3)^0,w,c
 10601  002720  6E29               	movwf	___fldiv@aexp^0,c
 10602  002722  AE17               	btfss	(___fldiv@a+2)^0,7,c
 10603  002724  EF96  F013         	goto	u4431
 10604  002728  EF98  F013         	goto	u4430
 10605  00272C                     u4431:
 10606  00272C  EF99  F013         	goto	l4554
 10607  002730                     u4430:
 10608  002730  8029               	bsf	___fldiv@aexp^0,0,c
 10609  002732                     l4554:
 10610  002732  5029               	movf	___fldiv@aexp^0,w,c
 10611  002734  B4D8               	btfsc	status,2,c
 10612  002736  EF9F  F013         	goto	u4441
 10613  00273A  EFA1  F013         	goto	u4440
 10614  00273E                     u4441:
 10615  00273E  EFB6  F013         	goto	l4564
 10616  002742                     u4440:
 10617  002742  2829               	incf	___fldiv@aexp^0,w,c
 10618  002744  A4D8               	btfss	status,2,c
 10619  002746  EFA7  F013         	goto	u4451
 10620  00274A  EFA9  F013         	goto	u4450
 10621  00274E                     u4451:
 10622  00274E  EFB1  F013         	goto	l4560
 10623  002752                     u4450:
 10624  002752  0E00               	movlw	0
 10625  002754  6E15               	movwf	___fldiv@a^0,c
 10626  002756  0E00               	movlw	0
 10627  002758  6E16               	movwf	(___fldiv@a+1)^0,c
 10628  00275A  0E00               	movlw	0
 10629  00275C  6E17               	movwf	(___fldiv@a+2)^0,c
 10630  00275E  0E00               	movlw	0
 10631  002760  6E18               	movwf	(___fldiv@a+3)^0,c
 10632  002762                     l4560:
 10633  002762  8E17               	bsf	(___fldiv@a+2)^0,7,c
 10634  002764  0E00               	movlw	0
 10635  002766  6E18               	movwf	(___fldiv@a+3)^0,c
 10636  002768  EFBE  F013         	goto	l4566
 10637  00276C                     l4564:
 10638  00276C  0E00               	movlw	0
 10639  00276E  6E15               	movwf	___fldiv@a^0,c
 10640  002770  0E00               	movlw	0
 10641  002772  6E16               	movwf	(___fldiv@a+1)^0,c
 10642  002774  0E00               	movlw	0
 10643  002776  6E17               	movwf	(___fldiv@a+2)^0,c
 10644  002778  0E00               	movlw	0
 10645  00277A  6E18               	movwf	(___fldiv@a+3)^0,c
 10646  00277C                     l4566:
 10647  00277C  5015               	movf	___fldiv@a^0,w,c
 10648  00277E  1016               	iorwf	(___fldiv@a+1)^0,w,c
 10649  002780  1017               	iorwf	(___fldiv@a+2)^0,w,c
 10650  002782  1018               	iorwf	(___fldiv@a+3)^0,w,c
 10651  002784  A4D8               	btfss	status,2,c
 10652  002786  EFC7  F013         	goto	u4461
 10653  00278A  EFC9  F013         	goto	u4460
 10654  00278E                     u4461:
 10655  00278E  EFE1  F013         	goto	l4578
 10656  002792                     u4460:
 10657  002792  0E00               	movlw	0
 10658  002794  6E11               	movwf	___fldiv@b^0,c
 10659  002796  0E00               	movlw	0
 10660  002798  6E12               	movwf	(___fldiv@b+1)^0,c
 10661  00279A  0E00               	movlw	0
 10662  00279C  6E13               	movwf	(___fldiv@b+2)^0,c
 10663  00279E  0E00               	movlw	0
 10664  0027A0  6E14               	movwf	(___fldiv@b+3)^0,c
 10665  0027A2  0E80               	movlw	128
 10666  0027A4  1213               	iorwf	(___fldiv@b+2)^0,f,c
 10667  0027A6  0E7F               	movlw	127
 10668  0027A8  1214               	iorwf	(___fldiv@b+3)^0,f,c
 10669  0027AA                     l4572:
 10670  0027AA  5021               	movf	___fldiv@sign^0,w,c
 10671  0027AC  1214               	iorwf	(___fldiv@b+3)^0,f,c
 10672  0027AE  C011  F011         	movff	___fldiv@b,?___fldiv
 10673  0027B2  C012  F012         	movff	___fldiv@b+1,?___fldiv+1
 10674  0027B6  C013  F013         	movff	___fldiv@b+2,?___fldiv+2
 10675  0027BA  C014  F014         	movff	___fldiv@b+3,?___fldiv+3
 10676  0027BE  EF24  F015         	goto	l1324
 10677  0027C2                     l4578:
 10678  0027C2  5028               	movf	___fldiv@bexp^0,w,c
 10679  0027C4  A4D8               	btfss	status,2,c
 10680  0027C6  EFE7  F013         	goto	u4471
 10681  0027CA  EFE9  F013         	goto	u4470
 10682  0027CE                     u4471:
 10683  0027CE  EFF3  F013         	goto	l4586
 10684  0027D2                     u4470:
 10685  0027D2  0E00               	movlw	0
 10686  0027D4  6E11               	movwf	?___fldiv^0,c
 10687  0027D6  0E00               	movlw	0
 10688  0027D8  6E12               	movwf	(?___fldiv+1)^0,c
 10689  0027DA  0E00               	movlw	0
 10690  0027DC  6E13               	movwf	(?___fldiv+2)^0,c
 10691  0027DE  0E00               	movlw	0
 10692  0027E0  6E14               	movwf	(?___fldiv+3)^0,c
 10693  0027E2  EF24  F015         	goto	l1324
 10694  0027E6                     l4586:
 10695  0027E6  5029               	movf	___fldiv@aexp^0,w,c
 10696  0027E8  C028  F019         	movff	___fldiv@bexp,??___fldiv
 10697  0027EC  6A1A               	clrf	(??___fldiv+1)^0,c
 10698  0027EE  5E19               	subwf	??___fldiv^0,f,c
 10699  0027F0  0E00               	movlw	0
 10700  0027F2  5A1A               	subwfb	(??___fldiv+1)^0,f,c
 10701  0027F4  0E7F               	movlw	127
 10702  0027F6  2419               	addwf	??___fldiv^0,w,c
 10703  0027F8  6E22               	movwf	___fldiv@new_exp^0,c
 10704  0027FA  0E00               	movlw	0
 10705  0027FC  201A               	addwfc	(??___fldiv+1)^0,w,c
 10706  0027FE  6E23               	movwf	(___fldiv@new_exp+1)^0,c
 10707  002800  C011  F01D         	movff	___fldiv@b,___fldiv@rem
 10708  002804  C012  F01E         	movff	___fldiv@b+1,___fldiv@rem+1
 10709  002808  C013  F01F         	movff	___fldiv@b+2,___fldiv@rem+2
 10710  00280C  C014  F020         	movff	___fldiv@b+3,___fldiv@rem+3
 10711  002810  0E00               	movlw	0
 10712  002812  6E11               	movwf	___fldiv@b^0,c
 10713  002814  0E00               	movlw	0
 10714  002816  6E12               	movwf	(___fldiv@b+1)^0,c
 10715  002818  0E00               	movlw	0
 10716  00281A  6E13               	movwf	(___fldiv@b+2)^0,c
 10717  00281C  0E00               	movlw	0
 10718  00281E  6E14               	movwf	(___fldiv@b+3)^0,c
 10719  002820  0E00               	movlw	0
 10720  002822  6E24               	movwf	___fldiv@grs^0,c
 10721  002824  0E00               	movlw	0
 10722  002826  6E25               	movwf	(___fldiv@grs+1)^0,c
 10723  002828  0E00               	movlw	0
 10724  00282A  6E26               	movwf	(___fldiv@grs+2)^0,c
 10725  00282C  0E00               	movlw	0
 10726  00282E  6E27               	movwf	(___fldiv@grs+3)^0,c
 10727  002830  0E00               	movlw	0
 10728  002832  6E29               	movwf	___fldiv@aexp^0,c
 10729  002834  EF54  F014         	goto	l1326
 10730  002838                     l4596:
 10731  002838  5029               	movf	___fldiv@aexp^0,w,c
 10732  00283A  B4D8               	btfsc	status,2,c
 10733  00283C  EF22  F014         	goto	u4481
 10734  002840  EF24  F014         	goto	u4480
 10735  002844                     u4481:
 10736  002844  EF3B  F014         	goto	l4604
 10737  002848                     u4480:
 10738  002848  90D8               	bcf	status,0,c
 10739  00284A  361D               	rlcf	___fldiv@rem^0,f,c
 10740  00284C  361E               	rlcf	(___fldiv@rem+1)^0,f,c
 10741  00284E  361F               	rlcf	(___fldiv@rem+2)^0,f,c
 10742  002850  3620               	rlcf	(___fldiv@rem+3)^0,f,c
 10743  002852  90D8               	bcf	status,0,c
 10744  002854  3611               	rlcf	___fldiv@b^0,f,c
 10745  002856  3612               	rlcf	(___fldiv@b+1)^0,f,c
 10746  002858  3613               	rlcf	(___fldiv@b+2)^0,f,c
 10747  00285A  3614               	rlcf	(___fldiv@b+3)^0,f,c
 10748  00285C  AE27               	btfss	(___fldiv@grs+3)^0,7,c
 10749  00285E  EF33  F014         	goto	u4491
 10750  002862  EF35  F014         	goto	u4490
 10751  002866                     u4491:
 10752  002866  EF36  F014         	goto	l1329
 10753  00286A                     u4490:
 10754  00286A  8011               	bsf	___fldiv@b^0,0,c
 10755  00286C                     l1329:
 10756  00286C  90D8               	bcf	status,0,c
 10757  00286E  3624               	rlcf	___fldiv@grs^0,f,c
 10758  002870  3625               	rlcf	(___fldiv@grs+1)^0,f,c
 10759  002872  3626               	rlcf	(___fldiv@grs+2)^0,f,c
 10760  002874  3627               	rlcf	(___fldiv@grs+3)^0,f,c
 10761  002876                     l4604:
 10762  002876  5015               	movf	___fldiv@a^0,w,c
 10763  002878  5C1D               	subwf	___fldiv@rem^0,w,c
 10764  00287A  5016               	movf	(___fldiv@a+1)^0,w,c
 10765  00287C  581E               	subwfb	(___fldiv@rem+1)^0,w,c
 10766  00287E  5017               	movf	(___fldiv@a+2)^0,w,c
 10767  002880  581F               	subwfb	(___fldiv@rem+2)^0,w,c
 10768  002882  5018               	movf	(___fldiv@a+3)^0,w,c
 10769  002884  5820               	subwfb	(___fldiv@rem+3)^0,w,c
 10770  002886  A0D8               	btfss	status,0,c
 10771  002888  EF48  F014         	goto	u4501
 10772  00288C  EF4A  F014         	goto	u4500
 10773  002890                     u4501:
 10774  002890  EF53  F014         	goto	l4610
 10775  002894                     u4500:
 10776  002894  8C27               	bsf	(___fldiv@grs+3)^0,6,c
 10777  002896  5015               	movf	___fldiv@a^0,w,c
 10778  002898  5E1D               	subwf	___fldiv@rem^0,f,c
 10779  00289A  5016               	movf	(___fldiv@a+1)^0,w,c
 10780  00289C  5A1E               	subwfb	(___fldiv@rem+1)^0,f,c
 10781  00289E  5017               	movf	(___fldiv@a+2)^0,w,c
 10782  0028A0  5A1F               	subwfb	(___fldiv@rem+2)^0,f,c
 10783  0028A2  5018               	movf	(___fldiv@a+3)^0,w,c
 10784  0028A4  5A20               	subwfb	(___fldiv@rem+3)^0,f,c
 10785  0028A6                     l4610:
 10786  0028A6  2A29               	incf	___fldiv@aexp^0,f,c
 10787  0028A8                     l1326:
 10788  0028A8  0E19               	movlw	25
 10789  0028AA  6429               	cpfsgt	___fldiv@aexp^0,c
 10790  0028AC  EF5A  F014         	goto	u4511
 10791  0028B0  EF5C  F014         	goto	u4510
 10792  0028B4                     u4511:
 10793  0028B4  EF1C  F014         	goto	l4596
 10794  0028B8                     u4510:
 10795  0028B8  501D               	movf	___fldiv@rem^0,w,c
 10796  0028BA  101E               	iorwf	(___fldiv@rem+1)^0,w,c
 10797  0028BC  101F               	iorwf	(___fldiv@rem+2)^0,w,c
 10798  0028BE  1020               	iorwf	(___fldiv@rem+3)^0,w,c
 10799  0028C0  B4D8               	btfsc	status,2,c
 10800  0028C2  EF65  F014         	goto	u4521
 10801  0028C6  EF67  F014         	goto	u4520
 10802  0028CA                     u4521:
 10803  0028CA  EF7F  F014         	goto	l4622
 10804  0028CE                     u4520:
 10805  0028CE  8024               	bsf	___fldiv@grs^0,0,c
 10806  0028D0  EF7F  F014         	goto	l4622
 10807  0028D4                     l4616:
 10808  0028D4  90D8               	bcf	status,0,c
 10809  0028D6  3611               	rlcf	___fldiv@b^0,f,c
 10810  0028D8  3612               	rlcf	(___fldiv@b+1)^0,f,c
 10811  0028DA  3613               	rlcf	(___fldiv@b+2)^0,f,c
 10812  0028DC  3614               	rlcf	(___fldiv@b+3)^0,f,c
 10813  0028DE  AE27               	btfss	(___fldiv@grs+3)^0,7,c
 10814  0028E0  EF74  F014         	goto	u4531
 10815  0028E4  EF76  F014         	goto	u4530
 10816  0028E8                     u4531:
 10817  0028E8  EF77  F014         	goto	l1335
 10818  0028EC                     u4530:
 10819  0028EC  8011               	bsf	___fldiv@b^0,0,c
 10820  0028EE                     l1335:
 10821  0028EE  90D8               	bcf	status,0,c
 10822  0028F0  3624               	rlcf	___fldiv@grs^0,f,c
 10823  0028F2  3625               	rlcf	(___fldiv@grs+1)^0,f,c
 10824  0028F4  3626               	rlcf	(___fldiv@grs+2)^0,f,c
 10825  0028F6  3627               	rlcf	(___fldiv@grs+3)^0,f,c
 10826  0028F8  0622               	decf	___fldiv@new_exp^0,f,c
 10827  0028FA  A0D8               	btfss	status,0,c
 10828  0028FC  0623               	decf	(___fldiv@new_exp+1)^0,f,c
 10829  0028FE                     l4622:
 10830  0028FE  AE13               	btfss	(___fldiv@b+2)^0,7,c
 10831  002900  EF84  F014         	goto	u4541
 10832  002904  EF86  F014         	goto	u4540
 10833  002908                     u4541:
 10834  002908  EF6A  F014         	goto	l4616
 10835  00290C                     u4540:
 10836  00290C  0E00               	movlw	0
 10837  00290E  6E29               	movwf	___fldiv@aexp^0,c
 10838  002910  AE27               	btfss	(___fldiv@grs+3)^0,7,c
 10839  002912  EF8D  F014         	goto	u4551
 10840  002916  EF8F  F014         	goto	u4550
 10841  00291A                     u4551:
 10842  00291A  EFB3  F014         	goto	l1337
 10843  00291E                     u4550:
 10844  00291E  0EFF               	movlw	255
 10845  002920  1424               	andwf	___fldiv@grs^0,w,c
 10846  002922  6E19               	movwf	??___fldiv^0,c
 10847  002924  0EFF               	movlw	255
 10848  002926  1425               	andwf	(___fldiv@grs+1)^0,w,c
 10849  002928  6E1A               	movwf	(??___fldiv+1)^0,c
 10850  00292A  0EFF               	movlw	255
 10851  00292C  1426               	andwf	(___fldiv@grs+2)^0,w,c
 10852  00292E  6E1B               	movwf	(??___fldiv+2)^0,c
 10853  002930  0E7F               	movlw	127
 10854  002932  1427               	andwf	(___fldiv@grs+3)^0,w,c
 10855  002934  6E1C               	movwf	(??___fldiv+3)^0,c
 10856  002936  5019               	movf	??___fldiv^0,w,c
 10857  002938  101A               	iorwf	(??___fldiv+1)^0,w,c
 10858  00293A  101B               	iorwf	(??___fldiv+2)^0,w,c
 10859  00293C  101C               	iorwf	(??___fldiv+3)^0,w,c
 10860  00293E  B4D8               	btfsc	status,2,c
 10861  002940  EFA4  F014         	goto	u4561
 10862  002944  EFA6  F014         	goto	u4560
 10863  002948                     u4561:
 10864  002948  EFAA  F014         	goto	l1338
 10865  00294C                     u4560:
 10866  00294C                     l4630:
 10867  00294C  0E01               	movlw	1
 10868  00294E  6E29               	movwf	___fldiv@aexp^0,c
 10869  002950  EFB3  F014         	goto	l1337
 10870  002954                     l1338:
 10871  002954  A011               	btfss	___fldiv@b^0,0,c
 10872  002956  EFAF  F014         	goto	u4571
 10873  00295A  EFB1  F014         	goto	u4570
 10874  00295E                     u4571:
 10875  00295E  EFB3  F014         	goto	l1337
 10876  002962                     u4570:
 10877  002962  EFA6  F014         	goto	l4630
 10878  002966                     l1337:
 10879  002966  5029               	movf	___fldiv@aexp^0,w,c
 10880  002968  B4D8               	btfsc	status,2,c
 10881  00296A  EFB9  F014         	goto	u4581
 10882  00296E  EFBB  F014         	goto	u4580
 10883  002972                     u4581:
 10884  002972  EFDF  F014         	goto	l4642
 10885  002976                     u4580:
 10886  002976  0E01               	movlw	1
 10887  002978  2611               	addwf	___fldiv@b^0,f,c
 10888  00297A  0E00               	movlw	0
 10889  00297C  2212               	addwfc	(___fldiv@b+1)^0,f,c
 10890  00297E  2213               	addwfc	(___fldiv@b+2)^0,f,c
 10891  002980  2214               	addwfc	(___fldiv@b+3)^0,f,c
 10892  002982  A014               	btfss	(___fldiv@b+3)^0,0,c
 10893  002984  EFC6  F014         	goto	u4591
 10894  002988  EFC8  F014         	goto	u4590
 10895  00298C                     u4591:
 10896  00298C  EFDF  F014         	goto	l4642
 10897  002990                     u4590:
 10898  002990  C011  F019         	movff	___fldiv@b,??___fldiv
 10899  002994  C012  F01A         	movff	___fldiv@b+1,??___fldiv+1
 10900  002998  C013  F01B         	movff	___fldiv@b+2,??___fldiv+2
 10901  00299C  C014  F01C         	movff	___fldiv@b+3,??___fldiv+3
 10902  0029A0  341C               	rlcf	(??___fldiv+3)^0,w,c
 10903  0029A2  321C               	rrcf	(??___fldiv+3)^0,f,c
 10904  0029A4  321B               	rrcf	(??___fldiv+2)^0,f,c
 10905  0029A6  321A               	rrcf	(??___fldiv+1)^0,f,c
 10906  0029A8  3219               	rrcf	??___fldiv^0,f,c
 10907  0029AA  C019  F011         	movff	??___fldiv,___fldiv@b
 10908  0029AE  C01A  F012         	movff	??___fldiv+1,___fldiv@b+1
 10909  0029B2  C01B  F013         	movff	??___fldiv+2,___fldiv@b+2
 10910  0029B6  C01C  F014         	movff	??___fldiv+3,___fldiv@b+3
 10911  0029BA  4A22               	infsnz	___fldiv@new_exp^0,f,c
 10912  0029BC  2A23               	incf	(___fldiv@new_exp+1)^0,f,c
 10913  0029BE                     l4642:
 10914  0029BE  BE23               	btfsc	(___fldiv@new_exp+1)^0,7,c
 10915  0029C0  EFEA  F014         	goto	u4601
 10916  0029C4  5023               	movf	(___fldiv@new_exp+1)^0,w,c
 10917  0029C6  E108               	bnz	u4600
 10918  0029C8  2822               	incf	___fldiv@new_exp^0,w,c
 10919  0029CA  A0D8               	btfss	status,0,c
 10920  0029CC  EFEA  F014         	goto	u4601
 10921  0029D0  EFEC  F014         	goto	u4600
 10922  0029D4                     u4601:
 10923  0029D4  EFF7  F014         	goto	l4646
 10924  0029D8                     u4600:
 10925  0029D8  0E00               	movlw	0
 10926  0029DA  6E23               	movwf	(___fldiv@new_exp+1)^0,c
 10927  0029DC  6822               	setf	___fldiv@new_exp^0,c
 10928  0029DE  0E00               	movlw	0
 10929  0029E0  6E11               	movwf	___fldiv@b^0,c
 10930  0029E2  0E00               	movlw	0
 10931  0029E4  6E12               	movwf	(___fldiv@b+1)^0,c
 10932  0029E6  0E00               	movlw	0
 10933  0029E8  6E13               	movwf	(___fldiv@b+2)^0,c
 10934  0029EA  0E00               	movlw	0
 10935  0029EC  6E14               	movwf	(___fldiv@b+3)^0,c
 10936  0029EE                     l4646:
 10937  0029EE  BE23               	btfsc	(___fldiv@new_exp+1)^0,7,c
 10938  0029F0  EF04  F015         	goto	u4610
 10939  0029F4  5023               	movf	(___fldiv@new_exp+1)^0,w,c
 10940  0029F6  E106               	bnz	u4611
 10941  0029F8  0422               	decf	___fldiv@new_exp^0,w,c
 10942  0029FA  B0D8               	btfsc	status,0,c
 10943  0029FC  EF02  F015         	goto	u4611
 10944  002A00  EF04  F015         	goto	u4610
 10945  002A04                     u4611:
 10946  002A04  EF12  F015         	goto	l4650
 10947  002A08                     u4610:
 10948  002A08  0E00               	movlw	0
 10949  002A0A  6E23               	movwf	(___fldiv@new_exp+1)^0,c
 10950  002A0C  0E00               	movlw	0
 10951  002A0E  6E22               	movwf	___fldiv@new_exp^0,c
 10952  002A10  0E00               	movlw	0
 10953  002A12  6E11               	movwf	___fldiv@b^0,c
 10954  002A14  0E00               	movlw	0
 10955  002A16  6E12               	movwf	(___fldiv@b+1)^0,c
 10956  002A18  0E00               	movlw	0
 10957  002A1A  6E13               	movwf	(___fldiv@b+2)^0,c
 10958  002A1C  0E00               	movlw	0
 10959  002A1E  6E14               	movwf	(___fldiv@b+3)^0,c
 10960  002A20  0E00               	movlw	0
 10961  002A22  6E21               	movwf	___fldiv@sign^0,c
 10962  002A24                     l4650:
 10963  002A24  C022  F028         	movff	___fldiv@new_exp,___fldiv@bexp
 10964  002A28  A028               	btfss	___fldiv@bexp^0,0,c
 10965  002A2A  EF19  F015         	goto	u4621
 10966  002A2E  EF1B  F015         	goto	u4620
 10967  002A32                     u4621:
 10968  002A32  EF1E  F015         	goto	l4656
 10969  002A36                     u4620:
 10970  002A36  8E13               	bsf	(___fldiv@b+2)^0,7,c
 10971  002A38  EF1F  F015         	goto	l4658
 10972  002A3C                     l4656:
 10973  002A3C  9E13               	bcf	(___fldiv@b+2)^0,7,c
 10974  002A3E                     l4658:
 10975  002A3E  90D8               	bcf	status,0,c
 10976  002A40  3028               	rrcf	___fldiv@bexp^0,w,c
 10977  002A42  6E14               	movwf	(___fldiv@b+3)^0,c
 10978  002A44  EFD5  F013         	goto	l4572
 10979  002A48                     l1324:
 10980  002A48  0012               	return		;funcret
 10981  002A4A                     __end_of___fldiv:
 10982                           	callstack 0
 10983                           
 10984 ;; *************** function _LED_C *****************
 10985 ;; Defined at:
 10986 ;;		line 171 in file "color.c"
 10987 ;; Parameters:    Size  Location     Type
 10988 ;;		None
 10989 ;; Auto vars:     Size  Location     Type
 10990 ;;		None
 10991 ;; Return value:  Size  Location     Type
 10992 ;;                  1    wreg      void 
 10993 ;; Registers used:
 10994 ;;		wreg
 10995 ;; Tracked objects:
 10996 ;;		On entry : 0/0
 10997 ;;		On exit  : 0/0
 10998 ;;		Unchanged: 0/0
 10999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11000 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11001 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11002 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11003 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11004 ;;Total ram usage:        2 bytes
 11005 ;; Hardware stack levels used: 1
 11006 ;; Hardware stack levels required when called: 2
 11007 ;; This function calls:
 11008 ;;		Nothing
 11009 ;; This function is called by:
 11010 ;;		_color_data_collection
 11011 ;;		_calibrate_white
 11012 ;;		_amb_light_measure
 11013 ;;		_distance_measure
 11014 ;;		_main
 11015 ;; This function uses a non-reentrant model
 11016 ;;
 11017                           
 11018                           	psect	text58
 11019  00572C                     __ptext58:
 11020                           	callstack 0
 11021  00572C                     _LED_C:
 11022                           	callstack 27
 11023  00572C                     
 11024                           ;color.c: 173:     LATGbits.LATG1 = 1;
 11025  00572C  827F               	bsf	127,1,c	;volatile
 11026                           
 11027                           ;color.c: 174:     LATFbits.LATF7 = 1;
 11028  00572E  8E7E               	bsf	126,7,c	;volatile
 11029                           
 11030                           ;color.c: 175:     LATAbits.LATA4 = 1;
 11031  005730  8879               	bsf	121,4,c	;volatile
 11032  005732                     
 11033                           ;color.c: 176:     _delay((unsigned long)((50)*(64000000/4000.0)));
 11034  005732  0E05               	movlw	5
 11035  005734  6E04               	movwf	(??_LED_C+1)^0,c
 11036  005736  0E0F               	movlw	15
 11037  005738  6E03               	movwf	??_LED_C^0,c
 11038  00573A  0EF1               	movlw	241
 11039  00573C                     u6957:
 11040  00573C  2EE8               	decfsz	wreg,f,c
 11041  00573E  D7FE               	bra	u6957
 11042  005740  2E03               	decfsz	??_LED_C^0,f,c
 11043  005742  D7FC               	bra	u6957
 11044  005744  2E04               	decfsz	(??_LED_C+1)^0,f,c
 11045  005746  D7FA               	bra	u6957
 11046  005748  F000               	nop	
 11047  00574A  0012               	return		;funcret
 11048  00574C                     __end_of_LED_C:
 11049                           	callstack 0
 11050                           
 11051 ;; *************** function _action *****************
 11052 ;; Defined at:
 11053 ;;		line 19 in file "movement.c"
 11054 ;; Parameters:    Size  Location     Type
 11055 ;;  color           1    wreg     unsigned char 
 11056 ;;  mL              2   59[COMRAM] PTR struct DC_motor
 11057 ;;		 -> main@motorL(10), 
 11058 ;;  mR              2   61[COMRAM] PTR struct DC_motor
 11059 ;;		 -> main@motorR(10), 
 11060 ;; Auto vars:     Size  Location     Type
 11061 ;;  color           1   65[COMRAM] unsigned char 
 11062 ;; Return value:  Size  Location     Type
 11063 ;;                  1    wreg      void 
 11064 ;; Registers used:
 11065 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11066 ;; Tracked objects:
 11067 ;;		On entry : 0/0
 11068 ;;		On exit  : 0/0
 11069 ;;		Unchanged: 0/0
 11070 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11071 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11072 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11073 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11074 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11075 ;;Total ram usage:        7 bytes
 11076 ;; Hardware stack levels used: 1
 11077 ;; Hardware stack levels required when called: 8
 11078 ;; This function calls:
 11079 ;;		_goback
 11080 ;;		_reverse_square
 11081 ;;		_short_reverse
 11082 ;;		_stop
 11083 ;;		_turnLeft
 11084 ;;		_turnRight
 11085 ;; This function is called by:
 11086 ;;		_main
 11087 ;; This function uses a non-reentrant model
 11088 ;;
 11089                           
 11090                           	psect	text59
 11091  002A4A                     __ptext59:
 11092                           	callstack 0
 11093  002A4A                     _action:
 11094                           	callstack 22
 11095                           
 11096                           ;incstack = 0
 11097                           ;action@color stored from wreg
 11098  002A4A  6E42               	movwf	action@color^0,c
 11099  002A4C                     
 11100                           ;movement.c: 19: void action(unsigned char color, struct DC_motor *mL, struct DC_motor *
      +                          mR);movement.c: 20: { T0CON0bits.T0EN=1;
 11101  002A4C  8ED5               	bsf	213,7,c	;volatile
 11102                           
 11103                           ;movement.c: 21:     start_move = second;
 11104  002A4E  C0F7  F0F5         	movff	_second,_start_move
 11105  002A52  C0F8  F0F6         	movff	_second+1,_start_move+1
 11106  002A56                     
 11107                           ;movement.c: 23:     if (color != 0){
 11108  002A56  5042               	movf	action@color^0,w,c
 11109  002A58  B4D8               	btfsc	status,2,c
 11110  002A5A  EF31  F015         	goto	u5321
 11111  002A5E  EF33  F015         	goto	u5320
 11112  002A62                     u5321:
 11113  002A62  EFA6  F016         	goto	l675
 11114  002A66                     u5320:
 11115  002A66                     
 11116                           ;movement.c: 24:         T0CON0bits.T0EN=0;
 11117  002A66  9ED5               	bcf	213,7,c	;volatile
 11118                           
 11119                           ;movement.c: 25:         stop_move = second;
 11120  002A68  C0F7  F0F3         	movff	_second,_stop_move
 11121  002A6C  C0F8  F0F4         	movff	_second+1,_stop_move+1
 11122  002A70                     
 11123                           ;movement.c: 26:         memory[array_index] = (start_move-stop_move);
 11124  002A70  0100               	movlb	0	; () banked
 11125  002A72  51F3               	movf	_stop_move& (0+255),w,b
 11126  002A74  5DF5               	subwf	_start_move& (0+255),w,b
 11127  002A76  6E40               	movwf	??_action^0,c
 11128  002A78  51F4               	movf	(_stop_move+1)& (0+255),w,b
 11129  002A7A  59F6               	subwfb	(_start_move+1)& (0+255),w,b
 11130  002A7C  6E41               	movwf	(??_action+1)^0,c
 11131  002A7E  505A               	movf	_array_index^0,w,c
 11132  002A80  0D02               	mullw	2
 11133  002A82  0E3C               	movlw	low _memory
 11134  002A84  24F3               	addwf	243,w,c
 11135  002A86  6ED9               	movwf	fsr2l,c
 11136  002A88  0E01               	movlw	high _memory
 11137  002A8A  20F4               	addwfc	prodh,w,c
 11138  002A8C  6EDA               	movwf	fsr2h,c
 11139  002A8E  C040  FFDE         	movff	??_action,postinc2
 11140  002A92  C041  FFDD         	movff	??_action+1,postdec2
 11141  002A96                     
 11142                           ; BSR set to: 0
 11143                           ;movement.c: 27:         array_index++;
 11144  002A96  2A5A               	incf	_array_index^0,f,c
 11145  002A98                     
 11146                           ; BSR set to: 0
 11147                           ;movement.c: 28:         stop(mL,mR);
 11148  002A98  C03C  F01C         	movff	action@mL,stop@mL
 11149  002A9C  C03D  F01D         	movff	action@mL+1,stop@mL+1
 11150  002AA0  C03E  F01E         	movff	action@mR,stop@mR
 11151  002AA4  C03F  F01F         	movff	action@mR+1,stop@mR+1
 11152  002AA8  ECB4  F026         	call	_stop	;wreg free
 11153  002AAC                     
 11154                           ;movement.c: 29:         if (color == 1){
 11155  002AAC  0442               	decf	action@color^0,w,c
 11156  002AAE  A4D8               	btfss	status,2,c
 11157  002AB0  EF5C  F015         	goto	u5331
 11158  002AB4  EF5E  F015         	goto	u5330
 11159  002AB8                     u5331:
 11160  002AB8  EF81  F015         	goto	l5248
 11161  002ABC                     u5330:
 11162  002ABC                     
 11163                           ;movement.c: 30:             short_reverse(mL,mR);
 11164  002ABC  C03C  F028         	movff	action@mL,short_reverse@mL
 11165  002AC0  C03D  F029         	movff	action@mL+1,short_reverse@mL+1
 11166  002AC4  C03E  F02A         	movff	action@mR,short_reverse@mR
 11167  002AC8  C03F  F02B         	movff	action@mR+1,short_reverse@mR+1
 11168  002ACC  ECEE  F029         	call	_short_reverse	;wreg free
 11169                           
 11170                           ;movement.c: 31:             turnRight(mL,mR,90);
 11171  002AD0  C03C  F022         	movff	action@mL,turnRight@mL
 11172  002AD4  C03D  F023         	movff	action@mL+1,turnRight@mL+1
 11173  002AD8  C03E  F024         	movff	action@mR,turnRight@mR
 11174  002ADC  C03F  F025         	movff	action@mR+1,turnRight@mR+1
 11175  002AE0  0E5A               	movlw	90
 11176  002AE2  6E26               	movwf	turnRight@angle_right^0,c
 11177  002AE4  EC93  F020         	call	_turnRight	;wreg free
 11178  002AE8                     
 11179                           ;movement.c: 32:             memory[array_index] = 1;
 11180  002AE8  505A               	movf	_array_index^0,w,c
 11181  002AEA  0D02               	mullw	2
 11182  002AEC  0E3C               	movlw	low _memory
 11183  002AEE  24F3               	addwf	243,w,c
 11184  002AF0  6ED9               	movwf	fsr2l,c
 11185  002AF2  0E01               	movlw	high _memory
 11186  002AF4  20F4               	addwfc	prodh,w,c
 11187  002AF6  6EDA               	movwf	fsr2h,c
 11188  002AF8  0E01               	movlw	1
 11189  002AFA  6EDE               	movwf	postinc2,c
 11190  002AFC  0E00               	movlw	0
 11191  002AFE  6EDD               	movwf	postdec2,c
 11192  002B00                     
 11193                           ;movement.c: 33:             array_index++;
 11194  002B00  2A5A               	incf	_array_index^0,f,c
 11195  002B02                     l5248:
 11196                           
 11197                           ;movement.c: 35:         if (color == 2){
 11198  002B02  0E02               	movlw	2
 11199  002B04  1842               	xorwf	action@color^0,w,c
 11200  002B06  A4D8               	btfss	status,2,c
 11201  002B08  EF88  F015         	goto	u5341
 11202  002B0C  EF8A  F015         	goto	u5340
 11203  002B10                     u5341:
 11204  002B10  EFAD  F015         	goto	l5256
 11205  002B14                     u5340:
 11206  002B14                     
 11207                           ;movement.c: 36:             short_reverse(mL,mR);
 11208  002B14  C03C  F028         	movff	action@mL,short_reverse@mL
 11209  002B18  C03D  F029         	movff	action@mL+1,short_reverse@mL+1
 11210  002B1C  C03E  F02A         	movff	action@mR,short_reverse@mR
 11211  002B20  C03F  F02B         	movff	action@mR+1,short_reverse@mR+1
 11212  002B24  ECEE  F029         	call	_short_reverse	;wreg free
 11213                           
 11214                           ;movement.c: 37:             turnLeft(mL,mR,90);
 11215  002B28  C03C  F022         	movff	action@mL,turnLeft@mL
 11216  002B2C  C03D  F023         	movff	action@mL+1,turnLeft@mL+1
 11217  002B30  C03E  F024         	movff	action@mR,turnLeft@mR
 11218  002B34  C03F  F025         	movff	action@mR+1,turnLeft@mR+1
 11219  002B38  0E5A               	movlw	90
 11220  002B3A  6E26               	movwf	turnLeft@angle_left^0,c
 11221  002B3C  EC53  F021         	call	_turnLeft	;wreg free
 11222  002B40                     
 11223                           ;movement.c: 38:             memory[array_index] = 2;
 11224  002B40  505A               	movf	_array_index^0,w,c
 11225  002B42  0D02               	mullw	2
 11226  002B44  0E3C               	movlw	low _memory
 11227  002B46  24F3               	addwf	243,w,c
 11228  002B48  6ED9               	movwf	fsr2l,c
 11229  002B4A  0E01               	movlw	high _memory
 11230  002B4C  20F4               	addwfc	prodh,w,c
 11231  002B4E  6EDA               	movwf	fsr2h,c
 11232  002B50  0E02               	movlw	2
 11233  002B52  6EDE               	movwf	postinc2,c
 11234  002B54  0E00               	movlw	0
 11235  002B56  6EDD               	movwf	postdec2,c
 11236  002B58                     
 11237                           ;movement.c: 39:             array_index++;
 11238  002B58  2A5A               	incf	_array_index^0,f,c
 11239  002B5A                     l5256:
 11240                           
 11241                           ;movement.c: 41:         if (color == 3){
 11242  002B5A  0E03               	movlw	3
 11243  002B5C  1842               	xorwf	action@color^0,w,c
 11244  002B5E  A4D8               	btfss	status,2,c
 11245  002B60  EFB4  F015         	goto	u5351
 11246  002B64  EFB6  F015         	goto	u5350
 11247  002B68                     u5351:
 11248  002B68  EFD9  F015         	goto	l5264
 11249  002B6C                     u5350:
 11250  002B6C                     
 11251                           ;movement.c: 42:             short_reverse(mL,mR);
 11252  002B6C  C03C  F028         	movff	action@mL,short_reverse@mL
 11253  002B70  C03D  F029         	movff	action@mL+1,short_reverse@mL+1
 11254  002B74  C03E  F02A         	movff	action@mR,short_reverse@mR
 11255  002B78  C03F  F02B         	movff	action@mR+1,short_reverse@mR+1
 11256  002B7C  ECEE  F029         	call	_short_reverse	;wreg free
 11257                           
 11258                           ;movement.c: 43:             turnLeft(mL,mR,180);
 11259  002B80  C03C  F022         	movff	action@mL,turnLeft@mL
 11260  002B84  C03D  F023         	movff	action@mL+1,turnLeft@mL+1
 11261  002B88  C03E  F024         	movff	action@mR,turnLeft@mR
 11262  002B8C  C03F  F025         	movff	action@mR+1,turnLeft@mR+1
 11263  002B90  0EB4               	movlw	180
 11264  002B92  6E26               	movwf	turnLeft@angle_left^0,c
 11265  002B94  EC53  F021         	call	_turnLeft	;wreg free
 11266  002B98                     
 11267                           ;movement.c: 44:             memory[array_index] = 3;
 11268  002B98  505A               	movf	_array_index^0,w,c
 11269  002B9A  0D02               	mullw	2
 11270  002B9C  0E3C               	movlw	low _memory
 11271  002B9E  24F3               	addwf	243,w,c
 11272  002BA0  6ED9               	movwf	fsr2l,c
 11273  002BA2  0E01               	movlw	high _memory
 11274  002BA4  20F4               	addwfc	prodh,w,c
 11275  002BA6  6EDA               	movwf	fsr2h,c
 11276  002BA8  0E03               	movlw	3
 11277  002BAA  6EDE               	movwf	postinc2,c
 11278  002BAC  0E00               	movlw	0
 11279  002BAE  6EDD               	movwf	postdec2,c
 11280  002BB0                     
 11281                           ;movement.c: 45:             array_index++;
 11282  002BB0  2A5A               	incf	_array_index^0,f,c
 11283  002BB2                     l5264:
 11284                           
 11285                           ;movement.c: 47:         if (color == 4){
 11286  002BB2  0E04               	movlw	4
 11287  002BB4  1842               	xorwf	action@color^0,w,c
 11288  002BB6  A4D8               	btfss	status,2,c
 11289  002BB8  EFE0  F015         	goto	u5361
 11290  002BBC  EFE2  F015         	goto	u5360
 11291  002BC0                     u5361:
 11292  002BC0  EF05  F016         	goto	l5272
 11293  002BC4                     u5360:
 11294  002BC4                     
 11295                           ;movement.c: 48:             reverse_square(mL,mR);
 11296  002BC4  C03C  F028         	movff	action@mL,reverse_square@mL
 11297  002BC8  C03D  F029         	movff	action@mL+1,reverse_square@mL+1
 11298  002BCC  C03E  F02A         	movff	action@mR,reverse_square@mR
 11299  002BD0  C03F  F02B         	movff	action@mR+1,reverse_square@mR+1
 11300  002BD4  EC0F  F02A         	call	_reverse_square	;wreg free
 11301                           
 11302                           ;movement.c: 49:             turnRight(mL,mR,90);
 11303  002BD8  C03C  F022         	movff	action@mL,turnRight@mL
 11304  002BDC  C03D  F023         	movff	action@mL+1,turnRight@mL+1
 11305  002BE0  C03E  F024         	movff	action@mR,turnRight@mR
 11306  002BE4  C03F  F025         	movff	action@mR+1,turnRight@mR+1
 11307  002BE8  0E5A               	movlw	90
 11308  002BEA  6E26               	movwf	turnRight@angle_right^0,c
 11309  002BEC  EC93  F020         	call	_turnRight	;wreg free
 11310  002BF0                     
 11311                           ;movement.c: 50:             memory[array_index] = 4;
 11312  002BF0  505A               	movf	_array_index^0,w,c
 11313  002BF2  0D02               	mullw	2
 11314  002BF4  0E3C               	movlw	low _memory
 11315  002BF6  24F3               	addwf	243,w,c
 11316  002BF8  6ED9               	movwf	fsr2l,c
 11317  002BFA  0E01               	movlw	high _memory
 11318  002BFC  20F4               	addwfc	prodh,w,c
 11319  002BFE  6EDA               	movwf	fsr2h,c
 11320  002C00  0E04               	movlw	4
 11321  002C02  6EDE               	movwf	postinc2,c
 11322  002C04  0E00               	movlw	0
 11323  002C06  6EDD               	movwf	postdec2,c
 11324  002C08                     
 11325                           ;movement.c: 51:             array_index++;
 11326  002C08  2A5A               	incf	_array_index^0,f,c
 11327  002C0A                     l5272:
 11328                           
 11329                           ;movement.c: 53:         if (color == 5){
 11330  002C0A  0E05               	movlw	5
 11331  002C0C  1842               	xorwf	action@color^0,w,c
 11332  002C0E  A4D8               	btfss	status,2,c
 11333  002C10  EF0C  F016         	goto	u5371
 11334  002C14  EF0E  F016         	goto	u5370
 11335  002C18                     u5371:
 11336  002C18  EF31  F016         	goto	l5280
 11337  002C1C                     u5370:
 11338  002C1C                     
 11339                           ;movement.c: 54:             reverse_square(mL,mR);
 11340  002C1C  C03C  F028         	movff	action@mL,reverse_square@mL
 11341  002C20  C03D  F029         	movff	action@mL+1,reverse_square@mL+1
 11342  002C24  C03E  F02A         	movff	action@mR,reverse_square@mR
 11343  002C28  C03F  F02B         	movff	action@mR+1,reverse_square@mR+1
 11344  002C2C  EC0F  F02A         	call	_reverse_square	;wreg free
 11345                           
 11346                           ;movement.c: 55:             turnLeft(mL,mR,90);
 11347  002C30  C03C  F022         	movff	action@mL,turnLeft@mL
 11348  002C34  C03D  F023         	movff	action@mL+1,turnLeft@mL+1
 11349  002C38  C03E  F024         	movff	action@mR,turnLeft@mR
 11350  002C3C  C03F  F025         	movff	action@mR+1,turnLeft@mR+1
 11351  002C40  0E5A               	movlw	90
 11352  002C42  6E26               	movwf	turnLeft@angle_left^0,c
 11353  002C44  EC53  F021         	call	_turnLeft	;wreg free
 11354  002C48                     
 11355                           ;movement.c: 56:             memory[array_index] = 5;
 11356  002C48  505A               	movf	_array_index^0,w,c
 11357  002C4A  0D02               	mullw	2
 11358  002C4C  0E3C               	movlw	low _memory
 11359  002C4E  24F3               	addwf	243,w,c
 11360  002C50  6ED9               	movwf	fsr2l,c
 11361  002C52  0E01               	movlw	high _memory
 11362  002C54  20F4               	addwfc	prodh,w,c
 11363  002C56  6EDA               	movwf	fsr2h,c
 11364  002C58  0E05               	movlw	5
 11365  002C5A  6EDE               	movwf	postinc2,c
 11366  002C5C  0E00               	movlw	0
 11367  002C5E  6EDD               	movwf	postdec2,c
 11368  002C60                     
 11369                           ;movement.c: 57:             array_index++;
 11370  002C60  2A5A               	incf	_array_index^0,f,c
 11371  002C62                     l5280:
 11372                           
 11373                           ;movement.c: 59:         if (color == 6){
 11374  002C62  0E06               	movlw	6
 11375  002C64  1842               	xorwf	action@color^0,w,c
 11376  002C66  A4D8               	btfss	status,2,c
 11377  002C68  EF38  F016         	goto	u5381
 11378  002C6C  EF3A  F016         	goto	u5380
 11379  002C70                     u5381:
 11380  002C70  EF5D  F016         	goto	l5288
 11381  002C74                     u5380:
 11382  002C74                     
 11383                           ;movement.c: 60:             short_reverse(mL,mR);
 11384  002C74  C03C  F028         	movff	action@mL,short_reverse@mL
 11385  002C78  C03D  F029         	movff	action@mL+1,short_reverse@mL+1
 11386  002C7C  C03E  F02A         	movff	action@mR,short_reverse@mR
 11387  002C80  C03F  F02B         	movff	action@mR+1,short_reverse@mR+1
 11388  002C84  ECEE  F029         	call	_short_reverse	;wreg free
 11389                           
 11390                           ;movement.c: 61:             turnRight(mL,mR,135);
 11391  002C88  C03C  F022         	movff	action@mL,turnRight@mL
 11392  002C8C  C03D  F023         	movff	action@mL+1,turnRight@mL+1
 11393  002C90  C03E  F024         	movff	action@mR,turnRight@mR
 11394  002C94  C03F  F025         	movff	action@mR+1,turnRight@mR+1
 11395  002C98  0E87               	movlw	135
 11396  002C9A  6E26               	movwf	turnRight@angle_right^0,c
 11397  002C9C  EC93  F020         	call	_turnRight	;wreg free
 11398  002CA0                     
 11399                           ;movement.c: 62:             memory[array_index] = 6;
 11400  002CA0  505A               	movf	_array_index^0,w,c
 11401  002CA2  0D02               	mullw	2
 11402  002CA4  0E3C               	movlw	low _memory
 11403  002CA6  24F3               	addwf	243,w,c
 11404  002CA8  6ED9               	movwf	fsr2l,c
 11405  002CAA  0E01               	movlw	high _memory
 11406  002CAC  20F4               	addwfc	prodh,w,c
 11407  002CAE  6EDA               	movwf	fsr2h,c
 11408  002CB0  0E06               	movlw	6
 11409  002CB2  6EDE               	movwf	postinc2,c
 11410  002CB4  0E00               	movlw	0
 11411  002CB6  6EDD               	movwf	postdec2,c
 11412  002CB8                     
 11413                           ;movement.c: 63:             array_index++;
 11414  002CB8  2A5A               	incf	_array_index^0,f,c
 11415  002CBA                     l5288:
 11416                           
 11417                           ;movement.c: 65:         if (color == 7){
 11418  002CBA  0E07               	movlw	7
 11419  002CBC  1842               	xorwf	action@color^0,w,c
 11420  002CBE  A4D8               	btfss	status,2,c
 11421  002CC0  EF64  F016         	goto	u5391
 11422  002CC4  EF66  F016         	goto	u5390
 11423  002CC8                     u5391:
 11424  002CC8  EF89  F016         	goto	l5296
 11425  002CCC                     u5390:
 11426  002CCC                     
 11427                           ;movement.c: 66:             short_reverse(mL,mR);
 11428  002CCC  C03C  F028         	movff	action@mL,short_reverse@mL
 11429  002CD0  C03D  F029         	movff	action@mL+1,short_reverse@mL+1
 11430  002CD4  C03E  F02A         	movff	action@mR,short_reverse@mR
 11431  002CD8  C03F  F02B         	movff	action@mR+1,short_reverse@mR+1
 11432  002CDC  ECEE  F029         	call	_short_reverse	;wreg free
 11433                           
 11434                           ;movement.c: 67:             turnLeft(mL,mR,135);
 11435  002CE0  C03C  F022         	movff	action@mL,turnLeft@mL
 11436  002CE4  C03D  F023         	movff	action@mL+1,turnLeft@mL+1
 11437  002CE8  C03E  F024         	movff	action@mR,turnLeft@mR
 11438  002CEC  C03F  F025         	movff	action@mR+1,turnLeft@mR+1
 11439  002CF0  0E87               	movlw	135
 11440  002CF2  6E26               	movwf	turnLeft@angle_left^0,c
 11441  002CF4  EC53  F021         	call	_turnLeft	;wreg free
 11442  002CF8                     
 11443                           ;movement.c: 68:             memory[array_index] = 7;
 11444  002CF8  505A               	movf	_array_index^0,w,c
 11445  002CFA  0D02               	mullw	2
 11446  002CFC  0E3C               	movlw	low _memory
 11447  002CFE  24F3               	addwf	243,w,c
 11448  002D00  6ED9               	movwf	fsr2l,c
 11449  002D02  0E01               	movlw	high _memory
 11450  002D04  20F4               	addwfc	prodh,w,c
 11451  002D06  6EDA               	movwf	fsr2h,c
 11452  002D08  0E07               	movlw	7
 11453  002D0A  6EDE               	movwf	postinc2,c
 11454  002D0C  0E00               	movlw	0
 11455  002D0E  6EDD               	movwf	postdec2,c
 11456  002D10                     
 11457                           ;movement.c: 69:             array_index++;
 11458  002D10  2A5A               	incf	_array_index^0,f,c
 11459  002D12                     l5296:
 11460                           
 11461                           ;movement.c: 71:         if (color == 8){
 11462  002D12  0E08               	movlw	8
 11463  002D14  1842               	xorwf	action@color^0,w,c
 11464  002D16  A4D8               	btfss	status,2,c
 11465  002D18  EF90  F016         	goto	u5401
 11466  002D1C  EF92  F016         	goto	u5400
 11467  002D20                     u5401:
 11468  002D20  EFA6  F016         	goto	l675
 11469  002D24                     u5400:
 11470  002D24                     
 11471                           ;movement.c: 72:             short_reverse(mL,mR);
 11472  002D24  C03C  F028         	movff	action@mL,short_reverse@mL
 11473  002D28  C03D  F029         	movff	action@mL+1,short_reverse@mL+1
 11474  002D2C  C03E  F02A         	movff	action@mR,short_reverse@mR
 11475  002D30  C03F  F02B         	movff	action@mR+1,short_reverse@mR+1
 11476  002D34  ECEE  F029         	call	_short_reverse	;wreg free
 11477                           
 11478                           ;movement.c: 73:             goback(mL,mR);
 11479  002D38  C03C  F034         	movff	action@mL,goback@mL
 11480  002D3C  C03D  F035         	movff	action@mL+1,goback@mL+1
 11481  002D40  C03E  F036         	movff	action@mR,goback@mR
 11482  002D44  C03F  F037         	movff	action@mR+1,goback@mR+1
 11483  002D48  EC6F  F019         	call	_goback	;wreg free
 11484  002D4C                     l675:
 11485  002D4C  0012               	return		;funcret
 11486  002D4E                     __end_of_action:
 11487                           	callstack 0
 11488                           
 11489 ;; *************** function _short_reverse *****************
 11490 ;; Defined at:
 11491 ;;		line 182 in file "dc_motor.c"
 11492 ;; Parameters:    Size  Location     Type
 11493 ;;  mL              2   39[COMRAM] PTR struct DC_motor
 11494 ;;		 -> main@motorL(10), 
 11495 ;;  mR              2   41[COMRAM] PTR struct DC_motor
 11496 ;;		 -> main@motorR(10), 
 11497 ;; Auto vars:     Size  Location     Type
 11498 ;;		None
 11499 ;; Return value:  Size  Location     Type
 11500 ;;                  1    wreg      void 
 11501 ;; Registers used:
 11502 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11503 ;; Tracked objects:
 11504 ;;		On entry : 0/0
 11505 ;;		On exit  : 0/0
 11506 ;;		Unchanged: 0/0
 11507 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11508 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11509 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11510 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11511 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11512 ;;Total ram usage:        6 bytes
 11513 ;; Hardware stack levels used: 1
 11514 ;; Hardware stack levels required when called: 6
 11515 ;; This function calls:
 11516 ;;		_fullSpeedBack
 11517 ;;		_stop
 11518 ;; This function is called by:
 11519 ;;		_action
 11520 ;; This function uses a non-reentrant model
 11521 ;;
 11522                           
 11523                           	psect	text60
 11524  0053DC                     __ptext60:
 11525                           	callstack 0
 11526  0053DC                     _short_reverse:
 11527                           	callstack 23
 11528  0053DC                     
 11529                           ;dc_motor.c: 182: void short_reverse(struct DC_motor *mL, struct DC_motor *mR);dc_motor.
      +                          c: 183: { fullSpeedBack(mL, mR);
 11530  0053DC  C028  F022         	movff	short_reverse@mL,fullSpeedBack@mL
 11531  0053E0  C029  F023         	movff	short_reverse@mL+1,fullSpeedBack@mL+1
 11532  0053E4  C02A  F024         	movff	short_reverse@mR,fullSpeedBack@mR
 11533  0053E8  C02B  F025         	movff	short_reverse@mR+1,fullSpeedBack@mR+1
 11534  0053EC  EC54  F026         	call	_fullSpeedBack	;wreg free
 11535  0053F0                     
 11536                           ;dc_motor.c: 184:     _delay((unsigned long)((500)*(64000000/4000.0)));
 11537  0053F0  0E29               	movlw	41
 11538  0053F2  6E2D               	movwf	(??_short_reverse+1)^0,c
 11539  0053F4  0E96               	movlw	150
 11540  0053F6  6E2C               	movwf	??_short_reverse^0,c
 11541  0053F8  0E7F               	movlw	127
 11542  0053FA                     u6967:
 11543  0053FA  2EE8               	decfsz	wreg,f,c
 11544  0053FC  D7FE               	bra	u6967
 11545  0053FE  2E2C               	decfsz	??_short_reverse^0,f,c
 11546  005400  D7FC               	bra	u6967
 11547  005402  2E2D               	decfsz	(??_short_reverse+1)^0,f,c
 11548  005404  D7FA               	bra	u6967
 11549  005406  F000               	nop	
 11550  005408                     
 11551                           ;dc_motor.c: 185:     stop(mL,mR);
 11552  005408  C028  F01C         	movff	short_reverse@mL,stop@mL
 11553  00540C  C029  F01D         	movff	short_reverse@mL+1,stop@mL+1
 11554  005410  C02A  F01E         	movff	short_reverse@mR,stop@mR
 11555  005414  C02B  F01F         	movff	short_reverse@mR+1,stop@mR+1
 11556  005418  ECB4  F026         	call	_stop	;wreg free
 11557  00541C  0012               	return		;funcret
 11558  00541E                     __end_of_short_reverse:
 11559                           	callstack 0
 11560                           
 11561 ;; *************** function _goback *****************
 11562 ;; Defined at:
 11563 ;;		line 114 in file "movement.c"
 11564 ;; Parameters:    Size  Location     Type
 11565 ;;  mL              2   51[COMRAM] PTR struct DC_motor
 11566 ;;		 -> main@motorL(10), 
 11567 ;;  mR              2   53[COMRAM] PTR struct DC_motor
 11568 ;;		 -> main@motorR(10), 
 11569 ;; Auto vars:     Size  Location     Type
 11570 ;;  i               2   57[COMRAM] unsigned int 
 11571 ;; Return value:  Size  Location     Type
 11572 ;;                  1    wreg      void 
 11573 ;; Registers used:
 11574 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11575 ;; Tracked objects:
 11576 ;;		On entry : 0/0
 11577 ;;		On exit  : 0/0
 11578 ;;		Unchanged: 0/0
 11579 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11580 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11581 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11582 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11583 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11584 ;;Total ram usage:        8 bytes
 11585 ;; Hardware stack levels used: 1
 11586 ;; Hardware stack levels required when called: 7
 11587 ;; This function calls:
 11588 ;;		_fullSpeedAhead
 11589 ;;		_reverse_square
 11590 ;;		_stop
 11591 ;;		_turnLeft
 11592 ;;		_turnRight
 11593 ;; This function is called by:
 11594 ;;		_action
 11595 ;; This function uses a non-reentrant model
 11596 ;;
 11597                           
 11598                           	psect	text61
 11599  0032DE                     __ptext61:
 11600                           	callstack 0
 11601  0032DE                     _goback:
 11602                           	callstack 22
 11603  0032DE                     
 11604                           ;movement.c: 114: void goback(struct DC_motor *mL, struct DC_motor *mR);movement.c: 115:
      +                           { turnLeft(mL,mR,180);
 11605  0032DE  C034  F022         	movff	goback@mL,turnLeft@mL
 11606  0032E2  C035  F023         	movff	goback@mL+1,turnLeft@mL+1
 11607  0032E6  C036  F024         	movff	goback@mR,turnLeft@mR
 11608  0032EA  C037  F025         	movff	goback@mR+1,turnLeft@mR+1
 11609  0032EE  0EB4               	movlw	180
 11610  0032F0  6E26               	movwf	turnLeft@angle_left^0,c
 11611  0032F2  EC53  F021         	call	_turnLeft	;wreg free
 11612                           
 11613                           ;movement.c: 116:     while(array_index > 0){
 11614  0032F6  EFAF  F01A         	goto	l4964
 11615  0032FA                     l4904:
 11616                           
 11617                           ;movement.c: 117:         fullSpeedAhead(mL,mR);
 11618  0032FA  C034  F01C         	movff	goback@mL,fullSpeedAhead@mL
 11619  0032FE  C035  F01D         	movff	goback@mL+1,fullSpeedAhead@mL+1
 11620  003302  C036  F01E         	movff	goback@mR,fullSpeedAhead@mR
 11621  003306  C037  F01F         	movff	goback@mR+1,fullSpeedAhead@mR+1
 11622  00330A  EC6A  F027         	call	_fullSpeedAhead	;wreg free
 11623  00330E                     
 11624                           ;movement.c: 118:         for (unsigned int i=0; i<memory[array_index]; i++) {_delay((un
      +                          signed long)((1000)*(64000000/4000.0)));}
 11625  00330E  0E00               	movlw	0
 11626  003310  6E3B               	movwf	(goback@i+1)^0,c
 11627  003312  0E00               	movlw	0
 11628  003314  6E3A               	movwf	goback@i^0,c
 11629  003316  EF9B  F019         	goto	l4912
 11630  00331A                     l4908:
 11631  00331A  0E52               	movlw	82
 11632  00331C  6E39               	movwf	(??_goback+1)^0,c
 11633  00331E  0E2B               	movlw	43
 11634  003320  6E38               	movwf	??_goback^0,c
 11635  003322  0E00               	movlw	0
 11636  003324                     u6977:
 11637  003324  2EE8               	decfsz	wreg,f,c
 11638  003326  D7FE               	bra	u6977
 11639  003328  2E38               	decfsz	??_goback^0,f,c
 11640  00332A  D7FC               	bra	u6977
 11641  00332C  2E39               	decfsz	(??_goback+1)^0,f,c
 11642  00332E  D7FA               	bra	u6977
 11643  003330  D000               	nop2	
 11644  003332  4A3A               	infsnz	goback@i^0,f,c
 11645  003334  2A3B               	incf	(goback@i+1)^0,f,c
 11646  003336                     l4912:
 11647  003336  505A               	movf	_array_index^0,w,c
 11648  003338  0D02               	mullw	2
 11649  00333A  0E3C               	movlw	low _memory
 11650  00333C  24F3               	addwf	243,w,c
 11651  00333E  6ED9               	movwf	fsr2l,c
 11652  003340  0E01               	movlw	high _memory
 11653  003342  20F4               	addwfc	prodh,w,c
 11654  003344  6EDA               	movwf	fsr2h,c
 11655  003346  50DE               	movf	postinc2,w,c
 11656  003348  5C3A               	subwf	goback@i^0,w,c
 11657  00334A  50DE               	movf	postinc2,w,c
 11658  00334C  583B               	subwfb	(goback@i+1)^0,w,c
 11659  00334E  A0D8               	btfss	status,0,c
 11660  003350  EFAC  F019         	goto	u5131
 11661  003354  EFAE  F019         	goto	u5130
 11662  003358                     u5131:
 11663  003358  EF8D  F019         	goto	l4908
 11664  00335C                     u5130:
 11665  00335C                     
 11666                           ;movement.c: 119:         stop(mL,mR);
 11667  00335C  C034  F01C         	movff	goback@mL,stop@mL
 11668  003360  C035  F01D         	movff	goback@mL+1,stop@mL+1
 11669  003364  C036  F01E         	movff	goback@mR,stop@mR
 11670  003368  C037  F01F         	movff	goback@mR+1,stop@mR+1
 11671  00336C  ECB4  F026         	call	_stop	;wreg free
 11672  003370                     
 11673                           ;movement.c: 120:         if (array_index == 0){break;}
 11674  003370  505A               	movf	_array_index^0,w,c
 11675  003372  A4D8               	btfss	status,2,c
 11676  003374  EFBE  F019         	goto	u5141
 11677  003378  EFC0  F019         	goto	u5140
 11678  00337C                     u5141:
 11679  00337C  EFC2  F019         	goto	l4920
 11680  003380                     u5140:
 11681  003380  EFB7  F01A         	goto	l698
 11682  003384                     l4920:
 11683                           
 11684                           ;movement.c: 121:         array_index--;
 11685  003384  065A               	decf	_array_index^0,f,c
 11686  003386                     
 11687                           ;movement.c: 123:         if (memory[array_index] == 1){turnLeft(mL,mR,90);array_index--
      +                          ;}
 11688  003386  505A               	movf	_array_index^0,w,c
 11689  003388  0D02               	mullw	2
 11690  00338A  0E3C               	movlw	low _memory
 11691  00338C  24F3               	addwf	243,w,c
 11692  00338E  6ED9               	movwf	fsr2l,c
 11693  003390  0E01               	movlw	high _memory
 11694  003392  20F4               	addwfc	prodh,w,c
 11695  003394  6EDA               	movwf	fsr2h,c
 11696  003396  04DE               	decf	postinc2,w,c
 11697  003398  10DE               	iorwf	postinc2,w,c
 11698  00339A  A4D8               	btfss	status,2,c
 11699  00339C  EFD2  F019         	goto	u5151
 11700  0033A0  EFD4  F019         	goto	u5150
 11701  0033A4                     u5151:
 11702  0033A4  EFE1  F019         	goto	l4928
 11703  0033A8                     u5150:
 11704  0033A8  C034  F022         	movff	goback@mL,turnLeft@mL
 11705  0033AC  C035  F023         	movff	goback@mL+1,turnLeft@mL+1
 11706  0033B0  C036  F024         	movff	goback@mR,turnLeft@mR
 11707  0033B4  C037  F025         	movff	goback@mR+1,turnLeft@mR+1
 11708  0033B8  0E5A               	movlw	90
 11709  0033BA  6E26               	movwf	turnLeft@angle_left^0,c
 11710  0033BC  EC53  F021         	call	_turnLeft	;wreg free
 11711  0033C0  065A               	decf	_array_index^0,f,c
 11712  0033C2                     l4928:
 11713                           
 11714                           ;movement.c: 124:         if (memory[array_index] == 2){turnRight(mL,mR,90);array_index-
      +                          -;}
 11715  0033C2  505A               	movf	_array_index^0,w,c
 11716  0033C4  0D02               	mullw	2
 11717  0033C6  0E3C               	movlw	low _memory
 11718  0033C8  24F3               	addwf	243,w,c
 11719  0033CA  6ED9               	movwf	fsr2l,c
 11720  0033CC  0E01               	movlw	high _memory
 11721  0033CE  20F4               	addwfc	prodh,w,c
 11722  0033D0  6EDA               	movwf	fsr2h,c
 11723  0033D2  0E02               	movlw	2
 11724  0033D4  18DE               	xorwf	postinc2,w,c
 11725  0033D6  10DE               	iorwf	postinc2,w,c
 11726  0033D8  A4D8               	btfss	status,2,c
 11727  0033DA  EFF1  F019         	goto	u5161
 11728  0033DE  EFF3  F019         	goto	u5160
 11729  0033E2                     u5161:
 11730  0033E2  EF00  F01A         	goto	l4934
 11731  0033E6                     u5160:
 11732  0033E6  C034  F022         	movff	goback@mL,turnRight@mL
 11733  0033EA  C035  F023         	movff	goback@mL+1,turnRight@mL+1
 11734  0033EE  C036  F024         	movff	goback@mR,turnRight@mR
 11735  0033F2  C037  F025         	movff	goback@mR+1,turnRight@mR+1
 11736  0033F6  0E5A               	movlw	90
 11737  0033F8  6E26               	movwf	turnRight@angle_right^0,c
 11738  0033FA  EC93  F020         	call	_turnRight	;wreg free
 11739  0033FE  065A               	decf	_array_index^0,f,c
 11740  003400                     l4934:
 11741                           
 11742                           ;movement.c: 125:         if (memory[array_index] == 3){turnLeft(mL,mR,180);array_index-
      +                          -;}
 11743  003400  505A               	movf	_array_index^0,w,c
 11744  003402  0D02               	mullw	2
 11745  003404  0E3C               	movlw	low _memory
 11746  003406  24F3               	addwf	243,w,c
 11747  003408  6ED9               	movwf	fsr2l,c
 11748  00340A  0E01               	movlw	high _memory
 11749  00340C  20F4               	addwfc	prodh,w,c
 11750  00340E  6EDA               	movwf	fsr2h,c
 11751  003410  0E03               	movlw	3
 11752  003412  18DE               	xorwf	postinc2,w,c
 11753  003414  10DE               	iorwf	postinc2,w,c
 11754  003416  A4D8               	btfss	status,2,c
 11755  003418  EF10  F01A         	goto	u5171
 11756  00341C  EF12  F01A         	goto	u5170
 11757  003420                     u5171:
 11758  003420  EF1F  F01A         	goto	l4940
 11759  003424                     u5170:
 11760  003424  C034  F022         	movff	goback@mL,turnLeft@mL
 11761  003428  C035  F023         	movff	goback@mL+1,turnLeft@mL+1
 11762  00342C  C036  F024         	movff	goback@mR,turnLeft@mR
 11763  003430  C037  F025         	movff	goback@mR+1,turnLeft@mR+1
 11764  003434  0EB4               	movlw	180
 11765  003436  6E26               	movwf	turnLeft@angle_left^0,c
 11766  003438  EC53  F021         	call	_turnLeft	;wreg free
 11767  00343C  065A               	decf	_array_index^0,f,c
 11768  00343E                     l4940:
 11769                           
 11770                           ;movement.c: 126:         if (memory[array_index] == 4){reverse_square(mL,mR);turnLeft(m
      +                          L,mR,90);array_index--;}
 11771  00343E  505A               	movf	_array_index^0,w,c
 11772  003440  0D02               	mullw	2
 11773  003442  0E3C               	movlw	low _memory
 11774  003444  24F3               	addwf	243,w,c
 11775  003446  6ED9               	movwf	fsr2l,c
 11776  003448  0E01               	movlw	high _memory
 11777  00344A  20F4               	addwfc	prodh,w,c
 11778  00344C  6EDA               	movwf	fsr2h,c
 11779  00344E  0E04               	movlw	4
 11780  003450  18DE               	xorwf	postinc2,w,c
 11781  003452  10DE               	iorwf	postinc2,w,c
 11782  003454  A4D8               	btfss	status,2,c
 11783  003456  EF2F  F01A         	goto	u5181
 11784  00345A  EF31  F01A         	goto	u5180
 11785  00345E                     u5181:
 11786  00345E  EF48  F01A         	goto	l4946
 11787  003462                     u5180:
 11788  003462  C034  F028         	movff	goback@mL,reverse_square@mL
 11789  003466  C035  F029         	movff	goback@mL+1,reverse_square@mL+1
 11790  00346A  C036  F02A         	movff	goback@mR,reverse_square@mR
 11791  00346E  C037  F02B         	movff	goback@mR+1,reverse_square@mR+1
 11792  003472  EC0F  F02A         	call	_reverse_square	;wreg free
 11793  003476  C034  F022         	movff	goback@mL,turnLeft@mL
 11794  00347A  C035  F023         	movff	goback@mL+1,turnLeft@mL+1
 11795  00347E  C036  F024         	movff	goback@mR,turnLeft@mR
 11796  003482  C037  F025         	movff	goback@mR+1,turnLeft@mR+1
 11797  003486  0E5A               	movlw	90
 11798  003488  6E26               	movwf	turnLeft@angle_left^0,c
 11799  00348A  EC53  F021         	call	_turnLeft	;wreg free
 11800  00348E  065A               	decf	_array_index^0,f,c
 11801  003490                     l4946:
 11802                           
 11803                           ;movement.c: 127:         if (memory[array_index] == 5){reverse_square(mL,mR);turnRight(
      +                          mL,mR,90);array_index--;}
 11804  003490  505A               	movf	_array_index^0,w,c
 11805  003492  0D02               	mullw	2
 11806  003494  0E3C               	movlw	low _memory
 11807  003496  24F3               	addwf	243,w,c
 11808  003498  6ED9               	movwf	fsr2l,c
 11809  00349A  0E01               	movlw	high _memory
 11810  00349C  20F4               	addwfc	prodh,w,c
 11811  00349E  6EDA               	movwf	fsr2h,c
 11812  0034A0  0E05               	movlw	5
 11813  0034A2  18DE               	xorwf	postinc2,w,c
 11814  0034A4  10DE               	iorwf	postinc2,w,c
 11815  0034A6  A4D8               	btfss	status,2,c
 11816  0034A8  EF58  F01A         	goto	u5191
 11817  0034AC  EF5A  F01A         	goto	u5190
 11818  0034B0                     u5191:
 11819  0034B0  EF71  F01A         	goto	l4952
 11820  0034B4                     u5190:
 11821  0034B4  C034  F028         	movff	goback@mL,reverse_square@mL
 11822  0034B8  C035  F029         	movff	goback@mL+1,reverse_square@mL+1
 11823  0034BC  C036  F02A         	movff	goback@mR,reverse_square@mR
 11824  0034C0  C037  F02B         	movff	goback@mR+1,reverse_square@mR+1
 11825  0034C4  EC0F  F02A         	call	_reverse_square	;wreg free
 11826  0034C8  C034  F022         	movff	goback@mL,turnRight@mL
 11827  0034CC  C035  F023         	movff	goback@mL+1,turnRight@mL+1
 11828  0034D0  C036  F024         	movff	goback@mR,turnRight@mR
 11829  0034D4  C037  F025         	movff	goback@mR+1,turnRight@mR+1
 11830  0034D8  0E5A               	movlw	90
 11831  0034DA  6E26               	movwf	turnRight@angle_right^0,c
 11832  0034DC  EC93  F020         	call	_turnRight	;wreg free
 11833  0034E0  065A               	decf	_array_index^0,f,c
 11834  0034E2                     l4952:
 11835                           
 11836                           ;movement.c: 128:         if (memory[array_index] == 6){turnLeft(mL,mR,135);array_index-
      +                          -;}
 11837  0034E2  505A               	movf	_array_index^0,w,c
 11838  0034E4  0D02               	mullw	2
 11839  0034E6  0E3C               	movlw	low _memory
 11840  0034E8  24F3               	addwf	243,w,c
 11841  0034EA  6ED9               	movwf	fsr2l,c
 11842  0034EC  0E01               	movlw	high _memory
 11843  0034EE  20F4               	addwfc	prodh,w,c
 11844  0034F0  6EDA               	movwf	fsr2h,c
 11845  0034F2  0E06               	movlw	6
 11846  0034F4  18DE               	xorwf	postinc2,w,c
 11847  0034F6  10DE               	iorwf	postinc2,w,c
 11848  0034F8  A4D8               	btfss	status,2,c
 11849  0034FA  EF81  F01A         	goto	u5201
 11850  0034FE  EF83  F01A         	goto	u5200
 11851  003502                     u5201:
 11852  003502  EF90  F01A         	goto	l4958
 11853  003506                     u5200:
 11854  003506  C034  F022         	movff	goback@mL,turnLeft@mL
 11855  00350A  C035  F023         	movff	goback@mL+1,turnLeft@mL+1
 11856  00350E  C036  F024         	movff	goback@mR,turnLeft@mR
 11857  003512  C037  F025         	movff	goback@mR+1,turnLeft@mR+1
 11858  003516  0E87               	movlw	135
 11859  003518  6E26               	movwf	turnLeft@angle_left^0,c
 11860  00351A  EC53  F021         	call	_turnLeft	;wreg free
 11861  00351E  065A               	decf	_array_index^0,f,c
 11862  003520                     l4958:
 11863                           
 11864                           ;movement.c: 129:         if (memory[array_index] == 7){turnRight(mL, mR, -135);array_in
      +                          dex--;}
 11865  003520  505A               	movf	_array_index^0,w,c
 11866  003522  0D02               	mullw	2
 11867  003524  0E3C               	movlw	low _memory
 11868  003526  24F3               	addwf	243,w,c
 11869  003528  6ED9               	movwf	fsr2l,c
 11870  00352A  0E01               	movlw	high _memory
 11871  00352C  20F4               	addwfc	prodh,w,c
 11872  00352E  6EDA               	movwf	fsr2h,c
 11873  003530  0E07               	movlw	7
 11874  003532  18DE               	xorwf	postinc2,w,c
 11875  003534  10DE               	iorwf	postinc2,w,c
 11876  003536  A4D8               	btfss	status,2,c
 11877  003538  EFA0  F01A         	goto	u5211
 11878  00353C  EFA2  F01A         	goto	u5210
 11879  003540                     u5211:
 11880  003540  EFAF  F01A         	goto	l4964
 11881  003544                     u5210:
 11882  003544  C034  F022         	movff	goback@mL,turnRight@mL
 11883  003548  C035  F023         	movff	goback@mL+1,turnRight@mL+1
 11884  00354C  C036  F024         	movff	goback@mR,turnRight@mR
 11885  003550  C037  F025         	movff	goback@mR+1,turnRight@mR+1
 11886  003554  0E79               	movlw	121
 11887  003556  6E26               	movwf	turnRight@angle_right^0,c
 11888  003558  EC93  F020         	call	_turnRight	;wreg free
 11889  00355C  065A               	decf	_array_index^0,f,c
 11890  00355E                     l4964:
 11891                           
 11892                           ;movement.c: 116:     while(array_index > 0){
 11893  00355E  505A               	movf	_array_index^0,w,c
 11894  003560  A4D8               	btfss	status,2,c
 11895  003562  EFB5  F01A         	goto	u5221
 11896  003566  EFB7  F01A         	goto	u5220
 11897  00356A                     u5221:
 11898  00356A  EF7D  F019         	goto	l4904
 11899  00356E                     u5220:
 11900  00356E                     l698:
 11901  00356E  0012               	return		;funcret
 11902  003570                     __end_of_goback:
 11903                           	callstack 0
 11904                           
 11905 ;; *************** function _turnRight *****************
 11906 ;; Defined at:
 11907 ;;		line 121 in file "dc_motor.c"
 11908 ;; Parameters:    Size  Location     Type
 11909 ;;  mL              2   33[COMRAM] PTR struct DC_motor
 11910 ;;		 -> main@motorL(10), 
 11911 ;;  mR              2   35[COMRAM] PTR struct DC_motor
 11912 ;;		 -> main@motorR(10), 
 11913 ;;  angle_right     1   37[COMRAM] unsigned char 
 11914 ;; Auto vars:     Size  Location     Type
 11915 ;;  i               2   47[COMRAM] unsigned int 
 11916 ;;  i               2   45[COMRAM] unsigned int 
 11917 ;;  i               2   43[COMRAM] unsigned int 
 11918 ;;  delay           2   49[COMRAM] unsigned int 
 11919 ;;  delay_180       2   41[COMRAM] unsigned int 
 11920 ;;  delay_135       2   39[COMRAM] unsigned int 
 11921 ;; Return value:  Size  Location     Type
 11922 ;;                  1    wreg      void 
 11923 ;; Registers used:
 11924 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11925 ;; Tracked objects:
 11926 ;;		On entry : 0/0
 11927 ;;		On exit  : 0/0
 11928 ;;		Unchanged: 0/0
 11929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11930 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11931 ;;      Locals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11932 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11933 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11934 ;;Total ram usage:       18 bytes
 11935 ;; Hardware stack levels used: 1
 11936 ;; Hardware stack levels required when called: 5
 11937 ;; This function calls:
 11938 ;;		_setMotorPWM
 11939 ;;		_stop
 11940 ;; This function is called by:
 11941 ;;		_action
 11942 ;;		_goback
 11943 ;;		_test_action
 11944 ;; This function uses a non-reentrant model
 11945 ;;
 11946                           
 11947                           	psect	text62
 11948  004126                     __ptext62:
 11949                           	callstack 0
 11950  004126                     _turnRight:
 11951                           	callstack 24
 11952  004126                     
 11953                           ;dc_motor.c: 121: void turnRight(struct DC_motor *mL, struct DC_motor *mR, unsigned char
      +                           angle_right);dc_motor.c: 122: {;dc_motor.c: 123:     mL->direction=1;
 11954  004126  EE20 F001          	lfsr	2,1
 11955  00412A  5022               	movf	turnRight@mL^0,w,c
 11956  00412C  26D9               	addwf	fsr2l,f,c
 11957  00412E  5023               	movf	(turnRight@mL+1)^0,w,c
 11958  004130  22DA               	addwfc	fsr2h,f,c
 11959  004132  0E01               	movlw	1
 11960  004134  6EDF               	movwf	indf2,c
 11961                           
 11962                           ;dc_motor.c: 124:     mR->direction=1;
 11963  004136  EE20 F001          	lfsr	2,1
 11964  00413A  5024               	movf	turnRight@mR^0,w,c
 11965  00413C  26D9               	addwf	fsr2l,f,c
 11966  00413E  5025               	movf	(turnRight@mR+1)^0,w,c
 11967  004140  22DA               	addwfc	fsr2h,f,c
 11968  004142  0E01               	movlw	1
 11969  004144  6EDF               	movwf	indf2,c
 11970                           
 11971                           ;dc_motor.c: 125:     while (mL->power <25){
 11972  004146  EFC4  F020         	goto	l4476
 11973  00414A                     l4468:
 11974                           
 11975                           ;dc_motor.c: 126:         mL->power += 5;
 11976  00414A  C022  FFD9         	movff	turnRight@mL,fsr2l
 11977  00414E  C023  FFDA         	movff	turnRight@mL+1,fsr2h
 11978  004152  0E05               	movlw	5
 11979  004154  26DF               	addwf	indf2,f,c
 11980                           
 11981                           ;dc_motor.c: 127:         mR->power = 0;
 11982  004156  C024  FFD9         	movff	turnRight@mR,fsr2l
 11983  00415A  C025  FFDA         	movff	turnRight@mR+1,fsr2h
 11984  00415E  0E00               	movlw	0
 11985  004160  6EDF               	movwf	indf2,c
 11986  004162                     
 11987                           ;dc_motor.c: 128:         setMotorPWM(mL);
 11988  004162  C022  F011         	movff	turnRight@mL,setMotorPWM@m
 11989  004166  C023  F012         	movff	turnRight@mL+1,setMotorPWM@m+1
 11990  00416A  ECB8  F01A         	call	_setMotorPWM	;wreg free
 11991  00416E                     
 11992                           ;dc_motor.c: 129:         setMotorPWM(mR);
 11993  00416E  C024  F011         	movff	turnRight@mR,setMotorPWM@m
 11994  004172  C025  F012         	movff	turnRight@mR+1,setMotorPWM@m+1
 11995  004176  ECB8  F01A         	call	_setMotorPWM	;wreg free
 11996  00417A                     
 11997                           ;dc_motor.c: 130:         _delay((unsigned long)((10)*(64000000/4000.0)));
 11998  00417A  0ED0               	movlw	208
 11999  00417C  6E27               	movwf	??_turnRight^0,c
 12000  00417E  0ECA               	movlw	202
 12001  004180                     u6987:
 12002  004180  2EE8               	decfsz	wreg,f,c
 12003  004182  D7FE               	bra	u6987
 12004  004184  2E27               	decfsz	??_turnRight^0,f,c
 12005  004186  D7FC               	bra	u6987
 12006  004188                     l4476:
 12007                           
 12008                           ;dc_motor.c: 125:     while (mL->power <25){
 12009  004188  C022  FFD9         	movff	turnRight@mL,fsr2l
 12010  00418C  C023  FFDA         	movff	turnRight@mL+1,fsr2h
 12011  004190  0E18               	movlw	24
 12012  004192  64DF               	cpfsgt	indf2,c
 12013  004194  EFCE  F020         	goto	u4321
 12014  004198  EFD0  F020         	goto	u4320
 12015  00419C                     u4321:
 12016  00419C  EFA5  F020         	goto	l4468
 12017  0041A0                     u4320:
 12018  0041A0                     
 12019                           ;dc_motor.c: 132:     unsigned int delay = angle_right * SENSITIVITY;
 12020  0041A0  5026               	movf	turnRight@angle_right^0,w,c
 12021  0041A2  0100               	movlb	0	; () banked
 12022  0041A4  03FC               	mulwf	_SENSITIVITY& (0+255),b
 12023  0041A6  CFF3 F032          	movff	prodl,turnRight@delay
 12024  0041AA  CFF4 F033          	movff	prodh,turnRight@delay+1
 12025  0041AE                     
 12026                           ; BSR set to: 0
 12027  0041AE  0E0A               	movlw	10
 12028  0041B0  2432               	addwf	turnRight@delay^0,w,c
 12029  0041B2  6E28               	movwf	turnRight@delay_135^0,c
 12030  0041B4  0E00               	movlw	0
 12031  0041B6  2033               	addwfc	(turnRight@delay+1)^0,w,c
 12032  0041B8  6E29               	movwf	(turnRight@delay_135+1)^0,c
 12033  0041BA                     
 12034                           ; BSR set to: 0
 12035  0041BA  0E14               	movlw	20
 12036  0041BC  2432               	addwf	turnRight@delay^0,w,c
 12037  0041BE  6E2A               	movwf	turnRight@delay_180^0,c
 12038  0041C0  0E00               	movlw	0
 12039  0041C2  2033               	addwfc	(turnRight@delay+1)^0,w,c
 12040  0041C4  6E2B               	movwf	(turnRight@delay_180+1)^0,c
 12041  0041C6                     
 12042                           ; BSR set to: 0
 12043                           ;dc_motor.c: 135:     if (angle_right == 180){
 12044  0041C6  0EB4               	movlw	180
 12045  0041C8  1826               	xorwf	turnRight@angle_right^0,w,c
 12046  0041CA  A4D8               	btfss	status,2,c
 12047  0041CC  EFEA  F020         	goto	u4331
 12048  0041D0  EFEC  F020         	goto	u4330
 12049  0041D4                     u4331:
 12050  0041D4  EF07  F021         	goto	l4492
 12051  0041D8                     u4330:
 12052  0041D8                     
 12053                           ; BSR set to: 0
 12054                           ;dc_motor.c: 136:         for(unsigned int i = 0; i <delay_180; i++){_delay((unsigned lo
      +                          ng)((1)*(64000000/4000.0)));}
 12055  0041D8  0E00               	movlw	0
 12056  0041DA  6E2D               	movwf	(turnRight@i+1)^0,c
 12057  0041DC  0E00               	movlw	0
 12058  0041DE  6E2C               	movwf	turnRight@i^0,c
 12059  0041E0  EFFC  F020         	goto	l356
 12060  0041E4                     l4488:
 12061  0041E4  0E15               	movlw	21
 12062  0041E6  6E27               	movwf	??_turnRight^0,c
 12063  0041E8  0EC6               	movlw	198
 12064  0041EA                     u6997:
 12065  0041EA  2EE8               	decfsz	wreg,f,c
 12066  0041EC  D7FE               	bra	u6997
 12067  0041EE  2E27               	decfsz	??_turnRight^0,f,c
 12068  0041F0  D7FC               	bra	u6997
 12069  0041F2  D000               	nop2	
 12070  0041F4  4A2C               	infsnz	turnRight@i^0,f,c
 12071  0041F6  2A2D               	incf	(turnRight@i+1)^0,f,c
 12072  0041F8                     l356:
 12073  0041F8  502A               	movf	turnRight@delay_180^0,w,c
 12074  0041FA  5C2C               	subwf	turnRight@i^0,w,c
 12075  0041FC  502B               	movf	(turnRight@delay_180+1)^0,w,c
 12076  0041FE  582D               	subwfb	(turnRight@i+1)^0,w,c
 12077  004200  A0D8               	btfss	status,0,c
 12078  004202  EF05  F021         	goto	u4341
 12079  004206  EF07  F021         	goto	u4340
 12080  00420A                     u4341:
 12081  00420A  EFF2  F020         	goto	l4488
 12082  00420E                     u4340:
 12083  00420E                     l4492:
 12084                           
 12085                           ;dc_motor.c: 138:     if (angle_right == 135){
 12086  00420E  0E87               	movlw	135
 12087  004210  1826               	xorwf	turnRight@angle_right^0,w,c
 12088  004212  A4D8               	btfss	status,2,c
 12089  004214  EF0E  F021         	goto	u4351
 12090  004218  EF10  F021         	goto	u4350
 12091  00421C                     u4351:
 12092  00421C  EF2D  F021         	goto	l4500
 12093  004220                     u4350:
 12094  004220                     
 12095                           ;dc_motor.c: 139:         for(unsigned int i = 0; i <delay_135; i++){_delay((unsigned lo
      +                          ng)((1)*(64000000/4000.0)));}
 12096  004220  0E00               	movlw	0
 12097  004222  6E2F               	movwf	(turnRight@i_1445+1)^0,c
 12098  004224  0E00               	movlw	0
 12099  004226  6E2E               	movwf	turnRight@i_1445^0,c
 12100  004228  EF20  F021         	goto	l360
 12101  00422C                     l4496:
 12102  00422C  0E15               	movlw	21
 12103  00422E  6E27               	movwf	??_turnRight^0,c
 12104  004230  0EC6               	movlw	198
 12105  004232                     u7007:
 12106  004232  2EE8               	decfsz	wreg,f,c
 12107  004234  D7FE               	bra	u7007
 12108  004236  2E27               	decfsz	??_turnRight^0,f,c
 12109  004238  D7FC               	bra	u7007
 12110  00423A  D000               	nop2	
 12111  00423C  4A2E               	infsnz	turnRight@i_1445^0,f,c
 12112  00423E  2A2F               	incf	(turnRight@i_1445+1)^0,f,c
 12113  004240                     l360:
 12114  004240  5028               	movf	turnRight@delay_135^0,w,c
 12115  004242  5C2E               	subwf	turnRight@i_1445^0,w,c
 12116  004244  5029               	movf	(turnRight@delay_135+1)^0,w,c
 12117  004246  582F               	subwfb	(turnRight@i_1445+1)^0,w,c
 12118  004248  A0D8               	btfss	status,0,c
 12119  00424A  EF29  F021         	goto	u4361
 12120  00424E  EF2B  F021         	goto	u4360
 12121  004252                     u4361:
 12122  004252  EF16  F021         	goto	l4496
 12123  004256                     u4360:
 12124  004256  EF48  F021         	goto	l4506
 12125  00425A                     l4500:
 12126                           
 12127                           ;dc_motor.c: 142:         for(unsigned int i = 0; i < delay; i++){_delay((unsigned long)
      +                          ((1)*(64000000/4000.0)));}
 12128  00425A  0E00               	movlw	0
 12129  00425C  6E31               	movwf	(turnRight@i_1446+1)^0,c
 12130  00425E  0E00               	movlw	0
 12131  004260  6E30               	movwf	turnRight@i_1446^0,c
 12132  004262  EF3D  F021         	goto	l364
 12133  004266                     l4502:
 12134  004266  0E15               	movlw	21
 12135  004268  6E27               	movwf	??_turnRight^0,c
 12136  00426A  0EC6               	movlw	198
 12137  00426C                     u7017:
 12138  00426C  2EE8               	decfsz	wreg,f,c
 12139  00426E  D7FE               	bra	u7017
 12140  004270  2E27               	decfsz	??_turnRight^0,f,c
 12141  004272  D7FC               	bra	u7017
 12142  004274  D000               	nop2	
 12143  004276  4A30               	infsnz	turnRight@i_1446^0,f,c
 12144  004278  2A31               	incf	(turnRight@i_1446+1)^0,f,c
 12145  00427A                     l364:
 12146  00427A  5032               	movf	turnRight@delay^0,w,c
 12147  00427C  5C30               	subwf	turnRight@i_1446^0,w,c
 12148  00427E  5033               	movf	(turnRight@delay+1)^0,w,c
 12149  004280  5831               	subwfb	(turnRight@i_1446+1)^0,w,c
 12150  004282  A0D8               	btfss	status,0,c
 12151  004284  EF46  F021         	goto	u4371
 12152  004288  EF48  F021         	goto	u4370
 12153  00428C                     u4371:
 12154  00428C  EF33  F021         	goto	l4502
 12155  004290                     u4370:
 12156  004290                     l4506:
 12157                           
 12158                           ;dc_motor.c: 144:     stop(mL,mR);
 12159  004290  C022  F01C         	movff	turnRight@mL,stop@mL
 12160  004294  C023  F01D         	movff	turnRight@mL+1,stop@mL+1
 12161  004298  C024  F01E         	movff	turnRight@mR,stop@mR
 12162  00429C  C025  F01F         	movff	turnRight@mR+1,stop@mR+1
 12163  0042A0  ECB4  F026         	call	_stop	;wreg free
 12164  0042A4  0012               	return		;funcret
 12165  0042A6                     __end_of_turnRight:
 12166                           	callstack 0
 12167                           
 12168 ;; *************** function _turnLeft *****************
 12169 ;; Defined at:
 12170 ;;		line 94 in file "dc_motor.c"
 12171 ;; Parameters:    Size  Location     Type
 12172 ;;  mL              2   33[COMRAM] PTR struct DC_motor
 12173 ;;		 -> main@motorL(10), 
 12174 ;;  mR              2   35[COMRAM] PTR struct DC_motor
 12175 ;;		 -> main@motorR(10), 
 12176 ;;  angle_left      1   37[COMRAM] unsigned char 
 12177 ;; Auto vars:     Size  Location     Type
 12178 ;;  i               2   47[COMRAM] unsigned int 
 12179 ;;  i               2   45[COMRAM] unsigned int 
 12180 ;;  i               2   43[COMRAM] unsigned int 
 12181 ;;  delay           2   49[COMRAM] unsigned int 
 12182 ;;  delay_180       2   41[COMRAM] unsigned int 
 12183 ;;  delay_135       2   39[COMRAM] unsigned int 
 12184 ;; Return value:  Size  Location     Type
 12185 ;;                  1    wreg      void 
 12186 ;; Registers used:
 12187 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12188 ;; Tracked objects:
 12189 ;;		On entry : 0/0
 12190 ;;		On exit  : 0/0
 12191 ;;		Unchanged: 0/0
 12192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12193 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12194 ;;      Locals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12195 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12196 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12197 ;;Total ram usage:       18 bytes
 12198 ;; Hardware stack levels used: 1
 12199 ;; Hardware stack levels required when called: 5
 12200 ;; This function calls:
 12201 ;;		_setMotorPWM
 12202 ;;		_stop
 12203 ;; This function is called by:
 12204 ;;		_action
 12205 ;;		_goback
 12206 ;;		_test_action
 12207 ;; This function uses a non-reentrant model
 12208 ;;
 12209                           
 12210                           	psect	text63
 12211  0042A6                     __ptext63:
 12212                           	callstack 0
 12213  0042A6                     _turnLeft:
 12214                           	callstack 24
 12215  0042A6                     
 12216                           ;dc_motor.c: 94: void turnLeft(struct DC_motor *mL, struct DC_motor *mR, unsigned char a
      +                          ngle_left);dc_motor.c: 95: {;dc_motor.c: 96:       mL->direction=1;
 12217  0042A6  EE20 F001          	lfsr	2,1
 12218  0042AA  5022               	movf	turnLeft@mL^0,w,c
 12219  0042AC  26D9               	addwf	fsr2l,f,c
 12220  0042AE  5023               	movf	(turnLeft@mL+1)^0,w,c
 12221  0042B0  22DA               	addwfc	fsr2h,f,c
 12222  0042B2  0E01               	movlw	1
 12223  0042B4  6EDF               	movwf	indf2,c
 12224                           
 12225                           ;dc_motor.c: 97:       mR->direction=1;
 12226  0042B6  EE20 F001          	lfsr	2,1
 12227  0042BA  5024               	movf	turnLeft@mR^0,w,c
 12228  0042BC  26D9               	addwf	fsr2l,f,c
 12229  0042BE  5025               	movf	(turnLeft@mR+1)^0,w,c
 12230  0042C0  22DA               	addwfc	fsr2h,f,c
 12231  0042C2  0E01               	movlw	1
 12232  0042C4  6EDF               	movwf	indf2,c
 12233                           
 12234                           ;dc_motor.c: 98:       while (mR->power <25){
 12235  0042C6  EF84  F021         	goto	l4434
 12236  0042CA                     l4426:
 12237                           
 12238                           ;dc_motor.c: 99:         mR->power += 5;
 12239  0042CA  C024  FFD9         	movff	turnLeft@mR,fsr2l
 12240  0042CE  C025  FFDA         	movff	turnLeft@mR+1,fsr2h
 12241  0042D2  0E05               	movlw	5
 12242  0042D4  26DF               	addwf	indf2,f,c
 12243                           
 12244                           ;dc_motor.c: 100:         mL->power = 0;
 12245  0042D6  C022  FFD9         	movff	turnLeft@mL,fsr2l
 12246  0042DA  C023  FFDA         	movff	turnLeft@mL+1,fsr2h
 12247  0042DE  0E00               	movlw	0
 12248  0042E0  6EDF               	movwf	indf2,c
 12249  0042E2                     
 12250                           ;dc_motor.c: 101:         setMotorPWM(mL);
 12251  0042E2  C022  F011         	movff	turnLeft@mL,setMotorPWM@m
 12252  0042E6  C023  F012         	movff	turnLeft@mL+1,setMotorPWM@m+1
 12253  0042EA  ECB8  F01A         	call	_setMotorPWM	;wreg free
 12254  0042EE                     
 12255                           ;dc_motor.c: 102:         setMotorPWM(mR);
 12256  0042EE  C024  F011         	movff	turnLeft@mR,setMotorPWM@m
 12257  0042F2  C025  F012         	movff	turnLeft@mR+1,setMotorPWM@m+1
 12258  0042F6  ECB8  F01A         	call	_setMotorPWM	;wreg free
 12259  0042FA                     
 12260                           ;dc_motor.c: 103:         _delay((unsigned long)((10)*(64000000/4000.0)));
 12261  0042FA  0ED0               	movlw	208
 12262  0042FC  6E27               	movwf	??_turnLeft^0,c
 12263  0042FE  0ECA               	movlw	202
 12264  004300                     u7027:
 12265  004300  2EE8               	decfsz	wreg,f,c
 12266  004302  D7FE               	bra	u7027
 12267  004304  2E27               	decfsz	??_turnLeft^0,f,c
 12268  004306  D7FC               	bra	u7027
 12269  004308                     l4434:
 12270                           
 12271                           ;dc_motor.c: 98:       while (mR->power <25){
 12272  004308  C024  FFD9         	movff	turnLeft@mR,fsr2l
 12273  00430C  C025  FFDA         	movff	turnLeft@mR+1,fsr2h
 12274  004310  0E18               	movlw	24
 12275  004312  64DF               	cpfsgt	indf2,c
 12276  004314  EF8E  F021         	goto	u4261
 12277  004318  EF90  F021         	goto	u4260
 12278  00431C                     u4261:
 12279  00431C  EF65  F021         	goto	l4426
 12280  004320                     u4260:
 12281  004320                     
 12282                           ;dc_motor.c: 105:     unsigned int delay = angle_left * SENSITIVITY;
 12283  004320  5026               	movf	turnLeft@angle_left^0,w,c
 12284  004322  0100               	movlb	0	; () banked
 12285  004324  03FC               	mulwf	_SENSITIVITY& (0+255),b
 12286  004326  CFF3 F032          	movff	prodl,turnLeft@delay
 12287  00432A  CFF4 F033          	movff	prodh,turnLeft@delay+1
 12288  00432E                     
 12289                           ; BSR set to: 0
 12290  00432E  0E0A               	movlw	10
 12291  004330  2432               	addwf	turnLeft@delay^0,w,c
 12292  004332  6E28               	movwf	turnLeft@delay_135^0,c
 12293  004334  0E00               	movlw	0
 12294  004336  2033               	addwfc	(turnLeft@delay+1)^0,w,c
 12295  004338  6E29               	movwf	(turnLeft@delay_135+1)^0,c
 12296  00433A                     
 12297                           ; BSR set to: 0
 12298  00433A  0E14               	movlw	20
 12299  00433C  2432               	addwf	turnLeft@delay^0,w,c
 12300  00433E  6E2A               	movwf	turnLeft@delay_180^0,c
 12301  004340  0E00               	movlw	0
 12302  004342  2033               	addwfc	(turnLeft@delay+1)^0,w,c
 12303  004344  6E2B               	movwf	(turnLeft@delay_180+1)^0,c
 12304  004346                     
 12305                           ; BSR set to: 0
 12306                           ;dc_motor.c: 108:     if (angle_left == 180){
 12307  004346  0EB4               	movlw	180
 12308  004348  1826               	xorwf	turnLeft@angle_left^0,w,c
 12309  00434A  A4D8               	btfss	status,2,c
 12310  00434C  EFAA  F021         	goto	u4271
 12311  004350  EFAC  F021         	goto	u4270
 12312  004354                     u4271:
 12313  004354  EFC7  F021         	goto	l4450
 12314  004358                     u4270:
 12315  004358                     
 12316                           ; BSR set to: 0
 12317                           ;dc_motor.c: 109:         for(unsigned int i = 0; i <delay_180; i++){_delay((unsigned lo
      +                          ng)((1)*(64000000/4000.0)));}
 12318  004358  0E00               	movlw	0
 12319  00435A  6E2D               	movwf	(turnLeft@i+1)^0,c
 12320  00435C  0E00               	movlw	0
 12321  00435E  6E2C               	movwf	turnLeft@i^0,c
 12322  004360  EFBC  F021         	goto	l338
 12323  004364                     l4446:
 12324  004364  0E15               	movlw	21
 12325  004366  6E27               	movwf	??_turnLeft^0,c
 12326  004368  0EC6               	movlw	198
 12327  00436A                     u7037:
 12328  00436A  2EE8               	decfsz	wreg,f,c
 12329  00436C  D7FE               	bra	u7037
 12330  00436E  2E27               	decfsz	??_turnLeft^0,f,c
 12331  004370  D7FC               	bra	u7037
 12332  004372  D000               	nop2	
 12333  004374  4A2C               	infsnz	turnLeft@i^0,f,c
 12334  004376  2A2D               	incf	(turnLeft@i+1)^0,f,c
 12335  004378                     l338:
 12336  004378  502A               	movf	turnLeft@delay_180^0,w,c
 12337  00437A  5C2C               	subwf	turnLeft@i^0,w,c
 12338  00437C  502B               	movf	(turnLeft@delay_180+1)^0,w,c
 12339  00437E  582D               	subwfb	(turnLeft@i+1)^0,w,c
 12340  004380  A0D8               	btfss	status,0,c
 12341  004382  EFC5  F021         	goto	u4281
 12342  004386  EFC7  F021         	goto	u4280
 12343  00438A                     u4281:
 12344  00438A  EFB2  F021         	goto	l4446
 12345  00438E                     u4280:
 12346  00438E                     l4450:
 12347                           
 12348                           ;dc_motor.c: 111:     if (angle_left == 135){
 12349  00438E  0E87               	movlw	135
 12350  004390  1826               	xorwf	turnLeft@angle_left^0,w,c
 12351  004392  A4D8               	btfss	status,2,c
 12352  004394  EFCE  F021         	goto	u4291
 12353  004398  EFD0  F021         	goto	u4290
 12354  00439C                     u4291:
 12355  00439C  EFED  F021         	goto	l4458
 12356  0043A0                     u4290:
 12357  0043A0                     
 12358                           ;dc_motor.c: 112:         for(unsigned int i = 0; i <delay_135; i++){_delay((unsigned lo
      +                          ng)((1)*(64000000/4000.0)));}
 12359  0043A0  0E00               	movlw	0
 12360  0043A2  6E2F               	movwf	(turnLeft@i_1420+1)^0,c
 12361  0043A4  0E00               	movlw	0
 12362  0043A6  6E2E               	movwf	turnLeft@i_1420^0,c
 12363  0043A8  EFE0  F021         	goto	l342
 12364  0043AC                     l4454:
 12365  0043AC  0E15               	movlw	21
 12366  0043AE  6E27               	movwf	??_turnLeft^0,c
 12367  0043B0  0EC6               	movlw	198
 12368  0043B2                     u7047:
 12369  0043B2  2EE8               	decfsz	wreg,f,c
 12370  0043B4  D7FE               	bra	u7047
 12371  0043B6  2E27               	decfsz	??_turnLeft^0,f,c
 12372  0043B8  D7FC               	bra	u7047
 12373  0043BA  D000               	nop2	
 12374  0043BC  4A2E               	infsnz	turnLeft@i_1420^0,f,c
 12375  0043BE  2A2F               	incf	(turnLeft@i_1420+1)^0,f,c
 12376  0043C0                     l342:
 12377  0043C0  5028               	movf	turnLeft@delay_135^0,w,c
 12378  0043C2  5C2E               	subwf	turnLeft@i_1420^0,w,c
 12379  0043C4  5029               	movf	(turnLeft@delay_135+1)^0,w,c
 12380  0043C6  582F               	subwfb	(turnLeft@i_1420+1)^0,w,c
 12381  0043C8  A0D8               	btfss	status,0,c
 12382  0043CA  EFE9  F021         	goto	u4301
 12383  0043CE  EFEB  F021         	goto	u4300
 12384  0043D2                     u4301:
 12385  0043D2  EFD6  F021         	goto	l4454
 12386  0043D6                     u4300:
 12387  0043D6  EF08  F022         	goto	l4464
 12388  0043DA                     l4458:
 12389                           
 12390                           ;dc_motor.c: 115:         for(unsigned int i = 0; i < delay; i++){_delay((unsigned long)
      +                          ((1)*(64000000/4000.0)));}
 12391  0043DA  0E00               	movlw	0
 12392  0043DC  6E31               	movwf	(turnLeft@i_1421+1)^0,c
 12393  0043DE  0E00               	movlw	0
 12394  0043E0  6E30               	movwf	turnLeft@i_1421^0,c
 12395  0043E2  EFFD  F021         	goto	l346
 12396  0043E6                     l4460:
 12397  0043E6  0E15               	movlw	21
 12398  0043E8  6E27               	movwf	??_turnLeft^0,c
 12399  0043EA  0EC6               	movlw	198
 12400  0043EC                     u7057:
 12401  0043EC  2EE8               	decfsz	wreg,f,c
 12402  0043EE  D7FE               	bra	u7057
 12403  0043F0  2E27               	decfsz	??_turnLeft^0,f,c
 12404  0043F2  D7FC               	bra	u7057
 12405  0043F4  D000               	nop2	
 12406  0043F6  4A30               	infsnz	turnLeft@i_1421^0,f,c
 12407  0043F8  2A31               	incf	(turnLeft@i_1421+1)^0,f,c
 12408  0043FA                     l346:
 12409  0043FA  5032               	movf	turnLeft@delay^0,w,c
 12410  0043FC  5C30               	subwf	turnLeft@i_1421^0,w,c
 12411  0043FE  5033               	movf	(turnLeft@delay+1)^0,w,c
 12412  004400  5831               	subwfb	(turnLeft@i_1421+1)^0,w,c
 12413  004402  A0D8               	btfss	status,0,c
 12414  004404  EF06  F022         	goto	u4311
 12415  004408  EF08  F022         	goto	u4310
 12416  00440C                     u4311:
 12417  00440C  EFF3  F021         	goto	l4460
 12418  004410                     u4310:
 12419  004410                     l4464:
 12420                           
 12421                           ;dc_motor.c: 117:     stop(mL,mR);
 12422  004410  C022  F01C         	movff	turnLeft@mL,stop@mL
 12423  004414  C023  F01D         	movff	turnLeft@mL+1,stop@mL+1
 12424  004418  C024  F01E         	movff	turnLeft@mR,stop@mR
 12425  00441C  C025  F01F         	movff	turnLeft@mR+1,stop@mR+1
 12426  004420  ECB4  F026         	call	_stop	;wreg free
 12427  004424  0012               	return		;funcret
 12428  004426                     __end_of_turnLeft:
 12429                           	callstack 0
 12430                           
 12431 ;; *************** function _reverse_square *****************
 12432 ;; Defined at:
 12433 ;;		line 188 in file "dc_motor.c"
 12434 ;; Parameters:    Size  Location     Type
 12435 ;;  mL              2   39[COMRAM] PTR struct DC_motor
 12436 ;;		 -> main@motorL(10), 
 12437 ;;  mR              2   41[COMRAM] PTR struct DC_motor
 12438 ;;		 -> main@motorR(10), 
 12439 ;; Auto vars:     Size  Location     Type
 12440 ;;		None
 12441 ;; Return value:  Size  Location     Type
 12442 ;;                  1    wreg      void 
 12443 ;; Registers used:
 12444 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12445 ;; Tracked objects:
 12446 ;;		On entry : 0/0
 12447 ;;		On exit  : 0/0
 12448 ;;		Unchanged: 0/0
 12449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12450 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12451 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12452 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12453 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12454 ;;Total ram usage:        6 bytes
 12455 ;; Hardware stack levels used: 1
 12456 ;; Hardware stack levels required when called: 6
 12457 ;; This function calls:
 12458 ;;		_fullSpeedBack
 12459 ;;		_stop
 12460 ;; This function is called by:
 12461 ;;		_action
 12462 ;;		_goback
 12463 ;; This function uses a non-reentrant model
 12464 ;;
 12465                           
 12466                           	psect	text64
 12467  00541E                     __ptext64:
 12468                           	callstack 0
 12469  00541E                     _reverse_square:
 12470                           	callstack 23
 12471  00541E                     
 12472                           ;dc_motor.c: 188: void reverse_square(struct DC_motor *mL, struct DC_motor *mR);dc_motor
      +                          .c: 189: { fullSpeedBack(mL, mR);
 12473  00541E  C028  F022         	movff	reverse_square@mL,fullSpeedBack@mL
 12474  005422  C029  F023         	movff	reverse_square@mL+1,fullSpeedBack@mL+1
 12475  005426  C02A  F024         	movff	reverse_square@mR,fullSpeedBack@mR
 12476  00542A  C02B  F025         	movff	reverse_square@mR+1,fullSpeedBack@mR+1
 12477  00542E  EC54  F026         	call	_fullSpeedBack	;wreg free
 12478  005432                     
 12479                           ;dc_motor.c: 190:     _delay((unsigned long)((1000)*(64000000/4000.0)));
 12480  005432  0E52               	movlw	82
 12481  005434  6E2D               	movwf	(??_reverse_square+1)^0,c
 12482  005436  0E2B               	movlw	43
 12483  005438  6E2C               	movwf	??_reverse_square^0,c
 12484  00543A  0E00               	movlw	0
 12485  00543C                     u7067:
 12486  00543C  2EE8               	decfsz	wreg,f,c
 12487  00543E  D7FE               	bra	u7067
 12488  005440  2E2C               	decfsz	??_reverse_square^0,f,c
 12489  005442  D7FC               	bra	u7067
 12490  005444  2E2D               	decfsz	(??_reverse_square+1)^0,f,c
 12491  005446  D7FA               	bra	u7067
 12492  005448  D000               	nop2	
 12493  00544A                     
 12494                           ;dc_motor.c: 191:     stop(mL,mR);
 12495  00544A  C028  F01C         	movff	reverse_square@mL,stop@mL
 12496  00544E  C029  F01D         	movff	reverse_square@mL+1,stop@mL+1
 12497  005452  C02A  F01E         	movff	reverse_square@mR,stop@mR
 12498  005456  C02B  F01F         	movff	reverse_square@mR+1,stop@mR+1
 12499  00545A  ECB4  F026         	call	_stop	;wreg free
 12500  00545E  0012               	return		;funcret
 12501  005460                     __end_of_reverse_square:
 12502                           	callstack 0
 12503                           
 12504 ;; *************** function _fullSpeedBack *****************
 12505 ;; Defined at:
 12506 ;;		line 167 in file "dc_motor.c"
 12507 ;; Parameters:    Size  Location     Type
 12508 ;;  mL              2   33[COMRAM] PTR struct DC_motor
 12509 ;;		 -> main@motorL(10), 
 12510 ;;  mR              2   35[COMRAM] PTR struct DC_motor
 12511 ;;		 -> main@motorR(10), 
 12512 ;; Auto vars:     Size  Location     Type
 12513 ;;		None
 12514 ;; Return value:  Size  Location     Type
 12515 ;;                  1    wreg      void 
 12516 ;; Registers used:
 12517 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12518 ;; Tracked objects:
 12519 ;;		On entry : 0/0
 12520 ;;		On exit  : 0/0
 12521 ;;		Unchanged: 0/0
 12522 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12523 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12524 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12525 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12526 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12527 ;;Total ram usage:        6 bytes
 12528 ;; Hardware stack levels used: 1
 12529 ;; Hardware stack levels required when called: 5
 12530 ;; This function calls:
 12531 ;;		_setMotorPWM
 12532 ;;		_stop
 12533 ;; This function is called by:
 12534 ;;		_short_reverse
 12535 ;;		_reverse_square
 12536 ;; This function uses a non-reentrant model
 12537 ;;
 12538                           
 12539                           	psect	text65
 12540  004CA8                     __ptext65:
 12541                           	callstack 0
 12542  004CA8                     _fullSpeedBack:
 12543                           	callstack 23
 12544  004CA8                     
 12545                           ;dc_motor.c: 167: void fullSpeedBack(struct DC_motor *mL, struct DC_motor *mR);dc_motor.
      +                          c: 168: {;dc_motor.c: 169:     mL->direction=0;
 12546  004CA8  EE20 F001          	lfsr	2,1
 12547  004CAC  5022               	movf	fullSpeedBack@mL^0,w,c
 12548  004CAE  26D9               	addwf	fsr2l,f,c
 12549  004CB0  5023               	movf	(fullSpeedBack@mL+1)^0,w,c
 12550  004CB2  22DA               	addwfc	fsr2h,f,c
 12551  004CB4  0E00               	movlw	0
 12552  004CB6  6EDF               	movwf	indf2,c
 12553                           
 12554                           ;dc_motor.c: 170:     mR->direction=0;
 12555  004CB8  EE20 F001          	lfsr	2,1
 12556  004CBC  5024               	movf	fullSpeedBack@mR^0,w,c
 12557  004CBE  26D9               	addwf	fsr2l,f,c
 12558  004CC0  5025               	movf	(fullSpeedBack@mR+1)^0,w,c
 12559  004CC2  22DA               	addwfc	fsr2h,f,c
 12560  004CC4  0E00               	movlw	0
 12561  004CC6  6EDF               	movwf	indf2,c
 12562                           
 12563                           ;dc_motor.c: 171:     while (mL->power<50 && mR->power<50){
 12564  004CC8  EF85  F026         	goto	l4278
 12565  004CCC                     l4270:
 12566                           
 12567                           ;dc_motor.c: 172:         mL->power += 10;
 12568  004CCC  C022  FFD9         	movff	fullSpeedBack@mL,fsr2l
 12569  004CD0  C023  FFDA         	movff	fullSpeedBack@mL+1,fsr2h
 12570  004CD4  0E0A               	movlw	10
 12571  004CD6  26DF               	addwf	indf2,f,c
 12572                           
 12573                           ;dc_motor.c: 173:         mR->power += 10;
 12574  004CD8  C024  FFD9         	movff	fullSpeedBack@mR,fsr2l
 12575  004CDC  C025  FFDA         	movff	fullSpeedBack@mR+1,fsr2h
 12576  004CE0  0E0A               	movlw	10
 12577  004CE2  26DF               	addwf	indf2,f,c
 12578  004CE4                     
 12579                           ;dc_motor.c: 174:         setMotorPWM(mL);
 12580  004CE4  C022  F011         	movff	fullSpeedBack@mL,setMotorPWM@m
 12581  004CE8  C023  F012         	movff	fullSpeedBack@mL+1,setMotorPWM@m+1
 12582  004CEC  ECB8  F01A         	call	_setMotorPWM	;wreg free
 12583  004CF0                     
 12584                           ;dc_motor.c: 175:         setMotorPWM(mR);
 12585  004CF0  C024  F011         	movff	fullSpeedBack@mR,setMotorPWM@m
 12586  004CF4  C025  F012         	movff	fullSpeedBack@mR+1,setMotorPWM@m+1
 12587  004CF8  ECB8  F01A         	call	_setMotorPWM	;wreg free
 12588  004CFC                     
 12589                           ;dc_motor.c: 176:         _delay((unsigned long)((10)*(64000000/4000.0)));
 12590  004CFC  0ED0               	movlw	208
 12591  004CFE  6E26               	movwf	??_fullSpeedBack^0,c
 12592  004D00  0ECA               	movlw	202
 12593  004D02                     u7077:
 12594  004D02  2EE8               	decfsz	wreg,f,c
 12595  004D04  D7FE               	bra	u7077
 12596  004D06  2E26               	decfsz	??_fullSpeedBack^0,f,c
 12597  004D08  D7FC               	bra	u7077
 12598  004D0A                     l4278:
 12599                           
 12600                           ;dc_motor.c: 171:     while (mL->power<50 && mR->power<50){
 12601  004D0A  C022  FFD9         	movff	fullSpeedBack@mL,fsr2l
 12602  004D0E  C023  FFDA         	movff	fullSpeedBack@mL+1,fsr2h
 12603  004D12  0E32               	movlw	50
 12604  004D14  60DF               	cpfslt	indf2,c
 12605  004D16  EF8F  F026         	goto	u4031
 12606  004D1A  EF91  F026         	goto	u4030
 12607  004D1E                     u4031:
 12608  004D1E  EF9D  F026         	goto	l4282
 12609  004D22                     u4030:
 12610  004D22  C024  FFD9         	movff	fullSpeedBack@mR,fsr2l
 12611  004D26  C025  FFDA         	movff	fullSpeedBack@mR+1,fsr2h
 12612  004D2A  0E31               	movlw	49
 12613  004D2C  64DF               	cpfsgt	indf2,c
 12614  004D2E  EF9B  F026         	goto	u4041
 12615  004D32  EF9D  F026         	goto	u4040
 12616  004D36                     u4041:
 12617  004D36  EF66  F026         	goto	l4270
 12618  004D3A                     u4040:
 12619  004D3A                     l4282:
 12620                           
 12621                           ;dc_motor.c: 178:     _delay((unsigned long)((500)*(64000000/4000.0)));
 12622  004D3A  0E29               	movlw	41
 12623  004D3C  6E27               	movwf	(??_fullSpeedBack+1)^0,c
 12624  004D3E  0E96               	movlw	150
 12625  004D40  6E26               	movwf	??_fullSpeedBack^0,c
 12626  004D42  0E7F               	movlw	127
 12627  004D44                     u7087:
 12628  004D44  2EE8               	decfsz	wreg,f,c
 12629  004D46  D7FE               	bra	u7087
 12630  004D48  2E26               	decfsz	??_fullSpeedBack^0,f,c
 12631  004D4A  D7FC               	bra	u7087
 12632  004D4C  2E27               	decfsz	(??_fullSpeedBack+1)^0,f,c
 12633  004D4E  D7FA               	bra	u7087
 12634  004D50  F000               	nop	
 12635  004D52                     
 12636                           ;dc_motor.c: 179:     stop(mL,mR);
 12637  004D52  C022  F01C         	movff	fullSpeedBack@mL,stop@mL
 12638  004D56  C023  F01D         	movff	fullSpeedBack@mL+1,stop@mL+1
 12639  004D5A  C024  F01E         	movff	fullSpeedBack@mR,stop@mR
 12640  004D5E  C025  F01F         	movff	fullSpeedBack@mR+1,stop@mR+1
 12641  004D62  ECB4  F026         	call	_stop	;wreg free
 12642  004D66  0012               	return		;funcret
 12643  004D68                     __end_of_fullSpeedBack:
 12644                           	callstack 0
 12645                           
 12646 ;; *************** function _stop *****************
 12647 ;; Defined at:
 12648 ;;		line 81 in file "dc_motor.c"
 12649 ;; Parameters:    Size  Location     Type
 12650 ;;  mL              2   27[COMRAM] PTR struct DC_motor
 12651 ;;		 -> main@motorL(10), 
 12652 ;;  mR              2   29[COMRAM] PTR struct DC_motor
 12653 ;;		 -> main@motorR(10), 
 12654 ;; Auto vars:     Size  Location     Type
 12655 ;;		None
 12656 ;; Return value:  Size  Location     Type
 12657 ;;                  1    wreg      void 
 12658 ;; Registers used:
 12659 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12660 ;; Tracked objects:
 12661 ;;		On entry : 0/0
 12662 ;;		On exit  : 0/0
 12663 ;;		Unchanged: 0/0
 12664 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12665 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12666 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12667 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12668 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12669 ;;Total ram usage:        6 bytes
 12670 ;; Hardware stack levels used: 1
 12671 ;; Hardware stack levels required when called: 4
 12672 ;; This function calls:
 12673 ;;		_setMotorPWM
 12674 ;; This function is called by:
 12675 ;;		_turnLeft
 12676 ;;		_turnRight
 12677 ;;		_fullSpeedBack
 12678 ;;		_short_reverse
 12679 ;;		_reverse_square
 12680 ;;		_main
 12681 ;;		_short_burst
 12682 ;;		_action
 12683 ;;		_goback
 12684 ;;		_fullSpeedAhead_test
 12685 ;; This function uses a non-reentrant model
 12686 ;;
 12687                           
 12688                           	psect	text66
 12689  004D68                     __ptext66:
 12690                           	callstack 0
 12691  004D68                     _stop:
 12692                           	callstack 26
 12693  004D68                     
 12694                           ;dc_motor.c: 81: void stop(struct DC_motor *mL, struct DC_motor *mR);dc_motor.c: 82: {;d
      +                          c_motor.c: 83:     while (mL->power >0 || mR->power >0){
 12695  004D68  EFED  F026         	goto	l4030
 12696  004D6C                     l4016:
 12697                           
 12698                           ;dc_motor.c: 84:         if (mL->power !=0){mL->power -= 5;}
 12699  004D6C  C01C  FFD9         	movff	stop@mL,fsr2l
 12700  004D70  C01D  FFDA         	movff	stop@mL+1,fsr2h
 12701  004D74  50DF               	movf	indf2,w,c
 12702  004D76  B4D8               	btfsc	status,2,c
 12703  004D78  EFC0  F026         	goto	u3701
 12704  004D7C  EFC2  F026         	goto	u3700
 12705  004D80                     u3701:
 12706  004D80  EFC8  F026         	goto	l4020
 12707  004D84                     u3700:
 12708  004D84  C01C  FFD9         	movff	stop@mL,fsr2l
 12709  004D88  C01D  FFDA         	movff	stop@mL+1,fsr2h
 12710  004D8C  0E05               	movlw	5
 12711  004D8E  5EDF               	subwf	indf2,f,c
 12712  004D90                     l4020:
 12713                           
 12714                           ;dc_motor.c: 85:         if (mR->power !=0){mR->power -= 5;}
 12715  004D90  C01E  FFD9         	movff	stop@mR,fsr2l
 12716  004D94  C01F  FFDA         	movff	stop@mR+1,fsr2h
 12717  004D98  50DF               	movf	indf2,w,c
 12718  004D9A  B4D8               	btfsc	status,2,c
 12719  004D9C  EFD2  F026         	goto	u3711
 12720  004DA0  EFD4  F026         	goto	u3710
 12721  004DA4                     u3711:
 12722  004DA4  EFDA  F026         	goto	l4024
 12723  004DA8                     u3710:
 12724  004DA8  C01E  FFD9         	movff	stop@mR,fsr2l
 12725  004DAC  C01F  FFDA         	movff	stop@mR+1,fsr2h
 12726  004DB0  0E05               	movlw	5
 12727  004DB2  5EDF               	subwf	indf2,f,c
 12728  004DB4                     l4024:
 12729                           
 12730                           ;dc_motor.c: 86:         setMotorPWM(mL);
 12731  004DB4  C01C  F011         	movff	stop@mL,setMotorPWM@m
 12732  004DB8  C01D  F012         	movff	stop@mL+1,setMotorPWM@m+1
 12733  004DBC  ECB8  F01A         	call	_setMotorPWM	;wreg free
 12734  004DC0                     
 12735                           ;dc_motor.c: 87:         setMotorPWM(mR);
 12736  004DC0  C01E  F011         	movff	stop@mR,setMotorPWM@m
 12737  004DC4  C01F  F012         	movff	stop@mR+1,setMotorPWM@m+1
 12738  004DC8  ECB8  F01A         	call	_setMotorPWM	;wreg free
 12739  004DCC                     
 12740                           ;dc_motor.c: 88:         _delay((unsigned long)((10)*(64000000/4000.0)));
 12741  004DCC  0ED0               	movlw	208
 12742  004DCE  6E20               	movwf	??_stop^0,c
 12743  004DD0  0ECA               	movlw	202
 12744  004DD2                     u7097:
 12745  004DD2  2EE8               	decfsz	wreg,f,c
 12746  004DD4  D7FE               	bra	u7097
 12747  004DD6  2E20               	decfsz	??_stop^0,f,c
 12748  004DD8  D7FC               	bra	u7097
 12749  004DDA                     l4030:
 12750                           
 12751                           ;dc_motor.c: 83:     while (mL->power >0 || mR->power >0){
 12752  004DDA  C01C  FFD9         	movff	stop@mL,fsr2l
 12753  004DDE  C01D  FFDA         	movff	stop@mL+1,fsr2h
 12754  004DE2  50DF               	movf	indf2,w,c
 12755  004DE4  A4D8               	btfss	status,2,c
 12756  004DE6  EFF7  F026         	goto	u3721
 12757  004DEA  EFF9  F026         	goto	u3720
 12758  004DEE                     u3721:
 12759  004DEE  EFB6  F026         	goto	l4016
 12760  004DF2                     u3720:
 12761  004DF2  C01E  FFD9         	movff	stop@mR,fsr2l
 12762  004DF6  C01F  FFDA         	movff	stop@mR+1,fsr2h
 12763  004DFA  50DF               	movf	indf2,w,c
 12764  004DFC  A4D8               	btfss	status,2,c
 12765  004DFE  EF03  F027         	goto	u3731
 12766  004E02  EF05  F027         	goto	u3730
 12767  004E06                     u3731:
 12768  004E06  EFB6  F026         	goto	l4016
 12769  004E0A                     u3730:
 12770  004E0A                     
 12771                           ;dc_motor.c: 90:     _delay((unsigned long)((100)*(64000000/4000.0)));
 12772  004E0A  0E09               	movlw	9
 12773  004E0C  6E21               	movwf	(??_stop+1)^0,c
 12774  004E0E  0E1E               	movlw	30
 12775  004E10  6E20               	movwf	??_stop^0,c
 12776  004E12  0EE4               	movlw	228
 12777  004E14                     u7107:
 12778  004E14  2EE8               	decfsz	wreg,f,c
 12779  004E16  D7FE               	bra	u7107
 12780  004E18  2E20               	decfsz	??_stop^0,f,c
 12781  004E1A  D7FC               	bra	u7107
 12782  004E1C  2E21               	decfsz	(??_stop+1)^0,f,c
 12783  004E1E  D7FA               	bra	u7107
 12784  004E20  D000               	nop2	
 12785  004E22  0012               	return		;funcret
 12786  004E24                     __end_of_stop:
 12787                           	callstack 0
 12788                           
 12789 ;; *************** function _fullSpeedAhead *****************
 12790 ;; Defined at:
 12791 ;;		line 148 in file "dc_motor.c"
 12792 ;; Parameters:    Size  Location     Type
 12793 ;;  mL              2   27[COMRAM] PTR struct DC_motor
 12794 ;;		 -> main@motorL(10), 
 12795 ;;  mR              2   29[COMRAM] PTR struct DC_motor
 12796 ;;		 -> main@motorR(10), 
 12797 ;; Auto vars:     Size  Location     Type
 12798 ;;		None
 12799 ;; Return value:  Size  Location     Type
 12800 ;;                  1    wreg      void 
 12801 ;; Registers used:
 12802 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12803 ;; Tracked objects:
 12804 ;;		On entry : 0/0
 12805 ;;		On exit  : 0/0
 12806 ;;		Unchanged: 0/0
 12807 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12808 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12809 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12810 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12811 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12812 ;;Total ram usage:        5 bytes
 12813 ;; Hardware stack levels used: 1
 12814 ;; Hardware stack levels required when called: 4
 12815 ;; This function calls:
 12816 ;;		_setMotorPWM
 12817 ;; This function is called by:
 12818 ;;		_main
 12819 ;;		_short_burst
 12820 ;;		_goback
 12821 ;;		_fullSpeedAhead_test
 12822 ;; This function uses a non-reentrant model
 12823 ;;
 12824                           
 12825                           	psect	text67
 12826  004ED4                     __ptext67:
 12827                           	callstack 0
 12828  004ED4                     _fullSpeedAhead:
 12829                           	callstack 25
 12830  004ED4                     
 12831                           ;dc_motor.c: 148: void fullSpeedAhead(struct DC_motor *mL, struct DC_motor *mR);dc_motor
      +                          .c: 149: {;dc_motor.c: 150:     mL->direction=1;
 12832  004ED4  EE20 F001          	lfsr	2,1
 12833  004ED8  501C               	movf	fullSpeedAhead@mL^0,w,c
 12834  004EDA  26D9               	addwf	fsr2l,f,c
 12835  004EDC  501D               	movf	(fullSpeedAhead@mL+1)^0,w,c
 12836  004EDE  22DA               	addwfc	fsr2h,f,c
 12837  004EE0  0E01               	movlw	1
 12838  004EE2  6EDF               	movwf	indf2,c
 12839                           
 12840                           ;dc_motor.c: 151:     mR->direction=1;
 12841  004EE4  EE20 F001          	lfsr	2,1
 12842  004EE8  501E               	movf	fullSpeedAhead@mR^0,w,c
 12843  004EEA  26D9               	addwf	fsr2l,f,c
 12844  004EEC  501F               	movf	(fullSpeedAhead@mR+1)^0,w,c
 12845  004EEE  22DA               	addwfc	fsr2h,f,c
 12846  004EF0  0E01               	movlw	1
 12847  004EF2  6EDF               	movwf	indf2,c
 12848                           
 12849                           ;dc_motor.c: 152:     while (mL->power<20 && mR->power<20){
 12850  004EF4  EF9B  F027         	goto	l4518
 12851  004EF8                     l4510:
 12852                           
 12853                           ;dc_motor.c: 153:         mL->power += 10;
 12854  004EF8  C01C  FFD9         	movff	fullSpeedAhead@mL,fsr2l
 12855  004EFC  C01D  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
 12856  004F00  0E0A               	movlw	10
 12857  004F02  26DF               	addwf	indf2,f,c
 12858                           
 12859                           ;dc_motor.c: 154:         mR->power += 10;
 12860  004F04  C01E  FFD9         	movff	fullSpeedAhead@mR,fsr2l
 12861  004F08  C01F  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
 12862  004F0C  0E0A               	movlw	10
 12863  004F0E  26DF               	addwf	indf2,f,c
 12864  004F10                     
 12865                           ;dc_motor.c: 155:         setMotorPWM(mL);
 12866  004F10  C01C  F011         	movff	fullSpeedAhead@mL,setMotorPWM@m
 12867  004F14  C01D  F012         	movff	fullSpeedAhead@mL+1,setMotorPWM@m+1
 12868  004F18  ECB8  F01A         	call	_setMotorPWM	;wreg free
 12869  004F1C                     
 12870                           ;dc_motor.c: 156:         setMotorPWM(mR);
 12871  004F1C  C01E  F011         	movff	fullSpeedAhead@mR,setMotorPWM@m
 12872  004F20  C01F  F012         	movff	fullSpeedAhead@mR+1,setMotorPWM@m+1
 12873  004F24  ECB8  F01A         	call	_setMotorPWM	;wreg free
 12874  004F28                     
 12875                           ;dc_motor.c: 157:         _delay((unsigned long)((10)*(64000000/4000.0)));
 12876  004F28  0ED0               	movlw	208
 12877  004F2A  6E20               	movwf	??_fullSpeedAhead^0,c
 12878  004F2C  0ECA               	movlw	202
 12879  004F2E                     u7117:
 12880  004F2E  2EE8               	decfsz	wreg,f,c
 12881  004F30  D7FE               	bra	u7117
 12882  004F32  2E20               	decfsz	??_fullSpeedAhead^0,f,c
 12883  004F34  D7FC               	bra	u7117
 12884  004F36                     l4518:
 12885                           
 12886                           ;dc_motor.c: 152:     while (mL->power<20 && mR->power<20){
 12887  004F36  C01C  FFD9         	movff	fullSpeedAhead@mL,fsr2l
 12888  004F3A  C01D  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
 12889  004F3E  0E14               	movlw	20
 12890  004F40  60DF               	cpfslt	indf2,c
 12891  004F42  EFA5  F027         	goto	u4381
 12892  004F46  EFA7  F027         	goto	u4380
 12893  004F4A                     u4381:
 12894  004F4A  EFB3  F027         	goto	l375
 12895  004F4E                     u4380:
 12896  004F4E  C01E  FFD9         	movff	fullSpeedAhead@mR,fsr2l
 12897  004F52  C01F  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
 12898  004F56  0E13               	movlw	19
 12899  004F58  64DF               	cpfsgt	indf2,c
 12900  004F5A  EFB1  F027         	goto	u4391
 12901  004F5E  EFB3  F027         	goto	u4390
 12902  004F62                     u4391:
 12903  004F62  EF7C  F027         	goto	l4510
 12904  004F66                     u4390:
 12905  004F66                     l375:
 12906  004F66  0012               	return		;funcret
 12907  004F68                     __end_of_fullSpeedAhead:
 12908                           	callstack 0
 12909                           
 12910 ;; *************** function _setMotorPWM *****************
 12911 ;; Defined at:
 12912 ;;		line 58 in file "dc_motor.c"
 12913 ;; Parameters:    Size  Location     Type
 12914 ;;  m               2   16[COMRAM] PTR struct DC_motor
 12915 ;;		 -> main@motorR(10), main@motorL(10), 
 12916 ;; Auto vars:     Size  Location     Type
 12917 ;;  PWMduty         2   25[COMRAM] int 
 12918 ;; Return value:  Size  Location     Type
 12919 ;;                  1    wreg      void 
 12920 ;; Registers used:
 12921 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12922 ;; Tracked objects:
 12923 ;;		On entry : 0/0
 12924 ;;		On exit  : 0/0
 12925 ;;		Unchanged: 0/0
 12926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12927 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12928 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12929 ;;      Temps:          7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12930 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12931 ;;Total ram usage:       11 bytes
 12932 ;; Hardware stack levels used: 1
 12933 ;; Hardware stack levels required when called: 3
 12934 ;; This function calls:
 12935 ;;		___awdiv
 12936 ;;		___wmul
 12937 ;; This function is called by:
 12938 ;;		_stop
 12939 ;;		_turnLeft
 12940 ;;		_turnRight
 12941 ;;		_fullSpeedAhead
 12942 ;;		_fullSpeedBack
 12943 ;; This function uses a non-reentrant model
 12944 ;;
 12945                           
 12946                           	psect	text68
 12947  003570                     __ptext68:
 12948                           	callstack 0
 12949  003570                     _setMotorPWM:
 12950                           	callstack 26
 12951  003570                     
 12952                           ;dc_motor.c: 58: void setMotorPWM(struct DC_motor *m);dc_motor.c: 59: {;dc_motor.c: 60: 
      +                           int PWMduty;;dc_motor.c: 62:  if (m->direction){
 12953  003570  EE20 F001          	lfsr	2,1
 12954  003574  5011               	movf	setMotorPWM@m^0,w,c
 12955  003576  26D9               	addwf	fsr2l,f,c
 12956  003578  5012               	movf	(setMotorPWM@m+1)^0,w,c
 12957  00357A  22DA               	addwfc	fsr2h,f,c
 12958  00357C  50DF               	movf	indf2,w,c
 12959  00357E  B4D8               	btfsc	status,2,c
 12960  003580  EFC4  F01A         	goto	u3101
 12961  003584  EFC6  F01A         	goto	u3100
 12962  003588                     u3101:
 12963  003588  EFF7  F01A         	goto	l3710
 12964  00358C                     u3100:
 12965  00358C                     
 12966                           ;dc_motor.c: 64:   PWMduty=m->PWMperiod - ((int)(m->power)*(m->PWMperiod))/100;
 12967  00358C  C011  FFD9         	movff	setMotorPWM@m,fsr2l
 12968  003590  C012  FFDA         	movff	setMotorPWM@m+1,fsr2h
 12969  003594  50DF               	movf	indf2,w,c
 12970  003596  6E13               	movwf	??_setMotorPWM^0,c
 12971  003598  5013               	movf	??_setMotorPWM^0,w,c
 12972  00359A  6E03               	movwf	___wmul@multiplier^0,c
 12973  00359C  6A04               	clrf	(___wmul@multiplier+1)^0,c
 12974  00359E  EE20 F007          	lfsr	2,7
 12975  0035A2  5011               	movf	setMotorPWM@m^0,w,c
 12976  0035A4  26D9               	addwf	fsr2l,f,c
 12977  0035A6  5012               	movf	(setMotorPWM@m+1)^0,w,c
 12978  0035A8  22DA               	addwfc	fsr2h,f,c
 12979  0035AA  CFDE F005          	movff	postinc2,___wmul@multiplicand
 12980  0035AE  CFDD F006          	movff	postdec2,___wmul@multiplicand+1
 12981  0035B2  EC33  F02B         	call	___wmul	;wreg free
 12982  0035B6  C003  F009         	movff	?___wmul,___awdiv@dividend
 12983  0035BA  C004  F00A         	movff	?___wmul+1,___awdiv@dividend+1
 12984  0035BE  0E00               	movlw	0
 12985  0035C0  6E0C               	movwf	(___awdiv@divisor+1)^0,c
 12986  0035C2  0E64               	movlw	100
 12987  0035C4  6E0B               	movwf	___awdiv@divisor^0,c
 12988  0035C6  ECF2  F025         	call	___awdiv	;wreg free
 12989  0035CA  EE20 F007          	lfsr	2,7
 12990  0035CE  5011               	movf	setMotorPWM@m^0,w,c
 12991  0035D0  26D9               	addwf	fsr2l,f,c
 12992  0035D2  5012               	movf	(setMotorPWM@m+1)^0,w,c
 12993  0035D4  22DA               	addwfc	fsr2h,f,c
 12994  0035D6  CFDE F014          	movff	postinc2,??_setMotorPWM+1
 12995  0035DA  CFDD F015          	movff	postdec2,??_setMotorPWM+2
 12996  0035DE  5009               	movf	?___awdiv^0,w,c
 12997  0035E0  5C14               	subwf	(??_setMotorPWM+1)^0,w,c
 12998  0035E2  6E1A               	movwf	setMotorPWM@PWMduty^0,c
 12999  0035E4  500A               	movf	(?___awdiv+1)^0,w,c
 13000  0035E6  5815               	subwfb	(??_setMotorPWM+2)^0,w,c
 13001  0035E8  6E1B               	movwf	(setMotorPWM@PWMduty+1)^0,c
 13002                           
 13003                           ;dc_motor.c: 65:  }
 13004  0035EA  EF1A  F01B         	goto	l3712
 13005  0035EE                     l3710:
 13006                           
 13007                           ;dc_motor.c: 68:   PWMduty=((int)(m->power)*(m->PWMperiod))/100;
 13008  0035EE  C011  FFD9         	movff	setMotorPWM@m,fsr2l
 13009  0035F2  C012  FFDA         	movff	setMotorPWM@m+1,fsr2h
 13010  0035F6  50DF               	movf	indf2,w,c
 13011  0035F8  6E13               	movwf	??_setMotorPWM^0,c
 13012  0035FA  5013               	movf	??_setMotorPWM^0,w,c
 13013  0035FC  6E03               	movwf	___wmul@multiplier^0,c
 13014  0035FE  6A04               	clrf	(___wmul@multiplier+1)^0,c
 13015  003600  EE20 F007          	lfsr	2,7
 13016  003604  5011               	movf	setMotorPWM@m^0,w,c
 13017  003606  26D9               	addwf	fsr2l,f,c
 13018  003608  5012               	movf	(setMotorPWM@m+1)^0,w,c
 13019  00360A  22DA               	addwfc	fsr2h,f,c
 13020  00360C  CFDE F005          	movff	postinc2,___wmul@multiplicand
 13021  003610  CFDD F006          	movff	postdec2,___wmul@multiplicand+1
 13022  003614  EC33  F02B         	call	___wmul	;wreg free
 13023  003618  C003  F009         	movff	?___wmul,___awdiv@dividend
 13024  00361C  C004  F00A         	movff	?___wmul+1,___awdiv@dividend+1
 13025  003620  0E00               	movlw	0
 13026  003622  6E0C               	movwf	(___awdiv@divisor+1)^0,c
 13027  003624  0E64               	movlw	100
 13028  003626  6E0B               	movwf	___awdiv@divisor^0,c
 13029  003628  ECF2  F025         	call	___awdiv	;wreg free
 13030  00362C  C009  F01A         	movff	?___awdiv,setMotorPWM@PWMduty
 13031  003630  C00A  F01B         	movff	?___awdiv+1,setMotorPWM@PWMduty+1
 13032  003634                     l3712:
 13033                           
 13034                           ;dc_motor.c: 71:  *(m->dutyHighByte) = PWMduty;
 13035  003634  EE20 F002          	lfsr	2,2
 13036  003638  5011               	movf	setMotorPWM@m^0,w,c
 13037  00363A  26D9               	addwf	fsr2l,f,c
 13038  00363C  5012               	movf	(setMotorPWM@m+1)^0,w,c
 13039  00363E  22DA               	addwfc	fsr2h,f,c
 13040  003640  CFDE F013          	movff	postinc2,??_setMotorPWM
 13041  003644  CFDD F014          	movff	postdec2,??_setMotorPWM+1
 13042  003648  C013  FFD9         	movff	??_setMotorPWM,fsr2l
 13043  00364C  C014  FFDA         	movff	??_setMotorPWM+1,fsr2h
 13044  003650  C01A  FFDF         	movff	setMotorPWM@PWMduty,indf2
 13045  003654                     
 13046                           ;dc_motor.c: 73:  if (m->direction){
 13047  003654  EE20 F001          	lfsr	2,1
 13048  003658  5011               	movf	setMotorPWM@m^0,w,c
 13049  00365A  26D9               	addwf	fsr2l,f,c
 13050  00365C  5012               	movf	(setMotorPWM@m+1)^0,w,c
 13051  00365E  22DA               	addwfc	fsr2h,f,c
 13052  003660  50DF               	movf	indf2,w,c
 13053  003662  B4D8               	btfsc	status,2,c
 13054  003664  EF36  F01B         	goto	u3111
 13055  003668  EF38  F01B         	goto	u3110
 13056  00366C                     u3111:
 13057  00366C  EF6D  F01B         	goto	l3718
 13058  003670                     u3110:
 13059  003670                     
 13060                           ;dc_motor.c: 74:   *(m->dir_LAT) = *(m->dir_LAT) | (1<<(m->dir_pin));
 13061  003670  EE20 F004          	lfsr	2,4
 13062  003674  5011               	movf	setMotorPWM@m^0,w,c
 13063  003676  26D9               	addwf	fsr2l,f,c
 13064  003678  5012               	movf	(setMotorPWM@m+1)^0,w,c
 13065  00367A  22DA               	addwfc	fsr2h,f,c
 13066  00367C  CFDE F013          	movff	postinc2,??_setMotorPWM
 13067  003680  CFDD F014          	movff	postdec2,??_setMotorPWM+1
 13068  003684  C013  FFD9         	movff	??_setMotorPWM,fsr2l
 13069  003688  C014  FFDA         	movff	??_setMotorPWM+1,fsr2h
 13070  00368C  EE10 F004          	lfsr	1,4
 13071  003690  5011               	movf	setMotorPWM@m^0,w,c
 13072  003692  26E1               	addwf	fsr1l,f,c
 13073  003694  5012               	movf	(setMotorPWM@m+1)^0,w,c
 13074  003696  22E2               	addwfc	fsr1h,f,c
 13075  003698  CFE6 F015          	movff	postinc1,??_setMotorPWM+2
 13076  00369C  CFE5 F016          	movff	postdec1,??_setMotorPWM+3
 13077  0036A0  C015  FFE1         	movff	??_setMotorPWM+2,fsr1l
 13078  0036A4  C016  FFE2         	movff	??_setMotorPWM+3,fsr1h
 13079  0036A8  50E7               	movf	indf1,w,c
 13080  0036AA  6E17               	movwf	(??_setMotorPWM+4)^0,c
 13081  0036AC  EE10 F006          	lfsr	1,6
 13082  0036B0  5011               	movf	setMotorPWM@m^0,w,c
 13083  0036B2  26E1               	addwf	fsr1l,f,c
 13084  0036B4  5012               	movf	(setMotorPWM@m+1)^0,w,c
 13085  0036B6  22E2               	addwfc	fsr1h,f,c
 13086  0036B8  50E7               	movf	indf1,w,c
 13087  0036BA  6E18               	movwf	(??_setMotorPWM+5)^0,c
 13088  0036BC  0E01               	movlw	1
 13089  0036BE  6E19               	movwf	(??_setMotorPWM+6)^0,c
 13090  0036C0  2A18               	incf	(??_setMotorPWM+5)^0,f,c
 13091  0036C2  EF65  F01B         	goto	u3124
 13092  0036C6                     u3125:
 13093  0036C6  90D8               	bcf	status,0,c
 13094  0036C8  3619               	rlcf	(??_setMotorPWM+6)^0,f,c
 13095  0036CA                     u3124:
 13096  0036CA  2E18               	decfsz	(??_setMotorPWM+5)^0,f,c
 13097  0036CC  EF63  F01B         	goto	u3125
 13098  0036D0  5019               	movf	(??_setMotorPWM+6)^0,w,c
 13099  0036D2  1017               	iorwf	(??_setMotorPWM+4)^0,w,c
 13100  0036D4  6EDF               	movwf	indf2,c
 13101                           
 13102                           ;dc_motor.c: 75:  } else {
 13103  0036D6  EFA1  F01B         	goto	l323
 13104  0036DA                     l3718:
 13105                           
 13106                           ;dc_motor.c: 76:   *(m->dir_LAT) = *(m->dir_LAT) & (~(1<<(m->dir_pin)));
 13107  0036DA  EE20 F004          	lfsr	2,4
 13108  0036DE  5011               	movf	setMotorPWM@m^0,w,c
 13109  0036E0  26D9               	addwf	fsr2l,f,c
 13110  0036E2  5012               	movf	(setMotorPWM@m+1)^0,w,c
 13111  0036E4  22DA               	addwfc	fsr2h,f,c
 13112  0036E6  CFDE F013          	movff	postinc2,??_setMotorPWM
 13113  0036EA  CFDD F014          	movff	postdec2,??_setMotorPWM+1
 13114  0036EE  C013  FFD9         	movff	??_setMotorPWM,fsr2l
 13115  0036F2  C014  FFDA         	movff	??_setMotorPWM+1,fsr2h
 13116  0036F6  EE10 F004          	lfsr	1,4
 13117  0036FA  5011               	movf	setMotorPWM@m^0,w,c
 13118  0036FC  26E1               	addwf	fsr1l,f,c
 13119  0036FE  5012               	movf	(setMotorPWM@m+1)^0,w,c
 13120  003700  22E2               	addwfc	fsr1h,f,c
 13121  003702  CFE6 F015          	movff	postinc1,??_setMotorPWM+2
 13122  003706  CFE5 F016          	movff	postdec1,??_setMotorPWM+3
 13123  00370A  C015  FFE1         	movff	??_setMotorPWM+2,fsr1l
 13124  00370E  C016  FFE2         	movff	??_setMotorPWM+3,fsr1h
 13125  003712  50E7               	movf	indf1,w,c
 13126  003714  6E17               	movwf	(??_setMotorPWM+4)^0,c
 13127  003716  EE10 F006          	lfsr	1,6
 13128  00371A  5011               	movf	setMotorPWM@m^0,w,c
 13129  00371C  26E1               	addwf	fsr1l,f,c
 13130  00371E  5012               	movf	(setMotorPWM@m+1)^0,w,c
 13131  003720  22E2               	addwfc	fsr1h,f,c
 13132  003722  50E7               	movf	indf1,w,c
 13133  003724  6E18               	movwf	(??_setMotorPWM+5)^0,c
 13134  003726  0E01               	movlw	1
 13135  003728  6E19               	movwf	(??_setMotorPWM+6)^0,c
 13136  00372A  2A18               	incf	(??_setMotorPWM+5)^0,f,c
 13137  00372C  EF9A  F01B         	goto	u3134
 13138  003730                     u3135:
 13139  003730  90D8               	bcf	status,0,c
 13140  003732  3619               	rlcf	(??_setMotorPWM+6)^0,f,c
 13141  003734                     u3134:
 13142  003734  2E18               	decfsz	(??_setMotorPWM+5)^0,f,c
 13143  003736  EF98  F01B         	goto	u3135
 13144  00373A  5019               	movf	(??_setMotorPWM+6)^0,w,c
 13145  00373C  0AFF               	xorlw	255
 13146  00373E  1417               	andwf	(??_setMotorPWM+4)^0,w,c
 13147  003740  6EDF               	movwf	indf2,c
 13148  003742                     l323:
 13149  003742  0012               	return		;funcret
 13150  003744                     __end_of_setMotorPWM:
 13151                           	callstack 0
 13152                           
 13153 ;; *************** function ___wmul *****************
 13154 ;; Defined at:
 13155 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\Umul16.c"
 13156 ;; Parameters:    Size  Location     Type
 13157 ;;  multiplier      2    2[COMRAM] unsigned int 
 13158 ;;  multiplicand    2    4[COMRAM] unsigned int 
 13159 ;; Auto vars:     Size  Location     Type
 13160 ;;  product         2    6[COMRAM] unsigned int 
 13161 ;; Return value:  Size  Location     Type
 13162 ;;                  2    2[COMRAM] unsigned int 
 13163 ;; Registers used:
 13164 ;;		wreg, status,2, status,0, prodl, prodh
 13165 ;; Tracked objects:
 13166 ;;		On entry : 0/0
 13167 ;;		On exit  : 0/0
 13168 ;;		Unchanged: 0/0
 13169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13170 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13171 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13172 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13173 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13174 ;;Total ram usage:        6 bytes
 13175 ;; Hardware stack levels used: 1
 13176 ;; Hardware stack levels required when called: 2
 13177 ;; This function calls:
 13178 ;;		Nothing
 13179 ;; This function is called by:
 13180 ;;		_setMotorPWM
 13181 ;; This function uses a non-reentrant model
 13182 ;;
 13183                           
 13184                           	psect	text69
 13185  005666                     __ptext69:
 13186                           	callstack 0
 13187  005666                     ___wmul:
 13188                           	callstack 26
 13189  005666  5003               	movf	___wmul@multiplier^0,w,c
 13190  005668  0205               	mulwf	___wmul@multiplicand^0,c
 13191  00566A  CFF3 F007          	movff	prodl,___wmul@product
 13192  00566E  CFF4 F008          	movff	prodh,___wmul@product+1
 13193  005672  5003               	movf	___wmul@multiplier^0,w,c
 13194  005674  0206               	mulwf	(___wmul@multiplicand+1)^0,c
 13195  005676  50F3               	movf	243,w,c
 13196  005678  2608               	addwf	(___wmul@product+1)^0,f,c
 13197  00567A  5004               	movf	(___wmul@multiplier+1)^0,w,c
 13198  00567C  0205               	mulwf	___wmul@multiplicand^0,c
 13199  00567E  50F3               	movf	243,w,c
 13200  005680  2608               	addwf	(___wmul@product+1)^0,f,c
 13201  005682  C007  F003         	movff	___wmul@product,?___wmul
 13202  005686  C008  F004         	movff	___wmul@product+1,?___wmul+1
 13203  00568A  0012               	return		;funcret
 13204  00568C                     __end_of___wmul:
 13205                           	callstack 0
 13206                           
 13207 ;; *************** function ___awdiv *****************
 13208 ;; Defined at:
 13209 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\awdiv.c"
 13210 ;; Parameters:    Size  Location     Type
 13211 ;;  dividend        2    8[COMRAM] int 
 13212 ;;  divisor         2   10[COMRAM] int 
 13213 ;; Auto vars:     Size  Location     Type
 13214 ;;  quotient        2   14[COMRAM] int 
 13215 ;;  sign            1   13[COMRAM] unsigned char 
 13216 ;;  counter         1   12[COMRAM] unsigned char 
 13217 ;; Return value:  Size  Location     Type
 13218 ;;                  2    8[COMRAM] int 
 13219 ;; Registers used:
 13220 ;;		wreg, status,2, status,0
 13221 ;; Tracked objects:
 13222 ;;		On entry : 0/0
 13223 ;;		On exit  : 0/0
 13224 ;;		Unchanged: 0/0
 13225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13226 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13227 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13228 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13229 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13230 ;;Total ram usage:        8 bytes
 13231 ;; Hardware stack levels used: 1
 13232 ;; Hardware stack levels required when called: 2
 13233 ;; This function calls:
 13234 ;;		Nothing
 13235 ;; This function is called by:
 13236 ;;		_setMotorPWM
 13237 ;; This function uses a non-reentrant model
 13238 ;;
 13239                           
 13240                           	psect	text70
 13241  004BE4                     __ptext70:
 13242                           	callstack 0
 13243  004BE4                     ___awdiv:
 13244                           	callstack 26
 13245  004BE4  0E00               	movlw	0
 13246  004BE6  6E0E               	movwf	___awdiv@sign^0,c
 13247  004BE8  BE0C               	btfsc	(___awdiv@divisor+1)^0,7,c
 13248  004BEA  EFFB  F025         	goto	u2970
 13249  004BEE  EFF9  F025         	goto	u2971
 13250  004BF2                     u2971:
 13251  004BF2  EF01  F026         	goto	l3640
 13252  004BF6                     u2970:
 13253  004BF6  6C0B               	negf	___awdiv@divisor^0,c
 13254  004BF8  1E0C               	comf	(___awdiv@divisor+1)^0,f,c
 13255  004BFA  B0D8               	btfsc	status,0,c
 13256  004BFC  2A0C               	incf	(___awdiv@divisor+1)^0,f,c
 13257  004BFE  0E01               	movlw	1
 13258  004C00  6E0E               	movwf	___awdiv@sign^0,c
 13259  004C02                     l3640:
 13260  004C02  BE0A               	btfsc	(___awdiv@dividend+1)^0,7,c
 13261  004C04  EF08  F026         	goto	u2980
 13262  004C08  EF06  F026         	goto	u2981
 13263  004C0C                     u2981:
 13264  004C0C  EF0E  F026         	goto	l3646
 13265  004C10                     u2980:
 13266  004C10  6C09               	negf	___awdiv@dividend^0,c
 13267  004C12  1E0A               	comf	(___awdiv@dividend+1)^0,f,c
 13268  004C14  B0D8               	btfsc	status,0,c
 13269  004C16  2A0A               	incf	(___awdiv@dividend+1)^0,f,c
 13270  004C18  0E01               	movlw	1
 13271  004C1A  1A0E               	xorwf	___awdiv@sign^0,f,c
 13272  004C1C                     l3646:
 13273  004C1C  0E00               	movlw	0
 13274  004C1E  6E10               	movwf	(___awdiv@quotient+1)^0,c
 13275  004C20  0E00               	movlw	0
 13276  004C22  6E0F               	movwf	___awdiv@quotient^0,c
 13277  004C24  500B               	movf	___awdiv@divisor^0,w,c
 13278  004C26  100C               	iorwf	(___awdiv@divisor+1)^0,w,c
 13279  004C28  B4D8               	btfsc	status,2,c
 13280  004C2A  EF19  F026         	goto	u2991
 13281  004C2E  EF1B  F026         	goto	u2990
 13282  004C32                     u2991:
 13283  004C32  EF43  F026         	goto	l3668
 13284  004C36                     u2990:
 13285  004C36  0E01               	movlw	1
 13286  004C38  6E0D               	movwf	___awdiv@counter^0,c
 13287  004C3A  EF23  F026         	goto	l3654
 13288  004C3E                     l3652:
 13289  004C3E  90D8               	bcf	status,0,c
 13290  004C40  360B               	rlcf	___awdiv@divisor^0,f,c
 13291  004C42  360C               	rlcf	(___awdiv@divisor+1)^0,f,c
 13292  004C44  2A0D               	incf	___awdiv@counter^0,f,c
 13293  004C46                     l3654:
 13294  004C46  AE0C               	btfss	(___awdiv@divisor+1)^0,7,c
 13295  004C48  EF28  F026         	goto	u3001
 13296  004C4C  EF2A  F026         	goto	u3000
 13297  004C50                     u3001:
 13298  004C50  EF1F  F026         	goto	l3652
 13299  004C54                     u3000:
 13300  004C54                     l3656:
 13301  004C54  90D8               	bcf	status,0,c
 13302  004C56  360F               	rlcf	___awdiv@quotient^0,f,c
 13303  004C58  3610               	rlcf	(___awdiv@quotient+1)^0,f,c
 13304  004C5A  500B               	movf	___awdiv@divisor^0,w,c
 13305  004C5C  5C09               	subwf	___awdiv@dividend^0,w,c
 13306  004C5E  500C               	movf	(___awdiv@divisor+1)^0,w,c
 13307  004C60  580A               	subwfb	(___awdiv@dividend+1)^0,w,c
 13308  004C62  A0D8               	btfss	status,0,c
 13309  004C64  EF36  F026         	goto	u3011
 13310  004C68  EF38  F026         	goto	u3010
 13311  004C6C                     u3011:
 13312  004C6C  EF3D  F026         	goto	l3664
 13313  004C70                     u3010:
 13314  004C70  500B               	movf	___awdiv@divisor^0,w,c
 13315  004C72  5E09               	subwf	___awdiv@dividend^0,f,c
 13316  004C74  500C               	movf	(___awdiv@divisor+1)^0,w,c
 13317  004C76  5A0A               	subwfb	(___awdiv@dividend+1)^0,f,c
 13318  004C78  800F               	bsf	___awdiv@quotient^0,0,c
 13319  004C7A                     l3664:
 13320  004C7A  90D8               	bcf	status,0,c
 13321  004C7C  320C               	rrcf	(___awdiv@divisor+1)^0,f,c
 13322  004C7E  320B               	rrcf	___awdiv@divisor^0,f,c
 13323  004C80  2E0D               	decfsz	___awdiv@counter^0,f,c
 13324  004C82  EF2A  F026         	goto	l3656
 13325  004C86                     l3668:
 13326  004C86  500E               	movf	___awdiv@sign^0,w,c
 13327  004C88  B4D8               	btfsc	status,2,c
 13328  004C8A  EF49  F026         	goto	u3021
 13329  004C8E  EF4B  F026         	goto	u3020
 13330  004C92                     u3021:
 13331  004C92  EF4F  F026         	goto	l3672
 13332  004C96                     u3020:
 13333  004C96  6C0F               	negf	___awdiv@quotient^0,c
 13334  004C98  1E10               	comf	(___awdiv@quotient+1)^0,f,c
 13335  004C9A  B0D8               	btfsc	status,0,c
 13336  004C9C  2A10               	incf	(___awdiv@quotient+1)^0,f,c
 13337  004C9E                     l3672:
 13338  004C9E  C00F  F009         	movff	___awdiv@quotient,?___awdiv
 13339  004CA2  C010  F00A         	movff	___awdiv@quotient+1,?___awdiv+1
 13340  004CA6  0012               	return		;funcret
 13341  004CA8                     __end_of___awdiv:
 13342                           	callstack 0
 13343                           
 13344 ;; *************** function _Timer0_init *****************
 13345 ;; Defined at:
 13346 ;;		line 7 in file "timers.c"
 13347 ;; Parameters:    Size  Location     Type
 13348 ;;		None
 13349 ;; Auto vars:     Size  Location     Type
 13350 ;;		None
 13351 ;; Return value:  Size  Location     Type
 13352 ;;                  1    wreg      void 
 13353 ;; Registers used:
 13354 ;;		wreg, status,2
 13355 ;; Tracked objects:
 13356 ;;		On entry : 0/0
 13357 ;;		On exit  : 0/0
 13358 ;;		Unchanged: 0/0
 13359 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13360 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13361 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13362 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13363 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13364 ;;Total ram usage:        0 bytes
 13365 ;; Hardware stack levels used: 1
 13366 ;; Hardware stack levels required when called: 2
 13367 ;; This function calls:
 13368 ;;		Nothing
 13369 ;; This function is called by:
 13370 ;;		_main
 13371 ;; This function uses a non-reentrant model
 13372 ;;
 13373                           
 13374                           	psect	text71
 13375  00578A                     __ptext71:
 13376                           	callstack 0
 13377  00578A                     _Timer0_init:
 13378                           	callstack 28
 13379  00578A                     
 13380                           ;timers.c: 9:     T0CON1bits.T0CS=0b010;
 13381  00578A  50D6               	movf	214,w,c	;volatile
 13382  00578C  0B1F               	andlw	-225
 13383  00578E  0940               	iorlw	64
 13384  005790  6ED6               	movwf	214,c	;volatile
 13385  005792                     
 13386                           ;timers.c: 10:     T0CON1bits.T0ASYNC=1;
 13387  005792  88D6               	bsf	214,4,c	;volatile
 13388                           
 13389                           ;timers.c: 11:     T0CON1bits.T0CKPS=0b1000;
 13390  005794  50D6               	movf	214,w,c	;volatile
 13391  005796  0BF0               	andlw	-16
 13392  005798  0908               	iorlw	8
 13393  00579A  6ED6               	movwf	214,c	;volatile
 13394  00579C                     
 13395                           ;timers.c: 12:     T0CON0bits.T016BIT=1;
 13396  00579C  88D5               	bsf	213,4,c	;volatile
 13397                           
 13398                           ;timers.c: 16:     TMR0H=0b00001011;
 13399  00579E  0E0B               	movlw	11
 13400  0057A0  6ED4               	movwf	212,c	;volatile
 13401                           
 13402                           ;timers.c: 17:     TMR0L=0b11011011;
 13403  0057A2  0EDB               	movlw	219
 13404  0057A4  6ED3               	movwf	211,c	;volatile
 13405  0057A6  0012               	return		;funcret
 13406  0057A8                     __end_of_Timer0_init:
 13407                           	callstack 0
 13408                           
 13409 ;; *************** function _LED_OFF *****************
 13410 ;; Defined at:
 13411 ;;		line 153 in file "color.c"
 13412 ;; Parameters:    Size  Location     Type
 13413 ;;		None
 13414 ;; Auto vars:     Size  Location     Type
 13415 ;;		None
 13416 ;; Return value:  Size  Location     Type
 13417 ;;                  1    wreg      void 
 13418 ;; Registers used:
 13419 ;;		wreg
 13420 ;; Tracked objects:
 13421 ;;		On entry : 0/0
 13422 ;;		On exit  : 0/0
 13423 ;;		Unchanged: 0/0
 13424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13425 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13426 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13427 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13428 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13429 ;;Total ram usage:        2 bytes
 13430 ;; Hardware stack levels used: 1
 13431 ;; Hardware stack levels required when called: 2
 13432 ;; This function calls:
 13433 ;;		Nothing
 13434 ;; This function is called by:
 13435 ;;		_main
 13436 ;; This function uses a non-reentrant model
 13437 ;;
 13438                           
 13439                           	psect	text72
 13440  00574C                     __ptext72:
 13441                           	callstack 0
 13442  00574C                     _LED_OFF:
 13443                           	callstack 28
 13444  00574C                     
 13445                           ;color.c: 155:     LATGbits.LATG1 = 0;
 13446  00574C  927F               	bcf	127,1,c	;volatile
 13447                           
 13448                           ;color.c: 156:     LATFbits.LATF7 = 0;
 13449  00574E  9E7E               	bcf	126,7,c	;volatile
 13450                           
 13451                           ;color.c: 157:     LATAbits.LATA4 = 0;
 13452  005750  9879               	bcf	121,4,c	;volatile
 13453  005752                     
 13454                           ;color.c: 158:     _delay((unsigned long)((200)*(64000000/4000.0)));
 13455  005752  0E11               	movlw	17
 13456  005754  6E04               	movwf	(??_LED_OFF+1)^0,c
 13457  005756  0E3C               	movlw	60
 13458  005758  6E03               	movwf	??_LED_OFF^0,c
 13459  00575A  0ECB               	movlw	203
 13460  00575C                     u7127:
 13461  00575C  2EE8               	decfsz	wreg,f,c
 13462  00575E  D7FE               	bra	u7127
 13463  005760  2E03               	decfsz	??_LED_OFF^0,f,c
 13464  005762  D7FC               	bra	u7127
 13465  005764  2E04               	decfsz	(??_LED_OFF+1)^0,f,c
 13466  005766  D7FA               	bra	u7127
 13467  005768  F000               	nop	
 13468  00576A  0012               	return		;funcret
 13469  00576C                     __end_of_LED_OFF:
 13470                           	callstack 0
 13471                           
 13472 ;; *************** function _Interrupts_init *****************
 13473 ;; Defined at:
 13474 ;;		line 9 in file "interrupts.c"
 13475 ;; Parameters:    Size  Location     Type
 13476 ;;		None
 13477 ;; Auto vars:     Size  Location     Type
 13478 ;;		None
 13479 ;; Return value:  Size  Location     Type
 13480 ;;                  1    wreg      void 
 13481 ;; Registers used:
 13482 ;;		None
 13483 ;; Tracked objects:
 13484 ;;		On entry : 0/0
 13485 ;;		On exit  : 0/0
 13486 ;;		Unchanged: 0/0
 13487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13488 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13489 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13490 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13491 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13492 ;;Total ram usage:        0 bytes
 13493 ;; Hardware stack levels used: 1
 13494 ;; Hardware stack levels required when called: 2
 13495 ;; This function calls:
 13496 ;;		Nothing
 13497 ;; This function is called by:
 13498 ;;		_main
 13499 ;; This function uses a non-reentrant model
 13500 ;;
 13501                           
 13502                           	psect	text73
 13503  0057E2                     __ptext73:
 13504                           	callstack 0
 13505  0057E2                     _Interrupts_init:
 13506                           	callstack 28
 13507  0057E2  8EF2               	bsf	242,7,c	;volatile
 13508                           
 13509                           ;interrupts.c: 11:     INTCONbits.IPEN=1;
 13510  0057E4  8AF2               	bsf	242,5,c	;volatile
 13511                           
 13512                           ;interrupts.c: 12:     INTCONbits.GIEL=1;
 13513  0057E6  8CF2               	bsf	242,6,c	;volatile
 13514                           
 13515                           ;interrupts.c: 13:  PIE0bits.TMR0IE = 1;
 13516  0057E8  010E               	movlb	14	; () banked
 13517  0057EA  8B29               	bsf	41,5,b	;volatile
 13518  0057EC                     
 13519                           ; BSR set to: 14
 13520  0057EC  0012               	return		;funcret
 13521  0057EE                     __end_of_Interrupts_init:
 13522                           	callstack 0
 13523                           
 13524 ;; *************** function _LowISR *****************
 13525 ;; Defined at:
 13526 ;;		line 25 in file "interrupts.c"
 13527 ;; Parameters:    Size  Location     Type
 13528 ;;		None
 13529 ;; Auto vars:     Size  Location     Type
 13530 ;;		None
 13531 ;; Return value:  Size  Location     Type
 13532 ;;                  1    wreg      void 
 13533 ;; Registers used:
 13534 ;;		status,2, status,0
 13535 ;; Tracked objects:
 13536 ;;		On entry : 0/0
 13537 ;;		On exit  : 0/0
 13538 ;;		Unchanged: 0/0
 13539 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13540 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13541 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13542 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13543 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13544 ;;Total ram usage:        2 bytes
 13545 ;; Hardware stack levels used: 1
 13546 ;; Hardware stack levels required when called: 1
 13547 ;; This function calls:
 13548 ;;		Nothing
 13549 ;; This function is called by:
 13550 ;;		Interrupt level 1
 13551 ;; This function uses a non-reentrant model
 13552 ;;
 13553                           
 13554                           	psect	intcodelo
 13555  000018                     __pintcodelo:
 13556                           	callstack 0
 13557  000018                     _LowISR:
 13558                           	callstack 19
 13559                           
 13560                           ; BSR set to: 14
 13561                           ;incstack = 0
 13562  000018  805C               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
 13563  00001A  CFD8 F001          	movff	status,??_LowISR
 13564  00001E  CFE0 F002          	movff	bsr,??_LowISR+1
 13565  000022                     
 13566                           ;interrupts.c: 27:     if(PIR0bits.TMR0IF){
 13567  000022  010E               	movlb	14	; () banked
 13568  000024  AB33               	btfss	51,5,b	;volatile
 13569  000026  EF17  F000         	goto	i1u553_21
 13570  00002A  EF19  F000         	goto	i1u553_20
 13571  00002E                     i1u553_21:
 13572  00002E  EF1E  F000         	goto	i1l728
 13573  000032                     i1u553_20:
 13574  000032                     
 13575                           ; BSR set to: 14
 13576                           ;interrupts.c: 28:         second ++;
 13577  000032  0100               	movlb	0	; () banked
 13578  000034  4BF7               	infsnz	_second& (0+255),f,b
 13579  000036  2BF8               	incf	(_second+1)& (0+255),f,b
 13580  000038                     
 13581                           ; BSR set to: 0
 13582                           ;interrupts.c: 29:         PIR0bits.TMR0IF = 0;
 13583  000038  010E               	movlb	14	; () banked
 13584  00003A  9B33               	bcf	51,5,b	;volatile
 13585  00003C                     i1l728:
 13586                           
 13587                           ; BSR set to: 14
 13588  00003C  C002  FFE0         	movff	??_LowISR+1,bsr
 13589  000040  C001  FFD8         	movff	??_LowISR,status
 13590  000044  905C               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
 13591  000046  0010               	retfie	
 13592  000048                     __end_of_LowISR:
 13593                           	callstack 0
 13594                           
 13595 ;; *************** function _HighISR *****************
 13596 ;; Defined at:
 13597 ;;		line 21 in file "interrupts.c"
 13598 ;; Parameters:    Size  Location     Type
 13599 ;;		None
 13600 ;; Auto vars:     Size  Location     Type
 13601 ;;		None
 13602 ;; Return value:  Size  Location     Type
 13603 ;;                  1    wreg      void 
 13604 ;; Registers used:
 13605 ;;		None
 13606 ;; Tracked objects:
 13607 ;;		On entry : 0/0
 13608 ;;		On exit  : 0/0
 13609 ;;		Unchanged: 0/0
 13610 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13611 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13612 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13613 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13614 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13615 ;;Total ram usage:        0 bytes
 13616 ;; Hardware stack levels used: 1
 13617 ;; This function calls:
 13618 ;;		Nothing
 13619 ;; This function is called by:
 13620 ;;		Interrupt level 2
 13621 ;; This function uses a non-reentrant model
 13622 ;;
 13623                           
 13624                           	psect	intcode
 13625  000008                     __pintcode:
 13626                           	callstack 0
 13627  000008                     _HighISR:
 13628                           	callstack 19
 13629                           
 13630                           ; BSR set to: 14
 13631                           ;incstack = 0
 13632  000008  825C               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 13633  00000A  EF06  F02C         	goto	int_func
 13634                           
 13635                           	psect	intcode_body
 13636  00580C                     __pintcode_body:
 13637                           	callstack 19
 13638  00580C                     int_func:
 13639                           	callstack 19
 13640  00580C  925C               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 13641  00580E  0011               	retfie		f
 13642  005810                     __end_of_HighISR:
 13643                           	callstack 0
 13644                           
 13645                           	psect	rparam
 13646  0000                     
 13647                           	psect	temp
 13648  00005C                     btemp:
 13649                           	callstack 0
 13650  00005C                     	ds	1
 13651  0000                     int$flags	set	btemp
 13652  0000                     wtemp8	set	btemp+1
 13653  0000                     ttemp5	set	btemp+1
 13654  0000                     ttemp6	set	btemp+4
 13655  0000                     ttemp7	set	btemp+8
 13656                           
 13657                           	psect	idloc
 13658                           
 13659                           ;Config register IDLOC0 @ 0x200000
 13660                           ;	unspecified, using default values
 13661  200000                     	org	2097152
 13662  200000  0FFF               	dw	4095
 13663                           
 13664                           ;Config register IDLOC1 @ 0x200002
 13665                           ;	unspecified, using default values
 13666  200002                     	org	2097154
 13667  200002  0FFF               	dw	4095
 13668                           
 13669                           ;Config register IDLOC2 @ 0x200004
 13670                           ;	unspecified, using default values
 13671  200004                     	org	2097156
 13672  200004  0FFF               	dw	4095
 13673                           
 13674                           ;Config register IDLOC3 @ 0x200006
 13675                           ;	unspecified, using default values
 13676  200006                     	org	2097158
 13677  200006  0FFF               	dw	4095
 13678                           
 13679                           ;Config register IDLOC4 @ 0x200008
 13680                           ;	unspecified, using default values
 13681  200008                     	org	2097160
 13682  200008  0FFF               	dw	4095
 13683                           
 13684                           ;Config register IDLOC5 @ 0x20000A
 13685                           ;	unspecified, using default values
 13686  20000A                     	org	2097162
 13687  20000A  0FFF               	dw	4095
 13688                           
 13689                           ;Config register IDLOC6 @ 0x20000C
 13690                           ;	unspecified, using default values
 13691  20000C                     	org	2097164
 13692  20000C  0FFF               	dw	4095
 13693                           
 13694                           ;Config register IDLOC7 @ 0x20000E
 13695                           ;	unspecified, using default values
 13696  20000E                     	org	2097166
 13697  20000E  0FFF               	dw	4095
 13698                           
 13699                           	psect	config
 13700                           
 13701                           ;Config register CONFIG1L @ 0x300000
 13702                           ;	External Oscillator mode Selection bits
 13703                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
 13704                           ;	Power-up default value for COSC bits
 13705                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
 13706  300000                     	org	3145728
 13707  300000  AA                 	db	170
 13708                           
 13709                           ;Config register CONFIG1H @ 0x300001
 13710                           ;	unspecified, using default values
 13711                           ;	Clock Out Enable bit
 13712                           ;	CLKOUTEN = 0x1, unprogrammed default
 13713                           ;	Clock Switch Enable bit
 13714                           ;	CSWEN = 0x1, unprogrammed default
 13715                           ;	Fail-Safe Clock Monitor Enable bit
 13716                           ;	FCMEN = 0x1, unprogrammed default
 13717  300001                     	org	3145729
 13718  300001  FF                 	db	255
 13719                           
 13720                           ;Config register CONFIG2L @ 0x300002
 13721                           ;	unspecified, using default values
 13722                           ;	Master Clear Enable bit
 13723                           ;	MCLRE = 0x1, unprogrammed default
 13724                           ;	Power-up Timer Enable bit
 13725                           ;	PWRTE = 0x1, unprogrammed default
 13726                           ;	Low-power BOR enable bit
 13727                           ;	LPBOREN = 0x1, unprogrammed default
 13728                           ;	Brown-out Reset Enable bits
 13729                           ;	BOREN = 0x3, unprogrammed default
 13730  300002                     	org	3145730
 13731  300002  FF                 	db	255
 13732                           
 13733                           ;Config register CONFIG2H @ 0x300003
 13734                           ;	unspecified, using default values
 13735                           ;	Brown Out Reset Voltage selection bits
 13736                           ;	BORV = 0x3, unprogrammed default
 13737                           ;	ZCD Disable bit
 13738                           ;	ZCD = 0x1, unprogrammed default
 13739                           ;	PPSLOCK bit One-Way Set Enable bit
 13740                           ;	PPS1WAY = 0x1, unprogrammed default
 13741                           ;	Stack Full/Underflow Reset Enable bit
 13742                           ;	STVREN = 0x1, unprogrammed default
 13743                           ;	Debugger Enable bit
 13744                           ;	DEBUG = 0x1, unprogrammed default
 13745                           ;	Extended Instruction Set Enable bit
 13746                           ;	XINST = 0x1, unprogrammed default
 13747  300003                     	org	3145731
 13748  300003  FF                 	db	255
 13749                           
 13750                           ;Config register CONFIG3L @ 0x300004
 13751                           ;	WDT Period Select bits
 13752                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 13753                           ;	WDT operating mode
 13754                           ;	WDTE = OFF, WDT Disabled
 13755  300004                     	org	3145732
 13756  300004  9F                 	db	159
 13757                           
 13758                           ;Config register CONFIG3H @ 0x300005
 13759                           ;	unspecified, using default values
 13760                           ;	WDT Window Select bits
 13761                           ;	WDTCWS = 0x7, unprogrammed default
 13762                           ;	WDT input clock selector
 13763                           ;	WDTCCS = 0x7, unprogrammed default
 13764  300005                     	org	3145733
 13765  300005  FF                 	db	255
 13766                           
 13767                           ;Config register CONFIG4L @ 0x300006
 13768                           ;	unspecified, using default values
 13769                           ;	Write Protection Block 0
 13770                           ;	WRT0 = 0x1, unprogrammed default
 13771                           ;	Write Protection Block 1
 13772                           ;	WRT1 = 0x1, unprogrammed default
 13773                           ;	Write Protection Block 2
 13774                           ;	WRT2 = 0x1, unprogrammed default
 13775                           ;	Write Protection Block 3
 13776                           ;	WRT3 = 0x1, unprogrammed default
 13777                           ;	Write Protection Block 3
 13778                           ;	WRT4 = 0x1, unprogrammed default
 13779                           ;	Write Protection Block 3
 13780                           ;	WRT5 = 0x1, unprogrammed default
 13781                           ;	Write Protection Block 3
 13782                           ;	WRT6 = 0x1, unprogrammed default
 13783                           ;	Write Protection Block 3
 13784                           ;	WRT7 = 0x1, unprogrammed default
 13785  300006                     	org	3145734
 13786  300006  FF                 	db	255
 13787                           
 13788                           ;Config register CONFIG4H @ 0x300007
 13789                           ;	unspecified, using default values
 13790                           ;	Configuration Register Write Protection bit
 13791                           ;	WRTC = 0x1, unprogrammed default
 13792                           ;	Boot Block Write Protection bit
 13793                           ;	WRTB = 0x1, unprogrammed default
 13794                           ;	Data EEPROM Write Protection bit
 13795                           ;	WRTD = 0x1, unprogrammed default
 13796                           ;	Scanner Enable bit
 13797                           ;	SCANE = 0x1, unprogrammed default
 13798                           ;	Low Voltage Programming Enable bit
 13799                           ;	LVP = 0x1, unprogrammed default
 13800  300007                     	org	3145735
 13801  300007  FF                 	db	255
 13802                           
 13803                           ;Config register CONFIG5L @ 0x300008
 13804                           ;	unspecified, using default values
 13805                           ;	UserNVM Program Memory Code Protection bit
 13806                           ;	CP = 0x1, unprogrammed default
 13807                           ;	DataNVM Memory Code Protection bit
 13808                           ;	CPD = 0x1, unprogrammed default
 13809  300008                     	org	3145736
 13810  300008  FF                 	db	255
 13811                           
 13812                           ;Config register CONFIG5H @ 0x300009
 13813                           ;	unspecified, using default values
 13814  300009                     	org	3145737
 13815  300009  FF                 	db	255
 13816                           
 13817                           ;Config register CONFIG6L @ 0x30000A
 13818                           ;	unspecified, using default values
 13819                           ;	Table Read Protection Block 0
 13820                           ;	EBTR0 = 0x1, unprogrammed default
 13821                           ;	Table Read Protection Block 1
 13822                           ;	EBTR1 = 0x1, unprogrammed default
 13823                           ;	Table Read Protection Block 2
 13824                           ;	EBTR2 = 0x1, unprogrammed default
 13825                           ;	Table Read Protection Block 3
 13826                           ;	EBTR3 = 0x1, unprogrammed default
 13827                           ;	Table Read Protection Block 4
 13828                           ;	EBTR4 = 0x1, unprogrammed default
 13829                           ;	Table Read Protection Block 5
 13830                           ;	EBTR5 = 0x1, unprogrammed default
 13831                           ;	Table Read Protection Block 6
 13832                           ;	EBTR6 = 0x1, unprogrammed default
 13833                           ;	Table Read Protection Block 7
 13834                           ;	EBTR7 = 0x1, unprogrammed default
 13835  30000A                     	org	3145738
 13836  30000A  FF                 	db	255
 13837                           
 13838                           ;Config register CONFIG6H @ 0x30000B
 13839                           ;	unspecified, using default values
 13840                           ;	Boot Block Table Read Protection bit
 13841                           ;	EBTRB = 0x1, unprogrammed default
 13842  30000B                     	org	3145739
 13843  30000B  FF                 	db	255
 13844                           tosu	equ	0xFFF
 13845                           tosh	equ	0xFFE
 13846                           tosl	equ	0xFFD
 13847                           stkptr	equ	0xFFC
 13848                           pclatu	equ	0xFFB
 13849                           pclath	equ	0xFFA
 13850                           pcl	equ	0xFF9
 13851                           tblptru	equ	0xFF8
 13852                           tblptrh	equ	0xFF7
 13853                           tblptrl	equ	0xFF6
 13854                           tablat	equ	0xFF5
 13855                           prodh	equ	0xFF4
 13856                           prodl	equ	0xFF3
 13857                           indf0	equ	0xFEF
 13858                           postinc0	equ	0xFEE
 13859                           postdec0	equ	0xFED
 13860                           preinc0	equ	0xFEC
 13861                           plusw0	equ	0xFEB
 13862                           fsr0h	equ	0xFEA
 13863                           fsr0l	equ	0xFE9
 13864                           wreg	equ	0xFE8
 13865                           indf1	equ	0xFE7
 13866                           postinc1	equ	0xFE6
 13867                           postdec1	equ	0xFE5
 13868                           preinc1	equ	0xFE4
 13869                           plusw1	equ	0xFE3
 13870                           fsr1h	equ	0xFE2
 13871                           fsr1l	equ	0xFE1
 13872                           bsr	equ	0xFE0
 13873                           indf2	equ	0xFDF
 13874                           postinc2	equ	0xFDE
 13875                           postdec2	equ	0xFDD
 13876                           preinc2	equ	0xFDC
 13877                           plusw2	equ	0xFDB
 13878                           fsr2h	equ	0xFDA
 13879                           fsr2l	equ	0xFD9
 13880                           status	equ	0xFD8

Data Sizes:
    Strings     14
    Constant    4
    Data        3
    BSS         196
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     89      91
    BANK0           160    139     159
    BANK1           256     67     244
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    distance_measure@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    distance_measure@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    amb_light_measure@amb	PTR struct color_rgb size(2) Largest target is 8
		 -> main@amb(BANK1[8]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_3(CODE[6]), STR_2(CODE[12]), STR_1(CODE[14]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 14
		 -> STR_3(CODE[6]), STR_2(CODE[12]), STR_1(CODE[14]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_3(CODE[6]), STR_2(CODE[12]), STR_1(CODE[14]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 100
		 -> color_predict@buf(BANK0[100]), check_color_reading@buf(BANK0[100]), color_display@buf(BANK0[100]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S2744$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S2744$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    goback@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    goback@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    action@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    action@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    short_burst@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    short_burst@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    motorR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    motorR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    motorL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    motorL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    sendStringSerial4@string	PTR unsigned char  size(2) Largest target is 100
		 -> color_predict@buf(BANK0[100]), check_color_reading@buf(BANK0[100]), color_display@buf(BANK0[100]), 

    reverse_square@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    reverse_square@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    short_reverse@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    short_reverse@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    fullSpeedBack@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    fullSpeedBack@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    fullSpeedBack@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    fullSpeedBack@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    fullSpeedBack@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    fullSpeedBack@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    fullSpeedAhead@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    fullSpeedAhead@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    fullSpeedAhead@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    fullSpeedAhead@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    fullSpeedAhead@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    fullSpeedAhead@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    turnRight@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turnRight@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    turnRight@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    turnRight@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turnRight@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    turnRight@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    turnLeft@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turnLeft@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    turnLeft@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    turnLeft@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turnLeft@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    turnLeft@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    stop@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    stop@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    stop@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    stop@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    stop@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    stop@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    setMotorPWM@m.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    setMotorPWM@m.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    setMotorPWM@m	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), main@motorL(BANK1[10]), 

    initDCmotors_parameter@motorR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    initDCmotors_parameter@motorR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    initDCmotors_parameter@motorR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    initDCmotors_parameter@motorL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    initDCmotors_parameter@motorL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    initDCmotors_parameter@motorL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    motorR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    motorR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    S375DC_motor$dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    motorL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    S375DC_motor$dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    motorL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    verify_color@w	PTR struct white_card size(2) Largest target is 26
		 -> main@white(BANK1[26]), 

    verify_color@m	PTR struct color_rgb size(2) Largest target is 8
		 -> main@rgb(BANK1[8]), 

    detect_color@w	PTR struct white_card size(2) Largest target is 26
		 -> main@white(BANK1[26]), 

    detect_color@m	PTR struct color_rgb size(2) Largest target is 8
		 -> main@rgb(BANK1[8]), 

    calibrate_white@w	PTR struct white_card size(2) Largest target is 26
		 -> main@white(BANK1[26]), 

    color_display@m	PTR struct color_rgb size(2) Largest target is 8
		 -> main@rgb(BANK1[8]), 

    color_data_collection@m	PTR struct color_rgb size(2) Largest target is 8
		 -> main@rgb(BANK1[8]), 

    read_color@m	PTR struct color_rgb size(2) Largest target is 8
		 -> main@rgb(BANK1[8]), 


Critical Paths under _main in COMRAM

    _verify_color->_detect_color
    _detect_color->_compare
    _short_burst->_stop
    _read_color->_color_read_Blue
    _read_color->_color_read_Clear
    _read_color->_color_read_Green
    _read_color->_color_read_Red
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _sendStringSerial4->_sendCharSerial4
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _calibrate_white->_color_read_Blue
    _calibrate_white->_color_read_Clear
    _calibrate_white->_color_read_Green
    _calibrate_white->_color_read_Red
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _lroundf->___fltol
    _roundf->___flmul
    ___flsub->___fladd
    ___flmul->___fldiv
    ___fltol->_roundf
    _color_read_Clear->_I2C_2_Master_Read
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    ___fldiv->___xxtofl
    _action->_goback
    _short_reverse->_fullSpeedBack
    _goback->_turnLeft
    _goback->_turnRight
    _turnRight->_stop
    _turnLeft->_stop
    _reverse_square->_fullSpeedBack
    _fullSpeedBack->_stop
    _stop->_setMotorPWM
    _fullSpeedAhead->_setMotorPWM
    _setMotorPWM->___awdiv
    ___awdiv->___wmul

Critical Paths under _LowISR in COMRAM

    None.

Critical Paths under _HighISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_color_data_collection
    _verify_color->_detect_color
    _detect_color->_compare
    _compare->_lroundf
    _distance_measure->_lroundf
    _color_data_collection->_color_display
    _color_predict->_sprintf
    _color_display->_sprintf
    _amb_light_measure->_lroundf
    _lroundf->___fltol
    ___fltol->_roundf

Critical Paths under _LowISR in BANK0

    None.

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _LowISR in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _LowISR in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _LowISR in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _LowISR in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _LowISR in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _LowISR in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _LowISR in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _LowISR in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _LowISR in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _LowISR in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _LowISR in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _LowISR in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _LowISR in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                68    68      0  228135
                                              0 BANK1     67    67      0
                  _I2C_2_Master_Init
                    _Interrupts_init
                              _LED_C
                            _LED_OFF
                        _Timer0_init
                             _action
                  _amb_light_measure
                    _buggylight_init
                    _calibrate_white
                   _color_click_init
              _color_data_collection
                       _detect_color
                   _distance_measure
                     _fullSpeedAhead
                    _initDCmotorsPWM
             _initDCmotors_parameter
                         _initUSART4
                           _pin_init
                         _read_color
                        _short_burst
                               _stop
                       _toggle_light
                       _verify_color
 ---------------------------------------------------------------------------------
 (1) _verify_color                                        11     7      4   34110
                                             85 COMRAM     2     2      0
                                             61 BANK0      9     5      4
                       _detect_color
 ---------------------------------------------------------------------------------
 (2) _detect_color                                        33    29      4   33431
                                             81 COMRAM     4     4      0
                                             32 BANK0     29    25      4
                              _LED_B
                              _LED_G
                              _LED_R
                            ___fldiv
                            ___flmul
                           ___xxtofl
                            _compare
                            _lroundf
                         _read_color
 ---------------------------------------------------------------------------------
 (3) _compare                                              7     1      6    3131
                                             80 COMRAM     1     1      0
                                             26 BANK0      6     0      6
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
                            _lroundf (ARG)
 ---------------------------------------------------------------------------------
 (1) _short_burst                                          6     2      4    6790
                                             33 COMRAM     6     2      4
                     _fullSpeedAhead
                               _stop
 ---------------------------------------------------------------------------------
 (1) _pin_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initDCmotors_parameter                               4     0      4     416
                                              2 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2      76
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _distance_measure                                    19    13      6   24466
                                             80 COMRAM     2     2      0
                                             26 BANK0     17    11      6
                              _LED_C
                            ___flmul
                           ___xxtofl
                   _color_read_Clear
                   _color_read_Green
                            _lroundf
 ---------------------------------------------------------------------------------
 (1) _color_data_collection                               12    10      2   16516
                                            127 BANK0     12    10      2
                              _LED_B
                              _LED_C
                              _LED_G
                              _LED_R
                      _color_display
                      _color_predict
                         _read_color
 ---------------------------------------------------------------------------------
 (3) _read_color                                           2     0      2    1148
                                             13 COMRAM     2     0      2
                    _color_read_Blue
                   _color_read_Clear
                   _color_read_Green
                     _color_read_Red
 ---------------------------------------------------------------------------------
 (2) _color_predict                                      101   101      0    7127
                                             25 BANK0    101   101      0
                  _sendStringSerial4
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _color_display                                      102   100      2    7619
                                             25 BANK0    102   100      2
                  _sendStringSerial4
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             27    15     12    6760
                                              0 BANK0     25    13     12
                           _vfprintf
 ---------------------------------------------------------------------------------
 (4) _vfprintf                                             8     2      6    6105
                                             81 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (5) _vfpfcnvrt                                           42    36      6    5751
                                             65 COMRAM    16    10      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (6) _dtoa                                                36    26     10    4358
                                             29 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (7) _pad                                                 11     5      6    2709
                                             18 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (8) _strlen                                               4     2      2     166
                                              2 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (8) _fputs                                                7     3      4    1235
                                             11 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (6) _fputc                                                9     5      4     834
                                              2 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (7) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (7) _abs                                                  4     2      2     142
                                             20 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (7) ___aomod                                             18     2     16     448
                                              2 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (7) ___aodiv                                             26    10     16     452
                                              2 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (3) _sendStringSerial4                                    2     0      2     295
                                              3 COMRAM     2     0      2
                    _sendCharSerial4
 ---------------------------------------------------------------------------------
 (4) _sendCharSerial4                                      1     1      0      22
                                              2 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     294
                                              6 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     294
                                              4 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _calibrate_white                                      4     2      2     814
                                             13 COMRAM     4     2      2
                              _LED_B
                              _LED_C
                              _LED_G
                              _LED_R
                    _color_read_Blue
                   _color_read_Clear
                   _color_read_Green
                     _color_read_Red
 ---------------------------------------------------------------------------------
 (4) _color_read_Red                                       7     5      2     113
                                              6 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (4) _color_read_Green                                     7     5      2     113
                                              6 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (4) _color_read_Blue                                      7     5      2     113
                                              6 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _LED_R                                                2     2      0       0
                                              2 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _LED_G                                                2     2      0       0
                                              2 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _LED_B                                                2     2      0       0
                                              2 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _buggylight_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _amb_light_measure                                   14    12      2   23002
                                             80 COMRAM     2     2      0
                                             26 BANK0     12    10      2
                              _LED_C
                            ___fldiv
                           ___xxtofl
                   _color_read_Clear
                            _lroundf
                       _toggle_light
 ---------------------------------------------------------------------------------
 (1) _toggle_light                                         5     4      1     461
                                              2 COMRAM     5     4      1
 ---------------------------------------------------------------------------------
 (3) _lroundf                                              4     0      4   17445
                                             22 BANK0      4     0      4
                            ___fldiv (ARG)
                            ___fltol
                           ___xxtofl (ARG)
                             _roundf
 ---------------------------------------------------------------------------------
 (4) _roundf                                              26    22      4   15637
                                             66 COMRAM     8     4      4
                                              0 BANK0     18    18      0
                            ___fladd
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    4907
                                             18 COMRAM     8     0      8
                            ___fladd
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    4522
                                              2 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4     245
                                              2 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    4433
                                             41 COMRAM    25    17      8
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8     626
                                              2 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (4) ___fltol                                             10     6      4     427
                                             74 COMRAM     6     6      0
                                             18 BANK0      4     0      4
                             _roundf (ARG)
 ---------------------------------------------------------------------------------
 (4) _color_read_Clear                                     7     5      2     113
                                              6 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (5) _I2C_2_Master_Write                                   1     1      0      22
                                              3 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (5) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (5) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (5) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (5) _I2C_2_Master_Read                                    3     3      0      45
                                              3 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (6) _I2C_2_Master_Idle                                    1     1      0       0
                                              2 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4    1910
                                              2 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (3) ___fldiv                                             25    17      8    2835
                                             16 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _LED_C                                                2     2      0       0
                                              2 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _action                                               7     3      4   78670
                                             59 COMRAM     7     3      4
                             _goback
                     _reverse_square
                      _short_reverse
                               _stop
                           _turnLeft
                          _turnRight
 ---------------------------------------------------------------------------------
 (2) _short_reverse                                        6     2      4   11021
                                             39 COMRAM     6     2      4
                      _fullSpeedBack
                               _stop
 ---------------------------------------------------------------------------------
 (2) _goback                                               8     4      4   34961
                                             51 COMRAM     8     4      4
                     _fullSpeedAhead
                     _reverse_square
                               _stop
                           _turnLeft
                          _turnRight
 ---------------------------------------------------------------------------------
 (2) _turnRight                                           18    13      5    8039
                                             33 COMRAM    18    13      5
                        _setMotorPWM
                               _stop
 ---------------------------------------------------------------------------------
 (2) _turnLeft                                            18    13      5    8951
                                             33 COMRAM    18    13      5
                        _setMotorPWM
                               _stop
 ---------------------------------------------------------------------------------
 (2) _reverse_square                                       6     2      4   10717
                                             39 COMRAM     6     2      4
                      _fullSpeedBack
                               _stop
 ---------------------------------------------------------------------------------
 (3) _fullSpeedBack                                        6     2      4    6290
                                             33 COMRAM     6     2      4
                        _setMotorPWM
                               _stop
 ---------------------------------------------------------------------------------
 (1) _stop                                                 6     2      4    3731
                                             27 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _fullSpeedAhead                                       5     1      4    2819
                                             27 COMRAM     5     1      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _setMotorPWM                                         11     9      2    2035
                                             16 COMRAM    11     9      2
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     447
                                              2 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     496
                                              8 COMRAM     8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _Timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LED_OFF                                              2     2      0       0
                                              2 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _LowISR                                              2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _HighISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_2_Master_Init
   _Interrupts_init
   _LED_C
   _LED_OFF
   _Timer0_init
   _action
     _goback
       _fullSpeedAhead
         _setMotorPWM
           ___awdiv
             ___wmul (ARG)
           ___wmul
       _reverse_square
         _fullSpeedBack
           _setMotorPWM
           _stop
             _setMotorPWM
         _stop
       _stop
       _turnLeft
         _setMotorPWM
         _stop
       _turnRight
         _setMotorPWM
         _stop
     _reverse_square
     _short_reverse
       _fullSpeedBack
       _stop
     _stop
     _turnLeft
     _turnRight
   _amb_light_measure
     _LED_C
     ___fldiv
       ___xxtofl (ARG)
     ___xxtofl
     _color_read_Clear
       _I2C_2_Master_Read
         _I2C_2_Master_Idle
       _I2C_2_Master_RepStart
         _I2C_2_Master_Idle
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
     _lroundf
       ___fldiv (ARG)
       ___fltol (ARG)
         _roundf (ARG)
           ___fladd
           ___flge
           ___flmul
             ___fldiv (ARG)
             ___xxtofl (ARG)
           ___flneg
           ___flsub
             ___fladd
       ___xxtofl (ARG)
       _roundf (ARG)
     _toggle_light
   _buggylight_init
   _calibrate_white
     _LED_B
     _LED_C
     _LED_G
     _LED_R
     _color_read_Blue
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Clear
     _color_read_Green
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Red
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _color_data_collection
     _LED_B
     _LED_C
     _LED_G
     _LED_R
     _color_display
       _sendStringSerial4
         _sendCharSerial4
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                 _strlen
             _fputc
     _color_predict
       _sendStringSerial4
       _sprintf
     _read_color
       _color_read_Blue
       _color_read_Clear
       _color_read_Green
       _color_read_Red
   _detect_color
     _LED_B
     _LED_G
     _LED_R
     ___fldiv
     ___flmul
     ___xxtofl
     _compare
       ___fldiv (ARG)
       ___flmul (ARG)
       ___xxtofl (ARG)
       _lroundf (ARG)
     _lroundf
     _read_color
   _distance_measure
     _LED_C
     ___flmul
     ___xxtofl
     _color_read_Clear
     _color_read_Green
     _lroundf
   _fullSpeedAhead
   _initDCmotorsPWM
   _initDCmotors_parameter
   _initUSART4
   _pin_init
   _read_color
   _short_burst
     _fullSpeedAhead
     _stop
   _stop
   _toggle_light
   _verify_color
     _detect_color

 _LowISR (ROOT)

 _HighISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      58        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     43      F4       7       95.3%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     8B      9F       5       99.4%
BITBIGSFRlllllh     8F      0       0      41        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     59      5B       1       96.8%
BITBIGSFRllllll     32      0       0      46        0.0%
BITBIGSFRllllll     2A      0       0      50        0.0%
BITBIGSFRllllll     26      0       0      56        0.0%
BITBIGSFRllllll     20      0       0      44        0.0%
BITBIGSFRhhhl       1B      0       0      33        0.0%
BITBIGSFRhlh        17      0       0      35        0.0%
BITBIGSFRhhl        13      0       0      34        0.0%
BITBIGSFRhlllh      11      0       0      37        0.0%
BITBIGSFRhhhh        D      0       0      32        0.0%
BITBIGSFRllllll      C      0       0      45        0.0%
BITBIGSFRllllll      B      0       0      54        0.0%
BITBIGSFRlllllh      8      0       0      42        0.0%
BITBIGSFRllllll      6      0       0      55        0.0%
BITBIGSFRllllll      6      0       0      49        0.0%
BITBIGSFRllllll      5      0       0      52        0.0%
BITBIGSFRllllll      5      0       0      48        0.0%
BITBIGSFRhllll       5      0       0      38        0.0%
BITBIGSFRllllll      3      0       0      51        0.0%
BITBIGSFRllllll      3      0       0      53        0.0%
BITBIGSFRllllll      3      0       0      47        0.0%
BITBIGSFRhllh        1      0       0      36        0.0%
BITBIGSFRllllll      1      0       0      43        0.0%
BITBIGSFRllllh       1      0       0      40        0.0%
BITBIGSFRllh         1      0       0      39        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1EE      57        0.0%
DATA                 0      0     1EE       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.35 build 20211206165544 
Symbol Table                                                                                   Fri Mar 11 18:42:30 2022

                ?_short_reverse 0028                  _color_read_Red 5142                    ___fldiv@aexp 0029  
                  ___fldiv@bexp 0028                    ___fldiv@sign 0021                 _color_read_Blue 51E2  
                 _color_predict 55E6                              l75 57D4                              l92 56CA  
                            l86 32DC                              l78 32CA                              l95 5190  
                            l89 55B4                              l98 5230                    ___awdiv@sign 000E  
                            bsr 000FE0             ___wmul@multiplicand 0005                _color_read_Clear 5232  
              _color_read_Green 5192               ??_Interrupts_init 0003                             l101 51E0  
                           l110 576A                             l104 5280                             l113 56EA  
                           l122 570A                             l211 563C                             l107 5096  
                           l116 574A                             l220 5800                             l133 3900  
                           l214 563E                             l142 5612                             l223 580A  
                           l119 572A                             l232 53DA                             l136 4FD6  
                           l217 5664                             l145 3E0E                             l313 5398  
                           l226 57F6                             l323 3742                             l331 4E22  
                           l171 54D6                             l180 46B0                             l316 498E  
                           l172 54D8                             l229 57E0                             l342 43C0  
                           l183 4BE0                             l167 1A0E                             l360 4240  
                           l184 4BE2                             l168 1A12                             l176 4ED2  
                           l441 5788                             l346 43FA                             l338 4378  
                           l450 57AA                             l364 427A                             l356 41F8  
                           l349 4424                             l453 57BE                             l375 4F66  
                           l367 42A4                             l392 545E                             l386 4D66  
                           l459 55E4                             l717 57EC                             l389 541C  
                           l742 568A                             l663 50EE                             l681 56AA  
                           l739 57A6                             l675 2D4C                             l856 4124  
                           l698 356E                             l973 4CA6                             l869 4588  
             verify_color@color 00A5                ?_calibrate_white 000E        __end_of_distance_measure 4BE4  
                           _abs 5460                             _pad 4A5A                             prod 000FF3  
                           wreg 000FE8                    ___flmul@aexp 0037                    ___flmul@bexp 003C  
                  ___flmul@sign 0036                    ___flmul@temp 0041                    ___flmul@prod 003D  
               __end_of_LED_OFF 576C                    ___fltol@exp1 0050                            l1012 48BC  
                          l1007 4876                            l1016 554A                            ?_abs 0015  
                          l1039 47B8                            l1400 3C68                            l1312 5312  
                          l1411 3C00                            l1324 2A48                            l1404 3BA4  
                          l1501 5496                            l1326 28A8                            l1270 1C02  
                          l1335 28EE                            l1271 1BF0                            l4000 539C  
                          l1360 22FC                            l1272 1BB6                            l1504 549E  
                          l1337 2966                            l1329 286C                            l1425 5140  
                          l1338 2954                            l4010 53D8                            l4002 53A0  
                          l1418 5512                            l1363 218E                            l4020 4D90  
                          l4004 53A8                            l1356 1F98                            l1516 4A58  
                          l1524 5356                            l1452 4AA0                            l1373 22BE  
                          l1365 2206                            l4022 4DA8                            l4030 4DDA  
                          l4014 4D68                            l4006 53B0                            l1366 21F4  
                          l1287 1D1C                            l1279 1ED2                            l1535 26AE  
                          l1527 5814                            l1455 4AE2                            l1463 2DEE  
                          l4032 4DF2                            l4024 4DB4                            l4016 4D6C  
                          l4008 53D6                            l1296 1DEC                            l1297 1DDA  
                          l1457 4B1E                            l1465 2DF6                            l4034 4E0A  
                          l4026 4DC0                            l4018 4D84                            l1490 3AB4  
                          l4210 394A                            l4202 3902                            l1483 3030  
                          l4028 4DCC                            l1548 5580                            l4220 3A12  
                          l4212 396E                            l4204 3926                            l1397 3B0C  
                          l4222 3A36                            l4230 3A64                            l4214 3992  
                          l4206 3934                            l3600 4438                            l3520 49BE  
                          l4232 3A72                            l4224 3A44                            l4216 39DA  
                          l4208 3946                            l1496 5030                            l5200 5778  
                          l6000 1752                            l1497 5038                            l4250 51E2  
                          l4402 55B6                            l3610 44A8                            l3602 4458  
                          l3522 49DC                            l3514 4990                            l3530 5320  
                          l4226 3A58                            l5202 5782                            l6010 186A  
                          l6002 175C                            l5212 57E2                            l4500 425A  
                          l4252 5228                            l4244 5142                            l4404 55BA  
                          l3620 4520                            l3612 44B0                            l3604 445C  
                          l3700 547A                            l3524 4A12                            l3516 49A2  
                          l3532 5332                            l3540 555C                            l4236 3A7E  
                          l6100 3852                            l5204 5784                            l5220 568C  
                          l6012 1874                            l6004 178A                            l5214 578A  
                          l3710 35EE                            l4510 4EF8                            l4270 4CCC  
                          l4430 42EE                            l4502 4266                            l5230 2A56  
                          l3702 563E                            l4262 5232                            l4246 5188  
                          l5070 3C9A                            l4406 55C8                            l3622 4532  
                          l3614 44C4                            l3606 446A                            l3518 49B4  
                          l3534 5336                            l3542 5574                            l4238 3AA2  
                          l6102 386C                            l5206 5786                            l5222 5098  
                          l6022 18CC                            l6006 184A                            l6014 187E  
                          l5216 5792                            l3640 4C02                            l3632 4BE4  
                          l3712 3634                            l4520 4F4E                            l4512 4F10  
                          l4280 4D22                            l4272 4CE4                            l4440 433A  
                          l4432 42FA                            l4424 42A6                            l4504 4276  
                          l5240 2AAC                            l5232 2A66                            l4600 285C  
                          l3704 564E                            l4264 5278                            l4256 5192  
                          l5080 3CFE                            l5072 3CB2                            l5064 3C6A  
                          l4408 55CC                            l3560 3FD4                            l3552 3F9E  
                          l3616 44D2                            l3624 4538                            l3608 448A  
                          l3528 5314                            l3536 554C                            l6120 38BA  
                          l6104 3872                            l5224 50AC                            l6040 19AC  
                          l6024 18E4                            l6016 18AC                            l6008 1862  
                          l6032 191E                            l5218 579C                            l3650 4C36  
                          l3642 4C10                            l3634 4BE8                            l3546 5666  
                          l3714 3654                            l3706 3570                            l4514 4F1C  
                          l4282 4D3A                            l4274 4CF0                            l4522 541E  
                          l4450 438E                            l4442 4346                            l4426 42CA  
                          l4434 4308                            l4506 4290                            l5250 2B14  
                          l5242 2ABC                            l5234 2A70                            l4610 28A6  
                          l4602 286A                            l4530 26BC                            l4258 51D8  
                          l5090 3D7A                            l5082 3D2E                            l5074 3CCA  
                          l5066 3C6E                            l3570 4030                            l3562 3FE2  
                          l3554 3FA2                            l3626 4548                            l3618 4500  
                          l3538 5558                            l4370 4FE0                            l6122 38D4  
                          l6114 389E                            l6106 388E                            l5170 5380  
                          l5226 50C2                            l6042 19DA                            l6034 194A  
                          l6026 18EC                            l6018 18C4                            l6130 4E28  
                          l6210 3E14                            l3660 4C70                            l3652 4C3E  
                          l3644 4C18                            l3636 4BF6                            l3548 5682  
                          l3716 3670                            l3708 358C                            l4516 4F28  
                          l4508 4ED4                            l4284 4D52                            l4276 4CFC  
                          l4268 4CA8                            l4524 5432                            l4460 43E6  
                          l4452 43A0                            l4444 4358                            l4436 4320  
                          l4428 42E2                            l5260 2B98                            l5252 2B40  
                          l5244 2AE8                            l5236 2A96                            l5228 2A4C  
                          l4620 28EC                            l4612 28B8                            l4604 2876  
                          l4540 26FC                            l4532 26CA                            l4700 3C14  
                          l5500 1AAA                            l4380 56D2                            l5092 3D92  
                          l5084 3D32                            l5076 3CCE                            l5068 3C82  
                          l3580 409A                            l3572 4038                            l3564 4002  
                          l3556 3FB0                            l3628 4568                            l4372 4FEE  
                          l6124 38DA                            l6116 38A2                            l6108 3894  
                          l6060 3782                            l5172 5394                            l5180 48DA  
                          l6044 1A08                            l6036 1978                            l6028 1918  
                          l6140 4EB2                            l6132 4E40                            l6220 3E30  
                          l6212 3E18                            l3670 4C96                            l3662 4C78  
                          l3654 4C46                            l3646 4C1C                            l3638 4BFE  
                          l3718 36DA                            l4518 4F36                            l4278 4D0A  
                          l4526 544A                            l4462 43F6                            l4454 43AC  
                          l4446 4364                            l4438 432E                            l4470 4162  
                          l5270 2C08                            l5262 2BB0                            l5254 2B58  
                          l5246 2B00                            l5238 2A98                            l4630 294C  
                          l4614 28CE                            l4622 28FE                            l4606 2894  
                          l4550 2722                            l4542 26FE                            l4534 26CC  
                          l4702 3C38                            l5502 1ABA                            l5510 1AE4  
                          l4382 570C                            l5094 3DF6                            l5086 3D4A  
                          l5078 3CE6                            l4286 57AA                            l3590 40E4  
                          l3582 40BA                            l3574 404C                            l3566 4006  
                          l3558 3FD0                            l4374 5014                            l4390 50F0  
                          l6126 38F6                            l6118 38AE                            l6062 379C  
                          l6054 3766                            l5174 5396                            l5166 5358  
                          l5182 48EE                            l6038 19A6                            l6142 4ECA  
                          l6134 4E5E                            l6230 3E5A                            l6222 3E34  
                          l6214 3E1C                            ?_pad 0013                            l3672 4C9E  
                          l3664 4C7A                            l3656 4C54                            l3648 4C24  
                          l4464 4410                            l4456 43BC                            l4448 4374  
                          l4480 41AE                            l4472 416E                            l5280 2C62  
                          l5272 2C0A                            l5264 2BB2                            l5256 2B5A  
                          l5248 2B02                            l4640 29BA                            l4624 290C  
                          l4616 28D4                            l4608 2896                            l4560 2762  
                          l4552 2730                            l4536 26DC                            l4544 2706  
                          l4528 26B0                            l4704 3C48                            l5600 1CEC  
                          l5520 1B1C                            l5512 1AF4                            l5504 1ACA  
                          l4720 3088                            l4712 3034                            l6160 45CA  
                          l6152 458A                            l4384 5712                            l5088 3D62  
                          l4288 57BA                            l3592 4104                            l3584 40BC  
                          l3576 405A                            l3568 4012                            l3680 4A7E  
                          l4368 4FD8                            l4392 5102                            l4376 503A  
                          l6128 38FC                            l6080 37EA                            l6064 37A2  
                          l6056 376A                            l6048 3744                            l5168 5368  
                          l5184 4902                            l5176 48BE                            l6136 4E76  
                          l6240 3EA8                            l6232 3E80                            l6224 3E48  
                          l6216 3E20                            l6208 3E10                            l3666 4C80  
                          l3658 4C5A                            l4458 43DA                            l4490 41F4  
                          l4482 41BA                            l4474 417A                            l4466 4126  
                          l5290 2CCC                            l5282 2C74                            l5274 2C1C  
                          l5266 2BC4                            l5258 2B6C                            l4650 2A24  
                          l4634 2976                            l4642 29BE                            l4626 2910  
                          l4618 28DE                            l4570 27A2                            l4562 2764  
                          l4554 2732                            l4546 2716                            l4538 26EC  
                          l4706 3C56                            l5602 1CFC                            l5530 1B30  
                          l5522 1B20                            l5514 1B06                            l5506 1ADA  
                          l4730 3142                            l4722 30C0                            l4714 3040  
                          l6170 461E                            l6162 45D6                            l6154 45A4  
                          l4386 56EC                            l4378 56CC                            l3586 40CE  
                          l3578 406C                            l3690 4AC4                            l3682 4A8C  
                          l3930 2DC6                            l3922 2D4E                            l4394 510A  
                          l6082 3804                            l6074 37CE                            l6066 37BE  
                          l6058 3776                            l5186 4912                            l5178 48CA  
                          l6138 4E94                            l6242 3EAE                            l6234 3E9A  
                          l6226 3E4C                            l6218 3E2C                            l3668 4C86  
                          l4492 420E                            l4484 41C6                            l4468 414A  
                          l4476 4188                            l4900 5408                            l5292 2CF8  
                          l5284 2CA0                            l5276 2C48                            l5268 2BF0  
                          l4652 2A28                            l4644 29D8                            l4636 2982  
                          l4628 291E                            l4580 27D2                            l4572 27AA  
                          l4556 2742                            l4564 276C                            l4548 271C  
                          l4708 3C58                            l5700 1F72                            l5620 1D7E  
                          l5612 1D56                            l5604 1D0C                            l5540 1B44  
                          l5532 1B34                            l5524 1B24                            l5516 1B14  
                          l5508 1ADC                            l4740 31DE                            l4732 3154  
                          l4724 30D2                            l4716 3050                            l6172 4636  
                          l6164 45EE                            l6156 45AE                            l4388 56F2  
                          l3588 40D4                            l3596 4426                            l3692 4AF2  
                          l3684 4A98                            l3676 4A5A                            l3940 2E1E  
                          l3932 2DC8                            l3924 2D6E                            l4396 5112  
                          l6084 380A                            l6076 37D2                            l6068 37C4  
                          l6180 4B20                            l5188 4926                            l5196 576C  
                          l6148 4ED0                            l6244 3EAE                            l6236 3E9E  
                          l6228 3E50                            l4494 4220                            l4486 41D8  
                          l4478 41A0                            l4910 3332                            l4902 32DE  
                          l5294 2D10                            l5286 2CB8                            l5278 2C60  
                          l4654 2A36                            l4646 29EE                            l4638 2990  
                          l4590 2810                            l4582 27D2                            l4574 27AE  
                          l4566 277C                            l4558 2752                            l4670 3AD6  
                          l5702 1F82                            l5622 1D86                            l5614 1D60  
                          l5606 1D32                            l5630 1DAA                            l5550 1B58  
                          l5542 1B48                            l5534 1B38                            l5526 1B28  
                          l5518 1B18                            l5470 1A14                            l4750 327A  
                          l4742 31FC                            l4734 3178                            l4726 30F2  
                          l4718 3070                            l6174 469E                            l6166 45FA  
                          l6158 45B2                            l3598 442A                            l3694 4B06  
                          l3686 4AAC                            l3678 4A6A                            l3950 2EBE  
                          l3942 2E24                            l3934 2DE2                            l3926 2D96  
                          l4398 512E                            l6094 3836                            l6086 3826  
                          l6078 37DE                            l6190 4B62                            l6182 4B36  
                          l5198 5776                            l6238 3EA8                            l4496 422C  
                          l4488 41E4                            l4920 3384                            l4912 3336  
                          l4904 32FA                            l5296 2D12                            l5288 2CBA  
                          l4656 2A3C                            l4648 2A08                            l4592 2820  
                          l4568 2792                            l4680 3B4E                            l4672 3B1C  
                          l5720 2004                            l5712 1FCC                            l5704 1F88  
                          l5640 1DFC                            l5632 1DAE                            l5624 1D8A  
                          l5616 1D6E                            l5608 1D42                            l5560 1BD0  
                          l5552 1B82                            l5544 1B4C                            l5536 1B3C  
                          l5528 1B2C                            l5480 1A50                            l5472 1A20  
                          l4752 3292                            l4744 3214                            l4736 3190  
                          l4728 310A                            l6176 46A8                            l6168 4612  
                          l4760 5624                            l3688 4AC0                            l3960 2F66  
                          l3952 2EC4                            l3944 2E2C                            l3936 2DFE  
                          l3928 2DB6                            l6096 383A                            l6088 382C  
                          l6192 4BA8                            l6184 4B3A                            l6280 3F24  
                          l6272 3EC8                            l4498 423C                            l4930 33E6  
                          l4922 3386                            l4914 335C                            l4906 330E  
                          l5298 2D24                            l4770 572C                            l4658 2A3E  
                          l4594 2830                            l4586 27E6                            l4578 27C2  
                          l4690 3BD6                            l4682 3B5A                            l4674 3B32  
                          l4666 3AB8                            l5810 47E8                            l5730 204E  
                          l5722 201C                            l5714 1FD8                            l5706 1FA8  
                          l5650 1E62                            l5642 1E08                            l5634 1DBC  
                          l5626 1D9A                            l5618 1D70                            l5570 1C10  
                          l5562 1BD4                            l5554 1B9E                            l5546 1B50  
                          l5538 1B40                            l5490 1A80                            l5482 1A60  
                          l5474 1A2E                            l5802 52CE                            l4754 32C8  
                          l4746 324A                            l4738 31CC                            l4762 5626  
                          l3698 5460                            l3970 2FCC                            l3962 2F80  
                          l3954 2ECA                            l3946 2E36                            l3938 2E10  
                          l6098 3846                            l6194 4BC4                            l6186 4B52  
                          l6290 3F92                            l6282 3F3E                            l6274 3EDC  
                          l4940 343E                            l4932 33FE                            l4924 33A8  
                          l4916 3370                            l4908 331A                            l4772 5732  
                          l4596 2838                            l4588 2800                            l4692 3BE2  
                          l4684 3B8C                            l4668 3AC8                            l5820 4856  
                          l5812 47F8                            l5740 20A4                            l5732 205E  
                          l5724 2028                            l5716 1FE2                            l5708 1FB8  
                          l5660 1EAA                            l5652 1E72                            l5644 1E16  
                          l5636 1DD2                            l5628 1D9C                            l5580 1C52  
                          l5572 1C20                            l5564 1BE2                            l5556 1BAE  
                          l5548 1B54                            l5492 1A92                            l5484 1A62  
                          l5476 1A30                            l5804 52DE                            l5900 2500  
                          l4748 325C                            l4764 5628                            l4756 5614  
                          l3972 2FD2                            l3980 3008                            l3964 2F9A  
                          l3948 2E3C                            l3956 2F2E                            l4780 5606  
                          l6196 4BDC                            l6188 4B5E                            l6292 3F92  
                          l6284 3F58                            l6276 3EFE                            l4950 34E0  
                          l4942 3462                            l4934 3400                            l4926 33C0  
                          l4598 2848                            l4694 3BF0                            l4686 3B8E  
                          l4678 3B46                            l3990 57DC                            l5822 4864  
                          l5814 4826                            l5750 2148                            l5742 20C0  
                          l5734 206A                            l5726 2034                            l5718 1FF8  
                          l5830 5514                            l5662 1EAC                            l5654 1E92  
                          l5646 1E50                            l5590 1C80                            l5582 1C60  
                          l5566 1BE4                            l5558 1BC4                            l5494 1A94  
                          l5478 1A40                            l5486 1A6A                            l5910 267A  
                          l5902 256C                            l4766 562A                            l4758 561E  
                          l3974 2FE4                            l3958 2F48                            l3966 2FAA  
                          l6286 3F76                            l6278 3F10                            l4960 3544  
                          l4952 34E2                            l4944 348E                            l4936 3424  
                          l4928 33C2                            l4696 3C0E                            l4688 3B9A  
                          l3984 57F8                            l3992 57EE                            l5840 46CA  
                          l5824 48B4                            l5816 4836                            l5808 47BA  
                          l5760 219E                            l5752 2156                            l5744 20CC  
                          l5736 207A                            l5728 2042                            l5680 1F00  
                          l5672 1ED4                            l5832 552A                            l5664 1EB2  
                          l5656 1E96                            l5648 1E52                            l5592 1C8A  
                          l5584 1C6C                            l5576 1C34                            l5568 1BEE  
                          l5496 1A9A                            l5488 1A7A                            l5912 269E  
                          l5904 259E                            l4768 56AE                            l3976 2FF0  
                          l3968 2FBC                            l5920 54A0                            l6288 3F8C  
                          l4962 355C                            l4954 3506                            l4946 3490  
                          l4938 343C                            l4698 3C10                            l3986 57FC  
                          l3994 57F2                            l5850 471A                            l5826 48BA  
                          l5818 4844                            l5762 21AC                            l5754 2174  
                          l5746 20E8                            l5738 2094                            l5690 1F3C  
                          l5682 1F10                            l5674 1EE0                            l5834 553A  
                          l5666 1EC0                            l5658 1EA4                            l5586 1C70  
                          l5578 1C44                            l5594 1C90                            l5498 1AA8  
                          l5906 260A                            l4970 5586                            l3978 2FF8  
                          l5930 4F68                            l4778 55EA                            l5922 54A4  
                          l4980 5752                            l4956 351E                            l4948 34B4  
                          l4964 355E                            l3996 5802                            l3988 57D8  
                          l5860 4744                            l5852 471E                            l5844 46DE  
                          l5772 2216                            l5780 225E                            l5764 21B0  
                          l5756 217E                            l5748 2112                            l5692 1F42  
                          l5684 1F20                            l5676 1EEE                            l5668 1EC2  
                          l5596 1CB6                            l5588 1C7E                            l5908 263E  
                          l5916 54DA                            l4972 5590                            l5932 4FCA  
                          l5924 54BC                            l5940 0E72                            l4958 3520  
                          l3998 5806                            l5870 476C                            l5862 474E  
                          l5854 472C                            l5846 4708                            l5838 46B2  
                          l5790 22D2                            l5782 2278                            l5774 2222  
                          l5766 21BE                            l5758 218C                            l5694 1F50  
                          l5686 1F26                            l5678 1EF0                            l5598 1CEA  
                          l4966 57C0                            l4974 55A0                            l5926 54D2  
                          l5950 1096                            l5942 0F0E                            l5934 0E14  
                          l4896 53DC                            l5872 4778                            l5864 4758  
                          l5848 470A                            l5792 22E0                            l5784 228C  
                          l5776 2230                            l5768 21EC                            l5696 1F52  
                          l5688 1F36                            l4976 55AA                            l4968 5582  
                          l5960 1174                            l5952 10AA                            l5944 0F2A  
                          l5936 0E62                            l4978 574C                            l4898 53F0  
                          l5874 4788                            l5794 22E2                            l5786 22A6  
                          l5778 225A                            l5698 1F62                            l5890 23B8  
                          l5882 22FE                            l5970 1310                            l5962 1190  
                          l5954 10C2                            l5946 0FD2                            l5938 0E66  
                          l5876 4798                            l5788 22C2                            l5796 22E8  
                          l5892 23DC                            l5884 231E                            l5980 13EE  
                          l5972 13B2                            l5964 1238                            l5956 10C6  
                          l5948 0FEE                            l5878 47A8                            l5798 22EC  
                          l5894 23FA                            l5886 2368                            l5990 1618  
                          l5982 1490                            l5974 13C6                            l5966 1254  
                          l5958 10D2                            l5888 237C                            l5992 1634  
                          l5984 14AC                            l5976 13DE                            l5968 12FC  
                          l5898 2432                            l5994 164C                            l5986 1554  
                          l5978 13E2                            l5996 167A                            l5988 1570  
                          l5998 1748                            STR_1 0E05                            STR_3 0E0D  
                          u3000 4C54                            u3001 4C50                            u3010 4C70  
                          u3011 4C6C                            u3020 4C96                            u3100 358C  
                          u3021 4C92                            u3101 3588                            u3110 3670  
                          u3030 4A6A                            u3111 366C                            u3031 4A66  
                          u3040 4A8C                            u4000 396E                    _BAUD4CONbits 000EE9  
                          u3041 4A88                            u4001 396A                            _LATE 000F7D  
                          u3050 4AE2                            u4010 3992                            u3051 4ADE  
                          u4011 398E                            _LATG 000F7F                            u3124 36CA  
                          u3060 4AF2                            u4020 3A36                            u3125 36C6  
                          u3061 4AEE                            u4021 3A32                            u3134 3734  
                          u4030 4D22                            u3070 547A                            u3135 3730  
                          u4031 4D1E                            u3071 5476                            u4040 4D3A  
                          u3080 564E                            u4041 4D36                            u3081 564A  
                          u3090 5664                            u4050 57BA                            _T2PR 000FBC  
                          u3091 5660                            u4051 57B6                            u4300 43D6  
                          u4220 5030                            u4301 43D2                            u4221 502C  
                          u4310 4410                            u4230 55E4                            u4311 440C  
                          u4231 55E0                            u4320 41A0                            u5200 3506  
                          u4400 26CA                            u6000 1FB8                            u2800 49DC  
                          u3600 2F48                            u4321 419C                            u5201 3502  
                          u4401 26C6                            u6001 1FB4                            u2801 49D8  
                          u3601 2F44                            u4330 41D8                            u5210 3544  
                          u5130 335C                            u4410 26DC                            u6010 2132  
                          u2810 4A12                            u3610 2F66                            u3530 2D7E  
                          u4331 41D4                            u5211 3540                            u5131 3358  
                          u4411 26D8                            u2811 4A0E                            u3611 2F62  
                          u3531 2D78                            u3700 4D84                            u4260 4320  
                          u4340 420E                            u5220 356E                            u5140 3380  
                          u4500 2894                            u4420 26EC                            u6100 22A6  
                          u6020 218C                            u2900 40E4                            u2820 5356  
                          u3620 2F80                            u3540 2D80                            u3701 4D80  
                          u4261 431C                            u4341 420A                            u5221 356A  
                          u5141 337C                            u4501 2890                            u4421 26E8  
                          u6101 22A2                            u6021 2188                            u2901 40E0  
                          u2821 5352                            u3621 2F7C                            u3710 4DA8  
                          u4270 4358                            u4350 4220                            u5150 33A8  
                          u4510 28B8                            u4430 2730                            u6110 22E0  
                          u6030 21AC                            u2910 4438                            u2830 5574  
                          u3630 2F9A                            u3550 2D96                            u3711 4DA4  
                          u4271 4354                            u4351 421C                            u5151 33A4  
                          u4511 28B4                            u4431 272C                            u6111 22DC  
                          u6031 21A8                            u6015 2128                            u2911 4434  
                          u2831 5570                            u3631 2F96                            u3551 2D92  
                          u3720 4DF2                            u4280 438E                            u4360 4256  
                          u5160 33E6                            u5400 2D24                            u5320 2A66  
                          u4600 29D8                            u4520 28CE                            u4440 2742  
                          u6200 472C                            u6120 47E8                            u6040 21BE  
                          u2840 3FB0                            u2920 446A                            u3640 2FAA  
                          u3560 2DC6                            u3721 4DEE                            u4281 438A  
                          u4361 4252                            u5161 33E2                            u5401 2D20  
                          u5321 2A62                            u4601 29D4                            u4521 28CA  
                          u4441 273E                            u6201 4728                            u6121 47E4  
                          u6041 21BA                            u2841 3FAC                            u2921 4466  
                          u3641 2FA6                            u3561 2DC2                            u3730 4E0A  
                          u4290 43A0                            u4370 4290                            u5170 3424  
                          u5330 2ABC                            u4610 2A08                            u4530 28EC  
                          u4450 2752                            u6210 4740                            u6130 4826  
                          u6050 21EC                            u2850 3FE2                            u2930 44A8  
                          u3650 2FBC                            u3570 2DE2              verify_color@color2 00A3  
                          u3731 4E06                            u4291 439C                            u4371 428C  
                          u5171 3420                            u5331 2AB8                            u4611 2A04  
                          u4531 28E8                            u4451 274E                            u6211 473C  
                          u6131 4822                            u6051 21E8                            u2851 3FDE  
                          u2931 44A4                            u3651 2FB8                            u3571 2DDE  
            verify_color@color3 00A1                            u4380 4F4E                            u5180 3462  
                          u5340 2B14                            u4620 2A36                            u4540 290C  
                          u4460 2792                            u4700 3C0E                            u6220 4768  
                          u6140 4844                            u6060 2202                            u6300 2500  
                          u2940 44D2                            u2780 49A2                            u3660 2FCC  
                          u3580 2E10                            u4381 4F4A                            u5181 345E  
                          u5341 2B10                            u4621 2A32                            u4541 2908  
                          u4461 278E                            u4701 3C0A                            u6221 4764  
                          u6141 4840                            u6061 21FE                            u6301 24FC  
                          u2861 400C                            u2941 44CE                            u2781 499E  
                          u3661 2FC8                            u3581 2E0C                            u4390 4F66  
                          u5190 34B4                            u5350 2B6C                            u4550 291E  
                          u4470 27D2                            u4710 3C48                            u4630 3AC8  
                          u6230 4788                            u6150 4864                            u6070 2216  
                          u6310 259E                            u2870 4030                            u2950 4500  
                          u2790 49B4                            u3670 2FE4                            u3590 2E1E  
                          u4391 4F62                            u7007 4232                            u5191 34B0  
                          u5351 2B68                            u4551 291A                            u4471 27CE  
                          u4711 3C44                            u4631 3AC4                            u6231 4784  
                          u6151 4860                            u6071 2212                            u6311 259A  
                          u2871 402C                            u2951 44FC                            u2791 49B0  
                          u3671 2FE0                            u3591 2E1A                            u5360 2BC4  
                          u4560 294C                            u4480 2848                            u4720 3C56  
                          u4640 3AD6                            u3680 53C4                            u6240 4798  
                          u6160 48B4                            u6080 2230                            u5600 1ACA  
                          u6320 265E                            u2880 405A                            u2960 4548  
                          u6400 1862                            u7017 426C                            u5361 2BC0  
                          u4561 2948                            u4481 2844                            u4721 3C52  
                          u4641 3AD2                            u3681 53BC                            u6241 4794  
                          u6161 48B0                            u6081 222C                            u5601 1AC6  
                          u2881 4056                            u2961 4544                            u6401 185E  
                          u2970 4BF6                            u5370 2C1C                            u4570 2962  
                          u4490 286A                            u4650 3B32                            u6090 2278  
                          u6170 552A                            u5610 1B06                            u6330 267A  
                          u6250 233E                            u4810 311C                            u4730 3050  
                          u2890 409A                            u6410 18AC                            u2971 4BF2  
                          u7107 4E14                            u7027 4300                            u5371 2C18  
                          u4571 295E                            u4491 2866                            u4651 3B2E  
                          u6091 2274                            u6171 5526                            u5611 1B02  
                          u6331 2676                            u4811 3114                            u4731 304C  
                          u2891 4096                            u6411 18A8                            u2980 4C10  
                          u5380 2C74                            u4580 2976                            u4660 3B88  
                          u6180 46CA                            u5700 1C20                            u5620 1B14  
                          u5540 1A2E                            u6260 2368                            u4740 3062  
                          u6500 37BE                            u6340 54BC                            u6420 18C4  
                          u2981 4C0C                            u7117 4F2E                            u7037 436A  
                          u5381 2C70                            u4581 2972                            u4661 3B84  
                          u6181 46C6                            u5701 1C1C                            u5621 1B10  
                          u5541 1A2A                            u6325 2654                            u6261 2364  
                          u4741 305A                            u6501 37BA                            u6341 54B8  
                          u6421 18C0                            u2990 4C36                            u5390 2CCC  
                          u4590 2990                            u4670 3BD2                            u6190 46FE  
                          u5710 1C52                            u5630 1B82                            u5550 1A40  
                          u6270 239C                            u4910 3226                            u4830 3154  
                          u6510 3826                            u6350 54D2                            u6430 18E4  
                          u7127 575C                            u2991 4C32                            u7047 43B2  
                          u5391 2CC8                            u4591 298C                            u4671 3BCE  
                          u5711 1C4E                            u5631 1B7E                            u5551 1A3C  
                          u6255 2334                            u4911 321E                            u4831 3150  
                          u6511 3822                            u6351 54CE                            u6431 18E0  
                          u4680 3BF0                            u5800 1D9A                            u5720 1C60  
                          u5640 1B9A                            u5560 1A50                            u6280 23B8  
                          u4840 3166                            u4808 30E6                            u4760 309A  
                          u6520 388E                            u6440 1918                            u6360 167A  
                          u7057 43EC                            u4681 3BEC                            u5801 1D96  
                          u5721 1C5C                            u5641 1B94                            u5561 1A4C  
                          u6281 23B4                            u4841 315E                            u4761 3092  
                          u6521 388A                            u6441 1914                            u6361 1676  
                          u4690 3C00                            u3698 53C6                            u5810 1DAA  
                          u5730 1C7E                            u5650 1B9C                            u5570 1A92  
                          u6290 23FA                            u4930 325C                            u6530 38F6  
                          u6450 194A                            u6370 1748                            u7067 543C  
                          u4691 3BFC                            u6195 46F4                            u5811 1DA6  
                          u5731 1C7A                            u5571 1A8E                            u6291 23F6  
                          u6275 2392                            u4931 3258                            u6531 38F2  
                          u6451 1946                            u6371 1744                            u5900 1E92  
                          u5820 1DBC                            u5740 1CB6                            u5660 1BC4  
                          u5580 1AA8                            u4940 326E                            u4908 31F2  
                          u4860 31A2                            u4828 311E                            u4780 30D2  
                          u6460 1978                            u6380 178A                            u6540 4EB2  
                          u7077 4D02                            u5901 1E8E                            u5821 1DB8  
                          u5741 1CB2                            u5661 1BC0                            u5581 1AA4  
                          u4941 3266                            u4861 319A                            u4781 30CE  
                          u6461 1974                            u6381 1786                            u6541 4EAE  
                          u5910 1EA4                            u5830 1DD2                            u5750 1CFC  
                          u5670 1BE2                            u5590 1ABA                            u4790 30E4  
                          u4758 3064                            u3990 3926                            u6470 19A6  
                          u6390 184A                            u6550 4ECA                            u7087 4D44  
                          u5911 1EA0                            u5831 1DCE                            u5751 1CF8  
                          u5671 1BDE                            u5591 1AB6                            u4791 30DC  
                          u3991 3922                            u6471 19A2                            u6391 1846  
                          u6551 4EC6                            u6607 3F30                            u5920 1EC0  
                          u5840 1DE8                            u5760 1D32                            u5680 1C02  
                          u4960 32A4                            u4928 3228                            u4880 31DE  
                          u6560 4BDC                            u6480 19DA                            u7097 4DD2  
                          u5921 1EBC                            u5841 1DE4                            u5761 1D2E  
                          u5681 1BFE                            u4961 329C                            u4881 31DA  
                          u6561 4BD8                            u6481 19D6                            u6617 4E32  
                          u5930 1EEE                            u5850 1DFC                            u5770 1D42  
                          u5690 1C10                            u4890 31F0                            u4858 3168  
                          u4778 309C                            u6490 1A08                            u6570 3F10  
                          u5931 1EEA                            u5851 1DF8                            u5771 1D3E  
                          u5691 1C0C                            u4891 31E8                            u6707 37F6  
                          u6491 1A04                            u6627 4E68                            u6571 3F0C  
                          u5940 1F00                            u5860 1E16                            u5780 1D6E  
                          u4980 32DC                            u5941 1EFC                            u5861 1E12  
                          u5781 1D6A                            u4981 32D8                            u6717 385E  
                          u6637 10B4                            u5950 1F10                            u5870 1E50  
                          u5790 1D7E                            u4958 3270                            u4878 31A4  
                          u5951 1F0C                            u5871 1E4C                            u5791 1D7A  
                          u6807 571C                            u6727 38C6                            u6647 13D0  
                          u5960 1F50                            u5880 1E62                            u5961 1F4C  
                          u5881 1E5E                            u6817 45BC                            u6737 5596  
                          u6657 163E                            u5970 1F62                            u5890 1E72  
                          u4978 32A6                            u5971 1F5E                            u5891 1E6E  
                          u6907 31BE                            u6827 45E0                            u6747 3CBC  
                          u6667 50B6                            u6587 3E66                            u5980 1F72  
                          u5981 1F6E                            u6917 3206                            u6837 4604  
                          u6757 3D20                            u6677 50E0                            u6597 3E8C  
                          u5990 1FA8                            u5991 1FA4                            u6927 323C  
                          u6847 4628                            u6767 3D84                            u6687 4B44  
                          u6937 3284                            u6857 307A                            u6777 3E00  
                          u6697 378E                            u6947 32BA                            u6867 30B2  
                          u6787 56DC                            u6957 573C                            u6877 30FC  
                          u6797 56FC                            u6967 53FA                            u6887 3134  
                          u6977 3324                            u6897 3182                            u6987 4180  
                          u6997 41EA                            abs@a 0015                            _dbuf 0191  
                          _main 3E10                            _dtoa 2D4E                            _prec 00EF  
                          _nout 00EB                            pad@i 001A                            pad@p 0017  
                          fsr1h 000FE2                            fsr2h 000FDA                            indf1 000FE7  
                          indf2 000FDF                            fsr1l 000FE1                            pad@w 001C  
                          fsr2l 000FD9                            btemp 005C                            _stop 4D68  
                          prodh 000FF4                            prodl 000FF3                            start 0048  
                ?_color_display 0079                 ___fldiv@new_exp 0022          __end_of_color_read_Red 5192  
               __end_of_HighISR 5810                    ___param_bank 000000                  ?_color_predict 0001  
                         ??_abs 0017                           ??_pad 0019                   ___fltol@sign1 004F  
               __end_of___aodiv 4126       amb_light_measure@CC_amb_1 0080       amb_light_measure@CC_amb_2 0082  
     amb_light_measure@CC_amb_3 0084                 __end_of___fladd 1ED4                           ?_main 0001  
                         ?_dtoa 001E                 __end_of___aomod 458A                 __end_of___fldiv 2A4A  
               __end_of___awdiv 4CA8                 __end_of___flneg 554C                 __end_of___flmul 22FE  
               __end_of___flsub 5314                 __end_of___fltol 47BA                           ?_stop 001C  
               ___awdiv@divisor 000B                           _LED_B 570C                           _LED_C 572C  
                         _LED_G 56EC                           _LED_R 56CC                           i1l728 003C  
                         i2l722 580C                 ___awdiv@counter 000D                    vfpfcnvrt@fmt 0044  
                         _TMR0H 000FD4                           _TMR0L 000FD3         __end_of_sendCharSerial4 57C0  
    __end_of_I2C_2_Master_Start 5802         ??_color_data_collection 00E1      __end_of_I2C_2_Master_Write 57E2  
               __end_of_compare 54DA                    compare@lower 007A                           _flags 00F1  
                         _color 0190                    compare@upper 007E                           _fputc 4990  
                         _fputs 5314                           pad@fp 0013                           _width 00ED  
                         _putch 5814                           _toint 0E01                           dtoa@d 0020  
                         dtoa@i 0040                           dtoa@n 0038                           dtoa@p 0032  
                         dtoa@s 0036                           dtoa@w 0034            amb_light_measure@amb 007A  
                         tablat 000FF5                 __end_of_lroundf 5514                           ttemp5 005D  
                         ttemp6 0060                           ttemp7 0064                           status 000FD8  
                         wtemp8 005D                 __end_of_sprintf 5142                color_display@buf 007B  
       __end_of_color_read_Blue 5232           _I2C_2_Master_RepStart 5802                 ??_short_reverse 002C  
               ?_color_read_Red 0007                 __initialization 5282                   short_burst@mL 0022  
                 short_burst@mR 0024                    __end_of_main 3F9E                    __end_of_dtoa 3032  
                 main@amb_light 01BB            __end_of_detect_color 1A14                    __end_of_stop 4E24  
        color_data_collection@i 00E3          color_data_collection@j 00E5          color_data_collection@k 00E7  
        color_data_collection@m 00DF          color_data_collection@x 00E9                          ??_main 01B1  
                        ??_dtoa 0028                          ??_stop 0020                   __activetblptr 000001  
                        ?_LED_B 0001                          ?_LED_C 0001                          ?_LED_G 0001  
                        ?_LED_R 0001                 _buggylight_init 57C0                       ??_LED_OFF 0003  
        _initDCmotors_parameter 48BE                    ?_setMotorPWM 0011                          ?_fputc 0003  
                        ?_fputs 000C                ___awdiv@dividend 0009                          ?_putch 0001  
                        _RC0PPS 000E62                          _RC4REG 000EE3                          _RE2PPS 000E74  
                        _RD5PPS 000E6F                          _RC7PPS 000E69                          _RD6PPS 000E70  
                        i1l5464 0022                          i1l5466 0032                          i1l5468 0038  
            turnLeft@angle_left 0026                       ??_HighISR 0001        __end_of_color_click_init 55B6  
                        _RX4PPS 000E15                          _TX4REG 000EE4                 ??_color_display 005A  
              __end_of___xxtofl 3C6A                          _LowISR 0018                   ??_Timer0_init 0003  
               ??_color_predict 005A                    vfprintf@cfmt 0058                          ___flge 47BA  
                     ??___aodiv 0013                       ??___fladd 000B                       ??___aomod 0013  
                        ___wmul 5666                       ??___fldiv 0019                       ??___awdiv 000D  
                     ??___flneg 0007                       ??___flmul 0032                          _action 2A4A  
                     ??___flsub 001B                       ??___fltol 004B                          _goback 32DE  
                 compare@result 0051                          _memory 013C                          clear_0 52A6  
                        clear_1 52B2                ___awdiv@quotient 000F                          _second 00F7  
                        _motorL 0182                          _motorR 0178                          isa$std 000001  
                        pad@buf 0015                          _roundf 22FE                          dtoa@fp 001E  
                        _strlen 554C                       ??_compare 0051                   toggle_light@i 0006  
              __end_of_pin_init 56AC                          fputc@c 0003         toggle_light@lightnumber 0007  
                        fputs@c 0010                          fputs@i 0011                          fputs@s 000C  
                  __mediumconst 0000                          tblptrh 000FF7                          tblptrl 000FF6  
                        tblptru 000FF8                ?_sendCharSerial4 0001                       ??_lroundf 0051  
                   read_color@m 000E                          putch@c 0001                __end_of_vfprintf 503A  
                        stop@mL 001C                          stop@mR 001E               ??_initDCmotorsPWM 0005  
                     ??_sprintf 005A                __end_of_turnLeft 4426                      ___flge@ff1 0003  
                    ___flge@ff2 0007                    ___xxtofl@arg 000D                    ___xxtofl@exp 000C  
                  ___xxtofl@val 0003                    ?_short_burst 0022                calibrate_white@w 000E  
               fullSpeedBack@mL 0022                 fullSpeedBack@mR 0024                      __accesstop 0060  
       __end_of__initialization 52BC                   verify_color@m 009D                   verify_color@w 009F  
      __end_of_color_read_Clear 5282                      ___flneg@f1 0003        __end_of_color_read_Green 51E2  
        ?_I2C_2_Master_RepStart 0001              color_predict@color 00DD    initDCmotors_parameter@motorL 0003  
  initDCmotors_parameter@motorR 0005                   ___rparam_used 000001                      ___fltol@f1 0072  
                 __end_of_LED_B 572C                   __end_of_LED_C 574C                   __end_of_LED_G 570C  
                 __end_of_LED_R 56EC                ?_color_read_Blue 0007                 _Interrupts_init 57E2  
                __pcstackCOMRAM 0001                   _fullSpeedBack 4CA8                    __pidataBANK0 5810  
       __end_of_buggylight_init 57D6            turnRight@angle_right 0026           _distance_measure$3190 0082  
                 __end_of_fputc 4A5A               detect_color@color 0096                   __end_of_fputs 5358  
                 __end_of_putch 5816                   __end_of_toint 0E05             __end_of_Timer0_init 57A8  
                       ??_LED_B 0003                         ??_LED_C 0003                         ??_LED_G 0003  
                       ??_LED_R 0003               ?_distance_measure 007A              ??_distance_measure 0051  
                       ??_fputc 0007                         ??_fputs 0010                         ??_putch 0003  
                    __pbssBANK0 00EB                      __pbssBANK1 0100                color_predict@buf 0079  
     distance_measure@amb_light 007E                         ?_LowISR 0001               _color_writetoaddr 56AC  
                  _T2CLKCONbits 000FBF                  ?_fullSpeedBack 0022                         ?___flge 0003  
            ?_color_writetoaddr 0005                         ?___wmul 0003                         ?_action 003C  
                       ?_goback 0034                         ?_roundf 0043             ??_color_writetoaddr 0006  
                       ?_strlen 0003                         _LED_OFF 574C                       ?___xxtofl 0003  
                       _SP4BRGH 000EE6                         _SP4BRGL 000EE5                         _PWM6DCH 000FA3  
                       _PWM7DCH 000FA0                         _SSP2ADD 000ED6                         _SSP2BUF 000ED5  
  amb_light_measure@upper_bound 007C                    _detect_color 0E14   __end_of_color_data_collection 3902  
       __end_of_Interrupts_init 57EE          color_writetoaddr@value 0005                ??_color_read_Red 0009  
                       _HighISR 0008       __end_of_color_writetoaddr 56CC              _I2C_2_Master_Start 57F8  
                    _initUSART4 576C              _I2C_2_Master_Write 57D6                       ?_pin_init 0001  
                       __Hparam 0000                         __Lparam 0000               color_read_Red@tmp 000C  
                   _Timer0_init 578A         sendStringSerial4@string 0004                         ___aodiv 3F9E  
                       ___fladd 1A14                         ___aomod 4426                         ___fldiv 26B0  
                       ___awdiv 4BE4                         ___flneg 5514                         ___flmul 1ED4  
                       ___flsub 52CE                         ___fltol 46B2             ?_I2C_2_Master_Start 0001  
              ?_buggylight_init 0001             ?_I2C_2_Master_Write 0001                       ?_vfprintf 0052  
                  __psmallconst 0E00       distance_measure@threshold 0088                         __pcinit 5282  
                       __ramtop 0E00                      _read_color 503A                       ?_turnLeft 0022  
                       __ptext0 3E10                         __ptext1 4E24                         __ptext2 0E14  
                       __ptext3 54A0                         __ptext4 5098                         __ptext5 568C  
                       __ptext6 576C                         __ptext7 48BE                         __ptext8 5358  
                       __ptext9 4B20                         _compare 54A0         ?_initDCmotors_parameter 0003  
                     _T2CONbits 000FBD                      ??___xxtofl 0007                       _T2HLTbits 000FBE  
                       _lroundf 54DA                   _RxBufWriteCnt 00FB                         goback@i 003A  
        distance_measure@CC_amb 0086                         main@amb 01B3          distance_measure@CG_amb 0080  
                       _sprintf 50F0                         main@rgb 01BE            ??_I2C_2_Master_Start 0004  
          ??_I2C_2_Master_Write 0004                  __pintcode_body 580C            end_of_initialization 52BC  
            setMotorPWM@PWMduty 001A                 _CALIBRATION_135 00FE                 _CALIBRATION_180 00FD  
                       fputc@fp 0005                         int_func 580C                         fputs@fp 000E  
             ?_color_click_init 0001                 ??_fullSpeedBack 0026                      ??_pin_init 0003  
            ??_color_click_init 0007               __end_of_vfpfcnvrt 3AB6           __end_of_short_reverse 541E  
                       postdec1 000FE5                         postdec2 000FDD                         postinc0 000FEE  
                       postinc1 000FE6                         postinc2 000FDE                         roundf@e 0064  
                       roundf@u 006A                         roundf@x 0043                         roundf@y 006E  
                    ??_vfprintf 0058                         strlen@a 0005                         strlen@s 0003  
               _initDCmotorsPWM 5358                      ??_turnLeft 0027  __end_of_initDCmotors_parameter 4990  
                     _PORTFbits 000F8E               __end_of_turnRight 42A6                     ___fladd@grs 0012  
                 ___xxtofl@sign 000B                       _TRISAbits 000F81                       _TRISCbits 000F83  
                     _TRISDbits 000F84                       _TRISEbits 000F85                       _TRISFbits 000F86  
                     _TRISGbits 000F87                       _TRISHbits 000F88                     ___fldiv@grs 0024  
                   ___fldiv@rem 001D                fullSpeedAhead@mL 001C                fullSpeedAhead@mR 001E  
      color_writetoaddr@address 0006         ??_I2C_2_Master_RepStart 0004                      _start_move 00F5  
              ?_Interrupts_init 0001                     ___flmul@grs 0038                   ?_toggle_light 0003  
             ?_color_read_Clear 0007                    _EUSART4RXbuf 0164                    _EUSART4TXbuf 0100  
             ?_color_read_Green 0007                     ?_initUSART4 0001       sendCharSerial4@charToSend 0003  
                 ?_verify_color 009D           __end_of_color_display 4FD8                      main@motorL 01E0  
                    main@motorR 01EA     amb_light_measure@CC_amb_ave 007E               ??_calibrate_white 0010  
            ??_color_read_Clear 0009                  color_display@m 0079              ??_color_read_Green 0009  
                detect_color@BB 0094                  detect_color@BG 0097                  detect_color@GB 0086  
                detect_color@GC 0088                  detect_color@GG 008E                  detect_color@BR 0092  
                detect_color@GR 008C                  detect_color@RB 0084                  detect_color@RG 008A  
                detect_color@RR 0090                  __end_of_LowISR 0048           __end_of_color_predict 5614  
                __end_of___flge 48BE                  _fullSpeedAhead 4ED4                     vfpfcnvrt@ap 0046  
                   vfpfcnvrt@fp 0042                     vfpfcnvrt@ll 004A                  __end_of___wmul 568C  
                __end_of_action 2D4E                     ?_read_color 000E                  __end_of_goback 3570  
                __end_of_roundf 26B0              turnRight@delay_135 0028              turnRight@delay_180 002A  
                __end_of_strlen 5582             color_read_Clear@tmp 000C             start_initialization 5282  
                   __end_of_abs 54A0                     __end_of_pad 4B20                   _TxBufWriteCnt 005B  
             turnLeft@delay_135 0028               turnLeft@delay_180 002A                  ??_toggle_light 0004  
                ??_verify_color 0056             color_read_Green@tmp 000C                        ??_LowISR 0001  
                _reverse_square 541E         __end_of_initDCmotorsPWM 539A                     vfprintf@fmt 0054  
        __end_of_fullSpeedAhead 4F68                        ??___flge 000B                        ??___wmul 0007  
                      ??_action 0040                        ??_goback 0038                 short_reverse@mL 0028  
               short_reverse@mR 002A                     __pdataBANK0 00FC                        ??_roundf 0047  
                      ??_strlen 0005                       ___fladd@a 0007                       ___fladd@b 0003  
                      ?_LED_OFF 0001                       ___fldiv@a 0015                       ___fldiv@b 0011  
                     ___flmul@a 002E                       ___flmul@b 002A                     __pbssCOMRAM 005A  
                     ___flsub@a 0017                       ___flsub@b 0013                   __pcstackBANK0 0060  
                 __pcstackBANK1 01B1                ___aodiv@dividend 0003                        ?_HighISR 0001  
        __end_of_reverse_square 5460                       _dtoa$2826 0030                    ?_Timer0_init 0001  
               ?_fullSpeedAhead 001C                       __pintcode 0008                        ?___aodiv 0003  
                      ?___fladd 0003                        ?___aomod 0003                        ?___fldiv 0011  
                      ?___awdiv 0009                ___aodiv@quotient 0015                        ?___flneg 0003  
                      ?___flmul 002A                        ?___flsub 0013                        ?___fltol 0072  
                   __pintcodelo 0018                 turnRight@i_1445 002E                 turnRight@i_1446 0030  
                turnLeft@i_1420 002E                  turnLeft@i_1421 0030            I2C_2_Master_Read@ack 0005  
          I2C_2_Master_Read@tmp 0006                        ?_compare 007A                     __smallconst 0E00  
             _I2C_2_Master_Idle 563E               _I2C_2_Master_Init 5614               _I2C_2_Master_Read 539A  
             _I2C_2_Master_Stop 57EE          toggle_light@toggletime 0003                    _RxBufReadCnt 00FA  
                      ?_lroundf 0076              ?_I2C_2_Master_Idle 0001              ?_I2C_2_Master_Init 0001  
            ?_I2C_2_Master_Read 0001                   ??_setMotorPWM 0013              ?_I2C_2_Master_Stop 0001  
      initDCmotorsPWM@PWMperiod 0003                        ?_sprintf 0060               _sendStringSerial4 55B6  
         _color_data_collection 3744             ??_I2C_2_Master_Idle 0003             ??_I2C_2_Master_Init 0003  
           ??_I2C_2_Master_Read 0004                  ___wmul@product 0007                        _LATAbits 000F79  
           ??_I2C_2_Master_Stop 0004                        _LATCbits 000F7B                        _LATDbits 000F7C  
                      _LATEbits 000F7D                        _LATFbits 000F7E                        _LATGbits 000F7F  
                      _LATHbits 000F80                 ?_reverse_square 0028                        _PIE0bits 000E29  
            ?_sendStringSerial4 0004                        _PIE4bits 000E2D                     turnRight@mL 0022  
                   turnRight@mR 0024                        i1u553_20 0032                        i1u553_21 002E  
                      _PIR0bits 000E33                        _PIR4bits 000E37                ?_initDCmotorsPWM 0003  
             ??_sendCharSerial4 0003                        _SSP2CON2 000EDA             ??_sendStringSerial4 0006  
                      _SSP2STAT 000ED8                     _array_index 005A                       _vfpfcnvrt 3902  
     __end_of_I2C_2_Master_Idle 5666            __end_of_toggle_light 32DE       __end_of_I2C_2_Master_Init 563E  
     __end_of_I2C_2_Master_Read 53DC               ___wmul@multiplier 0003       __end_of_I2C_2_Master_Stop 57F8  
                  setMotorPWM@m 0011     I2C_2_Master_Write@data_byte 0004            __end_of_verify_color 4ED4  
                     main@white 01C6               ??_color_read_Blue 0009                       _stop_move 00F3  
                 detect_color@m 0080                   detect_color@w 0082                    _TxBufReadCnt 00F9  
                     _turnRight 4126                 _calibrate_white 3C6A       __end_of_sendStringSerial4 55E6  
                 ??_short_burst 0026               _amb_light_measure 458A   __end_of_I2C_2_Master_RepStart 580C  
            color_read_Blue@tmp 000C             __end_of_setMotorPWM 3744                      roundf@F527 018C  
              _distance_measure 4B20                    ??_initUSART4 0003              ?_amb_light_measure 007A  
                      __Hrparam 0000                      vfprintf@ap 0056                        __Lrparam 0000  
                    vfprintf@fp 0052           __end_of_fullSpeedBack 4D68                    __Lsmallconst 0E00  
          compare@value2compare 007C             ??_amb_light_measure 0051                      ?_vfpfcnvrt 0042  
                  ??_read_color 0010                 ___aodiv@divisor 000B                 ___aodiv@counter 0013  
                    _ANSELDbits 000EA7                      _ANSELFbits 000EB4                     action@color 0042  
                    sprintf@fmt 0062                        ___xxtofl 3AB6                      _T0CON0bits 000FD5  
                    _T0CON1bits 000FD6              __end_of_initUSART4 578A                      ?_turnRight 0022  
                      __ptext10 3744                        __ptext11 503A                        __ptext20 5314  
                      __ptext12 55E6                        __ptext21 4990                        __ptext13 4F68  
                      __ptext30 5614                        __ptext22 5814                        __ptext14 50F0  
                      __ptext31 3C6A                        __ptext23 5460                        __ptext15 4FD8  
                      __ptext40 3032                        __ptext32 5142                        __ptext24 4426  
                      __ptext16 3902                        __ptext41 54DA                        __ptext33 5192  
                      __ptext25 3F9E                        __ptext17 2D4E                        __ptext50 57D6  
                      __ptext42 22FE                        __ptext34 51E2                        __ptext26 55B6  
                      __ptext18 4A5A                        __ptext51 57EE                        __ptext43 52CE  
                      __ptext35 56CC                        __ptext27 57A8                        __ptext19 554C  
                      __ptext60 53DC                        __ptext52 57F8                        __ptext44 1A14  
                      __ptext36 56EC                        __ptext28 5582                        __ptext61 32DE  
                      __ptext53 5802                        __ptext45 5514                        __ptext37 570C  
                      __ptext29 56AC                        __ptext70 4BE4                        __ptext62 4126  
                      __ptext54 539A                        __ptext46 1ED4                        __ptext38 57C0  
                      __ptext71 578A                        __ptext63 42A6                        __ptext55 563E  
                      __ptext47 47BA                        __ptext39 458A                        __ptext72 574C  
                      __ptext64 541E                        __ptext56 3AB6                        __ptext48 46B2  
                      __ptext73 57E2                        __ptext65 4CA8                        __ptext57 26B0  
                      __ptext49 5232                        __ptext66 4D68                        __ptext58 572C  
                      __ptext67 4ED4                        __ptext59 2A4A                        __ptext68 3570  
                      __ptext69 5666       __end_of_amb_light_measure 46B2                    _SSP2CON1bits 000ED9  
                  _SSP2CON2bits 000EDA          ?_color_data_collection 00DF                  turnRight@delay 0032  
                 turnLeft@delay 0032                        action@mL 003C                        action@mR 003E  
                    turnLeft@mL 0022                      turnLeft@mR 0024              __end_of_read_color 5098  
                      _pin_init 568C                      turnRight@i 002C             __end_of_short_burst 50F0  
                      isa$xinst 000000            distance_measure@stop 008A                      _RC4STAbits 000EE7  
                      int$flags 005C                     _SENSITIVITY 00FC                        goback@mL 0034  
                      goback@mR 0036                        _vfprintf 4FD8                        _turnLeft 42A6  
              ___aomod@dividend 0003         __end_of_calibrate_white 3E10                      _INTCONbits 000FF2  
                   _setMotorPWM 3570                   ?_detect_color 0080                     _PWM6CONbits 000FA4  
                   _PWM7CONbits 000FA1                        intlevel1 0000                        intlevel2 0000  
                     sprintf@ap 006C               ??_buggylight_init 0003                ??_fullSpeedAhead 0020  
                     turnLeft@i 002C                reverse_square@mL 0028                reverse_square@mR 002A  
                      lroundf@x 0076        ??_initDCmotors_parameter 0007                   _short_reverse 53DC  
               ___aomod@divisor 000B                     ??_vfpfcnvrt 0048                 ___aomod@counter 0013  
              _color_click_init 5582                        sprintf@f 006E                        sprintf@s 0060  
             _detect_color$3189 0099                      _SSP2DATPPS 000E1D                      _SSP2CLKPPS 000E1C  
            distance_measure@mL 007A              distance_measure@mR 007C                  ??_detect_color 0052  
                   ??_turnRight 0027                   ___fladd@signs 000F                ??_reverse_square 002C  
                    _TX4STAbits 000EE8                    ___aodiv@sign 0014                 _sendCharSerial4 57A8  
                   _short_burst 5098                    ___fladd@aexp 0010                    ___fladd@bexp 0011  
                  _toggle_light 3032                    ___aomod@sign 0014                    _verify_color 4E24  
                   _roundf$3191 0066                     _roundf$3192 0060                   _color_display 4F68  
               main@stop_signal 01BD  
