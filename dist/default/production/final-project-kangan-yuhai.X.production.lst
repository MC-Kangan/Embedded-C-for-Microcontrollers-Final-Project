

Microchip MPLAB XC8 Assembler V2.35 build 20211206165544 
                                                                                               Thu Mar 17 14:54:06 2022

Microchip MPLAB XC8 C Compiler v2.35 (Free license) build 20211206165544 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=3
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=3
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=3
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=3
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=3
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1
    48                           	psect	text34,global,reloc=2,class=CODE,delta=1
    49                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=2
    50                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=2
    51                           	psect	text37,global,reloc=2,class=CODE,delta=1
    52                           	psect	text38,global,reloc=2,class=CODE,delta=1
    53                           	psect	text39,global,reloc=2,class=CODE,delta=1
    54                           	psect	text40,global,reloc=2,class=CODE,delta=1
    55                           	psect	text41,global,reloc=2,class=CODE,delta=1
    56                           	psect	text42,global,reloc=2,class=CODE,delta=1
    57                           	psect	text43,global,reloc=2,class=CODE,delta=1
    58                           	psect	text44,global,reloc=2,class=CODE,delta=1
    59                           	psect	text45,global,reloc=2,class=CODE,delta=1
    60                           	psect	text46,global,reloc=2,class=CODE,delta=1
    61                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=3
    62                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=3
    63                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=2
    64                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=2
    65                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=2
    66                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=2
    67                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=2
    68                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=2
    69                           	psect	text55,global,reloc=2,class=CODE,delta=1
    70                           	psect	text56,global,reloc=2,class=CODE,delta=1
    71                           	psect	text57,global,reloc=2,class=CODE,delta=1
    72                           	psect	text58,global,reloc=2,class=CODE,delta=1,group=2
    73                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=2
    74                           	psect	text60,global,reloc=2,class=CODE,delta=1
    75                           	psect	text61,global,reloc=2,class=CODE,delta=1
    76                           	psect	text62,global,reloc=2,class=CODE,delta=1
    77                           	psect	text63,global,reloc=2,class=CODE,delta=1
    78                           	psect	text64,global,reloc=2,class=CODE,delta=1
    79                           	psect	text65,global,reloc=2,class=CODE,delta=1
    80                           	psect	text66,global,reloc=2,class=CODE,delta=1
    81                           	psect	text67,global,reloc=2,class=CODE,delta=1
    82                           	psect	text68,global,reloc=2,class=CODE,delta=1
    83                           	psect	text69,global,reloc=2,class=CODE,delta=1
    84                           	psect	text70,global,reloc=2,class=CODE,delta=1
    85                           	psect	text71,global,reloc=2,class=CODE,delta=1
    86                           	psect	text72,global,reloc=2,class=CODE,delta=1
    87                           	psect	text73,global,reloc=2,class=CODE,delta=1
    88                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    89                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    90                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    91                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    92                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    93                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    94  0000                     
    95                           ; Version 2.35
    96                           ; Generated 05/05/2021 GMT
    97                           ; 
    98                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    99                           ; All rights reserved.
   100                           ; 
   101                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   102                           ; 
   103                           ; Redistribution and use in source and binary forms, with or without modification, are
   104                           ; permitted provided that the following conditions are met:
   105                           ; 
   106                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   107                           ;        conditions and the following disclaimer.
   108                           ; 
   109                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   110                           ;        of conditions and the following disclaimer in the documentation and/or other
   111                           ;        materials provided with the distribution. Publication is not required when
   112                           ;        this file is used in an embedded application.
   113                           ; 
   114                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   115                           ;        software without specific prior written permission.
   116                           ; 
   117                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   118                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   119                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   120                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   121                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   122                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   123                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   124                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   125                           ; 
   126                           ; 
   127                           ; Code-generator required, PIC18F67K40 Definitions
   128                           ; 
   129                           ; SFR Addresses
   130  0000                     
   131                           	psect	idataBANK0
   132  005CD4                     __pidataBANK0:
   133                           	callstack 0
   134                           
   135                           ;initializer for _SENSITIVITY
   136  005CD4  0064               	dw	100
   137                           
   138                           	psect	smallconst
   139  000E00                     __psmallconst:
   140                           	callstack 0
   141  000E00  00                 	db	0
   142  000E01  0000               	dw	0
   143  000E03  4B00               	dw	19200
   144  000E05                     __end_of_toint:
   145                           	callstack 0
   146  0000                     _TX4REG	set	3812
   147  0000                     _RC4STAbits	set	3815
   148  0000                     _SP4BRGH	set	3814
   149  0000                     _LATEbits	set	3965
   150  0000                     _TRISEbits	set	3973
   151  0000                     _LATFbits	set	3966
   152  0000                     _LATGbits	set	3967
   153  0000                     _TRISGbits	set	3975
   154  0000                     _LATHbits	set	3968
   155  0000                     _TRISHbits	set	3976
   156  0000                     _SSP2CON2bits	set	3802
   157  0000                     _LATG	set	3967
   158  0000                     _LATE	set	3965
   159  0000                     _RX4PPS	set	3605
   160  0000                     _SSP2CLKPPS	set	3612
   161  0000                     _SSP2DATPPS	set	3613
   162  0000                     _ANSELDbits	set	3751
   163  0000                     _ANSELFbits	set	3764
   164  0000                     _TRISFbits	set	3974
   165  0000                     _SSP2BUF	set	3797
   166  0000                     _SSP2ADD	set	3798
   167  0000                     _SSP2CON1bits	set	3801
   168  0000                     _LATAbits	set	3961
   169  0000                     _LATDbits	set	3964
   170  0000                     _TRISDbits	set	3972
   171  0000                     _PORTFbits	set	3982
   172  0000                     _T2PR	set	4028
   173  0000                     _T2CONbits	set	4029
   174  0000                     _PWM7DCH	set	4000
   175  0000                     _PWM6DCH	set	4003
   176  0000                     _TRISCbits	set	3971
   177  0000                     _TRISAbits	set	3969
   178  0000                     _LATCbits	set	3963
   179  0000                     _RC4REG	set	3811
   180  0000                     _SP4BRGL	set	3813
   181  0000                     _TX4STAbits	set	3816
   182  0000                     _BAUD4CONbits	set	3817
   183  0000                     _SSP2CON2	set	3802
   184  0000                     _SSP2STAT	set	3800
   185  0000                     _PIE0bits	set	3625
   186  0000                     _PIR4bits	set	3639
   187  0000                     _RC0PPS	set	3682
   188  0000                     _RC7PPS	set	3689
   189  0000                     _RD5PPS	set	3695
   190  0000                     _RE2PPS	set	3700
   191  0000                     _RD6PPS	set	3696
   192  0000                     _TMR0L	set	4051
   193  0000                     _TMR0H	set	4052
   194  0000                     _T0CON0bits	set	4053
   195  0000                     _T2CLKCONbits	set	4031
   196  0000                     _T2HLTbits	set	4030
   197  0000                     _PWM6CONbits	set	4004
   198  0000                     _PWM7CONbits	set	4001
   199  0000                     _T0CON1bits	set	4054
   200  0000                     _INTCONbits	set	4082
   201  0000                     _PIR0bits	set	3635
   202  000E05                     STR_1:
   203                           
   204                           ; BSR set to: 14
   205  000E05  25                 	db	37
   206  000E06  64                 	db	100	;'d'
   207  000E07  09                 	db	9
   208  000E08  25                 	db	37
   209  000E09  64                 	db	100	;'d'
   210  000E0A  09                 	db	9
   211  000E0B  25                 	db	37
   212  000E0C  64                 	db	100	;'d'
   213  000E0D  09                 	db	9
   214  000E0E  25                 	db	37
   215  000E0F  64                 	db	100	;'d'
   216  000E10  0D                 	db	13
   217  000E11  0A                 	db	10
   218  000E12  00                 	db	0
   219  000E13  00                 	db	0	; dummy byte at the end
   220  0000                     
   221                           ; #config settings
   222                           
   223                           	psect	cinit
   224  005824                     __pcinit:
   225                           	callstack 0
   226  005824                     start_initialization:
   227                           	callstack 0
   228  005824                     __initialization:
   229                           	callstack 0
   230                           
   231                           ; Initialize objects allocated to BANK0 (2 bytes)
   232                           ; load TBLPTR registers with __pidataBANK0
   233  005824  0ED4               	movlw	low __pidataBANK0
   234  005826  6EF6               	movwf	tblptrl,c
   235  005828  0E5C               	movlw	high __pidataBANK0
   236  00582A  6EF7               	movwf	tblptrh,c
   237  00582C  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   238  00582E  6EF8               	movwf	tblptru,c
   239  005830  0009               	tblrd		*+	;fetch initializer
   240  005832  CFF5 F0FC          	movff	tablat,__pdataBANK0
   241  005836  0009               	tblrd		*+	;fetch initializer
   242  005838  CFF5 F0FD          	movff	tablat,__pdataBANK0+1
   243                           
   244                           ; Clear objects allocated to BANK1 (158 bytes)
   245  00583C  EE01  F000         	lfsr	0,__pbssBANK1
   246  005840  0E9E               	movlw	158
   247  005842                     clear_0:
   248  005842  6AEE               	clrf	postinc0,c
   249  005844  06E8               	decf	wreg,f,c
   250  005846  E1FD               	bnz	clear_0
   251                           
   252                           ; Clear objects allocated to BANK0 (8 bytes)
   253  005848  EE00  F0F4         	lfsr	0,__pbssBANK0
   254  00584C  0E08               	movlw	8
   255  00584E                     clear_1:
   256  00584E  6AEE               	clrf	postinc0,c
   257  005850  06E8               	decf	wreg,f,c
   258  005852  E1FD               	bnz	clear_1
   259  005854                     end_of_initialization:
   260                           	callstack 0
   261  005854                     __end_of__initialization:
   262                           	callstack 0
   263  005854  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   264  005856  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   265  005858  0E00               	movlw	low (__Lsmallconst shr (0+16))
   266  00585A  6EF8               	movwf	tblptru,c
   267  00585C  0E0E               	movlw	high __Lsmallconst
   268  00585E  6EF7               	movwf	tblptrh,c
   269  005860  0100               	movlb	0
   270  005862  EF1D  F01B         	goto	_main	;jump to C main() function
   271                           
   272                           	psect	bssBANK0
   273  0000F4                     __pbssBANK0:
   274                           	callstack 0
   275  0000F4                     _nout:
   276                           	callstack 0
   277  0000F4                     	ds	2
   278  0000F6                     _width:
   279                           	callstack 0
   280  0000F6                     	ds	2
   281  0000F8                     _prec:
   282                           	callstack 0
   283  0000F8                     	ds	2
   284  0000FA                     _flags:
   285                           	callstack 0
   286  0000FA                     	ds	2
   287                           
   288                           	psect	dataBANK0
   289  0000FC                     __pdataBANK0:
   290                           	callstack 0
   291  0000FC                     _SENSITIVITY:
   292                           	callstack 0
   293  0000FC                     	ds	2
   294                           
   295                           	psect	bssBANK1
   296  000100                     __pbssBANK1:
   297                           	callstack 0
   298  000100                     _memory:
   299                           	callstack 0
   300  000100                     	ds	100
   301  000164                     _motorR:
   302                           	callstack 0
   303  000164                     	ds	9
   304  00016D                     _motorL:
   305                           	callstack 0
   306  00016D                     	ds	9
   307  000176                     roundf@F527:
   308                           	callstack 0
   309  000176                     	ds	4
   310  00017A                     _centisecond:
   311                           	callstack 0
   312  00017A                     	ds	2
   313  00017C                     _color:
   314                           	callstack 0
   315  00017C                     	ds	1
   316  00017D                     _array_index:
   317                           	callstack 0
   318  00017D                     	ds	1
   319  00017E                     _dbuf:
   320                           	callstack 0
   321  00017E                     	ds	32
   322                           
   323                           	psect	cstackBANK1
   324  00019E                     __pcstackBANK1:
   325                           	callstack 0
   326  00019E                     main@amb:
   327                           	callstack 0
   328                           
   329                           ; 8 bytes @ 0x0
   330  00019E                     	ds	8
   331  0001A6                     main@amb_light:
   332                           	callstack 0
   333                           
   334                           ; 2 bytes @ 0x8
   335  0001A6                     	ds	2
   336  0001A8                     main@stop_signal:
   337                           	callstack 0
   338                           
   339                           ; 1 bytes @ 0xA
   340  0001A8                     	ds	1
   341  0001A9                     main@accident:
   342                           	callstack 0
   343                           
   344                           ; 1 bytes @ 0xB
   345  0001A9                     	ds	1
   346  0001AA                     main@start_time:
   347                           	callstack 0
   348                           
   349                           ; 2 bytes @ 0xC
   350  0001AA                     	ds	2
   351  0001AC                     main@stop_time:
   352                           	callstack 0
   353                           
   354                           ; 2 bytes @ 0xE
   355  0001AC                     	ds	2
   356  0001AE                     main@rgb:
   357                           	callstack 0
   358                           
   359                           ; 8 bytes @ 0x10
   360  0001AE                     	ds	8
   361  0001B6                     main@white:
   362                           	callstack 0
   363                           
   364                           ; 28 bytes @ 0x18
   365  0001B6                     	ds	28
   366  0001D2                     main@motorL:
   367                           	callstack 0
   368                           
   369                           ; 9 bytes @ 0x34
   370  0001D2                     	ds	9
   371  0001DB                     main@motorR:
   372                           	callstack 0
   373                           
   374                           ; 9 bytes @ 0x3D
   375  0001DB                     	ds	9
   376                           
   377                           	psect	cstackBANK0
   378  000060                     __pcstackBANK0:
   379                           	callstack 0
   380  000060                     ?_sprintf:
   381                           	callstack 0
   382  000060                     ?_setup:
   383                           	callstack 0
   384  000060                     detect_color@RG:
   385                           	callstack 0
   386  000060                     setup@white:
   387                           	callstack 0
   388  000060                     sprintf@s:
   389                           	callstack 0
   390  000060                     _detect_wall$2932:
   391                           	callstack 0
   392                           
   393                           ; 4 bytes @ 0x0
   394  000060                     	ds	2
   395  000062                     detect_color@BC:
   396                           	callstack 0
   397  000062                     setup@amb:
   398                           	callstack 0
   399  000062                     sprintf@fmt:
   400                           	callstack 0
   401                           
   402                           ; 2 bytes @ 0x2
   403  000062                     	ds	2
   404  000064                     detect_color@GR:
   405                           	callstack 0
   406  000064                     detect_wall@CC_amb:
   407                           	callstack 0
   408  000064                     setup@mL:
   409                           	callstack 0
   410                           
   411                           ; 2 bytes @ 0x4
   412  000064                     	ds	2
   413  000066                     detect_color@BR:
   414                           	callstack 0
   415  000066                     detect_wall@threshold:
   416                           	callstack 0
   417  000066                     setup@mR:
   418                           	callstack 0
   419                           
   420                           ; 2 bytes @ 0x6
   421  000066                     	ds	2
   422  000068                     detect_wall@stop:
   423                           	callstack 0
   424  000068                     detect_color@RB:
   425                           	callstack 0
   426  000068                     setup@amb_light:
   427                           	callstack 0
   428                           
   429                           ; 2 bytes @ 0x8
   430  000068                     	ds	2
   431  00006A                     detect_color@GB:
   432                           	callstack 0
   433                           
   434                           ; 2 bytes @ 0xA
   435  00006A                     	ds	2
   436  00006C                     detect_color@BB:
   437                           	callstack 0
   438  00006C                     sprintf@ap:
   439                           	callstack 0
   440                           
   441                           ; 2 bytes @ 0xC
   442  00006C                     	ds	2
   443  00006E                     detect_color@GG:
   444                           	callstack 0
   445  00006E                     sprintf@f:
   446                           	callstack 0
   447                           
   448                           ; 11 bytes @ 0xE
   449  00006E                     	ds	2
   450  000070                     detect_color@RR:
   451                           	callstack 0
   452                           
   453                           ; 2 bytes @ 0x10
   454  000070                     	ds	2
   455  000072                     detect_color@color:
   456                           	callstack 0
   457                           
   458                           ; 1 bytes @ 0x12
   459  000072                     	ds	1
   460  000073                     detect_color@BG:
   461                           	callstack 0
   462                           
   463                           ; 2 bytes @ 0x13
   464  000073                     	ds	2
   465  000075                     _detect_color$2931:
   466                           	callstack 0
   467                           
   468                           ; 4 bytes @ 0x15
   469  000075                     	ds	4
   470  000079                     verify_color@m:
   471                           	callstack 0
   472  000079                     color_display@buf:
   473                           	callstack 0
   474  000079                     color_predict@buf:
   475                           	callstack 0
   476                           
   477                           ; 100 bytes @ 0x19
   478  000079                     	ds	2
   479  00007B                     verify_color@w:
   480                           	callstack 0
   481                           
   482                           ; 2 bytes @ 0x1B
   483  00007B                     	ds	2
   484  00007D                     ??_verify_color:
   485                           
   486                           ; 1 bytes @ 0x1D
   487  00007D                     	ds	2
   488  00007F                     verify_color@color2:
   489                           	callstack 0
   490                           
   491                           ; 2 bytes @ 0x1F
   492  00007F                     	ds	2
   493  000081                     verify_color@color:
   494                           	callstack 0
   495                           
   496                           ; 1 bytes @ 0x21
   497  000081                     	ds	92
   498  0000DD                     color_predict@color:
   499                           	callstack 0
   500                           
   501                           ; 1 bytes @ 0x7D
   502  0000DD                     	ds	1
   503  0000DE                     color_data_collection@i:
   504                           	callstack 0
   505                           
   506                           ; 2 bytes @ 0x7E
   507  0000DE                     	ds	2
   508  0000E0                     test_function@m:
   509                           	callstack 0
   510                           
   511                           ; 2 bytes @ 0x80
   512  0000E0                     	ds	2
   513  0000E2                     test_function@w:
   514                           	callstack 0
   515                           
   516                           ; 2 bytes @ 0x82
   517  0000E2                     	ds	2
   518  0000E4                     test_function@mL:
   519                           	callstack 0
   520                           
   521                           ; 2 bytes @ 0x84
   522  0000E4                     	ds	2
   523  0000E6                     test_function@mR:
   524                           	callstack 0
   525                           
   526                           ; 2 bytes @ 0x86
   527  0000E6                     	ds	2
   528  0000E8                     ??_test_function:
   529                           
   530                           ; 1 bytes @ 0x88
   531  0000E8                     	ds	2
   532  0000EA                     test_function@amb_light:
   533                           	callstack 0
   534                           
   535                           ; 2 bytes @ 0x8A
   536  0000EA                     	ds	2
   537  0000EC                     test_function@complete:
   538                           	callstack 0
   539                           
   540                           ; 1 bytes @ 0x8C
   541  0000EC                     	ds	1
   542  0000ED                     test_function@color:
   543                           	callstack 0
   544                           
   545                           ; 1 bytes @ 0x8D
   546  0000ED                     	ds	1
   547  0000EE                     test_function@stop_signal:
   548                           	callstack 0
   549                           
   550                           ; 1 bytes @ 0x8E
   551  0000EE                     	ds	1
   552  0000EF                     test_function@test_code:
   553                           	callstack 0
   554                           
   555                           ; 1 bytes @ 0x8F
   556  0000EF                     	ds	1
   557  0000F0                     ??_main:
   558                           
   559                           ; 1 bytes @ 0x90
   560  0000F0                     	ds	4
   561                           
   562                           	psect	cstackCOMRAM
   563  000001                     __pcstackCOMRAM:
   564                           	callstack 0
   565  000001                     ??_LED_OFF:
   566  000001                     ??_LED_R:
   567  000001                     ??_LED_C:
   568  000001                     ??_LED_B:
   569  000001                     ??_LED_G:
   570  000001                     ??_I2C_2_Master_Idle:
   571  000001                     ?_strlen:
   572                           	callstack 0
   573  000001                     ?___wmul:
   574                           	callstack 0
   575  000001                     ?___fladd:
   576                           	callstack 0
   577  000001                     ?___flneg:
   578                           	callstack 0
   579  000001                     ?___xxtofl:
   580                           	callstack 0
   581  000001                     ?___aodiv:
   582                           	callstack 0
   583  000001                     ?___aomod:
   584                           	callstack 0
   585  000001                     toggle_light@toggletime:
   586                           	callstack 0
   587  000001                     sendCharSerial4@charToSend:
   588                           	callstack 0
   589  000001                     initDCmotorsPWM@PWMperiod:
   590                           	callstack 0
   591  000001                     initDCmotors_parameter@motorL:
   592                           	callstack 0
   593  000001                     ___wmul@multiplier:
   594                           	callstack 0
   595  000001                     fputc@c:
   596                           	callstack 0
   597  000001                     strlen@s:
   598                           	callstack 0
   599  000001                     ___flge@ff1:
   600                           	callstack 0
   601  000001                     ___flneg@f1:
   602                           	callstack 0
   603  000001                     ___fladd@b:
   604                           	callstack 0
   605  000001                     ___xxtofl@val:
   606                           	callstack 0
   607  000001                     ___aodiv@dividend:
   608                           	callstack 0
   609  000001                     ___aomod@dividend:
   610                           	callstack 0
   611                           
   612                           ; 8 bytes @ 0x0
   613  000001                     	ds	1
   614  000002                     ??_I2C_2_Master_Read:
   615  000002                     ??_toggle_light:
   616  000002                     I2C_2_Master_Write@data_byte:
   617                           	callstack 0
   618  000002                     sendStringSerial4@string:
   619                           	callstack 0
   620                           
   621                           ; 2 bytes @ 0x1
   622  000002                     	ds	1
   623  000003                     color_writetoaddr@value:
   624                           	callstack 0
   625  000003                     I2C_2_Master_Read@ack:
   626                           	callstack 0
   627  000003                     initDCmotors_parameter@motorR:
   628                           	callstack 0
   629  000003                     ___wmul@multiplicand:
   630                           	callstack 0
   631  000003                     fputc@fp:
   632                           	callstack 0
   633  000003                     strlen@a:
   634                           	callstack 0
   635                           
   636                           ; 2 bytes @ 0x2
   637  000003                     	ds	1
   638  000004                     toggle_light@i:
   639                           	callstack 0
   640  000004                     color_writetoaddr@address:
   641                           	callstack 0
   642  000004                     I2C_2_Master_Read@tmp:
   643                           	callstack 0
   644                           
   645                           ; 1 bytes @ 0x3
   646  000004                     	ds	1
   647  000005                     ??_fputc:
   648  000005                     ??_color_click_init:
   649  000005                     ??___xxtofl:
   650  000005                     ?_color_read_Red:
   651                           	callstack 0
   652  000005                     ?_color_read_Blue:
   653                           	callstack 0
   654  000005                     ?_color_read_Green:
   655                           	callstack 0
   656  000005                     ?_color_read_Clear:
   657                           	callstack 0
   658  000005                     toggle_light@lightnumber:
   659                           	callstack 0
   660  000005                     ___wmul@product:
   661                           	callstack 0
   662  000005                     ___flge@ff2:
   663                           	callstack 0
   664  000005                     ___fladd@a:
   665                           	callstack 0
   666                           
   667                           ; 4 bytes @ 0x4
   668  000005                     	ds	2
   669  000007                     ??_color_read_Red:
   670  000007                     ??_color_read_Blue:
   671  000007                     ??_color_read_Green:
   672  000007                     ??_color_read_Clear:
   673  000007                     ?___awdiv:
   674                           	callstack 0
   675  000007                     ___awdiv@dividend:
   676                           	callstack 0
   677                           
   678                           ; 2 bytes @ 0x6
   679  000007                     	ds	2
   680  000009                     ??___fladd:
   681  000009                     ??___flge:
   682  000009                     ___xxtofl@sign:
   683                           	callstack 0
   684  000009                     ___awdiv@divisor:
   685                           	callstack 0
   686  000009                     ___aodiv@divisor:
   687                           	callstack 0
   688  000009                     ___aomod@divisor:
   689                           	callstack 0
   690                           
   691                           ; 8 bytes @ 0x8
   692  000009                     	ds	1
   693  00000A                     ___xxtofl@exp:
   694                           	callstack 0
   695  00000A                     color_read_Red@tmp:
   696                           	callstack 0
   697  00000A                     color_read_Blue@tmp:
   698                           	callstack 0
   699  00000A                     color_read_Green@tmp:
   700                           	callstack 0
   701  00000A                     color_read_Clear@tmp:
   702                           	callstack 0
   703  00000A                     fputs@s:
   704                           	callstack 0
   705                           
   706                           ; 2 bytes @ 0x9
   707  00000A                     	ds	1
   708  00000B                     ___awdiv@counter:
   709                           	callstack 0
   710  00000B                     ___xxtofl@arg:
   711                           	callstack 0
   712                           
   713                           ; 4 bytes @ 0xA
   714  00000B                     	ds	1
   715  00000C                     ___awdiv@sign:
   716                           	callstack 0
   717  00000C                     read_color@m:
   718                           	callstack 0
   719  00000C                     calibrate_white@w:
   720                           	callstack 0
   721  00000C                     fputs@fp:
   722                           	callstack 0
   723                           
   724                           ; 2 bytes @ 0xB
   725  00000C                     	ds	1
   726  00000D                     ___fladd@signs:
   727                           	callstack 0
   728  00000D                     ___awdiv@quotient:
   729                           	callstack 0
   730                           
   731                           ; 2 bytes @ 0xC
   732  00000D                     	ds	1
   733  00000E                     ??_calibrate_white:
   734  00000E                     ___fladd@aexp:
   735                           	callstack 0
   736  00000E                     fputs@c:
   737                           	callstack 0
   738                           
   739                           ; 1 bytes @ 0xD
   740  00000E                     	ds	1
   741  00000F                     ?___flmul:
   742                           	callstack 0
   743  00000F                     ___fladd@bexp:
   744                           	callstack 0
   745  00000F                     setMotorPWM@m:
   746                           	callstack 0
   747  00000F                     fputs@i:
   748                           	callstack 0
   749  00000F                     ___flmul@b:
   750                           	callstack 0
   751                           
   752                           ; 4 bytes @ 0xE
   753  00000F                     	ds	1
   754  000010                     ___fladd@grs:
   755                           	callstack 0
   756                           
   757                           ; 1 bytes @ 0xF
   758  000010                     	ds	1
   759  000011                     ??_setMotorPWM:
   760  000011                     ?_pad:
   761                           	callstack 0
   762  000011                     ?___flsub:
   763                           	callstack 0
   764  000011                     ___aodiv@counter:
   765                           	callstack 0
   766  000011                     ___aomod@counter:
   767                           	callstack 0
   768  000011                     pad@fp:
   769                           	callstack 0
   770  000011                     ___flsub@b:
   771                           	callstack 0
   772                           
   773                           ; 4 bytes @ 0x10
   774  000011                     	ds	1
   775  000012                     ___aodiv@sign:
   776                           	callstack 0
   777  000012                     ___aomod@sign:
   778                           	callstack 0
   779                           
   780                           ; 1 bytes @ 0x11
   781  000012                     	ds	1
   782  000013                     ?_abs:
   783                           	callstack 0
   784  000013                     pad@buf:
   785                           	callstack 0
   786  000013                     abs@a:
   787                           	callstack 0
   788  000013                     ___flmul@a:
   789                           	callstack 0
   790  000013                     ___aodiv@quotient:
   791                           	callstack 0
   792                           
   793                           ; 8 bytes @ 0x12
   794  000013                     	ds	2
   795  000015                     ??_abs:
   796  000015                     pad@p:
   797                           	callstack 0
   798  000015                     ___flsub@a:
   799                           	callstack 0
   800                           
   801                           ; 4 bytes @ 0x14
   802  000015                     	ds	2
   803  000017                     ??___flmul:
   804  000017                     ??_pad:
   805                           
   806                           ; 1 bytes @ 0x16
   807  000017                     	ds	1
   808  000018                     setMotorPWM@PWMduty:
   809                           	callstack 0
   810  000018                     pad@i:
   811                           	callstack 0
   812                           
   813                           ; 2 bytes @ 0x17
   814  000018                     	ds	1
   815  000019                     
   816                           ; 1 bytes @ 0x18
   817  000019                     	ds	1
   818  00001A                     stop@mL:
   819                           	callstack 0
   820  00001A                     fullSpeedAhead@mL:
   821                           	callstack 0
   822  00001A                     pad@w:
   823                           	callstack 0
   824                           
   825                           ; 2 bytes @ 0x19
   826  00001A                     	ds	1
   827  00001B                     ___flmul@sign:
   828                           	callstack 0
   829                           
   830                           ; 1 bytes @ 0x1A
   831  00001B                     	ds	1
   832  00001C                     ?_dtoa:
   833                           	callstack 0
   834  00001C                     stop@mR:
   835                           	callstack 0
   836  00001C                     fullSpeedAhead@mR:
   837                           	callstack 0
   838  00001C                     dtoa@fp:
   839                           	callstack 0
   840  00001C                     ___flmul@grs:
   841                           	callstack 0
   842                           
   843                           ; 4 bytes @ 0x1B
   844  00001C                     	ds	2
   845  00001E                     ??_stop:
   846  00001E                     ??_fullSpeedAhead:
   847  00001E                     dtoa@d:
   848                           	callstack 0
   849                           
   850                           ; 8 bytes @ 0x1D
   851  00001E                     	ds	2
   852  000020                     ___flmul@aexp:
   853                           	callstack 0
   854  000020                     turn45@mL:
   855                           	callstack 0
   856  000020                     fullSpeedBack@mL:
   857                           	callstack 0
   858  000020                     short_burst@mL:
   859                           	callstack 0
   860                           
   861                           ; 2 bytes @ 0x1F
   862  000020                     	ds	1
   863  000021                     ___flmul@bexp:
   864                           	callstack 0
   865                           
   866                           ; 1 bytes @ 0x20
   867  000021                     	ds	1
   868  000022                     turn45@mR:
   869                           	callstack 0
   870  000022                     fullSpeedBack@mR:
   871                           	callstack 0
   872  000022                     short_burst@mR:
   873                           	callstack 0
   874  000022                     ___flmul@prod:
   875                           	callstack 0
   876                           
   877                           ; 4 bytes @ 0x21
   878  000022                     	ds	2
   879  000024                     ??_short_burst:
   880  000024                     turn45@turn_time:
   881                           	callstack 0
   882  000024                     fullSpeedBack@instruction:
   883                           	callstack 0
   884                           
   885                           ; 1 bytes @ 0x23
   886  000024                     	ds	1
   887  000025                     ??_fullSpeedBack:
   888  000025                     turn45@direction:
   889                           	callstack 0
   890                           
   891                           ; 1 bytes @ 0x24
   892  000025                     	ds	1
   893  000026                     ??_turn45:
   894  000026                     ??_dtoa:
   895  000026                     ___flmul@temp:
   896                           	callstack 0
   897                           
   898                           ; 2 bytes @ 0x25
   899  000026                     	ds	2
   900  000028                     ?___fldiv:
   901                           	callstack 0
   902  000028                     ?_roundf:
   903                           	callstack 0
   904  000028                     turn45@i_1327:
   905                           	callstack 0
   906  000028                     ___fldiv@b:
   907                           	callstack 0
   908  000028                     roundf@x:
   909                           	callstack 0
   910                           
   911                           ; 4 bytes @ 0x27
   912  000028                     	ds	2
   913  00002A                     turn45@i_1329:
   914                           	callstack 0
   915                           
   916                           ; 2 bytes @ 0x29
   917  00002A                     	ds	2
   918  00002C                     ??_roundf:
   919  00002C                     turn45@i:
   920                           	callstack 0
   921  00002C                     ___fldiv@a:
   922                           	callstack 0
   923                           
   924                           ; 4 bytes @ 0x2B
   925  00002C                     	ds	1
   926  00002D                     goback@mL:
   927                           	callstack 0
   928  00002D                     test_action@mL:
   929                           	callstack 0
   930                           
   931                           ; 2 bytes @ 0x2C
   932  00002D                     	ds	1
   933  00002E                     _dtoa$2601:
   934                           	callstack 0
   935                           
   936                           ; 2 bytes @ 0x2D
   937  00002E                     	ds	1
   938  00002F                     goback@mR:
   939                           	callstack 0
   940  00002F                     test_action@mR:
   941                           	callstack 0
   942                           
   943                           ; 2 bytes @ 0x2E
   944  00002F                     	ds	1
   945  000030                     ??___fldiv:
   946  000030                     dtoa@p:
   947                           	callstack 0
   948  000030                     _roundf$2934:
   949                           	callstack 0
   950                           
   951                           ; 4 bytes @ 0x2F
   952  000030                     	ds	1
   953  000031                     ??_goback:
   954  000031                     ??_test_action:
   955                           
   956                           ; 1 bytes @ 0x30
   957  000031                     	ds	1
   958  000032                     dtoa@w:
   959                           	callstack 0
   960                           
   961                           ; 2 bytes @ 0x31
   962  000032                     	ds	1
   963  000033                     goback@i:
   964                           	callstack 0
   965  000033                     calibration_motor@mL:
   966                           	callstack 0
   967                           
   968                           ; 2 bytes @ 0x32
   969  000033                     	ds	1
   970  000034                     dtoa@s:
   971                           	callstack 0
   972  000034                     roundf@e:
   973                           	callstack 0
   974  000034                     ___fldiv@rem:
   975                           	callstack 0
   976                           
   977                           ; 4 bytes @ 0x33
   978  000034                     	ds	1
   979  000035                     turning_action@mL:
   980                           	callstack 0
   981  000035                     calibration_motor@mR:
   982                           	callstack 0
   983                           
   984                           ; 2 bytes @ 0x34
   985  000035                     	ds	1
   986  000036                     _roundf$2933:
   987                           	callstack 0
   988  000036                     dtoa@n:
   989                           	callstack 0
   990                           
   991                           ; 8 bytes @ 0x35
   992  000036                     	ds	1
   993  000037                     ??_calibration_motor:
   994  000037                     turning_action@mR:
   995                           	callstack 0
   996                           
   997                           ; 2 bytes @ 0x36
   998  000037                     	ds	1
   999  000038                     ___fldiv@sign:
  1000                           	callstack 0
  1001                           
  1002                           ; 1 bytes @ 0x37
  1003  000038                     	ds	1
  1004  000039                     turning_action@color:
  1005                           	callstack 0
  1006  000039                     ___fldiv@new_exp:
  1007                           	callstack 0
  1008                           
  1009                           ; 2 bytes @ 0x38
  1010  000039                     	ds	1
  1011  00003A                     roundf@u:
  1012                           	callstack 0
  1013                           
  1014                           ; 4 bytes @ 0x39
  1015  00003A                     	ds	1
  1016  00003B                     ___fldiv@grs:
  1017                           	callstack 0
  1018                           
  1019                           ; 4 bytes @ 0x3A
  1020  00003B                     	ds	3
  1021  00003E                     dtoa@i:
  1022                           	callstack 0
  1023  00003E                     roundf@y:
  1024                           	callstack 0
  1025                           
  1026                           ; 4 bytes @ 0x3D
  1027  00003E                     	ds	1
  1028  00003F                     ___fldiv@bexp:
  1029                           	callstack 0
  1030                           
  1031                           ; 1 bytes @ 0x3E
  1032  00003F                     	ds	1
  1033  000040                     ?_vfpfcnvrt:
  1034                           	callstack 0
  1035  000040                     ___fldiv@aexp:
  1036                           	callstack 0
  1037  000040                     vfpfcnvrt@fp:
  1038                           	callstack 0
  1039                           
  1040                           ; 2 bytes @ 0x3F
  1041  000040                     	ds	2
  1042  000042                     ?___fltol:
  1043                           	callstack 0
  1044  000042                     vfpfcnvrt@fmt:
  1045                           	callstack 0
  1046  000042                     ___fltol@f1:
  1047                           	callstack 0
  1048                           
  1049                           ; 4 bytes @ 0x41
  1050  000042                     	ds	2
  1051  000044                     vfpfcnvrt@ap:
  1052                           	callstack 0
  1053                           
  1054                           ; 2 bytes @ 0x43
  1055  000044                     	ds	2
  1056  000046                     ??___fltol:
  1057  000046                     ??_vfpfcnvrt:
  1058                           
  1059                           ; 1 bytes @ 0x45
  1060  000046                     	ds	2
  1061  000048                     vfpfcnvrt@ll:
  1062                           	callstack 0
  1063                           
  1064                           ; 8 bytes @ 0x47
  1065  000048                     	ds	2
  1066  00004A                     ___fltol@sign1:
  1067                           	callstack 0
  1068                           
  1069                           ; 1 bytes @ 0x49
  1070  00004A                     	ds	1
  1071  00004B                     ___fltol@exp1:
  1072                           	callstack 0
  1073                           
  1074                           ; 1 bytes @ 0x4A
  1075  00004B                     	ds	1
  1076  00004C                     ?_lroundf:
  1077                           	callstack 0
  1078  00004C                     lroundf@x:
  1079                           	callstack 0
  1080                           
  1081                           ; 4 bytes @ 0x4B
  1082  00004C                     	ds	4
  1083  000050                     ?_vfprintf:
  1084                           	callstack 0
  1085  000050                     ?_amb_light_measure:
  1086                           	callstack 0
  1087  000050                     compare@lower:
  1088                           	callstack 0
  1089  000050                     amb_light_measure@amb:
  1090                           	callstack 0
  1091  000050                     detect_wall@mL:
  1092                           	callstack 0
  1093  000050                     vfprintf@fp:
  1094                           	callstack 0
  1095                           
  1096                           ; 2 bytes @ 0x4F
  1097  000050                     	ds	2
  1098  000052                     ??_amb_light_measure:
  1099  000052                     compare@value2compare:
  1100                           	callstack 0
  1101  000052                     detect_wall@mR:
  1102                           	callstack 0
  1103  000052                     vfprintf@fmt:
  1104                           	callstack 0
  1105                           
  1106                           ; 2 bytes @ 0x51
  1107  000052                     	ds	2
  1108  000054                     compare@upper:
  1109                           	callstack 0
  1110  000054                     amb_light_measure@CC_amb_ave:
  1111                           	callstack 0
  1112  000054                     detect_wall@amb_light:
  1113                           	callstack 0
  1114  000054                     vfprintf@ap:
  1115                           	callstack 0
  1116                           
  1117                           ; 2 bytes @ 0x53
  1118  000054                     	ds	2
  1119  000056                     ??_detect_wall:
  1120  000056                     compare@result:
  1121                           	callstack 0
  1122  000056                     amb_light_measure@CC_amb_1:
  1123                           	callstack 0
  1124  000056                     vfprintf@cfmt:
  1125                           	callstack 0
  1126                           
  1127                           ; 2 bytes @ 0x55
  1128  000056                     	ds	1
  1129  000057                     detect_color@m:
  1130                           	callstack 0
  1131                           
  1132                           ; 2 bytes @ 0x56
  1133  000057                     	ds	1
  1134  000058                     color_display@m:
  1135                           	callstack 0
  1136  000058                     amb_light_measure@CC_amb_2:
  1137                           	callstack 0
  1138                           
  1139                           ; 2 bytes @ 0x57
  1140  000058                     	ds	1
  1141  000059                     detect_color@w:
  1142                           	callstack 0
  1143                           
  1144                           ; 2 bytes @ 0x58
  1145  000059                     	ds	1
  1146  00005A                     color_data_collection@m:
  1147                           	callstack 0
  1148  00005A                     amb_light_measure@CC_amb_3:
  1149                           	callstack 0
  1150                           
  1151                           ; 2 bytes @ 0x59
  1152  00005A                     	ds	1
  1153  00005B                     ??_detect_color:
  1154                           
  1155                           ; 1 bytes @ 0x5A
  1156  00005B                     	ds	1
  1157  00005C                     ??_setup:
  1158  00005C                     ??_color_data_collection:
  1159                           
  1160                           ; 1 bytes @ 0x5B
  1161  00005C                     	ds	3
  1162                           
  1163 ;;
  1164 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  1165 ;;
  1166 ;; *************** function _main *****************
  1167 ;; Defined at:
  1168 ;;		line 27 in file "main.c"
  1169 ;; Parameters:    Size  Location     Type
  1170 ;;		None
  1171 ;; Auto vars:     Size  Location     Type
  1172 ;;  white          28   24[BANK1 ] struct white_card
  1173 ;;  motorR          9   61[BANK1 ] struct DC_motor
  1174 ;;  motorL          9   52[BANK1 ] struct DC_motor
  1175 ;;  rgb             8   16[BANK1 ] struct color_rgb
  1176 ;;  amb             8    0[BANK1 ] struct color_rgb
  1177 ;;  stop_time       2   14[BANK1 ] unsigned int 
  1178 ;;  start_time      2   12[BANK1 ] unsigned int 
  1179 ;;  amb_light       2    8[BANK1 ] unsigned int 
  1180 ;;  accident        1   11[BANK1 ] unsigned char 
  1181 ;;  stop_signal     1   10[BANK1 ] unsigned char 
  1182 ;; Return value:  Size  Location     Type
  1183 ;;                  1    wreg      void 
  1184 ;; Registers used:
  1185 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1186 ;; Tracked objects:
  1187 ;;		On entry : 0/0
  1188 ;;		On exit  : 0/0
  1189 ;;		Unchanged: 0/0
  1190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1191 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1192 ;;      Locals:         0       0      70       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1193 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1194 ;;      Totals:         0       4      70       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1195 ;;Total ram usage:       74 bytes
  1196 ;; Hardware stack levels required when called: 12
  1197 ;; This function calls:
  1198 ;;		_Interrupts_init
  1199 ;;		_Timer0_init
  1200 ;;		_color_click_init
  1201 ;;		_detect_color
  1202 ;;		_detect_wall
  1203 ;;		_fullSpeedAhead
  1204 ;;		_goback
  1205 ;;		_initDCmotorsPWM
  1206 ;;		_initDCmotors_parameter
  1207 ;;		_initUSART4
  1208 ;;		_pin_init
  1209 ;;		_setup
  1210 ;;		_short_burst
  1211 ;;		_stop
  1212 ;;		_test_function
  1213 ;;		_turning_action
  1214 ;;		_verify_color
  1215 ;; This function is called by:
  1216 ;;		Startup code after reset
  1217 ;; This function uses a non-reentrant model
  1218 ;;
  1219                           
  1220                           	psect	text0
  1221  00363A                     __ptext0:
  1222                           	callstack 0
  1223  00363A                     _main:
  1224                           	callstack 19
  1225  00363A                     
  1226                           ;main.c: 29:     struct color_rgb rgb, amb;;main.c: 30:     struct white_card white;;mai
      +                          n.c: 31:     struct DC_motor motorL, motorR;;main.c: 35:     color_click_init();
  1227  00363A  EC40  F02D         	call	_color_click_init	;wreg free
  1228  00363E                     
  1229                           ;main.c: 36:     pin_init();
  1230  00363E  EC26  F02D         	call	_pin_init	;wreg free
  1231  003642                     
  1232                           ;main.c: 37:     initDCmotorsPWM(199);
  1233  003642  0E00               	movlw	0
  1234  003644  6E02               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
  1235  003646  0EC7               	movlw	199
  1236  003648  6E01               	movwf	initDCmotorsPWM@PWMperiod^0,c
  1237  00364A  EC75  F02C         	call	_initDCmotorsPWM	;wreg free
  1238  00364E                     
  1239                           ;main.c: 38:     initDCmotors_parameter(&motorL, &motorR);
  1240  00364E  0ED2               	movlw	low main@motorL
  1241  003650  6E01               	movwf	initDCmotors_parameter@motorL^0,c
  1242  003652  0E01               	movlw	high main@motorL
  1243  003654  6E02               	movwf	(initDCmotors_parameter@motorL+1)^0,c
  1244  003656  0EDB               	movlw	low main@motorR
  1245  003658  6E03               	movwf	initDCmotors_parameter@motorR^0,c
  1246  00365A  0E01               	movlw	high main@motorR
  1247  00365C  6E04               	movwf	(initDCmotors_parameter@motorR+1)^0,c
  1248  00365E  ECDA  F027         	call	_initDCmotors_parameter	;wreg free
  1249  003662                     
  1250                           ;main.c: 39:     initUSART4();
  1251  003662  EC25  F02E         	call	_initUSART4	;wreg free
  1252  003666                     
  1253                           ;main.c: 40:     Timer0_init();
  1254  003666  EC34  F02E         	call	_Timer0_init	;wreg free
  1255  00366A                     
  1256                           ;main.c: 41:     Interrupts_init();
  1257  00366A  EC55  F02E         	call	_Interrupts_init	;wreg free
  1258  00366E                     
  1259                           ;main.c: 43:     unsigned char stop_signal = 0;
  1260  00366E  0E00               	movlw	0
  1261  003670  0101               	movlb	1	; () banked
  1262  003672  6FA8               	movwf	main@stop_signal& (0+255),b
  1263  003674                     
  1264                           ; BSR set to: 1
  1265                           ;main.c: 45:     unsigned char accident = 0;
  1266  003674  0E00               	movlw	0
  1267  003676  6FA9               	movwf	main@accident& (0+255),b
  1268  003678                     
  1269                           ; BSR set to: 1
  1270                           ;main.c: 50:         amb_light = setup(&white, &amb, &motorL, &motorR);
  1271  003678  0EB6               	movlw	low main@white
  1272  00367A  0100               	movlb	0	; () banked
  1273  00367C  6F60               	movwf	setup@white& (0+255),b
  1274  00367E  0E01               	movlw	high main@white
  1275  003680  6F61               	movwf	(setup@white+1)& (0+255),b
  1276  003682  0E9E               	movlw	low main@amb
  1277  003684  6F62               	movwf	setup@amb& (0+255),b
  1278  003686  0E01               	movlw	high main@amb
  1279  003688  6F63               	movwf	(setup@amb+1)& (0+255),b
  1280  00368A  0ED2               	movlw	low main@motorL
  1281  00368C  6F64               	movwf	setup@mL& (0+255),b
  1282  00368E  0E01               	movlw	high main@motorL
  1283  003690  6F65               	movwf	(setup@mL+1)& (0+255),b
  1284  003692  0EDB               	movlw	low main@motorR
  1285  003694  6F66               	movwf	setup@mR& (0+255),b
  1286  003696  0E01               	movlw	high main@motorR
  1287  003698  6F67               	movwf	(setup@mR+1)& (0+255),b
  1288  00369A  EC9A  F023         	call	_setup	;wreg free
  1289  00369E  C060  F1A6         	movff	?_setup,main@amb_light
  1290  0036A2  C061  F1A7         	movff	?_setup+1,main@amb_light+1
  1291  0036A6                     l5280:
  1292                           
  1293                           ;main.c: 56:             T0CON0bits.T0EN=1;
  1294  0036A6  8ED5               	bsf	213,7,c	;volatile
  1295  0036A8                     
  1296                           ;main.c: 57:             start_time = centisecond;
  1297  0036A8  C17A  F1AA         	movff	_centisecond,main@start_time
  1298  0036AC  C17B  F1AB         	movff	_centisecond+1,main@start_time+1
  1299                           
  1300                           ;main.c: 58:             while (stop_signal == 0){
  1301  0036B0  EF74  F01B         	goto	l5288
  1302  0036B4                     l5284:
  1303                           
  1304                           ; BSR set to: 1
  1305                           ;main.c: 59:                 fullSpeedAhead(&motorL, &motorR);
  1306  0036B4  0ED2               	movlw	low main@motorL
  1307  0036B6  6E1A               	movwf	fullSpeedAhead@mL^0,c
  1308  0036B8  0E01               	movlw	high main@motorL
  1309  0036BA  6E1B               	movwf	(fullSpeedAhead@mL+1)^0,c
  1310  0036BC  0EDB               	movlw	low main@motorR
  1311  0036BE  6E1C               	movwf	fullSpeedAhead@mR^0,c
  1312  0036C0  0E01               	movlw	high main@motorR
  1313  0036C2  6E1D               	movwf	(fullSpeedAhead@mR+1)^0,c
  1314  0036C4  EC0B  F029         	call	_fullSpeedAhead	;wreg free
  1315  0036C8                     
  1316                           ;main.c: 60:                 stop_signal = detect_wall(&motorL, &motorR, amb_light);
  1317  0036C8  0ED2               	movlw	low main@motorL
  1318  0036CA  6E50               	movwf	detect_wall@mL^0,c
  1319  0036CC  0E01               	movlw	high main@motorL
  1320  0036CE  6E51               	movwf	(detect_wall@mL+1)^0,c
  1321  0036D0  0EDB               	movlw	low main@motorR
  1322  0036D2  6E52               	movwf	detect_wall@mR^0,c
  1323  0036D4  0E01               	movlw	high main@motorR
  1324  0036D6  6E53               	movwf	(detect_wall@mR+1)^0,c
  1325  0036D8  C1A6  F054         	movff	main@amb_light,detect_wall@amb_light
  1326  0036DC  C1A7  F055         	movff	main@amb_light+1,detect_wall@amb_light+1
  1327  0036E0  EC6C  F027         	call	_detect_wall	;wreg free
  1328  0036E4  0101               	movlb	1	; () banked
  1329  0036E6  6FA8               	movwf	main@stop_signal& (0+255),b
  1330  0036E8                     l5288:
  1331                           
  1332                           ;main.c: 58:             while (stop_signal == 0){
  1333  0036E8  0101               	movlb	1	; () banked
  1334  0036EA  51A8               	movf	main@stop_signal& (0+255),w,b
  1335  0036EC  B4D8               	btfsc	status,2,c
  1336  0036EE  EF7B  F01B         	goto	u5791
  1337  0036F2  EF7D  F01B         	goto	u5790
  1338  0036F6                     u5791:
  1339  0036F6  EF5A  F01B         	goto	l5284
  1340  0036FA                     u5790:
  1341  0036FA                     
  1342                           ; BSR set to: 1
  1343                           ;main.c: 63:             T0CON0bits.T0EN=0;
  1344  0036FA  9ED5               	bcf	213,7,c	;volatile
  1345                           
  1346                           ;main.c: 64:             stop_time = centisecond;
  1347  0036FC  C17A  F1AC         	movff	_centisecond,main@stop_time
  1348  003700  C17B  F1AD         	movff	_centisecond+1,main@stop_time+1
  1349  003704                     
  1350                           ; BSR set to: 1
  1351                           ;main.c: 65:             if ((stop_time-start_time)>10){
  1352  003704  51AA               	movf	main@start_time& (0+255),w,b
  1353  003706  5DAC               	subwf	main@stop_time& (0+255),w,b
  1354  003708  0100               	movlb	0	; () banked
  1355  00370A  6FF0               	movwf	??_main& (0+255),b
  1356  00370C  0101               	movlb	1	; () banked
  1357  00370E  51AB               	movf	(main@start_time+1)& (0+255),w,b
  1358  003710  59AD               	subwfb	(main@stop_time+1)& (0+255),w,b
  1359  003712  0100               	movlb	0	; () banked
  1360  003714  6FF1               	movwf	(??_main+1)& (0+255),b
  1361  003716  51F1               	movf	(??_main+1)& (0+255),w,b
  1362  003718  E109               	bnz	u5800
  1363  00371A  0E0B               	movlw	11
  1364  00371C  5DF0               	subwf	??_main& (0+255),w,b
  1365  00371E  A0D8               	btfss	status,0,c
  1366  003720  EF94  F01B         	goto	u5801
  1367  003724  EF96  F01B         	goto	u5800
  1368  003728                     u5801:
  1369  003728  EFB8  F01B         	goto	l5296
  1370  00372C                     u5800:
  1371  00372C                     
  1372                           ; BSR set to: 0
  1373                           ;main.c: 66:                 memory[array_index] = (stop_time-start_time-3);
  1374  00372C  0EFD               	movlw	253
  1375  00372E  6FF0               	movwf	??_main& (0+255),b
  1376  003730  0EFF               	movlw	255
  1377  003732  6FF1               	movwf	(??_main+1)& (0+255),b
  1378  003734  0101               	movlb	1	; () banked
  1379  003736  51AA               	movf	main@start_time& (0+255),w,b
  1380  003738  5DAC               	subwf	main@stop_time& (0+255),w,b
  1381  00373A  0100               	movlb	0	; () banked
  1382  00373C  6FF2               	movwf	(??_main+2)& (0+255),b
  1383  00373E  0101               	movlb	1	; () banked
  1384  003740  51AB               	movf	(main@start_time+1)& (0+255),w,b
  1385  003742  59AD               	subwfb	(main@stop_time+1)& (0+255),w,b
  1386  003744  0100               	movlb	0	; () banked
  1387  003746  6FF3               	movwf	(??_main+3)& (0+255),b
  1388  003748  51F0               	movf	??_main& (0+255),w,b
  1389  00374A  27F2               	addwf	(??_main+2)& (0+255),f,b
  1390  00374C  51F1               	movf	(??_main+1)& (0+255),w,b
  1391  00374E  23F3               	addwfc	(??_main+3)& (0+255),f,b
  1392  003750  0101               	movlb	1	; () banked
  1393  003752  517D               	movf	_array_index& (0+255),w,b
  1394  003754  0D02               	mullw	2
  1395  003756  0E00               	movlw	low _memory
  1396  003758  24F3               	addwf	243,w,c
  1397  00375A  6ED9               	movwf	fsr2l,c
  1398  00375C  0E01               	movlw	high _memory
  1399  00375E  20F4               	addwfc	prodh,w,c
  1400  003760  6EDA               	movwf	fsr2h,c
  1401  003762  C0F2  FFDE         	movff	??_main+2,postinc2
  1402  003766  C0F3  FFDD         	movff	??_main+3,postdec2
  1403  00376A                     
  1404                           ; BSR set to: 1
  1405                           ;main.c: 67:                 array_index++;
  1406  00376A  2B7D               	incf	_array_index& (0+255),f,b
  1407                           
  1408                           ;main.c: 68:             }
  1409  00376C  EFCF  F01B         	goto	l5304
  1410  003770                     l5296:
  1411                           
  1412                           ; BSR set to: 0
  1413                           ;main.c: 70:                 accident++;
  1414  003770  0101               	movlb	1	; () banked
  1415  003772  2BA9               	incf	main@accident& (0+255),f,b
  1416  003774                     
  1417                           ; BSR set to: 1
  1418                           ;main.c: 71:                 if (accident >= 5){
  1419  003774  0E04               	movlw	4
  1420  003776  65A9               	cpfsgt	main@accident& (0+255),b
  1421  003778  EFC0  F01B         	goto	u5811
  1422  00377C  EFC2  F01B         	goto	u5810
  1423  003780                     u5811:
  1424  003780  EFCF  F01B         	goto	l5304
  1425  003784                     u5810:
  1426  003784                     
  1427                           ; BSR set to: 1
  1428                           ;main.c: 72:                     goback(&motorL, &motorR);
  1429  003784  0ED2               	movlw	low main@motorL
  1430  003786  6E2D               	movwf	goback@mL^0,c
  1431  003788  0E01               	movlw	high main@motorL
  1432  00378A  6E2E               	movwf	(goback@mL+1)^0,c
  1433  00378C  0EDB               	movlw	low main@motorR
  1434  00378E  6E2F               	movwf	goback@mR^0,c
  1435  003790  0E01               	movlw	high main@motorR
  1436  003792  6E30               	movwf	(goback@mR+1)^0,c
  1437  003794  EC3E  F013         	call	_goback	;wreg free
  1438  003798                     
  1439                           ;main.c: 73:                     accident = 0;
  1440  003798  0E00               	movlw	0
  1441  00379A  0101               	movlb	1	; () banked
  1442  00379C  6FA9               	movwf	main@accident& (0+255),b
  1443  00379E                     l5304:
  1444                           
  1445                           ; BSR set to: 1
  1446                           ;main.c: 76:             stop(&motorL, &motorR);
  1447  00379E  0ED2               	movlw	low main@motorL
  1448  0037A0  6E1A               	movwf	stop@mL^0,c
  1449  0037A2  0E01               	movlw	high main@motorL
  1450  0037A4  6E1B               	movwf	(stop@mL+1)^0,c
  1451  0037A6  0EDB               	movlw	low main@motorR
  1452  0037A8  6E1C               	movwf	stop@mR^0,c
  1453  0037AA  0E01               	movlw	high main@motorR
  1454  0037AC  6E1D               	movwf	(stop@mR+1)^0,c
  1455  0037AE  ECCF  F029         	call	_stop	;wreg free
  1456  0037B2                     
  1457                           ;main.c: 77:             _delay((unsigned long)((1000)*(64000000/4000.0)));
  1458  0037B2  0E52               	movlw	82
  1459  0037B4  0100               	movlb	0	; () banked
  1460  0037B6  6FF1               	movwf	(??_main+1)& (0+255),b
  1461  0037B8  0E2B               	movlw	43
  1462  0037BA  6FF0               	movwf	??_main& (0+255),b
  1463  0037BC  0E00               	movlw	0
  1464  0037BE                     u5847:
  1465  0037BE  2EE8               	decfsz	wreg,f,c
  1466  0037C0  D7FE               	bra	u5847
  1467  0037C2  2FF0               	decfsz	??_main& (0+255),f,b
  1468  0037C4  D7FC               	bra	u5847
  1469  0037C6  2FF1               	decfsz	(??_main+1)& (0+255),f,b
  1470  0037C8  D7FA               	bra	u5847
  1471  0037CA  F000               	nop	
  1472  0037CC                     
  1473                           ;main.c: 78:             short_burst(&motorL, &motorR);
  1474  0037CC  0ED2               	movlw	low main@motorL
  1475  0037CE  6E20               	movwf	short_burst@mL^0,c
  1476  0037D0  0E01               	movlw	high main@motorL
  1477  0037D2  6E21               	movwf	(short_burst@mL+1)^0,c
  1478  0037D4  0EDB               	movlw	low main@motorR
  1479  0037D6  6E22               	movwf	short_burst@mR^0,c
  1480  0037D8  0E01               	movlw	high main@motorR
  1481  0037DA  6E23               	movwf	(short_burst@mR+1)^0,c
  1482  0037DC  EC33  F02C         	call	_short_burst	;wreg free
  1483  0037E0                     
  1484                           ;main.c: 79:             color = detect_color(&rgb, &white);
  1485  0037E0  0EAE               	movlw	low main@rgb
  1486  0037E2  6E57               	movwf	detect_color@m^0,c
  1487  0037E4  0E01               	movlw	high main@rgb
  1488  0037E6  6E58               	movwf	(detect_color@m+1)^0,c
  1489  0037E8  0EB6               	movlw	low main@white
  1490  0037EA  6E59               	movwf	detect_color@w^0,c
  1491  0037EC  0E01               	movlw	high main@white
  1492  0037EE  6E5A               	movwf	(detect_color@w+1)^0,c
  1493  0037F0  EC0A  F007         	call	_detect_color	;wreg free
  1494  0037F4  0101               	movlb	1	; () banked
  1495  0037F6  6F7C               	movwf	_color& (0+255),b
  1496  0037F8                     
  1497                           ; BSR set to: 1
  1498                           ;main.c: 80:             color = verify_color(color, &rgb, &white);
  1499  0037F8  0EAE               	movlw	low main@rgb
  1500  0037FA  0100               	movlb	0	; () banked
  1501  0037FC  6F79               	movwf	verify_color@m& (0+255),b
  1502  0037FE  0E01               	movlw	high main@rgb
  1503  003800  6F7A               	movwf	(verify_color@m+1)& (0+255),b
  1504  003802  0EB6               	movlw	low main@white
  1505  003804  6F7B               	movwf	verify_color@w& (0+255),b
  1506  003806  0E01               	movlw	high main@white
  1507  003808  6F7C               	movwf	(verify_color@w+1)& (0+255),b
  1508  00380A  0101               	movlb	1	; () banked
  1509  00380C  517C               	movf	_color& (0+255),w,b
  1510  00380E  EC2E  F02A         	call	_verify_color
  1511  003812  0101               	movlb	1	; () banked
  1512  003814  6F7C               	movwf	_color& (0+255),b
  1513  003816                     
  1514                           ; BSR set to: 1
  1515                           ;main.c: 81:             if (color!= 0){turning_action(color, &motorL, &motorR); color =
      +                           0;}
  1516  003816  517C               	movf	_color& (0+255),w,b
  1517  003818  B4D8               	btfsc	status,2,c
  1518  00381A  EF11  F01C         	goto	u5821
  1519  00381E  EF13  F01C         	goto	u5820
  1520  003822                     u5821:
  1521  003822  EF21  F01C         	goto	l5320
  1522  003826                     u5820:
  1523  003826                     
  1524                           ; BSR set to: 1
  1525  003826  0ED2               	movlw	low main@motorL
  1526  003828  6E35               	movwf	turning_action@mL^0,c
  1527  00382A  0E01               	movlw	high main@motorL
  1528  00382C  6E36               	movwf	(turning_action@mL+1)^0,c
  1529  00382E  0EDB               	movlw	low main@motorR
  1530  003830  6E37               	movwf	turning_action@mR^0,c
  1531  003832  0E01               	movlw	high main@motorR
  1532  003834  6E38               	movwf	(turning_action@mR+1)^0,c
  1533  003836  517C               	movf	_color& (0+255),w,b
  1534  003838  ECDD  F016         	call	_turning_action
  1535  00383C  0E00               	movlw	0
  1536  00383E  0101               	movlb	1	; () banked
  1537  003840  6F7C               	movwf	_color& (0+255),b
  1538  003842                     l5320:
  1539                           
  1540                           ; BSR set to: 1
  1541                           ;main.c: 82:             stop_signal = 0;
  1542  003842  0E00               	movlw	0
  1543  003844  6FA8               	movwf	main@stop_signal& (0+255),b
  1544  003846  EF53  F01B         	goto	l5280
  1545  00384A  EF18  F000         	goto	start
  1546  00384E                     __end_of_main:
  1547                           	callstack 0
  1548                           
  1549 ;; *************** function _verify_color *****************
  1550 ;; Defined at:
  1551 ;;		line 364 in file "color.c"
  1552 ;; Parameters:    Size  Location     Type
  1553 ;;  color           1    wreg     unsigned char 
  1554 ;;  m               2   25[BANK0 ] PTR struct color_rgb
  1555 ;;		 -> main@rgb(8), 
  1556 ;;  w               2   27[BANK0 ] PTR struct white_card
  1557 ;;		 -> main@white(28), 
  1558 ;; Auto vars:     Size  Location     Type
  1559 ;;  color           1   33[BANK0 ] unsigned char 
  1560 ;;  color2          2   31[BANK0 ] unsigned int 
  1561 ;; Return value:  Size  Location     Type
  1562 ;;                  1    wreg      unsigned char 
  1563 ;; Registers used:
  1564 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1565 ;; Tracked objects:
  1566 ;;		On entry : 0/0
  1567 ;;		On exit  : 0/0
  1568 ;;		Unchanged: 0/0
  1569 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1570 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1571 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1572 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1573 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1574 ;;Total ram usage:        9 bytes
  1575 ;; Hardware stack levels used: 1
  1576 ;; Hardware stack levels required when called: 6
  1577 ;; This function calls:
  1578 ;;		_detect_color
  1579 ;; This function is called by:
  1580 ;;		_main
  1581 ;; This function uses a non-reentrant model
  1582 ;;
  1583                           
  1584                           	psect	text1
  1585  00545C                     __ptext1:
  1586                           	callstack 0
  1587  00545C                     _verify_color:
  1588                           	callstack 24
  1589                           
  1590                           ; BSR set to: 1
  1591                           ;incstack = 0
  1592                           ;verify_color@color stored from wreg
  1593  00545C  0100               	movlb	0	; () banked
  1594  00545E  6F81               	movwf	verify_color@color& (0+255),b
  1595  005460                     
  1596                           ;color.c: 364: unsigned char verify_color(unsigned char color,struct color_rgb *m, struc
      +                          t white_card *w);color.c: 365: {;color.c: 366:     _delay((unsigned long)((50)*(64000000
      +                          /4000.0)));
  1597  005460  0E05               	movlw	5
  1598  005462  0100               	movlb	0	; () banked
  1599  005464  6F7E               	movwf	(??_verify_color+1)& (0+255),b
  1600  005466  0E0F               	movlw	15
  1601  005468  6F7D               	movwf	??_verify_color& (0+255),b
  1602  00546A  0EF1               	movlw	241
  1603  00546C                     u5857:
  1604  00546C  2EE8               	decfsz	wreg,f,c
  1605  00546E  D7FE               	bra	u5857
  1606  005470  2F7D               	decfsz	??_verify_color& (0+255),f,b
  1607  005472  D7FC               	bra	u5857
  1608  005474  2F7E               	decfsz	(??_verify_color+1)& (0+255),f,b
  1609  005476  D7FA               	bra	u5857
  1610  005478                     
  1611                           ;color.c: 367:     unsigned int color2;;color.c: 368:     color2 = detect_color(m,w);
  1612  005478  C079  F057         	movff	verify_color@m,detect_color@m
  1613  00547C  C07A  F058         	movff	verify_color@m+1,detect_color@m+1
  1614  005480  C07B  F059         	movff	verify_color@w,detect_color@w
  1615  005484  C07C  F05A         	movff	verify_color@w+1,detect_color@w+1
  1616  005488  EC0A  F007         	call	_detect_color	;wreg free
  1617  00548C  0100               	movlb	0	; () banked
  1618  00548E  6F7D               	movwf	??_verify_color& (0+255),b
  1619  005490  517D               	movf	??_verify_color& (0+255),w,b
  1620  005492  6F7F               	movwf	verify_color@color2& (0+255),b
  1621  005494  6B80               	clrf	(verify_color@color2+1)& (0+255),b
  1622  005496                     
  1623                           ; BSR set to: 0
  1624                           ;color.c: 369:     _delay((unsigned long)((50)*(64000000/4000.0)));
  1625  005496  0E05               	movlw	5
  1626  005498  0100               	movlb	0	; () banked
  1627  00549A  6F7E               	movwf	(??_verify_color+1)& (0+255),b
  1628  00549C  0E0F               	movlw	15
  1629  00549E  6F7D               	movwf	??_verify_color& (0+255),b
  1630  0054A0  0EF1               	movlw	241
  1631  0054A2                     u5867:
  1632  0054A2  2EE8               	decfsz	wreg,f,c
  1633  0054A4  D7FE               	bra	u5867
  1634  0054A6  2F7D               	decfsz	??_verify_color& (0+255),f,b
  1635  0054A8  D7FC               	bra	u5867
  1636  0054AA  2F7E               	decfsz	(??_verify_color+1)& (0+255),f,b
  1637  0054AC  D7FA               	bra	u5867
  1638  0054AE                     
  1639                           ;color.c: 370:     if (color == color2){return color;}
  1640  0054AE  0100               	movlb	0	; () banked
  1641  0054B0  5181               	movf	verify_color@color& (0+255),w,b
  1642  0054B2  6F7D               	movwf	??_verify_color& (0+255),b
  1643  0054B4  6B7E               	clrf	(??_verify_color+1)& (0+255),b
  1644  0054B6  517F               	movf	verify_color@color2& (0+255),w,b
  1645  0054B8  197D               	xorwf	??_verify_color& (0+255),w,b
  1646  0054BA  E107               	bnz	u5501
  1647  0054BC  5180               	movf	(verify_color@color2+1)& (0+255),w,b
  1648  0054BE  197E               	xorwf	(??_verify_color+1)& (0+255),w,b
  1649  0054C0  A4D8               	btfss	status,2,c
  1650  0054C2  EF65  F02A         	goto	u5501
  1651  0054C6  EF67  F02A         	goto	u5500
  1652  0054CA                     u5501:
  1653  0054CA  EF6A  F02A         	goto	l5038
  1654  0054CE                     u5500:
  1655  0054CE                     
  1656                           ; BSR set to: 0
  1657  0054CE  5181               	movf	verify_color@color& (0+255),w,b
  1658  0054D0  EF6B  F02A         	goto	l144
  1659  0054D4                     l5038:
  1660                           
  1661                           ; BSR set to: 0
  1662                           ;color.c: 373:         return color;}
  1663  0054D4  0E00               	movlw	0
  1664  0054D6                     l144:
  1665                           
  1666                           ; BSR set to: 0
  1667  0054D6  0012               	return		;funcret
  1668  0054D8                     __end_of_verify_color:
  1669                           	callstack 0
  1670                           
  1671 ;; *************** function _turning_action *****************
  1672 ;; Defined at:
  1673 ;;		line 14 in file "movement.c"
  1674 ;; Parameters:    Size  Location     Type
  1675 ;;  color           1    wreg     unsigned char 
  1676 ;;  mL              2   52[COMRAM] PTR struct DC_motor
  1677 ;;		 -> main@motorL(9), 
  1678 ;;  mR              2   54[COMRAM] PTR struct DC_motor
  1679 ;;		 -> main@motorR(9), 
  1680 ;; Auto vars:     Size  Location     Type
  1681 ;;  color           1   56[COMRAM] unsigned char 
  1682 ;; Return value:  Size  Location     Type
  1683 ;;                  1    wreg      void 
  1684 ;; Registers used:
  1685 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1686 ;; Tracked objects:
  1687 ;;		On entry : 0/0
  1688 ;;		On exit  : 0/0
  1689 ;;		Unchanged: 0/0
  1690 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1691 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1692 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1693 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1694 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1695 ;;Total ram usage:        5 bytes
  1696 ;; Hardware stack levels used: 1
  1697 ;; Hardware stack levels required when called: 6
  1698 ;; This function calls:
  1699 ;;		_fullSpeedBack
  1700 ;;		_goback
  1701 ;;		_toggle_light
  1702 ;;		_turn45
  1703 ;; This function is called by:
  1704 ;;		_main
  1705 ;; This function uses a non-reentrant model
  1706 ;;
  1707                           
  1708                           	psect	text2
  1709  002DBA                     __ptext2:
  1710                           	callstack 0
  1711  002DBA                     _turning_action:
  1712                           	callstack 24
  1713                           
  1714                           ; BSR set to: 0
  1715                           ;incstack = 0
  1716                           ;turning_action@color stored from wreg
  1717  002DBA  6E39               	movwf	turning_action@color^0,c
  1718  002DBC                     
  1719                           ;movement.c: 14: void turning_action(unsigned char color, struct DC_motor *mL, struct DC
      +                          _motor *mR);movement.c: 15: { if (color != 0){
  1720  002DBC  5039               	movf	turning_action@color^0,w,c
  1721  002DBE  B4D8               	btfsc	status,2,c
  1722  002DC0  EFE4  F016         	goto	u5701
  1723  002DC4  EFE6  F016         	goto	u5700
  1724  002DC8                     u5701:
  1725  002DC8  EF54  F018         	goto	l453
  1726  002DCC                     u5700:
  1727  002DCC                     
  1728                           ;movement.c: 16:         if (color == 1){
  1729  002DCC  0439               	decf	turning_action@color^0,w,c
  1730  002DCE  A4D8               	btfss	status,2,c
  1731  002DD0  EFEC  F016         	goto	u5711
  1732  002DD4  EFEE  F016         	goto	u5710
  1733  002DD8                     u5711:
  1734  002DD8  EF16  F017         	goto	l5198
  1735  002DDC                     u5710:
  1736  002DDC                     
  1737                           ;movement.c: 17:             fullSpeedBack(mL,mR,1);
  1738  002DDC  C035  F020         	movff	turning_action@mL,fullSpeedBack@mL
  1739  002DE0  C036  F021         	movff	turning_action@mL+1,fullSpeedBack@mL+1
  1740  002DE4  C037  F022         	movff	turning_action@mR,fullSpeedBack@mR
  1741  002DE8  C038  F023         	movff	turning_action@mR+1,fullSpeedBack@mR+1
  1742  002DEC  0E01               	movlw	1
  1743  002DEE  6E24               	movwf	fullSpeedBack@instruction^0,c
  1744  002DF0  ECF0  F022         	call	_fullSpeedBack	;wreg free
  1745                           
  1746                           ;movement.c: 18:             turn45(mL,mR,2,2);
  1747  002DF4  C035  F020         	movff	turning_action@mL,turn45@mL
  1748  002DF8  C036  F021         	movff	turning_action@mL+1,turn45@mL+1
  1749  002DFC  C037  F022         	movff	turning_action@mR,turn45@mR
  1750  002E00  C038  F023         	movff	turning_action@mR+1,turn45@mR+1
  1751  002E04  0E02               	movlw	2
  1752  002E06  6E24               	movwf	turn45@turn_time^0,c
  1753  002E08  0E02               	movlw	2
  1754  002E0A  6E25               	movwf	turn45@direction^0,c
  1755  002E0C  ECA2  F020         	call	_turn45	;wreg free
  1756  002E10                     
  1757                           ;movement.c: 19:             memory[array_index] = 1;
  1758  002E10  0101               	movlb	1	; () banked
  1759  002E12  517D               	movf	_array_index& (0+255),w,b
  1760  002E14  0D02               	mullw	2
  1761  002E16  0E00               	movlw	low _memory
  1762  002E18  24F3               	addwf	243,w,c
  1763  002E1A  6ED9               	movwf	fsr2l,c
  1764  002E1C  0E01               	movlw	high _memory
  1765  002E1E  20F4               	addwfc	prodh,w,c
  1766  002E20  6EDA               	movwf	fsr2h,c
  1767  002E22  0E01               	movlw	1
  1768  002E24  6EDE               	movwf	postinc2,c
  1769  002E26  0E00               	movlw	0
  1770  002E28  6EDD               	movwf	postdec2,c
  1771  002E2A                     
  1772                           ; BSR set to: 1
  1773                           ;movement.c: 20:             array_index++;
  1774  002E2A  2B7D               	incf	_array_index& (0+255),f,b
  1775  002E2C                     l5198:
  1776                           
  1777                           ;movement.c: 22:         if (color == 2){
  1778  002E2C  0E02               	movlw	2
  1779  002E2E  1839               	xorwf	turning_action@color^0,w,c
  1780  002E30  A4D8               	btfss	status,2,c
  1781  002E32  EF1D  F017         	goto	u5721
  1782  002E36  EF1F  F017         	goto	u5720
  1783  002E3A                     u5721:
  1784  002E3A  EF47  F017         	goto	l5206
  1785  002E3E                     u5720:
  1786  002E3E                     
  1787                           ;movement.c: 23:             fullSpeedBack(mL,mR,1);
  1788  002E3E  C035  F020         	movff	turning_action@mL,fullSpeedBack@mL
  1789  002E42  C036  F021         	movff	turning_action@mL+1,fullSpeedBack@mL+1
  1790  002E46  C037  F022         	movff	turning_action@mR,fullSpeedBack@mR
  1791  002E4A  C038  F023         	movff	turning_action@mR+1,fullSpeedBack@mR+1
  1792  002E4E  0E01               	movlw	1
  1793  002E50  6E24               	movwf	fullSpeedBack@instruction^0,c
  1794  002E52  ECF0  F022         	call	_fullSpeedBack	;wreg free
  1795                           
  1796                           ;movement.c: 24:             turn45(mL,mR,2,1);
  1797  002E56  C035  F020         	movff	turning_action@mL,turn45@mL
  1798  002E5A  C036  F021         	movff	turning_action@mL+1,turn45@mL+1
  1799  002E5E  C037  F022         	movff	turning_action@mR,turn45@mR
  1800  002E62  C038  F023         	movff	turning_action@mR+1,turn45@mR+1
  1801  002E66  0E02               	movlw	2
  1802  002E68  6E24               	movwf	turn45@turn_time^0,c
  1803  002E6A  0E01               	movlw	1
  1804  002E6C  6E25               	movwf	turn45@direction^0,c
  1805  002E6E  ECA2  F020         	call	_turn45	;wreg free
  1806  002E72                     
  1807                           ;movement.c: 25:             memory[array_index] = 2;
  1808  002E72  0101               	movlb	1	; () banked
  1809  002E74  517D               	movf	_array_index& (0+255),w,b
  1810  002E76  0D02               	mullw	2
  1811  002E78  0E00               	movlw	low _memory
  1812  002E7A  24F3               	addwf	243,w,c
  1813  002E7C  6ED9               	movwf	fsr2l,c
  1814  002E7E  0E01               	movlw	high _memory
  1815  002E80  20F4               	addwfc	prodh,w,c
  1816  002E82  6EDA               	movwf	fsr2h,c
  1817  002E84  0E02               	movlw	2
  1818  002E86  6EDE               	movwf	postinc2,c
  1819  002E88  0E00               	movlw	0
  1820  002E8A  6EDD               	movwf	postdec2,c
  1821  002E8C                     
  1822                           ; BSR set to: 1
  1823                           ;movement.c: 26:             array_index++;
  1824  002E8C  2B7D               	incf	_array_index& (0+255),f,b
  1825  002E8E                     l5206:
  1826                           
  1827                           ;movement.c: 28:         if (color == 3){
  1828  002E8E  0E03               	movlw	3
  1829  002E90  1839               	xorwf	turning_action@color^0,w,c
  1830  002E92  A4D8               	btfss	status,2,c
  1831  002E94  EF4E  F017         	goto	u5731
  1832  002E98  EF50  F017         	goto	u5730
  1833  002E9C                     u5731:
  1834  002E9C  EF78  F017         	goto	l5214
  1835  002EA0                     u5730:
  1836  002EA0                     
  1837                           ;movement.c: 29:             fullSpeedBack(mL,mR,1);
  1838  002EA0  C035  F020         	movff	turning_action@mL,fullSpeedBack@mL
  1839  002EA4  C036  F021         	movff	turning_action@mL+1,fullSpeedBack@mL+1
  1840  002EA8  C037  F022         	movff	turning_action@mR,fullSpeedBack@mR
  1841  002EAC  C038  F023         	movff	turning_action@mR+1,fullSpeedBack@mR+1
  1842  002EB0  0E01               	movlw	1
  1843  002EB2  6E24               	movwf	fullSpeedBack@instruction^0,c
  1844  002EB4  ECF0  F022         	call	_fullSpeedBack	;wreg free
  1845                           
  1846                           ;movement.c: 30:             turn45(mL,mR,4,1);
  1847  002EB8  C035  F020         	movff	turning_action@mL,turn45@mL
  1848  002EBC  C036  F021         	movff	turning_action@mL+1,turn45@mL+1
  1849  002EC0  C037  F022         	movff	turning_action@mR,turn45@mR
  1850  002EC4  C038  F023         	movff	turning_action@mR+1,turn45@mR+1
  1851  002EC8  0E04               	movlw	4
  1852  002ECA  6E24               	movwf	turn45@turn_time^0,c
  1853  002ECC  0E01               	movlw	1
  1854  002ECE  6E25               	movwf	turn45@direction^0,c
  1855  002ED0  ECA2  F020         	call	_turn45	;wreg free
  1856  002ED4                     
  1857                           ;movement.c: 31:             memory[array_index] = 3;
  1858  002ED4  0101               	movlb	1	; () banked
  1859  002ED6  517D               	movf	_array_index& (0+255),w,b
  1860  002ED8  0D02               	mullw	2
  1861  002EDA  0E00               	movlw	low _memory
  1862  002EDC  24F3               	addwf	243,w,c
  1863  002EDE  6ED9               	movwf	fsr2l,c
  1864  002EE0  0E01               	movlw	high _memory
  1865  002EE2  20F4               	addwfc	prodh,w,c
  1866  002EE4  6EDA               	movwf	fsr2h,c
  1867  002EE6  0E03               	movlw	3
  1868  002EE8  6EDE               	movwf	postinc2,c
  1869  002EEA  0E00               	movlw	0
  1870  002EEC  6EDD               	movwf	postdec2,c
  1871  002EEE                     
  1872                           ; BSR set to: 1
  1873                           ;movement.c: 32:             array_index++;
  1874  002EEE  2B7D               	incf	_array_index& (0+255),f,b
  1875  002EF0                     l5214:
  1876                           
  1877                           ;movement.c: 34:         if (color == 4){
  1878  002EF0  0E04               	movlw	4
  1879  002EF2  1839               	xorwf	turning_action@color^0,w,c
  1880  002EF4  A4D8               	btfss	status,2,c
  1881  002EF6  EF7F  F017         	goto	u5741
  1882  002EFA  EF81  F017         	goto	u5740
  1883  002EFE                     u5741:
  1884  002EFE  EFA9  F017         	goto	l5222
  1885  002F02                     u5740:
  1886  002F02                     
  1887                           ;movement.c: 35:             fullSpeedBack(mL,mR,3);
  1888  002F02  C035  F020         	movff	turning_action@mL,fullSpeedBack@mL
  1889  002F06  C036  F021         	movff	turning_action@mL+1,fullSpeedBack@mL+1
  1890  002F0A  C037  F022         	movff	turning_action@mR,fullSpeedBack@mR
  1891  002F0E  C038  F023         	movff	turning_action@mR+1,fullSpeedBack@mR+1
  1892  002F12  0E03               	movlw	3
  1893  002F14  6E24               	movwf	fullSpeedBack@instruction^0,c
  1894  002F16  ECF0  F022         	call	_fullSpeedBack	;wreg free
  1895                           
  1896                           ;movement.c: 36:             turn45(mL,mR,2,2);
  1897  002F1A  C035  F020         	movff	turning_action@mL,turn45@mL
  1898  002F1E  C036  F021         	movff	turning_action@mL+1,turn45@mL+1
  1899  002F22  C037  F022         	movff	turning_action@mR,turn45@mR
  1900  002F26  C038  F023         	movff	turning_action@mR+1,turn45@mR+1
  1901  002F2A  0E02               	movlw	2
  1902  002F2C  6E24               	movwf	turn45@turn_time^0,c
  1903  002F2E  0E02               	movlw	2
  1904  002F30  6E25               	movwf	turn45@direction^0,c
  1905  002F32  ECA2  F020         	call	_turn45	;wreg free
  1906  002F36                     
  1907                           ;movement.c: 37:             memory[array_index] = 4;
  1908  002F36  0101               	movlb	1	; () banked
  1909  002F38  517D               	movf	_array_index& (0+255),w,b
  1910  002F3A  0D02               	mullw	2
  1911  002F3C  0E00               	movlw	low _memory
  1912  002F3E  24F3               	addwf	243,w,c
  1913  002F40  6ED9               	movwf	fsr2l,c
  1914  002F42  0E01               	movlw	high _memory
  1915  002F44  20F4               	addwfc	prodh,w,c
  1916  002F46  6EDA               	movwf	fsr2h,c
  1917  002F48  0E04               	movlw	4
  1918  002F4A  6EDE               	movwf	postinc2,c
  1919  002F4C  0E00               	movlw	0
  1920  002F4E  6EDD               	movwf	postdec2,c
  1921  002F50                     
  1922                           ; BSR set to: 1
  1923                           ;movement.c: 38:             array_index++;
  1924  002F50  2B7D               	incf	_array_index& (0+255),f,b
  1925  002F52                     l5222:
  1926                           
  1927                           ;movement.c: 40:         if (color == 5){
  1928  002F52  0E05               	movlw	5
  1929  002F54  1839               	xorwf	turning_action@color^0,w,c
  1930  002F56  A4D8               	btfss	status,2,c
  1931  002F58  EFB0  F017         	goto	u5751
  1932  002F5C  EFB2  F017         	goto	u5750
  1933  002F60                     u5751:
  1934  002F60  EFDA  F017         	goto	l5230
  1935  002F64                     u5750:
  1936  002F64                     
  1937                           ;movement.c: 41:             fullSpeedBack(mL,mR,3);
  1938  002F64  C035  F020         	movff	turning_action@mL,fullSpeedBack@mL
  1939  002F68  C036  F021         	movff	turning_action@mL+1,fullSpeedBack@mL+1
  1940  002F6C  C037  F022         	movff	turning_action@mR,fullSpeedBack@mR
  1941  002F70  C038  F023         	movff	turning_action@mR+1,fullSpeedBack@mR+1
  1942  002F74  0E03               	movlw	3
  1943  002F76  6E24               	movwf	fullSpeedBack@instruction^0,c
  1944  002F78  ECF0  F022         	call	_fullSpeedBack	;wreg free
  1945                           
  1946                           ;movement.c: 42:             turn45(mL,mR,2,1);
  1947  002F7C  C035  F020         	movff	turning_action@mL,turn45@mL
  1948  002F80  C036  F021         	movff	turning_action@mL+1,turn45@mL+1
  1949  002F84  C037  F022         	movff	turning_action@mR,turn45@mR
  1950  002F88  C038  F023         	movff	turning_action@mR+1,turn45@mR+1
  1951  002F8C  0E02               	movlw	2
  1952  002F8E  6E24               	movwf	turn45@turn_time^0,c
  1953  002F90  0E01               	movlw	1
  1954  002F92  6E25               	movwf	turn45@direction^0,c
  1955  002F94  ECA2  F020         	call	_turn45	;wreg free
  1956  002F98                     
  1957                           ;movement.c: 43:             memory[array_index] = 5;
  1958  002F98  0101               	movlb	1	; () banked
  1959  002F9A  517D               	movf	_array_index& (0+255),w,b
  1960  002F9C  0D02               	mullw	2
  1961  002F9E  0E00               	movlw	low _memory
  1962  002FA0  24F3               	addwf	243,w,c
  1963  002FA2  6ED9               	movwf	fsr2l,c
  1964  002FA4  0E01               	movlw	high _memory
  1965  002FA6  20F4               	addwfc	prodh,w,c
  1966  002FA8  6EDA               	movwf	fsr2h,c
  1967  002FAA  0E05               	movlw	5
  1968  002FAC  6EDE               	movwf	postinc2,c
  1969  002FAE  0E00               	movlw	0
  1970  002FB0  6EDD               	movwf	postdec2,c
  1971  002FB2                     
  1972                           ; BSR set to: 1
  1973                           ;movement.c: 44:             array_index++;
  1974  002FB2  2B7D               	incf	_array_index& (0+255),f,b
  1975  002FB4                     l5230:
  1976                           
  1977                           ;movement.c: 46:         if (color == 6){
  1978  002FB4  0E06               	movlw	6
  1979  002FB6  1839               	xorwf	turning_action@color^0,w,c
  1980  002FB8  A4D8               	btfss	status,2,c
  1981  002FBA  EFE1  F017         	goto	u5761
  1982  002FBE  EFE3  F017         	goto	u5760
  1983  002FC2                     u5761:
  1984  002FC2  EF0B  F018         	goto	l5238
  1985  002FC6                     u5760:
  1986  002FC6                     
  1987                           ;movement.c: 47:             fullSpeedBack(mL,mR,1);
  1988  002FC6  C035  F020         	movff	turning_action@mL,fullSpeedBack@mL
  1989  002FCA  C036  F021         	movff	turning_action@mL+1,fullSpeedBack@mL+1
  1990  002FCE  C037  F022         	movff	turning_action@mR,fullSpeedBack@mR
  1991  002FD2  C038  F023         	movff	turning_action@mR+1,fullSpeedBack@mR+1
  1992  002FD6  0E01               	movlw	1
  1993  002FD8  6E24               	movwf	fullSpeedBack@instruction^0,c
  1994  002FDA  ECF0  F022         	call	_fullSpeedBack	;wreg free
  1995                           
  1996                           ;movement.c: 48:             turn45(mL,mR,3,2);
  1997  002FDE  C035  F020         	movff	turning_action@mL,turn45@mL
  1998  002FE2  C036  F021         	movff	turning_action@mL+1,turn45@mL+1
  1999  002FE6  C037  F022         	movff	turning_action@mR,turn45@mR
  2000  002FEA  C038  F023         	movff	turning_action@mR+1,turn45@mR+1
  2001  002FEE  0E03               	movlw	3
  2002  002FF0  6E24               	movwf	turn45@turn_time^0,c
  2003  002FF2  0E02               	movlw	2
  2004  002FF4  6E25               	movwf	turn45@direction^0,c
  2005  002FF6  ECA2  F020         	call	_turn45	;wreg free
  2006  002FFA                     
  2007                           ;movement.c: 49:             memory[array_index] = 6;
  2008  002FFA  0101               	movlb	1	; () banked
  2009  002FFC  517D               	movf	_array_index& (0+255),w,b
  2010  002FFE  0D02               	mullw	2
  2011  003000  0E00               	movlw	low _memory
  2012  003002  24F3               	addwf	243,w,c
  2013  003004  6ED9               	movwf	fsr2l,c
  2014  003006  0E01               	movlw	high _memory
  2015  003008  20F4               	addwfc	prodh,w,c
  2016  00300A  6EDA               	movwf	fsr2h,c
  2017  00300C  0E06               	movlw	6
  2018  00300E  6EDE               	movwf	postinc2,c
  2019  003010  0E00               	movlw	0
  2020  003012  6EDD               	movwf	postdec2,c
  2021  003014                     
  2022                           ; BSR set to: 1
  2023                           ;movement.c: 50:             array_index++;
  2024  003014  2B7D               	incf	_array_index& (0+255),f,b
  2025  003016                     l5238:
  2026                           
  2027                           ;movement.c: 52:         if (color == 7){
  2028  003016  0E07               	movlw	7
  2029  003018  1839               	xorwf	turning_action@color^0,w,c
  2030  00301A  A4D8               	btfss	status,2,c
  2031  00301C  EF12  F018         	goto	u5771
  2032  003020  EF14  F018         	goto	u5770
  2033  003024                     u5771:
  2034  003024  EF3C  F018         	goto	l5246
  2035  003028                     u5770:
  2036  003028                     
  2037                           ;movement.c: 53:             fullSpeedBack(mL,mR,1);
  2038  003028  C035  F020         	movff	turning_action@mL,fullSpeedBack@mL
  2039  00302C  C036  F021         	movff	turning_action@mL+1,fullSpeedBack@mL+1
  2040  003030  C037  F022         	movff	turning_action@mR,fullSpeedBack@mR
  2041  003034  C038  F023         	movff	turning_action@mR+1,fullSpeedBack@mR+1
  2042  003038  0E01               	movlw	1
  2043  00303A  6E24               	movwf	fullSpeedBack@instruction^0,c
  2044  00303C  ECF0  F022         	call	_fullSpeedBack	;wreg free
  2045                           
  2046                           ;movement.c: 54:             turn45(mL,mR,3,1);
  2047  003040  C035  F020         	movff	turning_action@mL,turn45@mL
  2048  003044  C036  F021         	movff	turning_action@mL+1,turn45@mL+1
  2049  003048  C037  F022         	movff	turning_action@mR,turn45@mR
  2050  00304C  C038  F023         	movff	turning_action@mR+1,turn45@mR+1
  2051  003050  0E03               	movlw	3
  2052  003052  6E24               	movwf	turn45@turn_time^0,c
  2053  003054  0E01               	movlw	1
  2054  003056  6E25               	movwf	turn45@direction^0,c
  2055  003058  ECA2  F020         	call	_turn45	;wreg free
  2056  00305C                     
  2057                           ;movement.c: 55:             memory[array_index] = 7;
  2058  00305C  0101               	movlb	1	; () banked
  2059  00305E  517D               	movf	_array_index& (0+255),w,b
  2060  003060  0D02               	mullw	2
  2061  003062  0E00               	movlw	low _memory
  2062  003064  24F3               	addwf	243,w,c
  2063  003066  6ED9               	movwf	fsr2l,c
  2064  003068  0E01               	movlw	high _memory
  2065  00306A  20F4               	addwfc	prodh,w,c
  2066  00306C  6EDA               	movwf	fsr2h,c
  2067  00306E  0E07               	movlw	7
  2068  003070  6EDE               	movwf	postinc2,c
  2069  003072  0E00               	movlw	0
  2070  003074  6EDD               	movwf	postdec2,c
  2071  003076                     
  2072                           ; BSR set to: 1
  2073                           ;movement.c: 56:             array_index++;
  2074  003076  2B7D               	incf	_array_index& (0+255),f,b
  2075  003078                     l5246:
  2076                           
  2077                           ;movement.c: 58:         if (color == 8){
  2078  003078  0E08               	movlw	8
  2079  00307A  1839               	xorwf	turning_action@color^0,w,c
  2080  00307C  A4D8               	btfss	status,2,c
  2081  00307E  EF43  F018         	goto	u5781
  2082  003082  EF45  F018         	goto	u5780
  2083  003086                     u5781:
  2084  003086  EF54  F018         	goto	l453
  2085  00308A                     u5780:
  2086  00308A                     
  2087                           ;movement.c: 59:             toggle_light(2,1);
  2088  00308A  0E01               	movlw	1
  2089  00308C  6E01               	movwf	toggle_light@toggletime^0,c
  2090  00308E  0E02               	movlw	2
  2091  003090  ECC7  F019         	call	_toggle_light
  2092  003094                     
  2093                           ;movement.c: 60:             goback(mL,mR);
  2094  003094  C035  F02D         	movff	turning_action@mL,goback@mL
  2095  003098  C036  F02E         	movff	turning_action@mL+1,goback@mL+1
  2096  00309C  C037  F02F         	movff	turning_action@mR,goback@mR
  2097  0030A0  C038  F030         	movff	turning_action@mR+1,goback@mR+1
  2098  0030A4  EC3E  F013         	call	_goback	;wreg free
  2099  0030A8                     l453:
  2100  0030A8  0012               	return		;funcret
  2101  0030AA                     __end_of_turning_action:
  2102                           	callstack 0
  2103                           
  2104 ;; *************** function _goback *****************
  2105 ;; Defined at:
  2106 ;;		line 65 in file "movement.c"
  2107 ;; Parameters:    Size  Location     Type
  2108 ;;  mL              2   44[COMRAM] PTR struct DC_motor
  2109 ;;		 -> main@motorL(9), 
  2110 ;;  mR              2   46[COMRAM] PTR struct DC_motor
  2111 ;;		 -> main@motorR(9), 
  2112 ;; Auto vars:     Size  Location     Type
  2113 ;;  i               2   50[COMRAM] unsigned int 
  2114 ;; Return value:  Size  Location     Type
  2115 ;;                  1    wreg      void 
  2116 ;; Registers used:
  2117 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2118 ;; Tracked objects:
  2119 ;;		On entry : 0/0
  2120 ;;		On exit  : 0/0
  2121 ;;		Unchanged: 0/0
  2122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2123 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2124 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2125 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2126 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2127 ;;Total ram usage:        8 bytes
  2128 ;; Hardware stack levels used: 1
  2129 ;; Hardware stack levels required when called: 5
  2130 ;; This function calls:
  2131 ;;		_fullSpeedAhead
  2132 ;;		_fullSpeedBack
  2133 ;;		_stop
  2134 ;;		_turn45
  2135 ;; This function is called by:
  2136 ;;		_main
  2137 ;;		_turning_action
  2138 ;; This function uses a non-reentrant model
  2139 ;;
  2140                           
  2141                           	psect	text3
  2142  00267C                     __ptext3:
  2143                           	callstack 0
  2144  00267C                     _goback:
  2145                           	callstack 24
  2146  00267C                     
  2147                           ;movement.c: 65: void goback(struct DC_motor *mL, struct DC_motor *mR);movement.c: 66: {
      +                           fullSpeedBack(mL,mR,1);
  2148  00267C  C02D  F020         	movff	goback@mL,fullSpeedBack@mL
  2149  002680  C02E  F021         	movff	goback@mL+1,fullSpeedBack@mL+1
  2150  002684  C02F  F022         	movff	goback@mR,fullSpeedBack@mR
  2151  002688  C030  F023         	movff	goback@mR+1,fullSpeedBack@mR+1
  2152  00268C  0E01               	movlw	1
  2153  00268E  6E24               	movwf	fullSpeedBack@instruction^0,c
  2154  002690  ECF0  F022         	call	_fullSpeedBack	;wreg free
  2155                           
  2156                           ;movement.c: 67:     turn45(mL,mR,4,1);
  2157  002694  C02D  F020         	movff	goback@mL,turn45@mL
  2158  002698  C02E  F021         	movff	goback@mL+1,turn45@mL+1
  2159  00269C  C02F  F022         	movff	goback@mR,turn45@mR
  2160  0026A0  C030  F023         	movff	goback@mR+1,turn45@mR+1
  2161  0026A4  0E04               	movlw	4
  2162  0026A6  6E24               	movwf	turn45@turn_time^0,c
  2163  0026A8  0E01               	movlw	1
  2164  0026AA  6E25               	movwf	turn45@direction^0,c
  2165  0026AC  ECA2  F020         	call	_turn45	;wreg free
  2166                           
  2167                           ;movement.c: 68:     fullSpeedBack(mL,mR,2);
  2168  0026B0  C02D  F020         	movff	goback@mL,fullSpeedBack@mL
  2169  0026B4  C02E  F021         	movff	goback@mL+1,fullSpeedBack@mL+1
  2170  0026B8  C02F  F022         	movff	goback@mR,fullSpeedBack@mR
  2171  0026BC  C030  F023         	movff	goback@mR+1,fullSpeedBack@mR+1
  2172  0026C0  0E02               	movlw	2
  2173  0026C2  6E24               	movwf	fullSpeedBack@instruction^0,c
  2174  0026C4  ECF0  F022         	call	_fullSpeedBack	;wreg free
  2175  0026C8                     l4916:
  2176                           
  2177                           ;movement.c: 69:     array_index--;
  2178  0026C8  0101               	movlb	1	; () banked
  2179  0026CA  077D               	decf	_array_index& (0+255),f,b
  2180  0026CC                     l4918:
  2181                           
  2182                           ; BSR set to: 1
  2183                           ;movement.c: 71:         fullSpeedAhead(mL,mR);
  2184  0026CC  C02D  F01A         	movff	goback@mL,fullSpeedAhead@mL
  2185  0026D0  C02E  F01B         	movff	goback@mL+1,fullSpeedAhead@mL+1
  2186  0026D4  C02F  F01C         	movff	goback@mR,fullSpeedAhead@mR
  2187  0026D8  C030  F01D         	movff	goback@mR+1,fullSpeedAhead@mR+1
  2188  0026DC  EC0B  F029         	call	_fullSpeedAhead	;wreg free
  2189  0026E0                     
  2190                           ;movement.c: 72:         for (unsigned int i=0; i<memory[array_index]; i++) {_delay((uns
      +                          igned long)((100)*(64000000/4000.0)));}
  2191  0026E0  0E00               	movlw	0
  2192  0026E2  6E34               	movwf	(goback@i+1)^0,c
  2193  0026E4  0E00               	movlw	0
  2194  0026E6  6E33               	movwf	goback@i^0,c
  2195  0026E8  EF84  F013         	goto	l4926
  2196  0026EC                     l4922:
  2197                           
  2198                           ; BSR set to: 1
  2199  0026EC  0E09               	movlw	9
  2200  0026EE  6E32               	movwf	(??_goback+1)^0,c
  2201  0026F0  0E1E               	movlw	30
  2202  0026F2  6E31               	movwf	??_goback^0,c
  2203  0026F4  0EE4               	movlw	228
  2204  0026F6                     u5877:
  2205  0026F6  2EE8               	decfsz	wreg,f,c
  2206  0026F8  D7FE               	bra	u5877
  2207  0026FA  2E31               	decfsz	??_goback^0,f,c
  2208  0026FC  D7FC               	bra	u5877
  2209  0026FE  2E32               	decfsz	(??_goback+1)^0,f,c
  2210  002700  D7FA               	bra	u5877
  2211  002702  D000               	nop2	
  2212  002704  4A33               	infsnz	goback@i^0,f,c
  2213  002706  2A34               	incf	(goback@i+1)^0,f,c
  2214  002708                     l4926:
  2215  002708  0101               	movlb	1	; () banked
  2216  00270A  517D               	movf	_array_index& (0+255),w,b
  2217  00270C  0D02               	mullw	2
  2218  00270E  0E00               	movlw	low _memory
  2219  002710  24F3               	addwf	243,w,c
  2220  002712  6ED9               	movwf	fsr2l,c
  2221  002714  0E01               	movlw	high _memory
  2222  002716  20F4               	addwfc	prodh,w,c
  2223  002718  6EDA               	movwf	fsr2h,c
  2224  00271A  50DE               	movf	postinc2,w,c
  2225  00271C  5C33               	subwf	goback@i^0,w,c
  2226  00271E  50DE               	movf	postinc2,w,c
  2227  002720  5834               	subwfb	(goback@i+1)^0,w,c
  2228  002722  A0D8               	btfss	status,0,c
  2229  002724  EF96  F013         	goto	u5331
  2230  002728  EF98  F013         	goto	u5330
  2231  00272C                     u5331:
  2232  00272C  EF76  F013         	goto	l4922
  2233  002730                     u5330:
  2234  002730                     
  2235                           ; BSR set to: 1
  2236                           ;movement.c: 73:         stop(mL,mR);
  2237  002730  C02D  F01A         	movff	goback@mL,stop@mL
  2238  002734  C02E  F01B         	movff	goback@mL+1,stop@mL+1
  2239  002738  C02F  F01C         	movff	goback@mR,stop@mR
  2240  00273C  C030  F01D         	movff	goback@mR+1,stop@mR+1
  2241  002740  ECCF  F029         	call	_stop	;wreg free
  2242  002744                     
  2243                           ;movement.c: 74:         if (array_index == 0){break;}
  2244  002744  0101               	movlb	1	; () banked
  2245  002746  517D               	movf	_array_index& (0+255),w,b
  2246  002748  A4D8               	btfss	status,2,c
  2247  00274A  EFA9  F013         	goto	u5341
  2248  00274E  EFAB  F013         	goto	u5340
  2249  002752                     u5341:
  2250  002752  EFAD  F013         	goto	l4934
  2251  002756                     u5340:
  2252  002756  EFF1  F014         	goto	l462
  2253  00275A                     l4934:
  2254                           
  2255                           ; BSR set to: 1
  2256                           ;movement.c: 75:         array_index--;
  2257  00275A  077D               	decf	_array_index& (0+255),f,b
  2258  00275C                     
  2259                           ; BSR set to: 1
  2260                           ;movement.c: 76:         if (memory[array_index] == 1){turn45(mL,mR,2,1);fullSpeedBack(m
      +                          L,mR,2);array_index--;}
  2261  00275C  517D               	movf	_array_index& (0+255),w,b
  2262  00275E  0D02               	mullw	2
  2263  002760  0E00               	movlw	low _memory
  2264  002762  24F3               	addwf	243,w,c
  2265  002764  6ED9               	movwf	fsr2l,c
  2266  002766  0E01               	movlw	high _memory
  2267  002768  20F4               	addwfc	prodh,w,c
  2268  00276A  6EDA               	movwf	fsr2h,c
  2269  00276C  04DE               	decf	postinc2,w,c
  2270  00276E  10DE               	iorwf	postinc2,w,c
  2271  002770  A4D8               	btfss	status,2,c
  2272  002772  EFBD  F013         	goto	u5351
  2273  002776  EFBF  F013         	goto	u5350
  2274  00277A                     u5351:
  2275  00277A  EFDB  F013         	goto	l4942
  2276  00277E                     u5350:
  2277  00277E                     
  2278                           ; BSR set to: 1
  2279  00277E  C02D  F020         	movff	goback@mL,turn45@mL
  2280  002782  C02E  F021         	movff	goback@mL+1,turn45@mL+1
  2281  002786  C02F  F022         	movff	goback@mR,turn45@mR
  2282  00278A  C030  F023         	movff	goback@mR+1,turn45@mR+1
  2283  00278E  0E02               	movlw	2
  2284  002790  6E24               	movwf	turn45@turn_time^0,c
  2285  002792  0E01               	movlw	1
  2286  002794  6E25               	movwf	turn45@direction^0,c
  2287  002796  ECA2  F020         	call	_turn45	;wreg free
  2288  00279A  C02D  F020         	movff	goback@mL,fullSpeedBack@mL
  2289  00279E  C02E  F021         	movff	goback@mL+1,fullSpeedBack@mL+1
  2290  0027A2  C02F  F022         	movff	goback@mR,fullSpeedBack@mR
  2291  0027A6  C030  F023         	movff	goback@mR+1,fullSpeedBack@mR+1
  2292  0027AA  0E02               	movlw	2
  2293  0027AC  6E24               	movwf	fullSpeedBack@instruction^0,c
  2294  0027AE  ECF0  F022         	call	_fullSpeedBack	;wreg free
  2295  0027B2  EF64  F013         	goto	l4916
  2296  0027B6                     l4942:
  2297                           
  2298                           ; BSR set to: 1
  2299  0027B6  517D               	movf	_array_index& (0+255),w,b
  2300  0027B8  0D02               	mullw	2
  2301  0027BA  0E00               	movlw	low _memory
  2302  0027BC  24F3               	addwf	243,w,c
  2303  0027BE  6ED9               	movwf	fsr2l,c
  2304  0027C0  0E01               	movlw	high _memory
  2305  0027C2  20F4               	addwfc	prodh,w,c
  2306  0027C4  6EDA               	movwf	fsr2h,c
  2307  0027C6  0E02               	movlw	2
  2308  0027C8  18DE               	xorwf	postinc2,w,c
  2309  0027CA  10DE               	iorwf	postinc2,w,c
  2310  0027CC  A4D8               	btfss	status,2,c
  2311  0027CE  EFEB  F013         	goto	u5361
  2312  0027D2  EFED  F013         	goto	u5360
  2313  0027D6                     u5361:
  2314  0027D6  EF09  F014         	goto	l4948
  2315  0027DA                     u5360:
  2316  0027DA                     
  2317                           ; BSR set to: 1
  2318  0027DA  C02D  F020         	movff	goback@mL,turn45@mL
  2319  0027DE  C02E  F021         	movff	goback@mL+1,turn45@mL+1
  2320  0027E2  C02F  F022         	movff	goback@mR,turn45@mR
  2321  0027E6  C030  F023         	movff	goback@mR+1,turn45@mR+1
  2322  0027EA  0E02               	movlw	2
  2323  0027EC  6E24               	movwf	turn45@turn_time^0,c
  2324  0027EE  0E02               	movlw	2
  2325  0027F0  6E25               	movwf	turn45@direction^0,c
  2326  0027F2  ECA2  F020         	call	_turn45	;wreg free
  2327  0027F6  C02D  F020         	movff	goback@mL,fullSpeedBack@mL
  2328  0027FA  C02E  F021         	movff	goback@mL+1,fullSpeedBack@mL+1
  2329  0027FE  C02F  F022         	movff	goback@mR,fullSpeedBack@mR
  2330  002802  C030  F023         	movff	goback@mR+1,fullSpeedBack@mR+1
  2331  002806  0E02               	movlw	2
  2332  002808  6E24               	movwf	fullSpeedBack@instruction^0,c
  2333  00280A  ECF0  F022         	call	_fullSpeedBack	;wreg free
  2334  00280E  EF64  F013         	goto	l4916
  2335  002812                     l4948:
  2336                           
  2337                           ; BSR set to: 1
  2338  002812  517D               	movf	_array_index& (0+255),w,b
  2339  002814  0D02               	mullw	2
  2340  002816  0E00               	movlw	low _memory
  2341  002818  24F3               	addwf	243,w,c
  2342  00281A  6ED9               	movwf	fsr2l,c
  2343  00281C  0E01               	movlw	high _memory
  2344  00281E  20F4               	addwfc	prodh,w,c
  2345  002820  6EDA               	movwf	fsr2h,c
  2346  002822  0E03               	movlw	3
  2347  002824  18DE               	xorwf	postinc2,w,c
  2348  002826  10DE               	iorwf	postinc2,w,c
  2349  002828  A4D8               	btfss	status,2,c
  2350  00282A  EF19  F014         	goto	u5371
  2351  00282E  EF1B  F014         	goto	u5370
  2352  002832                     u5371:
  2353  002832  EF37  F014         	goto	l4954
  2354  002836                     u5370:
  2355  002836                     
  2356                           ; BSR set to: 1
  2357  002836  C02D  F020         	movff	goback@mL,turn45@mL
  2358  00283A  C02E  F021         	movff	goback@mL+1,turn45@mL+1
  2359  00283E  C02F  F022         	movff	goback@mR,turn45@mR
  2360  002842  C030  F023         	movff	goback@mR+1,turn45@mR+1
  2361  002846  0E04               	movlw	4
  2362  002848  6E24               	movwf	turn45@turn_time^0,c
  2363  00284A  0E02               	movlw	2
  2364  00284C  6E25               	movwf	turn45@direction^0,c
  2365  00284E  ECA2  F020         	call	_turn45	;wreg free
  2366  002852  C02D  F020         	movff	goback@mL,fullSpeedBack@mL
  2367  002856  C02E  F021         	movff	goback@mL+1,fullSpeedBack@mL+1
  2368  00285A  C02F  F022         	movff	goback@mR,fullSpeedBack@mR
  2369  00285E  C030  F023         	movff	goback@mR+1,fullSpeedBack@mR+1
  2370  002862  0E02               	movlw	2
  2371  002864  6E24               	movwf	fullSpeedBack@instruction^0,c
  2372  002866  ECF0  F022         	call	_fullSpeedBack	;wreg free
  2373  00286A  EF64  F013         	goto	l4916
  2374  00286E                     l4954:
  2375                           
  2376                           ; BSR set to: 1
  2377  00286E  517D               	movf	_array_index& (0+255),w,b
  2378  002870  0D02               	mullw	2
  2379  002872  0E00               	movlw	low _memory
  2380  002874  24F3               	addwf	243,w,c
  2381  002876  6ED9               	movwf	fsr2l,c
  2382  002878  0E01               	movlw	high _memory
  2383  00287A  20F4               	addwfc	prodh,w,c
  2384  00287C  6EDA               	movwf	fsr2h,c
  2385  00287E  0E04               	movlw	4
  2386  002880  18DE               	xorwf	postinc2,w,c
  2387  002882  10DE               	iorwf	postinc2,w,c
  2388  002884  A4D8               	btfss	status,2,c
  2389  002886  EF47  F014         	goto	u5381
  2390  00288A  EF49  F014         	goto	u5380
  2391  00288E                     u5381:
  2392  00288E  EF65  F014         	goto	l4960
  2393  002892                     u5380:
  2394  002892                     
  2395                           ; BSR set to: 1
  2396  002892  C02D  F020         	movff	goback@mL,turn45@mL
  2397  002896  C02E  F021         	movff	goback@mL+1,turn45@mL+1
  2398  00289A  C02F  F022         	movff	goback@mR,turn45@mR
  2399  00289E  C030  F023         	movff	goback@mR+1,turn45@mR+1
  2400  0028A2  0E02               	movlw	2
  2401  0028A4  6E24               	movwf	turn45@turn_time^0,c
  2402  0028A6  0E01               	movlw	1
  2403  0028A8  6E25               	movwf	turn45@direction^0,c
  2404  0028AA  ECA2  F020         	call	_turn45	;wreg free
  2405  0028AE  C02D  F020         	movff	goback@mL,fullSpeedBack@mL
  2406  0028B2  C02E  F021         	movff	goback@mL+1,fullSpeedBack@mL+1
  2407  0028B6  C02F  F022         	movff	goback@mR,fullSpeedBack@mR
  2408  0028BA  C030  F023         	movff	goback@mR+1,fullSpeedBack@mR+1
  2409  0028BE  0E03               	movlw	3
  2410  0028C0  6E24               	movwf	fullSpeedBack@instruction^0,c
  2411  0028C2  ECF0  F022         	call	_fullSpeedBack	;wreg free
  2412  0028C6  EF64  F013         	goto	l4916
  2413  0028CA                     l4960:
  2414                           
  2415                           ; BSR set to: 1
  2416  0028CA  517D               	movf	_array_index& (0+255),w,b
  2417  0028CC  0D02               	mullw	2
  2418  0028CE  0E00               	movlw	low _memory
  2419  0028D0  24F3               	addwf	243,w,c
  2420  0028D2  6ED9               	movwf	fsr2l,c
  2421  0028D4  0E01               	movlw	high _memory
  2422  0028D6  20F4               	addwfc	prodh,w,c
  2423  0028D8  6EDA               	movwf	fsr2h,c
  2424  0028DA  0E05               	movlw	5
  2425  0028DC  18DE               	xorwf	postinc2,w,c
  2426  0028DE  10DE               	iorwf	postinc2,w,c
  2427  0028E0  A4D8               	btfss	status,2,c
  2428  0028E2  EF75  F014         	goto	u5391
  2429  0028E6  EF77  F014         	goto	u5390
  2430  0028EA                     u5391:
  2431  0028EA  EF93  F014         	goto	l4966
  2432  0028EE                     u5390:
  2433  0028EE                     
  2434                           ; BSR set to: 1
  2435  0028EE  C02D  F020         	movff	goback@mL,turn45@mL
  2436  0028F2  C02E  F021         	movff	goback@mL+1,turn45@mL+1
  2437  0028F6  C02F  F022         	movff	goback@mR,turn45@mR
  2438  0028FA  C030  F023         	movff	goback@mR+1,turn45@mR+1
  2439  0028FE  0E02               	movlw	2
  2440  002900  6E24               	movwf	turn45@turn_time^0,c
  2441  002902  0E02               	movlw	2
  2442  002904  6E25               	movwf	turn45@direction^0,c
  2443  002906  ECA2  F020         	call	_turn45	;wreg free
  2444  00290A  C02D  F020         	movff	goback@mL,fullSpeedBack@mL
  2445  00290E  C02E  F021         	movff	goback@mL+1,fullSpeedBack@mL+1
  2446  002912  C02F  F022         	movff	goback@mR,fullSpeedBack@mR
  2447  002916  C030  F023         	movff	goback@mR+1,fullSpeedBack@mR+1
  2448  00291A  0E03               	movlw	3
  2449  00291C  6E24               	movwf	fullSpeedBack@instruction^0,c
  2450  00291E  ECF0  F022         	call	_fullSpeedBack	;wreg free
  2451  002922  EF64  F013         	goto	l4916
  2452  002926                     l4966:
  2453                           
  2454                           ; BSR set to: 1
  2455  002926  517D               	movf	_array_index& (0+255),w,b
  2456  002928  0D02               	mullw	2
  2457  00292A  0E00               	movlw	low _memory
  2458  00292C  24F3               	addwf	243,w,c
  2459  00292E  6ED9               	movwf	fsr2l,c
  2460  002930  0E01               	movlw	high _memory
  2461  002932  20F4               	addwfc	prodh,w,c
  2462  002934  6EDA               	movwf	fsr2h,c
  2463  002936  0E06               	movlw	6
  2464  002938  18DE               	xorwf	postinc2,w,c
  2465  00293A  10DE               	iorwf	postinc2,w,c
  2466  00293C  A4D8               	btfss	status,2,c
  2467  00293E  EFA3  F014         	goto	u5401
  2468  002942  EFA5  F014         	goto	u5400
  2469  002946                     u5401:
  2470  002946  EFC1  F014         	goto	l4972
  2471  00294A                     u5400:
  2472  00294A                     
  2473                           ; BSR set to: 1
  2474  00294A  C02D  F020         	movff	goback@mL,turn45@mL
  2475  00294E  C02E  F021         	movff	goback@mL+1,turn45@mL+1
  2476  002952  C02F  F022         	movff	goback@mR,turn45@mR
  2477  002956  C030  F023         	movff	goback@mR+1,turn45@mR+1
  2478  00295A  0E03               	movlw	3
  2479  00295C  6E24               	movwf	turn45@turn_time^0,c
  2480  00295E  0E01               	movlw	1
  2481  002960  6E25               	movwf	turn45@direction^0,c
  2482  002962  ECA2  F020         	call	_turn45	;wreg free
  2483  002966  C02D  F020         	movff	goback@mL,fullSpeedBack@mL
  2484  00296A  C02E  F021         	movff	goback@mL+1,fullSpeedBack@mL+1
  2485  00296E  C02F  F022         	movff	goback@mR,fullSpeedBack@mR
  2486  002972  C030  F023         	movff	goback@mR+1,fullSpeedBack@mR+1
  2487  002976  0E02               	movlw	2
  2488  002978  6E24               	movwf	fullSpeedBack@instruction^0,c
  2489  00297A  ECF0  F022         	call	_fullSpeedBack	;wreg free
  2490  00297E  EF64  F013         	goto	l4916
  2491  002982                     l4972:
  2492                           
  2493                           ; BSR set to: 1
  2494  002982  517D               	movf	_array_index& (0+255),w,b
  2495  002984  0D02               	mullw	2
  2496  002986  0E00               	movlw	low _memory
  2497  002988  24F3               	addwf	243,w,c
  2498  00298A  6ED9               	movwf	fsr2l,c
  2499  00298C  0E01               	movlw	high _memory
  2500  00298E  20F4               	addwfc	prodh,w,c
  2501  002990  6EDA               	movwf	fsr2h,c
  2502  002992  0E07               	movlw	7
  2503  002994  18DE               	xorwf	postinc2,w,c
  2504  002996  10DE               	iorwf	postinc2,w,c
  2505  002998  A4D8               	btfss	status,2,c
  2506  00299A  EFD1  F014         	goto	u5411
  2507  00299E  EFD3  F014         	goto	u5410
  2508  0029A2                     u5411:
  2509  0029A2  EFEF  F014         	goto	l470
  2510  0029A6                     u5410:
  2511  0029A6                     
  2512                           ; BSR set to: 1
  2513  0029A6  C02D  F020         	movff	goback@mL,turn45@mL
  2514  0029AA  C02E  F021         	movff	goback@mL+1,turn45@mL+1
  2515  0029AE  C02F  F022         	movff	goback@mR,turn45@mR
  2516  0029B2  C030  F023         	movff	goback@mR+1,turn45@mR+1
  2517  0029B6  0E03               	movlw	3
  2518  0029B8  6E24               	movwf	turn45@turn_time^0,c
  2519  0029BA  0E02               	movlw	2
  2520  0029BC  6E25               	movwf	turn45@direction^0,c
  2521  0029BE  ECA2  F020         	call	_turn45	;wreg free
  2522  0029C2  C02D  F020         	movff	goback@mL,fullSpeedBack@mL
  2523  0029C6  C02E  F021         	movff	goback@mL+1,fullSpeedBack@mL+1
  2524  0029CA  C02F  F022         	movff	goback@mR,fullSpeedBack@mR
  2525  0029CE  C030  F023         	movff	goback@mR+1,fullSpeedBack@mR+1
  2526  0029D2  0E02               	movlw	2
  2527  0029D4  6E24               	movwf	fullSpeedBack@instruction^0,c
  2528  0029D6  ECF0  F022         	call	_fullSpeedBack	;wreg free
  2529  0029DA  EF64  F013         	goto	l4916
  2530  0029DE                     l470:
  2531                           
  2532                           ; BSR set to: 1
  2533  0029DE  EF66  F013         	goto	l4918
  2534  0029E2                     l462:
  2535                           
  2536                           ; BSR set to: 1
  2537                           ;movement.c: 84:     LATDbits.LATD7 = 1;
  2538  0029E2  8E7C               	bsf	124,7,c	;volatile
  2539                           
  2540                           ;movement.c: 85:     while(PORTFbits.RF2){
  2541  0029E4  EF08  F015         	goto	l476
  2542  0029E8                     l4978:
  2543                           
  2544                           ;movement.c: 86:         stop(mL,mR);
  2545  0029E8  C02D  F01A         	movff	goback@mL,stop@mL
  2546  0029EC  C02E  F01B         	movff	goback@mL+1,stop@mL+1
  2547  0029F0  C02F  F01C         	movff	goback@mR,stop@mR
  2548  0029F4  C030  F01D         	movff	goback@mR+1,stop@mR+1
  2549  0029F8  ECCF  F029         	call	_stop	;wreg free
  2550  0029FC                     
  2551                           ;movement.c: 87:         if (!PORTFbits.RF2){LATDbits.LATD7 = 0;break;}
  2552  0029FC  B48E               	btfsc	142,2,c	;volatile
  2553  0029FE  EF03  F015         	goto	u5421
  2554  002A02  EF05  F015         	goto	u5420
  2555  002A06                     u5421:
  2556  002A06  EF08  F015         	goto	l476
  2557  002A0A                     u5420:
  2558  002A0A  9E7C               	bcf	124,7,c	;volatile
  2559  002A0C  EF0F  F015         	goto	l480
  2560  002A10                     l476:
  2561                           
  2562                           ;movement.c: 85:     while(PORTFbits.RF2){
  2563  002A10  B48E               	btfsc	142,2,c	;volatile
  2564  002A12  EF0D  F015         	goto	u5431
  2565  002A16  EF0F  F015         	goto	u5430
  2566  002A1A                     u5431:
  2567  002A1A  EFF4  F014         	goto	l4978
  2568  002A1E                     u5430:
  2569  002A1E                     l480:
  2570  002A1E  0012               	return		;funcret
  2571  002A20                     __end_of_goback:
  2572                           	callstack 0
  2573                           
  2574 ;; *************** function _fullSpeedBack *****************
  2575 ;; Defined at:
  2576 ;;		line 136 in file "dc_motor.c"
  2577 ;; Parameters:    Size  Location     Type
  2578 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  2579 ;;		 -> main@motorL(9), 
  2580 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  2581 ;;		 -> main@motorR(9), 
  2582 ;;  instruction     1   35[COMRAM] unsigned char 
  2583 ;; Auto vars:     Size  Location     Type
  2584 ;;		None
  2585 ;; Return value:  Size  Location     Type
  2586 ;;                  1    wreg      void 
  2587 ;; Registers used:
  2588 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2589 ;; Tracked objects:
  2590 ;;		On entry : 0/0
  2591 ;;		On exit  : 0/0
  2592 ;;		Unchanged: 0/0
  2593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2594 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2595 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2596 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2597 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2598 ;;Total ram usage:        7 bytes
  2599 ;; Hardware stack levels used: 1
  2600 ;; Hardware stack levels required when called: 4
  2601 ;; This function calls:
  2602 ;;		_setMotorPWM
  2603 ;;		_stop
  2604 ;; This function is called by:
  2605 ;;		_turning_action
  2606 ;;		_goback
  2607 ;; This function uses a non-reentrant model
  2608 ;;
  2609                           
  2610                           	psect	text4
  2611  0045E0                     __ptext4:
  2612                           	callstack 0
  2613  0045E0                     _fullSpeedBack:
  2614                           	callstack 24
  2615  0045E0                     
  2616                           ;dc_motor.c: 136: void fullSpeedBack(struct DC_motor *mL, struct DC_motor *mR, unsigned 
      +                          char instruction);dc_motor.c: 137: {;dc_motor.c: 138:     mL->direction=0;
  2617  0045E0  EE20 F001          	lfsr	2,1
  2618  0045E4  5020               	movf	fullSpeedBack@mL^0,w,c
  2619  0045E6  26D9               	addwf	fsr2l,f,c
  2620  0045E8  5021               	movf	(fullSpeedBack@mL+1)^0,w,c
  2621  0045EA  22DA               	addwfc	fsr2h,f,c
  2622  0045EC  0E00               	movlw	0
  2623  0045EE  6EDF               	movwf	indf2,c
  2624                           
  2625                           ;dc_motor.c: 139:     mR->direction=0;
  2626  0045F0  EE20 F001          	lfsr	2,1
  2627  0045F4  5022               	movf	fullSpeedBack@mR^0,w,c
  2628  0045F6  26D9               	addwf	fsr2l,f,c
  2629  0045F8  5023               	movf	(fullSpeedBack@mR+1)^0,w,c
  2630  0045FA  22DA               	addwfc	fsr2h,f,c
  2631  0045FC  0E00               	movlw	0
  2632  0045FE  6EDF               	movwf	indf2,c
  2633                           
  2634                           ;dc_motor.c: 140:     while (mL->power<44 || mR->power<44){
  2635  004600  EF3A  F023         	goto	l4418
  2636  004604                     l4404:
  2637                           
  2638                           ;dc_motor.c: 141:         if (mL->power<44) {mL->power += 2;}
  2639  004604  C020  FFD9         	movff	fullSpeedBack@mL,fsr2l
  2640  004608  C021  FFDA         	movff	fullSpeedBack@mL+1,fsr2h
  2641  00460C  0E2C               	movlw	44
  2642  00460E  60DF               	cpfslt	indf2,c
  2643  004610  EF0C  F023         	goto	u4761
  2644  004614  EF0E  F023         	goto	u4760
  2645  004618                     u4761:
  2646  004618  EF14  F023         	goto	l4408
  2647  00461C                     u4760:
  2648  00461C  C020  FFD9         	movff	fullSpeedBack@mL,fsr2l
  2649  004620  C021  FFDA         	movff	fullSpeedBack@mL+1,fsr2h
  2650  004624  0E02               	movlw	2
  2651  004626  26DF               	addwf	indf2,f,c
  2652  004628                     l4408:
  2653                           
  2654                           ;dc_motor.c: 142:         if (mR->power<44) {mR->power += 2;}
  2655  004628  C022  FFD9         	movff	fullSpeedBack@mR,fsr2l
  2656  00462C  C023  FFDA         	movff	fullSpeedBack@mR+1,fsr2h
  2657  004630  0E2C               	movlw	44
  2658  004632  60DF               	cpfslt	indf2,c
  2659  004634  EF1E  F023         	goto	u4771
  2660  004638  EF20  F023         	goto	u4770
  2661  00463C                     u4771:
  2662  00463C  EF26  F023         	goto	l4412
  2663  004640                     u4770:
  2664  004640  C022  FFD9         	movff	fullSpeedBack@mR,fsr2l
  2665  004644  C023  FFDA         	movff	fullSpeedBack@mR+1,fsr2h
  2666  004648  0E02               	movlw	2
  2667  00464A  26DF               	addwf	indf2,f,c
  2668  00464C                     l4412:
  2669                           
  2670                           ;dc_motor.c: 143:         setMotorPWM(mL);
  2671  00464C  C020  F00F         	movff	fullSpeedBack@mL,setMotorPWM@m
  2672  004650  C021  F010         	movff	fullSpeedBack@mL+1,setMotorPWM@m+1
  2673  004654  EC2C  F01D         	call	_setMotorPWM	;wreg free
  2674  004658                     
  2675                           ;dc_motor.c: 144:         setMotorPWM(mR);
  2676  004658  C022  F00F         	movff	fullSpeedBack@mR,setMotorPWM@m
  2677  00465C  C023  F010         	movff	fullSpeedBack@mR+1,setMotorPWM@m+1
  2678  004660  EC2C  F01D         	call	_setMotorPWM	;wreg free
  2679  004664                     
  2680                           ;dc_motor.c: 145:         _delay((unsigned long)((5)*(64000000/4000.0)));
  2681  004664  0E68               	movlw	104
  2682  004666  6E25               	movwf	??_fullSpeedBack^0,c
  2683  004668  0EE4               	movlw	228
  2684  00466A                     u5887:
  2685  00466A  2EE8               	decfsz	wreg,f,c
  2686  00466C  D7FE               	bra	u5887
  2687  00466E  2E25               	decfsz	??_fullSpeedBack^0,f,c
  2688  004670  D7FC               	bra	u5887
  2689  004672  D000               	nop2	
  2690  004674                     l4418:
  2691                           
  2692                           ;dc_motor.c: 140:     while (mL->power<44 || mR->power<44){
  2693  004674  C020  FFD9         	movff	fullSpeedBack@mL,fsr2l
  2694  004678  C021  FFDA         	movff	fullSpeedBack@mL+1,fsr2h
  2695  00467C  0E2B               	movlw	43
  2696  00467E  64DF               	cpfsgt	indf2,c
  2697  004680  EF44  F023         	goto	u4781
  2698  004684  EF46  F023         	goto	u4780
  2699  004688                     u4781:
  2700  004688  EF02  F023         	goto	l4404
  2701  00468C                     u4780:
  2702  00468C  C022  FFD9         	movff	fullSpeedBack@mR,fsr2l
  2703  004690  C023  FFDA         	movff	fullSpeedBack@mR+1,fsr2h
  2704  004694  0E2B               	movlw	43
  2705  004696  64DF               	cpfsgt	indf2,c
  2706  004698  EF50  F023         	goto	u4791
  2707  00469C  EF52  F023         	goto	u4790
  2708  0046A0                     u4791:
  2709  0046A0  EF02  F023         	goto	l4404
  2710  0046A4                     u4790:
  2711  0046A4                     
  2712                           ;dc_motor.c: 148:     if (instruction == 1) {_delay((unsigned long)((600)*(64000000/4000
      +                          .0)));}
  2713  0046A4  0424               	decf	fullSpeedBack@instruction^0,w,c
  2714  0046A6  A4D8               	btfss	status,2,c
  2715  0046A8  EF58  F023         	goto	u4801
  2716  0046AC  EF5A  F023         	goto	u4800
  2717  0046B0                     u4801:
  2718  0046B0  EF65  F023         	goto	l4426
  2719  0046B4                     u4800:
  2720  0046B4  0E31               	movlw	49
  2721  0046B6  6E26               	movwf	(??_fullSpeedBack+1)^0,c
  2722  0046B8  0EB4               	movlw	180
  2723  0046BA  6E25               	movwf	??_fullSpeedBack^0,c
  2724  0046BC  0E66               	movlw	102
  2725  0046BE                     u5897:
  2726  0046BE  2EE8               	decfsz	wreg,f,c
  2727  0046C0  D7FE               	bra	u5897
  2728  0046C2  2E25               	decfsz	??_fullSpeedBack^0,f,c
  2729  0046C4  D7FC               	bra	u5897
  2730  0046C6  2E26               	decfsz	(??_fullSpeedBack+1)^0,f,c
  2731  0046C8  D7FA               	bra	u5897
  2732  0046CA                     l4426:
  2733                           
  2734                           ;dc_motor.c: 149:     if (instruction == 2) {_delay((unsigned long)((1000)*(64000000/400
      +                          0.0)));}
  2735  0046CA  0E02               	movlw	2
  2736  0046CC  1824               	xorwf	fullSpeedBack@instruction^0,w,c
  2737  0046CE  A4D8               	btfss	status,2,c
  2738  0046D0  EF6C  F023         	goto	u4811
  2739  0046D4  EF6E  F023         	goto	u4810
  2740  0046D8                     u4811:
  2741  0046D8  EF7A  F023         	goto	l4430
  2742  0046DC                     u4810:
  2743  0046DC  0E52               	movlw	82
  2744  0046DE  6E26               	movwf	(??_fullSpeedBack+1)^0,c
  2745  0046E0  0E2B               	movlw	43
  2746  0046E2  6E25               	movwf	??_fullSpeedBack^0,c
  2747  0046E4  0E00               	movlw	0
  2748  0046E6                     u5907:
  2749  0046E6  2EE8               	decfsz	wreg,f,c
  2750  0046E8  D7FE               	bra	u5907
  2751  0046EA  2E25               	decfsz	??_fullSpeedBack^0,f,c
  2752  0046EC  D7FC               	bra	u5907
  2753  0046EE  2E26               	decfsz	(??_fullSpeedBack+1)^0,f,c
  2754  0046F0  D7FA               	bra	u5907
  2755  0046F2  D000               	nop2	
  2756  0046F4                     l4430:
  2757                           
  2758                           ;dc_motor.c: 150:     if (instruction == 3) {_delay((unsigned long)((2000)*(64000000/400
      +                          0.0)));}
  2759  0046F4  0E03               	movlw	3
  2760  0046F6  1824               	xorwf	fullSpeedBack@instruction^0,w,c
  2761  0046F8  A4D8               	btfss	status,2,c
  2762  0046FA  EF81  F023         	goto	u4821
  2763  0046FE  EF83  F023         	goto	u4820
  2764  004702                     u4821:
  2765  004702  EF8F  F023         	goto	l4434
  2766  004706                     u4820:
  2767  004706  0EA3               	movlw	163
  2768  004708  6E26               	movwf	(??_fullSpeedBack+1)^0,c
  2769  00470A  0E57               	movlw	87
  2770  00470C  6E25               	movwf	??_fullSpeedBack^0,c
  2771  00470E  0E02               	movlw	2
  2772  004710                     u5917:
  2773  004710  2EE8               	decfsz	wreg,f,c
  2774  004712  D7FE               	bra	u5917
  2775  004714  2E25               	decfsz	??_fullSpeedBack^0,f,c
  2776  004716  D7FC               	bra	u5917
  2777  004718  2E26               	decfsz	(??_fullSpeedBack+1)^0,f,c
  2778  00471A  D7FA               	bra	u5917
  2779  00471C  D000               	nop2	
  2780  00471E                     l4434:
  2781                           
  2782                           ;dc_motor.c: 151:     stop(mL,mR);
  2783  00471E  C020  F01A         	movff	fullSpeedBack@mL,stop@mL
  2784  004722  C021  F01B         	movff	fullSpeedBack@mL+1,stop@mL+1
  2785  004726  C022  F01C         	movff	fullSpeedBack@mR,stop@mR
  2786  00472A  C023  F01D         	movff	fullSpeedBack@mR+1,stop@mR+1
  2787  00472E  ECCF  F029         	call	_stop	;wreg free
  2788  004732  0012               	return		;funcret
  2789  004734                     __end_of_fullSpeedBack:
  2790                           	callstack 0
  2791                           
  2792 ;; *************** function _test_function *****************
  2793 ;; Defined at:
  2794 ;;		line 46 in file "test_and_calibration.c"
  2795 ;; Parameters:    Size  Location     Type
  2796 ;;  test_code       1    wreg     unsigned char 
  2797 ;;  m               2  128[BANK0 ] PTR struct color_rgb
  2798 ;;		 -> main@rgb(8), 
  2799 ;;  w               2  130[BANK0 ] PTR struct white_card
  2800 ;;		 -> main@white(28), 
  2801 ;;  mL              2  132[BANK0 ] PTR struct DC_motor
  2802 ;;		 -> main@motorL(9), 
  2803 ;;  mR              2  134[BANK0 ] PTR struct DC_motor
  2804 ;;		 -> main@motorR(9), 
  2805 ;; Auto vars:     Size  Location     Type
  2806 ;;  test_code       1  143[BANK0 ] unsigned char 
  2807 ;;  amb_light       2  138[BANK0 ] unsigned int 
  2808 ;;  stop_signal     1  142[BANK0 ] unsigned char 
  2809 ;;  color           1  141[BANK0 ] unsigned char 
  2810 ;;  complete        1  140[BANK0 ] unsigned char 
  2811 ;; Return value:  Size  Location     Type
  2812 ;;                  1    wreg      void 
  2813 ;; Registers used:
  2814 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2815 ;; Tracked objects:
  2816 ;;		On entry : 0/0
  2817 ;;		On exit  : 0/0
  2818 ;;		Unchanged: 0/0
  2819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2820 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2821 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2822 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2823 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2824 ;;Total ram usage:       16 bytes
  2825 ;; Hardware stack levels used: 1
  2826 ;; Hardware stack levels required when called: 11
  2827 ;; This function calls:
  2828 ;;		_LED_C
  2829 ;;		_amb_light_measure
  2830 ;;		_calibrate_white
  2831 ;;		_color_data_collection
  2832 ;;		_color_display
  2833 ;;		_color_predict
  2834 ;;		_detect_color
  2835 ;;		_detect_wall
  2836 ;;		_fullSpeedAhead
  2837 ;;		_read_color
  2838 ;;		_stop
  2839 ;;		_test_action
  2840 ;; This function is called by:
  2841 ;;		_main
  2842 ;; This function uses a non-reentrant model
  2843 ;;
  2844                           
  2845                           	psect	text5
  2846  003F94                     __ptext5:
  2847                           	callstack 0
  2848  003F94                     _test_function:
  2849                           	callstack 19
  2850                           
  2851                           ;incstack = 0
  2852                           ;test_function@test_code stored from wreg
  2853  003F94  0100               	movlb	0	; () banked
  2854  003F96  6FEF               	movwf	test_function@test_code& (0+255),b
  2855  003F98                     
  2856                           ;test_and_calibration.c: 46: void test_function(unsigned char test_code, struct color_rg
      +                          b *m, struct white_card *w, struct DC_motor *mL, struct DC_motor *mR);test_and_calibrati
      +                          on.c: 47: {;test_and_calibration.c: 48:     unsigned char complete = 0;
  2857  003F98  0E00               	movlw	0
  2858  003F9A  0100               	movlb	0	; () banked
  2859  003F9C  6FEC               	movwf	test_function@complete& (0+255),b
  2860                           
  2861                           ;test_and_calibration.c: 50:     unsigned char stop_signal = 0;
  2862  003F9E  0E00               	movlw	0
  2863  003FA0  6FEE               	movwf	test_function@stop_signal& (0+255),b
  2864                           
  2865                           ;test_and_calibration.c: 51:     unsigned int amb_light = 0;
  2866  003FA2  0E00               	movlw	0
  2867  003FA4  6FEB               	movwf	(test_function@amb_light+1)& (0+255),b
  2868  003FA6  0E00               	movlw	0
  2869  003FA8  6FEA               	movwf	test_function@amb_light& (0+255),b
  2870  003FAA                     
  2871                           ; BSR set to: 0
  2872                           ;test_and_calibration.c: 53:     if (test_code == 2){calibrate_white(w);}
  2873  003FAA  0E02               	movlw	2
  2874  003FAC  19EF               	xorwf	test_function@test_code& (0+255),w,b
  2875  003FAE  A4D8               	btfss	status,2,c
  2876  003FB0  EFDC  F01F         	goto	u5611
  2877  003FB4  EFDE  F01F         	goto	u5610
  2878  003FB8                     u5611:
  2879  003FB8  EFE4  F01F         	goto	l5134
  2880  003FBC                     u5610:
  2881  003FBC                     
  2882                           ; BSR set to: 0
  2883  003FBC  C0E2  F00C         	movff	test_function@w,calibrate_white@w
  2884  003FC0  C0E3  F00D         	movff	test_function@w+1,calibrate_white@w+1
  2885  003FC4  EC27  F01C         	call	_calibrate_white	;wreg free
  2886  003FC8                     l5134:
  2887                           
  2888                           ;test_and_calibration.c: 54:     if (test_code == 4){amb_light = amb_light_measure(m);}
  2889  003FC8  0E04               	movlw	4
  2890  003FCA  0100               	movlb	0	; () banked
  2891  003FCC  19EF               	xorwf	test_function@test_code& (0+255),w,b
  2892  003FCE  A4D8               	btfss	status,2,c
  2893  003FD0  EFEC  F01F         	goto	u5621
  2894  003FD4  EFEE  F01F         	goto	u5620
  2895  003FD8                     u5621:
  2896  003FD8  EFF8  F01F         	goto	l5138
  2897  003FDC                     u5620:
  2898  003FDC                     
  2899                           ; BSR set to: 0
  2900  003FDC  C0E0  F050         	movff	test_function@m,amb_light_measure@amb
  2901  003FE0  C0E1  F051         	movff	test_function@m+1,amb_light_measure@amb+1
  2902  003FE4  ECDB  F024         	call	_amb_light_measure	;wreg free
  2903  003FE8  C050  F0EA         	movff	?_amb_light_measure,test_function@amb_light
  2904  003FEC  C051  F0EB         	movff	?_amb_light_measure+1,test_function@amb_light+1
  2905  003FF0                     l5138:
  2906                           
  2907                           ;test_and_calibration.c: 58:         if (test_code == 1){
  2908  003FF0  0100               	movlb	0	; () banked
  2909  003FF2  05EF               	decf	test_function@test_code& (0+255),w,b
  2910  003FF4  A4D8               	btfss	status,2,c
  2911  003FF6  EFFF  F01F         	goto	u5631
  2912  003FFA  EF01  F020         	goto	u5630
  2913  003FFE                     u5631:
  2914  003FFE  EF0F  F020         	goto	l5146
  2915  004002                     u5630:
  2916  004002                     
  2917                           ; BSR set to: 0
  2918                           ;test_and_calibration.c: 59:             LED_C();
  2919  004002  EC05  F02E         	call	_LED_C	;wreg free
  2920  004006                     
  2921                           ;test_and_calibration.c: 60:             read_color(m);
  2922  004006  C0E0  F00C         	movff	test_function@m,read_color@m
  2923  00400A  C0E1  F00D         	movff	test_function@m+1,read_color@m+1
  2924  00400E  ECD5  F02A         	call	_read_color	;wreg free
  2925  004012                     
  2926                           ;test_and_calibration.c: 61:             color_display(m);
  2927  004012  C0E0  F058         	movff	test_function@m,color_display@m
  2928  004016  C0E1  F059         	movff	test_function@m+1,color_display@m+1
  2929  00401A  EC6C  F02A         	call	_color_display	;wreg free
  2930  00401E                     l5146:
  2931                           
  2932                           ;test_and_calibration.c: 64:         if (test_code == 2){
  2933  00401E  0E02               	movlw	2
  2934  004020  0100               	movlb	0	; () banked
  2935  004022  19EF               	xorwf	test_function@test_code& (0+255),w,b
  2936  004024  A4D8               	btfss	status,2,c
  2937  004026  EF17  F020         	goto	u5641
  2938  00402A  EF19  F020         	goto	u5640
  2939  00402E                     u5641:
  2940  00402E  EF28  F020         	goto	l5152
  2941  004032                     u5640:
  2942  004032                     
  2943                           ; BSR set to: 0
  2944                           ;test_and_calibration.c: 65:             color = detect_color(m,w);
  2945  004032  C0E0  F057         	movff	test_function@m,detect_color@m
  2946  004036  C0E1  F058         	movff	test_function@m+1,detect_color@m+1
  2947  00403A  C0E2  F059         	movff	test_function@w,detect_color@w
  2948  00403E  C0E3  F05A         	movff	test_function@w+1,detect_color@w+1
  2949  004042  EC0A  F007         	call	_detect_color	;wreg free
  2950  004046  0100               	movlb	0	; () banked
  2951  004048  6FED               	movwf	test_function@color& (0+255),b
  2952  00404A                     
  2953                           ; BSR set to: 0
  2954                           ;test_and_calibration.c: 67:             color_predict(color);
  2955  00404A  51ED               	movf	test_function@color& (0+255),w,b
  2956  00404C  EC72  F02D         	call	_color_predict
  2957  004050                     l5152:
  2958                           
  2959                           ;test_and_calibration.c: 70:         if (test_code == 3){
  2960  004050  0E03               	movlw	3
  2961  004052  0100               	movlb	0	; () banked
  2962  004054  19EF               	xorwf	test_function@test_code& (0+255),w,b
  2963  004056  A4D8               	btfss	status,2,c
  2964  004058  EF30  F020         	goto	u5651
  2965  00405C  EF32  F020         	goto	u5650
  2966  004060                     u5651:
  2967  004060  EF45  F020         	goto	l5162
  2968  004064                     u5650:
  2969  004064  EF3D  F020         	goto	l5160
  2970  004068                     l5156:
  2971                           
  2972                           ; BSR set to: 0
  2973                           ;test_and_calibration.c: 72:                 color_data_collection(m);
  2974  004068  C0E0  F05A         	movff	test_function@m,color_data_collection@m
  2975  00406C  C0E1  F05B         	movff	test_function@m+1,color_data_collection@m+1
  2976  004070  EC69  F025         	call	_color_data_collection	;wreg free
  2977  004074                     
  2978                           ;test_and_calibration.c: 73:                 complete = 1;
  2979  004074  0E01               	movlw	1
  2980  004076  0100               	movlb	0	; () banked
  2981  004078  6FEC               	movwf	test_function@complete& (0+255),b
  2982  00407A                     l5160:
  2983                           
  2984                           ; BSR set to: 0
  2985                           ;test_and_calibration.c: 71:             while (complete == 0){
  2986  00407A  51EC               	movf	test_function@complete& (0+255),w,b
  2987  00407C  B4D8               	btfsc	status,2,c
  2988  00407E  EF43  F020         	goto	u5661
  2989  004082  EF45  F020         	goto	u5660
  2990  004086                     u5661:
  2991  004086  EF34  F020         	goto	l5156
  2992  00408A                     u5660:
  2993  00408A                     l5162:
  2994                           
  2995                           ; BSR set to: 0
  2996                           ;test_and_calibration.c: 77:         if (test_code == 4){
  2997  00408A  0E04               	movlw	4
  2998  00408C  19EF               	xorwf	test_function@test_code& (0+255),w,b
  2999  00408E  A4D8               	btfss	status,2,c
  3000  004090  EF4C  F020         	goto	u5671
  3001  004094  EF4E  F020         	goto	u5670
  3002  004098                     u5671:
  3003  004098  EF8C  F020         	goto	l5178
  3004  00409C                     u5670:
  3005  00409C  EF6A  F020         	goto	l5170
  3006  0040A0                     l5166:
  3007                           
  3008                           ; BSR set to: 0
  3009                           ;test_and_calibration.c: 79:                 fullSpeedAhead(mL, mR);
  3010  0040A0  C0E4  F01A         	movff	test_function@mL,fullSpeedAhead@mL
  3011  0040A4  C0E5  F01B         	movff	test_function@mL+1,fullSpeedAhead@mL+1
  3012  0040A8  C0E6  F01C         	movff	test_function@mR,fullSpeedAhead@mR
  3013  0040AC  C0E7  F01D         	movff	test_function@mR+1,fullSpeedAhead@mR+1
  3014  0040B0  EC0B  F029         	call	_fullSpeedAhead	;wreg free
  3015  0040B4                     
  3016                           ;test_and_calibration.c: 80:                 stop_signal = detect_wall(mL, mR, amb_light
      +                          );
  3017  0040B4  C0E4  F050         	movff	test_function@mL,detect_wall@mL
  3018  0040B8  C0E5  F051         	movff	test_function@mL+1,detect_wall@mL+1
  3019  0040BC  C0E6  F052         	movff	test_function@mR,detect_wall@mR
  3020  0040C0  C0E7  F053         	movff	test_function@mR+1,detect_wall@mR+1
  3021  0040C4  C0EA  F054         	movff	test_function@amb_light,detect_wall@amb_light
  3022  0040C8  C0EB  F055         	movff	test_function@amb_light+1,detect_wall@amb_light+1
  3023  0040CC  EC6C  F027         	call	_detect_wall	;wreg free
  3024  0040D0  0100               	movlb	0	; () banked
  3025  0040D2  6FEE               	movwf	test_function@stop_signal& (0+255),b
  3026  0040D4                     l5170:
  3027                           
  3028                           ; BSR set to: 0
  3029                           ;test_and_calibration.c: 78:             while (stop_signal == 0){
  3030  0040D4  51EE               	movf	test_function@stop_signal& (0+255),w,b
  3031  0040D6  B4D8               	btfsc	status,2,c
  3032  0040D8  EF70  F020         	goto	u5681
  3033  0040DC  EF72  F020         	goto	u5680
  3034  0040E0                     u5681:
  3035  0040E0  EF50  F020         	goto	l5166
  3036  0040E4                     u5680:
  3037  0040E4                     
  3038                           ; BSR set to: 0
  3039                           ;test_and_calibration.c: 82:             stop(mL, mR);
  3040  0040E4  C0E4  F01A         	movff	test_function@mL,stop@mL
  3041  0040E8  C0E5  F01B         	movff	test_function@mL+1,stop@mL+1
  3042  0040EC  C0E6  F01C         	movff	test_function@mR,stop@mR
  3043  0040F0  C0E7  F01D         	movff	test_function@mR+1,stop@mR+1
  3044  0040F4  ECCF  F029         	call	_stop	;wreg free
  3045  0040F8                     
  3046                           ;test_and_calibration.c: 83:             _delay((unsigned long)((1000)*(64000000/4000.0)
      +                          ));
  3047  0040F8  0E52               	movlw	82
  3048  0040FA  0100               	movlb	0	; () banked
  3049  0040FC  6FE9               	movwf	(??_test_function+1)& (0+255),b
  3050  0040FE  0E2B               	movlw	43
  3051  004100  6FE8               	movwf	??_test_function& (0+255),b
  3052  004102  0E00               	movlw	0
  3053  004104                     u5927:
  3054  004104  2EE8               	decfsz	wreg,f,c
  3055  004106  D7FE               	bra	u5927
  3056  004108  2FE8               	decfsz	??_test_function& (0+255),f,b
  3057  00410A  D7FC               	bra	u5927
  3058  00410C  2FE9               	decfsz	(??_test_function+1)& (0+255),f,b
  3059  00410E  D7FA               	bra	u5927
  3060  004110  F000               	nop	
  3061  004112                     
  3062                           ;test_and_calibration.c: 84:             stop_signal = 0;
  3063  004112  0E00               	movlw	0
  3064  004114  0100               	movlb	0	; () banked
  3065  004116  6FEE               	movwf	test_function@stop_signal& (0+255),b
  3066  004118                     l5178:
  3067                           
  3068                           ; BSR set to: 0
  3069                           ;test_and_calibration.c: 87:         if (test_code == 5){
  3070  004118  0E05               	movlw	5
  3071  00411A  19EF               	xorwf	test_function@test_code& (0+255),w,b
  3072  00411C  A4D8               	btfss	status,2,c
  3073  00411E  EF93  F020         	goto	u5691
  3074  004122  EF95  F020         	goto	u5690
  3075  004126                     u5691:
  3076  004126  EFF8  F01F         	goto	l5138
  3077  00412A                     u5690:
  3078  00412A                     
  3079                           ; BSR set to: 0
  3080                           ;test_and_calibration.c: 88:             test_action(mL,mR);
  3081  00412A  C0E4  F02D         	movff	test_function@mL,test_action@mL
  3082  00412E  C0E5  F02E         	movff	test_function@mL+1,test_action@mL+1
  3083  004132  C0E6  F02F         	movff	test_function@mR,test_action@mR
  3084  004136  C0E7  F030         	movff	test_function@mR+1,test_action@mR+1
  3085  00413A  EC44  F024         	call	_test_action	;wreg free
  3086  00413E  EFF8  F01F         	goto	l5138
  3087  004142  0012               	return		;funcret
  3088  004144                     __end_of_test_function:
  3089                           	callstack 0
  3090                           
  3091 ;; *************** function _detect_wall *****************
  3092 ;; Defined at:
  3093 ;;		line 403 in file "color.c"
  3094 ;; Parameters:    Size  Location     Type
  3095 ;;  mL              2   79[COMRAM] PTR struct DC_motor
  3096 ;;		 -> main@motorL(9), 
  3097 ;;  mR              2   81[COMRAM] PTR struct DC_motor
  3098 ;;		 -> main@motorR(9), 
  3099 ;;  amb_light       2   83[COMRAM] unsigned int 
  3100 ;; Auto vars:     Size  Location     Type
  3101 ;;  threshold       2    6[BANK0 ] unsigned int 
  3102 ;;  CC_amb          2    4[BANK0 ] unsigned int 
  3103 ;;  stop            1    8[BANK0 ] unsigned char 
  3104 ;; Return value:  Size  Location     Type
  3105 ;;                  1    wreg      unsigned char 
  3106 ;; Registers used:
  3107 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  3108 ;; Tracked objects:
  3109 ;;		On entry : 0/0
  3110 ;;		On exit  : 0/0
  3111 ;;		Unchanged: 0/0
  3112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3113 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3114 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3115 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3116 ;;      Totals:         8       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3117 ;;Total ram usage:       17 bytes
  3118 ;; Hardware stack levels used: 1
  3119 ;; Hardware stack levels required when called: 5
  3120 ;; This function calls:
  3121 ;;		_LED_C
  3122 ;;		___fldiv
  3123 ;;		___flmul
  3124 ;;		___xxtofl
  3125 ;;		_color_read_Clear
  3126 ;;		_lroundf
  3127 ;; This function is called by:
  3128 ;;		_main
  3129 ;;		_test_function
  3130 ;; This function uses a non-reentrant model
  3131 ;;
  3132                           
  3133                           	psect	text6
  3134  004ED8                     __ptext6:
  3135                           	callstack 0
  3136  004ED8                     _detect_wall:
  3137                           	callstack 24
  3138  004ED8                     
  3139                           ;color.c: 406:     unsigned char stop = 0;
  3140  004ED8  0E00               	movlw	0
  3141  004EDA  0100               	movlb	0	; () banked
  3142  004EDC  6F68               	movwf	detect_wall@stop& (0+255),b
  3143                           
  3144                           ;color.c: 407:     unsigned int threshold = 0;
  3145  004EDE  0E00               	movlw	0
  3146  004EE0  6F67               	movwf	(detect_wall@threshold+1)& (0+255),b
  3147  004EE2  0E00               	movlw	0
  3148  004EE4  6F66               	movwf	detect_wall@threshold& (0+255),b
  3149  004EE6                     
  3150                           ; BSR set to: 0
  3151                           ;color.c: 408:     LED_C();
  3152  004EE6  EC05  F02E         	call	_LED_C	;wreg free
  3153  004EEA                     
  3154                           ;color.c: 409:     _delay((unsigned long)((100)*(64000000/4000.0)));
  3155  004EEA  0E09               	movlw	9
  3156  004EEC  6E57               	movwf	(??_detect_wall+1)^0,c
  3157  004EEE  0E1E               	movlw	30
  3158  004EF0  6E56               	movwf	??_detect_wall^0,c
  3159  004EF2  0EE4               	movlw	228
  3160  004EF4                     u5937:
  3161  004EF4  2EE8               	decfsz	wreg,f,c
  3162  004EF6  D7FE               	bra	u5937
  3163  004EF8  2E56               	decfsz	??_detect_wall^0,f,c
  3164  004EFA  D7FC               	bra	u5937
  3165  004EFC  2E57               	decfsz	(??_detect_wall+1)^0,f,c
  3166  004EFE  D7FA               	bra	u5937
  3167  004F00  D000               	nop2	
  3168  004F02                     
  3169                           ;color.c: 410:     CC_amb = color_read_Clear();
  3170  004F02  ECA5  F02B         	call	_color_read_Clear	;wreg free
  3171  004F06  C005  F064         	movff	?_color_read_Clear,detect_wall@CC_amb
  3172  004F0A  C006  F065         	movff	?_color_read_Clear+1,detect_wall@CC_amb+1
  3173  004F0E                     
  3174                           ;color.c: 411:     threshold = lroundf((float)amb_light * 110 / 100);
  3175  004F0E  0E00               	movlw	0
  3176  004F10  6E13               	movwf	___flmul@a^0,c
  3177  004F12  0E00               	movlw	0
  3178  004F14  6E14               	movwf	(___flmul@a+1)^0,c
  3179  004F16  0EDC               	movlw	220
  3180  004F18  6E15               	movwf	(___flmul@a+2)^0,c
  3181  004F1A  0E42               	movlw	66
  3182  004F1C  6E16               	movwf	(___flmul@a+3)^0,c
  3183  004F1E  C054  F001         	movff	detect_wall@amb_light,___xxtofl@val
  3184  004F22  C055  F002         	movff	detect_wall@amb_light+1,___xxtofl@val+1
  3185  004F26  6A03               	clrf	(___xxtofl@val+2)^0,c
  3186  004F28  6A04               	clrf	(___xxtofl@val+3)^0,c
  3187  004F2A  0E00               	movlw	0
  3188  004F2C  ECF0  F01E         	call	___xxtofl
  3189  004F30  C001  F00F         	movff	?___xxtofl,___flmul@b
  3190  004F34  C002  F010         	movff	?___xxtofl+1,___flmul@b+1
  3191  004F38  C003  F011         	movff	?___xxtofl+2,___flmul@b+2
  3192  004F3C  C004  F012         	movff	?___xxtofl+3,___flmul@b+3
  3193  004F40  EC52  F00F         	call	___flmul	;wreg free
  3194  004F44  C00F  F028         	movff	?___flmul,___fldiv@b
  3195  004F48  C010  F029         	movff	?___flmul+1,___fldiv@b+1
  3196  004F4C  C011  F02A         	movff	?___flmul+2,___fldiv@b+2
  3197  004F50  C012  F02B         	movff	?___flmul+3,___fldiv@b+3
  3198  004F54  0E00               	movlw	0
  3199  004F56  6E2C               	movwf	___fldiv@a^0,c
  3200  004F58  0E00               	movlw	0
  3201  004F5A  6E2D               	movwf	(___fldiv@a+1)^0,c
  3202  004F5C  0EC8               	movlw	200
  3203  004F5E  6E2E               	movwf	(___fldiv@a+2)^0,c
  3204  004F60  0E42               	movlw	66
  3205  004F62  6E2F               	movwf	(___fldiv@a+3)^0,c
  3206  004F64  EC10  F015         	call	___fldiv	;wreg free
  3207  004F68  C028  F060         	movff	?___fldiv,_detect_wall$2932
  3208  004F6C  C029  F061         	movff	?___fldiv+1,_detect_wall$2932+1
  3209  004F70  C02A  F062         	movff	?___fldiv+2,_detect_wall$2932+2
  3210  004F74  C02B  F063         	movff	?___fldiv+3,_detect_wall$2932+3
  3211  004F78                     
  3212                           ;color.c: 411:     threshold = lroundf((float)amb_light * 110 / 100);
  3213  004F78  C060  F04C         	movff	_detect_wall$2932,lroundf@x
  3214  004F7C  C061  F04D         	movff	_detect_wall$2932+1,lroundf@x+1
  3215  004F80  C062  F04E         	movff	_detect_wall$2932+2,lroundf@x+2
  3216  004F84  C063  F04F         	movff	_detect_wall$2932+3,lroundf@x+3
  3217  004F88  ECB6  F02C         	call	_lroundf	;wreg free
  3218  004F8C  C04C  F066         	movff	?_lroundf,detect_wall@threshold
  3219  004F90  C04D  F067         	movff	?_lroundf+1,detect_wall@threshold+1
  3220  004F94                     
  3221                           ;color.c: 413:     if (CC_amb >= threshold){stop = 1;}
  3222  004F94  0100               	movlb	0	; () banked
  3223  004F96  5166               	movf	detect_wall@threshold& (0+255),w,b
  3224  004F98  5D64               	subwf	detect_wall@CC_amb& (0+255),w,b
  3225  004F9A  5167               	movf	(detect_wall@threshold+1)& (0+255),w,b
  3226  004F9C  5965               	subwfb	(detect_wall@CC_amb+1)& (0+255),w,b
  3227  004F9E  A0D8               	btfss	status,0,c
  3228  004FA0  EFD4  F027         	goto	u5321
  3229  004FA4  EFD6  F027         	goto	u5320
  3230  004FA8                     u5321:
  3231  004FA8  EFD8  F027         	goto	l151
  3232  004FAC                     u5320:
  3233  004FAC                     
  3234                           ; BSR set to: 0
  3235  004FAC  0E01               	movlw	1
  3236  004FAE  6F68               	movwf	detect_wall@stop& (0+255),b
  3237  004FB0                     l151:
  3238                           
  3239                           ; BSR set to: 0
  3240                           ;color.c: 414:     return stop;
  3241  004FB0  5168               	movf	detect_wall@stop& (0+255),w,b
  3242  004FB2                     
  3243                           ; BSR set to: 0
  3244  004FB2  0012               	return		;funcret
  3245  004FB4                     __end_of_detect_wall:
  3246                           	callstack 0
  3247                           
  3248 ;; *************** function _detect_color *****************
  3249 ;; Defined at:
  3250 ;;		line 229 in file "color.c"
  3251 ;; Parameters:    Size  Location     Type
  3252 ;;  m               2   86[COMRAM] PTR struct color_rgb
  3253 ;;		 -> main@rgb(8), 
  3254 ;;  w               2   88[COMRAM] PTR struct white_card
  3255 ;;		 -> main@white(28), 
  3256 ;; Auto vars:     Size  Location     Type
  3257 ;;  BG              2   19[BANK0 ] unsigned int 
  3258 ;;  RR              2   16[BANK0 ] unsigned int 
  3259 ;;  GG              2   14[BANK0 ] unsigned int 
  3260 ;;  BB              2   12[BANK0 ] unsigned int 
  3261 ;;  GB              2   10[BANK0 ] unsigned int 
  3262 ;;  RB              2    8[BANK0 ] unsigned int 
  3263 ;;  BR              2    6[BANK0 ] unsigned int 
  3264 ;;  GR              2    4[BANK0 ] unsigned int 
  3265 ;;  BC              2    2[BANK0 ] unsigned int 
  3266 ;;  RG              2    0[BANK0 ] unsigned int 
  3267 ;;  color           1   18[BANK0 ] unsigned char 
  3268 ;; Return value:  Size  Location     Type
  3269 ;;                  1    wreg      unsigned char 
  3270 ;; Registers used:
  3271 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3272 ;; Tracked objects:
  3273 ;;		On entry : 0/0
  3274 ;;		On exit  : 0/0
  3275 ;;		Unchanged: 0/0
  3276 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3277 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3278 ;;      Locals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3279 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3280 ;;      Totals:         8      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3281 ;;Total ram usage:       33 bytes
  3282 ;; Hardware stack levels used: 1
  3283 ;; Hardware stack levels required when called: 5
  3284 ;; This function calls:
  3285 ;;		_LED_B
  3286 ;;		_LED_G
  3287 ;;		_LED_R
  3288 ;;		___fldiv
  3289 ;;		___flmul
  3290 ;;		___xxtofl
  3291 ;;		_compare
  3292 ;;		_lroundf
  3293 ;;		_read_color
  3294 ;;		_toggle_light
  3295 ;; This function is called by:
  3296 ;;		_verify_color
  3297 ;;		_main
  3298 ;;		_test_function
  3299 ;; This function uses a non-reentrant model
  3300 ;;
  3301                           
  3302                           	psect	text7
  3303  000E14                     __ptext7:
  3304                           	callstack 0
  3305  000E14                     _detect_color:
  3306                           	callstack 24
  3307  000E14  0E00               	movlw	0
  3308  000E16  0100               	movlb	0	; () banked
  3309  000E18  6F61               	movwf	(detect_color@RG+1)& (0+255),b
  3310  000E1A  0E00               	movlw	0
  3311  000E1C  6F60               	movwf	detect_color@RG& (0+255),b
  3312  000E1E  0E00               	movlw	0
  3313  000E20  6F69               	movwf	(detect_color@RB+1)& (0+255),b
  3314  000E22  0E00               	movlw	0
  3315  000E24  6F68               	movwf	detect_color@RB& (0+255),b
  3316  000E26  0E00               	movlw	0
  3317  000E28  6F65               	movwf	(detect_color@GR+1)& (0+255),b
  3318  000E2A  0E00               	movlw	0
  3319  000E2C  6F64               	movwf	detect_color@GR& (0+255),b
  3320  000E2E  0E00               	movlw	0
  3321  000E30  6F6F               	movwf	(detect_color@GG+1)& (0+255),b
  3322  000E32  0E00               	movlw	0
  3323  000E34  6F6E               	movwf	detect_color@GG& (0+255),b
  3324  000E36  0E00               	movlw	0
  3325  000E38  6F6B               	movwf	(detect_color@GB+1)& (0+255),b
  3326  000E3A  0E00               	movlw	0
  3327  000E3C  6F6A               	movwf	detect_color@GB& (0+255),b
  3328  000E3E  0E00               	movlw	0
  3329  000E40  6F67               	movwf	(detect_color@BR+1)& (0+255),b
  3330  000E42  0E00               	movlw	0
  3331  000E44  6F66               	movwf	detect_color@BR& (0+255),b
  3332  000E46  0E00               	movlw	0
  3333  000E48  6F74               	movwf	(detect_color@BG+1)& (0+255),b
  3334  000E4A  0E00               	movlw	0
  3335  000E4C  6F73               	movwf	detect_color@BG& (0+255),b
  3336  000E4E  0E00               	movlw	0
  3337  000E50  6F6D               	movwf	(detect_color@BB+1)& (0+255),b
  3338  000E52  0E00               	movlw	0
  3339  000E54  6F6C               	movwf	detect_color@BB& (0+255),b
  3340  000E56  0E00               	movlw	0
  3341  000E58  6F63               	movwf	(detect_color@BC+1)& (0+255),b
  3342  000E5A  0E00               	movlw	0
  3343  000E5C  6F62               	movwf	detect_color@BC& (0+255),b
  3344                           
  3345                           ;color.c: 234:     unsigned char color = 0;
  3346  000E5E  0E00               	movlw	0
  3347  000E60  6F72               	movwf	detect_color@color& (0+255),b
  3348  000E62                     
  3349                           ; BSR set to: 0
  3350                           ;color.c: 236:     LED_R();
  3351  000E62  ECC5  F02D         	call	_LED_R	;wreg free
  3352  000E66                     
  3353                           ;color.c: 237:     _delay((unsigned long)((100)*(64000000/4000.0)));
  3354  000E66  0E09               	movlw	9
  3355  000E68  6E5C               	movwf	(??_detect_color+1)^0,c
  3356  000E6A  0E1E               	movlw	30
  3357  000E6C  6E5B               	movwf	??_detect_color^0,c
  3358  000E6E  0EE4               	movlw	228
  3359  000E70                     u5947:
  3360  000E70  2EE8               	decfsz	wreg,f,c
  3361  000E72  D7FE               	bra	u5947
  3362  000E74  2E5B               	decfsz	??_detect_color^0,f,c
  3363  000E76  D7FC               	bra	u5947
  3364  000E78  2E5C               	decfsz	(??_detect_color+1)^0,f,c
  3365  000E7A  D7FA               	bra	u5947
  3366  000E7C  D000               	nop2	
  3367  000E7E                     
  3368                           ;color.c: 238:     read_color(m);
  3369  000E7E  C057  F00C         	movff	detect_color@m,read_color@m
  3370  000E82  C058  F00D         	movff	detect_color@m+1,read_color@m+1
  3371  000E86  ECD5  F02A         	call	_read_color	;wreg free
  3372  000E8A                     
  3373                           ;color.c: 240:     RR = lroundf((float)(m->R)/(w->RR)*100); RG = lroundf((float)(m->G)/(
      +                          w->RG)*100); RB = lroundf((float)(m->B)/(w->RB)*100);
  3374  000E8A  C059  FFD9         	movff	detect_color@w,fsr2l
  3375  000E8E  C05A  FFDA         	movff	detect_color@w+1,fsr2h
  3376  000E92  CFDE F05B          	movff	postinc2,??_detect_color
  3377  000E96  CFDD F05C          	movff	postdec2,??_detect_color+1
  3378  000E9A  C05B  F001         	movff	??_detect_color,___xxtofl@val
  3379  000E9E  C05C  F002         	movff	??_detect_color+1,___xxtofl@val+1
  3380  000EA2  6A03               	clrf	(___xxtofl@val+2)^0,c
  3381  000EA4  6A04               	clrf	(___xxtofl@val+3)^0,c
  3382  000EA6  0E00               	movlw	0
  3383  000EA8  ECF0  F01E         	call	___xxtofl
  3384  000EAC  C001  F02C         	movff	?___xxtofl,___fldiv@a
  3385  000EB0  C002  F02D         	movff	?___xxtofl+1,___fldiv@a+1
  3386  000EB4  C003  F02E         	movff	?___xxtofl+2,___fldiv@a+2
  3387  000EB8  C004  F02F         	movff	?___xxtofl+3,___fldiv@a+3
  3388  000EBC  C057  FFD9         	movff	detect_color@m,fsr2l
  3389  000EC0  C058  FFDA         	movff	detect_color@m+1,fsr2h
  3390  000EC4  CFDE F05D          	movff	postinc2,??_detect_color+2
  3391  000EC8  CFDD F05E          	movff	postdec2,??_detect_color+3
  3392  000ECC  C05D  F001         	movff	??_detect_color+2,___xxtofl@val
  3393  000ED0  C05E  F002         	movff	??_detect_color+3,___xxtofl@val+1
  3394  000ED4  6A03               	clrf	(___xxtofl@val+2)^0,c
  3395  000ED6  6A04               	clrf	(___xxtofl@val+3)^0,c
  3396  000ED8  0E00               	movlw	0
  3397  000EDA  ECF0  F01E         	call	___xxtofl
  3398  000EDE  C001  F028         	movff	?___xxtofl,___fldiv@b
  3399  000EE2  C002  F029         	movff	?___xxtofl+1,___fldiv@b+1
  3400  000EE6  C003  F02A         	movff	?___xxtofl+2,___fldiv@b+2
  3401  000EEA  C004  F02B         	movff	?___xxtofl+3,___fldiv@b+3
  3402  000EEE  EC10  F015         	call	___fldiv	;wreg free
  3403  000EF2  C028  F00F         	movff	?___fldiv,___flmul@b
  3404  000EF6  C029  F010         	movff	?___fldiv+1,___flmul@b+1
  3405  000EFA  C02A  F011         	movff	?___fldiv+2,___flmul@b+2
  3406  000EFE  C02B  F012         	movff	?___fldiv+3,___flmul@b+3
  3407  000F02  0E00               	movlw	0
  3408  000F04  6E13               	movwf	___flmul@a^0,c
  3409  000F06  0E00               	movlw	0
  3410  000F08  6E14               	movwf	(___flmul@a+1)^0,c
  3411  000F0A  0EC8               	movlw	200
  3412  000F0C  6E15               	movwf	(___flmul@a+2)^0,c
  3413  000F0E  0E42               	movlw	66
  3414  000F10  6E16               	movwf	(___flmul@a+3)^0,c
  3415  000F12  EC52  F00F         	call	___flmul	;wreg free
  3416  000F16  C00F  F075         	movff	?___flmul,_detect_color$2931
  3417  000F1A  C010  F076         	movff	?___flmul+1,_detect_color$2931+1
  3418  000F1E  C011  F077         	movff	?___flmul+2,_detect_color$2931+2
  3419  000F22  C012  F078         	movff	?___flmul+3,_detect_color$2931+3
  3420  000F26                     
  3421                           ;color.c: 240:     RR = lroundf((float)(m->R)/(w->RR)*100); RG = lroundf((float)(m->G)/(
      +                          w->RG)*100); RB = lroundf((float)(m->B)/(w->RB)*100);
  3422  000F26  C075  F04C         	movff	_detect_color$2931,lroundf@x
  3423  000F2A  C076  F04D         	movff	_detect_color$2931+1,lroundf@x+1
  3424  000F2E  C077  F04E         	movff	_detect_color$2931+2,lroundf@x+2
  3425  000F32  C078  F04F         	movff	_detect_color$2931+3,lroundf@x+3
  3426  000F36  ECB6  F02C         	call	_lroundf	;wreg free
  3427  000F3A  C04C  F070         	movff	?_lroundf,detect_color@RR
  3428  000F3E  C04D  F071         	movff	?_lroundf+1,detect_color@RR+1
  3429  000F42  EE20 F002          	lfsr	2,2
  3430  000F46  5059               	movf	detect_color@w^0,w,c
  3431  000F48  26D9               	addwf	fsr2l,f,c
  3432  000F4A  505A               	movf	(detect_color@w+1)^0,w,c
  3433  000F4C  22DA               	addwfc	fsr2h,f,c
  3434  000F4E  CFDE F05B          	movff	postinc2,??_detect_color
  3435  000F52  CFDD F05C          	movff	postdec2,??_detect_color+1
  3436  000F56  C05B  F001         	movff	??_detect_color,___xxtofl@val
  3437  000F5A  C05C  F002         	movff	??_detect_color+1,___xxtofl@val+1
  3438  000F5E  6A03               	clrf	(___xxtofl@val+2)^0,c
  3439  000F60  6A04               	clrf	(___xxtofl@val+3)^0,c
  3440  000F62  0E00               	movlw	0
  3441  000F64  ECF0  F01E         	call	___xxtofl
  3442  000F68  C001  F02C         	movff	?___xxtofl,___fldiv@a
  3443  000F6C  C002  F02D         	movff	?___xxtofl+1,___fldiv@a+1
  3444  000F70  C003  F02E         	movff	?___xxtofl+2,___fldiv@a+2
  3445  000F74  C004  F02F         	movff	?___xxtofl+3,___fldiv@a+3
  3446  000F78  EE20 F002          	lfsr	2,2
  3447  000F7C  5057               	movf	detect_color@m^0,w,c
  3448  000F7E  26D9               	addwf	fsr2l,f,c
  3449  000F80  5058               	movf	(detect_color@m+1)^0,w,c
  3450  000F82  22DA               	addwfc	fsr2h,f,c
  3451  000F84  CFDE F05D          	movff	postinc2,??_detect_color+2
  3452  000F88  CFDD F05E          	movff	postdec2,??_detect_color+3
  3453  000F8C  C05D  F001         	movff	??_detect_color+2,___xxtofl@val
  3454  000F90  C05E  F002         	movff	??_detect_color+3,___xxtofl@val+1
  3455  000F94  6A03               	clrf	(___xxtofl@val+2)^0,c
  3456  000F96  6A04               	clrf	(___xxtofl@val+3)^0,c
  3457  000F98  0E00               	movlw	0
  3458  000F9A  ECF0  F01E         	call	___xxtofl
  3459  000F9E  C001  F028         	movff	?___xxtofl,___fldiv@b
  3460  000FA2  C002  F029         	movff	?___xxtofl+1,___fldiv@b+1
  3461  000FA6  C003  F02A         	movff	?___xxtofl+2,___fldiv@b+2
  3462  000FAA  C004  F02B         	movff	?___xxtofl+3,___fldiv@b+3
  3463  000FAE  EC10  F015         	call	___fldiv	;wreg free
  3464  000FB2  C028  F00F         	movff	?___fldiv,___flmul@b
  3465  000FB6  C029  F010         	movff	?___fldiv+1,___flmul@b+1
  3466  000FBA  C02A  F011         	movff	?___fldiv+2,___flmul@b+2
  3467  000FBE  C02B  F012         	movff	?___fldiv+3,___flmul@b+3
  3468  000FC2  0E00               	movlw	0
  3469  000FC4  6E13               	movwf	___flmul@a^0,c
  3470  000FC6  0E00               	movlw	0
  3471  000FC8  6E14               	movwf	(___flmul@a+1)^0,c
  3472  000FCA  0EC8               	movlw	200
  3473  000FCC  6E15               	movwf	(___flmul@a+2)^0,c
  3474  000FCE  0E42               	movlw	66
  3475  000FD0  6E16               	movwf	(___flmul@a+3)^0,c
  3476  000FD2  EC52  F00F         	call	___flmul	;wreg free
  3477  000FD6  C00F  F075         	movff	?___flmul,_detect_color$2931
  3478  000FDA  C010  F076         	movff	?___flmul+1,_detect_color$2931+1
  3479  000FDE  C011  F077         	movff	?___flmul+2,_detect_color$2931+2
  3480  000FE2  C012  F078         	movff	?___flmul+3,_detect_color$2931+3
  3481  000FE6  C075  F04C         	movff	_detect_color$2931,lroundf@x
  3482  000FEA  C076  F04D         	movff	_detect_color$2931+1,lroundf@x+1
  3483  000FEE  C077  F04E         	movff	_detect_color$2931+2,lroundf@x+2
  3484  000FF2  C078  F04F         	movff	_detect_color$2931+3,lroundf@x+3
  3485  000FF6  ECB6  F02C         	call	_lroundf	;wreg free
  3486  000FFA  EE20 F004          	lfsr	2,4
  3487  000FFE  5059               	movf	detect_color@w^0,w,c
  3488  001000  26D9               	addwf	fsr2l,f,c
  3489  001002  505A               	movf	(detect_color@w+1)^0,w,c
  3490  001004  22DA               	addwfc	fsr2h,f,c
  3491  001006  CFDE F05B          	movff	postinc2,??_detect_color
  3492  00100A  CFDD F05C          	movff	postdec2,??_detect_color+1
  3493  00100E  C05B  F001         	movff	??_detect_color,___xxtofl@val
  3494  001012  C05C  F002         	movff	??_detect_color+1,___xxtofl@val+1
  3495  001016  6A03               	clrf	(___xxtofl@val+2)^0,c
  3496  001018  6A04               	clrf	(___xxtofl@val+3)^0,c
  3497  00101A  0E00               	movlw	0
  3498  00101C  ECF0  F01E         	call	___xxtofl
  3499  001020  C001  F02C         	movff	?___xxtofl,___fldiv@a
  3500  001024  C002  F02D         	movff	?___xxtofl+1,___fldiv@a+1
  3501  001028  C003  F02E         	movff	?___xxtofl+2,___fldiv@a+2
  3502  00102C  C004  F02F         	movff	?___xxtofl+3,___fldiv@a+3
  3503  001030  EE20 F004          	lfsr	2,4
  3504  001034  5057               	movf	detect_color@m^0,w,c
  3505  001036  26D9               	addwf	fsr2l,f,c
  3506  001038  5058               	movf	(detect_color@m+1)^0,w,c
  3507  00103A  22DA               	addwfc	fsr2h,f,c
  3508  00103C  CFDE F05D          	movff	postinc2,??_detect_color+2
  3509  001040  CFDD F05E          	movff	postdec2,??_detect_color+3
  3510  001044  C05D  F001         	movff	??_detect_color+2,___xxtofl@val
  3511  001048  C05E  F002         	movff	??_detect_color+3,___xxtofl@val+1
  3512  00104C  6A03               	clrf	(___xxtofl@val+2)^0,c
  3513  00104E  6A04               	clrf	(___xxtofl@val+3)^0,c
  3514  001050  0E00               	movlw	0
  3515  001052  ECF0  F01E         	call	___xxtofl
  3516  001056  C001  F028         	movff	?___xxtofl,___fldiv@b
  3517  00105A  C002  F029         	movff	?___xxtofl+1,___fldiv@b+1
  3518  00105E  C003  F02A         	movff	?___xxtofl+2,___fldiv@b+2
  3519  001062  C004  F02B         	movff	?___xxtofl+3,___fldiv@b+3
  3520  001066  EC10  F015         	call	___fldiv	;wreg free
  3521  00106A  C028  F00F         	movff	?___fldiv,___flmul@b
  3522  00106E  C029  F010         	movff	?___fldiv+1,___flmul@b+1
  3523  001072  C02A  F011         	movff	?___fldiv+2,___flmul@b+2
  3524  001076  C02B  F012         	movff	?___fldiv+3,___flmul@b+3
  3525  00107A  0E00               	movlw	0
  3526  00107C  6E13               	movwf	___flmul@a^0,c
  3527  00107E  0E00               	movlw	0
  3528  001080  6E14               	movwf	(___flmul@a+1)^0,c
  3529  001082  0EC8               	movlw	200
  3530  001084  6E15               	movwf	(___flmul@a+2)^0,c
  3531  001086  0E42               	movlw	66
  3532  001088  6E16               	movwf	(___flmul@a+3)^0,c
  3533  00108A  EC52  F00F         	call	___flmul	;wreg free
  3534  00108E  C00F  F075         	movff	?___flmul,_detect_color$2931
  3535  001092  C010  F076         	movff	?___flmul+1,_detect_color$2931+1
  3536  001096  C011  F077         	movff	?___flmul+2,_detect_color$2931+2
  3537  00109A  C012  F078         	movff	?___flmul+3,_detect_color$2931+3
  3538  00109E  C075  F04C         	movff	_detect_color$2931,lroundf@x
  3539  0010A2  C076  F04D         	movff	_detect_color$2931+1,lroundf@x+1
  3540  0010A6  C077  F04E         	movff	_detect_color$2931+2,lroundf@x+2
  3541  0010AA  C078  F04F         	movff	_detect_color$2931+3,lroundf@x+3
  3542  0010AE  ECB6  F02C         	call	_lroundf	;wreg free
  3543  0010B2  C04C  F068         	movff	?_lroundf,detect_color@RB
  3544  0010B6  C04D  F069         	movff	?_lroundf+1,detect_color@RB+1
  3545  0010BA                     
  3546                           ;color.c: 241:     _delay((unsigned long)((50)*(64000000/4000.0)));
  3547  0010BA  0E05               	movlw	5
  3548  0010BC  6E5C               	movwf	(??_detect_color+1)^0,c
  3549  0010BE  0E0F               	movlw	15
  3550  0010C0  6E5B               	movwf	??_detect_color^0,c
  3551  0010C2  0EF1               	movlw	241
  3552  0010C4                     u5957:
  3553  0010C4  2EE8               	decfsz	wreg,f,c
  3554  0010C6  D7FE               	bra	u5957
  3555  0010C8  2E5B               	decfsz	??_detect_color^0,f,c
  3556  0010CA  D7FC               	bra	u5957
  3557  0010CC  2E5C               	decfsz	(??_detect_color+1)^0,f,c
  3558  0010CE  D7FA               	bra	u5957
  3559  0010D0  F000               	nop	
  3560  0010D2                     
  3561                           ;color.c: 243:     LED_G();
  3562  0010D2  ECE5  F02D         	call	_LED_G	;wreg free
  3563  0010D6                     
  3564                           ;color.c: 244:     _delay((unsigned long)((100)*(64000000/4000.0)));
  3565  0010D6  0E09               	movlw	9
  3566  0010D8  6E5C               	movwf	(??_detect_color+1)^0,c
  3567  0010DA  0E1E               	movlw	30
  3568  0010DC  6E5B               	movwf	??_detect_color^0,c
  3569  0010DE  0EE4               	movlw	228
  3570  0010E0                     u5967:
  3571  0010E0  2EE8               	decfsz	wreg,f,c
  3572  0010E2  D7FE               	bra	u5967
  3573  0010E4  2E5B               	decfsz	??_detect_color^0,f,c
  3574  0010E6  D7FC               	bra	u5967
  3575  0010E8  2E5C               	decfsz	(??_detect_color+1)^0,f,c
  3576  0010EA  D7FA               	bra	u5967
  3577  0010EC  D000               	nop2	
  3578  0010EE                     
  3579                           ;color.c: 245:     read_color(m);
  3580  0010EE  C057  F00C         	movff	detect_color@m,read_color@m
  3581  0010F2  C058  F00D         	movff	detect_color@m+1,read_color@m+1
  3582  0010F6  ECD5  F02A         	call	_read_color	;wreg free
  3583  0010FA                     
  3584                           ;color.c: 247:     GR = lroundf((float)(m->R)/(w->GR)*100); GG = lroundf((float)(m->G)/(
      +                          w->GG)*100); GB = lroundf((float)(m->B)/(w->GB)*100);
  3585  0010FA  EE20 F006          	lfsr	2,6
  3586  0010FE  5059               	movf	detect_color@w^0,w,c
  3587  001100  26D9               	addwf	fsr2l,f,c
  3588  001102  505A               	movf	(detect_color@w+1)^0,w,c
  3589  001104  22DA               	addwfc	fsr2h,f,c
  3590  001106  CFDE F05B          	movff	postinc2,??_detect_color
  3591  00110A  CFDD F05C          	movff	postdec2,??_detect_color+1
  3592  00110E  C05B  F001         	movff	??_detect_color,___xxtofl@val
  3593  001112  C05C  F002         	movff	??_detect_color+1,___xxtofl@val+1
  3594  001116  6A03               	clrf	(___xxtofl@val+2)^0,c
  3595  001118  6A04               	clrf	(___xxtofl@val+3)^0,c
  3596  00111A  0E00               	movlw	0
  3597  00111C  ECF0  F01E         	call	___xxtofl
  3598  001120  C001  F02C         	movff	?___xxtofl,___fldiv@a
  3599  001124  C002  F02D         	movff	?___xxtofl+1,___fldiv@a+1
  3600  001128  C003  F02E         	movff	?___xxtofl+2,___fldiv@a+2
  3601  00112C  C004  F02F         	movff	?___xxtofl+3,___fldiv@a+3
  3602  001130  C057  FFD9         	movff	detect_color@m,fsr2l
  3603  001134  C058  FFDA         	movff	detect_color@m+1,fsr2h
  3604  001138  CFDE F05D          	movff	postinc2,??_detect_color+2
  3605  00113C  CFDD F05E          	movff	postdec2,??_detect_color+3
  3606  001140  C05D  F001         	movff	??_detect_color+2,___xxtofl@val
  3607  001144  C05E  F002         	movff	??_detect_color+3,___xxtofl@val+1
  3608  001148  6A03               	clrf	(___xxtofl@val+2)^0,c
  3609  00114A  6A04               	clrf	(___xxtofl@val+3)^0,c
  3610  00114C  0E00               	movlw	0
  3611  00114E  ECF0  F01E         	call	___xxtofl
  3612  001152  C001  F028         	movff	?___xxtofl,___fldiv@b
  3613  001156  C002  F029         	movff	?___xxtofl+1,___fldiv@b+1
  3614  00115A  C003  F02A         	movff	?___xxtofl+2,___fldiv@b+2
  3615  00115E  C004  F02B         	movff	?___xxtofl+3,___fldiv@b+3
  3616  001162  EC10  F015         	call	___fldiv	;wreg free
  3617  001166  C028  F00F         	movff	?___fldiv,___flmul@b
  3618  00116A  C029  F010         	movff	?___fldiv+1,___flmul@b+1
  3619  00116E  C02A  F011         	movff	?___fldiv+2,___flmul@b+2
  3620  001172  C02B  F012         	movff	?___fldiv+3,___flmul@b+3
  3621  001176  0E00               	movlw	0
  3622  001178  6E13               	movwf	___flmul@a^0,c
  3623  00117A  0E00               	movlw	0
  3624  00117C  6E14               	movwf	(___flmul@a+1)^0,c
  3625  00117E  0EC8               	movlw	200
  3626  001180  6E15               	movwf	(___flmul@a+2)^0,c
  3627  001182  0E42               	movlw	66
  3628  001184  6E16               	movwf	(___flmul@a+3)^0,c
  3629  001186  EC52  F00F         	call	___flmul	;wreg free
  3630  00118A  C00F  F075         	movff	?___flmul,_detect_color$2931
  3631  00118E  C010  F076         	movff	?___flmul+1,_detect_color$2931+1
  3632  001192  C011  F077         	movff	?___flmul+2,_detect_color$2931+2
  3633  001196  C012  F078         	movff	?___flmul+3,_detect_color$2931+3
  3634  00119A                     
  3635                           ;color.c: 247:     GR = lroundf((float)(m->R)/(w->GR)*100); GG = lroundf((float)(m->G)/(
      +                          w->GG)*100); GB = lroundf((float)(m->B)/(w->GB)*100);
  3636  00119A  C075  F04C         	movff	_detect_color$2931,lroundf@x
  3637  00119E  C076  F04D         	movff	_detect_color$2931+1,lroundf@x+1
  3638  0011A2  C077  F04E         	movff	_detect_color$2931+2,lroundf@x+2
  3639  0011A6  C078  F04F         	movff	_detect_color$2931+3,lroundf@x+3
  3640  0011AA  ECB6  F02C         	call	_lroundf	;wreg free
  3641  0011AE  C04C  F064         	movff	?_lroundf,detect_color@GR
  3642  0011B2  C04D  F065         	movff	?_lroundf+1,detect_color@GR+1
  3643  0011B6  EE20 F008          	lfsr	2,8
  3644  0011BA  5059               	movf	detect_color@w^0,w,c
  3645  0011BC  26D9               	addwf	fsr2l,f,c
  3646  0011BE  505A               	movf	(detect_color@w+1)^0,w,c
  3647  0011C0  22DA               	addwfc	fsr2h,f,c
  3648  0011C2  CFDE F05B          	movff	postinc2,??_detect_color
  3649  0011C6  CFDD F05C          	movff	postdec2,??_detect_color+1
  3650  0011CA  C05B  F001         	movff	??_detect_color,___xxtofl@val
  3651  0011CE  C05C  F002         	movff	??_detect_color+1,___xxtofl@val+1
  3652  0011D2  6A03               	clrf	(___xxtofl@val+2)^0,c
  3653  0011D4  6A04               	clrf	(___xxtofl@val+3)^0,c
  3654  0011D6  0E00               	movlw	0
  3655  0011D8  ECF0  F01E         	call	___xxtofl
  3656  0011DC  C001  F02C         	movff	?___xxtofl,___fldiv@a
  3657  0011E0  C002  F02D         	movff	?___xxtofl+1,___fldiv@a+1
  3658  0011E4  C003  F02E         	movff	?___xxtofl+2,___fldiv@a+2
  3659  0011E8  C004  F02F         	movff	?___xxtofl+3,___fldiv@a+3
  3660  0011EC  EE20 F002          	lfsr	2,2
  3661  0011F0  5057               	movf	detect_color@m^0,w,c
  3662  0011F2  26D9               	addwf	fsr2l,f,c
  3663  0011F4  5058               	movf	(detect_color@m+1)^0,w,c
  3664  0011F6  22DA               	addwfc	fsr2h,f,c
  3665  0011F8  CFDE F05D          	movff	postinc2,??_detect_color+2
  3666  0011FC  CFDD F05E          	movff	postdec2,??_detect_color+3
  3667  001200  C05D  F001         	movff	??_detect_color+2,___xxtofl@val
  3668  001204  C05E  F002         	movff	??_detect_color+3,___xxtofl@val+1
  3669  001208  6A03               	clrf	(___xxtofl@val+2)^0,c
  3670  00120A  6A04               	clrf	(___xxtofl@val+3)^0,c
  3671  00120C  0E00               	movlw	0
  3672  00120E  ECF0  F01E         	call	___xxtofl
  3673  001212  C001  F028         	movff	?___xxtofl,___fldiv@b
  3674  001216  C002  F029         	movff	?___xxtofl+1,___fldiv@b+1
  3675  00121A  C003  F02A         	movff	?___xxtofl+2,___fldiv@b+2
  3676  00121E  C004  F02B         	movff	?___xxtofl+3,___fldiv@b+3
  3677  001222  EC10  F015         	call	___fldiv	;wreg free
  3678  001226  C028  F00F         	movff	?___fldiv,___flmul@b
  3679  00122A  C029  F010         	movff	?___fldiv+1,___flmul@b+1
  3680  00122E  C02A  F011         	movff	?___fldiv+2,___flmul@b+2
  3681  001232  C02B  F012         	movff	?___fldiv+3,___flmul@b+3
  3682  001236  0E00               	movlw	0
  3683  001238  6E13               	movwf	___flmul@a^0,c
  3684  00123A  0E00               	movlw	0
  3685  00123C  6E14               	movwf	(___flmul@a+1)^0,c
  3686  00123E  0EC8               	movlw	200
  3687  001240  6E15               	movwf	(___flmul@a+2)^0,c
  3688  001242  0E42               	movlw	66
  3689  001244  6E16               	movwf	(___flmul@a+3)^0,c
  3690  001246  EC52  F00F         	call	___flmul	;wreg free
  3691  00124A  C00F  F075         	movff	?___flmul,_detect_color$2931
  3692  00124E  C010  F076         	movff	?___flmul+1,_detect_color$2931+1
  3693  001252  C011  F077         	movff	?___flmul+2,_detect_color$2931+2
  3694  001256  C012  F078         	movff	?___flmul+3,_detect_color$2931+3
  3695  00125A  C075  F04C         	movff	_detect_color$2931,lroundf@x
  3696  00125E  C076  F04D         	movff	_detect_color$2931+1,lroundf@x+1
  3697  001262  C077  F04E         	movff	_detect_color$2931+2,lroundf@x+2
  3698  001266  C078  F04F         	movff	_detect_color$2931+3,lroundf@x+3
  3699  00126A  ECB6  F02C         	call	_lroundf	;wreg free
  3700  00126E  C04C  F06E         	movff	?_lroundf,detect_color@GG
  3701  001272  C04D  F06F         	movff	?_lroundf+1,detect_color@GG+1
  3702  001276  EE20 F00A          	lfsr	2,10
  3703  00127A  5059               	movf	detect_color@w^0,w,c
  3704  00127C  26D9               	addwf	fsr2l,f,c
  3705  00127E  505A               	movf	(detect_color@w+1)^0,w,c
  3706  001280  22DA               	addwfc	fsr2h,f,c
  3707  001282  CFDE F05B          	movff	postinc2,??_detect_color
  3708  001286  CFDD F05C          	movff	postdec2,??_detect_color+1
  3709  00128A  C05B  F001         	movff	??_detect_color,___xxtofl@val
  3710  00128E  C05C  F002         	movff	??_detect_color+1,___xxtofl@val+1
  3711  001292  6A03               	clrf	(___xxtofl@val+2)^0,c
  3712  001294  6A04               	clrf	(___xxtofl@val+3)^0,c
  3713  001296  0E00               	movlw	0
  3714  001298  ECF0  F01E         	call	___xxtofl
  3715  00129C  C001  F02C         	movff	?___xxtofl,___fldiv@a
  3716  0012A0  C002  F02D         	movff	?___xxtofl+1,___fldiv@a+1
  3717  0012A4  C003  F02E         	movff	?___xxtofl+2,___fldiv@a+2
  3718  0012A8  C004  F02F         	movff	?___xxtofl+3,___fldiv@a+3
  3719  0012AC  EE20 F004          	lfsr	2,4
  3720  0012B0  5057               	movf	detect_color@m^0,w,c
  3721  0012B2  26D9               	addwf	fsr2l,f,c
  3722  0012B4  5058               	movf	(detect_color@m+1)^0,w,c
  3723  0012B6  22DA               	addwfc	fsr2h,f,c
  3724  0012B8  CFDE F05D          	movff	postinc2,??_detect_color+2
  3725  0012BC  CFDD F05E          	movff	postdec2,??_detect_color+3
  3726  0012C0  C05D  F001         	movff	??_detect_color+2,___xxtofl@val
  3727  0012C4  C05E  F002         	movff	??_detect_color+3,___xxtofl@val+1
  3728  0012C8  6A03               	clrf	(___xxtofl@val+2)^0,c
  3729  0012CA  6A04               	clrf	(___xxtofl@val+3)^0,c
  3730  0012CC  0E00               	movlw	0
  3731  0012CE  ECF0  F01E         	call	___xxtofl
  3732  0012D2  C001  F028         	movff	?___xxtofl,___fldiv@b
  3733  0012D6  C002  F029         	movff	?___xxtofl+1,___fldiv@b+1
  3734  0012DA  C003  F02A         	movff	?___xxtofl+2,___fldiv@b+2
  3735  0012DE  C004  F02B         	movff	?___xxtofl+3,___fldiv@b+3
  3736  0012E2  EC10  F015         	call	___fldiv	;wreg free
  3737  0012E6  C028  F00F         	movff	?___fldiv,___flmul@b
  3738  0012EA  C029  F010         	movff	?___fldiv+1,___flmul@b+1
  3739  0012EE  C02A  F011         	movff	?___fldiv+2,___flmul@b+2
  3740  0012F2  C02B  F012         	movff	?___fldiv+3,___flmul@b+3
  3741  0012F6  0E00               	movlw	0
  3742  0012F8  6E13               	movwf	___flmul@a^0,c
  3743  0012FA  0E00               	movlw	0
  3744  0012FC  6E14               	movwf	(___flmul@a+1)^0,c
  3745  0012FE  0EC8               	movlw	200
  3746  001300  6E15               	movwf	(___flmul@a+2)^0,c
  3747  001302  0E42               	movlw	66
  3748  001304  6E16               	movwf	(___flmul@a+3)^0,c
  3749  001306  EC52  F00F         	call	___flmul	;wreg free
  3750  00130A  C00F  F075         	movff	?___flmul,_detect_color$2931
  3751  00130E  C010  F076         	movff	?___flmul+1,_detect_color$2931+1
  3752  001312  C011  F077         	movff	?___flmul+2,_detect_color$2931+2
  3753  001316  C012  F078         	movff	?___flmul+3,_detect_color$2931+3
  3754  00131A  C075  F04C         	movff	_detect_color$2931,lroundf@x
  3755  00131E  C076  F04D         	movff	_detect_color$2931+1,lroundf@x+1
  3756  001322  C077  F04E         	movff	_detect_color$2931+2,lroundf@x+2
  3757  001326  C078  F04F         	movff	_detect_color$2931+3,lroundf@x+3
  3758  00132A  ECB6  F02C         	call	_lroundf	;wreg free
  3759  00132E  C04C  F06A         	movff	?_lroundf,detect_color@GB
  3760  001332  C04D  F06B         	movff	?_lroundf+1,detect_color@GB+1
  3761  001336                     
  3762                           ;color.c: 250:     LED_B();
  3763  001336  ECF5  F02D         	call	_LED_B	;wreg free
  3764  00133A                     
  3765                           ;color.c: 251:     _delay((unsigned long)((100)*(64000000/4000.0)));
  3766  00133A  0E09               	movlw	9
  3767  00133C  6E5C               	movwf	(??_detect_color+1)^0,c
  3768  00133E  0E1E               	movlw	30
  3769  001340  6E5B               	movwf	??_detect_color^0,c
  3770  001342  0EE4               	movlw	228
  3771  001344                     u5977:
  3772  001344  2EE8               	decfsz	wreg,f,c
  3773  001346  D7FE               	bra	u5977
  3774  001348  2E5B               	decfsz	??_detect_color^0,f,c
  3775  00134A  D7FC               	bra	u5977
  3776  00134C  2E5C               	decfsz	(??_detect_color+1)^0,f,c
  3777  00134E  D7FA               	bra	u5977
  3778  001350  D000               	nop2	
  3779  001352                     
  3780                           ;color.c: 252:     read_color(m);
  3781  001352  C057  F00C         	movff	detect_color@m,read_color@m
  3782  001356  C058  F00D         	movff	detect_color@m+1,read_color@m+1
  3783  00135A  ECD5  F02A         	call	_read_color	;wreg free
  3784  00135E                     
  3785                           ;color.c: 254:     BR = lroundf((float)(m->R)/(w->BR)*100); BG = lroundf((float)(m->G)/(
      +                          w->BG)*100); BB = lroundf((float)(m->B)/(w->BB)*100);
  3786  00135E  EE20 F00C          	lfsr	2,12
  3787  001362  5059               	movf	detect_color@w^0,w,c
  3788  001364  26D9               	addwf	fsr2l,f,c
  3789  001366  505A               	movf	(detect_color@w+1)^0,w,c
  3790  001368  22DA               	addwfc	fsr2h,f,c
  3791  00136A  CFDE F05B          	movff	postinc2,??_detect_color
  3792  00136E  CFDD F05C          	movff	postdec2,??_detect_color+1
  3793  001372  C05B  F001         	movff	??_detect_color,___xxtofl@val
  3794  001376  C05C  F002         	movff	??_detect_color+1,___xxtofl@val+1
  3795  00137A  6A03               	clrf	(___xxtofl@val+2)^0,c
  3796  00137C  6A04               	clrf	(___xxtofl@val+3)^0,c
  3797  00137E  0E00               	movlw	0
  3798  001380  ECF0  F01E         	call	___xxtofl
  3799  001384  C001  F02C         	movff	?___xxtofl,___fldiv@a
  3800  001388  C002  F02D         	movff	?___xxtofl+1,___fldiv@a+1
  3801  00138C  C003  F02E         	movff	?___xxtofl+2,___fldiv@a+2
  3802  001390  C004  F02F         	movff	?___xxtofl+3,___fldiv@a+3
  3803  001394  C057  FFD9         	movff	detect_color@m,fsr2l
  3804  001398  C058  FFDA         	movff	detect_color@m+1,fsr2h
  3805  00139C  CFDE F05D          	movff	postinc2,??_detect_color+2
  3806  0013A0  CFDD F05E          	movff	postdec2,??_detect_color+3
  3807  0013A4  C05D  F001         	movff	??_detect_color+2,___xxtofl@val
  3808  0013A8  C05E  F002         	movff	??_detect_color+3,___xxtofl@val+1
  3809  0013AC  6A03               	clrf	(___xxtofl@val+2)^0,c
  3810  0013AE  6A04               	clrf	(___xxtofl@val+3)^0,c
  3811  0013B0  0E00               	movlw	0
  3812  0013B2  ECF0  F01E         	call	___xxtofl
  3813  0013B6  C001  F028         	movff	?___xxtofl,___fldiv@b
  3814  0013BA  C002  F029         	movff	?___xxtofl+1,___fldiv@b+1
  3815  0013BE  C003  F02A         	movff	?___xxtofl+2,___fldiv@b+2
  3816  0013C2  C004  F02B         	movff	?___xxtofl+3,___fldiv@b+3
  3817  0013C6  EC10  F015         	call	___fldiv	;wreg free
  3818  0013CA  C028  F00F         	movff	?___fldiv,___flmul@b
  3819  0013CE  C029  F010         	movff	?___fldiv+1,___flmul@b+1
  3820  0013D2  C02A  F011         	movff	?___fldiv+2,___flmul@b+2
  3821  0013D6  C02B  F012         	movff	?___fldiv+3,___flmul@b+3
  3822  0013DA  0E00               	movlw	0
  3823  0013DC  6E13               	movwf	___flmul@a^0,c
  3824  0013DE  0E00               	movlw	0
  3825  0013E0  6E14               	movwf	(___flmul@a+1)^0,c
  3826  0013E2  0EC8               	movlw	200
  3827  0013E4  6E15               	movwf	(___flmul@a+2)^0,c
  3828  0013E6  0E42               	movlw	66
  3829  0013E8  6E16               	movwf	(___flmul@a+3)^0,c
  3830  0013EA  EC52  F00F         	call	___flmul	;wreg free
  3831  0013EE  C00F  F075         	movff	?___flmul,_detect_color$2931
  3832  0013F2  C010  F076         	movff	?___flmul+1,_detect_color$2931+1
  3833  0013F6  C011  F077         	movff	?___flmul+2,_detect_color$2931+2
  3834  0013FA  C012  F078         	movff	?___flmul+3,_detect_color$2931+3
  3835  0013FE                     
  3836                           ;color.c: 254:     BR = lroundf((float)(m->R)/(w->BR)*100); BG = lroundf((float)(m->G)/(
      +                          w->BG)*100); BB = lroundf((float)(m->B)/(w->BB)*100);
  3837  0013FE  C075  F04C         	movff	_detect_color$2931,lroundf@x
  3838  001402  C076  F04D         	movff	_detect_color$2931+1,lroundf@x+1
  3839  001406  C077  F04E         	movff	_detect_color$2931+2,lroundf@x+2
  3840  00140A  C078  F04F         	movff	_detect_color$2931+3,lroundf@x+3
  3841  00140E  ECB6  F02C         	call	_lroundf	;wreg free
  3842  001412  C04C  F066         	movff	?_lroundf,detect_color@BR
  3843  001416  C04D  F067         	movff	?_lroundf+1,detect_color@BR+1
  3844  00141A  EE20 F00E          	lfsr	2,14
  3845  00141E  5059               	movf	detect_color@w^0,w,c
  3846  001420  26D9               	addwf	fsr2l,f,c
  3847  001422  505A               	movf	(detect_color@w+1)^0,w,c
  3848  001424  22DA               	addwfc	fsr2h,f,c
  3849  001426  CFDE F05B          	movff	postinc2,??_detect_color
  3850  00142A  CFDD F05C          	movff	postdec2,??_detect_color+1
  3851  00142E  C05B  F001         	movff	??_detect_color,___xxtofl@val
  3852  001432  C05C  F002         	movff	??_detect_color+1,___xxtofl@val+1
  3853  001436  6A03               	clrf	(___xxtofl@val+2)^0,c
  3854  001438  6A04               	clrf	(___xxtofl@val+3)^0,c
  3855  00143A  0E00               	movlw	0
  3856  00143C  ECF0  F01E         	call	___xxtofl
  3857  001440  C001  F02C         	movff	?___xxtofl,___fldiv@a
  3858  001444  C002  F02D         	movff	?___xxtofl+1,___fldiv@a+1
  3859  001448  C003  F02E         	movff	?___xxtofl+2,___fldiv@a+2
  3860  00144C  C004  F02F         	movff	?___xxtofl+3,___fldiv@a+3
  3861  001450  EE20 F002          	lfsr	2,2
  3862  001454  5057               	movf	detect_color@m^0,w,c
  3863  001456  26D9               	addwf	fsr2l,f,c
  3864  001458  5058               	movf	(detect_color@m+1)^0,w,c
  3865  00145A  22DA               	addwfc	fsr2h,f,c
  3866  00145C  CFDE F05D          	movff	postinc2,??_detect_color+2
  3867  001460  CFDD F05E          	movff	postdec2,??_detect_color+3
  3868  001464  C05D  F001         	movff	??_detect_color+2,___xxtofl@val
  3869  001468  C05E  F002         	movff	??_detect_color+3,___xxtofl@val+1
  3870  00146C  6A03               	clrf	(___xxtofl@val+2)^0,c
  3871  00146E  6A04               	clrf	(___xxtofl@val+3)^0,c
  3872  001470  0E00               	movlw	0
  3873  001472  ECF0  F01E         	call	___xxtofl
  3874  001476  C001  F028         	movff	?___xxtofl,___fldiv@b
  3875  00147A  C002  F029         	movff	?___xxtofl+1,___fldiv@b+1
  3876  00147E  C003  F02A         	movff	?___xxtofl+2,___fldiv@b+2
  3877  001482  C004  F02B         	movff	?___xxtofl+3,___fldiv@b+3
  3878  001486  EC10  F015         	call	___fldiv	;wreg free
  3879  00148A  C028  F00F         	movff	?___fldiv,___flmul@b
  3880  00148E  C029  F010         	movff	?___fldiv+1,___flmul@b+1
  3881  001492  C02A  F011         	movff	?___fldiv+2,___flmul@b+2
  3882  001496  C02B  F012         	movff	?___fldiv+3,___flmul@b+3
  3883  00149A  0E00               	movlw	0
  3884  00149C  6E13               	movwf	___flmul@a^0,c
  3885  00149E  0E00               	movlw	0
  3886  0014A0  6E14               	movwf	(___flmul@a+1)^0,c
  3887  0014A2  0EC8               	movlw	200
  3888  0014A4  6E15               	movwf	(___flmul@a+2)^0,c
  3889  0014A6  0E42               	movlw	66
  3890  0014A8  6E16               	movwf	(___flmul@a+3)^0,c
  3891  0014AA  EC52  F00F         	call	___flmul	;wreg free
  3892  0014AE  C00F  F075         	movff	?___flmul,_detect_color$2931
  3893  0014B2  C010  F076         	movff	?___flmul+1,_detect_color$2931+1
  3894  0014B6  C011  F077         	movff	?___flmul+2,_detect_color$2931+2
  3895  0014BA  C012  F078         	movff	?___flmul+3,_detect_color$2931+3
  3896  0014BE  C075  F04C         	movff	_detect_color$2931,lroundf@x
  3897  0014C2  C076  F04D         	movff	_detect_color$2931+1,lroundf@x+1
  3898  0014C6  C077  F04E         	movff	_detect_color$2931+2,lroundf@x+2
  3899  0014CA  C078  F04F         	movff	_detect_color$2931+3,lroundf@x+3
  3900  0014CE  ECB6  F02C         	call	_lroundf	;wreg free
  3901  0014D2  C04C  F073         	movff	?_lroundf,detect_color@BG
  3902  0014D6  C04D  F074         	movff	?_lroundf+1,detect_color@BG+1
  3903  0014DA  EE20 F010          	lfsr	2,16
  3904  0014DE  5059               	movf	detect_color@w^0,w,c
  3905  0014E0  26D9               	addwf	fsr2l,f,c
  3906  0014E2  505A               	movf	(detect_color@w+1)^0,w,c
  3907  0014E4  22DA               	addwfc	fsr2h,f,c
  3908  0014E6  CFDE F05B          	movff	postinc2,??_detect_color
  3909  0014EA  CFDD F05C          	movff	postdec2,??_detect_color+1
  3910  0014EE  C05B  F001         	movff	??_detect_color,___xxtofl@val
  3911  0014F2  C05C  F002         	movff	??_detect_color+1,___xxtofl@val+1
  3912  0014F6  6A03               	clrf	(___xxtofl@val+2)^0,c
  3913  0014F8  6A04               	clrf	(___xxtofl@val+3)^0,c
  3914  0014FA  0E00               	movlw	0
  3915  0014FC  ECF0  F01E         	call	___xxtofl
  3916  001500  C001  F02C         	movff	?___xxtofl,___fldiv@a
  3917  001504  C002  F02D         	movff	?___xxtofl+1,___fldiv@a+1
  3918  001508  C003  F02E         	movff	?___xxtofl+2,___fldiv@a+2
  3919  00150C  C004  F02F         	movff	?___xxtofl+3,___fldiv@a+3
  3920  001510  EE20 F004          	lfsr	2,4
  3921  001514  5057               	movf	detect_color@m^0,w,c
  3922  001516  26D9               	addwf	fsr2l,f,c
  3923  001518  5058               	movf	(detect_color@m+1)^0,w,c
  3924  00151A  22DA               	addwfc	fsr2h,f,c
  3925  00151C  CFDE F05D          	movff	postinc2,??_detect_color+2
  3926  001520  CFDD F05E          	movff	postdec2,??_detect_color+3
  3927  001524  C05D  F001         	movff	??_detect_color+2,___xxtofl@val
  3928  001528  C05E  F002         	movff	??_detect_color+3,___xxtofl@val+1
  3929  00152C  6A03               	clrf	(___xxtofl@val+2)^0,c
  3930  00152E  6A04               	clrf	(___xxtofl@val+3)^0,c
  3931  001530  0E00               	movlw	0
  3932  001532  ECF0  F01E         	call	___xxtofl
  3933  001536  C001  F028         	movff	?___xxtofl,___fldiv@b
  3934  00153A  C002  F029         	movff	?___xxtofl+1,___fldiv@b+1
  3935  00153E  C003  F02A         	movff	?___xxtofl+2,___fldiv@b+2
  3936  001542  C004  F02B         	movff	?___xxtofl+3,___fldiv@b+3
  3937  001546  EC10  F015         	call	___fldiv	;wreg free
  3938  00154A  C028  F00F         	movff	?___fldiv,___flmul@b
  3939  00154E  C029  F010         	movff	?___fldiv+1,___flmul@b+1
  3940  001552  C02A  F011         	movff	?___fldiv+2,___flmul@b+2
  3941  001556  C02B  F012         	movff	?___fldiv+3,___flmul@b+3
  3942  00155A  0E00               	movlw	0
  3943  00155C  6E13               	movwf	___flmul@a^0,c
  3944  00155E  0E00               	movlw	0
  3945  001560  6E14               	movwf	(___flmul@a+1)^0,c
  3946  001562  0EC8               	movlw	200
  3947  001564  6E15               	movwf	(___flmul@a+2)^0,c
  3948  001566  0E42               	movlw	66
  3949  001568  6E16               	movwf	(___flmul@a+3)^0,c
  3950  00156A  EC52  F00F         	call	___flmul	;wreg free
  3951  00156E  C00F  F075         	movff	?___flmul,_detect_color$2931
  3952  001572  C010  F076         	movff	?___flmul+1,_detect_color$2931+1
  3953  001576  C011  F077         	movff	?___flmul+2,_detect_color$2931+2
  3954  00157A  C012  F078         	movff	?___flmul+3,_detect_color$2931+3
  3955  00157E  C075  F04C         	movff	_detect_color$2931,lroundf@x
  3956  001582  C076  F04D         	movff	_detect_color$2931+1,lroundf@x+1
  3957  001586  C077  F04E         	movff	_detect_color$2931+2,lroundf@x+2
  3958  00158A  C078  F04F         	movff	_detect_color$2931+3,lroundf@x+3
  3959  00158E  ECB6  F02C         	call	_lroundf	;wreg free
  3960  001592  C04C  F06C         	movff	?_lroundf,detect_color@BB
  3961  001596  C04D  F06D         	movff	?_lroundf+1,detect_color@BB+1
  3962  00159A                     
  3963                           ;color.c: 255:     BC = lroundf((float)(m->C)/(w->BC)*100);
  3964  00159A  EE20 F01A          	lfsr	2,26
  3965  00159E  5059               	movf	detect_color@w^0,w,c
  3966  0015A0  26D9               	addwf	fsr2l,f,c
  3967  0015A2  505A               	movf	(detect_color@w+1)^0,w,c
  3968  0015A4  22DA               	addwfc	fsr2h,f,c
  3969  0015A6  CFDE F05B          	movff	postinc2,??_detect_color
  3970  0015AA  CFDD F05C          	movff	postdec2,??_detect_color+1
  3971  0015AE  C05B  F001         	movff	??_detect_color,___xxtofl@val
  3972  0015B2  C05C  F002         	movff	??_detect_color+1,___xxtofl@val+1
  3973  0015B6  6A03               	clrf	(___xxtofl@val+2)^0,c
  3974  0015B8  6A04               	clrf	(___xxtofl@val+3)^0,c
  3975  0015BA  0E00               	movlw	0
  3976  0015BC  ECF0  F01E         	call	___xxtofl
  3977  0015C0  C001  F02C         	movff	?___xxtofl,___fldiv@a
  3978  0015C4  C002  F02D         	movff	?___xxtofl+1,___fldiv@a+1
  3979  0015C8  C003  F02E         	movff	?___xxtofl+2,___fldiv@a+2
  3980  0015CC  C004  F02F         	movff	?___xxtofl+3,___fldiv@a+3
  3981  0015D0  EE20 F006          	lfsr	2,6
  3982  0015D4  5057               	movf	detect_color@m^0,w,c
  3983  0015D6  26D9               	addwf	fsr2l,f,c
  3984  0015D8  5058               	movf	(detect_color@m+1)^0,w,c
  3985  0015DA  22DA               	addwfc	fsr2h,f,c
  3986  0015DC  CFDE F05D          	movff	postinc2,??_detect_color+2
  3987  0015E0  CFDD F05E          	movff	postdec2,??_detect_color+3
  3988  0015E4  C05D  F001         	movff	??_detect_color+2,___xxtofl@val
  3989  0015E8  C05E  F002         	movff	??_detect_color+3,___xxtofl@val+1
  3990  0015EC  6A03               	clrf	(___xxtofl@val+2)^0,c
  3991  0015EE  6A04               	clrf	(___xxtofl@val+3)^0,c
  3992  0015F0  0E00               	movlw	0
  3993  0015F2  ECF0  F01E         	call	___xxtofl
  3994  0015F6  C001  F028         	movff	?___xxtofl,___fldiv@b
  3995  0015FA  C002  F029         	movff	?___xxtofl+1,___fldiv@b+1
  3996  0015FE  C003  F02A         	movff	?___xxtofl+2,___fldiv@b+2
  3997  001602  C004  F02B         	movff	?___xxtofl+3,___fldiv@b+3
  3998  001606  EC10  F015         	call	___fldiv	;wreg free
  3999  00160A  C028  F00F         	movff	?___fldiv,___flmul@b
  4000  00160E  C029  F010         	movff	?___fldiv+1,___flmul@b+1
  4001  001612  C02A  F011         	movff	?___fldiv+2,___flmul@b+2
  4002  001616  C02B  F012         	movff	?___fldiv+3,___flmul@b+3
  4003  00161A  0E00               	movlw	0
  4004  00161C  6E13               	movwf	___flmul@a^0,c
  4005  00161E  0E00               	movlw	0
  4006  001620  6E14               	movwf	(___flmul@a+1)^0,c
  4007  001622  0EC8               	movlw	200
  4008  001624  6E15               	movwf	(___flmul@a+2)^0,c
  4009  001626  0E42               	movlw	66
  4010  001628  6E16               	movwf	(___flmul@a+3)^0,c
  4011  00162A  EC52  F00F         	call	___flmul	;wreg free
  4012  00162E  C00F  F075         	movff	?___flmul,_detect_color$2931
  4013  001632  C010  F076         	movff	?___flmul+1,_detect_color$2931+1
  4014  001636  C011  F077         	movff	?___flmul+2,_detect_color$2931+2
  4015  00163A  C012  F078         	movff	?___flmul+3,_detect_color$2931+3
  4016  00163E  C075  F04C         	movff	_detect_color$2931,lroundf@x
  4017  001642  C076  F04D         	movff	_detect_color$2931+1,lroundf@x+1
  4018  001646  C077  F04E         	movff	_detect_color$2931+2,lroundf@x+2
  4019  00164A  C078  F04F         	movff	_detect_color$2931+3,lroundf@x+3
  4020  00164E  ECB6  F02C         	call	_lroundf	;wreg free
  4021  001652                     
  4022                           ;color.c: 258:     if (compare(0, RR, 45)){
  4023  001652  0E00               	movlw	0
  4024  001654  6E51               	movwf	(compare@lower+1)^0,c
  4025  001656  0E00               	movlw	0
  4026  001658  6E50               	movwf	compare@lower^0,c
  4027  00165A  C070  F052         	movff	detect_color@RR,compare@value2compare
  4028  00165E  C071  F053         	movff	detect_color@RR+1,compare@value2compare+1
  4029  001662  0E00               	movlw	0
  4030  001664  6E55               	movwf	(compare@upper+1)^0,c
  4031  001666  0E2D               	movlw	45
  4032  001668  6E54               	movwf	compare@upper^0,c
  4033  00166A  ECD3  F02C         	call	_compare	;wreg free
  4034  00166E  0900               	iorlw	0
  4035  001670  B4D8               	btfsc	status,2,c
  4036  001672  EF3D  F00B         	goto	u5161
  4037  001676  EF3F  F00B         	goto	u5160
  4038  00167A                     u5161:
  4039  00167A  EFAE  F00B         	goto	l4724
  4040  00167E                     u5160:
  4041  00167E                     
  4042                           ;color.c: 259:          if (compare(0, lroundf((float)(GG + BG)/BB * 200), 467)){color =
      +                           3;}
  4043  00167E  C06C  F001         	movff	detect_color@BB,___xxtofl@val
  4044  001682  C06D  F002         	movff	detect_color@BB+1,___xxtofl@val+1
  4045  001686  6A03               	clrf	(___xxtofl@val+2)^0,c
  4046  001688  6A04               	clrf	(___xxtofl@val+3)^0,c
  4047  00168A  0E00               	movlw	0
  4048  00168C  ECF0  F01E         	call	___xxtofl
  4049  001690  C001  F02C         	movff	?___xxtofl,___fldiv@a
  4050  001694  C002  F02D         	movff	?___xxtofl+1,___fldiv@a+1
  4051  001698  C003  F02E         	movff	?___xxtofl+2,___fldiv@a+2
  4052  00169C  C004  F02F         	movff	?___xxtofl+3,___fldiv@a+3
  4053  0016A0  0100               	movlb	0	; () banked
  4054  0016A2  5173               	movf	detect_color@BG& (0+255),w,b
  4055  0016A4  256E               	addwf	detect_color@GG& (0+255),w,b
  4056  0016A6  6E5B               	movwf	??_detect_color^0,c
  4057  0016A8  5174               	movf	(detect_color@BG+1)& (0+255),w,b
  4058  0016AA  216F               	addwfc	(detect_color@GG+1)& (0+255),w,b
  4059  0016AC  6E5C               	movwf	(??_detect_color+1)^0,c
  4060  0016AE  C05B  F001         	movff	??_detect_color,___xxtofl@val
  4061  0016B2  C05C  F002         	movff	??_detect_color+1,___xxtofl@val+1
  4062  0016B6  6A03               	clrf	(___xxtofl@val+2)^0,c
  4063  0016B8  6A04               	clrf	(___xxtofl@val+3)^0,c
  4064  0016BA  0E00               	movlw	0
  4065  0016BC  ECF0  F01E         	call	___xxtofl
  4066  0016C0  C001  F028         	movff	?___xxtofl,___fldiv@b
  4067  0016C4  C002  F029         	movff	?___xxtofl+1,___fldiv@b+1
  4068  0016C8  C003  F02A         	movff	?___xxtofl+2,___fldiv@b+2
  4069  0016CC  C004  F02B         	movff	?___xxtofl+3,___fldiv@b+3
  4070  0016D0  EC10  F015         	call	___fldiv	;wreg free
  4071  0016D4  C028  F00F         	movff	?___fldiv,___flmul@b
  4072  0016D8  C029  F010         	movff	?___fldiv+1,___flmul@b+1
  4073  0016DC  C02A  F011         	movff	?___fldiv+2,___flmul@b+2
  4074  0016E0  C02B  F012         	movff	?___fldiv+3,___flmul@b+3
  4075  0016E4  0E00               	movlw	0
  4076  0016E6  6E13               	movwf	___flmul@a^0,c
  4077  0016E8  0E00               	movlw	0
  4078  0016EA  6E14               	movwf	(___flmul@a+1)^0,c
  4079  0016EC  0E48               	movlw	72
  4080  0016EE  6E15               	movwf	(___flmul@a+2)^0,c
  4081  0016F0  0E43               	movlw	67
  4082  0016F2  6E16               	movwf	(___flmul@a+3)^0,c
  4083  0016F4  EC52  F00F         	call	___flmul	;wreg free
  4084  0016F8  C00F  F075         	movff	?___flmul,_detect_color$2931
  4085  0016FC  C010  F076         	movff	?___flmul+1,_detect_color$2931+1
  4086  001700  C011  F077         	movff	?___flmul+2,_detect_color$2931+2
  4087  001704  C012  F078         	movff	?___flmul+3,_detect_color$2931+3
  4088                           
  4089                           ;color.c: 259:          if (compare(0, lroundf((float)(GG + BG)/BB * 200), 467)){color =
      +                           3;}
  4090  001708  0E00               	movlw	0
  4091  00170A  6E51               	movwf	(compare@lower+1)^0,c
  4092  00170C  0E00               	movlw	0
  4093  00170E  6E50               	movwf	compare@lower^0,c
  4094  001710  C075  F04C         	movff	_detect_color$2931,lroundf@x
  4095  001714  C076  F04D         	movff	_detect_color$2931+1,lroundf@x+1
  4096  001718  C077  F04E         	movff	_detect_color$2931+2,lroundf@x+2
  4097  00171C  C078  F04F         	movff	_detect_color$2931+3,lroundf@x+3
  4098  001720  ECB6  F02C         	call	_lroundf	;wreg free
  4099  001724  C04C  F052         	movff	?_lroundf,compare@value2compare
  4100  001728  C04D  F053         	movff	?_lroundf+1,compare@value2compare+1
  4101  00172C  0E01               	movlw	1
  4102  00172E  6E55               	movwf	(compare@upper+1)^0,c
  4103  001730  0ED3               	movlw	211
  4104  001732  6E54               	movwf	compare@upper^0,c
  4105  001734  ECD3  F02C         	call	_compare	;wreg free
  4106  001738  0900               	iorlw	0
  4107  00173A  B4D8               	btfsc	status,2,c
  4108  00173C  EFA2  F00B         	goto	u5171
  4109  001740  EFA4  F00B         	goto	u5170
  4110  001744                     u5171:
  4111  001744  EFA9  F00B         	goto	l4722
  4112  001748                     u5170:
  4113  001748  0E03               	movlw	3
  4114  00174A  0100               	movlb	0	; () banked
  4115  00174C  6F72               	movwf	detect_color@color& (0+255),b
  4116  00174E  EF67  F00C         	goto	l4750
  4117  001752                     l4722:
  4118  001752  0E02               	movlw	2
  4119  001754  0100               	movlb	0	; () banked
  4120  001756  6F72               	movwf	detect_color@color& (0+255),b
  4121  001758  EF67  F00C         	goto	l4750
  4122  00175C                     l4724:
  4123                           
  4124                           ;color.c: 263:         if (GG <= 30 && GB <= 30){
  4125  00175C  0100               	movlb	0	; () banked
  4126  00175E  516F               	movf	(detect_color@GG+1)& (0+255),w,b
  4127  001760  E107               	bnz	u5181
  4128  001762  0E1F               	movlw	31
  4129  001764  5D6E               	subwf	detect_color@GG& (0+255),w,b
  4130  001766  B0D8               	btfsc	status,0,c
  4131  001768  EFB8  F00B         	goto	u5181
  4132  00176C  EFBA  F00B         	goto	u5180
  4133  001770                     u5181:
  4134  001770  EF2D  F00C         	goto	l4734
  4135  001774                     u5180:
  4136  001774                     
  4137                           ; BSR set to: 0
  4138  001774  516B               	movf	(detect_color@GB+1)& (0+255),w,b
  4139  001776  E107               	bnz	u5191
  4140  001778  0E1F               	movlw	31
  4141  00177A  5D6A               	subwf	detect_color@GB& (0+255),w,b
  4142  00177C  B0D8               	btfsc	status,0,c
  4143  00177E  EFC3  F00B         	goto	u5191
  4144  001782  EFC5  F00B         	goto	u5190
  4145  001786                     u5191:
  4146  001786  EF2D  F00C         	goto	l4734
  4147  00178A                     u5190:
  4148  00178A                     
  4149                           ; BSR set to: 0
  4150                           ;color.c: 265:             if (compare(0, lroundf((float)GR/RR * 500), 150)){color = 1;}
  4151  00178A  C070  F001         	movff	detect_color@RR,___xxtofl@val
  4152  00178E  C071  F002         	movff	detect_color@RR+1,___xxtofl@val+1
  4153  001792  6A03               	clrf	(___xxtofl@val+2)^0,c
  4154  001794  6A04               	clrf	(___xxtofl@val+3)^0,c
  4155  001796  0E00               	movlw	0
  4156  001798  ECF0  F01E         	call	___xxtofl
  4157  00179C  C001  F02C         	movff	?___xxtofl,___fldiv@a
  4158  0017A0  C002  F02D         	movff	?___xxtofl+1,___fldiv@a+1
  4159  0017A4  C003  F02E         	movff	?___xxtofl+2,___fldiv@a+2
  4160  0017A8  C004  F02F         	movff	?___xxtofl+3,___fldiv@a+3
  4161  0017AC  C064  F001         	movff	detect_color@GR,___xxtofl@val
  4162  0017B0  C065  F002         	movff	detect_color@GR+1,___xxtofl@val+1
  4163  0017B4  6A03               	clrf	(___xxtofl@val+2)^0,c
  4164  0017B6  6A04               	clrf	(___xxtofl@val+3)^0,c
  4165  0017B8  0E00               	movlw	0
  4166  0017BA  ECF0  F01E         	call	___xxtofl
  4167  0017BE  C001  F028         	movff	?___xxtofl,___fldiv@b
  4168  0017C2  C002  F029         	movff	?___xxtofl+1,___fldiv@b+1
  4169  0017C6  C003  F02A         	movff	?___xxtofl+2,___fldiv@b+2
  4170  0017CA  C004  F02B         	movff	?___xxtofl+3,___fldiv@b+3
  4171  0017CE  EC10  F015         	call	___fldiv	;wreg free
  4172  0017D2  C028  F00F         	movff	?___fldiv,___flmul@b
  4173  0017D6  C029  F010         	movff	?___fldiv+1,___flmul@b+1
  4174  0017DA  C02A  F011         	movff	?___fldiv+2,___flmul@b+2
  4175  0017DE  C02B  F012         	movff	?___fldiv+3,___flmul@b+3
  4176  0017E2  0E00               	movlw	0
  4177  0017E4  6E13               	movwf	___flmul@a^0,c
  4178  0017E6  0E00               	movlw	0
  4179  0017E8  6E14               	movwf	(___flmul@a+1)^0,c
  4180  0017EA  0EFA               	movlw	250
  4181  0017EC  6E15               	movwf	(___flmul@a+2)^0,c
  4182  0017EE  0E43               	movlw	67
  4183  0017F0  6E16               	movwf	(___flmul@a+3)^0,c
  4184  0017F2  EC52  F00F         	call	___flmul	;wreg free
  4185  0017F6  C00F  F075         	movff	?___flmul,_detect_color$2931
  4186  0017FA  C010  F076         	movff	?___flmul+1,_detect_color$2931+1
  4187  0017FE  C011  F077         	movff	?___flmul+2,_detect_color$2931+2
  4188  001802  C012  F078         	movff	?___flmul+3,_detect_color$2931+3
  4189                           
  4190                           ;color.c: 265:             if (compare(0, lroundf((float)GR/RR * 500), 150)){color = 1;}
  4191  001806  0E00               	movlw	0
  4192  001808  6E51               	movwf	(compare@lower+1)^0,c
  4193  00180A  0E00               	movlw	0
  4194  00180C  6E50               	movwf	compare@lower^0,c
  4195  00180E  C075  F04C         	movff	_detect_color$2931,lroundf@x
  4196  001812  C076  F04D         	movff	_detect_color$2931+1,lroundf@x+1
  4197  001816  C077  F04E         	movff	_detect_color$2931+2,lroundf@x+2
  4198  00181A  C078  F04F         	movff	_detect_color$2931+3,lroundf@x+3
  4199  00181E  ECB6  F02C         	call	_lroundf	;wreg free
  4200  001822  C04C  F052         	movff	?_lroundf,compare@value2compare
  4201  001826  C04D  F053         	movff	?_lroundf+1,compare@value2compare+1
  4202  00182A  0E00               	movlw	0
  4203  00182C  6E55               	movwf	(compare@upper+1)^0,c
  4204  00182E  0E96               	movlw	150
  4205  001830  6E54               	movwf	compare@upper^0,c
  4206  001832  ECD3  F02C         	call	_compare	;wreg free
  4207  001836  0900               	iorlw	0
  4208  001838  B4D8               	btfsc	status,2,c
  4209  00183A  EF21  F00C         	goto	u5201
  4210  00183E  EF23  F00C         	goto	u5200
  4211  001842                     u5201:
  4212  001842  EF28  F00C         	goto	l4732
  4213  001846                     u5200:
  4214  001846  0E01               	movlw	1
  4215  001848  0100               	movlb	0	; () banked
  4216  00184A  6F72               	movwf	detect_color@color& (0+255),b
  4217  00184C  EF67  F00C         	goto	l4750
  4218  001850                     l4732:
  4219  001850  0E06               	movlw	6
  4220  001852  0100               	movlb	0	; () banked
  4221  001854  6F72               	movwf	detect_color@color& (0+255),b
  4222  001856  EF67  F00C         	goto	l4750
  4223  00185A                     l4734:
  4224                           
  4225                           ; BSR set to: 0
  4226  00185A  516F               	movf	(detect_color@GG+1)& (0+255),w,b
  4227  00185C  E109               	bnz	u5210
  4228  00185E  0E1F               	movlw	31
  4229  001860  5D6E               	subwf	detect_color@GG& (0+255),w,b
  4230  001862  A0D8               	btfss	status,0,c
  4231  001864  EF36  F00C         	goto	u5211
  4232  001868  EF38  F00C         	goto	u5210
  4233  00186C                     u5211:
  4234  00186C  EF65  F00C         	goto	l4748
  4235  001870                     u5210:
  4236  001870                     
  4237                           ; BSR set to: 0
  4238  001870  516B               	movf	(detect_color@GB+1)& (0+255),w,b
  4239  001872  E109               	bnz	u5220
  4240  001874  0E1F               	movlw	31
  4241  001876  5D6A               	subwf	detect_color@GB& (0+255),w,b
  4242  001878  A0D8               	btfss	status,0,c
  4243  00187A  EF41  F00C         	goto	u5221
  4244  00187E  EF43  F00C         	goto	u5220
  4245  001882                     u5221:
  4246  001882  EF65  F00C         	goto	l4748
  4247  001886                     u5220:
  4248  001886                     
  4249                           ; BSR set to: 0
  4250                           ;color.c: 270:             if (BB >= 80){color = 7;}
  4251  001886  516D               	movf	(detect_color@BB+1)& (0+255),w,b
  4252  001888  E109               	bnz	u5230
  4253  00188A  0E50               	movlw	80
  4254  00188C  5D6C               	subwf	detect_color@BB& (0+255),w,b
  4255  00188E  A0D8               	btfss	status,0,c
  4256  001890  EF4C  F00C         	goto	u5231
  4257  001894  EF4E  F00C         	goto	u5230
  4258  001898                     u5231:
  4259  001898  EF52  F00C         	goto	l4742
  4260  00189C                     u5230:
  4261  00189C                     
  4262                           ; BSR set to: 0
  4263  00189C  0E07               	movlw	7
  4264  00189E  6F72               	movwf	detect_color@color& (0+255),b
  4265  0018A0  EF67  F00C         	goto	l4750
  4266  0018A4                     l4742:
  4267                           
  4268                           ; BSR set to: 0
  4269                           ;color.c: 272:                 if (BG < 48){color = 4;}
  4270  0018A4  5174               	movf	(detect_color@BG+1)& (0+255),w,b
  4271  0018A6  E107               	bnz	u5241
  4272  0018A8  0E30               	movlw	48
  4273  0018AA  5D73               	subwf	detect_color@BG& (0+255),w,b
  4274  0018AC  B0D8               	btfsc	status,0,c
  4275  0018AE  EF5B  F00C         	goto	u5241
  4276  0018B2  EF5D  F00C         	goto	u5240
  4277  0018B6                     u5241:
  4278  0018B6  EF61  F00C         	goto	l4746
  4279  0018BA                     u5240:
  4280  0018BA                     
  4281                           ; BSR set to: 0
  4282  0018BA  0E04               	movlw	4
  4283  0018BC  6F72               	movwf	detect_color@color& (0+255),b
  4284  0018BE  EF67  F00C         	goto	l4750
  4285  0018C2                     l4746:
  4286                           
  4287                           ; BSR set to: 0
  4288  0018C2  0E05               	movlw	5
  4289  0018C4  6F72               	movwf	detect_color@color& (0+255),b
  4290  0018C6  EF67  F00C         	goto	l4750
  4291  0018CA                     l4748:
  4292                           
  4293                           ; BSR set to: 0
  4294  0018CA  0E00               	movlw	0
  4295  0018CC  6F72               	movwf	detect_color@color& (0+255),b
  4296  0018CE                     l4750:
  4297                           
  4298                           ; BSR set to: 0
  4299                           ;color.c: 280:     if (compare(90, RR, RR * 2) && compare(90, RB, RB * 2) && compare(90,
      +                           BG, BG * 2)){color = 8;}
  4300  0018CE  0E00               	movlw	0
  4301  0018D0  6E51               	movwf	(compare@lower+1)^0,c
  4302  0018D2  0E5A               	movlw	90
  4303  0018D4  6E50               	movwf	compare@lower^0,c
  4304  0018D6  C070  F052         	movff	detect_color@RR,compare@value2compare
  4305  0018DA  C071  F053         	movff	detect_color@RR+1,compare@value2compare+1
  4306  0018DE  90D8               	bcf	status,0,c
  4307  0018E0  3570               	rlcf	detect_color@RR& (0+255),w,b
  4308  0018E2  6E54               	movwf	compare@upper^0,c
  4309  0018E4  3571               	rlcf	(detect_color@RR+1)& (0+255),w,b
  4310  0018E6  6E55               	movwf	(compare@upper+1)^0,c
  4311  0018E8  ECD3  F02C         	call	_compare	;wreg free
  4312  0018EC  0900               	iorlw	0
  4313  0018EE  B4D8               	btfsc	status,2,c
  4314  0018F0  EF7C  F00C         	goto	u5251
  4315  0018F4  EF7E  F00C         	goto	u5250
  4316  0018F8                     u5251:
  4317  0018F8  EFB1  F00C         	goto	l4758
  4318  0018FC                     u5250:
  4319  0018FC  0E00               	movlw	0
  4320  0018FE  6E51               	movwf	(compare@lower+1)^0,c
  4321  001900  0E5A               	movlw	90
  4322  001902  6E50               	movwf	compare@lower^0,c
  4323  001904  C068  F052         	movff	detect_color@RB,compare@value2compare
  4324  001908  C069  F053         	movff	detect_color@RB+1,compare@value2compare+1
  4325  00190C  90D8               	bcf	status,0,c
  4326  00190E  0100               	movlb	0	; () banked
  4327  001910  3568               	rlcf	detect_color@RB& (0+255),w,b
  4328  001912  6E54               	movwf	compare@upper^0,c
  4329  001914  3569               	rlcf	(detect_color@RB+1)& (0+255),w,b
  4330  001916  6E55               	movwf	(compare@upper+1)^0,c
  4331  001918  ECD3  F02C         	call	_compare	;wreg free
  4332  00191C  0900               	iorlw	0
  4333  00191E  B4D8               	btfsc	status,2,c
  4334  001920  EF94  F00C         	goto	u5261
  4335  001924  EF96  F00C         	goto	u5260
  4336  001928                     u5261:
  4337  001928  EFB1  F00C         	goto	l4758
  4338  00192C                     u5260:
  4339  00192C  0E00               	movlw	0
  4340  00192E  6E51               	movwf	(compare@lower+1)^0,c
  4341  001930  0E5A               	movlw	90
  4342  001932  6E50               	movwf	compare@lower^0,c
  4343  001934  C073  F052         	movff	detect_color@BG,compare@value2compare
  4344  001938  C074  F053         	movff	detect_color@BG+1,compare@value2compare+1
  4345  00193C  90D8               	bcf	status,0,c
  4346  00193E  0100               	movlb	0	; () banked
  4347  001940  3573               	rlcf	detect_color@BG& (0+255),w,b
  4348  001942  6E54               	movwf	compare@upper^0,c
  4349  001944  3574               	rlcf	(detect_color@BG+1)& (0+255),w,b
  4350  001946  6E55               	movwf	(compare@upper+1)^0,c
  4351  001948  ECD3  F02C         	call	_compare	;wreg free
  4352  00194C  0900               	iorlw	0
  4353  00194E  B4D8               	btfsc	status,2,c
  4354  001950  EFAC  F00C         	goto	u5271
  4355  001954  EFAE  F00C         	goto	u5270
  4356  001958                     u5271:
  4357  001958  EFB1  F00C         	goto	l4758
  4358  00195C                     u5270:
  4359  00195C  0E08               	movlw	8
  4360  00195E  0100               	movlb	0	; () banked
  4361  001960  6F72               	movwf	detect_color@color& (0+255),b
  4362  001962                     l4758:
  4363                           
  4364                           ;color.c: 283:     if (compare(0, BR, 30) && compare(0,BG,30)){color = 0;}
  4365  001962  0E00               	movlw	0
  4366  001964  6E51               	movwf	(compare@lower+1)^0,c
  4367  001966  0E00               	movlw	0
  4368  001968  6E50               	movwf	compare@lower^0,c
  4369  00196A  C066  F052         	movff	detect_color@BR,compare@value2compare
  4370  00196E  C067  F053         	movff	detect_color@BR+1,compare@value2compare+1
  4371  001972  0E00               	movlw	0
  4372  001974  6E55               	movwf	(compare@upper+1)^0,c
  4373  001976  0E1E               	movlw	30
  4374  001978  6E54               	movwf	compare@upper^0,c
  4375  00197A  ECD3  F02C         	call	_compare	;wreg free
  4376  00197E  0900               	iorlw	0
  4377  001980  B4D8               	btfsc	status,2,c
  4378  001982  EFC5  F00C         	goto	u5281
  4379  001986  EFC7  F00C         	goto	u5280
  4380  00198A                     u5281:
  4381  00198A  EFE0  F00C         	goto	l4764
  4382  00198E                     u5280:
  4383  00198E  0E00               	movlw	0
  4384  001990  6E51               	movwf	(compare@lower+1)^0,c
  4385  001992  0E00               	movlw	0
  4386  001994  6E50               	movwf	compare@lower^0,c
  4387  001996  C073  F052         	movff	detect_color@BG,compare@value2compare
  4388  00199A  C074  F053         	movff	detect_color@BG+1,compare@value2compare+1
  4389  00199E  0E00               	movlw	0
  4390  0019A0  6E55               	movwf	(compare@upper+1)^0,c
  4391  0019A2  0E1E               	movlw	30
  4392  0019A4  6E54               	movwf	compare@upper^0,c
  4393  0019A6  ECD3  F02C         	call	_compare	;wreg free
  4394  0019AA  0900               	iorlw	0
  4395  0019AC  B4D8               	btfsc	status,2,c
  4396  0019AE  EFDB  F00C         	goto	u5291
  4397  0019B2  EFDD  F00C         	goto	u5290
  4398  0019B6                     u5291:
  4399  0019B6  EFE0  F00C         	goto	l4764
  4400  0019BA                     u5290:
  4401  0019BA  0E00               	movlw	0
  4402  0019BC  0100               	movlb	0	; () banked
  4403  0019BE  6F72               	movwf	detect_color@color& (0+255),b
  4404  0019C0                     l4764:
  4405                           
  4406                           ;color.c: 285:     if (color == 8) {toggle_light(2,1);}
  4407  0019C0  0E08               	movlw	8
  4408  0019C2  0100               	movlb	0	; () banked
  4409  0019C4  1972               	xorwf	detect_color@color& (0+255),w,b
  4410  0019C6  A4D8               	btfss	status,2,c
  4411  0019C8  EFE8  F00C         	goto	u5301
  4412  0019CC  EFEA  F00C         	goto	u5300
  4413  0019D0                     u5301:
  4414  0019D0  EFEF  F00C         	goto	l4768
  4415  0019D4                     u5300:
  4416  0019D4                     
  4417                           ; BSR set to: 0
  4418  0019D4  0E01               	movlw	1
  4419  0019D6  6E01               	movwf	toggle_light@toggletime^0,c
  4420  0019D8  0E02               	movlw	2
  4421  0019DA  ECC7  F019         	call	_toggle_light
  4422  0019DE                     l4768:
  4423                           
  4424                           ;color.c: 287:     return color;
  4425  0019DE  0100               	movlb	0	; () banked
  4426  0019E0  5172               	movf	detect_color@color& (0+255),w,b
  4427  0019E2                     
  4428                           ; BSR set to: 0
  4429  0019E2  0012               	return		;funcret
  4430  0019E4                     __end_of_detect_color:
  4431                           	callstack 0
  4432                           
  4433 ;; *************** function _compare *****************
  4434 ;; Defined at:
  4435 ;;		line 220 in file "color.c"
  4436 ;; Parameters:    Size  Location     Type
  4437 ;;  lower           2   79[COMRAM] unsigned int 
  4438 ;;  value2compar    2   81[COMRAM] unsigned int 
  4439 ;;  upper           2   83[COMRAM] unsigned int 
  4440 ;; Auto vars:     Size  Location     Type
  4441 ;;  result          1   85[COMRAM] unsigned char 
  4442 ;; Return value:  Size  Location     Type
  4443 ;;                  1    wreg      unsigned char 
  4444 ;; Registers used:
  4445 ;;		wreg, status,2, status,0
  4446 ;; Tracked objects:
  4447 ;;		On entry : 0/0
  4448 ;;		On exit  : 0/0
  4449 ;;		Unchanged: 0/0
  4450 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4451 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4452 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4453 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4454 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4455 ;;Total ram usage:        7 bytes
  4456 ;; Hardware stack levels used: 1
  4457 ;; Hardware stack levels required when called: 1
  4458 ;; This function calls:
  4459 ;;		Nothing
  4460 ;; This function is called by:
  4461 ;;		_detect_color
  4462 ;; This function uses a non-reentrant model
  4463 ;;
  4464                           
  4465                           	psect	text8
  4466  0059A6                     __ptext8:
  4467                           	callstack 0
  4468  0059A6                     _compare:
  4469                           	callstack 27
  4470  0059A6                     
  4471                           ;color.c: 220: unsigned char compare(unsigned int lower, unsigned int value2compare, uns
      +                          igned int upper);color.c: 221: {;color.c: 222:     unsigned char result = 0;
  4472  0059A6  0E00               	movlw	0
  4473  0059A8  6E56               	movwf	compare@result^0,c
  4474  0059AA                     
  4475                           ;color.c: 223:     if (lower < value2compare && value2compare <= upper){result = 1;}
  4476  0059AA  5052               	movf	compare@value2compare^0,w,c
  4477  0059AC  5C50               	subwf	compare@lower^0,w,c
  4478  0059AE  5053               	movf	(compare@value2compare+1)^0,w,c
  4479  0059B0  5851               	subwfb	(compare@lower+1)^0,w,c
  4480  0059B2  B0D8               	btfsc	status,0,c
  4481  0059B4  EFDE  F02C         	goto	u4741
  4482  0059B8  EFE0  F02C         	goto	u4740
  4483  0059BC                     u4741:
  4484  0059BC  EFED  F02C         	goto	l105
  4485  0059C0                     u4740:
  4486  0059C0  5052               	movf	compare@value2compare^0,w,c
  4487  0059C2  5C54               	subwf	compare@upper^0,w,c
  4488  0059C4  5053               	movf	(compare@value2compare+1)^0,w,c
  4489  0059C6  5855               	subwfb	(compare@upper+1)^0,w,c
  4490  0059C8  A0D8               	btfss	status,0,c
  4491  0059CA  EFE9  F02C         	goto	u4751
  4492  0059CE  EFEB  F02C         	goto	u4750
  4493  0059D2                     u4751:
  4494  0059D2  EFED  F02C         	goto	l105
  4495  0059D6                     u4750:
  4496  0059D6  0E01               	movlw	1
  4497  0059D8  6E56               	movwf	compare@result^0,c
  4498  0059DA                     l105:
  4499                           
  4500                           ;color.c: 224:     return result;
  4501  0059DA  5056               	movf	compare@result^0,w,c
  4502  0059DC  0012               	return		;funcret
  4503  0059DE                     __end_of_compare:
  4504                           	callstack 0
  4505                           
  4506 ;; *************** function _color_data_collection *****************
  4507 ;; Defined at:
  4508 ;;		line 335 in file "color.c"
  4509 ;; Parameters:    Size  Location     Type
  4510 ;;  m               2   89[COMRAM] PTR struct color_rgb
  4511 ;;		 -> main@rgb(8), 
  4512 ;; Auto vars:     Size  Location     Type
  4513 ;;  i               2  126[BANK0 ] int 
  4514 ;; Return value:  Size  Location     Type
  4515 ;;                  1    wreg      void 
  4516 ;; Registers used:
  4517 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4518 ;; Tracked objects:
  4519 ;;		On entry : 0/0
  4520 ;;		On exit  : 0/0
  4521 ;;		Unchanged: 0/0
  4522 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4523 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4524 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4525 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4526 ;;      Totals:         4       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4527 ;;Total ram usage:        6 bytes
  4528 ;; Hardware stack levels used: 1
  4529 ;; Hardware stack levels required when called: 10
  4530 ;; This function calls:
  4531 ;;		_LED_B
  4532 ;;		_LED_C
  4533 ;;		_LED_G
  4534 ;;		_LED_R
  4535 ;;		_color_display
  4536 ;;		_color_predict
  4537 ;;		_read_color
  4538 ;; This function is called by:
  4539 ;;		_test_function
  4540 ;; This function uses a non-reentrant model
  4541 ;;
  4542                           
  4543                           	psect	text9
  4544  004AD2                     __ptext9:
  4545                           	callstack 0
  4546  004AD2                     _color_data_collection:
  4547                           	callstack 19
  4548  004AD2                     
  4549                           ;color.c: 335: void color_data_collection(struct color_rgb *m);color.c: 336: {;color.c: 
      +                          337:     int i = 0;
  4550  004AD2  0E00               	movlw	0
  4551  004AD4  0100               	movlb	0	; () banked
  4552  004AD6  6FDF               	movwf	(color_data_collection@i+1)& (0+255),b
  4553  004AD8  0E00               	movlw	0
  4554  004ADA  6FDE               	movwf	color_data_collection@i& (0+255),b
  4555                           
  4556                           ;color.c: 338:     for (i = 0; i < 1; ++i){
  4557  004ADC  0E00               	movlw	0
  4558  004ADE  6FDF               	movwf	(color_data_collection@i+1)& (0+255),b
  4559  004AE0  0E00               	movlw	0
  4560  004AE2  6FDE               	movwf	color_data_collection@i& (0+255),b
  4561  004AE4                     l4832:
  4562                           
  4563                           ; BSR set to: 0
  4564                           ;color.c: 339:         LED_C();
  4565  004AE4  EC05  F02E         	call	_LED_C	;wreg free
  4566  004AE8                     
  4567                           ;color.c: 340:         _delay((unsigned long)((100)*(64000000/4000.0)));
  4568  004AE8  0E09               	movlw	9
  4569  004AEA  6E5D               	movwf	(??_color_data_collection+1)^0,c
  4570  004AEC  0E1E               	movlw	30
  4571  004AEE  6E5C               	movwf	??_color_data_collection^0,c
  4572  004AF0  0EE4               	movlw	228
  4573  004AF2                     u5987:
  4574  004AF2  2EE8               	decfsz	wreg,f,c
  4575  004AF4  D7FE               	bra	u5987
  4576  004AF6  2E5C               	decfsz	??_color_data_collection^0,f,c
  4577  004AF8  D7FC               	bra	u5987
  4578  004AFA  2E5D               	decfsz	(??_color_data_collection+1)^0,f,c
  4579  004AFC  D7FA               	bra	u5987
  4580  004AFE  D000               	nop2	
  4581  004B00                     
  4582                           ;color.c: 341:         read_color(m);
  4583  004B00  C05A  F00C         	movff	color_data_collection@m,read_color@m
  4584  004B04  C05B  F00D         	movff	color_data_collection@m+1,read_color@m+1
  4585  004B08  ECD5  F02A         	call	_read_color	;wreg free
  4586  004B0C                     
  4587                           ;color.c: 342:         color_display(m);
  4588  004B0C  C05A  F058         	movff	color_data_collection@m,color_display@m
  4589  004B10  C05B  F059         	movff	color_data_collection@m+1,color_display@m+1
  4590  004B14  EC6C  F02A         	call	_color_display	;wreg free
  4591  004B18                     
  4592                           ;color.c: 344:         LED_R();
  4593  004B18  ECC5  F02D         	call	_LED_R	;wreg free
  4594  004B1C                     
  4595                           ;color.c: 345:         _delay((unsigned long)((100)*(64000000/4000.0)));
  4596  004B1C  0E09               	movlw	9
  4597  004B1E  6E5D               	movwf	(??_color_data_collection+1)^0,c
  4598  004B20  0E1E               	movlw	30
  4599  004B22  6E5C               	movwf	??_color_data_collection^0,c
  4600  004B24  0EE4               	movlw	228
  4601  004B26                     u5997:
  4602  004B26  2EE8               	decfsz	wreg,f,c
  4603  004B28  D7FE               	bra	u5997
  4604  004B2A  2E5C               	decfsz	??_color_data_collection^0,f,c
  4605  004B2C  D7FC               	bra	u5997
  4606  004B2E  2E5D               	decfsz	(??_color_data_collection+1)^0,f,c
  4607  004B30  D7FA               	bra	u5997
  4608  004B32  D000               	nop2	
  4609  004B34                     
  4610                           ;color.c: 346:         read_color(m);
  4611  004B34  C05A  F00C         	movff	color_data_collection@m,read_color@m
  4612  004B38  C05B  F00D         	movff	color_data_collection@m+1,read_color@m+1
  4613  004B3C  ECD5  F02A         	call	_read_color	;wreg free
  4614                           
  4615                           ;color.c: 347:         color_display(m);
  4616  004B40  C05A  F058         	movff	color_data_collection@m,color_display@m
  4617  004B44  C05B  F059         	movff	color_data_collection@m+1,color_display@m+1
  4618  004B48  EC6C  F02A         	call	_color_display	;wreg free
  4619  004B4C                     
  4620                           ;color.c: 349:         LED_G();
  4621  004B4C  ECE5  F02D         	call	_LED_G	;wreg free
  4622  004B50                     
  4623                           ;color.c: 350:         _delay((unsigned long)((100)*(64000000/4000.0)));
  4624  004B50  0E09               	movlw	9
  4625  004B52  6E5D               	movwf	(??_color_data_collection+1)^0,c
  4626  004B54  0E1E               	movlw	30
  4627  004B56  6E5C               	movwf	??_color_data_collection^0,c
  4628  004B58  0EE4               	movlw	228
  4629  004B5A                     u6007:
  4630  004B5A  2EE8               	decfsz	wreg,f,c
  4631  004B5C  D7FE               	bra	u6007
  4632  004B5E  2E5C               	decfsz	??_color_data_collection^0,f,c
  4633  004B60  D7FC               	bra	u6007
  4634  004B62  2E5D               	decfsz	(??_color_data_collection+1)^0,f,c
  4635  004B64  D7FA               	bra	u6007
  4636  004B66  D000               	nop2	
  4637  004B68                     
  4638                           ;color.c: 351:         read_color(m);
  4639  004B68  C05A  F00C         	movff	color_data_collection@m,read_color@m
  4640  004B6C  C05B  F00D         	movff	color_data_collection@m+1,read_color@m+1
  4641  004B70  ECD5  F02A         	call	_read_color	;wreg free
  4642  004B74                     
  4643                           ;color.c: 352:         color_display(m);
  4644  004B74  C05A  F058         	movff	color_data_collection@m,color_display@m
  4645  004B78  C05B  F059         	movff	color_data_collection@m+1,color_display@m+1
  4646  004B7C  EC6C  F02A         	call	_color_display	;wreg free
  4647  004B80                     
  4648                           ;color.c: 354:         LED_B();
  4649  004B80  ECF5  F02D         	call	_LED_B	;wreg free
  4650  004B84                     
  4651                           ;color.c: 355:         _delay((unsigned long)((100)*(64000000/4000.0)));
  4652  004B84  0E09               	movlw	9
  4653  004B86  6E5D               	movwf	(??_color_data_collection+1)^0,c
  4654  004B88  0E1E               	movlw	30
  4655  004B8A  6E5C               	movwf	??_color_data_collection^0,c
  4656  004B8C  0EE4               	movlw	228
  4657  004B8E                     u6017:
  4658  004B8E  2EE8               	decfsz	wreg,f,c
  4659  004B90  D7FE               	bra	u6017
  4660  004B92  2E5C               	decfsz	??_color_data_collection^0,f,c
  4661  004B94  D7FC               	bra	u6017
  4662  004B96  2E5D               	decfsz	(??_color_data_collection+1)^0,f,c
  4663  004B98  D7FA               	bra	u6017
  4664  004B9A  D000               	nop2	
  4665                           
  4666                           ;color.c: 356:         read_color(m);
  4667  004B9C  C05A  F00C         	movff	color_data_collection@m,read_color@m
  4668  004BA0  C05B  F00D         	movff	color_data_collection@m+1,read_color@m+1
  4669  004BA4  ECD5  F02A         	call	_read_color	;wreg free
  4670  004BA8                     
  4671                           ;color.c: 357:         color_display(m);
  4672  004BA8  C05A  F058         	movff	color_data_collection@m,color_display@m
  4673  004BAC  C05B  F059         	movff	color_data_collection@m+1,color_display@m+1
  4674  004BB0  EC6C  F02A         	call	_color_display	;wreg free
  4675  004BB4                     
  4676                           ;color.c: 358:     }
  4677  004BB4  0100               	movlb	0	; () banked
  4678  004BB6  4BDE               	infsnz	color_data_collection@i& (0+255),f,b
  4679  004BB8  2BDF               	incf	(color_data_collection@i+1)& (0+255),f,b
  4680  004BBA                     
  4681                           ; BSR set to: 0
  4682  004BBA  BFDF               	btfsc	(color_data_collection@i+1)& (0+255),7,b
  4683  004BBC  EFE8  F025         	goto	u5311
  4684  004BC0  51DF               	movf	(color_data_collection@i+1)& (0+255),w,b
  4685  004BC2  E108               	bnz	u5310
  4686  004BC4  05DE               	decf	color_data_collection@i& (0+255),w,b
  4687  004BC6  A0D8               	btfss	status,0,c
  4688  004BC8  EFE8  F025         	goto	u5311
  4689  004BCC  EFEA  F025         	goto	u5310
  4690  004BD0                     u5311:
  4691  004BD0  EF72  F025         	goto	l4832
  4692  004BD4                     u5310:
  4693  004BD4                     
  4694                           ; BSR set to: 0
  4695                           ;color.c: 359:     color_predict(1);
  4696  004BD4  0E01               	movlw	1
  4697  004BD6  EC72  F02D         	call	_color_predict
  4698  004BDA                     
  4699                           ;color.c: 360:     LED_C();
  4700  004BDA  EC05  F02E         	call	_LED_C	;wreg free
  4701  004BDE  0012               	return		;funcret
  4702  004BE0                     __end_of_color_data_collection:
  4703                           	callstack 0
  4704                           
  4705 ;; *************** function _read_color *****************
  4706 ;; Defined at:
  4707 ;;		line 166 in file "color.c"
  4708 ;; Parameters:    Size  Location     Type
  4709 ;;  m               2   11[COMRAM] PTR struct color_rgb
  4710 ;;		 -> main@rgb(8), 
  4711 ;; Auto vars:     Size  Location     Type
  4712 ;;		None
  4713 ;; Return value:  Size  Location     Type
  4714 ;;                  1    wreg      void 
  4715 ;; Registers used:
  4716 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4717 ;; Tracked objects:
  4718 ;;		On entry : 0/0
  4719 ;;		On exit  : 0/0
  4720 ;;		Unchanged: 0/0
  4721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4722 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4723 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4724 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4725 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4726 ;;Total ram usage:        2 bytes
  4727 ;; Hardware stack levels used: 1
  4728 ;; Hardware stack levels required when called: 4
  4729 ;; This function calls:
  4730 ;;		_color_read_Blue
  4731 ;;		_color_read_Clear
  4732 ;;		_color_read_Green
  4733 ;;		_color_read_Red
  4734 ;; This function is called by:
  4735 ;;		_detect_color
  4736 ;;		_color_data_collection
  4737 ;;		_test_function
  4738 ;; This function uses a non-reentrant model
  4739 ;;
  4740                           
  4741                           	psect	text10
  4742  0055AA                     __ptext10:
  4743                           	callstack 0
  4744  0055AA                     _read_color:
  4745                           	callstack 24
  4746  0055AA                     
  4747                           ;color.c: 166: void read_color (struct color_rgb *m);color.c: 167: {;color.c: 168:     m
      +                          ->R = color_read_Red();
  4748  0055AA  EC2D  F02B         	call	_color_read_Red	;wreg free
  4749  0055AE  C00C  FFD9         	movff	read_color@m,fsr2l
  4750  0055B2  C00D  FFDA         	movff	read_color@m+1,fsr2h
  4751  0055B6  C005  FFDE         	movff	?_color_read_Red,postinc2
  4752  0055BA  C006  FFDD         	movff	?_color_read_Red+1,postdec2
  4753                           
  4754                           ;color.c: 169:     m->B = color_read_Blue();
  4755  0055BE  EC7D  F02B         	call	_color_read_Blue	;wreg free
  4756  0055C2  EE20 F004          	lfsr	2,4
  4757  0055C6  500C               	movf	read_color@m^0,w,c
  4758  0055C8  26D9               	addwf	fsr2l,f,c
  4759  0055CA  500D               	movf	(read_color@m+1)^0,w,c
  4760  0055CC  22DA               	addwfc	fsr2h,f,c
  4761  0055CE  C005  FFDE         	movff	?_color_read_Blue,postinc2
  4762  0055D2  C006  FFDD         	movff	?_color_read_Blue+1,postdec2
  4763                           
  4764                           ;color.c: 170:     m->G = color_read_Green();
  4765  0055D6  EC55  F02B         	call	_color_read_Green	;wreg free
  4766  0055DA  EE20 F002          	lfsr	2,2
  4767  0055DE  500C               	movf	read_color@m^0,w,c
  4768  0055E0  26D9               	addwf	fsr2l,f,c
  4769  0055E2  500D               	movf	(read_color@m+1)^0,w,c
  4770  0055E4  22DA               	addwfc	fsr2h,f,c
  4771  0055E6  C005  FFDE         	movff	?_color_read_Green,postinc2
  4772  0055EA  C006  FFDD         	movff	?_color_read_Green+1,postdec2
  4773                           
  4774                           ;color.c: 171:     m->C = color_read_Clear();
  4775  0055EE  ECA5  F02B         	call	_color_read_Clear	;wreg free
  4776  0055F2  EE20 F006          	lfsr	2,6
  4777  0055F6  500C               	movf	read_color@m^0,w,c
  4778  0055F8  26D9               	addwf	fsr2l,f,c
  4779  0055FA  500D               	movf	(read_color@m+1)^0,w,c
  4780  0055FC  22DA               	addwfc	fsr2h,f,c
  4781  0055FE  C005  FFDE         	movff	?_color_read_Clear,postinc2
  4782  005602  C006  FFDD         	movff	?_color_read_Clear+1,postdec2
  4783  005606  0012               	return		;funcret
  4784  005608                     __end_of_read_color:
  4785                           	callstack 0
  4786                           
  4787 ;; *************** function _color_predict *****************
  4788 ;; Defined at:
  4789 ;;		line 299 in file "color.c"
  4790 ;; Parameters:    Size  Location     Type
  4791 ;;  color           1    wreg     unsigned char 
  4792 ;; Auto vars:     Size  Location     Type
  4793 ;;  color           1  125[BANK0 ] unsigned char 
  4794 ;;  buf           100   25[BANK0 ] unsigned char [100]
  4795 ;; Return value:  Size  Location     Type
  4796 ;;                  1    wreg      void 
  4797 ;; Registers used:
  4798 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4799 ;; Tracked objects:
  4800 ;;		On entry : 0/0
  4801 ;;		On exit  : 0/0
  4802 ;;		Unchanged: 0/0
  4803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4804 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4805 ;;      Locals:         0     101       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4806 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4807 ;;      Totals:         0     101       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4808 ;;Total ram usage:      101 bytes
  4809 ;; Hardware stack levels used: 1
  4810 ;; Hardware stack levels required when called: 9
  4811 ;; This function calls:
  4812 ;;		_sendStringSerial4
  4813 ;;		_sprintf
  4814 ;; This function is called by:
  4815 ;;		_color_data_collection
  4816 ;;		_test_function
  4817 ;; This function uses a non-reentrant model
  4818 ;;
  4819                           
  4820                           	psect	text11
  4821  005AE4                     __ptext11:
  4822                           	callstack 0
  4823  005AE4                     _color_predict:
  4824                           	callstack 20
  4825                           
  4826                           ;incstack = 0
  4827                           ;color_predict@color stored from wreg
  4828  005AE4  0100               	movlb	0	; () banked
  4829  005AE6  6FDD               	movwf	color_predict@color& (0+255),b
  4830  005AE8                     
  4831                           ;color.c: 299: void color_predict(unsigned char color);color.c: 300: {;color.c: 301:    
      +                           char buf[100];;color.c: 302:     sprintf(buf,"\t%d\r\n", color);
  4832  005AE8  0E79               	movlw	low color_predict@buf
  4833  005AEA  0100               	movlb	0	; () banked
  4834  005AEC  6F60               	movwf	sprintf@s& (0+255),b
  4835  005AEE  0E00               	movlw	high color_predict@buf
  4836  005AF0  6F61               	movwf	(sprintf@s+1)& (0+255),b
  4837  005AF2  0E0D               	movlw	low (STR_1+8)
  4838  005AF4  6F62               	movwf	sprintf@fmt& (0+255),b
  4839  005AF6  0E0E               	movlw	high (STR_1+8)
  4840  005AF8  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
  4841  005AFA  C0DD  F064         	movff	color_predict@color,?_sprintf+4
  4842  005AFE  6B65               	clrf	(?_sprintf+5)& (0+255),b
  4843  005B00  EC04  F02B         	call	_sprintf	;wreg free
  4844  005B04                     
  4845                           ;color.c: 303:     sendStringSerial4(buf);
  4846  005B04  0E79               	movlw	low color_predict@buf
  4847  005B06  6E02               	movwf	sendStringSerial4@string^0,c
  4848  005B08  0E00               	movlw	high color_predict@buf
  4849  005B0A  6E03               	movwf	(sendStringSerial4@string+1)^0,c
  4850  005B0C  EC5A  F02D         	call	_sendStringSerial4	;wreg free
  4851  005B10  0012               	return		;funcret
  4852  005B12                     __end_of_color_predict:
  4853                           	callstack 0
  4854                           
  4855 ;; *************** function _color_display *****************
  4856 ;; Defined at:
  4857 ;;		line 291 in file "color.c"
  4858 ;; Parameters:    Size  Location     Type
  4859 ;;  m               2   87[COMRAM] PTR struct color_rgb
  4860 ;;		 -> main@rgb(8), 
  4861 ;; Auto vars:     Size  Location     Type
  4862 ;;  buf           100   25[BANK0 ] unsigned char [100]
  4863 ;; Return value:  Size  Location     Type
  4864 ;;                  1    wreg      void 
  4865 ;; Registers used:
  4866 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4867 ;; Tracked objects:
  4868 ;;		On entry : 0/0
  4869 ;;		On exit  : 0/0
  4870 ;;		Unchanged: 0/0
  4871 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4872 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4873 ;;      Locals:         0     100       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4874 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4875 ;;      Totals:         2     100       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4876 ;;Total ram usage:      102 bytes
  4877 ;; Hardware stack levels used: 1
  4878 ;; Hardware stack levels required when called: 9
  4879 ;; This function calls:
  4880 ;;		_sendStringSerial4
  4881 ;;		_sprintf
  4882 ;; This function is called by:
  4883 ;;		_color_data_collection
  4884 ;;		_test_function
  4885 ;; This function uses a non-reentrant model
  4886 ;;
  4887                           
  4888                           	psect	text12
  4889  0054D8                     __ptext12:
  4890                           	callstack 0
  4891  0054D8                     _color_display:
  4892                           	callstack 20
  4893  0054D8                     
  4894                           ;color.c: 291: void color_display(struct color_rgb *m);color.c: 292: {;color.c: 293:    
      +                           char buf[100];;color.c: 294:     sprintf(buf,"%d\t%d\t%d\t%d\r\n", m->R, m->G, m->B, m-
      +                          >C);
  4895  0054D8  0E79               	movlw	low color_display@buf
  4896  0054DA  0100               	movlb	0	; () banked
  4897  0054DC  6F60               	movwf	sprintf@s& (0+255),b
  4898  0054DE  0E00               	movlw	high color_display@buf
  4899  0054E0  6F61               	movwf	(sprintf@s+1)& (0+255),b
  4900  0054E2  0E05               	movlw	low STR_1
  4901  0054E4  6F62               	movwf	sprintf@fmt& (0+255),b
  4902  0054E6  0E0E               	movlw	high STR_1
  4903  0054E8  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
  4904  0054EA  C058  FFD9         	movff	color_display@m,fsr2l
  4905  0054EE  C059  FFDA         	movff	color_display@m+1,fsr2h
  4906  0054F2  CFDE F064          	movff	postinc2,?_sprintf+4
  4907  0054F6  CFDD F065          	movff	postdec2,?_sprintf+5
  4908  0054FA  EE20 F002          	lfsr	2,2
  4909  0054FE  5058               	movf	color_display@m^0,w,c
  4910  005500  26D9               	addwf	fsr2l,f,c
  4911  005502  5059               	movf	(color_display@m+1)^0,w,c
  4912  005504  22DA               	addwfc	fsr2h,f,c
  4913  005506  CFDE F066          	movff	postinc2,?_sprintf+6
  4914  00550A  CFDD F067          	movff	postdec2,?_sprintf+7
  4915  00550E  EE20 F004          	lfsr	2,4
  4916  005512  5058               	movf	color_display@m^0,w,c
  4917  005514  26D9               	addwf	fsr2l,f,c
  4918  005516  5059               	movf	(color_display@m+1)^0,w,c
  4919  005518  22DA               	addwfc	fsr2h,f,c
  4920  00551A  CFDE F068          	movff	postinc2,?_sprintf+8
  4921  00551E  CFDD F069          	movff	postdec2,?_sprintf+9
  4922  005522  EE20 F006          	lfsr	2,6
  4923  005526  5058               	movf	color_display@m^0,w,c
  4924  005528  26D9               	addwf	fsr2l,f,c
  4925  00552A  5059               	movf	(color_display@m+1)^0,w,c
  4926  00552C  22DA               	addwfc	fsr2h,f,c
  4927  00552E  CFDE F06A          	movff	postinc2,?_sprintf+10
  4928  005532  CFDD F06B          	movff	postdec2,?_sprintf+11
  4929  005536  EC04  F02B         	call	_sprintf	;wreg free
  4930  00553A                     
  4931                           ;color.c: 295:     sendStringSerial4(buf);
  4932  00553A  0E79               	movlw	low color_display@buf
  4933  00553C  6E02               	movwf	sendStringSerial4@string^0,c
  4934  00553E  0E00               	movlw	high color_display@buf
  4935  005540  6E03               	movwf	(sendStringSerial4@string+1)^0,c
  4936  005542  EC5A  F02D         	call	_sendStringSerial4	;wreg free
  4937  005546  0012               	return		;funcret
  4938  005548                     __end_of_color_display:
  4939                           	callstack 0
  4940                           
  4941 ;; *************** function _sprintf *****************
  4942 ;; Defined at:
  4943 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\nf_sprintf.c"
  4944 ;; Parameters:    Size  Location     Type
  4945 ;;  s               2    0[BANK0 ] PTR unsigned char 
  4946 ;;		 -> color_predict@buf(100), color_display@buf(100), 
  4947 ;;  fmt             2    2[BANK0 ] PTR const unsigned char 
  4948 ;;		 -> STR_2(6), STR_1(14), 
  4949 ;; Auto vars:     Size  Location     Type
  4950 ;;  f              11   14[BANK0 ] struct _IO_FILE
  4951 ;;  ap              2   12[BANK0 ] PTR void [1]
  4952 ;;		 -> ?_sprintf(2), 
  4953 ;;  ret             2    0        int 
  4954 ;; Return value:  Size  Location     Type
  4955 ;;                  2    0[BANK0 ] int 
  4956 ;; Registers used:
  4957 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4958 ;; Tracked objects:
  4959 ;;		On entry : 0/0
  4960 ;;		On exit  : 0/0
  4961 ;;		Unchanged: 0/0
  4962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4963 ;;      Params:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4964 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4965 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4966 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4967 ;;Total ram usage:       25 bytes
  4968 ;; Hardware stack levels used: 1
  4969 ;; Hardware stack levels required when called: 8
  4970 ;; This function calls:
  4971 ;;		_vfprintf
  4972 ;; This function is called by:
  4973 ;;		_color_display
  4974 ;;		_color_predict
  4975 ;; This function uses a non-reentrant model
  4976 ;;
  4977                           
  4978                           	psect	text13
  4979  005608                     __ptext13:
  4980                           	callstack 0
  4981  005608                     _sprintf:
  4982                           	callstack 20
  4983  005608  0E64               	movlw	low (?_sprintf+4)
  4984  00560A  0100               	movlb	0	; () banked
  4985  00560C  6F6C               	movwf	sprintf@ap& (0+255),b
  4986  00560E  0E00               	movlw	high (?_sprintf+4)
  4987  005610  6F6D               	movwf	(sprintf@ap+1)& (0+255),b
  4988  005612  C060  F06E         	movff	sprintf@s,sprintf@f
  4989  005616  C061  F06F         	movff	sprintf@s+1,sprintf@f+1
  4990  00561A                     
  4991                           ; BSR set to: 0
  4992  00561A  0E00               	movlw	0
  4993  00561C  6F72               	movwf	(sprintf@f+4)& (0+255),b
  4994  00561E  0E00               	movlw	0
  4995  005620  6F71               	movwf	(sprintf@f+3)& (0+255),b
  4996  005622                     
  4997                           ; BSR set to: 0
  4998  005622  0E00               	movlw	0
  4999  005624  6F78               	movwf	(sprintf@f+10)& (0+255),b
  5000  005626  0E00               	movlw	0
  5001  005628  6F77               	movwf	(sprintf@f+9)& (0+255),b
  5002  00562A                     
  5003                           ; BSR set to: 0
  5004  00562A  0E6E               	movlw	low sprintf@f
  5005  00562C  6E50               	movwf	vfprintf@fp^0,c
  5006  00562E  0E00               	movlw	high sprintf@f
  5007  005630  6E51               	movwf	(vfprintf@fp+1)^0,c
  5008  005632  C062  F052         	movff	sprintf@fmt,vfprintf@fmt
  5009  005636  C063  F053         	movff	sprintf@fmt+1,vfprintf@fmt+1
  5010  00563A  0E6C               	movlw	low sprintf@ap
  5011  00563C  6E54               	movwf	vfprintf@ap^0,c
  5012  00563E  0E00               	movlw	high sprintf@ap
  5013  005640  6E55               	movwf	(vfprintf@ap+1)^0,c
  5014  005642  ECA4  F02A         	call	_vfprintf	;wreg free
  5015  005646  0100               	movlb	0	; () banked
  5016  005648  5171               	movf	(sprintf@f+3)& (0+255),w,b
  5017  00564A  2560               	addwf	sprintf@s& (0+255),w,b
  5018  00564C  6ED9               	movwf	fsr2l,c
  5019  00564E  5172               	movf	(sprintf@f+4)& (0+255),w,b
  5020  005650  2161               	addwfc	(sprintf@s+1)& (0+255),w,b
  5021  005652  6EDA               	movwf	fsr2h,c
  5022  005654  0E00               	movlw	0
  5023  005656  6EDF               	movwf	indf2,c
  5024  005658                     
  5025                           ; BSR set to: 0
  5026  005658  0012               	return		;funcret
  5027  00565A                     __end_of_sprintf:
  5028                           	callstack 0
  5029                           
  5030 ;; *************** function _vfprintf *****************
  5031 ;; Defined at:
  5032 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c"
  5033 ;; Parameters:    Size  Location     Type
  5034 ;;  fp              2   79[COMRAM] PTR struct _IO_FILE
  5035 ;;		 -> sprintf@f(11), 
  5036 ;;  fmt             2   81[COMRAM] PTR const unsigned char 
  5037 ;;		 -> STR_2(6), STR_1(14), 
  5038 ;;  ap              2   83[COMRAM] PTR PTR void 
  5039 ;;		 -> sprintf@ap(2), 
  5040 ;; Auto vars:     Size  Location     Type
  5041 ;;  cfmt            2   85[COMRAM] PTR unsigned char 
  5042 ;;		 -> STR_2(6), STR_1(14), 
  5043 ;; Return value:  Size  Location     Type
  5044 ;;                  2   79[COMRAM] int 
  5045 ;; Registers used:
  5046 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5047 ;; Tracked objects:
  5048 ;;		On entry : 0/0
  5049 ;;		On exit  : 0/0
  5050 ;;		Unchanged: 0/0
  5051 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5052 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5053 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5054 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5055 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5056 ;;Total ram usage:        8 bytes
  5057 ;; Hardware stack levels used: 1
  5058 ;; Hardware stack levels required when called: 7
  5059 ;; This function calls:
  5060 ;;		_vfpfcnvrt
  5061 ;; This function is called by:
  5062 ;;		_sprintf
  5063 ;; This function uses a non-reentrant model
  5064 ;;
  5065                           
  5066                           	psect	text14
  5067  005548                     __ptext14:
  5068                           	callstack 0
  5069  005548                     _vfprintf:
  5070                           	callstack 20
  5071  005548                     
  5072                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.35\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  5073  005548  C052  F056         	movff	vfprintf@fmt,vfprintf@cfmt
  5074  00554C  C053  F057         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  5075  005550                     
  5076                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  5077  005550  0E00               	movlw	0
  5078  005552  0100               	movlb	0	; () banked
  5079  005554  6FF5               	movwf	(_nout+1)& (0+255),b
  5080  005556  0E00               	movlw	0
  5081  005558  6FF4               	movwf	_nout& (0+255),b
  5082                           
  5083                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  5084  00555A  EFC2  F02A         	goto	l4118
  5085  00555E                     l4116:
  5086                           
  5087                           ; BSR set to: 0
  5088                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  5089  00555E  C050  F040         	movff	vfprintf@fp,vfpfcnvrt@fp
  5090  005562  C051  F041         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  5091  005566  0E56               	movlw	low vfprintf@cfmt
  5092  005568  6E42               	movwf	vfpfcnvrt@fmt^0,c
  5093  00556A  0E00               	movlw	high vfprintf@cfmt
  5094  00556C  6E43               	movwf	(vfpfcnvrt@fmt+1)^0,c
  5095  00556E  C054  F044         	movff	vfprintf@ap,vfpfcnvrt@ap
  5096  005572  C055  F045         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  5097  005576  EC16  F01E         	call	_vfpfcnvrt	;wreg free
  5098  00557A  5040               	movf	?_vfpfcnvrt^0,w,c
  5099  00557C  0100               	movlb	0	; () banked
  5100  00557E  27F4               	addwf	_nout& (0+255),f,b
  5101  005580  5041               	movf	(?_vfpfcnvrt+1)^0,w,c
  5102  005582  23F5               	addwfc	(_nout+1)& (0+255),f,b
  5103  005584                     l4118:
  5104                           
  5105                           ; BSR set to: 0
  5106                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  5107  005584  C056  FFF6         	movff	vfprintf@cfmt,tblptrl
  5108  005588  C057  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  5109  00558C                     	if	0	;tblptru may be non-zero
  5110  00558C                     	endif
  5111  00558C                     	if	0	;tblptru may be non-zero
  5112  00558C                     	endif
  5113  00558C  0008               	tblrd		*
  5114  00558E  50F5               	movf	tablat,w,c
  5115  005590  0900               	iorlw	0
  5116  005592  A4D8               	btfss	status,2,c
  5117  005594  EFCE  F02A         	goto	u4191
  5118  005598  EFD0  F02A         	goto	u4190
  5119  00559C                     u4191:
  5120  00559C  EFAF  F02A         	goto	l4116
  5121  0055A0                     u4190:
  5122  0055A0                     
  5123                           ; BSR set to: 0
  5124                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  5125  0055A0  C0F4  F050         	movff	_nout,?_vfprintf
  5126  0055A4  C0F5  F051         	movff	_nout+1,?_vfprintf+1
  5127  0055A8                     
  5128                           ; BSR set to: 0
  5129  0055A8  0012               	return		;funcret
  5130  0055AA                     __end_of_vfprintf:
  5131                           	callstack 0
  5132                           
  5133 ;; *************** function _vfpfcnvrt *****************
  5134 ;; Defined at:
  5135 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c"
  5136 ;; Parameters:    Size  Location     Type
  5137 ;;  fp              2   63[COMRAM] PTR struct _IO_FILE
  5138 ;;		 -> sprintf@f(11), 
  5139 ;;  fmt             2   65[COMRAM] PTR PTR unsigned char 
  5140 ;;		 -> vfprintf@cfmt(2), 
  5141 ;;  ap              2   67[COMRAM] PTR PTR void 
  5142 ;;		 -> sprintf@ap(2), 
  5143 ;; Auto vars:     Size  Location     Type
  5144 ;;  ll              8   71[COMRAM] long long 
  5145 ;;  llu             8    0        unsigned long long 
  5146 ;;  f               4    0        unsigned long long 
  5147 ;;  vp              3    0        PTR void 
  5148 ;;  ct              3    0        unsigned char [3]
  5149 ;;  cp              3    0        PTR unsigned char 
  5150 ;;  i               2    0        int 
  5151 ;;  done            2    0        int 
  5152 ;;  c               1    0        unsigned char 
  5153 ;; Return value:  Size  Location     Type
  5154 ;;                  2   63[COMRAM] int 
  5155 ;; Registers used:
  5156 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5157 ;; Tracked objects:
  5158 ;;		On entry : 0/0
  5159 ;;		On exit  : 0/0
  5160 ;;		Unchanged: 0/0
  5161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5162 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5163 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5164 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5165 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5166 ;;Total ram usage:       16 bytes
  5167 ;; Hardware stack levels used: 1
  5168 ;; Hardware stack levels required when called: 6
  5169 ;; This function calls:
  5170 ;;		_dtoa
  5171 ;;		_fputc
  5172 ;; This function is called by:
  5173 ;;		_vfprintf
  5174 ;; This function uses a non-reentrant model
  5175 ;;
  5176                           
  5177                           	psect	text15
  5178  003C2C                     __ptext15:
  5179                           	callstack 0
  5180  003C2C                     _vfpfcnvrt:
  5181                           	callstack 20
  5182  003C2C                     
  5183                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.35\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.35\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.35\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          5\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  5184  003C2C  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5185  003C30  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5186  003C34  CFDE FFF6          	movff	postinc2,tblptrl
  5187  003C38  CFDD FFF7          	movff	postdec2,tblptrh
  5188  003C3C                     	if	0	;tblptru may be non-zero
  5189  003C3C                     	endif
  5190  003C3C                     	if	0	;tblptru may be non-zero
  5191  003C3C                     	endif
  5192  003C3C  0008               	tblrd		*
  5193  003C3E  50F5               	movf	tablat,w,c
  5194  003C40  0A25               	xorlw	37
  5195  003C42  A4D8               	btfss	status,2,c
  5196  003C44  EF26  F01E         	goto	u3831
  5197  003C48  EF28  F01E         	goto	u3830
  5198  003C4C                     u3831:
  5199  003C4C  EFD4  F01E         	goto	l3882
  5200  003C50                     u3830:
  5201  003C50                     
  5202                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  5203  003C50  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5204  003C54  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5205  003C58  2ADE               	incf	postinc2,f,c
  5206  003C5A  0E00               	movlw	0
  5207  003C5C  22DD               	addwfc	postdec2,f,c
  5208  003C5E                     
  5209                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  5210  003C5E  0E00               	movlw	0
  5211  003C60  0100               	movlb	0	; () banked
  5212  003C62  6FF7               	movwf	(_width+1)& (0+255),b
  5213  003C64  0E00               	movlw	0
  5214  003C66  6FF6               	movwf	_width& (0+255),b
  5215  003C68  C0F6  F0FA         	movff	_width,_flags
  5216  003C6C  C0F7  F0FB         	movff	_width+1,_flags+1
  5217  003C70                     
  5218                           ; BSR set to: 0
  5219                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  5220  003C70  69F8               	setf	_prec& (0+255),b
  5221  003C72  69F9               	setf	(_prec+1)& (0+255),b
  5222  003C74                     
  5223                           ; BSR set to: 0
  5224                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  5225  003C74  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5226  003C78  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5227  003C7C  CFDE FFF6          	movff	postinc2,tblptrl
  5228  003C80  CFDD FFF7          	movff	postdec2,tblptrh
  5229  003C84                     	if	0	;tblptru may be non-zero
  5230  003C84                     	endif
  5231  003C84                     	if	0	;tblptru may be non-zero
  5232  003C84                     	endif
  5233  003C84  0008               	tblrd		*
  5234  003C86  50F5               	movf	tablat,w,c
  5235  003C88  0A64               	xorlw	100
  5236  003C8A  B4D8               	btfsc	status,2,c
  5237  003C8C  EF4A  F01E         	goto	u3841
  5238  003C90  EF4C  F01E         	goto	u3840
  5239  003C94                     u3841:
  5240  003C94  EF5E  F01E         	goto	l3860
  5241  003C98                     u3840:
  5242  003C98                     
  5243                           ; BSR set to: 0
  5244  003C98  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5245  003C9C  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5246  003CA0  CFDE FFF6          	movff	postinc2,tblptrl
  5247  003CA4  CFDD FFF7          	movff	postdec2,tblptrh
  5248  003CA8                     	if	0	;tblptru may be non-zero
  5249  003CA8                     	endif
  5250  003CA8                     	if	0	;tblptru may be non-zero
  5251  003CA8                     	endif
  5252  003CA8  0008               	tblrd		*
  5253  003CAA  50F5               	movf	tablat,w,c
  5254  003CAC  0A69               	xorlw	105
  5255  003CAE  A4D8               	btfss	status,2,c
  5256  003CB0  EF5C  F01E         	goto	u3851
  5257  003CB4  EF5E  F01E         	goto	u3850
  5258  003CB8                     u3851:
  5259  003CB8  EF9E  F01E         	goto	l3866
  5260  003CBC                     u3850:
  5261  003CBC                     l3860:
  5262                           
  5263                           ; BSR set to: 0
  5264                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  5265  003CBC  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5266  003CC0  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5267  003CC4  2ADE               	incf	postinc2,f,c
  5268  003CC6  0E00               	movlw	0
  5269  003CC8  22DD               	addwfc	postdec2,f,c
  5270                           
  5271                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  5272  003CCA  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5273  003CCE  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5274  003CD2  CFDF F046          	movff	indf2,??_vfpfcnvrt
  5275  003CD6  0E02               	movlw	2
  5276  003CD8  26DE               	addwf	postinc2,f,c
  5277  003CDA  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  5278  003CDE  0E00               	movlw	0
  5279  003CE0  22DD               	addwfc	postdec2,f,c
  5280  003CE2  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5281  003CE6  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5282  003CEA  CFDE F048          	movff	postinc2,vfpfcnvrt@ll
  5283  003CEE  CFDD F049          	movff	postdec2,vfpfcnvrt@ll+1
  5284  003CF2  0E00               	movlw	0
  5285  003CF4  BE49               	btfsc	(vfpfcnvrt@ll+1)^0,7,c
  5286  003CF6  0EFF               	movlw	-1
  5287  003CF8  6E4A               	movwf	(vfpfcnvrt@ll+2)^0,c
  5288  003CFA  6E4B               	movwf	(vfpfcnvrt@ll+3)^0,c
  5289  003CFC  6E4C               	movwf	(vfpfcnvrt@ll+4)^0,c
  5290  003CFE  6E4D               	movwf	(vfpfcnvrt@ll+5)^0,c
  5291  003D00  6E4E               	movwf	(vfpfcnvrt@ll+6)^0,c
  5292  003D02  6E4F               	movwf	(vfpfcnvrt@ll+7)^0,c
  5293  003D04                     
  5294                           ; BSR set to: 0
  5295                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  5296  003D04  C040  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  5297  003D08  C041  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  5298  003D0C  C048  F01E         	movff	vfpfcnvrt@ll,dtoa@d
  5299  003D10  C049  F01F         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  5300  003D14  C04A  F020         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  5301  003D18  C04B  F021         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  5302  003D1C  C04C  F022         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  5303  003D20  C04D  F023         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  5304  003D24  C04E  F024         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  5305  003D28  C04F  F025         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  5306  003D2C  EC55  F018         	call	_dtoa	;wreg free
  5307  003D30  C01C  F040         	movff	?_dtoa,?_vfpfcnvrt
  5308  003D34  C01D  F041         	movff	?_dtoa+1,?_vfpfcnvrt+1
  5309  003D38  EFEF  F01E         	goto	l1360
  5310  003D3C                     l3866:
  5311                           
  5312                           ; BSR set to: 0
  5313                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  5314  003D3C  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5315  003D40  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5316  003D44  CFDE FFF6          	movff	postinc2,tblptrl
  5317  003D48  CFDD FFF7          	movff	postdec2,tblptrh
  5318  003D4C                     	if	0	;tblptru may be non-zero
  5319  003D4C                     	endif
  5320  003D4C                     	if	0	;tblptru may be non-zero
  5321  003D4C                     	endif
  5322  003D4C  0008               	tblrd		*
  5323  003D4E  50F5               	movf	tablat,w,c
  5324  003D50  0A25               	xorlw	37
  5325  003D52  A4D8               	btfss	status,2,c
  5326  003D54  EFAE  F01E         	goto	u3861
  5327  003D58  EFB0  F01E         	goto	u3860
  5328  003D5C                     u3861:
  5329  003D5C  EFC7  F01E         	goto	l3876
  5330  003D60                     u3860:
  5331  003D60                     
  5332                           ; BSR set to: 0
  5333                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  5334  003D60  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5335  003D64  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5336  003D68  2ADE               	incf	postinc2,f,c
  5337  003D6A  0E00               	movlw	0
  5338  003D6C  22DD               	addwfc	postdec2,f,c
  5339  003D6E                     
  5340                           ; BSR set to: 0
  5341                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  5342  003D6E  0E00               	movlw	0
  5343  003D70  6E02               	movwf	(fputc@c+1)^0,c
  5344  003D72  0E25               	movlw	37
  5345  003D74  6E01               	movwf	fputc@c^0,c
  5346  003D76  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
  5347  003D7A  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  5348  003D7E  EC43  F028         	call	_fputc	;wreg free
  5349  003D82                     l3872:
  5350                           
  5351                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  5352  003D82  0E00               	movlw	0
  5353  003D84  6E41               	movwf	(?_vfpfcnvrt+1)^0,c
  5354  003D86  0E01               	movlw	1
  5355  003D88  6E40               	movwf	?_vfpfcnvrt^0,c
  5356  003D8A  EFEF  F01E         	goto	l1360
  5357  003D8E                     l3876:
  5358                           
  5359                           ; BSR set to: 0
  5360                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  5361  003D8E  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5362  003D92  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5363  003D96  2ADE               	incf	postinc2,f,c
  5364  003D98  0E00               	movlw	0
  5365  003D9A  22DD               	addwfc	postdec2,f,c
  5366  003D9C                     
  5367                           ; BSR set to: 0
  5368                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  5369  003D9C  0E00               	movlw	0
  5370  003D9E  6E41               	movwf	(?_vfpfcnvrt+1)^0,c
  5371  003DA0  0E00               	movlw	0
  5372  003DA2  6E40               	movwf	?_vfpfcnvrt^0,c
  5373  003DA4  EFEF  F01E         	goto	l1360
  5374  003DA8                     l3882:
  5375                           
  5376                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  5377  003DA8  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5378  003DAC  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5379  003DB0  CFDE FFF6          	movff	postinc2,tblptrl
  5380  003DB4  CFDD FFF7          	movff	postdec2,tblptrh
  5381  003DB8                     	if	0	;tblptru may be non-zero
  5382  003DB8                     	endif
  5383  003DB8                     	if	0	;tblptru may be non-zero
  5384  003DB8                     	endif
  5385  003DB8  0008               	tblrd		*
  5386  003DBA  50F5               	movf	tablat,w,c
  5387  003DBC  6E01               	movwf	fputc@c^0,c
  5388  003DBE  6A02               	clrf	(fputc@c+1)^0,c
  5389  003DC0  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
  5390  003DC4  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  5391  003DC8  EC43  F028         	call	_fputc	;wreg free
  5392  003DCC                     
  5393                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  5394  003DCC  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5395  003DD0  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5396  003DD4  2ADE               	incf	postinc2,f,c
  5397  003DD6  0E00               	movlw	0
  5398  003DD8  22DD               	addwfc	postdec2,f,c
  5399  003DDA  EFC1  F01E         	goto	l3872
  5400  003DDE                     l1360:
  5401  003DDE  0012               	return		;funcret
  5402  003DE0                     __end_of_vfpfcnvrt:
  5403                           	callstack 0
  5404                           
  5405 ;; *************** function _dtoa *****************
  5406 ;; Defined at:
  5407 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c"
  5408 ;; Parameters:    Size  Location     Type
  5409 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  5410 ;;		 -> sprintf@f(11), 
  5411 ;;  d               8   29[COMRAM] long long 
  5412 ;; Auto vars:     Size  Location     Type
  5413 ;;  n               8   53[COMRAM] long long 
  5414 ;;  i               2   61[COMRAM] int 
  5415 ;;  s               2   51[COMRAM] int 
  5416 ;;  w               2   49[COMRAM] int 
  5417 ;;  p               2   47[COMRAM] int 
  5418 ;; Return value:  Size  Location     Type
  5419 ;;                  2   27[COMRAM] int 
  5420 ;; Registers used:
  5421 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5422 ;; Tracked objects:
  5423 ;;		On entry : 0/0
  5424 ;;		On exit  : 0/0
  5425 ;;		Unchanged: 0/0
  5426 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5427 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5428 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5429 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5430 ;;      Totals:        36       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5431 ;;Total ram usage:       36 bytes
  5432 ;; Hardware stack levels used: 1
  5433 ;; Hardware stack levels required when called: 5
  5434 ;; This function calls:
  5435 ;;		___aodiv
  5436 ;;		___aomod
  5437 ;;		_abs
  5438 ;;		_pad
  5439 ;; This function is called by:
  5440 ;;		_vfpfcnvrt
  5441 ;; This function uses a non-reentrant model
  5442 ;;
  5443                           
  5444                           	psect	text16
  5445  0030AA                     __ptext16:
  5446                           	callstack 0
  5447  0030AA                     _dtoa:
  5448                           	callstack 20
  5449  0030AA                     
  5450                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  5451  0030AA  C01E  F036         	movff	dtoa@d,dtoa@n
  5452  0030AE  C01F  F037         	movff	dtoa@d+1,dtoa@n+1
  5453  0030B2  C020  F038         	movff	dtoa@d+2,dtoa@n+2
  5454  0030B6  C021  F039         	movff	dtoa@d+3,dtoa@n+3
  5455  0030BA  C022  F03A         	movff	dtoa@d+4,dtoa@n+4
  5456  0030BE  C023  F03B         	movff	dtoa@d+5,dtoa@n+5
  5457  0030C2  C024  F03C         	movff	dtoa@d+6,dtoa@n+6
  5458  0030C6  C025  F03D         	movff	dtoa@d+7,dtoa@n+7
  5459  0030CA                     
  5460                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  5461  0030CA  BE3D               	btfsc	(dtoa@n+7)^0,7,c
  5462  0030CC  EF6A  F018         	goto	u3231
  5463  0030D0  EF6D  F018         	goto	u3230
  5464  0030D4                     u3231:
  5465  0030D4  0E01               	movlw	1
  5466  0030D6  EF6E  F018         	goto	u3240
  5467  0030DA                     u3230:
  5468  0030DA  0E00               	movlw	0
  5469  0030DC                     u3240:
  5470  0030DC  6E34               	movwf	dtoa@s^0,c
  5471  0030DE  6A35               	clrf	(dtoa@s+1)^0,c
  5472                           
  5473                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  5474  0030E0  5034               	movf	dtoa@s^0,w,c
  5475  0030E2  1035               	iorwf	(dtoa@s+1)^0,w,c
  5476  0030E4  B4D8               	btfsc	status,2,c
  5477  0030E6  EF77  F018         	goto	u3251
  5478  0030EA  EF79  F018         	goto	u3250
  5479  0030EE                     u3251:
  5480  0030EE  EF89  F018         	goto	l3572
  5481  0030F2                     u3250:
  5482  0030F2                     
  5483                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  5484  0030F2  1E3D               	comf	(dtoa@n+7)^0,f,c
  5485  0030F4  1E3C               	comf	(dtoa@n+6)^0,f,c
  5486  0030F6  1E3B               	comf	(dtoa@n+5)^0,f,c
  5487  0030F8  1E3A               	comf	(dtoa@n+4)^0,f,c
  5488  0030FA  1E39               	comf	(dtoa@n+3)^0,f,c
  5489  0030FC  1E38               	comf	(dtoa@n+2)^0,f,c
  5490  0030FE  1E37               	comf	(dtoa@n+1)^0,f,c
  5491  003100  6C36               	negf	dtoa@n^0,c
  5492  003102  0E00               	movlw	0
  5493  003104  2237               	addwfc	(dtoa@n+1)^0,f,c
  5494  003106  2238               	addwfc	(dtoa@n+2)^0,f,c
  5495  003108  2239               	addwfc	(dtoa@n+3)^0,f,c
  5496  00310A  223A               	addwfc	(dtoa@n+4)^0,f,c
  5497  00310C  223B               	addwfc	(dtoa@n+5)^0,f,c
  5498  00310E  223C               	addwfc	(dtoa@n+6)^0,f,c
  5499  003110  223D               	addwfc	(dtoa@n+7)^0,f,c
  5500  003112                     l3572:
  5501                           
  5502                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  5503  003112  0100               	movlb	0	; () banked
  5504  003114  BFF9               	btfsc	(_prec+1)& (0+255),7,b
  5505  003116  EF8F  F018         	goto	u3261
  5506  00311A  EF91  F018         	goto	u3260
  5507  00311E                     u3261:
  5508  00311E  EF92  F018         	goto	l3576
  5509  003122                     u3260:
  5510  003122                     
  5511                           ; BSR set to: 0
  5512                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  5513  003122  93FA               	bcf	_flags& (0+255),1,b
  5514  003124                     l3576:
  5515                           
  5516                           ; BSR set to: 0
  5517                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  5518  003124  BFF9               	btfsc	(_prec+1)& (0+255),7,b
  5519  003126  EF9F  F018         	goto	u3270
  5520  00312A  51F9               	movf	(_prec+1)& (0+255),w,b
  5521  00312C  E106               	bnz	u3271
  5522  00312E  05F8               	decf	_prec& (0+255),w,b
  5523  003130  B0D8               	btfsc	status,0,c
  5524  003132  EF9D  F018         	goto	u3271
  5525  003136  EF9F  F018         	goto	u3270
  5526  00313A                     u3271:
  5527  00313A  EFA5  F018         	goto	l1333
  5528  00313E                     u3270:
  5529  00313E                     
  5530                           ; BSR set to: 0
  5531  00313E  0E00               	movlw	0
  5532  003140  6E31               	movwf	(dtoa@p+1)^0,c
  5533  003142  0E01               	movlw	1
  5534  003144  6E30               	movwf	dtoa@p^0,c
  5535  003146  EFA9  F018         	goto	l1335
  5536  00314A                     l1333:
  5537                           
  5538                           ; BSR set to: 0
  5539  00314A  C0F8  F030         	movff	_prec,dtoa@p
  5540  00314E  C0F9  F031         	movff	_prec+1,dtoa@p+1
  5541  003152                     l1335:
  5542                           
  5543                           ; BSR set to: 0
  5544                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  5545  003152  C0F6  F032         	movff	_width,dtoa@w
  5546  003156  C0F7  F033         	movff	_width+1,dtoa@w+1
  5547  00315A                     
  5548                           ; BSR set to: 0
  5549                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  5550  00315A  5034               	movf	dtoa@s^0,w,c
  5551  00315C  1035               	iorwf	(dtoa@s+1)^0,w,c
  5552  00315E  A4D8               	btfss	status,2,c
  5553  003160  EFB4  F018         	goto	u3281
  5554  003164  EFB6  F018         	goto	u3280
  5555  003168                     u3281:
  5556  003168  EFBD  F018         	goto	l3584
  5557  00316C                     u3280:
  5558  00316C                     
  5559                           ; BSR set to: 0
  5560  00316C  A5FA               	btfss	_flags& (0+255),2,b
  5561  00316E  EFBB  F018         	goto	u3291
  5562  003172  EFBD  F018         	goto	u3290
  5563  003176                     u3291:
  5564  003176  EFC0  F018         	goto	l3586
  5565  00317A                     u3290:
  5566  00317A                     l3584:
  5567                           
  5568                           ; BSR set to: 0
  5569                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 306:         --w;
  5570  00317A  0632               	decf	dtoa@w^0,f,c
  5571  00317C  A0D8               	btfss	status,0,c
  5572  00317E  0633               	decf	(dtoa@w+1)^0,f,c
  5573  003180                     l3586:
  5574                           
  5575                           ; BSR set to: 0
  5576                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  5577  003180  0E00               	movlw	0
  5578  003182  6E3F               	movwf	(dtoa@i+1)^0,c
  5579  003184  0E1F               	movlw	31
  5580  003186  6E3E               	movwf	dtoa@i^0,c
  5581  003188                     
  5582                           ; BSR set to: 0
  5583                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  5584  003188  0E00               	movlw	0
  5585  00318A  0101               	movlb	1	; () banked
  5586  00318C  6F9D               	movwf	(_dbuf+31)& (0+255),b
  5587                           
  5588                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5589  00318E  EF45  F019         	goto	l3600
  5590  003192                     l3590:
  5591                           
  5592                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 313:         --i;
  5593  003192  063E               	decf	dtoa@i^0,f,c
  5594  003194  A0D8               	btfss	status,0,c
  5595  003196  063F               	decf	(dtoa@i+1)^0,f,c
  5596  003198                     
  5597                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  5598  003198  0E7E               	movlw	low _dbuf
  5599  00319A  243E               	addwf	dtoa@i^0,w,c
  5600  00319C  6ED9               	movwf	fsr2l,c
  5601  00319E  0E01               	movlw	high _dbuf
  5602  0031A0  203F               	addwfc	(dtoa@i+1)^0,w,c
  5603  0031A2  6EDA               	movwf	fsr2h,c
  5604  0031A4  C036  F001         	movff	dtoa@n,___aomod@dividend
  5605  0031A8  C037  F002         	movff	dtoa@n+1,___aomod@dividend+1
  5606  0031AC  C038  F003         	movff	dtoa@n+2,___aomod@dividend+2
  5607  0031B0  C039  F004         	movff	dtoa@n+3,___aomod@dividend+3
  5608  0031B4  C03A  F005         	movff	dtoa@n+4,___aomod@dividend+4
  5609  0031B8  C03B  F006         	movff	dtoa@n+5,___aomod@dividend+5
  5610  0031BC  C03C  F007         	movff	dtoa@n+6,___aomod@dividend+6
  5611  0031C0  C03D  F008         	movff	dtoa@n+7,___aomod@dividend+7
  5612  0031C4  0E0A               	movlw	10
  5613  0031C6  6E09               	movwf	___aomod@divisor^0,c
  5614  0031C8  0E00               	movlw	0
  5615  0031CA  6E0A               	movwf	(___aomod@divisor+1)^0,c
  5616  0031CC  0E00               	movlw	0
  5617  0031CE  6E0B               	movwf	(___aomod@divisor+2)^0,c
  5618  0031D0  0E00               	movlw	0
  5619  0031D2  6E0C               	movwf	(___aomod@divisor+3)^0,c
  5620  0031D4  0E00               	movlw	0
  5621  0031D6  6E0D               	movwf	(___aomod@divisor+4)^0,c
  5622  0031D8  0E00               	movlw	0
  5623  0031DA  6E0E               	movwf	(___aomod@divisor+5)^0,c
  5624  0031DC  0E00               	movlw	0
  5625  0031DE  6E0F               	movwf	(___aomod@divisor+6)^0,c
  5626  0031E0  0E00               	movlw	0
  5627  0031E2  6E10               	movwf	(___aomod@divisor+7)^0,c
  5628  0031E4  EC3E  F022         	call	___aomod	;wreg free
  5629  0031E8  C001  F026         	movff	?___aomod,??_dtoa
  5630  0031EC  C002  F027         	movff	?___aomod+1,??_dtoa+1
  5631  0031F0  C003  F028         	movff	?___aomod+2,??_dtoa+2
  5632  0031F4  C004  F029         	movff	?___aomod+3,??_dtoa+3
  5633  0031F8  C005  F02A         	movff	?___aomod+4,??_dtoa+4
  5634  0031FC  C006  F02B         	movff	?___aomod+5,??_dtoa+5
  5635  003200  C007  F02C         	movff	?___aomod+6,??_dtoa+6
  5636  003204  C008  F02D         	movff	?___aomod+7,??_dtoa+7
  5637  003208  C026  F013         	movff	??_dtoa,abs@a
  5638  00320C  C028  F014         	movff	??_dtoa+2,abs@a+1
  5639  003210  EC96  F02C         	call	_abs	;wreg free
  5640  003214  5013               	movf	?_abs^0,w,c
  5641  003216  0F30               	addlw	48
  5642  003218  6EDF               	movwf	indf2,c
  5643  00321A                     
  5644                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 315:         --p;
  5645  00321A  0630               	decf	dtoa@p^0,f,c
  5646  00321C  A0D8               	btfss	status,0,c
  5647  00321E  0631               	decf	(dtoa@p+1)^0,f,c
  5648  003220                     
  5649                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 316:         --w;
  5650  003220  0632               	decf	dtoa@w^0,f,c
  5651  003222  A0D8               	btfss	status,0,c
  5652  003224  0633               	decf	(dtoa@w+1)^0,f,c
  5653  003226                     
  5654                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  5655  003226  C036  F001         	movff	dtoa@n,___aodiv@dividend
  5656  00322A  C037  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  5657  00322E  C038  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  5658  003232  C039  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  5659  003236  C03A  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  5660  00323A  C03B  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  5661  00323E  C03C  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  5662  003242  C03D  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  5663  003246  0E0A               	movlw	10
  5664  003248  6E09               	movwf	___aodiv@divisor^0,c
  5665  00324A  0E00               	movlw	0
  5666  00324C  6E0A               	movwf	(___aodiv@divisor+1)^0,c
  5667  00324E  0E00               	movlw	0
  5668  003250  6E0B               	movwf	(___aodiv@divisor+2)^0,c
  5669  003252  0E00               	movlw	0
  5670  003254  6E0C               	movwf	(___aodiv@divisor+3)^0,c
  5671  003256  0E00               	movlw	0
  5672  003258  6E0D               	movwf	(___aodiv@divisor+4)^0,c
  5673  00325A  0E00               	movlw	0
  5674  00325C  6E0E               	movwf	(___aodiv@divisor+5)^0,c
  5675  00325E  0E00               	movlw	0
  5676  003260  6E0F               	movwf	(___aodiv@divisor+6)^0,c
  5677  003262  0E00               	movlw	0
  5678  003264  6E10               	movwf	(___aodiv@divisor+7)^0,c
  5679  003266  EC7A  F021         	call	___aodiv	;wreg free
  5680  00326A  C001  F036         	movff	?___aodiv,dtoa@n
  5681  00326E  C002  F037         	movff	?___aodiv+1,dtoa@n+1
  5682  003272  C003  F038         	movff	?___aodiv+2,dtoa@n+2
  5683  003276  C004  F039         	movff	?___aodiv+3,dtoa@n+3
  5684  00327A  C005  F03A         	movff	?___aodiv+4,dtoa@n+4
  5685  00327E  C006  F03B         	movff	?___aodiv+5,dtoa@n+5
  5686  003282  C007  F03C         	movff	?___aodiv+6,dtoa@n+6
  5687  003286  C008  F03D         	movff	?___aodiv+7,dtoa@n+7
  5688  00328A                     l3600:
  5689                           
  5690                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5691  00328A  BE3F               	btfsc	(dtoa@i+1)^0,7,c
  5692  00328C  EF50  F019         	goto	u3301
  5693  003290  503F               	movf	(dtoa@i+1)^0,w,c
  5694  003292  E108               	bnz	u3300
  5695  003294  043E               	decf	dtoa@i^0,w,c
  5696  003296  A0D8               	btfss	status,0,c
  5697  003298  EF50  F019         	goto	u3301
  5698  00329C  EF52  F019         	goto	u3300
  5699  0032A0                     u3301:
  5700  0032A0  EF83  F019         	goto	l3610
  5701  0032A4                     u3300:
  5702  0032A4  5036               	movf	dtoa@n^0,w,c
  5703  0032A6  1037               	iorwf	(dtoa@n+1)^0,w,c
  5704  0032A8  1038               	iorwf	(dtoa@n+2)^0,w,c
  5705  0032AA  1039               	iorwf	(dtoa@n+3)^0,w,c
  5706  0032AC  103A               	iorwf	(dtoa@n+4)^0,w,c
  5707  0032AE  103B               	iorwf	(dtoa@n+5)^0,w,c
  5708  0032B0  103C               	iorwf	(dtoa@n+6)^0,w,c
  5709  0032B2  103D               	iorwf	(dtoa@n+7)^0,w,c
  5710  0032B4  A4D8               	btfss	status,2,c
  5711  0032B6  EF5F  F019         	goto	u3311
  5712  0032BA  EF61  F019         	goto	u3310
  5713  0032BE                     u3311:
  5714  0032BE  EFC9  F018         	goto	l3590
  5715  0032C2                     u3310:
  5716  0032C2  BE31               	btfsc	(dtoa@p+1)^0,7,c
  5717  0032C4  EF6E  F019         	goto	u3320
  5718  0032C8  5031               	movf	(dtoa@p+1)^0,w,c
  5719  0032CA  E106               	bnz	u3321
  5720  0032CC  0430               	decf	dtoa@p^0,w,c
  5721  0032CE  B0D8               	btfsc	status,0,c
  5722  0032D0  EF6C  F019         	goto	u3321
  5723  0032D4  EF6E  F019         	goto	u3320
  5724  0032D8                     u3321:
  5725  0032D8  EFC9  F018         	goto	l3590
  5726  0032DC                     u3320:
  5727  0032DC  BE33               	btfsc	(dtoa@w+1)^0,7,c
  5728  0032DE  EF79  F019         	goto	u3331
  5729  0032E2  5033               	movf	(dtoa@w+1)^0,w,c
  5730  0032E4  E108               	bnz	u3330
  5731  0032E6  0432               	decf	dtoa@w^0,w,c
  5732  0032E8  A0D8               	btfss	status,0,c
  5733  0032EA  EF79  F019         	goto	u3331
  5734  0032EE  EF7B  F019         	goto	u3330
  5735  0032F2                     u3331:
  5736  0032F2  EF83  F019         	goto	l3610
  5737  0032F6                     u3330:
  5738  0032F6  0100               	movlb	0	; () banked
  5739  0032F8  B3FA               	btfsc	_flags& (0+255),1,b
  5740  0032FA  EF81  F019         	goto	u3341
  5741  0032FE  EF83  F019         	goto	u3340
  5742  003302                     u3341:
  5743  003302  EFC9  F018         	goto	l3590
  5744  003306                     u3340:
  5745  003306                     l3610:
  5746                           
  5747                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  5748  003306  5034               	movf	dtoa@s^0,w,c
  5749  003308  1035               	iorwf	(dtoa@s+1)^0,w,c
  5750  00330A  A4D8               	btfss	status,2,c
  5751  00330C  EF8A  F019         	goto	u3351
  5752  003310  EF8C  F019         	goto	u3350
  5753  003314                     u3351:
  5754  003314  EF94  F019         	goto	l3614
  5755  003318                     u3350:
  5756  003318  0100               	movlb	0	; () banked
  5757  00331A  A5FA               	btfss	_flags& (0+255),2,b
  5758  00331C  EF92  F019         	goto	u3361
  5759  003320  EF94  F019         	goto	u3360
  5760  003324                     u3361:
  5761  003324  EFB2  F019         	goto	l3624
  5762  003328                     u3360:
  5763  003328                     l3614:
  5764                           
  5765                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 322:         --i;
  5766  003328  063E               	decf	dtoa@i^0,f,c
  5767  00332A  A0D8               	btfss	status,0,c
  5768  00332C  063F               	decf	(dtoa@i+1)^0,f,c
  5769  00332E                     
  5770                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  5771  00332E  5034               	movf	dtoa@s^0,w,c
  5772  003330  1035               	iorwf	(dtoa@s+1)^0,w,c
  5773  003332  A4D8               	btfss	status,2,c
  5774  003334  EF9E  F019         	goto	u3371
  5775  003338  EFA0  F019         	goto	u3370
  5776  00333C                     u3371:
  5777  00333C  EFA6  F019         	goto	l3620
  5778  003340                     u3370:
  5779  003340  0E00               	movlw	0
  5780  003342  6E2F               	movwf	(_dtoa$2601+1)^0,c
  5781  003344  0E2B               	movlw	43
  5782  003346  6E2E               	movwf	_dtoa$2601^0,c
  5783  003348  EFAA  F019         	goto	l3622
  5784  00334C                     l3620:
  5785  00334C  0E00               	movlw	0
  5786  00334E  6E2F               	movwf	(_dtoa$2601+1)^0,c
  5787  003350  0E2D               	movlw	45
  5788  003352  6E2E               	movwf	_dtoa$2601^0,c
  5789  003354                     l3622:
  5790  003354  0E7E               	movlw	low _dbuf
  5791  003356  243E               	addwf	dtoa@i^0,w,c
  5792  003358  6ED9               	movwf	fsr2l,c
  5793  00335A  0E01               	movlw	high _dbuf
  5794  00335C  203F               	addwfc	(dtoa@i+1)^0,w,c
  5795  00335E  6EDA               	movwf	fsr2h,c
  5796  003360  C02E  FFDF         	movff	_dtoa$2601,indf2
  5797  003364                     l3624:
  5798                           
  5799                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  5800  003364  C01C  F011         	movff	dtoa@fp,pad@fp
  5801  003368  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
  5802  00336C  0E7E               	movlw	low _dbuf
  5803  00336E  243E               	addwf	dtoa@i^0,w,c
  5804  003370  6E13               	movwf	pad@buf^0,c
  5805  003372  0E01               	movlw	high _dbuf
  5806  003374  203F               	addwfc	(dtoa@i+1)^0,w,c
  5807  003376  6E14               	movwf	(pad@buf+1)^0,c
  5808  003378  C032  F015         	movff	dtoa@w,pad@p
  5809  00337C  C033  F016         	movff	dtoa@w+1,pad@p+1
  5810  003380  ECA8  F028         	call	_pad	;wreg free
  5811  003384  C011  F01C         	movff	?_pad,?_dtoa
  5812  003388  C012  F01D         	movff	?_pad+1,?_dtoa+1
  5813  00338C  0012               	return		;funcret
  5814  00338E                     __end_of_dtoa:
  5815                           	callstack 0
  5816                           
  5817 ;; *************** function _pad *****************
  5818 ;; Defined at:
  5819 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c"
  5820 ;; Parameters:    Size  Location     Type
  5821 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  5822 ;;		 -> sprintf@f(11), 
  5823 ;;  buf             2   18[COMRAM] PTR unsigned char 
  5824 ;;		 -> dbuf(32), 
  5825 ;;  p               2   20[COMRAM] int 
  5826 ;; Auto vars:     Size  Location     Type
  5827 ;;  w               2   25[COMRAM] int 
  5828 ;;  i               2   23[COMRAM] int 
  5829 ;; Return value:  Size  Location     Type
  5830 ;;                  2   16[COMRAM] int 
  5831 ;; Registers used:
  5832 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5833 ;; Tracked objects:
  5834 ;;		On entry : 0/0
  5835 ;;		On exit  : 0/0
  5836 ;;		Unchanged: 0/0
  5837 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5838 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5839 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5840 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5841 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5842 ;;Total ram usage:       11 bytes
  5843 ;; Hardware stack levels used: 1
  5844 ;; Hardware stack levels required when called: 4
  5845 ;; This function calls:
  5846 ;;		_fputc
  5847 ;;		_fputs
  5848 ;;		_strlen
  5849 ;; This function is called by:
  5850 ;;		_dtoa
  5851 ;; This function uses a non-reentrant model
  5852 ;;
  5853                           
  5854                           	psect	text17
  5855  005150                     __ptext17:
  5856                           	callstack 0
  5857  005150                     _pad:
  5858                           	callstack 20
  5859  005150                     
  5860                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  5861  005150  0100               	movlb	0	; () banked
  5862  005152  A1FA               	btfss	_flags& (0+255),0,b
  5863  005154  EFAE  F028         	goto	u3121
  5864  005158  EFB0  F028         	goto	u3120
  5865  00515C                     u3121:
  5866  00515C  EFBA  F028         	goto	l3494
  5867  005160                     u3120:
  5868  005160                     
  5869                           ; BSR set to: 0
  5870                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  5871  005160  C013  F00A         	movff	pad@buf,fputs@s
  5872  005164  C014  F00B         	movff	pad@buf+1,fputs@s+1
  5873  005168  C011  F00C         	movff	pad@fp,fputs@fp
  5874  00516C  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  5875  005170  ECF0  F02B         	call	_fputs	;wreg free
  5876  005174                     l3494:
  5877                           
  5878                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  5879  005174  BE16               	btfsc	(pad@p+1)^0,7,c
  5880  005176  EFBF  F028         	goto	u3131
  5881  00517A  EFC1  F028         	goto	u3130
  5882  00517E                     u3131:
  5883  00517E  EFC7  F028         	goto	l3498
  5884  005182                     u3130:
  5885  005182  C015  F01A         	movff	pad@p,pad@w
  5886  005186  C016  F01B         	movff	pad@p+1,pad@w+1
  5887  00518A  EFCB  F028         	goto	l1322
  5888  00518E                     l3498:
  5889  00518E  0E00               	movlw	0
  5890  005190  6E1B               	movwf	(pad@w+1)^0,c
  5891  005192  0E00               	movlw	0
  5892  005194  6E1A               	movwf	pad@w^0,c
  5893  005196                     l1322:
  5894                           
  5895                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  5896  005196  0E00               	movlw	0
  5897  005198  6E19               	movwf	(pad@i+1)^0,c
  5898  00519A  0E00               	movlw	0
  5899  00519C  6E18               	movwf	pad@i^0,c
  5900                           
  5901                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  5902  00519E  EFDD  F028         	goto	l3504
  5903  0051A2                     l3500:
  5904                           
  5905                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  5906  0051A2  0E00               	movlw	0
  5907  0051A4  6E02               	movwf	(fputc@c+1)^0,c
  5908  0051A6  0E20               	movlw	32
  5909  0051A8  6E01               	movwf	fputc@c^0,c
  5910  0051AA  C011  F003         	movff	pad@fp,fputc@fp
  5911  0051AE  C012  F004         	movff	pad@fp+1,fputc@fp+1
  5912  0051B2  EC43  F028         	call	_fputc	;wreg free
  5913  0051B6                     
  5914                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 86:         ++i;
  5915  0051B6  4A18               	infsnz	pad@i^0,f,c
  5916  0051B8  2A19               	incf	(pad@i+1)^0,f,c
  5917  0051BA                     l3504:
  5918                           
  5919                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  5920  0051BA  501A               	movf	pad@w^0,w,c
  5921  0051BC  5C18               	subwf	pad@i^0,w,c
  5922  0051BE  5019               	movf	(pad@i+1)^0,w,c
  5923  0051C0  0A80               	xorlw	128
  5924  0051C2  6E17               	movwf	??_pad^0,c
  5925  0051C4  501B               	movf	(pad@w+1)^0,w,c
  5926  0051C6  0A80               	xorlw	128
  5927  0051C8  5817               	subwfb	??_pad^0,w,c
  5928  0051CA  A0D8               	btfss	status,0,c
  5929  0051CC  EFEA  F028         	goto	u3141
  5930  0051D0  EFEC  F028         	goto	u3140
  5931  0051D4                     u3141:
  5932  0051D4  EFD1  F028         	goto	l3500
  5933  0051D8                     u3140:
  5934  0051D8                     
  5935                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  5936  0051D8  0100               	movlb	0	; () banked
  5937  0051DA  B1FA               	btfsc	_flags& (0+255),0,b
  5938  0051DC  EFF2  F028         	goto	u3151
  5939  0051E0  EFF4  F028         	goto	u3150
  5940  0051E4                     u3151:
  5941  0051E4  EFFE  F028         	goto	l3508
  5942  0051E8                     u3150:
  5943  0051E8                     
  5944                           ; BSR set to: 0
  5945                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  5946  0051E8  C013  F00A         	movff	pad@buf,fputs@s
  5947  0051EC  C014  F00B         	movff	pad@buf+1,fputs@s+1
  5948  0051F0  C011  F00C         	movff	pad@fp,fputs@fp
  5949  0051F4  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  5950  0051F8  ECF0  F02B         	call	_fputs	;wreg free
  5951  0051FC                     l3508:
  5952                           
  5953                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  5954  0051FC  C013  F001         	movff	pad@buf,strlen@s
  5955  005200  C014  F002         	movff	pad@buf+1,strlen@s+1
  5956  005204  EC0B  F02D         	call	_strlen	;wreg free
  5957  005208  501A               	movf	pad@w^0,w,c
  5958  00520A  2401               	addwf	?_strlen^0,w,c
  5959  00520C  6E11               	movwf	?_pad^0,c
  5960  00520E  501B               	movf	(pad@w+1)^0,w,c
  5961  005210  2002               	addwfc	(?_strlen+1)^0,w,c
  5962  005212  6E12               	movwf	(?_pad+1)^0,c
  5963  005214  0012               	return		;funcret
  5964  005216                     __end_of_pad:
  5965                           	callstack 0
  5966                           
  5967 ;; *************** function _strlen *****************
  5968 ;; Defined at:
  5969 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\strlen.c"
  5970 ;; Parameters:    Size  Location     Type
  5971 ;;  s               2    0[COMRAM] PTR const unsigned char 
  5972 ;;		 -> dbuf(32), 
  5973 ;; Auto vars:     Size  Location     Type
  5974 ;;  a               2    2[COMRAM] PTR const unsigned char 
  5975 ;;		 -> dbuf(32), 
  5976 ;; Return value:  Size  Location     Type
  5977 ;;                  2    0[COMRAM] unsigned int 
  5978 ;; Registers used:
  5979 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5980 ;; Tracked objects:
  5981 ;;		On entry : 0/0
  5982 ;;		On exit  : 0/0
  5983 ;;		Unchanged: 0/0
  5984 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5985 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5986 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5987 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5988 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5989 ;;Total ram usage:        4 bytes
  5990 ;; Hardware stack levels used: 1
  5991 ;; Hardware stack levels required when called: 1
  5992 ;; This function calls:
  5993 ;;		Nothing
  5994 ;; This function is called by:
  5995 ;;		_pad
  5996 ;; This function uses a non-reentrant model
  5997 ;;
  5998                           
  5999                           	psect	text18
  6000  005A16                     __ptext18:
  6001                           	callstack 0
  6002  005A16                     _strlen:
  6003                           	callstack 22
  6004  005A16  C001  F003         	movff	strlen@s,strlen@a
  6005  005A1A  C002  F004         	movff	strlen@s+1,strlen@a+1
  6006  005A1E  EF13  F02D         	goto	l3404
  6007  005A22                     l3402:
  6008  005A22  4A01               	infsnz	strlen@s^0,f,c
  6009  005A24  2A02               	incf	(strlen@s+1)^0,f,c
  6010  005A26                     l3404:
  6011  005A26  C001  FFD9         	movff	strlen@s,fsr2l
  6012  005A2A  C002  FFDA         	movff	strlen@s+1,fsr2h
  6013  005A2E  50DF               	movf	indf2,w,c
  6014  005A30  A4D8               	btfss	status,2,c
  6015  005A32  EF1D  F02D         	goto	u2981
  6016  005A36  EF1F  F02D         	goto	u2980
  6017  005A3A                     u2981:
  6018  005A3A  EF11  F02D         	goto	l3402
  6019  005A3E                     u2980:
  6020  005A3E  5003               	movf	strlen@a^0,w,c
  6021  005A40  5C01               	subwf	strlen@s^0,w,c
  6022  005A42  6E01               	movwf	?_strlen^0,c
  6023  005A44  5004               	movf	(strlen@a+1)^0,w,c
  6024  005A46  5802               	subwfb	(strlen@s+1)^0,w,c
  6025  005A48  6E02               	movwf	(?_strlen+1)^0,c
  6026  005A4A  0012               	return		;funcret
  6027  005A4C                     __end_of_strlen:
  6028                           	callstack 0
  6029                           
  6030 ;; *************** function _fputs *****************
  6031 ;; Defined at:
  6032 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\nf_fputs.c"
  6033 ;; Parameters:    Size  Location     Type
  6034 ;;  s               2    9[COMRAM] PTR const unsigned char 
  6035 ;;		 -> dbuf(32), 
  6036 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  6037 ;;		 -> sprintf@f(11), 
  6038 ;; Auto vars:     Size  Location     Type
  6039 ;;  i               2   14[COMRAM] int 
  6040 ;;  c               1   13[COMRAM] unsigned char 
  6041 ;; Return value:  Size  Location     Type
  6042 ;;                  2    9[COMRAM] int 
  6043 ;; Registers used:
  6044 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6045 ;; Tracked objects:
  6046 ;;		On entry : 0/0
  6047 ;;		On exit  : 0/0
  6048 ;;		Unchanged: 0/0
  6049 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6050 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6051 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6052 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6053 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6054 ;;Total ram usage:        7 bytes
  6055 ;; Hardware stack levels used: 1
  6056 ;; Hardware stack levels required when called: 3
  6057 ;; This function calls:
  6058 ;;		_fputc
  6059 ;; This function is called by:
  6060 ;;		_pad
  6061 ;; This function uses a non-reentrant model
  6062 ;;
  6063                           
  6064                           	psect	text19
  6065  0057E0                     __ptext19:
  6066                           	callstack 0
  6067  0057E0                     _fputs:
  6068                           	callstack 20
  6069  0057E0  0E00               	movlw	0
  6070  0057E2  6E10               	movwf	(fputs@i+1)^0,c
  6071  0057E4  0E00               	movlw	0
  6072  0057E6  6E0F               	movwf	fputs@i^0,c
  6073  0057E8  EF01  F02C         	goto	l3398
  6074  0057EC                     l3394:
  6075  0057EC  C00E  F001         	movff	fputs@c,fputc@c
  6076  0057F0  6A02               	clrf	(fputc@c+1)^0,c
  6077  0057F2  C00C  F003         	movff	fputs@fp,fputc@fp
  6078  0057F6  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  6079  0057FA  EC43  F028         	call	_fputc	;wreg free
  6080  0057FE  4A0F               	infsnz	fputs@i^0,f,c
  6081  005800  2A10               	incf	(fputs@i+1)^0,f,c
  6082  005802                     l3398:
  6083  005802  500F               	movf	fputs@i^0,w,c
  6084  005804  240A               	addwf	fputs@s^0,w,c
  6085  005806  6ED9               	movwf	fsr2l,c
  6086  005808  5010               	movf	(fputs@i+1)^0,w,c
  6087  00580A  200B               	addwfc	(fputs@s+1)^0,w,c
  6088  00580C  6EDA               	movwf	fsr2h,c
  6089  00580E  50DF               	movf	indf2,w,c
  6090  005810  6E0E               	movwf	fputs@c^0,c
  6091  005812  500E               	movf	fputs@c^0,w,c
  6092  005814  A4D8               	btfss	status,2,c
  6093  005816  EF0F  F02C         	goto	u2971
  6094  00581A  EF11  F02C         	goto	u2970
  6095  00581E                     u2971:
  6096  00581E  EFF6  F02B         	goto	l3394
  6097  005822                     u2970:
  6098  005822  0012               	return		;funcret
  6099  005824                     __end_of_fputs:
  6100                           	callstack 0
  6101                           
  6102 ;; *************** function _fputc *****************
  6103 ;; Defined at:
  6104 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\nf_fputc.c"
  6105 ;; Parameters:    Size  Location     Type
  6106 ;;  c               2    0[COMRAM] int 
  6107 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  6108 ;;		 -> sprintf@f(11), 
  6109 ;; Auto vars:     Size  Location     Type
  6110 ;;		None
  6111 ;; Return value:  Size  Location     Type
  6112 ;;                  2    0[COMRAM] int 
  6113 ;; Registers used:
  6114 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6115 ;; Tracked objects:
  6116 ;;		On entry : 0/0
  6117 ;;		On exit  : 0/0
  6118 ;;		Unchanged: 0/0
  6119 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6120 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6121 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6122 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6123 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6124 ;;Total ram usage:        9 bytes
  6125 ;; Hardware stack levels used: 1
  6126 ;; Hardware stack levels required when called: 2
  6127 ;; This function calls:
  6128 ;;		_putch
  6129 ;; This function is called by:
  6130 ;;		_pad
  6131 ;;		_vfpfcnvrt
  6132 ;;		_fputs
  6133 ;; This function uses a non-reentrant model
  6134 ;;
  6135                           
  6136                           	psect	text20
  6137  005086                     __ptext20:
  6138                           	callstack 0
  6139  005086                     _fputc:
  6140                           	callstack 23
  6141  005086  5003               	movf	fputc@fp^0,w,c
  6142  005088  1004               	iorwf	(fputc@fp+1)^0,w,c
  6143  00508A  B4D8               	btfsc	status,2,c
  6144  00508C  EF4A  F028         	goto	u2931
  6145  005090  EF4C  F028         	goto	u2930
  6146  005094                     u2931:
  6147  005094  EF55  F028         	goto	l3382
  6148  005098                     u2930:
  6149  005098  5003               	movf	fputc@fp^0,w,c
  6150  00509A  1004               	iorwf	(fputc@fp+1)^0,w,c
  6151  00509C  A4D8               	btfss	status,2,c
  6152  00509E  EF53  F028         	goto	u2941
  6153  0050A2  EF55  F028         	goto	u2940
  6154  0050A6                     u2941:
  6155  0050A6  EF5A  F028         	goto	l3384
  6156  0050AA                     u2940:
  6157  0050AA                     l3382:
  6158  0050AA  5001               	movf	fputc@c^0,w,c
  6159  0050AC  EC6B  F02E         	call	_putch
  6160  0050B0  EFA7  F028         	goto	l1386
  6161  0050B4                     l3384:
  6162  0050B4  EE20 F009          	lfsr	2,9
  6163  0050B8  5003               	movf	fputc@fp^0,w,c
  6164  0050BA  26D9               	addwf	fsr2l,f,c
  6165  0050BC  5004               	movf	(fputc@fp+1)^0,w,c
  6166  0050BE  22DA               	addwfc	fsr2h,f,c
  6167  0050C0  50DE               	movf	postinc2,w,c
  6168  0050C2  10DE               	iorwf	postinc2,w,c
  6169  0050C4  B4D8               	btfsc	status,2,c
  6170  0050C6  EF67  F028         	goto	u2951
  6171  0050CA  EF69  F028         	goto	u2950
  6172  0050CE                     u2951:
  6173  0050CE  EF84  F028         	goto	l3388
  6174  0050D2                     u2950:
  6175  0050D2  EE20 F009          	lfsr	2,9
  6176  0050D6  5003               	movf	fputc@fp^0,w,c
  6177  0050D8  26D9               	addwf	fsr2l,f,c
  6178  0050DA  5004               	movf	(fputc@fp+1)^0,w,c
  6179  0050DC  22DA               	addwfc	fsr2h,f,c
  6180  0050DE  EE10 F003          	lfsr	1,3
  6181  0050E2  5003               	movf	fputc@fp^0,w,c
  6182  0050E4  26E1               	addwf	fsr1l,f,c
  6183  0050E6  5004               	movf	(fputc@fp+1)^0,w,c
  6184  0050E8  22E2               	addwfc	fsr1h,f,c
  6185  0050EA  50DE               	movf	postinc2,w,c
  6186  0050EC  5CE6               	subwf	postinc1,w,c
  6187  0050EE  50E6               	movf	postinc1,w,c
  6188  0050F0  0A80               	xorlw	128
  6189  0050F2  6E09               	movwf	(??_fputc+4)^0,c
  6190  0050F4  50DE               	movf	postinc2,w,c
  6191  0050F6  0A80               	xorlw	128
  6192  0050F8  5809               	subwfb	(??_fputc+4)^0,w,c
  6193  0050FA  B0D8               	btfsc	status,0,c
  6194  0050FC  EF82  F028         	goto	u2961
  6195  005100  EF84  F028         	goto	u2960
  6196  005104                     u2961:
  6197  005104  EFA7  F028         	goto	l1386
  6198  005108                     u2960:
  6199  005108                     l3388:
  6200  005108  EE20 F003          	lfsr	2,3
  6201  00510C  5003               	movf	fputc@fp^0,w,c
  6202  00510E  26D9               	addwf	fsr2l,f,c
  6203  005110  5004               	movf	(fputc@fp+1)^0,w,c
  6204  005112  22DA               	addwfc	fsr2h,f,c
  6205  005114  CFDE F005          	movff	postinc2,??_fputc
  6206  005118  CFDD F006          	movff	postdec2,??_fputc+1
  6207  00511C  C003  FFD9         	movff	fputc@fp,fsr2l
  6208  005120  C004  FFDA         	movff	fputc@fp+1,fsr2h
  6209  005124  CFDE F007          	movff	postinc2,??_fputc+2
  6210  005128  CFDD F008          	movff	postdec2,??_fputc+3
  6211  00512C  5005               	movf	??_fputc^0,w,c
  6212  00512E  2407               	addwf	(??_fputc+2)^0,w,c
  6213  005130  6ED9               	movwf	fsr2l,c
  6214  005132  5006               	movf	(??_fputc+1)^0,w,c
  6215  005134  2008               	addwfc	(??_fputc+3)^0,w,c
  6216  005136  6EDA               	movwf	fsr2h,c
  6217  005138  C001  FFDF         	movff	fputc@c,indf2
  6218  00513C  EE20 F003          	lfsr	2,3
  6219  005140  5003               	movf	fputc@fp^0,w,c
  6220  005142  26D9               	addwf	fsr2l,f,c
  6221  005144  5004               	movf	(fputc@fp+1)^0,w,c
  6222  005146  22DA               	addwfc	fsr2h,f,c
  6223  005148  2ADE               	incf	postinc2,f,c
  6224  00514A  0E00               	movlw	0
  6225  00514C  22DD               	addwfc	postdec2,f,c
  6226  00514E                     l1386:
  6227  00514E  0012               	return		;funcret
  6228  005150                     __end_of_fputc:
  6229                           	callstack 0
  6230                           
  6231 ;; *************** function _putch *****************
  6232 ;; Defined at:
  6233 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\putch.c"
  6234 ;; Parameters:    Size  Location     Type
  6235 ;;  c               1    wreg     unsigned char 
  6236 ;; Auto vars:     Size  Location     Type
  6237 ;;  c               1    0[COMRAM] unsigned char 
  6238 ;; Return value:  Size  Location     Type
  6239 ;;                  1    wreg      void 
  6240 ;; Registers used:
  6241 ;;		wreg
  6242 ;; Tracked objects:
  6243 ;;		On entry : 0/0
  6244 ;;		On exit  : 0/0
  6245 ;;		Unchanged: 0/0
  6246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6247 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6248 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6249 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6250 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6251 ;;Total ram usage:        0 bytes
  6252 ;; Hardware stack levels used: 1
  6253 ;; Hardware stack levels required when called: 1
  6254 ;; This function calls:
  6255 ;;		Nothing
  6256 ;; This function is called by:
  6257 ;;		_fputc
  6258 ;; This function uses a non-reentrant model
  6259 ;;
  6260                           
  6261                           	psect	text21
  6262  005CD6                     __ptext21:
  6263                           	callstack 0
  6264  005CD6                     _putch:
  6265                           	callstack 23
  6266  005CD6  0012               	return		;funcret
  6267  005CD8                     __end_of_putch:
  6268                           	callstack 0
  6269                           
  6270 ;; *************** function _abs *****************
  6271 ;; Defined at:
  6272 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\abs.c"
  6273 ;; Parameters:    Size  Location     Type
  6274 ;;  a               2   18[COMRAM] int 
  6275 ;; Auto vars:     Size  Location     Type
  6276 ;;		None
  6277 ;; Return value:  Size  Location     Type
  6278 ;;                  2   18[COMRAM] int 
  6279 ;; Registers used:
  6280 ;;		wreg, status,2, status,0
  6281 ;; Tracked objects:
  6282 ;;		On entry : 0/0
  6283 ;;		On exit  : 0/0
  6284 ;;		Unchanged: 0/0
  6285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6286 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6287 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6288 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6289 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6290 ;;Total ram usage:        4 bytes
  6291 ;; Hardware stack levels used: 1
  6292 ;; Hardware stack levels required when called: 1
  6293 ;; This function calls:
  6294 ;;		Nothing
  6295 ;; This function is called by:
  6296 ;;		_dtoa
  6297 ;; This function uses a non-reentrant model
  6298 ;;
  6299                           
  6300                           	psect	text22
  6301  00592C                     __ptext22:
  6302                           	callstack 0
  6303  00592C                     _abs:
  6304                           	callstack 23
  6305  00592C  BE14               	btfsc	(abs@a+1)^0,7,c
  6306  00592E  EFA3  F02C         	goto	u3160
  6307  005932  5014               	movf	(abs@a+1)^0,w,c
  6308  005934  E106               	bnz	u3161
  6309  005936  0413               	decf	abs@a^0,w,c
  6310  005938  B0D8               	btfsc	status,0,c
  6311  00593A  EFA1  F02C         	goto	u3161
  6312  00593E  EFA3  F02C         	goto	u3160
  6313  005942                     u3161:
  6314  005942  EFB1  F02C         	goto	l1371
  6315  005946                     u3160:
  6316  005946  C013  F015         	movff	abs@a,??_abs
  6317  00594A  C014  F016         	movff	abs@a+1,??_abs+1
  6318  00594E  1E15               	comf	??_abs^0,f,c
  6319  005950  1E16               	comf	(??_abs+1)^0,f,c
  6320  005952  4A15               	infsnz	??_abs^0,f,c
  6321  005954  2A16               	incf	(??_abs+1)^0,f,c
  6322  005956  C015  F013         	movff	??_abs,?_abs
  6323  00595A  C016  F014         	movff	??_abs+1,?_abs+1
  6324  00595E  EFB5  F02C         	goto	l1374
  6325  005962                     l1371:
  6326  005962  C013  F013         	movff	abs@a,?_abs
  6327  005966  C014  F014         	movff	abs@a+1,?_abs+1
  6328  00596A                     l1374:
  6329  00596A  0012               	return		;funcret
  6330  00596C                     __end_of_abs:
  6331                           	callstack 0
  6332                           
  6333 ;; *************** function ___aomod *****************
  6334 ;; Defined at:
  6335 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\aomod.c"
  6336 ;; Parameters:    Size  Location     Type
  6337 ;;  dividend        8    0[COMRAM] long long 
  6338 ;;  divisor         8    8[COMRAM] long long 
  6339 ;; Auto vars:     Size  Location     Type
  6340 ;;  sign            1   17[COMRAM] unsigned char 
  6341 ;;  counter         1   16[COMRAM] unsigned char 
  6342 ;; Return value:  Size  Location     Type
  6343 ;;                  8    0[COMRAM] long long 
  6344 ;; Registers used:
  6345 ;;		wreg, status,2, status,0
  6346 ;; Tracked objects:
  6347 ;;		On entry : 0/0
  6348 ;;		On exit  : 0/0
  6349 ;;		Unchanged: 0/0
  6350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6351 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6352 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6353 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6354 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6355 ;;Total ram usage:       18 bytes
  6356 ;; Hardware stack levels used: 1
  6357 ;; Hardware stack levels required when called: 1
  6358 ;; This function calls:
  6359 ;;		Nothing
  6360 ;; This function is called by:
  6361 ;;		_dtoa
  6362 ;; This function uses a non-reentrant model
  6363 ;;
  6364                           
  6365                           	psect	text23
  6366  00447C                     __ptext23:
  6367                           	callstack 0
  6368  00447C                     ___aomod:
  6369                           	callstack 23
  6370  00447C  0E00               	movlw	0
  6371  00447E  6E12               	movwf	___aomod@sign^0,c
  6372  004480  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
  6373  004482  EF47  F022         	goto	u3060
  6374  004486  EF45  F022         	goto	u3061
  6375  00448A                     u3061:
  6376  00448A  EF59  F022         	goto	l3462
  6377  00448E                     u3060:
  6378  00448E  1E08               	comf	(___aomod@dividend+7)^0,f,c
  6379  004490  1E07               	comf	(___aomod@dividend+6)^0,f,c
  6380  004492  1E06               	comf	(___aomod@dividend+5)^0,f,c
  6381  004494  1E05               	comf	(___aomod@dividend+4)^0,f,c
  6382  004496  1E04               	comf	(___aomod@dividend+3)^0,f,c
  6383  004498  1E03               	comf	(___aomod@dividend+2)^0,f,c
  6384  00449A  1E02               	comf	(___aomod@dividend+1)^0,f,c
  6385  00449C  6C01               	negf	___aomod@dividend^0,c
  6386  00449E  0E00               	movlw	0
  6387  0044A0  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  6388  0044A2  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  6389  0044A4  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  6390  0044A6  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  6391  0044A8  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  6392  0044AA  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  6393  0044AC  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  6394  0044AE  0E01               	movlw	1
  6395  0044B0  6E12               	movwf	___aomod@sign^0,c
  6396  0044B2                     l3462:
  6397  0044B2  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
  6398  0044B4  EF60  F022         	goto	u3070
  6399  0044B8  EF5E  F022         	goto	u3071
  6400  0044BC                     u3071:
  6401  0044BC  EF70  F022         	goto	l3466
  6402  0044C0                     u3070:
  6403  0044C0  1E10               	comf	(___aomod@divisor+7)^0,f,c
  6404  0044C2  1E0F               	comf	(___aomod@divisor+6)^0,f,c
  6405  0044C4  1E0E               	comf	(___aomod@divisor+5)^0,f,c
  6406  0044C6  1E0D               	comf	(___aomod@divisor+4)^0,f,c
  6407  0044C8  1E0C               	comf	(___aomod@divisor+3)^0,f,c
  6408  0044CA  1E0B               	comf	(___aomod@divisor+2)^0,f,c
  6409  0044CC  1E0A               	comf	(___aomod@divisor+1)^0,f,c
  6410  0044CE  6C09               	negf	___aomod@divisor^0,c
  6411  0044D0  0E00               	movlw	0
  6412  0044D2  220A               	addwfc	(___aomod@divisor+1)^0,f,c
  6413  0044D4  220B               	addwfc	(___aomod@divisor+2)^0,f,c
  6414  0044D6  220C               	addwfc	(___aomod@divisor+3)^0,f,c
  6415  0044D8  220D               	addwfc	(___aomod@divisor+4)^0,f,c
  6416  0044DA  220E               	addwfc	(___aomod@divisor+5)^0,f,c
  6417  0044DC  220F               	addwfc	(___aomod@divisor+6)^0,f,c
  6418  0044DE  2210               	addwfc	(___aomod@divisor+7)^0,f,c
  6419  0044E0                     l3466:
  6420  0044E0  5009               	movf	___aomod@divisor^0,w,c
  6421  0044E2  100A               	iorwf	(___aomod@divisor+1)^0,w,c
  6422  0044E4  100B               	iorwf	(___aomod@divisor+2)^0,w,c
  6423  0044E6  100C               	iorwf	(___aomod@divisor+3)^0,w,c
  6424  0044E8  100D               	iorwf	(___aomod@divisor+4)^0,w,c
  6425  0044EA  100E               	iorwf	(___aomod@divisor+5)^0,w,c
  6426  0044EC  100F               	iorwf	(___aomod@divisor+6)^0,w,c
  6427  0044EE  1010               	iorwf	(___aomod@divisor+7)^0,w,c
  6428  0044F0  B4D8               	btfsc	status,2,c
  6429  0044F2  EF7D  F022         	goto	u3081
  6430  0044F6  EF7F  F022         	goto	u3080
  6431  0044FA                     u3081:
  6432  0044FA  EFC7  F022         	goto	l3482
  6433  0044FE                     u3080:
  6434  0044FE  0E01               	movlw	1
  6435  004500  6E11               	movwf	___aomod@counter^0,c
  6436  004502  EF8D  F022         	goto	l3472
  6437  004506                     l3470:
  6438  004506  90D8               	bcf	status,0,c
  6439  004508  3609               	rlcf	___aomod@divisor^0,f,c
  6440  00450A  360A               	rlcf	(___aomod@divisor+1)^0,f,c
  6441  00450C  360B               	rlcf	(___aomod@divisor+2)^0,f,c
  6442  00450E  360C               	rlcf	(___aomod@divisor+3)^0,f,c
  6443  004510  360D               	rlcf	(___aomod@divisor+4)^0,f,c
  6444  004512  360E               	rlcf	(___aomod@divisor+5)^0,f,c
  6445  004514  360F               	rlcf	(___aomod@divisor+6)^0,f,c
  6446  004516  3610               	rlcf	(___aomod@divisor+7)^0,f,c
  6447  004518  2A11               	incf	___aomod@counter^0,f,c
  6448  00451A                     l3472:
  6449  00451A  AE10               	btfss	(___aomod@divisor+7)^0,7,c
  6450  00451C  EF92  F022         	goto	u3091
  6451  004520  EF94  F022         	goto	u3090
  6452  004524                     u3091:
  6453  004524  EF83  F022         	goto	l3470
  6454  004528                     u3090:
  6455  004528                     l3474:
  6456  004528  5009               	movf	___aomod@divisor^0,w,c
  6457  00452A  5C01               	subwf	___aomod@dividend^0,w,c
  6458  00452C  500A               	movf	(___aomod@divisor+1)^0,w,c
  6459  00452E  5802               	subwfb	(___aomod@dividend+1)^0,w,c
  6460  004530  500B               	movf	(___aomod@divisor+2)^0,w,c
  6461  004532  5803               	subwfb	(___aomod@dividend+2)^0,w,c
  6462  004534  500C               	movf	(___aomod@divisor+3)^0,w,c
  6463  004536  5804               	subwfb	(___aomod@dividend+3)^0,w,c
  6464  004538  500D               	movf	(___aomod@divisor+4)^0,w,c
  6465  00453A  5805               	subwfb	(___aomod@dividend+4)^0,w,c
  6466  00453C  500E               	movf	(___aomod@divisor+5)^0,w,c
  6467  00453E  5806               	subwfb	(___aomod@dividend+5)^0,w,c
  6468  004540  500F               	movf	(___aomod@divisor+6)^0,w,c
  6469  004542  5807               	subwfb	(___aomod@dividend+6)^0,w,c
  6470  004544  5010               	movf	(___aomod@divisor+7)^0,w,c
  6471  004546  5808               	subwfb	(___aomod@dividend+7)^0,w,c
  6472  004548  A0D8               	btfss	status,0,c
  6473  00454A  EFA9  F022         	goto	u3101
  6474  00454E  EFAB  F022         	goto	u3100
  6475  004552                     u3101:
  6476  004552  EFBB  F022         	goto	l3478
  6477  004556                     u3100:
  6478  004556  5009               	movf	___aomod@divisor^0,w,c
  6479  004558  5E01               	subwf	___aomod@dividend^0,f,c
  6480  00455A  500A               	movf	(___aomod@divisor+1)^0,w,c
  6481  00455C  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
  6482  00455E  500B               	movf	(___aomod@divisor+2)^0,w,c
  6483  004560  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
  6484  004562  500C               	movf	(___aomod@divisor+3)^0,w,c
  6485  004564  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
  6486  004566  500D               	movf	(___aomod@divisor+4)^0,w,c
  6487  004568  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
  6488  00456A  500E               	movf	(___aomod@divisor+5)^0,w,c
  6489  00456C  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
  6490  00456E  500F               	movf	(___aomod@divisor+6)^0,w,c
  6491  004570  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
  6492  004572  5010               	movf	(___aomod@divisor+7)^0,w,c
  6493  004574  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
  6494  004576                     l3478:
  6495  004576  90D8               	bcf	status,0,c
  6496  004578  3210               	rrcf	(___aomod@divisor+7)^0,f,c
  6497  00457A  320F               	rrcf	(___aomod@divisor+6)^0,f,c
  6498  00457C  320E               	rrcf	(___aomod@divisor+5)^0,f,c
  6499  00457E  320D               	rrcf	(___aomod@divisor+4)^0,f,c
  6500  004580  320C               	rrcf	(___aomod@divisor+3)^0,f,c
  6501  004582  320B               	rrcf	(___aomod@divisor+2)^0,f,c
  6502  004584  320A               	rrcf	(___aomod@divisor+1)^0,f,c
  6503  004586  3209               	rrcf	___aomod@divisor^0,f,c
  6504  004588  2E11               	decfsz	___aomod@counter^0,f,c
  6505  00458A  EF94  F022         	goto	l3474
  6506  00458E                     l3482:
  6507  00458E  5012               	movf	___aomod@sign^0,w,c
  6508  004590  B4D8               	btfsc	status,2,c
  6509  004592  EFCD  F022         	goto	u3111
  6510  004596  EFCF  F022         	goto	u3110
  6511  00459A                     u3111:
  6512  00459A  EFDF  F022         	goto	l3486
  6513  00459E                     u3110:
  6514  00459E  1E08               	comf	(___aomod@dividend+7)^0,f,c
  6515  0045A0  1E07               	comf	(___aomod@dividend+6)^0,f,c
  6516  0045A2  1E06               	comf	(___aomod@dividend+5)^0,f,c
  6517  0045A4  1E05               	comf	(___aomod@dividend+4)^0,f,c
  6518  0045A6  1E04               	comf	(___aomod@dividend+3)^0,f,c
  6519  0045A8  1E03               	comf	(___aomod@dividend+2)^0,f,c
  6520  0045AA  1E02               	comf	(___aomod@dividend+1)^0,f,c
  6521  0045AC  6C01               	negf	___aomod@dividend^0,c
  6522  0045AE  0E00               	movlw	0
  6523  0045B0  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  6524  0045B2  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  6525  0045B4  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  6526  0045B6  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  6527  0045B8  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  6528  0045BA  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  6529  0045BC  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  6530  0045BE                     l3486:
  6531  0045BE  C001  F001         	movff	___aomod@dividend,?___aomod
  6532  0045C2  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  6533  0045C6  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  6534  0045CA  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  6535  0045CE  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  6536  0045D2  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  6537  0045D6  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  6538  0045DA  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  6539  0045DE  0012               	return		;funcret
  6540  0045E0                     __end_of___aomod:
  6541                           	callstack 0
  6542                           
  6543 ;; *************** function ___aodiv *****************
  6544 ;; Defined at:
  6545 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\aodiv.c"
  6546 ;; Parameters:    Size  Location     Type
  6547 ;;  dividend        8    0[COMRAM] long long 
  6548 ;;  divisor         8    8[COMRAM] long long 
  6549 ;; Auto vars:     Size  Location     Type
  6550 ;;  quotient        8   18[COMRAM] long long 
  6551 ;;  sign            1   17[COMRAM] unsigned char 
  6552 ;;  counter         1   16[COMRAM] unsigned char 
  6553 ;; Return value:  Size  Location     Type
  6554 ;;                  8    0[COMRAM] long long 
  6555 ;; Registers used:
  6556 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6557 ;; Tracked objects:
  6558 ;;		On entry : 0/0
  6559 ;;		On exit  : 0/0
  6560 ;;		Unchanged: 0/0
  6561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6562 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6563 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6564 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6565 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6566 ;;Total ram usage:       26 bytes
  6567 ;; Hardware stack levels used: 1
  6568 ;; Hardware stack levels required when called: 1
  6569 ;; This function calls:
  6570 ;;		Nothing
  6571 ;; This function is called by:
  6572 ;;		_dtoa
  6573 ;; This function uses a non-reentrant model
  6574 ;;
  6575                           
  6576                           	psect	text24
  6577  0042F4                     __ptext24:
  6578                           	callstack 0
  6579  0042F4                     ___aodiv:
  6580                           	callstack 23
  6581  0042F4  0E00               	movlw	0
  6582  0042F6  6E12               	movwf	___aodiv@sign^0,c
  6583  0042F8  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
  6584  0042FA  EF83  F021         	goto	u2990
  6585  0042FE  EF81  F021         	goto	u2991
  6586  004302                     u2991:
  6587  004302  EF95  F021         	goto	l3418
  6588  004306                     u2990:
  6589  004306  1E10               	comf	(___aodiv@divisor+7)^0,f,c
  6590  004308  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
  6591  00430A  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
  6592  00430C  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
  6593  00430E  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
  6594  004310  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
  6595  004312  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
  6596  004314  6C09               	negf	___aodiv@divisor^0,c
  6597  004316  0E00               	movlw	0
  6598  004318  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
  6599  00431A  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
  6600  00431C  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
  6601  00431E  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
  6602  004320  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
  6603  004322  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
  6604  004324  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
  6605  004326  0E01               	movlw	1
  6606  004328  6E12               	movwf	___aodiv@sign^0,c
  6607  00432A                     l3418:
  6608  00432A  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
  6609  00432C  EF9C  F021         	goto	u3000
  6610  004330  EF9A  F021         	goto	u3001
  6611  004334                     u3001:
  6612  004334  EFAE  F021         	goto	l3424
  6613  004338                     u3000:
  6614  004338  1E08               	comf	(___aodiv@dividend+7)^0,f,c
  6615  00433A  1E07               	comf	(___aodiv@dividend+6)^0,f,c
  6616  00433C  1E06               	comf	(___aodiv@dividend+5)^0,f,c
  6617  00433E  1E05               	comf	(___aodiv@dividend+4)^0,f,c
  6618  004340  1E04               	comf	(___aodiv@dividend+3)^0,f,c
  6619  004342  1E03               	comf	(___aodiv@dividend+2)^0,f,c
  6620  004344  1E02               	comf	(___aodiv@dividend+1)^0,f,c
  6621  004346  6C01               	negf	___aodiv@dividend^0,c
  6622  004348  0E00               	movlw	0
  6623  00434A  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
  6624  00434C  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
  6625  00434E  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
  6626  004350  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
  6627  004352  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
  6628  004354  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
  6629  004356  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
  6630  004358  0E01               	movlw	1
  6631  00435A  1A12               	xorwf	___aodiv@sign^0,f,c
  6632  00435C                     l3424:
  6633  00435C  EE20  F013         	lfsr	2,___aodiv@quotient
  6634  004360  0E07               	movlw	7
  6635  004362                     u3011:
  6636  004362  6ADE               	clrf	postinc2,c
  6637  004364  06E8               	decf	wreg,f,c
  6638  004366  E2FD               	bc	u3011
  6639  004368  5009               	movf	___aodiv@divisor^0,w,c
  6640  00436A  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
  6641  00436C  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
  6642  00436E  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
  6643  004370  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
  6644  004372  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
  6645  004374  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
  6646  004376  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
  6647  004378  B4D8               	btfsc	status,2,c
  6648  00437A  EFC1  F021         	goto	u3021
  6649  00437E  EFC3  F021         	goto	u3020
  6650  004382                     u3021:
  6651  004382  EF15  F022         	goto	l3446
  6652  004386                     u3020:
  6653  004386  0E01               	movlw	1
  6654  004388  6E11               	movwf	___aodiv@counter^0,c
  6655  00438A  EFD1  F021         	goto	l3432
  6656  00438E                     l3430:
  6657  00438E  90D8               	bcf	status,0,c
  6658  004390  3609               	rlcf	___aodiv@divisor^0,f,c
  6659  004392  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
  6660  004394  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
  6661  004396  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
  6662  004398  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
  6663  00439A  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
  6664  00439C  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
  6665  00439E  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
  6666  0043A0  2A11               	incf	___aodiv@counter^0,f,c
  6667  0043A2                     l3432:
  6668  0043A2  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
  6669  0043A4  EFD6  F021         	goto	u3031
  6670  0043A8  EFD8  F021         	goto	u3030
  6671  0043AC                     u3031:
  6672  0043AC  EFC7  F021         	goto	l3430
  6673  0043B0                     u3030:
  6674  0043B0                     l3434:
  6675  0043B0  90D8               	bcf	status,0,c
  6676  0043B2  3613               	rlcf	___aodiv@quotient^0,f,c
  6677  0043B4  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
  6678  0043B6  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
  6679  0043B8  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
  6680  0043BA  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
  6681  0043BC  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
  6682  0043BE  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
  6683  0043C0  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
  6684  0043C2  5009               	movf	___aodiv@divisor^0,w,c
  6685  0043C4  5C01               	subwf	___aodiv@dividend^0,w,c
  6686  0043C6  500A               	movf	(___aodiv@divisor+1)^0,w,c
  6687  0043C8  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
  6688  0043CA  500B               	movf	(___aodiv@divisor+2)^0,w,c
  6689  0043CC  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
  6690  0043CE  500C               	movf	(___aodiv@divisor+3)^0,w,c
  6691  0043D0  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
  6692  0043D2  500D               	movf	(___aodiv@divisor+4)^0,w,c
  6693  0043D4  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
  6694  0043D6  500E               	movf	(___aodiv@divisor+5)^0,w,c
  6695  0043D8  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
  6696  0043DA  500F               	movf	(___aodiv@divisor+6)^0,w,c
  6697  0043DC  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
  6698  0043DE  5010               	movf	(___aodiv@divisor+7)^0,w,c
  6699  0043E0  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
  6700  0043E2  A0D8               	btfss	status,0,c
  6701  0043E4  EFF6  F021         	goto	u3041
  6702  0043E8  EFF8  F021         	goto	u3040
  6703  0043EC                     u3041:
  6704  0043EC  EF09  F022         	goto	l3442
  6705  0043F0                     u3040:
  6706  0043F0  5009               	movf	___aodiv@divisor^0,w,c
  6707  0043F2  5E01               	subwf	___aodiv@dividend^0,f,c
  6708  0043F4  500A               	movf	(___aodiv@divisor+1)^0,w,c
  6709  0043F6  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
  6710  0043F8  500B               	movf	(___aodiv@divisor+2)^0,w,c
  6711  0043FA  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
  6712  0043FC  500C               	movf	(___aodiv@divisor+3)^0,w,c
  6713  0043FE  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
  6714  004400  500D               	movf	(___aodiv@divisor+4)^0,w,c
  6715  004402  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
  6716  004404  500E               	movf	(___aodiv@divisor+5)^0,w,c
  6717  004406  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
  6718  004408  500F               	movf	(___aodiv@divisor+6)^0,w,c
  6719  00440A  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
  6720  00440C  5010               	movf	(___aodiv@divisor+7)^0,w,c
  6721  00440E  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
  6722  004410  8013               	bsf	___aodiv@quotient^0,0,c
  6723  004412                     l3442:
  6724  004412  90D8               	bcf	status,0,c
  6725  004414  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
  6726  004416  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
  6727  004418  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
  6728  00441A  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
  6729  00441C  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
  6730  00441E  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
  6731  004420  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
  6732  004422  3209               	rrcf	___aodiv@divisor^0,f,c
  6733  004424  2E11               	decfsz	___aodiv@counter^0,f,c
  6734  004426  EFD8  F021         	goto	l3434
  6735  00442A                     l3446:
  6736  00442A  5012               	movf	___aodiv@sign^0,w,c
  6737  00442C  B4D8               	btfsc	status,2,c
  6738  00442E  EF1B  F022         	goto	u3051
  6739  004432  EF1D  F022         	goto	u3050
  6740  004436                     u3051:
  6741  004436  EF2D  F022         	goto	l3450
  6742  00443A                     u3050:
  6743  00443A  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
  6744  00443C  1E19               	comf	(___aodiv@quotient+6)^0,f,c
  6745  00443E  1E18               	comf	(___aodiv@quotient+5)^0,f,c
  6746  004440  1E17               	comf	(___aodiv@quotient+4)^0,f,c
  6747  004442  1E16               	comf	(___aodiv@quotient+3)^0,f,c
  6748  004444  1E15               	comf	(___aodiv@quotient+2)^0,f,c
  6749  004446  1E14               	comf	(___aodiv@quotient+1)^0,f,c
  6750  004448  6C13               	negf	___aodiv@quotient^0,c
  6751  00444A  0E00               	movlw	0
  6752  00444C  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
  6753  00444E  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
  6754  004450  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
  6755  004452  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
  6756  004454  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
  6757  004456  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
  6758  004458  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
  6759  00445A                     l3450:
  6760  00445A  C013  F001         	movff	___aodiv@quotient,?___aodiv
  6761  00445E  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  6762  004462  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  6763  004466  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  6764  00446A  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  6765  00446E  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  6766  004472  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  6767  004476  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  6768  00447A  0012               	return		;funcret
  6769  00447C                     __end_of___aodiv:
  6770                           	callstack 0
  6771                           
  6772 ;; *************** function _sendStringSerial4 *****************
  6773 ;; Defined at:
  6774 ;;		line 35 in file "serial.c"
  6775 ;; Parameters:    Size  Location     Type
  6776 ;;  string          2    1[COMRAM] PTR unsigned char 
  6777 ;;		 -> color_predict@buf(100), color_display@buf(100), 
  6778 ;; Auto vars:     Size  Location     Type
  6779 ;;		None
  6780 ;; Return value:  Size  Location     Type
  6781 ;;                  1    wreg      void 
  6782 ;; Registers used:
  6783 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6784 ;; Tracked objects:
  6785 ;;		On entry : 0/0
  6786 ;;		On exit  : 0/0
  6787 ;;		Unchanged: 0/0
  6788 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6789 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6790 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6791 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6792 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6793 ;;Total ram usage:        2 bytes
  6794 ;; Hardware stack levels used: 1
  6795 ;; Hardware stack levels required when called: 2
  6796 ;; This function calls:
  6797 ;;		_sendCharSerial4
  6798 ;; This function is called by:
  6799 ;;		_color_display
  6800 ;;		_color_predict
  6801 ;; This function uses a non-reentrant model
  6802 ;;
  6803                           
  6804                           	psect	text25
  6805  005AB4                     __ptext25:
  6806                           	callstack 0
  6807  005AB4                     _sendStringSerial4:
  6808                           	callstack 26
  6809  005AB4                     
  6810                           ;serial.c: 37:     while(*string != 0){
  6811  005AB4  EF65  F02D         	goto	l4162
  6812  005AB8                     l4158:
  6813                           
  6814                           ;serial.c: 38:   sendCharSerial4(*string++);}
  6815  005AB8  C002  FFD9         	movff	sendStringSerial4@string,fsr2l
  6816  005ABC  C003  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  6817  005AC0  50DF               	movf	indf2,w,c
  6818  005AC2  EC43  F02E         	call	_sendCharSerial4
  6819  005AC6  4A02               	infsnz	sendStringSerial4@string^0,f,c
  6820  005AC8  2A03               	incf	(sendStringSerial4@string+1)^0,f,c
  6821  005ACA                     l4162:
  6822                           
  6823                           ;serial.c: 37:     while(*string != 0){
  6824  005ACA  C002  FFD9         	movff	sendStringSerial4@string,fsr2l
  6825  005ACE  C003  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  6826  005AD2  50DF               	movf	indf2,w,c
  6827  005AD4  A4D8               	btfss	status,2,c
  6828  005AD6  EF6F  F02D         	goto	u4201
  6829  005ADA  EF71  F02D         	goto	u4200
  6830  005ADE                     u4201:
  6831  005ADE  EF5C  F02D         	goto	l4158
  6832  005AE2                     u4200:
  6833  005AE2  0012               	return		;funcret
  6834  005AE4                     __end_of_sendStringSerial4:
  6835                           	callstack 0
  6836                           
  6837 ;; *************** function _sendCharSerial4 *****************
  6838 ;; Defined at:
  6839 ;;		line 29 in file "serial.c"
  6840 ;; Parameters:    Size  Location     Type
  6841 ;;  charToSend      1    wreg     unsigned char 
  6842 ;; Auto vars:     Size  Location     Type
  6843 ;;  charToSend      1    0[COMRAM] unsigned char 
  6844 ;; Return value:  Size  Location     Type
  6845 ;;                  1    wreg      void 
  6846 ;; Registers used:
  6847 ;;		wreg
  6848 ;; Tracked objects:
  6849 ;;		On entry : 0/0
  6850 ;;		On exit  : 0/0
  6851 ;;		Unchanged: 0/0
  6852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6853 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6854 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6855 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6856 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6857 ;;Total ram usage:        1 bytes
  6858 ;; Hardware stack levels used: 1
  6859 ;; Hardware stack levels required when called: 1
  6860 ;; This function calls:
  6861 ;;		Nothing
  6862 ;; This function is called by:
  6863 ;;		_sendStringSerial4
  6864 ;; This function uses a non-reentrant model
  6865 ;;
  6866                           
  6867                           	psect	text26
  6868  005C86                     __ptext26:
  6869                           	callstack 0
  6870  005C86                     _sendCharSerial4:
  6871                           	callstack 26
  6872                           
  6873                           ;incstack = 0
  6874                           ;sendCharSerial4@charToSend stored from wreg
  6875  005C86  6E01               	movwf	sendCharSerial4@charToSend^0,c
  6876  005C88                     l337:
  6877  005C88  010E               	movlb	14	; () banked
  6878  005C8A  A537               	btfss	55,2,b	;volatile
  6879  005C8C  EF4A  F02E         	goto	u3931
  6880  005C90  EF4C  F02E         	goto	u3930
  6881  005C94                     u3931:
  6882  005C94  EF44  F02E         	goto	l337
  6883  005C98                     u3930:
  6884  005C98                     
  6885                           ; BSR set to: 14
  6886                           ;serial.c: 31:     TX4REG = charToSend;
  6887  005C98  C001  FEE4         	movff	sendCharSerial4@charToSend,3812	;volatile
  6888  005C9C                     
  6889                           ; BSR set to: 14
  6890  005C9C  0012               	return		;funcret
  6891  005C9E                     __end_of_sendCharSerial4:
  6892                           	callstack 0
  6893                           
  6894 ;; *************** function _short_burst *****************
  6895 ;; Defined at:
  6896 ;;		line 7 in file "movement.c"
  6897 ;; Parameters:    Size  Location     Type
  6898 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  6899 ;;		 -> main@motorL(9), 
  6900 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  6901 ;;		 -> main@motorR(9), 
  6902 ;; Auto vars:     Size  Location     Type
  6903 ;;		None
  6904 ;; Return value:  Size  Location     Type
  6905 ;;                  1    wreg      void 
  6906 ;; Registers used:
  6907 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6908 ;; Tracked objects:
  6909 ;;		On entry : 0/0
  6910 ;;		On exit  : 0/0
  6911 ;;		Unchanged: 0/0
  6912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6913 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6914 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6915 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6916 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6917 ;;Total ram usage:        6 bytes
  6918 ;; Hardware stack levels used: 1
  6919 ;; Hardware stack levels required when called: 4
  6920 ;; This function calls:
  6921 ;;		_fullSpeedAhead
  6922 ;;		_stop
  6923 ;; This function is called by:
  6924 ;;		_main
  6925 ;; This function uses a non-reentrant model
  6926 ;;
  6927                           
  6928                           	psect	text27
  6929  005866                     __ptext27:
  6930                           	callstack 0
  6931  005866                     _short_burst:
  6932                           	callstack 26
  6933  005866                     
  6934                           ;movement.c: 7: void short_burst(struct DC_motor *mL, struct DC_motor *mR);movement.c: 8
      +                          : {;movement.c: 9:     fullSpeedAhead(mL,mR);
  6935  005866  C020  F01A         	movff	short_burst@mL,fullSpeedAhead@mL
  6936  00586A  C021  F01B         	movff	short_burst@mL+1,fullSpeedAhead@mL+1
  6937  00586E  C022  F01C         	movff	short_burst@mR,fullSpeedAhead@mR
  6938  005872  C023  F01D         	movff	short_burst@mR+1,fullSpeedAhead@mR+1
  6939  005876  EC0B  F029         	call	_fullSpeedAhead	;wreg free
  6940  00587A                     
  6941                           ;movement.c: 10:     _delay((unsigned long)((400)*(64000000/4000.0)));
  6942  00587A  0E21               	movlw	33
  6943  00587C  6E25               	movwf	(??_short_burst+1)^0,c
  6944  00587E  0E78               	movlw	120
  6945  005880  6E24               	movwf	??_short_burst^0,c
  6946  005882  0E98               	movlw	152
  6947  005884                     u6027:
  6948  005884  2EE8               	decfsz	wreg,f,c
  6949  005886  D7FE               	bra	u6027
  6950  005888  2E24               	decfsz	??_short_burst^0,f,c
  6951  00588A  D7FC               	bra	u6027
  6952  00588C  2E25               	decfsz	(??_short_burst+1)^0,f,c
  6953  00588E  D7FA               	bra	u6027
  6954  005890  D000               	nop2	
  6955  005892                     
  6956                           ;movement.c: 11:     stop(mL,mR);
  6957  005892  C020  F01A         	movff	short_burst@mL,stop@mL
  6958  005896  C021  F01B         	movff	short_burst@mL+1,stop@mL+1
  6959  00589A  C022  F01C         	movff	short_burst@mR,stop@mR
  6960  00589E  C023  F01D         	movff	short_burst@mR+1,stop@mR+1
  6961  0058A2  ECCF  F029         	call	_stop	;wreg free
  6962  0058A6  0012               	return		;funcret
  6963  0058A8                     __end_of_short_burst:
  6964                           	callstack 0
  6965                           
  6966 ;; *************** function _setup *****************
  6967 ;; Defined at:
  6968 ;;		line 6 in file "test_and_calibration.c"
  6969 ;; Parameters:    Size  Location     Type
  6970 ;;  white           2    0[BANK0 ] PTR struct white_card
  6971 ;;		 -> main@white(28), 
  6972 ;;  amb             2    2[BANK0 ] PTR struct color_rgb
  6973 ;;		 -> main@amb(8), 
  6974 ;;  mL              2    4[BANK0 ] PTR struct DC_motor
  6975 ;;		 -> main@motorL(9), 
  6976 ;;  mR              2    6[BANK0 ] PTR struct DC_motor
  6977 ;;		 -> main@motorR(9), 
  6978 ;; Auto vars:     Size  Location     Type
  6979 ;;  amb_light       2    8[BANK0 ] unsigned int 
  6980 ;; Return value:  Size  Location     Type
  6981 ;;                  2    0[BANK0 ] unsigned int 
  6982 ;; Registers used:
  6983 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6984 ;; Tracked objects:
  6985 ;;		On entry : 0/0
  6986 ;;		On exit  : 0/0
  6987 ;;		Unchanged: 0/0
  6988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6989 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6990 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6991 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6992 ;;      Totals:         2      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6993 ;;Total ram usage:       12 bytes
  6994 ;; Hardware stack levels used: 1
  6995 ;; Hardware stack levels required when called: 7
  6996 ;; This function calls:
  6997 ;;		_LED_OFF
  6998 ;;		_amb_light_measure
  6999 ;;		_calibrate_white
  7000 ;;		_calibration_motor
  7001 ;; This function is called by:
  7002 ;;		_main
  7003 ;; This function uses a non-reentrant model
  7004 ;;
  7005                           
  7006                           	psect	text28
  7007  004734                     __ptext28:
  7008                           	callstack 0
  7009  004734                     _setup:
  7010                           	callstack 23
  7011  004734                     
  7012                           ;test_and_calibration.c: 6: unsigned int setup(struct white_card *white,struct color_rgb
      +                          *amb,struct DC_motor *mL, struct DC_motor *mR);test_and_calibration.c: 7: {;test_and_cal
      +                          ibration.c: 8:     unsigned int amb_light = 0;
  7013  004734  0E00               	movlw	0
  7014  004736  0100               	movlb	0	; () banked
  7015  004738  6F69               	movwf	(setup@amb_light+1)& (0+255),b
  7016  00473A  0E00               	movlw	0
  7017  00473C  6F68               	movwf	setup@amb_light& (0+255),b
  7018  00473E                     
  7019                           ; BSR set to: 0
  7020                           ;test_and_calibration.c: 9:     LED_OFF();
  7021  00473E  ECD5  F02D         	call	_LED_OFF	;wreg free
  7022  004742                     
  7023                           ;test_and_calibration.c: 10:     LATDbits.LATD7 = 1;
  7024  004742  8E7C               	bsf	124,7,c	;volatile
  7025  004744                     
  7026                           ;test_and_calibration.c: 11:     LATHbits.LATH3 = 1;
  7027  004744  8680               	bsf	128,3,c	;volatile
  7028  004746                     l557:
  7029  004746  B48E               	btfsc	142,2,c	;volatile
  7030  004748  EFA8  F023         	goto	u5511
  7031  00474C  EFAA  F023         	goto	u5510
  7032  004750                     u5511:
  7033  004750  EFA3  F023         	goto	l557
  7034  004754                     u5510:
  7035  004754                     
  7036                           ;test_and_calibration.c: 14:     if (!PORTFbits.RF2){calibrate_white(white); LATDbits.LA
      +                          TD7 = 0; _delay((unsigned long)((500)*(64000000/4000.0)));}
  7037  004754  B48E               	btfsc	142,2,c	;volatile
  7038  004756  EFAF  F023         	goto	u5521
  7039  00475A  EFB1  F023         	goto	u5520
  7040  00475E                     u5521:
  7041  00475E  EFC4  F023         	goto	l561
  7042  004762                     u5520:
  7043  004762  C060  F00C         	movff	setup@white,calibrate_white@w
  7044  004766  C061  F00D         	movff	setup@white+1,calibrate_white@w+1
  7045  00476A  EC27  F01C         	call	_calibrate_white	;wreg free
  7046  00476E  9E7C               	bcf	124,7,c	;volatile
  7047  004770  0E29               	movlw	41
  7048  004772  6E5D               	movwf	(??_setup+1)^0,c
  7049  004774  0E96               	movlw	150
  7050  004776  6E5C               	movwf	??_setup^0,c
  7051  004778  0E7F               	movlw	127
  7052  00477A                     u6037:
  7053  00477A  2EE8               	decfsz	wreg,f,c
  7054  00477C  D7FE               	bra	u6037
  7055  00477E  2E5C               	decfsz	??_setup^0,f,c
  7056  004780  D7FC               	bra	u6037
  7057  004782  2E5D               	decfsz	(??_setup+1)^0,f,c
  7058  004784  D7FA               	bra	u6037
  7059  004786  F000               	nop	
  7060  004788                     l561:
  7061  004788  B68E               	btfsc	142,3,c	;volatile
  7062  00478A  EFC9  F023         	goto	u5531
  7063  00478E  EFCB  F023         	goto	u5530
  7064  004792                     u5531:
  7065  004792  EFC4  F023         	goto	l561
  7066  004796                     u5530:
  7067  004796                     
  7068                           ;test_and_calibration.c: 17:     if (!PORTFbits.RF3){amb_light = amb_light_measure(amb);
      +                           LATHbits.LATH3 = 0; _delay((unsigned long)((500)*(64000000/4000.0)));}
  7069  004796  B68E               	btfsc	142,3,c	;volatile
  7070  004798  EFD0  F023         	goto	u5541
  7071  00479C  EFD2  F023         	goto	u5540
  7072  0047A0                     u5541:
  7073  0047A0  EF0A  F024         	goto	l5110
  7074  0047A4                     u5540:
  7075  0047A4  C062  F050         	movff	setup@amb,amb_light_measure@amb
  7076  0047A8  C063  F051         	movff	setup@amb+1,amb_light_measure@amb+1
  7077  0047AC  ECDB  F024         	call	_amb_light_measure	;wreg free
  7078  0047B0  C050  F068         	movff	?_amb_light_measure,setup@amb_light
  7079  0047B4  C051  F069         	movff	?_amb_light_measure+1,setup@amb_light+1
  7080  0047B8  9680               	bcf	128,3,c	;volatile
  7081  0047BA  0E29               	movlw	41
  7082  0047BC  6E5D               	movwf	(??_setup+1)^0,c
  7083  0047BE  0E96               	movlw	150
  7084  0047C0  6E5C               	movwf	??_setup^0,c
  7085  0047C2  0E7F               	movlw	127
  7086  0047C4                     u6047:
  7087  0047C4  2EE8               	decfsz	wreg,f,c
  7088  0047C6  D7FE               	bra	u6047
  7089  0047C8  2E5C               	decfsz	??_setup^0,f,c
  7090  0047CA  D7FC               	bra	u6047
  7091  0047CC  2E5D               	decfsz	(??_setup+1)^0,f,c
  7092  0047CE  D7FA               	bra	u6047
  7093  0047D0  F000               	nop	
  7094  0047D2  EF0A  F024         	goto	l5110
  7095  0047D6                     l567:
  7096  0047D6  8E7C               	bsf	124,7,c	;volatile
  7097  0047D8  A680               	btfss	128,3,c	;volatile
  7098  0047DA  EFF1  F023         	goto	u5551
  7099  0047DE  EFF5  F023         	goto	u5550
  7100  0047E2                     u5551:
  7101  0047E2  6A5C               	clrf	??_setup^0,c
  7102  0047E4  2A5C               	incf	??_setup^0,f,c
  7103  0047E6  EFF6  F023         	goto	u5568
  7104  0047EA                     u5550:
  7105  0047EA  6A5C               	clrf	??_setup^0,c
  7106  0047EC                     u5568:
  7107  0047EC  465C               	rlncf	??_setup^0,f,c
  7108  0047EE  465C               	rlncf	??_setup^0,f,c
  7109  0047F0  465C               	rlncf	??_setup^0,f,c
  7110  0047F2  5080               	movf	128,w,c	;volatile
  7111  0047F4  185C               	xorwf	??_setup^0,w,c
  7112  0047F6  0BF7               	andlw	-9
  7113  0047F8  185C               	xorwf	??_setup^0,w,c
  7114  0047FA  6E80               	movwf	128,c	;volatile
  7115  0047FC  0E11               	movlw	17
  7116  0047FE  6E5D               	movwf	(??_setup+1)^0,c
  7117  004800  0E3C               	movlw	60
  7118  004802  6E5C               	movwf	??_setup^0,c
  7119  004804  0ECB               	movlw	203
  7120  004806                     u6057:
  7121  004806  2EE8               	decfsz	wreg,f,c
  7122  004808  D7FE               	bra	u6057
  7123  00480A  2E5C               	decfsz	??_setup^0,f,c
  7124  00480C  D7FC               	bra	u6057
  7125  00480E  2E5D               	decfsz	(??_setup+1)^0,f,c
  7126  004810  D7FA               	bra	u6057
  7127  004812  F000               	nop	
  7128  004814                     l5110:
  7129  004814  A68E               	btfss	142,3,c	;volatile
  7130  004816  EF0F  F024         	goto	u5571
  7131  00481A  EF11  F024         	goto	u5570
  7132  00481E                     u5571:
  7133  00481E  EF18  F024         	goto	l570
  7134  004822                     u5570:
  7135  004822  B48E               	btfsc	142,2,c	;volatile
  7136  004824  EF16  F024         	goto	u5581
  7137  004828  EF18  F024         	goto	u5580
  7138  00482C                     u5581:
  7139  00482C  EFEB  F023         	goto	l567
  7140  004830                     u5580:
  7141  004830                     l570:
  7142                           
  7143                           ;test_and_calibration.c: 20:         if (!PORTFbits.RF3){calibration_motor(mL,mR); LATDb
      +                          its.LATD7 = 0;}
  7144  004830  B68E               	btfsc	142,3,c	;volatile
  7145  004832  EF1D  F024         	goto	u5591
  7146  004836  EF1F  F024         	goto	u5590
  7147  00483A                     u5591:
  7148  00483A  EF2A  F024         	goto	l5118
  7149  00483E                     u5590:
  7150  00483E  C064  F033         	movff	setup@mL,calibration_motor@mL
  7151  004842  C065  F034         	movff	setup@mL+1,calibration_motor@mL+1
  7152  004846  C066  F035         	movff	setup@mR,calibration_motor@mR
  7153  00484A  C067  F036         	movff	setup@mR+1,calibration_motor@mR+1
  7154  00484E  ECF5  F026         	call	_calibration_motor	;wreg free
  7155  004852  9E7C               	bcf	124,7,c	;volatile
  7156  004854                     l5118:
  7157                           
  7158                           ;test_and_calibration.c: 21:         if (!PORTFbits.RF2){LATDbits.LATD7 = 0; LATHbits.LA
      +                          TH3 = 0; _delay((unsigned long)((500)*(64000000/4000.0))); return amb_light;}
  7159  004854  B48E               	btfsc	142,2,c	;volatile
  7160  004856  EF2F  F024         	goto	u5601
  7161  00485A  EF31  F024         	goto	u5600
  7162  00485E                     u5601:
  7163  00485E  EF0A  F024         	goto	l5110
  7164  004862                     u5600:
  7165  004862  9E7C               	bcf	124,7,c	;volatile
  7166  004864  9680               	bcf	128,3,c	;volatile
  7167  004866  0E29               	movlw	41
  7168  004868  6E5D               	movwf	(??_setup+1)^0,c
  7169  00486A  0E96               	movlw	150
  7170  00486C  6E5C               	movwf	??_setup^0,c
  7171  00486E  0E7F               	movlw	127
  7172  004870                     u6067:
  7173  004870  2EE8               	decfsz	wreg,f,c
  7174  004872  D7FE               	bra	u6067
  7175  004874  2E5C               	decfsz	??_setup^0,f,c
  7176  004876  D7FC               	bra	u6067
  7177  004878  2E5D               	decfsz	(??_setup+1)^0,f,c
  7178  00487A  D7FA               	bra	u6067
  7179  00487C  F000               	nop	
  7180  00487E  C068  F060         	movff	setup@amb_light,?_setup
  7181  004882  C069  F061         	movff	setup@amb_light+1,?_setup+1
  7182  004886  0012               	return		;funcret
  7183  004888                     __end_of_setup:
  7184                           	callstack 0
  7185                           
  7186 ;; *************** function _calibration_motor *****************
  7187 ;; Defined at:
  7188 ;;		line 93 in file "test_and_calibration.c"
  7189 ;; Parameters:    Size  Location     Type
  7190 ;;  mL              2   50[COMRAM] PTR struct DC_motor
  7191 ;;		 -> main@motorL(9), 
  7192 ;;  mR              2   52[COMRAM] PTR struct DC_motor
  7193 ;;		 -> main@motorR(9), 
  7194 ;; Auto vars:     Size  Location     Type
  7195 ;;		None
  7196 ;; Return value:  Size  Location     Type
  7197 ;;                  1    wreg      void 
  7198 ;; Registers used:
  7199 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7200 ;; Tracked objects:
  7201 ;;		On entry : 0/0
  7202 ;;		On exit  : 0/0
  7203 ;;		Unchanged: 0/0
  7204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7205 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7206 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7207 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7208 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7209 ;;Total ram usage:        6 bytes
  7210 ;; Hardware stack levels used: 1
  7211 ;; Hardware stack levels required when called: 6
  7212 ;; This function calls:
  7213 ;;		_test_action
  7214 ;; This function is called by:
  7215 ;;		_setup
  7216 ;; This function uses a non-reentrant model
  7217 ;;
  7218                           
  7219                           	psect	text29
  7220  004DEA                     __ptext29:
  7221                           	callstack 0
  7222  004DEA                     _calibration_motor:
  7223                           	callstack 23
  7224  004DEA                     l600:
  7225                           
  7226                           ;test_and_calibration.c: 96:         LATDbits.LATD7 = 1;
  7227  004DEA  8E7C               	bsf	124,7,c	;volatile
  7228                           
  7229                           ;test_and_calibration.c: 97:         LATHbits.LATH3 = 1;
  7230  004DEC  8680               	bsf	128,3,c	;volatile
  7231                           
  7232                           ;test_and_calibration.c: 98:         if (!PORTFbits.RF2) {
  7233  004DEE  B48E               	btfsc	142,2,c	;volatile
  7234  004DF0  EFFC  F026         	goto	u5441
  7235  004DF4  EFFE  F026         	goto	u5440
  7236  004DF8                     u5441:
  7237  004DF8  EF2A  F027         	goto	l601
  7238  004DFC                     u5440:
  7239  004DFC                     
  7240                           ;test_and_calibration.c: 99:             _delay((unsigned long)((300)*(64000000/4000.0))
      +                          );
  7241  004DFC  0E19               	movlw	25
  7242  004DFE  6E38               	movwf	(??_calibration_motor+1)^0,c
  7243  004E00  0E5A               	movlw	90
  7244  004E02  6E37               	movwf	??_calibration_motor^0,c
  7245  004E04  0EB2               	movlw	178
  7246  004E06                     u6077:
  7247  004E06  2EE8               	decfsz	wreg,f,c
  7248  004E08  D7FE               	bra	u6077
  7249  004E0A  2E37               	decfsz	??_calibration_motor^0,f,c
  7250  004E0C  D7FC               	bra	u6077
  7251  004E0E  2E38               	decfsz	(??_calibration_motor+1)^0,f,c
  7252  004E10  D7FA               	bra	u6077
  7253  004E12                     
  7254                           ;test_and_calibration.c: 100:             if (!PORTFbits.RF2){LATDbits.LATD7 = 0; _delay
      +                          ((unsigned long)((300)*(64000000/4000.0))); SENSITIVITY += 5; }
  7255  004E12  B48E               	btfsc	142,2,c	;volatile
  7256  004E14  EF0E  F027         	goto	u5451
  7257  004E18  EF10  F027         	goto	u5450
  7258  004E1C                     u5451:
  7259  004E1C  EF21  F027         	goto	l4994
  7260  004E20                     u5450:
  7261  004E20  9E7C               	bcf	124,7,c	;volatile
  7262  004E22  0E19               	movlw	25
  7263  004E24  6E38               	movwf	(??_calibration_motor+1)^0,c
  7264  004E26  0E5A               	movlw	90
  7265  004E28  6E37               	movwf	??_calibration_motor^0,c
  7266  004E2A  0EB2               	movlw	178
  7267  004E2C                     u6087:
  7268  004E2C  2EE8               	decfsz	wreg,f,c
  7269  004E2E  D7FE               	bra	u6087
  7270  004E30  2E37               	decfsz	??_calibration_motor^0,f,c
  7271  004E32  D7FC               	bra	u6087
  7272  004E34  2E38               	decfsz	(??_calibration_motor+1)^0,f,c
  7273  004E36  D7FA               	bra	u6087
  7274  004E38  0E05               	movlw	5
  7275  004E3A  0100               	movlb	0	; () banked
  7276  004E3C  27FC               	addwf	_SENSITIVITY& (0+255),f,b
  7277  004E3E  0E00               	movlw	0
  7278  004E40  23FD               	addwfc	(_SENSITIVITY+1)& (0+255),f,b
  7279  004E42                     l4994:
  7280                           
  7281                           ;test_and_calibration.c: 101:             if (!PORTFbits.RF3){break;}
  7282  004E42  B68E               	btfsc	142,3,c	;volatile
  7283  004E44  EF26  F027         	goto	u5461
  7284  004E48  EF28  F027         	goto	u5460
  7285  004E4C                     u5461:
  7286  004E4C  EF2A  F027         	goto	l601
  7287  004E50                     u5460:
  7288  004E50  EF5F  F027         	goto	l604
  7289  004E54                     l601:
  7290                           
  7291                           ;test_and_calibration.c: 103:         if (!PORTFbits.RF3) {
  7292  004E54  B68E               	btfsc	142,3,c	;volatile
  7293  004E56  EF2F  F027         	goto	u5471
  7294  004E5A  EF31  F027         	goto	u5470
  7295  004E5E                     u5471:
  7296  004E5E  EFF5  F026         	goto	l600
  7297  004E62                     u5470:
  7298  004E62                     
  7299                           ;test_and_calibration.c: 104:             _delay((unsigned long)((300)*(64000000/4000.0)
      +                          ));
  7300  004E62  0E19               	movlw	25
  7301  004E64  6E38               	movwf	(??_calibration_motor+1)^0,c
  7302  004E66  0E5A               	movlw	90
  7303  004E68  6E37               	movwf	??_calibration_motor^0,c
  7304  004E6A  0EB2               	movlw	178
  7305  004E6C                     u6097:
  7306  004E6C  2EE8               	decfsz	wreg,f,c
  7307  004E6E  D7FE               	bra	u6097
  7308  004E70  2E37               	decfsz	??_calibration_motor^0,f,c
  7309  004E72  D7FC               	bra	u6097
  7310  004E74  2E38               	decfsz	(??_calibration_motor+1)^0,f,c
  7311  004E76  D7FA               	bra	u6097
  7312  004E78                     
  7313                           ;test_and_calibration.c: 105:             if (!PORTFbits.RF2){break;}
  7314  004E78  B48E               	btfsc	142,2,c	;volatile
  7315  004E7A  EF41  F027         	goto	u5481
  7316  004E7E  EF43  F027         	goto	u5480
  7317  004E82                     u5481:
  7318  004E82  EF45  F027         	goto	l606
  7319  004E86                     u5480:
  7320  004E86  EF5F  F027         	goto	l604
  7321  004E8A                     l606:
  7322                           
  7323                           ;test_and_calibration.c: 106:             if (!PORTFbits.RF3){LATHbits.LATH3 = 0; _delay
      +                          ((unsigned long)((300)*(64000000/4000.0))); SENSITIVITY -= 5; }
  7324  004E8A  B68E               	btfsc	142,3,c	;volatile
  7325  004E8C  EF4A  F027         	goto	u5491
  7326  004E90  EF4C  F027         	goto	u5490
  7327  004E94                     u5491:
  7328  004E94  EFF5  F026         	goto	l600
  7329  004E98                     u5490:
  7330  004E98  9680               	bcf	128,3,c	;volatile
  7331  004E9A  0E19               	movlw	25
  7332  004E9C  6E38               	movwf	(??_calibration_motor+1)^0,c
  7333  004E9E  0E5A               	movlw	90
  7334  004EA0  6E37               	movwf	??_calibration_motor^0,c
  7335  004EA2  0EB2               	movlw	178
  7336  004EA4                     u6107:
  7337  004EA4  2EE8               	decfsz	wreg,f,c
  7338  004EA6  D7FE               	bra	u6107
  7339  004EA8  2E37               	decfsz	??_calibration_motor^0,f,c
  7340  004EAA  D7FC               	bra	u6107
  7341  004EAC  2E38               	decfsz	(??_calibration_motor+1)^0,f,c
  7342  004EAE  D7FA               	bra	u6107
  7343  004EB0  0E05               	movlw	5
  7344  004EB2  0100               	movlb	0	; () banked
  7345  004EB4  5FFC               	subwf	_SENSITIVITY& (0+255),f,b
  7346  004EB6  0E00               	movlw	0
  7347  004EB8  5BFD               	subwfb	(_SENSITIVITY+1)& (0+255),f,b
  7348  004EBA  EFF5  F026         	goto	l600
  7349  004EBE                     l604:
  7350                           
  7351                           ;test_and_calibration.c: 109:     LATDbits.LATD7 = 0;
  7352  004EBE  9E7C               	bcf	124,7,c	;volatile
  7353                           
  7354                           ;test_and_calibration.c: 110:     LATHbits.LATH3 = 0;
  7355  004EC0  9680               	bcf	128,3,c	;volatile
  7356  004EC2                     
  7357                           ;test_and_calibration.c: 111:     test_action(mL, mR);
  7358  004EC2  C033  F02D         	movff	calibration_motor@mL,test_action@mL
  7359  004EC6  C034  F02E         	movff	calibration_motor@mL+1,test_action@mL+1
  7360  004ECA  C035  F02F         	movff	calibration_motor@mR,test_action@mR
  7361  004ECE  C036  F030         	movff	calibration_motor@mR+1,test_action@mR+1
  7362  004ED2  EC44  F024         	call	_test_action	;wreg free
  7363  004ED6  0012               	return		;funcret
  7364  004ED8                     __end_of_calibration_motor:
  7365                           	callstack 0
  7366                           
  7367 ;; *************** function _test_action *****************
  7368 ;; Defined at:
  7369 ;;		line 28 in file "test_and_calibration.c"
  7370 ;; Parameters:    Size  Location     Type
  7371 ;;  mL              2   44[COMRAM] PTR struct DC_motor
  7372 ;;		 -> main@motorL(9), 
  7373 ;;  mR              2   46[COMRAM] PTR struct DC_motor
  7374 ;;		 -> main@motorR(9), 
  7375 ;; Auto vars:     Size  Location     Type
  7376 ;;		None
  7377 ;; Return value:  Size  Location     Type
  7378 ;;                  1    wreg      void 
  7379 ;; Registers used:
  7380 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7381 ;; Tracked objects:
  7382 ;;		On entry : 0/0
  7383 ;;		On exit  : 0/0
  7384 ;;		Unchanged: 0/0
  7385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7386 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7387 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7388 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7389 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7390 ;;Total ram usage:        6 bytes
  7391 ;; Hardware stack levels used: 1
  7392 ;; Hardware stack levels required when called: 5
  7393 ;; This function calls:
  7394 ;;		_fullSpeedAhead
  7395 ;;		_stop
  7396 ;;		_turn45
  7397 ;; This function is called by:
  7398 ;;		_test_function
  7399 ;;		_calibration_motor
  7400 ;; This function uses a non-reentrant model
  7401 ;;
  7402                           
  7403                           	psect	text30
  7404  004888                     __ptext30:
  7405                           	callstack 0
  7406  004888                     _test_action:
  7407                           	callstack 24
  7408  004888                     
  7409                           ;test_and_calibration.c: 28: void test_action(struct DC_motor *mL, struct DC_motor *mR);
      +                          test_and_calibration.c: 29: {;test_and_calibration.c: 30:     stop(mL,mR);
  7410  004888  C02D  F01A         	movff	test_action@mL,stop@mL
  7411  00488C  C02E  F01B         	movff	test_action@mL+1,stop@mL+1
  7412  004890  C02F  F01C         	movff	test_action@mR,stop@mR
  7413  004894  C030  F01D         	movff	test_action@mR+1,stop@mR+1
  7414  004898  ECCF  F029         	call	_stop	;wreg free
  7415  00489C                     
  7416                           ;test_and_calibration.c: 31:     _delay((unsigned long)((2000)*(64000000/4000.0)));
  7417  00489C  0EA3               	movlw	163
  7418  00489E  6E32               	movwf	(??_test_action+1)^0,c
  7419  0048A0  0E57               	movlw	87
  7420  0048A2  6E31               	movwf	??_test_action^0,c
  7421  0048A4  0E02               	movlw	2
  7422  0048A6                     u6117:
  7423  0048A6  2EE8               	decfsz	wreg,f,c
  7424  0048A8  D7FE               	bra	u6117
  7425  0048AA  2E31               	decfsz	??_test_action^0,f,c
  7426  0048AC  D7FC               	bra	u6117
  7427  0048AE  2E32               	decfsz	(??_test_action+1)^0,f,c
  7428  0048B0  D7FA               	bra	u6117
  7429  0048B2  D000               	nop2	
  7430  0048B4                     
  7431                           ;test_and_calibration.c: 32:     turn45(mL,mR,8,1);
  7432  0048B4  C02D  F020         	movff	test_action@mL,turn45@mL
  7433  0048B8  C02E  F021         	movff	test_action@mL+1,turn45@mL+1
  7434  0048BC  C02F  F022         	movff	test_action@mR,turn45@mR
  7435  0048C0  C030  F023         	movff	test_action@mR+1,turn45@mR+1
  7436  0048C4  0E08               	movlw	8
  7437  0048C6  6E24               	movwf	turn45@turn_time^0,c
  7438  0048C8  0E01               	movlw	1
  7439  0048CA  6E25               	movwf	turn45@direction^0,c
  7440  0048CC  ECA2  F020         	call	_turn45	;wreg free
  7441  0048D0                     
  7442                           ;test_and_calibration.c: 33:     stop(mL,mR);
  7443  0048D0  C02D  F01A         	movff	test_action@mL,stop@mL
  7444  0048D4  C02E  F01B         	movff	test_action@mL+1,stop@mL+1
  7445  0048D8  C02F  F01C         	movff	test_action@mR,stop@mR
  7446  0048DC  C030  F01D         	movff	test_action@mR+1,stop@mR+1
  7447  0048E0  ECCF  F029         	call	_stop	;wreg free
  7448  0048E4                     
  7449                           ;test_and_calibration.c: 34:     _delay((unsigned long)((2000)*(64000000/4000.0)));
  7450  0048E4  0EA3               	movlw	163
  7451  0048E6  6E32               	movwf	(??_test_action+1)^0,c
  7452  0048E8  0E57               	movlw	87
  7453  0048EA  6E31               	movwf	??_test_action^0,c
  7454  0048EC  0E02               	movlw	2
  7455  0048EE                     u6127:
  7456  0048EE  2EE8               	decfsz	wreg,f,c
  7457  0048F0  D7FE               	bra	u6127
  7458  0048F2  2E31               	decfsz	??_test_action^0,f,c
  7459  0048F4  D7FC               	bra	u6127
  7460  0048F6  2E32               	decfsz	(??_test_action+1)^0,f,c
  7461  0048F8  D7FA               	bra	u6127
  7462  0048FA  D000               	nop2	
  7463                           
  7464                           ;test_and_calibration.c: 35:     turn45(mL,mR,8,2);
  7465  0048FC  C02D  F020         	movff	test_action@mL,turn45@mL
  7466  004900  C02E  F021         	movff	test_action@mL+1,turn45@mL+1
  7467  004904  C02F  F022         	movff	test_action@mR,turn45@mR
  7468  004908  C030  F023         	movff	test_action@mR+1,turn45@mR+1
  7469  00490C  0E08               	movlw	8
  7470  00490E  6E24               	movwf	turn45@turn_time^0,c
  7471  004910  0E02               	movlw	2
  7472  004912  6E25               	movwf	turn45@direction^0,c
  7473  004914  ECA2  F020         	call	_turn45	;wreg free
  7474                           
  7475                           ;test_and_calibration.c: 36:     fullSpeedAhead(mL,mR);
  7476  004918  C02D  F01A         	movff	test_action@mL,fullSpeedAhead@mL
  7477  00491C  C02E  F01B         	movff	test_action@mL+1,fullSpeedAhead@mL+1
  7478  004920  C02F  F01C         	movff	test_action@mR,fullSpeedAhead@mR
  7479  004924  C030  F01D         	movff	test_action@mR+1,fullSpeedAhead@mR+1
  7480  004928  EC0B  F029         	call	_fullSpeedAhead	;wreg free
  7481  00492C                     
  7482                           ;test_and_calibration.c: 37:     _delay((unsigned long)((3000)*(64000000/4000.0)));
  7483  00492C  0EF4               	movlw	244
  7484  00492E  6E32               	movwf	(??_test_action+1)^0,c
  7485  004930  0E82               	movlw	130
  7486  004932  6E31               	movwf	??_test_action^0,c
  7487  004934  0E05               	movlw	5
  7488  004936                     u6137:
  7489  004936  2EE8               	decfsz	wreg,f,c
  7490  004938  D7FE               	bra	u6137
  7491  00493A  2E31               	decfsz	??_test_action^0,f,c
  7492  00493C  D7FC               	bra	u6137
  7493  00493E  2E32               	decfsz	(??_test_action+1)^0,f,c
  7494  004940  D7FA               	bra	u6137
  7495  004942  F000               	nop	
  7496  004944                     
  7497                           ;test_and_calibration.c: 38:     stop(mL,mR);
  7498  004944  C02D  F01A         	movff	test_action@mL,stop@mL
  7499  004948  C02E  F01B         	movff	test_action@mL+1,stop@mL+1
  7500  00494C  C02F  F01C         	movff	test_action@mR,stop@mR
  7501  004950  C030  F01D         	movff	test_action@mR+1,stop@mR+1
  7502  004954  ECCF  F029         	call	_stop	;wreg free
  7503  004958                     
  7504                           ;test_and_calibration.c: 39:     turn45(mL,mR,4,1);
  7505  004958  C02D  F020         	movff	test_action@mL,turn45@mL
  7506  00495C  C02E  F021         	movff	test_action@mL+1,turn45@mL+1
  7507  004960  C02F  F022         	movff	test_action@mR,turn45@mR
  7508  004964  C030  F023         	movff	test_action@mR+1,turn45@mR+1
  7509  004968  0E04               	movlw	4
  7510  00496A  6E24               	movwf	turn45@turn_time^0,c
  7511  00496C  0E01               	movlw	1
  7512  00496E  6E25               	movwf	turn45@direction^0,c
  7513  004970  ECA2  F020         	call	_turn45	;wreg free
  7514  004974                     
  7515                           ;test_and_calibration.c: 40:     fullSpeedAhead(mL,mR);
  7516  004974  C02D  F01A         	movff	test_action@mL,fullSpeedAhead@mL
  7517  004978  C02E  F01B         	movff	test_action@mL+1,fullSpeedAhead@mL+1
  7518  00497C  C02F  F01C         	movff	test_action@mR,fullSpeedAhead@mR
  7519  004980  C030  F01D         	movff	test_action@mR+1,fullSpeedAhead@mR+1
  7520  004984  EC0B  F029         	call	_fullSpeedAhead	;wreg free
  7521                           
  7522                           ;test_and_calibration.c: 41:     _delay((unsigned long)((3000)*(64000000/4000.0)));
  7523  004988  0EF4               	movlw	244
  7524  00498A  6E32               	movwf	(??_test_action+1)^0,c
  7525  00498C  0E82               	movlw	130
  7526  00498E  6E31               	movwf	??_test_action^0,c
  7527  004990  0E05               	movlw	5
  7528  004992                     u6147:
  7529  004992  2EE8               	decfsz	wreg,f,c
  7530  004994  D7FE               	bra	u6147
  7531  004996  2E31               	decfsz	??_test_action^0,f,c
  7532  004998  D7FC               	bra	u6147
  7533  00499A  2E32               	decfsz	(??_test_action+1)^0,f,c
  7534  00499C  D7FA               	bra	u6147
  7535  00499E  F000               	nop	
  7536  0049A0                     
  7537                           ;test_and_calibration.c: 42:     stop(mL,mR);
  7538  0049A0  C02D  F01A         	movff	test_action@mL,stop@mL
  7539  0049A4  C02E  F01B         	movff	test_action@mL+1,stop@mL+1
  7540  0049A8  C02F  F01C         	movff	test_action@mR,stop@mR
  7541  0049AC  C030  F01D         	movff	test_action@mR+1,stop@mR+1
  7542  0049B0  ECCF  F029         	call	_stop	;wreg free
  7543  0049B4  0012               	return		;funcret
  7544  0049B6                     __end_of_test_action:
  7545                           	callstack 0
  7546                           
  7547 ;; *************** function _turn45 *****************
  7548 ;; Defined at:
  7549 ;;		line 88 in file "dc_motor.c"
  7550 ;; Parameters:    Size  Location     Type
  7551 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  7552 ;;		 -> main@motorL(9), 
  7553 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  7554 ;;		 -> main@motorR(9), 
  7555 ;;  turn_time       1   35[COMRAM] unsigned char 
  7556 ;;  direction       1   36[COMRAM] unsigned char 
  7557 ;; Auto vars:     Size  Location     Type
  7558 ;;  i               2   41[COMRAM] unsigned int 
  7559 ;;  i               2   39[COMRAM] unsigned int 
  7560 ;;  i               1   43[COMRAM] unsigned char 
  7561 ;; Return value:  Size  Location     Type
  7562 ;;                  1    wreg      void 
  7563 ;; Registers used:
  7564 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7565 ;; Tracked objects:
  7566 ;;		On entry : 0/0
  7567 ;;		On exit  : 0/0
  7568 ;;		Unchanged: 0/0
  7569 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7570 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7571 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7572 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7573 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7574 ;;Total ram usage:       13 bytes
  7575 ;; Hardware stack levels used: 1
  7576 ;; Hardware stack levels required when called: 4
  7577 ;; This function calls:
  7578 ;;		_setMotorPWM
  7579 ;;		_stop
  7580 ;; This function is called by:
  7581 ;;		_turning_action
  7582 ;;		_goback
  7583 ;;		_test_action
  7584 ;; This function uses a non-reentrant model
  7585 ;;
  7586                           
  7587                           	psect	text31
  7588  004144                     __ptext31:
  7589                           	callstack 0
  7590  004144                     _turn45:
  7591                           	callstack 25
  7592  004144                     
  7593                           ;dc_motor.c: 88: void turn45(struct DC_motor *mL, struct DC_motor *mR, unsigned char tur
      +                          n_time, unsigned char direction);dc_motor.c: 89: {;dc_motor.c: 91:     unsigned char i =
      +                           0;
  7594  004144  0E00               	movlw	0
  7595  004146  6E2C               	movwf	turn45@i^0,c
  7596                           
  7597                           ;dc_motor.c: 92:     for (i = 0; i < turn_time; i++){
  7598  004148  0E00               	movlw	0
  7599  00414A  6E2C               	movwf	turn45@i^0,c
  7600  00414C  EF70  F021         	goto	l4214
  7601  004150                     l4166:
  7602                           
  7603                           ;dc_motor.c: 93:         mL->direction=1;
  7604  004150  EE20 F001          	lfsr	2,1
  7605  004154  5020               	movf	turn45@mL^0,w,c
  7606  004156  26D9               	addwf	fsr2l,f,c
  7607  004158  5021               	movf	(turn45@mL+1)^0,w,c
  7608  00415A  22DA               	addwfc	fsr2h,f,c
  7609  00415C  0E01               	movlw	1
  7610  00415E  6EDF               	movwf	indf2,c
  7611                           
  7612                           ;dc_motor.c: 94:         mR->direction=1;
  7613  004160  EE20 F001          	lfsr	2,1
  7614  004164  5022               	movf	turn45@mR^0,w,c
  7615  004166  26D9               	addwf	fsr2l,f,c
  7616  004168  5023               	movf	(turn45@mR+1)^0,w,c
  7617  00416A  22DA               	addwfc	fsr2h,f,c
  7618  00416C  0E01               	movlw	1
  7619  00416E  6EDF               	movwf	indf2,c
  7620  004170                     
  7621                           ;dc_motor.c: 95:         if (direction == 1){
  7622  004170  0425               	decf	turn45@direction^0,w,c
  7623  004172  A4D8               	btfss	status,2,c
  7624  004174  EFBE  F020         	goto	u4211
  7625  004178  EFC0  F020         	goto	u4210
  7626  00417C                     u4211:
  7627  00417C  EF1B  F021         	goto	l4190
  7628  004180                     u4210:
  7629  004180  EFE1  F020         	goto	l4180
  7630  004184                     l4172:
  7631                           
  7632                           ;dc_motor.c: 97:                 mR->power += 5;
  7633  004184  C022  FFD9         	movff	turn45@mR,fsr2l
  7634  004188  C023  FFDA         	movff	turn45@mR+1,fsr2h
  7635  00418C  0E05               	movlw	5
  7636  00418E  26DF               	addwf	indf2,f,c
  7637                           
  7638                           ;dc_motor.c: 98:                 mL->power = 0;
  7639  004190  C020  FFD9         	movff	turn45@mL,fsr2l
  7640  004194  C021  FFDA         	movff	turn45@mL+1,fsr2h
  7641  004198  0E00               	movlw	0
  7642  00419A  6EDF               	movwf	indf2,c
  7643  00419C                     
  7644                           ;dc_motor.c: 99:                 setMotorPWM(mL);
  7645  00419C  C020  F00F         	movff	turn45@mL,setMotorPWM@m
  7646  0041A0  C021  F010         	movff	turn45@mL+1,setMotorPWM@m+1
  7647  0041A4  EC2C  F01D         	call	_setMotorPWM	;wreg free
  7648  0041A8                     
  7649                           ;dc_motor.c: 100:                 setMotorPWM(mR);
  7650  0041A8  C022  F00F         	movff	turn45@mR,setMotorPWM@m
  7651  0041AC  C023  F010         	movff	turn45@mR+1,setMotorPWM@m+1
  7652  0041B0  EC2C  F01D         	call	_setMotorPWM	;wreg free
  7653  0041B4                     
  7654                           ;dc_motor.c: 101:                 _delay((unsigned long)((10)*(64000000/4000.0)));
  7655  0041B4  0ED0               	movlw	208
  7656  0041B6  6E26               	movwf	??_turn45^0,c
  7657  0041B8  0ECA               	movlw	202
  7658  0041BA                     u6157:
  7659  0041BA  2EE8               	decfsz	wreg,f,c
  7660  0041BC  D7FE               	bra	u6157
  7661  0041BE  2E26               	decfsz	??_turn45^0,f,c
  7662  0041C0  D7FC               	bra	u6157
  7663  0041C2                     l4180:
  7664                           
  7665                           ;dc_motor.c: 96:             while (mR->power <60){
  7666  0041C2  C022  FFD9         	movff	turn45@mR,fsr2l
  7667  0041C6  C023  FFDA         	movff	turn45@mR+1,fsr2h
  7668  0041CA  0E3B               	movlw	59
  7669  0041CC  64DF               	cpfsgt	indf2,c
  7670  0041CE  EFEB  F020         	goto	u4221
  7671  0041D2  EFED  F020         	goto	u4220
  7672  0041D6                     u4221:
  7673  0041D6  EFC2  F020         	goto	l4172
  7674  0041DA                     u4220:
  7675  0041DA                     
  7676                           ;dc_motor.c: 103:             for(unsigned int i = 0; i<SENSITIVITY + 15; i++){_delay((u
      +                          nsigned long)((1)*(64000000/4000.0)));}
  7677  0041DA  0E00               	movlw	0
  7678  0041DC  6E29               	movwf	(turn45@i_1327+1)^0,c
  7679  0041DE  0E00               	movlw	0
  7680  0041E0  6E28               	movwf	turn45@i_1327^0,c
  7681  0041E2  EFFD  F020         	goto	l274
  7682  0041E6                     l4184:
  7683                           
  7684                           ; BSR set to: 0
  7685  0041E6  0E15               	movlw	21
  7686  0041E8  6E26               	movwf	??_turn45^0,c
  7687  0041EA  0EC6               	movlw	198
  7688  0041EC                     u6167:
  7689  0041EC  2EE8               	decfsz	wreg,f,c
  7690  0041EE  D7FE               	bra	u6167
  7691  0041F0  2E26               	decfsz	??_turn45^0,f,c
  7692  0041F2  D7FC               	bra	u6167
  7693  0041F4  D000               	nop2	
  7694  0041F6  4A28               	infsnz	turn45@i_1327^0,f,c
  7695  0041F8  2A29               	incf	(turn45@i_1327+1)^0,f,c
  7696  0041FA                     l274:
  7697  0041FA  0E0F               	movlw	15
  7698  0041FC  0100               	movlb	0	; () banked
  7699  0041FE  25FC               	addwf	_SENSITIVITY& (0+255),w,b
  7700  004200  6E26               	movwf	??_turn45^0,c
  7701  004202  0E00               	movlw	0
  7702  004204  21FD               	addwfc	(_SENSITIVITY+1)& (0+255),w,b
  7703  004206  6E27               	movwf	(??_turn45+1)^0,c
  7704  004208  5026               	movf	??_turn45^0,w,c
  7705  00420A  5C28               	subwf	turn45@i_1327^0,w,c
  7706  00420C  5027               	movf	(??_turn45+1)^0,w,c
  7707  00420E  5829               	subwfb	(turn45@i_1327+1)^0,w,c
  7708  004210  A0D8               	btfss	status,0,c
  7709  004212  EF0D  F021         	goto	u4231
  7710  004216  EF0F  F021         	goto	u4230
  7711  00421A                     u4231:
  7712  00421A  EFF3  F020         	goto	l4184
  7713  00421E                     u4230:
  7714  00421E                     l4188:
  7715                           
  7716                           ; BSR set to: 0
  7717                           ;dc_motor.c: 104:             stop(mL,mR);
  7718  00421E  C020  F01A         	movff	turn45@mL,stop@mL
  7719  004222  C021  F01B         	movff	turn45@mL+1,stop@mL+1
  7720  004226  C022  F01C         	movff	turn45@mR,stop@mR
  7721  00422A  C023  F01D         	movff	turn45@mR+1,stop@mR+1
  7722  00422E  ECCF  F029         	call	_stop	;wreg free
  7723                           
  7724                           ;dc_motor.c: 105:         }
  7725  004232  EF6F  F021         	goto	l4212
  7726  004236                     l4190:
  7727  004236  0E02               	movlw	2
  7728  004238  1825               	xorwf	turn45@direction^0,w,c
  7729  00423A  A4D8               	btfss	status,2,c
  7730  00423C  EF22  F021         	goto	u4241
  7731  004240  EF24  F021         	goto	u4240
  7732  004244                     u4241:
  7733  004244  EF6F  F021         	goto	l4212
  7734  004248                     u4240:
  7735  004248  EF45  F021         	goto	l4202
  7736  00424C                     l4194:
  7737                           
  7738                           ;dc_motor.c: 108:                 mL->power += 5;
  7739  00424C  C020  FFD9         	movff	turn45@mL,fsr2l
  7740  004250  C021  FFDA         	movff	turn45@mL+1,fsr2h
  7741  004254  0E05               	movlw	5
  7742  004256  26DF               	addwf	indf2,f,c
  7743                           
  7744                           ;dc_motor.c: 109:                 mR->power = 0;
  7745  004258  C022  FFD9         	movff	turn45@mR,fsr2l
  7746  00425C  C023  FFDA         	movff	turn45@mR+1,fsr2h
  7747  004260  0E00               	movlw	0
  7748  004262  6EDF               	movwf	indf2,c
  7749  004264                     
  7750                           ;dc_motor.c: 110:                 setMotorPWM(mL);
  7751  004264  C020  F00F         	movff	turn45@mL,setMotorPWM@m
  7752  004268  C021  F010         	movff	turn45@mL+1,setMotorPWM@m+1
  7753  00426C  EC2C  F01D         	call	_setMotorPWM	;wreg free
  7754  004270                     
  7755                           ;dc_motor.c: 111:                 setMotorPWM(mR);
  7756  004270  C022  F00F         	movff	turn45@mR,setMotorPWM@m
  7757  004274  C023  F010         	movff	turn45@mR+1,setMotorPWM@m+1
  7758  004278  EC2C  F01D         	call	_setMotorPWM	;wreg free
  7759  00427C                     
  7760                           ;dc_motor.c: 112:                 _delay((unsigned long)((10)*(64000000/4000.0)));
  7761  00427C  0ED0               	movlw	208
  7762  00427E  6E26               	movwf	??_turn45^0,c
  7763  004280  0ECA               	movlw	202
  7764  004282                     u6177:
  7765  004282  2EE8               	decfsz	wreg,f,c
  7766  004284  D7FE               	bra	u6177
  7767  004286  2E26               	decfsz	??_turn45^0,f,c
  7768  004288  D7FC               	bra	u6177
  7769  00428A                     l4202:
  7770                           
  7771                           ;dc_motor.c: 107:             while (mL->power <60){
  7772  00428A  C020  FFD9         	movff	turn45@mL,fsr2l
  7773  00428E  C021  FFDA         	movff	turn45@mL+1,fsr2h
  7774  004292  0E3B               	movlw	59
  7775  004294  64DF               	cpfsgt	indf2,c
  7776  004296  EF4F  F021         	goto	u4251
  7777  00429A  EF51  F021         	goto	u4250
  7778  00429E                     u4251:
  7779  00429E  EF26  F021         	goto	l4194
  7780  0042A2                     u4250:
  7781  0042A2                     
  7782                           ;dc_motor.c: 114:             for(unsigned int i = 0; i <SENSITIVITY; i++){_delay((unsig
      +                          ned long)((1)*(64000000/4000.0)));}
  7783  0042A2  0E00               	movlw	0
  7784  0042A4  6E2B               	movwf	(turn45@i_1329+1)^0,c
  7785  0042A6  0E00               	movlw	0
  7786  0042A8  6E2A               	movwf	turn45@i_1329^0,c
  7787  0042AA  EF61  F021         	goto	l282
  7788  0042AE                     l4206:
  7789                           
  7790                           ; BSR set to: 0
  7791  0042AE  0E15               	movlw	21
  7792  0042B0  6E26               	movwf	??_turn45^0,c
  7793  0042B2  0EC6               	movlw	198
  7794  0042B4                     u6187:
  7795  0042B4  2EE8               	decfsz	wreg,f,c
  7796  0042B6  D7FE               	bra	u6187
  7797  0042B8  2E26               	decfsz	??_turn45^0,f,c
  7798  0042BA  D7FC               	bra	u6187
  7799  0042BC  D000               	nop2	
  7800  0042BE  4A2A               	infsnz	turn45@i_1329^0,f,c
  7801  0042C0  2A2B               	incf	(turn45@i_1329+1)^0,f,c
  7802  0042C2                     l282:
  7803  0042C2  0100               	movlb	0	; () banked
  7804  0042C4  51FC               	movf	_SENSITIVITY& (0+255),w,b
  7805  0042C6  5C2A               	subwf	turn45@i_1329^0,w,c
  7806  0042C8  51FD               	movf	(_SENSITIVITY+1)& (0+255),w,b
  7807  0042CA  582B               	subwfb	(turn45@i_1329+1)^0,w,c
  7808  0042CC  A0D8               	btfss	status,0,c
  7809  0042CE  EF6B  F021         	goto	u4261
  7810  0042D2  EF6D  F021         	goto	u4260
  7811  0042D6                     u4261:
  7812  0042D6  EF57  F021         	goto	l4206
  7813  0042DA                     u4260:
  7814  0042DA  EF0F  F021         	goto	l4188
  7815  0042DE                     l4212:
  7816                           
  7817                           ;dc_motor.c: 117:     }
  7818  0042DE  2A2C               	incf	turn45@i^0,f,c
  7819  0042E0                     l4214:
  7820  0042E0  5024               	movf	turn45@turn_time^0,w,c
  7821  0042E2  5C2C               	subwf	turn45@i^0,w,c
  7822  0042E4  A0D8               	btfss	status,0,c
  7823  0042E6  EF77  F021         	goto	u4271
  7824  0042EA  EF79  F021         	goto	u4270
  7825  0042EE                     u4271:
  7826  0042EE  EFA8  F020         	goto	l4166
  7827  0042F2                     u4270:
  7828  0042F2  0012               	return		;funcret
  7829  0042F4                     __end_of_turn45:
  7830                           	callstack 0
  7831                           
  7832 ;; *************** function _stop *****************
  7833 ;; Defined at:
  7834 ;;		line 76 in file "dc_motor.c"
  7835 ;; Parameters:    Size  Location     Type
  7836 ;;  mL              2   25[COMRAM] PTR struct DC_motor
  7837 ;;		 -> main@motorL(9), 
  7838 ;;  mR              2   27[COMRAM] PTR struct DC_motor
  7839 ;;		 -> main@motorR(9), 
  7840 ;; Auto vars:     Size  Location     Type
  7841 ;;		None
  7842 ;; Return value:  Size  Location     Type
  7843 ;;                  1    wreg      void 
  7844 ;; Registers used:
  7845 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7846 ;; Tracked objects:
  7847 ;;		On entry : 0/0
  7848 ;;		On exit  : 0/0
  7849 ;;		Unchanged: 0/0
  7850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7851 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7852 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7853 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7854 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7855 ;;Total ram usage:        6 bytes
  7856 ;; Hardware stack levels used: 1
  7857 ;; Hardware stack levels required when called: 3
  7858 ;; This function calls:
  7859 ;;		_setMotorPWM
  7860 ;; This function is called by:
  7861 ;;		_turn45
  7862 ;;		_fullSpeedBack
  7863 ;;		_main
  7864 ;;		_short_burst
  7865 ;;		_goback
  7866 ;;		_test_action
  7867 ;;		_test_function
  7868 ;; This function uses a non-reentrant model
  7869 ;;
  7870                           
  7871                           	psect	text32
  7872  00539E                     __ptext32:
  7873                           	callstack 0
  7874  00539E                     _stop:
  7875                           	callstack 25
  7876  00539E                     
  7877                           ;dc_motor.c: 76: void stop(struct DC_motor *mL, struct DC_motor *mR);dc_motor.c: 77: {;d
      +                          c_motor.c: 78:     while (mL->power >0 || mR->power >0){
  7878  00539E  EF09  F02A         	goto	l3936
  7879  0053A2                     l3922:
  7880                           
  7881                           ;dc_motor.c: 79:         if (mL->power !=0){mL->power -= 2;}
  7882  0053A2  C01A  FFD9         	movff	stop@mL,fsr2l
  7883  0053A6  C01B  FFDA         	movff	stop@mL+1,fsr2h
  7884  0053AA  50DF               	movf	indf2,w,c
  7885  0053AC  B4D8               	btfsc	status,2,c
  7886  0053AE  EFDB  F029         	goto	u3891
  7887  0053B2  EFDD  F029         	goto	u3890
  7888  0053B6                     u3891:
  7889  0053B6  EFE3  F029         	goto	l3926
  7890  0053BA                     u3890:
  7891  0053BA  C01A  FFD9         	movff	stop@mL,fsr2l
  7892  0053BE  C01B  FFDA         	movff	stop@mL+1,fsr2h
  7893  0053C2  0E02               	movlw	2
  7894  0053C4  5EDF               	subwf	indf2,f,c
  7895  0053C6                     l3926:
  7896                           
  7897                           ;dc_motor.c: 80:         if (mR->power !=0){mR->power -= 2;}
  7898  0053C6  C01C  FFD9         	movff	stop@mR,fsr2l
  7899  0053CA  C01D  FFDA         	movff	stop@mR+1,fsr2h
  7900  0053CE  50DF               	movf	indf2,w,c
  7901  0053D0  B4D8               	btfsc	status,2,c
  7902  0053D2  EFED  F029         	goto	u3901
  7903  0053D6  EFEF  F029         	goto	u3900
  7904  0053DA                     u3901:
  7905  0053DA  EFF5  F029         	goto	l3930
  7906  0053DE                     u3900:
  7907  0053DE  C01C  FFD9         	movff	stop@mR,fsr2l
  7908  0053E2  C01D  FFDA         	movff	stop@mR+1,fsr2h
  7909  0053E6  0E02               	movlw	2
  7910  0053E8  5EDF               	subwf	indf2,f,c
  7911  0053EA                     l3930:
  7912                           
  7913                           ;dc_motor.c: 81:         setMotorPWM(mL);
  7914  0053EA  C01A  F00F         	movff	stop@mL,setMotorPWM@m
  7915  0053EE  C01B  F010         	movff	stop@mL+1,setMotorPWM@m+1
  7916  0053F2  EC2C  F01D         	call	_setMotorPWM	;wreg free
  7917  0053F6                     
  7918                           ;dc_motor.c: 82:         setMotorPWM(mR);
  7919  0053F6  C01C  F00F         	movff	stop@mR,setMotorPWM@m
  7920  0053FA  C01D  F010         	movff	stop@mR+1,setMotorPWM@m+1
  7921  0053FE  EC2C  F01D         	call	_setMotorPWM	;wreg free
  7922  005402                     
  7923                           ;dc_motor.c: 83:         _delay((unsigned long)((5)*(64000000/4000.0)));
  7924  005402  0E68               	movlw	104
  7925  005404  6E1E               	movwf	??_stop^0,c
  7926  005406  0EE4               	movlw	228
  7927  005408                     u6197:
  7928  005408  2EE8               	decfsz	wreg,f,c
  7929  00540A  D7FE               	bra	u6197
  7930  00540C  2E1E               	decfsz	??_stop^0,f,c
  7931  00540E  D7FC               	bra	u6197
  7932  005410  D000               	nop2	
  7933  005412                     l3936:
  7934                           
  7935                           ;dc_motor.c: 78:     while (mL->power >0 || mR->power >0){
  7936  005412  C01A  FFD9         	movff	stop@mL,fsr2l
  7937  005416  C01B  FFDA         	movff	stop@mL+1,fsr2h
  7938  00541A  50DF               	movf	indf2,w,c
  7939  00541C  A4D8               	btfss	status,2,c
  7940  00541E  EF13  F02A         	goto	u3911
  7941  005422  EF15  F02A         	goto	u3910
  7942  005426                     u3911:
  7943  005426  EFD1  F029         	goto	l3922
  7944  00542A                     u3910:
  7945  00542A  C01C  FFD9         	movff	stop@mR,fsr2l
  7946  00542E  C01D  FFDA         	movff	stop@mR+1,fsr2h
  7947  005432  50DF               	movf	indf2,w,c
  7948  005434  A4D8               	btfss	status,2,c
  7949  005436  EF1F  F02A         	goto	u3921
  7950  00543A  EF21  F02A         	goto	u3920
  7951  00543E                     u3921:
  7952  00543E  EFD1  F029         	goto	l3922
  7953  005442                     u3920:
  7954  005442                     
  7955                           ;dc_motor.c: 85:     _delay((unsigned long)((500)*(64000000/4000.0)));
  7956  005442  0E29               	movlw	41
  7957  005444  6E1F               	movwf	(??_stop+1)^0,c
  7958  005446  0E96               	movlw	150
  7959  005448  6E1E               	movwf	??_stop^0,c
  7960  00544A  0E7F               	movlw	127
  7961  00544C                     u6207:
  7962  00544C  2EE8               	decfsz	wreg,f,c
  7963  00544E  D7FE               	bra	u6207
  7964  005450  2E1E               	decfsz	??_stop^0,f,c
  7965  005452  D7FC               	bra	u6207
  7966  005454  2E1F               	decfsz	(??_stop+1)^0,f,c
  7967  005456  D7FA               	bra	u6207
  7968  005458  F000               	nop	
  7969  00545A  0012               	return		;funcret
  7970  00545C                     __end_of_stop:
  7971                           	callstack 0
  7972                           
  7973 ;; *************** function _fullSpeedAhead *****************
  7974 ;; Defined at:
  7975 ;;		line 121 in file "dc_motor.c"
  7976 ;; Parameters:    Size  Location     Type
  7977 ;;  mL              2   25[COMRAM] PTR struct DC_motor
  7978 ;;		 -> main@motorL(9), 
  7979 ;;  mR              2   27[COMRAM] PTR struct DC_motor
  7980 ;;		 -> main@motorR(9), 
  7981 ;; Auto vars:     Size  Location     Type
  7982 ;;		None
  7983 ;; Return value:  Size  Location     Type
  7984 ;;                  1    wreg      void 
  7985 ;; Registers used:
  7986 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7987 ;; Tracked objects:
  7988 ;;		On entry : 0/0
  7989 ;;		On exit  : 0/0
  7990 ;;		Unchanged: 0/0
  7991 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7992 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7993 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7994 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7995 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7996 ;;Total ram usage:        5 bytes
  7997 ;; Hardware stack levels used: 1
  7998 ;; Hardware stack levels required when called: 3
  7999 ;; This function calls:
  8000 ;;		_setMotorPWM
  8001 ;; This function is called by:
  8002 ;;		_main
  8003 ;;		_short_burst
  8004 ;;		_goback
  8005 ;;		_test_action
  8006 ;;		_test_function
  8007 ;; This function uses a non-reentrant model
  8008 ;;
  8009                           
  8010                           	psect	text33
  8011  005216                     __ptext33:
  8012                           	callstack 0
  8013  005216                     _fullSpeedAhead:
  8014                           	callstack 25
  8015  005216                     
  8016                           ;dc_motor.c: 121: void fullSpeedAhead(struct DC_motor *mL, struct DC_motor *mR);dc_motor
      +                          .c: 122: {;dc_motor.c: 123:     mL->direction=1;
  8017  005216  EE20 F001          	lfsr	2,1
  8018  00521A  501A               	movf	fullSpeedAhead@mL^0,w,c
  8019  00521C  26D9               	addwf	fsr2l,f,c
  8020  00521E  501B               	movf	(fullSpeedAhead@mL+1)^0,w,c
  8021  005220  22DA               	addwfc	fsr2h,f,c
  8022  005222  0E01               	movlw	1
  8023  005224  6EDF               	movwf	indf2,c
  8024                           
  8025                           ;dc_motor.c: 124:     mR->direction=1;
  8026  005226  EE20 F001          	lfsr	2,1
  8027  00522A  501C               	movf	fullSpeedAhead@mR^0,w,c
  8028  00522C  26D9               	addwf	fsr2l,f,c
  8029  00522E  501D               	movf	(fullSpeedAhead@mR+1)^0,w,c
  8030  005230  22DA               	addwfc	fsr2h,f,c
  8031  005232  0E01               	movlw	1
  8032  005234  6EDF               	movwf	indf2,c
  8033                           
  8034                           ;dc_motor.c: 125:     while (mL->power<30 || mR->power<30){
  8035  005236  EF54  F029         	goto	l4232
  8036  00523A                     l4218:
  8037                           
  8038                           ;dc_motor.c: 126:         if (mL->power<30) {mL->power += 2;}
  8039  00523A  C01A  FFD9         	movff	fullSpeedAhead@mL,fsr2l
  8040  00523E  C01B  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
  8041  005242  0E1E               	movlw	30
  8042  005244  60DF               	cpfslt	indf2,c
  8043  005246  EF27  F029         	goto	u4281
  8044  00524A  EF29  F029         	goto	u4280
  8045  00524E                     u4281:
  8046  00524E  EF2F  F029         	goto	l4222
  8047  005252                     u4280:
  8048  005252  C01A  FFD9         	movff	fullSpeedAhead@mL,fsr2l
  8049  005256  C01B  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
  8050  00525A  0E02               	movlw	2
  8051  00525C  26DF               	addwf	indf2,f,c
  8052  00525E                     l4222:
  8053                           
  8054                           ;dc_motor.c: 127:         if (mR->power<30) {mR->power += 2;}
  8055  00525E  C01C  FFD9         	movff	fullSpeedAhead@mR,fsr2l
  8056  005262  C01D  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
  8057  005266  0E1E               	movlw	30
  8058  005268  60DF               	cpfslt	indf2,c
  8059  00526A  EF39  F029         	goto	u4291
  8060  00526E  EF3B  F029         	goto	u4290
  8061  005272                     u4291:
  8062  005272  EF41  F029         	goto	l4226
  8063  005276                     u4290:
  8064  005276  C01C  FFD9         	movff	fullSpeedAhead@mR,fsr2l
  8065  00527A  C01D  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
  8066  00527E  0E02               	movlw	2
  8067  005280  26DF               	addwf	indf2,f,c
  8068  005282                     l4226:
  8069                           
  8070                           ;dc_motor.c: 128:         setMotorPWM(mL);
  8071  005282  C01A  F00F         	movff	fullSpeedAhead@mL,setMotorPWM@m
  8072  005286  C01B  F010         	movff	fullSpeedAhead@mL+1,setMotorPWM@m+1
  8073  00528A  EC2C  F01D         	call	_setMotorPWM	;wreg free
  8074  00528E                     
  8075                           ;dc_motor.c: 129:         setMotorPWM(mR);
  8076  00528E  C01C  F00F         	movff	fullSpeedAhead@mR,setMotorPWM@m
  8077  005292  C01D  F010         	movff	fullSpeedAhead@mR+1,setMotorPWM@m+1
  8078  005296  EC2C  F01D         	call	_setMotorPWM	;wreg free
  8079  00529A                     
  8080                           ;dc_motor.c: 130:         _delay((unsigned long)((10)*(64000000/4000.0)));
  8081  00529A  0ED0               	movlw	208
  8082  00529C  6E1E               	movwf	??_fullSpeedAhead^0,c
  8083  00529E  0ECA               	movlw	202
  8084  0052A0                     u6217:
  8085  0052A0  2EE8               	decfsz	wreg,f,c
  8086  0052A2  D7FE               	bra	u6217
  8087  0052A4  2E1E               	decfsz	??_fullSpeedAhead^0,f,c
  8088  0052A6  D7FC               	bra	u6217
  8089  0052A8                     l4232:
  8090                           
  8091                           ;dc_motor.c: 125:     while (mL->power<30 || mR->power<30){
  8092  0052A8  C01A  FFD9         	movff	fullSpeedAhead@mL,fsr2l
  8093  0052AC  C01B  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
  8094  0052B0  0E1D               	movlw	29
  8095  0052B2  64DF               	cpfsgt	indf2,c
  8096  0052B4  EF5E  F029         	goto	u4301
  8097  0052B8  EF60  F029         	goto	u4300
  8098  0052BC                     u4301:
  8099  0052BC  EF1D  F029         	goto	l4218
  8100  0052C0                     u4300:
  8101  0052C0  C01C  FFD9         	movff	fullSpeedAhead@mR,fsr2l
  8102  0052C4  C01D  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
  8103  0052C8  0E1D               	movlw	29
  8104  0052CA  64DF               	cpfsgt	indf2,c
  8105  0052CC  EF6A  F029         	goto	u4311
  8106  0052D0  EF6C  F029         	goto	u4310
  8107  0052D4                     u4311:
  8108  0052D4  EF1D  F029         	goto	l4218
  8109  0052D8                     u4310:
  8110  0052D8  0012               	return		;funcret
  8111  0052DA                     __end_of_fullSpeedAhead:
  8112                           	callstack 0
  8113                           
  8114 ;; *************** function _setMotorPWM *****************
  8115 ;; Defined at:
  8116 ;;		line 56 in file "dc_motor.c"
  8117 ;; Parameters:    Size  Location     Type
  8118 ;;  m               2   14[COMRAM] PTR struct DC_motor
  8119 ;;		 -> main@motorR(9), main@motorL(9), 
  8120 ;; Auto vars:     Size  Location     Type
  8121 ;;  PWMduty         2   23[COMRAM] int 
  8122 ;; Return value:  Size  Location     Type
  8123 ;;                  1    wreg      void 
  8124 ;; Registers used:
  8125 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8126 ;; Tracked objects:
  8127 ;;		On entry : 0/0
  8128 ;;		On exit  : 0/0
  8129 ;;		Unchanged: 0/0
  8130 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8131 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8132 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8133 ;;      Temps:          7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8134 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8135 ;;Total ram usage:       11 bytes
  8136 ;; Hardware stack levels used: 1
  8137 ;; Hardware stack levels required when called: 2
  8138 ;; This function calls:
  8139 ;;		___awdiv
  8140 ;;		___wmul
  8141 ;; This function is called by:
  8142 ;;		_stop
  8143 ;;		_turn45
  8144 ;;		_fullSpeedAhead
  8145 ;;		_fullSpeedBack
  8146 ;; This function uses a non-reentrant model
  8147 ;;
  8148                           
  8149                           	psect	text34
  8150  003A58                     __ptext34:
  8151                           	callstack 0
  8152  003A58                     _setMotorPWM:
  8153                           	callstack 25
  8154  003A58                     
  8155                           ;dc_motor.c: 56: void setMotorPWM(struct DC_motor *m);dc_motor.c: 57: {;dc_motor.c: 58: 
      +                           int PWMduty;;dc_motor.c: 59:  if (m->direction){
  8156  003A58  EE20 F001          	lfsr	2,1
  8157  003A5C  500F               	movf	setMotorPWM@m^0,w,c
  8158  003A5E  26D9               	addwf	fsr2l,f,c
  8159  003A60  5010               	movf	(setMotorPWM@m+1)^0,w,c
  8160  003A62  22DA               	addwfc	fsr2h,f,c
  8161  003A64  50DF               	movf	indf2,w,c
  8162  003A66  B4D8               	btfsc	status,2,c
  8163  003A68  EF38  F01D         	goto	u3401
  8164  003A6C  EF3A  F01D         	goto	u3400
  8165  003A70                     u3401:
  8166  003A70  EF6B  F01D         	goto	l3636
  8167  003A74                     u3400:
  8168  003A74                     
  8169                           ;dc_motor.c: 61:   PWMduty=m->PWMperiod - ((int)(m->power)*(m->PWMperiod))/100;
  8170  003A74  C00F  FFD9         	movff	setMotorPWM@m,fsr2l
  8171  003A78  C010  FFDA         	movff	setMotorPWM@m+1,fsr2h
  8172  003A7C  50DF               	movf	indf2,w,c
  8173  003A7E  6E11               	movwf	??_setMotorPWM^0,c
  8174  003A80  5011               	movf	??_setMotorPWM^0,w,c
  8175  003A82  6E01               	movwf	___wmul@multiplier^0,c
  8176  003A84  6A02               	clrf	(___wmul@multiplier+1)^0,c
  8177  003A86  EE20 F007          	lfsr	2,7
  8178  003A8A  500F               	movf	setMotorPWM@m^0,w,c
  8179  003A8C  26D9               	addwf	fsr2l,f,c
  8180  003A8E  5010               	movf	(setMotorPWM@m+1)^0,w,c
  8181  003A90  22DA               	addwfc	fsr2h,f,c
  8182  003A92  CFDE F003          	movff	postinc2,___wmul@multiplicand
  8183  003A96  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
  8184  003A9A  ECB2  F02D         	call	___wmul	;wreg free
  8185  003A9E  C001  F007         	movff	?___wmul,___awdiv@dividend
  8186  003AA2  C002  F008         	movff	?___wmul+1,___awdiv@dividend+1
  8187  003AA6  0E00               	movlw	0
  8188  003AA8  6E0A               	movwf	(___awdiv@divisor+1)^0,c
  8189  003AAA  0E64               	movlw	100
  8190  003AAC  6E09               	movwf	___awdiv@divisor^0,c
  8191  003AAE  EC6D  F029         	call	___awdiv	;wreg free
  8192  003AB2  EE20 F007          	lfsr	2,7
  8193  003AB6  500F               	movf	setMotorPWM@m^0,w,c
  8194  003AB8  26D9               	addwf	fsr2l,f,c
  8195  003ABA  5010               	movf	(setMotorPWM@m+1)^0,w,c
  8196  003ABC  22DA               	addwfc	fsr2h,f,c
  8197  003ABE  CFDE F012          	movff	postinc2,??_setMotorPWM+1
  8198  003AC2  CFDD F013          	movff	postdec2,??_setMotorPWM+2
  8199  003AC6  5007               	movf	?___awdiv^0,w,c
  8200  003AC8  5C12               	subwf	(??_setMotorPWM+1)^0,w,c
  8201  003ACA  6E18               	movwf	setMotorPWM@PWMduty^0,c
  8202  003ACC  5008               	movf	(?___awdiv+1)^0,w,c
  8203  003ACE  5813               	subwfb	(??_setMotorPWM+2)^0,w,c
  8204  003AD0  6E19               	movwf	(setMotorPWM@PWMduty+1)^0,c
  8205                           
  8206                           ;dc_motor.c: 62:  }
  8207  003AD2  EF8E  F01D         	goto	l3638
  8208  003AD6                     l3636:
  8209                           
  8210                           ;dc_motor.c: 65:   PWMduty=((int)(m->power)*(m->PWMperiod))/100;
  8211  003AD6  C00F  FFD9         	movff	setMotorPWM@m,fsr2l
  8212  003ADA  C010  FFDA         	movff	setMotorPWM@m+1,fsr2h
  8213  003ADE  50DF               	movf	indf2,w,c
  8214  003AE0  6E11               	movwf	??_setMotorPWM^0,c
  8215  003AE2  5011               	movf	??_setMotorPWM^0,w,c
  8216  003AE4  6E01               	movwf	___wmul@multiplier^0,c
  8217  003AE6  6A02               	clrf	(___wmul@multiplier+1)^0,c
  8218  003AE8  EE20 F007          	lfsr	2,7
  8219  003AEC  500F               	movf	setMotorPWM@m^0,w,c
  8220  003AEE  26D9               	addwf	fsr2l,f,c
  8221  003AF0  5010               	movf	(setMotorPWM@m+1)^0,w,c
  8222  003AF2  22DA               	addwfc	fsr2h,f,c
  8223  003AF4  CFDE F003          	movff	postinc2,___wmul@multiplicand
  8224  003AF8  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
  8225  003AFC  ECB2  F02D         	call	___wmul	;wreg free
  8226  003B00  C001  F007         	movff	?___wmul,___awdiv@dividend
  8227  003B04  C002  F008         	movff	?___wmul+1,___awdiv@dividend+1
  8228  003B08  0E00               	movlw	0
  8229  003B0A  6E0A               	movwf	(___awdiv@divisor+1)^0,c
  8230  003B0C  0E64               	movlw	100
  8231  003B0E  6E09               	movwf	___awdiv@divisor^0,c
  8232  003B10  EC6D  F029         	call	___awdiv	;wreg free
  8233  003B14  C007  F018         	movff	?___awdiv,setMotorPWM@PWMduty
  8234  003B18  C008  F019         	movff	?___awdiv+1,setMotorPWM@PWMduty+1
  8235  003B1C                     l3638:
  8236                           
  8237                           ;dc_motor.c: 67:  *(m->dutyHighByte) = PWMduty;
  8238  003B1C  EE20 F002          	lfsr	2,2
  8239  003B20  500F               	movf	setMotorPWM@m^0,w,c
  8240  003B22  26D9               	addwf	fsr2l,f,c
  8241  003B24  5010               	movf	(setMotorPWM@m+1)^0,w,c
  8242  003B26  22DA               	addwfc	fsr2h,f,c
  8243  003B28  CFDE F011          	movff	postinc2,??_setMotorPWM
  8244  003B2C  CFDD F012          	movff	postdec2,??_setMotorPWM+1
  8245  003B30  C011  FFD9         	movff	??_setMotorPWM,fsr2l
  8246  003B34  C012  FFDA         	movff	??_setMotorPWM+1,fsr2h
  8247  003B38  C018  FFDF         	movff	setMotorPWM@PWMduty,indf2
  8248  003B3C                     
  8249                           ;dc_motor.c: 68:  if (m->direction){
  8250  003B3C  EE20 F001          	lfsr	2,1
  8251  003B40  500F               	movf	setMotorPWM@m^0,w,c
  8252  003B42  26D9               	addwf	fsr2l,f,c
  8253  003B44  5010               	movf	(setMotorPWM@m+1)^0,w,c
  8254  003B46  22DA               	addwfc	fsr2h,f,c
  8255  003B48  50DF               	movf	indf2,w,c
  8256  003B4A  B4D8               	btfsc	status,2,c
  8257  003B4C  EFAA  F01D         	goto	u3411
  8258  003B50  EFAC  F01D         	goto	u3410
  8259  003B54                     u3411:
  8260  003B54  EFE1  F01D         	goto	l3644
  8261  003B58                     u3410:
  8262  003B58                     
  8263                           ;dc_motor.c: 69:   *(m->dir_LAT) = *(m->dir_LAT) | (1<<(m->dir_pin));
  8264  003B58  EE20 F004          	lfsr	2,4
  8265  003B5C  500F               	movf	setMotorPWM@m^0,w,c
  8266  003B5E  26D9               	addwf	fsr2l,f,c
  8267  003B60  5010               	movf	(setMotorPWM@m+1)^0,w,c
  8268  003B62  22DA               	addwfc	fsr2h,f,c
  8269  003B64  CFDE F011          	movff	postinc2,??_setMotorPWM
  8270  003B68  CFDD F012          	movff	postdec2,??_setMotorPWM+1
  8271  003B6C  C011  FFD9         	movff	??_setMotorPWM,fsr2l
  8272  003B70  C012  FFDA         	movff	??_setMotorPWM+1,fsr2h
  8273  003B74  EE10 F004          	lfsr	1,4
  8274  003B78  500F               	movf	setMotorPWM@m^0,w,c
  8275  003B7A  26E1               	addwf	fsr1l,f,c
  8276  003B7C  5010               	movf	(setMotorPWM@m+1)^0,w,c
  8277  003B7E  22E2               	addwfc	fsr1h,f,c
  8278  003B80  CFE6 F013          	movff	postinc1,??_setMotorPWM+2
  8279  003B84  CFE5 F014          	movff	postdec1,??_setMotorPWM+3
  8280  003B88  C013  FFE1         	movff	??_setMotorPWM+2,fsr1l
  8281  003B8C  C014  FFE2         	movff	??_setMotorPWM+3,fsr1h
  8282  003B90  50E7               	movf	indf1,w,c
  8283  003B92  6E15               	movwf	(??_setMotorPWM+4)^0,c
  8284  003B94  EE10 F006          	lfsr	1,6
  8285  003B98  500F               	movf	setMotorPWM@m^0,w,c
  8286  003B9A  26E1               	addwf	fsr1l,f,c
  8287  003B9C  5010               	movf	(setMotorPWM@m+1)^0,w,c
  8288  003B9E  22E2               	addwfc	fsr1h,f,c
  8289  003BA0  50E7               	movf	indf1,w,c
  8290  003BA2  6E16               	movwf	(??_setMotorPWM+5)^0,c
  8291  003BA4  0E01               	movlw	1
  8292  003BA6  6E17               	movwf	(??_setMotorPWM+6)^0,c
  8293  003BA8  2A16               	incf	(??_setMotorPWM+5)^0,f,c
  8294  003BAA  EFD9  F01D         	goto	u3424
  8295  003BAE                     u3425:
  8296  003BAE  90D8               	bcf	status,0,c
  8297  003BB0  3617               	rlcf	(??_setMotorPWM+6)^0,f,c
  8298  003BB2                     u3424:
  8299  003BB2  2E16               	decfsz	(??_setMotorPWM+5)^0,f,c
  8300  003BB4  EFD7  F01D         	goto	u3425
  8301  003BB8  5017               	movf	(??_setMotorPWM+6)^0,w,c
  8302  003BBA  1015               	iorwf	(??_setMotorPWM+4)^0,w,c
  8303  003BBC  6EDF               	movwf	indf2,c
  8304                           
  8305                           ;dc_motor.c: 70:  } else {
  8306  003BBE  EF15  F01E         	goto	l257
  8307  003BC2                     l3644:
  8308                           
  8309                           ;dc_motor.c: 71:   *(m->dir_LAT) = *(m->dir_LAT) & (~(1<<(m->dir_pin)));
  8310  003BC2  EE20 F004          	lfsr	2,4
  8311  003BC6  500F               	movf	setMotorPWM@m^0,w,c
  8312  003BC8  26D9               	addwf	fsr2l,f,c
  8313  003BCA  5010               	movf	(setMotorPWM@m+1)^0,w,c
  8314  003BCC  22DA               	addwfc	fsr2h,f,c
  8315  003BCE  CFDE F011          	movff	postinc2,??_setMotorPWM
  8316  003BD2  CFDD F012          	movff	postdec2,??_setMotorPWM+1
  8317  003BD6  C011  FFD9         	movff	??_setMotorPWM,fsr2l
  8318  003BDA  C012  FFDA         	movff	??_setMotorPWM+1,fsr2h
  8319  003BDE  EE10 F004          	lfsr	1,4
  8320  003BE2  500F               	movf	setMotorPWM@m^0,w,c
  8321  003BE4  26E1               	addwf	fsr1l,f,c
  8322  003BE6  5010               	movf	(setMotorPWM@m+1)^0,w,c
  8323  003BE8  22E2               	addwfc	fsr1h,f,c
  8324  003BEA  CFE6 F013          	movff	postinc1,??_setMotorPWM+2
  8325  003BEE  CFE5 F014          	movff	postdec1,??_setMotorPWM+3
  8326  003BF2  C013  FFE1         	movff	??_setMotorPWM+2,fsr1l
  8327  003BF6  C014  FFE2         	movff	??_setMotorPWM+3,fsr1h
  8328  003BFA  50E7               	movf	indf1,w,c
  8329  003BFC  6E15               	movwf	(??_setMotorPWM+4)^0,c
  8330  003BFE  EE10 F006          	lfsr	1,6
  8331  003C02  500F               	movf	setMotorPWM@m^0,w,c
  8332  003C04  26E1               	addwf	fsr1l,f,c
  8333  003C06  5010               	movf	(setMotorPWM@m+1)^0,w,c
  8334  003C08  22E2               	addwfc	fsr1h,f,c
  8335  003C0A  50E7               	movf	indf1,w,c
  8336  003C0C  6E16               	movwf	(??_setMotorPWM+5)^0,c
  8337  003C0E  0E01               	movlw	1
  8338  003C10  6E17               	movwf	(??_setMotorPWM+6)^0,c
  8339  003C12  2A16               	incf	(??_setMotorPWM+5)^0,f,c
  8340  003C14  EF0E  F01E         	goto	u3434
  8341  003C18                     u3435:
  8342  003C18  90D8               	bcf	status,0,c
  8343  003C1A  3617               	rlcf	(??_setMotorPWM+6)^0,f,c
  8344  003C1C                     u3434:
  8345  003C1C  2E16               	decfsz	(??_setMotorPWM+5)^0,f,c
  8346  003C1E  EF0C  F01E         	goto	u3435
  8347  003C22  5017               	movf	(??_setMotorPWM+6)^0,w,c
  8348  003C24  0AFF               	xorlw	255
  8349  003C26  1415               	andwf	(??_setMotorPWM+4)^0,w,c
  8350  003C28  6EDF               	movwf	indf2,c
  8351  003C2A                     l257:
  8352  003C2A  0012               	return		;funcret
  8353  003C2C                     __end_of_setMotorPWM:
  8354                           	callstack 0
  8355                           
  8356 ;; *************** function ___wmul *****************
  8357 ;; Defined at:
  8358 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\Umul16.c"
  8359 ;; Parameters:    Size  Location     Type
  8360 ;;  multiplier      2    0[COMRAM] unsigned int 
  8361 ;;  multiplicand    2    2[COMRAM] unsigned int 
  8362 ;; Auto vars:     Size  Location     Type
  8363 ;;  product         2    4[COMRAM] unsigned int 
  8364 ;; Return value:  Size  Location     Type
  8365 ;;                  2    0[COMRAM] unsigned int 
  8366 ;; Registers used:
  8367 ;;		wreg, status,2, status,0, prodl, prodh
  8368 ;; Tracked objects:
  8369 ;;		On entry : 0/0
  8370 ;;		On exit  : 0/0
  8371 ;;		Unchanged: 0/0
  8372 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8373 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8374 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8375 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8376 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8377 ;;Total ram usage:        6 bytes
  8378 ;; Hardware stack levels used: 1
  8379 ;; Hardware stack levels required when called: 1
  8380 ;; This function calls:
  8381 ;;		Nothing
  8382 ;; This function is called by:
  8383 ;;		_setMotorPWM
  8384 ;; This function uses a non-reentrant model
  8385 ;;
  8386                           
  8387                           	psect	text35
  8388  005B64                     __ptext35:
  8389                           	callstack 0
  8390  005B64                     ___wmul:
  8391                           	callstack 25
  8392  005B64  5001               	movf	___wmul@multiplier^0,w,c
  8393  005B66  0203               	mulwf	___wmul@multiplicand^0,c
  8394  005B68  CFF3 F005          	movff	prodl,___wmul@product
  8395  005B6C  CFF4 F006          	movff	prodh,___wmul@product+1
  8396  005B70  5001               	movf	___wmul@multiplier^0,w,c
  8397  005B72  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  8398  005B74  50F3               	movf	243,w,c
  8399  005B76  2606               	addwf	(___wmul@product+1)^0,f,c
  8400  005B78  5002               	movf	(___wmul@multiplier+1)^0,w,c
  8401  005B7A  0203               	mulwf	___wmul@multiplicand^0,c
  8402  005B7C  50F3               	movf	243,w,c
  8403  005B7E  2606               	addwf	(___wmul@product+1)^0,f,c
  8404  005B80  C005  F001         	movff	___wmul@product,?___wmul
  8405  005B84  C006  F002         	movff	___wmul@product+1,?___wmul+1
  8406  005B88  0012               	return		;funcret
  8407  005B8A                     __end_of___wmul:
  8408                           	callstack 0
  8409                           
  8410 ;; *************** function ___awdiv *****************
  8411 ;; Defined at:
  8412 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\awdiv.c"
  8413 ;; Parameters:    Size  Location     Type
  8414 ;;  dividend        2    6[COMRAM] int 
  8415 ;;  divisor         2    8[COMRAM] int 
  8416 ;; Auto vars:     Size  Location     Type
  8417 ;;  quotient        2   12[COMRAM] int 
  8418 ;;  sign            1   11[COMRAM] unsigned char 
  8419 ;;  counter         1   10[COMRAM] unsigned char 
  8420 ;; Return value:  Size  Location     Type
  8421 ;;                  2    6[COMRAM] int 
  8422 ;; Registers used:
  8423 ;;		wreg, status,2, status,0
  8424 ;; Tracked objects:
  8425 ;;		On entry : 0/0
  8426 ;;		On exit  : 0/0
  8427 ;;		Unchanged: 0/0
  8428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8429 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8430 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8431 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8432 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8433 ;;Total ram usage:        8 bytes
  8434 ;; Hardware stack levels used: 1
  8435 ;; Hardware stack levels required when called: 1
  8436 ;; This function calls:
  8437 ;;		Nothing
  8438 ;; This function is called by:
  8439 ;;		_setMotorPWM
  8440 ;; This function uses a non-reentrant model
  8441 ;;
  8442                           
  8443                           	psect	text36
  8444  0052DA                     __ptext36:
  8445                           	callstack 0
  8446  0052DA                     ___awdiv:
  8447                           	callstack 25
  8448  0052DA  0E00               	movlw	0
  8449  0052DC  6E0C               	movwf	___awdiv@sign^0,c
  8450  0052DE  BE0A               	btfsc	(___awdiv@divisor+1)^0,7,c
  8451  0052E0  EF76  F029         	goto	u3170
  8452  0052E4  EF74  F029         	goto	u3171
  8453  0052E8                     u3171:
  8454  0052E8  EF7C  F029         	goto	l3530
  8455  0052EC                     u3170:
  8456  0052EC  6C09               	negf	___awdiv@divisor^0,c
  8457  0052EE  1E0A               	comf	(___awdiv@divisor+1)^0,f,c
  8458  0052F0  B0D8               	btfsc	status,0,c
  8459  0052F2  2A0A               	incf	(___awdiv@divisor+1)^0,f,c
  8460  0052F4  0E01               	movlw	1
  8461  0052F6  6E0C               	movwf	___awdiv@sign^0,c
  8462  0052F8                     l3530:
  8463  0052F8  BE08               	btfsc	(___awdiv@dividend+1)^0,7,c
  8464  0052FA  EF83  F029         	goto	u3180
  8465  0052FE  EF81  F029         	goto	u3181
  8466  005302                     u3181:
  8467  005302  EF89  F029         	goto	l3536
  8468  005306                     u3180:
  8469  005306  6C07               	negf	___awdiv@dividend^0,c
  8470  005308  1E08               	comf	(___awdiv@dividend+1)^0,f,c
  8471  00530A  B0D8               	btfsc	status,0,c
  8472  00530C  2A08               	incf	(___awdiv@dividend+1)^0,f,c
  8473  00530E  0E01               	movlw	1
  8474  005310  1A0C               	xorwf	___awdiv@sign^0,f,c
  8475  005312                     l3536:
  8476  005312  0E00               	movlw	0
  8477  005314  6E0E               	movwf	(___awdiv@quotient+1)^0,c
  8478  005316  0E00               	movlw	0
  8479  005318  6E0D               	movwf	___awdiv@quotient^0,c
  8480  00531A  5009               	movf	___awdiv@divisor^0,w,c
  8481  00531C  100A               	iorwf	(___awdiv@divisor+1)^0,w,c
  8482  00531E  B4D8               	btfsc	status,2,c
  8483  005320  EF94  F029         	goto	u3191
  8484  005324  EF96  F029         	goto	u3190
  8485  005328                     u3191:
  8486  005328  EFBE  F029         	goto	l3558
  8487  00532C                     u3190:
  8488  00532C  0E01               	movlw	1
  8489  00532E  6E0B               	movwf	___awdiv@counter^0,c
  8490  005330  EF9E  F029         	goto	l3544
  8491  005334                     l3542:
  8492  005334  90D8               	bcf	status,0,c
  8493  005336  3609               	rlcf	___awdiv@divisor^0,f,c
  8494  005338  360A               	rlcf	(___awdiv@divisor+1)^0,f,c
  8495  00533A  2A0B               	incf	___awdiv@counter^0,f,c
  8496  00533C                     l3544:
  8497  00533C  AE0A               	btfss	(___awdiv@divisor+1)^0,7,c
  8498  00533E  EFA3  F029         	goto	u3201
  8499  005342  EFA5  F029         	goto	u3200
  8500  005346                     u3201:
  8501  005346  EF9A  F029         	goto	l3542
  8502  00534A                     u3200:
  8503  00534A                     l3546:
  8504  00534A  90D8               	bcf	status,0,c
  8505  00534C  360D               	rlcf	___awdiv@quotient^0,f,c
  8506  00534E  360E               	rlcf	(___awdiv@quotient+1)^0,f,c
  8507  005350  5009               	movf	___awdiv@divisor^0,w,c
  8508  005352  5C07               	subwf	___awdiv@dividend^0,w,c
  8509  005354  500A               	movf	(___awdiv@divisor+1)^0,w,c
  8510  005356  5808               	subwfb	(___awdiv@dividend+1)^0,w,c
  8511  005358  A0D8               	btfss	status,0,c
  8512  00535A  EFB1  F029         	goto	u3211
  8513  00535E  EFB3  F029         	goto	u3210
  8514  005362                     u3211:
  8515  005362  EFB8  F029         	goto	l3554
  8516  005366                     u3210:
  8517  005366  5009               	movf	___awdiv@divisor^0,w,c
  8518  005368  5E07               	subwf	___awdiv@dividend^0,f,c
  8519  00536A  500A               	movf	(___awdiv@divisor+1)^0,w,c
  8520  00536C  5A08               	subwfb	(___awdiv@dividend+1)^0,f,c
  8521  00536E  800D               	bsf	___awdiv@quotient^0,0,c
  8522  005370                     l3554:
  8523  005370  90D8               	bcf	status,0,c
  8524  005372  320A               	rrcf	(___awdiv@divisor+1)^0,f,c
  8525  005374  3209               	rrcf	___awdiv@divisor^0,f,c
  8526  005376  2E0B               	decfsz	___awdiv@counter^0,f,c
  8527  005378  EFA5  F029         	goto	l3546
  8528  00537C                     l3558:
  8529  00537C  500C               	movf	___awdiv@sign^0,w,c
  8530  00537E  B4D8               	btfsc	status,2,c
  8531  005380  EFC4  F029         	goto	u3221
  8532  005384  EFC6  F029         	goto	u3220
  8533  005388                     u3221:
  8534  005388  EFCA  F029         	goto	l3562
  8535  00538C                     u3220:
  8536  00538C  6C0D               	negf	___awdiv@quotient^0,c
  8537  00538E  1E0E               	comf	(___awdiv@quotient+1)^0,f,c
  8538  005390  B0D8               	btfsc	status,0,c
  8539  005392  2A0E               	incf	(___awdiv@quotient+1)^0,f,c
  8540  005394                     l3562:
  8541  005394  C00D  F007         	movff	___awdiv@quotient,?___awdiv
  8542  005398  C00E  F008         	movff	___awdiv@quotient+1,?___awdiv+1
  8543  00539C  0012               	return		;funcret
  8544  00539E                     __end_of___awdiv:
  8545                           	callstack 0
  8546                           
  8547 ;; *************** function _calibrate_white *****************
  8548 ;; Defined at:
  8549 ;;		line 307 in file "color.c"
  8550 ;; Parameters:    Size  Location     Type
  8551 ;;  w               2   11[COMRAM] PTR struct white_card
  8552 ;;		 -> main@white(28), 
  8553 ;; Auto vars:     Size  Location     Type
  8554 ;;		None
  8555 ;; Return value:  Size  Location     Type
  8556 ;;                  1    wreg      void 
  8557 ;; Registers used:
  8558 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8559 ;; Tracked objects:
  8560 ;;		On entry : 0/0
  8561 ;;		On exit  : 0/0
  8562 ;;		Unchanged: 0/0
  8563 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8564 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8565 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8566 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8567 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8568 ;;Total ram usage:        4 bytes
  8569 ;; Hardware stack levels used: 1
  8570 ;; Hardware stack levels required when called: 4
  8571 ;; This function calls:
  8572 ;;		_LED_B
  8573 ;;		_LED_C
  8574 ;;		_LED_G
  8575 ;;		_LED_OFF
  8576 ;;		_LED_R
  8577 ;;		_color_read_Blue
  8578 ;;		_color_read_Clear
  8579 ;;		_color_read_Green
  8580 ;;		_color_read_Red
  8581 ;;		_toggle_light
  8582 ;; This function is called by:
  8583 ;;		_setup
  8584 ;;		_test_function
  8585 ;; This function uses a non-reentrant model
  8586 ;;
  8587                           
  8588                           	psect	text37
  8589  00384E                     __ptext37:
  8590                           	callstack 0
  8591  00384E                     _calibrate_white:
  8592                           	callstack 25
  8593  00384E                     
  8594                           ;color.c: 307: void calibrate_white(struct white_card *w);color.c: 308: {;color.c: 309: 
      +                              LED_OFF();
  8595  00384E  ECD5  F02D         	call	_LED_OFF	;wreg free
  8596  003852                     
  8597                           ;color.c: 310:     toggle_light(1,2);
  8598  003852  0E02               	movlw	2
  8599  003854  6E01               	movwf	toggle_light@toggletime^0,c
  8600  003856  0E01               	movlw	1
  8601  003858  ECC7  F019         	call	_toggle_light
  8602  00385C                     
  8603                           ;color.c: 311:     _delay((unsigned long)((500)*(64000000/4000.0)));
  8604  00385C  0E29               	movlw	41
  8605  00385E  6E0F               	movwf	(??_calibrate_white+1)^0,c
  8606  003860  0E96               	movlw	150
  8607  003862  6E0E               	movwf	??_calibrate_white^0,c
  8608  003864  0E7F               	movlw	127
  8609  003866                     u6227:
  8610  003866  2EE8               	decfsz	wreg,f,c
  8611  003868  D7FE               	bra	u6227
  8612  00386A  2E0E               	decfsz	??_calibrate_white^0,f,c
  8613  00386C  D7FC               	bra	u6227
  8614  00386E  2E0F               	decfsz	(??_calibrate_white+1)^0,f,c
  8615  003870  D7FA               	bra	u6227
  8616  003872  F000               	nop	
  8617  003874                     
  8618                           ;color.c: 313:     LED_R();
  8619  003874  ECC5  F02D         	call	_LED_R	;wreg free
  8620  003878                     
  8621                           ;color.c: 314:     _delay((unsigned long)((100)*(64000000/4000.0)));
  8622  003878  0E09               	movlw	9
  8623  00387A  6E0F               	movwf	(??_calibrate_white+1)^0,c
  8624  00387C  0E1E               	movlw	30
  8625  00387E  6E0E               	movwf	??_calibrate_white^0,c
  8626  003880  0EE4               	movlw	228
  8627  003882                     u6237:
  8628  003882  2EE8               	decfsz	wreg,f,c
  8629  003884  D7FE               	bra	u6237
  8630  003886  2E0E               	decfsz	??_calibrate_white^0,f,c
  8631  003888  D7FC               	bra	u6237
  8632  00388A  2E0F               	decfsz	(??_calibrate_white+1)^0,f,c
  8633  00388C  D7FA               	bra	u6237
  8634  00388E  D000               	nop2	
  8635  003890                     
  8636                           ;color.c: 315:     w->RR = color_read_Red(); w->RG = color_read_Green(); w->RB = color_r
      +                          ead_Blue();
  8637  003890  EC2D  F02B         	call	_color_read_Red	;wreg free
  8638  003894  C00C  FFD9         	movff	calibrate_white@w,fsr2l
  8639  003898  C00D  FFDA         	movff	calibrate_white@w+1,fsr2h
  8640  00389C  C005  FFDE         	movff	?_color_read_Red,postinc2
  8641  0038A0  C006  FFDD         	movff	?_color_read_Red+1,postdec2
  8642  0038A4  EC55  F02B         	call	_color_read_Green	;wreg free
  8643  0038A8  EE20 F002          	lfsr	2,2
  8644  0038AC  500C               	movf	calibrate_white@w^0,w,c
  8645  0038AE  26D9               	addwf	fsr2l,f,c
  8646  0038B0  500D               	movf	(calibrate_white@w+1)^0,w,c
  8647  0038B2  22DA               	addwfc	fsr2h,f,c
  8648  0038B4  C005  FFDE         	movff	?_color_read_Green,postinc2
  8649  0038B8  C006  FFDD         	movff	?_color_read_Green+1,postdec2
  8650  0038BC  EC7D  F02B         	call	_color_read_Blue	;wreg free
  8651  0038C0  EE20 F004          	lfsr	2,4
  8652  0038C4  500C               	movf	calibrate_white@w^0,w,c
  8653  0038C6  26D9               	addwf	fsr2l,f,c
  8654  0038C8  500D               	movf	(calibrate_white@w+1)^0,w,c
  8655  0038CA  22DA               	addwfc	fsr2h,f,c
  8656  0038CC  C005  FFDE         	movff	?_color_read_Blue,postinc2
  8657  0038D0  C006  FFDD         	movff	?_color_read_Blue+1,postdec2
  8658  0038D4                     
  8659                           ;color.c: 317:     LED_G();
  8660  0038D4  ECE5  F02D         	call	_LED_G	;wreg free
  8661  0038D8                     
  8662                           ;color.c: 318:     _delay((unsigned long)((100)*(64000000/4000.0)));
  8663  0038D8  0E09               	movlw	9
  8664  0038DA  6E0F               	movwf	(??_calibrate_white+1)^0,c
  8665  0038DC  0E1E               	movlw	30
  8666  0038DE  6E0E               	movwf	??_calibrate_white^0,c
  8667  0038E0  0EE4               	movlw	228
  8668  0038E2                     u6247:
  8669  0038E2  2EE8               	decfsz	wreg,f,c
  8670  0038E4  D7FE               	bra	u6247
  8671  0038E6  2E0E               	decfsz	??_calibrate_white^0,f,c
  8672  0038E8  D7FC               	bra	u6247
  8673  0038EA  2E0F               	decfsz	(??_calibrate_white+1)^0,f,c
  8674  0038EC  D7FA               	bra	u6247
  8675  0038EE  D000               	nop2	
  8676  0038F0                     
  8677                           ;color.c: 319:     w->GR = color_read_Red(); w->GG = color_read_Green(); w->GB = color_r
      +                          ead_Blue();
  8678  0038F0  EC2D  F02B         	call	_color_read_Red	;wreg free
  8679  0038F4  EE20 F006          	lfsr	2,6
  8680  0038F8  500C               	movf	calibrate_white@w^0,w,c
  8681  0038FA  26D9               	addwf	fsr2l,f,c
  8682  0038FC  500D               	movf	(calibrate_white@w+1)^0,w,c
  8683  0038FE  22DA               	addwfc	fsr2h,f,c
  8684  003900  C005  FFDE         	movff	?_color_read_Red,postinc2
  8685  003904  C006  FFDD         	movff	?_color_read_Red+1,postdec2
  8686  003908  EC55  F02B         	call	_color_read_Green	;wreg free
  8687  00390C  EE20 F008          	lfsr	2,8
  8688  003910  500C               	movf	calibrate_white@w^0,w,c
  8689  003912  26D9               	addwf	fsr2l,f,c
  8690  003914  500D               	movf	(calibrate_white@w+1)^0,w,c
  8691  003916  22DA               	addwfc	fsr2h,f,c
  8692  003918  C005  FFDE         	movff	?_color_read_Green,postinc2
  8693  00391C  C006  FFDD         	movff	?_color_read_Green+1,postdec2
  8694  003920  EC7D  F02B         	call	_color_read_Blue	;wreg free
  8695  003924  EE20 F00A          	lfsr	2,10
  8696  003928  500C               	movf	calibrate_white@w^0,w,c
  8697  00392A  26D9               	addwf	fsr2l,f,c
  8698  00392C  500D               	movf	(calibrate_white@w+1)^0,w,c
  8699  00392E  22DA               	addwfc	fsr2h,f,c
  8700  003930  C005  FFDE         	movff	?_color_read_Blue,postinc2
  8701  003934  C006  FFDD         	movff	?_color_read_Blue+1,postdec2
  8702  003938                     
  8703                           ;color.c: 321:     LED_B();
  8704  003938  ECF5  F02D         	call	_LED_B	;wreg free
  8705  00393C                     
  8706                           ;color.c: 322:     _delay((unsigned long)((100)*(64000000/4000.0)));
  8707  00393C  0E09               	movlw	9
  8708  00393E  6E0F               	movwf	(??_calibrate_white+1)^0,c
  8709  003940  0E1E               	movlw	30
  8710  003942  6E0E               	movwf	??_calibrate_white^0,c
  8711  003944  0EE4               	movlw	228
  8712  003946                     u6257:
  8713  003946  2EE8               	decfsz	wreg,f,c
  8714  003948  D7FE               	bra	u6257
  8715  00394A  2E0E               	decfsz	??_calibrate_white^0,f,c
  8716  00394C  D7FC               	bra	u6257
  8717  00394E  2E0F               	decfsz	(??_calibrate_white+1)^0,f,c
  8718  003950  D7FA               	bra	u6257
  8719  003952  D000               	nop2	
  8720  003954                     
  8721                           ;color.c: 323:     w->BR = color_read_Red(); w->BG = color_read_Green(); w->BB = color_r
      +                          ead_Blue(); w->BC = color_read_Clear();
  8722  003954  EC2D  F02B         	call	_color_read_Red	;wreg free
  8723  003958  EE20 F00C          	lfsr	2,12
  8724  00395C  500C               	movf	calibrate_white@w^0,w,c
  8725  00395E  26D9               	addwf	fsr2l,f,c
  8726  003960  500D               	movf	(calibrate_white@w+1)^0,w,c
  8727  003962  22DA               	addwfc	fsr2h,f,c
  8728  003964  C005  FFDE         	movff	?_color_read_Red,postinc2
  8729  003968  C006  FFDD         	movff	?_color_read_Red+1,postdec2
  8730  00396C  EC55  F02B         	call	_color_read_Green	;wreg free
  8731  003970  EE20 F00E          	lfsr	2,14
  8732  003974  500C               	movf	calibrate_white@w^0,w,c
  8733  003976  26D9               	addwf	fsr2l,f,c
  8734  003978  500D               	movf	(calibrate_white@w+1)^0,w,c
  8735  00397A  22DA               	addwfc	fsr2h,f,c
  8736  00397C  C005  FFDE         	movff	?_color_read_Green,postinc2
  8737  003980  C006  FFDD         	movff	?_color_read_Green+1,postdec2
  8738  003984  EC7D  F02B         	call	_color_read_Blue	;wreg free
  8739  003988  EE20 F010          	lfsr	2,16
  8740  00398C  500C               	movf	calibrate_white@w^0,w,c
  8741  00398E  26D9               	addwf	fsr2l,f,c
  8742  003990  500D               	movf	(calibrate_white@w+1)^0,w,c
  8743  003992  22DA               	addwfc	fsr2h,f,c
  8744  003994  C005  FFDE         	movff	?_color_read_Blue,postinc2
  8745  003998  C006  FFDD         	movff	?_color_read_Blue+1,postdec2
  8746  00399C  ECA5  F02B         	call	_color_read_Clear	;wreg free
  8747  0039A0  EE20 F01A          	lfsr	2,26
  8748  0039A4  500C               	movf	calibrate_white@w^0,w,c
  8749  0039A6  26D9               	addwf	fsr2l,f,c
  8750  0039A8  500D               	movf	(calibrate_white@w+1)^0,w,c
  8751  0039AA  22DA               	addwfc	fsr2h,f,c
  8752  0039AC  C005  FFDE         	movff	?_color_read_Clear,postinc2
  8753  0039B0  C006  FFDD         	movff	?_color_read_Clear+1,postdec2
  8754  0039B4                     
  8755                           ;color.c: 325:     LED_C();
  8756  0039B4  EC05  F02E         	call	_LED_C	;wreg free
  8757  0039B8                     
  8758                           ;color.c: 326:     _delay((unsigned long)((100)*(64000000/4000.0)));
  8759  0039B8  0E09               	movlw	9
  8760  0039BA  6E0F               	movwf	(??_calibrate_white+1)^0,c
  8761  0039BC  0E1E               	movlw	30
  8762  0039BE  6E0E               	movwf	??_calibrate_white^0,c
  8763  0039C0  0EE4               	movlw	228
  8764  0039C2                     u6267:
  8765  0039C2  2EE8               	decfsz	wreg,f,c
  8766  0039C4  D7FE               	bra	u6267
  8767  0039C6  2E0E               	decfsz	??_calibrate_white^0,f,c
  8768  0039C8  D7FC               	bra	u6267
  8769  0039CA  2E0F               	decfsz	(??_calibrate_white+1)^0,f,c
  8770  0039CC  D7FA               	bra	u6267
  8771  0039CE  D000               	nop2	
  8772  0039D0                     
  8773                           ;color.c: 327:     w->CR = color_read_Red(); w->CG = color_read_Green(); w->CB = color_r
      +                          ead_Blue(); w->CC = color_read_Clear();
  8774  0039D0  EC2D  F02B         	call	_color_read_Red	;wreg free
  8775  0039D4  EE20 F012          	lfsr	2,18
  8776  0039D8  500C               	movf	calibrate_white@w^0,w,c
  8777  0039DA  26D9               	addwf	fsr2l,f,c
  8778  0039DC  500D               	movf	(calibrate_white@w+1)^0,w,c
  8779  0039DE  22DA               	addwfc	fsr2h,f,c
  8780  0039E0  C005  FFDE         	movff	?_color_read_Red,postinc2
  8781  0039E4  C006  FFDD         	movff	?_color_read_Red+1,postdec2
  8782  0039E8  EC55  F02B         	call	_color_read_Green	;wreg free
  8783  0039EC  EE20 F014          	lfsr	2,20
  8784  0039F0  500C               	movf	calibrate_white@w^0,w,c
  8785  0039F2  26D9               	addwf	fsr2l,f,c
  8786  0039F4  500D               	movf	(calibrate_white@w+1)^0,w,c
  8787  0039F6  22DA               	addwfc	fsr2h,f,c
  8788  0039F8  C005  FFDE         	movff	?_color_read_Green,postinc2
  8789  0039FC  C006  FFDD         	movff	?_color_read_Green+1,postdec2
  8790  003A00  EC7D  F02B         	call	_color_read_Blue	;wreg free
  8791  003A04  EE20 F016          	lfsr	2,22
  8792  003A08  500C               	movf	calibrate_white@w^0,w,c
  8793  003A0A  26D9               	addwf	fsr2l,f,c
  8794  003A0C  500D               	movf	(calibrate_white@w+1)^0,w,c
  8795  003A0E  22DA               	addwfc	fsr2h,f,c
  8796  003A10  C005  FFDE         	movff	?_color_read_Blue,postinc2
  8797  003A14  C006  FFDD         	movff	?_color_read_Blue+1,postdec2
  8798  003A18  ECA5  F02B         	call	_color_read_Clear	;wreg free
  8799  003A1C  EE20 F018          	lfsr	2,24
  8800  003A20  500C               	movf	calibrate_white@w^0,w,c
  8801  003A22  26D9               	addwf	fsr2l,f,c
  8802  003A24  500D               	movf	(calibrate_white@w+1)^0,w,c
  8803  003A26  22DA               	addwfc	fsr2h,f,c
  8804  003A28  C005  FFDE         	movff	?_color_read_Clear,postinc2
  8805  003A2C  C006  FFDD         	movff	?_color_read_Clear+1,postdec2
  8806  003A30                     
  8807                           ;color.c: 329:     LED_OFF();
  8808  003A30  ECD5  F02D         	call	_LED_OFF	;wreg free
  8809  003A34                     
  8810                           ;color.c: 330:     _delay((unsigned long)((500)*(64000000/4000.0)));
  8811  003A34  0E29               	movlw	41
  8812  003A36  6E0F               	movwf	(??_calibrate_white+1)^0,c
  8813  003A38  0E96               	movlw	150
  8814  003A3A  6E0E               	movwf	??_calibrate_white^0,c
  8815  003A3C  0E7F               	movlw	127
  8816  003A3E                     u6277:
  8817  003A3E  2EE8               	decfsz	wreg,f,c
  8818  003A40  D7FE               	bra	u6277
  8819  003A42  2E0E               	decfsz	??_calibrate_white^0,f,c
  8820  003A44  D7FC               	bra	u6277
  8821  003A46  2E0F               	decfsz	(??_calibrate_white+1)^0,f,c
  8822  003A48  D7FA               	bra	u6277
  8823  003A4A  F000               	nop	
  8824                           
  8825                           ;color.c: 331:     toggle_light(1,2);
  8826  003A4C  0E02               	movlw	2
  8827  003A4E  6E01               	movwf	toggle_light@toggletime^0,c
  8828  003A50  0E01               	movlw	1
  8829  003A52  ECC7  F019         	call	_toggle_light
  8830  003A56  0012               	return		;funcret
  8831  003A58                     __end_of_calibrate_white:
  8832                           	callstack 0
  8833                           
  8834 ;; *************** function _color_read_Red *****************
  8835 ;; Defined at:
  8836 ;;		line 109 in file "color.c"
  8837 ;; Parameters:    Size  Location     Type
  8838 ;;		None
  8839 ;; Auto vars:     Size  Location     Type
  8840 ;;  tmp             2    9[COMRAM] unsigned int 
  8841 ;; Return value:  Size  Location     Type
  8842 ;;                  2    4[COMRAM] unsigned int 
  8843 ;; Registers used:
  8844 ;;		wreg, status,2, status,0, cstack
  8845 ;; Tracked objects:
  8846 ;;		On entry : 0/0
  8847 ;;		On exit  : 0/0
  8848 ;;		Unchanged: 0/0
  8849 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8850 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8851 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8852 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8853 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8854 ;;Total ram usage:        7 bytes
  8855 ;; Hardware stack levels used: 1
  8856 ;; Hardware stack levels required when called: 3
  8857 ;; This function calls:
  8858 ;;		_I2C_2_Master_Read
  8859 ;;		_I2C_2_Master_RepStart
  8860 ;;		_I2C_2_Master_Start
  8861 ;;		_I2C_2_Master_Stop
  8862 ;;		_I2C_2_Master_Write
  8863 ;; This function is called by:
  8864 ;;		_read_color
  8865 ;;		_calibrate_white
  8866 ;; This function uses a non-reentrant model
  8867 ;;
  8868                           
  8869                           	psect	text38
  8870  00565A                     __ptext38:
  8871                           	callstack 0
  8872  00565A                     _color_read_Red:
  8873                           	callstack 24
  8874  00565A                     
  8875                           ;color.c: 111:  unsigned int tmp;;color.c: 112:  I2C_2_Master_Start();
  8876  00565A  EC65  F02E         	call	_I2C_2_Master_Start	;wreg free
  8877                           
  8878                           ;color.c: 113:  I2C_2_Master_Write(0x52 | 0x00);
  8879  00565E  0E52               	movlw	82
  8880  005660  EC4F  F02E         	call	_I2C_2_Master_Write
  8881                           
  8882                           ;color.c: 114:  I2C_2_Master_Write(0xA0 | 0x16);
  8883  005664  0EB6               	movlw	182
  8884  005666  EC4F  F02E         	call	_I2C_2_Master_Write
  8885                           
  8886                           ;color.c: 115:  I2C_2_Master_RepStart();
  8887  00566A  EC5B  F02E         	call	_I2C_2_Master_RepStart	;wreg free
  8888                           
  8889                           ;color.c: 116:  I2C_2_Master_Write(0x52 | 0x01);
  8890  00566E  0E53               	movlw	83
  8891  005670  EC4F  F02E         	call	_I2C_2_Master_Write
  8892                           
  8893                           ;color.c: 117:  tmp=I2C_2_Master_Read(1);
  8894  005674  0E01               	movlw	1
  8895  005676  EC54  F02C         	call	_I2C_2_Master_Read
  8896  00567A  6E07               	movwf	??_color_read_Red^0,c
  8897  00567C  5007               	movf	??_color_read_Red^0,w,c
  8898  00567E  6E0A               	movwf	color_read_Red@tmp^0,c
  8899  005680  6A0B               	clrf	(color_read_Red@tmp+1)^0,c
  8900                           
  8901                           ;color.c: 118:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  8902  005682  0E00               	movlw	0
  8903  005684  EC54  F02C         	call	_I2C_2_Master_Read
  8904  005688  6E07               	movwf	??_color_read_Red^0,c
  8905  00568A  5007               	movf	??_color_read_Red^0,w,c
  8906  00568C  6E09               	movwf	(??_color_read_Red+2)^0,c
  8907  00568E  6A08               	clrf	(??_color_read_Red+1)^0,c
  8908  005690  500A               	movf	color_read_Red@tmp^0,w,c
  8909  005692  1008               	iorwf	(??_color_read_Red+1)^0,w,c
  8910  005694  6E0A               	movwf	color_read_Red@tmp^0,c
  8911  005696  500B               	movf	(color_read_Red@tmp+1)^0,w,c
  8912  005698  1009               	iorwf	(??_color_read_Red+2)^0,w,c
  8913  00569A  6E0B               	movwf	(color_read_Red@tmp+1)^0,c
  8914                           
  8915                           ;color.c: 119:  I2C_2_Master_Stop();
  8916  00569C  EC60  F02E         	call	_I2C_2_Master_Stop	;wreg free
  8917  0056A0                     
  8918                           ;color.c: 120:  return tmp;
  8919  0056A0  C00A  F005         	movff	color_read_Red@tmp,?_color_read_Red
  8920  0056A4  C00B  F006         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  8921  0056A8  0012               	return		;funcret
  8922  0056AA                     __end_of_color_read_Red:
  8923                           	callstack 0
  8924                           
  8925 ;; *************** function _color_read_Green *****************
  8926 ;; Defined at:
  8927 ;;		line 137 in file "color.c"
  8928 ;; Parameters:    Size  Location     Type
  8929 ;;		None
  8930 ;; Auto vars:     Size  Location     Type
  8931 ;;  tmp             2    9[COMRAM] unsigned int 
  8932 ;; Return value:  Size  Location     Type
  8933 ;;                  2    4[COMRAM] unsigned int 
  8934 ;; Registers used:
  8935 ;;		wreg, status,2, status,0, cstack
  8936 ;; Tracked objects:
  8937 ;;		On entry : 0/0
  8938 ;;		On exit  : 0/0
  8939 ;;		Unchanged: 0/0
  8940 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8941 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8942 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8943 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8944 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8945 ;;Total ram usage:        7 bytes
  8946 ;; Hardware stack levels used: 1
  8947 ;; Hardware stack levels required when called: 3
  8948 ;; This function calls:
  8949 ;;		_I2C_2_Master_Read
  8950 ;;		_I2C_2_Master_RepStart
  8951 ;;		_I2C_2_Master_Start
  8952 ;;		_I2C_2_Master_Stop
  8953 ;;		_I2C_2_Master_Write
  8954 ;; This function is called by:
  8955 ;;		_read_color
  8956 ;;		_calibrate_white
  8957 ;; This function uses a non-reentrant model
  8958 ;;
  8959                           
  8960                           	psect	text39
  8961  0056AA                     __ptext39:
  8962                           	callstack 0
  8963  0056AA                     _color_read_Green:
  8964                           	callstack 24
  8965  0056AA                     
  8966                           ;color.c: 139:  unsigned int tmp;;color.c: 140:  I2C_2_Master_Start();
  8967  0056AA  EC65  F02E         	call	_I2C_2_Master_Start	;wreg free
  8968                           
  8969                           ;color.c: 141:  I2C_2_Master_Write(0x52 | 0x00);
  8970  0056AE  0E52               	movlw	82
  8971  0056B0  EC4F  F02E         	call	_I2C_2_Master_Write
  8972                           
  8973                           ;color.c: 142:  I2C_2_Master_Write(0xA0 | 0x18);
  8974  0056B4  0EB8               	movlw	184
  8975  0056B6  EC4F  F02E         	call	_I2C_2_Master_Write
  8976                           
  8977                           ;color.c: 143:  I2C_2_Master_RepStart();
  8978  0056BA  EC5B  F02E         	call	_I2C_2_Master_RepStart	;wreg free
  8979                           
  8980                           ;color.c: 144:  I2C_2_Master_Write(0x52 | 0x01);
  8981  0056BE  0E53               	movlw	83
  8982  0056C0  EC4F  F02E         	call	_I2C_2_Master_Write
  8983                           
  8984                           ;color.c: 145:  tmp=I2C_2_Master_Read(1);
  8985  0056C4  0E01               	movlw	1
  8986  0056C6  EC54  F02C         	call	_I2C_2_Master_Read
  8987  0056CA  6E07               	movwf	??_color_read_Green^0,c
  8988  0056CC  5007               	movf	??_color_read_Green^0,w,c
  8989  0056CE  6E0A               	movwf	color_read_Green@tmp^0,c
  8990  0056D0  6A0B               	clrf	(color_read_Green@tmp+1)^0,c
  8991                           
  8992                           ;color.c: 146:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  8993  0056D2  0E00               	movlw	0
  8994  0056D4  EC54  F02C         	call	_I2C_2_Master_Read
  8995  0056D8  6E07               	movwf	??_color_read_Green^0,c
  8996  0056DA  5007               	movf	??_color_read_Green^0,w,c
  8997  0056DC  6E09               	movwf	(??_color_read_Green+2)^0,c
  8998  0056DE  6A08               	clrf	(??_color_read_Green+1)^0,c
  8999  0056E0  500A               	movf	color_read_Green@tmp^0,w,c
  9000  0056E2  1008               	iorwf	(??_color_read_Green+1)^0,w,c
  9001  0056E4  6E0A               	movwf	color_read_Green@tmp^0,c
  9002  0056E6  500B               	movf	(color_read_Green@tmp+1)^0,w,c
  9003  0056E8  1009               	iorwf	(??_color_read_Green+2)^0,w,c
  9004  0056EA  6E0B               	movwf	(color_read_Green@tmp+1)^0,c
  9005                           
  9006                           ;color.c: 147:  I2C_2_Master_Stop();
  9007  0056EC  EC60  F02E         	call	_I2C_2_Master_Stop	;wreg free
  9008  0056F0                     
  9009                           ;color.c: 148:  return tmp;
  9010  0056F0  C00A  F005         	movff	color_read_Green@tmp,?_color_read_Green
  9011  0056F4  C00B  F006         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  9012  0056F8  0012               	return		;funcret
  9013  0056FA                     __end_of_color_read_Green:
  9014                           	callstack 0
  9015                           
  9016 ;; *************** function _color_read_Blue *****************
  9017 ;; Defined at:
  9018 ;;		line 123 in file "color.c"
  9019 ;; Parameters:    Size  Location     Type
  9020 ;;		None
  9021 ;; Auto vars:     Size  Location     Type
  9022 ;;  tmp             2    9[COMRAM] unsigned int 
  9023 ;; Return value:  Size  Location     Type
  9024 ;;                  2    4[COMRAM] unsigned int 
  9025 ;; Registers used:
  9026 ;;		wreg, status,2, status,0, cstack
  9027 ;; Tracked objects:
  9028 ;;		On entry : 0/0
  9029 ;;		On exit  : 0/0
  9030 ;;		Unchanged: 0/0
  9031 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9032 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9033 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9034 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9035 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9036 ;;Total ram usage:        7 bytes
  9037 ;; Hardware stack levels used: 1
  9038 ;; Hardware stack levels required when called: 3
  9039 ;; This function calls:
  9040 ;;		_I2C_2_Master_Read
  9041 ;;		_I2C_2_Master_RepStart
  9042 ;;		_I2C_2_Master_Start
  9043 ;;		_I2C_2_Master_Stop
  9044 ;;		_I2C_2_Master_Write
  9045 ;; This function is called by:
  9046 ;;		_read_color
  9047 ;;		_calibrate_white
  9048 ;; This function uses a non-reentrant model
  9049 ;;
  9050                           
  9051                           	psect	text40
  9052  0056FA                     __ptext40:
  9053                           	callstack 0
  9054  0056FA                     _color_read_Blue:
  9055                           	callstack 24
  9056  0056FA                     
  9057                           ;color.c: 125:  unsigned int tmp;;color.c: 126:  I2C_2_Master_Start();
  9058  0056FA  EC65  F02E         	call	_I2C_2_Master_Start	;wreg free
  9059                           
  9060                           ;color.c: 127:  I2C_2_Master_Write(0x52 | 0x00);
  9061  0056FE  0E52               	movlw	82
  9062  005700  EC4F  F02E         	call	_I2C_2_Master_Write
  9063                           
  9064                           ;color.c: 128:  I2C_2_Master_Write(0xA0 | 0x1A);
  9065  005704  0EBA               	movlw	186
  9066  005706  EC4F  F02E         	call	_I2C_2_Master_Write
  9067                           
  9068                           ;color.c: 129:  I2C_2_Master_RepStart();
  9069  00570A  EC5B  F02E         	call	_I2C_2_Master_RepStart	;wreg free
  9070                           
  9071                           ;color.c: 130:  I2C_2_Master_Write(0x52 | 0x01);
  9072  00570E  0E53               	movlw	83
  9073  005710  EC4F  F02E         	call	_I2C_2_Master_Write
  9074                           
  9075                           ;color.c: 131:  tmp=I2C_2_Master_Read(1);
  9076  005714  0E01               	movlw	1
  9077  005716  EC54  F02C         	call	_I2C_2_Master_Read
  9078  00571A  6E07               	movwf	??_color_read_Blue^0,c
  9079  00571C  5007               	movf	??_color_read_Blue^0,w,c
  9080  00571E  6E0A               	movwf	color_read_Blue@tmp^0,c
  9081  005720  6A0B               	clrf	(color_read_Blue@tmp+1)^0,c
  9082                           
  9083                           ;color.c: 132:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  9084  005722  0E00               	movlw	0
  9085  005724  EC54  F02C         	call	_I2C_2_Master_Read
  9086  005728  6E07               	movwf	??_color_read_Blue^0,c
  9087  00572A  5007               	movf	??_color_read_Blue^0,w,c
  9088  00572C  6E09               	movwf	(??_color_read_Blue+2)^0,c
  9089  00572E  6A08               	clrf	(??_color_read_Blue+1)^0,c
  9090  005730  500A               	movf	color_read_Blue@tmp^0,w,c
  9091  005732  1008               	iorwf	(??_color_read_Blue+1)^0,w,c
  9092  005734  6E0A               	movwf	color_read_Blue@tmp^0,c
  9093  005736  500B               	movf	(color_read_Blue@tmp+1)^0,w,c
  9094  005738  1009               	iorwf	(??_color_read_Blue+2)^0,w,c
  9095  00573A  6E0B               	movwf	(color_read_Blue@tmp+1)^0,c
  9096                           
  9097                           ;color.c: 133:  I2C_2_Master_Stop();
  9098  00573C  EC60  F02E         	call	_I2C_2_Master_Stop	;wreg free
  9099  005740                     
  9100                           ;color.c: 134:  return tmp;
  9101  005740  C00A  F005         	movff	color_read_Blue@tmp,?_color_read_Blue
  9102  005744  C00B  F006         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  9103  005748  0012               	return		;funcret
  9104  00574A                     __end_of_color_read_Blue:
  9105                           	callstack 0
  9106                           
  9107 ;; *************** function _LED_R *****************
  9108 ;; Defined at:
  9109 ;;		line 184 in file "color.c"
  9110 ;; Parameters:    Size  Location     Type
  9111 ;;		None
  9112 ;; Auto vars:     Size  Location     Type
  9113 ;;		None
  9114 ;; Return value:  Size  Location     Type
  9115 ;;                  1    wreg      void 
  9116 ;; Registers used:
  9117 ;;		wreg
  9118 ;; Tracked objects:
  9119 ;;		On entry : 0/0
  9120 ;;		On exit  : 0/0
  9121 ;;		Unchanged: 0/0
  9122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9123 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9124 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9125 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9126 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9127 ;;Total ram usage:        2 bytes
  9128 ;; Hardware stack levels used: 1
  9129 ;; Hardware stack levels required when called: 1
  9130 ;; This function calls:
  9131 ;;		Nothing
  9132 ;; This function is called by:
  9133 ;;		_detect_color
  9134 ;;		_calibrate_white
  9135 ;;		_color_data_collection
  9136 ;; This function uses a non-reentrant model
  9137 ;;
  9138                           
  9139                           	psect	text41
  9140  005B8A                     __ptext41:
  9141                           	callstack 0
  9142  005B8A                     _LED_R:
  9143                           	callstack 27
  9144  005B8A                     
  9145                           ;color.c: 186:     LATGbits.LATG1 = 1;
  9146  005B8A  827F               	bsf	127,1,c	;volatile
  9147                           
  9148                           ;color.c: 187:     LATFbits.LATF7 = 0;
  9149  005B8C  9E7E               	bcf	126,7,c	;volatile
  9150                           
  9151                           ;color.c: 188:     LATAbits.LATA4 = 0;
  9152  005B8E  9879               	bcf	121,4,c	;volatile
  9153  005B90                     
  9154                           ;color.c: 189:     _delay((unsigned long)((200)*(64000000/4000.0)));
  9155  005B90  0E11               	movlw	17
  9156  005B92  6E02               	movwf	(??_LED_R+1)^0,c
  9157  005B94  0E3C               	movlw	60
  9158  005B96  6E01               	movwf	??_LED_R^0,c
  9159  005B98  0ECB               	movlw	203
  9160  005B9A                     u6287:
  9161  005B9A  2EE8               	decfsz	wreg,f,c
  9162  005B9C  D7FE               	bra	u6287
  9163  005B9E  2E01               	decfsz	??_LED_R^0,f,c
  9164  005BA0  D7FC               	bra	u6287
  9165  005BA2  2E02               	decfsz	(??_LED_R+1)^0,f,c
  9166  005BA4  D7FA               	bra	u6287
  9167  005BA6  F000               	nop	
  9168  005BA8  0012               	return		;funcret
  9169  005BAA                     __end_of_LED_R:
  9170                           	callstack 0
  9171                           
  9172 ;; *************** function _LED_OFF *****************
  9173 ;; Defined at:
  9174 ;;		line 175 in file "color.c"
  9175 ;; Parameters:    Size  Location     Type
  9176 ;;		None
  9177 ;; Auto vars:     Size  Location     Type
  9178 ;;		None
  9179 ;; Return value:  Size  Location     Type
  9180 ;;                  1    wreg      void 
  9181 ;; Registers used:
  9182 ;;		wreg
  9183 ;; Tracked objects:
  9184 ;;		On entry : 0/0
  9185 ;;		On exit  : 0/0
  9186 ;;		Unchanged: 0/0
  9187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9188 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9189 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9190 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9191 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9192 ;;Total ram usage:        2 bytes
  9193 ;; Hardware stack levels used: 1
  9194 ;; Hardware stack levels required when called: 1
  9195 ;; This function calls:
  9196 ;;		Nothing
  9197 ;; This function is called by:
  9198 ;;		_calibrate_white
  9199 ;;		_setup
  9200 ;; This function uses a non-reentrant model
  9201 ;;
  9202                           
  9203                           	psect	text42
  9204  005BAA                     __ptext42:
  9205                           	callstack 0
  9206  005BAA                     _LED_OFF:
  9207                           	callstack 27
  9208  005BAA                     
  9209                           ;color.c: 177:     LATGbits.LATG1 = 0;
  9210  005BAA  927F               	bcf	127,1,c	;volatile
  9211                           
  9212                           ;color.c: 178:     LATFbits.LATF7 = 0;
  9213  005BAC  9E7E               	bcf	126,7,c	;volatile
  9214                           
  9215                           ;color.c: 179:     LATAbits.LATA4 = 0;
  9216  005BAE  9879               	bcf	121,4,c	;volatile
  9217  005BB0                     
  9218                           ;color.c: 180:     _delay((unsigned long)((200)*(64000000/4000.0)));
  9219  005BB0  0E11               	movlw	17
  9220  005BB2  6E02               	movwf	(??_LED_OFF+1)^0,c
  9221  005BB4  0E3C               	movlw	60
  9222  005BB6  6E01               	movwf	??_LED_OFF^0,c
  9223  005BB8  0ECB               	movlw	203
  9224  005BBA                     u6297:
  9225  005BBA  2EE8               	decfsz	wreg,f,c
  9226  005BBC  D7FE               	bra	u6297
  9227  005BBE  2E01               	decfsz	??_LED_OFF^0,f,c
  9228  005BC0  D7FC               	bra	u6297
  9229  005BC2  2E02               	decfsz	(??_LED_OFF+1)^0,f,c
  9230  005BC4  D7FA               	bra	u6297
  9231  005BC6  F000               	nop	
  9232  005BC8  0012               	return		;funcret
  9233  005BCA                     __end_of_LED_OFF:
  9234                           	callstack 0
  9235                           
  9236 ;; *************** function _LED_G *****************
  9237 ;; Defined at:
  9238 ;;		line 211 in file "color.c"
  9239 ;; Parameters:    Size  Location     Type
  9240 ;;		None
  9241 ;; Auto vars:     Size  Location     Type
  9242 ;;		None
  9243 ;; Return value:  Size  Location     Type
  9244 ;;                  1    wreg      void 
  9245 ;; Registers used:
  9246 ;;		wreg
  9247 ;; Tracked objects:
  9248 ;;		On entry : 0/0
  9249 ;;		On exit  : 0/0
  9250 ;;		Unchanged: 0/0
  9251 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9252 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9253 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9254 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9255 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9256 ;;Total ram usage:        2 bytes
  9257 ;; Hardware stack levels used: 1
  9258 ;; Hardware stack levels required when called: 1
  9259 ;; This function calls:
  9260 ;;		Nothing
  9261 ;; This function is called by:
  9262 ;;		_detect_color
  9263 ;;		_calibrate_white
  9264 ;;		_color_data_collection
  9265 ;; This function uses a non-reentrant model
  9266 ;;
  9267                           
  9268                           	psect	text43
  9269  005BCA                     __ptext43:
  9270                           	callstack 0
  9271  005BCA                     _LED_G:
  9272                           	callstack 27
  9273  005BCA                     
  9274                           ;color.c: 213:     LATGbits.LATG1 = 0;
  9275  005BCA  927F               	bcf	127,1,c	;volatile
  9276                           
  9277                           ;color.c: 214:     LATFbits.LATF7 = 0;
  9278  005BCC  9E7E               	bcf	126,7,c	;volatile
  9279                           
  9280                           ;color.c: 215:     LATAbits.LATA4 = 1;
  9281  005BCE  8879               	bsf	121,4,c	;volatile
  9282  005BD0                     
  9283                           ;color.c: 216:     _delay((unsigned long)((200)*(64000000/4000.0)));
  9284  005BD0  0E11               	movlw	17
  9285  005BD2  6E02               	movwf	(??_LED_G+1)^0,c
  9286  005BD4  0E3C               	movlw	60
  9287  005BD6  6E01               	movwf	??_LED_G^0,c
  9288  005BD8  0ECB               	movlw	203
  9289  005BDA                     u6307:
  9290  005BDA  2EE8               	decfsz	wreg,f,c
  9291  005BDC  D7FE               	bra	u6307
  9292  005BDE  2E01               	decfsz	??_LED_G^0,f,c
  9293  005BE0  D7FC               	bra	u6307
  9294  005BE2  2E02               	decfsz	(??_LED_G+1)^0,f,c
  9295  005BE4  D7FA               	bra	u6307
  9296  005BE6  F000               	nop	
  9297  005BE8  0012               	return		;funcret
  9298  005BEA                     __end_of_LED_G:
  9299                           	callstack 0
  9300                           
  9301 ;; *************** function _LED_B *****************
  9302 ;; Defined at:
  9303 ;;		line 202 in file "color.c"
  9304 ;; Parameters:    Size  Location     Type
  9305 ;;		None
  9306 ;; Auto vars:     Size  Location     Type
  9307 ;;		None
  9308 ;; Return value:  Size  Location     Type
  9309 ;;                  1    wreg      void 
  9310 ;; Registers used:
  9311 ;;		wreg
  9312 ;; Tracked objects:
  9313 ;;		On entry : 0/0
  9314 ;;		On exit  : 0/0
  9315 ;;		Unchanged: 0/0
  9316 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9317 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9318 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9319 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9320 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9321 ;;Total ram usage:        2 bytes
  9322 ;; Hardware stack levels used: 1
  9323 ;; Hardware stack levels required when called: 1
  9324 ;; This function calls:
  9325 ;;		Nothing
  9326 ;; This function is called by:
  9327 ;;		_detect_color
  9328 ;;		_calibrate_white
  9329 ;;		_color_data_collection
  9330 ;; This function uses a non-reentrant model
  9331 ;;
  9332                           
  9333                           	psect	text44
  9334  005BEA                     __ptext44:
  9335                           	callstack 0
  9336  005BEA                     _LED_B:
  9337                           	callstack 27
  9338  005BEA                     
  9339                           ;color.c: 204:     LATGbits.LATG1 = 0;
  9340  005BEA  927F               	bcf	127,1,c	;volatile
  9341                           
  9342                           ;color.c: 205:     LATFbits.LATF7 = 1;
  9343  005BEC  8E7E               	bsf	126,7,c	;volatile
  9344                           
  9345                           ;color.c: 206:     LATAbits.LATA4 = 0;
  9346  005BEE  9879               	bcf	121,4,c	;volatile
  9347  005BF0                     
  9348                           ;color.c: 207:     _delay((unsigned long)((200)*(64000000/4000.0)));
  9349  005BF0  0E11               	movlw	17
  9350  005BF2  6E02               	movwf	(??_LED_B+1)^0,c
  9351  005BF4  0E3C               	movlw	60
  9352  005BF6  6E01               	movwf	??_LED_B^0,c
  9353  005BF8  0ECB               	movlw	203
  9354  005BFA                     u6317:
  9355  005BFA  2EE8               	decfsz	wreg,f,c
  9356  005BFC  D7FE               	bra	u6317
  9357  005BFE  2E01               	decfsz	??_LED_B^0,f,c
  9358  005C00  D7FC               	bra	u6317
  9359  005C02  2E02               	decfsz	(??_LED_B+1)^0,f,c
  9360  005C04  D7FA               	bra	u6317
  9361  005C06  F000               	nop	
  9362  005C08  0012               	return		;funcret
  9363  005C0A                     __end_of_LED_B:
  9364                           	callstack 0
  9365                           
  9366 ;; *************** function _amb_light_measure *****************
  9367 ;; Defined at:
  9368 ;;		line 378 in file "color.c"
  9369 ;; Parameters:    Size  Location     Type
  9370 ;;  amb             2   79[COMRAM] PTR struct color_rgb
  9371 ;;		 -> main@rgb(8), main@amb(8), 
  9372 ;; Auto vars:     Size  Location     Type
  9373 ;;  CC_amb_3        2   89[COMRAM] unsigned int 
  9374 ;;  CC_amb_2        2   87[COMRAM] unsigned int 
  9375 ;;  CC_amb_1        2   85[COMRAM] unsigned int 
  9376 ;;  CC_amb_ave      2   83[COMRAM] unsigned int 
  9377 ;; Return value:  Size  Location     Type
  9378 ;;                  2   79[COMRAM] unsigned int 
  9379 ;; Registers used:
  9380 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  9381 ;; Tracked objects:
  9382 ;;		On entry : 0/0
  9383 ;;		On exit  : 0/0
  9384 ;;		Unchanged: 0/0
  9385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9386 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9387 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9388 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9389 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9390 ;;Total ram usage:       12 bytes
  9391 ;; Hardware stack levels used: 1
  9392 ;; Hardware stack levels required when called: 5
  9393 ;; This function calls:
  9394 ;;		_LED_C
  9395 ;;		___fldiv
  9396 ;;		___xxtofl
  9397 ;;		_color_read_Clear
  9398 ;;		_lroundf
  9399 ;;		_toggle_light
  9400 ;; This function is called by:
  9401 ;;		_setup
  9402 ;;		_test_function
  9403 ;; This function uses a non-reentrant model
  9404 ;;
  9405                           
  9406                           	psect	text45
  9407  0049B6                     __ptext45:
  9408                           	callstack 0
  9409  0049B6                     _amb_light_measure:
  9410                           	callstack 24
  9411  0049B6  0E00               	movlw	0
  9412  0049B8  6E59               	movwf	(amb_light_measure@CC_amb_2+1)^0,c
  9413  0049BA  0E00               	movlw	0
  9414  0049BC  6E58               	movwf	amb_light_measure@CC_amb_2^0,c
  9415  0049BE  0E00               	movlw	0
  9416  0049C0  6E5B               	movwf	(amb_light_measure@CC_amb_3+1)^0,c
  9417  0049C2  0E00               	movlw	0
  9418  0049C4  6E5A               	movwf	amb_light_measure@CC_amb_3^0,c
  9419  0049C6                     
  9420                           ;color.c: 381:     toggle_light(2,2);
  9421  0049C6  0E02               	movlw	2
  9422  0049C8  6E01               	movwf	toggle_light@toggletime^0,c
  9423  0049CA  0E02               	movlw	2
  9424  0049CC  ECC7  F019         	call	_toggle_light
  9425  0049D0                     
  9426                           ;color.c: 382:     LED_C();
  9427  0049D0  EC05  F02E         	call	_LED_C	;wreg free
  9428  0049D4                     
  9429                           ;color.c: 383:     _delay((unsigned long)((500)*(64000000/4000.0)));
  9430  0049D4  0E29               	movlw	41
  9431  0049D6  6E53               	movwf	(??_amb_light_measure+1)^0,c
  9432  0049D8  0E96               	movlw	150
  9433  0049DA  6E52               	movwf	??_amb_light_measure^0,c
  9434  0049DC  0E7F               	movlw	127
  9435  0049DE                     u6327:
  9436  0049DE  2EE8               	decfsz	wreg,f,c
  9437  0049E0  D7FE               	bra	u6327
  9438  0049E2  2E52               	decfsz	??_amb_light_measure^0,f,c
  9439  0049E4  D7FC               	bra	u6327
  9440  0049E6  2E53               	decfsz	(??_amb_light_measure+1)^0,f,c
  9441  0049E8  D7FA               	bra	u6327
  9442  0049EA  F000               	nop	
  9443  0049EC                     
  9444                           ;color.c: 385:     CC_amb_1 = color_read_Clear();
  9445  0049EC  ECA5  F02B         	call	_color_read_Clear	;wreg free
  9446  0049F0  C005  F056         	movff	?_color_read_Clear,amb_light_measure@CC_amb_1
  9447  0049F4  C006  F057         	movff	?_color_read_Clear+1,amb_light_measure@CC_amb_1+1
  9448  0049F8                     
  9449                           ;color.c: 386:     _delay((unsigned long)((200)*(64000000/4000.0)));
  9450  0049F8  0E11               	movlw	17
  9451  0049FA  6E53               	movwf	(??_amb_light_measure+1)^0,c
  9452  0049FC  0E3C               	movlw	60
  9453  0049FE  6E52               	movwf	??_amb_light_measure^0,c
  9454  004A00  0ECB               	movlw	203
  9455  004A02                     u6337:
  9456  004A02  2EE8               	decfsz	wreg,f,c
  9457  004A04  D7FE               	bra	u6337
  9458  004A06  2E52               	decfsz	??_amb_light_measure^0,f,c
  9459  004A08  D7FC               	bra	u6337
  9460  004A0A  2E53               	decfsz	(??_amb_light_measure+1)^0,f,c
  9461  004A0C  D7FA               	bra	u6337
  9462  004A0E  F000               	nop	
  9463  004A10                     
  9464                           ;color.c: 388:     CC_amb_2 = color_read_Clear();
  9465  004A10  ECA5  F02B         	call	_color_read_Clear	;wreg free
  9466  004A14  C005  F058         	movff	?_color_read_Clear,amb_light_measure@CC_amb_2
  9467  004A18  C006  F059         	movff	?_color_read_Clear+1,amb_light_measure@CC_amb_2+1
  9468  004A1C                     
  9469                           ;color.c: 389:     _delay((unsigned long)((200)*(64000000/4000.0)));
  9470  004A1C  0E11               	movlw	17
  9471  004A1E  6E53               	movwf	(??_amb_light_measure+1)^0,c
  9472  004A20  0E3C               	movlw	60
  9473  004A22  6E52               	movwf	??_amb_light_measure^0,c
  9474  004A24  0ECB               	movlw	203
  9475  004A26                     u6347:
  9476  004A26  2EE8               	decfsz	wreg,f,c
  9477  004A28  D7FE               	bra	u6347
  9478  004A2A  2E52               	decfsz	??_amb_light_measure^0,f,c
  9479  004A2C  D7FC               	bra	u6347
  9480  004A2E  2E53               	decfsz	(??_amb_light_measure+1)^0,f,c
  9481  004A30  D7FA               	bra	u6347
  9482  004A32  F000               	nop	
  9483  004A34                     
  9484                           ;color.c: 391:     CC_amb_3 = color_read_Clear();
  9485  004A34  ECA5  F02B         	call	_color_read_Clear	;wreg free
  9486  004A38  C005  F05A         	movff	?_color_read_Clear,amb_light_measure@CC_amb_3
  9487  004A3C  C006  F05B         	movff	?_color_read_Clear+1,amb_light_measure@CC_amb_3+1
  9488  004A40                     
  9489                           ;color.c: 392:     _delay((unsigned long)((200)*(64000000/4000.0)));
  9490  004A40  0E11               	movlw	17
  9491  004A42  6E53               	movwf	(??_amb_light_measure+1)^0,c
  9492  004A44  0E3C               	movlw	60
  9493  004A46  6E52               	movwf	??_amb_light_measure^0,c
  9494  004A48  0ECB               	movlw	203
  9495  004A4A                     u6357:
  9496  004A4A  2EE8               	decfsz	wreg,f,c
  9497  004A4C  D7FE               	bra	u6357
  9498  004A4E  2E52               	decfsz	??_amb_light_measure^0,f,c
  9499  004A50  D7FC               	bra	u6357
  9500  004A52  2E53               	decfsz	(??_amb_light_measure+1)^0,f,c
  9501  004A54  D7FA               	bra	u6357
  9502  004A56  F000               	nop	
  9503  004A58                     
  9504                           ;color.c: 394:     CC_amb_ave = lroundf((float)(CC_amb_1 + CC_amb_2 + CC_amb_3)/3);
  9505  004A58  5058               	movf	amb_light_measure@CC_amb_2^0,w,c
  9506  004A5A  2456               	addwf	amb_light_measure@CC_amb_1^0,w,c
  9507  004A5C  6E52               	movwf	??_amb_light_measure^0,c
  9508  004A5E  5059               	movf	(amb_light_measure@CC_amb_2+1)^0,w,c
  9509  004A60  2057               	addwfc	(amb_light_measure@CC_amb_1+1)^0,w,c
  9510  004A62  6E53               	movwf	(??_amb_light_measure+1)^0,c
  9511  004A64  505A               	movf	amb_light_measure@CC_amb_3^0,w,c
  9512  004A66  2652               	addwf	??_amb_light_measure^0,f,c
  9513  004A68  505B               	movf	(amb_light_measure@CC_amb_3+1)^0,w,c
  9514  004A6A  2253               	addwfc	(??_amb_light_measure+1)^0,f,c
  9515  004A6C  C052  F001         	movff	??_amb_light_measure,___xxtofl@val
  9516  004A70  C053  F002         	movff	??_amb_light_measure+1,___xxtofl@val+1
  9517  004A74  6A03               	clrf	(___xxtofl@val+2)^0,c
  9518  004A76  6A04               	clrf	(___xxtofl@val+3)^0,c
  9519  004A78  0E00               	movlw	0
  9520  004A7A  ECF0  F01E         	call	___xxtofl
  9521  004A7E  C001  F028         	movff	?___xxtofl,___fldiv@b
  9522  004A82  C002  F029         	movff	?___xxtofl+1,___fldiv@b+1
  9523  004A86  C003  F02A         	movff	?___xxtofl+2,___fldiv@b+2
  9524  004A8A  C004  F02B         	movff	?___xxtofl+3,___fldiv@b+3
  9525  004A8E  0E00               	movlw	0
  9526  004A90  6E2C               	movwf	___fldiv@a^0,c
  9527  004A92  0E00               	movlw	0
  9528  004A94  6E2D               	movwf	(___fldiv@a+1)^0,c
  9529  004A96  0E40               	movlw	64
  9530  004A98  6E2E               	movwf	(___fldiv@a+2)^0,c
  9531  004A9A  0E40               	movlw	64
  9532  004A9C  6E2F               	movwf	(___fldiv@a+3)^0,c
  9533  004A9E  EC10  F015         	call	___fldiv	;wreg free
  9534  004AA2  C028  F04C         	movff	?___fldiv,lroundf@x
  9535  004AA6  C029  F04D         	movff	?___fldiv+1,lroundf@x+1
  9536  004AAA  C02A  F04E         	movff	?___fldiv+2,lroundf@x+2
  9537  004AAE  C02B  F04F         	movff	?___fldiv+3,lroundf@x+3
  9538  004AB2  ECB6  F02C         	call	_lroundf	;wreg free
  9539  004AB6  C04C  F054         	movff	?_lroundf,amb_light_measure@CC_amb_ave
  9540  004ABA  C04D  F055         	movff	?_lroundf+1,amb_light_measure@CC_amb_ave+1
  9541  004ABE                     
  9542                           ;color.c: 396:     toggle_light(2,2);
  9543  004ABE  0E02               	movlw	2
  9544  004AC0  6E01               	movwf	toggle_light@toggletime^0,c
  9545  004AC2  0E02               	movlw	2
  9546  004AC4  ECC7  F019         	call	_toggle_light
  9547  004AC8                     
  9548                           ;color.c: 398:     return CC_amb_ave;
  9549  004AC8  C054  F050         	movff	amb_light_measure@CC_amb_ave,?_amb_light_measure
  9550  004ACC  C055  F051         	movff	amb_light_measure@CC_amb_ave+1,?_amb_light_measure+1
  9551  004AD0  0012               	return		;funcret
  9552  004AD2                     __end_of_amb_light_measure:
  9553                           	callstack 0
  9554                           
  9555 ;; *************** function _toggle_light *****************
  9556 ;; Defined at:
  9557 ;;		line 52 in file "color.c"
  9558 ;; Parameters:    Size  Location     Type
  9559 ;;  lightnumber     1    wreg     unsigned char 
  9560 ;;  toggletime      1    0[COMRAM] unsigned char 
  9561 ;; Auto vars:     Size  Location     Type
  9562 ;;  lightnumber     1    4[COMRAM] unsigned char 
  9563 ;;  i               1    3[COMRAM] unsigned char 
  9564 ;; Return value:  Size  Location     Type
  9565 ;;                  1    wreg      void 
  9566 ;; Registers used:
  9567 ;;		wreg, status,2, status,0
  9568 ;; Tracked objects:
  9569 ;;		On entry : 0/0
  9570 ;;		On exit  : 0/0
  9571 ;;		Unchanged: 0/0
  9572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9573 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9574 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9575 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9576 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9577 ;;Total ram usage:        5 bytes
  9578 ;; Hardware stack levels used: 1
  9579 ;; Hardware stack levels required when called: 1
  9580 ;; This function calls:
  9581 ;;		Nothing
  9582 ;; This function is called by:
  9583 ;;		_detect_color
  9584 ;;		_calibrate_white
  9585 ;;		_amb_light_measure
  9586 ;;		_turning_action
  9587 ;; This function uses a non-reentrant model
  9588 ;;
  9589                           
  9590                           	psect	text46
  9591  00338E                     __ptext46:
  9592                           	callstack 0
  9593  00338E                     _toggle_light:
  9594                           	callstack 27
  9595                           
  9596                           ;incstack = 0
  9597                           ;toggle_light@lightnumber stored from wreg
  9598  00338E  6E05               	movwf	toggle_light@lightnumber^0,c
  9599  003390                     
  9600                           ;color.c: 52: void toggle_light(unsigned char lightnumber, unsigned char toggletime);col
      +                          or.c: 53: {;color.c: 54:     unsigned char i = 0;
  9601  003390  0E00               	movlw	0
  9602  003392  6E04               	movwf	toggle_light@i^0,c
  9603                           
  9604                           ;color.c: 56:     for (i = 0; i < toggletime; i++){
  9605  003394  0E00               	movlw	0
  9606  003396  6E04               	movwf	toggle_light@i^0,c
  9607  003398  EF13  F01B         	goto	l58
  9608  00339C                     l4316:
  9609                           
  9610                           ;color.c: 57:         if (lightnumber == 1){
  9611  00339C  0405               	decf	toggle_light@lightnumber^0,w,c
  9612  00339E  A4D8               	btfss	status,2,c
  9613  0033A0  EFD4  F019         	goto	u4481
  9614  0033A4  EFD6  F019         	goto	u4480
  9615  0033A8                     u4481:
  9616  0033A8  EF0E  F01A         	goto	l4324
  9617  0033AC                     u4480:
  9618  0033AC                     
  9619                           ;color.c: 58:             LATHbits.LATH1 = !LATHbits.LATH1;
  9620  0033AC  A280               	btfss	128,1,c	;volatile
  9621  0033AE  EFDB  F019         	goto	u4491
  9622  0033B2  EFDF  F019         	goto	u4490
  9623  0033B6                     u4491:
  9624  0033B6  6A02               	clrf	??_toggle_light^0,c
  9625  0033B8  2A02               	incf	??_toggle_light^0,f,c
  9626  0033BA  EFE0  F019         	goto	u4508
  9627  0033BE                     u4490:
  9628  0033BE  6A02               	clrf	??_toggle_light^0,c
  9629  0033C0                     u4508:
  9630  0033C0  4602               	rlncf	??_toggle_light^0,f,c
  9631  0033C2  5080               	movf	128,w,c	;volatile
  9632  0033C4  1802               	xorwf	??_toggle_light^0,w,c
  9633  0033C6  0BFD               	andlw	-3
  9634  0033C8  1802               	xorwf	??_toggle_light^0,w,c
  9635  0033CA  6E80               	movwf	128,c	;volatile
  9636  0033CC                     
  9637                           ;color.c: 59:             _delay((unsigned long)((500)*(64000000/4000.0)));
  9638  0033CC  0E29               	movlw	41
  9639  0033CE  6E03               	movwf	(??_toggle_light+1)^0,c
  9640  0033D0  0E96               	movlw	150
  9641  0033D2  6E02               	movwf	??_toggle_light^0,c
  9642  0033D4  0E7F               	movlw	127
  9643  0033D6                     u6367:
  9644  0033D6  2EE8               	decfsz	wreg,f,c
  9645  0033D8  D7FE               	bra	u6367
  9646  0033DA  2E02               	decfsz	??_toggle_light^0,f,c
  9647  0033DC  D7FC               	bra	u6367
  9648  0033DE  2E03               	decfsz	(??_toggle_light+1)^0,f,c
  9649  0033E0  D7FA               	bra	u6367
  9650  0033E2  F000               	nop	
  9651  0033E4                     
  9652                           ;color.c: 60:             LATHbits.LATH1 = !LATHbits.LATH1;
  9653  0033E4  A280               	btfss	128,1,c	;volatile
  9654  0033E6  EFF7  F019         	goto	u4511
  9655  0033EA  EFFB  F019         	goto	u4510
  9656  0033EE                     u4511:
  9657  0033EE  6A02               	clrf	??_toggle_light^0,c
  9658  0033F0  2A02               	incf	??_toggle_light^0,f,c
  9659  0033F2  EFFC  F019         	goto	u4528
  9660  0033F6                     u4510:
  9661  0033F6  6A02               	clrf	??_toggle_light^0,c
  9662  0033F8                     u4528:
  9663  0033F8  4602               	rlncf	??_toggle_light^0,f,c
  9664  0033FA  5080               	movf	128,w,c	;volatile
  9665  0033FC  1802               	xorwf	??_toggle_light^0,w,c
  9666  0033FE  0BFD               	andlw	-3
  9667  003400  1802               	xorwf	??_toggle_light^0,w,c
  9668  003402  6E80               	movwf	128,c	;volatile
  9669                           
  9670                           ;color.c: 61:             _delay((unsigned long)((500)*(64000000/4000.0)));
  9671  003404  0E29               	movlw	41
  9672  003406  6E03               	movwf	(??_toggle_light+1)^0,c
  9673  003408  0E96               	movlw	150
  9674  00340A  6E02               	movwf	??_toggle_light^0,c
  9675  00340C  0E7F               	movlw	127
  9676  00340E                     u6377:
  9677  00340E  2EE8               	decfsz	wreg,f,c
  9678  003410  D7FE               	bra	u6377
  9679  003412  2E02               	decfsz	??_toggle_light^0,f,c
  9680  003414  D7FC               	bra	u6377
  9681  003416  2E03               	decfsz	(??_toggle_light+1)^0,f,c
  9682  003418  D7FA               	bra	u6377
  9683  00341A  F000               	nop	
  9684  00341C                     l4324:
  9685                           
  9686                           ;color.c: 63:         if (lightnumber == 2){
  9687  00341C  0E02               	movlw	2
  9688  00341E  1805               	xorwf	toggle_light@lightnumber^0,w,c
  9689  003420  A4D8               	btfss	status,2,c
  9690  003422  EF15  F01A         	goto	u4531
  9691  003426  EF17  F01A         	goto	u4530
  9692  00342A                     u4531:
  9693  00342A  EF4F  F01A         	goto	l4332
  9694  00342E                     u4530:
  9695  00342E                     
  9696                           ;color.c: 64:             LATDbits.LATD4 = !LATDbits.LATD4;
  9697  00342E  A87C               	btfss	124,4,c	;volatile
  9698  003430  EF1C  F01A         	goto	u4541
  9699  003434  EF20  F01A         	goto	u4540
  9700  003438                     u4541:
  9701  003438  6A02               	clrf	??_toggle_light^0,c
  9702  00343A  2A02               	incf	??_toggle_light^0,f,c
  9703  00343C  EF21  F01A         	goto	u4558
  9704  003440                     u4540:
  9705  003440  6A02               	clrf	??_toggle_light^0,c
  9706  003442                     u4558:
  9707  003442  3A02               	swapf	??_toggle_light^0,f,c
  9708  003444  507C               	movf	124,w,c	;volatile
  9709  003446  1802               	xorwf	??_toggle_light^0,w,c
  9710  003448  0BEF               	andlw	-17
  9711  00344A  1802               	xorwf	??_toggle_light^0,w,c
  9712  00344C  6E7C               	movwf	124,c	;volatile
  9713  00344E                     
  9714                           ;color.c: 65:             _delay((unsigned long)((500)*(64000000/4000.0)));
  9715  00344E  0E29               	movlw	41
  9716  003450  6E03               	movwf	(??_toggle_light+1)^0,c
  9717  003452  0E96               	movlw	150
  9718  003454  6E02               	movwf	??_toggle_light^0,c
  9719  003456  0E7F               	movlw	127
  9720  003458                     u6387:
  9721  003458  2EE8               	decfsz	wreg,f,c
  9722  00345A  D7FE               	bra	u6387
  9723  00345C  2E02               	decfsz	??_toggle_light^0,f,c
  9724  00345E  D7FC               	bra	u6387
  9725  003460  2E03               	decfsz	(??_toggle_light+1)^0,f,c
  9726  003462  D7FA               	bra	u6387
  9727  003464  F000               	nop	
  9728  003466                     
  9729                           ;color.c: 66:             LATDbits.LATD4 = !LATDbits.LATD4;
  9730  003466  A87C               	btfss	124,4,c	;volatile
  9731  003468  EF38  F01A         	goto	u4561
  9732  00346C  EF3C  F01A         	goto	u4560
  9733  003470                     u4561:
  9734  003470  6A02               	clrf	??_toggle_light^0,c
  9735  003472  2A02               	incf	??_toggle_light^0,f,c
  9736  003474  EF3D  F01A         	goto	u4578
  9737  003478                     u4560:
  9738  003478  6A02               	clrf	??_toggle_light^0,c
  9739  00347A                     u4578:
  9740  00347A  3A02               	swapf	??_toggle_light^0,f,c
  9741  00347C  507C               	movf	124,w,c	;volatile
  9742  00347E  1802               	xorwf	??_toggle_light^0,w,c
  9743  003480  0BEF               	andlw	-17
  9744  003482  1802               	xorwf	??_toggle_light^0,w,c
  9745  003484  6E7C               	movwf	124,c	;volatile
  9746                           
  9747                           ;color.c: 67:             _delay((unsigned long)((500)*(64000000/4000.0)));
  9748  003486  0E29               	movlw	41
  9749  003488  6E03               	movwf	(??_toggle_light+1)^0,c
  9750  00348A  0E96               	movlw	150
  9751  00348C  6E02               	movwf	??_toggle_light^0,c
  9752  00348E  0E7F               	movlw	127
  9753  003490                     u6397:
  9754  003490  2EE8               	decfsz	wreg,f,c
  9755  003492  D7FE               	bra	u6397
  9756  003494  2E02               	decfsz	??_toggle_light^0,f,c
  9757  003496  D7FC               	bra	u6397
  9758  003498  2E03               	decfsz	(??_toggle_light+1)^0,f,c
  9759  00349A  D7FA               	bra	u6397
  9760  00349C  F000               	nop	
  9761  00349E                     l4332:
  9762                           
  9763                           ;color.c: 69:         if (lightnumber == 3){
  9764  00349E  0E03               	movlw	3
  9765  0034A0  1805               	xorwf	toggle_light@lightnumber^0,w,c
  9766  0034A2  A4D8               	btfss	status,2,c
  9767  0034A4  EF56  F01A         	goto	u4581
  9768  0034A8  EF58  F01A         	goto	u4580
  9769  0034AC                     u4581:
  9770  0034AC  EF94  F01A         	goto	l4340
  9771  0034B0                     u4580:
  9772  0034B0                     
  9773                           ;color.c: 70:             LATDbits.LATD3 = !LATDbits.LATD3;
  9774  0034B0  A67C               	btfss	124,3,c	;volatile
  9775  0034B2  EF5D  F01A         	goto	u4591
  9776  0034B6  EF61  F01A         	goto	u4590
  9777  0034BA                     u4591:
  9778  0034BA  6A02               	clrf	??_toggle_light^0,c
  9779  0034BC  2A02               	incf	??_toggle_light^0,f,c
  9780  0034BE  EF62  F01A         	goto	u4608
  9781  0034C2                     u4590:
  9782  0034C2  6A02               	clrf	??_toggle_light^0,c
  9783  0034C4                     u4608:
  9784  0034C4  4602               	rlncf	??_toggle_light^0,f,c
  9785  0034C6  4602               	rlncf	??_toggle_light^0,f,c
  9786  0034C8  4602               	rlncf	??_toggle_light^0,f,c
  9787  0034CA  507C               	movf	124,w,c	;volatile
  9788  0034CC  1802               	xorwf	??_toggle_light^0,w,c
  9789  0034CE  0BF7               	andlw	-9
  9790  0034D0  1802               	xorwf	??_toggle_light^0,w,c
  9791  0034D2  6E7C               	movwf	124,c	;volatile
  9792  0034D4                     
  9793                           ;color.c: 71:             _delay((unsigned long)((500)*(64000000/4000.0)));
  9794  0034D4  0E29               	movlw	41
  9795  0034D6  6E03               	movwf	(??_toggle_light+1)^0,c
  9796  0034D8  0E96               	movlw	150
  9797  0034DA  6E02               	movwf	??_toggle_light^0,c
  9798  0034DC  0E7F               	movlw	127
  9799  0034DE                     u6407:
  9800  0034DE  2EE8               	decfsz	wreg,f,c
  9801  0034E0  D7FE               	bra	u6407
  9802  0034E2  2E02               	decfsz	??_toggle_light^0,f,c
  9803  0034E4  D7FC               	bra	u6407
  9804  0034E6  2E03               	decfsz	(??_toggle_light+1)^0,f,c
  9805  0034E8  D7FA               	bra	u6407
  9806  0034EA  F000               	nop	
  9807  0034EC                     
  9808                           ;color.c: 72:             LATDbits.LATD3 = !LATDbits.LATD3;
  9809  0034EC  A67C               	btfss	124,3,c	;volatile
  9810  0034EE  EF7B  F01A         	goto	u4611
  9811  0034F2  EF7F  F01A         	goto	u4610
  9812  0034F6                     u4611:
  9813  0034F6  6A02               	clrf	??_toggle_light^0,c
  9814  0034F8  2A02               	incf	??_toggle_light^0,f,c
  9815  0034FA  EF80  F01A         	goto	u4628
  9816  0034FE                     u4610:
  9817  0034FE  6A02               	clrf	??_toggle_light^0,c
  9818  003500                     u4628:
  9819  003500  4602               	rlncf	??_toggle_light^0,f,c
  9820  003502  4602               	rlncf	??_toggle_light^0,f,c
  9821  003504  4602               	rlncf	??_toggle_light^0,f,c
  9822  003506  507C               	movf	124,w,c	;volatile
  9823  003508  1802               	xorwf	??_toggle_light^0,w,c
  9824  00350A  0BF7               	andlw	-9
  9825  00350C  1802               	xorwf	??_toggle_light^0,w,c
  9826  00350E  6E7C               	movwf	124,c	;volatile
  9827                           
  9828                           ;color.c: 73:             _delay((unsigned long)((500)*(64000000/4000.0)));
  9829  003510  0E29               	movlw	41
  9830  003512  6E03               	movwf	(??_toggle_light+1)^0,c
  9831  003514  0E96               	movlw	150
  9832  003516  6E02               	movwf	??_toggle_light^0,c
  9833  003518  0E7F               	movlw	127
  9834  00351A                     u6417:
  9835  00351A  2EE8               	decfsz	wreg,f,c
  9836  00351C  D7FE               	bra	u6417
  9837  00351E  2E02               	decfsz	??_toggle_light^0,f,c
  9838  003520  D7FC               	bra	u6417
  9839  003522  2E03               	decfsz	(??_toggle_light+1)^0,f,c
  9840  003524  D7FA               	bra	u6417
  9841  003526  F000               	nop	
  9842  003528                     l4340:
  9843                           
  9844                           ;color.c: 75:         if (lightnumber == 4){
  9845  003528  0E04               	movlw	4
  9846  00352A  1805               	xorwf	toggle_light@lightnumber^0,w,c
  9847  00352C  A4D8               	btfss	status,2,c
  9848  00352E  EF9B  F01A         	goto	u4631
  9849  003532  EF9D  F01A         	goto	u4630
  9850  003536                     u4631:
  9851  003536  EFD3  F01A         	goto	l4348
  9852  00353A                     u4630:
  9853  00353A                     
  9854                           ;color.c: 76:             LATFbits.LATF0 = !LATFbits.LATF0;
  9855  00353A  A07E               	btfss	126,0,c	;volatile
  9856  00353C  EFA2  F01A         	goto	u4641
  9857  003540  EFA6  F01A         	goto	u4640
  9858  003544                     u4641:
  9859  003544  6A02               	clrf	??_toggle_light^0,c
  9860  003546  2A02               	incf	??_toggle_light^0,f,c
  9861  003548  EFA7  F01A         	goto	u4658
  9862  00354C                     u4640:
  9863  00354C  6A02               	clrf	??_toggle_light^0,c
  9864  00354E                     u4658:
  9865  00354E  507E               	movf	126,w,c	;volatile
  9866  003550  1802               	xorwf	??_toggle_light^0,w,c
  9867  003552  0BFE               	andlw	-2
  9868  003554  1802               	xorwf	??_toggle_light^0,w,c
  9869  003556  6E7E               	movwf	126,c	;volatile
  9870  003558                     
  9871                           ;color.c: 77:             _delay((unsigned long)((500)*(64000000/4000.0)));
  9872  003558  0E29               	movlw	41
  9873  00355A  6E03               	movwf	(??_toggle_light+1)^0,c
  9874  00355C  0E96               	movlw	150
  9875  00355E  6E02               	movwf	??_toggle_light^0,c
  9876  003560  0E7F               	movlw	127
  9877  003562                     u6427:
  9878  003562  2EE8               	decfsz	wreg,f,c
  9879  003564  D7FE               	bra	u6427
  9880  003566  2E02               	decfsz	??_toggle_light^0,f,c
  9881  003568  D7FC               	bra	u6427
  9882  00356A  2E03               	decfsz	(??_toggle_light+1)^0,f,c
  9883  00356C  D7FA               	bra	u6427
  9884  00356E  F000               	nop	
  9885  003570                     
  9886                           ;color.c: 78:             LATFbits.LATF0 = !LATFbits.LATF0;
  9887  003570  A07E               	btfss	126,0,c	;volatile
  9888  003572  EFBD  F01A         	goto	u4661
  9889  003576  EFC1  F01A         	goto	u4660
  9890  00357A                     u4661:
  9891  00357A  6A02               	clrf	??_toggle_light^0,c
  9892  00357C  2A02               	incf	??_toggle_light^0,f,c
  9893  00357E  EFC2  F01A         	goto	u4678
  9894  003582                     u4660:
  9895  003582  6A02               	clrf	??_toggle_light^0,c
  9896  003584                     u4678:
  9897  003584  507E               	movf	126,w,c	;volatile
  9898  003586  1802               	xorwf	??_toggle_light^0,w,c
  9899  003588  0BFE               	andlw	-2
  9900  00358A  1802               	xorwf	??_toggle_light^0,w,c
  9901  00358C  6E7E               	movwf	126,c	;volatile
  9902                           
  9903                           ;color.c: 79:             _delay((unsigned long)((500)*(64000000/4000.0)));
  9904  00358E  0E29               	movlw	41
  9905  003590  6E03               	movwf	(??_toggle_light+1)^0,c
  9906  003592  0E96               	movlw	150
  9907  003594  6E02               	movwf	??_toggle_light^0,c
  9908  003596  0E7F               	movlw	127
  9909  003598                     u6437:
  9910  003598  2EE8               	decfsz	wreg,f,c
  9911  00359A  D7FE               	bra	u6437
  9912  00359C  2E02               	decfsz	??_toggle_light^0,f,c
  9913  00359E  D7FC               	bra	u6437
  9914  0035A0  2E03               	decfsz	(??_toggle_light+1)^0,f,c
  9915  0035A2  D7FA               	bra	u6437
  9916  0035A4  F000               	nop	
  9917  0035A6                     l4348:
  9918                           
  9919                           ;color.c: 81:         if (lightnumber == 5){
  9920  0035A6  0E05               	movlw	5
  9921  0035A8  1805               	xorwf	toggle_light@lightnumber^0,w,c
  9922  0035AA  A4D8               	btfss	status,2,c
  9923  0035AC  EFDA  F01A         	goto	u4681
  9924  0035B0  EFDC  F01A         	goto	u4680
  9925  0035B4                     u4681:
  9926  0035B4  EF12  F01B         	goto	l4356
  9927  0035B8                     u4680:
  9928  0035B8                     
  9929                           ;color.c: 82:             LATHbits.LATH0 = !LATHbits.LATH0;
  9930  0035B8  A080               	btfss	128,0,c	;volatile
  9931  0035BA  EFE1  F01A         	goto	u4691
  9932  0035BE  EFE5  F01A         	goto	u4690
  9933  0035C2                     u4691:
  9934  0035C2  6A02               	clrf	??_toggle_light^0,c
  9935  0035C4  2A02               	incf	??_toggle_light^0,f,c
  9936  0035C6  EFE6  F01A         	goto	u4708
  9937  0035CA                     u4690:
  9938  0035CA  6A02               	clrf	??_toggle_light^0,c
  9939  0035CC                     u4708:
  9940  0035CC  5080               	movf	128,w,c	;volatile
  9941  0035CE  1802               	xorwf	??_toggle_light^0,w,c
  9942  0035D0  0BFE               	andlw	-2
  9943  0035D2  1802               	xorwf	??_toggle_light^0,w,c
  9944  0035D4  6E80               	movwf	128,c	;volatile
  9945  0035D6                     
  9946                           ;color.c: 83:             _delay((unsigned long)((500)*(64000000/4000.0)));
  9947  0035D6  0E29               	movlw	41
  9948  0035D8  6E03               	movwf	(??_toggle_light+1)^0,c
  9949  0035DA  0E96               	movlw	150
  9950  0035DC  6E02               	movwf	??_toggle_light^0,c
  9951  0035DE  0E7F               	movlw	127
  9952  0035E0                     u6447:
  9953  0035E0  2EE8               	decfsz	wreg,f,c
  9954  0035E2  D7FE               	bra	u6447
  9955  0035E4  2E02               	decfsz	??_toggle_light^0,f,c
  9956  0035E6  D7FC               	bra	u6447
  9957  0035E8  2E03               	decfsz	(??_toggle_light+1)^0,f,c
  9958  0035EA  D7FA               	bra	u6447
  9959  0035EC  F000               	nop	
  9960  0035EE                     
  9961                           ;color.c: 84:             LATHbits.LATH0 = !LATHbits.LATH0;
  9962  0035EE  A080               	btfss	128,0,c	;volatile
  9963  0035F0  EFFC  F01A         	goto	u4711
  9964  0035F4  EF00  F01B         	goto	u4710
  9965  0035F8                     u4711:
  9966  0035F8  6A02               	clrf	??_toggle_light^0,c
  9967  0035FA  2A02               	incf	??_toggle_light^0,f,c
  9968  0035FC  EF01  F01B         	goto	u4728
  9969  003600                     u4710:
  9970  003600  6A02               	clrf	??_toggle_light^0,c
  9971  003602                     u4728:
  9972  003602  5080               	movf	128,w,c	;volatile
  9973  003604  1802               	xorwf	??_toggle_light^0,w,c
  9974  003606  0BFE               	andlw	-2
  9975  003608  1802               	xorwf	??_toggle_light^0,w,c
  9976  00360A  6E80               	movwf	128,c	;volatile
  9977                           
  9978                           ;color.c: 85:             _delay((unsigned long)((500)*(64000000/4000.0)));
  9979  00360C  0E29               	movlw	41
  9980  00360E  6E03               	movwf	(??_toggle_light+1)^0,c
  9981  003610  0E96               	movlw	150
  9982  003612  6E02               	movwf	??_toggle_light^0,c
  9983  003614  0E7F               	movlw	127
  9984  003616                     u6457:
  9985  003616  2EE8               	decfsz	wreg,f,c
  9986  003618  D7FE               	bra	u6457
  9987  00361A  2E02               	decfsz	??_toggle_light^0,f,c
  9988  00361C  D7FC               	bra	u6457
  9989  00361E  2E03               	decfsz	(??_toggle_light+1)^0,f,c
  9990  003620  D7FA               	bra	u6457
  9991  003622  F000               	nop	
  9992  003624                     l4356:
  9993                           
  9994                           ;color.c: 87:     }
  9995  003624  2A04               	incf	toggle_light@i^0,f,c
  9996  003626                     l58:
  9997  003626  5001               	movf	toggle_light@toggletime^0,w,c
  9998  003628  5C04               	subwf	toggle_light@i^0,w,c
  9999  00362A  A0D8               	btfss	status,0,c
 10000  00362C  EF1A  F01B         	goto	u4731
 10001  003630  EF1C  F01B         	goto	u4730
 10002  003634                     u4731:
 10003  003634  EFCE  F019         	goto	l4316
 10004  003638                     u4730:
 10005  003638  0012               	return		;funcret
 10006  00363A                     __end_of_toggle_light:
 10007                           	callstack 0
 10008                           
 10009 ;; *************** function _lroundf *****************
 10010 ;; Defined at:
 10011 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\lroundf.c"
 10012 ;; Parameters:    Size  Location     Type
 10013 ;;  x               4   75[COMRAM] float 
 10014 ;; Auto vars:     Size  Location     Type
 10015 ;;		None
 10016 ;; Return value:  Size  Location     Type
 10017 ;;                  4   75[COMRAM] long 
 10018 ;; Registers used:
 10019 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 10020 ;; Tracked objects:
 10021 ;;		On entry : 0/0
 10022 ;;		On exit  : 0/0
 10023 ;;		Unchanged: 0/0
 10024 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10025 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10026 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10027 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10028 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10029 ;;Total ram usage:        4 bytes
 10030 ;; Hardware stack levels used: 1
 10031 ;; Hardware stack levels required when called: 4
 10032 ;; This function calls:
 10033 ;;		___fltol
 10034 ;;		_roundf
 10035 ;; This function is called by:
 10036 ;;		_detect_color
 10037 ;;		_amb_light_measure
 10038 ;;		_detect_wall
 10039 ;; This function uses a non-reentrant model
 10040 ;;
 10041                           
 10042                           	psect	text47
 10043  00596C                     __ptext47:
 10044                           	callstack 0
 10045  00596C                     _lroundf:
 10046                           	callstack 24
 10047  00596C  C04C  F028         	movff	lroundf@x,roundf@x
 10048  005970  C04D  F029         	movff	lroundf@x+1,roundf@x+1
 10049  005974  C04E  F02A         	movff	lroundf@x+2,roundf@x+2
 10050  005978  C04F  F02B         	movff	lroundf@x+3,roundf@x+3
 10051  00597C  EC67  F011         	call	_roundf	;wreg free
 10052  005980  C028  F042         	movff	?_roundf,___fltol@f1
 10053  005984  C029  F043         	movff	?_roundf+1,___fltol@f1+1
 10054  005988  C02A  F044         	movff	?_roundf+2,___fltol@f1+2
 10055  00598C  C02B  F045         	movff	?_roundf+3,___fltol@f1+3
 10056  005990  ECF0  F025         	call	___fltol	;wreg free
 10057  005994  C042  F04C         	movff	?___fltol,?_lroundf
 10058  005998  C043  F04D         	movff	?___fltol+1,?_lroundf+1
 10059  00599C  C044  F04E         	movff	?___fltol+2,?_lroundf+2
 10060  0059A0  C045  F04F         	movff	?___fltol+3,?_lroundf+3
 10061  0059A4  0012               	return		;funcret
 10062  0059A6                     __end_of_lroundf:
 10063                           	callstack 0
 10064                           
 10065 ;; *************** function _roundf *****************
 10066 ;; Defined at:
 10067 ;;		line 12 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\roundf.c"
 10068 ;; Parameters:    Size  Location     Type
 10069 ;;  x               4   39[COMRAM] float 
 10070 ;; Auto vars:     Size  Location     Type
 10071 ;;  y               4   61[COMRAM] float 
 10072 ;;  u               4   57[COMRAM] struct .
 10073 ;;  e               2   51[COMRAM] int 
 10074 ;; Return value:  Size  Location     Type
 10075 ;;                  4   39[COMRAM] float 
 10076 ;; Registers used:
 10077 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 10078 ;; Tracked objects:
 10079 ;;		On entry : 0/0
 10080 ;;		On exit  : 0/0
 10081 ;;		Unchanged: 0/0
 10082 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10083 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10084 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10085 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10086 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10087 ;;Total ram usage:       26 bytes
 10088 ;; Hardware stack levels used: 1
 10089 ;; Hardware stack levels required when called: 3
 10090 ;; This function calls:
 10091 ;;		___fladd
 10092 ;;		___flge
 10093 ;;		___flmul
 10094 ;;		___flneg
 10095 ;;		___flsub
 10096 ;; This function is called by:
 10097 ;;		_lroundf
 10098 ;; This function uses a non-reentrant model
 10099 ;;
 10100                           
 10101                           	psect	text48
 10102  0022CE                     __ptext48:
 10103                           	callstack 0
 10104  0022CE                     _roundf:
 10105                           	callstack 24
 10106  0022CE  C176  F03A         	movff	roundf@F527,roundf@u
 10107  0022D2  C177  F03B         	movff	roundf@F527+1,roundf@u+1
 10108  0022D6  C178  F03C         	movff	roundf@F527+2,roundf@u+2
 10109  0022DA  C179  F03D         	movff	roundf@F527+3,roundf@u+3
 10110  0022DE  C028  F03A         	movff	roundf@x,roundf@u
 10111  0022E2  C029  F03B         	movff	roundf@x+1,roundf@u+1
 10112  0022E6  C02A  F03C         	movff	roundf@x+2,roundf@u+2
 10113  0022EA  C02B  F03D         	movff	roundf@x+3,roundf@u+3
 10114  0022EE  C03A  F02C         	movff	roundf@u,??_roundf
 10115  0022F2  C03B  F02D         	movff	roundf@u+1,??_roundf+1
 10116  0022F6  C03C  F02E         	movff	roundf@u+2,??_roundf+2
 10117  0022FA  C03D  F02F         	movff	roundf@u+3,??_roundf+3
 10118  0022FE  0E18               	movlw	24
 10119  002300  EF87  F011         	goto	u4390
 10120  002304                     u4395:
 10121  002304  90D8               	bcf	status,0,c
 10122  002306  322F               	rrcf	(??_roundf+3)^0,f,c
 10123  002308  322E               	rrcf	(??_roundf+2)^0,f,c
 10124  00230A  322D               	rrcf	(??_roundf+1)^0,f,c
 10125  00230C  322C               	rrcf	??_roundf^0,f,c
 10126  00230E                     u4390:
 10127  00230E  2EE8               	decfsz	wreg,f,c
 10128  002310  EF82  F011         	goto	u4395
 10129  002314  502C               	movf	??_roundf^0,w,c
 10130  002316  6E34               	movwf	roundf@e^0,c
 10131  002318  6A35               	clrf	(roundf@e+1)^0,c
 10132  00231A  BE35               	btfsc	(roundf@e+1)^0,7,c
 10133  00231C  EF99  F011         	goto	u4401
 10134  002320  5035               	movf	(roundf@e+1)^0,w,c
 10135  002322  E109               	bnz	u4400
 10136  002324  0E96               	movlw	150
 10137  002326  5C34               	subwf	roundf@e^0,w,c
 10138  002328  A0D8               	btfss	status,0,c
 10139  00232A  EF99  F011         	goto	u4401
 10140  00232E  EF9B  F011         	goto	u4400
 10141  002332                     u4401:
 10142  002332  EFA5  F011         	goto	l4286
 10143  002336                     u4400:
 10144  002336  C028  F028         	movff	roundf@x,?_roundf
 10145  00233A  C029  F029         	movff	roundf@x+1,?_roundf+1
 10146  00233E  C02A  F02A         	movff	roundf@x+2,?_roundf+2
 10147  002342  C02B  F02B         	movff	roundf@x+3,?_roundf+3
 10148  002346  EF3D  F013         	goto	l1405
 10149  00234A                     l4286:
 10150  00234A  C03A  F02C         	movff	roundf@u,??_roundf
 10151  00234E  C03B  F02D         	movff	roundf@u+1,??_roundf+1
 10152  002352  C03C  F02E         	movff	roundf@u+2,??_roundf+2
 10153  002356  C03D  F02F         	movff	roundf@u+3,??_roundf+3
 10154  00235A  0E20               	movlw	32
 10155  00235C  EFB5  F011         	goto	u4410
 10156  002360                     u4415:
 10157  002360  90D8               	bcf	status,0,c
 10158  002362  322F               	rrcf	(??_roundf+3)^0,f,c
 10159  002364  322E               	rrcf	(??_roundf+2)^0,f,c
 10160  002366  322D               	rrcf	(??_roundf+1)^0,f,c
 10161  002368  322C               	rrcf	??_roundf^0,f,c
 10162  00236A                     u4410:
 10163  00236A  2EE8               	decfsz	wreg,f,c
 10164  00236C  EFB0  F011         	goto	u4415
 10165  002370  502C               	movf	??_roundf^0,w,c
 10166  002372  102D               	iorwf	(??_roundf+1)^0,w,c
 10167  002374  102E               	iorwf	(??_roundf+2)^0,w,c
 10168  002376  102F               	iorwf	(??_roundf+3)^0,w,c
 10169  002378  B4D8               	btfsc	status,2,c
 10170  00237A  EFC1  F011         	goto	u4421
 10171  00237E  EFC3  F011         	goto	u4420
 10172  002382                     u4421:
 10173  002382  EFD5  F011         	goto	l4290
 10174  002386                     u4420:
 10175  002386  C028  F001         	movff	roundf@x,___flneg@f1
 10176  00238A  C029  F002         	movff	roundf@x+1,___flneg@f1+1
 10177  00238E  C02A  F003         	movff	roundf@x+2,___flneg@f1+2
 10178  002392  C02B  F004         	movff	roundf@x+3,___flneg@f1+3
 10179  002396  ECEF  F02C         	call	___flneg	;wreg free
 10180  00239A  C001  F028         	movff	?___flneg,roundf@x
 10181  00239E  C002  F029         	movff	?___flneg+1,roundf@x+1
 10182  0023A2  C003  F02A         	movff	?___flneg+2,roundf@x+2
 10183  0023A6  C004  F02B         	movff	?___flneg+3,roundf@x+3
 10184  0023AA                     l4290:
 10185  0023AA  BE35               	btfsc	(roundf@e+1)^0,7,c
 10186  0023AC  EFE3  F011         	goto	u4430
 10187  0023B0  5035               	movf	(roundf@e+1)^0,w,c
 10188  0023B2  E107               	bnz	u4431
 10189  0023B4  0E7E               	movlw	126
 10190  0023B6  5C34               	subwf	roundf@e^0,w,c
 10191  0023B8  B0D8               	btfsc	status,0,c
 10192  0023BA  EFE1  F011         	goto	u4431
 10193  0023BE  EFE3  F011         	goto	u4430
 10194  0023C2                     u4431:
 10195  0023C2  EFFF  F011         	goto	l4296
 10196  0023C6                     u4430:
 10197  0023C6  C03A  F00F         	movff	roundf@u,___flmul@b
 10198  0023CA  C03B  F010         	movff	roundf@u+1,___flmul@b+1
 10199  0023CE  C03C  F011         	movff	roundf@u+2,___flmul@b+2
 10200  0023D2  C03D  F012         	movff	roundf@u+3,___flmul@b+3
 10201  0023D6  0E00               	movlw	0
 10202  0023D8  6E13               	movwf	___flmul@a^0,c
 10203  0023DA  0E00               	movlw	0
 10204  0023DC  6E14               	movwf	(___flmul@a+1)^0,c
 10205  0023DE  0E00               	movlw	0
 10206  0023E0  6E15               	movwf	(___flmul@a+2)^0,c
 10207  0023E2  0E00               	movlw	0
 10208  0023E4  6E16               	movwf	(___flmul@a+3)^0,c
 10209  0023E6  EC52  F00F         	call	___flmul	;wreg free
 10210  0023EA  C00F  F028         	movff	?___flmul,?_roundf
 10211  0023EE  C010  F029         	movff	?___flmul+1,?_roundf+1
 10212  0023F2  C011  F02A         	movff	?___flmul+2,?_roundf+2
 10213  0023F6  C012  F02B         	movff	?___flmul+3,?_roundf+3
 10214  0023FA  EF3D  F013         	goto	l1405
 10215  0023FE                     l4296:
 10216  0023FE  0E00               	movlw	0
 10217  002400  6E05               	movwf	___fladd@a^0,c
 10218  002402  0E00               	movlw	0
 10219  002404  6E06               	movwf	(___fladd@a+1)^0,c
 10220  002406  0E00               	movlw	0
 10221  002408  6E07               	movwf	(___fladd@a+2)^0,c
 10222  00240A  0E4B               	movlw	75
 10223  00240C  6E08               	movwf	(___fladd@a+3)^0,c
 10224  00240E  C028  F001         	movff	roundf@x,___fladd@b
 10225  002412  C029  F002         	movff	roundf@x+1,___fladd@b+1
 10226  002416  C02A  F003         	movff	roundf@x+2,___fladd@b+2
 10227  00241A  C02B  F004         	movff	roundf@x+3,___fladd@b+3
 10228  00241E  ECF2  F00C         	call	___fladd	;wreg free
 10229  002422  C001  F036         	movff	?___fladd,_roundf$2933
 10230  002426  C002  F037         	movff	?___fladd+1,_roundf$2933+1
 10231  00242A  C003  F038         	movff	?___fladd+2,_roundf$2933+2
 10232  00242E  C004  F039         	movff	?___fladd+3,_roundf$2933+3
 10233  002432  0E00               	movlw	0
 10234  002434  6E05               	movwf	___fladd@a^0,c
 10235  002436  0E00               	movlw	0
 10236  002438  6E06               	movwf	(___fladd@a+1)^0,c
 10237  00243A  0E00               	movlw	0
 10238  00243C  6E07               	movwf	(___fladd@a+2)^0,c
 10239  00243E  0ECB               	movlw	203
 10240  002440  6E08               	movwf	(___fladd@a+3)^0,c
 10241  002442  C036  F001         	movff	_roundf$2933,___fladd@b
 10242  002446  C037  F002         	movff	_roundf$2933+1,___fladd@b+1
 10243  00244A  C038  F003         	movff	_roundf$2933+2,___fladd@b+2
 10244  00244E  C039  F004         	movff	_roundf$2933+3,___fladd@b+3
 10245  002452  ECF2  F00C         	call	___fladd	;wreg free
 10246  002456  C001  F030         	movff	?___fladd,_roundf$2934
 10247  00245A  C002  F031         	movff	?___fladd+1,_roundf$2934+1
 10248  00245E  C003  F032         	movff	?___fladd+2,_roundf$2934+2
 10249  002462  C004  F033         	movff	?___fladd+3,_roundf$2934+3
 10250  002466  C030  F011         	movff	_roundf$2934,___flsub@b
 10251  00246A  C031  F012         	movff	_roundf$2934+1,___flsub@b+1
 10252  00246E  C032  F013         	movff	_roundf$2934+2,___flsub@b+2
 10253  002472  C033  F014         	movff	_roundf$2934+3,___flsub@b+3
 10254  002476  C028  F015         	movff	roundf@x,___flsub@a
 10255  00247A  C029  F016         	movff	roundf@x+1,___flsub@a+1
 10256  00247E  C02A  F017         	movff	roundf@x+2,___flsub@a+2
 10257  002482  C02B  F018         	movff	roundf@x+3,___flsub@a+3
 10258  002486  ECCD  F02B         	call	___flsub	;wreg free
 10259  00248A  C011  F03E         	movff	?___flsub,roundf@y
 10260  00248E  C012  F03F         	movff	?___flsub+1,roundf@y+1
 10261  002492  C013  F040         	movff	?___flsub+2,roundf@y+2
 10262  002496  C014  F041         	movff	?___flsub+3,roundf@y+3
 10263  00249A  0E00               	movlw	0
 10264  00249C  6E01               	movwf	___flge@ff1^0,c
 10265  00249E  0E00               	movlw	0
 10266  0024A0  6E02               	movwf	(___flge@ff1+1)^0,c
 10267  0024A2  0E00               	movlw	0
 10268  0024A4  6E03               	movwf	(___flge@ff1+2)^0,c
 10269  0024A6  0E3F               	movlw	63
 10270  0024A8  6E04               	movwf	(___flge@ff1+3)^0,c
 10271  0024AA  C03E  F005         	movff	roundf@y,___flge@ff2
 10272  0024AE  C03F  F006         	movff	roundf@y+1,___flge@ff2+1
 10273  0024B2  C040  F007         	movff	roundf@y+2,___flge@ff2+2
 10274  0024B6  C041  F008         	movff	roundf@y+3,___flge@ff2+3
 10275  0024BA  EC73  F026         	call	___flge	;wreg free
 10276  0024BE  B0D8               	btfsc	status,0,c
 10277  0024C0  EF64  F012         	goto	u4441
 10278  0024C4  EF66  F012         	goto	u4440
 10279  0024C8                     u4441:
 10280  0024C8  EF9C  F012         	goto	l4300
 10281  0024CC                     u4440:
 10282  0024CC  C028  F005         	movff	roundf@x,___fladd@a
 10283  0024D0  C029  F006         	movff	roundf@x+1,___fladd@a+1
 10284  0024D4  C02A  F007         	movff	roundf@x+2,___fladd@a+2
 10285  0024D8  C02B  F008         	movff	roundf@x+3,___fladd@a+3
 10286  0024DC  C03E  F001         	movff	roundf@y,___fladd@b
 10287  0024E0  C03F  F002         	movff	roundf@y+1,___fladd@b+1
 10288  0024E4  C040  F003         	movff	roundf@y+2,___fladd@b+2
 10289  0024E8  C041  F004         	movff	roundf@y+3,___fladd@b+3
 10290  0024EC  ECF2  F00C         	call	___fladd	;wreg free
 10291  0024F0  C001  F036         	movff	?___fladd,_roundf$2933
 10292  0024F4  C002  F037         	movff	?___fladd+1,_roundf$2933+1
 10293  0024F8  C003  F038         	movff	?___fladd+2,_roundf$2933+2
 10294  0024FC  C004  F039         	movff	?___fladd+3,_roundf$2933+3
 10295  002500  C036  F001         	movff	_roundf$2933,___fladd@b
 10296  002504  C037  F002         	movff	_roundf$2933+1,___fladd@b+1
 10297  002508  C038  F003         	movff	_roundf$2933+2,___fladd@b+2
 10298  00250C  C039  F004         	movff	_roundf$2933+3,___fladd@b+3
 10299  002510  0E00               	movlw	0
 10300  002512  6E05               	movwf	___fladd@a^0,c
 10301  002514  0E00               	movlw	0
 10302  002516  6E06               	movwf	(___fladd@a+1)^0,c
 10303  002518  0E80               	movlw	128
 10304  00251A  6E07               	movwf	(___fladd@a+2)^0,c
 10305  00251C  0EBF               	movlw	191
 10306  00251E  6E08               	movwf	(___fladd@a+3)^0,c
 10307  002520  ECF2  F00C         	call	___fladd	;wreg free
 10308  002524  C001  F03E         	movff	?___fladd,roundf@y
 10309  002528  C002  F03F         	movff	?___fladd+1,roundf@y+1
 10310  00252C  C003  F040         	movff	?___fladd+2,roundf@y+2
 10311  002530  C004  F041         	movff	?___fladd+3,roundf@y+3
 10312  002534  EF05  F013         	goto	l4306
 10313  002538                     l4300:
 10314  002538  0E00               	movlw	0
 10315  00253A  6E01               	movwf	___flge@ff1^0,c
 10316  00253C  0E00               	movlw	0
 10317  00253E  6E02               	movwf	(___flge@ff1+1)^0,c
 10318  002540  0E00               	movlw	0
 10319  002542  6E03               	movwf	(___flge@ff1+2)^0,c
 10320  002544  0EBF               	movlw	191
 10321  002546  6E04               	movwf	(___flge@ff1+3)^0,c
 10322  002548  C03E  F005         	movff	roundf@y,___flge@ff2
 10323  00254C  C03F  F006         	movff	roundf@y+1,___flge@ff2+1
 10324  002550  C040  F007         	movff	roundf@y+2,___flge@ff2+2
 10325  002554  C041  F008         	movff	roundf@y+3,___flge@ff2+3
 10326  002558  EC73  F026         	call	___flge	;wreg free
 10327  00255C  A0D8               	btfss	status,0,c
 10328  00255E  EFB3  F012         	goto	u4451
 10329  002562  EFB5  F012         	goto	u4450
 10330  002566                     u4451:
 10331  002566  EFEB  F012         	goto	l4304
 10332  00256A                     u4450:
 10333  00256A  C028  F005         	movff	roundf@x,___fladd@a
 10334  00256E  C029  F006         	movff	roundf@x+1,___fladd@a+1
 10335  002572  C02A  F007         	movff	roundf@x+2,___fladd@a+2
 10336  002576  C02B  F008         	movff	roundf@x+3,___fladd@a+3
 10337  00257A  C03E  F001         	movff	roundf@y,___fladd@b
 10338  00257E  C03F  F002         	movff	roundf@y+1,___fladd@b+1
 10339  002582  C040  F003         	movff	roundf@y+2,___fladd@b+2
 10340  002586  C041  F004         	movff	roundf@y+3,___fladd@b+3
 10341  00258A  ECF2  F00C         	call	___fladd	;wreg free
 10342  00258E  C001  F036         	movff	?___fladd,_roundf$2933
 10343  002592  C002  F037         	movff	?___fladd+1,_roundf$2933+1
 10344  002596  C003  F038         	movff	?___fladd+2,_roundf$2933+2
 10345  00259A  C004  F039         	movff	?___fladd+3,_roundf$2933+3
 10346  00259E  C036  F001         	movff	_roundf$2933,___fladd@b
 10347  0025A2  C037  F002         	movff	_roundf$2933+1,___fladd@b+1
 10348  0025A6  C038  F003         	movff	_roundf$2933+2,___fladd@b+2
 10349  0025AA  C039  F004         	movff	_roundf$2933+3,___fladd@b+3
 10350  0025AE  0E00               	movlw	0
 10351  0025B0  6E05               	movwf	___fladd@a^0,c
 10352  0025B2  0E00               	movlw	0
 10353  0025B4  6E06               	movwf	(___fladd@a+1)^0,c
 10354  0025B6  0E80               	movlw	128
 10355  0025B8  6E07               	movwf	(___fladd@a+2)^0,c
 10356  0025BA  0E3F               	movlw	63
 10357  0025BC  6E08               	movwf	(___fladd@a+3)^0,c
 10358  0025BE  ECF2  F00C         	call	___fladd	;wreg free
 10359  0025C2  C001  F03E         	movff	?___fladd,roundf@y
 10360  0025C6  C002  F03F         	movff	?___fladd+1,roundf@y+1
 10361  0025CA  C003  F040         	movff	?___fladd+2,roundf@y+2
 10362  0025CE  C004  F041         	movff	?___fladd+3,roundf@y+3
 10363  0025D2  EF05  F013         	goto	l4306
 10364  0025D6                     l4304:
 10365  0025D6  C03E  F001         	movff	roundf@y,___fladd@b
 10366  0025DA  C03F  F002         	movff	roundf@y+1,___fladd@b+1
 10367  0025DE  C040  F003         	movff	roundf@y+2,___fladd@b+2
 10368  0025E2  C041  F004         	movff	roundf@y+3,___fladd@b+3
 10369  0025E6  C028  F005         	movff	roundf@x,___fladd@a
 10370  0025EA  C029  F006         	movff	roundf@x+1,___fladd@a+1
 10371  0025EE  C02A  F007         	movff	roundf@x+2,___fladd@a+2
 10372  0025F2  C02B  F008         	movff	roundf@x+3,___fladd@a+3
 10373  0025F6  ECF2  F00C         	call	___fladd	;wreg free
 10374  0025FA  C001  F03E         	movff	?___fladd,roundf@y
 10375  0025FE  C002  F03F         	movff	?___fladd+1,roundf@y+1
 10376  002602  C003  F040         	movff	?___fladd+2,roundf@y+2
 10377  002606  C004  F041         	movff	?___fladd+3,roundf@y+3
 10378  00260A                     l4306:
 10379  00260A  C03A  F02C         	movff	roundf@u,??_roundf
 10380  00260E  C03B  F02D         	movff	roundf@u+1,??_roundf+1
 10381  002612  C03C  F02E         	movff	roundf@u+2,??_roundf+2
 10382  002616  C03D  F02F         	movff	roundf@u+3,??_roundf+3
 10383  00261A  0E20               	movlw	32
 10384  00261C  EF15  F013         	goto	u4460
 10385  002620                     u4465:
 10386  002620  90D8               	bcf	status,0,c
 10387  002622  322F               	rrcf	(??_roundf+3)^0,f,c
 10388  002624  322E               	rrcf	(??_roundf+2)^0,f,c
 10389  002626  322D               	rrcf	(??_roundf+1)^0,f,c
 10390  002628  322C               	rrcf	??_roundf^0,f,c
 10391  00262A                     u4460:
 10392  00262A  2EE8               	decfsz	wreg,f,c
 10393  00262C  EF10  F013         	goto	u4465
 10394  002630  502C               	movf	??_roundf^0,w,c
 10395  002632  102D               	iorwf	(??_roundf+1)^0,w,c
 10396  002634  102E               	iorwf	(??_roundf+2)^0,w,c
 10397  002636  102F               	iorwf	(??_roundf+3)^0,w,c
 10398  002638  B4D8               	btfsc	status,2,c
 10399  00263A  EF21  F013         	goto	u4471
 10400  00263E  EF23  F013         	goto	u4470
 10401  002642                     u4471:
 10402  002642  EF35  F013         	goto	l4310
 10403  002646                     u4470:
 10404  002646  C03E  F001         	movff	roundf@y,___flneg@f1
 10405  00264A  C03F  F002         	movff	roundf@y+1,___flneg@f1+1
 10406  00264E  C040  F003         	movff	roundf@y+2,___flneg@f1+2
 10407  002652  C041  F004         	movff	roundf@y+3,___flneg@f1+3
 10408  002656  ECEF  F02C         	call	___flneg	;wreg free
 10409  00265A  C001  F03E         	movff	?___flneg,roundf@y
 10410  00265E  C002  F03F         	movff	?___flneg+1,roundf@y+1
 10411  002662  C003  F040         	movff	?___flneg+2,roundf@y+2
 10412  002666  C004  F041         	movff	?___flneg+3,roundf@y+3
 10413  00266A                     l4310:
 10414  00266A  C03E  F028         	movff	roundf@y,?_roundf
 10415  00266E  C03F  F029         	movff	roundf@y+1,?_roundf+1
 10416  002672  C040  F02A         	movff	roundf@y+2,?_roundf+2
 10417  002676  C041  F02B         	movff	roundf@y+3,?_roundf+3
 10418  00267A                     l1405:
 10419  00267A  0012               	return		;funcret
 10420  00267C                     __end_of_roundf:
 10421                           	callstack 0
 10422                           
 10423 ;; *************** function ___flsub *****************
 10424 ;; Defined at:
 10425 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\sprcadd.c"
 10426 ;; Parameters:    Size  Location     Type
 10427 ;;  b               4   16[COMRAM] float 
 10428 ;;  a               4   20[COMRAM] float 
 10429 ;; Auto vars:     Size  Location     Type
 10430 ;;		None
 10431 ;; Return value:  Size  Location     Type
 10432 ;;                  4   16[COMRAM] float 
 10433 ;; Registers used:
 10434 ;;		wreg, status,2, status,0, cstack
 10435 ;; Tracked objects:
 10436 ;;		On entry : 0/0
 10437 ;;		On exit  : 0/0
 10438 ;;		Unchanged: 0/0
 10439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10440 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10441 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10442 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10443 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10444 ;;Total ram usage:        8 bytes
 10445 ;; Hardware stack levels used: 1
 10446 ;; Hardware stack levels required when called: 2
 10447 ;; This function calls:
 10448 ;;		___fladd
 10449 ;; This function is called by:
 10450 ;;		_roundf
 10451 ;; This function uses a non-reentrant model
 10452 ;;
 10453                           
 10454                           	psect	text49
 10455  00579A                     __ptext49:
 10456                           	callstack 0
 10457  00579A                     ___flsub:
 10458                           	callstack 24
 10459  00579A  0E00               	movlw	0
 10460  00579C  1A15               	xorwf	___flsub@a^0,f,c
 10461  00579E  0E00               	movlw	0
 10462  0057A0  1A16               	xorwf	(___flsub@a+1)^0,f,c
 10463  0057A2  0E00               	movlw	0
 10464  0057A4  1A17               	xorwf	(___flsub@a+2)^0,f,c
 10465  0057A6  0E80               	movlw	128
 10466  0057A8  1A18               	xorwf	(___flsub@a+3)^0,f,c
 10467  0057AA  C011  F001         	movff	___flsub@b,___fladd@b
 10468  0057AE  C012  F002         	movff	___flsub@b+1,___fladd@b+1
 10469  0057B2  C013  F003         	movff	___flsub@b+2,___fladd@b+2
 10470  0057B6  C014  F004         	movff	___flsub@b+3,___fladd@b+3
 10471  0057BA  C015  F005         	movff	___flsub@a,___fladd@a
 10472  0057BE  C016  F006         	movff	___flsub@a+1,___fladd@a+1
 10473  0057C2  C017  F007         	movff	___flsub@a+2,___fladd@a+2
 10474  0057C6  C018  F008         	movff	___flsub@a+3,___fladd@a+3
 10475  0057CA  ECF2  F00C         	call	___fladd	;wreg free
 10476  0057CE  C001  F011         	movff	?___fladd,?___flsub
 10477  0057D2  C002  F012         	movff	?___fladd+1,?___flsub+1
 10478  0057D6  C003  F013         	movff	?___fladd+2,?___flsub+2
 10479  0057DA  C004  F014         	movff	?___fladd+3,?___flsub+3
 10480  0057DE  0012               	return		;funcret
 10481  0057E0                     __end_of___flsub:
 10482                           	callstack 0
 10483                           
 10484 ;; *************** function ___fladd *****************
 10485 ;; Defined at:
 10486 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\sprcadd.c"
 10487 ;; Parameters:    Size  Location     Type
 10488 ;;  b               4    0[COMRAM] float 
 10489 ;;  a               4    4[COMRAM] float 
 10490 ;; Auto vars:     Size  Location     Type
 10491 ;;  grs             1   15[COMRAM] unsigned char 
 10492 ;;  bexp            1   14[COMRAM] unsigned char 
 10493 ;;  aexp            1   13[COMRAM] unsigned char 
 10494 ;;  signs           1   12[COMRAM] unsigned char 
 10495 ;; Return value:  Size  Location     Type
 10496 ;;                  4    0[COMRAM] unsigned char 
 10497 ;; Registers used:
 10498 ;;		wreg, status,2, status,0
 10499 ;; Tracked objects:
 10500 ;;		On entry : 0/0
 10501 ;;		On exit  : 0/0
 10502 ;;		Unchanged: 0/0
 10503 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10504 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10505 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10506 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10507 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10508 ;;Total ram usage:       16 bytes
 10509 ;; Hardware stack levels used: 1
 10510 ;; Hardware stack levels required when called: 1
 10511 ;; This function calls:
 10512 ;;		Nothing
 10513 ;; This function is called by:
 10514 ;;		___flsub
 10515 ;;		_roundf
 10516 ;; This function uses a non-reentrant model
 10517 ;;
 10518                           
 10519                           	psect	text50
 10520  0019E4                     __ptext50:
 10521                           	callstack 0
 10522  0019E4                     ___fladd:
 10523                           	callstack 24
 10524  0019E4  5004               	movf	(___fladd@b+3)^0,w,c
 10525  0019E6  0B80               	andlw	128
 10526  0019E8  6E0D               	movwf	___fladd@signs^0,c
 10527  0019EA  5004               	movf	(___fladd@b+3)^0,w,c
 10528  0019EC  2404               	addwf	(___fladd@b+3)^0,w,c
 10529  0019EE  6E0F               	movwf	___fladd@bexp^0,c
 10530  0019F0  AE03               	btfss	(___fladd@b+2)^0,7,c
 10531  0019F2  EFFD  F00C         	goto	u3441
 10532  0019F6  EFFF  F00C         	goto	u3440
 10533  0019FA                     u3441:
 10534  0019FA  EF00  F00D         	goto	l3652
 10535  0019FE                     u3440:
 10536  0019FE  800F               	bsf	___fladd@bexp^0,0,c
 10537  001A00                     l3652:
 10538  001A00  500F               	movf	___fladd@bexp^0,w,c
 10539  001A02  B4D8               	btfsc	status,2,c
 10540  001A04  EF06  F00D         	goto	u3451
 10541  001A08  EF08  F00D         	goto	u3450
 10542  001A0C                     u3451:
 10543  001A0C  EF1D  F00D         	goto	l3662
 10544  001A10                     u3450:
 10545  001A10  280F               	incf	___fladd@bexp^0,w,c
 10546  001A12  A4D8               	btfss	status,2,c
 10547  001A14  EF0E  F00D         	goto	u3461
 10548  001A18  EF10  F00D         	goto	u3460
 10549  001A1C                     u3461:
 10550  001A1C  EF18  F00D         	goto	l3658
 10551  001A20                     u3460:
 10552  001A20  0E00               	movlw	0
 10553  001A22  6E01               	movwf	___fladd@b^0,c
 10554  001A24  0E00               	movlw	0
 10555  001A26  6E02               	movwf	(___fladd@b+1)^0,c
 10556  001A28  0E00               	movlw	0
 10557  001A2A  6E03               	movwf	(___fladd@b+2)^0,c
 10558  001A2C  0E00               	movlw	0
 10559  001A2E  6E04               	movwf	(___fladd@b+3)^0,c
 10560  001A30                     l3658:
 10561  001A30  8E03               	bsf	(___fladd@b+2)^0,7,c
 10562  001A32  0E00               	movlw	0
 10563  001A34  6E04               	movwf	(___fladd@b+3)^0,c
 10564  001A36  EF25  F00D         	goto	l3664
 10565  001A3A                     l3662:
 10566  001A3A  0E00               	movlw	0
 10567  001A3C  6E01               	movwf	___fladd@b^0,c
 10568  001A3E  0E00               	movlw	0
 10569  001A40  6E02               	movwf	(___fladd@b+1)^0,c
 10570  001A42  0E00               	movlw	0
 10571  001A44  6E03               	movwf	(___fladd@b+2)^0,c
 10572  001A46  0E00               	movlw	0
 10573  001A48  6E04               	movwf	(___fladd@b+3)^0,c
 10574  001A4A                     l3664:
 10575  001A4A  5008               	movf	(___fladd@a+3)^0,w,c
 10576  001A4C  0B80               	andlw	128
 10577  001A4E  6E0E               	movwf	___fladd@aexp^0,c
 10578  001A50  500D               	movf	___fladd@signs^0,w,c
 10579  001A52  180E               	xorwf	___fladd@aexp^0,w,c
 10580  001A54  B4D8               	btfsc	status,2,c
 10581  001A56  EF2F  F00D         	goto	u3471
 10582  001A5A  EF31  F00D         	goto	u3470
 10583  001A5E                     u3471:
 10584  001A5E  EF32  F00D         	goto	l3670
 10585  001A62                     u3470:
 10586  001A62  8C0D               	bsf	___fladd@signs^0,6,c
 10587  001A64                     l3670:
 10588  001A64  5008               	movf	(___fladd@a+3)^0,w,c
 10589  001A66  2408               	addwf	(___fladd@a+3)^0,w,c
 10590  001A68  6E0E               	movwf	___fladd@aexp^0,c
 10591  001A6A  AE07               	btfss	(___fladd@a+2)^0,7,c
 10592  001A6C  EF3A  F00D         	goto	u3481
 10593  001A70  EF3C  F00D         	goto	u3480
 10594  001A74                     u3481:
 10595  001A74  EF3D  F00D         	goto	l3676
 10596  001A78                     u3480:
 10597  001A78  800E               	bsf	___fladd@aexp^0,0,c
 10598  001A7A                     l3676:
 10599  001A7A  500E               	movf	___fladd@aexp^0,w,c
 10600  001A7C  B4D8               	btfsc	status,2,c
 10601  001A7E  EF43  F00D         	goto	u3491
 10602  001A82  EF45  F00D         	goto	u3490
 10603  001A86                     u3491:
 10604  001A86  EF5A  F00D         	goto	l3686
 10605  001A8A                     u3490:
 10606  001A8A  280E               	incf	___fladd@aexp^0,w,c
 10607  001A8C  A4D8               	btfss	status,2,c
 10608  001A8E  EF4B  F00D         	goto	u3501
 10609  001A92  EF4D  F00D         	goto	u3500
 10610  001A96                     u3501:
 10611  001A96  EF55  F00D         	goto	l3682
 10612  001A9A                     u3500:
 10613  001A9A  0E00               	movlw	0
 10614  001A9C  6E05               	movwf	___fladd@a^0,c
 10615  001A9E  0E00               	movlw	0
 10616  001AA0  6E06               	movwf	(___fladd@a+1)^0,c
 10617  001AA2  0E00               	movlw	0
 10618  001AA4  6E07               	movwf	(___fladd@a+2)^0,c
 10619  001AA6  0E00               	movlw	0
 10620  001AA8  6E08               	movwf	(___fladd@a+3)^0,c
 10621  001AAA                     l3682:
 10622  001AAA  8E07               	bsf	(___fladd@a+2)^0,7,c
 10623  001AAC  0E00               	movlw	0
 10624  001AAE  6E08               	movwf	(___fladd@a+3)^0,c
 10625  001AB0  EF62  F00D         	goto	l3688
 10626  001AB4                     l3686:
 10627  001AB4  0E00               	movlw	0
 10628  001AB6  6E05               	movwf	___fladd@a^0,c
 10629  001AB8  0E00               	movlw	0
 10630  001ABA  6E06               	movwf	(___fladd@a+1)^0,c
 10631  001ABC  0E00               	movlw	0
 10632  001ABE  6E07               	movwf	(___fladd@a+2)^0,c
 10633  001AC0  0E00               	movlw	0
 10634  001AC2  6E08               	movwf	(___fladd@a+3)^0,c
 10635  001AC4                     l3688:
 10636  001AC4  500F               	movf	___fladd@bexp^0,w,c
 10637  001AC6  5C0E               	subwf	___fladd@aexp^0,w,c
 10638  001AC8  B0D8               	btfsc	status,0,c
 10639  001ACA  EF69  F00D         	goto	u3511
 10640  001ACE  EF6B  F00D         	goto	u3510
 10641  001AD2                     u3511:
 10642  001AD2  EF92  F00D         	goto	l3724
 10643  001AD6                     u3510:
 10644  001AD6  AC0D               	btfss	___fladd@signs^0,6,c
 10645  001AD8  EF70  F00D         	goto	u3521
 10646  001ADC  EF72  F00D         	goto	u3520
 10647  001AE0                     u3521:
 10648  001AE0  EF74  F00D         	goto	l3694
 10649  001AE4                     u3520:
 10650  001AE4  0E80               	movlw	128
 10651  001AE6  1A0D               	xorwf	___fladd@signs^0,f,c
 10652  001AE8                     l3694:
 10653  001AE8  C00F  F010         	movff	___fladd@bexp,___fladd@grs
 10654  001AEC  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
 10655  001AF0  C010  F00E         	movff	___fladd@grs,___fladd@aexp
 10656  001AF4  C001  F010         	movff	___fladd@b,___fladd@grs
 10657  001AF8  C005  F001         	movff	___fladd@a,___fladd@b
 10658  001AFC  C010  F005         	movff	___fladd@grs,___fladd@a
 10659  001B00  C002  F010         	movff	___fladd@b+1,___fladd@grs
 10660  001B04  C006  F002         	movff	___fladd@a+1,___fladd@b+1
 10661  001B08  C010  F006         	movff	___fladd@grs,___fladd@a+1
 10662  001B0C  C003  F010         	movff	___fladd@b+2,___fladd@grs
 10663  001B10  C007  F003         	movff	___fladd@a+2,___fladd@b+2
 10664  001B14  C010  F007         	movff	___fladd@grs,___fladd@a+2
 10665  001B18  C004  F010         	movff	___fladd@b+3,___fladd@grs
 10666  001B1C  C008  F004         	movff	___fladd@a+3,___fladd@b+3
 10667  001B20  C010  F008         	movff	___fladd@grs,___fladd@a+3
 10668  001B24                     l3724:
 10669  001B24  0E00               	movlw	0
 10670  001B26  6E10               	movwf	___fladd@grs^0,c
 10671  001B28  500F               	movf	___fladd@bexp^0,w,c
 10672  001B2A  C00E  F009         	movff	___fladd@aexp,??___fladd
 10673  001B2E  6A0A               	clrf	(??___fladd+1)^0,c
 10674  001B30  5E09               	subwf	??___fladd^0,f,c
 10675  001B32  0E00               	movlw	0
 10676  001B34  5A0A               	subwfb	(??___fladd+1)^0,f,c
 10677  001B36  BE0A               	btfsc	(??___fladd+1)^0,7,c
 10678  001B38  EFA7  F00D         	goto	u3531
 10679  001B3C  500A               	movf	(??___fladd+1)^0,w,c
 10680  001B3E  E109               	bnz	u3530
 10681  001B40  0E1A               	movlw	26
 10682  001B42  5C09               	subwf	??___fladd^0,w,c
 10683  001B44  A0D8               	btfss	status,0,c
 10684  001B46  EFA7  F00D         	goto	u3531
 10685  001B4A  EFA9  F00D         	goto	u3530
 10686  001B4E                     u3531:
 10687  001B4E  EFE0  F00D         	goto	l1141
 10688  001B52                     u3530:
 10689  001B52  5001               	movf	___fladd@b^0,w,c
 10690  001B54  1002               	iorwf	(___fladd@b+1)^0,w,c
 10691  001B56  1003               	iorwf	(___fladd@b+2)^0,w,c
 10692  001B58  1004               	iorwf	(___fladd@b+3)^0,w,c
 10693  001B5A  A4D8               	btfss	status,2,c
 10694  001B5C  EFB2  F00D         	goto	u3541
 10695  001B60  EFB5  F00D         	goto	u3540
 10696  001B64                     u3541:
 10697  001B64  0E01               	movlw	1
 10698  001B66  EFB6  F00D         	goto	u3550
 10699  001B6A                     u3540:
 10700  001B6A  0E00               	movlw	0
 10701  001B6C                     u3550:
 10702  001B6C  6E10               	movwf	___fladd@grs^0,c
 10703  001B6E  0E00               	movlw	0
 10704  001B70  6E01               	movwf	___fladd@b^0,c
 10705  001B72  0E00               	movlw	0
 10706  001B74  6E02               	movwf	(___fladd@b+1)^0,c
 10707  001B76  0E00               	movlw	0
 10708  001B78  6E03               	movwf	(___fladd@b+2)^0,c
 10709  001B7A  0E00               	movlw	0
 10710  001B7C  6E04               	movwf	(___fladd@b+3)^0,c
 10711  001B7E  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
 10712  001B82  EFE9  F00D         	goto	l1140
 10713  001B86                     l1142:
 10714  001B86  A010               	btfss	___fladd@grs^0,0,c
 10715  001B88  EFC8  F00D         	goto	u3561
 10716  001B8C  EFCA  F00D         	goto	u3560
 10717  001B90                     u3561:
 10718  001B90  EFD0  F00D         	goto	l3736
 10719  001B94                     u3560:
 10720  001B94  90D8               	bcf	status,0,c
 10721  001B96  3010               	rrcf	___fladd@grs^0,w,c
 10722  001B98  0901               	iorlw	1
 10723  001B9A  6E10               	movwf	___fladd@grs^0,c
 10724  001B9C  EFD2  F00D         	goto	l3738
 10725  001BA0                     l3736:
 10726  001BA0  90D8               	bcf	status,0,c
 10727  001BA2  3210               	rrcf	___fladd@grs^0,f,c
 10728  001BA4                     l3738:
 10729  001BA4  A001               	btfss	___fladd@b^0,0,c
 10730  001BA6  EFD7  F00D         	goto	u3571
 10731  001BAA  EFD9  F00D         	goto	u3570
 10732  001BAE                     u3571:
 10733  001BAE  EFDA  F00D         	goto	l3742
 10734  001BB2                     u3570:
 10735  001BB2  8E10               	bsf	___fladd@grs^0,7,c
 10736  001BB4                     l3742:
 10737  001BB4  3404               	rlcf	(___fladd@b+3)^0,w,c
 10738  001BB6  3204               	rrcf	(___fladd@b+3)^0,f,c
 10739  001BB8  3203               	rrcf	(___fladd@b+2)^0,f,c
 10740  001BBA  3202               	rrcf	(___fladd@b+1)^0,f,c
 10741  001BBC  3201               	rrcf	___fladd@b^0,f,c
 10742  001BBE  2A0F               	incf	___fladd@bexp^0,f,c
 10743  001BC0                     l1141:
 10744  001BC0  500E               	movf	___fladd@aexp^0,w,c
 10745  001BC2  5C0F               	subwf	___fladd@bexp^0,w,c
 10746  001BC4  A0D8               	btfss	status,0,c
 10747  001BC6  EFE7  F00D         	goto	u3581
 10748  001BCA  EFE9  F00D         	goto	u3580
 10749  001BCE                     u3581:
 10750  001BCE  EFC3  F00D         	goto	l1142
 10751  001BD2                     u3580:
 10752  001BD2                     l1140:
 10753  001BD2  BC0D               	btfsc	___fladd@signs^0,6,c
 10754  001BD4  EFEE  F00D         	goto	u3591
 10755  001BD8  EFF0  F00D         	goto	u3590
 10756  001BDC                     u3591:
 10757  001BDC  EF30  F00E         	goto	l3770
 10758  001BE0                     u3590:
 10759  001BE0  500F               	movf	___fladd@bexp^0,w,c
 10760  001BE2  A4D8               	btfss	status,2,c
 10761  001BE4  EFF6  F00D         	goto	u3601
 10762  001BE8  EFF8  F00D         	goto	u3600
 10763  001BEC                     u3601:
 10764  001BEC  EF02  F00E         	goto	l3752
 10765  001BF0                     u3600:
 10766  001BF0  0E00               	movlw	0
 10767  001BF2  6E01               	movwf	?___fladd^0,c
 10768  001BF4  0E00               	movlw	0
 10769  001BF6  6E02               	movwf	(?___fladd+1)^0,c
 10770  001BF8  0E00               	movlw	0
 10771  001BFA  6E03               	movwf	(?___fladd+2)^0,c
 10772  001BFC  0E00               	movlw	0
 10773  001BFE  6E04               	movwf	(?___fladd+3)^0,c
 10774  001C00  EF51  F00F         	goto	l1149
 10775  001C04                     l3752:
 10776  001C04  5005               	movf	___fladd@a^0,w,c
 10777  001C06  2601               	addwf	___fladd@b^0,f,c
 10778  001C08  5006               	movf	(___fladd@a+1)^0,w,c
 10779  001C0A  2202               	addwfc	(___fladd@b+1)^0,f,c
 10780  001C0C  5007               	movf	(___fladd@a+2)^0,w,c
 10781  001C0E  2203               	addwfc	(___fladd@b+2)^0,f,c
 10782  001C10  5008               	movf	(___fladd@a+3)^0,w,c
 10783  001C12  2204               	addwfc	(___fladd@b+3)^0,f,c
 10784  001C14  A004               	btfss	(___fladd@b+3)^0,0,c
 10785  001C16  EF0F  F00E         	goto	u3611
 10786  001C1A  EF11  F00E         	goto	u3610
 10787  001C1E                     u3611:
 10788  001C1E  EFBD  F00E         	goto	l3806
 10789  001C22                     u3610:
 10790  001C22  A010               	btfss	___fladd@grs^0,0,c
 10791  001C24  EF16  F00E         	goto	u3621
 10792  001C28  EF18  F00E         	goto	u3620
 10793  001C2C                     u3621:
 10794  001C2C  EF1E  F00E         	goto	l3760
 10795  001C30                     u3620:
 10796  001C30  90D8               	bcf	status,0,c
 10797  001C32  3010               	rrcf	___fladd@grs^0,w,c
 10798  001C34  0901               	iorlw	1
 10799  001C36  6E10               	movwf	___fladd@grs^0,c
 10800  001C38  EF20  F00E         	goto	l3762
 10801  001C3C                     l3760:
 10802  001C3C  90D8               	bcf	status,0,c
 10803  001C3E  3210               	rrcf	___fladd@grs^0,f,c
 10804  001C40                     l3762:
 10805  001C40  A001               	btfss	___fladd@b^0,0,c
 10806  001C42  EF25  F00E         	goto	u3631
 10807  001C46  EF27  F00E         	goto	u3630
 10808  001C4A                     u3631:
 10809  001C4A  EF28  F00E         	goto	l3766
 10810  001C4E                     u3630:
 10811  001C4E  8E10               	bsf	___fladd@grs^0,7,c
 10812  001C50                     l3766:
 10813  001C50  3404               	rlcf	(___fladd@b+3)^0,w,c
 10814  001C52  3204               	rrcf	(___fladd@b+3)^0,f,c
 10815  001C54  3203               	rrcf	(___fladd@b+2)^0,f,c
 10816  001C56  3202               	rrcf	(___fladd@b+1)^0,f,c
 10817  001C58  3201               	rrcf	___fladd@b^0,f,c
 10818  001C5A  2A0F               	incf	___fladd@bexp^0,f,c
 10819  001C5C  EFBD  F00E         	goto	l3806
 10820  001C60                     l3770:
 10821  001C60  5005               	movf	___fladd@a^0,w,c
 10822  001C62  5C01               	subwf	___fladd@b^0,w,c
 10823  001C64  5006               	movf	(___fladd@a+1)^0,w,c
 10824  001C66  5802               	subwfb	(___fladd@b+1)^0,w,c
 10825  001C68  5007               	movf	(___fladd@a+2)^0,w,c
 10826  001C6A  5803               	subwfb	(___fladd@b+2)^0,w,c
 10827  001C6C  5004               	movf	(___fladd@b+3)^0,w,c
 10828  001C6E  0A80               	xorlw	128
 10829  001C70  6E09               	movwf	??___fladd^0,c
 10830  001C72  5008               	movf	(___fladd@a+3)^0,w,c
 10831  001C74  0A80               	xorlw	128
 10832  001C76  5809               	subwfb	??___fladd^0,w,c
 10833  001C78  B0D8               	btfsc	status,0,c
 10834  001C7A  EF41  F00E         	goto	u3641
 10835  001C7E  EF43  F00E         	goto	u3640
 10836  001C82                     u3641:
 10837  001C82  EF6E  F00E         	goto	l3780
 10838  001C86                     u3640:
 10839  001C86  5001               	movf	___fladd@b^0,w,c
 10840  001C88  5C05               	subwf	___fladd@a^0,w,c
 10841  001C8A  6E09               	movwf	??___fladd^0,c
 10842  001C8C  5002               	movf	(___fladd@b+1)^0,w,c
 10843  001C8E  5806               	subwfb	(___fladd@a+1)^0,w,c
 10844  001C90  6E0A               	movwf	(??___fladd+1)^0,c
 10845  001C92  5003               	movf	(___fladd@b+2)^0,w,c
 10846  001C94  5807               	subwfb	(___fladd@a+2)^0,w,c
 10847  001C96  6E0B               	movwf	(??___fladd+2)^0,c
 10848  001C98  5004               	movf	(___fladd@b+3)^0,w,c
 10849  001C9A  5808               	subwfb	(___fladd@a+3)^0,w,c
 10850  001C9C  6E0C               	movwf	(??___fladd+3)^0,c
 10851  001C9E  0EFF               	movlw	255
 10852  001CA0  2409               	addwf	??___fladd^0,w,c
 10853  001CA2  6E01               	movwf	___fladd@b^0,c
 10854  001CA4  0EFF               	movlw	255
 10855  001CA6  200A               	addwfc	(??___fladd+1)^0,w,c
 10856  001CA8  6E02               	movwf	(___fladd@b+1)^0,c
 10857  001CAA  0EFF               	movlw	255
 10858  001CAC  200B               	addwfc	(??___fladd+2)^0,w,c
 10859  001CAE  6E03               	movwf	(___fladd@b+2)^0,c
 10860  001CB0  0EFF               	movlw	255
 10861  001CB2  200C               	addwfc	(??___fladd+3)^0,w,c
 10862  001CB4  6E04               	movwf	(___fladd@b+3)^0,c
 10863  001CB6  0E80               	movlw	128
 10864  001CB8  1A0D               	xorwf	___fladd@signs^0,f,c
 10865  001CBA  6C10               	negf	___fladd@grs^0,c
 10866  001CBC  5010               	movf	___fladd@grs^0,w,c
 10867  001CBE  A4D8               	btfss	status,2,c
 10868  001CC0  EF64  F00E         	goto	u3651
 10869  001CC4  EF66  F00E         	goto	u3650
 10870  001CC8                     u3651:
 10871  001CC8  EF76  F00E         	goto	l1157
 10872  001CCC                     u3650:
 10873  001CCC  0E01               	movlw	1
 10874  001CCE  2601               	addwf	___fladd@b^0,f,c
 10875  001CD0  0E00               	movlw	0
 10876  001CD2  2202               	addwfc	(___fladd@b+1)^0,f,c
 10877  001CD4  2203               	addwfc	(___fladd@b+2)^0,f,c
 10878  001CD6  2204               	addwfc	(___fladd@b+3)^0,f,c
 10879  001CD8  EF76  F00E         	goto	l1157
 10880  001CDC                     l3780:
 10881  001CDC  5005               	movf	___fladd@a^0,w,c
 10882  001CDE  5E01               	subwf	___fladd@b^0,f,c
 10883  001CE0  5006               	movf	(___fladd@a+1)^0,w,c
 10884  001CE2  5A02               	subwfb	(___fladd@b+1)^0,f,c
 10885  001CE4  5007               	movf	(___fladd@a+2)^0,w,c
 10886  001CE6  5A03               	subwfb	(___fladd@b+2)^0,f,c
 10887  001CE8  5008               	movf	(___fladd@a+3)^0,w,c
 10888  001CEA  5A04               	subwfb	(___fladd@b+3)^0,f,c
 10889  001CEC                     l1157:
 10890  001CEC  5001               	movf	___fladd@b^0,w,c
 10891  001CEE  1002               	iorwf	(___fladd@b+1)^0,w,c
 10892  001CF0  1003               	iorwf	(___fladd@b+2)^0,w,c
 10893  001CF2  1004               	iorwf	(___fladd@b+3)^0,w,c
 10894  001CF4  A4D8               	btfss	status,2,c
 10895  001CF6  EF7F  F00E         	goto	u3661
 10896  001CFA  EF81  F00E         	goto	u3660
 10897  001CFE                     u3661:
 10898  001CFE  EFB6  F00E         	goto	l3804
 10899  001D02                     u3660:
 10900  001D02  5010               	movf	___fladd@grs^0,w,c
 10901  001D04  A4D8               	btfss	status,2,c
 10902  001D06  EF87  F00E         	goto	u3671
 10903  001D0A  EF89  F00E         	goto	u3670
 10904  001D0E                     u3671:
 10905  001D0E  EFB6  F00E         	goto	l3804
 10906  001D12                     u3670:
 10907  001D12  0E00               	movlw	0
 10908  001D14  6E01               	movwf	?___fladd^0,c
 10909  001D16  0E00               	movlw	0
 10910  001D18  6E02               	movwf	(?___fladd+1)^0,c
 10911  001D1A  0E00               	movlw	0
 10912  001D1C  6E03               	movwf	(?___fladd+2)^0,c
 10913  001D1E  0E00               	movlw	0
 10914  001D20  6E04               	movwf	(?___fladd+3)^0,c
 10915  001D22  EF51  F00F         	goto	l1149
 10916  001D26                     l3788:
 10917  001D26  90D8               	bcf	status,0,c
 10918  001D28  3601               	rlcf	___fladd@b^0,f,c
 10919  001D2A  3602               	rlcf	(___fladd@b+1)^0,f,c
 10920  001D2C  3603               	rlcf	(___fladd@b+2)^0,f,c
 10921  001D2E  3604               	rlcf	(___fladd@b+3)^0,f,c
 10922  001D30  AE10               	btfss	___fladd@grs^0,7,c
 10923  001D32  EF9D  F00E         	goto	u3681
 10924  001D36  EF9F  F00E         	goto	u3680
 10925  001D3A                     u3681:
 10926  001D3A  EFA0  F00E         	goto	l3794
 10927  001D3E                     u3680:
 10928  001D3E  8001               	bsf	___fladd@b^0,0,c
 10929  001D40                     l3794:
 10930  001D40  A010               	btfss	___fladd@grs^0,0,c
 10931  001D42  EFA5  F00E         	goto	u3691
 10932  001D46  EFA7  F00E         	goto	u3690
 10933  001D4A                     u3691:
 10934  001D4A  EFAB  F00E         	goto	l3798
 10935  001D4E                     u3690:
 10936  001D4E  80D8               	bsf	status,0,c
 10937  001D50  3610               	rlcf	___fladd@grs^0,f,c
 10938  001D52  EFAD  F00E         	goto	l3800
 10939  001D56                     l3798:
 10940  001D56  90D8               	bcf	status,0,c
 10941  001D58  3610               	rlcf	___fladd@grs^0,f,c
 10942  001D5A                     l3800:
 10943  001D5A  500F               	movf	___fladd@bexp^0,w,c
 10944  001D5C  B4D8               	btfsc	status,2,c
 10945  001D5E  EFB3  F00E         	goto	u3701
 10946  001D62  EFB5  F00E         	goto	u3700
 10947  001D66                     u3701:
 10948  001D66  EFB6  F00E         	goto	l3804
 10949  001D6A                     u3700:
 10950  001D6A  060F               	decf	___fladd@bexp^0,f,c
 10951  001D6C                     l3804:
 10952  001D6C  AE03               	btfss	(___fladd@b+2)^0,7,c
 10953  001D6E  EFBB  F00E         	goto	u3711
 10954  001D72  EFBD  F00E         	goto	u3710
 10955  001D76                     u3711:
 10956  001D76  EF93  F00E         	goto	l3788
 10957  001D7A                     u3710:
 10958  001D7A                     l3806:
 10959  001D7A  0E00               	movlw	0
 10960  001D7C  6E0E               	movwf	___fladd@aexp^0,c
 10961  001D7E  AE10               	btfss	___fladd@grs^0,7,c
 10962  001D80  EFC4  F00E         	goto	u3721
 10963  001D84  EFC6  F00E         	goto	u3720
 10964  001D88                     u3721:
 10965  001D88  EFDE  F00E         	goto	l1166
 10966  001D8C                     u3720:
 10967  001D8C  C010  F009         	movff	___fladd@grs,??___fladd
 10968  001D90  0E7F               	movlw	127
 10969  001D92  1609               	andwf	??___fladd^0,f,c
 10970  001D94  B4D8               	btfsc	status,2,c
 10971  001D96  EFCF  F00E         	goto	u3731
 10972  001D9A  EFD1  F00E         	goto	u3730
 10973  001D9E                     u3731:
 10974  001D9E  EFD5  F00E         	goto	l1167
 10975  001DA2                     u3730:
 10976  001DA2                     l3812:
 10977  001DA2  0E01               	movlw	1
 10978  001DA4  6E0E               	movwf	___fladd@aexp^0,c
 10979  001DA6  EFDE  F00E         	goto	l1166
 10980  001DAA                     l1167:
 10981  001DAA  A001               	btfss	___fladd@b^0,0,c
 10982  001DAC  EFDA  F00E         	goto	u3741
 10983  001DB0  EFDC  F00E         	goto	u3740
 10984  001DB4                     u3741:
 10985  001DB4  EFDE  F00E         	goto	l1166
 10986  001DB8                     u3740:
 10987  001DB8  EFD1  F00E         	goto	l3812
 10988  001DBC                     l1166:
 10989  001DBC  500E               	movf	___fladd@aexp^0,w,c
 10990  001DBE  B4D8               	btfsc	status,2,c
 10991  001DC0  EFE4  F00E         	goto	u3751
 10992  001DC4  EFE6  F00E         	goto	u3750
 10993  001DC8                     u3751:
 10994  001DC8  EF11  F00F         	goto	l3824
 10995  001DCC                     u3750:
 10996  001DCC  0E01               	movlw	1
 10997  001DCE  2601               	addwf	___fladd@b^0,f,c
 10998  001DD0  0E00               	movlw	0
 10999  001DD2  2202               	addwfc	(___fladd@b+1)^0,f,c
 11000  001DD4  2203               	addwfc	(___fladd@b+2)^0,f,c
 11001  001DD6  2204               	addwfc	(___fladd@b+3)^0,f,c
 11002  001DD8  A004               	btfss	(___fladd@b+3)^0,0,c
 11003  001DDA  EFF1  F00E         	goto	u3761
 11004  001DDE  EFF3  F00E         	goto	u3760
 11005  001DE2                     u3761:
 11006  001DE2  EF11  F00F         	goto	l3824
 11007  001DE6                     u3760:
 11008  001DE6  C001  F009         	movff	___fladd@b,??___fladd
 11009  001DEA  C002  F00A         	movff	___fladd@b+1,??___fladd+1
 11010  001DEE  C003  F00B         	movff	___fladd@b+2,??___fladd+2
 11011  001DF2  C004  F00C         	movff	___fladd@b+3,??___fladd+3
 11012  001DF6  340C               	rlcf	(??___fladd+3)^0,w,c
 11013  001DF8  320C               	rrcf	(??___fladd+3)^0,f,c
 11014  001DFA  320B               	rrcf	(??___fladd+2)^0,f,c
 11015  001DFC  320A               	rrcf	(??___fladd+1)^0,f,c
 11016  001DFE  3209               	rrcf	??___fladd^0,f,c
 11017  001E00  C009  F001         	movff	??___fladd,___fladd@b
 11018  001E04  C00A  F002         	movff	??___fladd+1,___fladd@b+1
 11019  001E08  C00B  F003         	movff	??___fladd+2,___fladd@b+2
 11020  001E0C  C00C  F004         	movff	??___fladd+3,___fladd@b+3
 11021  001E10  280F               	incf	___fladd@bexp^0,w,c
 11022  001E12  B4D8               	btfsc	status,2,c
 11023  001E14  EF0E  F00F         	goto	u3771
 11024  001E18  EF10  F00F         	goto	u3770
 11025  001E1C                     u3771:
 11026  001E1C  EF11  F00F         	goto	l3824
 11027  001E20                     u3770:
 11028  001E20  2A0F               	incf	___fladd@bexp^0,f,c
 11029  001E22                     l3824:
 11030  001E22  280F               	incf	___fladd@bexp^0,w,c
 11031  001E24  B4D8               	btfsc	status,2,c
 11032  001E26  EF17  F00F         	goto	u3781
 11033  001E2A  EF19  F00F         	goto	u3780
 11034  001E2E                     u3781:
 11035  001E2E  EF21  F00F         	goto	l3828
 11036  001E32                     u3780:
 11037  001E32  500F               	movf	___fladd@bexp^0,w,c
 11038  001E34  A4D8               	btfss	status,2,c
 11039  001E36  EF1F  F00F         	goto	u3791
 11040  001E3A  EF21  F00F         	goto	u3790
 11041  001E3E                     u3791:
 11042  001E3E  EF33  F00F         	goto	l3832
 11043  001E42                     u3790:
 11044  001E42                     l3828:
 11045  001E42  0E00               	movlw	0
 11046  001E44  6E01               	movwf	___fladd@b^0,c
 11047  001E46  0E00               	movlw	0
 11048  001E48  6E02               	movwf	(___fladd@b+1)^0,c
 11049  001E4A  0E00               	movlw	0
 11050  001E4C  6E03               	movwf	(___fladd@b+2)^0,c
 11051  001E4E  0E00               	movlw	0
 11052  001E50  6E04               	movwf	(___fladd@b+3)^0,c
 11053  001E52  500F               	movf	___fladd@bexp^0,w,c
 11054  001E54  A4D8               	btfss	status,2,c
 11055  001E56  EF2F  F00F         	goto	u3801
 11056  001E5A  EF31  F00F         	goto	u3800
 11057  001E5E                     u3801:
 11058  001E5E  EF33  F00F         	goto	l3832
 11059  001E62                     u3800:
 11060  001E62  0E00               	movlw	0
 11061  001E64  6E0D               	movwf	___fladd@signs^0,c
 11062  001E66                     l3832:
 11063  001E66  A00F               	btfss	___fladd@bexp^0,0,c
 11064  001E68  EF38  F00F         	goto	u3811
 11065  001E6C  EF3A  F00F         	goto	u3810
 11066  001E70                     u3811:
 11067  001E70  EF3D  F00F         	goto	l3836
 11068  001E74                     u3810:
 11069  001E74  8E03               	bsf	(___fladd@b+2)^0,7,c
 11070  001E76  EF3E  F00F         	goto	l3838
 11071  001E7A                     l3836:
 11072  001E7A  9E03               	bcf	(___fladd@b+2)^0,7,c
 11073  001E7C                     l3838:
 11074  001E7C  90D8               	bcf	status,0,c
 11075  001E7E  300F               	rrcf	___fladd@bexp^0,w,c
 11076  001E80  6E04               	movwf	(___fladd@b+3)^0,c
 11077  001E82  AE0D               	btfss	___fladd@signs^0,7,c
 11078  001E84  EF46  F00F         	goto	u3821
 11079  001E88  EF48  F00F         	goto	u3820
 11080  001E8C                     u3821:
 11081  001E8C  EF49  F00F         	goto	l3844
 11082  001E90                     u3820:
 11083  001E90  8E04               	bsf	(___fladd@b+3)^0,7,c
 11084  001E92                     l3844:
 11085  001E92  C001  F001         	movff	___fladd@b,?___fladd
 11086  001E96  C002  F002         	movff	___fladd@b+1,?___fladd+1
 11087  001E9A  C003  F003         	movff	___fladd@b+2,?___fladd+2
 11088  001E9E  C004  F004         	movff	___fladd@b+3,?___fladd+3
 11089  001EA2                     l1149:
 11090  001EA2  0012               	return		;funcret
 11091  001EA4                     __end_of___fladd:
 11092                           	callstack 0
 11093                           
 11094 ;; *************** function ___flneg *****************
 11095 ;; Defined at:
 11096 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\flneg.c"
 11097 ;; Parameters:    Size  Location     Type
 11098 ;;  f1              4    0[COMRAM] unsigned char 
 11099 ;; Auto vars:     Size  Location     Type
 11100 ;;		None
 11101 ;; Return value:  Size  Location     Type
 11102 ;;                  4    0[COMRAM] unsigned char 
 11103 ;; Registers used:
 11104 ;;		wreg, status,2, status,0
 11105 ;; Tracked objects:
 11106 ;;		On entry : 0/0
 11107 ;;		On exit  : 0/0
 11108 ;;		Unchanged: 0/0
 11109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11110 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11111 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11112 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11113 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11114 ;;Total ram usage:        4 bytes
 11115 ;; Hardware stack levels used: 1
 11116 ;; Hardware stack levels required when called: 1
 11117 ;; This function calls:
 11118 ;;		Nothing
 11119 ;; This function is called by:
 11120 ;;		_roundf
 11121 ;; This function uses a non-reentrant model
 11122 ;;
 11123                           
 11124                           	psect	text51
 11125  0059DE                     __ptext51:
 11126                           	callstack 0
 11127  0059DE                     ___flneg:
 11128                           	callstack 25
 11129  0059DE  5001               	movf	___flneg@f1^0,w,c
 11130  0059E0  1002               	iorwf	(___flneg@f1+1)^0,w,c
 11131  0059E2  1003               	iorwf	(___flneg@f1+2)^0,w,c
 11132  0059E4  1004               	iorwf	(___flneg@f1+3)^0,w,c
 11133  0059E6  B4D8               	btfsc	status,2,c
 11134  0059E8  EFF8  F02C         	goto	u4181
 11135  0059EC  EFFA  F02C         	goto	u4180
 11136  0059F0                     u4181:
 11137  0059F0  EF02  F02D         	goto	l4108
 11138  0059F4                     u4180:
 11139  0059F4  0E00               	movlw	0
 11140  0059F6  1A01               	xorwf	___flneg@f1^0,f,c
 11141  0059F8  0E00               	movlw	0
 11142  0059FA  1A02               	xorwf	(___flneg@f1+1)^0,f,c
 11143  0059FC  0E00               	movlw	0
 11144  0059FE  1A03               	xorwf	(___flneg@f1+2)^0,f,c
 11145  005A00  0E80               	movlw	128
 11146  005A02  1A04               	xorwf	(___flneg@f1+3)^0,f,c
 11147  005A04                     l4108:
 11148  005A04  C001  F001         	movff	___flneg@f1,?___flneg
 11149  005A08  C002  F002         	movff	___flneg@f1+1,?___flneg+1
 11150  005A0C  C003  F003         	movff	___flneg@f1+2,?___flneg+2
 11151  005A10  C004  F004         	movff	___flneg@f1+3,?___flneg+3
 11152  005A14  0012               	return		;funcret
 11153  005A16                     __end_of___flneg:
 11154                           	callstack 0
 11155                           
 11156 ;; *************** function ___flmul *****************
 11157 ;; Defined at:
 11158 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\sprcmul.c"
 11159 ;; Parameters:    Size  Location     Type
 11160 ;;  b               4   14[COMRAM] unsigned char 
 11161 ;;  a               4   18[COMRAM] unsigned char 
 11162 ;; Auto vars:     Size  Location     Type
 11163 ;;  prod            4   33[COMRAM] struct .
 11164 ;;  grs             4   27[COMRAM] unsigned long 
 11165 ;;  temp            2   37[COMRAM] struct .
 11166 ;;  bexp            1   32[COMRAM] unsigned char 
 11167 ;;  aexp            1   31[COMRAM] unsigned char 
 11168 ;;  sign            1   26[COMRAM] unsigned char 
 11169 ;; Return value:  Size  Location     Type
 11170 ;;                  4   14[COMRAM] unsigned char 
 11171 ;; Registers used:
 11172 ;;		wreg, status,2, status,0, prodl, prodh
 11173 ;; Tracked objects:
 11174 ;;		On entry : 0/0
 11175 ;;		On exit  : 0/0
 11176 ;;		Unchanged: 0/0
 11177 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11178 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11179 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11180 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11181 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11182 ;;Total ram usage:       25 bytes
 11183 ;; Hardware stack levels used: 1
 11184 ;; Hardware stack levels required when called: 1
 11185 ;; This function calls:
 11186 ;;		Nothing
 11187 ;; This function is called by:
 11188 ;;		_detect_color
 11189 ;;		_detect_wall
 11190 ;;		_roundf
 11191 ;; This function uses a non-reentrant model
 11192 ;;
 11193                           
 11194                           	psect	text52
 11195  001EA4                     __ptext52:
 11196                           	callstack 0
 11197  001EA4                     ___flmul:
 11198                           	callstack 25
 11199  001EA4  5012               	movf	(___flmul@b+3)^0,w,c
 11200  001EA6  0B80               	andlw	128
 11201  001EA8  6E1B               	movwf	___flmul@sign^0,c
 11202  001EAA  5012               	movf	(___flmul@b+3)^0,w,c
 11203  001EAC  2412               	addwf	(___flmul@b+3)^0,w,c
 11204  001EAE  6E21               	movwf	___flmul@bexp^0,c
 11205  001EB0  AE11               	btfss	(___flmul@b+2)^0,7,c
 11206  001EB2  EF5D  F00F         	goto	u3941
 11207  001EB6  EF5F  F00F         	goto	u3940
 11208  001EBA                     u3941:
 11209  001EBA  EF60  F00F         	goto	l3952
 11210  001EBE                     u3940:
 11211  001EBE  8021               	bsf	___flmul@bexp^0,0,c
 11212  001EC0                     l3952:
 11213  001EC0  5021               	movf	___flmul@bexp^0,w,c
 11214  001EC2  B4D8               	btfsc	status,2,c
 11215  001EC4  EF66  F00F         	goto	u3951
 11216  001EC8  EF68  F00F         	goto	u3950
 11217  001ECC                     u3951:
 11218  001ECC  EF7B  F00F         	goto	l3960
 11219  001ED0                     u3950:
 11220  001ED0  2821               	incf	___flmul@bexp^0,w,c
 11221  001ED2  A4D8               	btfss	status,2,c
 11222  001ED4  EF6E  F00F         	goto	u3961
 11223  001ED8  EF70  F00F         	goto	u3960
 11224  001EDC                     u3961:
 11225  001EDC  EF78  F00F         	goto	l3958
 11226  001EE0                     u3960:
 11227  001EE0  0E00               	movlw	0
 11228  001EE2  6E0F               	movwf	___flmul@b^0,c
 11229  001EE4  0E00               	movlw	0
 11230  001EE6  6E10               	movwf	(___flmul@b+1)^0,c
 11231  001EE8  0E00               	movlw	0
 11232  001EEA  6E11               	movwf	(___flmul@b+2)^0,c
 11233  001EEC  0E00               	movlw	0
 11234  001EEE  6E12               	movwf	(___flmul@b+3)^0,c
 11235  001EF0                     l3958:
 11236  001EF0  8E11               	bsf	(___flmul@b+2)^0,7,c
 11237  001EF2  EF83  F00F         	goto	l3962
 11238  001EF6                     l3960:
 11239  001EF6  0E00               	movlw	0
 11240  001EF8  6E0F               	movwf	___flmul@b^0,c
 11241  001EFA  0E00               	movlw	0
 11242  001EFC  6E10               	movwf	(___flmul@b+1)^0,c
 11243  001EFE  0E00               	movlw	0
 11244  001F00  6E11               	movwf	(___flmul@b+2)^0,c
 11245  001F02  0E00               	movlw	0
 11246  001F04  6E12               	movwf	(___flmul@b+3)^0,c
 11247  001F06                     l3962:
 11248  001F06  5016               	movf	(___flmul@a+3)^0,w,c
 11249  001F08  0B80               	andlw	128
 11250  001F0A  1A1B               	xorwf	___flmul@sign^0,f,c
 11251  001F0C  5016               	movf	(___flmul@a+3)^0,w,c
 11252  001F0E  2416               	addwf	(___flmul@a+3)^0,w,c
 11253  001F10  6E20               	movwf	___flmul@aexp^0,c
 11254  001F12  AE15               	btfss	(___flmul@a+2)^0,7,c
 11255  001F14  EF8E  F00F         	goto	u3971
 11256  001F18  EF90  F00F         	goto	u3970
 11257  001F1C                     u3971:
 11258  001F1C  EF91  F00F         	goto	l3970
 11259  001F20                     u3970:
 11260  001F20  8020               	bsf	___flmul@aexp^0,0,c
 11261  001F22                     l3970:
 11262  001F22  5020               	movf	___flmul@aexp^0,w,c
 11263  001F24  B4D8               	btfsc	status,2,c
 11264  001F26  EF97  F00F         	goto	u3981
 11265  001F2A  EF99  F00F         	goto	u3980
 11266  001F2E                     u3981:
 11267  001F2E  EFAC  F00F         	goto	l3978
 11268  001F32                     u3980:
 11269  001F32  2820               	incf	___flmul@aexp^0,w,c
 11270  001F34  A4D8               	btfss	status,2,c
 11271  001F36  EF9F  F00F         	goto	u3991
 11272  001F3A  EFA1  F00F         	goto	u3990
 11273  001F3E                     u3991:
 11274  001F3E  EFA9  F00F         	goto	l3976
 11275  001F42                     u3990:
 11276  001F42  0E00               	movlw	0
 11277  001F44  6E13               	movwf	___flmul@a^0,c
 11278  001F46  0E00               	movlw	0
 11279  001F48  6E14               	movwf	(___flmul@a+1)^0,c
 11280  001F4A  0E00               	movlw	0
 11281  001F4C  6E15               	movwf	(___flmul@a+2)^0,c
 11282  001F4E  0E00               	movlw	0
 11283  001F50  6E16               	movwf	(___flmul@a+3)^0,c
 11284  001F52                     l3976:
 11285  001F52  8E15               	bsf	(___flmul@a+2)^0,7,c
 11286  001F54  EFB4  F00F         	goto	l1226
 11287  001F58                     l3978:
 11288  001F58  0E00               	movlw	0
 11289  001F5A  6E13               	movwf	___flmul@a^0,c
 11290  001F5C  0E00               	movlw	0
 11291  001F5E  6E14               	movwf	(___flmul@a+1)^0,c
 11292  001F60  0E00               	movlw	0
 11293  001F62  6E15               	movwf	(___flmul@a+2)^0,c
 11294  001F64  0E00               	movlw	0
 11295  001F66  6E16               	movwf	(___flmul@a+3)^0,c
 11296  001F68                     l1226:
 11297  001F68  5020               	movf	___flmul@aexp^0,w,c
 11298  001F6A  B4D8               	btfsc	status,2,c
 11299  001F6C  EFBA  F00F         	goto	u4001
 11300  001F70  EFBC  F00F         	goto	u4000
 11301  001F74                     u4001:
 11302  001F74  EFC4  F00F         	goto	l3982
 11303  001F78                     u4000:
 11304  001F78  5021               	movf	___flmul@bexp^0,w,c
 11305  001F7A  A4D8               	btfss	status,2,c
 11306  001F7C  EFC2  F00F         	goto	u4011
 11307  001F80  EFC4  F00F         	goto	u4010
 11308  001F84                     u4011:
 11309  001F84  EFCE  F00F         	goto	l3986
 11310  001F88                     u4010:
 11311  001F88                     l3982:
 11312  001F88  0E00               	movlw	0
 11313  001F8A  6E0F               	movwf	?___flmul^0,c
 11314  001F8C  0E00               	movlw	0
 11315  001F8E  6E10               	movwf	(?___flmul+1)^0,c
 11316  001F90  0E00               	movlw	0
 11317  001F92  6E11               	movwf	(?___flmul+2)^0,c
 11318  001F94  0E00               	movlw	0
 11319  001F96  6E12               	movwf	(?___flmul+3)^0,c
 11320  001F98  EF66  F011         	goto	l1230
 11321  001F9C                     l3986:
 11322  001F9C  5015               	movf	(___flmul@a+2)^0,w,c
 11323  001F9E  020F               	mulwf	___flmul@b^0,c
 11324  001FA0  CFF3 F026          	movff	prodl,___flmul@temp
 11325  001FA4  CFF4 F027          	movff	prodh,___flmul@temp+1
 11326  001FA8  5026               	movf	___flmul@temp^0,w,c
 11327  001FAA  6E1C               	movwf	___flmul@grs^0,c
 11328  001FAC  6A1D               	clrf	(___flmul@grs+1)^0,c
 11329  001FAE  6A1E               	clrf	(___flmul@grs+2)^0,c
 11330  001FB0  6A1F               	clrf	(___flmul@grs+3)^0,c
 11331  001FB2  5027               	movf	(___flmul@temp+1)^0,w,c
 11332  001FB4  6E22               	movwf	___flmul@prod^0,c
 11333  001FB6  6A23               	clrf	(___flmul@prod+1)^0,c
 11334  001FB8  6A24               	clrf	(___flmul@prod+2)^0,c
 11335  001FBA  6A25               	clrf	(___flmul@prod+3)^0,c
 11336  001FBC  5014               	movf	(___flmul@a+1)^0,w,c
 11337  001FBE  0210               	mulwf	(___flmul@b+1)^0,c
 11338  001FC0  CFF3 F026          	movff	prodl,___flmul@temp
 11339  001FC4  CFF4 F027          	movff	prodh,___flmul@temp+1
 11340  001FC8  5026               	movf	___flmul@temp^0,w,c
 11341  001FCA  261C               	addwf	___flmul@grs^0,f,c
 11342  001FCC  0E00               	movlw	0
 11343  001FCE  221D               	addwfc	(___flmul@grs+1)^0,f,c
 11344  001FD0  221E               	addwfc	(___flmul@grs+2)^0,f,c
 11345  001FD2  221F               	addwfc	(___flmul@grs+3)^0,f,c
 11346  001FD4  5027               	movf	(___flmul@temp+1)^0,w,c
 11347  001FD6  2622               	addwf	___flmul@prod^0,f,c
 11348  001FD8  0E00               	movlw	0
 11349  001FDA  2223               	addwfc	(___flmul@prod+1)^0,f,c
 11350  001FDC  2224               	addwfc	(___flmul@prod+2)^0,f,c
 11351  001FDE  2225               	addwfc	(___flmul@prod+3)^0,f,c
 11352  001FE0  5013               	movf	___flmul@a^0,w,c
 11353  001FE2  0211               	mulwf	(___flmul@b+2)^0,c
 11354  001FE4  CFF3 F026          	movff	prodl,___flmul@temp
 11355  001FE8  CFF4 F027          	movff	prodh,___flmul@temp+1
 11356  001FEC  5026               	movf	___flmul@temp^0,w,c
 11357  001FEE  261C               	addwf	___flmul@grs^0,f,c
 11358  001FF0  0E00               	movlw	0
 11359  001FF2  221D               	addwfc	(___flmul@grs+1)^0,f,c
 11360  001FF4  221E               	addwfc	(___flmul@grs+2)^0,f,c
 11361  001FF6  221F               	addwfc	(___flmul@grs+3)^0,f,c
 11362  001FF8  5027               	movf	(___flmul@temp+1)^0,w,c
 11363  001FFA  2622               	addwf	___flmul@prod^0,f,c
 11364  001FFC  0E00               	movlw	0
 11365  001FFE  2223               	addwfc	(___flmul@prod+1)^0,f,c
 11366  002000  2224               	addwfc	(___flmul@prod+2)^0,f,c
 11367  002002  2225               	addwfc	(___flmul@prod+3)^0,f,c
 11368  002004  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
 11369  002008  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
 11370  00200C  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
 11371  002010  6A1C               	clrf	___flmul@grs^0,c
 11372  002012  5013               	movf	___flmul@a^0,w,c
 11373  002014  0210               	mulwf	(___flmul@b+1)^0,c
 11374  002016  CFF3 F026          	movff	prodl,___flmul@temp
 11375  00201A  CFF4 F027          	movff	prodh,___flmul@temp+1
 11376  00201E  5026               	movf	___flmul@temp^0,w,c
 11377  002020  261C               	addwf	___flmul@grs^0,f,c
 11378  002022  5027               	movf	(___flmul@temp+1)^0,w,c
 11379  002024  221D               	addwfc	(___flmul@grs+1)^0,f,c
 11380  002026  0E00               	movlw	0
 11381  002028  221E               	addwfc	(___flmul@grs+2)^0,f,c
 11382  00202A  0E00               	movlw	0
 11383  00202C  221F               	addwfc	(___flmul@grs+3)^0,f,c
 11384  00202E  5014               	movf	(___flmul@a+1)^0,w,c
 11385  002030  020F               	mulwf	___flmul@b^0,c
 11386  002032  CFF3 F026          	movff	prodl,___flmul@temp
 11387  002036  CFF4 F027          	movff	prodh,___flmul@temp+1
 11388  00203A  5026               	movf	___flmul@temp^0,w,c
 11389  00203C  261C               	addwf	___flmul@grs^0,f,c
 11390  00203E  5027               	movf	(___flmul@temp+1)^0,w,c
 11391  002040  221D               	addwfc	(___flmul@grs+1)^0,f,c
 11392  002042  0E00               	movlw	0
 11393  002044  221E               	addwfc	(___flmul@grs+2)^0,f,c
 11394  002046  0E00               	movlw	0
 11395  002048  221F               	addwfc	(___flmul@grs+3)^0,f,c
 11396  00204A  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
 11397  00204E  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
 11398  002052  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
 11399  002056  6A1C               	clrf	___flmul@grs^0,c
 11400  002058  5013               	movf	___flmul@a^0,w,c
 11401  00205A  020F               	mulwf	___flmul@b^0,c
 11402  00205C  CFF3 F026          	movff	prodl,___flmul@temp
 11403  002060  CFF4 F027          	movff	prodh,___flmul@temp+1
 11404  002064  5026               	movf	___flmul@temp^0,w,c
 11405  002066  261C               	addwf	___flmul@grs^0,f,c
 11406  002068  5027               	movf	(___flmul@temp+1)^0,w,c
 11407  00206A  221D               	addwfc	(___flmul@grs+1)^0,f,c
 11408  00206C  0E00               	movlw	0
 11409  00206E  221E               	addwfc	(___flmul@grs+2)^0,f,c
 11410  002070  0E00               	movlw	0
 11411  002072  221F               	addwfc	(___flmul@grs+3)^0,f,c
 11412  002074  5015               	movf	(___flmul@a+2)^0,w,c
 11413  002076  0210               	mulwf	(___flmul@b+1)^0,c
 11414  002078  CFF3 F026          	movff	prodl,___flmul@temp
 11415  00207C  CFF4 F027          	movff	prodh,___flmul@temp+1
 11416  002080  5026               	movf	___flmul@temp^0,w,c
 11417  002082  2622               	addwf	___flmul@prod^0,f,c
 11418  002084  5027               	movf	(___flmul@temp+1)^0,w,c
 11419  002086  2223               	addwfc	(___flmul@prod+1)^0,f,c
 11420  002088  0E00               	movlw	0
 11421  00208A  2224               	addwfc	(___flmul@prod+2)^0,f,c
 11422  00208C  0E00               	movlw	0
 11423  00208E  2225               	addwfc	(___flmul@prod+3)^0,f,c
 11424  002090  5014               	movf	(___flmul@a+1)^0,w,c
 11425  002092  0211               	mulwf	(___flmul@b+2)^0,c
 11426  002094  CFF3 F026          	movff	prodl,___flmul@temp
 11427  002098  CFF4 F027          	movff	prodh,___flmul@temp+1
 11428  00209C  5026               	movf	___flmul@temp^0,w,c
 11429  00209E  2622               	addwf	___flmul@prod^0,f,c
 11430  0020A0  5027               	movf	(___flmul@temp+1)^0,w,c
 11431  0020A2  2223               	addwfc	(___flmul@prod+1)^0,f,c
 11432  0020A4  0E00               	movlw	0
 11433  0020A6  2224               	addwfc	(___flmul@prod+2)^0,f,c
 11434  0020A8  0E00               	movlw	0
 11435  0020AA  2225               	addwfc	(___flmul@prod+3)^0,f,c
 11436  0020AC  5015               	movf	(___flmul@a+2)^0,w,c
 11437  0020AE  0211               	mulwf	(___flmul@b+2)^0,c
 11438  0020B0  CFF3 F026          	movff	prodl,___flmul@temp
 11439  0020B4  CFF4 F027          	movff	prodh,___flmul@temp+1
 11440  0020B8  5026               	movf	___flmul@temp^0,w,c
 11441  0020BA  6E17               	movwf	??___flmul^0,c
 11442  0020BC  5027               	movf	(___flmul@temp+1)^0,w,c
 11443  0020BE  6E18               	movwf	(??___flmul+1)^0,c
 11444  0020C0  6A19               	clrf	(??___flmul+2)^0,c
 11445  0020C2  6A1A               	clrf	(??___flmul+3)^0,c
 11446  0020C4  C019  F01A         	movff	??___flmul+2,??___flmul+3
 11447  0020C8  C018  F019         	movff	??___flmul+1,??___flmul+2
 11448  0020CC  C017  F018         	movff	??___flmul,??___flmul+1
 11449  0020D0  6A17               	clrf	??___flmul^0,c
 11450  0020D2  5017               	movf	??___flmul^0,w,c
 11451  0020D4  2622               	addwf	___flmul@prod^0,f,c
 11452  0020D6  5018               	movf	(??___flmul+1)^0,w,c
 11453  0020D8  2223               	addwfc	(___flmul@prod+1)^0,f,c
 11454  0020DA  5019               	movf	(??___flmul+2)^0,w,c
 11455  0020DC  2224               	addwfc	(___flmul@prod+2)^0,f,c
 11456  0020DE  501A               	movf	(??___flmul+3)^0,w,c
 11457  0020E0  2225               	addwfc	(___flmul@prod+3)^0,f,c
 11458  0020E2  C01C  F017         	movff	___flmul@grs,??___flmul
 11459  0020E6  C01D  F018         	movff	___flmul@grs+1,??___flmul+1
 11460  0020EA  C01E  F019         	movff	___flmul@grs+2,??___flmul+2
 11461  0020EE  C01F  F01A         	movff	___flmul@grs+3,??___flmul+3
 11462  0020F2  0E19               	movlw	25
 11463  0020F4  EF81  F010         	goto	u4020
 11464  0020F8                     u4025:
 11465  0020F8  90D8               	bcf	status,0,c
 11466  0020FA  321A               	rrcf	(??___flmul+3)^0,f,c
 11467  0020FC  3219               	rrcf	(??___flmul+2)^0,f,c
 11468  0020FE  3218               	rrcf	(??___flmul+1)^0,f,c
 11469  002100  3217               	rrcf	??___flmul^0,f,c
 11470  002102                     u4020:
 11471  002102  2EE8               	decfsz	wreg,f,c
 11472  002104  EF7C  F010         	goto	u4025
 11473  002108  5017               	movf	??___flmul^0,w,c
 11474  00210A  2622               	addwf	___flmul@prod^0,f,c
 11475  00210C  5018               	movf	(??___flmul+1)^0,w,c
 11476  00210E  2223               	addwfc	(___flmul@prod+1)^0,f,c
 11477  002110  5019               	movf	(??___flmul+2)^0,w,c
 11478  002112  2224               	addwfc	(___flmul@prod+2)^0,f,c
 11479  002114  501A               	movf	(??___flmul+3)^0,w,c
 11480  002116  2225               	addwfc	(___flmul@prod+3)^0,f,c
 11481  002118  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
 11482  00211C  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
 11483  002120  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
 11484  002124  6A1C               	clrf	___flmul@grs^0,c
 11485  002126  5020               	movf	___flmul@aexp^0,w,c
 11486  002128  C021  F017         	movff	___flmul@bexp,??___flmul
 11487  00212C  6A18               	clrf	(??___flmul+1)^0,c
 11488  00212E  2617               	addwf	??___flmul^0,f,c
 11489  002130  0E00               	movlw	0
 11490  002132  2218               	addwfc	(??___flmul+1)^0,f,c
 11491  002134  0E82               	movlw	130
 11492  002136  2417               	addwf	??___flmul^0,w,c
 11493  002138  6E26               	movwf	___flmul@temp^0,c
 11494  00213A  0EFF               	movlw	255
 11495  00213C  2018               	addwfc	(??___flmul+1)^0,w,c
 11496  00213E  6E27               	movwf	(___flmul@temp+1)^0,c
 11497  002140  EFB7  F010         	goto	l4034
 11498  002144                     l4028:
 11499  002144  90D8               	bcf	status,0,c
 11500  002146  3622               	rlcf	___flmul@prod^0,f,c
 11501  002148  3623               	rlcf	(___flmul@prod+1)^0,f,c
 11502  00214A  3624               	rlcf	(___flmul@prod+2)^0,f,c
 11503  00214C  3625               	rlcf	(___flmul@prod+3)^0,f,c
 11504  00214E  AE1F               	btfss	(___flmul@grs+3)^0,7,c
 11505  002150  EFAC  F010         	goto	u4031
 11506  002154  EFAE  F010         	goto	u4030
 11507  002158                     u4031:
 11508  002158  EFAF  F010         	goto	l1233
 11509  00215C                     u4030:
 11510  00215C  8022               	bsf	___flmul@prod^0,0,c
 11511  00215E                     l1233:
 11512  00215E  90D8               	bcf	status,0,c
 11513  002160  361C               	rlcf	___flmul@grs^0,f,c
 11514  002162  361D               	rlcf	(___flmul@grs+1)^0,f,c
 11515  002164  361E               	rlcf	(___flmul@grs+2)^0,f,c
 11516  002166  361F               	rlcf	(___flmul@grs+3)^0,f,c
 11517  002168  0626               	decf	___flmul@temp^0,f,c
 11518  00216A  A0D8               	btfss	status,0,c
 11519  00216C  0627               	decf	(___flmul@temp+1)^0,f,c
 11520  00216E                     l4034:
 11521  00216E  AE24               	btfss	(___flmul@prod+2)^0,7,c
 11522  002170  EFBC  F010         	goto	u4041
 11523  002174  EFBE  F010         	goto	u4040
 11524  002178                     u4041:
 11525  002178  EFA2  F010         	goto	l4028
 11526  00217C                     u4040:
 11527  00217C  0E00               	movlw	0
 11528  00217E  6E20               	movwf	___flmul@aexp^0,c
 11529  002180  AE1F               	btfss	(___flmul@grs+3)^0,7,c
 11530  002182  EFC5  F010         	goto	u4051
 11531  002186  EFC7  F010         	goto	u4050
 11532  00218A                     u4051:
 11533  00218A  EFEB  F010         	goto	l1235
 11534  00218E                     u4050:
 11535  00218E  0EFF               	movlw	255
 11536  002190  141C               	andwf	___flmul@grs^0,w,c
 11537  002192  6E17               	movwf	??___flmul^0,c
 11538  002194  0EFF               	movlw	255
 11539  002196  141D               	andwf	(___flmul@grs+1)^0,w,c
 11540  002198  6E18               	movwf	(??___flmul+1)^0,c
 11541  00219A  0EFF               	movlw	255
 11542  00219C  141E               	andwf	(___flmul@grs+2)^0,w,c
 11543  00219E  6E19               	movwf	(??___flmul+2)^0,c
 11544  0021A0  0E7F               	movlw	127
 11545  0021A2  141F               	andwf	(___flmul@grs+3)^0,w,c
 11546  0021A4  6E1A               	movwf	(??___flmul+3)^0,c
 11547  0021A6  5017               	movf	??___flmul^0,w,c
 11548  0021A8  1018               	iorwf	(??___flmul+1)^0,w,c
 11549  0021AA  1019               	iorwf	(??___flmul+2)^0,w,c
 11550  0021AC  101A               	iorwf	(??___flmul+3)^0,w,c
 11551  0021AE  B4D8               	btfsc	status,2,c
 11552  0021B0  EFDC  F010         	goto	u4061
 11553  0021B4  EFDE  F010         	goto	u4060
 11554  0021B8                     u4061:
 11555  0021B8  EFE2  F010         	goto	l1236
 11556  0021BC                     u4060:
 11557  0021BC                     l4042:
 11558  0021BC  0E01               	movlw	1
 11559  0021BE  6E20               	movwf	___flmul@aexp^0,c
 11560  0021C0  EFEB  F010         	goto	l1235
 11561  0021C4                     l1236:
 11562  0021C4  A022               	btfss	___flmul@prod^0,0,c
 11563  0021C6  EFE7  F010         	goto	u4071
 11564  0021CA  EFE9  F010         	goto	u4070
 11565  0021CE                     u4071:
 11566  0021CE  EFEB  F010         	goto	l1235
 11567  0021D2                     u4070:
 11568  0021D2  EFDE  F010         	goto	l4042
 11569  0021D6                     l1235:
 11570  0021D6  5020               	movf	___flmul@aexp^0,w,c
 11571  0021D8  B4D8               	btfsc	status,2,c
 11572  0021DA  EFF1  F010         	goto	u4081
 11573  0021DE  EFF3  F010         	goto	u4080
 11574  0021E2                     u4081:
 11575  0021E2  EF17  F011         	goto	l4054
 11576  0021E6                     u4080:
 11577  0021E6  0E01               	movlw	1
 11578  0021E8  2622               	addwf	___flmul@prod^0,f,c
 11579  0021EA  0E00               	movlw	0
 11580  0021EC  2223               	addwfc	(___flmul@prod+1)^0,f,c
 11581  0021EE  2224               	addwfc	(___flmul@prod+2)^0,f,c
 11582  0021F0  2225               	addwfc	(___flmul@prod+3)^0,f,c
 11583  0021F2  A025               	btfss	(___flmul@prod+3)^0,0,c
 11584  0021F4  EFFE  F010         	goto	u4091
 11585  0021F8  EF00  F011         	goto	u4090
 11586  0021FC                     u4091:
 11587  0021FC  EF17  F011         	goto	l4054
 11588  002200                     u4090:
 11589  002200  C022  F017         	movff	___flmul@prod,??___flmul
 11590  002204  C023  F018         	movff	___flmul@prod+1,??___flmul+1
 11591  002208  C024  F019         	movff	___flmul@prod+2,??___flmul+2
 11592  00220C  C025  F01A         	movff	___flmul@prod+3,??___flmul+3
 11593  002210  341A               	rlcf	(??___flmul+3)^0,w,c
 11594  002212  321A               	rrcf	(??___flmul+3)^0,f,c
 11595  002214  3219               	rrcf	(??___flmul+2)^0,f,c
 11596  002216  3218               	rrcf	(??___flmul+1)^0,f,c
 11597  002218  3217               	rrcf	??___flmul^0,f,c
 11598  00221A  C017  F022         	movff	??___flmul,___flmul@prod
 11599  00221E  C018  F023         	movff	??___flmul+1,___flmul@prod+1
 11600  002222  C019  F024         	movff	??___flmul+2,___flmul@prod+2
 11601  002226  C01A  F025         	movff	??___flmul+3,___flmul@prod+3
 11602  00222A  4A26               	infsnz	___flmul@temp^0,f,c
 11603  00222C  2A27               	incf	(___flmul@temp+1)^0,f,c
 11604  00222E                     l4054:
 11605  00222E  BE27               	btfsc	(___flmul@temp+1)^0,7,c
 11606  002230  EF22  F011         	goto	u4101
 11607  002234  5027               	movf	(___flmul@temp+1)^0,w,c
 11608  002236  E108               	bnz	u4100
 11609  002238  2826               	incf	___flmul@temp^0,w,c
 11610  00223A  A0D8               	btfss	status,0,c
 11611  00223C  EF22  F011         	goto	u4101
 11612  002240  EF24  F011         	goto	u4100
 11613  002244                     u4101:
 11614  002244  EF2E  F011         	goto	l4058
 11615  002248                     u4100:
 11616  002248  0E00               	movlw	0
 11617  00224A  6E22               	movwf	___flmul@prod^0,c
 11618  00224C  0E00               	movlw	0
 11619  00224E  6E23               	movwf	(___flmul@prod+1)^0,c
 11620  002250  0E80               	movlw	128
 11621  002252  6E24               	movwf	(___flmul@prod+2)^0,c
 11622  002254  0E7F               	movlw	127
 11623  002256  6E25               	movwf	(___flmul@prod+3)^0,c
 11624  002258  EF5C  F011         	goto	l4070
 11625  00225C                     l4058:
 11626  00225C  BE27               	btfsc	(___flmul@temp+1)^0,7,c
 11627  00225E  EF3B  F011         	goto	u4110
 11628  002262  5027               	movf	(___flmul@temp+1)^0,w,c
 11629  002264  E106               	bnz	u4111
 11630  002266  0426               	decf	___flmul@temp^0,w,c
 11631  002268  B0D8               	btfsc	status,0,c
 11632  00226A  EF39  F011         	goto	u4111
 11633  00226E  EF3B  F011         	goto	u4110
 11634  002272                     u4111:
 11635  002272  EF47  F011         	goto	l1243
 11636  002276                     u4110:
 11637  002276  0E00               	movlw	0
 11638  002278  6E22               	movwf	___flmul@prod^0,c
 11639  00227A  0E00               	movlw	0
 11640  00227C  6E23               	movwf	(___flmul@prod+1)^0,c
 11641  00227E  0E00               	movlw	0
 11642  002280  6E24               	movwf	(___flmul@prod+2)^0,c
 11643  002282  0E00               	movlw	0
 11644  002284  6E25               	movwf	(___flmul@prod+3)^0,c
 11645  002286  0E00               	movlw	0
 11646  002288  6E1B               	movwf	___flmul@sign^0,c
 11647  00228A  EF5C  F011         	goto	l4070
 11648  00228E                     l1243:
 11649  00228E  C026  F021         	movff	___flmul@temp,___flmul@bexp
 11650  002292  0EFF               	movlw	255
 11651  002294  1622               	andwf	___flmul@prod^0,f,c
 11652  002296  0EFF               	movlw	255
 11653  002298  1623               	andwf	(___flmul@prod+1)^0,f,c
 11654  00229A  0E7F               	movlw	127
 11655  00229C  1624               	andwf	(___flmul@prod+2)^0,f,c
 11656  00229E  0E00               	movlw	0
 11657  0022A0  1625               	andwf	(___flmul@prod+3)^0,f,c
 11658  0022A2  A021               	btfss	___flmul@bexp^0,0,c
 11659  0022A4  EF56  F011         	goto	u4121
 11660  0022A8  EF58  F011         	goto	u4120
 11661  0022AC                     u4121:
 11662  0022AC  EF59  F011         	goto	l4068
 11663  0022B0                     u4120:
 11664  0022B0  8E24               	bsf	(___flmul@prod+2)^0,7,c
 11665  0022B2                     l4068:
 11666  0022B2  90D8               	bcf	status,0,c
 11667  0022B4  3021               	rrcf	___flmul@bexp^0,w,c
 11668  0022B6  6E25               	movwf	(___flmul@prod+3)^0,c
 11669  0022B8                     l4070:
 11670  0022B8  501B               	movf	___flmul@sign^0,w,c
 11671  0022BA  1225               	iorwf	(___flmul@prod+3)^0,f,c
 11672  0022BC  C022  F00F         	movff	___flmul@prod,?___flmul
 11673  0022C0  C023  F010         	movff	___flmul@prod+1,?___flmul+1
 11674  0022C4  C024  F011         	movff	___flmul@prod+2,?___flmul+2
 11675  0022C8  C025  F012         	movff	___flmul@prod+3,?___flmul+3
 11676  0022CC                     l1230:
 11677  0022CC  0012               	return		;funcret
 11678  0022CE                     __end_of___flmul:
 11679                           	callstack 0
 11680                           
 11681 ;; *************** function ___flge *****************
 11682 ;; Defined at:
 11683 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\flge.c"
 11684 ;; Parameters:    Size  Location     Type
 11685 ;;  ff1             4    0[COMRAM] unsigned char 
 11686 ;;  ff2             4    4[COMRAM] unsigned char 
 11687 ;; Auto vars:     Size  Location     Type
 11688 ;;		None
 11689 ;; Return value:  Size  Location     Type
 11690 ;;		None               void
 11691 ;; Registers used:
 11692 ;;		wreg, status,2, status,0
 11693 ;; Tracked objects:
 11694 ;;		On entry : 0/0
 11695 ;;		On exit  : 0/0
 11696 ;;		Unchanged: 0/0
 11697 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11698 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11699 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11700 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11701 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11702 ;;Total ram usage:       12 bytes
 11703 ;; Hardware stack levels used: 1
 11704 ;; Hardware stack levels required when called: 1
 11705 ;; This function calls:
 11706 ;;		Nothing
 11707 ;; This function is called by:
 11708 ;;		_roundf
 11709 ;; This function uses a non-reentrant model
 11710 ;;
 11711                           
 11712                           	psect	text53
 11713  004CE6                     __ptext53:
 11714                           	callstack 0
 11715  004CE6                     ___flge:
 11716                           	callstack 25
 11717  004CE6  0E00               	movlw	0
 11718  004CE8  1401               	andwf	___flge@ff1^0,w,c
 11719  004CEA  6E09               	movwf	??___flge^0,c
 11720  004CEC  0E00               	movlw	0
 11721  004CEE  1402               	andwf	(___flge@ff1+1)^0,w,c
 11722  004CF0  6E0A               	movwf	(??___flge+1)^0,c
 11723  004CF2  0E80               	movlw	128
 11724  004CF4  1403               	andwf	(___flge@ff1+2)^0,w,c
 11725  004CF6  6E0B               	movwf	(??___flge+2)^0,c
 11726  004CF8  0E7F               	movlw	127
 11727  004CFA  1404               	andwf	(___flge@ff1+3)^0,w,c
 11728  004CFC  6E0C               	movwf	(??___flge+3)^0,c
 11729  004CFE  5009               	movf	??___flge^0,w,c
 11730  004D00  100A               	iorwf	(??___flge+1)^0,w,c
 11731  004D02  100B               	iorwf	(??___flge+2)^0,w,c
 11732  004D04  100C               	iorwf	(??___flge+3)^0,w,c
 11733  004D06  A4D8               	btfss	status,2,c
 11734  004D08  EF88  F026         	goto	u4131
 11735  004D0C  EF8A  F026         	goto	u4130
 11736  004D10                     u4131:
 11737  004D10  EF92  F026         	goto	l4086
 11738  004D14                     u4130:
 11739  004D14  0E00               	movlw	0
 11740  004D16  6E01               	movwf	___flge@ff1^0,c
 11741  004D18  0E00               	movlw	0
 11742  004D1A  6E02               	movwf	(___flge@ff1+1)^0,c
 11743  004D1C  0E00               	movlw	0
 11744  004D1E  6E03               	movwf	(___flge@ff1+2)^0,c
 11745  004D20  0E00               	movlw	0
 11746  004D22  6E04               	movwf	(___flge@ff1+3)^0,c
 11747  004D24                     l4086:
 11748  004D24  0E00               	movlw	0
 11749  004D26  1405               	andwf	___flge@ff2^0,w,c
 11750  004D28  6E09               	movwf	??___flge^0,c
 11751  004D2A  0E00               	movlw	0
 11752  004D2C  1406               	andwf	(___flge@ff2+1)^0,w,c
 11753  004D2E  6E0A               	movwf	(??___flge+1)^0,c
 11754  004D30  0E80               	movlw	128
 11755  004D32  1407               	andwf	(___flge@ff2+2)^0,w,c
 11756  004D34  6E0B               	movwf	(??___flge+2)^0,c
 11757  004D36  0E7F               	movlw	127
 11758  004D38  1408               	andwf	(___flge@ff2+3)^0,w,c
 11759  004D3A  6E0C               	movwf	(??___flge+3)^0,c
 11760  004D3C  5009               	movf	??___flge^0,w,c
 11761  004D3E  100A               	iorwf	(??___flge+1)^0,w,c
 11762  004D40  100B               	iorwf	(??___flge+2)^0,w,c
 11763  004D42  100C               	iorwf	(??___flge+3)^0,w,c
 11764  004D44  A4D8               	btfss	status,2,c
 11765  004D46  EFA7  F026         	goto	u4141
 11766  004D4A  EFA9  F026         	goto	u4140
 11767  004D4E                     u4141:
 11768  004D4E  EFB1  F026         	goto	l4090
 11769  004D52                     u4140:
 11770  004D52  0E00               	movlw	0
 11771  004D54  6E05               	movwf	___flge@ff2^0,c
 11772  004D56  0E00               	movlw	0
 11773  004D58  6E06               	movwf	(___flge@ff2+1)^0,c
 11774  004D5A  0E00               	movlw	0
 11775  004D5C  6E07               	movwf	(___flge@ff2+2)^0,c
 11776  004D5E  0E00               	movlw	0
 11777  004D60  6E08               	movwf	(___flge@ff2+3)^0,c
 11778  004D62                     l4090:
 11779  004D62  AE04               	btfss	(___flge@ff1+3)^0,7,c
 11780  004D64  EFB6  F026         	goto	u4151
 11781  004D68  EFB8  F026         	goto	u4150
 11782  004D6C                     u4151:
 11783  004D6C  EFC1  F026         	goto	l4094
 11784  004D70                     u4150:
 11785  004D70  6C01               	negf	___flge@ff1^0,c
 11786  004D72  1E02               	comf	(___flge@ff1+1)^0,f,c
 11787  004D74  B0D8               	btfsc	status,0,c
 11788  004D76  2A02               	incf	(___flge@ff1+1)^0,f,c
 11789  004D78  1E03               	comf	(___flge@ff1+2)^0,f,c
 11790  004D7A  B0D8               	btfsc	status,0,c
 11791  004D7C  2A03               	incf	(___flge@ff1+2)^0,f,c
 11792  004D7E  0E80               	movlw	128
 11793  004D80  5604               	subfwb	(___flge@ff1+3)^0,f,c
 11794  004D82                     l4094:
 11795  004D82  AE08               	btfss	(___flge@ff2+3)^0,7,c
 11796  004D84  EFC6  F026         	goto	u4161
 11797  004D88  EFC8  F026         	goto	u4160
 11798  004D8C                     u4161:
 11799  004D8C  EFD1  F026         	goto	l877
 11800  004D90                     u4160:
 11801  004D90  6C05               	negf	___flge@ff2^0,c
 11802  004D92  1E06               	comf	(___flge@ff2+1)^0,f,c
 11803  004D94  B0D8               	btfsc	status,0,c
 11804  004D96  2A06               	incf	(___flge@ff2+1)^0,f,c
 11805  004D98  1E07               	comf	(___flge@ff2+2)^0,f,c
 11806  004D9A  B0D8               	btfsc	status,0,c
 11807  004D9C  2A07               	incf	(___flge@ff2+2)^0,f,c
 11808  004D9E  0E80               	movlw	128
 11809  004DA0  5608               	subfwb	(___flge@ff2+3)^0,f,c
 11810  004DA2                     l877:
 11811  004DA2  0E00               	movlw	0
 11812  004DA4  1A01               	xorwf	___flge@ff1^0,f,c
 11813  004DA6  0E00               	movlw	0
 11814  004DA8  1A02               	xorwf	(___flge@ff1+1)^0,f,c
 11815  004DAA  0E00               	movlw	0
 11816  004DAC  1A03               	xorwf	(___flge@ff1+2)^0,f,c
 11817  004DAE  0E80               	movlw	128
 11818  004DB0  1A04               	xorwf	(___flge@ff1+3)^0,f,c
 11819  004DB2  0E00               	movlw	0
 11820  004DB4  1A05               	xorwf	___flge@ff2^0,f,c
 11821  004DB6  0E00               	movlw	0
 11822  004DB8  1A06               	xorwf	(___flge@ff2+1)^0,f,c
 11823  004DBA  0E00               	movlw	0
 11824  004DBC  1A07               	xorwf	(___flge@ff2+2)^0,f,c
 11825  004DBE  0E80               	movlw	128
 11826  004DC0  1A08               	xorwf	(___flge@ff2+3)^0,f,c
 11827  004DC2  5005               	movf	___flge@ff2^0,w,c
 11828  004DC4  5C01               	subwf	___flge@ff1^0,w,c
 11829  004DC6  5006               	movf	(___flge@ff2+1)^0,w,c
 11830  004DC8  5802               	subwfb	(___flge@ff1+1)^0,w,c
 11831  004DCA  5007               	movf	(___flge@ff2+2)^0,w,c
 11832  004DCC  5803               	subwfb	(___flge@ff1+2)^0,w,c
 11833  004DCE  5008               	movf	(___flge@ff2+3)^0,w,c
 11834  004DD0  5804               	subwfb	(___flge@ff1+3)^0,w,c
 11835  004DD2  B0D8               	btfsc	status,0,c
 11836  004DD4  EFEE  F026         	goto	u4171
 11837  004DD8  EFF0  F026         	goto	u4170
 11838  004DDC                     u4171:
 11839  004DDC  EFF3  F026         	goto	l4100
 11840  004DE0                     u4170:
 11841  004DE0  90D8               	bcf	status,0,c
 11842  004DE2  EFF4  F026         	goto	l882
 11843  004DE6                     l4100:
 11844  004DE6  80D8               	bsf	status,0,c
 11845  004DE8                     l882:
 11846  004DE8  0012               	return		;funcret
 11847  004DEA                     __end_of___flge:
 11848                           	callstack 0
 11849                           
 11850 ;; *************** function ___fltol *****************
 11851 ;; Defined at:
 11852 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\fltol.c"
 11853 ;; Parameters:    Size  Location     Type
 11854 ;;  f1              4   65[COMRAM] unsigned char 
 11855 ;; Auto vars:     Size  Location     Type
 11856 ;;  exp1            1   74[COMRAM] unsigned char 
 11857 ;;  sign1           1   73[COMRAM] unsigned char 
 11858 ;; Return value:  Size  Location     Type
 11859 ;;                  4   65[COMRAM] long 
 11860 ;; Registers used:
 11861 ;;		wreg, status,2, status,0
 11862 ;; Tracked objects:
 11863 ;;		On entry : 0/0
 11864 ;;		On exit  : 0/0
 11865 ;;		Unchanged: 0/0
 11866 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11867 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11868 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11869 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11870 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11871 ;;Total ram usage:       10 bytes
 11872 ;; Hardware stack levels used: 1
 11873 ;; Hardware stack levels required when called: 1
 11874 ;; This function calls:
 11875 ;;		Nothing
 11876 ;; This function is called by:
 11877 ;;		_lroundf
 11878 ;; This function uses a non-reentrant model
 11879 ;;
 11880                           
 11881                           	psect	text54
 11882  004BE0                     __ptext54:
 11883                           	callstack 0
 11884  004BE0                     ___fltol:
 11885                           	callstack 26
 11886  004BE0  3444               	rlcf	(___fltol@f1+2)^0,w,c
 11887  004BE2  3445               	rlcf	(___fltol@f1+3)^0,w,c
 11888  004BE4  6E4B               	movwf	___fltol@exp1^0,c
 11889  004BE6  504B               	movf	___fltol@exp1^0,w,c
 11890  004BE8  A4D8               	btfss	status,2,c
 11891  004BEA  EFF9  F025         	goto	u4321
 11892  004BEE  EFFB  F025         	goto	u4320
 11893  004BF2                     u4321:
 11894  004BF2  EF05  F026         	goto	l4242
 11895  004BF6                     u4320:
 11896  004BF6                     l4238:
 11897  004BF6  0E00               	movlw	0
 11898  004BF8  6E42               	movwf	?___fltol^0,c
 11899  004BFA  0E00               	movlw	0
 11900  004BFC  6E43               	movwf	(?___fltol+1)^0,c
 11901  004BFE  0E00               	movlw	0
 11902  004C00  6E44               	movwf	(?___fltol+2)^0,c
 11903  004C02  0E00               	movlw	0
 11904  004C04  6E45               	movwf	(?___fltol+3)^0,c
 11905  004C06  EF72  F026         	goto	l909
 11906  004C0A                     l4242:
 11907  004C0A  C042  F046         	movff	___fltol@f1,??___fltol
 11908  004C0E  C043  F047         	movff	___fltol@f1+1,??___fltol+1
 11909  004C12  C044  F048         	movff	___fltol@f1+2,??___fltol+2
 11910  004C16  C045  F049         	movff	___fltol@f1+3,??___fltol+3
 11911  004C1A  0E20               	movlw	32
 11912  004C1C  EF15  F026         	goto	u4330
 11913  004C20                     u4335:
 11914  004C20  90D8               	bcf	status,0,c
 11915  004C22  3249               	rrcf	(??___fltol+3)^0,f,c
 11916  004C24  3248               	rrcf	(??___fltol+2)^0,f,c
 11917  004C26  3247               	rrcf	(??___fltol+1)^0,f,c
 11918  004C28  3246               	rrcf	??___fltol^0,f,c
 11919  004C2A                     u4330:
 11920  004C2A  2EE8               	decfsz	wreg,f,c
 11921  004C2C  EF10  F026         	goto	u4335
 11922  004C30  5046               	movf	??___fltol^0,w,c
 11923  004C32  6E4A               	movwf	___fltol@sign1^0,c
 11924  004C34  8E44               	bsf	(___fltol@f1+2)^0,7,c
 11925  004C36  0EFF               	movlw	255
 11926  004C38  1642               	andwf	___fltol@f1^0,f,c
 11927  004C3A  0EFF               	movlw	255
 11928  004C3C  1643               	andwf	(___fltol@f1+1)^0,f,c
 11929  004C3E  0EFF               	movlw	255
 11930  004C40  1644               	andwf	(___fltol@f1+2)^0,f,c
 11931  004C42  0E00               	movlw	0
 11932  004C44  1645               	andwf	(___fltol@f1+3)^0,f,c
 11933  004C46  0E96               	movlw	150
 11934  004C48  5E4B               	subwf	___fltol@exp1^0,f,c
 11935  004C4A  BE4B               	btfsc	___fltol@exp1^0,7,c
 11936  004C4C  EF2C  F026         	goto	u4340
 11937  004C50  EF2A  F026         	goto	u4341
 11938  004C54                     u4341:
 11939  004C54  EF42  F026         	goto	l4262
 11940  004C58                     u4340:
 11941  004C58  504B               	movf	___fltol@exp1^0,w,c
 11942  004C5A  0A80               	xorlw	128
 11943  004C5C  0F97               	addlw	151
 11944  004C5E  B0D8               	btfsc	status,0,c
 11945  004C60  EF34  F026         	goto	u4351
 11946  004C64  EF36  F026         	goto	u4350
 11947  004C68                     u4351:
 11948  004C68  EF38  F026         	goto	l4258
 11949  004C6C                     u4350:
 11950  004C6C  EFFB  F025         	goto	l4238
 11951  004C70                     l4258:
 11952  004C70  90D8               	bcf	status,0,c
 11953  004C72  3245               	rrcf	(___fltol@f1+3)^0,f,c
 11954  004C74  3244               	rrcf	(___fltol@f1+2)^0,f,c
 11955  004C76  3243               	rrcf	(___fltol@f1+1)^0,f,c
 11956  004C78  3242               	rrcf	___fltol@f1^0,f,c
 11957  004C7A  3E4B               	incfsz	___fltol@exp1^0,f,c
 11958  004C7C  EF38  F026         	goto	l4258
 11959  004C80  EF5A  F026         	goto	l4272
 11960  004C84                     l4262:
 11961  004C84  0E1F               	movlw	31
 11962  004C86  644B               	cpfsgt	___fltol@exp1^0,c
 11963  004C88  EF48  F026         	goto	u4361
 11964  004C8C  EF4A  F026         	goto	u4360
 11965  004C90                     u4361:
 11966  004C90  EF52  F026         	goto	l4270
 11967  004C94                     u4360:
 11968  004C94  EFFB  F025         	goto	l4238
 11969  004C98                     l4268:
 11970  004C98  90D8               	bcf	status,0,c
 11971  004C9A  3642               	rlcf	___fltol@f1^0,f,c
 11972  004C9C  3643               	rlcf	(___fltol@f1+1)^0,f,c
 11973  004C9E  3644               	rlcf	(___fltol@f1+2)^0,f,c
 11974  004CA0  3645               	rlcf	(___fltol@f1+3)^0,f,c
 11975  004CA2  064B               	decf	___fltol@exp1^0,f,c
 11976  004CA4                     l4270:
 11977  004CA4  504B               	movf	___fltol@exp1^0,w,c
 11978  004CA6  A4D8               	btfss	status,2,c
 11979  004CA8  EF58  F026         	goto	u4371
 11980  004CAC  EF5A  F026         	goto	u4370
 11981  004CB0                     u4371:
 11982  004CB0  EF4C  F026         	goto	l4268
 11983  004CB4                     u4370:
 11984  004CB4                     l4272:
 11985  004CB4  504A               	movf	___fltol@sign1^0,w,c
 11986  004CB6  B4D8               	btfsc	status,2,c
 11987  004CB8  EF60  F026         	goto	u4381
 11988  004CBC  EF62  F026         	goto	u4380
 11989  004CC0                     u4381:
 11990  004CC0  EF6A  F026         	goto	l4276
 11991  004CC4                     u4380:
 11992  004CC4  1E45               	comf	(___fltol@f1+3)^0,f,c
 11993  004CC6  1E44               	comf	(___fltol@f1+2)^0,f,c
 11994  004CC8  1E43               	comf	(___fltol@f1+1)^0,f,c
 11995  004CCA  6C42               	negf	___fltol@f1^0,c
 11996  004CCC  0E00               	movlw	0
 11997  004CCE  2243               	addwfc	(___fltol@f1+1)^0,f,c
 11998  004CD0  2244               	addwfc	(___fltol@f1+2)^0,f,c
 11999  004CD2  2245               	addwfc	(___fltol@f1+3)^0,f,c
 12000  004CD4                     l4276:
 12001  004CD4  C042  F042         	movff	___fltol@f1,?___fltol
 12002  004CD8  C043  F043         	movff	___fltol@f1+1,?___fltol+1
 12003  004CDC  C044  F044         	movff	___fltol@f1+2,?___fltol+2
 12004  004CE0  C045  F045         	movff	___fltol@f1+3,?___fltol+3
 12005  004CE4                     l909:
 12006  004CE4  0012               	return		;funcret
 12007  004CE6                     __end_of___fltol:
 12008                           	callstack 0
 12009                           
 12010 ;; *************** function _color_read_Clear *****************
 12011 ;; Defined at:
 12012 ;;		line 151 in file "color.c"
 12013 ;; Parameters:    Size  Location     Type
 12014 ;;		None
 12015 ;; Auto vars:     Size  Location     Type
 12016 ;;  tmp             2    9[COMRAM] unsigned int 
 12017 ;; Return value:  Size  Location     Type
 12018 ;;                  2    4[COMRAM] unsigned int 
 12019 ;; Registers used:
 12020 ;;		wreg, status,2, status,0, cstack
 12021 ;; Tracked objects:
 12022 ;;		On entry : 0/0
 12023 ;;		On exit  : 0/0
 12024 ;;		Unchanged: 0/0
 12025 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12026 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12027 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12028 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12029 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12030 ;;Total ram usage:        7 bytes
 12031 ;; Hardware stack levels used: 1
 12032 ;; Hardware stack levels required when called: 3
 12033 ;; This function calls:
 12034 ;;		_I2C_2_Master_Read
 12035 ;;		_I2C_2_Master_RepStart
 12036 ;;		_I2C_2_Master_Start
 12037 ;;		_I2C_2_Master_Stop
 12038 ;;		_I2C_2_Master_Write
 12039 ;; This function is called by:
 12040 ;;		_read_color
 12041 ;;		_calibrate_white
 12042 ;;		_amb_light_measure
 12043 ;;		_detect_wall
 12044 ;; This function uses a non-reentrant model
 12045 ;;
 12046                           
 12047                           	psect	text55
 12048  00574A                     __ptext55:
 12049                           	callstack 0
 12050  00574A                     _color_read_Clear:
 12051                           	callstack 24
 12052  00574A                     
 12053                           ;color.c: 153:  unsigned int tmp;;color.c: 154:  I2C_2_Master_Start();
 12054  00574A  EC65  F02E         	call	_I2C_2_Master_Start	;wreg free
 12055                           
 12056                           ;color.c: 155:  I2C_2_Master_Write(0x52 | 0x00);
 12057  00574E  0E52               	movlw	82
 12058  005750  EC4F  F02E         	call	_I2C_2_Master_Write
 12059                           
 12060                           ;color.c: 156:  I2C_2_Master_Write(0xA0 | 0x14);
 12061  005754  0EB4               	movlw	180
 12062  005756  EC4F  F02E         	call	_I2C_2_Master_Write
 12063                           
 12064                           ;color.c: 157:  I2C_2_Master_RepStart();
 12065  00575A  EC5B  F02E         	call	_I2C_2_Master_RepStart	;wreg free
 12066                           
 12067                           ;color.c: 158:  I2C_2_Master_Write(0x52 | 0x01);
 12068  00575E  0E53               	movlw	83
 12069  005760  EC4F  F02E         	call	_I2C_2_Master_Write
 12070                           
 12071                           ;color.c: 159:  tmp=I2C_2_Master_Read(1);
 12072  005764  0E01               	movlw	1
 12073  005766  EC54  F02C         	call	_I2C_2_Master_Read
 12074  00576A  6E07               	movwf	??_color_read_Clear^0,c
 12075  00576C  5007               	movf	??_color_read_Clear^0,w,c
 12076  00576E  6E0A               	movwf	color_read_Clear@tmp^0,c
 12077  005770  6A0B               	clrf	(color_read_Clear@tmp+1)^0,c
 12078                           
 12079                           ;color.c: 160:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
 12080  005772  0E00               	movlw	0
 12081  005774  EC54  F02C         	call	_I2C_2_Master_Read
 12082  005778  6E07               	movwf	??_color_read_Clear^0,c
 12083  00577A  5007               	movf	??_color_read_Clear^0,w,c
 12084  00577C  6E09               	movwf	(??_color_read_Clear+2)^0,c
 12085  00577E  6A08               	clrf	(??_color_read_Clear+1)^0,c
 12086  005780  500A               	movf	color_read_Clear@tmp^0,w,c
 12087  005782  1008               	iorwf	(??_color_read_Clear+1)^0,w,c
 12088  005784  6E0A               	movwf	color_read_Clear@tmp^0,c
 12089  005786  500B               	movf	(color_read_Clear@tmp+1)^0,w,c
 12090  005788  1009               	iorwf	(??_color_read_Clear+2)^0,w,c
 12091  00578A  6E0B               	movwf	(color_read_Clear@tmp+1)^0,c
 12092                           
 12093                           ;color.c: 161:  I2C_2_Master_Stop();
 12094  00578C  EC60  F02E         	call	_I2C_2_Master_Stop	;wreg free
 12095  005790                     
 12096                           ;color.c: 162:  return tmp;
 12097  005790  C00A  F005         	movff	color_read_Clear@tmp,?_color_read_Clear
 12098  005794  C00B  F006         	movff	color_read_Clear@tmp+1,?_color_read_Clear+1
 12099  005798  0012               	return		;funcret
 12100  00579A                     __end_of_color_read_Clear:
 12101                           	callstack 0
 12102                           
 12103 ;; *************** function _I2C_2_Master_RepStart *****************
 12104 ;; Defined at:
 12105 ;;		line 33 in file "i2c.c"
 12106 ;; Parameters:    Size  Location     Type
 12107 ;;		None
 12108 ;; Auto vars:     Size  Location     Type
 12109 ;;		None
 12110 ;; Return value:  Size  Location     Type
 12111 ;;                  1    wreg      void 
 12112 ;; Registers used:
 12113 ;;		wreg, status,2, status,0, cstack
 12114 ;; Tracked objects:
 12115 ;;		On entry : 0/0
 12116 ;;		On exit  : 0/0
 12117 ;;		Unchanged: 0/0
 12118 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12119 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12120 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12121 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12122 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12123 ;;Total ram usage:        0 bytes
 12124 ;; Hardware stack levels used: 1
 12125 ;; Hardware stack levels required when called: 2
 12126 ;; This function calls:
 12127 ;;		_I2C_2_Master_Idle
 12128 ;; This function is called by:
 12129 ;;		_color_read_Red
 12130 ;;		_color_read_Blue
 12131 ;;		_color_read_Green
 12132 ;;		_color_read_Clear
 12133 ;; This function uses a non-reentrant model
 12134 ;;
 12135                           
 12136                           	psect	text56
 12137  005CB6                     __ptext56:
 12138                           	callstack 0
 12139  005CB6                     _I2C_2_Master_RepStart:
 12140                           	callstack 24
 12141  005CB6                     
 12142                           ;i2c.c: 35:   I2C_2_Master_Idle();
 12143  005CB6  EC9E  F02D         	call	_I2C_2_Master_Idle	;wreg free
 12144  005CBA                     
 12145                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
 12146  005CBA  010E               	movlb	14	; () banked
 12147  005CBC  83DA               	bsf	218,1,b	;volatile
 12148  005CBE                     
 12149                           ; BSR set to: 14
 12150  005CBE  0012               	return		;funcret
 12151  005CC0                     __end_of_I2C_2_Master_RepStart:
 12152                           	callstack 0
 12153                           
 12154 ;; *************** function _I2C_2_Master_Read *****************
 12155 ;; Defined at:
 12156 ;;		line 51 in file "i2c.c"
 12157 ;; Parameters:    Size  Location     Type
 12158 ;;  ack             1    wreg     unsigned char 
 12159 ;; Auto vars:     Size  Location     Type
 12160 ;;  ack             1    2[COMRAM] unsigned char 
 12161 ;;  tmp             1    3[COMRAM] unsigned char 
 12162 ;; Return value:  Size  Location     Type
 12163 ;;                  1    wreg      unsigned char 
 12164 ;; Registers used:
 12165 ;;		wreg, status,2, status,0, cstack
 12166 ;; Tracked objects:
 12167 ;;		On entry : 0/0
 12168 ;;		On exit  : 0/0
 12169 ;;		Unchanged: 0/0
 12170 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12171 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12172 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12173 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12174 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12175 ;;Total ram usage:        3 bytes
 12176 ;; Hardware stack levels used: 1
 12177 ;; Hardware stack levels required when called: 2
 12178 ;; This function calls:
 12179 ;;		_I2C_2_Master_Idle
 12180 ;; This function is called by:
 12181 ;;		_color_read_Red
 12182 ;;		_color_read_Blue
 12183 ;;		_color_read_Green
 12184 ;;		_color_read_Clear
 12185 ;; This function uses a non-reentrant model
 12186 ;;
 12187                           
 12188                           	psect	text57
 12189  0058A8                     __ptext57:
 12190                           	callstack 0
 12191  0058A8                     _I2C_2_Master_Read:
 12192                           	callstack 24
 12193                           
 12194                           ; BSR set to: 14
 12195                           ;incstack = 0
 12196                           ;I2C_2_Master_Read@ack stored from wreg
 12197  0058A8  6E03               	movwf	I2C_2_Master_Read@ack^0,c
 12198  0058AA                     
 12199                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
 12200  0058AA  EC9E  F02D         	call	_I2C_2_Master_Idle	;wreg free
 12201  0058AE                     
 12202                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
 12203  0058AE  010E               	movlb	14	; () banked
 12204  0058B0  87DA               	bsf	218,3,b	;volatile
 12205                           
 12206                           ;i2c.c: 56:   I2C_2_Master_Idle();
 12207  0058B2  EC9E  F02D         	call	_I2C_2_Master_Idle	;wreg free
 12208  0058B6                     
 12209                           ;i2c.c: 57:   tmp = SSP2BUF;
 12210  0058B6  CED5 F004          	movff	3797,I2C_2_Master_Read@tmp	;volatile
 12211                           
 12212                           ;i2c.c: 58:   I2C_2_Master_Idle();
 12213  0058BA  EC9E  F02D         	call	_I2C_2_Master_Idle	;wreg free
 12214  0058BE                     
 12215                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
 12216  0058BE  5003               	movf	I2C_2_Master_Read@ack^0,w,c
 12217  0058C0  B4D8               	btfsc	status,2,c
 12218  0058C2  EF65  F02C         	goto	u3871
 12219  0058C6  EF69  F02C         	goto	u3870
 12220  0058CA                     u3871:
 12221  0058CA  6A02               	clrf	??_I2C_2_Master_Read^0,c
 12222  0058CC  2A02               	incf	??_I2C_2_Master_Read^0,f,c
 12223  0058CE  EF6A  F02C         	goto	u3888
 12224  0058D2                     u3870:
 12225  0058D2  6A02               	clrf	??_I2C_2_Master_Read^0,c
 12226  0058D4                     u3888:
 12227  0058D4  3A02               	swapf	??_I2C_2_Master_Read^0,f,c
 12228  0058D6  4602               	rlncf	??_I2C_2_Master_Read^0,f,c
 12229  0058D8  010E               	movlb	14	; () banked
 12230  0058DA  51DA               	movf	218,w,b	;volatile
 12231  0058DC  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
 12232  0058DE  0BDF               	andlw	-33
 12233  0058E0  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
 12234  0058E2  6FDA               	movwf	218,b	;volatile
 12235  0058E4                     
 12236                           ; BSR set to: 14
 12237                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
 12238  0058E4  89DA               	bsf	218,4,b	;volatile
 12239  0058E6                     
 12240                           ; BSR set to: 14
 12241                           ;i2c.c: 61:   return tmp;
 12242  0058E6  5004               	movf	I2C_2_Master_Read@tmp^0,w,c
 12243  0058E8                     
 12244                           ; BSR set to: 14
 12245  0058E8  0012               	return		;funcret
 12246  0058EA                     __end_of_I2C_2_Master_Read:
 12247                           	callstack 0
 12248                           
 12249 ;; *************** function ___xxtofl *****************
 12250 ;; Defined at:
 12251 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\xxtofl.c"
 12252 ;; Parameters:    Size  Location     Type
 12253 ;;  sign            1    wreg     unsigned char 
 12254 ;;  val             4    0[COMRAM] long 
 12255 ;; Auto vars:     Size  Location     Type
 12256 ;;  sign            1    8[COMRAM] unsigned char 
 12257 ;;  arg             4   10[COMRAM] unsigned long 
 12258 ;;  exp             1    9[COMRAM] unsigned char 
 12259 ;; Return value:  Size  Location     Type
 12260 ;;                  4    0[COMRAM] unsigned char 
 12261 ;; Registers used:
 12262 ;;		wreg, status,2, status,0
 12263 ;; Tracked objects:
 12264 ;;		On entry : 0/0
 12265 ;;		On exit  : 0/0
 12266 ;;		Unchanged: 0/0
 12267 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12268 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12269 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12270 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12271 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12272 ;;Total ram usage:       14 bytes
 12273 ;; Hardware stack levels used: 1
 12274 ;; Hardware stack levels required when called: 1
 12275 ;; This function calls:
 12276 ;;		Nothing
 12277 ;; This function is called by:
 12278 ;;		_detect_color
 12279 ;;		_amb_light_measure
 12280 ;;		_detect_wall
 12281 ;; This function uses a non-reentrant model
 12282 ;;
 12283                           
 12284                           	psect	text58
 12285  003DE0                     __ptext58:
 12286                           	callstack 0
 12287  003DE0                     ___xxtofl:
 12288                           	callstack 27
 12289                           
 12290                           ; BSR set to: 14
 12291                           ;incstack = 0
 12292                           ;___xxtofl@sign stored from wreg
 12293  003DE0  6E09               	movwf	___xxtofl@sign^0,c
 12294  003DE2  5009               	movf	___xxtofl@sign^0,w,c
 12295  003DE4  B4D8               	btfsc	status,2,c
 12296  003DE6  EFF7  F01E         	goto	u5061
 12297  003DEA  EFF9  F01E         	goto	u5060
 12298  003DEE                     u5061:
 12299  003DEE  EF1B  F01F         	goto	l1267
 12300  003DF2                     u5060:
 12301  003DF2  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
 12302  003DF4  EF00  F01F         	goto	u5070
 12303  003DF8  EFFE  F01E         	goto	u5071
 12304  003DFC                     u5071:
 12305  003DFC  EF1B  F01F         	goto	l1267
 12306  003E00                     u5070:
 12307  003E00  C001  F005         	movff	___xxtofl@val,??___xxtofl
 12308  003E04  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
 12309  003E08  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
 12310  003E0C  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
 12311  003E10  1E05               	comf	??___xxtofl^0,f,c
 12312  003E12  1E06               	comf	(??___xxtofl+1)^0,f,c
 12313  003E14  1E07               	comf	(??___xxtofl+2)^0,f,c
 12314  003E16  1E08               	comf	(??___xxtofl+3)^0,f,c
 12315  003E18  2A05               	incf	??___xxtofl^0,f,c
 12316  003E1A  0E00               	movlw	0
 12317  003E1C  2206               	addwfc	(??___xxtofl+1)^0,f,c
 12318  003E1E  2207               	addwfc	(??___xxtofl+2)^0,f,c
 12319  003E20  2208               	addwfc	(??___xxtofl+3)^0,f,c
 12320  003E22  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
 12321  003E26  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
 12322  003E2A  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
 12323  003E2E  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
 12324  003E32  EF23  F01F         	goto	l4600
 12325  003E36                     l1267:
 12326  003E36  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
 12327  003E3A  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
 12328  003E3E  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
 12329  003E42  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
 12330  003E46                     l4600:
 12331  003E46  5001               	movf	___xxtofl@val^0,w,c
 12332  003E48  1002               	iorwf	(___xxtofl@val+1)^0,w,c
 12333  003E4A  1003               	iorwf	(___xxtofl@val+2)^0,w,c
 12334  003E4C  1004               	iorwf	(___xxtofl@val+3)^0,w,c
 12335  003E4E  A4D8               	btfss	status,2,c
 12336  003E50  EF2C  F01F         	goto	u5081
 12337  003E54  EF2E  F01F         	goto	u5080
 12338  003E58                     u5081:
 12339  003E58  EF38  F01F         	goto	l4606
 12340  003E5C                     u5080:
 12341  003E5C  0E00               	movlw	0
 12342  003E5E  6E01               	movwf	?___xxtofl^0,c
 12343  003E60  0E00               	movlw	0
 12344  003E62  6E02               	movwf	(?___xxtofl+1)^0,c
 12345  003E64  0E00               	movlw	0
 12346  003E66  6E03               	movwf	(?___xxtofl+2)^0,c
 12347  003E68  0E00               	movlw	0
 12348  003E6A  6E04               	movwf	(?___xxtofl+3)^0,c
 12349  003E6C  EFC9  F01F         	goto	l1270
 12350  003E70                     l4606:
 12351  003E70  0E96               	movlw	150
 12352  003E72  6E0A               	movwf	___xxtofl@exp^0,c
 12353  003E74  EF42  F01F         	goto	l4610
 12354  003E78                     l4608:
 12355  003E78  2A0A               	incf	___xxtofl@exp^0,f,c
 12356  003E7A  90D8               	bcf	status,0,c
 12357  003E7C  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
 12358  003E7E  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
 12359  003E80  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
 12360  003E82  320B               	rrcf	___xxtofl@arg^0,f,c
 12361  003E84                     l4610:
 12362  003E84  0E00               	movlw	0
 12363  003E86  140B               	andwf	___xxtofl@arg^0,w,c
 12364  003E88  6E05               	movwf	??___xxtofl^0,c
 12365  003E8A  0E00               	movlw	0
 12366  003E8C  140C               	andwf	(___xxtofl@arg+1)^0,w,c
 12367  003E8E  6E06               	movwf	(??___xxtofl+1)^0,c
 12368  003E90  0E00               	movlw	0
 12369  003E92  140D               	andwf	(___xxtofl@arg+2)^0,w,c
 12370  003E94  6E07               	movwf	(??___xxtofl+2)^0,c
 12371  003E96  0EFE               	movlw	254
 12372  003E98  140E               	andwf	(___xxtofl@arg+3)^0,w,c
 12373  003E9A  6E08               	movwf	(??___xxtofl+3)^0,c
 12374  003E9C  5005               	movf	??___xxtofl^0,w,c
 12375  003E9E  1006               	iorwf	(??___xxtofl+1)^0,w,c
 12376  003EA0  1007               	iorwf	(??___xxtofl+2)^0,w,c
 12377  003EA2  1008               	iorwf	(??___xxtofl+3)^0,w,c
 12378  003EA4  A4D8               	btfss	status,2,c
 12379  003EA6  EF57  F01F         	goto	u5091
 12380  003EAA  EF59  F01F         	goto	u5090
 12381  003EAE                     u5091:
 12382  003EAE  EF3C  F01F         	goto	l4608
 12383  003EB2                     u5090:
 12384  003EB2  EF67  F01F         	goto	l1274
 12385  003EB6                     l4612:
 12386  003EB6  2A0A               	incf	___xxtofl@exp^0,f,c
 12387  003EB8  0E01               	movlw	1
 12388  003EBA  260B               	addwf	___xxtofl@arg^0,f,c
 12389  003EBC  0E00               	movlw	0
 12390  003EBE  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
 12391  003EC0  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
 12392  003EC2  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
 12393  003EC4  90D8               	bcf	status,0,c
 12394  003EC6  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
 12395  003EC8  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
 12396  003ECA  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
 12397  003ECC  320B               	rrcf	___xxtofl@arg^0,f,c
 12398  003ECE                     l1274:
 12399  003ECE  0E00               	movlw	0
 12400  003ED0  140B               	andwf	___xxtofl@arg^0,w,c
 12401  003ED2  6E05               	movwf	??___xxtofl^0,c
 12402  003ED4  0E00               	movlw	0
 12403  003ED6  140C               	andwf	(___xxtofl@arg+1)^0,w,c
 12404  003ED8  6E06               	movwf	(??___xxtofl+1)^0,c
 12405  003EDA  0E00               	movlw	0
 12406  003EDC  140D               	andwf	(___xxtofl@arg+2)^0,w,c
 12407  003EDE  6E07               	movwf	(??___xxtofl+2)^0,c
 12408  003EE0  0EFF               	movlw	255
 12409  003EE2  140E               	andwf	(___xxtofl@arg+3)^0,w,c
 12410  003EE4  6E08               	movwf	(??___xxtofl+3)^0,c
 12411  003EE6  5005               	movf	??___xxtofl^0,w,c
 12412  003EE8  1006               	iorwf	(??___xxtofl+1)^0,w,c
 12413  003EEA  1007               	iorwf	(??___xxtofl+2)^0,w,c
 12414  003EEC  1008               	iorwf	(??___xxtofl+3)^0,w,c
 12415  003EEE  A4D8               	btfss	status,2,c
 12416  003EF0  EF7C  F01F         	goto	u5101
 12417  003EF4  EF7E  F01F         	goto	u5100
 12418  003EF8                     u5101:
 12419  003EF8  EF5B  F01F         	goto	l4612
 12420  003EFC                     u5100:
 12421  003EFC  EF86  F01F         	goto	l4620
 12422  003F00                     l4618:
 12423  003F00  060A               	decf	___xxtofl@exp^0,f,c
 12424  003F02  90D8               	bcf	status,0,c
 12425  003F04  360B               	rlcf	___xxtofl@arg^0,f,c
 12426  003F06  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
 12427  003F08  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
 12428  003F0A  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
 12429  003F0C                     l4620:
 12430  003F0C  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
 12431  003F0E  EF8B  F01F         	goto	u5111
 12432  003F12  EF8D  F01F         	goto	u5110
 12433  003F16                     u5111:
 12434  003F16  EF95  F01F         	goto	l1281
 12435  003F1A                     u5110:
 12436  003F1A  0E02               	movlw	2
 12437  003F1C  600A               	cpfslt	___xxtofl@exp^0,c
 12438  003F1E  EF93  F01F         	goto	u5121
 12439  003F22  EF95  F01F         	goto	u5120
 12440  003F26                     u5121:
 12441  003F26  EF80  F01F         	goto	l4618
 12442  003F2A                     u5120:
 12443  003F2A                     l1281:
 12444  003F2A  B00A               	btfsc	___xxtofl@exp^0,0,c
 12445  003F2C  EF9A  F01F         	goto	u5131
 12446  003F30  EF9C  F01F         	goto	u5130
 12447  003F34                     u5131:
 12448  003F34  EF9D  F01F         	goto	l4626
 12449  003F38                     u5130:
 12450  003F38  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
 12451  003F3A                     l4626:
 12452  003F3A  90D8               	bcf	status,0,c
 12453  003F3C  320A               	rrcf	___xxtofl@exp^0,f,c
 12454  003F3E  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
 12455  003F42  6A06               	clrf	(??___xxtofl+1)^0,c
 12456  003F44  6A07               	clrf	(??___xxtofl+2)^0,c
 12457  003F46  6A08               	clrf	(??___xxtofl+3)^0,c
 12458  003F48  C005  F008         	movff	??___xxtofl,??___xxtofl+3
 12459  003F4C  6A07               	clrf	(??___xxtofl+2)^0,c
 12460  003F4E  6A06               	clrf	(??___xxtofl+1)^0,c
 12461  003F50  6A05               	clrf	??___xxtofl^0,c
 12462  003F52  5005               	movf	??___xxtofl^0,w,c
 12463  003F54  120B               	iorwf	___xxtofl@arg^0,f,c
 12464  003F56  5006               	movf	(??___xxtofl+1)^0,w,c
 12465  003F58  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
 12466  003F5A  5007               	movf	(??___xxtofl+2)^0,w,c
 12467  003F5C  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
 12468  003F5E  5008               	movf	(??___xxtofl+3)^0,w,c
 12469  003F60  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
 12470  003F62  5009               	movf	___xxtofl@sign^0,w,c
 12471  003F64  B4D8               	btfsc	status,2,c
 12472  003F66  EFB7  F01F         	goto	u5141
 12473  003F6A  EFB9  F01F         	goto	u5140
 12474  003F6E                     u5141:
 12475  003F6E  EFC1  F01F         	goto	l4636
 12476  003F72                     u5140:
 12477  003F72  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
 12478  003F74  EFC0  F01F         	goto	u5150
 12479  003F78  EFBE  F01F         	goto	u5151
 12480  003F7C                     u5151:
 12481  003F7C  EFC1  F01F         	goto	l4636
 12482  003F80                     u5150:
 12483  003F80  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
 12484  003F82                     l4636:
 12485  003F82  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
 12486  003F86  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
 12487  003F8A  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
 12488  003F8E  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
 12489  003F92                     l1270:
 12490  003F92  0012               	return		;funcret
 12491  003F94                     __end_of___xxtofl:
 12492                           	callstack 0
 12493                           
 12494 ;; *************** function ___fldiv *****************
 12495 ;; Defined at:
 12496 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\sprcdiv.c"
 12497 ;; Parameters:    Size  Location     Type
 12498 ;;  b               4   39[COMRAM] unsigned char 
 12499 ;;  a               4   43[COMRAM] unsigned char 
 12500 ;; Auto vars:     Size  Location     Type
 12501 ;;  grs             4   58[COMRAM] unsigned long 
 12502 ;;  rem             4   51[COMRAM] unsigned long 
 12503 ;;  new_exp         2   56[COMRAM] short 
 12504 ;;  aexp            1   63[COMRAM] unsigned char 
 12505 ;;  bexp            1   62[COMRAM] unsigned char 
 12506 ;;  sign            1   55[COMRAM] unsigned char 
 12507 ;; Return value:  Size  Location     Type
 12508 ;;                  4   39[COMRAM] unsigned char 
 12509 ;; Registers used:
 12510 ;;		wreg, status,2, status,0
 12511 ;; Tracked objects:
 12512 ;;		On entry : 0/0
 12513 ;;		On exit  : 0/0
 12514 ;;		Unchanged: 0/0
 12515 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12516 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12517 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12518 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12519 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12520 ;;Total ram usage:       25 bytes
 12521 ;; Hardware stack levels used: 1
 12522 ;; Hardware stack levels required when called: 1
 12523 ;; This function calls:
 12524 ;;		Nothing
 12525 ;; This function is called by:
 12526 ;;		_detect_color
 12527 ;;		_amb_light_measure
 12528 ;;		_detect_wall
 12529 ;; This function uses a non-reentrant model
 12530 ;;
 12531                           
 12532                           	psect	text59
 12533  002A20                     __ptext59:
 12534                           	callstack 0
 12535  002A20                     ___fldiv:
 12536                           	callstack 27
 12537  002A20  502B               	movf	(___fldiv@b+3)^0,w,c
 12538  002A22  0B80               	andlw	128
 12539  002A24  6E38               	movwf	___fldiv@sign^0,c
 12540  002A26  502B               	movf	(___fldiv@b+3)^0,w,c
 12541  002A28  242B               	addwf	(___fldiv@b+3)^0,w,c
 12542  002A2A  6E3F               	movwf	___fldiv@bexp^0,c
 12543  002A2C  AE2A               	btfss	(___fldiv@b+2)^0,7,c
 12544  002A2E  EF1B  F015         	goto	u4831
 12545  002A32  EF1D  F015         	goto	u4830
 12546  002A36                     u4831:
 12547  002A36  EF1E  F015         	goto	l4462
 12548  002A3A                     u4830:
 12549  002A3A  803F               	bsf	___fldiv@bexp^0,0,c
 12550  002A3C                     l4462:
 12551  002A3C  503F               	movf	___fldiv@bexp^0,w,c
 12552  002A3E  B4D8               	btfsc	status,2,c
 12553  002A40  EF24  F015         	goto	u4841
 12554  002A44  EF26  F015         	goto	u4840
 12555  002A48                     u4841:
 12556  002A48  EF3B  F015         	goto	l4472
 12557  002A4C                     u4840:
 12558  002A4C  283F               	incf	___fldiv@bexp^0,w,c
 12559  002A4E  A4D8               	btfss	status,2,c
 12560  002A50  EF2C  F015         	goto	u4851
 12561  002A54  EF2E  F015         	goto	u4850
 12562  002A58                     u4851:
 12563  002A58  EF36  F015         	goto	l4468
 12564  002A5C                     u4850:
 12565  002A5C  0E00               	movlw	0
 12566  002A5E  6E28               	movwf	___fldiv@b^0,c
 12567  002A60  0E00               	movlw	0
 12568  002A62  6E29               	movwf	(___fldiv@b+1)^0,c
 12569  002A64  0E00               	movlw	0
 12570  002A66  6E2A               	movwf	(___fldiv@b+2)^0,c
 12571  002A68  0E00               	movlw	0
 12572  002A6A  6E2B               	movwf	(___fldiv@b+3)^0,c
 12573  002A6C                     l4468:
 12574  002A6C  8E2A               	bsf	(___fldiv@b+2)^0,7,c
 12575  002A6E  0E00               	movlw	0
 12576  002A70  6E2B               	movwf	(___fldiv@b+3)^0,c
 12577  002A72  EF43  F015         	goto	l4474
 12578  002A76                     l4472:
 12579  002A76  0E00               	movlw	0
 12580  002A78  6E28               	movwf	___fldiv@b^0,c
 12581  002A7A  0E00               	movlw	0
 12582  002A7C  6E29               	movwf	(___fldiv@b+1)^0,c
 12583  002A7E  0E00               	movlw	0
 12584  002A80  6E2A               	movwf	(___fldiv@b+2)^0,c
 12585  002A82  0E00               	movlw	0
 12586  002A84  6E2B               	movwf	(___fldiv@b+3)^0,c
 12587  002A86                     l4474:
 12588  002A86  502F               	movf	(___fldiv@a+3)^0,w,c
 12589  002A88  0B80               	andlw	128
 12590  002A8A  1A38               	xorwf	___fldiv@sign^0,f,c
 12591  002A8C  502F               	movf	(___fldiv@a+3)^0,w,c
 12592  002A8E  242F               	addwf	(___fldiv@a+3)^0,w,c
 12593  002A90  6E40               	movwf	___fldiv@aexp^0,c
 12594  002A92  AE2E               	btfss	(___fldiv@a+2)^0,7,c
 12595  002A94  EF4E  F015         	goto	u4861
 12596  002A98  EF50  F015         	goto	u4860
 12597  002A9C                     u4861:
 12598  002A9C  EF51  F015         	goto	l4482
 12599  002AA0                     u4860:
 12600  002AA0  8040               	bsf	___fldiv@aexp^0,0,c
 12601  002AA2                     l4482:
 12602  002AA2  5040               	movf	___fldiv@aexp^0,w,c
 12603  002AA4  B4D8               	btfsc	status,2,c
 12604  002AA6  EF57  F015         	goto	u4871
 12605  002AAA  EF59  F015         	goto	u4870
 12606  002AAE                     u4871:
 12607  002AAE  EF6E  F015         	goto	l4492
 12608  002AB2                     u4870:
 12609  002AB2  2840               	incf	___fldiv@aexp^0,w,c
 12610  002AB4  A4D8               	btfss	status,2,c
 12611  002AB6  EF5F  F015         	goto	u4881
 12612  002ABA  EF61  F015         	goto	u4880
 12613  002ABE                     u4881:
 12614  002ABE  EF69  F015         	goto	l4488
 12615  002AC2                     u4880:
 12616  002AC2  0E00               	movlw	0
 12617  002AC4  6E2C               	movwf	___fldiv@a^0,c
 12618  002AC6  0E00               	movlw	0
 12619  002AC8  6E2D               	movwf	(___fldiv@a+1)^0,c
 12620  002ACA  0E00               	movlw	0
 12621  002ACC  6E2E               	movwf	(___fldiv@a+2)^0,c
 12622  002ACE  0E00               	movlw	0
 12623  002AD0  6E2F               	movwf	(___fldiv@a+3)^0,c
 12624  002AD2                     l4488:
 12625  002AD2  8E2E               	bsf	(___fldiv@a+2)^0,7,c
 12626  002AD4  0E00               	movlw	0
 12627  002AD6  6E2F               	movwf	(___fldiv@a+3)^0,c
 12628  002AD8  EF76  F015         	goto	l4494
 12629  002ADC                     l4492:
 12630  002ADC  0E00               	movlw	0
 12631  002ADE  6E2C               	movwf	___fldiv@a^0,c
 12632  002AE0  0E00               	movlw	0
 12633  002AE2  6E2D               	movwf	(___fldiv@a+1)^0,c
 12634  002AE4  0E00               	movlw	0
 12635  002AE6  6E2E               	movwf	(___fldiv@a+2)^0,c
 12636  002AE8  0E00               	movlw	0
 12637  002AEA  6E2F               	movwf	(___fldiv@a+3)^0,c
 12638  002AEC                     l4494:
 12639  002AEC  502C               	movf	___fldiv@a^0,w,c
 12640  002AEE  102D               	iorwf	(___fldiv@a+1)^0,w,c
 12641  002AF0  102E               	iorwf	(___fldiv@a+2)^0,w,c
 12642  002AF2  102F               	iorwf	(___fldiv@a+3)^0,w,c
 12643  002AF4  A4D8               	btfss	status,2,c
 12644  002AF6  EF7F  F015         	goto	u4891
 12645  002AFA  EF81  F015         	goto	u4890
 12646  002AFE                     u4891:
 12647  002AFE  EF99  F015         	goto	l4506
 12648  002B02                     u4890:
 12649  002B02  0E00               	movlw	0
 12650  002B04  6E28               	movwf	___fldiv@b^0,c
 12651  002B06  0E00               	movlw	0
 12652  002B08  6E29               	movwf	(___fldiv@b+1)^0,c
 12653  002B0A  0E00               	movlw	0
 12654  002B0C  6E2A               	movwf	(___fldiv@b+2)^0,c
 12655  002B0E  0E00               	movlw	0
 12656  002B10  6E2B               	movwf	(___fldiv@b+3)^0,c
 12657  002B12  0E80               	movlw	128
 12658  002B14  122A               	iorwf	(___fldiv@b+2)^0,f,c
 12659  002B16  0E7F               	movlw	127
 12660  002B18  122B               	iorwf	(___fldiv@b+3)^0,f,c
 12661  002B1A                     l4500:
 12662  002B1A  5038               	movf	___fldiv@sign^0,w,c
 12663  002B1C  122B               	iorwf	(___fldiv@b+3)^0,f,c
 12664  002B1E  C028  F028         	movff	___fldiv@b,?___fldiv
 12665  002B22  C029  F029         	movff	___fldiv@b+1,?___fldiv+1
 12666  002B26  C02A  F02A         	movff	___fldiv@b+2,?___fldiv+2
 12667  002B2A  C02B  F02B         	movff	___fldiv@b+3,?___fldiv+3
 12668  002B2E  EFDC  F016         	goto	l1194
 12669  002B32                     l4506:
 12670  002B32  503F               	movf	___fldiv@bexp^0,w,c
 12671  002B34  A4D8               	btfss	status,2,c
 12672  002B36  EF9F  F015         	goto	u4901
 12673  002B3A  EFA1  F015         	goto	u4900
 12674  002B3E                     u4901:
 12675  002B3E  EFAB  F015         	goto	l4514
 12676  002B42                     u4900:
 12677  002B42  0E00               	movlw	0
 12678  002B44  6E28               	movwf	?___fldiv^0,c
 12679  002B46  0E00               	movlw	0
 12680  002B48  6E29               	movwf	(?___fldiv+1)^0,c
 12681  002B4A  0E00               	movlw	0
 12682  002B4C  6E2A               	movwf	(?___fldiv+2)^0,c
 12683  002B4E  0E00               	movlw	0
 12684  002B50  6E2B               	movwf	(?___fldiv+3)^0,c
 12685  002B52  EFDC  F016         	goto	l1194
 12686  002B56                     l4514:
 12687  002B56  5040               	movf	___fldiv@aexp^0,w,c
 12688  002B58  C03F  F030         	movff	___fldiv@bexp,??___fldiv
 12689  002B5C  6A31               	clrf	(??___fldiv+1)^0,c
 12690  002B5E  5E30               	subwf	??___fldiv^0,f,c
 12691  002B60  0E00               	movlw	0
 12692  002B62  5A31               	subwfb	(??___fldiv+1)^0,f,c
 12693  002B64  0E7F               	movlw	127
 12694  002B66  2430               	addwf	??___fldiv^0,w,c
 12695  002B68  6E39               	movwf	___fldiv@new_exp^0,c
 12696  002B6A  0E00               	movlw	0
 12697  002B6C  2031               	addwfc	(??___fldiv+1)^0,w,c
 12698  002B6E  6E3A               	movwf	(___fldiv@new_exp+1)^0,c
 12699  002B70  C028  F034         	movff	___fldiv@b,___fldiv@rem
 12700  002B74  C029  F035         	movff	___fldiv@b+1,___fldiv@rem+1
 12701  002B78  C02A  F036         	movff	___fldiv@b+2,___fldiv@rem+2
 12702  002B7C  C02B  F037         	movff	___fldiv@b+3,___fldiv@rem+3
 12703  002B80  0E00               	movlw	0
 12704  002B82  6E28               	movwf	___fldiv@b^0,c
 12705  002B84  0E00               	movlw	0
 12706  002B86  6E29               	movwf	(___fldiv@b+1)^0,c
 12707  002B88  0E00               	movlw	0
 12708  002B8A  6E2A               	movwf	(___fldiv@b+2)^0,c
 12709  002B8C  0E00               	movlw	0
 12710  002B8E  6E2B               	movwf	(___fldiv@b+3)^0,c
 12711  002B90  0E00               	movlw	0
 12712  002B92  6E3B               	movwf	___fldiv@grs^0,c
 12713  002B94  0E00               	movlw	0
 12714  002B96  6E3C               	movwf	(___fldiv@grs+1)^0,c
 12715  002B98  0E00               	movlw	0
 12716  002B9A  6E3D               	movwf	(___fldiv@grs+2)^0,c
 12717  002B9C  0E00               	movlw	0
 12718  002B9E  6E3E               	movwf	(___fldiv@grs+3)^0,c
 12719  002BA0  0E00               	movlw	0
 12720  002BA2  6E40               	movwf	___fldiv@aexp^0,c
 12721  002BA4  EF0C  F016         	goto	l1196
 12722  002BA8                     l4524:
 12723  002BA8  5040               	movf	___fldiv@aexp^0,w,c
 12724  002BAA  B4D8               	btfsc	status,2,c
 12725  002BAC  EFDA  F015         	goto	u4911
 12726  002BB0  EFDC  F015         	goto	u4910
 12727  002BB4                     u4911:
 12728  002BB4  EFF3  F015         	goto	l4532
 12729  002BB8                     u4910:
 12730  002BB8  90D8               	bcf	status,0,c
 12731  002BBA  3634               	rlcf	___fldiv@rem^0,f,c
 12732  002BBC  3635               	rlcf	(___fldiv@rem+1)^0,f,c
 12733  002BBE  3636               	rlcf	(___fldiv@rem+2)^0,f,c
 12734  002BC0  3637               	rlcf	(___fldiv@rem+3)^0,f,c
 12735  002BC2  90D8               	bcf	status,0,c
 12736  002BC4  3628               	rlcf	___fldiv@b^0,f,c
 12737  002BC6  3629               	rlcf	(___fldiv@b+1)^0,f,c
 12738  002BC8  362A               	rlcf	(___fldiv@b+2)^0,f,c
 12739  002BCA  362B               	rlcf	(___fldiv@b+3)^0,f,c
 12740  002BCC  AE3E               	btfss	(___fldiv@grs+3)^0,7,c
 12741  002BCE  EFEB  F015         	goto	u4921
 12742  002BD2  EFED  F015         	goto	u4920
 12743  002BD6                     u4921:
 12744  002BD6  EFEE  F015         	goto	l1199
 12745  002BDA                     u4920:
 12746  002BDA  8028               	bsf	___fldiv@b^0,0,c
 12747  002BDC                     l1199:
 12748  002BDC  90D8               	bcf	status,0,c
 12749  002BDE  363B               	rlcf	___fldiv@grs^0,f,c
 12750  002BE0  363C               	rlcf	(___fldiv@grs+1)^0,f,c
 12751  002BE2  363D               	rlcf	(___fldiv@grs+2)^0,f,c
 12752  002BE4  363E               	rlcf	(___fldiv@grs+3)^0,f,c
 12753  002BE6                     l4532:
 12754  002BE6  502C               	movf	___fldiv@a^0,w,c
 12755  002BE8  5C34               	subwf	___fldiv@rem^0,w,c
 12756  002BEA  502D               	movf	(___fldiv@a+1)^0,w,c
 12757  002BEC  5835               	subwfb	(___fldiv@rem+1)^0,w,c
 12758  002BEE  502E               	movf	(___fldiv@a+2)^0,w,c
 12759  002BF0  5836               	subwfb	(___fldiv@rem+2)^0,w,c
 12760  002BF2  502F               	movf	(___fldiv@a+3)^0,w,c
 12761  002BF4  5837               	subwfb	(___fldiv@rem+3)^0,w,c
 12762  002BF6  A0D8               	btfss	status,0,c
 12763  002BF8  EF00  F016         	goto	u4931
 12764  002BFC  EF02  F016         	goto	u4930
 12765  002C00                     u4931:
 12766  002C00  EF0B  F016         	goto	l4538
 12767  002C04                     u4930:
 12768  002C04  8C3E               	bsf	(___fldiv@grs+3)^0,6,c
 12769  002C06  502C               	movf	___fldiv@a^0,w,c
 12770  002C08  5E34               	subwf	___fldiv@rem^0,f,c
 12771  002C0A  502D               	movf	(___fldiv@a+1)^0,w,c
 12772  002C0C  5A35               	subwfb	(___fldiv@rem+1)^0,f,c
 12773  002C0E  502E               	movf	(___fldiv@a+2)^0,w,c
 12774  002C10  5A36               	subwfb	(___fldiv@rem+2)^0,f,c
 12775  002C12  502F               	movf	(___fldiv@a+3)^0,w,c
 12776  002C14  5A37               	subwfb	(___fldiv@rem+3)^0,f,c
 12777  002C16                     l4538:
 12778  002C16  2A40               	incf	___fldiv@aexp^0,f,c
 12779  002C18                     l1196:
 12780  002C18  0E19               	movlw	25
 12781  002C1A  6440               	cpfsgt	___fldiv@aexp^0,c
 12782  002C1C  EF12  F016         	goto	u4941
 12783  002C20  EF14  F016         	goto	u4940
 12784  002C24                     u4941:
 12785  002C24  EFD4  F015         	goto	l4524
 12786  002C28                     u4940:
 12787  002C28  5034               	movf	___fldiv@rem^0,w,c
 12788  002C2A  1035               	iorwf	(___fldiv@rem+1)^0,w,c
 12789  002C2C  1036               	iorwf	(___fldiv@rem+2)^0,w,c
 12790  002C2E  1037               	iorwf	(___fldiv@rem+3)^0,w,c
 12791  002C30  B4D8               	btfsc	status,2,c
 12792  002C32  EF1D  F016         	goto	u4951
 12793  002C36  EF1F  F016         	goto	u4950
 12794  002C3A                     u4951:
 12795  002C3A  EF37  F016         	goto	l4550
 12796  002C3E                     u4950:
 12797  002C3E  803B               	bsf	___fldiv@grs^0,0,c
 12798  002C40  EF37  F016         	goto	l4550
 12799  002C44                     l4544:
 12800  002C44  90D8               	bcf	status,0,c
 12801  002C46  3628               	rlcf	___fldiv@b^0,f,c
 12802  002C48  3629               	rlcf	(___fldiv@b+1)^0,f,c
 12803  002C4A  362A               	rlcf	(___fldiv@b+2)^0,f,c
 12804  002C4C  362B               	rlcf	(___fldiv@b+3)^0,f,c
 12805  002C4E  AE3E               	btfss	(___fldiv@grs+3)^0,7,c
 12806  002C50  EF2C  F016         	goto	u4961
 12807  002C54  EF2E  F016         	goto	u4960
 12808  002C58                     u4961:
 12809  002C58  EF2F  F016         	goto	l1205
 12810  002C5C                     u4960:
 12811  002C5C  8028               	bsf	___fldiv@b^0,0,c
 12812  002C5E                     l1205:
 12813  002C5E  90D8               	bcf	status,0,c
 12814  002C60  363B               	rlcf	___fldiv@grs^0,f,c
 12815  002C62  363C               	rlcf	(___fldiv@grs+1)^0,f,c
 12816  002C64  363D               	rlcf	(___fldiv@grs+2)^0,f,c
 12817  002C66  363E               	rlcf	(___fldiv@grs+3)^0,f,c
 12818  002C68  0639               	decf	___fldiv@new_exp^0,f,c
 12819  002C6A  A0D8               	btfss	status,0,c
 12820  002C6C  063A               	decf	(___fldiv@new_exp+1)^0,f,c
 12821  002C6E                     l4550:
 12822  002C6E  AE2A               	btfss	(___fldiv@b+2)^0,7,c
 12823  002C70  EF3C  F016         	goto	u4971
 12824  002C74  EF3E  F016         	goto	u4970
 12825  002C78                     u4971:
 12826  002C78  EF22  F016         	goto	l4544
 12827  002C7C                     u4970:
 12828  002C7C  0E00               	movlw	0
 12829  002C7E  6E40               	movwf	___fldiv@aexp^0,c
 12830  002C80  AE3E               	btfss	(___fldiv@grs+3)^0,7,c
 12831  002C82  EF45  F016         	goto	u4981
 12832  002C86  EF47  F016         	goto	u4980
 12833  002C8A                     u4981:
 12834  002C8A  EF6B  F016         	goto	l1207
 12835  002C8E                     u4980:
 12836  002C8E  0EFF               	movlw	255
 12837  002C90  143B               	andwf	___fldiv@grs^0,w,c
 12838  002C92  6E30               	movwf	??___fldiv^0,c
 12839  002C94  0EFF               	movlw	255
 12840  002C96  143C               	andwf	(___fldiv@grs+1)^0,w,c
 12841  002C98  6E31               	movwf	(??___fldiv+1)^0,c
 12842  002C9A  0EFF               	movlw	255
 12843  002C9C  143D               	andwf	(___fldiv@grs+2)^0,w,c
 12844  002C9E  6E32               	movwf	(??___fldiv+2)^0,c
 12845  002CA0  0E7F               	movlw	127
 12846  002CA2  143E               	andwf	(___fldiv@grs+3)^0,w,c
 12847  002CA4  6E33               	movwf	(??___fldiv+3)^0,c
 12848  002CA6  5030               	movf	??___fldiv^0,w,c
 12849  002CA8  1031               	iorwf	(??___fldiv+1)^0,w,c
 12850  002CAA  1032               	iorwf	(??___fldiv+2)^0,w,c
 12851  002CAC  1033               	iorwf	(??___fldiv+3)^0,w,c
 12852  002CAE  B4D8               	btfsc	status,2,c
 12853  002CB0  EF5C  F016         	goto	u4991
 12854  002CB4  EF5E  F016         	goto	u4990
 12855  002CB8                     u4991:
 12856  002CB8  EF62  F016         	goto	l1208
 12857  002CBC                     u4990:
 12858  002CBC                     l4558:
 12859  002CBC  0E01               	movlw	1
 12860  002CBE  6E40               	movwf	___fldiv@aexp^0,c
 12861  002CC0  EF6B  F016         	goto	l1207
 12862  002CC4                     l1208:
 12863  002CC4  A028               	btfss	___fldiv@b^0,0,c
 12864  002CC6  EF67  F016         	goto	u5001
 12865  002CCA  EF69  F016         	goto	u5000
 12866  002CCE                     u5001:
 12867  002CCE  EF6B  F016         	goto	l1207
 12868  002CD2                     u5000:
 12869  002CD2  EF5E  F016         	goto	l4558
 12870  002CD6                     l1207:
 12871  002CD6  5040               	movf	___fldiv@aexp^0,w,c
 12872  002CD8  B4D8               	btfsc	status,2,c
 12873  002CDA  EF71  F016         	goto	u5011
 12874  002CDE  EF73  F016         	goto	u5010
 12875  002CE2                     u5011:
 12876  002CE2  EF97  F016         	goto	l4570
 12877  002CE6                     u5010:
 12878  002CE6  0E01               	movlw	1
 12879  002CE8  2628               	addwf	___fldiv@b^0,f,c
 12880  002CEA  0E00               	movlw	0
 12881  002CEC  2229               	addwfc	(___fldiv@b+1)^0,f,c
 12882  002CEE  222A               	addwfc	(___fldiv@b+2)^0,f,c
 12883  002CF0  222B               	addwfc	(___fldiv@b+3)^0,f,c
 12884  002CF2  A02B               	btfss	(___fldiv@b+3)^0,0,c
 12885  002CF4  EF7E  F016         	goto	u5021
 12886  002CF8  EF80  F016         	goto	u5020
 12887  002CFC                     u5021:
 12888  002CFC  EF97  F016         	goto	l4570
 12889  002D00                     u5020:
 12890  002D00  C028  F030         	movff	___fldiv@b,??___fldiv
 12891  002D04  C029  F031         	movff	___fldiv@b+1,??___fldiv+1
 12892  002D08  C02A  F032         	movff	___fldiv@b+2,??___fldiv+2
 12893  002D0C  C02B  F033         	movff	___fldiv@b+3,??___fldiv+3
 12894  002D10  3433               	rlcf	(??___fldiv+3)^0,w,c
 12895  002D12  3233               	rrcf	(??___fldiv+3)^0,f,c
 12896  002D14  3232               	rrcf	(??___fldiv+2)^0,f,c
 12897  002D16  3231               	rrcf	(??___fldiv+1)^0,f,c
 12898  002D18  3230               	rrcf	??___fldiv^0,f,c
 12899  002D1A  C030  F028         	movff	??___fldiv,___fldiv@b
 12900  002D1E  C031  F029         	movff	??___fldiv+1,___fldiv@b+1
 12901  002D22  C032  F02A         	movff	??___fldiv+2,___fldiv@b+2
 12902  002D26  C033  F02B         	movff	??___fldiv+3,___fldiv@b+3
 12903  002D2A  4A39               	infsnz	___fldiv@new_exp^0,f,c
 12904  002D2C  2A3A               	incf	(___fldiv@new_exp+1)^0,f,c
 12905  002D2E                     l4570:
 12906  002D2E  BE3A               	btfsc	(___fldiv@new_exp+1)^0,7,c
 12907  002D30  EFA2  F016         	goto	u5031
 12908  002D34  503A               	movf	(___fldiv@new_exp+1)^0,w,c
 12909  002D36  E108               	bnz	u5030
 12910  002D38  2839               	incf	___fldiv@new_exp^0,w,c
 12911  002D3A  A0D8               	btfss	status,0,c
 12912  002D3C  EFA2  F016         	goto	u5031
 12913  002D40  EFA4  F016         	goto	u5030
 12914  002D44                     u5031:
 12915  002D44  EFAF  F016         	goto	l4574
 12916  002D48                     u5030:
 12917  002D48  0E00               	movlw	0
 12918  002D4A  6E3A               	movwf	(___fldiv@new_exp+1)^0,c
 12919  002D4C  6839               	setf	___fldiv@new_exp^0,c
 12920  002D4E  0E00               	movlw	0
 12921  002D50  6E28               	movwf	___fldiv@b^0,c
 12922  002D52  0E00               	movlw	0
 12923  002D54  6E29               	movwf	(___fldiv@b+1)^0,c
 12924  002D56  0E00               	movlw	0
 12925  002D58  6E2A               	movwf	(___fldiv@b+2)^0,c
 12926  002D5A  0E00               	movlw	0
 12927  002D5C  6E2B               	movwf	(___fldiv@b+3)^0,c
 12928  002D5E                     l4574:
 12929  002D5E  BE3A               	btfsc	(___fldiv@new_exp+1)^0,7,c
 12930  002D60  EFBC  F016         	goto	u5040
 12931  002D64  503A               	movf	(___fldiv@new_exp+1)^0,w,c
 12932  002D66  E106               	bnz	u5041
 12933  002D68  0439               	decf	___fldiv@new_exp^0,w,c
 12934  002D6A  B0D8               	btfsc	status,0,c
 12935  002D6C  EFBA  F016         	goto	u5041
 12936  002D70  EFBC  F016         	goto	u5040
 12937  002D74                     u5041:
 12938  002D74  EFCA  F016         	goto	l4578
 12939  002D78                     u5040:
 12940  002D78  0E00               	movlw	0
 12941  002D7A  6E3A               	movwf	(___fldiv@new_exp+1)^0,c
 12942  002D7C  0E00               	movlw	0
 12943  002D7E  6E39               	movwf	___fldiv@new_exp^0,c
 12944  002D80  0E00               	movlw	0
 12945  002D82  6E28               	movwf	___fldiv@b^0,c
 12946  002D84  0E00               	movlw	0
 12947  002D86  6E29               	movwf	(___fldiv@b+1)^0,c
 12948  002D88  0E00               	movlw	0
 12949  002D8A  6E2A               	movwf	(___fldiv@b+2)^0,c
 12950  002D8C  0E00               	movlw	0
 12951  002D8E  6E2B               	movwf	(___fldiv@b+3)^0,c
 12952  002D90  0E00               	movlw	0
 12953  002D92  6E38               	movwf	___fldiv@sign^0,c
 12954  002D94                     l4578:
 12955  002D94  C039  F03F         	movff	___fldiv@new_exp,___fldiv@bexp
 12956  002D98  A03F               	btfss	___fldiv@bexp^0,0,c
 12957  002D9A  EFD1  F016         	goto	u5051
 12958  002D9E  EFD3  F016         	goto	u5050
 12959  002DA2                     u5051:
 12960  002DA2  EFD6  F016         	goto	l4584
 12961  002DA6                     u5050:
 12962  002DA6  8E2A               	bsf	(___fldiv@b+2)^0,7,c
 12963  002DA8  EFD7  F016         	goto	l4586
 12964  002DAC                     l4584:
 12965  002DAC  9E2A               	bcf	(___fldiv@b+2)^0,7,c
 12966  002DAE                     l4586:
 12967  002DAE  90D8               	bcf	status,0,c
 12968  002DB0  303F               	rrcf	___fldiv@bexp^0,w,c
 12969  002DB2  6E2B               	movwf	(___fldiv@b+3)^0,c
 12970  002DB4  EF8D  F015         	goto	l4500
 12971  002DB8                     l1194:
 12972  002DB8  0012               	return		;funcret
 12973  002DBA                     __end_of___fldiv:
 12974                           	callstack 0
 12975                           
 12976 ;; *************** function _LED_C *****************
 12977 ;; Defined at:
 12978 ;;		line 193 in file "color.c"
 12979 ;; Parameters:    Size  Location     Type
 12980 ;;		None
 12981 ;; Auto vars:     Size  Location     Type
 12982 ;;		None
 12983 ;; Return value:  Size  Location     Type
 12984 ;;                  1    wreg      void 
 12985 ;; Registers used:
 12986 ;;		wreg
 12987 ;; Tracked objects:
 12988 ;;		On entry : 0/0
 12989 ;;		On exit  : 0/0
 12990 ;;		Unchanged: 0/0
 12991 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12992 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12993 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12994 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12995 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12996 ;;Total ram usage:        2 bytes
 12997 ;; Hardware stack levels used: 1
 12998 ;; Hardware stack levels required when called: 1
 12999 ;; This function calls:
 13000 ;;		Nothing
 13001 ;; This function is called by:
 13002 ;;		_calibrate_white
 13003 ;;		_color_data_collection
 13004 ;;		_amb_light_measure
 13005 ;;		_detect_wall
 13006 ;;		_test_function
 13007 ;; This function uses a non-reentrant model
 13008 ;;
 13009                           
 13010                           	psect	text60
 13011  005C0A                     __ptext60:
 13012                           	callstack 0
 13013  005C0A                     _LED_C:
 13014                           	callstack 27
 13015  005C0A                     
 13016                           ;color.c: 195:     LATGbits.LATG1 = 1;
 13017  005C0A  827F               	bsf	127,1,c	;volatile
 13018                           
 13019                           ;color.c: 196:     LATFbits.LATF7 = 1;
 13020  005C0C  8E7E               	bsf	126,7,c	;volatile
 13021                           
 13022                           ;color.c: 197:     LATAbits.LATA4 = 1;
 13023  005C0E  8879               	bsf	121,4,c	;volatile
 13024  005C10                     
 13025                           ;color.c: 198:     _delay((unsigned long)((200)*(64000000/4000.0)));
 13026  005C10  0E11               	movlw	17
 13027  005C12  6E02               	movwf	(??_LED_C+1)^0,c
 13028  005C14  0E3C               	movlw	60
 13029  005C16  6E01               	movwf	??_LED_C^0,c
 13030  005C18  0ECB               	movlw	203
 13031  005C1A                     u6467:
 13032  005C1A  2EE8               	decfsz	wreg,f,c
 13033  005C1C  D7FE               	bra	u6467
 13034  005C1E  2E01               	decfsz	??_LED_C^0,f,c
 13035  005C20  D7FC               	bra	u6467
 13036  005C22  2E02               	decfsz	(??_LED_C+1)^0,f,c
 13037  005C24  D7FA               	bra	u6467
 13038  005C26  F000               	nop	
 13039  005C28  0012               	return		;funcret
 13040  005C2A                     __end_of_LED_C:
 13041                           	callstack 0
 13042                           
 13043 ;; *************** function _pin_init *****************
 13044 ;; Defined at:
 13045 ;;		line 14 in file "color.c"
 13046 ;; Parameters:    Size  Location     Type
 13047 ;;		None
 13048 ;; Auto vars:     Size  Location     Type
 13049 ;;		None
 13050 ;; Return value:  Size  Location     Type
 13051 ;;                  1    wreg      void 
 13052 ;; Registers used:
 13053 ;;		None
 13054 ;; Tracked objects:
 13055 ;;		On entry : 0/0
 13056 ;;		On exit  : 0/0
 13057 ;;		Unchanged: 0/0
 13058 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13059 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13060 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13061 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13062 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13063 ;;Total ram usage:        0 bytes
 13064 ;; Hardware stack levels used: 1
 13065 ;; Hardware stack levels required when called: 1
 13066 ;; This function calls:
 13067 ;;		Nothing
 13068 ;; This function is called by:
 13069 ;;		_main
 13070 ;; This function uses a non-reentrant model
 13071 ;;
 13072                           
 13073                           	psect	text61
 13074  005A4C                     __ptext61:
 13075                           	callstack 0
 13076  005A4C                     _pin_init:
 13077                           	callstack 29
 13078  005A4C                     
 13079                           ;color.c: 16:     TRISFbits.TRISF2=1;
 13080  005A4C  8486               	bsf	134,2,c	;volatile
 13081                           
 13082                           ;color.c: 17:     ANSELFbits.ANSELF2=0;
 13083  005A4E  010E               	movlb	14	; () banked
 13084  005A50  95B4               	bcf	180,2,b	;volatile
 13085                           
 13086                           ;color.c: 18:     TRISFbits.TRISF3=1;
 13087  005A52  8686               	bsf	134,3,c	;volatile
 13088                           
 13089                           ;color.c: 19:     ANSELFbits.ANSELF3=0;
 13090  005A54  97B4               	bcf	180,3,b	;volatile
 13091                           
 13092                           ;color.c: 22:     TRISDbits.TRISD7 = 0;
 13093  005A56  9E84               	bcf	132,7,c	;volatile
 13094                           
 13095                           ;color.c: 23:     LATDbits.LATD7 = 0;
 13096  005A58  9E7C               	bcf	124,7,c	;volatile
 13097                           
 13098                           ;color.c: 24:     TRISHbits.TRISH3 = 0;
 13099  005A5A  9688               	bcf	136,3,c	;volatile
 13100                           
 13101                           ;color.c: 25:     LATHbits.LATH3 = 0;
 13102  005A5C  9680               	bcf	128,3,c	;volatile
 13103                           
 13104                           ;color.c: 28:     TRISGbits.TRISG1 = 0;
 13105  005A5E  9287               	bcf	135,1,c	;volatile
 13106                           
 13107                           ;color.c: 29:     TRISFbits.TRISF7 = 0;
 13108  005A60  9E86               	bcf	134,7,c	;volatile
 13109                           
 13110                           ;color.c: 30:     TRISAbits.TRISA4 = 0;
 13111  005A62  9881               	bcf	129,4,c	;volatile
 13112                           
 13113                           ;color.c: 32:     LATGbits.LATG1 = 1;
 13114  005A64  827F               	bsf	127,1,c	;volatile
 13115                           
 13116                           ;color.c: 33:     LATFbits.LATF7 = 1;
 13117  005A66  8E7E               	bsf	126,7,c	;volatile
 13118                           
 13119                           ;color.c: 34:     LATAbits.LATA4 = 1;
 13120  005A68  8879               	bsf	121,4,c	;volatile
 13121                           
 13122                           ;color.c: 37:     TRISHbits.TRISH1=0;
 13123  005A6A  9288               	bcf	136,1,c	;volatile
 13124                           
 13125                           ;color.c: 38:     TRISDbits.TRISD4=0;
 13126  005A6C  9884               	bcf	132,4,c	;volatile
 13127                           
 13128                           ;color.c: 39:     TRISDbits.TRISD3=0;
 13129  005A6E  9684               	bcf	132,3,c	;volatile
 13130                           
 13131                           ;color.c: 40:     TRISFbits.TRISF0=0;
 13132  005A70  9086               	bcf	134,0,c	;volatile
 13133                           
 13134                           ;color.c: 41:     TRISHbits.TRISH0=0;
 13135  005A72  9088               	bcf	136,0,c	;volatile
 13136                           
 13137                           ;color.c: 43:     LATHbits.LATH1 = 0;
 13138  005A74  9280               	bcf	128,1,c	;volatile
 13139                           
 13140                           ;color.c: 44:     LATDbits.LATD4 = 0;
 13141  005A76  987C               	bcf	124,4,c	;volatile
 13142                           
 13143                           ;color.c: 45:     LATDbits.LATD3 = 0;
 13144  005A78  967C               	bcf	124,3,c	;volatile
 13145                           
 13146                           ;color.c: 46:     LATFbits.LATF0 = 0;
 13147  005A7A  907E               	bcf	126,0,c	;volatile
 13148                           
 13149                           ;color.c: 47:     LATHbits.LATH0 = 0;
 13150  005A7C  9080               	bcf	128,0,c	;volatile
 13151  005A7E                     
 13152                           ; BSR set to: 14
 13153  005A7E  0012               	return		;funcret
 13154  005A80                     __end_of_pin_init:
 13155                           	callstack 0
 13156                           
 13157 ;; *************** function _initUSART4 *****************
 13158 ;; Defined at:
 13159 ;;		line 4 in file "serial.c"
 13160 ;; Parameters:    Size  Location     Type
 13161 ;;		None
 13162 ;; Auto vars:     Size  Location     Type
 13163 ;;		None
 13164 ;; Return value:  Size  Location     Type
 13165 ;;                  1    wreg      void 
 13166 ;; Registers used:
 13167 ;;		wreg, status,2
 13168 ;; Tracked objects:
 13169 ;;		On entry : 0/0
 13170 ;;		On exit  : 0/0
 13171 ;;		Unchanged: 0/0
 13172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13173 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13174 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13175 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13176 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13177 ;;Total ram usage:        0 bytes
 13178 ;; Hardware stack levels used: 1
 13179 ;; Hardware stack levels required when called: 1
 13180 ;; This function calls:
 13181 ;;		Nothing
 13182 ;; This function is called by:
 13183 ;;		_main
 13184 ;; This function uses a non-reentrant model
 13185 ;;
 13186                           
 13187                           	psect	text62
 13188  005C4A                     __ptext62:
 13189                           	callstack 0
 13190  005C4A                     _initUSART4:
 13191                           	callstack 29
 13192  005C4A                     
 13193                           ;serial.c: 8:     RC0PPS = 0x12;
 13194  005C4A  0E12               	movlw	18
 13195  005C4C  010E               	movlb	14	; () banked
 13196  005C4E  6F62               	movwf	98,b	;volatile
 13197                           
 13198                           ;serial.c: 9:     RX4PPS = 0x11;
 13199  005C50  0E11               	movlw	17
 13200  005C52  6F15               	movwf	21,b	;volatile
 13201  005C54                     
 13202                           ; BSR set to: 14
 13203                           ;serial.c: 11:     BAUD4CONbits.BRG16 = 0;
 13204  005C54  97E9               	bcf	233,3,b	;volatile
 13205  005C56                     
 13206                           ; BSR set to: 14
 13207                           ;serial.c: 12:     TX4STAbits.BRGH = 0;
 13208  005C56  95E8               	bcf	232,2,b	;volatile
 13209                           
 13210                           ;serial.c: 13:     SP4BRGL = 51;
 13211  005C58  0E33               	movlw	51
 13212  005C5A  6FE5               	movwf	229,b	;volatile
 13213                           
 13214                           ;serial.c: 15:     SP4BRGH = 0;
 13215  005C5C  0E00               	movlw	0
 13216  005C5E  6FE6               	movwf	230,b	;volatile
 13217  005C60                     
 13218                           ; BSR set to: 14
 13219                           ;serial.c: 17:     RC4STAbits.CREN = 1;
 13220  005C60  89E7               	bsf	231,4,b	;volatile
 13221  005C62                     
 13222                           ; BSR set to: 14
 13223                           ;serial.c: 18:     TX4STAbits.TXEN = 1;
 13224  005C62  8BE8               	bsf	232,5,b	;volatile
 13225  005C64                     
 13226                           ; BSR set to: 14
 13227                           ;serial.c: 19:     RC4STAbits.SPEN = 1;
 13228  005C64  8FE7               	bsf	231,7,b	;volatile
 13229  005C66                     
 13230                           ; BSR set to: 14
 13231  005C66  0012               	return		;funcret
 13232  005C68                     __end_of_initUSART4:
 13233                           	callstack 0
 13234                           
 13235 ;; *************** function _initDCmotors_parameter *****************
 13236 ;; Defined at:
 13237 ;;		line 37 in file "dc_motor.c"
 13238 ;; Parameters:    Size  Location     Type
 13239 ;;  motorL          2    0[COMRAM] PTR struct DC_motor
 13240 ;;		 -> main@motorL(9), 
 13241 ;;  motorR          2    2[COMRAM] PTR struct DC_motor
 13242 ;;		 -> main@motorR(9), 
 13243 ;; Auto vars:     Size  Location     Type
 13244 ;;		None
 13245 ;; Return value:  Size  Location     Type
 13246 ;;                  1    wreg      void 
 13247 ;; Registers used:
 13248 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13249 ;; Tracked objects:
 13250 ;;		On entry : 0/0
 13251 ;;		On exit  : 0/0
 13252 ;;		Unchanged: 0/0
 13253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13254 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13255 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13256 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13257 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13258 ;;Total ram usage:        4 bytes
 13259 ;; Hardware stack levels used: 1
 13260 ;; Hardware stack levels required when called: 1
 13261 ;; This function calls:
 13262 ;;		Nothing
 13263 ;; This function is called by:
 13264 ;;		_main
 13265 ;; This function uses a non-reentrant model
 13266 ;;
 13267                           
 13268                           	psect	text63
 13269  004FB4                     __ptext63:
 13270                           	callstack 0
 13271  004FB4                     _initDCmotors_parameter:
 13272                           	callstack 29
 13273  004FB4                     
 13274                           ;dc_motor.c: 39:     motorL->power = 0;
 13275  004FB4  C001  FFD9         	movff	initDCmotors_parameter@motorL,fsr2l
 13276  004FB8  C002  FFDA         	movff	initDCmotors_parameter@motorL+1,fsr2h
 13277  004FBC  0E00               	movlw	0
 13278  004FBE  6EDF               	movwf	indf2,c
 13279  004FC0                     
 13280                           ;dc_motor.c: 40:     motorL->direction = 1;
 13281  004FC0  EE20 F001          	lfsr	2,1
 13282  004FC4  5001               	movf	initDCmotors_parameter@motorL^0,w,c
 13283  004FC6  26D9               	addwf	fsr2l,f,c
 13284  004FC8  5002               	movf	(initDCmotors_parameter@motorL+1)^0,w,c
 13285  004FCA  22DA               	addwfc	fsr2h,f,c
 13286  004FCC  0E01               	movlw	1
 13287  004FCE  6EDF               	movwf	indf2,c
 13288  004FD0                     
 13289                           ;dc_motor.c: 41:     motorL->dutyHighByte = (unsigned char *)(&PWM6DCH);
 13290  004FD0  EE20 F002          	lfsr	2,2
 13291  004FD4  5001               	movf	initDCmotors_parameter@motorL^0,w,c
 13292  004FD6  26D9               	addwf	fsr2l,f,c
 13293  004FD8  5002               	movf	(initDCmotors_parameter@motorL+1)^0,w,c
 13294  004FDA  22DA               	addwfc	fsr2h,f,c
 13295  004FDC  0EA3               	movlw	163
 13296  004FDE  6EDE               	movwf	postinc2,c
 13297  004FE0  0E0F               	movlw	15
 13298  004FE2  6EDD               	movwf	postdec2,c
 13299  004FE4                     
 13300                           ;dc_motor.c: 42:     motorL->dir_LAT = (unsigned char *)(&LATE);
 13301  004FE4  EE20 F004          	lfsr	2,4
 13302  004FE8  5001               	movf	initDCmotors_parameter@motorL^0,w,c
 13303  004FEA  26D9               	addwf	fsr2l,f,c
 13304  004FEC  5002               	movf	(initDCmotors_parameter@motorL+1)^0,w,c
 13305  004FEE  22DA               	addwfc	fsr2h,f,c
 13306  004FF0  0E7D               	movlw	125
 13307  004FF2  6EDE               	movwf	postinc2,c
 13308  004FF4  0E0F               	movlw	15
 13309  004FF6  6EDD               	movwf	postdec2,c
 13310  004FF8                     
 13311                           ;dc_motor.c: 43:     motorL->dir_pin = 4;
 13312  004FF8  EE20 F006          	lfsr	2,6
 13313  004FFC  5001               	movf	initDCmotors_parameter@motorL^0,w,c
 13314  004FFE  26D9               	addwf	fsr2l,f,c
 13315  005000  5002               	movf	(initDCmotors_parameter@motorL+1)^0,w,c
 13316  005002  22DA               	addwfc	fsr2h,f,c
 13317  005004  0E04               	movlw	4
 13318  005006  6EDF               	movwf	indf2,c
 13319  005008                     
 13320                           ;dc_motor.c: 44:     motorL->PWMperiod = 199;
 13321  005008  EE20 F007          	lfsr	2,7
 13322  00500C  5001               	movf	initDCmotors_parameter@motorL^0,w,c
 13323  00500E  26D9               	addwf	fsr2l,f,c
 13324  005010  5002               	movf	(initDCmotors_parameter@motorL+1)^0,w,c
 13325  005012  22DA               	addwfc	fsr2h,f,c
 13326  005014  0EC7               	movlw	199
 13327  005016  6EDE               	movwf	postinc2,c
 13328  005018  0E00               	movlw	0
 13329  00501A  6EDD               	movwf	postdec2,c
 13330  00501C                     
 13331                           ;dc_motor.c: 47:     motorR->power = 0;
 13332  00501C  C003  FFD9         	movff	initDCmotors_parameter@motorR,fsr2l
 13333  005020  C004  FFDA         	movff	initDCmotors_parameter@motorR+1,fsr2h
 13334  005024  0E00               	movlw	0
 13335  005026  6EDF               	movwf	indf2,c
 13336                           
 13337                           ;dc_motor.c: 48:     motorR->direction = 1;
 13338  005028  EE20 F001          	lfsr	2,1
 13339  00502C  5003               	movf	initDCmotors_parameter@motorR^0,w,c
 13340  00502E  26D9               	addwf	fsr2l,f,c
 13341  005030  5004               	movf	(initDCmotors_parameter@motorR+1)^0,w,c
 13342  005032  22DA               	addwfc	fsr2h,f,c
 13343  005034  0E01               	movlw	1
 13344  005036  6EDF               	movwf	indf2,c
 13345                           
 13346                           ;dc_motor.c: 49:     motorR->dutyHighByte = (unsigned char *)(&PWM7DCH);
 13347  005038  EE20 F002          	lfsr	2,2
 13348  00503C  5003               	movf	initDCmotors_parameter@motorR^0,w,c
 13349  00503E  26D9               	addwf	fsr2l,f,c
 13350  005040  5004               	movf	(initDCmotors_parameter@motorR+1)^0,w,c
 13351  005042  22DA               	addwfc	fsr2h,f,c
 13352  005044  0EA0               	movlw	160
 13353  005046  6EDE               	movwf	postinc2,c
 13354  005048  0E0F               	movlw	15
 13355  00504A  6EDD               	movwf	postdec2,c
 13356                           
 13357                           ;dc_motor.c: 50:     motorR->dir_LAT = (unsigned char *)(&LATG);
 13358  00504C  EE20 F004          	lfsr	2,4
 13359  005050  5003               	movf	initDCmotors_parameter@motorR^0,w,c
 13360  005052  26D9               	addwf	fsr2l,f,c
 13361  005054  5004               	movf	(initDCmotors_parameter@motorR+1)^0,w,c
 13362  005056  22DA               	addwfc	fsr2h,f,c
 13363  005058  0E7F               	movlw	127
 13364  00505A  6EDE               	movwf	postinc2,c
 13365  00505C  0E0F               	movlw	15
 13366  00505E  6EDD               	movwf	postdec2,c
 13367                           
 13368                           ;dc_motor.c: 51:     motorR->dir_pin = 6;
 13369  005060  EE20 F006          	lfsr	2,6
 13370  005064  5003               	movf	initDCmotors_parameter@motorR^0,w,c
 13371  005066  26D9               	addwf	fsr2l,f,c
 13372  005068  5004               	movf	(initDCmotors_parameter@motorR+1)^0,w,c
 13373  00506A  22DA               	addwfc	fsr2h,f,c
 13374  00506C  0E06               	movlw	6
 13375  00506E  6EDF               	movwf	indf2,c
 13376                           
 13377                           ;dc_motor.c: 52:     motorR->PWMperiod = 199;
 13378  005070  EE20 F007          	lfsr	2,7
 13379  005074  5003               	movf	initDCmotors_parameter@motorR^0,w,c
 13380  005076  26D9               	addwf	fsr2l,f,c
 13381  005078  5004               	movf	(initDCmotors_parameter@motorR+1)^0,w,c
 13382  00507A  22DA               	addwfc	fsr2h,f,c
 13383  00507C  0EC7               	movlw	199
 13384  00507E  6EDE               	movwf	postinc2,c
 13385  005080  0E00               	movlw	0
 13386  005082  6EDD               	movwf	postdec2,c
 13387  005084  0012               	return		;funcret
 13388  005086                     __end_of_initDCmotors_parameter:
 13389                           	callstack 0
 13390                           
 13391 ;; *************** function _initDCmotorsPWM *****************
 13392 ;; Defined at:
 13393 ;;		line 7 in file "dc_motor.c"
 13394 ;; Parameters:    Size  Location     Type
 13395 ;;  PWMperiod       2    0[COMRAM] int 
 13396 ;; Auto vars:     Size  Location     Type
 13397 ;;		None
 13398 ;; Return value:  Size  Location     Type
 13399 ;;                  1    wreg      void 
 13400 ;; Registers used:
 13401 ;;		wreg, status,2
 13402 ;; Tracked objects:
 13403 ;;		On entry : 0/0
 13404 ;;		On exit  : 0/0
 13405 ;;		Unchanged: 0/0
 13406 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13407 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13408 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13409 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13410 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13411 ;;Total ram usage:        2 bytes
 13412 ;; Hardware stack levels used: 1
 13413 ;; Hardware stack levels required when called: 1
 13414 ;; This function calls:
 13415 ;;		Nothing
 13416 ;; This function is called by:
 13417 ;;		_main
 13418 ;; This function uses a non-reentrant model
 13419 ;;
 13420                           
 13421                           	psect	text64
 13422  0058EA                     __ptext64:
 13423                           	callstack 0
 13424  0058EA                     _initDCmotorsPWM:
 13425                           	callstack 29
 13426  0058EA                     
 13427                           ;dc_motor.c: 10:     TRISEbits.TRISE2=0;
 13428  0058EA  9485               	bcf	133,2,c	;volatile
 13429                           
 13430                           ;dc_motor.c: 11:     TRISCbits.TRISC7=0;
 13431  0058EC  9E83               	bcf	131,7,c	;volatile
 13432                           
 13433                           ;dc_motor.c: 12:     TRISGbits.TRISG6=0;
 13434  0058EE  9C87               	bcf	135,6,c	;volatile
 13435                           
 13436                           ;dc_motor.c: 13:     TRISEbits.TRISE4=0;
 13437  0058F0  9885               	bcf	133,4,c	;volatile
 13438                           
 13439                           ;dc_motor.c: 14:     LATEbits.LATE2=0;
 13440  0058F2  947D               	bcf	125,2,c	;volatile
 13441                           
 13442                           ;dc_motor.c: 15:     LATCbits.LATC7=0;
 13443  0058F4  9E7B               	bcf	123,7,c	;volatile
 13444                           
 13445                           ;dc_motor.c: 16:     LATGbits.LATG6=0;
 13446  0058F6  9C7F               	bcf	127,6,c	;volatile
 13447                           
 13448                           ;dc_motor.c: 17:     LATEbits.LATE4=0;
 13449  0058F8  987D               	bcf	125,4,c	;volatile
 13450  0058FA                     
 13451                           ;dc_motor.c: 20:     T2CONbits.CKPS=0b011;
 13452  0058FA  50BD               	movf	189,w,c	;volatile
 13453  0058FC  0B8F               	andlw	-113
 13454  0058FE  0930               	iorlw	48
 13455  005900  6EBD               	movwf	189,c	;volatile
 13456                           
 13457                           ;dc_motor.c: 21:     T2HLTbits.MODE=0b00000;
 13458  005902  0EE0               	movlw	-32
 13459  005904  16BE               	andwf	190,f,c	;volatile
 13460                           
 13461                           ;dc_motor.c: 22:     T2CLKCONbits.CS=0b0001;
 13462  005906  50BF               	movf	191,w,c	;volatile
 13463  005908  0BF0               	andlw	-16
 13464  00590A  0901               	iorlw	1
 13465  00590C  6EBF               	movwf	191,c	;volatile
 13466                           
 13467                           ;dc_motor.c: 25:     T2PR=200-1;
 13468  00590E  0EC7               	movlw	199
 13469  005910  6EBC               	movwf	188,c	;volatile
 13470  005912                     
 13471                           ;dc_motor.c: 26:     T2CONbits.ON=1;
 13472  005912  8EBD               	bsf	189,7,c	;volatile
 13473                           
 13474                           ;dc_motor.c: 28:     RE2PPS=0x0A;
 13475  005914  0E0A               	movlw	10
 13476  005916  010E               	movlb	14	; () banked
 13477  005918  6F74               	movwf	116,b	;volatile
 13478                           
 13479                           ;dc_motor.c: 29:     RC7PPS=0x0B;
 13480  00591A  0E0B               	movlw	11
 13481  00591C  6F69               	movwf	105,b	;volatile
 13482                           
 13483                           ;dc_motor.c: 31:     PWM6DCH=0;
 13484  00591E  0E00               	movlw	0
 13485  005920  6EA3               	movwf	163,c	;volatile
 13486                           
 13487                           ;dc_motor.c: 32:     PWM7DCH=0;
 13488  005922  0E00               	movlw	0
 13489  005924  6EA0               	movwf	160,c	;volatile
 13490  005926                     
 13491                           ; BSR set to: 14
 13492                           ;dc_motor.c: 34:     PWM6CONbits.EN = 1;
 13493  005926  8EA4               	bsf	164,7,c	;volatile
 13494  005928                     
 13495                           ; BSR set to: 14
 13496                           ;dc_motor.c: 35:     PWM7CONbits.EN = 1;
 13497  005928  8EA1               	bsf	161,7,c	;volatile
 13498  00592A                     
 13499                           ; BSR set to: 14
 13500  00592A  0012               	return		;funcret
 13501  00592C                     __end_of_initDCmotorsPWM:
 13502                           	callstack 0
 13503                           
 13504 ;; *************** function _color_click_init *****************
 13505 ;; Defined at:
 13506 ;;		line 90 in file "color.c"
 13507 ;; Parameters:    Size  Location     Type
 13508 ;;		None
 13509 ;; Auto vars:     Size  Location     Type
 13510 ;;		None
 13511 ;; Return value:  Size  Location     Type
 13512 ;;                  1    wreg      void 
 13513 ;; Registers used:
 13514 ;;		wreg, status,2, status,0, cstack
 13515 ;; Tracked objects:
 13516 ;;		On entry : 0/0
 13517 ;;		On exit  : 0/0
 13518 ;;		Unchanged: 0/0
 13519 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13520 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13521 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13522 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13523 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13524 ;;Total ram usage:        1 bytes
 13525 ;; Hardware stack levels used: 1
 13526 ;; Hardware stack levels required when called: 4
 13527 ;; This function calls:
 13528 ;;		_I2C_2_Master_Init
 13529 ;;		_color_writetoaddr
 13530 ;; This function is called by:
 13531 ;;		_main
 13532 ;; This function uses a non-reentrant model
 13533 ;;
 13534                           
 13535                           	psect	text65
 13536  005A80                     __ptext65:
 13537                           	callstack 0
 13538  005A80                     _color_click_init:
 13539                           	callstack 26
 13540  005A80                     
 13541                           ;color.c: 93:     I2C_2_Master_Init();
 13542  005A80  EC89  F02D         	call	_I2C_2_Master_Init	;wreg free
 13543  005A84                     
 13544                           ;color.c: 95:  color_writetoaddr(0x00, 0x01);
 13545  005A84  0E01               	movlw	1
 13546  005A86  6E03               	movwf	color_writetoaddr@value^0,c
 13547  005A88  0E00               	movlw	0
 13548  005A8A  EC15  F02E         	call	_color_writetoaddr
 13549  005A8E                     
 13550                           ;color.c: 96:     _delay((unsigned long)((3)*(64000000/4000.0)));
 13551  005A8E  0E3F               	movlw	63
 13552  005A90  6E05               	movwf	??_color_click_init^0,c
 13553  005A92  0E55               	movlw	85
 13554  005A94                     u6477:
 13555  005A94  2EE8               	decfsz	wreg,f,c
 13556  005A96  D7FE               	bra	u6477
 13557  005A98  2E05               	decfsz	??_color_click_init^0,f,c
 13558  005A9A  D7FC               	bra	u6477
 13559  005A9C  F000               	nop	
 13560  005A9E                     
 13561                           ;color.c: 97:  color_writetoaddr(0x00, 0x03);
 13562  005A9E  0E03               	movlw	3
 13563  005AA0  6E03               	movwf	color_writetoaddr@value^0,c
 13564  005AA2  0E00               	movlw	0
 13565  005AA4  EC15  F02E         	call	_color_writetoaddr
 13566  005AA8                     
 13567                           ;color.c: 98:  color_writetoaddr(0x01, 0xD5);
 13568  005AA8  0ED5               	movlw	213
 13569  005AAA  6E03               	movwf	color_writetoaddr@value^0,c
 13570  005AAC  0E01               	movlw	1
 13571  005AAE  EC15  F02E         	call	_color_writetoaddr
 13572  005AB2  0012               	return		;funcret
 13573  005AB4                     __end_of_color_click_init:
 13574                           	callstack 0
 13575                           
 13576 ;; *************** function _color_writetoaddr *****************
 13577 ;; Defined at:
 13578 ;;		line 101 in file "color.c"
 13579 ;; Parameters:    Size  Location     Type
 13580 ;;  address         1    wreg     unsigned char 
 13581 ;;  value           1    2[COMRAM] unsigned char 
 13582 ;; Auto vars:     Size  Location     Type
 13583 ;;  address         1    3[COMRAM] unsigned char 
 13584 ;; Return value:  Size  Location     Type
 13585 ;;                  1    wreg      void 
 13586 ;; Registers used:
 13587 ;;		wreg, status,2, status,0, cstack
 13588 ;; Tracked objects:
 13589 ;;		On entry : 0/0
 13590 ;;		On exit  : 0/0
 13591 ;;		Unchanged: 0/0
 13592 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13593 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13594 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13595 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13596 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13597 ;;Total ram usage:        2 bytes
 13598 ;; Hardware stack levels used: 1
 13599 ;; Hardware stack levels required when called: 3
 13600 ;; This function calls:
 13601 ;;		_I2C_2_Master_Start
 13602 ;;		_I2C_2_Master_Stop
 13603 ;;		_I2C_2_Master_Write
 13604 ;; This function is called by:
 13605 ;;		_color_click_init
 13606 ;; This function uses a non-reentrant model
 13607 ;;
 13608                           
 13609                           	psect	text66
 13610  005C2A                     __ptext66:
 13611                           	callstack 0
 13612  005C2A                     _color_writetoaddr:
 13613                           	callstack 26
 13614                           
 13615                           ;incstack = 0
 13616                           ;color_writetoaddr@address stored from wreg
 13617  005C2A  6E04               	movwf	color_writetoaddr@address^0,c
 13618  005C2C                     
 13619                           ;color.c: 102:     I2C_2_Master_Start();
 13620  005C2C  EC65  F02E         	call	_I2C_2_Master_Start	;wreg free
 13621                           
 13622                           ;color.c: 103:     I2C_2_Master_Write(0x52 | 0x00);
 13623  005C30  0E52               	movlw	82
 13624  005C32  EC4F  F02E         	call	_I2C_2_Master_Write
 13625                           
 13626                           ;color.c: 104:     I2C_2_Master_Write(0x80 | address);
 13627  005C36  5004               	movf	color_writetoaddr@address^0,w,c
 13628  005C38  0980               	iorlw	128
 13629  005C3A  EC4F  F02E         	call	_I2C_2_Master_Write
 13630                           
 13631                           ;color.c: 105:     I2C_2_Master_Write(value);
 13632  005C3E  5003               	movf	color_writetoaddr@value^0,w,c
 13633  005C40  EC4F  F02E         	call	_I2C_2_Master_Write
 13634                           
 13635                           ;color.c: 106:     I2C_2_Master_Stop();
 13636  005C44  EC60  F02E         	call	_I2C_2_Master_Stop	;wreg free
 13637  005C48  0012               	return		;funcret
 13638  005C4A                     __end_of_color_writetoaddr:
 13639                           	callstack 0
 13640                           
 13641 ;; *************** function _I2C_2_Master_Write *****************
 13642 ;; Defined at:
 13643 ;;		line 45 in file "i2c.c"
 13644 ;; Parameters:    Size  Location     Type
 13645 ;;  data_byte       1    wreg     unsigned char 
 13646 ;; Auto vars:     Size  Location     Type
 13647 ;;  data_byte       1    1[COMRAM] unsigned char 
 13648 ;; Return value:  Size  Location     Type
 13649 ;;                  1    wreg      void 
 13650 ;; Registers used:
 13651 ;;		wreg, status,2, status,0, cstack
 13652 ;; Tracked objects:
 13653 ;;		On entry : 0/0
 13654 ;;		On exit  : 0/0
 13655 ;;		Unchanged: 0/0
 13656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13657 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13658 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13659 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13660 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13661 ;;Total ram usage:        1 bytes
 13662 ;; Hardware stack levels used: 1
 13663 ;; Hardware stack levels required when called: 2
 13664 ;; This function calls:
 13665 ;;		_I2C_2_Master_Idle
 13666 ;; This function is called by:
 13667 ;;		_color_writetoaddr
 13668 ;;		_color_read_Red
 13669 ;;		_color_read_Blue
 13670 ;;		_color_read_Green
 13671 ;;		_color_read_Clear
 13672 ;; This function uses a non-reentrant model
 13673 ;;
 13674                           
 13675                           	psect	text67
 13676  005C9E                     __ptext67:
 13677                           	callstack 0
 13678  005C9E                     _I2C_2_Master_Write:
 13679                           	callstack 24
 13680                           
 13681                           ;incstack = 0
 13682                           ;I2C_2_Master_Write@data_byte stored from wreg
 13683  005C9E  6E02               	movwf	I2C_2_Master_Write@data_byte^0,c
 13684  005CA0                     
 13685                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
 13686  005CA0  EC9E  F02D         	call	_I2C_2_Master_Idle	;wreg free
 13687  005CA4                     
 13688                           ;i2c.c: 48:   SSP2BUF = data_byte;
 13689  005CA4  C002  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
 13690  005CA8  0012               	return		;funcret
 13691  005CAA                     __end_of_I2C_2_Master_Write:
 13692                           	callstack 0
 13693                           
 13694 ;; *************** function _I2C_2_Master_Stop *****************
 13695 ;; Defined at:
 13696 ;;		line 39 in file "i2c.c"
 13697 ;; Parameters:    Size  Location     Type
 13698 ;;		None
 13699 ;; Auto vars:     Size  Location     Type
 13700 ;;		None
 13701 ;; Return value:  Size  Location     Type
 13702 ;;                  1    wreg      void 
 13703 ;; Registers used:
 13704 ;;		wreg, status,2, status,0, cstack
 13705 ;; Tracked objects:
 13706 ;;		On entry : 0/0
 13707 ;;		On exit  : 0/0
 13708 ;;		Unchanged: 0/0
 13709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13710 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13711 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13712 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13713 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13714 ;;Total ram usage:        0 bytes
 13715 ;; Hardware stack levels used: 1
 13716 ;; Hardware stack levels required when called: 2
 13717 ;; This function calls:
 13718 ;;		_I2C_2_Master_Idle
 13719 ;; This function is called by:
 13720 ;;		_color_writetoaddr
 13721 ;;		_color_read_Red
 13722 ;;		_color_read_Blue
 13723 ;;		_color_read_Green
 13724 ;;		_color_read_Clear
 13725 ;; This function uses a non-reentrant model
 13726 ;;
 13727                           
 13728                           	psect	text68
 13729  005CC0                     __ptext68:
 13730                           	callstack 0
 13731  005CC0                     _I2C_2_Master_Stop:
 13732                           	callstack 24
 13733  005CC0                     
 13734                           ;i2c.c: 41:   I2C_2_Master_Idle();
 13735  005CC0  EC9E  F02D         	call	_I2C_2_Master_Idle	;wreg free
 13736  005CC4                     
 13737                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
 13738  005CC4  010E               	movlb	14	; () banked
 13739  005CC6  85DA               	bsf	218,2,b	;volatile
 13740  005CC8                     
 13741                           ; BSR set to: 14
 13742  005CC8  0012               	return		;funcret
 13743  005CCA                     __end_of_I2C_2_Master_Stop:
 13744                           	callstack 0
 13745                           
 13746 ;; *************** function _I2C_2_Master_Start *****************
 13747 ;; Defined at:
 13748 ;;		line 27 in file "i2c.c"
 13749 ;; Parameters:    Size  Location     Type
 13750 ;;		None
 13751 ;; Auto vars:     Size  Location     Type
 13752 ;;		None
 13753 ;; Return value:  Size  Location     Type
 13754 ;;                  1    wreg      void 
 13755 ;; Registers used:
 13756 ;;		wreg, status,2, status,0, cstack
 13757 ;; Tracked objects:
 13758 ;;		On entry : 0/0
 13759 ;;		On exit  : 0/0
 13760 ;;		Unchanged: 0/0
 13761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13762 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13763 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13764 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13765 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13766 ;;Total ram usage:        0 bytes
 13767 ;; Hardware stack levels used: 1
 13768 ;; Hardware stack levels required when called: 2
 13769 ;; This function calls:
 13770 ;;		_I2C_2_Master_Idle
 13771 ;; This function is called by:
 13772 ;;		_color_writetoaddr
 13773 ;;		_color_read_Red
 13774 ;;		_color_read_Blue
 13775 ;;		_color_read_Green
 13776 ;;		_color_read_Clear
 13777 ;; This function uses a non-reentrant model
 13778 ;;
 13779                           
 13780                           	psect	text69
 13781  005CCA                     __ptext69:
 13782                           	callstack 0
 13783  005CCA                     _I2C_2_Master_Start:
 13784                           	callstack 24
 13785  005CCA                     
 13786                           ;i2c.c: 29:   I2C_2_Master_Idle();
 13787  005CCA  EC9E  F02D         	call	_I2C_2_Master_Idle	;wreg free
 13788  005CCE                     
 13789                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
 13790  005CCE  010E               	movlb	14	; () banked
 13791  005CD0  81DA               	bsf	218,0,b	;volatile
 13792  005CD2                     
 13793                           ; BSR set to: 14
 13794  005CD2  0012               	return		;funcret
 13795  005CD4                     __end_of_I2C_2_Master_Start:
 13796                           	callstack 0
 13797                           
 13798 ;; *************** function _I2C_2_Master_Idle *****************
 13799 ;; Defined at:
 13800 ;;		line 22 in file "i2c.c"
 13801 ;; Parameters:    Size  Location     Type
 13802 ;;		None
 13803 ;; Auto vars:     Size  Location     Type
 13804 ;;		None
 13805 ;; Return value:  Size  Location     Type
 13806 ;;                  1    wreg      void 
 13807 ;; Registers used:
 13808 ;;		wreg, status,2, status,0
 13809 ;; Tracked objects:
 13810 ;;		On entry : 0/0
 13811 ;;		On exit  : 0/0
 13812 ;;		Unchanged: 0/0
 13813 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13814 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13815 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13816 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13817 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13818 ;;Total ram usage:        1 bytes
 13819 ;; Hardware stack levels used: 1
 13820 ;; Hardware stack levels required when called: 1
 13821 ;; This function calls:
 13822 ;;		Nothing
 13823 ;; This function is called by:
 13824 ;;		_I2C_2_Master_Start
 13825 ;;		_I2C_2_Master_RepStart
 13826 ;;		_I2C_2_Master_Stop
 13827 ;;		_I2C_2_Master_Write
 13828 ;;		_I2C_2_Master_Read
 13829 ;; This function uses a non-reentrant model
 13830 ;;
 13831                           
 13832                           	psect	text70
 13833  005B3C                     __ptext70:
 13834                           	callstack 0
 13835  005B3C                     _I2C_2_Master_Idle:
 13836                           	callstack 24
 13837  005B3C                     l182:
 13838  005B3C  010E               	movlb	14	; () banked
 13839  005B3E  B5D8               	btfsc	216,2,b	;volatile
 13840  005B40  EFA4  F02D         	goto	u3381
 13841  005B44  EFA6  F02D         	goto	u3380
 13842  005B48                     u3381:
 13843  005B48  EF9E  F02D         	goto	l182
 13844  005B4C                     u3380:
 13845  005B4C                     
 13846                           ; BSR set to: 14
 13847  005B4C  CEDA F001          	movff	3802,??_I2C_2_Master_Idle	;volatile
 13848  005B50  0E1F               	movlw	31
 13849  005B52  1601               	andwf	??_I2C_2_Master_Idle^0,f,c
 13850  005B54  A4D8               	btfss	status,2,c
 13851  005B56  EFAF  F02D         	goto	u3391
 13852  005B5A  EFB1  F02D         	goto	u3390
 13853  005B5E                     u3391:
 13854  005B5E  EF9E  F02D         	goto	l182
 13855  005B62                     u3390:
 13856  005B62                     
 13857                           ; BSR set to: 14
 13858  005B62  0012               	return		;funcret
 13859  005B64                     __end_of_I2C_2_Master_Idle:
 13860                           	callstack 0
 13861                           
 13862 ;; *************** function _I2C_2_Master_Init *****************
 13863 ;; Defined at:
 13864 ;;		line 4 in file "i2c.c"
 13865 ;; Parameters:    Size  Location     Type
 13866 ;;		None
 13867 ;; Auto vars:     Size  Location     Type
 13868 ;;		None
 13869 ;; Return value:  Size  Location     Type
 13870 ;;                  1    wreg      void 
 13871 ;; Registers used:
 13872 ;;		wreg, status,2
 13873 ;; Tracked objects:
 13874 ;;		On entry : 0/0
 13875 ;;		On exit  : 0/0
 13876 ;;		Unchanged: 0/0
 13877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13878 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13879 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13880 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13881 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13882 ;;Total ram usage:        0 bytes
 13883 ;; Hardware stack levels used: 1
 13884 ;; Hardware stack levels required when called: 1
 13885 ;; This function calls:
 13886 ;;		Nothing
 13887 ;; This function is called by:
 13888 ;;		_color_click_init
 13889 ;; This function uses a non-reentrant model
 13890 ;;
 13891                           
 13892                           	psect	text71
 13893  005B12                     __ptext71:
 13894                           	callstack 0
 13895  005B12                     _I2C_2_Master_Init:
 13896                           	callstack 28
 13897  005B12                     
 13898                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
 13899  005B12  010E               	movlb	14	; () banked
 13900  005B14  51D9               	movf	217,w,b	;volatile
 13901  005B16  0BF0               	andlw	-16
 13902  005B18  0908               	iorlw	8
 13903  005B1A  6FD9               	movwf	217,b	;volatile
 13904  005B1C                     
 13905                           ; BSR set to: 14
 13906                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
 13907  005B1C  8BD9               	bsf	217,5,b	;volatile
 13908                           
 13909                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
 13910  005B1E  0E9F               	movlw	159
 13911  005B20  6FD6               	movwf	214,b	;volatile
 13912  005B22                     
 13913                           ; BSR set to: 14
 13914                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
 13915  005B22  8A84               	bsf	132,5,c	;volatile
 13916  005B24                     
 13917                           ; BSR set to: 14
 13918                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
 13919  005B24  8C84               	bsf	132,6,c	;volatile
 13920  005B26                     
 13921                           ; BSR set to: 14
 13922                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
 13923  005B26  9BA7               	bcf	167,5,b	;volatile
 13924  005B28                     
 13925                           ; BSR set to: 14
 13926                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
 13927  005B28  9DA7               	bcf	167,6,b	;volatile
 13928                           
 13929                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
 13930  005B2A  0E1D               	movlw	29
 13931  005B2C  6F1D               	movwf	29,b	;volatile
 13932                           
 13933                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
 13934  005B2E  0E1E               	movlw	30
 13935  005B30  6F1C               	movwf	28,b	;volatile
 13936                           
 13937                           ;i2c.c: 18:   RD5PPS=0x1C;
 13938  005B32  0E1C               	movlw	28
 13939  005B34  6F6F               	movwf	111,b	;volatile
 13940                           
 13941                           ;i2c.c: 19:   RD6PPS=0x1B;
 13942  005B36  0E1B               	movlw	27
 13943  005B38  6F70               	movwf	112,b	;volatile
 13944  005B3A                     
 13945                           ; BSR set to: 14
 13946  005B3A  0012               	return		;funcret
 13947  005B3C                     __end_of_I2C_2_Master_Init:
 13948                           	callstack 0
 13949                           
 13950 ;; *************** function _Timer0_init *****************
 13951 ;; Defined at:
 13952 ;;		line 7 in file "timers.c"
 13953 ;; Parameters:    Size  Location     Type
 13954 ;;		None
 13955 ;; Auto vars:     Size  Location     Type
 13956 ;;		None
 13957 ;; Return value:  Size  Location     Type
 13958 ;;                  1    wreg      void 
 13959 ;; Registers used:
 13960 ;;		wreg, status,2
 13961 ;; Tracked objects:
 13962 ;;		On entry : 0/0
 13963 ;;		On exit  : 0/0
 13964 ;;		Unchanged: 0/0
 13965 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13966 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13967 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13968 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13969 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13970 ;;Total ram usage:        0 bytes
 13971 ;; Hardware stack levels used: 1
 13972 ;; Hardware stack levels required when called: 1
 13973 ;; This function calls:
 13974 ;;		Nothing
 13975 ;; This function is called by:
 13976 ;;		_main
 13977 ;; This function uses a non-reentrant model
 13978 ;;
 13979                           
 13980                           	psect	text72
 13981  005C68                     __ptext72:
 13982                           	callstack 0
 13983  005C68                     _Timer0_init:
 13984                           	callstack 29
 13985  005C68                     
 13986                           ;timers.c: 9:     T0CON1bits.T0CS=0b010;
 13987  005C68  50D6               	movf	214,w,c	;volatile
 13988  005C6A  0B1F               	andlw	-225
 13989  005C6C  0940               	iorlw	64
 13990  005C6E  6ED6               	movwf	214,c	;volatile
 13991  005C70                     
 13992                           ;timers.c: 10:     T0CON1bits.T0ASYNC=1;
 13993  005C70  88D6               	bsf	214,4,c	;volatile
 13994                           
 13995                           ;timers.c: 11:     T0CON1bits.T0CKPS=0b0101;
 13996  005C72  50D6               	movf	214,w,c	;volatile
 13997  005C74  0BF0               	andlw	-16
 13998  005C76  0905               	iorlw	5
 13999  005C78  6ED6               	movwf	214,c	;volatile
 14000  005C7A                     
 14001                           ;timers.c: 12:     T0CON0bits.T016BIT=1;
 14002  005C7A  88D5               	bsf	213,4,c	;volatile
 14003                           
 14004                           ;timers.c: 16:     TMR0H=0b00111100;
 14005  005C7C  0E3C               	movlw	60
 14006  005C7E  6ED4               	movwf	212,c	;volatile
 14007                           
 14008                           ;timers.c: 17:     TMR0L=0b10101111;
 14009  005C80  0EAF               	movlw	175
 14010  005C82  6ED3               	movwf	211,c	;volatile
 14011  005C84  0012               	return		;funcret
 14012  005C86                     __end_of_Timer0_init:
 14013                           	callstack 0
 14014                           
 14015 ;; *************** function _Interrupts_init *****************
 14016 ;; Defined at:
 14017 ;;		line 9 in file "interrupts.c"
 14018 ;; Parameters:    Size  Location     Type
 14019 ;;		None
 14020 ;; Auto vars:     Size  Location     Type
 14021 ;;		None
 14022 ;; Return value:  Size  Location     Type
 14023 ;;                  1    wreg      void 
 14024 ;; Registers used:
 14025 ;;		None
 14026 ;; Tracked objects:
 14027 ;;		On entry : 0/0
 14028 ;;		On exit  : 0/0
 14029 ;;		Unchanged: 0/0
 14030 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14031 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14032 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14033 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14034 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14035 ;;Total ram usage:        0 bytes
 14036 ;; Hardware stack levels used: 1
 14037 ;; Hardware stack levels required when called: 1
 14038 ;; This function calls:
 14039 ;;		Nothing
 14040 ;; This function is called by:
 14041 ;;		_main
 14042 ;; This function uses a non-reentrant model
 14043 ;;
 14044                           
 14045                           	psect	text73
 14046  005CAA                     __ptext73:
 14047                           	callstack 0
 14048  005CAA                     _Interrupts_init:
 14049                           	callstack 29
 14050  005CAA  8EF2               	bsf	242,7,c	;volatile
 14051                           
 14052                           ;interrupts.c: 11:     INTCONbits.IPEN=1;
 14053  005CAC  8AF2               	bsf	242,5,c	;volatile
 14054                           
 14055                           ;interrupts.c: 12:     INTCONbits.GIEL=1;
 14056  005CAE  8CF2               	bsf	242,6,c	;volatile
 14057                           
 14058                           ;interrupts.c: 13:  PIE0bits.TMR0IE = 1;
 14059  005CB0  010E               	movlb	14	; () banked
 14060  005CB2  8B29               	bsf	41,5,b	;volatile
 14061  005CB4                     
 14062                           ; BSR set to: 14
 14063  005CB4  0012               	return		;funcret
 14064  005CB6                     __end_of_Interrupts_init:
 14065                           	callstack 0
 14066                           
 14067 ;; *************** function _HighISR *****************
 14068 ;; Defined at:
 14069 ;;		line 21 in file "interrupts.c"
 14070 ;; Parameters:    Size  Location     Type
 14071 ;;		None
 14072 ;; Auto vars:     Size  Location     Type
 14073 ;;		None
 14074 ;; Return value:  Size  Location     Type
 14075 ;;                  1    wreg      void 
 14076 ;; Registers used:
 14077 ;;		wreg, status,2, status,0
 14078 ;; Tracked objects:
 14079 ;;		On entry : 0/0
 14080 ;;		On exit  : 0/0
 14081 ;;		Unchanged: 0/0
 14082 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14083 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14084 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14085 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14086 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14087 ;;Total ram usage:        0 bytes
 14088 ;; Hardware stack levels used: 1
 14089 ;; This function calls:
 14090 ;;		Nothing
 14091 ;; This function is called by:
 14092 ;;		Interrupt level 2
 14093 ;; This function uses a non-reentrant model
 14094 ;;
 14095                           
 14096                           	psect	intcode
 14097  000008                     __pintcode:
 14098                           	callstack 0
 14099  000008                     _HighISR:
 14100                           	callstack 19
 14101                           
 14102                           ; BSR set to: 14
 14103                           ;incstack = 0
 14104  000008  825F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 14105  00000A                     
 14106                           ;interrupts.c: 23:     if(PIR0bits.TMR0IF){
 14107  00000A  010E               	movlb	14	; () banked
 14108  00000C  AB33               	btfss	51,5,b	;volatile
 14109  00000E  EF0B  F000         	goto	i2u583_41
 14110  000012  EF0D  F000         	goto	i2u583_40
 14111  000016                     i2u583_41:
 14112  000016  EF16  F000         	goto	i2l505
 14113  00001A                     i2u583_40:
 14114  00001A                     
 14115                           ; BSR set to: 14
 14116                           ;interrupts.c: 24:         TMR0H=0b00111100;
 14117  00001A  0E3C               	movlw	60
 14118  00001C  6ED4               	movwf	212,c	;volatile
 14119                           
 14120                           ;interrupts.c: 25:         TMR0L=0b10101111;
 14121  00001E  0EAF               	movlw	175
 14122  000020  6ED3               	movwf	211,c	;volatile
 14123  000022                     
 14124                           ; BSR set to: 14
 14125                           ;interrupts.c: 26:         centisecond ++;
 14126  000022  0101               	movlb	1	; () banked
 14127  000024  4B7A               	infsnz	_centisecond& (0+255),f,b
 14128  000026  2B7B               	incf	(_centisecond+1)& (0+255),f,b
 14129  000028                     
 14130                           ; BSR set to: 1
 14131                           ;interrupts.c: 27:         PIR0bits.TMR0IF = 0;
 14132  000028  010E               	movlb	14	; () banked
 14133  00002A  9B33               	bcf	51,5,b	;volatile
 14134  00002C                     i2l505:
 14135                           
 14136                           ; BSR set to: 14
 14137  00002C  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 14138  00002E  0011               	retfie		f
 14139  000030                     __end_of_HighISR:
 14140                           	callstack 0
 14141                           
 14142                           	psect	rparam
 14143  0000                     
 14144                           	psect	temp
 14145  00005F                     btemp:
 14146                           	callstack 0
 14147  00005F                     	ds	1
 14148  0000                     int$flags	set	btemp
 14149  0000                     wtemp8	set	btemp+1
 14150  0000                     ttemp5	set	btemp+1
 14151  0000                     ttemp6	set	btemp+4
 14152  0000                     ttemp7	set	btemp+8
 14153                           
 14154                           	psect	idloc
 14155                           
 14156                           ;Config register IDLOC0 @ 0x200000
 14157                           ;	unspecified, using default values
 14158  200000                     	org	2097152
 14159  200000  0FFF               	dw	4095
 14160                           
 14161                           ;Config register IDLOC1 @ 0x200002
 14162                           ;	unspecified, using default values
 14163  200002                     	org	2097154
 14164  200002  0FFF               	dw	4095
 14165                           
 14166                           ;Config register IDLOC2 @ 0x200004
 14167                           ;	unspecified, using default values
 14168  200004                     	org	2097156
 14169  200004  0FFF               	dw	4095
 14170                           
 14171                           ;Config register IDLOC3 @ 0x200006
 14172                           ;	unspecified, using default values
 14173  200006                     	org	2097158
 14174  200006  0FFF               	dw	4095
 14175                           
 14176                           ;Config register IDLOC4 @ 0x200008
 14177                           ;	unspecified, using default values
 14178  200008                     	org	2097160
 14179  200008  0FFF               	dw	4095
 14180                           
 14181                           ;Config register IDLOC5 @ 0x20000A
 14182                           ;	unspecified, using default values
 14183  20000A                     	org	2097162
 14184  20000A  0FFF               	dw	4095
 14185                           
 14186                           ;Config register IDLOC6 @ 0x20000C
 14187                           ;	unspecified, using default values
 14188  20000C                     	org	2097164
 14189  20000C  0FFF               	dw	4095
 14190                           
 14191                           ;Config register IDLOC7 @ 0x20000E
 14192                           ;	unspecified, using default values
 14193  20000E                     	org	2097166
 14194  20000E  0FFF               	dw	4095
 14195                           
 14196                           	psect	config
 14197                           
 14198                           ;Config register CONFIG1L @ 0x300000
 14199                           ;	External Oscillator mode Selection bits
 14200                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
 14201                           ;	Power-up default value for COSC bits
 14202                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
 14203  300000                     	org	3145728
 14204  300000  AA                 	db	170
 14205                           
 14206                           ;Config register CONFIG1H @ 0x300001
 14207                           ;	unspecified, using default values
 14208                           ;	Clock Out Enable bit
 14209                           ;	CLKOUTEN = 0x1, unprogrammed default
 14210                           ;	Clock Switch Enable bit
 14211                           ;	CSWEN = 0x1, unprogrammed default
 14212                           ;	Fail-Safe Clock Monitor Enable bit
 14213                           ;	FCMEN = 0x1, unprogrammed default
 14214  300001                     	org	3145729
 14215  300001  FF                 	db	255
 14216                           
 14217                           ;Config register CONFIG2L @ 0x300002
 14218                           ;	unspecified, using default values
 14219                           ;	Master Clear Enable bit
 14220                           ;	MCLRE = 0x1, unprogrammed default
 14221                           ;	Power-up Timer Enable bit
 14222                           ;	PWRTE = 0x1, unprogrammed default
 14223                           ;	Low-power BOR enable bit
 14224                           ;	LPBOREN = 0x1, unprogrammed default
 14225                           ;	Brown-out Reset Enable bits
 14226                           ;	BOREN = 0x3, unprogrammed default
 14227  300002                     	org	3145730
 14228  300002  FF                 	db	255
 14229                           
 14230                           ;Config register CONFIG2H @ 0x300003
 14231                           ;	unspecified, using default values
 14232                           ;	Brown Out Reset Voltage selection bits
 14233                           ;	BORV = 0x3, unprogrammed default
 14234                           ;	ZCD Disable bit
 14235                           ;	ZCD = 0x1, unprogrammed default
 14236                           ;	PPSLOCK bit One-Way Set Enable bit
 14237                           ;	PPS1WAY = 0x1, unprogrammed default
 14238                           ;	Stack Full/Underflow Reset Enable bit
 14239                           ;	STVREN = 0x1, unprogrammed default
 14240                           ;	Debugger Enable bit
 14241                           ;	DEBUG = 0x1, unprogrammed default
 14242                           ;	Extended Instruction Set Enable bit
 14243                           ;	XINST = 0x1, unprogrammed default
 14244  300003                     	org	3145731
 14245  300003  FF                 	db	255
 14246                           
 14247                           ;Config register CONFIG3L @ 0x300004
 14248                           ;	WDT Period Select bits
 14249                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 14250                           ;	WDT operating mode
 14251                           ;	WDTE = OFF, WDT Disabled
 14252  300004                     	org	3145732
 14253  300004  9F                 	db	159
 14254                           
 14255                           ;Config register CONFIG3H @ 0x300005
 14256                           ;	unspecified, using default values
 14257                           ;	WDT Window Select bits
 14258                           ;	WDTCWS = 0x7, unprogrammed default
 14259                           ;	WDT input clock selector
 14260                           ;	WDTCCS = 0x7, unprogrammed default
 14261  300005                     	org	3145733
 14262  300005  FF                 	db	255
 14263                           
 14264                           ;Config register CONFIG4L @ 0x300006
 14265                           ;	unspecified, using default values
 14266                           ;	Write Protection Block 0
 14267                           ;	WRT0 = 0x1, unprogrammed default
 14268                           ;	Write Protection Block 1
 14269                           ;	WRT1 = 0x1, unprogrammed default
 14270                           ;	Write Protection Block 2
 14271                           ;	WRT2 = 0x1, unprogrammed default
 14272                           ;	Write Protection Block 3
 14273                           ;	WRT3 = 0x1, unprogrammed default
 14274                           ;	Write Protection Block 3
 14275                           ;	WRT4 = 0x1, unprogrammed default
 14276                           ;	Write Protection Block 3
 14277                           ;	WRT5 = 0x1, unprogrammed default
 14278                           ;	Write Protection Block 3
 14279                           ;	WRT6 = 0x1, unprogrammed default
 14280                           ;	Write Protection Block 3
 14281                           ;	WRT7 = 0x1, unprogrammed default
 14282  300006                     	org	3145734
 14283  300006  FF                 	db	255
 14284                           
 14285                           ;Config register CONFIG4H @ 0x300007
 14286                           ;	unspecified, using default values
 14287                           ;	Configuration Register Write Protection bit
 14288                           ;	WRTC = 0x1, unprogrammed default
 14289                           ;	Boot Block Write Protection bit
 14290                           ;	WRTB = 0x1, unprogrammed default
 14291                           ;	Data EEPROM Write Protection bit
 14292                           ;	WRTD = 0x1, unprogrammed default
 14293                           ;	Scanner Enable bit
 14294                           ;	SCANE = 0x1, unprogrammed default
 14295                           ;	Low Voltage Programming Enable bit
 14296                           ;	LVP = 0x1, unprogrammed default
 14297  300007                     	org	3145735
 14298  300007  FF                 	db	255
 14299                           
 14300                           ;Config register CONFIG5L @ 0x300008
 14301                           ;	unspecified, using default values
 14302                           ;	UserNVM Program Memory Code Protection bit
 14303                           ;	CP = 0x1, unprogrammed default
 14304                           ;	DataNVM Memory Code Protection bit
 14305                           ;	CPD = 0x1, unprogrammed default
 14306  300008                     	org	3145736
 14307  300008  FF                 	db	255
 14308                           
 14309                           ;Config register CONFIG5H @ 0x300009
 14310                           ;	unspecified, using default values
 14311  300009                     	org	3145737
 14312  300009  FF                 	db	255
 14313                           
 14314                           ;Config register CONFIG6L @ 0x30000A
 14315                           ;	unspecified, using default values
 14316                           ;	Table Read Protection Block 0
 14317                           ;	EBTR0 = 0x1, unprogrammed default
 14318                           ;	Table Read Protection Block 1
 14319                           ;	EBTR1 = 0x1, unprogrammed default
 14320                           ;	Table Read Protection Block 2
 14321                           ;	EBTR2 = 0x1, unprogrammed default
 14322                           ;	Table Read Protection Block 3
 14323                           ;	EBTR3 = 0x1, unprogrammed default
 14324                           ;	Table Read Protection Block 4
 14325                           ;	EBTR4 = 0x1, unprogrammed default
 14326                           ;	Table Read Protection Block 5
 14327                           ;	EBTR5 = 0x1, unprogrammed default
 14328                           ;	Table Read Protection Block 6
 14329                           ;	EBTR6 = 0x1, unprogrammed default
 14330                           ;	Table Read Protection Block 7
 14331                           ;	EBTR7 = 0x1, unprogrammed default
 14332  30000A                     	org	3145738
 14333  30000A  FF                 	db	255
 14334                           
 14335                           ;Config register CONFIG6H @ 0x30000B
 14336                           ;	unspecified, using default values
 14337                           ;	Boot Block Table Read Protection bit
 14338                           ;	EBTRB = 0x1, unprogrammed default
 14339  30000B                     	org	3145739
 14340  30000B  FF                 	db	255
 14341                           tosu	equ	0xFFF
 14342                           tosh	equ	0xFFE
 14343                           tosl	equ	0xFFD
 14344                           stkptr	equ	0xFFC
 14345                           pclatu	equ	0xFFB
 14346                           pclath	equ	0xFFA
 14347                           pcl	equ	0xFF9
 14348                           tblptru	equ	0xFF8
 14349                           tblptrh	equ	0xFF7
 14350                           tblptrl	equ	0xFF6
 14351                           tablat	equ	0xFF5
 14352                           prodh	equ	0xFF4
 14353                           prodl	equ	0xFF3
 14354                           indf0	equ	0xFEF
 14355                           postinc0	equ	0xFEE
 14356                           postdec0	equ	0xFED
 14357                           preinc0	equ	0xFEC
 14358                           plusw0	equ	0xFEB
 14359                           fsr0h	equ	0xFEA
 14360                           fsr0l	equ	0xFE9
 14361                           wreg	equ	0xFE8
 14362                           indf1	equ	0xFE7
 14363                           postinc1	equ	0xFE6
 14364                           postdec1	equ	0xFE5
 14365                           preinc1	equ	0xFE4
 14366                           plusw1	equ	0xFE3
 14367                           fsr1h	equ	0xFE2
 14368                           fsr1l	equ	0xFE1
 14369                           bsr	equ	0xFE0
 14370                           indf2	equ	0xFDF
 14371                           postinc2	equ	0xFDE
 14372                           postdec2	equ	0xFDD
 14373                           preinc2	equ	0xFDC
 14374                           plusw2	equ	0xFDB
 14375                           fsr2h	equ	0xFDA
 14376                           fsr2l	equ	0xFD9
 14377                           status	equ	0xFD8

Data Sizes:
    Strings     14
    Constant    4
    Data        2
    BSS         166
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     94      94
    BANK0           160    148     158
    BANK1           256     70     228
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    amb_light_measure@amb	PTR struct color_rgb size(2) Largest target is 8
		 -> main@rgb(BANK1[8]), main@amb(BANK1[8]), 

    detect_wall@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), 

    detect_wall@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK1[9]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_2(CODE[6]), STR_1(CODE[14]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 14
		 -> STR_2(CODE[6]), STR_1(CODE[14]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_2(CODE[6]), STR_1(CODE[14]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 100
		 -> color_predict@buf(BANK0[100]), color_display@buf(BANK0[100]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S2519$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S2519$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    calibration_motor@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), 

    calibration_motor@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK1[9]), 

    test_function@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), 

    test_function@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK1[9]), 

    test_function@m	PTR struct color_rgb size(2) Largest target is 8
		 -> main@rgb(BANK1[8]), 

    test_function@w	PTR struct white_card size(2) Largest target is 28
		 -> main@white(BANK1[28]), 

    test_action@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), 

    test_action@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK1[9]), 

    setup@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), 

    setup@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK1[9]), 

    setup@amb	PTR struct color_rgb size(2) Largest target is 8
		 -> main@amb(BANK1[8]), 

    setup@white	PTR struct white_card size(2) Largest target is 28
		 -> main@white(BANK1[28]), 

    goback@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), 

    goback@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK1[9]), 

    turning_action@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), 

    turning_action@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK1[9]), 

    short_burst@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), 

    short_burst@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK1[9]), 

    motorR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    motorR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhllll[1]), PWM6DCH(BITBIGSFRhhllll[1]), 

    motorL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    motorL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhllll[1]), PWM6DCH(BITBIGSFRhhllll[1]), 

    sendStringSerial4@string	PTR unsigned char  size(2) Largest target is 100
		 -> color_predict@buf(BANK0[100]), color_display@buf(BANK0[100]), 

    fullSpeedBack@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    fullSpeedBack@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhllll[1]), PWM6DCH(BITBIGSFRhhllll[1]), 

    fullSpeedBack@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), 

    fullSpeedBack@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    fullSpeedBack@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhllll[1]), PWM6DCH(BITBIGSFRhhllll[1]), 

    fullSpeedBack@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK1[9]), 

    fullSpeedAhead@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    fullSpeedAhead@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhllll[1]), PWM6DCH(BITBIGSFRhhllll[1]), 

    fullSpeedAhead@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), 

    fullSpeedAhead@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    fullSpeedAhead@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhllll[1]), PWM6DCH(BITBIGSFRhhllll[1]), 

    fullSpeedAhead@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK1[9]), 

    turn45@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turn45@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhllll[1]), PWM6DCH(BITBIGSFRhhllll[1]), 

    turn45@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), 

    turn45@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turn45@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhllll[1]), PWM6DCH(BITBIGSFRhhllll[1]), 

    turn45@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK1[9]), 

    stop@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    stop@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhllll[1]), PWM6DCH(BITBIGSFRhhllll[1]), 

    stop@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), 

    stop@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    stop@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhllll[1]), PWM6DCH(BITBIGSFRhhllll[1]), 

    stop@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK1[9]), 

    setMotorPWM@m.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    setMotorPWM@m.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhllll[1]), PWM6DCH(BITBIGSFRhhllll[1]), 

    setMotorPWM@m	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), main@motorL(BANK1[9]), 

    initDCmotors_parameter@motorR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    initDCmotors_parameter@motorR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhllll[1]), PWM6DCH(BITBIGSFRhhllll[1]), 

    initDCmotors_parameter@motorR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK1[9]), 

    initDCmotors_parameter@motorL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    initDCmotors_parameter@motorL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhllll[1]), PWM6DCH(BITBIGSFRhhllll[1]), 

    initDCmotors_parameter@motorL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK1[9]), 

    motorR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    motorR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhllll[1]), PWM6DCH(BITBIGSFRhhllll[1]), 

    S422DC_motor$dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    motorL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    S422DC_motor$dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhllll[1]), PWM6DCH(BITBIGSFRhhllll[1]), 

    motorL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhllll[1]), PWM6DCH(BITBIGSFRhhllll[1]), 

    verify_color@w	PTR struct white_card size(2) Largest target is 28
		 -> main@white(BANK1[28]), 

    verify_color@m	PTR struct color_rgb size(2) Largest target is 8
		 -> main@rgb(BANK1[8]), 

    color_data_collection@m	PTR struct color_rgb size(2) Largest target is 8
		 -> main@rgb(BANK1[8]), 

    calibrate_white@w	PTR struct white_card size(2) Largest target is 28
		 -> main@white(BANK1[28]), 

    color_display@m	PTR struct color_rgb size(2) Largest target is 8
		 -> main@rgb(BANK1[8]), 

    detect_color@w	PTR struct white_card size(2) Largest target is 28
		 -> main@white(BANK1[28]), 

    detect_color@m	PTR struct color_rgb size(2) Largest target is 8
		 -> main@rgb(BANK1[8]), 

    read_color@m	PTR struct color_rgb size(2) Largest target is 8
		 -> main@rgb(BANK1[8]), 


Critical Paths under _main in COMRAM

    _main->_detect_color
    _verify_color->_detect_color
    _turning_action->_goback
    _goback->_turn45
    _fullSpeedBack->_stop
    _test_function->_detect_color
    _detect_wall->_lroundf
    _detect_color->_compare
    _compare->_lroundf
    _color_data_collection->_color_display
    _read_color->_color_read_Blue
    _read_color->_color_read_Clear
    _read_color->_color_read_Green
    _read_color->_color_read_Red
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _sendStringSerial4->_sendCharSerial4
    _short_burst->_stop
    _setup->_amb_light_measure
    _calibration_motor->_test_action
    _test_action->_turn45
    _turn45->_stop
    _stop->_setMotorPWM
    _fullSpeedAhead->_setMotorPWM
    _setMotorPWM->___awdiv
    ___awdiv->___wmul
    _calibrate_white->_color_read_Blue
    _calibrate_white->_color_read_Clear
    _calibrate_white->_color_read_Green
    _calibrate_white->_color_read_Red
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _amb_light_measure->_lroundf
    _lroundf->___fltol
    _roundf->___flmul
    ___flsub->___fladd
    ___flmul->___xxtofl
    ___fltol->_roundf
    _color_read_Clear->_I2C_2_Master_Read
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    ___fldiv->___flmul
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle

Critical Paths under _HighISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_test_function
    _verify_color->_detect_color
    _test_function->_color_data_collection
    _color_data_collection->_color_predict
    _color_predict->_sprintf
    _color_display->_sprintf

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                74    74      0  341795
                                            144 BANK0      4     4      0
                                              0 BANK1     70    70      0
                    _Interrupts_init
                        _Timer0_init
                   _color_click_init
                       _detect_color
                        _detect_wall
                     _fullSpeedAhead
                             _goback
                    _initDCmotorsPWM
             _initDCmotors_parameter
                         _initUSART4
                           _pin_init
                              _setup
                        _short_burst
                               _stop
                      _test_function
                     _turning_action
                       _verify_color
 ---------------------------------------------------------------------------------
 (1) _verify_color                                         9     5      4   26377
                                             25 BANK0      9     5      4
                       _detect_color
 ---------------------------------------------------------------------------------
 (1) _turning_action                                       5     1      4   54195
                                             52 COMRAM     5     1      4
                      _fullSpeedBack
                             _goback
                       _toggle_light
                             _turn45
 ---------------------------------------------------------------------------------
 (2) _goback                                               8     4      4   30491
                                             44 COMRAM     8     4      4
                     _fullSpeedAhead
                      _fullSpeedBack
                               _stop
                             _turn45
 ---------------------------------------------------------------------------------
 (3) _fullSpeedBack                                        7     2      5   10048
                                             31 COMRAM     7     2      5
                        _setMotorPWM
                               _stop
 ---------------------------------------------------------------------------------
 (1) _test_function                                       16     8      8  126482
                                            128 BANK0     16     8      8
                              _LED_C
                  _amb_light_measure
                    _calibrate_white
              _color_data_collection
                      _color_display
                      _color_predict
                       _detect_color
                        _detect_wall
                     _fullSpeedAhead
                         _read_color
                               _stop
                        _test_action
 ---------------------------------------------------------------------------------
 (2) _detect_wall                                         17    11      6   21327
                                             79 COMRAM     8     2      6
                                              0 BANK0      9     9      0
                              _LED_C
                            ___fldiv
                            ___flmul
                           ___xxtofl
                   _color_read_Clear
                            _lroundf
 ---------------------------------------------------------------------------------
 (2) _detect_color                                        33    29      4   26091
                                             86 COMRAM     8     4      4
                                              0 BANK0     25    25      0
                              _LED_B
                              _LED_G
                              _LED_R
                            ___fldiv
                            ___flmul
                           ___xxtofl
                            _compare
                            _lroundf
                         _read_color
                       _toggle_light
 ---------------------------------------------------------------------------------
 (3) _compare                                              7     1      6    1936
                                             79 COMRAM     7     1      6
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
                            _lroundf (ARG)
 ---------------------------------------------------------------------------------
 (2) _color_data_collection                                6     4      2   15691
                                             89 COMRAM     4     2      2
                                            126 BANK0      2     2      0
                              _LED_B
                              _LED_C
                              _LED_G
                              _LED_R
                      _color_display
                      _color_predict
                         _read_color
 ---------------------------------------------------------------------------------
 (3) _read_color                                           2     0      2    1148
                                             11 COMRAM     2     0      2
                    _color_read_Blue
                   _color_read_Clear
                   _color_read_Green
                     _color_read_Red
 ---------------------------------------------------------------------------------
 (2) _color_predict                                      101   101      0    6899
                                             25 BANK0    101   101      0
                  _sendStringSerial4
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _color_display                                      102   100      2    7345
                                             87 COMRAM     2     0      2
                                             25 BANK0    100   100      0
                  _sendStringSerial4
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             27    15     12    6608
                                              0 BANK0     25    13     12
                           _vfprintf
 ---------------------------------------------------------------------------------
 (4) _vfprintf                                             8     2      6    6105
                                             79 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (5) _vfpfcnvrt                                           42    36      6    5751
                                             63 COMRAM    16    10      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (6) _dtoa                                                36    26     10    4358
                                             27 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (7) _pad                                                 11     5      6    2709
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (8) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (8) _fputs                                                7     3      4    1235
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (6) _fputc                                                9     5      4     834
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (7) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (7) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (7) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (7) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (3) _sendStringSerial4                                    2     0      2     219
                                              1 COMRAM     2     0      2
                    _sendCharSerial4
 ---------------------------------------------------------------------------------
 (4) _sendCharSerial4                                      1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _short_burst                                          6     2      4    7442
                                             31 COMRAM     6     2      4
                     _fullSpeedAhead
                               _stop
 ---------------------------------------------------------------------------------
 (1) _setup                                               12     4      8   40506
                                             91 COMRAM     2     2      0
                                              0 BANK0     10     2      8
                            _LED_OFF
                  _amb_light_measure
                    _calibrate_white
                  _calibration_motor
 ---------------------------------------------------------------------------------
 (2) _calibration_motor                                    6     2      4   20131
                                             50 COMRAM     6     2      4
                        _test_action
 ---------------------------------------------------------------------------------
 (2) _test_action                                          6     2      4   19935
                                             44 COMRAM     6     2      4
                     _fullSpeedAhead
                               _stop
                             _turn45
 ---------------------------------------------------------------------------------
 (2) _turn45                                              13     7      6   12033
                                             31 COMRAM    13     7      6
                        _setMotorPWM
                               _stop
 ---------------------------------------------------------------------------------
 (3) _stop                                                 6     2      4    4035
                                             25 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (3) _fullSpeedAhead                                       5     1      4    3167
                                             25 COMRAM     5     1      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (4) _setMotorPWM                                         11     9      2    2035
                                             14 COMRAM    11     9      2
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     447
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     496
                                              6 COMRAM     8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _calibrate_white                                      4     2      2    1525
                                             11 COMRAM     4     2      2
                              _LED_B
                              _LED_C
                              _LED_G
                            _LED_OFF
                              _LED_R
                    _color_read_Blue
                   _color_read_Clear
                   _color_read_Green
                     _color_read_Red
                       _toggle_light
 ---------------------------------------------------------------------------------
 (4) _color_read_Red                                       7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (4) _color_read_Green                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (4) _color_read_Blue                                      7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _LED_R                                                2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _LED_OFF                                              2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _LED_G                                                2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _LED_B                                                2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _amb_light_measure                                   12    10      2   18434
                                             79 COMRAM    12    10      2
                              _LED_C
                            ___fldiv
                           ___xxtofl
                   _color_read_Clear
                            _lroundf
                       _toggle_light
 ---------------------------------------------------------------------------------
 (3) _toggle_light                                         5     4      1     613
                                              0 COMRAM     5     4      1
 ---------------------------------------------------------------------------------
 (3) _lroundf                                              4     0      4   12868
                                             75 COMRAM     4     0      4
                            ___fldiv (ARG)
                            ___fltol
                           ___xxtofl (ARG)
                             _roundf
 ---------------------------------------------------------------------------------
 (4) _roundf                                              26    22      4   11477
                                             39 COMRAM    26    22      4
                            ___fladd
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    3649
                                             16 COMRAM     8     0      8
                            ___fladd
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    3326
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4     197
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    3180
                                             14 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8     486
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (4) ___fltol                                             10     6      4     305
                                             65 COMRAM    10     6      4
                             _roundf (ARG)
 ---------------------------------------------------------------------------------
 (4) _color_read_Clear                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (5) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (5) _I2C_2_Master_Read                                    3     3      0      45
                                              1 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4    1758
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (3) ___fldiv                                             25    17      8    2835
                                             39 COMRAM    25    17      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) _LED_C                                                2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _pin_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initDCmotors_parameter                               4     0      4     416
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2      76
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     294
                                              4 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     294
                                              2 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (5) _I2C_2_Master_Write                                   1     1      0      22
                                              1 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (5) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (5) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (6) _I2C_2_Master_Idle                                    1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _HighISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Interrupts_init
   _Timer0_init
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
   _detect_color
     _LED_B
     _LED_G
     _LED_R
     ___fldiv
       ___flmul (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___flmul
     ___xxtofl
     _compare
       ___fldiv (ARG)
       ___flmul (ARG)
       ___xxtofl (ARG)
       _lroundf (ARG)
         ___fldiv (ARG)
         ___fltol (ARG)
           _roundf (ARG)
             ___fladd
             ___flge
             ___flmul
             ___flneg
             ___flsub
               ___fladd
         ___xxtofl (ARG)
         _roundf (ARG)
     _lroundf
     _read_color
       _color_read_Blue
         _I2C_2_Master_Read
           _I2C_2_Master_Idle
         _I2C_2_Master_RepStart
           _I2C_2_Master_Idle
         _I2C_2_Master_Start
         _I2C_2_Master_Stop
         _I2C_2_Master_Write
       _color_read_Clear
         _I2C_2_Master_Read
         _I2C_2_Master_RepStart
         _I2C_2_Master_Start
         _I2C_2_Master_Stop
         _I2C_2_Master_Write
       _color_read_Green
         _I2C_2_Master_Read
         _I2C_2_Master_RepStart
         _I2C_2_Master_Start
         _I2C_2_Master_Stop
         _I2C_2_Master_Write
       _color_read_Red
         _I2C_2_Master_Read
         _I2C_2_Master_RepStart
         _I2C_2_Master_Start
         _I2C_2_Master_Stop
         _I2C_2_Master_Write
     _toggle_light
   _detect_wall
     _LED_C
     ___fldiv
     ___flmul
     ___xxtofl
     _color_read_Clear
     _lroundf
   _fullSpeedAhead
     _setMotorPWM
       ___awdiv
         ___wmul (ARG)
       ___wmul
   _goback
     _fullSpeedAhead
     _fullSpeedBack
       _setMotorPWM
       _stop
         _setMotorPWM
     _stop
     _turn45
       _setMotorPWM
       _stop
   _initDCmotorsPWM
   _initDCmotors_parameter
   _initUSART4
   _pin_init
   _setup
     _LED_OFF
     _amb_light_measure
       _LED_C
       ___fldiv
       ___xxtofl
       _color_read_Clear
       _lroundf
       _toggle_light
     _calibrate_white
       _LED_B
       _LED_C
       _LED_G
       _LED_OFF
       _LED_R
       _color_read_Blue
       _color_read_Clear
       _color_read_Green
       _color_read_Red
       _toggle_light
     _calibration_motor
       _test_action
         _fullSpeedAhead
         _stop
         _turn45
   _short_burst
     _fullSpeedAhead
     _stop
   _stop
   _test_function
     _LED_C
     _amb_light_measure
     _calibrate_white
     _color_data_collection
       _LED_B
       _LED_C
       _LED_G
       _LED_R
       _color_display
         _sendStringSerial4
           _sendCharSerial4
         _sprintf
           _vfprintf
             _vfpfcnvrt
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                   _strlen
               _fputc
       _color_predict
         _sendStringSerial4
         _sprintf
       _read_color
     _color_display
     _color_predict
     _detect_color
     _detect_wall
     _fullSpeedAhead
     _read_color
     _stop
     _test_action
   _turning_action
     _fullSpeedBack
     _goback
     _toggle_light
     _turn45
   _verify_color
     _detect_color

 _HighISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      57        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     46      E4       7       89.1%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     94      9E       5       98.8%
BITBIGSFRlhlllh     8F      0       0      41        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5E      5E       1      100.0%
BITBIGSFRlllhhh     32      0       0      46        0.0%
BITBIGSFRlllhll     2A      0       0      50        0.0%
BITBIGSFRlllll      26      0       0      55        0.0%
BITBIGSFRlhllll     20      0       0      44        0.0%
BITBIGSFRhhhhl      1B      0       0      33        0.0%
BITBIGSFRhhlh       17      0       0      35        0.0%
BITBIGSFRhhhl       13      0       0      34        0.0%
BITBIGSFRhhlllh     11      0       0      37        0.0%
BITBIGSFRhhhhh       D      0       0      32        0.0%
BITBIGSFRllh         C      0       0      45        0.0%
BITBIGSFRlllhll      B      0       0      53        0.0%
BITBIGSFRlllhll      9      0       0      52        0.0%
BITBIGSFRlhlllh      8      0       0      42        0.0%
BITBIGSFRllllh       6      0       0      54        0.0%
BITBIGSFRlllhll      6      0       0      49        0.0%
BITBIGSFRlllhlh      5      0       0      48        0.0%
BITBIGSFRhhllll      5      0       0      38        0.0%
BITBIGSFRlllhll      3      0       0      51        0.0%
BITBIGSFRlllhhl      3      0       0      47        0.0%
BITBIGSFRhhllh       1      0       0      36        0.0%
BITBIGSFRlhllll      1      0       0      43        0.0%
BITBIGSFRlhllh       1      0       0      40        0.0%
BITBIGSFRlhlhh       1      0       0      39        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1E0      56        0.0%
DATA                 0      0     1E0       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.35 build 20211206165544 
Symbol Table                                                                                   Thu Mar 17 14:54:06 2022

                _color_read_Red 565A                    ___fldiv@aexp 0040                    ___fldiv@bexp 003F  
                  ___fldiv@sign 0038                 _color_read_Blue 56FA                   _color_predict 5AE4  
                            l55 5A7E                              l72 5C48                              l81 56F8  
                            l66 3638                              l58 3626                              l90 5BC8  
                            l75 56A8                              l84 5798                              l69 5AB2  
                            l93 5BA8                              l78 5748                              l87 5606  
                            l96 5C28                              l99 5C08                    ___awdiv@sign 000C  
              _detect_wall$2932 0060             ___wmul@multiplicand 0003                _color_read_Clear 574A  
              _color_read_Green 56AA               ??_Interrupts_init 0001                             l102 5BE8  
                           l200 58E8                             l105 59DA                             l106 59DC  
                           l132 5B10                             l140 4BDE                             l126 19E2  
                           l135 3A56                             l151 4FB0                             l152 4FB2  
                           l144 54D6                             l129 5546                             l305 4732  
                           l250 5084                             l148 4AD0                             l340 5C9C  
                           l405 36FA                             l182 5B3C                             l247 592A  
                           l191 5CBE                             l328 5C66                             l600 4DEA  
                           l185 5B62                             l257 3C2A                             l265 545A  
                           l601 4E54                             l441 58A6                             l337 5C88  
                           l194 5CC8                             l282 42C2                             l274 41FA  
                           l346 5AE2                             l179 5B3A                             l516 5C84  
                           l188 5CD2                             l612 5B88                             l604 4EBE  
                           l197 5CA8                             l453 30A8                             l294 52D8  
                           l286 42F2                             l606 4E8A                             l470 29DE  
                           l462 29E2                             l480 2A1E                             l609 4ED6  
                           l561 4788                             l570 4830                             l563 4796  
                           l476 2A10                             l573 4886                             l557 4746  
                           l726 447A                             l567 47D6                             l559 4754  
                           l578 49B4                             l499 5CB4                             l843 539C  
                           l739 45DE                             l909 4CE4                             l882 4DE8  
                           l877 4DA2                             l886 5A14               verify_color@color 0081  
              ?_calibrate_white 000C                             _abs 592C                             _pad 5150  
                           prod 000FF3                             wreg 000FE8                    ___flmul@aexp 0020  
                  ___flmul@bexp 0021                    ___flmul@sign 001B                    ___flmul@temp 0026  
                  ___flmul@prod 0022                 __end_of_LED_OFF 5BCA                    ___fltol@exp1 004B  
                          ?_abs 0013                            l1140 1BD2                            l1205 2C5E  
                          l1141 1BC0                            l1230 22CC                            l1142 1B86  
                          l1207 2CD6                            l1208 2CC4                            l1233 215E  
                          l1226 1F68                            l1322 5196                            l1243 228E  
                          l1235 21D6                            l1236 21C4                            l1157 1CEC  
                          l1149 1EA2                            l1405 267A                            l1325 51D8  
                          l1333 314A                            l1270 3F92                            l1166 1DBC  
                          l1182 57DE                            l1167 1DAA                            l1327 5214  
                          l1335 3152                            l4000 2004                            l1360 3DDE  
                          l1281 3F2A                            l1353 338C                            l1194 2DB8  
                          l1274 3ECE                            l4010 204A                            l4002 2012  
                          l1418 5A4A                            l1267 3E36                            l1371 5962  
                          l1196 2C18                            l4100 4DE6                            l4020 20B8  
                          l4012 2064                            l4004 201E                            l4030 214E  
                          l4022 20E2                            l4014 2074                            l4006 202E  
                          l1374 596A                            l1366 55A0                            l1199 2BDC  
                          l1367 55A8                            l1295 5658                            l4040 218E  
                          l4032 215C                            l4024 2118                            l4016 2090  
                          l4008 203A                            l4104 59DE                            l1288 59A4  
                          l4120 565A                            l4200 427C                            l5000 4E78  
                          l3400 5A16                            l4112 5548                            l4050 2200  
                          l4042 21BC                            l4034 216E                            l4026 2126  
                          l4018 209C                            l4106 59F4                            l4122 56A0  
                          l4202 428A                            l5010 4EC2                            l3410 42F4  
                          l1386 514E                            l1394 5822                            l3402 5A22  
                          l4114 5550                            l5020 5A9E                            l5012 5A4C  
                          l4140 5790                            l4060 2276                            l4052 222A  
                          l4036 217C                            l4028 2144                            l4108 5A04  
                          l4300 2538                            l4132 56AA                            l4220 5252  
                          l4204 42A2                            l4212 42DE                            l5004 4E98  
                          l5100 47A4                            l3420 4338                            l3412 42F8  
                          l3404 5A26                            l3500 51A2                            l4116 555E  
                          l1397 5CD6                            l5022 5AA8                            l5014 5A80  
                          l4062 2292                            l4070 22B8                            l4046 21E6  
                          l4054 222E                            l4038 2180                            l4310 266A  
                          l4302 256A                            l4126 56FA                            l4134 56F0  
                          l4230 529A                            l4222 525E                            l4206 42AE  
                          l4214 42E0                            l5006 4E9A                            l5102 47B8  
                          l5110 4814                            l3430 438E                            l3422 4358  
                          l3414 4306                            l3406 5A3E                            l3502 51B6  
                          l4118 5584                            l4150 562A                            l5030 54AE  
                          l5016 5A84                            l4072 22BC                            l4064 22A2  
                          l4056 2248                            l4048 21F2                            l4304 25D6  
                          l4320 33CC                            l4128 5740                            l4224 5276  
                          l4232 52A8                            l4216 5216                            l4208 42BE  
                          l5008 4EB0                            l5120 4862                            l5112 4822  
                          l5104 47BA                            l4160 5AC6                            l3440 4410  
                          l3432 43A2                            l3424 435C                            l3416 4326  
                          l3512 592C                            l3504 51BA                            l3600 328A  
                          l4152 5646                            l4144 5608                            l4400 5B04  
                          l5200 2E3E                            l5032 54CE                            l5024 5460  
                          l5018 5A8E                            l5050 5928                            l5042 58EA  
                          l4138 574A                            l4250 4C4A                            l4242 4C0A  
                          l4090 4D62                            l4082 4CE6                            l4066 22B0  
                          l4058 225C                            l4306 260A                            l4330 3466  
                          l4322 33E4                            l4314 3390                            l3530 52F8  
                          l3522 52DA                            l4234 52C0                            l4226 5282  
                          l4218 523A                            l5122 4866                            l5114 483E  
                          l5106 47D8                            l4162 5ACA                            l3450 445A  
                          l3442 4412                            l3434 43B0                            l3426 4368  
                          l3418 432A                            l3514 5946                            l3506 51E8  
                          l3602 32A4                            l3610 3306                            l4146 561A  
                          l5130 3FAA                            l4410 4640                            l4402 45E0  
                          l5210 2ED4                            l5202 2E72                            l5026 5478  
                          l5044 58FA                            l5060 4FF8                            l5052 4FB4  
                          l4500 2B1A                            l4260 4C7A                            l4252 4C58  
                          l4244 4C34                            l4236 4BE0                            l4092 4D70  
                          l4084 4D14                            l4068 22B2                            l3700 1AF4  
                          l4076 579A                            l4308 2646                            l4340 3528  
                          l4332 349E                            l4324 341C                            l4316 339C  
                          l3540 532C                            l3532 5306                            l3524 52DE  
                          l3516 5B64                            l4228 528E                            l4172 4184  
                          l4180 41C2                            l4164 4144                            l5124 487E  
                          l5116 4852                            l5108 47FC                            l4156 5AB4  
                          l3444 4424                            l3436 43C2                            l3428 4386  
                          l3460 44AE                            l3380 5098                            l3508 51FC  
                          l3620 334C                            l3612 3318                            l3604 32C2  
                          l4148 5622                            l5140 4002                            l5132 3FBC  
                          l4420 468C                            l4412 464C                            l4404 4604  
                          l5220 2F50                            l5212 2EEE                            l5204 2E8C  
                          l5028 5496                            l5300 3784                            l3630 5B4C  
                          l5046 5912                            l5062 5008                            l5054 4FC0  
                          l5070 5C56                            l4510 2B42                            l4502 2B1E  
                          l4270 4CA4                            l4262 4C84                            l4246 4C36  
                          l4238 4BF6                            l4094 4D82                            l4086 4D24  
                          l3710 1B08                            l3702 1AF8                            l4078 57AA  
                          l4350 35B8                            l4342 353A                            l4334 34B0  
                          l4326 342E                            l4318 33AC                            l3550 5366  
                          l3542 5334                            l3534 530E                            l3526 52EC  
                          l3518 5B80                            l4182 41DA                            l4174 419C  
                          l4190 4236                            l4166 4150                            l5118 4854  
                          l4158 5AB8                            l3438 43F0                            l3446 442A  
                          l3470 4506                            l3462 44B2                            l3454 447C  
                          l3382 50AA                            l3622 3354                            l3614 3328  
                          l3606 32DC                            l5150 404A                            l5142 4006  
                          l5134 3FC8                            l4430 46F4                            l4422 46A4  
                          l4414 4658                            l4406 461C                            l5230 2FB4  
                          l5222 2F52                            l5214 2EF0                            l5206 2E8E  
                          l5038 54D4                            l5310 37E0                            l5302 3798  
                          l5080 5C70                            l5048 5926                            l5064 501C  
                          l5056 4FD0                            l5072 5C60                            l4520 2B90  
                          l4600 3E46                            l4272 4CB4                            l4248 4C46  
                          l4096 4D90                            l4088 4D52                            l3800 1D5A  
                          l3720 1B1C                            l3712 1B0C                            l3704 1AFC  
                          l4280 22CE                            l4352 35D6                            l4344 3558  
                          l4336 34D4                            l4328 344E                            l4360 5BAA  
                          l3560 538C                            l3552 536E                            l3544 533C  
                          l3536 5312                            l3528 52F4                            l3640 3B3C  
                          l3632 3A58                            l4184 41E6                            l4176 41A8  
                          l4168 4170                            l4440 48B4                            l3448 443A  
                          l3480 4588                            l3472 451A                            l3464 44C0  
                          l3456 4480                            l3384 50B4                            l3392 57E0  
                          l3616 332E                            l3624 3364                            l3608 32F6  
                          l5160 407A                            l5152 4050                            l5144 4012  
                          l5136 3FDC                            l5128 3F98                            l4432 4706  
                          l4424 46B4                            l4416 4664                            l4408 4628  
                          l5240 3028                            l5232 2FC6                            l5224 2F64  
                          l5216 2F02                            l5208 2EA0                            l5320 3842  
                          l5312 37F8                            l5304 379E                            l5082 5C7A  
                          l5058 4FE4                            l5074 5C62                            l5066 5C4A  
                          l4370 5C10                            l4530 2BDA                            l4522 2BA0  
                          l4514 2B56                            l4506 2B32                            l4610 3E84  
                          l4602 3E5C                            l4274 4CC4                            l4258 4C70  
                          l4098 4DE0                            l3810 1D8C                            l3802 1D6A  
                          l3730 1B6E                            l3722 1B20                            l3714 1B10  
                          l3706 1B00                            l3650 19FE                            l4290 23AA  
                          l4282 22EE                            l4354 35EE                            l4346 3570  
                          l4338 34EC                            l4362 5BB0                            l3562 5394  
                          l3554 5370                            l3546 534A                            l3538 531A  
                          l3642 3B58                            l3634 3A74                            l4194 424C  
                          l4186 41F6                            l4178 41B4                            l4450 4958  
                          l4442 48D0                            l5090 4742                            l3474 4528  
                          l3482 458E                            l3466 44E0                            l3458 448E  
                          l3386 50D2                            l3378 5086                            l3394 57EC  
                          l3490 5150                            l3618 3340                            l3570 30F2  
                          l5170 40D4                            l5162 408A                            l5146 401E  
                          l5138 3FF0                            l4434 471E                            l4426 46CA  
                          l4418 4674                            l5250 3094                            l5242 305C  
                          l5234 2FFA                            l5226 2F98                            l5218 2F36  
                          l5314 3816                            l5306 37B2                            l5084 5CAA  
                          l3628 5B3C                            l3900 5CC4                            l5076 5C64  
                          l5068 5C54                            l4540 2C28                            l4532 2BE6  
                          l4524 2BA8                            l4516 2B70                            l4508 2B42  
                          l4460 2A3A                            l4620 3F0C                            l4612 3EB6  
                          l4276 4CD4                            l4268 4C98                            l3820 1DE6  
                          l3812 1DA2                            l3804 1D6C                            l3740 1BB2  
                          l3732 1B7E                            l3716 1B14                            l3708 1B04  
                          l3724 1B24                            l3660 1A32                            l3652 1A00  
                          l4292 23C6                            l4284 2336                            l4356 3624  
                          l4348 35A6                            l4372 5BEA                            l4364 5B8A  
                          l3556 5376                            l3548 5350                            l3644 3BC2  
                          l3636 3AD6                            l4196 4264                            l4188 421E  
                          l4452 4974                            l4444 48E4                            l4436 4888  
                          l5092 4744                            l3484 459E                            l3476 4556  
                          l3468 44FE                            l3388 5108                            l3396 57FE  
                          l3492 5160                            l3580 315A                            l3572 3112  
                          l4380 59A6                            l4700 135E                            l5180 412A  
                          l5172 40E4                            l5156 4068                            l5148 4032  
                          l4428 46DC                            l5244 3076                            l5236 3014  
                          l5228 2FB2                            l5316 3826                            l5308 37CC  
                          l5260 3662                            l5252 363A                            l5078 5C68  
                          l4542 2C3E                            l4550 2C6E                            l4534 2C04  
                          l4526 2BB8                            l4518 2B80                            l4470 2A6E  
                          l4462 2A3C                            l4630 3F62                            l4622 3F1A  
                          l4614 3EB8                            l4606 3E70                            l3910 58B6  
                          l3902 5CB6                            l3830 1E62                            l3822 1E20  
                          l3806 1D7A                            l3742 1BB4                            l3734 1B94  
                          l3726 1B28                            l3718 1B18                            l3670 1A64  
                          l3654 1A10                            l3662 1A3A                            l3646 19E4  
                          l4286 234A                            l4390 596C                            l4374 5BF0  
                          l4366 5B90                            l3558 537C                            l3638 3B1C  
                          l4198 4270                            l4454 49A0                            l4446 492C  
                          l4438 489C                            l5094 4762                            l5086 4734  
                          l5182 5866                            l3486 45BE                            l3478 4576  
                          l3398 5802                            l3494 5174                            l3590 3192  
                          l3582 316C                            l3574 3122                            l3566 30AA  
                          l4358 55AA                            l4382 59AA                            l4710 157E  
                          l4702 13FE                            l5174 40F8                            l5166 40A0  
                          l5158 4074                            l5246 3078                            l5238 3016  
                          l5190 2DCC                            l5318 383C                            l5270 3674  
                          l5262 3666                            l5254 363E                            ?_pad 0011  
                          l4640 5B12                            l4368 5C0A                            l4552 2C7C  
                          l4544 2C44                            l4536 2C06                            l4528 2BCC  
                          l4480 2AA0                            l4464 2A4C                            l4472 2A76  
                          l4456 2A20                            l4632 3F72                            l4624 3F38  
                          l4616 3EC4                            l4608 3E78                            l3912 58BE  
                          l3904 5CBA                            l3840 1E82                            l3832 1E66  
                          l3816 1DCC                            l3824 1E22                            l3808 1D7E  
                          l3760 1C3C                            l3752 1C04                            l3744 1BBE  
                          l3736 1BA0                            l3728 1B52                            l3680 1A9A  
                          l3672 1A6A                            l3664 1A4A                            l3656 1A20  
                          l3648 19F0                            l4296 23FE                            l4288 2386  
                          l4376 5BCA                            l4800 393C                            l3920 539E  
                          l4448 4944                            l5096 476E                            l5088 473E  
                          l5184 587A                            l3496 5182                            l3592 3198  
                          l3584 317A                            l3576 3124                            l3568 30CA  
                          l4384 59C0                            l4720 1748                            l4712 159A  
                          l4704 141A                            l5176 4112                            l5168 40B4  
                          l5248 308A                            l5192 2DDC                            l5280 36A6  
                          l5272 3678                            l5264 366A                            l5256 3642  
                          l4650 5B28                            l4642 5B1C                            l4562 2CE6  
                          l4570 2D2E                            l4554 2C80                            l4546 2C4E  
                          l4538 2C16                            l4490 2AD4                            l4482 2AA2  
                          l4474 2A86                            l4466 2A5C                            l4458 2A2C  
                          l4634 3F80                            l4626 3F3A                            l4618 3F00  
                          l3914 58E4                            l3906 58AA                            l3842 1E90  
                          l3834 1E74                            l3826 1E32                            l3818 1DD8  
                          l3762 1C40                            l3754 1C14                            l3746 1BE0  
                          l3770 1C60                            l3738 1BA4                            l3690 1AD6  
                          l3682 1AAA                            l3674 1A78                            l3666 1A50  
                          l3658 1A30                            l4298 24CC                            l4378 5BD0  
                          l4810 39B4                            l4802 3954                            l3930 53EA  
                          l3922 53A2                            l5098 4770                            l5186 5892  
                          l3498 518E                            l3594 321A                            l3586 3180  
                          l3578 313E                            l3850 3C50                            l4394 54D8  
                          l4386 59D6                            l4730 1846                            l4722 1752  
                          l4714 163E                            l4706 14BE                            l5178 4118  
                          l5194 2E10                            l5290 3704                            l5282 36A8  
                          l5274 3678                            l5266 366E                            l5258 364E  
                          l4644 5B22                            l4652 5C2C                            l4580 2D98  
                          l4572 2D48                            l4564 2CF2                            l4556 2C8E  
                          l4548 2C5C                            l4484 2AB2                            l4492 2ADC  
                          l4476 2A8C                            l4468 2A6C                            l4636 3F82  
                          l4628 3F3E                            l3916 58E6                            l3908 58AE  
                          l3844 1E92                            l3836 1E7A                            l3828 1E42  
                          l3772 1C86                            l3780 1CDC                            l3764 1C4E  
                          l3756 1C22                            l3748 1BF0                            l3692 1AE4  
                          l3684 1AAC                            l3676 1A7A                            l3668 1A62  
                          l4820 3A18                            l4812 39B8                            l4804 396C  
                          l3940 5442                            l3932 53F6                            l3924 53BA  
                          l3596 3220                            l3588 3188                            l3860 3CBC  
                          l3852 3C5E                            l4396 553A                            l4740 189C  
                          l4732 1850                            l4724 175C                            l4716 1652  
                          l4708 14DA                            l4660 0E7E                            l4900 4EEA  
                          l5196 2E2A                            l5188 2DBC                            l5292 372C  
                          l5284 36B4                            l5276 3678                            l5268 3674  
                          l4646 5B24                            l4582 2DA6                            l4574 2D5E  
                          l4566 2D00                            l4558 2CBC                            l4494 2AEC  
                          l4486 2AC2                            l4478 2A92                            l3950 1EBE  
                          l3838 1E7C                            l3790 1D30                            l3782 1D02  
                          l3774 1CBA                            l3766 1C50                            l3758 1C30  
                          l3694 1AE8                            l3678 1A8A                            l3686 1AB4  
                          l4822 3A30                            l4814 39D0                            l4806 3984  
                          l3934 5402                            l3926 53C6                            l3942 5C88  
                          l3598 3226                            l3870 3D6E                            l3862 3D04  
                          l3854 3C70                            l4398 5AE8                            l4742 18A4  
                          l4726 1774                            l4734 185A                            l4750 18CE  
                          l4718 167E                            l4670 0FFA                            l4662 0E8A  
                          l4654 0E14                            l4910 4FAC                            l4902 4F02  
                          l5198 2E2C                            l5294 376A                            l5286 36C8  
                          l4648 5B26                            l4584 2DAC                            l4576 2D78  
                          l4568 2D2A                            l4496 2B02                            l4488 2AD2  
                          l3960 1EF6                            l3952 1EC0                            l3792 1D3E  
                          l3784 1D12                            l3776 1CBC                            l3768 1C5A  
                          l3696 1AEC                            l3688 1AC4                            l4824 3A34  
                          l4816 39E8                            l4808 399C                            l3928 53DE  
                          l3936 5412                            l3944 5C98                            l3872 3D82  
                          l3856 3C74                            l3848 3C2C                            l4840 4B18  
                          l4832 4AE4                            l4760 198E                            l4752 18FC  
                          l4744 18BA                            l4736 1870                            l4728 178A  
                          l4680 10EE                            l4672 109E                            l4664 0F26  
                          l4656 0E62                            l4904 4F0E                            l4920 26E0  
                          l5296 3770                            l5288 36E8                            l3890 5CCA  
                          l4586 2DAE                            l4578 2D94                            l4498 2B12  
                          l4594 3DE2                            l3970 1F22                            l3962 1F06  
                          l3954 1ED0                            l3946 1EA4                            l3794 1D40  
                          l3778 1CCC                            l3698 1AF0                            l4818 3A00  
                          l3938 542A                            l3866 3D3C                            l3858 3C98  
                          l3882 3DA8                            l4850 4B68                            l4842 4B1C  
                          l4834 4AE8                            l4826 4AD2                            l4762 19BA  
                          l4754 192C                            l4746 18C2                            l4738 1886  
                          l4690 1276                            l4682 10FA                            l4674 10BA  
                          l4666 0F42                            l4658 0E66                            l4906 4F78  
                          l4930 2744                            l4922 26EC                            l4914 267C  
                          l5298 3774                            l3892 5CCE                            l4596 3DF2  
                          l3980 1F78                            l3972 1F32                            l3964 1F0C  
                          l3956 1EE0                            l3948 1EB0                            l3796 1D4E  
                          l3788 1D26                            l4780 3878                            l4772 384E  
                          l3884 3DCC                            l3868 3D60                            l3876 3D8E  
                          l4860 4BB4                            l4852 4B74                            l4844 4B34  
                          l4836 4B00                            l4764 19C0                            l4756 195C  
                          l4748 18CA                            l4692 131A                            l4684 119A  
                          l4676 10D2                            l4668 0FE6                            l4908 4F94  
                          l4924 2704                            l4916 26C8                            l3894 5CA0  
                          l4598 3E00                            l3990 1FB2                            l3982 1F88  
                          l3974 1F42                            l3966 1F12                            l3958 1EF0  
                          l3798 1D56                            l4870 49C6                            l4790 38D8  
                          l4782 3890                            l4774 3852                            l3878 3D9C  
                          l4862 4BBA                            l4854 4B80                            l4846 4B4C  
                          l4838 4B0C                            l4766 19D4                            l4758 1962  
                          l4694 1336                            l4686 11B6                            l4678 10D6  
                          l4950 2836                            l4942 27B6                            l4934 275A  
                          l4926 2708                            l4918 26CC                            l3896 5CA4  
                          l3992 1FC8                            l3976 1F52                            l3968 1F20  
                          l4880 4A10                            l4872 49D0                            l4792 38F0  
                          l4784 38A4                            l4776 385C                            l4864 4BD4  
                          l4856 4B84                            l4848 4B50                            l4768 19DE  
                          l4696 133A                            l4688 125A                            l4960 28CA  
                          l4944 27DA                            l4936 275C                            l4928 2730  
                          l3898 5CC0                            l3994 1FD4                            l3986 1F9C  
                          l3978 1F58                            l4890 4ABE                            l4882 4A1C  
                          l4874 49D4                            l4794 3908                            l4786 38BC  
                          l4778 3874                            l4866 4BDA                            l4858 4BA8  
                          l4698 1352                            l4962 28EE                            l4954 286E  
                          l4938 277E                            l3996 1FEC                            l3988 1FA8  
                          l4892 4AC8                            l4884 4A34                            l4876 49EC  
                          l4868 49B6                            l4796 3920                            l4788 38D4  
                          l4980 29FC                            l4972 2982                            l4956 2892  
                          l4948 2812                            l3998 1FF8                            l4886 4A40  
                          l4878 49F8                            l4798 3938                            l4990 4E22  
                          l4982 2A0A                            l4974 29A6                            l4966 2926  
                          l4888 4A58                            l4992 4E38                            l4984 4DFC  
                          l4896 4ED8                            l4968 294A                            l4994 4E42  
                          l4986 4E12                            l4898 4EE6                            l4978 29E8  
                          l4988 4E20                            l4998 4E62                            STR_1 0E05  
                          STR_2 0E0D                            u3000 4338                            u3001 4334  
                          u3011 4362                            u3020 4386                            u3100 4556  
                          u3021 4382                            u3101 4552                            u3030 43B0  
                          u3110 459E                            u3031 43AC                            u3111 459A  
                          u4000 1F78                            u3200 534A                            u3040 43F0  
                          u3120 5160                    _BAUD4CONbits 000EE9                            u4001 1F74  
                          u3201 5346                            u3041 43EC                            u3121 515C  
                          _LATE 000F7D                            u4010 1F88                            u3210 5366  
                          u3050 443A                            u3130 5182                            u4011 1F84  
                          u3211 5362                            u3051 4436                            u3131 517E  
                          _LATG 000F7F                            u4100 2248                            u4020 2102  
                          u3220 538C                            u3060 448E                            u3140 51D8  
                          u3300 32A4                            u4101 2244                            u3221 5388  
                          u3061 448A                            u3141 51D4                            u3301 32A0  
                          u4110 2276                            u4030 215C                            u3070 44C0  
                          u3150 51E8                            u3310 32C2                            u3230 30DA  
                          u4111 2272                            u4031 2158                            u3071 44BC  
                          u3151 51E4                            u3311 32BE                            u3231 30D4  
                          u5000 2CD2                            u4120 22B0                            u4040 217C  
                          u3400 3A74                            u4200 5AE2                            u3080 44FE  
                          u3160 5946                            u3320 32DC                            u3240 30DC  
                          u5001 2CCE                            u4121 22AC                            u4041 2178  
                          u4025 20F8                            u3401 3A70                            u4201 5ADE  
                          u3081 44FA                            u3161 5942                            u3321 32D8  
                          u5010 2CE6                            u4130 4D14                            u4050 218E  
                          u3170 52EC                            u3410 3B58                            u4210 4180  
                          u3090 4528                            u3330 32F6                            u3250 30F2  
                          _T2PR 000FBC                            u5011 2CE2                            u4131 4D10  
                          u4051 218A                            u3171 52E8                            u3411 3B54  
                          u4211 417C                            u3091 4524                            u3331 32F2  
                          u3251 30EE                            u5020 2D00                            u5100 3EFC  
                          u4140 4D52                            u4060 21BC                            u3500 1A9A  
                          u3180 5306                            u4300 52C0                            u4220 41DA  
                          u3340 3306                            u3260 3122                            u5021 2CFC  
                          u5101 3EF8                            u4141 4D4E                            u4061 21B8  
                          u3501 1A96                            u3181 5302                            u4301 52BC  
                          u4221 41D6                            u3341 3302                            u3261 311E  
                          u5030 2D48                            u5110 3F1A                            u4150 4D70  
                          u4070 21D2                            u3510 1AD6                            u3190 532C  
                          u4310 52D8                            u4230 421E                            u3350 3318  
                          u3270 313E                            u5031 2D44                            u5111 3F16  
                          u4151 4D6C                            u4071 21CE                            u3511 1AD2  
                          u3191 5328                            u4311 52D4                            u4231 421A  
                          u3351 3314                            u3271 313A                            u5040 2D78  
                          u5120 3F2A                            u4320 4BF6                            u4160 4D90  
                          u4080 21E6                            u3600 1BF0                            u3520 1AE4  
                          u3440 19FE                            u4400 2336                            u3424 3BB2  
                          u4240 4248                            u3360 3328                            u3280 316C  
                          u5200 1846                            u5041 2D74                            u5121 3F26  
                          u4321 4BF2                            u4161 4D8C                            u4081 21E2  
                          u3601 1BEC                            u3521 1AE0                            u3441 19FA  
                          u4401 2332                            u3425 3BAE                            u4241 4244  
                          u3361 3324                            u3281 3168                            u5201 1842  
                          u5050 2DA6                            u5130 3F38                            u4330 4C2A  
                          u4170 4DE0                            u4090 2200                            u3610 1C22  
                          u3530 1B52                            u3450 1A10                            u4410 236A  
                          u3434 3C1C                            u4250 42A2                            u3370 3340  
                          u3290 317A                            u5210 1870                            u5051 2DA2  
                          u5131 3F34                            u4171 4DDC                            u4091 21FC  
                          u3611 1C1E                            u3531 1B4E                            u3451 1A0C  
                          u3435 3C18                            u4251 429E                            u3371 333C  
                          u3291 3176                            u5211 186C                            u3380 5B4C  
                          u5140 3F72                            u5060 3DF2                            u4340 4C58  
                          u4180 59F4                            u3700 1D6A                            u3620 1C30  
                          u3540 1B6A                            u3460 1A20                            u4420 2386  
                          u4260 42DA                            u5300 19D4                            u5220 1886  
                          u3381 5B48                            u5141 3F6E                            u5061 3DEE  
                          u4341 4C54                            u4181 59F0                            u3701 1D66  
                          u3621 1C2C                            u3541 1B64                            u3461 1A1C  
                          u4421 2382                            u4261 42D6                            u5301 19D0  
                          u5221 1882                            u3390 5B62                            u5150 3F80  
                          u5070 3E00                            u4350 4C6C                            u3710 1D7A  
                          u3630 1C4E                            u3550 1B6C                            u3470 1A62  
                          u4430 23C6                            u4510 33F6                            u4270 42F2  
                          u4190 55A0                            u5310 4BD4                            u5230 189C  
                          u3391 5B5E                            u5151 3F7C                            u5071 3DFC  
                          u4351 4C68                            u4335 4C20                            u3711 1D76  
                          u3631 1C4A                            u3471 1A5E                            u4431 23C2  
                          u4415 2360                            u4511 33EE                            u4271 42EE  
                          u4191 559C                            u5311 4BD0                            u6007 4B5A  
                          u5231 1898                            u5080 3E5C                            u4360 4C94  
                          u3800 1E62                            u3720 1D8C                            u3640 1C86  
                          u3560 1B94                            u3480 1A78                            u4440 24CC  
                          u4280 5252                            u5240 18BA                            u5160 167E  
                          u5320 4FAC                            u5400 294A                            u5081 3E58  
                          u4361 4C90                            u3801 1E5E                            u3721 1D88  
                          u3641 1C82                            u3561 1B90                            u3481 1A74  
                          u4441 24C8                            u4281 524E                            u6017 4B8E  
                          u5241 18B6                            u5161 167A                            u5321 4FA8  
                          u5401 2946                            u5090 3EB2                            u4370 4CB4  
                          u3810 1E74                            u3730 1DA2                            u3650 1CCC  
                          u3570 1BB2                            u3490 1A8A                            u4450 256A  
                          u4610 34FE                            u4530 342E                            u4290 5276  
                          u2930 5098                            u5250 18FC                            u5170 1748  
                          u5410 29A6                            u5330 2730              verify_color@color2 007F  
                          u5091 3EAE                            u4371 4CB0                            u3811 1E70  
                          u3731 1D9E                            u3651 1CC8                            u3571 1BAE  
                          u3491 1A86                            u4451 2566                            u4611 34F6  
                          u4531 342A                            u4291 5272                            u6107 4EA4  
                          u6027 5884                            u2931 5094                            u5251 18F8  
                          u5171 1744                            u5411 29A2                            u5331 272C  
                          u4380 4CC4                            u3820 1E90                            u3740 1DB8  
                          u3660 1D02                            u3580 1BD2                            u4460 262A  
                          u4540 3440                            u4508 33C0                            u3900 53DE  
                          u2940 50AA                            u5260 192C                            u5180 1774  
                          u5420 2A0A                            u5340 2756                            u5500 54CE  
                          u4381 4CC0                            u3821 1E8C                            u3741 1DB4  
                          u3661 1CFE                            u3581 1BCE                            u4541 3438  
                          u3901 53DA                            u6117 48A6                            u6037 477A  
                          u2941 50A6                            u5261 1928                            u5181 1770  
                          u5421 2A06                            u5341 2752                            u5501 54CA  
                          u3750 1DCC                            u3670 1D12                            u3590 1BE0  
                          u4470 2646                            u4390 230E                            u4710 3600  
                          u4630 353A                            u3910 542A                            u5510 4754  
                          u2950 50D2                            u3830 3C50                            u5270 195C  
                          u5190 178A                            u5430 2A1E                            u5350 277E  
                          u3751 1DC8                            u3671 1D0E                            u3591 1BDC  
                          u4471 2642                            u4711 35F8                            u4631 3536  
                          u6207 544C                            u3911 5426                            u6127 48EE  
                          u6047 47C4                            u5511 4750                            u2951 50CE  
                          u3831 3C4C                            u5271 1958                            u5191 1786  
                          u5431 2A1A                            u5351 277A                            u3760 1DE6  
                          u3680 1D3E                            u4640 354C                            u4608 34C4  
                          u4560 3478                            u4528 33F8                            u4480 33AC  
                          u3920 5442                            u5440 4DFC                            u5600 4862  
                          u5520 4762                            u2960 5108                            u3840 3C98  
                          u5280 198E                            u4800 46B4                            u5360 27DA  
                          u3761 1DE2                            u3681 1D3A                            u4465 2620  
                          u4641 3544                            u4561 3470                            u4481 33A8  
                          u6217 52A0                            u3921 543E                            u6137 4936  
                          u5441 4DF8                            u5601 485E                            u6057 4806  
                          u5521 475E                            u2961 5104                            u3841 3C94  
                          u5281 198A                            u4801 46B0                            u5361 27D6  
                          u3770 1E20                            u3690 1D4E                            u4730 3638  
                          u4490 33BE                            u5450 4E20                            u5530 4796  
                          u3930 5C98                            u2970 5822                            u3850 3CBC  
                          u5290 19BA                            u5610 3FBC                            u4810 46DC  
                          u5370 2836                            u3771 1E1C                            u3691 1D4A  
                          u4395 2304                            u4731 3634                            u4491 33B6  
                          u6307 5BDA                            u6227 3866                            u6147 4992  
                          u5451 4E1C                            u6067 4870                            u5531 4792  
                          u3931 5C94                            u2971 581E                            u3851 3CB8  
                          u5291 19B6                            u5611 3FB8                            u4811 46D8  
                          u5371 2832                            u4900 2B42                            u3940 1EBE  
                          u3780 1E32                            u4708 35CC                            u4660 3582  
                          u4628 3500                            u4580 34B0                            u5460 4E50  
                          u5540 47A4                            u2980 5A3E                            u3860 3D60  
                          u4740 59C0                            u5620 3FDC                            u4820 4706  
                          u5380 2892                            u5700 2DCC                            u4901 2B3E  
                          u3941 1EBA                            u3781 1E2E                            u4661 357A  
                          u4581 34AC                            u6317 5BFA                            u6237 3882  
                          u6157 41BA                            u5461 4E4C                            u6077 4E06  
                          u5541 47A0                            u2981 5A3A                            u3861 3D5C  
                          u4741 59BC                            u5621 3FD8                            u4821 4702  
                          u5381 288E                            u5701 2DC8                            u4910 2BB8  
                          u4830 2A3A                            u3870 58D2                            u3950 1ED0  
                          u3790 1E42                            u4590 34C2                            u4558 3442  
                          u5470 4E62                            u5550 47EA                            u2990 4306  
                          u4750 59D6                            u5630 4002                            u5390 28EE  
                          u5710 2DDC                            u4911 2BB4                            u4831 2A36  
                          u3871 58CA                            u3951 1ECC                            u3791 1E3E  
                          u6407 34DE                            u4591 34BA                            u6327 49DE  
                          u6247 38E2                            u6167 41EC                            u5471 4E5E  
                          u6087 4E2C                            u5551 47E2                            u2991 4302  
                          u4751 59D2                            u5631 3FFE                            u5391 28EA  
                          u5711 2DD8                            u4920 2BDA                            u4840 2A4C  
                          u3960 1EE0                            u4728 3602                            u4680 35B8  
                          u5480 4E86                            u5640 4032                            u4760 461C  
                          u5720 2E3E                            u5800 372C                            u4921 2BD6  
                          u4841 2A48                            u3961 1EDC                            u4681 35B4  
                          u6417 351A                            u6337 4A02                            u6257 3946  
                          u6177 4282                            u5481 4E82                            u6097 4E6C  
                          u5641 402E                            u4761 4618                            u5721 2E3A  
                          u5801 3728                            u4930 2C04                            u4850 2A5C  
                          u3970 1F20                            u4690 35CA                            u4658 354E  
                          u4578 347A                            u3890 53BA                            u5490 4E98  
                          u5570 4822                            u5650 4064                            u4770 4640  
                          u5730 2EA0                            u5810 3784                            u4931 2C00  
                          u4851 2A58                            u3971 1F1C                            u4691 35C2  
                          u6427 3562                            u6347 4A26                            u6267 39C2  
                          u3891 53B6                            u6187 42B4                            u5491 4E94  
                          u5571 481E                            u5651 4060                            u4771 463C  
                          u5731 2E9C                            u5811 3780                            u4940 2C28  
                          u4860 2AA0                            u3980 1F32                            u5580 4830  
                          u5660 408A                            u4780 468C                            u5740 2F02  
                          u5820 3826                            u4941 2C24                            u4861 2A9C  
                          u3981 1F2E                            u6437 3598                            u6357 4A4A  
                          u6277 3A3E                            u6197 5408                            u5581 482C  
                          u5661 4086                            u4781 4688                            u5741 2EFE  
                          u5821 3822                            u4950 2C3E                            u4870 2AB2  
                          u3990 1F42                            u4678 3584                            u5590 483E  
                          u5670 409C                            u4790 46A4                            u5750 2F64  
                          u4951 2C3A                            u4871 2AAE                            u3991 1F3E  
                          u6447 35E0                            u6367 33D6                            u6287 5B9A  
                          u5591 483A                            u5671 4098                            u4791 46A0  
                          u5751 2F60                            u4960 2C5C                            u4880 2AC2  
                          u3888 58D4                            u5568 47EC                            u5680 40E4  
                          u5760 2FC6                            u4961 2C58                            u4881 2ABE  
                          u6457 3616                            u6377 340E                            u6297 5BBA  
                          u5681 40E0                            u5761 2FC2                            u4970 2C7C  
                          u4890 2B02                            u5690 412A                            u5770 3028  
                          u6467 5C1A                            u4971 2C78                            u4891 2AFE  
                          u6387 3458                            u5691 4126                            u5907 46E6  
                          u5771 3024                            u4980 2C8E                            u5780 308A  
                          u6477 5A94                            u4981 2C8A                            u6397 3490  
                          u5917 4710                            u5781 3086                            u4990 2CBC  
                          u5790 36FA                            u4991 2CB8                            u5927 4104  
                          u5847 37BE                            u5791 36F6                            u5937 4EF4  
                          u5857 546C                            u5947 0E70                            u5867 54A2  
                          u5957 10C4                            u5877 26F6                            u5967 10E0  
                          u5887 466A                            u5977 1344                            u5897 46BE  
                          u5987 4AF2                            u5997 4B26                            abs@a 0013  
                          _dbuf 017E                            _main 363A                            _dtoa 30AA  
              turning_action@mL 0035                turning_action@mR 0037                            _prec 00F8  
                          _nout 00F4                            pad@i 0018                            pad@p 0015  
                          fsr1h 000FE2                            fsr2h 000FDA                            indf1 000FE7  
                          indf2 000FDF                            fsr1l 000FE1                            pad@w 001A  
                          fsr2l 000FD9                            btemp 005F                            _stop 539E  
                          prodh 000FF4                            prodl 000FF3                            start 0030  
                  main@accident 01A9                  ?_color_display 0058                   test_action@mL 002D  
                 test_action@mR 002F                 ___fldiv@new_exp 0039          __end_of_color_read_Red 56AA  
               __end_of_HighISR 0030                    ___param_bank 000000                  ?_color_predict 0001  
                         ??_abs 0015                           ??_pad 0017                   ___fltol@sign1 004A  
               __end_of___aodiv 447C       amb_light_measure@CC_amb_1 0056       amb_light_measure@CC_amb_2 0058  
     amb_light_measure@CC_amb_3 005A                 __end_of___fladd 1EA4                           ?_main 0001  
                         ?_dtoa 001C                 __end_of___aomod 45E0                 __end_of___fldiv 2DBA  
               __end_of___awdiv 539E                 __end_of___flneg 5A16                 __end_of___flmul 22CE  
               __end_of___flsub 57E0                 __end_of___fltol 4CE6                           ?_stop 001A  
               ___awdiv@divisor 0009                           _LED_B 5BEA                           _LED_C 5C0A  
                         _LED_G 5BCA                           _LED_R 5B8A                           i2l505 002C  
               ___awdiv@counter 000B                    vfpfcnvrt@fmt 0042                           _TMR0H 000FD4  
                         _TMR0L 000FD3         __end_of_sendCharSerial4 5C9E      __end_of_I2C_2_Master_Start 5CD4  
       ??_color_data_collection 005C      __end_of_I2C_2_Master_Write 5CAA                 __end_of_compare 59DE  
                  compare@lower 0050                           _flags 00FA                           _color 017C  
                  compare@upper 0054                           _fputc 5086                           _fputs 57E0  
                         _setup 4734                           pad@fp 0011                           _width 00F6  
                         _putch 5CD6                           _toint 0E01                           dtoa@d 001E  
                         dtoa@i 003E                           dtoa@n 0036                           dtoa@p 0030  
                         dtoa@s 0034                           dtoa@w 0032                 ??_test_function 00E8  
          amb_light_measure@amb 0050                           tablat 000FF5                 __end_of_lroundf 59A6  
               detect_wall@stop 0068                           ttemp5 0060                           ttemp6 0063  
                         ttemp7 0067                           status 000FD8                           wtemp8 0060  
               __end_of_sprintf 565A                color_display@buf 0079         __end_of_color_read_Blue 574A  
         _I2C_2_Master_RepStart 5CB6               _calibration_motor 4DEA                 ?_color_read_Red 0005  
               __initialization 5824                   short_burst@mL 0020                   short_burst@mR 0022  
            ?_calibration_motor 0033                    __end_of_main 384E                    __end_of_dtoa 338E  
                 main@amb_light 01A6            __end_of_detect_color 19E4                    __end_of_stop 545C  
        color_data_collection@i 00DE          color_data_collection@m 005A             ??_calibration_motor 0037  
                        ??_main 00F0                          ??_dtoa 0026                          ??_stop 001E  
                 __activetblptr 000001                          ?_LED_B 0001                          ?_LED_C 0001  
                        ?_LED_G 0001                          ?_LED_R 0001                       ??_LED_OFF 0001  
        _initDCmotors_parameter 4FB4                    turn45@i_1327 0028                    turn45@i_1329 002A  
                  ?_setMotorPWM 000F                          ?_fputc 0001                          ?_fputs 000A  
              ___awdiv@dividend 0007                          ?_setup 0060                          ?_putch 0001  
                        _RC0PPS 000E62                          _RC4REG 000EE3                          _RE2PPS 000E74  
                        _RD5PPS 000E6F                          _RC7PPS 000E69                          _RD6PPS 000E70  
                        i2l5322 000A                          i2l5324 001A                          i2l5326 0022  
                        i2l5328 0028                       ??_HighISR 0001        __end_of_color_click_init 5AB4  
                        _RX4PPS 000E15                          _TX4REG 000EE4                 ??_color_display 005A  
     __end_of_calibration_motor 4ED8                __end_of___xxtofl 3F94                   ??_Timer0_init 0001  
               ??_color_predict 0058                    vfprintf@cfmt 0056                          ___flge 4CE6  
                     ??___aodiv 0011                       ??___fladd 0009                       ??___aomod 0011  
                        ___wmul 5B64                       ??___fldiv 0030                       ??___awdiv 000B  
                     ??___flneg 0005                       ??___flmul 0017                       ??___flsub 0019  
                     ??___fltol 0046                          _goback 267C                   compare@result 0056  
                        _memory 0100                          clear_0 5842                          clear_1 584E  
              ___awdiv@quotient 000D                          _motorL 016D                          _motorR 0164  
                        isa$std 000001                          pad@buf 0013                          _turn45 4144  
                        _roundf 22CE                          dtoa@fp 001C                          _strlen 5A16  
                     ??_compare 0056                   toggle_light@i 0004                __end_of_pin_init 5A80  
                        fputc@c 0001         toggle_light@lightnumber 0005                          fputs@c 000E  
                        fputs@i 000F                          fputs@s 000A                  test_function@m 00E0  
                test_function@w 00E2                    __mediumconst 0000                          tblptrh 000FF7  
                        tblptrl 000FF6                          tblptru 000FF8                ?_sendCharSerial4 0001  
                     ??_lroundf 0050                     read_color@m 000C                          putch@c 0001  
              __end_of_vfprintf 55AA                          stop@mL 001A                          stop@mR 001C  
             ??_initDCmotorsPWM 0003                ??_turning_action 0039                    ?_test_action 002D  
                     ??_sprintf 0058                      ___flge@ff1 0001                      ___flge@ff2 0005  
                  ___xxtofl@arg 000B                    ___xxtofl@exp 000A                    ___xxtofl@val 0001  
                  ?_short_burst 0020                calibrate_white@w 000C                 fullSpeedBack@mL 0020  
               fullSpeedBack@mR 0022                   main@stop_time 01AC                      __accesstop 0060  
       __end_of__initialization 5854                   verify_color@m 0079                   verify_color@w 007B  
      __end_of_color_read_Clear 579A                      ___flneg@f1 0001        __end_of_color_read_Green 56FA  
        ?_I2C_2_Master_RepStart 0001              color_predict@color 00DD    initDCmotors_parameter@motorL 0001  
  initDCmotors_parameter@motorR 0003                   ___rparam_used 000001                      ___fltol@f1 0042  
                 __end_of_LED_B 5C0A                   __end_of_LED_C 5C2A                   __end_of_LED_G 5BEA  
                 __end_of_LED_R 5BAA                ?_color_read_Blue 0005                 _Interrupts_init 5CAA  
                __pcstackCOMRAM 0001                   _fullSpeedBack 45E0                    __pidataBANK0 5CD4  
                 __end_of_fputc 5150               detect_color@color 0072                   __end_of_fputs 5824  
                 __end_of_setup 4888                   __end_of_putch 5CD8                   __end_of_toint 0E05  
           __end_of_Timer0_init 5C86                         ??_LED_B 0001                         ??_LED_C 0001  
                       ??_LED_G 0001                         ??_LED_R 0001                         ??_fputc 0005  
                       ??_fputs 000E                         ??_setup 005C                         ??_putch 0001  
                    __pbssBANK0 00F4                      __pbssBANK1 0100             calibration_motor@mL 0033  
           calibration_motor@mR 0035                color_predict@buf 0079               _color_writetoaddr 5C2A  
                  _T2CLKCONbits 000FBF                  ?_fullSpeedBack 0020                         ?___flge 0001  
            ?_color_writetoaddr 0003                         ?___wmul 0001                         ?_goback 002D  
                       ?_turn45 0020                         ?_roundf 0028             ??_color_writetoaddr 0004  
                       ?_strlen 0001                         _LED_OFF 5BAA                       ?___xxtofl 0001  
                       _SP4BRGH 000EE6                         _SP4BRGL 000EE5                         _PWM6DCH 000FA3  
                       _PWM7DCH 000FA0                         _SSP2ADD 000ED6                         _SSP2BUF 000ED5  
                  _detect_color 0E14   __end_of_color_data_collection 4BE0         __end_of_Interrupts_init 5CB6  
        color_writetoaddr@value 0003                ??_color_read_Red 0007                         _HighISR 0008  
     __end_of_color_writetoaddr 5C4A              _I2C_2_Master_Start 5CCA                      _initUSART4 5C4A  
            _I2C_2_Master_Write 5C9E                       ?_pin_init 0001                         __Hparam 0000  
         test_function@complete 00EC                         __Lparam 0000               color_read_Red@tmp 000A  
                   _Timer0_init 5C68         sendStringSerial4@string 0002                         ___aodiv 42F4  
                       ___fladd 19E4                         ___aomod 447C                         ___fldiv 2A20  
                       ___awdiv 52DA                         ___flneg 59DE                         ___flmul 1EA4  
                       ___flsub 579A                         ___fltol 4BE0             ?_I2C_2_Master_Start 0001  
      fullSpeedBack@instruction 0024             ?_I2C_2_Master_Write 0001                       ?_vfprintf 0050  
                  __psmallconst 0E00                         __pcinit 5824                         __ramtop 0E00  
                    _read_color 55AA                         __ptext0 363A                         __ptext1 545C  
                       __ptext2 2DBA                         __ptext3 267C                         __ptext4 45E0  
                       __ptext5 3F94                         __ptext6 4ED8                         __ptext7 0E14  
                       __ptext8 59A6                         __ptext9 4AD2                         _compare 59A6  
       ?_initDCmotors_parameter 0001                       _T2CONbits 000FBD                      ??___xxtofl 0005  
             detect_wall@CC_amb 0064             turning_action@color 0039                       _T2HLTbits 000FBE  
                       _lroundf 596C                         goback@i 0033                         main@amb 019E  
                       _sprintf 5608                         main@rgb 01AE            ??_I2C_2_Master_Start 0002  
          ??_I2C_2_Master_Write 0002            end_of_initialization 5854              setMotorPWM@PWMduty 0018  
                       fputc@fp 0003           __end_of_test_function 4144                         fputs@fp 000C  
             ?_color_click_init 0001                 test_function@mL 00E4                 test_function@mR 00E6  
               ??_fullSpeedBack 0025                      ??_pin_init 0001              ??_color_click_init 0005  
                       setup@mL 0064               __end_of_vfpfcnvrt 3DE0                         setup@mR 0066  
                       postdec1 000FE5                         postdec2 000FDD                         postinc0 000FEE  
                       postinc1 000FE6                         postinc2 000FDE                         turn45@i 002C  
                       roundf@e 0034                         roundf@u 003A                         roundf@x 0028  
                       roundf@y 003E                      ??_vfprintf 0056                  main@start_time 01AA  
                       strlen@a 0003                         strlen@s 0001                 _initDCmotorsPWM 58EA  
               turn45@direction 0025  __end_of_initDCmotors_parameter 5086                   ??_detect_wall 0056  
                     _PORTFbits 000F8E        test_function@stop_signal 00EE                     ___fladd@grs 0010  
                 ___xxtofl@sign 0009                       _TRISAbits 000F81                       _TRISCbits 000F83  
                     _TRISDbits 000F84                       _TRISEbits 000F85                       _TRISFbits 000F86  
                     _TRISGbits 000F87                       _TRISHbits 000F88                     ___fldiv@grs 003B  
                   ___fldiv@rem 0034                fullSpeedAhead@mL 001A                fullSpeedAhead@mR 001C  
      color_writetoaddr@address 0004         ??_I2C_2_Master_RepStart 0002                ?_Interrupts_init 0001  
                   ___flmul@grs 001C                   ?_toggle_light 0001               ?_color_read_Clear 0005  
             ?_color_read_Green 0005                     ?_initUSART4 0001       sendCharSerial4@charToSend 0001  
                 ?_verify_color 0079           __end_of_color_display 5548                      main@motorL 01D2  
                    main@motorR 01DB     amb_light_measure@CC_amb_ave 0054               ??_calibrate_white 000E  
            ??_color_read_Clear 0007                  color_display@m 0058              ??_color_read_Green 0007  
                detect_color@BB 006C                  detect_color@BC 0062                  detect_color@BG 0073  
                detect_color@GB 006A                  detect_color@GG 006E                  detect_color@BR 0066  
                detect_color@GR 0064                  detect_color@RB 0068                  detect_color@RG 0060  
                detect_color@RR 0070           __end_of_color_predict 5B12                  __end_of___flge 4DEA  
                _fullSpeedAhead 5216                     vfpfcnvrt@ap 0044                     vfpfcnvrt@fp 0040  
                   vfpfcnvrt@ll 0048                  __end_of___wmul 5B8A                     ?_read_color 000C  
                __end_of_goback 2A20                  __end_of_turn45 42F4                  __end_of_roundf 267C  
                __end_of_strlen 5A4C             color_read_Clear@tmp 000A             start_initialization 5824  
                   __end_of_abs 596C                     __end_of_pad 5216             __end_of_detect_wall 4FB4  
               turn45@turn_time 0024                  ??_toggle_light 0002                  ??_verify_color 007D  
           color_read_Green@tmp 000A         __end_of_initDCmotorsPWM 592C                     vfprintf@fmt 0052  
        __end_of_fullSpeedAhead 52DA                        ??___flge 0009                        ??___wmul 0005  
                      ??_goback 0031                     __pdataBANK0 00FC                        ??_turn45 0026  
                      ??_roundf 002C                        ??_strlen 0003                       ___fladd@a 0005  
                     ___fladd@b 0001                        ?_LED_OFF 0001                       ___fldiv@a 002C  
                     ___fldiv@b 0028                       ___flmul@a 0013                       ___flmul@b 000F  
                     ___flsub@a 0015                       ___flsub@b 0011                   __pcstackBANK0 0060  
                 __pcstackBANK1 019E                ___aodiv@dividend 0001            detect_wall@amb_light 0054  
                      ?_HighISR 0001                       _dtoa$2601 002E                    ?_Timer0_init 0001  
               ?_fullSpeedAhead 001A                       __pintcode 0008                        ?___aodiv 0001  
                      ?___fladd 0001                        ?___aomod 0001                        ?___fldiv 0028  
                      ?___awdiv 0007                ___aodiv@quotient 0013                        ?___flneg 0001  
                      ?___flmul 000F                        ?___flsub 0011                        ?___fltol 0042  
            test_function@color 00ED                     _centisecond 017A            I2C_2_Master_Read@ack 0003  
          I2C_2_Master_Read@tmp 0004                        ?_compare 0050                     _detect_wall 4ED8  
                   __smallconst 0E00               _I2C_2_Master_Idle 5B3C               _I2C_2_Master_Init 5B12  
             _I2C_2_Master_Read 58A8               _I2C_2_Master_Stop 5CC0          toggle_light@toggletime 0001  
                      ?_lroundf 004C              ?_I2C_2_Master_Idle 0001              ?_I2C_2_Master_Init 0001  
            ?_I2C_2_Master_Read 0001                   ??_setMotorPWM 0011              ?_I2C_2_Master_Stop 0001  
      initDCmotorsPWM@PWMperiod 0001                        ?_sprintf 0060               _sendStringSerial4 5AB4  
         _color_data_collection 4AD2             ??_I2C_2_Master_Idle 0001             ??_I2C_2_Master_Init 0001  
           ??_I2C_2_Master_Read 0002                  ___wmul@product 0005                        _LATAbits 000F79  
           ??_I2C_2_Master_Stop 0002                        _LATCbits 000F7B                        _LATDbits 000F7C  
                      _LATEbits 000F7D                        _LATFbits 000F7E                        _LATGbits 000F7F  
                      _LATHbits 000F80                        _PIE0bits 000E29              ?_sendStringSerial4 0002  
                      _PIR0bits 000E33                        _PIR4bits 000E37                        i2u583_40 001A  
                      i2u583_41 0016            detect_wall@threshold 0066                ?_initDCmotorsPWM 0001  
             ??_sendCharSerial4 0001                        _SSP2CON2 000EDA             ??_sendStringSerial4 0004  
                      _SSP2STAT 000ED8                     _array_index 017D                       _vfpfcnvrt 3C2C  
                    setup@white 0060       __end_of_I2C_2_Master_Idle 5B64            __end_of_toggle_light 363A  
     __end_of_I2C_2_Master_Init 5B3C       __end_of_I2C_2_Master_Read 58EA               ___wmul@multiplier 0001  
     __end_of_I2C_2_Master_Stop 5CCA                    setMotorPWM@m 000F     I2C_2_Master_Write@data_byte 0002  
          __end_of_verify_color 54D8          test_function@amb_light 00EA                       main@white 01B6  
             ??_color_read_Blue 0007                   detect_color@m 0057                   detect_color@w 0059  
                 ??_test_action 0031                 _calibrate_white 384E       __end_of_sendStringSerial4 5AE4  
                 detect_wall@mL 0050                   detect_wall@mR 0052                   ??_short_burst 0024  
             _amb_light_measure 49B6   __end_of_I2C_2_Master_RepStart 5CC0              color_read_Blue@tmp 000A  
           __end_of_setMotorPWM 3C2C                      roundf@F527 0176                    ??_initUSART4 0001  
            ?_amb_light_measure 0050                        __Hrparam 0000                      vfprintf@ap 0054  
                      __Lrparam 0000                      vfprintf@fp 0050           __end_of_fullSpeedBack 4734  
                  __Lsmallconst 0E00            compare@value2compare 0052             ??_amb_light_measure 0052  
                    ?_vfpfcnvrt 0040                    ??_read_color 000E                 ___aodiv@divisor 0009  
               ___aodiv@counter 0011                      _ANSELDbits 000EA7                      _ANSELFbits 000EB4  
                    sprintf@fmt 0062                        ___xxtofl 3DE0                      _T0CON0bits 000FD5  
                    _T0CON1bits 000FD6              __end_of_initUSART4 5C68                        __ptext10 55AA  
                      __ptext11 5AE4                        __ptext20 5086                        __ptext12 54D8  
                      __ptext21 5CD6                        __ptext13 5608                        __ptext30 4888  
                      __ptext22 592C                        __ptext14 5548                        __ptext31 4144  
                      __ptext23 447C                        __ptext15 3C2C                        __ptext40 56FA  
                      __ptext32 539E                        __ptext24 42F4                        __ptext16 30AA  
                      __ptext41 5B8A                        __ptext33 5216                        __ptext25 5AB4  
                      __ptext17 5150                        __ptext50 19E4                        __ptext42 5BAA  
                      __ptext34 3A58                        __ptext26 5C86                        __ptext18 5A16  
                      __ptext51 59DE                        __ptext43 5BCA                        __ptext35 5B64  
                      __ptext27 5866                        __ptext19 57E0                        __ptext60 5C0A  
                      __ptext52 1EA4                        __ptext44 5BEA                        __ptext36 52DA  
                      __ptext28 4734                        __ptext61 5A4C                        __ptext53 4CE6  
                      __ptext45 49B6                        __ptext37 384E                        __ptext29 4DEA  
                      __ptext70 5B3C                        __ptext62 5C4A                        __ptext54 4BE0  
                      __ptext46 338E                        __ptext38 565A                        __ptext71 5B12  
                      __ptext63 4FB4                        __ptext55 574A                        __ptext47 596C  
                      __ptext39 56AA                        __ptext72 5C68                        __ptext64 58EA  
                      __ptext56 5CB6                        __ptext48 22CE                        __ptext73 5CAA  
                      __ptext65 5A80                        __ptext57 58A8                        __ptext49 579A  
                      __ptext66 5C2A                        __ptext58 3DE0                        __ptext67 5C9E  
                      __ptext59 2A20                        __ptext68 5CC0                        __ptext69 5CCA  
     __end_of_amb_light_measure 4AD2                    _SSP2CON1bits 000ED9                    _SSP2CON2bits 000EDA  
        ?_color_data_collection 005A          test_function@test_code 00EF             __end_of_test_action 49B6  
            __end_of_read_color 5608                        _pin_init 5A4C                  _turning_action 2DBA  
           __end_of_short_burst 58A8                        isa$xinst 000000                      _RC4STAbits 000EE7  
                      int$flags 005F                     _SENSITIVITY 00FC                        goback@mL 002D  
                      goback@mR 002F                        _vfprintf 5548                ___aomod@dividend 0001  
       __end_of_calibrate_white 3A58                      _INTCONbits 000FF2                     _setMotorPWM 3A58  
                 ?_detect_color 0057                     _PWM6CONbits 000FA4                     _PWM7CONbits 000FA1  
                      intlevel2 0000                       sprintf@ap 006C          __end_of_turning_action 30AA  
              ??_fullSpeedAhead 001E                   _test_function 3F94                  setup@amb_light 0068  
                      lroundf@x 004C        ??_initDCmotors_parameter 0005                        setup@amb 0062  
               ___aomod@divisor 0009                     ??_vfpfcnvrt 0046                 ___aomod@counter 0011  
                      turn45@mL 0020                        turn45@mR 0022                _color_click_init 5A80  
                  ?_detect_wall 0050                        sprintf@f 006E                        sprintf@s 0060  
             _detect_color$2931 0075                      _SSP2DATPPS 000E1D                      _SSP2CLKPPS 000E1C  
                ??_detect_color 005B                     _test_action 4888                   ___fladd@signs 000D  
                    _TX4STAbits 000EE8                    ___aodiv@sign 0012                 _sendCharSerial4 5C86  
                   _short_burst 5866                    ___fladd@aexp 000E                    ___fladd@bexp 000F  
                ?_test_function 00E0                 ?_turning_action 0035                    _toggle_light 338E  
                  ___aomod@sign 0012                    _verify_color 545C                     _roundf$2933 0036  
                   _roundf$2934 0030                   _color_display 54D8                 main@stop_signal 01A8  
