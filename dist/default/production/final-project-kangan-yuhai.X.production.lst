

Microchip MPLAB XC8 Assembler V2.35 build 20211206165544 
                                                                                               Wed Mar 09 12:54:22 2022

Microchip MPLAB XC8 C Compiler v2.35 (Free license) build 20211206165544 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=3
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=3
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=3
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=3
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=3
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=3
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1
    48                           	psect	text34,global,reloc=2,class=CODE,delta=1
    49                           	psect	text35,global,reloc=2,class=CODE,delta=1
    50                           	psect	text36,global,reloc=2,class=CODE,delta=1
    51                           	psect	text37,global,reloc=2,class=CODE,delta=1
    52                           	psect	text38,global,reloc=2,class=CODE,delta=1
    53                           	psect	text39,global,reloc=2,class=CODE,delta=1
    54                           	psect	text40,global,reloc=2,class=CODE,delta=1
    55                           	psect	text41,global,reloc=2,class=CODE,delta=1
    56                           	psect	text42,global,reloc=2,class=CODE,delta=1
    57                           	psect	text43,global,reloc=2,class=CODE,delta=1
    58                           	psect	text44,global,reloc=2,class=CODE,delta=1
    59                           	psect	text45,global,reloc=2,class=CODE,delta=1
    60                           	psect	text46,global,reloc=2,class=CODE,delta=1
    61                           	psect	text47,global,reloc=2,class=CODE,delta=1
    62                           	psect	text48,global,reloc=2,class=CODE,delta=1
    63                           	psect	text49,global,reloc=2,class=CODE,delta=1
    64                           	psect	text50,global,reloc=2,class=CODE,delta=1
    65                           	psect	text51,global,reloc=2,class=CODE,delta=1
    66                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    67                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    68                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    69                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    70  0000                     
    71                           ; Version 2.35
    72                           ; Generated 05/05/2021 GMT
    73                           ; 
    74                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    75                           ; All rights reserved.
    76                           ; 
    77                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    78                           ; 
    79                           ; Redistribution and use in source and binary forms, with or without modification, are
    80                           ; permitted provided that the following conditions are met:
    81                           ; 
    82                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    83                           ;        conditions and the following disclaimer.
    84                           ; 
    85                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    86                           ;        of conditions and the following disclaimer in the documentation and/or other
    87                           ;        materials provided with the distribution. Publication is not required when
    88                           ;        this file is used in an embedded application.
    89                           ; 
    90                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    91                           ;        software without specific prior written permission.
    92                           ; 
    93                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    94                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    95                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    96                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    97                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    98                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    99                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   100                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   101                           ; 
   102                           ; 
   103                           ; Code-generator required, PIC18F67K40 Definitions
   104                           ; 
   105                           ; SFR Addresses
   106  0000                     
   107                           	psect	idataBANK0
   108  00408A                     __pidataBANK0:
   109                           	callstack 0
   110                           
   111                           ;initializer for _color
   112  00408A  02                 	db	2
   113                           
   114                           ;initializer for _SENSITIVITY
   115  00408B  07                 	db	7
   116                           
   117                           	psect	smallconst
   118  000E00                     __psmallconst:
   119                           	callstack 0
   120  000E00  00                 	db	0
   121  000E01  0000               	dw	0
   122  000E03  4B00               	dw	19200
   123  000E05                     __end_of_toint:
   124                           	callstack 0
   125  0000                     _TRISFbits	set	3974
   126  0000                     _TX4REG	set	3812
   127  0000                     _RC4STAbits	set	3815
   128  0000                     _SP4BRGH	set	3814
   129  0000                     _TRISGbits	set	3975
   130  0000                     _TRISEbits	set	3973
   131  0000                     _SSP2CON2bits	set	3802
   132  0000                     _LATG	set	3967
   133  0000                     _LATE	set	3965
   134  0000                     _RX4PPS	set	3605
   135  0000                     _SSP2CLKPPS	set	3612
   136  0000                     _SSP2DATPPS	set	3613
   137  0000                     _ANSELDbits	set	3751
   138  0000                     _SSP2ADD	set	3798
   139  0000                     _SSP2CON1bits	set	3801
   140  0000                     _LATAbits	set	3961
   141  0000                     _LATFbits	set	3966
   142  0000                     _LATGbits	set	3967
   143  0000                     _TRISAbits	set	3969
   144  0000                     _TRISCbits	set	3971
   145  0000                     _TRISDbits	set	3972
   146  0000                     _LATCbits	set	3963
   147  0000                     _LATEbits	set	3965
   148  0000                     _RC4REG	set	3811
   149  0000                     _SP4BRGL	set	3813
   150  0000                     _TX4STAbits	set	3816
   151  0000                     _BAUD4CONbits	set	3817
   152  0000                     _SSP2CON2	set	3802
   153  0000                     _SSP2STAT	set	3800
   154  0000                     _ANSELFbits	set	3764
   155  0000                     _SSP2BUF	set	3797
   156  0000                     _PIE4bits	set	3629
   157  0000                     _PIR4bits	set	3639
   158  0000                     _RC0PPS	set	3682
   159  0000                     _RC7PPS	set	3689
   160  0000                     _RD5PPS	set	3695
   161  0000                     _RE2PPS	set	3700
   162  0000                     _RD6PPS	set	3696
   163  0000                     _PORTFbits	set	3982
   164  0000                     _T2PR	set	4028
   165  0000                     _T2CONbits	set	4029
   166  0000                     _PWM7DCH	set	4000
   167  0000                     _PWM6DCH	set	4003
   168  0000                     _T2CLKCONbits	set	4031
   169  0000                     _T2HLTbits	set	4030
   170  0000                     _PWM6CONbits	set	4004
   171  0000                     _PWM7CONbits	set	4001
   172  0000                     _ADREFbits	set	3928
   173  0000                     _ADPCH	set	3935
   174  0000                     _ADRESH	set	3940
   175  0000                     _ADCON0bits	set	3936
   176  000E05                     STR_1:
   177  000E05  09                 	db	9
   178  000E06  25                 	db	37
   179  000E07  64                 	db	100	;'d'
   180  000E08  09                 	db	9
   181  000E09  25                 	db	37
   182  000E0A  64                 	db	100	;'d'
   183  000E0B  09                 	db	9
   184  000E0C  25                 	db	37
   185  000E0D  64                 	db	100	;'d'
   186  000E0E  09                 	db	9
   187  000E0F  25                 	db	37
   188  000E10  64                 	db	100	;'d'
   189  000E11  0D                 	db	13
   190  000E12  0A                 	db	10
   191  000E13  00                 	db	0
   192  000E14  4C                 	db	76	;'L'
   193  000E15  69                 	db	105	;'i'
   194  000E16  67                 	db	103	;'g'
   195  000E17  68                 	db	104	;'h'
   196  000E18  74                 	db	116	;'t'
   197  000E19  20                 	db	32
   198  000E1A  62                 	db	98	;'b'
   199  000E1B  6C                 	db	108	;'l'
   200  000E1C  75                 	db	117	;'u'
   201  000E1D  65                 	db	101	;'e'
   202  000E1E  00                 	db	0
   203  000E1F  4F                 	db	79	;'O'
   204  000E20  72                 	db	114	;'r'
   205  000E21  61                 	db	97	;'a'
   206  000E22  6E                 	db	110	;'n'
   207  000E23  67                 	db	103	;'g'
   208  000E24  65                 	db	101	;'e'
   209  000E25  00                 	db	0
   210  000E26  59                 	db	89	;'Y'
   211  000E27  65                 	db	101	;'e'
   212  000E28  6C                 	db	108	;'l'
   213  000E29  6C                 	db	108	;'l'
   214  000E2A  6F                 	db	111	;'o'
   215  000E2B  77                 	db	119	;'w'
   216  000E2C  00                 	db	0
   217  000E2D  57                 	db	87	;'W'
   218  000E2E  68                 	db	104	;'h'
   219  000E2F  69                 	db	105	;'i'
   220  000E30  74                 	db	116	;'t'
   221  000E31  65                 	db	101	;'e'
   222  000E32  00                 	db	0
   223  000E33  42                 	db	66	;'B'
   224  000E34  6C                 	db	108	;'l'
   225  000E35  61                 	db	97	;'a'
   226  000E36  63                 	db	99	;'c'
   227  000E37  6B                 	db	107	;'k'
   228  000E38  00                 	db	0
   229  000E39  47                 	db	71	;'G'
   230  000E3A  72                 	db	114	;'r'
   231  000E3B  65                 	db	101	;'e'
   232  000E3C  65                 	db	101	;'e'
   233  000E3D  6E                 	db	110	;'n'
   234  000E3E  00                 	db	0
   235  000E3F  45                 	db	69	;'E'
   236  000E40  72                 	db	114	;'r'
   237  000E41  72                 	db	114	;'r'
   238  000E42  6F                 	db	111	;'o'
   239  000E43  72                 	db	114	;'r'
   240  000E44  00                 	db	0
   241  000E45  42                 	db	66	;'B'
   242  000E46  6C                 	db	108	;'l'
   243  000E47  75                 	db	117	;'u'
   244  000E48  65                 	db	101	;'e'
   245  000E49  00                 	db	0
   246  000E4A  50                 	db	80	;'P'
   247  000E4B  69                 	db	105	;'i'
   248  000E4C  6E                 	db	110	;'n'
   249  000E4D  6B                 	db	107	;'k'
   250  000E4E  00                 	db	0
   251  000E4F  52                 	db	82	;'R'
   252  000E50  65                 	db	101	;'e'
   253  000E51  64                 	db	100	;'d'
   254  000E52  00                 	db	0
   255  000E53  00                 	db	0	; dummy byte at the end
   256  0000                     
   257                           ; #config settings
   258                           
   259                           	psect	cinit
   260  003DA8                     __pcinit:
   261                           	callstack 0
   262  003DA8                     start_initialization:
   263                           	callstack 0
   264  003DA8                     __initialization:
   265                           	callstack 0
   266                           
   267                           ; Initialize objects allocated to BANK0 (2 bytes)
   268                           ; load TBLPTR registers with __pidataBANK0
   269  003DA8  0E8A               	movlw	low __pidataBANK0
   270  003DAA  6EF6               	movwf	tblptrl,c
   271  003DAC  0E40               	movlw	high __pidataBANK0
   272  003DAE  6EF7               	movwf	tblptrh,c
   273  003DB0  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   274  003DB2  6EF8               	movwf	tblptru,c
   275  003DB4  0009               	tblrd		*+	;fetch initializer
   276  003DB6  CFF5 F0FA          	movff	tablat,__pdataBANK0
   277  003DBA  0009               	tblrd		*+	;fetch initializer
   278  003DBC  CFF5 F0FB          	movff	tablat,__pdataBANK0+1
   279                           
   280                           ; Clear objects allocated to BANK1 (122 bytes)
   281  003DC0  EE01  F000         	lfsr	0,__pbssBANK1
   282  003DC4  0E7A               	movlw	122
   283  003DC6                     clear_0:
   284  003DC6  6AEE               	clrf	postinc0,c
   285  003DC8  06E8               	decf	wreg,f,c
   286  003DCA  E1FD               	bnz	clear_0
   287                           
   288                           ; Clear objects allocated to BANK0 (26 bytes)
   289  003DCC  EE00  F0E0         	lfsr	0,__pbssBANK0
   290  003DD0  0E1A               	movlw	26
   291  003DD2                     clear_1:
   292  003DD2  6AEE               	clrf	postinc0,c
   293  003DD4  06E8               	decf	wreg,f,c
   294  003DD6  E1FD               	bnz	clear_1
   295  003DD8                     end_of_initialization:
   296                           	callstack 0
   297  003DD8                     __end_of__initialization:
   298                           	callstack 0
   299  003DD8  0E00               	movlw	low (__Lsmallconst shr (0+16))
   300  003DDA  6EF8               	movwf	tblptru,c
   301  003DDC  0E0E               	movlw	high __Lsmallconst
   302  003DDE  6EF7               	movwf	tblptrh,c
   303  003DE0  0100               	movlb	0
   304  003DE2  EF9F  F01B         	goto	_main	;jump to C main() function
   305                           
   306                           	psect	bssBANK0
   307  0000E0                     __pbssBANK0:
   308                           	callstack 0
   309  0000E0                     _motorL:
   310                           	callstack 0
   311  0000E0                     	ds	10
   312  0000EA                     roundf@F527:
   313                           	callstack 0
   314  0000EA                     	ds	4
   315  0000EE                     _nout:
   316                           	callstack 0
   317  0000EE                     	ds	2
   318  0000F0                     _width:
   319                           	callstack 0
   320  0000F0                     	ds	2
   321  0000F2                     _prec:
   322                           	callstack 0
   323  0000F2                     	ds	2
   324  0000F4                     _flags:
   325                           	callstack 0
   326  0000F4                     	ds	2
   327  0000F6                     _TxBufReadCnt:
   328                           	callstack 0
   329  0000F6                     	ds	1
   330  0000F7                     _TxBufWriteCnt:
   331                           	callstack 0
   332  0000F7                     	ds	1
   333  0000F8                     _RxBufReadCnt:
   334                           	callstack 0
   335  0000F8                     	ds	1
   336  0000F9                     _RxBufWriteCnt:
   337                           	callstack 0
   338  0000F9                     	ds	1
   339                           
   340                           	psect	dataBANK0
   341  0000FA                     __pdataBANK0:
   342                           	callstack 0
   343  0000FA                     _color:
   344                           	callstack 0
   345  0000FA                     	ds	1
   346  0000FB                     _SENSITIVITY:
   347                           	callstack 0
   348  0000FB                     	ds	1
   349                           
   350                           	psect	bssBANK1
   351  000100                     __pbssBANK1:
   352                           	callstack 0
   353  000100                     _EUSART4TXbuf:
   354                           	callstack 0
   355  000100                     	ds	60
   356  00013C                     _EUSART4RXbuf:
   357                           	callstack 0
   358  00013C                     	ds	20
   359  000150                     _motorR:
   360                           	callstack 0
   361  000150                     	ds	10
   362  00015A                     _dbuf:
   363                           	callstack 0
   364  00015A                     	ds	32
   365                           
   366                           	psect	cstackBANK1
   367  00017A                     __pcstackBANK1:
   368                           	callstack 0
   369  00017A                     main@color:
   370                           	callstack 0
   371                           
   372                           ; 1 bytes @ 0x0
   373  00017A                     	ds	1
   374  00017B                     main@motorL:
   375                           	callstack 0
   376                           
   377                           ; 10 bytes @ 0x1
   378  00017B                     	ds	10
   379  000185                     main@motorR:
   380                           	callstack 0
   381                           
   382                           ; 10 bytes @ 0xB
   383  000185                     	ds	10
   384  00018F                     main@white:
   385                           	callstack 0
   386                           
   387                           ; 18 bytes @ 0x15
   388  00018F                     	ds	18
   389  0001A1                     main@rgb:
   390                           	callstack 0
   391                           
   392                           ; 8 bytes @ 0x27
   393  0001A1                     	ds	8
   394                           
   395                           	psect	cstackBANK0
   396  000060                     __pcstackBANK0:
   397                           	callstack 0
   398  000060                     ??___fltol:
   399  000060                     ?_sprintf:
   400                           	callstack 0
   401  000060                     sprintf@s:
   402                           	callstack 0
   403                           
   404                           ; 2 bytes @ 0x0
   405  000060                     	ds	2
   406  000062                     sprintf@fmt:
   407                           	callstack 0
   408                           
   409                           ; 2 bytes @ 0x2
   410  000062                     	ds	2
   411  000064                     ___fltol@sign1:
   412                           	callstack 0
   413                           
   414                           ; 1 bytes @ 0x4
   415  000064                     	ds	1
   416  000065                     ___fltol@exp1:
   417                           	callstack 0
   418                           
   419                           ; 1 bytes @ 0x5
   420  000065                     	ds	1
   421  000066                     ?_lroundf:
   422                           	callstack 0
   423  000066                     lroundf@x:
   424                           	callstack 0
   425                           
   426                           ; 4 bytes @ 0x6
   427  000066                     	ds	4
   428  00006A                     compare@lower:
   429                           	callstack 0
   430                           
   431                           ; 2 bytes @ 0xA
   432  00006A                     	ds	2
   433  00006C                     compare@value2compare:
   434                           	callstack 0
   435  00006C                     sprintf@ap:
   436                           	callstack 0
   437                           
   438                           ; 2 bytes @ 0xC
   439  00006C                     	ds	2
   440  00006E                     compare@upper:
   441                           	callstack 0
   442  00006E                     sprintf@f:
   443                           	callstack 0
   444                           
   445                           ; 11 bytes @ 0xE
   446  00006E                     	ds	2
   447  000070                     detect_color@m:
   448                           	callstack 0
   449                           
   450                           ; 2 bytes @ 0x10
   451  000070                     	ds	2
   452  000072                     detect_color@w:
   453                           	callstack 0
   454                           
   455                           ; 2 bytes @ 0x12
   456  000072                     	ds	2
   457  000074                     ??_detect_color:
   458                           
   459                           ; 1 bytes @ 0x14
   460  000074                     	ds	4
   461  000078                     detect_color@RB:
   462                           	callstack 0
   463                           
   464                           ; 2 bytes @ 0x18
   465  000078                     	ds	1
   466  000079                     color_display@buf:
   467                           	callstack 0
   468  000079                     color_predict@buf:
   469                           	callstack 0
   470                           
   471                           ; 100 bytes @ 0x19
   472  000079                     	ds	1
   473  00007A                     detect_color@GR:
   474                           	callstack 0
   475                           
   476                           ; 2 bytes @ 0x1A
   477  00007A                     	ds	2
   478  00007C                     detect_color@GB:
   479                           	callstack 0
   480                           
   481                           ; 2 bytes @ 0x1C
   482  00007C                     	ds	2
   483  00007E                     detect_color@RG:
   484                           	callstack 0
   485                           
   486                           ; 2 bytes @ 0x1E
   487  00007E                     	ds	2
   488  000080                     detect_color@GG:
   489                           	callstack 0
   490                           
   491                           ; 2 bytes @ 0x20
   492  000080                     	ds	2
   493  000082                     detect_color@BB:
   494                           	callstack 0
   495                           
   496                           ; 2 bytes @ 0x22
   497  000082                     	ds	2
   498  000084                     detect_color@RR:
   499                           	callstack 0
   500                           
   501                           ; 2 bytes @ 0x24
   502  000084                     	ds	2
   503  000086                     detect_color@BR:
   504                           	callstack 0
   505                           
   506                           ; 2 bytes @ 0x26
   507  000086                     	ds	2
   508  000088                     detect_color@BG:
   509                           	callstack 0
   510                           
   511                           ; 2 bytes @ 0x28
   512  000088                     	ds	2
   513  00008A                     detect_color@color:
   514                           	callstack 0
   515                           
   516                           ; 1 bytes @ 0x2A
   517  00008A                     	ds	1
   518  00008B                     _detect_color$2685:
   519                           	callstack 0
   520                           
   521                           ; 4 bytes @ 0x2B
   522  00008B                     	ds	82
   523  0000DD                     color_predict@color:
   524                           	callstack 0
   525                           
   526                           ; 1 bytes @ 0x7D
   527  0000DD                     	ds	1
   528  0000DE                     ??_main:
   529                           
   530                           ; 1 bytes @ 0x7E
   531  0000DE                     	ds	2
   532                           
   533                           	psect	cstackCOMRAM
   534  000001                     __pcstackCOMRAM:
   535                           	callstack 0
   536  000001                     ??_LED_R:
   537  000001                     ??_LED_C:
   538  000001                     ??_LED_B:
   539  000001                     ??_LED_G:
   540  000001                     ??_I2C_2_Master_Idle:
   541  000001                     ?_strlen:
   542                           	callstack 0
   543  000001                     ?___fladd:
   544                           	callstack 0
   545  000001                     ?___flneg:
   546                           	callstack 0
   547  000001                     ?___xxtofl:
   548                           	callstack 0
   549  000001                     ?___aodiv:
   550                           	callstack 0
   551  000001                     ?___aomod:
   552                           	callstack 0
   553  000001                     sendCharSerial4@charToSend:
   554                           	callstack 0
   555  000001                     initDCmotorsPWM@PWMperiod:
   556                           	callstack 0
   557  000001                     initDCmotors_parameter@motorL:
   558                           	callstack 0
   559  000001                     fputc@c:
   560                           	callstack 0
   561  000001                     strlen@s:
   562                           	callstack 0
   563  000001                     ___flge@ff1:
   564                           	callstack 0
   565  000001                     ___flneg@f1:
   566                           	callstack 0
   567  000001                     ___fladd@b:
   568                           	callstack 0
   569  000001                     ___xxtofl@val:
   570                           	callstack 0
   571  000001                     ___aodiv@dividend:
   572                           	callstack 0
   573  000001                     ___aomod@dividend:
   574                           	callstack 0
   575                           
   576                           ; 8 bytes @ 0x0
   577  000001                     	ds	1
   578  000002                     ??_I2C_2_Master_Read:
   579  000002                     I2C_2_Master_Write@data_byte:
   580                           	callstack 0
   581  000002                     sendStringSerial4@string:
   582                           	callstack 0
   583                           
   584                           ; 2 bytes @ 0x1
   585  000002                     	ds	1
   586  000003                     color_writetoaddr@value:
   587                           	callstack 0
   588  000003                     I2C_2_Master_Read@ack:
   589                           	callstack 0
   590  000003                     initDCmotors_parameter@motorR:
   591                           	callstack 0
   592  000003                     fputc@fp:
   593                           	callstack 0
   594  000003                     strlen@a:
   595                           	callstack 0
   596                           
   597                           ; 2 bytes @ 0x2
   598  000003                     	ds	1
   599  000004                     color_writetoaddr@address:
   600                           	callstack 0
   601  000004                     I2C_2_Master_Read@tmp:
   602                           	callstack 0
   603                           
   604                           ; 1 bytes @ 0x3
   605  000004                     	ds	1
   606  000005                     ??_fputc:
   607  000005                     ??_color_click_init:
   608  000005                     ??___xxtofl:
   609  000005                     ?_color_read_Red:
   610                           	callstack 0
   611  000005                     ?_color_read_Blue:
   612                           	callstack 0
   613  000005                     ?_color_read_Green:
   614                           	callstack 0
   615  000005                     ?_color_read_Clear:
   616                           	callstack 0
   617  000005                     ___flge@ff2:
   618                           	callstack 0
   619  000005                     ___fladd@a:
   620                           	callstack 0
   621                           
   622                           ; 4 bytes @ 0x4
   623  000005                     	ds	2
   624  000007                     ??_color_read_Red:
   625  000007                     ??_color_read_Blue:
   626  000007                     ??_color_read_Green:
   627  000007                     ??_color_read_Clear:
   628                           
   629                           ; 1 bytes @ 0x6
   630  000007                     	ds	2
   631  000009                     ??___fladd:
   632  000009                     ??___flge:
   633  000009                     ___xxtofl@sign:
   634                           	callstack 0
   635  000009                     ___aodiv@divisor:
   636                           	callstack 0
   637  000009                     ___aomod@divisor:
   638                           	callstack 0
   639                           
   640                           ; 8 bytes @ 0x8
   641  000009                     	ds	1
   642  00000A                     ___xxtofl@exp:
   643                           	callstack 0
   644  00000A                     color_read_Red@tmp:
   645                           	callstack 0
   646  00000A                     color_read_Blue@tmp:
   647                           	callstack 0
   648  00000A                     color_read_Green@tmp:
   649                           	callstack 0
   650  00000A                     color_read_Clear@tmp:
   651                           	callstack 0
   652  00000A                     fputs@s:
   653                           	callstack 0
   654                           
   655                           ; 2 bytes @ 0x9
   656  00000A                     	ds	1
   657  00000B                     ___xxtofl@arg:
   658                           	callstack 0
   659                           
   660                           ; 4 bytes @ 0xA
   661  00000B                     	ds	1
   662  00000C                     read_color@m:
   663                           	callstack 0
   664  00000C                     calibrate_white@w:
   665                           	callstack 0
   666  00000C                     fputs@fp:
   667                           	callstack 0
   668                           
   669                           ; 2 bytes @ 0xB
   670  00000C                     	ds	1
   671  00000D                     ___fladd@signs:
   672                           	callstack 0
   673                           
   674                           ; 1 bytes @ 0xC
   675  00000D                     	ds	1
   676  00000E                     ??_calibrate_white:
   677  00000E                     ___fladd@aexp:
   678                           	callstack 0
   679  00000E                     fputs@c:
   680                           	callstack 0
   681                           
   682                           ; 1 bytes @ 0xD
   683  00000E                     	ds	1
   684  00000F                     ?___fldiv:
   685                           	callstack 0
   686  00000F                     ___fladd@bexp:
   687                           	callstack 0
   688  00000F                     fputs@i:
   689                           	callstack 0
   690  00000F                     ___fldiv@b:
   691                           	callstack 0
   692                           
   693                           ; 4 bytes @ 0xE
   694  00000F                     	ds	1
   695  000010                     ___fladd@grs:
   696                           	callstack 0
   697                           
   698                           ; 1 bytes @ 0xF
   699  000010                     	ds	1
   700  000011                     ?_pad:
   701                           	callstack 0
   702  000011                     ?___flsub:
   703                           	callstack 0
   704  000011                     ___aodiv@counter:
   705                           	callstack 0
   706  000011                     ___aomod@counter:
   707                           	callstack 0
   708  000011                     pad@fp:
   709                           	callstack 0
   710  000011                     ___flsub@b:
   711                           	callstack 0
   712                           
   713                           ; 4 bytes @ 0x10
   714  000011                     	ds	1
   715  000012                     ___aodiv@sign:
   716                           	callstack 0
   717  000012                     ___aomod@sign:
   718                           	callstack 0
   719                           
   720                           ; 1 bytes @ 0x11
   721  000012                     	ds	1
   722  000013                     ?_abs:
   723                           	callstack 0
   724  000013                     pad@buf:
   725                           	callstack 0
   726  000013                     abs@a:
   727                           	callstack 0
   728  000013                     ___fldiv@a:
   729                           	callstack 0
   730  000013                     ___aodiv@quotient:
   731                           	callstack 0
   732                           
   733                           ; 8 bytes @ 0x12
   734  000013                     	ds	2
   735  000015                     ??_abs:
   736  000015                     pad@p:
   737                           	callstack 0
   738  000015                     ___flsub@a:
   739                           	callstack 0
   740                           
   741                           ; 4 bytes @ 0x14
   742  000015                     	ds	2
   743  000017                     ??___fldiv:
   744  000017                     ??_pad:
   745                           
   746                           ; 1 bytes @ 0x16
   747  000017                     	ds	1
   748  000018                     pad@i:
   749                           	callstack 0
   750                           
   751                           ; 2 bytes @ 0x17
   752  000018                     	ds	1
   753  000019                     
   754                           ; 1 bytes @ 0x18
   755  000019                     	ds	1
   756  00001A                     pad@w:
   757                           	callstack 0
   758                           
   759                           ; 2 bytes @ 0x19
   760  00001A                     	ds	1
   761  00001B                     ___fldiv@rem:
   762                           	callstack 0
   763                           
   764                           ; 4 bytes @ 0x1A
   765  00001B                     	ds	1
   766  00001C                     ?_dtoa:
   767                           	callstack 0
   768  00001C                     dtoa@fp:
   769                           	callstack 0
   770                           
   771                           ; 2 bytes @ 0x1B
   772  00001C                     	ds	2
   773  00001E                     dtoa@d:
   774                           	callstack 0
   775                           
   776                           ; 8 bytes @ 0x1D
   777  00001E                     	ds	1
   778  00001F                     ___fldiv@sign:
   779                           	callstack 0
   780                           
   781                           ; 1 bytes @ 0x1E
   782  00001F                     	ds	1
   783  000020                     ___fldiv@new_exp:
   784                           	callstack 0
   785                           
   786                           ; 2 bytes @ 0x1F
   787  000020                     	ds	2
   788  000022                     ___fldiv@grs:
   789                           	callstack 0
   790                           
   791                           ; 4 bytes @ 0x21
   792  000022                     	ds	4
   793  000026                     ??_dtoa:
   794  000026                     ___fldiv@bexp:
   795                           	callstack 0
   796                           
   797                           ; 1 bytes @ 0x25
   798  000026                     	ds	1
   799  000027                     ___fldiv@aexp:
   800                           	callstack 0
   801                           
   802                           ; 1 bytes @ 0x26
   803  000027                     	ds	1
   804  000028                     ?___flmul:
   805                           	callstack 0
   806  000028                     ___flmul@b:
   807                           	callstack 0
   808                           
   809                           ; 4 bytes @ 0x27
   810  000028                     	ds	4
   811  00002C                     ___flmul@a:
   812                           	callstack 0
   813                           
   814                           ; 4 bytes @ 0x2B
   815  00002C                     	ds	2
   816  00002E                     _dtoa$2329:
   817                           	callstack 0
   818                           
   819                           ; 2 bytes @ 0x2D
   820  00002E                     	ds	2
   821  000030                     ??___flmul:
   822  000030                     dtoa@p:
   823                           	callstack 0
   824                           
   825                           ; 2 bytes @ 0x2F
   826  000030                     	ds	2
   827  000032                     dtoa@w:
   828                           	callstack 0
   829                           
   830                           ; 2 bytes @ 0x31
   831  000032                     	ds	2
   832  000034                     ___flmul@sign:
   833                           	callstack 0
   834  000034                     dtoa@s:
   835                           	callstack 0
   836                           
   837                           ; 2 bytes @ 0x33
   838  000034                     	ds	1
   839  000035                     ___flmul@grs:
   840                           	callstack 0
   841                           
   842                           ; 4 bytes @ 0x34
   843  000035                     	ds	1
   844  000036                     dtoa@n:
   845                           	callstack 0
   846                           
   847                           ; 8 bytes @ 0x35
   848  000036                     	ds	3
   849  000039                     ___flmul@aexp:
   850                           	callstack 0
   851                           
   852                           ; 1 bytes @ 0x38
   853  000039                     	ds	1
   854  00003A                     ___flmul@bexp:
   855                           	callstack 0
   856                           
   857                           ; 1 bytes @ 0x39
   858  00003A                     	ds	1
   859  00003B                     ___flmul@prod:
   860                           	callstack 0
   861                           
   862                           ; 4 bytes @ 0x3A
   863  00003B                     	ds	3
   864  00003E                     dtoa@i:
   865                           	callstack 0
   866                           
   867                           ; 2 bytes @ 0x3D
   868  00003E                     	ds	1
   869  00003F                     ___flmul@temp:
   870                           	callstack 0
   871                           
   872                           ; 2 bytes @ 0x3E
   873  00003F                     	ds	1
   874  000040                     ?_vfpfcnvrt:
   875                           	callstack 0
   876  000040                     vfpfcnvrt@fp:
   877                           	callstack 0
   878                           
   879                           ; 2 bytes @ 0x3F
   880  000040                     	ds	1
   881  000041                     ?_roundf:
   882                           	callstack 0
   883  000041                     roundf@x:
   884                           	callstack 0
   885                           
   886                           ; 4 bytes @ 0x40
   887  000041                     	ds	1
   888  000042                     vfpfcnvrt@fmt:
   889                           	callstack 0
   890                           
   891                           ; 2 bytes @ 0x41
   892  000042                     	ds	2
   893  000044                     vfpfcnvrt@ap:
   894                           	callstack 0
   895                           
   896                           ; 2 bytes @ 0x43
   897  000044                     	ds	1
   898  000045                     ??_roundf:
   899                           
   900                           ; 1 bytes @ 0x44
   901  000045                     	ds	1
   902  000046                     ??_vfpfcnvrt:
   903                           
   904                           ; 1 bytes @ 0x45
   905  000046                     	ds	2
   906  000048                     vfpfcnvrt@ll:
   907                           	callstack 0
   908                           
   909                           ; 8 bytes @ 0x47
   910  000048                     	ds	1
   911  000049                     _roundf$2687:
   912                           	callstack 0
   913                           
   914                           ; 4 bytes @ 0x48
   915  000049                     	ds	4
   916  00004D                     roundf@e:
   917                           	callstack 0
   918                           
   919                           ; 2 bytes @ 0x4C
   920  00004D                     	ds	2
   921  00004F                     _roundf$2686:
   922                           	callstack 0
   923                           
   924                           ; 4 bytes @ 0x4E
   925  00004F                     	ds	1
   926  000050                     ?_vfprintf:
   927                           	callstack 0
   928  000050                     vfprintf@fp:
   929                           	callstack 0
   930                           
   931                           ; 2 bytes @ 0x4F
   932  000050                     	ds	2
   933  000052                     vfprintf@fmt:
   934                           	callstack 0
   935                           
   936                           ; 2 bytes @ 0x51
   937  000052                     	ds	1
   938  000053                     roundf@u:
   939                           	callstack 0
   940                           
   941                           ; 4 bytes @ 0x52
   942  000053                     	ds	1
   943  000054                     vfprintf@ap:
   944                           	callstack 0
   945                           
   946                           ; 2 bytes @ 0x53
   947  000054                     	ds	2
   948  000056                     vfprintf@cfmt:
   949                           	callstack 0
   950                           
   951                           ; 2 bytes @ 0x55
   952  000056                     	ds	1
   953  000057                     roundf@y:
   954                           	callstack 0
   955                           
   956                           ; 4 bytes @ 0x56
   957  000057                     	ds	1
   958  000058                     color_display@m:
   959                           	callstack 0
   960                           
   961                           ; 2 bytes @ 0x57
   962  000058                     	ds	2
   963  00005A                     
   964                           ; 1 bytes @ 0x59
   965  00005A                     	ds	1
   966  00005B                     ?___fltol:
   967                           	callstack 0
   968  00005B                     ___fltol@f1:
   969                           	callstack 0
   970                           
   971                           ; 4 bytes @ 0x5A
   972  00005B                     	ds	4
   973  00005F                     compare@result:
   974                           	callstack 0
   975                           
   976                           ; 1 bytes @ 0x5E
   977  00005F                     	ds	1
   978                           
   979 ;;
   980 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   981 ;;
   982 ;; *************** function _main *****************
   983 ;; Defined at:
   984 ;;		line 30 in file "main.c"
   985 ;; Parameters:    Size  Location     Type
   986 ;;		None
   987 ;; Auto vars:     Size  Location     Type
   988 ;;  white          18   21[BANK1 ] struct white_card
   989 ;;  motorR         10   11[BANK1 ] struct DC_motor
   990 ;;  motorL         10    1[BANK1 ] struct DC_motor
   991 ;;  rgb             8   39[BANK1 ] struct color_rgb
   992 ;;  x               2    0        int 
   993 ;;  k               2    0        int 
   994 ;;  j               2    0        int 
   995 ;;  i               2    0        int 
   996 ;;  complete        1    0        unsigned char 
   997 ;;  color           1    0[BANK1 ] unsigned char 
   998 ;; Return value:  Size  Location     Type
   999 ;;                  1    wreg      void 
  1000 ;; Registers used:
  1001 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1002 ;; Tracked objects:
  1003 ;;		On entry : 0/0
  1004 ;;		On exit  : 0/0
  1005 ;;		Unchanged: 0/0
  1006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1007 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1008 ;;      Locals:         0       0      47       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1009 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1010 ;;      Totals:         0       2      47       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1011 ;;Total ram usage:       49 bytes
  1012 ;; Hardware stack levels required when called: 9
  1013 ;; This function calls:
  1014 ;;		_I2C_2_Master_Init
  1015 ;;		_LED_B
  1016 ;;		_LED_C
  1017 ;;		_LED_G
  1018 ;;		_LED_R
  1019 ;;		_calibrate_white
  1020 ;;		_calibration_init
  1021 ;;		_color_click_init
  1022 ;;		_color_display
  1023 ;;		_color_predict
  1024 ;;		_detect_color
  1025 ;;		_initDCmotorsPWM
  1026 ;;		_initDCmotors_parameter
  1027 ;;		_initUSART4
  1028 ;;		_read_color
  1029 ;; This function is called by:
  1030 ;;		Startup code after reset
  1031 ;; This function uses a non-reentrant model
  1032 ;;
  1033                           
  1034                           	psect	text0
  1035  00373E                     __ptext0:
  1036                           	callstack 0
  1037  00373E                     _main:
  1038                           	callstack 22
  1039  00373E                     
  1040                           ;main.c: 31:     I2C_2_Master_Init();
  1041  00373E  EC96  F01F         	call	_I2C_2_Master_Init	;wreg free
  1042  003742                     
  1043                           ;main.c: 32:     color_click_init();
  1044  003742  EC64  F01F         	call	_color_click_init	;wreg free
  1045  003746                     
  1046                           ;main.c: 33:     initDCmotorsPWM(199);
  1047  003746  0E00               	movlw	0
  1048  003748  6E02               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
  1049  00374A  0EC7               	movlw	199
  1050  00374C  6E01               	movwf	initDCmotorsPWM@PWMperiod^0,c
  1051  00374E  EC72  F01E         	call	_initDCmotorsPWM	;wreg free
  1052  003752                     
  1053                           ;main.c: 35:     initUSART4();
  1054  003752  EC0F  F020         	call	_initUSART4	;wreg free
  1055  003756                     
  1056                           ;main.c: 37:     struct color_rgb rgb;;main.c: 38:     struct white_card white;;main.c: 
      +                          42:     struct DC_motor motorL, motorR;;main.c: 44:     initDCmotors_parameter(&motorL, 
      +                          &motorR);
  1057  003756  0E7B               	movlw	low main@motorL
  1058  003758  6E01               	movwf	initDCmotors_parameter@motorL^0,c
  1059  00375A  0E01               	movlw	high main@motorL
  1060  00375C  6E02               	movwf	(initDCmotors_parameter@motorL+1)^0,c
  1061  00375E  0E85               	movlw	low main@motorR
  1062  003760  6E03               	movwf	initDCmotors_parameter@motorR^0,c
  1063  003762  0E01               	movlw	high main@motorR
  1064  003764  6E04               	movwf	(initDCmotors_parameter@motorR+1)^0,c
  1065  003766  EC36  F01B         	call	_initDCmotors_parameter	;wreg free
  1066  00376A                     
  1067                           ;main.c: 45:     calibration_init();
  1068  00376A  EC2A  F020         	call	_calibration_init	;wreg free
  1069  00376E                     
  1070                           ;main.c: 47:     TRISFbits.TRISF6 = 0;
  1071  00376E  9C86               	bcf	134,6,c	;volatile
  1072  003770                     
  1073                           ;main.c: 48:     LATFbits.LATF6 = 0;
  1074  003770  9C7E               	bcf	126,6,c	;volatile
  1075  003772                     
  1076                           ;main.c: 50:     TRISGbits.TRISG1 = 0;
  1077  003772  9287               	bcf	135,1,c	;volatile
  1078  003774                     
  1079                           ;main.c: 51:     TRISFbits.TRISF7 = 0;
  1080  003774  9E86               	bcf	134,7,c	;volatile
  1081  003776                     
  1082                           ;main.c: 52:     TRISAbits.TRISA4 = 0;
  1083  003776  9881               	bcf	129,4,c	;volatile
  1084  003778                     
  1085                           ;main.c: 53:     LATGbits.LATG1 = 1;
  1086  003778  827F               	bsf	127,1,c	;volatile
  1087  00377A                     
  1088                           ;main.c: 54:     LATFbits.LATF7 = 1;
  1089  00377A  8E7E               	bsf	126,7,c	;volatile
  1090  00377C                     
  1091                           ;main.c: 55:     LATAbits.LATA4 = 1;
  1092  00377C  8879               	bsf	121,4,c	;volatile
  1093  00377E                     
  1094                           ;main.c: 64:     _delay((unsigned long)((3000)*(64000000/4000.0)));
  1095  00377E  0EF4               	movlw	244
  1096  003780  0100               	movlb	0	; () banked
  1097  003782  6FDF               	movwf	(??_main+1)& (0+255),b
  1098  003784  0E82               	movlw	130
  1099  003786  6FDE               	movwf	??_main& (0+255),b
  1100  003788  0E05               	movlw	5
  1101  00378A                     u4217:
  1102  00378A  2EE8               	decfsz	wreg,f,c
  1103  00378C  D7FE               	bra	u4217
  1104  00378E  2FDE               	decfsz	??_main& (0+255),f,b
  1105  003790  D7FC               	bra	u4217
  1106  003792  2FDF               	decfsz	(??_main+1)& (0+255),f,b
  1107  003794  D7FA               	bra	u4217
  1108  003796                     
  1109                           ;main.c: 65:     calibrate_white(&white);
  1110  003796  0E8F               	movlw	low main@white
  1111  003798  6E0C               	movwf	calibrate_white@w^0,c
  1112  00379A  0E01               	movlw	high main@white
  1113  00379C  6E0D               	movwf	(calibrate_white@w+1)^0,c
  1114  00379E  EC2C  F019         	call	_calibrate_white	;wreg free
  1115  0037A2                     
  1116                           ;main.c: 66:     _delay((unsigned long)((3000)*(64000000/4000.0)));
  1117  0037A2  0EF4               	movlw	244
  1118  0037A4  0100               	movlb	0	; () banked
  1119  0037A6  6FDF               	movwf	(??_main+1)& (0+255),b
  1120  0037A8  0E82               	movlw	130
  1121  0037AA  6FDE               	movwf	??_main& (0+255),b
  1122  0037AC  0E05               	movlw	5
  1123  0037AE                     u4227:
  1124  0037AE  2EE8               	decfsz	wreg,f,c
  1125  0037B0  D7FE               	bra	u4227
  1126  0037B2  2FDE               	decfsz	??_main& (0+255),f,b
  1127  0037B4  D7FC               	bra	u4227
  1128  0037B6  2FDF               	decfsz	(??_main+1)& (0+255),f,b
  1129  0037B8  D7FA               	bra	u4227
  1130  0037BA                     l4332:
  1131                           
  1132                           ;main.c: 72:             color = detect_color(&rgb, &white);
  1133  0037BA  0EA1               	movlw	low main@rgb
  1134  0037BC  0100               	movlb	0	; () banked
  1135  0037BE  6F70               	movwf	detect_color@m& (0+255),b
  1136  0037C0  0E01               	movlw	high main@rgb
  1137  0037C2  6F71               	movwf	(detect_color@m+1)& (0+255),b
  1138  0037C4  0E8F               	movlw	low main@white
  1139  0037C6  6F72               	movwf	detect_color@w& (0+255),b
  1140  0037C8  0E01               	movlw	high main@white
  1141  0037CA  6F73               	movwf	(detect_color@w+1)& (0+255),b
  1142  0037CC  EC2A  F007         	call	_detect_color	;wreg free
  1143  0037D0  0101               	movlb	1	; () banked
  1144  0037D2  6F7A               	movwf	main@color& (0+255),b
  1145  0037D4                     
  1146                           ; BSR set to: 1
  1147                           ;main.c: 74:             read_color(&rgb);
  1148  0037D4  0EA1               	movlw	low main@rgb
  1149  0037D6  6E0C               	movwf	read_color@m^0,c
  1150  0037D8  0E01               	movlw	high main@rgb
  1151  0037DA  6E0D               	movwf	(read_color@m+1)^0,c
  1152  0037DC  EC35  F01D         	call	_read_color	;wreg free
  1153  0037E0                     
  1154                           ;main.c: 76:             color_predict(color);
  1155  0037E0  0101               	movlb	1	; () banked
  1156  0037E2  517A               	movf	main@color& (0+255),w,b
  1157  0037E4  ECC7  F01A         	call	_color_predict
  1158  0037E8                     
  1159                           ;main.c: 77:             _delay((unsigned long)((200)*(64000000/4000.0)));
  1160  0037E8  0E11               	movlw	17
  1161  0037EA  0100               	movlb	0	; () banked
  1162  0037EC  6FDF               	movwf	(??_main+1)& (0+255),b
  1163  0037EE  0E3C               	movlw	60
  1164  0037F0  6FDE               	movwf	??_main& (0+255),b
  1165  0037F2  0ECB               	movlw	203
  1166  0037F4                     u4237:
  1167  0037F4  2EE8               	decfsz	wreg,f,c
  1168  0037F6  D7FE               	bra	u4237
  1169  0037F8  2FDE               	decfsz	??_main& (0+255),f,b
  1170  0037FA  D7FC               	bra	u4237
  1171  0037FC  2FDF               	decfsz	(??_main+1)& (0+255),f,b
  1172  0037FE  D7FA               	bra	u4237
  1173  003800  EFDD  F01B         	goto	l4332
  1174  003804  EF00  F000         	goto	start
  1175  003808                     __end_of_main:
  1176                           	callstack 0
  1177                           
  1178 ;; *************** function _initUSART4 *****************
  1179 ;; Defined at:
  1180 ;;		line 4 in file "serial.c"
  1181 ;; Parameters:    Size  Location     Type
  1182 ;;		None
  1183 ;; Auto vars:     Size  Location     Type
  1184 ;;		None
  1185 ;; Return value:  Size  Location     Type
  1186 ;;                  1    wreg      void 
  1187 ;; Registers used:
  1188 ;;		wreg, status,2
  1189 ;; Tracked objects:
  1190 ;;		On entry : 0/0
  1191 ;;		On exit  : 0/0
  1192 ;;		Unchanged: 0/0
  1193 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1194 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1195 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1196 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1197 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1198 ;;Total ram usage:        0 bytes
  1199 ;; Hardware stack levels used: 1
  1200 ;; This function calls:
  1201 ;;		Nothing
  1202 ;; This function is called by:
  1203 ;;		_main
  1204 ;; This function uses a non-reentrant model
  1205 ;;
  1206                           
  1207                           	psect	text1
  1208  00401E                     __ptext1:
  1209                           	callstack 0
  1210  00401E                     _initUSART4:
  1211                           	callstack 30
  1212  00401E                     
  1213                           ;serial.c: 8:     RC0PPS = 0x12;
  1214  00401E  0E12               	movlw	18
  1215  004020  010E               	movlb	14	; () banked
  1216  004022  6F62               	movwf	98,b	;volatile
  1217                           
  1218                           ;serial.c: 9:     RX4PPS = 0x11;
  1219  004024  0E11               	movlw	17
  1220  004026  6F15               	movwf	21,b	;volatile
  1221  004028                     
  1222                           ; BSR set to: 14
  1223                           ;serial.c: 11:     BAUD4CONbits.BRG16 = 0;
  1224  004028  97E9               	bcf	233,3,b	;volatile
  1225  00402A                     
  1226                           ; BSR set to: 14
  1227                           ;serial.c: 12:     TX4STAbits.BRGH = 0;
  1228  00402A  95E8               	bcf	232,2,b	;volatile
  1229                           
  1230                           ;serial.c: 13:     SP4BRGL = 51;
  1231  00402C  0E33               	movlw	51
  1232  00402E  6FE5               	movwf	229,b	;volatile
  1233                           
  1234                           ;serial.c: 15:     SP4BRGH = 0;
  1235  004030  0E00               	movlw	0
  1236  004032  6FE6               	movwf	230,b	;volatile
  1237  004034                     
  1238                           ; BSR set to: 14
  1239                           ;serial.c: 17:     RC4STAbits.CREN = 1;
  1240  004034  89E7               	bsf	231,4,b	;volatile
  1241  004036                     
  1242                           ; BSR set to: 14
  1243                           ;serial.c: 18:     TX4STAbits.TXEN = 1;
  1244  004036  8BE8               	bsf	232,5,b	;volatile
  1245  004038                     
  1246                           ; BSR set to: 14
  1247                           ;serial.c: 19:     RC4STAbits.SPEN = 1;
  1248  004038  8FE7               	bsf	231,7,b	;volatile
  1249  00403A                     
  1250                           ; BSR set to: 14
  1251  00403A  0012               	return		;funcret
  1252  00403C                     __end_of_initUSART4:
  1253                           	callstack 0
  1254                           
  1255 ;; *************** function _initDCmotors_parameter *****************
  1256 ;; Defined at:
  1257 ;;		line 41 in file "dc_motor.c"
  1258 ;; Parameters:    Size  Location     Type
  1259 ;;  motorL          2    0[COMRAM] PTR struct DC_motor
  1260 ;;		 -> main@motorL(10), 
  1261 ;;  motorR          2    2[COMRAM] PTR struct DC_motor
  1262 ;;		 -> main@motorR(10), 
  1263 ;; Auto vars:     Size  Location     Type
  1264 ;;		None
  1265 ;; Return value:  Size  Location     Type
  1266 ;;                  1    wreg      void 
  1267 ;; Registers used:
  1268 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1269 ;; Tracked objects:
  1270 ;;		On entry : 0/0
  1271 ;;		On exit  : 0/0
  1272 ;;		Unchanged: 0/0
  1273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1274 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1275 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1276 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1277 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1278 ;;Total ram usage:        4 bytes
  1279 ;; Hardware stack levels used: 1
  1280 ;; This function calls:
  1281 ;;		Nothing
  1282 ;; This function is called by:
  1283 ;;		_main
  1284 ;; This function uses a non-reentrant model
  1285 ;;
  1286                           
  1287                           	psect	text2
  1288  00366C                     __ptext2:
  1289                           	callstack 0
  1290  00366C                     _initDCmotors_parameter:
  1291                           	callstack 30
  1292  00366C                     
  1293                           ;dc_motor.c: 43:     motorL->power = 0;
  1294  00366C  C001  FFD9         	movff	initDCmotors_parameter@motorL,fsr2l
  1295  003670  C002  FFDA         	movff	initDCmotors_parameter@motorL+1,fsr2h
  1296  003674  0E00               	movlw	0
  1297  003676  6EDF               	movwf	indf2,c
  1298  003678                     
  1299                           ;dc_motor.c: 44:     motorL->direction = 1;
  1300  003678  EE20 F001          	lfsr	2,1
  1301  00367C  5001               	movf	initDCmotors_parameter@motorL^0,w,c
  1302  00367E  26D9               	addwf	fsr2l,f,c
  1303  003680  5002               	movf	(initDCmotors_parameter@motorL+1)^0,w,c
  1304  003682  22DA               	addwfc	fsr2h,f,c
  1305  003684  0E01               	movlw	1
  1306  003686  6EDF               	movwf	indf2,c
  1307  003688                     
  1308                           ;dc_motor.c: 45:     motorL->dutyHighByte = (unsigned char *)(&PWM6DCH);
  1309  003688  EE20 F002          	lfsr	2,2
  1310  00368C  5001               	movf	initDCmotors_parameter@motorL^0,w,c
  1311  00368E  26D9               	addwf	fsr2l,f,c
  1312  003690  5002               	movf	(initDCmotors_parameter@motorL+1)^0,w,c
  1313  003692  22DA               	addwfc	fsr2h,f,c
  1314  003694  0EA3               	movlw	163
  1315  003696  6EDE               	movwf	postinc2,c
  1316  003698  0E0F               	movlw	15
  1317  00369A  6EDD               	movwf	postdec2,c
  1318  00369C                     
  1319                           ;dc_motor.c: 46:     motorL->dir_LAT = (unsigned char *)(&LATE);
  1320  00369C  EE20 F004          	lfsr	2,4
  1321  0036A0  5001               	movf	initDCmotors_parameter@motorL^0,w,c
  1322  0036A2  26D9               	addwf	fsr2l,f,c
  1323  0036A4  5002               	movf	(initDCmotors_parameter@motorL+1)^0,w,c
  1324  0036A6  22DA               	addwfc	fsr2h,f,c
  1325  0036A8  0E7D               	movlw	125
  1326  0036AA  6EDE               	movwf	postinc2,c
  1327  0036AC  0E0F               	movlw	15
  1328  0036AE  6EDD               	movwf	postdec2,c
  1329  0036B0                     
  1330                           ;dc_motor.c: 47:     motorL->dir_pin = 4;
  1331  0036B0  EE20 F006          	lfsr	2,6
  1332  0036B4  5001               	movf	initDCmotors_parameter@motorL^0,w,c
  1333  0036B6  26D9               	addwf	fsr2l,f,c
  1334  0036B8  5002               	movf	(initDCmotors_parameter@motorL+1)^0,w,c
  1335  0036BA  22DA               	addwfc	fsr2h,f,c
  1336  0036BC  0E04               	movlw	4
  1337  0036BE  6EDF               	movwf	indf2,c
  1338  0036C0                     
  1339                           ;dc_motor.c: 48:     motorL->PWMperiod = 199;
  1340  0036C0  EE20 F007          	lfsr	2,7
  1341  0036C4  5001               	movf	initDCmotors_parameter@motorL^0,w,c
  1342  0036C6  26D9               	addwf	fsr2l,f,c
  1343  0036C8  5002               	movf	(initDCmotors_parameter@motorL+1)^0,w,c
  1344  0036CA  22DA               	addwfc	fsr2h,f,c
  1345  0036CC  0EC7               	movlw	199
  1346  0036CE  6EDE               	movwf	postinc2,c
  1347  0036D0  0E00               	movlw	0
  1348  0036D2  6EDD               	movwf	postdec2,c
  1349  0036D4                     
  1350                           ;dc_motor.c: 51:     motorR->power = 0;
  1351  0036D4  C003  FFD9         	movff	initDCmotors_parameter@motorR,fsr2l
  1352  0036D8  C004  FFDA         	movff	initDCmotors_parameter@motorR+1,fsr2h
  1353  0036DC  0E00               	movlw	0
  1354  0036DE  6EDF               	movwf	indf2,c
  1355                           
  1356                           ;dc_motor.c: 52:     motorR->direction = 1;
  1357  0036E0  EE20 F001          	lfsr	2,1
  1358  0036E4  5003               	movf	initDCmotors_parameter@motorR^0,w,c
  1359  0036E6  26D9               	addwf	fsr2l,f,c
  1360  0036E8  5004               	movf	(initDCmotors_parameter@motorR+1)^0,w,c
  1361  0036EA  22DA               	addwfc	fsr2h,f,c
  1362  0036EC  0E01               	movlw	1
  1363  0036EE  6EDF               	movwf	indf2,c
  1364                           
  1365                           ;dc_motor.c: 53:     motorR->dutyHighByte = (unsigned char *)(&PWM7DCH);
  1366  0036F0  EE20 F002          	lfsr	2,2
  1367  0036F4  5003               	movf	initDCmotors_parameter@motorR^0,w,c
  1368  0036F6  26D9               	addwf	fsr2l,f,c
  1369  0036F8  5004               	movf	(initDCmotors_parameter@motorR+1)^0,w,c
  1370  0036FA  22DA               	addwfc	fsr2h,f,c
  1371  0036FC  0EA0               	movlw	160
  1372  0036FE  6EDE               	movwf	postinc2,c
  1373  003700  0E0F               	movlw	15
  1374  003702  6EDD               	movwf	postdec2,c
  1375                           
  1376                           ;dc_motor.c: 54:     motorR->dir_LAT = (unsigned char *)(&LATG);
  1377  003704  EE20 F004          	lfsr	2,4
  1378  003708  5003               	movf	initDCmotors_parameter@motorR^0,w,c
  1379  00370A  26D9               	addwf	fsr2l,f,c
  1380  00370C  5004               	movf	(initDCmotors_parameter@motorR+1)^0,w,c
  1381  00370E  22DA               	addwfc	fsr2h,f,c
  1382  003710  0E7F               	movlw	127
  1383  003712  6EDE               	movwf	postinc2,c
  1384  003714  0E0F               	movlw	15
  1385  003716  6EDD               	movwf	postdec2,c
  1386                           
  1387                           ;dc_motor.c: 55:     motorR->dir_pin = 6;
  1388  003718  EE20 F006          	lfsr	2,6
  1389  00371C  5003               	movf	initDCmotors_parameter@motorR^0,w,c
  1390  00371E  26D9               	addwf	fsr2l,f,c
  1391  003720  5004               	movf	(initDCmotors_parameter@motorR+1)^0,w,c
  1392  003722  22DA               	addwfc	fsr2h,f,c
  1393  003724  0E06               	movlw	6
  1394  003726  6EDF               	movwf	indf2,c
  1395                           
  1396                           ;dc_motor.c: 56:     motorR->PWMperiod = 199;
  1397  003728  EE20 F007          	lfsr	2,7
  1398  00372C  5003               	movf	initDCmotors_parameter@motorR^0,w,c
  1399  00372E  26D9               	addwf	fsr2l,f,c
  1400  003730  5004               	movf	(initDCmotors_parameter@motorR+1)^0,w,c
  1401  003732  22DA               	addwfc	fsr2h,f,c
  1402  003734  0EC7               	movlw	199
  1403  003736  6EDE               	movwf	postinc2,c
  1404  003738  0E00               	movlw	0
  1405  00373A  6EDD               	movwf	postdec2,c
  1406  00373C  0012               	return		;funcret
  1407  00373E                     __end_of_initDCmotors_parameter:
  1408                           	callstack 0
  1409                           
  1410 ;; *************** function _initDCmotorsPWM *****************
  1411 ;; Defined at:
  1412 ;;		line 11 in file "dc_motor.c"
  1413 ;; Parameters:    Size  Location     Type
  1414 ;;  PWMperiod       2    0[COMRAM] int 
  1415 ;; Auto vars:     Size  Location     Type
  1416 ;;		None
  1417 ;; Return value:  Size  Location     Type
  1418 ;;                  1    wreg      void 
  1419 ;; Registers used:
  1420 ;;		wreg, status,2
  1421 ;; Tracked objects:
  1422 ;;		On entry : 0/0
  1423 ;;		On exit  : 0/0
  1424 ;;		Unchanged: 0/0
  1425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1426 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1427 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1428 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1429 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1430 ;;Total ram usage:        2 bytes
  1431 ;; Hardware stack levels used: 1
  1432 ;; This function calls:
  1433 ;;		Nothing
  1434 ;; This function is called by:
  1435 ;;		_main
  1436 ;; This function uses a non-reentrant model
  1437 ;;
  1438                           
  1439                           	psect	text3
  1440  003CE4                     __ptext3:
  1441                           	callstack 0
  1442  003CE4                     _initDCmotorsPWM:
  1443                           	callstack 30
  1444  003CE4                     
  1445                           ;dc_motor.c: 14:     TRISEbits.TRISE2=0;
  1446  003CE4  9485               	bcf	133,2,c	;volatile
  1447                           
  1448                           ;dc_motor.c: 15:     TRISCbits.TRISC7=0;
  1449  003CE6  9E83               	bcf	131,7,c	;volatile
  1450                           
  1451                           ;dc_motor.c: 16:     TRISGbits.TRISG6=0;
  1452  003CE8  9C87               	bcf	135,6,c	;volatile
  1453                           
  1454                           ;dc_motor.c: 17:     TRISEbits.TRISE4=0;
  1455  003CEA  9885               	bcf	133,4,c	;volatile
  1456                           
  1457                           ;dc_motor.c: 18:     LATEbits.LATE2=0;
  1458  003CEC  947D               	bcf	125,2,c	;volatile
  1459                           
  1460                           ;dc_motor.c: 19:     LATCbits.LATC7=0;
  1461  003CEE  9E7B               	bcf	123,7,c	;volatile
  1462                           
  1463                           ;dc_motor.c: 20:     LATGbits.LATG6=0;
  1464  003CF0  9C7F               	bcf	127,6,c	;volatile
  1465                           
  1466                           ;dc_motor.c: 21:     LATEbits.LATE4=0;
  1467  003CF2  987D               	bcf	125,4,c	;volatile
  1468  003CF4                     
  1469                           ;dc_motor.c: 24:     T2CONbits.CKPS=0b011;
  1470  003CF4  50BD               	movf	189,w,c	;volatile
  1471  003CF6  0B8F               	andlw	-113
  1472  003CF8  0930               	iorlw	48
  1473  003CFA  6EBD               	movwf	189,c	;volatile
  1474                           
  1475                           ;dc_motor.c: 25:     T2HLTbits.MODE=0b00000;
  1476  003CFC  0EE0               	movlw	-32
  1477  003CFE  16BE               	andwf	190,f,c	;volatile
  1478                           
  1479                           ;dc_motor.c: 26:     T2CLKCONbits.CS=0b0001;
  1480  003D00  50BF               	movf	191,w,c	;volatile
  1481  003D02  0BF0               	andlw	-16
  1482  003D04  0901               	iorlw	1
  1483  003D06  6EBF               	movwf	191,c	;volatile
  1484                           
  1485                           ;dc_motor.c: 29:     T2PR=200-1;
  1486  003D08  0EC7               	movlw	199
  1487  003D0A  6EBC               	movwf	188,c	;volatile
  1488  003D0C                     
  1489                           ;dc_motor.c: 30:     T2CONbits.ON=1;
  1490  003D0C  8EBD               	bsf	189,7,c	;volatile
  1491                           
  1492                           ;dc_motor.c: 32:     RE2PPS=0x0A;
  1493  003D0E  0E0A               	movlw	10
  1494  003D10  010E               	movlb	14	; () banked
  1495  003D12  6F74               	movwf	116,b	;volatile
  1496                           
  1497                           ;dc_motor.c: 33:     RC7PPS=0x0B;
  1498  003D14  0E0B               	movlw	11
  1499  003D16  6F69               	movwf	105,b	;volatile
  1500                           
  1501                           ;dc_motor.c: 35:     PWM6DCH=0;
  1502  003D18  0E00               	movlw	0
  1503  003D1A  6EA3               	movwf	163,c	;volatile
  1504                           
  1505                           ;dc_motor.c: 36:     PWM7DCH=0;
  1506  003D1C  0E00               	movlw	0
  1507  003D1E  6EA0               	movwf	160,c	;volatile
  1508  003D20                     
  1509                           ; BSR set to: 14
  1510                           ;dc_motor.c: 38:     PWM6CONbits.EN = 1;
  1511  003D20  8EA4               	bsf	164,7,c	;volatile
  1512  003D22                     
  1513                           ; BSR set to: 14
  1514                           ;dc_motor.c: 39:     PWM7CONbits.EN = 1;
  1515  003D22  8EA1               	bsf	161,7,c	;volatile
  1516  003D24                     
  1517                           ; BSR set to: 14
  1518  003D24  0012               	return		;funcret
  1519  003D26                     __end_of_initDCmotorsPWM:
  1520                           	callstack 0
  1521                           
  1522 ;; *************** function _detect_color *****************
  1523 ;; Defined at:
  1524 ;;		line 191 in file "color.c"
  1525 ;; Parameters:    Size  Location     Type
  1526 ;;  m               2   16[BANK0 ] PTR struct color_rgb
  1527 ;;		 -> main@rgb(8), 
  1528 ;;  w               2   18[BANK0 ] PTR struct white_card
  1529 ;;		 -> main@white(18), 
  1530 ;; Auto vars:     Size  Location     Type
  1531 ;;  BG              2   40[BANK0 ] unsigned int 
  1532 ;;  BR              2   38[BANK0 ] unsigned int 
  1533 ;;  RR              2   36[BANK0 ] unsigned int 
  1534 ;;  BB              2   34[BANK0 ] unsigned int 
  1535 ;;  GG              2   32[BANK0 ] unsigned int 
  1536 ;;  RG              2   30[BANK0 ] unsigned int 
  1537 ;;  GB              2   28[BANK0 ] unsigned int 
  1538 ;;  GR              2   26[BANK0 ] unsigned int 
  1539 ;;  RB              2   24[BANK0 ] unsigned int 
  1540 ;;  color           1   42[BANK0 ] unsigned char 
  1541 ;; Return value:  Size  Location     Type
  1542 ;;                  1    wreg      unsigned char 
  1543 ;; Registers used:
  1544 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1545 ;; Tracked objects:
  1546 ;;		On entry : 0/0
  1547 ;;		On exit  : 0/0
  1548 ;;		Unchanged: 0/0
  1549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1550 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1551 ;;      Locals:         0      23       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1552 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1553 ;;      Totals:         0      31       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1554 ;;Total ram usage:       31 bytes
  1555 ;; Hardware stack levels used: 1
  1556 ;; Hardware stack levels required when called: 4
  1557 ;; This function calls:
  1558 ;;		_LED_B
  1559 ;;		_LED_G
  1560 ;;		_LED_R
  1561 ;;		___fldiv
  1562 ;;		___flmul
  1563 ;;		___xxtofl
  1564 ;;		_compare
  1565 ;;		_lroundf
  1566 ;;		_read_color
  1567 ;; This function is called by:
  1568 ;;		_main
  1569 ;; This function uses a non-reentrant model
  1570 ;;
  1571                           
  1572                           	psect	text4
  1573  000E54                     __ptext4:
  1574                           	callstack 0
  1575  000E54                     _detect_color:
  1576                           	callstack 26
  1577  000E54  0E00               	movlw	0
  1578  000E56  0100               	movlb	0	; () banked
  1579  000E58  6F7F               	movwf	(detect_color@RG+1)& (0+255),b
  1580  000E5A  0E00               	movlw	0
  1581  000E5C  6F7E               	movwf	detect_color@RG& (0+255),b
  1582  000E5E  0E00               	movlw	0
  1583  000E60  6F79               	movwf	(detect_color@RB+1)& (0+255),b
  1584  000E62  0E00               	movlw	0
  1585  000E64  6F78               	movwf	detect_color@RB& (0+255),b
  1586  000E66  0E00               	movlw	0
  1587  000E68  6F7B               	movwf	(detect_color@GR+1)& (0+255),b
  1588  000E6A  0E00               	movlw	0
  1589  000E6C  6F7A               	movwf	detect_color@GR& (0+255),b
  1590  000E6E  0E00               	movlw	0
  1591  000E70  6F81               	movwf	(detect_color@GG+1)& (0+255),b
  1592  000E72  0E00               	movlw	0
  1593  000E74  6F80               	movwf	detect_color@GG& (0+255),b
  1594  000E76  0E00               	movlw	0
  1595  000E78  6F7D               	movwf	(detect_color@GB+1)& (0+255),b
  1596  000E7A  0E00               	movlw	0
  1597  000E7C  6F7C               	movwf	detect_color@GB& (0+255),b
  1598  000E7E  0E00               	movlw	0
  1599  000E80  6F87               	movwf	(detect_color@BR+1)& (0+255),b
  1600  000E82  0E00               	movlw	0
  1601  000E84  6F86               	movwf	detect_color@BR& (0+255),b
  1602  000E86  0E00               	movlw	0
  1603  000E88  6F89               	movwf	(detect_color@BG+1)& (0+255),b
  1604  000E8A  0E00               	movlw	0
  1605  000E8C  6F88               	movwf	detect_color@BG& (0+255),b
  1606  000E8E  0E00               	movlw	0
  1607  000E90  6F83               	movwf	(detect_color@BB+1)& (0+255),b
  1608  000E92  0E00               	movlw	0
  1609  000E94  6F82               	movwf	detect_color@BB& (0+255),b
  1610                           
  1611                           ;color.c: 196:     unsigned char color = 0;
  1612  000E96  0E00               	movlw	0
  1613  000E98  6F8A               	movwf	detect_color@color& (0+255),b
  1614  000E9A                     
  1615                           ; BSR set to: 0
  1616                           ;color.c: 198:     LED_R();
  1617  000E9A  ECCF  F01F         	call	_LED_R	;wreg free
  1618  000E9E                     
  1619                           ;color.c: 199:     read_color(m);
  1620  000E9E  C070  F00C         	movff	detect_color@m,read_color@m
  1621  000EA2  C071  F00D         	movff	detect_color@m+1,read_color@m+1
  1622  000EA6  EC35  F01D         	call	_read_color	;wreg free
  1623  000EAA                     
  1624                           ;color.c: 200:     RR = lroundf((float)(m->R)/(w->RR)*100); RG = lroundf((float)(m->G)/(
      +                          w->RG)*100); RB = lroundf((float)(m->B)/(w->RB)*100);
  1625  000EAA  C072  FFD9         	movff	detect_color@w,fsr2l
  1626  000EAE  C073  FFDA         	movff	detect_color@w+1,fsr2h
  1627  000EB2  CFDE F074          	movff	postinc2,??_detect_color
  1628  000EB6  CFDD F075          	movff	postdec2,??_detect_color+1
  1629  000EBA  C074  F001         	movff	??_detect_color,___xxtofl@val
  1630  000EBE  C075  F002         	movff	??_detect_color+1,___xxtofl@val+1
  1631  000EC2  6A03               	clrf	(___xxtofl@val+2)^0,c
  1632  000EC4  6A04               	clrf	(___xxtofl@val+3)^0,c
  1633  000EC6  0E00               	movlw	0
  1634  000EC8  EC02  F016         	call	___xxtofl
  1635  000ECC  C001  F013         	movff	?___xxtofl,___fldiv@a
  1636  000ED0  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  1637  000ED4  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  1638  000ED8  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  1639  000EDC  C070  FFD9         	movff	detect_color@m,fsr2l
  1640  000EE0  C071  FFDA         	movff	detect_color@m+1,fsr2h
  1641  000EE4  CFDE F076          	movff	postinc2,??_detect_color+2
  1642  000EE8  CFDD F077          	movff	postdec2,??_detect_color+3
  1643  000EEC  C076  F001         	movff	??_detect_color+2,___xxtofl@val
  1644  000EF0  C077  F002         	movff	??_detect_color+3,___xxtofl@val+1
  1645  000EF4  6A03               	clrf	(___xxtofl@val+2)^0,c
  1646  000EF6  6A04               	clrf	(___xxtofl@val+3)^0,c
  1647  000EF8  0E00               	movlw	0
  1648  000EFA  EC02  F016         	call	___xxtofl
  1649  000EFE  C001  F00F         	movff	?___xxtofl,___fldiv@b
  1650  000F02  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  1651  000F06  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  1652  000F0A  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  1653  000F0E  ECC3  F012         	call	___fldiv	;wreg free
  1654  000F12  C00F  F028         	movff	?___fldiv,___flmul@b
  1655  000F16  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  1656  000F1A  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  1657  000F1E  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  1658  000F22  0E00               	movlw	0
  1659  000F24  6E2C               	movwf	___flmul@a^0,c
  1660  000F26  0E00               	movlw	0
  1661  000F28  6E2D               	movwf	(___flmul@a+1)^0,c
  1662  000F2A  0EC8               	movlw	200
  1663  000F2C  6E2E               	movwf	(___flmul@a+2)^0,c
  1664  000F2E  0E42               	movlw	66
  1665  000F30  6E2F               	movwf	(___flmul@a+3)^0,c
  1666  000F32  ECD7  F00E         	call	___flmul	;wreg free
  1667  000F36  C028  F08B         	movff	?___flmul,_detect_color$2685
  1668  000F3A  C029  F08C         	movff	?___flmul+1,_detect_color$2685+1
  1669  000F3E  C02A  F08D         	movff	?___flmul+2,_detect_color$2685+2
  1670  000F42  C02B  F08E         	movff	?___flmul+3,_detect_color$2685+3
  1671  000F46                     
  1672                           ;color.c: 200:     RR = lroundf((float)(m->R)/(w->RR)*100); RG = lroundf((float)(m->G)/(
      +                          w->RG)*100); RB = lroundf((float)(m->B)/(w->RB)*100);
  1673  000F46  C08B  F066         	movff	_detect_color$2685,lroundf@x
  1674  000F4A  C08C  F067         	movff	_detect_color$2685+1,lroundf@x+1
  1675  000F4E  C08D  F068         	movff	_detect_color$2685+2,lroundf@x+2
  1676  000F52  C08E  F069         	movff	_detect_color$2685+3,lroundf@x+3
  1677  000F56  ECF3  F01E         	call	_lroundf	;wreg free
  1678  000F5A  C066  F084         	movff	?_lroundf,detect_color@RR
  1679  000F5E  C067  F085         	movff	?_lroundf+1,detect_color@RR+1
  1680  000F62  0100               	movlb	0	; () banked
  1681  000F64  EE20 F002          	lfsr	2,2
  1682  000F68  5172               	movf	detect_color@w& (0+255),w,b
  1683  000F6A  26D9               	addwf	fsr2l,f,c
  1684  000F6C  5173               	movf	(detect_color@w+1)& (0+255),w,b
  1685  000F6E  22DA               	addwfc	fsr2h,f,c
  1686  000F70  CFDE F074          	movff	postinc2,??_detect_color
  1687  000F74  CFDD F075          	movff	postdec2,??_detect_color+1
  1688  000F78  C074  F001         	movff	??_detect_color,___xxtofl@val
  1689  000F7C  C075  F002         	movff	??_detect_color+1,___xxtofl@val+1
  1690  000F80  6A03               	clrf	(___xxtofl@val+2)^0,c
  1691  000F82  6A04               	clrf	(___xxtofl@val+3)^0,c
  1692  000F84  0E00               	movlw	0
  1693  000F86  EC02  F016         	call	___xxtofl
  1694  000F8A  C001  F013         	movff	?___xxtofl,___fldiv@a
  1695  000F8E  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  1696  000F92  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  1697  000F96  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  1698  000F9A  0100               	movlb	0	; () banked
  1699  000F9C  EE20 F002          	lfsr	2,2
  1700  000FA0  5170               	movf	detect_color@m& (0+255),w,b
  1701  000FA2  26D9               	addwf	fsr2l,f,c
  1702  000FA4  5171               	movf	(detect_color@m+1)& (0+255),w,b
  1703  000FA6  22DA               	addwfc	fsr2h,f,c
  1704  000FA8  CFDE F076          	movff	postinc2,??_detect_color+2
  1705  000FAC  CFDD F077          	movff	postdec2,??_detect_color+3
  1706  000FB0  C076  F001         	movff	??_detect_color+2,___xxtofl@val
  1707  000FB4  C077  F002         	movff	??_detect_color+3,___xxtofl@val+1
  1708  000FB8  6A03               	clrf	(___xxtofl@val+2)^0,c
  1709  000FBA  6A04               	clrf	(___xxtofl@val+3)^0,c
  1710  000FBC  0E00               	movlw	0
  1711  000FBE  EC02  F016         	call	___xxtofl
  1712  000FC2  C001  F00F         	movff	?___xxtofl,___fldiv@b
  1713  000FC6  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  1714  000FCA  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  1715  000FCE  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  1716  000FD2  ECC3  F012         	call	___fldiv	;wreg free
  1717  000FD6  C00F  F028         	movff	?___fldiv,___flmul@b
  1718  000FDA  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  1719  000FDE  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  1720  000FE2  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  1721  000FE6  0E00               	movlw	0
  1722  000FE8  6E2C               	movwf	___flmul@a^0,c
  1723  000FEA  0E00               	movlw	0
  1724  000FEC  6E2D               	movwf	(___flmul@a+1)^0,c
  1725  000FEE  0EC8               	movlw	200
  1726  000FF0  6E2E               	movwf	(___flmul@a+2)^0,c
  1727  000FF2  0E42               	movlw	66
  1728  000FF4  6E2F               	movwf	(___flmul@a+3)^0,c
  1729  000FF6  ECD7  F00E         	call	___flmul	;wreg free
  1730  000FFA  C028  F08B         	movff	?___flmul,_detect_color$2685
  1731  000FFE  C029  F08C         	movff	?___flmul+1,_detect_color$2685+1
  1732  001002  C02A  F08D         	movff	?___flmul+2,_detect_color$2685+2
  1733  001006  C02B  F08E         	movff	?___flmul+3,_detect_color$2685+3
  1734  00100A  C08B  F066         	movff	_detect_color$2685,lroundf@x
  1735  00100E  C08C  F067         	movff	_detect_color$2685+1,lroundf@x+1
  1736  001012  C08D  F068         	movff	_detect_color$2685+2,lroundf@x+2
  1737  001016  C08E  F069         	movff	_detect_color$2685+3,lroundf@x+3
  1738  00101A  ECF3  F01E         	call	_lroundf	;wreg free
  1739  00101E  C066  F07E         	movff	?_lroundf,detect_color@RG
  1740  001022  C067  F07F         	movff	?_lroundf+1,detect_color@RG+1
  1741  001026  0100               	movlb	0	; () banked
  1742  001028  EE20 F004          	lfsr	2,4
  1743  00102C  5172               	movf	detect_color@w& (0+255),w,b
  1744  00102E  26D9               	addwf	fsr2l,f,c
  1745  001030  5173               	movf	(detect_color@w+1)& (0+255),w,b
  1746  001032  22DA               	addwfc	fsr2h,f,c
  1747  001034  CFDE F074          	movff	postinc2,??_detect_color
  1748  001038  CFDD F075          	movff	postdec2,??_detect_color+1
  1749  00103C  C074  F001         	movff	??_detect_color,___xxtofl@val
  1750  001040  C075  F002         	movff	??_detect_color+1,___xxtofl@val+1
  1751  001044  6A03               	clrf	(___xxtofl@val+2)^0,c
  1752  001046  6A04               	clrf	(___xxtofl@val+3)^0,c
  1753  001048  0E00               	movlw	0
  1754  00104A  EC02  F016         	call	___xxtofl
  1755  00104E  C001  F013         	movff	?___xxtofl,___fldiv@a
  1756  001052  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  1757  001056  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  1758  00105A  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  1759  00105E  0100               	movlb	0	; () banked
  1760  001060  EE20 F004          	lfsr	2,4
  1761  001064  5170               	movf	detect_color@m& (0+255),w,b
  1762  001066  26D9               	addwf	fsr2l,f,c
  1763  001068  5171               	movf	(detect_color@m+1)& (0+255),w,b
  1764  00106A  22DA               	addwfc	fsr2h,f,c
  1765  00106C  CFDE F076          	movff	postinc2,??_detect_color+2
  1766  001070  CFDD F077          	movff	postdec2,??_detect_color+3
  1767  001074  C076  F001         	movff	??_detect_color+2,___xxtofl@val
  1768  001078  C077  F002         	movff	??_detect_color+3,___xxtofl@val+1
  1769  00107C  6A03               	clrf	(___xxtofl@val+2)^0,c
  1770  00107E  6A04               	clrf	(___xxtofl@val+3)^0,c
  1771  001080  0E00               	movlw	0
  1772  001082  EC02  F016         	call	___xxtofl
  1773  001086  C001  F00F         	movff	?___xxtofl,___fldiv@b
  1774  00108A  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  1775  00108E  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  1776  001092  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  1777  001096  ECC3  F012         	call	___fldiv	;wreg free
  1778  00109A  C00F  F028         	movff	?___fldiv,___flmul@b
  1779  00109E  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  1780  0010A2  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  1781  0010A6  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  1782  0010AA  0E00               	movlw	0
  1783  0010AC  6E2C               	movwf	___flmul@a^0,c
  1784  0010AE  0E00               	movlw	0
  1785  0010B0  6E2D               	movwf	(___flmul@a+1)^0,c
  1786  0010B2  0EC8               	movlw	200
  1787  0010B4  6E2E               	movwf	(___flmul@a+2)^0,c
  1788  0010B6  0E42               	movlw	66
  1789  0010B8  6E2F               	movwf	(___flmul@a+3)^0,c
  1790  0010BA  ECD7  F00E         	call	___flmul	;wreg free
  1791  0010BE  C028  F08B         	movff	?___flmul,_detect_color$2685
  1792  0010C2  C029  F08C         	movff	?___flmul+1,_detect_color$2685+1
  1793  0010C6  C02A  F08D         	movff	?___flmul+2,_detect_color$2685+2
  1794  0010CA  C02B  F08E         	movff	?___flmul+3,_detect_color$2685+3
  1795  0010CE  C08B  F066         	movff	_detect_color$2685,lroundf@x
  1796  0010D2  C08C  F067         	movff	_detect_color$2685+1,lroundf@x+1
  1797  0010D6  C08D  F068         	movff	_detect_color$2685+2,lroundf@x+2
  1798  0010DA  C08E  F069         	movff	_detect_color$2685+3,lroundf@x+3
  1799  0010DE  ECF3  F01E         	call	_lroundf	;wreg free
  1800  0010E2                     
  1801                           ;color.c: 201:     _delay((unsigned long)((50)*(64000000/4000.0)));
  1802  0010E2  0E05               	movlw	5
  1803  0010E4  0100               	movlb	0	; () banked
  1804  0010E6  6F75               	movwf	(??_detect_color+1)& (0+255),b
  1805  0010E8  0E0F               	movlw	15
  1806  0010EA  6F74               	movwf	??_detect_color& (0+255),b
  1807  0010EC  0EF1               	movlw	241
  1808  0010EE                     u4247:
  1809  0010EE  2EE8               	decfsz	wreg,f,c
  1810  0010F0  D7FE               	bra	u4247
  1811  0010F2  2F74               	decfsz	??_detect_color& (0+255),f,b
  1812  0010F4  D7FC               	bra	u4247
  1813  0010F6  2F75               	decfsz	(??_detect_color+1)& (0+255),f,b
  1814  0010F8  D7FA               	bra	u4247
  1815  0010FA                     
  1816                           ;color.c: 203:     LED_G();
  1817  0010FA  ECDF  F01F         	call	_LED_G	;wreg free
  1818  0010FE                     
  1819                           ;color.c: 204:     read_color(m);
  1820  0010FE  C070  F00C         	movff	detect_color@m,read_color@m
  1821  001102  C071  F00D         	movff	detect_color@m+1,read_color@m+1
  1822  001106  EC35  F01D         	call	_read_color	;wreg free
  1823  00110A                     
  1824                           ;color.c: 205:     GR = lroundf((float)(m->R)/(w->GR)*100); GG = lroundf((float)(m->G)/(
      +                          w->GG)*100); GB = lroundf((float)(m->B)/(w->GB)*100);
  1825  00110A  0100               	movlb	0	; () banked
  1826  00110C  EE20 F006          	lfsr	2,6
  1827  001110  5172               	movf	detect_color@w& (0+255),w,b
  1828  001112  26D9               	addwf	fsr2l,f,c
  1829  001114  5173               	movf	(detect_color@w+1)& (0+255),w,b
  1830  001116  22DA               	addwfc	fsr2h,f,c
  1831  001118  CFDE F074          	movff	postinc2,??_detect_color
  1832  00111C  CFDD F075          	movff	postdec2,??_detect_color+1
  1833  001120  C074  F001         	movff	??_detect_color,___xxtofl@val
  1834  001124  C075  F002         	movff	??_detect_color+1,___xxtofl@val+1
  1835  001128  6A03               	clrf	(___xxtofl@val+2)^0,c
  1836  00112A  6A04               	clrf	(___xxtofl@val+3)^0,c
  1837  00112C  0E00               	movlw	0
  1838  00112E  EC02  F016         	call	___xxtofl
  1839  001132  C001  F013         	movff	?___xxtofl,___fldiv@a
  1840  001136  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  1841  00113A  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  1842  00113E  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  1843  001142  C070  FFD9         	movff	detect_color@m,fsr2l
  1844  001146  C071  FFDA         	movff	detect_color@m+1,fsr2h
  1845  00114A  CFDE F076          	movff	postinc2,??_detect_color+2
  1846  00114E  CFDD F077          	movff	postdec2,??_detect_color+3
  1847  001152  C076  F001         	movff	??_detect_color+2,___xxtofl@val
  1848  001156  C077  F002         	movff	??_detect_color+3,___xxtofl@val+1
  1849  00115A  6A03               	clrf	(___xxtofl@val+2)^0,c
  1850  00115C  6A04               	clrf	(___xxtofl@val+3)^0,c
  1851  00115E  0E00               	movlw	0
  1852  001160  EC02  F016         	call	___xxtofl
  1853  001164  C001  F00F         	movff	?___xxtofl,___fldiv@b
  1854  001168  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  1855  00116C  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  1856  001170  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  1857  001174  ECC3  F012         	call	___fldiv	;wreg free
  1858  001178  C00F  F028         	movff	?___fldiv,___flmul@b
  1859  00117C  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  1860  001180  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  1861  001184  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  1862  001188  0E00               	movlw	0
  1863  00118A  6E2C               	movwf	___flmul@a^0,c
  1864  00118C  0E00               	movlw	0
  1865  00118E  6E2D               	movwf	(___flmul@a+1)^0,c
  1866  001190  0EC8               	movlw	200
  1867  001192  6E2E               	movwf	(___flmul@a+2)^0,c
  1868  001194  0E42               	movlw	66
  1869  001196  6E2F               	movwf	(___flmul@a+3)^0,c
  1870  001198  ECD7  F00E         	call	___flmul	;wreg free
  1871  00119C  C028  F08B         	movff	?___flmul,_detect_color$2685
  1872  0011A0  C029  F08C         	movff	?___flmul+1,_detect_color$2685+1
  1873  0011A4  C02A  F08D         	movff	?___flmul+2,_detect_color$2685+2
  1874  0011A8  C02B  F08E         	movff	?___flmul+3,_detect_color$2685+3
  1875  0011AC  C08B  F066         	movff	_detect_color$2685,lroundf@x
  1876  0011B0  C08C  F067         	movff	_detect_color$2685+1,lroundf@x+1
  1877  0011B4  C08D  F068         	movff	_detect_color$2685+2,lroundf@x+2
  1878  0011B8  C08E  F069         	movff	_detect_color$2685+3,lroundf@x+3
  1879  0011BC  ECF3  F01E         	call	_lroundf	;wreg free
  1880  0011C0  0100               	movlb	0	; () banked
  1881  0011C2  EE20 F008          	lfsr	2,8
  1882  0011C6  5172               	movf	detect_color@w& (0+255),w,b
  1883  0011C8  26D9               	addwf	fsr2l,f,c
  1884  0011CA  5173               	movf	(detect_color@w+1)& (0+255),w,b
  1885  0011CC  22DA               	addwfc	fsr2h,f,c
  1886  0011CE  CFDE F074          	movff	postinc2,??_detect_color
  1887  0011D2  CFDD F075          	movff	postdec2,??_detect_color+1
  1888  0011D6  C074  F001         	movff	??_detect_color,___xxtofl@val
  1889  0011DA  C075  F002         	movff	??_detect_color+1,___xxtofl@val+1
  1890  0011DE  6A03               	clrf	(___xxtofl@val+2)^0,c
  1891  0011E0  6A04               	clrf	(___xxtofl@val+3)^0,c
  1892  0011E2  0E00               	movlw	0
  1893  0011E4  EC02  F016         	call	___xxtofl
  1894  0011E8  C001  F013         	movff	?___xxtofl,___fldiv@a
  1895  0011EC  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  1896  0011F0  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  1897  0011F4  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  1898  0011F8  0100               	movlb	0	; () banked
  1899  0011FA  EE20 F002          	lfsr	2,2
  1900  0011FE  5170               	movf	detect_color@m& (0+255),w,b
  1901  001200  26D9               	addwf	fsr2l,f,c
  1902  001202  5171               	movf	(detect_color@m+1)& (0+255),w,b
  1903  001204  22DA               	addwfc	fsr2h,f,c
  1904  001206  CFDE F076          	movff	postinc2,??_detect_color+2
  1905  00120A  CFDD F077          	movff	postdec2,??_detect_color+3
  1906  00120E  C076  F001         	movff	??_detect_color+2,___xxtofl@val
  1907  001212  C077  F002         	movff	??_detect_color+3,___xxtofl@val+1
  1908  001216  6A03               	clrf	(___xxtofl@val+2)^0,c
  1909  001218  6A04               	clrf	(___xxtofl@val+3)^0,c
  1910  00121A  0E00               	movlw	0
  1911  00121C  EC02  F016         	call	___xxtofl
  1912  001220  C001  F00F         	movff	?___xxtofl,___fldiv@b
  1913  001224  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  1914  001228  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  1915  00122C  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  1916  001230  ECC3  F012         	call	___fldiv	;wreg free
  1917  001234  C00F  F028         	movff	?___fldiv,___flmul@b
  1918  001238  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  1919  00123C  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  1920  001240  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  1921  001244  0E00               	movlw	0
  1922  001246  6E2C               	movwf	___flmul@a^0,c
  1923  001248  0E00               	movlw	0
  1924  00124A  6E2D               	movwf	(___flmul@a+1)^0,c
  1925  00124C  0EC8               	movlw	200
  1926  00124E  6E2E               	movwf	(___flmul@a+2)^0,c
  1927  001250  0E42               	movlw	66
  1928  001252  6E2F               	movwf	(___flmul@a+3)^0,c
  1929  001254  ECD7  F00E         	call	___flmul	;wreg free
  1930  001258  C028  F08B         	movff	?___flmul,_detect_color$2685
  1931  00125C  C029  F08C         	movff	?___flmul+1,_detect_color$2685+1
  1932  001260  C02A  F08D         	movff	?___flmul+2,_detect_color$2685+2
  1933  001264  C02B  F08E         	movff	?___flmul+3,_detect_color$2685+3
  1934  001268  C08B  F066         	movff	_detect_color$2685,lroundf@x
  1935  00126C  C08C  F067         	movff	_detect_color$2685+1,lroundf@x+1
  1936  001270  C08D  F068         	movff	_detect_color$2685+2,lroundf@x+2
  1937  001274  C08E  F069         	movff	_detect_color$2685+3,lroundf@x+3
  1938  001278  ECF3  F01E         	call	_lroundf	;wreg free
  1939  00127C  C066  F080         	movff	?_lroundf,detect_color@GG
  1940  001280  C067  F081         	movff	?_lroundf+1,detect_color@GG+1
  1941  001284  0100               	movlb	0	; () banked
  1942  001286  EE20 F00A          	lfsr	2,10
  1943  00128A  5172               	movf	detect_color@w& (0+255),w,b
  1944  00128C  26D9               	addwf	fsr2l,f,c
  1945  00128E  5173               	movf	(detect_color@w+1)& (0+255),w,b
  1946  001290  22DA               	addwfc	fsr2h,f,c
  1947  001292  CFDE F074          	movff	postinc2,??_detect_color
  1948  001296  CFDD F075          	movff	postdec2,??_detect_color+1
  1949  00129A  C074  F001         	movff	??_detect_color,___xxtofl@val
  1950  00129E  C075  F002         	movff	??_detect_color+1,___xxtofl@val+1
  1951  0012A2  6A03               	clrf	(___xxtofl@val+2)^0,c
  1952  0012A4  6A04               	clrf	(___xxtofl@val+3)^0,c
  1953  0012A6  0E00               	movlw	0
  1954  0012A8  EC02  F016         	call	___xxtofl
  1955  0012AC  C001  F013         	movff	?___xxtofl,___fldiv@a
  1956  0012B0  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  1957  0012B4  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  1958  0012B8  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  1959  0012BC  0100               	movlb	0	; () banked
  1960  0012BE  EE20 F004          	lfsr	2,4
  1961  0012C2  5170               	movf	detect_color@m& (0+255),w,b
  1962  0012C4  26D9               	addwf	fsr2l,f,c
  1963  0012C6  5171               	movf	(detect_color@m+1)& (0+255),w,b
  1964  0012C8  22DA               	addwfc	fsr2h,f,c
  1965  0012CA  CFDE F076          	movff	postinc2,??_detect_color+2
  1966  0012CE  CFDD F077          	movff	postdec2,??_detect_color+3
  1967  0012D2  C076  F001         	movff	??_detect_color+2,___xxtofl@val
  1968  0012D6  C077  F002         	movff	??_detect_color+3,___xxtofl@val+1
  1969  0012DA  6A03               	clrf	(___xxtofl@val+2)^0,c
  1970  0012DC  6A04               	clrf	(___xxtofl@val+3)^0,c
  1971  0012DE  0E00               	movlw	0
  1972  0012E0  EC02  F016         	call	___xxtofl
  1973  0012E4  C001  F00F         	movff	?___xxtofl,___fldiv@b
  1974  0012E8  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  1975  0012EC  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  1976  0012F0  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  1977  0012F4  ECC3  F012         	call	___fldiv	;wreg free
  1978  0012F8  C00F  F028         	movff	?___fldiv,___flmul@b
  1979  0012FC  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  1980  001300  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  1981  001304  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  1982  001308  0E00               	movlw	0
  1983  00130A  6E2C               	movwf	___flmul@a^0,c
  1984  00130C  0E00               	movlw	0
  1985  00130E  6E2D               	movwf	(___flmul@a+1)^0,c
  1986  001310  0EC8               	movlw	200
  1987  001312  6E2E               	movwf	(___flmul@a+2)^0,c
  1988  001314  0E42               	movlw	66
  1989  001316  6E2F               	movwf	(___flmul@a+3)^0,c
  1990  001318  ECD7  F00E         	call	___flmul	;wreg free
  1991  00131C  C028  F08B         	movff	?___flmul,_detect_color$2685
  1992  001320  C029  F08C         	movff	?___flmul+1,_detect_color$2685+1
  1993  001324  C02A  F08D         	movff	?___flmul+2,_detect_color$2685+2
  1994  001328  C02B  F08E         	movff	?___flmul+3,_detect_color$2685+3
  1995  00132C  C08B  F066         	movff	_detect_color$2685,lroundf@x
  1996  001330  C08C  F067         	movff	_detect_color$2685+1,lroundf@x+1
  1997  001334  C08D  F068         	movff	_detect_color$2685+2,lroundf@x+2
  1998  001338  C08E  F069         	movff	_detect_color$2685+3,lroundf@x+3
  1999  00133C  ECF3  F01E         	call	_lroundf	;wreg free
  2000  001340                     
  2001                           ;color.c: 206:     _delay((unsigned long)((50)*(64000000/4000.0)));
  2002  001340  0E05               	movlw	5
  2003  001342  0100               	movlb	0	; () banked
  2004  001344  6F75               	movwf	(??_detect_color+1)& (0+255),b
  2005  001346  0E0F               	movlw	15
  2006  001348  6F74               	movwf	??_detect_color& (0+255),b
  2007  00134A  0EF1               	movlw	241
  2008  00134C                     u4257:
  2009  00134C  2EE8               	decfsz	wreg,f,c
  2010  00134E  D7FE               	bra	u4257
  2011  001350  2F74               	decfsz	??_detect_color& (0+255),f,b
  2012  001352  D7FC               	bra	u4257
  2013  001354  2F75               	decfsz	(??_detect_color+1)& (0+255),f,b
  2014  001356  D7FA               	bra	u4257
  2015  001358                     
  2016                           ;color.c: 208:     LED_B();
  2017  001358  ECEF  F01F         	call	_LED_B	;wreg free
  2018  00135C                     
  2019                           ;color.c: 209:     read_color(m);
  2020  00135C  C070  F00C         	movff	detect_color@m,read_color@m
  2021  001360  C071  F00D         	movff	detect_color@m+1,read_color@m+1
  2022  001364  EC35  F01D         	call	_read_color	;wreg free
  2023  001368                     
  2024                           ;color.c: 210:     BR = lroundf((float)(m->R)/(w->BR)*100); BG = lroundf((float)(m->G)/(
      +                          w->BG)*100); BB = lroundf((float)(m->B)/(w->BB)*100);
  2025  001368  0100               	movlb	0	; () banked
  2026  00136A  EE20 F00C          	lfsr	2,12
  2027  00136E  5172               	movf	detect_color@w& (0+255),w,b
  2028  001370  26D9               	addwf	fsr2l,f,c
  2029  001372  5173               	movf	(detect_color@w+1)& (0+255),w,b
  2030  001374  22DA               	addwfc	fsr2h,f,c
  2031  001376  CFDE F074          	movff	postinc2,??_detect_color
  2032  00137A  CFDD F075          	movff	postdec2,??_detect_color+1
  2033  00137E  C074  F001         	movff	??_detect_color,___xxtofl@val
  2034  001382  C075  F002         	movff	??_detect_color+1,___xxtofl@val+1
  2035  001386  6A03               	clrf	(___xxtofl@val+2)^0,c
  2036  001388  6A04               	clrf	(___xxtofl@val+3)^0,c
  2037  00138A  0E00               	movlw	0
  2038  00138C  EC02  F016         	call	___xxtofl
  2039  001390  C001  F013         	movff	?___xxtofl,___fldiv@a
  2040  001394  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  2041  001398  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  2042  00139C  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  2043  0013A0  C070  FFD9         	movff	detect_color@m,fsr2l
  2044  0013A4  C071  FFDA         	movff	detect_color@m+1,fsr2h
  2045  0013A8  CFDE F076          	movff	postinc2,??_detect_color+2
  2046  0013AC  CFDD F077          	movff	postdec2,??_detect_color+3
  2047  0013B0  C076  F001         	movff	??_detect_color+2,___xxtofl@val
  2048  0013B4  C077  F002         	movff	??_detect_color+3,___xxtofl@val+1
  2049  0013B8  6A03               	clrf	(___xxtofl@val+2)^0,c
  2050  0013BA  6A04               	clrf	(___xxtofl@val+3)^0,c
  2051  0013BC  0E00               	movlw	0
  2052  0013BE  EC02  F016         	call	___xxtofl
  2053  0013C2  C001  F00F         	movff	?___xxtofl,___fldiv@b
  2054  0013C6  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  2055  0013CA  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  2056  0013CE  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  2057  0013D2  ECC3  F012         	call	___fldiv	;wreg free
  2058  0013D6  C00F  F028         	movff	?___fldiv,___flmul@b
  2059  0013DA  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  2060  0013DE  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  2061  0013E2  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  2062  0013E6  0E00               	movlw	0
  2063  0013E8  6E2C               	movwf	___flmul@a^0,c
  2064  0013EA  0E00               	movlw	0
  2065  0013EC  6E2D               	movwf	(___flmul@a+1)^0,c
  2066  0013EE  0EC8               	movlw	200
  2067  0013F0  6E2E               	movwf	(___flmul@a+2)^0,c
  2068  0013F2  0E42               	movlw	66
  2069  0013F4  6E2F               	movwf	(___flmul@a+3)^0,c
  2070  0013F6  ECD7  F00E         	call	___flmul	;wreg free
  2071  0013FA  C028  F08B         	movff	?___flmul,_detect_color$2685
  2072  0013FE  C029  F08C         	movff	?___flmul+1,_detect_color$2685+1
  2073  001402  C02A  F08D         	movff	?___flmul+2,_detect_color$2685+2
  2074  001406  C02B  F08E         	movff	?___flmul+3,_detect_color$2685+3
  2075  00140A                     
  2076                           ;color.c: 210:     BR = lroundf((float)(m->R)/(w->BR)*100); BG = lroundf((float)(m->G)/(
      +                          w->BG)*100); BB = lroundf((float)(m->B)/(w->BB)*100);
  2077  00140A  C08B  F066         	movff	_detect_color$2685,lroundf@x
  2078  00140E  C08C  F067         	movff	_detect_color$2685+1,lroundf@x+1
  2079  001412  C08D  F068         	movff	_detect_color$2685+2,lroundf@x+2
  2080  001416  C08E  F069         	movff	_detect_color$2685+3,lroundf@x+3
  2081  00141A  ECF3  F01E         	call	_lroundf	;wreg free
  2082  00141E  C066  F086         	movff	?_lroundf,detect_color@BR
  2083  001422  C067  F087         	movff	?_lroundf+1,detect_color@BR+1
  2084  001426  0100               	movlb	0	; () banked
  2085  001428  EE20 F00E          	lfsr	2,14
  2086  00142C  5172               	movf	detect_color@w& (0+255),w,b
  2087  00142E  26D9               	addwf	fsr2l,f,c
  2088  001430  5173               	movf	(detect_color@w+1)& (0+255),w,b
  2089  001432  22DA               	addwfc	fsr2h,f,c
  2090  001434  CFDE F074          	movff	postinc2,??_detect_color
  2091  001438  CFDD F075          	movff	postdec2,??_detect_color+1
  2092  00143C  C074  F001         	movff	??_detect_color,___xxtofl@val
  2093  001440  C075  F002         	movff	??_detect_color+1,___xxtofl@val+1
  2094  001444  6A03               	clrf	(___xxtofl@val+2)^0,c
  2095  001446  6A04               	clrf	(___xxtofl@val+3)^0,c
  2096  001448  0E00               	movlw	0
  2097  00144A  EC02  F016         	call	___xxtofl
  2098  00144E  C001  F013         	movff	?___xxtofl,___fldiv@a
  2099  001452  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  2100  001456  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  2101  00145A  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  2102  00145E  0100               	movlb	0	; () banked
  2103  001460  EE20 F002          	lfsr	2,2
  2104  001464  5170               	movf	detect_color@m& (0+255),w,b
  2105  001466  26D9               	addwf	fsr2l,f,c
  2106  001468  5171               	movf	(detect_color@m+1)& (0+255),w,b
  2107  00146A  22DA               	addwfc	fsr2h,f,c
  2108  00146C  CFDE F076          	movff	postinc2,??_detect_color+2
  2109  001470  CFDD F077          	movff	postdec2,??_detect_color+3
  2110  001474  C076  F001         	movff	??_detect_color+2,___xxtofl@val
  2111  001478  C077  F002         	movff	??_detect_color+3,___xxtofl@val+1
  2112  00147C  6A03               	clrf	(___xxtofl@val+2)^0,c
  2113  00147E  6A04               	clrf	(___xxtofl@val+3)^0,c
  2114  001480  0E00               	movlw	0
  2115  001482  EC02  F016         	call	___xxtofl
  2116  001486  C001  F00F         	movff	?___xxtofl,___fldiv@b
  2117  00148A  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  2118  00148E  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  2119  001492  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  2120  001496  ECC3  F012         	call	___fldiv	;wreg free
  2121  00149A  C00F  F028         	movff	?___fldiv,___flmul@b
  2122  00149E  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  2123  0014A2  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  2124  0014A6  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  2125  0014AA  0E00               	movlw	0
  2126  0014AC  6E2C               	movwf	___flmul@a^0,c
  2127  0014AE  0E00               	movlw	0
  2128  0014B0  6E2D               	movwf	(___flmul@a+1)^0,c
  2129  0014B2  0EC8               	movlw	200
  2130  0014B4  6E2E               	movwf	(___flmul@a+2)^0,c
  2131  0014B6  0E42               	movlw	66
  2132  0014B8  6E2F               	movwf	(___flmul@a+3)^0,c
  2133  0014BA  ECD7  F00E         	call	___flmul	;wreg free
  2134  0014BE  C028  F08B         	movff	?___flmul,_detect_color$2685
  2135  0014C2  C029  F08C         	movff	?___flmul+1,_detect_color$2685+1
  2136  0014C6  C02A  F08D         	movff	?___flmul+2,_detect_color$2685+2
  2137  0014CA  C02B  F08E         	movff	?___flmul+3,_detect_color$2685+3
  2138  0014CE  C08B  F066         	movff	_detect_color$2685,lroundf@x
  2139  0014D2  C08C  F067         	movff	_detect_color$2685+1,lroundf@x+1
  2140  0014D6  C08D  F068         	movff	_detect_color$2685+2,lroundf@x+2
  2141  0014DA  C08E  F069         	movff	_detect_color$2685+3,lroundf@x+3
  2142  0014DE  ECF3  F01E         	call	_lroundf	;wreg free
  2143  0014E2  C066  F088         	movff	?_lroundf,detect_color@BG
  2144  0014E6  C067  F089         	movff	?_lroundf+1,detect_color@BG+1
  2145  0014EA  0100               	movlb	0	; () banked
  2146  0014EC  EE20 F010          	lfsr	2,16
  2147  0014F0  5172               	movf	detect_color@w& (0+255),w,b
  2148  0014F2  26D9               	addwf	fsr2l,f,c
  2149  0014F4  5173               	movf	(detect_color@w+1)& (0+255),w,b
  2150  0014F6  22DA               	addwfc	fsr2h,f,c
  2151  0014F8  CFDE F074          	movff	postinc2,??_detect_color
  2152  0014FC  CFDD F075          	movff	postdec2,??_detect_color+1
  2153  001500  C074  F001         	movff	??_detect_color,___xxtofl@val
  2154  001504  C075  F002         	movff	??_detect_color+1,___xxtofl@val+1
  2155  001508  6A03               	clrf	(___xxtofl@val+2)^0,c
  2156  00150A  6A04               	clrf	(___xxtofl@val+3)^0,c
  2157  00150C  0E00               	movlw	0
  2158  00150E  EC02  F016         	call	___xxtofl
  2159  001512  C001  F013         	movff	?___xxtofl,___fldiv@a
  2160  001516  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  2161  00151A  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  2162  00151E  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  2163  001522  0100               	movlb	0	; () banked
  2164  001524  EE20 F004          	lfsr	2,4
  2165  001528  5170               	movf	detect_color@m& (0+255),w,b
  2166  00152A  26D9               	addwf	fsr2l,f,c
  2167  00152C  5171               	movf	(detect_color@m+1)& (0+255),w,b
  2168  00152E  22DA               	addwfc	fsr2h,f,c
  2169  001530  CFDE F076          	movff	postinc2,??_detect_color+2
  2170  001534  CFDD F077          	movff	postdec2,??_detect_color+3
  2171  001538  C076  F001         	movff	??_detect_color+2,___xxtofl@val
  2172  00153C  C077  F002         	movff	??_detect_color+3,___xxtofl@val+1
  2173  001540  6A03               	clrf	(___xxtofl@val+2)^0,c
  2174  001542  6A04               	clrf	(___xxtofl@val+3)^0,c
  2175  001544  0E00               	movlw	0
  2176  001546  EC02  F016         	call	___xxtofl
  2177  00154A  C001  F00F         	movff	?___xxtofl,___fldiv@b
  2178  00154E  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  2179  001552  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  2180  001556  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  2181  00155A  ECC3  F012         	call	___fldiv	;wreg free
  2182  00155E  C00F  F028         	movff	?___fldiv,___flmul@b
  2183  001562  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  2184  001566  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  2185  00156A  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  2186  00156E  0E00               	movlw	0
  2187  001570  6E2C               	movwf	___flmul@a^0,c
  2188  001572  0E00               	movlw	0
  2189  001574  6E2D               	movwf	(___flmul@a+1)^0,c
  2190  001576  0EC8               	movlw	200
  2191  001578  6E2E               	movwf	(___flmul@a+2)^0,c
  2192  00157A  0E42               	movlw	66
  2193  00157C  6E2F               	movwf	(___flmul@a+3)^0,c
  2194  00157E  ECD7  F00E         	call	___flmul	;wreg free
  2195  001582  C028  F08B         	movff	?___flmul,_detect_color$2685
  2196  001586  C029  F08C         	movff	?___flmul+1,_detect_color$2685+1
  2197  00158A  C02A  F08D         	movff	?___flmul+2,_detect_color$2685+2
  2198  00158E  C02B  F08E         	movff	?___flmul+3,_detect_color$2685+3
  2199  001592  C08B  F066         	movff	_detect_color$2685,lroundf@x
  2200  001596  C08C  F067         	movff	_detect_color$2685+1,lroundf@x+1
  2201  00159A  C08D  F068         	movff	_detect_color$2685+2,lroundf@x+2
  2202  00159E  C08E  F069         	movff	_detect_color$2685+3,lroundf@x+3
  2203  0015A2  ECF3  F01E         	call	_lroundf	;wreg free
  2204  0015A6  C066  F082         	movff	?_lroundf,detect_color@BB
  2205  0015AA  C067  F083         	movff	?_lroundf+1,detect_color@BB+1
  2206  0015AE                     
  2207                           ;color.c: 211:     _delay((unsigned long)((50)*(64000000/4000.0)));
  2208  0015AE  0E05               	movlw	5
  2209  0015B0  0100               	movlb	0	; () banked
  2210  0015B2  6F75               	movwf	(??_detect_color+1)& (0+255),b
  2211  0015B4  0E0F               	movlw	15
  2212  0015B6  6F74               	movwf	??_detect_color& (0+255),b
  2213  0015B8  0EF1               	movlw	241
  2214  0015BA                     u4267:
  2215  0015BA  2EE8               	decfsz	wreg,f,c
  2216  0015BC  D7FE               	bra	u4267
  2217  0015BE  2F74               	decfsz	??_detect_color& (0+255),f,b
  2218  0015C0  D7FC               	bra	u4267
  2219  0015C2  2F75               	decfsz	(??_detect_color+1)& (0+255),f,b
  2220  0015C4  D7FA               	bra	u4267
  2221  0015C6                     
  2222                           ;color.c: 214:     if (compare(0, RR, 90)){
  2223  0015C6  0E00               	movlw	0
  2224  0015C8  0100               	movlb	0	; () banked
  2225  0015CA  6F6B               	movwf	(compare@lower+1)& (0+255),b
  2226  0015CC  0E00               	movlw	0
  2227  0015CE  6F6A               	movwf	compare@lower& (0+255),b
  2228  0015D0  C084  F06C         	movff	detect_color@RR,compare@value2compare
  2229  0015D4  C085  F06D         	movff	detect_color@RR+1,compare@value2compare+1
  2230  0015D8  0E00               	movlw	0
  2231  0015DA  6F6F               	movwf	(compare@upper+1)& (0+255),b
  2232  0015DC  0E5A               	movlw	90
  2233  0015DE  6F6E               	movwf	compare@upper& (0+255),b
  2234  0015E0  EC10  F01F         	call	_compare	;wreg free
  2235  0015E4  0900               	iorlw	0
  2236  0015E6  B4D8               	btfsc	status,2,c
  2237  0015E8  EFF8  F00A         	goto	u3871
  2238  0015EC  EFFA  F00A         	goto	u3870
  2239  0015F0                     u3871:
  2240  0015F0  EF64  F00B         	goto	l4080
  2241  0015F4                     u3870:
  2242  0015F4                     
  2243                           ;color.c: 215:         if (compare(0, lroundf((float)GG/BB * 200), 228)){color = 3;}
  2244  0015F4  C082  F001         	movff	detect_color@BB,___xxtofl@val
  2245  0015F8  C083  F002         	movff	detect_color@BB+1,___xxtofl@val+1
  2246  0015FC  6A03               	clrf	(___xxtofl@val+2)^0,c
  2247  0015FE  6A04               	clrf	(___xxtofl@val+3)^0,c
  2248  001600  0E00               	movlw	0
  2249  001602  EC02  F016         	call	___xxtofl
  2250  001606  C001  F013         	movff	?___xxtofl,___fldiv@a
  2251  00160A  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  2252  00160E  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  2253  001612  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  2254  001616  C080  F001         	movff	detect_color@GG,___xxtofl@val
  2255  00161A  C081  F002         	movff	detect_color@GG+1,___xxtofl@val+1
  2256  00161E  6A03               	clrf	(___xxtofl@val+2)^0,c
  2257  001620  6A04               	clrf	(___xxtofl@val+3)^0,c
  2258  001622  0E00               	movlw	0
  2259  001624  EC02  F016         	call	___xxtofl
  2260  001628  C001  F00F         	movff	?___xxtofl,___fldiv@b
  2261  00162C  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  2262  001630  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  2263  001634  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  2264  001638  ECC3  F012         	call	___fldiv	;wreg free
  2265  00163C  C00F  F028         	movff	?___fldiv,___flmul@b
  2266  001640  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  2267  001644  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  2268  001648  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  2269  00164C  0E00               	movlw	0
  2270  00164E  6E2C               	movwf	___flmul@a^0,c
  2271  001650  0E00               	movlw	0
  2272  001652  6E2D               	movwf	(___flmul@a+1)^0,c
  2273  001654  0E48               	movlw	72
  2274  001656  6E2E               	movwf	(___flmul@a+2)^0,c
  2275  001658  0E43               	movlw	67
  2276  00165A  6E2F               	movwf	(___flmul@a+3)^0,c
  2277  00165C  ECD7  F00E         	call	___flmul	;wreg free
  2278  001660  C028  F08B         	movff	?___flmul,_detect_color$2685
  2279  001664  C029  F08C         	movff	?___flmul+1,_detect_color$2685+1
  2280  001668  C02A  F08D         	movff	?___flmul+2,_detect_color$2685+2
  2281  00166C  C02B  F08E         	movff	?___flmul+3,_detect_color$2685+3
  2282                           
  2283                           ;color.c: 215:         if (compare(0, lroundf((float)GG/BB * 200), 228)){color = 3;}
  2284  001670  0E00               	movlw	0
  2285  001672  0100               	movlb	0	; () banked
  2286  001674  6F6B               	movwf	(compare@lower+1)& (0+255),b
  2287  001676  0E00               	movlw	0
  2288  001678  6F6A               	movwf	compare@lower& (0+255),b
  2289  00167A  C08B  F066         	movff	_detect_color$2685,lroundf@x
  2290  00167E  C08C  F067         	movff	_detect_color$2685+1,lroundf@x+1
  2291  001682  C08D  F068         	movff	_detect_color$2685+2,lroundf@x+2
  2292  001686  C08E  F069         	movff	_detect_color$2685+3,lroundf@x+3
  2293  00168A  ECF3  F01E         	call	_lroundf	;wreg free
  2294  00168E  C066  F06C         	movff	?_lroundf,compare@value2compare
  2295  001692  C067  F06D         	movff	?_lroundf+1,compare@value2compare+1
  2296  001696  0E00               	movlw	0
  2297  001698  0100               	movlb	0	; () banked
  2298  00169A  6F6F               	movwf	(compare@upper+1)& (0+255),b
  2299  00169C  0EE4               	movlw	228
  2300  00169E  6F6E               	movwf	compare@upper& (0+255),b
  2301  0016A0  EC10  F01F         	call	_compare	;wreg free
  2302  0016A4  0900               	iorlw	0
  2303  0016A6  B4D8               	btfsc	status,2,c
  2304  0016A8  EF58  F00B         	goto	u3881
  2305  0016AC  EF5A  F00B         	goto	u3880
  2306  0016B0                     u3881:
  2307  0016B0  EF5F  F00B         	goto	l4078
  2308  0016B4                     u3880:
  2309  0016B4  0E03               	movlw	3
  2310  0016B6  0100               	movlb	0	; () banked
  2311  0016B8  6F8A               	movwf	detect_color@color& (0+255),b
  2312  0016BA  EF13  F00C         	goto	l4098
  2313  0016BE                     l4078:
  2314  0016BE  0E02               	movlw	2
  2315  0016C0  0100               	movlb	0	; () banked
  2316  0016C2  6F8A               	movwf	detect_color@color& (0+255),b
  2317  0016C4  EF13  F00C         	goto	l4098
  2318  0016C8                     l4080:
  2319                           
  2320                           ;color.c: 219:         if (compare(0, RG, 80)){
  2321  0016C8  0E00               	movlw	0
  2322  0016CA  0100               	movlb	0	; () banked
  2323  0016CC  6F6B               	movwf	(compare@lower+1)& (0+255),b
  2324  0016CE  0E00               	movlw	0
  2325  0016D0  6F6A               	movwf	compare@lower& (0+255),b
  2326  0016D2  C07E  F06C         	movff	detect_color@RG,compare@value2compare
  2327  0016D6  C07F  F06D         	movff	detect_color@RG+1,compare@value2compare+1
  2328  0016DA  0E00               	movlw	0
  2329  0016DC  6F6F               	movwf	(compare@upper+1)& (0+255),b
  2330  0016DE  0E50               	movlw	80
  2331  0016E0  6F6E               	movwf	compare@upper& (0+255),b
  2332  0016E2  EC10  F01F         	call	_compare	;wreg free
  2333  0016E6  0900               	iorlw	0
  2334  0016E8  B4D8               	btfsc	status,2,c
  2335  0016EA  EF79  F00B         	goto	u3891
  2336  0016EE  EF7B  F00B         	goto	u3890
  2337  0016F2                     u3891:
  2338  0016F2  EFE5  F00B         	goto	l4088
  2339  0016F6                     u3890:
  2340  0016F6                     
  2341                           ;color.c: 220:             if (compare(0, lroundf((float)RR/BG * 200), 319)){color = 6;}
  2342  0016F6  C088  F001         	movff	detect_color@BG,___xxtofl@val
  2343  0016FA  C089  F002         	movff	detect_color@BG+1,___xxtofl@val+1
  2344  0016FE  6A03               	clrf	(___xxtofl@val+2)^0,c
  2345  001700  6A04               	clrf	(___xxtofl@val+3)^0,c
  2346  001702  0E00               	movlw	0
  2347  001704  EC02  F016         	call	___xxtofl
  2348  001708  C001  F013         	movff	?___xxtofl,___fldiv@a
  2349  00170C  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  2350  001710  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  2351  001714  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  2352  001718  C084  F001         	movff	detect_color@RR,___xxtofl@val
  2353  00171C  C085  F002         	movff	detect_color@RR+1,___xxtofl@val+1
  2354  001720  6A03               	clrf	(___xxtofl@val+2)^0,c
  2355  001722  6A04               	clrf	(___xxtofl@val+3)^0,c
  2356  001724  0E00               	movlw	0
  2357  001726  EC02  F016         	call	___xxtofl
  2358  00172A  C001  F00F         	movff	?___xxtofl,___fldiv@b
  2359  00172E  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  2360  001732  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  2361  001736  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  2362  00173A  ECC3  F012         	call	___fldiv	;wreg free
  2363  00173E  C00F  F028         	movff	?___fldiv,___flmul@b
  2364  001742  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  2365  001746  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  2366  00174A  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  2367  00174E  0E00               	movlw	0
  2368  001750  6E2C               	movwf	___flmul@a^0,c
  2369  001752  0E00               	movlw	0
  2370  001754  6E2D               	movwf	(___flmul@a+1)^0,c
  2371  001756  0E48               	movlw	72
  2372  001758  6E2E               	movwf	(___flmul@a+2)^0,c
  2373  00175A  0E43               	movlw	67
  2374  00175C  6E2F               	movwf	(___flmul@a+3)^0,c
  2375  00175E  ECD7  F00E         	call	___flmul	;wreg free
  2376  001762  C028  F08B         	movff	?___flmul,_detect_color$2685
  2377  001766  C029  F08C         	movff	?___flmul+1,_detect_color$2685+1
  2378  00176A  C02A  F08D         	movff	?___flmul+2,_detect_color$2685+2
  2379  00176E  C02B  F08E         	movff	?___flmul+3,_detect_color$2685+3
  2380                           
  2381                           ;color.c: 220:             if (compare(0, lroundf((float)RR/BG * 200), 319)){color = 6;}
  2382  001772  0E00               	movlw	0
  2383  001774  0100               	movlb	0	; () banked
  2384  001776  6F6B               	movwf	(compare@lower+1)& (0+255),b
  2385  001778  0E00               	movlw	0
  2386  00177A  6F6A               	movwf	compare@lower& (0+255),b
  2387  00177C  C08B  F066         	movff	_detect_color$2685,lroundf@x
  2388  001780  C08C  F067         	movff	_detect_color$2685+1,lroundf@x+1
  2389  001784  C08D  F068         	movff	_detect_color$2685+2,lroundf@x+2
  2390  001788  C08E  F069         	movff	_detect_color$2685+3,lroundf@x+3
  2391  00178C  ECF3  F01E         	call	_lroundf	;wreg free
  2392  001790  C066  F06C         	movff	?_lroundf,compare@value2compare
  2393  001794  C067  F06D         	movff	?_lroundf+1,compare@value2compare+1
  2394  001798  0E01               	movlw	1
  2395  00179A  0100               	movlb	0	; () banked
  2396  00179C  6F6F               	movwf	(compare@upper+1)& (0+255),b
  2397  00179E  0E3F               	movlw	63
  2398  0017A0  6F6E               	movwf	compare@upper& (0+255),b
  2399  0017A2  EC10  F01F         	call	_compare	;wreg free
  2400  0017A6  0900               	iorlw	0
  2401  0017A8  B4D8               	btfsc	status,2,c
  2402  0017AA  EFD9  F00B         	goto	u3901
  2403  0017AE  EFDB  F00B         	goto	u3900
  2404  0017B2                     u3901:
  2405  0017B2  EFE0  F00B         	goto	l4086
  2406  0017B6                     u3900:
  2407  0017B6  0E06               	movlw	6
  2408  0017B8  0100               	movlb	0	; () banked
  2409  0017BA  6F8A               	movwf	detect_color@color& (0+255),b
  2410  0017BC  EF13  F00C         	goto	l4098
  2411  0017C0                     l4086:
  2412  0017C0  0E01               	movlw	1
  2413  0017C2  0100               	movlb	0	; () banked
  2414  0017C4  6F8A               	movwf	detect_color@color& (0+255),b
  2415  0017C6  EF13  F00C         	goto	l4098
  2416  0017CA                     l4088:
  2417                           
  2418                           ;color.c: 224:             if (compare(0, BR, 95)){color = 7;}
  2419  0017CA  0E00               	movlw	0
  2420  0017CC  0100               	movlb	0	; () banked
  2421  0017CE  6F6B               	movwf	(compare@lower+1)& (0+255),b
  2422  0017D0  0E00               	movlw	0
  2423  0017D2  6F6A               	movwf	compare@lower& (0+255),b
  2424  0017D4  C086  F06C         	movff	detect_color@BR,compare@value2compare
  2425  0017D8  C087  F06D         	movff	detect_color@BR+1,compare@value2compare+1
  2426  0017DC  0E00               	movlw	0
  2427  0017DE  6F6F               	movwf	(compare@upper+1)& (0+255),b
  2428  0017E0  0E5F               	movlw	95
  2429  0017E2  6F6E               	movwf	compare@upper& (0+255),b
  2430  0017E4  EC10  F01F         	call	_compare	;wreg free
  2431  0017E8  0900               	iorlw	0
  2432  0017EA  B4D8               	btfsc	status,2,c
  2433  0017EC  EFFA  F00B         	goto	u3911
  2434  0017F0  EFFC  F00B         	goto	u3910
  2435  0017F4                     u3911:
  2436  0017F4  EF01  F00C         	goto	l4092
  2437  0017F8                     u3910:
  2438  0017F8  0E07               	movlw	7
  2439  0017FA  0100               	movlb	0	; () banked
  2440  0017FC  6F8A               	movwf	detect_color@color& (0+255),b
  2441  0017FE  EF13  F00C         	goto	l4098
  2442  001802                     l4092:
  2443                           
  2444                           ;color.c: 226:                 if (BG < BB){color = 5;}
  2445  001802  0100               	movlb	0	; () banked
  2446  001804  5182               	movf	detect_color@BB& (0+255),w,b
  2447  001806  5D88               	subwf	detect_color@BG& (0+255),w,b
  2448  001808  5183               	movf	(detect_color@BB+1)& (0+255),w,b
  2449  00180A  5989               	subwfb	(detect_color@BG+1)& (0+255),w,b
  2450  00180C  B0D8               	btfsc	status,0,c
  2451  00180E  EF0B  F00C         	goto	u3921
  2452  001812  EF0D  F00C         	goto	u3920
  2453  001816                     u3921:
  2454  001816  EF11  F00C         	goto	l4096
  2455  00181A                     u3920:
  2456  00181A                     
  2457                           ; BSR set to: 0
  2458  00181A  0E05               	movlw	5
  2459  00181C  6F8A               	movwf	detect_color@color& (0+255),b
  2460  00181E  EF13  F00C         	goto	l4098
  2461  001822                     l4096:
  2462                           
  2463                           ; BSR set to: 0
  2464  001822  0E04               	movlw	4
  2465  001824  6F8A               	movwf	detect_color@color& (0+255),b
  2466  001826                     l4098:
  2467                           
  2468                           ; BSR set to: 0
  2469                           ;color.c: 232:     if (compare(95, BR, 105) && compare(95,BG,105)){color = 8;}
  2470  001826  0E00               	movlw	0
  2471  001828  6F6B               	movwf	(compare@lower+1)& (0+255),b
  2472  00182A  0E5F               	movlw	95
  2473  00182C  6F6A               	movwf	compare@lower& (0+255),b
  2474  00182E  C086  F06C         	movff	detect_color@BR,compare@value2compare
  2475  001832  C087  F06D         	movff	detect_color@BR+1,compare@value2compare+1
  2476  001836  0E00               	movlw	0
  2477  001838  6F6F               	movwf	(compare@upper+1)& (0+255),b
  2478  00183A  0E69               	movlw	105
  2479  00183C  6F6E               	movwf	compare@upper& (0+255),b
  2480  00183E  EC10  F01F         	call	_compare	;wreg free
  2481  001842  0900               	iorlw	0
  2482  001844  B4D8               	btfsc	status,2,c
  2483  001846  EF27  F00C         	goto	u3931
  2484  00184A  EF29  F00C         	goto	u3930
  2485  00184E                     u3931:
  2486  00184E  EF43  F00C         	goto	l4104
  2487  001852                     u3930:
  2488  001852  0E00               	movlw	0
  2489  001854  0100               	movlb	0	; () banked
  2490  001856  6F6B               	movwf	(compare@lower+1)& (0+255),b
  2491  001858  0E5F               	movlw	95
  2492  00185A  6F6A               	movwf	compare@lower& (0+255),b
  2493  00185C  C088  F06C         	movff	detect_color@BG,compare@value2compare
  2494  001860  C089  F06D         	movff	detect_color@BG+1,compare@value2compare+1
  2495  001864  0E00               	movlw	0
  2496  001866  6F6F               	movwf	(compare@upper+1)& (0+255),b
  2497  001868  0E69               	movlw	105
  2498  00186A  6F6E               	movwf	compare@upper& (0+255),b
  2499  00186C  EC10  F01F         	call	_compare	;wreg free
  2500  001870  0900               	iorlw	0
  2501  001872  B4D8               	btfsc	status,2,c
  2502  001874  EF3E  F00C         	goto	u3941
  2503  001878  EF40  F00C         	goto	u3940
  2504  00187C                     u3941:
  2505  00187C  EF43  F00C         	goto	l4104
  2506  001880                     u3940:
  2507  001880  0E08               	movlw	8
  2508  001882  0100               	movlb	0	; () banked
  2509  001884  6F8A               	movwf	detect_color@color& (0+255),b
  2510  001886                     l4104:
  2511                           
  2512                           ;color.c: 233:     if (compare(0, BR, 20) && compare(0,RR,90)){color = 9;}
  2513  001886  0E00               	movlw	0
  2514  001888  0100               	movlb	0	; () banked
  2515  00188A  6F6B               	movwf	(compare@lower+1)& (0+255),b
  2516  00188C  0E00               	movlw	0
  2517  00188E  6F6A               	movwf	compare@lower& (0+255),b
  2518  001890  C086  F06C         	movff	detect_color@BR,compare@value2compare
  2519  001894  C087  F06D         	movff	detect_color@BR+1,compare@value2compare+1
  2520  001898  0E00               	movlw	0
  2521  00189A  6F6F               	movwf	(compare@upper+1)& (0+255),b
  2522  00189C  0E14               	movlw	20
  2523  00189E  6F6E               	movwf	compare@upper& (0+255),b
  2524  0018A0  EC10  F01F         	call	_compare	;wreg free
  2525  0018A4  0900               	iorlw	0
  2526  0018A6  B4D8               	btfsc	status,2,c
  2527  0018A8  EF58  F00C         	goto	u3951
  2528  0018AC  EF5A  F00C         	goto	u3950
  2529  0018B0                     u3951:
  2530  0018B0  EF74  F00C         	goto	l115
  2531  0018B4                     u3950:
  2532  0018B4  0E00               	movlw	0
  2533  0018B6  0100               	movlb	0	; () banked
  2534  0018B8  6F6B               	movwf	(compare@lower+1)& (0+255),b
  2535  0018BA  0E00               	movlw	0
  2536  0018BC  6F6A               	movwf	compare@lower& (0+255),b
  2537  0018BE  C084  F06C         	movff	detect_color@RR,compare@value2compare
  2538  0018C2  C085  F06D         	movff	detect_color@RR+1,compare@value2compare+1
  2539  0018C6  0E00               	movlw	0
  2540  0018C8  6F6F               	movwf	(compare@upper+1)& (0+255),b
  2541  0018CA  0E5A               	movlw	90
  2542  0018CC  6F6E               	movwf	compare@upper& (0+255),b
  2543  0018CE  EC10  F01F         	call	_compare	;wreg free
  2544  0018D2  0900               	iorlw	0
  2545  0018D4  B4D8               	btfsc	status,2,c
  2546  0018D6  EF6F  F00C         	goto	u3961
  2547  0018DA  EF71  F00C         	goto	u3960
  2548  0018DE                     u3961:
  2549  0018DE  EF74  F00C         	goto	l115
  2550  0018E2                     u3960:
  2551  0018E2  0E09               	movlw	9
  2552  0018E4  0100               	movlb	0	; () banked
  2553  0018E6  6F8A               	movwf	detect_color@color& (0+255),b
  2554  0018E8                     l115:
  2555                           
  2556                           ;color.c: 234:     return color;
  2557  0018E8  0100               	movlb	0	; () banked
  2558  0018EA  518A               	movf	detect_color@color& (0+255),w,b
  2559  0018EC                     
  2560                           ; BSR set to: 0
  2561  0018EC  0012               	return		;funcret
  2562  0018EE                     __end_of_detect_color:
  2563                           	callstack 0
  2564                           
  2565 ;; *************** function _read_color *****************
  2566 ;; Defined at:
  2567 ;;		line 92 in file "color.c"
  2568 ;; Parameters:    Size  Location     Type
  2569 ;;  m               2   11[COMRAM] PTR struct color_rgb
  2570 ;;		 -> main@rgb(8), 
  2571 ;; Auto vars:     Size  Location     Type
  2572 ;;		None
  2573 ;; Return value:  Size  Location     Type
  2574 ;;                  1    wreg      void 
  2575 ;; Registers used:
  2576 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2577 ;; Tracked objects:
  2578 ;;		On entry : 0/0
  2579 ;;		On exit  : 0/0
  2580 ;;		Unchanged: 0/0
  2581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2582 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2583 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2584 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2585 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2586 ;;Total ram usage:        2 bytes
  2587 ;; Hardware stack levels used: 1
  2588 ;; Hardware stack levels required when called: 3
  2589 ;; This function calls:
  2590 ;;		_color_read_Blue
  2591 ;;		_color_read_Clear
  2592 ;;		_color_read_Green
  2593 ;;		_color_read_Red
  2594 ;; This function is called by:
  2595 ;;		_detect_color
  2596 ;;		_main
  2597 ;; This function uses a non-reentrant model
  2598 ;;
  2599                           
  2600                           	psect	text5
  2601  003A6A                     __ptext5:
  2602                           	callstack 0
  2603  003A6A                     _read_color:
  2604                           	callstack 27
  2605  003A6A                     
  2606                           ;color.c: 92: void read_color (struct color_rgb *m);color.c: 93: {;color.c: 94:     m->R
      +                           = color_read_Red();
  2607  003A6A  ECB5  F01D         	call	_color_read_Red	;wreg free
  2608  003A6E  C00C  FFD9         	movff	read_color@m,fsr2l
  2609  003A72  C00D  FFDA         	movff	read_color@m+1,fsr2h
  2610  003A76  C005  FFDE         	movff	?_color_read_Red,postinc2
  2611  003A7A  C006  FFDD         	movff	?_color_read_Red+1,postdec2
  2612                           
  2613                           ;color.c: 95:     m->B = color_read_Blue();
  2614  003A7E  EC05  F01E         	call	_color_read_Blue	;wreg free
  2615  003A82  EE20 F004          	lfsr	2,4
  2616  003A86  500C               	movf	read_color@m^0,w,c
  2617  003A88  26D9               	addwf	fsr2l,f,c
  2618  003A8A  500D               	movf	(read_color@m+1)^0,w,c
  2619  003A8C  22DA               	addwfc	fsr2h,f,c
  2620  003A8E  C005  FFDE         	movff	?_color_read_Blue,postinc2
  2621  003A92  C006  FFDD         	movff	?_color_read_Blue+1,postdec2
  2622                           
  2623                           ;color.c: 96:     m->G = color_read_Green();
  2624  003A96  ECDD  F01D         	call	_color_read_Green	;wreg free
  2625  003A9A  EE20 F002          	lfsr	2,2
  2626  003A9E  500C               	movf	read_color@m^0,w,c
  2627  003AA0  26D9               	addwf	fsr2l,f,c
  2628  003AA2  500D               	movf	(read_color@m+1)^0,w,c
  2629  003AA4  22DA               	addwfc	fsr2h,f,c
  2630  003AA6  C005  FFDE         	movff	?_color_read_Green,postinc2
  2631  003AAA  C006  FFDD         	movff	?_color_read_Green+1,postdec2
  2632                           
  2633                           ;color.c: 97:     m->C = color_read_Clear();
  2634  003AAE  EC8D  F01D         	call	_color_read_Clear	;wreg free
  2635  003AB2  EE20 F006          	lfsr	2,6
  2636  003AB6  500C               	movf	read_color@m^0,w,c
  2637  003AB8  26D9               	addwf	fsr2l,f,c
  2638  003ABA  500D               	movf	(read_color@m+1)^0,w,c
  2639  003ABC  22DA               	addwfc	fsr2h,f,c
  2640  003ABE  C005  FFDE         	movff	?_color_read_Clear,postinc2
  2641  003AC2  C006  FFDD         	movff	?_color_read_Clear+1,postdec2
  2642  003AC6  0012               	return		;funcret
  2643  003AC8                     __end_of_read_color:
  2644                           	callstack 0
  2645                           
  2646 ;; *************** function _color_read_Clear *****************
  2647 ;; Defined at:
  2648 ;;		line 78 in file "color.c"
  2649 ;; Parameters:    Size  Location     Type
  2650 ;;		None
  2651 ;; Auto vars:     Size  Location     Type
  2652 ;;  tmp             2    9[COMRAM] unsigned int 
  2653 ;; Return value:  Size  Location     Type
  2654 ;;                  2    4[COMRAM] unsigned int 
  2655 ;; Registers used:
  2656 ;;		wreg, status,2, status,0, cstack
  2657 ;; Tracked objects:
  2658 ;;		On entry : 0/0
  2659 ;;		On exit  : 0/0
  2660 ;;		Unchanged: 0/0
  2661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2662 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2663 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2664 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2665 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2666 ;;Total ram usage:        7 bytes
  2667 ;; Hardware stack levels used: 1
  2668 ;; Hardware stack levels required when called: 2
  2669 ;; This function calls:
  2670 ;;		_I2C_2_Master_Read
  2671 ;;		_I2C_2_Master_RepStart
  2672 ;;		_I2C_2_Master_Start
  2673 ;;		_I2C_2_Master_Stop
  2674 ;;		_I2C_2_Master_Write
  2675 ;; This function is called by:
  2676 ;;		_read_color
  2677 ;; This function uses a non-reentrant model
  2678 ;;
  2679                           
  2680                           	psect	text6
  2681  003B1A                     __ptext6:
  2682                           	callstack 0
  2683  003B1A                     _color_read_Clear:
  2684                           	callstack 27
  2685  003B1A                     
  2686                           ;color.c: 80:  unsigned int tmp;;color.c: 81:  I2C_2_Master_Start();
  2687  003B1A  EC3B  F020         	call	_I2C_2_Master_Start	;wreg free
  2688                           
  2689                           ;color.c: 82:  I2C_2_Master_Write(0x52 | 0x00);
  2690  003B1E  0E52               	movlw	82
  2691  003B20  EC30  F020         	call	_I2C_2_Master_Write
  2692                           
  2693                           ;color.c: 83:  I2C_2_Master_Write(0xA0 | 0x14);
  2694  003B24  0EB4               	movlw	180
  2695  003B26  EC30  F020         	call	_I2C_2_Master_Write
  2696                           
  2697                           ;color.c: 84:  I2C_2_Master_RepStart();
  2698  003B2A  EC40  F020         	call	_I2C_2_Master_RepStart	;wreg free
  2699                           
  2700                           ;color.c: 85:  I2C_2_Master_Write(0x52 | 0x01);
  2701  003B2E  0E53               	movlw	83
  2702  003B30  EC30  F020         	call	_I2C_2_Master_Write
  2703                           
  2704                           ;color.c: 86:  tmp=I2C_2_Master_Read(1);
  2705  003B34  0E01               	movlw	1
  2706  003B36  EC93  F01E         	call	_I2C_2_Master_Read
  2707  003B3A  6E07               	movwf	??_color_read_Clear^0,c
  2708  003B3C  5007               	movf	??_color_read_Clear^0,w,c
  2709  003B3E  6E0A               	movwf	color_read_Clear@tmp^0,c
  2710  003B40  6A0B               	clrf	(color_read_Clear@tmp+1)^0,c
  2711                           
  2712                           ;color.c: 87:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  2713  003B42  0E00               	movlw	0
  2714  003B44  EC93  F01E         	call	_I2C_2_Master_Read
  2715  003B48  6E07               	movwf	??_color_read_Clear^0,c
  2716  003B4A  5007               	movf	??_color_read_Clear^0,w,c
  2717  003B4C  6E09               	movwf	(??_color_read_Clear+2)^0,c
  2718  003B4E  6A08               	clrf	(??_color_read_Clear+1)^0,c
  2719  003B50  500A               	movf	color_read_Clear@tmp^0,w,c
  2720  003B52  1008               	iorwf	(??_color_read_Clear+1)^0,w,c
  2721  003B54  6E0A               	movwf	color_read_Clear@tmp^0,c
  2722  003B56  500B               	movf	(color_read_Clear@tmp+1)^0,w,c
  2723  003B58  1009               	iorwf	(??_color_read_Clear+2)^0,w,c
  2724  003B5A  6E0B               	movwf	(color_read_Clear@tmp+1)^0,c
  2725                           
  2726                           ;color.c: 88:  I2C_2_Master_Stop();
  2727  003B5C  EC36  F020         	call	_I2C_2_Master_Stop	;wreg free
  2728  003B60                     
  2729                           ;color.c: 89:  return tmp;
  2730  003B60  C00A  F005         	movff	color_read_Clear@tmp,?_color_read_Clear
  2731  003B64  C00B  F006         	movff	color_read_Clear@tmp+1,?_color_read_Clear+1
  2732  003B68  0012               	return		;funcret
  2733  003B6A                     __end_of_color_read_Clear:
  2734                           	callstack 0
  2735                           
  2736 ;; *************** function _lroundf *****************
  2737 ;; Defined at:
  2738 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\lroundf.c"
  2739 ;; Parameters:    Size  Location     Type
  2740 ;;  x               4    6[BANK0 ] float 
  2741 ;; Auto vars:     Size  Location     Type
  2742 ;;		None
  2743 ;; Return value:  Size  Location     Type
  2744 ;;                  4    6[BANK0 ] long 
  2745 ;; Registers used:
  2746 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2747 ;; Tracked objects:
  2748 ;;		On entry : 0/0
  2749 ;;		On exit  : 0/0
  2750 ;;		Unchanged: 0/0
  2751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2752 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2753 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2754 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2755 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2756 ;;Total ram usage:        4 bytes
  2757 ;; Hardware stack levels used: 1
  2758 ;; Hardware stack levels required when called: 3
  2759 ;; This function calls:
  2760 ;;		___fltol
  2761 ;;		_roundf
  2762 ;; This function is called by:
  2763 ;;		_detect_color
  2764 ;;		_check_color_reading
  2765 ;; This function uses a non-reentrant model
  2766 ;;
  2767                           
  2768                           	psect	text7
  2769  003DE6                     __ptext7:
  2770                           	callstack 0
  2771  003DE6                     _lroundf:
  2772                           	callstack 26
  2773  003DE6  C066  F041         	movff	lroundf@x,roundf@x
  2774  003DEA  C067  F042         	movff	lroundf@x+1,roundf@x+1
  2775  003DEE  C068  F043         	movff	lroundf@x+2,roundf@x+2
  2776  003DF2  C069  F044         	movff	lroundf@x+3,roundf@x+3
  2777  003DF6  ECEC  F010         	call	_roundf	;wreg free
  2778  003DFA  C041  F05B         	movff	?_roundf,___fltol@f1
  2779  003DFE  C042  F05C         	movff	?_roundf+1,___fltol@f1+1
  2780  003E02  C043  F05D         	movff	?_roundf+2,___fltol@f1+2
  2781  003E06  C044  F05E         	movff	?_roundf+3,___fltol@f1+3
  2782  003E0A  ECC1  F019         	call	___fltol	;wreg free
  2783  003E0E  C05B  F066         	movff	?___fltol,?_lroundf
  2784  003E12  C05C  F067         	movff	?___fltol+1,?_lroundf+1
  2785  003E16  C05D  F068         	movff	?___fltol+2,?_lroundf+2
  2786  003E1A  C05E  F069         	movff	?___fltol+3,?_lroundf+3
  2787  003E1E  0012               	return		;funcret
  2788  003E20                     __end_of_lroundf:
  2789                           	callstack 0
  2790                           
  2791 ;; *************** function _roundf *****************
  2792 ;; Defined at:
  2793 ;;		line 12 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\roundf.c"
  2794 ;; Parameters:    Size  Location     Type
  2795 ;;  x               4   64[COMRAM] float 
  2796 ;; Auto vars:     Size  Location     Type
  2797 ;;  y               4   86[COMRAM] float 
  2798 ;;  u               4   82[COMRAM] struct .
  2799 ;;  e               2   76[COMRAM] int 
  2800 ;; Return value:  Size  Location     Type
  2801 ;;                  4   64[COMRAM] float 
  2802 ;; Registers used:
  2803 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2804 ;; Tracked objects:
  2805 ;;		On entry : 0/0
  2806 ;;		On exit  : 0/0
  2807 ;;		Unchanged: 0/0
  2808 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2809 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2810 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2811 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2812 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2813 ;;Total ram usage:       26 bytes
  2814 ;; Hardware stack levels used: 1
  2815 ;; Hardware stack levels required when called: 2
  2816 ;; This function calls:
  2817 ;;		___fladd
  2818 ;;		___flge
  2819 ;;		___flmul
  2820 ;;		___flneg
  2821 ;;		___flsub
  2822 ;; This function is called by:
  2823 ;;		_lroundf
  2824 ;; This function uses a non-reentrant model
  2825 ;;
  2826                           
  2827                           	psect	text8
  2828  0021D8                     __ptext8:
  2829                           	callstack 0
  2830  0021D8                     _roundf:
  2831                           	callstack 26
  2832  0021D8  C0EA  F053         	movff	roundf@F527,roundf@u
  2833  0021DC  C0EB  F054         	movff	roundf@F527+1,roundf@u+1
  2834  0021E0  C0EC  F055         	movff	roundf@F527+2,roundf@u+2
  2835  0021E4  C0ED  F056         	movff	roundf@F527+3,roundf@u+3
  2836  0021E8  C041  F053         	movff	roundf@x,roundf@u
  2837  0021EC  C042  F054         	movff	roundf@x+1,roundf@u+1
  2838  0021F0  C043  F055         	movff	roundf@x+2,roundf@u+2
  2839  0021F4  C044  F056         	movff	roundf@x+3,roundf@u+3
  2840  0021F8  C053  F045         	movff	roundf@u,??_roundf
  2841  0021FC  C054  F046         	movff	roundf@u+1,??_roundf+1
  2842  002200  C055  F047         	movff	roundf@u+2,??_roundf+2
  2843  002204  C056  F048         	movff	roundf@u+3,??_roundf+3
  2844  002208  0E18               	movlw	24
  2845  00220A  EF0C  F011         	goto	u3290
  2846  00220E                     u3295:
  2847  00220E  90D8               	bcf	status,0,c
  2848  002210  3248               	rrcf	(??_roundf+3)^0,f,c
  2849  002212  3247               	rrcf	(??_roundf+2)^0,f,c
  2850  002214  3246               	rrcf	(??_roundf+1)^0,f,c
  2851  002216  3245               	rrcf	??_roundf^0,f,c
  2852  002218                     u3290:
  2853  002218  2EE8               	decfsz	wreg,f,c
  2854  00221A  EF07  F011         	goto	u3295
  2855  00221E  5045               	movf	??_roundf^0,w,c
  2856  002220  6E4D               	movwf	roundf@e^0,c
  2857  002222  6A4E               	clrf	(roundf@e+1)^0,c
  2858  002224  BE4E               	btfsc	(roundf@e+1)^0,7,c
  2859  002226  EF1E  F011         	goto	u3301
  2860  00222A  504E               	movf	(roundf@e+1)^0,w,c
  2861  00222C  E109               	bnz	u3300
  2862  00222E  0E96               	movlw	150
  2863  002230  5C4D               	subwf	roundf@e^0,w,c
  2864  002232  A0D8               	btfss	status,0,c
  2865  002234  EF1E  F011         	goto	u3301
  2866  002238  EF20  F011         	goto	u3300
  2867  00223C                     u3301:
  2868  00223C  EF2A  F011         	goto	l3628
  2869  002240                     u3300:
  2870  002240  C041  F041         	movff	roundf@x,?_roundf
  2871  002244  C042  F042         	movff	roundf@x+1,?_roundf+1
  2872  002248  C043  F043         	movff	roundf@x+2,?_roundf+2
  2873  00224C  C044  F044         	movff	roundf@x+3,?_roundf+3
  2874  002250  EFC2  F012         	goto	l1317
  2875  002254                     l3628:
  2876  002254  C053  F045         	movff	roundf@u,??_roundf
  2877  002258  C054  F046         	movff	roundf@u+1,??_roundf+1
  2878  00225C  C055  F047         	movff	roundf@u+2,??_roundf+2
  2879  002260  C056  F048         	movff	roundf@u+3,??_roundf+3
  2880  002264  0E20               	movlw	32
  2881  002266  EF3A  F011         	goto	u3310
  2882  00226A                     u3315:
  2883  00226A  90D8               	bcf	status,0,c
  2884  00226C  3248               	rrcf	(??_roundf+3)^0,f,c
  2885  00226E  3247               	rrcf	(??_roundf+2)^0,f,c
  2886  002270  3246               	rrcf	(??_roundf+1)^0,f,c
  2887  002272  3245               	rrcf	??_roundf^0,f,c
  2888  002274                     u3310:
  2889  002274  2EE8               	decfsz	wreg,f,c
  2890  002276  EF35  F011         	goto	u3315
  2891  00227A  5045               	movf	??_roundf^0,w,c
  2892  00227C  1046               	iorwf	(??_roundf+1)^0,w,c
  2893  00227E  1047               	iorwf	(??_roundf+2)^0,w,c
  2894  002280  1048               	iorwf	(??_roundf+3)^0,w,c
  2895  002282  B4D8               	btfsc	status,2,c
  2896  002284  EF46  F011         	goto	u3321
  2897  002288  EF48  F011         	goto	u3320
  2898  00228C                     u3321:
  2899  00228C  EF5A  F011         	goto	l3632
  2900  002290                     u3320:
  2901  002290  C041  F001         	movff	roundf@x,___flneg@f1
  2902  002294  C042  F002         	movff	roundf@x+1,___flneg@f1+1
  2903  002298  C043  F003         	movff	roundf@x+2,___flneg@f1+2
  2904  00229C  C044  F004         	movff	roundf@x+3,___flneg@f1+3
  2905  0022A0  EC2D  F01F         	call	___flneg	;wreg free
  2906  0022A4  C001  F041         	movff	?___flneg,roundf@x
  2907  0022A8  C002  F042         	movff	?___flneg+1,roundf@x+1
  2908  0022AC  C003  F043         	movff	?___flneg+2,roundf@x+2
  2909  0022B0  C004  F044         	movff	?___flneg+3,roundf@x+3
  2910  0022B4                     l3632:
  2911  0022B4  BE4E               	btfsc	(roundf@e+1)^0,7,c
  2912  0022B6  EF68  F011         	goto	u3330
  2913  0022BA  504E               	movf	(roundf@e+1)^0,w,c
  2914  0022BC  E107               	bnz	u3331
  2915  0022BE  0E7E               	movlw	126
  2916  0022C0  5C4D               	subwf	roundf@e^0,w,c
  2917  0022C2  B0D8               	btfsc	status,0,c
  2918  0022C4  EF66  F011         	goto	u3331
  2919  0022C8  EF68  F011         	goto	u3330
  2920  0022CC                     u3331:
  2921  0022CC  EF84  F011         	goto	l3638
  2922  0022D0                     u3330:
  2923  0022D0  C053  F028         	movff	roundf@u,___flmul@b
  2924  0022D4  C054  F029         	movff	roundf@u+1,___flmul@b+1
  2925  0022D8  C055  F02A         	movff	roundf@u+2,___flmul@b+2
  2926  0022DC  C056  F02B         	movff	roundf@u+3,___flmul@b+3
  2927  0022E0  0E00               	movlw	0
  2928  0022E2  6E2C               	movwf	___flmul@a^0,c
  2929  0022E4  0E00               	movlw	0
  2930  0022E6  6E2D               	movwf	(___flmul@a+1)^0,c
  2931  0022E8  0E00               	movlw	0
  2932  0022EA  6E2E               	movwf	(___flmul@a+2)^0,c
  2933  0022EC  0E00               	movlw	0
  2934  0022EE  6E2F               	movwf	(___flmul@a+3)^0,c
  2935  0022F0  ECD7  F00E         	call	___flmul	;wreg free
  2936  0022F4  C028  F041         	movff	?___flmul,?_roundf
  2937  0022F8  C029  F042         	movff	?___flmul+1,?_roundf+1
  2938  0022FC  C02A  F043         	movff	?___flmul+2,?_roundf+2
  2939  002300  C02B  F044         	movff	?___flmul+3,?_roundf+3
  2940  002304  EFC2  F012         	goto	l1317
  2941  002308                     l3638:
  2942  002308  0E00               	movlw	0
  2943  00230A  6E05               	movwf	___fladd@a^0,c
  2944  00230C  0E00               	movlw	0
  2945  00230E  6E06               	movwf	(___fladd@a+1)^0,c
  2946  002310  0E00               	movlw	0
  2947  002312  6E07               	movwf	(___fladd@a+2)^0,c
  2948  002314  0E4B               	movlw	75
  2949  002316  6E08               	movwf	(___fladd@a+3)^0,c
  2950  002318  C041  F001         	movff	roundf@x,___fladd@b
  2951  00231C  C042  F002         	movff	roundf@x+1,___fladd@b+1
  2952  002320  C043  F003         	movff	roundf@x+2,___fladd@b+2
  2953  002324  C044  F004         	movff	roundf@x+3,___fladd@b+3
  2954  002328  EC77  F00C         	call	___fladd	;wreg free
  2955  00232C  C001  F04F         	movff	?___fladd,_roundf$2686
  2956  002330  C002  F050         	movff	?___fladd+1,_roundf$2686+1
  2957  002334  C003  F051         	movff	?___fladd+2,_roundf$2686+2
  2958  002338  C004  F052         	movff	?___fladd+3,_roundf$2686+3
  2959  00233C  0E00               	movlw	0
  2960  00233E  6E05               	movwf	___fladd@a^0,c
  2961  002340  0E00               	movlw	0
  2962  002342  6E06               	movwf	(___fladd@a+1)^0,c
  2963  002344  0E00               	movlw	0
  2964  002346  6E07               	movwf	(___fladd@a+2)^0,c
  2965  002348  0ECB               	movlw	203
  2966  00234A  6E08               	movwf	(___fladd@a+3)^0,c
  2967  00234C  C04F  F001         	movff	_roundf$2686,___fladd@b
  2968  002350  C050  F002         	movff	_roundf$2686+1,___fladd@b+1
  2969  002354  C051  F003         	movff	_roundf$2686+2,___fladd@b+2
  2970  002358  C052  F004         	movff	_roundf$2686+3,___fladd@b+3
  2971  00235C  EC77  F00C         	call	___fladd	;wreg free
  2972  002360  C001  F049         	movff	?___fladd,_roundf$2687
  2973  002364  C002  F04A         	movff	?___fladd+1,_roundf$2687+1
  2974  002368  C003  F04B         	movff	?___fladd+2,_roundf$2687+2
  2975  00236C  C004  F04C         	movff	?___fladd+3,_roundf$2687+3
  2976  002370  C049  F011         	movff	_roundf$2687,___flsub@b
  2977  002374  C04A  F012         	movff	_roundf$2687+1,___flsub@b+1
  2978  002378  C04B  F013         	movff	_roundf$2687+2,___flsub@b+2
  2979  00237C  C04C  F014         	movff	_roundf$2687+3,___flsub@b+3
  2980  002380  C041  F015         	movff	roundf@x,___flsub@a
  2981  002384  C042  F016         	movff	roundf@x+1,___flsub@a+1
  2982  002388  C043  F017         	movff	roundf@x+2,___flsub@a+2
  2983  00238C  C044  F018         	movff	roundf@x+3,___flsub@a+3
  2984  002390  EC2D  F01E         	call	___flsub	;wreg free
  2985  002394  C011  F057         	movff	?___flsub,roundf@y
  2986  002398  C012  F058         	movff	?___flsub+1,roundf@y+1
  2987  00239C  C013  F059         	movff	?___flsub+2,roundf@y+2
  2988  0023A0  C014  F05A         	movff	?___flsub+3,roundf@y+3
  2989  0023A4  0E00               	movlw	0
  2990  0023A6  6E01               	movwf	___flge@ff1^0,c
  2991  0023A8  0E00               	movlw	0
  2992  0023AA  6E02               	movwf	(___flge@ff1+1)^0,c
  2993  0023AC  0E00               	movlw	0
  2994  0023AE  6E03               	movwf	(___flge@ff1+2)^0,c
  2995  0023B0  0E3F               	movlw	63
  2996  0023B2  6E04               	movwf	(___flge@ff1+3)^0,c
  2997  0023B4  C057  F005         	movff	roundf@y,___flge@ff2
  2998  0023B8  C058  F006         	movff	roundf@y+1,___flge@ff2+1
  2999  0023BC  C059  F007         	movff	roundf@y+2,___flge@ff2+2
  3000  0023C0  C05A  F008         	movff	roundf@y+3,___flge@ff2+3
  3001  0023C4  EC45  F01A         	call	___flge	;wreg free
  3002  0023C8  B0D8               	btfsc	status,0,c
  3003  0023CA  EFE9  F011         	goto	u3341
  3004  0023CE  EFEB  F011         	goto	u3340
  3005  0023D2                     u3341:
  3006  0023D2  EF21  F012         	goto	l3642
  3007  0023D6                     u3340:
  3008  0023D6  C041  F005         	movff	roundf@x,___fladd@a
  3009  0023DA  C042  F006         	movff	roundf@x+1,___fladd@a+1
  3010  0023DE  C043  F007         	movff	roundf@x+2,___fladd@a+2
  3011  0023E2  C044  F008         	movff	roundf@x+3,___fladd@a+3
  3012  0023E6  C057  F001         	movff	roundf@y,___fladd@b
  3013  0023EA  C058  F002         	movff	roundf@y+1,___fladd@b+1
  3014  0023EE  C059  F003         	movff	roundf@y+2,___fladd@b+2
  3015  0023F2  C05A  F004         	movff	roundf@y+3,___fladd@b+3
  3016  0023F6  EC77  F00C         	call	___fladd	;wreg free
  3017  0023FA  C001  F04F         	movff	?___fladd,_roundf$2686
  3018  0023FE  C002  F050         	movff	?___fladd+1,_roundf$2686+1
  3019  002402  C003  F051         	movff	?___fladd+2,_roundf$2686+2
  3020  002406  C004  F052         	movff	?___fladd+3,_roundf$2686+3
  3021  00240A  C04F  F001         	movff	_roundf$2686,___fladd@b
  3022  00240E  C050  F002         	movff	_roundf$2686+1,___fladd@b+1
  3023  002412  C051  F003         	movff	_roundf$2686+2,___fladd@b+2
  3024  002416  C052  F004         	movff	_roundf$2686+3,___fladd@b+3
  3025  00241A  0E00               	movlw	0
  3026  00241C  6E05               	movwf	___fladd@a^0,c
  3027  00241E  0E00               	movlw	0
  3028  002420  6E06               	movwf	(___fladd@a+1)^0,c
  3029  002422  0E80               	movlw	128
  3030  002424  6E07               	movwf	(___fladd@a+2)^0,c
  3031  002426  0EBF               	movlw	191
  3032  002428  6E08               	movwf	(___fladd@a+3)^0,c
  3033  00242A  EC77  F00C         	call	___fladd	;wreg free
  3034  00242E  C001  F057         	movff	?___fladd,roundf@y
  3035  002432  C002  F058         	movff	?___fladd+1,roundf@y+1
  3036  002436  C003  F059         	movff	?___fladd+2,roundf@y+2
  3037  00243A  C004  F05A         	movff	?___fladd+3,roundf@y+3
  3038  00243E  EF8A  F012         	goto	l3648
  3039  002442                     l3642:
  3040  002442  0E00               	movlw	0
  3041  002444  6E01               	movwf	___flge@ff1^0,c
  3042  002446  0E00               	movlw	0
  3043  002448  6E02               	movwf	(___flge@ff1+1)^0,c
  3044  00244A  0E00               	movlw	0
  3045  00244C  6E03               	movwf	(___flge@ff1+2)^0,c
  3046  00244E  0EBF               	movlw	191
  3047  002450  6E04               	movwf	(___flge@ff1+3)^0,c
  3048  002452  C057  F005         	movff	roundf@y,___flge@ff2
  3049  002456  C058  F006         	movff	roundf@y+1,___flge@ff2+1
  3050  00245A  C059  F007         	movff	roundf@y+2,___flge@ff2+2
  3051  00245E  C05A  F008         	movff	roundf@y+3,___flge@ff2+3
  3052  002462  EC45  F01A         	call	___flge	;wreg free
  3053  002466  A0D8               	btfss	status,0,c
  3054  002468  EF38  F012         	goto	u3351
  3055  00246C  EF3A  F012         	goto	u3350
  3056  002470                     u3351:
  3057  002470  EF70  F012         	goto	l3646
  3058  002474                     u3350:
  3059  002474  C041  F005         	movff	roundf@x,___fladd@a
  3060  002478  C042  F006         	movff	roundf@x+1,___fladd@a+1
  3061  00247C  C043  F007         	movff	roundf@x+2,___fladd@a+2
  3062  002480  C044  F008         	movff	roundf@x+3,___fladd@a+3
  3063  002484  C057  F001         	movff	roundf@y,___fladd@b
  3064  002488  C058  F002         	movff	roundf@y+1,___fladd@b+1
  3065  00248C  C059  F003         	movff	roundf@y+2,___fladd@b+2
  3066  002490  C05A  F004         	movff	roundf@y+3,___fladd@b+3
  3067  002494  EC77  F00C         	call	___fladd	;wreg free
  3068  002498  C001  F04F         	movff	?___fladd,_roundf$2686
  3069  00249C  C002  F050         	movff	?___fladd+1,_roundf$2686+1
  3070  0024A0  C003  F051         	movff	?___fladd+2,_roundf$2686+2
  3071  0024A4  C004  F052         	movff	?___fladd+3,_roundf$2686+3
  3072  0024A8  C04F  F001         	movff	_roundf$2686,___fladd@b
  3073  0024AC  C050  F002         	movff	_roundf$2686+1,___fladd@b+1
  3074  0024B0  C051  F003         	movff	_roundf$2686+2,___fladd@b+2
  3075  0024B4  C052  F004         	movff	_roundf$2686+3,___fladd@b+3
  3076  0024B8  0E00               	movlw	0
  3077  0024BA  6E05               	movwf	___fladd@a^0,c
  3078  0024BC  0E00               	movlw	0
  3079  0024BE  6E06               	movwf	(___fladd@a+1)^0,c
  3080  0024C0  0E80               	movlw	128
  3081  0024C2  6E07               	movwf	(___fladd@a+2)^0,c
  3082  0024C4  0E3F               	movlw	63
  3083  0024C6  6E08               	movwf	(___fladd@a+3)^0,c
  3084  0024C8  EC77  F00C         	call	___fladd	;wreg free
  3085  0024CC  C001  F057         	movff	?___fladd,roundf@y
  3086  0024D0  C002  F058         	movff	?___fladd+1,roundf@y+1
  3087  0024D4  C003  F059         	movff	?___fladd+2,roundf@y+2
  3088  0024D8  C004  F05A         	movff	?___fladd+3,roundf@y+3
  3089  0024DC  EF8A  F012         	goto	l3648
  3090  0024E0                     l3646:
  3091  0024E0  C057  F001         	movff	roundf@y,___fladd@b
  3092  0024E4  C058  F002         	movff	roundf@y+1,___fladd@b+1
  3093  0024E8  C059  F003         	movff	roundf@y+2,___fladd@b+2
  3094  0024EC  C05A  F004         	movff	roundf@y+3,___fladd@b+3
  3095  0024F0  C041  F005         	movff	roundf@x,___fladd@a
  3096  0024F4  C042  F006         	movff	roundf@x+1,___fladd@a+1
  3097  0024F8  C043  F007         	movff	roundf@x+2,___fladd@a+2
  3098  0024FC  C044  F008         	movff	roundf@x+3,___fladd@a+3
  3099  002500  EC77  F00C         	call	___fladd	;wreg free
  3100  002504  C001  F057         	movff	?___fladd,roundf@y
  3101  002508  C002  F058         	movff	?___fladd+1,roundf@y+1
  3102  00250C  C003  F059         	movff	?___fladd+2,roundf@y+2
  3103  002510  C004  F05A         	movff	?___fladd+3,roundf@y+3
  3104  002514                     l3648:
  3105  002514  C053  F045         	movff	roundf@u,??_roundf
  3106  002518  C054  F046         	movff	roundf@u+1,??_roundf+1
  3107  00251C  C055  F047         	movff	roundf@u+2,??_roundf+2
  3108  002520  C056  F048         	movff	roundf@u+3,??_roundf+3
  3109  002524  0E20               	movlw	32
  3110  002526  EF9A  F012         	goto	u3360
  3111  00252A                     u3365:
  3112  00252A  90D8               	bcf	status,0,c
  3113  00252C  3248               	rrcf	(??_roundf+3)^0,f,c
  3114  00252E  3247               	rrcf	(??_roundf+2)^0,f,c
  3115  002530  3246               	rrcf	(??_roundf+1)^0,f,c
  3116  002532  3245               	rrcf	??_roundf^0,f,c
  3117  002534                     u3360:
  3118  002534  2EE8               	decfsz	wreg,f,c
  3119  002536  EF95  F012         	goto	u3365
  3120  00253A  5045               	movf	??_roundf^0,w,c
  3121  00253C  1046               	iorwf	(??_roundf+1)^0,w,c
  3122  00253E  1047               	iorwf	(??_roundf+2)^0,w,c
  3123  002540  1048               	iorwf	(??_roundf+3)^0,w,c
  3124  002542  B4D8               	btfsc	status,2,c
  3125  002544  EFA6  F012         	goto	u3371
  3126  002548  EFA8  F012         	goto	u3370
  3127  00254C                     u3371:
  3128  00254C  EFBA  F012         	goto	l3652
  3129  002550                     u3370:
  3130  002550  C057  F001         	movff	roundf@y,___flneg@f1
  3131  002554  C058  F002         	movff	roundf@y+1,___flneg@f1+1
  3132  002558  C059  F003         	movff	roundf@y+2,___flneg@f1+2
  3133  00255C  C05A  F004         	movff	roundf@y+3,___flneg@f1+3
  3134  002560  EC2D  F01F         	call	___flneg	;wreg free
  3135  002564  C001  F057         	movff	?___flneg,roundf@y
  3136  002568  C002  F058         	movff	?___flneg+1,roundf@y+1
  3137  00256C  C003  F059         	movff	?___flneg+2,roundf@y+2
  3138  002570  C004  F05A         	movff	?___flneg+3,roundf@y+3
  3139  002574                     l3652:
  3140  002574  C057  F041         	movff	roundf@y,?_roundf
  3141  002578  C058  F042         	movff	roundf@y+1,?_roundf+1
  3142  00257C  C059  F043         	movff	roundf@y+2,?_roundf+2
  3143  002580  C05A  F044         	movff	roundf@y+3,?_roundf+3
  3144  002584                     l1317:
  3145  002584  0012               	return		;funcret
  3146  002586                     __end_of_roundf:
  3147                           	callstack 0
  3148                           
  3149 ;; *************** function ___flsub *****************
  3150 ;; Defined at:
  3151 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\sprcadd.c"
  3152 ;; Parameters:    Size  Location     Type
  3153 ;;  b               4   16[COMRAM] float 
  3154 ;;  a               4   20[COMRAM] float 
  3155 ;; Auto vars:     Size  Location     Type
  3156 ;;		None
  3157 ;; Return value:  Size  Location     Type
  3158 ;;                  4   16[COMRAM] float 
  3159 ;; Registers used:
  3160 ;;		wreg, status,2, status,0, cstack
  3161 ;; Tracked objects:
  3162 ;;		On entry : 0/0
  3163 ;;		On exit  : 0/0
  3164 ;;		Unchanged: 0/0
  3165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3166 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3167 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3168 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3169 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3170 ;;Total ram usage:        8 bytes
  3171 ;; Hardware stack levels used: 1
  3172 ;; Hardware stack levels required when called: 1
  3173 ;; This function calls:
  3174 ;;		___fladd
  3175 ;; This function is called by:
  3176 ;;		_roundf
  3177 ;; This function uses a non-reentrant model
  3178 ;;
  3179                           
  3180                           	psect	text9
  3181  003C5A                     __ptext9:
  3182                           	callstack 0
  3183  003C5A                     ___flsub:
  3184                           	callstack 26
  3185  003C5A  0E00               	movlw	0
  3186  003C5C  1A15               	xorwf	___flsub@a^0,f,c
  3187  003C5E  0E00               	movlw	0
  3188  003C60  1A16               	xorwf	(___flsub@a+1)^0,f,c
  3189  003C62  0E00               	movlw	0
  3190  003C64  1A17               	xorwf	(___flsub@a+2)^0,f,c
  3191  003C66  0E80               	movlw	128
  3192  003C68  1A18               	xorwf	(___flsub@a+3)^0,f,c
  3193  003C6A  C011  F001         	movff	___flsub@b,___fladd@b
  3194  003C6E  C012  F002         	movff	___flsub@b+1,___fladd@b+1
  3195  003C72  C013  F003         	movff	___flsub@b+2,___fladd@b+2
  3196  003C76  C014  F004         	movff	___flsub@b+3,___fladd@b+3
  3197  003C7A  C015  F005         	movff	___flsub@a,___fladd@a
  3198  003C7E  C016  F006         	movff	___flsub@a+1,___fladd@a+1
  3199  003C82  C017  F007         	movff	___flsub@a+2,___fladd@a+2
  3200  003C86  C018  F008         	movff	___flsub@a+3,___fladd@a+3
  3201  003C8A  EC77  F00C         	call	___fladd	;wreg free
  3202  003C8E  C001  F011         	movff	?___fladd,?___flsub
  3203  003C92  C002  F012         	movff	?___fladd+1,?___flsub+1
  3204  003C96  C003  F013         	movff	?___fladd+2,?___flsub+2
  3205  003C9A  C004  F014         	movff	?___fladd+3,?___flsub+3
  3206  003C9E  0012               	return		;funcret
  3207  003CA0                     __end_of___flsub:
  3208                           	callstack 0
  3209                           
  3210 ;; *************** function ___fladd *****************
  3211 ;; Defined at:
  3212 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\sprcadd.c"
  3213 ;; Parameters:    Size  Location     Type
  3214 ;;  b               4    0[COMRAM] float 
  3215 ;;  a               4    4[COMRAM] float 
  3216 ;; Auto vars:     Size  Location     Type
  3217 ;;  grs             1   15[COMRAM] unsigned char 
  3218 ;;  bexp            1   14[COMRAM] unsigned char 
  3219 ;;  aexp            1   13[COMRAM] unsigned char 
  3220 ;;  signs           1   12[COMRAM] unsigned char 
  3221 ;; Return value:  Size  Location     Type
  3222 ;;                  4    0[COMRAM] unsigned char 
  3223 ;; Registers used:
  3224 ;;		wreg, status,2, status,0
  3225 ;; Tracked objects:
  3226 ;;		On entry : 0/0
  3227 ;;		On exit  : 0/0
  3228 ;;		Unchanged: 0/0
  3229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3230 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3231 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3232 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3233 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3234 ;;Total ram usage:       16 bytes
  3235 ;; Hardware stack levels used: 1
  3236 ;; This function calls:
  3237 ;;		Nothing
  3238 ;; This function is called by:
  3239 ;;		___flsub
  3240 ;;		_roundf
  3241 ;; This function uses a non-reentrant model
  3242 ;;
  3243                           
  3244                           	psect	text10
  3245  0018EE                     __ptext10:
  3246                           	callstack 0
  3247  0018EE                     ___fladd:
  3248                           	callstack 26
  3249  0018EE  5004               	movf	(___fladd@b+3)^0,w,c
  3250  0018F0  0B80               	andlw	128
  3251  0018F2  6E0D               	movwf	___fladd@signs^0,c
  3252  0018F4  5004               	movf	(___fladd@b+3)^0,w,c
  3253  0018F6  2404               	addwf	(___fladd@b+3)^0,w,c
  3254  0018F8  6E0F               	movwf	___fladd@bexp^0,c
  3255  0018FA  AE03               	btfss	(___fladd@b+2)^0,7,c
  3256  0018FC  EF82  F00C         	goto	u2351
  3257  001900  EF84  F00C         	goto	u2350
  3258  001904                     u2351:
  3259  001904  EF85  F00C         	goto	l3044
  3260  001908                     u2350:
  3261  001908  800F               	bsf	___fladd@bexp^0,0,c
  3262  00190A                     l3044:
  3263  00190A  500F               	movf	___fladd@bexp^0,w,c
  3264  00190C  B4D8               	btfsc	status,2,c
  3265  00190E  EF8B  F00C         	goto	u2361
  3266  001912  EF8D  F00C         	goto	u2360
  3267  001916                     u2361:
  3268  001916  EFA2  F00C         	goto	l3054
  3269  00191A                     u2360:
  3270  00191A  280F               	incf	___fladd@bexp^0,w,c
  3271  00191C  A4D8               	btfss	status,2,c
  3272  00191E  EF93  F00C         	goto	u2371
  3273  001922  EF95  F00C         	goto	u2370
  3274  001926                     u2371:
  3275  001926  EF9D  F00C         	goto	l3050
  3276  00192A                     u2370:
  3277  00192A  0E00               	movlw	0
  3278  00192C  6E01               	movwf	___fladd@b^0,c
  3279  00192E  0E00               	movlw	0
  3280  001930  6E02               	movwf	(___fladd@b+1)^0,c
  3281  001932  0E00               	movlw	0
  3282  001934  6E03               	movwf	(___fladd@b+2)^0,c
  3283  001936  0E00               	movlw	0
  3284  001938  6E04               	movwf	(___fladd@b+3)^0,c
  3285  00193A                     l3050:
  3286  00193A  8E03               	bsf	(___fladd@b+2)^0,7,c
  3287  00193C  0E00               	movlw	0
  3288  00193E  6E04               	movwf	(___fladd@b+3)^0,c
  3289  001940  EFAA  F00C         	goto	l3056
  3290  001944                     l3054:
  3291  001944  0E00               	movlw	0
  3292  001946  6E01               	movwf	___fladd@b^0,c
  3293  001948  0E00               	movlw	0
  3294  00194A  6E02               	movwf	(___fladd@b+1)^0,c
  3295  00194C  0E00               	movlw	0
  3296  00194E  6E03               	movwf	(___fladd@b+2)^0,c
  3297  001950  0E00               	movlw	0
  3298  001952  6E04               	movwf	(___fladd@b+3)^0,c
  3299  001954                     l3056:
  3300  001954  5008               	movf	(___fladd@a+3)^0,w,c
  3301  001956  0B80               	andlw	128
  3302  001958  6E0E               	movwf	___fladd@aexp^0,c
  3303  00195A  500D               	movf	___fladd@signs^0,w,c
  3304  00195C  180E               	xorwf	___fladd@aexp^0,w,c
  3305  00195E  B4D8               	btfsc	status,2,c
  3306  001960  EFB4  F00C         	goto	u2381
  3307  001964  EFB6  F00C         	goto	u2380
  3308  001968                     u2381:
  3309  001968  EFB7  F00C         	goto	l3062
  3310  00196C                     u2380:
  3311  00196C  8C0D               	bsf	___fladd@signs^0,6,c
  3312  00196E                     l3062:
  3313  00196E  5008               	movf	(___fladd@a+3)^0,w,c
  3314  001970  2408               	addwf	(___fladd@a+3)^0,w,c
  3315  001972  6E0E               	movwf	___fladd@aexp^0,c
  3316  001974  AE07               	btfss	(___fladd@a+2)^0,7,c
  3317  001976  EFBF  F00C         	goto	u2391
  3318  00197A  EFC1  F00C         	goto	u2390
  3319  00197E                     u2391:
  3320  00197E  EFC2  F00C         	goto	l3068
  3321  001982                     u2390:
  3322  001982  800E               	bsf	___fladd@aexp^0,0,c
  3323  001984                     l3068:
  3324  001984  500E               	movf	___fladd@aexp^0,w,c
  3325  001986  B4D8               	btfsc	status,2,c
  3326  001988  EFC8  F00C         	goto	u2401
  3327  00198C  EFCA  F00C         	goto	u2400
  3328  001990                     u2401:
  3329  001990  EFDF  F00C         	goto	l3078
  3330  001994                     u2400:
  3331  001994  280E               	incf	___fladd@aexp^0,w,c
  3332  001996  A4D8               	btfss	status,2,c
  3333  001998  EFD0  F00C         	goto	u2411
  3334  00199C  EFD2  F00C         	goto	u2410
  3335  0019A0                     u2411:
  3336  0019A0  EFDA  F00C         	goto	l3074
  3337  0019A4                     u2410:
  3338  0019A4  0E00               	movlw	0
  3339  0019A6  6E05               	movwf	___fladd@a^0,c
  3340  0019A8  0E00               	movlw	0
  3341  0019AA  6E06               	movwf	(___fladd@a+1)^0,c
  3342  0019AC  0E00               	movlw	0
  3343  0019AE  6E07               	movwf	(___fladd@a+2)^0,c
  3344  0019B0  0E00               	movlw	0
  3345  0019B2  6E08               	movwf	(___fladd@a+3)^0,c
  3346  0019B4                     l3074:
  3347  0019B4  8E07               	bsf	(___fladd@a+2)^0,7,c
  3348  0019B6  0E00               	movlw	0
  3349  0019B8  6E08               	movwf	(___fladd@a+3)^0,c
  3350  0019BA  EFE7  F00C         	goto	l3080
  3351  0019BE                     l3078:
  3352  0019BE  0E00               	movlw	0
  3353  0019C0  6E05               	movwf	___fladd@a^0,c
  3354  0019C2  0E00               	movlw	0
  3355  0019C4  6E06               	movwf	(___fladd@a+1)^0,c
  3356  0019C6  0E00               	movlw	0
  3357  0019C8  6E07               	movwf	(___fladd@a+2)^0,c
  3358  0019CA  0E00               	movlw	0
  3359  0019CC  6E08               	movwf	(___fladd@a+3)^0,c
  3360  0019CE                     l3080:
  3361  0019CE  500F               	movf	___fladd@bexp^0,w,c
  3362  0019D0  5C0E               	subwf	___fladd@aexp^0,w,c
  3363  0019D2  B0D8               	btfsc	status,0,c
  3364  0019D4  EFEE  F00C         	goto	u2421
  3365  0019D8  EFF0  F00C         	goto	u2420
  3366  0019DC                     u2421:
  3367  0019DC  EF17  F00D         	goto	l3116
  3368  0019E0                     u2420:
  3369  0019E0  AC0D               	btfss	___fladd@signs^0,6,c
  3370  0019E2  EFF5  F00C         	goto	u2431
  3371  0019E6  EFF7  F00C         	goto	u2430
  3372  0019EA                     u2431:
  3373  0019EA  EFF9  F00C         	goto	l3086
  3374  0019EE                     u2430:
  3375  0019EE  0E80               	movlw	128
  3376  0019F0  1A0D               	xorwf	___fladd@signs^0,f,c
  3377  0019F2                     l3086:
  3378  0019F2  C00F  F010         	movff	___fladd@bexp,___fladd@grs
  3379  0019F6  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  3380  0019FA  C010  F00E         	movff	___fladd@grs,___fladd@aexp
  3381  0019FE  C001  F010         	movff	___fladd@b,___fladd@grs
  3382  001A02  C005  F001         	movff	___fladd@a,___fladd@b
  3383  001A06  C010  F005         	movff	___fladd@grs,___fladd@a
  3384  001A0A  C002  F010         	movff	___fladd@b+1,___fladd@grs
  3385  001A0E  C006  F002         	movff	___fladd@a+1,___fladd@b+1
  3386  001A12  C010  F006         	movff	___fladd@grs,___fladd@a+1
  3387  001A16  C003  F010         	movff	___fladd@b+2,___fladd@grs
  3388  001A1A  C007  F003         	movff	___fladd@a+2,___fladd@b+2
  3389  001A1E  C010  F007         	movff	___fladd@grs,___fladd@a+2
  3390  001A22  C004  F010         	movff	___fladd@b+3,___fladd@grs
  3391  001A26  C008  F004         	movff	___fladd@a+3,___fladd@b+3
  3392  001A2A  C010  F008         	movff	___fladd@grs,___fladd@a+3
  3393  001A2E                     l3116:
  3394  001A2E  0E00               	movlw	0
  3395  001A30  6E10               	movwf	___fladd@grs^0,c
  3396  001A32  500F               	movf	___fladd@bexp^0,w,c
  3397  001A34  C00E  F009         	movff	___fladd@aexp,??___fladd
  3398  001A38  6A0A               	clrf	(??___fladd+1)^0,c
  3399  001A3A  5E09               	subwf	??___fladd^0,f,c
  3400  001A3C  0E00               	movlw	0
  3401  001A3E  5A0A               	subwfb	(??___fladd+1)^0,f,c
  3402  001A40  BE0A               	btfsc	(??___fladd+1)^0,7,c
  3403  001A42  EF2C  F00D         	goto	u2441
  3404  001A46  500A               	movf	(??___fladd+1)^0,w,c
  3405  001A48  E109               	bnz	u2440
  3406  001A4A  0E1A               	movlw	26
  3407  001A4C  5C09               	subwf	??___fladd^0,w,c
  3408  001A4E  A0D8               	btfss	status,0,c
  3409  001A50  EF2C  F00D         	goto	u2441
  3410  001A54  EF2E  F00D         	goto	u2440
  3411  001A58                     u2441:
  3412  001A58  EF65  F00D         	goto	l1053
  3413  001A5C                     u2440:
  3414  001A5C  5001               	movf	___fladd@b^0,w,c
  3415  001A5E  1002               	iorwf	(___fladd@b+1)^0,w,c
  3416  001A60  1003               	iorwf	(___fladd@b+2)^0,w,c
  3417  001A62  1004               	iorwf	(___fladd@b+3)^0,w,c
  3418  001A64  A4D8               	btfss	status,2,c
  3419  001A66  EF37  F00D         	goto	u2451
  3420  001A6A  EF3A  F00D         	goto	u2450
  3421  001A6E                     u2451:
  3422  001A6E  0E01               	movlw	1
  3423  001A70  EF3B  F00D         	goto	u2460
  3424  001A74                     u2450:
  3425  001A74  0E00               	movlw	0
  3426  001A76                     u2460:
  3427  001A76  6E10               	movwf	___fladd@grs^0,c
  3428  001A78  0E00               	movlw	0
  3429  001A7A  6E01               	movwf	___fladd@b^0,c
  3430  001A7C  0E00               	movlw	0
  3431  001A7E  6E02               	movwf	(___fladd@b+1)^0,c
  3432  001A80  0E00               	movlw	0
  3433  001A82  6E03               	movwf	(___fladd@b+2)^0,c
  3434  001A84  0E00               	movlw	0
  3435  001A86  6E04               	movwf	(___fladd@b+3)^0,c
  3436  001A88  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  3437  001A8C  EF6E  F00D         	goto	l1052
  3438  001A90                     l1054:
  3439  001A90  A010               	btfss	___fladd@grs^0,0,c
  3440  001A92  EF4D  F00D         	goto	u2471
  3441  001A96  EF4F  F00D         	goto	u2470
  3442  001A9A                     u2471:
  3443  001A9A  EF55  F00D         	goto	l3128
  3444  001A9E                     u2470:
  3445  001A9E  90D8               	bcf	status,0,c
  3446  001AA0  3010               	rrcf	___fladd@grs^0,w,c
  3447  001AA2  0901               	iorlw	1
  3448  001AA4  6E10               	movwf	___fladd@grs^0,c
  3449  001AA6  EF57  F00D         	goto	l3130
  3450  001AAA                     l3128:
  3451  001AAA  90D8               	bcf	status,0,c
  3452  001AAC  3210               	rrcf	___fladd@grs^0,f,c
  3453  001AAE                     l3130:
  3454  001AAE  A001               	btfss	___fladd@b^0,0,c
  3455  001AB0  EF5C  F00D         	goto	u2481
  3456  001AB4  EF5E  F00D         	goto	u2480
  3457  001AB8                     u2481:
  3458  001AB8  EF5F  F00D         	goto	l3134
  3459  001ABC                     u2480:
  3460  001ABC  8E10               	bsf	___fladd@grs^0,7,c
  3461  001ABE                     l3134:
  3462  001ABE  3404               	rlcf	(___fladd@b+3)^0,w,c
  3463  001AC0  3204               	rrcf	(___fladd@b+3)^0,f,c
  3464  001AC2  3203               	rrcf	(___fladd@b+2)^0,f,c
  3465  001AC4  3202               	rrcf	(___fladd@b+1)^0,f,c
  3466  001AC6  3201               	rrcf	___fladd@b^0,f,c
  3467  001AC8  2A0F               	incf	___fladd@bexp^0,f,c
  3468  001ACA                     l1053:
  3469  001ACA  500E               	movf	___fladd@aexp^0,w,c
  3470  001ACC  5C0F               	subwf	___fladd@bexp^0,w,c
  3471  001ACE  A0D8               	btfss	status,0,c
  3472  001AD0  EF6C  F00D         	goto	u2491
  3473  001AD4  EF6E  F00D         	goto	u2490
  3474  001AD8                     u2491:
  3475  001AD8  EF48  F00D         	goto	l1054
  3476  001ADC                     u2490:
  3477  001ADC                     l1052:
  3478  001ADC  BC0D               	btfsc	___fladd@signs^0,6,c
  3479  001ADE  EF73  F00D         	goto	u2501
  3480  001AE2  EF75  F00D         	goto	u2500
  3481  001AE6                     u2501:
  3482  001AE6  EFB5  F00D         	goto	l3162
  3483  001AEA                     u2500:
  3484  001AEA  500F               	movf	___fladd@bexp^0,w,c
  3485  001AEC  A4D8               	btfss	status,2,c
  3486  001AEE  EF7B  F00D         	goto	u2511
  3487  001AF2  EF7D  F00D         	goto	u2510
  3488  001AF6                     u2511:
  3489  001AF6  EF87  F00D         	goto	l3144
  3490  001AFA                     u2510:
  3491  001AFA  0E00               	movlw	0
  3492  001AFC  6E01               	movwf	?___fladd^0,c
  3493  001AFE  0E00               	movlw	0
  3494  001B00  6E02               	movwf	(?___fladd+1)^0,c
  3495  001B02  0E00               	movlw	0
  3496  001B04  6E03               	movwf	(?___fladd+2)^0,c
  3497  001B06  0E00               	movlw	0
  3498  001B08  6E04               	movwf	(?___fladd+3)^0,c
  3499  001B0A  EFD6  F00E         	goto	l1061
  3500  001B0E                     l3144:
  3501  001B0E  5005               	movf	___fladd@a^0,w,c
  3502  001B10  2601               	addwf	___fladd@b^0,f,c
  3503  001B12  5006               	movf	(___fladd@a+1)^0,w,c
  3504  001B14  2202               	addwfc	(___fladd@b+1)^0,f,c
  3505  001B16  5007               	movf	(___fladd@a+2)^0,w,c
  3506  001B18  2203               	addwfc	(___fladd@b+2)^0,f,c
  3507  001B1A  5008               	movf	(___fladd@a+3)^0,w,c
  3508  001B1C  2204               	addwfc	(___fladd@b+3)^0,f,c
  3509  001B1E  A004               	btfss	(___fladd@b+3)^0,0,c
  3510  001B20  EF94  F00D         	goto	u2521
  3511  001B24  EF96  F00D         	goto	u2520
  3512  001B28                     u2521:
  3513  001B28  EF42  F00E         	goto	l3198
  3514  001B2C                     u2520:
  3515  001B2C  A010               	btfss	___fladd@grs^0,0,c
  3516  001B2E  EF9B  F00D         	goto	u2531
  3517  001B32  EF9D  F00D         	goto	u2530
  3518  001B36                     u2531:
  3519  001B36  EFA3  F00D         	goto	l3152
  3520  001B3A                     u2530:
  3521  001B3A  90D8               	bcf	status,0,c
  3522  001B3C  3010               	rrcf	___fladd@grs^0,w,c
  3523  001B3E  0901               	iorlw	1
  3524  001B40  6E10               	movwf	___fladd@grs^0,c
  3525  001B42  EFA5  F00D         	goto	l3154
  3526  001B46                     l3152:
  3527  001B46  90D8               	bcf	status,0,c
  3528  001B48  3210               	rrcf	___fladd@grs^0,f,c
  3529  001B4A                     l3154:
  3530  001B4A  A001               	btfss	___fladd@b^0,0,c
  3531  001B4C  EFAA  F00D         	goto	u2541
  3532  001B50  EFAC  F00D         	goto	u2540
  3533  001B54                     u2541:
  3534  001B54  EFAD  F00D         	goto	l3158
  3535  001B58                     u2540:
  3536  001B58  8E10               	bsf	___fladd@grs^0,7,c
  3537  001B5A                     l3158:
  3538  001B5A  3404               	rlcf	(___fladd@b+3)^0,w,c
  3539  001B5C  3204               	rrcf	(___fladd@b+3)^0,f,c
  3540  001B5E  3203               	rrcf	(___fladd@b+2)^0,f,c
  3541  001B60  3202               	rrcf	(___fladd@b+1)^0,f,c
  3542  001B62  3201               	rrcf	___fladd@b^0,f,c
  3543  001B64  2A0F               	incf	___fladd@bexp^0,f,c
  3544  001B66  EF42  F00E         	goto	l3198
  3545  001B6A                     l3162:
  3546  001B6A  5005               	movf	___fladd@a^0,w,c
  3547  001B6C  5C01               	subwf	___fladd@b^0,w,c
  3548  001B6E  5006               	movf	(___fladd@a+1)^0,w,c
  3549  001B70  5802               	subwfb	(___fladd@b+1)^0,w,c
  3550  001B72  5007               	movf	(___fladd@a+2)^0,w,c
  3551  001B74  5803               	subwfb	(___fladd@b+2)^0,w,c
  3552  001B76  5004               	movf	(___fladd@b+3)^0,w,c
  3553  001B78  0A80               	xorlw	128
  3554  001B7A  6E09               	movwf	??___fladd^0,c
  3555  001B7C  5008               	movf	(___fladd@a+3)^0,w,c
  3556  001B7E  0A80               	xorlw	128
  3557  001B80  5809               	subwfb	??___fladd^0,w,c
  3558  001B82  B0D8               	btfsc	status,0,c
  3559  001B84  EFC6  F00D         	goto	u2551
  3560  001B88  EFC8  F00D         	goto	u2550
  3561  001B8C                     u2551:
  3562  001B8C  EFF3  F00D         	goto	l3172
  3563  001B90                     u2550:
  3564  001B90  5001               	movf	___fladd@b^0,w,c
  3565  001B92  5C05               	subwf	___fladd@a^0,w,c
  3566  001B94  6E09               	movwf	??___fladd^0,c
  3567  001B96  5002               	movf	(___fladd@b+1)^0,w,c
  3568  001B98  5806               	subwfb	(___fladd@a+1)^0,w,c
  3569  001B9A  6E0A               	movwf	(??___fladd+1)^0,c
  3570  001B9C  5003               	movf	(___fladd@b+2)^0,w,c
  3571  001B9E  5807               	subwfb	(___fladd@a+2)^0,w,c
  3572  001BA0  6E0B               	movwf	(??___fladd+2)^0,c
  3573  001BA2  5004               	movf	(___fladd@b+3)^0,w,c
  3574  001BA4  5808               	subwfb	(___fladd@a+3)^0,w,c
  3575  001BA6  6E0C               	movwf	(??___fladd+3)^0,c
  3576  001BA8  0EFF               	movlw	255
  3577  001BAA  2409               	addwf	??___fladd^0,w,c
  3578  001BAC  6E01               	movwf	___fladd@b^0,c
  3579  001BAE  0EFF               	movlw	255
  3580  001BB0  200A               	addwfc	(??___fladd+1)^0,w,c
  3581  001BB2  6E02               	movwf	(___fladd@b+1)^0,c
  3582  001BB4  0EFF               	movlw	255
  3583  001BB6  200B               	addwfc	(??___fladd+2)^0,w,c
  3584  001BB8  6E03               	movwf	(___fladd@b+2)^0,c
  3585  001BBA  0EFF               	movlw	255
  3586  001BBC  200C               	addwfc	(??___fladd+3)^0,w,c
  3587  001BBE  6E04               	movwf	(___fladd@b+3)^0,c
  3588  001BC0  0E80               	movlw	128
  3589  001BC2  1A0D               	xorwf	___fladd@signs^0,f,c
  3590  001BC4  6C10               	negf	___fladd@grs^0,c
  3591  001BC6  5010               	movf	___fladd@grs^0,w,c
  3592  001BC8  A4D8               	btfss	status,2,c
  3593  001BCA  EFE9  F00D         	goto	u2561
  3594  001BCE  EFEB  F00D         	goto	u2560
  3595  001BD2                     u2561:
  3596  001BD2  EFFB  F00D         	goto	l1069
  3597  001BD6                     u2560:
  3598  001BD6  0E01               	movlw	1
  3599  001BD8  2601               	addwf	___fladd@b^0,f,c
  3600  001BDA  0E00               	movlw	0
  3601  001BDC  2202               	addwfc	(___fladd@b+1)^0,f,c
  3602  001BDE  2203               	addwfc	(___fladd@b+2)^0,f,c
  3603  001BE0  2204               	addwfc	(___fladd@b+3)^0,f,c
  3604  001BE2  EFFB  F00D         	goto	l1069
  3605  001BE6                     l3172:
  3606  001BE6  5005               	movf	___fladd@a^0,w,c
  3607  001BE8  5E01               	subwf	___fladd@b^0,f,c
  3608  001BEA  5006               	movf	(___fladd@a+1)^0,w,c
  3609  001BEC  5A02               	subwfb	(___fladd@b+1)^0,f,c
  3610  001BEE  5007               	movf	(___fladd@a+2)^0,w,c
  3611  001BF0  5A03               	subwfb	(___fladd@b+2)^0,f,c
  3612  001BF2  5008               	movf	(___fladd@a+3)^0,w,c
  3613  001BF4  5A04               	subwfb	(___fladd@b+3)^0,f,c
  3614  001BF6                     l1069:
  3615  001BF6  5001               	movf	___fladd@b^0,w,c
  3616  001BF8  1002               	iorwf	(___fladd@b+1)^0,w,c
  3617  001BFA  1003               	iorwf	(___fladd@b+2)^0,w,c
  3618  001BFC  1004               	iorwf	(___fladd@b+3)^0,w,c
  3619  001BFE  A4D8               	btfss	status,2,c
  3620  001C00  EF04  F00E         	goto	u2571
  3621  001C04  EF06  F00E         	goto	u2570
  3622  001C08                     u2571:
  3623  001C08  EF3B  F00E         	goto	l3196
  3624  001C0C                     u2570:
  3625  001C0C  5010               	movf	___fladd@grs^0,w,c
  3626  001C0E  A4D8               	btfss	status,2,c
  3627  001C10  EF0C  F00E         	goto	u2581
  3628  001C14  EF0E  F00E         	goto	u2580
  3629  001C18                     u2581:
  3630  001C18  EF3B  F00E         	goto	l3196
  3631  001C1C                     u2580:
  3632  001C1C  0E00               	movlw	0
  3633  001C1E  6E01               	movwf	?___fladd^0,c
  3634  001C20  0E00               	movlw	0
  3635  001C22  6E02               	movwf	(?___fladd+1)^0,c
  3636  001C24  0E00               	movlw	0
  3637  001C26  6E03               	movwf	(?___fladd+2)^0,c
  3638  001C28  0E00               	movlw	0
  3639  001C2A  6E04               	movwf	(?___fladd+3)^0,c
  3640  001C2C  EFD6  F00E         	goto	l1061
  3641  001C30                     l3180:
  3642  001C30  90D8               	bcf	status,0,c
  3643  001C32  3601               	rlcf	___fladd@b^0,f,c
  3644  001C34  3602               	rlcf	(___fladd@b+1)^0,f,c
  3645  001C36  3603               	rlcf	(___fladd@b+2)^0,f,c
  3646  001C38  3604               	rlcf	(___fladd@b+3)^0,f,c
  3647  001C3A  AE10               	btfss	___fladd@grs^0,7,c
  3648  001C3C  EF22  F00E         	goto	u2591
  3649  001C40  EF24  F00E         	goto	u2590
  3650  001C44                     u2591:
  3651  001C44  EF25  F00E         	goto	l3186
  3652  001C48                     u2590:
  3653  001C48  8001               	bsf	___fladd@b^0,0,c
  3654  001C4A                     l3186:
  3655  001C4A  A010               	btfss	___fladd@grs^0,0,c
  3656  001C4C  EF2A  F00E         	goto	u2601
  3657  001C50  EF2C  F00E         	goto	u2600
  3658  001C54                     u2601:
  3659  001C54  EF30  F00E         	goto	l3190
  3660  001C58                     u2600:
  3661  001C58  80D8               	bsf	status,0,c
  3662  001C5A  3610               	rlcf	___fladd@grs^0,f,c
  3663  001C5C  EF32  F00E         	goto	l3192
  3664  001C60                     l3190:
  3665  001C60  90D8               	bcf	status,0,c
  3666  001C62  3610               	rlcf	___fladd@grs^0,f,c
  3667  001C64                     l3192:
  3668  001C64  500F               	movf	___fladd@bexp^0,w,c
  3669  001C66  B4D8               	btfsc	status,2,c
  3670  001C68  EF38  F00E         	goto	u2611
  3671  001C6C  EF3A  F00E         	goto	u2610
  3672  001C70                     u2611:
  3673  001C70  EF3B  F00E         	goto	l3196
  3674  001C74                     u2610:
  3675  001C74  060F               	decf	___fladd@bexp^0,f,c
  3676  001C76                     l3196:
  3677  001C76  AE03               	btfss	(___fladd@b+2)^0,7,c
  3678  001C78  EF40  F00E         	goto	u2621
  3679  001C7C  EF42  F00E         	goto	u2620
  3680  001C80                     u2621:
  3681  001C80  EF18  F00E         	goto	l3180
  3682  001C84                     u2620:
  3683  001C84                     l3198:
  3684  001C84  0E00               	movlw	0
  3685  001C86  6E0E               	movwf	___fladd@aexp^0,c
  3686  001C88  AE10               	btfss	___fladd@grs^0,7,c
  3687  001C8A  EF49  F00E         	goto	u2631
  3688  001C8E  EF4B  F00E         	goto	u2630
  3689  001C92                     u2631:
  3690  001C92  EF63  F00E         	goto	l1078
  3691  001C96                     u2630:
  3692  001C96  C010  F009         	movff	___fladd@grs,??___fladd
  3693  001C9A  0E7F               	movlw	127
  3694  001C9C  1609               	andwf	??___fladd^0,f,c
  3695  001C9E  B4D8               	btfsc	status,2,c
  3696  001CA0  EF54  F00E         	goto	u2641
  3697  001CA4  EF56  F00E         	goto	u2640
  3698  001CA8                     u2641:
  3699  001CA8  EF5A  F00E         	goto	l1079
  3700  001CAC                     u2640:
  3701  001CAC                     l3204:
  3702  001CAC  0E01               	movlw	1
  3703  001CAE  6E0E               	movwf	___fladd@aexp^0,c
  3704  001CB0  EF63  F00E         	goto	l1078
  3705  001CB4                     l1079:
  3706  001CB4  A001               	btfss	___fladd@b^0,0,c
  3707  001CB6  EF5F  F00E         	goto	u2651
  3708  001CBA  EF61  F00E         	goto	u2650
  3709  001CBE                     u2651:
  3710  001CBE  EF63  F00E         	goto	l1078
  3711  001CC2                     u2650:
  3712  001CC2  EF56  F00E         	goto	l3204
  3713  001CC6                     l1078:
  3714  001CC6  500E               	movf	___fladd@aexp^0,w,c
  3715  001CC8  B4D8               	btfsc	status,2,c
  3716  001CCA  EF69  F00E         	goto	u2661
  3717  001CCE  EF6B  F00E         	goto	u2660
  3718  001CD2                     u2661:
  3719  001CD2  EF96  F00E         	goto	l3216
  3720  001CD6                     u2660:
  3721  001CD6  0E01               	movlw	1
  3722  001CD8  2601               	addwf	___fladd@b^0,f,c
  3723  001CDA  0E00               	movlw	0
  3724  001CDC  2202               	addwfc	(___fladd@b+1)^0,f,c
  3725  001CDE  2203               	addwfc	(___fladd@b+2)^0,f,c
  3726  001CE0  2204               	addwfc	(___fladd@b+3)^0,f,c
  3727  001CE2  A004               	btfss	(___fladd@b+3)^0,0,c
  3728  001CE4  EF76  F00E         	goto	u2671
  3729  001CE8  EF78  F00E         	goto	u2670
  3730  001CEC                     u2671:
  3731  001CEC  EF96  F00E         	goto	l3216
  3732  001CF0                     u2670:
  3733  001CF0  C001  F009         	movff	___fladd@b,??___fladd
  3734  001CF4  C002  F00A         	movff	___fladd@b+1,??___fladd+1
  3735  001CF8  C003  F00B         	movff	___fladd@b+2,??___fladd+2
  3736  001CFC  C004  F00C         	movff	___fladd@b+3,??___fladd+3
  3737  001D00  340C               	rlcf	(??___fladd+3)^0,w,c
  3738  001D02  320C               	rrcf	(??___fladd+3)^0,f,c
  3739  001D04  320B               	rrcf	(??___fladd+2)^0,f,c
  3740  001D06  320A               	rrcf	(??___fladd+1)^0,f,c
  3741  001D08  3209               	rrcf	??___fladd^0,f,c
  3742  001D0A  C009  F001         	movff	??___fladd,___fladd@b
  3743  001D0E  C00A  F002         	movff	??___fladd+1,___fladd@b+1
  3744  001D12  C00B  F003         	movff	??___fladd+2,___fladd@b+2
  3745  001D16  C00C  F004         	movff	??___fladd+3,___fladd@b+3
  3746  001D1A  280F               	incf	___fladd@bexp^0,w,c
  3747  001D1C  B4D8               	btfsc	status,2,c
  3748  001D1E  EF93  F00E         	goto	u2681
  3749  001D22  EF95  F00E         	goto	u2680
  3750  001D26                     u2681:
  3751  001D26  EF96  F00E         	goto	l3216
  3752  001D2A                     u2680:
  3753  001D2A  2A0F               	incf	___fladd@bexp^0,f,c
  3754  001D2C                     l3216:
  3755  001D2C  280F               	incf	___fladd@bexp^0,w,c
  3756  001D2E  B4D8               	btfsc	status,2,c
  3757  001D30  EF9C  F00E         	goto	u2691
  3758  001D34  EF9E  F00E         	goto	u2690
  3759  001D38                     u2691:
  3760  001D38  EFA6  F00E         	goto	l3220
  3761  001D3C                     u2690:
  3762  001D3C  500F               	movf	___fladd@bexp^0,w,c
  3763  001D3E  A4D8               	btfss	status,2,c
  3764  001D40  EFA4  F00E         	goto	u2701
  3765  001D44  EFA6  F00E         	goto	u2700
  3766  001D48                     u2701:
  3767  001D48  EFB8  F00E         	goto	l3224
  3768  001D4C                     u2700:
  3769  001D4C                     l3220:
  3770  001D4C  0E00               	movlw	0
  3771  001D4E  6E01               	movwf	___fladd@b^0,c
  3772  001D50  0E00               	movlw	0
  3773  001D52  6E02               	movwf	(___fladd@b+1)^0,c
  3774  001D54  0E00               	movlw	0
  3775  001D56  6E03               	movwf	(___fladd@b+2)^0,c
  3776  001D58  0E00               	movlw	0
  3777  001D5A  6E04               	movwf	(___fladd@b+3)^0,c
  3778  001D5C  500F               	movf	___fladd@bexp^0,w,c
  3779  001D5E  A4D8               	btfss	status,2,c
  3780  001D60  EFB4  F00E         	goto	u2711
  3781  001D64  EFB6  F00E         	goto	u2710
  3782  001D68                     u2711:
  3783  001D68  EFB8  F00E         	goto	l3224
  3784  001D6C                     u2710:
  3785  001D6C  0E00               	movlw	0
  3786  001D6E  6E0D               	movwf	___fladd@signs^0,c
  3787  001D70                     l3224:
  3788  001D70  A00F               	btfss	___fladd@bexp^0,0,c
  3789  001D72  EFBD  F00E         	goto	u2721
  3790  001D76  EFBF  F00E         	goto	u2720
  3791  001D7A                     u2721:
  3792  001D7A  EFC2  F00E         	goto	l3228
  3793  001D7E                     u2720:
  3794  001D7E  8E03               	bsf	(___fladd@b+2)^0,7,c
  3795  001D80  EFC3  F00E         	goto	l3230
  3796  001D84                     l3228:
  3797  001D84  9E03               	bcf	(___fladd@b+2)^0,7,c
  3798  001D86                     l3230:
  3799  001D86  90D8               	bcf	status,0,c
  3800  001D88  300F               	rrcf	___fladd@bexp^0,w,c
  3801  001D8A  6E04               	movwf	(___fladd@b+3)^0,c
  3802  001D8C  AE0D               	btfss	___fladd@signs^0,7,c
  3803  001D8E  EFCB  F00E         	goto	u2731
  3804  001D92  EFCD  F00E         	goto	u2730
  3805  001D96                     u2731:
  3806  001D96  EFCE  F00E         	goto	l3236
  3807  001D9A                     u2730:
  3808  001D9A  8E04               	bsf	(___fladd@b+3)^0,7,c
  3809  001D9C                     l3236:
  3810  001D9C  C001  F001         	movff	___fladd@b,?___fladd
  3811  001DA0  C002  F002         	movff	___fladd@b+1,?___fladd+1
  3812  001DA4  C003  F003         	movff	___fladd@b+2,?___fladd+2
  3813  001DA8  C004  F004         	movff	___fladd@b+3,?___fladd+3
  3814  001DAC                     l1061:
  3815  001DAC  0012               	return		;funcret
  3816  001DAE                     __end_of___fladd:
  3817                           	callstack 0
  3818                           
  3819 ;; *************** function ___flneg *****************
  3820 ;; Defined at:
  3821 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\flneg.c"
  3822 ;; Parameters:    Size  Location     Type
  3823 ;;  f1              4    0[COMRAM] unsigned char 
  3824 ;; Auto vars:     Size  Location     Type
  3825 ;;		None
  3826 ;; Return value:  Size  Location     Type
  3827 ;;                  4    0[COMRAM] unsigned char 
  3828 ;; Registers used:
  3829 ;;		wreg, status,2, status,0
  3830 ;; Tracked objects:
  3831 ;;		On entry : 0/0
  3832 ;;		On exit  : 0/0
  3833 ;;		Unchanged: 0/0
  3834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3835 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3836 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3837 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3838 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3839 ;;Total ram usage:        4 bytes
  3840 ;; Hardware stack levels used: 1
  3841 ;; This function calls:
  3842 ;;		Nothing
  3843 ;; This function is called by:
  3844 ;;		_roundf
  3845 ;; This function uses a non-reentrant model
  3846 ;;
  3847                           
  3848                           	psect	text11
  3849  003E5A                     __ptext11:
  3850                           	callstack 0
  3851  003E5A                     ___flneg:
  3852                           	callstack 27
  3853  003E5A  5001               	movf	___flneg@f1^0,w,c
  3854  003E5C  1002               	iorwf	(___flneg@f1+1)^0,w,c
  3855  003E5E  1003               	iorwf	(___flneg@f1+2)^0,w,c
  3856  003E60  1004               	iorwf	(___flneg@f1+3)^0,w,c
  3857  003E62  B4D8               	btfsc	status,2,c
  3858  003E64  EF36  F01F         	goto	u3151
  3859  003E68  EF38  F01F         	goto	u3150
  3860  003E6C                     u3151:
  3861  003E6C  EF40  F01F         	goto	l3494
  3862  003E70                     u3150:
  3863  003E70  0E00               	movlw	0
  3864  003E72  1A01               	xorwf	___flneg@f1^0,f,c
  3865  003E74  0E00               	movlw	0
  3866  003E76  1A02               	xorwf	(___flneg@f1+1)^0,f,c
  3867  003E78  0E00               	movlw	0
  3868  003E7A  1A03               	xorwf	(___flneg@f1+2)^0,f,c
  3869  003E7C  0E80               	movlw	128
  3870  003E7E  1A04               	xorwf	(___flneg@f1+3)^0,f,c
  3871  003E80                     l3494:
  3872  003E80  C001  F001         	movff	___flneg@f1,?___flneg
  3873  003E84  C002  F002         	movff	___flneg@f1+1,?___flneg+1
  3874  003E88  C003  F003         	movff	___flneg@f1+2,?___flneg+2
  3875  003E8C  C004  F004         	movff	___flneg@f1+3,?___flneg+3
  3876  003E90  0012               	return		;funcret
  3877  003E92                     __end_of___flneg:
  3878                           	callstack 0
  3879                           
  3880 ;; *************** function ___flmul *****************
  3881 ;; Defined at:
  3882 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\sprcmul.c"
  3883 ;; Parameters:    Size  Location     Type
  3884 ;;  b               4   39[COMRAM] unsigned char 
  3885 ;;  a               4   43[COMRAM] unsigned char 
  3886 ;; Auto vars:     Size  Location     Type
  3887 ;;  prod            4   58[COMRAM] struct .
  3888 ;;  grs             4   52[COMRAM] unsigned long 
  3889 ;;  temp            2   62[COMRAM] struct .
  3890 ;;  bexp            1   57[COMRAM] unsigned char 
  3891 ;;  aexp            1   56[COMRAM] unsigned char 
  3892 ;;  sign            1   51[COMRAM] unsigned char 
  3893 ;; Return value:  Size  Location     Type
  3894 ;;                  4   39[COMRAM] unsigned char 
  3895 ;; Registers used:
  3896 ;;		wreg, status,2, status,0, prodl, prodh
  3897 ;; Tracked objects:
  3898 ;;		On entry : 0/0
  3899 ;;		On exit  : 0/0
  3900 ;;		Unchanged: 0/0
  3901 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3902 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3903 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3904 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3905 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3906 ;;Total ram usage:       25 bytes
  3907 ;; Hardware stack levels used: 1
  3908 ;; This function calls:
  3909 ;;		Nothing
  3910 ;; This function is called by:
  3911 ;;		_detect_color
  3912 ;;		_roundf
  3913 ;;		_check_color_reading
  3914 ;; This function uses a non-reentrant model
  3915 ;;
  3916                           
  3917                           	psect	text12
  3918  001DAE                     __ptext12:
  3919                           	callstack 0
  3920  001DAE                     ___flmul:
  3921                           	callstack 27
  3922  001DAE  502B               	movf	(___flmul@b+3)^0,w,c
  3923  001DB0  0B80               	andlw	128
  3924  001DB2  6E34               	movwf	___flmul@sign^0,c
  3925  001DB4  502B               	movf	(___flmul@b+3)^0,w,c
  3926  001DB6  242B               	addwf	(___flmul@b+3)^0,w,c
  3927  001DB8  6E3A               	movwf	___flmul@bexp^0,c
  3928  001DBA  AE2A               	btfss	(___flmul@b+2)^0,7,c
  3929  001DBC  EFE2  F00E         	goto	u2911
  3930  001DC0  EFE4  F00E         	goto	u2910
  3931  001DC4                     u2911:
  3932  001DC4  EFE5  F00E         	goto	l3338
  3933  001DC8                     u2910:
  3934  001DC8  803A               	bsf	___flmul@bexp^0,0,c
  3935  001DCA                     l3338:
  3936  001DCA  503A               	movf	___flmul@bexp^0,w,c
  3937  001DCC  B4D8               	btfsc	status,2,c
  3938  001DCE  EFEB  F00E         	goto	u2921
  3939  001DD2  EFED  F00E         	goto	u2920
  3940  001DD6                     u2921:
  3941  001DD6  EF00  F00F         	goto	l3346
  3942  001DDA                     u2920:
  3943  001DDA  283A               	incf	___flmul@bexp^0,w,c
  3944  001DDC  A4D8               	btfss	status,2,c
  3945  001DDE  EFF3  F00E         	goto	u2931
  3946  001DE2  EFF5  F00E         	goto	u2930
  3947  001DE6                     u2931:
  3948  001DE6  EFFD  F00E         	goto	l3344
  3949  001DEA                     u2930:
  3950  001DEA  0E00               	movlw	0
  3951  001DEC  6E28               	movwf	___flmul@b^0,c
  3952  001DEE  0E00               	movlw	0
  3953  001DF0  6E29               	movwf	(___flmul@b+1)^0,c
  3954  001DF2  0E00               	movlw	0
  3955  001DF4  6E2A               	movwf	(___flmul@b+2)^0,c
  3956  001DF6  0E00               	movlw	0
  3957  001DF8  6E2B               	movwf	(___flmul@b+3)^0,c
  3958  001DFA                     l3344:
  3959  001DFA  8E2A               	bsf	(___flmul@b+2)^0,7,c
  3960  001DFC  EF08  F00F         	goto	l3348
  3961  001E00                     l3346:
  3962  001E00  0E00               	movlw	0
  3963  001E02  6E28               	movwf	___flmul@b^0,c
  3964  001E04  0E00               	movlw	0
  3965  001E06  6E29               	movwf	(___flmul@b+1)^0,c
  3966  001E08  0E00               	movlw	0
  3967  001E0A  6E2A               	movwf	(___flmul@b+2)^0,c
  3968  001E0C  0E00               	movlw	0
  3969  001E0E  6E2B               	movwf	(___flmul@b+3)^0,c
  3970  001E10                     l3348:
  3971  001E10  502F               	movf	(___flmul@a+3)^0,w,c
  3972  001E12  0B80               	andlw	128
  3973  001E14  1A34               	xorwf	___flmul@sign^0,f,c
  3974  001E16  502F               	movf	(___flmul@a+3)^0,w,c
  3975  001E18  242F               	addwf	(___flmul@a+3)^0,w,c
  3976  001E1A  6E39               	movwf	___flmul@aexp^0,c
  3977  001E1C  AE2E               	btfss	(___flmul@a+2)^0,7,c
  3978  001E1E  EF13  F00F         	goto	u2941
  3979  001E22  EF15  F00F         	goto	u2940
  3980  001E26                     u2941:
  3981  001E26  EF16  F00F         	goto	l3356
  3982  001E2A                     u2940:
  3983  001E2A  8039               	bsf	___flmul@aexp^0,0,c
  3984  001E2C                     l3356:
  3985  001E2C  5039               	movf	___flmul@aexp^0,w,c
  3986  001E2E  B4D8               	btfsc	status,2,c
  3987  001E30  EF1C  F00F         	goto	u2951
  3988  001E34  EF1E  F00F         	goto	u2950
  3989  001E38                     u2951:
  3990  001E38  EF31  F00F         	goto	l3364
  3991  001E3C                     u2950:
  3992  001E3C  2839               	incf	___flmul@aexp^0,w,c
  3993  001E3E  A4D8               	btfss	status,2,c
  3994  001E40  EF24  F00F         	goto	u2961
  3995  001E44  EF26  F00F         	goto	u2960
  3996  001E48                     u2961:
  3997  001E48  EF2E  F00F         	goto	l3362
  3998  001E4C                     u2960:
  3999  001E4C  0E00               	movlw	0
  4000  001E4E  6E2C               	movwf	___flmul@a^0,c
  4001  001E50  0E00               	movlw	0
  4002  001E52  6E2D               	movwf	(___flmul@a+1)^0,c
  4003  001E54  0E00               	movlw	0
  4004  001E56  6E2E               	movwf	(___flmul@a+2)^0,c
  4005  001E58  0E00               	movlw	0
  4006  001E5A  6E2F               	movwf	(___flmul@a+3)^0,c
  4007  001E5C                     l3362:
  4008  001E5C  8E2E               	bsf	(___flmul@a+2)^0,7,c
  4009  001E5E  EF39  F00F         	goto	l1138
  4010  001E62                     l3364:
  4011  001E62  0E00               	movlw	0
  4012  001E64  6E2C               	movwf	___flmul@a^0,c
  4013  001E66  0E00               	movlw	0
  4014  001E68  6E2D               	movwf	(___flmul@a+1)^0,c
  4015  001E6A  0E00               	movlw	0
  4016  001E6C  6E2E               	movwf	(___flmul@a+2)^0,c
  4017  001E6E  0E00               	movlw	0
  4018  001E70  6E2F               	movwf	(___flmul@a+3)^0,c
  4019  001E72                     l1138:
  4020  001E72  5039               	movf	___flmul@aexp^0,w,c
  4021  001E74  B4D8               	btfsc	status,2,c
  4022  001E76  EF3F  F00F         	goto	u2971
  4023  001E7A  EF41  F00F         	goto	u2970
  4024  001E7E                     u2971:
  4025  001E7E  EF49  F00F         	goto	l3368
  4026  001E82                     u2970:
  4027  001E82  503A               	movf	___flmul@bexp^0,w,c
  4028  001E84  A4D8               	btfss	status,2,c
  4029  001E86  EF47  F00F         	goto	u2981
  4030  001E8A  EF49  F00F         	goto	u2980
  4031  001E8E                     u2981:
  4032  001E8E  EF53  F00F         	goto	l3372
  4033  001E92                     u2980:
  4034  001E92                     l3368:
  4035  001E92  0E00               	movlw	0
  4036  001E94  6E28               	movwf	?___flmul^0,c
  4037  001E96  0E00               	movlw	0
  4038  001E98  6E29               	movwf	(?___flmul+1)^0,c
  4039  001E9A  0E00               	movlw	0
  4040  001E9C  6E2A               	movwf	(?___flmul+2)^0,c
  4041  001E9E  0E00               	movlw	0
  4042  001EA0  6E2B               	movwf	(?___flmul+3)^0,c
  4043  001EA2  EFEB  F010         	goto	l1142
  4044  001EA6                     l3372:
  4045  001EA6  502E               	movf	(___flmul@a+2)^0,w,c
  4046  001EA8  0228               	mulwf	___flmul@b^0,c
  4047  001EAA  CFF3 F03F          	movff	prodl,___flmul@temp
  4048  001EAE  CFF4 F040          	movff	prodh,___flmul@temp+1
  4049  001EB2  503F               	movf	___flmul@temp^0,w,c
  4050  001EB4  6E35               	movwf	___flmul@grs^0,c
  4051  001EB6  6A36               	clrf	(___flmul@grs+1)^0,c
  4052  001EB8  6A37               	clrf	(___flmul@grs+2)^0,c
  4053  001EBA  6A38               	clrf	(___flmul@grs+3)^0,c
  4054  001EBC  5040               	movf	(___flmul@temp+1)^0,w,c
  4055  001EBE  6E3B               	movwf	___flmul@prod^0,c
  4056  001EC0  6A3C               	clrf	(___flmul@prod+1)^0,c
  4057  001EC2  6A3D               	clrf	(___flmul@prod+2)^0,c
  4058  001EC4  6A3E               	clrf	(___flmul@prod+3)^0,c
  4059  001EC6  502D               	movf	(___flmul@a+1)^0,w,c
  4060  001EC8  0229               	mulwf	(___flmul@b+1)^0,c
  4061  001ECA  CFF3 F03F          	movff	prodl,___flmul@temp
  4062  001ECE  CFF4 F040          	movff	prodh,___flmul@temp+1
  4063  001ED2  503F               	movf	___flmul@temp^0,w,c
  4064  001ED4  2635               	addwf	___flmul@grs^0,f,c
  4065  001ED6  0E00               	movlw	0
  4066  001ED8  2236               	addwfc	(___flmul@grs+1)^0,f,c
  4067  001EDA  2237               	addwfc	(___flmul@grs+2)^0,f,c
  4068  001EDC  2238               	addwfc	(___flmul@grs+3)^0,f,c
  4069  001EDE  5040               	movf	(___flmul@temp+1)^0,w,c
  4070  001EE0  263B               	addwf	___flmul@prod^0,f,c
  4071  001EE2  0E00               	movlw	0
  4072  001EE4  223C               	addwfc	(___flmul@prod+1)^0,f,c
  4073  001EE6  223D               	addwfc	(___flmul@prod+2)^0,f,c
  4074  001EE8  223E               	addwfc	(___flmul@prod+3)^0,f,c
  4075  001EEA  502C               	movf	___flmul@a^0,w,c
  4076  001EEC  022A               	mulwf	(___flmul@b+2)^0,c
  4077  001EEE  CFF3 F03F          	movff	prodl,___flmul@temp
  4078  001EF2  CFF4 F040          	movff	prodh,___flmul@temp+1
  4079  001EF6  503F               	movf	___flmul@temp^0,w,c
  4080  001EF8  2635               	addwf	___flmul@grs^0,f,c
  4081  001EFA  0E00               	movlw	0
  4082  001EFC  2236               	addwfc	(___flmul@grs+1)^0,f,c
  4083  001EFE  2237               	addwfc	(___flmul@grs+2)^0,f,c
  4084  001F00  2238               	addwfc	(___flmul@grs+3)^0,f,c
  4085  001F02  5040               	movf	(___flmul@temp+1)^0,w,c
  4086  001F04  263B               	addwf	___flmul@prod^0,f,c
  4087  001F06  0E00               	movlw	0
  4088  001F08  223C               	addwfc	(___flmul@prod+1)^0,f,c
  4089  001F0A  223D               	addwfc	(___flmul@prod+2)^0,f,c
  4090  001F0C  223E               	addwfc	(___flmul@prod+3)^0,f,c
  4091  001F0E  C037  F038         	movff	___flmul@grs+2,___flmul@grs+3
  4092  001F12  C036  F037         	movff	___flmul@grs+1,___flmul@grs+2
  4093  001F16  C035  F036         	movff	___flmul@grs,___flmul@grs+1
  4094  001F1A  6A35               	clrf	___flmul@grs^0,c
  4095  001F1C  502C               	movf	___flmul@a^0,w,c
  4096  001F1E  0229               	mulwf	(___flmul@b+1)^0,c
  4097  001F20  CFF3 F03F          	movff	prodl,___flmul@temp
  4098  001F24  CFF4 F040          	movff	prodh,___flmul@temp+1
  4099  001F28  503F               	movf	___flmul@temp^0,w,c
  4100  001F2A  2635               	addwf	___flmul@grs^0,f,c
  4101  001F2C  5040               	movf	(___flmul@temp+1)^0,w,c
  4102  001F2E  2236               	addwfc	(___flmul@grs+1)^0,f,c
  4103  001F30  0E00               	movlw	0
  4104  001F32  2237               	addwfc	(___flmul@grs+2)^0,f,c
  4105  001F34  0E00               	movlw	0
  4106  001F36  2238               	addwfc	(___flmul@grs+3)^0,f,c
  4107  001F38  502D               	movf	(___flmul@a+1)^0,w,c
  4108  001F3A  0228               	mulwf	___flmul@b^0,c
  4109  001F3C  CFF3 F03F          	movff	prodl,___flmul@temp
  4110  001F40  CFF4 F040          	movff	prodh,___flmul@temp+1
  4111  001F44  503F               	movf	___flmul@temp^0,w,c
  4112  001F46  2635               	addwf	___flmul@grs^0,f,c
  4113  001F48  5040               	movf	(___flmul@temp+1)^0,w,c
  4114  001F4A  2236               	addwfc	(___flmul@grs+1)^0,f,c
  4115  001F4C  0E00               	movlw	0
  4116  001F4E  2237               	addwfc	(___flmul@grs+2)^0,f,c
  4117  001F50  0E00               	movlw	0
  4118  001F52  2238               	addwfc	(___flmul@grs+3)^0,f,c
  4119  001F54  C037  F038         	movff	___flmul@grs+2,___flmul@grs+3
  4120  001F58  C036  F037         	movff	___flmul@grs+1,___flmul@grs+2
  4121  001F5C  C035  F036         	movff	___flmul@grs,___flmul@grs+1
  4122  001F60  6A35               	clrf	___flmul@grs^0,c
  4123  001F62  502C               	movf	___flmul@a^0,w,c
  4124  001F64  0228               	mulwf	___flmul@b^0,c
  4125  001F66  CFF3 F03F          	movff	prodl,___flmul@temp
  4126  001F6A  CFF4 F040          	movff	prodh,___flmul@temp+1
  4127  001F6E  503F               	movf	___flmul@temp^0,w,c
  4128  001F70  2635               	addwf	___flmul@grs^0,f,c
  4129  001F72  5040               	movf	(___flmul@temp+1)^0,w,c
  4130  001F74  2236               	addwfc	(___flmul@grs+1)^0,f,c
  4131  001F76  0E00               	movlw	0
  4132  001F78  2237               	addwfc	(___flmul@grs+2)^0,f,c
  4133  001F7A  0E00               	movlw	0
  4134  001F7C  2238               	addwfc	(___flmul@grs+3)^0,f,c
  4135  001F7E  502E               	movf	(___flmul@a+2)^0,w,c
  4136  001F80  0229               	mulwf	(___flmul@b+1)^0,c
  4137  001F82  CFF3 F03F          	movff	prodl,___flmul@temp
  4138  001F86  CFF4 F040          	movff	prodh,___flmul@temp+1
  4139  001F8A  503F               	movf	___flmul@temp^0,w,c
  4140  001F8C  263B               	addwf	___flmul@prod^0,f,c
  4141  001F8E  5040               	movf	(___flmul@temp+1)^0,w,c
  4142  001F90  223C               	addwfc	(___flmul@prod+1)^0,f,c
  4143  001F92  0E00               	movlw	0
  4144  001F94  223D               	addwfc	(___flmul@prod+2)^0,f,c
  4145  001F96  0E00               	movlw	0
  4146  001F98  223E               	addwfc	(___flmul@prod+3)^0,f,c
  4147  001F9A  502D               	movf	(___flmul@a+1)^0,w,c
  4148  001F9C  022A               	mulwf	(___flmul@b+2)^0,c
  4149  001F9E  CFF3 F03F          	movff	prodl,___flmul@temp
  4150  001FA2  CFF4 F040          	movff	prodh,___flmul@temp+1
  4151  001FA6  503F               	movf	___flmul@temp^0,w,c
  4152  001FA8  263B               	addwf	___flmul@prod^0,f,c
  4153  001FAA  5040               	movf	(___flmul@temp+1)^0,w,c
  4154  001FAC  223C               	addwfc	(___flmul@prod+1)^0,f,c
  4155  001FAE  0E00               	movlw	0
  4156  001FB0  223D               	addwfc	(___flmul@prod+2)^0,f,c
  4157  001FB2  0E00               	movlw	0
  4158  001FB4  223E               	addwfc	(___flmul@prod+3)^0,f,c
  4159  001FB6  502E               	movf	(___flmul@a+2)^0,w,c
  4160  001FB8  022A               	mulwf	(___flmul@b+2)^0,c
  4161  001FBA  CFF3 F03F          	movff	prodl,___flmul@temp
  4162  001FBE  CFF4 F040          	movff	prodh,___flmul@temp+1
  4163  001FC2  503F               	movf	___flmul@temp^0,w,c
  4164  001FC4  6E30               	movwf	??___flmul^0,c
  4165  001FC6  5040               	movf	(___flmul@temp+1)^0,w,c
  4166  001FC8  6E31               	movwf	(??___flmul+1)^0,c
  4167  001FCA  6A32               	clrf	(??___flmul+2)^0,c
  4168  001FCC  6A33               	clrf	(??___flmul+3)^0,c
  4169  001FCE  C032  F033         	movff	??___flmul+2,??___flmul+3
  4170  001FD2  C031  F032         	movff	??___flmul+1,??___flmul+2
  4171  001FD6  C030  F031         	movff	??___flmul,??___flmul+1
  4172  001FDA  6A30               	clrf	??___flmul^0,c
  4173  001FDC  5030               	movf	??___flmul^0,w,c
  4174  001FDE  263B               	addwf	___flmul@prod^0,f,c
  4175  001FE0  5031               	movf	(??___flmul+1)^0,w,c
  4176  001FE2  223C               	addwfc	(___flmul@prod+1)^0,f,c
  4177  001FE4  5032               	movf	(??___flmul+2)^0,w,c
  4178  001FE6  223D               	addwfc	(___flmul@prod+2)^0,f,c
  4179  001FE8  5033               	movf	(??___flmul+3)^0,w,c
  4180  001FEA  223E               	addwfc	(___flmul@prod+3)^0,f,c
  4181  001FEC  C035  F030         	movff	___flmul@grs,??___flmul
  4182  001FF0  C036  F031         	movff	___flmul@grs+1,??___flmul+1
  4183  001FF4  C037  F032         	movff	___flmul@grs+2,??___flmul+2
  4184  001FF8  C038  F033         	movff	___flmul@grs+3,??___flmul+3
  4185  001FFC  0E19               	movlw	25
  4186  001FFE  EF06  F010         	goto	u2990
  4187  002002                     u2995:
  4188  002002  90D8               	bcf	status,0,c
  4189  002004  3233               	rrcf	(??___flmul+3)^0,f,c
  4190  002006  3232               	rrcf	(??___flmul+2)^0,f,c
  4191  002008  3231               	rrcf	(??___flmul+1)^0,f,c
  4192  00200A  3230               	rrcf	??___flmul^0,f,c
  4193  00200C                     u2990:
  4194  00200C  2EE8               	decfsz	wreg,f,c
  4195  00200E  EF01  F010         	goto	u2995
  4196  002012  5030               	movf	??___flmul^0,w,c
  4197  002014  263B               	addwf	___flmul@prod^0,f,c
  4198  002016  5031               	movf	(??___flmul+1)^0,w,c
  4199  002018  223C               	addwfc	(___flmul@prod+1)^0,f,c
  4200  00201A  5032               	movf	(??___flmul+2)^0,w,c
  4201  00201C  223D               	addwfc	(___flmul@prod+2)^0,f,c
  4202  00201E  5033               	movf	(??___flmul+3)^0,w,c
  4203  002020  223E               	addwfc	(___flmul@prod+3)^0,f,c
  4204  002022  C037  F038         	movff	___flmul@grs+2,___flmul@grs+3
  4205  002026  C036  F037         	movff	___flmul@grs+1,___flmul@grs+2
  4206  00202A  C035  F036         	movff	___flmul@grs,___flmul@grs+1
  4207  00202E  6A35               	clrf	___flmul@grs^0,c
  4208  002030  5039               	movf	___flmul@aexp^0,w,c
  4209  002032  C03A  F030         	movff	___flmul@bexp,??___flmul
  4210  002036  6A31               	clrf	(??___flmul+1)^0,c
  4211  002038  2630               	addwf	??___flmul^0,f,c
  4212  00203A  0E00               	movlw	0
  4213  00203C  2231               	addwfc	(??___flmul+1)^0,f,c
  4214  00203E  0E82               	movlw	130
  4215  002040  2430               	addwf	??___flmul^0,w,c
  4216  002042  6E3F               	movwf	___flmul@temp^0,c
  4217  002044  0EFF               	movlw	255
  4218  002046  2031               	addwfc	(??___flmul+1)^0,w,c
  4219  002048  6E40               	movwf	(___flmul@temp+1)^0,c
  4220  00204A  EF3C  F010         	goto	l3420
  4221  00204E                     l3414:
  4222  00204E  90D8               	bcf	status,0,c
  4223  002050  363B               	rlcf	___flmul@prod^0,f,c
  4224  002052  363C               	rlcf	(___flmul@prod+1)^0,f,c
  4225  002054  363D               	rlcf	(___flmul@prod+2)^0,f,c
  4226  002056  363E               	rlcf	(___flmul@prod+3)^0,f,c
  4227  002058  AE38               	btfss	(___flmul@grs+3)^0,7,c
  4228  00205A  EF31  F010         	goto	u3001
  4229  00205E  EF33  F010         	goto	u3000
  4230  002062                     u3001:
  4231  002062  EF34  F010         	goto	l1145
  4232  002066                     u3000:
  4233  002066  803B               	bsf	___flmul@prod^0,0,c
  4234  002068                     l1145:
  4235  002068  90D8               	bcf	status,0,c
  4236  00206A  3635               	rlcf	___flmul@grs^0,f,c
  4237  00206C  3636               	rlcf	(___flmul@grs+1)^0,f,c
  4238  00206E  3637               	rlcf	(___flmul@grs+2)^0,f,c
  4239  002070  3638               	rlcf	(___flmul@grs+3)^0,f,c
  4240  002072  063F               	decf	___flmul@temp^0,f,c
  4241  002074  A0D8               	btfss	status,0,c
  4242  002076  0640               	decf	(___flmul@temp+1)^0,f,c
  4243  002078                     l3420:
  4244  002078  AE3D               	btfss	(___flmul@prod+2)^0,7,c
  4245  00207A  EF41  F010         	goto	u3011
  4246  00207E  EF43  F010         	goto	u3010
  4247  002082                     u3011:
  4248  002082  EF27  F010         	goto	l3414
  4249  002086                     u3010:
  4250  002086  0E00               	movlw	0
  4251  002088  6E39               	movwf	___flmul@aexp^0,c
  4252  00208A  AE38               	btfss	(___flmul@grs+3)^0,7,c
  4253  00208C  EF4A  F010         	goto	u3021
  4254  002090  EF4C  F010         	goto	u3020
  4255  002094                     u3021:
  4256  002094  EF70  F010         	goto	l1147
  4257  002098                     u3020:
  4258  002098  0EFF               	movlw	255
  4259  00209A  1435               	andwf	___flmul@grs^0,w,c
  4260  00209C  6E30               	movwf	??___flmul^0,c
  4261  00209E  0EFF               	movlw	255
  4262  0020A0  1436               	andwf	(___flmul@grs+1)^0,w,c
  4263  0020A2  6E31               	movwf	(??___flmul+1)^0,c
  4264  0020A4  0EFF               	movlw	255
  4265  0020A6  1437               	andwf	(___flmul@grs+2)^0,w,c
  4266  0020A8  6E32               	movwf	(??___flmul+2)^0,c
  4267  0020AA  0E7F               	movlw	127
  4268  0020AC  1438               	andwf	(___flmul@grs+3)^0,w,c
  4269  0020AE  6E33               	movwf	(??___flmul+3)^0,c
  4270  0020B0  5030               	movf	??___flmul^0,w,c
  4271  0020B2  1031               	iorwf	(??___flmul+1)^0,w,c
  4272  0020B4  1032               	iorwf	(??___flmul+2)^0,w,c
  4273  0020B6  1033               	iorwf	(??___flmul+3)^0,w,c
  4274  0020B8  B4D8               	btfsc	status,2,c
  4275  0020BA  EF61  F010         	goto	u3031
  4276  0020BE  EF63  F010         	goto	u3030
  4277  0020C2                     u3031:
  4278  0020C2  EF67  F010         	goto	l1148
  4279  0020C6                     u3030:
  4280  0020C6                     l3428:
  4281  0020C6  0E01               	movlw	1
  4282  0020C8  6E39               	movwf	___flmul@aexp^0,c
  4283  0020CA  EF70  F010         	goto	l1147
  4284  0020CE                     l1148:
  4285  0020CE  A03B               	btfss	___flmul@prod^0,0,c
  4286  0020D0  EF6C  F010         	goto	u3041
  4287  0020D4  EF6E  F010         	goto	u3040
  4288  0020D8                     u3041:
  4289  0020D8  EF70  F010         	goto	l1147
  4290  0020DC                     u3040:
  4291  0020DC  EF63  F010         	goto	l3428
  4292  0020E0                     l1147:
  4293  0020E0  5039               	movf	___flmul@aexp^0,w,c
  4294  0020E2  B4D8               	btfsc	status,2,c
  4295  0020E4  EF76  F010         	goto	u3051
  4296  0020E8  EF78  F010         	goto	u3050
  4297  0020EC                     u3051:
  4298  0020EC  EF9C  F010         	goto	l3440
  4299  0020F0                     u3050:
  4300  0020F0  0E01               	movlw	1
  4301  0020F2  263B               	addwf	___flmul@prod^0,f,c
  4302  0020F4  0E00               	movlw	0
  4303  0020F6  223C               	addwfc	(___flmul@prod+1)^0,f,c
  4304  0020F8  223D               	addwfc	(___flmul@prod+2)^0,f,c
  4305  0020FA  223E               	addwfc	(___flmul@prod+3)^0,f,c
  4306  0020FC  A03E               	btfss	(___flmul@prod+3)^0,0,c
  4307  0020FE  EF83  F010         	goto	u3061
  4308  002102  EF85  F010         	goto	u3060
  4309  002106                     u3061:
  4310  002106  EF9C  F010         	goto	l3440
  4311  00210A                     u3060:
  4312  00210A  C03B  F030         	movff	___flmul@prod,??___flmul
  4313  00210E  C03C  F031         	movff	___flmul@prod+1,??___flmul+1
  4314  002112  C03D  F032         	movff	___flmul@prod+2,??___flmul+2
  4315  002116  C03E  F033         	movff	___flmul@prod+3,??___flmul+3
  4316  00211A  3433               	rlcf	(??___flmul+3)^0,w,c
  4317  00211C  3233               	rrcf	(??___flmul+3)^0,f,c
  4318  00211E  3232               	rrcf	(??___flmul+2)^0,f,c
  4319  002120  3231               	rrcf	(??___flmul+1)^0,f,c
  4320  002122  3230               	rrcf	??___flmul^0,f,c
  4321  002124  C030  F03B         	movff	??___flmul,___flmul@prod
  4322  002128  C031  F03C         	movff	??___flmul+1,___flmul@prod+1
  4323  00212C  C032  F03D         	movff	??___flmul+2,___flmul@prod+2
  4324  002130  C033  F03E         	movff	??___flmul+3,___flmul@prod+3
  4325  002134  4A3F               	infsnz	___flmul@temp^0,f,c
  4326  002136  2A40               	incf	(___flmul@temp+1)^0,f,c
  4327  002138                     l3440:
  4328  002138  BE40               	btfsc	(___flmul@temp+1)^0,7,c
  4329  00213A  EFA7  F010         	goto	u3071
  4330  00213E  5040               	movf	(___flmul@temp+1)^0,w,c
  4331  002140  E108               	bnz	u3070
  4332  002142  283F               	incf	___flmul@temp^0,w,c
  4333  002144  A0D8               	btfss	status,0,c
  4334  002146  EFA7  F010         	goto	u3071
  4335  00214A  EFA9  F010         	goto	u3070
  4336  00214E                     u3071:
  4337  00214E  EFB3  F010         	goto	l3444
  4338  002152                     u3070:
  4339  002152  0E00               	movlw	0
  4340  002154  6E3B               	movwf	___flmul@prod^0,c
  4341  002156  0E00               	movlw	0
  4342  002158  6E3C               	movwf	(___flmul@prod+1)^0,c
  4343  00215A  0E80               	movlw	128
  4344  00215C  6E3D               	movwf	(___flmul@prod+2)^0,c
  4345  00215E  0E7F               	movlw	127
  4346  002160  6E3E               	movwf	(___flmul@prod+3)^0,c
  4347  002162  EFE1  F010         	goto	l3456
  4348  002166                     l3444:
  4349  002166  BE40               	btfsc	(___flmul@temp+1)^0,7,c
  4350  002168  EFC0  F010         	goto	u3080
  4351  00216C  5040               	movf	(___flmul@temp+1)^0,w,c
  4352  00216E  E106               	bnz	u3081
  4353  002170  043F               	decf	___flmul@temp^0,w,c
  4354  002172  B0D8               	btfsc	status,0,c
  4355  002174  EFBE  F010         	goto	u3081
  4356  002178  EFC0  F010         	goto	u3080
  4357  00217C                     u3081:
  4358  00217C  EFCC  F010         	goto	l1155
  4359  002180                     u3080:
  4360  002180  0E00               	movlw	0
  4361  002182  6E3B               	movwf	___flmul@prod^0,c
  4362  002184  0E00               	movlw	0
  4363  002186  6E3C               	movwf	(___flmul@prod+1)^0,c
  4364  002188  0E00               	movlw	0
  4365  00218A  6E3D               	movwf	(___flmul@prod+2)^0,c
  4366  00218C  0E00               	movlw	0
  4367  00218E  6E3E               	movwf	(___flmul@prod+3)^0,c
  4368  002190  0E00               	movlw	0
  4369  002192  6E34               	movwf	___flmul@sign^0,c
  4370  002194  EFE1  F010         	goto	l3456
  4371  002198                     l1155:
  4372  002198  C03F  F03A         	movff	___flmul@temp,___flmul@bexp
  4373  00219C  0EFF               	movlw	255
  4374  00219E  163B               	andwf	___flmul@prod^0,f,c
  4375  0021A0  0EFF               	movlw	255
  4376  0021A2  163C               	andwf	(___flmul@prod+1)^0,f,c
  4377  0021A4  0E7F               	movlw	127
  4378  0021A6  163D               	andwf	(___flmul@prod+2)^0,f,c
  4379  0021A8  0E00               	movlw	0
  4380  0021AA  163E               	andwf	(___flmul@prod+3)^0,f,c
  4381  0021AC  A03A               	btfss	___flmul@bexp^0,0,c
  4382  0021AE  EFDB  F010         	goto	u3091
  4383  0021B2  EFDD  F010         	goto	u3090
  4384  0021B6                     u3091:
  4385  0021B6  EFDE  F010         	goto	l3454
  4386  0021BA                     u3090:
  4387  0021BA  8E3D               	bsf	(___flmul@prod+2)^0,7,c
  4388  0021BC                     l3454:
  4389  0021BC  90D8               	bcf	status,0,c
  4390  0021BE  303A               	rrcf	___flmul@bexp^0,w,c
  4391  0021C0  6E3E               	movwf	(___flmul@prod+3)^0,c
  4392  0021C2                     l3456:
  4393  0021C2  5034               	movf	___flmul@sign^0,w,c
  4394  0021C4  123E               	iorwf	(___flmul@prod+3)^0,f,c
  4395  0021C6  C03B  F028         	movff	___flmul@prod,?___flmul
  4396  0021CA  C03C  F029         	movff	___flmul@prod+1,?___flmul+1
  4397  0021CE  C03D  F02A         	movff	___flmul@prod+2,?___flmul+2
  4398  0021D2  C03E  F02B         	movff	___flmul@prod+3,?___flmul+3
  4399  0021D6                     l1142:
  4400  0021D6  0012               	return		;funcret
  4401  0021D8                     __end_of___flmul:
  4402                           	callstack 0
  4403                           
  4404 ;; *************** function ___flge *****************
  4405 ;; Defined at:
  4406 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\flge.c"
  4407 ;; Parameters:    Size  Location     Type
  4408 ;;  ff1             4    0[COMRAM] unsigned char 
  4409 ;;  ff2             4    4[COMRAM] unsigned char 
  4410 ;; Auto vars:     Size  Location     Type
  4411 ;;		None
  4412 ;; Return value:  Size  Location     Type
  4413 ;;		None               void
  4414 ;; Registers used:
  4415 ;;		wreg, status,2, status,0
  4416 ;; Tracked objects:
  4417 ;;		On entry : 0/0
  4418 ;;		On exit  : 0/0
  4419 ;;		Unchanged: 0/0
  4420 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4421 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4422 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4423 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4424 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4425 ;;Total ram usage:       12 bytes
  4426 ;; Hardware stack levels used: 1
  4427 ;; This function calls:
  4428 ;;		Nothing
  4429 ;; This function is called by:
  4430 ;;		_roundf
  4431 ;; This function uses a non-reentrant model
  4432 ;;
  4433                           
  4434                           	psect	text13
  4435  00348A                     __ptext13:
  4436                           	callstack 0
  4437  00348A                     ___flge:
  4438                           	callstack 27
  4439  00348A  0E00               	movlw	0
  4440  00348C  1401               	andwf	___flge@ff1^0,w,c
  4441  00348E  6E09               	movwf	??___flge^0,c
  4442  003490  0E00               	movlw	0
  4443  003492  1402               	andwf	(___flge@ff1+1)^0,w,c
  4444  003494  6E0A               	movwf	(??___flge+1)^0,c
  4445  003496  0E80               	movlw	128
  4446  003498  1403               	andwf	(___flge@ff1+2)^0,w,c
  4447  00349A  6E0B               	movwf	(??___flge+2)^0,c
  4448  00349C  0E7F               	movlw	127
  4449  00349E  1404               	andwf	(___flge@ff1+3)^0,w,c
  4450  0034A0  6E0C               	movwf	(??___flge+3)^0,c
  4451  0034A2  5009               	movf	??___flge^0,w,c
  4452  0034A4  100A               	iorwf	(??___flge+1)^0,w,c
  4453  0034A6  100B               	iorwf	(??___flge+2)^0,w,c
  4454  0034A8  100C               	iorwf	(??___flge+3)^0,w,c
  4455  0034AA  A4D8               	btfss	status,2,c
  4456  0034AC  EF5A  F01A         	goto	u3101
  4457  0034B0  EF5C  F01A         	goto	u3100
  4458  0034B4                     u3101:
  4459  0034B4  EF64  F01A         	goto	l3472
  4460  0034B8                     u3100:
  4461  0034B8  0E00               	movlw	0
  4462  0034BA  6E01               	movwf	___flge@ff1^0,c
  4463  0034BC  0E00               	movlw	0
  4464  0034BE  6E02               	movwf	(___flge@ff1+1)^0,c
  4465  0034C0  0E00               	movlw	0
  4466  0034C2  6E03               	movwf	(___flge@ff1+2)^0,c
  4467  0034C4  0E00               	movlw	0
  4468  0034C6  6E04               	movwf	(___flge@ff1+3)^0,c
  4469  0034C8                     l3472:
  4470  0034C8  0E00               	movlw	0
  4471  0034CA  1405               	andwf	___flge@ff2^0,w,c
  4472  0034CC  6E09               	movwf	??___flge^0,c
  4473  0034CE  0E00               	movlw	0
  4474  0034D0  1406               	andwf	(___flge@ff2+1)^0,w,c
  4475  0034D2  6E0A               	movwf	(??___flge+1)^0,c
  4476  0034D4  0E80               	movlw	128
  4477  0034D6  1407               	andwf	(___flge@ff2+2)^0,w,c
  4478  0034D8  6E0B               	movwf	(??___flge+2)^0,c
  4479  0034DA  0E7F               	movlw	127
  4480  0034DC  1408               	andwf	(___flge@ff2+3)^0,w,c
  4481  0034DE  6E0C               	movwf	(??___flge+3)^0,c
  4482  0034E0  5009               	movf	??___flge^0,w,c
  4483  0034E2  100A               	iorwf	(??___flge+1)^0,w,c
  4484  0034E4  100B               	iorwf	(??___flge+2)^0,w,c
  4485  0034E6  100C               	iorwf	(??___flge+3)^0,w,c
  4486  0034E8  A4D8               	btfss	status,2,c
  4487  0034EA  EF79  F01A         	goto	u3111
  4488  0034EE  EF7B  F01A         	goto	u3110
  4489  0034F2                     u3111:
  4490  0034F2  EF83  F01A         	goto	l3476
  4491  0034F6                     u3110:
  4492  0034F6  0E00               	movlw	0
  4493  0034F8  6E05               	movwf	___flge@ff2^0,c
  4494  0034FA  0E00               	movlw	0
  4495  0034FC  6E06               	movwf	(___flge@ff2+1)^0,c
  4496  0034FE  0E00               	movlw	0
  4497  003500  6E07               	movwf	(___flge@ff2+2)^0,c
  4498  003502  0E00               	movlw	0
  4499  003504  6E08               	movwf	(___flge@ff2+3)^0,c
  4500  003506                     l3476:
  4501  003506  AE04               	btfss	(___flge@ff1+3)^0,7,c
  4502  003508  EF88  F01A         	goto	u3121
  4503  00350C  EF8A  F01A         	goto	u3120
  4504  003510                     u3121:
  4505  003510  EF93  F01A         	goto	l3480
  4506  003514                     u3120:
  4507  003514  6C01               	negf	___flge@ff1^0,c
  4508  003516  1E02               	comf	(___flge@ff1+1)^0,f,c
  4509  003518  B0D8               	btfsc	status,0,c
  4510  00351A  2A02               	incf	(___flge@ff1+1)^0,f,c
  4511  00351C  1E03               	comf	(___flge@ff1+2)^0,f,c
  4512  00351E  B0D8               	btfsc	status,0,c
  4513  003520  2A03               	incf	(___flge@ff1+2)^0,f,c
  4514  003522  0E80               	movlw	128
  4515  003524  5604               	subfwb	(___flge@ff1+3)^0,f,c
  4516  003526                     l3480:
  4517  003526  AE08               	btfss	(___flge@ff2+3)^0,7,c
  4518  003528  EF98  F01A         	goto	u3131
  4519  00352C  EF9A  F01A         	goto	u3130
  4520  003530                     u3131:
  4521  003530  EFA3  F01A         	goto	l789
  4522  003534                     u3130:
  4523  003534  6C05               	negf	___flge@ff2^0,c
  4524  003536  1E06               	comf	(___flge@ff2+1)^0,f,c
  4525  003538  B0D8               	btfsc	status,0,c
  4526  00353A  2A06               	incf	(___flge@ff2+1)^0,f,c
  4527  00353C  1E07               	comf	(___flge@ff2+2)^0,f,c
  4528  00353E  B0D8               	btfsc	status,0,c
  4529  003540  2A07               	incf	(___flge@ff2+2)^0,f,c
  4530  003542  0E80               	movlw	128
  4531  003544  5608               	subfwb	(___flge@ff2+3)^0,f,c
  4532  003546                     l789:
  4533  003546  0E00               	movlw	0
  4534  003548  1A01               	xorwf	___flge@ff1^0,f,c
  4535  00354A  0E00               	movlw	0
  4536  00354C  1A02               	xorwf	(___flge@ff1+1)^0,f,c
  4537  00354E  0E00               	movlw	0
  4538  003550  1A03               	xorwf	(___flge@ff1+2)^0,f,c
  4539  003552  0E80               	movlw	128
  4540  003554  1A04               	xorwf	(___flge@ff1+3)^0,f,c
  4541  003556  0E00               	movlw	0
  4542  003558  1A05               	xorwf	___flge@ff2^0,f,c
  4543  00355A  0E00               	movlw	0
  4544  00355C  1A06               	xorwf	(___flge@ff2+1)^0,f,c
  4545  00355E  0E00               	movlw	0
  4546  003560  1A07               	xorwf	(___flge@ff2+2)^0,f,c
  4547  003562  0E80               	movlw	128
  4548  003564  1A08               	xorwf	(___flge@ff2+3)^0,f,c
  4549  003566  5005               	movf	___flge@ff2^0,w,c
  4550  003568  5C01               	subwf	___flge@ff1^0,w,c
  4551  00356A  5006               	movf	(___flge@ff2+1)^0,w,c
  4552  00356C  5802               	subwfb	(___flge@ff1+1)^0,w,c
  4553  00356E  5007               	movf	(___flge@ff2+2)^0,w,c
  4554  003570  5803               	subwfb	(___flge@ff1+2)^0,w,c
  4555  003572  5008               	movf	(___flge@ff2+3)^0,w,c
  4556  003574  5804               	subwfb	(___flge@ff1+3)^0,w,c
  4557  003576  B0D8               	btfsc	status,0,c
  4558  003578  EFC0  F01A         	goto	u3141
  4559  00357C  EFC2  F01A         	goto	u3140
  4560  003580                     u3141:
  4561  003580  EFC5  F01A         	goto	l3486
  4562  003584                     u3140:
  4563  003584  90D8               	bcf	status,0,c
  4564  003586  EFC6  F01A         	goto	l794
  4565  00358A                     l3486:
  4566  00358A  80D8               	bsf	status,0,c
  4567  00358C                     l794:
  4568  00358C  0012               	return		;funcret
  4569  00358E                     __end_of___flge:
  4570                           	callstack 0
  4571                           
  4572 ;; *************** function ___fltol *****************
  4573 ;; Defined at:
  4574 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\fltol.c"
  4575 ;; Parameters:    Size  Location     Type
  4576 ;;  f1              4   90[COMRAM] unsigned char 
  4577 ;; Auto vars:     Size  Location     Type
  4578 ;;  exp1            1    5[BANK0 ] unsigned char 
  4579 ;;  sign1           1    4[BANK0 ] unsigned char 
  4580 ;; Return value:  Size  Location     Type
  4581 ;;                  4   90[COMRAM] long 
  4582 ;; Registers used:
  4583 ;;		wreg, status,2, status,0
  4584 ;; Tracked objects:
  4585 ;;		On entry : 0/0
  4586 ;;		On exit  : 0/0
  4587 ;;		Unchanged: 0/0
  4588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4589 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4590 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4591 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4592 ;;      Totals:         4       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4593 ;;Total ram usage:       10 bytes
  4594 ;; Hardware stack levels used: 1
  4595 ;; This function calls:
  4596 ;;		Nothing
  4597 ;; This function is called by:
  4598 ;;		_lroundf
  4599 ;; This function uses a non-reentrant model
  4600 ;;
  4601                           
  4602                           	psect	text14
  4603  003382                     __ptext14:
  4604                           	callstack 0
  4605  003382                     ___fltol:
  4606                           	callstack 28
  4607  003382  345D               	rlcf	(___fltol@f1+2)^0,w,c
  4608  003384  345E               	rlcf	(___fltol@f1+3)^0,w,c
  4609  003386  0100               	movlb	0	; () banked
  4610  003388  6F65               	movwf	___fltol@exp1& (0+255),b
  4611  00338A  5165               	movf	___fltol@exp1& (0+255),w,b
  4612  00338C  A4D8               	btfss	status,2,c
  4613  00338E  EFCB  F019         	goto	u3221
  4614  003392  EFCD  F019         	goto	u3220
  4615  003396                     u3221:
  4616  003396  EFD7  F019         	goto	l3584
  4617  00339A                     u3220:
  4618  00339A                     l3580:
  4619                           
  4620                           ; BSR set to: 0
  4621  00339A  0E00               	movlw	0
  4622  00339C  6E5B               	movwf	?___fltol^0,c
  4623  00339E  0E00               	movlw	0
  4624  0033A0  6E5C               	movwf	(?___fltol+1)^0,c
  4625  0033A2  0E00               	movlw	0
  4626  0033A4  6E5D               	movwf	(?___fltol+2)^0,c
  4627  0033A6  0E00               	movlw	0
  4628  0033A8  6E5E               	movwf	(?___fltol+3)^0,c
  4629  0033AA  EF44  F01A         	goto	l821
  4630  0033AE                     l3584:
  4631                           
  4632                           ; BSR set to: 0
  4633  0033AE  C05B  F060         	movff	___fltol@f1,??___fltol
  4634  0033B2  C05C  F061         	movff	___fltol@f1+1,??___fltol+1
  4635  0033B6  C05D  F062         	movff	___fltol@f1+2,??___fltol+2
  4636  0033BA  C05E  F063         	movff	___fltol@f1+3,??___fltol+3
  4637  0033BE  0E20               	movlw	32
  4638  0033C0  EFE7  F019         	goto	u3230
  4639  0033C4                     u3235:
  4640  0033C4  90D8               	bcf	status,0,c
  4641  0033C6  3363               	rrcf	(??___fltol+3)& (0+255),f,b
  4642  0033C8  3362               	rrcf	(??___fltol+2)& (0+255),f,b
  4643  0033CA  3361               	rrcf	(??___fltol+1)& (0+255),f,b
  4644  0033CC  3360               	rrcf	??___fltol& (0+255),f,b
  4645  0033CE                     u3230:
  4646  0033CE  2EE8               	decfsz	wreg,f,c
  4647  0033D0  EFE2  F019         	goto	u3235
  4648  0033D4  5160               	movf	??___fltol& (0+255),w,b
  4649  0033D6  6F64               	movwf	___fltol@sign1& (0+255),b
  4650  0033D8                     
  4651                           ; BSR set to: 0
  4652  0033D8  8E5D               	bsf	(___fltol@f1+2)^0,7,c
  4653  0033DA                     
  4654                           ; BSR set to: 0
  4655  0033DA  0EFF               	movlw	255
  4656  0033DC  165B               	andwf	___fltol@f1^0,f,c
  4657  0033DE  0EFF               	movlw	255
  4658  0033E0  165C               	andwf	(___fltol@f1+1)^0,f,c
  4659  0033E2  0EFF               	movlw	255
  4660  0033E4  165D               	andwf	(___fltol@f1+2)^0,f,c
  4661  0033E6  0E00               	movlw	0
  4662  0033E8  165E               	andwf	(___fltol@f1+3)^0,f,c
  4663  0033EA                     
  4664                           ; BSR set to: 0
  4665  0033EA  0E96               	movlw	150
  4666  0033EC  5F65               	subwf	___fltol@exp1& (0+255),f,b
  4667  0033EE                     
  4668                           ; BSR set to: 0
  4669  0033EE  BF65               	btfsc	___fltol@exp1& (0+255),7,b
  4670  0033F0  EFFE  F019         	goto	u3240
  4671  0033F4  EFFC  F019         	goto	u3241
  4672  0033F8                     u3241:
  4673  0033F8  EF14  F01A         	goto	l3604
  4674  0033FC                     u3240:
  4675  0033FC                     
  4676                           ; BSR set to: 0
  4677  0033FC  5165               	movf	___fltol@exp1& (0+255),w,b
  4678  0033FE  0A80               	xorlw	128
  4679  003400  0F97               	addlw	151
  4680  003402  B0D8               	btfsc	status,0,c
  4681  003404  EF06  F01A         	goto	u3251
  4682  003408  EF08  F01A         	goto	u3250
  4683  00340C                     u3251:
  4684  00340C  EF0A  F01A         	goto	l3600
  4685  003410                     u3250:
  4686  003410  EFCD  F019         	goto	l3580
  4687  003414                     l3600:
  4688                           
  4689                           ; BSR set to: 0
  4690  003414  90D8               	bcf	status,0,c
  4691  003416  325E               	rrcf	(___fltol@f1+3)^0,f,c
  4692  003418  325D               	rrcf	(___fltol@f1+2)^0,f,c
  4693  00341A  325C               	rrcf	(___fltol@f1+1)^0,f,c
  4694  00341C  325B               	rrcf	___fltol@f1^0,f,c
  4695  00341E                     
  4696                           ; BSR set to: 0
  4697  00341E  3F65               	incfsz	___fltol@exp1& (0+255),f,b
  4698  003420  EF0A  F01A         	goto	l3600
  4699  003424  EF2C  F01A         	goto	l3614
  4700  003428                     l3604:
  4701                           
  4702                           ; BSR set to: 0
  4703  003428  0E1F               	movlw	31
  4704  00342A  6565               	cpfsgt	___fltol@exp1& (0+255),b
  4705  00342C  EF1A  F01A         	goto	u3261
  4706  003430  EF1C  F01A         	goto	u3260
  4707  003434                     u3261:
  4708  003434  EF24  F01A         	goto	l3612
  4709  003438                     u3260:
  4710  003438  EFCD  F019         	goto	l3580
  4711  00343C                     l3610:
  4712                           
  4713                           ; BSR set to: 0
  4714  00343C  90D8               	bcf	status,0,c
  4715  00343E  365B               	rlcf	___fltol@f1^0,f,c
  4716  003440  365C               	rlcf	(___fltol@f1+1)^0,f,c
  4717  003442  365D               	rlcf	(___fltol@f1+2)^0,f,c
  4718  003444  365E               	rlcf	(___fltol@f1+3)^0,f,c
  4719  003446  0765               	decf	___fltol@exp1& (0+255),f,b
  4720  003448                     l3612:
  4721                           
  4722                           ; BSR set to: 0
  4723  003448  5165               	movf	___fltol@exp1& (0+255),w,b
  4724  00344A  A4D8               	btfss	status,2,c
  4725  00344C  EF2A  F01A         	goto	u3271
  4726  003450  EF2C  F01A         	goto	u3270
  4727  003454                     u3271:
  4728  003454  EF1E  F01A         	goto	l3610
  4729  003458                     u3270:
  4730  003458                     l3614:
  4731                           
  4732                           ; BSR set to: 0
  4733  003458  5164               	movf	___fltol@sign1& (0+255),w,b
  4734  00345A  B4D8               	btfsc	status,2,c
  4735  00345C  EF32  F01A         	goto	u3281
  4736  003460  EF34  F01A         	goto	u3280
  4737  003464                     u3281:
  4738  003464  EF3C  F01A         	goto	l3618
  4739  003468                     u3280:
  4740  003468                     
  4741                           ; BSR set to: 0
  4742  003468  1E5E               	comf	(___fltol@f1+3)^0,f,c
  4743  00346A  1E5D               	comf	(___fltol@f1+2)^0,f,c
  4744  00346C  1E5C               	comf	(___fltol@f1+1)^0,f,c
  4745  00346E  6C5B               	negf	___fltol@f1^0,c
  4746  003470  0E00               	movlw	0
  4747  003472  225C               	addwfc	(___fltol@f1+1)^0,f,c
  4748  003474  225D               	addwfc	(___fltol@f1+2)^0,f,c
  4749  003476  225E               	addwfc	(___fltol@f1+3)^0,f,c
  4750  003478                     l3618:
  4751                           
  4752                           ; BSR set to: 0
  4753  003478  C05B  F05B         	movff	___fltol@f1,?___fltol
  4754  00347C  C05C  F05C         	movff	___fltol@f1+1,?___fltol+1
  4755  003480  C05D  F05D         	movff	___fltol@f1+2,?___fltol+2
  4756  003484  C05E  F05E         	movff	___fltol@f1+3,?___fltol+3
  4757  003488                     l821:
  4758                           
  4759                           ; BSR set to: 0
  4760  003488  0012               	return		;funcret
  4761  00348A                     __end_of___fltol:
  4762                           	callstack 0
  4763                           
  4764 ;; *************** function _compare *****************
  4765 ;; Defined at:
  4766 ;;		line 237 in file "color.c"
  4767 ;; Parameters:    Size  Location     Type
  4768 ;;  lower           2   10[BANK0 ] unsigned int 
  4769 ;;  value2compar    2   12[BANK0 ] unsigned int 
  4770 ;;  upper           2   14[BANK0 ] unsigned int 
  4771 ;; Auto vars:     Size  Location     Type
  4772 ;;  result          1   94[COMRAM] unsigned char 
  4773 ;; Return value:  Size  Location     Type
  4774 ;;                  1    wreg      unsigned char 
  4775 ;; Registers used:
  4776 ;;		wreg, status,2, status,0
  4777 ;; Tracked objects:
  4778 ;;		On entry : 0/0
  4779 ;;		On exit  : 0/0
  4780 ;;		Unchanged: 0/0
  4781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4782 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4783 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4784 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4785 ;;      Totals:         1       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4786 ;;Total ram usage:        7 bytes
  4787 ;; Hardware stack levels used: 1
  4788 ;; This function calls:
  4789 ;;		Nothing
  4790 ;; This function is called by:
  4791 ;;		_detect_color
  4792 ;; This function uses a non-reentrant model
  4793 ;;
  4794                           
  4795                           	psect	text15
  4796  003E20                     __ptext15:
  4797                           	callstack 0
  4798  003E20                     _compare:
  4799                           	callstack 29
  4800  003E20                     
  4801                           ;color.c: 237: unsigned char compare(unsigned int lower, unsigned int value2compare, uns
      +                          igned int upper);color.c: 238: {;color.c: 239:     unsigned char result = 0;
  4802  003E20  0E00               	movlw	0
  4803  003E22  6E5F               	movwf	compare@result^0,c
  4804  003E24                     
  4805                           ;color.c: 240:     if (lower < value2compare && value2compare <= upper){result = 1;}
  4806  003E24  0100               	movlb	0	; () banked
  4807  003E26  516C               	movf	compare@value2compare& (0+255),w,b
  4808  003E28  5D6A               	subwf	compare@lower& (0+255),w,b
  4809  003E2A  516D               	movf	(compare@value2compare+1)& (0+255),w,b
  4810  003E2C  596B               	subwfb	(compare@lower+1)& (0+255),w,b
  4811  003E2E  B0D8               	btfsc	status,0,c
  4812  003E30  EF1C  F01F         	goto	u3401
  4813  003E34  EF1E  F01F         	goto	u3400
  4814  003E38                     u3401:
  4815  003E38  EF2B  F01F         	goto	l119
  4816  003E3C                     u3400:
  4817  003E3C                     
  4818                           ; BSR set to: 0
  4819  003E3C  516C               	movf	compare@value2compare& (0+255),w,b
  4820  003E3E  5D6E               	subwf	compare@upper& (0+255),w,b
  4821  003E40  516D               	movf	(compare@value2compare+1)& (0+255),w,b
  4822  003E42  596F               	subwfb	(compare@upper+1)& (0+255),w,b
  4823  003E44  A0D8               	btfss	status,0,c
  4824  003E46  EF27  F01F         	goto	u3411
  4825  003E4A  EF29  F01F         	goto	u3410
  4826  003E4E                     u3411:
  4827  003E4E  EF2B  F01F         	goto	l119
  4828  003E52                     u3410:
  4829  003E52                     
  4830                           ; BSR set to: 0
  4831  003E52  0E01               	movlw	1
  4832  003E54  6E5F               	movwf	compare@result^0,c
  4833  003E56                     l119:
  4834                           
  4835                           ; BSR set to: 0
  4836                           ;color.c: 241:     return result;
  4837  003E56  505F               	movf	compare@result^0,w,c
  4838  003E58                     
  4839                           ; BSR set to: 0
  4840  003E58  0012               	return		;funcret
  4841  003E5A                     __end_of_compare:
  4842                           	callstack 0
  4843                           
  4844 ;; *************** function ___xxtofl *****************
  4845 ;; Defined at:
  4846 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\xxtofl.c"
  4847 ;; Parameters:    Size  Location     Type
  4848 ;;  sign            1    wreg     unsigned char 
  4849 ;;  val             4    0[COMRAM] long 
  4850 ;; Auto vars:     Size  Location     Type
  4851 ;;  sign            1    8[COMRAM] unsigned char 
  4852 ;;  arg             4   10[COMRAM] unsigned long 
  4853 ;;  exp             1    9[COMRAM] unsigned char 
  4854 ;; Return value:  Size  Location     Type
  4855 ;;                  4    0[COMRAM] unsigned char 
  4856 ;; Registers used:
  4857 ;;		wreg, status,2, status,0
  4858 ;; Tracked objects:
  4859 ;;		On entry : 0/0
  4860 ;;		On exit  : 0/0
  4861 ;;		Unchanged: 0/0
  4862 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4863 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4864 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4865 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4866 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4867 ;;Total ram usage:       14 bytes
  4868 ;; Hardware stack levels used: 1
  4869 ;; This function calls:
  4870 ;;		Nothing
  4871 ;; This function is called by:
  4872 ;;		_detect_color
  4873 ;;		_check_color_reading
  4874 ;; This function uses a non-reentrant model
  4875 ;;
  4876                           
  4877                           	psect	text16
  4878  002C04                     __ptext16:
  4879                           	callstack 0
  4880  002C04                     ___xxtofl:
  4881                           	callstack 29
  4882                           
  4883                           ; BSR set to: 0
  4884                           ;incstack = 0
  4885                           ;___xxtofl@sign stored from wreg
  4886  002C04  6E09               	movwf	___xxtofl@sign^0,c
  4887  002C06  5009               	movf	___xxtofl@sign^0,w,c
  4888  002C08  B4D8               	btfsc	status,2,c
  4889  002C0A  EF09  F016         	goto	u3671
  4890  002C0E  EF0B  F016         	goto	u3670
  4891  002C12                     u3671:
  4892  002C12  EF2D  F016         	goto	l1179
  4893  002C16                     u3670:
  4894  002C16  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  4895  002C18  EF12  F016         	goto	u3680
  4896  002C1C  EF10  F016         	goto	u3681
  4897  002C20                     u3681:
  4898  002C20  EF2D  F016         	goto	l1179
  4899  002C24                     u3680:
  4900  002C24  C001  F005         	movff	___xxtofl@val,??___xxtofl
  4901  002C28  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
  4902  002C2C  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
  4903  002C30  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
  4904  002C34  1E05               	comf	??___xxtofl^0,f,c
  4905  002C36  1E06               	comf	(??___xxtofl+1)^0,f,c
  4906  002C38  1E07               	comf	(??___xxtofl+2)^0,f,c
  4907  002C3A  1E08               	comf	(??___xxtofl+3)^0,f,c
  4908  002C3C  2A05               	incf	??___xxtofl^0,f,c
  4909  002C3E  0E00               	movlw	0
  4910  002C40  2206               	addwfc	(??___xxtofl+1)^0,f,c
  4911  002C42  2207               	addwfc	(??___xxtofl+2)^0,f,c
  4912  002C44  2208               	addwfc	(??___xxtofl+3)^0,f,c
  4913  002C46  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
  4914  002C4A  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
  4915  002C4E  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
  4916  002C52  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
  4917  002C56  EF35  F016         	goto	l3886
  4918  002C5A                     l1179:
  4919  002C5A  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
  4920  002C5E  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  4921  002C62  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  4922  002C66  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  4923  002C6A                     l3886:
  4924  002C6A  5001               	movf	___xxtofl@val^0,w,c
  4925  002C6C  1002               	iorwf	(___xxtofl@val+1)^0,w,c
  4926  002C6E  1003               	iorwf	(___xxtofl@val+2)^0,w,c
  4927  002C70  1004               	iorwf	(___xxtofl@val+3)^0,w,c
  4928  002C72  A4D8               	btfss	status,2,c
  4929  002C74  EF3E  F016         	goto	u3691
  4930  002C78  EF40  F016         	goto	u3690
  4931  002C7C                     u3691:
  4932  002C7C  EF4A  F016         	goto	l3892
  4933  002C80                     u3690:
  4934  002C80  0E00               	movlw	0
  4935  002C82  6E01               	movwf	?___xxtofl^0,c
  4936  002C84  0E00               	movlw	0
  4937  002C86  6E02               	movwf	(?___xxtofl+1)^0,c
  4938  002C88  0E00               	movlw	0
  4939  002C8A  6E03               	movwf	(?___xxtofl+2)^0,c
  4940  002C8C  0E00               	movlw	0
  4941  002C8E  6E04               	movwf	(?___xxtofl+3)^0,c
  4942  002C90  EFDB  F016         	goto	l1182
  4943  002C94                     l3892:
  4944  002C94  0E96               	movlw	150
  4945  002C96  6E0A               	movwf	___xxtofl@exp^0,c
  4946  002C98  EF54  F016         	goto	l3896
  4947  002C9C                     l3894:
  4948  002C9C  2A0A               	incf	___xxtofl@exp^0,f,c
  4949  002C9E  90D8               	bcf	status,0,c
  4950  002CA0  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  4951  002CA2  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  4952  002CA4  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  4953  002CA6  320B               	rrcf	___xxtofl@arg^0,f,c
  4954  002CA8                     l3896:
  4955  002CA8  0E00               	movlw	0
  4956  002CAA  140B               	andwf	___xxtofl@arg^0,w,c
  4957  002CAC  6E05               	movwf	??___xxtofl^0,c
  4958  002CAE  0E00               	movlw	0
  4959  002CB0  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  4960  002CB2  6E06               	movwf	(??___xxtofl+1)^0,c
  4961  002CB4  0E00               	movlw	0
  4962  002CB6  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  4963  002CB8  6E07               	movwf	(??___xxtofl+2)^0,c
  4964  002CBA  0EFE               	movlw	254
  4965  002CBC  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  4966  002CBE  6E08               	movwf	(??___xxtofl+3)^0,c
  4967  002CC0  5005               	movf	??___xxtofl^0,w,c
  4968  002CC2  1006               	iorwf	(??___xxtofl+1)^0,w,c
  4969  002CC4  1007               	iorwf	(??___xxtofl+2)^0,w,c
  4970  002CC6  1008               	iorwf	(??___xxtofl+3)^0,w,c
  4971  002CC8  A4D8               	btfss	status,2,c
  4972  002CCA  EF69  F016         	goto	u3701
  4973  002CCE  EF6B  F016         	goto	u3700
  4974  002CD2                     u3701:
  4975  002CD2  EF4E  F016         	goto	l3894
  4976  002CD6                     u3700:
  4977  002CD6  EF79  F016         	goto	l1186
  4978  002CDA                     l3898:
  4979  002CDA  2A0A               	incf	___xxtofl@exp^0,f,c
  4980  002CDC  0E01               	movlw	1
  4981  002CDE  260B               	addwf	___xxtofl@arg^0,f,c
  4982  002CE0  0E00               	movlw	0
  4983  002CE2  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
  4984  002CE4  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
  4985  002CE6  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
  4986  002CE8  90D8               	bcf	status,0,c
  4987  002CEA  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  4988  002CEC  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  4989  002CEE  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  4990  002CF0  320B               	rrcf	___xxtofl@arg^0,f,c
  4991  002CF2                     l1186:
  4992  002CF2  0E00               	movlw	0
  4993  002CF4  140B               	andwf	___xxtofl@arg^0,w,c
  4994  002CF6  6E05               	movwf	??___xxtofl^0,c
  4995  002CF8  0E00               	movlw	0
  4996  002CFA  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  4997  002CFC  6E06               	movwf	(??___xxtofl+1)^0,c
  4998  002CFE  0E00               	movlw	0
  4999  002D00  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  5000  002D02  6E07               	movwf	(??___xxtofl+2)^0,c
  5001  002D04  0EFF               	movlw	255
  5002  002D06  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  5003  002D08  6E08               	movwf	(??___xxtofl+3)^0,c
  5004  002D0A  5005               	movf	??___xxtofl^0,w,c
  5005  002D0C  1006               	iorwf	(??___xxtofl+1)^0,w,c
  5006  002D0E  1007               	iorwf	(??___xxtofl+2)^0,w,c
  5007  002D10  1008               	iorwf	(??___xxtofl+3)^0,w,c
  5008  002D12  A4D8               	btfss	status,2,c
  5009  002D14  EF8E  F016         	goto	u3711
  5010  002D18  EF90  F016         	goto	u3710
  5011  002D1C                     u3711:
  5012  002D1C  EF6D  F016         	goto	l3898
  5013  002D20                     u3710:
  5014  002D20  EF98  F016         	goto	l3906
  5015  002D24                     l3904:
  5016  002D24  060A               	decf	___xxtofl@exp^0,f,c
  5017  002D26  90D8               	bcf	status,0,c
  5018  002D28  360B               	rlcf	___xxtofl@arg^0,f,c
  5019  002D2A  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
  5020  002D2C  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
  5021  002D2E  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
  5022  002D30                     l3906:
  5023  002D30  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
  5024  002D32  EF9D  F016         	goto	u3721
  5025  002D36  EF9F  F016         	goto	u3720
  5026  002D3A                     u3721:
  5027  002D3A  EFA7  F016         	goto	l1193
  5028  002D3E                     u3720:
  5029  002D3E  0E02               	movlw	2
  5030  002D40  600A               	cpfslt	___xxtofl@exp^0,c
  5031  002D42  EFA5  F016         	goto	u3731
  5032  002D46  EFA7  F016         	goto	u3730
  5033  002D4A                     u3731:
  5034  002D4A  EF92  F016         	goto	l3904
  5035  002D4E                     u3730:
  5036  002D4E                     l1193:
  5037  002D4E  B00A               	btfsc	___xxtofl@exp^0,0,c
  5038  002D50  EFAC  F016         	goto	u3741
  5039  002D54  EFAE  F016         	goto	u3740
  5040  002D58                     u3741:
  5041  002D58  EFAF  F016         	goto	l3912
  5042  002D5C                     u3740:
  5043  002D5C  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
  5044  002D5E                     l3912:
  5045  002D5E  90D8               	bcf	status,0,c
  5046  002D60  320A               	rrcf	___xxtofl@exp^0,f,c
  5047  002D62  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
  5048  002D66  6A06               	clrf	(??___xxtofl+1)^0,c
  5049  002D68  6A07               	clrf	(??___xxtofl+2)^0,c
  5050  002D6A  6A08               	clrf	(??___xxtofl+3)^0,c
  5051  002D6C  C005  F008         	movff	??___xxtofl,??___xxtofl+3
  5052  002D70  6A07               	clrf	(??___xxtofl+2)^0,c
  5053  002D72  6A06               	clrf	(??___xxtofl+1)^0,c
  5054  002D74  6A05               	clrf	??___xxtofl^0,c
  5055  002D76  5005               	movf	??___xxtofl^0,w,c
  5056  002D78  120B               	iorwf	___xxtofl@arg^0,f,c
  5057  002D7A  5006               	movf	(??___xxtofl+1)^0,w,c
  5058  002D7C  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
  5059  002D7E  5007               	movf	(??___xxtofl+2)^0,w,c
  5060  002D80  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
  5061  002D82  5008               	movf	(??___xxtofl+3)^0,w,c
  5062  002D84  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
  5063  002D86  5009               	movf	___xxtofl@sign^0,w,c
  5064  002D88  B4D8               	btfsc	status,2,c
  5065  002D8A  EFC9  F016         	goto	u3751
  5066  002D8E  EFCB  F016         	goto	u3750
  5067  002D92                     u3751:
  5068  002D92  EFD3  F016         	goto	l3922
  5069  002D96                     u3750:
  5070  002D96  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  5071  002D98  EFD2  F016         	goto	u3760
  5072  002D9C  EFD0  F016         	goto	u3761
  5073  002DA0                     u3761:
  5074  002DA0  EFD3  F016         	goto	l3922
  5075  002DA4                     u3760:
  5076  002DA4  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
  5077  002DA6                     l3922:
  5078  002DA6  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
  5079  002DAA  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
  5080  002DAE  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
  5081  002DB2  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
  5082  002DB6                     l1182:
  5083  002DB6  0012               	return		;funcret
  5084  002DB8                     __end_of___xxtofl:
  5085                           	callstack 0
  5086                           
  5087 ;; *************** function ___fldiv *****************
  5088 ;; Defined at:
  5089 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\sprcdiv.c"
  5090 ;; Parameters:    Size  Location     Type
  5091 ;;  b               4   14[COMRAM] unsigned char 
  5092 ;;  a               4   18[COMRAM] unsigned char 
  5093 ;; Auto vars:     Size  Location     Type
  5094 ;;  grs             4   33[COMRAM] unsigned long 
  5095 ;;  rem             4   26[COMRAM] unsigned long 
  5096 ;;  new_exp         2   31[COMRAM] short 
  5097 ;;  aexp            1   38[COMRAM] unsigned char 
  5098 ;;  bexp            1   37[COMRAM] unsigned char 
  5099 ;;  sign            1   30[COMRAM] unsigned char 
  5100 ;; Return value:  Size  Location     Type
  5101 ;;                  4   14[COMRAM] unsigned char 
  5102 ;; Registers used:
  5103 ;;		wreg, status,2, status,0
  5104 ;; Tracked objects:
  5105 ;;		On entry : 0/0
  5106 ;;		On exit  : 0/0
  5107 ;;		Unchanged: 0/0
  5108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5109 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5110 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5111 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5112 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5113 ;;Total ram usage:       25 bytes
  5114 ;; Hardware stack levels used: 1
  5115 ;; This function calls:
  5116 ;;		Nothing
  5117 ;; This function is called by:
  5118 ;;		_detect_color
  5119 ;;		_check_color_reading
  5120 ;; This function uses a non-reentrant model
  5121 ;;
  5122                           
  5123                           	psect	text17
  5124  002586                     __ptext17:
  5125                           	callstack 0
  5126  002586                     ___fldiv:
  5127                           	callstack 29
  5128  002586  5012               	movf	(___fldiv@b+3)^0,w,c
  5129  002588  0B80               	andlw	128
  5130  00258A  6E1F               	movwf	___fldiv@sign^0,c
  5131  00258C  5012               	movf	(___fldiv@b+3)^0,w,c
  5132  00258E  2412               	addwf	(___fldiv@b+3)^0,w,c
  5133  002590  6E26               	movwf	___fldiv@bexp^0,c
  5134  002592  AE11               	btfss	(___fldiv@b+2)^0,7,c
  5135  002594  EFCE  F012         	goto	u3441
  5136  002598  EFD0  F012         	goto	u3440
  5137  00259C                     u3441:
  5138  00259C  EFD1  F012         	goto	l3748
  5139  0025A0                     u3440:
  5140  0025A0  8026               	bsf	___fldiv@bexp^0,0,c
  5141  0025A2                     l3748:
  5142  0025A2  5026               	movf	___fldiv@bexp^0,w,c
  5143  0025A4  B4D8               	btfsc	status,2,c
  5144  0025A6  EFD7  F012         	goto	u3451
  5145  0025AA  EFD9  F012         	goto	u3450
  5146  0025AE                     u3451:
  5147  0025AE  EFEE  F012         	goto	l3758
  5148  0025B2                     u3450:
  5149  0025B2  2826               	incf	___fldiv@bexp^0,w,c
  5150  0025B4  A4D8               	btfss	status,2,c
  5151  0025B6  EFDF  F012         	goto	u3461
  5152  0025BA  EFE1  F012         	goto	u3460
  5153  0025BE                     u3461:
  5154  0025BE  EFE9  F012         	goto	l3754
  5155  0025C2                     u3460:
  5156  0025C2  0E00               	movlw	0
  5157  0025C4  6E0F               	movwf	___fldiv@b^0,c
  5158  0025C6  0E00               	movlw	0
  5159  0025C8  6E10               	movwf	(___fldiv@b+1)^0,c
  5160  0025CA  0E00               	movlw	0
  5161  0025CC  6E11               	movwf	(___fldiv@b+2)^0,c
  5162  0025CE  0E00               	movlw	0
  5163  0025D0  6E12               	movwf	(___fldiv@b+3)^0,c
  5164  0025D2                     l3754:
  5165  0025D2  8E11               	bsf	(___fldiv@b+2)^0,7,c
  5166  0025D4  0E00               	movlw	0
  5167  0025D6  6E12               	movwf	(___fldiv@b+3)^0,c
  5168  0025D8  EFF6  F012         	goto	l3760
  5169  0025DC                     l3758:
  5170  0025DC  0E00               	movlw	0
  5171  0025DE  6E0F               	movwf	___fldiv@b^0,c
  5172  0025E0  0E00               	movlw	0
  5173  0025E2  6E10               	movwf	(___fldiv@b+1)^0,c
  5174  0025E4  0E00               	movlw	0
  5175  0025E6  6E11               	movwf	(___fldiv@b+2)^0,c
  5176  0025E8  0E00               	movlw	0
  5177  0025EA  6E12               	movwf	(___fldiv@b+3)^0,c
  5178  0025EC                     l3760:
  5179  0025EC  5016               	movf	(___fldiv@a+3)^0,w,c
  5180  0025EE  0B80               	andlw	128
  5181  0025F0  1A1F               	xorwf	___fldiv@sign^0,f,c
  5182  0025F2  5016               	movf	(___fldiv@a+3)^0,w,c
  5183  0025F4  2416               	addwf	(___fldiv@a+3)^0,w,c
  5184  0025F6  6E27               	movwf	___fldiv@aexp^0,c
  5185  0025F8  AE15               	btfss	(___fldiv@a+2)^0,7,c
  5186  0025FA  EF01  F013         	goto	u3471
  5187  0025FE  EF03  F013         	goto	u3470
  5188  002602                     u3471:
  5189  002602  EF04  F013         	goto	l3768
  5190  002606                     u3470:
  5191  002606  8027               	bsf	___fldiv@aexp^0,0,c
  5192  002608                     l3768:
  5193  002608  5027               	movf	___fldiv@aexp^0,w,c
  5194  00260A  B4D8               	btfsc	status,2,c
  5195  00260C  EF0A  F013         	goto	u3481
  5196  002610  EF0C  F013         	goto	u3480
  5197  002614                     u3481:
  5198  002614  EF21  F013         	goto	l3778
  5199  002618                     u3480:
  5200  002618  2827               	incf	___fldiv@aexp^0,w,c
  5201  00261A  A4D8               	btfss	status,2,c
  5202  00261C  EF12  F013         	goto	u3491
  5203  002620  EF14  F013         	goto	u3490
  5204  002624                     u3491:
  5205  002624  EF1C  F013         	goto	l3774
  5206  002628                     u3490:
  5207  002628  0E00               	movlw	0
  5208  00262A  6E13               	movwf	___fldiv@a^0,c
  5209  00262C  0E00               	movlw	0
  5210  00262E  6E14               	movwf	(___fldiv@a+1)^0,c
  5211  002630  0E00               	movlw	0
  5212  002632  6E15               	movwf	(___fldiv@a+2)^0,c
  5213  002634  0E00               	movlw	0
  5214  002636  6E16               	movwf	(___fldiv@a+3)^0,c
  5215  002638                     l3774:
  5216  002638  8E15               	bsf	(___fldiv@a+2)^0,7,c
  5217  00263A  0E00               	movlw	0
  5218  00263C  6E16               	movwf	(___fldiv@a+3)^0,c
  5219  00263E  EF29  F013         	goto	l3780
  5220  002642                     l3778:
  5221  002642  0E00               	movlw	0
  5222  002644  6E13               	movwf	___fldiv@a^0,c
  5223  002646  0E00               	movlw	0
  5224  002648  6E14               	movwf	(___fldiv@a+1)^0,c
  5225  00264A  0E00               	movlw	0
  5226  00264C  6E15               	movwf	(___fldiv@a+2)^0,c
  5227  00264E  0E00               	movlw	0
  5228  002650  6E16               	movwf	(___fldiv@a+3)^0,c
  5229  002652                     l3780:
  5230  002652  5013               	movf	___fldiv@a^0,w,c
  5231  002654  1014               	iorwf	(___fldiv@a+1)^0,w,c
  5232  002656  1015               	iorwf	(___fldiv@a+2)^0,w,c
  5233  002658  1016               	iorwf	(___fldiv@a+3)^0,w,c
  5234  00265A  A4D8               	btfss	status,2,c
  5235  00265C  EF32  F013         	goto	u3501
  5236  002660  EF34  F013         	goto	u3500
  5237  002664                     u3501:
  5238  002664  EF4C  F013         	goto	l3792
  5239  002668                     u3500:
  5240  002668  0E00               	movlw	0
  5241  00266A  6E0F               	movwf	___fldiv@b^0,c
  5242  00266C  0E00               	movlw	0
  5243  00266E  6E10               	movwf	(___fldiv@b+1)^0,c
  5244  002670  0E00               	movlw	0
  5245  002672  6E11               	movwf	(___fldiv@b+2)^0,c
  5246  002674  0E00               	movlw	0
  5247  002676  6E12               	movwf	(___fldiv@b+3)^0,c
  5248  002678  0E80               	movlw	128
  5249  00267A  1211               	iorwf	(___fldiv@b+2)^0,f,c
  5250  00267C  0E7F               	movlw	127
  5251  00267E  1212               	iorwf	(___fldiv@b+3)^0,f,c
  5252  002680                     l3786:
  5253  002680  501F               	movf	___fldiv@sign^0,w,c
  5254  002682  1212               	iorwf	(___fldiv@b+3)^0,f,c
  5255  002684  C00F  F00F         	movff	___fldiv@b,?___fldiv
  5256  002688  C010  F010         	movff	___fldiv@b+1,?___fldiv+1
  5257  00268C  C011  F011         	movff	___fldiv@b+2,?___fldiv+2
  5258  002690  C012  F012         	movff	___fldiv@b+3,?___fldiv+3
  5259  002694  EF8F  F014         	goto	l1106
  5260  002698                     l3792:
  5261  002698  5026               	movf	___fldiv@bexp^0,w,c
  5262  00269A  A4D8               	btfss	status,2,c
  5263  00269C  EF52  F013         	goto	u3511
  5264  0026A0  EF54  F013         	goto	u3510
  5265  0026A4                     u3511:
  5266  0026A4  EF5E  F013         	goto	l3800
  5267  0026A8                     u3510:
  5268  0026A8  0E00               	movlw	0
  5269  0026AA  6E0F               	movwf	?___fldiv^0,c
  5270  0026AC  0E00               	movlw	0
  5271  0026AE  6E10               	movwf	(?___fldiv+1)^0,c
  5272  0026B0  0E00               	movlw	0
  5273  0026B2  6E11               	movwf	(?___fldiv+2)^0,c
  5274  0026B4  0E00               	movlw	0
  5275  0026B6  6E12               	movwf	(?___fldiv+3)^0,c
  5276  0026B8  EF8F  F014         	goto	l1106
  5277  0026BC                     l3800:
  5278  0026BC  5027               	movf	___fldiv@aexp^0,w,c
  5279  0026BE  C026  F017         	movff	___fldiv@bexp,??___fldiv
  5280  0026C2  6A18               	clrf	(??___fldiv+1)^0,c
  5281  0026C4  5E17               	subwf	??___fldiv^0,f,c
  5282  0026C6  0E00               	movlw	0
  5283  0026C8  5A18               	subwfb	(??___fldiv+1)^0,f,c
  5284  0026CA  0E7F               	movlw	127
  5285  0026CC  2417               	addwf	??___fldiv^0,w,c
  5286  0026CE  6E20               	movwf	___fldiv@new_exp^0,c
  5287  0026D0  0E00               	movlw	0
  5288  0026D2  2018               	addwfc	(??___fldiv+1)^0,w,c
  5289  0026D4  6E21               	movwf	(___fldiv@new_exp+1)^0,c
  5290  0026D6  C00F  F01B         	movff	___fldiv@b,___fldiv@rem
  5291  0026DA  C010  F01C         	movff	___fldiv@b+1,___fldiv@rem+1
  5292  0026DE  C011  F01D         	movff	___fldiv@b+2,___fldiv@rem+2
  5293  0026E2  C012  F01E         	movff	___fldiv@b+3,___fldiv@rem+3
  5294  0026E6  0E00               	movlw	0
  5295  0026E8  6E0F               	movwf	___fldiv@b^0,c
  5296  0026EA  0E00               	movlw	0
  5297  0026EC  6E10               	movwf	(___fldiv@b+1)^0,c
  5298  0026EE  0E00               	movlw	0
  5299  0026F0  6E11               	movwf	(___fldiv@b+2)^0,c
  5300  0026F2  0E00               	movlw	0
  5301  0026F4  6E12               	movwf	(___fldiv@b+3)^0,c
  5302  0026F6  0E00               	movlw	0
  5303  0026F8  6E22               	movwf	___fldiv@grs^0,c
  5304  0026FA  0E00               	movlw	0
  5305  0026FC  6E23               	movwf	(___fldiv@grs+1)^0,c
  5306  0026FE  0E00               	movlw	0
  5307  002700  6E24               	movwf	(___fldiv@grs+2)^0,c
  5308  002702  0E00               	movlw	0
  5309  002704  6E25               	movwf	(___fldiv@grs+3)^0,c
  5310  002706  0E00               	movlw	0
  5311  002708  6E27               	movwf	___fldiv@aexp^0,c
  5312  00270A  EFBF  F013         	goto	l1108
  5313  00270E                     l3810:
  5314  00270E  5027               	movf	___fldiv@aexp^0,w,c
  5315  002710  B4D8               	btfsc	status,2,c
  5316  002712  EF8D  F013         	goto	u3521
  5317  002716  EF8F  F013         	goto	u3520
  5318  00271A                     u3521:
  5319  00271A  EFA6  F013         	goto	l3818
  5320  00271E                     u3520:
  5321  00271E  90D8               	bcf	status,0,c
  5322  002720  361B               	rlcf	___fldiv@rem^0,f,c
  5323  002722  361C               	rlcf	(___fldiv@rem+1)^0,f,c
  5324  002724  361D               	rlcf	(___fldiv@rem+2)^0,f,c
  5325  002726  361E               	rlcf	(___fldiv@rem+3)^0,f,c
  5326  002728  90D8               	bcf	status,0,c
  5327  00272A  360F               	rlcf	___fldiv@b^0,f,c
  5328  00272C  3610               	rlcf	(___fldiv@b+1)^0,f,c
  5329  00272E  3611               	rlcf	(___fldiv@b+2)^0,f,c
  5330  002730  3612               	rlcf	(___fldiv@b+3)^0,f,c
  5331  002732  AE25               	btfss	(___fldiv@grs+3)^0,7,c
  5332  002734  EF9E  F013         	goto	u3531
  5333  002738  EFA0  F013         	goto	u3530
  5334  00273C                     u3531:
  5335  00273C  EFA1  F013         	goto	l1111
  5336  002740                     u3530:
  5337  002740  800F               	bsf	___fldiv@b^0,0,c
  5338  002742                     l1111:
  5339  002742  90D8               	bcf	status,0,c
  5340  002744  3622               	rlcf	___fldiv@grs^0,f,c
  5341  002746  3623               	rlcf	(___fldiv@grs+1)^0,f,c
  5342  002748  3624               	rlcf	(___fldiv@grs+2)^0,f,c
  5343  00274A  3625               	rlcf	(___fldiv@grs+3)^0,f,c
  5344  00274C                     l3818:
  5345  00274C  5013               	movf	___fldiv@a^0,w,c
  5346  00274E  5C1B               	subwf	___fldiv@rem^0,w,c
  5347  002750  5014               	movf	(___fldiv@a+1)^0,w,c
  5348  002752  581C               	subwfb	(___fldiv@rem+1)^0,w,c
  5349  002754  5015               	movf	(___fldiv@a+2)^0,w,c
  5350  002756  581D               	subwfb	(___fldiv@rem+2)^0,w,c
  5351  002758  5016               	movf	(___fldiv@a+3)^0,w,c
  5352  00275A  581E               	subwfb	(___fldiv@rem+3)^0,w,c
  5353  00275C  A0D8               	btfss	status,0,c
  5354  00275E  EFB3  F013         	goto	u3541
  5355  002762  EFB5  F013         	goto	u3540
  5356  002766                     u3541:
  5357  002766  EFBE  F013         	goto	l3824
  5358  00276A                     u3540:
  5359  00276A  8C25               	bsf	(___fldiv@grs+3)^0,6,c
  5360  00276C  5013               	movf	___fldiv@a^0,w,c
  5361  00276E  5E1B               	subwf	___fldiv@rem^0,f,c
  5362  002770  5014               	movf	(___fldiv@a+1)^0,w,c
  5363  002772  5A1C               	subwfb	(___fldiv@rem+1)^0,f,c
  5364  002774  5015               	movf	(___fldiv@a+2)^0,w,c
  5365  002776  5A1D               	subwfb	(___fldiv@rem+2)^0,f,c
  5366  002778  5016               	movf	(___fldiv@a+3)^0,w,c
  5367  00277A  5A1E               	subwfb	(___fldiv@rem+3)^0,f,c
  5368  00277C                     l3824:
  5369  00277C  2A27               	incf	___fldiv@aexp^0,f,c
  5370  00277E                     l1108:
  5371  00277E  0E19               	movlw	25
  5372  002780  6427               	cpfsgt	___fldiv@aexp^0,c
  5373  002782  EFC5  F013         	goto	u3551
  5374  002786  EFC7  F013         	goto	u3550
  5375  00278A                     u3551:
  5376  00278A  EF87  F013         	goto	l3810
  5377  00278E                     u3550:
  5378  00278E  501B               	movf	___fldiv@rem^0,w,c
  5379  002790  101C               	iorwf	(___fldiv@rem+1)^0,w,c
  5380  002792  101D               	iorwf	(___fldiv@rem+2)^0,w,c
  5381  002794  101E               	iorwf	(___fldiv@rem+3)^0,w,c
  5382  002796  B4D8               	btfsc	status,2,c
  5383  002798  EFD0  F013         	goto	u3561
  5384  00279C  EFD2  F013         	goto	u3560
  5385  0027A0                     u3561:
  5386  0027A0  EFEA  F013         	goto	l3836
  5387  0027A4                     u3560:
  5388  0027A4  8022               	bsf	___fldiv@grs^0,0,c
  5389  0027A6  EFEA  F013         	goto	l3836
  5390  0027AA                     l3830:
  5391  0027AA  90D8               	bcf	status,0,c
  5392  0027AC  360F               	rlcf	___fldiv@b^0,f,c
  5393  0027AE  3610               	rlcf	(___fldiv@b+1)^0,f,c
  5394  0027B0  3611               	rlcf	(___fldiv@b+2)^0,f,c
  5395  0027B2  3612               	rlcf	(___fldiv@b+3)^0,f,c
  5396  0027B4  AE25               	btfss	(___fldiv@grs+3)^0,7,c
  5397  0027B6  EFDF  F013         	goto	u3571
  5398  0027BA  EFE1  F013         	goto	u3570
  5399  0027BE                     u3571:
  5400  0027BE  EFE2  F013         	goto	l1117
  5401  0027C2                     u3570:
  5402  0027C2  800F               	bsf	___fldiv@b^0,0,c
  5403  0027C4                     l1117:
  5404  0027C4  90D8               	bcf	status,0,c
  5405  0027C6  3622               	rlcf	___fldiv@grs^0,f,c
  5406  0027C8  3623               	rlcf	(___fldiv@grs+1)^0,f,c
  5407  0027CA  3624               	rlcf	(___fldiv@grs+2)^0,f,c
  5408  0027CC  3625               	rlcf	(___fldiv@grs+3)^0,f,c
  5409  0027CE  0620               	decf	___fldiv@new_exp^0,f,c
  5410  0027D0  A0D8               	btfss	status,0,c
  5411  0027D2  0621               	decf	(___fldiv@new_exp+1)^0,f,c
  5412  0027D4                     l3836:
  5413  0027D4  AE11               	btfss	(___fldiv@b+2)^0,7,c
  5414  0027D6  EFEF  F013         	goto	u3581
  5415  0027DA  EFF1  F013         	goto	u3580
  5416  0027DE                     u3581:
  5417  0027DE  EFD5  F013         	goto	l3830
  5418  0027E2                     u3580:
  5419  0027E2  0E00               	movlw	0
  5420  0027E4  6E27               	movwf	___fldiv@aexp^0,c
  5421  0027E6  AE25               	btfss	(___fldiv@grs+3)^0,7,c
  5422  0027E8  EFF8  F013         	goto	u3591
  5423  0027EC  EFFA  F013         	goto	u3590
  5424  0027F0                     u3591:
  5425  0027F0  EF1E  F014         	goto	l1119
  5426  0027F4                     u3590:
  5427  0027F4  0EFF               	movlw	255
  5428  0027F6  1422               	andwf	___fldiv@grs^0,w,c
  5429  0027F8  6E17               	movwf	??___fldiv^0,c
  5430  0027FA  0EFF               	movlw	255
  5431  0027FC  1423               	andwf	(___fldiv@grs+1)^0,w,c
  5432  0027FE  6E18               	movwf	(??___fldiv+1)^0,c
  5433  002800  0EFF               	movlw	255
  5434  002802  1424               	andwf	(___fldiv@grs+2)^0,w,c
  5435  002804  6E19               	movwf	(??___fldiv+2)^0,c
  5436  002806  0E7F               	movlw	127
  5437  002808  1425               	andwf	(___fldiv@grs+3)^0,w,c
  5438  00280A  6E1A               	movwf	(??___fldiv+3)^0,c
  5439  00280C  5017               	movf	??___fldiv^0,w,c
  5440  00280E  1018               	iorwf	(??___fldiv+1)^0,w,c
  5441  002810  1019               	iorwf	(??___fldiv+2)^0,w,c
  5442  002812  101A               	iorwf	(??___fldiv+3)^0,w,c
  5443  002814  B4D8               	btfsc	status,2,c
  5444  002816  EF0F  F014         	goto	u3601
  5445  00281A  EF11  F014         	goto	u3600
  5446  00281E                     u3601:
  5447  00281E  EF15  F014         	goto	l1120
  5448  002822                     u3600:
  5449  002822                     l3844:
  5450  002822  0E01               	movlw	1
  5451  002824  6E27               	movwf	___fldiv@aexp^0,c
  5452  002826  EF1E  F014         	goto	l1119
  5453  00282A                     l1120:
  5454  00282A  A00F               	btfss	___fldiv@b^0,0,c
  5455  00282C  EF1A  F014         	goto	u3611
  5456  002830  EF1C  F014         	goto	u3610
  5457  002834                     u3611:
  5458  002834  EF1E  F014         	goto	l1119
  5459  002838                     u3610:
  5460  002838  EF11  F014         	goto	l3844
  5461  00283C                     l1119:
  5462  00283C  5027               	movf	___fldiv@aexp^0,w,c
  5463  00283E  B4D8               	btfsc	status,2,c
  5464  002840  EF24  F014         	goto	u3621
  5465  002844  EF26  F014         	goto	u3620
  5466  002848                     u3621:
  5467  002848  EF4A  F014         	goto	l3856
  5468  00284C                     u3620:
  5469  00284C  0E01               	movlw	1
  5470  00284E  260F               	addwf	___fldiv@b^0,f,c
  5471  002850  0E00               	movlw	0
  5472  002852  2210               	addwfc	(___fldiv@b+1)^0,f,c
  5473  002854  2211               	addwfc	(___fldiv@b+2)^0,f,c
  5474  002856  2212               	addwfc	(___fldiv@b+3)^0,f,c
  5475  002858  A012               	btfss	(___fldiv@b+3)^0,0,c
  5476  00285A  EF31  F014         	goto	u3631
  5477  00285E  EF33  F014         	goto	u3630
  5478  002862                     u3631:
  5479  002862  EF4A  F014         	goto	l3856
  5480  002866                     u3630:
  5481  002866  C00F  F017         	movff	___fldiv@b,??___fldiv
  5482  00286A  C010  F018         	movff	___fldiv@b+1,??___fldiv+1
  5483  00286E  C011  F019         	movff	___fldiv@b+2,??___fldiv+2
  5484  002872  C012  F01A         	movff	___fldiv@b+3,??___fldiv+3
  5485  002876  341A               	rlcf	(??___fldiv+3)^0,w,c
  5486  002878  321A               	rrcf	(??___fldiv+3)^0,f,c
  5487  00287A  3219               	rrcf	(??___fldiv+2)^0,f,c
  5488  00287C  3218               	rrcf	(??___fldiv+1)^0,f,c
  5489  00287E  3217               	rrcf	??___fldiv^0,f,c
  5490  002880  C017  F00F         	movff	??___fldiv,___fldiv@b
  5491  002884  C018  F010         	movff	??___fldiv+1,___fldiv@b+1
  5492  002888  C019  F011         	movff	??___fldiv+2,___fldiv@b+2
  5493  00288C  C01A  F012         	movff	??___fldiv+3,___fldiv@b+3
  5494  002890  4A20               	infsnz	___fldiv@new_exp^0,f,c
  5495  002892  2A21               	incf	(___fldiv@new_exp+1)^0,f,c
  5496  002894                     l3856:
  5497  002894  BE21               	btfsc	(___fldiv@new_exp+1)^0,7,c
  5498  002896  EF55  F014         	goto	u3641
  5499  00289A  5021               	movf	(___fldiv@new_exp+1)^0,w,c
  5500  00289C  E108               	bnz	u3640
  5501  00289E  2820               	incf	___fldiv@new_exp^0,w,c
  5502  0028A0  A0D8               	btfss	status,0,c
  5503  0028A2  EF55  F014         	goto	u3641
  5504  0028A6  EF57  F014         	goto	u3640
  5505  0028AA                     u3641:
  5506  0028AA  EF62  F014         	goto	l3860
  5507  0028AE                     u3640:
  5508  0028AE  0E00               	movlw	0
  5509  0028B0  6E21               	movwf	(___fldiv@new_exp+1)^0,c
  5510  0028B2  6820               	setf	___fldiv@new_exp^0,c
  5511  0028B4  0E00               	movlw	0
  5512  0028B6  6E0F               	movwf	___fldiv@b^0,c
  5513  0028B8  0E00               	movlw	0
  5514  0028BA  6E10               	movwf	(___fldiv@b+1)^0,c
  5515  0028BC  0E00               	movlw	0
  5516  0028BE  6E11               	movwf	(___fldiv@b+2)^0,c
  5517  0028C0  0E00               	movlw	0
  5518  0028C2  6E12               	movwf	(___fldiv@b+3)^0,c
  5519  0028C4                     l3860:
  5520  0028C4  BE21               	btfsc	(___fldiv@new_exp+1)^0,7,c
  5521  0028C6  EF6F  F014         	goto	u3650
  5522  0028CA  5021               	movf	(___fldiv@new_exp+1)^0,w,c
  5523  0028CC  E106               	bnz	u3651
  5524  0028CE  0420               	decf	___fldiv@new_exp^0,w,c
  5525  0028D0  B0D8               	btfsc	status,0,c
  5526  0028D2  EF6D  F014         	goto	u3651
  5527  0028D6  EF6F  F014         	goto	u3650
  5528  0028DA                     u3651:
  5529  0028DA  EF7D  F014         	goto	l3864
  5530  0028DE                     u3650:
  5531  0028DE  0E00               	movlw	0
  5532  0028E0  6E21               	movwf	(___fldiv@new_exp+1)^0,c
  5533  0028E2  0E00               	movlw	0
  5534  0028E4  6E20               	movwf	___fldiv@new_exp^0,c
  5535  0028E6  0E00               	movlw	0
  5536  0028E8  6E0F               	movwf	___fldiv@b^0,c
  5537  0028EA  0E00               	movlw	0
  5538  0028EC  6E10               	movwf	(___fldiv@b+1)^0,c
  5539  0028EE  0E00               	movlw	0
  5540  0028F0  6E11               	movwf	(___fldiv@b+2)^0,c
  5541  0028F2  0E00               	movlw	0
  5542  0028F4  6E12               	movwf	(___fldiv@b+3)^0,c
  5543  0028F6  0E00               	movlw	0
  5544  0028F8  6E1F               	movwf	___fldiv@sign^0,c
  5545  0028FA                     l3864:
  5546  0028FA  C020  F026         	movff	___fldiv@new_exp,___fldiv@bexp
  5547  0028FE  A026               	btfss	___fldiv@bexp^0,0,c
  5548  002900  EF84  F014         	goto	u3661
  5549  002904  EF86  F014         	goto	u3660
  5550  002908                     u3661:
  5551  002908  EF89  F014         	goto	l3870
  5552  00290C                     u3660:
  5553  00290C  8E11               	bsf	(___fldiv@b+2)^0,7,c
  5554  00290E  EF8A  F014         	goto	l3872
  5555  002912                     l3870:
  5556  002912  9E11               	bcf	(___fldiv@b+2)^0,7,c
  5557  002914                     l3872:
  5558  002914  90D8               	bcf	status,0,c
  5559  002916  3026               	rrcf	___fldiv@bexp^0,w,c
  5560  002918  6E12               	movwf	(___fldiv@b+3)^0,c
  5561  00291A  EF40  F013         	goto	l3786
  5562  00291E                     l1106:
  5563  00291E  0012               	return		;funcret
  5564  002920                     __end_of___fldiv:
  5565                           	callstack 0
  5566                           
  5567 ;; *************** function _color_predict *****************
  5568 ;; Defined at:
  5569 ;;		line 152 in file "color.c"
  5570 ;; Parameters:    Size  Location     Type
  5571 ;;  color           1    wreg     unsigned char 
  5572 ;; Auto vars:     Size  Location     Type
  5573 ;;  color           1  125[BANK0 ] unsigned char 
  5574 ;;  buf           100   25[BANK0 ] unsigned char [100]
  5575 ;;  color_name      1    0        unsigned char 
  5576 ;; Return value:  Size  Location     Type
  5577 ;;                  1    wreg      void 
  5578 ;; Registers used:
  5579 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5580 ;; Tracked objects:
  5581 ;;		On entry : 0/0
  5582 ;;		On exit  : 0/0
  5583 ;;		Unchanged: 0/0
  5584 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5585 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5586 ;;      Locals:         0     101       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5587 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5588 ;;      Totals:         0     101       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5589 ;;Total ram usage:      101 bytes
  5590 ;; Hardware stack levels used: 1
  5591 ;; Hardware stack levels required when called: 8
  5592 ;; This function calls:
  5593 ;;		_sendStringSerial4
  5594 ;;		_sprintf
  5595 ;; This function is called by:
  5596 ;;		_main
  5597 ;; This function uses a non-reentrant model
  5598 ;;
  5599                           
  5600                           	psect	text18
  5601  00358E                     __ptext18:
  5602                           	callstack 0
  5603  00358E                     _color_predict:
  5604                           	callstack 22
  5605                           
  5606                           ;incstack = 0
  5607                           ;color_predict@color stored from wreg
  5608  00358E  0100               	movlb	0	; () banked
  5609  003590  6FDD               	movwf	color_predict@color& (0+255),b
  5610  003592                     
  5611                           ;color.c: 152: void color_predict(unsigned char color);color.c: 153: {;color.c: 154:    
      +                           char buf[100];;color.c: 155:     char color_name;;color.c: 156:     if (color == 0){col
      +                          or_name = "Error";}
  5612  003592  0100               	movlb	0	; () banked
  5613  003594  51DD               	movf	color_predict@color& (0+255),w,b
  5614  003596  A4D8               	btfss	status,2,c
  5615  003598  EFD0  F01A         	goto	u3771
  5616  00359C  EFD2  F01A         	goto	u3770
  5617  0035A0                     u3771:
  5618  0035A0  EFD2  F01A         	goto	l3948
  5619  0035A4                     u3770:
  5620  0035A4                     l3948:
  5621                           
  5622                           ; BSR set to: 0
  5623                           ;color.c: 157:     if (color == 1){color_name = "Red";}
  5624  0035A4  05DD               	decf	color_predict@color& (0+255),w,b
  5625  0035A6  A4D8               	btfss	status,2,c
  5626  0035A8  EFD8  F01A         	goto	u3781
  5627  0035AC  EFDA  F01A         	goto	u3780
  5628  0035B0                     u3781:
  5629  0035B0  EFDA  F01A         	goto	l3952
  5630  0035B4                     u3780:
  5631  0035B4                     l3952:
  5632                           
  5633                           ; BSR set to: 0
  5634                           ;color.c: 158:     if (color == 2){color_name = "Green";}
  5635  0035B4  0E02               	movlw	2
  5636  0035B6  19DD               	xorwf	color_predict@color& (0+255),w,b
  5637  0035B8  A4D8               	btfss	status,2,c
  5638  0035BA  EFE1  F01A         	goto	u3791
  5639  0035BE  EFE3  F01A         	goto	u3790
  5640  0035C2                     u3791:
  5641  0035C2  EFE3  F01A         	goto	l3956
  5642  0035C6                     u3790:
  5643  0035C6                     l3956:
  5644                           
  5645                           ; BSR set to: 0
  5646                           ;color.c: 159:     if (color == 3){color_name = "Blue";}
  5647  0035C6  0E03               	movlw	3
  5648  0035C8  19DD               	xorwf	color_predict@color& (0+255),w,b
  5649  0035CA  A4D8               	btfss	status,2,c
  5650  0035CC  EFEA  F01A         	goto	u3801
  5651  0035D0  EFEC  F01A         	goto	u3800
  5652  0035D4                     u3801:
  5653  0035D4  EFEC  F01A         	goto	l3960
  5654  0035D8                     u3800:
  5655  0035D8                     l3960:
  5656                           
  5657                           ; BSR set to: 0
  5658                           ;color.c: 160:     if (color == 4){color_name = "Yellow";}
  5659  0035D8  0E04               	movlw	4
  5660  0035DA  19DD               	xorwf	color_predict@color& (0+255),w,b
  5661  0035DC  A4D8               	btfss	status,2,c
  5662  0035DE  EFF3  F01A         	goto	u3811
  5663  0035E2  EFF5  F01A         	goto	u3810
  5664  0035E6                     u3811:
  5665  0035E6  EFF5  F01A         	goto	l3964
  5666  0035EA                     u3810:
  5667  0035EA                     l3964:
  5668                           
  5669                           ; BSR set to: 0
  5670                           ;color.c: 161:     if (color == 5){color_name = "Pink";}
  5671  0035EA  0E05               	movlw	5
  5672  0035EC  19DD               	xorwf	color_predict@color& (0+255),w,b
  5673  0035EE  A4D8               	btfss	status,2,c
  5674  0035F0  EFFC  F01A         	goto	u3821
  5675  0035F4  EFFE  F01A         	goto	u3820
  5676  0035F8                     u3821:
  5677  0035F8  EFFE  F01A         	goto	l3968
  5678  0035FC                     u3820:
  5679  0035FC                     l3968:
  5680                           
  5681                           ; BSR set to: 0
  5682                           ;color.c: 162:     if (color == 6){color_name = "Orange";}
  5683  0035FC  0E06               	movlw	6
  5684  0035FE  19DD               	xorwf	color_predict@color& (0+255),w,b
  5685  003600  A4D8               	btfss	status,2,c
  5686  003602  EF05  F01B         	goto	u3831
  5687  003606  EF07  F01B         	goto	u3830
  5688  00360A                     u3831:
  5689  00360A  EF07  F01B         	goto	l3972
  5690  00360E                     u3830:
  5691  00360E                     l3972:
  5692                           
  5693                           ; BSR set to: 0
  5694                           ;color.c: 163:     if (color == 7){color_name = "Light blue";}
  5695  00360E  0E07               	movlw	7
  5696  003610  19DD               	xorwf	color_predict@color& (0+255),w,b
  5697  003612  A4D8               	btfss	status,2,c
  5698  003614  EF0E  F01B         	goto	u3841
  5699  003618  EF10  F01B         	goto	u3840
  5700  00361C                     u3841:
  5701  00361C  EF10  F01B         	goto	l3976
  5702  003620                     u3840:
  5703  003620                     l3976:
  5704                           
  5705                           ; BSR set to: 0
  5706                           ;color.c: 164:     if (color == 8){color_name = "White";}
  5707  003620  0E08               	movlw	8
  5708  003622  19DD               	xorwf	color_predict@color& (0+255),w,b
  5709  003624  A4D8               	btfss	status,2,c
  5710  003626  EF17  F01B         	goto	u3851
  5711  00362A  EF19  F01B         	goto	u3850
  5712  00362E                     u3851:
  5713  00362E  EF19  F01B         	goto	l3980
  5714  003632                     u3850:
  5715  003632                     l3980:
  5716                           
  5717                           ; BSR set to: 0
  5718                           ;color.c: 165:     if (color == 9){color_name = "Black";}
  5719  003632  0E09               	movlw	9
  5720  003634  19DD               	xorwf	color_predict@color& (0+255),w,b
  5721  003636  A4D8               	btfss	status,2,c
  5722  003638  EF20  F01B         	goto	u3861
  5723  00363C  EF22  F01B         	goto	u3860
  5724  003640                     u3861:
  5725  003640  EF22  F01B         	goto	l3984
  5726  003644                     u3860:
  5727  003644                     l3984:
  5728                           
  5729                           ; BSR set to: 0
  5730                           ;color.c: 167:     sprintf(buf,"\t%d\r\n", color);
  5731  003644  0E79               	movlw	low color_predict@buf
  5732  003646  6F60               	movwf	sprintf@s& (0+255),b
  5733  003648  0E00               	movlw	high color_predict@buf
  5734  00364A  6F61               	movwf	(sprintf@s+1)& (0+255),b
  5735  00364C  0E0E               	movlw	low (STR_1+9)
  5736  00364E  6F62               	movwf	sprintf@fmt& (0+255),b
  5737  003650  0E0E               	movlw	high (STR_1+9)
  5738  003652  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
  5739  003654  C0DD  F064         	movff	color_predict@color,?_sprintf+4
  5740  003658  6B65               	clrf	(?_sprintf+5)& (0+255),b
  5741  00365A  EC64  F01D         	call	_sprintf	;wreg free
  5742  00365E                     
  5743                           ;color.c: 168:     sendStringSerial4(buf);
  5744  00365E  0E79               	movlw	low color_predict@buf
  5745  003660  6E02               	movwf	sendStringSerial4@string^0,c
  5746  003662  0E00               	movlw	high color_predict@buf
  5747  003664  6E03               	movwf	(sendStringSerial4@string+1)^0,c
  5748  003666  EC7E  F01F         	call	_sendStringSerial4	;wreg free
  5749  00366A  0012               	return		;funcret
  5750  00366C                     __end_of_color_predict:
  5751                           	callstack 0
  5752                           
  5753 ;; *************** function _color_display *****************
  5754 ;; Defined at:
  5755 ;;		line 136 in file "color.c"
  5756 ;; Parameters:    Size  Location     Type
  5757 ;;  m               2   87[COMRAM] PTR struct color_rgb
  5758 ;;		 -> main@rgb(8), 
  5759 ;; Auto vars:     Size  Location     Type
  5760 ;;  buf           100   25[BANK0 ] unsigned char [100]
  5761 ;; Return value:  Size  Location     Type
  5762 ;;                  1    wreg      void 
  5763 ;; Registers used:
  5764 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5765 ;; Tracked objects:
  5766 ;;		On entry : 0/0
  5767 ;;		On exit  : 0/0
  5768 ;;		Unchanged: 0/0
  5769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5770 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5771 ;;      Locals:         0     100       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5772 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5773 ;;      Totals:         2     100       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5774 ;;Total ram usage:      102 bytes
  5775 ;; Hardware stack levels used: 1
  5776 ;; Hardware stack levels required when called: 8
  5777 ;; This function calls:
  5778 ;;		_sendStringSerial4
  5779 ;;		_sprintf
  5780 ;; This function is called by:
  5781 ;;		_main
  5782 ;; This function uses a non-reentrant model
  5783 ;;
  5784                           
  5785                           	psect	text19
  5786  003998                     __ptext19:
  5787                           	callstack 0
  5788  003998                     _color_display:
  5789                           	callstack 22
  5790  003998                     
  5791                           ;color.c: 136: void color_display(struct color_rgb *m);color.c: 137: {;color.c: 138:    
      +                           char buf[100];;color.c: 139:     sprintf(buf,"\t%d\t%d\t%d\t%d\r\n", m->R, m->G, m->B, 
      +                          m->C);
  5792  003998  0E79               	movlw	low color_display@buf
  5793  00399A  0100               	movlb	0	; () banked
  5794  00399C  6F60               	movwf	sprintf@s& (0+255),b
  5795  00399E  0E00               	movlw	high color_display@buf
  5796  0039A0  6F61               	movwf	(sprintf@s+1)& (0+255),b
  5797  0039A2  0E05               	movlw	low STR_1
  5798  0039A4  6F62               	movwf	sprintf@fmt& (0+255),b
  5799  0039A6  0E0E               	movlw	high STR_1
  5800  0039A8  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
  5801  0039AA  C058  FFD9         	movff	color_display@m,fsr2l
  5802  0039AE  C059  FFDA         	movff	color_display@m+1,fsr2h
  5803  0039B2  CFDE F064          	movff	postinc2,?_sprintf+4
  5804  0039B6  CFDD F065          	movff	postdec2,?_sprintf+5
  5805  0039BA  EE20 F002          	lfsr	2,2
  5806  0039BE  5058               	movf	color_display@m^0,w,c
  5807  0039C0  26D9               	addwf	fsr2l,f,c
  5808  0039C2  5059               	movf	(color_display@m+1)^0,w,c
  5809  0039C4  22DA               	addwfc	fsr2h,f,c
  5810  0039C6  CFDE F066          	movff	postinc2,?_sprintf+6
  5811  0039CA  CFDD F067          	movff	postdec2,?_sprintf+7
  5812  0039CE  EE20 F004          	lfsr	2,4
  5813  0039D2  5058               	movf	color_display@m^0,w,c
  5814  0039D4  26D9               	addwf	fsr2l,f,c
  5815  0039D6  5059               	movf	(color_display@m+1)^0,w,c
  5816  0039D8  22DA               	addwfc	fsr2h,f,c
  5817  0039DA  CFDE F068          	movff	postinc2,?_sprintf+8
  5818  0039DE  CFDD F069          	movff	postdec2,?_sprintf+9
  5819  0039E2  EE20 F006          	lfsr	2,6
  5820  0039E6  5058               	movf	color_display@m^0,w,c
  5821  0039E8  26D9               	addwf	fsr2l,f,c
  5822  0039EA  5059               	movf	(color_display@m+1)^0,w,c
  5823  0039EC  22DA               	addwfc	fsr2h,f,c
  5824  0039EE  CFDE F06A          	movff	postinc2,?_sprintf+10
  5825  0039F2  CFDD F06B          	movff	postdec2,?_sprintf+11
  5826  0039F6  EC64  F01D         	call	_sprintf	;wreg free
  5827  0039FA                     
  5828                           ;color.c: 140:     sendStringSerial4(buf);
  5829  0039FA  0E79               	movlw	low color_display@buf
  5830  0039FC  6E02               	movwf	sendStringSerial4@string^0,c
  5831  0039FE  0E00               	movlw	high color_display@buf
  5832  003A00  6E03               	movwf	(sendStringSerial4@string+1)^0,c
  5833  003A02  EC7E  F01F         	call	_sendStringSerial4	;wreg free
  5834  003A06  0012               	return		;funcret
  5835  003A08                     __end_of_color_display:
  5836                           	callstack 0
  5837                           
  5838 ;; *************** function _sprintf *****************
  5839 ;; Defined at:
  5840 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\nf_sprintf.c"
  5841 ;; Parameters:    Size  Location     Type
  5842 ;;  s               2    0[BANK0 ] PTR unsigned char 
  5843 ;;		 -> voltage_display@buf(80), color_predict@buf(100), check_color_reading@buf(100), color_display@buf(100), 
  5844 ;;  fmt             2    2[BANK0 ] PTR const unsigned char 
  5845 ;;		 -> STR_14(5), STR_13(6), STR_2(12), STR_1(15), 
  5846 ;; Auto vars:     Size  Location     Type
  5847 ;;  f              11   14[BANK0 ] struct _IO_FILE
  5848 ;;  ap              2   12[BANK0 ] PTR void [1]
  5849 ;;		 -> ?_sprintf(2), 
  5850 ;;  ret             2    0        int 
  5851 ;; Return value:  Size  Location     Type
  5852 ;;                  2    0[BANK0 ] int 
  5853 ;; Registers used:
  5854 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5855 ;; Tracked objects:
  5856 ;;		On entry : 0/0
  5857 ;;		On exit  : 0/0
  5858 ;;		Unchanged: 0/0
  5859 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5860 ;;      Params:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5861 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5862 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5863 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5864 ;;Total ram usage:       25 bytes
  5865 ;; Hardware stack levels used: 1
  5866 ;; Hardware stack levels required when called: 7
  5867 ;; This function calls:
  5868 ;;		_vfprintf
  5869 ;; This function is called by:
  5870 ;;		_color_display
  5871 ;;		_color_predict
  5872 ;;		_check_color_reading
  5873 ;;		_voltage_display
  5874 ;; This function uses a non-reentrant model
  5875 ;;
  5876                           
  5877                           	psect	text20
  5878  003AC8                     __ptext20:
  5879                           	callstack 0
  5880  003AC8                     _sprintf:
  5881                           	callstack 22
  5882  003AC8  0E64               	movlw	low (?_sprintf+4)
  5883  003ACA  0100               	movlb	0	; () banked
  5884  003ACC  6F6C               	movwf	sprintf@ap& (0+255),b
  5885  003ACE  0E00               	movlw	high (?_sprintf+4)
  5886  003AD0  6F6D               	movwf	(sprintf@ap+1)& (0+255),b
  5887  003AD2  C060  F06E         	movff	sprintf@s,sprintf@f
  5888  003AD6  C061  F06F         	movff	sprintf@s+1,sprintf@f+1
  5889  003ADA                     
  5890                           ; BSR set to: 0
  5891  003ADA  0E00               	movlw	0
  5892  003ADC  6F72               	movwf	(sprintf@f+4)& (0+255),b
  5893  003ADE  0E00               	movlw	0
  5894  003AE0  6F71               	movwf	(sprintf@f+3)& (0+255),b
  5895  003AE2                     
  5896                           ; BSR set to: 0
  5897  003AE2  0E00               	movlw	0
  5898  003AE4  6F78               	movwf	(sprintf@f+10)& (0+255),b
  5899  003AE6  0E00               	movlw	0
  5900  003AE8  6F77               	movwf	(sprintf@f+9)& (0+255),b
  5901  003AEA                     
  5902                           ; BSR set to: 0
  5903  003AEA  0E6E               	movlw	low sprintf@f
  5904  003AEC  6E50               	movwf	vfprintf@fp^0,c
  5905  003AEE  0E00               	movlw	high sprintf@f
  5906  003AF0  6E51               	movwf	(vfprintf@fp+1)^0,c
  5907  003AF2  C062  F052         	movff	sprintf@fmt,vfprintf@fmt
  5908  003AF6  C063  F053         	movff	sprintf@fmt+1,vfprintf@fmt+1
  5909  003AFA  0E6C               	movlw	low sprintf@ap
  5910  003AFC  6E54               	movwf	vfprintf@ap^0,c
  5911  003AFE  0E00               	movlw	high sprintf@ap
  5912  003B00  6E55               	movwf	(vfprintf@ap+1)^0,c
  5913  003B02  EC04  F01D         	call	_vfprintf	;wreg free
  5914  003B06  0100               	movlb	0	; () banked
  5915  003B08  5171               	movf	(sprintf@f+3)& (0+255),w,b
  5916  003B0A  2560               	addwf	sprintf@s& (0+255),w,b
  5917  003B0C  6ED9               	movwf	fsr2l,c
  5918  003B0E  5172               	movf	(sprintf@f+4)& (0+255),w,b
  5919  003B10  2161               	addwfc	(sprintf@s+1)& (0+255),w,b
  5920  003B12  6EDA               	movwf	fsr2h,c
  5921  003B14  0E00               	movlw	0
  5922  003B16  6EDF               	movwf	indf2,c
  5923  003B18                     
  5924                           ; BSR set to: 0
  5925  003B18  0012               	return		;funcret
  5926  003B1A                     __end_of_sprintf:
  5927                           	callstack 0
  5928                           
  5929 ;; *************** function _vfprintf *****************
  5930 ;; Defined at:
  5931 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c"
  5932 ;; Parameters:    Size  Location     Type
  5933 ;;  fp              2   79[COMRAM] PTR struct _IO_FILE
  5934 ;;		 -> sprintf@f(11), 
  5935 ;;  fmt             2   81[COMRAM] PTR const unsigned char 
  5936 ;;		 -> STR_14(5), STR_13(6), STR_2(12), STR_1(15), 
  5937 ;;  ap              2   83[COMRAM] PTR PTR void 
  5938 ;;		 -> sprintf@ap(2), 
  5939 ;; Auto vars:     Size  Location     Type
  5940 ;;  cfmt            2   85[COMRAM] PTR unsigned char 
  5941 ;;		 -> STR_14(5), STR_13(6), STR_2(12), STR_1(15), 
  5942 ;; Return value:  Size  Location     Type
  5943 ;;                  2   79[COMRAM] int 
  5944 ;; Registers used:
  5945 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5946 ;; Tracked objects:
  5947 ;;		On entry : 0/0
  5948 ;;		On exit  : 0/0
  5949 ;;		Unchanged: 0/0
  5950 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5951 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5952 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5953 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5954 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5955 ;;Total ram usage:        8 bytes
  5956 ;; Hardware stack levels used: 1
  5957 ;; Hardware stack levels required when called: 6
  5958 ;; This function calls:
  5959 ;;		_vfpfcnvrt
  5960 ;; This function is called by:
  5961 ;;		_sprintf
  5962 ;; This function uses a non-reentrant model
  5963 ;;
  5964                           
  5965                           	psect	text21
  5966  003A08                     __ptext21:
  5967                           	callstack 0
  5968  003A08                     _vfprintf:
  5969                           	callstack 22
  5970  003A08                     
  5971                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.35\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  5972  003A08  C052  F056         	movff	vfprintf@fmt,vfprintf@cfmt
  5973  003A0C  C053  F057         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  5974  003A10                     
  5975                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  5976  003A10  0E00               	movlw	0
  5977  003A12  0100               	movlb	0	; () banked
  5978  003A14  6FEF               	movwf	(_nout+1)& (0+255),b
  5979  003A16  0E00               	movlw	0
  5980  003A18  6FEE               	movwf	_nout& (0+255),b
  5981                           
  5982                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  5983  003A1A  EF22  F01D         	goto	l3662
  5984  003A1E                     l3660:
  5985                           
  5986                           ; BSR set to: 0
  5987                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  5988  003A1E  C050  F040         	movff	vfprintf@fp,vfpfcnvrt@fp
  5989  003A22  C051  F041         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  5990  003A26  0E56               	movlw	low vfprintf@cfmt
  5991  003A28  6E42               	movwf	vfpfcnvrt@fmt^0,c
  5992  003A2A  0E00               	movlw	high vfprintf@cfmt
  5993  003A2C  6E43               	movwf	(vfpfcnvrt@fmt+1)^0,c
  5994  003A2E  C054  F044         	movff	vfprintf@ap,vfpfcnvrt@ap
  5995  003A32  C055  F045         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  5996  003A36  ECDC  F016         	call	_vfpfcnvrt	;wreg free
  5997  003A3A  5040               	movf	?_vfpfcnvrt^0,w,c
  5998  003A3C  0100               	movlb	0	; () banked
  5999  003A3E  27EE               	addwf	_nout& (0+255),f,b
  6000  003A40  5041               	movf	(?_vfpfcnvrt+1)^0,w,c
  6001  003A42  23EF               	addwfc	(_nout+1)& (0+255),f,b
  6002  003A44                     l3662:
  6003                           
  6004                           ; BSR set to: 0
  6005                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  6006  003A44  C056  FFF6         	movff	vfprintf@cfmt,tblptrl
  6007  003A48  C057  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  6008  003A4C                     	if	0	;tblptru may be non-zero
  6009  003A4C                     	endif
  6010  003A4C                     	if	0	;tblptru may be non-zero
  6011  003A4C                     	endif
  6012  003A4C  0008               	tblrd		*
  6013  003A4E  50F5               	movf	tablat,w,c
  6014  003A50  0900               	iorlw	0
  6015  003A52  A4D8               	btfss	status,2,c
  6016  003A54  EF2E  F01D         	goto	u3381
  6017  003A58  EF30  F01D         	goto	u3380
  6018  003A5C                     u3381:
  6019  003A5C  EF0F  F01D         	goto	l3660
  6020  003A60                     u3380:
  6021  003A60                     
  6022                           ; BSR set to: 0
  6023                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  6024  003A60  C0EE  F050         	movff	_nout,?_vfprintf
  6025  003A64  C0EF  F051         	movff	_nout+1,?_vfprintf+1
  6026  003A68                     
  6027                           ; BSR set to: 0
  6028  003A68  0012               	return		;funcret
  6029  003A6A                     __end_of_vfprintf:
  6030                           	callstack 0
  6031                           
  6032 ;; *************** function _vfpfcnvrt *****************
  6033 ;; Defined at:
  6034 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c"
  6035 ;; Parameters:    Size  Location     Type
  6036 ;;  fp              2   63[COMRAM] PTR struct _IO_FILE
  6037 ;;		 -> sprintf@f(11), 
  6038 ;;  fmt             2   65[COMRAM] PTR PTR unsigned char 
  6039 ;;		 -> vfprintf@cfmt(2), 
  6040 ;;  ap              2   67[COMRAM] PTR PTR void 
  6041 ;;		 -> sprintf@ap(2), 
  6042 ;; Auto vars:     Size  Location     Type
  6043 ;;  ll              8   71[COMRAM] long long 
  6044 ;;  llu             8    0        unsigned long long 
  6045 ;;  f               4    0        unsigned long long 
  6046 ;;  vp              3    0        PTR void 
  6047 ;;  ct              3    0        unsigned char [3]
  6048 ;;  cp              3    0        PTR unsigned char 
  6049 ;;  i               2    0        int 
  6050 ;;  done            2    0        int 
  6051 ;;  c               1    0        unsigned char 
  6052 ;; Return value:  Size  Location     Type
  6053 ;;                  2   63[COMRAM] int 
  6054 ;; Registers used:
  6055 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6056 ;; Tracked objects:
  6057 ;;		On entry : 0/0
  6058 ;;		On exit  : 0/0
  6059 ;;		Unchanged: 0/0
  6060 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6061 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6062 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6063 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6064 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6065 ;;Total ram usage:       16 bytes
  6066 ;; Hardware stack levels used: 1
  6067 ;; Hardware stack levels required when called: 5
  6068 ;; This function calls:
  6069 ;;		_dtoa
  6070 ;;		_fputc
  6071 ;; This function is called by:
  6072 ;;		_vfprintf
  6073 ;; This function uses a non-reentrant model
  6074 ;;
  6075                           
  6076                           	psect	text22
  6077  002DB8                     __ptext22:
  6078                           	callstack 0
  6079  002DB8                     _vfpfcnvrt:
  6080                           	callstack 22
  6081  002DB8                     
  6082                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.35\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.35\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.35\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          5\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  6083  002DB8  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6084  002DBC  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6085  002DC0  CFDE FFF6          	movff	postinc2,tblptrl
  6086  002DC4  CFDD FFF7          	movff	postdec2,tblptrh
  6087  002DC8                     	if	0	;tblptru may be non-zero
  6088  002DC8                     	endif
  6089  002DC8                     	if	0	;tblptru may be non-zero
  6090  002DC8                     	endif
  6091  002DC8  0008               	tblrd		*
  6092  002DCA  50F5               	movf	tablat,w,c
  6093  002DCC  0A25               	xorlw	37
  6094  002DCE  A4D8               	btfss	status,2,c
  6095  002DD0  EFEC  F016         	goto	u3161
  6096  002DD4  EFEE  F016         	goto	u3160
  6097  002DD8                     u3161:
  6098  002DD8  EF9A  F017         	goto	l3532
  6099  002DDC                     u3160:
  6100  002DDC                     
  6101                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  6102  002DDC  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6103  002DE0  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6104  002DE4  2ADE               	incf	postinc2,f,c
  6105  002DE6  0E00               	movlw	0
  6106  002DE8  22DD               	addwfc	postdec2,f,c
  6107  002DEA                     
  6108                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  6109  002DEA  0E00               	movlw	0
  6110  002DEC  0100               	movlb	0	; () banked
  6111  002DEE  6FF1               	movwf	(_width+1)& (0+255),b
  6112  002DF0  0E00               	movlw	0
  6113  002DF2  6FF0               	movwf	_width& (0+255),b
  6114  002DF4  C0F0  F0F4         	movff	_width,_flags
  6115  002DF8  C0F1  F0F5         	movff	_width+1,_flags+1
  6116  002DFC                     
  6117                           ; BSR set to: 0
  6118                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  6119  002DFC  69F2               	setf	_prec& (0+255),b
  6120  002DFE  69F3               	setf	(_prec+1)& (0+255),b
  6121  002E00                     
  6122                           ; BSR set to: 0
  6123                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  6124  002E00  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6125  002E04  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6126  002E08  CFDE FFF6          	movff	postinc2,tblptrl
  6127  002E0C  CFDD FFF7          	movff	postdec2,tblptrh
  6128  002E10                     	if	0	;tblptru may be non-zero
  6129  002E10                     	endif
  6130  002E10                     	if	0	;tblptru may be non-zero
  6131  002E10                     	endif
  6132  002E10  0008               	tblrd		*
  6133  002E12  50F5               	movf	tablat,w,c
  6134  002E14  0A64               	xorlw	100
  6135  002E16  B4D8               	btfsc	status,2,c
  6136  002E18  EF10  F017         	goto	u3171
  6137  002E1C  EF12  F017         	goto	u3170
  6138  002E20                     u3171:
  6139  002E20  EF24  F017         	goto	l3510
  6140  002E24                     u3170:
  6141  002E24                     
  6142                           ; BSR set to: 0
  6143  002E24  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6144  002E28  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6145  002E2C  CFDE FFF6          	movff	postinc2,tblptrl
  6146  002E30  CFDD FFF7          	movff	postdec2,tblptrh
  6147  002E34                     	if	0	;tblptru may be non-zero
  6148  002E34                     	endif
  6149  002E34                     	if	0	;tblptru may be non-zero
  6150  002E34                     	endif
  6151  002E34  0008               	tblrd		*
  6152  002E36  50F5               	movf	tablat,w,c
  6153  002E38  0A69               	xorlw	105
  6154  002E3A  A4D8               	btfss	status,2,c
  6155  002E3C  EF22  F017         	goto	u3181
  6156  002E40  EF24  F017         	goto	u3180
  6157  002E44                     u3181:
  6158  002E44  EF64  F017         	goto	l3516
  6159  002E48                     u3180:
  6160  002E48                     l3510:
  6161                           
  6162                           ; BSR set to: 0
  6163                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  6164  002E48  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6165  002E4C  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6166  002E50  2ADE               	incf	postinc2,f,c
  6167  002E52  0E00               	movlw	0
  6168  002E54  22DD               	addwfc	postdec2,f,c
  6169                           
  6170                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  6171  002E56  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6172  002E5A  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6173  002E5E  CFDF F046          	movff	indf2,??_vfpfcnvrt
  6174  002E62  0E02               	movlw	2
  6175  002E64  26DE               	addwf	postinc2,f,c
  6176  002E66  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  6177  002E6A  0E00               	movlw	0
  6178  002E6C  22DD               	addwfc	postdec2,f,c
  6179  002E6E  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6180  002E72  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6181  002E76  CFDE F048          	movff	postinc2,vfpfcnvrt@ll
  6182  002E7A  CFDD F049          	movff	postdec2,vfpfcnvrt@ll+1
  6183  002E7E  0E00               	movlw	0
  6184  002E80  BE49               	btfsc	(vfpfcnvrt@ll+1)^0,7,c
  6185  002E82  0EFF               	movlw	-1
  6186  002E84  6E4A               	movwf	(vfpfcnvrt@ll+2)^0,c
  6187  002E86  6E4B               	movwf	(vfpfcnvrt@ll+3)^0,c
  6188  002E88  6E4C               	movwf	(vfpfcnvrt@ll+4)^0,c
  6189  002E8A  6E4D               	movwf	(vfpfcnvrt@ll+5)^0,c
  6190  002E8C  6E4E               	movwf	(vfpfcnvrt@ll+6)^0,c
  6191  002E8E  6E4F               	movwf	(vfpfcnvrt@ll+7)^0,c
  6192  002E90                     
  6193                           ; BSR set to: 0
  6194                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  6195  002E90  C040  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  6196  002E94  C041  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  6197  002E98  C048  F01E         	movff	vfpfcnvrt@ll,dtoa@d
  6198  002E9C  C049  F01F         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  6199  002EA0  C04A  F020         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  6200  002EA4  C04B  F021         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  6201  002EA8  C04C  F022         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  6202  002EAC  C04D  F023         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  6203  002EB0  C04E  F024         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  6204  002EB4  C04F  F025         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  6205  002EB8  EC90  F014         	call	_dtoa	;wreg free
  6206  002EBC  C01C  F040         	movff	?_dtoa,?_vfpfcnvrt
  6207  002EC0  C01D  F041         	movff	?_dtoa+1,?_vfpfcnvrt+1
  6208  002EC4  EFB5  F017         	goto	l1272
  6209  002EC8                     l3516:
  6210                           
  6211                           ; BSR set to: 0
  6212                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  6213  002EC8  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6214  002ECC  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6215  002ED0  CFDE FFF6          	movff	postinc2,tblptrl
  6216  002ED4  CFDD FFF7          	movff	postdec2,tblptrh
  6217  002ED8                     	if	0	;tblptru may be non-zero
  6218  002ED8                     	endif
  6219  002ED8                     	if	0	;tblptru may be non-zero
  6220  002ED8                     	endif
  6221  002ED8  0008               	tblrd		*
  6222  002EDA  50F5               	movf	tablat,w,c
  6223  002EDC  0A25               	xorlw	37
  6224  002EDE  A4D8               	btfss	status,2,c
  6225  002EE0  EF74  F017         	goto	u3191
  6226  002EE4  EF76  F017         	goto	u3190
  6227  002EE8                     u3191:
  6228  002EE8  EF8D  F017         	goto	l3526
  6229  002EEC                     u3190:
  6230  002EEC                     
  6231                           ; BSR set to: 0
  6232                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  6233  002EEC  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6234  002EF0  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6235  002EF4  2ADE               	incf	postinc2,f,c
  6236  002EF6  0E00               	movlw	0
  6237  002EF8  22DD               	addwfc	postdec2,f,c
  6238  002EFA                     
  6239                           ; BSR set to: 0
  6240                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  6241  002EFA  0E00               	movlw	0
  6242  002EFC  6E02               	movwf	(fputc@c+1)^0,c
  6243  002EFE  0E25               	movlw	37
  6244  002F00  6E01               	movwf	fputc@c^0,c
  6245  002F02  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
  6246  002F06  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  6247  002F0A  EC04  F01C         	call	_fputc	;wreg free
  6248  002F0E                     l3522:
  6249                           
  6250                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  6251  002F0E  0E00               	movlw	0
  6252  002F10  6E41               	movwf	(?_vfpfcnvrt+1)^0,c
  6253  002F12  0E01               	movlw	1
  6254  002F14  6E40               	movwf	?_vfpfcnvrt^0,c
  6255  002F16  EFB5  F017         	goto	l1272
  6256  002F1A                     l3526:
  6257                           
  6258                           ; BSR set to: 0
  6259                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  6260  002F1A  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6261  002F1E  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6262  002F22  2ADE               	incf	postinc2,f,c
  6263  002F24  0E00               	movlw	0
  6264  002F26  22DD               	addwfc	postdec2,f,c
  6265  002F28                     
  6266                           ; BSR set to: 0
  6267                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  6268  002F28  0E00               	movlw	0
  6269  002F2A  6E41               	movwf	(?_vfpfcnvrt+1)^0,c
  6270  002F2C  0E00               	movlw	0
  6271  002F2E  6E40               	movwf	?_vfpfcnvrt^0,c
  6272  002F30  EFB5  F017         	goto	l1272
  6273  002F34                     l3532:
  6274                           
  6275                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  6276  002F34  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6277  002F38  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6278  002F3C  CFDE FFF6          	movff	postinc2,tblptrl
  6279  002F40  CFDD FFF7          	movff	postdec2,tblptrh
  6280  002F44                     	if	0	;tblptru may be non-zero
  6281  002F44                     	endif
  6282  002F44                     	if	0	;tblptru may be non-zero
  6283  002F44                     	endif
  6284  002F44  0008               	tblrd		*
  6285  002F46  50F5               	movf	tablat,w,c
  6286  002F48  6E01               	movwf	fputc@c^0,c
  6287  002F4A  6A02               	clrf	(fputc@c+1)^0,c
  6288  002F4C  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
  6289  002F50  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  6290  002F54  EC04  F01C         	call	_fputc	;wreg free
  6291  002F58                     
  6292                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  6293  002F58  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6294  002F5C  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6295  002F60  2ADE               	incf	postinc2,f,c
  6296  002F62  0E00               	movlw	0
  6297  002F64  22DD               	addwfc	postdec2,f,c
  6298  002F66  EF87  F017         	goto	l3522
  6299  002F6A                     l1272:
  6300  002F6A  0012               	return		;funcret
  6301  002F6C                     __end_of_vfpfcnvrt:
  6302                           	callstack 0
  6303                           
  6304 ;; *************** function _dtoa *****************
  6305 ;; Defined at:
  6306 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c"
  6307 ;; Parameters:    Size  Location     Type
  6308 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  6309 ;;		 -> sprintf@f(11), 
  6310 ;;  d               8   29[COMRAM] long long 
  6311 ;; Auto vars:     Size  Location     Type
  6312 ;;  n               8   53[COMRAM] long long 
  6313 ;;  i               2   61[COMRAM] int 
  6314 ;;  s               2   51[COMRAM] int 
  6315 ;;  w               2   49[COMRAM] int 
  6316 ;;  p               2   47[COMRAM] int 
  6317 ;; Return value:  Size  Location     Type
  6318 ;;                  2   27[COMRAM] int 
  6319 ;; Registers used:
  6320 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6321 ;; Tracked objects:
  6322 ;;		On entry : 0/0
  6323 ;;		On exit  : 0/0
  6324 ;;		Unchanged: 0/0
  6325 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6326 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6327 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6328 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6329 ;;      Totals:        36       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6330 ;;Total ram usage:       36 bytes
  6331 ;; Hardware stack levels used: 1
  6332 ;; Hardware stack levels required when called: 4
  6333 ;; This function calls:
  6334 ;;		___aodiv
  6335 ;;		___aomod
  6336 ;;		_abs
  6337 ;;		_pad
  6338 ;; This function is called by:
  6339 ;;		_vfpfcnvrt
  6340 ;; This function uses a non-reentrant model
  6341 ;;
  6342                           
  6343                           	psect	text23
  6344  002920                     __ptext23:
  6345                           	callstack 0
  6346  002920                     _dtoa:
  6347                           	callstack 22
  6348  002920                     
  6349                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  6350  002920  C01E  F036         	movff	dtoa@d,dtoa@n
  6351  002924  C01F  F037         	movff	dtoa@d+1,dtoa@n+1
  6352  002928  C020  F038         	movff	dtoa@d+2,dtoa@n+2
  6353  00292C  C021  F039         	movff	dtoa@d+3,dtoa@n+3
  6354  002930  C022  F03A         	movff	dtoa@d+4,dtoa@n+4
  6355  002934  C023  F03B         	movff	dtoa@d+5,dtoa@n+5
  6356  002938  C024  F03C         	movff	dtoa@d+6,dtoa@n+6
  6357  00293C  C025  F03D         	movff	dtoa@d+7,dtoa@n+7
  6358  002940                     
  6359                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  6360  002940  BE3D               	btfsc	(dtoa@n+7)^0,7,c
  6361  002942  EFA5  F014         	goto	u2741
  6362  002946  EFA8  F014         	goto	u2740
  6363  00294A                     u2741:
  6364  00294A  0E01               	movlw	1
  6365  00294C  EFA9  F014         	goto	u2750
  6366  002950                     u2740:
  6367  002950  0E00               	movlw	0
  6368  002952                     u2750:
  6369  002952  6E34               	movwf	dtoa@s^0,c
  6370  002954  6A35               	clrf	(dtoa@s+1)^0,c
  6371                           
  6372                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  6373  002956  5034               	movf	dtoa@s^0,w,c
  6374  002958  1035               	iorwf	(dtoa@s+1)^0,w,c
  6375  00295A  B4D8               	btfsc	status,2,c
  6376  00295C  EFB2  F014         	goto	u2761
  6377  002960  EFB4  F014         	goto	u2760
  6378  002964                     u2761:
  6379  002964  EFC4  F014         	goto	l3246
  6380  002968                     u2760:
  6381  002968                     
  6382                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  6383  002968  1E3D               	comf	(dtoa@n+7)^0,f,c
  6384  00296A  1E3C               	comf	(dtoa@n+6)^0,f,c
  6385  00296C  1E3B               	comf	(dtoa@n+5)^0,f,c
  6386  00296E  1E3A               	comf	(dtoa@n+4)^0,f,c
  6387  002970  1E39               	comf	(dtoa@n+3)^0,f,c
  6388  002972  1E38               	comf	(dtoa@n+2)^0,f,c
  6389  002974  1E37               	comf	(dtoa@n+1)^0,f,c
  6390  002976  6C36               	negf	dtoa@n^0,c
  6391  002978  0E00               	movlw	0
  6392  00297A  2237               	addwfc	(dtoa@n+1)^0,f,c
  6393  00297C  2238               	addwfc	(dtoa@n+2)^0,f,c
  6394  00297E  2239               	addwfc	(dtoa@n+3)^0,f,c
  6395  002980  223A               	addwfc	(dtoa@n+4)^0,f,c
  6396  002982  223B               	addwfc	(dtoa@n+5)^0,f,c
  6397  002984  223C               	addwfc	(dtoa@n+6)^0,f,c
  6398  002986  223D               	addwfc	(dtoa@n+7)^0,f,c
  6399  002988                     l3246:
  6400                           
  6401                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  6402  002988  0100               	movlb	0	; () banked
  6403  00298A  BFF3               	btfsc	(_prec+1)& (0+255),7,b
  6404  00298C  EFCA  F014         	goto	u2771
  6405  002990  EFCC  F014         	goto	u2770
  6406  002994                     u2771:
  6407  002994  EFCD  F014         	goto	l3250
  6408  002998                     u2770:
  6409  002998                     
  6410                           ; BSR set to: 0
  6411                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  6412  002998  93F4               	bcf	_flags& (0+255),1,b
  6413  00299A                     l3250:
  6414                           
  6415                           ; BSR set to: 0
  6416                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  6417  00299A  BFF3               	btfsc	(_prec+1)& (0+255),7,b
  6418  00299C  EFDA  F014         	goto	u2780
  6419  0029A0  51F3               	movf	(_prec+1)& (0+255),w,b
  6420  0029A2  E106               	bnz	u2781
  6421  0029A4  05F2               	decf	_prec& (0+255),w,b
  6422  0029A6  B0D8               	btfsc	status,0,c
  6423  0029A8  EFD8  F014         	goto	u2781
  6424  0029AC  EFDA  F014         	goto	u2780
  6425  0029B0                     u2781:
  6426  0029B0  EFE0  F014         	goto	l1245
  6427  0029B4                     u2780:
  6428  0029B4                     
  6429                           ; BSR set to: 0
  6430  0029B4  0E00               	movlw	0
  6431  0029B6  6E31               	movwf	(dtoa@p+1)^0,c
  6432  0029B8  0E01               	movlw	1
  6433  0029BA  6E30               	movwf	dtoa@p^0,c
  6434  0029BC  EFE4  F014         	goto	l1247
  6435  0029C0                     l1245:
  6436                           
  6437                           ; BSR set to: 0
  6438  0029C0  C0F2  F030         	movff	_prec,dtoa@p
  6439  0029C4  C0F3  F031         	movff	_prec+1,dtoa@p+1
  6440  0029C8                     l1247:
  6441                           
  6442                           ; BSR set to: 0
  6443                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  6444  0029C8  C0F0  F032         	movff	_width,dtoa@w
  6445  0029CC  C0F1  F033         	movff	_width+1,dtoa@w+1
  6446  0029D0                     
  6447                           ; BSR set to: 0
  6448                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  6449  0029D0  5034               	movf	dtoa@s^0,w,c
  6450  0029D2  1035               	iorwf	(dtoa@s+1)^0,w,c
  6451  0029D4  A4D8               	btfss	status,2,c
  6452  0029D6  EFEF  F014         	goto	u2791
  6453  0029DA  EFF1  F014         	goto	u2790
  6454  0029DE                     u2791:
  6455  0029DE  EFF8  F014         	goto	l3258
  6456  0029E2                     u2790:
  6457  0029E2                     
  6458                           ; BSR set to: 0
  6459  0029E2  A5F4               	btfss	_flags& (0+255),2,b
  6460  0029E4  EFF6  F014         	goto	u2801
  6461  0029E8  EFF8  F014         	goto	u2800
  6462  0029EC                     u2801:
  6463  0029EC  EFFB  F014         	goto	l3260
  6464  0029F0                     u2800:
  6465  0029F0                     l3258:
  6466                           
  6467                           ; BSR set to: 0
  6468                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 306:         --w;
  6469  0029F0  0632               	decf	dtoa@w^0,f,c
  6470  0029F2  A0D8               	btfss	status,0,c
  6471  0029F4  0633               	decf	(dtoa@w+1)^0,f,c
  6472  0029F6                     l3260:
  6473                           
  6474                           ; BSR set to: 0
  6475                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  6476  0029F6  0E00               	movlw	0
  6477  0029F8  6E3F               	movwf	(dtoa@i+1)^0,c
  6478  0029FA  0E1F               	movlw	31
  6479  0029FC  6E3E               	movwf	dtoa@i^0,c
  6480  0029FE                     
  6481                           ; BSR set to: 0
  6482                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  6483  0029FE  0E00               	movlw	0
  6484  002A00  0101               	movlb	1	; () banked
  6485  002A02  6F79               	movwf	(_dbuf+31)& (0+255),b
  6486                           
  6487                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6488  002A04  EF80  F015         	goto	l3274
  6489  002A08                     l3264:
  6490                           
  6491                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 313:         --i;
  6492  002A08  063E               	decf	dtoa@i^0,f,c
  6493  002A0A  A0D8               	btfss	status,0,c
  6494  002A0C  063F               	decf	(dtoa@i+1)^0,f,c
  6495  002A0E                     
  6496                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  6497  002A0E  0E5A               	movlw	low _dbuf
  6498  002A10  243E               	addwf	dtoa@i^0,w,c
  6499  002A12  6ED9               	movwf	fsr2l,c
  6500  002A14  0E01               	movlw	high _dbuf
  6501  002A16  203F               	addwfc	(dtoa@i+1)^0,w,c
  6502  002A18  6EDA               	movwf	fsr2h,c
  6503  002A1A  C036  F001         	movff	dtoa@n,___aomod@dividend
  6504  002A1E  C037  F002         	movff	dtoa@n+1,___aomod@dividend+1
  6505  002A22  C038  F003         	movff	dtoa@n+2,___aomod@dividend+2
  6506  002A26  C039  F004         	movff	dtoa@n+3,___aomod@dividend+3
  6507  002A2A  C03A  F005         	movff	dtoa@n+4,___aomod@dividend+4
  6508  002A2E  C03B  F006         	movff	dtoa@n+5,___aomod@dividend+5
  6509  002A32  C03C  F007         	movff	dtoa@n+6,___aomod@dividend+6
  6510  002A36  C03D  F008         	movff	dtoa@n+7,___aomod@dividend+7
  6511  002A3A  0E0A               	movlw	10
  6512  002A3C  6E09               	movwf	___aomod@divisor^0,c
  6513  002A3E  0E00               	movlw	0
  6514  002A40  6E0A               	movwf	(___aomod@divisor+1)^0,c
  6515  002A42  0E00               	movlw	0
  6516  002A44  6E0B               	movwf	(___aomod@divisor+2)^0,c
  6517  002A46  0E00               	movlw	0
  6518  002A48  6E0C               	movwf	(___aomod@divisor+3)^0,c
  6519  002A4A  0E00               	movlw	0
  6520  002A4C  6E0D               	movwf	(___aomod@divisor+4)^0,c
  6521  002A4E  0E00               	movlw	0
  6522  002A50  6E0E               	movwf	(___aomod@divisor+5)^0,c
  6523  002A52  0E00               	movlw	0
  6524  002A54  6E0F               	movwf	(___aomod@divisor+6)^0,c
  6525  002A56  0E00               	movlw	0
  6526  002A58  6E10               	movwf	(___aomod@divisor+7)^0,c
  6527  002A5A  EC7A  F018         	call	___aomod	;wreg free
  6528  002A5E  C001  F026         	movff	?___aomod,??_dtoa
  6529  002A62  C002  F027         	movff	?___aomod+1,??_dtoa+1
  6530  002A66  C003  F028         	movff	?___aomod+2,??_dtoa+2
  6531  002A6A  C004  F029         	movff	?___aomod+3,??_dtoa+3
  6532  002A6E  C005  F02A         	movff	?___aomod+4,??_dtoa+4
  6533  002A72  C006  F02B         	movff	?___aomod+5,??_dtoa+5
  6534  002A76  C007  F02C         	movff	?___aomod+6,??_dtoa+6
  6535  002A7A  C008  F02D         	movff	?___aomod+7,??_dtoa+7
  6536  002A7E  C026  F013         	movff	??_dtoa,abs@a
  6537  002A82  C028  F014         	movff	??_dtoa+2,abs@a+1
  6538  002A86  ECB4  F01E         	call	_abs	;wreg free
  6539  002A8A  5013               	movf	?_abs^0,w,c
  6540  002A8C  0F30               	addlw	48
  6541  002A8E  6EDF               	movwf	indf2,c
  6542  002A90                     
  6543                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 315:         --p;
  6544  002A90  0630               	decf	dtoa@p^0,f,c
  6545  002A92  A0D8               	btfss	status,0,c
  6546  002A94  0631               	decf	(dtoa@p+1)^0,f,c
  6547  002A96                     
  6548                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 316:         --w;
  6549  002A96  0632               	decf	dtoa@w^0,f,c
  6550  002A98  A0D8               	btfss	status,0,c
  6551  002A9A  0633               	decf	(dtoa@w+1)^0,f,c
  6552  002A9C                     
  6553                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  6554  002A9C  C036  F001         	movff	dtoa@n,___aodiv@dividend
  6555  002AA0  C037  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  6556  002AA4  C038  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  6557  002AA8  C039  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  6558  002AAC  C03A  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  6559  002AB0  C03B  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  6560  002AB4  C03C  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  6561  002AB8  C03D  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  6562  002ABC  0E0A               	movlw	10
  6563  002ABE  6E09               	movwf	___aodiv@divisor^0,c
  6564  002AC0  0E00               	movlw	0
  6565  002AC2  6E0A               	movwf	(___aodiv@divisor+1)^0,c
  6566  002AC4  0E00               	movlw	0
  6567  002AC6  6E0B               	movwf	(___aodiv@divisor+2)^0,c
  6568  002AC8  0E00               	movlw	0
  6569  002ACA  6E0C               	movwf	(___aodiv@divisor+3)^0,c
  6570  002ACC  0E00               	movlw	0
  6571  002ACE  6E0D               	movwf	(___aodiv@divisor+4)^0,c
  6572  002AD0  0E00               	movlw	0
  6573  002AD2  6E0E               	movwf	(___aodiv@divisor+5)^0,c
  6574  002AD4  0E00               	movlw	0
  6575  002AD6  6E0F               	movwf	(___aodiv@divisor+6)^0,c
  6576  002AD8  0E00               	movlw	0
  6577  002ADA  6E10               	movwf	(___aodiv@divisor+7)^0,c
  6578  002ADC  ECB6  F017         	call	___aodiv	;wreg free
  6579  002AE0  C001  F036         	movff	?___aodiv,dtoa@n
  6580  002AE4  C002  F037         	movff	?___aodiv+1,dtoa@n+1
  6581  002AE8  C003  F038         	movff	?___aodiv+2,dtoa@n+2
  6582  002AEC  C004  F039         	movff	?___aodiv+3,dtoa@n+3
  6583  002AF0  C005  F03A         	movff	?___aodiv+4,dtoa@n+4
  6584  002AF4  C006  F03B         	movff	?___aodiv+5,dtoa@n+5
  6585  002AF8  C007  F03C         	movff	?___aodiv+6,dtoa@n+6
  6586  002AFC  C008  F03D         	movff	?___aodiv+7,dtoa@n+7
  6587  002B00                     l3274:
  6588                           
  6589                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6590  002B00  BE3F               	btfsc	(dtoa@i+1)^0,7,c
  6591  002B02  EF8B  F015         	goto	u2811
  6592  002B06  503F               	movf	(dtoa@i+1)^0,w,c
  6593  002B08  E108               	bnz	u2810
  6594  002B0A  043E               	decf	dtoa@i^0,w,c
  6595  002B0C  A0D8               	btfss	status,0,c
  6596  002B0E  EF8B  F015         	goto	u2811
  6597  002B12  EF8D  F015         	goto	u2810
  6598  002B16                     u2811:
  6599  002B16  EFBE  F015         	goto	l3284
  6600  002B1A                     u2810:
  6601  002B1A  5036               	movf	dtoa@n^0,w,c
  6602  002B1C  1037               	iorwf	(dtoa@n+1)^0,w,c
  6603  002B1E  1038               	iorwf	(dtoa@n+2)^0,w,c
  6604  002B20  1039               	iorwf	(dtoa@n+3)^0,w,c
  6605  002B22  103A               	iorwf	(dtoa@n+4)^0,w,c
  6606  002B24  103B               	iorwf	(dtoa@n+5)^0,w,c
  6607  002B26  103C               	iorwf	(dtoa@n+6)^0,w,c
  6608  002B28  103D               	iorwf	(dtoa@n+7)^0,w,c
  6609  002B2A  A4D8               	btfss	status,2,c
  6610  002B2C  EF9A  F015         	goto	u2821
  6611  002B30  EF9C  F015         	goto	u2820
  6612  002B34                     u2821:
  6613  002B34  EF04  F015         	goto	l3264
  6614  002B38                     u2820:
  6615  002B38  BE31               	btfsc	(dtoa@p+1)^0,7,c
  6616  002B3A  EFA9  F015         	goto	u2830
  6617  002B3E  5031               	movf	(dtoa@p+1)^0,w,c
  6618  002B40  E106               	bnz	u2831
  6619  002B42  0430               	decf	dtoa@p^0,w,c
  6620  002B44  B0D8               	btfsc	status,0,c
  6621  002B46  EFA7  F015         	goto	u2831
  6622  002B4A  EFA9  F015         	goto	u2830
  6623  002B4E                     u2831:
  6624  002B4E  EF04  F015         	goto	l3264
  6625  002B52                     u2830:
  6626  002B52  BE33               	btfsc	(dtoa@w+1)^0,7,c
  6627  002B54  EFB4  F015         	goto	u2841
  6628  002B58  5033               	movf	(dtoa@w+1)^0,w,c
  6629  002B5A  E108               	bnz	u2840
  6630  002B5C  0432               	decf	dtoa@w^0,w,c
  6631  002B5E  A0D8               	btfss	status,0,c
  6632  002B60  EFB4  F015         	goto	u2841
  6633  002B64  EFB6  F015         	goto	u2840
  6634  002B68                     u2841:
  6635  002B68  EFBE  F015         	goto	l3284
  6636  002B6C                     u2840:
  6637  002B6C  0100               	movlb	0	; () banked
  6638  002B6E  B3F4               	btfsc	_flags& (0+255),1,b
  6639  002B70  EFBC  F015         	goto	u2851
  6640  002B74  EFBE  F015         	goto	u2850
  6641  002B78                     u2851:
  6642  002B78  EF04  F015         	goto	l3264
  6643  002B7C                     u2850:
  6644  002B7C                     l3284:
  6645                           
  6646                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  6647  002B7C  5034               	movf	dtoa@s^0,w,c
  6648  002B7E  1035               	iorwf	(dtoa@s+1)^0,w,c
  6649  002B80  A4D8               	btfss	status,2,c
  6650  002B82  EFC5  F015         	goto	u2861
  6651  002B86  EFC7  F015         	goto	u2860
  6652  002B8A                     u2861:
  6653  002B8A  EFCF  F015         	goto	l3288
  6654  002B8E                     u2860:
  6655  002B8E  0100               	movlb	0	; () banked
  6656  002B90  A5F4               	btfss	_flags& (0+255),2,b
  6657  002B92  EFCD  F015         	goto	u2871
  6658  002B96  EFCF  F015         	goto	u2870
  6659  002B9A                     u2871:
  6660  002B9A  EFED  F015         	goto	l3298
  6661  002B9E                     u2870:
  6662  002B9E                     l3288:
  6663                           
  6664                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 322:         --i;
  6665  002B9E  063E               	decf	dtoa@i^0,f,c
  6666  002BA0  A0D8               	btfss	status,0,c
  6667  002BA2  063F               	decf	(dtoa@i+1)^0,f,c
  6668  002BA4                     
  6669                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  6670  002BA4  5034               	movf	dtoa@s^0,w,c
  6671  002BA6  1035               	iorwf	(dtoa@s+1)^0,w,c
  6672  002BA8  A4D8               	btfss	status,2,c
  6673  002BAA  EFD9  F015         	goto	u2881
  6674  002BAE  EFDB  F015         	goto	u2880
  6675  002BB2                     u2881:
  6676  002BB2  EFE1  F015         	goto	l3294
  6677  002BB6                     u2880:
  6678  002BB6  0E00               	movlw	0
  6679  002BB8  6E2F               	movwf	(_dtoa$2329+1)^0,c
  6680  002BBA  0E2B               	movlw	43
  6681  002BBC  6E2E               	movwf	_dtoa$2329^0,c
  6682  002BBE  EFE5  F015         	goto	l3296
  6683  002BC2                     l3294:
  6684  002BC2  0E00               	movlw	0
  6685  002BC4  6E2F               	movwf	(_dtoa$2329+1)^0,c
  6686  002BC6  0E2D               	movlw	45
  6687  002BC8  6E2E               	movwf	_dtoa$2329^0,c
  6688  002BCA                     l3296:
  6689  002BCA  0E5A               	movlw	low _dbuf
  6690  002BCC  243E               	addwf	dtoa@i^0,w,c
  6691  002BCE  6ED9               	movwf	fsr2l,c
  6692  002BD0  0E01               	movlw	high _dbuf
  6693  002BD2  203F               	addwfc	(dtoa@i+1)^0,w,c
  6694  002BD4  6EDA               	movwf	fsr2h,c
  6695  002BD6  C02E  FFDF         	movff	_dtoa$2329,indf2
  6696  002BDA                     l3298:
  6697                           
  6698                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  6699  002BDA  C01C  F011         	movff	dtoa@fp,pad@fp
  6700  002BDE  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
  6701  002BE2  0E5A               	movlw	low _dbuf
  6702  002BE4  243E               	addwf	dtoa@i^0,w,c
  6703  002BE6  6E13               	movwf	pad@buf^0,c
  6704  002BE8  0E01               	movlw	high _dbuf
  6705  002BEA  203F               	addwfc	(dtoa@i+1)^0,w,c
  6706  002BEC  6E14               	movwf	(pad@buf+1)^0,c
  6707  002BEE  C032  F015         	movff	dtoa@w,pad@p
  6708  002BF2  C033  F016         	movff	dtoa@w+1,pad@p+1
  6709  002BF6  EC69  F01C         	call	_pad	;wreg free
  6710  002BFA  C011  F01C         	movff	?_pad,?_dtoa
  6711  002BFE  C012  F01D         	movff	?_pad+1,?_dtoa+1
  6712  002C02  0012               	return		;funcret
  6713  002C04                     __end_of_dtoa:
  6714                           	callstack 0
  6715                           
  6716 ;; *************** function _pad *****************
  6717 ;; Defined at:
  6718 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c"
  6719 ;; Parameters:    Size  Location     Type
  6720 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  6721 ;;		 -> sprintf@f(11), 
  6722 ;;  buf             2   18[COMRAM] PTR unsigned char 
  6723 ;;		 -> dbuf(32), 
  6724 ;;  p               2   20[COMRAM] int 
  6725 ;; Auto vars:     Size  Location     Type
  6726 ;;  w               2   25[COMRAM] int 
  6727 ;;  i               2   23[COMRAM] int 
  6728 ;; Return value:  Size  Location     Type
  6729 ;;                  2   16[COMRAM] int 
  6730 ;; Registers used:
  6731 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6732 ;; Tracked objects:
  6733 ;;		On entry : 0/0
  6734 ;;		On exit  : 0/0
  6735 ;;		Unchanged: 0/0
  6736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6737 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6738 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6739 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6740 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6741 ;;Total ram usage:       11 bytes
  6742 ;; Hardware stack levels used: 1
  6743 ;; Hardware stack levels required when called: 3
  6744 ;; This function calls:
  6745 ;;		_fputc
  6746 ;;		_fputs
  6747 ;;		_strlen
  6748 ;; This function is called by:
  6749 ;;		_dtoa
  6750 ;; This function uses a non-reentrant model
  6751 ;;
  6752                           
  6753                           	psect	text24
  6754  0038D2                     __ptext24:
  6755                           	callstack 0
  6756  0038D2                     _pad:
  6757                           	callstack 22
  6758  0038D2                     
  6759                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  6760  0038D2  0100               	movlb	0	; () banked
  6761  0038D4  A1F4               	btfss	_flags& (0+255),0,b
  6762  0038D6  EF6F  F01C         	goto	u2281
  6763  0038DA  EF71  F01C         	goto	u2280
  6764  0038DE                     u2281:
  6765  0038DE  EF7B  F01C         	goto	l3012
  6766  0038E2                     u2280:
  6767  0038E2                     
  6768                           ; BSR set to: 0
  6769                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  6770  0038E2  C013  F00A         	movff	pad@buf,fputs@s
  6771  0038E6  C014  F00B         	movff	pad@buf+1,fputs@s+1
  6772  0038EA  C011  F00C         	movff	pad@fp,fputs@fp
  6773  0038EE  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  6774  0038F2  EC50  F01E         	call	_fputs	;wreg free
  6775  0038F6                     l3012:
  6776                           
  6777                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  6778  0038F6  BE16               	btfsc	(pad@p+1)^0,7,c
  6779  0038F8  EF80  F01C         	goto	u2291
  6780  0038FC  EF82  F01C         	goto	u2290
  6781  003900                     u2291:
  6782  003900  EF88  F01C         	goto	l3016
  6783  003904                     u2290:
  6784  003904  C015  F01A         	movff	pad@p,pad@w
  6785  003908  C016  F01B         	movff	pad@p+1,pad@w+1
  6786  00390C  EF8C  F01C         	goto	l1234
  6787  003910                     l3016:
  6788  003910  0E00               	movlw	0
  6789  003912  6E1B               	movwf	(pad@w+1)^0,c
  6790  003914  0E00               	movlw	0
  6791  003916  6E1A               	movwf	pad@w^0,c
  6792  003918                     l1234:
  6793                           
  6794                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  6795  003918  0E00               	movlw	0
  6796  00391A  6E19               	movwf	(pad@i+1)^0,c
  6797  00391C  0E00               	movlw	0
  6798  00391E  6E18               	movwf	pad@i^0,c
  6799                           
  6800                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  6801  003920  EF9E  F01C         	goto	l3022
  6802  003924                     l3018:
  6803                           
  6804                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  6805  003924  0E00               	movlw	0
  6806  003926  6E02               	movwf	(fputc@c+1)^0,c
  6807  003928  0E20               	movlw	32
  6808  00392A  6E01               	movwf	fputc@c^0,c
  6809  00392C  C011  F003         	movff	pad@fp,fputc@fp
  6810  003930  C012  F004         	movff	pad@fp+1,fputc@fp+1
  6811  003934  EC04  F01C         	call	_fputc	;wreg free
  6812  003938                     
  6813                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 86:         ++i;
  6814  003938  4A18               	infsnz	pad@i^0,f,c
  6815  00393A  2A19               	incf	(pad@i+1)^0,f,c
  6816  00393C                     l3022:
  6817                           
  6818                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  6819  00393C  501A               	movf	pad@w^0,w,c
  6820  00393E  5C18               	subwf	pad@i^0,w,c
  6821  003940  5019               	movf	(pad@i+1)^0,w,c
  6822  003942  0A80               	xorlw	128
  6823  003944  6E17               	movwf	??_pad^0,c
  6824  003946  501B               	movf	(pad@w+1)^0,w,c
  6825  003948  0A80               	xorlw	128
  6826  00394A  5817               	subwfb	??_pad^0,w,c
  6827  00394C  A0D8               	btfss	status,0,c
  6828  00394E  EFAB  F01C         	goto	u2301
  6829  003952  EFAD  F01C         	goto	u2300
  6830  003956                     u2301:
  6831  003956  EF92  F01C         	goto	l3018
  6832  00395A                     u2300:
  6833  00395A                     
  6834                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  6835  00395A  0100               	movlb	0	; () banked
  6836  00395C  B1F4               	btfsc	_flags& (0+255),0,b
  6837  00395E  EFB3  F01C         	goto	u2311
  6838  003962  EFB5  F01C         	goto	u2310
  6839  003966                     u2311:
  6840  003966  EFBF  F01C         	goto	l3026
  6841  00396A                     u2310:
  6842  00396A                     
  6843                           ; BSR set to: 0
  6844                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  6845  00396A  C013  F00A         	movff	pad@buf,fputs@s
  6846  00396E  C014  F00B         	movff	pad@buf+1,fputs@s+1
  6847  003972  C011  F00C         	movff	pad@fp,fputs@fp
  6848  003976  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  6849  00397A  EC50  F01E         	call	_fputs	;wreg free
  6850  00397E                     l3026:
  6851                           
  6852                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  6853  00397E  C013  F001         	movff	pad@buf,strlen@s
  6854  003982  C014  F002         	movff	pad@buf+1,strlen@s+1
  6855  003986  EC49  F01F         	call	_strlen	;wreg free
  6856  00398A  501A               	movf	pad@w^0,w,c
  6857  00398C  2401               	addwf	?_strlen^0,w,c
  6858  00398E  6E11               	movwf	?_pad^0,c
  6859  003990  501B               	movf	(pad@w+1)^0,w,c
  6860  003992  2002               	addwfc	(?_strlen+1)^0,w,c
  6861  003994  6E12               	movwf	(?_pad+1)^0,c
  6862  003996  0012               	return		;funcret
  6863  003998                     __end_of_pad:
  6864                           	callstack 0
  6865                           
  6866 ;; *************** function _strlen *****************
  6867 ;; Defined at:
  6868 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\strlen.c"
  6869 ;; Parameters:    Size  Location     Type
  6870 ;;  s               2    0[COMRAM] PTR const unsigned char 
  6871 ;;		 -> dbuf(32), 
  6872 ;; Auto vars:     Size  Location     Type
  6873 ;;  a               2    2[COMRAM] PTR const unsigned char 
  6874 ;;		 -> dbuf(32), 
  6875 ;; Return value:  Size  Location     Type
  6876 ;;                  2    0[COMRAM] unsigned int 
  6877 ;; Registers used:
  6878 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6879 ;; Tracked objects:
  6880 ;;		On entry : 0/0
  6881 ;;		On exit  : 0/0
  6882 ;;		Unchanged: 0/0
  6883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6884 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6885 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6886 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6887 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6888 ;;Total ram usage:        4 bytes
  6889 ;; Hardware stack levels used: 1
  6890 ;; This function calls:
  6891 ;;		Nothing
  6892 ;; This function is called by:
  6893 ;;		_pad
  6894 ;; This function uses a non-reentrant model
  6895 ;;
  6896                           
  6897                           	psect	text25
  6898  003E92                     __ptext25:
  6899                           	callstack 0
  6900  003E92                     _strlen:
  6901                           	callstack 24
  6902  003E92  C001  F003         	movff	strlen@s,strlen@a
  6903  003E96  C002  F004         	movff	strlen@s+1,strlen@a+1
  6904  003E9A  EF51  F01F         	goto	l2922
  6905  003E9E                     l2920:
  6906  003E9E  4A01               	infsnz	strlen@s^0,f,c
  6907  003EA0  2A02               	incf	(strlen@s+1)^0,f,c
  6908  003EA2                     l2922:
  6909  003EA2  C001  FFD9         	movff	strlen@s,fsr2l
  6910  003EA6  C002  FFDA         	movff	strlen@s+1,fsr2h
  6911  003EAA  50DF               	movf	indf2,w,c
  6912  003EAC  A4D8               	btfss	status,2,c
  6913  003EAE  EF5B  F01F         	goto	u2141
  6914  003EB2  EF5D  F01F         	goto	u2140
  6915  003EB6                     u2141:
  6916  003EB6  EF4F  F01F         	goto	l2920
  6917  003EBA                     u2140:
  6918  003EBA  5003               	movf	strlen@a^0,w,c
  6919  003EBC  5C01               	subwf	strlen@s^0,w,c
  6920  003EBE  6E01               	movwf	?_strlen^0,c
  6921  003EC0  5004               	movf	(strlen@a+1)^0,w,c
  6922  003EC2  5802               	subwfb	(strlen@s+1)^0,w,c
  6923  003EC4  6E02               	movwf	(?_strlen+1)^0,c
  6924  003EC6  0012               	return		;funcret
  6925  003EC8                     __end_of_strlen:
  6926                           	callstack 0
  6927                           
  6928 ;; *************** function _fputs *****************
  6929 ;; Defined at:
  6930 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\nf_fputs.c"
  6931 ;; Parameters:    Size  Location     Type
  6932 ;;  s               2    9[COMRAM] PTR const unsigned char 
  6933 ;;		 -> dbuf(32), 
  6934 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  6935 ;;		 -> sprintf@f(11), 
  6936 ;; Auto vars:     Size  Location     Type
  6937 ;;  i               2   14[COMRAM] int 
  6938 ;;  c               1   13[COMRAM] unsigned char 
  6939 ;; Return value:  Size  Location     Type
  6940 ;;                  2    9[COMRAM] int 
  6941 ;; Registers used:
  6942 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6943 ;; Tracked objects:
  6944 ;;		On entry : 0/0
  6945 ;;		On exit  : 0/0
  6946 ;;		Unchanged: 0/0
  6947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6948 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6949 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6950 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6951 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6952 ;;Total ram usage:        7 bytes
  6953 ;; Hardware stack levels used: 1
  6954 ;; Hardware stack levels required when called: 2
  6955 ;; This function calls:
  6956 ;;		_fputc
  6957 ;; This function is called by:
  6958 ;;		_pad
  6959 ;; This function uses a non-reentrant model
  6960 ;;
  6961                           
  6962                           	psect	text26
  6963  003CA0                     __ptext26:
  6964                           	callstack 0
  6965  003CA0                     _fputs:
  6966                           	callstack 22
  6967  003CA0  0E00               	movlw	0
  6968  003CA2  6E10               	movwf	(fputs@i+1)^0,c
  6969  003CA4  0E00               	movlw	0
  6970  003CA6  6E0F               	movwf	fputs@i^0,c
  6971  003CA8  EF61  F01E         	goto	l2916
  6972  003CAC                     l2912:
  6973  003CAC  C00E  F001         	movff	fputs@c,fputc@c
  6974  003CB0  6A02               	clrf	(fputc@c+1)^0,c
  6975  003CB2  C00C  F003         	movff	fputs@fp,fputc@fp
  6976  003CB6  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  6977  003CBA  EC04  F01C         	call	_fputc	;wreg free
  6978  003CBE  4A0F               	infsnz	fputs@i^0,f,c
  6979  003CC0  2A10               	incf	(fputs@i+1)^0,f,c
  6980  003CC2                     l2916:
  6981  003CC2  500F               	movf	fputs@i^0,w,c
  6982  003CC4  240A               	addwf	fputs@s^0,w,c
  6983  003CC6  6ED9               	movwf	fsr2l,c
  6984  003CC8  5010               	movf	(fputs@i+1)^0,w,c
  6985  003CCA  200B               	addwfc	(fputs@s+1)^0,w,c
  6986  003CCC  6EDA               	movwf	fsr2h,c
  6987  003CCE  50DF               	movf	indf2,w,c
  6988  003CD0  6E0E               	movwf	fputs@c^0,c
  6989  003CD2  500E               	movf	fputs@c^0,w,c
  6990  003CD4  A4D8               	btfss	status,2,c
  6991  003CD6  EF6F  F01E         	goto	u2131
  6992  003CDA  EF71  F01E         	goto	u2130
  6993  003CDE                     u2131:
  6994  003CDE  EF56  F01E         	goto	l2912
  6995  003CE2                     u2130:
  6996  003CE2  0012               	return		;funcret
  6997  003CE4                     __end_of_fputs:
  6998                           	callstack 0
  6999                           
  7000 ;; *************** function _fputc *****************
  7001 ;; Defined at:
  7002 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\nf_fputc.c"
  7003 ;; Parameters:    Size  Location     Type
  7004 ;;  c               2    0[COMRAM] int 
  7005 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  7006 ;;		 -> sprintf@f(11), 
  7007 ;; Auto vars:     Size  Location     Type
  7008 ;;		None
  7009 ;; Return value:  Size  Location     Type
  7010 ;;                  2    0[COMRAM] int 
  7011 ;; Registers used:
  7012 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7013 ;; Tracked objects:
  7014 ;;		On entry : 0/0
  7015 ;;		On exit  : 0/0
  7016 ;;		Unchanged: 0/0
  7017 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7018 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7019 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7020 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7021 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7022 ;;Total ram usage:        9 bytes
  7023 ;; Hardware stack levels used: 1
  7024 ;; Hardware stack levels required when called: 1
  7025 ;; This function calls:
  7026 ;;		_putch
  7027 ;; This function is called by:
  7028 ;;		_pad
  7029 ;;		_vfpfcnvrt
  7030 ;;		_fputs
  7031 ;; This function uses a non-reentrant model
  7032 ;;
  7033                           
  7034                           	psect	text27
  7035  003808                     __ptext27:
  7036                           	callstack 0
  7037  003808                     _fputc:
  7038                           	callstack 25
  7039  003808  5003               	movf	fputc@fp^0,w,c
  7040  00380A  1004               	iorwf	(fputc@fp+1)^0,w,c
  7041  00380C  B4D8               	btfsc	status,2,c
  7042  00380E  EF0B  F01C         	goto	u2091
  7043  003812  EF0D  F01C         	goto	u2090
  7044  003816                     u2091:
  7045  003816  EF16  F01C         	goto	l2900
  7046  00381A                     u2090:
  7047  00381A  5003               	movf	fputc@fp^0,w,c
  7048  00381C  1004               	iorwf	(fputc@fp+1)^0,w,c
  7049  00381E  A4D8               	btfss	status,2,c
  7050  003820  EF14  F01C         	goto	u2101
  7051  003824  EF16  F01C         	goto	u2100
  7052  003828                     u2101:
  7053  003828  EF1B  F01C         	goto	l2902
  7054  00382C                     u2100:
  7055  00382C                     l2900:
  7056  00382C  5001               	movf	fputc@c^0,w,c
  7057  00382E  EC46  F020         	call	_putch
  7058  003832  EF68  F01C         	goto	l1298
  7059  003836                     l2902:
  7060  003836  EE20 F009          	lfsr	2,9
  7061  00383A  5003               	movf	fputc@fp^0,w,c
  7062  00383C  26D9               	addwf	fsr2l,f,c
  7063  00383E  5004               	movf	(fputc@fp+1)^0,w,c
  7064  003840  22DA               	addwfc	fsr2h,f,c
  7065  003842  50DE               	movf	postinc2,w,c
  7066  003844  10DE               	iorwf	postinc2,w,c
  7067  003846  B4D8               	btfsc	status,2,c
  7068  003848  EF28  F01C         	goto	u2111
  7069  00384C  EF2A  F01C         	goto	u2110
  7070  003850                     u2111:
  7071  003850  EF45  F01C         	goto	l2906
  7072  003854                     u2110:
  7073  003854  EE20 F009          	lfsr	2,9
  7074  003858  5003               	movf	fputc@fp^0,w,c
  7075  00385A  26D9               	addwf	fsr2l,f,c
  7076  00385C  5004               	movf	(fputc@fp+1)^0,w,c
  7077  00385E  22DA               	addwfc	fsr2h,f,c
  7078  003860  EE10 F003          	lfsr	1,3
  7079  003864  5003               	movf	fputc@fp^0,w,c
  7080  003866  26E1               	addwf	fsr1l,f,c
  7081  003868  5004               	movf	(fputc@fp+1)^0,w,c
  7082  00386A  22E2               	addwfc	fsr1h,f,c
  7083  00386C  50DE               	movf	postinc2,w,c
  7084  00386E  5CE6               	subwf	postinc1,w,c
  7085  003870  50E6               	movf	postinc1,w,c
  7086  003872  0A80               	xorlw	128
  7087  003874  6E09               	movwf	(??_fputc+4)^0,c
  7088  003876  50DE               	movf	postinc2,w,c
  7089  003878  0A80               	xorlw	128
  7090  00387A  5809               	subwfb	(??_fputc+4)^0,w,c
  7091  00387C  B0D8               	btfsc	status,0,c
  7092  00387E  EF43  F01C         	goto	u2121
  7093  003882  EF45  F01C         	goto	u2120
  7094  003886                     u2121:
  7095  003886  EF68  F01C         	goto	l1298
  7096  00388A                     u2120:
  7097  00388A                     l2906:
  7098  00388A  EE20 F003          	lfsr	2,3
  7099  00388E  5003               	movf	fputc@fp^0,w,c
  7100  003890  26D9               	addwf	fsr2l,f,c
  7101  003892  5004               	movf	(fputc@fp+1)^0,w,c
  7102  003894  22DA               	addwfc	fsr2h,f,c
  7103  003896  CFDE F005          	movff	postinc2,??_fputc
  7104  00389A  CFDD F006          	movff	postdec2,??_fputc+1
  7105  00389E  C003  FFD9         	movff	fputc@fp,fsr2l
  7106  0038A2  C004  FFDA         	movff	fputc@fp+1,fsr2h
  7107  0038A6  CFDE F007          	movff	postinc2,??_fputc+2
  7108  0038AA  CFDD F008          	movff	postdec2,??_fputc+3
  7109  0038AE  5005               	movf	??_fputc^0,w,c
  7110  0038B0  2407               	addwf	(??_fputc+2)^0,w,c
  7111  0038B2  6ED9               	movwf	fsr2l,c
  7112  0038B4  5006               	movf	(??_fputc+1)^0,w,c
  7113  0038B6  2008               	addwfc	(??_fputc+3)^0,w,c
  7114  0038B8  6EDA               	movwf	fsr2h,c
  7115  0038BA  C001  FFDF         	movff	fputc@c,indf2
  7116  0038BE  EE20 F003          	lfsr	2,3
  7117  0038C2  5003               	movf	fputc@fp^0,w,c
  7118  0038C4  26D9               	addwf	fsr2l,f,c
  7119  0038C6  5004               	movf	(fputc@fp+1)^0,w,c
  7120  0038C8  22DA               	addwfc	fsr2h,f,c
  7121  0038CA  2ADE               	incf	postinc2,f,c
  7122  0038CC  0E00               	movlw	0
  7123  0038CE  22DD               	addwfc	postdec2,f,c
  7124  0038D0                     l1298:
  7125  0038D0  0012               	return		;funcret
  7126  0038D2                     __end_of_fputc:
  7127                           	callstack 0
  7128                           
  7129 ;; *************** function _putch *****************
  7130 ;; Defined at:
  7131 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\putch.c"
  7132 ;; Parameters:    Size  Location     Type
  7133 ;;  c               1    wreg     unsigned char 
  7134 ;; Auto vars:     Size  Location     Type
  7135 ;;  c               1    0[COMRAM] unsigned char 
  7136 ;; Return value:  Size  Location     Type
  7137 ;;                  1    wreg      void 
  7138 ;; Registers used:
  7139 ;;		wreg
  7140 ;; Tracked objects:
  7141 ;;		On entry : 0/0
  7142 ;;		On exit  : 0/0
  7143 ;;		Unchanged: 0/0
  7144 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7145 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7146 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7147 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7148 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7149 ;;Total ram usage:        0 bytes
  7150 ;; Hardware stack levels used: 1
  7151 ;; This function calls:
  7152 ;;		Nothing
  7153 ;; This function is called by:
  7154 ;;		_fputc
  7155 ;; This function uses a non-reentrant model
  7156 ;;
  7157                           
  7158                           	psect	text28
  7159  00408C                     __ptext28:
  7160                           	callstack 0
  7161  00408C                     _putch:
  7162                           	callstack 25
  7163  00408C  0012               	return		;funcret
  7164  00408E                     __end_of_putch:
  7165                           	callstack 0
  7166                           
  7167 ;; *************** function _abs *****************
  7168 ;; Defined at:
  7169 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\abs.c"
  7170 ;; Parameters:    Size  Location     Type
  7171 ;;  a               2   18[COMRAM] int 
  7172 ;; Auto vars:     Size  Location     Type
  7173 ;;		None
  7174 ;; Return value:  Size  Location     Type
  7175 ;;                  2   18[COMRAM] int 
  7176 ;; Registers used:
  7177 ;;		wreg, status,2, status,0
  7178 ;; Tracked objects:
  7179 ;;		On entry : 0/0
  7180 ;;		On exit  : 0/0
  7181 ;;		Unchanged: 0/0
  7182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7183 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7184 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7185 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7186 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7187 ;;Total ram usage:        4 bytes
  7188 ;; Hardware stack levels used: 1
  7189 ;; This function calls:
  7190 ;;		Nothing
  7191 ;; This function is called by:
  7192 ;;		_dtoa
  7193 ;; This function uses a non-reentrant model
  7194 ;;
  7195                           
  7196                           	psect	text29
  7197  003D68                     __ptext29:
  7198                           	callstack 0
  7199  003D68                     _abs:
  7200                           	callstack 25
  7201  003D68  BE14               	btfsc	(abs@a+1)^0,7,c
  7202  003D6A  EFC1  F01E         	goto	u2320
  7203  003D6E  5014               	movf	(abs@a+1)^0,w,c
  7204  003D70  E106               	bnz	u2321
  7205  003D72  0413               	decf	abs@a^0,w,c
  7206  003D74  B0D8               	btfsc	status,0,c
  7207  003D76  EFBF  F01E         	goto	u2321
  7208  003D7A  EFC1  F01E         	goto	u2320
  7209  003D7E                     u2321:
  7210  003D7E  EFCF  F01E         	goto	l1283
  7211  003D82                     u2320:
  7212  003D82  C013  F015         	movff	abs@a,??_abs
  7213  003D86  C014  F016         	movff	abs@a+1,??_abs+1
  7214  003D8A  1E15               	comf	??_abs^0,f,c
  7215  003D8C  1E16               	comf	(??_abs+1)^0,f,c
  7216  003D8E  4A15               	infsnz	??_abs^0,f,c
  7217  003D90  2A16               	incf	(??_abs+1)^0,f,c
  7218  003D92  C015  F013         	movff	??_abs,?_abs
  7219  003D96  C016  F014         	movff	??_abs+1,?_abs+1
  7220  003D9A  EFD3  F01E         	goto	l1286
  7221  003D9E                     l1283:
  7222  003D9E  C013  F013         	movff	abs@a,?_abs
  7223  003DA2  C014  F014         	movff	abs@a+1,?_abs+1
  7224  003DA6                     l1286:
  7225  003DA6  0012               	return		;funcret
  7226  003DA8                     __end_of_abs:
  7227                           	callstack 0
  7228                           
  7229 ;; *************** function ___aomod *****************
  7230 ;; Defined at:
  7231 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\aomod.c"
  7232 ;; Parameters:    Size  Location     Type
  7233 ;;  dividend        8    0[COMRAM] long long 
  7234 ;;  divisor         8    8[COMRAM] long long 
  7235 ;; Auto vars:     Size  Location     Type
  7236 ;;  sign            1   17[COMRAM] unsigned char 
  7237 ;;  counter         1   16[COMRAM] unsigned char 
  7238 ;; Return value:  Size  Location     Type
  7239 ;;                  8    0[COMRAM] long long 
  7240 ;; Registers used:
  7241 ;;		wreg, status,2, status,0
  7242 ;; Tracked objects:
  7243 ;;		On entry : 0/0
  7244 ;;		On exit  : 0/0
  7245 ;;		Unchanged: 0/0
  7246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7247 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7248 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7249 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7250 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7251 ;;Total ram usage:       18 bytes
  7252 ;; Hardware stack levels used: 1
  7253 ;; This function calls:
  7254 ;;		Nothing
  7255 ;; This function is called by:
  7256 ;;		_dtoa
  7257 ;; This function uses a non-reentrant model
  7258 ;;
  7259                           
  7260                           	psect	text30
  7261  0030F4                     __ptext30:
  7262                           	callstack 0
  7263  0030F4                     ___aomod:
  7264                           	callstack 25
  7265  0030F4  0E00               	movlw	0
  7266  0030F6  6E12               	movwf	___aomod@sign^0,c
  7267  0030F8  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
  7268  0030FA  EF83  F018         	goto	u2220
  7269  0030FE  EF81  F018         	goto	u2221
  7270  003102                     u2221:
  7271  003102  EF95  F018         	goto	l2980
  7272  003106                     u2220:
  7273  003106  1E08               	comf	(___aomod@dividend+7)^0,f,c
  7274  003108  1E07               	comf	(___aomod@dividend+6)^0,f,c
  7275  00310A  1E06               	comf	(___aomod@dividend+5)^0,f,c
  7276  00310C  1E05               	comf	(___aomod@dividend+4)^0,f,c
  7277  00310E  1E04               	comf	(___aomod@dividend+3)^0,f,c
  7278  003110  1E03               	comf	(___aomod@dividend+2)^0,f,c
  7279  003112  1E02               	comf	(___aomod@dividend+1)^0,f,c
  7280  003114  6C01               	negf	___aomod@dividend^0,c
  7281  003116  0E00               	movlw	0
  7282  003118  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  7283  00311A  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  7284  00311C  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  7285  00311E  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  7286  003120  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  7287  003122  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  7288  003124  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  7289  003126  0E01               	movlw	1
  7290  003128  6E12               	movwf	___aomod@sign^0,c
  7291  00312A                     l2980:
  7292  00312A  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
  7293  00312C  EF9C  F018         	goto	u2230
  7294  003130  EF9A  F018         	goto	u2231
  7295  003134                     u2231:
  7296  003134  EFAC  F018         	goto	l2984
  7297  003138                     u2230:
  7298  003138  1E10               	comf	(___aomod@divisor+7)^0,f,c
  7299  00313A  1E0F               	comf	(___aomod@divisor+6)^0,f,c
  7300  00313C  1E0E               	comf	(___aomod@divisor+5)^0,f,c
  7301  00313E  1E0D               	comf	(___aomod@divisor+4)^0,f,c
  7302  003140  1E0C               	comf	(___aomod@divisor+3)^0,f,c
  7303  003142  1E0B               	comf	(___aomod@divisor+2)^0,f,c
  7304  003144  1E0A               	comf	(___aomod@divisor+1)^0,f,c
  7305  003146  6C09               	negf	___aomod@divisor^0,c
  7306  003148  0E00               	movlw	0
  7307  00314A  220A               	addwfc	(___aomod@divisor+1)^0,f,c
  7308  00314C  220B               	addwfc	(___aomod@divisor+2)^0,f,c
  7309  00314E  220C               	addwfc	(___aomod@divisor+3)^0,f,c
  7310  003150  220D               	addwfc	(___aomod@divisor+4)^0,f,c
  7311  003152  220E               	addwfc	(___aomod@divisor+5)^0,f,c
  7312  003154  220F               	addwfc	(___aomod@divisor+6)^0,f,c
  7313  003156  2210               	addwfc	(___aomod@divisor+7)^0,f,c
  7314  003158                     l2984:
  7315  003158  5009               	movf	___aomod@divisor^0,w,c
  7316  00315A  100A               	iorwf	(___aomod@divisor+1)^0,w,c
  7317  00315C  100B               	iorwf	(___aomod@divisor+2)^0,w,c
  7318  00315E  100C               	iorwf	(___aomod@divisor+3)^0,w,c
  7319  003160  100D               	iorwf	(___aomod@divisor+4)^0,w,c
  7320  003162  100E               	iorwf	(___aomod@divisor+5)^0,w,c
  7321  003164  100F               	iorwf	(___aomod@divisor+6)^0,w,c
  7322  003166  1010               	iorwf	(___aomod@divisor+7)^0,w,c
  7323  003168  B4D8               	btfsc	status,2,c
  7324  00316A  EFB9  F018         	goto	u2241
  7325  00316E  EFBB  F018         	goto	u2240
  7326  003172                     u2241:
  7327  003172  EF03  F019         	goto	l3000
  7328  003176                     u2240:
  7329  003176  0E01               	movlw	1
  7330  003178  6E11               	movwf	___aomod@counter^0,c
  7331  00317A  EFC9  F018         	goto	l2990
  7332  00317E                     l2988:
  7333  00317E  90D8               	bcf	status,0,c
  7334  003180  3609               	rlcf	___aomod@divisor^0,f,c
  7335  003182  360A               	rlcf	(___aomod@divisor+1)^0,f,c
  7336  003184  360B               	rlcf	(___aomod@divisor+2)^0,f,c
  7337  003186  360C               	rlcf	(___aomod@divisor+3)^0,f,c
  7338  003188  360D               	rlcf	(___aomod@divisor+4)^0,f,c
  7339  00318A  360E               	rlcf	(___aomod@divisor+5)^0,f,c
  7340  00318C  360F               	rlcf	(___aomod@divisor+6)^0,f,c
  7341  00318E  3610               	rlcf	(___aomod@divisor+7)^0,f,c
  7342  003190  2A11               	incf	___aomod@counter^0,f,c
  7343  003192                     l2990:
  7344  003192  AE10               	btfss	(___aomod@divisor+7)^0,7,c
  7345  003194  EFCE  F018         	goto	u2251
  7346  003198  EFD0  F018         	goto	u2250
  7347  00319C                     u2251:
  7348  00319C  EFBF  F018         	goto	l2988
  7349  0031A0                     u2250:
  7350  0031A0                     l2992:
  7351  0031A0  5009               	movf	___aomod@divisor^0,w,c
  7352  0031A2  5C01               	subwf	___aomod@dividend^0,w,c
  7353  0031A4  500A               	movf	(___aomod@divisor+1)^0,w,c
  7354  0031A6  5802               	subwfb	(___aomod@dividend+1)^0,w,c
  7355  0031A8  500B               	movf	(___aomod@divisor+2)^0,w,c
  7356  0031AA  5803               	subwfb	(___aomod@dividend+2)^0,w,c
  7357  0031AC  500C               	movf	(___aomod@divisor+3)^0,w,c
  7358  0031AE  5804               	subwfb	(___aomod@dividend+3)^0,w,c
  7359  0031B0  500D               	movf	(___aomod@divisor+4)^0,w,c
  7360  0031B2  5805               	subwfb	(___aomod@dividend+4)^0,w,c
  7361  0031B4  500E               	movf	(___aomod@divisor+5)^0,w,c
  7362  0031B6  5806               	subwfb	(___aomod@dividend+5)^0,w,c
  7363  0031B8  500F               	movf	(___aomod@divisor+6)^0,w,c
  7364  0031BA  5807               	subwfb	(___aomod@dividend+6)^0,w,c
  7365  0031BC  5010               	movf	(___aomod@divisor+7)^0,w,c
  7366  0031BE  5808               	subwfb	(___aomod@dividend+7)^0,w,c
  7367  0031C0  A0D8               	btfss	status,0,c
  7368  0031C2  EFE5  F018         	goto	u2261
  7369  0031C6  EFE7  F018         	goto	u2260
  7370  0031CA                     u2261:
  7371  0031CA  EFF7  F018         	goto	l2996
  7372  0031CE                     u2260:
  7373  0031CE  5009               	movf	___aomod@divisor^0,w,c
  7374  0031D0  5E01               	subwf	___aomod@dividend^0,f,c
  7375  0031D2  500A               	movf	(___aomod@divisor+1)^0,w,c
  7376  0031D4  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
  7377  0031D6  500B               	movf	(___aomod@divisor+2)^0,w,c
  7378  0031D8  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
  7379  0031DA  500C               	movf	(___aomod@divisor+3)^0,w,c
  7380  0031DC  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
  7381  0031DE  500D               	movf	(___aomod@divisor+4)^0,w,c
  7382  0031E0  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
  7383  0031E2  500E               	movf	(___aomod@divisor+5)^0,w,c
  7384  0031E4  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
  7385  0031E6  500F               	movf	(___aomod@divisor+6)^0,w,c
  7386  0031E8  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
  7387  0031EA  5010               	movf	(___aomod@divisor+7)^0,w,c
  7388  0031EC  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
  7389  0031EE                     l2996:
  7390  0031EE  90D8               	bcf	status,0,c
  7391  0031F0  3210               	rrcf	(___aomod@divisor+7)^0,f,c
  7392  0031F2  320F               	rrcf	(___aomod@divisor+6)^0,f,c
  7393  0031F4  320E               	rrcf	(___aomod@divisor+5)^0,f,c
  7394  0031F6  320D               	rrcf	(___aomod@divisor+4)^0,f,c
  7395  0031F8  320C               	rrcf	(___aomod@divisor+3)^0,f,c
  7396  0031FA  320B               	rrcf	(___aomod@divisor+2)^0,f,c
  7397  0031FC  320A               	rrcf	(___aomod@divisor+1)^0,f,c
  7398  0031FE  3209               	rrcf	___aomod@divisor^0,f,c
  7399  003200  2E11               	decfsz	___aomod@counter^0,f,c
  7400  003202  EFD0  F018         	goto	l2992
  7401  003206                     l3000:
  7402  003206  5012               	movf	___aomod@sign^0,w,c
  7403  003208  B4D8               	btfsc	status,2,c
  7404  00320A  EF09  F019         	goto	u2271
  7405  00320E  EF0B  F019         	goto	u2270
  7406  003212                     u2271:
  7407  003212  EF1B  F019         	goto	l3004
  7408  003216                     u2270:
  7409  003216  1E08               	comf	(___aomod@dividend+7)^0,f,c
  7410  003218  1E07               	comf	(___aomod@dividend+6)^0,f,c
  7411  00321A  1E06               	comf	(___aomod@dividend+5)^0,f,c
  7412  00321C  1E05               	comf	(___aomod@dividend+4)^0,f,c
  7413  00321E  1E04               	comf	(___aomod@dividend+3)^0,f,c
  7414  003220  1E03               	comf	(___aomod@dividend+2)^0,f,c
  7415  003222  1E02               	comf	(___aomod@dividend+1)^0,f,c
  7416  003224  6C01               	negf	___aomod@dividend^0,c
  7417  003226  0E00               	movlw	0
  7418  003228  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  7419  00322A  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  7420  00322C  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  7421  00322E  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  7422  003230  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  7423  003232  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  7424  003234  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  7425  003236                     l3004:
  7426  003236  C001  F001         	movff	___aomod@dividend,?___aomod
  7427  00323A  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  7428  00323E  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  7429  003242  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  7430  003246  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  7431  00324A  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  7432  00324E  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  7433  003252  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  7434  003256  0012               	return		;funcret
  7435  003258                     __end_of___aomod:
  7436                           	callstack 0
  7437                           
  7438 ;; *************** function ___aodiv *****************
  7439 ;; Defined at:
  7440 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\aodiv.c"
  7441 ;; Parameters:    Size  Location     Type
  7442 ;;  dividend        8    0[COMRAM] long long 
  7443 ;;  divisor         8    8[COMRAM] long long 
  7444 ;; Auto vars:     Size  Location     Type
  7445 ;;  quotient        8   18[COMRAM] long long 
  7446 ;;  sign            1   17[COMRAM] unsigned char 
  7447 ;;  counter         1   16[COMRAM] unsigned char 
  7448 ;; Return value:  Size  Location     Type
  7449 ;;                  8    0[COMRAM] long long 
  7450 ;; Registers used:
  7451 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7452 ;; Tracked objects:
  7453 ;;		On entry : 0/0
  7454 ;;		On exit  : 0/0
  7455 ;;		Unchanged: 0/0
  7456 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7457 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7458 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7459 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7460 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7461 ;;Total ram usage:       26 bytes
  7462 ;; Hardware stack levels used: 1
  7463 ;; This function calls:
  7464 ;;		Nothing
  7465 ;; This function is called by:
  7466 ;;		_dtoa
  7467 ;; This function uses a non-reentrant model
  7468 ;;
  7469                           
  7470                           	psect	text31
  7471  002F6C                     __ptext31:
  7472                           	callstack 0
  7473  002F6C                     ___aodiv:
  7474                           	callstack 25
  7475  002F6C  0E00               	movlw	0
  7476  002F6E  6E12               	movwf	___aodiv@sign^0,c
  7477  002F70  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
  7478  002F72  EFBF  F017         	goto	u2150
  7479  002F76  EFBD  F017         	goto	u2151
  7480  002F7A                     u2151:
  7481  002F7A  EFD1  F017         	goto	l2936
  7482  002F7E                     u2150:
  7483  002F7E  1E10               	comf	(___aodiv@divisor+7)^0,f,c
  7484  002F80  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
  7485  002F82  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
  7486  002F84  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
  7487  002F86  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
  7488  002F88  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
  7489  002F8A  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
  7490  002F8C  6C09               	negf	___aodiv@divisor^0,c
  7491  002F8E  0E00               	movlw	0
  7492  002F90  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
  7493  002F92  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
  7494  002F94  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
  7495  002F96  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
  7496  002F98  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
  7497  002F9A  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
  7498  002F9C  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
  7499  002F9E  0E01               	movlw	1
  7500  002FA0  6E12               	movwf	___aodiv@sign^0,c
  7501  002FA2                     l2936:
  7502  002FA2  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
  7503  002FA4  EFD8  F017         	goto	u2160
  7504  002FA8  EFD6  F017         	goto	u2161
  7505  002FAC                     u2161:
  7506  002FAC  EFEA  F017         	goto	l2942
  7507  002FB0                     u2160:
  7508  002FB0  1E08               	comf	(___aodiv@dividend+7)^0,f,c
  7509  002FB2  1E07               	comf	(___aodiv@dividend+6)^0,f,c
  7510  002FB4  1E06               	comf	(___aodiv@dividend+5)^0,f,c
  7511  002FB6  1E05               	comf	(___aodiv@dividend+4)^0,f,c
  7512  002FB8  1E04               	comf	(___aodiv@dividend+3)^0,f,c
  7513  002FBA  1E03               	comf	(___aodiv@dividend+2)^0,f,c
  7514  002FBC  1E02               	comf	(___aodiv@dividend+1)^0,f,c
  7515  002FBE  6C01               	negf	___aodiv@dividend^0,c
  7516  002FC0  0E00               	movlw	0
  7517  002FC2  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
  7518  002FC4  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
  7519  002FC6  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
  7520  002FC8  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
  7521  002FCA  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
  7522  002FCC  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
  7523  002FCE  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
  7524  002FD0  0E01               	movlw	1
  7525  002FD2  1A12               	xorwf	___aodiv@sign^0,f,c
  7526  002FD4                     l2942:
  7527  002FD4  EE20  F013         	lfsr	2,___aodiv@quotient
  7528  002FD8  0E07               	movlw	7
  7529  002FDA                     u2171:
  7530  002FDA  6ADE               	clrf	postinc2,c
  7531  002FDC  06E8               	decf	wreg,f,c
  7532  002FDE  E2FD               	bc	u2171
  7533  002FE0  5009               	movf	___aodiv@divisor^0,w,c
  7534  002FE2  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
  7535  002FE4  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
  7536  002FE6  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
  7537  002FE8  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
  7538  002FEA  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
  7539  002FEC  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
  7540  002FEE  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
  7541  002FF0  B4D8               	btfsc	status,2,c
  7542  002FF2  EFFD  F017         	goto	u2181
  7543  002FF6  EFFF  F017         	goto	u2180
  7544  002FFA                     u2181:
  7545  002FFA  EF51  F018         	goto	l2964
  7546  002FFE                     u2180:
  7547  002FFE  0E01               	movlw	1
  7548  003000  6E11               	movwf	___aodiv@counter^0,c
  7549  003002  EF0D  F018         	goto	l2950
  7550  003006                     l2948:
  7551  003006  90D8               	bcf	status,0,c
  7552  003008  3609               	rlcf	___aodiv@divisor^0,f,c
  7553  00300A  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
  7554  00300C  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
  7555  00300E  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
  7556  003010  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
  7557  003012  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
  7558  003014  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
  7559  003016  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
  7560  003018  2A11               	incf	___aodiv@counter^0,f,c
  7561  00301A                     l2950:
  7562  00301A  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
  7563  00301C  EF12  F018         	goto	u2191
  7564  003020  EF14  F018         	goto	u2190
  7565  003024                     u2191:
  7566  003024  EF03  F018         	goto	l2948
  7567  003028                     u2190:
  7568  003028                     l2952:
  7569  003028  90D8               	bcf	status,0,c
  7570  00302A  3613               	rlcf	___aodiv@quotient^0,f,c
  7571  00302C  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
  7572  00302E  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
  7573  003030  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
  7574  003032  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
  7575  003034  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
  7576  003036  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
  7577  003038  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
  7578  00303A  5009               	movf	___aodiv@divisor^0,w,c
  7579  00303C  5C01               	subwf	___aodiv@dividend^0,w,c
  7580  00303E  500A               	movf	(___aodiv@divisor+1)^0,w,c
  7581  003040  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
  7582  003042  500B               	movf	(___aodiv@divisor+2)^0,w,c
  7583  003044  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
  7584  003046  500C               	movf	(___aodiv@divisor+3)^0,w,c
  7585  003048  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
  7586  00304A  500D               	movf	(___aodiv@divisor+4)^0,w,c
  7587  00304C  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
  7588  00304E  500E               	movf	(___aodiv@divisor+5)^0,w,c
  7589  003050  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
  7590  003052  500F               	movf	(___aodiv@divisor+6)^0,w,c
  7591  003054  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
  7592  003056  5010               	movf	(___aodiv@divisor+7)^0,w,c
  7593  003058  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
  7594  00305A  A0D8               	btfss	status,0,c
  7595  00305C  EF32  F018         	goto	u2201
  7596  003060  EF34  F018         	goto	u2200
  7597  003064                     u2201:
  7598  003064  EF45  F018         	goto	l2960
  7599  003068                     u2200:
  7600  003068  5009               	movf	___aodiv@divisor^0,w,c
  7601  00306A  5E01               	subwf	___aodiv@dividend^0,f,c
  7602  00306C  500A               	movf	(___aodiv@divisor+1)^0,w,c
  7603  00306E  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
  7604  003070  500B               	movf	(___aodiv@divisor+2)^0,w,c
  7605  003072  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
  7606  003074  500C               	movf	(___aodiv@divisor+3)^0,w,c
  7607  003076  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
  7608  003078  500D               	movf	(___aodiv@divisor+4)^0,w,c
  7609  00307A  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
  7610  00307C  500E               	movf	(___aodiv@divisor+5)^0,w,c
  7611  00307E  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
  7612  003080  500F               	movf	(___aodiv@divisor+6)^0,w,c
  7613  003082  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
  7614  003084  5010               	movf	(___aodiv@divisor+7)^0,w,c
  7615  003086  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
  7616  003088  8013               	bsf	___aodiv@quotient^0,0,c
  7617  00308A                     l2960:
  7618  00308A  90D8               	bcf	status,0,c
  7619  00308C  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
  7620  00308E  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
  7621  003090  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
  7622  003092  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
  7623  003094  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
  7624  003096  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
  7625  003098  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
  7626  00309A  3209               	rrcf	___aodiv@divisor^0,f,c
  7627  00309C  2E11               	decfsz	___aodiv@counter^0,f,c
  7628  00309E  EF14  F018         	goto	l2952
  7629  0030A2                     l2964:
  7630  0030A2  5012               	movf	___aodiv@sign^0,w,c
  7631  0030A4  B4D8               	btfsc	status,2,c
  7632  0030A6  EF57  F018         	goto	u2211
  7633  0030AA  EF59  F018         	goto	u2210
  7634  0030AE                     u2211:
  7635  0030AE  EF69  F018         	goto	l2968
  7636  0030B2                     u2210:
  7637  0030B2  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
  7638  0030B4  1E19               	comf	(___aodiv@quotient+6)^0,f,c
  7639  0030B6  1E18               	comf	(___aodiv@quotient+5)^0,f,c
  7640  0030B8  1E17               	comf	(___aodiv@quotient+4)^0,f,c
  7641  0030BA  1E16               	comf	(___aodiv@quotient+3)^0,f,c
  7642  0030BC  1E15               	comf	(___aodiv@quotient+2)^0,f,c
  7643  0030BE  1E14               	comf	(___aodiv@quotient+1)^0,f,c
  7644  0030C0  6C13               	negf	___aodiv@quotient^0,c
  7645  0030C2  0E00               	movlw	0
  7646  0030C4  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
  7647  0030C6  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
  7648  0030C8  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
  7649  0030CA  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
  7650  0030CC  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
  7651  0030CE  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
  7652  0030D0  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
  7653  0030D2                     l2968:
  7654  0030D2  C013  F001         	movff	___aodiv@quotient,?___aodiv
  7655  0030D6  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  7656  0030DA  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  7657  0030DE  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  7658  0030E2  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  7659  0030E6  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  7660  0030EA  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  7661  0030EE  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  7662  0030F2  0012               	return		;funcret
  7663  0030F4                     __end_of___aodiv:
  7664                           	callstack 0
  7665                           
  7666 ;; *************** function _sendStringSerial4 *****************
  7667 ;; Defined at:
  7668 ;;		line 36 in file "serial.c"
  7669 ;; Parameters:    Size  Location     Type
  7670 ;;  string          2    1[COMRAM] PTR unsigned char 
  7671 ;;		 -> voltage_display@buf(80), color_predict@buf(100), check_color_reading@buf(100), color_display@buf(100), 
  7672 ;; Auto vars:     Size  Location     Type
  7673 ;;		None
  7674 ;; Return value:  Size  Location     Type
  7675 ;;                  1    wreg      void 
  7676 ;; Registers used:
  7677 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7678 ;; Tracked objects:
  7679 ;;		On entry : 0/0
  7680 ;;		On exit  : 0/0
  7681 ;;		Unchanged: 0/0
  7682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7683 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7684 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7685 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7686 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7687 ;;Total ram usage:        2 bytes
  7688 ;; Hardware stack levels used: 1
  7689 ;; Hardware stack levels required when called: 1
  7690 ;; This function calls:
  7691 ;;		_sendCharSerial4
  7692 ;; This function is called by:
  7693 ;;		_color_display
  7694 ;;		_color_predict
  7695 ;;		_check_color_reading
  7696 ;;		_voltage_display
  7697 ;; This function uses a non-reentrant model
  7698 ;;
  7699                           
  7700                           	psect	text32
  7701  003EFC                     __ptext32:
  7702                           	callstack 0
  7703  003EFC                     _sendStringSerial4:
  7704                           	callstack 28
  7705  003EFC                     
  7706                           ;serial.c: 38:     while(*string != 0){
  7707  003EFC  EF89  F01F         	goto	l3710
  7708  003F00                     l3706:
  7709                           
  7710                           ;serial.c: 39:   sendCharSerial4(*string++);}
  7711  003F00  C002  FFD9         	movff	sendStringSerial4@string,fsr2l
  7712  003F04  C003  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  7713  003F08  50DF               	movf	indf2,w,c
  7714  003F0A  EC1E  F020         	call	_sendCharSerial4
  7715  003F0E  4A02               	infsnz	sendStringSerial4@string^0,f,c
  7716  003F10  2A03               	incf	(sendStringSerial4@string+1)^0,f,c
  7717  003F12                     l3710:
  7718                           
  7719                           ;serial.c: 38:     while(*string != 0){
  7720  003F12  C002  FFD9         	movff	sendStringSerial4@string,fsr2l
  7721  003F16  C003  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  7722  003F1A  50DF               	movf	indf2,w,c
  7723  003F1C  A4D8               	btfss	status,2,c
  7724  003F1E  EF93  F01F         	goto	u3391
  7725  003F22  EF95  F01F         	goto	u3390
  7726  003F26                     u3391:
  7727  003F26  EF80  F01F         	goto	l3706
  7728  003F2A                     u3390:
  7729  003F2A  0012               	return		;funcret
  7730  003F2C                     __end_of_sendStringSerial4:
  7731                           	callstack 0
  7732                           
  7733 ;; *************** function _sendCharSerial4 *****************
  7734 ;; Defined at:
  7735 ;;		line 29 in file "serial.c"
  7736 ;; Parameters:    Size  Location     Type
  7737 ;;  charToSend      1    wreg     unsigned char 
  7738 ;; Auto vars:     Size  Location     Type
  7739 ;;  charToSend      1    0[COMRAM] unsigned char 
  7740 ;; Return value:  Size  Location     Type
  7741 ;;                  1    wreg      void 
  7742 ;; Registers used:
  7743 ;;		wreg
  7744 ;; Tracked objects:
  7745 ;;		On entry : 0/0
  7746 ;;		On exit  : 0/0
  7747 ;;		Unchanged: 0/0
  7748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7749 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7750 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7751 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7752 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7753 ;;Total ram usage:        1 bytes
  7754 ;; Hardware stack levels used: 1
  7755 ;; This function calls:
  7756 ;;		Nothing
  7757 ;; This function is called by:
  7758 ;;		_sendStringSerial4
  7759 ;; This function uses a non-reentrant model
  7760 ;;
  7761                           
  7762                           	psect	text33
  7763  00403C                     __ptext33:
  7764                           	callstack 0
  7765  00403C                     _sendCharSerial4:
  7766                           	callstack 28
  7767                           
  7768                           ;incstack = 0
  7769                           ;sendCharSerial4@charToSend stored from wreg
  7770  00403C  6E01               	movwf	sendCharSerial4@charToSend^0,c
  7771  00403E                     l352:
  7772  00403E  010E               	movlb	14	; () banked
  7773  004040  A537               	btfss	55,2,b	;volatile
  7774  004042  EF25  F020         	goto	u3211
  7775  004046  EF27  F020         	goto	u3210
  7776  00404A                     u3211:
  7777  00404A  EF1F  F020         	goto	l352
  7778  00404E                     u3210:
  7779  00404E                     
  7780                           ; BSR set to: 14
  7781                           ;serial.c: 31:     TX4REG = charToSend;
  7782  00404E  C001  FEE4         	movff	sendCharSerial4@charToSend,3812	;volatile
  7783  004052                     
  7784                           ; BSR set to: 14
  7785  004052  0012               	return		;funcret
  7786  004054                     __end_of_sendCharSerial4:
  7787                           	callstack 0
  7788                           
  7789 ;; *************** function _color_click_init *****************
  7790 ;; Defined at:
  7791 ;;		line 12 in file "color.c"
  7792 ;; Parameters:    Size  Location     Type
  7793 ;;		None
  7794 ;; Auto vars:     Size  Location     Type
  7795 ;;		None
  7796 ;; Return value:  Size  Location     Type
  7797 ;;                  1    wreg      void 
  7798 ;; Registers used:
  7799 ;;		wreg, status,2, status,0, cstack
  7800 ;; Tracked objects:
  7801 ;;		On entry : 0/0
  7802 ;;		On exit  : 0/0
  7803 ;;		Unchanged: 0/0
  7804 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7805 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7806 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7807 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7808 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7809 ;;Total ram usage:        1 bytes
  7810 ;; Hardware stack levels used: 1
  7811 ;; Hardware stack levels required when called: 3
  7812 ;; This function calls:
  7813 ;;		_I2C_2_Master_Init
  7814 ;;		_color_writetoaddr
  7815 ;; This function is called by:
  7816 ;;		_main
  7817 ;; This function uses a non-reentrant model
  7818 ;;
  7819                           
  7820                           	psect	text34
  7821  003EC8                     __ptext34:
  7822                           	callstack 0
  7823  003EC8                     _color_click_init:
  7824                           	callstack 27
  7825  003EC8                     
  7826                           ;color.c: 15:     I2C_2_Master_Init();
  7827  003EC8  EC96  F01F         	call	_I2C_2_Master_Init	;wreg free
  7828  003ECC                     
  7829                           ;color.c: 18:   color_writetoaddr(0x00, 0x01);
  7830  003ECC  0E01               	movlw	1
  7831  003ECE  6E03               	movwf	color_writetoaddr@value^0,c
  7832  003ED0  0E00               	movlw	0
  7833  003ED2  ECBF  F01F         	call	_color_writetoaddr
  7834  003ED6                     
  7835                           ;color.c: 19:     _delay((unsigned long)((3)*(64000000/4000.0)));
  7836  003ED6  0E3F               	movlw	63
  7837  003ED8  6E05               	movwf	??_color_click_init^0,c
  7838  003EDA  0E55               	movlw	85
  7839  003EDC                     u4277:
  7840  003EDC  2EE8               	decfsz	wreg,f,c
  7841  003EDE  D7FE               	bra	u4277
  7842  003EE0  2E05               	decfsz	??_color_click_init^0,f,c
  7843  003EE2  D7FC               	bra	u4277
  7844  003EE4  F000               	nop	
  7845  003EE6                     
  7846                           ;color.c: 22:  color_writetoaddr(0x00, 0x03);
  7847  003EE6  0E03               	movlw	3
  7848  003EE8  6E03               	movwf	color_writetoaddr@value^0,c
  7849  003EEA  0E00               	movlw	0
  7850  003EEC  ECBF  F01F         	call	_color_writetoaddr
  7851  003EF0                     
  7852                           ;color.c: 25:  color_writetoaddr(0x01, 0xD5);
  7853  003EF0  0ED5               	movlw	213
  7854  003EF2  6E03               	movwf	color_writetoaddr@value^0,c
  7855  003EF4  0E01               	movlw	1
  7856  003EF6  ECBF  F01F         	call	_color_writetoaddr
  7857  003EFA  0012               	return		;funcret
  7858  003EFC                     __end_of_color_click_init:
  7859                           	callstack 0
  7860                           
  7861 ;; *************** function _color_writetoaddr *****************
  7862 ;; Defined at:
  7863 ;;		line 28 in file "color.c"
  7864 ;; Parameters:    Size  Location     Type
  7865 ;;  address         1    wreg     unsigned char 
  7866 ;;  value           1    2[COMRAM] unsigned char 
  7867 ;; Auto vars:     Size  Location     Type
  7868 ;;  address         1    3[COMRAM] unsigned char 
  7869 ;; Return value:  Size  Location     Type
  7870 ;;                  1    wreg      void 
  7871 ;; Registers used:
  7872 ;;		wreg, status,2, status,0, cstack
  7873 ;; Tracked objects:
  7874 ;;		On entry : 0/0
  7875 ;;		On exit  : 0/0
  7876 ;;		Unchanged: 0/0
  7877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7878 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7879 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7880 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7881 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7882 ;;Total ram usage:        2 bytes
  7883 ;; Hardware stack levels used: 1
  7884 ;; Hardware stack levels required when called: 2
  7885 ;; This function calls:
  7886 ;;		_I2C_2_Master_Start
  7887 ;;		_I2C_2_Master_Stop
  7888 ;;		_I2C_2_Master_Write
  7889 ;; This function is called by:
  7890 ;;		_color_click_init
  7891 ;; This function uses a non-reentrant model
  7892 ;;
  7893                           
  7894                           	psect	text35
  7895  003F7E                     __ptext35:
  7896                           	callstack 0
  7897  003F7E                     _color_writetoaddr:
  7898                           	callstack 27
  7899                           
  7900                           ;incstack = 0
  7901                           ;color_writetoaddr@address stored from wreg
  7902  003F7E  6E04               	movwf	color_writetoaddr@address^0,c
  7903  003F80                     
  7904                           ;color.c: 29:     I2C_2_Master_Start();
  7905  003F80  EC3B  F020         	call	_I2C_2_Master_Start	;wreg free
  7906                           
  7907                           ;color.c: 30:     I2C_2_Master_Write(0x52 | 0x00);
  7908  003F84  0E52               	movlw	82
  7909  003F86  EC30  F020         	call	_I2C_2_Master_Write
  7910                           
  7911                           ;color.c: 31:     I2C_2_Master_Write(0x80 | address);
  7912  003F8A  5004               	movf	color_writetoaddr@address^0,w,c
  7913  003F8C  0980               	iorlw	128
  7914  003F8E  EC30  F020         	call	_I2C_2_Master_Write
  7915                           
  7916                           ;color.c: 32:     I2C_2_Master_Write(value);
  7917  003F92  5003               	movf	color_writetoaddr@value^0,w,c
  7918  003F94  EC30  F020         	call	_I2C_2_Master_Write
  7919                           
  7920                           ;color.c: 33:     I2C_2_Master_Stop();
  7921  003F98  EC36  F020         	call	_I2C_2_Master_Stop	;wreg free
  7922  003F9C  0012               	return		;funcret
  7923  003F9E                     __end_of_color_writetoaddr:
  7924                           	callstack 0
  7925                           
  7926 ;; *************** function _I2C_2_Master_Init *****************
  7927 ;; Defined at:
  7928 ;;		line 4 in file "i2c.c"
  7929 ;; Parameters:    Size  Location     Type
  7930 ;;		None
  7931 ;; Auto vars:     Size  Location     Type
  7932 ;;		None
  7933 ;; Return value:  Size  Location     Type
  7934 ;;                  1    wreg      void 
  7935 ;; Registers used:
  7936 ;;		wreg, status,2
  7937 ;; Tracked objects:
  7938 ;;		On entry : 0/0
  7939 ;;		On exit  : 0/0
  7940 ;;		Unchanged: 0/0
  7941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7942 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7943 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7944 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7945 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7946 ;;Total ram usage:        0 bytes
  7947 ;; Hardware stack levels used: 1
  7948 ;; This function calls:
  7949 ;;		Nothing
  7950 ;; This function is called by:
  7951 ;;		_color_click_init
  7952 ;;		_main
  7953 ;; This function uses a non-reentrant model
  7954 ;;
  7955                           
  7956                           	psect	text36
  7957  003F2C                     __ptext36:
  7958                           	callstack 0
  7959  003F2C                     _I2C_2_Master_Init:
  7960                           	callstack 29
  7961  003F2C                     
  7962                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  7963  003F2C  010E               	movlb	14	; () banked
  7964  003F2E  51D9               	movf	217,w,b	;volatile
  7965  003F30  0BF0               	andlw	-16
  7966  003F32  0908               	iorlw	8
  7967  003F34  6FD9               	movwf	217,b	;volatile
  7968  003F36                     
  7969                           ; BSR set to: 14
  7970                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  7971  003F36  8BD9               	bsf	217,5,b	;volatile
  7972                           
  7973                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  7974  003F38  0E9F               	movlw	159
  7975  003F3A  6FD6               	movwf	214,b	;volatile
  7976  003F3C                     
  7977                           ; BSR set to: 14
  7978                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  7979  003F3C  8A84               	bsf	132,5,c	;volatile
  7980  003F3E                     
  7981                           ; BSR set to: 14
  7982                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  7983  003F3E  8C84               	bsf	132,6,c	;volatile
  7984  003F40                     
  7985                           ; BSR set to: 14
  7986                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  7987  003F40  9BA7               	bcf	167,5,b	;volatile
  7988  003F42                     
  7989                           ; BSR set to: 14
  7990                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  7991  003F42  9DA7               	bcf	167,6,b	;volatile
  7992                           
  7993                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  7994  003F44  0E1D               	movlw	29
  7995  003F46  6F1D               	movwf	29,b	;volatile
  7996                           
  7997                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  7998  003F48  0E1E               	movlw	30
  7999  003F4A  6F1C               	movwf	28,b	;volatile
  8000                           
  8001                           ;i2c.c: 18:   RD5PPS=0x1C;
  8002  003F4C  0E1C               	movlw	28
  8003  003F4E  6F6F               	movwf	111,b	;volatile
  8004                           
  8005                           ;i2c.c: 19:   RD6PPS=0x1B;
  8006  003F50  0E1B               	movlw	27
  8007  003F52  6F70               	movwf	112,b	;volatile
  8008  003F54                     
  8009                           ; BSR set to: 14
  8010  003F54  0012               	return		;funcret
  8011  003F56                     __end_of_I2C_2_Master_Init:
  8012                           	callstack 0
  8013                           
  8014 ;; *************** function _calibration_init *****************
  8015 ;; Defined at:
  8016 ;;		line 20 in file "movement.c"
  8017 ;; Parameters:    Size  Location     Type
  8018 ;;		None
  8019 ;; Auto vars:     Size  Location     Type
  8020 ;;		None
  8021 ;; Return value:  Size  Location     Type
  8022 ;;                  1    wreg      void 
  8023 ;; Registers used:
  8024 ;;		None
  8025 ;; Tracked objects:
  8026 ;;		On entry : 0/0
  8027 ;;		On exit  : 0/0
  8028 ;;		Unchanged: 0/0
  8029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8030 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8031 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8032 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8033 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8034 ;;Total ram usage:        0 bytes
  8035 ;; Hardware stack levels used: 1
  8036 ;; This function calls:
  8037 ;;		Nothing
  8038 ;; This function is called by:
  8039 ;;		_main
  8040 ;; This function uses a non-reentrant model
  8041 ;;
  8042                           
  8043                           	psect	text37
  8044  004054                     __ptext37:
  8045                           	callstack 0
  8046  004054                     _calibration_init:
  8047                           	callstack 30
  8048  004054  8486               	bsf	134,2,c	;volatile
  8049                           
  8050                           ;movement.c: 22:     ANSELFbits.ANSELF2=0;
  8051  004056  010E               	movlb	14	; () banked
  8052  004058  95B4               	bcf	180,2,b	;volatile
  8053                           
  8054                           ;movement.c: 23:     TRISFbits.TRISF3=1;
  8055  00405A  8686               	bsf	134,3,c	;volatile
  8056                           
  8057                           ;movement.c: 24:     ANSELFbits.ANSELF3=0;
  8058  00405C  97B4               	bcf	180,3,b	;volatile
  8059  00405E                     
  8060                           ; BSR set to: 14
  8061  00405E  0012               	return		;funcret
  8062  004060                     __end_of_calibration_init:
  8063                           	callstack 0
  8064                           
  8065 ;; *************** function _calibrate_white *****************
  8066 ;; Defined at:
  8067 ;;		line 172 in file "color.c"
  8068 ;; Parameters:    Size  Location     Type
  8069 ;;  w               2   11[COMRAM] PTR struct white_card
  8070 ;;		 -> main@white(18), 
  8071 ;; Auto vars:     Size  Location     Type
  8072 ;;		None
  8073 ;; Return value:  Size  Location     Type
  8074 ;;                  1    wreg      void 
  8075 ;; Registers used:
  8076 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8077 ;; Tracked objects:
  8078 ;;		On entry : 0/0
  8079 ;;		On exit  : 0/0
  8080 ;;		Unchanged: 0/0
  8081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8082 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8083 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8084 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8085 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8086 ;;Total ram usage:        4 bytes
  8087 ;; Hardware stack levels used: 1
  8088 ;; Hardware stack levels required when called: 3
  8089 ;; This function calls:
  8090 ;;		_LED_B
  8091 ;;		_LED_G
  8092 ;;		_LED_R
  8093 ;;		_color_read_Blue
  8094 ;;		_color_read_Green
  8095 ;;		_color_read_Red
  8096 ;; This function is called by:
  8097 ;;		_main
  8098 ;; This function uses a non-reentrant model
  8099 ;;
  8100                           
  8101                           	psect	text38
  8102  003258                     __ptext38:
  8103                           	callstack 0
  8104  003258                     _calibrate_white:
  8105                           	callstack 27
  8106  003258                     
  8107                           ;color.c: 172: void calibrate_white(struct white_card *w);color.c: 173: {;color.c: 174: 
      +                              LED_R();
  8108  003258  ECCF  F01F         	call	_LED_R	;wreg free
  8109  00325C                     
  8110                           ;color.c: 176:     w->RR = color_read_Red(); w->RG = color_read_Green(); w->RB = color_r
      +                          ead_Blue();
  8111  00325C  ECB5  F01D         	call	_color_read_Red	;wreg free
  8112  003260  C00C  FFD9         	movff	calibrate_white@w,fsr2l
  8113  003264  C00D  FFDA         	movff	calibrate_white@w+1,fsr2h
  8114  003268  C005  FFDE         	movff	?_color_read_Red,postinc2
  8115  00326C  C006  FFDD         	movff	?_color_read_Red+1,postdec2
  8116  003270  ECDD  F01D         	call	_color_read_Green	;wreg free
  8117  003274  EE20 F002          	lfsr	2,2
  8118  003278  500C               	movf	calibrate_white@w^0,w,c
  8119  00327A  26D9               	addwf	fsr2l,f,c
  8120  00327C  500D               	movf	(calibrate_white@w+1)^0,w,c
  8121  00327E  22DA               	addwfc	fsr2h,f,c
  8122  003280  C005  FFDE         	movff	?_color_read_Green,postinc2
  8123  003284  C006  FFDD         	movff	?_color_read_Green+1,postdec2
  8124  003288  EC05  F01E         	call	_color_read_Blue	;wreg free
  8125  00328C  EE20 F004          	lfsr	2,4
  8126  003290  500C               	movf	calibrate_white@w^0,w,c
  8127  003292  26D9               	addwf	fsr2l,f,c
  8128  003294  500D               	movf	(calibrate_white@w+1)^0,w,c
  8129  003296  22DA               	addwfc	fsr2h,f,c
  8130  003298  C005  FFDE         	movff	?_color_read_Blue,postinc2
  8131  00329C  C006  FFDD         	movff	?_color_read_Blue+1,postdec2
  8132  0032A0                     
  8133                           ;color.c: 177:     _delay((unsigned long)((100)*(64000000/4000.0)));
  8134  0032A0  0E09               	movlw	9
  8135  0032A2  6E0F               	movwf	(??_calibrate_white+1)^0,c
  8136  0032A4  0E1E               	movlw	30
  8137  0032A6  6E0E               	movwf	??_calibrate_white^0,c
  8138  0032A8  0EE4               	movlw	228
  8139  0032AA                     u4287:
  8140  0032AA  2EE8               	decfsz	wreg,f,c
  8141  0032AC  D7FE               	bra	u4287
  8142  0032AE  2E0E               	decfsz	??_calibrate_white^0,f,c
  8143  0032B0  D7FC               	bra	u4287
  8144  0032B2  2E0F               	decfsz	(??_calibrate_white+1)^0,f,c
  8145  0032B4  D7FA               	bra	u4287
  8146  0032B6  D000               	nop2	
  8147  0032B8                     
  8148                           ;color.c: 179:     LED_G();
  8149  0032B8  ECDF  F01F         	call	_LED_G	;wreg free
  8150  0032BC                     
  8151                           ;color.c: 181:     w->GR = color_read_Red(); w->GG = color_read_Green(); w->GB = color_r
      +                          ead_Blue();
  8152  0032BC  ECB5  F01D         	call	_color_read_Red	;wreg free
  8153  0032C0  EE20 F006          	lfsr	2,6
  8154  0032C4  500C               	movf	calibrate_white@w^0,w,c
  8155  0032C6  26D9               	addwf	fsr2l,f,c
  8156  0032C8  500D               	movf	(calibrate_white@w+1)^0,w,c
  8157  0032CA  22DA               	addwfc	fsr2h,f,c
  8158  0032CC  C005  FFDE         	movff	?_color_read_Red,postinc2
  8159  0032D0  C006  FFDD         	movff	?_color_read_Red+1,postdec2
  8160  0032D4  ECDD  F01D         	call	_color_read_Green	;wreg free
  8161  0032D8  EE20 F008          	lfsr	2,8
  8162  0032DC  500C               	movf	calibrate_white@w^0,w,c
  8163  0032DE  26D9               	addwf	fsr2l,f,c
  8164  0032E0  500D               	movf	(calibrate_white@w+1)^0,w,c
  8165  0032E2  22DA               	addwfc	fsr2h,f,c
  8166  0032E4  C005  FFDE         	movff	?_color_read_Green,postinc2
  8167  0032E8  C006  FFDD         	movff	?_color_read_Green+1,postdec2
  8168  0032EC  EC05  F01E         	call	_color_read_Blue	;wreg free
  8169  0032F0  EE20 F00A          	lfsr	2,10
  8170  0032F4  500C               	movf	calibrate_white@w^0,w,c
  8171  0032F6  26D9               	addwf	fsr2l,f,c
  8172  0032F8  500D               	movf	(calibrate_white@w+1)^0,w,c
  8173  0032FA  22DA               	addwfc	fsr2h,f,c
  8174  0032FC  C005  FFDE         	movff	?_color_read_Blue,postinc2
  8175  003300  C006  FFDD         	movff	?_color_read_Blue+1,postdec2
  8176                           
  8177                           ;color.c: 182:     _delay((unsigned long)((100)*(64000000/4000.0)));
  8178  003304  0E09               	movlw	9
  8179  003306  6E0F               	movwf	(??_calibrate_white+1)^0,c
  8180  003308  0E1E               	movlw	30
  8181  00330A  6E0E               	movwf	??_calibrate_white^0,c
  8182  00330C  0EE4               	movlw	228
  8183  00330E                     u4297:
  8184  00330E  2EE8               	decfsz	wreg,f,c
  8185  003310  D7FE               	bra	u4297
  8186  003312  2E0E               	decfsz	??_calibrate_white^0,f,c
  8187  003314  D7FC               	bra	u4297
  8188  003316  2E0F               	decfsz	(??_calibrate_white+1)^0,f,c
  8189  003318  D7FA               	bra	u4297
  8190  00331A  D000               	nop2	
  8191  00331C                     
  8192                           ;color.c: 184:     LED_B();
  8193  00331C  ECEF  F01F         	call	_LED_B	;wreg free
  8194  003320                     
  8195                           ;color.c: 186:     w->BR = color_read_Red(); w->BG = color_read_Green(); w->BB = color_r
      +                          ead_Blue();
  8196  003320  ECB5  F01D         	call	_color_read_Red	;wreg free
  8197  003324  EE20 F00C          	lfsr	2,12
  8198  003328  500C               	movf	calibrate_white@w^0,w,c
  8199  00332A  26D9               	addwf	fsr2l,f,c
  8200  00332C  500D               	movf	(calibrate_white@w+1)^0,w,c
  8201  00332E  22DA               	addwfc	fsr2h,f,c
  8202  003330  C005  FFDE         	movff	?_color_read_Red,postinc2
  8203  003334  C006  FFDD         	movff	?_color_read_Red+1,postdec2
  8204  003338  ECDD  F01D         	call	_color_read_Green	;wreg free
  8205  00333C  EE20 F00E          	lfsr	2,14
  8206  003340  500C               	movf	calibrate_white@w^0,w,c
  8207  003342  26D9               	addwf	fsr2l,f,c
  8208  003344  500D               	movf	(calibrate_white@w+1)^0,w,c
  8209  003346  22DA               	addwfc	fsr2h,f,c
  8210  003348  C005  FFDE         	movff	?_color_read_Green,postinc2
  8211  00334C  C006  FFDD         	movff	?_color_read_Green+1,postdec2
  8212  003350  EC05  F01E         	call	_color_read_Blue	;wreg free
  8213  003354  EE20 F010          	lfsr	2,16
  8214  003358  500C               	movf	calibrate_white@w^0,w,c
  8215  00335A  26D9               	addwf	fsr2l,f,c
  8216  00335C  500D               	movf	(calibrate_white@w+1)^0,w,c
  8217  00335E  22DA               	addwfc	fsr2h,f,c
  8218  003360  C005  FFDE         	movff	?_color_read_Blue,postinc2
  8219  003364  C006  FFDD         	movff	?_color_read_Blue+1,postdec2
  8220  003368                     
  8221                           ;color.c: 187:     _delay((unsigned long)((100)*(64000000/4000.0)));
  8222  003368  0E09               	movlw	9
  8223  00336A  6E0F               	movwf	(??_calibrate_white+1)^0,c
  8224  00336C  0E1E               	movlw	30
  8225  00336E  6E0E               	movwf	??_calibrate_white^0,c
  8226  003370  0EE4               	movlw	228
  8227  003372                     u4307:
  8228  003372  2EE8               	decfsz	wreg,f,c
  8229  003374  D7FE               	bra	u4307
  8230  003376  2E0E               	decfsz	??_calibrate_white^0,f,c
  8231  003378  D7FC               	bra	u4307
  8232  00337A  2E0F               	decfsz	(??_calibrate_white+1)^0,f,c
  8233  00337C  D7FA               	bra	u4307
  8234  00337E  D000               	nop2	
  8235  003380  0012               	return		;funcret
  8236  003382                     __end_of_calibrate_white:
  8237                           	callstack 0
  8238                           
  8239 ;; *************** function _color_read_Red *****************
  8240 ;; Defined at:
  8241 ;;		line 36 in file "color.c"
  8242 ;; Parameters:    Size  Location     Type
  8243 ;;		None
  8244 ;; Auto vars:     Size  Location     Type
  8245 ;;  tmp             2    9[COMRAM] unsigned int 
  8246 ;; Return value:  Size  Location     Type
  8247 ;;                  2    4[COMRAM] unsigned int 
  8248 ;; Registers used:
  8249 ;;		wreg, status,2, status,0, cstack
  8250 ;; Tracked objects:
  8251 ;;		On entry : 0/0
  8252 ;;		On exit  : 0/0
  8253 ;;		Unchanged: 0/0
  8254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8255 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8256 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8257 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8258 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8259 ;;Total ram usage:        7 bytes
  8260 ;; Hardware stack levels used: 1
  8261 ;; Hardware stack levels required when called: 2
  8262 ;; This function calls:
  8263 ;;		_I2C_2_Master_Read
  8264 ;;		_I2C_2_Master_RepStart
  8265 ;;		_I2C_2_Master_Start
  8266 ;;		_I2C_2_Master_Stop
  8267 ;;		_I2C_2_Master_Write
  8268 ;; This function is called by:
  8269 ;;		_read_color
  8270 ;;		_calibrate_white
  8271 ;; This function uses a non-reentrant model
  8272 ;;
  8273                           
  8274                           	psect	text39
  8275  003B6A                     __ptext39:
  8276                           	callstack 0
  8277  003B6A                     _color_read_Red:
  8278                           	callstack 27
  8279  003B6A                     
  8280                           ;color.c: 38:  unsigned int tmp;;color.c: 39:  I2C_2_Master_Start();
  8281  003B6A  EC3B  F020         	call	_I2C_2_Master_Start	;wreg free
  8282                           
  8283                           ;color.c: 40:  I2C_2_Master_Write(0x52 | 0x00);
  8284  003B6E  0E52               	movlw	82
  8285  003B70  EC30  F020         	call	_I2C_2_Master_Write
  8286                           
  8287                           ;color.c: 41:  I2C_2_Master_Write(0xA0 | 0x16);
  8288  003B74  0EB6               	movlw	182
  8289  003B76  EC30  F020         	call	_I2C_2_Master_Write
  8290                           
  8291                           ;color.c: 42:  I2C_2_Master_RepStart();
  8292  003B7A  EC40  F020         	call	_I2C_2_Master_RepStart	;wreg free
  8293                           
  8294                           ;color.c: 43:  I2C_2_Master_Write(0x52 | 0x01);
  8295  003B7E  0E53               	movlw	83
  8296  003B80  EC30  F020         	call	_I2C_2_Master_Write
  8297                           
  8298                           ;color.c: 44:  tmp=I2C_2_Master_Read(1);
  8299  003B84  0E01               	movlw	1
  8300  003B86  EC93  F01E         	call	_I2C_2_Master_Read
  8301  003B8A  6E07               	movwf	??_color_read_Red^0,c
  8302  003B8C  5007               	movf	??_color_read_Red^0,w,c
  8303  003B8E  6E0A               	movwf	color_read_Red@tmp^0,c
  8304  003B90  6A0B               	clrf	(color_read_Red@tmp+1)^0,c
  8305                           
  8306                           ;color.c: 45:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  8307  003B92  0E00               	movlw	0
  8308  003B94  EC93  F01E         	call	_I2C_2_Master_Read
  8309  003B98  6E07               	movwf	??_color_read_Red^0,c
  8310  003B9A  5007               	movf	??_color_read_Red^0,w,c
  8311  003B9C  6E09               	movwf	(??_color_read_Red+2)^0,c
  8312  003B9E  6A08               	clrf	(??_color_read_Red+1)^0,c
  8313  003BA0  500A               	movf	color_read_Red@tmp^0,w,c
  8314  003BA2  1008               	iorwf	(??_color_read_Red+1)^0,w,c
  8315  003BA4  6E0A               	movwf	color_read_Red@tmp^0,c
  8316  003BA6  500B               	movf	(color_read_Red@tmp+1)^0,w,c
  8317  003BA8  1009               	iorwf	(??_color_read_Red+2)^0,w,c
  8318  003BAA  6E0B               	movwf	(color_read_Red@tmp+1)^0,c
  8319                           
  8320                           ;color.c: 46:  I2C_2_Master_Stop();
  8321  003BAC  EC36  F020         	call	_I2C_2_Master_Stop	;wreg free
  8322  003BB0                     
  8323                           ;color.c: 47:  return tmp;
  8324  003BB0  C00A  F005         	movff	color_read_Red@tmp,?_color_read_Red
  8325  003BB4  C00B  F006         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  8326  003BB8  0012               	return		;funcret
  8327  003BBA                     __end_of_color_read_Red:
  8328                           	callstack 0
  8329                           
  8330 ;; *************** function _color_read_Green *****************
  8331 ;; Defined at:
  8332 ;;		line 64 in file "color.c"
  8333 ;; Parameters:    Size  Location     Type
  8334 ;;		None
  8335 ;; Auto vars:     Size  Location     Type
  8336 ;;  tmp             2    9[COMRAM] unsigned int 
  8337 ;; Return value:  Size  Location     Type
  8338 ;;                  2    4[COMRAM] unsigned int 
  8339 ;; Registers used:
  8340 ;;		wreg, status,2, status,0, cstack
  8341 ;; Tracked objects:
  8342 ;;		On entry : 0/0
  8343 ;;		On exit  : 0/0
  8344 ;;		Unchanged: 0/0
  8345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8346 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8347 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8348 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8349 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8350 ;;Total ram usage:        7 bytes
  8351 ;; Hardware stack levels used: 1
  8352 ;; Hardware stack levels required when called: 2
  8353 ;; This function calls:
  8354 ;;		_I2C_2_Master_Read
  8355 ;;		_I2C_2_Master_RepStart
  8356 ;;		_I2C_2_Master_Start
  8357 ;;		_I2C_2_Master_Stop
  8358 ;;		_I2C_2_Master_Write
  8359 ;; This function is called by:
  8360 ;;		_read_color
  8361 ;;		_calibrate_white
  8362 ;; This function uses a non-reentrant model
  8363 ;;
  8364                           
  8365                           	psect	text40
  8366  003BBA                     __ptext40:
  8367                           	callstack 0
  8368  003BBA                     _color_read_Green:
  8369                           	callstack 27
  8370  003BBA                     
  8371                           ;color.c: 66:  unsigned int tmp;;color.c: 67:  I2C_2_Master_Start();
  8372  003BBA  EC3B  F020         	call	_I2C_2_Master_Start	;wreg free
  8373                           
  8374                           ;color.c: 68:  I2C_2_Master_Write(0x52 | 0x00);
  8375  003BBE  0E52               	movlw	82
  8376  003BC0  EC30  F020         	call	_I2C_2_Master_Write
  8377                           
  8378                           ;color.c: 69:  I2C_2_Master_Write(0xA0 | 0x18);
  8379  003BC4  0EB8               	movlw	184
  8380  003BC6  EC30  F020         	call	_I2C_2_Master_Write
  8381                           
  8382                           ;color.c: 70:  I2C_2_Master_RepStart();
  8383  003BCA  EC40  F020         	call	_I2C_2_Master_RepStart	;wreg free
  8384                           
  8385                           ;color.c: 71:  I2C_2_Master_Write(0x52 | 0x01);
  8386  003BCE  0E53               	movlw	83
  8387  003BD0  EC30  F020         	call	_I2C_2_Master_Write
  8388                           
  8389                           ;color.c: 72:  tmp=I2C_2_Master_Read(1);
  8390  003BD4  0E01               	movlw	1
  8391  003BD6  EC93  F01E         	call	_I2C_2_Master_Read
  8392  003BDA  6E07               	movwf	??_color_read_Green^0,c
  8393  003BDC  5007               	movf	??_color_read_Green^0,w,c
  8394  003BDE  6E0A               	movwf	color_read_Green@tmp^0,c
  8395  003BE0  6A0B               	clrf	(color_read_Green@tmp+1)^0,c
  8396                           
  8397                           ;color.c: 73:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  8398  003BE2  0E00               	movlw	0
  8399  003BE4  EC93  F01E         	call	_I2C_2_Master_Read
  8400  003BE8  6E07               	movwf	??_color_read_Green^0,c
  8401  003BEA  5007               	movf	??_color_read_Green^0,w,c
  8402  003BEC  6E09               	movwf	(??_color_read_Green+2)^0,c
  8403  003BEE  6A08               	clrf	(??_color_read_Green+1)^0,c
  8404  003BF0  500A               	movf	color_read_Green@tmp^0,w,c
  8405  003BF2  1008               	iorwf	(??_color_read_Green+1)^0,w,c
  8406  003BF4  6E0A               	movwf	color_read_Green@tmp^0,c
  8407  003BF6  500B               	movf	(color_read_Green@tmp+1)^0,w,c
  8408  003BF8  1009               	iorwf	(??_color_read_Green+2)^0,w,c
  8409  003BFA  6E0B               	movwf	(color_read_Green@tmp+1)^0,c
  8410                           
  8411                           ;color.c: 74:  I2C_2_Master_Stop();
  8412  003BFC  EC36  F020         	call	_I2C_2_Master_Stop	;wreg free
  8413  003C00                     
  8414                           ;color.c: 75:  return tmp;
  8415  003C00  C00A  F005         	movff	color_read_Green@tmp,?_color_read_Green
  8416  003C04  C00B  F006         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  8417  003C08  0012               	return		;funcret
  8418  003C0A                     __end_of_color_read_Green:
  8419                           	callstack 0
  8420                           
  8421 ;; *************** function _color_read_Blue *****************
  8422 ;; Defined at:
  8423 ;;		line 50 in file "color.c"
  8424 ;; Parameters:    Size  Location     Type
  8425 ;;		None
  8426 ;; Auto vars:     Size  Location     Type
  8427 ;;  tmp             2    9[COMRAM] unsigned int 
  8428 ;; Return value:  Size  Location     Type
  8429 ;;                  2    4[COMRAM] unsigned int 
  8430 ;; Registers used:
  8431 ;;		wreg, status,2, status,0, cstack
  8432 ;; Tracked objects:
  8433 ;;		On entry : 0/0
  8434 ;;		On exit  : 0/0
  8435 ;;		Unchanged: 0/0
  8436 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8437 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8438 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8439 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8440 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8441 ;;Total ram usage:        7 bytes
  8442 ;; Hardware stack levels used: 1
  8443 ;; Hardware stack levels required when called: 2
  8444 ;; This function calls:
  8445 ;;		_I2C_2_Master_Read
  8446 ;;		_I2C_2_Master_RepStart
  8447 ;;		_I2C_2_Master_Start
  8448 ;;		_I2C_2_Master_Stop
  8449 ;;		_I2C_2_Master_Write
  8450 ;; This function is called by:
  8451 ;;		_read_color
  8452 ;;		_calibrate_white
  8453 ;; This function uses a non-reentrant model
  8454 ;;
  8455                           
  8456                           	psect	text41
  8457  003C0A                     __ptext41:
  8458                           	callstack 0
  8459  003C0A                     _color_read_Blue:
  8460                           	callstack 27
  8461  003C0A                     
  8462                           ;color.c: 52:  unsigned int tmp;;color.c: 53:  I2C_2_Master_Start();
  8463  003C0A  EC3B  F020         	call	_I2C_2_Master_Start	;wreg free
  8464                           
  8465                           ;color.c: 54:  I2C_2_Master_Write(0x52 | 0x00);
  8466  003C0E  0E52               	movlw	82
  8467  003C10  EC30  F020         	call	_I2C_2_Master_Write
  8468                           
  8469                           ;color.c: 55:  I2C_2_Master_Write(0xA0 | 0x1A);
  8470  003C14  0EBA               	movlw	186
  8471  003C16  EC30  F020         	call	_I2C_2_Master_Write
  8472                           
  8473                           ;color.c: 56:  I2C_2_Master_RepStart();
  8474  003C1A  EC40  F020         	call	_I2C_2_Master_RepStart	;wreg free
  8475                           
  8476                           ;color.c: 57:  I2C_2_Master_Write(0x52 | 0x01);
  8477  003C1E  0E53               	movlw	83
  8478  003C20  EC30  F020         	call	_I2C_2_Master_Write
  8479                           
  8480                           ;color.c: 58:  tmp=I2C_2_Master_Read(1);
  8481  003C24  0E01               	movlw	1
  8482  003C26  EC93  F01E         	call	_I2C_2_Master_Read
  8483  003C2A  6E07               	movwf	??_color_read_Blue^0,c
  8484  003C2C  5007               	movf	??_color_read_Blue^0,w,c
  8485  003C2E  6E0A               	movwf	color_read_Blue@tmp^0,c
  8486  003C30  6A0B               	clrf	(color_read_Blue@tmp+1)^0,c
  8487                           
  8488                           ;color.c: 59:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  8489  003C32  0E00               	movlw	0
  8490  003C34  EC93  F01E         	call	_I2C_2_Master_Read
  8491  003C38  6E07               	movwf	??_color_read_Blue^0,c
  8492  003C3A  5007               	movf	??_color_read_Blue^0,w,c
  8493  003C3C  6E09               	movwf	(??_color_read_Blue+2)^0,c
  8494  003C3E  6A08               	clrf	(??_color_read_Blue+1)^0,c
  8495  003C40  500A               	movf	color_read_Blue@tmp^0,w,c
  8496  003C42  1008               	iorwf	(??_color_read_Blue+1)^0,w,c
  8497  003C44  6E0A               	movwf	color_read_Blue@tmp^0,c
  8498  003C46  500B               	movf	(color_read_Blue@tmp+1)^0,w,c
  8499  003C48  1009               	iorwf	(??_color_read_Blue+2)^0,w,c
  8500  003C4A  6E0B               	movwf	(color_read_Blue@tmp+1)^0,c
  8501                           
  8502                           ;color.c: 60:  I2C_2_Master_Stop();
  8503  003C4C  EC36  F020         	call	_I2C_2_Master_Stop	;wreg free
  8504  003C50                     
  8505                           ;color.c: 61:  return tmp;
  8506  003C50  C00A  F005         	movff	color_read_Blue@tmp,?_color_read_Blue
  8507  003C54  C00B  F006         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  8508  003C58  0012               	return		;funcret
  8509  003C5A                     __end_of_color_read_Blue:
  8510                           	callstack 0
  8511                           
  8512 ;; *************** function _I2C_2_Master_Write *****************
  8513 ;; Defined at:
  8514 ;;		line 45 in file "i2c.c"
  8515 ;; Parameters:    Size  Location     Type
  8516 ;;  data_byte       1    wreg     unsigned char 
  8517 ;; Auto vars:     Size  Location     Type
  8518 ;;  data_byte       1    1[COMRAM] unsigned char 
  8519 ;; Return value:  Size  Location     Type
  8520 ;;                  1    wreg      void 
  8521 ;; Registers used:
  8522 ;;		wreg, status,2, status,0, cstack
  8523 ;; Tracked objects:
  8524 ;;		On entry : 0/0
  8525 ;;		On exit  : 0/0
  8526 ;;		Unchanged: 0/0
  8527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8528 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8529 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8530 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8531 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8532 ;;Total ram usage:        1 bytes
  8533 ;; Hardware stack levels used: 1
  8534 ;; Hardware stack levels required when called: 1
  8535 ;; This function calls:
  8536 ;;		_I2C_2_Master_Idle
  8537 ;; This function is called by:
  8538 ;;		_color_writetoaddr
  8539 ;;		_color_read_Red
  8540 ;;		_color_read_Blue
  8541 ;;		_color_read_Green
  8542 ;;		_color_read_Clear
  8543 ;; This function uses a non-reentrant model
  8544 ;;
  8545                           
  8546                           	psect	text42
  8547  004060                     __ptext42:
  8548                           	callstack 0
  8549  004060                     _I2C_2_Master_Write:
  8550                           	callstack 27
  8551                           
  8552                           ;incstack = 0
  8553                           ;I2C_2_Master_Write@data_byte stored from wreg
  8554  004060  6E02               	movwf	I2C_2_Master_Write@data_byte^0,c
  8555  004062                     
  8556                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  8557  004062  ECAB  F01F         	call	_I2C_2_Master_Idle	;wreg free
  8558  004066                     
  8559                           ;i2c.c: 48:   SSP2BUF = data_byte;
  8560  004066  C002  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  8561  00406A  0012               	return		;funcret
  8562  00406C                     __end_of_I2C_2_Master_Write:
  8563                           	callstack 0
  8564                           
  8565 ;; *************** function _I2C_2_Master_Stop *****************
  8566 ;; Defined at:
  8567 ;;		line 39 in file "i2c.c"
  8568 ;; Parameters:    Size  Location     Type
  8569 ;;		None
  8570 ;; Auto vars:     Size  Location     Type
  8571 ;;		None
  8572 ;; Return value:  Size  Location     Type
  8573 ;;                  1    wreg      void 
  8574 ;; Registers used:
  8575 ;;		wreg, status,2, status,0, cstack
  8576 ;; Tracked objects:
  8577 ;;		On entry : 0/0
  8578 ;;		On exit  : 0/0
  8579 ;;		Unchanged: 0/0
  8580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8581 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8582 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8583 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8584 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8585 ;;Total ram usage:        0 bytes
  8586 ;; Hardware stack levels used: 1
  8587 ;; Hardware stack levels required when called: 1
  8588 ;; This function calls:
  8589 ;;		_I2C_2_Master_Idle
  8590 ;; This function is called by:
  8591 ;;		_color_writetoaddr
  8592 ;;		_color_read_Red
  8593 ;;		_color_read_Blue
  8594 ;;		_color_read_Green
  8595 ;;		_color_read_Clear
  8596 ;; This function uses a non-reentrant model
  8597 ;;
  8598                           
  8599                           	psect	text43
  8600  00406C                     __ptext43:
  8601                           	callstack 0
  8602  00406C                     _I2C_2_Master_Stop:
  8603                           	callstack 27
  8604  00406C                     
  8605                           ;i2c.c: 41:   I2C_2_Master_Idle();
  8606  00406C  ECAB  F01F         	call	_I2C_2_Master_Idle	;wreg free
  8607  004070                     
  8608                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  8609  004070  010E               	movlb	14	; () banked
  8610  004072  85DA               	bsf	218,2,b	;volatile
  8611  004074                     
  8612                           ; BSR set to: 14
  8613  004074  0012               	return		;funcret
  8614  004076                     __end_of_I2C_2_Master_Stop:
  8615                           	callstack 0
  8616                           
  8617 ;; *************** function _I2C_2_Master_Start *****************
  8618 ;; Defined at:
  8619 ;;		line 27 in file "i2c.c"
  8620 ;; Parameters:    Size  Location     Type
  8621 ;;		None
  8622 ;; Auto vars:     Size  Location     Type
  8623 ;;		None
  8624 ;; Return value:  Size  Location     Type
  8625 ;;                  1    wreg      void 
  8626 ;; Registers used:
  8627 ;;		wreg, status,2, status,0, cstack
  8628 ;; Tracked objects:
  8629 ;;		On entry : 0/0
  8630 ;;		On exit  : 0/0
  8631 ;;		Unchanged: 0/0
  8632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8633 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8634 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8635 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8636 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8637 ;;Total ram usage:        0 bytes
  8638 ;; Hardware stack levels used: 1
  8639 ;; Hardware stack levels required when called: 1
  8640 ;; This function calls:
  8641 ;;		_I2C_2_Master_Idle
  8642 ;; This function is called by:
  8643 ;;		_color_writetoaddr
  8644 ;;		_color_read_Red
  8645 ;;		_color_read_Blue
  8646 ;;		_color_read_Green
  8647 ;;		_color_read_Clear
  8648 ;; This function uses a non-reentrant model
  8649 ;;
  8650                           
  8651                           	psect	text44
  8652  004076                     __ptext44:
  8653                           	callstack 0
  8654  004076                     _I2C_2_Master_Start:
  8655                           	callstack 27
  8656  004076                     
  8657                           ;i2c.c: 29:   I2C_2_Master_Idle();
  8658  004076  ECAB  F01F         	call	_I2C_2_Master_Idle	;wreg free
  8659  00407A                     
  8660                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  8661  00407A  010E               	movlb	14	; () banked
  8662  00407C  81DA               	bsf	218,0,b	;volatile
  8663  00407E                     
  8664                           ; BSR set to: 14
  8665  00407E  0012               	return		;funcret
  8666  004080                     __end_of_I2C_2_Master_Start:
  8667                           	callstack 0
  8668                           
  8669 ;; *************** function _I2C_2_Master_RepStart *****************
  8670 ;; Defined at:
  8671 ;;		line 33 in file "i2c.c"
  8672 ;; Parameters:    Size  Location     Type
  8673 ;;		None
  8674 ;; Auto vars:     Size  Location     Type
  8675 ;;		None
  8676 ;; Return value:  Size  Location     Type
  8677 ;;                  1    wreg      void 
  8678 ;; Registers used:
  8679 ;;		wreg, status,2, status,0, cstack
  8680 ;; Tracked objects:
  8681 ;;		On entry : 0/0
  8682 ;;		On exit  : 0/0
  8683 ;;		Unchanged: 0/0
  8684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8685 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8686 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8687 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8688 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8689 ;;Total ram usage:        0 bytes
  8690 ;; Hardware stack levels used: 1
  8691 ;; Hardware stack levels required when called: 1
  8692 ;; This function calls:
  8693 ;;		_I2C_2_Master_Idle
  8694 ;; This function is called by:
  8695 ;;		_color_read_Red
  8696 ;;		_color_read_Blue
  8697 ;;		_color_read_Green
  8698 ;;		_color_read_Clear
  8699 ;; This function uses a non-reentrant model
  8700 ;;
  8701                           
  8702                           	psect	text45
  8703  004080                     __ptext45:
  8704                           	callstack 0
  8705  004080                     _I2C_2_Master_RepStart:
  8706                           	callstack 27
  8707  004080                     
  8708                           ;i2c.c: 35:   I2C_2_Master_Idle();
  8709  004080  ECAB  F01F         	call	_I2C_2_Master_Idle	;wreg free
  8710  004084                     
  8711                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  8712  004084  010E               	movlb	14	; () banked
  8713  004086  83DA               	bsf	218,1,b	;volatile
  8714  004088                     
  8715                           ; BSR set to: 14
  8716  004088  0012               	return		;funcret
  8717  00408A                     __end_of_I2C_2_Master_RepStart:
  8718                           	callstack 0
  8719                           
  8720 ;; *************** function _I2C_2_Master_Read *****************
  8721 ;; Defined at:
  8722 ;;		line 51 in file "i2c.c"
  8723 ;; Parameters:    Size  Location     Type
  8724 ;;  ack             1    wreg     unsigned char 
  8725 ;; Auto vars:     Size  Location     Type
  8726 ;;  ack             1    2[COMRAM] unsigned char 
  8727 ;;  tmp             1    3[COMRAM] unsigned char 
  8728 ;; Return value:  Size  Location     Type
  8729 ;;                  1    wreg      unsigned char 
  8730 ;; Registers used:
  8731 ;;		wreg, status,2, status,0, cstack
  8732 ;; Tracked objects:
  8733 ;;		On entry : 0/0
  8734 ;;		On exit  : 0/0
  8735 ;;		Unchanged: 0/0
  8736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8737 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8738 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8739 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8740 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8741 ;;Total ram usage:        3 bytes
  8742 ;; Hardware stack levels used: 1
  8743 ;; Hardware stack levels required when called: 1
  8744 ;; This function calls:
  8745 ;;		_I2C_2_Master_Idle
  8746 ;; This function is called by:
  8747 ;;		_color_read_Red
  8748 ;;		_color_read_Blue
  8749 ;;		_color_read_Green
  8750 ;;		_color_read_Clear
  8751 ;; This function uses a non-reentrant model
  8752 ;;
  8753                           
  8754                           	psect	text46
  8755  003D26                     __ptext46:
  8756                           	callstack 0
  8757  003D26                     _I2C_2_Master_Read:
  8758                           	callstack 27
  8759                           
  8760                           ; BSR set to: 14
  8761                           ;incstack = 0
  8762                           ;I2C_2_Master_Read@ack stored from wreg
  8763  003D26  6E03               	movwf	I2C_2_Master_Read@ack^0,c
  8764  003D28                     
  8765                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  8766  003D28  ECAB  F01F         	call	_I2C_2_Master_Idle	;wreg free
  8767  003D2C                     
  8768                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  8769  003D2C  010E               	movlb	14	; () banked
  8770  003D2E  87DA               	bsf	218,3,b	;volatile
  8771                           
  8772                           ;i2c.c: 56:   I2C_2_Master_Idle();
  8773  003D30  ECAB  F01F         	call	_I2C_2_Master_Idle	;wreg free
  8774  003D34                     
  8775                           ;i2c.c: 57:   tmp = SSP2BUF;
  8776  003D34  CED5 F004          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  8777                           
  8778                           ;i2c.c: 58:   I2C_2_Master_Idle();
  8779  003D38  ECAB  F01F         	call	_I2C_2_Master_Idle	;wreg free
  8780  003D3C                     
  8781                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  8782  003D3C  5003               	movf	I2C_2_Master_Read@ack^0,w,c
  8783  003D3E  B4D8               	btfsc	status,2,c
  8784  003D40  EFA4  F01E         	goto	u2891
  8785  003D44  EFA8  F01E         	goto	u2890
  8786  003D48                     u2891:
  8787  003D48  6A02               	clrf	??_I2C_2_Master_Read^0,c
  8788  003D4A  2A02               	incf	??_I2C_2_Master_Read^0,f,c
  8789  003D4C  EFA9  F01E         	goto	u2908
  8790  003D50                     u2890:
  8791  003D50  6A02               	clrf	??_I2C_2_Master_Read^0,c
  8792  003D52                     u2908:
  8793  003D52  3A02               	swapf	??_I2C_2_Master_Read^0,f,c
  8794  003D54  4602               	rlncf	??_I2C_2_Master_Read^0,f,c
  8795  003D56  010E               	movlb	14	; () banked
  8796  003D58  51DA               	movf	218,w,b	;volatile
  8797  003D5A  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  8798  003D5C  0BDF               	andlw	-33
  8799  003D5E  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  8800  003D60  6FDA               	movwf	218,b	;volatile
  8801  003D62                     
  8802                           ; BSR set to: 14
  8803                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  8804  003D62  89DA               	bsf	218,4,b	;volatile
  8805  003D64                     
  8806                           ; BSR set to: 14
  8807                           ;i2c.c: 61:   return tmp;
  8808  003D64  5004               	movf	I2C_2_Master_Read@tmp^0,w,c
  8809  003D66                     
  8810                           ; BSR set to: 14
  8811  003D66  0012               	return		;funcret
  8812  003D68                     __end_of_I2C_2_Master_Read:
  8813                           	callstack 0
  8814                           
  8815 ;; *************** function _I2C_2_Master_Idle *****************
  8816 ;; Defined at:
  8817 ;;		line 22 in file "i2c.c"
  8818 ;; Parameters:    Size  Location     Type
  8819 ;;		None
  8820 ;; Auto vars:     Size  Location     Type
  8821 ;;		None
  8822 ;; Return value:  Size  Location     Type
  8823 ;;                  1    wreg      void 
  8824 ;; Registers used:
  8825 ;;		wreg, status,2, status,0
  8826 ;; Tracked objects:
  8827 ;;		On entry : 0/0
  8828 ;;		On exit  : 0/0
  8829 ;;		Unchanged: 0/0
  8830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8831 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8832 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8833 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8834 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8835 ;;Total ram usage:        1 bytes
  8836 ;; Hardware stack levels used: 1
  8837 ;; This function calls:
  8838 ;;		Nothing
  8839 ;; This function is called by:
  8840 ;;		_I2C_2_Master_Start
  8841 ;;		_I2C_2_Master_RepStart
  8842 ;;		_I2C_2_Master_Stop
  8843 ;;		_I2C_2_Master_Write
  8844 ;;		_I2C_2_Master_Read
  8845 ;; This function uses a non-reentrant model
  8846 ;;
  8847                           
  8848                           	psect	text47
  8849  003F56                     __ptext47:
  8850                           	callstack 0
  8851  003F56                     _I2C_2_Master_Idle:
  8852                           	callstack 27
  8853  003F56                     l157:
  8854  003F56  010E               	movlb	14	; () banked
  8855  003F58  B5D8               	btfsc	216,2,b	;volatile
  8856  003F5A  EFB1  F01F         	goto	u2331
  8857  003F5E  EFB3  F01F         	goto	u2330
  8858  003F62                     u2331:
  8859  003F62  EFAB  F01F         	goto	l157
  8860  003F66                     u2330:
  8861  003F66                     
  8862                           ; BSR set to: 14
  8863  003F66  CEDA F001          	movff	3802,??_I2C_2_Master_Idle	;volatile
  8864  003F6A  0E1F               	movlw	31
  8865  003F6C  1601               	andwf	??_I2C_2_Master_Idle^0,f,c
  8866  003F6E  A4D8               	btfss	status,2,c
  8867  003F70  EFBC  F01F         	goto	u2341
  8868  003F74  EFBE  F01F         	goto	u2340
  8869  003F78                     u2341:
  8870  003F78  EFAB  F01F         	goto	l157
  8871  003F7C                     u2340:
  8872  003F7C                     
  8873                           ; BSR set to: 14
  8874  003F7C  0012               	return		;funcret
  8875  003F7E                     __end_of_I2C_2_Master_Idle:
  8876                           	callstack 0
  8877                           
  8878 ;; *************** function _LED_R *****************
  8879 ;; Defined at:
  8880 ;;		line 100 in file "color.c"
  8881 ;; Parameters:    Size  Location     Type
  8882 ;;		None
  8883 ;; Auto vars:     Size  Location     Type
  8884 ;;		None
  8885 ;; Return value:  Size  Location     Type
  8886 ;;                  1    wreg      void 
  8887 ;; Registers used:
  8888 ;;		wreg
  8889 ;; Tracked objects:
  8890 ;;		On entry : 0/0
  8891 ;;		On exit  : 0/0
  8892 ;;		Unchanged: 0/0
  8893 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8894 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8895 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8896 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8897 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8898 ;;Total ram usage:        2 bytes
  8899 ;; Hardware stack levels used: 1
  8900 ;; This function calls:
  8901 ;;		Nothing
  8902 ;; This function is called by:
  8903 ;;		_calibrate_white
  8904 ;;		_detect_color
  8905 ;;		_main
  8906 ;; This function uses a non-reentrant model
  8907 ;;
  8908                           
  8909                           	psect	text48
  8910  003F9E                     __ptext48:
  8911                           	callstack 0
  8912  003F9E                     _LED_R:
  8913                           	callstack 29
  8914  003F9E                     
  8915                           ;color.c: 102:     LATGbits.LATG1 = 1;
  8916  003F9E  827F               	bsf	127,1,c	;volatile
  8917                           
  8918                           ;color.c: 103:     LATFbits.LATF7 = 0;
  8919  003FA0  9E7E               	bcf	126,7,c	;volatile
  8920                           
  8921                           ;color.c: 104:     LATAbits.LATA4 = 0;
  8922  003FA2  9879               	bcf	121,4,c	;volatile
  8923  003FA4                     
  8924                           ;color.c: 105:     _delay((unsigned long)((200)*(64000000/4000.0)));
  8925  003FA4  0E11               	movlw	17
  8926  003FA6  6E02               	movwf	(??_LED_R+1)^0,c
  8927  003FA8  0E3C               	movlw	60
  8928  003FAA  6E01               	movwf	??_LED_R^0,c
  8929  003FAC  0ECB               	movlw	203
  8930  003FAE                     u4317:
  8931  003FAE  2EE8               	decfsz	wreg,f,c
  8932  003FB0  D7FE               	bra	u4317
  8933  003FB2  2E01               	decfsz	??_LED_R^0,f,c
  8934  003FB4  D7FC               	bra	u4317
  8935  003FB6  2E02               	decfsz	(??_LED_R+1)^0,f,c
  8936  003FB8  D7FA               	bra	u4317
  8937  003FBA  F000               	nop	
  8938  003FBC  0012               	return		;funcret
  8939  003FBE                     __end_of_LED_R:
  8940                           	callstack 0
  8941                           
  8942 ;; *************** function _LED_G *****************
  8943 ;; Defined at:
  8944 ;;		line 127 in file "color.c"
  8945 ;; Parameters:    Size  Location     Type
  8946 ;;		None
  8947 ;; Auto vars:     Size  Location     Type
  8948 ;;		None
  8949 ;; Return value:  Size  Location     Type
  8950 ;;                  1    wreg      void 
  8951 ;; Registers used:
  8952 ;;		wreg
  8953 ;; Tracked objects:
  8954 ;;		On entry : 0/0
  8955 ;;		On exit  : 0/0
  8956 ;;		Unchanged: 0/0
  8957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8958 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8959 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8960 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8961 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8962 ;;Total ram usage:        2 bytes
  8963 ;; Hardware stack levels used: 1
  8964 ;; This function calls:
  8965 ;;		Nothing
  8966 ;; This function is called by:
  8967 ;;		_calibrate_white
  8968 ;;		_detect_color
  8969 ;;		_main
  8970 ;; This function uses a non-reentrant model
  8971 ;;
  8972                           
  8973                           	psect	text49
  8974  003FBE                     __ptext49:
  8975                           	callstack 0
  8976  003FBE                     _LED_G:
  8977                           	callstack 29
  8978  003FBE                     
  8979                           ;color.c: 129:     LATGbits.LATG1 = 0;
  8980  003FBE  927F               	bcf	127,1,c	;volatile
  8981                           
  8982                           ;color.c: 130:     LATFbits.LATF7 = 0;
  8983  003FC0  9E7E               	bcf	126,7,c	;volatile
  8984                           
  8985                           ;color.c: 131:     LATAbits.LATA4 = 1;
  8986  003FC2  8879               	bsf	121,4,c	;volatile
  8987  003FC4                     
  8988                           ;color.c: 132:     _delay((unsigned long)((200)*(64000000/4000.0)));
  8989  003FC4  0E11               	movlw	17
  8990  003FC6  6E02               	movwf	(??_LED_G+1)^0,c
  8991  003FC8  0E3C               	movlw	60
  8992  003FCA  6E01               	movwf	??_LED_G^0,c
  8993  003FCC  0ECB               	movlw	203
  8994  003FCE                     u4327:
  8995  003FCE  2EE8               	decfsz	wreg,f,c
  8996  003FD0  D7FE               	bra	u4327
  8997  003FD2  2E01               	decfsz	??_LED_G^0,f,c
  8998  003FD4  D7FC               	bra	u4327
  8999  003FD6  2E02               	decfsz	(??_LED_G+1)^0,f,c
  9000  003FD8  D7FA               	bra	u4327
  9001  003FDA  F000               	nop	
  9002  003FDC  0012               	return		;funcret
  9003  003FDE                     __end_of_LED_G:
  9004                           	callstack 0
  9005                           
  9006 ;; *************** function _LED_B *****************
  9007 ;; Defined at:
  9008 ;;		line 118 in file "color.c"
  9009 ;; Parameters:    Size  Location     Type
  9010 ;;		None
  9011 ;; Auto vars:     Size  Location     Type
  9012 ;;		None
  9013 ;; Return value:  Size  Location     Type
  9014 ;;                  1    wreg      void 
  9015 ;; Registers used:
  9016 ;;		wreg
  9017 ;; Tracked objects:
  9018 ;;		On entry : 0/0
  9019 ;;		On exit  : 0/0
  9020 ;;		Unchanged: 0/0
  9021 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9022 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9023 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9024 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9025 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9026 ;;Total ram usage:        2 bytes
  9027 ;; Hardware stack levels used: 1
  9028 ;; This function calls:
  9029 ;;		Nothing
  9030 ;; This function is called by:
  9031 ;;		_calibrate_white
  9032 ;;		_detect_color
  9033 ;;		_main
  9034 ;; This function uses a non-reentrant model
  9035 ;;
  9036                           
  9037                           	psect	text50
  9038  003FDE                     __ptext50:
  9039                           	callstack 0
  9040  003FDE                     _LED_B:
  9041                           	callstack 29
  9042  003FDE                     
  9043                           ;color.c: 120:     LATGbits.LATG1 = 0;
  9044  003FDE  927F               	bcf	127,1,c	;volatile
  9045                           
  9046                           ;color.c: 121:     LATFbits.LATF7 = 1;
  9047  003FE0  8E7E               	bsf	126,7,c	;volatile
  9048                           
  9049                           ;color.c: 122:     LATAbits.LATA4 = 0;
  9050  003FE2  9879               	bcf	121,4,c	;volatile
  9051  003FE4                     
  9052                           ;color.c: 123:     _delay((unsigned long)((200)*(64000000/4000.0)));
  9053  003FE4  0E11               	movlw	17
  9054  003FE6  6E02               	movwf	(??_LED_B+1)^0,c
  9055  003FE8  0E3C               	movlw	60
  9056  003FEA  6E01               	movwf	??_LED_B^0,c
  9057  003FEC  0ECB               	movlw	203
  9058  003FEE                     u4337:
  9059  003FEE  2EE8               	decfsz	wreg,f,c
  9060  003FF0  D7FE               	bra	u4337
  9061  003FF2  2E01               	decfsz	??_LED_B^0,f,c
  9062  003FF4  D7FC               	bra	u4337
  9063  003FF6  2E02               	decfsz	(??_LED_B+1)^0,f,c
  9064  003FF8  D7FA               	bra	u4337
  9065  003FFA  F000               	nop	
  9066  003FFC  0012               	return		;funcret
  9067  003FFE                     __end_of_LED_B:
  9068                           	callstack 0
  9069                           
  9070 ;; *************** function _LED_C *****************
  9071 ;; Defined at:
  9072 ;;		line 109 in file "color.c"
  9073 ;; Parameters:    Size  Location     Type
  9074 ;;		None
  9075 ;; Auto vars:     Size  Location     Type
  9076 ;;		None
  9077 ;; Return value:  Size  Location     Type
  9078 ;;                  1    wreg      void 
  9079 ;; Registers used:
  9080 ;;		wreg
  9081 ;; Tracked objects:
  9082 ;;		On entry : 0/0
  9083 ;;		On exit  : 0/0
  9084 ;;		Unchanged: 0/0
  9085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9086 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9087 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9088 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9089 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9090 ;;Total ram usage:        2 bytes
  9091 ;; Hardware stack levels used: 1
  9092 ;; This function calls:
  9093 ;;		Nothing
  9094 ;; This function is called by:
  9095 ;;		_main
  9096 ;; This function uses a non-reentrant model
  9097 ;;
  9098                           
  9099                           	psect	text51
  9100  003FFE                     __ptext51:
  9101                           	callstack 0
  9102  003FFE                     _LED_C:
  9103                           	callstack 30
  9104  003FFE                     
  9105                           ;color.c: 111:     LATGbits.LATG1 = 1;
  9106  003FFE  827F               	bsf	127,1,c	;volatile
  9107                           
  9108                           ;color.c: 112:     LATFbits.LATF7 = 1;
  9109  004000  8E7E               	bsf	126,7,c	;volatile
  9110                           
  9111                           ;color.c: 113:     LATAbits.LATA4 = 1;
  9112  004002  8879               	bsf	121,4,c	;volatile
  9113  004004                     
  9114                           ;color.c: 114:     _delay((unsigned long)((200)*(64000000/4000.0)));
  9115  004004  0E11               	movlw	17
  9116  004006  6E02               	movwf	(??_LED_C+1)^0,c
  9117  004008  0E3C               	movlw	60
  9118  00400A  6E01               	movwf	??_LED_C^0,c
  9119  00400C  0ECB               	movlw	203
  9120  00400E                     u4347:
  9121  00400E  2EE8               	decfsz	wreg,f,c
  9122  004010  D7FE               	bra	u4347
  9123  004012  2E01               	decfsz	??_LED_C^0,f,c
  9124  004014  D7FC               	bra	u4347
  9125  004016  2E02               	decfsz	(??_LED_C+1)^0,f,c
  9126  004018  D7FA               	bra	u4347
  9127  00401A  F000               	nop	
  9128  00401C  0012               	return		;funcret
  9129  00401E                     __end_of_LED_C:
  9130                           	callstack 0
  9131                           
  9132                           	psect	rparam
  9133  0000                     
  9134                           	psect	idloc
  9135                           
  9136                           ;Config register IDLOC0 @ 0x200000
  9137                           ;	unspecified, using default values
  9138  200000                     	org	2097152
  9139  200000  0FFF               	dw	4095
  9140                           
  9141                           ;Config register IDLOC1 @ 0x200002
  9142                           ;	unspecified, using default values
  9143  200002                     	org	2097154
  9144  200002  0FFF               	dw	4095
  9145                           
  9146                           ;Config register IDLOC2 @ 0x200004
  9147                           ;	unspecified, using default values
  9148  200004                     	org	2097156
  9149  200004  0FFF               	dw	4095
  9150                           
  9151                           ;Config register IDLOC3 @ 0x200006
  9152                           ;	unspecified, using default values
  9153  200006                     	org	2097158
  9154  200006  0FFF               	dw	4095
  9155                           
  9156                           ;Config register IDLOC4 @ 0x200008
  9157                           ;	unspecified, using default values
  9158  200008                     	org	2097160
  9159  200008  0FFF               	dw	4095
  9160                           
  9161                           ;Config register IDLOC5 @ 0x20000A
  9162                           ;	unspecified, using default values
  9163  20000A                     	org	2097162
  9164  20000A  0FFF               	dw	4095
  9165                           
  9166                           ;Config register IDLOC6 @ 0x20000C
  9167                           ;	unspecified, using default values
  9168  20000C                     	org	2097164
  9169  20000C  0FFF               	dw	4095
  9170                           
  9171                           ;Config register IDLOC7 @ 0x20000E
  9172                           ;	unspecified, using default values
  9173  20000E                     	org	2097166
  9174  20000E  0FFF               	dw	4095
  9175                           
  9176                           	psect	config
  9177                           
  9178                           ;Config register CONFIG1L @ 0x300000
  9179                           ;	External Oscillator mode Selection bits
  9180                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  9181                           ;	Power-up default value for COSC bits
  9182                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  9183  300000                     	org	3145728
  9184  300000  AA                 	db	170
  9185                           
  9186                           ;Config register CONFIG1H @ 0x300001
  9187                           ;	unspecified, using default values
  9188                           ;	Clock Out Enable bit
  9189                           ;	CLKOUTEN = 0x1, unprogrammed default
  9190                           ;	Clock Switch Enable bit
  9191                           ;	CSWEN = 0x1, unprogrammed default
  9192                           ;	Fail-Safe Clock Monitor Enable bit
  9193                           ;	FCMEN = 0x1, unprogrammed default
  9194  300001                     	org	3145729
  9195  300001  FF                 	db	255
  9196                           
  9197                           ;Config register CONFIG2L @ 0x300002
  9198                           ;	unspecified, using default values
  9199                           ;	Master Clear Enable bit
  9200                           ;	MCLRE = 0x1, unprogrammed default
  9201                           ;	Power-up Timer Enable bit
  9202                           ;	PWRTE = 0x1, unprogrammed default
  9203                           ;	Low-power BOR enable bit
  9204                           ;	LPBOREN = 0x1, unprogrammed default
  9205                           ;	Brown-out Reset Enable bits
  9206                           ;	BOREN = 0x3, unprogrammed default
  9207  300002                     	org	3145730
  9208  300002  FF                 	db	255
  9209                           
  9210                           ;Config register CONFIG2H @ 0x300003
  9211                           ;	unspecified, using default values
  9212                           ;	Brown Out Reset Voltage selection bits
  9213                           ;	BORV = 0x3, unprogrammed default
  9214                           ;	ZCD Disable bit
  9215                           ;	ZCD = 0x1, unprogrammed default
  9216                           ;	PPSLOCK bit One-Way Set Enable bit
  9217                           ;	PPS1WAY = 0x1, unprogrammed default
  9218                           ;	Stack Full/Underflow Reset Enable bit
  9219                           ;	STVREN = 0x1, unprogrammed default
  9220                           ;	Debugger Enable bit
  9221                           ;	DEBUG = 0x1, unprogrammed default
  9222                           ;	Extended Instruction Set Enable bit
  9223                           ;	XINST = 0x1, unprogrammed default
  9224  300003                     	org	3145731
  9225  300003  FF                 	db	255
  9226                           
  9227                           ;Config register CONFIG3L @ 0x300004
  9228                           ;	WDT Period Select bits
  9229                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  9230                           ;	WDT operating mode
  9231                           ;	WDTE = OFF, WDT Disabled
  9232  300004                     	org	3145732
  9233  300004  9F                 	db	159
  9234                           
  9235                           ;Config register CONFIG3H @ 0x300005
  9236                           ;	unspecified, using default values
  9237                           ;	WDT Window Select bits
  9238                           ;	WDTCWS = 0x7, unprogrammed default
  9239                           ;	WDT input clock selector
  9240                           ;	WDTCCS = 0x7, unprogrammed default
  9241  300005                     	org	3145733
  9242  300005  FF                 	db	255
  9243                           
  9244                           ;Config register CONFIG4L @ 0x300006
  9245                           ;	unspecified, using default values
  9246                           ;	Write Protection Block 0
  9247                           ;	WRT0 = 0x1, unprogrammed default
  9248                           ;	Write Protection Block 1
  9249                           ;	WRT1 = 0x1, unprogrammed default
  9250                           ;	Write Protection Block 2
  9251                           ;	WRT2 = 0x1, unprogrammed default
  9252                           ;	Write Protection Block 3
  9253                           ;	WRT3 = 0x1, unprogrammed default
  9254                           ;	Write Protection Block 3
  9255                           ;	WRT4 = 0x1, unprogrammed default
  9256                           ;	Write Protection Block 3
  9257                           ;	WRT5 = 0x1, unprogrammed default
  9258                           ;	Write Protection Block 3
  9259                           ;	WRT6 = 0x1, unprogrammed default
  9260                           ;	Write Protection Block 3
  9261                           ;	WRT7 = 0x1, unprogrammed default
  9262  300006                     	org	3145734
  9263  300006  FF                 	db	255
  9264                           
  9265                           ;Config register CONFIG4H @ 0x300007
  9266                           ;	unspecified, using default values
  9267                           ;	Configuration Register Write Protection bit
  9268                           ;	WRTC = 0x1, unprogrammed default
  9269                           ;	Boot Block Write Protection bit
  9270                           ;	WRTB = 0x1, unprogrammed default
  9271                           ;	Data EEPROM Write Protection bit
  9272                           ;	WRTD = 0x1, unprogrammed default
  9273                           ;	Scanner Enable bit
  9274                           ;	SCANE = 0x1, unprogrammed default
  9275                           ;	Low Voltage Programming Enable bit
  9276                           ;	LVP = 0x1, unprogrammed default
  9277  300007                     	org	3145735
  9278  300007  FF                 	db	255
  9279                           
  9280                           ;Config register CONFIG5L @ 0x300008
  9281                           ;	unspecified, using default values
  9282                           ;	UserNVM Program Memory Code Protection bit
  9283                           ;	CP = 0x1, unprogrammed default
  9284                           ;	DataNVM Memory Code Protection bit
  9285                           ;	CPD = 0x1, unprogrammed default
  9286  300008                     	org	3145736
  9287  300008  FF                 	db	255
  9288                           
  9289                           ;Config register CONFIG5H @ 0x300009
  9290                           ;	unspecified, using default values
  9291  300009                     	org	3145737
  9292  300009  FF                 	db	255
  9293                           
  9294                           ;Config register CONFIG6L @ 0x30000A
  9295                           ;	unspecified, using default values
  9296                           ;	Table Read Protection Block 0
  9297                           ;	EBTR0 = 0x1, unprogrammed default
  9298                           ;	Table Read Protection Block 1
  9299                           ;	EBTR1 = 0x1, unprogrammed default
  9300                           ;	Table Read Protection Block 2
  9301                           ;	EBTR2 = 0x1, unprogrammed default
  9302                           ;	Table Read Protection Block 3
  9303                           ;	EBTR3 = 0x1, unprogrammed default
  9304                           ;	Table Read Protection Block 4
  9305                           ;	EBTR4 = 0x1, unprogrammed default
  9306                           ;	Table Read Protection Block 5
  9307                           ;	EBTR5 = 0x1, unprogrammed default
  9308                           ;	Table Read Protection Block 6
  9309                           ;	EBTR6 = 0x1, unprogrammed default
  9310                           ;	Table Read Protection Block 7
  9311                           ;	EBTR7 = 0x1, unprogrammed default
  9312  30000A                     	org	3145738
  9313  30000A  FF                 	db	255
  9314                           
  9315                           ;Config register CONFIG6H @ 0x30000B
  9316                           ;	unspecified, using default values
  9317                           ;	Boot Block Table Read Protection bit
  9318                           ;	EBTRB = 0x1, unprogrammed default
  9319  30000B                     	org	3145739
  9320  30000B  FF                 	db	255
  9321                           tosu	equ	0xFFF
  9322                           tosh	equ	0xFFE
  9323                           tosl	equ	0xFFD
  9324                           stkptr	equ	0xFFC
  9325                           pclatu	equ	0xFFB
  9326                           pclath	equ	0xFFA
  9327                           pcl	equ	0xFF9
  9328                           tblptru	equ	0xFF8
  9329                           tblptrh	equ	0xFF7
  9330                           tblptrl	equ	0xFF6
  9331                           tablat	equ	0xFF5
  9332                           prodh	equ	0xFF4
  9333                           prodl	equ	0xFF3
  9334                           indf0	equ	0xFEF
  9335                           postinc0	equ	0xFEE
  9336                           postdec0	equ	0xFED
  9337                           preinc0	equ	0xFEC
  9338                           plusw0	equ	0xFEB
  9339                           fsr0h	equ	0xFEA
  9340                           fsr0l	equ	0xFE9
  9341                           wreg	equ	0xFE8
  9342                           indf1	equ	0xFE7
  9343                           postinc1	equ	0xFE6
  9344                           postdec1	equ	0xFE5
  9345                           preinc1	equ	0xFE4
  9346                           plusw1	equ	0xFE3
  9347                           fsr1h	equ	0xFE2
  9348                           fsr1l	equ	0xFE1
  9349                           bsr	equ	0xFE0
  9350                           indf2	equ	0xFDF
  9351                           postinc2	equ	0xFDE
  9352                           postdec2	equ	0xFDD
  9353                           preinc2	equ	0xFDC
  9354                           plusw2	equ	0xFDB
  9355                           fsr2h	equ	0xFDA
  9356                           fsr2l	equ	0xFD9
  9357                           status	equ	0xFD8

Data Sizes:
    Strings     78
    Constant    4
    Data        2
    BSS         148
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     95      95
    BANK0           160    128     156
    BANK1           256     47     169
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_14(CODE[5]), STR_13(CODE[6]), STR_2(CODE[12]), STR_1(CODE[15]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 15
		 -> STR_14(CODE[5]), STR_13(CODE[6]), STR_2(CODE[12]), STR_1(CODE[15]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_14(CODE[5]), STR_13(CODE[6]), STR_2(CODE[12]), STR_1(CODE[15]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 100
		 -> voltage_display@buf(COMRAM[80]), color_predict@buf(BANK0[100]), check_color_reading@buf(BANK0[100]), color_display@buf(BANK0[100]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S2247$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S2247$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    motorR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    motorR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhhllll[1]), PWM6DCH(BITBIGSFRhhhllll[1]), 

    motorL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    motorL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhhllll[1]), PWM6DCH(BITBIGSFRhhhllll[1]), 

    sendStringSerial4@string	PTR unsigned char  size(2) Largest target is 100
		 -> voltage_display@buf(COMRAM[80]), color_predict@buf(BANK0[100]), check_color_reading@buf(BANK0[100]), color_display@buf(BANK0[100]), 

    voltage_display@m.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    voltage_display@m.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhhllll[1]), PWM6DCH(BITBIGSFRhhhllll[1]), 

    voltage_read@m.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    voltage_read@m.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhhllll[1]), PWM6DCH(BITBIGSFRhhhllll[1]), 

    fullSpeedAhead@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    fullSpeedAhead@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhhllll[1]), PWM6DCH(BITBIGSFRhhhllll[1]), 

    fullSpeedAhead@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    fullSpeedAhead@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhhllll[1]), PWM6DCH(BITBIGSFRhhhllll[1]), 

    turnRight@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turnRight@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhhllll[1]), PWM6DCH(BITBIGSFRhhhllll[1]), 

    turnRight@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turnRight@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhhllll[1]), PWM6DCH(BITBIGSFRhhhllll[1]), 

    turnLeft@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turnLeft@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhhllll[1]), PWM6DCH(BITBIGSFRhhhllll[1]), 

    turnLeft@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turnLeft@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhhllll[1]), PWM6DCH(BITBIGSFRhhhllll[1]), 

    stop@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    stop@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhhllll[1]), PWM6DCH(BITBIGSFRhhhllll[1]), 

    stop@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    stop@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhhllll[1]), PWM6DCH(BITBIGSFRhhhllll[1]), 

    setMotorPWM@m.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    setMotorPWM@m.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhhllll[1]), PWM6DCH(BITBIGSFRhhhllll[1]), 

    initDCmotors_parameter@motorR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    initDCmotors_parameter@motorR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhhllll[1]), PWM6DCH(BITBIGSFRhhhllll[1]), 

    initDCmotors_parameter@motorR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    initDCmotors_parameter@motorL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    initDCmotors_parameter@motorL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhhllll[1]), PWM6DCH(BITBIGSFRhhhllll[1]), 

    initDCmotors_parameter@motorL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    motorR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    motorR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhhllll[1]), PWM6DCH(BITBIGSFRhhhllll[1]), 

    S214DC_motor$dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    motorL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    S214DC_motor$dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhhllll[1]), PWM6DCH(BITBIGSFRhhhllll[1]), 

    motorL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhhllll[1]), PWM6DCH(BITBIGSFRhhhllll[1]), 

    detect_color@w	PTR struct white_card size(2) Largest target is 18
		 -> main@white(BANK1[18]), 

    detect_color@m	PTR struct color_rgb size(2) Largest target is 8
		 -> main@rgb(BANK1[8]), 

    calibrate_white@w	PTR struct white_card size(2) Largest target is 18
		 -> main@white(BANK1[18]), 

    color_display@m	PTR struct color_rgb size(2) Largest target is 8
		 -> main@rgb(BANK1[8]), 

    read_color@m	PTR struct color_rgb size(2) Largest target is 8
		 -> main@rgb(BANK1[8]), 


Critical Paths under _main in COMRAM

    _detect_color->_compare
    _read_color->_color_read_Blue
    _read_color->_color_read_Clear
    _read_color->_color_read_Green
    _read_color->_color_read_Red
    _color_read_Clear->_I2C_2_Master_Read
    _lroundf->___fltol
    _roundf->___flmul
    ___flsub->___fladd
    ___flmul->___fldiv
    ___fltol->_roundf
    ___fldiv->___xxtofl
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _sendStringSerial4->_sendCharSerial4
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _calibrate_white->_color_read_Blue
    _calibrate_white->_color_read_Green
    _calibrate_white->_color_read_Red
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle

Critical Paths under _main in BANK0

    _main->_color_predict
    _detect_color->_compare
    _lroundf->___fltol
    _compare->_lroundf
    _color_predict->_sprintf
    _color_display->_sprintf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                58    58      0   42933
                                            126 BANK0      2     2      0
                                              0 BANK1     47    47      0
                  _I2C_2_Master_Init
                              _LED_B
                              _LED_C
                              _LED_G
                              _LED_R
                    _calibrate_white
                   _calibration_init
                   _color_click_init
                      _color_display
                      _color_predict
                       _detect_color
                    _initDCmotorsPWM
             _initDCmotors_parameter
                         _initUSART4
                         _read_color
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initDCmotors_parameter                               4     0      4     416
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2      76
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _detect_color                                        31    27      4   24460
                                             16 BANK0     31    27      4
                              _LED_B
                              _LED_G
                              _LED_R
                            ___fldiv
                            ___flmul
                           ___xxtofl
                            _compare
                            _lroundf
                         _read_color
 ---------------------------------------------------------------------------------
 (1) _read_color                                           2     0      2    1148
                                             11 COMRAM     2     0      2
                    _color_read_Blue
                   _color_read_Clear
                   _color_read_Green
                     _color_read_Red
 ---------------------------------------------------------------------------------
 (2) _color_read_Clear                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _lroundf                                              4     0      4   12618
                                              6 BANK0      4     0      4
                            ___fldiv (ARG)
                            ___fltol
                           ___xxtofl (ARG)
                             _roundf
 ---------------------------------------------------------------------------------
 (3) _roundf                                              26    22      4   11379
                                             64 COMRAM    26    22      4
                            ___fladd
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
 ---------------------------------------------------------------------------------
 (4) ___flsub                                              8     0      8    3649
                                             16 COMRAM     8     0      8
                            ___fladd
 ---------------------------------------------------------------------------------
 (5) ___fladd                                             16     8      8    3326
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (4) ___flneg                                              4     0      4     197
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (4) ___flmul                                             25    17      8    3082
                                             39 COMRAM    25    17      8
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___flge                                              12     4      8     486
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             10     6      4     305
                                             90 COMRAM     4     0      4
                                              0 BANK0      6     6      0
                             _roundf (ARG)
 ---------------------------------------------------------------------------------
 (2) _compare                                              7     1      6    2164
                                             94 COMRAM     1     1      0
                                             10 BANK0      6     0      6
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
                            _lroundf (ARG)
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4    1660
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             25    17      8    2585
                                             14 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _color_predict                                      102   102      0    7585
                                             25 BANK0    101   101      0
                  _sendStringSerial4
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _color_display                                      102   100      2    7725
                                             87 COMRAM     2     0      2
                                             25 BANK0    100   100      0
                  _sendStringSerial4
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             27    15     12    6912
                                              0 BANK0     25    13     12
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6    6105
                                             79 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           42    36      6    5751
                                             63 COMRAM    16    10      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                36    26     10    4358
                                             27 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    2709
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1235
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                9     5      4     834
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (2) _sendStringSerial4                                    2     0      2     371
                                              1 COMRAM     2     0      2
                    _sendCharSerial4
 ---------------------------------------------------------------------------------
 (3) _sendCharSerial4                                      1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     294
                                              4 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     294
                                              2 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _calibration_init                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _calibrate_white                                      4     2      2     613
                                             11 COMRAM     4     2      2
                              _LED_B
                              _LED_G
                              _LED_R
                    _color_read_Blue
                   _color_read_Green
                     _color_read_Red
 ---------------------------------------------------------------------------------
 (2) _color_read_Red                                       7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Green                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Blue                                      7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Write                                   1     1      0      22
                                              1 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Read                                    3     3      0      45
                                              1 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Idle                                    1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _LED_R                                                2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _LED_G                                                2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _LED_B                                                2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _LED_C                                                2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_2_Master_Init
   _LED_B
   _LED_C
   _LED_G
   _LED_R
   _calibrate_white
     _LED_B
     _LED_G
     _LED_R
     _color_read_Blue
       _I2C_2_Master_Read
         _I2C_2_Master_Idle
       _I2C_2_Master_RepStart
         _I2C_2_Master_Idle
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
     _color_read_Green
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Red
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _calibration_init
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _color_display
     _sendStringSerial4
       _sendCharSerial4
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
               _strlen
           _fputc
   _color_predict
     _sendStringSerial4
     _sprintf
   _detect_color
     _LED_B
     _LED_G
     _LED_R
     ___fldiv
       ___xxtofl (ARG)
     ___flmul
       ___fldiv (ARG)
       ___xxtofl (ARG)
     ___xxtofl
     _compare
       ___fldiv (ARG)
       ___flmul (ARG)
       ___xxtofl (ARG)
       _lroundf (ARG)
         ___fldiv (ARG)
         ___fltol (ARG)
           _roundf (ARG)
             ___fladd
             ___flge
             ___flmul
             ___flneg
             ___flsub
               ___fladd
         ___xxtofl (ARG)
         _roundf (ARG)
     _lroundf
     _read_color
       _color_read_Blue
       _color_read_Clear
         _I2C_2_Master_Read
         _I2C_2_Master_RepStart
         _I2C_2_Master_Start
         _I2C_2_Master_Stop
         _I2C_2_Master_Write
       _color_read_Green
       _color_read_Red
   _initDCmotorsPWM
   _initDCmotors_parameter
   _initUSART4
   _read_color

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      59        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     2F      A9       7       66.0%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     80      9C       5       97.5%
BITBIGSFRllhhl      6E      0       0      44        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5F      5F       1      100.0%
BITBIGSFRhhhh       40      0       0      32        0.0%
BITBIGSFRlllllh     32      0       0      49        0.0%
BITBIGSFRlllllh     2A      0       0      53        0.0%
BITBIGSFRllllll     26      0       0      57        0.0%
BITBIGSFRllllhh     20      0       0      47        0.0%
BITBIGSFRhhhlh      17      0       0      33        0.0%
BITBIGSFRllhhhh     14      0       0      41        0.0%
BITBIGSFRhhhlll     11      0       0      35        0.0%
BITBIGSFRlllllh      F      0       0      55        0.0%
BITBIGSFRllllhl      C      0       0      48        0.0%
BITBIGSFRlllllh      9      0       0      54        0.0%
BITBIGSFRllhlll      8      0       0      45        0.0%
BITBIGSFRllhhhl      6      0       0      43        0.0%
BITBIGSFRllllll      6      0       0      56        0.0%
BITBIGSFRlllllh      6      0       0      52        0.0%
BITBIGSFRhhhlll      6      0       0      36        0.0%
BITBIGSFRlllllh      5      0       0      51        0.0%
BITBIGSFRllhhhh      3      0       0      42        0.0%
BITBIGSFRlllllh      3      0       0      50        0.0%
BITBIGSFRhlh         1      0       0      37        0.0%
BITBIGSFRhhhllh      1      0       0      34        0.0%
BITBIGSFRlhh         1      0       0      39        0.0%
BITBIGSFRlllh        1      0       0      46        0.0%
BITBIGSFRlhl         1      0       0      40        0.0%
BITBIGSFRhll         1      0       0      38        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1A4      58        0.0%
DATA                 0      0     1A4       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.35 build 20211206165544 
Symbol Table                                                                                   Wed Mar 09 12:54:22 2022

                _color_read_Red 3B6A                    ___fldiv@aexp 0027                    ___fldiv@bexp 0026  
                  ___fldiv@sign 001F                 _color_read_Blue 3C0A                   _color_predict 358E  
                            l50 3F9C                              l53 3BB8                              l62 3B68  
                            l71 401C                              l47 3EFA                              l56 3C58  
                            l80 3A06                              l65 3AC6                              l74 3FFC  
                            l59 3C08                              l68 3FBC                              l77 3FDC  
                            l96 366A                              l99 3380                _color_read_Clear 3B1A  
              _color_read_Green 3BBA                             l120 3E58                             l115 18E8  
                           l116 18EC                             l119 3E56                             l160 3F7C  
                           l154 3F54                             l163 407E                             l172 406A  
                           l244 3D24                             l157 3F56                             l166 4088  
                           l175 3D66                             l247 373C                             l343 403A  
                           l352 403E                             l169 4074                             l361 3F2A  
                           l355 4052                             l518 405E                             l651 3256  
                           l821 3488                             l638 30F2                             l794 358C  
                           l789 3546                             l798 3E90                ?_calibrate_white 000C  
                           _abs 3D68                             _pad 38D2                             wreg 000FE8  
                  ___flmul@aexp 0039                    ___flmul@bexp 003A                    ___flmul@sign 0034  
                  ___flmul@temp 003F                    ___flmul@prod 003B                    ___fltol@exp1 0065  
                          l1111 2742                            l1120 282A                            l1200 3E1E  
                          l1106 291E                            ?_abs 0013                            l1108 277E  
                          l1052 1ADC                            l1117 27C4                            l1061 1DAC  
                          l1053 1ACA                            l1142 21D6                            l1054 1A90  
                          l1207 3B18                            l1119 283C                            l3000 3206  
                          l1145 2068                            l3002 3216                            l1306 3CE2  
                          l1330 3EC6                            l1234 3918                            l3010 38E2  
                          l1138 1E72                            l1155 2198                            l1147 20E0  
                          l3004 3236                            l3020 3938                            l3012 38F6  
                          l1148 20CE                            l3100 1A0E                            l1309 408C  
                          l1237 395A                            l1245 29C0                            l1069 1BF6  
                          l1317 2584                            l3030 3D68                            l3022 393C  
                          l3014 3904                            l1182 2DB6                            l1078 1CC6  
                          l3110 1A22                            l3102 1A12                            l1094 3C9E  
                          l1239 3996                            l1247 29C8                            l1079 1CB4  
                          l4000 32BC                            l3032 3D82                            l3024 396A  
                          l3016 3910                            l3008 38D2                            l1272 2F6A  
                          l3200 1C88                            l3120 1A5C                            l3112 1A26  
                          l3104 1A16                            l3040 18FA                            l1265 2C02  
                          l1193 2D4E                            l3034 3F56                            l4010 3338  
                          l4002 32D4                            l3026 397E                            l3018 3924  
                          l1186 2CF2                            l3210 1CE2                            l3202 1C96  
                          l3130 1AAE                            l3122 1A78                            l3114 1A2A  
                          l3106 1A1A                            l3050 193A                            l3042 1908  
                          l1283 3D9E                            l1179 2C5A                            l3036 3F66  
                          l4012 3350                            l4004 32EC                            l3220 1D4C  
                          l3212 1CF0                            l3204 1CAC                            l3140 1AFA  
                          l3132 1ABC                            l3124 1A88                            l3108 1A1E  
                          l3116 1A2E                            l3060 196C                            l3052 193C  
                          l3044 190A                            l4100 1852                            l4020 0E9E  
                          l3302 4076                            l3310 406C                            l4014 3368  
                          l4006 331C                            l1286 3DA6                            l1278 3A60  
                          l3230 1D86                            l3222 1D6C                            l3214 1D2A  
                          l3150 1B3A                            l3134 1ABE                            l3126 1A9E  
                          l3118 1A32                            l3070 1994                            l3062 196E  
                          l3046 191A                            l3054 1944                            l3038 18EE  
                          l4102 1880                            l4030 1026                            l4022 0EAA  
                          l1279 3A68                            l3320 3D2C                            l3304 407A  
                          l3312 4070                            l4008 3320                            l3240 2920  
                          l3400 1F7E                            l3232 1D8C                            l3224 1D70  
                          l3208 1CD6                            l3216 1D2C                            l3160 1B64  
                          l3152 1B46                            l3144 1B0E                            l3136 1AC8  
                          l3128 1AAA                            l3080 19CE                            l3072 19A4  
                          l3064 1974                            l3056 1954                            l3048 192A  
                          l4104 1886                            l4040 110A                            l4032 10CE  
                          l4024 0F46                            l4016 0E54                            l3322 3D34  
                          l3314 4080                            l3306 4062                            l1298 38D0  
                          l3250 299A                            l3242 2940                            l3410 2022  
                          l3402 1F9A                            l3234 1D9A                            l3226 1D7E  
                          l3218 1D3C                            l3170 1BD6                            l3154 1B4A  
                          l3146 1B1E                            l3138 1AEA                            l3162 1B6A  
                          l3090 19FA                            l3082 19E0                            l3074 19B4  
                          l3066 1982                            l3058 195A                            l4106 18B4  
                          l4050 132C                            l4042 11AC                            l4034 10E2  
                          l4026 0F62                            l4018 0E9A                            l4130 3CE4  
                          l3324 3D3C                            l3316 4084                            l3308 4066  
                          l3260 29F6                            l3252 29B4                            l3244 2968  
                          l3500 2DDC                            l3420 2078                            l3412 2030  
                          l3404 1FA6                            l3340 1DDA                            l3332 1DAE  
                          l3236 1D9C                            l3228 1D84                            l3180 1C30  
                          l3164 1B90                            l3172 1BE6                            l3156 1B58  
                          l3148 1B2C                            l3092 19FE                            l3084 19EE  
                          l3076 19B6                            l3068 1984                            l4108 18E2  
                          l4060 140A                            l4052 1340                            l4044 11C0  
                          l4036 10FA                            l4028 100A                            l4132 3CF4  
                          l4140 366C                            l4300 3770                            l3326 3D62  
                          l3318 3D28                            l3270 2A96                            l3262 29FE  
                          l3254 29D0                            l3246 2988                            l3510 2E48  
                          l3502 2DEA                            l3422 2086                            l3414 204E  
                          l3406 1FC2                            l3350 1E16                            l3342 1DEA  
                          l3334 1DBA                            l3190 1C60                            l3182 1C3A  
                          l3174 1C0C                            l3166 1BC4                            l3158 1B5A  
                          l3094 1A02                            l3086 19F2                            l3078 19BE  
                          l4070 15AE                            l4062 1426                            l4054 1358  
                          l4046 1268                            l4038 10FE                            l4134 3D0C  
                          l4150 36C0                            l4142 3678                            l4310 377A  
                          l4302 3772                            l3328 3D64                            l3280 2B52  
                          l3272 2A9C                            l3264 2A08                            l3256 29E2  
                          l3248 2998                            l3520 2EFA                            l3512 2E90  
                          l3504 2DFC                            l3600 3414                            l3432 20F0  
                          l3440 2138                            l3424 208A                            l3416 2058  
                          l3408 1FEC                            l3360 1E4C                            l3352 1E1C  
                          l3344 1DFA                            l3336 1DC8                            l3192 1C64  
                          l3184 1C48                            l3176 1C1C                            l3168 1BC6  
                          l3096 1A06                            l3088 19F6                            l4080 16C8  
                          l4072 15C6                            l4064 14CE                            l4056 135C  
                          l4048 1284                            l4136 3D20                            l4152 36D4  
                          l4144 3688                            l4320 377E                            l4312 377C  
                          l4304 3774                            l3290 2BA4                            l3282 2B6C  
                          l3266 2A0E                            l3274 2B00                            l3258 29F0  
                          l3522 2F0E                            l3506 2E00                            l3610 343C  
                          l3602 341E                            l3450 21AC                            l3442 2152  
                          l3434 20FC                            l3426 2098                            l3418 2066  
                          l3362 1E5C                            l3354 1E2A                            l3346 1E00  
                          l3338 1DCA                            l3194 1C74                            l3186 1C4A  
                          l3098 1A0A                            l4090 17F8                            l4082 16F6  
                          l4074 15F4                            l4066 14EA                            l4058 1368  
                          l4138 3D22                            l4146 369C                            l4330 37A2  
                          l4322 377E                            l4314 377E                            l4306 3776  
                          l3540 3B6A                            l2900 382C                            l3292 2BB6  
                          l3276 2B1A                            l3284 2B7C                            l3268 2A90  
                          l3516 2EC8                            l3508 2E24                            l3532 2F34  
                          l3700 3B06                            l3612 3448                            l3604 3428  
                          l3452 21BA                            l3444 2166                            l3436 210A  
                          l3428 20C6                            l3380 1EDE                            l3372 1EA6  
                          l3364 1E62                            l3356 1E2C                            l3348 1E10  
                          l3188 1C58                            l3196 1C76                            l4092 1802  
                          l4084 17B6                            l4076 16B4                            l4068 1592  
                          l4148 36B0                            l4180 4036                            l4172 401E  
                          l4332 37BA                            l4324 377E                            l4316 377E  
                          l4308 3778                            l3542 3BB0                            l3710 3F12  
                          l2902 3836                            l2910 3CA0                            l3294 2BC2  
                          l3286 2B8E                            l3278 2B38                            l3534 2F58  
                          l3518 2EEC                            l3526 2F1A                            l3614 3458  
                          l3470 34B8                            l3454 21BC                            l3446 2180  
                          l3438 2134                            l3390 1F28                            l3382 1EF6  
                          l3374 1EB2                            l3366 1E82                            l3358 1E3C  
                          l3198 1C84                            l3462 3C5A                            l3630 2290  
                          l3622 21D8                            l4094 181A                            l4086 17C0  
                          l4078 16BE                            l4182 4038                            l4174 4028  
                          l4334 37D4                            l4326 377E                            l4318 377E  
                          l3552 3BBA                            l3704 3EFC                            l2904 3854  
                          l2912 3CAC                            l2920 3E9E                            l3296 2BCA  
                          l3288 2B9E                            l3528 2F28                            l3800 26BC  
                          l3720 3E3C                            l3616 3468                            l3480 3526  
                          l3472 34C8                            l3448 219C                            l3456 21C2  
                          l3392 1F38                            l3384 1F02                            l3376 1EBC  
                          l3368 1E92                            l3464 3C6A                            l3640 23D6  
                          l3632 22B4                            l3624 21F8                            l3712 3DE6  
                          l3560 3B60                            l4096 1822                            l4088 17CA  
                          l4176 402A                            l4336 37E0                            l4328 3796  
                          l3546 3C0A                            l3554 3C00                            l3706 3F00  
                          l2930 2F70                            l2906 388A                            l2914 3CBE  
                          l2922 3EA2                            l3298 2BDA                            l3810 270E  
                          l3802 26D6                            l3722 3E52                            l3618 3478  
                          l3482 3534                            l3474 34F6                            l3458 21C6  
                          l3394 1F44                            l3386 1F0E                            l3378 1ED2  
                          l3490 3E5A                            l3650 2550                            l3642 2442  
                          l3634 22D0                            l3626 2240                            l4098 1826  
                          l4178 4034                            l4338 37E8                            l4290 3746  
                          l3548 3C50                            l4188 4054                            l3708 3F0E  
                          l2940 2FD0                            l2932 2F7E                            l2916 3CC2  
                          l2924 3EBA                            l3660 3A1E                            l3820 276A  
                          l3812 271E                            l3804 26E6                            l3900 2CDC  
                          l3716 3E20                            l3580 339A                            l3484 3584  
                          l3476 3506                            l3468 348A                            l3396 1F54  
                          l3388 1F1C                            l3492 3E70                            l3652 2574  
                          l3644 2474                            l3628 2254                            l4292 3752  
                          l3670 3F3E                            l3574 403E                            l2950 301A  
                          l2942 2FD4                            l2934 2F9E                            l2918 3E92  
                          l3662 3A44                            l3830 27AA                            l3822 276C  
                          l3814 2732                            l3806 26F6                            l3750 25B2  
                          l3742 2586                            l3910 2D5C                            l3902 2CE8  
                          l3718 3E24                            l3590 33EA                            l3486 358A  
                          l3478 3514                            l3398 1F6E                            l3494 3E80  
                          l3646 24E0                            l3638 2308                            l3558 3B1A  
                          l4294 3756                            l4286 373E                            ?_pad 0011  
                          l3680 3F9E                            l3672 3F40                            l3664 3F2C  
                          l3576 404E                            l2960 308A                            l2952 3028  
                          l2944 2FE0                            l2936 2FA2                            l2928 2F6C  
                          l3656 3A08                            l3840 27E6                            l3832 27B4  
                          l3824 277C                            l3816 2740                            l3808 2706  
                          l3760 25EC                            l3752 25C2                            l3744 2592  
                          l3920 2DA4                            l3912 2D5E                            l3904 2D24  
                          l3592 33EE                            l3584 33AE                            l3648 2514  
                          l4296 376A                            l4288 3742                            l3690 3FC4  
                          l3682 3FA4                            l3674 3F42                            l3666 3F36  
                          l3930 3ED6                            l2962 309C                            l2954 303A  
                          l2946 2FFE                            l2938 2FB0                            l3498 2DB8  
                          l3658 3A10                            l3850 2858                            l3842 27F4  
                          l3834 27C2                            l3826 278E                            l3818 274C  
                          l3770 2618                            l3762 25F2                            l3754 25D2  
                          l3746 25A0                            l3922 2DA6                            l3914 2D62  
                          l3906 2D30                            l3594 33FC                            l3586 33D8  
                          l3578 3382                            l4298 376E                            l3684 3FDE  
                          l3668 3F3C                            l3676 3F80                            l3932 3EE6  
                          l2956 3068                            l2948 3006                            l2964 30A2  
                          l2980 312A                            l2972 30F4                            l3692 3AC8  
                          l3940 3998                            l3860 28C4                            l3852 2866  
                          l3844 2822                            l3828 27A4                            l3836 27D4  
                          l3780 2652                            l3772 2628                            l3764 25F8  
                          l3756 25D4                            l3748 25A2                            l3916 2D86  
                          l3908 2D3E                            l3588 33DA                            l3686 3FE4  
                          l3934 3EF0                            l3926 3EC8                            l2966 30B2  
                          l2958 3088                            l2990 3192                            l2982 3138  
                          l2974 30F8                            l3694 3ADA                            l3942 39FA  
                          l3950 35B4                            l3870 2912                            l3862 28DE  
                          l3854 2890                            l3838 27E2                            l3782 2668  
                          l3774 2638                            l3766 2606                            l3758 25DC  
                          l3918 2D96                            l3678 3A6A                            l3936 3FFE  
                          l3688 3FBE                            l3928 3ECC                            l2968 30D2  
                          l2992 31A0                            l2984 3158                            l2976 3106  
                          l2896 3808                            l3696 3AE2                            l3960 35D8  
                          l3952 35B4                            l3944 3592                            l3872 2914  
                          l3864 28FA                            l3848 284C                            l3856 2894  
                          l3784 2678                            l3792 2698                            l3776 263A  
                          l3768 2608                            l3880 2C06                            l3938 4004  
                          l2994 31CE                            l2986 3176                            l2978 3126  
                          l2898 381A                            l3698 3AEA                            l3970 360E  
                          l3962 35EA                            l3954 35C6                            l3946 35A4  
                          l3866 28FE                            l3858 28AE                            l3794 26A8  
                          l3786 2680                            l3778 2642                            l3882 2C16  
                          l2996 31EE                            l2988 317E                            l3980 3632  
                          l3972 360E                            l3964 35EA                            l3956 35C6  
                          l3948 35A4                            l3868 290C                            l3796 26A8  
                          l3788 2684                            l3892 2C94                            l3884 2C24  
                          l3990 325C                            l2998 3200                            l3982 3644  
                          l3974 3620                            l3966 35FC                            l3958 35D8  
                          l3894 2C9C                            l3886 2C6A                            l3992 3270  
                          l3984 3644                            l3976 3620                            l3968 35FC  
                          l3896 2CA8                            l3888 2C80                            l3994 3288  
                          l3986 365E                            l3978 3632                            l3898 2CDA  
                          l3996 32A0                            l3988 3258                            l3998 32B8  
                          STR_1 0E05                            STR_3 0E3F                            STR_4 0E4F  
                          STR_5 0E39                            STR_6 0E45                            STR_7 0E26  
                          STR_8 0E4A                            STR_9 0E1F                            u2100 382C  
                          u2101 3828                            u2110 3854                            u2111 3850  
                          u2200 3068                            u2120 388A                            u3000 2066  
                          u2201 3064                            u2121 3886                            u3001 2062  
                          u2210 30B2                            u2130 3CE2                            u3010 2086  
                          u2211 30AE                            u2131 3CDE                            u3011 2082  
                          u2220 3106                            u2140 3EBA                            u2300 395A  
                          u3100 34B8                            u3020 2098                            u2221 3102  
                          u2141 3EB6                            u2301 3956                            u3101 34B4  
                          u3021 2094                            u2150 2F7E                            u2230 3138  
                          u2310 396A                            u3110 34F6                            u3030 20C6  
                          u2151 2F7A                            u2231 3134                            u2311 3966  
                          u3111 34F2                            u3031 20C2                            u2160 2FB0  
                          u2240 3176                            u2320 3D82                            u3120 3514  
                          u3040 20DC                            u2400 1994                    _BAUD4CONbits 000EE9  
                          u2161 2FAC                            u2241 3172                            u2321 3D7E  
                          u3121 3510                            u3041 20D8                            u2401 1990  
                          _LATE 000F7D                            u2330 3F66                            u3210 404E  
                          u2250 31A0                            u2090 381A                            u3130 3534  
                          u3050 20F0                            u2410 19A4                            u2331 3F62  
                          u3211 404A                            u2171 2FDA                            u2251 319C  
                          u2091 3816                            u3131 3530                            u3051 20EC  
                          u2411 19A0                            _LATG 000F7F                            u2340 3F7C  
                          u2180 2FFE                            u2260 31CE                            u3220 339A  
                          u3140 3584                            u3060 210A                            u2500 1AEA  
                          u2420 19E0                            u3300 2240                            u2341 3F78  
                          u2181 2FFA                            u2261 31CA                            u3221 3396  
                          u3141 3580                            u3061 2106                            u2501 1AE6  
                          u2421 19DC                            u3301 223C                            u2190 3028  
                          u2270 3216                            u3230 33CE                            u3070 2152  
                          u3150 3E70                            u2510 1AFA                            u2430 19EE  
                          u2350 1908                            u3310 2274                            u2191 3024  
                          u2271 3212                            u3071 214E                            u3151 3E6C  
                          u2511 1AF6                            u2431 19EA                            u2351 1904  
                          u2280 38E2                            u3160 2DDC                            u3400 3E3C  
                          u3240 33FC                            u3080 2180                            u2600 1C58  
                          u2520 1B2C                            u2440 1A5C                            u2360 191A  
                          u3320 2290                            u2281 38DE                            u3161 2DD8  
                          u3401 3E38                            u3241 33F8                            u3081 217C  
                          u2601 1C54                            u2521 1B28                            u2441 1A58  
                          u2361 1916                            u3321 228C                            u2290 3904  
                          u3170 2E24                            u3410 3E52                            u3250 3410  
                          u3090 21BA                            u2610 1C74                            u2530 1B3A  
                          u2450 1A74                            u2370 192A                            u3330 22D0  
                          _T2PR 000FBC                            u2291 3900                            u3171 2E20  
                          u3411 3E4E                            u3251 340C                            u3235 33C4  
                          u3091 21B6                            u2611 1C70                            u2531 1B36  
                          u2451 1A6E                            u2371 1926                            u3331 22CC  
                          u3315 226A                            u3180 2E48                            u3500 2668  
                          u3260 3438                            u2700 1D4C                            u2620 1C84  
                          u2540 1B58                            u2460 1A76                            u2380 196C  
                          u3340 23D6                            u3181 2E44                            u3501 2664  
                          u3261 3434                            u2701 1D48                            u2621 1C80  
                          u2541 1B54                            u2381 1968                            u3341 23D2  
                          u3190 2EEC                            u3510 26A8                            u3270 3458  
                          u2710 1D6C                            u2630 1C96                            u2550 1B90  
                          u2470 1A9E                            u2390 1982                            u3350 2474  
                          u3191 2EE8                            u3511 26A4                            u3271 3454  
                          u2711 1D68                            u2631 1C92                            u2551 1B8C  
                          u2471 1A9A                            u2391 197E                            u3351 2470  
                          u2800 29F0                            u3600 2822                            u3520 271E  
                          u3440 25A0                            u3280 3468                            u2720 1D7E  
                          u2640 1CAC                            u2560 1BD6                            u2480 1ABC  
                          u3360 2534                            u2801 29EC                            u3601 281E  
                          u3521 271A                            u3441 259C                            u3281 3464  
                          u2721 1D7A                            u2641 1CA8                            u2561 1BD2  
                          u2481 1AB8                            u4217 378A                            u2810 2B1A  
                          u3610 2838                            u3530 2740                            u3450 25B2  
                          u2730 1D9A                            u2650 1CC2                            u2570 1C0C  
                          u2490 1ADC                            u3370 2550                            u3290 2218  
                          u4307 3372                            u2811 2B16                            u3611 2834  
                          u3531 273C                            u3451 25AE                            u2731 1D96  
                          u2651 1CBE                            u2571 1C08                            u2491 1AD8  
                          u3371 254C                            u4227 37AE                            u2820 2B38  
                          u2740 2950                            u3380 3A60                            u3620 284C  
                          u3540 276A                            u3460 25C2                            u3700 2CD6  
                          u2660 1CD6                            u2580 1C1C                            u4317 3FAE  
                          u2821 2B34                            u2741 294A                            u3381 3A5C  
                          u3621 2848                            u3541 2766                            u3461 25BE  
                          u3701 2CD2                            u2661 1CD2                            u2581 1C18  
                          u3365 252A                            u4237 37F4                            u3390 3F2A  
                          u2830 2B52                            u2750 2952                            u3630 2866  
                          u3550 278E                            u3470 2606                            u3710 2D20  
                          u2910 1DC8                            u2670 1CF0                            u2590 1C48  
                          u4327 3FCE                            u3391 3F26                            u2831 2B4E  
                          u3631 2862                            u3551 278A                            u3471 2602  
                          u3711 2D1C                            u2911 1DC4                            u2671 1CEC  
                          u2591 1C44                            u3295 220E                            u4247 10EE  
                          u2840 2B6C                            u2760 2968                            u3800 35D8  
                          u3640 28AE                            u3560 27A4                            u3480 2618  
                          u3720 2D3E                            u2920 1DDA                            u2680 1D2A  
                          u4337 3FEE                            u2841 2B68                            u2761 2964  
                          u3801 35D4                            u3641 28AA                            u3561 27A0  
                          u3481 2614                            u3721 2D3A                            u2921 1DD6  
                          u2681 1D26                            u4257 134C                            u2850 2B7C  
                          u2770 2998                            u3810 35EA                            u3650 28DE  
                          u3570 27C2                            u3490 2628                            u3730 2D4E  
                          u2930 1DEA                            u2690 1D3C                            u4347 400E  
                          u2851 2B78                            u2771 2994                            u3811 35E6  
                          u3651 28DA                            u3571 27BE                            u3491 2624  
                          u3731 2D4A                            u2931 1DE6                            u2691 1D38  
                          u4267 15BA                            u2908 3D52                            u2860 2B8E  
                          u2780 29B4                            u3820 35FC                            u3660 290C  
                          u3580 27E2                            u3740 2D5C                            u2940 1E2A  
                          u3900 17B6                            u4277 3EDC                            u2861 2B8A  
                          u2781 29B0                            u3821 35F8                            u3661 2908  
                          u3581 27DE                            u3741 2D58                            u2941 1E26  
                          u3901 17B2                            u2870 2B9E                            u2790 29E2  
                          u3830 360E                            u3590 27F4                            u3750 2D96  
                          u3670 2C16                            u2950 1E3C                            u3910 17F8  
                          u4287 32AA                            u2871 2B9A                            u2791 29DE  
                          u3831 360A                            u3591 27F0                            u3751 2D92  
                          u3671 2C12                            u2951 1E38                            u3911 17F4  
                          u2880 2BB6                            u3840 3620                            u3760 2DA4  
                          u3680 2C24                            u2960 1E4C                            u3920 181A  
                          u4297 330E                            u2881 2BB2                            u3841 361C  
                          u3761 2DA0                            u3681 2C20                            u2961 1E48  
                          u3921 1816                            u2890 3D50                            u3850 3632  
                          u3770 35A4                            u3690 2C80                            u2970 1E82  
                          u3930 1852                            u2891 3D48                            u3851 362E  
                          u3771 35A0                            u3691 2C7C                            u2971 1E7E  
                          u3931 184E                            u3860 3644                            u3780 35B4  
                          u2980 1E92                            u3940 1880                            u3861 3640  
                          u3781 35B0                            u2981 1E8E                            u3941 187C  
                          u3790 35C6                            u2990 200C                            u3950 18B4  
                          u3870 15F4                            u3791 35C2                            u3951 18B0  
                          u3871 15F0                            u3960 18E2                            u3880 16B4  
                          u3961 18DE                            u3881 16B0                            u3890 16F6  
                          u2995 2002                            u3891 16F2                            abs@a 0013  
                          _dbuf 015A                            _main 373E                            _dtoa 2920  
                          _prec 00F2                            _nout 00EE                            pad@i 0018  
                          pad@p 0015                            fsr1h 000FE2                            fsr2h 000FDA  
                          indf2 000FDF                            fsr1l 000FE1                            pad@w 001A  
                          fsr2l 000FD9                            prodh 000FF4                            prodl 000FF3  
                          start 0000                  ?_color_display 0058                 ___fldiv@new_exp 0020  
        __end_of_color_read_Red 3BBA               ?_calibration_init 0001                    ___param_bank 000000  
                ?_color_predict 0001              ??_calibration_init 0001                           ??_abs 0015  
                         ??_pad 0017                   ___fltol@sign1 0064                 __end_of___aodiv 30F4  
               __end_of___fladd 1DAE                           ?_main 0001                           ?_dtoa 001C  
               __end_of___aomod 3258                           _ADPCH 000F5F                 __end_of___fldiv 2920  
               __end_of___flneg 3E92                           STR_10 0E14                           STR_11 0E2D  
                         STR_12 0E33                           STR_13 0E0E                 __end_of___flmul 21D8  
               __end_of___flsub 3CA0                 __end_of___fltol 348A                           _LED_B 3FDE  
                         _LED_C 3FFE                           _LED_G 3FBE                           _LED_R 3F9E  
                  vfpfcnvrt@fmt 0042         __end_of_sendCharSerial4 4054      __end_of_I2C_2_Master_Start 4080  
    __end_of_I2C_2_Master_Write 406C                 __end_of_compare 3E5A                    compare@lower 006A  
                         _flags 00F4                           _color 00FA                    compare@upper 006E  
                         _fputc 3808                           _fputs 3CA0                           pad@fp 0011  
                         _width 00F0                           _putch 408C                           _toint 0E01  
                         dtoa@d 001E                           dtoa@i 003E                           dtoa@n 0036  
                         dtoa@p 0030                           dtoa@s 0034                           dtoa@w 0032  
                         tablat 000FF5                 __end_of_lroundf 3E20                           status 000FD8  
               __end_of_sprintf 3B1A                color_display@buf 0079         __end_of_color_read_Blue 3C5A  
         _I2C_2_Master_RepStart 4080                 ?_color_read_Red 0005                 __initialization 3DA8  
                  __end_of_main 3808                    __end_of_dtoa 2C04            __end_of_detect_color 18EE  
                        ??_main 00DE                          ??_dtoa 0026                   __activetblptr 000001  
                        ?_LED_B 0001                          ?_LED_C 0001                          ?_LED_G 0001  
                        ?_LED_R 0001          _initDCmotors_parameter 366C                          ?_fputc 0001  
                        ?_fputs 000A                          _ADRESH 000F64                          ?_putch 0001  
                        _RC0PPS 000E62                          _RC4REG 000EE3                          _RE2PPS 000E74  
                        _RD5PPS 000E6F                          _RC7PPS 000E69                          _RD6PPS 000E70  
      __end_of_color_click_init 3EFC                          _RX4PPS 000E15                          _TX4REG 000EE4  
               ??_color_display 005A                __end_of___xxtofl 2DB8                 ??_color_predict 0058  
                  vfprintf@cfmt 0056                          ___flge 348A                       ??___aodiv 0011  
                     ??___fladd 0009                       ??___aomod 0011                       ??___fldiv 0017  
                     ??___flneg 0005                       ??___flmul 0030                       ??___flsub 0019  
                     ??___fltol 0060                   compare@result 005F                          clear_0 3DC6  
                        clear_1 3DD2                          _motorL 00E0                          _motorR 0150  
                        isa$std 000001                          pad@buf 0013                          _roundf 21D8  
                        dtoa@fp 001C                          _strlen 3E92                       ??_compare 005F  
                        fputc@c 0001                          fputs@c 000E                          fputs@i 000F  
                        fputs@s 000A                    __mediumconst 0000                          tblptrh 000FF7  
                        tblptrl 000FF6                          tblptru 000FF8                ?_sendCharSerial4 0001  
                     ??_lroundf 005F                     read_color@m 000C                          putch@c 0001  
              __end_of_vfprintf 3A6A               ??_initDCmotorsPWM 0003                       ??_sprintf 0058  
                    ___flge@ff1 0001                      ___flge@ff2 0005                    ___xxtofl@arg 000B  
                  ___xxtofl@exp 000A                    ___xxtofl@val 0001                calibrate_white@w 000C  
                    __accesstop 0060         __end_of__initialization 3DD8        __end_of_color_read_Clear 3B6A  
                    ___flneg@f1 0001        __end_of_color_read_Green 3C0A          ?_I2C_2_Master_RepStart 0001  
            color_predict@color 00DD    initDCmotors_parameter@motorL 0001    initDCmotors_parameter@motorR 0003  
                 ___rparam_used 000001                      ___fltol@f1 005B                   __end_of_LED_B 3FFE  
                 __end_of_LED_C 401E                   __end_of_LED_G 3FDE                   __end_of_LED_R 3FBE  
              ?_color_read_Blue 0005                  __pcstackCOMRAM 0001                    __pidataBANK0 408A  
                 __end_of_fputc 38D2               detect_color@color 008A                   __end_of_fputs 3CE4  
                 __end_of_putch 408E                   __end_of_toint 0E05                         ??_LED_B 0001  
                       ??_LED_C 0001                         ??_LED_G 0001                         ??_LED_R 0001  
                       ??_fputc 0005                         ??_fputs 000E                         ??_putch 0001  
                    __pbssBANK0 00E0                      __pbssBANK1 0100                color_predict@buf 0079  
             _color_writetoaddr 3F7E                    _T2CLKCONbits 000FBF                         ?___flge 0001  
            ?_color_writetoaddr 0003                         ?_roundf 0041             ??_color_writetoaddr 0004  
                       ?_strlen 0001                       ?___xxtofl 0001                         _SP4BRGH 000EE6  
                       _SP4BRGL 000EE5                         _PWM6DCH 000FA3                         _PWM7DCH 000FA0  
                       _SSP2ADD 000ED6                         _SSP2BUF 000ED5                    _detect_color 0E54  
        color_writetoaddr@value 0003                ??_color_read_Red 0007       __end_of_color_writetoaddr 3F9E  
                     _ADREFbits 000F58              _I2C_2_Master_Start 4076                      _initUSART4 401E  
            _I2C_2_Master_Write 4060                         __Hparam 0000                         __Lparam 0000  
             color_read_Red@tmp 000A         sendStringSerial4@string 0002                         ___aodiv 2F6C  
                       ___fladd 18EE                         ___aomod 30F4                         ___fldiv 2586  
                       ___flneg 3E5A                         ___flmul 1DAE                         ___flsub 3C5A  
                       ___fltol 3382             ?_I2C_2_Master_Start 0001             ?_I2C_2_Master_Write 0001  
                     ?_vfprintf 0050                    __psmallconst 0E00                         __pcinit 3DA8  
                       __ramtop 0E00                      _read_color 3A6A                         __ptext0 373E  
                       __ptext1 401E                         __ptext2 366C                         __ptext3 3CE4  
                       __ptext4 0E54                         __ptext5 3A6A                         __ptext6 3B1A  
                       __ptext7 3DE6                         __ptext8 21D8                         __ptext9 3C5A  
                       _compare 3E20         ?_initDCmotors_parameter 0001                       _T2CONbits 000FBD  
                    ??___xxtofl 0005                       _T2HLTbits 000FBE                         _lroundf 3DE6  
                 _RxBufWriteCnt 00F9                         _sprintf 3AC8                         main@rgb 01A1  
          ??_I2C_2_Master_Start 0002            ??_I2C_2_Master_Write 0002            end_of_initialization 3DD8  
                       fputc@fp 0003                         fputs@fp 000C               ?_color_click_init 0001  
            ??_color_click_init 0005               __end_of_vfpfcnvrt 2F6C                         postdec2 000FDD  
                       postinc0 000FEE                         postinc1 000FE6                         postinc2 000FDE  
                       roundf@e 004D                         roundf@u 0053                         roundf@x 0041  
                       roundf@y 0057                      ??_vfprintf 0056                         strlen@a 0003  
                       strlen@s 0001                 _initDCmotorsPWM 3CE4  __end_of_initDCmotors_parameter 373E  
                     _PORTFbits 000F8E                     ___fladd@grs 0010                   ___xxtofl@sign 0009  
                     _TRISAbits 000F81                       _TRISCbits 000F83                       _TRISDbits 000F84  
                     _TRISEbits 000F85                       _TRISFbits 000F86                       _TRISGbits 000F87  
                   ___fldiv@grs 0022                     ___fldiv@rem 001B        color_writetoaddr@address 0004  
       ??_I2C_2_Master_RepStart 0002                     ___flmul@grs 0035               ?_color_read_Clear 0005  
                  _EUSART4RXbuf 013C                    _EUSART4TXbuf 0100               ?_color_read_Green 0005  
                   ?_initUSART4 0001       sendCharSerial4@charToSend 0001           __end_of_color_display 3A08  
                    main@motorL 017B                      main@motorR 0185               ??_calibrate_white 000E  
            ??_color_read_Clear 0007                  color_display@m 0058              ??_color_read_Green 0007  
                detect_color@BB 0082                  detect_color@BG 0088                  detect_color@GB 007C  
                detect_color@GG 0080                  detect_color@BR 0086                  detect_color@GR 007A  
                detect_color@RB 0078                  detect_color@RG 007E                  detect_color@RR 0084  
         __end_of_color_predict 366C                  __end_of___flge 358E                     vfpfcnvrt@ap 0044  
                   vfpfcnvrt@fp 0040                     vfpfcnvrt@ll 0048                     ?_read_color 000C  
                __end_of_roundf 2586                  __end_of_strlen 3EC8             color_read_Clear@tmp 000A  
           start_initialization 3DA8                _calibration_init 4054                     __end_of_abs 3DA8  
                   __end_of_pad 3998                   _TxBufWriteCnt 00F7             color_read_Green@tmp 000A  
       __end_of_initDCmotorsPWM 3D26                     vfprintf@fmt 0052                        ??___flge 0009  
                   __pdataBANK0 00FA                        ??_roundf 0045                        ??_strlen 0003  
                     ___fladd@a 0005                       ___fladd@b 0001                       ___fldiv@a 0013  
                     ___fldiv@b 000F                       ___flmul@a 002C                       ___flmul@b 0028  
                     ___flsub@a 0015                       ___flsub@b 0011                   __pcstackBANK0 0060  
                 __pcstackBANK1 017A                ___aodiv@dividend 0001                       _dtoa$2329 002E  
                      ?___aodiv 0001                        ?___fladd 0001                        ?___aomod 0001  
                      ?___fldiv 000F                ___aodiv@quotient 0013                        ?___flneg 0001  
                      ?___flmul 0028                        ?___flsub 0011                        ?___fltol 005B  
          I2C_2_Master_Read@ack 0003            I2C_2_Master_Read@tmp 0004                        ?_compare 006A  
                   __smallconst 0E00               _I2C_2_Master_Idle 3F56               _I2C_2_Master_Init 3F2C  
             _I2C_2_Master_Read 3D26               _I2C_2_Master_Stop 406C                    _RxBufReadCnt 00F8  
                      ?_lroundf 0066              ?_I2C_2_Master_Idle 0001              ?_I2C_2_Master_Init 0001  
            ?_I2C_2_Master_Read 0001              ?_I2C_2_Master_Stop 0001        initDCmotorsPWM@PWMperiod 0001  
                      ?_sprintf 0060               _sendStringSerial4 3EFC             ??_I2C_2_Master_Idle 0001  
           ??_I2C_2_Master_Init 0001             ??_I2C_2_Master_Read 0002                        _LATAbits 000F79  
           ??_I2C_2_Master_Stop 0002                        _LATCbits 000F7B                        _LATEbits 000F7D  
                      _LATFbits 000F7E                        _LATGbits 000F7F              ?_sendStringSerial4 0002  
                      _PIE4bits 000E2D                        _PIR4bits 000E37                ?_initDCmotorsPWM 0001  
             ??_sendCharSerial4 0001                        _SSP2CON2 000EDA             ??_sendStringSerial4 0004  
                      _SSP2STAT 000ED8                       _vfpfcnvrt 2DB8                      _ADCON0bits 000F60  
     __end_of_I2C_2_Master_Idle 3F7E       __end_of_I2C_2_Master_Init 3F56       __end_of_I2C_2_Master_Read 3D68  
     __end_of_I2C_2_Master_Stop 4076     I2C_2_Master_Write@data_byte 0002                       main@color 017A  
                     main@white 018F               ??_color_read_Blue 0007                   detect_color@m 0070  
                 detect_color@w 0072                    _TxBufReadCnt 00F6                 _calibrate_white 3258  
     __end_of_sendStringSerial4 3F2C   __end_of_I2C_2_Master_RepStart 408A              color_read_Blue@tmp 000A  
                    roundf@F527 00EA                    ??_initUSART4 0001                        __Hrparam 0000  
      __end_of_calibration_init 4060                      vfprintf@ap 0054                        __Lrparam 0000  
                    vfprintf@fp 0050                    __Lsmallconst 0E00            compare@value2compare 006C  
                    ?_vfpfcnvrt 0040                    ??_read_color 000E                 ___aodiv@divisor 0009  
               ___aodiv@counter 0011                      _ANSELDbits 000EA7                      _ANSELFbits 000EB4  
                    sprintf@fmt 0062                        ___xxtofl 2C04              __end_of_initUSART4 403C  
                      __ptext10 18EE                        __ptext11 3E5A                        __ptext20 3AC8  
                      __ptext12 1DAE                        __ptext21 3A08                        __ptext13 348A  
                      __ptext30 30F4                        __ptext22 2DB8                        __ptext14 3382  
                      __ptext31 2F6C                        __ptext23 2920                        __ptext15 3E20  
                      __ptext40 3BBA                        __ptext32 3EFC                        __ptext24 38D2  
                      __ptext16 2C04                        __ptext41 3C0A                        __ptext33 403C  
                      __ptext25 3E92                        __ptext17 2586                        __ptext50 3FDE  
                      __ptext42 4060                        __ptext34 3EC8                        __ptext26 3CA0  
                      __ptext18 358E                        __ptext51 3FFE                        __ptext43 406C  
                      __ptext35 3F7E                        __ptext27 3808                        __ptext19 3998  
                      __ptext44 4076                        __ptext36 3F2C                        __ptext28 408C  
                      __ptext45 4080                        __ptext37 4054                        __ptext29 3D68  
                      __ptext46 3D26                        __ptext38 3258                        __ptext47 3F56  
                      __ptext39 3B6A                        __ptext48 3F9E                        __ptext49 3FBE  
                  _SSP2CON1bits 000ED9                    _SSP2CON2bits 000EDA              __end_of_read_color 3AC8  
                      isa$xinst 000000                      _RC4STAbits 000EE7                     _SENSITIVITY 00FB  
                      _vfprintf 3A08                ___aomod@dividend 0001         __end_of_calibrate_white 3382  
                 ?_detect_color 0070                     _PWM6CONbits 000FA4                     _PWM7CONbits 000FA1  
                     sprintf@ap 006C                        lroundf@x 0066        ??_initDCmotors_parameter 0005  
               ___aomod@divisor 0009                     ??_vfpfcnvrt 0046                 ___aomod@counter 0011  
              _color_click_init 3EC8                        sprintf@f 006E                        sprintf@s 0060  
             _detect_color$2685 008B                      _SSP2DATPPS 000E1D                      _SSP2CLKPPS 000E1C  
                ??_detect_color 0074                   ___fladd@signs 000D                      _TX4STAbits 000EE8  
                  ___aodiv@sign 0012                 _sendCharSerial4 403C                    ___fladd@aexp 000E  
                  ___fladd@bexp 000F                    ___aomod@sign 0012                     _roundf$2686 004F  
                   _roundf$2687 0049                   _color_display 3998  
