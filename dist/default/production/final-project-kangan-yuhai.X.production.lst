

Microchip MPLAB XC8 Assembler V2.35 build 20211206165544 
                                                                                               Thu Mar 10 17:31:25 2022

Microchip MPLAB XC8 C Compiler v2.35 (Free license) build 20211206165544 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=3
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=3
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=2
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=2
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=2
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=3
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=1
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=1
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=1
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=3
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=3
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=3
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=3
    48                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=3
    49                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=2
    50                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=2
    51                           	psect	text37,global,reloc=2,class=CODE,delta=1
    52                           	psect	text38,global,reloc=2,class=CODE,delta=1
    53                           	psect	text39,global,reloc=2,class=CODE,delta=1
    54                           	psect	text40,global,reloc=2,class=CODE,delta=1
    55                           	psect	text41,global,reloc=2,class=CODE,delta=1
    56                           	psect	text42,global,reloc=2,class=CODE,delta=1
    57                           	psect	text43,global,reloc=2,class=CODE,delta=1
    58                           	psect	text44,global,reloc=2,class=CODE,delta=1
    59                           	psect	text45,global,reloc=2,class=CODE,delta=1
    60                           	psect	text46,global,reloc=2,class=CODE,delta=1
    61                           	psect	text47,global,reloc=2,class=CODE,delta=1
    62                           	psect	text48,global,reloc=2,class=CODE,delta=1
    63                           	psect	text49,global,reloc=2,class=CODE,delta=1
    64                           	psect	text50,global,reloc=2,class=CODE,delta=1
    65                           	psect	text51,global,reloc=2,class=CODE,delta=1
    66                           	psect	text52,global,reloc=2,class=CODE,delta=1
    67                           	psect	text53,global,reloc=2,class=CODE,delta=1
    68                           	psect	text54,global,reloc=2,class=CODE,delta=1
    69                           	psect	text55,global,reloc=2,class=CODE,delta=1
    70                           	psect	text56,global,reloc=2,class=CODE,delta=1
    71                           	psect	text57,global,reloc=2,class=CODE,delta=1
    72                           	psect	text58,global,reloc=2,class=CODE,delta=1
    73                           	psect	text59,global,reloc=2,class=CODE,delta=1
    74                           	psect	text60,global,reloc=2,class=CODE,delta=1
    75                           	psect	text61,global,reloc=2,class=CODE,delta=1
    76                           	psect	text62,global,reloc=2,class=CODE,delta=1
    77                           	psect	text63,global,reloc=2,class=CODE,delta=1
    78                           	psect	text64,global,reloc=2,class=CODE,delta=1
    79                           	psect	text65,global,reloc=2,class=CODE,delta=1
    80                           	psect	text66,global,reloc=2,class=CODE,delta=1,group=2
    81                           	psect	text67,global,reloc=2,class=CODE,delta=1,group=2
    82                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    83                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    84                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    85                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    86  0000                     
    87                           ; Version 2.35
    88                           ; Generated 05/05/2021 GMT
    89                           ; 
    90                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    91                           ; All rights reserved.
    92                           ; 
    93                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    94                           ; 
    95                           ; Redistribution and use in source and binary forms, with or without modification, are
    96                           ; permitted provided that the following conditions are met:
    97                           ; 
    98                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    99                           ;        conditions and the following disclaimer.
   100                           ; 
   101                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   102                           ;        of conditions and the following disclaimer in the documentation and/or other
   103                           ;        materials provided with the distribution. Publication is not required when
   104                           ;        this file is used in an embedded application.
   105                           ; 
   106                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   107                           ;        software without specific prior written permission.
   108                           ; 
   109                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   110                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   111                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   112                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   113                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   114                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   115                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   116                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   117                           ; 
   118                           ; 
   119                           ; Code-generator required, PIC18F67K40 Definitions
   120                           ; 
   121                           ; SFR Addresses
   122  0000                     
   123                           	psect	idataBANK0
   124  004F58                     __pidataBANK0:
   125                           	callstack 0
   126                           
   127                           ;initializer for _CALIBRATION_180
   128  004F58  14                 	db	20
   129                           
   130                           ;initializer for _SENSITIVITY
   131  004F59  0A                 	db	10
   132                           
   133                           	psect	smallconst
   134  000E00                     __psmallconst:
   135                           	callstack 0
   136  000E00  00                 	db	0
   137  000E01  0000               	dw	0
   138  000E03  4B00               	dw	19200
   139  000E05                     __end_of_toint:
   140                           	callstack 0
   141  0000                     _TRISFbits	set	3974
   142  0000                     _TX4REG	set	3812
   143  0000                     _RC4STAbits	set	3815
   144  0000                     _SP4BRGH	set	3814
   145  0000                     _TRISGbits	set	3975
   146  0000                     _TRISEbits	set	3973
   147  0000                     _SSP2CON2bits	set	3802
   148  0000                     _LATG	set	3967
   149  0000                     _LATE	set	3965
   150  0000                     _RX4PPS	set	3605
   151  0000                     _SSP2CLKPPS	set	3612
   152  0000                     _SSP2DATPPS	set	3613
   153  0000                     _ANSELDbits	set	3751
   154  0000                     _SSP2ADD	set	3798
   155  0000                     _SSP2CON1bits	set	3801
   156  0000                     _LATAbits	set	3961
   157  0000                     _LATFbits	set	3966
   158  0000                     _LATGbits	set	3967
   159  0000                     _TRISAbits	set	3969
   160  0000                     _TRISCbits	set	3971
   161  0000                     _TRISDbits	set	3972
   162  0000                     _LATCbits	set	3963
   163  0000                     _LATEbits	set	3965
   164  0000                     _RC4REG	set	3811
   165  0000                     _SP4BRGL	set	3813
   166  0000                     _TX4STAbits	set	3816
   167  0000                     _BAUD4CONbits	set	3817
   168  0000                     _SSP2CON2	set	3802
   169  0000                     _SSP2STAT	set	3800
   170  0000                     _ANSELFbits	set	3764
   171  0000                     _SSP2BUF	set	3797
   172  0000                     _PIE4bits	set	3629
   173  0000                     _PIR4bits	set	3639
   174  0000                     _RC0PPS	set	3682
   175  0000                     _RC7PPS	set	3689
   176  0000                     _RD5PPS	set	3695
   177  0000                     _RE2PPS	set	3700
   178  0000                     _RD6PPS	set	3696
   179  0000                     _PORTFbits	set	3982
   180  0000                     _T2PR	set	4028
   181  0000                     _T2CONbits	set	4029
   182  0000                     _PWM7DCH	set	4000
   183  0000                     _PWM6DCH	set	4003
   184  0000                     _T2CLKCONbits	set	4031
   185  0000                     _T2HLTbits	set	4030
   186  0000                     _PWM6CONbits	set	4004
   187  0000                     _PWM7CONbits	set	4001
   188  0000                     _ADREFbits	set	3928
   189  0000                     _ADPCH	set	3935
   190  0000                     _ADRESH	set	3940
   191  0000                     _ADCON0bits	set	3936
   192  000E05                     STR_1:
   193  000E05  25                 	db	37
   194  000E06  64                 	db	100	;'d'
   195  000E07  09                 	db	9
   196  000E08  25                 	db	37
   197  000E09  64                 	db	100	;'d'
   198  000E0A  09                 	db	9
   199  000E0B  25                 	db	37
   200  000E0C  64                 	db	100	;'d'
   201  000E0D  09                 	db	9
   202  000E0E  25                 	db	37
   203  000E0F  64                 	db	100	;'d'
   204  000E10  0D                 	db	13
   205  000E11  0A                 	db	10
   206  000E12  00                 	db	0
   207  000E13  4C                 	db	76	;'L'
   208  000E14  69                 	db	105	;'i'
   209  000E15  67                 	db	103	;'g'
   210  000E16  68                 	db	104	;'h'
   211  000E17  74                 	db	116	;'t'
   212  000E18  20                 	db	32
   213  000E19  62                 	db	98	;'b'
   214  000E1A  6C                 	db	108	;'l'
   215  000E1B  75                 	db	117	;'u'
   216  000E1C  65                 	db	101	;'e'
   217  000E1D  00                 	db	0
   218  000E1E  4F                 	db	79	;'O'
   219  000E1F  72                 	db	114	;'r'
   220  000E20  61                 	db	97	;'a'
   221  000E21  6E                 	db	110	;'n'
   222  000E22  67                 	db	103	;'g'
   223  000E23  65                 	db	101	;'e'
   224  000E24  00                 	db	0
   225  000E25  59                 	db	89	;'Y'
   226  000E26  65                 	db	101	;'e'
   227  000E27  6C                 	db	108	;'l'
   228  000E28  6C                 	db	108	;'l'
   229  000E29  6F                 	db	111	;'o'
   230  000E2A  77                 	db	119	;'w'
   231  000E2B  00                 	db	0
   232  000E2C  57                 	db	87	;'W'
   233  000E2D  68                 	db	104	;'h'
   234  000E2E  69                 	db	105	;'i'
   235  000E2F  74                 	db	116	;'t'
   236  000E30  65                 	db	101	;'e'
   237  000E31  00                 	db	0
   238  000E32  42                 	db	66	;'B'
   239  000E33  6C                 	db	108	;'l'
   240  000E34  61                 	db	97	;'a'
   241  000E35  63                 	db	99	;'c'
   242  000E36  6B                 	db	107	;'k'
   243  000E37  00                 	db	0
   244  000E38  47                 	db	71	;'G'
   245  000E39  72                 	db	114	;'r'
   246  000E3A  65                 	db	101	;'e'
   247  000E3B  65                 	db	101	;'e'
   248  000E3C  6E                 	db	110	;'n'
   249  000E3D  00                 	db	0
   250  000E3E  45                 	db	69	;'E'
   251  000E3F  72                 	db	114	;'r'
   252  000E40  72                 	db	114	;'r'
   253  000E41  6F                 	db	111	;'o'
   254  000E42  72                 	db	114	;'r'
   255  000E43  00                 	db	0
   256  000E44  42                 	db	66	;'B'
   257  000E45  6C                 	db	108	;'l'
   258  000E46  75                 	db	117	;'u'
   259  000E47  65                 	db	101	;'e'
   260  000E48  00                 	db	0
   261  000E49  50                 	db	80	;'P'
   262  000E4A  69                 	db	105	;'i'
   263  000E4B  6E                 	db	110	;'n'
   264  000E4C  6B                 	db	107	;'k'
   265  000E4D  00                 	db	0
   266  000E4E  52                 	db	82	;'R'
   267  000E4F  65                 	db	101	;'e'
   268  000E50  64                 	db	100	;'d'
   269  000E51  00                 	db	0
   270  000E52  00                 	db	0	; dummy byte at the end
   271  0000                     
   272                           ; #config settings
   273                           
   274                           	psect	cinit
   275  004C26                     __pcinit:
   276                           	callstack 0
   277  004C26                     start_initialization:
   278                           	callstack 0
   279  004C26                     __initialization:
   280                           	callstack 0
   281                           
   282                           ; Initialize objects allocated to BANK0 (2 bytes)
   283                           ; load TBLPTR registers with __pidataBANK0
   284  004C26  0E58               	movlw	low __pidataBANK0
   285  004C28  6EF6               	movwf	tblptrl,c
   286  004C2A  0E4F               	movlw	high __pidataBANK0
   287  004C2C  6EF7               	movwf	tblptrh,c
   288  004C2E  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   289  004C30  6EF8               	movwf	tblptru,c
   290  004C32  0009               	tblrd		*+	;fetch initializer
   291  004C34  CFF5 F0F8          	movff	tablat,__pdataBANK0
   292  004C38  0009               	tblrd		*+	;fetch initializer
   293  004C3A  CFF5 F0F9          	movff	tablat,__pdataBANK0+1
   294                           
   295                           ; Clear objects allocated to BANK1 (133 bytes)
   296  004C3E  EE01  F000         	lfsr	0,__pbssBANK1
   297  004C42  0E85               	movlw	133
   298  004C44                     clear_0:
   299  004C44  6AEE               	clrf	postinc0,c
   300  004C46  06E8               	decf	wreg,f,c
   301  004C48  E1FD               	bnz	clear_0
   302                           
   303                           ; Clear objects allocated to BANK0 (16 bytes)
   304  004C4A  EE00  F0E8         	lfsr	0,__pbssBANK0
   305  004C4E  0E10               	movlw	16
   306  004C50                     clear_1:
   307  004C50  6AEE               	clrf	postinc0,c
   308  004C52  06E8               	decf	wreg,f,c
   309  004C54  E1FD               	bnz	clear_1
   310  004C56                     end_of_initialization:
   311                           	callstack 0
   312  004C56                     __end_of__initialization:
   313                           	callstack 0
   314  004C56  0E00               	movlw	low (__Lsmallconst shr (0+16))
   315  004C58  6EF8               	movwf	tblptru,c
   316  004C5A  0E0E               	movlw	high __Lsmallconst
   317  004C5C  6EF7               	movwf	tblptrh,c
   318  004C5E  0100               	movlb	0
   319  004C60  EF19  F021         	goto	_main	;jump to C main() function
   320                           
   321                           	psect	bssBANK0
   322  0000E8                     __pbssBANK0:
   323                           	callstack 0
   324  0000E8                     roundf@F527:
   325                           	callstack 0
   326  0000E8                     	ds	4
   327  0000EC                     _nout:
   328                           	callstack 0
   329  0000EC                     	ds	2
   330  0000EE                     _width:
   331                           	callstack 0
   332  0000EE                     	ds	2
   333  0000F0                     _prec:
   334                           	callstack 0
   335  0000F0                     	ds	2
   336  0000F2                     _flags:
   337                           	callstack 0
   338  0000F2                     	ds	2
   339  0000F4                     _TxBufReadCnt:
   340                           	callstack 0
   341  0000F4                     	ds	1
   342  0000F5                     _TxBufWriteCnt:
   343                           	callstack 0
   344  0000F5                     	ds	1
   345  0000F6                     _RxBufReadCnt:
   346                           	callstack 0
   347  0000F6                     	ds	1
   348  0000F7                     _RxBufWriteCnt:
   349                           	callstack 0
   350  0000F7                     	ds	1
   351                           
   352                           	psect	dataBANK0
   353  0000F8                     __pdataBANK0:
   354                           	callstack 0
   355  0000F8                     _CALIBRATION_180:
   356                           	callstack 0
   357  0000F8                     	ds	1
   358  0000F9                     _SENSITIVITY:
   359                           	callstack 0
   360  0000F9                     	ds	1
   361                           
   362                           	psect	bssBANK1
   363  000100                     __pbssBANK1:
   364                           	callstack 0
   365  000100                     _EUSART4TXbuf:
   366                           	callstack 0
   367  000100                     	ds	60
   368  00013C                     _EUSART4RXbuf:
   369                           	callstack 0
   370  00013C                     	ds	20
   371  000150                     _motorR:
   372                           	callstack 0
   373  000150                     	ds	10
   374  00015A                     _motorL:
   375                           	callstack 0
   376  00015A                     	ds	10
   377  000164                     _color:
   378                           	callstack 0
   379  000164                     	ds	1
   380  000165                     _dbuf:
   381                           	callstack 0
   382  000165                     	ds	32
   383                           
   384                           	psect	cstackBANK1
   385  000185                     __pcstackBANK1:
   386                           	callstack 0
   387  000185                     main@stop_signal:
   388                           	callstack 0
   389                           
   390                           ; 1 bytes @ 0x0
   391  000185                     	ds	1
   392  000186                     main@white:
   393                           	callstack 0
   394                           
   395                           ; 20 bytes @ 0x1
   396  000186                     	ds	20
   397  00019A                     main@rgb:
   398                           	callstack 0
   399                           
   400                           ; 8 bytes @ 0x15
   401  00019A                     	ds	8
   402  0001A2                     main@motorL:
   403                           	callstack 0
   404                           
   405                           ; 10 bytes @ 0x1D
   406  0001A2                     	ds	10
   407  0001AC                     main@motorR:
   408                           	callstack 0
   409                           
   410                           ; 10 bytes @ 0x27
   411  0001AC                     	ds	10
   412                           
   413                           	psect	cstackBANK0
   414  000060                     __pcstackBANK0:
   415                           	callstack 0
   416  000060                     ??___fltol:
   417  000060                     ?_sprintf:
   418                           	callstack 0
   419  000060                     sprintf@s:
   420                           	callstack 0
   421                           
   422                           ; 2 bytes @ 0x0
   423  000060                     	ds	2
   424  000062                     sprintf@fmt:
   425                           	callstack 0
   426                           
   427                           ; 2 bytes @ 0x2
   428  000062                     	ds	2
   429  000064                     ___fltol@sign1:
   430                           	callstack 0
   431                           
   432                           ; 1 bytes @ 0x4
   433  000064                     	ds	1
   434  000065                     ___fltol@exp1:
   435                           	callstack 0
   436                           
   437                           ; 1 bytes @ 0x5
   438  000065                     	ds	1
   439  000066                     ?_lroundf:
   440                           	callstack 0
   441  000066                     lroundf@x:
   442                           	callstack 0
   443                           
   444                           ; 4 bytes @ 0x6
   445  000066                     	ds	4
   446  00006A                     compare@lower:
   447                           	callstack 0
   448                           
   449                           ; 2 bytes @ 0xA
   450  00006A                     	ds	2
   451  00006C                     compare@value2compare:
   452                           	callstack 0
   453  00006C                     sprintf@ap:
   454                           	callstack 0
   455                           
   456                           ; 2 bytes @ 0xC
   457  00006C                     	ds	2
   458  00006E                     compare@upper:
   459                           	callstack 0
   460  00006E                     sprintf@f:
   461                           	callstack 0
   462                           
   463                           ; 11 bytes @ 0xE
   464  00006E                     	ds	2
   465  000070                     detect_color@m:
   466                           	callstack 0
   467                           
   468                           ; 2 bytes @ 0x10
   469  000070                     	ds	2
   470  000072                     detect_color@w:
   471                           	callstack 0
   472                           
   473                           ; 2 bytes @ 0x12
   474  000072                     	ds	2
   475  000074                     ??_detect_color:
   476                           
   477                           ; 1 bytes @ 0x14
   478  000074                     	ds	4
   479  000078                     detect_color@RB:
   480                           	callstack 0
   481                           
   482                           ; 2 bytes @ 0x18
   483  000078                     	ds	1
   484  000079                     color_display@buf:
   485                           	callstack 0
   486  000079                     color_predict@buf:
   487                           	callstack 0
   488                           
   489                           ; 100 bytes @ 0x19
   490  000079                     	ds	1
   491  00007A                     detect_color@GB:
   492                           	callstack 0
   493                           
   494                           ; 2 bytes @ 0x1A
   495  00007A                     	ds	2
   496  00007C                     detect_color@GC:
   497                           	callstack 0
   498                           
   499                           ; 2 bytes @ 0x1C
   500  00007C                     	ds	2
   501  00007E                     detect_color@RG:
   502                           	callstack 0
   503                           
   504                           ; 2 bytes @ 0x1E
   505  00007E                     	ds	2
   506  000080                     detect_color@GG:
   507                           	callstack 0
   508                           
   509                           ; 2 bytes @ 0x20
   510  000080                     	ds	2
   511  000082                     detect_color@RR:
   512                           	callstack 0
   513                           
   514                           ; 2 bytes @ 0x22
   515  000082                     	ds	2
   516  000084                     detect_color@BB:
   517                           	callstack 0
   518                           
   519                           ; 2 bytes @ 0x24
   520  000084                     	ds	2
   521  000086                     detect_color@BR:
   522                           	callstack 0
   523                           
   524                           ; 2 bytes @ 0x26
   525  000086                     	ds	2
   526  000088                     detect_color@GR:
   527                           	callstack 0
   528                           
   529                           ; 2 bytes @ 0x28
   530  000088                     	ds	2
   531  00008A                     detect_color@BG:
   532                           	callstack 0
   533                           
   534                           ; 2 bytes @ 0x2A
   535  00008A                     	ds	2
   536  00008C                     detect_color@color:
   537                           	callstack 0
   538                           
   539                           ; 1 bytes @ 0x2C
   540  00008C                     	ds	1
   541  00008D                     _detect_color$2775:
   542                           	callstack 0
   543                           
   544                           ; 4 bytes @ 0x2D
   545  00008D                     	ds	4
   546  000091                     verify_color@m:
   547                           	callstack 0
   548                           
   549                           ; 2 bytes @ 0x31
   550  000091                     	ds	2
   551  000093                     verify_color@w:
   552                           	callstack 0
   553                           
   554                           ; 2 bytes @ 0x33
   555  000093                     	ds	2
   556  000095                     ??_verify_color:
   557                           
   558                           ; 1 bytes @ 0x35
   559  000095                     	ds	2
   560  000097                     verify_color@color2:
   561                           	callstack 0
   562                           
   563                           ; 2 bytes @ 0x37
   564  000097                     	ds	2
   565  000099                     verify_color@color:
   566                           	callstack 0
   567                           
   568                           ; 1 bytes @ 0x39
   569  000099                     	ds	68
   570  0000DD                     color_predict@color:
   571                           	callstack 0
   572                           
   573                           ; 1 bytes @ 0x7D
   574  0000DD                     	ds	1
   575  0000DE                     color_data_collection@i:
   576                           	callstack 0
   577                           
   578                           ; 2 bytes @ 0x7E
   579  0000DE                     	ds	2
   580  0000E0                     color_data_collection@j:
   581                           	callstack 0
   582                           
   583                           ; 2 bytes @ 0x80
   584  0000E0                     	ds	2
   585  0000E2                     color_data_collection@k:
   586                           	callstack 0
   587                           
   588                           ; 2 bytes @ 0x82
   589  0000E2                     	ds	2
   590  0000E4                     color_data_collection@x:
   591                           	callstack 0
   592                           
   593                           ; 2 bytes @ 0x84
   594  0000E4                     	ds	2
   595  0000E6                     ??_main:
   596                           
   597                           ; 1 bytes @ 0x86
   598  0000E6                     	ds	2
   599                           
   600                           	psect	cstackCOMRAM
   601  000001                     __pcstackCOMRAM:
   602                           	callstack 0
   603  000001                     ??_LED_R:
   604  000001                     ??_LED_C:
   605  000001                     ??_LED_B:
   606  000001                     ??_LED_G:
   607  000001                     ??_I2C_2_Master_Idle:
   608  000001                     ?_strlen:
   609                           	callstack 0
   610  000001                     ?___wmul:
   611                           	callstack 0
   612  000001                     ?___fladd:
   613                           	callstack 0
   614  000001                     ?___flneg:
   615                           	callstack 0
   616  000001                     ?___xxtofl:
   617                           	callstack 0
   618  000001                     ?___aodiv:
   619                           	callstack 0
   620  000001                     ?___aomod:
   621                           	callstack 0
   622  000001                     sendCharSerial4@charToSend:
   623                           	callstack 0
   624  000001                     initDCmotorsPWM@PWMperiod:
   625                           	callstack 0
   626  000001                     initDCmotors_parameter@motorL:
   627                           	callstack 0
   628  000001                     ___wmul@multiplier:
   629                           	callstack 0
   630  000001                     fputc@c:
   631                           	callstack 0
   632  000001                     strlen@s:
   633                           	callstack 0
   634  000001                     ___flge@ff1:
   635                           	callstack 0
   636  000001                     ___flneg@f1:
   637                           	callstack 0
   638  000001                     ___fladd@b:
   639                           	callstack 0
   640  000001                     ___xxtofl@val:
   641                           	callstack 0
   642  000001                     ___aodiv@dividend:
   643                           	callstack 0
   644  000001                     ___aomod@dividend:
   645                           	callstack 0
   646                           
   647                           ; 8 bytes @ 0x0
   648  000001                     	ds	1
   649  000002                     ??_I2C_2_Master_Read:
   650  000002                     I2C_2_Master_Write@data_byte:
   651                           	callstack 0
   652  000002                     sendStringSerial4@string:
   653                           	callstack 0
   654                           
   655                           ; 2 bytes @ 0x1
   656  000002                     	ds	1
   657  000003                     color_writetoaddr@value:
   658                           	callstack 0
   659  000003                     I2C_2_Master_Read@ack:
   660                           	callstack 0
   661  000003                     initDCmotors_parameter@motorR:
   662                           	callstack 0
   663  000003                     ___wmul@multiplicand:
   664                           	callstack 0
   665  000003                     fputc@fp:
   666                           	callstack 0
   667  000003                     strlen@a:
   668                           	callstack 0
   669                           
   670                           ; 2 bytes @ 0x2
   671  000003                     	ds	1
   672  000004                     color_writetoaddr@address:
   673                           	callstack 0
   674  000004                     I2C_2_Master_Read@tmp:
   675                           	callstack 0
   676                           
   677                           ; 1 bytes @ 0x3
   678  000004                     	ds	1
   679  000005                     ??_fputc:
   680  000005                     ??_color_click_init:
   681  000005                     ??___xxtofl:
   682  000005                     ?_color_read_Red:
   683                           	callstack 0
   684  000005                     ?_color_read_Blue:
   685                           	callstack 0
   686  000005                     ?_color_read_Green:
   687                           	callstack 0
   688  000005                     ?_color_read_Clear:
   689                           	callstack 0
   690  000005                     ___wmul@product:
   691                           	callstack 0
   692  000005                     ___flge@ff2:
   693                           	callstack 0
   694  000005                     ___fladd@a:
   695                           	callstack 0
   696                           
   697                           ; 4 bytes @ 0x4
   698  000005                     	ds	2
   699  000007                     ??_color_read_Red:
   700  000007                     ??_color_read_Blue:
   701  000007                     ??_color_read_Green:
   702  000007                     ??_color_read_Clear:
   703  000007                     ?___awdiv:
   704                           	callstack 0
   705  000007                     ___awdiv@dividend:
   706                           	callstack 0
   707                           
   708                           ; 2 bytes @ 0x6
   709  000007                     	ds	2
   710  000009                     ??___fladd:
   711  000009                     ??___flge:
   712  000009                     ___xxtofl@sign:
   713                           	callstack 0
   714  000009                     ___awdiv@divisor:
   715                           	callstack 0
   716  000009                     ___aodiv@divisor:
   717                           	callstack 0
   718  000009                     ___aomod@divisor:
   719                           	callstack 0
   720                           
   721                           ; 8 bytes @ 0x8
   722  000009                     	ds	1
   723  00000A                     ___xxtofl@exp:
   724                           	callstack 0
   725  00000A                     color_read_Red@tmp:
   726                           	callstack 0
   727  00000A                     color_read_Blue@tmp:
   728                           	callstack 0
   729  00000A                     color_read_Green@tmp:
   730                           	callstack 0
   731  00000A                     color_read_Clear@tmp:
   732                           	callstack 0
   733  00000A                     fputs@s:
   734                           	callstack 0
   735                           
   736                           ; 2 bytes @ 0x9
   737  00000A                     	ds	1
   738  00000B                     ___awdiv@counter:
   739                           	callstack 0
   740  00000B                     ___xxtofl@arg:
   741                           	callstack 0
   742                           
   743                           ; 4 bytes @ 0xA
   744  00000B                     	ds	1
   745  00000C                     ___awdiv@sign:
   746                           	callstack 0
   747  00000C                     read_color@m:
   748                           	callstack 0
   749  00000C                     calibrate_white@w:
   750                           	callstack 0
   751  00000C                     distance_measure@mL:
   752                           	callstack 0
   753  00000C                     fputs@fp:
   754                           	callstack 0
   755                           
   756                           ; 2 bytes @ 0xB
   757  00000C                     	ds	1
   758  00000D                     ___fladd@signs:
   759                           	callstack 0
   760  00000D                     ___awdiv@quotient:
   761                           	callstack 0
   762                           
   763                           ; 2 bytes @ 0xC
   764  00000D                     	ds	1
   765  00000E                     ??_calibrate_white:
   766  00000E                     ___fladd@aexp:
   767                           	callstack 0
   768  00000E                     fputs@c:
   769                           	callstack 0
   770  00000E                     distance_measure@mR:
   771                           	callstack 0
   772                           
   773                           ; 2 bytes @ 0xD
   774  00000E                     	ds	1
   775  00000F                     ?___fldiv:
   776                           	callstack 0
   777  00000F                     ___fladd@bexp:
   778                           	callstack 0
   779  00000F                     setMotorPWM@m:
   780                           	callstack 0
   781  00000F                     fputs@i:
   782                           	callstack 0
   783  00000F                     ___fldiv@b:
   784                           	callstack 0
   785                           
   786                           ; 4 bytes @ 0xE
   787  00000F                     	ds	1
   788  000010                     ___fladd@grs:
   789                           	callstack 0
   790  000010                     distance_measure@CR:
   791                           	callstack 0
   792                           
   793                           ; 2 bytes @ 0xF
   794  000010                     	ds	1
   795  000011                     ??_setMotorPWM:
   796  000011                     ?_pad:
   797                           	callstack 0
   798  000011                     ?___flsub:
   799                           	callstack 0
   800  000011                     ___aodiv@counter:
   801                           	callstack 0
   802  000011                     ___aomod@counter:
   803                           	callstack 0
   804  000011                     pad@fp:
   805                           	callstack 0
   806  000011                     ___flsub@b:
   807                           	callstack 0
   808                           
   809                           ; 4 bytes @ 0x10
   810  000011                     	ds	1
   811  000012                     ___aodiv@sign:
   812                           	callstack 0
   813  000012                     ___aomod@sign:
   814                           	callstack 0
   815  000012                     distance_measure@CG:
   816                           	callstack 0
   817                           
   818                           ; 2 bytes @ 0x11
   819  000012                     	ds	1
   820  000013                     ?_abs:
   821                           	callstack 0
   822  000013                     pad@buf:
   823                           	callstack 0
   824  000013                     abs@a:
   825                           	callstack 0
   826  000013                     ___fldiv@a:
   827                           	callstack 0
   828  000013                     ___aodiv@quotient:
   829                           	callstack 0
   830                           
   831                           ; 8 bytes @ 0x12
   832  000013                     	ds	1
   833  000014                     distance_measure@CB:
   834                           	callstack 0
   835                           
   836                           ; 2 bytes @ 0x13
   837  000014                     	ds	1
   838  000015                     ??_abs:
   839  000015                     pad@p:
   840                           	callstack 0
   841  000015                     ___flsub@a:
   842                           	callstack 0
   843                           
   844                           ; 4 bytes @ 0x14
   845  000015                     	ds	1
   846  000016                     distance_measure@CC:
   847                           	callstack 0
   848                           
   849                           ; 2 bytes @ 0x15
   850  000016                     	ds	1
   851  000017                     ??___fldiv:
   852  000017                     ??_pad:
   853                           
   854                           ; 1 bytes @ 0x16
   855  000017                     	ds	1
   856  000018                     distance_measure@stop:
   857                           	callstack 0
   858  000018                     setMotorPWM@PWMduty:
   859                           	callstack 0
   860  000018                     pad@i:
   861                           	callstack 0
   862                           
   863                           ; 2 bytes @ 0x17
   864  000018                     	ds	1
   865  000019                     
   866                           ; 1 bytes @ 0x18
   867  000019                     	ds	1
   868  00001A                     stop@mL:
   869                           	callstack 0
   870  00001A                     fullSpeedAhead@mL:
   871                           	callstack 0
   872  00001A                     pad@w:
   873                           	callstack 0
   874                           
   875                           ; 2 bytes @ 0x19
   876  00001A                     	ds	1
   877  00001B                     ___fldiv@rem:
   878                           	callstack 0
   879                           
   880                           ; 4 bytes @ 0x1A
   881  00001B                     	ds	1
   882  00001C                     ?_dtoa:
   883                           	callstack 0
   884  00001C                     stop@mR:
   885                           	callstack 0
   886  00001C                     fullSpeedAhead@mR:
   887                           	callstack 0
   888  00001C                     dtoa@fp:
   889                           	callstack 0
   890                           
   891                           ; 2 bytes @ 0x1B
   892  00001C                     	ds	2
   893  00001E                     ??_stop:
   894  00001E                     ??_fullSpeedAhead:
   895  00001E                     dtoa@d:
   896                           	callstack 0
   897                           
   898                           ; 8 bytes @ 0x1D
   899  00001E                     	ds	1
   900  00001F                     ___fldiv@sign:
   901                           	callstack 0
   902                           
   903                           ; 1 bytes @ 0x1E
   904  00001F                     	ds	1
   905  000020                     turnLeft@mL:
   906                           	callstack 0
   907  000020                     turnRight@mL:
   908                           	callstack 0
   909  000020                     fullSpeedBack@mL:
   910                           	callstack 0
   911  000020                     short_burst@mL:
   912                           	callstack 0
   913  000020                     ___fldiv@new_exp:
   914                           	callstack 0
   915                           
   916                           ; 2 bytes @ 0x1F
   917  000020                     	ds	2
   918  000022                     turnLeft@mR:
   919                           	callstack 0
   920  000022                     turnRight@mR:
   921                           	callstack 0
   922  000022                     fullSpeedBack@mR:
   923                           	callstack 0
   924  000022                     short_burst@mR:
   925                           	callstack 0
   926  000022                     ___fldiv@grs:
   927                           	callstack 0
   928                           
   929                           ; 4 bytes @ 0x21
   930  000022                     	ds	2
   931  000024                     ??_short_burst:
   932  000024                     ??_fullSpeedBack:
   933  000024                     turnLeft@angle_left:
   934                           	callstack 0
   935  000024                     turnRight@angle_right:
   936                           	callstack 0
   937                           
   938                           ; 1 bytes @ 0x23
   939  000024                     	ds	1
   940  000025                     ??_turnRight:
   941  000025                     ??_turnLeft:
   942                           
   943                           ; 1 bytes @ 0x24
   944  000025                     	ds	1
   945  000026                     ??_dtoa:
   946  000026                     ___fldiv@bexp:
   947                           	callstack 0
   948  000026                     turnLeft@delay_180:
   949                           	callstack 0
   950  000026                     turnRight@delay_180:
   951                           	callstack 0
   952  000026                     short_reverse@mL:
   953                           	callstack 0
   954  000026                     reverse_square@mL:
   955                           	callstack 0
   956                           
   957                           ; 2 bytes @ 0x25
   958  000026                     	ds	1
   959  000027                     ___fldiv@aexp:
   960                           	callstack 0
   961                           
   962                           ; 1 bytes @ 0x26
   963  000027                     	ds	1
   964  000028                     ?___flmul:
   965                           	callstack 0
   966  000028                     turnLeft@i:
   967                           	callstack 0
   968  000028                     turnRight@i:
   969                           	callstack 0
   970  000028                     short_reverse@mR:
   971                           	callstack 0
   972  000028                     reverse_square@mR:
   973                           	callstack 0
   974  000028                     ___flmul@b:
   975                           	callstack 0
   976                           
   977                           ; 4 bytes @ 0x27
   978  000028                     	ds	2
   979  00002A                     ??_short_reverse:
   980  00002A                     ??_reverse_square:
   981  00002A                     turnLeft@i_1192:
   982                           	callstack 0
   983  00002A                     turnRight@i_1215:
   984                           	callstack 0
   985                           
   986                           ; 2 bytes @ 0x29
   987  00002A                     	ds	2
   988  00002C                     turnLeft@delay:
   989                           	callstack 0
   990  00002C                     turnRight@delay:
   991                           	callstack 0
   992  00002C                     ___flmul@a:
   993                           	callstack 0
   994                           
   995                           ; 4 bytes @ 0x2B
   996  00002C                     	ds	2
   997  00002E                     goback@mL:
   998                           	callstack 0
   999  00002E                     _dtoa$2416:
  1000                           	callstack 0
  1001                           
  1002                           ; 2 bytes @ 0x2D
  1003  00002E                     	ds	2
  1004  000030                     ??___flmul:
  1005  000030                     goback@mR:
  1006                           	callstack 0
  1007  000030                     dtoa@p:
  1008                           	callstack 0
  1009                           
  1010                           ; 2 bytes @ 0x2F
  1011  000030                     	ds	2
  1012  000032                     action@mL:
  1013                           	callstack 0
  1014  000032                     dtoa@w:
  1015                           	callstack 0
  1016                           
  1017                           ; 2 bytes @ 0x31
  1018  000032                     	ds	2
  1019  000034                     ___flmul@sign:
  1020                           	callstack 0
  1021  000034                     action@mR:
  1022                           	callstack 0
  1023  000034                     dtoa@s:
  1024                           	callstack 0
  1025                           
  1026                           ; 2 bytes @ 0x33
  1027  000034                     	ds	1
  1028  000035                     ___flmul@grs:
  1029                           	callstack 0
  1030                           
  1031                           ; 4 bytes @ 0x34
  1032  000035                     	ds	1
  1033  000036                     action@color:
  1034                           	callstack 0
  1035  000036                     dtoa@n:
  1036                           	callstack 0
  1037                           
  1038                           ; 8 bytes @ 0x35
  1039  000036                     	ds	3
  1040  000039                     ___flmul@aexp:
  1041                           	callstack 0
  1042                           
  1043                           ; 1 bytes @ 0x38
  1044  000039                     	ds	1
  1045  00003A                     ___flmul@bexp:
  1046                           	callstack 0
  1047                           
  1048                           ; 1 bytes @ 0x39
  1049  00003A                     	ds	1
  1050  00003B                     ___flmul@prod:
  1051                           	callstack 0
  1052                           
  1053                           ; 4 bytes @ 0x3A
  1054  00003B                     	ds	3
  1055  00003E                     dtoa@i:
  1056                           	callstack 0
  1057                           
  1058                           ; 2 bytes @ 0x3D
  1059  00003E                     	ds	1
  1060  00003F                     ___flmul@temp:
  1061                           	callstack 0
  1062                           
  1063                           ; 2 bytes @ 0x3E
  1064  00003F                     	ds	1
  1065  000040                     ?_vfpfcnvrt:
  1066                           	callstack 0
  1067  000040                     vfpfcnvrt@fp:
  1068                           	callstack 0
  1069                           
  1070                           ; 2 bytes @ 0x3F
  1071  000040                     	ds	1
  1072  000041                     ?_roundf:
  1073                           	callstack 0
  1074  000041                     roundf@x:
  1075                           	callstack 0
  1076                           
  1077                           ; 4 bytes @ 0x40
  1078  000041                     	ds	1
  1079  000042                     vfpfcnvrt@fmt:
  1080                           	callstack 0
  1081                           
  1082                           ; 2 bytes @ 0x41
  1083  000042                     	ds	2
  1084  000044                     vfpfcnvrt@ap:
  1085                           	callstack 0
  1086                           
  1087                           ; 2 bytes @ 0x43
  1088  000044                     	ds	1
  1089  000045                     ??_roundf:
  1090                           
  1091                           ; 1 bytes @ 0x44
  1092  000045                     	ds	1
  1093  000046                     ??_vfpfcnvrt:
  1094                           
  1095                           ; 1 bytes @ 0x45
  1096  000046                     	ds	2
  1097  000048                     vfpfcnvrt@ll:
  1098                           	callstack 0
  1099                           
  1100                           ; 8 bytes @ 0x47
  1101  000048                     	ds	1
  1102  000049                     _roundf$2777:
  1103                           	callstack 0
  1104                           
  1105                           ; 4 bytes @ 0x48
  1106  000049                     	ds	4
  1107  00004D                     roundf@e:
  1108                           	callstack 0
  1109                           
  1110                           ; 2 bytes @ 0x4C
  1111  00004D                     	ds	2
  1112  00004F                     _roundf$2776:
  1113                           	callstack 0
  1114                           
  1115                           ; 4 bytes @ 0x4E
  1116  00004F                     	ds	1
  1117  000050                     ?_vfprintf:
  1118                           	callstack 0
  1119  000050                     vfprintf@fp:
  1120                           	callstack 0
  1121                           
  1122                           ; 2 bytes @ 0x4F
  1123  000050                     	ds	2
  1124  000052                     vfprintf@fmt:
  1125                           	callstack 0
  1126                           
  1127                           ; 2 bytes @ 0x51
  1128  000052                     	ds	1
  1129  000053                     roundf@u:
  1130                           	callstack 0
  1131                           
  1132                           ; 4 bytes @ 0x52
  1133  000053                     	ds	1
  1134  000054                     vfprintf@ap:
  1135                           	callstack 0
  1136                           
  1137                           ; 2 bytes @ 0x53
  1138  000054                     	ds	2
  1139  000056                     vfprintf@cfmt:
  1140                           	callstack 0
  1141                           
  1142                           ; 2 bytes @ 0x55
  1143  000056                     	ds	1
  1144  000057                     roundf@y:
  1145                           	callstack 0
  1146                           
  1147                           ; 4 bytes @ 0x56
  1148  000057                     	ds	1
  1149  000058                     color_display@m:
  1150                           	callstack 0
  1151                           
  1152                           ; 2 bytes @ 0x57
  1153  000058                     	ds	2
  1154  00005A                     color_data_collection@m:
  1155                           	callstack 0
  1156                           
  1157                           ; 2 bytes @ 0x59
  1158  00005A                     	ds	1
  1159  00005B                     ?___fltol:
  1160                           	callstack 0
  1161  00005B                     ___fltol@f1:
  1162                           	callstack 0
  1163                           
  1164                           ; 4 bytes @ 0x5A
  1165  00005B                     	ds	1
  1166  00005C                     ??_color_data_collection:
  1167                           
  1168                           ; 1 bytes @ 0x5B
  1169  00005C                     	ds	3
  1170  00005F                     compare@result:
  1171                           	callstack 0
  1172                           
  1173                           ; 1 bytes @ 0x5E
  1174  00005F                     	ds	1
  1175                           
  1176 ;;
  1177 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1178 ;;
  1179 ;; *************** function _main *****************
  1180 ;; Defined at:
  1181 ;;		line 24 in file "main.c"
  1182 ;; Parameters:    Size  Location     Type
  1183 ;;		None
  1184 ;; Auto vars:     Size  Location     Type
  1185 ;;  white          20    1[BANK1 ] struct white_card
  1186 ;;  motorR         10   39[BANK1 ] struct DC_motor
  1187 ;;  motorL         10   29[BANK1 ] struct DC_motor
  1188 ;;  rgb             8   21[BANK1 ] struct color_rgb
  1189 ;;  stop_signal     1    0[BANK1 ] unsigned char 
  1190 ;;  complete        1    0        unsigned char 
  1191 ;; Return value:  Size  Location     Type
  1192 ;;                  1    wreg      void 
  1193 ;; Registers used:
  1194 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1195 ;; Tracked objects:
  1196 ;;		On entry : 0/0
  1197 ;;		On exit  : 0/0
  1198 ;;		Unchanged: 0/0
  1199 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1200 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1201 ;;      Locals:         0       0      49       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1202 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1203 ;;      Totals:         0       2      49       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1204 ;;Total ram usage:       51 bytes
  1205 ;; Hardware stack levels required when called: 10
  1206 ;; This function calls:
  1207 ;;		_I2C_2_Master_Init
  1208 ;;		_LED_C
  1209 ;;		_action
  1210 ;;		_calibrate_white
  1211 ;;		_color_click_init
  1212 ;;		_color_data_collection
  1213 ;;		_color_display
  1214 ;;		_detect_color
  1215 ;;		_distance_measure
  1216 ;;		_fullSpeedAhead
  1217 ;;		_initDCmotorsPWM
  1218 ;;		_initDCmotors_parameter
  1219 ;;		_initUSART4
  1220 ;;		_pin_init
  1221 ;;		_read_color
  1222 ;;		_short_burst
  1223 ;;		_stop
  1224 ;;		_verify_color
  1225 ;; This function is called by:
  1226 ;;		Startup code after reset
  1227 ;; This function uses a non-reentrant model
  1228 ;;
  1229                           
  1230                           	psect	text0
  1231  004232                     __ptext0:
  1232                           	callstack 0
  1233  004232                     _main:
  1234                           	callstack 21
  1235  004232                     
  1236                           ;main.c: 25:     I2C_2_Master_Init();
  1237  004232  ECD5  F026         	call	_I2C_2_Master_Init	;wreg free
  1238  004236                     
  1239                           ;main.c: 26:     color_click_init();
  1240  004236  ECA3  F026         	call	_color_click_init	;wreg free
  1241  00423A                     
  1242                           ;main.c: 27:     initDCmotorsPWM(199);
  1243  00423A  0E00               	movlw	0
  1244  00423C  6E02               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
  1245  00423E  0EC7               	movlw	199
  1246  004240  6E01               	movwf	initDCmotorsPWM@PWMperiod^0,c
  1247  004242  EC6F  F025         	call	_initDCmotorsPWM	;wreg free
  1248  004246                     
  1249                           ;main.c: 29:     initUSART4();
  1250  004246  EC61  F027         	call	_initUSART4	;wreg free
  1251  00424A                     
  1252                           ;main.c: 31:     struct color_rgb rgb;;main.c: 32:     struct white_card white;;main.c: 
      +                          36:     struct DC_motor motorL, motorR;;main.c: 38:     initDCmotors_parameter(&motorL, 
      +                          &motorR);
  1253  00424A  0EA2               	movlw	low main@motorL
  1254  00424C  6E01               	movwf	initDCmotors_parameter@motorL^0,c
  1255  00424E  0E01               	movlw	high main@motorL
  1256  004250  6E02               	movwf	(initDCmotors_parameter@motorL+1)^0,c
  1257  004252  0EAC               	movlw	low main@motorR
  1258  004254  6E03               	movwf	initDCmotors_parameter@motorR^0,c
  1259  004256  0E01               	movlw	high main@motorR
  1260  004258  6E04               	movwf	(initDCmotors_parameter@motorR+1)^0,c
  1261  00425A  EC4B  F020         	call	_initDCmotors_parameter	;wreg free
  1262  00425E                     
  1263                           ;main.c: 41:     if (4 == 1 || 4 == 3){
  1264  00425E  EC70  F027         	call	_pin_init	;wreg free
  1265  004262                     
  1266                           ;main.c: 47:     unsigned char stop_signal = 0;
  1267  004262  0E00               	movlw	0
  1268  004264  0101               	movlb	1	; () banked
  1269  004266  6F85               	movwf	main@stop_signal& (0+255),b
  1270  004268                     l5004:
  1271                           
  1272                           ;main.c: 81:             read_color(&rgb);
  1273  004268  0E9A               	movlw	low main@rgb
  1274  00426A  6E0C               	movwf	read_color@m^0,c
  1275  00426C  0E01               	movlw	high main@rgb
  1276  00426E  6E0D               	movwf	(read_color@m+1)^0,c
  1277  004270  ECE1  F023         	call	_read_color	;wreg free
  1278  004274                     
  1279                           ;main.c: 82:             color_display(&rgb);
  1280  004274  0E9A               	movlw	low main@rgb
  1281  004276  6E58               	movwf	color_display@m^0,c
  1282  004278  0E01               	movlw	high main@rgb
  1283  00427A  6E59               	movwf	(color_display@m+1)^0,c
  1284  00427C  EC49  F023         	call	_color_display	;wreg free
  1285                           
  1286                           ;main.c: 83:             while (stop_signal == 0){
  1287  004280  EF58  F021         	goto	l5012
  1288  004284                     l5008:
  1289                           
  1290                           ; BSR set to: 1
  1291                           ;main.c: 84:                 fullSpeedAhead(&motorL, &motorR);
  1292  004284  0EA2               	movlw	low main@motorL
  1293  004286  6E1A               	movwf	fullSpeedAhead@mL^0,c
  1294  004288  0E01               	movlw	high main@motorL
  1295  00428A  6E1B               	movwf	(fullSpeedAhead@mL+1)^0,c
  1296  00428C  0EAC               	movlw	low main@motorR
  1297  00428E  6E1C               	movwf	fullSpeedAhead@mR^0,c
  1298  004290  0E01               	movlw	high main@motorR
  1299  004292  6E1D               	movwf	(fullSpeedAhead@mR+1)^0,c
  1300  004294  ECFF  F022         	call	_fullSpeedAhead	;wreg free
  1301  004298                     
  1302                           ;main.c: 85:                 stop_signal = distance_measure(&motorL, &motorR);
  1303  004298  0EA2               	movlw	low main@motorL
  1304  00429A  6E0C               	movwf	distance_measure@mL^0,c
  1305  00429C  0E01               	movlw	high main@motorL
  1306  00429E  6E0D               	movwf	(distance_measure@mL+1)^0,c
  1307  0042A0  0EAC               	movlw	low main@motorR
  1308  0042A2  6E0E               	movwf	distance_measure@mR^0,c
  1309  0042A4  0E01               	movlw	high main@motorR
  1310  0042A6  6E0F               	movwf	(distance_measure@mR+1)^0,c
  1311  0042A8  EC05  F025         	call	_distance_measure	;wreg free
  1312  0042AC  0101               	movlb	1	; () banked
  1313  0042AE  6F85               	movwf	main@stop_signal& (0+255),b
  1314  0042B0                     l5012:
  1315                           
  1316                           ;main.c: 83:             while (stop_signal == 0){
  1317  0042B0  0101               	movlb	1	; () banked
  1318  0042B2  5185               	movf	main@stop_signal& (0+255),w,b
  1319  0042B4  B4D8               	btfsc	status,2,c
  1320  0042B6  EF5F  F021         	goto	u5081
  1321  0042BA  EF61  F021         	goto	u5080
  1322  0042BE                     u5081:
  1323  0042BE  EF42  F021         	goto	l5008
  1324  0042C2                     u5080:
  1325  0042C2                     
  1326                           ; BSR set to: 1
  1327                           ;main.c: 87:             stop(&motorL, &motorR);
  1328  0042C2  0EA2               	movlw	low main@motorL
  1329  0042C4  6E1A               	movwf	stop@mL^0,c
  1330  0042C6  0E01               	movlw	high main@motorL
  1331  0042C8  6E1B               	movwf	(stop@mL+1)^0,c
  1332  0042CA  0EAC               	movlw	low main@motorR
  1333  0042CC  6E1C               	movwf	stop@mR^0,c
  1334  0042CE  0E01               	movlw	high main@motorR
  1335  0042D0  6E1D               	movwf	(stop@mR+1)^0,c
  1336  0042D2  ECA1  F022         	call	_stop	;wreg free
  1337  0042D6                     
  1338                           ;main.c: 88:             _delay((unsigned long)((1000)*(64000000/4000.0)));
  1339  0042D6  0E52               	movlw	82
  1340  0042D8  0100               	movlb	0	; () banked
  1341  0042DA  6FE7               	movwf	(??_main+1)& (0+255),b
  1342  0042DC  0E2B               	movlw	43
  1343  0042DE  6FE6               	movwf	??_main& (0+255),b
  1344  0042E0  0E00               	movlw	0
  1345  0042E2                     u5097:
  1346  0042E2  2EE8               	decfsz	wreg,f,c
  1347  0042E4  D7FE               	bra	u5097
  1348  0042E6  2FE6               	decfsz	??_main& (0+255),f,b
  1349  0042E8  D7FC               	bra	u5097
  1350  0042EA  2FE7               	decfsz	(??_main+1)& (0+255),f,b
  1351  0042EC  D7FA               	bra	u5097
  1352  0042EE  F000               	nop	
  1353  0042F0  EF34  F021         	goto	l5004
  1354  0042F4  EF00  F000         	goto	start
  1355  0042F8                     __end_of_main:
  1356                           	callstack 0
  1357                           
  1358 ;; *************** function _verify_color *****************
  1359 ;; Defined at:
  1360 ;;		line 312 in file "color.c"
  1361 ;; Parameters:    Size  Location     Type
  1362 ;;  color           1    wreg     unsigned char 
  1363 ;;  m               2   49[BANK0 ] PTR struct color_rgb
  1364 ;;		 -> main@rgb(8), 
  1365 ;;  w               2   51[BANK0 ] PTR struct white_card
  1366 ;;		 -> main@white(20), 
  1367 ;; Auto vars:     Size  Location     Type
  1368 ;;  color           1   57[BANK0 ] unsigned char 
  1369 ;;  color2          2   55[BANK0 ] unsigned int 
  1370 ;; Return value:  Size  Location     Type
  1371 ;;                  1    wreg      unsigned char 
  1372 ;; Registers used:
  1373 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1374 ;; Tracked objects:
  1375 ;;		On entry : 0/0
  1376 ;;		On exit  : 0/0
  1377 ;;		Unchanged: 0/0
  1378 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1379 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1380 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1381 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1382 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1383 ;;Total ram usage:        9 bytes
  1384 ;; Hardware stack levels used: 1
  1385 ;; Hardware stack levels required when called: 5
  1386 ;; This function calls:
  1387 ;;		_detect_color
  1388 ;; This function is called by:
  1389 ;;		_main
  1390 ;; This function uses a non-reentrant model
  1391 ;;
  1392                           
  1393                           	psect	text1
  1394  004764                     __ptext1:
  1395                           	callstack 0
  1396  004764                     _verify_color:
  1397                           	callstack 25
  1398                           
  1399                           ;incstack = 0
  1400                           ;verify_color@color stored from wreg
  1401  004764  0100               	movlb	0	; () banked
  1402  004766  6F99               	movwf	verify_color@color& (0+255),b
  1403  004768                     
  1404                           ;color.c: 312: unsigned char verify_color(unsigned char color,struct color_rgb *m, struc
      +                          t white_card *w);color.c: 313: {;color.c: 314:     _delay((unsigned long)((50)*(64000000
      +                          /4000.0)));
  1405  004768  0E05               	movlw	5
  1406  00476A  0100               	movlb	0	; () banked
  1407  00476C  6F96               	movwf	(??_verify_color+1)& (0+255),b
  1408  00476E  0E0F               	movlw	15
  1409  004770  6F95               	movwf	??_verify_color& (0+255),b
  1410  004772  0EF1               	movlw	241
  1411  004774                     u5107:
  1412  004774  2EE8               	decfsz	wreg,f,c
  1413  004776  D7FE               	bra	u5107
  1414  004778  2F95               	decfsz	??_verify_color& (0+255),f,b
  1415  00477A  D7FC               	bra	u5107
  1416  00477C  2F96               	decfsz	(??_verify_color+1)& (0+255),f,b
  1417  00477E  D7FA               	bra	u5107
  1418  004780                     
  1419                           ;color.c: 315:     unsigned int color2;;color.c: 316:     color2 = detect_color(m,w);
  1420  004780  C091  F070         	movff	verify_color@m,detect_color@m
  1421  004784  C092  F071         	movff	verify_color@m+1,detect_color@m+1
  1422  004788  C093  F072         	movff	verify_color@w,detect_color@w
  1423  00478C  C094  F073         	movff	verify_color@w+1,detect_color@w+1
  1424  004790  EC2A  F007         	call	_detect_color	;wreg free
  1425  004794  0100               	movlb	0	; () banked
  1426  004796  6F95               	movwf	??_verify_color& (0+255),b
  1427  004798  5195               	movf	??_verify_color& (0+255),w,b
  1428  00479A  6F97               	movwf	verify_color@color2& (0+255),b
  1429  00479C  6B98               	clrf	(verify_color@color2+1)& (0+255),b
  1430  00479E                     
  1431                           ; BSR set to: 0
  1432                           ;color.c: 317:     if (color == color2){return color;}
  1433  00479E  5199               	movf	verify_color@color& (0+255),w,b
  1434  0047A0  6F95               	movwf	??_verify_color& (0+255),b
  1435  0047A2  6B96               	clrf	(??_verify_color+1)& (0+255),b
  1436  0047A4  5197               	movf	verify_color@color2& (0+255),w,b
  1437  0047A6  1995               	xorwf	??_verify_color& (0+255),w,b
  1438  0047A8  E107               	bnz	u4861
  1439  0047AA  5198               	movf	(verify_color@color2+1)& (0+255),w,b
  1440  0047AC  1996               	xorwf	(??_verify_color+1)& (0+255),w,b
  1441  0047AE  A4D8               	btfss	status,2,c
  1442  0047B0  EFDC  F023         	goto	u4861
  1443  0047B4  EFDE  F023         	goto	u4860
  1444  0047B8                     u4861:
  1445  0047B8  EFE0  F023         	goto	l4770
  1446  0047BC                     u4860:
  1447  0047BC  EFE0  F023         	goto	l161
  1448  0047C0                     l4770:
  1449  0047C0                     l161:
  1450                           
  1451                           ; BSR set to: 0
  1452  0047C0  0012               	return		;funcret
  1453  0047C2                     __end_of_verify_color:
  1454                           	callstack 0
  1455                           
  1456 ;; *************** function _detect_color *****************
  1457 ;; Defined at:
  1458 ;;		line 226 in file "color.c"
  1459 ;; Parameters:    Size  Location     Type
  1460 ;;  m               2   16[BANK0 ] PTR struct color_rgb
  1461 ;;		 -> main@rgb(8), 
  1462 ;;  w               2   18[BANK0 ] PTR struct white_card
  1463 ;;		 -> main@white(20), 
  1464 ;; Auto vars:     Size  Location     Type
  1465 ;;  BG              2   42[BANK0 ] unsigned int 
  1466 ;;  GR              2   40[BANK0 ] unsigned int 
  1467 ;;  BR              2   38[BANK0 ] unsigned int 
  1468 ;;  BB              2   36[BANK0 ] unsigned int 
  1469 ;;  RR              2   34[BANK0 ] unsigned int 
  1470 ;;  GG              2   32[BANK0 ] unsigned int 
  1471 ;;  RG              2   30[BANK0 ] unsigned int 
  1472 ;;  GC              2   28[BANK0 ] unsigned int 
  1473 ;;  GB              2   26[BANK0 ] unsigned int 
  1474 ;;  RB              2   24[BANK0 ] unsigned int 
  1475 ;;  color           1   44[BANK0 ] unsigned char 
  1476 ;; Return value:  Size  Location     Type
  1477 ;;                  1    wreg      unsigned char 
  1478 ;; Registers used:
  1479 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1480 ;; Tracked objects:
  1481 ;;		On entry : 0/0
  1482 ;;		On exit  : 0/0
  1483 ;;		Unchanged: 0/0
  1484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1485 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1486 ;;      Locals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1487 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1488 ;;      Totals:         0      33       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1489 ;;Total ram usage:       33 bytes
  1490 ;; Hardware stack levels used: 1
  1491 ;; Hardware stack levels required when called: 4
  1492 ;; This function calls:
  1493 ;;		_LED_B
  1494 ;;		_LED_G
  1495 ;;		_LED_R
  1496 ;;		___fldiv
  1497 ;;		___flmul
  1498 ;;		___xxtofl
  1499 ;;		_compare
  1500 ;;		_lroundf
  1501 ;;		_read_color
  1502 ;; This function is called by:
  1503 ;;		_verify_color
  1504 ;;		_main
  1505 ;; This function uses a non-reentrant model
  1506 ;;
  1507                           
  1508                           	psect	text2
  1509  000E54                     __ptext2:
  1510                           	callstack 0
  1511  000E54                     _detect_color:
  1512                           	callstack 25
  1513  000E54  0E00               	movlw	0
  1514  000E56  0100               	movlb	0	; () banked
  1515  000E58  6F7F               	movwf	(detect_color@RG+1)& (0+255),b
  1516  000E5A  0E00               	movlw	0
  1517  000E5C  6F7E               	movwf	detect_color@RG& (0+255),b
  1518  000E5E  0E00               	movlw	0
  1519  000E60  6F79               	movwf	(detect_color@RB+1)& (0+255),b
  1520  000E62  0E00               	movlw	0
  1521  000E64  6F78               	movwf	detect_color@RB& (0+255),b
  1522  000E66  0E00               	movlw	0
  1523  000E68  6F89               	movwf	(detect_color@GR+1)& (0+255),b
  1524  000E6A  0E00               	movlw	0
  1525  000E6C  6F88               	movwf	detect_color@GR& (0+255),b
  1526  000E6E  0E00               	movlw	0
  1527  000E70  6F81               	movwf	(detect_color@GG+1)& (0+255),b
  1528  000E72  0E00               	movlw	0
  1529  000E74  6F80               	movwf	detect_color@GG& (0+255),b
  1530  000E76  0E00               	movlw	0
  1531  000E78  6F7B               	movwf	(detect_color@GB+1)& (0+255),b
  1532  000E7A  0E00               	movlw	0
  1533  000E7C  6F7A               	movwf	detect_color@GB& (0+255),b
  1534  000E7E  0E00               	movlw	0
  1535  000E80  6F87               	movwf	(detect_color@BR+1)& (0+255),b
  1536  000E82  0E00               	movlw	0
  1537  000E84  6F86               	movwf	detect_color@BR& (0+255),b
  1538  000E86  0E00               	movlw	0
  1539  000E88  6F8B               	movwf	(detect_color@BG+1)& (0+255),b
  1540  000E8A  0E00               	movlw	0
  1541  000E8C  6F8A               	movwf	detect_color@BG& (0+255),b
  1542  000E8E  0E00               	movlw	0
  1543  000E90  6F85               	movwf	(detect_color@BB+1)& (0+255),b
  1544  000E92  0E00               	movlw	0
  1545  000E94  6F84               	movwf	detect_color@BB& (0+255),b
  1546                           
  1547                           ;color.c: 231:     unsigned int GC = 0;
  1548  000E96  0E00               	movlw	0
  1549  000E98  6F7D               	movwf	(detect_color@GC+1)& (0+255),b
  1550  000E9A  0E00               	movlw	0
  1551  000E9C  6F7C               	movwf	detect_color@GC& (0+255),b
  1552                           
  1553                           ;color.c: 232:     unsigned char color = 0;
  1554  000E9E  0E00               	movlw	0
  1555  000EA0  6F8C               	movwf	detect_color@color& (0+255),b
  1556  000EA2                     
  1557                           ; BSR set to: 0
  1558                           ;color.c: 234:     LED_R();
  1559  000EA2  EC31  F027         	call	_LED_R	;wreg free
  1560  000EA6                     
  1561                           ;color.c: 235:     read_color(m);
  1562  000EA6  C070  F00C         	movff	detect_color@m,read_color@m
  1563  000EAA  C071  F00D         	movff	detect_color@m+1,read_color@m+1
  1564  000EAE  ECE1  F023         	call	_read_color	;wreg free
  1565  000EB2                     
  1566                           ;color.c: 237:     RR = lroundf((float)(m->R)/(w->RR)*100); RG = lroundf((float)(m->G)/(
      +                          w->RG)*100); RB = lroundf((float)(m->B)/(w->RB)*100);
  1567  000EB2  C072  FFD9         	movff	detect_color@w,fsr2l
  1568  000EB6  C073  FFDA         	movff	detect_color@w+1,fsr2h
  1569  000EBA  CFDE F074          	movff	postinc2,??_detect_color
  1570  000EBE  CFDD F075          	movff	postdec2,??_detect_color+1
  1571  000EC2  C074  F001         	movff	??_detect_color,___xxtofl@val
  1572  000EC6  C075  F002         	movff	??_detect_color+1,___xxtofl@val+1
  1573  000ECA  6A03               	clrf	(___xxtofl@val+2)^0,c
  1574  000ECC  6A04               	clrf	(___xxtofl@val+3)^0,c
  1575  000ECE  0E00               	movlw	0
  1576  000ED0  ECDF  F019         	call	___xxtofl
  1577  000ED4  C001  F013         	movff	?___xxtofl,___fldiv@a
  1578  000ED8  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  1579  000EDC  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  1580  000EE0  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  1581  000EE4  C070  FFD9         	movff	detect_color@m,fsr2l
  1582  000EE8  C071  FFDA         	movff	detect_color@m+1,fsr2h
  1583  000EEC  CFDE F076          	movff	postinc2,??_detect_color+2
  1584  000EF0  CFDD F077          	movff	postdec2,??_detect_color+3
  1585  000EF4  C076  F001         	movff	??_detect_color+2,___xxtofl@val
  1586  000EF8  C077  F002         	movff	??_detect_color+3,___xxtofl@val+1
  1587  000EFC  6A03               	clrf	(___xxtofl@val+2)^0,c
  1588  000EFE  6A04               	clrf	(___xxtofl@val+3)^0,c
  1589  000F00  0E00               	movlw	0
  1590  000F02  ECDF  F019         	call	___xxtofl
  1591  000F06  C001  F00F         	movff	?___xxtofl,___fldiv@b
  1592  000F0A  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  1593  000F0E  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  1594  000F12  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  1595  000F16  ECDA  F013         	call	___fldiv	;wreg free
  1596  000F1A  C00F  F028         	movff	?___fldiv,___flmul@b
  1597  000F1E  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  1598  000F22  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  1599  000F26  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  1600  000F2A  0E00               	movlw	0
  1601  000F2C  6E2C               	movwf	___flmul@a^0,c
  1602  000F2E  0E00               	movlw	0
  1603  000F30  6E2D               	movwf	(___flmul@a+1)^0,c
  1604  000F32  0EC8               	movlw	200
  1605  000F34  6E2E               	movwf	(___flmul@a+2)^0,c
  1606  000F36  0E42               	movlw	66
  1607  000F38  6E2F               	movwf	(___flmul@a+3)^0,c
  1608  000F3A  ECEE  F00F         	call	___flmul	;wreg free
  1609  000F3E  C028  F08D         	movff	?___flmul,_detect_color$2775
  1610  000F42  C029  F08E         	movff	?___flmul+1,_detect_color$2775+1
  1611  000F46  C02A  F08F         	movff	?___flmul+2,_detect_color$2775+2
  1612  000F4A  C02B  F090         	movff	?___flmul+3,_detect_color$2775+3
  1613  000F4E                     
  1614                           ;color.c: 237:     RR = lroundf((float)(m->R)/(w->RR)*100); RG = lroundf((float)(m->G)/(
      +                          w->RG)*100); RB = lroundf((float)(m->B)/(w->RB)*100);
  1615  000F4E  C08D  F066         	movff	_detect_color$2775,lroundf@x
  1616  000F52  C08E  F067         	movff	_detect_color$2775+1,lroundf@x+1
  1617  000F56  C08F  F068         	movff	_detect_color$2775+2,lroundf@x+2
  1618  000F5A  C090  F069         	movff	_detect_color$2775+3,lroundf@x+3
  1619  000F5E  EC32  F026         	call	_lroundf	;wreg free
  1620  000F62  C066  F082         	movff	?_lroundf,detect_color@RR
  1621  000F66  C067  F083         	movff	?_lroundf+1,detect_color@RR+1
  1622  000F6A  0100               	movlb	0	; () banked
  1623  000F6C  EE20 F002          	lfsr	2,2
  1624  000F70  5172               	movf	detect_color@w& (0+255),w,b
  1625  000F72  26D9               	addwf	fsr2l,f,c
  1626  000F74  5173               	movf	(detect_color@w+1)& (0+255),w,b
  1627  000F76  22DA               	addwfc	fsr2h,f,c
  1628  000F78  CFDE F074          	movff	postinc2,??_detect_color
  1629  000F7C  CFDD F075          	movff	postdec2,??_detect_color+1
  1630  000F80  C074  F001         	movff	??_detect_color,___xxtofl@val
  1631  000F84  C075  F002         	movff	??_detect_color+1,___xxtofl@val+1
  1632  000F88  6A03               	clrf	(___xxtofl@val+2)^0,c
  1633  000F8A  6A04               	clrf	(___xxtofl@val+3)^0,c
  1634  000F8C  0E00               	movlw	0
  1635  000F8E  ECDF  F019         	call	___xxtofl
  1636  000F92  C001  F013         	movff	?___xxtofl,___fldiv@a
  1637  000F96  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  1638  000F9A  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  1639  000F9E  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  1640  000FA2  0100               	movlb	0	; () banked
  1641  000FA4  EE20 F002          	lfsr	2,2
  1642  000FA8  5170               	movf	detect_color@m& (0+255),w,b
  1643  000FAA  26D9               	addwf	fsr2l,f,c
  1644  000FAC  5171               	movf	(detect_color@m+1)& (0+255),w,b
  1645  000FAE  22DA               	addwfc	fsr2h,f,c
  1646  000FB0  CFDE F076          	movff	postinc2,??_detect_color+2
  1647  000FB4  CFDD F077          	movff	postdec2,??_detect_color+3
  1648  000FB8  C076  F001         	movff	??_detect_color+2,___xxtofl@val
  1649  000FBC  C077  F002         	movff	??_detect_color+3,___xxtofl@val+1
  1650  000FC0  6A03               	clrf	(___xxtofl@val+2)^0,c
  1651  000FC2  6A04               	clrf	(___xxtofl@val+3)^0,c
  1652  000FC4  0E00               	movlw	0
  1653  000FC6  ECDF  F019         	call	___xxtofl
  1654  000FCA  C001  F00F         	movff	?___xxtofl,___fldiv@b
  1655  000FCE  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  1656  000FD2  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  1657  000FD6  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  1658  000FDA  ECDA  F013         	call	___fldiv	;wreg free
  1659  000FDE  C00F  F028         	movff	?___fldiv,___flmul@b
  1660  000FE2  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  1661  000FE6  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  1662  000FEA  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  1663  000FEE  0E00               	movlw	0
  1664  000FF0  6E2C               	movwf	___flmul@a^0,c
  1665  000FF2  0E00               	movlw	0
  1666  000FF4  6E2D               	movwf	(___flmul@a+1)^0,c
  1667  000FF6  0EC8               	movlw	200
  1668  000FF8  6E2E               	movwf	(___flmul@a+2)^0,c
  1669  000FFA  0E42               	movlw	66
  1670  000FFC  6E2F               	movwf	(___flmul@a+3)^0,c
  1671  000FFE  ECEE  F00F         	call	___flmul	;wreg free
  1672  001002  C028  F08D         	movff	?___flmul,_detect_color$2775
  1673  001006  C029  F08E         	movff	?___flmul+1,_detect_color$2775+1
  1674  00100A  C02A  F08F         	movff	?___flmul+2,_detect_color$2775+2
  1675  00100E  C02B  F090         	movff	?___flmul+3,_detect_color$2775+3
  1676  001012  C08D  F066         	movff	_detect_color$2775,lroundf@x
  1677  001016  C08E  F067         	movff	_detect_color$2775+1,lroundf@x+1
  1678  00101A  C08F  F068         	movff	_detect_color$2775+2,lroundf@x+2
  1679  00101E  C090  F069         	movff	_detect_color$2775+3,lroundf@x+3
  1680  001022  EC32  F026         	call	_lroundf	;wreg free
  1681  001026  C066  F07E         	movff	?_lroundf,detect_color@RG
  1682  00102A  C067  F07F         	movff	?_lroundf+1,detect_color@RG+1
  1683  00102E  0100               	movlb	0	; () banked
  1684  001030  EE20 F004          	lfsr	2,4
  1685  001034  5172               	movf	detect_color@w& (0+255),w,b
  1686  001036  26D9               	addwf	fsr2l,f,c
  1687  001038  5173               	movf	(detect_color@w+1)& (0+255),w,b
  1688  00103A  22DA               	addwfc	fsr2h,f,c
  1689  00103C  CFDE F074          	movff	postinc2,??_detect_color
  1690  001040  CFDD F075          	movff	postdec2,??_detect_color+1
  1691  001044  C074  F001         	movff	??_detect_color,___xxtofl@val
  1692  001048  C075  F002         	movff	??_detect_color+1,___xxtofl@val+1
  1693  00104C  6A03               	clrf	(___xxtofl@val+2)^0,c
  1694  00104E  6A04               	clrf	(___xxtofl@val+3)^0,c
  1695  001050  0E00               	movlw	0
  1696  001052  ECDF  F019         	call	___xxtofl
  1697  001056  C001  F013         	movff	?___xxtofl,___fldiv@a
  1698  00105A  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  1699  00105E  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  1700  001062  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  1701  001066  0100               	movlb	0	; () banked
  1702  001068  EE20 F004          	lfsr	2,4
  1703  00106C  5170               	movf	detect_color@m& (0+255),w,b
  1704  00106E  26D9               	addwf	fsr2l,f,c
  1705  001070  5171               	movf	(detect_color@m+1)& (0+255),w,b
  1706  001072  22DA               	addwfc	fsr2h,f,c
  1707  001074  CFDE F076          	movff	postinc2,??_detect_color+2
  1708  001078  CFDD F077          	movff	postdec2,??_detect_color+3
  1709  00107C  C076  F001         	movff	??_detect_color+2,___xxtofl@val
  1710  001080  C077  F002         	movff	??_detect_color+3,___xxtofl@val+1
  1711  001084  6A03               	clrf	(___xxtofl@val+2)^0,c
  1712  001086  6A04               	clrf	(___xxtofl@val+3)^0,c
  1713  001088  0E00               	movlw	0
  1714  00108A  ECDF  F019         	call	___xxtofl
  1715  00108E  C001  F00F         	movff	?___xxtofl,___fldiv@b
  1716  001092  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  1717  001096  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  1718  00109A  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  1719  00109E  ECDA  F013         	call	___fldiv	;wreg free
  1720  0010A2  C00F  F028         	movff	?___fldiv,___flmul@b
  1721  0010A6  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  1722  0010AA  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  1723  0010AE  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  1724  0010B2  0E00               	movlw	0
  1725  0010B4  6E2C               	movwf	___flmul@a^0,c
  1726  0010B6  0E00               	movlw	0
  1727  0010B8  6E2D               	movwf	(___flmul@a+1)^0,c
  1728  0010BA  0EC8               	movlw	200
  1729  0010BC  6E2E               	movwf	(___flmul@a+2)^0,c
  1730  0010BE  0E42               	movlw	66
  1731  0010C0  6E2F               	movwf	(___flmul@a+3)^0,c
  1732  0010C2  ECEE  F00F         	call	___flmul	;wreg free
  1733  0010C6  C028  F08D         	movff	?___flmul,_detect_color$2775
  1734  0010CA  C029  F08E         	movff	?___flmul+1,_detect_color$2775+1
  1735  0010CE  C02A  F08F         	movff	?___flmul+2,_detect_color$2775+2
  1736  0010D2  C02B  F090         	movff	?___flmul+3,_detect_color$2775+3
  1737  0010D6  C08D  F066         	movff	_detect_color$2775,lroundf@x
  1738  0010DA  C08E  F067         	movff	_detect_color$2775+1,lroundf@x+1
  1739  0010DE  C08F  F068         	movff	_detect_color$2775+2,lroundf@x+2
  1740  0010E2  C090  F069         	movff	_detect_color$2775+3,lroundf@x+3
  1741  0010E6  EC32  F026         	call	_lroundf	;wreg free
  1742  0010EA                     
  1743                           ;color.c: 238:     _delay((unsigned long)((50)*(64000000/4000.0)));
  1744  0010EA  0E05               	movlw	5
  1745  0010EC  0100               	movlb	0	; () banked
  1746  0010EE  6F75               	movwf	(??_detect_color+1)& (0+255),b
  1747  0010F0  0E0F               	movlw	15
  1748  0010F2  6F74               	movwf	??_detect_color& (0+255),b
  1749  0010F4  0EF1               	movlw	241
  1750  0010F6                     u5117:
  1751  0010F6  2EE8               	decfsz	wreg,f,c
  1752  0010F8  D7FE               	bra	u5117
  1753  0010FA  2F74               	decfsz	??_detect_color& (0+255),f,b
  1754  0010FC  D7FC               	bra	u5117
  1755  0010FE  2F75               	decfsz	(??_detect_color+1)& (0+255),f,b
  1756  001100  D7FA               	bra	u5117
  1757  001102                     
  1758                           ;color.c: 240:     LED_G();
  1759  001102  EC41  F027         	call	_LED_G	;wreg free
  1760  001106                     
  1761                           ;color.c: 241:     read_color(m);
  1762  001106  C070  F00C         	movff	detect_color@m,read_color@m
  1763  00110A  C071  F00D         	movff	detect_color@m+1,read_color@m+1
  1764  00110E  ECE1  F023         	call	_read_color	;wreg free
  1765  001112                     
  1766                           ;color.c: 244:     GR = lroundf((float)(m->R)/(w->GR)*100); GG = lroundf((float)(m->G)/(
      +                          w->GG)*100); GB = lroundf((float)(m->B)/(w->GB)*100);
  1767  001112  0100               	movlb	0	; () banked
  1768  001114  EE20 F006          	lfsr	2,6
  1769  001118  5172               	movf	detect_color@w& (0+255),w,b
  1770  00111A  26D9               	addwf	fsr2l,f,c
  1771  00111C  5173               	movf	(detect_color@w+1)& (0+255),w,b
  1772  00111E  22DA               	addwfc	fsr2h,f,c
  1773  001120  CFDE F074          	movff	postinc2,??_detect_color
  1774  001124  CFDD F075          	movff	postdec2,??_detect_color+1
  1775  001128  C074  F001         	movff	??_detect_color,___xxtofl@val
  1776  00112C  C075  F002         	movff	??_detect_color+1,___xxtofl@val+1
  1777  001130  6A03               	clrf	(___xxtofl@val+2)^0,c
  1778  001132  6A04               	clrf	(___xxtofl@val+3)^0,c
  1779  001134  0E00               	movlw	0
  1780  001136  ECDF  F019         	call	___xxtofl
  1781  00113A  C001  F013         	movff	?___xxtofl,___fldiv@a
  1782  00113E  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  1783  001142  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  1784  001146  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  1785  00114A  C070  FFD9         	movff	detect_color@m,fsr2l
  1786  00114E  C071  FFDA         	movff	detect_color@m+1,fsr2h
  1787  001152  CFDE F076          	movff	postinc2,??_detect_color+2
  1788  001156  CFDD F077          	movff	postdec2,??_detect_color+3
  1789  00115A  C076  F001         	movff	??_detect_color+2,___xxtofl@val
  1790  00115E  C077  F002         	movff	??_detect_color+3,___xxtofl@val+1
  1791  001162  6A03               	clrf	(___xxtofl@val+2)^0,c
  1792  001164  6A04               	clrf	(___xxtofl@val+3)^0,c
  1793  001166  0E00               	movlw	0
  1794  001168  ECDF  F019         	call	___xxtofl
  1795  00116C  C001  F00F         	movff	?___xxtofl,___fldiv@b
  1796  001170  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  1797  001174  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  1798  001178  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  1799  00117C  ECDA  F013         	call	___fldiv	;wreg free
  1800  001180  C00F  F028         	movff	?___fldiv,___flmul@b
  1801  001184  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  1802  001188  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  1803  00118C  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  1804  001190  0E00               	movlw	0
  1805  001192  6E2C               	movwf	___flmul@a^0,c
  1806  001194  0E00               	movlw	0
  1807  001196  6E2D               	movwf	(___flmul@a+1)^0,c
  1808  001198  0EC8               	movlw	200
  1809  00119A  6E2E               	movwf	(___flmul@a+2)^0,c
  1810  00119C  0E42               	movlw	66
  1811  00119E  6E2F               	movwf	(___flmul@a+3)^0,c
  1812  0011A0  ECEE  F00F         	call	___flmul	;wreg free
  1813  0011A4  C028  F08D         	movff	?___flmul,_detect_color$2775
  1814  0011A8  C029  F08E         	movff	?___flmul+1,_detect_color$2775+1
  1815  0011AC  C02A  F08F         	movff	?___flmul+2,_detect_color$2775+2
  1816  0011B0  C02B  F090         	movff	?___flmul+3,_detect_color$2775+3
  1817  0011B4                     
  1818                           ;color.c: 244:     GR = lroundf((float)(m->R)/(w->GR)*100); GG = lroundf((float)(m->G)/(
      +                          w->GG)*100); GB = lroundf((float)(m->B)/(w->GB)*100);
  1819  0011B4  C08D  F066         	movff	_detect_color$2775,lroundf@x
  1820  0011B8  C08E  F067         	movff	_detect_color$2775+1,lroundf@x+1
  1821  0011BC  C08F  F068         	movff	_detect_color$2775+2,lroundf@x+2
  1822  0011C0  C090  F069         	movff	_detect_color$2775+3,lroundf@x+3
  1823  0011C4  EC32  F026         	call	_lroundf	;wreg free
  1824  0011C8  C066  F088         	movff	?_lroundf,detect_color@GR
  1825  0011CC  C067  F089         	movff	?_lroundf+1,detect_color@GR+1
  1826  0011D0  0100               	movlb	0	; () banked
  1827  0011D2  EE20 F008          	lfsr	2,8
  1828  0011D6  5172               	movf	detect_color@w& (0+255),w,b
  1829  0011D8  26D9               	addwf	fsr2l,f,c
  1830  0011DA  5173               	movf	(detect_color@w+1)& (0+255),w,b
  1831  0011DC  22DA               	addwfc	fsr2h,f,c
  1832  0011DE  CFDE F074          	movff	postinc2,??_detect_color
  1833  0011E2  CFDD F075          	movff	postdec2,??_detect_color+1
  1834  0011E6  C074  F001         	movff	??_detect_color,___xxtofl@val
  1835  0011EA  C075  F002         	movff	??_detect_color+1,___xxtofl@val+1
  1836  0011EE  6A03               	clrf	(___xxtofl@val+2)^0,c
  1837  0011F0  6A04               	clrf	(___xxtofl@val+3)^0,c
  1838  0011F2  0E00               	movlw	0
  1839  0011F4  ECDF  F019         	call	___xxtofl
  1840  0011F8  C001  F013         	movff	?___xxtofl,___fldiv@a
  1841  0011FC  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  1842  001200  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  1843  001204  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  1844  001208  0100               	movlb	0	; () banked
  1845  00120A  EE20 F002          	lfsr	2,2
  1846  00120E  5170               	movf	detect_color@m& (0+255),w,b
  1847  001210  26D9               	addwf	fsr2l,f,c
  1848  001212  5171               	movf	(detect_color@m+1)& (0+255),w,b
  1849  001214  22DA               	addwfc	fsr2h,f,c
  1850  001216  CFDE F076          	movff	postinc2,??_detect_color+2
  1851  00121A  CFDD F077          	movff	postdec2,??_detect_color+3
  1852  00121E  C076  F001         	movff	??_detect_color+2,___xxtofl@val
  1853  001222  C077  F002         	movff	??_detect_color+3,___xxtofl@val+1
  1854  001226  6A03               	clrf	(___xxtofl@val+2)^0,c
  1855  001228  6A04               	clrf	(___xxtofl@val+3)^0,c
  1856  00122A  0E00               	movlw	0
  1857  00122C  ECDF  F019         	call	___xxtofl
  1858  001230  C001  F00F         	movff	?___xxtofl,___fldiv@b
  1859  001234  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  1860  001238  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  1861  00123C  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  1862  001240  ECDA  F013         	call	___fldiv	;wreg free
  1863  001244  C00F  F028         	movff	?___fldiv,___flmul@b
  1864  001248  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  1865  00124C  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  1866  001250  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  1867  001254  0E00               	movlw	0
  1868  001256  6E2C               	movwf	___flmul@a^0,c
  1869  001258  0E00               	movlw	0
  1870  00125A  6E2D               	movwf	(___flmul@a+1)^0,c
  1871  00125C  0EC8               	movlw	200
  1872  00125E  6E2E               	movwf	(___flmul@a+2)^0,c
  1873  001260  0E42               	movlw	66
  1874  001262  6E2F               	movwf	(___flmul@a+3)^0,c
  1875  001264  ECEE  F00F         	call	___flmul	;wreg free
  1876  001268  C028  F08D         	movff	?___flmul,_detect_color$2775
  1877  00126C  C029  F08E         	movff	?___flmul+1,_detect_color$2775+1
  1878  001270  C02A  F08F         	movff	?___flmul+2,_detect_color$2775+2
  1879  001274  C02B  F090         	movff	?___flmul+3,_detect_color$2775+3
  1880  001278  C08D  F066         	movff	_detect_color$2775,lroundf@x
  1881  00127C  C08E  F067         	movff	_detect_color$2775+1,lroundf@x+1
  1882  001280  C08F  F068         	movff	_detect_color$2775+2,lroundf@x+2
  1883  001284  C090  F069         	movff	_detect_color$2775+3,lroundf@x+3
  1884  001288  EC32  F026         	call	_lroundf	;wreg free
  1885  00128C  C066  F080         	movff	?_lroundf,detect_color@GG
  1886  001290  C067  F081         	movff	?_lroundf+1,detect_color@GG+1
  1887  001294  0100               	movlb	0	; () banked
  1888  001296  EE20 F00A          	lfsr	2,10
  1889  00129A  5172               	movf	detect_color@w& (0+255),w,b
  1890  00129C  26D9               	addwf	fsr2l,f,c
  1891  00129E  5173               	movf	(detect_color@w+1)& (0+255),w,b
  1892  0012A0  22DA               	addwfc	fsr2h,f,c
  1893  0012A2  CFDE F074          	movff	postinc2,??_detect_color
  1894  0012A6  CFDD F075          	movff	postdec2,??_detect_color+1
  1895  0012AA  C074  F001         	movff	??_detect_color,___xxtofl@val
  1896  0012AE  C075  F002         	movff	??_detect_color+1,___xxtofl@val+1
  1897  0012B2  6A03               	clrf	(___xxtofl@val+2)^0,c
  1898  0012B4  6A04               	clrf	(___xxtofl@val+3)^0,c
  1899  0012B6  0E00               	movlw	0
  1900  0012B8  ECDF  F019         	call	___xxtofl
  1901  0012BC  C001  F013         	movff	?___xxtofl,___fldiv@a
  1902  0012C0  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  1903  0012C4  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  1904  0012C8  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  1905  0012CC  0100               	movlb	0	; () banked
  1906  0012CE  EE20 F004          	lfsr	2,4
  1907  0012D2  5170               	movf	detect_color@m& (0+255),w,b
  1908  0012D4  26D9               	addwf	fsr2l,f,c
  1909  0012D6  5171               	movf	(detect_color@m+1)& (0+255),w,b
  1910  0012D8  22DA               	addwfc	fsr2h,f,c
  1911  0012DA  CFDE F076          	movff	postinc2,??_detect_color+2
  1912  0012DE  CFDD F077          	movff	postdec2,??_detect_color+3
  1913  0012E2  C076  F001         	movff	??_detect_color+2,___xxtofl@val
  1914  0012E6  C077  F002         	movff	??_detect_color+3,___xxtofl@val+1
  1915  0012EA  6A03               	clrf	(___xxtofl@val+2)^0,c
  1916  0012EC  6A04               	clrf	(___xxtofl@val+3)^0,c
  1917  0012EE  0E00               	movlw	0
  1918  0012F0  ECDF  F019         	call	___xxtofl
  1919  0012F4  C001  F00F         	movff	?___xxtofl,___fldiv@b
  1920  0012F8  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  1921  0012FC  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  1922  001300  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  1923  001304  ECDA  F013         	call	___fldiv	;wreg free
  1924  001308  C00F  F028         	movff	?___fldiv,___flmul@b
  1925  00130C  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  1926  001310  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  1927  001314  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  1928  001318  0E00               	movlw	0
  1929  00131A  6E2C               	movwf	___flmul@a^0,c
  1930  00131C  0E00               	movlw	0
  1931  00131E  6E2D               	movwf	(___flmul@a+1)^0,c
  1932  001320  0EC8               	movlw	200
  1933  001322  6E2E               	movwf	(___flmul@a+2)^0,c
  1934  001324  0E42               	movlw	66
  1935  001326  6E2F               	movwf	(___flmul@a+3)^0,c
  1936  001328  ECEE  F00F         	call	___flmul	;wreg free
  1937  00132C  C028  F08D         	movff	?___flmul,_detect_color$2775
  1938  001330  C029  F08E         	movff	?___flmul+1,_detect_color$2775+1
  1939  001334  C02A  F08F         	movff	?___flmul+2,_detect_color$2775+2
  1940  001338  C02B  F090         	movff	?___flmul+3,_detect_color$2775+3
  1941  00133C  C08D  F066         	movff	_detect_color$2775,lroundf@x
  1942  001340  C08E  F067         	movff	_detect_color$2775+1,lroundf@x+1
  1943  001344  C08F  F068         	movff	_detect_color$2775+2,lroundf@x+2
  1944  001348  C090  F069         	movff	_detect_color$2775+3,lroundf@x+3
  1945  00134C  EC32  F026         	call	_lroundf	;wreg free
  1946  001350                     
  1947                           ;color.c: 245:     GC = lroundf((float)(m->R)/(w->GR)*100);
  1948  001350  0100               	movlb	0	; () banked
  1949  001352  EE20 F006          	lfsr	2,6
  1950  001356  5172               	movf	detect_color@w& (0+255),w,b
  1951  001358  26D9               	addwf	fsr2l,f,c
  1952  00135A  5173               	movf	(detect_color@w+1)& (0+255),w,b
  1953  00135C  22DA               	addwfc	fsr2h,f,c
  1954  00135E  CFDE F074          	movff	postinc2,??_detect_color
  1955  001362  CFDD F075          	movff	postdec2,??_detect_color+1
  1956  001366  C074  F001         	movff	??_detect_color,___xxtofl@val
  1957  00136A  C075  F002         	movff	??_detect_color+1,___xxtofl@val+1
  1958  00136E  6A03               	clrf	(___xxtofl@val+2)^0,c
  1959  001370  6A04               	clrf	(___xxtofl@val+3)^0,c
  1960  001372  0E00               	movlw	0
  1961  001374  ECDF  F019         	call	___xxtofl
  1962  001378  C001  F013         	movff	?___xxtofl,___fldiv@a
  1963  00137C  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  1964  001380  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  1965  001384  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  1966  001388  C070  FFD9         	movff	detect_color@m,fsr2l
  1967  00138C  C071  FFDA         	movff	detect_color@m+1,fsr2h
  1968  001390  CFDE F076          	movff	postinc2,??_detect_color+2
  1969  001394  CFDD F077          	movff	postdec2,??_detect_color+3
  1970  001398  C076  F001         	movff	??_detect_color+2,___xxtofl@val
  1971  00139C  C077  F002         	movff	??_detect_color+3,___xxtofl@val+1
  1972  0013A0  6A03               	clrf	(___xxtofl@val+2)^0,c
  1973  0013A2  6A04               	clrf	(___xxtofl@val+3)^0,c
  1974  0013A4  0E00               	movlw	0
  1975  0013A6  ECDF  F019         	call	___xxtofl
  1976  0013AA  C001  F00F         	movff	?___xxtofl,___fldiv@b
  1977  0013AE  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  1978  0013B2  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  1979  0013B6  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  1980  0013BA  ECDA  F013         	call	___fldiv	;wreg free
  1981  0013BE  C00F  F028         	movff	?___fldiv,___flmul@b
  1982  0013C2  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  1983  0013C6  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  1984  0013CA  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  1985  0013CE  0E00               	movlw	0
  1986  0013D0  6E2C               	movwf	___flmul@a^0,c
  1987  0013D2  0E00               	movlw	0
  1988  0013D4  6E2D               	movwf	(___flmul@a+1)^0,c
  1989  0013D6  0EC8               	movlw	200
  1990  0013D8  6E2E               	movwf	(___flmul@a+2)^0,c
  1991  0013DA  0E42               	movlw	66
  1992  0013DC  6E2F               	movwf	(___flmul@a+3)^0,c
  1993  0013DE  ECEE  F00F         	call	___flmul	;wreg free
  1994  0013E2  C028  F08D         	movff	?___flmul,_detect_color$2775
  1995  0013E6  C029  F08E         	movff	?___flmul+1,_detect_color$2775+1
  1996  0013EA  C02A  F08F         	movff	?___flmul+2,_detect_color$2775+2
  1997  0013EE  C02B  F090         	movff	?___flmul+3,_detect_color$2775+3
  1998  0013F2  C08D  F066         	movff	_detect_color$2775,lroundf@x
  1999  0013F6  C08E  F067         	movff	_detect_color$2775+1,lroundf@x+1
  2000  0013FA  C08F  F068         	movff	_detect_color$2775+2,lroundf@x+2
  2001  0013FE  C090  F069         	movff	_detect_color$2775+3,lroundf@x+3
  2002  001402  EC32  F026         	call	_lroundf	;wreg free
  2003  001406                     
  2004                           ;color.c: 247:     _delay((unsigned long)((50)*(64000000/4000.0)));
  2005  001406  0E05               	movlw	5
  2006  001408  0100               	movlb	0	; () banked
  2007  00140A  6F75               	movwf	(??_detect_color+1)& (0+255),b
  2008  00140C  0E0F               	movlw	15
  2009  00140E  6F74               	movwf	??_detect_color& (0+255),b
  2010  001410  0EF1               	movlw	241
  2011  001412                     u5127:
  2012  001412  2EE8               	decfsz	wreg,f,c
  2013  001414  D7FE               	bra	u5127
  2014  001416  2F74               	decfsz	??_detect_color& (0+255),f,b
  2015  001418  D7FC               	bra	u5127
  2016  00141A  2F75               	decfsz	(??_detect_color+1)& (0+255),f,b
  2017  00141C  D7FA               	bra	u5127
  2018  00141E                     
  2019                           ;color.c: 249:     LED_B();
  2020  00141E  EC51  F027         	call	_LED_B	;wreg free
  2021  001422                     
  2022                           ;color.c: 250:     read_color(m);
  2023  001422  C070  F00C         	movff	detect_color@m,read_color@m
  2024  001426  C071  F00D         	movff	detect_color@m+1,read_color@m+1
  2025  00142A  ECE1  F023         	call	_read_color	;wreg free
  2026  00142E                     
  2027                           ;color.c: 251:     BR = lroundf((float)(m->R)/(w->BR)*100); BG = lroundf((float)(m->G)/(
      +                          w->BG)*100); BB = lroundf((float)(m->B)/(w->BB)*100);
  2028  00142E  0100               	movlb	0	; () banked
  2029  001430  EE20 F00C          	lfsr	2,12
  2030  001434  5172               	movf	detect_color@w& (0+255),w,b
  2031  001436  26D9               	addwf	fsr2l,f,c
  2032  001438  5173               	movf	(detect_color@w+1)& (0+255),w,b
  2033  00143A  22DA               	addwfc	fsr2h,f,c
  2034  00143C  CFDE F074          	movff	postinc2,??_detect_color
  2035  001440  CFDD F075          	movff	postdec2,??_detect_color+1
  2036  001444  C074  F001         	movff	??_detect_color,___xxtofl@val
  2037  001448  C075  F002         	movff	??_detect_color+1,___xxtofl@val+1
  2038  00144C  6A03               	clrf	(___xxtofl@val+2)^0,c
  2039  00144E  6A04               	clrf	(___xxtofl@val+3)^0,c
  2040  001450  0E00               	movlw	0
  2041  001452  ECDF  F019         	call	___xxtofl
  2042  001456  C001  F013         	movff	?___xxtofl,___fldiv@a
  2043  00145A  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  2044  00145E  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  2045  001462  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  2046  001466  C070  FFD9         	movff	detect_color@m,fsr2l
  2047  00146A  C071  FFDA         	movff	detect_color@m+1,fsr2h
  2048  00146E  CFDE F076          	movff	postinc2,??_detect_color+2
  2049  001472  CFDD F077          	movff	postdec2,??_detect_color+3
  2050  001476  C076  F001         	movff	??_detect_color+2,___xxtofl@val
  2051  00147A  C077  F002         	movff	??_detect_color+3,___xxtofl@val+1
  2052  00147E  6A03               	clrf	(___xxtofl@val+2)^0,c
  2053  001480  6A04               	clrf	(___xxtofl@val+3)^0,c
  2054  001482  0E00               	movlw	0
  2055  001484  ECDF  F019         	call	___xxtofl
  2056  001488  C001  F00F         	movff	?___xxtofl,___fldiv@b
  2057  00148C  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  2058  001490  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  2059  001494  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  2060  001498  ECDA  F013         	call	___fldiv	;wreg free
  2061  00149C  C00F  F028         	movff	?___fldiv,___flmul@b
  2062  0014A0  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  2063  0014A4  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  2064  0014A8  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  2065  0014AC  0E00               	movlw	0
  2066  0014AE  6E2C               	movwf	___flmul@a^0,c
  2067  0014B0  0E00               	movlw	0
  2068  0014B2  6E2D               	movwf	(___flmul@a+1)^0,c
  2069  0014B4  0EC8               	movlw	200
  2070  0014B6  6E2E               	movwf	(___flmul@a+2)^0,c
  2071  0014B8  0E42               	movlw	66
  2072  0014BA  6E2F               	movwf	(___flmul@a+3)^0,c
  2073  0014BC  ECEE  F00F         	call	___flmul	;wreg free
  2074  0014C0  C028  F08D         	movff	?___flmul,_detect_color$2775
  2075  0014C4  C029  F08E         	movff	?___flmul+1,_detect_color$2775+1
  2076  0014C8  C02A  F08F         	movff	?___flmul+2,_detect_color$2775+2
  2077  0014CC  C02B  F090         	movff	?___flmul+3,_detect_color$2775+3
  2078  0014D0                     
  2079                           ;color.c: 251:     BR = lroundf((float)(m->R)/(w->BR)*100); BG = lroundf((float)(m->G)/(
      +                          w->BG)*100); BB = lroundf((float)(m->B)/(w->BB)*100);
  2080  0014D0  C08D  F066         	movff	_detect_color$2775,lroundf@x
  2081  0014D4  C08E  F067         	movff	_detect_color$2775+1,lroundf@x+1
  2082  0014D8  C08F  F068         	movff	_detect_color$2775+2,lroundf@x+2
  2083  0014DC  C090  F069         	movff	_detect_color$2775+3,lroundf@x+3
  2084  0014E0  EC32  F026         	call	_lroundf	;wreg free
  2085  0014E4  C066  F086         	movff	?_lroundf,detect_color@BR
  2086  0014E8  C067  F087         	movff	?_lroundf+1,detect_color@BR+1
  2087  0014EC  0100               	movlb	0	; () banked
  2088  0014EE  EE20 F00E          	lfsr	2,14
  2089  0014F2  5172               	movf	detect_color@w& (0+255),w,b
  2090  0014F4  26D9               	addwf	fsr2l,f,c
  2091  0014F6  5173               	movf	(detect_color@w+1)& (0+255),w,b
  2092  0014F8  22DA               	addwfc	fsr2h,f,c
  2093  0014FA  CFDE F074          	movff	postinc2,??_detect_color
  2094  0014FE  CFDD F075          	movff	postdec2,??_detect_color+1
  2095  001502  C074  F001         	movff	??_detect_color,___xxtofl@val
  2096  001506  C075  F002         	movff	??_detect_color+1,___xxtofl@val+1
  2097  00150A  6A03               	clrf	(___xxtofl@val+2)^0,c
  2098  00150C  6A04               	clrf	(___xxtofl@val+3)^0,c
  2099  00150E  0E00               	movlw	0
  2100  001510  ECDF  F019         	call	___xxtofl
  2101  001514  C001  F013         	movff	?___xxtofl,___fldiv@a
  2102  001518  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  2103  00151C  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  2104  001520  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  2105  001524  0100               	movlb	0	; () banked
  2106  001526  EE20 F002          	lfsr	2,2
  2107  00152A  5170               	movf	detect_color@m& (0+255),w,b
  2108  00152C  26D9               	addwf	fsr2l,f,c
  2109  00152E  5171               	movf	(detect_color@m+1)& (0+255),w,b
  2110  001530  22DA               	addwfc	fsr2h,f,c
  2111  001532  CFDE F076          	movff	postinc2,??_detect_color+2
  2112  001536  CFDD F077          	movff	postdec2,??_detect_color+3
  2113  00153A  C076  F001         	movff	??_detect_color+2,___xxtofl@val
  2114  00153E  C077  F002         	movff	??_detect_color+3,___xxtofl@val+1
  2115  001542  6A03               	clrf	(___xxtofl@val+2)^0,c
  2116  001544  6A04               	clrf	(___xxtofl@val+3)^0,c
  2117  001546  0E00               	movlw	0
  2118  001548  ECDF  F019         	call	___xxtofl
  2119  00154C  C001  F00F         	movff	?___xxtofl,___fldiv@b
  2120  001550  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  2121  001554  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  2122  001558  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  2123  00155C  ECDA  F013         	call	___fldiv	;wreg free
  2124  001560  C00F  F028         	movff	?___fldiv,___flmul@b
  2125  001564  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  2126  001568  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  2127  00156C  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  2128  001570  0E00               	movlw	0
  2129  001572  6E2C               	movwf	___flmul@a^0,c
  2130  001574  0E00               	movlw	0
  2131  001576  6E2D               	movwf	(___flmul@a+1)^0,c
  2132  001578  0EC8               	movlw	200
  2133  00157A  6E2E               	movwf	(___flmul@a+2)^0,c
  2134  00157C  0E42               	movlw	66
  2135  00157E  6E2F               	movwf	(___flmul@a+3)^0,c
  2136  001580  ECEE  F00F         	call	___flmul	;wreg free
  2137  001584  C028  F08D         	movff	?___flmul,_detect_color$2775
  2138  001588  C029  F08E         	movff	?___flmul+1,_detect_color$2775+1
  2139  00158C  C02A  F08F         	movff	?___flmul+2,_detect_color$2775+2
  2140  001590  C02B  F090         	movff	?___flmul+3,_detect_color$2775+3
  2141  001594  C08D  F066         	movff	_detect_color$2775,lroundf@x
  2142  001598  C08E  F067         	movff	_detect_color$2775+1,lroundf@x+1
  2143  00159C  C08F  F068         	movff	_detect_color$2775+2,lroundf@x+2
  2144  0015A0  C090  F069         	movff	_detect_color$2775+3,lroundf@x+3
  2145  0015A4  EC32  F026         	call	_lroundf	;wreg free
  2146  0015A8  C066  F08A         	movff	?_lroundf,detect_color@BG
  2147  0015AC  C067  F08B         	movff	?_lroundf+1,detect_color@BG+1
  2148  0015B0  0100               	movlb	0	; () banked
  2149  0015B2  EE20 F010          	lfsr	2,16
  2150  0015B6  5172               	movf	detect_color@w& (0+255),w,b
  2151  0015B8  26D9               	addwf	fsr2l,f,c
  2152  0015BA  5173               	movf	(detect_color@w+1)& (0+255),w,b
  2153  0015BC  22DA               	addwfc	fsr2h,f,c
  2154  0015BE  CFDE F074          	movff	postinc2,??_detect_color
  2155  0015C2  CFDD F075          	movff	postdec2,??_detect_color+1
  2156  0015C6  C074  F001         	movff	??_detect_color,___xxtofl@val
  2157  0015CA  C075  F002         	movff	??_detect_color+1,___xxtofl@val+1
  2158  0015CE  6A03               	clrf	(___xxtofl@val+2)^0,c
  2159  0015D0  6A04               	clrf	(___xxtofl@val+3)^0,c
  2160  0015D2  0E00               	movlw	0
  2161  0015D4  ECDF  F019         	call	___xxtofl
  2162  0015D8  C001  F013         	movff	?___xxtofl,___fldiv@a
  2163  0015DC  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  2164  0015E0  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  2165  0015E4  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  2166  0015E8  0100               	movlb	0	; () banked
  2167  0015EA  EE20 F004          	lfsr	2,4
  2168  0015EE  5170               	movf	detect_color@m& (0+255),w,b
  2169  0015F0  26D9               	addwf	fsr2l,f,c
  2170  0015F2  5171               	movf	(detect_color@m+1)& (0+255),w,b
  2171  0015F4  22DA               	addwfc	fsr2h,f,c
  2172  0015F6  CFDE F076          	movff	postinc2,??_detect_color+2
  2173  0015FA  CFDD F077          	movff	postdec2,??_detect_color+3
  2174  0015FE  C076  F001         	movff	??_detect_color+2,___xxtofl@val
  2175  001602  C077  F002         	movff	??_detect_color+3,___xxtofl@val+1
  2176  001606  6A03               	clrf	(___xxtofl@val+2)^0,c
  2177  001608  6A04               	clrf	(___xxtofl@val+3)^0,c
  2178  00160A  0E00               	movlw	0
  2179  00160C  ECDF  F019         	call	___xxtofl
  2180  001610  C001  F00F         	movff	?___xxtofl,___fldiv@b
  2181  001614  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  2182  001618  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  2183  00161C  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  2184  001620  ECDA  F013         	call	___fldiv	;wreg free
  2185  001624  C00F  F028         	movff	?___fldiv,___flmul@b
  2186  001628  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  2187  00162C  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  2188  001630  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  2189  001634  0E00               	movlw	0
  2190  001636  6E2C               	movwf	___flmul@a^0,c
  2191  001638  0E00               	movlw	0
  2192  00163A  6E2D               	movwf	(___flmul@a+1)^0,c
  2193  00163C  0EC8               	movlw	200
  2194  00163E  6E2E               	movwf	(___flmul@a+2)^0,c
  2195  001640  0E42               	movlw	66
  2196  001642  6E2F               	movwf	(___flmul@a+3)^0,c
  2197  001644  ECEE  F00F         	call	___flmul	;wreg free
  2198  001648  C028  F08D         	movff	?___flmul,_detect_color$2775
  2199  00164C  C029  F08E         	movff	?___flmul+1,_detect_color$2775+1
  2200  001650  C02A  F08F         	movff	?___flmul+2,_detect_color$2775+2
  2201  001654  C02B  F090         	movff	?___flmul+3,_detect_color$2775+3
  2202  001658  C08D  F066         	movff	_detect_color$2775,lroundf@x
  2203  00165C  C08E  F067         	movff	_detect_color$2775+1,lroundf@x+1
  2204  001660  C08F  F068         	movff	_detect_color$2775+2,lroundf@x+2
  2205  001664  C090  F069         	movff	_detect_color$2775+3,lroundf@x+3
  2206  001668  EC32  F026         	call	_lroundf	;wreg free
  2207  00166C  C066  F084         	movff	?_lroundf,detect_color@BB
  2208  001670  C067  F085         	movff	?_lroundf+1,detect_color@BB+1
  2209  001674                     
  2210                           ;color.c: 252:     _delay((unsigned long)((50)*(64000000/4000.0)));
  2211  001674  0E05               	movlw	5
  2212  001676  0100               	movlb	0	; () banked
  2213  001678  6F75               	movwf	(??_detect_color+1)& (0+255),b
  2214  00167A  0E0F               	movlw	15
  2215  00167C  6F74               	movwf	??_detect_color& (0+255),b
  2216  00167E  0EF1               	movlw	241
  2217  001680                     u5137:
  2218  001680  2EE8               	decfsz	wreg,f,c
  2219  001682  D7FE               	bra	u5137
  2220  001684  2F74               	decfsz	??_detect_color& (0+255),f,b
  2221  001686  D7FC               	bra	u5137
  2222  001688  2F75               	decfsz	(??_detect_color+1)& (0+255),f,b
  2223  00168A  D7FA               	bra	u5137
  2224  00168C                     
  2225                           ;color.c: 255:     if (compare(0, BR, 70)){
  2226  00168C  0E00               	movlw	0
  2227  00168E  0100               	movlb	0	; () banked
  2228  001690  6F6B               	movwf	(compare@lower+1)& (0+255),b
  2229  001692  0E00               	movlw	0
  2230  001694  6F6A               	movwf	compare@lower& (0+255),b
  2231  001696  C086  F06C         	movff	detect_color@BR,compare@value2compare
  2232  00169A  C087  F06D         	movff	detect_color@BR+1,compare@value2compare+1
  2233  00169E  0E00               	movlw	0
  2234  0016A0  6F6F               	movwf	(compare@upper+1)& (0+255),b
  2235  0016A2  0E46               	movlw	70
  2236  0016A4  6F6E               	movwf	compare@upper& (0+255),b
  2237  0016A6  EC4F  F026         	call	_compare	;wreg free
  2238  0016AA  0900               	iorlw	0
  2239  0016AC  B4D8               	btfsc	status,2,c
  2240  0016AE  EF5B  F00B         	goto	u4511
  2241  0016B2  EF5D  F00B         	goto	u4510
  2242  0016B6                     u4511:
  2243  0016B6  EFCE  F00B         	goto	l4500
  2244  0016BA                     u4510:
  2245  0016BA                     
  2246                           ;color.c: 257:          if (compare(0, lroundf((float)(GG + BG)/BB * 200), 414)){color =
      +                           3;}
  2247  0016BA  C084  F001         	movff	detect_color@BB,___xxtofl@val
  2248  0016BE  C085  F002         	movff	detect_color@BB+1,___xxtofl@val+1
  2249  0016C2  6A03               	clrf	(___xxtofl@val+2)^0,c
  2250  0016C4  6A04               	clrf	(___xxtofl@val+3)^0,c
  2251  0016C6  0E00               	movlw	0
  2252  0016C8  ECDF  F019         	call	___xxtofl
  2253  0016CC  C001  F013         	movff	?___xxtofl,___fldiv@a
  2254  0016D0  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  2255  0016D4  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  2256  0016D8  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  2257  0016DC  0100               	movlb	0	; () banked
  2258  0016DE  518A               	movf	detect_color@BG& (0+255),w,b
  2259  0016E0  2580               	addwf	detect_color@GG& (0+255),w,b
  2260  0016E2  6F74               	movwf	??_detect_color& (0+255),b
  2261  0016E4  518B               	movf	(detect_color@BG+1)& (0+255),w,b
  2262  0016E6  2181               	addwfc	(detect_color@GG+1)& (0+255),w,b
  2263  0016E8  6F75               	movwf	(??_detect_color+1)& (0+255),b
  2264  0016EA  C074  F001         	movff	??_detect_color,___xxtofl@val
  2265  0016EE  C075  F002         	movff	??_detect_color+1,___xxtofl@val+1
  2266  0016F2  6A03               	clrf	(___xxtofl@val+2)^0,c
  2267  0016F4  6A04               	clrf	(___xxtofl@val+3)^0,c
  2268  0016F6  0E00               	movlw	0
  2269  0016F8  ECDF  F019         	call	___xxtofl
  2270  0016FC  C001  F00F         	movff	?___xxtofl,___fldiv@b
  2271  001700  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  2272  001704  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  2273  001708  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  2274  00170C  ECDA  F013         	call	___fldiv	;wreg free
  2275  001710  C00F  F028         	movff	?___fldiv,___flmul@b
  2276  001714  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  2277  001718  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  2278  00171C  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  2279  001720  0E00               	movlw	0
  2280  001722  6E2C               	movwf	___flmul@a^0,c
  2281  001724  0E00               	movlw	0
  2282  001726  6E2D               	movwf	(___flmul@a+1)^0,c
  2283  001728  0E48               	movlw	72
  2284  00172A  6E2E               	movwf	(___flmul@a+2)^0,c
  2285  00172C  0E43               	movlw	67
  2286  00172E  6E2F               	movwf	(___flmul@a+3)^0,c
  2287  001730  ECEE  F00F         	call	___flmul	;wreg free
  2288  001734  C028  F08D         	movff	?___flmul,_detect_color$2775
  2289  001738  C029  F08E         	movff	?___flmul+1,_detect_color$2775+1
  2290  00173C  C02A  F08F         	movff	?___flmul+2,_detect_color$2775+2
  2291  001740  C02B  F090         	movff	?___flmul+3,_detect_color$2775+3
  2292                           
  2293                           ;color.c: 257:          if (compare(0, lroundf((float)(GG + BG)/BB * 200), 414)){color =
      +                           3;}
  2294  001744  0E00               	movlw	0
  2295  001746  0100               	movlb	0	; () banked
  2296  001748  6F6B               	movwf	(compare@lower+1)& (0+255),b
  2297  00174A  0E00               	movlw	0
  2298  00174C  6F6A               	movwf	compare@lower& (0+255),b
  2299  00174E  C08D  F066         	movff	_detect_color$2775,lroundf@x
  2300  001752  C08E  F067         	movff	_detect_color$2775+1,lroundf@x+1
  2301  001756  C08F  F068         	movff	_detect_color$2775+2,lroundf@x+2
  2302  00175A  C090  F069         	movff	_detect_color$2775+3,lroundf@x+3
  2303  00175E  EC32  F026         	call	_lroundf	;wreg free
  2304  001762  C066  F06C         	movff	?_lroundf,compare@value2compare
  2305  001766  C067  F06D         	movff	?_lroundf+1,compare@value2compare+1
  2306  00176A  0E01               	movlw	1
  2307  00176C  0100               	movlb	0	; () banked
  2308  00176E  6F6F               	movwf	(compare@upper+1)& (0+255),b
  2309  001770  0E9E               	movlw	158
  2310  001772  6F6E               	movwf	compare@upper& (0+255),b
  2311  001774  EC4F  F026         	call	_compare	;wreg free
  2312  001778  0900               	iorlw	0
  2313  00177A  B4D8               	btfsc	status,2,c
  2314  00177C  EFC2  F00B         	goto	u4521
  2315  001780  EFC4  F00B         	goto	u4520
  2316  001784                     u4521:
  2317  001784  EFC9  F00B         	goto	l4498
  2318  001788                     u4520:
  2319  001788  0E03               	movlw	3
  2320  00178A  0100               	movlb	0	; () banked
  2321  00178C  6F8C               	movwf	detect_color@color& (0+255),b
  2322  00178E  EFAF  F00C         	goto	l4530
  2323  001792                     l4498:
  2324  001792  0E02               	movlw	2
  2325  001794  0100               	movlb	0	; () banked
  2326  001796  6F8C               	movwf	detect_color@color& (0+255),b
  2327  001798  EFAF  F00C         	goto	l4530
  2328  00179C                     l4500:
  2329                           
  2330                           ;color.c: 261:         if (compare(0, BG, 75)){
  2331  00179C  0E00               	movlw	0
  2332  00179E  0100               	movlb	0	; () banked
  2333  0017A0  6F6B               	movwf	(compare@lower+1)& (0+255),b
  2334  0017A2  0E00               	movlw	0
  2335  0017A4  6F6A               	movwf	compare@lower& (0+255),b
  2336  0017A6  C08A  F06C         	movff	detect_color@BG,compare@value2compare
  2337  0017AA  C08B  F06D         	movff	detect_color@BG+1,compare@value2compare+1
  2338  0017AE  0E00               	movlw	0
  2339  0017B0  6F6F               	movwf	(compare@upper+1)& (0+255),b
  2340  0017B2  0E4B               	movlw	75
  2341  0017B4  6F6E               	movwf	compare@upper& (0+255),b
  2342  0017B6  EC4F  F026         	call	_compare	;wreg free
  2343  0017BA  0900               	iorlw	0
  2344  0017BC  B4D8               	btfsc	status,2,c
  2345  0017BE  EFE3  F00B         	goto	u4531
  2346  0017C2  EFE5  F00B         	goto	u4530
  2347  0017C6                     u4531:
  2348  0017C6  EF5F  F00C         	goto	l4512
  2349  0017CA                     u4530:
  2350  0017CA                     
  2351                           ;color.c: 263:             if (compare(0, lroundf((float)RR/RG * 500), 670)){
  2352  0017CA  C07E  F001         	movff	detect_color@RG,___xxtofl@val
  2353  0017CE  C07F  F002         	movff	detect_color@RG+1,___xxtofl@val+1
  2354  0017D2  6A03               	clrf	(___xxtofl@val+2)^0,c
  2355  0017D4  6A04               	clrf	(___xxtofl@val+3)^0,c
  2356  0017D6  0E00               	movlw	0
  2357  0017D8  ECDF  F019         	call	___xxtofl
  2358  0017DC  C001  F013         	movff	?___xxtofl,___fldiv@a
  2359  0017E0  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  2360  0017E4  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  2361  0017E8  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  2362  0017EC  C082  F001         	movff	detect_color@RR,___xxtofl@val
  2363  0017F0  C083  F002         	movff	detect_color@RR+1,___xxtofl@val+1
  2364  0017F4  6A03               	clrf	(___xxtofl@val+2)^0,c
  2365  0017F6  6A04               	clrf	(___xxtofl@val+3)^0,c
  2366  0017F8  0E00               	movlw	0
  2367  0017FA  ECDF  F019         	call	___xxtofl
  2368  0017FE  C001  F00F         	movff	?___xxtofl,___fldiv@b
  2369  001802  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  2370  001806  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  2371  00180A  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  2372  00180E  ECDA  F013         	call	___fldiv	;wreg free
  2373  001812  C00F  F028         	movff	?___fldiv,___flmul@b
  2374  001816  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  2375  00181A  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  2376  00181E  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  2377  001822  0E00               	movlw	0
  2378  001824  6E2C               	movwf	___flmul@a^0,c
  2379  001826  0E00               	movlw	0
  2380  001828  6E2D               	movwf	(___flmul@a+1)^0,c
  2381  00182A  0EFA               	movlw	250
  2382  00182C  6E2E               	movwf	(___flmul@a+2)^0,c
  2383  00182E  0E43               	movlw	67
  2384  001830  6E2F               	movwf	(___flmul@a+3)^0,c
  2385  001832  ECEE  F00F         	call	___flmul	;wreg free
  2386  001836  C028  F08D         	movff	?___flmul,_detect_color$2775
  2387  00183A  C029  F08E         	movff	?___flmul+1,_detect_color$2775+1
  2388  00183E  C02A  F08F         	movff	?___flmul+2,_detect_color$2775+2
  2389  001842  C02B  F090         	movff	?___flmul+3,_detect_color$2775+3
  2390                           
  2391                           ;color.c: 263:             if (compare(0, lroundf((float)RR/RG * 500), 670)){
  2392  001846  0E00               	movlw	0
  2393  001848  0100               	movlb	0	; () banked
  2394  00184A  6F6B               	movwf	(compare@lower+1)& (0+255),b
  2395  00184C  0E00               	movlw	0
  2396  00184E  6F6A               	movwf	compare@lower& (0+255),b
  2397  001850  C08D  F066         	movff	_detect_color$2775,lroundf@x
  2398  001854  C08E  F067         	movff	_detect_color$2775+1,lroundf@x+1
  2399  001858  C08F  F068         	movff	_detect_color$2775+2,lroundf@x+2
  2400  00185C  C090  F069         	movff	_detect_color$2775+3,lroundf@x+3
  2401  001860  EC32  F026         	call	_lroundf	;wreg free
  2402  001864  C066  F06C         	movff	?_lroundf,compare@value2compare
  2403  001868  C067  F06D         	movff	?_lroundf+1,compare@value2compare+1
  2404  00186C  0E02               	movlw	2
  2405  00186E  0100               	movlb	0	; () banked
  2406  001870  6F6F               	movwf	(compare@upper+1)& (0+255),b
  2407  001872  0E9E               	movlw	158
  2408  001874  6F6E               	movwf	compare@upper& (0+255),b
  2409  001876  EC4F  F026         	call	_compare	;wreg free
  2410  00187A  0900               	iorlw	0
  2411  00187C  B4D8               	btfsc	status,2,c
  2412  00187E  EF43  F00C         	goto	u4541
  2413  001882  EF45  F00C         	goto	u4540
  2414  001886                     u4541:
  2415  001886  EF5A  F00C         	goto	l4510
  2416  00188A                     u4540:
  2417  00188A                     
  2418                           ;color.c: 264:                 if (GR > 90){color = 6;}
  2419  00188A  0100               	movlb	0	; () banked
  2420  00188C  5189               	movf	(detect_color@GR+1)& (0+255),w,b
  2421  00188E  E109               	bnz	u4550
  2422  001890  0E5B               	movlw	91
  2423  001892  5D88               	subwf	detect_color@GR& (0+255),w,b
  2424  001894  A0D8               	btfss	status,0,c
  2425  001896  EF4F  F00C         	goto	u4551
  2426  00189A  EF51  F00C         	goto	u4550
  2427  00189E                     u4551:
  2428  00189E  EF55  F00C         	goto	l4508
  2429  0018A2                     u4550:
  2430  0018A2                     
  2431                           ; BSR set to: 0
  2432  0018A2  0E06               	movlw	6
  2433  0018A4  6F8C               	movwf	detect_color@color& (0+255),b
  2434  0018A6  EFAF  F00C         	goto	l4530
  2435  0018AA                     l4508:
  2436  0018AA  0E00               	movlw	0
  2437  0018AC  0100               	movlb	0	; () banked
  2438  0018AE  6F8C               	movwf	detect_color@color& (0+255),b
  2439  0018B0  EFAF  F00C         	goto	l4530
  2440  0018B4                     l4510:
  2441  0018B4  0E01               	movlw	1
  2442  0018B6  0100               	movlb	0	; () banked
  2443  0018B8  6F8C               	movwf	detect_color@color& (0+255),b
  2444  0018BA  EFAF  F00C         	goto	l4530
  2445  0018BE                     l4512:
  2446                           
  2447                           ;color.c: 270:             if (compare(0, BR, 90)){
  2448  0018BE  0E00               	movlw	0
  2449  0018C0  0100               	movlb	0	; () banked
  2450  0018C2  6F6B               	movwf	(compare@lower+1)& (0+255),b
  2451  0018C4  0E00               	movlw	0
  2452  0018C6  6F6A               	movwf	compare@lower& (0+255),b
  2453  0018C8  C086  F06C         	movff	detect_color@BR,compare@value2compare
  2454  0018CC  C087  F06D         	movff	detect_color@BR+1,compare@value2compare+1
  2455  0018D0  0E00               	movlw	0
  2456  0018D2  6F6F               	movwf	(compare@upper+1)& (0+255),b
  2457  0018D4  0E5A               	movlw	90
  2458  0018D6  6F6E               	movwf	compare@upper& (0+255),b
  2459  0018D8  EC4F  F026         	call	_compare	;wreg free
  2460  0018DC  0900               	iorlw	0
  2461  0018DE  B4D8               	btfsc	status,2,c
  2462  0018E0  EF74  F00C         	goto	u4561
  2463  0018E4  EF76  F00C         	goto	u4560
  2464  0018E8                     u4561:
  2465  0018E8  EF86  F00C         	goto	l4520
  2466  0018EC                     u4560:
  2467  0018EC                     
  2468                           ;color.c: 271:                 if (BG > 90){color = 7;}
  2469  0018EC  0100               	movlb	0	; () banked
  2470  0018EE  518B               	movf	(detect_color@BG+1)& (0+255),w,b
  2471  0018F0  E109               	bnz	u4570
  2472  0018F2  0E5B               	movlw	91
  2473  0018F4  5D8A               	subwf	detect_color@BG& (0+255),w,b
  2474  0018F6  A0D8               	btfss	status,0,c
  2475  0018F8  EF80  F00C         	goto	u4571
  2476  0018FC  EF82  F00C         	goto	u4570
  2477  001900                     u4571:
  2478  001900  EF55  F00C         	goto	l4508
  2479  001904                     u4570:
  2480  001904                     
  2481                           ; BSR set to: 0
  2482  001904  0E07               	movlw	7
  2483  001906  6F8C               	movwf	detect_color@color& (0+255),b
  2484  001908  EFAF  F00C         	goto	l4530
  2485  00190C                     l4520:
  2486                           
  2487                           ;color.c: 275:                 if (BG < BB){color = 5;}
  2488  00190C  0100               	movlb	0	; () banked
  2489  00190E  5184               	movf	detect_color@BB& (0+255),w,b
  2490  001910  5D8A               	subwf	detect_color@BG& (0+255),w,b
  2491  001912  5185               	movf	(detect_color@BB+1)& (0+255),w,b
  2492  001914  598B               	subwfb	(detect_color@BG+1)& (0+255),w,b
  2493  001916  B0D8               	btfsc	status,0,c
  2494  001918  EF90  F00C         	goto	u4581
  2495  00191C  EF92  F00C         	goto	u4580
  2496  001920                     u4581:
  2497  001920  EF96  F00C         	goto	l4524
  2498  001924                     u4580:
  2499  001924                     
  2500                           ; BSR set to: 0
  2501  001924  0E05               	movlw	5
  2502  001926  6F8C               	movwf	detect_color@color& (0+255),b
  2503  001928  EFAF  F00C         	goto	l4530
  2504  00192C                     l4524:
  2505                           
  2506                           ; BSR set to: 0
  2507                           ;color.c: 277:                     if (compare(0, BB, 90)){color = 4;}
  2508  00192C  0E00               	movlw	0
  2509  00192E  6F6B               	movwf	(compare@lower+1)& (0+255),b
  2510  001930  0E00               	movlw	0
  2511  001932  6F6A               	movwf	compare@lower& (0+255),b
  2512  001934  C084  F06C         	movff	detect_color@BB,compare@value2compare
  2513  001938  C085  F06D         	movff	detect_color@BB+1,compare@value2compare+1
  2514  00193C  0E00               	movlw	0
  2515  00193E  6F6F               	movwf	(compare@upper+1)& (0+255),b
  2516  001940  0E5A               	movlw	90
  2517  001942  6F6E               	movwf	compare@upper& (0+255),b
  2518  001944  EC4F  F026         	call	_compare	;wreg free
  2519  001948  0900               	iorlw	0
  2520  00194A  B4D8               	btfsc	status,2,c
  2521  00194C  EFAA  F00C         	goto	u4591
  2522  001950  EFAC  F00C         	goto	u4590
  2523  001954                     u4591:
  2524  001954  EF55  F00C         	goto	l4508
  2525  001958                     u4590:
  2526  001958  0E04               	movlw	4
  2527  00195A  0100               	movlb	0	; () banked
  2528  00195C  6F8C               	movwf	detect_color@color& (0+255),b
  2529  00195E                     l4530:
  2530                           
  2531                           ; BSR set to: 0
  2532                           ;color.c: 284:     if (compare(95, BR, 105) && compare(95,BG,105)){color = 8;}
  2533  00195E  0E00               	movlw	0
  2534  001960  6F6B               	movwf	(compare@lower+1)& (0+255),b
  2535  001962  0E5F               	movlw	95
  2536  001964  6F6A               	movwf	compare@lower& (0+255),b
  2537  001966  C086  F06C         	movff	detect_color@BR,compare@value2compare
  2538  00196A  C087  F06D         	movff	detect_color@BR+1,compare@value2compare+1
  2539  00196E  0E00               	movlw	0
  2540  001970  6F6F               	movwf	(compare@upper+1)& (0+255),b
  2541  001972  0E69               	movlw	105
  2542  001974  6F6E               	movwf	compare@upper& (0+255),b
  2543  001976  EC4F  F026         	call	_compare	;wreg free
  2544  00197A  0900               	iorlw	0
  2545  00197C  B4D8               	btfsc	status,2,c
  2546  00197E  EFC3  F00C         	goto	u4601
  2547  001982  EFC5  F00C         	goto	u4600
  2548  001986                     u4601:
  2549  001986  EFDF  F00C         	goto	l4536
  2550  00198A                     u4600:
  2551  00198A  0E00               	movlw	0
  2552  00198C  0100               	movlb	0	; () banked
  2553  00198E  6F6B               	movwf	(compare@lower+1)& (0+255),b
  2554  001990  0E5F               	movlw	95
  2555  001992  6F6A               	movwf	compare@lower& (0+255),b
  2556  001994  C08A  F06C         	movff	detect_color@BG,compare@value2compare
  2557  001998  C08B  F06D         	movff	detect_color@BG+1,compare@value2compare+1
  2558  00199C  0E00               	movlw	0
  2559  00199E  6F6F               	movwf	(compare@upper+1)& (0+255),b
  2560  0019A0  0E69               	movlw	105
  2561  0019A2  6F6E               	movwf	compare@upper& (0+255),b
  2562  0019A4  EC4F  F026         	call	_compare	;wreg free
  2563  0019A8  0900               	iorlw	0
  2564  0019AA  B4D8               	btfsc	status,2,c
  2565  0019AC  EFDA  F00C         	goto	u4611
  2566  0019B0  EFDC  F00C         	goto	u4610
  2567  0019B4                     u4611:
  2568  0019B4  EFDF  F00C         	goto	l4536
  2569  0019B8                     u4610:
  2570  0019B8  0E08               	movlw	8
  2571  0019BA  0100               	movlb	0	; () banked
  2572  0019BC  6F8C               	movwf	detect_color@color& (0+255),b
  2573  0019BE                     l4536:
  2574                           
  2575                           ;color.c: 285:     if (compare(0, BR, 25) && compare(0,RR,90)){color = 0;}
  2576  0019BE  0E00               	movlw	0
  2577  0019C0  0100               	movlb	0	; () banked
  2578  0019C2  6F6B               	movwf	(compare@lower+1)& (0+255),b
  2579  0019C4  0E00               	movlw	0
  2580  0019C6  6F6A               	movwf	compare@lower& (0+255),b
  2581  0019C8  C086  F06C         	movff	detect_color@BR,compare@value2compare
  2582  0019CC  C087  F06D         	movff	detect_color@BR+1,compare@value2compare+1
  2583  0019D0  0E00               	movlw	0
  2584  0019D2  6F6F               	movwf	(compare@upper+1)& (0+255),b
  2585  0019D4  0E19               	movlw	25
  2586  0019D6  6F6E               	movwf	compare@upper& (0+255),b
  2587  0019D8  EC4F  F026         	call	_compare	;wreg free
  2588  0019DC  0900               	iorlw	0
  2589  0019DE  B4D8               	btfsc	status,2,c
  2590  0019E0  EFF4  F00C         	goto	u4621
  2591  0019E4  EFF6  F00C         	goto	u4620
  2592  0019E8                     u4621:
  2593  0019E8  EF10  F00D         	goto	l4542
  2594  0019EC                     u4620:
  2595  0019EC  0E00               	movlw	0
  2596  0019EE  0100               	movlb	0	; () banked
  2597  0019F0  6F6B               	movwf	(compare@lower+1)& (0+255),b
  2598  0019F2  0E00               	movlw	0
  2599  0019F4  6F6A               	movwf	compare@lower& (0+255),b
  2600  0019F6  C082  F06C         	movff	detect_color@RR,compare@value2compare
  2601  0019FA  C083  F06D         	movff	detect_color@RR+1,compare@value2compare+1
  2602  0019FE  0E00               	movlw	0
  2603  001A00  6F6F               	movwf	(compare@upper+1)& (0+255),b
  2604  001A02  0E5A               	movlw	90
  2605  001A04  6F6E               	movwf	compare@upper& (0+255),b
  2606  001A06  EC4F  F026         	call	_compare	;wreg free
  2607  001A0A  0900               	iorlw	0
  2608  001A0C  B4D8               	btfsc	status,2,c
  2609  001A0E  EF0B  F00D         	goto	u4631
  2610  001A12  EF0D  F00D         	goto	u4630
  2611  001A16                     u4631:
  2612  001A16  EF10  F00D         	goto	l4542
  2613  001A1A                     u4630:
  2614  001A1A  0E00               	movlw	0
  2615  001A1C  0100               	movlb	0	; () banked
  2616  001A1E  6F8C               	movwf	detect_color@color& (0+255),b
  2617  001A20                     l4542:
  2618                           
  2619                           ;color.c: 288:     if (color == 2 || color == 3){
  2620  001A20  0E02               	movlw	2
  2621  001A22  0100               	movlb	0	; () banked
  2622  001A24  198C               	xorwf	detect_color@color& (0+255),w,b
  2623  001A26  B4D8               	btfsc	status,2,c
  2624  001A28  EF18  F00D         	goto	u4641
  2625  001A2C  EF1A  F00D         	goto	u4640
  2626  001A30                     u4641:
  2627  001A30  EF23  F00D         	goto	l4546
  2628  001A34                     u4640:
  2629  001A34                     
  2630                           ; BSR set to: 0
  2631  001A34  0E03               	movlw	3
  2632  001A36  198C               	xorwf	detect_color@color& (0+255),w,b
  2633  001A38  A4D8               	btfss	status,2,c
  2634  001A3A  EF21  F00D         	goto	u4651
  2635  001A3E  EF23  F00D         	goto	u4650
  2636  001A42                     u4651:
  2637  001A42  EF30  F00D         	goto	l4550
  2638  001A46                     u4650:
  2639  001A46                     l4546:
  2640                           
  2641                           ; BSR set to: 0
  2642                           ;color.c: 289:         if (GR < 50){color = 0;}
  2643  001A46  5189               	movf	(detect_color@GR+1)& (0+255),w,b
  2644  001A48  E107               	bnz	u4661
  2645  001A4A  0E32               	movlw	50
  2646  001A4C  5D88               	subwf	detect_color@GR& (0+255),w,b
  2647  001A4E  B0D8               	btfsc	status,0,c
  2648  001A50  EF2C  F00D         	goto	u4661
  2649  001A54  EF2E  F00D         	goto	u4660
  2650  001A58                     u4661:
  2651  001A58  EF30  F00D         	goto	l4550
  2652  001A5C                     u4660:
  2653  001A5C                     
  2654                           ; BSR set to: 0
  2655  001A5C  0E00               	movlw	0
  2656  001A5E  6F8C               	movwf	detect_color@color& (0+255),b
  2657  001A60                     l4550:
  2658                           
  2659                           ; BSR set to: 0
  2660                           ;color.c: 291:     if (color == 1 || color == 6){
  2661  001A60  058C               	decf	detect_color@color& (0+255),w,b
  2662  001A62  B4D8               	btfsc	status,2,c
  2663  001A64  EF36  F00D         	goto	u4671
  2664  001A68  EF38  F00D         	goto	u4670
  2665  001A6C                     u4671:
  2666  001A6C  EF41  F00D         	goto	l4554
  2667  001A70                     u4670:
  2668  001A70                     
  2669                           ; BSR set to: 0
  2670  001A70  0E06               	movlw	6
  2671  001A72  198C               	xorwf	detect_color@color& (0+255),w,b
  2672  001A74  A4D8               	btfss	status,2,c
  2673  001A76  EF3F  F00D         	goto	u4681
  2674  001A7A  EF41  F00D         	goto	u4680
  2675  001A7E                     u4681:
  2676  001A7E  EF4E  F00D         	goto	l4558
  2677  001A82                     u4680:
  2678  001A82                     l4554:
  2679                           
  2680                           ; BSR set to: 0
  2681                           ;color.c: 292:         if (GR < 90){color = 0;}
  2682  001A82  5189               	movf	(detect_color@GR+1)& (0+255),w,b
  2683  001A84  E107               	bnz	u4691
  2684  001A86  0E5A               	movlw	90
  2685  001A88  5D88               	subwf	detect_color@GR& (0+255),w,b
  2686  001A8A  B0D8               	btfsc	status,0,c
  2687  001A8C  EF4A  F00D         	goto	u4691
  2688  001A90  EF4C  F00D         	goto	u4690
  2689  001A94                     u4691:
  2690  001A94  EF4E  F00D         	goto	l4558
  2691  001A98                     u4690:
  2692  001A98                     
  2693                           ; BSR set to: 0
  2694  001A98  0E00               	movlw	0
  2695  001A9A  6F8C               	movwf	detect_color@color& (0+255),b
  2696  001A9C                     l4558:
  2697                           
  2698                           ; BSR set to: 0
  2699                           ;color.c: 294:     if (color == 4 || color == 5){
  2700  001A9C  0E04               	movlw	4
  2701  001A9E  198C               	xorwf	detect_color@color& (0+255),w,b
  2702  001AA0  B4D8               	btfsc	status,2,c
  2703  001AA2  EF55  F00D         	goto	u4701
  2704  001AA6  EF57  F00D         	goto	u4700
  2705  001AAA                     u4701:
  2706  001AAA  EF60  F00D         	goto	l4562
  2707  001AAE                     u4700:
  2708  001AAE                     
  2709                           ; BSR set to: 0
  2710  001AAE  0E05               	movlw	5
  2711  001AB0  198C               	xorwf	detect_color@color& (0+255),w,b
  2712  001AB2  A4D8               	btfss	status,2,c
  2713  001AB4  EF5E  F00D         	goto	u4711
  2714  001AB8  EF60  F00D         	goto	u4710
  2715  001ABC                     u4711:
  2716  001ABC  EF6D  F00D         	goto	l4566
  2717  001AC0                     u4710:
  2718  001AC0                     l4562:
  2719                           
  2720                           ; BSR set to: 0
  2721                           ;color.c: 295:         if (GR < 100){color = 0;}
  2722  001AC0  5189               	movf	(detect_color@GR+1)& (0+255),w,b
  2723  001AC2  E107               	bnz	u4721
  2724  001AC4  0E64               	movlw	100
  2725  001AC6  5D88               	subwf	detect_color@GR& (0+255),w,b
  2726  001AC8  B0D8               	btfsc	status,0,c
  2727  001ACA  EF69  F00D         	goto	u4721
  2728  001ACE  EF6B  F00D         	goto	u4720
  2729  001AD2                     u4721:
  2730  001AD2  EF6D  F00D         	goto	l4566
  2731  001AD6                     u4720:
  2732  001AD6                     
  2733                           ; BSR set to: 0
  2734  001AD6  0E00               	movlw	0
  2735  001AD8  6F8C               	movwf	detect_color@color& (0+255),b
  2736  001ADA                     l4566:
  2737                           
  2738                           ; BSR set to: 0
  2739                           ;color.c: 297:     if (color == 7 || color == 8){
  2740  001ADA  0E07               	movlw	7
  2741  001ADC  198C               	xorwf	detect_color@color& (0+255),w,b
  2742  001ADE  B4D8               	btfsc	status,2,c
  2743  001AE0  EF74  F00D         	goto	u4731
  2744  001AE4  EF76  F00D         	goto	u4730
  2745  001AE8                     u4731:
  2746  001AE8  EF7F  F00D         	goto	l4570
  2747  001AEC                     u4730:
  2748  001AEC                     
  2749                           ; BSR set to: 0
  2750  001AEC  0E08               	movlw	8
  2751  001AEE  198C               	xorwf	detect_color@color& (0+255),w,b
  2752  001AF0  A4D8               	btfss	status,2,c
  2753  001AF2  EF7D  F00D         	goto	u4741
  2754  001AF6  EF7F  F00D         	goto	u4740
  2755  001AFA                     u4741:
  2756  001AFA  EF8C  F00D         	goto	l149
  2757  001AFE                     u4740:
  2758  001AFE                     l4570:
  2759                           
  2760                           ; BSR set to: 0
  2761                           ;color.c: 298:         if (GR < 80){color = 0;}
  2762  001AFE  5189               	movf	(detect_color@GR+1)& (0+255),w,b
  2763  001B00  E107               	bnz	u4751
  2764  001B02  0E50               	movlw	80
  2765  001B04  5D88               	subwf	detect_color@GR& (0+255),w,b
  2766  001B06  B0D8               	btfsc	status,0,c
  2767  001B08  EF88  F00D         	goto	u4751
  2768  001B0C  EF8A  F00D         	goto	u4750
  2769  001B10                     u4751:
  2770  001B10  EF8C  F00D         	goto	l149
  2771  001B14                     u4750:
  2772  001B14                     
  2773                           ; BSR set to: 0
  2774  001B14  0E00               	movlw	0
  2775  001B16  6F8C               	movwf	detect_color@color& (0+255),b
  2776  001B18                     l149:
  2777                           
  2778                           ; BSR set to: 0
  2779                           ;color.c: 301:     return color;
  2780  001B18  518C               	movf	detect_color@color& (0+255),w,b
  2781  001B1A                     
  2782                           ; BSR set to: 0
  2783  001B1A  0012               	return		;funcret
  2784  001B1C                     __end_of_detect_color:
  2785                           	callstack 0
  2786                           
  2787 ;; *************** function _lroundf *****************
  2788 ;; Defined at:
  2789 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\lroundf.c"
  2790 ;; Parameters:    Size  Location     Type
  2791 ;;  x               4    6[BANK0 ] float 
  2792 ;; Auto vars:     Size  Location     Type
  2793 ;;		None
  2794 ;; Return value:  Size  Location     Type
  2795 ;;                  4    6[BANK0 ] long 
  2796 ;; Registers used:
  2797 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2798 ;; Tracked objects:
  2799 ;;		On entry : 0/0
  2800 ;;		On exit  : 0/0
  2801 ;;		Unchanged: 0/0
  2802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2803 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2804 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2805 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2806 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2807 ;;Total ram usage:        4 bytes
  2808 ;; Hardware stack levels used: 1
  2809 ;; Hardware stack levels required when called: 3
  2810 ;; This function calls:
  2811 ;;		___fltol
  2812 ;;		_roundf
  2813 ;; This function is called by:
  2814 ;;		_detect_color
  2815 ;;		_check_color_reading
  2816 ;; This function uses a non-reentrant model
  2817 ;;
  2818                           
  2819                           	psect	text3
  2820  004C64                     __ptext3:
  2821                           	callstack 0
  2822  004C64                     _lroundf:
  2823                           	callstack 25
  2824  004C64  C066  F041         	movff	lroundf@x,roundf@x
  2825  004C68  C067  F042         	movff	lroundf@x+1,roundf@x+1
  2826  004C6C  C068  F043         	movff	lroundf@x+2,roundf@x+2
  2827  004C70  C069  F044         	movff	lroundf@x+3,roundf@x+3
  2828  004C74  EC03  F012         	call	_roundf	;wreg free
  2829  004C78  C041  F05B         	movff	?_roundf,___fltol@f1
  2830  004C7C  C042  F05C         	movff	?_roundf+1,___fltol@f1+1
  2831  004C80  C043  F05D         	movff	?_roundf+2,___fltol@f1+2
  2832  004C84  C044  F05E         	movff	?_roundf+3,___fltol@f1+3
  2833  004C88  ECD6  F01E         	call	___fltol	;wreg free
  2834  004C8C  C05B  F066         	movff	?___fltol,?_lroundf
  2835  004C90  C05C  F067         	movff	?___fltol+1,?_lroundf+1
  2836  004C94  C05D  F068         	movff	?___fltol+2,?_lroundf+2
  2837  004C98  C05E  F069         	movff	?___fltol+3,?_lroundf+3
  2838  004C9C  0012               	return		;funcret
  2839  004C9E                     __end_of_lroundf:
  2840                           	callstack 0
  2841                           
  2842 ;; *************** function _roundf *****************
  2843 ;; Defined at:
  2844 ;;		line 12 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\roundf.c"
  2845 ;; Parameters:    Size  Location     Type
  2846 ;;  x               4   64[COMRAM] float 
  2847 ;; Auto vars:     Size  Location     Type
  2848 ;;  y               4   86[COMRAM] float 
  2849 ;;  u               4   82[COMRAM] struct .
  2850 ;;  e               2   76[COMRAM] int 
  2851 ;; Return value:  Size  Location     Type
  2852 ;;                  4   64[COMRAM] float 
  2853 ;; Registers used:
  2854 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2855 ;; Tracked objects:
  2856 ;;		On entry : 0/0
  2857 ;;		On exit  : 0/0
  2858 ;;		Unchanged: 0/0
  2859 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2860 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2861 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2862 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2863 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2864 ;;Total ram usage:       26 bytes
  2865 ;; Hardware stack levels used: 1
  2866 ;; Hardware stack levels required when called: 2
  2867 ;; This function calls:
  2868 ;;		___fladd
  2869 ;;		___flge
  2870 ;;		___flmul
  2871 ;;		___flneg
  2872 ;;		___flsub
  2873 ;; This function is called by:
  2874 ;;		_lroundf
  2875 ;; This function uses a non-reentrant model
  2876 ;;
  2877                           
  2878                           	psect	text4
  2879  002406                     __ptext4:
  2880                           	callstack 0
  2881  002406                     _roundf:
  2882                           	callstack 25
  2883  002406  C0E8  F053         	movff	roundf@F527,roundf@u
  2884  00240A  C0E9  F054         	movff	roundf@F527+1,roundf@u+1
  2885  00240E  C0EA  F055         	movff	roundf@F527+2,roundf@u+2
  2886  002412  C0EB  F056         	movff	roundf@F527+3,roundf@u+3
  2887  002416  C041  F053         	movff	roundf@x,roundf@u
  2888  00241A  C042  F054         	movff	roundf@x+1,roundf@u+1
  2889  00241E  C043  F055         	movff	roundf@x+2,roundf@u+2
  2890  002422  C044  F056         	movff	roundf@x+3,roundf@u+3
  2891  002426  C053  F045         	movff	roundf@u,??_roundf
  2892  00242A  C054  F046         	movff	roundf@u+1,??_roundf+1
  2893  00242E  C055  F047         	movff	roundf@u+2,??_roundf+2
  2894  002432  C056  F048         	movff	roundf@u+3,??_roundf+3
  2895  002436  0E18               	movlw	24
  2896  002438  EF23  F012         	goto	u3890
  2897  00243C                     u3895:
  2898  00243C  90D8               	bcf	status,0,c
  2899  00243E  3248               	rrcf	(??_roundf+3)^0,f,c
  2900  002440  3247               	rrcf	(??_roundf+2)^0,f,c
  2901  002442  3246               	rrcf	(??_roundf+1)^0,f,c
  2902  002444  3245               	rrcf	??_roundf^0,f,c
  2903  002446                     u3890:
  2904  002446  2EE8               	decfsz	wreg,f,c
  2905  002448  EF1E  F012         	goto	u3895
  2906  00244C  5045               	movf	??_roundf^0,w,c
  2907  00244E  6E4D               	movwf	roundf@e^0,c
  2908  002450  6A4E               	clrf	(roundf@e+1)^0,c
  2909  002452  BE4E               	btfsc	(roundf@e+1)^0,7,c
  2910  002454  EF35  F012         	goto	u3901
  2911  002458  504E               	movf	(roundf@e+1)^0,w,c
  2912  00245A  E109               	bnz	u3900
  2913  00245C  0E96               	movlw	150
  2914  00245E  5C4D               	subwf	roundf@e^0,w,c
  2915  002460  A0D8               	btfss	status,0,c
  2916  002462  EF35  F012         	goto	u3901
  2917  002466  EF37  F012         	goto	u3900
  2918  00246A                     u3901:
  2919  00246A  EF41  F012         	goto	l4048
  2920  00246E                     u3900:
  2921  00246E  C041  F041         	movff	roundf@x,?_roundf
  2922  002472  C042  F042         	movff	roundf@x+1,?_roundf+1
  2923  002476  C043  F043         	movff	roundf@x+2,?_roundf+2
  2924  00247A  C044  F044         	movff	roundf@x+3,?_roundf+3
  2925  00247E  EFD9  F013         	goto	l1419
  2926  002482                     l4048:
  2927  002482  C053  F045         	movff	roundf@u,??_roundf
  2928  002486  C054  F046         	movff	roundf@u+1,??_roundf+1
  2929  00248A  C055  F047         	movff	roundf@u+2,??_roundf+2
  2930  00248E  C056  F048         	movff	roundf@u+3,??_roundf+3
  2931  002492  0E20               	movlw	32
  2932  002494  EF51  F012         	goto	u3910
  2933  002498                     u3915:
  2934  002498  90D8               	bcf	status,0,c
  2935  00249A  3248               	rrcf	(??_roundf+3)^0,f,c
  2936  00249C  3247               	rrcf	(??_roundf+2)^0,f,c
  2937  00249E  3246               	rrcf	(??_roundf+1)^0,f,c
  2938  0024A0  3245               	rrcf	??_roundf^0,f,c
  2939  0024A2                     u3910:
  2940  0024A2  2EE8               	decfsz	wreg,f,c
  2941  0024A4  EF4C  F012         	goto	u3915
  2942  0024A8  5045               	movf	??_roundf^0,w,c
  2943  0024AA  1046               	iorwf	(??_roundf+1)^0,w,c
  2944  0024AC  1047               	iorwf	(??_roundf+2)^0,w,c
  2945  0024AE  1048               	iorwf	(??_roundf+3)^0,w,c
  2946  0024B0  B4D8               	btfsc	status,2,c
  2947  0024B2  EF5D  F012         	goto	u3921
  2948  0024B6  EF5F  F012         	goto	u3920
  2949  0024BA                     u3921:
  2950  0024BA  EF71  F012         	goto	l4052
  2951  0024BE                     u3920:
  2952  0024BE  C041  F001         	movff	roundf@x,___flneg@f1
  2953  0024C2  C042  F002         	movff	roundf@x+1,___flneg@f1+1
  2954  0024C6  C043  F003         	movff	roundf@x+2,___flneg@f1+2
  2955  0024CA  C044  F004         	movff	roundf@x+3,___flneg@f1+3
  2956  0024CE  EC6C  F026         	call	___flneg	;wreg free
  2957  0024D2  C001  F041         	movff	?___flneg,roundf@x
  2958  0024D6  C002  F042         	movff	?___flneg+1,roundf@x+1
  2959  0024DA  C003  F043         	movff	?___flneg+2,roundf@x+2
  2960  0024DE  C004  F044         	movff	?___flneg+3,roundf@x+3
  2961  0024E2                     l4052:
  2962  0024E2  BE4E               	btfsc	(roundf@e+1)^0,7,c
  2963  0024E4  EF7F  F012         	goto	u3930
  2964  0024E8  504E               	movf	(roundf@e+1)^0,w,c
  2965  0024EA  E107               	bnz	u3931
  2966  0024EC  0E7E               	movlw	126
  2967  0024EE  5C4D               	subwf	roundf@e^0,w,c
  2968  0024F0  B0D8               	btfsc	status,0,c
  2969  0024F2  EF7D  F012         	goto	u3931
  2970  0024F6  EF7F  F012         	goto	u3930
  2971  0024FA                     u3931:
  2972  0024FA  EF9B  F012         	goto	l4058
  2973  0024FE                     u3930:
  2974  0024FE  C053  F028         	movff	roundf@u,___flmul@b
  2975  002502  C054  F029         	movff	roundf@u+1,___flmul@b+1
  2976  002506  C055  F02A         	movff	roundf@u+2,___flmul@b+2
  2977  00250A  C056  F02B         	movff	roundf@u+3,___flmul@b+3
  2978  00250E  0E00               	movlw	0
  2979  002510  6E2C               	movwf	___flmul@a^0,c
  2980  002512  0E00               	movlw	0
  2981  002514  6E2D               	movwf	(___flmul@a+1)^0,c
  2982  002516  0E00               	movlw	0
  2983  002518  6E2E               	movwf	(___flmul@a+2)^0,c
  2984  00251A  0E00               	movlw	0
  2985  00251C  6E2F               	movwf	(___flmul@a+3)^0,c
  2986  00251E  ECEE  F00F         	call	___flmul	;wreg free
  2987  002522  C028  F041         	movff	?___flmul,?_roundf
  2988  002526  C029  F042         	movff	?___flmul+1,?_roundf+1
  2989  00252A  C02A  F043         	movff	?___flmul+2,?_roundf+2
  2990  00252E  C02B  F044         	movff	?___flmul+3,?_roundf+3
  2991  002532  EFD9  F013         	goto	l1419
  2992  002536                     l4058:
  2993  002536  0E00               	movlw	0
  2994  002538  6E05               	movwf	___fladd@a^0,c
  2995  00253A  0E00               	movlw	0
  2996  00253C  6E06               	movwf	(___fladd@a+1)^0,c
  2997  00253E  0E00               	movlw	0
  2998  002540  6E07               	movwf	(___fladd@a+2)^0,c
  2999  002542  0E4B               	movlw	75
  3000  002544  6E08               	movwf	(___fladd@a+3)^0,c
  3001  002546  C041  F001         	movff	roundf@x,___fladd@b
  3002  00254A  C042  F002         	movff	roundf@x+1,___fladd@b+1
  3003  00254E  C043  F003         	movff	roundf@x+2,___fladd@b+2
  3004  002552  C044  F004         	movff	roundf@x+3,___fladd@b+3
  3005  002556  EC8E  F00D         	call	___fladd	;wreg free
  3006  00255A  C001  F04F         	movff	?___fladd,_roundf$2776
  3007  00255E  C002  F050         	movff	?___fladd+1,_roundf$2776+1
  3008  002562  C003  F051         	movff	?___fladd+2,_roundf$2776+2
  3009  002566  C004  F052         	movff	?___fladd+3,_roundf$2776+3
  3010  00256A  0E00               	movlw	0
  3011  00256C  6E05               	movwf	___fladd@a^0,c
  3012  00256E  0E00               	movlw	0
  3013  002570  6E06               	movwf	(___fladd@a+1)^0,c
  3014  002572  0E00               	movlw	0
  3015  002574  6E07               	movwf	(___fladd@a+2)^0,c
  3016  002576  0ECB               	movlw	203
  3017  002578  6E08               	movwf	(___fladd@a+3)^0,c
  3018  00257A  C04F  F001         	movff	_roundf$2776,___fladd@b
  3019  00257E  C050  F002         	movff	_roundf$2776+1,___fladd@b+1
  3020  002582  C051  F003         	movff	_roundf$2776+2,___fladd@b+2
  3021  002586  C052  F004         	movff	_roundf$2776+3,___fladd@b+3
  3022  00258A  EC8E  F00D         	call	___fladd	;wreg free
  3023  00258E  C001  F049         	movff	?___fladd,_roundf$2777
  3024  002592  C002  F04A         	movff	?___fladd+1,_roundf$2777+1
  3025  002596  C003  F04B         	movff	?___fladd+2,_roundf$2777+2
  3026  00259A  C004  F04C         	movff	?___fladd+3,_roundf$2777+3
  3027  00259E  C049  F011         	movff	_roundf$2777,___flsub@b
  3028  0025A2  C04A  F012         	movff	_roundf$2777+1,___flsub@b+1
  3029  0025A6  C04B  F013         	movff	_roundf$2777+2,___flsub@b+2
  3030  0025AA  C04C  F014         	movff	_roundf$2777+3,___flsub@b+3
  3031  0025AE  C041  F015         	movff	roundf@x,___flsub@a
  3032  0025B2  C042  F016         	movff	roundf@x+1,___flsub@a+1
  3033  0025B6  C043  F017         	movff	roundf@x+2,___flsub@a+2
  3034  0025BA  C044  F018         	movff	roundf@x+3,___flsub@a+3
  3035  0025BE  EC2A  F025         	call	___flsub	;wreg free
  3036  0025C2  C011  F057         	movff	?___flsub,roundf@y
  3037  0025C6  C012  F058         	movff	?___flsub+1,roundf@y+1
  3038  0025CA  C013  F059         	movff	?___flsub+2,roundf@y+2
  3039  0025CE  C014  F05A         	movff	?___flsub+3,roundf@y+3
  3040  0025D2  0E00               	movlw	0
  3041  0025D4  6E01               	movwf	___flge@ff1^0,c
  3042  0025D6  0E00               	movlw	0
  3043  0025D8  6E02               	movwf	(___flge@ff1+1)^0,c
  3044  0025DA  0E00               	movlw	0
  3045  0025DC  6E03               	movwf	(___flge@ff1+2)^0,c
  3046  0025DE  0E3F               	movlw	63
  3047  0025E0  6E04               	movwf	(___flge@ff1+3)^0,c
  3048  0025E2  C057  F005         	movff	roundf@y,___flge@ff2
  3049  0025E6  C058  F006         	movff	roundf@y+1,___flge@ff2+1
  3050  0025EA  C059  F007         	movff	roundf@y+2,___flge@ff2+2
  3051  0025EE  C05A  F008         	movff	roundf@y+3,___flge@ff2+3
  3052  0025F2  EC5A  F01F         	call	___flge	;wreg free
  3053  0025F6  B0D8               	btfsc	status,0,c
  3054  0025F8  EF00  F013         	goto	u3941
  3055  0025FC  EF02  F013         	goto	u3940
  3056  002600                     u3941:
  3057  002600  EF38  F013         	goto	l4062
  3058  002604                     u3940:
  3059  002604  C041  F005         	movff	roundf@x,___fladd@a
  3060  002608  C042  F006         	movff	roundf@x+1,___fladd@a+1
  3061  00260C  C043  F007         	movff	roundf@x+2,___fladd@a+2
  3062  002610  C044  F008         	movff	roundf@x+3,___fladd@a+3
  3063  002614  C057  F001         	movff	roundf@y,___fladd@b
  3064  002618  C058  F002         	movff	roundf@y+1,___fladd@b+1
  3065  00261C  C059  F003         	movff	roundf@y+2,___fladd@b+2
  3066  002620  C05A  F004         	movff	roundf@y+3,___fladd@b+3
  3067  002624  EC8E  F00D         	call	___fladd	;wreg free
  3068  002628  C001  F04F         	movff	?___fladd,_roundf$2776
  3069  00262C  C002  F050         	movff	?___fladd+1,_roundf$2776+1
  3070  002630  C003  F051         	movff	?___fladd+2,_roundf$2776+2
  3071  002634  C004  F052         	movff	?___fladd+3,_roundf$2776+3
  3072  002638  C04F  F001         	movff	_roundf$2776,___fladd@b
  3073  00263C  C050  F002         	movff	_roundf$2776+1,___fladd@b+1
  3074  002640  C051  F003         	movff	_roundf$2776+2,___fladd@b+2
  3075  002644  C052  F004         	movff	_roundf$2776+3,___fladd@b+3
  3076  002648  0E00               	movlw	0
  3077  00264A  6E05               	movwf	___fladd@a^0,c
  3078  00264C  0E00               	movlw	0
  3079  00264E  6E06               	movwf	(___fladd@a+1)^0,c
  3080  002650  0E80               	movlw	128
  3081  002652  6E07               	movwf	(___fladd@a+2)^0,c
  3082  002654  0EBF               	movlw	191
  3083  002656  6E08               	movwf	(___fladd@a+3)^0,c
  3084  002658  EC8E  F00D         	call	___fladd	;wreg free
  3085  00265C  C001  F057         	movff	?___fladd,roundf@y
  3086  002660  C002  F058         	movff	?___fladd+1,roundf@y+1
  3087  002664  C003  F059         	movff	?___fladd+2,roundf@y+2
  3088  002668  C004  F05A         	movff	?___fladd+3,roundf@y+3
  3089  00266C  EFA1  F013         	goto	l4068
  3090  002670                     l4062:
  3091  002670  0E00               	movlw	0
  3092  002672  6E01               	movwf	___flge@ff1^0,c
  3093  002674  0E00               	movlw	0
  3094  002676  6E02               	movwf	(___flge@ff1+1)^0,c
  3095  002678  0E00               	movlw	0
  3096  00267A  6E03               	movwf	(___flge@ff1+2)^0,c
  3097  00267C  0EBF               	movlw	191
  3098  00267E  6E04               	movwf	(___flge@ff1+3)^0,c
  3099  002680  C057  F005         	movff	roundf@y,___flge@ff2
  3100  002684  C058  F006         	movff	roundf@y+1,___flge@ff2+1
  3101  002688  C059  F007         	movff	roundf@y+2,___flge@ff2+2
  3102  00268C  C05A  F008         	movff	roundf@y+3,___flge@ff2+3
  3103  002690  EC5A  F01F         	call	___flge	;wreg free
  3104  002694  A0D8               	btfss	status,0,c
  3105  002696  EF4F  F013         	goto	u3951
  3106  00269A  EF51  F013         	goto	u3950
  3107  00269E                     u3951:
  3108  00269E  EF87  F013         	goto	l4066
  3109  0026A2                     u3950:
  3110  0026A2  C041  F005         	movff	roundf@x,___fladd@a
  3111  0026A6  C042  F006         	movff	roundf@x+1,___fladd@a+1
  3112  0026AA  C043  F007         	movff	roundf@x+2,___fladd@a+2
  3113  0026AE  C044  F008         	movff	roundf@x+3,___fladd@a+3
  3114  0026B2  C057  F001         	movff	roundf@y,___fladd@b
  3115  0026B6  C058  F002         	movff	roundf@y+1,___fladd@b+1
  3116  0026BA  C059  F003         	movff	roundf@y+2,___fladd@b+2
  3117  0026BE  C05A  F004         	movff	roundf@y+3,___fladd@b+3
  3118  0026C2  EC8E  F00D         	call	___fladd	;wreg free
  3119  0026C6  C001  F04F         	movff	?___fladd,_roundf$2776
  3120  0026CA  C002  F050         	movff	?___fladd+1,_roundf$2776+1
  3121  0026CE  C003  F051         	movff	?___fladd+2,_roundf$2776+2
  3122  0026D2  C004  F052         	movff	?___fladd+3,_roundf$2776+3
  3123  0026D6  C04F  F001         	movff	_roundf$2776,___fladd@b
  3124  0026DA  C050  F002         	movff	_roundf$2776+1,___fladd@b+1
  3125  0026DE  C051  F003         	movff	_roundf$2776+2,___fladd@b+2
  3126  0026E2  C052  F004         	movff	_roundf$2776+3,___fladd@b+3
  3127  0026E6  0E00               	movlw	0
  3128  0026E8  6E05               	movwf	___fladd@a^0,c
  3129  0026EA  0E00               	movlw	0
  3130  0026EC  6E06               	movwf	(___fladd@a+1)^0,c
  3131  0026EE  0E80               	movlw	128
  3132  0026F0  6E07               	movwf	(___fladd@a+2)^0,c
  3133  0026F2  0E3F               	movlw	63
  3134  0026F4  6E08               	movwf	(___fladd@a+3)^0,c
  3135  0026F6  EC8E  F00D         	call	___fladd	;wreg free
  3136  0026FA  C001  F057         	movff	?___fladd,roundf@y
  3137  0026FE  C002  F058         	movff	?___fladd+1,roundf@y+1
  3138  002702  C003  F059         	movff	?___fladd+2,roundf@y+2
  3139  002706  C004  F05A         	movff	?___fladd+3,roundf@y+3
  3140  00270A  EFA1  F013         	goto	l4068
  3141  00270E                     l4066:
  3142  00270E  C057  F001         	movff	roundf@y,___fladd@b
  3143  002712  C058  F002         	movff	roundf@y+1,___fladd@b+1
  3144  002716  C059  F003         	movff	roundf@y+2,___fladd@b+2
  3145  00271A  C05A  F004         	movff	roundf@y+3,___fladd@b+3
  3146  00271E  C041  F005         	movff	roundf@x,___fladd@a
  3147  002722  C042  F006         	movff	roundf@x+1,___fladd@a+1
  3148  002726  C043  F007         	movff	roundf@x+2,___fladd@a+2
  3149  00272A  C044  F008         	movff	roundf@x+3,___fladd@a+3
  3150  00272E  EC8E  F00D         	call	___fladd	;wreg free
  3151  002732  C001  F057         	movff	?___fladd,roundf@y
  3152  002736  C002  F058         	movff	?___fladd+1,roundf@y+1
  3153  00273A  C003  F059         	movff	?___fladd+2,roundf@y+2
  3154  00273E  C004  F05A         	movff	?___fladd+3,roundf@y+3
  3155  002742                     l4068:
  3156  002742  C053  F045         	movff	roundf@u,??_roundf
  3157  002746  C054  F046         	movff	roundf@u+1,??_roundf+1
  3158  00274A  C055  F047         	movff	roundf@u+2,??_roundf+2
  3159  00274E  C056  F048         	movff	roundf@u+3,??_roundf+3
  3160  002752  0E20               	movlw	32
  3161  002754  EFB1  F013         	goto	u3960
  3162  002758                     u3965:
  3163  002758  90D8               	bcf	status,0,c
  3164  00275A  3248               	rrcf	(??_roundf+3)^0,f,c
  3165  00275C  3247               	rrcf	(??_roundf+2)^0,f,c
  3166  00275E  3246               	rrcf	(??_roundf+1)^0,f,c
  3167  002760  3245               	rrcf	??_roundf^0,f,c
  3168  002762                     u3960:
  3169  002762  2EE8               	decfsz	wreg,f,c
  3170  002764  EFAC  F013         	goto	u3965
  3171  002768  5045               	movf	??_roundf^0,w,c
  3172  00276A  1046               	iorwf	(??_roundf+1)^0,w,c
  3173  00276C  1047               	iorwf	(??_roundf+2)^0,w,c
  3174  00276E  1048               	iorwf	(??_roundf+3)^0,w,c
  3175  002770  B4D8               	btfsc	status,2,c
  3176  002772  EFBD  F013         	goto	u3971
  3177  002776  EFBF  F013         	goto	u3970
  3178  00277A                     u3971:
  3179  00277A  EFD1  F013         	goto	l4072
  3180  00277E                     u3970:
  3181  00277E  C057  F001         	movff	roundf@y,___flneg@f1
  3182  002782  C058  F002         	movff	roundf@y+1,___flneg@f1+1
  3183  002786  C059  F003         	movff	roundf@y+2,___flneg@f1+2
  3184  00278A  C05A  F004         	movff	roundf@y+3,___flneg@f1+3
  3185  00278E  EC6C  F026         	call	___flneg	;wreg free
  3186  002792  C001  F057         	movff	?___flneg,roundf@y
  3187  002796  C002  F058         	movff	?___flneg+1,roundf@y+1
  3188  00279A  C003  F059         	movff	?___flneg+2,roundf@y+2
  3189  00279E  C004  F05A         	movff	?___flneg+3,roundf@y+3
  3190  0027A2                     l4072:
  3191  0027A2  C057  F041         	movff	roundf@y,?_roundf
  3192  0027A6  C058  F042         	movff	roundf@y+1,?_roundf+1
  3193  0027AA  C059  F043         	movff	roundf@y+2,?_roundf+2
  3194  0027AE  C05A  F044         	movff	roundf@y+3,?_roundf+3
  3195  0027B2                     l1419:
  3196  0027B2  0012               	return		;funcret
  3197  0027B4                     __end_of_roundf:
  3198                           	callstack 0
  3199                           
  3200 ;; *************** function ___flsub *****************
  3201 ;; Defined at:
  3202 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\sprcadd.c"
  3203 ;; Parameters:    Size  Location     Type
  3204 ;;  b               4   16[COMRAM] float 
  3205 ;;  a               4   20[COMRAM] float 
  3206 ;; Auto vars:     Size  Location     Type
  3207 ;;		None
  3208 ;; Return value:  Size  Location     Type
  3209 ;;                  4   16[COMRAM] float 
  3210 ;; Registers used:
  3211 ;;		wreg, status,2, status,0, cstack
  3212 ;; Tracked objects:
  3213 ;;		On entry : 0/0
  3214 ;;		On exit  : 0/0
  3215 ;;		Unchanged: 0/0
  3216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3217 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3218 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3219 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3220 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3221 ;;Total ram usage:        8 bytes
  3222 ;; Hardware stack levels used: 1
  3223 ;; Hardware stack levels required when called: 1
  3224 ;; This function calls:
  3225 ;;		___fladd
  3226 ;; This function is called by:
  3227 ;;		_roundf
  3228 ;; This function uses a non-reentrant model
  3229 ;;
  3230                           
  3231                           	psect	text5
  3232  004A54                     __ptext5:
  3233                           	callstack 0
  3234  004A54                     ___flsub:
  3235                           	callstack 25
  3236  004A54  0E00               	movlw	0
  3237  004A56  1A15               	xorwf	___flsub@a^0,f,c
  3238  004A58  0E00               	movlw	0
  3239  004A5A  1A16               	xorwf	(___flsub@a+1)^0,f,c
  3240  004A5C  0E00               	movlw	0
  3241  004A5E  1A17               	xorwf	(___flsub@a+2)^0,f,c
  3242  004A60  0E80               	movlw	128
  3243  004A62  1A18               	xorwf	(___flsub@a+3)^0,f,c
  3244  004A64  C011  F001         	movff	___flsub@b,___fladd@b
  3245  004A68  C012  F002         	movff	___flsub@b+1,___fladd@b+1
  3246  004A6C  C013  F003         	movff	___flsub@b+2,___fladd@b+2
  3247  004A70  C014  F004         	movff	___flsub@b+3,___fladd@b+3
  3248  004A74  C015  F005         	movff	___flsub@a,___fladd@a
  3249  004A78  C016  F006         	movff	___flsub@a+1,___fladd@a+1
  3250  004A7C  C017  F007         	movff	___flsub@a+2,___fladd@a+2
  3251  004A80  C018  F008         	movff	___flsub@a+3,___fladd@a+3
  3252  004A84  EC8E  F00D         	call	___fladd	;wreg free
  3253  004A88  C001  F011         	movff	?___fladd,?___flsub
  3254  004A8C  C002  F012         	movff	?___fladd+1,?___flsub+1
  3255  004A90  C003  F013         	movff	?___fladd+2,?___flsub+2
  3256  004A94  C004  F014         	movff	?___fladd+3,?___flsub+3
  3257  004A98  0012               	return		;funcret
  3258  004A9A                     __end_of___flsub:
  3259                           	callstack 0
  3260                           
  3261 ;; *************** function ___fladd *****************
  3262 ;; Defined at:
  3263 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\sprcadd.c"
  3264 ;; Parameters:    Size  Location     Type
  3265 ;;  b               4    0[COMRAM] float 
  3266 ;;  a               4    4[COMRAM] float 
  3267 ;; Auto vars:     Size  Location     Type
  3268 ;;  grs             1   15[COMRAM] unsigned char 
  3269 ;;  bexp            1   14[COMRAM] unsigned char 
  3270 ;;  aexp            1   13[COMRAM] unsigned char 
  3271 ;;  signs           1   12[COMRAM] unsigned char 
  3272 ;; Return value:  Size  Location     Type
  3273 ;;                  4    0[COMRAM] unsigned char 
  3274 ;; Registers used:
  3275 ;;		wreg, status,2, status,0
  3276 ;; Tracked objects:
  3277 ;;		On entry : 0/0
  3278 ;;		On exit  : 0/0
  3279 ;;		Unchanged: 0/0
  3280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3281 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3282 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3283 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3284 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3285 ;;Total ram usage:       16 bytes
  3286 ;; Hardware stack levels used: 1
  3287 ;; This function calls:
  3288 ;;		Nothing
  3289 ;; This function is called by:
  3290 ;;		___flsub
  3291 ;;		_roundf
  3292 ;; This function uses a non-reentrant model
  3293 ;;
  3294                           
  3295                           	psect	text6
  3296  001B1C                     __ptext6:
  3297                           	callstack 0
  3298  001B1C                     ___fladd:
  3299                           	callstack 25
  3300  001B1C  5004               	movf	(___fladd@b+3)^0,w,c
  3301  001B1E  0B80               	andlw	128
  3302  001B20  6E0D               	movwf	___fladd@signs^0,c
  3303  001B22  5004               	movf	(___fladd@b+3)^0,w,c
  3304  001B24  2404               	addwf	(___fladd@b+3)^0,w,c
  3305  001B26  6E0F               	movwf	___fladd@bexp^0,c
  3306  001B28  AE03               	btfss	(___fladd@b+2)^0,7,c
  3307  001B2A  EF99  F00D         	goto	u2821
  3308  001B2E  EF9B  F00D         	goto	u2820
  3309  001B32                     u2821:
  3310  001B32  EF9C  F00D         	goto	l3394
  3311  001B36                     u2820:
  3312  001B36  800F               	bsf	___fladd@bexp^0,0,c
  3313  001B38                     l3394:
  3314  001B38  500F               	movf	___fladd@bexp^0,w,c
  3315  001B3A  B4D8               	btfsc	status,2,c
  3316  001B3C  EFA2  F00D         	goto	u2831
  3317  001B40  EFA4  F00D         	goto	u2830
  3318  001B44                     u2831:
  3319  001B44  EFB9  F00D         	goto	l3404
  3320  001B48                     u2830:
  3321  001B48  280F               	incf	___fladd@bexp^0,w,c
  3322  001B4A  A4D8               	btfss	status,2,c
  3323  001B4C  EFAA  F00D         	goto	u2841
  3324  001B50  EFAC  F00D         	goto	u2840
  3325  001B54                     u2841:
  3326  001B54  EFB4  F00D         	goto	l3400
  3327  001B58                     u2840:
  3328  001B58  0E00               	movlw	0
  3329  001B5A  6E01               	movwf	___fladd@b^0,c
  3330  001B5C  0E00               	movlw	0
  3331  001B5E  6E02               	movwf	(___fladd@b+1)^0,c
  3332  001B60  0E00               	movlw	0
  3333  001B62  6E03               	movwf	(___fladd@b+2)^0,c
  3334  001B64  0E00               	movlw	0
  3335  001B66  6E04               	movwf	(___fladd@b+3)^0,c
  3336  001B68                     l3400:
  3337  001B68  8E03               	bsf	(___fladd@b+2)^0,7,c
  3338  001B6A  0E00               	movlw	0
  3339  001B6C  6E04               	movwf	(___fladd@b+3)^0,c
  3340  001B6E  EFC1  F00D         	goto	l3406
  3341  001B72                     l3404:
  3342  001B72  0E00               	movlw	0
  3343  001B74  6E01               	movwf	___fladd@b^0,c
  3344  001B76  0E00               	movlw	0
  3345  001B78  6E02               	movwf	(___fladd@b+1)^0,c
  3346  001B7A  0E00               	movlw	0
  3347  001B7C  6E03               	movwf	(___fladd@b+2)^0,c
  3348  001B7E  0E00               	movlw	0
  3349  001B80  6E04               	movwf	(___fladd@b+3)^0,c
  3350  001B82                     l3406:
  3351  001B82  5008               	movf	(___fladd@a+3)^0,w,c
  3352  001B84  0B80               	andlw	128
  3353  001B86  6E0E               	movwf	___fladd@aexp^0,c
  3354  001B88  500D               	movf	___fladd@signs^0,w,c
  3355  001B8A  180E               	xorwf	___fladd@aexp^0,w,c
  3356  001B8C  B4D8               	btfsc	status,2,c
  3357  001B8E  EFCB  F00D         	goto	u2851
  3358  001B92  EFCD  F00D         	goto	u2850
  3359  001B96                     u2851:
  3360  001B96  EFCE  F00D         	goto	l3412
  3361  001B9A                     u2850:
  3362  001B9A  8C0D               	bsf	___fladd@signs^0,6,c
  3363  001B9C                     l3412:
  3364  001B9C  5008               	movf	(___fladd@a+3)^0,w,c
  3365  001B9E  2408               	addwf	(___fladd@a+3)^0,w,c
  3366  001BA0  6E0E               	movwf	___fladd@aexp^0,c
  3367  001BA2  AE07               	btfss	(___fladd@a+2)^0,7,c
  3368  001BA4  EFD6  F00D         	goto	u2861
  3369  001BA8  EFD8  F00D         	goto	u2860
  3370  001BAC                     u2861:
  3371  001BAC  EFD9  F00D         	goto	l3418
  3372  001BB0                     u2860:
  3373  001BB0  800E               	bsf	___fladd@aexp^0,0,c
  3374  001BB2                     l3418:
  3375  001BB2  500E               	movf	___fladd@aexp^0,w,c
  3376  001BB4  B4D8               	btfsc	status,2,c
  3377  001BB6  EFDF  F00D         	goto	u2871
  3378  001BBA  EFE1  F00D         	goto	u2870
  3379  001BBE                     u2871:
  3380  001BBE  EFF6  F00D         	goto	l3428
  3381  001BC2                     u2870:
  3382  001BC2  280E               	incf	___fladd@aexp^0,w,c
  3383  001BC4  A4D8               	btfss	status,2,c
  3384  001BC6  EFE7  F00D         	goto	u2881
  3385  001BCA  EFE9  F00D         	goto	u2880
  3386  001BCE                     u2881:
  3387  001BCE  EFF1  F00D         	goto	l3424
  3388  001BD2                     u2880:
  3389  001BD2  0E00               	movlw	0
  3390  001BD4  6E05               	movwf	___fladd@a^0,c
  3391  001BD6  0E00               	movlw	0
  3392  001BD8  6E06               	movwf	(___fladd@a+1)^0,c
  3393  001BDA  0E00               	movlw	0
  3394  001BDC  6E07               	movwf	(___fladd@a+2)^0,c
  3395  001BDE  0E00               	movlw	0
  3396  001BE0  6E08               	movwf	(___fladd@a+3)^0,c
  3397  001BE2                     l3424:
  3398  001BE2  8E07               	bsf	(___fladd@a+2)^0,7,c
  3399  001BE4  0E00               	movlw	0
  3400  001BE6  6E08               	movwf	(___fladd@a+3)^0,c
  3401  001BE8  EFFE  F00D         	goto	l3430
  3402  001BEC                     l3428:
  3403  001BEC  0E00               	movlw	0
  3404  001BEE  6E05               	movwf	___fladd@a^0,c
  3405  001BF0  0E00               	movlw	0
  3406  001BF2  6E06               	movwf	(___fladd@a+1)^0,c
  3407  001BF4  0E00               	movlw	0
  3408  001BF6  6E07               	movwf	(___fladd@a+2)^0,c
  3409  001BF8  0E00               	movlw	0
  3410  001BFA  6E08               	movwf	(___fladd@a+3)^0,c
  3411  001BFC                     l3430:
  3412  001BFC  500F               	movf	___fladd@bexp^0,w,c
  3413  001BFE  5C0E               	subwf	___fladd@aexp^0,w,c
  3414  001C00  B0D8               	btfsc	status,0,c
  3415  001C02  EF05  F00E         	goto	u2891
  3416  001C06  EF07  F00E         	goto	u2890
  3417  001C0A                     u2891:
  3418  001C0A  EF2E  F00E         	goto	l3466
  3419  001C0E                     u2890:
  3420  001C0E  AC0D               	btfss	___fladd@signs^0,6,c
  3421  001C10  EF0C  F00E         	goto	u2901
  3422  001C14  EF0E  F00E         	goto	u2900
  3423  001C18                     u2901:
  3424  001C18  EF10  F00E         	goto	l3436
  3425  001C1C                     u2900:
  3426  001C1C  0E80               	movlw	128
  3427  001C1E  1A0D               	xorwf	___fladd@signs^0,f,c
  3428  001C20                     l3436:
  3429  001C20  C00F  F010         	movff	___fladd@bexp,___fladd@grs
  3430  001C24  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  3431  001C28  C010  F00E         	movff	___fladd@grs,___fladd@aexp
  3432  001C2C  C001  F010         	movff	___fladd@b,___fladd@grs
  3433  001C30  C005  F001         	movff	___fladd@a,___fladd@b
  3434  001C34  C010  F005         	movff	___fladd@grs,___fladd@a
  3435  001C38  C002  F010         	movff	___fladd@b+1,___fladd@grs
  3436  001C3C  C006  F002         	movff	___fladd@a+1,___fladd@b+1
  3437  001C40  C010  F006         	movff	___fladd@grs,___fladd@a+1
  3438  001C44  C003  F010         	movff	___fladd@b+2,___fladd@grs
  3439  001C48  C007  F003         	movff	___fladd@a+2,___fladd@b+2
  3440  001C4C  C010  F007         	movff	___fladd@grs,___fladd@a+2
  3441  001C50  C004  F010         	movff	___fladd@b+3,___fladd@grs
  3442  001C54  C008  F004         	movff	___fladd@a+3,___fladd@b+3
  3443  001C58  C010  F008         	movff	___fladd@grs,___fladd@a+3
  3444  001C5C                     l3466:
  3445  001C5C  0E00               	movlw	0
  3446  001C5E  6E10               	movwf	___fladd@grs^0,c
  3447  001C60  500F               	movf	___fladd@bexp^0,w,c
  3448  001C62  C00E  F009         	movff	___fladd@aexp,??___fladd
  3449  001C66  6A0A               	clrf	(??___fladd+1)^0,c
  3450  001C68  5E09               	subwf	??___fladd^0,f,c
  3451  001C6A  0E00               	movlw	0
  3452  001C6C  5A0A               	subwfb	(??___fladd+1)^0,f,c
  3453  001C6E  BE0A               	btfsc	(??___fladd+1)^0,7,c
  3454  001C70  EF43  F00E         	goto	u2911
  3455  001C74  500A               	movf	(??___fladd+1)^0,w,c
  3456  001C76  E109               	bnz	u2910
  3457  001C78  0E1A               	movlw	26
  3458  001C7A  5C09               	subwf	??___fladd^0,w,c
  3459  001C7C  A0D8               	btfss	status,0,c
  3460  001C7E  EF43  F00E         	goto	u2911
  3461  001C82  EF45  F00E         	goto	u2910
  3462  001C86                     u2911:
  3463  001C86  EF7C  F00E         	goto	l1155
  3464  001C8A                     u2910:
  3465  001C8A  5001               	movf	___fladd@b^0,w,c
  3466  001C8C  1002               	iorwf	(___fladd@b+1)^0,w,c
  3467  001C8E  1003               	iorwf	(___fladd@b+2)^0,w,c
  3468  001C90  1004               	iorwf	(___fladd@b+3)^0,w,c
  3469  001C92  A4D8               	btfss	status,2,c
  3470  001C94  EF4E  F00E         	goto	u2921
  3471  001C98  EF51  F00E         	goto	u2920
  3472  001C9C                     u2921:
  3473  001C9C  0E01               	movlw	1
  3474  001C9E  EF52  F00E         	goto	u2930
  3475  001CA2                     u2920:
  3476  001CA2  0E00               	movlw	0
  3477  001CA4                     u2930:
  3478  001CA4  6E10               	movwf	___fladd@grs^0,c
  3479  001CA6  0E00               	movlw	0
  3480  001CA8  6E01               	movwf	___fladd@b^0,c
  3481  001CAA  0E00               	movlw	0
  3482  001CAC  6E02               	movwf	(___fladd@b+1)^0,c
  3483  001CAE  0E00               	movlw	0
  3484  001CB0  6E03               	movwf	(___fladd@b+2)^0,c
  3485  001CB2  0E00               	movlw	0
  3486  001CB4  6E04               	movwf	(___fladd@b+3)^0,c
  3487  001CB6  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  3488  001CBA  EF85  F00E         	goto	l1154
  3489  001CBE                     l1156:
  3490  001CBE  A010               	btfss	___fladd@grs^0,0,c
  3491  001CC0  EF64  F00E         	goto	u2941
  3492  001CC4  EF66  F00E         	goto	u2940
  3493  001CC8                     u2941:
  3494  001CC8  EF6C  F00E         	goto	l3478
  3495  001CCC                     u2940:
  3496  001CCC  90D8               	bcf	status,0,c
  3497  001CCE  3010               	rrcf	___fladd@grs^0,w,c
  3498  001CD0  0901               	iorlw	1
  3499  001CD2  6E10               	movwf	___fladd@grs^0,c
  3500  001CD4  EF6E  F00E         	goto	l3480
  3501  001CD8                     l3478:
  3502  001CD8  90D8               	bcf	status,0,c
  3503  001CDA  3210               	rrcf	___fladd@grs^0,f,c
  3504  001CDC                     l3480:
  3505  001CDC  A001               	btfss	___fladd@b^0,0,c
  3506  001CDE  EF73  F00E         	goto	u2951
  3507  001CE2  EF75  F00E         	goto	u2950
  3508  001CE6                     u2951:
  3509  001CE6  EF76  F00E         	goto	l3484
  3510  001CEA                     u2950:
  3511  001CEA  8E10               	bsf	___fladd@grs^0,7,c
  3512  001CEC                     l3484:
  3513  001CEC  3404               	rlcf	(___fladd@b+3)^0,w,c
  3514  001CEE  3204               	rrcf	(___fladd@b+3)^0,f,c
  3515  001CF0  3203               	rrcf	(___fladd@b+2)^0,f,c
  3516  001CF2  3202               	rrcf	(___fladd@b+1)^0,f,c
  3517  001CF4  3201               	rrcf	___fladd@b^0,f,c
  3518  001CF6  2A0F               	incf	___fladd@bexp^0,f,c
  3519  001CF8                     l1155:
  3520  001CF8  500E               	movf	___fladd@aexp^0,w,c
  3521  001CFA  5C0F               	subwf	___fladd@bexp^0,w,c
  3522  001CFC  A0D8               	btfss	status,0,c
  3523  001CFE  EF83  F00E         	goto	u2961
  3524  001D02  EF85  F00E         	goto	u2960
  3525  001D06                     u2961:
  3526  001D06  EF5F  F00E         	goto	l1156
  3527  001D0A                     u2960:
  3528  001D0A                     l1154:
  3529  001D0A  BC0D               	btfsc	___fladd@signs^0,6,c
  3530  001D0C  EF8A  F00E         	goto	u2971
  3531  001D10  EF8C  F00E         	goto	u2970
  3532  001D14                     u2971:
  3533  001D14  EFCC  F00E         	goto	l3512
  3534  001D18                     u2970:
  3535  001D18  500F               	movf	___fladd@bexp^0,w,c
  3536  001D1A  A4D8               	btfss	status,2,c
  3537  001D1C  EF92  F00E         	goto	u2981
  3538  001D20  EF94  F00E         	goto	u2980
  3539  001D24                     u2981:
  3540  001D24  EF9E  F00E         	goto	l3494
  3541  001D28                     u2980:
  3542  001D28  0E00               	movlw	0
  3543  001D2A  6E01               	movwf	?___fladd^0,c
  3544  001D2C  0E00               	movlw	0
  3545  001D2E  6E02               	movwf	(?___fladd+1)^0,c
  3546  001D30  0E00               	movlw	0
  3547  001D32  6E03               	movwf	(?___fladd+2)^0,c
  3548  001D34  0E00               	movlw	0
  3549  001D36  6E04               	movwf	(?___fladd+3)^0,c
  3550  001D38  EFED  F00F         	goto	l1163
  3551  001D3C                     l3494:
  3552  001D3C  5005               	movf	___fladd@a^0,w,c
  3553  001D3E  2601               	addwf	___fladd@b^0,f,c
  3554  001D40  5006               	movf	(___fladd@a+1)^0,w,c
  3555  001D42  2202               	addwfc	(___fladd@b+1)^0,f,c
  3556  001D44  5007               	movf	(___fladd@a+2)^0,w,c
  3557  001D46  2203               	addwfc	(___fladd@b+2)^0,f,c
  3558  001D48  5008               	movf	(___fladd@a+3)^0,w,c
  3559  001D4A  2204               	addwfc	(___fladd@b+3)^0,f,c
  3560  001D4C  A004               	btfss	(___fladd@b+3)^0,0,c
  3561  001D4E  EFAB  F00E         	goto	u2991
  3562  001D52  EFAD  F00E         	goto	u2990
  3563  001D56                     u2991:
  3564  001D56  EF59  F00F         	goto	l3548
  3565  001D5A                     u2990:
  3566  001D5A  A010               	btfss	___fladd@grs^0,0,c
  3567  001D5C  EFB2  F00E         	goto	u3001
  3568  001D60  EFB4  F00E         	goto	u3000
  3569  001D64                     u3001:
  3570  001D64  EFBA  F00E         	goto	l3502
  3571  001D68                     u3000:
  3572  001D68  90D8               	bcf	status,0,c
  3573  001D6A  3010               	rrcf	___fladd@grs^0,w,c
  3574  001D6C  0901               	iorlw	1
  3575  001D6E  6E10               	movwf	___fladd@grs^0,c
  3576  001D70  EFBC  F00E         	goto	l3504
  3577  001D74                     l3502:
  3578  001D74  90D8               	bcf	status,0,c
  3579  001D76  3210               	rrcf	___fladd@grs^0,f,c
  3580  001D78                     l3504:
  3581  001D78  A001               	btfss	___fladd@b^0,0,c
  3582  001D7A  EFC1  F00E         	goto	u3011
  3583  001D7E  EFC3  F00E         	goto	u3010
  3584  001D82                     u3011:
  3585  001D82  EFC4  F00E         	goto	l3508
  3586  001D86                     u3010:
  3587  001D86  8E10               	bsf	___fladd@grs^0,7,c
  3588  001D88                     l3508:
  3589  001D88  3404               	rlcf	(___fladd@b+3)^0,w,c
  3590  001D8A  3204               	rrcf	(___fladd@b+3)^0,f,c
  3591  001D8C  3203               	rrcf	(___fladd@b+2)^0,f,c
  3592  001D8E  3202               	rrcf	(___fladd@b+1)^0,f,c
  3593  001D90  3201               	rrcf	___fladd@b^0,f,c
  3594  001D92  2A0F               	incf	___fladd@bexp^0,f,c
  3595  001D94  EF59  F00F         	goto	l3548
  3596  001D98                     l3512:
  3597  001D98  5005               	movf	___fladd@a^0,w,c
  3598  001D9A  5C01               	subwf	___fladd@b^0,w,c
  3599  001D9C  5006               	movf	(___fladd@a+1)^0,w,c
  3600  001D9E  5802               	subwfb	(___fladd@b+1)^0,w,c
  3601  001DA0  5007               	movf	(___fladd@a+2)^0,w,c
  3602  001DA2  5803               	subwfb	(___fladd@b+2)^0,w,c
  3603  001DA4  5004               	movf	(___fladd@b+3)^0,w,c
  3604  001DA6  0A80               	xorlw	128
  3605  001DA8  6E09               	movwf	??___fladd^0,c
  3606  001DAA  5008               	movf	(___fladd@a+3)^0,w,c
  3607  001DAC  0A80               	xorlw	128
  3608  001DAE  5809               	subwfb	??___fladd^0,w,c
  3609  001DB0  B0D8               	btfsc	status,0,c
  3610  001DB2  EFDD  F00E         	goto	u3021
  3611  001DB6  EFDF  F00E         	goto	u3020
  3612  001DBA                     u3021:
  3613  001DBA  EF0A  F00F         	goto	l3522
  3614  001DBE                     u3020:
  3615  001DBE  5001               	movf	___fladd@b^0,w,c
  3616  001DC0  5C05               	subwf	___fladd@a^0,w,c
  3617  001DC2  6E09               	movwf	??___fladd^0,c
  3618  001DC4  5002               	movf	(___fladd@b+1)^0,w,c
  3619  001DC6  5806               	subwfb	(___fladd@a+1)^0,w,c
  3620  001DC8  6E0A               	movwf	(??___fladd+1)^0,c
  3621  001DCA  5003               	movf	(___fladd@b+2)^0,w,c
  3622  001DCC  5807               	subwfb	(___fladd@a+2)^0,w,c
  3623  001DCE  6E0B               	movwf	(??___fladd+2)^0,c
  3624  001DD0  5004               	movf	(___fladd@b+3)^0,w,c
  3625  001DD2  5808               	subwfb	(___fladd@a+3)^0,w,c
  3626  001DD4  6E0C               	movwf	(??___fladd+3)^0,c
  3627  001DD6  0EFF               	movlw	255
  3628  001DD8  2409               	addwf	??___fladd^0,w,c
  3629  001DDA  6E01               	movwf	___fladd@b^0,c
  3630  001DDC  0EFF               	movlw	255
  3631  001DDE  200A               	addwfc	(??___fladd+1)^0,w,c
  3632  001DE0  6E02               	movwf	(___fladd@b+1)^0,c
  3633  001DE2  0EFF               	movlw	255
  3634  001DE4  200B               	addwfc	(??___fladd+2)^0,w,c
  3635  001DE6  6E03               	movwf	(___fladd@b+2)^0,c
  3636  001DE8  0EFF               	movlw	255
  3637  001DEA  200C               	addwfc	(??___fladd+3)^0,w,c
  3638  001DEC  6E04               	movwf	(___fladd@b+3)^0,c
  3639  001DEE  0E80               	movlw	128
  3640  001DF0  1A0D               	xorwf	___fladd@signs^0,f,c
  3641  001DF2  6C10               	negf	___fladd@grs^0,c
  3642  001DF4  5010               	movf	___fladd@grs^0,w,c
  3643  001DF6  A4D8               	btfss	status,2,c
  3644  001DF8  EF00  F00F         	goto	u3031
  3645  001DFC  EF02  F00F         	goto	u3030
  3646  001E00                     u3031:
  3647  001E00  EF12  F00F         	goto	l1171
  3648  001E04                     u3030:
  3649  001E04  0E01               	movlw	1
  3650  001E06  2601               	addwf	___fladd@b^0,f,c
  3651  001E08  0E00               	movlw	0
  3652  001E0A  2202               	addwfc	(___fladd@b+1)^0,f,c
  3653  001E0C  2203               	addwfc	(___fladd@b+2)^0,f,c
  3654  001E0E  2204               	addwfc	(___fladd@b+3)^0,f,c
  3655  001E10  EF12  F00F         	goto	l1171
  3656  001E14                     l3522:
  3657  001E14  5005               	movf	___fladd@a^0,w,c
  3658  001E16  5E01               	subwf	___fladd@b^0,f,c
  3659  001E18  5006               	movf	(___fladd@a+1)^0,w,c
  3660  001E1A  5A02               	subwfb	(___fladd@b+1)^0,f,c
  3661  001E1C  5007               	movf	(___fladd@a+2)^0,w,c
  3662  001E1E  5A03               	subwfb	(___fladd@b+2)^0,f,c
  3663  001E20  5008               	movf	(___fladd@a+3)^0,w,c
  3664  001E22  5A04               	subwfb	(___fladd@b+3)^0,f,c
  3665  001E24                     l1171:
  3666  001E24  5001               	movf	___fladd@b^0,w,c
  3667  001E26  1002               	iorwf	(___fladd@b+1)^0,w,c
  3668  001E28  1003               	iorwf	(___fladd@b+2)^0,w,c
  3669  001E2A  1004               	iorwf	(___fladd@b+3)^0,w,c
  3670  001E2C  A4D8               	btfss	status,2,c
  3671  001E2E  EF1B  F00F         	goto	u3041
  3672  001E32  EF1D  F00F         	goto	u3040
  3673  001E36                     u3041:
  3674  001E36  EF52  F00F         	goto	l3546
  3675  001E3A                     u3040:
  3676  001E3A  5010               	movf	___fladd@grs^0,w,c
  3677  001E3C  A4D8               	btfss	status,2,c
  3678  001E3E  EF23  F00F         	goto	u3051
  3679  001E42  EF25  F00F         	goto	u3050
  3680  001E46                     u3051:
  3681  001E46  EF52  F00F         	goto	l3546
  3682  001E4A                     u3050:
  3683  001E4A  0E00               	movlw	0
  3684  001E4C  6E01               	movwf	?___fladd^0,c
  3685  001E4E  0E00               	movlw	0
  3686  001E50  6E02               	movwf	(?___fladd+1)^0,c
  3687  001E52  0E00               	movlw	0
  3688  001E54  6E03               	movwf	(?___fladd+2)^0,c
  3689  001E56  0E00               	movlw	0
  3690  001E58  6E04               	movwf	(?___fladd+3)^0,c
  3691  001E5A  EFED  F00F         	goto	l1163
  3692  001E5E                     l3530:
  3693  001E5E  90D8               	bcf	status,0,c
  3694  001E60  3601               	rlcf	___fladd@b^0,f,c
  3695  001E62  3602               	rlcf	(___fladd@b+1)^0,f,c
  3696  001E64  3603               	rlcf	(___fladd@b+2)^0,f,c
  3697  001E66  3604               	rlcf	(___fladd@b+3)^0,f,c
  3698  001E68  AE10               	btfss	___fladd@grs^0,7,c
  3699  001E6A  EF39  F00F         	goto	u3061
  3700  001E6E  EF3B  F00F         	goto	u3060
  3701  001E72                     u3061:
  3702  001E72  EF3C  F00F         	goto	l3536
  3703  001E76                     u3060:
  3704  001E76  8001               	bsf	___fladd@b^0,0,c
  3705  001E78                     l3536:
  3706  001E78  A010               	btfss	___fladd@grs^0,0,c
  3707  001E7A  EF41  F00F         	goto	u3071
  3708  001E7E  EF43  F00F         	goto	u3070
  3709  001E82                     u3071:
  3710  001E82  EF47  F00F         	goto	l3540
  3711  001E86                     u3070:
  3712  001E86  80D8               	bsf	status,0,c
  3713  001E88  3610               	rlcf	___fladd@grs^0,f,c
  3714  001E8A  EF49  F00F         	goto	l3542
  3715  001E8E                     l3540:
  3716  001E8E  90D8               	bcf	status,0,c
  3717  001E90  3610               	rlcf	___fladd@grs^0,f,c
  3718  001E92                     l3542:
  3719  001E92  500F               	movf	___fladd@bexp^0,w,c
  3720  001E94  B4D8               	btfsc	status,2,c
  3721  001E96  EF4F  F00F         	goto	u3081
  3722  001E9A  EF51  F00F         	goto	u3080
  3723  001E9E                     u3081:
  3724  001E9E  EF52  F00F         	goto	l3546
  3725  001EA2                     u3080:
  3726  001EA2  060F               	decf	___fladd@bexp^0,f,c
  3727  001EA4                     l3546:
  3728  001EA4  AE03               	btfss	(___fladd@b+2)^0,7,c
  3729  001EA6  EF57  F00F         	goto	u3091
  3730  001EAA  EF59  F00F         	goto	u3090
  3731  001EAE                     u3091:
  3732  001EAE  EF2F  F00F         	goto	l3530
  3733  001EB2                     u3090:
  3734  001EB2                     l3548:
  3735  001EB2  0E00               	movlw	0
  3736  001EB4  6E0E               	movwf	___fladd@aexp^0,c
  3737  001EB6  AE10               	btfss	___fladd@grs^0,7,c
  3738  001EB8  EF60  F00F         	goto	u3101
  3739  001EBC  EF62  F00F         	goto	u3100
  3740  001EC0                     u3101:
  3741  001EC0  EF7A  F00F         	goto	l1180
  3742  001EC4                     u3100:
  3743  001EC4  C010  F009         	movff	___fladd@grs,??___fladd
  3744  001EC8  0E7F               	movlw	127
  3745  001ECA  1609               	andwf	??___fladd^0,f,c
  3746  001ECC  B4D8               	btfsc	status,2,c
  3747  001ECE  EF6B  F00F         	goto	u3111
  3748  001ED2  EF6D  F00F         	goto	u3110
  3749  001ED6                     u3111:
  3750  001ED6  EF71  F00F         	goto	l1181
  3751  001EDA                     u3110:
  3752  001EDA                     l3554:
  3753  001EDA  0E01               	movlw	1
  3754  001EDC  6E0E               	movwf	___fladd@aexp^0,c
  3755  001EDE  EF7A  F00F         	goto	l1180
  3756  001EE2                     l1181:
  3757  001EE2  A001               	btfss	___fladd@b^0,0,c
  3758  001EE4  EF76  F00F         	goto	u3121
  3759  001EE8  EF78  F00F         	goto	u3120
  3760  001EEC                     u3121:
  3761  001EEC  EF7A  F00F         	goto	l1180
  3762  001EF0                     u3120:
  3763  001EF0  EF6D  F00F         	goto	l3554
  3764  001EF4                     l1180:
  3765  001EF4  500E               	movf	___fladd@aexp^0,w,c
  3766  001EF6  B4D8               	btfsc	status,2,c
  3767  001EF8  EF80  F00F         	goto	u3131
  3768  001EFC  EF82  F00F         	goto	u3130
  3769  001F00                     u3131:
  3770  001F00  EFAD  F00F         	goto	l3566
  3771  001F04                     u3130:
  3772  001F04  0E01               	movlw	1
  3773  001F06  2601               	addwf	___fladd@b^0,f,c
  3774  001F08  0E00               	movlw	0
  3775  001F0A  2202               	addwfc	(___fladd@b+1)^0,f,c
  3776  001F0C  2203               	addwfc	(___fladd@b+2)^0,f,c
  3777  001F0E  2204               	addwfc	(___fladd@b+3)^0,f,c
  3778  001F10  A004               	btfss	(___fladd@b+3)^0,0,c
  3779  001F12  EF8D  F00F         	goto	u3141
  3780  001F16  EF8F  F00F         	goto	u3140
  3781  001F1A                     u3141:
  3782  001F1A  EFAD  F00F         	goto	l3566
  3783  001F1E                     u3140:
  3784  001F1E  C001  F009         	movff	___fladd@b,??___fladd
  3785  001F22  C002  F00A         	movff	___fladd@b+1,??___fladd+1
  3786  001F26  C003  F00B         	movff	___fladd@b+2,??___fladd+2
  3787  001F2A  C004  F00C         	movff	___fladd@b+3,??___fladd+3
  3788  001F2E  340C               	rlcf	(??___fladd+3)^0,w,c
  3789  001F30  320C               	rrcf	(??___fladd+3)^0,f,c
  3790  001F32  320B               	rrcf	(??___fladd+2)^0,f,c
  3791  001F34  320A               	rrcf	(??___fladd+1)^0,f,c
  3792  001F36  3209               	rrcf	??___fladd^0,f,c
  3793  001F38  C009  F001         	movff	??___fladd,___fladd@b
  3794  001F3C  C00A  F002         	movff	??___fladd+1,___fladd@b+1
  3795  001F40  C00B  F003         	movff	??___fladd+2,___fladd@b+2
  3796  001F44  C00C  F004         	movff	??___fladd+3,___fladd@b+3
  3797  001F48  280F               	incf	___fladd@bexp^0,w,c
  3798  001F4A  B4D8               	btfsc	status,2,c
  3799  001F4C  EFAA  F00F         	goto	u3151
  3800  001F50  EFAC  F00F         	goto	u3150
  3801  001F54                     u3151:
  3802  001F54  EFAD  F00F         	goto	l3566
  3803  001F58                     u3150:
  3804  001F58  2A0F               	incf	___fladd@bexp^0,f,c
  3805  001F5A                     l3566:
  3806  001F5A  280F               	incf	___fladd@bexp^0,w,c
  3807  001F5C  B4D8               	btfsc	status,2,c
  3808  001F5E  EFB3  F00F         	goto	u3161
  3809  001F62  EFB5  F00F         	goto	u3160
  3810  001F66                     u3161:
  3811  001F66  EFBD  F00F         	goto	l3570
  3812  001F6A                     u3160:
  3813  001F6A  500F               	movf	___fladd@bexp^0,w,c
  3814  001F6C  A4D8               	btfss	status,2,c
  3815  001F6E  EFBB  F00F         	goto	u3171
  3816  001F72  EFBD  F00F         	goto	u3170
  3817  001F76                     u3171:
  3818  001F76  EFCF  F00F         	goto	l3574
  3819  001F7A                     u3170:
  3820  001F7A                     l3570:
  3821  001F7A  0E00               	movlw	0
  3822  001F7C  6E01               	movwf	___fladd@b^0,c
  3823  001F7E  0E00               	movlw	0
  3824  001F80  6E02               	movwf	(___fladd@b+1)^0,c
  3825  001F82  0E00               	movlw	0
  3826  001F84  6E03               	movwf	(___fladd@b+2)^0,c
  3827  001F86  0E00               	movlw	0
  3828  001F88  6E04               	movwf	(___fladd@b+3)^0,c
  3829  001F8A  500F               	movf	___fladd@bexp^0,w,c
  3830  001F8C  A4D8               	btfss	status,2,c
  3831  001F8E  EFCB  F00F         	goto	u3181
  3832  001F92  EFCD  F00F         	goto	u3180
  3833  001F96                     u3181:
  3834  001F96  EFCF  F00F         	goto	l3574
  3835  001F9A                     u3180:
  3836  001F9A  0E00               	movlw	0
  3837  001F9C  6E0D               	movwf	___fladd@signs^0,c
  3838  001F9E                     l3574:
  3839  001F9E  A00F               	btfss	___fladd@bexp^0,0,c
  3840  001FA0  EFD4  F00F         	goto	u3191
  3841  001FA4  EFD6  F00F         	goto	u3190
  3842  001FA8                     u3191:
  3843  001FA8  EFD9  F00F         	goto	l3578
  3844  001FAC                     u3190:
  3845  001FAC  8E03               	bsf	(___fladd@b+2)^0,7,c
  3846  001FAE  EFDA  F00F         	goto	l3580
  3847  001FB2                     l3578:
  3848  001FB2  9E03               	bcf	(___fladd@b+2)^0,7,c
  3849  001FB4                     l3580:
  3850  001FB4  90D8               	bcf	status,0,c
  3851  001FB6  300F               	rrcf	___fladd@bexp^0,w,c
  3852  001FB8  6E04               	movwf	(___fladd@b+3)^0,c
  3853  001FBA  AE0D               	btfss	___fladd@signs^0,7,c
  3854  001FBC  EFE2  F00F         	goto	u3201
  3855  001FC0  EFE4  F00F         	goto	u3200
  3856  001FC4                     u3201:
  3857  001FC4  EFE5  F00F         	goto	l3586
  3858  001FC8                     u3200:
  3859  001FC8  8E04               	bsf	(___fladd@b+3)^0,7,c
  3860  001FCA                     l3586:
  3861  001FCA  C001  F001         	movff	___fladd@b,?___fladd
  3862  001FCE  C002  F002         	movff	___fladd@b+1,?___fladd+1
  3863  001FD2  C003  F003         	movff	___fladd@b+2,?___fladd+2
  3864  001FD6  C004  F004         	movff	___fladd@b+3,?___fladd+3
  3865  001FDA                     l1163:
  3866  001FDA  0012               	return		;funcret
  3867  001FDC                     __end_of___fladd:
  3868                           	callstack 0
  3869                           
  3870 ;; *************** function ___flneg *****************
  3871 ;; Defined at:
  3872 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\flneg.c"
  3873 ;; Parameters:    Size  Location     Type
  3874 ;;  f1              4    0[COMRAM] unsigned char 
  3875 ;; Auto vars:     Size  Location     Type
  3876 ;;		None
  3877 ;; Return value:  Size  Location     Type
  3878 ;;                  4    0[COMRAM] unsigned char 
  3879 ;; Registers used:
  3880 ;;		wreg, status,2, status,0
  3881 ;; Tracked objects:
  3882 ;;		On entry : 0/0
  3883 ;;		On exit  : 0/0
  3884 ;;		Unchanged: 0/0
  3885 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3886 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3887 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3888 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3889 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3890 ;;Total ram usage:        4 bytes
  3891 ;; Hardware stack levels used: 1
  3892 ;; This function calls:
  3893 ;;		Nothing
  3894 ;; This function is called by:
  3895 ;;		_roundf
  3896 ;; This function uses a non-reentrant model
  3897 ;;
  3898                           
  3899                           	psect	text7
  3900  004CD8                     __ptext7:
  3901                           	callstack 0
  3902  004CD8                     ___flneg:
  3903                           	callstack 26
  3904  004CD8  5001               	movf	___flneg@f1^0,w,c
  3905  004CDA  1002               	iorwf	(___flneg@f1+1)^0,w,c
  3906  004CDC  1003               	iorwf	(___flneg@f1+2)^0,w,c
  3907  004CDE  1004               	iorwf	(___flneg@f1+3)^0,w,c
  3908  004CE0  B4D8               	btfsc	status,2,c
  3909  004CE2  EF75  F026         	goto	u3721
  3910  004CE6  EF77  F026         	goto	u3720
  3911  004CEA                     u3721:
  3912  004CEA  EF7F  F026         	goto	l3902
  3913  004CEE                     u3720:
  3914  004CEE  0E00               	movlw	0
  3915  004CF0  1A01               	xorwf	___flneg@f1^0,f,c
  3916  004CF2  0E00               	movlw	0
  3917  004CF4  1A02               	xorwf	(___flneg@f1+1)^0,f,c
  3918  004CF6  0E00               	movlw	0
  3919  004CF8  1A03               	xorwf	(___flneg@f1+2)^0,f,c
  3920  004CFA  0E80               	movlw	128
  3921  004CFC  1A04               	xorwf	(___flneg@f1+3)^0,f,c
  3922  004CFE                     l3902:
  3923  004CFE  C001  F001         	movff	___flneg@f1,?___flneg
  3924  004D02  C002  F002         	movff	___flneg@f1+1,?___flneg+1
  3925  004D06  C003  F003         	movff	___flneg@f1+2,?___flneg+2
  3926  004D0A  C004  F004         	movff	___flneg@f1+3,?___flneg+3
  3927  004D0E  0012               	return		;funcret
  3928  004D10                     __end_of___flneg:
  3929                           	callstack 0
  3930                           
  3931 ;; *************** function ___flmul *****************
  3932 ;; Defined at:
  3933 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\sprcmul.c"
  3934 ;; Parameters:    Size  Location     Type
  3935 ;;  b               4   39[COMRAM] unsigned char 
  3936 ;;  a               4   43[COMRAM] unsigned char 
  3937 ;; Auto vars:     Size  Location     Type
  3938 ;;  prod            4   58[COMRAM] struct .
  3939 ;;  grs             4   52[COMRAM] unsigned long 
  3940 ;;  temp            2   62[COMRAM] struct .
  3941 ;;  bexp            1   57[COMRAM] unsigned char 
  3942 ;;  aexp            1   56[COMRAM] unsigned char 
  3943 ;;  sign            1   51[COMRAM] unsigned char 
  3944 ;; Return value:  Size  Location     Type
  3945 ;;                  4   39[COMRAM] unsigned char 
  3946 ;; Registers used:
  3947 ;;		wreg, status,2, status,0, prodl, prodh
  3948 ;; Tracked objects:
  3949 ;;		On entry : 0/0
  3950 ;;		On exit  : 0/0
  3951 ;;		Unchanged: 0/0
  3952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3953 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3954 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3955 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3956 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3957 ;;Total ram usage:       25 bytes
  3958 ;; Hardware stack levels used: 1
  3959 ;; This function calls:
  3960 ;;		Nothing
  3961 ;; This function is called by:
  3962 ;;		_detect_color
  3963 ;;		_roundf
  3964 ;;		_check_color_reading
  3965 ;; This function uses a non-reentrant model
  3966 ;;
  3967                           
  3968                           	psect	text8
  3969  001FDC                     __ptext8:
  3970                           	callstack 0
  3971  001FDC                     ___flmul:
  3972                           	callstack 26
  3973  001FDC  502B               	movf	(___flmul@b+3)^0,w,c
  3974  001FDE  0B80               	andlw	128
  3975  001FE0  6E34               	movwf	___flmul@sign^0,c
  3976  001FE2  502B               	movf	(___flmul@b+3)^0,w,c
  3977  001FE4  242B               	addwf	(___flmul@b+3)^0,w,c
  3978  001FE6  6E3A               	movwf	___flmul@bexp^0,c
  3979  001FE8  AE2A               	btfss	(___flmul@b+2)^0,7,c
  3980  001FEA  EFF9  F00F         	goto	u3481
  3981  001FEE  EFFB  F00F         	goto	u3480
  3982  001FF2                     u3481:
  3983  001FF2  EFFC  F00F         	goto	l3746
  3984  001FF6                     u3480:
  3985  001FF6  803A               	bsf	___flmul@bexp^0,0,c
  3986  001FF8                     l3746:
  3987  001FF8  503A               	movf	___flmul@bexp^0,w,c
  3988  001FFA  B4D8               	btfsc	status,2,c
  3989  001FFC  EF02  F010         	goto	u3491
  3990  002000  EF04  F010         	goto	u3490
  3991  002004                     u3491:
  3992  002004  EF17  F010         	goto	l3754
  3993  002008                     u3490:
  3994  002008  283A               	incf	___flmul@bexp^0,w,c
  3995  00200A  A4D8               	btfss	status,2,c
  3996  00200C  EF0A  F010         	goto	u3501
  3997  002010  EF0C  F010         	goto	u3500
  3998  002014                     u3501:
  3999  002014  EF14  F010         	goto	l3752
  4000  002018                     u3500:
  4001  002018  0E00               	movlw	0
  4002  00201A  6E28               	movwf	___flmul@b^0,c
  4003  00201C  0E00               	movlw	0
  4004  00201E  6E29               	movwf	(___flmul@b+1)^0,c
  4005  002020  0E00               	movlw	0
  4006  002022  6E2A               	movwf	(___flmul@b+2)^0,c
  4007  002024  0E00               	movlw	0
  4008  002026  6E2B               	movwf	(___flmul@b+3)^0,c
  4009  002028                     l3752:
  4010  002028  8E2A               	bsf	(___flmul@b+2)^0,7,c
  4011  00202A  EF1F  F010         	goto	l3756
  4012  00202E                     l3754:
  4013  00202E  0E00               	movlw	0
  4014  002030  6E28               	movwf	___flmul@b^0,c
  4015  002032  0E00               	movlw	0
  4016  002034  6E29               	movwf	(___flmul@b+1)^0,c
  4017  002036  0E00               	movlw	0
  4018  002038  6E2A               	movwf	(___flmul@b+2)^0,c
  4019  00203A  0E00               	movlw	0
  4020  00203C  6E2B               	movwf	(___flmul@b+3)^0,c
  4021  00203E                     l3756:
  4022  00203E  502F               	movf	(___flmul@a+3)^0,w,c
  4023  002040  0B80               	andlw	128
  4024  002042  1A34               	xorwf	___flmul@sign^0,f,c
  4025  002044  502F               	movf	(___flmul@a+3)^0,w,c
  4026  002046  242F               	addwf	(___flmul@a+3)^0,w,c
  4027  002048  6E39               	movwf	___flmul@aexp^0,c
  4028  00204A  AE2E               	btfss	(___flmul@a+2)^0,7,c
  4029  00204C  EF2A  F010         	goto	u3511
  4030  002050  EF2C  F010         	goto	u3510
  4031  002054                     u3511:
  4032  002054  EF2D  F010         	goto	l3764
  4033  002058                     u3510:
  4034  002058  8039               	bsf	___flmul@aexp^0,0,c
  4035  00205A                     l3764:
  4036  00205A  5039               	movf	___flmul@aexp^0,w,c
  4037  00205C  B4D8               	btfsc	status,2,c
  4038  00205E  EF33  F010         	goto	u3521
  4039  002062  EF35  F010         	goto	u3520
  4040  002066                     u3521:
  4041  002066  EF48  F010         	goto	l3772
  4042  00206A                     u3520:
  4043  00206A  2839               	incf	___flmul@aexp^0,w,c
  4044  00206C  A4D8               	btfss	status,2,c
  4045  00206E  EF3B  F010         	goto	u3531
  4046  002072  EF3D  F010         	goto	u3530
  4047  002076                     u3531:
  4048  002076  EF45  F010         	goto	l3770
  4049  00207A                     u3530:
  4050  00207A  0E00               	movlw	0
  4051  00207C  6E2C               	movwf	___flmul@a^0,c
  4052  00207E  0E00               	movlw	0
  4053  002080  6E2D               	movwf	(___flmul@a+1)^0,c
  4054  002082  0E00               	movlw	0
  4055  002084  6E2E               	movwf	(___flmul@a+2)^0,c
  4056  002086  0E00               	movlw	0
  4057  002088  6E2F               	movwf	(___flmul@a+3)^0,c
  4058  00208A                     l3770:
  4059  00208A  8E2E               	bsf	(___flmul@a+2)^0,7,c
  4060  00208C  EF50  F010         	goto	l1240
  4061  002090                     l3772:
  4062  002090  0E00               	movlw	0
  4063  002092  6E2C               	movwf	___flmul@a^0,c
  4064  002094  0E00               	movlw	0
  4065  002096  6E2D               	movwf	(___flmul@a+1)^0,c
  4066  002098  0E00               	movlw	0
  4067  00209A  6E2E               	movwf	(___flmul@a+2)^0,c
  4068  00209C  0E00               	movlw	0
  4069  00209E  6E2F               	movwf	(___flmul@a+3)^0,c
  4070  0020A0                     l1240:
  4071  0020A0  5039               	movf	___flmul@aexp^0,w,c
  4072  0020A2  B4D8               	btfsc	status,2,c
  4073  0020A4  EF56  F010         	goto	u3541
  4074  0020A8  EF58  F010         	goto	u3540
  4075  0020AC                     u3541:
  4076  0020AC  EF60  F010         	goto	l3776
  4077  0020B0                     u3540:
  4078  0020B0  503A               	movf	___flmul@bexp^0,w,c
  4079  0020B2  A4D8               	btfss	status,2,c
  4080  0020B4  EF5E  F010         	goto	u3551
  4081  0020B8  EF60  F010         	goto	u3550
  4082  0020BC                     u3551:
  4083  0020BC  EF6A  F010         	goto	l3780
  4084  0020C0                     u3550:
  4085  0020C0                     l3776:
  4086  0020C0  0E00               	movlw	0
  4087  0020C2  6E28               	movwf	?___flmul^0,c
  4088  0020C4  0E00               	movlw	0
  4089  0020C6  6E29               	movwf	(?___flmul+1)^0,c
  4090  0020C8  0E00               	movlw	0
  4091  0020CA  6E2A               	movwf	(?___flmul+2)^0,c
  4092  0020CC  0E00               	movlw	0
  4093  0020CE  6E2B               	movwf	(?___flmul+3)^0,c
  4094  0020D0  EF02  F012         	goto	l1244
  4095  0020D4                     l3780:
  4096  0020D4  502E               	movf	(___flmul@a+2)^0,w,c
  4097  0020D6  0228               	mulwf	___flmul@b^0,c
  4098  0020D8  CFF3 F03F          	movff	prodl,___flmul@temp
  4099  0020DC  CFF4 F040          	movff	prodh,___flmul@temp+1
  4100  0020E0  503F               	movf	___flmul@temp^0,w,c
  4101  0020E2  6E35               	movwf	___flmul@grs^0,c
  4102  0020E4  6A36               	clrf	(___flmul@grs+1)^0,c
  4103  0020E6  6A37               	clrf	(___flmul@grs+2)^0,c
  4104  0020E8  6A38               	clrf	(___flmul@grs+3)^0,c
  4105  0020EA  5040               	movf	(___flmul@temp+1)^0,w,c
  4106  0020EC  6E3B               	movwf	___flmul@prod^0,c
  4107  0020EE  6A3C               	clrf	(___flmul@prod+1)^0,c
  4108  0020F0  6A3D               	clrf	(___flmul@prod+2)^0,c
  4109  0020F2  6A3E               	clrf	(___flmul@prod+3)^0,c
  4110  0020F4  502D               	movf	(___flmul@a+1)^0,w,c
  4111  0020F6  0229               	mulwf	(___flmul@b+1)^0,c
  4112  0020F8  CFF3 F03F          	movff	prodl,___flmul@temp
  4113  0020FC  CFF4 F040          	movff	prodh,___flmul@temp+1
  4114  002100  503F               	movf	___flmul@temp^0,w,c
  4115  002102  2635               	addwf	___flmul@grs^0,f,c
  4116  002104  0E00               	movlw	0
  4117  002106  2236               	addwfc	(___flmul@grs+1)^0,f,c
  4118  002108  2237               	addwfc	(___flmul@grs+2)^0,f,c
  4119  00210A  2238               	addwfc	(___flmul@grs+3)^0,f,c
  4120  00210C  5040               	movf	(___flmul@temp+1)^0,w,c
  4121  00210E  263B               	addwf	___flmul@prod^0,f,c
  4122  002110  0E00               	movlw	0
  4123  002112  223C               	addwfc	(___flmul@prod+1)^0,f,c
  4124  002114  223D               	addwfc	(___flmul@prod+2)^0,f,c
  4125  002116  223E               	addwfc	(___flmul@prod+3)^0,f,c
  4126  002118  502C               	movf	___flmul@a^0,w,c
  4127  00211A  022A               	mulwf	(___flmul@b+2)^0,c
  4128  00211C  CFF3 F03F          	movff	prodl,___flmul@temp
  4129  002120  CFF4 F040          	movff	prodh,___flmul@temp+1
  4130  002124  503F               	movf	___flmul@temp^0,w,c
  4131  002126  2635               	addwf	___flmul@grs^0,f,c
  4132  002128  0E00               	movlw	0
  4133  00212A  2236               	addwfc	(___flmul@grs+1)^0,f,c
  4134  00212C  2237               	addwfc	(___flmul@grs+2)^0,f,c
  4135  00212E  2238               	addwfc	(___flmul@grs+3)^0,f,c
  4136  002130  5040               	movf	(___flmul@temp+1)^0,w,c
  4137  002132  263B               	addwf	___flmul@prod^0,f,c
  4138  002134  0E00               	movlw	0
  4139  002136  223C               	addwfc	(___flmul@prod+1)^0,f,c
  4140  002138  223D               	addwfc	(___flmul@prod+2)^0,f,c
  4141  00213A  223E               	addwfc	(___flmul@prod+3)^0,f,c
  4142  00213C  C037  F038         	movff	___flmul@grs+2,___flmul@grs+3
  4143  002140  C036  F037         	movff	___flmul@grs+1,___flmul@grs+2
  4144  002144  C035  F036         	movff	___flmul@grs,___flmul@grs+1
  4145  002148  6A35               	clrf	___flmul@grs^0,c
  4146  00214A  502C               	movf	___flmul@a^0,w,c
  4147  00214C  0229               	mulwf	(___flmul@b+1)^0,c
  4148  00214E  CFF3 F03F          	movff	prodl,___flmul@temp
  4149  002152  CFF4 F040          	movff	prodh,___flmul@temp+1
  4150  002156  503F               	movf	___flmul@temp^0,w,c
  4151  002158  2635               	addwf	___flmul@grs^0,f,c
  4152  00215A  5040               	movf	(___flmul@temp+1)^0,w,c
  4153  00215C  2236               	addwfc	(___flmul@grs+1)^0,f,c
  4154  00215E  0E00               	movlw	0
  4155  002160  2237               	addwfc	(___flmul@grs+2)^0,f,c
  4156  002162  0E00               	movlw	0
  4157  002164  2238               	addwfc	(___flmul@grs+3)^0,f,c
  4158  002166  502D               	movf	(___flmul@a+1)^0,w,c
  4159  002168  0228               	mulwf	___flmul@b^0,c
  4160  00216A  CFF3 F03F          	movff	prodl,___flmul@temp
  4161  00216E  CFF4 F040          	movff	prodh,___flmul@temp+1
  4162  002172  503F               	movf	___flmul@temp^0,w,c
  4163  002174  2635               	addwf	___flmul@grs^0,f,c
  4164  002176  5040               	movf	(___flmul@temp+1)^0,w,c
  4165  002178  2236               	addwfc	(___flmul@grs+1)^0,f,c
  4166  00217A  0E00               	movlw	0
  4167  00217C  2237               	addwfc	(___flmul@grs+2)^0,f,c
  4168  00217E  0E00               	movlw	0
  4169  002180  2238               	addwfc	(___flmul@grs+3)^0,f,c
  4170  002182  C037  F038         	movff	___flmul@grs+2,___flmul@grs+3
  4171  002186  C036  F037         	movff	___flmul@grs+1,___flmul@grs+2
  4172  00218A  C035  F036         	movff	___flmul@grs,___flmul@grs+1
  4173  00218E  6A35               	clrf	___flmul@grs^0,c
  4174  002190  502C               	movf	___flmul@a^0,w,c
  4175  002192  0228               	mulwf	___flmul@b^0,c
  4176  002194  CFF3 F03F          	movff	prodl,___flmul@temp
  4177  002198  CFF4 F040          	movff	prodh,___flmul@temp+1
  4178  00219C  503F               	movf	___flmul@temp^0,w,c
  4179  00219E  2635               	addwf	___flmul@grs^0,f,c
  4180  0021A0  5040               	movf	(___flmul@temp+1)^0,w,c
  4181  0021A2  2236               	addwfc	(___flmul@grs+1)^0,f,c
  4182  0021A4  0E00               	movlw	0
  4183  0021A6  2237               	addwfc	(___flmul@grs+2)^0,f,c
  4184  0021A8  0E00               	movlw	0
  4185  0021AA  2238               	addwfc	(___flmul@grs+3)^0,f,c
  4186  0021AC  502E               	movf	(___flmul@a+2)^0,w,c
  4187  0021AE  0229               	mulwf	(___flmul@b+1)^0,c
  4188  0021B0  CFF3 F03F          	movff	prodl,___flmul@temp
  4189  0021B4  CFF4 F040          	movff	prodh,___flmul@temp+1
  4190  0021B8  503F               	movf	___flmul@temp^0,w,c
  4191  0021BA  263B               	addwf	___flmul@prod^0,f,c
  4192  0021BC  5040               	movf	(___flmul@temp+1)^0,w,c
  4193  0021BE  223C               	addwfc	(___flmul@prod+1)^0,f,c
  4194  0021C0  0E00               	movlw	0
  4195  0021C2  223D               	addwfc	(___flmul@prod+2)^0,f,c
  4196  0021C4  0E00               	movlw	0
  4197  0021C6  223E               	addwfc	(___flmul@prod+3)^0,f,c
  4198  0021C8  502D               	movf	(___flmul@a+1)^0,w,c
  4199  0021CA  022A               	mulwf	(___flmul@b+2)^0,c
  4200  0021CC  CFF3 F03F          	movff	prodl,___flmul@temp
  4201  0021D0  CFF4 F040          	movff	prodh,___flmul@temp+1
  4202  0021D4  503F               	movf	___flmul@temp^0,w,c
  4203  0021D6  263B               	addwf	___flmul@prod^0,f,c
  4204  0021D8  5040               	movf	(___flmul@temp+1)^0,w,c
  4205  0021DA  223C               	addwfc	(___flmul@prod+1)^0,f,c
  4206  0021DC  0E00               	movlw	0
  4207  0021DE  223D               	addwfc	(___flmul@prod+2)^0,f,c
  4208  0021E0  0E00               	movlw	0
  4209  0021E2  223E               	addwfc	(___flmul@prod+3)^0,f,c
  4210  0021E4  502E               	movf	(___flmul@a+2)^0,w,c
  4211  0021E6  022A               	mulwf	(___flmul@b+2)^0,c
  4212  0021E8  CFF3 F03F          	movff	prodl,___flmul@temp
  4213  0021EC  CFF4 F040          	movff	prodh,___flmul@temp+1
  4214  0021F0  503F               	movf	___flmul@temp^0,w,c
  4215  0021F2  6E30               	movwf	??___flmul^0,c
  4216  0021F4  5040               	movf	(___flmul@temp+1)^0,w,c
  4217  0021F6  6E31               	movwf	(??___flmul+1)^0,c
  4218  0021F8  6A32               	clrf	(??___flmul+2)^0,c
  4219  0021FA  6A33               	clrf	(??___flmul+3)^0,c
  4220  0021FC  C032  F033         	movff	??___flmul+2,??___flmul+3
  4221  002200  C031  F032         	movff	??___flmul+1,??___flmul+2
  4222  002204  C030  F031         	movff	??___flmul,??___flmul+1
  4223  002208  6A30               	clrf	??___flmul^0,c
  4224  00220A  5030               	movf	??___flmul^0,w,c
  4225  00220C  263B               	addwf	___flmul@prod^0,f,c
  4226  00220E  5031               	movf	(??___flmul+1)^0,w,c
  4227  002210  223C               	addwfc	(___flmul@prod+1)^0,f,c
  4228  002212  5032               	movf	(??___flmul+2)^0,w,c
  4229  002214  223D               	addwfc	(___flmul@prod+2)^0,f,c
  4230  002216  5033               	movf	(??___flmul+3)^0,w,c
  4231  002218  223E               	addwfc	(___flmul@prod+3)^0,f,c
  4232  00221A  C035  F030         	movff	___flmul@grs,??___flmul
  4233  00221E  C036  F031         	movff	___flmul@grs+1,??___flmul+1
  4234  002222  C037  F032         	movff	___flmul@grs+2,??___flmul+2
  4235  002226  C038  F033         	movff	___flmul@grs+3,??___flmul+3
  4236  00222A  0E19               	movlw	25
  4237  00222C  EF1D  F011         	goto	u3560
  4238  002230                     u3565:
  4239  002230  90D8               	bcf	status,0,c
  4240  002232  3233               	rrcf	(??___flmul+3)^0,f,c
  4241  002234  3232               	rrcf	(??___flmul+2)^0,f,c
  4242  002236  3231               	rrcf	(??___flmul+1)^0,f,c
  4243  002238  3230               	rrcf	??___flmul^0,f,c
  4244  00223A                     u3560:
  4245  00223A  2EE8               	decfsz	wreg,f,c
  4246  00223C  EF18  F011         	goto	u3565
  4247  002240  5030               	movf	??___flmul^0,w,c
  4248  002242  263B               	addwf	___flmul@prod^0,f,c
  4249  002244  5031               	movf	(??___flmul+1)^0,w,c
  4250  002246  223C               	addwfc	(___flmul@prod+1)^0,f,c
  4251  002248  5032               	movf	(??___flmul+2)^0,w,c
  4252  00224A  223D               	addwfc	(___flmul@prod+2)^0,f,c
  4253  00224C  5033               	movf	(??___flmul+3)^0,w,c
  4254  00224E  223E               	addwfc	(___flmul@prod+3)^0,f,c
  4255  002250  C037  F038         	movff	___flmul@grs+2,___flmul@grs+3
  4256  002254  C036  F037         	movff	___flmul@grs+1,___flmul@grs+2
  4257  002258  C035  F036         	movff	___flmul@grs,___flmul@grs+1
  4258  00225C  6A35               	clrf	___flmul@grs^0,c
  4259  00225E  5039               	movf	___flmul@aexp^0,w,c
  4260  002260  C03A  F030         	movff	___flmul@bexp,??___flmul
  4261  002264  6A31               	clrf	(??___flmul+1)^0,c
  4262  002266  2630               	addwf	??___flmul^0,f,c
  4263  002268  0E00               	movlw	0
  4264  00226A  2231               	addwfc	(??___flmul+1)^0,f,c
  4265  00226C  0E82               	movlw	130
  4266  00226E  2430               	addwf	??___flmul^0,w,c
  4267  002270  6E3F               	movwf	___flmul@temp^0,c
  4268  002272  0EFF               	movlw	255
  4269  002274  2031               	addwfc	(??___flmul+1)^0,w,c
  4270  002276  6E40               	movwf	(___flmul@temp+1)^0,c
  4271  002278  EF53  F011         	goto	l3828
  4272  00227C                     l3822:
  4273  00227C  90D8               	bcf	status,0,c
  4274  00227E  363B               	rlcf	___flmul@prod^0,f,c
  4275  002280  363C               	rlcf	(___flmul@prod+1)^0,f,c
  4276  002282  363D               	rlcf	(___flmul@prod+2)^0,f,c
  4277  002284  363E               	rlcf	(___flmul@prod+3)^0,f,c
  4278  002286  AE38               	btfss	(___flmul@grs+3)^0,7,c
  4279  002288  EF48  F011         	goto	u3571
  4280  00228C  EF4A  F011         	goto	u3570
  4281  002290                     u3571:
  4282  002290  EF4B  F011         	goto	l1247
  4283  002294                     u3570:
  4284  002294  803B               	bsf	___flmul@prod^0,0,c
  4285  002296                     l1247:
  4286  002296  90D8               	bcf	status,0,c
  4287  002298  3635               	rlcf	___flmul@grs^0,f,c
  4288  00229A  3636               	rlcf	(___flmul@grs+1)^0,f,c
  4289  00229C  3637               	rlcf	(___flmul@grs+2)^0,f,c
  4290  00229E  3638               	rlcf	(___flmul@grs+3)^0,f,c
  4291  0022A0  063F               	decf	___flmul@temp^0,f,c
  4292  0022A2  A0D8               	btfss	status,0,c
  4293  0022A4  0640               	decf	(___flmul@temp+1)^0,f,c
  4294  0022A6                     l3828:
  4295  0022A6  AE3D               	btfss	(___flmul@prod+2)^0,7,c
  4296  0022A8  EF58  F011         	goto	u3581
  4297  0022AC  EF5A  F011         	goto	u3580
  4298  0022B0                     u3581:
  4299  0022B0  EF3E  F011         	goto	l3822
  4300  0022B4                     u3580:
  4301  0022B4  0E00               	movlw	0
  4302  0022B6  6E39               	movwf	___flmul@aexp^0,c
  4303  0022B8  AE38               	btfss	(___flmul@grs+3)^0,7,c
  4304  0022BA  EF61  F011         	goto	u3591
  4305  0022BE  EF63  F011         	goto	u3590
  4306  0022C2                     u3591:
  4307  0022C2  EF87  F011         	goto	l1249
  4308  0022C6                     u3590:
  4309  0022C6  0EFF               	movlw	255
  4310  0022C8  1435               	andwf	___flmul@grs^0,w,c
  4311  0022CA  6E30               	movwf	??___flmul^0,c
  4312  0022CC  0EFF               	movlw	255
  4313  0022CE  1436               	andwf	(___flmul@grs+1)^0,w,c
  4314  0022D0  6E31               	movwf	(??___flmul+1)^0,c
  4315  0022D2  0EFF               	movlw	255
  4316  0022D4  1437               	andwf	(___flmul@grs+2)^0,w,c
  4317  0022D6  6E32               	movwf	(??___flmul+2)^0,c
  4318  0022D8  0E7F               	movlw	127
  4319  0022DA  1438               	andwf	(___flmul@grs+3)^0,w,c
  4320  0022DC  6E33               	movwf	(??___flmul+3)^0,c
  4321  0022DE  5030               	movf	??___flmul^0,w,c
  4322  0022E0  1031               	iorwf	(??___flmul+1)^0,w,c
  4323  0022E2  1032               	iorwf	(??___flmul+2)^0,w,c
  4324  0022E4  1033               	iorwf	(??___flmul+3)^0,w,c
  4325  0022E6  B4D8               	btfsc	status,2,c
  4326  0022E8  EF78  F011         	goto	u3601
  4327  0022EC  EF7A  F011         	goto	u3600
  4328  0022F0                     u3601:
  4329  0022F0  EF7E  F011         	goto	l1250
  4330  0022F4                     u3600:
  4331  0022F4                     l3836:
  4332  0022F4  0E01               	movlw	1
  4333  0022F6  6E39               	movwf	___flmul@aexp^0,c
  4334  0022F8  EF87  F011         	goto	l1249
  4335  0022FC                     l1250:
  4336  0022FC  A03B               	btfss	___flmul@prod^0,0,c
  4337  0022FE  EF83  F011         	goto	u3611
  4338  002302  EF85  F011         	goto	u3610
  4339  002306                     u3611:
  4340  002306  EF87  F011         	goto	l1249
  4341  00230A                     u3610:
  4342  00230A  EF7A  F011         	goto	l3836
  4343  00230E                     l1249:
  4344  00230E  5039               	movf	___flmul@aexp^0,w,c
  4345  002310  B4D8               	btfsc	status,2,c
  4346  002312  EF8D  F011         	goto	u3621
  4347  002316  EF8F  F011         	goto	u3620
  4348  00231A                     u3621:
  4349  00231A  EFB3  F011         	goto	l3848
  4350  00231E                     u3620:
  4351  00231E  0E01               	movlw	1
  4352  002320  263B               	addwf	___flmul@prod^0,f,c
  4353  002322  0E00               	movlw	0
  4354  002324  223C               	addwfc	(___flmul@prod+1)^0,f,c
  4355  002326  223D               	addwfc	(___flmul@prod+2)^0,f,c
  4356  002328  223E               	addwfc	(___flmul@prod+3)^0,f,c
  4357  00232A  A03E               	btfss	(___flmul@prod+3)^0,0,c
  4358  00232C  EF9A  F011         	goto	u3631
  4359  002330  EF9C  F011         	goto	u3630
  4360  002334                     u3631:
  4361  002334  EFB3  F011         	goto	l3848
  4362  002338                     u3630:
  4363  002338  C03B  F030         	movff	___flmul@prod,??___flmul
  4364  00233C  C03C  F031         	movff	___flmul@prod+1,??___flmul+1
  4365  002340  C03D  F032         	movff	___flmul@prod+2,??___flmul+2
  4366  002344  C03E  F033         	movff	___flmul@prod+3,??___flmul+3
  4367  002348  3433               	rlcf	(??___flmul+3)^0,w,c
  4368  00234A  3233               	rrcf	(??___flmul+3)^0,f,c
  4369  00234C  3232               	rrcf	(??___flmul+2)^0,f,c
  4370  00234E  3231               	rrcf	(??___flmul+1)^0,f,c
  4371  002350  3230               	rrcf	??___flmul^0,f,c
  4372  002352  C030  F03B         	movff	??___flmul,___flmul@prod
  4373  002356  C031  F03C         	movff	??___flmul+1,___flmul@prod+1
  4374  00235A  C032  F03D         	movff	??___flmul+2,___flmul@prod+2
  4375  00235E  C033  F03E         	movff	??___flmul+3,___flmul@prod+3
  4376  002362  4A3F               	infsnz	___flmul@temp^0,f,c
  4377  002364  2A40               	incf	(___flmul@temp+1)^0,f,c
  4378  002366                     l3848:
  4379  002366  BE40               	btfsc	(___flmul@temp+1)^0,7,c
  4380  002368  EFBE  F011         	goto	u3641
  4381  00236C  5040               	movf	(___flmul@temp+1)^0,w,c
  4382  00236E  E108               	bnz	u3640
  4383  002370  283F               	incf	___flmul@temp^0,w,c
  4384  002372  A0D8               	btfss	status,0,c
  4385  002374  EFBE  F011         	goto	u3641
  4386  002378  EFC0  F011         	goto	u3640
  4387  00237C                     u3641:
  4388  00237C  EFCA  F011         	goto	l3852
  4389  002380                     u3640:
  4390  002380  0E00               	movlw	0
  4391  002382  6E3B               	movwf	___flmul@prod^0,c
  4392  002384  0E00               	movlw	0
  4393  002386  6E3C               	movwf	(___flmul@prod+1)^0,c
  4394  002388  0E80               	movlw	128
  4395  00238A  6E3D               	movwf	(___flmul@prod+2)^0,c
  4396  00238C  0E7F               	movlw	127
  4397  00238E  6E3E               	movwf	(___flmul@prod+3)^0,c
  4398  002390  EFF8  F011         	goto	l3864
  4399  002394                     l3852:
  4400  002394  BE40               	btfsc	(___flmul@temp+1)^0,7,c
  4401  002396  EFD7  F011         	goto	u3650
  4402  00239A  5040               	movf	(___flmul@temp+1)^0,w,c
  4403  00239C  E106               	bnz	u3651
  4404  00239E  043F               	decf	___flmul@temp^0,w,c
  4405  0023A0  B0D8               	btfsc	status,0,c
  4406  0023A2  EFD5  F011         	goto	u3651
  4407  0023A6  EFD7  F011         	goto	u3650
  4408  0023AA                     u3651:
  4409  0023AA  EFE3  F011         	goto	l1257
  4410  0023AE                     u3650:
  4411  0023AE  0E00               	movlw	0
  4412  0023B0  6E3B               	movwf	___flmul@prod^0,c
  4413  0023B2  0E00               	movlw	0
  4414  0023B4  6E3C               	movwf	(___flmul@prod+1)^0,c
  4415  0023B6  0E00               	movlw	0
  4416  0023B8  6E3D               	movwf	(___flmul@prod+2)^0,c
  4417  0023BA  0E00               	movlw	0
  4418  0023BC  6E3E               	movwf	(___flmul@prod+3)^0,c
  4419  0023BE  0E00               	movlw	0
  4420  0023C0  6E34               	movwf	___flmul@sign^0,c
  4421  0023C2  EFF8  F011         	goto	l3864
  4422  0023C6                     l1257:
  4423  0023C6  C03F  F03A         	movff	___flmul@temp,___flmul@bexp
  4424  0023CA  0EFF               	movlw	255
  4425  0023CC  163B               	andwf	___flmul@prod^0,f,c
  4426  0023CE  0EFF               	movlw	255
  4427  0023D0  163C               	andwf	(___flmul@prod+1)^0,f,c
  4428  0023D2  0E7F               	movlw	127
  4429  0023D4  163D               	andwf	(___flmul@prod+2)^0,f,c
  4430  0023D6  0E00               	movlw	0
  4431  0023D8  163E               	andwf	(___flmul@prod+3)^0,f,c
  4432  0023DA  A03A               	btfss	___flmul@bexp^0,0,c
  4433  0023DC  EFF2  F011         	goto	u3661
  4434  0023E0  EFF4  F011         	goto	u3660
  4435  0023E4                     u3661:
  4436  0023E4  EFF5  F011         	goto	l3862
  4437  0023E8                     u3660:
  4438  0023E8  8E3D               	bsf	(___flmul@prod+2)^0,7,c
  4439  0023EA                     l3862:
  4440  0023EA  90D8               	bcf	status,0,c
  4441  0023EC  303A               	rrcf	___flmul@bexp^0,w,c
  4442  0023EE  6E3E               	movwf	(___flmul@prod+3)^0,c
  4443  0023F0                     l3864:
  4444  0023F0  5034               	movf	___flmul@sign^0,w,c
  4445  0023F2  123E               	iorwf	(___flmul@prod+3)^0,f,c
  4446  0023F4  C03B  F028         	movff	___flmul@prod,?___flmul
  4447  0023F8  C03C  F029         	movff	___flmul@prod+1,?___flmul+1
  4448  0023FC  C03D  F02A         	movff	___flmul@prod+2,?___flmul+2
  4449  002400  C03E  F02B         	movff	___flmul@prod+3,?___flmul+3
  4450  002404                     l1244:
  4451  002404  0012               	return		;funcret
  4452  002406                     __end_of___flmul:
  4453                           	callstack 0
  4454                           
  4455 ;; *************** function ___flge *****************
  4456 ;; Defined at:
  4457 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\flge.c"
  4458 ;; Parameters:    Size  Location     Type
  4459 ;;  ff1             4    0[COMRAM] unsigned char 
  4460 ;;  ff2             4    4[COMRAM] unsigned char 
  4461 ;; Auto vars:     Size  Location     Type
  4462 ;;		None
  4463 ;; Return value:  Size  Location     Type
  4464 ;;		None               void
  4465 ;; Registers used:
  4466 ;;		wreg, status,2, status,0
  4467 ;; Tracked objects:
  4468 ;;		On entry : 0/0
  4469 ;;		On exit  : 0/0
  4470 ;;		Unchanged: 0/0
  4471 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4472 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4473 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4474 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4475 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4476 ;;Total ram usage:       12 bytes
  4477 ;; Hardware stack levels used: 1
  4478 ;; This function calls:
  4479 ;;		Nothing
  4480 ;; This function is called by:
  4481 ;;		_roundf
  4482 ;; This function uses a non-reentrant model
  4483 ;;
  4484                           
  4485                           	psect	text9
  4486  003EB4                     __ptext9:
  4487                           	callstack 0
  4488  003EB4                     ___flge:
  4489                           	callstack 26
  4490  003EB4  0E00               	movlw	0
  4491  003EB6  1401               	andwf	___flge@ff1^0,w,c
  4492  003EB8  6E09               	movwf	??___flge^0,c
  4493  003EBA  0E00               	movlw	0
  4494  003EBC  1402               	andwf	(___flge@ff1+1)^0,w,c
  4495  003EBE  6E0A               	movwf	(??___flge+1)^0,c
  4496  003EC0  0E80               	movlw	128
  4497  003EC2  1403               	andwf	(___flge@ff1+2)^0,w,c
  4498  003EC4  6E0B               	movwf	(??___flge+2)^0,c
  4499  003EC6  0E7F               	movlw	127
  4500  003EC8  1404               	andwf	(___flge@ff1+3)^0,w,c
  4501  003ECA  6E0C               	movwf	(??___flge+3)^0,c
  4502  003ECC  5009               	movf	??___flge^0,w,c
  4503  003ECE  100A               	iorwf	(??___flge+1)^0,w,c
  4504  003ED0  100B               	iorwf	(??___flge+2)^0,w,c
  4505  003ED2  100C               	iorwf	(??___flge+3)^0,w,c
  4506  003ED4  A4D8               	btfss	status,2,c
  4507  003ED6  EF6F  F01F         	goto	u3671
  4508  003EDA  EF71  F01F         	goto	u3670
  4509  003EDE                     u3671:
  4510  003EDE  EF79  F01F         	goto	l3880
  4511  003EE2                     u3670:
  4512  003EE2  0E00               	movlw	0
  4513  003EE4  6E01               	movwf	___flge@ff1^0,c
  4514  003EE6  0E00               	movlw	0
  4515  003EE8  6E02               	movwf	(___flge@ff1+1)^0,c
  4516  003EEA  0E00               	movlw	0
  4517  003EEC  6E03               	movwf	(___flge@ff1+2)^0,c
  4518  003EEE  0E00               	movlw	0
  4519  003EF0  6E04               	movwf	(___flge@ff1+3)^0,c
  4520  003EF2                     l3880:
  4521  003EF2  0E00               	movlw	0
  4522  003EF4  1405               	andwf	___flge@ff2^0,w,c
  4523  003EF6  6E09               	movwf	??___flge^0,c
  4524  003EF8  0E00               	movlw	0
  4525  003EFA  1406               	andwf	(___flge@ff2+1)^0,w,c
  4526  003EFC  6E0A               	movwf	(??___flge+1)^0,c
  4527  003EFE  0E80               	movlw	128
  4528  003F00  1407               	andwf	(___flge@ff2+2)^0,w,c
  4529  003F02  6E0B               	movwf	(??___flge+2)^0,c
  4530  003F04  0E7F               	movlw	127
  4531  003F06  1408               	andwf	(___flge@ff2+3)^0,w,c
  4532  003F08  6E0C               	movwf	(??___flge+3)^0,c
  4533  003F0A  5009               	movf	??___flge^0,w,c
  4534  003F0C  100A               	iorwf	(??___flge+1)^0,w,c
  4535  003F0E  100B               	iorwf	(??___flge+2)^0,w,c
  4536  003F10  100C               	iorwf	(??___flge+3)^0,w,c
  4537  003F12  A4D8               	btfss	status,2,c
  4538  003F14  EF8E  F01F         	goto	u3681
  4539  003F18  EF90  F01F         	goto	u3680
  4540  003F1C                     u3681:
  4541  003F1C  EF98  F01F         	goto	l3884
  4542  003F20                     u3680:
  4543  003F20  0E00               	movlw	0
  4544  003F22  6E05               	movwf	___flge@ff2^0,c
  4545  003F24  0E00               	movlw	0
  4546  003F26  6E06               	movwf	(___flge@ff2+1)^0,c
  4547  003F28  0E00               	movlw	0
  4548  003F2A  6E07               	movwf	(___flge@ff2+2)^0,c
  4549  003F2C  0E00               	movlw	0
  4550  003F2E  6E08               	movwf	(___flge@ff2+3)^0,c
  4551  003F30                     l3884:
  4552  003F30  AE04               	btfss	(___flge@ff1+3)^0,7,c
  4553  003F32  EF9D  F01F         	goto	u3691
  4554  003F36  EF9F  F01F         	goto	u3690
  4555  003F3A                     u3691:
  4556  003F3A  EFA8  F01F         	goto	l3888
  4557  003F3E                     u3690:
  4558  003F3E  6C01               	negf	___flge@ff1^0,c
  4559  003F40  1E02               	comf	(___flge@ff1+1)^0,f,c
  4560  003F42  B0D8               	btfsc	status,0,c
  4561  003F44  2A02               	incf	(___flge@ff1+1)^0,f,c
  4562  003F46  1E03               	comf	(___flge@ff1+2)^0,f,c
  4563  003F48  B0D8               	btfsc	status,0,c
  4564  003F4A  2A03               	incf	(___flge@ff1+2)^0,f,c
  4565  003F4C  0E80               	movlw	128
  4566  003F4E  5604               	subfwb	(___flge@ff1+3)^0,f,c
  4567  003F50                     l3888:
  4568  003F50  AE08               	btfss	(___flge@ff2+3)^0,7,c
  4569  003F52  EFAD  F01F         	goto	u3701
  4570  003F56  EFAF  F01F         	goto	u3700
  4571  003F5A                     u3701:
  4572  003F5A  EFB8  F01F         	goto	l891
  4573  003F5E                     u3700:
  4574  003F5E  6C05               	negf	___flge@ff2^0,c
  4575  003F60  1E06               	comf	(___flge@ff2+1)^0,f,c
  4576  003F62  B0D8               	btfsc	status,0,c
  4577  003F64  2A06               	incf	(___flge@ff2+1)^0,f,c
  4578  003F66  1E07               	comf	(___flge@ff2+2)^0,f,c
  4579  003F68  B0D8               	btfsc	status,0,c
  4580  003F6A  2A07               	incf	(___flge@ff2+2)^0,f,c
  4581  003F6C  0E80               	movlw	128
  4582  003F6E  5608               	subfwb	(___flge@ff2+3)^0,f,c
  4583  003F70                     l891:
  4584  003F70  0E00               	movlw	0
  4585  003F72  1A01               	xorwf	___flge@ff1^0,f,c
  4586  003F74  0E00               	movlw	0
  4587  003F76  1A02               	xorwf	(___flge@ff1+1)^0,f,c
  4588  003F78  0E00               	movlw	0
  4589  003F7A  1A03               	xorwf	(___flge@ff1+2)^0,f,c
  4590  003F7C  0E80               	movlw	128
  4591  003F7E  1A04               	xorwf	(___flge@ff1+3)^0,f,c
  4592  003F80  0E00               	movlw	0
  4593  003F82  1A05               	xorwf	___flge@ff2^0,f,c
  4594  003F84  0E00               	movlw	0
  4595  003F86  1A06               	xorwf	(___flge@ff2+1)^0,f,c
  4596  003F88  0E00               	movlw	0
  4597  003F8A  1A07               	xorwf	(___flge@ff2+2)^0,f,c
  4598  003F8C  0E80               	movlw	128
  4599  003F8E  1A08               	xorwf	(___flge@ff2+3)^0,f,c
  4600  003F90  5005               	movf	___flge@ff2^0,w,c
  4601  003F92  5C01               	subwf	___flge@ff1^0,w,c
  4602  003F94  5006               	movf	(___flge@ff2+1)^0,w,c
  4603  003F96  5802               	subwfb	(___flge@ff1+1)^0,w,c
  4604  003F98  5007               	movf	(___flge@ff2+2)^0,w,c
  4605  003F9A  5803               	subwfb	(___flge@ff1+2)^0,w,c
  4606  003F9C  5008               	movf	(___flge@ff2+3)^0,w,c
  4607  003F9E  5804               	subwfb	(___flge@ff1+3)^0,w,c
  4608  003FA0  B0D8               	btfsc	status,0,c
  4609  003FA2  EFD5  F01F         	goto	u3711
  4610  003FA6  EFD7  F01F         	goto	u3710
  4611  003FAA                     u3711:
  4612  003FAA  EFDA  F01F         	goto	l3894
  4613  003FAE                     u3710:
  4614  003FAE  90D8               	bcf	status,0,c
  4615  003FB0  EFDB  F01F         	goto	l896
  4616  003FB4                     l3894:
  4617  003FB4  80D8               	bsf	status,0,c
  4618  003FB6                     l896:
  4619  003FB6  0012               	return		;funcret
  4620  003FB8                     __end_of___flge:
  4621                           	callstack 0
  4622                           
  4623 ;; *************** function ___fltol *****************
  4624 ;; Defined at:
  4625 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\fltol.c"
  4626 ;; Parameters:    Size  Location     Type
  4627 ;;  f1              4   90[COMRAM] unsigned char 
  4628 ;; Auto vars:     Size  Location     Type
  4629 ;;  exp1            1    5[BANK0 ] unsigned char 
  4630 ;;  sign1           1    4[BANK0 ] unsigned char 
  4631 ;; Return value:  Size  Location     Type
  4632 ;;                  4   90[COMRAM] long 
  4633 ;; Registers used:
  4634 ;;		wreg, status,2, status,0
  4635 ;; Tracked objects:
  4636 ;;		On entry : 0/0
  4637 ;;		On exit  : 0/0
  4638 ;;		Unchanged: 0/0
  4639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4640 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4641 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4642 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4643 ;;      Totals:         4       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4644 ;;Total ram usage:       10 bytes
  4645 ;; Hardware stack levels used: 1
  4646 ;; This function calls:
  4647 ;;		Nothing
  4648 ;; This function is called by:
  4649 ;;		_lroundf
  4650 ;; This function uses a non-reentrant model
  4651 ;;
  4652                           
  4653                           	psect	text10
  4654  003DAC                     __ptext10:
  4655                           	callstack 0
  4656  003DAC                     ___fltol:
  4657                           	callstack 27
  4658  003DAC  345D               	rlcf	(___fltol@f1+2)^0,w,c
  4659  003DAE  345E               	rlcf	(___fltol@f1+3)^0,w,c
  4660  003DB0  0100               	movlb	0	; () banked
  4661  003DB2  6F65               	movwf	___fltol@exp1& (0+255),b
  4662  003DB4  5165               	movf	___fltol@exp1& (0+255),w,b
  4663  003DB6  A4D8               	btfss	status,2,c
  4664  003DB8  EFE0  F01E         	goto	u3821
  4665  003DBC  EFE2  F01E         	goto	u3820
  4666  003DC0                     u3821:
  4667  003DC0  EFEC  F01E         	goto	l4004
  4668  003DC4                     u3820:
  4669  003DC4                     l4000:
  4670                           
  4671                           ; BSR set to: 0
  4672  003DC4  0E00               	movlw	0
  4673  003DC6  6E5B               	movwf	?___fltol^0,c
  4674  003DC8  0E00               	movlw	0
  4675  003DCA  6E5C               	movwf	(?___fltol+1)^0,c
  4676  003DCC  0E00               	movlw	0
  4677  003DCE  6E5D               	movwf	(?___fltol+2)^0,c
  4678  003DD0  0E00               	movlw	0
  4679  003DD2  6E5E               	movwf	(?___fltol+3)^0,c
  4680  003DD4  EF59  F01F         	goto	l923
  4681  003DD8                     l4004:
  4682                           
  4683                           ; BSR set to: 0
  4684  003DD8  C05B  F060         	movff	___fltol@f1,??___fltol
  4685  003DDC  C05C  F061         	movff	___fltol@f1+1,??___fltol+1
  4686  003DE0  C05D  F062         	movff	___fltol@f1+2,??___fltol+2
  4687  003DE4  C05E  F063         	movff	___fltol@f1+3,??___fltol+3
  4688  003DE8  0E20               	movlw	32
  4689  003DEA  EFFC  F01E         	goto	u3830
  4690  003DEE                     u3835:
  4691  003DEE  90D8               	bcf	status,0,c
  4692  003DF0  3363               	rrcf	(??___fltol+3)& (0+255),f,b
  4693  003DF2  3362               	rrcf	(??___fltol+2)& (0+255),f,b
  4694  003DF4  3361               	rrcf	(??___fltol+1)& (0+255),f,b
  4695  003DF6  3360               	rrcf	??___fltol& (0+255),f,b
  4696  003DF8                     u3830:
  4697  003DF8  2EE8               	decfsz	wreg,f,c
  4698  003DFA  EFF7  F01E         	goto	u3835
  4699  003DFE  5160               	movf	??___fltol& (0+255),w,b
  4700  003E00  6F64               	movwf	___fltol@sign1& (0+255),b
  4701  003E02                     
  4702                           ; BSR set to: 0
  4703  003E02  8E5D               	bsf	(___fltol@f1+2)^0,7,c
  4704  003E04                     
  4705                           ; BSR set to: 0
  4706  003E04  0EFF               	movlw	255
  4707  003E06  165B               	andwf	___fltol@f1^0,f,c
  4708  003E08  0EFF               	movlw	255
  4709  003E0A  165C               	andwf	(___fltol@f1+1)^0,f,c
  4710  003E0C  0EFF               	movlw	255
  4711  003E0E  165D               	andwf	(___fltol@f1+2)^0,f,c
  4712  003E10  0E00               	movlw	0
  4713  003E12  165E               	andwf	(___fltol@f1+3)^0,f,c
  4714  003E14                     
  4715                           ; BSR set to: 0
  4716  003E14  0E96               	movlw	150
  4717  003E16  5F65               	subwf	___fltol@exp1& (0+255),f,b
  4718  003E18                     
  4719                           ; BSR set to: 0
  4720  003E18  BF65               	btfsc	___fltol@exp1& (0+255),7,b
  4721  003E1A  EF13  F01F         	goto	u3840
  4722  003E1E  EF11  F01F         	goto	u3841
  4723  003E22                     u3841:
  4724  003E22  EF29  F01F         	goto	l4024
  4725  003E26                     u3840:
  4726  003E26                     
  4727                           ; BSR set to: 0
  4728  003E26  5165               	movf	___fltol@exp1& (0+255),w,b
  4729  003E28  0A80               	xorlw	128
  4730  003E2A  0F97               	addlw	151
  4731  003E2C  B0D8               	btfsc	status,0,c
  4732  003E2E  EF1B  F01F         	goto	u3851
  4733  003E32  EF1D  F01F         	goto	u3850
  4734  003E36                     u3851:
  4735  003E36  EF1F  F01F         	goto	l4020
  4736  003E3A                     u3850:
  4737  003E3A  EFE2  F01E         	goto	l4000
  4738  003E3E                     l4020:
  4739                           
  4740                           ; BSR set to: 0
  4741  003E3E  90D8               	bcf	status,0,c
  4742  003E40  325E               	rrcf	(___fltol@f1+3)^0,f,c
  4743  003E42  325D               	rrcf	(___fltol@f1+2)^0,f,c
  4744  003E44  325C               	rrcf	(___fltol@f1+1)^0,f,c
  4745  003E46  325B               	rrcf	___fltol@f1^0,f,c
  4746  003E48                     
  4747                           ; BSR set to: 0
  4748  003E48  3F65               	incfsz	___fltol@exp1& (0+255),f,b
  4749  003E4A  EF1F  F01F         	goto	l4020
  4750  003E4E  EF41  F01F         	goto	l4034
  4751  003E52                     l4024:
  4752                           
  4753                           ; BSR set to: 0
  4754  003E52  0E1F               	movlw	31
  4755  003E54  6565               	cpfsgt	___fltol@exp1& (0+255),b
  4756  003E56  EF2F  F01F         	goto	u3861
  4757  003E5A  EF31  F01F         	goto	u3860
  4758  003E5E                     u3861:
  4759  003E5E  EF39  F01F         	goto	l4032
  4760  003E62                     u3860:
  4761  003E62  EFE2  F01E         	goto	l4000
  4762  003E66                     l4030:
  4763                           
  4764                           ; BSR set to: 0
  4765  003E66  90D8               	bcf	status,0,c
  4766  003E68  365B               	rlcf	___fltol@f1^0,f,c
  4767  003E6A  365C               	rlcf	(___fltol@f1+1)^0,f,c
  4768  003E6C  365D               	rlcf	(___fltol@f1+2)^0,f,c
  4769  003E6E  365E               	rlcf	(___fltol@f1+3)^0,f,c
  4770  003E70  0765               	decf	___fltol@exp1& (0+255),f,b
  4771  003E72                     l4032:
  4772                           
  4773                           ; BSR set to: 0
  4774  003E72  5165               	movf	___fltol@exp1& (0+255),w,b
  4775  003E74  A4D8               	btfss	status,2,c
  4776  003E76  EF3F  F01F         	goto	u3871
  4777  003E7A  EF41  F01F         	goto	u3870
  4778  003E7E                     u3871:
  4779  003E7E  EF33  F01F         	goto	l4030
  4780  003E82                     u3870:
  4781  003E82                     l4034:
  4782                           
  4783                           ; BSR set to: 0
  4784  003E82  5164               	movf	___fltol@sign1& (0+255),w,b
  4785  003E84  B4D8               	btfsc	status,2,c
  4786  003E86  EF47  F01F         	goto	u3881
  4787  003E8A  EF49  F01F         	goto	u3880
  4788  003E8E                     u3881:
  4789  003E8E  EF51  F01F         	goto	l4038
  4790  003E92                     u3880:
  4791  003E92                     
  4792                           ; BSR set to: 0
  4793  003E92  1E5E               	comf	(___fltol@f1+3)^0,f,c
  4794  003E94  1E5D               	comf	(___fltol@f1+2)^0,f,c
  4795  003E96  1E5C               	comf	(___fltol@f1+1)^0,f,c
  4796  003E98  6C5B               	negf	___fltol@f1^0,c
  4797  003E9A  0E00               	movlw	0
  4798  003E9C  225C               	addwfc	(___fltol@f1+1)^0,f,c
  4799  003E9E  225D               	addwfc	(___fltol@f1+2)^0,f,c
  4800  003EA0  225E               	addwfc	(___fltol@f1+3)^0,f,c
  4801  003EA2                     l4038:
  4802                           
  4803                           ; BSR set to: 0
  4804  003EA2  C05B  F05B         	movff	___fltol@f1,?___fltol
  4805  003EA6  C05C  F05C         	movff	___fltol@f1+1,?___fltol+1
  4806  003EAA  C05D  F05D         	movff	___fltol@f1+2,?___fltol+2
  4807  003EAE  C05E  F05E         	movff	___fltol@f1+3,?___fltol+3
  4808  003EB2                     l923:
  4809                           
  4810                           ; BSR set to: 0
  4811  003EB2  0012               	return		;funcret
  4812  003EB4                     __end_of___fltol:
  4813                           	callstack 0
  4814                           
  4815 ;; *************** function _compare *****************
  4816 ;; Defined at:
  4817 ;;		line 304 in file "color.c"
  4818 ;; Parameters:    Size  Location     Type
  4819 ;;  lower           2   10[BANK0 ] unsigned int 
  4820 ;;  value2compar    2   12[BANK0 ] unsigned int 
  4821 ;;  upper           2   14[BANK0 ] unsigned int 
  4822 ;; Auto vars:     Size  Location     Type
  4823 ;;  result          1   94[COMRAM] unsigned char 
  4824 ;; Return value:  Size  Location     Type
  4825 ;;                  1    wreg      unsigned char 
  4826 ;; Registers used:
  4827 ;;		wreg, status,2, status,0
  4828 ;; Tracked objects:
  4829 ;;		On entry : 0/0
  4830 ;;		On exit  : 0/0
  4831 ;;		Unchanged: 0/0
  4832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4833 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4834 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4835 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4836 ;;      Totals:         1       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4837 ;;Total ram usage:        7 bytes
  4838 ;; Hardware stack levels used: 1
  4839 ;; This function calls:
  4840 ;;		Nothing
  4841 ;; This function is called by:
  4842 ;;		_detect_color
  4843 ;; This function uses a non-reentrant model
  4844 ;;
  4845                           
  4846                           	psect	text11
  4847  004C9E                     __ptext11:
  4848                           	callstack 0
  4849  004C9E                     _compare:
  4850                           	callstack 28
  4851  004C9E                     
  4852                           ;color.c: 304: unsigned char compare(unsigned int lower, unsigned int value2compare, uns
      +                          igned int upper);color.c: 305: {;color.c: 306:     unsigned char result = 0;
  4853  004C9E  0E00               	movlw	0
  4854  004CA0  6E5F               	movwf	compare@result^0,c
  4855  004CA2                     
  4856                           ;color.c: 307:     if (lower < value2compare && value2compare <= upper){result = 1;}
  4857  004CA2  0100               	movlb	0	; () banked
  4858  004CA4  516C               	movf	compare@value2compare& (0+255),w,b
  4859  004CA6  5D6A               	subwf	compare@lower& (0+255),w,b
  4860  004CA8  516D               	movf	(compare@value2compare+1)& (0+255),w,b
  4861  004CAA  596B               	subwfb	(compare@lower+1)& (0+255),w,b
  4862  004CAC  B0D8               	btfsc	status,0,c
  4863  004CAE  EF5B  F026         	goto	u4001
  4864  004CB2  EF5D  F026         	goto	u4000
  4865  004CB6                     u4001:
  4866  004CB6  EF6A  F026         	goto	l156
  4867  004CBA                     u4000:
  4868  004CBA                     
  4869                           ; BSR set to: 0
  4870  004CBA  516C               	movf	compare@value2compare& (0+255),w,b
  4871  004CBC  5D6E               	subwf	compare@upper& (0+255),w,b
  4872  004CBE  516D               	movf	(compare@value2compare+1)& (0+255),w,b
  4873  004CC0  596F               	subwfb	(compare@upper+1)& (0+255),w,b
  4874  004CC2  A0D8               	btfss	status,0,c
  4875  004CC4  EF66  F026         	goto	u4011
  4876  004CC8  EF68  F026         	goto	u4010
  4877  004CCC                     u4011:
  4878  004CCC  EF6A  F026         	goto	l156
  4879  004CD0                     u4010:
  4880  004CD0                     
  4881                           ; BSR set to: 0
  4882  004CD0  0E01               	movlw	1
  4883  004CD2  6E5F               	movwf	compare@result^0,c
  4884  004CD4                     l156:
  4885                           
  4886                           ; BSR set to: 0
  4887                           ;color.c: 308:     return result;
  4888  004CD4  505F               	movf	compare@result^0,w,c
  4889  004CD6                     
  4890                           ; BSR set to: 0
  4891  004CD6  0012               	return		;funcret
  4892  004CD8                     __end_of_compare:
  4893                           	callstack 0
  4894                           
  4895 ;; *************** function ___xxtofl *****************
  4896 ;; Defined at:
  4897 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\xxtofl.c"
  4898 ;; Parameters:    Size  Location     Type
  4899 ;;  sign            1    wreg     unsigned char 
  4900 ;;  val             4    0[COMRAM] long 
  4901 ;; Auto vars:     Size  Location     Type
  4902 ;;  sign            1    8[COMRAM] unsigned char 
  4903 ;;  arg             4   10[COMRAM] unsigned long 
  4904 ;;  exp             1    9[COMRAM] unsigned char 
  4905 ;; Return value:  Size  Location     Type
  4906 ;;                  4    0[COMRAM] unsigned char 
  4907 ;; Registers used:
  4908 ;;		wreg, status,2, status,0
  4909 ;; Tracked objects:
  4910 ;;		On entry : 0/0
  4911 ;;		On exit  : 0/0
  4912 ;;		Unchanged: 0/0
  4913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4914 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4915 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4916 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4917 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4918 ;;Total ram usage:       14 bytes
  4919 ;; Hardware stack levels used: 1
  4920 ;; This function calls:
  4921 ;;		Nothing
  4922 ;; This function is called by:
  4923 ;;		_detect_color
  4924 ;;		_check_color_reading
  4925 ;; This function uses a non-reentrant model
  4926 ;;
  4927                           
  4928                           	psect	text12
  4929  0033BE                     __ptext12:
  4930                           	callstack 0
  4931  0033BE                     ___xxtofl:
  4932                           	callstack 28
  4933                           
  4934                           ; BSR set to: 0
  4935                           ;incstack = 0
  4936                           ;___xxtofl@sign stored from wreg
  4937  0033BE  6E09               	movwf	___xxtofl@sign^0,c
  4938  0033C0  5009               	movf	___xxtofl@sign^0,w,c
  4939  0033C2  B4D8               	btfsc	status,2,c
  4940  0033C4  EFE6  F019         	goto	u4311
  4941  0033C8  EFE8  F019         	goto	u4310
  4942  0033CC                     u4311:
  4943  0033CC  EF0A  F01A         	goto	l1281
  4944  0033D0                     u4310:
  4945  0033D0  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  4946  0033D2  EFEF  F019         	goto	u4320
  4947  0033D6  EFED  F019         	goto	u4321
  4948  0033DA                     u4321:
  4949  0033DA  EF0A  F01A         	goto	l1281
  4950  0033DE                     u4320:
  4951  0033DE  C001  F005         	movff	___xxtofl@val,??___xxtofl
  4952  0033E2  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
  4953  0033E6  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
  4954  0033EA  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
  4955  0033EE  1E05               	comf	??___xxtofl^0,f,c
  4956  0033F0  1E06               	comf	(??___xxtofl+1)^0,f,c
  4957  0033F2  1E07               	comf	(??___xxtofl+2)^0,f,c
  4958  0033F4  1E08               	comf	(??___xxtofl+3)^0,f,c
  4959  0033F6  2A05               	incf	??___xxtofl^0,f,c
  4960  0033F8  0E00               	movlw	0
  4961  0033FA  2206               	addwfc	(??___xxtofl+1)^0,f,c
  4962  0033FC  2207               	addwfc	(??___xxtofl+2)^0,f,c
  4963  0033FE  2208               	addwfc	(??___xxtofl+3)^0,f,c
  4964  003400  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
  4965  003404  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
  4966  003408  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
  4967  00340C  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
  4968  003410  EF12  F01A         	goto	l4326
  4969  003414                     l1281:
  4970  003414  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
  4971  003418  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  4972  00341C  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  4973  003420  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  4974  003424                     l4326:
  4975  003424  5001               	movf	___xxtofl@val^0,w,c
  4976  003426  1002               	iorwf	(___xxtofl@val+1)^0,w,c
  4977  003428  1003               	iorwf	(___xxtofl@val+2)^0,w,c
  4978  00342A  1004               	iorwf	(___xxtofl@val+3)^0,w,c
  4979  00342C  A4D8               	btfss	status,2,c
  4980  00342E  EF1B  F01A         	goto	u4331
  4981  003432  EF1D  F01A         	goto	u4330
  4982  003436                     u4331:
  4983  003436  EF27  F01A         	goto	l4332
  4984  00343A                     u4330:
  4985  00343A  0E00               	movlw	0
  4986  00343C  6E01               	movwf	?___xxtofl^0,c
  4987  00343E  0E00               	movlw	0
  4988  003440  6E02               	movwf	(?___xxtofl+1)^0,c
  4989  003442  0E00               	movlw	0
  4990  003444  6E03               	movwf	(?___xxtofl+2)^0,c
  4991  003446  0E00               	movlw	0
  4992  003448  6E04               	movwf	(?___xxtofl+3)^0,c
  4993  00344A  EFB8  F01A         	goto	l1284
  4994  00344E                     l4332:
  4995  00344E  0E96               	movlw	150
  4996  003450  6E0A               	movwf	___xxtofl@exp^0,c
  4997  003452  EF31  F01A         	goto	l4336
  4998  003456                     l4334:
  4999  003456  2A0A               	incf	___xxtofl@exp^0,f,c
  5000  003458  90D8               	bcf	status,0,c
  5001  00345A  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  5002  00345C  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  5003  00345E  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  5004  003460  320B               	rrcf	___xxtofl@arg^0,f,c
  5005  003462                     l4336:
  5006  003462  0E00               	movlw	0
  5007  003464  140B               	andwf	___xxtofl@arg^0,w,c
  5008  003466  6E05               	movwf	??___xxtofl^0,c
  5009  003468  0E00               	movlw	0
  5010  00346A  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  5011  00346C  6E06               	movwf	(??___xxtofl+1)^0,c
  5012  00346E  0E00               	movlw	0
  5013  003470  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  5014  003472  6E07               	movwf	(??___xxtofl+2)^0,c
  5015  003474  0EFE               	movlw	254
  5016  003476  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  5017  003478  6E08               	movwf	(??___xxtofl+3)^0,c
  5018  00347A  5005               	movf	??___xxtofl^0,w,c
  5019  00347C  1006               	iorwf	(??___xxtofl+1)^0,w,c
  5020  00347E  1007               	iorwf	(??___xxtofl+2)^0,w,c
  5021  003480  1008               	iorwf	(??___xxtofl+3)^0,w,c
  5022  003482  A4D8               	btfss	status,2,c
  5023  003484  EF46  F01A         	goto	u4341
  5024  003488  EF48  F01A         	goto	u4340
  5025  00348C                     u4341:
  5026  00348C  EF2B  F01A         	goto	l4334
  5027  003490                     u4340:
  5028  003490  EF56  F01A         	goto	l1288
  5029  003494                     l4338:
  5030  003494  2A0A               	incf	___xxtofl@exp^0,f,c
  5031  003496  0E01               	movlw	1
  5032  003498  260B               	addwf	___xxtofl@arg^0,f,c
  5033  00349A  0E00               	movlw	0
  5034  00349C  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
  5035  00349E  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
  5036  0034A0  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
  5037  0034A2  90D8               	bcf	status,0,c
  5038  0034A4  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  5039  0034A6  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  5040  0034A8  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  5041  0034AA  320B               	rrcf	___xxtofl@arg^0,f,c
  5042  0034AC                     l1288:
  5043  0034AC  0E00               	movlw	0
  5044  0034AE  140B               	andwf	___xxtofl@arg^0,w,c
  5045  0034B0  6E05               	movwf	??___xxtofl^0,c
  5046  0034B2  0E00               	movlw	0
  5047  0034B4  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  5048  0034B6  6E06               	movwf	(??___xxtofl+1)^0,c
  5049  0034B8  0E00               	movlw	0
  5050  0034BA  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  5051  0034BC  6E07               	movwf	(??___xxtofl+2)^0,c
  5052  0034BE  0EFF               	movlw	255
  5053  0034C0  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  5054  0034C2  6E08               	movwf	(??___xxtofl+3)^0,c
  5055  0034C4  5005               	movf	??___xxtofl^0,w,c
  5056  0034C6  1006               	iorwf	(??___xxtofl+1)^0,w,c
  5057  0034C8  1007               	iorwf	(??___xxtofl+2)^0,w,c
  5058  0034CA  1008               	iorwf	(??___xxtofl+3)^0,w,c
  5059  0034CC  A4D8               	btfss	status,2,c
  5060  0034CE  EF6B  F01A         	goto	u4351
  5061  0034D2  EF6D  F01A         	goto	u4350
  5062  0034D6                     u4351:
  5063  0034D6  EF4A  F01A         	goto	l4338
  5064  0034DA                     u4350:
  5065  0034DA  EF75  F01A         	goto	l4346
  5066  0034DE                     l4344:
  5067  0034DE  060A               	decf	___xxtofl@exp^0,f,c
  5068  0034E0  90D8               	bcf	status,0,c
  5069  0034E2  360B               	rlcf	___xxtofl@arg^0,f,c
  5070  0034E4  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
  5071  0034E6  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
  5072  0034E8  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
  5073  0034EA                     l4346:
  5074  0034EA  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
  5075  0034EC  EF7A  F01A         	goto	u4361
  5076  0034F0  EF7C  F01A         	goto	u4360
  5077  0034F4                     u4361:
  5078  0034F4  EF84  F01A         	goto	l1295
  5079  0034F8                     u4360:
  5080  0034F8  0E02               	movlw	2
  5081  0034FA  600A               	cpfslt	___xxtofl@exp^0,c
  5082  0034FC  EF82  F01A         	goto	u4371
  5083  003500  EF84  F01A         	goto	u4370
  5084  003504                     u4371:
  5085  003504  EF6F  F01A         	goto	l4344
  5086  003508                     u4370:
  5087  003508                     l1295:
  5088  003508  B00A               	btfsc	___xxtofl@exp^0,0,c
  5089  00350A  EF89  F01A         	goto	u4381
  5090  00350E  EF8B  F01A         	goto	u4380
  5091  003512                     u4381:
  5092  003512  EF8C  F01A         	goto	l4352
  5093  003516                     u4380:
  5094  003516  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
  5095  003518                     l4352:
  5096  003518  90D8               	bcf	status,0,c
  5097  00351A  320A               	rrcf	___xxtofl@exp^0,f,c
  5098  00351C  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
  5099  003520  6A06               	clrf	(??___xxtofl+1)^0,c
  5100  003522  6A07               	clrf	(??___xxtofl+2)^0,c
  5101  003524  6A08               	clrf	(??___xxtofl+3)^0,c
  5102  003526  C005  F008         	movff	??___xxtofl,??___xxtofl+3
  5103  00352A  6A07               	clrf	(??___xxtofl+2)^0,c
  5104  00352C  6A06               	clrf	(??___xxtofl+1)^0,c
  5105  00352E  6A05               	clrf	??___xxtofl^0,c
  5106  003530  5005               	movf	??___xxtofl^0,w,c
  5107  003532  120B               	iorwf	___xxtofl@arg^0,f,c
  5108  003534  5006               	movf	(??___xxtofl+1)^0,w,c
  5109  003536  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
  5110  003538  5007               	movf	(??___xxtofl+2)^0,w,c
  5111  00353A  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
  5112  00353C  5008               	movf	(??___xxtofl+3)^0,w,c
  5113  00353E  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
  5114  003540  5009               	movf	___xxtofl@sign^0,w,c
  5115  003542  B4D8               	btfsc	status,2,c
  5116  003544  EFA6  F01A         	goto	u4391
  5117  003548  EFA8  F01A         	goto	u4390
  5118  00354C                     u4391:
  5119  00354C  EFB0  F01A         	goto	l4362
  5120  003550                     u4390:
  5121  003550  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  5122  003552  EFAF  F01A         	goto	u4400
  5123  003556  EFAD  F01A         	goto	u4401
  5124  00355A                     u4401:
  5125  00355A  EFB0  F01A         	goto	l4362
  5126  00355E                     u4400:
  5127  00355E  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
  5128  003560                     l4362:
  5129  003560  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
  5130  003564  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
  5131  003568  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
  5132  00356C  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
  5133  003570                     l1284:
  5134  003570  0012               	return		;funcret
  5135  003572                     __end_of___xxtofl:
  5136                           	callstack 0
  5137                           
  5138 ;; *************** function ___fldiv *****************
  5139 ;; Defined at:
  5140 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\sprcdiv.c"
  5141 ;; Parameters:    Size  Location     Type
  5142 ;;  b               4   14[COMRAM] unsigned char 
  5143 ;;  a               4   18[COMRAM] unsigned char 
  5144 ;; Auto vars:     Size  Location     Type
  5145 ;;  grs             4   33[COMRAM] unsigned long 
  5146 ;;  rem             4   26[COMRAM] unsigned long 
  5147 ;;  new_exp         2   31[COMRAM] short 
  5148 ;;  aexp            1   38[COMRAM] unsigned char 
  5149 ;;  bexp            1   37[COMRAM] unsigned char 
  5150 ;;  sign            1   30[COMRAM] unsigned char 
  5151 ;; Return value:  Size  Location     Type
  5152 ;;                  4   14[COMRAM] unsigned char 
  5153 ;; Registers used:
  5154 ;;		wreg, status,2, status,0
  5155 ;; Tracked objects:
  5156 ;;		On entry : 0/0
  5157 ;;		On exit  : 0/0
  5158 ;;		Unchanged: 0/0
  5159 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5160 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5161 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5162 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5163 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5164 ;;Total ram usage:       25 bytes
  5165 ;; Hardware stack levels used: 1
  5166 ;; This function calls:
  5167 ;;		Nothing
  5168 ;; This function is called by:
  5169 ;;		_detect_color
  5170 ;;		_check_color_reading
  5171 ;; This function uses a non-reentrant model
  5172 ;;
  5173                           
  5174                           	psect	text13
  5175  0027B4                     __ptext13:
  5176                           	callstack 0
  5177  0027B4                     ___fldiv:
  5178                           	callstack 28
  5179  0027B4  5012               	movf	(___fldiv@b+3)^0,w,c
  5180  0027B6  0B80               	andlw	128
  5181  0027B8  6E1F               	movwf	___fldiv@sign^0,c
  5182  0027BA  5012               	movf	(___fldiv@b+3)^0,w,c
  5183  0027BC  2412               	addwf	(___fldiv@b+3)^0,w,c
  5184  0027BE  6E26               	movwf	___fldiv@bexp^0,c
  5185  0027C0  AE11               	btfss	(___fldiv@b+2)^0,7,c
  5186  0027C2  EFE5  F013         	goto	u4081
  5187  0027C6  EFE7  F013         	goto	u4080
  5188  0027CA                     u4081:
  5189  0027CA  EFE8  F013         	goto	l4188
  5190  0027CE                     u4080:
  5191  0027CE  8026               	bsf	___fldiv@bexp^0,0,c
  5192  0027D0                     l4188:
  5193  0027D0  5026               	movf	___fldiv@bexp^0,w,c
  5194  0027D2  B4D8               	btfsc	status,2,c
  5195  0027D4  EFEE  F013         	goto	u4091
  5196  0027D8  EFF0  F013         	goto	u4090
  5197  0027DC                     u4091:
  5198  0027DC  EF05  F014         	goto	l4198
  5199  0027E0                     u4090:
  5200  0027E0  2826               	incf	___fldiv@bexp^0,w,c
  5201  0027E2  A4D8               	btfss	status,2,c
  5202  0027E4  EFF6  F013         	goto	u4101
  5203  0027E8  EFF8  F013         	goto	u4100
  5204  0027EC                     u4101:
  5205  0027EC  EF00  F014         	goto	l4194
  5206  0027F0                     u4100:
  5207  0027F0  0E00               	movlw	0
  5208  0027F2  6E0F               	movwf	___fldiv@b^0,c
  5209  0027F4  0E00               	movlw	0
  5210  0027F6  6E10               	movwf	(___fldiv@b+1)^0,c
  5211  0027F8  0E00               	movlw	0
  5212  0027FA  6E11               	movwf	(___fldiv@b+2)^0,c
  5213  0027FC  0E00               	movlw	0
  5214  0027FE  6E12               	movwf	(___fldiv@b+3)^0,c
  5215  002800                     l4194:
  5216  002800  8E11               	bsf	(___fldiv@b+2)^0,7,c
  5217  002802  0E00               	movlw	0
  5218  002804  6E12               	movwf	(___fldiv@b+3)^0,c
  5219  002806  EF0D  F014         	goto	l4200
  5220  00280A                     l4198:
  5221  00280A  0E00               	movlw	0
  5222  00280C  6E0F               	movwf	___fldiv@b^0,c
  5223  00280E  0E00               	movlw	0
  5224  002810  6E10               	movwf	(___fldiv@b+1)^0,c
  5225  002812  0E00               	movlw	0
  5226  002814  6E11               	movwf	(___fldiv@b+2)^0,c
  5227  002816  0E00               	movlw	0
  5228  002818  6E12               	movwf	(___fldiv@b+3)^0,c
  5229  00281A                     l4200:
  5230  00281A  5016               	movf	(___fldiv@a+3)^0,w,c
  5231  00281C  0B80               	andlw	128
  5232  00281E  1A1F               	xorwf	___fldiv@sign^0,f,c
  5233  002820  5016               	movf	(___fldiv@a+3)^0,w,c
  5234  002822  2416               	addwf	(___fldiv@a+3)^0,w,c
  5235  002824  6E27               	movwf	___fldiv@aexp^0,c
  5236  002826  AE15               	btfss	(___fldiv@a+2)^0,7,c
  5237  002828  EF18  F014         	goto	u4111
  5238  00282C  EF1A  F014         	goto	u4110
  5239  002830                     u4111:
  5240  002830  EF1B  F014         	goto	l4208
  5241  002834                     u4110:
  5242  002834  8027               	bsf	___fldiv@aexp^0,0,c
  5243  002836                     l4208:
  5244  002836  5027               	movf	___fldiv@aexp^0,w,c
  5245  002838  B4D8               	btfsc	status,2,c
  5246  00283A  EF21  F014         	goto	u4121
  5247  00283E  EF23  F014         	goto	u4120
  5248  002842                     u4121:
  5249  002842  EF38  F014         	goto	l4218
  5250  002846                     u4120:
  5251  002846  2827               	incf	___fldiv@aexp^0,w,c
  5252  002848  A4D8               	btfss	status,2,c
  5253  00284A  EF29  F014         	goto	u4131
  5254  00284E  EF2B  F014         	goto	u4130
  5255  002852                     u4131:
  5256  002852  EF33  F014         	goto	l4214
  5257  002856                     u4130:
  5258  002856  0E00               	movlw	0
  5259  002858  6E13               	movwf	___fldiv@a^0,c
  5260  00285A  0E00               	movlw	0
  5261  00285C  6E14               	movwf	(___fldiv@a+1)^0,c
  5262  00285E  0E00               	movlw	0
  5263  002860  6E15               	movwf	(___fldiv@a+2)^0,c
  5264  002862  0E00               	movlw	0
  5265  002864  6E16               	movwf	(___fldiv@a+3)^0,c
  5266  002866                     l4214:
  5267  002866  8E15               	bsf	(___fldiv@a+2)^0,7,c
  5268  002868  0E00               	movlw	0
  5269  00286A  6E16               	movwf	(___fldiv@a+3)^0,c
  5270  00286C  EF40  F014         	goto	l4220
  5271  002870                     l4218:
  5272  002870  0E00               	movlw	0
  5273  002872  6E13               	movwf	___fldiv@a^0,c
  5274  002874  0E00               	movlw	0
  5275  002876  6E14               	movwf	(___fldiv@a+1)^0,c
  5276  002878  0E00               	movlw	0
  5277  00287A  6E15               	movwf	(___fldiv@a+2)^0,c
  5278  00287C  0E00               	movlw	0
  5279  00287E  6E16               	movwf	(___fldiv@a+3)^0,c
  5280  002880                     l4220:
  5281  002880  5013               	movf	___fldiv@a^0,w,c
  5282  002882  1014               	iorwf	(___fldiv@a+1)^0,w,c
  5283  002884  1015               	iorwf	(___fldiv@a+2)^0,w,c
  5284  002886  1016               	iorwf	(___fldiv@a+3)^0,w,c
  5285  002888  A4D8               	btfss	status,2,c
  5286  00288A  EF49  F014         	goto	u4141
  5287  00288E  EF4B  F014         	goto	u4140
  5288  002892                     u4141:
  5289  002892  EF63  F014         	goto	l4232
  5290  002896                     u4140:
  5291  002896  0E00               	movlw	0
  5292  002898  6E0F               	movwf	___fldiv@b^0,c
  5293  00289A  0E00               	movlw	0
  5294  00289C  6E10               	movwf	(___fldiv@b+1)^0,c
  5295  00289E  0E00               	movlw	0
  5296  0028A0  6E11               	movwf	(___fldiv@b+2)^0,c
  5297  0028A2  0E00               	movlw	0
  5298  0028A4  6E12               	movwf	(___fldiv@b+3)^0,c
  5299  0028A6  0E80               	movlw	128
  5300  0028A8  1211               	iorwf	(___fldiv@b+2)^0,f,c
  5301  0028AA  0E7F               	movlw	127
  5302  0028AC  1212               	iorwf	(___fldiv@b+3)^0,f,c
  5303  0028AE                     l4226:
  5304  0028AE  501F               	movf	___fldiv@sign^0,w,c
  5305  0028B0  1212               	iorwf	(___fldiv@b+3)^0,f,c
  5306  0028B2  C00F  F00F         	movff	___fldiv@b,?___fldiv
  5307  0028B6  C010  F010         	movff	___fldiv@b+1,?___fldiv+1
  5308  0028BA  C011  F011         	movff	___fldiv@b+2,?___fldiv+2
  5309  0028BE  C012  F012         	movff	___fldiv@b+3,?___fldiv+3
  5310  0028C2  EFA6  F015         	goto	l1208
  5311  0028C6                     l4232:
  5312  0028C6  5026               	movf	___fldiv@bexp^0,w,c
  5313  0028C8  A4D8               	btfss	status,2,c
  5314  0028CA  EF69  F014         	goto	u4151
  5315  0028CE  EF6B  F014         	goto	u4150
  5316  0028D2                     u4151:
  5317  0028D2  EF75  F014         	goto	l4240
  5318  0028D6                     u4150:
  5319  0028D6  0E00               	movlw	0
  5320  0028D8  6E0F               	movwf	?___fldiv^0,c
  5321  0028DA  0E00               	movlw	0
  5322  0028DC  6E10               	movwf	(?___fldiv+1)^0,c
  5323  0028DE  0E00               	movlw	0
  5324  0028E0  6E11               	movwf	(?___fldiv+2)^0,c
  5325  0028E2  0E00               	movlw	0
  5326  0028E4  6E12               	movwf	(?___fldiv+3)^0,c
  5327  0028E6  EFA6  F015         	goto	l1208
  5328  0028EA                     l4240:
  5329  0028EA  5027               	movf	___fldiv@aexp^0,w,c
  5330  0028EC  C026  F017         	movff	___fldiv@bexp,??___fldiv
  5331  0028F0  6A18               	clrf	(??___fldiv+1)^0,c
  5332  0028F2  5E17               	subwf	??___fldiv^0,f,c
  5333  0028F4  0E00               	movlw	0
  5334  0028F6  5A18               	subwfb	(??___fldiv+1)^0,f,c
  5335  0028F8  0E7F               	movlw	127
  5336  0028FA  2417               	addwf	??___fldiv^0,w,c
  5337  0028FC  6E20               	movwf	___fldiv@new_exp^0,c
  5338  0028FE  0E00               	movlw	0
  5339  002900  2018               	addwfc	(??___fldiv+1)^0,w,c
  5340  002902  6E21               	movwf	(___fldiv@new_exp+1)^0,c
  5341  002904  C00F  F01B         	movff	___fldiv@b,___fldiv@rem
  5342  002908  C010  F01C         	movff	___fldiv@b+1,___fldiv@rem+1
  5343  00290C  C011  F01D         	movff	___fldiv@b+2,___fldiv@rem+2
  5344  002910  C012  F01E         	movff	___fldiv@b+3,___fldiv@rem+3
  5345  002914  0E00               	movlw	0
  5346  002916  6E0F               	movwf	___fldiv@b^0,c
  5347  002918  0E00               	movlw	0
  5348  00291A  6E10               	movwf	(___fldiv@b+1)^0,c
  5349  00291C  0E00               	movlw	0
  5350  00291E  6E11               	movwf	(___fldiv@b+2)^0,c
  5351  002920  0E00               	movlw	0
  5352  002922  6E12               	movwf	(___fldiv@b+3)^0,c
  5353  002924  0E00               	movlw	0
  5354  002926  6E22               	movwf	___fldiv@grs^0,c
  5355  002928  0E00               	movlw	0
  5356  00292A  6E23               	movwf	(___fldiv@grs+1)^0,c
  5357  00292C  0E00               	movlw	0
  5358  00292E  6E24               	movwf	(___fldiv@grs+2)^0,c
  5359  002930  0E00               	movlw	0
  5360  002932  6E25               	movwf	(___fldiv@grs+3)^0,c
  5361  002934  0E00               	movlw	0
  5362  002936  6E27               	movwf	___fldiv@aexp^0,c
  5363  002938  EFD6  F014         	goto	l1210
  5364  00293C                     l4250:
  5365  00293C  5027               	movf	___fldiv@aexp^0,w,c
  5366  00293E  B4D8               	btfsc	status,2,c
  5367  002940  EFA4  F014         	goto	u4161
  5368  002944  EFA6  F014         	goto	u4160
  5369  002948                     u4161:
  5370  002948  EFBD  F014         	goto	l4258
  5371  00294C                     u4160:
  5372  00294C  90D8               	bcf	status,0,c
  5373  00294E  361B               	rlcf	___fldiv@rem^0,f,c
  5374  002950  361C               	rlcf	(___fldiv@rem+1)^0,f,c
  5375  002952  361D               	rlcf	(___fldiv@rem+2)^0,f,c
  5376  002954  361E               	rlcf	(___fldiv@rem+3)^0,f,c
  5377  002956  90D8               	bcf	status,0,c
  5378  002958  360F               	rlcf	___fldiv@b^0,f,c
  5379  00295A  3610               	rlcf	(___fldiv@b+1)^0,f,c
  5380  00295C  3611               	rlcf	(___fldiv@b+2)^0,f,c
  5381  00295E  3612               	rlcf	(___fldiv@b+3)^0,f,c
  5382  002960  AE25               	btfss	(___fldiv@grs+3)^0,7,c
  5383  002962  EFB5  F014         	goto	u4171
  5384  002966  EFB7  F014         	goto	u4170
  5385  00296A                     u4171:
  5386  00296A  EFB8  F014         	goto	l1213
  5387  00296E                     u4170:
  5388  00296E  800F               	bsf	___fldiv@b^0,0,c
  5389  002970                     l1213:
  5390  002970  90D8               	bcf	status,0,c
  5391  002972  3622               	rlcf	___fldiv@grs^0,f,c
  5392  002974  3623               	rlcf	(___fldiv@grs+1)^0,f,c
  5393  002976  3624               	rlcf	(___fldiv@grs+2)^0,f,c
  5394  002978  3625               	rlcf	(___fldiv@grs+3)^0,f,c
  5395  00297A                     l4258:
  5396  00297A  5013               	movf	___fldiv@a^0,w,c
  5397  00297C  5C1B               	subwf	___fldiv@rem^0,w,c
  5398  00297E  5014               	movf	(___fldiv@a+1)^0,w,c
  5399  002980  581C               	subwfb	(___fldiv@rem+1)^0,w,c
  5400  002982  5015               	movf	(___fldiv@a+2)^0,w,c
  5401  002984  581D               	subwfb	(___fldiv@rem+2)^0,w,c
  5402  002986  5016               	movf	(___fldiv@a+3)^0,w,c
  5403  002988  581E               	subwfb	(___fldiv@rem+3)^0,w,c
  5404  00298A  A0D8               	btfss	status,0,c
  5405  00298C  EFCA  F014         	goto	u4181
  5406  002990  EFCC  F014         	goto	u4180
  5407  002994                     u4181:
  5408  002994  EFD5  F014         	goto	l4264
  5409  002998                     u4180:
  5410  002998  8C25               	bsf	(___fldiv@grs+3)^0,6,c
  5411  00299A  5013               	movf	___fldiv@a^0,w,c
  5412  00299C  5E1B               	subwf	___fldiv@rem^0,f,c
  5413  00299E  5014               	movf	(___fldiv@a+1)^0,w,c
  5414  0029A0  5A1C               	subwfb	(___fldiv@rem+1)^0,f,c
  5415  0029A2  5015               	movf	(___fldiv@a+2)^0,w,c
  5416  0029A4  5A1D               	subwfb	(___fldiv@rem+2)^0,f,c
  5417  0029A6  5016               	movf	(___fldiv@a+3)^0,w,c
  5418  0029A8  5A1E               	subwfb	(___fldiv@rem+3)^0,f,c
  5419  0029AA                     l4264:
  5420  0029AA  2A27               	incf	___fldiv@aexp^0,f,c
  5421  0029AC                     l1210:
  5422  0029AC  0E19               	movlw	25
  5423  0029AE  6427               	cpfsgt	___fldiv@aexp^0,c
  5424  0029B0  EFDC  F014         	goto	u4191
  5425  0029B4  EFDE  F014         	goto	u4190
  5426  0029B8                     u4191:
  5427  0029B8  EF9E  F014         	goto	l4250
  5428  0029BC                     u4190:
  5429  0029BC  501B               	movf	___fldiv@rem^0,w,c
  5430  0029BE  101C               	iorwf	(___fldiv@rem+1)^0,w,c
  5431  0029C0  101D               	iorwf	(___fldiv@rem+2)^0,w,c
  5432  0029C2  101E               	iorwf	(___fldiv@rem+3)^0,w,c
  5433  0029C4  B4D8               	btfsc	status,2,c
  5434  0029C6  EFE7  F014         	goto	u4201
  5435  0029CA  EFE9  F014         	goto	u4200
  5436  0029CE                     u4201:
  5437  0029CE  EF01  F015         	goto	l4276
  5438  0029D2                     u4200:
  5439  0029D2  8022               	bsf	___fldiv@grs^0,0,c
  5440  0029D4  EF01  F015         	goto	l4276
  5441  0029D8                     l4270:
  5442  0029D8  90D8               	bcf	status,0,c
  5443  0029DA  360F               	rlcf	___fldiv@b^0,f,c
  5444  0029DC  3610               	rlcf	(___fldiv@b+1)^0,f,c
  5445  0029DE  3611               	rlcf	(___fldiv@b+2)^0,f,c
  5446  0029E0  3612               	rlcf	(___fldiv@b+3)^0,f,c
  5447  0029E2  AE25               	btfss	(___fldiv@grs+3)^0,7,c
  5448  0029E4  EFF6  F014         	goto	u4211
  5449  0029E8  EFF8  F014         	goto	u4210
  5450  0029EC                     u4211:
  5451  0029EC  EFF9  F014         	goto	l1219
  5452  0029F0                     u4210:
  5453  0029F0  800F               	bsf	___fldiv@b^0,0,c
  5454  0029F2                     l1219:
  5455  0029F2  90D8               	bcf	status,0,c
  5456  0029F4  3622               	rlcf	___fldiv@grs^0,f,c
  5457  0029F6  3623               	rlcf	(___fldiv@grs+1)^0,f,c
  5458  0029F8  3624               	rlcf	(___fldiv@grs+2)^0,f,c
  5459  0029FA  3625               	rlcf	(___fldiv@grs+3)^0,f,c
  5460  0029FC  0620               	decf	___fldiv@new_exp^0,f,c
  5461  0029FE  A0D8               	btfss	status,0,c
  5462  002A00  0621               	decf	(___fldiv@new_exp+1)^0,f,c
  5463  002A02                     l4276:
  5464  002A02  AE11               	btfss	(___fldiv@b+2)^0,7,c
  5465  002A04  EF06  F015         	goto	u4221
  5466  002A08  EF08  F015         	goto	u4220
  5467  002A0C                     u4221:
  5468  002A0C  EFEC  F014         	goto	l4270
  5469  002A10                     u4220:
  5470  002A10  0E00               	movlw	0
  5471  002A12  6E27               	movwf	___fldiv@aexp^0,c
  5472  002A14  AE25               	btfss	(___fldiv@grs+3)^0,7,c
  5473  002A16  EF0F  F015         	goto	u4231
  5474  002A1A  EF11  F015         	goto	u4230
  5475  002A1E                     u4231:
  5476  002A1E  EF35  F015         	goto	l1221
  5477  002A22                     u4230:
  5478  002A22  0EFF               	movlw	255
  5479  002A24  1422               	andwf	___fldiv@grs^0,w,c
  5480  002A26  6E17               	movwf	??___fldiv^0,c
  5481  002A28  0EFF               	movlw	255
  5482  002A2A  1423               	andwf	(___fldiv@grs+1)^0,w,c
  5483  002A2C  6E18               	movwf	(??___fldiv+1)^0,c
  5484  002A2E  0EFF               	movlw	255
  5485  002A30  1424               	andwf	(___fldiv@grs+2)^0,w,c
  5486  002A32  6E19               	movwf	(??___fldiv+2)^0,c
  5487  002A34  0E7F               	movlw	127
  5488  002A36  1425               	andwf	(___fldiv@grs+3)^0,w,c
  5489  002A38  6E1A               	movwf	(??___fldiv+3)^0,c
  5490  002A3A  5017               	movf	??___fldiv^0,w,c
  5491  002A3C  1018               	iorwf	(??___fldiv+1)^0,w,c
  5492  002A3E  1019               	iorwf	(??___fldiv+2)^0,w,c
  5493  002A40  101A               	iorwf	(??___fldiv+3)^0,w,c
  5494  002A42  B4D8               	btfsc	status,2,c
  5495  002A44  EF26  F015         	goto	u4241
  5496  002A48  EF28  F015         	goto	u4240
  5497  002A4C                     u4241:
  5498  002A4C  EF2C  F015         	goto	l1222
  5499  002A50                     u4240:
  5500  002A50                     l4284:
  5501  002A50  0E01               	movlw	1
  5502  002A52  6E27               	movwf	___fldiv@aexp^0,c
  5503  002A54  EF35  F015         	goto	l1221
  5504  002A58                     l1222:
  5505  002A58  A00F               	btfss	___fldiv@b^0,0,c
  5506  002A5A  EF31  F015         	goto	u4251
  5507  002A5E  EF33  F015         	goto	u4250
  5508  002A62                     u4251:
  5509  002A62  EF35  F015         	goto	l1221
  5510  002A66                     u4250:
  5511  002A66  EF28  F015         	goto	l4284
  5512  002A6A                     l1221:
  5513  002A6A  5027               	movf	___fldiv@aexp^0,w,c
  5514  002A6C  B4D8               	btfsc	status,2,c
  5515  002A6E  EF3B  F015         	goto	u4261
  5516  002A72  EF3D  F015         	goto	u4260
  5517  002A76                     u4261:
  5518  002A76  EF61  F015         	goto	l4296
  5519  002A7A                     u4260:
  5520  002A7A  0E01               	movlw	1
  5521  002A7C  260F               	addwf	___fldiv@b^0,f,c
  5522  002A7E  0E00               	movlw	0
  5523  002A80  2210               	addwfc	(___fldiv@b+1)^0,f,c
  5524  002A82  2211               	addwfc	(___fldiv@b+2)^0,f,c
  5525  002A84  2212               	addwfc	(___fldiv@b+3)^0,f,c
  5526  002A86  A012               	btfss	(___fldiv@b+3)^0,0,c
  5527  002A88  EF48  F015         	goto	u4271
  5528  002A8C  EF4A  F015         	goto	u4270
  5529  002A90                     u4271:
  5530  002A90  EF61  F015         	goto	l4296
  5531  002A94                     u4270:
  5532  002A94  C00F  F017         	movff	___fldiv@b,??___fldiv
  5533  002A98  C010  F018         	movff	___fldiv@b+1,??___fldiv+1
  5534  002A9C  C011  F019         	movff	___fldiv@b+2,??___fldiv+2
  5535  002AA0  C012  F01A         	movff	___fldiv@b+3,??___fldiv+3
  5536  002AA4  341A               	rlcf	(??___fldiv+3)^0,w,c
  5537  002AA6  321A               	rrcf	(??___fldiv+3)^0,f,c
  5538  002AA8  3219               	rrcf	(??___fldiv+2)^0,f,c
  5539  002AAA  3218               	rrcf	(??___fldiv+1)^0,f,c
  5540  002AAC  3217               	rrcf	??___fldiv^0,f,c
  5541  002AAE  C017  F00F         	movff	??___fldiv,___fldiv@b
  5542  002AB2  C018  F010         	movff	??___fldiv+1,___fldiv@b+1
  5543  002AB6  C019  F011         	movff	??___fldiv+2,___fldiv@b+2
  5544  002ABA  C01A  F012         	movff	??___fldiv+3,___fldiv@b+3
  5545  002ABE  4A20               	infsnz	___fldiv@new_exp^0,f,c
  5546  002AC0  2A21               	incf	(___fldiv@new_exp+1)^0,f,c
  5547  002AC2                     l4296:
  5548  002AC2  BE21               	btfsc	(___fldiv@new_exp+1)^0,7,c
  5549  002AC4  EF6C  F015         	goto	u4281
  5550  002AC8  5021               	movf	(___fldiv@new_exp+1)^0,w,c
  5551  002ACA  E108               	bnz	u4280
  5552  002ACC  2820               	incf	___fldiv@new_exp^0,w,c
  5553  002ACE  A0D8               	btfss	status,0,c
  5554  002AD0  EF6C  F015         	goto	u4281
  5555  002AD4  EF6E  F015         	goto	u4280
  5556  002AD8                     u4281:
  5557  002AD8  EF79  F015         	goto	l4300
  5558  002ADC                     u4280:
  5559  002ADC  0E00               	movlw	0
  5560  002ADE  6E21               	movwf	(___fldiv@new_exp+1)^0,c
  5561  002AE0  6820               	setf	___fldiv@new_exp^0,c
  5562  002AE2  0E00               	movlw	0
  5563  002AE4  6E0F               	movwf	___fldiv@b^0,c
  5564  002AE6  0E00               	movlw	0
  5565  002AE8  6E10               	movwf	(___fldiv@b+1)^0,c
  5566  002AEA  0E00               	movlw	0
  5567  002AEC  6E11               	movwf	(___fldiv@b+2)^0,c
  5568  002AEE  0E00               	movlw	0
  5569  002AF0  6E12               	movwf	(___fldiv@b+3)^0,c
  5570  002AF2                     l4300:
  5571  002AF2  BE21               	btfsc	(___fldiv@new_exp+1)^0,7,c
  5572  002AF4  EF86  F015         	goto	u4290
  5573  002AF8  5021               	movf	(___fldiv@new_exp+1)^0,w,c
  5574  002AFA  E106               	bnz	u4291
  5575  002AFC  0420               	decf	___fldiv@new_exp^0,w,c
  5576  002AFE  B0D8               	btfsc	status,0,c
  5577  002B00  EF84  F015         	goto	u4291
  5578  002B04  EF86  F015         	goto	u4290
  5579  002B08                     u4291:
  5580  002B08  EF94  F015         	goto	l4304
  5581  002B0C                     u4290:
  5582  002B0C  0E00               	movlw	0
  5583  002B0E  6E21               	movwf	(___fldiv@new_exp+1)^0,c
  5584  002B10  0E00               	movlw	0
  5585  002B12  6E20               	movwf	___fldiv@new_exp^0,c
  5586  002B14  0E00               	movlw	0
  5587  002B16  6E0F               	movwf	___fldiv@b^0,c
  5588  002B18  0E00               	movlw	0
  5589  002B1A  6E10               	movwf	(___fldiv@b+1)^0,c
  5590  002B1C  0E00               	movlw	0
  5591  002B1E  6E11               	movwf	(___fldiv@b+2)^0,c
  5592  002B20  0E00               	movlw	0
  5593  002B22  6E12               	movwf	(___fldiv@b+3)^0,c
  5594  002B24  0E00               	movlw	0
  5595  002B26  6E1F               	movwf	___fldiv@sign^0,c
  5596  002B28                     l4304:
  5597  002B28  C020  F026         	movff	___fldiv@new_exp,___fldiv@bexp
  5598  002B2C  A026               	btfss	___fldiv@bexp^0,0,c
  5599  002B2E  EF9B  F015         	goto	u4301
  5600  002B32  EF9D  F015         	goto	u4300
  5601  002B36                     u4301:
  5602  002B36  EFA0  F015         	goto	l4310
  5603  002B3A                     u4300:
  5604  002B3A  8E11               	bsf	(___fldiv@b+2)^0,7,c
  5605  002B3C  EFA1  F015         	goto	l4312
  5606  002B40                     l4310:
  5607  002B40  9E11               	bcf	(___fldiv@b+2)^0,7,c
  5608  002B42                     l4312:
  5609  002B42  90D8               	bcf	status,0,c
  5610  002B44  3026               	rrcf	___fldiv@bexp^0,w,c
  5611  002B46  6E12               	movwf	(___fldiv@b+3)^0,c
  5612  002B48  EF57  F014         	goto	l4226
  5613  002B4C                     l1208:
  5614  002B4C  0012               	return		;funcret
  5615  002B4E                     __end_of___fldiv:
  5616                           	callstack 0
  5617                           
  5618 ;; *************** function _short_burst *****************
  5619 ;; Defined at:
  5620 ;;		line 8 in file "movement.c"
  5621 ;; Parameters:    Size  Location     Type
  5622 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  5623 ;;		 -> main@motorL(10), 
  5624 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  5625 ;;		 -> main@motorR(10), 
  5626 ;; Auto vars:     Size  Location     Type
  5627 ;;		None
  5628 ;; Return value:  Size  Location     Type
  5629 ;;                  1    wreg      void 
  5630 ;; Registers used:
  5631 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5632 ;; Tracked objects:
  5633 ;;		On entry : 0/0
  5634 ;;		On exit  : 0/0
  5635 ;;		Unchanged: 0/0
  5636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5637 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5638 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5639 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5640 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5641 ;;Total ram usage:        6 bytes
  5642 ;; Hardware stack levels used: 1
  5643 ;; Hardware stack levels required when called: 3
  5644 ;; This function calls:
  5645 ;;		_fullSpeedAhead
  5646 ;;		_stop
  5647 ;; This function is called by:
  5648 ;;		_main
  5649 ;; This function uses a non-reentrant model
  5650 ;;
  5651                           
  5652                           	psect	text14
  5653  004820                     __ptext14:
  5654                           	callstack 0
  5655  004820                     _short_burst:
  5656                           	callstack 27
  5657  004820                     
  5658                           ;movement.c: 8: void short_burst(struct DC_motor *mL, struct DC_motor *mR);movement.c: 9
      +                          : {;movement.c: 10:     fullSpeedAhead(mL,mR);
  5659  004820  C020  F01A         	movff	short_burst@mL,fullSpeedAhead@mL
  5660  004824  C021  F01B         	movff	short_burst@mL+1,fullSpeedAhead@mL+1
  5661  004828  C022  F01C         	movff	short_burst@mR,fullSpeedAhead@mR
  5662  00482C  C023  F01D         	movff	short_burst@mR+1,fullSpeedAhead@mR+1
  5663  004830  ECFF  F022         	call	_fullSpeedAhead	;wreg free
  5664  004834                     
  5665                           ;movement.c: 11:     _delay((unsigned long)((300)*(64000000/4000.0)));
  5666  004834  0E19               	movlw	25
  5667  004836  6E25               	movwf	(??_short_burst+1)^0,c
  5668  004838  0E5A               	movlw	90
  5669  00483A  6E24               	movwf	??_short_burst^0,c
  5670  00483C  0EB2               	movlw	178
  5671  00483E                     u5147:
  5672  00483E  2EE8               	decfsz	wreg,f,c
  5673  004840  D7FE               	bra	u5147
  5674  004842  2E24               	decfsz	??_short_burst^0,f,c
  5675  004844  D7FC               	bra	u5147
  5676  004846  2E25               	decfsz	(??_short_burst+1)^0,f,c
  5677  004848  D7FA               	bra	u5147
  5678  00484A                     
  5679                           ;movement.c: 12:     stop(mL,mR);
  5680  00484A  C020  F01A         	movff	short_burst@mL,stop@mL
  5681  00484E  C021  F01B         	movff	short_burst@mL+1,stop@mL+1
  5682  004852  C022  F01C         	movff	short_burst@mR,stop@mR
  5683  004856  C023  F01D         	movff	short_burst@mR+1,stop@mR+1
  5684  00485A  ECA1  F022         	call	_stop	;wreg free
  5685                           
  5686                           ;movement.c: 13:     _delay((unsigned long)((500)*(64000000/4000.0)));
  5687  00485E  0E29               	movlw	41
  5688  004860  6E25               	movwf	(??_short_burst+1)^0,c
  5689  004862  0E96               	movlw	150
  5690  004864  6E24               	movwf	??_short_burst^0,c
  5691  004866  0E7F               	movlw	127
  5692  004868                     u5157:
  5693  004868  2EE8               	decfsz	wreg,f,c
  5694  00486A  D7FE               	bra	u5157
  5695  00486C  2E24               	decfsz	??_short_burst^0,f,c
  5696  00486E  D7FC               	bra	u5157
  5697  004870  2E25               	decfsz	(??_short_burst+1)^0,f,c
  5698  004872  D7FA               	bra	u5157
  5699  004874  F000               	nop	
  5700  004876  0012               	return		;funcret
  5701  004878                     __end_of_short_burst:
  5702                           	callstack 0
  5703                           
  5704 ;; *************** function _fullSpeedAhead *****************
  5705 ;; Defined at:
  5706 ;;		line 143 in file "dc_motor.c"
  5707 ;; Parameters:    Size  Location     Type
  5708 ;;  mL              2   25[COMRAM] PTR struct DC_motor
  5709 ;;		 -> main@motorL(10), 
  5710 ;;  mR              2   27[COMRAM] PTR struct DC_motor
  5711 ;;		 -> main@motorR(10), 
  5712 ;; Auto vars:     Size  Location     Type
  5713 ;;		None
  5714 ;; Return value:  Size  Location     Type
  5715 ;;                  1    wreg      void 
  5716 ;; Registers used:
  5717 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5718 ;; Tracked objects:
  5719 ;;		On entry : 0/0
  5720 ;;		On exit  : 0/0
  5721 ;;		Unchanged: 0/0
  5722 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5723 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5724 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5725 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5726 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5727 ;;Total ram usage:        5 bytes
  5728 ;; Hardware stack levels used: 1
  5729 ;; Hardware stack levels required when called: 2
  5730 ;; This function calls:
  5731 ;;		_setMotorPWM
  5732 ;; This function is called by:
  5733 ;;		_main
  5734 ;;		_short_burst
  5735 ;;		_fullSpeedAhead_test
  5736 ;; This function uses a non-reentrant model
  5737 ;;
  5738                           
  5739                           	psect	text15
  5740  0045FE                     __ptext15:
  5741                           	callstack 0
  5742  0045FE                     _fullSpeedAhead:
  5743                           	callstack 27
  5744  0045FE                     
  5745                           ;dc_motor.c: 143: void fullSpeedAhead(struct DC_motor *mL, struct DC_motor *mR);dc_motor
      +                          .c: 144: {;dc_motor.c: 145:     mL->direction=1;
  5746  0045FE  EE20 F001          	lfsr	2,1
  5747  004602  501A               	movf	fullSpeedAhead@mL^0,w,c
  5748  004604  26D9               	addwf	fsr2l,f,c
  5749  004606  501B               	movf	(fullSpeedAhead@mL+1)^0,w,c
  5750  004608  22DA               	addwfc	fsr2h,f,c
  5751  00460A  0E01               	movlw	1
  5752  00460C  6EDF               	movwf	indf2,c
  5753                           
  5754                           ;dc_motor.c: 146:     mR->direction=1;
  5755  00460E  EE20 F001          	lfsr	2,1
  5756  004612  501C               	movf	fullSpeedAhead@mR^0,w,c
  5757  004614  26D9               	addwf	fsr2l,f,c
  5758  004616  501D               	movf	(fullSpeedAhead@mR+1)^0,w,c
  5759  004618  22DA               	addwfc	fsr2h,f,c
  5760  00461A  0E01               	movlw	1
  5761  00461C  6EDF               	movwf	indf2,c
  5762                           
  5763                           ;dc_motor.c: 147:     while (mL->power<20 && mR->power<20){
  5764  00461E  EF30  F023         	goto	l4618
  5765  004622                     l4610:
  5766                           
  5767                           ;dc_motor.c: 148:         mL->power += 10;
  5768  004622  C01A  FFD9         	movff	fullSpeedAhead@mL,fsr2l
  5769  004626  C01B  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
  5770  00462A  0E0A               	movlw	10
  5771  00462C  26DF               	addwf	indf2,f,c
  5772                           
  5773                           ;dc_motor.c: 149:         mR->power += 10;
  5774  00462E  C01C  FFD9         	movff	fullSpeedAhead@mR,fsr2l
  5775  004632  C01D  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
  5776  004636  0E0A               	movlw	10
  5777  004638  26DF               	addwf	indf2,f,c
  5778  00463A                     
  5779                           ;dc_motor.c: 150:         setMotorPWM(mL);
  5780  00463A  C01A  F00F         	movff	fullSpeedAhead@mL,setMotorPWM@m
  5781  00463E  C01B  F010         	movff	fullSpeedAhead@mL+1,setMotorPWM@m+1
  5782  004642  EC1A  F018         	call	_setMotorPWM	;wreg free
  5783  004646                     
  5784                           ;dc_motor.c: 151:         setMotorPWM(mR);
  5785  004646  C01C  F00F         	movff	fullSpeedAhead@mR,setMotorPWM@m
  5786  00464A  C01D  F010         	movff	fullSpeedAhead@mR+1,setMotorPWM@m+1
  5787  00464E  EC1A  F018         	call	_setMotorPWM	;wreg free
  5788  004652                     
  5789                           ;dc_motor.c: 152:         _delay((unsigned long)((10)*(64000000/4000.0)));
  5790  004652  0ED0               	movlw	208
  5791  004654  6E1E               	movwf	??_fullSpeedAhead^0,c
  5792  004656  0ECA               	movlw	202
  5793  004658                     u5167:
  5794  004658  2EE8               	decfsz	wreg,f,c
  5795  00465A  D7FE               	bra	u5167
  5796  00465C  2E1E               	decfsz	??_fullSpeedAhead^0,f,c
  5797  00465E  D7FC               	bra	u5167
  5798  004660                     l4618:
  5799                           
  5800                           ;dc_motor.c: 147:     while (mL->power<20 && mR->power<20){
  5801  004660  C01A  FFD9         	movff	fullSpeedAhead@mL,fsr2l
  5802  004664  C01B  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
  5803  004668  0E14               	movlw	20
  5804  00466A  60DF               	cpfslt	indf2,c
  5805  00466C  EF3A  F023         	goto	u4801
  5806  004670  EF3C  F023         	goto	u4800
  5807  004674                     u4801:
  5808  004674  EF48  F023         	goto	l343
  5809  004678                     u4800:
  5810  004678  C01C  FFD9         	movff	fullSpeedAhead@mR,fsr2l
  5811  00467C  C01D  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
  5812  004680  0E13               	movlw	19
  5813  004682  64DF               	cpfsgt	indf2,c
  5814  004684  EF46  F023         	goto	u4811
  5815  004688  EF48  F023         	goto	u4810
  5816  00468C                     u4811:
  5817  00468C  EF11  F023         	goto	l4610
  5818  004690                     u4810:
  5819  004690                     l343:
  5820  004690  0012               	return		;funcret
  5821  004692                     __end_of_fullSpeedAhead:
  5822                           	callstack 0
  5823                           
  5824 ;; *************** function _pin_init *****************
  5825 ;; Defined at:
  5826 ;;		line 66 in file "movement.c"
  5827 ;; Parameters:    Size  Location     Type
  5828 ;;		None
  5829 ;; Auto vars:     Size  Location     Type
  5830 ;;		None
  5831 ;; Return value:  Size  Location     Type
  5832 ;;                  1    wreg      void 
  5833 ;; Registers used:
  5834 ;;		None
  5835 ;; Tracked objects:
  5836 ;;		On entry : 0/0
  5837 ;;		On exit  : 0/0
  5838 ;;		Unchanged: 0/0
  5839 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5840 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5841 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5842 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5843 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5844 ;;Total ram usage:        0 bytes
  5845 ;; Hardware stack levels used: 1
  5846 ;; This function calls:
  5847 ;;		Nothing
  5848 ;; This function is called by:
  5849 ;;		_main
  5850 ;; This function uses a non-reentrant model
  5851 ;;
  5852                           
  5853                           	psect	text16
  5854  004EE0                     __ptext16:
  5855                           	callstack 0
  5856  004EE0                     _pin_init:
  5857                           	callstack 30
  5858  004EE0  8486               	bsf	134,2,c	;volatile
  5859                           
  5860                           ;movement.c: 68:     ANSELFbits.ANSELF2=0;
  5861  004EE2  010E               	movlb	14	; () banked
  5862  004EE4  95B4               	bcf	180,2,b	;volatile
  5863                           
  5864                           ;movement.c: 69:     TRISFbits.TRISF3=1;
  5865  004EE6  8686               	bsf	134,3,c	;volatile
  5866                           
  5867                           ;movement.c: 70:     ANSELFbits.ANSELF3=0;
  5868  004EE8  97B4               	bcf	180,3,b	;volatile
  5869                           
  5870                           ;movement.c: 72:     TRISFbits.TRISF6 = 0;
  5871  004EEA  9C86               	bcf	134,6,c	;volatile
  5872                           
  5873                           ;movement.c: 73:     LATFbits.LATF6 = 0;
  5874  004EEC  9C7E               	bcf	126,6,c	;volatile
  5875                           
  5876                           ;movement.c: 75:     TRISGbits.TRISG1 = 0;
  5877  004EEE  9287               	bcf	135,1,c	;volatile
  5878                           
  5879                           ;movement.c: 76:     TRISFbits.TRISF7 = 0;
  5880  004EF0  9E86               	bcf	134,7,c	;volatile
  5881                           
  5882                           ;movement.c: 77:     TRISAbits.TRISA4 = 0;
  5883  004EF2  9881               	bcf	129,4,c	;volatile
  5884                           
  5885                           ;movement.c: 78:     LATGbits.LATG1 = 1;
  5886  004EF4  827F               	bsf	127,1,c	;volatile
  5887                           
  5888                           ;movement.c: 79:     LATFbits.LATF7 = 1;
  5889  004EF6  8E7E               	bsf	126,7,c	;volatile
  5890                           
  5891                           ;movement.c: 80:     LATAbits.LATA4 = 1;
  5892  004EF8  8879               	bsf	121,4,c	;volatile
  5893  004EFA                     
  5894                           ; BSR set to: 14
  5895  004EFA  0012               	return		;funcret
  5896  004EFC                     __end_of_pin_init:
  5897                           	callstack 0
  5898                           
  5899 ;; *************** function _initUSART4 *****************
  5900 ;; Defined at:
  5901 ;;		line 4 in file "serial.c"
  5902 ;; Parameters:    Size  Location     Type
  5903 ;;		None
  5904 ;; Auto vars:     Size  Location     Type
  5905 ;;		None
  5906 ;; Return value:  Size  Location     Type
  5907 ;;                  1    wreg      void 
  5908 ;; Registers used:
  5909 ;;		wreg, status,2
  5910 ;; Tracked objects:
  5911 ;;		On entry : 0/0
  5912 ;;		On exit  : 0/0
  5913 ;;		Unchanged: 0/0
  5914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5915 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5916 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5917 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5918 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5919 ;;Total ram usage:        0 bytes
  5920 ;; Hardware stack levels used: 1
  5921 ;; This function calls:
  5922 ;;		Nothing
  5923 ;; This function is called by:
  5924 ;;		_main
  5925 ;; This function uses a non-reentrant model
  5926 ;;
  5927                           
  5928                           	psect	text17
  5929  004EC2                     __ptext17:
  5930                           	callstack 0
  5931  004EC2                     _initUSART4:
  5932                           	callstack 30
  5933  004EC2                     
  5934                           ;serial.c: 8:     RC0PPS = 0x12;
  5935  004EC2  0E12               	movlw	18
  5936  004EC4  010E               	movlb	14	; () banked
  5937  004EC6  6F62               	movwf	98,b	;volatile
  5938                           
  5939                           ;serial.c: 9:     RX4PPS = 0x11;
  5940  004EC8  0E11               	movlw	17
  5941  004ECA  6F15               	movwf	21,b	;volatile
  5942  004ECC                     
  5943                           ; BSR set to: 14
  5944                           ;serial.c: 11:     BAUD4CONbits.BRG16 = 0;
  5945  004ECC  97E9               	bcf	233,3,b	;volatile
  5946  004ECE                     
  5947                           ; BSR set to: 14
  5948                           ;serial.c: 12:     TX4STAbits.BRGH = 0;
  5949  004ECE  95E8               	bcf	232,2,b	;volatile
  5950                           
  5951                           ;serial.c: 13:     SP4BRGL = 51;
  5952  004ED0  0E33               	movlw	51
  5953  004ED2  6FE5               	movwf	229,b	;volatile
  5954                           
  5955                           ;serial.c: 15:     SP4BRGH = 0;
  5956  004ED4  0E00               	movlw	0
  5957  004ED6  6FE6               	movwf	230,b	;volatile
  5958  004ED8                     
  5959                           ; BSR set to: 14
  5960                           ;serial.c: 17:     RC4STAbits.CREN = 1;
  5961  004ED8  89E7               	bsf	231,4,b	;volatile
  5962  004EDA                     
  5963                           ; BSR set to: 14
  5964                           ;serial.c: 18:     TX4STAbits.TXEN = 1;
  5965  004EDA  8BE8               	bsf	232,5,b	;volatile
  5966  004EDC                     
  5967                           ; BSR set to: 14
  5968                           ;serial.c: 19:     RC4STAbits.SPEN = 1;
  5969  004EDC  8FE7               	bsf	231,7,b	;volatile
  5970  004EDE                     
  5971                           ; BSR set to: 14
  5972  004EDE  0012               	return		;funcret
  5973  004EE0                     __end_of_initUSART4:
  5974                           	callstack 0
  5975                           
  5976 ;; *************** function _initDCmotors_parameter *****************
  5977 ;; Defined at:
  5978 ;;		line 42 in file "dc_motor.c"
  5979 ;; Parameters:    Size  Location     Type
  5980 ;;  motorL          2    0[COMRAM] PTR struct DC_motor
  5981 ;;		 -> main@motorL(10), 
  5982 ;;  motorR          2    2[COMRAM] PTR struct DC_motor
  5983 ;;		 -> main@motorR(10), 
  5984 ;; Auto vars:     Size  Location     Type
  5985 ;;		None
  5986 ;; Return value:  Size  Location     Type
  5987 ;;                  1    wreg      void 
  5988 ;; Registers used:
  5989 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5990 ;; Tracked objects:
  5991 ;;		On entry : 0/0
  5992 ;;		On exit  : 0/0
  5993 ;;		Unchanged: 0/0
  5994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5995 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5996 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5997 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5998 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5999 ;;Total ram usage:        4 bytes
  6000 ;; Hardware stack levels used: 1
  6001 ;; This function calls:
  6002 ;;		Nothing
  6003 ;; This function is called by:
  6004 ;;		_main
  6005 ;; This function uses a non-reentrant model
  6006 ;;
  6007                           
  6008                           	psect	text18
  6009  004096                     __ptext18:
  6010                           	callstack 0
  6011  004096                     _initDCmotors_parameter:
  6012                           	callstack 30
  6013  004096                     
  6014                           ;dc_motor.c: 44:     motorL->power = 0;
  6015  004096  C001  FFD9         	movff	initDCmotors_parameter@motorL,fsr2l
  6016  00409A  C002  FFDA         	movff	initDCmotors_parameter@motorL+1,fsr2h
  6017  00409E  0E00               	movlw	0
  6018  0040A0  6EDF               	movwf	indf2,c
  6019  0040A2                     
  6020                           ;dc_motor.c: 45:     motorL->direction = 1;
  6021  0040A2  EE20 F001          	lfsr	2,1
  6022  0040A6  5001               	movf	initDCmotors_parameter@motorL^0,w,c
  6023  0040A8  26D9               	addwf	fsr2l,f,c
  6024  0040AA  5002               	movf	(initDCmotors_parameter@motorL+1)^0,w,c
  6025  0040AC  22DA               	addwfc	fsr2h,f,c
  6026  0040AE  0E01               	movlw	1
  6027  0040B0  6EDF               	movwf	indf2,c
  6028  0040B2                     
  6029                           ;dc_motor.c: 46:     motorL->dutyHighByte = (unsigned char *)(&PWM6DCH);
  6030  0040B2  EE20 F002          	lfsr	2,2
  6031  0040B6  5001               	movf	initDCmotors_parameter@motorL^0,w,c
  6032  0040B8  26D9               	addwf	fsr2l,f,c
  6033  0040BA  5002               	movf	(initDCmotors_parameter@motorL+1)^0,w,c
  6034  0040BC  22DA               	addwfc	fsr2h,f,c
  6035  0040BE  0EA3               	movlw	163
  6036  0040C0  6EDE               	movwf	postinc2,c
  6037  0040C2  0E0F               	movlw	15
  6038  0040C4  6EDD               	movwf	postdec2,c
  6039  0040C6                     
  6040                           ;dc_motor.c: 47:     motorL->dir_LAT = (unsigned char *)(&LATE);
  6041  0040C6  EE20 F004          	lfsr	2,4
  6042  0040CA  5001               	movf	initDCmotors_parameter@motorL^0,w,c
  6043  0040CC  26D9               	addwf	fsr2l,f,c
  6044  0040CE  5002               	movf	(initDCmotors_parameter@motorL+1)^0,w,c
  6045  0040D0  22DA               	addwfc	fsr2h,f,c
  6046  0040D2  0E7D               	movlw	125
  6047  0040D4  6EDE               	movwf	postinc2,c
  6048  0040D6  0E0F               	movlw	15
  6049  0040D8  6EDD               	movwf	postdec2,c
  6050  0040DA                     
  6051                           ;dc_motor.c: 48:     motorL->dir_pin = 4;
  6052  0040DA  EE20 F006          	lfsr	2,6
  6053  0040DE  5001               	movf	initDCmotors_parameter@motorL^0,w,c
  6054  0040E0  26D9               	addwf	fsr2l,f,c
  6055  0040E2  5002               	movf	(initDCmotors_parameter@motorL+1)^0,w,c
  6056  0040E4  22DA               	addwfc	fsr2h,f,c
  6057  0040E6  0E04               	movlw	4
  6058  0040E8  6EDF               	movwf	indf2,c
  6059  0040EA                     
  6060                           ;dc_motor.c: 49:     motorL->PWMperiod = 199;
  6061  0040EA  EE20 F007          	lfsr	2,7
  6062  0040EE  5001               	movf	initDCmotors_parameter@motorL^0,w,c
  6063  0040F0  26D9               	addwf	fsr2l,f,c
  6064  0040F2  5002               	movf	(initDCmotors_parameter@motorL+1)^0,w,c
  6065  0040F4  22DA               	addwfc	fsr2h,f,c
  6066  0040F6  0EC7               	movlw	199
  6067  0040F8  6EDE               	movwf	postinc2,c
  6068  0040FA  0E00               	movlw	0
  6069  0040FC  6EDD               	movwf	postdec2,c
  6070  0040FE                     
  6071                           ;dc_motor.c: 52:     motorR->power = 0;
  6072  0040FE  C003  FFD9         	movff	initDCmotors_parameter@motorR,fsr2l
  6073  004102  C004  FFDA         	movff	initDCmotors_parameter@motorR+1,fsr2h
  6074  004106  0E00               	movlw	0
  6075  004108  6EDF               	movwf	indf2,c
  6076                           
  6077                           ;dc_motor.c: 53:     motorR->direction = 1;
  6078  00410A  EE20 F001          	lfsr	2,1
  6079  00410E  5003               	movf	initDCmotors_parameter@motorR^0,w,c
  6080  004110  26D9               	addwf	fsr2l,f,c
  6081  004112  5004               	movf	(initDCmotors_parameter@motorR+1)^0,w,c
  6082  004114  22DA               	addwfc	fsr2h,f,c
  6083  004116  0E01               	movlw	1
  6084  004118  6EDF               	movwf	indf2,c
  6085                           
  6086                           ;dc_motor.c: 54:     motorR->dutyHighByte = (unsigned char *)(&PWM7DCH);
  6087  00411A  EE20 F002          	lfsr	2,2
  6088  00411E  5003               	movf	initDCmotors_parameter@motorR^0,w,c
  6089  004120  26D9               	addwf	fsr2l,f,c
  6090  004122  5004               	movf	(initDCmotors_parameter@motorR+1)^0,w,c
  6091  004124  22DA               	addwfc	fsr2h,f,c
  6092  004126  0EA0               	movlw	160
  6093  004128  6EDE               	movwf	postinc2,c
  6094  00412A  0E0F               	movlw	15
  6095  00412C  6EDD               	movwf	postdec2,c
  6096                           
  6097                           ;dc_motor.c: 55:     motorR->dir_LAT = (unsigned char *)(&LATG);
  6098  00412E  EE20 F004          	lfsr	2,4
  6099  004132  5003               	movf	initDCmotors_parameter@motorR^0,w,c
  6100  004134  26D9               	addwf	fsr2l,f,c
  6101  004136  5004               	movf	(initDCmotors_parameter@motorR+1)^0,w,c
  6102  004138  22DA               	addwfc	fsr2h,f,c
  6103  00413A  0E7F               	movlw	127
  6104  00413C  6EDE               	movwf	postinc2,c
  6105  00413E  0E0F               	movlw	15
  6106  004140  6EDD               	movwf	postdec2,c
  6107                           
  6108                           ;dc_motor.c: 56:     motorR->dir_pin = 6;
  6109  004142  EE20 F006          	lfsr	2,6
  6110  004146  5003               	movf	initDCmotors_parameter@motorR^0,w,c
  6111  004148  26D9               	addwf	fsr2l,f,c
  6112  00414A  5004               	movf	(initDCmotors_parameter@motorR+1)^0,w,c
  6113  00414C  22DA               	addwfc	fsr2h,f,c
  6114  00414E  0E06               	movlw	6
  6115  004150  6EDF               	movwf	indf2,c
  6116                           
  6117                           ;dc_motor.c: 57:     motorR->PWMperiod = 199;
  6118  004152  EE20 F007          	lfsr	2,7
  6119  004156  5003               	movf	initDCmotors_parameter@motorR^0,w,c
  6120  004158  26D9               	addwf	fsr2l,f,c
  6121  00415A  5004               	movf	(initDCmotors_parameter@motorR+1)^0,w,c
  6122  00415C  22DA               	addwfc	fsr2h,f,c
  6123  00415E  0EC7               	movlw	199
  6124  004160  6EDE               	movwf	postinc2,c
  6125  004162  0E00               	movlw	0
  6126  004164  6EDD               	movwf	postdec2,c
  6127  004166  0012               	return		;funcret
  6128  004168                     __end_of_initDCmotors_parameter:
  6129                           	callstack 0
  6130                           
  6131 ;; *************** function _initDCmotorsPWM *****************
  6132 ;; Defined at:
  6133 ;;		line 12 in file "dc_motor.c"
  6134 ;; Parameters:    Size  Location     Type
  6135 ;;  PWMperiod       2    0[COMRAM] int 
  6136 ;; Auto vars:     Size  Location     Type
  6137 ;;		None
  6138 ;; Return value:  Size  Location     Type
  6139 ;;                  1    wreg      void 
  6140 ;; Registers used:
  6141 ;;		wreg, status,2
  6142 ;; Tracked objects:
  6143 ;;		On entry : 0/0
  6144 ;;		On exit  : 0/0
  6145 ;;		Unchanged: 0/0
  6146 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6147 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6148 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6149 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6150 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6151 ;;Total ram usage:        2 bytes
  6152 ;; Hardware stack levels used: 1
  6153 ;; This function calls:
  6154 ;;		Nothing
  6155 ;; This function is called by:
  6156 ;;		_main
  6157 ;; This function uses a non-reentrant model
  6158 ;;
  6159                           
  6160                           	psect	text19
  6161  004ADE                     __ptext19:
  6162                           	callstack 0
  6163  004ADE                     _initDCmotorsPWM:
  6164                           	callstack 30
  6165  004ADE                     
  6166                           ;dc_motor.c: 15:     TRISEbits.TRISE2=0;
  6167  004ADE  9485               	bcf	133,2,c	;volatile
  6168                           
  6169                           ;dc_motor.c: 16:     TRISCbits.TRISC7=0;
  6170  004AE0  9E83               	bcf	131,7,c	;volatile
  6171                           
  6172                           ;dc_motor.c: 17:     TRISGbits.TRISG6=0;
  6173  004AE2  9C87               	bcf	135,6,c	;volatile
  6174                           
  6175                           ;dc_motor.c: 18:     TRISEbits.TRISE4=0;
  6176  004AE4  9885               	bcf	133,4,c	;volatile
  6177                           
  6178                           ;dc_motor.c: 19:     LATEbits.LATE2=0;
  6179  004AE6  947D               	bcf	125,2,c	;volatile
  6180                           
  6181                           ;dc_motor.c: 20:     LATCbits.LATC7=0;
  6182  004AE8  9E7B               	bcf	123,7,c	;volatile
  6183                           
  6184                           ;dc_motor.c: 21:     LATGbits.LATG6=0;
  6185  004AEA  9C7F               	bcf	127,6,c	;volatile
  6186                           
  6187                           ;dc_motor.c: 22:     LATEbits.LATE4=0;
  6188  004AEC  987D               	bcf	125,4,c	;volatile
  6189  004AEE                     
  6190                           ;dc_motor.c: 25:     T2CONbits.CKPS=0b011;
  6191  004AEE  50BD               	movf	189,w,c	;volatile
  6192  004AF0  0B8F               	andlw	-113
  6193  004AF2  0930               	iorlw	48
  6194  004AF4  6EBD               	movwf	189,c	;volatile
  6195                           
  6196                           ;dc_motor.c: 26:     T2HLTbits.MODE=0b00000;
  6197  004AF6  0EE0               	movlw	-32
  6198  004AF8  16BE               	andwf	190,f,c	;volatile
  6199                           
  6200                           ;dc_motor.c: 27:     T2CLKCONbits.CS=0b0001;
  6201  004AFA  50BF               	movf	191,w,c	;volatile
  6202  004AFC  0BF0               	andlw	-16
  6203  004AFE  0901               	iorlw	1
  6204  004B00  6EBF               	movwf	191,c	;volatile
  6205                           
  6206                           ;dc_motor.c: 30:     T2PR=200-1;
  6207  004B02  0EC7               	movlw	199
  6208  004B04  6EBC               	movwf	188,c	;volatile
  6209  004B06                     
  6210                           ;dc_motor.c: 31:     T2CONbits.ON=1;
  6211  004B06  8EBD               	bsf	189,7,c	;volatile
  6212                           
  6213                           ;dc_motor.c: 33:     RE2PPS=0x0A;
  6214  004B08  0E0A               	movlw	10
  6215  004B0A  010E               	movlb	14	; () banked
  6216  004B0C  6F74               	movwf	116,b	;volatile
  6217                           
  6218                           ;dc_motor.c: 34:     RC7PPS=0x0B;
  6219  004B0E  0E0B               	movlw	11
  6220  004B10  6F69               	movwf	105,b	;volatile
  6221                           
  6222                           ;dc_motor.c: 36:     PWM6DCH=0;
  6223  004B12  0E00               	movlw	0
  6224  004B14  6EA3               	movwf	163,c	;volatile
  6225                           
  6226                           ;dc_motor.c: 37:     PWM7DCH=0;
  6227  004B16  0E00               	movlw	0
  6228  004B18  6EA0               	movwf	160,c	;volatile
  6229  004B1A                     
  6230                           ; BSR set to: 14
  6231                           ;dc_motor.c: 39:     PWM6CONbits.EN = 1;
  6232  004B1A  8EA4               	bsf	164,7,c	;volatile
  6233  004B1C                     
  6234                           ; BSR set to: 14
  6235                           ;dc_motor.c: 40:     PWM7CONbits.EN = 1;
  6236  004B1C  8EA1               	bsf	161,7,c	;volatile
  6237  004B1E                     
  6238                           ; BSR set to: 14
  6239  004B1E  0012               	return		;funcret
  6240  004B20                     __end_of_initDCmotorsPWM:
  6241                           	callstack 0
  6242                           
  6243 ;; *************** function _distance_measure *****************
  6244 ;; Defined at:
  6245 ;;		line 328 in file "color.c"
  6246 ;; Parameters:    Size  Location     Type
  6247 ;;  mL              2   11[COMRAM] PTR struct DC_motor
  6248 ;;		 -> main@motorL(10), 
  6249 ;;  mR              2   13[COMRAM] PTR struct DC_motor
  6250 ;;		 -> main@motorR(10), 
  6251 ;; Auto vars:     Size  Location     Type
  6252 ;;  CC              2   21[COMRAM] unsigned int 
  6253 ;;  CB              2   19[COMRAM] unsigned int 
  6254 ;;  CG              2   17[COMRAM] unsigned int 
  6255 ;;  CR              2   15[COMRAM] unsigned int 
  6256 ;;  stop            1   23[COMRAM] unsigned char 
  6257 ;; Return value:  Size  Location     Type
  6258 ;;                  1    wreg      unsigned char 
  6259 ;; Registers used:
  6260 ;;		wreg, status,2, status,0, cstack
  6261 ;; Tracked objects:
  6262 ;;		On entry : 0/0
  6263 ;;		On exit  : 0/0
  6264 ;;		Unchanged: 0/0
  6265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6266 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6267 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6268 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6269 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6270 ;;Total ram usage:       13 bytes
  6271 ;; Hardware stack levels used: 1
  6272 ;; Hardware stack levels required when called: 3
  6273 ;; This function calls:
  6274 ;;		_LED_C
  6275 ;;		_color_read_Clear
  6276 ;; This function is called by:
  6277 ;;		_main
  6278 ;; This function uses a non-reentrant model
  6279 ;;
  6280                           
  6281                           	psect	text20
  6282  004A0A                     __ptext20:
  6283                           	callstack 0
  6284  004A0A                     _distance_measure:
  6285                           	callstack 27
  6286  004A0A  0E00               	movlw	0
  6287  004A0C  6E11               	movwf	(distance_measure@CR+1)^0,c
  6288  004A0E  0E00               	movlw	0
  6289  004A10  6E10               	movwf	distance_measure@CR^0,c
  6290  004A12  0E00               	movlw	0
  6291  004A14  6E13               	movwf	(distance_measure@CG+1)^0,c
  6292  004A16  0E00               	movlw	0
  6293  004A18  6E12               	movwf	distance_measure@CG^0,c
  6294  004A1A  0E00               	movlw	0
  6295  004A1C  6E15               	movwf	(distance_measure@CB+1)^0,c
  6296  004A1E  0E00               	movlw	0
  6297  004A20  6E14               	movwf	distance_measure@CB^0,c
  6298                           
  6299                           ;color.c: 331:     unsigned char stop = 0;
  6300  004A22  0E00               	movlw	0
  6301  004A24  6E18               	movwf	distance_measure@stop^0,c
  6302  004A26                     
  6303                           ;color.c: 332:     LED_C();
  6304  004A26  EC11  F027         	call	_LED_C	;wreg free
  6305  004A2A                     
  6306                           ;color.c: 334:     CC = color_read_Clear();
  6307  004A2A  ECB5  F024         	call	_color_read_Clear	;wreg free
  6308  004A2E  C005  F016         	movff	?_color_read_Clear,distance_measure@CC
  6309  004A32  C006  F017         	movff	?_color_read_Clear+1,distance_measure@CC+1
  6310  004A36                     
  6311                           ;color.c: 335:     if (CC >= 1500 ){
  6312  004A36  0EDC               	movlw	220
  6313  004A38  5C16               	subwf	distance_measure@CC^0,w,c
  6314  004A3A  0E05               	movlw	5
  6315  004A3C  5817               	subwfb	(distance_measure@CC+1)^0,w,c
  6316  004A3E  A0D8               	btfss	status,0,c
  6317  004A40  EF24  F025         	goto	u4871
  6318  004A44  EF26  F025         	goto	u4870
  6319  004A48                     u4871:
  6320  004A48  EF28  F025         	goto	l169
  6321  004A4C                     u4870:
  6322  004A4C                     
  6323                           ;color.c: 336:         stop = 1;
  6324  004A4C  0E01               	movlw	1
  6325  004A4E  6E18               	movwf	distance_measure@stop^0,c
  6326  004A50                     l169:
  6327                           
  6328                           ;color.c: 338:     return stop;
  6329  004A50  5018               	movf	distance_measure@stop^0,w,c
  6330  004A52  0012               	return		;funcret
  6331  004A54                     __end_of_distance_measure:
  6332                           	callstack 0
  6333                           
  6334 ;; *************** function _color_data_collection *****************
  6335 ;; Defined at:
  6336 ;;		line 136 in file "color.c"
  6337 ;; Parameters:    Size  Location     Type
  6338 ;;  m               2   89[COMRAM] PTR struct color_rgb
  6339 ;;		 -> main@rgb(8), 
  6340 ;; Auto vars:     Size  Location     Type
  6341 ;;  x               2  132[BANK0 ] int 
  6342 ;;  k               2  130[BANK0 ] int 
  6343 ;;  j               2  128[BANK0 ] int 
  6344 ;;  i               2  126[BANK0 ] int 
  6345 ;; Return value:  Size  Location     Type
  6346 ;;                  1    wreg      void 
  6347 ;; Registers used:
  6348 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6349 ;; Tracked objects:
  6350 ;;		On entry : 0/0
  6351 ;;		On exit  : 0/0
  6352 ;;		Unchanged: 0/0
  6353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6354 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6355 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6356 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6357 ;;      Totals:         4       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6358 ;;Total ram usage:       12 bytes
  6359 ;; Hardware stack levels used: 1
  6360 ;; Hardware stack levels required when called: 9
  6361 ;; This function calls:
  6362 ;;		_LED_B
  6363 ;;		_LED_C
  6364 ;;		_LED_G
  6365 ;;		_LED_R
  6366 ;;		_color_display
  6367 ;;		_color_predict
  6368 ;;		_read_color
  6369 ;; This function is called by:
  6370 ;;		_main
  6371 ;; This function uses a non-reentrant model
  6372 ;;
  6373                           
  6374                           	psect	text21
  6375  003208                     __ptext21:
  6376                           	callstack 0
  6377  003208                     _color_data_collection:
  6378                           	callstack 21
  6379  003208                     
  6380                           ;color.c: 138:     int i = 0; int j = 0; int k = 0; int x = 0;
  6381  003208  0E00               	movlw	0
  6382  00320A  0100               	movlb	0	; () banked
  6383  00320C  6FDF               	movwf	(color_data_collection@i+1)& (0+255),b
  6384  00320E  0E00               	movlw	0
  6385  003210  6FDE               	movwf	color_data_collection@i& (0+255),b
  6386  003212  0E00               	movlw	0
  6387  003214  6FE3               	movwf	(color_data_collection@k+1)& (0+255),b
  6388  003216  0E00               	movlw	0
  6389  003218  6FE2               	movwf	color_data_collection@k& (0+255),b
  6390  00321A  0E00               	movlw	0
  6391  00321C  6FE5               	movwf	(color_data_collection@x+1)& (0+255),b
  6392  00321E  0E00               	movlw	0
  6393  003220  6FE4               	movwf	color_data_collection@x& (0+255),b
  6394                           
  6395                           ;color.c: 139:     for (i = 0; i <5; ++i){
  6396  003222  0E00               	movlw	0
  6397  003224  6FDF               	movwf	(color_data_collection@i+1)& (0+255),b
  6398  003226  0E00               	movlw	0
  6399  003228  6FDE               	movwf	color_data_collection@i& (0+255),b
  6400  00322A                     l4652:
  6401                           
  6402                           ; BSR set to: 0
  6403                           ;color.c: 140:         LED_C();
  6404  00322A  EC11  F027         	call	_LED_C	;wreg free
  6405  00322E                     
  6406                           ;color.c: 141:         read_color(m);
  6407  00322E  C05A  F00C         	movff	color_data_collection@m,read_color@m
  6408  003232  C05B  F00D         	movff	color_data_collection@m+1,read_color@m+1
  6409  003236  ECE1  F023         	call	_read_color	;wreg free
  6410  00323A                     
  6411                           ;color.c: 142:         color_display(m);
  6412  00323A  C05A  F058         	movff	color_data_collection@m,color_display@m
  6413  00323E  C05B  F059         	movff	color_data_collection@m+1,color_display@m+1
  6414  003242  EC49  F023         	call	_color_display	;wreg free
  6415  003246                     
  6416                           ;color.c: 143:         _delay((unsigned long)((100)*(64000000/4000.0)));
  6417  003246  0E09               	movlw	9
  6418  003248  6E5D               	movwf	(??_color_data_collection+1)^0,c
  6419  00324A  0E1E               	movlw	30
  6420  00324C  6E5C               	movwf	??_color_data_collection^0,c
  6421  00324E  0EE4               	movlw	228
  6422  003250                     u5177:
  6423  003250  2EE8               	decfsz	wreg,f,c
  6424  003252  D7FE               	bra	u5177
  6425  003254  2E5C               	decfsz	??_color_data_collection^0,f,c
  6426  003256  D7FC               	bra	u5177
  6427  003258  2E5D               	decfsz	(??_color_data_collection+1)^0,f,c
  6428  00325A  D7FA               	bra	u5177
  6429  00325C  D000               	nop2	
  6430  00325E                     
  6431                           ;color.c: 144:     }
  6432  00325E  0100               	movlb	0	; () banked
  6433  003260  4BDE               	infsnz	color_data_collection@i& (0+255),f,b
  6434  003262  2BDF               	incf	(color_data_collection@i+1)& (0+255),f,b
  6435  003264                     
  6436                           ; BSR set to: 0
  6437  003264  BFDF               	btfsc	(color_data_collection@i+1)& (0+255),7,b
  6438  003266  EF3E  F019         	goto	u4821
  6439  00326A  51DF               	movf	(color_data_collection@i+1)& (0+255),w,b
  6440  00326C  E109               	bnz	u4820
  6441  00326E  0E05               	movlw	5
  6442  003270  5DDE               	subwf	color_data_collection@i& (0+255),w,b
  6443  003272  A0D8               	btfss	status,0,c
  6444  003274  EF3E  F019         	goto	u4821
  6445  003278  EF40  F019         	goto	u4820
  6446  00327C                     u4821:
  6447  00327C  EF15  F019         	goto	l4652
  6448  003280                     u4820:
  6449  003280                     
  6450                           ; BSR set to: 0
  6451                           ;color.c: 145:     color_predict(00000);
  6452  003280  0E00               	movlw	0
  6453  003282  ECDC  F01F         	call	_color_predict
  6454  003286                     
  6455                           ;color.c: 146:     for (j = 0; j < 5; ++j){
  6456  003286  0E00               	movlw	0
  6457  003288  0100               	movlb	0	; () banked
  6458  00328A  6FE1               	movwf	(color_data_collection@j+1)& (0+255),b
  6459  00328C  0E00               	movlw	0
  6460  00328E  6FE0               	movwf	color_data_collection@j& (0+255),b
  6461  003290                     l4672:
  6462                           
  6463                           ; BSR set to: 0
  6464                           ;color.c: 147:         LED_R();
  6465  003290  EC31  F027         	call	_LED_R	;wreg free
  6466  003294                     
  6467                           ;color.c: 148:         read_color(m);
  6468  003294  C05A  F00C         	movff	color_data_collection@m,read_color@m
  6469  003298  C05B  F00D         	movff	color_data_collection@m+1,read_color@m+1
  6470  00329C  ECE1  F023         	call	_read_color	;wreg free
  6471  0032A0                     
  6472                           ;color.c: 149:         color_display(m);
  6473  0032A0  C05A  F058         	movff	color_data_collection@m,color_display@m
  6474  0032A4  C05B  F059         	movff	color_data_collection@m+1,color_display@m+1
  6475  0032A8  EC49  F023         	call	_color_display	;wreg free
  6476  0032AC                     
  6477                           ;color.c: 150:         _delay((unsigned long)((100)*(64000000/4000.0)));
  6478  0032AC  0E09               	movlw	9
  6479  0032AE  6E5D               	movwf	(??_color_data_collection+1)^0,c
  6480  0032B0  0E1E               	movlw	30
  6481  0032B2  6E5C               	movwf	??_color_data_collection^0,c
  6482  0032B4  0EE4               	movlw	228
  6483  0032B6                     u5187:
  6484  0032B6  2EE8               	decfsz	wreg,f,c
  6485  0032B8  D7FE               	bra	u5187
  6486  0032BA  2E5C               	decfsz	??_color_data_collection^0,f,c
  6487  0032BC  D7FC               	bra	u5187
  6488  0032BE  2E5D               	decfsz	(??_color_data_collection+1)^0,f,c
  6489  0032C0  D7FA               	bra	u5187
  6490  0032C2  D000               	nop2	
  6491  0032C4                     
  6492                           ;color.c: 151:     }
  6493  0032C4  0100               	movlb	0	; () banked
  6494  0032C6  4BE0               	infsnz	color_data_collection@j& (0+255),f,b
  6495  0032C8  2BE1               	incf	(color_data_collection@j+1)& (0+255),f,b
  6496  0032CA                     
  6497                           ; BSR set to: 0
  6498  0032CA  BFE1               	btfsc	(color_data_collection@j+1)& (0+255),7,b
  6499  0032CC  EF71  F019         	goto	u4831
  6500  0032D0  51E1               	movf	(color_data_collection@j+1)& (0+255),w,b
  6501  0032D2  E109               	bnz	u4830
  6502  0032D4  0E05               	movlw	5
  6503  0032D6  5DE0               	subwf	color_data_collection@j& (0+255),w,b
  6504  0032D8  A0D8               	btfss	status,0,c
  6505  0032DA  EF71  F019         	goto	u4831
  6506  0032DE  EF73  F019         	goto	u4830
  6507  0032E2                     u4831:
  6508  0032E2  EF48  F019         	goto	l4672
  6509  0032E6                     u4830:
  6510  0032E6                     
  6511                           ; BSR set to: 0
  6512                           ;color.c: 152:     color_predict(00000);
  6513  0032E6  0E00               	movlw	0
  6514  0032E8  ECDC  F01F         	call	_color_predict
  6515  0032EC                     
  6516                           ;color.c: 153:     for (k = 0; k < 5; ++k){
  6517  0032EC  0E00               	movlw	0
  6518  0032EE  0100               	movlb	0	; () banked
  6519  0032F0  6FE3               	movwf	(color_data_collection@k+1)& (0+255),b
  6520  0032F2  0E00               	movlw	0
  6521  0032F4  6FE2               	movwf	color_data_collection@k& (0+255),b
  6522  0032F6                     l4692:
  6523                           
  6524                           ; BSR set to: 0
  6525                           ;color.c: 154:         LED_G();
  6526  0032F6  EC41  F027         	call	_LED_G	;wreg free
  6527  0032FA                     
  6528                           ;color.c: 155:         read_color(m);
  6529  0032FA  C05A  F00C         	movff	color_data_collection@m,read_color@m
  6530  0032FE  C05B  F00D         	movff	color_data_collection@m+1,read_color@m+1
  6531  003302  ECE1  F023         	call	_read_color	;wreg free
  6532  003306                     
  6533                           ;color.c: 156:         color_display(m);
  6534  003306  C05A  F058         	movff	color_data_collection@m,color_display@m
  6535  00330A  C05B  F059         	movff	color_data_collection@m+1,color_display@m+1
  6536  00330E  EC49  F023         	call	_color_display	;wreg free
  6537  003312                     
  6538                           ;color.c: 157:         _delay((unsigned long)((100)*(64000000/4000.0)));
  6539  003312  0E09               	movlw	9
  6540  003314  6E5D               	movwf	(??_color_data_collection+1)^0,c
  6541  003316  0E1E               	movlw	30
  6542  003318  6E5C               	movwf	??_color_data_collection^0,c
  6543  00331A  0EE4               	movlw	228
  6544  00331C                     u5197:
  6545  00331C  2EE8               	decfsz	wreg,f,c
  6546  00331E  D7FE               	bra	u5197
  6547  003320  2E5C               	decfsz	??_color_data_collection^0,f,c
  6548  003322  D7FC               	bra	u5197
  6549  003324  2E5D               	decfsz	(??_color_data_collection+1)^0,f,c
  6550  003326  D7FA               	bra	u5197
  6551  003328  D000               	nop2	
  6552  00332A                     
  6553                           ;color.c: 158:     }
  6554  00332A  0100               	movlb	0	; () banked
  6555  00332C  4BE2               	infsnz	color_data_collection@k& (0+255),f,b
  6556  00332E  2BE3               	incf	(color_data_collection@k+1)& (0+255),f,b
  6557  003330                     
  6558                           ; BSR set to: 0
  6559  003330  BFE3               	btfsc	(color_data_collection@k+1)& (0+255),7,b
  6560  003332  EFA4  F019         	goto	u4841
  6561  003336  51E3               	movf	(color_data_collection@k+1)& (0+255),w,b
  6562  003338  E109               	bnz	u4840
  6563  00333A  0E05               	movlw	5
  6564  00333C  5DE2               	subwf	color_data_collection@k& (0+255),w,b
  6565  00333E  A0D8               	btfss	status,0,c
  6566  003340  EFA4  F019         	goto	u4841
  6567  003344  EFA6  F019         	goto	u4840
  6568  003348                     u4841:
  6569  003348  EF7B  F019         	goto	l4692
  6570  00334C                     u4840:
  6571  00334C                     
  6572                           ; BSR set to: 0
  6573                           ;color.c: 159:     color_predict(00000);
  6574  00334C  0E00               	movlw	0
  6575  00334E  ECDC  F01F         	call	_color_predict
  6576  003352                     
  6577                           ;color.c: 160:     for (x = 0; x < 5; ++x){
  6578  003352  0E00               	movlw	0
  6579  003354  0100               	movlb	0	; () banked
  6580  003356  6FE5               	movwf	(color_data_collection@x+1)& (0+255),b
  6581  003358  0E00               	movlw	0
  6582  00335A  6FE4               	movwf	color_data_collection@x& (0+255),b
  6583  00335C                     l4712:
  6584                           
  6585                           ; BSR set to: 0
  6586                           ;color.c: 161:         LED_B();
  6587  00335C  EC51  F027         	call	_LED_B	;wreg free
  6588  003360                     
  6589                           ;color.c: 162:         read_color(m);
  6590  003360  C05A  F00C         	movff	color_data_collection@m,read_color@m
  6591  003364  C05B  F00D         	movff	color_data_collection@m+1,read_color@m+1
  6592  003368  ECE1  F023         	call	_read_color	;wreg free
  6593  00336C                     
  6594                           ;color.c: 163:         color_display(m);
  6595  00336C  C05A  F058         	movff	color_data_collection@m,color_display@m
  6596  003370  C05B  F059         	movff	color_data_collection@m+1,color_display@m+1
  6597  003374  EC49  F023         	call	_color_display	;wreg free
  6598  003378                     
  6599                           ;color.c: 164:         _delay((unsigned long)((100)*(64000000/4000.0)));
  6600  003378  0E09               	movlw	9
  6601  00337A  6E5D               	movwf	(??_color_data_collection+1)^0,c
  6602  00337C  0E1E               	movlw	30
  6603  00337E  6E5C               	movwf	??_color_data_collection^0,c
  6604  003380  0EE4               	movlw	228
  6605  003382                     u5207:
  6606  003382  2EE8               	decfsz	wreg,f,c
  6607  003384  D7FE               	bra	u5207
  6608  003386  2E5C               	decfsz	??_color_data_collection^0,f,c
  6609  003388  D7FC               	bra	u5207
  6610  00338A  2E5D               	decfsz	(??_color_data_collection+1)^0,f,c
  6611  00338C  D7FA               	bra	u5207
  6612  00338E  D000               	nop2	
  6613  003390                     
  6614                           ;color.c: 165:     }
  6615  003390  0100               	movlb	0	; () banked
  6616  003392  4BE4               	infsnz	color_data_collection@x& (0+255),f,b
  6617  003394  2BE5               	incf	(color_data_collection@x+1)& (0+255),f,b
  6618  003396                     
  6619                           ; BSR set to: 0
  6620  003396  BFE5               	btfsc	(color_data_collection@x+1)& (0+255),7,b
  6621  003398  EFD7  F019         	goto	u4851
  6622  00339C  51E5               	movf	(color_data_collection@x+1)& (0+255),w,b
  6623  00339E  E109               	bnz	u4850
  6624  0033A0  0E05               	movlw	5
  6625  0033A2  5DE4               	subwf	color_data_collection@x& (0+255),w,b
  6626  0033A4  A0D8               	btfss	status,0,c
  6627  0033A6  EFD7  F019         	goto	u4851
  6628  0033AA  EFD9  F019         	goto	u4850
  6629  0033AE                     u4851:
  6630  0033AE  EFAE  F019         	goto	l4712
  6631  0033B2                     u4850:
  6632  0033B2                     
  6633                           ; BSR set to: 0
  6634                           ;color.c: 166:     color_predict(1);
  6635  0033B2  0E01               	movlw	1
  6636  0033B4  ECDC  F01F         	call	_color_predict
  6637  0033B8                     
  6638                           ;color.c: 167:     LED_C();
  6639  0033B8  EC11  F027         	call	_LED_C	;wreg free
  6640  0033BC  0012               	return		;funcret
  6641  0033BE                     __end_of_color_data_collection:
  6642                           	callstack 0
  6643                           
  6644 ;; *************** function _read_color *****************
  6645 ;; Defined at:
  6646 ;;		line 92 in file "color.c"
  6647 ;; Parameters:    Size  Location     Type
  6648 ;;  m               2   11[COMRAM] PTR struct color_rgb
  6649 ;;		 -> main@rgb(8), 
  6650 ;; Auto vars:     Size  Location     Type
  6651 ;;		None
  6652 ;; Return value:  Size  Location     Type
  6653 ;;                  1    wreg      void 
  6654 ;; Registers used:
  6655 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6656 ;; Tracked objects:
  6657 ;;		On entry : 0/0
  6658 ;;		On exit  : 0/0
  6659 ;;		Unchanged: 0/0
  6660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6661 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6662 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6663 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6664 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6665 ;;Total ram usage:        2 bytes
  6666 ;; Hardware stack levels used: 1
  6667 ;; Hardware stack levels required when called: 3
  6668 ;; This function calls:
  6669 ;;		_color_read_Blue
  6670 ;;		_color_read_Clear
  6671 ;;		_color_read_Green
  6672 ;;		_color_read_Red
  6673 ;; This function is called by:
  6674 ;;		_color_data_collection
  6675 ;;		_detect_color
  6676 ;;		_main
  6677 ;; This function uses a non-reentrant model
  6678 ;;
  6679                           
  6680                           	psect	text22
  6681  0047C2                     __ptext22:
  6682                           	callstack 0
  6683  0047C2                     _read_color:
  6684                           	callstack 25
  6685  0047C2                     
  6686                           ;color.c: 92: void read_color (struct color_rgb *m);color.c: 93: {;color.c: 94:     m->R
      +                           = color_read_Red();
  6687  0047C2  EC65  F024         	call	_color_read_Red	;wreg free
  6688  0047C6  C00C  FFD9         	movff	read_color@m,fsr2l
  6689  0047CA  C00D  FFDA         	movff	read_color@m+1,fsr2h
  6690  0047CE  C005  FFDE         	movff	?_color_read_Red,postinc2
  6691  0047D2  C006  FFDD         	movff	?_color_read_Red+1,postdec2
  6692                           
  6693                           ;color.c: 95:     m->B = color_read_Blue();
  6694  0047D6  ECDD  F024         	call	_color_read_Blue	;wreg free
  6695  0047DA  EE20 F004          	lfsr	2,4
  6696  0047DE  500C               	movf	read_color@m^0,w,c
  6697  0047E0  26D9               	addwf	fsr2l,f,c
  6698  0047E2  500D               	movf	(read_color@m+1)^0,w,c
  6699  0047E4  22DA               	addwfc	fsr2h,f,c
  6700  0047E6  C005  FFDE         	movff	?_color_read_Blue,postinc2
  6701  0047EA  C006  FFDD         	movff	?_color_read_Blue+1,postdec2
  6702                           
  6703                           ;color.c: 96:     m->G = color_read_Green();
  6704  0047EE  EC8D  F024         	call	_color_read_Green	;wreg free
  6705  0047F2  EE20 F002          	lfsr	2,2
  6706  0047F6  500C               	movf	read_color@m^0,w,c
  6707  0047F8  26D9               	addwf	fsr2l,f,c
  6708  0047FA  500D               	movf	(read_color@m+1)^0,w,c
  6709  0047FC  22DA               	addwfc	fsr2h,f,c
  6710  0047FE  C005  FFDE         	movff	?_color_read_Green,postinc2
  6711  004802  C006  FFDD         	movff	?_color_read_Green+1,postdec2
  6712                           
  6713                           ;color.c: 97:     m->C = color_read_Clear();
  6714  004806  ECB5  F024         	call	_color_read_Clear	;wreg free
  6715  00480A  EE20 F006          	lfsr	2,6
  6716  00480E  500C               	movf	read_color@m^0,w,c
  6717  004810  26D9               	addwf	fsr2l,f,c
  6718  004812  500D               	movf	(read_color@m+1)^0,w,c
  6719  004814  22DA               	addwfc	fsr2h,f,c
  6720  004816  C005  FFDE         	movff	?_color_read_Clear,postinc2
  6721  00481A  C006  FFDD         	movff	?_color_read_Clear+1,postdec2
  6722  00481E  0012               	return		;funcret
  6723  004820                     __end_of_read_color:
  6724                           	callstack 0
  6725                           
  6726 ;; *************** function _color_predict *****************
  6727 ;; Defined at:
  6728 ;;		line 186 in file "color.c"
  6729 ;; Parameters:    Size  Location     Type
  6730 ;;  color           1    wreg     unsigned char 
  6731 ;; Auto vars:     Size  Location     Type
  6732 ;;  color           1  125[BANK0 ] unsigned char 
  6733 ;;  buf           100   25[BANK0 ] unsigned char [100]
  6734 ;;  color_name      1    0        unsigned char 
  6735 ;; Return value:  Size  Location     Type
  6736 ;;                  1    wreg      void 
  6737 ;; Registers used:
  6738 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6739 ;; Tracked objects:
  6740 ;;		On entry : 0/0
  6741 ;;		On exit  : 0/0
  6742 ;;		Unchanged: 0/0
  6743 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6744 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6745 ;;      Locals:         0     101       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6746 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6747 ;;      Totals:         0     101       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6748 ;;Total ram usage:      101 bytes
  6749 ;; Hardware stack levels used: 1
  6750 ;; Hardware stack levels required when called: 8
  6751 ;; This function calls:
  6752 ;;		_sendStringSerial4
  6753 ;;		_sprintf
  6754 ;; This function is called by:
  6755 ;;		_color_data_collection
  6756 ;; This function uses a non-reentrant model
  6757 ;;
  6758                           
  6759                           	psect	text23
  6760  003FB8                     __ptext23:
  6761                           	callstack 0
  6762  003FB8                     _color_predict:
  6763                           	callstack 21
  6764                           
  6765                           ;incstack = 0
  6766                           ;color_predict@color stored from wreg
  6767  003FB8  0100               	movlb	0	; () banked
  6768  003FBA  6FDD               	movwf	color_predict@color& (0+255),b
  6769  003FBC                     
  6770                           ;color.c: 186: void color_predict(unsigned char color);color.c: 187: {;color.c: 188:    
      +                           char buf[100];;color.c: 189:     char color_name;;color.c: 190:     if (color == 0){col
      +                          or_name = "Error";}
  6771  003FBC  0100               	movlb	0	; () banked
  6772  003FBE  51DD               	movf	color_predict@color& (0+255),w,b
  6773  003FC0  A4D8               	btfss	status,2,c
  6774  003FC2  EFE5  F01F         	goto	u4411
  6775  003FC6  EFE7  F01F         	goto	u4410
  6776  003FCA                     u4411:
  6777  003FCA  EFE7  F01F         	goto	l4392
  6778  003FCE                     u4410:
  6779  003FCE                     l4392:
  6780                           
  6781                           ; BSR set to: 0
  6782                           ;color.c: 191:     if (color == 1){color_name = "Red";}
  6783  003FCE  05DD               	decf	color_predict@color& (0+255),w,b
  6784  003FD0  A4D8               	btfss	status,2,c
  6785  003FD2  EFED  F01F         	goto	u4421
  6786  003FD6  EFEF  F01F         	goto	u4420
  6787  003FDA                     u4421:
  6788  003FDA  EFEF  F01F         	goto	l4396
  6789  003FDE                     u4420:
  6790  003FDE                     l4396:
  6791                           
  6792                           ; BSR set to: 0
  6793                           ;color.c: 192:     if (color == 2){color_name = "Green";}
  6794  003FDE  0E02               	movlw	2
  6795  003FE0  19DD               	xorwf	color_predict@color& (0+255),w,b
  6796  003FE2  A4D8               	btfss	status,2,c
  6797  003FE4  EFF6  F01F         	goto	u4431
  6798  003FE8  EFF8  F01F         	goto	u4430
  6799  003FEC                     u4431:
  6800  003FEC  EFF8  F01F         	goto	l4400
  6801  003FF0                     u4430:
  6802  003FF0                     l4400:
  6803                           
  6804                           ; BSR set to: 0
  6805                           ;color.c: 193:     if (color == 3){color_name = "Blue";}
  6806  003FF0  0E03               	movlw	3
  6807  003FF2  19DD               	xorwf	color_predict@color& (0+255),w,b
  6808  003FF4  A4D8               	btfss	status,2,c
  6809  003FF6  EFFF  F01F         	goto	u4441
  6810  003FFA  EF01  F020         	goto	u4440
  6811  003FFE                     u4441:
  6812  003FFE  EF01  F020         	goto	l4404
  6813  004002                     u4440:
  6814  004002                     l4404:
  6815                           
  6816                           ; BSR set to: 0
  6817                           ;color.c: 194:     if (color == 4){color_name = "Yellow";}
  6818  004002  0E04               	movlw	4
  6819  004004  19DD               	xorwf	color_predict@color& (0+255),w,b
  6820  004006  A4D8               	btfss	status,2,c
  6821  004008  EF08  F020         	goto	u4451
  6822  00400C  EF0A  F020         	goto	u4450
  6823  004010                     u4451:
  6824  004010  EF0A  F020         	goto	l4408
  6825  004014                     u4450:
  6826  004014                     l4408:
  6827                           
  6828                           ; BSR set to: 0
  6829                           ;color.c: 195:     if (color == 5){color_name = "Pink";}
  6830  004014  0E05               	movlw	5
  6831  004016  19DD               	xorwf	color_predict@color& (0+255),w,b
  6832  004018  A4D8               	btfss	status,2,c
  6833  00401A  EF11  F020         	goto	u4461
  6834  00401E  EF13  F020         	goto	u4460
  6835  004022                     u4461:
  6836  004022  EF13  F020         	goto	l4412
  6837  004026                     u4460:
  6838  004026                     l4412:
  6839                           
  6840                           ; BSR set to: 0
  6841                           ;color.c: 196:     if (color == 6){color_name = "Orange";}
  6842  004026  0E06               	movlw	6
  6843  004028  19DD               	xorwf	color_predict@color& (0+255),w,b
  6844  00402A  A4D8               	btfss	status,2,c
  6845  00402C  EF1A  F020         	goto	u4471
  6846  004030  EF1C  F020         	goto	u4470
  6847  004034                     u4471:
  6848  004034  EF1C  F020         	goto	l4416
  6849  004038                     u4470:
  6850  004038                     l4416:
  6851                           
  6852                           ; BSR set to: 0
  6853                           ;color.c: 197:     if (color == 7){color_name = "Light blue";}
  6854  004038  0E07               	movlw	7
  6855  00403A  19DD               	xorwf	color_predict@color& (0+255),w,b
  6856  00403C  A4D8               	btfss	status,2,c
  6857  00403E  EF23  F020         	goto	u4481
  6858  004042  EF25  F020         	goto	u4480
  6859  004046                     u4481:
  6860  004046  EF25  F020         	goto	l4420
  6861  00404A                     u4480:
  6862  00404A                     l4420:
  6863                           
  6864                           ; BSR set to: 0
  6865                           ;color.c: 198:     if (color == 8){color_name = "White";}
  6866  00404A  0E08               	movlw	8
  6867  00404C  19DD               	xorwf	color_predict@color& (0+255),w,b
  6868  00404E  A4D8               	btfss	status,2,c
  6869  004050  EF2C  F020         	goto	u4491
  6870  004054  EF2E  F020         	goto	u4490
  6871  004058                     u4491:
  6872  004058  EF2E  F020         	goto	l4424
  6873  00405C                     u4490:
  6874  00405C                     l4424:
  6875                           
  6876                           ; BSR set to: 0
  6877                           ;color.c: 199:     if (color == 9){color_name = "Black";}
  6878  00405C  0E09               	movlw	9
  6879  00405E  19DD               	xorwf	color_predict@color& (0+255),w,b
  6880  004060  A4D8               	btfss	status,2,c
  6881  004062  EF35  F020         	goto	u4501
  6882  004066  EF37  F020         	goto	u4500
  6883  00406A                     u4501:
  6884  00406A  EF37  F020         	goto	l4428
  6885  00406E                     u4500:
  6886  00406E                     l4428:
  6887                           
  6888                           ; BSR set to: 0
  6889                           ;color.c: 201:     sprintf(buf,"\t%d\r\n", color);
  6890  00406E  0E79               	movlw	low color_predict@buf
  6891  004070  6F60               	movwf	sprintf@s& (0+255),b
  6892  004072  0E00               	movlw	high color_predict@buf
  6893  004074  6F61               	movwf	(sprintf@s+1)& (0+255),b
  6894  004076  0E0D               	movlw	low (STR_1+8)
  6895  004078  6F62               	movwf	sprintf@fmt& (0+255),b
  6896  00407A  0E0E               	movlw	high (STR_1+8)
  6897  00407C  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
  6898  00407E  C0DD  F064         	movff	color_predict@color,?_sprintf+4
  6899  004082  6B65               	clrf	(?_sprintf+5)& (0+255),b
  6900  004084  EC3C  F024         	call	_sprintf	;wreg free
  6901  004088                     
  6902                           ;color.c: 202:     sendStringSerial4(buf);
  6903  004088  0E79               	movlw	low color_predict@buf
  6904  00408A  6E02               	movwf	sendStringSerial4@string^0,c
  6905  00408C  0E00               	movlw	high color_predict@buf
  6906  00408E  6E03               	movwf	(sendStringSerial4@string+1)^0,c
  6907  004090  ECBD  F026         	call	_sendStringSerial4	;wreg free
  6908  004094  0012               	return		;funcret
  6909  004096                     __end_of_color_predict:
  6910                           	callstack 0
  6911                           
  6912 ;; *************** function _color_display *****************
  6913 ;; Defined at:
  6914 ;;		line 170 in file "color.c"
  6915 ;; Parameters:    Size  Location     Type
  6916 ;;  m               2   87[COMRAM] PTR struct color_rgb
  6917 ;;		 -> main@rgb(8), 
  6918 ;; Auto vars:     Size  Location     Type
  6919 ;;  buf           100   25[BANK0 ] unsigned char [100]
  6920 ;; Return value:  Size  Location     Type
  6921 ;;                  1    wreg      void 
  6922 ;; Registers used:
  6923 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6924 ;; Tracked objects:
  6925 ;;		On entry : 0/0
  6926 ;;		On exit  : 0/0
  6927 ;;		Unchanged: 0/0
  6928 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6929 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6930 ;;      Locals:         0     100       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6931 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6932 ;;      Totals:         2     100       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6933 ;;Total ram usage:      102 bytes
  6934 ;; Hardware stack levels used: 1
  6935 ;; Hardware stack levels required when called: 8
  6936 ;; This function calls:
  6937 ;;		_sendStringSerial4
  6938 ;;		_sprintf
  6939 ;; This function is called by:
  6940 ;;		_color_data_collection
  6941 ;;		_main
  6942 ;; This function uses a non-reentrant model
  6943 ;;
  6944                           
  6945                           	psect	text24
  6946  004692                     __ptext24:
  6947                           	callstack 0
  6948  004692                     _color_display:
  6949                           	callstack 22
  6950  004692                     
  6951                           ;color.c: 170: void color_display(struct color_rgb *m);color.c: 171: {;color.c: 172:    
      +                           char buf[100];;color.c: 173:     sprintf(buf,"%d\t%d\t%d\t%d\r\n", m->R, m->G, m->B, m-
      +                          >C);
  6952  004692  0E79               	movlw	low color_display@buf
  6953  004694  0100               	movlb	0	; () banked
  6954  004696  6F60               	movwf	sprintf@s& (0+255),b
  6955  004698  0E00               	movlw	high color_display@buf
  6956  00469A  6F61               	movwf	(sprintf@s+1)& (0+255),b
  6957  00469C  0E05               	movlw	low STR_1
  6958  00469E  6F62               	movwf	sprintf@fmt& (0+255),b
  6959  0046A0  0E0E               	movlw	high STR_1
  6960  0046A2  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
  6961  0046A4  C058  FFD9         	movff	color_display@m,fsr2l
  6962  0046A8  C059  FFDA         	movff	color_display@m+1,fsr2h
  6963  0046AC  CFDE F064          	movff	postinc2,?_sprintf+4
  6964  0046B0  CFDD F065          	movff	postdec2,?_sprintf+5
  6965  0046B4  EE20 F002          	lfsr	2,2
  6966  0046B8  5058               	movf	color_display@m^0,w,c
  6967  0046BA  26D9               	addwf	fsr2l,f,c
  6968  0046BC  5059               	movf	(color_display@m+1)^0,w,c
  6969  0046BE  22DA               	addwfc	fsr2h,f,c
  6970  0046C0  CFDE F066          	movff	postinc2,?_sprintf+6
  6971  0046C4  CFDD F067          	movff	postdec2,?_sprintf+7
  6972  0046C8  EE20 F004          	lfsr	2,4
  6973  0046CC  5058               	movf	color_display@m^0,w,c
  6974  0046CE  26D9               	addwf	fsr2l,f,c
  6975  0046D0  5059               	movf	(color_display@m+1)^0,w,c
  6976  0046D2  22DA               	addwfc	fsr2h,f,c
  6977  0046D4  CFDE F068          	movff	postinc2,?_sprintf+8
  6978  0046D8  CFDD F069          	movff	postdec2,?_sprintf+9
  6979  0046DC  EE20 F006          	lfsr	2,6
  6980  0046E0  5058               	movf	color_display@m^0,w,c
  6981  0046E2  26D9               	addwf	fsr2l,f,c
  6982  0046E4  5059               	movf	(color_display@m+1)^0,w,c
  6983  0046E6  22DA               	addwfc	fsr2h,f,c
  6984  0046E8  CFDE F06A          	movff	postinc2,?_sprintf+10
  6985  0046EC  CFDD F06B          	movff	postdec2,?_sprintf+11
  6986  0046F0  EC3C  F024         	call	_sprintf	;wreg free
  6987  0046F4                     
  6988                           ;color.c: 174:     sendStringSerial4(buf);
  6989  0046F4  0E79               	movlw	low color_display@buf
  6990  0046F6  6E02               	movwf	sendStringSerial4@string^0,c
  6991  0046F8  0E00               	movlw	high color_display@buf
  6992  0046FA  6E03               	movwf	(sendStringSerial4@string+1)^0,c
  6993  0046FC  ECBD  F026         	call	_sendStringSerial4	;wreg free
  6994  004700  0012               	return		;funcret
  6995  004702                     __end_of_color_display:
  6996                           	callstack 0
  6997                           
  6998 ;; *************** function _sprintf *****************
  6999 ;; Defined at:
  7000 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\nf_sprintf.c"
  7001 ;; Parameters:    Size  Location     Type
  7002 ;;  s               2    0[BANK0 ] PTR unsigned char 
  7003 ;;		 -> voltage_display@buf(80), color_predict@buf(100), check_color_reading@buf(100), color_display@buf(100), 
  7004 ;;  fmt             2    2[BANK0 ] PTR const unsigned char 
  7005 ;;		 -> STR_14(5), STR_13(6), STR_2(12), STR_1(14), 
  7006 ;; Auto vars:     Size  Location     Type
  7007 ;;  f              11   14[BANK0 ] struct _IO_FILE
  7008 ;;  ap              2   12[BANK0 ] PTR void [1]
  7009 ;;		 -> ?_sprintf(2), 
  7010 ;;  ret             2    0        int 
  7011 ;; Return value:  Size  Location     Type
  7012 ;;                  2    0[BANK0 ] int 
  7013 ;; Registers used:
  7014 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7015 ;; Tracked objects:
  7016 ;;		On entry : 0/0
  7017 ;;		On exit  : 0/0
  7018 ;;		Unchanged: 0/0
  7019 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7020 ;;      Params:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7021 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7022 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7023 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7024 ;;Total ram usage:       25 bytes
  7025 ;; Hardware stack levels used: 1
  7026 ;; Hardware stack levels required when called: 7
  7027 ;; This function calls:
  7028 ;;		_vfprintf
  7029 ;; This function is called by:
  7030 ;;		_color_display
  7031 ;;		_color_predict
  7032 ;;		_check_color_reading
  7033 ;;		_voltage_display
  7034 ;; This function uses a non-reentrant model
  7035 ;;
  7036                           
  7037                           	psect	text25
  7038  004878                     __ptext25:
  7039                           	callstack 0
  7040  004878                     _sprintf:
  7041                           	callstack 22
  7042  004878  0E64               	movlw	low (?_sprintf+4)
  7043  00487A  0100               	movlb	0	; () banked
  7044  00487C  6F6C               	movwf	sprintf@ap& (0+255),b
  7045  00487E  0E00               	movlw	high (?_sprintf+4)
  7046  004880  6F6D               	movwf	(sprintf@ap+1)& (0+255),b
  7047  004882  C060  F06E         	movff	sprintf@s,sprintf@f
  7048  004886  C061  F06F         	movff	sprintf@s+1,sprintf@f+1
  7049  00488A                     
  7050                           ; BSR set to: 0
  7051  00488A  0E00               	movlw	0
  7052  00488C  6F72               	movwf	(sprintf@f+4)& (0+255),b
  7053  00488E  0E00               	movlw	0
  7054  004890  6F71               	movwf	(sprintf@f+3)& (0+255),b
  7055  004892                     
  7056                           ; BSR set to: 0
  7057  004892  0E00               	movlw	0
  7058  004894  6F78               	movwf	(sprintf@f+10)& (0+255),b
  7059  004896  0E00               	movlw	0
  7060  004898  6F77               	movwf	(sprintf@f+9)& (0+255),b
  7061  00489A                     
  7062                           ; BSR set to: 0
  7063  00489A  0E6E               	movlw	low sprintf@f
  7064  00489C  6E50               	movwf	vfprintf@fp^0,c
  7065  00489E  0E00               	movlw	high sprintf@f
  7066  0048A0  6E51               	movwf	(vfprintf@fp+1)^0,c
  7067  0048A2  C062  F052         	movff	sprintf@fmt,vfprintf@fmt
  7068  0048A6  C063  F053         	movff	sprintf@fmt+1,vfprintf@fmt+1
  7069  0048AA  0E6C               	movlw	low sprintf@ap
  7070  0048AC  6E54               	movwf	vfprintf@ap^0,c
  7071  0048AE  0E00               	movlw	high sprintf@ap
  7072  0048B0  6E55               	movwf	(vfprintf@ap+1)^0,c
  7073  0048B2  EC81  F023         	call	_vfprintf	;wreg free
  7074  0048B6  0100               	movlb	0	; () banked
  7075  0048B8  5171               	movf	(sprintf@f+3)& (0+255),w,b
  7076  0048BA  2560               	addwf	sprintf@s& (0+255),w,b
  7077  0048BC  6ED9               	movwf	fsr2l,c
  7078  0048BE  5172               	movf	(sprintf@f+4)& (0+255),w,b
  7079  0048C0  2161               	addwfc	(sprintf@s+1)& (0+255),w,b
  7080  0048C2  6EDA               	movwf	fsr2h,c
  7081  0048C4  0E00               	movlw	0
  7082  0048C6  6EDF               	movwf	indf2,c
  7083  0048C8                     
  7084                           ; BSR set to: 0
  7085  0048C8  0012               	return		;funcret
  7086  0048CA                     __end_of_sprintf:
  7087                           	callstack 0
  7088                           
  7089 ;; *************** function _vfprintf *****************
  7090 ;; Defined at:
  7091 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c"
  7092 ;; Parameters:    Size  Location     Type
  7093 ;;  fp              2   79[COMRAM] PTR struct _IO_FILE
  7094 ;;		 -> sprintf@f(11), 
  7095 ;;  fmt             2   81[COMRAM] PTR const unsigned char 
  7096 ;;		 -> STR_14(5), STR_13(6), STR_2(12), STR_1(14), 
  7097 ;;  ap              2   83[COMRAM] PTR PTR void 
  7098 ;;		 -> sprintf@ap(2), 
  7099 ;; Auto vars:     Size  Location     Type
  7100 ;;  cfmt            2   85[COMRAM] PTR unsigned char 
  7101 ;;		 -> STR_14(5), STR_13(6), STR_2(12), STR_1(14), 
  7102 ;; Return value:  Size  Location     Type
  7103 ;;                  2   79[COMRAM] int 
  7104 ;; Registers used:
  7105 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7106 ;; Tracked objects:
  7107 ;;		On entry : 0/0
  7108 ;;		On exit  : 0/0
  7109 ;;		Unchanged: 0/0
  7110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7111 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7112 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7113 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7114 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7115 ;;Total ram usage:        8 bytes
  7116 ;; Hardware stack levels used: 1
  7117 ;; Hardware stack levels required when called: 6
  7118 ;; This function calls:
  7119 ;;		_vfpfcnvrt
  7120 ;; This function is called by:
  7121 ;;		_sprintf
  7122 ;; This function uses a non-reentrant model
  7123 ;;
  7124                           
  7125                           	psect	text26
  7126  004702                     __ptext26:
  7127                           	callstack 0
  7128  004702                     _vfprintf:
  7129                           	callstack 22
  7130  004702                     
  7131                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.35\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  7132  004702  C052  F056         	movff	vfprintf@fmt,vfprintf@cfmt
  7133  004706  C053  F057         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  7134  00470A                     
  7135                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  7136  00470A  0E00               	movlw	0
  7137  00470C  0100               	movlb	0	; () banked
  7138  00470E  6FED               	movwf	(_nout+1)& (0+255),b
  7139  004710  0E00               	movlw	0
  7140  004712  6FEC               	movwf	_nout& (0+255),b
  7141                           
  7142                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  7143  004714  EF9F  F023         	goto	l4082
  7144  004718                     l4080:
  7145                           
  7146                           ; BSR set to: 0
  7147                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  7148  004718  C050  F040         	movff	vfprintf@fp,vfpfcnvrt@fp
  7149  00471C  C051  F041         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  7150  004720  0E56               	movlw	low vfprintf@cfmt
  7151  004722  6E42               	movwf	vfpfcnvrt@fmt^0,c
  7152  004724  0E00               	movlw	high vfprintf@cfmt
  7153  004726  6E43               	movwf	(vfpfcnvrt@fmt+1)^0,c
  7154  004728  C054  F044         	movff	vfprintf@ap,vfpfcnvrt@ap
  7155  00472C  C055  F045         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  7156  004730  ECB9  F01A         	call	_vfpfcnvrt	;wreg free
  7157  004734  5040               	movf	?_vfpfcnvrt^0,w,c
  7158  004736  0100               	movlb	0	; () banked
  7159  004738  27EC               	addwf	_nout& (0+255),f,b
  7160  00473A  5041               	movf	(?_vfpfcnvrt+1)^0,w,c
  7161  00473C  23ED               	addwfc	(_nout+1)& (0+255),f,b
  7162  00473E                     l4082:
  7163                           
  7164                           ; BSR set to: 0
  7165                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  7166  00473E  C056  FFF6         	movff	vfprintf@cfmt,tblptrl
  7167  004742  C057  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  7168  004746                     	if	0	;tblptru may be non-zero
  7169  004746                     	endif
  7170  004746                     	if	0	;tblptru may be non-zero
  7171  004746                     	endif
  7172  004746  0008               	tblrd		*
  7173  004748  50F5               	movf	tablat,w,c
  7174  00474A  0900               	iorlw	0
  7175  00474C  A4D8               	btfss	status,2,c
  7176  00474E  EFAB  F023         	goto	u3981
  7177  004752  EFAD  F023         	goto	u3980
  7178  004756                     u3981:
  7179  004756  EF8C  F023         	goto	l4080
  7180  00475A                     u3980:
  7181  00475A                     
  7182                           ; BSR set to: 0
  7183                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  7184  00475A  C0EC  F050         	movff	_nout,?_vfprintf
  7185  00475E  C0ED  F051         	movff	_nout+1,?_vfprintf+1
  7186  004762                     
  7187                           ; BSR set to: 0
  7188  004762  0012               	return		;funcret
  7189  004764                     __end_of_vfprintf:
  7190                           	callstack 0
  7191                           
  7192 ;; *************** function _vfpfcnvrt *****************
  7193 ;; Defined at:
  7194 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c"
  7195 ;; Parameters:    Size  Location     Type
  7196 ;;  fp              2   63[COMRAM] PTR struct _IO_FILE
  7197 ;;		 -> sprintf@f(11), 
  7198 ;;  fmt             2   65[COMRAM] PTR PTR unsigned char 
  7199 ;;		 -> vfprintf@cfmt(2), 
  7200 ;;  ap              2   67[COMRAM] PTR PTR void 
  7201 ;;		 -> sprintf@ap(2), 
  7202 ;; Auto vars:     Size  Location     Type
  7203 ;;  ll              8   71[COMRAM] long long 
  7204 ;;  llu             8    0        unsigned long long 
  7205 ;;  f               4    0        unsigned long long 
  7206 ;;  vp              3    0        PTR void 
  7207 ;;  ct              3    0        unsigned char [3]
  7208 ;;  cp              3    0        PTR unsigned char 
  7209 ;;  i               2    0        int 
  7210 ;;  done            2    0        int 
  7211 ;;  c               1    0        unsigned char 
  7212 ;; Return value:  Size  Location     Type
  7213 ;;                  2   63[COMRAM] int 
  7214 ;; Registers used:
  7215 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7216 ;; Tracked objects:
  7217 ;;		On entry : 0/0
  7218 ;;		On exit  : 0/0
  7219 ;;		Unchanged: 0/0
  7220 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7221 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7222 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7223 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7224 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7225 ;;Total ram usage:       16 bytes
  7226 ;; Hardware stack levels used: 1
  7227 ;; Hardware stack levels required when called: 5
  7228 ;; This function calls:
  7229 ;;		_dtoa
  7230 ;;		_fputc
  7231 ;; This function is called by:
  7232 ;;		_vfprintf
  7233 ;; This function uses a non-reentrant model
  7234 ;;
  7235                           
  7236                           	psect	text27
  7237  003572                     __ptext27:
  7238                           	callstack 0
  7239  003572                     _vfpfcnvrt:
  7240                           	callstack 22
  7241  003572                     
  7242                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.35\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.35\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.35\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          5\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  7243  003572  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7244  003576  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7245  00357A  CFDE FFF6          	movff	postinc2,tblptrl
  7246  00357E  CFDD FFF7          	movff	postdec2,tblptrh
  7247  003582                     	if	0	;tblptru may be non-zero
  7248  003582                     	endif
  7249  003582                     	if	0	;tblptru may be non-zero
  7250  003582                     	endif
  7251  003582  0008               	tblrd		*
  7252  003584  50F5               	movf	tablat,w,c
  7253  003586  0A25               	xorlw	37
  7254  003588  A4D8               	btfss	status,2,c
  7255  00358A  EFC9  F01A         	goto	u3731
  7256  00358E  EFCB  F01A         	goto	u3730
  7257  003592                     u3731:
  7258  003592  EF77  F01B         	goto	l3940
  7259  003596                     u3730:
  7260  003596                     
  7261                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  7262  003596  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7263  00359A  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7264  00359E  2ADE               	incf	postinc2,f,c
  7265  0035A0  0E00               	movlw	0
  7266  0035A2  22DD               	addwfc	postdec2,f,c
  7267  0035A4                     
  7268                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  7269  0035A4  0E00               	movlw	0
  7270  0035A6  0100               	movlb	0	; () banked
  7271  0035A8  6FEF               	movwf	(_width+1)& (0+255),b
  7272  0035AA  0E00               	movlw	0
  7273  0035AC  6FEE               	movwf	_width& (0+255),b
  7274  0035AE  C0EE  F0F2         	movff	_width,_flags
  7275  0035B2  C0EF  F0F3         	movff	_width+1,_flags+1
  7276  0035B6                     
  7277                           ; BSR set to: 0
  7278                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  7279  0035B6  69F0               	setf	_prec& (0+255),b
  7280  0035B8  69F1               	setf	(_prec+1)& (0+255),b
  7281  0035BA                     
  7282                           ; BSR set to: 0
  7283                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  7284  0035BA  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7285  0035BE  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7286  0035C2  CFDE FFF6          	movff	postinc2,tblptrl
  7287  0035C6  CFDD FFF7          	movff	postdec2,tblptrh
  7288  0035CA                     	if	0	;tblptru may be non-zero
  7289  0035CA                     	endif
  7290  0035CA                     	if	0	;tblptru may be non-zero
  7291  0035CA                     	endif
  7292  0035CA  0008               	tblrd		*
  7293  0035CC  50F5               	movf	tablat,w,c
  7294  0035CE  0A64               	xorlw	100
  7295  0035D0  B4D8               	btfsc	status,2,c
  7296  0035D2  EFED  F01A         	goto	u3741
  7297  0035D6  EFEF  F01A         	goto	u3740
  7298  0035DA                     u3741:
  7299  0035DA  EF01  F01B         	goto	l3918
  7300  0035DE                     u3740:
  7301  0035DE                     
  7302                           ; BSR set to: 0
  7303  0035DE  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7304  0035E2  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7305  0035E6  CFDE FFF6          	movff	postinc2,tblptrl
  7306  0035EA  CFDD FFF7          	movff	postdec2,tblptrh
  7307  0035EE                     	if	0	;tblptru may be non-zero
  7308  0035EE                     	endif
  7309  0035EE                     	if	0	;tblptru may be non-zero
  7310  0035EE                     	endif
  7311  0035EE  0008               	tblrd		*
  7312  0035F0  50F5               	movf	tablat,w,c
  7313  0035F2  0A69               	xorlw	105
  7314  0035F4  A4D8               	btfss	status,2,c
  7315  0035F6  EFFF  F01A         	goto	u3751
  7316  0035FA  EF01  F01B         	goto	u3750
  7317  0035FE                     u3751:
  7318  0035FE  EF41  F01B         	goto	l3924
  7319  003602                     u3750:
  7320  003602                     l3918:
  7321                           
  7322                           ; BSR set to: 0
  7323                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  7324  003602  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7325  003606  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7326  00360A  2ADE               	incf	postinc2,f,c
  7327  00360C  0E00               	movlw	0
  7328  00360E  22DD               	addwfc	postdec2,f,c
  7329                           
  7330                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  7331  003610  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  7332  003614  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  7333  003618  CFDF F046          	movff	indf2,??_vfpfcnvrt
  7334  00361C  0E02               	movlw	2
  7335  00361E  26DE               	addwf	postinc2,f,c
  7336  003620  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  7337  003624  0E00               	movlw	0
  7338  003626  22DD               	addwfc	postdec2,f,c
  7339  003628  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  7340  00362C  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  7341  003630  CFDE F048          	movff	postinc2,vfpfcnvrt@ll
  7342  003634  CFDD F049          	movff	postdec2,vfpfcnvrt@ll+1
  7343  003638  0E00               	movlw	0
  7344  00363A  BE49               	btfsc	(vfpfcnvrt@ll+1)^0,7,c
  7345  00363C  0EFF               	movlw	-1
  7346  00363E  6E4A               	movwf	(vfpfcnvrt@ll+2)^0,c
  7347  003640  6E4B               	movwf	(vfpfcnvrt@ll+3)^0,c
  7348  003642  6E4C               	movwf	(vfpfcnvrt@ll+4)^0,c
  7349  003644  6E4D               	movwf	(vfpfcnvrt@ll+5)^0,c
  7350  003646  6E4E               	movwf	(vfpfcnvrt@ll+6)^0,c
  7351  003648  6E4F               	movwf	(vfpfcnvrt@ll+7)^0,c
  7352  00364A                     
  7353                           ; BSR set to: 0
  7354                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  7355  00364A  C040  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  7356  00364E  C041  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  7357  003652  C048  F01E         	movff	vfpfcnvrt@ll,dtoa@d
  7358  003656  C049  F01F         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  7359  00365A  C04A  F020         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  7360  00365E  C04B  F021         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  7361  003662  C04C  F022         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  7362  003666  C04D  F023         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  7363  00366A  C04E  F024         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  7364  00366E  C04F  F025         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  7365  003672  ECA7  F015         	call	_dtoa	;wreg free
  7366  003676  C01C  F040         	movff	?_dtoa,?_vfpfcnvrt
  7367  00367A  C01D  F041         	movff	?_dtoa+1,?_vfpfcnvrt+1
  7368  00367E  EF92  F01B         	goto	l1374
  7369  003682                     l3924:
  7370                           
  7371                           ; BSR set to: 0
  7372                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  7373  003682  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7374  003686  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7375  00368A  CFDE FFF6          	movff	postinc2,tblptrl
  7376  00368E  CFDD FFF7          	movff	postdec2,tblptrh
  7377  003692                     	if	0	;tblptru may be non-zero
  7378  003692                     	endif
  7379  003692                     	if	0	;tblptru may be non-zero
  7380  003692                     	endif
  7381  003692  0008               	tblrd		*
  7382  003694  50F5               	movf	tablat,w,c
  7383  003696  0A25               	xorlw	37
  7384  003698  A4D8               	btfss	status,2,c
  7385  00369A  EF51  F01B         	goto	u3761
  7386  00369E  EF53  F01B         	goto	u3760
  7387  0036A2                     u3761:
  7388  0036A2  EF6A  F01B         	goto	l3934
  7389  0036A6                     u3760:
  7390  0036A6                     
  7391                           ; BSR set to: 0
  7392                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  7393  0036A6  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7394  0036AA  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7395  0036AE  2ADE               	incf	postinc2,f,c
  7396  0036B0  0E00               	movlw	0
  7397  0036B2  22DD               	addwfc	postdec2,f,c
  7398  0036B4                     
  7399                           ; BSR set to: 0
  7400                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  7401  0036B4  0E00               	movlw	0
  7402  0036B6  6E02               	movwf	(fputc@c+1)^0,c
  7403  0036B8  0E25               	movlw	37
  7404  0036BA  6E01               	movwf	fputc@c^0,c
  7405  0036BC  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
  7406  0036C0  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  7407  0036C4  ECB4  F020         	call	_fputc	;wreg free
  7408  0036C8                     l3930:
  7409                           
  7410                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  7411  0036C8  0E00               	movlw	0
  7412  0036CA  6E41               	movwf	(?_vfpfcnvrt+1)^0,c
  7413  0036CC  0E01               	movlw	1
  7414  0036CE  6E40               	movwf	?_vfpfcnvrt^0,c
  7415  0036D0  EF92  F01B         	goto	l1374
  7416  0036D4                     l3934:
  7417                           
  7418                           ; BSR set to: 0
  7419                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  7420  0036D4  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7421  0036D8  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7422  0036DC  2ADE               	incf	postinc2,f,c
  7423  0036DE  0E00               	movlw	0
  7424  0036E0  22DD               	addwfc	postdec2,f,c
  7425  0036E2                     
  7426                           ; BSR set to: 0
  7427                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  7428  0036E2  0E00               	movlw	0
  7429  0036E4  6E41               	movwf	(?_vfpfcnvrt+1)^0,c
  7430  0036E6  0E00               	movlw	0
  7431  0036E8  6E40               	movwf	?_vfpfcnvrt^0,c
  7432  0036EA  EF92  F01B         	goto	l1374
  7433  0036EE                     l3940:
  7434                           
  7435                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  7436  0036EE  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7437  0036F2  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7438  0036F6  CFDE FFF6          	movff	postinc2,tblptrl
  7439  0036FA  CFDD FFF7          	movff	postdec2,tblptrh
  7440  0036FE                     	if	0	;tblptru may be non-zero
  7441  0036FE                     	endif
  7442  0036FE                     	if	0	;tblptru may be non-zero
  7443  0036FE                     	endif
  7444  0036FE  0008               	tblrd		*
  7445  003700  50F5               	movf	tablat,w,c
  7446  003702  6E01               	movwf	fputc@c^0,c
  7447  003704  6A02               	clrf	(fputc@c+1)^0,c
  7448  003706  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
  7449  00370A  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  7450  00370E  ECB4  F020         	call	_fputc	;wreg free
  7451  003712                     
  7452                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  7453  003712  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7454  003716  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7455  00371A  2ADE               	incf	postinc2,f,c
  7456  00371C  0E00               	movlw	0
  7457  00371E  22DD               	addwfc	postdec2,f,c
  7458  003720  EF64  F01B         	goto	l3930
  7459  003724                     l1374:
  7460  003724  0012               	return		;funcret
  7461  003726                     __end_of_vfpfcnvrt:
  7462                           	callstack 0
  7463                           
  7464 ;; *************** function _dtoa *****************
  7465 ;; Defined at:
  7466 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c"
  7467 ;; Parameters:    Size  Location     Type
  7468 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  7469 ;;		 -> sprintf@f(11), 
  7470 ;;  d               8   29[COMRAM] long long 
  7471 ;; Auto vars:     Size  Location     Type
  7472 ;;  n               8   53[COMRAM] long long 
  7473 ;;  i               2   61[COMRAM] int 
  7474 ;;  s               2   51[COMRAM] int 
  7475 ;;  w               2   49[COMRAM] int 
  7476 ;;  p               2   47[COMRAM] int 
  7477 ;; Return value:  Size  Location     Type
  7478 ;;                  2   27[COMRAM] int 
  7479 ;; Registers used:
  7480 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7481 ;; Tracked objects:
  7482 ;;		On entry : 0/0
  7483 ;;		On exit  : 0/0
  7484 ;;		Unchanged: 0/0
  7485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7486 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7487 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7488 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7489 ;;      Totals:        36       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7490 ;;Total ram usage:       36 bytes
  7491 ;; Hardware stack levels used: 1
  7492 ;; Hardware stack levels required when called: 4
  7493 ;; This function calls:
  7494 ;;		___aodiv
  7495 ;;		___aomod
  7496 ;;		_abs
  7497 ;;		_pad
  7498 ;; This function is called by:
  7499 ;;		_vfpfcnvrt
  7500 ;; This function uses a non-reentrant model
  7501 ;;
  7502                           
  7503                           	psect	text28
  7504  002B4E                     __ptext28:
  7505                           	callstack 0
  7506  002B4E                     _dtoa:
  7507                           	callstack 22
  7508  002B4E                     
  7509                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  7510  002B4E  C01E  F036         	movff	dtoa@d,dtoa@n
  7511  002B52  C01F  F037         	movff	dtoa@d+1,dtoa@n+1
  7512  002B56  C020  F038         	movff	dtoa@d+2,dtoa@n+2
  7513  002B5A  C021  F039         	movff	dtoa@d+3,dtoa@n+3
  7514  002B5E  C022  F03A         	movff	dtoa@d+4,dtoa@n+4
  7515  002B62  C023  F03B         	movff	dtoa@d+5,dtoa@n+5
  7516  002B66  C024  F03C         	movff	dtoa@d+6,dtoa@n+6
  7517  002B6A  C025  F03D         	movff	dtoa@d+7,dtoa@n+7
  7518  002B6E                     
  7519                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  7520  002B6E  BE3D               	btfsc	(dtoa@n+7)^0,7,c
  7521  002B70  EFBC  F015         	goto	u3271
  7522  002B74  EFBF  F015         	goto	u3270
  7523  002B78                     u3271:
  7524  002B78  0E01               	movlw	1
  7525  002B7A  EFC0  F015         	goto	u3280
  7526  002B7E                     u3270:
  7527  002B7E  0E00               	movlw	0
  7528  002B80                     u3280:
  7529  002B80  6E34               	movwf	dtoa@s^0,c
  7530  002B82  6A35               	clrf	(dtoa@s+1)^0,c
  7531                           
  7532                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  7533  002B84  5034               	movf	dtoa@s^0,w,c
  7534  002B86  1035               	iorwf	(dtoa@s+1)^0,w,c
  7535  002B88  B4D8               	btfsc	status,2,c
  7536  002B8A  EFC9  F015         	goto	u3291
  7537  002B8E  EFCB  F015         	goto	u3290
  7538  002B92                     u3291:
  7539  002B92  EFDB  F015         	goto	l3640
  7540  002B96                     u3290:
  7541  002B96                     
  7542                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  7543  002B96  1E3D               	comf	(dtoa@n+7)^0,f,c
  7544  002B98  1E3C               	comf	(dtoa@n+6)^0,f,c
  7545  002B9A  1E3B               	comf	(dtoa@n+5)^0,f,c
  7546  002B9C  1E3A               	comf	(dtoa@n+4)^0,f,c
  7547  002B9E  1E39               	comf	(dtoa@n+3)^0,f,c
  7548  002BA0  1E38               	comf	(dtoa@n+2)^0,f,c
  7549  002BA2  1E37               	comf	(dtoa@n+1)^0,f,c
  7550  002BA4  6C36               	negf	dtoa@n^0,c
  7551  002BA6  0E00               	movlw	0
  7552  002BA8  2237               	addwfc	(dtoa@n+1)^0,f,c
  7553  002BAA  2238               	addwfc	(dtoa@n+2)^0,f,c
  7554  002BAC  2239               	addwfc	(dtoa@n+3)^0,f,c
  7555  002BAE  223A               	addwfc	(dtoa@n+4)^0,f,c
  7556  002BB0  223B               	addwfc	(dtoa@n+5)^0,f,c
  7557  002BB2  223C               	addwfc	(dtoa@n+6)^0,f,c
  7558  002BB4  223D               	addwfc	(dtoa@n+7)^0,f,c
  7559  002BB6                     l3640:
  7560                           
  7561                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  7562  002BB6  0100               	movlb	0	; () banked
  7563  002BB8  BFF1               	btfsc	(_prec+1)& (0+255),7,b
  7564  002BBA  EFE1  F015         	goto	u3301
  7565  002BBE  EFE3  F015         	goto	u3300
  7566  002BC2                     u3301:
  7567  002BC2  EFE4  F015         	goto	l3644
  7568  002BC6                     u3300:
  7569  002BC6                     
  7570                           ; BSR set to: 0
  7571                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  7572  002BC6  93F2               	bcf	_flags& (0+255),1,b
  7573  002BC8                     l3644:
  7574                           
  7575                           ; BSR set to: 0
  7576                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  7577  002BC8  BFF1               	btfsc	(_prec+1)& (0+255),7,b
  7578  002BCA  EFF1  F015         	goto	u3310
  7579  002BCE  51F1               	movf	(_prec+1)& (0+255),w,b
  7580  002BD0  E106               	bnz	u3311
  7581  002BD2  05F0               	decf	_prec& (0+255),w,b
  7582  002BD4  B0D8               	btfsc	status,0,c
  7583  002BD6  EFEF  F015         	goto	u3311
  7584  002BDA  EFF1  F015         	goto	u3310
  7585  002BDE                     u3311:
  7586  002BDE  EFF7  F015         	goto	l1347
  7587  002BE2                     u3310:
  7588  002BE2                     
  7589                           ; BSR set to: 0
  7590  002BE2  0E00               	movlw	0
  7591  002BE4  6E31               	movwf	(dtoa@p+1)^0,c
  7592  002BE6  0E01               	movlw	1
  7593  002BE8  6E30               	movwf	dtoa@p^0,c
  7594  002BEA  EFFB  F015         	goto	l1349
  7595  002BEE                     l1347:
  7596                           
  7597                           ; BSR set to: 0
  7598  002BEE  C0F0  F030         	movff	_prec,dtoa@p
  7599  002BF2  C0F1  F031         	movff	_prec+1,dtoa@p+1
  7600  002BF6                     l1349:
  7601                           
  7602                           ; BSR set to: 0
  7603                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  7604  002BF6  C0EE  F032         	movff	_width,dtoa@w
  7605  002BFA  C0EF  F033         	movff	_width+1,dtoa@w+1
  7606  002BFE                     
  7607                           ; BSR set to: 0
  7608                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  7609  002BFE  5034               	movf	dtoa@s^0,w,c
  7610  002C00  1035               	iorwf	(dtoa@s+1)^0,w,c
  7611  002C02  A4D8               	btfss	status,2,c
  7612  002C04  EF06  F016         	goto	u3321
  7613  002C08  EF08  F016         	goto	u3320
  7614  002C0C                     u3321:
  7615  002C0C  EF0F  F016         	goto	l3652
  7616  002C10                     u3320:
  7617  002C10                     
  7618                           ; BSR set to: 0
  7619  002C10  A5F2               	btfss	_flags& (0+255),2,b
  7620  002C12  EF0D  F016         	goto	u3331
  7621  002C16  EF0F  F016         	goto	u3330
  7622  002C1A                     u3331:
  7623  002C1A  EF12  F016         	goto	l3654
  7624  002C1E                     u3330:
  7625  002C1E                     l3652:
  7626                           
  7627                           ; BSR set to: 0
  7628                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 306:         --w;
  7629  002C1E  0632               	decf	dtoa@w^0,f,c
  7630  002C20  A0D8               	btfss	status,0,c
  7631  002C22  0633               	decf	(dtoa@w+1)^0,f,c
  7632  002C24                     l3654:
  7633                           
  7634                           ; BSR set to: 0
  7635                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  7636  002C24  0E00               	movlw	0
  7637  002C26  6E3F               	movwf	(dtoa@i+1)^0,c
  7638  002C28  0E1F               	movlw	31
  7639  002C2A  6E3E               	movwf	dtoa@i^0,c
  7640  002C2C                     
  7641                           ; BSR set to: 0
  7642                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  7643  002C2C  0E00               	movlw	0
  7644  002C2E  0101               	movlb	1	; () banked
  7645  002C30  6F84               	movwf	(_dbuf+31)& (0+255),b
  7646                           
  7647                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7648  002C32  EF97  F016         	goto	l3668
  7649  002C36                     l3658:
  7650                           
  7651                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 313:         --i;
  7652  002C36  063E               	decf	dtoa@i^0,f,c
  7653  002C38  A0D8               	btfss	status,0,c
  7654  002C3A  063F               	decf	(dtoa@i+1)^0,f,c
  7655  002C3C                     
  7656                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  7657  002C3C  0E65               	movlw	low _dbuf
  7658  002C3E  243E               	addwf	dtoa@i^0,w,c
  7659  002C40  6ED9               	movwf	fsr2l,c
  7660  002C42  0E01               	movlw	high _dbuf
  7661  002C44  203F               	addwfc	(dtoa@i+1)^0,w,c
  7662  002C46  6EDA               	movwf	fsr2h,c
  7663  002C48  C036  F001         	movff	dtoa@n,___aomod@dividend
  7664  002C4C  C037  F002         	movff	dtoa@n+1,___aomod@dividend+1
  7665  002C50  C038  F003         	movff	dtoa@n+2,___aomod@dividend+2
  7666  002C54  C039  F004         	movff	dtoa@n+3,___aomod@dividend+3
  7667  002C58  C03A  F005         	movff	dtoa@n+4,___aomod@dividend+4
  7668  002C5C  C03B  F006         	movff	dtoa@n+5,___aomod@dividend+5
  7669  002C60  C03C  F007         	movff	dtoa@n+6,___aomod@dividend+6
  7670  002C64  C03D  F008         	movff	dtoa@n+7,___aomod@dividend+7
  7671  002C68  0E0A               	movlw	10
  7672  002C6A  6E09               	movwf	___aomod@divisor^0,c
  7673  002C6C  0E00               	movlw	0
  7674  002C6E  6E0A               	movwf	(___aomod@divisor+1)^0,c
  7675  002C70  0E00               	movlw	0
  7676  002C72  6E0B               	movwf	(___aomod@divisor+2)^0,c
  7677  002C74  0E00               	movlw	0
  7678  002C76  6E0C               	movwf	(___aomod@divisor+3)^0,c
  7679  002C78  0E00               	movlw	0
  7680  002C7A  6E0D               	movwf	(___aomod@divisor+4)^0,c
  7681  002C7C  0E00               	movlw	0
  7682  002C7E  6E0E               	movwf	(___aomod@divisor+5)^0,c
  7683  002C80  0E00               	movlw	0
  7684  002C82  6E0F               	movwf	(___aomod@divisor+6)^0,c
  7685  002C84  0E00               	movlw	0
  7686  002C86  6E10               	movwf	(___aomod@divisor+7)^0,c
  7687  002C88  EC57  F01C         	call	___aomod	;wreg free
  7688  002C8C  C001  F026         	movff	?___aomod,??_dtoa
  7689  002C90  C002  F027         	movff	?___aomod+1,??_dtoa+1
  7690  002C94  C003  F028         	movff	?___aomod+2,??_dtoa+2
  7691  002C98  C004  F029         	movff	?___aomod+3,??_dtoa+3
  7692  002C9C  C005  F02A         	movff	?___aomod+4,??_dtoa+4
  7693  002CA0  C006  F02B         	movff	?___aomod+5,??_dtoa+5
  7694  002CA4  C007  F02C         	movff	?___aomod+6,??_dtoa+6
  7695  002CA8  C008  F02D         	movff	?___aomod+7,??_dtoa+7
  7696  002CAC  C026  F013         	movff	??_dtoa,abs@a
  7697  002CB0  C028  F014         	movff	??_dtoa+2,abs@a+1
  7698  002CB4  ECF3  F025         	call	_abs	;wreg free
  7699  002CB8  5013               	movf	?_abs^0,w,c
  7700  002CBA  0F30               	addlw	48
  7701  002CBC  6EDF               	movwf	indf2,c
  7702  002CBE                     
  7703                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 315:         --p;
  7704  002CBE  0630               	decf	dtoa@p^0,f,c
  7705  002CC0  A0D8               	btfss	status,0,c
  7706  002CC2  0631               	decf	(dtoa@p+1)^0,f,c
  7707  002CC4                     
  7708                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 316:         --w;
  7709  002CC4  0632               	decf	dtoa@w^0,f,c
  7710  002CC6  A0D8               	btfss	status,0,c
  7711  002CC8  0633               	decf	(dtoa@w+1)^0,f,c
  7712  002CCA                     
  7713                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  7714  002CCA  C036  F001         	movff	dtoa@n,___aodiv@dividend
  7715  002CCE  C037  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  7716  002CD2  C038  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  7717  002CD6  C039  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  7718  002CDA  C03A  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  7719  002CDE  C03B  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  7720  002CE2  C03C  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  7721  002CE6  C03D  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  7722  002CEA  0E0A               	movlw	10
  7723  002CEC  6E09               	movwf	___aodiv@divisor^0,c
  7724  002CEE  0E00               	movlw	0
  7725  002CF0  6E0A               	movwf	(___aodiv@divisor+1)^0,c
  7726  002CF2  0E00               	movlw	0
  7727  002CF4  6E0B               	movwf	(___aodiv@divisor+2)^0,c
  7728  002CF6  0E00               	movlw	0
  7729  002CF8  6E0C               	movwf	(___aodiv@divisor+3)^0,c
  7730  002CFA  0E00               	movlw	0
  7731  002CFC  6E0D               	movwf	(___aodiv@divisor+4)^0,c
  7732  002CFE  0E00               	movlw	0
  7733  002D00  6E0E               	movwf	(___aodiv@divisor+5)^0,c
  7734  002D02  0E00               	movlw	0
  7735  002D04  6E0F               	movwf	(___aodiv@divisor+6)^0,c
  7736  002D06  0E00               	movlw	0
  7737  002D08  6E10               	movwf	(___aodiv@divisor+7)^0,c
  7738  002D0A  EC93  F01B         	call	___aodiv	;wreg free
  7739  002D0E  C001  F036         	movff	?___aodiv,dtoa@n
  7740  002D12  C002  F037         	movff	?___aodiv+1,dtoa@n+1
  7741  002D16  C003  F038         	movff	?___aodiv+2,dtoa@n+2
  7742  002D1A  C004  F039         	movff	?___aodiv+3,dtoa@n+3
  7743  002D1E  C005  F03A         	movff	?___aodiv+4,dtoa@n+4
  7744  002D22  C006  F03B         	movff	?___aodiv+5,dtoa@n+5
  7745  002D26  C007  F03C         	movff	?___aodiv+6,dtoa@n+6
  7746  002D2A  C008  F03D         	movff	?___aodiv+7,dtoa@n+7
  7747  002D2E                     l3668:
  7748                           
  7749                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7750  002D2E  BE3F               	btfsc	(dtoa@i+1)^0,7,c
  7751  002D30  EFA2  F016         	goto	u3341
  7752  002D34  503F               	movf	(dtoa@i+1)^0,w,c
  7753  002D36  E108               	bnz	u3340
  7754  002D38  043E               	decf	dtoa@i^0,w,c
  7755  002D3A  A0D8               	btfss	status,0,c
  7756  002D3C  EFA2  F016         	goto	u3341
  7757  002D40  EFA4  F016         	goto	u3340
  7758  002D44                     u3341:
  7759  002D44  EFD5  F016         	goto	l3678
  7760  002D48                     u3340:
  7761  002D48  5036               	movf	dtoa@n^0,w,c
  7762  002D4A  1037               	iorwf	(dtoa@n+1)^0,w,c
  7763  002D4C  1038               	iorwf	(dtoa@n+2)^0,w,c
  7764  002D4E  1039               	iorwf	(dtoa@n+3)^0,w,c
  7765  002D50  103A               	iorwf	(dtoa@n+4)^0,w,c
  7766  002D52  103B               	iorwf	(dtoa@n+5)^0,w,c
  7767  002D54  103C               	iorwf	(dtoa@n+6)^0,w,c
  7768  002D56  103D               	iorwf	(dtoa@n+7)^0,w,c
  7769  002D58  A4D8               	btfss	status,2,c
  7770  002D5A  EFB1  F016         	goto	u3351
  7771  002D5E  EFB3  F016         	goto	u3350
  7772  002D62                     u3351:
  7773  002D62  EF1B  F016         	goto	l3658
  7774  002D66                     u3350:
  7775  002D66  BE31               	btfsc	(dtoa@p+1)^0,7,c
  7776  002D68  EFC0  F016         	goto	u3360
  7777  002D6C  5031               	movf	(dtoa@p+1)^0,w,c
  7778  002D6E  E106               	bnz	u3361
  7779  002D70  0430               	decf	dtoa@p^0,w,c
  7780  002D72  B0D8               	btfsc	status,0,c
  7781  002D74  EFBE  F016         	goto	u3361
  7782  002D78  EFC0  F016         	goto	u3360
  7783  002D7C                     u3361:
  7784  002D7C  EF1B  F016         	goto	l3658
  7785  002D80                     u3360:
  7786  002D80  BE33               	btfsc	(dtoa@w+1)^0,7,c
  7787  002D82  EFCB  F016         	goto	u3371
  7788  002D86  5033               	movf	(dtoa@w+1)^0,w,c
  7789  002D88  E108               	bnz	u3370
  7790  002D8A  0432               	decf	dtoa@w^0,w,c
  7791  002D8C  A0D8               	btfss	status,0,c
  7792  002D8E  EFCB  F016         	goto	u3371
  7793  002D92  EFCD  F016         	goto	u3370
  7794  002D96                     u3371:
  7795  002D96  EFD5  F016         	goto	l3678
  7796  002D9A                     u3370:
  7797  002D9A  0100               	movlb	0	; () banked
  7798  002D9C  B3F2               	btfsc	_flags& (0+255),1,b
  7799  002D9E  EFD3  F016         	goto	u3381
  7800  002DA2  EFD5  F016         	goto	u3380
  7801  002DA6                     u3381:
  7802  002DA6  EF1B  F016         	goto	l3658
  7803  002DAA                     u3380:
  7804  002DAA                     l3678:
  7805                           
  7806                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  7807  002DAA  5034               	movf	dtoa@s^0,w,c
  7808  002DAC  1035               	iorwf	(dtoa@s+1)^0,w,c
  7809  002DAE  A4D8               	btfss	status,2,c
  7810  002DB0  EFDC  F016         	goto	u3391
  7811  002DB4  EFDE  F016         	goto	u3390
  7812  002DB8                     u3391:
  7813  002DB8  EFE6  F016         	goto	l3682
  7814  002DBC                     u3390:
  7815  002DBC  0100               	movlb	0	; () banked
  7816  002DBE  A5F2               	btfss	_flags& (0+255),2,b
  7817  002DC0  EFE4  F016         	goto	u3401
  7818  002DC4  EFE6  F016         	goto	u3400
  7819  002DC8                     u3401:
  7820  002DC8  EF04  F017         	goto	l3692
  7821  002DCC                     u3400:
  7822  002DCC                     l3682:
  7823                           
  7824                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 322:         --i;
  7825  002DCC  063E               	decf	dtoa@i^0,f,c
  7826  002DCE  A0D8               	btfss	status,0,c
  7827  002DD0  063F               	decf	(dtoa@i+1)^0,f,c
  7828  002DD2                     
  7829                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  7830  002DD2  5034               	movf	dtoa@s^0,w,c
  7831  002DD4  1035               	iorwf	(dtoa@s+1)^0,w,c
  7832  002DD6  A4D8               	btfss	status,2,c
  7833  002DD8  EFF0  F016         	goto	u3411
  7834  002DDC  EFF2  F016         	goto	u3410
  7835  002DE0                     u3411:
  7836  002DE0  EFF8  F016         	goto	l3688
  7837  002DE4                     u3410:
  7838  002DE4  0E00               	movlw	0
  7839  002DE6  6E2F               	movwf	(_dtoa$2416+1)^0,c
  7840  002DE8  0E2B               	movlw	43
  7841  002DEA  6E2E               	movwf	_dtoa$2416^0,c
  7842  002DEC  EFFC  F016         	goto	l3690
  7843  002DF0                     l3688:
  7844  002DF0  0E00               	movlw	0
  7845  002DF2  6E2F               	movwf	(_dtoa$2416+1)^0,c
  7846  002DF4  0E2D               	movlw	45
  7847  002DF6  6E2E               	movwf	_dtoa$2416^0,c
  7848  002DF8                     l3690:
  7849  002DF8  0E65               	movlw	low _dbuf
  7850  002DFA  243E               	addwf	dtoa@i^0,w,c
  7851  002DFC  6ED9               	movwf	fsr2l,c
  7852  002DFE  0E01               	movlw	high _dbuf
  7853  002E00  203F               	addwfc	(dtoa@i+1)^0,w,c
  7854  002E02  6EDA               	movwf	fsr2h,c
  7855  002E04  C02E  FFDF         	movff	_dtoa$2416,indf2
  7856  002E08                     l3692:
  7857                           
  7858                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  7859  002E08  C01C  F011         	movff	dtoa@fp,pad@fp
  7860  002E0C  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
  7861  002E10  0E65               	movlw	low _dbuf
  7862  002E12  243E               	addwf	dtoa@i^0,w,c
  7863  002E14  6E13               	movwf	pad@buf^0,c
  7864  002E16  0E01               	movlw	high _dbuf
  7865  002E18  203F               	addwfc	(dtoa@i+1)^0,w,c
  7866  002E1A  6E14               	movwf	(pad@buf+1)^0,c
  7867  002E1C  C032  F015         	movff	dtoa@w,pad@p
  7868  002E20  C033  F016         	movff	dtoa@w+1,pad@p+1
  7869  002E24  EC7C  F021         	call	_pad	;wreg free
  7870  002E28  C011  F01C         	movff	?_pad,?_dtoa
  7871  002E2C  C012  F01D         	movff	?_pad+1,?_dtoa+1
  7872  002E30  0012               	return		;funcret
  7873  002E32                     __end_of_dtoa:
  7874                           	callstack 0
  7875                           
  7876 ;; *************** function _pad *****************
  7877 ;; Defined at:
  7878 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c"
  7879 ;; Parameters:    Size  Location     Type
  7880 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  7881 ;;		 -> sprintf@f(11), 
  7882 ;;  buf             2   18[COMRAM] PTR unsigned char 
  7883 ;;		 -> dbuf(32), 
  7884 ;;  p               2   20[COMRAM] int 
  7885 ;; Auto vars:     Size  Location     Type
  7886 ;;  w               2   25[COMRAM] int 
  7887 ;;  i               2   23[COMRAM] int 
  7888 ;; Return value:  Size  Location     Type
  7889 ;;                  2   16[COMRAM] int 
  7890 ;; Registers used:
  7891 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7892 ;; Tracked objects:
  7893 ;;		On entry : 0/0
  7894 ;;		On exit  : 0/0
  7895 ;;		Unchanged: 0/0
  7896 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7897 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7898 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7899 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7900 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7901 ;;Total ram usage:       11 bytes
  7902 ;; Hardware stack levels used: 1
  7903 ;; Hardware stack levels required when called: 3
  7904 ;; This function calls:
  7905 ;;		_fputc
  7906 ;;		_fputs
  7907 ;;		_strlen
  7908 ;; This function is called by:
  7909 ;;		_dtoa
  7910 ;; This function uses a non-reentrant model
  7911 ;;
  7912                           
  7913                           	psect	text29
  7914  0042F8                     __ptext29:
  7915                           	callstack 0
  7916  0042F8                     _pad:
  7917                           	callstack 22
  7918  0042F8                     
  7919                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  7920  0042F8  0100               	movlb	0	; () banked
  7921  0042FA  A1F2               	btfss	_flags& (0+255),0,b
  7922  0042FC  EF82  F021         	goto	u2751
  7923  004300  EF84  F021         	goto	u2750
  7924  004304                     u2751:
  7925  004304  EF8E  F021         	goto	l3356
  7926  004308                     u2750:
  7927  004308                     
  7928                           ; BSR set to: 0
  7929                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  7930  004308  C013  F00A         	movff	pad@buf,fputs@s
  7931  00430C  C014  F00B         	movff	pad@buf+1,fputs@s+1
  7932  004310  C011  F00C         	movff	pad@fp,fputs@fp
  7933  004314  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  7934  004318  EC4D  F025         	call	_fputs	;wreg free
  7935  00431C                     l3356:
  7936                           
  7937                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  7938  00431C  BE16               	btfsc	(pad@p+1)^0,7,c
  7939  00431E  EF93  F021         	goto	u2761
  7940  004322  EF95  F021         	goto	u2760
  7941  004326                     u2761:
  7942  004326  EF9B  F021         	goto	l3360
  7943  00432A                     u2760:
  7944  00432A  C015  F01A         	movff	pad@p,pad@w
  7945  00432E  C016  F01B         	movff	pad@p+1,pad@w+1
  7946  004332  EF9F  F021         	goto	l1336
  7947  004336                     l3360:
  7948  004336  0E00               	movlw	0
  7949  004338  6E1B               	movwf	(pad@w+1)^0,c
  7950  00433A  0E00               	movlw	0
  7951  00433C  6E1A               	movwf	pad@w^0,c
  7952  00433E                     l1336:
  7953                           
  7954                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  7955  00433E  0E00               	movlw	0
  7956  004340  6E19               	movwf	(pad@i+1)^0,c
  7957  004342  0E00               	movlw	0
  7958  004344  6E18               	movwf	pad@i^0,c
  7959                           
  7960                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  7961  004346  EFB1  F021         	goto	l3366
  7962  00434A                     l3362:
  7963                           
  7964                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  7965  00434A  0E00               	movlw	0
  7966  00434C  6E02               	movwf	(fputc@c+1)^0,c
  7967  00434E  0E20               	movlw	32
  7968  004350  6E01               	movwf	fputc@c^0,c
  7969  004352  C011  F003         	movff	pad@fp,fputc@fp
  7970  004356  C012  F004         	movff	pad@fp+1,fputc@fp+1
  7971  00435A  ECB4  F020         	call	_fputc	;wreg free
  7972  00435E                     
  7973                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 86:         ++i;
  7974  00435E  4A18               	infsnz	pad@i^0,f,c
  7975  004360  2A19               	incf	(pad@i+1)^0,f,c
  7976  004362                     l3366:
  7977                           
  7978                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  7979  004362  501A               	movf	pad@w^0,w,c
  7980  004364  5C18               	subwf	pad@i^0,w,c
  7981  004366  5019               	movf	(pad@i+1)^0,w,c
  7982  004368  0A80               	xorlw	128
  7983  00436A  6E17               	movwf	??_pad^0,c
  7984  00436C  501B               	movf	(pad@w+1)^0,w,c
  7985  00436E  0A80               	xorlw	128
  7986  004370  5817               	subwfb	??_pad^0,w,c
  7987  004372  A0D8               	btfss	status,0,c
  7988  004374  EFBE  F021         	goto	u2771
  7989  004378  EFC0  F021         	goto	u2770
  7990  00437C                     u2771:
  7991  00437C  EFA5  F021         	goto	l3362
  7992  004380                     u2770:
  7993  004380                     
  7994                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  7995  004380  0100               	movlb	0	; () banked
  7996  004382  B1F2               	btfsc	_flags& (0+255),0,b
  7997  004384  EFC6  F021         	goto	u2781
  7998  004388  EFC8  F021         	goto	u2780
  7999  00438C                     u2781:
  8000  00438C  EFD2  F021         	goto	l3370
  8001  004390                     u2780:
  8002  004390                     
  8003                           ; BSR set to: 0
  8004                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  8005  004390  C013  F00A         	movff	pad@buf,fputs@s
  8006  004394  C014  F00B         	movff	pad@buf+1,fputs@s+1
  8007  004398  C011  F00C         	movff	pad@fp,fputs@fp
  8008  00439C  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  8009  0043A0  EC4D  F025         	call	_fputs	;wreg free
  8010  0043A4                     l3370:
  8011                           
  8012                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  8013  0043A4  C013  F001         	movff	pad@buf,strlen@s
  8014  0043A8  C014  F002         	movff	pad@buf+1,strlen@s+1
  8015  0043AC  EC88  F026         	call	_strlen	;wreg free
  8016  0043B0  501A               	movf	pad@w^0,w,c
  8017  0043B2  2401               	addwf	?_strlen^0,w,c
  8018  0043B4  6E11               	movwf	?_pad^0,c
  8019  0043B6  501B               	movf	(pad@w+1)^0,w,c
  8020  0043B8  2002               	addwfc	(?_strlen+1)^0,w,c
  8021  0043BA  6E12               	movwf	(?_pad+1)^0,c
  8022  0043BC  0012               	return		;funcret
  8023  0043BE                     __end_of_pad:
  8024                           	callstack 0
  8025                           
  8026 ;; *************** function _strlen *****************
  8027 ;; Defined at:
  8028 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\strlen.c"
  8029 ;; Parameters:    Size  Location     Type
  8030 ;;  s               2    0[COMRAM] PTR const unsigned char 
  8031 ;;		 -> dbuf(32), 
  8032 ;; Auto vars:     Size  Location     Type
  8033 ;;  a               2    2[COMRAM] PTR const unsigned char 
  8034 ;;		 -> dbuf(32), 
  8035 ;; Return value:  Size  Location     Type
  8036 ;;                  2    0[COMRAM] unsigned int 
  8037 ;; Registers used:
  8038 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8039 ;; Tracked objects:
  8040 ;;		On entry : 0/0
  8041 ;;		On exit  : 0/0
  8042 ;;		Unchanged: 0/0
  8043 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8044 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8045 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8046 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8047 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8048 ;;Total ram usage:        4 bytes
  8049 ;; Hardware stack levels used: 1
  8050 ;; This function calls:
  8051 ;;		Nothing
  8052 ;; This function is called by:
  8053 ;;		_pad
  8054 ;; This function uses a non-reentrant model
  8055 ;;
  8056                           
  8057                           	psect	text30
  8058  004D10                     __ptext30:
  8059                           	callstack 0
  8060  004D10                     _strlen:
  8061                           	callstack 24
  8062  004D10  C001  F003         	movff	strlen@s,strlen@a
  8063  004D14  C002  F004         	movff	strlen@s+1,strlen@a+1
  8064  004D18  EF90  F026         	goto	l3266
  8065  004D1C                     l3264:
  8066  004D1C  4A01               	infsnz	strlen@s^0,f,c
  8067  004D1E  2A02               	incf	(strlen@s+1)^0,f,c
  8068  004D20                     l3266:
  8069  004D20  C001  FFD9         	movff	strlen@s,fsr2l
  8070  004D24  C002  FFDA         	movff	strlen@s+1,fsr2h
  8071  004D28  50DF               	movf	indf2,w,c
  8072  004D2A  A4D8               	btfss	status,2,c
  8073  004D2C  EF9A  F026         	goto	u2611
  8074  004D30  EF9C  F026         	goto	u2610
  8075  004D34                     u2611:
  8076  004D34  EF8E  F026         	goto	l3264
  8077  004D38                     u2610:
  8078  004D38  5003               	movf	strlen@a^0,w,c
  8079  004D3A  5C01               	subwf	strlen@s^0,w,c
  8080  004D3C  6E01               	movwf	?_strlen^0,c
  8081  004D3E  5004               	movf	(strlen@a+1)^0,w,c
  8082  004D40  5802               	subwfb	(strlen@s+1)^0,w,c
  8083  004D42  6E02               	movwf	(?_strlen+1)^0,c
  8084  004D44  0012               	return		;funcret
  8085  004D46                     __end_of_strlen:
  8086                           	callstack 0
  8087                           
  8088 ;; *************** function _fputs *****************
  8089 ;; Defined at:
  8090 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\nf_fputs.c"
  8091 ;; Parameters:    Size  Location     Type
  8092 ;;  s               2    9[COMRAM] PTR const unsigned char 
  8093 ;;		 -> dbuf(32), 
  8094 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  8095 ;;		 -> sprintf@f(11), 
  8096 ;; Auto vars:     Size  Location     Type
  8097 ;;  i               2   14[COMRAM] int 
  8098 ;;  c               1   13[COMRAM] unsigned char 
  8099 ;; Return value:  Size  Location     Type
  8100 ;;                  2    9[COMRAM] int 
  8101 ;; Registers used:
  8102 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8103 ;; Tracked objects:
  8104 ;;		On entry : 0/0
  8105 ;;		On exit  : 0/0
  8106 ;;		Unchanged: 0/0
  8107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8108 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8109 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8110 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8111 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8112 ;;Total ram usage:        7 bytes
  8113 ;; Hardware stack levels used: 1
  8114 ;; Hardware stack levels required when called: 2
  8115 ;; This function calls:
  8116 ;;		_fputc
  8117 ;; This function is called by:
  8118 ;;		_pad
  8119 ;; This function uses a non-reentrant model
  8120 ;;
  8121                           
  8122                           	psect	text31
  8123  004A9A                     __ptext31:
  8124                           	callstack 0
  8125  004A9A                     _fputs:
  8126                           	callstack 22
  8127  004A9A  0E00               	movlw	0
  8128  004A9C  6E10               	movwf	(fputs@i+1)^0,c
  8129  004A9E  0E00               	movlw	0
  8130  004AA0  6E0F               	movwf	fputs@i^0,c
  8131  004AA2  EF5E  F025         	goto	l3260
  8132  004AA6                     l3256:
  8133  004AA6  C00E  F001         	movff	fputs@c,fputc@c
  8134  004AAA  6A02               	clrf	(fputc@c+1)^0,c
  8135  004AAC  C00C  F003         	movff	fputs@fp,fputc@fp
  8136  004AB0  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  8137  004AB4  ECB4  F020         	call	_fputc	;wreg free
  8138  004AB8  4A0F               	infsnz	fputs@i^0,f,c
  8139  004ABA  2A10               	incf	(fputs@i+1)^0,f,c
  8140  004ABC                     l3260:
  8141  004ABC  500F               	movf	fputs@i^0,w,c
  8142  004ABE  240A               	addwf	fputs@s^0,w,c
  8143  004AC0  6ED9               	movwf	fsr2l,c
  8144  004AC2  5010               	movf	(fputs@i+1)^0,w,c
  8145  004AC4  200B               	addwfc	(fputs@s+1)^0,w,c
  8146  004AC6  6EDA               	movwf	fsr2h,c
  8147  004AC8  50DF               	movf	indf2,w,c
  8148  004ACA  6E0E               	movwf	fputs@c^0,c
  8149  004ACC  500E               	movf	fputs@c^0,w,c
  8150  004ACE  A4D8               	btfss	status,2,c
  8151  004AD0  EF6C  F025         	goto	u2601
  8152  004AD4  EF6E  F025         	goto	u2600
  8153  004AD8                     u2601:
  8154  004AD8  EF53  F025         	goto	l3256
  8155  004ADC                     u2600:
  8156  004ADC  0012               	return		;funcret
  8157  004ADE                     __end_of_fputs:
  8158                           	callstack 0
  8159                           
  8160 ;; *************** function _fputc *****************
  8161 ;; Defined at:
  8162 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\nf_fputc.c"
  8163 ;; Parameters:    Size  Location     Type
  8164 ;;  c               2    0[COMRAM] int 
  8165 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  8166 ;;		 -> sprintf@f(11), 
  8167 ;; Auto vars:     Size  Location     Type
  8168 ;;		None
  8169 ;; Return value:  Size  Location     Type
  8170 ;;                  2    0[COMRAM] int 
  8171 ;; Registers used:
  8172 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8173 ;; Tracked objects:
  8174 ;;		On entry : 0/0
  8175 ;;		On exit  : 0/0
  8176 ;;		Unchanged: 0/0
  8177 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8178 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8179 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8180 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8181 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8182 ;;Total ram usage:        9 bytes
  8183 ;; Hardware stack levels used: 1
  8184 ;; Hardware stack levels required when called: 1
  8185 ;; This function calls:
  8186 ;;		_putch
  8187 ;; This function is called by:
  8188 ;;		_pad
  8189 ;;		_vfpfcnvrt
  8190 ;;		_fputs
  8191 ;; This function uses a non-reentrant model
  8192 ;;
  8193                           
  8194                           	psect	text32
  8195  004168                     __ptext32:
  8196                           	callstack 0
  8197  004168                     _fputc:
  8198                           	callstack 25
  8199  004168  5003               	movf	fputc@fp^0,w,c
  8200  00416A  1004               	iorwf	(fputc@fp+1)^0,w,c
  8201  00416C  B4D8               	btfsc	status,2,c
  8202  00416E  EFBB  F020         	goto	u2561
  8203  004172  EFBD  F020         	goto	u2560
  8204  004176                     u2561:
  8205  004176  EFC6  F020         	goto	l3244
  8206  00417A                     u2560:
  8207  00417A  5003               	movf	fputc@fp^0,w,c
  8208  00417C  1004               	iorwf	(fputc@fp+1)^0,w,c
  8209  00417E  A4D8               	btfss	status,2,c
  8210  004180  EFC4  F020         	goto	u2571
  8211  004184  EFC6  F020         	goto	u2570
  8212  004188                     u2571:
  8213  004188  EFCB  F020         	goto	l3246
  8214  00418C                     u2570:
  8215  00418C                     l3244:
  8216  00418C  5001               	movf	fputc@c^0,w,c
  8217  00418E  ECAD  F027         	call	_putch
  8218  004192  EF18  F021         	goto	l1400
  8219  004196                     l3246:
  8220  004196  EE20 F009          	lfsr	2,9
  8221  00419A  5003               	movf	fputc@fp^0,w,c
  8222  00419C  26D9               	addwf	fsr2l,f,c
  8223  00419E  5004               	movf	(fputc@fp+1)^0,w,c
  8224  0041A0  22DA               	addwfc	fsr2h,f,c
  8225  0041A2  50DE               	movf	postinc2,w,c
  8226  0041A4  10DE               	iorwf	postinc2,w,c
  8227  0041A6  B4D8               	btfsc	status,2,c
  8228  0041A8  EFD8  F020         	goto	u2581
  8229  0041AC  EFDA  F020         	goto	u2580
  8230  0041B0                     u2581:
  8231  0041B0  EFF5  F020         	goto	l3250
  8232  0041B4                     u2580:
  8233  0041B4  EE20 F009          	lfsr	2,9
  8234  0041B8  5003               	movf	fputc@fp^0,w,c
  8235  0041BA  26D9               	addwf	fsr2l,f,c
  8236  0041BC  5004               	movf	(fputc@fp+1)^0,w,c
  8237  0041BE  22DA               	addwfc	fsr2h,f,c
  8238  0041C0  EE10 F003          	lfsr	1,3
  8239  0041C4  5003               	movf	fputc@fp^0,w,c
  8240  0041C6  26E1               	addwf	fsr1l,f,c
  8241  0041C8  5004               	movf	(fputc@fp+1)^0,w,c
  8242  0041CA  22E2               	addwfc	fsr1h,f,c
  8243  0041CC  50DE               	movf	postinc2,w,c
  8244  0041CE  5CE6               	subwf	postinc1,w,c
  8245  0041D0  50E6               	movf	postinc1,w,c
  8246  0041D2  0A80               	xorlw	128
  8247  0041D4  6E09               	movwf	(??_fputc+4)^0,c
  8248  0041D6  50DE               	movf	postinc2,w,c
  8249  0041D8  0A80               	xorlw	128
  8250  0041DA  5809               	subwfb	(??_fputc+4)^0,w,c
  8251  0041DC  B0D8               	btfsc	status,0,c
  8252  0041DE  EFF3  F020         	goto	u2591
  8253  0041E2  EFF5  F020         	goto	u2590
  8254  0041E6                     u2591:
  8255  0041E6  EF18  F021         	goto	l1400
  8256  0041EA                     u2590:
  8257  0041EA                     l3250:
  8258  0041EA  EE20 F003          	lfsr	2,3
  8259  0041EE  5003               	movf	fputc@fp^0,w,c
  8260  0041F0  26D9               	addwf	fsr2l,f,c
  8261  0041F2  5004               	movf	(fputc@fp+1)^0,w,c
  8262  0041F4  22DA               	addwfc	fsr2h,f,c
  8263  0041F6  CFDE F005          	movff	postinc2,??_fputc
  8264  0041FA  CFDD F006          	movff	postdec2,??_fputc+1
  8265  0041FE  C003  FFD9         	movff	fputc@fp,fsr2l
  8266  004202  C004  FFDA         	movff	fputc@fp+1,fsr2h
  8267  004206  CFDE F007          	movff	postinc2,??_fputc+2
  8268  00420A  CFDD F008          	movff	postdec2,??_fputc+3
  8269  00420E  5005               	movf	??_fputc^0,w,c
  8270  004210  2407               	addwf	(??_fputc+2)^0,w,c
  8271  004212  6ED9               	movwf	fsr2l,c
  8272  004214  5006               	movf	(??_fputc+1)^0,w,c
  8273  004216  2008               	addwfc	(??_fputc+3)^0,w,c
  8274  004218  6EDA               	movwf	fsr2h,c
  8275  00421A  C001  FFDF         	movff	fputc@c,indf2
  8276  00421E  EE20 F003          	lfsr	2,3
  8277  004222  5003               	movf	fputc@fp^0,w,c
  8278  004224  26D9               	addwf	fsr2l,f,c
  8279  004226  5004               	movf	(fputc@fp+1)^0,w,c
  8280  004228  22DA               	addwfc	fsr2h,f,c
  8281  00422A  2ADE               	incf	postinc2,f,c
  8282  00422C  0E00               	movlw	0
  8283  00422E  22DD               	addwfc	postdec2,f,c
  8284  004230                     l1400:
  8285  004230  0012               	return		;funcret
  8286  004232                     __end_of_fputc:
  8287                           	callstack 0
  8288                           
  8289 ;; *************** function _putch *****************
  8290 ;; Defined at:
  8291 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\putch.c"
  8292 ;; Parameters:    Size  Location     Type
  8293 ;;  c               1    wreg     unsigned char 
  8294 ;; Auto vars:     Size  Location     Type
  8295 ;;  c               1    0[COMRAM] unsigned char 
  8296 ;; Return value:  Size  Location     Type
  8297 ;;                  1    wreg      void 
  8298 ;; Registers used:
  8299 ;;		wreg
  8300 ;; Tracked objects:
  8301 ;;		On entry : 0/0
  8302 ;;		On exit  : 0/0
  8303 ;;		Unchanged: 0/0
  8304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8305 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8306 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8307 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8308 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8309 ;;Total ram usage:        0 bytes
  8310 ;; Hardware stack levels used: 1
  8311 ;; This function calls:
  8312 ;;		Nothing
  8313 ;; This function is called by:
  8314 ;;		_fputc
  8315 ;; This function uses a non-reentrant model
  8316 ;;
  8317                           
  8318                           	psect	text33
  8319  004F5A                     __ptext33:
  8320                           	callstack 0
  8321  004F5A                     _putch:
  8322                           	callstack 25
  8323  004F5A  0012               	return		;funcret
  8324  004F5C                     __end_of_putch:
  8325                           	callstack 0
  8326                           
  8327 ;; *************** function _abs *****************
  8328 ;; Defined at:
  8329 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\abs.c"
  8330 ;; Parameters:    Size  Location     Type
  8331 ;;  a               2   18[COMRAM] int 
  8332 ;; Auto vars:     Size  Location     Type
  8333 ;;		None
  8334 ;; Return value:  Size  Location     Type
  8335 ;;                  2   18[COMRAM] int 
  8336 ;; Registers used:
  8337 ;;		wreg, status,2, status,0
  8338 ;; Tracked objects:
  8339 ;;		On entry : 0/0
  8340 ;;		On exit  : 0/0
  8341 ;;		Unchanged: 0/0
  8342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8343 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8344 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8345 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8346 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8347 ;;Total ram usage:        4 bytes
  8348 ;; Hardware stack levels used: 1
  8349 ;; This function calls:
  8350 ;;		Nothing
  8351 ;; This function is called by:
  8352 ;;		_dtoa
  8353 ;; This function uses a non-reentrant model
  8354 ;;
  8355                           
  8356                           	psect	text34
  8357  004BE6                     __ptext34:
  8358                           	callstack 0
  8359  004BE6                     _abs:
  8360                           	callstack 25
  8361  004BE6  BE14               	btfsc	(abs@a+1)^0,7,c
  8362  004BE8  EF00  F026         	goto	u2790
  8363  004BEC  5014               	movf	(abs@a+1)^0,w,c
  8364  004BEE  E106               	bnz	u2791
  8365  004BF0  0413               	decf	abs@a^0,w,c
  8366  004BF2  B0D8               	btfsc	status,0,c
  8367  004BF4  EFFE  F025         	goto	u2791
  8368  004BF8  EF00  F026         	goto	u2790
  8369  004BFC                     u2791:
  8370  004BFC  EF0E  F026         	goto	l1385
  8371  004C00                     u2790:
  8372  004C00  C013  F015         	movff	abs@a,??_abs
  8373  004C04  C014  F016         	movff	abs@a+1,??_abs+1
  8374  004C08  1E15               	comf	??_abs^0,f,c
  8375  004C0A  1E16               	comf	(??_abs+1)^0,f,c
  8376  004C0C  4A15               	infsnz	??_abs^0,f,c
  8377  004C0E  2A16               	incf	(??_abs+1)^0,f,c
  8378  004C10  C015  F013         	movff	??_abs,?_abs
  8379  004C14  C016  F014         	movff	??_abs+1,?_abs+1
  8380  004C18  EF12  F026         	goto	l1388
  8381  004C1C                     l1385:
  8382  004C1C  C013  F013         	movff	abs@a,?_abs
  8383  004C20  C014  F014         	movff	abs@a+1,?_abs+1
  8384  004C24                     l1388:
  8385  004C24  0012               	return		;funcret
  8386  004C26                     __end_of_abs:
  8387                           	callstack 0
  8388                           
  8389 ;; *************** function ___aomod *****************
  8390 ;; Defined at:
  8391 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\aomod.c"
  8392 ;; Parameters:    Size  Location     Type
  8393 ;;  dividend        8    0[COMRAM] long long 
  8394 ;;  divisor         8    8[COMRAM] long long 
  8395 ;; Auto vars:     Size  Location     Type
  8396 ;;  sign            1   17[COMRAM] unsigned char 
  8397 ;;  counter         1   16[COMRAM] unsigned char 
  8398 ;; Return value:  Size  Location     Type
  8399 ;;                  8    0[COMRAM] long long 
  8400 ;; Registers used:
  8401 ;;		wreg, status,2, status,0
  8402 ;; Tracked objects:
  8403 ;;		On entry : 0/0
  8404 ;;		On exit  : 0/0
  8405 ;;		Unchanged: 0/0
  8406 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8407 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8408 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8409 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8410 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8411 ;;Total ram usage:       18 bytes
  8412 ;; Hardware stack levels used: 1
  8413 ;; This function calls:
  8414 ;;		Nothing
  8415 ;; This function is called by:
  8416 ;;		_dtoa
  8417 ;; This function uses a non-reentrant model
  8418 ;;
  8419                           
  8420                           	psect	text35
  8421  0038AE                     __ptext35:
  8422                           	callstack 0
  8423  0038AE                     ___aomod:
  8424                           	callstack 25
  8425  0038AE  0E00               	movlw	0
  8426  0038B0  6E12               	movwf	___aomod@sign^0,c
  8427  0038B2  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
  8428  0038B4  EF60  F01C         	goto	u2690
  8429  0038B8  EF5E  F01C         	goto	u2691
  8430  0038BC                     u2691:
  8431  0038BC  EF72  F01C         	goto	l3324
  8432  0038C0                     u2690:
  8433  0038C0  1E08               	comf	(___aomod@dividend+7)^0,f,c
  8434  0038C2  1E07               	comf	(___aomod@dividend+6)^0,f,c
  8435  0038C4  1E06               	comf	(___aomod@dividend+5)^0,f,c
  8436  0038C6  1E05               	comf	(___aomod@dividend+4)^0,f,c
  8437  0038C8  1E04               	comf	(___aomod@dividend+3)^0,f,c
  8438  0038CA  1E03               	comf	(___aomod@dividend+2)^0,f,c
  8439  0038CC  1E02               	comf	(___aomod@dividend+1)^0,f,c
  8440  0038CE  6C01               	negf	___aomod@dividend^0,c
  8441  0038D0  0E00               	movlw	0
  8442  0038D2  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  8443  0038D4  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  8444  0038D6  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  8445  0038D8  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  8446  0038DA  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  8447  0038DC  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  8448  0038DE  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  8449  0038E0  0E01               	movlw	1
  8450  0038E2  6E12               	movwf	___aomod@sign^0,c
  8451  0038E4                     l3324:
  8452  0038E4  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
  8453  0038E6  EF79  F01C         	goto	u2700
  8454  0038EA  EF77  F01C         	goto	u2701
  8455  0038EE                     u2701:
  8456  0038EE  EF89  F01C         	goto	l3328
  8457  0038F2                     u2700:
  8458  0038F2  1E10               	comf	(___aomod@divisor+7)^0,f,c
  8459  0038F4  1E0F               	comf	(___aomod@divisor+6)^0,f,c
  8460  0038F6  1E0E               	comf	(___aomod@divisor+5)^0,f,c
  8461  0038F8  1E0D               	comf	(___aomod@divisor+4)^0,f,c
  8462  0038FA  1E0C               	comf	(___aomod@divisor+3)^0,f,c
  8463  0038FC  1E0B               	comf	(___aomod@divisor+2)^0,f,c
  8464  0038FE  1E0A               	comf	(___aomod@divisor+1)^0,f,c
  8465  003900  6C09               	negf	___aomod@divisor^0,c
  8466  003902  0E00               	movlw	0
  8467  003904  220A               	addwfc	(___aomod@divisor+1)^0,f,c
  8468  003906  220B               	addwfc	(___aomod@divisor+2)^0,f,c
  8469  003908  220C               	addwfc	(___aomod@divisor+3)^0,f,c
  8470  00390A  220D               	addwfc	(___aomod@divisor+4)^0,f,c
  8471  00390C  220E               	addwfc	(___aomod@divisor+5)^0,f,c
  8472  00390E  220F               	addwfc	(___aomod@divisor+6)^0,f,c
  8473  003910  2210               	addwfc	(___aomod@divisor+7)^0,f,c
  8474  003912                     l3328:
  8475  003912  5009               	movf	___aomod@divisor^0,w,c
  8476  003914  100A               	iorwf	(___aomod@divisor+1)^0,w,c
  8477  003916  100B               	iorwf	(___aomod@divisor+2)^0,w,c
  8478  003918  100C               	iorwf	(___aomod@divisor+3)^0,w,c
  8479  00391A  100D               	iorwf	(___aomod@divisor+4)^0,w,c
  8480  00391C  100E               	iorwf	(___aomod@divisor+5)^0,w,c
  8481  00391E  100F               	iorwf	(___aomod@divisor+6)^0,w,c
  8482  003920  1010               	iorwf	(___aomod@divisor+7)^0,w,c
  8483  003922  B4D8               	btfsc	status,2,c
  8484  003924  EF96  F01C         	goto	u2711
  8485  003928  EF98  F01C         	goto	u2710
  8486  00392C                     u2711:
  8487  00392C  EFE0  F01C         	goto	l3344
  8488  003930                     u2710:
  8489  003930  0E01               	movlw	1
  8490  003932  6E11               	movwf	___aomod@counter^0,c
  8491  003934  EFA6  F01C         	goto	l3334
  8492  003938                     l3332:
  8493  003938  90D8               	bcf	status,0,c
  8494  00393A  3609               	rlcf	___aomod@divisor^0,f,c
  8495  00393C  360A               	rlcf	(___aomod@divisor+1)^0,f,c
  8496  00393E  360B               	rlcf	(___aomod@divisor+2)^0,f,c
  8497  003940  360C               	rlcf	(___aomod@divisor+3)^0,f,c
  8498  003942  360D               	rlcf	(___aomod@divisor+4)^0,f,c
  8499  003944  360E               	rlcf	(___aomod@divisor+5)^0,f,c
  8500  003946  360F               	rlcf	(___aomod@divisor+6)^0,f,c
  8501  003948  3610               	rlcf	(___aomod@divisor+7)^0,f,c
  8502  00394A  2A11               	incf	___aomod@counter^0,f,c
  8503  00394C                     l3334:
  8504  00394C  AE10               	btfss	(___aomod@divisor+7)^0,7,c
  8505  00394E  EFAB  F01C         	goto	u2721
  8506  003952  EFAD  F01C         	goto	u2720
  8507  003956                     u2721:
  8508  003956  EF9C  F01C         	goto	l3332
  8509  00395A                     u2720:
  8510  00395A                     l3336:
  8511  00395A  5009               	movf	___aomod@divisor^0,w,c
  8512  00395C  5C01               	subwf	___aomod@dividend^0,w,c
  8513  00395E  500A               	movf	(___aomod@divisor+1)^0,w,c
  8514  003960  5802               	subwfb	(___aomod@dividend+1)^0,w,c
  8515  003962  500B               	movf	(___aomod@divisor+2)^0,w,c
  8516  003964  5803               	subwfb	(___aomod@dividend+2)^0,w,c
  8517  003966  500C               	movf	(___aomod@divisor+3)^0,w,c
  8518  003968  5804               	subwfb	(___aomod@dividend+3)^0,w,c
  8519  00396A  500D               	movf	(___aomod@divisor+4)^0,w,c
  8520  00396C  5805               	subwfb	(___aomod@dividend+4)^0,w,c
  8521  00396E  500E               	movf	(___aomod@divisor+5)^0,w,c
  8522  003970  5806               	subwfb	(___aomod@dividend+5)^0,w,c
  8523  003972  500F               	movf	(___aomod@divisor+6)^0,w,c
  8524  003974  5807               	subwfb	(___aomod@dividend+6)^0,w,c
  8525  003976  5010               	movf	(___aomod@divisor+7)^0,w,c
  8526  003978  5808               	subwfb	(___aomod@dividend+7)^0,w,c
  8527  00397A  A0D8               	btfss	status,0,c
  8528  00397C  EFC2  F01C         	goto	u2731
  8529  003980  EFC4  F01C         	goto	u2730
  8530  003984                     u2731:
  8531  003984  EFD4  F01C         	goto	l3340
  8532  003988                     u2730:
  8533  003988  5009               	movf	___aomod@divisor^0,w,c
  8534  00398A  5E01               	subwf	___aomod@dividend^0,f,c
  8535  00398C  500A               	movf	(___aomod@divisor+1)^0,w,c
  8536  00398E  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
  8537  003990  500B               	movf	(___aomod@divisor+2)^0,w,c
  8538  003992  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
  8539  003994  500C               	movf	(___aomod@divisor+3)^0,w,c
  8540  003996  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
  8541  003998  500D               	movf	(___aomod@divisor+4)^0,w,c
  8542  00399A  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
  8543  00399C  500E               	movf	(___aomod@divisor+5)^0,w,c
  8544  00399E  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
  8545  0039A0  500F               	movf	(___aomod@divisor+6)^0,w,c
  8546  0039A2  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
  8547  0039A4  5010               	movf	(___aomod@divisor+7)^0,w,c
  8548  0039A6  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
  8549  0039A8                     l3340:
  8550  0039A8  90D8               	bcf	status,0,c
  8551  0039AA  3210               	rrcf	(___aomod@divisor+7)^0,f,c
  8552  0039AC  320F               	rrcf	(___aomod@divisor+6)^0,f,c
  8553  0039AE  320E               	rrcf	(___aomod@divisor+5)^0,f,c
  8554  0039B0  320D               	rrcf	(___aomod@divisor+4)^0,f,c
  8555  0039B2  320C               	rrcf	(___aomod@divisor+3)^0,f,c
  8556  0039B4  320B               	rrcf	(___aomod@divisor+2)^0,f,c
  8557  0039B6  320A               	rrcf	(___aomod@divisor+1)^0,f,c
  8558  0039B8  3209               	rrcf	___aomod@divisor^0,f,c
  8559  0039BA  2E11               	decfsz	___aomod@counter^0,f,c
  8560  0039BC  EFAD  F01C         	goto	l3336
  8561  0039C0                     l3344:
  8562  0039C0  5012               	movf	___aomod@sign^0,w,c
  8563  0039C2  B4D8               	btfsc	status,2,c
  8564  0039C4  EFE6  F01C         	goto	u2741
  8565  0039C8  EFE8  F01C         	goto	u2740
  8566  0039CC                     u2741:
  8567  0039CC  EFF8  F01C         	goto	l3348
  8568  0039D0                     u2740:
  8569  0039D0  1E08               	comf	(___aomod@dividend+7)^0,f,c
  8570  0039D2  1E07               	comf	(___aomod@dividend+6)^0,f,c
  8571  0039D4  1E06               	comf	(___aomod@dividend+5)^0,f,c
  8572  0039D6  1E05               	comf	(___aomod@dividend+4)^0,f,c
  8573  0039D8  1E04               	comf	(___aomod@dividend+3)^0,f,c
  8574  0039DA  1E03               	comf	(___aomod@dividend+2)^0,f,c
  8575  0039DC  1E02               	comf	(___aomod@dividend+1)^0,f,c
  8576  0039DE  6C01               	negf	___aomod@dividend^0,c
  8577  0039E0  0E00               	movlw	0
  8578  0039E2  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  8579  0039E4  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  8580  0039E6  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  8581  0039E8  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  8582  0039EA  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  8583  0039EC  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  8584  0039EE  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  8585  0039F0                     l3348:
  8586  0039F0  C001  F001         	movff	___aomod@dividend,?___aomod
  8587  0039F4  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  8588  0039F8  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  8589  0039FC  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  8590  003A00  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  8591  003A04  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  8592  003A08  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  8593  003A0C  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  8594  003A10  0012               	return		;funcret
  8595  003A12                     __end_of___aomod:
  8596                           	callstack 0
  8597                           
  8598 ;; *************** function ___aodiv *****************
  8599 ;; Defined at:
  8600 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\aodiv.c"
  8601 ;; Parameters:    Size  Location     Type
  8602 ;;  dividend        8    0[COMRAM] long long 
  8603 ;;  divisor         8    8[COMRAM] long long 
  8604 ;; Auto vars:     Size  Location     Type
  8605 ;;  quotient        8   18[COMRAM] long long 
  8606 ;;  sign            1   17[COMRAM] unsigned char 
  8607 ;;  counter         1   16[COMRAM] unsigned char 
  8608 ;; Return value:  Size  Location     Type
  8609 ;;                  8    0[COMRAM] long long 
  8610 ;; Registers used:
  8611 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8612 ;; Tracked objects:
  8613 ;;		On entry : 0/0
  8614 ;;		On exit  : 0/0
  8615 ;;		Unchanged: 0/0
  8616 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8617 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8618 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8619 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8620 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8621 ;;Total ram usage:       26 bytes
  8622 ;; Hardware stack levels used: 1
  8623 ;; This function calls:
  8624 ;;		Nothing
  8625 ;; This function is called by:
  8626 ;;		_dtoa
  8627 ;; This function uses a non-reentrant model
  8628 ;;
  8629                           
  8630                           	psect	text36
  8631  003726                     __ptext36:
  8632                           	callstack 0
  8633  003726                     ___aodiv:
  8634                           	callstack 25
  8635  003726  0E00               	movlw	0
  8636  003728  6E12               	movwf	___aodiv@sign^0,c
  8637  00372A  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
  8638  00372C  EF9C  F01B         	goto	u2620
  8639  003730  EF9A  F01B         	goto	u2621
  8640  003734                     u2621:
  8641  003734  EFAE  F01B         	goto	l3280
  8642  003738                     u2620:
  8643  003738  1E10               	comf	(___aodiv@divisor+7)^0,f,c
  8644  00373A  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
  8645  00373C  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
  8646  00373E  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
  8647  003740  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
  8648  003742  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
  8649  003744  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
  8650  003746  6C09               	negf	___aodiv@divisor^0,c
  8651  003748  0E00               	movlw	0
  8652  00374A  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
  8653  00374C  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
  8654  00374E  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
  8655  003750  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
  8656  003752  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
  8657  003754  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
  8658  003756  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
  8659  003758  0E01               	movlw	1
  8660  00375A  6E12               	movwf	___aodiv@sign^0,c
  8661  00375C                     l3280:
  8662  00375C  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
  8663  00375E  EFB5  F01B         	goto	u2630
  8664  003762  EFB3  F01B         	goto	u2631
  8665  003766                     u2631:
  8666  003766  EFC7  F01B         	goto	l3286
  8667  00376A                     u2630:
  8668  00376A  1E08               	comf	(___aodiv@dividend+7)^0,f,c
  8669  00376C  1E07               	comf	(___aodiv@dividend+6)^0,f,c
  8670  00376E  1E06               	comf	(___aodiv@dividend+5)^0,f,c
  8671  003770  1E05               	comf	(___aodiv@dividend+4)^0,f,c
  8672  003772  1E04               	comf	(___aodiv@dividend+3)^0,f,c
  8673  003774  1E03               	comf	(___aodiv@dividend+2)^0,f,c
  8674  003776  1E02               	comf	(___aodiv@dividend+1)^0,f,c
  8675  003778  6C01               	negf	___aodiv@dividend^0,c
  8676  00377A  0E00               	movlw	0
  8677  00377C  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
  8678  00377E  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
  8679  003780  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
  8680  003782  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
  8681  003784  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
  8682  003786  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
  8683  003788  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
  8684  00378A  0E01               	movlw	1
  8685  00378C  1A12               	xorwf	___aodiv@sign^0,f,c
  8686  00378E                     l3286:
  8687  00378E  EE20  F013         	lfsr	2,___aodiv@quotient
  8688  003792  0E07               	movlw	7
  8689  003794                     u2641:
  8690  003794  6ADE               	clrf	postinc2,c
  8691  003796  06E8               	decf	wreg,f,c
  8692  003798  E2FD               	bc	u2641
  8693  00379A  5009               	movf	___aodiv@divisor^0,w,c
  8694  00379C  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
  8695  00379E  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
  8696  0037A0  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
  8697  0037A2  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
  8698  0037A4  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
  8699  0037A6  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
  8700  0037A8  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
  8701  0037AA  B4D8               	btfsc	status,2,c
  8702  0037AC  EFDA  F01B         	goto	u2651
  8703  0037B0  EFDC  F01B         	goto	u2650
  8704  0037B4                     u2651:
  8705  0037B4  EF2E  F01C         	goto	l3308
  8706  0037B8                     u2650:
  8707  0037B8  0E01               	movlw	1
  8708  0037BA  6E11               	movwf	___aodiv@counter^0,c
  8709  0037BC  EFEA  F01B         	goto	l3294
  8710  0037C0                     l3292:
  8711  0037C0  90D8               	bcf	status,0,c
  8712  0037C2  3609               	rlcf	___aodiv@divisor^0,f,c
  8713  0037C4  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
  8714  0037C6  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
  8715  0037C8  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
  8716  0037CA  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
  8717  0037CC  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
  8718  0037CE  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
  8719  0037D0  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
  8720  0037D2  2A11               	incf	___aodiv@counter^0,f,c
  8721  0037D4                     l3294:
  8722  0037D4  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
  8723  0037D6  EFEF  F01B         	goto	u2661
  8724  0037DA  EFF1  F01B         	goto	u2660
  8725  0037DE                     u2661:
  8726  0037DE  EFE0  F01B         	goto	l3292
  8727  0037E2                     u2660:
  8728  0037E2                     l3296:
  8729  0037E2  90D8               	bcf	status,0,c
  8730  0037E4  3613               	rlcf	___aodiv@quotient^0,f,c
  8731  0037E6  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
  8732  0037E8  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
  8733  0037EA  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
  8734  0037EC  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
  8735  0037EE  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
  8736  0037F0  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
  8737  0037F2  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
  8738  0037F4  5009               	movf	___aodiv@divisor^0,w,c
  8739  0037F6  5C01               	subwf	___aodiv@dividend^0,w,c
  8740  0037F8  500A               	movf	(___aodiv@divisor+1)^0,w,c
  8741  0037FA  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
  8742  0037FC  500B               	movf	(___aodiv@divisor+2)^0,w,c
  8743  0037FE  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
  8744  003800  500C               	movf	(___aodiv@divisor+3)^0,w,c
  8745  003802  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
  8746  003804  500D               	movf	(___aodiv@divisor+4)^0,w,c
  8747  003806  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
  8748  003808  500E               	movf	(___aodiv@divisor+5)^0,w,c
  8749  00380A  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
  8750  00380C  500F               	movf	(___aodiv@divisor+6)^0,w,c
  8751  00380E  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
  8752  003810  5010               	movf	(___aodiv@divisor+7)^0,w,c
  8753  003812  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
  8754  003814  A0D8               	btfss	status,0,c
  8755  003816  EF0F  F01C         	goto	u2671
  8756  00381A  EF11  F01C         	goto	u2670
  8757  00381E                     u2671:
  8758  00381E  EF22  F01C         	goto	l3304
  8759  003822                     u2670:
  8760  003822  5009               	movf	___aodiv@divisor^0,w,c
  8761  003824  5E01               	subwf	___aodiv@dividend^0,f,c
  8762  003826  500A               	movf	(___aodiv@divisor+1)^0,w,c
  8763  003828  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
  8764  00382A  500B               	movf	(___aodiv@divisor+2)^0,w,c
  8765  00382C  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
  8766  00382E  500C               	movf	(___aodiv@divisor+3)^0,w,c
  8767  003830  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
  8768  003832  500D               	movf	(___aodiv@divisor+4)^0,w,c
  8769  003834  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
  8770  003836  500E               	movf	(___aodiv@divisor+5)^0,w,c
  8771  003838  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
  8772  00383A  500F               	movf	(___aodiv@divisor+6)^0,w,c
  8773  00383C  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
  8774  00383E  5010               	movf	(___aodiv@divisor+7)^0,w,c
  8775  003840  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
  8776  003842  8013               	bsf	___aodiv@quotient^0,0,c
  8777  003844                     l3304:
  8778  003844  90D8               	bcf	status,0,c
  8779  003846  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
  8780  003848  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
  8781  00384A  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
  8782  00384C  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
  8783  00384E  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
  8784  003850  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
  8785  003852  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
  8786  003854  3209               	rrcf	___aodiv@divisor^0,f,c
  8787  003856  2E11               	decfsz	___aodiv@counter^0,f,c
  8788  003858  EFF1  F01B         	goto	l3296
  8789  00385C                     l3308:
  8790  00385C  5012               	movf	___aodiv@sign^0,w,c
  8791  00385E  B4D8               	btfsc	status,2,c
  8792  003860  EF34  F01C         	goto	u2681
  8793  003864  EF36  F01C         	goto	u2680
  8794  003868                     u2681:
  8795  003868  EF46  F01C         	goto	l3312
  8796  00386C                     u2680:
  8797  00386C  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
  8798  00386E  1E19               	comf	(___aodiv@quotient+6)^0,f,c
  8799  003870  1E18               	comf	(___aodiv@quotient+5)^0,f,c
  8800  003872  1E17               	comf	(___aodiv@quotient+4)^0,f,c
  8801  003874  1E16               	comf	(___aodiv@quotient+3)^0,f,c
  8802  003876  1E15               	comf	(___aodiv@quotient+2)^0,f,c
  8803  003878  1E14               	comf	(___aodiv@quotient+1)^0,f,c
  8804  00387A  6C13               	negf	___aodiv@quotient^0,c
  8805  00387C  0E00               	movlw	0
  8806  00387E  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
  8807  003880  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
  8808  003882  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
  8809  003884  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
  8810  003886  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
  8811  003888  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
  8812  00388A  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
  8813  00388C                     l3312:
  8814  00388C  C013  F001         	movff	___aodiv@quotient,?___aodiv
  8815  003890  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  8816  003894  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  8817  003898  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  8818  00389C  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  8819  0038A0  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  8820  0038A4  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  8821  0038A8  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  8822  0038AC  0012               	return		;funcret
  8823  0038AE                     __end_of___aodiv:
  8824                           	callstack 0
  8825                           
  8826 ;; *************** function _sendStringSerial4 *****************
  8827 ;; Defined at:
  8828 ;;		line 36 in file "serial.c"
  8829 ;; Parameters:    Size  Location     Type
  8830 ;;  string          2    1[COMRAM] PTR unsigned char 
  8831 ;;		 -> voltage_display@buf(80), color_predict@buf(100), check_color_reading@buf(100), color_display@buf(100), 
  8832 ;; Auto vars:     Size  Location     Type
  8833 ;;		None
  8834 ;; Return value:  Size  Location     Type
  8835 ;;                  1    wreg      void 
  8836 ;; Registers used:
  8837 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8838 ;; Tracked objects:
  8839 ;;		On entry : 0/0
  8840 ;;		On exit  : 0/0
  8841 ;;		Unchanged: 0/0
  8842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8843 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8844 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8845 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8846 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8847 ;;Total ram usage:        2 bytes
  8848 ;; Hardware stack levels used: 1
  8849 ;; Hardware stack levels required when called: 1
  8850 ;; This function calls:
  8851 ;;		_sendCharSerial4
  8852 ;; This function is called by:
  8853 ;;		_color_display
  8854 ;;		_color_predict
  8855 ;;		_check_color_reading
  8856 ;;		_voltage_display
  8857 ;; This function uses a non-reentrant model
  8858 ;;
  8859                           
  8860                           	psect	text37
  8861  004D7A                     __ptext37:
  8862                           	callstack 0
  8863  004D7A                     _sendStringSerial4:
  8864                           	callstack 28
  8865  004D7A                     
  8866                           ;serial.c: 38:     while(*string != 0){
  8867  004D7A  EFC8  F026         	goto	l4116
  8868  004D7E                     l4112:
  8869                           
  8870                           ;serial.c: 39:   sendCharSerial4(*string++);}
  8871  004D7E  C002  FFD9         	movff	sendStringSerial4@string,fsr2l
  8872  004D82  C003  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  8873  004D86  50DF               	movf	indf2,w,c
  8874  004D88  EC8B  F027         	call	_sendCharSerial4
  8875  004D8C  4A02               	infsnz	sendStringSerial4@string^0,f,c
  8876  004D8E  2A03               	incf	(sendStringSerial4@string+1)^0,f,c
  8877  004D90                     l4116:
  8878                           
  8879                           ;serial.c: 38:     while(*string != 0){
  8880  004D90  C002  FFD9         	movff	sendStringSerial4@string,fsr2l
  8881  004D94  C003  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  8882  004D98  50DF               	movf	indf2,w,c
  8883  004D9A  A4D8               	btfss	status,2,c
  8884  004D9C  EFD2  F026         	goto	u3991
  8885  004DA0  EFD4  F026         	goto	u3990
  8886  004DA4                     u3991:
  8887  004DA4  EFBF  F026         	goto	l4112
  8888  004DA8                     u3990:
  8889  004DA8  0012               	return		;funcret
  8890  004DAA                     __end_of_sendStringSerial4:
  8891                           	callstack 0
  8892                           
  8893 ;; *************** function _sendCharSerial4 *****************
  8894 ;; Defined at:
  8895 ;;		line 29 in file "serial.c"
  8896 ;; Parameters:    Size  Location     Type
  8897 ;;  charToSend      1    wreg     unsigned char 
  8898 ;; Auto vars:     Size  Location     Type
  8899 ;;  charToSend      1    0[COMRAM] unsigned char 
  8900 ;; Return value:  Size  Location     Type
  8901 ;;                  1    wreg      void 
  8902 ;; Registers used:
  8903 ;;		wreg
  8904 ;; Tracked objects:
  8905 ;;		On entry : 0/0
  8906 ;;		On exit  : 0/0
  8907 ;;		Unchanged: 0/0
  8908 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8909 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8910 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8911 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8912 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8913 ;;Total ram usage:        1 bytes
  8914 ;; Hardware stack levels used: 1
  8915 ;; This function calls:
  8916 ;;		Nothing
  8917 ;; This function is called by:
  8918 ;;		_sendStringSerial4
  8919 ;; This function uses a non-reentrant model
  8920 ;;
  8921                           
  8922                           	psect	text38
  8923  004F16                     __ptext38:
  8924                           	callstack 0
  8925  004F16                     _sendCharSerial4:
  8926                           	callstack 28
  8927                           
  8928                           ;incstack = 0
  8929                           ;sendCharSerial4@charToSend stored from wreg
  8930  004F16  6E01               	movwf	sendCharSerial4@charToSend^0,c
  8931  004F18                     l421:
  8932  004F18  010E               	movlb	14	; () banked
  8933  004F1A  A537               	btfss	55,2,b	;volatile
  8934  004F1C  EF92  F027         	goto	u3811
  8935  004F20  EF94  F027         	goto	u3810
  8936  004F24                     u3811:
  8937  004F24  EF8C  F027         	goto	l421
  8938  004F28                     u3810:
  8939  004F28                     
  8940                           ; BSR set to: 14
  8941                           ;serial.c: 31:     TX4REG = charToSend;
  8942  004F28  C001  FEE4         	movff	sendCharSerial4@charToSend,3812	;volatile
  8943  004F2C                     
  8944                           ; BSR set to: 14
  8945  004F2C  0012               	return		;funcret
  8946  004F2E                     __end_of_sendCharSerial4:
  8947                           	callstack 0
  8948                           
  8949 ;; *************** function _LED_C *****************
  8950 ;; Defined at:
  8951 ;;		line 109 in file "color.c"
  8952 ;; Parameters:    Size  Location     Type
  8953 ;;		None
  8954 ;; Auto vars:     Size  Location     Type
  8955 ;;		None
  8956 ;; Return value:  Size  Location     Type
  8957 ;;                  1    wreg      void 
  8958 ;; Registers used:
  8959 ;;		wreg
  8960 ;; Tracked objects:
  8961 ;;		On entry : 0/0
  8962 ;;		On exit  : 0/0
  8963 ;;		Unchanged: 0/0
  8964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8965 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8966 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8967 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8968 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8969 ;;Total ram usage:        2 bytes
  8970 ;; Hardware stack levels used: 1
  8971 ;; This function calls:
  8972 ;;		Nothing
  8973 ;; This function is called by:
  8974 ;;		_color_data_collection
  8975 ;;		_distance_measure
  8976 ;;		_main
  8977 ;; This function uses a non-reentrant model
  8978 ;;
  8979                           
  8980                           	psect	text39
  8981  004E22                     __ptext39:
  8982                           	callstack 0
  8983  004E22                     _LED_C:
  8984                           	callstack 29
  8985  004E22                     
  8986                           ;color.c: 111:     LATGbits.LATG1 = 1;
  8987  004E22  827F               	bsf	127,1,c	;volatile
  8988                           
  8989                           ;color.c: 112:     LATFbits.LATF7 = 1;
  8990  004E24  8E7E               	bsf	126,7,c	;volatile
  8991                           
  8992                           ;color.c: 113:     LATAbits.LATA4 = 1;
  8993  004E26  8879               	bsf	121,4,c	;volatile
  8994  004E28                     
  8995                           ;color.c: 114:     _delay((unsigned long)((50)*(64000000/4000.0)));
  8996  004E28  0E05               	movlw	5
  8997  004E2A  6E02               	movwf	(??_LED_C+1)^0,c
  8998  004E2C  0E0F               	movlw	15
  8999  004E2E  6E01               	movwf	??_LED_C^0,c
  9000  004E30  0EF1               	movlw	241
  9001  004E32                     u5217:
  9002  004E32  2EE8               	decfsz	wreg,f,c
  9003  004E34  D7FE               	bra	u5217
  9004  004E36  2E01               	decfsz	??_LED_C^0,f,c
  9005  004E38  D7FC               	bra	u5217
  9006  004E3A  2E02               	decfsz	(??_LED_C+1)^0,f,c
  9007  004E3C  D7FA               	bra	u5217
  9008  004E3E  F000               	nop	
  9009  004E40  0012               	return		;funcret
  9010  004E42                     __end_of_LED_C:
  9011                           	callstack 0
  9012                           
  9013 ;; *************** function _color_click_init *****************
  9014 ;; Defined at:
  9015 ;;		line 12 in file "color.c"
  9016 ;; Parameters:    Size  Location     Type
  9017 ;;		None
  9018 ;; Auto vars:     Size  Location     Type
  9019 ;;		None
  9020 ;; Return value:  Size  Location     Type
  9021 ;;                  1    wreg      void 
  9022 ;; Registers used:
  9023 ;;		wreg, status,2, status,0, cstack
  9024 ;; Tracked objects:
  9025 ;;		On entry : 0/0
  9026 ;;		On exit  : 0/0
  9027 ;;		Unchanged: 0/0
  9028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9029 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9030 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9031 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9032 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9033 ;;Total ram usage:        1 bytes
  9034 ;; Hardware stack levels used: 1
  9035 ;; Hardware stack levels required when called: 3
  9036 ;; This function calls:
  9037 ;;		_I2C_2_Master_Init
  9038 ;;		_color_writetoaddr
  9039 ;; This function is called by:
  9040 ;;		_main
  9041 ;; This function uses a non-reentrant model
  9042 ;;
  9043                           
  9044                           	psect	text40
  9045  004D46                     __ptext40:
  9046                           	callstack 0
  9047  004D46                     _color_click_init:
  9048                           	callstack 27
  9049  004D46                     
  9050                           ;color.c: 15:     I2C_2_Master_Init();
  9051  004D46  ECD5  F026         	call	_I2C_2_Master_Init	;wreg free
  9052  004D4A                     
  9053                           ;color.c: 18:   color_writetoaddr(0x00, 0x01);
  9054  004D4A  0E01               	movlw	1
  9055  004D4C  6E03               	movwf	color_writetoaddr@value^0,c
  9056  004D4E  0E00               	movlw	0
  9057  004D50  EC21  F027         	call	_color_writetoaddr
  9058  004D54                     
  9059                           ;color.c: 19:     _delay((unsigned long)((3)*(64000000/4000.0)));
  9060  004D54  0E3F               	movlw	63
  9061  004D56  6E05               	movwf	??_color_click_init^0,c
  9062  004D58  0E55               	movlw	85
  9063  004D5A                     u5227:
  9064  004D5A  2EE8               	decfsz	wreg,f,c
  9065  004D5C  D7FE               	bra	u5227
  9066  004D5E  2E05               	decfsz	??_color_click_init^0,f,c
  9067  004D60  D7FC               	bra	u5227
  9068  004D62  F000               	nop	
  9069  004D64                     
  9070                           ;color.c: 22:  color_writetoaddr(0x00, 0x03);
  9071  004D64  0E03               	movlw	3
  9072  004D66  6E03               	movwf	color_writetoaddr@value^0,c
  9073  004D68  0E00               	movlw	0
  9074  004D6A  EC21  F027         	call	_color_writetoaddr
  9075  004D6E                     
  9076                           ;color.c: 25:  color_writetoaddr(0x01, 0xD5);
  9077  004D6E  0ED5               	movlw	213
  9078  004D70  6E03               	movwf	color_writetoaddr@value^0,c
  9079  004D72  0E01               	movlw	1
  9080  004D74  EC21  F027         	call	_color_writetoaddr
  9081  004D78  0012               	return		;funcret
  9082  004D7A                     __end_of_color_click_init:
  9083                           	callstack 0
  9084                           
  9085 ;; *************** function _color_writetoaddr *****************
  9086 ;; Defined at:
  9087 ;;		line 28 in file "color.c"
  9088 ;; Parameters:    Size  Location     Type
  9089 ;;  address         1    wreg     unsigned char 
  9090 ;;  value           1    2[COMRAM] unsigned char 
  9091 ;; Auto vars:     Size  Location     Type
  9092 ;;  address         1    3[COMRAM] unsigned char 
  9093 ;; Return value:  Size  Location     Type
  9094 ;;                  1    wreg      void 
  9095 ;; Registers used:
  9096 ;;		wreg, status,2, status,0, cstack
  9097 ;; Tracked objects:
  9098 ;;		On entry : 0/0
  9099 ;;		On exit  : 0/0
  9100 ;;		Unchanged: 0/0
  9101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9102 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9103 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9104 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9105 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9106 ;;Total ram usage:        2 bytes
  9107 ;; Hardware stack levels used: 1
  9108 ;; Hardware stack levels required when called: 2
  9109 ;; This function calls:
  9110 ;;		_I2C_2_Master_Start
  9111 ;;		_I2C_2_Master_Stop
  9112 ;;		_I2C_2_Master_Write
  9113 ;; This function is called by:
  9114 ;;		_color_click_init
  9115 ;; This function uses a non-reentrant model
  9116 ;;
  9117                           
  9118                           	psect	text41
  9119  004E42                     __ptext41:
  9120                           	callstack 0
  9121  004E42                     _color_writetoaddr:
  9122                           	callstack 27
  9123                           
  9124                           ;incstack = 0
  9125                           ;color_writetoaddr@address stored from wreg
  9126  004E42  6E04               	movwf	color_writetoaddr@address^0,c
  9127  004E44                     
  9128                           ;color.c: 29:     I2C_2_Master_Start();
  9129  004E44  ECA2  F027         	call	_I2C_2_Master_Start	;wreg free
  9130                           
  9131                           ;color.c: 30:     I2C_2_Master_Write(0x52 | 0x00);
  9132  004E48  0E52               	movlw	82
  9133  004E4A  EC97  F027         	call	_I2C_2_Master_Write
  9134                           
  9135                           ;color.c: 31:     I2C_2_Master_Write(0x80 | address);
  9136  004E4E  5004               	movf	color_writetoaddr@address^0,w,c
  9137  004E50  0980               	iorlw	128
  9138  004E52  EC97  F027         	call	_I2C_2_Master_Write
  9139                           
  9140                           ;color.c: 32:     I2C_2_Master_Write(value);
  9141  004E56  5003               	movf	color_writetoaddr@value^0,w,c
  9142  004E58  EC97  F027         	call	_I2C_2_Master_Write
  9143                           
  9144                           ;color.c: 33:     I2C_2_Master_Stop();
  9145  004E5C  EC9D  F027         	call	_I2C_2_Master_Stop	;wreg free
  9146  004E60  0012               	return		;funcret
  9147  004E62                     __end_of_color_writetoaddr:
  9148                           	callstack 0
  9149                           
  9150 ;; *************** function _I2C_2_Master_Init *****************
  9151 ;; Defined at:
  9152 ;;		line 4 in file "i2c.c"
  9153 ;; Parameters:    Size  Location     Type
  9154 ;;		None
  9155 ;; Auto vars:     Size  Location     Type
  9156 ;;		None
  9157 ;; Return value:  Size  Location     Type
  9158 ;;                  1    wreg      void 
  9159 ;; Registers used:
  9160 ;;		wreg, status,2
  9161 ;; Tracked objects:
  9162 ;;		On entry : 0/0
  9163 ;;		On exit  : 0/0
  9164 ;;		Unchanged: 0/0
  9165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9166 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9167 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9168 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9169 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9170 ;;Total ram usage:        0 bytes
  9171 ;; Hardware stack levels used: 1
  9172 ;; This function calls:
  9173 ;;		Nothing
  9174 ;; This function is called by:
  9175 ;;		_color_click_init
  9176 ;;		_main
  9177 ;; This function uses a non-reentrant model
  9178 ;;
  9179                           
  9180                           	psect	text42
  9181  004DAA                     __ptext42:
  9182                           	callstack 0
  9183  004DAA                     _I2C_2_Master_Init:
  9184                           	callstack 29
  9185  004DAA                     
  9186                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  9187  004DAA  010E               	movlb	14	; () banked
  9188  004DAC  51D9               	movf	217,w,b	;volatile
  9189  004DAE  0BF0               	andlw	-16
  9190  004DB0  0908               	iorlw	8
  9191  004DB2  6FD9               	movwf	217,b	;volatile
  9192  004DB4                     
  9193                           ; BSR set to: 14
  9194                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  9195  004DB4  8BD9               	bsf	217,5,b	;volatile
  9196                           
  9197                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  9198  004DB6  0E9F               	movlw	159
  9199  004DB8  6FD6               	movwf	214,b	;volatile
  9200  004DBA                     
  9201                           ; BSR set to: 14
  9202                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  9203  004DBA  8A84               	bsf	132,5,c	;volatile
  9204  004DBC                     
  9205                           ; BSR set to: 14
  9206                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  9207  004DBC  8C84               	bsf	132,6,c	;volatile
  9208  004DBE                     
  9209                           ; BSR set to: 14
  9210                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  9211  004DBE  9BA7               	bcf	167,5,b	;volatile
  9212  004DC0                     
  9213                           ; BSR set to: 14
  9214                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  9215  004DC0  9DA7               	bcf	167,6,b	;volatile
  9216                           
  9217                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  9218  004DC2  0E1D               	movlw	29
  9219  004DC4  6F1D               	movwf	29,b	;volatile
  9220                           
  9221                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  9222  004DC6  0E1E               	movlw	30
  9223  004DC8  6F1C               	movwf	28,b	;volatile
  9224                           
  9225                           ;i2c.c: 18:   RD5PPS=0x1C;
  9226  004DCA  0E1C               	movlw	28
  9227  004DCC  6F6F               	movwf	111,b	;volatile
  9228                           
  9229                           ;i2c.c: 19:   RD6PPS=0x1B;
  9230  004DCE  0E1B               	movlw	27
  9231  004DD0  6F70               	movwf	112,b	;volatile
  9232  004DD2                     
  9233                           ; BSR set to: 14
  9234  004DD2  0012               	return		;funcret
  9235  004DD4                     __end_of_I2C_2_Master_Init:
  9236                           	callstack 0
  9237                           
  9238 ;; *************** function _calibrate_white *****************
  9239 ;; Defined at:
  9240 ;;		line 206 in file "color.c"
  9241 ;; Parameters:    Size  Location     Type
  9242 ;;  w               2   11[COMRAM] PTR struct white_card
  9243 ;;		 -> main@white(20), 
  9244 ;; Auto vars:     Size  Location     Type
  9245 ;;		None
  9246 ;; Return value:  Size  Location     Type
  9247 ;;                  1    wreg      void 
  9248 ;; Registers used:
  9249 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9250 ;; Tracked objects:
  9251 ;;		On entry : 0/0
  9252 ;;		On exit  : 0/0
  9253 ;;		Unchanged: 0/0
  9254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9255 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9256 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9257 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9258 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9259 ;;Total ram usage:        4 bytes
  9260 ;; Hardware stack levels used: 1
  9261 ;; Hardware stack levels required when called: 3
  9262 ;; This function calls:
  9263 ;;		_LED_B
  9264 ;;		_LED_G
  9265 ;;		_LED_R
  9266 ;;		_color_read_Blue
  9267 ;;		_color_read_Clear
  9268 ;;		_color_read_Green
  9269 ;;		_color_read_Red
  9270 ;; This function is called by:
  9271 ;;		_main
  9272 ;; This function uses a non-reentrant model
  9273 ;;
  9274                           
  9275                           	psect	text43
  9276  003A12                     __ptext43:
  9277                           	callstack 0
  9278  003A12                     _calibrate_white:
  9279                           	callstack 27
  9280  003A12                     
  9281                           ;color.c: 206: void calibrate_white(struct white_card *w);color.c: 207: {;color.c: 208: 
      +                              LED_R();
  9282  003A12  EC31  F027         	call	_LED_R	;wreg free
  9283  003A16                     
  9284                           ;color.c: 210:     w->RR = color_read_Red(); w->RG = color_read_Green(); w->RB = color_r
      +                          ead_Blue();
  9285  003A16  EC65  F024         	call	_color_read_Red	;wreg free
  9286  003A1A  C00C  FFD9         	movff	calibrate_white@w,fsr2l
  9287  003A1E  C00D  FFDA         	movff	calibrate_white@w+1,fsr2h
  9288  003A22  C005  FFDE         	movff	?_color_read_Red,postinc2
  9289  003A26  C006  FFDD         	movff	?_color_read_Red+1,postdec2
  9290  003A2A  EC8D  F024         	call	_color_read_Green	;wreg free
  9291  003A2E  EE20 F002          	lfsr	2,2
  9292  003A32  500C               	movf	calibrate_white@w^0,w,c
  9293  003A34  26D9               	addwf	fsr2l,f,c
  9294  003A36  500D               	movf	(calibrate_white@w+1)^0,w,c
  9295  003A38  22DA               	addwfc	fsr2h,f,c
  9296  003A3A  C005  FFDE         	movff	?_color_read_Green,postinc2
  9297  003A3E  C006  FFDD         	movff	?_color_read_Green+1,postdec2
  9298  003A42  ECDD  F024         	call	_color_read_Blue	;wreg free
  9299  003A46  EE20 F004          	lfsr	2,4
  9300  003A4A  500C               	movf	calibrate_white@w^0,w,c
  9301  003A4C  26D9               	addwf	fsr2l,f,c
  9302  003A4E  500D               	movf	(calibrate_white@w+1)^0,w,c
  9303  003A50  22DA               	addwfc	fsr2h,f,c
  9304  003A52  C005  FFDE         	movff	?_color_read_Blue,postinc2
  9305  003A56  C006  FFDD         	movff	?_color_read_Blue+1,postdec2
  9306  003A5A                     
  9307                           ;color.c: 211:     _delay((unsigned long)((100)*(64000000/4000.0)));
  9308  003A5A  0E09               	movlw	9
  9309  003A5C  6E0F               	movwf	(??_calibrate_white+1)^0,c
  9310  003A5E  0E1E               	movlw	30
  9311  003A60  6E0E               	movwf	??_calibrate_white^0,c
  9312  003A62  0EE4               	movlw	228
  9313  003A64                     u5237:
  9314  003A64  2EE8               	decfsz	wreg,f,c
  9315  003A66  D7FE               	bra	u5237
  9316  003A68  2E0E               	decfsz	??_calibrate_white^0,f,c
  9317  003A6A  D7FC               	bra	u5237
  9318  003A6C  2E0F               	decfsz	(??_calibrate_white+1)^0,f,c
  9319  003A6E  D7FA               	bra	u5237
  9320  003A70  D000               	nop2	
  9321  003A72                     
  9322                           ;color.c: 213:     LED_G();
  9323  003A72  EC41  F027         	call	_LED_G	;wreg free
  9324  003A76                     
  9325                           ;color.c: 215:     w->GR = color_read_Red(); w->GG = color_read_Green(); w->GB = color_r
      +                          ead_Blue();
  9326  003A76  EC65  F024         	call	_color_read_Red	;wreg free
  9327  003A7A  EE20 F006          	lfsr	2,6
  9328  003A7E  500C               	movf	calibrate_white@w^0,w,c
  9329  003A80  26D9               	addwf	fsr2l,f,c
  9330  003A82  500D               	movf	(calibrate_white@w+1)^0,w,c
  9331  003A84  22DA               	addwfc	fsr2h,f,c
  9332  003A86  C005  FFDE         	movff	?_color_read_Red,postinc2
  9333  003A8A  C006  FFDD         	movff	?_color_read_Red+1,postdec2
  9334  003A8E  EC8D  F024         	call	_color_read_Green	;wreg free
  9335  003A92  EE20 F008          	lfsr	2,8
  9336  003A96  500C               	movf	calibrate_white@w^0,w,c
  9337  003A98  26D9               	addwf	fsr2l,f,c
  9338  003A9A  500D               	movf	(calibrate_white@w+1)^0,w,c
  9339  003A9C  22DA               	addwfc	fsr2h,f,c
  9340  003A9E  C005  FFDE         	movff	?_color_read_Green,postinc2
  9341  003AA2  C006  FFDD         	movff	?_color_read_Green+1,postdec2
  9342  003AA6  ECDD  F024         	call	_color_read_Blue	;wreg free
  9343  003AAA  EE20 F00A          	lfsr	2,10
  9344  003AAE  500C               	movf	calibrate_white@w^0,w,c
  9345  003AB0  26D9               	addwf	fsr2l,f,c
  9346  003AB2  500D               	movf	(calibrate_white@w+1)^0,w,c
  9347  003AB4  22DA               	addwfc	fsr2h,f,c
  9348  003AB6  C005  FFDE         	movff	?_color_read_Blue,postinc2
  9349  003ABA  C006  FFDD         	movff	?_color_read_Blue+1,postdec2
  9350  003ABE                     
  9351                           ;color.c: 216:     w->GC = color_read_Clear();
  9352  003ABE  ECB5  F024         	call	_color_read_Clear	;wreg free
  9353  003AC2  EE20 F012          	lfsr	2,18
  9354  003AC6  500C               	movf	calibrate_white@w^0,w,c
  9355  003AC8  26D9               	addwf	fsr2l,f,c
  9356  003ACA  500D               	movf	(calibrate_white@w+1)^0,w,c
  9357  003ACC  22DA               	addwfc	fsr2h,f,c
  9358  003ACE  C005  FFDE         	movff	?_color_read_Clear,postinc2
  9359  003AD2  C006  FFDD         	movff	?_color_read_Clear+1,postdec2
  9360  003AD6                     
  9361                           ;color.c: 217:     _delay((unsigned long)((100)*(64000000/4000.0)));
  9362  003AD6  0E09               	movlw	9
  9363  003AD8  6E0F               	movwf	(??_calibrate_white+1)^0,c
  9364  003ADA  0E1E               	movlw	30
  9365  003ADC  6E0E               	movwf	??_calibrate_white^0,c
  9366  003ADE  0EE4               	movlw	228
  9367  003AE0                     u5247:
  9368  003AE0  2EE8               	decfsz	wreg,f,c
  9369  003AE2  D7FE               	bra	u5247
  9370  003AE4  2E0E               	decfsz	??_calibrate_white^0,f,c
  9371  003AE6  D7FC               	bra	u5247
  9372  003AE8  2E0F               	decfsz	(??_calibrate_white+1)^0,f,c
  9373  003AEA  D7FA               	bra	u5247
  9374  003AEC  D000               	nop2	
  9375  003AEE                     
  9376                           ;color.c: 219:     LED_B();
  9377  003AEE  EC51  F027         	call	_LED_B	;wreg free
  9378  003AF2                     
  9379                           ;color.c: 221:     w->BR = color_read_Red(); w->BG = color_read_Green(); w->BB = color_r
      +                          ead_Blue();
  9380  003AF2  EC65  F024         	call	_color_read_Red	;wreg free
  9381  003AF6  EE20 F00C          	lfsr	2,12
  9382  003AFA  500C               	movf	calibrate_white@w^0,w,c
  9383  003AFC  26D9               	addwf	fsr2l,f,c
  9384  003AFE  500D               	movf	(calibrate_white@w+1)^0,w,c
  9385  003B00  22DA               	addwfc	fsr2h,f,c
  9386  003B02  C005  FFDE         	movff	?_color_read_Red,postinc2
  9387  003B06  C006  FFDD         	movff	?_color_read_Red+1,postdec2
  9388  003B0A  EC8D  F024         	call	_color_read_Green	;wreg free
  9389  003B0E  EE20 F00E          	lfsr	2,14
  9390  003B12  500C               	movf	calibrate_white@w^0,w,c
  9391  003B14  26D9               	addwf	fsr2l,f,c
  9392  003B16  500D               	movf	(calibrate_white@w+1)^0,w,c
  9393  003B18  22DA               	addwfc	fsr2h,f,c
  9394  003B1A  C005  FFDE         	movff	?_color_read_Green,postinc2
  9395  003B1E  C006  FFDD         	movff	?_color_read_Green+1,postdec2
  9396  003B22  ECDD  F024         	call	_color_read_Blue	;wreg free
  9397  003B26  EE20 F010          	lfsr	2,16
  9398  003B2A  500C               	movf	calibrate_white@w^0,w,c
  9399  003B2C  26D9               	addwf	fsr2l,f,c
  9400  003B2E  500D               	movf	(calibrate_white@w+1)^0,w,c
  9401  003B30  22DA               	addwfc	fsr2h,f,c
  9402  003B32  C005  FFDE         	movff	?_color_read_Blue,postinc2
  9403  003B36  C006  FFDD         	movff	?_color_read_Blue+1,postdec2
  9404  003B3A                     
  9405                           ;color.c: 222:     _delay((unsigned long)((100)*(64000000/4000.0)));
  9406  003B3A  0E09               	movlw	9
  9407  003B3C  6E0F               	movwf	(??_calibrate_white+1)^0,c
  9408  003B3E  0E1E               	movlw	30
  9409  003B40  6E0E               	movwf	??_calibrate_white^0,c
  9410  003B42  0EE4               	movlw	228
  9411  003B44                     u5257:
  9412  003B44  2EE8               	decfsz	wreg,f,c
  9413  003B46  D7FE               	bra	u5257
  9414  003B48  2E0E               	decfsz	??_calibrate_white^0,f,c
  9415  003B4A  D7FC               	bra	u5257
  9416  003B4C  2E0F               	decfsz	(??_calibrate_white+1)^0,f,c
  9417  003B4E  D7FA               	bra	u5257
  9418  003B50  D000               	nop2	
  9419  003B52  0012               	return		;funcret
  9420  003B54                     __end_of_calibrate_white:
  9421                           	callstack 0
  9422                           
  9423 ;; *************** function _color_read_Red *****************
  9424 ;; Defined at:
  9425 ;;		line 36 in file "color.c"
  9426 ;; Parameters:    Size  Location     Type
  9427 ;;		None
  9428 ;; Auto vars:     Size  Location     Type
  9429 ;;  tmp             2    9[COMRAM] unsigned int 
  9430 ;; Return value:  Size  Location     Type
  9431 ;;                  2    4[COMRAM] unsigned int 
  9432 ;; Registers used:
  9433 ;;		wreg, status,2, status,0, cstack
  9434 ;; Tracked objects:
  9435 ;;		On entry : 0/0
  9436 ;;		On exit  : 0/0
  9437 ;;		Unchanged: 0/0
  9438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9439 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9440 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9441 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9442 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9443 ;;Total ram usage:        7 bytes
  9444 ;; Hardware stack levels used: 1
  9445 ;; Hardware stack levels required when called: 2
  9446 ;; This function calls:
  9447 ;;		_I2C_2_Master_Read
  9448 ;;		_I2C_2_Master_RepStart
  9449 ;;		_I2C_2_Master_Start
  9450 ;;		_I2C_2_Master_Stop
  9451 ;;		_I2C_2_Master_Write
  9452 ;; This function is called by:
  9453 ;;		_read_color
  9454 ;;		_calibrate_white
  9455 ;; This function uses a non-reentrant model
  9456 ;;
  9457                           
  9458                           	psect	text44
  9459  0048CA                     __ptext44:
  9460                           	callstack 0
  9461  0048CA                     _color_read_Red:
  9462                           	callstack 25
  9463  0048CA                     
  9464                           ;color.c: 38:  unsigned int tmp;;color.c: 39:  I2C_2_Master_Start();
  9465  0048CA  ECA2  F027         	call	_I2C_2_Master_Start	;wreg free
  9466                           
  9467                           ;color.c: 40:  I2C_2_Master_Write(0x52 | 0x00);
  9468  0048CE  0E52               	movlw	82
  9469  0048D0  EC97  F027         	call	_I2C_2_Master_Write
  9470                           
  9471                           ;color.c: 41:  I2C_2_Master_Write(0xA0 | 0x16);
  9472  0048D4  0EB6               	movlw	182
  9473  0048D6  EC97  F027         	call	_I2C_2_Master_Write
  9474                           
  9475                           ;color.c: 42:  I2C_2_Master_RepStart();
  9476  0048DA  ECA7  F027         	call	_I2C_2_Master_RepStart	;wreg free
  9477                           
  9478                           ;color.c: 43:  I2C_2_Master_Write(0x52 | 0x01);
  9479  0048DE  0E53               	movlw	83
  9480  0048E0  EC97  F027         	call	_I2C_2_Master_Write
  9481                           
  9482                           ;color.c: 44:  tmp=I2C_2_Master_Read(1);
  9483  0048E4  0E01               	movlw	1
  9484  0048E6  EC90  F025         	call	_I2C_2_Master_Read
  9485  0048EA  6E07               	movwf	??_color_read_Red^0,c
  9486  0048EC  5007               	movf	??_color_read_Red^0,w,c
  9487  0048EE  6E0A               	movwf	color_read_Red@tmp^0,c
  9488  0048F0  6A0B               	clrf	(color_read_Red@tmp+1)^0,c
  9489                           
  9490                           ;color.c: 45:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  9491  0048F2  0E00               	movlw	0
  9492  0048F4  EC90  F025         	call	_I2C_2_Master_Read
  9493  0048F8  6E07               	movwf	??_color_read_Red^0,c
  9494  0048FA  5007               	movf	??_color_read_Red^0,w,c
  9495  0048FC  6E09               	movwf	(??_color_read_Red+2)^0,c
  9496  0048FE  6A08               	clrf	(??_color_read_Red+1)^0,c
  9497  004900  500A               	movf	color_read_Red@tmp^0,w,c
  9498  004902  1008               	iorwf	(??_color_read_Red+1)^0,w,c
  9499  004904  6E0A               	movwf	color_read_Red@tmp^0,c
  9500  004906  500B               	movf	(color_read_Red@tmp+1)^0,w,c
  9501  004908  1009               	iorwf	(??_color_read_Red+2)^0,w,c
  9502  00490A  6E0B               	movwf	(color_read_Red@tmp+1)^0,c
  9503                           
  9504                           ;color.c: 46:  I2C_2_Master_Stop();
  9505  00490C  EC9D  F027         	call	_I2C_2_Master_Stop	;wreg free
  9506  004910                     
  9507                           ;color.c: 47:  return tmp;
  9508  004910  C00A  F005         	movff	color_read_Red@tmp,?_color_read_Red
  9509  004914  C00B  F006         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  9510  004918  0012               	return		;funcret
  9511  00491A                     __end_of_color_read_Red:
  9512                           	callstack 0
  9513                           
  9514 ;; *************** function _color_read_Green *****************
  9515 ;; Defined at:
  9516 ;;		line 64 in file "color.c"
  9517 ;; Parameters:    Size  Location     Type
  9518 ;;		None
  9519 ;; Auto vars:     Size  Location     Type
  9520 ;;  tmp             2    9[COMRAM] unsigned int 
  9521 ;; Return value:  Size  Location     Type
  9522 ;;                  2    4[COMRAM] unsigned int 
  9523 ;; Registers used:
  9524 ;;		wreg, status,2, status,0, cstack
  9525 ;; Tracked objects:
  9526 ;;		On entry : 0/0
  9527 ;;		On exit  : 0/0
  9528 ;;		Unchanged: 0/0
  9529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9530 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9531 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9532 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9533 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9534 ;;Total ram usage:        7 bytes
  9535 ;; Hardware stack levels used: 1
  9536 ;; Hardware stack levels required when called: 2
  9537 ;; This function calls:
  9538 ;;		_I2C_2_Master_Read
  9539 ;;		_I2C_2_Master_RepStart
  9540 ;;		_I2C_2_Master_Start
  9541 ;;		_I2C_2_Master_Stop
  9542 ;;		_I2C_2_Master_Write
  9543 ;; This function is called by:
  9544 ;;		_read_color
  9545 ;;		_calibrate_white
  9546 ;; This function uses a non-reentrant model
  9547 ;;
  9548                           
  9549                           	psect	text45
  9550  00491A                     __ptext45:
  9551                           	callstack 0
  9552  00491A                     _color_read_Green:
  9553                           	callstack 25
  9554  00491A                     
  9555                           ;color.c: 66:  unsigned int tmp;;color.c: 67:  I2C_2_Master_Start();
  9556  00491A  ECA2  F027         	call	_I2C_2_Master_Start	;wreg free
  9557                           
  9558                           ;color.c: 68:  I2C_2_Master_Write(0x52 | 0x00);
  9559  00491E  0E52               	movlw	82
  9560  004920  EC97  F027         	call	_I2C_2_Master_Write
  9561                           
  9562                           ;color.c: 69:  I2C_2_Master_Write(0xA0 | 0x18);
  9563  004924  0EB8               	movlw	184
  9564  004926  EC97  F027         	call	_I2C_2_Master_Write
  9565                           
  9566                           ;color.c: 70:  I2C_2_Master_RepStart();
  9567  00492A  ECA7  F027         	call	_I2C_2_Master_RepStart	;wreg free
  9568                           
  9569                           ;color.c: 71:  I2C_2_Master_Write(0x52 | 0x01);
  9570  00492E  0E53               	movlw	83
  9571  004930  EC97  F027         	call	_I2C_2_Master_Write
  9572                           
  9573                           ;color.c: 72:  tmp=I2C_2_Master_Read(1);
  9574  004934  0E01               	movlw	1
  9575  004936  EC90  F025         	call	_I2C_2_Master_Read
  9576  00493A  6E07               	movwf	??_color_read_Green^0,c
  9577  00493C  5007               	movf	??_color_read_Green^0,w,c
  9578  00493E  6E0A               	movwf	color_read_Green@tmp^0,c
  9579  004940  6A0B               	clrf	(color_read_Green@tmp+1)^0,c
  9580                           
  9581                           ;color.c: 73:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  9582  004942  0E00               	movlw	0
  9583  004944  EC90  F025         	call	_I2C_2_Master_Read
  9584  004948  6E07               	movwf	??_color_read_Green^0,c
  9585  00494A  5007               	movf	??_color_read_Green^0,w,c
  9586  00494C  6E09               	movwf	(??_color_read_Green+2)^0,c
  9587  00494E  6A08               	clrf	(??_color_read_Green+1)^0,c
  9588  004950  500A               	movf	color_read_Green@tmp^0,w,c
  9589  004952  1008               	iorwf	(??_color_read_Green+1)^0,w,c
  9590  004954  6E0A               	movwf	color_read_Green@tmp^0,c
  9591  004956  500B               	movf	(color_read_Green@tmp+1)^0,w,c
  9592  004958  1009               	iorwf	(??_color_read_Green+2)^0,w,c
  9593  00495A  6E0B               	movwf	(color_read_Green@tmp+1)^0,c
  9594                           
  9595                           ;color.c: 74:  I2C_2_Master_Stop();
  9596  00495C  EC9D  F027         	call	_I2C_2_Master_Stop	;wreg free
  9597  004960                     
  9598                           ;color.c: 75:  return tmp;
  9599  004960  C00A  F005         	movff	color_read_Green@tmp,?_color_read_Green
  9600  004964  C00B  F006         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  9601  004968  0012               	return		;funcret
  9602  00496A                     __end_of_color_read_Green:
  9603                           	callstack 0
  9604                           
  9605 ;; *************** function _color_read_Clear *****************
  9606 ;; Defined at:
  9607 ;;		line 78 in file "color.c"
  9608 ;; Parameters:    Size  Location     Type
  9609 ;;		None
  9610 ;; Auto vars:     Size  Location     Type
  9611 ;;  tmp             2    9[COMRAM] unsigned int 
  9612 ;; Return value:  Size  Location     Type
  9613 ;;                  2    4[COMRAM] unsigned int 
  9614 ;; Registers used:
  9615 ;;		wreg, status,2, status,0, cstack
  9616 ;; Tracked objects:
  9617 ;;		On entry : 0/0
  9618 ;;		On exit  : 0/0
  9619 ;;		Unchanged: 0/0
  9620 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9621 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9622 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9623 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9624 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9625 ;;Total ram usage:        7 bytes
  9626 ;; Hardware stack levels used: 1
  9627 ;; Hardware stack levels required when called: 2
  9628 ;; This function calls:
  9629 ;;		_I2C_2_Master_Read
  9630 ;;		_I2C_2_Master_RepStart
  9631 ;;		_I2C_2_Master_Start
  9632 ;;		_I2C_2_Master_Stop
  9633 ;;		_I2C_2_Master_Write
  9634 ;; This function is called by:
  9635 ;;		_read_color
  9636 ;;		_calibrate_white
  9637 ;;		_distance_measure
  9638 ;; This function uses a non-reentrant model
  9639 ;;
  9640                           
  9641                           	psect	text46
  9642  00496A                     __ptext46:
  9643                           	callstack 0
  9644  00496A                     _color_read_Clear:
  9645                           	callstack 25
  9646  00496A                     
  9647                           ;color.c: 80:  unsigned int tmp;;color.c: 81:  I2C_2_Master_Start();
  9648  00496A  ECA2  F027         	call	_I2C_2_Master_Start	;wreg free
  9649                           
  9650                           ;color.c: 82:  I2C_2_Master_Write(0x52 | 0x00);
  9651  00496E  0E52               	movlw	82
  9652  004970  EC97  F027         	call	_I2C_2_Master_Write
  9653                           
  9654                           ;color.c: 83:  I2C_2_Master_Write(0xA0 | 0x14);
  9655  004974  0EB4               	movlw	180
  9656  004976  EC97  F027         	call	_I2C_2_Master_Write
  9657                           
  9658                           ;color.c: 84:  I2C_2_Master_RepStart();
  9659  00497A  ECA7  F027         	call	_I2C_2_Master_RepStart	;wreg free
  9660                           
  9661                           ;color.c: 85:  I2C_2_Master_Write(0x52 | 0x01);
  9662  00497E  0E53               	movlw	83
  9663  004980  EC97  F027         	call	_I2C_2_Master_Write
  9664                           
  9665                           ;color.c: 86:  tmp=I2C_2_Master_Read(1);
  9666  004984  0E01               	movlw	1
  9667  004986  EC90  F025         	call	_I2C_2_Master_Read
  9668  00498A  6E07               	movwf	??_color_read_Clear^0,c
  9669  00498C  5007               	movf	??_color_read_Clear^0,w,c
  9670  00498E  6E0A               	movwf	color_read_Clear@tmp^0,c
  9671  004990  6A0B               	clrf	(color_read_Clear@tmp+1)^0,c
  9672                           
  9673                           ;color.c: 87:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  9674  004992  0E00               	movlw	0
  9675  004994  EC90  F025         	call	_I2C_2_Master_Read
  9676  004998  6E07               	movwf	??_color_read_Clear^0,c
  9677  00499A  5007               	movf	??_color_read_Clear^0,w,c
  9678  00499C  6E09               	movwf	(??_color_read_Clear+2)^0,c
  9679  00499E  6A08               	clrf	(??_color_read_Clear+1)^0,c
  9680  0049A0  500A               	movf	color_read_Clear@tmp^0,w,c
  9681  0049A2  1008               	iorwf	(??_color_read_Clear+1)^0,w,c
  9682  0049A4  6E0A               	movwf	color_read_Clear@tmp^0,c
  9683  0049A6  500B               	movf	(color_read_Clear@tmp+1)^0,w,c
  9684  0049A8  1009               	iorwf	(??_color_read_Clear+2)^0,w,c
  9685  0049AA  6E0B               	movwf	(color_read_Clear@tmp+1)^0,c
  9686                           
  9687                           ;color.c: 88:  I2C_2_Master_Stop();
  9688  0049AC  EC9D  F027         	call	_I2C_2_Master_Stop	;wreg free
  9689  0049B0                     
  9690                           ;color.c: 89:  return tmp;
  9691  0049B0  C00A  F005         	movff	color_read_Clear@tmp,?_color_read_Clear
  9692  0049B4  C00B  F006         	movff	color_read_Clear@tmp+1,?_color_read_Clear+1
  9693  0049B8  0012               	return		;funcret
  9694  0049BA                     __end_of_color_read_Clear:
  9695                           	callstack 0
  9696                           
  9697 ;; *************** function _color_read_Blue *****************
  9698 ;; Defined at:
  9699 ;;		line 50 in file "color.c"
  9700 ;; Parameters:    Size  Location     Type
  9701 ;;		None
  9702 ;; Auto vars:     Size  Location     Type
  9703 ;;  tmp             2    9[COMRAM] unsigned int 
  9704 ;; Return value:  Size  Location     Type
  9705 ;;                  2    4[COMRAM] unsigned int 
  9706 ;; Registers used:
  9707 ;;		wreg, status,2, status,0, cstack
  9708 ;; Tracked objects:
  9709 ;;		On entry : 0/0
  9710 ;;		On exit  : 0/0
  9711 ;;		Unchanged: 0/0
  9712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9713 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9714 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9715 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9716 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9717 ;;Total ram usage:        7 bytes
  9718 ;; Hardware stack levels used: 1
  9719 ;; Hardware stack levels required when called: 2
  9720 ;; This function calls:
  9721 ;;		_I2C_2_Master_Read
  9722 ;;		_I2C_2_Master_RepStart
  9723 ;;		_I2C_2_Master_Start
  9724 ;;		_I2C_2_Master_Stop
  9725 ;;		_I2C_2_Master_Write
  9726 ;; This function is called by:
  9727 ;;		_read_color
  9728 ;;		_calibrate_white
  9729 ;; This function uses a non-reentrant model
  9730 ;;
  9731                           
  9732                           	psect	text47
  9733  0049BA                     __ptext47:
  9734                           	callstack 0
  9735  0049BA                     _color_read_Blue:
  9736                           	callstack 25
  9737  0049BA                     
  9738                           ;color.c: 52:  unsigned int tmp;;color.c: 53:  I2C_2_Master_Start();
  9739  0049BA  ECA2  F027         	call	_I2C_2_Master_Start	;wreg free
  9740                           
  9741                           ;color.c: 54:  I2C_2_Master_Write(0x52 | 0x00);
  9742  0049BE  0E52               	movlw	82
  9743  0049C0  EC97  F027         	call	_I2C_2_Master_Write
  9744                           
  9745                           ;color.c: 55:  I2C_2_Master_Write(0xA0 | 0x1A);
  9746  0049C4  0EBA               	movlw	186
  9747  0049C6  EC97  F027         	call	_I2C_2_Master_Write
  9748                           
  9749                           ;color.c: 56:  I2C_2_Master_RepStart();
  9750  0049CA  ECA7  F027         	call	_I2C_2_Master_RepStart	;wreg free
  9751                           
  9752                           ;color.c: 57:  I2C_2_Master_Write(0x52 | 0x01);
  9753  0049CE  0E53               	movlw	83
  9754  0049D0  EC97  F027         	call	_I2C_2_Master_Write
  9755                           
  9756                           ;color.c: 58:  tmp=I2C_2_Master_Read(1);
  9757  0049D4  0E01               	movlw	1
  9758  0049D6  EC90  F025         	call	_I2C_2_Master_Read
  9759  0049DA  6E07               	movwf	??_color_read_Blue^0,c
  9760  0049DC  5007               	movf	??_color_read_Blue^0,w,c
  9761  0049DE  6E0A               	movwf	color_read_Blue@tmp^0,c
  9762  0049E0  6A0B               	clrf	(color_read_Blue@tmp+1)^0,c
  9763                           
  9764                           ;color.c: 59:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  9765  0049E2  0E00               	movlw	0
  9766  0049E4  EC90  F025         	call	_I2C_2_Master_Read
  9767  0049E8  6E07               	movwf	??_color_read_Blue^0,c
  9768  0049EA  5007               	movf	??_color_read_Blue^0,w,c
  9769  0049EC  6E09               	movwf	(??_color_read_Blue+2)^0,c
  9770  0049EE  6A08               	clrf	(??_color_read_Blue+1)^0,c
  9771  0049F0  500A               	movf	color_read_Blue@tmp^0,w,c
  9772  0049F2  1008               	iorwf	(??_color_read_Blue+1)^0,w,c
  9773  0049F4  6E0A               	movwf	color_read_Blue@tmp^0,c
  9774  0049F6  500B               	movf	(color_read_Blue@tmp+1)^0,w,c
  9775  0049F8  1009               	iorwf	(??_color_read_Blue+2)^0,w,c
  9776  0049FA  6E0B               	movwf	(color_read_Blue@tmp+1)^0,c
  9777                           
  9778                           ;color.c: 60:  I2C_2_Master_Stop();
  9779  0049FC  EC9D  F027         	call	_I2C_2_Master_Stop	;wreg free
  9780  004A00                     
  9781                           ;color.c: 61:  return tmp;
  9782  004A00  C00A  F005         	movff	color_read_Blue@tmp,?_color_read_Blue
  9783  004A04  C00B  F006         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  9784  004A08  0012               	return		;funcret
  9785  004A0A                     __end_of_color_read_Blue:
  9786                           	callstack 0
  9787                           
  9788 ;; *************** function _I2C_2_Master_Write *****************
  9789 ;; Defined at:
  9790 ;;		line 45 in file "i2c.c"
  9791 ;; Parameters:    Size  Location     Type
  9792 ;;  data_byte       1    wreg     unsigned char 
  9793 ;; Auto vars:     Size  Location     Type
  9794 ;;  data_byte       1    1[COMRAM] unsigned char 
  9795 ;; Return value:  Size  Location     Type
  9796 ;;                  1    wreg      void 
  9797 ;; Registers used:
  9798 ;;		wreg, status,2, status,0, cstack
  9799 ;; Tracked objects:
  9800 ;;		On entry : 0/0
  9801 ;;		On exit  : 0/0
  9802 ;;		Unchanged: 0/0
  9803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9804 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9805 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9806 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9807 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9808 ;;Total ram usage:        1 bytes
  9809 ;; Hardware stack levels used: 1
  9810 ;; Hardware stack levels required when called: 1
  9811 ;; This function calls:
  9812 ;;		_I2C_2_Master_Idle
  9813 ;; This function is called by:
  9814 ;;		_color_writetoaddr
  9815 ;;		_color_read_Red
  9816 ;;		_color_read_Blue
  9817 ;;		_color_read_Green
  9818 ;;		_color_read_Clear
  9819 ;; This function uses a non-reentrant model
  9820 ;;
  9821                           
  9822                           	psect	text48
  9823  004F2E                     __ptext48:
  9824                           	callstack 0
  9825  004F2E                     _I2C_2_Master_Write:
  9826                           	callstack 25
  9827                           
  9828                           ;incstack = 0
  9829                           ;I2C_2_Master_Write@data_byte stored from wreg
  9830  004F2E  6E02               	movwf	I2C_2_Master_Write@data_byte^0,c
  9831  004F30                     
  9832                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  9833  004F30  ECEA  F026         	call	_I2C_2_Master_Idle	;wreg free
  9834  004F34                     
  9835                           ;i2c.c: 48:   SSP2BUF = data_byte;
  9836  004F34  C002  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  9837  004F38  0012               	return		;funcret
  9838  004F3A                     __end_of_I2C_2_Master_Write:
  9839                           	callstack 0
  9840                           
  9841 ;; *************** function _I2C_2_Master_Stop *****************
  9842 ;; Defined at:
  9843 ;;		line 39 in file "i2c.c"
  9844 ;; Parameters:    Size  Location     Type
  9845 ;;		None
  9846 ;; Auto vars:     Size  Location     Type
  9847 ;;		None
  9848 ;; Return value:  Size  Location     Type
  9849 ;;                  1    wreg      void 
  9850 ;; Registers used:
  9851 ;;		wreg, status,2, status,0, cstack
  9852 ;; Tracked objects:
  9853 ;;		On entry : 0/0
  9854 ;;		On exit  : 0/0
  9855 ;;		Unchanged: 0/0
  9856 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9857 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9858 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9859 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9860 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9861 ;;Total ram usage:        0 bytes
  9862 ;; Hardware stack levels used: 1
  9863 ;; Hardware stack levels required when called: 1
  9864 ;; This function calls:
  9865 ;;		_I2C_2_Master_Idle
  9866 ;; This function is called by:
  9867 ;;		_color_writetoaddr
  9868 ;;		_color_read_Red
  9869 ;;		_color_read_Blue
  9870 ;;		_color_read_Green
  9871 ;;		_color_read_Clear
  9872 ;; This function uses a non-reentrant model
  9873 ;;
  9874                           
  9875                           	psect	text49
  9876  004F3A                     __ptext49:
  9877                           	callstack 0
  9878  004F3A                     _I2C_2_Master_Stop:
  9879                           	callstack 25
  9880  004F3A                     
  9881                           ;i2c.c: 41:   I2C_2_Master_Idle();
  9882  004F3A  ECEA  F026         	call	_I2C_2_Master_Idle	;wreg free
  9883  004F3E                     
  9884                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  9885  004F3E  010E               	movlb	14	; () banked
  9886  004F40  85DA               	bsf	218,2,b	;volatile
  9887  004F42                     
  9888                           ; BSR set to: 14
  9889  004F42  0012               	return		;funcret
  9890  004F44                     __end_of_I2C_2_Master_Stop:
  9891                           	callstack 0
  9892                           
  9893 ;; *************** function _I2C_2_Master_Start *****************
  9894 ;; Defined at:
  9895 ;;		line 27 in file "i2c.c"
  9896 ;; Parameters:    Size  Location     Type
  9897 ;;		None
  9898 ;; Auto vars:     Size  Location     Type
  9899 ;;		None
  9900 ;; Return value:  Size  Location     Type
  9901 ;;                  1    wreg      void 
  9902 ;; Registers used:
  9903 ;;		wreg, status,2, status,0, cstack
  9904 ;; Tracked objects:
  9905 ;;		On entry : 0/0
  9906 ;;		On exit  : 0/0
  9907 ;;		Unchanged: 0/0
  9908 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9909 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9910 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9911 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9912 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9913 ;;Total ram usage:        0 bytes
  9914 ;; Hardware stack levels used: 1
  9915 ;; Hardware stack levels required when called: 1
  9916 ;; This function calls:
  9917 ;;		_I2C_2_Master_Idle
  9918 ;; This function is called by:
  9919 ;;		_color_writetoaddr
  9920 ;;		_color_read_Red
  9921 ;;		_color_read_Blue
  9922 ;;		_color_read_Green
  9923 ;;		_color_read_Clear
  9924 ;; This function uses a non-reentrant model
  9925 ;;
  9926                           
  9927                           	psect	text50
  9928  004F44                     __ptext50:
  9929                           	callstack 0
  9930  004F44                     _I2C_2_Master_Start:
  9931                           	callstack 25
  9932  004F44                     
  9933                           ;i2c.c: 29:   I2C_2_Master_Idle();
  9934  004F44  ECEA  F026         	call	_I2C_2_Master_Idle	;wreg free
  9935  004F48                     
  9936                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  9937  004F48  010E               	movlb	14	; () banked
  9938  004F4A  81DA               	bsf	218,0,b	;volatile
  9939  004F4C                     
  9940                           ; BSR set to: 14
  9941  004F4C  0012               	return		;funcret
  9942  004F4E                     __end_of_I2C_2_Master_Start:
  9943                           	callstack 0
  9944                           
  9945 ;; *************** function _I2C_2_Master_RepStart *****************
  9946 ;; Defined at:
  9947 ;;		line 33 in file "i2c.c"
  9948 ;; Parameters:    Size  Location     Type
  9949 ;;		None
  9950 ;; Auto vars:     Size  Location     Type
  9951 ;;		None
  9952 ;; Return value:  Size  Location     Type
  9953 ;;                  1    wreg      void 
  9954 ;; Registers used:
  9955 ;;		wreg, status,2, status,0, cstack
  9956 ;; Tracked objects:
  9957 ;;		On entry : 0/0
  9958 ;;		On exit  : 0/0
  9959 ;;		Unchanged: 0/0
  9960 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9961 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9962 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9963 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9964 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9965 ;;Total ram usage:        0 bytes
  9966 ;; Hardware stack levels used: 1
  9967 ;; Hardware stack levels required when called: 1
  9968 ;; This function calls:
  9969 ;;		_I2C_2_Master_Idle
  9970 ;; This function is called by:
  9971 ;;		_color_read_Red
  9972 ;;		_color_read_Blue
  9973 ;;		_color_read_Green
  9974 ;;		_color_read_Clear
  9975 ;; This function uses a non-reentrant model
  9976 ;;
  9977                           
  9978                           	psect	text51
  9979  004F4E                     __ptext51:
  9980                           	callstack 0
  9981  004F4E                     _I2C_2_Master_RepStart:
  9982                           	callstack 25
  9983  004F4E                     
  9984                           ;i2c.c: 35:   I2C_2_Master_Idle();
  9985  004F4E  ECEA  F026         	call	_I2C_2_Master_Idle	;wreg free
  9986  004F52                     
  9987                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  9988  004F52  010E               	movlb	14	; () banked
  9989  004F54  83DA               	bsf	218,1,b	;volatile
  9990  004F56                     
  9991                           ; BSR set to: 14
  9992  004F56  0012               	return		;funcret
  9993  004F58                     __end_of_I2C_2_Master_RepStart:
  9994                           	callstack 0
  9995                           
  9996 ;; *************** function _I2C_2_Master_Read *****************
  9997 ;; Defined at:
  9998 ;;		line 51 in file "i2c.c"
  9999 ;; Parameters:    Size  Location     Type
 10000 ;;  ack             1    wreg     unsigned char 
 10001 ;; Auto vars:     Size  Location     Type
 10002 ;;  ack             1    2[COMRAM] unsigned char 
 10003 ;;  tmp             1    3[COMRAM] unsigned char 
 10004 ;; Return value:  Size  Location     Type
 10005 ;;                  1    wreg      unsigned char 
 10006 ;; Registers used:
 10007 ;;		wreg, status,2, status,0, cstack
 10008 ;; Tracked objects:
 10009 ;;		On entry : 0/0
 10010 ;;		On exit  : 0/0
 10011 ;;		Unchanged: 0/0
 10012 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10013 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10014 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10015 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10016 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10017 ;;Total ram usage:        3 bytes
 10018 ;; Hardware stack levels used: 1
 10019 ;; Hardware stack levels required when called: 1
 10020 ;; This function calls:
 10021 ;;		_I2C_2_Master_Idle
 10022 ;; This function is called by:
 10023 ;;		_color_read_Red
 10024 ;;		_color_read_Blue
 10025 ;;		_color_read_Green
 10026 ;;		_color_read_Clear
 10027 ;; This function uses a non-reentrant model
 10028 ;;
 10029                           
 10030                           	psect	text52
 10031  004B20                     __ptext52:
 10032                           	callstack 0
 10033  004B20                     _I2C_2_Master_Read:
 10034                           	callstack 25
 10035                           
 10036                           ; BSR set to: 14
 10037                           ;incstack = 0
 10038                           ;I2C_2_Master_Read@ack stored from wreg
 10039  004B20  6E03               	movwf	I2C_2_Master_Read@ack^0,c
 10040  004B22                     
 10041                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
 10042  004B22  ECEA  F026         	call	_I2C_2_Master_Idle	;wreg free
 10043  004B26                     
 10044                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
 10045  004B26  010E               	movlb	14	; () banked
 10046  004B28  87DA               	bsf	218,3,b	;volatile
 10047                           
 10048                           ;i2c.c: 56:   I2C_2_Master_Idle();
 10049  004B2A  ECEA  F026         	call	_I2C_2_Master_Idle	;wreg free
 10050  004B2E                     
 10051                           ;i2c.c: 57:   tmp = SSP2BUF;
 10052  004B2E  CED5 F004          	movff	3797,I2C_2_Master_Read@tmp	;volatile
 10053                           
 10054                           ;i2c.c: 58:   I2C_2_Master_Idle();
 10055  004B32  ECEA  F026         	call	_I2C_2_Master_Idle	;wreg free
 10056  004B36                     
 10057                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
 10058  004B36  5003               	movf	I2C_2_Master_Read@ack^0,w,c
 10059  004B38  B4D8               	btfsc	status,2,c
 10060  004B3A  EFA1  F025         	goto	u3421
 10061  004B3E  EFA5  F025         	goto	u3420
 10062  004B42                     u3421:
 10063  004B42  6A02               	clrf	??_I2C_2_Master_Read^0,c
 10064  004B44  2A02               	incf	??_I2C_2_Master_Read^0,f,c
 10065  004B46  EFA6  F025         	goto	u3438
 10066  004B4A                     u3420:
 10067  004B4A  6A02               	clrf	??_I2C_2_Master_Read^0,c
 10068  004B4C                     u3438:
 10069  004B4C  3A02               	swapf	??_I2C_2_Master_Read^0,f,c
 10070  004B4E  4602               	rlncf	??_I2C_2_Master_Read^0,f,c
 10071  004B50  010E               	movlb	14	; () banked
 10072  004B52  51DA               	movf	218,w,b	;volatile
 10073  004B54  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
 10074  004B56  0BDF               	andlw	-33
 10075  004B58  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
 10076  004B5A  6FDA               	movwf	218,b	;volatile
 10077  004B5C                     
 10078                           ; BSR set to: 14
 10079                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
 10080  004B5C  89DA               	bsf	218,4,b	;volatile
 10081  004B5E                     
 10082                           ; BSR set to: 14
 10083                           ;i2c.c: 61:   return tmp;
 10084  004B5E  5004               	movf	I2C_2_Master_Read@tmp^0,w,c
 10085  004B60                     
 10086                           ; BSR set to: 14
 10087  004B60  0012               	return		;funcret
 10088  004B62                     __end_of_I2C_2_Master_Read:
 10089                           	callstack 0
 10090                           
 10091 ;; *************** function _I2C_2_Master_Idle *****************
 10092 ;; Defined at:
 10093 ;;		line 22 in file "i2c.c"
 10094 ;; Parameters:    Size  Location     Type
 10095 ;;		None
 10096 ;; Auto vars:     Size  Location     Type
 10097 ;;		None
 10098 ;; Return value:  Size  Location     Type
 10099 ;;                  1    wreg      void 
 10100 ;; Registers used:
 10101 ;;		wreg, status,2, status,0
 10102 ;; Tracked objects:
 10103 ;;		On entry : 0/0
 10104 ;;		On exit  : 0/0
 10105 ;;		Unchanged: 0/0
 10106 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10107 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10108 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10109 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10110 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10111 ;;Total ram usage:        1 bytes
 10112 ;; Hardware stack levels used: 1
 10113 ;; This function calls:
 10114 ;;		Nothing
 10115 ;; This function is called by:
 10116 ;;		_I2C_2_Master_Start
 10117 ;;		_I2C_2_Master_RepStart
 10118 ;;		_I2C_2_Master_Stop
 10119 ;;		_I2C_2_Master_Write
 10120 ;;		_I2C_2_Master_Read
 10121 ;; This function uses a non-reentrant model
 10122 ;;
 10123                           
 10124                           	psect	text53
 10125  004DD4                     __ptext53:
 10126                           	callstack 0
 10127  004DD4                     _I2C_2_Master_Idle:
 10128                           	callstack 25
 10129  004DD4                     l200:
 10130  004DD4  010E               	movlb	14	; () banked
 10131  004DD6  B5D8               	btfsc	216,2,b	;volatile
 10132  004DD8  EFF0  F026         	goto	u2801
 10133  004DDC  EFF2  F026         	goto	u2800
 10134  004DE0                     u2801:
 10135  004DE0  EFEA  F026         	goto	l200
 10136  004DE4                     u2800:
 10137  004DE4                     
 10138                           ; BSR set to: 14
 10139  004DE4  CEDA F001          	movff	3802,??_I2C_2_Master_Idle	;volatile
 10140  004DE8  0E1F               	movlw	31
 10141  004DEA  1601               	andwf	??_I2C_2_Master_Idle^0,f,c
 10142  004DEC  A4D8               	btfss	status,2,c
 10143  004DEE  EFFB  F026         	goto	u2811
 10144  004DF2  EFFD  F026         	goto	u2810
 10145  004DF6                     u2811:
 10146  004DF6  EFEA  F026         	goto	l200
 10147  004DFA                     u2810:
 10148  004DFA                     
 10149                           ; BSR set to: 14
 10150  004DFA  0012               	return		;funcret
 10151  004DFC                     __end_of_I2C_2_Master_Idle:
 10152                           	callstack 0
 10153                           
 10154 ;; *************** function _LED_R *****************
 10155 ;; Defined at:
 10156 ;;		line 100 in file "color.c"
 10157 ;; Parameters:    Size  Location     Type
 10158 ;;		None
 10159 ;; Auto vars:     Size  Location     Type
 10160 ;;		None
 10161 ;; Return value:  Size  Location     Type
 10162 ;;                  1    wreg      void 
 10163 ;; Registers used:
 10164 ;;		wreg
 10165 ;; Tracked objects:
 10166 ;;		On entry : 0/0
 10167 ;;		On exit  : 0/0
 10168 ;;		Unchanged: 0/0
 10169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10170 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10171 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10172 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10173 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10174 ;;Total ram usage:        2 bytes
 10175 ;; Hardware stack levels used: 1
 10176 ;; This function calls:
 10177 ;;		Nothing
 10178 ;; This function is called by:
 10179 ;;		_color_data_collection
 10180 ;;		_calibrate_white
 10181 ;;		_detect_color
 10182 ;; This function uses a non-reentrant model
 10183 ;;
 10184                           
 10185                           	psect	text54
 10186  004E62                     __ptext54:
 10187                           	callstack 0
 10188  004E62                     _LED_R:
 10189                           	callstack 28
 10190  004E62                     
 10191                           ;color.c: 102:     LATGbits.LATG1 = 1;
 10192  004E62  827F               	bsf	127,1,c	;volatile
 10193                           
 10194                           ;color.c: 103:     LATFbits.LATF7 = 0;
 10195  004E64  9E7E               	bcf	126,7,c	;volatile
 10196                           
 10197                           ;color.c: 104:     LATAbits.LATA4 = 0;
 10198  004E66  9879               	bcf	121,4,c	;volatile
 10199  004E68                     
 10200                           ;color.c: 105:     _delay((unsigned long)((200)*(64000000/4000.0)));
 10201  004E68  0E11               	movlw	17
 10202  004E6A  6E02               	movwf	(??_LED_R+1)^0,c
 10203  004E6C  0E3C               	movlw	60
 10204  004E6E  6E01               	movwf	??_LED_R^0,c
 10205  004E70  0ECB               	movlw	203
 10206  004E72                     u5267:
 10207  004E72  2EE8               	decfsz	wreg,f,c
 10208  004E74  D7FE               	bra	u5267
 10209  004E76  2E01               	decfsz	??_LED_R^0,f,c
 10210  004E78  D7FC               	bra	u5267
 10211  004E7A  2E02               	decfsz	(??_LED_R+1)^0,f,c
 10212  004E7C  D7FA               	bra	u5267
 10213  004E7E  F000               	nop	
 10214  004E80  0012               	return		;funcret
 10215  004E82                     __end_of_LED_R:
 10216                           	callstack 0
 10217                           
 10218 ;; *************** function _LED_G *****************
 10219 ;; Defined at:
 10220 ;;		line 127 in file "color.c"
 10221 ;; Parameters:    Size  Location     Type
 10222 ;;		None
 10223 ;; Auto vars:     Size  Location     Type
 10224 ;;		None
 10225 ;; Return value:  Size  Location     Type
 10226 ;;                  1    wreg      void 
 10227 ;; Registers used:
 10228 ;;		wreg
 10229 ;; Tracked objects:
 10230 ;;		On entry : 0/0
 10231 ;;		On exit  : 0/0
 10232 ;;		Unchanged: 0/0
 10233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10234 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10235 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10236 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10237 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10238 ;;Total ram usage:        2 bytes
 10239 ;; Hardware stack levels used: 1
 10240 ;; This function calls:
 10241 ;;		Nothing
 10242 ;; This function is called by:
 10243 ;;		_color_data_collection
 10244 ;;		_calibrate_white
 10245 ;;		_detect_color
 10246 ;; This function uses a non-reentrant model
 10247 ;;
 10248                           
 10249                           	psect	text55
 10250  004E82                     __ptext55:
 10251                           	callstack 0
 10252  004E82                     _LED_G:
 10253                           	callstack 28
 10254  004E82                     
 10255                           ;color.c: 129:     LATGbits.LATG1 = 0;
 10256  004E82  927F               	bcf	127,1,c	;volatile
 10257                           
 10258                           ;color.c: 130:     LATFbits.LATF7 = 0;
 10259  004E84  9E7E               	bcf	126,7,c	;volatile
 10260                           
 10261                           ;color.c: 131:     LATAbits.LATA4 = 1;
 10262  004E86  8879               	bsf	121,4,c	;volatile
 10263  004E88                     
 10264                           ;color.c: 132:     _delay((unsigned long)((200)*(64000000/4000.0)));
 10265  004E88  0E11               	movlw	17
 10266  004E8A  6E02               	movwf	(??_LED_G+1)^0,c
 10267  004E8C  0E3C               	movlw	60
 10268  004E8E  6E01               	movwf	??_LED_G^0,c
 10269  004E90  0ECB               	movlw	203
 10270  004E92                     u5277:
 10271  004E92  2EE8               	decfsz	wreg,f,c
 10272  004E94  D7FE               	bra	u5277
 10273  004E96  2E01               	decfsz	??_LED_G^0,f,c
 10274  004E98  D7FC               	bra	u5277
 10275  004E9A  2E02               	decfsz	(??_LED_G+1)^0,f,c
 10276  004E9C  D7FA               	bra	u5277
 10277  004E9E  F000               	nop	
 10278  004EA0  0012               	return		;funcret
 10279  004EA2                     __end_of_LED_G:
 10280                           	callstack 0
 10281                           
 10282 ;; *************** function _LED_B *****************
 10283 ;; Defined at:
 10284 ;;		line 118 in file "color.c"
 10285 ;; Parameters:    Size  Location     Type
 10286 ;;		None
 10287 ;; Auto vars:     Size  Location     Type
 10288 ;;		None
 10289 ;; Return value:  Size  Location     Type
 10290 ;;                  1    wreg      void 
 10291 ;; Registers used:
 10292 ;;		wreg
 10293 ;; Tracked objects:
 10294 ;;		On entry : 0/0
 10295 ;;		On exit  : 0/0
 10296 ;;		Unchanged: 0/0
 10297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10298 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10299 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10300 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10301 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10302 ;;Total ram usage:        2 bytes
 10303 ;; Hardware stack levels used: 1
 10304 ;; This function calls:
 10305 ;;		Nothing
 10306 ;; This function is called by:
 10307 ;;		_color_data_collection
 10308 ;;		_calibrate_white
 10309 ;;		_detect_color
 10310 ;; This function uses a non-reentrant model
 10311 ;;
 10312                           
 10313                           	psect	text56
 10314  004EA2                     __ptext56:
 10315                           	callstack 0
 10316  004EA2                     _LED_B:
 10317                           	callstack 28
 10318  004EA2                     
 10319                           ;color.c: 120:     LATGbits.LATG1 = 0;
 10320  004EA2  927F               	bcf	127,1,c	;volatile
 10321                           
 10322                           ;color.c: 121:     LATFbits.LATF7 = 1;
 10323  004EA4  8E7E               	bsf	126,7,c	;volatile
 10324                           
 10325                           ;color.c: 122:     LATAbits.LATA4 = 0;
 10326  004EA6  9879               	bcf	121,4,c	;volatile
 10327  004EA8                     
 10328                           ;color.c: 123:     _delay((unsigned long)((200)*(64000000/4000.0)));
 10329  004EA8  0E11               	movlw	17
 10330  004EAA  6E02               	movwf	(??_LED_B+1)^0,c
 10331  004EAC  0E3C               	movlw	60
 10332  004EAE  6E01               	movwf	??_LED_B^0,c
 10333  004EB0  0ECB               	movlw	203
 10334  004EB2                     u5287:
 10335  004EB2  2EE8               	decfsz	wreg,f,c
 10336  004EB4  D7FE               	bra	u5287
 10337  004EB6  2E01               	decfsz	??_LED_B^0,f,c
 10338  004EB8  D7FC               	bra	u5287
 10339  004EBA  2E02               	decfsz	(??_LED_B+1)^0,f,c
 10340  004EBC  D7FA               	bra	u5287
 10341  004EBE  F000               	nop	
 10342  004EC0  0012               	return		;funcret
 10343  004EC2                     __end_of_LED_B:
 10344                           	callstack 0
 10345                           
 10346 ;; *************** function _action *****************
 10347 ;; Defined at:
 10348 ;;		line 16 in file "movement.c"
 10349 ;; Parameters:    Size  Location     Type
 10350 ;;  color           1    wreg     unsigned char 
 10351 ;;  mL              2   49[COMRAM] PTR struct DC_motor
 10352 ;;		 -> main@motorL(10), 
 10353 ;;  mR              2   51[COMRAM] PTR struct DC_motor
 10354 ;;		 -> main@motorR(10), 
 10355 ;; Auto vars:     Size  Location     Type
 10356 ;;  color           1   53[COMRAM] unsigned char 
 10357 ;; Return value:  Size  Location     Type
 10358 ;;                  1    wreg      void 
 10359 ;; Registers used:
 10360 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10361 ;; Tracked objects:
 10362 ;;		On entry : 0/0
 10363 ;;		On exit  : 0/0
 10364 ;;		Unchanged: 0/0
 10365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10366 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10367 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10368 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10369 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10370 ;;Total ram usage:        5 bytes
 10371 ;; Hardware stack levels used: 1
 10372 ;; Hardware stack levels required when called: 5
 10373 ;; This function calls:
 10374 ;;		_goback
 10375 ;;		_reverse_square
 10376 ;;		_short_reverse
 10377 ;;		_stop
 10378 ;;		_turnLeft
 10379 ;;		_turnRight
 10380 ;; This function is called by:
 10381 ;;		_main
 10382 ;; This function uses a non-reentrant model
 10383 ;;
 10384                           
 10385                           	psect	text57
 10386  002E32                     __ptext57:
 10387                           	callstack 0
 10388  002E32                     _action:
 10389                           	callstack 25
 10390                           
 10391                           ;incstack = 0
 10392                           ;action@color stored from wreg
 10393  002E32  6E36               	movwf	action@color^0,c
 10394  002E34                     
 10395                           ;movement.c: 16: void action(unsigned char color, struct DC_motor *mL, struct DC_motor *
      +                          mR);movement.c: 17: {;movement.c: 19:     stop(mL,mR);
 10396  002E34  C032  F01A         	movff	action@mL,stop@mL
 10397  002E38  C033  F01B         	movff	action@mL+1,stop@mL+1
 10398  002E3C  C034  F01C         	movff	action@mR,stop@mR
 10399  002E40  C035  F01D         	movff	action@mR+1,stop@mR+1
 10400  002E44  ECA1  F022         	call	_stop	;wreg free
 10401  002E48                     
 10402                           ;movement.c: 20:     if (color == 1){
 10403  002E48  0436               	decf	action@color^0,w,c
 10404  002E4A  A4D8               	btfss	status,2,c
 10405  002E4C  EF2A  F017         	goto	u4901
 10406  002E50  EF2C  F017         	goto	u4900
 10407  002E54                     u4901:
 10408  002E54  EF42  F017         	goto	l4846
 10409  002E58                     u4900:
 10410  002E58                     
 10411                           ;movement.c: 21:         short_reverse(mL,mR);
 10412  002E58  C032  F026         	movff	action@mL,short_reverse@mL
 10413  002E5C  C033  F027         	movff	action@mL+1,short_reverse@mL+1
 10414  002E60  C034  F028         	movff	action@mR,short_reverse@mR
 10415  002E64  C035  F029         	movff	action@mR+1,short_reverse@mR+1
 10416  002E68  ECB1  F025         	call	_short_reverse	;wreg free
 10417                           
 10418                           ;movement.c: 22:         turnRight(mL,mR,90);
 10419  002E6C  C032  F020         	movff	action@mL,turnRight@mL
 10420  002E70  C033  F021         	movff	action@mL+1,turnRight@mL+1
 10421  002E74  C034  F022         	movff	action@mR,turnRight@mR
 10422  002E78  C035  F023         	movff	action@mR+1,turnRight@mR+1
 10423  002E7C  0E5A               	movlw	90
 10424  002E7E  6E24               	movwf	turnRight@angle_right^0,c
 10425  002E80  ECAA  F01D         	call	_turnRight	;wreg free
 10426  002E84                     l4846:
 10427                           
 10428                           ;movement.c: 24:     if (color == 2){
 10429  002E84  0E02               	movlw	2
 10430  002E86  1836               	xorwf	action@color^0,w,c
 10431  002E88  A4D8               	btfss	status,2,c
 10432  002E8A  EF49  F017         	goto	u4911
 10433  002E8E  EF4B  F017         	goto	u4910
 10434  002E92                     u4911:
 10435  002E92  EF61  F017         	goto	l4850
 10436  002E96                     u4910:
 10437  002E96                     
 10438                           ;movement.c: 25:         short_reverse(mL,mR);
 10439  002E96  C032  F026         	movff	action@mL,short_reverse@mL
 10440  002E9A  C033  F027         	movff	action@mL+1,short_reverse@mL+1
 10441  002E9E  C034  F028         	movff	action@mR,short_reverse@mR
 10442  002EA2  C035  F029         	movff	action@mR+1,short_reverse@mR+1
 10443  002EA6  ECB1  F025         	call	_short_reverse	;wreg free
 10444                           
 10445                           ;movement.c: 26:         turnLeft(mL,mR,90);
 10446  002EAA  C032  F020         	movff	action@mL,turnLeft@mL
 10447  002EAE  C033  F021         	movff	action@mL+1,turnLeft@mL+1
 10448  002EB2  C034  F022         	movff	action@mR,turnLeft@mR
 10449  002EB6  C035  F023         	movff	action@mR+1,turnLeft@mR+1
 10450  002EBA  0E5A               	movlw	90
 10451  002EBC  6E24               	movwf	turnLeft@angle_left^0,c
 10452  002EBE  EC40  F01E         	call	_turnLeft	;wreg free
 10453  002EC2                     l4850:
 10454                           
 10455                           ;movement.c: 28:     if (color == 3){
 10456  002EC2  0E03               	movlw	3
 10457  002EC4  1836               	xorwf	action@color^0,w,c
 10458  002EC6  A4D8               	btfss	status,2,c
 10459  002EC8  EF68  F017         	goto	u4921
 10460  002ECC  EF6A  F017         	goto	u4920
 10461  002ED0                     u4921:
 10462  002ED0  EF80  F017         	goto	l4854
 10463  002ED4                     u4920:
 10464  002ED4                     
 10465                           ;movement.c: 29:         short_reverse(mL,mR);
 10466  002ED4  C032  F026         	movff	action@mL,short_reverse@mL
 10467  002ED8  C033  F027         	movff	action@mL+1,short_reverse@mL+1
 10468  002EDC  C034  F028         	movff	action@mR,short_reverse@mR
 10469  002EE0  C035  F029         	movff	action@mR+1,short_reverse@mR+1
 10470  002EE4  ECB1  F025         	call	_short_reverse	;wreg free
 10471                           
 10472                           ;movement.c: 30:         turnLeft(mL,mR,180);
 10473  002EE8  C032  F020         	movff	action@mL,turnLeft@mL
 10474  002EEC  C033  F021         	movff	action@mL+1,turnLeft@mL+1
 10475  002EF0  C034  F022         	movff	action@mR,turnLeft@mR
 10476  002EF4  C035  F023         	movff	action@mR+1,turnLeft@mR+1
 10477  002EF8  0EB4               	movlw	180
 10478  002EFA  6E24               	movwf	turnLeft@angle_left^0,c
 10479  002EFC  EC40  F01E         	call	_turnLeft	;wreg free
 10480  002F00                     l4854:
 10481                           
 10482                           ;movement.c: 32:     if (color == 4){
 10483  002F00  0E04               	movlw	4
 10484  002F02  1836               	xorwf	action@color^0,w,c
 10485  002F04  A4D8               	btfss	status,2,c
 10486  002F06  EF87  F017         	goto	u4931
 10487  002F0A  EF89  F017         	goto	u4930
 10488  002F0E                     u4931:
 10489  002F0E  EF9F  F017         	goto	l4858
 10490  002F12                     u4930:
 10491  002F12                     
 10492                           ;movement.c: 33:         reverse_square(mL,mR);
 10493  002F12  C032  F026         	movff	action@mL,reverse_square@mL
 10494  002F16  C033  F027         	movff	action@mL+1,reverse_square@mL+1
 10495  002F1A  C034  F028         	movff	action@mR,reverse_square@mR
 10496  002F1E  C035  F029         	movff	action@mR+1,reverse_square@mR+1
 10497  002F22  ECD2  F025         	call	_reverse_square	;wreg free
 10498                           
 10499                           ;movement.c: 34:         turnRight(mL,mR,90);
 10500  002F26  C032  F020         	movff	action@mL,turnRight@mL
 10501  002F2A  C033  F021         	movff	action@mL+1,turnRight@mL+1
 10502  002F2E  C034  F022         	movff	action@mR,turnRight@mR
 10503  002F32  C035  F023         	movff	action@mR+1,turnRight@mR+1
 10504  002F36  0E5A               	movlw	90
 10505  002F38  6E24               	movwf	turnRight@angle_right^0,c
 10506  002F3A  ECAA  F01D         	call	_turnRight	;wreg free
 10507  002F3E                     l4858:
 10508                           
 10509                           ;movement.c: 36:     if (color == 5){
 10510  002F3E  0E05               	movlw	5
 10511  002F40  1836               	xorwf	action@color^0,w,c
 10512  002F42  A4D8               	btfss	status,2,c
 10513  002F44  EFA6  F017         	goto	u4941
 10514  002F48  EFA8  F017         	goto	u4940
 10515  002F4C                     u4941:
 10516  002F4C  EFBE  F017         	goto	l4862
 10517  002F50                     u4940:
 10518  002F50                     
 10519                           ;movement.c: 37:         reverse_square(mL,mR);
 10520  002F50  C032  F026         	movff	action@mL,reverse_square@mL
 10521  002F54  C033  F027         	movff	action@mL+1,reverse_square@mL+1
 10522  002F58  C034  F028         	movff	action@mR,reverse_square@mR
 10523  002F5C  C035  F029         	movff	action@mR+1,reverse_square@mR+1
 10524  002F60  ECD2  F025         	call	_reverse_square	;wreg free
 10525                           
 10526                           ;movement.c: 38:         turnLeft(mL,mR,90);
 10527  002F64  C032  F020         	movff	action@mL,turnLeft@mL
 10528  002F68  C033  F021         	movff	action@mL+1,turnLeft@mL+1
 10529  002F6C  C034  F022         	movff	action@mR,turnLeft@mR
 10530  002F70  C035  F023         	movff	action@mR+1,turnLeft@mR+1
 10531  002F74  0E5A               	movlw	90
 10532  002F76  6E24               	movwf	turnLeft@angle_left^0,c
 10533  002F78  EC40  F01E         	call	_turnLeft	;wreg free
 10534  002F7C                     l4862:
 10535                           
 10536                           ;movement.c: 40:     if (color == 6){
 10537  002F7C  0E06               	movlw	6
 10538  002F7E  1836               	xorwf	action@color^0,w,c
 10539  002F80  A4D8               	btfss	status,2,c
 10540  002F82  EFC5  F017         	goto	u4951
 10541  002F86  EFC7  F017         	goto	u4950
 10542  002F8A                     u4951:
 10543  002F8A  EFDD  F017         	goto	l4866
 10544  002F8E                     u4950:
 10545  002F8E                     
 10546                           ;movement.c: 41:         short_reverse(mL,mR);
 10547  002F8E  C032  F026         	movff	action@mL,short_reverse@mL
 10548  002F92  C033  F027         	movff	action@mL+1,short_reverse@mL+1
 10549  002F96  C034  F028         	movff	action@mR,short_reverse@mR
 10550  002F9A  C035  F029         	movff	action@mR+1,short_reverse@mR+1
 10551  002F9E  ECB1  F025         	call	_short_reverse	;wreg free
 10552                           
 10553                           ;movement.c: 42:         turnRight(mL,mR,135);
 10554  002FA2  C032  F020         	movff	action@mL,turnRight@mL
 10555  002FA6  C033  F021         	movff	action@mL+1,turnRight@mL+1
 10556  002FAA  C034  F022         	movff	action@mR,turnRight@mR
 10557  002FAE  C035  F023         	movff	action@mR+1,turnRight@mR+1
 10558  002FB2  0E87               	movlw	135
 10559  002FB4  6E24               	movwf	turnRight@angle_right^0,c
 10560  002FB6  ECAA  F01D         	call	_turnRight	;wreg free
 10561  002FBA                     l4866:
 10562                           
 10563                           ;movement.c: 44:     if (color == 7){
 10564  002FBA  0E07               	movlw	7
 10565  002FBC  1836               	xorwf	action@color^0,w,c
 10566  002FBE  A4D8               	btfss	status,2,c
 10567  002FC0  EFE4  F017         	goto	u4961
 10568  002FC4  EFE6  F017         	goto	u4960
 10569  002FC8                     u4961:
 10570  002FC8  EFFC  F017         	goto	l4870
 10571  002FCC                     u4960:
 10572  002FCC                     
 10573                           ;movement.c: 45:         short_reverse(mL,mR);
 10574  002FCC  C032  F026         	movff	action@mL,short_reverse@mL
 10575  002FD0  C033  F027         	movff	action@mL+1,short_reverse@mL+1
 10576  002FD4  C034  F028         	movff	action@mR,short_reverse@mR
 10577  002FD8  C035  F029         	movff	action@mR+1,short_reverse@mR+1
 10578  002FDC  ECB1  F025         	call	_short_reverse	;wreg free
 10579                           
 10580                           ;movement.c: 46:         turnLeft(mL,mR,135);
 10581  002FE0  C032  F020         	movff	action@mL,turnLeft@mL
 10582  002FE4  C033  F021         	movff	action@mL+1,turnLeft@mL+1
 10583  002FE8  C034  F022         	movff	action@mR,turnLeft@mR
 10584  002FEC  C035  F023         	movff	action@mR+1,turnLeft@mR+1
 10585  002FF0  0E87               	movlw	135
 10586  002FF2  6E24               	movwf	turnLeft@angle_left^0,c
 10587  002FF4  EC40  F01E         	call	_turnLeft	;wreg free
 10588  002FF8                     l4870:
 10589                           
 10590                           ;movement.c: 48:     if (color == 8){
 10591  002FF8  0E08               	movlw	8
 10592  002FFA  1836               	xorwf	action@color^0,w,c
 10593  002FFC  A4D8               	btfss	status,2,c
 10594  002FFE  EF03  F018         	goto	u4971
 10595  003002  EF05  F018         	goto	u4970
 10596  003006                     u4971:
 10597  003006  EF19  F018         	goto	l614
 10598  00300A                     u4970:
 10599  00300A                     
 10600                           ;movement.c: 49:         short_reverse(mL,mR);
 10601  00300A  C032  F026         	movff	action@mL,short_reverse@mL
 10602  00300E  C033  F027         	movff	action@mL+1,short_reverse@mL+1
 10603  003012  C034  F028         	movff	action@mR,short_reverse@mR
 10604  003016  C035  F029         	movff	action@mR+1,short_reverse@mR+1
 10605  00301A  ECB1  F025         	call	_short_reverse	;wreg free
 10606                           
 10607                           ;movement.c: 50:         goback(mL,mR);
 10608  00301E  C032  F02E         	movff	action@mL,goback@mL
 10609  003022  C033  F02F         	movff	action@mL+1,goback@mL+1
 10610  003026  C034  F030         	movff	action@mR,goback@mR
 10611  00302A  C035  F031         	movff	action@mR+1,goback@mR+1
 10612  00302E  EC7E  F027         	call	_goback	;wreg free
 10613  003032                     l614:
 10614  003032  0012               	return		;funcret
 10615  003034                     __end_of_action:
 10616                           	callstack 0
 10617                           
 10618 ;; *************** function _turnRight *****************
 10619 ;; Defined at:
 10620 ;;		line 120 in file "dc_motor.c"
 10621 ;; Parameters:    Size  Location     Type
 10622 ;;  mL              2   31[COMRAM] PTR struct DC_motor
 10623 ;;		 -> main@motorL(10), 
 10624 ;;  mR              2   33[COMRAM] PTR struct DC_motor
 10625 ;;		 -> main@motorR(10), 
 10626 ;;  angle_right     1   35[COMRAM] unsigned char 
 10627 ;; Auto vars:     Size  Location     Type
 10628 ;;  i               2   41[COMRAM] unsigned int 
 10629 ;;  i               2   39[COMRAM] unsigned int 
 10630 ;;  delay           2   43[COMRAM] unsigned int 
 10631 ;;  delay_180       2   37[COMRAM] unsigned int 
 10632 ;; Return value:  Size  Location     Type
 10633 ;;                  1    wreg      void 
 10634 ;; Registers used:
 10635 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10636 ;; Tracked objects:
 10637 ;;		On entry : 0/0
 10638 ;;		On exit  : 0/0
 10639 ;;		Unchanged: 0/0
 10640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10641 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10642 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10643 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10644 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10645 ;;Total ram usage:       14 bytes
 10646 ;; Hardware stack levels used: 1
 10647 ;; Hardware stack levels required when called: 3
 10648 ;; This function calls:
 10649 ;;		_setMotorPWM
 10650 ;;		_stop
 10651 ;; This function is called by:
 10652 ;;		_action
 10653 ;;		_movement
 10654 ;;		_test_action
 10655 ;; This function uses a non-reentrant model
 10656 ;;
 10657                           
 10658                           	psect	text58
 10659  003B54                     __ptext58:
 10660                           	callstack 0
 10661  003B54                     _turnRight:
 10662                           	callstack 26
 10663  003B54                     
 10664                           ;dc_motor.c: 120: void turnRight(struct DC_motor *mL, struct DC_motor *mR, unsigned char
      +                           angle_right);dc_motor.c: 121: {;dc_motor.c: 122:     mL->direction=1;
 10665  003B54  EE20 F001          	lfsr	2,1
 10666  003B58  5020               	movf	turnRight@mL^0,w,c
 10667  003B5A  26D9               	addwf	fsr2l,f,c
 10668  003B5C  5021               	movf	(turnRight@mL+1)^0,w,c
 10669  003B5E  22DA               	addwfc	fsr2h,f,c
 10670  003B60  0E01               	movlw	1
 10671  003B62  6EDF               	movwf	indf2,c
 10672                           
 10673                           ;dc_motor.c: 123:     mR->direction=1;
 10674  003B64  EE20 F001          	lfsr	2,1
 10675  003B68  5022               	movf	turnRight@mR^0,w,c
 10676  003B6A  26D9               	addwf	fsr2l,f,c
 10677  003B6C  5023               	movf	(turnRight@mR+1)^0,w,c
 10678  003B6E  22DA               	addwfc	fsr2h,f,c
 10679  003B70  0E01               	movlw	1
 10680  003B72  6EDF               	movwf	indf2,c
 10681                           
 10682                           ;dc_motor.c: 124:     while (mL->power <25){
 10683  003B74  EFDB  F01D         	goto	l4586
 10684  003B78                     l4578:
 10685                           
 10686                           ;dc_motor.c: 125:         mL->power += 5;
 10687  003B78  C020  FFD9         	movff	turnRight@mL,fsr2l
 10688  003B7C  C021  FFDA         	movff	turnRight@mL+1,fsr2h
 10689  003B80  0E05               	movlw	5
 10690  003B82  26DF               	addwf	indf2,f,c
 10691                           
 10692                           ;dc_motor.c: 126:         mR->power = 0;
 10693  003B84  C022  FFD9         	movff	turnRight@mR,fsr2l
 10694  003B88  C023  FFDA         	movff	turnRight@mR+1,fsr2h
 10695  003B8C  0E00               	movlw	0
 10696  003B8E  6EDF               	movwf	indf2,c
 10697  003B90                     
 10698                           ;dc_motor.c: 127:         setMotorPWM(mL);
 10699  003B90  C020  F00F         	movff	turnRight@mL,setMotorPWM@m
 10700  003B94  C021  F010         	movff	turnRight@mL+1,setMotorPWM@m+1
 10701  003B98  EC1A  F018         	call	_setMotorPWM	;wreg free
 10702  003B9C                     
 10703                           ;dc_motor.c: 128:         setMotorPWM(mR);
 10704  003B9C  C022  F00F         	movff	turnRight@mR,setMotorPWM@m
 10705  003BA0  C023  F010         	movff	turnRight@mR+1,setMotorPWM@m+1
 10706  003BA4  EC1A  F018         	call	_setMotorPWM	;wreg free
 10707  003BA8                     
 10708                           ;dc_motor.c: 129:         _delay((unsigned long)((10)*(64000000/4000.0)));
 10709  003BA8  0ED0               	movlw	208
 10710  003BAA  6E25               	movwf	??_turnRight^0,c
 10711  003BAC  0ECA               	movlw	202
 10712  003BAE                     u5297:
 10713  003BAE  2EE8               	decfsz	wreg,f,c
 10714  003BB0  D7FE               	bra	u5297
 10715  003BB2  2E25               	decfsz	??_turnRight^0,f,c
 10716  003BB4  D7FC               	bra	u5297
 10717  003BB6                     l4586:
 10718                           
 10719                           ;dc_motor.c: 124:     while (mL->power <25){
 10720  003BB6  C020  FFD9         	movff	turnRight@mL,fsr2l
 10721  003BBA  C021  FFDA         	movff	turnRight@mL+1,fsr2h
 10722  003BBE  0E18               	movlw	24
 10723  003BC0  64DF               	cpfsgt	indf2,c
 10724  003BC2  EFE5  F01D         	goto	u4761
 10725  003BC6  EFE7  F01D         	goto	u4760
 10726  003BCA                     u4761:
 10727  003BCA  EFBC  F01D         	goto	l4578
 10728  003BCE                     u4760:
 10729  003BCE                     
 10730                           ;dc_motor.c: 131:     unsigned int delay = angle_right * SENSITIVITY;
 10731  003BCE  5024               	movf	turnRight@angle_right^0,w,c
 10732  003BD0  0100               	movlb	0	; () banked
 10733  003BD2  03F9               	mulwf	_SENSITIVITY& (0+255),b
 10734  003BD4  CFF3 F02C          	movff	prodl,turnRight@delay
 10735  003BD8  CFF4 F02D          	movff	prodh,turnRight@delay+1
 10736  003BDC                     
 10737                           ; BSR set to: 0
 10738                           ;dc_motor.c: 132:     unsigned int delay_180 = delay + CALIBRATION_180;
 10739  003BDC  0E14               	movlw	20
 10740  003BDE  242C               	addwf	turnRight@delay^0,w,c
 10741  003BE0  6E26               	movwf	turnRight@delay_180^0,c
 10742  003BE2  0E00               	movlw	0
 10743  003BE4  202D               	addwfc	(turnRight@delay+1)^0,w,c
 10744  003BE6  6E27               	movwf	(turnRight@delay_180+1)^0,c
 10745  003BE8                     
 10746                           ; BSR set to: 0
 10747                           ;dc_motor.c: 133:     if (angle_right == 180){
 10748  003BE8  0EB4               	movlw	180
 10749  003BEA  1824               	xorwf	turnRight@angle_right^0,w,c
 10750  003BEC  A4D8               	btfss	status,2,c
 10751  003BEE  EFFB  F01D         	goto	u4771
 10752  003BF2  EFFD  F01D         	goto	u4770
 10753  003BF6                     u4771:
 10754  003BF6  EF1A  F01E         	goto	l4600
 10755  003BFA                     u4770:
 10756  003BFA                     
 10757                           ; BSR set to: 0
 10758                           ;dc_motor.c: 134:         for(unsigned int i = 0; i <delay_180; i++){_delay((unsigned lo
      +                          ng)((1)*(64000000/4000.0)));}
 10759  003BFA  0E00               	movlw	0
 10760  003BFC  6E29               	movwf	(turnRight@i+1)^0,c
 10761  003BFE  0E00               	movlw	0
 10762  003C00  6E28               	movwf	turnRight@i^0,c
 10763  003C02  EF0D  F01E         	goto	l328
 10764  003C06                     l4596:
 10765  003C06  0E15               	movlw	21
 10766  003C08  6E25               	movwf	??_turnRight^0,c
 10767  003C0A  0EC6               	movlw	198
 10768  003C0C                     u5307:
 10769  003C0C  2EE8               	decfsz	wreg,f,c
 10770  003C0E  D7FE               	bra	u5307
 10771  003C10  2E25               	decfsz	??_turnRight^0,f,c
 10772  003C12  D7FC               	bra	u5307
 10773  003C14  D000               	nop2	
 10774  003C16  4A28               	infsnz	turnRight@i^0,f,c
 10775  003C18  2A29               	incf	(turnRight@i+1)^0,f,c
 10776  003C1A                     l328:
 10777  003C1A  5026               	movf	turnRight@delay_180^0,w,c
 10778  003C1C  5C28               	subwf	turnRight@i^0,w,c
 10779  003C1E  5027               	movf	(turnRight@delay_180+1)^0,w,c
 10780  003C20  5829               	subwfb	(turnRight@i+1)^0,w,c
 10781  003C22  A0D8               	btfss	status,0,c
 10782  003C24  EF16  F01E         	goto	u4781
 10783  003C28  EF18  F01E         	goto	u4780
 10784  003C2C                     u4781:
 10785  003C2C  EF03  F01E         	goto	l4596
 10786  003C30                     u4780:
 10787  003C30  EF35  F01E         	goto	l4606
 10788  003C34                     l4600:
 10789                           
 10790                           ; BSR set to: 0
 10791                           ;dc_motor.c: 137:         for(unsigned int i = 0; i < delay; i++){_delay((unsigned long)
      +                          ((1)*(64000000/4000.0)));}
 10792  003C34  0E00               	movlw	0
 10793  003C36  6E2B               	movwf	(turnRight@i_1215+1)^0,c
 10794  003C38  0E00               	movlw	0
 10795  003C3A  6E2A               	movwf	turnRight@i_1215^0,c
 10796  003C3C  EF2A  F01E         	goto	l332
 10797  003C40                     l4602:
 10798  003C40  0E15               	movlw	21
 10799  003C42  6E25               	movwf	??_turnRight^0,c
 10800  003C44  0EC6               	movlw	198
 10801  003C46                     u5317:
 10802  003C46  2EE8               	decfsz	wreg,f,c
 10803  003C48  D7FE               	bra	u5317
 10804  003C4A  2E25               	decfsz	??_turnRight^0,f,c
 10805  003C4C  D7FC               	bra	u5317
 10806  003C4E  D000               	nop2	
 10807  003C50  4A2A               	infsnz	turnRight@i_1215^0,f,c
 10808  003C52  2A2B               	incf	(turnRight@i_1215+1)^0,f,c
 10809  003C54                     l332:
 10810  003C54  502C               	movf	turnRight@delay^0,w,c
 10811  003C56  5C2A               	subwf	turnRight@i_1215^0,w,c
 10812  003C58  502D               	movf	(turnRight@delay+1)^0,w,c
 10813  003C5A  582B               	subwfb	(turnRight@i_1215+1)^0,w,c
 10814  003C5C  A0D8               	btfss	status,0,c
 10815  003C5E  EF33  F01E         	goto	u4791
 10816  003C62  EF35  F01E         	goto	u4790
 10817  003C66                     u4791:
 10818  003C66  EF20  F01E         	goto	l4602
 10819  003C6A                     u4790:
 10820  003C6A                     l4606:
 10821                           
 10822                           ;dc_motor.c: 139:     stop(mL,mR);
 10823  003C6A  C020  F01A         	movff	turnRight@mL,stop@mL
 10824  003C6E  C021  F01B         	movff	turnRight@mL+1,stop@mL+1
 10825  003C72  C022  F01C         	movff	turnRight@mR,stop@mR
 10826  003C76  C023  F01D         	movff	turnRight@mR+1,stop@mR+1
 10827  003C7A  ECA1  F022         	call	_stop	;wreg free
 10828  003C7E  0012               	return		;funcret
 10829  003C80                     __end_of_turnRight:
 10830                           	callstack 0
 10831                           
 10832 ;; *************** function _short_reverse *****************
 10833 ;; Defined at:
 10834 ;;		line 177 in file "dc_motor.c"
 10835 ;; Parameters:    Size  Location     Type
 10836 ;;  mL              2   37[COMRAM] PTR struct DC_motor
 10837 ;;		 -> main@motorL(10), 
 10838 ;;  mR              2   39[COMRAM] PTR struct DC_motor
 10839 ;;		 -> main@motorR(10), 
 10840 ;; Auto vars:     Size  Location     Type
 10841 ;;		None
 10842 ;; Return value:  Size  Location     Type
 10843 ;;                  1    wreg      void 
 10844 ;; Registers used:
 10845 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10846 ;; Tracked objects:
 10847 ;;		On entry : 0/0
 10848 ;;		On exit  : 0/0
 10849 ;;		Unchanged: 0/0
 10850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10851 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10852 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10853 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10854 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10855 ;;Total ram usage:        6 bytes
 10856 ;; Hardware stack levels used: 1
 10857 ;; Hardware stack levels required when called: 4
 10858 ;; This function calls:
 10859 ;;		_fullSpeedBack
 10860 ;;		_stop
 10861 ;; This function is called by:
 10862 ;;		_action
 10863 ;; This function uses a non-reentrant model
 10864 ;;
 10865                           
 10866                           	psect	text59
 10867  004B62                     __ptext59:
 10868                           	callstack 0
 10869  004B62                     _short_reverse:
 10870                           	callstack 25
 10871  004B62                     
 10872                           ;dc_motor.c: 177: void short_reverse(struct DC_motor *mL, struct DC_motor *mR);dc_motor.
      +                          c: 178: { fullSpeedBack(mL, mR);
 10873  004B62  C026  F020         	movff	short_reverse@mL,fullSpeedBack@mL
 10874  004B66  C027  F021         	movff	short_reverse@mL+1,fullSpeedBack@mL+1
 10875  004B6A  C028  F022         	movff	short_reverse@mR,fullSpeedBack@mR
 10876  004B6E  C029  F023         	movff	short_reverse@mR+1,fullSpeedBack@mR+1
 10877  004B72  EC41  F022         	call	_fullSpeedBack	;wreg free
 10878  004B76                     
 10879                           ;dc_motor.c: 179:     _delay((unsigned long)((500)*(64000000/4000.0)));
 10880  004B76  0E29               	movlw	41
 10881  004B78  6E2B               	movwf	(??_short_reverse+1)^0,c
 10882  004B7A  0E96               	movlw	150
 10883  004B7C  6E2A               	movwf	??_short_reverse^0,c
 10884  004B7E  0E7F               	movlw	127
 10885  004B80                     u5327:
 10886  004B80  2EE8               	decfsz	wreg,f,c
 10887  004B82  D7FE               	bra	u5327
 10888  004B84  2E2A               	decfsz	??_short_reverse^0,f,c
 10889  004B86  D7FC               	bra	u5327
 10890  004B88  2E2B               	decfsz	(??_short_reverse+1)^0,f,c
 10891  004B8A  D7FA               	bra	u5327
 10892  004B8C  F000               	nop	
 10893  004B8E                     
 10894                           ;dc_motor.c: 180:     stop(mL,mR);
 10895  004B8E  C026  F01A         	movff	short_reverse@mL,stop@mL
 10896  004B92  C027  F01B         	movff	short_reverse@mL+1,stop@mL+1
 10897  004B96  C028  F01C         	movff	short_reverse@mR,stop@mR
 10898  004B9A  C029  F01D         	movff	short_reverse@mR+1,stop@mR+1
 10899  004B9E  ECA1  F022         	call	_stop	;wreg free
 10900  004BA2  0012               	return		;funcret
 10901  004BA4                     __end_of_short_reverse:
 10902                           	callstack 0
 10903                           
 10904 ;; *************** function _reverse_square *****************
 10905 ;; Defined at:
 10906 ;;		line 183 in file "dc_motor.c"
 10907 ;; Parameters:    Size  Location     Type
 10908 ;;  mL              2   37[COMRAM] PTR struct DC_motor
 10909 ;;		 -> main@motorL(10), 
 10910 ;;  mR              2   39[COMRAM] PTR struct DC_motor
 10911 ;;		 -> main@motorR(10), 
 10912 ;; Auto vars:     Size  Location     Type
 10913 ;;		None
 10914 ;; Return value:  Size  Location     Type
 10915 ;;                  1    wreg      void 
 10916 ;; Registers used:
 10917 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10918 ;; Tracked objects:
 10919 ;;		On entry : 0/0
 10920 ;;		On exit  : 0/0
 10921 ;;		Unchanged: 0/0
 10922 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10923 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10924 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10925 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10926 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10927 ;;Total ram usage:        6 bytes
 10928 ;; Hardware stack levels used: 1
 10929 ;; Hardware stack levels required when called: 4
 10930 ;; This function calls:
 10931 ;;		_fullSpeedBack
 10932 ;;		_stop
 10933 ;; This function is called by:
 10934 ;;		_action
 10935 ;; This function uses a non-reentrant model
 10936 ;;
 10937                           
 10938                           	psect	text60
 10939  004BA4                     __ptext60:
 10940                           	callstack 0
 10941  004BA4                     _reverse_square:
 10942                           	callstack 25
 10943  004BA4                     
 10944                           ;dc_motor.c: 183: void reverse_square(struct DC_motor *mL, struct DC_motor *mR);dc_motor
      +                          .c: 184: { fullSpeedBack(mL, mR);
 10945  004BA4  C026  F020         	movff	reverse_square@mL,fullSpeedBack@mL
 10946  004BA8  C027  F021         	movff	reverse_square@mL+1,fullSpeedBack@mL+1
 10947  004BAC  C028  F022         	movff	reverse_square@mR,fullSpeedBack@mR
 10948  004BB0  C029  F023         	movff	reverse_square@mR+1,fullSpeedBack@mR+1
 10949  004BB4  EC41  F022         	call	_fullSpeedBack	;wreg free
 10950  004BB8                     
 10951                           ;dc_motor.c: 185:     _delay((unsigned long)((1000)*(64000000/4000.0)));
 10952  004BB8  0E52               	movlw	82
 10953  004BBA  6E2B               	movwf	(??_reverse_square+1)^0,c
 10954  004BBC  0E2B               	movlw	43
 10955  004BBE  6E2A               	movwf	??_reverse_square^0,c
 10956  004BC0  0E00               	movlw	0
 10957  004BC2                     u5337:
 10958  004BC2  2EE8               	decfsz	wreg,f,c
 10959  004BC4  D7FE               	bra	u5337
 10960  004BC6  2E2A               	decfsz	??_reverse_square^0,f,c
 10961  004BC8  D7FC               	bra	u5337
 10962  004BCA  2E2B               	decfsz	(??_reverse_square+1)^0,f,c
 10963  004BCC  D7FA               	bra	u5337
 10964  004BCE  D000               	nop2	
 10965  004BD0                     
 10966                           ;dc_motor.c: 186:     stop(mL,mR);
 10967  004BD0  C026  F01A         	movff	reverse_square@mL,stop@mL
 10968  004BD4  C027  F01B         	movff	reverse_square@mL+1,stop@mL+1
 10969  004BD8  C028  F01C         	movff	reverse_square@mR,stop@mR
 10970  004BDC  C029  F01D         	movff	reverse_square@mR+1,stop@mR+1
 10971  004BE0  ECA1  F022         	call	_stop	;wreg free
 10972  004BE4  0012               	return		;funcret
 10973  004BE6                     __end_of_reverse_square:
 10974                           	callstack 0
 10975                           
 10976 ;; *************** function _fullSpeedBack *****************
 10977 ;; Defined at:
 10978 ;;		line 162 in file "dc_motor.c"
 10979 ;; Parameters:    Size  Location     Type
 10980 ;;  mL              2   31[COMRAM] PTR struct DC_motor
 10981 ;;		 -> main@motorL(10), 
 10982 ;;  mR              2   33[COMRAM] PTR struct DC_motor
 10983 ;;		 -> main@motorR(10), 
 10984 ;; Auto vars:     Size  Location     Type
 10985 ;;		None
 10986 ;; Return value:  Size  Location     Type
 10987 ;;                  1    wreg      void 
 10988 ;; Registers used:
 10989 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10990 ;; Tracked objects:
 10991 ;;		On entry : 0/0
 10992 ;;		On exit  : 0/0
 10993 ;;		Unchanged: 0/0
 10994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10995 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10996 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10997 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10998 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10999 ;;Total ram usage:        6 bytes
 11000 ;; Hardware stack levels used: 1
 11001 ;; Hardware stack levels required when called: 3
 11002 ;; This function calls:
 11003 ;;		_setMotorPWM
 11004 ;;		_stop
 11005 ;; This function is called by:
 11006 ;;		_short_reverse
 11007 ;;		_reverse_square
 11008 ;; This function uses a non-reentrant model
 11009 ;;
 11010                           
 11011                           	psect	text61
 11012  004482                     __ptext61:
 11013                           	callstack 0
 11014  004482                     _fullSpeedBack:
 11015                           	callstack 25
 11016  004482                     
 11017                           ;dc_motor.c: 162: void fullSpeedBack(struct DC_motor *mL, struct DC_motor *mR);dc_motor.
      +                          c: 163: {;dc_motor.c: 164:     mL->direction=0;
 11018  004482  EE20 F001          	lfsr	2,1
 11019  004486  5020               	movf	fullSpeedBack@mL^0,w,c
 11020  004488  26D9               	addwf	fsr2l,f,c
 11021  00448A  5021               	movf	(fullSpeedBack@mL+1)^0,w,c
 11022  00448C  22DA               	addwfc	fsr2h,f,c
 11023  00448E  0E00               	movlw	0
 11024  004490  6EDF               	movwf	indf2,c
 11025                           
 11026                           ;dc_motor.c: 165:     mR->direction=0;
 11027  004492  EE20 F001          	lfsr	2,1
 11028  004496  5022               	movf	fullSpeedBack@mR^0,w,c
 11029  004498  26D9               	addwf	fsr2l,f,c
 11030  00449A  5023               	movf	(fullSpeedBack@mR+1)^0,w,c
 11031  00449C  22DA               	addwfc	fsr2h,f,c
 11032  00449E  0E00               	movlw	0
 11033  0044A0  6EDF               	movwf	indf2,c
 11034                           
 11035                           ;dc_motor.c: 166:     while (mL->power<50 && mR->power<50){
 11036  0044A2  EF72  F022         	goto	l4174
 11037  0044A6                     l4166:
 11038                           
 11039                           ;dc_motor.c: 167:         mL->power += 10;
 11040  0044A6  C020  FFD9         	movff	fullSpeedBack@mL,fsr2l
 11041  0044AA  C021  FFDA         	movff	fullSpeedBack@mL+1,fsr2h
 11042  0044AE  0E0A               	movlw	10
 11043  0044B0  26DF               	addwf	indf2,f,c
 11044                           
 11045                           ;dc_motor.c: 168:         mR->power += 10;
 11046  0044B2  C022  FFD9         	movff	fullSpeedBack@mR,fsr2l
 11047  0044B6  C023  FFDA         	movff	fullSpeedBack@mR+1,fsr2h
 11048  0044BA  0E0A               	movlw	10
 11049  0044BC  26DF               	addwf	indf2,f,c
 11050  0044BE                     
 11051                           ;dc_motor.c: 169:         setMotorPWM(mL);
 11052  0044BE  C020  F00F         	movff	fullSpeedBack@mL,setMotorPWM@m
 11053  0044C2  C021  F010         	movff	fullSpeedBack@mL+1,setMotorPWM@m+1
 11054  0044C6  EC1A  F018         	call	_setMotorPWM	;wreg free
 11055  0044CA                     
 11056                           ;dc_motor.c: 170:         setMotorPWM(mR);
 11057  0044CA  C022  F00F         	movff	fullSpeedBack@mR,setMotorPWM@m
 11058  0044CE  C023  F010         	movff	fullSpeedBack@mR+1,setMotorPWM@m+1
 11059  0044D2  EC1A  F018         	call	_setMotorPWM	;wreg free
 11060  0044D6                     
 11061                           ;dc_motor.c: 171:         _delay((unsigned long)((10)*(64000000/4000.0)));
 11062  0044D6  0ED0               	movlw	208
 11063  0044D8  6E24               	movwf	??_fullSpeedBack^0,c
 11064  0044DA  0ECA               	movlw	202
 11065  0044DC                     u5347:
 11066  0044DC  2EE8               	decfsz	wreg,f,c
 11067  0044DE  D7FE               	bra	u5347
 11068  0044E0  2E24               	decfsz	??_fullSpeedBack^0,f,c
 11069  0044E2  D7FC               	bra	u5347
 11070  0044E4                     l4174:
 11071                           
 11072                           ;dc_motor.c: 166:     while (mL->power<50 && mR->power<50){
 11073  0044E4  C020  FFD9         	movff	fullSpeedBack@mL,fsr2l
 11074  0044E8  C021  FFDA         	movff	fullSpeedBack@mL+1,fsr2h
 11075  0044EC  0E32               	movlw	50
 11076  0044EE  60DF               	cpfslt	indf2,c
 11077  0044F0  EF7C  F022         	goto	u4061
 11078  0044F4  EF7E  F022         	goto	u4060
 11079  0044F8                     u4061:
 11080  0044F8  EF8A  F022         	goto	l4178
 11081  0044FC                     u4060:
 11082  0044FC  C022  FFD9         	movff	fullSpeedBack@mR,fsr2l
 11083  004500  C023  FFDA         	movff	fullSpeedBack@mR+1,fsr2h
 11084  004504  0E31               	movlw	49
 11085  004506  64DF               	cpfsgt	indf2,c
 11086  004508  EF88  F022         	goto	u4071
 11087  00450C  EF8A  F022         	goto	u4070
 11088  004510                     u4071:
 11089  004510  EF53  F022         	goto	l4166
 11090  004514                     u4070:
 11091  004514                     l4178:
 11092                           
 11093                           ;dc_motor.c: 173:     _delay((unsigned long)((500)*(64000000/4000.0)));
 11094  004514  0E29               	movlw	41
 11095  004516  6E25               	movwf	(??_fullSpeedBack+1)^0,c
 11096  004518  0E96               	movlw	150
 11097  00451A  6E24               	movwf	??_fullSpeedBack^0,c
 11098  00451C  0E7F               	movlw	127
 11099  00451E                     u5357:
 11100  00451E  2EE8               	decfsz	wreg,f,c
 11101  004520  D7FE               	bra	u5357
 11102  004522  2E24               	decfsz	??_fullSpeedBack^0,f,c
 11103  004524  D7FC               	bra	u5357
 11104  004526  2E25               	decfsz	(??_fullSpeedBack+1)^0,f,c
 11105  004528  D7FA               	bra	u5357
 11106  00452A  F000               	nop	
 11107  00452C                     
 11108                           ;dc_motor.c: 174:     stop(mL,mR);
 11109  00452C  C020  F01A         	movff	fullSpeedBack@mL,stop@mL
 11110  004530  C021  F01B         	movff	fullSpeedBack@mL+1,stop@mL+1
 11111  004534  C022  F01C         	movff	fullSpeedBack@mR,stop@mR
 11112  004538  C023  F01D         	movff	fullSpeedBack@mR+1,stop@mR+1
 11113  00453C  ECA1  F022         	call	_stop	;wreg free
 11114  004540  0012               	return		;funcret
 11115  004542                     __end_of_fullSpeedBack:
 11116                           	callstack 0
 11117                           
 11118 ;; *************** function _goback *****************
 11119 ;; Defined at:
 11120 ;;		line 83 in file "movement.c"
 11121 ;; Parameters:    Size  Location     Type
 11122 ;;  mL              2   45[COMRAM] PTR struct DC_motor
 11123 ;;		 -> main@motorL(10), 
 11124 ;;  mR              2   47[COMRAM] PTR struct DC_motor
 11125 ;;		 -> main@motorR(10), 
 11126 ;; Auto vars:     Size  Location     Type
 11127 ;;		None
 11128 ;; Return value:  Size  Location     Type
 11129 ;;                  1    wreg      void 
 11130 ;; Registers used:
 11131 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11132 ;; Tracked objects:
 11133 ;;		On entry : 0/0
 11134 ;;		On exit  : 0/0
 11135 ;;		Unchanged: 0/0
 11136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11137 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11138 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11139 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11140 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11141 ;;Total ram usage:        4 bytes
 11142 ;; Hardware stack levels used: 1
 11143 ;; Hardware stack levels required when called: 4
 11144 ;; This function calls:
 11145 ;;		_turnLeft
 11146 ;; This function is called by:
 11147 ;;		_action
 11148 ;; This function uses a non-reentrant model
 11149 ;;
 11150                           
 11151                           	psect	text62
 11152  004EFC                     __ptext62:
 11153                           	callstack 0
 11154  004EFC                     _goback:
 11155                           	callstack 25
 11156  004EFC                     
 11157                           ;movement.c: 83: void goback(struct DC_motor *mL, struct DC_motor *mR);movement.c: 84: {
      +                          ;movement.c: 85:     turnLeft(mL, mR, 180);
 11158  004EFC  C02E  F020         	movff	goback@mL,turnLeft@mL
 11159  004F00  C02F  F021         	movff	goback@mL+1,turnLeft@mL+1
 11160  004F04  C030  F022         	movff	goback@mR,turnLeft@mR
 11161  004F08  C031  F023         	movff	goback@mR+1,turnLeft@mR+1
 11162  004F0C  0EB4               	movlw	180
 11163  004F0E  6E24               	movwf	turnLeft@angle_left^0,c
 11164  004F10  EC40  F01E         	call	_turnLeft	;wreg free
 11165  004F14  0012               	return		;funcret
 11166  004F16                     __end_of_goback:
 11167                           	callstack 0
 11168                           
 11169 ;; *************** function _turnLeft *****************
 11170 ;; Defined at:
 11171 ;;		line 97 in file "dc_motor.c"
 11172 ;; Parameters:    Size  Location     Type
 11173 ;;  mL              2   31[COMRAM] PTR struct DC_motor
 11174 ;;		 -> main@motorL(10), 
 11175 ;;  mR              2   33[COMRAM] PTR struct DC_motor
 11176 ;;		 -> main@motorR(10), 
 11177 ;;  angle_left      1   35[COMRAM] unsigned char 
 11178 ;; Auto vars:     Size  Location     Type
 11179 ;;  i               2   41[COMRAM] unsigned int 
 11180 ;;  i               2   39[COMRAM] unsigned int 
 11181 ;;  delay           2   43[COMRAM] unsigned int 
 11182 ;;  delay_180       2   37[COMRAM] unsigned int 
 11183 ;; Return value:  Size  Location     Type
 11184 ;;                  1    wreg      void 
 11185 ;; Registers used:
 11186 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11187 ;; Tracked objects:
 11188 ;;		On entry : 0/0
 11189 ;;		On exit  : 0/0
 11190 ;;		Unchanged: 0/0
 11191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11192 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11193 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11194 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11195 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11196 ;;Total ram usage:       14 bytes
 11197 ;; Hardware stack levels used: 1
 11198 ;; Hardware stack levels required when called: 3
 11199 ;; This function calls:
 11200 ;;		_setMotorPWM
 11201 ;;		_stop
 11202 ;; This function is called by:
 11203 ;;		_action
 11204 ;;		_goback
 11205 ;;		_test_action
 11206 ;; This function uses a non-reentrant model
 11207 ;;
 11208                           
 11209                           	psect	text63
 11210  003C80                     __ptext63:
 11211                           	callstack 0
 11212  003C80                     _turnLeft:
 11213                           	callstack 26
 11214  003C80                     
 11215                           ;dc_motor.c: 97: void turnLeft(struct DC_motor *mL, struct DC_motor *mR, unsigned char a
      +                          ngle_left);dc_motor.c: 98: {;dc_motor.c: 99:       mL->direction=1;
 11216  003C80  EE20 F001          	lfsr	2,1
 11217  003C84  5020               	movf	turnLeft@mL^0,w,c
 11218  003C86  26D9               	addwf	fsr2l,f,c
 11219  003C88  5021               	movf	(turnLeft@mL+1)^0,w,c
 11220  003C8A  22DA               	addwfc	fsr2h,f,c
 11221  003C8C  0E01               	movlw	1
 11222  003C8E  6EDF               	movwf	indf2,c
 11223                           
 11224                           ;dc_motor.c: 100:       mR->direction=1;
 11225  003C90  EE20 F001          	lfsr	2,1
 11226  003C94  5022               	movf	turnLeft@mR^0,w,c
 11227  003C96  26D9               	addwf	fsr2l,f,c
 11228  003C98  5023               	movf	(turnLeft@mR+1)^0,w,c
 11229  003C9A  22DA               	addwfc	fsr2h,f,c
 11230  003C9C  0E01               	movlw	1
 11231  003C9E  6EDF               	movwf	indf2,c
 11232                           
 11233                           ;dc_motor.c: 101:       while (mR->power <25){
 11234  003CA0  EF71  F01E         	goto	l4142
 11235  003CA4                     l4134:
 11236                           
 11237                           ;dc_motor.c: 102:         mR->power += 5;
 11238  003CA4  C022  FFD9         	movff	turnLeft@mR,fsr2l
 11239  003CA8  C023  FFDA         	movff	turnLeft@mR+1,fsr2h
 11240  003CAC  0E05               	movlw	5
 11241  003CAE  26DF               	addwf	indf2,f,c
 11242                           
 11243                           ;dc_motor.c: 103:         mL->power = 0;
 11244  003CB0  C020  FFD9         	movff	turnLeft@mL,fsr2l
 11245  003CB4  C021  FFDA         	movff	turnLeft@mL+1,fsr2h
 11246  003CB8  0E00               	movlw	0
 11247  003CBA  6EDF               	movwf	indf2,c
 11248  003CBC                     
 11249                           ;dc_motor.c: 104:         setMotorPWM(mL);
 11250  003CBC  C020  F00F         	movff	turnLeft@mL,setMotorPWM@m
 11251  003CC0  C021  F010         	movff	turnLeft@mL+1,setMotorPWM@m+1
 11252  003CC4  EC1A  F018         	call	_setMotorPWM	;wreg free
 11253  003CC8                     
 11254                           ;dc_motor.c: 105:         setMotorPWM(mR);
 11255  003CC8  C022  F00F         	movff	turnLeft@mR,setMotorPWM@m
 11256  003CCC  C023  F010         	movff	turnLeft@mR+1,setMotorPWM@m+1
 11257  003CD0  EC1A  F018         	call	_setMotorPWM	;wreg free
 11258  003CD4                     
 11259                           ;dc_motor.c: 106:         _delay((unsigned long)((10)*(64000000/4000.0)));
 11260  003CD4  0ED0               	movlw	208
 11261  003CD6  6E25               	movwf	??_turnLeft^0,c
 11262  003CD8  0ECA               	movlw	202
 11263  003CDA                     u5367:
 11264  003CDA  2EE8               	decfsz	wreg,f,c
 11265  003CDC  D7FE               	bra	u5367
 11266  003CDE  2E25               	decfsz	??_turnLeft^0,f,c
 11267  003CE0  D7FC               	bra	u5367
 11268  003CE2                     l4142:
 11269                           
 11270                           ;dc_motor.c: 101:       while (mR->power <25){
 11271  003CE2  C022  FFD9         	movff	turnLeft@mR,fsr2l
 11272  003CE6  C023  FFDA         	movff	turnLeft@mR+1,fsr2h
 11273  003CEA  0E18               	movlw	24
 11274  003CEC  64DF               	cpfsgt	indf2,c
 11275  003CEE  EF7B  F01E         	goto	u4021
 11276  003CF2  EF7D  F01E         	goto	u4020
 11277  003CF6                     u4021:
 11278  003CF6  EF52  F01E         	goto	l4134
 11279  003CFA                     u4020:
 11280  003CFA                     
 11281                           ;dc_motor.c: 108:     unsigned int delay = angle_left * SENSITIVITY;
 11282  003CFA  5024               	movf	turnLeft@angle_left^0,w,c
 11283  003CFC  0100               	movlb	0	; () banked
 11284  003CFE  03F9               	mulwf	_SENSITIVITY& (0+255),b
 11285  003D00  CFF3 F02C          	movff	prodl,turnLeft@delay
 11286  003D04  CFF4 F02D          	movff	prodh,turnLeft@delay+1
 11287  003D08                     
 11288                           ; BSR set to: 0
 11289                           ;dc_motor.c: 109:     unsigned int delay_180 = delay + CALIBRATION_180;
 11290  003D08  0E14               	movlw	20
 11291  003D0A  242C               	addwf	turnLeft@delay^0,w,c
 11292  003D0C  6E26               	movwf	turnLeft@delay_180^0,c
 11293  003D0E  0E00               	movlw	0
 11294  003D10  202D               	addwfc	(turnLeft@delay+1)^0,w,c
 11295  003D12  6E27               	movwf	(turnLeft@delay_180+1)^0,c
 11296  003D14                     
 11297                           ; BSR set to: 0
 11298                           ;dc_motor.c: 110:     if (angle_left == 180){
 11299  003D14  0EB4               	movlw	180
 11300  003D16  1824               	xorwf	turnLeft@angle_left^0,w,c
 11301  003D18  A4D8               	btfss	status,2,c
 11302  003D1A  EF91  F01E         	goto	u4031
 11303  003D1E  EF93  F01E         	goto	u4030
 11304  003D22                     u4031:
 11305  003D22  EFB0  F01E         	goto	l4156
 11306  003D26                     u4030:
 11307  003D26                     
 11308                           ; BSR set to: 0
 11309                           ;dc_motor.c: 111:         for(unsigned int i = 0; i <delay_180; i++){_delay((unsigned lo
      +                          ng)((1)*(64000000/4000.0)));}
 11310  003D26  0E00               	movlw	0
 11311  003D28  6E29               	movwf	(turnLeft@i+1)^0,c
 11312  003D2A  0E00               	movlw	0
 11313  003D2C  6E28               	movwf	turnLeft@i^0,c
 11314  003D2E  EFA3  F01E         	goto	l314
 11315  003D32                     l4152:
 11316  003D32  0E15               	movlw	21
 11317  003D34  6E25               	movwf	??_turnLeft^0,c
 11318  003D36  0EC6               	movlw	198
 11319  003D38                     u5377:
 11320  003D38  2EE8               	decfsz	wreg,f,c
 11321  003D3A  D7FE               	bra	u5377
 11322  003D3C  2E25               	decfsz	??_turnLeft^0,f,c
 11323  003D3E  D7FC               	bra	u5377
 11324  003D40  D000               	nop2	
 11325  003D42  4A28               	infsnz	turnLeft@i^0,f,c
 11326  003D44  2A29               	incf	(turnLeft@i+1)^0,f,c
 11327  003D46                     l314:
 11328  003D46  5026               	movf	turnLeft@delay_180^0,w,c
 11329  003D48  5C28               	subwf	turnLeft@i^0,w,c
 11330  003D4A  5027               	movf	(turnLeft@delay_180+1)^0,w,c
 11331  003D4C  5829               	subwfb	(turnLeft@i+1)^0,w,c
 11332  003D4E  A0D8               	btfss	status,0,c
 11333  003D50  EFAC  F01E         	goto	u4041
 11334  003D54  EFAE  F01E         	goto	u4040
 11335  003D58                     u4041:
 11336  003D58  EF99  F01E         	goto	l4152
 11337  003D5C                     u4040:
 11338  003D5C  EFCB  F01E         	goto	l4162
 11339  003D60                     l4156:
 11340                           
 11341                           ; BSR set to: 0
 11342                           ;dc_motor.c: 114:         for(unsigned int i = 0; i < delay; i++){_delay((unsigned long)
      +                          ((1)*(64000000/4000.0)));}
 11343  003D60  0E00               	movlw	0
 11344  003D62  6E2B               	movwf	(turnLeft@i_1192+1)^0,c
 11345  003D64  0E00               	movlw	0
 11346  003D66  6E2A               	movwf	turnLeft@i_1192^0,c
 11347  003D68  EFC0  F01E         	goto	l318
 11348  003D6C                     l4158:
 11349  003D6C  0E15               	movlw	21
 11350  003D6E  6E25               	movwf	??_turnLeft^0,c
 11351  003D70  0EC6               	movlw	198
 11352  003D72                     u5387:
 11353  003D72  2EE8               	decfsz	wreg,f,c
 11354  003D74  D7FE               	bra	u5387
 11355  003D76  2E25               	decfsz	??_turnLeft^0,f,c
 11356  003D78  D7FC               	bra	u5387
 11357  003D7A  D000               	nop2	
 11358  003D7C  4A2A               	infsnz	turnLeft@i_1192^0,f,c
 11359  003D7E  2A2B               	incf	(turnLeft@i_1192+1)^0,f,c
 11360  003D80                     l318:
 11361  003D80  502C               	movf	turnLeft@delay^0,w,c
 11362  003D82  5C2A               	subwf	turnLeft@i_1192^0,w,c
 11363  003D84  502D               	movf	(turnLeft@delay+1)^0,w,c
 11364  003D86  582B               	subwfb	(turnLeft@i_1192+1)^0,w,c
 11365  003D88  A0D8               	btfss	status,0,c
 11366  003D8A  EFC9  F01E         	goto	u4051
 11367  003D8E  EFCB  F01E         	goto	u4050
 11368  003D92                     u4051:
 11369  003D92  EFB6  F01E         	goto	l4158
 11370  003D96                     u4050:
 11371  003D96                     l4162:
 11372                           
 11373                           ;dc_motor.c: 116:     stop(mL,mR);
 11374  003D96  C020  F01A         	movff	turnLeft@mL,stop@mL
 11375  003D9A  C021  F01B         	movff	turnLeft@mL+1,stop@mL+1
 11376  003D9E  C022  F01C         	movff	turnLeft@mR,stop@mR
 11377  003DA2  C023  F01D         	movff	turnLeft@mR+1,stop@mR+1
 11378  003DA6  ECA1  F022         	call	_stop	;wreg free
 11379  003DAA  0012               	return		;funcret
 11380  003DAC                     __end_of_turnLeft:
 11381                           	callstack 0
 11382                           
 11383 ;; *************** function _stop *****************
 11384 ;; Defined at:
 11385 ;;		line 84 in file "dc_motor.c"
 11386 ;; Parameters:    Size  Location     Type
 11387 ;;  mL              2   25[COMRAM] PTR struct DC_motor
 11388 ;;		 -> main@motorL(10), 
 11389 ;;  mR              2   27[COMRAM] PTR struct DC_motor
 11390 ;;		 -> main@motorR(10), 
 11391 ;; Auto vars:     Size  Location     Type
 11392 ;;		None
 11393 ;; Return value:  Size  Location     Type
 11394 ;;                  1    wreg      void 
 11395 ;; Registers used:
 11396 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11397 ;; Tracked objects:
 11398 ;;		On entry : 0/0
 11399 ;;		On exit  : 0/0
 11400 ;;		Unchanged: 0/0
 11401 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11402 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11403 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11404 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11405 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11406 ;;Total ram usage:        6 bytes
 11407 ;; Hardware stack levels used: 1
 11408 ;; Hardware stack levels required when called: 2
 11409 ;; This function calls:
 11410 ;;		_setMotorPWM
 11411 ;; This function is called by:
 11412 ;;		_turnLeft
 11413 ;;		_turnRight
 11414 ;;		_fullSpeedBack
 11415 ;;		_short_reverse
 11416 ;;		_reverse_square
 11417 ;;		_main
 11418 ;;		_short_burst
 11419 ;;		_action
 11420 ;;		_fullSpeedAhead_test
 11421 ;; This function uses a non-reentrant model
 11422 ;;
 11423                           
 11424                           	psect	text64
 11425  004542                     __ptext64:
 11426                           	callstack 0
 11427  004542                     _stop:
 11428                           	callstack 28
 11429  004542                     
 11430                           ;dc_motor.c: 84: void stop(struct DC_motor *mL, struct DC_motor *mR);dc_motor.c: 85: {;d
      +                          c_motor.c: 86:     while (mL->power >0 || mR->power >0){
 11431  004542  EFDA  F022         	goto	l3988
 11432  004546                     l3974:
 11433                           
 11434                           ;dc_motor.c: 87:         if (mL->power !=0){mL->power -= 5;}
 11435  004546  C01A  FFD9         	movff	stop@mL,fsr2l
 11436  00454A  C01B  FFDA         	movff	stop@mL+1,fsr2h
 11437  00454E  50DF               	movf	indf2,w,c
 11438  004550  B4D8               	btfsc	status,2,c
 11439  004552  EFAD  F022         	goto	u3771
 11440  004556  EFAF  F022         	goto	u3770
 11441  00455A                     u3771:
 11442  00455A  EFB5  F022         	goto	l3978
 11443  00455E                     u3770:
 11444  00455E  C01A  FFD9         	movff	stop@mL,fsr2l
 11445  004562  C01B  FFDA         	movff	stop@mL+1,fsr2h
 11446  004566  0E05               	movlw	5
 11447  004568  5EDF               	subwf	indf2,f,c
 11448  00456A                     l3978:
 11449                           
 11450                           ;dc_motor.c: 88:         if (mR->power !=0){mR->power -= 5;}
 11451  00456A  C01C  FFD9         	movff	stop@mR,fsr2l
 11452  00456E  C01D  FFDA         	movff	stop@mR+1,fsr2h
 11453  004572  50DF               	movf	indf2,w,c
 11454  004574  B4D8               	btfsc	status,2,c
 11455  004576  EFBF  F022         	goto	u3781
 11456  00457A  EFC1  F022         	goto	u3780
 11457  00457E                     u3781:
 11458  00457E  EFC7  F022         	goto	l3982
 11459  004582                     u3780:
 11460  004582  C01C  FFD9         	movff	stop@mR,fsr2l
 11461  004586  C01D  FFDA         	movff	stop@mR+1,fsr2h
 11462  00458A  0E05               	movlw	5
 11463  00458C  5EDF               	subwf	indf2,f,c
 11464  00458E                     l3982:
 11465                           
 11466                           ;dc_motor.c: 89:         setMotorPWM(mL);
 11467  00458E  C01A  F00F         	movff	stop@mL,setMotorPWM@m
 11468  004592  C01B  F010         	movff	stop@mL+1,setMotorPWM@m+1
 11469  004596  EC1A  F018         	call	_setMotorPWM	;wreg free
 11470  00459A                     
 11471                           ;dc_motor.c: 90:         setMotorPWM(mR);
 11472  00459A  C01C  F00F         	movff	stop@mR,setMotorPWM@m
 11473  00459E  C01D  F010         	movff	stop@mR+1,setMotorPWM@m+1
 11474  0045A2  EC1A  F018         	call	_setMotorPWM	;wreg free
 11475  0045A6                     
 11476                           ;dc_motor.c: 91:         _delay((unsigned long)((10)*(64000000/4000.0)));
 11477  0045A6  0ED0               	movlw	208
 11478  0045A8  6E1E               	movwf	??_stop^0,c
 11479  0045AA  0ECA               	movlw	202
 11480  0045AC                     u5397:
 11481  0045AC  2EE8               	decfsz	wreg,f,c
 11482  0045AE  D7FE               	bra	u5397
 11483  0045B0  2E1E               	decfsz	??_stop^0,f,c
 11484  0045B2  D7FC               	bra	u5397
 11485  0045B4                     l3988:
 11486                           
 11487                           ;dc_motor.c: 86:     while (mL->power >0 || mR->power >0){
 11488  0045B4  C01A  FFD9         	movff	stop@mL,fsr2l
 11489  0045B8  C01B  FFDA         	movff	stop@mL+1,fsr2h
 11490  0045BC  50DF               	movf	indf2,w,c
 11491  0045BE  A4D8               	btfss	status,2,c
 11492  0045C0  EFE4  F022         	goto	u3791
 11493  0045C4  EFE6  F022         	goto	u3790
 11494  0045C8                     u3791:
 11495  0045C8  EFA3  F022         	goto	l3974
 11496  0045CC                     u3790:
 11497  0045CC  C01C  FFD9         	movff	stop@mR,fsr2l
 11498  0045D0  C01D  FFDA         	movff	stop@mR+1,fsr2h
 11499  0045D4  50DF               	movf	indf2,w,c
 11500  0045D6  A4D8               	btfss	status,2,c
 11501  0045D8  EFF0  F022         	goto	u3801
 11502  0045DC  EFF2  F022         	goto	u3800
 11503  0045E0                     u3801:
 11504  0045E0  EFA3  F022         	goto	l3974
 11505  0045E4                     u3800:
 11506  0045E4                     
 11507                           ;dc_motor.c: 93:     _delay((unsigned long)((100)*(64000000/4000.0)));
 11508  0045E4  0E09               	movlw	9
 11509  0045E6  6E1F               	movwf	(??_stop+1)^0,c
 11510  0045E8  0E1E               	movlw	30
 11511  0045EA  6E1E               	movwf	??_stop^0,c
 11512  0045EC  0EE4               	movlw	228
 11513  0045EE                     u5407:
 11514  0045EE  2EE8               	decfsz	wreg,f,c
 11515  0045F0  D7FE               	bra	u5407
 11516  0045F2  2E1E               	decfsz	??_stop^0,f,c
 11517  0045F4  D7FC               	bra	u5407
 11518  0045F6  2E1F               	decfsz	(??_stop+1)^0,f,c
 11519  0045F8  D7FA               	bra	u5407
 11520  0045FA  D000               	nop2	
 11521  0045FC  0012               	return		;funcret
 11522  0045FE                     __end_of_stop:
 11523                           	callstack 0
 11524                           
 11525 ;; *************** function _setMotorPWM *****************
 11526 ;; Defined at:
 11527 ;;		line 61 in file "dc_motor.c"
 11528 ;; Parameters:    Size  Location     Type
 11529 ;;  m               2   14[COMRAM] PTR struct DC_motor
 11530 ;;		 -> main@motorR(10), main@motorL(10), 
 11531 ;; Auto vars:     Size  Location     Type
 11532 ;;  PWMduty         2   23[COMRAM] int 
 11533 ;; Return value:  Size  Location     Type
 11534 ;;                  1    wreg      void 
 11535 ;; Registers used:
 11536 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11537 ;; Tracked objects:
 11538 ;;		On entry : 0/0
 11539 ;;		On exit  : 0/0
 11540 ;;		Unchanged: 0/0
 11541 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11542 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11543 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11544 ;;      Temps:          7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11545 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11546 ;;Total ram usage:       11 bytes
 11547 ;; Hardware stack levels used: 1
 11548 ;; Hardware stack levels required when called: 1
 11549 ;; This function calls:
 11550 ;;		___awdiv
 11551 ;;		___wmul
 11552 ;; This function is called by:
 11553 ;;		_stop
 11554 ;;		_turnLeft
 11555 ;;		_turnRight
 11556 ;;		_fullSpeedAhead
 11557 ;;		_fullSpeedBack
 11558 ;; This function uses a non-reentrant model
 11559 ;;
 11560                           
 11561                           	psect	text65
 11562  003034                     __ptext65:
 11563                           	callstack 0
 11564  003034                     _setMotorPWM:
 11565                           	callstack 28
 11566  003034                     
 11567                           ;dc_motor.c: 61: void setMotorPWM(struct DC_motor *m);dc_motor.c: 62: {;dc_motor.c: 63: 
      +                           int PWMduty;;dc_motor.c: 65:  if (m->direction){
 11568  003034  EE20 F001          	lfsr	2,1
 11569  003038  500F               	movf	setMotorPWM@m^0,w,c
 11570  00303A  26D9               	addwf	fsr2l,f,c
 11571  00303C  5010               	movf	(setMotorPWM@m+1)^0,w,c
 11572  00303E  22DA               	addwfc	fsr2h,f,c
 11573  003040  50DF               	movf	indf2,w,c
 11574  003042  B4D8               	btfsc	status,2,c
 11575  003044  EF26  F018         	goto	u3441
 11576  003048  EF28  F018         	goto	u3440
 11577  00304C                     u3441:
 11578  00304C  EF59  F018         	goto	l3730
 11579  003050                     u3440:
 11580  003050                     
 11581                           ;dc_motor.c: 67:   PWMduty=m->PWMperiod - ((int)(m->power)*(m->PWMperiod))/100;
 11582  003050  C00F  FFD9         	movff	setMotorPWM@m,fsr2l
 11583  003054  C010  FFDA         	movff	setMotorPWM@m+1,fsr2h
 11584  003058  50DF               	movf	indf2,w,c
 11585  00305A  6E11               	movwf	??_setMotorPWM^0,c
 11586  00305C  5011               	movf	??_setMotorPWM^0,w,c
 11587  00305E  6E01               	movwf	___wmul@multiplier^0,c
 11588  003060  6A02               	clrf	(___wmul@multiplier+1)^0,c
 11589  003062  EE20 F007          	lfsr	2,7
 11590  003066  500F               	movf	setMotorPWM@m^0,w,c
 11591  003068  26D9               	addwf	fsr2l,f,c
 11592  00306A  5010               	movf	(setMotorPWM@m+1)^0,w,c
 11593  00306C  22DA               	addwfc	fsr2h,f,c
 11594  00306E  CFDE F003          	movff	postinc2,___wmul@multiplicand
 11595  003072  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
 11596  003076  ECFE  F026         	call	___wmul	;wreg free
 11597  00307A  C001  F007         	movff	?___wmul,___awdiv@dividend
 11598  00307E  C002  F008         	movff	?___wmul+1,___awdiv@dividend+1
 11599  003082  0E00               	movlw	0
 11600  003084  6E0A               	movwf	(___awdiv@divisor+1)^0,c
 11601  003086  0E64               	movlw	100
 11602  003088  6E09               	movwf	___awdiv@divisor^0,c
 11603  00308A  ECDF  F021         	call	___awdiv	;wreg free
 11604  00308E  EE20 F007          	lfsr	2,7
 11605  003092  500F               	movf	setMotorPWM@m^0,w,c
 11606  003094  26D9               	addwf	fsr2l,f,c
 11607  003096  5010               	movf	(setMotorPWM@m+1)^0,w,c
 11608  003098  22DA               	addwfc	fsr2h,f,c
 11609  00309A  CFDE F012          	movff	postinc2,??_setMotorPWM+1
 11610  00309E  CFDD F013          	movff	postdec2,??_setMotorPWM+2
 11611  0030A2  5007               	movf	?___awdiv^0,w,c
 11612  0030A4  5C12               	subwf	(??_setMotorPWM+1)^0,w,c
 11613  0030A6  6E18               	movwf	setMotorPWM@PWMduty^0,c
 11614  0030A8  5008               	movf	(?___awdiv+1)^0,w,c
 11615  0030AA  5813               	subwfb	(??_setMotorPWM+2)^0,w,c
 11616  0030AC  6E19               	movwf	(setMotorPWM@PWMduty+1)^0,c
 11617                           
 11618                           ;dc_motor.c: 68:  }
 11619  0030AE  EF7C  F018         	goto	l3732
 11620  0030B2                     l3730:
 11621                           
 11622                           ;dc_motor.c: 71:   PWMduty=((int)(m->power)*(m->PWMperiod))/100;
 11623  0030B2  C00F  FFD9         	movff	setMotorPWM@m,fsr2l
 11624  0030B6  C010  FFDA         	movff	setMotorPWM@m+1,fsr2h
 11625  0030BA  50DF               	movf	indf2,w,c
 11626  0030BC  6E11               	movwf	??_setMotorPWM^0,c
 11627  0030BE  5011               	movf	??_setMotorPWM^0,w,c
 11628  0030C0  6E01               	movwf	___wmul@multiplier^0,c
 11629  0030C2  6A02               	clrf	(___wmul@multiplier+1)^0,c
 11630  0030C4  EE20 F007          	lfsr	2,7
 11631  0030C8  500F               	movf	setMotorPWM@m^0,w,c
 11632  0030CA  26D9               	addwf	fsr2l,f,c
 11633  0030CC  5010               	movf	(setMotorPWM@m+1)^0,w,c
 11634  0030CE  22DA               	addwfc	fsr2h,f,c
 11635  0030D0  CFDE F003          	movff	postinc2,___wmul@multiplicand
 11636  0030D4  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
 11637  0030D8  ECFE  F026         	call	___wmul	;wreg free
 11638  0030DC  C001  F007         	movff	?___wmul,___awdiv@dividend
 11639  0030E0  C002  F008         	movff	?___wmul+1,___awdiv@dividend+1
 11640  0030E4  0E00               	movlw	0
 11641  0030E6  6E0A               	movwf	(___awdiv@divisor+1)^0,c
 11642  0030E8  0E64               	movlw	100
 11643  0030EA  6E09               	movwf	___awdiv@divisor^0,c
 11644  0030EC  ECDF  F021         	call	___awdiv	;wreg free
 11645  0030F0  C007  F018         	movff	?___awdiv,setMotorPWM@PWMduty
 11646  0030F4  C008  F019         	movff	?___awdiv+1,setMotorPWM@PWMduty+1
 11647  0030F8                     l3732:
 11648                           
 11649                           ;dc_motor.c: 74:  *(m->dutyHighByte) = PWMduty;
 11650  0030F8  EE20 F002          	lfsr	2,2
 11651  0030FC  500F               	movf	setMotorPWM@m^0,w,c
 11652  0030FE  26D9               	addwf	fsr2l,f,c
 11653  003100  5010               	movf	(setMotorPWM@m+1)^0,w,c
 11654  003102  22DA               	addwfc	fsr2h,f,c
 11655  003104  CFDE F011          	movff	postinc2,??_setMotorPWM
 11656  003108  CFDD F012          	movff	postdec2,??_setMotorPWM+1
 11657  00310C  C011  FFD9         	movff	??_setMotorPWM,fsr2l
 11658  003110  C012  FFDA         	movff	??_setMotorPWM+1,fsr2h
 11659  003114  C018  FFDF         	movff	setMotorPWM@PWMduty,indf2
 11660  003118                     
 11661                           ;dc_motor.c: 76:  if (m->direction){
 11662  003118  EE20 F001          	lfsr	2,1
 11663  00311C  500F               	movf	setMotorPWM@m^0,w,c
 11664  00311E  26D9               	addwf	fsr2l,f,c
 11665  003120  5010               	movf	(setMotorPWM@m+1)^0,w,c
 11666  003122  22DA               	addwfc	fsr2h,f,c
 11667  003124  50DF               	movf	indf2,w,c
 11668  003126  B4D8               	btfsc	status,2,c
 11669  003128  EF98  F018         	goto	u3451
 11670  00312C  EF9A  F018         	goto	u3450
 11671  003130                     u3451:
 11672  003130  EFCF  F018         	goto	l3738
 11673  003134                     u3450:
 11674  003134                     
 11675                           ;dc_motor.c: 77:   *(m->dir_LAT) = *(m->dir_LAT) | (1<<(m->dir_pin));
 11676  003134  EE20 F004          	lfsr	2,4
 11677  003138  500F               	movf	setMotorPWM@m^0,w,c
 11678  00313A  26D9               	addwf	fsr2l,f,c
 11679  00313C  5010               	movf	(setMotorPWM@m+1)^0,w,c
 11680  00313E  22DA               	addwfc	fsr2h,f,c
 11681  003140  CFDE F011          	movff	postinc2,??_setMotorPWM
 11682  003144  CFDD F012          	movff	postdec2,??_setMotorPWM+1
 11683  003148  C011  FFD9         	movff	??_setMotorPWM,fsr2l
 11684  00314C  C012  FFDA         	movff	??_setMotorPWM+1,fsr2h
 11685  003150  EE10 F004          	lfsr	1,4
 11686  003154  500F               	movf	setMotorPWM@m^0,w,c
 11687  003156  26E1               	addwf	fsr1l,f,c
 11688  003158  5010               	movf	(setMotorPWM@m+1)^0,w,c
 11689  00315A  22E2               	addwfc	fsr1h,f,c
 11690  00315C  CFE6 F013          	movff	postinc1,??_setMotorPWM+2
 11691  003160  CFE5 F014          	movff	postdec1,??_setMotorPWM+3
 11692  003164  C013  FFE1         	movff	??_setMotorPWM+2,fsr1l
 11693  003168  C014  FFE2         	movff	??_setMotorPWM+3,fsr1h
 11694  00316C  50E7               	movf	indf1,w,c
 11695  00316E  6E15               	movwf	(??_setMotorPWM+4)^0,c
 11696  003170  EE10 F006          	lfsr	1,6
 11697  003174  500F               	movf	setMotorPWM@m^0,w,c
 11698  003176  26E1               	addwf	fsr1l,f,c
 11699  003178  5010               	movf	(setMotorPWM@m+1)^0,w,c
 11700  00317A  22E2               	addwfc	fsr1h,f,c
 11701  00317C  50E7               	movf	indf1,w,c
 11702  00317E  6E16               	movwf	(??_setMotorPWM+5)^0,c
 11703  003180  0E01               	movlw	1
 11704  003182  6E17               	movwf	(??_setMotorPWM+6)^0,c
 11705  003184  2A16               	incf	(??_setMotorPWM+5)^0,f,c
 11706  003186  EFC7  F018         	goto	u3464
 11707  00318A                     u3465:
 11708  00318A  90D8               	bcf	status,0,c
 11709  00318C  3617               	rlcf	(??_setMotorPWM+6)^0,f,c
 11710  00318E                     u3464:
 11711  00318E  2E16               	decfsz	(??_setMotorPWM+5)^0,f,c
 11712  003190  EFC5  F018         	goto	u3465
 11713  003194  5017               	movf	(??_setMotorPWM+6)^0,w,c
 11714  003196  1015               	iorwf	(??_setMotorPWM+4)^0,w,c
 11715  003198  6EDF               	movwf	indf2,c
 11716                           
 11717                           ;dc_motor.c: 78:  } else {
 11718  00319A  EF03  F019         	goto	l299
 11719  00319E                     l3738:
 11720                           
 11721                           ;dc_motor.c: 79:   *(m->dir_LAT) = *(m->dir_LAT) & (~(1<<(m->dir_pin)));
 11722  00319E  EE20 F004          	lfsr	2,4
 11723  0031A2  500F               	movf	setMotorPWM@m^0,w,c
 11724  0031A4  26D9               	addwf	fsr2l,f,c
 11725  0031A6  5010               	movf	(setMotorPWM@m+1)^0,w,c
 11726  0031A8  22DA               	addwfc	fsr2h,f,c
 11727  0031AA  CFDE F011          	movff	postinc2,??_setMotorPWM
 11728  0031AE  CFDD F012          	movff	postdec2,??_setMotorPWM+1
 11729  0031B2  C011  FFD9         	movff	??_setMotorPWM,fsr2l
 11730  0031B6  C012  FFDA         	movff	??_setMotorPWM+1,fsr2h
 11731  0031BA  EE10 F004          	lfsr	1,4
 11732  0031BE  500F               	movf	setMotorPWM@m^0,w,c
 11733  0031C0  26E1               	addwf	fsr1l,f,c
 11734  0031C2  5010               	movf	(setMotorPWM@m+1)^0,w,c
 11735  0031C4  22E2               	addwfc	fsr1h,f,c
 11736  0031C6  CFE6 F013          	movff	postinc1,??_setMotorPWM+2
 11737  0031CA  CFE5 F014          	movff	postdec1,??_setMotorPWM+3
 11738  0031CE  C013  FFE1         	movff	??_setMotorPWM+2,fsr1l
 11739  0031D2  C014  FFE2         	movff	??_setMotorPWM+3,fsr1h
 11740  0031D6  50E7               	movf	indf1,w,c
 11741  0031D8  6E15               	movwf	(??_setMotorPWM+4)^0,c
 11742  0031DA  EE10 F006          	lfsr	1,6
 11743  0031DE  500F               	movf	setMotorPWM@m^0,w,c
 11744  0031E0  26E1               	addwf	fsr1l,f,c
 11745  0031E2  5010               	movf	(setMotorPWM@m+1)^0,w,c
 11746  0031E4  22E2               	addwfc	fsr1h,f,c
 11747  0031E6  50E7               	movf	indf1,w,c
 11748  0031E8  6E16               	movwf	(??_setMotorPWM+5)^0,c
 11749  0031EA  0E01               	movlw	1
 11750  0031EC  6E17               	movwf	(??_setMotorPWM+6)^0,c
 11751  0031EE  2A16               	incf	(??_setMotorPWM+5)^0,f,c
 11752  0031F0  EFFC  F018         	goto	u3474
 11753  0031F4                     u3475:
 11754  0031F4  90D8               	bcf	status,0,c
 11755  0031F6  3617               	rlcf	(??_setMotorPWM+6)^0,f,c
 11756  0031F8                     u3474:
 11757  0031F8  2E16               	decfsz	(??_setMotorPWM+5)^0,f,c
 11758  0031FA  EFFA  F018         	goto	u3475
 11759  0031FE  5017               	movf	(??_setMotorPWM+6)^0,w,c
 11760  003200  0AFF               	xorlw	255
 11761  003202  1415               	andwf	(??_setMotorPWM+4)^0,w,c
 11762  003204  6EDF               	movwf	indf2,c
 11763  003206                     l299:
 11764  003206  0012               	return		;funcret
 11765  003208                     __end_of_setMotorPWM:
 11766                           	callstack 0
 11767                           
 11768 ;; *************** function ___wmul *****************
 11769 ;; Defined at:
 11770 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\Umul16.c"
 11771 ;; Parameters:    Size  Location     Type
 11772 ;;  multiplier      2    0[COMRAM] unsigned int 
 11773 ;;  multiplicand    2    2[COMRAM] unsigned int 
 11774 ;; Auto vars:     Size  Location     Type
 11775 ;;  product         2    4[COMRAM] unsigned int 
 11776 ;; Return value:  Size  Location     Type
 11777 ;;                  2    0[COMRAM] unsigned int 
 11778 ;; Registers used:
 11779 ;;		wreg, status,2, status,0, prodl, prodh
 11780 ;; Tracked objects:
 11781 ;;		On entry : 0/0
 11782 ;;		On exit  : 0/0
 11783 ;;		Unchanged: 0/0
 11784 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11785 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11786 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11787 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11788 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11789 ;;Total ram usage:        6 bytes
 11790 ;; Hardware stack levels used: 1
 11791 ;; This function calls:
 11792 ;;		Nothing
 11793 ;; This function is called by:
 11794 ;;		_setMotorPWM
 11795 ;; This function uses a non-reentrant model
 11796 ;;
 11797                           
 11798                           	psect	text66
 11799  004DFC                     __ptext66:
 11800                           	callstack 0
 11801  004DFC                     ___wmul:
 11802                           	callstack 28
 11803  004DFC  5001               	movf	___wmul@multiplier^0,w,c
 11804  004DFE  0203               	mulwf	___wmul@multiplicand^0,c
 11805  004E00  CFF3 F005          	movff	prodl,___wmul@product
 11806  004E04  CFF4 F006          	movff	prodh,___wmul@product+1
 11807  004E08  5001               	movf	___wmul@multiplier^0,w,c
 11808  004E0A  0204               	mulwf	(___wmul@multiplicand+1)^0,c
 11809  004E0C  50F3               	movf	243,w,c
 11810  004E0E  2606               	addwf	(___wmul@product+1)^0,f,c
 11811  004E10  5002               	movf	(___wmul@multiplier+1)^0,w,c
 11812  004E12  0203               	mulwf	___wmul@multiplicand^0,c
 11813  004E14  50F3               	movf	243,w,c
 11814  004E16  2606               	addwf	(___wmul@product+1)^0,f,c
 11815  004E18  C005  F001         	movff	___wmul@product,?___wmul
 11816  004E1C  C006  F002         	movff	___wmul@product+1,?___wmul+1
 11817  004E20  0012               	return		;funcret
 11818  004E22                     __end_of___wmul:
 11819                           	callstack 0
 11820                           
 11821 ;; *************** function ___awdiv *****************
 11822 ;; Defined at:
 11823 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\awdiv.c"
 11824 ;; Parameters:    Size  Location     Type
 11825 ;;  dividend        2    6[COMRAM] int 
 11826 ;;  divisor         2    8[COMRAM] int 
 11827 ;; Auto vars:     Size  Location     Type
 11828 ;;  quotient        2   12[COMRAM] int 
 11829 ;;  sign            1   11[COMRAM] unsigned char 
 11830 ;;  counter         1   10[COMRAM] unsigned char 
 11831 ;; Return value:  Size  Location     Type
 11832 ;;                  2    6[COMRAM] int 
 11833 ;; Registers used:
 11834 ;;		wreg, status,2, status,0
 11835 ;; Tracked objects:
 11836 ;;		On entry : 0/0
 11837 ;;		On exit  : 0/0
 11838 ;;		Unchanged: 0/0
 11839 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11840 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11841 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11842 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11843 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11844 ;;Total ram usage:        8 bytes
 11845 ;; Hardware stack levels used: 1
 11846 ;; This function calls:
 11847 ;;		Nothing
 11848 ;; This function is called by:
 11849 ;;		_setMotorPWM
 11850 ;; This function uses a non-reentrant model
 11851 ;;
 11852                           
 11853                           	psect	text67
 11854  0043BE                     __ptext67:
 11855                           	callstack 0
 11856  0043BE                     ___awdiv:
 11857                           	callstack 28
 11858  0043BE  0E00               	movlw	0
 11859  0043C0  6E0C               	movwf	___awdiv@sign^0,c
 11860  0043C2  BE0A               	btfsc	(___awdiv@divisor+1)^0,7,c
 11861  0043C4  EFE8  F021         	goto	u3210
 11862  0043C8  EFE6  F021         	goto	u3211
 11863  0043CC                     u3211:
 11864  0043CC  EFEE  F021         	goto	l3598
 11865  0043D0                     u3210:
 11866  0043D0  6C09               	negf	___awdiv@divisor^0,c
 11867  0043D2  1E0A               	comf	(___awdiv@divisor+1)^0,f,c
 11868  0043D4  B0D8               	btfsc	status,0,c
 11869  0043D6  2A0A               	incf	(___awdiv@divisor+1)^0,f,c
 11870  0043D8  0E01               	movlw	1
 11871  0043DA  6E0C               	movwf	___awdiv@sign^0,c
 11872  0043DC                     l3598:
 11873  0043DC  BE08               	btfsc	(___awdiv@dividend+1)^0,7,c
 11874  0043DE  EFF5  F021         	goto	u3220
 11875  0043E2  EFF3  F021         	goto	u3221
 11876  0043E6                     u3221:
 11877  0043E6  EFFB  F021         	goto	l3604
 11878  0043EA                     u3220:
 11879  0043EA  6C07               	negf	___awdiv@dividend^0,c
 11880  0043EC  1E08               	comf	(___awdiv@dividend+1)^0,f,c
 11881  0043EE  B0D8               	btfsc	status,0,c
 11882  0043F0  2A08               	incf	(___awdiv@dividend+1)^0,f,c
 11883  0043F2  0E01               	movlw	1
 11884  0043F4  1A0C               	xorwf	___awdiv@sign^0,f,c
 11885  0043F6                     l3604:
 11886  0043F6  0E00               	movlw	0
 11887  0043F8  6E0E               	movwf	(___awdiv@quotient+1)^0,c
 11888  0043FA  0E00               	movlw	0
 11889  0043FC  6E0D               	movwf	___awdiv@quotient^0,c
 11890  0043FE  5009               	movf	___awdiv@divisor^0,w,c
 11891  004400  100A               	iorwf	(___awdiv@divisor+1)^0,w,c
 11892  004402  B4D8               	btfsc	status,2,c
 11893  004404  EF06  F022         	goto	u3231
 11894  004408  EF08  F022         	goto	u3230
 11895  00440C                     u3231:
 11896  00440C  EF30  F022         	goto	l3626
 11897  004410                     u3230:
 11898  004410  0E01               	movlw	1
 11899  004412  6E0B               	movwf	___awdiv@counter^0,c
 11900  004414  EF10  F022         	goto	l3612
 11901  004418                     l3610:
 11902  004418  90D8               	bcf	status,0,c
 11903  00441A  3609               	rlcf	___awdiv@divisor^0,f,c
 11904  00441C  360A               	rlcf	(___awdiv@divisor+1)^0,f,c
 11905  00441E  2A0B               	incf	___awdiv@counter^0,f,c
 11906  004420                     l3612:
 11907  004420  AE0A               	btfss	(___awdiv@divisor+1)^0,7,c
 11908  004422  EF15  F022         	goto	u3241
 11909  004426  EF17  F022         	goto	u3240
 11910  00442A                     u3241:
 11911  00442A  EF0C  F022         	goto	l3610
 11912  00442E                     u3240:
 11913  00442E                     l3614:
 11914  00442E  90D8               	bcf	status,0,c
 11915  004430  360D               	rlcf	___awdiv@quotient^0,f,c
 11916  004432  360E               	rlcf	(___awdiv@quotient+1)^0,f,c
 11917  004434  5009               	movf	___awdiv@divisor^0,w,c
 11918  004436  5C07               	subwf	___awdiv@dividend^0,w,c
 11919  004438  500A               	movf	(___awdiv@divisor+1)^0,w,c
 11920  00443A  5808               	subwfb	(___awdiv@dividend+1)^0,w,c
 11921  00443C  A0D8               	btfss	status,0,c
 11922  00443E  EF23  F022         	goto	u3251
 11923  004442  EF25  F022         	goto	u3250
 11924  004446                     u3251:
 11925  004446  EF2A  F022         	goto	l3622
 11926  00444A                     u3250:
 11927  00444A  5009               	movf	___awdiv@divisor^0,w,c
 11928  00444C  5E07               	subwf	___awdiv@dividend^0,f,c
 11929  00444E  500A               	movf	(___awdiv@divisor+1)^0,w,c
 11930  004450  5A08               	subwfb	(___awdiv@dividend+1)^0,f,c
 11931  004452  800D               	bsf	___awdiv@quotient^0,0,c
 11932  004454                     l3622:
 11933  004454  90D8               	bcf	status,0,c
 11934  004456  320A               	rrcf	(___awdiv@divisor+1)^0,f,c
 11935  004458  3209               	rrcf	___awdiv@divisor^0,f,c
 11936  00445A  2E0B               	decfsz	___awdiv@counter^0,f,c
 11937  00445C  EF17  F022         	goto	l3614
 11938  004460                     l3626:
 11939  004460  500C               	movf	___awdiv@sign^0,w,c
 11940  004462  B4D8               	btfsc	status,2,c
 11941  004464  EF36  F022         	goto	u3261
 11942  004468  EF38  F022         	goto	u3260
 11943  00446C                     u3261:
 11944  00446C  EF3C  F022         	goto	l3630
 11945  004470                     u3260:
 11946  004470  6C0D               	negf	___awdiv@quotient^0,c
 11947  004472  1E0E               	comf	(___awdiv@quotient+1)^0,f,c
 11948  004474  B0D8               	btfsc	status,0,c
 11949  004476  2A0E               	incf	(___awdiv@quotient+1)^0,f,c
 11950  004478                     l3630:
 11951  004478  C00D  F007         	movff	___awdiv@quotient,?___awdiv
 11952  00447C  C00E  F008         	movff	___awdiv@quotient+1,?___awdiv+1
 11953  004480  0012               	return		;funcret
 11954  004482                     __end_of___awdiv:
 11955                           	callstack 0
 11956                           
 11957                           	psect	rparam
 11958  0000                     
 11959                           	psect	idloc
 11960                           
 11961                           ;Config register IDLOC0 @ 0x200000
 11962                           ;	unspecified, using default values
 11963  200000                     	org	2097152
 11964  200000  0FFF               	dw	4095
 11965                           
 11966                           ;Config register IDLOC1 @ 0x200002
 11967                           ;	unspecified, using default values
 11968  200002                     	org	2097154
 11969  200002  0FFF               	dw	4095
 11970                           
 11971                           ;Config register IDLOC2 @ 0x200004
 11972                           ;	unspecified, using default values
 11973  200004                     	org	2097156
 11974  200004  0FFF               	dw	4095
 11975                           
 11976                           ;Config register IDLOC3 @ 0x200006
 11977                           ;	unspecified, using default values
 11978  200006                     	org	2097158
 11979  200006  0FFF               	dw	4095
 11980                           
 11981                           ;Config register IDLOC4 @ 0x200008
 11982                           ;	unspecified, using default values
 11983  200008                     	org	2097160
 11984  200008  0FFF               	dw	4095
 11985                           
 11986                           ;Config register IDLOC5 @ 0x20000A
 11987                           ;	unspecified, using default values
 11988  20000A                     	org	2097162
 11989  20000A  0FFF               	dw	4095
 11990                           
 11991                           ;Config register IDLOC6 @ 0x20000C
 11992                           ;	unspecified, using default values
 11993  20000C                     	org	2097164
 11994  20000C  0FFF               	dw	4095
 11995                           
 11996                           ;Config register IDLOC7 @ 0x20000E
 11997                           ;	unspecified, using default values
 11998  20000E                     	org	2097166
 11999  20000E  0FFF               	dw	4095
 12000                           
 12001                           	psect	config
 12002                           
 12003                           ;Config register CONFIG1L @ 0x300000
 12004                           ;	External Oscillator mode Selection bits
 12005                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
 12006                           ;	Power-up default value for COSC bits
 12007                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
 12008  300000                     	org	3145728
 12009  300000  AA                 	db	170
 12010                           
 12011                           ;Config register CONFIG1H @ 0x300001
 12012                           ;	unspecified, using default values
 12013                           ;	Clock Out Enable bit
 12014                           ;	CLKOUTEN = 0x1, unprogrammed default
 12015                           ;	Clock Switch Enable bit
 12016                           ;	CSWEN = 0x1, unprogrammed default
 12017                           ;	Fail-Safe Clock Monitor Enable bit
 12018                           ;	FCMEN = 0x1, unprogrammed default
 12019  300001                     	org	3145729
 12020  300001  FF                 	db	255
 12021                           
 12022                           ;Config register CONFIG2L @ 0x300002
 12023                           ;	unspecified, using default values
 12024                           ;	Master Clear Enable bit
 12025                           ;	MCLRE = 0x1, unprogrammed default
 12026                           ;	Power-up Timer Enable bit
 12027                           ;	PWRTE = 0x1, unprogrammed default
 12028                           ;	Low-power BOR enable bit
 12029                           ;	LPBOREN = 0x1, unprogrammed default
 12030                           ;	Brown-out Reset Enable bits
 12031                           ;	BOREN = 0x3, unprogrammed default
 12032  300002                     	org	3145730
 12033  300002  FF                 	db	255
 12034                           
 12035                           ;Config register CONFIG2H @ 0x300003
 12036                           ;	unspecified, using default values
 12037                           ;	Brown Out Reset Voltage selection bits
 12038                           ;	BORV = 0x3, unprogrammed default
 12039                           ;	ZCD Disable bit
 12040                           ;	ZCD = 0x1, unprogrammed default
 12041                           ;	PPSLOCK bit One-Way Set Enable bit
 12042                           ;	PPS1WAY = 0x1, unprogrammed default
 12043                           ;	Stack Full/Underflow Reset Enable bit
 12044                           ;	STVREN = 0x1, unprogrammed default
 12045                           ;	Debugger Enable bit
 12046                           ;	DEBUG = 0x1, unprogrammed default
 12047                           ;	Extended Instruction Set Enable bit
 12048                           ;	XINST = 0x1, unprogrammed default
 12049  300003                     	org	3145731
 12050  300003  FF                 	db	255
 12051                           
 12052                           ;Config register CONFIG3L @ 0x300004
 12053                           ;	WDT Period Select bits
 12054                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 12055                           ;	WDT operating mode
 12056                           ;	WDTE = OFF, WDT Disabled
 12057  300004                     	org	3145732
 12058  300004  9F                 	db	159
 12059                           
 12060                           ;Config register CONFIG3H @ 0x300005
 12061                           ;	unspecified, using default values
 12062                           ;	WDT Window Select bits
 12063                           ;	WDTCWS = 0x7, unprogrammed default
 12064                           ;	WDT input clock selector
 12065                           ;	WDTCCS = 0x7, unprogrammed default
 12066  300005                     	org	3145733
 12067  300005  FF                 	db	255
 12068                           
 12069                           ;Config register CONFIG4L @ 0x300006
 12070                           ;	unspecified, using default values
 12071                           ;	Write Protection Block 0
 12072                           ;	WRT0 = 0x1, unprogrammed default
 12073                           ;	Write Protection Block 1
 12074                           ;	WRT1 = 0x1, unprogrammed default
 12075                           ;	Write Protection Block 2
 12076                           ;	WRT2 = 0x1, unprogrammed default
 12077                           ;	Write Protection Block 3
 12078                           ;	WRT3 = 0x1, unprogrammed default
 12079                           ;	Write Protection Block 3
 12080                           ;	WRT4 = 0x1, unprogrammed default
 12081                           ;	Write Protection Block 3
 12082                           ;	WRT5 = 0x1, unprogrammed default
 12083                           ;	Write Protection Block 3
 12084                           ;	WRT6 = 0x1, unprogrammed default
 12085                           ;	Write Protection Block 3
 12086                           ;	WRT7 = 0x1, unprogrammed default
 12087  300006                     	org	3145734
 12088  300006  FF                 	db	255
 12089                           
 12090                           ;Config register CONFIG4H @ 0x300007
 12091                           ;	unspecified, using default values
 12092                           ;	Configuration Register Write Protection bit
 12093                           ;	WRTC = 0x1, unprogrammed default
 12094                           ;	Boot Block Write Protection bit
 12095                           ;	WRTB = 0x1, unprogrammed default
 12096                           ;	Data EEPROM Write Protection bit
 12097                           ;	WRTD = 0x1, unprogrammed default
 12098                           ;	Scanner Enable bit
 12099                           ;	SCANE = 0x1, unprogrammed default
 12100                           ;	Low Voltage Programming Enable bit
 12101                           ;	LVP = 0x1, unprogrammed default
 12102  300007                     	org	3145735
 12103  300007  FF                 	db	255
 12104                           
 12105                           ;Config register CONFIG5L @ 0x300008
 12106                           ;	unspecified, using default values
 12107                           ;	UserNVM Program Memory Code Protection bit
 12108                           ;	CP = 0x1, unprogrammed default
 12109                           ;	DataNVM Memory Code Protection bit
 12110                           ;	CPD = 0x1, unprogrammed default
 12111  300008                     	org	3145736
 12112  300008  FF                 	db	255
 12113                           
 12114                           ;Config register CONFIG5H @ 0x300009
 12115                           ;	unspecified, using default values
 12116  300009                     	org	3145737
 12117  300009  FF                 	db	255
 12118                           
 12119                           ;Config register CONFIG6L @ 0x30000A
 12120                           ;	unspecified, using default values
 12121                           ;	Table Read Protection Block 0
 12122                           ;	EBTR0 = 0x1, unprogrammed default
 12123                           ;	Table Read Protection Block 1
 12124                           ;	EBTR1 = 0x1, unprogrammed default
 12125                           ;	Table Read Protection Block 2
 12126                           ;	EBTR2 = 0x1, unprogrammed default
 12127                           ;	Table Read Protection Block 3
 12128                           ;	EBTR3 = 0x1, unprogrammed default
 12129                           ;	Table Read Protection Block 4
 12130                           ;	EBTR4 = 0x1, unprogrammed default
 12131                           ;	Table Read Protection Block 5
 12132                           ;	EBTR5 = 0x1, unprogrammed default
 12133                           ;	Table Read Protection Block 6
 12134                           ;	EBTR6 = 0x1, unprogrammed default
 12135                           ;	Table Read Protection Block 7
 12136                           ;	EBTR7 = 0x1, unprogrammed default
 12137  30000A                     	org	3145738
 12138  30000A  FF                 	db	255
 12139                           
 12140                           ;Config register CONFIG6H @ 0x30000B
 12141                           ;	unspecified, using default values
 12142                           ;	Boot Block Table Read Protection bit
 12143                           ;	EBTRB = 0x1, unprogrammed default
 12144  30000B                     	org	3145739
 12145  30000B  FF                 	db	255
 12146                           tosu	equ	0xFFF
 12147                           tosh	equ	0xFFE
 12148                           tosl	equ	0xFFD
 12149                           stkptr	equ	0xFFC
 12150                           pclatu	equ	0xFFB
 12151                           pclath	equ	0xFFA
 12152                           pcl	equ	0xFF9
 12153                           tblptru	equ	0xFF8
 12154                           tblptrh	equ	0xFF7
 12155                           tblptrl	equ	0xFF6
 12156                           tablat	equ	0xFF5
 12157                           prodh	equ	0xFF4
 12158                           prodl	equ	0xFF3
 12159                           indf0	equ	0xFEF
 12160                           postinc0	equ	0xFEE
 12161                           postdec0	equ	0xFED
 12162                           preinc0	equ	0xFEC
 12163                           plusw0	equ	0xFEB
 12164                           fsr0h	equ	0xFEA
 12165                           fsr0l	equ	0xFE9
 12166                           wreg	equ	0xFE8
 12167                           indf1	equ	0xFE7
 12168                           postinc1	equ	0xFE6
 12169                           postdec1	equ	0xFE5
 12170                           preinc1	equ	0xFE4
 12171                           plusw1	equ	0xFE3
 12172                           fsr1h	equ	0xFE2
 12173                           fsr1l	equ	0xFE1
 12174                           bsr	equ	0xFE0
 12175                           indf2	equ	0xFDF
 12176                           postinc2	equ	0xFDE
 12177                           postdec2	equ	0xFDD
 12178                           preinc2	equ	0xFDC
 12179                           plusw2	equ	0xFDB
 12180                           fsr2h	equ	0xFDA
 12181                           fsr2l	equ	0xFD9
 12182                           status	equ	0xFD8

Data Sizes:
    Strings     77
    Constant    4
    Data        2
    BSS         149
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     95      95
    BANK0           160    136     154
    BANK1           256     49     182
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    distance_measure@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    distance_measure@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_14(CODE[5]), STR_13(CODE[6]), STR_2(CODE[12]), STR_1(CODE[14]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 14
		 -> STR_14(CODE[5]), STR_13(CODE[6]), STR_2(CODE[12]), STR_1(CODE[14]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_14(CODE[5]), STR_13(CODE[6]), STR_2(CODE[12]), STR_1(CODE[14]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 100
		 -> voltage_display@buf(COMRAM[80]), color_predict@buf(BANK0[100]), check_color_reading@buf(BANK0[100]), color_display@buf(BANK0[100]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S2334$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S2334$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    goback@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    goback@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    action@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    action@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    short_burst@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    short_burst@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    motorR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    motorR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhhllll[1]), PWM6DCH(BITBIGSFRhhhllll[1]), 

    motorL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    motorL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhhllll[1]), PWM6DCH(BITBIGSFRhhhllll[1]), 

    sendStringSerial4@string	PTR unsigned char  size(2) Largest target is 100
		 -> voltage_display@buf(COMRAM[80]), color_predict@buf(BANK0[100]), check_color_reading@buf(BANK0[100]), color_display@buf(BANK0[100]), 

    voltage_display@m.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    voltage_display@m.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhhllll[1]), PWM6DCH(BITBIGSFRhhhllll[1]), 

    voltage_read@m.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    voltage_read@m.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhhllll[1]), PWM6DCH(BITBIGSFRhhhllll[1]), 

    reverse_square@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    reverse_square@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    short_reverse@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    short_reverse@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    fullSpeedBack@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    fullSpeedBack@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhhllll[1]), PWM6DCH(BITBIGSFRhhhllll[1]), 

    fullSpeedBack@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    fullSpeedBack@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    fullSpeedBack@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhhllll[1]), PWM6DCH(BITBIGSFRhhhllll[1]), 

    fullSpeedBack@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    fullSpeedAhead@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    fullSpeedAhead@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhhllll[1]), PWM6DCH(BITBIGSFRhhhllll[1]), 

    fullSpeedAhead@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    fullSpeedAhead@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    fullSpeedAhead@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhhllll[1]), PWM6DCH(BITBIGSFRhhhllll[1]), 

    fullSpeedAhead@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    turnRight@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turnRight@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhhllll[1]), PWM6DCH(BITBIGSFRhhhllll[1]), 

    turnRight@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    turnRight@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turnRight@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhhllll[1]), PWM6DCH(BITBIGSFRhhhllll[1]), 

    turnRight@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    turnLeft@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turnLeft@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhhllll[1]), PWM6DCH(BITBIGSFRhhhllll[1]), 

    turnLeft@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    turnLeft@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turnLeft@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhhllll[1]), PWM6DCH(BITBIGSFRhhhllll[1]), 

    turnLeft@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    stop@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    stop@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhhllll[1]), PWM6DCH(BITBIGSFRhhhllll[1]), 

    stop@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    stop@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    stop@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhhllll[1]), PWM6DCH(BITBIGSFRhhhllll[1]), 

    stop@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    setMotorPWM@m.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    setMotorPWM@m.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhhllll[1]), PWM6DCH(BITBIGSFRhhhllll[1]), 

    setMotorPWM@m	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), main@motorL(BANK1[10]), 

    initDCmotors_parameter@motorR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    initDCmotors_parameter@motorR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhhllll[1]), PWM6DCH(BITBIGSFRhhhllll[1]), 

    initDCmotors_parameter@motorR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    initDCmotors_parameter@motorL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    initDCmotors_parameter@motorL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhhllll[1]), PWM6DCH(BITBIGSFRhhhllll[1]), 

    initDCmotors_parameter@motorL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    motorR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    motorR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhhllll[1]), PWM6DCH(BITBIGSFRhhhllll[1]), 

    S225DC_motor$dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    motorL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    S225DC_motor$dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhhllll[1]), PWM6DCH(BITBIGSFRhhhllll[1]), 

    motorL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhhllll[1]), PWM6DCH(BITBIGSFRhhhllll[1]), 

    verify_color@w	PTR struct white_card size(2) Largest target is 20
		 -> main@white(BANK1[20]), 

    verify_color@m	PTR struct color_rgb size(2) Largest target is 8
		 -> main@rgb(BANK1[8]), 

    detect_color@w	PTR struct white_card size(2) Largest target is 20
		 -> main@white(BANK1[20]), 

    detect_color@m	PTR struct color_rgb size(2) Largest target is 8
		 -> main@rgb(BANK1[8]), 

    calibrate_white@w	PTR struct white_card size(2) Largest target is 20
		 -> main@white(BANK1[20]), 

    color_display@m	PTR struct color_rgb size(2) Largest target is 8
		 -> main@rgb(BANK1[8]), 

    color_data_collection@m	PTR struct color_rgb size(2) Largest target is 8
		 -> main@rgb(BANK1[8]), 

    read_color@m	PTR struct color_rgb size(2) Largest target is 8
		 -> main@rgb(BANK1[8]), 


Critical Paths under _main in COMRAM

    _detect_color->_compare
    _lroundf->___fltol
    _roundf->___flmul
    ___flsub->___fladd
    ___flmul->___fldiv
    ___fltol->_roundf
    ___fldiv->___xxtofl
    _short_burst->_stop
    _fullSpeedAhead->_setMotorPWM
    _distance_measure->_color_read_Clear
    _color_data_collection->_color_display
    _read_color->_color_read_Blue
    _read_color->_color_read_Clear
    _read_color->_color_read_Green
    _read_color->_color_read_Red
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _sendStringSerial4->_sendCharSerial4
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _calibrate_white->_color_read_Blue
    _calibrate_white->_color_read_Clear
    _calibrate_white->_color_read_Green
    _calibrate_white->_color_read_Red
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Clear->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _action->_goback
    _turnRight->_stop
    _short_reverse->_fullSpeedBack
    _reverse_square->_fullSpeedBack
    _fullSpeedBack->_stop
    _goback->_turnLeft
    _turnLeft->_stop
    _stop->_setMotorPWM
    _setMotorPWM->___awdiv
    ___awdiv->___wmul

Critical Paths under _main in BANK0

    _main->_color_data_collection
    _verify_color->_detect_color
    _detect_color->_compare
    _lroundf->___fltol
    _compare->_lroundf
    _color_data_collection->_color_predict
    _color_predict->_sprintf
    _color_display->_sprintf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                52    52      0  141978
                                            134 BANK0      2     2      0
                                              0 BANK1     49    49      0
                  _I2C_2_Master_Init
                              _LED_C
                             _action
                    _calibrate_white
                   _color_click_init
              _color_data_collection
                      _color_display
                       _detect_color
                   _distance_measure
                     _fullSpeedAhead
                    _initDCmotorsPWM
             _initDCmotors_parameter
                         _initUSART4
                           _pin_init
                         _read_color
                        _short_burst
                               _stop
                       _verify_color
 ---------------------------------------------------------------------------------
 (1) _verify_color                                         9     5      4   26066
                                             49 BANK0      9     5      4
                       _detect_color
 ---------------------------------------------------------------------------------
 (2) _detect_color                                        33    29      4   25812
                                             16 BANK0     33    29      4
                              _LED_B
                              _LED_G
                              _LED_R
                            ___fldiv
                            ___flmul
                           ___xxtofl
                            _compare
                            _lroundf
                         _read_color
 ---------------------------------------------------------------------------------
 (3) _lroundf                                              4     0      4   12792
                                              6 BANK0      4     0      4
                            ___fldiv (ARG)
                            ___fltol
                           ___xxtofl (ARG)
                             _roundf
 ---------------------------------------------------------------------------------
 (4) _roundf                                              26    22      4   11477
                                             64 COMRAM    26    22      4
                            ___fladd
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    3649
                                             16 COMRAM     8     0      8
                            ___fladd
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    3326
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4     197
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    3180
                                             39 COMRAM    25    17      8
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8     486
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (4) ___fltol                                             10     6      4     305
                                             90 COMRAM     4     0      4
                                              0 BANK0      6     6      0
                             _roundf (ARG)
 ---------------------------------------------------------------------------------
 (3) _compare                                              7     1      6    2392
                                             94 COMRAM     1     1      0
                                             10 BANK0      6     0      6
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
                            _lroundf (ARG)
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4    1758
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (3) ___fldiv                                             25    17      8    2683
                                             14 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _short_burst                                          6     2      4    6486
                                             31 COMRAM     6     2      4
                     _fullSpeedAhead
                               _stop
 ---------------------------------------------------------------------------------
 (2) _fullSpeedAhead                                       5     1      4    2667
                                             25 COMRAM     5     1      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (1) _pin_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initDCmotors_parameter                               4     0      4     416
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2      76
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _distance_measure                                    13     9      4     316
                                             11 COMRAM    13     9      4
                              _LED_C
                   _color_read_Clear
 ---------------------------------------------------------------------------------
 (1) _color_data_collection                               12    10      2   17126
                                             89 COMRAM     4     2      2
                                            126 BANK0      8     8      0
                              _LED_B
                              _LED_C
                              _LED_G
                              _LED_R
                      _color_display
                      _color_predict
                         _read_color
 ---------------------------------------------------------------------------------
 (3) _read_color                                           2     0      2    1224
                                             11 COMRAM     2     0      2
                    _color_read_Blue
                   _color_read_Clear
                   _color_read_Green
                     _color_read_Red
 ---------------------------------------------------------------------------------
 (2) _color_predict                                      102   102      0    7585
                                             25 BANK0    101   101      0
                  _sendStringSerial4
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _color_display                                      102   100      2    7877
                                             87 COMRAM     2     0      2
                                             25 BANK0    100   100      0
                  _sendStringSerial4
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             27    15     12    6912
                                              0 BANK0     25    13     12
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6    6105
                                             79 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           42    36      6    5751
                                             63 COMRAM    16    10      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                36    26     10    4358
                                             27 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    2709
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1235
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                9     5      4     834
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (2) _sendStringSerial4                                    2     0      2     371
                                              1 COMRAM     2     0      2
                    _sendCharSerial4
 ---------------------------------------------------------------------------------
 (3) _sendCharSerial4                                      1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _LED_C                                                2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     294
                                              4 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     294
                                              2 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _calibrate_white                                      4     2      2     748
                                             11 COMRAM     4     2      2
                              _LED_B
                              _LED_G
                              _LED_R
                    _color_read_Blue
                   _color_read_Clear
                   _color_read_Green
                     _color_read_Red
 ---------------------------------------------------------------------------------
 (4) _color_read_Red                                       7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (4) _color_read_Green                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (4) _color_read_Clear                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (4) _color_read_Blue                                      7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (5) _I2C_2_Master_Write                                   1     1      0      22
                                              1 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (5) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (5) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (5) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (5) _I2C_2_Master_Read                                    3     3      0      45
                                              1 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (6) _I2C_2_Master_Idle                                    1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _LED_R                                                2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _LED_G                                                2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _LED_B                                                2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _action                                               5     1      4   48609
                                             49 COMRAM     5     1      4
                             _goback
                     _reverse_square
                      _short_reverse
                               _stop
                           _turnLeft
                          _turnRight
 ---------------------------------------------------------------------------------
 (2) _turnRight                                           14     9      5    7340
                                             31 COMRAM    14     9      5
                        _setMotorPWM
                               _stop
 ---------------------------------------------------------------------------------
 (2) _short_reverse                                        6     2      4   10717
                                             37 COMRAM     6     2      4
                      _fullSpeedBack
                               _stop
 ---------------------------------------------------------------------------------
 (2) _reverse_square                                       6     2      4   10109
                                             37 COMRAM     6     2      4
                      _fullSpeedBack
                               _stop
 ---------------------------------------------------------------------------------
 (3) _fullSpeedBack                                        6     2      4    6138
                                             31 COMRAM     6     2      4
                        _setMotorPWM
                               _stop
 ---------------------------------------------------------------------------------
 (2) _goback                                               4     0      4    7992
                                             45 COMRAM     4     0      4
                           _turnLeft
 ---------------------------------------------------------------------------------
 (2) _turnLeft                                            14     9      5    7796
                                             31 COMRAM    14     9      5
                        _setMotorPWM
                               _stop
 ---------------------------------------------------------------------------------
 (1) _stop                                                 6     2      4    3579
                                             25 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _setMotorPWM                                         11     9      2    2035
                                             14 COMRAM    11     9      2
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     447
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     496
                                              6 COMRAM     8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_2_Master_Init
   _LED_C
   _action
     _goback
       _turnLeft
         _setMotorPWM
           ___awdiv
             ___wmul (ARG)
           ___wmul
         _stop
           _setMotorPWM
     _reverse_square
       _fullSpeedBack
         _setMotorPWM
         _stop
       _stop
     _short_reverse
       _fullSpeedBack
       _stop
     _stop
     _turnLeft
     _turnRight
       _setMotorPWM
       _stop
   _calibrate_white
     _LED_B
     _LED_G
     _LED_R
     _color_read_Blue
       _I2C_2_Master_Read
         _I2C_2_Master_Idle
       _I2C_2_Master_RepStart
         _I2C_2_Master_Idle
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
     _color_read_Clear
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Green
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Red
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _color_data_collection
     _LED_B
     _LED_C
     _LED_G
     _LED_R
     _color_display
       _sendStringSerial4
         _sendCharSerial4
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                 _strlen
             _fputc
     _color_predict
       _sendStringSerial4
       _sprintf
     _read_color
       _color_read_Blue
       _color_read_Clear
       _color_read_Green
       _color_read_Red
   _color_display
   _detect_color
     _LED_B
     _LED_G
     _LED_R
     ___fldiv
       ___xxtofl (ARG)
     ___flmul
       ___fldiv (ARG)
       ___xxtofl (ARG)
     ___xxtofl
     _compare
       ___fldiv (ARG)
       ___flmul (ARG)
       ___xxtofl (ARG)
       _lroundf (ARG)
         ___fldiv (ARG)
         ___fltol (ARG)
           _roundf (ARG)
             ___fladd
             ___flge
             ___flmul
             ___flneg
             ___flsub
               ___fladd
         ___xxtofl (ARG)
         _roundf (ARG)
     _lroundf
     _read_color
   _distance_measure
     _LED_C
     _color_read_Clear
   _fullSpeedAhead
     _setMotorPWM
   _initDCmotorsPWM
   _initDCmotors_parameter
   _initUSART4
   _pin_init
   _read_color
   _short_burst
     _fullSpeedAhead
     _stop
   _stop
   _verify_color
     _detect_color

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      59        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     31      B6       7       71.1%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     88      9A       5       96.2%
BITBIGSFRllhhl      6E      0       0      44        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5F      5F       1      100.0%
BITBIGSFRhhhh       40      0       0      32        0.0%
BITBIGSFRlllllh     32      0       0      49        0.0%
BITBIGSFRlllllh     2A      0       0      53        0.0%
BITBIGSFRllllll     26      0       0      57        0.0%
BITBIGSFRllllhh     20      0       0      47        0.0%
BITBIGSFRhhhlh      17      0       0      33        0.0%
BITBIGSFRllhhhh     14      0       0      41        0.0%
BITBIGSFRhhhlll     11      0       0      35        0.0%
BITBIGSFRlllllh      F      0       0      55        0.0%
BITBIGSFRllllhl      C      0       0      48        0.0%
BITBIGSFRlllllh      9      0       0      54        0.0%
BITBIGSFRllhlll      8      0       0      45        0.0%
BITBIGSFRllhhhl      6      0       0      43        0.0%
BITBIGSFRllllll      6      0       0      56        0.0%
BITBIGSFRlllllh      6      0       0      52        0.0%
BITBIGSFRhhhlll      6      0       0      36        0.0%
BITBIGSFRlllllh      5      0       0      51        0.0%
BITBIGSFRllhhhh      3      0       0      42        0.0%
BITBIGSFRlllllh      3      0       0      50        0.0%
BITBIGSFRhlh         1      0       0      37        0.0%
BITBIGSFRhhhllh      1      0       0      34        0.0%
BITBIGSFRlhh         1      0       0      39        0.0%
BITBIGSFRlllh        1      0       0      46        0.0%
BITBIGSFRlhl         1      0       0      40        0.0%
BITBIGSFRhll         1      0       0      38        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1AF      58        0.0%
DATA                 0      0     1AF       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.35 build 20211206165544 
Symbol Table                                                                                   Thu Mar 10 17:31:25 2022

                ?_short_reverse 0026                  _color_read_Red 48CA                    ___fldiv@aexp 0027  
                  ___fldiv@bexp 0026                    ___fldiv@sign 001F                 _color_read_Blue 49BA  
                 _color_predict 3FB8                              l51 4D78                              l60 4A08  
                            l54 4E60                              l63 4968                              l72 4E80  
                            l81 4EA0                              l57 4918                              l66 49B8  
                            l75 4E40                              l92 33BC                              l69 481E  
                            l78 4EC0                              l95 4700                    ___awdiv@sign 000C  
           ___wmul@multiplicand 0003                _color_read_Clear 496A                _color_read_Green 491A  
                           l111 4094                             l200 4DD4                             l114 3B52  
                           l203 4DFA                             l212 4F42                             l206 4F4C  
                           l215 4F38                             l321 3DAA                             l209 4F56  
                           l153 1B1A                             l161 47C0                             l314 3D46  
                           l218 4B60                             l170 4A52                             l307 45FC  
                           l332 3C54                             l412 4EDE                             l156 4CD4  
                           l421 4F18                             l157 4CD6                             l149 1B18  
                           l318 3D80                             l430 4DA8                             l335 3C7E  
                           l343 4690                             l360 4BE4                             l328 3C1A  
                           l424 4F2C                             l169 4A50                             l354 4540  
                           l603 4876                             l292 4166                             l620 4EFA  
                           l357 4BA2                             l197 4DD2                             l614 3032  
                           l623 4F14                             l289 4B1E                             l626 4E20  
                           l299 3206                             l740 38AC                             l900 4D0E  
                           l753 3A10                             l923 3EB2                             l857 4480  
                           l891 3F70                             l896 3FB6               verify_color@color 0099  
              ?_calibrate_white 000C        __end_of_distance_measure 4A54                             _abs 4BE6  
                           _pad 42F8                             wreg 000FE8                    ___flmul@aexp 0039  
                  ___flmul@bexp 003A                    ___flmul@sign 0034                    ___flmul@temp 003F  
                  ___flmul@prod 003B                    ___fltol@exp1 0065                            l1210 29AC  
                          ?_abs 0013                            l1221 2A6A                            l1213 2970  
                          l1222 2A58                            l1302 4C9C                            l1400 4230  
                          l1208 2B4C                            l1240 20A0                            l1250 22FC  
                          l1154 1D0A                            l1411 4F5A                            l1219 29F2  
                          l1171 1E24                            l1163 1FDA                            l1155 1CF8  
                          l1244 2404                            l1180 1EF4                            l1156 1CBE  
                          l1341 43BC                            l1309 48C8                            l1181 1EE2  
                          l1247 2296                            l1408 4ADC                            l1432 4D44  
                          l1336 433E                            l4000 3DC4                            l1281 3414  
                          l1257 23C6                            l1249 230E                            l4010 3E14  
                          l1339 4380                            l1347 2BEE                            l1419 27B2  
                          l3300 3822                            l1380 475A                            l4100 488A  
                          l1284 3570                            l4020 3E3E                            l4012 3E18  
                          l4004 3DD8                            l1196 4A98                            l1349 2BF6  
                          l1381 4762                            l4110 4D7A                            l3310 386C  
                          l3302 3842                            l1374 3724                            l4102 4892  
                          l4030 3E66                            l4022 3E48                            l4014 3E26  
                          l4006 3E02                            l1367 2E30                            l1295 3508  
                          l4112 4D7E                            l3312 388C                            l3304 3844  
                          l3320 38C0                            l3240 4168                            l4104 489A  
                          l4200 281A                            l1288 34AC                            l4032 3E72  
                          l4024 3E52                            l4008 3E04                            l3400 1B68  
                          l1385 4C1C                            l4114 4D8C                            l3306 3856  
                          l3330 3930                            l3322 38E0                            l3250 41EA  
                          l3242 417A                            l4106 48B6                            l4210 2846  
                          l4202 2820                            l4122 4C9E                            l4034 3E82  
                          l3410 1B9A                            l3402 1B6A                            l4050 24BE  
                          l4042 2406                            l5010 4298                            l4140 3CD4  
                          l4132 3C80                            l4116 4D90                            l3308 385C  
                          l3340 39A8                            l3332 3938                            l3324 38E4  
                          l3316 38AE                            l1388 4C24                            l3244 418C  
                          l3260 4ABC                            l4300 2AF2                            l4220 2880  
                          l4212 2856                            l4204 2826                            l4124 4CA2  
                          l4036 3E92                            l3500 1D68                            l3420 1BC2  
                          l3412 1B9C                            l3404 1B72                            l4060 2604  
                          l4052 24E2                            l4044 2426                            l5012 42B0  
                          l5004 4268                            l4150 3D26                            l4134 3CA4  
                          l4142 3CE2                            l3342 39BA                            l3334 394C  
                          l3326 38F2                            l3318 38B2                            l3246 4196  
                          l3254 4A9A                            l3262 4D10                            l4310 2B40  
                          l4302 2B0C                            l4222 2896                            l4214 2866  
                          l4206 2834                            l4126 4CBA                            l4038 3EA2  
                          l3510 1D92                            l3502 1D74                            l3430 1BFC  
                          l3422 1BD2                            l3414 1BA2                            l3406 1B82  
                          l4070 277E                            l4062 2670                            l4054 24FE  
                          l4046 246E                            l4118 4C64                            l5014 42C2  
                          l5006 4274                            l3600 43EA                            l4160 3D7C  
                          l4152 3D32                            l4144 3CFA                            l4136 3CBC  
                          l3280 375C                            l3272 3726                            l3336 395A  
                          l3344 39C0                            l3328 3912                            l3248 41B4  
                          l3256 4AA6                            l3264 4D1C                            l3360 4336  
                          l3352 42F8                            l4080 4718                            l4400 3FF0  
                          l4312 2B42                            l4304 2B28                            l4240 28EA  
                          l4224 28A6                            l4232 28C6                            l4216 2868  
                          l4208 2836                            l4320 33C0                            l4128 4CD0  
                          l3520 1E04                            l3504 1D78                            l3512 1D98  
                          l3440 1C28                            l3432 1C0E                            l3424 1BE2  
                          l3416 1BB0                            l3408 1B88                            l4072 27A2  
                          l4064 26A2                            l4048 2482                            l5016 42D6  
                          l5008 4284                            l3610 4418                            l3602 43F2  
                          l4162 3D96                            l4154 3D42                            l4146 3D08  
                          l4138 3CC8                            l4170 44CA                            l4090 4EA2  
                          l3290 37B8                            l3282 376A                            l3274 372A  
                          l3346 39D0                            l3338 3988                            l3258 4AB8  
                          l3266 4D20                            l3370 43A4                            l3362 434A  
                          l3354 4308                            l4082 473E                            l4410 4026  
                          l4402 4002                            l4306 2B2C                            l4250 293C  
                          l4242 2904                            l4234 28D6                            l4226 28AE  
                          l4218 2870                            l4322 33D0                            l3530 1E5E  
                          l3514 1DBE                            l3522 1E14                            l3506 1D86  
                          l3450 1C3C                            l3442 1C2C                            l3434 1C1C  
                          l3426 1BE4                            l3418 1BB2                            l4066 270E  
                          l4058 2536                            l3620 4452                            l3612 4420  
                          l3604 43F6                            l4156 3D60                            l4148 3D14  
                          l4180 452C                            l4172 44D6                            l4164 4482  
                          l4092 4EA8                            l3380 4DE4                            l3700 4F30  
                          l3292 37C0                            l3284 378A                            l3276 3738  
                          l3348 39F0                            l3268 4D38                            l3364 435E  
                          l3356 431C                            l4076 4702                            l4420 404A  
                          l4412 4026                            l4404 4002                            l4084 47C2  
                          l4308 2B3A                            l4260 2998                            l4252 294C  
                          l4244 2914                            l4236 28D6                            l4228 28B2  
                          l4340 3496                            l4332 344E                            l4324 33DE  
                          l3540 1E8E                            l3532 1E68                            l3524 1E3A  
                          l3516 1DF2                            l3508 1D88                            l3460 1C50  
                          l3452 1C40                            l3444 1C30                            l3436 1C20  
                          l3428 1BEC                            l4068 2742                            l4500 179C  
                          l3630 4478                            l3622 4454                            l3614 442E  
                          l3606 43FE                            l3382 4DFC                            l4158 3D6C  
                          l4166 44A6                            l4174 44E4                            l4094 4E82  
                          l4086 4E62                            l3710 4F52                            l3702 4F34  
                          l3294 37D4                            l3286 378E                            l3278 3758  
                          l3374 4BE6                            l3366 4362                            l3358 432A  
                          l4078 470A                            l4430 4088                            l4422 405C  
                          l4414 4038                            l4406 4014                            l4270 29D8  
                          l4262 299A                            l4254 2960                            l4246 2924  
                          l4190 27E0                            l4182 27B4                            l4350 3516  
                          l4342 34A2                            l4334 3456                            l4326 3424  
                          l3550 1EB6                            l3542 1E92                            l3534 1E76  
                          l3526 1E4A                            l3518 1DF4                            l3470 1C8A  
                          l3462 1C54                            l3454 1C44                            l3446 1C34  
                          l3438 1C24                            l3390 1B28                            l4510 18B4  
                          l4502 17CA                            l3624 445A                            l3616 4434  
                          l3608 4410                            l3384 4E18                            l4176 44FC  
                          l4168 44BE                            l4600 3C34                            l4096 4E88  
                          l4088 4E68                            l3720 4B5C                            l3712 4B22  
                          l3704 4F3A                            l3296 37E2                            l3288 379A  
                          l3376 4C00                            l3368 4390                            l3640 2BB6  
                          l4424 405C                            l4416 4038                            l4408 4014  
                          l4280 2A14                            l4272 29E2                            l4264 29AA  
                          l4256 296E                            l4248 2934                            l4192 27F0  
                          l4184 27C0                            l4360 355E                            l4352 3518  
                          l4344 34DE                            l4336 3462                            l4328 343A  
                          l3800 2166                            l3560 1F10                            l3552 1EC4  
                          l3544 1EA2                            l3536 1E78                            l3480 1CDC  
                          l3472 1CA6                            l3464 1C58                            l3456 1C48  
                          l3448 1C38                            l3392 1B36                            l4520 190C  
                          l4504 188A                            l4512 18BE                            l4440 0F4E  
                          l4432 0E54                            l3618 444A                            l3626 4460  
                          l3730 30B2                            l4178 4514                            l4602 3C40  
                          l3378 4DD4                            l3722 4B5E                            l3714 4B26  
                          l3706 4F3E                            l4370 4DBA                            l3298 37F4  
                          l3650 2C10                            l3642 2BC6                            l3634 2B4E  
                          l4098 4878                            l4426 406E                            l4418 404A  
                          l4610 4622                            l4290 2A86                            l4282 2A22  
                          l4274 29F0                            l4266 29BC                            l4258 297A  
                          l4194 2800                            l4186 27CE                            l4362 3560  
                          l4354 351C                            l4346 34EA                            l4338 3494  
                          l3810 21C8                            l3802 2172                            l3570 1F7A  
                          l3562 1F1E                            l3554 1EDA                            l3538 1E86  
                          l3546 1EA4                            l3490 1D28                            l3482 1CEA  
                          l3474 1CB6                            l3458 1C4C                            l3466 1C5C  
                          l3394 1B38                            l4522 1924                            l4514 18EC  
                          l4506 18A2                            l4530 195E                            l4450 10EA  
                          l4442 0F6A                            l4434 0EA2                            l3628 4470  
                          l3732 30F8                            l4604 3C50                            l3716 4B2E  
                          l3708 4F4E                            l4372 4DBC                            l4380 4E22  
                          l3660 2C3C                            l3652 2C1E                            l3644 2BC8  
                          l3636 2B6E                            l4428 406E                            l4700 332A  
                          l4620 4678                            l4612 463A                            l4292 2A94  
                          l4284 2A50                            l4268 29D2                            l4276 2A02  
                          l4196 2802                            l4188 27D0                            l4356 3540  
                          l4348 34F8                            l3820 225E                            l3812 21D4  
                          l3804 2182                            l3740 1FDC                            l3900 4CEE  
                          l3580 1FB4                            l3572 1F9A                            l3564 1F58  
                          l3548 1EB2                            l3484 1CEC                            l3476 1CCC  
                          l3468 1C60                            l3396 1B48                            l3388 1B1C  
                          l4540 1A1A                            l4532 198A                            l4524 192C  
                          l4516 1904                            l4508 18AA                            l4460 11D0  
                          l4452 1102                            l4444 1012                            l4436 0EA6  
                          l3590 43BE                            l3734 3118                            l3726 3034  
                          l4630 4BB8                            l4622 4B62                            l4606 3C6A  
                          l3718 4B36                            l4374 4DBE                            l4366 4DAA  
                          l4382 4E28                            l3670 2D48                            l3662 2CBE  
                          l3654 2C24                            l3646 2BE2                            l3638 2B96  
                          l3910 35A4                            l4390 3FCE                            l4702 3330  
                          l4614 4646                            l4294 2ABE                            l4278 2A10  
                          l4198 280A                            l4358 3550                            l3830 22B4  
                          l3822 227C                            l3814 21F0                            l3806 219C  
                          l3750 2018                            l3742 1FE8                            l3902 4CFE  
                          l3582 1FBA                            l3574 1F9E                            l3558 1F04  
                          l3566 1F5A                            l3494 1D3C                            l3486 1CF6  
                          l3478 1CD8                            l3398 1B58                            l4550 1A60  
                          l4542 1A20                            l4534 19B8                            l4526 1958  
                          l4470 13F2                            l4462 1278                            l4454 1106  
                          l4446 102E                            l4438 0EB2                            ?_pad 0011  
                          l3592 43C2                            l3736 3134                            l3728 3050  
                          l4632 4BD0                            l4624 4B76                            l4376 4DC0  
                          l4368 4DB4                            l4640 4D54                            l3680 2DBC  
                          l3672 2D66                            l3664 2CC4                            l3656 2C2C  
                          l3648 2BFE                            l3920 364A                            l3912 35B6  
                          l4384 4692                            l4392 3FCE                            l4720 3390  
                          l4712 335C                            l4704 334C                            l4800 40B2  
                          l4616 4652                            l4608 45FE                            l4288 2A7A  
                          l4296 2AC2                            l3840 231E                            l3832 22B8  
                          l3824 2286                            l3816 221A                            l3808 21AC  
                          l3760 204A                            l3752 2028                            l3744 1FF6  
                          l3584 1FC8                            l3576 1FAC                            l3568 1F6A  
                          l3496 1D4C                            l3488 1D18                            l4560 1AAE  
                          l4552 1A70                            l4544 1A34                            l4536 19BE  
                          l4480 14D0                            l4472 1406                            l4464 1294  
                          l4456 1112                            l4448 10D6                            l3594 43D0  
                          l3738 319E                            l4634 4EFC                            l4626 4B8E  
                          l4730 3A16                            l4378 4E44                            l4642 4D64  
                          l3690 2DF8                            l3682 2DCC                            l3674 2D80  
                          l3666 2CCA                            l3658 2C36                            l3930 36C8  
                          l3914 35BA                            l3906 3572                            l4386 46F4  
                          l4394 3FDE                            l4722 3396                            l4714 3360  
                          l4706 3352                            l4802 40C6                            l4618 4660  
                          l4298 2ADC                            l3850 2380                            l3842 232A  
                          l3834 22C6                            l3826 2294                            l3818 2250  
                          l3770 208A                            l3762 2058                            l3754 202E  
                          l3746 1FF8                            l3586 1FCA                            l3578 1FB2  
                          l3498 1D5A                            l4570 1AFE                            l4562 1AC0  
                          l4554 1A82                            l4546 1A46                            l4538 19EC  
                          l4490 1674                            l4482 14EC                            l4474 141E  
                          l4466 133C                            l4458 11B4                            l3596 43D8  
                          l4628 4BA4                            l4580 3B90                            l4740 3A76  
                          l4732 3A2A                            l4644 4D6E                            l4636 4D46  
                          l3684 2DD2                            l3692 2E08                            l3676 2D9A  
                          l3668 2D2E                            l3924 3682                            l3916 35DE  
                          l3908 3596                            l3940 36EE                            l4396 3FDE  
                          l4388 3FBC                            l4724 33B2                            l4716 336C  
                          l4660 325E                            l4652 322A                            l4804 40DA  
                          l4820 4ECE                            l3860 23E8                            l3852 2394  
                          l3844 2338                            l3836 22F4                            l3828 22A6  
                          l3780 20D4                            l3772 2090                            l3764 205A  
                          l3756 203E                            l3748 2008                            l4572 1B14  
                          l4564 1AD6                            l4556 1A98                            l4548 1A5C  
                          l4492 168C                            l4484 1594                            l4476 1422  
                          l4468 1350                            l3598 43DC                            l4590 3BDC  
                          l4582 3B9C                            l3950 4910                            l4750 3AEE  
                          l4742 3A8E                            l4734 3A42                            l4638 4D4A  
                          l3686 2DE4                            l3678 2DAA                            l3942 3712  
                          l3926 36A6                            l3934 36D4                            l3918 3602  
                          l4398 3FF0                            l4726 33B8                            l4718 3378  
                          l4662 3264                            l4654 322E                            l4646 3208  
                          l4806 40EA                            l4822 4ED8                            l3862 23EA  
                          l3854 23AE                            l3846 2362                            l3790 2124  
                          l3782 20E0                            l3774 20B0                            l3766 206A  
                          l3758 2044                            l3870 4A54                            l4566 1ADA  
                          l4558 1A9C                            l4494 16BA                            l4486 15B0  
                          l4478 142E                            l4592 3BE8                            l4584 3BA8  
                          l4576 3B54                            l4840 2E34                            l3696 4F44  
                          l3960 491A                            l4752 3AF2                            l4744 3AA6  
                          l4736 3A5A                            l4728 3A12                            l3688 2DF0  
                          l3936 36E2                            l3928 36B4                            l4680 32C4  
                          l4672 3290                            l4664 3280                            l4656 323A  
                          l4808 40FE                            l4824 4EDA                            l4816 4EC2  
                          l4832 4EE0                            l3880 3EF2                            l3856 23CA  
                          l3864 23F0                            l3848 2366                            l3792 2130  
                          l3784 20EA                            l3776 20C0                            l3768 207A  
                          l3872 4A64                            l4568 1AEC                            l4496 1788  
                          l4488 1658                            l4760 4768                            l4594 3BFA  
                          l4578 3B78                            l4586 3BB6                            l4850 2EC2  
                          l4842 2E48                            l3698 4F48                            l3954 49BA  
                          l3962 4960                            l4754 3B0A                            l4746 3ABE  
                          l4738 3A72                            l4682 32CA                            l4674 3294  
                          l4666 3286                            l4658 3246                            l4826 4EDC  
                          l4818 4ECC                            l4834 4820                            l3890 3F5E  
                          l3882 3F20                            l3866 23F4                            l3858 23DA  
                          l3794 213C                            l3786 2100                            l4498 1792  
                          l4770 47C0                            l4762 4780                            l3980 4582  
                          l3972 4542                            l4596 3C06                            l4588 3BCE  
                          l4860 2F50                            l4852 2ED4                            l4844 2E58  
                          l3956 4A00                            l3948 48CA                            l4756 3B22  
                          l4748 3AD6                            l4692 32F6                            l4684 32E6  
                          l4676 32A0                            l4780 4A36                            l4836 4834  
                          l3892 3FAE                            l3884 3F30                            l3876 3EB4  
                          l3796 214A                            l3788 210C                            l4764 479E  
                          l3990 45CC                            l3982 458E                            l3974 4546  
                          l4598 3C16                            l4870 2FF8                            l4862 2F7C  
                          l4854 2F00                            l4846 2E84                            l3966 496A  
                          l4758 3B3A                            l4694 32FA                            l4686 32EC  
                          l4678 32AC                            l4782 4A4C                            l4774 4A0A  
                          l4790 4B06                            l4838 484A                            l3894 3FB4  
                          l3886 3F3E                            l3878 3EE2                            l3798 2156  
                          l3992 45E4                            l3984 459A                            l3976 455E  
                          l4872 300A                            l4864 2F8E                            l4856 2F12  
                          l4848 2E96                            l3968 49B0                            l4696 3306  
                          l4776 4A26                            l4792 4B1A                            l3888 3F50  
                          l4960 424A                            l4952 4232                            l3986 45A6  
                          l3978 456A                            l4866 2FBA                            l4858 2F3E  
                          l3994 4F18                            l4698 3312                            l4778 4A2A  
                          l4794 4B1C                            l4786 4ADE                            l3898 4CD8  
                          l4970 4262                            l4962 425E                            l4954 4236  
                          l3988 45B4                            l4868 2FCC                            l3996 4F28  
                          l4788 4AEE                            l4796 4096                            l4972 4262  
                          l4956 423A                            l4798 40A2                            l3998 3DAC  
                          l4958 4246                            STR_1 0E05                            STR_3 0E3E  
                          STR_4 0E4E                            STR_5 0E38                            STR_6 0E44  
                          STR_7 0E25                            STR_8 0E49                            STR_9 0E1E  
                          u3000 1D68                            u3001 1D64                            u3010 1D86  
                          u3011 1D82                            u3100 1EC4                            u3020 1DBE  
                          u3101 1EC0                            u3021 1DBA                            u3110 1EDA  
                          u3030 1E04                            u3111 1ED6                            u3031 1E00  
                          u4000 4CBA                            u3200 1FC8                            u3120 1EF0  
                          u3040 1E3A                    _BAUD4CONbits 000EE9                            u4001 4CB6  
                          u3201 1FC4                            u3121 1EEC                            u3041 1E36  
                          _LATE 000F7D                            u3210 43D0                            u4010 4CD0  
                          u3130 1F04                            u3050 1E4A                            u3211 43CC  
                          u4011 4CCC                            u3131 1F00                            u3051 1E46  
                          _LATG 000F7F                            u3220 43EA                            u4020 3CFA  
                          u3300 2BC6                            u4100 27F0                            u3140 1F1E  
                          u3060 1E76                            u3221 43E6                            u4021 3CF6  
                          u3301 2BC2                            u4101 27EC                            u3141 1F1A  
                          u3061 1E72                            u3230 4410                            u4030 3D26  
                          u3310 2BE2                            u4110 2834                            u3150 1F58  
                          u3070 1E86                            u3231 440C                            u4031 3D22  
                          u3311 2BDE                            u4111 2830                            u3151 1F54  
                          u3071 1E82                            u3240 442E                            u4040 3D5C  
                          u2600 4ADC                            u3400 2DCC                            u3320 2C10  
                          u4200 29D2                            u4120 2846                            u3160 1F6A  
                          u3080 1EA2                            u3241 442A                            u4041 3D58  
                          u2601 4AD8                            u3401 2DC8                            u3321 2C0C  
                          u4201 29CE                            u4121 2842                            u3161 1F66  
                          u3081 1E9E                            u3250 444A                            u4050 3D96  
                          u2610 4D38                            u3410 2DE4                            u3330 2C1E  
                          u4210 29F0                            u4130 2856                            u3170 1F7A  
                          u3090 1EB2                            _T2PR 000FBC                            u3251 4446  
                          u4051 3D92                            u2611 4D34                            u3411 2DE0  
                          u3331 2C1A                            u4211 29EC                            u4131 2852  
                          u3171 1F76                            u3091 1EAE                            u3260 4470  
                          u4060 44FC                            u3420 4B4A                            u2620 3738  
                          u2700 38F2                            u3340 2D48                            u4300 2B3A  
                          u4220 2A10                            u4140 2896                            u3500 2018  
                          u3180 1F9A                            u3261 446C                            u4061 44F8  
                          u3421 4B42                            u2621 3734                            u2701 38EE  
                          u3341 2D44                            u4301 2B36                            u4221 2A0C  
                          u4141 2892                            u3501 2014                            u3181 1F96  
                          u4070 4514                            u2630 376A                            u2710 3930  
                          u3350 2D66                            u3270 2B7E                            u4230 2A22  
                          u4150 28D6                            u4310 33D0                            u3510 2058  
                          u3190 1FAC                            u4071 4510                            u2631 3766  
                          u2711 392C                            u3351 2D62                            u3271 2B78  
                          u4231 2A1E                            u4151 28D2                            u4311 33CC  
                          u3511 2054                            u3191 1FA8                            u3440 3050  
                          u2800 4DE4                            u2720 395A                            u2560 417A  
                          u3360 2D80                            u3280 2B80                            u4240 2A50  
                          u4160 294C                            u4080 27CE                            u4400 355E  
                          u4320 33DE                            u3600 22F4                            u3520 206A  
                          u3441 304C                            u2801 4DE0                            u2641 3794  
                          u2721 3956                            u2561 4176                            u3361 2D7C  
                          u4241 2A4C                            u4161 2948                            u4081 27CA  
                          u4401 355A                            u4321 33DA                            u3601 22F0  
                          u3521 2066                            u3450 3134                            u2810 4DFA  
                          u2650 37B8                            u2730 3988                            u2570 418C  
                          u3370 2D9A                            u3290 2B96                            u4410 3FCE  
                          u4250 2A66                            u4170 296E                            u4090 27E0  
                          u4330 343A                            u3610 230A                            u3530 207A  
                          u3451 3130                            u2811 4DF6                            u2651 37B4  
                          u2731 3984                            u2571 4188                            u3371 2D96  
                          u3291 2B92                            u4411 3FCA                            u4251 2A62  
                          u4171 296A                            u4091 27DC                            u4331 3436  
                          u3611 2306                            u3531 2076                            u5107 4774  
                          u2660 37E2                            u2740 39D0                            u2580 41B4  
                          u3380 2DAA                            u4500 406E                            u4420 3FDE  
                          u4260 2A7A                            u4180 2998                            u4340 3490  
                          u3700 3F5E                            u3620 231E                            u3540 20B0  
                          u2900 1C1C                            u2820 1B36                            u2661 37DE  
                          u2741 39CC                            u2581 41B0                            u3381 2DA6  
                          u4501 406A                            u4421 3FDA                            u4261 2A76  
                          u4181 2994                            u4341 348C                            u3701 3F5A  
                          u3621 231A                            u3541 20AC                            u2901 1C18  
                          u2821 1B32                            u5117 10F6                            u3438 4B4C  
                          u2670 3822                            u2590 41EA                            u2750 4308  
                          u3390 2DBC                            u4430 3FF0                            u4270 2A94  
                          u4190 29BC                            u4350 34DA                            u3710 3FAE  
                          u3630 2338                            u3550 20C0                            u2910 1C8A  
                          u2830 1B48                            u4510 16BA                            u2671 381E  
                          u2591 41E6                            u2751 4304                            u3391 2DB8  
                          u4431 3FEC                            u5207 3382                            u4271 2A90  
                          u4191 29B8                            u4351 34D6                            u3711 3FAA  
                          u3631 2334                            u3551 20BC                            u2911 1C86  
                          u2831 1B44                            u4511 16B6                            u5127 1412  
                          u3464 318E                            u3800 45E4                            u2680 386C  
                          u2760 432A                            u4440 4002                            u4280 2ADC  
                          u4360 34F8                            u3640 2380                            u3560 223A  
                          u3480 1FF6                            u3720 4CEE                            u2920 1CA2  
                          u2840 1B58                            u4600 198A                            u4520 1788  
                          u5080 42C2                            u3465 318A                            u3801 45E0  
                          u5217 4E32                            u2681 3868                            u2761 4326  
                          u4441 3FFE                            u4281 2AD8                            u4361 34F4  
                          u3641 237C                            u3481 1FF2                            u3721 4CEA  
                          u2921 1C9C                            u2841 1B54                            u4601 1986  
                          u4521 1784                            u5137 1680                            u5081 42BE  
                          u3474 31F8                            u3810 4F28                            u2690 38C0  
                          u2770 4380                            u3730 3596                            u4450 4014  
                          u4290 2B0C                            u4370 3508                            u3650 23AE  
                          u3570 2294                            u3490 2008                            u2930 1CA4  
                          u2850 1B9A                            u4610 19B8                            u4530 17CA  
            verify_color@color2 0097                            u3475 31F4                            u5307 3C0C  
                          u5227 4D5A                            u3811 4F24                            u2691 38BC  
                          u2771 437C                            u3731 3592                            u4451 4010  
                          u5147 483E                            u4291 2B08                            u4371 3504  
                          u3651 23AA                            u3571 2290                            u3491 2004  
                          u2851 1B96                            u4611 19B4                            u4531 17C6  
                          u2780 4390                            u3740 35DE                            u4460 4026  
                          u4380 3516                            u3820 3DC4                            u3660 23E8  
                          u3580 22B4                            u2940 1CCC                            u2860 1BB0  
                          u3900 246E                            u4700 1AAE                            u4620 19EC  
                          u4540 188A                            u5317 3C46                            u5237 3A64  
                          u2781 438C                            u3741 35DA                            u4461 4022  
                          u5157 4868                            u4381 3512                            u3821 3DC0  
                          u3661 23E4                            u3581 22B0                            u3565 2230  
                          u2941 1CC8                            u2861 1BAC                            u3901 246A  
                          u4701 1AAA                            u4621 19E8                            u4541 1886  
                          u2790 4C00                            u3750 3602                            u4470 4038  
                          u4390 3550                            u3830 3DF8                            u3670 3EE2  
                          u3590 22C6                            u2950 1CEA                            u2870 1BC2  
                          u3910 24A2                            u4710 1AC0                            u4630 1A1A  
                          u4550 18A2                            u5407 45EE                            u5327 4B80  
                          u5247 3AE0                            u2791 4BFC                            u3751 35FE  
                          u4471 4034                            u5167 4658                            u4391 354C  
                          u3671 3EDE                            u3591 22C2                            u2951 1CE6  
                          u2871 1BBE                            u4711 1ABC                            u4631 1A16  
                          u4551 189E                            u3760 36A6                            u4480 404A  
                          u4800 4678                            u3840 3E26                            u3680 3F20  
                          u2960 1D0A                            u2880 1BD2                            u3920 24BE  
                          u4720 1AD6                            u4640 1A34                            u4560 18EC  
                          u5337 4BC2                            u5257 3B44                            u3761 36A2  
                          u4481 4046                            u5177 3250                            u4801 4674  
                          u3841 3E22                            u3681 3F1C                            u2961 1D06  
                          u2881 1BCE                            u3921 24BA                            u4721 1AD2  
                          u4641 1A30                            u4561 18E8                            u5097 42E2  
                          u3770 455E                            u4490 405C                            u4810 4690  
                          u3850 3E3A                            u3690 3F3E                            u2970 1D18  
                          u2890 1C0E                            u3930 24FE                            u4730 1AEC  
                          u4650 1A46                            u4570 1904                            u3771 455A  
                          u5347 44DC                            u5267 4E72                            u4491 4058  
                          u5187 32B6                            u4811 468C                            u3851 3E36  
                          u3835 3DEE                            u3691 3F3A                            u2971 1D14  
                          u2891 1C0A                            u3931 24FA                            u3915 2498  
                          u4731 1AE8                            u4651 1A42                            u4571 1900  
                          u3780 4582                            u4900 2E58                            u4820 3280  
                          u3860 3E62                            u2980 1D28                            u3940 2604  
                          u4740 1AFE                            u4660 1A5C                            u4580 1924  
                          u3781 457E                            u5357 451E                            u4901 2E54  
                          u5277 4E92                            u5197 331C                            u4821 327C  
                          u3861 3E5E                            u2981 1D24                            u3941 2600  
                          u4741 1AFA                            u4661 1A58                            u4581 1920  
                          u3790 45CC                            u4910 2E96                            u4830 32E6  
                          u3870 3E82                            u2990 1D5A                            u3950 26A2  
                          u4750 1B14                            u4670 1A70                            u4590 1958  
                          u3791 45C8                            u5367 3CDA                            u4911 2E92  
                          u5287 4EB2                            u4831 32E2                            u3871 3E7E  
                          u2991 1D56                            u3951 269E                            u4751 1B10  
                          u4671 1A6C                            u4591 1954                            u4760 3BCE  
                          u4920 2ED4                            u4840 334C                            u3880 3E92  
                          u3960 2762                            u4680 1A82                            u5377 3D38  
                          u4761 3BCA                            u5297 3BAE                            u4921 2ED0  
                          u4841 3348                            u3881 3E8E                            u4681 1A7E  
                          u4770 3BFA                            u4930 2F12                            u4850 33B2  
                          u3970 277E                            u3890 2446                            u4690 1A98  
                          u5387 3D72                            u4771 3BF6                            u4931 2F0E  
                          u4851 33AE                            u3971 277A                            u4691 1A94  
                          u4780 3C30                            u4940 2F50                            u3980 475A  
                          u4860 47BC                            u5397 45AC                            u4781 3C2C  
                          u4941 2F4C                            u3981 4756                            u3965 2758  
                          u4861 47B8                            u4790 3C6A                            u4950 2F8E  
                          u3990 4DA8                            u4870 4A4C                            u4791 3C66  
                          u4951 2F8A                            u3991 4DA4                            u4871 4A48  
                          u3895 243C                            u4960 2FCC                            u4961 2FC8  
                          u4970 300A                            u4971 3006                            abs@a 0013  
                          _dbuf 0165                            _main 4232                            _dtoa 2B4E  
                          _prec 00F0                            _nout 00EC                            pad@i 0018  
                          pad@p 0015                            fsr1h 000FE2                            fsr2h 000FDA  
                          indf1 000FE7                            indf2 000FDF                            fsr1l 000FE1  
                          pad@w 001A                            fsr2l 000FD9                            _stop 4542  
                          prodh 000FF4                            prodl 000FF3                            start 0000  
                ?_color_display 0058                 ___fldiv@new_exp 0020          __end_of_color_read_Red 491A  
                  ___param_bank 000000                  ?_color_predict 0001                           ??_abs 0015  
                         ??_pad 0017                   ___fltol@sign1 0064                 __end_of___aodiv 38AE  
               __end_of___fladd 1FDC                           ?_main 0001                           ?_dtoa 001C  
               __end_of___aomod 3A12                           _ADPCH 000F5F                 __end_of___fldiv 2B4E  
               __end_of___awdiv 4482                 __end_of___flneg 4D10                           STR_10 0E13  
                         STR_11 0E2C                           STR_12 0E32                           STR_13 0E0D  
               __end_of___flmul 2406                 __end_of___flsub 4A9A                 __end_of___fltol 3EB4  
                         ?_stop 001A                 ___awdiv@divisor 0009                           _LED_B 4EA2  
                         _LED_C 4E22                           _LED_G 4E82                           _LED_R 4E62  
               ___awdiv@counter 000B                    vfpfcnvrt@fmt 0042         __end_of_sendCharSerial4 4F2E  
    __end_of_I2C_2_Master_Start 4F4E         ??_color_data_collection 005C      __end_of_I2C_2_Master_Write 4F3A  
               __end_of_compare 4CD8                    compare@lower 006A                           _flags 00F2  
                         _color 0164                    compare@upper 006E                           _fputc 4168  
                         _fputs 4A9A                           pad@fp 0011                           _width 00EE  
                         _putch 4F5A                           _toint 0E01                           dtoa@d 001E  
                         dtoa@i 003E                           dtoa@n 0036                           dtoa@p 0030  
                         dtoa@s 0034                           dtoa@w 0032                           tablat 000FF5  
               __end_of_lroundf 4C9E                           status 000FD8                 __end_of_sprintf 48CA  
              color_display@buf 0079         __end_of_color_read_Blue 4A0A           _I2C_2_Master_RepStart 4F4E  
               ??_short_reverse 002A                 ?_color_read_Red 0005                 __initialization 4C26  
                 short_burst@mL 0020                   short_burst@mR 0022                    __end_of_main 42F8  
                  __end_of_dtoa 2E32            __end_of_detect_color 1B1C                    __end_of_stop 45FE  
        color_data_collection@i 00DE          color_data_collection@j 00E0          color_data_collection@k 00E2  
        color_data_collection@m 005A          color_data_collection@x 00E4                          ??_main 00E6  
                        ??_dtoa 0026                          ??_stop 001E                   __activetblptr 000001  
                        ?_LED_B 0001                          ?_LED_C 0001                          ?_LED_G 0001  
                        ?_LED_R 0001          _initDCmotors_parameter 4096                    ?_setMotorPWM 000F  
                        ?_fputc 0001                          ?_fputs 000A                          _ADRESH 000F64  
              ___awdiv@dividend 0007                          ?_putch 0001                          _RC0PPS 000E62  
                        _RC4REG 000EE3                          _RE2PPS 000E74                          _RD5PPS 000E6F  
                        _RC7PPS 000E69                          _RD6PPS 000E70              turnLeft@angle_left 0024  
      __end_of_color_click_init 4D7A                          _RX4PPS 000E15                          _TX4REG 000EE4  
               ??_color_display 005A                __end_of___xxtofl 3572                 ??_color_predict 0058  
                  vfprintf@cfmt 0056                          ___flge 3EB4                       ??___aodiv 0011  
                     ??___fladd 0009                       ??___aomod 0011                          ___wmul 4DFC  
                     ??___fldiv 0017                       ??___awdiv 000B                       ??___flneg 0005  
                     ??___flmul 0030                          _action 2E32                       ??___flsub 0019  
                     ??___fltol 0060                          _goback 4EFC                   compare@result 005F  
                        clear_0 4C44                          clear_1 4C50                ___awdiv@quotient 000D  
                        _motorL 015A                          _motorR 0150                          isa$std 000001  
                        pad@buf 0013                          _roundf 2406                          dtoa@fp 001C  
                        _strlen 4D10                       ??_compare 005F                __end_of_pin_init 4EFC  
                        fputc@c 0001                          fputs@c 000E                          fputs@i 000F  
                        fputs@s 000A                    __mediumconst 0000                          tblptrh 000FF7  
                        tblptrl 000FF6                          tblptru 000FF8                ?_sendCharSerial4 0001  
                     ??_lroundf 005F                     read_color@m 000C                          putch@c 0001  
              __end_of_vfprintf 4764                          stop@mL 001A                          stop@mR 001C  
             ??_initDCmotorsPWM 0003                       ??_sprintf 0058                __end_of_turnLeft 3DAC  
                    ___flge@ff1 0001                      ___flge@ff2 0005                    ___xxtofl@arg 000B  
                  ___xxtofl@exp 000A                    ___xxtofl@val 0001                    ?_short_burst 0020  
              calibrate_white@w 000C                 fullSpeedBack@mL 0020                 fullSpeedBack@mR 0022  
                    __accesstop 0060         __end_of__initialization 4C56                   verify_color@m 0091  
                 verify_color@w 0093        __end_of_color_read_Clear 49BA                      ___flneg@f1 0001  
      __end_of_color_read_Green 496A          ?_I2C_2_Master_RepStart 0001              color_predict@color 00DD  
  initDCmotors_parameter@motorL 0001    initDCmotors_parameter@motorR 0003                   ___rparam_used 000001  
                    ___fltol@f1 005B                   __end_of_LED_B 4EC2                   __end_of_LED_C 4E42  
                 __end_of_LED_G 4EA2                   __end_of_LED_R 4E82                ?_color_read_Blue 0005  
                __pcstackCOMRAM 0001                   _fullSpeedBack 4482                    __pidataBANK0 4F58  
          turnRight@angle_right 0024                   __end_of_fputc 4232               detect_color@color 008C  
                 __end_of_fputs 4ADE                   __end_of_putch 4F5C                   __end_of_toint 0E05  
                       ??_LED_B 0001                         ??_LED_C 0001                         ??_LED_G 0001  
                       ??_LED_R 0001               ?_distance_measure 000C              ??_distance_measure 0010  
                       ??_fputc 0005                         ??_fputs 000E                         ??_putch 0001  
                    __pbssBANK0 00E8                      __pbssBANK1 0100                color_predict@buf 0079  
             _color_writetoaddr 4E42                    _T2CLKCONbits 000FBF                  ?_fullSpeedBack 0020  
                       ?___flge 0001              ?_color_writetoaddr 0003                         ?___wmul 0001  
                       ?_action 0032                         ?_goback 002E                         ?_roundf 0041  
           ??_color_writetoaddr 0004                         ?_strlen 0001                       ?___xxtofl 0001  
                       _SP4BRGH 000EE6                         _SP4BRGL 000EE5                         _PWM6DCH 000FA3  
                       _PWM7DCH 000FA0                         _SSP2ADD 000ED6                         _SSP2BUF 000ED5  
                  _detect_color 0E54   __end_of_color_data_collection 33BE          color_writetoaddr@value 0003  
              ??_color_read_Red 0007       __end_of_color_writetoaddr 4E62                       _ADREFbits 000F58  
            _I2C_2_Master_Start 4F44                      _initUSART4 4EC2              _I2C_2_Master_Write 4F2E  
                     ?_pin_init 0001                         __Hparam 0000                         __Lparam 0000  
             color_read_Red@tmp 000A         sendStringSerial4@string 0002                         ___aodiv 3726  
                       ___fladd 1B1C                         ___aomod 38AE                         ___fldiv 27B4  
                       ___awdiv 43BE                         ___flneg 4CD8                         ___flmul 1FDC  
                       ___flsub 4A54                         ___fltol 3DAC             ?_I2C_2_Master_Start 0001  
           ?_I2C_2_Master_Write 0001                       ?_vfprintf 0050                    __psmallconst 0E00  
                       __pcinit 4C26                         __ramtop 0E00                      _read_color 47C2  
                     ?_turnLeft 0020                         __ptext0 4232                         __ptext1 4764  
                       __ptext2 0E54                         __ptext3 4C64                         __ptext4 2406  
                       __ptext5 4A54                         __ptext6 1B1C                         __ptext7 4CD8  
                       __ptext8 1FDC                         __ptext9 3EB4                         _compare 4C9E  
       ?_initDCmotors_parameter 0001                       _T2CONbits 000FBD                      ??___xxtofl 0005  
                     _T2HLTbits 000FBE                         _lroundf 4C64                   _RxBufWriteCnt 00F7  
                       _sprintf 4878                         main@rgb 019A            ??_I2C_2_Master_Start 0002  
          ??_I2C_2_Master_Write 0002            end_of_initialization 4C56              setMotorPWM@PWMduty 0018  
               _CALIBRATION_180 00F8                         fputc@fp 0003                         fputs@fp 000C  
             ?_color_click_init 0001                 ??_fullSpeedBack 0024                      ??_pin_init 0001  
            ??_color_click_init 0005               __end_of_vfpfcnvrt 3726           __end_of_short_reverse 4BA4  
                       postdec1 000FE5                         postdec2 000FDD                         postinc0 000FEE  
                       postinc1 000FE6                         postinc2 000FDE                         roundf@e 004D  
                       roundf@u 0053                         roundf@x 0041                         roundf@y 0057  
                    ??_vfprintf 0056                         strlen@a 0003                         strlen@s 0001  
               _initDCmotorsPWM 4ADE                      ??_turnLeft 0025  __end_of_initDCmotors_parameter 4168  
                     _PORTFbits 000F8E               __end_of_turnRight 3C80                     ___fladd@grs 0010  
                 ___xxtofl@sign 0009                       _TRISAbits 000F81                       _TRISCbits 000F83  
                     _TRISDbits 000F84                       _TRISEbits 000F85                       _TRISFbits 000F86  
                     _TRISGbits 000F87                     ___fldiv@grs 0022                     ___fldiv@rem 001B  
              fullSpeedAhead@mL 001A                fullSpeedAhead@mR 001C        color_writetoaddr@address 0004  
       ??_I2C_2_Master_RepStart 0002                     ___flmul@grs 0035               ?_color_read_Clear 0005  
                  _EUSART4RXbuf 013C                    _EUSART4TXbuf 0100               ?_color_read_Green 0005  
                   ?_initUSART4 0001       sendCharSerial4@charToSend 0001                   ?_verify_color 0091  
         __end_of_color_display 4702                      main@motorL 01A2                      main@motorR 01AC  
             ??_calibrate_white 000E              ??_color_read_Clear 0007                  color_display@m 0058  
            ??_color_read_Green 0007                  detect_color@BB 0084                  detect_color@BG 008A  
                detect_color@GB 007A                  detect_color@GC 007C                  detect_color@GG 0080  
                detect_color@BR 0086                  detect_color@GR 0088                  detect_color@RB 0078  
                detect_color@RG 007E                  detect_color@RR 0082           __end_of_color_predict 4096  
                __end_of___flge 3FB8                  _fullSpeedAhead 45FE                     vfpfcnvrt@ap 0044  
                   vfpfcnvrt@fp 0040                     vfpfcnvrt@ll 0048                  __end_of___wmul 4E22  
                __end_of_action 3034                     ?_read_color 000C                  __end_of_goback 4F16  
                __end_of_roundf 27B4              turnRight@delay_180 0026                  __end_of_strlen 4D46  
           color_read_Clear@tmp 000A             start_initialization 4C26                     __end_of_abs 4C26  
                   __end_of_pad 43BE                   _TxBufWriteCnt 00F5               turnLeft@delay_180 0026  
                ??_verify_color 0095             color_read_Green@tmp 000A                  _reverse_square 4BA4  
       __end_of_initDCmotorsPWM 4B20                     vfprintf@fmt 0052          __end_of_fullSpeedAhead 4692  
                      ??___flge 0009                        ??___wmul 0005                        ??_action 0036  
                      ??_goback 0032                 short_reverse@mL 0026                 short_reverse@mR 0028  
                   __pdataBANK0 00F8                        ??_roundf 0045                        ??_strlen 0003  
                     ___fladd@a 0005                       ___fladd@b 0001                       ___fldiv@a 0013  
                     ___fldiv@b 000F                       ___flmul@a 002C                       ___flmul@b 0028  
                     ___flsub@a 0015                       ___flsub@b 0011                   __pcstackBANK0 0060  
                 __pcstackBANK1 0185                ___aodiv@dividend 0001          __end_of_reverse_square 4BE6  
                     _dtoa$2416 002E                 ?_fullSpeedAhead 001A                        ?___aodiv 0001  
                      ?___fladd 0001                        ?___aomod 0001                        ?___fldiv 000F  
                      ?___awdiv 0007                ___aodiv@quotient 0013                        ?___flneg 0001  
                      ?___flmul 0028                        ?___flsub 0011                        ?___fltol 005B  
               turnRight@i_1215 002A                  turnLeft@i_1192 002A            I2C_2_Master_Read@ack 0003  
          I2C_2_Master_Read@tmp 0004                        ?_compare 006A                     __smallconst 0E00  
             _I2C_2_Master_Idle 4DD4               _I2C_2_Master_Init 4DAA               _I2C_2_Master_Read 4B20  
             _I2C_2_Master_Stop 4F3A                    _RxBufReadCnt 00F6                        ?_lroundf 0066  
            ?_I2C_2_Master_Idle 0001              ?_I2C_2_Master_Init 0001              ?_I2C_2_Master_Read 0001  
                 ??_setMotorPWM 0011              ?_I2C_2_Master_Stop 0001        initDCmotorsPWM@PWMperiod 0001  
                      ?_sprintf 0060               _sendStringSerial4 4D7A           _color_data_collection 3208  
           ??_I2C_2_Master_Idle 0001             ??_I2C_2_Master_Init 0001             ??_I2C_2_Master_Read 0002  
                ___wmul@product 0005                        _LATAbits 000F79             ??_I2C_2_Master_Stop 0002  
                      _LATCbits 000F7B                        _LATEbits 000F7D                        _LATFbits 000F7E  
                      _LATGbits 000F7F                 ?_reverse_square 0026              ?_sendStringSerial4 0002  
                      _PIE4bits 000E2D                     turnRight@mL 0020                     turnRight@mR 0022  
                      _PIR4bits 000E37                ?_initDCmotorsPWM 0001               ??_sendCharSerial4 0001  
                      _SSP2CON2 000EDA             ??_sendStringSerial4 0004                        _SSP2STAT 000ED8  
                     _vfpfcnvrt 3572                      _ADCON0bits 000F60       __end_of_I2C_2_Master_Idle 4DFC  
     __end_of_I2C_2_Master_Init 4DD4       __end_of_I2C_2_Master_Read 4B62               ___wmul@multiplier 0001  
     __end_of_I2C_2_Master_Stop 4F44                    setMotorPWM@m 000F     I2C_2_Master_Write@data_byte 0002  
          __end_of_verify_color 47C2                       main@white 0186               ??_color_read_Blue 0007  
                 detect_color@m 0070                   detect_color@w 0072                    _TxBufReadCnt 00F4  
                     _turnRight 3B54                 _calibrate_white 3A12       __end_of_sendStringSerial4 4DAA  
                 ??_short_burst 0024   __end_of_I2C_2_Master_RepStart 4F58              color_read_Blue@tmp 000A  
           __end_of_setMotorPWM 3208                      roundf@F527 00E8                _distance_measure 4A0A  
                  ??_initUSART4 0001                        __Hrparam 0000                      vfprintf@ap 0054  
                      __Lrparam 0000                      vfprintf@fp 0050           __end_of_fullSpeedBack 4542  
                  __Lsmallconst 0E00            compare@value2compare 006C                      ?_vfpfcnvrt 0040  
                  ??_read_color 000E                 ___aodiv@divisor 0009                 ___aodiv@counter 0011  
                    _ANSELDbits 000EA7                      _ANSELFbits 000EB4                     action@color 0036  
                    sprintf@fmt 0062                        ___xxtofl 33BE              __end_of_initUSART4 4EE0  
                    ?_turnRight 0020                        __ptext10 3DAC                        __ptext11 4C9E  
                      __ptext20 4A0A                        __ptext12 33BE                        __ptext21 3208  
                      __ptext13 27B4                        __ptext30 4D10                        __ptext22 47C2  
                      __ptext14 4820                        __ptext31 4A9A                        __ptext23 3FB8  
                      __ptext15 45FE                        __ptext40 4D46                        __ptext32 4168  
                      __ptext24 4692                        __ptext16 4EE0                        __ptext41 4E42  
                      __ptext33 4F5A                        __ptext25 4878                        __ptext17 4EC2  
                      __ptext50 4F44                        __ptext42 4DAA                        __ptext34 4BE6  
                      __ptext26 4702                        __ptext18 4096                        __ptext51 4F4E  
                      __ptext43 3A12                        __ptext35 38AE                        __ptext27 3572  
                      __ptext19 4ADE                        __ptext60 4BA4                        __ptext52 4B20  
                      __ptext44 48CA                        __ptext36 3726                        __ptext28 2B4E  
                      __ptext61 4482                        __ptext53 4DD4                        __ptext45 491A  
                      __ptext37 4D7A                        __ptext29 42F8                        __ptext62 4EFC  
                      __ptext54 4E62                        __ptext46 496A                        __ptext38 4F16  
                      __ptext63 3C80                        __ptext55 4E82                        __ptext47 49BA  
                      __ptext39 4E22                        __ptext64 4542                        __ptext56 4EA2  
                      __ptext48 4F2E                        __ptext65 3034                        __ptext57 2E32  
                      __ptext49 4F3A                        __ptext66 4DFC                        __ptext58 3B54  
                      __ptext67 43BE                        __ptext59 4B62                    _SSP2CON1bits 000ED9  
                  _SSP2CON2bits 000EDA          ?_color_data_collection 005A                  turnRight@delay 002C  
                 turnLeft@delay 002C                        action@mL 0032                        action@mR 0034  
                    turnLeft@mL 0020                      turnLeft@mR 0022              __end_of_read_color 4820  
                      _pin_init 4EE0                      turnRight@i 0028             __end_of_short_burst 4878  
                      isa$xinst 000000            distance_measure@stop 0018                      _RC4STAbits 000EE7  
                   _SENSITIVITY 00F9                        goback@mL 002E                        goback@mR 0030  
                      _vfprintf 4702                        _turnLeft 3C80                ___aomod@dividend 0001  
       __end_of_calibrate_white 3B54                     _setMotorPWM 3034                   ?_detect_color 0070  
                   _PWM6CONbits 000FA4                     _PWM7CONbits 000FA1                       sprintf@ap 006C  
              ??_fullSpeedAhead 001E                       turnLeft@i 0028                reverse_square@mL 0026  
              reverse_square@mR 0028                        lroundf@x 0066        ??_initDCmotors_parameter 0005  
                 _short_reverse 4B62                 ___aomod@divisor 0009                     ??_vfpfcnvrt 0046  
               ___aomod@counter 0011                _color_click_init 4D46                        sprintf@f 006E  
                      sprintf@s 0060               _detect_color$2775 008D                      _SSP2DATPPS 000E1D  
                    _SSP2CLKPPS 000E1C              distance_measure@CB 0014              distance_measure@CC 0016  
            distance_measure@CG 0012              distance_measure@CR 0010              distance_measure@mL 000C  
            distance_measure@mR 000E                  ??_detect_color 0074                     ??_turnRight 0025  
                 ___fladd@signs 000D                ??_reverse_square 002A                      _TX4STAbits 000EE8  
                  ___aodiv@sign 0012                 _sendCharSerial4 4F16                     _short_burst 4820  
                  ___fladd@aexp 000E                    ___fladd@bexp 000F                    ___aomod@sign 0012  
                  _verify_color 4764                     _roundf$2776 004F                     _roundf$2777 0049  
                 _color_display 4692                 main@stop_signal 0185  
