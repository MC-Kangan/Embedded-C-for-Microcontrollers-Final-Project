

Microchip MPLAB XC8 Assembler V2.35 build 20211206165544 
                                                                                               Tue Mar 08 19:02:13 2022

Microchip MPLAB XC8 C Compiler v2.35 (Free license) build 20211206165544 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=2
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=2
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=3
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=3
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=3
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=3
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=3
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1
    54                           	psect	text39,global,reloc=2,class=CODE,delta=1
    55                           	psect	text40,global,reloc=2,class=CODE,delta=1
    56                           	psect	text41,global,reloc=2,class=CODE,delta=1
    57                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    58                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    59                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    60                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    61  0000                     
    62                           ; Version 2.35
    63                           ; Generated 05/05/2021 GMT
    64                           ; 
    65                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    66                           ; All rights reserved.
    67                           ; 
    68                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    69                           ; 
    70                           ; Redistribution and use in source and binary forms, with or without modification, are
    71                           ; permitted provided that the following conditions are met:
    72                           ; 
    73                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    74                           ;        conditions and the following disclaimer.
    75                           ; 
    76                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    77                           ;        of conditions and the following disclaimer in the documentation and/or other
    78                           ;        materials provided with the distribution. Publication is not required when
    79                           ;        this file is used in an embedded application.
    80                           ; 
    81                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    82                           ;        software without specific prior written permission.
    83                           ; 
    84                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    85                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    86                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    87                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    88                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    89                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    90                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    91                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    92                           ; 
    93                           ; 
    94                           ; Code-generator required, PIC18F67K40 Definitions
    95                           ; 
    96                           ; SFR Addresses
    97  0000                     
    98                           	psect	idataBANK0
    99  0027BE                     __pidataBANK0:
   100                           	callstack 0
   101                           
   102                           ;initializer for _color
   103  0027BE  01                 	db	1
   104  0000                     _TRISFbits	set	3974
   105  0000                     _TX4REG	set	3812
   106  0000                     _RC4STAbits	set	3815
   107  0000                     _SP4BRGH	set	3814
   108  0000                     _TRISGbits	set	3975
   109  0000                     _TRISEbits	set	3973
   110  0000                     _SSP2CON2bits	set	3802
   111  0000                     _LATG	set	3967
   112  0000                     _LATE	set	3965
   113  0000                     _RX4PPS	set	3605
   114  0000                     _SSP2CLKPPS	set	3612
   115  0000                     _SSP2DATPPS	set	3613
   116  0000                     _ANSELDbits	set	3751
   117  0000                     _SSP2ADD	set	3798
   118  0000                     _SSP2CON1bits	set	3801
   119  0000                     _LATAbits	set	3961
   120  0000                     _LATFbits	set	3966
   121  0000                     _LATGbits	set	3967
   122  0000                     _TRISAbits	set	3969
   123  0000                     _TRISCbits	set	3971
   124  0000                     _TRISDbits	set	3972
   125  0000                     _LATCbits	set	3963
   126  0000                     _LATEbits	set	3965
   127  0000                     _RC4REG	set	3811
   128  0000                     _SP4BRGL	set	3813
   129  0000                     _TX4STAbits	set	3816
   130  0000                     _BAUD4CONbits	set	3817
   131  0000                     _SSP2CON2	set	3802
   132  0000                     _SSP2STAT	set	3800
   133  0000                     _ANSELFbits	set	3764
   134  0000                     _SSP2BUF	set	3797
   135  0000                     _PIE4bits	set	3629
   136  0000                     _PIR4bits	set	3639
   137  0000                     _RC0PPS	set	3682
   138  0000                     _RC7PPS	set	3689
   139  0000                     _RD5PPS	set	3695
   140  0000                     _RE2PPS	set	3700
   141  0000                     _RD6PPS	set	3696
   142  0000                     _T2PR	set	4028
   143  0000                     _T2CONbits	set	4029
   144  0000                     _PWM7DCH	set	4000
   145  0000                     _PWM6DCH	set	4003
   146  0000                     _T2CLKCONbits	set	4031
   147  0000                     _T2HLTbits	set	4030
   148  0000                     _PWM6CONbits	set	4004
   149  0000                     _PWM7CONbits	set	4001
   150  0000                     _ADREFbits	set	3928
   151  0000                     _ADPCH	set	3935
   152  0000                     _ADRESH	set	3940
   153  0000                     _ADCON0bits	set	3936
   154                           
   155                           	psect	smallconst
   156  000E00                     __psmallconst:
   157                           	callstack 0
   158  000E00  00                 	db	0
   159  000E01                     STR_1:
   160                           
   161                           ; BSR set to: 14
   162  000E01  09                 	db	9
   163  000E02  25                 	db	37
   164  000E03  64                 	db	100	;'d'
   165  000E04  09                 	db	9
   166  000E05  25                 	db	37
   167  000E06  64                 	db	100	;'d'
   168  000E07  09                 	db	9
   169  000E08  25                 	db	37
   170  000E09  64                 	db	100	;'d'
   171  000E0A  09                 	db	9
   172  000E0B  25                 	db	37
   173  000E0C  64                 	db	100	;'d'
   174  000E0D  0D                 	db	13
   175  000E0E  0A                 	db	10
   176  000E0F  00                 	db	0
   177  000E10                     
   178                           ; BSR set to: 14
   179  000E10  4C                 	db	76	;'L'
   180  000E11  69                 	db	105	;'i'
   181  000E12  67                 	db	103	;'g'
   182  000E13  68                 	db	104	;'h'
   183  000E14  74                 	db	116	;'t'
   184  000E15  20                 	db	32
   185  000E16  62                 	db	98	;'b'
   186  000E17  6C                 	db	108	;'l'
   187  000E18  75                 	db	117	;'u'
   188  000E19  65                 	db	101	;'e'
   189  000E1A  00                 	db	0
   190  000E1B                     
   191                           ; BSR set to: 14
   192  000E1B  4F                 	db	79	;'O'
   193  000E1C  72                 	db	114	;'r'
   194  000E1D  61                 	db	97	;'a'
   195  000E1E  6E                 	db	110	;'n'
   196  000E1F  67                 	db	103	;'g'
   197  000E20  65                 	db	101	;'e'
   198  000E21  00                 	db	0
   199  000E22                     
   200                           ; BSR set to: 14
   201  000E22  59                 	db	89	;'Y'
   202  000E23  65                 	db	101	;'e'
   203  000E24  6C                 	db	108	;'l'
   204  000E25  6C                 	db	108	;'l'
   205  000E26  6F                 	db	111	;'o'
   206  000E27  77                 	db	119	;'w'
   207  000E28  00                 	db	0
   208  000E29                     
   209                           ; BSR set to: 14
   210  000E29  57                 	db	87	;'W'
   211  000E2A  68                 	db	104	;'h'
   212  000E2B  69                 	db	105	;'i'
   213  000E2C  74                 	db	116	;'t'
   214  000E2D  65                 	db	101	;'e'
   215  000E2E  00                 	db	0
   216  000E2F                     
   217                           ; BSR set to: 14
   218  000E2F  42                 	db	66	;'B'
   219  000E30  6C                 	db	108	;'l'
   220  000E31  61                 	db	97	;'a'
   221  000E32  63                 	db	99	;'c'
   222  000E33  6B                 	db	107	;'k'
   223  000E34  00                 	db	0
   224  000E35                     
   225                           ; BSR set to: 14
   226  000E35  47                 	db	71	;'G'
   227  000E36  72                 	db	114	;'r'
   228  000E37  65                 	db	101	;'e'
   229  000E38  65                 	db	101	;'e'
   230  000E39  6E                 	db	110	;'n'
   231  000E3A  00                 	db	0
   232  000E3B                     
   233                           ; BSR set to: 14
   234  000E3B  45                 	db	69	;'E'
   235  000E3C  72                 	db	114	;'r'
   236  000E3D  72                 	db	114	;'r'
   237  000E3E  6F                 	db	111	;'o'
   238  000E3F  72                 	db	114	;'r'
   239  000E40  00                 	db	0
   240  000E41                     
   241                           ; BSR set to: 14
   242  000E41  42                 	db	66	;'B'
   243  000E42  6C                 	db	108	;'l'
   244  000E43  75                 	db	117	;'u'
   245  000E44  65                 	db	101	;'e'
   246  000E45  00                 	db	0
   247  000E46                     
   248                           ; BSR set to: 14
   249  000E46  50                 	db	80	;'P'
   250  000E47  69                 	db	105	;'i'
   251  000E48  6E                 	db	110	;'n'
   252  000E49  6B                 	db	107	;'k'
   253  000E4A  00                 	db	0
   254  000E4B                     
   255                           ; BSR set to: 14
   256  000E4B  52                 	db	82	;'R'
   257  000E4C  65                 	db	101	;'e'
   258  000E4D  64                 	db	100	;'d'
   259  000E4E  00                 	db	0
   260  000E4F  00                 	db	0	; dummy byte at the end
   261  0000                     
   262                           ; #config settings
   263                           
   264                           	psect	cinit
   265  0024C2                     __pcinit:
   266                           	callstack 0
   267  0024C2                     start_initialization:
   268                           	callstack 0
   269  0024C2                     __initialization:
   270                           	callstack 0
   271                           
   272                           ; Initialize objects allocated to BANK0 (1 bytes)
   273                           ; load TBLPTR registers with __pidataBANK0
   274  0024C2  0EBE               	movlw	low __pidataBANK0
   275  0024C4  6EF6               	movwf	tblptrl,c
   276  0024C6  0E27               	movlw	high __pidataBANK0
   277  0024C8  6EF7               	movwf	tblptrh,c
   278  0024CA  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   279  0024CC  6EF8               	movwf	tblptru,c
   280  0024CE  0009               	tblrd		*+	;fetch initializer
   281  0024D0  CFF5 F0FA          	movff	tablat,__pdataBANK0
   282                           
   283                           ; Clear objects allocated to BANK1 (92 bytes)
   284  0024D4  EE01  F000         	lfsr	0,__pbssBANK1
   285  0024D8  0E5C               	movlw	92
   286  0024DA                     clear_0:
   287  0024DA  6AEE               	clrf	postinc0,c
   288  0024DC  06E8               	decf	wreg,f,c
   289  0024DE  E1FD               	bnz	clear_0
   290                           
   291                           ; Clear objects allocated to BANK0 (28 bytes)
   292  0024E0  EE00  F0DE         	lfsr	0,__pbssBANK0
   293  0024E4  0E1C               	movlw	28
   294  0024E6                     clear_1:
   295  0024E6  6AEE               	clrf	postinc0,c
   296  0024E8  06E8               	decf	wreg,f,c
   297  0024EA  E1FD               	bnz	clear_1
   298                           
   299                           ; Clear objects allocated to COMRAM (4 bytes)
   300  0024EC  6A5F               	clrf	(__pbssCOMRAM+3)& (0+255),c
   301  0024EE  6A5E               	clrf	(__pbssCOMRAM+2)& (0+255),c
   302  0024F0  6A5D               	clrf	(__pbssCOMRAM+1)& (0+255),c
   303  0024F2  6A5C               	clrf	__pbssCOMRAM& (0+255),c
   304  0024F4                     end_of_initialization:
   305                           	callstack 0
   306  0024F4                     __end_of__initialization:
   307                           	callstack 0
   308  0024F4  0E00               	movlw	low (__Lsmallconst shr (0+16))
   309  0024F6  6EF8               	movwf	tblptru,c
   310  0024F8  0E0E               	movlw	high __Lsmallconst
   311  0024FA  6EF7               	movwf	tblptrh,c
   312  0024FC  0100               	movlb	0
   313  0024FE  EF6A  F00B         	goto	_main	;jump to C main() function
   314                           
   315                           	psect	bssCOMRAM
   316  00005C                     __pbssCOMRAM:
   317                           	callstack 0
   318  00005C                     _TxBufReadCnt:
   319                           	callstack 0
   320  00005C                     	ds	1
   321  00005D                     _TxBufWriteCnt:
   322                           	callstack 0
   323  00005D                     	ds	1
   324  00005E                     _RxBufReadCnt:
   325                           	callstack 0
   326  00005E                     	ds	1
   327  00005F                     _RxBufWriteCnt:
   328                           	callstack 0
   329  00005F                     	ds	1
   330                           
   331                           	psect	bssBANK0
   332  0000DE                     __pbssBANK0:
   333                           	callstack 0
   334  0000DE                     _EUSART4RXbuf:
   335                           	callstack 0
   336  0000DE                     	ds	20
   337  0000F2                     _nout:
   338                           	callstack 0
   339  0000F2                     	ds	2
   340  0000F4                     _width:
   341                           	callstack 0
   342  0000F4                     	ds	2
   343  0000F6                     _prec:
   344                           	callstack 0
   345  0000F6                     	ds	2
   346  0000F8                     _flags:
   347                           	callstack 0
   348  0000F8                     	ds	2
   349                           
   350                           	psect	dataBANK0
   351  0000FA                     __pdataBANK0:
   352                           	callstack 0
   353  0000FA                     _color:
   354                           	callstack 0
   355  0000FA                     	ds	1
   356                           
   357                           	psect	bssBANK1
   358  000100                     __pbssBANK1:
   359                           	callstack 0
   360  000100                     _EUSART4TXbuf:
   361                           	callstack 0
   362  000100                     	ds	60
   363  00013C                     _dbuf:
   364                           	callstack 0
   365  00013C                     	ds	32
   366                           
   367                           	psect	cstackBANK1
   368  00015C                     __pcstackBANK1:
   369                           	callstack 0
   370  00015C                     main@complete:
   371                           	callstack 0
   372                           
   373                           ; 1 bytes @ 0x0
   374  00015C                     	ds	1
   375  00015D                     main@i:
   376                           	callstack 0
   377                           
   378                           ; 2 bytes @ 0x1
   379  00015D                     	ds	2
   380  00015F                     main@j:
   381                           	callstack 0
   382                           
   383                           ; 2 bytes @ 0x3
   384  00015F                     	ds	2
   385  000161                     main@k:
   386                           	callstack 0
   387                           
   388                           ; 2 bytes @ 0x5
   389  000161                     	ds	2
   390  000163                     main@x:
   391                           	callstack 0
   392                           
   393                           ; 2 bytes @ 0x7
   394  000163                     	ds	2
   395  000165                     main@motorL:
   396                           	callstack 0
   397                           
   398                           ; 10 bytes @ 0x9
   399  000165                     	ds	10
   400  00016F                     main@motorR:
   401                           	callstack 0
   402                           
   403                           ; 10 bytes @ 0x13
   404  00016F                     	ds	10
   405  000179                     main@rgb:
   406                           	callstack 0
   407                           
   408                           ; 8 bytes @ 0x1D
   409  000179                     	ds	8
   410                           
   411                           	psect	cstackBANK0
   412  000060                     __pcstackBANK0:
   413                           	callstack 0
   414  000060                     ?_sprintf:
   415                           	callstack 0
   416  000060                     sprintf@s:
   417                           	callstack 0
   418                           
   419                           ; 2 bytes @ 0x0
   420  000060                     	ds	2
   421  000062                     sprintf@fmt:
   422                           	callstack 0
   423                           
   424                           ; 2 bytes @ 0x2
   425  000062                     	ds	10
   426  00006C                     sprintf@ap:
   427                           	callstack 0
   428                           
   429                           ; 2 bytes @ 0xC
   430  00006C                     	ds	2
   431  00006E                     sprintf@f:
   432                           	callstack 0
   433                           
   434                           ; 11 bytes @ 0xE
   435  00006E                     	ds	11
   436  000079                     color_display@buf:
   437                           	callstack 0
   438  000079                     color_predict@buf:
   439                           	callstack 0
   440                           
   441                           ; 100 bytes @ 0x19
   442  000079                     	ds	100
   443  0000DD                     color_predict@color:
   444                           	callstack 0
   445                           
   446                           ; 1 bytes @ 0x7D
   447  0000DD                     	ds	1
   448                           
   449                           	psect	cstackCOMRAM
   450  000001                     __pcstackCOMRAM:
   451                           	callstack 0
   452  000001                     ??_I2C_2_Master_Idle:
   453  000001                     ?_strlen:
   454                           	callstack 0
   455  000001                     ?___lwdiv:
   456                           	callstack 0
   457  000001                     ?___aodiv:
   458                           	callstack 0
   459  000001                     ?___aomod:
   460                           	callstack 0
   461  000001                     sendCharSerial4@charToSend:
   462                           	callstack 0
   463  000001                     initDCmotorsPWM@PWMperiod:
   464                           	callstack 0
   465  000001                     initDCmotors_parameter@motorL:
   466                           	callstack 0
   467  000001                     ___lwdiv@dividend:
   468                           	callstack 0
   469  000001                     fputc@c:
   470                           	callstack 0
   471  000001                     strlen@s:
   472                           	callstack 0
   473  000001                     ___aodiv@dividend:
   474                           	callstack 0
   475  000001                     ___aomod@dividend:
   476                           	callstack 0
   477                           
   478                           ; 8 bytes @ 0x0
   479  000001                     	ds	1
   480  000002                     ??_I2C_2_Master_Read:
   481  000002                     I2C_2_Master_Write@data_byte:
   482                           	callstack 0
   483  000002                     sendStringSerial4@string:
   484                           	callstack 0
   485                           
   486                           ; 2 bytes @ 0x1
   487  000002                     	ds	1
   488  000003                     color_writetoaddr@value:
   489                           	callstack 0
   490  000003                     I2C_2_Master_Read@ack:
   491                           	callstack 0
   492  000003                     initDCmotors_parameter@motorR:
   493                           	callstack 0
   494  000003                     ___lwdiv@divisor:
   495                           	callstack 0
   496  000003                     fputc@fp:
   497                           	callstack 0
   498  000003                     strlen@a:
   499                           	callstack 0
   500                           
   501                           ; 2 bytes @ 0x2
   502  000003                     	ds	1
   503  000004                     color_writetoaddr@address:
   504                           	callstack 0
   505  000004                     I2C_2_Master_Read@tmp:
   506                           	callstack 0
   507                           
   508                           ; 1 bytes @ 0x3
   509  000004                     	ds	1
   510  000005                     ??_fputc:
   511  000005                     ??_color_click_init:
   512  000005                     ?_color_read_Red:
   513                           	callstack 0
   514  000005                     ?_color_read_Blue:
   515                           	callstack 0
   516  000005                     ?_color_read_Green:
   517                           	callstack 0
   518  000005                     ?_color_read_Clear:
   519                           	callstack 0
   520  000005                     ___lwdiv@quotient:
   521                           	callstack 0
   522                           
   523                           ; 2 bytes @ 0x4
   524  000005                     	ds	2
   525  000007                     ??_color_read_Red:
   526  000007                     ??_color_read_Blue:
   527  000007                     ??_color_read_Green:
   528  000007                     ??_color_read_Clear:
   529  000007                     ___lwdiv@counter:
   530                           	callstack 0
   531                           
   532                           ; 1 bytes @ 0x6
   533  000007                     	ds	1
   534  000008                     ?___wmul:
   535                           	callstack 0
   536  000008                     ___wmul@multiplier:
   537                           	callstack 0
   538                           
   539                           ; 2 bytes @ 0x7
   540  000008                     	ds	1
   541  000009                     ___aodiv@divisor:
   542                           	callstack 0
   543  000009                     ___aomod@divisor:
   544                           	callstack 0
   545                           
   546                           ; 8 bytes @ 0x8
   547  000009                     	ds	1
   548  00000A                     color_read_Red@tmp:
   549                           	callstack 0
   550  00000A                     color_read_Blue@tmp:
   551                           	callstack 0
   552  00000A                     color_read_Green@tmp:
   553                           	callstack 0
   554  00000A                     color_read_Clear@tmp:
   555                           	callstack 0
   556  00000A                     ___wmul@multiplicand:
   557                           	callstack 0
   558  00000A                     fputs@s:
   559                           	callstack 0
   560                           
   561                           ; 2 bytes @ 0x9
   562  00000A                     	ds	2
   563  00000C                     read_color@m:
   564                           	callstack 0
   565  00000C                     ___wmul@product:
   566                           	callstack 0
   567  00000C                     fputs@fp:
   568                           	callstack 0
   569                           
   570                           ; 2 bytes @ 0xB
   571  00000C                     	ds	2
   572  00000E                     fputs@c:
   573                           	callstack 0
   574  00000E                     LED_R@m:
   575                           	callstack 0
   576  00000E                     LED_C@m:
   577                           	callstack 0
   578  00000E                     LED_B@m:
   579                           	callstack 0
   580  00000E                     LED_G@m:
   581                           	callstack 0
   582  00000E                     compare@lower:
   583                           	callstack 0
   584                           
   585                           ; 2 bytes @ 0xD
   586  00000E                     	ds	1
   587  00000F                     fputs@i:
   588                           	callstack 0
   589                           
   590                           ; 2 bytes @ 0xE
   591  00000F                     	ds	1
   592  000010                     ??_LED_R:
   593  000010                     ??_LED_C:
   594  000010                     ??_LED_B:
   595  000010                     ??_LED_G:
   596  000010                     compare@value2compare:
   597                           	callstack 0
   598                           
   599                           ; 2 bytes @ 0xF
   600  000010                     	ds	1
   601  000011                     ?_pad:
   602                           	callstack 0
   603  000011                     ___aodiv@counter:
   604                           	callstack 0
   605  000011                     ___aomod@counter:
   606                           	callstack 0
   607  000011                     pad@fp:
   608                           	callstack 0
   609                           
   610                           ; 2 bytes @ 0x10
   611  000011                     	ds	1
   612  000012                     ___aodiv@sign:
   613                           	callstack 0
   614  000012                     ___aomod@sign:
   615                           	callstack 0
   616  000012                     compare@upper:
   617                           	callstack 0
   618                           
   619                           ; 2 bytes @ 0x11
   620  000012                     	ds	1
   621  000013                     ?_abs:
   622                           	callstack 0
   623  000013                     pad@buf:
   624                           	callstack 0
   625  000013                     abs@a:
   626                           	callstack 0
   627  000013                     ___aodiv@quotient:
   628                           	callstack 0
   629                           
   630                           ; 8 bytes @ 0x12
   631  000013                     	ds	1
   632  000014                     compare@result:
   633                           	callstack 0
   634                           
   635                           ; 1 bytes @ 0x13
   636  000014                     	ds	1
   637  000015                     ??_abs:
   638  000015                     detect_color@m:
   639                           	callstack 0
   640  000015                     pad@p:
   641                           	callstack 0
   642                           
   643                           ; 2 bytes @ 0x14
   644  000015                     	ds	2
   645  000017                     ??_detect_color:
   646  000017                     ??_pad:
   647                           
   648                           ; 1 bytes @ 0x16
   649  000017                     	ds	1
   650  000018                     pad@i:
   651                           	callstack 0
   652                           
   653                           ; 2 bytes @ 0x17
   654  000018                     	ds	1
   655  000019                     detect_color@RB:
   656                           	callstack 0
   657                           
   658                           ; 2 bytes @ 0x18
   659  000019                     	ds	1
   660  00001A                     pad@w:
   661                           	callstack 0
   662                           
   663                           ; 2 bytes @ 0x19
   664  00001A                     	ds	1
   665  00001B                     detect_color@GR:
   666                           	callstack 0
   667                           
   668                           ; 2 bytes @ 0x1A
   669  00001B                     	ds	1
   670  00001C                     ?_dtoa:
   671                           	callstack 0
   672  00001C                     dtoa@fp:
   673                           	callstack 0
   674                           
   675                           ; 2 bytes @ 0x1B
   676  00001C                     	ds	1
   677  00001D                     detect_color@GB:
   678                           	callstack 0
   679                           
   680                           ; 2 bytes @ 0x1C
   681  00001D                     	ds	1
   682  00001E                     dtoa@d:
   683                           	callstack 0
   684                           
   685                           ; 8 bytes @ 0x1D
   686  00001E                     	ds	1
   687  00001F                     detect_color@RG:
   688                           	callstack 0
   689                           
   690                           ; 2 bytes @ 0x1E
   691  00001F                     	ds	2
   692  000021                     detect_color@GG:
   693                           	callstack 0
   694                           
   695                           ; 2 bytes @ 0x20
   696  000021                     	ds	2
   697  000023                     detect_color@BB:
   698                           	callstack 0
   699                           
   700                           ; 2 bytes @ 0x22
   701  000023                     	ds	2
   702  000025                     detect_color@color:
   703                           	callstack 0
   704                           
   705                           ; 1 bytes @ 0x24
   706  000025                     	ds	1
   707  000026                     ??_dtoa:
   708  000026                     detect_color@BR:
   709                           	callstack 0
   710                           
   711                           ; 2 bytes @ 0x25
   712  000026                     	ds	2
   713  000028                     detect_color@BG:
   714                           	callstack 0
   715                           
   716                           ; 2 bytes @ 0x27
   717  000028                     	ds	2
   718  00002A                     detect_color@RR:
   719                           	callstack 0
   720                           
   721                           ; 2 bytes @ 0x29
   722  00002A                     	ds	4
   723  00002E                     _dtoa$2146:
   724                           	callstack 0
   725                           
   726                           ; 2 bytes @ 0x2D
   727  00002E                     	ds	2
   728  000030                     dtoa@p:
   729                           	callstack 0
   730                           
   731                           ; 2 bytes @ 0x2F
   732  000030                     	ds	2
   733  000032                     dtoa@w:
   734                           	callstack 0
   735                           
   736                           ; 2 bytes @ 0x31
   737  000032                     	ds	2
   738  000034                     dtoa@s:
   739                           	callstack 0
   740                           
   741                           ; 2 bytes @ 0x33
   742  000034                     	ds	2
   743  000036                     dtoa@n:
   744                           	callstack 0
   745                           
   746                           ; 8 bytes @ 0x35
   747  000036                     	ds	8
   748  00003E                     dtoa@i:
   749                           	callstack 0
   750                           
   751                           ; 2 bytes @ 0x3D
   752  00003E                     	ds	2
   753  000040                     ?_vfpfcnvrt:
   754                           	callstack 0
   755  000040                     vfpfcnvrt@fp:
   756                           	callstack 0
   757                           
   758                           ; 2 bytes @ 0x3F
   759  000040                     	ds	2
   760  000042                     vfpfcnvrt@fmt:
   761                           	callstack 0
   762                           
   763                           ; 2 bytes @ 0x41
   764  000042                     	ds	2
   765  000044                     vfpfcnvrt@ap:
   766                           	callstack 0
   767                           
   768                           ; 2 bytes @ 0x43
   769  000044                     	ds	2
   770  000046                     ??_vfpfcnvrt:
   771                           
   772                           ; 1 bytes @ 0x45
   773  000046                     	ds	2
   774  000048                     vfpfcnvrt@ll:
   775                           	callstack 0
   776                           
   777                           ; 8 bytes @ 0x47
   778  000048                     	ds	8
   779  000050                     ?_vfprintf:
   780                           	callstack 0
   781  000050                     vfprintf@fp:
   782                           	callstack 0
   783                           
   784                           ; 2 bytes @ 0x4F
   785  000050                     	ds	2
   786  000052                     vfprintf@fmt:
   787                           	callstack 0
   788                           
   789                           ; 2 bytes @ 0x51
   790  000052                     	ds	2
   791  000054                     vfprintf@ap:
   792                           	callstack 0
   793                           
   794                           ; 2 bytes @ 0x53
   795  000054                     	ds	2
   796  000056                     vfprintf@cfmt:
   797                           	callstack 0
   798                           
   799                           ; 2 bytes @ 0x55
   800  000056                     	ds	2
   801  000058                     color_display@m:
   802                           	callstack 0
   803                           
   804                           ; 2 bytes @ 0x57
   805  000058                     	ds	2
   806  00005A                     ??_main:
   807                           
   808                           ; 1 bytes @ 0x59
   809  00005A                     	ds	2
   810                           
   811 ;;
   812 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   813 ;;
   814 ;; *************** function _main *****************
   815 ;; Defined at:
   816 ;;		line 30 in file "main.c"
   817 ;; Parameters:    Size  Location     Type
   818 ;;		None
   819 ;; Auto vars:     Size  Location     Type
   820 ;;  motorR         10   19[BANK1 ] struct DC_motor
   821 ;;  motorL         10    9[BANK1 ] struct DC_motor
   822 ;;  rgb             8   29[BANK1 ] struct color_rgb
   823 ;;  x               2    7[BANK1 ] int 
   824 ;;  k               2    5[BANK1 ] int 
   825 ;;  j               2    3[BANK1 ] int 
   826 ;;  i               2    1[BANK1 ] int 
   827 ;;  complete        1    0[BANK1 ] unsigned char 
   828 ;;  color           1    0        unsigned char 
   829 ;; Return value:  Size  Location     Type
   830 ;;                  1    wreg      void 
   831 ;; Registers used:
   832 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   833 ;; Tracked objects:
   834 ;;		On entry : 0/0
   835 ;;		On exit  : 0/0
   836 ;;		Unchanged: 0/0
   837 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   838 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   839 ;;      Locals:         0       0      37       0       0       0       0       0       0       0       0       0       
      +0       0       0
   840 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   841 ;;      Totals:         2       0      37       0       0       0       0       0       0       0       0       0       
      +0       0       0
   842 ;;Total ram usage:       39 bytes
   843 ;; Hardware stack levels required when called: 9
   844 ;; This function calls:
   845 ;;		_I2C_2_Master_Init
   846 ;;		_LED_B
   847 ;;		_LED_C
   848 ;;		_LED_G
   849 ;;		_LED_R
   850 ;;		_color_click_init
   851 ;;		_color_display
   852 ;;		_color_predict
   853 ;;		_detect_color
   854 ;;		_initDCmotorsPWM
   855 ;;		_initDCmotors_parameter
   856 ;;		_initUSART4
   857 ;; This function is called by:
   858 ;;		Startup code after reset
   859 ;; This function uses a non-reentrant model
   860 ;;
   861                           
   862                           	psect	text0
   863  0016D4                     __ptext0:
   864                           	callstack 0
   865  0016D4                     _main:
   866                           	callstack 22
   867  0016D4                     
   868                           ;main.c: 31:     I2C_2_Master_Init();
   869  0016D4  EC62  F013         	call	_I2C_2_Master_Init	;wreg free
   870  0016D8                     
   871                           ;main.c: 32:     color_click_init();
   872  0016D8  ECD8  F012         	call	_color_click_init	;wreg free
   873  0016DC                     
   874                           ;main.c: 33:     initDCmotorsPWM(199);
   875  0016DC  0E00               	movlw	0
   876  0016DE  6E02               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
   877  0016E0  0EC7               	movlw	199
   878  0016E2  6E01               	movwf	initDCmotorsPWM@PWMperiod^0,c
   879  0016E4  EC1F  F012         	call	_initDCmotorsPWM	;wreg free
   880  0016E8                     
   881                           ;main.c: 35:     initUSART4();
   882  0016E8  ECAE  F013         	call	_initUSART4	;wreg free
   883  0016EC                     
   884                           ;main.c: 37:     struct color_rgb rgb;;main.c: 38:     struct DC_motor motorL, motorR;;m
      +                          ain.c: 40:     initDCmotors_parameter(&motorL, &motorR);
   885  0016EC  0E65               	movlw	low main@motorL
   886  0016EE  6E01               	movwf	initDCmotors_parameter@motorL^0,c
   887  0016F0  0E01               	movlw	high main@motorL
   888  0016F2  6E02               	movwf	(initDCmotors_parameter@motorL+1)^0,c
   889  0016F4  0E6F               	movlw	low main@motorR
   890  0016F6  6E03               	movwf	initDCmotors_parameter@motorR^0,c
   891  0016F8  0E01               	movlw	high main@motorR
   892  0016FA  6E04               	movwf	(initDCmotors_parameter@motorR+1)^0,c
   893  0016FC  EC31  F00F         	call	_initDCmotors_parameter	;wreg free
   894  001700                     
   895                           ;main.c: 42:     TRISFbits.TRISF6 = 0;
   896  001700  9C86               	bcf	134,6,c	;volatile
   897  001702                     
   898                           ;main.c: 43:     LATFbits.LATF6 = 0;
   899  001702  9C7E               	bcf	126,6,c	;volatile
   900  001704                     
   901                           ;main.c: 45:     TRISGbits.TRISG1 = 0;
   902  001704  9287               	bcf	135,1,c	;volatile
   903  001706                     
   904                           ;main.c: 46:     TRISFbits.TRISF7 = 0;
   905  001706  9E86               	bcf	134,7,c	;volatile
   906  001708                     
   907                           ;main.c: 47:     TRISAbits.TRISA4 = 0;
   908  001708  9881               	bcf	129,4,c	;volatile
   909  00170A                     
   910                           ;main.c: 48:     LATGbits.LATG1 = 1;
   911  00170A  827F               	bsf	127,1,c	;volatile
   912  00170C                     
   913                           ;main.c: 49:     LATFbits.LATF7 = 1;
   914  00170C  8E7E               	bsf	126,7,c	;volatile
   915  00170E                     
   916                           ;main.c: 50:     LATAbits.LATA4 = 1;
   917  00170E  8879               	bsf	121,4,c	;volatile
   918  001710                     
   919                           ;main.c: 53:     unsigned char complete = 0;
   920  001710  0E00               	movlw	0
   921  001712  0101               	movlb	1	; () banked
   922  001714  6F5C               	movwf	main@complete& (0+255),b
   923  001716                     
   924                           ; BSR set to: 1
   925                           ;main.c: 59:     _delay((unsigned long)((3000)*(64000000/4000.0)));
   926  001716  0EF4               	movlw	244
   927  001718  6E5B               	movwf	(??_main+1)^0,c
   928  00171A  0E82               	movlw	130
   929  00171C  6E5A               	movwf	??_main^0,c
   930  00171E  0E05               	movlw	5
   931  001720                     u2007:
   932  001720  2EE8               	decfsz	wreg,f,c
   933  001722  D7FE               	bra	u2007
   934  001724  2E5A               	decfsz	??_main^0,f,c
   935  001726  D7FC               	bra	u2007
   936  001728  2E5B               	decfsz	(??_main+1)^0,f,c
   937  00172A  D7FA               	bra	u2007
   938  00172C  F000               	nop	
   939  00172E  EF65  F00C         	goto	l2956
   940  001732                     l2880:
   941                           
   942                           ; BSR set to: 1
   943                           ;main.c: 70:                 for (i = 0; i < 50; ++i){
   944  001732  0E00               	movlw	0
   945  001734  6F5E               	movwf	(main@i+1)& (0+255),b
   946  001736  0E00               	movlw	0
   947  001738  6F5D               	movwf	main@i& (0+255),b
   948  00173A                     l2886:
   949                           
   950                           ; BSR set to: 1
   951                           ;main.c: 71:                     LED_C(&rgb);
   952  00173A  0E79               	movlw	low main@rgb
   953  00173C  6E0E               	movwf	LED_C@m^0,c
   954  00173E  0E01               	movlw	high main@rgb
   955  001740  6E0F               	movwf	(LED_C@m+1)^0,c
   956  001742  EC4C  F013         	call	_LED_C	;wreg free
   957  001746                     
   958                           ;main.c: 72:                     color_display(&rgb);
   959  001746  0E79               	movlw	low main@rgb
   960  001748  6E58               	movwf	color_display@m^0,c
   961  00174A  0E01               	movlw	high main@rgb
   962  00174C  6E59               	movwf	(color_display@m+1)^0,c
   963  00174E  EC9C  F010         	call	_color_display	;wreg free
   964  001752                     
   965                           ;main.c: 73:                     _delay((unsigned long)((100)*(64000000/4000.0)));
   966  001752  0E09               	movlw	9
   967  001754  6E5B               	movwf	(??_main+1)^0,c
   968  001756  0E1E               	movlw	30
   969  001758  6E5A               	movwf	??_main^0,c
   970  00175A  0EE4               	movlw	228
   971  00175C                     u2017:
   972  00175C  2EE8               	decfsz	wreg,f,c
   973  00175E  D7FE               	bra	u2017
   974  001760  2E5A               	decfsz	??_main^0,f,c
   975  001762  D7FC               	bra	u2017
   976  001764  2E5B               	decfsz	(??_main+1)^0,f,c
   977  001766  D7FA               	bra	u2017
   978  001768  D000               	nop2	
   979  00176A                     
   980                           ;main.c: 74:                 }
   981  00176A  0101               	movlb	1	; () banked
   982  00176C  4B5D               	infsnz	main@i& (0+255),f,b
   983  00176E  2B5E               	incf	(main@i+1)& (0+255),f,b
   984  001770                     
   985                           ; BSR set to: 1
   986  001770  BF5E               	btfsc	(main@i+1)& (0+255),7,b
   987  001772  EFC4  F00B         	goto	u1951
   988  001776  515E               	movf	(main@i+1)& (0+255),w,b
   989  001778  E109               	bnz	u1950
   990  00177A  0E32               	movlw	50
   991  00177C  5D5D               	subwf	main@i& (0+255),w,b
   992  00177E  A0D8               	btfss	status,0,c
   993  001780  EFC4  F00B         	goto	u1951
   994  001784  EFC6  F00B         	goto	u1950
   995  001788                     u1951:
   996  001788  EF9D  F00B         	goto	l2886
   997  00178C                     u1950:
   998  00178C                     
   999                           ; BSR set to: 1
  1000                           ;main.c: 75:                 color_predict(00000);
  1001  00178C  0E00               	movlw	0
  1002  00178E  ECC2  F00E         	call	_color_predict
  1003  001792                     
  1004                           ;main.c: 76:                 for (j = 0; j < 50; ++j){
  1005  001792  0E00               	movlw	0
  1006  001794  0101               	movlb	1	; () banked
  1007  001796  6F60               	movwf	(main@j+1)& (0+255),b
  1008  001798  0E00               	movlw	0
  1009  00179A  6F5F               	movwf	main@j& (0+255),b
  1010  00179C                     l2904:
  1011                           
  1012                           ; BSR set to: 1
  1013                           ;main.c: 77:                     LED_R(&rgb);
  1014  00179C  0E79               	movlw	low main@rgb
  1015  00179E  6E0E               	movwf	LED_R@m^0,c
  1016  0017A0  0E01               	movlw	high main@rgb
  1017  0017A2  6E0F               	movwf	(LED_R@m+1)^0,c
  1018  0017A4  EC0A  F013         	call	_LED_R	;wreg free
  1019  0017A8                     
  1020                           ;main.c: 78:                     color_display(&rgb);
  1021  0017A8  0E79               	movlw	low main@rgb
  1022  0017AA  6E58               	movwf	color_display@m^0,c
  1023  0017AC  0E01               	movlw	high main@rgb
  1024  0017AE  6E59               	movwf	(color_display@m+1)^0,c
  1025  0017B0  EC9C  F010         	call	_color_display	;wreg free
  1026  0017B4                     
  1027                           ;main.c: 79:                     _delay((unsigned long)((100)*(64000000/4000.0)));
  1028  0017B4  0E09               	movlw	9
  1029  0017B6  6E5B               	movwf	(??_main+1)^0,c
  1030  0017B8  0E1E               	movlw	30
  1031  0017BA  6E5A               	movwf	??_main^0,c
  1032  0017BC  0EE4               	movlw	228
  1033  0017BE                     u2027:
  1034  0017BE  2EE8               	decfsz	wreg,f,c
  1035  0017C0  D7FE               	bra	u2027
  1036  0017C2  2E5A               	decfsz	??_main^0,f,c
  1037  0017C4  D7FC               	bra	u2027
  1038  0017C6  2E5B               	decfsz	(??_main+1)^0,f,c
  1039  0017C8  D7FA               	bra	u2027
  1040  0017CA  D000               	nop2	
  1041  0017CC                     
  1042                           ;main.c: 80:                 }
  1043  0017CC  0101               	movlb	1	; () banked
  1044  0017CE  4B5F               	infsnz	main@j& (0+255),f,b
  1045  0017D0  2B60               	incf	(main@j+1)& (0+255),f,b
  1046  0017D2                     
  1047                           ; BSR set to: 1
  1048  0017D2  BF60               	btfsc	(main@j+1)& (0+255),7,b
  1049  0017D4  EFF5  F00B         	goto	u1961
  1050  0017D8  5160               	movf	(main@j+1)& (0+255),w,b
  1051  0017DA  E109               	bnz	u1960
  1052  0017DC  0E32               	movlw	50
  1053  0017DE  5D5F               	subwf	main@j& (0+255),w,b
  1054  0017E0  A0D8               	btfss	status,0,c
  1055  0017E2  EFF5  F00B         	goto	u1961
  1056  0017E6  EFF7  F00B         	goto	u1960
  1057  0017EA                     u1961:
  1058  0017EA  EFCE  F00B         	goto	l2904
  1059  0017EE                     u1960:
  1060  0017EE                     
  1061                           ; BSR set to: 1
  1062                           ;main.c: 81:                 color_predict(00000);
  1063  0017EE  0E00               	movlw	0
  1064  0017F0  ECC2  F00E         	call	_color_predict
  1065  0017F4                     
  1066                           ;main.c: 82:                 for (k = 0; k < 50; ++k){
  1067  0017F4  0E00               	movlw	0
  1068  0017F6  0101               	movlb	1	; () banked
  1069  0017F8  6F62               	movwf	(main@k+1)& (0+255),b
  1070  0017FA  0E00               	movlw	0
  1071  0017FC  6F61               	movwf	main@k& (0+255),b
  1072  0017FE                     l2922:
  1073                           
  1074                           ; BSR set to: 1
  1075                           ;main.c: 83:                     LED_G(&rgb);
  1076  0017FE  0E79               	movlw	low main@rgb
  1077  001800  6E0E               	movwf	LED_G@m^0,c
  1078  001802  0E01               	movlw	high main@rgb
  1079  001804  6E0F               	movwf	(LED_G@m+1)^0,c
  1080  001806  EC20  F013         	call	_LED_G	;wreg free
  1081  00180A                     
  1082                           ;main.c: 84:                     color_display(&rgb);
  1083  00180A  0E79               	movlw	low main@rgb
  1084  00180C  6E58               	movwf	color_display@m^0,c
  1085  00180E  0E01               	movlw	high main@rgb
  1086  001810  6E59               	movwf	(color_display@m+1)^0,c
  1087  001812  EC9C  F010         	call	_color_display	;wreg free
  1088  001816                     
  1089                           ;main.c: 85:                     _delay((unsigned long)((100)*(64000000/4000.0)));
  1090  001816  0E09               	movlw	9
  1091  001818  6E5B               	movwf	(??_main+1)^0,c
  1092  00181A  0E1E               	movlw	30
  1093  00181C  6E5A               	movwf	??_main^0,c
  1094  00181E  0EE4               	movlw	228
  1095  001820                     u2037:
  1096  001820  2EE8               	decfsz	wreg,f,c
  1097  001822  D7FE               	bra	u2037
  1098  001824  2E5A               	decfsz	??_main^0,f,c
  1099  001826  D7FC               	bra	u2037
  1100  001828  2E5B               	decfsz	(??_main+1)^0,f,c
  1101  00182A  D7FA               	bra	u2037
  1102  00182C  D000               	nop2	
  1103  00182E                     
  1104                           ;main.c: 86:                 }
  1105  00182E  0101               	movlb	1	; () banked
  1106  001830  4B61               	infsnz	main@k& (0+255),f,b
  1107  001832  2B62               	incf	(main@k+1)& (0+255),f,b
  1108  001834                     
  1109                           ; BSR set to: 1
  1110  001834  BF62               	btfsc	(main@k+1)& (0+255),7,b
  1111  001836  EF26  F00C         	goto	u1971
  1112  00183A  5162               	movf	(main@k+1)& (0+255),w,b
  1113  00183C  E109               	bnz	u1970
  1114  00183E  0E32               	movlw	50
  1115  001840  5D61               	subwf	main@k& (0+255),w,b
  1116  001842  A0D8               	btfss	status,0,c
  1117  001844  EF26  F00C         	goto	u1971
  1118  001848  EF28  F00C         	goto	u1970
  1119  00184C                     u1971:
  1120  00184C  EFFF  F00B         	goto	l2922
  1121  001850                     u1970:
  1122  001850                     
  1123                           ; BSR set to: 1
  1124                           ;main.c: 87:                 color_predict(00000);
  1125  001850  0E00               	movlw	0
  1126  001852  ECC2  F00E         	call	_color_predict
  1127  001856                     
  1128                           ;main.c: 88:                 for (x = 0; x < 50; ++x){
  1129  001856  0E00               	movlw	0
  1130  001858  0101               	movlb	1	; () banked
  1131  00185A  6F64               	movwf	(main@x+1)& (0+255),b
  1132  00185C  0E00               	movlw	0
  1133  00185E  6F63               	movwf	main@x& (0+255),b
  1134  001860                     l2940:
  1135                           
  1136                           ; BSR set to: 1
  1137                           ;main.c: 89:                     LED_B(&rgb);
  1138  001860  0E79               	movlw	low main@rgb
  1139  001862  6E0E               	movwf	LED_B@m^0,c
  1140  001864  0E01               	movlw	high main@rgb
  1141  001866  6E0F               	movwf	(LED_B@m+1)^0,c
  1142  001868  EC36  F013         	call	_LED_B	;wreg free
  1143  00186C                     
  1144                           ;main.c: 90:                     color_display(&rgb);
  1145  00186C  0E79               	movlw	low main@rgb
  1146  00186E  6E58               	movwf	color_display@m^0,c
  1147  001870  0E01               	movlw	high main@rgb
  1148  001872  6E59               	movwf	(color_display@m+1)^0,c
  1149  001874  EC9C  F010         	call	_color_display	;wreg free
  1150  001878                     
  1151                           ;main.c: 91:                     _delay((unsigned long)((100)*(64000000/4000.0)));
  1152  001878  0E09               	movlw	9
  1153  00187A  6E5B               	movwf	(??_main+1)^0,c
  1154  00187C  0E1E               	movlw	30
  1155  00187E  6E5A               	movwf	??_main^0,c
  1156  001880  0EE4               	movlw	228
  1157  001882                     u2047:
  1158  001882  2EE8               	decfsz	wreg,f,c
  1159  001884  D7FE               	bra	u2047
  1160  001886  2E5A               	decfsz	??_main^0,f,c
  1161  001888  D7FC               	bra	u2047
  1162  00188A  2E5B               	decfsz	(??_main+1)^0,f,c
  1163  00188C  D7FA               	bra	u2047
  1164  00188E  D000               	nop2	
  1165  001890                     
  1166                           ;main.c: 92:                 }
  1167  001890  0101               	movlb	1	; () banked
  1168  001892  4B63               	infsnz	main@x& (0+255),f,b
  1169  001894  2B64               	incf	(main@x+1)& (0+255),f,b
  1170  001896                     
  1171                           ; BSR set to: 1
  1172  001896  BF64               	btfsc	(main@x+1)& (0+255),7,b
  1173  001898  EF57  F00C         	goto	u1981
  1174  00189C  5164               	movf	(main@x+1)& (0+255),w,b
  1175  00189E  E109               	bnz	u1980
  1176  0018A0  0E32               	movlw	50
  1177  0018A2  5D63               	subwf	main@x& (0+255),w,b
  1178  0018A4  A0D8               	btfss	status,0,c
  1179  0018A6  EF57  F00C         	goto	u1981
  1180  0018AA  EF59  F00C         	goto	u1980
  1181  0018AE                     u1981:
  1182  0018AE  EF30  F00C         	goto	l2940
  1183  0018B2                     u1980:
  1184  0018B2                     
  1185                           ; BSR set to: 1
  1186                           ;main.c: 93:                 color_predict(00000);
  1187  0018B2  0E00               	movlw	0
  1188  0018B4  ECC2  F00E         	call	_color_predict
  1189  0018B8                     
  1190                           ;main.c: 94:                 complete = 1;
  1191  0018B8  0E01               	movlw	1
  1192  0018BA  0101               	movlb	1	; () banked
  1193  0018BC  6F5C               	movwf	main@complete& (0+255),b
  1194  0018BE                     
  1195                           ; BSR set to: 1
  1196                           ;main.c: 95:                 LED_C(&rgb);
  1197  0018BE  0E79               	movlw	low main@rgb
  1198  0018C0  6E0E               	movwf	LED_C@m^0,c
  1199  0018C2  0E01               	movlw	high main@rgb
  1200  0018C4  6E0F               	movwf	(LED_C@m+1)^0,c
  1201  0018C6  EC4C  F013         	call	_LED_C	;wreg free
  1202  0018CA                     l2956:
  1203                           
  1204                           ;main.c: 69:             while (complete == 0){
  1205  0018CA  0101               	movlb	1	; () banked
  1206  0018CC  515C               	movf	main@complete& (0+255),w,b
  1207  0018CE  B4D8               	btfsc	status,2,c
  1208  0018D0  EF6C  F00C         	goto	u1991
  1209  0018D4  EF6E  F00C         	goto	u1990
  1210  0018D8                     u1991:
  1211  0018D8  EF99  F00B         	goto	l2880
  1212  0018DC                     u1990:
  1213  0018DC  EF65  F00C         	goto	l2956
  1214  0018E0  EF00  F000         	goto	start
  1215  0018E4                     __end_of_main:
  1216                           	callstack 0
  1217                           
  1218 ;; *************** function _initUSART4 *****************
  1219 ;; Defined at:
  1220 ;;		line 4 in file "serial.c"
  1221 ;; Parameters:    Size  Location     Type
  1222 ;;		None
  1223 ;; Auto vars:     Size  Location     Type
  1224 ;;		None
  1225 ;; Return value:  Size  Location     Type
  1226 ;;                  1    wreg      void 
  1227 ;; Registers used:
  1228 ;;		wreg, status,2
  1229 ;; Tracked objects:
  1230 ;;		On entry : 0/0
  1231 ;;		On exit  : 0/0
  1232 ;;		Unchanged: 0/0
  1233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1234 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1235 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1236 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1237 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1238 ;;Total ram usage:        0 bytes
  1239 ;; Hardware stack levels used: 1
  1240 ;; This function calls:
  1241 ;;		Nothing
  1242 ;; This function is called by:
  1243 ;;		_main
  1244 ;; This function uses a non-reentrant model
  1245 ;;
  1246                           
  1247                           	psect	text1
  1248  00275C                     __ptext1:
  1249                           	callstack 0
  1250  00275C                     _initUSART4:
  1251                           	callstack 30
  1252  00275C                     
  1253                           ;serial.c: 8:     RC0PPS = 0x12;
  1254  00275C  0E12               	movlw	18
  1255  00275E  010E               	movlb	14	; () banked
  1256  002760  6F62               	movwf	98,b	;volatile
  1257                           
  1258                           ;serial.c: 9:     RX4PPS = 0x11;
  1259  002762  0E11               	movlw	17
  1260  002764  6F15               	movwf	21,b	;volatile
  1261  002766                     
  1262                           ; BSR set to: 14
  1263                           ;serial.c: 11:     BAUD4CONbits.BRG16 = 0;
  1264  002766  97E9               	bcf	233,3,b	;volatile
  1265  002768                     
  1266                           ; BSR set to: 14
  1267                           ;serial.c: 12:     TX4STAbits.BRGH = 0;
  1268  002768  95E8               	bcf	232,2,b	;volatile
  1269                           
  1270                           ;serial.c: 13:     SP4BRGL = 51;
  1271  00276A  0E33               	movlw	51
  1272  00276C  6FE5               	movwf	229,b	;volatile
  1273                           
  1274                           ;serial.c: 15:     SP4BRGH = 0;
  1275  00276E  0E00               	movlw	0
  1276  002770  6FE6               	movwf	230,b	;volatile
  1277  002772                     
  1278                           ; BSR set to: 14
  1279                           ;serial.c: 17:     RC4STAbits.CREN = 1;
  1280  002772  89E7               	bsf	231,4,b	;volatile
  1281  002774                     
  1282                           ; BSR set to: 14
  1283                           ;serial.c: 18:     TX4STAbits.TXEN = 1;
  1284  002774  8BE8               	bsf	232,5,b	;volatile
  1285  002776                     
  1286                           ; BSR set to: 14
  1287                           ;serial.c: 19:     RC4STAbits.SPEN = 1;
  1288  002776  8FE7               	bsf	231,7,b	;volatile
  1289  002778                     
  1290                           ; BSR set to: 14
  1291  002778  0012               	return		;funcret
  1292  00277A                     __end_of_initUSART4:
  1293                           	callstack 0
  1294                           
  1295 ;; *************** function _initDCmotors_parameter *****************
  1296 ;; Defined at:
  1297 ;;		line 37 in file "dc_motor.c"
  1298 ;; Parameters:    Size  Location     Type
  1299 ;;  motorL          2    0[COMRAM] PTR struct DC_motor
  1300 ;;		 -> main@motorL(10), 
  1301 ;;  motorR          2    2[COMRAM] PTR struct DC_motor
  1302 ;;		 -> main@motorR(10), 
  1303 ;; Auto vars:     Size  Location     Type
  1304 ;;		None
  1305 ;; Return value:  Size  Location     Type
  1306 ;;                  1    wreg      void 
  1307 ;; Registers used:
  1308 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1309 ;; Tracked objects:
  1310 ;;		On entry : 0/0
  1311 ;;		On exit  : 0/0
  1312 ;;		Unchanged: 0/0
  1313 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1314 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1315 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1316 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1317 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1318 ;;Total ram usage:        4 bytes
  1319 ;; Hardware stack levels used: 1
  1320 ;; This function calls:
  1321 ;;		Nothing
  1322 ;; This function is called by:
  1323 ;;		_main
  1324 ;; This function uses a non-reentrant model
  1325 ;;
  1326                           
  1327                           	psect	text2
  1328  001E62                     __ptext2:
  1329                           	callstack 0
  1330  001E62                     _initDCmotors_parameter:
  1331                           	callstack 30
  1332  001E62                     
  1333                           ;dc_motor.c: 39:     motorL->power = 0;
  1334  001E62  C001  FFD9         	movff	initDCmotors_parameter@motorL,fsr2l
  1335  001E66  C002  FFDA         	movff	initDCmotors_parameter@motorL+1,fsr2h
  1336  001E6A  0E00               	movlw	0
  1337  001E6C  6EDF               	movwf	indf2,c
  1338  001E6E                     
  1339                           ;dc_motor.c: 40:     motorL->direction = 1;
  1340  001E6E  EE20 F001          	lfsr	2,1
  1341  001E72  5001               	movf	initDCmotors_parameter@motorL^0,w,c
  1342  001E74  26D9               	addwf	fsr2l,f,c
  1343  001E76  5002               	movf	(initDCmotors_parameter@motorL+1)^0,w,c
  1344  001E78  22DA               	addwfc	fsr2h,f,c
  1345  001E7A  0E01               	movlw	1
  1346  001E7C  6EDF               	movwf	indf2,c
  1347  001E7E                     
  1348                           ;dc_motor.c: 41:     motorL->dutyHighByte = (unsigned char *)(&PWM6DCH);
  1349  001E7E  EE20 F002          	lfsr	2,2
  1350  001E82  5001               	movf	initDCmotors_parameter@motorL^0,w,c
  1351  001E84  26D9               	addwf	fsr2l,f,c
  1352  001E86  5002               	movf	(initDCmotors_parameter@motorL+1)^0,w,c
  1353  001E88  22DA               	addwfc	fsr2h,f,c
  1354  001E8A  0EA3               	movlw	163
  1355  001E8C  6EDE               	movwf	postinc2,c
  1356  001E8E  0E0F               	movlw	15
  1357  001E90  6EDD               	movwf	postdec2,c
  1358  001E92                     
  1359                           ;dc_motor.c: 42:     motorL->dir_LAT = (unsigned char *)(&LATE);
  1360  001E92  EE20 F004          	lfsr	2,4
  1361  001E96  5001               	movf	initDCmotors_parameter@motorL^0,w,c
  1362  001E98  26D9               	addwf	fsr2l,f,c
  1363  001E9A  5002               	movf	(initDCmotors_parameter@motorL+1)^0,w,c
  1364  001E9C  22DA               	addwfc	fsr2h,f,c
  1365  001E9E  0E7D               	movlw	125
  1366  001EA0  6EDE               	movwf	postinc2,c
  1367  001EA2  0E0F               	movlw	15
  1368  001EA4  6EDD               	movwf	postdec2,c
  1369  001EA6                     
  1370                           ;dc_motor.c: 43:     motorL->dir_pin = 4;
  1371  001EA6  EE20 F006          	lfsr	2,6
  1372  001EAA  5001               	movf	initDCmotors_parameter@motorL^0,w,c
  1373  001EAC  26D9               	addwf	fsr2l,f,c
  1374  001EAE  5002               	movf	(initDCmotors_parameter@motorL+1)^0,w,c
  1375  001EB0  22DA               	addwfc	fsr2h,f,c
  1376  001EB2  0E04               	movlw	4
  1377  001EB4  6EDF               	movwf	indf2,c
  1378  001EB6                     
  1379                           ;dc_motor.c: 44:     motorL->PWMperiod = 199;
  1380  001EB6  EE20 F007          	lfsr	2,7
  1381  001EBA  5001               	movf	initDCmotors_parameter@motorL^0,w,c
  1382  001EBC  26D9               	addwf	fsr2l,f,c
  1383  001EBE  5002               	movf	(initDCmotors_parameter@motorL+1)^0,w,c
  1384  001EC0  22DA               	addwfc	fsr2h,f,c
  1385  001EC2  0EC7               	movlw	199
  1386  001EC4  6EDE               	movwf	postinc2,c
  1387  001EC6  0E00               	movlw	0
  1388  001EC8  6EDD               	movwf	postdec2,c
  1389  001ECA                     
  1390                           ;dc_motor.c: 47:     motorR->power = 0;
  1391  001ECA  C003  FFD9         	movff	initDCmotors_parameter@motorR,fsr2l
  1392  001ECE  C004  FFDA         	movff	initDCmotors_parameter@motorR+1,fsr2h
  1393  001ED2  0E00               	movlw	0
  1394  001ED4  6EDF               	movwf	indf2,c
  1395                           
  1396                           ;dc_motor.c: 48:     motorR->direction = 1;
  1397  001ED6  EE20 F001          	lfsr	2,1
  1398  001EDA  5003               	movf	initDCmotors_parameter@motorR^0,w,c
  1399  001EDC  26D9               	addwf	fsr2l,f,c
  1400  001EDE  5004               	movf	(initDCmotors_parameter@motorR+1)^0,w,c
  1401  001EE0  22DA               	addwfc	fsr2h,f,c
  1402  001EE2  0E01               	movlw	1
  1403  001EE4  6EDF               	movwf	indf2,c
  1404                           
  1405                           ;dc_motor.c: 49:     motorR->dutyHighByte = (unsigned char *)(&PWM7DCH);
  1406  001EE6  EE20 F002          	lfsr	2,2
  1407  001EEA  5003               	movf	initDCmotors_parameter@motorR^0,w,c
  1408  001EEC  26D9               	addwf	fsr2l,f,c
  1409  001EEE  5004               	movf	(initDCmotors_parameter@motorR+1)^0,w,c
  1410  001EF0  22DA               	addwfc	fsr2h,f,c
  1411  001EF2  0EA0               	movlw	160
  1412  001EF4  6EDE               	movwf	postinc2,c
  1413  001EF6  0E0F               	movlw	15
  1414  001EF8  6EDD               	movwf	postdec2,c
  1415                           
  1416                           ;dc_motor.c: 50:     motorR->dir_LAT = (unsigned char *)(&LATG);
  1417  001EFA  EE20 F004          	lfsr	2,4
  1418  001EFE  5003               	movf	initDCmotors_parameter@motorR^0,w,c
  1419  001F00  26D9               	addwf	fsr2l,f,c
  1420  001F02  5004               	movf	(initDCmotors_parameter@motorR+1)^0,w,c
  1421  001F04  22DA               	addwfc	fsr2h,f,c
  1422  001F06  0E7F               	movlw	127
  1423  001F08  6EDE               	movwf	postinc2,c
  1424  001F0A  0E0F               	movlw	15
  1425  001F0C  6EDD               	movwf	postdec2,c
  1426                           
  1427                           ;dc_motor.c: 51:     motorR->dir_pin = 6;
  1428  001F0E  EE20 F006          	lfsr	2,6
  1429  001F12  5003               	movf	initDCmotors_parameter@motorR^0,w,c
  1430  001F14  26D9               	addwf	fsr2l,f,c
  1431  001F16  5004               	movf	(initDCmotors_parameter@motorR+1)^0,w,c
  1432  001F18  22DA               	addwfc	fsr2h,f,c
  1433  001F1A  0E06               	movlw	6
  1434  001F1C  6EDF               	movwf	indf2,c
  1435                           
  1436                           ;dc_motor.c: 52:     motorR->PWMperiod = 199;
  1437  001F1E  EE20 F007          	lfsr	2,7
  1438  001F22  5003               	movf	initDCmotors_parameter@motorR^0,w,c
  1439  001F24  26D9               	addwf	fsr2l,f,c
  1440  001F26  5004               	movf	(initDCmotors_parameter@motorR+1)^0,w,c
  1441  001F28  22DA               	addwfc	fsr2h,f,c
  1442  001F2A  0EC7               	movlw	199
  1443  001F2C  6EDE               	movwf	postinc2,c
  1444  001F2E  0E00               	movlw	0
  1445  001F30  6EDD               	movwf	postdec2,c
  1446  001F32  0012               	return		;funcret
  1447  001F34                     __end_of_initDCmotors_parameter:
  1448                           	callstack 0
  1449                           
  1450 ;; *************** function _initDCmotorsPWM *****************
  1451 ;; Defined at:
  1452 ;;		line 7 in file "dc_motor.c"
  1453 ;; Parameters:    Size  Location     Type
  1454 ;;  PWMperiod       2    0[COMRAM] int 
  1455 ;; Auto vars:     Size  Location     Type
  1456 ;;		None
  1457 ;; Return value:  Size  Location     Type
  1458 ;;                  1    wreg      void 
  1459 ;; Registers used:
  1460 ;;		wreg, status,2
  1461 ;; Tracked objects:
  1462 ;;		On entry : 0/0
  1463 ;;		On exit  : 0/0
  1464 ;;		Unchanged: 0/0
  1465 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1466 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1467 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1468 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1469 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1470 ;;Total ram usage:        2 bytes
  1471 ;; Hardware stack levels used: 1
  1472 ;; This function calls:
  1473 ;;		Nothing
  1474 ;; This function is called by:
  1475 ;;		_main
  1476 ;; This function uses a non-reentrant model
  1477 ;;
  1478                           
  1479                           	psect	text3
  1480  00243E                     __ptext3:
  1481                           	callstack 0
  1482  00243E                     _initDCmotorsPWM:
  1483                           	callstack 30
  1484  00243E                     
  1485                           ;dc_motor.c: 10:     TRISEbits.TRISE2=0;
  1486  00243E  9485               	bcf	133,2,c	;volatile
  1487                           
  1488                           ;dc_motor.c: 11:     TRISCbits.TRISC7=0;
  1489  002440  9E83               	bcf	131,7,c	;volatile
  1490                           
  1491                           ;dc_motor.c: 12:     TRISGbits.TRISG6=0;
  1492  002442  9C87               	bcf	135,6,c	;volatile
  1493                           
  1494                           ;dc_motor.c: 13:     TRISEbits.TRISE4=0;
  1495  002444  9885               	bcf	133,4,c	;volatile
  1496                           
  1497                           ;dc_motor.c: 14:     LATEbits.LATE2=0;
  1498  002446  947D               	bcf	125,2,c	;volatile
  1499                           
  1500                           ;dc_motor.c: 15:     LATCbits.LATC7=0;
  1501  002448  9E7B               	bcf	123,7,c	;volatile
  1502                           
  1503                           ;dc_motor.c: 16:     LATGbits.LATG6=0;
  1504  00244A  9C7F               	bcf	127,6,c	;volatile
  1505                           
  1506                           ;dc_motor.c: 17:     LATEbits.LATE4=0;
  1507  00244C  987D               	bcf	125,4,c	;volatile
  1508  00244E                     
  1509                           ;dc_motor.c: 20:     T2CONbits.CKPS=0b011;
  1510  00244E  50BD               	movf	189,w,c	;volatile
  1511  002450  0B8F               	andlw	-113
  1512  002452  0930               	iorlw	48
  1513  002454  6EBD               	movwf	189,c	;volatile
  1514                           
  1515                           ;dc_motor.c: 21:     T2HLTbits.MODE=0b00000;
  1516  002456  0EE0               	movlw	-32
  1517  002458  16BE               	andwf	190,f,c	;volatile
  1518                           
  1519                           ;dc_motor.c: 22:     T2CLKCONbits.CS=0b0001;
  1520  00245A  50BF               	movf	191,w,c	;volatile
  1521  00245C  0BF0               	andlw	-16
  1522  00245E  0901               	iorlw	1
  1523  002460  6EBF               	movwf	191,c	;volatile
  1524                           
  1525                           ;dc_motor.c: 25:     T2PR=200-1;
  1526  002462  0EC7               	movlw	199
  1527  002464  6EBC               	movwf	188,c	;volatile
  1528  002466                     
  1529                           ;dc_motor.c: 26:     T2CONbits.ON=1;
  1530  002466  8EBD               	bsf	189,7,c	;volatile
  1531                           
  1532                           ;dc_motor.c: 28:     RE2PPS=0x0A;
  1533  002468  0E0A               	movlw	10
  1534  00246A  010E               	movlb	14	; () banked
  1535  00246C  6F74               	movwf	116,b	;volatile
  1536                           
  1537                           ;dc_motor.c: 29:     RC7PPS=0x0B;
  1538  00246E  0E0B               	movlw	11
  1539  002470  6F69               	movwf	105,b	;volatile
  1540                           
  1541                           ;dc_motor.c: 31:     PWM6DCH=0;
  1542  002472  0E00               	movlw	0
  1543  002474  6EA3               	movwf	163,c	;volatile
  1544                           
  1545                           ;dc_motor.c: 32:     PWM7DCH=0;
  1546  002476  0E00               	movlw	0
  1547  002478  6EA0               	movwf	160,c	;volatile
  1548  00247A                     
  1549                           ; BSR set to: 14
  1550                           ;dc_motor.c: 34:     PWM6CONbits.EN = 1;
  1551  00247A  8EA4               	bsf	164,7,c	;volatile
  1552  00247C                     
  1553                           ; BSR set to: 14
  1554                           ;dc_motor.c: 35:     PWM7CONbits.EN = 1;
  1555  00247C  8EA1               	bsf	161,7,c	;volatile
  1556  00247E                     
  1557                           ; BSR set to: 14
  1558  00247E  0012               	return		;funcret
  1559  002480                     __end_of_initDCmotorsPWM:
  1560                           	callstack 0
  1561                           
  1562 ;; *************** function _detect_color *****************
  1563 ;; Defined at:
  1564 ;;		line 161 in file "color.c"
  1565 ;; Parameters:    Size  Location     Type
  1566 ;;  m               2   20[COMRAM] PTR struct color_rgb
  1567 ;;		 -> main@rgb(8), 
  1568 ;; Auto vars:     Size  Location     Type
  1569 ;;  RR              2   41[COMRAM] unsigned int 
  1570 ;;  BG              2   39[COMRAM] unsigned int 
  1571 ;;  BR              2   37[COMRAM] unsigned int 
  1572 ;;  BB              2   34[COMRAM] unsigned int 
  1573 ;;  GG              2   32[COMRAM] unsigned int 
  1574 ;;  RG              2   30[COMRAM] unsigned int 
  1575 ;;  GB              2   28[COMRAM] unsigned int 
  1576 ;;  GR              2   26[COMRAM] unsigned int 
  1577 ;;  RB              2   24[COMRAM] unsigned int 
  1578 ;;  color           1   36[COMRAM] unsigned char 
  1579 ;; Return value:  Size  Location     Type
  1580 ;;                  1    wreg      unsigned char 
  1581 ;; Registers used:
  1582 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1583 ;; Tracked objects:
  1584 ;;		On entry : 0/0
  1585 ;;		On exit  : 0/0
  1586 ;;		Unchanged: 0/0
  1587 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1588 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1589 ;;      Locals:        19       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1590 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1591 ;;      Totals:        23       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1592 ;;Total ram usage:       23 bytes
  1593 ;; Hardware stack levels used: 1
  1594 ;; Hardware stack levels required when called: 5
  1595 ;; This function calls:
  1596 ;;		_LED_B
  1597 ;;		_LED_G
  1598 ;;		_LED_R
  1599 ;;		___lwdiv
  1600 ;;		___wmul
  1601 ;;		_compare
  1602 ;;		_read_color
  1603 ;; This function is called by:
  1604 ;;		_main
  1605 ;; This function uses a non-reentrant model
  1606 ;;
  1607                           
  1608                           	psect	text4
  1609  000E50                     __ptext4:
  1610                           	callstack 0
  1611  000E50                     _detect_color:
  1612                           	callstack 25
  1613  000E50  0E00               	movlw	0
  1614  000E52  6E20               	movwf	(detect_color@RG+1)^0,c
  1615  000E54  0E00               	movlw	0
  1616  000E56  6E1F               	movwf	detect_color@RG^0,c
  1617  000E58  0E00               	movlw	0
  1618  000E5A  6E1A               	movwf	(detect_color@RB+1)^0,c
  1619  000E5C  0E00               	movlw	0
  1620  000E5E  6E19               	movwf	detect_color@RB^0,c
  1621  000E60  0E00               	movlw	0
  1622  000E62  6E1C               	movwf	(detect_color@GR+1)^0,c
  1623  000E64  0E00               	movlw	0
  1624  000E66  6E1B               	movwf	detect_color@GR^0,c
  1625  000E68  0E00               	movlw	0
  1626  000E6A  6E22               	movwf	(detect_color@GG+1)^0,c
  1627  000E6C  0E00               	movlw	0
  1628  000E6E  6E21               	movwf	detect_color@GG^0,c
  1629  000E70  0E00               	movlw	0
  1630  000E72  6E1E               	movwf	(detect_color@GB+1)^0,c
  1631  000E74  0E00               	movlw	0
  1632  000E76  6E1D               	movwf	detect_color@GB^0,c
  1633  000E78  0E00               	movlw	0
  1634  000E7A  6E27               	movwf	(detect_color@BR+1)^0,c
  1635  000E7C  0E00               	movlw	0
  1636  000E7E  6E26               	movwf	detect_color@BR^0,c
  1637  000E80  0E00               	movlw	0
  1638  000E82  6E29               	movwf	(detect_color@BG+1)^0,c
  1639  000E84  0E00               	movlw	0
  1640  000E86  6E28               	movwf	detect_color@BG^0,c
  1641  000E88  0E00               	movlw	0
  1642  000E8A  6E24               	movwf	(detect_color@BB+1)^0,c
  1643  000E8C  0E00               	movlw	0
  1644  000E8E  6E23               	movwf	detect_color@BB^0,c
  1645                           
  1646                           ;color.c: 167:     unsigned char color = 0;
  1647  000E90  0E00               	movlw	0
  1648  000E92  6E25               	movwf	detect_color@color^0,c
  1649  000E94                     
  1650                           ;color.c: 169:     LED_R(m);
  1651  000E94  C015  F00E         	movff	detect_color@m,LED_R@m
  1652  000E98  C016  F00F         	movff	detect_color@m+1,LED_R@m+1
  1653  000E9C  EC0A  F013         	call	_LED_R	;wreg free
  1654  000EA0                     
  1655                           ;color.c: 170:     read_color(m);
  1656  000EA0  C015  F00C         	movff	detect_color@m,read_color@m
  1657  000EA4  C016  F00D         	movff	detect_color@m+1,read_color@m+1
  1658  000EA8  EC05  F011         	call	_read_color	;wreg free
  1659  000EAC                     
  1660                           ;color.c: 171:     RR = m->R; RG = m->G; RB = m->B;
  1661  000EAC  C015  FFD9         	movff	detect_color@m,fsr2l
  1662  000EB0  C016  FFDA         	movff	detect_color@m+1,fsr2h
  1663  000EB4  CFDE F02A          	movff	postinc2,detect_color@RR
  1664  000EB8  CFDD F02B          	movff	postdec2,detect_color@RR+1
  1665  000EBC  EE20 F002          	lfsr	2,2
  1666  000EC0  5015               	movf	detect_color@m^0,w,c
  1667  000EC2  26D9               	addwf	fsr2l,f,c
  1668  000EC4  5016               	movf	(detect_color@m+1)^0,w,c
  1669  000EC6  22DA               	addwfc	fsr2h,f,c
  1670  000EC8  CFDE F01F          	movff	postinc2,detect_color@RG
  1671  000ECC  CFDD F020          	movff	postdec2,detect_color@RG+1
  1672  000ED0                     
  1673                           ;color.c: 172:     _delay((unsigned long)((50)*(64000000/4000.0)));
  1674  000ED0  0E05               	movlw	5
  1675  000ED2  6E18               	movwf	(??_detect_color+1)^0,c
  1676  000ED4  0E0F               	movlw	15
  1677  000ED6  6E17               	movwf	??_detect_color^0,c
  1678  000ED8  0EF1               	movlw	241
  1679  000EDA                     u2057:
  1680  000EDA  2EE8               	decfsz	wreg,f,c
  1681  000EDC  D7FE               	bra	u2057
  1682  000EDE  2E17               	decfsz	??_detect_color^0,f,c
  1683  000EE0  D7FC               	bra	u2057
  1684  000EE2  2E18               	decfsz	(??_detect_color+1)^0,f,c
  1685  000EE4  D7FA               	bra	u2057
  1686  000EE6  F000               	nop	
  1687  000EE8                     
  1688                           ;color.c: 174:     LED_G(m);
  1689  000EE8  C015  F00E         	movff	detect_color@m,LED_G@m
  1690  000EEC  C016  F00F         	movff	detect_color@m+1,LED_G@m+1
  1691  000EF0  EC20  F013         	call	_LED_G	;wreg free
  1692  000EF4                     
  1693                           ;color.c: 175:     read_color(m);
  1694  000EF4  C015  F00C         	movff	detect_color@m,read_color@m
  1695  000EF8  C016  F00D         	movff	detect_color@m+1,read_color@m+1
  1696  000EFC  EC05  F011         	call	_read_color	;wreg free
  1697  000F00  EE20 F002          	lfsr	2,2
  1698  000F04  5015               	movf	detect_color@m^0,w,c
  1699  000F06  26D9               	addwf	fsr2l,f,c
  1700  000F08  5016               	movf	(detect_color@m+1)^0,w,c
  1701  000F0A  22DA               	addwfc	fsr2h,f,c
  1702  000F0C  CFDE F021          	movff	postinc2,detect_color@GG
  1703  000F10  CFDD F022          	movff	postdec2,detect_color@GG+1
  1704  000F14                     
  1705                           ;color.c: 177:     _delay((unsigned long)((50)*(64000000/4000.0)));
  1706  000F14  0E05               	movlw	5
  1707  000F16  6E18               	movwf	(??_detect_color+1)^0,c
  1708  000F18  0E0F               	movlw	15
  1709  000F1A  6E17               	movwf	??_detect_color^0,c
  1710  000F1C  0EF1               	movlw	241
  1711  000F1E                     u2067:
  1712  000F1E  2EE8               	decfsz	wreg,f,c
  1713  000F20  D7FE               	bra	u2067
  1714  000F22  2E17               	decfsz	??_detect_color^0,f,c
  1715  000F24  D7FC               	bra	u2067
  1716  000F26  2E18               	decfsz	(??_detect_color+1)^0,f,c
  1717  000F28  D7FA               	bra	u2067
  1718  000F2A  F000               	nop	
  1719  000F2C                     
  1720                           ;color.c: 179:     LED_B(m);
  1721  000F2C  C015  F00E         	movff	detect_color@m,LED_B@m
  1722  000F30  C016  F00F         	movff	detect_color@m+1,LED_B@m+1
  1723  000F34  EC36  F013         	call	_LED_B	;wreg free
  1724  000F38                     
  1725                           ;color.c: 180:     read_color(m);
  1726  000F38  C015  F00C         	movff	detect_color@m,read_color@m
  1727  000F3C  C016  F00D         	movff	detect_color@m+1,read_color@m+1
  1728  000F40  EC05  F011         	call	_read_color	;wreg free
  1729  000F44                     
  1730                           ;color.c: 181:     BR = m->R; BG = m->G; BB = m->B;
  1731  000F44  C015  FFD9         	movff	detect_color@m,fsr2l
  1732  000F48  C016  FFDA         	movff	detect_color@m+1,fsr2h
  1733  000F4C  CFDE F026          	movff	postinc2,detect_color@BR
  1734  000F50  CFDD F027          	movff	postdec2,detect_color@BR+1
  1735  000F54  EE20 F002          	lfsr	2,2
  1736  000F58  5015               	movf	detect_color@m^0,w,c
  1737  000F5A  26D9               	addwf	fsr2l,f,c
  1738  000F5C  5016               	movf	(detect_color@m+1)^0,w,c
  1739  000F5E  22DA               	addwfc	fsr2h,f,c
  1740  000F60  CFDE F028          	movff	postinc2,detect_color@BG
  1741  000F64  CFDD F029          	movff	postdec2,detect_color@BG+1
  1742  000F68  EE20 F004          	lfsr	2,4
  1743  000F6C  5015               	movf	detect_color@m^0,w,c
  1744  000F6E  26D9               	addwf	fsr2l,f,c
  1745  000F70  5016               	movf	(detect_color@m+1)^0,w,c
  1746  000F72  22DA               	addwfc	fsr2h,f,c
  1747  000F74  CFDE F023          	movff	postinc2,detect_color@BB
  1748  000F78  CFDD F024          	movff	postdec2,detect_color@BB+1
  1749  000F7C                     
  1750                           ;color.c: 182:     _delay((unsigned long)((50)*(64000000/4000.0)));
  1751  000F7C  0E05               	movlw	5
  1752  000F7E  6E18               	movwf	(??_detect_color+1)^0,c
  1753  000F80  0E0F               	movlw	15
  1754  000F82  6E17               	movwf	??_detect_color^0,c
  1755  000F84  0EF1               	movlw	241
  1756  000F86                     u2077:
  1757  000F86  2EE8               	decfsz	wreg,f,c
  1758  000F88  D7FE               	bra	u2077
  1759  000F8A  2E17               	decfsz	??_detect_color^0,f,c
  1760  000F8C  D7FC               	bra	u2077
  1761  000F8E  2E18               	decfsz	(??_detect_color+1)^0,f,c
  1762  000F90  D7FA               	bra	u2077
  1763  000F92  F000               	nop	
  1764  000F94                     
  1765                           ;color.c: 184:     if (compare(RR, 600, 1)){
  1766  000F94  C02A  F00E         	movff	detect_color@RR,compare@lower
  1767  000F98  C02B  F00F         	movff	detect_color@RR+1,compare@lower+1
  1768  000F9C  0E02               	movlw	2
  1769  000F9E  6E11               	movwf	(compare@value2compare+1)^0,c
  1770  000FA0  0E58               	movlw	88
  1771  000FA2  6E10               	movwf	compare@value2compare^0,c
  1772  000FA4  0E00               	movlw	0
  1773  000FA6  6E13               	movwf	(compare@upper+1)^0,c
  1774  000FA8  0E01               	movlw	1
  1775  000FAA  6E12               	movwf	compare@upper^0,c
  1776  000FAC  ECA1  F012         	call	_compare	;wreg free
  1777  000FB0  0900               	iorlw	0
  1778  000FB2  B4D8               	btfsc	status,2,c
  1779  000FB4  EFDE  F007         	goto	u1681
  1780  000FB8  EFE0  F007         	goto	u1680
  1781  000FBC                     u1681:
  1782  000FBC  EF84  F008         	goto	l2654
  1783  000FC0                     u1680:
  1784  000FC0                     
  1785                           ;color.c: 185:         if (compare(816, GG/BB*200, GG/BB*200 + 10)){color = 9;}
  1786  000FC0  0E03               	movlw	3
  1787  000FC2  6E0F               	movwf	(compare@lower+1)^0,c
  1788  000FC4  0E30               	movlw	48
  1789  000FC6  6E0E               	movwf	compare@lower^0,c
  1790  000FC8  C023  F003         	movff	detect_color@BB,___lwdiv@divisor
  1791  000FCC  C024  F004         	movff	detect_color@BB+1,___lwdiv@divisor+1
  1792  000FD0  C021  F001         	movff	detect_color@GG,___lwdiv@dividend
  1793  000FD4  C022  F002         	movff	detect_color@GG+1,___lwdiv@dividend+1
  1794  000FD8  EC62  F010         	call	___lwdiv	;wreg free
  1795  000FDC  C001  F008         	movff	?___lwdiv,___wmul@multiplier
  1796  000FE0  C002  F009         	movff	?___lwdiv+1,___wmul@multiplier+1
  1797  000FE4  0E00               	movlw	0
  1798  000FE6  6E0B               	movwf	(___wmul@multiplicand+1)^0,c
  1799  000FE8  0EC8               	movlw	200
  1800  000FEA  6E0A               	movwf	___wmul@multiplicand^0,c
  1801  000FEC  EC8B  F013         	call	___wmul	;wreg free
  1802  000FF0  C008  F010         	movff	?___wmul,compare@value2compare
  1803  000FF4  C009  F011         	movff	?___wmul+1,compare@value2compare+1
  1804  000FF8  C023  F003         	movff	detect_color@BB,___lwdiv@divisor
  1805  000FFC  C024  F004         	movff	detect_color@BB+1,___lwdiv@divisor+1
  1806  001000  C021  F001         	movff	detect_color@GG,___lwdiv@dividend
  1807  001004  C022  F002         	movff	detect_color@GG+1,___lwdiv@dividend+1
  1808  001008  EC62  F010         	call	___lwdiv	;wreg free
  1809  00100C  C001  F008         	movff	?___lwdiv,___wmul@multiplier
  1810  001010  C002  F009         	movff	?___lwdiv+1,___wmul@multiplier+1
  1811  001014  0E00               	movlw	0
  1812  001016  6E0B               	movwf	(___wmul@multiplicand+1)^0,c
  1813  001018  0EC8               	movlw	200
  1814  00101A  6E0A               	movwf	___wmul@multiplicand^0,c
  1815  00101C  EC8B  F013         	call	___wmul	;wreg free
  1816  001020  0E0A               	movlw	10
  1817  001022  2408               	addwf	?___wmul^0,w,c
  1818  001024  6E12               	movwf	compare@upper^0,c
  1819  001026  0E00               	movlw	0
  1820  001028  2009               	addwfc	(?___wmul+1)^0,w,c
  1821  00102A  6E13               	movwf	(compare@upper+1)^0,c
  1822  00102C  ECA1  F012         	call	_compare	;wreg free
  1823  001030  0900               	iorlw	0
  1824  001032  B4D8               	btfsc	status,2,c
  1825  001034  EF1E  F008         	goto	u1691
  1826  001038  EF20  F008         	goto	u1690
  1827  00103C                     u1691:
  1828  00103C  EF24  F008         	goto	l2644
  1829  001040                     u1690:
  1830  001040  0E09               	movlw	9
  1831  001042  6E25               	movwf	detect_color@color^0,c
  1832  001044  EFF6  F009         	goto	l101
  1833  001048                     l2644:
  1834  001048  0E02               	movlw	2
  1835  00104A  6E0F               	movwf	(compare@lower+1)^0,c
  1836  00104C  0EE6               	movlw	230
  1837  00104E  6E0E               	movwf	compare@lower^0,c
  1838  001050  C023  F003         	movff	detect_color@BB,___lwdiv@divisor
  1839  001054  C024  F004         	movff	detect_color@BB+1,___lwdiv@divisor+1
  1840  001058  C021  F001         	movff	detect_color@GG,___lwdiv@dividend
  1841  00105C  C022  F002         	movff	detect_color@GG+1,___lwdiv@dividend+1
  1842  001060  EC62  F010         	call	___lwdiv	;wreg free
  1843  001064  C001  F008         	movff	?___lwdiv,___wmul@multiplier
  1844  001068  C002  F009         	movff	?___lwdiv+1,___wmul@multiplier+1
  1845  00106C  0E00               	movlw	0
  1846  00106E  6E0B               	movwf	(___wmul@multiplicand+1)^0,c
  1847  001070  0EC8               	movlw	200
  1848  001072  6E0A               	movwf	___wmul@multiplicand^0,c
  1849  001074  EC8B  F013         	call	___wmul	;wreg free
  1850  001078  C008  F010         	movff	?___wmul,compare@value2compare
  1851  00107C  C009  F011         	movff	?___wmul+1,compare@value2compare+1
  1852  001080  0E03               	movlw	3
  1853  001082  6E13               	movwf	(compare@upper+1)^0,c
  1854  001084  0E30               	movlw	48
  1855  001086  6E12               	movwf	compare@upper^0,c
  1856  001088  ECA1  F012         	call	_compare	;wreg free
  1857  00108C  0900               	iorlw	0
  1858  00108E  B4D8               	btfsc	status,2,c
  1859  001090  EF4C  F008         	goto	u1701
  1860  001094  EF4E  F008         	goto	u1700
  1861  001098                     u1701:
  1862  001098  EF52  F008         	goto	l2648
  1863  00109C                     u1700:
  1864  00109C  0E02               	movlw	2
  1865  00109E  6E25               	movwf	detect_color@color^0,c
  1866  0010A0  EFF6  F009         	goto	l101
  1867  0010A4                     l2648:
  1868  0010A4  0E00               	movlw	0
  1869  0010A6  6E0F               	movwf	(compare@lower+1)^0,c
  1870  0010A8  0E00               	movlw	0
  1871  0010AA  6E0E               	movwf	compare@lower^0,c
  1872  0010AC  C023  F003         	movff	detect_color@BB,___lwdiv@divisor
  1873  0010B0  C024  F004         	movff	detect_color@BB+1,___lwdiv@divisor+1
  1874  0010B4  C021  F001         	movff	detect_color@GG,___lwdiv@dividend
  1875  0010B8  C022  F002         	movff	detect_color@GG+1,___lwdiv@dividend+1
  1876  0010BC  EC62  F010         	call	___lwdiv	;wreg free
  1877  0010C0  C001  F008         	movff	?___lwdiv,___wmul@multiplier
  1878  0010C4  C002  F009         	movff	?___lwdiv+1,___wmul@multiplier+1
  1879  0010C8  0E00               	movlw	0
  1880  0010CA  6E0B               	movwf	(___wmul@multiplicand+1)^0,c
  1881  0010CC  0EC8               	movlw	200
  1882  0010CE  6E0A               	movwf	___wmul@multiplicand^0,c
  1883  0010D0  EC8B  F013         	call	___wmul	;wreg free
  1884  0010D4  C008  F010         	movff	?___wmul,compare@value2compare
  1885  0010D8  C009  F011         	movff	?___wmul+1,compare@value2compare+1
  1886  0010DC  0E02               	movlw	2
  1887  0010DE  6E13               	movwf	(compare@upper+1)^0,c
  1888  0010E0  0EE6               	movlw	230
  1889  0010E2  6E12               	movwf	compare@upper^0,c
  1890  0010E4  ECA1  F012         	call	_compare	;wreg free
  1891  0010E8  0900               	iorlw	0
  1892  0010EA  B4D8               	btfsc	status,2,c
  1893  0010EC  EF7A  F008         	goto	u1711
  1894  0010F0  EF7C  F008         	goto	u1710
  1895  0010F4                     u1711:
  1896  0010F4  EF80  F008         	goto	l2652
  1897  0010F8                     u1710:
  1898  0010F8  0E03               	movlw	3
  1899  0010FA  6E25               	movwf	detect_color@color^0,c
  1900  0010FC  EFF6  F009         	goto	l101
  1901  001100                     l2652:
  1902  001100  0E00               	movlw	0
  1903  001102  6E25               	movwf	detect_color@color^0,c
  1904  001104  EFF6  F009         	goto	l101
  1905  001108                     l2654:
  1906                           
  1907                           ;color.c: 191:         if (compare(0, RG, 50)){
  1908  001108  0E00               	movlw	0
  1909  00110A  6E0F               	movwf	(compare@lower+1)^0,c
  1910  00110C  0E00               	movlw	0
  1911  00110E  6E0E               	movwf	compare@lower^0,c
  1912  001110  C01F  F010         	movff	detect_color@RG,compare@value2compare
  1913  001114  C020  F011         	movff	detect_color@RG+1,compare@value2compare+1
  1914  001118  0E00               	movlw	0
  1915  00111A  6E13               	movwf	(compare@upper+1)^0,c
  1916  00111C  0E32               	movlw	50
  1917  00111E  6E12               	movwf	compare@upper^0,c
  1918  001120  ECA1  F012         	call	_compare	;wreg free
  1919  001124  0900               	iorlw	0
  1920  001126  B4D8               	btfsc	status,2,c
  1921  001128  EF98  F008         	goto	u1721
  1922  00112C  EF9A  F008         	goto	u1720
  1923  001130                     u1721:
  1924  001130  EF0C  F009         	goto	l2666
  1925  001134                     u1720:
  1926  001134                     
  1927                           ;color.c: 192:             if (compare(0, RR/BG*100, 1597)) {color = 6;}
  1928  001134  0E00               	movlw	0
  1929  001136  6E0F               	movwf	(compare@lower+1)^0,c
  1930  001138  0E00               	movlw	0
  1931  00113A  6E0E               	movwf	compare@lower^0,c
  1932  00113C  C028  F003         	movff	detect_color@BG,___lwdiv@divisor
  1933  001140  C029  F004         	movff	detect_color@BG+1,___lwdiv@divisor+1
  1934  001144  C02A  F001         	movff	detect_color@RR,___lwdiv@dividend
  1935  001148  C02B  F002         	movff	detect_color@RR+1,___lwdiv@dividend+1
  1936  00114C  EC62  F010         	call	___lwdiv	;wreg free
  1937  001150  C001  F008         	movff	?___lwdiv,___wmul@multiplier
  1938  001154  C002  F009         	movff	?___lwdiv+1,___wmul@multiplier+1
  1939  001158  0E00               	movlw	0
  1940  00115A  6E0B               	movwf	(___wmul@multiplicand+1)^0,c
  1941  00115C  0E64               	movlw	100
  1942  00115E  6E0A               	movwf	___wmul@multiplicand^0,c
  1943  001160  EC8B  F013         	call	___wmul	;wreg free
  1944  001164  C008  F010         	movff	?___wmul,compare@value2compare
  1945  001168  C009  F011         	movff	?___wmul+1,compare@value2compare+1
  1946  00116C  0E06               	movlw	6
  1947  00116E  6E13               	movwf	(compare@upper+1)^0,c
  1948  001170  0E3D               	movlw	61
  1949  001172  6E12               	movwf	compare@upper^0,c
  1950  001174  ECA1  F012         	call	_compare	;wreg free
  1951  001178  0900               	iorlw	0
  1952  00117A  B4D8               	btfsc	status,2,c
  1953  00117C  EFC2  F008         	goto	u1731
  1954  001180  EFC4  F008         	goto	u1730
  1955  001184                     u1731:
  1956  001184  EFC8  F008         	goto	l2660
  1957  001188                     u1730:
  1958  001188  0E06               	movlw	6
  1959  00118A  6E25               	movwf	detect_color@color^0,c
  1960  00118C  EFF6  F009         	goto	l101
  1961  001190                     l2660:
  1962  001190  0E06               	movlw	6
  1963  001192  6E0F               	movwf	(compare@lower+1)^0,c
  1964  001194  0E3D               	movlw	61
  1965  001196  6E0E               	movwf	compare@lower^0,c
  1966  001198  C028  F003         	movff	detect_color@BG,___lwdiv@divisor
  1967  00119C  C029  F004         	movff	detect_color@BG+1,___lwdiv@divisor+1
  1968  0011A0  C02A  F001         	movff	detect_color@RR,___lwdiv@dividend
  1969  0011A4  C02B  F002         	movff	detect_color@RR+1,___lwdiv@dividend+1
  1970  0011A8  EC62  F010         	call	___lwdiv	;wreg free
  1971  0011AC  C001  F008         	movff	?___lwdiv,___wmul@multiplier
  1972  0011B0  C002  F009         	movff	?___lwdiv+1,___wmul@multiplier+1
  1973  0011B4  0E00               	movlw	0
  1974  0011B6  6E0B               	movwf	(___wmul@multiplicand+1)^0,c
  1975  0011B8  0E64               	movlw	100
  1976  0011BA  6E0A               	movwf	___wmul@multiplicand^0,c
  1977  0011BC  EC8B  F013         	call	___wmul	;wreg free
  1978  0011C0  C008  F010         	movff	?___wmul,compare@value2compare
  1979  0011C4  C009  F011         	movff	?___wmul+1,compare@value2compare+1
  1980  0011C8  C028  F003         	movff	detect_color@BG,___lwdiv@divisor
  1981  0011CC  C029  F004         	movff	detect_color@BG+1,___lwdiv@divisor+1
  1982  0011D0  C02A  F001         	movff	detect_color@RR,___lwdiv@dividend
  1983  0011D4  C02B  F002         	movff	detect_color@RR+1,___lwdiv@dividend+1
  1984  0011D8  EC62  F010         	call	___lwdiv	;wreg free
  1985  0011DC  C001  F008         	movff	?___lwdiv,___wmul@multiplier
  1986  0011E0  C002  F009         	movff	?___lwdiv+1,___wmul@multiplier+1
  1987  0011E4  0E00               	movlw	0
  1988  0011E6  6E0B               	movwf	(___wmul@multiplicand+1)^0,c
  1989  0011E8  0E64               	movlw	100
  1990  0011EA  6E0A               	movwf	___wmul@multiplicand^0,c
  1991  0011EC  EC8B  F013         	call	___wmul	;wreg free
  1992  0011F0  0E0A               	movlw	10
  1993  0011F2  2408               	addwf	?___wmul^0,w,c
  1994  0011F4  6E12               	movwf	compare@upper^0,c
  1995  0011F6  0E00               	movlw	0
  1996  0011F8  2009               	addwfc	(?___wmul+1)^0,w,c
  1997  0011FA  6E13               	movwf	(compare@upper+1)^0,c
  1998  0011FC  ECA1  F012         	call	_compare	;wreg free
  1999  001200  0900               	iorlw	0
  2000  001202  B4D8               	btfsc	status,2,c
  2001  001204  EF06  F009         	goto	u1741
  2002  001208  EF08  F009         	goto	u1740
  2003  00120C                     u1741:
  2004  00120C  EF80  F008         	goto	l2652
  2005  001210                     u1740:
  2006  001210  0E01               	movlw	1
  2007  001212  6E25               	movwf	detect_color@color^0,c
  2008  001214  EFF6  F009         	goto	l101
  2009  001218                     l2666:
  2010  001218  0E00               	movlw	0
  2011  00121A  6E0F               	movwf	(compare@lower+1)^0,c
  2012  00121C  0E41               	movlw	65
  2013  00121E  6E0E               	movwf	compare@lower^0,c
  2014  001220  C01F  F010         	movff	detect_color@RG,compare@value2compare
  2015  001224  C020  F011         	movff	detect_color@RG+1,compare@value2compare+1
  2016  001228  0E0A               	movlw	10
  2017  00122A  241F               	addwf	detect_color@RG^0,w,c
  2018  00122C  6E12               	movwf	compare@upper^0,c
  2019  00122E  0E00               	movlw	0
  2020  001230  2020               	addwfc	(detect_color@RG+1)^0,w,c
  2021  001232  6E13               	movwf	(compare@upper+1)^0,c
  2022  001234  ECA1  F012         	call	_compare	;wreg free
  2023  001238  0900               	iorlw	0
  2024  00123A  B4D8               	btfsc	status,2,c
  2025  00123C  EF22  F009         	goto	u1751
  2026  001240  EF24  F009         	goto	u1750
  2027  001244                     u1751:
  2028  001244  EF28  F009         	goto	l2670
  2029  001248                     u1750:
  2030  001248  0E08               	movlw	8
  2031  00124A  6E25               	movwf	detect_color@color^0,c
  2032  00124C  EFF6  F009         	goto	l101
  2033  001250                     l2670:
  2034  001250  0E00               	movlw	0
  2035  001252  6E0F               	movwf	(compare@lower+1)^0,c
  2036  001254  0E32               	movlw	50
  2037  001256  6E0E               	movwf	compare@lower^0,c
  2038  001258  C01F  F010         	movff	detect_color@RG,compare@value2compare
  2039  00125C  C020  F011         	movff	detect_color@RG+1,compare@value2compare+1
  2040  001260  0E00               	movlw	0
  2041  001262  6E13               	movwf	(compare@upper+1)^0,c
  2042  001264  0E41               	movlw	65
  2043  001266  6E12               	movwf	compare@upper^0,c
  2044  001268  ECA1  F012         	call	_compare	;wreg free
  2045  00126C  0900               	iorlw	0
  2046  00126E  B4D8               	btfsc	status,2,c
  2047  001270  EF3C  F009         	goto	u1761
  2048  001274  EF3E  F009         	goto	u1760
  2049  001278                     u1761:
  2050  001278  EF80  F008         	goto	l2652
  2051  00127C                     u1760:
  2052  00127C                     
  2053                           ;color.c: 198:             if (compare(80, BR, BR + 10)){color = 5;}
  2054  00127C  0E00               	movlw	0
  2055  00127E  6E0F               	movwf	(compare@lower+1)^0,c
  2056  001280  0E50               	movlw	80
  2057  001282  6E0E               	movwf	compare@lower^0,c
  2058  001284  C026  F010         	movff	detect_color@BR,compare@value2compare
  2059  001288  C027  F011         	movff	detect_color@BR+1,compare@value2compare+1
  2060  00128C  0E0A               	movlw	10
  2061  00128E  2426               	addwf	detect_color@BR^0,w,c
  2062  001290  6E12               	movwf	compare@upper^0,c
  2063  001292  0E00               	movlw	0
  2064  001294  2027               	addwfc	(detect_color@BR+1)^0,w,c
  2065  001296  6E13               	movwf	(compare@upper+1)^0,c
  2066  001298  ECA1  F012         	call	_compare	;wreg free
  2067  00129C  0900               	iorlw	0
  2068  00129E  B4D8               	btfsc	status,2,c
  2069  0012A0  EF54  F009         	goto	u1771
  2070  0012A4  EF56  F009         	goto	u1770
  2071  0012A8                     u1771:
  2072  0012A8  EF5A  F009         	goto	l2676
  2073  0012AC                     u1770:
  2074  0012AC  0E05               	movlw	5
  2075  0012AE  6E25               	movwf	detect_color@color^0,c
  2076  0012B0  EFF6  F009         	goto	l101
  2077  0012B4                     l2676:
  2078  0012B4  0E00               	movlw	0
  2079  0012B6  6E0F               	movwf	(compare@lower+1)^0,c
  2080  0012B8  0E00               	movlw	0
  2081  0012BA  6E0E               	movwf	compare@lower^0,c
  2082  0012BC  C026  F010         	movff	detect_color@BR,compare@value2compare
  2083  0012C0  C027  F011         	movff	detect_color@BR+1,compare@value2compare+1
  2084  0012C4  0E00               	movlw	0
  2085  0012C6  6E13               	movwf	(compare@upper+1)^0,c
  2086  0012C8  0E50               	movlw	80
  2087  0012CA  6E12               	movwf	compare@upper^0,c
  2088  0012CC  ECA1  F012         	call	_compare	;wreg free
  2089  0012D0  0900               	iorlw	0
  2090  0012D2  B4D8               	btfsc	status,2,c
  2091  0012D4  EF6E  F009         	goto	u1781
  2092  0012D8  EF70  F009         	goto	u1780
  2093  0012DC                     u1781:
  2094  0012DC  EF9E  F009         	goto	l2682
  2095  0012E0                     u1780:
  2096  0012E0  0E00               	movlw	0
  2097  0012E2  6E0F               	movwf	(compare@lower+1)^0,c
  2098  0012E4  0E00               	movlw	0
  2099  0012E6  6E0E               	movwf	compare@lower^0,c
  2100  0012E8  C028  F003         	movff	detect_color@BG,___lwdiv@divisor
  2101  0012EC  C029  F004         	movff	detect_color@BG+1,___lwdiv@divisor+1
  2102  0012F0  C02A  F001         	movff	detect_color@RR,___lwdiv@dividend
  2103  0012F4  C02B  F002         	movff	detect_color@RR+1,___lwdiv@dividend+1
  2104  0012F8  EC62  F010         	call	___lwdiv	;wreg free
  2105  0012FC  C001  F008         	movff	?___lwdiv,___wmul@multiplier
  2106  001300  C002  F009         	movff	?___lwdiv+1,___wmul@multiplier+1
  2107  001304  0E00               	movlw	0
  2108  001306  6E0B               	movwf	(___wmul@multiplicand+1)^0,c
  2109  001308  0E64               	movlw	100
  2110  00130A  6E0A               	movwf	___wmul@multiplicand^0,c
  2111  00130C  EC8B  F013         	call	___wmul	;wreg free
  2112  001310  C008  F010         	movff	?___wmul,compare@value2compare
  2113  001314  C009  F011         	movff	?___wmul+1,compare@value2compare+1
  2114  001318  0E04               	movlw	4
  2115  00131A  6E13               	movwf	(compare@upper+1)^0,c
  2116  00131C  0E33               	movlw	51
  2117  00131E  6E12               	movwf	compare@upper^0,c
  2118  001320  ECA1  F012         	call	_compare	;wreg free
  2119  001324  0900               	iorlw	0
  2120  001326  B4D8               	btfsc	status,2,c
  2121  001328  EF98  F009         	goto	u1791
  2122  00132C  EF9A  F009         	goto	u1790
  2123  001330                     u1791:
  2124  001330  EF9E  F009         	goto	l2682
  2125  001334                     u1790:
  2126  001334  0E07               	movlw	7
  2127  001336  6E25               	movwf	detect_color@color^0,c
  2128  001338  EFF6  F009         	goto	l101
  2129  00133C                     l2682:
  2130  00133C  0E00               	movlw	0
  2131  00133E  6E0F               	movwf	(compare@lower+1)^0,c
  2132  001340  0E00               	movlw	0
  2133  001342  6E0E               	movwf	compare@lower^0,c
  2134  001344  C026  F010         	movff	detect_color@BR,compare@value2compare
  2135  001348  C027  F011         	movff	detect_color@BR+1,compare@value2compare+1
  2136  00134C  0E00               	movlw	0
  2137  00134E  6E13               	movwf	(compare@upper+1)^0,c
  2138  001350  0E50               	movlw	80
  2139  001352  6E12               	movwf	compare@upper^0,c
  2140  001354  ECA1  F012         	call	_compare	;wreg free
  2141  001358  0900               	iorlw	0
  2142  00135A  B4D8               	btfsc	status,2,c
  2143  00135C  EFB2  F009         	goto	u1801
  2144  001360  EFB4  F009         	goto	u1800
  2145  001364                     u1801:
  2146  001364  EF80  F008         	goto	l2652
  2147  001368                     u1800:
  2148  001368  0E04               	movlw	4
  2149  00136A  6E0F               	movwf	(compare@lower+1)^0,c
  2150  00136C  0E33               	movlw	51
  2151  00136E  6E0E               	movwf	compare@lower^0,c
  2152  001370  C028  F003         	movff	detect_color@BG,___lwdiv@divisor
  2153  001374  C029  F004         	movff	detect_color@BG+1,___lwdiv@divisor+1
  2154  001378  C02A  F001         	movff	detect_color@RR,___lwdiv@dividend
  2155  00137C  C02B  F002         	movff	detect_color@RR+1,___lwdiv@dividend+1
  2156  001380  EC62  F010         	call	___lwdiv	;wreg free
  2157  001384  C001  F008         	movff	?___lwdiv,___wmul@multiplier
  2158  001388  C002  F009         	movff	?___lwdiv+1,___wmul@multiplier+1
  2159  00138C  0E00               	movlw	0
  2160  00138E  6E0B               	movwf	(___wmul@multiplicand+1)^0,c
  2161  001390  0E64               	movlw	100
  2162  001392  6E0A               	movwf	___wmul@multiplicand^0,c
  2163  001394  EC8B  F013         	call	___wmul	;wreg free
  2164  001398  C008  F010         	movff	?___wmul,compare@value2compare
  2165  00139C  C009  F011         	movff	?___wmul+1,compare@value2compare+1
  2166  0013A0  C026  F003         	movff	detect_color@BR,___lwdiv@divisor
  2167  0013A4  C027  F004         	movff	detect_color@BR+1,___lwdiv@divisor+1
  2168  0013A8  C02A  F001         	movff	detect_color@RR,___lwdiv@dividend
  2169  0013AC  C02B  F002         	movff	detect_color@RR+1,___lwdiv@dividend+1
  2170  0013B0  EC62  F010         	call	___lwdiv	;wreg free
  2171  0013B4  C001  F008         	movff	?___lwdiv,___wmul@multiplier
  2172  0013B8  C002  F009         	movff	?___lwdiv+1,___wmul@multiplier+1
  2173  0013BC  0E00               	movlw	0
  2174  0013BE  6E0B               	movwf	(___wmul@multiplicand+1)^0,c
  2175  0013C0  0E64               	movlw	100
  2176  0013C2  6E0A               	movwf	___wmul@multiplicand^0,c
  2177  0013C4  EC8B  F013         	call	___wmul	;wreg free
  2178  0013C8  0E0A               	movlw	10
  2179  0013CA  2408               	addwf	?___wmul^0,w,c
  2180  0013CC  6E12               	movwf	compare@upper^0,c
  2181  0013CE  0E00               	movlw	0
  2182  0013D0  2009               	addwfc	(?___wmul+1)^0,w,c
  2183  0013D2  6E13               	movwf	(compare@upper+1)^0,c
  2184  0013D4  ECA1  F012         	call	_compare	;wreg free
  2185  0013D8  0900               	iorlw	0
  2186  0013DA  B4D8               	btfsc	status,2,c
  2187  0013DC  EFF2  F009         	goto	u1811
  2188  0013E0  EFF4  F009         	goto	u1810
  2189  0013E4                     u1811:
  2190  0013E4  EF80  F008         	goto	l2652
  2191  0013E8                     u1810:
  2192  0013E8  0E04               	movlw	4
  2193  0013EA  6E25               	movwf	detect_color@color^0,c
  2194  0013EC                     l101:
  2195                           
  2196                           ;color.c: 205:     return color;
  2197  0013EC  5025               	movf	detect_color@color^0,w,c
  2198  0013EE  0012               	return		;funcret
  2199  0013F0                     __end_of_detect_color:
  2200                           	callstack 0
  2201                           
  2202 ;; *************** function _compare *****************
  2203 ;; Defined at:
  2204 ;;		line 208 in file "color.c"
  2205 ;; Parameters:    Size  Location     Type
  2206 ;;  lower           2   13[COMRAM] unsigned int 
  2207 ;;  value2compar    2   15[COMRAM] unsigned int 
  2208 ;;  upper           2   17[COMRAM] unsigned int 
  2209 ;; Auto vars:     Size  Location     Type
  2210 ;;  result          1   19[COMRAM] unsigned char 
  2211 ;; Return value:  Size  Location     Type
  2212 ;;                  1    wreg      unsigned char 
  2213 ;; Registers used:
  2214 ;;		wreg, status,2, status,0
  2215 ;; Tracked objects:
  2216 ;;		On entry : 0/0
  2217 ;;		On exit  : 0/0
  2218 ;;		Unchanged: 0/0
  2219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2220 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2221 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2222 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2223 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2224 ;;Total ram usage:        7 bytes
  2225 ;; Hardware stack levels used: 1
  2226 ;; This function calls:
  2227 ;;		Nothing
  2228 ;; This function is called by:
  2229 ;;		_detect_color
  2230 ;; This function uses a non-reentrant model
  2231 ;;
  2232                           
  2233                           	psect	text5
  2234  002542                     __ptext5:
  2235                           	callstack 0
  2236  002542                     _compare:
  2237                           	callstack 29
  2238  002542                     
  2239                           ;color.c: 208: unsigned char compare(unsigned int lower, unsigned int value2compare, uns
      +                          igned int upper);color.c: 209: {;color.c: 210:     unsigned char result = 0;
  2240  002542  0E00               	movlw	0
  2241  002544  6E14               	movwf	compare@result^0,c
  2242  002546                     
  2243                           ;color.c: 211:     if (lower < value2compare && value2compare <= upper){result = 1;}
  2244  002546  5010               	movf	compare@value2compare^0,w,c
  2245  002548  5C0E               	subwf	compare@lower^0,w,c
  2246  00254A  5011               	movf	(compare@value2compare+1)^0,w,c
  2247  00254C  580F               	subwfb	(compare@lower+1)^0,w,c
  2248  00254E  B0D8               	btfsc	status,0,c
  2249  002550  EFAC  F012         	goto	u1531
  2250  002554  EFAE  F012         	goto	u1530
  2251  002558                     u1531:
  2252  002558  EFBB  F012         	goto	l121
  2253  00255C                     u1530:
  2254  00255C  5010               	movf	compare@value2compare^0,w,c
  2255  00255E  5C12               	subwf	compare@upper^0,w,c
  2256  002560  5011               	movf	(compare@value2compare+1)^0,w,c
  2257  002562  5813               	subwfb	(compare@upper+1)^0,w,c
  2258  002564  A0D8               	btfss	status,0,c
  2259  002566  EFB7  F012         	goto	u1541
  2260  00256A  EFB9  F012         	goto	u1540
  2261  00256E                     u1541:
  2262  00256E  EFBB  F012         	goto	l121
  2263  002572                     u1540:
  2264  002572  0E01               	movlw	1
  2265  002574  6E14               	movwf	compare@result^0,c
  2266  002576                     l121:
  2267                           
  2268                           ;color.c: 212:     return result;
  2269  002576  5014               	movf	compare@result^0,w,c
  2270  002578  0012               	return		;funcret
  2271  00257A                     __end_of_compare:
  2272                           	callstack 0
  2273                           
  2274 ;; *************** function ___wmul *****************
  2275 ;; Defined at:
  2276 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\Umul16.c"
  2277 ;; Parameters:    Size  Location     Type
  2278 ;;  multiplier      2    7[COMRAM] unsigned int 
  2279 ;;  multiplicand    2    9[COMRAM] unsigned int 
  2280 ;; Auto vars:     Size  Location     Type
  2281 ;;  product         2   11[COMRAM] unsigned int 
  2282 ;; Return value:  Size  Location     Type
  2283 ;;                  2    7[COMRAM] unsigned int 
  2284 ;; Registers used:
  2285 ;;		wreg, status,2, status,0, prodl, prodh
  2286 ;; Tracked objects:
  2287 ;;		On entry : 0/0
  2288 ;;		On exit  : 0/0
  2289 ;;		Unchanged: 0/0
  2290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2291 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2292 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2293 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2294 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2295 ;;Total ram usage:        6 bytes
  2296 ;; Hardware stack levels used: 1
  2297 ;; This function calls:
  2298 ;;		Nothing
  2299 ;; This function is called by:
  2300 ;;		_detect_color
  2301 ;;		_setMotorPWM
  2302 ;; This function uses a non-reentrant model
  2303 ;;
  2304                           
  2305                           	psect	text6
  2306  002716                     __ptext6:
  2307                           	callstack 0
  2308  002716                     ___wmul:
  2309                           	callstack 29
  2310  002716  5008               	movf	___wmul@multiplier^0,w,c
  2311  002718  020A               	mulwf	___wmul@multiplicand^0,c
  2312  00271A  CFF3 F00C          	movff	prodl,___wmul@product
  2313  00271E  CFF4 F00D          	movff	prodh,___wmul@product+1
  2314  002722  5008               	movf	___wmul@multiplier^0,w,c
  2315  002724  020B               	mulwf	(___wmul@multiplicand+1)^0,c
  2316  002726  50F3               	movf	243,w,c
  2317  002728  260D               	addwf	(___wmul@product+1)^0,f,c
  2318  00272A  5009               	movf	(___wmul@multiplier+1)^0,w,c
  2319  00272C  020A               	mulwf	___wmul@multiplicand^0,c
  2320  00272E  50F3               	movf	243,w,c
  2321  002730  260D               	addwf	(___wmul@product+1)^0,f,c
  2322  002732  C00C  F008         	movff	___wmul@product,?___wmul
  2323  002736  C00D  F009         	movff	___wmul@product+1,?___wmul+1
  2324  00273A  0012               	return		;funcret
  2325  00273C                     __end_of___wmul:
  2326                           	callstack 0
  2327                           
  2328 ;; *************** function ___lwdiv *****************
  2329 ;; Defined at:
  2330 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\lwdiv.c"
  2331 ;; Parameters:    Size  Location     Type
  2332 ;;  dividend        2    0[COMRAM] unsigned int 
  2333 ;;  divisor         2    2[COMRAM] unsigned int 
  2334 ;; Auto vars:     Size  Location     Type
  2335 ;;  quotient        2    4[COMRAM] unsigned int 
  2336 ;;  counter         1    6[COMRAM] unsigned char 
  2337 ;; Return value:  Size  Location     Type
  2338 ;;                  2    0[COMRAM] unsigned int 
  2339 ;; Registers used:
  2340 ;;		wreg, status,2, status,0
  2341 ;; Tracked objects:
  2342 ;;		On entry : 0/0
  2343 ;;		On exit  : 0/0
  2344 ;;		Unchanged: 0/0
  2345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2346 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2347 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2348 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2349 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2350 ;;Total ram usage:        7 bytes
  2351 ;; Hardware stack levels used: 1
  2352 ;; This function calls:
  2353 ;;		Nothing
  2354 ;; This function is called by:
  2355 ;;		_detect_color
  2356 ;; This function uses a non-reentrant model
  2357 ;;
  2358                           
  2359                           	psect	text7
  2360  0020C4                     __ptext7:
  2361                           	callstack 0
  2362  0020C4                     ___lwdiv:
  2363                           	callstack 29
  2364  0020C4  0E00               	movlw	0
  2365  0020C6  6E06               	movwf	(___lwdiv@quotient+1)^0,c
  2366  0020C8  0E00               	movlw	0
  2367  0020CA  6E05               	movwf	___lwdiv@quotient^0,c
  2368  0020CC  5003               	movf	___lwdiv@divisor^0,w,c
  2369  0020CE  1004               	iorwf	(___lwdiv@divisor+1)^0,w,c
  2370  0020D0  B4D8               	btfsc	status,2,c
  2371  0020D2  EF6D  F010         	goto	u1551
  2372  0020D6  EF6F  F010         	goto	u1550
  2373  0020DA                     u1551:
  2374  0020DA  EF97  F010         	goto	l971
  2375  0020DE                     u1550:
  2376  0020DE  0E01               	movlw	1
  2377  0020E0  6E07               	movwf	___lwdiv@counter^0,c
  2378  0020E2  EF77  F010         	goto	l2522
  2379  0020E6                     l2520:
  2380  0020E6  90D8               	bcf	status,0,c
  2381  0020E8  3603               	rlcf	___lwdiv@divisor^0,f,c
  2382  0020EA  3604               	rlcf	(___lwdiv@divisor+1)^0,f,c
  2383  0020EC  2A07               	incf	___lwdiv@counter^0,f,c
  2384  0020EE                     l2522:
  2385  0020EE  AE04               	btfss	(___lwdiv@divisor+1)^0,7,c
  2386  0020F0  EF7C  F010         	goto	u1561
  2387  0020F4  EF7E  F010         	goto	u1560
  2388  0020F8                     u1561:
  2389  0020F8  EF73  F010         	goto	l2520
  2390  0020FC                     u1560:
  2391  0020FC                     l2524:
  2392  0020FC  90D8               	bcf	status,0,c
  2393  0020FE  3605               	rlcf	___lwdiv@quotient^0,f,c
  2394  002100  3606               	rlcf	(___lwdiv@quotient+1)^0,f,c
  2395  002102  5003               	movf	___lwdiv@divisor^0,w,c
  2396  002104  5C01               	subwf	___lwdiv@dividend^0,w,c
  2397  002106  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  2398  002108  5802               	subwfb	(___lwdiv@dividend+1)^0,w,c
  2399  00210A  A0D8               	btfss	status,0,c
  2400  00210C  EF8A  F010         	goto	u1571
  2401  002110  EF8C  F010         	goto	u1570
  2402  002114                     u1571:
  2403  002114  EF91  F010         	goto	l2532
  2404  002118                     u1570:
  2405  002118  5003               	movf	___lwdiv@divisor^0,w,c
  2406  00211A  5E01               	subwf	___lwdiv@dividend^0,f,c
  2407  00211C  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  2408  00211E  5A02               	subwfb	(___lwdiv@dividend+1)^0,f,c
  2409  002120  8005               	bsf	___lwdiv@quotient^0,0,c
  2410  002122                     l2532:
  2411  002122  90D8               	bcf	status,0,c
  2412  002124  3204               	rrcf	(___lwdiv@divisor+1)^0,f,c
  2413  002126  3203               	rrcf	___lwdiv@divisor^0,f,c
  2414  002128  2E07               	decfsz	___lwdiv@counter^0,f,c
  2415  00212A  EF7E  F010         	goto	l2524
  2416  00212E                     l971:
  2417  00212E  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
  2418  002132  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
  2419  002136  0012               	return		;funcret
  2420  002138                     __end_of___lwdiv:
  2421                           	callstack 0
  2422                           
  2423 ;; *************** function _LED_R *****************
  2424 ;; Defined at:
  2425 ;;		line 97 in file "color.c"
  2426 ;; Parameters:    Size  Location     Type
  2427 ;;  m               2   13[COMRAM] PTR struct color_rgb
  2428 ;;		 -> main@rgb(8), 
  2429 ;; Auto vars:     Size  Location     Type
  2430 ;;		None
  2431 ;; Return value:  Size  Location     Type
  2432 ;;                  1    wreg      void 
  2433 ;; Registers used:
  2434 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2435 ;; Tracked objects:
  2436 ;;		On entry : 0/0
  2437 ;;		On exit  : 0/0
  2438 ;;		Unchanged: 0/0
  2439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2440 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2441 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2442 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2443 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2444 ;;Total ram usage:        4 bytes
  2445 ;; Hardware stack levels used: 1
  2446 ;; Hardware stack levels required when called: 4
  2447 ;; This function calls:
  2448 ;;		_read_color
  2449 ;; This function is called by:
  2450 ;;		_detect_color
  2451 ;;		_main
  2452 ;; This function uses a non-reentrant model
  2453 ;;
  2454                           
  2455                           	psect	text8
  2456  002614                     __ptext8:
  2457                           	callstack 0
  2458  002614                     _LED_R:
  2459                           	callstack 25
  2460  002614                     
  2461                           ;color.c: 97: void LED_R(struct color_rgb *m);color.c: 98: {;color.c: 99:     LATGbits.L
      +                          ATG1 = 1;
  2462  002614  827F               	bsf	127,1,c	;volatile
  2463                           
  2464                           ;color.c: 100:     LATFbits.LATF7 = 0;
  2465  002616  9E7E               	bcf	126,7,c	;volatile
  2466                           
  2467                           ;color.c: 101:     LATAbits.LATA4 = 0;
  2468  002618  9879               	bcf	121,4,c	;volatile
  2469  00261A                     
  2470                           ;color.c: 102:     _delay((unsigned long)((200)*(64000000/4000.0)));
  2471  00261A  0E11               	movlw	17
  2472  00261C  6E11               	movwf	(??_LED_R+1)^0,c
  2473  00261E  0E3C               	movlw	60
  2474  002620  6E10               	movwf	??_LED_R^0,c
  2475  002622  0ECB               	movlw	203
  2476  002624                     u2087:
  2477  002624  2EE8               	decfsz	wreg,f,c
  2478  002626  D7FE               	bra	u2087
  2479  002628  2E10               	decfsz	??_LED_R^0,f,c
  2480  00262A  D7FC               	bra	u2087
  2481  00262C  2E11               	decfsz	(??_LED_R+1)^0,f,c
  2482  00262E  D7FA               	bra	u2087
  2483  002630  F000               	nop	
  2484  002632                     
  2485                           ;color.c: 103:     read_color(m);
  2486  002632  C00E  F00C         	movff	LED_R@m,read_color@m
  2487  002636  C00F  F00D         	movff	LED_R@m+1,read_color@m+1
  2488  00263A  EC05  F011         	call	_read_color	;wreg free
  2489  00263E  0012               	return		;funcret
  2490  002640                     __end_of_LED_R:
  2491                           	callstack 0
  2492                           
  2493 ;; *************** function _LED_G *****************
  2494 ;; Defined at:
  2495 ;;		line 124 in file "color.c"
  2496 ;; Parameters:    Size  Location     Type
  2497 ;;  m               2   13[COMRAM] PTR struct color_rgb
  2498 ;;		 -> main@rgb(8), 
  2499 ;; Auto vars:     Size  Location     Type
  2500 ;;		None
  2501 ;; Return value:  Size  Location     Type
  2502 ;;                  1    wreg      void 
  2503 ;; Registers used:
  2504 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2505 ;; Tracked objects:
  2506 ;;		On entry : 0/0
  2507 ;;		On exit  : 0/0
  2508 ;;		Unchanged: 0/0
  2509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2510 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2511 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2512 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2513 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2514 ;;Total ram usage:        4 bytes
  2515 ;; Hardware stack levels used: 1
  2516 ;; Hardware stack levels required when called: 4
  2517 ;; This function calls:
  2518 ;;		_read_color
  2519 ;; This function is called by:
  2520 ;;		_detect_color
  2521 ;;		_main
  2522 ;; This function uses a non-reentrant model
  2523 ;;
  2524                           
  2525                           	psect	text9
  2526  002640                     __ptext9:
  2527                           	callstack 0
  2528  002640                     _LED_G:
  2529                           	callstack 25
  2530  002640                     
  2531                           ;color.c: 124: void LED_G(struct color_rgb *m);color.c: 125: {;color.c: 126:     LATGbit
      +                          s.LATG1 = 0;
  2532  002640  927F               	bcf	127,1,c	;volatile
  2533                           
  2534                           ;color.c: 127:     LATFbits.LATF7 = 0;
  2535  002642  9E7E               	bcf	126,7,c	;volatile
  2536                           
  2537                           ;color.c: 128:     LATAbits.LATA4 = 1;
  2538  002644  8879               	bsf	121,4,c	;volatile
  2539  002646                     
  2540                           ;color.c: 129:     _delay((unsigned long)((200)*(64000000/4000.0)));
  2541  002646  0E11               	movlw	17
  2542  002648  6E11               	movwf	(??_LED_G+1)^0,c
  2543  00264A  0E3C               	movlw	60
  2544  00264C  6E10               	movwf	??_LED_G^0,c
  2545  00264E  0ECB               	movlw	203
  2546  002650                     u2097:
  2547  002650  2EE8               	decfsz	wreg,f,c
  2548  002652  D7FE               	bra	u2097
  2549  002654  2E10               	decfsz	??_LED_G^0,f,c
  2550  002656  D7FC               	bra	u2097
  2551  002658  2E11               	decfsz	(??_LED_G+1)^0,f,c
  2552  00265A  D7FA               	bra	u2097
  2553  00265C  F000               	nop	
  2554  00265E                     
  2555                           ;color.c: 130:     read_color(m);
  2556  00265E  C00E  F00C         	movff	LED_G@m,read_color@m
  2557  002662  C00F  F00D         	movff	LED_G@m+1,read_color@m+1
  2558  002666  EC05  F011         	call	_read_color	;wreg free
  2559  00266A  0012               	return		;funcret
  2560  00266C                     __end_of_LED_G:
  2561                           	callstack 0
  2562                           
  2563 ;; *************** function _LED_B *****************
  2564 ;; Defined at:
  2565 ;;		line 115 in file "color.c"
  2566 ;; Parameters:    Size  Location     Type
  2567 ;;  m               2   13[COMRAM] PTR struct color_rgb
  2568 ;;		 -> main@rgb(8), 
  2569 ;; Auto vars:     Size  Location     Type
  2570 ;;		None
  2571 ;; Return value:  Size  Location     Type
  2572 ;;                  1    wreg      void 
  2573 ;; Registers used:
  2574 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2575 ;; Tracked objects:
  2576 ;;		On entry : 0/0
  2577 ;;		On exit  : 0/0
  2578 ;;		Unchanged: 0/0
  2579 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2580 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2581 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2582 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2583 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2584 ;;Total ram usage:        4 bytes
  2585 ;; Hardware stack levels used: 1
  2586 ;; Hardware stack levels required when called: 4
  2587 ;; This function calls:
  2588 ;;		_read_color
  2589 ;; This function is called by:
  2590 ;;		_detect_color
  2591 ;;		_main
  2592 ;; This function uses a non-reentrant model
  2593 ;;
  2594                           
  2595                           	psect	text10
  2596  00266C                     __ptext10:
  2597                           	callstack 0
  2598  00266C                     _LED_B:
  2599                           	callstack 25
  2600  00266C                     
  2601                           ;color.c: 115: void LED_B(struct color_rgb *m);color.c: 116: {;color.c: 117:     LATGbit
      +                          s.LATG1 = 0;
  2602  00266C  927F               	bcf	127,1,c	;volatile
  2603                           
  2604                           ;color.c: 118:     LATFbits.LATF7 = 1;
  2605  00266E  8E7E               	bsf	126,7,c	;volatile
  2606                           
  2607                           ;color.c: 119:     LATAbits.LATA4 = 0;
  2608  002670  9879               	bcf	121,4,c	;volatile
  2609  002672                     
  2610                           ;color.c: 120:     _delay((unsigned long)((200)*(64000000/4000.0)));
  2611  002672  0E11               	movlw	17
  2612  002674  6E11               	movwf	(??_LED_B+1)^0,c
  2613  002676  0E3C               	movlw	60
  2614  002678  6E10               	movwf	??_LED_B^0,c
  2615  00267A  0ECB               	movlw	203
  2616  00267C                     u2107:
  2617  00267C  2EE8               	decfsz	wreg,f,c
  2618  00267E  D7FE               	bra	u2107
  2619  002680  2E10               	decfsz	??_LED_B^0,f,c
  2620  002682  D7FC               	bra	u2107
  2621  002684  2E11               	decfsz	(??_LED_B+1)^0,f,c
  2622  002686  D7FA               	bra	u2107
  2623  002688  F000               	nop	
  2624  00268A                     
  2625                           ;color.c: 121:     read_color(m);
  2626  00268A  C00E  F00C         	movff	LED_B@m,read_color@m
  2627  00268E  C00F  F00D         	movff	LED_B@m+1,read_color@m+1
  2628  002692  EC05  F011         	call	_read_color	;wreg free
  2629  002696  0012               	return		;funcret
  2630  002698                     __end_of_LED_B:
  2631                           	callstack 0
  2632                           
  2633 ;; *************** function _color_predict *****************
  2634 ;; Defined at:
  2635 ;;		line 140 in file "color.c"
  2636 ;; Parameters:    Size  Location     Type
  2637 ;;  color           1    wreg     unsigned char 
  2638 ;; Auto vars:     Size  Location     Type
  2639 ;;  color           1  125[BANK0 ] unsigned char 
  2640 ;;  buf           100   25[BANK0 ] unsigned char [100]
  2641 ;;  color_name      1    0        unsigned char 
  2642 ;; Return value:  Size  Location     Type
  2643 ;;                  1    wreg      void 
  2644 ;; Registers used:
  2645 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2646 ;; Tracked objects:
  2647 ;;		On entry : 0/0
  2648 ;;		On exit  : 0/0
  2649 ;;		Unchanged: 0/0
  2650 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2651 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2652 ;;      Locals:         0     101       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2653 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2654 ;;      Totals:         0     101       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2655 ;;Total ram usage:      101 bytes
  2656 ;; Hardware stack levels used: 1
  2657 ;; Hardware stack levels required when called: 8
  2658 ;; This function calls:
  2659 ;;		_sendStringSerial4
  2660 ;;		_sprintf
  2661 ;; This function is called by:
  2662 ;;		_main
  2663 ;; This function uses a non-reentrant model
  2664 ;;
  2665                           
  2666                           	psect	text11
  2667  001D84                     __ptext11:
  2668                           	callstack 0
  2669  001D84                     _color_predict:
  2670                           	callstack 22
  2671                           
  2672                           ;incstack = 0
  2673                           ;color_predict@color stored from wreg
  2674  001D84  0100               	movlb	0	; () banked
  2675  001D86  6FDD               	movwf	color_predict@color& (0+255),b
  2676  001D88                     
  2677                           ;color.c: 140: void color_predict(unsigned char color);color.c: 141: {;color.c: 142:    
      +                           char buf[100];;color.c: 143:     char color_name;;color.c: 144:     if (color == 0){col
      +                          or_name = "Error";}
  2678  001D88  0100               	movlb	0	; () banked
  2679  001D8A  51DD               	movf	color_predict@color& (0+255),w,b
  2680  001D8C  A4D8               	btfss	status,2,c
  2681  001D8E  EFCB  F00E         	goto	u1581
  2682  001D92  EFCD  F00E         	goto	u1580
  2683  001D96                     u1581:
  2684  001D96  EFCD  F00E         	goto	l2560
  2685  001D9A                     u1580:
  2686  001D9A                     l2560:
  2687                           
  2688                           ; BSR set to: 0
  2689                           ;color.c: 145:     if (color == 1){color_name = "Red";}
  2690  001D9A  05DD               	decf	color_predict@color& (0+255),w,b
  2691  001D9C  A4D8               	btfss	status,2,c
  2692  001D9E  EFD3  F00E         	goto	u1591
  2693  001DA2  EFD5  F00E         	goto	u1590
  2694  001DA6                     u1591:
  2695  001DA6  EFD5  F00E         	goto	l2564
  2696  001DAA                     u1590:
  2697  001DAA                     l2564:
  2698                           
  2699                           ; BSR set to: 0
  2700                           ;color.c: 146:     if (color == 2){color_name = "Green";}
  2701  001DAA  0E02               	movlw	2
  2702  001DAC  19DD               	xorwf	color_predict@color& (0+255),w,b
  2703  001DAE  A4D8               	btfss	status,2,c
  2704  001DB0  EFDC  F00E         	goto	u1601
  2705  001DB4  EFDE  F00E         	goto	u1600
  2706  001DB8                     u1601:
  2707  001DB8  EFDE  F00E         	goto	l2568
  2708  001DBC                     u1600:
  2709  001DBC                     l2568:
  2710                           
  2711                           ; BSR set to: 0
  2712                           ;color.c: 147:     if (color == 3){color_name = "Blue";}
  2713  001DBC  0E03               	movlw	3
  2714  001DBE  19DD               	xorwf	color_predict@color& (0+255),w,b
  2715  001DC0  A4D8               	btfss	status,2,c
  2716  001DC2  EFE5  F00E         	goto	u1611
  2717  001DC6  EFE7  F00E         	goto	u1610
  2718  001DCA                     u1611:
  2719  001DCA  EFE7  F00E         	goto	l2572
  2720  001DCE                     u1610:
  2721  001DCE                     l2572:
  2722                           
  2723                           ; BSR set to: 0
  2724                           ;color.c: 148:     if (color == 4){color_name = "Yellow";}
  2725  001DCE  0E04               	movlw	4
  2726  001DD0  19DD               	xorwf	color_predict@color& (0+255),w,b
  2727  001DD2  A4D8               	btfss	status,2,c
  2728  001DD4  EFEE  F00E         	goto	u1621
  2729  001DD8  EFF0  F00E         	goto	u1620
  2730  001DDC                     u1621:
  2731  001DDC  EFF0  F00E         	goto	l2576
  2732  001DE0                     u1620:
  2733  001DE0                     l2576:
  2734                           
  2735                           ; BSR set to: 0
  2736                           ;color.c: 149:     if (color == 5){color_name = "Pink";}
  2737  001DE0  0E05               	movlw	5
  2738  001DE2  19DD               	xorwf	color_predict@color& (0+255),w,b
  2739  001DE4  A4D8               	btfss	status,2,c
  2740  001DE6  EFF7  F00E         	goto	u1631
  2741  001DEA  EFF9  F00E         	goto	u1630
  2742  001DEE                     u1631:
  2743  001DEE  EFF9  F00E         	goto	l2580
  2744  001DF2                     u1630:
  2745  001DF2                     l2580:
  2746                           
  2747                           ; BSR set to: 0
  2748                           ;color.c: 150:     if (color == 6){color_name = "Orange";}
  2749  001DF2  0E06               	movlw	6
  2750  001DF4  19DD               	xorwf	color_predict@color& (0+255),w,b
  2751  001DF6  A4D8               	btfss	status,2,c
  2752  001DF8  EF00  F00F         	goto	u1641
  2753  001DFC  EF02  F00F         	goto	u1640
  2754  001E00                     u1641:
  2755  001E00  EF02  F00F         	goto	l2584
  2756  001E04                     u1640:
  2757  001E04                     l2584:
  2758                           
  2759                           ; BSR set to: 0
  2760                           ;color.c: 151:     if (color == 7){color_name = "Light blue";}
  2761  001E04  0E07               	movlw	7
  2762  001E06  19DD               	xorwf	color_predict@color& (0+255),w,b
  2763  001E08  A4D8               	btfss	status,2,c
  2764  001E0A  EF09  F00F         	goto	u1651
  2765  001E0E  EF0B  F00F         	goto	u1650
  2766  001E12                     u1651:
  2767  001E12  EF0B  F00F         	goto	l2588
  2768  001E16                     u1650:
  2769  001E16                     l2588:
  2770                           
  2771                           ; BSR set to: 0
  2772                           ;color.c: 152:     if (color == 8){color_name = "White";}
  2773  001E16  0E08               	movlw	8
  2774  001E18  19DD               	xorwf	color_predict@color& (0+255),w,b
  2775  001E1A  A4D8               	btfss	status,2,c
  2776  001E1C  EF12  F00F         	goto	u1661
  2777  001E20  EF14  F00F         	goto	u1660
  2778  001E24                     u1661:
  2779  001E24  EF14  F00F         	goto	l2592
  2780  001E28                     u1660:
  2781  001E28                     l2592:
  2782                           
  2783                           ; BSR set to: 0
  2784                           ;color.c: 153:     if (color == 9){color_name = "Black";}
  2785  001E28  0E09               	movlw	9
  2786  001E2A  19DD               	xorwf	color_predict@color& (0+255),w,b
  2787  001E2C  A4D8               	btfss	status,2,c
  2788  001E2E  EF1B  F00F         	goto	u1671
  2789  001E32  EF1D  F00F         	goto	u1670
  2790  001E36                     u1671:
  2791  001E36  EF1D  F00F         	goto	l2596
  2792  001E3A                     u1670:
  2793  001E3A                     l2596:
  2794                           
  2795                           ; BSR set to: 0
  2796                           ;color.c: 155:     sprintf(buf,"\t%d\r\n", color);
  2797  001E3A  0E79               	movlw	low color_predict@buf
  2798  001E3C  6F60               	movwf	sprintf@s& (0+255),b
  2799  001E3E  0E00               	movlw	high color_predict@buf
  2800  001E40  6F61               	movwf	(sprintf@s+1)& (0+255),b
  2801  001E42  0E0A               	movlw	low (STR_1+9)
  2802  001E44  6F62               	movwf	sprintf@fmt& (0+255),b
  2803  001E46  0E0E               	movlw	high (STR_1+9)
  2804  001E48  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
  2805  001E4A  C0DD  F064         	movff	color_predict@color,?_sprintf+4
  2806  001E4E  6B65               	clrf	(?_sprintf+5)& (0+255),b
  2807  001E50  EC34  F011         	call	_sprintf	;wreg free
  2808  001E54                     
  2809                           ;color.c: 156:     sendStringSerial4(buf);
  2810  001E54  0E79               	movlw	low color_predict@buf
  2811  001E56  6E02               	movwf	sendStringSerial4@string^0,c
  2812  001E58  0E00               	movlw	high color_predict@buf
  2813  001E5A  6E03               	movwf	(sendStringSerial4@string+1)^0,c
  2814  001E5C  ECF2  F012         	call	_sendStringSerial4	;wreg free
  2815  001E60  0012               	return		;funcret
  2816  001E62                     __end_of_color_predict:
  2817                           	callstack 0
  2818                           
  2819 ;; *************** function _color_display *****************
  2820 ;; Defined at:
  2821 ;;		line 133 in file "color.c"
  2822 ;; Parameters:    Size  Location     Type
  2823 ;;  m               2   87[COMRAM] PTR struct color_rgb
  2824 ;;		 -> main@rgb(8), 
  2825 ;; Auto vars:     Size  Location     Type
  2826 ;;  buf           100   25[BANK0 ] unsigned char [100]
  2827 ;; Return value:  Size  Location     Type
  2828 ;;                  1    wreg      void 
  2829 ;; Registers used:
  2830 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2831 ;; Tracked objects:
  2832 ;;		On entry : 0/0
  2833 ;;		On exit  : 0/0
  2834 ;;		Unchanged: 0/0
  2835 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2836 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2837 ;;      Locals:         0     100       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2838 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2839 ;;      Totals:         2     100       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2840 ;;Total ram usage:      102 bytes
  2841 ;; Hardware stack levels used: 1
  2842 ;; Hardware stack levels required when called: 8
  2843 ;; This function calls:
  2844 ;;		_sendStringSerial4
  2845 ;;		_sprintf
  2846 ;; This function is called by:
  2847 ;;		_main
  2848 ;; This function uses a non-reentrant model
  2849 ;;
  2850                           
  2851                           	psect	text12
  2852  002138                     __ptext12:
  2853                           	callstack 0
  2854  002138                     _color_display:
  2855                           	callstack 22
  2856  002138                     
  2857                           ;color.c: 133: void color_display(struct color_rgb *m);color.c: 134: {;color.c: 135:    
      +                           char buf[100];;color.c: 136:     sprintf(buf,"\t%d\t%d\t%d\t%d\r\n", m->R, m->G, m->B, 
      +                          m->C);
  2858  002138  0E79               	movlw	low color_display@buf
  2859  00213A  0100               	movlb	0	; () banked
  2860  00213C  6F60               	movwf	sprintf@s& (0+255),b
  2861  00213E  0E00               	movlw	high color_display@buf
  2862  002140  6F61               	movwf	(sprintf@s+1)& (0+255),b
  2863  002142  0E01               	movlw	low STR_1
  2864  002144  6F62               	movwf	sprintf@fmt& (0+255),b
  2865  002146  0E0E               	movlw	high STR_1
  2866  002148  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
  2867  00214A  C058  FFD9         	movff	color_display@m,fsr2l
  2868  00214E  C059  FFDA         	movff	color_display@m+1,fsr2h
  2869  002152  CFDE F064          	movff	postinc2,?_sprintf+4
  2870  002156  CFDD F065          	movff	postdec2,?_sprintf+5
  2871  00215A  EE20 F002          	lfsr	2,2
  2872  00215E  5058               	movf	color_display@m^0,w,c
  2873  002160  26D9               	addwf	fsr2l,f,c
  2874  002162  5059               	movf	(color_display@m+1)^0,w,c
  2875  002164  22DA               	addwfc	fsr2h,f,c
  2876  002166  CFDE F066          	movff	postinc2,?_sprintf+6
  2877  00216A  CFDD F067          	movff	postdec2,?_sprintf+7
  2878  00216E  EE20 F004          	lfsr	2,4
  2879  002172  5058               	movf	color_display@m^0,w,c
  2880  002174  26D9               	addwf	fsr2l,f,c
  2881  002176  5059               	movf	(color_display@m+1)^0,w,c
  2882  002178  22DA               	addwfc	fsr2h,f,c
  2883  00217A  CFDE F068          	movff	postinc2,?_sprintf+8
  2884  00217E  CFDD F069          	movff	postdec2,?_sprintf+9
  2885  002182  EE20 F006          	lfsr	2,6
  2886  002186  5058               	movf	color_display@m^0,w,c
  2887  002188  26D9               	addwf	fsr2l,f,c
  2888  00218A  5059               	movf	(color_display@m+1)^0,w,c
  2889  00218C  22DA               	addwfc	fsr2h,f,c
  2890  00218E  CFDE F06A          	movff	postinc2,?_sprintf+10
  2891  002192  CFDD F06B          	movff	postdec2,?_sprintf+11
  2892  002196  EC34  F011         	call	_sprintf	;wreg free
  2893  00219A                     
  2894                           ;color.c: 137:     sendStringSerial4(buf);
  2895  00219A  0E79               	movlw	low color_display@buf
  2896  00219C  6E02               	movwf	sendStringSerial4@string^0,c
  2897  00219E  0E00               	movlw	high color_display@buf
  2898  0021A0  6E03               	movwf	(sendStringSerial4@string+1)^0,c
  2899  0021A2  ECF2  F012         	call	_sendStringSerial4	;wreg free
  2900  0021A6  0012               	return		;funcret
  2901  0021A8                     __end_of_color_display:
  2902                           	callstack 0
  2903                           
  2904 ;; *************** function _sprintf *****************
  2905 ;; Defined at:
  2906 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\nf_sprintf.c"
  2907 ;; Parameters:    Size  Location     Type
  2908 ;;  s               2    0[BANK0 ] PTR unsigned char 
  2909 ;;		 -> voltage_display@buf(80), color_predict@buf(100), color_display@buf(100), 
  2910 ;;  fmt             2    2[BANK0 ] PTR const unsigned char 
  2911 ;;		 -> STR_13(5), STR_12(6), STR_1(15), 
  2912 ;; Auto vars:     Size  Location     Type
  2913 ;;  f              11   14[BANK0 ] struct _IO_FILE
  2914 ;;  ap              2   12[BANK0 ] PTR void [1]
  2915 ;;		 -> ?_sprintf(2), 
  2916 ;;  ret             2    0        int 
  2917 ;; Return value:  Size  Location     Type
  2918 ;;                  2    0[BANK0 ] int 
  2919 ;; Registers used:
  2920 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2921 ;; Tracked objects:
  2922 ;;		On entry : 0/0
  2923 ;;		On exit  : 0/0
  2924 ;;		Unchanged: 0/0
  2925 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2926 ;;      Params:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2927 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2928 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2929 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2930 ;;Total ram usage:       25 bytes
  2931 ;; Hardware stack levels used: 1
  2932 ;; Hardware stack levels required when called: 7
  2933 ;; This function calls:
  2934 ;;		_vfprintf
  2935 ;; This function is called by:
  2936 ;;		_color_display
  2937 ;;		_color_predict
  2938 ;;		_voltage_display
  2939 ;; This function uses a non-reentrant model
  2940 ;;
  2941                           
  2942                           	psect	text13
  2943  002268                     __ptext13:
  2944                           	callstack 0
  2945  002268                     _sprintf:
  2946                           	callstack 22
  2947  002268  0E64               	movlw	low (?_sprintf+4)
  2948  00226A  0100               	movlb	0	; () banked
  2949  00226C  6F6C               	movwf	sprintf@ap& (0+255),b
  2950  00226E  0E00               	movlw	high (?_sprintf+4)
  2951  002270  6F6D               	movwf	(sprintf@ap+1)& (0+255),b
  2952  002272  C060  F06E         	movff	sprintf@s,sprintf@f
  2953  002276  C061  F06F         	movff	sprintf@s+1,sprintf@f+1
  2954  00227A                     
  2955                           ; BSR set to: 0
  2956  00227A  0E00               	movlw	0
  2957  00227C  6F72               	movwf	(sprintf@f+4)& (0+255),b
  2958  00227E  0E00               	movlw	0
  2959  002280  6F71               	movwf	(sprintf@f+3)& (0+255),b
  2960  002282                     
  2961                           ; BSR set to: 0
  2962  002282  0E00               	movlw	0
  2963  002284  6F78               	movwf	(sprintf@f+10)& (0+255),b
  2964  002286  0E00               	movlw	0
  2965  002288  6F77               	movwf	(sprintf@f+9)& (0+255),b
  2966  00228A                     
  2967                           ; BSR set to: 0
  2968  00228A  0E6E               	movlw	low sprintf@f
  2969  00228C  6E50               	movwf	vfprintf@fp^0,c
  2970  00228E  0E00               	movlw	high sprintf@f
  2971  002290  6E51               	movwf	(vfprintf@fp+1)^0,c
  2972  002292  C062  F052         	movff	sprintf@fmt,vfprintf@fmt
  2973  002296  C063  F053         	movff	sprintf@fmt+1,vfprintf@fmt+1
  2974  00229A  0E6C               	movlw	low sprintf@ap
  2975  00229C  6E54               	movwf	vfprintf@ap^0,c
  2976  00229E  0E00               	movlw	high sprintf@ap
  2977  0022A0  6E55               	movwf	(vfprintf@ap+1)^0,c
  2978  0022A2  ECD4  F010         	call	_vfprintf	;wreg free
  2979  0022A6  0100               	movlb	0	; () banked
  2980  0022A8  5171               	movf	(sprintf@f+3)& (0+255),w,b
  2981  0022AA  2560               	addwf	sprintf@s& (0+255),w,b
  2982  0022AC  6ED9               	movwf	fsr2l,c
  2983  0022AE  5172               	movf	(sprintf@f+4)& (0+255),w,b
  2984  0022B0  2161               	addwfc	(sprintf@s+1)& (0+255),w,b
  2985  0022B2  6EDA               	movwf	fsr2h,c
  2986  0022B4  0E00               	movlw	0
  2987  0022B6  6EDF               	movwf	indf2,c
  2988  0022B8                     
  2989                           ; BSR set to: 0
  2990  0022B8  0012               	return		;funcret
  2991  0022BA                     __end_of_sprintf:
  2992                           	callstack 0
  2993                           
  2994 ;; *************** function _vfprintf *****************
  2995 ;; Defined at:
  2996 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c"
  2997 ;; Parameters:    Size  Location     Type
  2998 ;;  fp              2   79[COMRAM] PTR struct _IO_FILE
  2999 ;;		 -> sprintf@f(11), 
  3000 ;;  fmt             2   81[COMRAM] PTR const unsigned char 
  3001 ;;		 -> STR_13(5), STR_12(6), STR_1(15), 
  3002 ;;  ap              2   83[COMRAM] PTR PTR void 
  3003 ;;		 -> sprintf@ap(2), 
  3004 ;; Auto vars:     Size  Location     Type
  3005 ;;  cfmt            2   85[COMRAM] PTR unsigned char 
  3006 ;;		 -> STR_13(5), STR_12(6), STR_1(15), 
  3007 ;; Return value:  Size  Location     Type
  3008 ;;                  2   79[COMRAM] int 
  3009 ;; Registers used:
  3010 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3011 ;; Tracked objects:
  3012 ;;		On entry : 0/0
  3013 ;;		On exit  : 0/0
  3014 ;;		Unchanged: 0/0
  3015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3016 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3017 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3018 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3019 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3020 ;;Total ram usage:        8 bytes
  3021 ;; Hardware stack levels used: 1
  3022 ;; Hardware stack levels required when called: 6
  3023 ;; This function calls:
  3024 ;;		_vfpfcnvrt
  3025 ;; This function is called by:
  3026 ;;		_sprintf
  3027 ;; This function uses a non-reentrant model
  3028 ;;
  3029                           
  3030                           	psect	text14
  3031  0021A8                     __ptext14:
  3032                           	callstack 0
  3033  0021A8                     _vfprintf:
  3034                           	callstack 22
  3035  0021A8                     
  3036                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.35\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  3037  0021A8  C052  F056         	movff	vfprintf@fmt,vfprintf@cfmt
  3038  0021AC  C053  F057         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  3039  0021B0                     
  3040                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  3041  0021B0  0E00               	movlw	0
  3042  0021B2  0100               	movlb	0	; () banked
  3043  0021B4  6FF3               	movwf	(_nout+1)& (0+255),b
  3044  0021B6  0E00               	movlw	0
  3045  0021B8  6FF2               	movwf	_nout& (0+255),b
  3046                           
  3047                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  3048  0021BA  EFF2  F010         	goto	l2444
  3049  0021BE                     l2442:
  3050                           
  3051                           ; BSR set to: 0
  3052                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  3053  0021BE  C050  F040         	movff	vfprintf@fp,vfpfcnvrt@fp
  3054  0021C2  C051  F041         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  3055  0021C6  0E56               	movlw	low vfprintf@cfmt
  3056  0021C8  6E42               	movwf	vfpfcnvrt@fmt^0,c
  3057  0021CA  0E00               	movlw	high vfprintf@cfmt
  3058  0021CC  6E43               	movwf	(vfpfcnvrt@fmt+1)^0,c
  3059  0021CE  C054  F044         	movff	vfprintf@ap,vfpfcnvrt@ap
  3060  0021D2  C055  F045         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  3061  0021D6  EC72  F00C         	call	_vfpfcnvrt	;wreg free
  3062  0021DA  5040               	movf	?_vfpfcnvrt^0,w,c
  3063  0021DC  0100               	movlb	0	; () banked
  3064  0021DE  27F2               	addwf	_nout& (0+255),f,b
  3065  0021E0  5041               	movf	(?_vfpfcnvrt+1)^0,w,c
  3066  0021E2  23F3               	addwfc	(_nout+1)& (0+255),f,b
  3067  0021E4                     l2444:
  3068                           
  3069                           ; BSR set to: 0
  3070                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  3071  0021E4  C056  FFF6         	movff	vfprintf@cfmt,tblptrl
  3072  0021E8  C057  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  3073  0021EC                     	if	0	;tblptru may be non-zero
  3074  0021EC                     	endif
  3075  0021EC                     	if	0	;tblptru may be non-zero
  3076  0021EC                     	endif
  3077  0021EC  0008               	tblrd		*
  3078  0021EE  50F5               	movf	tablat,w,c
  3079  0021F0  0900               	iorlw	0
  3080  0021F2  A4D8               	btfss	status,2,c
  3081  0021F4  EFFE  F010         	goto	u1511
  3082  0021F8  EF00  F011         	goto	u1510
  3083  0021FC                     u1511:
  3084  0021FC  EFDF  F010         	goto	l2442
  3085  002200                     u1510:
  3086  002200                     
  3087                           ; BSR set to: 0
  3088                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  3089  002200  C0F2  F050         	movff	_nout,?_vfprintf
  3090  002204  C0F3  F051         	movff	_nout+1,?_vfprintf+1
  3091  002208                     
  3092                           ; BSR set to: 0
  3093  002208  0012               	return		;funcret
  3094  00220A                     __end_of_vfprintf:
  3095                           	callstack 0
  3096                           
  3097 ;; *************** function _vfpfcnvrt *****************
  3098 ;; Defined at:
  3099 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c"
  3100 ;; Parameters:    Size  Location     Type
  3101 ;;  fp              2   63[COMRAM] PTR struct _IO_FILE
  3102 ;;		 -> sprintf@f(11), 
  3103 ;;  fmt             2   65[COMRAM] PTR PTR unsigned char 
  3104 ;;		 -> vfprintf@cfmt(2), 
  3105 ;;  ap              2   67[COMRAM] PTR PTR void 
  3106 ;;		 -> sprintf@ap(2), 
  3107 ;; Auto vars:     Size  Location     Type
  3108 ;;  ll              8   71[COMRAM] long long 
  3109 ;;  llu             8    0        unsigned long long 
  3110 ;;  f               4    0        unsigned long long 
  3111 ;;  vp              3    0        PTR void 
  3112 ;;  ct              3    0        unsigned char [3]
  3113 ;;  cp              3    0        PTR unsigned char 
  3114 ;;  i               2    0        int 
  3115 ;;  done            2    0        int 
  3116 ;;  c               1    0        unsigned char 
  3117 ;; Return value:  Size  Location     Type
  3118 ;;                  2   63[COMRAM] int 
  3119 ;; Registers used:
  3120 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3121 ;; Tracked objects:
  3122 ;;		On entry : 0/0
  3123 ;;		On exit  : 0/0
  3124 ;;		Unchanged: 0/0
  3125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3126 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3127 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3128 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3129 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3130 ;;Total ram usage:       16 bytes
  3131 ;; Hardware stack levels used: 1
  3132 ;; Hardware stack levels required when called: 5
  3133 ;; This function calls:
  3134 ;;		_dtoa
  3135 ;;		_fputc
  3136 ;; This function is called by:
  3137 ;;		_vfprintf
  3138 ;; This function uses a non-reentrant model
  3139 ;;
  3140                           
  3141                           	psect	text15
  3142  0018E4                     __ptext15:
  3143                           	callstack 0
  3144  0018E4                     _vfpfcnvrt:
  3145                           	callstack 22
  3146  0018E4                     
  3147                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.35\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.35\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.35\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          5\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  3148  0018E4  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3149  0018E8  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3150  0018EC  CFDE FFF6          	movff	postinc2,tblptrl
  3151  0018F0  CFDD FFF7          	movff	postdec2,tblptrh
  3152  0018F4                     	if	0	;tblptru may be non-zero
  3153  0018F4                     	endif
  3154  0018F4                     	if	0	;tblptru may be non-zero
  3155  0018F4                     	endif
  3156  0018F4  0008               	tblrd		*
  3157  0018F6  50F5               	movf	tablat,w,c
  3158  0018F8  0A25               	xorlw	37
  3159  0018FA  A4D8               	btfss	status,2,c
  3160  0018FC  EF82  F00C         	goto	u1461
  3161  001900  EF84  F00C         	goto	u1460
  3162  001904                     u1461:
  3163  001904  EF30  F00D         	goto	l2424
  3164  001908                     u1460:
  3165  001908                     
  3166                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  3167  001908  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3168  00190C  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3169  001910  2ADE               	incf	postinc2,f,c
  3170  001912  0E00               	movlw	0
  3171  001914  22DD               	addwfc	postdec2,f,c
  3172  001916                     
  3173                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  3174  001916  0E00               	movlw	0
  3175  001918  0100               	movlb	0	; () banked
  3176  00191A  6FF5               	movwf	(_width+1)& (0+255),b
  3177  00191C  0E00               	movlw	0
  3178  00191E  6FF4               	movwf	_width& (0+255),b
  3179  001920  C0F4  F0F8         	movff	_width,_flags
  3180  001924  C0F5  F0F9         	movff	_width+1,_flags+1
  3181  001928                     
  3182                           ; BSR set to: 0
  3183                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  3184  001928  69F6               	setf	_prec& (0+255),b
  3185  00192A  69F7               	setf	(_prec+1)& (0+255),b
  3186  00192C                     
  3187                           ; BSR set to: 0
  3188                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  3189  00192C  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3190  001930  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3191  001934  CFDE FFF6          	movff	postinc2,tblptrl
  3192  001938  CFDD FFF7          	movff	postdec2,tblptrh
  3193  00193C                     	if	0	;tblptru may be non-zero
  3194  00193C                     	endif
  3195  00193C                     	if	0	;tblptru may be non-zero
  3196  00193C                     	endif
  3197  00193C  0008               	tblrd		*
  3198  00193E  50F5               	movf	tablat,w,c
  3199  001940  0A64               	xorlw	100
  3200  001942  B4D8               	btfsc	status,2,c
  3201  001944  EFA6  F00C         	goto	u1471
  3202  001948  EFA8  F00C         	goto	u1470
  3203  00194C                     u1471:
  3204  00194C  EFBA  F00C         	goto	l2402
  3205  001950                     u1470:
  3206  001950                     
  3207                           ; BSR set to: 0
  3208  001950  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3209  001954  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3210  001958  CFDE FFF6          	movff	postinc2,tblptrl
  3211  00195C  CFDD FFF7          	movff	postdec2,tblptrh
  3212  001960                     	if	0	;tblptru may be non-zero
  3213  001960                     	endif
  3214  001960                     	if	0	;tblptru may be non-zero
  3215  001960                     	endif
  3216  001960  0008               	tblrd		*
  3217  001962  50F5               	movf	tablat,w,c
  3218  001964  0A69               	xorlw	105
  3219  001966  A4D8               	btfss	status,2,c
  3220  001968  EFB8  F00C         	goto	u1481
  3221  00196C  EFBA  F00C         	goto	u1480
  3222  001970                     u1481:
  3223  001970  EFFA  F00C         	goto	l2408
  3224  001974                     u1480:
  3225  001974                     l2402:
  3226                           
  3227                           ; BSR set to: 0
  3228                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  3229  001974  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3230  001978  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3231  00197C  2ADE               	incf	postinc2,f,c
  3232  00197E  0E00               	movlw	0
  3233  001980  22DD               	addwfc	postdec2,f,c
  3234                           
  3235                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  3236  001982  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3237  001986  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3238  00198A  CFDF F046          	movff	indf2,??_vfpfcnvrt
  3239  00198E  0E02               	movlw	2
  3240  001990  26DE               	addwf	postinc2,f,c
  3241  001992  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  3242  001996  0E00               	movlw	0
  3243  001998  22DD               	addwfc	postdec2,f,c
  3244  00199A  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3245  00199E  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3246  0019A2  CFDE F048          	movff	postinc2,vfpfcnvrt@ll
  3247  0019A6  CFDD F049          	movff	postdec2,vfpfcnvrt@ll+1
  3248  0019AA  0E00               	movlw	0
  3249  0019AC  BE49               	btfsc	(vfpfcnvrt@ll+1)^0,7,c
  3250  0019AE  0EFF               	movlw	-1
  3251  0019B0  6E4A               	movwf	(vfpfcnvrt@ll+2)^0,c
  3252  0019B2  6E4B               	movwf	(vfpfcnvrt@ll+3)^0,c
  3253  0019B4  6E4C               	movwf	(vfpfcnvrt@ll+4)^0,c
  3254  0019B6  6E4D               	movwf	(vfpfcnvrt@ll+5)^0,c
  3255  0019B8  6E4E               	movwf	(vfpfcnvrt@ll+6)^0,c
  3256  0019BA  6E4F               	movwf	(vfpfcnvrt@ll+7)^0,c
  3257  0019BC                     
  3258                           ; BSR set to: 0
  3259                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  3260  0019BC  C040  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  3261  0019C0  C041  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  3262  0019C4  C048  F01E         	movff	vfpfcnvrt@ll,dtoa@d
  3263  0019C8  C049  F01F         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  3264  0019CC  C04A  F020         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  3265  0019D0  C04B  F021         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  3266  0019D4  C04C  F022         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  3267  0019D8  C04D  F023         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  3268  0019DC  C04E  F024         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  3269  0019E0  C04F  F025         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  3270  0019E4  ECF8  F009         	call	_dtoa	;wreg free
  3271  0019E8  C01C  F040         	movff	?_dtoa,?_vfpfcnvrt
  3272  0019EC  C01D  F041         	movff	?_dtoa+1,?_vfpfcnvrt+1
  3273  0019F0  EF4B  F00D         	goto	l1223
  3274  0019F4                     l2408:
  3275                           
  3276                           ; BSR set to: 0
  3277                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  3278  0019F4  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3279  0019F8  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3280  0019FC  CFDE FFF6          	movff	postinc2,tblptrl
  3281  001A00  CFDD FFF7          	movff	postdec2,tblptrh
  3282  001A04                     	if	0	;tblptru may be non-zero
  3283  001A04                     	endif
  3284  001A04                     	if	0	;tblptru may be non-zero
  3285  001A04                     	endif
  3286  001A04  0008               	tblrd		*
  3287  001A06  50F5               	movf	tablat,w,c
  3288  001A08  0A25               	xorlw	37
  3289  001A0A  A4D8               	btfss	status,2,c
  3290  001A0C  EF0A  F00D         	goto	u1491
  3291  001A10  EF0C  F00D         	goto	u1490
  3292  001A14                     u1491:
  3293  001A14  EF23  F00D         	goto	l2418
  3294  001A18                     u1490:
  3295  001A18                     
  3296                           ; BSR set to: 0
  3297                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  3298  001A18  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3299  001A1C  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3300  001A20  2ADE               	incf	postinc2,f,c
  3301  001A22  0E00               	movlw	0
  3302  001A24  22DD               	addwfc	postdec2,f,c
  3303  001A26                     
  3304                           ; BSR set to: 0
  3305                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  3306  001A26  0E00               	movlw	0
  3307  001A28  6E02               	movwf	(fputc@c+1)^0,c
  3308  001A2A  0E25               	movlw	37
  3309  001A2C  6E01               	movwf	fputc@c^0,c
  3310  001A2E  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
  3311  001A32  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3312  001A36  EC9A  F00F         	call	_fputc	;wreg free
  3313  001A3A                     l2414:
  3314                           
  3315                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  3316  001A3A  0E00               	movlw	0
  3317  001A3C  6E41               	movwf	(?_vfpfcnvrt+1)^0,c
  3318  001A3E  0E01               	movlw	1
  3319  001A40  6E40               	movwf	?_vfpfcnvrt^0,c
  3320  001A42  EF4B  F00D         	goto	l1223
  3321  001A46                     l2418:
  3322                           
  3323                           ; BSR set to: 0
  3324                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  3325  001A46  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3326  001A4A  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3327  001A4E  2ADE               	incf	postinc2,f,c
  3328  001A50  0E00               	movlw	0
  3329  001A52  22DD               	addwfc	postdec2,f,c
  3330  001A54                     
  3331                           ; BSR set to: 0
  3332                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  3333  001A54  0E00               	movlw	0
  3334  001A56  6E41               	movwf	(?_vfpfcnvrt+1)^0,c
  3335  001A58  0E00               	movlw	0
  3336  001A5A  6E40               	movwf	?_vfpfcnvrt^0,c
  3337  001A5C  EF4B  F00D         	goto	l1223
  3338  001A60                     l2424:
  3339                           
  3340                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  3341  001A60  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3342  001A64  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3343  001A68  CFDE FFF6          	movff	postinc2,tblptrl
  3344  001A6C  CFDD FFF7          	movff	postdec2,tblptrh
  3345  001A70                     	if	0	;tblptru may be non-zero
  3346  001A70                     	endif
  3347  001A70                     	if	0	;tblptru may be non-zero
  3348  001A70                     	endif
  3349  001A70  0008               	tblrd		*
  3350  001A72  50F5               	movf	tablat,w,c
  3351  001A74  6E01               	movwf	fputc@c^0,c
  3352  001A76  6A02               	clrf	(fputc@c+1)^0,c
  3353  001A78  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
  3354  001A7C  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3355  001A80  EC9A  F00F         	call	_fputc	;wreg free
  3356  001A84                     
  3357                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  3358  001A84  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3359  001A88  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3360  001A8C  2ADE               	incf	postinc2,f,c
  3361  001A8E  0E00               	movlw	0
  3362  001A90  22DD               	addwfc	postdec2,f,c
  3363  001A92  EF1D  F00D         	goto	l2414
  3364  001A96                     l1223:
  3365  001A96  0012               	return		;funcret
  3366  001A98                     __end_of_vfpfcnvrt:
  3367                           	callstack 0
  3368                           
  3369 ;; *************** function _dtoa *****************
  3370 ;; Defined at:
  3371 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c"
  3372 ;; Parameters:    Size  Location     Type
  3373 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  3374 ;;		 -> sprintf@f(11), 
  3375 ;;  d               8   29[COMRAM] long long 
  3376 ;; Auto vars:     Size  Location     Type
  3377 ;;  n               8   53[COMRAM] long long 
  3378 ;;  i               2   61[COMRAM] int 
  3379 ;;  s               2   51[COMRAM] int 
  3380 ;;  w               2   49[COMRAM] int 
  3381 ;;  p               2   47[COMRAM] int 
  3382 ;; Return value:  Size  Location     Type
  3383 ;;                  2   27[COMRAM] int 
  3384 ;; Registers used:
  3385 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3386 ;; Tracked objects:
  3387 ;;		On entry : 0/0
  3388 ;;		On exit  : 0/0
  3389 ;;		Unchanged: 0/0
  3390 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3391 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3392 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3393 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3394 ;;      Totals:        36       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3395 ;;Total ram usage:       36 bytes
  3396 ;; Hardware stack levels used: 1
  3397 ;; Hardware stack levels required when called: 4
  3398 ;; This function calls:
  3399 ;;		___aodiv
  3400 ;;		___aomod
  3401 ;;		_abs
  3402 ;;		_pad
  3403 ;; This function is called by:
  3404 ;;		_vfpfcnvrt
  3405 ;; This function uses a non-reentrant model
  3406 ;;
  3407                           
  3408                           	psect	text16
  3409  0013F0                     __ptext16:
  3410                           	callstack 0
  3411  0013F0                     _dtoa:
  3412                           	callstack 22
  3413  0013F0                     
  3414                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  3415  0013F0  C01E  F036         	movff	dtoa@d,dtoa@n
  3416  0013F4  C01F  F037         	movff	dtoa@d+1,dtoa@n+1
  3417  0013F8  C020  F038         	movff	dtoa@d+2,dtoa@n+2
  3418  0013FC  C021  F039         	movff	dtoa@d+3,dtoa@n+3
  3419  001400  C022  F03A         	movff	dtoa@d+4,dtoa@n+4
  3420  001404  C023  F03B         	movff	dtoa@d+5,dtoa@n+5
  3421  001408  C024  F03C         	movff	dtoa@d+6,dtoa@n+6
  3422  00140C  C025  F03D         	movff	dtoa@d+7,dtoa@n+7
  3423  001410                     
  3424                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  3425  001410  BE3D               	btfsc	(dtoa@n+7)^0,7,c
  3426  001412  EF0D  F00A         	goto	u1311
  3427  001416  EF10  F00A         	goto	u1310
  3428  00141A                     u1311:
  3429  00141A  0E01               	movlw	1
  3430  00141C  EF11  F00A         	goto	u1320
  3431  001420                     u1310:
  3432  001420  0E00               	movlw	0
  3433  001422                     u1320:
  3434  001422  6E34               	movwf	dtoa@s^0,c
  3435  001424  6A35               	clrf	(dtoa@s+1)^0,c
  3436                           
  3437                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  3438  001426  5034               	movf	dtoa@s^0,w,c
  3439  001428  1035               	iorwf	(dtoa@s+1)^0,w,c
  3440  00142A  B4D8               	btfsc	status,2,c
  3441  00142C  EF1A  F00A         	goto	u1331
  3442  001430  EF1C  F00A         	goto	u1330
  3443  001434                     u1331:
  3444  001434  EF2C  F00A         	goto	l2310
  3445  001438                     u1330:
  3446  001438                     
  3447                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  3448  001438  1E3D               	comf	(dtoa@n+7)^0,f,c
  3449  00143A  1E3C               	comf	(dtoa@n+6)^0,f,c
  3450  00143C  1E3B               	comf	(dtoa@n+5)^0,f,c
  3451  00143E  1E3A               	comf	(dtoa@n+4)^0,f,c
  3452  001440  1E39               	comf	(dtoa@n+3)^0,f,c
  3453  001442  1E38               	comf	(dtoa@n+2)^0,f,c
  3454  001444  1E37               	comf	(dtoa@n+1)^0,f,c
  3455  001446  6C36               	negf	dtoa@n^0,c
  3456  001448  0E00               	movlw	0
  3457  00144A  2237               	addwfc	(dtoa@n+1)^0,f,c
  3458  00144C  2238               	addwfc	(dtoa@n+2)^0,f,c
  3459  00144E  2239               	addwfc	(dtoa@n+3)^0,f,c
  3460  001450  223A               	addwfc	(dtoa@n+4)^0,f,c
  3461  001452  223B               	addwfc	(dtoa@n+5)^0,f,c
  3462  001454  223C               	addwfc	(dtoa@n+6)^0,f,c
  3463  001456  223D               	addwfc	(dtoa@n+7)^0,f,c
  3464  001458                     l2310:
  3465                           
  3466                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  3467  001458  0100               	movlb	0	; () banked
  3468  00145A  BFF7               	btfsc	(_prec+1)& (0+255),7,b
  3469  00145C  EF32  F00A         	goto	u1341
  3470  001460  EF34  F00A         	goto	u1340
  3471  001464                     u1341:
  3472  001464  EF35  F00A         	goto	l2314
  3473  001468                     u1340:
  3474  001468                     
  3475                           ; BSR set to: 0
  3476                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  3477  001468  93F8               	bcf	_flags& (0+255),1,b
  3478  00146A                     l2314:
  3479                           
  3480                           ; BSR set to: 0
  3481                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  3482  00146A  BFF7               	btfsc	(_prec+1)& (0+255),7,b
  3483  00146C  EF42  F00A         	goto	u1350
  3484  001470  51F7               	movf	(_prec+1)& (0+255),w,b
  3485  001472  E106               	bnz	u1351
  3486  001474  05F6               	decf	_prec& (0+255),w,b
  3487  001476  B0D8               	btfsc	status,0,c
  3488  001478  EF40  F00A         	goto	u1351
  3489  00147C  EF42  F00A         	goto	u1350
  3490  001480                     u1351:
  3491  001480  EF48  F00A         	goto	l1196
  3492  001484                     u1350:
  3493  001484                     
  3494                           ; BSR set to: 0
  3495  001484  0E00               	movlw	0
  3496  001486  6E31               	movwf	(dtoa@p+1)^0,c
  3497  001488  0E01               	movlw	1
  3498  00148A  6E30               	movwf	dtoa@p^0,c
  3499  00148C  EF4C  F00A         	goto	l1198
  3500  001490                     l1196:
  3501                           
  3502                           ; BSR set to: 0
  3503  001490  C0F6  F030         	movff	_prec,dtoa@p
  3504  001494  C0F7  F031         	movff	_prec+1,dtoa@p+1
  3505  001498                     l1198:
  3506                           
  3507                           ; BSR set to: 0
  3508                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  3509  001498  C0F4  F032         	movff	_width,dtoa@w
  3510  00149C  C0F5  F033         	movff	_width+1,dtoa@w+1
  3511  0014A0                     
  3512                           ; BSR set to: 0
  3513                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  3514  0014A0  5034               	movf	dtoa@s^0,w,c
  3515  0014A2  1035               	iorwf	(dtoa@s+1)^0,w,c
  3516  0014A4  A4D8               	btfss	status,2,c
  3517  0014A6  EF57  F00A         	goto	u1361
  3518  0014AA  EF59  F00A         	goto	u1360
  3519  0014AE                     u1361:
  3520  0014AE  EF60  F00A         	goto	l2322
  3521  0014B2                     u1360:
  3522  0014B2                     
  3523                           ; BSR set to: 0
  3524  0014B2  A5F8               	btfss	_flags& (0+255),2,b
  3525  0014B4  EF5E  F00A         	goto	u1371
  3526  0014B8  EF60  F00A         	goto	u1370
  3527  0014BC                     u1371:
  3528  0014BC  EF63  F00A         	goto	l2324
  3529  0014C0                     u1370:
  3530  0014C0                     l2322:
  3531                           
  3532                           ; BSR set to: 0
  3533                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 306:         --w;
  3534  0014C0  0632               	decf	dtoa@w^0,f,c
  3535  0014C2  A0D8               	btfss	status,0,c
  3536  0014C4  0633               	decf	(dtoa@w+1)^0,f,c
  3537  0014C6                     l2324:
  3538                           
  3539                           ; BSR set to: 0
  3540                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  3541  0014C6  0E00               	movlw	0
  3542  0014C8  6E3F               	movwf	(dtoa@i+1)^0,c
  3543  0014CA  0E1F               	movlw	31
  3544  0014CC  6E3E               	movwf	dtoa@i^0,c
  3545  0014CE                     
  3546                           ; BSR set to: 0
  3547                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  3548  0014CE  0E00               	movlw	0
  3549  0014D0  0101               	movlb	1	; () banked
  3550  0014D2  6F5B               	movwf	(_dbuf+31)& (0+255),b
  3551                           
  3552                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  3553  0014D4  EFE8  F00A         	goto	l2338
  3554  0014D8                     l2328:
  3555                           
  3556                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 313:         --i;
  3557  0014D8  063E               	decf	dtoa@i^0,f,c
  3558  0014DA  A0D8               	btfss	status,0,c
  3559  0014DC  063F               	decf	(dtoa@i+1)^0,f,c
  3560  0014DE                     
  3561                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  3562  0014DE  0E3C               	movlw	low _dbuf
  3563  0014E0  243E               	addwf	dtoa@i^0,w,c
  3564  0014E2  6ED9               	movwf	fsr2l,c
  3565  0014E4  0E01               	movlw	high _dbuf
  3566  0014E6  203F               	addwfc	(dtoa@i+1)^0,w,c
  3567  0014E8  6EDA               	movwf	fsr2h,c
  3568  0014EA  C036  F001         	movff	dtoa@n,___aomod@dividend
  3569  0014EE  C037  F002         	movff	dtoa@n+1,___aomod@dividend+1
  3570  0014F2  C038  F003         	movff	dtoa@n+2,___aomod@dividend+2
  3571  0014F6  C039  F004         	movff	dtoa@n+3,___aomod@dividend+3
  3572  0014FA  C03A  F005         	movff	dtoa@n+4,___aomod@dividend+4
  3573  0014FE  C03B  F006         	movff	dtoa@n+5,___aomod@dividend+5
  3574  001502  C03C  F007         	movff	dtoa@n+6,___aomod@dividend+6
  3575  001506  C03D  F008         	movff	dtoa@n+7,___aomod@dividend+7
  3576  00150A  0E0A               	movlw	10
  3577  00150C  6E09               	movwf	___aomod@divisor^0,c
  3578  00150E  0E00               	movlw	0
  3579  001510  6E0A               	movwf	(___aomod@divisor+1)^0,c
  3580  001512  0E00               	movlw	0
  3581  001514  6E0B               	movwf	(___aomod@divisor+2)^0,c
  3582  001516  0E00               	movlw	0
  3583  001518  6E0C               	movwf	(___aomod@divisor+3)^0,c
  3584  00151A  0E00               	movlw	0
  3585  00151C  6E0D               	movwf	(___aomod@divisor+4)^0,c
  3586  00151E  0E00               	movlw	0
  3587  001520  6E0E               	movwf	(___aomod@divisor+5)^0,c
  3588  001522  0E00               	movlw	0
  3589  001524  6E0F               	movwf	(___aomod@divisor+6)^0,c
  3590  001526  0E00               	movlw	0
  3591  001528  6E10               	movwf	(___aomod@divisor+7)^0,c
  3592  00152A  EC10  F00E         	call	___aomod	;wreg free
  3593  00152E  C001  F026         	movff	?___aomod,??_dtoa
  3594  001532  C002  F027         	movff	?___aomod+1,??_dtoa+1
  3595  001536  C003  F028         	movff	?___aomod+2,??_dtoa+2
  3596  00153A  C004  F029         	movff	?___aomod+3,??_dtoa+3
  3597  00153E  C005  F02A         	movff	?___aomod+4,??_dtoa+4
  3598  001542  C006  F02B         	movff	?___aomod+5,??_dtoa+5
  3599  001546  C007  F02C         	movff	?___aomod+6,??_dtoa+6
  3600  00154A  C008  F02D         	movff	?___aomod+7,??_dtoa+7
  3601  00154E  C026  F013         	movff	??_dtoa,abs@a
  3602  001552  C028  F014         	movff	??_dtoa+2,abs@a+1
  3603  001556  EC81  F012         	call	_abs	;wreg free
  3604  00155A  5013               	movf	?_abs^0,w,c
  3605  00155C  0F30               	addlw	48
  3606  00155E  6EDF               	movwf	indf2,c
  3607  001560                     
  3608                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 315:         --p;
  3609  001560  0630               	decf	dtoa@p^0,f,c
  3610  001562  A0D8               	btfss	status,0,c
  3611  001564  0631               	decf	(dtoa@p+1)^0,f,c
  3612  001566                     
  3613                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 316:         --w;
  3614  001566  0632               	decf	dtoa@w^0,f,c
  3615  001568  A0D8               	btfss	status,0,c
  3616  00156A  0633               	decf	(dtoa@w+1)^0,f,c
  3617  00156C                     
  3618                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  3619  00156C  C036  F001         	movff	dtoa@n,___aodiv@dividend
  3620  001570  C037  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  3621  001574  C038  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  3622  001578  C039  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  3623  00157C  C03A  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  3624  001580  C03B  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  3625  001584  C03C  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  3626  001588  C03D  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  3627  00158C  0E0A               	movlw	10
  3628  00158E  6E09               	movwf	___aodiv@divisor^0,c
  3629  001590  0E00               	movlw	0
  3630  001592  6E0A               	movwf	(___aodiv@divisor+1)^0,c
  3631  001594  0E00               	movlw	0
  3632  001596  6E0B               	movwf	(___aodiv@divisor+2)^0,c
  3633  001598  0E00               	movlw	0
  3634  00159A  6E0C               	movwf	(___aodiv@divisor+3)^0,c
  3635  00159C  0E00               	movlw	0
  3636  00159E  6E0D               	movwf	(___aodiv@divisor+4)^0,c
  3637  0015A0  0E00               	movlw	0
  3638  0015A2  6E0E               	movwf	(___aodiv@divisor+5)^0,c
  3639  0015A4  0E00               	movlw	0
  3640  0015A6  6E0F               	movwf	(___aodiv@divisor+6)^0,c
  3641  0015A8  0E00               	movlw	0
  3642  0015AA  6E10               	movwf	(___aodiv@divisor+7)^0,c
  3643  0015AC  EC4C  F00D         	call	___aodiv	;wreg free
  3644  0015B0  C001  F036         	movff	?___aodiv,dtoa@n
  3645  0015B4  C002  F037         	movff	?___aodiv+1,dtoa@n+1
  3646  0015B8  C003  F038         	movff	?___aodiv+2,dtoa@n+2
  3647  0015BC  C004  F039         	movff	?___aodiv+3,dtoa@n+3
  3648  0015C0  C005  F03A         	movff	?___aodiv+4,dtoa@n+4
  3649  0015C4  C006  F03B         	movff	?___aodiv+5,dtoa@n+5
  3650  0015C8  C007  F03C         	movff	?___aodiv+6,dtoa@n+6
  3651  0015CC  C008  F03D         	movff	?___aodiv+7,dtoa@n+7
  3652  0015D0                     l2338:
  3653                           
  3654                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  3655  0015D0  BE3F               	btfsc	(dtoa@i+1)^0,7,c
  3656  0015D2  EFF3  F00A         	goto	u1381
  3657  0015D6  503F               	movf	(dtoa@i+1)^0,w,c
  3658  0015D8  E108               	bnz	u1380
  3659  0015DA  043E               	decf	dtoa@i^0,w,c
  3660  0015DC  A0D8               	btfss	status,0,c
  3661  0015DE  EFF3  F00A         	goto	u1381
  3662  0015E2  EFF5  F00A         	goto	u1380
  3663  0015E6                     u1381:
  3664  0015E6  EF26  F00B         	goto	l2348
  3665  0015EA                     u1380:
  3666  0015EA  5036               	movf	dtoa@n^0,w,c
  3667  0015EC  1037               	iorwf	(dtoa@n+1)^0,w,c
  3668  0015EE  1038               	iorwf	(dtoa@n+2)^0,w,c
  3669  0015F0  1039               	iorwf	(dtoa@n+3)^0,w,c
  3670  0015F2  103A               	iorwf	(dtoa@n+4)^0,w,c
  3671  0015F4  103B               	iorwf	(dtoa@n+5)^0,w,c
  3672  0015F6  103C               	iorwf	(dtoa@n+6)^0,w,c
  3673  0015F8  103D               	iorwf	(dtoa@n+7)^0,w,c
  3674  0015FA  A4D8               	btfss	status,2,c
  3675  0015FC  EF02  F00B         	goto	u1391
  3676  001600  EF04  F00B         	goto	u1390
  3677  001604                     u1391:
  3678  001604  EF6C  F00A         	goto	l2328
  3679  001608                     u1390:
  3680  001608  BE31               	btfsc	(dtoa@p+1)^0,7,c
  3681  00160A  EF11  F00B         	goto	u1400
  3682  00160E  5031               	movf	(dtoa@p+1)^0,w,c
  3683  001610  E106               	bnz	u1401
  3684  001612  0430               	decf	dtoa@p^0,w,c
  3685  001614  B0D8               	btfsc	status,0,c
  3686  001616  EF0F  F00B         	goto	u1401
  3687  00161A  EF11  F00B         	goto	u1400
  3688  00161E                     u1401:
  3689  00161E  EF6C  F00A         	goto	l2328
  3690  001622                     u1400:
  3691  001622  BE33               	btfsc	(dtoa@w+1)^0,7,c
  3692  001624  EF1C  F00B         	goto	u1411
  3693  001628  5033               	movf	(dtoa@w+1)^0,w,c
  3694  00162A  E108               	bnz	u1410
  3695  00162C  0432               	decf	dtoa@w^0,w,c
  3696  00162E  A0D8               	btfss	status,0,c
  3697  001630  EF1C  F00B         	goto	u1411
  3698  001634  EF1E  F00B         	goto	u1410
  3699  001638                     u1411:
  3700  001638  EF26  F00B         	goto	l2348
  3701  00163C                     u1410:
  3702  00163C  0100               	movlb	0	; () banked
  3703  00163E  B3F8               	btfsc	_flags& (0+255),1,b
  3704  001640  EF24  F00B         	goto	u1421
  3705  001644  EF26  F00B         	goto	u1420
  3706  001648                     u1421:
  3707  001648  EF6C  F00A         	goto	l2328
  3708  00164C                     u1420:
  3709  00164C                     l2348:
  3710                           
  3711                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  3712  00164C  5034               	movf	dtoa@s^0,w,c
  3713  00164E  1035               	iorwf	(dtoa@s+1)^0,w,c
  3714  001650  A4D8               	btfss	status,2,c
  3715  001652  EF2D  F00B         	goto	u1431
  3716  001656  EF2F  F00B         	goto	u1430
  3717  00165A                     u1431:
  3718  00165A  EF37  F00B         	goto	l2352
  3719  00165E                     u1430:
  3720  00165E  0100               	movlb	0	; () banked
  3721  001660  A5F8               	btfss	_flags& (0+255),2,b
  3722  001662  EF35  F00B         	goto	u1441
  3723  001666  EF37  F00B         	goto	u1440
  3724  00166A                     u1441:
  3725  00166A  EF55  F00B         	goto	l2362
  3726  00166E                     u1440:
  3727  00166E                     l2352:
  3728                           
  3729                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 322:         --i;
  3730  00166E  063E               	decf	dtoa@i^0,f,c
  3731  001670  A0D8               	btfss	status,0,c
  3732  001672  063F               	decf	(dtoa@i+1)^0,f,c
  3733  001674                     
  3734                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  3735  001674  5034               	movf	dtoa@s^0,w,c
  3736  001676  1035               	iorwf	(dtoa@s+1)^0,w,c
  3737  001678  A4D8               	btfss	status,2,c
  3738  00167A  EF41  F00B         	goto	u1451
  3739  00167E  EF43  F00B         	goto	u1450
  3740  001682                     u1451:
  3741  001682  EF49  F00B         	goto	l2358
  3742  001686                     u1450:
  3743  001686  0E00               	movlw	0
  3744  001688  6E2F               	movwf	(_dtoa$2146+1)^0,c
  3745  00168A  0E2B               	movlw	43
  3746  00168C  6E2E               	movwf	_dtoa$2146^0,c
  3747  00168E  EF4D  F00B         	goto	l2360
  3748  001692                     l2358:
  3749  001692  0E00               	movlw	0
  3750  001694  6E2F               	movwf	(_dtoa$2146+1)^0,c
  3751  001696  0E2D               	movlw	45
  3752  001698  6E2E               	movwf	_dtoa$2146^0,c
  3753  00169A                     l2360:
  3754  00169A  0E3C               	movlw	low _dbuf
  3755  00169C  243E               	addwf	dtoa@i^0,w,c
  3756  00169E  6ED9               	movwf	fsr2l,c
  3757  0016A0  0E01               	movlw	high _dbuf
  3758  0016A2  203F               	addwfc	(dtoa@i+1)^0,w,c
  3759  0016A4  6EDA               	movwf	fsr2h,c
  3760  0016A6  C02E  FFDF         	movff	_dtoa$2146,indf2
  3761  0016AA                     l2362:
  3762                           
  3763                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  3764  0016AA  C01C  F011         	movff	dtoa@fp,pad@fp
  3765  0016AE  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
  3766  0016B2  0E3C               	movlw	low _dbuf
  3767  0016B4  243E               	addwf	dtoa@i^0,w,c
  3768  0016B6  6E13               	movwf	pad@buf^0,c
  3769  0016B8  0E01               	movlw	high _dbuf
  3770  0016BA  203F               	addwfc	(dtoa@i+1)^0,w,c
  3771  0016BC  6E14               	movwf	(pad@buf+1)^0,c
  3772  0016BE  C032  F015         	movff	dtoa@w,pad@p
  3773  0016C2  C033  F016         	movff	dtoa@w+1,pad@p+1
  3774  0016C6  ECFF  F00F         	call	_pad	;wreg free
  3775  0016CA  C011  F01C         	movff	?_pad,?_dtoa
  3776  0016CE  C012  F01D         	movff	?_pad+1,?_dtoa+1
  3777  0016D2  0012               	return		;funcret
  3778  0016D4                     __end_of_dtoa:
  3779                           	callstack 0
  3780                           
  3781 ;; *************** function _pad *****************
  3782 ;; Defined at:
  3783 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c"
  3784 ;; Parameters:    Size  Location     Type
  3785 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  3786 ;;		 -> sprintf@f(11), 
  3787 ;;  buf             2   18[COMRAM] PTR unsigned char 
  3788 ;;		 -> dbuf(32), 
  3789 ;;  p               2   20[COMRAM] int 
  3790 ;; Auto vars:     Size  Location     Type
  3791 ;;  w               2   25[COMRAM] int 
  3792 ;;  i               2   23[COMRAM] int 
  3793 ;; Return value:  Size  Location     Type
  3794 ;;                  2   16[COMRAM] int 
  3795 ;; Registers used:
  3796 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3797 ;; Tracked objects:
  3798 ;;		On entry : 0/0
  3799 ;;		On exit  : 0/0
  3800 ;;		Unchanged: 0/0
  3801 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3802 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3803 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3804 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3805 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3806 ;;Total ram usage:       11 bytes
  3807 ;; Hardware stack levels used: 1
  3808 ;; Hardware stack levels required when called: 3
  3809 ;; This function calls:
  3810 ;;		_fputc
  3811 ;;		_fputs
  3812 ;;		_strlen
  3813 ;; This function is called by:
  3814 ;;		_dtoa
  3815 ;; This function uses a non-reentrant model
  3816 ;;
  3817                           
  3818                           	psect	text17
  3819  001FFE                     __ptext17:
  3820                           	callstack 0
  3821  001FFE                     _pad:
  3822                           	callstack 22
  3823  001FFE                     
  3824                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  3825  001FFE  0100               	movlb	0	; () banked
  3826  002000  A1F8               	btfss	_flags& (0+255),0,b
  3827  002002  EF05  F010         	goto	u1241
  3828  002006  EF07  F010         	goto	u1240
  3829  00200A                     u1241:
  3830  00200A  EF11  F010         	goto	l2252
  3831  00200E                     u1240:
  3832  00200E                     
  3833                           ; BSR set to: 0
  3834                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  3835  00200E  C013  F00A         	movff	pad@buf,fputs@s
  3836  002012  C014  F00B         	movff	pad@buf+1,fputs@s+1
  3837  002016  C011  F00C         	movff	pad@fp,fputs@fp
  3838  00201A  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  3839  00201E  ECFD  F011         	call	_fputs	;wreg free
  3840  002022                     l2252:
  3841                           
  3842                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  3843  002022  BE16               	btfsc	(pad@p+1)^0,7,c
  3844  002024  EF16  F010         	goto	u1251
  3845  002028  EF18  F010         	goto	u1250
  3846  00202C                     u1251:
  3847  00202C  EF1E  F010         	goto	l2256
  3848  002030                     u1250:
  3849  002030  C015  F01A         	movff	pad@p,pad@w
  3850  002034  C016  F01B         	movff	pad@p+1,pad@w+1
  3851  002038  EF22  F010         	goto	l1185
  3852  00203C                     l2256:
  3853  00203C  0E00               	movlw	0
  3854  00203E  6E1B               	movwf	(pad@w+1)^0,c
  3855  002040  0E00               	movlw	0
  3856  002042  6E1A               	movwf	pad@w^0,c
  3857  002044                     l1185:
  3858                           
  3859                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  3860  002044  0E00               	movlw	0
  3861  002046  6E19               	movwf	(pad@i+1)^0,c
  3862  002048  0E00               	movlw	0
  3863  00204A  6E18               	movwf	pad@i^0,c
  3864                           
  3865                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  3866  00204C  EF34  F010         	goto	l2262
  3867  002050                     l2258:
  3868                           
  3869                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  3870  002050  0E00               	movlw	0
  3871  002052  6E02               	movwf	(fputc@c+1)^0,c
  3872  002054  0E20               	movlw	32
  3873  002056  6E01               	movwf	fputc@c^0,c
  3874  002058  C011  F003         	movff	pad@fp,fputc@fp
  3875  00205C  C012  F004         	movff	pad@fp+1,fputc@fp+1
  3876  002060  EC9A  F00F         	call	_fputc	;wreg free
  3877  002064                     
  3878                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 86:         ++i;
  3879  002064  4A18               	infsnz	pad@i^0,f,c
  3880  002066  2A19               	incf	(pad@i+1)^0,f,c
  3881  002068                     l2262:
  3882                           
  3883                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  3884  002068  501A               	movf	pad@w^0,w,c
  3885  00206A  5C18               	subwf	pad@i^0,w,c
  3886  00206C  5019               	movf	(pad@i+1)^0,w,c
  3887  00206E  0A80               	xorlw	128
  3888  002070  6E17               	movwf	??_pad^0,c
  3889  002072  501B               	movf	(pad@w+1)^0,w,c
  3890  002074  0A80               	xorlw	128
  3891  002076  5817               	subwfb	??_pad^0,w,c
  3892  002078  A0D8               	btfss	status,0,c
  3893  00207A  EF41  F010         	goto	u1261
  3894  00207E  EF43  F010         	goto	u1260
  3895  002082                     u1261:
  3896  002082  EF28  F010         	goto	l2258
  3897  002086                     u1260:
  3898  002086                     
  3899                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  3900  002086  0100               	movlb	0	; () banked
  3901  002088  B1F8               	btfsc	_flags& (0+255),0,b
  3902  00208A  EF49  F010         	goto	u1271
  3903  00208E  EF4B  F010         	goto	u1270
  3904  002092                     u1271:
  3905  002092  EF55  F010         	goto	l2266
  3906  002096                     u1270:
  3907  002096                     
  3908                           ; BSR set to: 0
  3909                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  3910  002096  C013  F00A         	movff	pad@buf,fputs@s
  3911  00209A  C014  F00B         	movff	pad@buf+1,fputs@s+1
  3912  00209E  C011  F00C         	movff	pad@fp,fputs@fp
  3913  0020A2  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  3914  0020A6  ECFD  F011         	call	_fputs	;wreg free
  3915  0020AA                     l2266:
  3916                           
  3917                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  3918  0020AA  C013  F001         	movff	pad@buf,strlen@s
  3919  0020AE  C014  F002         	movff	pad@buf+1,strlen@s+1
  3920  0020B2  ECBD  F012         	call	_strlen	;wreg free
  3921  0020B6  501A               	movf	pad@w^0,w,c
  3922  0020B8  2401               	addwf	?_strlen^0,w,c
  3923  0020BA  6E11               	movwf	?_pad^0,c
  3924  0020BC  501B               	movf	(pad@w+1)^0,w,c
  3925  0020BE  2002               	addwfc	(?_strlen+1)^0,w,c
  3926  0020C0  6E12               	movwf	(?_pad+1)^0,c
  3927  0020C2  0012               	return		;funcret
  3928  0020C4                     __end_of_pad:
  3929                           	callstack 0
  3930                           
  3931 ;; *************** function _strlen *****************
  3932 ;; Defined at:
  3933 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\strlen.c"
  3934 ;; Parameters:    Size  Location     Type
  3935 ;;  s               2    0[COMRAM] PTR const unsigned char 
  3936 ;;		 -> dbuf(32), 
  3937 ;; Auto vars:     Size  Location     Type
  3938 ;;  a               2    2[COMRAM] PTR const unsigned char 
  3939 ;;		 -> dbuf(32), 
  3940 ;; Return value:  Size  Location     Type
  3941 ;;                  2    0[COMRAM] unsigned int 
  3942 ;; Registers used:
  3943 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3944 ;; Tracked objects:
  3945 ;;		On entry : 0/0
  3946 ;;		On exit  : 0/0
  3947 ;;		Unchanged: 0/0
  3948 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3949 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3950 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3951 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3952 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3953 ;;Total ram usage:        4 bytes
  3954 ;; Hardware stack levels used: 1
  3955 ;; This function calls:
  3956 ;;		Nothing
  3957 ;; This function is called by:
  3958 ;;		_pad
  3959 ;; This function uses a non-reentrant model
  3960 ;;
  3961                           
  3962                           	psect	text18
  3963  00257A                     __ptext18:
  3964                           	callstack 0
  3965  00257A                     _strlen:
  3966                           	callstack 24
  3967  00257A  C001  F003         	movff	strlen@s,strlen@a
  3968  00257E  C002  F004         	movff	strlen@s+1,strlen@a+1
  3969  002582  EFC5  F012         	goto	l2158
  3970  002586                     l2156:
  3971  002586  4A01               	infsnz	strlen@s^0,f,c
  3972  002588  2A02               	incf	(strlen@s+1)^0,f,c
  3973  00258A                     l2158:
  3974  00258A  C001  FFD9         	movff	strlen@s,fsr2l
  3975  00258E  C002  FFDA         	movff	strlen@s+1,fsr2h
  3976  002592  50DF               	movf	indf2,w,c
  3977  002594  A4D8               	btfss	status,2,c
  3978  002596  EFCF  F012         	goto	u1081
  3979  00259A  EFD1  F012         	goto	u1080
  3980  00259E                     u1081:
  3981  00259E  EFC3  F012         	goto	l2156
  3982  0025A2                     u1080:
  3983  0025A2  5003               	movf	strlen@a^0,w,c
  3984  0025A4  5C01               	subwf	strlen@s^0,w,c
  3985  0025A6  6E01               	movwf	?_strlen^0,c
  3986  0025A8  5004               	movf	(strlen@a+1)^0,w,c
  3987  0025AA  5802               	subwfb	(strlen@s+1)^0,w,c
  3988  0025AC  6E02               	movwf	(?_strlen+1)^0,c
  3989  0025AE  0012               	return		;funcret
  3990  0025B0                     __end_of_strlen:
  3991                           	callstack 0
  3992                           
  3993 ;; *************** function _fputs *****************
  3994 ;; Defined at:
  3995 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\nf_fputs.c"
  3996 ;; Parameters:    Size  Location     Type
  3997 ;;  s               2    9[COMRAM] PTR const unsigned char 
  3998 ;;		 -> dbuf(32), 
  3999 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  4000 ;;		 -> sprintf@f(11), 
  4001 ;; Auto vars:     Size  Location     Type
  4002 ;;  i               2   14[COMRAM] int 
  4003 ;;  c               1   13[COMRAM] unsigned char 
  4004 ;; Return value:  Size  Location     Type
  4005 ;;                  2    9[COMRAM] int 
  4006 ;; Registers used:
  4007 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4008 ;; Tracked objects:
  4009 ;;		On entry : 0/0
  4010 ;;		On exit  : 0/0
  4011 ;;		Unchanged: 0/0
  4012 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4013 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4014 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4015 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4016 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4017 ;;Total ram usage:        7 bytes
  4018 ;; Hardware stack levels used: 1
  4019 ;; Hardware stack levels required when called: 2
  4020 ;; This function calls:
  4021 ;;		_fputc
  4022 ;; This function is called by:
  4023 ;;		_pad
  4024 ;; This function uses a non-reentrant model
  4025 ;;
  4026                           
  4027                           	psect	text19
  4028  0023FA                     __ptext19:
  4029                           	callstack 0
  4030  0023FA                     _fputs:
  4031                           	callstack 22
  4032  0023FA  0E00               	movlw	0
  4033  0023FC  6E10               	movwf	(fputs@i+1)^0,c
  4034  0023FE  0E00               	movlw	0
  4035  002400  6E0F               	movwf	fputs@i^0,c
  4036  002402  EF0E  F012         	goto	l2152
  4037  002406                     l2148:
  4038  002406  C00E  F001         	movff	fputs@c,fputc@c
  4039  00240A  6A02               	clrf	(fputc@c+1)^0,c
  4040  00240C  C00C  F003         	movff	fputs@fp,fputc@fp
  4041  002410  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  4042  002414  EC9A  F00F         	call	_fputc	;wreg free
  4043  002418  4A0F               	infsnz	fputs@i^0,f,c
  4044  00241A  2A10               	incf	(fputs@i+1)^0,f,c
  4045  00241C                     l2152:
  4046  00241C  500F               	movf	fputs@i^0,w,c
  4047  00241E  240A               	addwf	fputs@s^0,w,c
  4048  002420  6ED9               	movwf	fsr2l,c
  4049  002422  5010               	movf	(fputs@i+1)^0,w,c
  4050  002424  200B               	addwfc	(fputs@s+1)^0,w,c
  4051  002426  6EDA               	movwf	fsr2h,c
  4052  002428  50DF               	movf	indf2,w,c
  4053  00242A  6E0E               	movwf	fputs@c^0,c
  4054  00242C  500E               	movf	fputs@c^0,w,c
  4055  00242E  A4D8               	btfss	status,2,c
  4056  002430  EF1C  F012         	goto	u1071
  4057  002434  EF1E  F012         	goto	u1070
  4058  002438                     u1071:
  4059  002438  EF03  F012         	goto	l2148
  4060  00243C                     u1070:
  4061  00243C  0012               	return		;funcret
  4062  00243E                     __end_of_fputs:
  4063                           	callstack 0
  4064                           
  4065 ;; *************** function _fputc *****************
  4066 ;; Defined at:
  4067 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\nf_fputc.c"
  4068 ;; Parameters:    Size  Location     Type
  4069 ;;  c               2    0[COMRAM] int 
  4070 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  4071 ;;		 -> sprintf@f(11), 
  4072 ;; Auto vars:     Size  Location     Type
  4073 ;;		None
  4074 ;; Return value:  Size  Location     Type
  4075 ;;                  2    0[COMRAM] int 
  4076 ;; Registers used:
  4077 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4078 ;; Tracked objects:
  4079 ;;		On entry : 0/0
  4080 ;;		On exit  : 0/0
  4081 ;;		Unchanged: 0/0
  4082 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4083 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4084 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4085 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4086 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4087 ;;Total ram usage:        9 bytes
  4088 ;; Hardware stack levels used: 1
  4089 ;; Hardware stack levels required when called: 1
  4090 ;; This function calls:
  4091 ;;		_putch
  4092 ;; This function is called by:
  4093 ;;		_pad
  4094 ;;		_vfpfcnvrt
  4095 ;;		_fputs
  4096 ;; This function uses a non-reentrant model
  4097 ;;
  4098                           
  4099                           	psect	text20
  4100  001F34                     __ptext20:
  4101                           	callstack 0
  4102  001F34                     _fputc:
  4103                           	callstack 25
  4104  001F34  5003               	movf	fputc@fp^0,w,c
  4105  001F36  1004               	iorwf	(fputc@fp+1)^0,w,c
  4106  001F38  B4D8               	btfsc	status,2,c
  4107  001F3A  EFA1  F00F         	goto	u1031
  4108  001F3E  EFA3  F00F         	goto	u1030
  4109  001F42                     u1031:
  4110  001F42  EFAC  F00F         	goto	l2136
  4111  001F46                     u1030:
  4112  001F46  5003               	movf	fputc@fp^0,w,c
  4113  001F48  1004               	iorwf	(fputc@fp+1)^0,w,c
  4114  001F4A  A4D8               	btfss	status,2,c
  4115  001F4C  EFAA  F00F         	goto	u1041
  4116  001F50  EFAC  F00F         	goto	u1040
  4117  001F54                     u1041:
  4118  001F54  EFB1  F00F         	goto	l2138
  4119  001F58                     u1040:
  4120  001F58                     l2136:
  4121  001F58  5001               	movf	fputc@c^0,w,c
  4122  001F5A  ECDE  F013         	call	_putch
  4123  001F5E  EFFE  F00F         	goto	l1249
  4124  001F62                     l2138:
  4125  001F62  EE20 F009          	lfsr	2,9
  4126  001F66  5003               	movf	fputc@fp^0,w,c
  4127  001F68  26D9               	addwf	fsr2l,f,c
  4128  001F6A  5004               	movf	(fputc@fp+1)^0,w,c
  4129  001F6C  22DA               	addwfc	fsr2h,f,c
  4130  001F6E  50DE               	movf	postinc2,w,c
  4131  001F70  10DE               	iorwf	postinc2,w,c
  4132  001F72  B4D8               	btfsc	status,2,c
  4133  001F74  EFBE  F00F         	goto	u1051
  4134  001F78  EFC0  F00F         	goto	u1050
  4135  001F7C                     u1051:
  4136  001F7C  EFDB  F00F         	goto	l2142
  4137  001F80                     u1050:
  4138  001F80  EE20 F009          	lfsr	2,9
  4139  001F84  5003               	movf	fputc@fp^0,w,c
  4140  001F86  26D9               	addwf	fsr2l,f,c
  4141  001F88  5004               	movf	(fputc@fp+1)^0,w,c
  4142  001F8A  22DA               	addwfc	fsr2h,f,c
  4143  001F8C  EE10 F003          	lfsr	1,3
  4144  001F90  5003               	movf	fputc@fp^0,w,c
  4145  001F92  26E1               	addwf	fsr1l,f,c
  4146  001F94  5004               	movf	(fputc@fp+1)^0,w,c
  4147  001F96  22E2               	addwfc	fsr1h,f,c
  4148  001F98  50DE               	movf	postinc2,w,c
  4149  001F9A  5CE6               	subwf	postinc1,w,c
  4150  001F9C  50E6               	movf	postinc1,w,c
  4151  001F9E  0A80               	xorlw	128
  4152  001FA0  6E09               	movwf	(??_fputc+4)^0,c
  4153  001FA2  50DE               	movf	postinc2,w,c
  4154  001FA4  0A80               	xorlw	128
  4155  001FA6  5809               	subwfb	(??_fputc+4)^0,w,c
  4156  001FA8  B0D8               	btfsc	status,0,c
  4157  001FAA  EFD9  F00F         	goto	u1061
  4158  001FAE  EFDB  F00F         	goto	u1060
  4159  001FB2                     u1061:
  4160  001FB2  EFFE  F00F         	goto	l1249
  4161  001FB6                     u1060:
  4162  001FB6                     l2142:
  4163  001FB6  EE20 F003          	lfsr	2,3
  4164  001FBA  5003               	movf	fputc@fp^0,w,c
  4165  001FBC  26D9               	addwf	fsr2l,f,c
  4166  001FBE  5004               	movf	(fputc@fp+1)^0,w,c
  4167  001FC0  22DA               	addwfc	fsr2h,f,c
  4168  001FC2  CFDE F005          	movff	postinc2,??_fputc
  4169  001FC6  CFDD F006          	movff	postdec2,??_fputc+1
  4170  001FCA  C003  FFD9         	movff	fputc@fp,fsr2l
  4171  001FCE  C004  FFDA         	movff	fputc@fp+1,fsr2h
  4172  001FD2  CFDE F007          	movff	postinc2,??_fputc+2
  4173  001FD6  CFDD F008          	movff	postdec2,??_fputc+3
  4174  001FDA  5005               	movf	??_fputc^0,w,c
  4175  001FDC  2407               	addwf	(??_fputc+2)^0,w,c
  4176  001FDE  6ED9               	movwf	fsr2l,c
  4177  001FE0  5006               	movf	(??_fputc+1)^0,w,c
  4178  001FE2  2008               	addwfc	(??_fputc+3)^0,w,c
  4179  001FE4  6EDA               	movwf	fsr2h,c
  4180  001FE6  C001  FFDF         	movff	fputc@c,indf2
  4181  001FEA  EE20 F003          	lfsr	2,3
  4182  001FEE  5003               	movf	fputc@fp^0,w,c
  4183  001FF0  26D9               	addwf	fsr2l,f,c
  4184  001FF2  5004               	movf	(fputc@fp+1)^0,w,c
  4185  001FF4  22DA               	addwfc	fsr2h,f,c
  4186  001FF6  2ADE               	incf	postinc2,f,c
  4187  001FF8  0E00               	movlw	0
  4188  001FFA  22DD               	addwfc	postdec2,f,c
  4189  001FFC                     l1249:
  4190  001FFC  0012               	return		;funcret
  4191  001FFE                     __end_of_fputc:
  4192                           	callstack 0
  4193                           
  4194 ;; *************** function _putch *****************
  4195 ;; Defined at:
  4196 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\putch.c"
  4197 ;; Parameters:    Size  Location     Type
  4198 ;;  c               1    wreg     unsigned char 
  4199 ;; Auto vars:     Size  Location     Type
  4200 ;;  c               1    0[COMRAM] unsigned char 
  4201 ;; Return value:  Size  Location     Type
  4202 ;;                  1    wreg      void 
  4203 ;; Registers used:
  4204 ;;		wreg
  4205 ;; Tracked objects:
  4206 ;;		On entry : 0/0
  4207 ;;		On exit  : 0/0
  4208 ;;		Unchanged: 0/0
  4209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4210 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4211 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4212 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4213 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4214 ;;Total ram usage:        0 bytes
  4215 ;; Hardware stack levels used: 1
  4216 ;; This function calls:
  4217 ;;		Nothing
  4218 ;; This function is called by:
  4219 ;;		_fputc
  4220 ;; This function uses a non-reentrant model
  4221 ;;
  4222                           
  4223                           	psect	text21
  4224  0027BC                     __ptext21:
  4225                           	callstack 0
  4226  0027BC                     _putch:
  4227                           	callstack 25
  4228  0027BC  0012               	return		;funcret
  4229  0027BE                     __end_of_putch:
  4230                           	callstack 0
  4231                           
  4232 ;; *************** function _abs *****************
  4233 ;; Defined at:
  4234 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\abs.c"
  4235 ;; Parameters:    Size  Location     Type
  4236 ;;  a               2   18[COMRAM] int 
  4237 ;; Auto vars:     Size  Location     Type
  4238 ;;		None
  4239 ;; Return value:  Size  Location     Type
  4240 ;;                  2   18[COMRAM] int 
  4241 ;; Registers used:
  4242 ;;		wreg, status,2, status,0
  4243 ;; Tracked objects:
  4244 ;;		On entry : 0/0
  4245 ;;		On exit  : 0/0
  4246 ;;		Unchanged: 0/0
  4247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4248 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4249 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4250 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4251 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4252 ;;Total ram usage:        4 bytes
  4253 ;; Hardware stack levels used: 1
  4254 ;; This function calls:
  4255 ;;		Nothing
  4256 ;; This function is called by:
  4257 ;;		_dtoa
  4258 ;; This function uses a non-reentrant model
  4259 ;;
  4260                           
  4261                           	psect	text22
  4262  002502                     __ptext22:
  4263                           	callstack 0
  4264  002502                     _abs:
  4265                           	callstack 25
  4266  002502  BE14               	btfsc	(abs@a+1)^0,7,c
  4267  002504  EF8E  F012         	goto	u1280
  4268  002508  5014               	movf	(abs@a+1)^0,w,c
  4269  00250A  E106               	bnz	u1281
  4270  00250C  0413               	decf	abs@a^0,w,c
  4271  00250E  B0D8               	btfsc	status,0,c
  4272  002510  EF8C  F012         	goto	u1281
  4273  002514  EF8E  F012         	goto	u1280
  4274  002518                     u1281:
  4275  002518  EF9C  F012         	goto	l1234
  4276  00251C                     u1280:
  4277  00251C  C013  F015         	movff	abs@a,??_abs
  4278  002520  C014  F016         	movff	abs@a+1,??_abs+1
  4279  002524  1E15               	comf	??_abs^0,f,c
  4280  002526  1E16               	comf	(??_abs+1)^0,f,c
  4281  002528  4A15               	infsnz	??_abs^0,f,c
  4282  00252A  2A16               	incf	(??_abs+1)^0,f,c
  4283  00252C  C015  F013         	movff	??_abs,?_abs
  4284  002530  C016  F014         	movff	??_abs+1,?_abs+1
  4285  002534  EFA0  F012         	goto	l1237
  4286  002538                     l1234:
  4287  002538  C013  F013         	movff	abs@a,?_abs
  4288  00253C  C014  F014         	movff	abs@a+1,?_abs+1
  4289  002540                     l1237:
  4290  002540  0012               	return		;funcret
  4291  002542                     __end_of_abs:
  4292                           	callstack 0
  4293                           
  4294 ;; *************** function ___aomod *****************
  4295 ;; Defined at:
  4296 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\aomod.c"
  4297 ;; Parameters:    Size  Location     Type
  4298 ;;  dividend        8    0[COMRAM] long long 
  4299 ;;  divisor         8    8[COMRAM] long long 
  4300 ;; Auto vars:     Size  Location     Type
  4301 ;;  sign            1   17[COMRAM] unsigned char 
  4302 ;;  counter         1   16[COMRAM] unsigned char 
  4303 ;; Return value:  Size  Location     Type
  4304 ;;                  8    0[COMRAM] long long 
  4305 ;; Registers used:
  4306 ;;		wreg, status,2, status,0
  4307 ;; Tracked objects:
  4308 ;;		On entry : 0/0
  4309 ;;		On exit  : 0/0
  4310 ;;		Unchanged: 0/0
  4311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4312 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4313 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4314 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4315 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4316 ;;Total ram usage:       18 bytes
  4317 ;; Hardware stack levels used: 1
  4318 ;; This function calls:
  4319 ;;		Nothing
  4320 ;; This function is called by:
  4321 ;;		_dtoa
  4322 ;; This function uses a non-reentrant model
  4323 ;;
  4324                           
  4325                           	psect	text23
  4326  001C20                     __ptext23:
  4327                           	callstack 0
  4328  001C20                     ___aomod:
  4329                           	callstack 25
  4330  001C20  0E00               	movlw	0
  4331  001C22  6E12               	movwf	___aomod@sign^0,c
  4332  001C24  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
  4333  001C26  EF19  F00E         	goto	u1180
  4334  001C2A  EF17  F00E         	goto	u1181
  4335  001C2E                     u1181:
  4336  001C2E  EF2B  F00E         	goto	l2220
  4337  001C32                     u1180:
  4338  001C32  1E08               	comf	(___aomod@dividend+7)^0,f,c
  4339  001C34  1E07               	comf	(___aomod@dividend+6)^0,f,c
  4340  001C36  1E06               	comf	(___aomod@dividend+5)^0,f,c
  4341  001C38  1E05               	comf	(___aomod@dividend+4)^0,f,c
  4342  001C3A  1E04               	comf	(___aomod@dividend+3)^0,f,c
  4343  001C3C  1E03               	comf	(___aomod@dividend+2)^0,f,c
  4344  001C3E  1E02               	comf	(___aomod@dividend+1)^0,f,c
  4345  001C40  6C01               	negf	___aomod@dividend^0,c
  4346  001C42  0E00               	movlw	0
  4347  001C44  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  4348  001C46  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  4349  001C48  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  4350  001C4A  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  4351  001C4C  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  4352  001C4E  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  4353  001C50  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  4354  001C52  0E01               	movlw	1
  4355  001C54  6E12               	movwf	___aomod@sign^0,c
  4356  001C56                     l2220:
  4357  001C56  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
  4358  001C58  EF32  F00E         	goto	u1190
  4359  001C5C  EF30  F00E         	goto	u1191
  4360  001C60                     u1191:
  4361  001C60  EF42  F00E         	goto	l2224
  4362  001C64                     u1190:
  4363  001C64  1E10               	comf	(___aomod@divisor+7)^0,f,c
  4364  001C66  1E0F               	comf	(___aomod@divisor+6)^0,f,c
  4365  001C68  1E0E               	comf	(___aomod@divisor+5)^0,f,c
  4366  001C6A  1E0D               	comf	(___aomod@divisor+4)^0,f,c
  4367  001C6C  1E0C               	comf	(___aomod@divisor+3)^0,f,c
  4368  001C6E  1E0B               	comf	(___aomod@divisor+2)^0,f,c
  4369  001C70  1E0A               	comf	(___aomod@divisor+1)^0,f,c
  4370  001C72  6C09               	negf	___aomod@divisor^0,c
  4371  001C74  0E00               	movlw	0
  4372  001C76  220A               	addwfc	(___aomod@divisor+1)^0,f,c
  4373  001C78  220B               	addwfc	(___aomod@divisor+2)^0,f,c
  4374  001C7A  220C               	addwfc	(___aomod@divisor+3)^0,f,c
  4375  001C7C  220D               	addwfc	(___aomod@divisor+4)^0,f,c
  4376  001C7E  220E               	addwfc	(___aomod@divisor+5)^0,f,c
  4377  001C80  220F               	addwfc	(___aomod@divisor+6)^0,f,c
  4378  001C82  2210               	addwfc	(___aomod@divisor+7)^0,f,c
  4379  001C84                     l2224:
  4380  001C84  5009               	movf	___aomod@divisor^0,w,c
  4381  001C86  100A               	iorwf	(___aomod@divisor+1)^0,w,c
  4382  001C88  100B               	iorwf	(___aomod@divisor+2)^0,w,c
  4383  001C8A  100C               	iorwf	(___aomod@divisor+3)^0,w,c
  4384  001C8C  100D               	iorwf	(___aomod@divisor+4)^0,w,c
  4385  001C8E  100E               	iorwf	(___aomod@divisor+5)^0,w,c
  4386  001C90  100F               	iorwf	(___aomod@divisor+6)^0,w,c
  4387  001C92  1010               	iorwf	(___aomod@divisor+7)^0,w,c
  4388  001C94  B4D8               	btfsc	status,2,c
  4389  001C96  EF4F  F00E         	goto	u1201
  4390  001C9A  EF51  F00E         	goto	u1200
  4391  001C9E                     u1201:
  4392  001C9E  EF99  F00E         	goto	l2240
  4393  001CA2                     u1200:
  4394  001CA2  0E01               	movlw	1
  4395  001CA4  6E11               	movwf	___aomod@counter^0,c
  4396  001CA6  EF5F  F00E         	goto	l2230
  4397  001CAA                     l2228:
  4398  001CAA  90D8               	bcf	status,0,c
  4399  001CAC  3609               	rlcf	___aomod@divisor^0,f,c
  4400  001CAE  360A               	rlcf	(___aomod@divisor+1)^0,f,c
  4401  001CB0  360B               	rlcf	(___aomod@divisor+2)^0,f,c
  4402  001CB2  360C               	rlcf	(___aomod@divisor+3)^0,f,c
  4403  001CB4  360D               	rlcf	(___aomod@divisor+4)^0,f,c
  4404  001CB6  360E               	rlcf	(___aomod@divisor+5)^0,f,c
  4405  001CB8  360F               	rlcf	(___aomod@divisor+6)^0,f,c
  4406  001CBA  3610               	rlcf	(___aomod@divisor+7)^0,f,c
  4407  001CBC  2A11               	incf	___aomod@counter^0,f,c
  4408  001CBE                     l2230:
  4409  001CBE  AE10               	btfss	(___aomod@divisor+7)^0,7,c
  4410  001CC0  EF64  F00E         	goto	u1211
  4411  001CC4  EF66  F00E         	goto	u1210
  4412  001CC8                     u1211:
  4413  001CC8  EF55  F00E         	goto	l2228
  4414  001CCC                     u1210:
  4415  001CCC                     l2232:
  4416  001CCC  5009               	movf	___aomod@divisor^0,w,c
  4417  001CCE  5C01               	subwf	___aomod@dividend^0,w,c
  4418  001CD0  500A               	movf	(___aomod@divisor+1)^0,w,c
  4419  001CD2  5802               	subwfb	(___aomod@dividend+1)^0,w,c
  4420  001CD4  500B               	movf	(___aomod@divisor+2)^0,w,c
  4421  001CD6  5803               	subwfb	(___aomod@dividend+2)^0,w,c
  4422  001CD8  500C               	movf	(___aomod@divisor+3)^0,w,c
  4423  001CDA  5804               	subwfb	(___aomod@dividend+3)^0,w,c
  4424  001CDC  500D               	movf	(___aomod@divisor+4)^0,w,c
  4425  001CDE  5805               	subwfb	(___aomod@dividend+4)^0,w,c
  4426  001CE0  500E               	movf	(___aomod@divisor+5)^0,w,c
  4427  001CE2  5806               	subwfb	(___aomod@dividend+5)^0,w,c
  4428  001CE4  500F               	movf	(___aomod@divisor+6)^0,w,c
  4429  001CE6  5807               	subwfb	(___aomod@dividend+6)^0,w,c
  4430  001CE8  5010               	movf	(___aomod@divisor+7)^0,w,c
  4431  001CEA  5808               	subwfb	(___aomod@dividend+7)^0,w,c
  4432  001CEC  A0D8               	btfss	status,0,c
  4433  001CEE  EF7B  F00E         	goto	u1221
  4434  001CF2  EF7D  F00E         	goto	u1220
  4435  001CF6                     u1221:
  4436  001CF6  EF8D  F00E         	goto	l2236
  4437  001CFA                     u1220:
  4438  001CFA  5009               	movf	___aomod@divisor^0,w,c
  4439  001CFC  5E01               	subwf	___aomod@dividend^0,f,c
  4440  001CFE  500A               	movf	(___aomod@divisor+1)^0,w,c
  4441  001D00  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
  4442  001D02  500B               	movf	(___aomod@divisor+2)^0,w,c
  4443  001D04  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
  4444  001D06  500C               	movf	(___aomod@divisor+3)^0,w,c
  4445  001D08  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
  4446  001D0A  500D               	movf	(___aomod@divisor+4)^0,w,c
  4447  001D0C  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
  4448  001D0E  500E               	movf	(___aomod@divisor+5)^0,w,c
  4449  001D10  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
  4450  001D12  500F               	movf	(___aomod@divisor+6)^0,w,c
  4451  001D14  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
  4452  001D16  5010               	movf	(___aomod@divisor+7)^0,w,c
  4453  001D18  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
  4454  001D1A                     l2236:
  4455  001D1A  90D8               	bcf	status,0,c
  4456  001D1C  3210               	rrcf	(___aomod@divisor+7)^0,f,c
  4457  001D1E  320F               	rrcf	(___aomod@divisor+6)^0,f,c
  4458  001D20  320E               	rrcf	(___aomod@divisor+5)^0,f,c
  4459  001D22  320D               	rrcf	(___aomod@divisor+4)^0,f,c
  4460  001D24  320C               	rrcf	(___aomod@divisor+3)^0,f,c
  4461  001D26  320B               	rrcf	(___aomod@divisor+2)^0,f,c
  4462  001D28  320A               	rrcf	(___aomod@divisor+1)^0,f,c
  4463  001D2A  3209               	rrcf	___aomod@divisor^0,f,c
  4464  001D2C  2E11               	decfsz	___aomod@counter^0,f,c
  4465  001D2E  EF66  F00E         	goto	l2232
  4466  001D32                     l2240:
  4467  001D32  5012               	movf	___aomod@sign^0,w,c
  4468  001D34  B4D8               	btfsc	status,2,c
  4469  001D36  EF9F  F00E         	goto	u1231
  4470  001D3A  EFA1  F00E         	goto	u1230
  4471  001D3E                     u1231:
  4472  001D3E  EFB1  F00E         	goto	l2244
  4473  001D42                     u1230:
  4474  001D42  1E08               	comf	(___aomod@dividend+7)^0,f,c
  4475  001D44  1E07               	comf	(___aomod@dividend+6)^0,f,c
  4476  001D46  1E06               	comf	(___aomod@dividend+5)^0,f,c
  4477  001D48  1E05               	comf	(___aomod@dividend+4)^0,f,c
  4478  001D4A  1E04               	comf	(___aomod@dividend+3)^0,f,c
  4479  001D4C  1E03               	comf	(___aomod@dividend+2)^0,f,c
  4480  001D4E  1E02               	comf	(___aomod@dividend+1)^0,f,c
  4481  001D50  6C01               	negf	___aomod@dividend^0,c
  4482  001D52  0E00               	movlw	0
  4483  001D54  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  4484  001D56  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  4485  001D58  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  4486  001D5A  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  4487  001D5C  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  4488  001D5E  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  4489  001D60  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  4490  001D62                     l2244:
  4491  001D62  C001  F001         	movff	___aomod@dividend,?___aomod
  4492  001D66  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  4493  001D6A  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  4494  001D6E  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  4495  001D72  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  4496  001D76  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  4497  001D7A  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  4498  001D7E  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  4499  001D82  0012               	return		;funcret
  4500  001D84                     __end_of___aomod:
  4501                           	callstack 0
  4502                           
  4503 ;; *************** function ___aodiv *****************
  4504 ;; Defined at:
  4505 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\aodiv.c"
  4506 ;; Parameters:    Size  Location     Type
  4507 ;;  dividend        8    0[COMRAM] long long 
  4508 ;;  divisor         8    8[COMRAM] long long 
  4509 ;; Auto vars:     Size  Location     Type
  4510 ;;  quotient        8   18[COMRAM] long long 
  4511 ;;  sign            1   17[COMRAM] unsigned char 
  4512 ;;  counter         1   16[COMRAM] unsigned char 
  4513 ;; Return value:  Size  Location     Type
  4514 ;;                  8    0[COMRAM] long long 
  4515 ;; Registers used:
  4516 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4517 ;; Tracked objects:
  4518 ;;		On entry : 0/0
  4519 ;;		On exit  : 0/0
  4520 ;;		Unchanged: 0/0
  4521 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4522 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4523 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4524 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4525 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4526 ;;Total ram usage:       26 bytes
  4527 ;; Hardware stack levels used: 1
  4528 ;; This function calls:
  4529 ;;		Nothing
  4530 ;; This function is called by:
  4531 ;;		_dtoa
  4532 ;; This function uses a non-reentrant model
  4533 ;;
  4534                           
  4535                           	psect	text24
  4536  001A98                     __ptext24:
  4537                           	callstack 0
  4538  001A98                     ___aodiv:
  4539                           	callstack 25
  4540  001A98  0E00               	movlw	0
  4541  001A9A  6E12               	movwf	___aodiv@sign^0,c
  4542  001A9C  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
  4543  001A9E  EF55  F00D         	goto	u1110
  4544  001AA2  EF53  F00D         	goto	u1111
  4545  001AA6                     u1111:
  4546  001AA6  EF67  F00D         	goto	l2176
  4547  001AAA                     u1110:
  4548  001AAA  1E10               	comf	(___aodiv@divisor+7)^0,f,c
  4549  001AAC  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
  4550  001AAE  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
  4551  001AB0  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
  4552  001AB2  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
  4553  001AB4  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
  4554  001AB6  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
  4555  001AB8  6C09               	negf	___aodiv@divisor^0,c
  4556  001ABA  0E00               	movlw	0
  4557  001ABC  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
  4558  001ABE  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
  4559  001AC0  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
  4560  001AC2  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
  4561  001AC4  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
  4562  001AC6  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
  4563  001AC8  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
  4564  001ACA  0E01               	movlw	1
  4565  001ACC  6E12               	movwf	___aodiv@sign^0,c
  4566  001ACE                     l2176:
  4567  001ACE  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
  4568  001AD0  EF6E  F00D         	goto	u1120
  4569  001AD4  EF6C  F00D         	goto	u1121
  4570  001AD8                     u1121:
  4571  001AD8  EF80  F00D         	goto	l2182
  4572  001ADC                     u1120:
  4573  001ADC  1E08               	comf	(___aodiv@dividend+7)^0,f,c
  4574  001ADE  1E07               	comf	(___aodiv@dividend+6)^0,f,c
  4575  001AE0  1E06               	comf	(___aodiv@dividend+5)^0,f,c
  4576  001AE2  1E05               	comf	(___aodiv@dividend+4)^0,f,c
  4577  001AE4  1E04               	comf	(___aodiv@dividend+3)^0,f,c
  4578  001AE6  1E03               	comf	(___aodiv@dividend+2)^0,f,c
  4579  001AE8  1E02               	comf	(___aodiv@dividend+1)^0,f,c
  4580  001AEA  6C01               	negf	___aodiv@dividend^0,c
  4581  001AEC  0E00               	movlw	0
  4582  001AEE  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
  4583  001AF0  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
  4584  001AF2  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
  4585  001AF4  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
  4586  001AF6  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
  4587  001AF8  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
  4588  001AFA  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
  4589  001AFC  0E01               	movlw	1
  4590  001AFE  1A12               	xorwf	___aodiv@sign^0,f,c
  4591  001B00                     l2182:
  4592  001B00  EE20  F013         	lfsr	2,___aodiv@quotient
  4593  001B04  0E07               	movlw	7
  4594  001B06                     u1131:
  4595  001B06  6ADE               	clrf	postinc2,c
  4596  001B08  06E8               	decf	wreg,f,c
  4597  001B0A  E2FD               	bc	u1131
  4598  001B0C  5009               	movf	___aodiv@divisor^0,w,c
  4599  001B0E  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
  4600  001B10  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
  4601  001B12  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
  4602  001B14  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
  4603  001B16  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
  4604  001B18  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
  4605  001B1A  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
  4606  001B1C  B4D8               	btfsc	status,2,c
  4607  001B1E  EF93  F00D         	goto	u1141
  4608  001B22  EF95  F00D         	goto	u1140
  4609  001B26                     u1141:
  4610  001B26  EFE7  F00D         	goto	l2204
  4611  001B2A                     u1140:
  4612  001B2A  0E01               	movlw	1
  4613  001B2C  6E11               	movwf	___aodiv@counter^0,c
  4614  001B2E  EFA3  F00D         	goto	l2190
  4615  001B32                     l2188:
  4616  001B32  90D8               	bcf	status,0,c
  4617  001B34  3609               	rlcf	___aodiv@divisor^0,f,c
  4618  001B36  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
  4619  001B38  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
  4620  001B3A  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
  4621  001B3C  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
  4622  001B3E  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
  4623  001B40  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
  4624  001B42  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
  4625  001B44  2A11               	incf	___aodiv@counter^0,f,c
  4626  001B46                     l2190:
  4627  001B46  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
  4628  001B48  EFA8  F00D         	goto	u1151
  4629  001B4C  EFAA  F00D         	goto	u1150
  4630  001B50                     u1151:
  4631  001B50  EF99  F00D         	goto	l2188
  4632  001B54                     u1150:
  4633  001B54                     l2192:
  4634  001B54  90D8               	bcf	status,0,c
  4635  001B56  3613               	rlcf	___aodiv@quotient^0,f,c
  4636  001B58  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
  4637  001B5A  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
  4638  001B5C  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
  4639  001B5E  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
  4640  001B60  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
  4641  001B62  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
  4642  001B64  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
  4643  001B66  5009               	movf	___aodiv@divisor^0,w,c
  4644  001B68  5C01               	subwf	___aodiv@dividend^0,w,c
  4645  001B6A  500A               	movf	(___aodiv@divisor+1)^0,w,c
  4646  001B6C  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
  4647  001B6E  500B               	movf	(___aodiv@divisor+2)^0,w,c
  4648  001B70  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
  4649  001B72  500C               	movf	(___aodiv@divisor+3)^0,w,c
  4650  001B74  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
  4651  001B76  500D               	movf	(___aodiv@divisor+4)^0,w,c
  4652  001B78  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
  4653  001B7A  500E               	movf	(___aodiv@divisor+5)^0,w,c
  4654  001B7C  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
  4655  001B7E  500F               	movf	(___aodiv@divisor+6)^0,w,c
  4656  001B80  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
  4657  001B82  5010               	movf	(___aodiv@divisor+7)^0,w,c
  4658  001B84  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
  4659  001B86  A0D8               	btfss	status,0,c
  4660  001B88  EFC8  F00D         	goto	u1161
  4661  001B8C  EFCA  F00D         	goto	u1160
  4662  001B90                     u1161:
  4663  001B90  EFDB  F00D         	goto	l2200
  4664  001B94                     u1160:
  4665  001B94  5009               	movf	___aodiv@divisor^0,w,c
  4666  001B96  5E01               	subwf	___aodiv@dividend^0,f,c
  4667  001B98  500A               	movf	(___aodiv@divisor+1)^0,w,c
  4668  001B9A  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
  4669  001B9C  500B               	movf	(___aodiv@divisor+2)^0,w,c
  4670  001B9E  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
  4671  001BA0  500C               	movf	(___aodiv@divisor+3)^0,w,c
  4672  001BA2  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
  4673  001BA4  500D               	movf	(___aodiv@divisor+4)^0,w,c
  4674  001BA6  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
  4675  001BA8  500E               	movf	(___aodiv@divisor+5)^0,w,c
  4676  001BAA  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
  4677  001BAC  500F               	movf	(___aodiv@divisor+6)^0,w,c
  4678  001BAE  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
  4679  001BB0  5010               	movf	(___aodiv@divisor+7)^0,w,c
  4680  001BB2  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
  4681  001BB4  8013               	bsf	___aodiv@quotient^0,0,c
  4682  001BB6                     l2200:
  4683  001BB6  90D8               	bcf	status,0,c
  4684  001BB8  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
  4685  001BBA  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
  4686  001BBC  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
  4687  001BBE  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
  4688  001BC0  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
  4689  001BC2  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
  4690  001BC4  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
  4691  001BC6  3209               	rrcf	___aodiv@divisor^0,f,c
  4692  001BC8  2E11               	decfsz	___aodiv@counter^0,f,c
  4693  001BCA  EFAA  F00D         	goto	l2192
  4694  001BCE                     l2204:
  4695  001BCE  5012               	movf	___aodiv@sign^0,w,c
  4696  001BD0  B4D8               	btfsc	status,2,c
  4697  001BD2  EFED  F00D         	goto	u1171
  4698  001BD6  EFEF  F00D         	goto	u1170
  4699  001BDA                     u1171:
  4700  001BDA  EFFF  F00D         	goto	l2208
  4701  001BDE                     u1170:
  4702  001BDE  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
  4703  001BE0  1E19               	comf	(___aodiv@quotient+6)^0,f,c
  4704  001BE2  1E18               	comf	(___aodiv@quotient+5)^0,f,c
  4705  001BE4  1E17               	comf	(___aodiv@quotient+4)^0,f,c
  4706  001BE6  1E16               	comf	(___aodiv@quotient+3)^0,f,c
  4707  001BE8  1E15               	comf	(___aodiv@quotient+2)^0,f,c
  4708  001BEA  1E14               	comf	(___aodiv@quotient+1)^0,f,c
  4709  001BEC  6C13               	negf	___aodiv@quotient^0,c
  4710  001BEE  0E00               	movlw	0
  4711  001BF0  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
  4712  001BF2  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
  4713  001BF4  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
  4714  001BF6  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
  4715  001BF8  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
  4716  001BFA  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
  4717  001BFC  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
  4718  001BFE                     l2208:
  4719  001BFE  C013  F001         	movff	___aodiv@quotient,?___aodiv
  4720  001C02  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  4721  001C06  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  4722  001C0A  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  4723  001C0E  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  4724  001C12  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  4725  001C16  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  4726  001C1A  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  4727  001C1E  0012               	return		;funcret
  4728  001C20                     __end_of___aodiv:
  4729                           	callstack 0
  4730                           
  4731 ;; *************** function _sendStringSerial4 *****************
  4732 ;; Defined at:
  4733 ;;		line 36 in file "serial.c"
  4734 ;; Parameters:    Size  Location     Type
  4735 ;;  string          2    1[COMRAM] PTR unsigned char 
  4736 ;;		 -> voltage_display@buf(80), color_predict@buf(100), color_display@buf(100), 
  4737 ;; Auto vars:     Size  Location     Type
  4738 ;;		None
  4739 ;; Return value:  Size  Location     Type
  4740 ;;                  1    wreg      void 
  4741 ;; Registers used:
  4742 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4743 ;; Tracked objects:
  4744 ;;		On entry : 0/0
  4745 ;;		On exit  : 0/0
  4746 ;;		Unchanged: 0/0
  4747 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4748 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4749 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4750 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4751 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4752 ;;Total ram usage:        2 bytes
  4753 ;; Hardware stack levels used: 1
  4754 ;; Hardware stack levels required when called: 1
  4755 ;; This function calls:
  4756 ;;		_sendCharSerial4
  4757 ;; This function is called by:
  4758 ;;		_color_display
  4759 ;;		_color_predict
  4760 ;;		_voltage_display
  4761 ;; This function uses a non-reentrant model
  4762 ;;
  4763                           
  4764                           	psect	text25
  4765  0025E4                     __ptext25:
  4766                           	callstack 0
  4767  0025E4                     _sendStringSerial4:
  4768                           	callstack 28
  4769  0025E4                     
  4770                           ;serial.c: 38:     while(*string != 0){
  4771  0025E4  EFFD  F012         	goto	l2496
  4772  0025E8                     l2492:
  4773                           
  4774                           ;serial.c: 39:   sendCharSerial4(*string++);}
  4775  0025E8  C002  FFD9         	movff	sendStringSerial4@string,fsr2l
  4776  0025EC  C003  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  4777  0025F0  50DF               	movf	indf2,w,c
  4778  0025F2  ECBD  F013         	call	_sendCharSerial4
  4779  0025F6  4A02               	infsnz	sendStringSerial4@string^0,f,c
  4780  0025F8  2A03               	incf	(sendStringSerial4@string+1)^0,f,c
  4781  0025FA                     l2496:
  4782                           
  4783                           ;serial.c: 38:     while(*string != 0){
  4784  0025FA  C002  FFD9         	movff	sendStringSerial4@string,fsr2l
  4785  0025FE  C003  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  4786  002602  50DF               	movf	indf2,w,c
  4787  002604  A4D8               	btfss	status,2,c
  4788  002606  EF07  F013         	goto	u1521
  4789  00260A  EF09  F013         	goto	u1520
  4790  00260E                     u1521:
  4791  00260E  EFF4  F012         	goto	l2492
  4792  002612                     u1520:
  4793  002612  0012               	return		;funcret
  4794  002614                     __end_of_sendStringSerial4:
  4795                           	callstack 0
  4796                           
  4797 ;; *************** function _sendCharSerial4 *****************
  4798 ;; Defined at:
  4799 ;;		line 29 in file "serial.c"
  4800 ;; Parameters:    Size  Location     Type
  4801 ;;  charToSend      1    wreg     unsigned char 
  4802 ;; Auto vars:     Size  Location     Type
  4803 ;;  charToSend      1    0[COMRAM] unsigned char 
  4804 ;; Return value:  Size  Location     Type
  4805 ;;                  1    wreg      void 
  4806 ;; Registers used:
  4807 ;;		wreg
  4808 ;; Tracked objects:
  4809 ;;		On entry : 0/0
  4810 ;;		On exit  : 0/0
  4811 ;;		Unchanged: 0/0
  4812 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4813 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4814 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4815 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4816 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4817 ;;Total ram usage:        1 bytes
  4818 ;; Hardware stack levels used: 1
  4819 ;; This function calls:
  4820 ;;		Nothing
  4821 ;; This function is called by:
  4822 ;;		_sendStringSerial4
  4823 ;; This function uses a non-reentrant model
  4824 ;;
  4825                           
  4826                           	psect	text26
  4827  00277A                     __ptext26:
  4828                           	callstack 0
  4829  00277A                     _sendCharSerial4:
  4830                           	callstack 28
  4831                           
  4832                           ;incstack = 0
  4833                           ;sendCharSerial4@charToSend stored from wreg
  4834  00277A  6E01               	movwf	sendCharSerial4@charToSend^0,c
  4835  00277C                     l332:
  4836  00277C  010E               	movlb	14	; () banked
  4837  00277E  A537               	btfss	55,2,b	;volatile
  4838  002780  EFC4  F013         	goto	u1501
  4839  002784  EFC6  F013         	goto	u1500
  4840  002788                     u1501:
  4841  002788  EFBE  F013         	goto	l332
  4842  00278C                     u1500:
  4843  00278C                     
  4844                           ; BSR set to: 14
  4845                           ;serial.c: 31:     TX4REG = charToSend;
  4846  00278C  C001  FEE4         	movff	sendCharSerial4@charToSend,3812	;volatile
  4847  002790                     
  4848                           ; BSR set to: 14
  4849  002790  0012               	return		;funcret
  4850  002792                     __end_of_sendCharSerial4:
  4851                           	callstack 0
  4852                           
  4853 ;; *************** function _color_click_init *****************
  4854 ;; Defined at:
  4855 ;;		line 9 in file "color.c"
  4856 ;; Parameters:    Size  Location     Type
  4857 ;;		None
  4858 ;; Auto vars:     Size  Location     Type
  4859 ;;		None
  4860 ;; Return value:  Size  Location     Type
  4861 ;;                  1    wreg      void 
  4862 ;; Registers used:
  4863 ;;		wreg, status,2, status,0, cstack
  4864 ;; Tracked objects:
  4865 ;;		On entry : 0/0
  4866 ;;		On exit  : 0/0
  4867 ;;		Unchanged: 0/0
  4868 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4869 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4870 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4871 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4872 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4873 ;;Total ram usage:        1 bytes
  4874 ;; Hardware stack levels used: 1
  4875 ;; Hardware stack levels required when called: 3
  4876 ;; This function calls:
  4877 ;;		_I2C_2_Master_Init
  4878 ;;		_color_writetoaddr
  4879 ;; This function is called by:
  4880 ;;		_main
  4881 ;; This function uses a non-reentrant model
  4882 ;;
  4883                           
  4884                           	psect	text27
  4885  0025B0                     __ptext27:
  4886                           	callstack 0
  4887  0025B0                     _color_click_init:
  4888                           	callstack 27
  4889  0025B0                     
  4890                           ;color.c: 12:     I2C_2_Master_Init();
  4891  0025B0  EC62  F013         	call	_I2C_2_Master_Init	;wreg free
  4892  0025B4                     
  4893                           ;color.c: 15:   color_writetoaddr(0x00, 0x01);
  4894  0025B4  0E01               	movlw	1
  4895  0025B6  6E03               	movwf	color_writetoaddr@value^0,c
  4896  0025B8  0E00               	movlw	0
  4897  0025BA  EC9E  F013         	call	_color_writetoaddr
  4898  0025BE                     
  4899                           ;color.c: 16:     _delay((unsigned long)((3)*(64000000/4000.0)));
  4900  0025BE  0E3F               	movlw	63
  4901  0025C0  6E05               	movwf	??_color_click_init^0,c
  4902  0025C2  0E55               	movlw	85
  4903  0025C4                     u2117:
  4904  0025C4  2EE8               	decfsz	wreg,f,c
  4905  0025C6  D7FE               	bra	u2117
  4906  0025C8  2E05               	decfsz	??_color_click_init^0,f,c
  4907  0025CA  D7FC               	bra	u2117
  4908  0025CC  F000               	nop	
  4909  0025CE                     
  4910                           ;color.c: 19:  color_writetoaddr(0x00, 0x03);
  4911  0025CE  0E03               	movlw	3
  4912  0025D0  6E03               	movwf	color_writetoaddr@value^0,c
  4913  0025D2  0E00               	movlw	0
  4914  0025D4  EC9E  F013         	call	_color_writetoaddr
  4915  0025D8                     
  4916                           ;color.c: 22:  color_writetoaddr(0x01, 0xD5);
  4917  0025D8  0ED5               	movlw	213
  4918  0025DA  6E03               	movwf	color_writetoaddr@value^0,c
  4919  0025DC  0E01               	movlw	1
  4920  0025DE  EC9E  F013         	call	_color_writetoaddr
  4921  0025E2  0012               	return		;funcret
  4922  0025E4                     __end_of_color_click_init:
  4923                           	callstack 0
  4924                           
  4925 ;; *************** function _color_writetoaddr *****************
  4926 ;; Defined at:
  4927 ;;		line 25 in file "color.c"
  4928 ;; Parameters:    Size  Location     Type
  4929 ;;  address         1    wreg     unsigned char 
  4930 ;;  value           1    2[COMRAM] unsigned char 
  4931 ;; Auto vars:     Size  Location     Type
  4932 ;;  address         1    3[COMRAM] unsigned char 
  4933 ;; Return value:  Size  Location     Type
  4934 ;;                  1    wreg      void 
  4935 ;; Registers used:
  4936 ;;		wreg, status,2, status,0, cstack
  4937 ;; Tracked objects:
  4938 ;;		On entry : 0/0
  4939 ;;		On exit  : 0/0
  4940 ;;		Unchanged: 0/0
  4941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4942 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4943 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4944 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4945 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4946 ;;Total ram usage:        2 bytes
  4947 ;; Hardware stack levels used: 1
  4948 ;; Hardware stack levels required when called: 2
  4949 ;; This function calls:
  4950 ;;		_I2C_2_Master_Start
  4951 ;;		_I2C_2_Master_Stop
  4952 ;;		_I2C_2_Master_Write
  4953 ;; This function is called by:
  4954 ;;		_color_click_init
  4955 ;; This function uses a non-reentrant model
  4956 ;;
  4957                           
  4958                           	psect	text28
  4959  00273C                     __ptext28:
  4960                           	callstack 0
  4961  00273C                     _color_writetoaddr:
  4962                           	callstack 27
  4963                           
  4964                           ;incstack = 0
  4965                           ;color_writetoaddr@address stored from wreg
  4966  00273C  6E04               	movwf	color_writetoaddr@address^0,c
  4967  00273E                     
  4968                           ;color.c: 26:     I2C_2_Master_Start();
  4969  00273E  ECD4  F013         	call	_I2C_2_Master_Start	;wreg free
  4970                           
  4971                           ;color.c: 27:     I2C_2_Master_Write(0x52 | 0x00);
  4972  002742  0E52               	movlw	82
  4973  002744  ECC9  F013         	call	_I2C_2_Master_Write
  4974                           
  4975                           ;color.c: 28:     I2C_2_Master_Write(0x80 | address);
  4976  002748  5004               	movf	color_writetoaddr@address^0,w,c
  4977  00274A  0980               	iorlw	128
  4978  00274C  ECC9  F013         	call	_I2C_2_Master_Write
  4979                           
  4980                           ;color.c: 29:     I2C_2_Master_Write(value);
  4981  002750  5003               	movf	color_writetoaddr@value^0,w,c
  4982  002752  ECC9  F013         	call	_I2C_2_Master_Write
  4983                           
  4984                           ;color.c: 30:     I2C_2_Master_Stop();
  4985  002756  ECCF  F013         	call	_I2C_2_Master_Stop	;wreg free
  4986  00275A  0012               	return		;funcret
  4987  00275C                     __end_of_color_writetoaddr:
  4988                           	callstack 0
  4989                           
  4990 ;; *************** function _I2C_2_Master_Init *****************
  4991 ;; Defined at:
  4992 ;;		line 4 in file "i2c.c"
  4993 ;; Parameters:    Size  Location     Type
  4994 ;;		None
  4995 ;; Auto vars:     Size  Location     Type
  4996 ;;		None
  4997 ;; Return value:  Size  Location     Type
  4998 ;;                  1    wreg      void 
  4999 ;; Registers used:
  5000 ;;		wreg, status,2
  5001 ;; Tracked objects:
  5002 ;;		On entry : 0/0
  5003 ;;		On exit  : 0/0
  5004 ;;		Unchanged: 0/0
  5005 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5006 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5007 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5008 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5009 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5010 ;;Total ram usage:        0 bytes
  5011 ;; Hardware stack levels used: 1
  5012 ;; This function calls:
  5013 ;;		Nothing
  5014 ;; This function is called by:
  5015 ;;		_color_click_init
  5016 ;;		_main
  5017 ;; This function uses a non-reentrant model
  5018 ;;
  5019                           
  5020                           	psect	text29
  5021  0026C4                     __ptext29:
  5022                           	callstack 0
  5023  0026C4                     _I2C_2_Master_Init:
  5024                           	callstack 29
  5025  0026C4                     
  5026                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  5027  0026C4  010E               	movlb	14	; () banked
  5028  0026C6  51D9               	movf	217,w,b	;volatile
  5029  0026C8  0BF0               	andlw	-16
  5030  0026CA  0908               	iorlw	8
  5031  0026CC  6FD9               	movwf	217,b	;volatile
  5032  0026CE                     
  5033                           ; BSR set to: 14
  5034                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  5035  0026CE  8BD9               	bsf	217,5,b	;volatile
  5036                           
  5037                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  5038  0026D0  0E9F               	movlw	159
  5039  0026D2  6FD6               	movwf	214,b	;volatile
  5040  0026D4                     
  5041                           ; BSR set to: 14
  5042                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  5043  0026D4  8A84               	bsf	132,5,c	;volatile
  5044  0026D6                     
  5045                           ; BSR set to: 14
  5046                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  5047  0026D6  8C84               	bsf	132,6,c	;volatile
  5048  0026D8                     
  5049                           ; BSR set to: 14
  5050                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  5051  0026D8  9BA7               	bcf	167,5,b	;volatile
  5052  0026DA                     
  5053                           ; BSR set to: 14
  5054                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  5055  0026DA  9DA7               	bcf	167,6,b	;volatile
  5056                           
  5057                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  5058  0026DC  0E1D               	movlw	29
  5059  0026DE  6F1D               	movwf	29,b	;volatile
  5060                           
  5061                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  5062  0026E0  0E1E               	movlw	30
  5063  0026E2  6F1C               	movwf	28,b	;volatile
  5064                           
  5065                           ;i2c.c: 18:   RD5PPS=0x1C;
  5066  0026E4  0E1C               	movlw	28
  5067  0026E6  6F6F               	movwf	111,b	;volatile
  5068                           
  5069                           ;i2c.c: 19:   RD6PPS=0x1B;
  5070  0026E8  0E1B               	movlw	27
  5071  0026EA  6F70               	movwf	112,b	;volatile
  5072  0026EC                     
  5073                           ; BSR set to: 14
  5074  0026EC  0012               	return		;funcret
  5075  0026EE                     __end_of_I2C_2_Master_Init:
  5076                           	callstack 0
  5077                           
  5078 ;; *************** function _LED_C *****************
  5079 ;; Defined at:
  5080 ;;		line 106 in file "color.c"
  5081 ;; Parameters:    Size  Location     Type
  5082 ;;  m               2   13[COMRAM] PTR struct color_rgb
  5083 ;;		 -> main@rgb(8), 
  5084 ;; Auto vars:     Size  Location     Type
  5085 ;;		None
  5086 ;; Return value:  Size  Location     Type
  5087 ;;                  1    wreg      void 
  5088 ;; Registers used:
  5089 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5090 ;; Tracked objects:
  5091 ;;		On entry : 0/0
  5092 ;;		On exit  : 0/0
  5093 ;;		Unchanged: 0/0
  5094 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5095 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5096 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5097 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5098 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5099 ;;Total ram usage:        4 bytes
  5100 ;; Hardware stack levels used: 1
  5101 ;; Hardware stack levels required when called: 4
  5102 ;; This function calls:
  5103 ;;		_read_color
  5104 ;; This function is called by:
  5105 ;;		_main
  5106 ;; This function uses a non-reentrant model
  5107 ;;
  5108                           
  5109                           	psect	text30
  5110  002698                     __ptext30:
  5111                           	callstack 0
  5112  002698                     _LED_C:
  5113                           	callstack 26
  5114  002698                     
  5115                           ;color.c: 106: void LED_C(struct color_rgb *m);color.c: 107: {;color.c: 108:     LATGbit
      +                          s.LATG1 = 1;
  5116  002698  827F               	bsf	127,1,c	;volatile
  5117                           
  5118                           ;color.c: 109:     LATFbits.LATF7 = 1;
  5119  00269A  8E7E               	bsf	126,7,c	;volatile
  5120                           
  5121                           ;color.c: 110:     LATAbits.LATA4 = 1;
  5122  00269C  8879               	bsf	121,4,c	;volatile
  5123  00269E                     
  5124                           ;color.c: 111:     _delay((unsigned long)((200)*(64000000/4000.0)));
  5125  00269E  0E11               	movlw	17
  5126  0026A0  6E11               	movwf	(??_LED_C+1)^0,c
  5127  0026A2  0E3C               	movlw	60
  5128  0026A4  6E10               	movwf	??_LED_C^0,c
  5129  0026A6  0ECB               	movlw	203
  5130  0026A8                     u2127:
  5131  0026A8  2EE8               	decfsz	wreg,f,c
  5132  0026AA  D7FE               	bra	u2127
  5133  0026AC  2E10               	decfsz	??_LED_C^0,f,c
  5134  0026AE  D7FC               	bra	u2127
  5135  0026B0  2E11               	decfsz	(??_LED_C+1)^0,f,c
  5136  0026B2  D7FA               	bra	u2127
  5137  0026B4  F000               	nop	
  5138  0026B6                     
  5139                           ;color.c: 112:     read_color(m);
  5140  0026B6  C00E  F00C         	movff	LED_C@m,read_color@m
  5141  0026BA  C00F  F00D         	movff	LED_C@m+1,read_color@m+1
  5142  0026BE  EC05  F011         	call	_read_color	;wreg free
  5143  0026C2  0012               	return		;funcret
  5144  0026C4                     __end_of_LED_C:
  5145                           	callstack 0
  5146                           
  5147 ;; *************** function _read_color *****************
  5148 ;; Defined at:
  5149 ;;		line 89 in file "color.c"
  5150 ;; Parameters:    Size  Location     Type
  5151 ;;  m               2   11[COMRAM] PTR struct color_rgb
  5152 ;;		 -> main@rgb(8), 
  5153 ;; Auto vars:     Size  Location     Type
  5154 ;;		None
  5155 ;; Return value:  Size  Location     Type
  5156 ;;                  1    wreg      void 
  5157 ;; Registers used:
  5158 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5159 ;; Tracked objects:
  5160 ;;		On entry : 0/0
  5161 ;;		On exit  : 0/0
  5162 ;;		Unchanged: 0/0
  5163 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5164 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5165 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5166 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5167 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5168 ;;Total ram usage:        2 bytes
  5169 ;; Hardware stack levels used: 1
  5170 ;; Hardware stack levels required when called: 3
  5171 ;; This function calls:
  5172 ;;		_color_read_Blue
  5173 ;;		_color_read_Clear
  5174 ;;		_color_read_Green
  5175 ;;		_color_read_Red
  5176 ;; This function is called by:
  5177 ;;		_LED_R
  5178 ;;		_LED_C
  5179 ;;		_LED_B
  5180 ;;		_LED_G
  5181 ;;		_detect_color
  5182 ;; This function uses a non-reentrant model
  5183 ;;
  5184                           
  5185                           	psect	text31
  5186  00220A                     __ptext31:
  5187                           	callstack 0
  5188  00220A                     _read_color:
  5189                           	callstack 26
  5190  00220A                     
  5191                           ;color.c: 89: void read_color (struct color_rgb *m);color.c: 90: {;color.c: 91:     m->R
      +                           = color_read_Red();
  5192  00220A  EC5D  F011         	call	_color_read_Red	;wreg free
  5193  00220E  C00C  FFD9         	movff	read_color@m,fsr2l
  5194  002212  C00D  FFDA         	movff	read_color@m+1,fsr2h
  5195  002216  C005  FFDE         	movff	?_color_read_Red,postinc2
  5196  00221A  C006  FFDD         	movff	?_color_read_Red+1,postdec2
  5197                           
  5198                           ;color.c: 92:     m->B = color_read_Blue();
  5199  00221E  ECD5  F011         	call	_color_read_Blue	;wreg free
  5200  002222  EE20 F004          	lfsr	2,4
  5201  002226  500C               	movf	read_color@m^0,w,c
  5202  002228  26D9               	addwf	fsr2l,f,c
  5203  00222A  500D               	movf	(read_color@m+1)^0,w,c
  5204  00222C  22DA               	addwfc	fsr2h,f,c
  5205  00222E  C005  FFDE         	movff	?_color_read_Blue,postinc2
  5206  002232  C006  FFDD         	movff	?_color_read_Blue+1,postdec2
  5207                           
  5208                           ;color.c: 93:     m->G = color_read_Green();
  5209  002236  EC85  F011         	call	_color_read_Green	;wreg free
  5210  00223A  EE20 F002          	lfsr	2,2
  5211  00223E  500C               	movf	read_color@m^0,w,c
  5212  002240  26D9               	addwf	fsr2l,f,c
  5213  002242  500D               	movf	(read_color@m+1)^0,w,c
  5214  002244  22DA               	addwfc	fsr2h,f,c
  5215  002246  C005  FFDE         	movff	?_color_read_Green,postinc2
  5216  00224A  C006  FFDD         	movff	?_color_read_Green+1,postdec2
  5217                           
  5218                           ;color.c: 94:     m->C = color_read_Clear();
  5219  00224E  ECAD  F011         	call	_color_read_Clear	;wreg free
  5220  002252  EE20 F006          	lfsr	2,6
  5221  002256  500C               	movf	read_color@m^0,w,c
  5222  002258  26D9               	addwf	fsr2l,f,c
  5223  00225A  500D               	movf	(read_color@m+1)^0,w,c
  5224  00225C  22DA               	addwfc	fsr2h,f,c
  5225  00225E  C005  FFDE         	movff	?_color_read_Clear,postinc2
  5226  002262  C006  FFDD         	movff	?_color_read_Clear+1,postdec2
  5227  002266  0012               	return		;funcret
  5228  002268                     __end_of_read_color:
  5229                           	callstack 0
  5230                           
  5231 ;; *************** function _color_read_Red *****************
  5232 ;; Defined at:
  5233 ;;		line 33 in file "color.c"
  5234 ;; Parameters:    Size  Location     Type
  5235 ;;		None
  5236 ;; Auto vars:     Size  Location     Type
  5237 ;;  tmp             2    9[COMRAM] unsigned int 
  5238 ;; Return value:  Size  Location     Type
  5239 ;;                  2    4[COMRAM] unsigned int 
  5240 ;; Registers used:
  5241 ;;		wreg, status,2, status,0, cstack
  5242 ;; Tracked objects:
  5243 ;;		On entry : 0/0
  5244 ;;		On exit  : 0/0
  5245 ;;		Unchanged: 0/0
  5246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5247 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5248 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5249 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5250 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5251 ;;Total ram usage:        7 bytes
  5252 ;; Hardware stack levels used: 1
  5253 ;; Hardware stack levels required when called: 2
  5254 ;; This function calls:
  5255 ;;		_I2C_2_Master_Read
  5256 ;;		_I2C_2_Master_RepStart
  5257 ;;		_I2C_2_Master_Start
  5258 ;;		_I2C_2_Master_Stop
  5259 ;;		_I2C_2_Master_Write
  5260 ;; This function is called by:
  5261 ;;		_read_color
  5262 ;; This function uses a non-reentrant model
  5263 ;;
  5264                           
  5265                           	psect	text32
  5266  0022BA                     __ptext32:
  5267                           	callstack 0
  5268  0022BA                     _color_read_Red:
  5269                           	callstack 26
  5270  0022BA                     
  5271                           ;color.c: 35:  unsigned int tmp;;color.c: 36:  I2C_2_Master_Start();
  5272  0022BA  ECD4  F013         	call	_I2C_2_Master_Start	;wreg free
  5273                           
  5274                           ;color.c: 37:  I2C_2_Master_Write(0x52 | 0x00);
  5275  0022BE  0E52               	movlw	82
  5276  0022C0  ECC9  F013         	call	_I2C_2_Master_Write
  5277                           
  5278                           ;color.c: 38:  I2C_2_Master_Write(0xA0 | 0x16);
  5279  0022C4  0EB6               	movlw	182
  5280  0022C6  ECC9  F013         	call	_I2C_2_Master_Write
  5281                           
  5282                           ;color.c: 39:  I2C_2_Master_RepStart();
  5283  0022CA  ECD9  F013         	call	_I2C_2_Master_RepStart	;wreg free
  5284                           
  5285                           ;color.c: 40:  I2C_2_Master_Write(0x52 | 0x01);
  5286  0022CE  0E53               	movlw	83
  5287  0022D0  ECC9  F013         	call	_I2C_2_Master_Write
  5288                           
  5289                           ;color.c: 41:  tmp=I2C_2_Master_Read(1);
  5290  0022D4  0E01               	movlw	1
  5291  0022D6  EC40  F012         	call	_I2C_2_Master_Read
  5292  0022DA  6E07               	movwf	??_color_read_Red^0,c
  5293  0022DC  5007               	movf	??_color_read_Red^0,w,c
  5294  0022DE  6E0A               	movwf	color_read_Red@tmp^0,c
  5295  0022E0  6A0B               	clrf	(color_read_Red@tmp+1)^0,c
  5296                           
  5297                           ;color.c: 42:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  5298  0022E2  0E00               	movlw	0
  5299  0022E4  EC40  F012         	call	_I2C_2_Master_Read
  5300  0022E8  6E07               	movwf	??_color_read_Red^0,c
  5301  0022EA  5007               	movf	??_color_read_Red^0,w,c
  5302  0022EC  6E09               	movwf	(??_color_read_Red+2)^0,c
  5303  0022EE  6A08               	clrf	(??_color_read_Red+1)^0,c
  5304  0022F0  500A               	movf	color_read_Red@tmp^0,w,c
  5305  0022F2  1008               	iorwf	(??_color_read_Red+1)^0,w,c
  5306  0022F4  6E0A               	movwf	color_read_Red@tmp^0,c
  5307  0022F6  500B               	movf	(color_read_Red@tmp+1)^0,w,c
  5308  0022F8  1009               	iorwf	(??_color_read_Red+2)^0,w,c
  5309  0022FA  6E0B               	movwf	(color_read_Red@tmp+1)^0,c
  5310                           
  5311                           ;color.c: 43:  I2C_2_Master_Stop();
  5312  0022FC  ECCF  F013         	call	_I2C_2_Master_Stop	;wreg free
  5313  002300                     
  5314                           ;color.c: 44:  return tmp;
  5315  002300  C00A  F005         	movff	color_read_Red@tmp,?_color_read_Red
  5316  002304  C00B  F006         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  5317  002308  0012               	return		;funcret
  5318  00230A                     __end_of_color_read_Red:
  5319                           	callstack 0
  5320                           
  5321 ;; *************** function _color_read_Green *****************
  5322 ;; Defined at:
  5323 ;;		line 61 in file "color.c"
  5324 ;; Parameters:    Size  Location     Type
  5325 ;;		None
  5326 ;; Auto vars:     Size  Location     Type
  5327 ;;  tmp             2    9[COMRAM] unsigned int 
  5328 ;; Return value:  Size  Location     Type
  5329 ;;                  2    4[COMRAM] unsigned int 
  5330 ;; Registers used:
  5331 ;;		wreg, status,2, status,0, cstack
  5332 ;; Tracked objects:
  5333 ;;		On entry : 0/0
  5334 ;;		On exit  : 0/0
  5335 ;;		Unchanged: 0/0
  5336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5337 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5338 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5339 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5340 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5341 ;;Total ram usage:        7 bytes
  5342 ;; Hardware stack levels used: 1
  5343 ;; Hardware stack levels required when called: 2
  5344 ;; This function calls:
  5345 ;;		_I2C_2_Master_Read
  5346 ;;		_I2C_2_Master_RepStart
  5347 ;;		_I2C_2_Master_Start
  5348 ;;		_I2C_2_Master_Stop
  5349 ;;		_I2C_2_Master_Write
  5350 ;; This function is called by:
  5351 ;;		_read_color
  5352 ;; This function uses a non-reentrant model
  5353 ;;
  5354                           
  5355                           	psect	text33
  5356  00230A                     __ptext33:
  5357                           	callstack 0
  5358  00230A                     _color_read_Green:
  5359                           	callstack 26
  5360  00230A                     
  5361                           ;color.c: 63:  unsigned int tmp;;color.c: 64:  I2C_2_Master_Start();
  5362  00230A  ECD4  F013         	call	_I2C_2_Master_Start	;wreg free
  5363                           
  5364                           ;color.c: 65:  I2C_2_Master_Write(0x52 | 0x00);
  5365  00230E  0E52               	movlw	82
  5366  002310  ECC9  F013         	call	_I2C_2_Master_Write
  5367                           
  5368                           ;color.c: 66:  I2C_2_Master_Write(0xA0 | 0x18);
  5369  002314  0EB8               	movlw	184
  5370  002316  ECC9  F013         	call	_I2C_2_Master_Write
  5371                           
  5372                           ;color.c: 67:  I2C_2_Master_RepStart();
  5373  00231A  ECD9  F013         	call	_I2C_2_Master_RepStart	;wreg free
  5374                           
  5375                           ;color.c: 68:  I2C_2_Master_Write(0x52 | 0x01);
  5376  00231E  0E53               	movlw	83
  5377  002320  ECC9  F013         	call	_I2C_2_Master_Write
  5378                           
  5379                           ;color.c: 69:  tmp=I2C_2_Master_Read(1);
  5380  002324  0E01               	movlw	1
  5381  002326  EC40  F012         	call	_I2C_2_Master_Read
  5382  00232A  6E07               	movwf	??_color_read_Green^0,c
  5383  00232C  5007               	movf	??_color_read_Green^0,w,c
  5384  00232E  6E0A               	movwf	color_read_Green@tmp^0,c
  5385  002330  6A0B               	clrf	(color_read_Green@tmp+1)^0,c
  5386                           
  5387                           ;color.c: 70:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  5388  002332  0E00               	movlw	0
  5389  002334  EC40  F012         	call	_I2C_2_Master_Read
  5390  002338  6E07               	movwf	??_color_read_Green^0,c
  5391  00233A  5007               	movf	??_color_read_Green^0,w,c
  5392  00233C  6E09               	movwf	(??_color_read_Green+2)^0,c
  5393  00233E  6A08               	clrf	(??_color_read_Green+1)^0,c
  5394  002340  500A               	movf	color_read_Green@tmp^0,w,c
  5395  002342  1008               	iorwf	(??_color_read_Green+1)^0,w,c
  5396  002344  6E0A               	movwf	color_read_Green@tmp^0,c
  5397  002346  500B               	movf	(color_read_Green@tmp+1)^0,w,c
  5398  002348  1009               	iorwf	(??_color_read_Green+2)^0,w,c
  5399  00234A  6E0B               	movwf	(color_read_Green@tmp+1)^0,c
  5400                           
  5401                           ;color.c: 71:  I2C_2_Master_Stop();
  5402  00234C  ECCF  F013         	call	_I2C_2_Master_Stop	;wreg free
  5403  002350                     
  5404                           ;color.c: 72:  return tmp;
  5405  002350  C00A  F005         	movff	color_read_Green@tmp,?_color_read_Green
  5406  002354  C00B  F006         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  5407  002358  0012               	return		;funcret
  5408  00235A                     __end_of_color_read_Green:
  5409                           	callstack 0
  5410                           
  5411 ;; *************** function _color_read_Clear *****************
  5412 ;; Defined at:
  5413 ;;		line 75 in file "color.c"
  5414 ;; Parameters:    Size  Location     Type
  5415 ;;		None
  5416 ;; Auto vars:     Size  Location     Type
  5417 ;;  tmp             2    9[COMRAM] unsigned int 
  5418 ;; Return value:  Size  Location     Type
  5419 ;;                  2    4[COMRAM] unsigned int 
  5420 ;; Registers used:
  5421 ;;		wreg, status,2, status,0, cstack
  5422 ;; Tracked objects:
  5423 ;;		On entry : 0/0
  5424 ;;		On exit  : 0/0
  5425 ;;		Unchanged: 0/0
  5426 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5427 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5428 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5429 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5430 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5431 ;;Total ram usage:        7 bytes
  5432 ;; Hardware stack levels used: 1
  5433 ;; Hardware stack levels required when called: 2
  5434 ;; This function calls:
  5435 ;;		_I2C_2_Master_Read
  5436 ;;		_I2C_2_Master_RepStart
  5437 ;;		_I2C_2_Master_Start
  5438 ;;		_I2C_2_Master_Stop
  5439 ;;		_I2C_2_Master_Write
  5440 ;; This function is called by:
  5441 ;;		_read_color
  5442 ;; This function uses a non-reentrant model
  5443 ;;
  5444                           
  5445                           	psect	text34
  5446  00235A                     __ptext34:
  5447                           	callstack 0
  5448  00235A                     _color_read_Clear:
  5449                           	callstack 26
  5450  00235A                     
  5451                           ;color.c: 77:  unsigned int tmp;;color.c: 78:  I2C_2_Master_Start();
  5452  00235A  ECD4  F013         	call	_I2C_2_Master_Start	;wreg free
  5453                           
  5454                           ;color.c: 79:  I2C_2_Master_Write(0x52 | 0x00);
  5455  00235E  0E52               	movlw	82
  5456  002360  ECC9  F013         	call	_I2C_2_Master_Write
  5457                           
  5458                           ;color.c: 80:  I2C_2_Master_Write(0xA0 | 0x14);
  5459  002364  0EB4               	movlw	180
  5460  002366  ECC9  F013         	call	_I2C_2_Master_Write
  5461                           
  5462                           ;color.c: 81:  I2C_2_Master_RepStart();
  5463  00236A  ECD9  F013         	call	_I2C_2_Master_RepStart	;wreg free
  5464                           
  5465                           ;color.c: 82:  I2C_2_Master_Write(0x52 | 0x01);
  5466  00236E  0E53               	movlw	83
  5467  002370  ECC9  F013         	call	_I2C_2_Master_Write
  5468                           
  5469                           ;color.c: 83:  tmp=I2C_2_Master_Read(1);
  5470  002374  0E01               	movlw	1
  5471  002376  EC40  F012         	call	_I2C_2_Master_Read
  5472  00237A  6E07               	movwf	??_color_read_Clear^0,c
  5473  00237C  5007               	movf	??_color_read_Clear^0,w,c
  5474  00237E  6E0A               	movwf	color_read_Clear@tmp^0,c
  5475  002380  6A0B               	clrf	(color_read_Clear@tmp+1)^0,c
  5476                           
  5477                           ;color.c: 84:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  5478  002382  0E00               	movlw	0
  5479  002384  EC40  F012         	call	_I2C_2_Master_Read
  5480  002388  6E07               	movwf	??_color_read_Clear^0,c
  5481  00238A  5007               	movf	??_color_read_Clear^0,w,c
  5482  00238C  6E09               	movwf	(??_color_read_Clear+2)^0,c
  5483  00238E  6A08               	clrf	(??_color_read_Clear+1)^0,c
  5484  002390  500A               	movf	color_read_Clear@tmp^0,w,c
  5485  002392  1008               	iorwf	(??_color_read_Clear+1)^0,w,c
  5486  002394  6E0A               	movwf	color_read_Clear@tmp^0,c
  5487  002396  500B               	movf	(color_read_Clear@tmp+1)^0,w,c
  5488  002398  1009               	iorwf	(??_color_read_Clear+2)^0,w,c
  5489  00239A  6E0B               	movwf	(color_read_Clear@tmp+1)^0,c
  5490                           
  5491                           ;color.c: 85:  I2C_2_Master_Stop();
  5492  00239C  ECCF  F013         	call	_I2C_2_Master_Stop	;wreg free
  5493  0023A0                     
  5494                           ;color.c: 86:  return tmp;
  5495  0023A0  C00A  F005         	movff	color_read_Clear@tmp,?_color_read_Clear
  5496  0023A4  C00B  F006         	movff	color_read_Clear@tmp+1,?_color_read_Clear+1
  5497  0023A8  0012               	return		;funcret
  5498  0023AA                     __end_of_color_read_Clear:
  5499                           	callstack 0
  5500                           
  5501 ;; *************** function _color_read_Blue *****************
  5502 ;; Defined at:
  5503 ;;		line 47 in file "color.c"
  5504 ;; Parameters:    Size  Location     Type
  5505 ;;		None
  5506 ;; Auto vars:     Size  Location     Type
  5507 ;;  tmp             2    9[COMRAM] unsigned int 
  5508 ;; Return value:  Size  Location     Type
  5509 ;;                  2    4[COMRAM] unsigned int 
  5510 ;; Registers used:
  5511 ;;		wreg, status,2, status,0, cstack
  5512 ;; Tracked objects:
  5513 ;;		On entry : 0/0
  5514 ;;		On exit  : 0/0
  5515 ;;		Unchanged: 0/0
  5516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5517 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5518 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5519 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5520 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5521 ;;Total ram usage:        7 bytes
  5522 ;; Hardware stack levels used: 1
  5523 ;; Hardware stack levels required when called: 2
  5524 ;; This function calls:
  5525 ;;		_I2C_2_Master_Read
  5526 ;;		_I2C_2_Master_RepStart
  5527 ;;		_I2C_2_Master_Start
  5528 ;;		_I2C_2_Master_Stop
  5529 ;;		_I2C_2_Master_Write
  5530 ;; This function is called by:
  5531 ;;		_read_color
  5532 ;; This function uses a non-reentrant model
  5533 ;;
  5534                           
  5535                           	psect	text35
  5536  0023AA                     __ptext35:
  5537                           	callstack 0
  5538  0023AA                     _color_read_Blue:
  5539                           	callstack 26
  5540  0023AA                     
  5541                           ;color.c: 49:  unsigned int tmp;;color.c: 50:  I2C_2_Master_Start();
  5542  0023AA  ECD4  F013         	call	_I2C_2_Master_Start	;wreg free
  5543                           
  5544                           ;color.c: 51:  I2C_2_Master_Write(0x52 | 0x00);
  5545  0023AE  0E52               	movlw	82
  5546  0023B0  ECC9  F013         	call	_I2C_2_Master_Write
  5547                           
  5548                           ;color.c: 52:  I2C_2_Master_Write(0xA0 | 0x1A);
  5549  0023B4  0EBA               	movlw	186
  5550  0023B6  ECC9  F013         	call	_I2C_2_Master_Write
  5551                           
  5552                           ;color.c: 53:  I2C_2_Master_RepStart();
  5553  0023BA  ECD9  F013         	call	_I2C_2_Master_RepStart	;wreg free
  5554                           
  5555                           ;color.c: 54:  I2C_2_Master_Write(0x52 | 0x01);
  5556  0023BE  0E53               	movlw	83
  5557  0023C0  ECC9  F013         	call	_I2C_2_Master_Write
  5558                           
  5559                           ;color.c: 55:  tmp=I2C_2_Master_Read(1);
  5560  0023C4  0E01               	movlw	1
  5561  0023C6  EC40  F012         	call	_I2C_2_Master_Read
  5562  0023CA  6E07               	movwf	??_color_read_Blue^0,c
  5563  0023CC  5007               	movf	??_color_read_Blue^0,w,c
  5564  0023CE  6E0A               	movwf	color_read_Blue@tmp^0,c
  5565  0023D0  6A0B               	clrf	(color_read_Blue@tmp+1)^0,c
  5566                           
  5567                           ;color.c: 56:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  5568  0023D2  0E00               	movlw	0
  5569  0023D4  EC40  F012         	call	_I2C_2_Master_Read
  5570  0023D8  6E07               	movwf	??_color_read_Blue^0,c
  5571  0023DA  5007               	movf	??_color_read_Blue^0,w,c
  5572  0023DC  6E09               	movwf	(??_color_read_Blue+2)^0,c
  5573  0023DE  6A08               	clrf	(??_color_read_Blue+1)^0,c
  5574  0023E0  500A               	movf	color_read_Blue@tmp^0,w,c
  5575  0023E2  1008               	iorwf	(??_color_read_Blue+1)^0,w,c
  5576  0023E4  6E0A               	movwf	color_read_Blue@tmp^0,c
  5577  0023E6  500B               	movf	(color_read_Blue@tmp+1)^0,w,c
  5578  0023E8  1009               	iorwf	(??_color_read_Blue+2)^0,w,c
  5579  0023EA  6E0B               	movwf	(color_read_Blue@tmp+1)^0,c
  5580                           
  5581                           ;color.c: 57:  I2C_2_Master_Stop();
  5582  0023EC  ECCF  F013         	call	_I2C_2_Master_Stop	;wreg free
  5583  0023F0                     
  5584                           ;color.c: 58:  return tmp;
  5585  0023F0  C00A  F005         	movff	color_read_Blue@tmp,?_color_read_Blue
  5586  0023F4  C00B  F006         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  5587  0023F8  0012               	return		;funcret
  5588  0023FA                     __end_of_color_read_Blue:
  5589                           	callstack 0
  5590                           
  5591 ;; *************** function _I2C_2_Master_Write *****************
  5592 ;; Defined at:
  5593 ;;		line 45 in file "i2c.c"
  5594 ;; Parameters:    Size  Location     Type
  5595 ;;  data_byte       1    wreg     unsigned char 
  5596 ;; Auto vars:     Size  Location     Type
  5597 ;;  data_byte       1    1[COMRAM] unsigned char 
  5598 ;; Return value:  Size  Location     Type
  5599 ;;                  1    wreg      void 
  5600 ;; Registers used:
  5601 ;;		wreg, status,2, status,0, cstack
  5602 ;; Tracked objects:
  5603 ;;		On entry : 0/0
  5604 ;;		On exit  : 0/0
  5605 ;;		Unchanged: 0/0
  5606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5607 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5608 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5609 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5610 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5611 ;;Total ram usage:        1 bytes
  5612 ;; Hardware stack levels used: 1
  5613 ;; Hardware stack levels required when called: 1
  5614 ;; This function calls:
  5615 ;;		_I2C_2_Master_Idle
  5616 ;; This function is called by:
  5617 ;;		_color_writetoaddr
  5618 ;;		_color_read_Red
  5619 ;;		_color_read_Blue
  5620 ;;		_color_read_Green
  5621 ;;		_color_read_Clear
  5622 ;; This function uses a non-reentrant model
  5623 ;;
  5624                           
  5625                           	psect	text36
  5626  002792                     __ptext36:
  5627                           	callstack 0
  5628  002792                     _I2C_2_Master_Write:
  5629                           	callstack 26
  5630                           
  5631                           ;incstack = 0
  5632                           ;I2C_2_Master_Write@data_byte stored from wreg
  5633  002792  6E02               	movwf	I2C_2_Master_Write@data_byte^0,c
  5634  002794                     
  5635                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  5636  002794  EC77  F013         	call	_I2C_2_Master_Idle	;wreg free
  5637  002798                     
  5638                           ;i2c.c: 48:   SSP2BUF = data_byte;
  5639  002798  C002  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  5640  00279C  0012               	return		;funcret
  5641  00279E                     __end_of_I2C_2_Master_Write:
  5642                           	callstack 0
  5643                           
  5644 ;; *************** function _I2C_2_Master_Stop *****************
  5645 ;; Defined at:
  5646 ;;		line 39 in file "i2c.c"
  5647 ;; Parameters:    Size  Location     Type
  5648 ;;		None
  5649 ;; Auto vars:     Size  Location     Type
  5650 ;;		None
  5651 ;; Return value:  Size  Location     Type
  5652 ;;                  1    wreg      void 
  5653 ;; Registers used:
  5654 ;;		wreg, status,2, status,0, cstack
  5655 ;; Tracked objects:
  5656 ;;		On entry : 0/0
  5657 ;;		On exit  : 0/0
  5658 ;;		Unchanged: 0/0
  5659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5660 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5661 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5662 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5663 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5664 ;;Total ram usage:        0 bytes
  5665 ;; Hardware stack levels used: 1
  5666 ;; Hardware stack levels required when called: 1
  5667 ;; This function calls:
  5668 ;;		_I2C_2_Master_Idle
  5669 ;; This function is called by:
  5670 ;;		_color_writetoaddr
  5671 ;;		_color_read_Red
  5672 ;;		_color_read_Blue
  5673 ;;		_color_read_Green
  5674 ;;		_color_read_Clear
  5675 ;; This function uses a non-reentrant model
  5676 ;;
  5677                           
  5678                           	psect	text37
  5679  00279E                     __ptext37:
  5680                           	callstack 0
  5681  00279E                     _I2C_2_Master_Stop:
  5682                           	callstack 26
  5683  00279E                     
  5684                           ;i2c.c: 41:   I2C_2_Master_Idle();
  5685  00279E  EC77  F013         	call	_I2C_2_Master_Idle	;wreg free
  5686  0027A2                     
  5687                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  5688  0027A2  010E               	movlb	14	; () banked
  5689  0027A4  85DA               	bsf	218,2,b	;volatile
  5690  0027A6                     
  5691                           ; BSR set to: 14
  5692  0027A6  0012               	return		;funcret
  5693  0027A8                     __end_of_I2C_2_Master_Stop:
  5694                           	callstack 0
  5695                           
  5696 ;; *************** function _I2C_2_Master_Start *****************
  5697 ;; Defined at:
  5698 ;;		line 27 in file "i2c.c"
  5699 ;; Parameters:    Size  Location     Type
  5700 ;;		None
  5701 ;; Auto vars:     Size  Location     Type
  5702 ;;		None
  5703 ;; Return value:  Size  Location     Type
  5704 ;;                  1    wreg      void 
  5705 ;; Registers used:
  5706 ;;		wreg, status,2, status,0, cstack
  5707 ;; Tracked objects:
  5708 ;;		On entry : 0/0
  5709 ;;		On exit  : 0/0
  5710 ;;		Unchanged: 0/0
  5711 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5712 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5713 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5714 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5715 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5716 ;;Total ram usage:        0 bytes
  5717 ;; Hardware stack levels used: 1
  5718 ;; Hardware stack levels required when called: 1
  5719 ;; This function calls:
  5720 ;;		_I2C_2_Master_Idle
  5721 ;; This function is called by:
  5722 ;;		_color_writetoaddr
  5723 ;;		_color_read_Red
  5724 ;;		_color_read_Blue
  5725 ;;		_color_read_Green
  5726 ;;		_color_read_Clear
  5727 ;; This function uses a non-reentrant model
  5728 ;;
  5729                           
  5730                           	psect	text38
  5731  0027A8                     __ptext38:
  5732                           	callstack 0
  5733  0027A8                     _I2C_2_Master_Start:
  5734                           	callstack 26
  5735  0027A8                     
  5736                           ;i2c.c: 29:   I2C_2_Master_Idle();
  5737  0027A8  EC77  F013         	call	_I2C_2_Master_Idle	;wreg free
  5738  0027AC                     
  5739                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  5740  0027AC  010E               	movlb	14	; () banked
  5741  0027AE  81DA               	bsf	218,0,b	;volatile
  5742  0027B0                     
  5743                           ; BSR set to: 14
  5744  0027B0  0012               	return		;funcret
  5745  0027B2                     __end_of_I2C_2_Master_Start:
  5746                           	callstack 0
  5747                           
  5748 ;; *************** function _I2C_2_Master_RepStart *****************
  5749 ;; Defined at:
  5750 ;;		line 33 in file "i2c.c"
  5751 ;; Parameters:    Size  Location     Type
  5752 ;;		None
  5753 ;; Auto vars:     Size  Location     Type
  5754 ;;		None
  5755 ;; Return value:  Size  Location     Type
  5756 ;;                  1    wreg      void 
  5757 ;; Registers used:
  5758 ;;		wreg, status,2, status,0, cstack
  5759 ;; Tracked objects:
  5760 ;;		On entry : 0/0
  5761 ;;		On exit  : 0/0
  5762 ;;		Unchanged: 0/0
  5763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5764 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5765 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5766 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5767 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5768 ;;Total ram usage:        0 bytes
  5769 ;; Hardware stack levels used: 1
  5770 ;; Hardware stack levels required when called: 1
  5771 ;; This function calls:
  5772 ;;		_I2C_2_Master_Idle
  5773 ;; This function is called by:
  5774 ;;		_color_read_Red
  5775 ;;		_color_read_Blue
  5776 ;;		_color_read_Green
  5777 ;;		_color_read_Clear
  5778 ;; This function uses a non-reentrant model
  5779 ;;
  5780                           
  5781                           	psect	text39
  5782  0027B2                     __ptext39:
  5783                           	callstack 0
  5784  0027B2                     _I2C_2_Master_RepStart:
  5785                           	callstack 26
  5786  0027B2                     
  5787                           ;i2c.c: 35:   I2C_2_Master_Idle();
  5788  0027B2  EC77  F013         	call	_I2C_2_Master_Idle	;wreg free
  5789  0027B6                     
  5790                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  5791  0027B6  010E               	movlb	14	; () banked
  5792  0027B8  83DA               	bsf	218,1,b	;volatile
  5793  0027BA                     
  5794                           ; BSR set to: 14
  5795  0027BA  0012               	return		;funcret
  5796  0027BC                     __end_of_I2C_2_Master_RepStart:
  5797                           	callstack 0
  5798                           
  5799 ;; *************** function _I2C_2_Master_Read *****************
  5800 ;; Defined at:
  5801 ;;		line 51 in file "i2c.c"
  5802 ;; Parameters:    Size  Location     Type
  5803 ;;  ack             1    wreg     unsigned char 
  5804 ;; Auto vars:     Size  Location     Type
  5805 ;;  ack             1    2[COMRAM] unsigned char 
  5806 ;;  tmp             1    3[COMRAM] unsigned char 
  5807 ;; Return value:  Size  Location     Type
  5808 ;;                  1    wreg      unsigned char 
  5809 ;; Registers used:
  5810 ;;		wreg, status,2, status,0, cstack
  5811 ;; Tracked objects:
  5812 ;;		On entry : 0/0
  5813 ;;		On exit  : 0/0
  5814 ;;		Unchanged: 0/0
  5815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5816 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5817 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5818 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5819 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5820 ;;Total ram usage:        3 bytes
  5821 ;; Hardware stack levels used: 1
  5822 ;; Hardware stack levels required when called: 1
  5823 ;; This function calls:
  5824 ;;		_I2C_2_Master_Idle
  5825 ;; This function is called by:
  5826 ;;		_color_read_Red
  5827 ;;		_color_read_Blue
  5828 ;;		_color_read_Green
  5829 ;;		_color_read_Clear
  5830 ;; This function uses a non-reentrant model
  5831 ;;
  5832                           
  5833                           	psect	text40
  5834  002480                     __ptext40:
  5835                           	callstack 0
  5836  002480                     _I2C_2_Master_Read:
  5837                           	callstack 26
  5838                           
  5839                           ; BSR set to: 14
  5840                           ;incstack = 0
  5841                           ;I2C_2_Master_Read@ack stored from wreg
  5842  002480  6E03               	movwf	I2C_2_Master_Read@ack^0,c
  5843  002482                     
  5844                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  5845  002482  EC77  F013         	call	_I2C_2_Master_Idle	;wreg free
  5846  002486                     
  5847                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  5848  002486  010E               	movlb	14	; () banked
  5849  002488  87DA               	bsf	218,3,b	;volatile
  5850                           
  5851                           ;i2c.c: 56:   I2C_2_Master_Idle();
  5852  00248A  EC77  F013         	call	_I2C_2_Master_Idle	;wreg free
  5853  00248E                     
  5854                           ;i2c.c: 57:   tmp = SSP2BUF;
  5855  00248E  CED5 F004          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  5856                           
  5857                           ;i2c.c: 58:   I2C_2_Master_Idle();
  5858  002492  EC77  F013         	call	_I2C_2_Master_Idle	;wreg free
  5859  002496                     
  5860                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  5861  002496  5003               	movf	I2C_2_Master_Read@ack^0,w,c
  5862  002498  B4D8               	btfsc	status,2,c
  5863  00249A  EF51  F012         	goto	u1291
  5864  00249E  EF55  F012         	goto	u1290
  5865  0024A2                     u1291:
  5866  0024A2  6A02               	clrf	??_I2C_2_Master_Read^0,c
  5867  0024A4  2A02               	incf	??_I2C_2_Master_Read^0,f,c
  5868  0024A6  EF56  F012         	goto	u1308
  5869  0024AA                     u1290:
  5870  0024AA  6A02               	clrf	??_I2C_2_Master_Read^0,c
  5871  0024AC                     u1308:
  5872  0024AC  3A02               	swapf	??_I2C_2_Master_Read^0,f,c
  5873  0024AE  4602               	rlncf	??_I2C_2_Master_Read^0,f,c
  5874  0024B0  010E               	movlb	14	; () banked
  5875  0024B2  51DA               	movf	218,w,b	;volatile
  5876  0024B4  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  5877  0024B6  0BDF               	andlw	-33
  5878  0024B8  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  5879  0024BA  6FDA               	movwf	218,b	;volatile
  5880  0024BC                     
  5881                           ; BSR set to: 14
  5882                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  5883  0024BC  89DA               	bsf	218,4,b	;volatile
  5884  0024BE                     
  5885                           ; BSR set to: 14
  5886                           ;i2c.c: 61:   return tmp;
  5887  0024BE  5004               	movf	I2C_2_Master_Read@tmp^0,w,c
  5888  0024C0                     
  5889                           ; BSR set to: 14
  5890  0024C0  0012               	return		;funcret
  5891  0024C2                     __end_of_I2C_2_Master_Read:
  5892                           	callstack 0
  5893                           
  5894 ;; *************** function _I2C_2_Master_Idle *****************
  5895 ;; Defined at:
  5896 ;;		line 22 in file "i2c.c"
  5897 ;; Parameters:    Size  Location     Type
  5898 ;;		None
  5899 ;; Auto vars:     Size  Location     Type
  5900 ;;		None
  5901 ;; Return value:  Size  Location     Type
  5902 ;;                  1    wreg      void 
  5903 ;; Registers used:
  5904 ;;		wreg, status,2, status,0
  5905 ;; Tracked objects:
  5906 ;;		On entry : 0/0
  5907 ;;		On exit  : 0/0
  5908 ;;		Unchanged: 0/0
  5909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5910 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5911 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5912 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5913 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5914 ;;Total ram usage:        1 bytes
  5915 ;; Hardware stack levels used: 1
  5916 ;; This function calls:
  5917 ;;		Nothing
  5918 ;; This function is called by:
  5919 ;;		_I2C_2_Master_Start
  5920 ;;		_I2C_2_Master_RepStart
  5921 ;;		_I2C_2_Master_Stop
  5922 ;;		_I2C_2_Master_Write
  5923 ;;		_I2C_2_Master_Read
  5924 ;; This function uses a non-reentrant model
  5925 ;;
  5926                           
  5927                           	psect	text41
  5928  0026EE                     __ptext41:
  5929                           	callstack 0
  5930  0026EE                     _I2C_2_Master_Idle:
  5931                           	callstack 26
  5932  0026EE                     l159:
  5933  0026EE  010E               	movlb	14	; () banked
  5934  0026F0  B5D8               	btfsc	216,2,b	;volatile
  5935  0026F2  EF7D  F013         	goto	u1091
  5936  0026F6  EF7F  F013         	goto	u1090
  5937  0026FA                     u1091:
  5938  0026FA  EF77  F013         	goto	l159
  5939  0026FE                     u1090:
  5940  0026FE                     
  5941                           ; BSR set to: 14
  5942  0026FE  CEDA F001          	movff	3802,??_I2C_2_Master_Idle	;volatile
  5943  002702  0E1F               	movlw	31
  5944  002704  1601               	andwf	??_I2C_2_Master_Idle^0,f,c
  5945  002706  A4D8               	btfss	status,2,c
  5946  002708  EF88  F013         	goto	u1101
  5947  00270C  EF8A  F013         	goto	u1100
  5948  002710                     u1101:
  5949  002710  EF77  F013         	goto	l159
  5950  002714                     u1100:
  5951  002714                     
  5952                           ; BSR set to: 14
  5953  002714  0012               	return		;funcret
  5954  002716                     __end_of_I2C_2_Master_Idle:
  5955                           	callstack 0
  5956                           
  5957                           	psect	rparam
  5958  0000                     
  5959                           	psect	idloc
  5960                           
  5961                           ;Config register IDLOC0 @ 0x200000
  5962                           ;	unspecified, using default values
  5963  200000                     	org	2097152
  5964  200000  0FFF               	dw	4095
  5965                           
  5966                           ;Config register IDLOC1 @ 0x200002
  5967                           ;	unspecified, using default values
  5968  200002                     	org	2097154
  5969  200002  0FFF               	dw	4095
  5970                           
  5971                           ;Config register IDLOC2 @ 0x200004
  5972                           ;	unspecified, using default values
  5973  200004                     	org	2097156
  5974  200004  0FFF               	dw	4095
  5975                           
  5976                           ;Config register IDLOC3 @ 0x200006
  5977                           ;	unspecified, using default values
  5978  200006                     	org	2097158
  5979  200006  0FFF               	dw	4095
  5980                           
  5981                           ;Config register IDLOC4 @ 0x200008
  5982                           ;	unspecified, using default values
  5983  200008                     	org	2097160
  5984  200008  0FFF               	dw	4095
  5985                           
  5986                           ;Config register IDLOC5 @ 0x20000A
  5987                           ;	unspecified, using default values
  5988  20000A                     	org	2097162
  5989  20000A  0FFF               	dw	4095
  5990                           
  5991                           ;Config register IDLOC6 @ 0x20000C
  5992                           ;	unspecified, using default values
  5993  20000C                     	org	2097164
  5994  20000C  0FFF               	dw	4095
  5995                           
  5996                           ;Config register IDLOC7 @ 0x20000E
  5997                           ;	unspecified, using default values
  5998  20000E                     	org	2097166
  5999  20000E  0FFF               	dw	4095
  6000                           
  6001                           	psect	config
  6002                           
  6003                           ;Config register CONFIG1L @ 0x300000
  6004                           ;	External Oscillator mode Selection bits
  6005                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  6006                           ;	Power-up default value for COSC bits
  6007                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  6008  300000                     	org	3145728
  6009  300000  AA                 	db	170
  6010                           
  6011                           ;Config register CONFIG1H @ 0x300001
  6012                           ;	unspecified, using default values
  6013                           ;	Clock Out Enable bit
  6014                           ;	CLKOUTEN = 0x1, unprogrammed default
  6015                           ;	Clock Switch Enable bit
  6016                           ;	CSWEN = 0x1, unprogrammed default
  6017                           ;	Fail-Safe Clock Monitor Enable bit
  6018                           ;	FCMEN = 0x1, unprogrammed default
  6019  300001                     	org	3145729
  6020  300001  FF                 	db	255
  6021                           
  6022                           ;Config register CONFIG2L @ 0x300002
  6023                           ;	unspecified, using default values
  6024                           ;	Master Clear Enable bit
  6025                           ;	MCLRE = 0x1, unprogrammed default
  6026                           ;	Power-up Timer Enable bit
  6027                           ;	PWRTE = 0x1, unprogrammed default
  6028                           ;	Low-power BOR enable bit
  6029                           ;	LPBOREN = 0x1, unprogrammed default
  6030                           ;	Brown-out Reset Enable bits
  6031                           ;	BOREN = 0x3, unprogrammed default
  6032  300002                     	org	3145730
  6033  300002  FF                 	db	255
  6034                           
  6035                           ;Config register CONFIG2H @ 0x300003
  6036                           ;	unspecified, using default values
  6037                           ;	Brown Out Reset Voltage selection bits
  6038                           ;	BORV = 0x3, unprogrammed default
  6039                           ;	ZCD Disable bit
  6040                           ;	ZCD = 0x1, unprogrammed default
  6041                           ;	PPSLOCK bit One-Way Set Enable bit
  6042                           ;	PPS1WAY = 0x1, unprogrammed default
  6043                           ;	Stack Full/Underflow Reset Enable bit
  6044                           ;	STVREN = 0x1, unprogrammed default
  6045                           ;	Debugger Enable bit
  6046                           ;	DEBUG = 0x1, unprogrammed default
  6047                           ;	Extended Instruction Set Enable bit
  6048                           ;	XINST = 0x1, unprogrammed default
  6049  300003                     	org	3145731
  6050  300003  FF                 	db	255
  6051                           
  6052                           ;Config register CONFIG3L @ 0x300004
  6053                           ;	WDT Period Select bits
  6054                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  6055                           ;	WDT operating mode
  6056                           ;	WDTE = OFF, WDT Disabled
  6057  300004                     	org	3145732
  6058  300004  9F                 	db	159
  6059                           
  6060                           ;Config register CONFIG3H @ 0x300005
  6061                           ;	unspecified, using default values
  6062                           ;	WDT Window Select bits
  6063                           ;	WDTCWS = 0x7, unprogrammed default
  6064                           ;	WDT input clock selector
  6065                           ;	WDTCCS = 0x7, unprogrammed default
  6066  300005                     	org	3145733
  6067  300005  FF                 	db	255
  6068                           
  6069                           ;Config register CONFIG4L @ 0x300006
  6070                           ;	unspecified, using default values
  6071                           ;	Write Protection Block 0
  6072                           ;	WRT0 = 0x1, unprogrammed default
  6073                           ;	Write Protection Block 1
  6074                           ;	WRT1 = 0x1, unprogrammed default
  6075                           ;	Write Protection Block 2
  6076                           ;	WRT2 = 0x1, unprogrammed default
  6077                           ;	Write Protection Block 3
  6078                           ;	WRT3 = 0x1, unprogrammed default
  6079                           ;	Write Protection Block 3
  6080                           ;	WRT4 = 0x1, unprogrammed default
  6081                           ;	Write Protection Block 3
  6082                           ;	WRT5 = 0x1, unprogrammed default
  6083                           ;	Write Protection Block 3
  6084                           ;	WRT6 = 0x1, unprogrammed default
  6085                           ;	Write Protection Block 3
  6086                           ;	WRT7 = 0x1, unprogrammed default
  6087  300006                     	org	3145734
  6088  300006  FF                 	db	255
  6089                           
  6090                           ;Config register CONFIG4H @ 0x300007
  6091                           ;	unspecified, using default values
  6092                           ;	Configuration Register Write Protection bit
  6093                           ;	WRTC = 0x1, unprogrammed default
  6094                           ;	Boot Block Write Protection bit
  6095                           ;	WRTB = 0x1, unprogrammed default
  6096                           ;	Data EEPROM Write Protection bit
  6097                           ;	WRTD = 0x1, unprogrammed default
  6098                           ;	Scanner Enable bit
  6099                           ;	SCANE = 0x1, unprogrammed default
  6100                           ;	Low Voltage Programming Enable bit
  6101                           ;	LVP = 0x1, unprogrammed default
  6102  300007                     	org	3145735
  6103  300007  FF                 	db	255
  6104                           
  6105                           ;Config register CONFIG5L @ 0x300008
  6106                           ;	unspecified, using default values
  6107                           ;	UserNVM Program Memory Code Protection bit
  6108                           ;	CP = 0x1, unprogrammed default
  6109                           ;	DataNVM Memory Code Protection bit
  6110                           ;	CPD = 0x1, unprogrammed default
  6111  300008                     	org	3145736
  6112  300008  FF                 	db	255
  6113                           
  6114                           ;Config register CONFIG5H @ 0x300009
  6115                           ;	unspecified, using default values
  6116  300009                     	org	3145737
  6117  300009  FF                 	db	255
  6118                           
  6119                           ;Config register CONFIG6L @ 0x30000A
  6120                           ;	unspecified, using default values
  6121                           ;	Table Read Protection Block 0
  6122                           ;	EBTR0 = 0x1, unprogrammed default
  6123                           ;	Table Read Protection Block 1
  6124                           ;	EBTR1 = 0x1, unprogrammed default
  6125                           ;	Table Read Protection Block 2
  6126                           ;	EBTR2 = 0x1, unprogrammed default
  6127                           ;	Table Read Protection Block 3
  6128                           ;	EBTR3 = 0x1, unprogrammed default
  6129                           ;	Table Read Protection Block 4
  6130                           ;	EBTR4 = 0x1, unprogrammed default
  6131                           ;	Table Read Protection Block 5
  6132                           ;	EBTR5 = 0x1, unprogrammed default
  6133                           ;	Table Read Protection Block 6
  6134                           ;	EBTR6 = 0x1, unprogrammed default
  6135                           ;	Table Read Protection Block 7
  6136                           ;	EBTR7 = 0x1, unprogrammed default
  6137  30000A                     	org	3145738
  6138  30000A  FF                 	db	255
  6139                           
  6140                           ;Config register CONFIG6H @ 0x30000B
  6141                           ;	unspecified, using default values
  6142                           ;	Boot Block Table Read Protection bit
  6143                           ;	EBTRB = 0x1, unprogrammed default
  6144  30000B                     	org	3145739
  6145  30000B  FF                 	db	255
  6146                           tosu	equ	0xFFF
  6147                           tosh	equ	0xFFE
  6148                           tosl	equ	0xFFD
  6149                           stkptr	equ	0xFFC
  6150                           pclatu	equ	0xFFB
  6151                           pclath	equ	0xFFA
  6152                           pcl	equ	0xFF9
  6153                           tblptru	equ	0xFF8
  6154                           tblptrh	equ	0xFF7
  6155                           tblptrl	equ	0xFF6
  6156                           tablat	equ	0xFF5
  6157                           prodh	equ	0xFF4
  6158                           prodl	equ	0xFF3
  6159                           indf0	equ	0xFEF
  6160                           postinc0	equ	0xFEE
  6161                           postdec0	equ	0xFED
  6162                           preinc0	equ	0xFEC
  6163                           plusw0	equ	0xFEB
  6164                           fsr0h	equ	0xFEA
  6165                           fsr0l	equ	0xFE9
  6166                           wreg	equ	0xFE8
  6167                           indf1	equ	0xFE7
  6168                           postinc1	equ	0xFE6
  6169                           postdec1	equ	0xFE5
  6170                           preinc1	equ	0xFE4
  6171                           plusw1	equ	0xFE3
  6172                           fsr1h	equ	0xFE2
  6173                           fsr1l	equ	0xFE1
  6174                           bsr	equ	0xFE0
  6175                           indf2	equ	0xFDF
  6176                           postinc2	equ	0xFDE
  6177                           postdec2	equ	0xFDD
  6178                           preinc2	equ	0xFDC
  6179                           plusw2	equ	0xFDB
  6180                           fsr2h	equ	0xFDA
  6181                           fsr2l	equ	0xFD9
  6182                           status	equ	0xFD8

Data Sizes:
    Strings     78
    Constant    0
    Data        1
    BSS         124
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     91      95
    BANK0           160    126     155
    BANK1           256     37     129
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_13(CODE[5]), STR_12(CODE[6]), STR_1(CODE[15]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 15
		 -> STR_13(CODE[5]), STR_12(CODE[6]), STR_1(CODE[15]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_13(CODE[5]), STR_12(CODE[6]), STR_1(CODE[15]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 100
		 -> voltage_display@buf(COMRAM[80]), color_predict@buf(BANK0[100]), color_display@buf(BANK0[100]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S2064$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S2064$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    motorR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    motorR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhhlll[1]), PWM6DCH(BITBIGSFRhhhlll[1]), 

    motorL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    motorL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhhlll[1]), PWM6DCH(BITBIGSFRhhhlll[1]), 

    sendStringSerial4@string	PTR unsigned char  size(2) Largest target is 100
		 -> voltage_display@buf(COMRAM[80]), color_predict@buf(BANK0[100]), color_display@buf(BANK0[100]), 

    voltage_display@m.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    voltage_display@m.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhhlll[1]), PWM6DCH(BITBIGSFRhhhlll[1]), 

    voltage_read@m.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    voltage_read@m.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhhlll[1]), PWM6DCH(BITBIGSFRhhhlll[1]), 

    turn180@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turn180@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhhlll[1]), PWM6DCH(BITBIGSFRhhhlll[1]), 

    turn180@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turn180@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhhlll[1]), PWM6DCH(BITBIGSFRhhhlll[1]), 

    fullSpeedAhead@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    fullSpeedAhead@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhhlll[1]), PWM6DCH(BITBIGSFRhhhlll[1]), 

    fullSpeedAhead@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    fullSpeedAhead@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhhlll[1]), PWM6DCH(BITBIGSFRhhhlll[1]), 

    turnRight@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turnRight@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhhlll[1]), PWM6DCH(BITBIGSFRhhhlll[1]), 

    turnRight@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turnRight@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhhlll[1]), PWM6DCH(BITBIGSFRhhhlll[1]), 

    turnLeft@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turnLeft@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhhlll[1]), PWM6DCH(BITBIGSFRhhhlll[1]), 

    turnLeft@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turnLeft@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhhlll[1]), PWM6DCH(BITBIGSFRhhhlll[1]), 

    stop@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    stop@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhhlll[1]), PWM6DCH(BITBIGSFRhhhlll[1]), 

    stop@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    stop@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhhlll[1]), PWM6DCH(BITBIGSFRhhhlll[1]), 

    setMotorPWM@m.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    setMotorPWM@m.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhhlll[1]), PWM6DCH(BITBIGSFRhhhlll[1]), 

    initDCmotors_parameter@motorR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    initDCmotors_parameter@motorR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhhlll[1]), PWM6DCH(BITBIGSFRhhhlll[1]), 

    initDCmotors_parameter@motorR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    S199DC_motor$dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    initDCmotors_parameter@motorL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    S199DC_motor$dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhhlll[1]), PWM6DCH(BITBIGSFRhhhlll[1]), 

    initDCmotors_parameter@motorL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhhlll[1]), PWM6DCH(BITBIGSFRhhhlll[1]), 

    initDCmotors_parameter@motorL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    detect_color@m	PTR struct color_rgb size(2) Largest target is 8
		 -> main@rgb(BANK1[8]), 

    color_display@m	PTR struct color_rgb size(2) Largest target is 8
		 -> main@rgb(BANK1[8]), 

    LED_G@m	PTR struct color_rgb size(2) Largest target is 8
		 -> main@rgb(BANK1[8]), 

    LED_B@m	PTR struct color_rgb size(2) Largest target is 8
		 -> main@rgb(BANK1[8]), 

    LED_C@m	PTR struct color_rgb size(2) Largest target is 8
		 -> main@rgb(BANK1[8]), 

    LED_R@m	PTR struct color_rgb size(2) Largest target is 8
		 -> main@rgb(BANK1[8]), 

    read_color@m	PTR struct color_rgb size(2) Largest target is 8
		 -> main@rgb(BANK1[8]), 


Critical Paths under _main in COMRAM

    _main->_color_display
    _detect_color->_compare
    _compare->___wmul
    ___wmul->___lwdiv
    _LED_R->_read_color
    _LED_G->_read_color
    _LED_B->_read_color
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _sendStringSerial4->_sendCharSerial4
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _LED_C->_read_color
    _read_color->_color_read_Blue
    _read_color->_color_read_Clear
    _read_color->_color_read_Green
    _read_color->_color_read_Red
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Clear->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle

Critical Paths under _main in BANK0

    _main->_color_predict
    _color_predict->_sprintf
    _color_display->_sprintf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                40    40      0   34138
                                             89 COMRAM     2     2      0
                                              0 BANK1     37    37      0
                  _I2C_2_Master_Init
                              _LED_B
                              _LED_C
                              _LED_G
                              _LED_R
                   _color_click_init
                      _color_display
                      _color_predict
                       _detect_color
                    _initDCmotorsPWM
             _initDCmotors_parameter
                         _initUSART4
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initDCmotors_parameter                               4     0      4     416
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2      76
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _detect_color                                        23    21      2   12969
                                             20 COMRAM    23    21      2
                              _LED_B
                              _LED_G
                              _LED_R
                            ___lwdiv
                             ___wmul
                            _compare
                         _read_color
 ---------------------------------------------------------------------------------
 (2) _compare                                              7     1      6    3304
                                             13 COMRAM     7     1      6
                            ___lwdiv (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4    2075
                                              7 COMRAM     6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4    1682
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (2) _LED_R                                                4     2      2    1246
                                             13 COMRAM     4     2      2
                         _read_color
 ---------------------------------------------------------------------------------
 (2) _LED_G                                                4     2      2    1246
                                             13 COMRAM     4     2      2
                         _read_color
 ---------------------------------------------------------------------------------
 (2) _LED_B                                                4     2      2    1246
                                             13 COMRAM     4     2      2
                         _read_color
 ---------------------------------------------------------------------------------
 (1) _color_predict                                      102   102      0    7357
                                             25 BANK0    101   101      0
                  _sendStringSerial4
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _color_display                                      102   100      2    7497
                                             87 COMRAM     2     0      2
                                             25 BANK0    100   100      0
                  _sendStringSerial4
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             27    15     12    6760
                                              0 BANK0     25    13     12
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6    6105
                                             79 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           42    36      6    5751
                                             63 COMRAM    16    10      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                36    26     10    4358
                                             27 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    2709
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1235
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                9     5      4     834
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (2) _sendStringSerial4                                    2     0      2     295
                                              1 COMRAM     2     0      2
                    _sendCharSerial4
 ---------------------------------------------------------------------------------
 (3) _sendCharSerial4                                      1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     294
                                              4 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     294
                                              2 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LED_C                                                4     2      2    1246
                                             13 COMRAM     4     2      2
                         _read_color
 ---------------------------------------------------------------------------------
 (2) _read_color                                           2     0      2    1072
                                             11 COMRAM     2     0      2
                    _color_read_Blue
                   _color_read_Clear
                   _color_read_Green
                     _color_read_Red
 ---------------------------------------------------------------------------------
 (3) _color_read_Red                                       7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _color_read_Green                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _color_read_Clear                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _color_read_Blue                                      7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Write                                   1     1      0      22
                                              1 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Read                                    3     3      0      45
                                              1 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (5) _I2C_2_Master_Idle                                    1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_2_Master_Init
   _LED_B
     _read_color
       _color_read_Blue
         _I2C_2_Master_Read
           _I2C_2_Master_Idle
         _I2C_2_Master_RepStart
           _I2C_2_Master_Idle
         _I2C_2_Master_Start
           _I2C_2_Master_Idle
         _I2C_2_Master_Stop
           _I2C_2_Master_Idle
         _I2C_2_Master_Write
           _I2C_2_Master_Idle
       _color_read_Clear
         _I2C_2_Master_Read
         _I2C_2_Master_RepStart
         _I2C_2_Master_Start
         _I2C_2_Master_Stop
         _I2C_2_Master_Write
       _color_read_Green
         _I2C_2_Master_Read
         _I2C_2_Master_RepStart
         _I2C_2_Master_Start
         _I2C_2_Master_Stop
         _I2C_2_Master_Write
       _color_read_Red
         _I2C_2_Master_Read
         _I2C_2_Master_RepStart
         _I2C_2_Master_Start
         _I2C_2_Master_Stop
         _I2C_2_Master_Write
   _LED_C
     _read_color
   _LED_G
     _read_color
   _LED_R
     _read_color
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _color_display
     _sendStringSerial4
       _sendCharSerial4
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
               _strlen
           _fputc
   _color_predict
     _sendStringSerial4
     _sprintf
   _detect_color
     _LED_B
     _LED_G
     _LED_R
     ___lwdiv
     ___wmul
       ___lwdiv (ARG)
     _compare
       ___lwdiv (ARG)
       ___wmul (ARG)
     _read_color
   _initDCmotorsPWM
   _initDCmotors_parameter
   _initUSART4

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      58        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     25      81       7       50.4%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     7E      9B       5       96.9%
BITBIGSFRllhhl      6E      0       0      43        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5B      5F       1      100.0%
BITBIGSFRhhhh       40      0       0      32        0.0%
BITBIGSFRlllllh     32      0       0      48        0.0%
BITBIGSFRlllllh     2A      0       0      52        0.0%
BITBIGSFRllllll     26      0       0      56        0.0%
BITBIGSFRllllhh     20      0       0      46        0.0%
BITBIGSFRhhhlll     18      0       0      35        0.0%
BITBIGSFRhhhlh      17      0       0      33        0.0%
BITBIGSFRllhhhh     14      0       0      40        0.0%
BITBIGSFRlllllh      F      0       0      54        0.0%
BITBIGSFRllllhl      C      0       0      47        0.0%
BITBIGSFRlllllh      9      0       0      53        0.0%
BITBIGSFRllhlll      8      0       0      44        0.0%
BITBIGSFRllhhhl      6      0       0      42        0.0%
BITBIGSFRllllll      6      0       0      55        0.0%
BITBIGSFRlllllh      6      0       0      51        0.0%
BITBIGSFRlllllh      5      0       0      50        0.0%
BITBIGSFRllhhhh      3      0       0      41        0.0%
BITBIGSFRlllllh      3      0       0      49        0.0%
BITBIGSFRhlh         1      0       0      36        0.0%
BITBIGSFRhhhllh      1      0       0      34        0.0%
BITBIGSFRlhh         1      0       0      38        0.0%
BITBIGSFRlllh        1      0       0      45        0.0%
BITBIGSFRlhl         1      0       0      39        0.0%
BITBIGSFRhll         1      0       0      37        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     17B      57        0.0%
DATA                 0      0     17B       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.35 build 20211206165544 
Symbol Table                                                                                   Tue Mar 08 19:02:13 2022

                _color_read_Red 22BA                 _color_read_Blue 23AA                   _color_predict 1D84  
                            l51 2308                              l60 23A8                              l45 25E2  
                            l54 23F8                              l63 2266                              l48 275A  
                            l72 2696                              l57 2358                              l66 263E  
                            l91 1E60                              l75 266A                              l69 26C2  
                            l78 21A6             ___wmul@multiplicand 000A                _color_read_Clear 235A  
              _color_read_Green 230A                             l101 13EC                             l121 2576  
                           l122 2578                             l118 13EE                             l162 2714  
                           l171 27A6                             l323 2778                             l156 26EC  
                           l332 277C                             l236 247E                             l165 27B0  
                           l341 2612                             l174 279C                             l159 26EE  
                           l335 2790                             l239 1F32                             l168 27BA  
                           l177 24C0                             l607 1D82                             l480 273A  
                           l594 1C1E                             l971 212E                             l978 2136  
                           _abs 2502                             _pad 1FFE                             wreg 000FE8  
                          ?_abs 0013                            l1230 2208                            l1223 1A96  
                          l2200 1BB6                            l1216 16D2                            l2202 1BC8  
                          l1234 2538                            l2300 24BE                            l2204 1BCE  
                          l2220 1C56                            l2212 1C20                            l1260 27BC  
                          l2140 1F80                            l2132 1F34                            l1237 2540  
                          l1229 2200                            l2206 1BDE                            l2230 1CBE  
                          l2222 1C64                            l2214 1C24                            l2142 1FB6  
                          l2134 1F46                            l2150 2418                            l1190 20C2  
                          l2310 1458                            l1158 22B8                            l2208 1BFE  
                          l2232 1CCC                            l2240 1D32                            l2224 1C84  
                          l2216 1C32                            l2136 1F58                            l2152 241C  
                          l2160 25A2                            l2320 14B2                            l2312 1468  
                          l2304 13F0                            l2400 1950                            l1249 1FFC  
                          l1257 243C                            l1185 2044                            l2170 1A9C  
                          l2242 1D42                            l2234 1CFA                            l2226 1CA2  
                          l2218 1C52                            l2138 1F62                            l2146 23FA  
                          l1266 25AE                            l2154 257A                            l2250 200E  
                          l2330 14DE                            l2322 14C0                            l2314 146A  
                          l2306 1410                            l2410 1A18                            l2402 1974  
                          l2164 26EE                            l2180 1AFC                            l2172 1AAA  
                          l2244 1D62                            l2236 1D1A                            l2228 1CAA  
                          l2148 2406                            l2156 2586                            l1188 2086  
                          l2260 2064                            l2252 2022                            l2340 15EA  
                          l2332 1560                            l2324 14C6                            l2316 1484  
                          l1196 1490                            l2308 1438                            l2420 1A54  
                          l2412 1A26                            l2404 19BC                            l2500 2546  
                          l2166 26FE                            l2190 1B46                            l2182 1B00  
                          l2174 1ACA                            l2238 1D2C                            l2270 2502  
                          l2158 258A                            l2262 2068                            l2254 2030  
                          l2350 165E                            l2342 1608                            l2334 1566  
                          l2326 14CE                            l2318 14A0                            l1198 1498  
                          l2414 1A3A                            l2510 2732                            l2502 255C  
                          l2280 2798                            l2432 220A                            l2192 1B54  
                          l2184 1B0C                            l2176 1ACE                            l2168 1A98  
                          l2272 251C                            l2264 2096                            l2256 203C  
                          l2248 1FFE                            l2360 169A                            l2352 166E  
                          l2344 1622                            l2336 156C                            l2328 14D8  
                          l2408 19F4                            l2424 1A60                            l2440 21B0  
                          l2520 20E6                            l2504 2572                            l2600 0E50  
                          l2290 2482                            l2274 27A8                            l2282 279E  
                          l2450 26D4                            l2434 277C                            l2194 1B66  
                          l2186 1B2A                            l2178 1ADC                            l2266 20AA  
                          l2258 2050                            l2354 1674                            l2362 16AA  
                          l2346 163C                            l2338 15D0                            l2426 1A84  
                          l2418 1A46                            l2442 21BE                            l2530 2120  
                          l2522 20EE                            l2514 20C4                            l2610 0ED0  
                          l2602 0E94                            l2292 2486                            l2276 27AC  
                          l2284 27A2                            l2372 23AA                            l2380 2350  
                          l2452 26D6                            l2540 25BE                            l2436 278C  
                          l2196 1B94                            l2188 1B32                            l2356 1686  
                          l2348 164C                            l2444 21E4                            l2460 2614  
                          l2532 2122                            l2524 20FC                            l2516 20CC  
                          l2508 2716                            l2620 0F00                            l2612 0ED0  
                          l2604 0EA0                            l2700 247A                            l2294 248E  
                          l2286 27B2                            l2278 2794                            l2374 23F0  
                          l2366 22BA                            l2550 26B6                            l2454 26D8  
                          l2446 26C4                            l2542 25CE                            l2198 1BB4  
                          l2358 1692                            l2390 18E4                            l2438 21A8  
                          l2470 268A                            l2462 261A                            l2534 2128  
                          l2526 2102                            l2518 20DE                            l2630 0F44  
                          l2622 0F14                            l2614 0EE8                            l2606 0EAC  
                          l2702 247C                            l2710 1E92                            l2296 2496  
                          l2288 27B6                            l2384 235A                            l2368 2300  
                          l2456 26DA                            l2448 26CE                            l2544 25D8  
                          l2536 25B0                            l2392 1908                            l2480 227A  
                          l2552 2138                            l2560 1D9A                            l2472 2640  
                          l2464 2632                            l2528 2118                            l2640 0FC0  
                          l2632 0F54                            l2624 0F14                            l2616 0EF4  
                          l2608 0EBC                            l2712 1EA6                            l2704 1E62  
                          l2298 24BC                            l2386 23A0                            l2378 230A  
                          l2546 2698                            l2458 273E                            l2538 25B4  
                          l2490 25E4                            l2394 1916                            l2482 2282  
                          l2554 219A                            l2570 1DCE                            l2562 1DAA  
                          l2466 266C                            l2474 2646                            l2650 10F8  
                          l2642 1040                            l2634 0F68                            l2626 0F2C  
                          l2618 0F00                            l2714 1EB6                            l2706 1E6E  
                          l2730 2766                            l2548 269E                            l2492 25E8  
                          l2396 1928                            l2484 228A                            l2580 1DF2  
                          l2572 1DCE                            l2564 1DAA                            l2556 1D88  
                          l2468 2672                            l2476 265E                            l2660 1190  
                          l2652 1100                            l2644 1048                            l2636 0F7C  
                          l2628 0F38                            l2716 1ECA                            l2708 1E7E  
                          l2732 2768                            l2494 25F6                            l2398 192C  
                          l2486 22A6                            l2478 2268                            l2590 1E28  
                          l2582 1E04                            l2574 1DE0                            l2566 1DBC  
                          l2558 1D9A                            l2670 1250                            l2662 1210  
                          l2646 109C                            l2654 1108                            l2638 0F94  
                          l2734 2772                            l2910 17CC                            l2496 25FA  
                          l2592 1E28                            l2584 1E04                            l2576 1DE0  
                          l2568 1DBC                            l2680 1334                            l2672 127C  
                          l2656 1134                            l2648 10A4                            l2736 2774  
                          l2728 275C                            l2912 17D2                            l2904 179C  
                          l2840 16E8                            l2594 1E3A                            l2586 1E16  
                          l2578 1DF2                            l2498 2542                            l2682 133C  
                          l2674 12AC                            l2658 1188                            l2666 1218  
                          l2738 2776                            l2930 1834                            l2922 17FE  
                          l2914 17EE                            l2906 17A8                            l2850 1706  
                          l2842 16EC                            l2834 16D4                            l2596 1E3A  
                          l2588 1E16                            l2684 1368                            l2676 12B4  
                          l2668 1248                            l2940 1860                            l2932 1850  
                          l2924 180A                            l2916 17F4                            l2908 17B4  
                          l2860 1710                            l2852 1708                            l2844 1700  
                          l2836 16D8                            l2598 1E54                            l2686 13E8  
                          l2678 12E0                            l2694 243E                            l2950 18B2  
                          l2942 186C                            l2934 1856                            l2926 1816  
                          l2870 1716                            l2862 1710                            l2854 170A  
                          l2846 1702                            l2838 16DC                            ?_pad 0011  
                          l2696 244E                            l2952 18B8                            l2944 1878  
                          l2928 182E                            l2880 1732                            l2872 1716  
                          l2864 1716                            l2856 170C                            l2848 1704  
                          l2698 2466                            l2954 18BE                            l2946 1890  
                          l2890 1752                            l2866 1716                            l2858 170E  
                          l2948 1896                            l2892 176A                            l2956 18CA  
                          l2868 1716                            l2894 1770                            l2886 173A  
                          l2896 178C                            l2888 1746                            l2898 1792  
                          STR_1 0E01                            STR_2 0E3B                            STR_3 0E4B  
                          STR_4 0E35                            STR_5 0E41                            STR_6 0E22  
                          STR_7 0E46                            STR_8 0E1B                            STR_9 0E10  
                          u1100 2714                            u1101 2710                            u1110 1AAA  
                          u1030 1F46                            u1111 1AA6                            u1031 1F42  
                          u1120 1ADC                            u1200 1CA2                            u1040 1F58  
                          u1121 1AD8                            u1201 1C9E                            u1041 1F54  
                          u1210 1CCC                            u1050 1F80                            u1131 1B06  
                          u1211 1CC8                            u1051 1F7C                            u1140 1B2A  
                          u1220 1CFA                            u1060 1FB6                            u1141 1B26  
                          u1221 1CF6                            u1061 1FB2                            u1150 1B54  
                          u1230 1D42                            u1070 243C                            u1310 1420  
                          u1151 1B50                            u1231 1D3E                            u1071 2438  
                          u1311 141A                            u2007 1720                            u1160 1B94  
                          u1080 25A2                            u1240 200E                            u1400 1622  
                          u1320 1422                            u1161 1B90                            u1081 259E  
                          u1241 200A                            u1401 161E                            u2017 175C  
                          u1090 26FE                            u1170 1BDE                            u1250 2030  
                          u1410 163C                            u1330 1438                            u1091 26FA  
                          u1171 1BDA                            u1251 202C                            u1411 1638  
                          u1331 1434                            u2107 267C                            u2027 17BE  
                          u1308 24AC                            u1500 278C                            u1180 1C32  
                          u1260 2086                            u1420 164C                            u1340 1468  
                          u2117 25C4                            u1501 2788                            u1181 1C2E  
                          u1261 2082                            u1421 1648                            u1341 1464  
                          u2037 1820                            u1190 1C64                            u1270 2096  
                          u1430 165E                            u1350 1484                            u1510 2200  
                          u2127 26A8                            u1191 1C60                            u1271 2092  
                          u1431 165A                            u1351 1480                            u1511 21FC  
                          u2047 1882                            u1520 2612                            u1280 251C  
                          u1440 166E                            u1360 14B2                            u1600 1DBC  
                  _BAUD4CONbits 000EE9                            u1521 260E                            u1281 2518  
                          u1441 166A                            u1361 14AE                            u1601 1DB8  
                          u2057 0EDA                            _LATE 000F7D                            u1290 24AA  
                          u1450 1686                            u1370 14C0                            u1610 1DCE  
                          u1530 255C                            u1291 24A2                            u1451 1682  
                          u1371 14BC                            u1611 1DCA                            u1531 2558  
                          u2067 0F1E                            _LATG 000F7F                            u1380 15EA  
                          u1460 1908                            u1620 1DE0                            u1540 2572  
                          u1700 109C                            u1381 15E6                            u1461 1904  
                          u1621 1DDC                            u1541 256E                            u1701 1098  
                          u2077 0F86                            u1390 1608                            u1470 1950  
                          u1630 1DF2                            u1550 20DE                            u1710 10F8  
                          u1391 1604                            u1471 194C                            u1631 1DEE  
                          u2087 2624                            u1551 20DA                            u1711 10F4  
                          u1480 1974                            u1640 1E04                            u1560 20FC  
                          u1800 1368                            u1720 1134                            u1481 1970  
                          u1641 1E00                            u2097 2650                            u1561 20F8  
                          u1801 1364                            u1721 1130                            u1490 1A18  
                          u1650 1E16                            u1570 2118                            u1810 13E8  
                          u1730 1188                            _T2PR 000FBC                            u1491 1A14  
                          u1651 1E12                            u1571 2114                            u1811 13E4  
                          u1731 1184                            u1660 1E28                            u1580 1D9A  
                          u1740 1210                            u1661 1E24                            u1581 1D96  
                          u1741 120C                            u1670 1E3A                            u1590 1DAA  
                          u1750 1248                            u1671 1E36                            u1591 1DA6  
                          u1751 1244                            u1760 127C                            u1680 0FC0  
                          u1761 1278                            u1681 0FBC                            u1770 12AC  
                          u1690 1040                            u1771 12A8                            u1691 103C  
                          u1780 12E0                            u1781 12DC                            u1790 1334  
                          u1950 178C                            u1791 1330                            u1951 1788  
                          u1960 17EE                            u1961 17EA                            u1970 1850  
                          u1971 184C                            u1980 18B2                            u1981 18AE  
                          u1990 18DC                            u1991 18D8                            abs@a 0013  
                          _dbuf 013C                            _main 16D4                            _dtoa 13F0  
                          _prec 00F6                            _nout 00F2                            pad@i 0018  
                          pad@p 0015                            fsr1h 000FE2                            fsr2h 000FDA  
                          indf2 000FDF                            fsr1l 000FE1                            pad@w 001A  
                          fsr2l 000FD9                            prodh 000FF4                            prodl 000FF3  
                          start 0000                  ?_color_display 0058          __end_of_color_read_Red 230A  
                  ___param_bank 000000                  ?_color_predict 0001                           ??_abs 0015  
                         ??_pad 0017                 __end_of___aodiv 1C20                    main@complete 015C  
                         ?_main 0001                           ?_dtoa 001C                 __end_of___aomod 1D84  
                         _ADPCH 000F5F                           STR_10 0E29                           STR_11 0E2F  
                         STR_12 0E0A                           _LED_B 266C                           _LED_C 2698  
               __end_of___lwdiv 2138                           _LED_G 2640                           _LED_R 2614  
                  vfpfcnvrt@fmt 0042         __end_of_sendCharSerial4 2792      __end_of_I2C_2_Master_Start 27B2  
    __end_of_I2C_2_Master_Write 279E                 __end_of_compare 257A                    compare@lower 000E  
                         _flags 00F8                           _color 00FA                    compare@upper 0012  
                         _fputc 1F34                           _fputs 23FA                           pad@fp 0011  
                         _width 00F4                           _putch 27BC                           main@i 015D  
                         main@j 015F                           main@k 0161                           dtoa@d 001E  
                         dtoa@i 003E                           main@x 0163                           dtoa@n 0036  
                         dtoa@p 0030                           dtoa@s 0034                           dtoa@w 0032  
                         tablat 000FF5                           status 000FD8                 __end_of_sprintf 22BA  
              color_display@buf 0079         __end_of_color_read_Blue 23FA           _I2C_2_Master_RepStart 27B2  
               ?_color_read_Red 0005                 __initialization 24C2                    __end_of_main 18E4  
                  __end_of_dtoa 16D4            __end_of_detect_color 13F0                          ??_main 005A  
                        ??_dtoa 0026                   __activetblptr 000001                          ?_LED_B 000E  
                        ?_LED_C 000E                          ?_LED_G 000E                          ?_LED_R 000E  
                        LED_B@m 000E                          LED_C@m 000E                          LED_G@m 000E  
                        LED_R@m 000E          _initDCmotors_parameter 1E62                          ?_fputc 0001  
                        ?_fputs 000A                          _ADRESH 000F64                          ?_putch 0001  
                        _RC0PPS 000E62                          _RC4REG 000EE3                          _RE2PPS 000E74  
                        _RD5PPS 000E6F                          _RC7PPS 000E69                          _RD6PPS 000E70  
      __end_of_color_click_init 25E4                          _RX4PPS 000E15                          _TX4REG 000EE4  
               ??_color_display 005A                 ??_color_predict 0058                    vfprintf@cfmt 0056  
                     ??___aodiv 0011                       ??___aomod 0011                          ___wmul 2716  
                     ??___lwdiv 0005                   compare@result 0014                          clear_0 24DA  
                        clear_1 24E6                          isa$std 000001                          pad@buf 0013  
                        dtoa@fp 001C                          _strlen 257A                       ??_compare 0014  
                        fputc@c 0001                          fputs@c 000E                          fputs@i 000F  
                        fputs@s 000A                    __mediumconst 0000                          tblptrh 000FF7  
                        tblptrl 000FF6                          tblptru 000FF8                ?_sendCharSerial4 0001  
                   read_color@m 000C                          putch@c 0001                __end_of_vfprintf 220A  
             ??_initDCmotorsPWM 0003                       ??_sprintf 0058                      __accesstop 0060  
       __end_of__initialization 24F4        __end_of_color_read_Clear 23AA        __end_of_color_read_Green 235A  
        ?_I2C_2_Master_RepStart 0001              color_predict@color 00DD    initDCmotors_parameter@motorL 0001  
  initDCmotors_parameter@motorR 0003                   ___rparam_used 000001                   __end_of_LED_B 2698  
                 __end_of_LED_C 26C4                   __end_of_LED_G 266C                   __end_of_LED_R 2640  
              ?_color_read_Blue 0005                  __pcstackCOMRAM 0001                    __pidataBANK0 27BE  
                 __end_of_fputc 1FFE               detect_color@color 0025                   __end_of_fputs 243E  
                 __end_of_putch 27BE                         ??_LED_B 0010                         ??_LED_C 0010  
                       ??_LED_G 0010                         ??_LED_R 0010                         ??_fputc 0005  
                       ??_fputs 000E                         ??_putch 0001                      __pbssBANK0 00DE  
                    __pbssBANK1 0100                color_predict@buf 0079               _color_writetoaddr 273C  
                  _T2CLKCONbits 000FBF              ?_color_writetoaddr 0003                         ?___wmul 0008  
           ??_color_writetoaddr 0004                         ?_strlen 0001                         _SP4BRGH 000EE6  
                       _SP4BRGL 000EE5                         _PWM6DCH 000FA3                         _PWM7DCH 000FA0  
                       _SSP2ADD 000ED6                         _SSP2BUF 000ED5                    _detect_color 0E50  
        color_writetoaddr@value 0003                ??_color_read_Red 0007       __end_of_color_writetoaddr 275C  
                     _ADREFbits 000F58              _I2C_2_Master_Start 27A8                      _initUSART4 275C  
            _I2C_2_Master_Write 2792                         __Hparam 0000                         __Lparam 0000  
             color_read_Red@tmp 000A         sendStringSerial4@string 0002                         ___aodiv 1A98  
                       ___aomod 1C20             ?_I2C_2_Master_Start 0001                         ___lwdiv 20C4  
           ?_I2C_2_Master_Write 0001                       ?_vfprintf 0050                    __psmallconst 0E00  
                       __pcinit 24C2                         __ramtop 0E00                      _read_color 220A  
                       __ptext0 16D4                         __ptext1 275C                         __ptext2 1E62  
                       __ptext3 243E                         __ptext4 0E50                         __ptext5 2542  
                       __ptext6 2716                         __ptext7 20C4                         __ptext8 2614  
                       __ptext9 2640                         _compare 2542         ?_initDCmotors_parameter 0001  
                     _T2CONbits 000FBD                       _T2HLTbits 000FBE                   _RxBufWriteCnt 005F  
                       _sprintf 2268                         main@rgb 0179            ??_I2C_2_Master_Start 0002  
          ??_I2C_2_Master_Write 0002            end_of_initialization 24F4                         fputc@fp 0003  
                       fputs@fp 000C               ?_color_click_init 0001              ??_color_click_init 0005  
             __end_of_vfpfcnvrt 1A98                         postdec2 000FDD                         postinc0 000FEE  
                       postinc1 000FE6                         postinc2 000FDE                      ??_vfprintf 0056  
                       strlen@a 0003                         strlen@s 0001                 _initDCmotorsPWM 243E  
__end_of_initDCmotors_parameter 1F34                       _TRISAbits 000F81                       _TRISCbits 000F83  
                     _TRISDbits 000F84                       _TRISEbits 000F85                       _TRISFbits 000F86  
                     _TRISGbits 000F87        color_writetoaddr@address 0004         ??_I2C_2_Master_RepStart 0002  
             ?_color_read_Clear 0005                    _EUSART4RXbuf 00DE                    _EUSART4TXbuf 0100  
             ?_color_read_Green 0005                     ?_initUSART4 0001       sendCharSerial4@charToSend 0001  
         __end_of_color_display 21A8                      main@motorL 0165                      main@motorR 016F  
            ??_color_read_Clear 0007                  color_display@m 0058              ??_color_read_Green 0007  
                detect_color@BB 0023                  detect_color@BG 0028                  detect_color@GB 001D  
                detect_color@GG 0021                  detect_color@BR 0026                  detect_color@GR 001B  
                detect_color@RB 0019                  detect_color@RG 001F                  detect_color@RR 002A  
         __end_of_color_predict 1E62                     vfpfcnvrt@ap 0044                     vfpfcnvrt@fp 0040  
                   vfpfcnvrt@ll 0048                  __end_of___wmul 273C                     ?_read_color 000C  
                __end_of_strlen 25B0             color_read_Clear@tmp 000A             start_initialization 24C2  
                   __end_of_abs 2542                     __end_of_pad 20C4                   _TxBufWriteCnt 005D  
           color_read_Green@tmp 000A         __end_of_initDCmotorsPWM 2480                     vfprintf@fmt 0052  
                      ??___wmul 000C                     __pdataBANK0 00FA                        ??_strlen 0003  
                   __pbssCOMRAM 005C                   __pcstackBANK0 0060                   __pcstackBANK1 015C  
              ___aodiv@dividend 0001                ___lwdiv@dividend 0001                       _dtoa$2146 002E  
                      ?___aodiv 0001                        ?___aomod 0001                ___aodiv@quotient 0013  
                      ?___lwdiv 0001            I2C_2_Master_Read@ack 0003            I2C_2_Master_Read@tmp 0004  
                      ?_compare 000E                     __smallconst 0E00               _I2C_2_Master_Idle 26EE  
             _I2C_2_Master_Init 26C4               _I2C_2_Master_Read 2480               _I2C_2_Master_Stop 279E  
                  _RxBufReadCnt 005E              ?_I2C_2_Master_Idle 0001              ?_I2C_2_Master_Init 0001  
            ?_I2C_2_Master_Read 0001              ?_I2C_2_Master_Stop 0001                ___lwdiv@quotient 0005  
      initDCmotorsPWM@PWMperiod 0001                        ?_sprintf 0060               _sendStringSerial4 25E4  
           ??_I2C_2_Master_Idle 0001             ??_I2C_2_Master_Init 0001             ??_I2C_2_Master_Read 0002  
                ___wmul@product 000C                        _LATAbits 000F79             ??_I2C_2_Master_Stop 0002  
                      _LATCbits 000F7B                        _LATEbits 000F7D                        _LATFbits 000F7E  
                      _LATGbits 000F7F              ?_sendStringSerial4 0002                        _PIE4bits 000E2D  
                      _PIR4bits 000E37                ?_initDCmotorsPWM 0001               ??_sendCharSerial4 0001  
                      _SSP2CON2 000EDA             ??_sendStringSerial4 0004                        _SSP2STAT 000ED8  
                     _vfpfcnvrt 18E4                      _ADCON0bits 000F60       __end_of_I2C_2_Master_Idle 2716  
     __end_of_I2C_2_Master_Init 26EE       __end_of_I2C_2_Master_Read 24C2               ___wmul@multiplier 0008  
     __end_of_I2C_2_Master_Stop 27A8     I2C_2_Master_Write@data_byte 0002               ??_color_read_Blue 0007  
                 detect_color@m 0015                    _TxBufReadCnt 005C       __end_of_sendStringSerial4 2614  
 __end_of_I2C_2_Master_RepStart 27BC              color_read_Blue@tmp 000A                    ??_initUSART4 0001  
                      __Hrparam 0000                      vfprintf@ap 0054                        __Lrparam 0000  
                    vfprintf@fp 0050                    __Lsmallconst 0E00            compare@value2compare 0010  
                    ?_vfpfcnvrt 0040                    ??_read_color 000E                 ___aodiv@divisor 0009  
               ___aodiv@counter 0011                      _ANSELDbits 000EA7                      _ANSELFbits 000EB4  
                    sprintf@fmt 0062                 ___lwdiv@divisor 0003              __end_of_initUSART4 277A  
               ___lwdiv@counter 0007                        __ptext10 266C                        __ptext11 1D84  
                      __ptext20 1F34                        __ptext12 2138                        __ptext21 27BC  
                      __ptext13 2268                        __ptext30 2698                        __ptext22 2502  
                      __ptext14 21A8                        __ptext31 220A                        __ptext23 1C20  
                      __ptext15 18E4                        __ptext40 2480                        __ptext32 22BA  
                      __ptext24 1A98                        __ptext16 13F0                        __ptext41 26EE  
                      __ptext33 230A                        __ptext25 25E4                        __ptext17 1FFE  
                      __ptext34 235A                        __ptext26 277A                        __ptext18 257A  
                      __ptext35 23AA                        __ptext27 25B0                        __ptext19 23FA  
                      __ptext36 2792                        __ptext28 273C                        __ptext37 279E  
                      __ptext29 26C4                        __ptext38 27A8                        __ptext39 27B2  
                  _SSP2CON1bits 000ED9                    _SSP2CON2bits 000EDA              __end_of_read_color 2268  
                      isa$xinst 000000                      _RC4STAbits 000EE7                        _vfprintf 21A8  
              ___aomod@dividend 0001                   ?_detect_color 0015                     _PWM6CONbits 000FA4  
                   _PWM7CONbits 000FA1                       sprintf@ap 006C        ??_initDCmotors_parameter 0005  
               ___aomod@divisor 0009                     ??_vfpfcnvrt 0046                 ___aomod@counter 0011  
              _color_click_init 25B0                        sprintf@f 006E                        sprintf@s 0060  
                    _SSP2DATPPS 000E1D                      _SSP2CLKPPS 000E1C                  ??_detect_color 0017  
                    _TX4STAbits 000EE8                    ___aodiv@sign 0012                 _sendCharSerial4 277A  
                  ___aomod@sign 0012                   _color_display 2138  
