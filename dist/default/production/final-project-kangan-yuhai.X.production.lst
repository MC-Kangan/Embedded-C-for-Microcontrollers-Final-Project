

Microchip MPLAB XC8 Assembler V2.35 build 20211206165544 
                                                                                               Wed Mar 09 19:59:40 2022

Microchip MPLAB XC8 C Compiler v2.35 (Free license) build 20211206165544 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    30                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    31                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    32                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    33  0000                     
    34                           ; Version 2.35
    35                           ; Generated 05/05/2021 GMT
    36                           ; 
    37                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    38                           ; All rights reserved.
    39                           ; 
    40                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    41                           ; 
    42                           ; Redistribution and use in source and binary forms, with or without modification, are
    43                           ; permitted provided that the following conditions are met:
    44                           ; 
    45                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    46                           ;        conditions and the following disclaimer.
    47                           ; 
    48                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    49                           ;        of conditions and the following disclaimer in the documentation and/or other
    50                           ;        materials provided with the distribution. Publication is not required when
    51                           ;        this file is used in an embedded application.
    52                           ; 
    53                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    54                           ;        software without specific prior written permission.
    55                           ; 
    56                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    57                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    58                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    59                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    60                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    61                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    62                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    63                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    64                           ; 
    65                           ; 
    66                           ; Code-generator required, PIC18F67K40 Definitions
    67                           ; 
    68                           ; SFR Addresses
    69  0000                     
    70                           	psect	idataCOMRAM
    71  00152C                     __pidataCOMRAM:
    72                           	callstack 0
    73                           
    74                           ;initializer for _CALIBRATION_180
    75  00152C  28                 	db	40
    76                           
    77                           ;initializer for _SENSITIVITY
    78  00152D  0B                 	db	11
    79                           
    80                           	psect	smallconst
    81  000E00                     __psmallconst:
    82                           	callstack 0
    83  000E00  00                 	db	0
    84  000E01  0000               	dw	0
    85  000E03  4B00               	dw	19200
    86  000E05                     __end_of_toint:
    87                           	callstack 0
    88  0000                     _TRISFbits	set	3974
    89  0000                     _TX4REG	set	3812
    90  0000                     _RC4STAbits	set	3815
    91  0000                     _SP4BRGH	set	3814
    92  0000                     _TRISGbits	set	3975
    93  0000                     _TRISEbits	set	3973
    94  0000                     _SSP2CON2bits	set	3802
    95  0000                     _LATG	set	3967
    96  0000                     _LATE	set	3965
    97  0000                     _RX4PPS	set	3605
    98  0000                     _SSP2CLKPPS	set	3612
    99  0000                     _SSP2DATPPS	set	3613
   100  0000                     _ANSELDbits	set	3751
   101  0000                     _SSP2ADD	set	3798
   102  0000                     _SSP2CON1bits	set	3801
   103  0000                     _LATAbits	set	3961
   104  0000                     _LATFbits	set	3966
   105  0000                     _LATGbits	set	3967
   106  0000                     _TRISAbits	set	3969
   107  0000                     _TRISCbits	set	3971
   108  0000                     _TRISDbits	set	3972
   109  0000                     _LATCbits	set	3963
   110  0000                     _LATEbits	set	3965
   111  0000                     _RC4REG	set	3811
   112  0000                     _SP4BRGL	set	3813
   113  0000                     _TX4STAbits	set	3816
   114  0000                     _BAUD4CONbits	set	3817
   115  0000                     _SSP2CON2	set	3802
   116  0000                     _SSP2STAT	set	3800
   117  0000                     _ANSELFbits	set	3764
   118  0000                     _SSP2BUF	set	3797
   119  0000                     _PIE4bits	set	3629
   120  0000                     _PIR4bits	set	3639
   121  0000                     _RC0PPS	set	3682
   122  0000                     _RC7PPS	set	3689
   123  0000                     _RD5PPS	set	3695
   124  0000                     _RE2PPS	set	3700
   125  0000                     _RD6PPS	set	3696
   126  0000                     _PORTFbits	set	3982
   127  0000                     _T2PR	set	4028
   128  0000                     _T2CONbits	set	4029
   129  0000                     _PWM7DCH	set	4000
   130  0000                     _PWM6DCH	set	4003
   131  0000                     _T2CLKCONbits	set	4031
   132  0000                     _T2HLTbits	set	4030
   133  0000                     _PWM6CONbits	set	4004
   134  0000                     _PWM7CONbits	set	4001
   135  0000                     _ADREFbits	set	3928
   136  0000                     _ADPCH	set	3935
   137  0000                     _ADRESH	set	3940
   138  0000                     _ADCON0bits	set	3936
   139  000E05                     STR_1:
   140                           
   141                           ; BSR set to: 14
   142  000E05  25                 	db	37
   143  000E06  64                 	db	100	;'d'
   144  000E07  09                 	db	9
   145  000E08  25                 	db	37
   146  000E09  64                 	db	100	;'d'
   147  000E0A  09                 	db	9
   148  000E0B  25                 	db	37
   149  000E0C  64                 	db	100	;'d'
   150  000E0D  09                 	db	9
   151  000E0E  25                 	db	37
   152  000E0F  64                 	db	100	;'d'
   153  000E10  0D                 	db	13
   154  000E11  0A                 	db	10
   155  000E12  00                 	db	0
   156  000E13                     
   157                           ; BSR set to: 14
   158  000E13  4C                 	db	76	;'L'
   159  000E14  69                 	db	105	;'i'
   160  000E15  67                 	db	103	;'g'
   161  000E16  68                 	db	104	;'h'
   162  000E17  74                 	db	116	;'t'
   163  000E18  20                 	db	32
   164  000E19  62                 	db	98	;'b'
   165  000E1A  6C                 	db	108	;'l'
   166  000E1B  75                 	db	117	;'u'
   167  000E1C  65                 	db	101	;'e'
   168  000E1D  00                 	db	0
   169  000E1E                     
   170                           ; BSR set to: 14
   171  000E1E  4F                 	db	79	;'O'
   172  000E1F  72                 	db	114	;'r'
   173  000E20  61                 	db	97	;'a'
   174  000E21  6E                 	db	110	;'n'
   175  000E22  67                 	db	103	;'g'
   176  000E23  65                 	db	101	;'e'
   177  000E24  00                 	db	0
   178  000E25                     
   179                           ; BSR set to: 14
   180  000E25  59                 	db	89	;'Y'
   181  000E26  65                 	db	101	;'e'
   182  000E27  6C                 	db	108	;'l'
   183  000E28  6C                 	db	108	;'l'
   184  000E29  6F                 	db	111	;'o'
   185  000E2A  77                 	db	119	;'w'
   186  000E2B  00                 	db	0
   187  000E2C                     
   188                           ; BSR set to: 14
   189  000E2C  57                 	db	87	;'W'
   190  000E2D  68                 	db	104	;'h'
   191  000E2E  69                 	db	105	;'i'
   192  000E2F  74                 	db	116	;'t'
   193  000E30  65                 	db	101	;'e'
   194  000E31  00                 	db	0
   195  000E32                     
   196                           ; BSR set to: 14
   197  000E32  42                 	db	66	;'B'
   198  000E33  6C                 	db	108	;'l'
   199  000E34  61                 	db	97	;'a'
   200  000E35  63                 	db	99	;'c'
   201  000E36  6B                 	db	107	;'k'
   202  000E37  00                 	db	0
   203  000E38                     
   204                           ; BSR set to: 14
   205  000E38  47                 	db	71	;'G'
   206  000E39  72                 	db	114	;'r'
   207  000E3A  65                 	db	101	;'e'
   208  000E3B  65                 	db	101	;'e'
   209  000E3C  6E                 	db	110	;'n'
   210  000E3D  00                 	db	0
   211  000E3E                     
   212                           ; BSR set to: 14
   213  000E3E  45                 	db	69	;'E'
   214  000E3F  72                 	db	114	;'r'
   215  000E40  72                 	db	114	;'r'
   216  000E41  6F                 	db	111	;'o'
   217  000E42  72                 	db	114	;'r'
   218  000E43  00                 	db	0
   219  000E44                     
   220                           ; BSR set to: 14
   221  000E44  42                 	db	66	;'B'
   222  000E45  6C                 	db	108	;'l'
   223  000E46  75                 	db	117	;'u'
   224  000E47  65                 	db	101	;'e'
   225  000E48  00                 	db	0
   226  000E49                     
   227                           ; BSR set to: 14
   228  000E49  50                 	db	80	;'P'
   229  000E4A  69                 	db	105	;'i'
   230  000E4B  6E                 	db	110	;'n'
   231  000E4C  6B                 	db	107	;'k'
   232  000E4D  00                 	db	0
   233  000E4E                     
   234                           ; BSR set to: 14
   235  000E4E  52                 	db	82	;'R'
   236  000E4F  65                 	db	101	;'e'
   237  000E50  64                 	db	100	;'d'
   238  000E51  00                 	db	0
   239  000E52  00                 	db	0	; dummy byte at the end
   240  0000                     
   241                           ; #config settings
   242                           
   243                           	psect	cinit
   244  0013C8                     __pcinit:
   245                           	callstack 0
   246  0013C8                     start_initialization:
   247                           	callstack 0
   248  0013C8                     __initialization:
   249                           	callstack 0
   250                           
   251                           ; Initialize objects allocated to COMRAM (2 bytes)
   252                           ; load TBLPTR registers with __pidataCOMRAM
   253  0013C8  0E2C               	movlw	low __pidataCOMRAM
   254  0013CA  6EF6               	movwf	tblptrl,c
   255  0013CC  0E15               	movlw	high __pidataCOMRAM
   256  0013CE  6EF7               	movwf	tblptrh,c
   257  0013D0  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   258  0013D2  6EF8               	movwf	tblptru,c
   259  0013D4  0009               	tblrd		*+	;fetch initializer
   260  0013D6  CFF5 F057          	movff	tablat,__pdataCOMRAM
   261  0013DA  0009               	tblrd		*+	;fetch initializer
   262  0013DC  CFF5 F058          	movff	tablat,__pdataCOMRAM+1
   263                           
   264                           ; Clear objects allocated to BANK0 (80 bytes)
   265  0013E0  EE00  F060         	lfsr	0,__pbssBANK0
   266  0013E4  0E50               	movlw	80
   267  0013E6                     clear_0:
   268  0013E6  6AEE               	clrf	postinc0,c
   269  0013E8  06E8               	decf	wreg,f,c
   270  0013EA  E1FD               	bnz	clear_0
   271                           
   272                           ; Clear objects allocated to COMRAM (29 bytes)
   273  0013EC  EE00  F03A         	lfsr	0,__pbssCOMRAM
   274  0013F0  0E1D               	movlw	29
   275  0013F2                     clear_1:
   276  0013F2  6AEE               	clrf	postinc0,c
   277  0013F4  06E8               	decf	wreg,f,c
   278  0013F6  E1FD               	bnz	clear_1
   279  0013F8                     end_of_initialization:
   280                           	callstack 0
   281  0013F8                     __end_of__initialization:
   282                           	callstack 0
   283  0013F8  0E00               	movlw	low (__Lsmallconst shr (0+16))
   284  0013FA  6EF8               	movwf	tblptru,c
   285  0013FC  0E0E               	movlw	high __Lsmallconst
   286  0013FE  6EF7               	movwf	tblptrh,c
   287  001400  0100               	movlb	0
   288  001402  EF9D  F009         	goto	_main	;jump to C main() function
   289                           
   290                           	psect	bssCOMRAM
   291  00003A                     __pbssCOMRAM:
   292                           	callstack 0
   293  00003A                     _motorR:
   294                           	callstack 0
   295  00003A                     	ds	10
   296  000044                     _motorL:
   297                           	callstack 0
   298  000044                     	ds	10
   299  00004E                     	ds	4
   300  000052                     _color:
   301                           	callstack 0
   302  000052                     	ds	1
   303  000053                     _TxBufReadCnt:
   304                           	callstack 0
   305  000053                     	ds	1
   306  000054                     _TxBufWriteCnt:
   307                           	callstack 0
   308  000054                     	ds	1
   309  000055                     _RxBufReadCnt:
   310                           	callstack 0
   311  000055                     	ds	1
   312  000056                     _RxBufWriteCnt:
   313                           	callstack 0
   314  000056                     	ds	1
   315                           
   316                           	psect	dataCOMRAM
   317  000057                     __pdataCOMRAM:
   318                           	callstack 0
   319  000057                     _CALIBRATION_180:
   320                           	callstack 0
   321  000057                     	ds	1
   322  000058                     _SENSITIVITY:
   323                           	callstack 0
   324  000058                     	ds	1
   325                           
   326                           	psect	bssBANK0
   327  000060                     __pbssBANK0:
   328                           	callstack 0
   329  000060                     _EUSART4TXbuf:
   330                           	callstack 0
   331  000060                     	ds	60
   332  00009C                     _EUSART4RXbuf:
   333                           	callstack 0
   334  00009C                     	ds	20
   335                           
   336                           	psect	cstackCOMRAM
   337  000001                     __pcstackCOMRAM:
   338                           	callstack 0
   339  000001                     ??_I2C_2_Master_Idle:
   340  000001                     ?___wmul:
   341                           	callstack 0
   342  000001                     initDCmotorsPWM@PWMperiod:
   343                           	callstack 0
   344  000001                     initDCmotors_parameter@motorL:
   345                           	callstack 0
   346  000001                     ___wmul@multiplier:
   347                           	callstack 0
   348                           
   349                           ; 2 bytes @ 0x0
   350  000001                     	ds	1
   351  000002                     I2C_2_Master_Write@data_byte:
   352                           	callstack 0
   353                           
   354                           ; 1 bytes @ 0x1
   355  000002                     	ds	1
   356  000003                     color_writetoaddr@value:
   357                           	callstack 0
   358  000003                     initDCmotors_parameter@motorR:
   359                           	callstack 0
   360  000003                     ___wmul@multiplicand:
   361                           	callstack 0
   362                           
   363                           ; 2 bytes @ 0x2
   364  000003                     	ds	1
   365  000004                     color_writetoaddr@address:
   366                           	callstack 0
   367                           
   368                           ; 1 bytes @ 0x3
   369  000004                     	ds	1
   370  000005                     ??_color_click_init:
   371  000005                     ___wmul@product:
   372                           	callstack 0
   373                           
   374                           ; 2 bytes @ 0x4
   375  000005                     	ds	2
   376  000007                     ?___awdiv:
   377                           	callstack 0
   378  000007                     ___awdiv@dividend:
   379                           	callstack 0
   380                           
   381                           ; 2 bytes @ 0x6
   382  000007                     	ds	2
   383  000009                     ___awdiv@divisor:
   384                           	callstack 0
   385                           
   386                           ; 2 bytes @ 0x8
   387  000009                     	ds	2
   388  00000B                     ___awdiv@counter:
   389                           	callstack 0
   390                           
   391                           ; 1 bytes @ 0xA
   392  00000B                     	ds	1
   393  00000C                     ___awdiv@sign:
   394                           	callstack 0
   395                           
   396                           ; 1 bytes @ 0xB
   397  00000C                     	ds	1
   398  00000D                     ___awdiv@quotient:
   399                           	callstack 0
   400                           
   401                           ; 2 bytes @ 0xC
   402  00000D                     	ds	2
   403  00000F                     setMotorPWM@m:
   404                           	callstack 0
   405                           
   406                           ; 2 bytes @ 0xE
   407  00000F                     	ds	2
   408  000011                     ??_setMotorPWM:
   409                           
   410                           ; 1 bytes @ 0x10
   411  000011                     	ds	7
   412  000018                     setMotorPWM@PWMduty:
   413                           	callstack 0
   414                           
   415                           ; 2 bytes @ 0x17
   416  000018                     	ds	2
   417  00001A                     stop@mL:
   418                           	callstack 0
   419                           
   420                           ; 2 bytes @ 0x19
   421  00001A                     	ds	2
   422  00001C                     stop@mR:
   423                           	callstack 0
   424                           
   425                           ; 2 bytes @ 0x1B
   426  00001C                     	ds	2
   427  00001E                     ??_stop:
   428                           
   429                           ; 1 bytes @ 0x1D
   430  00001E                     	ds	2
   431  000020                     fullSpeedBack@mL:
   432                           	callstack 0
   433                           
   434                           ; 2 bytes @ 0x1F
   435  000020                     	ds	2
   436  000022                     fullSpeedBack@mR:
   437                           	callstack 0
   438                           
   439                           ; 2 bytes @ 0x21
   440  000022                     	ds	2
   441  000024                     ??_fullSpeedBack:
   442                           
   443                           ; 1 bytes @ 0x23
   444  000024                     	ds	2
   445  000026                     main@motorL:
   446                           	callstack 0
   447                           
   448                           ; 10 bytes @ 0x25
   449  000026                     	ds	10
   450  000030                     main@motorR:
   451                           	callstack 0
   452                           
   453                           ; 10 bytes @ 0x2F
   454  000030                     	ds	10
   455                           
   456 ;;
   457 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   458 ;;
   459 ;; *************** function _main *****************
   460 ;; Defined at:
   461 ;;		line 22 in file "main.c"
   462 ;; Parameters:    Size  Location     Type
   463 ;;		None
   464 ;; Auto vars:     Size  Location     Type
   465 ;;  white          18    0        struct white_card
   466 ;;  motorR         10   47[COMRAM] struct DC_motor
   467 ;;  motorL         10   37[COMRAM] struct DC_motor
   468 ;;  rgb             8    0        struct color_rgb
   469 ;;  complete        1    0        unsigned char 
   470 ;; Return value:  Size  Location     Type
   471 ;;                  1    wreg      void 
   472 ;; Registers used:
   473 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   474 ;; Tracked objects:
   475 ;;		On entry : 0/0
   476 ;;		On exit  : 0/0
   477 ;;		Unchanged: 0/0
   478 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   479 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   480 ;;      Locals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   481 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   482 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   483 ;;Total ram usage:       20 bytes
   484 ;; Hardware stack levels required when called: 4
   485 ;; This function calls:
   486 ;;		_I2C_2_Master_Init
   487 ;;		_color_click_init
   488 ;;		_fullSpeedBack
   489 ;;		_initDCmotorsPWM
   490 ;;		_initDCmotors_parameter
   491 ;;		_initUSART4
   492 ;;		_pin_init
   493 ;; This function is called by:
   494 ;;		Startup code after reset
   495 ;; This function uses a non-reentrant model
   496 ;;
   497                           
   498                           	psect	text0
   499  00133A                     __ptext0:
   500                           	callstack 0
   501  00133A                     _main:
   502                           	callstack 27
   503  00133A                     
   504                           ;main.c: 23:     I2C_2_Master_Init();
   505  00133A  EC1D  F00A         	call	_I2C_2_Master_Init	;wreg free
   506  00133E                     
   507                           ;main.c: 24:     color_click_init();
   508  00133E  EC03  F00A         	call	_color_click_init	;wreg free
   509  001342                     
   510                           ;main.c: 25:     initDCmotorsPWM(199);
   511  001342  0E00               	movlw	0
   512  001344  6E02               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
   513  001346  0EC7               	movlw	199
   514  001348  6E01               	movwf	initDCmotorsPWM@PWMperiod^0,c
   515  00134A  ECC3  F009         	call	_initDCmotorsPWM	;wreg free
   516  00134E                     
   517                           ;main.c: 27:     initUSART4();
   518  00134E  EC69  F00A         	call	_initUSART4	;wreg free
   519  001352                     
   520                           ;main.c: 29:     struct color_rgb rgb;;main.c: 30:     struct white_card white;;main.c: 
      +                          34:     struct DC_motor motorL, motorR;;main.c: 36:     initDCmotors_parameter(&motorL, 
      +                          &motorR);
   521  001352  0E26               	movlw	low main@motorL
   522  001354  6E01               	movwf	initDCmotors_parameter@motorL^0,c
   523  001356  0E00               	movlw	high main@motorL
   524  001358  6E02               	movwf	(initDCmotors_parameter@motorL+1)^0,c
   525  00135A  0E30               	movlw	low main@motorR
   526  00135C  6E03               	movwf	initDCmotors_parameter@motorR^0,c
   527  00135E  0E00               	movlw	high main@motorR
   528  001360  6E04               	movwf	(initDCmotors_parameter@motorR+1)^0,c
   529  001362  EC14  F008         	call	_initDCmotors_parameter	;wreg free
   530  001366                     
   531                           ;main.c: 37:     pin_init();
   532  001366  EC78  F00A         	call	_pin_init	;wreg free
   533  00136A                     
   534                           ;main.c: 44:     fullSpeedBack(&motorL, &motorR);
   535  00136A  0E26               	movlw	low main@motorL
   536  00136C  6E20               	movwf	fullSpeedBack@mL^0,c
   537  00136E  0E00               	movlw	high main@motorL
   538  001370  6E21               	movwf	(fullSpeedBack@mL+1)^0,c
   539  001372  0E30               	movlw	low main@motorR
   540  001374  6E22               	movwf	fullSpeedBack@mR^0,c
   541  001376  0E00               	movlw	high main@motorR
   542  001378  6E23               	movwf	(fullSpeedBack@mR+1)^0,c
   543  00137A  ECDF  F008         	call	_fullSpeedBack	;wreg free
   544  00137E                     l458:
   545  00137E  EFBF  F009         	goto	l458
   546  001382  EF00  F000         	goto	start
   547  001386                     __end_of_main:
   548                           	callstack 0
   549                           
   550 ;; *************** function _pin_init *****************
   551 ;; Defined at:
   552 ;;		line 24 in file "movement.c"
   553 ;; Parameters:    Size  Location     Type
   554 ;;		None
   555 ;; Auto vars:     Size  Location     Type
   556 ;;		None
   557 ;; Return value:  Size  Location     Type
   558 ;;                  1    wreg      void 
   559 ;; Registers used:
   560 ;;		None
   561 ;; Tracked objects:
   562 ;;		On entry : 0/0
   563 ;;		On exit  : 0/0
   564 ;;		Unchanged: 0/0
   565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   566 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   567 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   568 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   569 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   570 ;;Total ram usage:        0 bytes
   571 ;; Hardware stack levels used: 1
   572 ;; This function calls:
   573 ;;		Nothing
   574 ;; This function is called by:
   575 ;;		_main
   576 ;; This function uses a non-reentrant model
   577 ;;
   578                           
   579                           	psect	text1
   580  0014F0                     __ptext1:
   581                           	callstack 0
   582  0014F0                     _pin_init:
   583                           	callstack 30
   584  0014F0  8486               	bsf	134,2,c	;volatile
   585                           
   586                           ;movement.c: 26:     ANSELFbits.ANSELF2=0;
   587  0014F2  010E               	movlb	14	; () banked
   588  0014F4  95B4               	bcf	180,2,b	;volatile
   589                           
   590                           ;movement.c: 27:     TRISFbits.TRISF3=1;
   591  0014F6  8686               	bsf	134,3,c	;volatile
   592                           
   593                           ;movement.c: 28:     ANSELFbits.ANSELF3=0;
   594  0014F8  97B4               	bcf	180,3,b	;volatile
   595                           
   596                           ;movement.c: 30:     TRISFbits.TRISF6 = 0;
   597  0014FA  9C86               	bcf	134,6,c	;volatile
   598                           
   599                           ;movement.c: 31:     LATFbits.LATF6 = 0;
   600  0014FC  9C7E               	bcf	126,6,c	;volatile
   601                           
   602                           ;movement.c: 33:     TRISGbits.TRISG1 = 0;
   603  0014FE  9287               	bcf	135,1,c	;volatile
   604                           
   605                           ;movement.c: 34:     TRISFbits.TRISF7 = 0;
   606  001500  9E86               	bcf	134,7,c	;volatile
   607                           
   608                           ;movement.c: 35:     TRISAbits.TRISA4 = 0;
   609  001502  9881               	bcf	129,4,c	;volatile
   610                           
   611                           ;movement.c: 36:     LATGbits.LATG1 = 1;
   612  001504  827F               	bsf	127,1,c	;volatile
   613                           
   614                           ;movement.c: 37:     LATFbits.LATF7 = 1;
   615  001506  8E7E               	bsf	126,7,c	;volatile
   616                           
   617                           ;movement.c: 38:     LATAbits.LATA4 = 1;
   618  001508  8879               	bsf	121,4,c	;volatile
   619  00150A                     
   620                           ; BSR set to: 14
   621  00150A  0012               	return		;funcret
   622  00150C                     __end_of_pin_init:
   623                           	callstack 0
   624                           
   625 ;; *************** function _initUSART4 *****************
   626 ;; Defined at:
   627 ;;		line 4 in file "serial.c"
   628 ;; Parameters:    Size  Location     Type
   629 ;;		None
   630 ;; Auto vars:     Size  Location     Type
   631 ;;		None
   632 ;; Return value:  Size  Location     Type
   633 ;;                  1    wreg      void 
   634 ;; Registers used:
   635 ;;		wreg, status,2
   636 ;; Tracked objects:
   637 ;;		On entry : 0/0
   638 ;;		On exit  : 0/0
   639 ;;		Unchanged: 0/0
   640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   641 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   642 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   643 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   644 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   645 ;;Total ram usage:        0 bytes
   646 ;; Hardware stack levels used: 1
   647 ;; This function calls:
   648 ;;		Nothing
   649 ;; This function is called by:
   650 ;;		_main
   651 ;; This function uses a non-reentrant model
   652 ;;
   653                           
   654                           	psect	text2
   655  0014D2                     __ptext2:
   656                           	callstack 0
   657  0014D2                     _initUSART4:
   658                           	callstack 30
   659  0014D2                     
   660                           ;serial.c: 8:     RC0PPS = 0x12;
   661  0014D2  0E12               	movlw	18
   662  0014D4  010E               	movlb	14	; () banked
   663  0014D6  6F62               	movwf	98,b	;volatile
   664                           
   665                           ;serial.c: 9:     RX4PPS = 0x11;
   666  0014D8  0E11               	movlw	17
   667  0014DA  6F15               	movwf	21,b	;volatile
   668  0014DC                     
   669                           ; BSR set to: 14
   670                           ;serial.c: 11:     BAUD4CONbits.BRG16 = 0;
   671  0014DC  97E9               	bcf	233,3,b	;volatile
   672  0014DE                     
   673                           ; BSR set to: 14
   674                           ;serial.c: 12:     TX4STAbits.BRGH = 0;
   675  0014DE  95E8               	bcf	232,2,b	;volatile
   676                           
   677                           ;serial.c: 13:     SP4BRGL = 51;
   678  0014E0  0E33               	movlw	51
   679  0014E2  6FE5               	movwf	229,b	;volatile
   680                           
   681                           ;serial.c: 15:     SP4BRGH = 0;
   682  0014E4  0E00               	movlw	0
   683  0014E6  6FE6               	movwf	230,b	;volatile
   684  0014E8                     
   685                           ; BSR set to: 14
   686                           ;serial.c: 17:     RC4STAbits.CREN = 1;
   687  0014E8  89E7               	bsf	231,4,b	;volatile
   688  0014EA                     
   689                           ; BSR set to: 14
   690                           ;serial.c: 18:     TX4STAbits.TXEN = 1;
   691  0014EA  8BE8               	bsf	232,5,b	;volatile
   692  0014EC                     
   693                           ; BSR set to: 14
   694                           ;serial.c: 19:     RC4STAbits.SPEN = 1;
   695  0014EC  8FE7               	bsf	231,7,b	;volatile
   696  0014EE                     
   697                           ; BSR set to: 14
   698  0014EE  0012               	return		;funcret
   699  0014F0                     __end_of_initUSART4:
   700                           	callstack 0
   701                           
   702 ;; *************** function _initDCmotors_parameter *****************
   703 ;; Defined at:
   704 ;;		line 42 in file "dc_motor.c"
   705 ;; Parameters:    Size  Location     Type
   706 ;;  motorL          2    0[COMRAM] PTR struct DC_motor
   707 ;;		 -> main@motorL(10), 
   708 ;;  motorR          2    2[COMRAM] PTR struct DC_motor
   709 ;;		 -> main@motorR(10), 
   710 ;; Auto vars:     Size  Location     Type
   711 ;;		None
   712 ;; Return value:  Size  Location     Type
   713 ;;                  1    wreg      void 
   714 ;; Registers used:
   715 ;;		wreg, fsr2l, fsr2h, status,2, status,0
   716 ;; Tracked objects:
   717 ;;		On entry : 0/0
   718 ;;		On exit  : 0/0
   719 ;;		Unchanged: 0/0
   720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   721 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   722 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   723 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   724 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   725 ;;Total ram usage:        4 bytes
   726 ;; Hardware stack levels used: 1
   727 ;; This function calls:
   728 ;;		Nothing
   729 ;; This function is called by:
   730 ;;		_main
   731 ;; This function uses a non-reentrant model
   732 ;;
   733                           
   734                           	psect	text3
   735  001028                     __ptext3:
   736                           	callstack 0
   737  001028                     _initDCmotors_parameter:
   738                           	callstack 30
   739  001028                     
   740                           ;dc_motor.c: 44:     motorL->power = 0;
   741  001028  C001  FFD9         	movff	initDCmotors_parameter@motorL,fsr2l
   742  00102C  C002  FFDA         	movff	initDCmotors_parameter@motorL+1,fsr2h
   743  001030  0E00               	movlw	0
   744  001032  6EDF               	movwf	indf2,c
   745  001034                     
   746                           ;dc_motor.c: 45:     motorL->direction = 1;
   747  001034  EE20 F001          	lfsr	2,1
   748  001038  5001               	movf	initDCmotors_parameter@motorL^0,w,c
   749  00103A  26D9               	addwf	fsr2l,f,c
   750  00103C  5002               	movf	(initDCmotors_parameter@motorL+1)^0,w,c
   751  00103E  22DA               	addwfc	fsr2h,f,c
   752  001040  0E01               	movlw	1
   753  001042  6EDF               	movwf	indf2,c
   754  001044                     
   755                           ;dc_motor.c: 46:     motorL->dutyHighByte = (unsigned char *)(&PWM6DCH);
   756  001044  EE20 F002          	lfsr	2,2
   757  001048  5001               	movf	initDCmotors_parameter@motorL^0,w,c
   758  00104A  26D9               	addwf	fsr2l,f,c
   759  00104C  5002               	movf	(initDCmotors_parameter@motorL+1)^0,w,c
   760  00104E  22DA               	addwfc	fsr2h,f,c
   761  001050  0EA3               	movlw	163
   762  001052  6EDE               	movwf	postinc2,c
   763  001054  0E0F               	movlw	15
   764  001056  6EDD               	movwf	postdec2,c
   765  001058                     
   766                           ;dc_motor.c: 47:     motorL->dir_LAT = (unsigned char *)(&LATE);
   767  001058  EE20 F004          	lfsr	2,4
   768  00105C  5001               	movf	initDCmotors_parameter@motorL^0,w,c
   769  00105E  26D9               	addwf	fsr2l,f,c
   770  001060  5002               	movf	(initDCmotors_parameter@motorL+1)^0,w,c
   771  001062  22DA               	addwfc	fsr2h,f,c
   772  001064  0E7D               	movlw	125
   773  001066  6EDE               	movwf	postinc2,c
   774  001068  0E0F               	movlw	15
   775  00106A  6EDD               	movwf	postdec2,c
   776  00106C                     
   777                           ;dc_motor.c: 48:     motorL->dir_pin = 4;
   778  00106C  EE20 F006          	lfsr	2,6
   779  001070  5001               	movf	initDCmotors_parameter@motorL^0,w,c
   780  001072  26D9               	addwf	fsr2l,f,c
   781  001074  5002               	movf	(initDCmotors_parameter@motorL+1)^0,w,c
   782  001076  22DA               	addwfc	fsr2h,f,c
   783  001078  0E04               	movlw	4
   784  00107A  6EDF               	movwf	indf2,c
   785  00107C                     
   786                           ;dc_motor.c: 49:     motorL->PWMperiod = 199;
   787  00107C  EE20 F007          	lfsr	2,7
   788  001080  5001               	movf	initDCmotors_parameter@motorL^0,w,c
   789  001082  26D9               	addwf	fsr2l,f,c
   790  001084  5002               	movf	(initDCmotors_parameter@motorL+1)^0,w,c
   791  001086  22DA               	addwfc	fsr2h,f,c
   792  001088  0EC7               	movlw	199
   793  00108A  6EDE               	movwf	postinc2,c
   794  00108C  0E00               	movlw	0
   795  00108E  6EDD               	movwf	postdec2,c
   796  001090                     
   797                           ;dc_motor.c: 52:     motorR->power = 0;
   798  001090  C003  FFD9         	movff	initDCmotors_parameter@motorR,fsr2l
   799  001094  C004  FFDA         	movff	initDCmotors_parameter@motorR+1,fsr2h
   800  001098  0E00               	movlw	0
   801  00109A  6EDF               	movwf	indf2,c
   802                           
   803                           ;dc_motor.c: 53:     motorR->direction = 1;
   804  00109C  EE20 F001          	lfsr	2,1
   805  0010A0  5003               	movf	initDCmotors_parameter@motorR^0,w,c
   806  0010A2  26D9               	addwf	fsr2l,f,c
   807  0010A4  5004               	movf	(initDCmotors_parameter@motorR+1)^0,w,c
   808  0010A6  22DA               	addwfc	fsr2h,f,c
   809  0010A8  0E01               	movlw	1
   810  0010AA  6EDF               	movwf	indf2,c
   811                           
   812                           ;dc_motor.c: 54:     motorR->dutyHighByte = (unsigned char *)(&PWM7DCH);
   813  0010AC  EE20 F002          	lfsr	2,2
   814  0010B0  5003               	movf	initDCmotors_parameter@motorR^0,w,c
   815  0010B2  26D9               	addwf	fsr2l,f,c
   816  0010B4  5004               	movf	(initDCmotors_parameter@motorR+1)^0,w,c
   817  0010B6  22DA               	addwfc	fsr2h,f,c
   818  0010B8  0EA0               	movlw	160
   819  0010BA  6EDE               	movwf	postinc2,c
   820  0010BC  0E0F               	movlw	15
   821  0010BE  6EDD               	movwf	postdec2,c
   822                           
   823                           ;dc_motor.c: 55:     motorR->dir_LAT = (unsigned char *)(&LATG);
   824  0010C0  EE20 F004          	lfsr	2,4
   825  0010C4  5003               	movf	initDCmotors_parameter@motorR^0,w,c
   826  0010C6  26D9               	addwf	fsr2l,f,c
   827  0010C8  5004               	movf	(initDCmotors_parameter@motorR+1)^0,w,c
   828  0010CA  22DA               	addwfc	fsr2h,f,c
   829  0010CC  0E7F               	movlw	127
   830  0010CE  6EDE               	movwf	postinc2,c
   831  0010D0  0E0F               	movlw	15
   832  0010D2  6EDD               	movwf	postdec2,c
   833                           
   834                           ;dc_motor.c: 56:     motorR->dir_pin = 6;
   835  0010D4  EE20 F006          	lfsr	2,6
   836  0010D8  5003               	movf	initDCmotors_parameter@motorR^0,w,c
   837  0010DA  26D9               	addwf	fsr2l,f,c
   838  0010DC  5004               	movf	(initDCmotors_parameter@motorR+1)^0,w,c
   839  0010DE  22DA               	addwfc	fsr2h,f,c
   840  0010E0  0E06               	movlw	6
   841  0010E2  6EDF               	movwf	indf2,c
   842                           
   843                           ;dc_motor.c: 57:     motorR->PWMperiod = 199;
   844  0010E4  EE20 F007          	lfsr	2,7
   845  0010E8  5003               	movf	initDCmotors_parameter@motorR^0,w,c
   846  0010EA  26D9               	addwf	fsr2l,f,c
   847  0010EC  5004               	movf	(initDCmotors_parameter@motorR+1)^0,w,c
   848  0010EE  22DA               	addwfc	fsr2h,f,c
   849  0010F0  0EC7               	movlw	199
   850  0010F2  6EDE               	movwf	postinc2,c
   851  0010F4  0E00               	movlw	0
   852  0010F6  6EDD               	movwf	postdec2,c
   853  0010F8  0012               	return		;funcret
   854  0010FA                     __end_of_initDCmotors_parameter:
   855                           	callstack 0
   856                           
   857 ;; *************** function _initDCmotorsPWM *****************
   858 ;; Defined at:
   859 ;;		line 12 in file "dc_motor.c"
   860 ;; Parameters:    Size  Location     Type
   861 ;;  PWMperiod       2    0[COMRAM] int 
   862 ;; Auto vars:     Size  Location     Type
   863 ;;		None
   864 ;; Return value:  Size  Location     Type
   865 ;;                  1    wreg      void 
   866 ;; Registers used:
   867 ;;		wreg, status,2
   868 ;; Tracked objects:
   869 ;;		On entry : 0/0
   870 ;;		On exit  : 0/0
   871 ;;		Unchanged: 0/0
   872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   873 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   874 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   875 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   876 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   877 ;;Total ram usage:        2 bytes
   878 ;; Hardware stack levels used: 1
   879 ;; This function calls:
   880 ;;		Nothing
   881 ;; This function is called by:
   882 ;;		_main
   883 ;; This function uses a non-reentrant model
   884 ;;
   885                           
   886                           	psect	text4
   887  001386                     __ptext4:
   888                           	callstack 0
   889  001386                     _initDCmotorsPWM:
   890                           	callstack 30
   891  001386                     
   892                           ;dc_motor.c: 15:     TRISEbits.TRISE2=0;
   893  001386  9485               	bcf	133,2,c	;volatile
   894                           
   895                           ;dc_motor.c: 16:     TRISCbits.TRISC7=0;
   896  001388  9E83               	bcf	131,7,c	;volatile
   897                           
   898                           ;dc_motor.c: 17:     TRISGbits.TRISG6=0;
   899  00138A  9C87               	bcf	135,6,c	;volatile
   900                           
   901                           ;dc_motor.c: 18:     TRISEbits.TRISE4=0;
   902  00138C  9885               	bcf	133,4,c	;volatile
   903                           
   904                           ;dc_motor.c: 19:     LATEbits.LATE2=0;
   905  00138E  947D               	bcf	125,2,c	;volatile
   906                           
   907                           ;dc_motor.c: 20:     LATCbits.LATC7=0;
   908  001390  9E7B               	bcf	123,7,c	;volatile
   909                           
   910                           ;dc_motor.c: 21:     LATGbits.LATG6=0;
   911  001392  9C7F               	bcf	127,6,c	;volatile
   912                           
   913                           ;dc_motor.c: 22:     LATEbits.LATE4=0;
   914  001394  987D               	bcf	125,4,c	;volatile
   915  001396                     
   916                           ;dc_motor.c: 25:     T2CONbits.CKPS=0b011;
   917  001396  50BD               	movf	189,w,c	;volatile
   918  001398  0B8F               	andlw	-113
   919  00139A  0930               	iorlw	48
   920  00139C  6EBD               	movwf	189,c	;volatile
   921                           
   922                           ;dc_motor.c: 26:     T2HLTbits.MODE=0b00000;
   923  00139E  0EE0               	movlw	-32
   924  0013A0  16BE               	andwf	190,f,c	;volatile
   925                           
   926                           ;dc_motor.c: 27:     T2CLKCONbits.CS=0b0001;
   927  0013A2  50BF               	movf	191,w,c	;volatile
   928  0013A4  0BF0               	andlw	-16
   929  0013A6  0901               	iorlw	1
   930  0013A8  6EBF               	movwf	191,c	;volatile
   931                           
   932                           ;dc_motor.c: 30:     T2PR=200-1;
   933  0013AA  0EC7               	movlw	199
   934  0013AC  6EBC               	movwf	188,c	;volatile
   935  0013AE                     
   936                           ;dc_motor.c: 31:     T2CONbits.ON=1;
   937  0013AE  8EBD               	bsf	189,7,c	;volatile
   938                           
   939                           ;dc_motor.c: 33:     RE2PPS=0x0A;
   940  0013B0  0E0A               	movlw	10
   941  0013B2  010E               	movlb	14	; () banked
   942  0013B4  6F74               	movwf	116,b	;volatile
   943                           
   944                           ;dc_motor.c: 34:     RC7PPS=0x0B;
   945  0013B6  0E0B               	movlw	11
   946  0013B8  6F69               	movwf	105,b	;volatile
   947                           
   948                           ;dc_motor.c: 36:     PWM6DCH=0;
   949  0013BA  0E00               	movlw	0
   950  0013BC  6EA3               	movwf	163,c	;volatile
   951                           
   952                           ;dc_motor.c: 37:     PWM7DCH=0;
   953  0013BE  0E00               	movlw	0
   954  0013C0  6EA0               	movwf	160,c	;volatile
   955  0013C2                     
   956                           ; BSR set to: 14
   957                           ;dc_motor.c: 39:     PWM6CONbits.EN = 1;
   958  0013C2  8EA4               	bsf	164,7,c	;volatile
   959  0013C4                     
   960                           ; BSR set to: 14
   961                           ;dc_motor.c: 40:     PWM7CONbits.EN = 1;
   962  0013C4  8EA1               	bsf	161,7,c	;volatile
   963  0013C6                     
   964                           ; BSR set to: 14
   965  0013C6  0012               	return		;funcret
   966  0013C8                     __end_of_initDCmotorsPWM:
   967                           	callstack 0
   968                           
   969 ;; *************** function _fullSpeedBack *****************
   970 ;; Defined at:
   971 ;;		line 162 in file "dc_motor.c"
   972 ;; Parameters:    Size  Location     Type
   973 ;;  mL              2   31[COMRAM] PTR struct DC_motor
   974 ;;		 -> main@motorL(10), 
   975 ;;  mR              2   33[COMRAM] PTR struct DC_motor
   976 ;;		 -> main@motorR(10), 
   977 ;; Auto vars:     Size  Location     Type
   978 ;;		None
   979 ;; Return value:  Size  Location     Type
   980 ;;                  1    wreg      void 
   981 ;; Registers used:
   982 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   983 ;; Tracked objects:
   984 ;;		On entry : 0/0
   985 ;;		On exit  : 0/0
   986 ;;		Unchanged: 0/0
   987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   988 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   989 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   990 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   991 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   992 ;;Total ram usage:        6 bytes
   993 ;; Hardware stack levels used: 1
   994 ;; Hardware stack levels required when called: 3
   995 ;; This function calls:
   996 ;;		_setMotorPWM
   997 ;;		_stop
   998 ;; This function is called by:
   999 ;;		_main
  1000 ;; This function uses a non-reentrant model
  1001 ;;
  1002                           
  1003                           	psect	text5
  1004  0011BE                     __ptext5:
  1005                           	callstack 0
  1006  0011BE                     _fullSpeedBack:
  1007                           	callstack 27
  1008  0011BE                     
  1009                           ;dc_motor.c: 162: void fullSpeedBack(struct DC_motor *mL, struct DC_motor *mR);dc_motor.
      +                          c: 163: {;dc_motor.c: 164:     mL->direction=0;
  1010  0011BE  EE20 F001          	lfsr	2,1
  1011  0011C2  5020               	movf	fullSpeedBack@mL^0,w,c
  1012  0011C4  26D9               	addwf	fsr2l,f,c
  1013  0011C6  5021               	movf	(fullSpeedBack@mL+1)^0,w,c
  1014  0011C8  22DA               	addwfc	fsr2h,f,c
  1015  0011CA  0E00               	movlw	0
  1016  0011CC  6EDF               	movwf	indf2,c
  1017                           
  1018                           ;dc_motor.c: 165:     mR->direction=0;
  1019  0011CE  EE20 F001          	lfsr	2,1
  1020  0011D2  5022               	movf	fullSpeedBack@mR^0,w,c
  1021  0011D4  26D9               	addwf	fsr2l,f,c
  1022  0011D6  5023               	movf	(fullSpeedBack@mR+1)^0,w,c
  1023  0011D8  22DA               	addwfc	fsr2h,f,c
  1024  0011DA  0E00               	movlw	0
  1025  0011DC  6EDF               	movwf	indf2,c
  1026                           
  1027                           ;dc_motor.c: 166:     while (mL->power<50 && mR->power<50){
  1028  0011DE  EF10  F009         	goto	l2169
  1029  0011E2                     l2161:
  1030                           
  1031                           ;dc_motor.c: 167:         mL->power += 10;
  1032  0011E2  C020  FFD9         	movff	fullSpeedBack@mL,fsr2l
  1033  0011E6  C021  FFDA         	movff	fullSpeedBack@mL+1,fsr2h
  1034  0011EA  0E0A               	movlw	10
  1035  0011EC  26DF               	addwf	indf2,f,c
  1036                           
  1037                           ;dc_motor.c: 168:         mR->power += 10;
  1038  0011EE  C022  FFD9         	movff	fullSpeedBack@mR,fsr2l
  1039  0011F2  C023  FFDA         	movff	fullSpeedBack@mR+1,fsr2h
  1040  0011F6  0E0A               	movlw	10
  1041  0011F8  26DF               	addwf	indf2,f,c
  1042  0011FA                     
  1043                           ;dc_motor.c: 169:         setMotorPWM(mL);
  1044  0011FA  C020  F00F         	movff	fullSpeedBack@mL,setMotorPWM@m
  1045  0011FE  C021  F010         	movff	fullSpeedBack@mL+1,setMotorPWM@m+1
  1046  001202  EC2A  F007         	call	_setMotorPWM	;wreg free
  1047  001206                     
  1048                           ;dc_motor.c: 170:         setMotorPWM(mR);
  1049  001206  C022  F00F         	movff	fullSpeedBack@mR,setMotorPWM@m
  1050  00120A  C023  F010         	movff	fullSpeedBack@mR+1,setMotorPWM@m+1
  1051  00120E  EC2A  F007         	call	_setMotorPWM	;wreg free
  1052  001212                     
  1053                           ;dc_motor.c: 171:         _delay((unsigned long)((10)*(64000000/4000.0)));
  1054  001212  0ED0               	movlw	208
  1055  001214  6E24               	movwf	??_fullSpeedBack^0,c
  1056  001216  0ECA               	movlw	202
  1057  001218                     u1087:
  1058  001218  2EE8               	decfsz	wreg,f,c
  1059  00121A  D7FE               	bra	u1087
  1060  00121C  2E24               	decfsz	??_fullSpeedBack^0,f,c
  1061  00121E  D7FC               	bra	u1087
  1062  001220                     l2169:
  1063                           
  1064                           ;dc_motor.c: 166:     while (mL->power<50 && mR->power<50){
  1065  001220  C020  FFD9         	movff	fullSpeedBack@mL,fsr2l
  1066  001224  C021  FFDA         	movff	fullSpeedBack@mL+1,fsr2h
  1067  001228  0E32               	movlw	50
  1068  00122A  60DF               	cpfslt	indf2,c
  1069  00122C  EF1A  F009         	goto	u971
  1070  001230  EF1C  F009         	goto	u970
  1071  001234                     u971:
  1072  001234  EF28  F009         	goto	l2173
  1073  001238                     u970:
  1074  001238  C022  FFD9         	movff	fullSpeedBack@mR,fsr2l
  1075  00123C  C023  FFDA         	movff	fullSpeedBack@mR+1,fsr2h
  1076  001240  0E31               	movlw	49
  1077  001242  64DF               	cpfsgt	indf2,c
  1078  001244  EF26  F009         	goto	u981
  1079  001248  EF28  F009         	goto	u980
  1080  00124C                     u981:
  1081  00124C  EFF1  F008         	goto	l2161
  1082  001250                     u980:
  1083  001250                     l2173:
  1084                           
  1085                           ;dc_motor.c: 173:     _delay((unsigned long)((500)*(64000000/4000.0)));
  1086  001250  0E29               	movlw	41
  1087  001252  6E25               	movwf	(??_fullSpeedBack+1)^0,c
  1088  001254  0E96               	movlw	150
  1089  001256  6E24               	movwf	??_fullSpeedBack^0,c
  1090  001258  0E7F               	movlw	127
  1091  00125A                     u1097:
  1092  00125A  2EE8               	decfsz	wreg,f,c
  1093  00125C  D7FE               	bra	u1097
  1094  00125E  2E24               	decfsz	??_fullSpeedBack^0,f,c
  1095  001260  D7FC               	bra	u1097
  1096  001262  2E25               	decfsz	(??_fullSpeedBack+1)^0,f,c
  1097  001264  D7FA               	bra	u1097
  1098  001266  F000               	nop	
  1099  001268                     
  1100                           ;dc_motor.c: 174:     stop(mL,mR);
  1101  001268  C020  F01A         	movff	fullSpeedBack@mL,stop@mL
  1102  00126C  C021  F01B         	movff	fullSpeedBack@mL+1,stop@mL+1
  1103  001270  C022  F01C         	movff	fullSpeedBack@mR,stop@mR
  1104  001274  C023  F01D         	movff	fullSpeedBack@mR+1,stop@mR+1
  1105  001278  EC3F  F009         	call	_stop	;wreg free
  1106  00127C  0012               	return		;funcret
  1107  00127E                     __end_of_fullSpeedBack:
  1108                           	callstack 0
  1109                           
  1110 ;; *************** function _stop *****************
  1111 ;; Defined at:
  1112 ;;		line 84 in file "dc_motor.c"
  1113 ;; Parameters:    Size  Location     Type
  1114 ;;  mL              2   25[COMRAM] PTR struct DC_motor
  1115 ;;		 -> main@motorL(10), 
  1116 ;;  mR              2   27[COMRAM] PTR struct DC_motor
  1117 ;;		 -> main@motorR(10), 
  1118 ;; Auto vars:     Size  Location     Type
  1119 ;;		None
  1120 ;; Return value:  Size  Location     Type
  1121 ;;                  1    wreg      void 
  1122 ;; Registers used:
  1123 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1124 ;; Tracked objects:
  1125 ;;		On entry : 0/0
  1126 ;;		On exit  : 0/0
  1127 ;;		Unchanged: 0/0
  1128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1129 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1130 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1131 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1132 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1133 ;;Total ram usage:        6 bytes
  1134 ;; Hardware stack levels used: 1
  1135 ;; Hardware stack levels required when called: 2
  1136 ;; This function calls:
  1137 ;;		_setMotorPWM
  1138 ;; This function is called by:
  1139 ;;		_fullSpeedBack
  1140 ;;		_turnLeft
  1141 ;;		_turnRight
  1142 ;;		_fullSpeedAhead_test
  1143 ;; This function uses a non-reentrant model
  1144 ;;
  1145                           
  1146                           	psect	text6
  1147  00127E                     __ptext6:
  1148                           	callstack 0
  1149  00127E                     _stop:
  1150                           	callstack 27
  1151  00127E                     
  1152                           ;dc_motor.c: 84: void stop(struct DC_motor *mL, struct DC_motor *mR);dc_motor.c: 85: {;d
      +                          c_motor.c: 86:     while (mL->power >0 || mR->power >0){
  1153  00127E  EF78  F009         	goto	l2047
  1154  001282                     l2033:
  1155                           
  1156                           ;dc_motor.c: 87:         if (mL->power !=0){mL->power -= 5;}
  1157  001282  C01A  FFD9         	movff	stop@mL,fsr2l
  1158  001286  C01B  FFDA         	movff	stop@mL+1,fsr2h
  1159  00128A  50DF               	movf	indf2,w,c
  1160  00128C  B4D8               	btfsc	status,2,c
  1161  00128E  EF4B  F009         	goto	u831
  1162  001292  EF4D  F009         	goto	u830
  1163  001296                     u831:
  1164  001296  EF53  F009         	goto	l2037
  1165  00129A                     u830:
  1166  00129A  C01A  FFD9         	movff	stop@mL,fsr2l
  1167  00129E  C01B  FFDA         	movff	stop@mL+1,fsr2h
  1168  0012A2  0E05               	movlw	5
  1169  0012A4  5EDF               	subwf	indf2,f,c
  1170  0012A6                     l2037:
  1171                           
  1172                           ;dc_motor.c: 88:         if (mR->power !=0){mR->power -= 5;}
  1173  0012A6  C01C  FFD9         	movff	stop@mR,fsr2l
  1174  0012AA  C01D  FFDA         	movff	stop@mR+1,fsr2h
  1175  0012AE  50DF               	movf	indf2,w,c
  1176  0012B0  B4D8               	btfsc	status,2,c
  1177  0012B2  EF5D  F009         	goto	u841
  1178  0012B6  EF5F  F009         	goto	u840
  1179  0012BA                     u841:
  1180  0012BA  EF65  F009         	goto	l2041
  1181  0012BE                     u840:
  1182  0012BE  C01C  FFD9         	movff	stop@mR,fsr2l
  1183  0012C2  C01D  FFDA         	movff	stop@mR+1,fsr2h
  1184  0012C6  0E05               	movlw	5
  1185  0012C8  5EDF               	subwf	indf2,f,c
  1186  0012CA                     l2041:
  1187                           
  1188                           ;dc_motor.c: 89:         setMotorPWM(mL);
  1189  0012CA  C01A  F00F         	movff	stop@mL,setMotorPWM@m
  1190  0012CE  C01B  F010         	movff	stop@mL+1,setMotorPWM@m+1
  1191  0012D2  EC2A  F007         	call	_setMotorPWM	;wreg free
  1192  0012D6                     
  1193                           ;dc_motor.c: 90:         setMotorPWM(mR);
  1194  0012D6  C01C  F00F         	movff	stop@mR,setMotorPWM@m
  1195  0012DA  C01D  F010         	movff	stop@mR+1,setMotorPWM@m+1
  1196  0012DE  EC2A  F007         	call	_setMotorPWM	;wreg free
  1197  0012E2                     
  1198                           ;dc_motor.c: 91:         _delay((unsigned long)((10)*(64000000/4000.0)));
  1199  0012E2  0ED0               	movlw	208
  1200  0012E4  6E1E               	movwf	??_stop^0,c
  1201  0012E6  0ECA               	movlw	202
  1202  0012E8                     u1107:
  1203  0012E8  2EE8               	decfsz	wreg,f,c
  1204  0012EA  D7FE               	bra	u1107
  1205  0012EC  2E1E               	decfsz	??_stop^0,f,c
  1206  0012EE  D7FC               	bra	u1107
  1207  0012F0                     l2047:
  1208                           
  1209                           ;dc_motor.c: 86:     while (mL->power >0 || mR->power >0){
  1210  0012F0  C01A  FFD9         	movff	stop@mL,fsr2l
  1211  0012F4  C01B  FFDA         	movff	stop@mL+1,fsr2h
  1212  0012F8  50DF               	movf	indf2,w,c
  1213  0012FA  A4D8               	btfss	status,2,c
  1214  0012FC  EF82  F009         	goto	u851
  1215  001300  EF84  F009         	goto	u850
  1216  001304                     u851:
  1217  001304  EF41  F009         	goto	l2033
  1218  001308                     u850:
  1219  001308  C01C  FFD9         	movff	stop@mR,fsr2l
  1220  00130C  C01D  FFDA         	movff	stop@mR+1,fsr2h
  1221  001310  50DF               	movf	indf2,w,c
  1222  001312  A4D8               	btfss	status,2,c
  1223  001314  EF8E  F009         	goto	u861
  1224  001318  EF90  F009         	goto	u860
  1225  00131C                     u861:
  1226  00131C  EF41  F009         	goto	l2033
  1227  001320                     u860:
  1228  001320                     
  1229                           ;dc_motor.c: 93:     _delay((unsigned long)((500)*(64000000/4000.0)));
  1230  001320  0E29               	movlw	41
  1231  001322  6E1F               	movwf	(??_stop+1)^0,c
  1232  001324  0E96               	movlw	150
  1233  001326  6E1E               	movwf	??_stop^0,c
  1234  001328  0E7F               	movlw	127
  1235  00132A                     u1117:
  1236  00132A  2EE8               	decfsz	wreg,f,c
  1237  00132C  D7FE               	bra	u1117
  1238  00132E  2E1E               	decfsz	??_stop^0,f,c
  1239  001330  D7FC               	bra	u1117
  1240  001332  2E1F               	decfsz	(??_stop+1)^0,f,c
  1241  001334  D7FA               	bra	u1117
  1242  001336  F000               	nop	
  1243  001338  0012               	return		;funcret
  1244  00133A                     __end_of_stop:
  1245                           	callstack 0
  1246                           
  1247 ;; *************** function _setMotorPWM *****************
  1248 ;; Defined at:
  1249 ;;		line 61 in file "dc_motor.c"
  1250 ;; Parameters:    Size  Location     Type
  1251 ;;  m               2   14[COMRAM] PTR struct DC_motor
  1252 ;;		 -> main@motorR(10), main@motorL(10), 
  1253 ;; Auto vars:     Size  Location     Type
  1254 ;;  PWMduty         2   23[COMRAM] int 
  1255 ;; Return value:  Size  Location     Type
  1256 ;;                  1    wreg      void 
  1257 ;; Registers used:
  1258 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1259 ;; Tracked objects:
  1260 ;;		On entry : 0/0
  1261 ;;		On exit  : 0/0
  1262 ;;		Unchanged: 0/0
  1263 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1264 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1265 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1266 ;;      Temps:          7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1267 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1268 ;;Total ram usage:       11 bytes
  1269 ;; Hardware stack levels used: 1
  1270 ;; Hardware stack levels required when called: 1
  1271 ;; This function calls:
  1272 ;;		___awdiv
  1273 ;;		___wmul
  1274 ;; This function is called by:
  1275 ;;		_stop
  1276 ;;		_fullSpeedBack
  1277 ;;		_turnLeft
  1278 ;;		_turnRight
  1279 ;;		_fullSpeedAhead
  1280 ;; This function uses a non-reentrant model
  1281 ;;
  1282                           
  1283                           	psect	text7
  1284  000E54                     __ptext7:
  1285                           	callstack 0
  1286  000E54                     _setMotorPWM:
  1287                           	callstack 27
  1288  000E54                     
  1289                           ;dc_motor.c: 61: void setMotorPWM(struct DC_motor *m);dc_motor.c: 62: {;dc_motor.c: 63: 
      +                           int PWMduty;;dc_motor.c: 65:  if (m->direction){
  1290  000E54  EE20 F001          	lfsr	2,1
  1291  000E58  500F               	movf	setMotorPWM@m^0,w,c
  1292  000E5A  26D9               	addwf	fsr2l,f,c
  1293  000E5C  5010               	movf	(setMotorPWM@m+1)^0,w,c
  1294  000E5E  22DA               	addwfc	fsr2h,f,c
  1295  000E60  50DF               	movf	indf2,w,c
  1296  000E62  B4D8               	btfsc	status,2,c
  1297  000E64  EF36  F007         	goto	u791
  1298  000E68  EF38  F007         	goto	u790
  1299  000E6C                     u791:
  1300  000E6C  EF69  F007         	goto	l2019
  1301  000E70                     u790:
  1302  000E70                     
  1303                           ;dc_motor.c: 67:   PWMduty=m->PWMperiod - ((int)(m->power)*(m->PWMperiod))/100;
  1304  000E70  C00F  FFD9         	movff	setMotorPWM@m,fsr2l
  1305  000E74  C010  FFDA         	movff	setMotorPWM@m+1,fsr2h
  1306  000E78  50DF               	movf	indf2,w,c
  1307  000E7A  6E11               	movwf	??_setMotorPWM^0,c
  1308  000E7C  5011               	movf	??_setMotorPWM^0,w,c
  1309  000E7E  6E01               	movwf	___wmul@multiplier^0,c
  1310  000E80  6A02               	clrf	(___wmul@multiplier+1)^0,c
  1311  000E82  EE20 F007          	lfsr	2,7
  1312  000E86  500F               	movf	setMotorPWM@m^0,w,c
  1313  000E88  26D9               	addwf	fsr2l,f,c
  1314  000E8A  5010               	movf	(setMotorPWM@m+1)^0,w,c
  1315  000E8C  22DA               	addwfc	fsr2h,f,c
  1316  000E8E  CFDE F003          	movff	postinc2,___wmul@multiplicand
  1317  000E92  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
  1318  000E96  EC46  F00A         	call	___wmul	;wreg free
  1319  000E9A  C001  F007         	movff	?___wmul,___awdiv@dividend
  1320  000E9E  C002  F008         	movff	?___wmul+1,___awdiv@dividend+1
  1321  000EA2  0E00               	movlw	0
  1322  000EA4  6E0A               	movwf	(___awdiv@divisor+1)^0,c
  1323  000EA6  0E64               	movlw	100
  1324  000EA8  6E09               	movwf	___awdiv@divisor^0,c
  1325  000EAA  EC7D  F008         	call	___awdiv	;wreg free
  1326  000EAE  EE20 F007          	lfsr	2,7
  1327  000EB2  500F               	movf	setMotorPWM@m^0,w,c
  1328  000EB4  26D9               	addwf	fsr2l,f,c
  1329  000EB6  5010               	movf	(setMotorPWM@m+1)^0,w,c
  1330  000EB8  22DA               	addwfc	fsr2h,f,c
  1331  000EBA  CFDE F012          	movff	postinc2,??_setMotorPWM+1
  1332  000EBE  CFDD F013          	movff	postdec2,??_setMotorPWM+2
  1333  000EC2  5007               	movf	?___awdiv^0,w,c
  1334  000EC4  5C12               	subwf	(??_setMotorPWM+1)^0,w,c
  1335  000EC6  6E18               	movwf	setMotorPWM@PWMduty^0,c
  1336  000EC8  5008               	movf	(?___awdiv+1)^0,w,c
  1337  000ECA  5813               	subwfb	(??_setMotorPWM+2)^0,w,c
  1338  000ECC  6E19               	movwf	(setMotorPWM@PWMduty+1)^0,c
  1339                           
  1340                           ;dc_motor.c: 68:  }
  1341  000ECE  EF8C  F007         	goto	l2021
  1342  000ED2                     l2019:
  1343                           
  1344                           ;dc_motor.c: 71:   PWMduty=((int)(m->power)*(m->PWMperiod))/100;
  1345  000ED2  C00F  FFD9         	movff	setMotorPWM@m,fsr2l
  1346  000ED6  C010  FFDA         	movff	setMotorPWM@m+1,fsr2h
  1347  000EDA  50DF               	movf	indf2,w,c
  1348  000EDC  6E11               	movwf	??_setMotorPWM^0,c
  1349  000EDE  5011               	movf	??_setMotorPWM^0,w,c
  1350  000EE0  6E01               	movwf	___wmul@multiplier^0,c
  1351  000EE2  6A02               	clrf	(___wmul@multiplier+1)^0,c
  1352  000EE4  EE20 F007          	lfsr	2,7
  1353  000EE8  500F               	movf	setMotorPWM@m^0,w,c
  1354  000EEA  26D9               	addwf	fsr2l,f,c
  1355  000EEC  5010               	movf	(setMotorPWM@m+1)^0,w,c
  1356  000EEE  22DA               	addwfc	fsr2h,f,c
  1357  000EF0  CFDE F003          	movff	postinc2,___wmul@multiplicand
  1358  000EF4  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
  1359  000EF8  EC46  F00A         	call	___wmul	;wreg free
  1360  000EFC  C001  F007         	movff	?___wmul,___awdiv@dividend
  1361  000F00  C002  F008         	movff	?___wmul+1,___awdiv@dividend+1
  1362  000F04  0E00               	movlw	0
  1363  000F06  6E0A               	movwf	(___awdiv@divisor+1)^0,c
  1364  000F08  0E64               	movlw	100
  1365  000F0A  6E09               	movwf	___awdiv@divisor^0,c
  1366  000F0C  EC7D  F008         	call	___awdiv	;wreg free
  1367  000F10  C007  F018         	movff	?___awdiv,setMotorPWM@PWMduty
  1368  000F14  C008  F019         	movff	?___awdiv+1,setMotorPWM@PWMduty+1
  1369  000F18                     l2021:
  1370                           
  1371                           ;dc_motor.c: 74:  *(m->dutyHighByte) = PWMduty;
  1372  000F18  EE20 F002          	lfsr	2,2
  1373  000F1C  500F               	movf	setMotorPWM@m^0,w,c
  1374  000F1E  26D9               	addwf	fsr2l,f,c
  1375  000F20  5010               	movf	(setMotorPWM@m+1)^0,w,c
  1376  000F22  22DA               	addwfc	fsr2h,f,c
  1377  000F24  CFDE F011          	movff	postinc2,??_setMotorPWM
  1378  000F28  CFDD F012          	movff	postdec2,??_setMotorPWM+1
  1379  000F2C  C011  FFD9         	movff	??_setMotorPWM,fsr2l
  1380  000F30  C012  FFDA         	movff	??_setMotorPWM+1,fsr2h
  1381  000F34  C018  FFDF         	movff	setMotorPWM@PWMduty,indf2
  1382  000F38                     
  1383                           ;dc_motor.c: 76:  if (m->direction){
  1384  000F38  EE20 F001          	lfsr	2,1
  1385  000F3C  500F               	movf	setMotorPWM@m^0,w,c
  1386  000F3E  26D9               	addwf	fsr2l,f,c
  1387  000F40  5010               	movf	(setMotorPWM@m+1)^0,w,c
  1388  000F42  22DA               	addwfc	fsr2h,f,c
  1389  000F44  50DF               	movf	indf2,w,c
  1390  000F46  B4D8               	btfsc	status,2,c
  1391  000F48  EFA8  F007         	goto	u801
  1392  000F4C  EFAA  F007         	goto	u800
  1393  000F50                     u801:
  1394  000F50  EFDF  F007         	goto	l2027
  1395  000F54                     u800:
  1396  000F54                     
  1397                           ;dc_motor.c: 77:   *(m->dir_LAT) = *(m->dir_LAT) | (1<<(m->dir_pin));
  1398  000F54  EE20 F004          	lfsr	2,4
  1399  000F58  500F               	movf	setMotorPWM@m^0,w,c
  1400  000F5A  26D9               	addwf	fsr2l,f,c
  1401  000F5C  5010               	movf	(setMotorPWM@m+1)^0,w,c
  1402  000F5E  22DA               	addwfc	fsr2h,f,c
  1403  000F60  CFDE F011          	movff	postinc2,??_setMotorPWM
  1404  000F64  CFDD F012          	movff	postdec2,??_setMotorPWM+1
  1405  000F68  C011  FFD9         	movff	??_setMotorPWM,fsr2l
  1406  000F6C  C012  FFDA         	movff	??_setMotorPWM+1,fsr2h
  1407  000F70  EE10 F004          	lfsr	1,4
  1408  000F74  500F               	movf	setMotorPWM@m^0,w,c
  1409  000F76  26E1               	addwf	fsr1l,f,c
  1410  000F78  5010               	movf	(setMotorPWM@m+1)^0,w,c
  1411  000F7A  22E2               	addwfc	fsr1h,f,c
  1412  000F7C  CFE6 F013          	movff	postinc1,??_setMotorPWM+2
  1413  000F80  CFE5 F014          	movff	postdec1,??_setMotorPWM+3
  1414  000F84  C013  FFE1         	movff	??_setMotorPWM+2,fsr1l
  1415  000F88  C014  FFE2         	movff	??_setMotorPWM+3,fsr1h
  1416  000F8C  50E7               	movf	indf1,w,c
  1417  000F8E  6E15               	movwf	(??_setMotorPWM+4)^0,c
  1418  000F90  EE10 F006          	lfsr	1,6
  1419  000F94  500F               	movf	setMotorPWM@m^0,w,c
  1420  000F96  26E1               	addwf	fsr1l,f,c
  1421  000F98  5010               	movf	(setMotorPWM@m+1)^0,w,c
  1422  000F9A  22E2               	addwfc	fsr1h,f,c
  1423  000F9C  50E7               	movf	indf1,w,c
  1424  000F9E  6E16               	movwf	(??_setMotorPWM+5)^0,c
  1425  000FA0  0E01               	movlw	1
  1426  000FA2  6E17               	movwf	(??_setMotorPWM+6)^0,c
  1427  000FA4  2A16               	incf	(??_setMotorPWM+5)^0,f,c
  1428  000FA6  EFD7  F007         	goto	u814
  1429  000FAA                     u815:
  1430  000FAA  90D8               	bcf	status,0,c
  1431  000FAC  3617               	rlcf	(??_setMotorPWM+6)^0,f,c
  1432  000FAE                     u814:
  1433  000FAE  2E16               	decfsz	(??_setMotorPWM+5)^0,f,c
  1434  000FB0  EFD5  F007         	goto	u815
  1435  000FB4  5017               	movf	(??_setMotorPWM+6)^0,w,c
  1436  000FB6  1015               	iorwf	(??_setMotorPWM+4)^0,w,c
  1437  000FB8  6EDF               	movwf	indf2,c
  1438                           
  1439                           ;dc_motor.c: 78:  } else {
  1440  000FBA  EF13  F008         	goto	l273
  1441  000FBE                     l2027:
  1442                           
  1443                           ;dc_motor.c: 79:   *(m->dir_LAT) = *(m->dir_LAT) & (~(1<<(m->dir_pin)));
  1444  000FBE  EE20 F004          	lfsr	2,4
  1445  000FC2  500F               	movf	setMotorPWM@m^0,w,c
  1446  000FC4  26D9               	addwf	fsr2l,f,c
  1447  000FC6  5010               	movf	(setMotorPWM@m+1)^0,w,c
  1448  000FC8  22DA               	addwfc	fsr2h,f,c
  1449  000FCA  CFDE F011          	movff	postinc2,??_setMotorPWM
  1450  000FCE  CFDD F012          	movff	postdec2,??_setMotorPWM+1
  1451  000FD2  C011  FFD9         	movff	??_setMotorPWM,fsr2l
  1452  000FD6  C012  FFDA         	movff	??_setMotorPWM+1,fsr2h
  1453  000FDA  EE10 F004          	lfsr	1,4
  1454  000FDE  500F               	movf	setMotorPWM@m^0,w,c
  1455  000FE0  26E1               	addwf	fsr1l,f,c
  1456  000FE2  5010               	movf	(setMotorPWM@m+1)^0,w,c
  1457  000FE4  22E2               	addwfc	fsr1h,f,c
  1458  000FE6  CFE6 F013          	movff	postinc1,??_setMotorPWM+2
  1459  000FEA  CFE5 F014          	movff	postdec1,??_setMotorPWM+3
  1460  000FEE  C013  FFE1         	movff	??_setMotorPWM+2,fsr1l
  1461  000FF2  C014  FFE2         	movff	??_setMotorPWM+3,fsr1h
  1462  000FF6  50E7               	movf	indf1,w,c
  1463  000FF8  6E15               	movwf	(??_setMotorPWM+4)^0,c
  1464  000FFA  EE10 F006          	lfsr	1,6
  1465  000FFE  500F               	movf	setMotorPWM@m^0,w,c
  1466  001000  26E1               	addwf	fsr1l,f,c
  1467  001002  5010               	movf	(setMotorPWM@m+1)^0,w,c
  1468  001004  22E2               	addwfc	fsr1h,f,c
  1469  001006  50E7               	movf	indf1,w,c
  1470  001008  6E16               	movwf	(??_setMotorPWM+5)^0,c
  1471  00100A  0E01               	movlw	1
  1472  00100C  6E17               	movwf	(??_setMotorPWM+6)^0,c
  1473  00100E  2A16               	incf	(??_setMotorPWM+5)^0,f,c
  1474  001010  EF0C  F008         	goto	u824
  1475  001014                     u825:
  1476  001014  90D8               	bcf	status,0,c
  1477  001016  3617               	rlcf	(??_setMotorPWM+6)^0,f,c
  1478  001018                     u824:
  1479  001018  2E16               	decfsz	(??_setMotorPWM+5)^0,f,c
  1480  00101A  EF0A  F008         	goto	u825
  1481  00101E  5017               	movf	(??_setMotorPWM+6)^0,w,c
  1482  001020  0AFF               	xorlw	255
  1483  001022  1415               	andwf	(??_setMotorPWM+4)^0,w,c
  1484  001024  6EDF               	movwf	indf2,c
  1485  001026                     l273:
  1486  001026  0012               	return		;funcret
  1487  001028                     __end_of_setMotorPWM:
  1488                           	callstack 0
  1489                           
  1490 ;; *************** function ___wmul *****************
  1491 ;; Defined at:
  1492 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\Umul16.c"
  1493 ;; Parameters:    Size  Location     Type
  1494 ;;  multiplier      2    0[COMRAM] unsigned int 
  1495 ;;  multiplicand    2    2[COMRAM] unsigned int 
  1496 ;; Auto vars:     Size  Location     Type
  1497 ;;  product         2    4[COMRAM] unsigned int 
  1498 ;; Return value:  Size  Location     Type
  1499 ;;                  2    0[COMRAM] unsigned int 
  1500 ;; Registers used:
  1501 ;;		wreg, status,2, status,0, prodl, prodh
  1502 ;; Tracked objects:
  1503 ;;		On entry : 0/0
  1504 ;;		On exit  : 0/0
  1505 ;;		Unchanged: 0/0
  1506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1507 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1508 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1509 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1510 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1511 ;;Total ram usage:        6 bytes
  1512 ;; Hardware stack levels used: 1
  1513 ;; This function calls:
  1514 ;;		Nothing
  1515 ;; This function is called by:
  1516 ;;		_setMotorPWM
  1517 ;; This function uses a non-reentrant model
  1518 ;;
  1519                           
  1520                           	psect	text8
  1521  00148C                     __ptext8:
  1522                           	callstack 0
  1523  00148C                     ___wmul:
  1524                           	callstack 27
  1525  00148C  5001               	movf	___wmul@multiplier^0,w,c
  1526  00148E  0203               	mulwf	___wmul@multiplicand^0,c
  1527  001490  CFF3 F005          	movff	prodl,___wmul@product
  1528  001494  CFF4 F006          	movff	prodh,___wmul@product+1
  1529  001498  5001               	movf	___wmul@multiplier^0,w,c
  1530  00149A  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  1531  00149C  50F3               	movf	243,w,c
  1532  00149E  2606               	addwf	(___wmul@product+1)^0,f,c
  1533  0014A0  5002               	movf	(___wmul@multiplier+1)^0,w,c
  1534  0014A2  0203               	mulwf	___wmul@multiplicand^0,c
  1535  0014A4  50F3               	movf	243,w,c
  1536  0014A6  2606               	addwf	(___wmul@product+1)^0,f,c
  1537  0014A8  C005  F001         	movff	___wmul@product,?___wmul
  1538  0014AC  C006  F002         	movff	___wmul@product+1,?___wmul+1
  1539  0014B0  0012               	return		;funcret
  1540  0014B2                     __end_of___wmul:
  1541                           	callstack 0
  1542                           
  1543 ;; *************** function ___awdiv *****************
  1544 ;; Defined at:
  1545 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\awdiv.c"
  1546 ;; Parameters:    Size  Location     Type
  1547 ;;  dividend        2    6[COMRAM] int 
  1548 ;;  divisor         2    8[COMRAM] int 
  1549 ;; Auto vars:     Size  Location     Type
  1550 ;;  quotient        2   12[COMRAM] int 
  1551 ;;  sign            1   11[COMRAM] unsigned char 
  1552 ;;  counter         1   10[COMRAM] unsigned char 
  1553 ;; Return value:  Size  Location     Type
  1554 ;;                  2    6[COMRAM] int 
  1555 ;; Registers used:
  1556 ;;		wreg, status,2, status,0
  1557 ;; Tracked objects:
  1558 ;;		On entry : 0/0
  1559 ;;		On exit  : 0/0
  1560 ;;		Unchanged: 0/0
  1561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1562 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1563 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1564 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1565 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1566 ;;Total ram usage:        8 bytes
  1567 ;; Hardware stack levels used: 1
  1568 ;; This function calls:
  1569 ;;		Nothing
  1570 ;; This function is called by:
  1571 ;;		_setMotorPWM
  1572 ;; This function uses a non-reentrant model
  1573 ;;
  1574                           
  1575                           	psect	text9
  1576  0010FA                     __ptext9:
  1577                           	callstack 0
  1578  0010FA                     ___awdiv:
  1579                           	callstack 27
  1580  0010FA  0E00               	movlw	0
  1581  0010FC  6E0C               	movwf	___awdiv@sign^0,c
  1582  0010FE  BE0A               	btfsc	(___awdiv@divisor+1)^0,7,c
  1583  001100  EF86  F008         	goto	u730
  1584  001104  EF84  F008         	goto	u731
  1585  001108                     u731:
  1586  001108  EF8C  F008         	goto	l1979
  1587  00110C                     u730:
  1588  00110C  6C09               	negf	___awdiv@divisor^0,c
  1589  00110E  1E0A               	comf	(___awdiv@divisor+1)^0,f,c
  1590  001110  B0D8               	btfsc	status,0,c
  1591  001112  2A0A               	incf	(___awdiv@divisor+1)^0,f,c
  1592  001114  0E01               	movlw	1
  1593  001116  6E0C               	movwf	___awdiv@sign^0,c
  1594  001118                     l1979:
  1595  001118  BE08               	btfsc	(___awdiv@dividend+1)^0,7,c
  1596  00111A  EF93  F008         	goto	u740
  1597  00111E  EF91  F008         	goto	u741
  1598  001122                     u741:
  1599  001122  EF99  F008         	goto	l1985
  1600  001126                     u740:
  1601  001126  6C07               	negf	___awdiv@dividend^0,c
  1602  001128  1E08               	comf	(___awdiv@dividend+1)^0,f,c
  1603  00112A  B0D8               	btfsc	status,0,c
  1604  00112C  2A08               	incf	(___awdiv@dividend+1)^0,f,c
  1605  00112E  0E01               	movlw	1
  1606  001130  1A0C               	xorwf	___awdiv@sign^0,f,c
  1607  001132                     l1985:
  1608  001132  0E00               	movlw	0
  1609  001134  6E0E               	movwf	(___awdiv@quotient+1)^0,c
  1610  001136  0E00               	movlw	0
  1611  001138  6E0D               	movwf	___awdiv@quotient^0,c
  1612  00113A  5009               	movf	___awdiv@divisor^0,w,c
  1613  00113C  100A               	iorwf	(___awdiv@divisor+1)^0,w,c
  1614  00113E  B4D8               	btfsc	status,2,c
  1615  001140  EFA4  F008         	goto	u751
  1616  001144  EFA6  F008         	goto	u750
  1617  001148                     u751:
  1618  001148  EFCE  F008         	goto	l2007
  1619  00114C                     u750:
  1620  00114C  0E01               	movlw	1
  1621  00114E  6E0B               	movwf	___awdiv@counter^0,c
  1622  001150  EFAE  F008         	goto	l1993
  1623  001154                     l1991:
  1624  001154  90D8               	bcf	status,0,c
  1625  001156  3609               	rlcf	___awdiv@divisor^0,f,c
  1626  001158  360A               	rlcf	(___awdiv@divisor+1)^0,f,c
  1627  00115A  2A0B               	incf	___awdiv@counter^0,f,c
  1628  00115C                     l1993:
  1629  00115C  AE0A               	btfss	(___awdiv@divisor+1)^0,7,c
  1630  00115E  EFB3  F008         	goto	u761
  1631  001162  EFB5  F008         	goto	u760
  1632  001166                     u761:
  1633  001166  EFAA  F008         	goto	l1991
  1634  00116A                     u760:
  1635  00116A                     l1995:
  1636  00116A  90D8               	bcf	status,0,c
  1637  00116C  360D               	rlcf	___awdiv@quotient^0,f,c
  1638  00116E  360E               	rlcf	(___awdiv@quotient+1)^0,f,c
  1639  001170  5009               	movf	___awdiv@divisor^0,w,c
  1640  001172  5C07               	subwf	___awdiv@dividend^0,w,c
  1641  001174  500A               	movf	(___awdiv@divisor+1)^0,w,c
  1642  001176  5808               	subwfb	(___awdiv@dividend+1)^0,w,c
  1643  001178  A0D8               	btfss	status,0,c
  1644  00117A  EFC1  F008         	goto	u771
  1645  00117E  EFC3  F008         	goto	u770
  1646  001182                     u771:
  1647  001182  EFC8  F008         	goto	l2003
  1648  001186                     u770:
  1649  001186  5009               	movf	___awdiv@divisor^0,w,c
  1650  001188  5E07               	subwf	___awdiv@dividend^0,f,c
  1651  00118A  500A               	movf	(___awdiv@divisor+1)^0,w,c
  1652  00118C  5A08               	subwfb	(___awdiv@dividend+1)^0,f,c
  1653  00118E  800D               	bsf	___awdiv@quotient^0,0,c
  1654  001190                     l2003:
  1655  001190  90D8               	bcf	status,0,c
  1656  001192  320A               	rrcf	(___awdiv@divisor+1)^0,f,c
  1657  001194  3209               	rrcf	___awdiv@divisor^0,f,c
  1658  001196  2E0B               	decfsz	___awdiv@counter^0,f,c
  1659  001198  EFB5  F008         	goto	l1995
  1660  00119C                     l2007:
  1661  00119C  500C               	movf	___awdiv@sign^0,w,c
  1662  00119E  B4D8               	btfsc	status,2,c
  1663  0011A0  EFD4  F008         	goto	u781
  1664  0011A4  EFD6  F008         	goto	u780
  1665  0011A8                     u781:
  1666  0011A8  EFDA  F008         	goto	l2011
  1667  0011AC                     u780:
  1668  0011AC  6C0D               	negf	___awdiv@quotient^0,c
  1669  0011AE  1E0E               	comf	(___awdiv@quotient+1)^0,f,c
  1670  0011B0  B0D8               	btfsc	status,0,c
  1671  0011B2  2A0E               	incf	(___awdiv@quotient+1)^0,f,c
  1672  0011B4                     l2011:
  1673  0011B4  C00D  F007         	movff	___awdiv@quotient,?___awdiv
  1674  0011B8  C00E  F008         	movff	___awdiv@quotient+1,?___awdiv+1
  1675  0011BC  0012               	return		;funcret
  1676  0011BE                     __end_of___awdiv:
  1677                           	callstack 0
  1678                           
  1679 ;; *************** function _color_click_init *****************
  1680 ;; Defined at:
  1681 ;;		line 15 in file "color.c"
  1682 ;; Parameters:    Size  Location     Type
  1683 ;;		None
  1684 ;; Auto vars:     Size  Location     Type
  1685 ;;		None
  1686 ;; Return value:  Size  Location     Type
  1687 ;;                  1    wreg      void 
  1688 ;; Registers used:
  1689 ;;		wreg, status,2, status,0, cstack
  1690 ;; Tracked objects:
  1691 ;;		On entry : 0/0
  1692 ;;		On exit  : 0/0
  1693 ;;		Unchanged: 0/0
  1694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1695 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1696 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1697 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1698 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1699 ;;Total ram usage:        1 bytes
  1700 ;; Hardware stack levels used: 1
  1701 ;; Hardware stack levels required when called: 3
  1702 ;; This function calls:
  1703 ;;		_I2C_2_Master_Init
  1704 ;;		_color_writetoaddr
  1705 ;; This function is called by:
  1706 ;;		_main
  1707 ;; This function uses a non-reentrant model
  1708 ;;
  1709                           
  1710                           	psect	text10
  1711  001406                     __ptext10:
  1712                           	callstack 0
  1713  001406                     _color_click_init:
  1714                           	callstack 27
  1715  001406                     
  1716                           ;color.c: 18:     I2C_2_Master_Init();
  1717  001406  EC1D  F00A         	call	_I2C_2_Master_Init	;wreg free
  1718  00140A                     
  1719                           ;color.c: 21:   color_writetoaddr(0x00, 0x01);
  1720  00140A  0E01               	movlw	1
  1721  00140C  6E03               	movwf	color_writetoaddr@value^0,c
  1722  00140E  0E00               	movlw	0
  1723  001410  EC59  F00A         	call	_color_writetoaddr
  1724  001414                     
  1725                           ;color.c: 22:     _delay((unsigned long)((3)*(64000000/4000.0)));
  1726  001414  0E3F               	movlw	63
  1727  001416  6E05               	movwf	??_color_click_init^0,c
  1728  001418  0E55               	movlw	85
  1729  00141A                     u1127:
  1730  00141A  2EE8               	decfsz	wreg,f,c
  1731  00141C  D7FE               	bra	u1127
  1732  00141E  2E05               	decfsz	??_color_click_init^0,f,c
  1733  001420  D7FC               	bra	u1127
  1734  001422  F000               	nop	
  1735  001424                     
  1736                           ;color.c: 25:  color_writetoaddr(0x00, 0x03);
  1737  001424  0E03               	movlw	3
  1738  001426  6E03               	movwf	color_writetoaddr@value^0,c
  1739  001428  0E00               	movlw	0
  1740  00142A  EC59  F00A         	call	_color_writetoaddr
  1741  00142E                     
  1742                           ;color.c: 28:  color_writetoaddr(0x01, 0xD5);
  1743  00142E  0ED5               	movlw	213
  1744  001430  6E03               	movwf	color_writetoaddr@value^0,c
  1745  001432  0E01               	movlw	1
  1746  001434  EC59  F00A         	call	_color_writetoaddr
  1747  001438  0012               	return		;funcret
  1748  00143A                     __end_of_color_click_init:
  1749                           	callstack 0
  1750                           
  1751 ;; *************** function _color_writetoaddr *****************
  1752 ;; Defined at:
  1753 ;;		line 31 in file "color.c"
  1754 ;; Parameters:    Size  Location     Type
  1755 ;;  address         1    wreg     unsigned char 
  1756 ;;  value           1    2[COMRAM] unsigned char 
  1757 ;; Auto vars:     Size  Location     Type
  1758 ;;  address         1    3[COMRAM] unsigned char 
  1759 ;; Return value:  Size  Location     Type
  1760 ;;                  1    wreg      void 
  1761 ;; Registers used:
  1762 ;;		wreg, status,2, status,0, cstack
  1763 ;; Tracked objects:
  1764 ;;		On entry : 0/0
  1765 ;;		On exit  : 0/0
  1766 ;;		Unchanged: 0/0
  1767 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1768 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1769 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1770 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1771 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1772 ;;Total ram usage:        2 bytes
  1773 ;; Hardware stack levels used: 1
  1774 ;; Hardware stack levels required when called: 2
  1775 ;; This function calls:
  1776 ;;		_I2C_2_Master_Start
  1777 ;;		_I2C_2_Master_Stop
  1778 ;;		_I2C_2_Master_Write
  1779 ;; This function is called by:
  1780 ;;		_color_click_init
  1781 ;; This function uses a non-reentrant model
  1782 ;;
  1783                           
  1784                           	psect	text11
  1785  0014B2                     __ptext11:
  1786                           	callstack 0
  1787  0014B2                     _color_writetoaddr:
  1788                           	callstack 27
  1789                           
  1790                           ;incstack = 0
  1791                           ;color_writetoaddr@address stored from wreg
  1792  0014B2  6E04               	movwf	color_writetoaddr@address^0,c
  1793  0014B4                     
  1794                           ;color.c: 32:     I2C_2_Master_Start();
  1795  0014B4  EC91  F00A         	call	_I2C_2_Master_Start	;wreg free
  1796                           
  1797                           ;color.c: 33:     I2C_2_Master_Write(0x52 | 0x00);
  1798  0014B8  0E52               	movlw	82
  1799  0014BA  EC86  F00A         	call	_I2C_2_Master_Write
  1800                           
  1801                           ;color.c: 34:     I2C_2_Master_Write(0x80 | address);
  1802  0014BE  5004               	movf	color_writetoaddr@address^0,w,c
  1803  0014C0  0980               	iorlw	128
  1804  0014C2  EC86  F00A         	call	_I2C_2_Master_Write
  1805                           
  1806                           ;color.c: 35:     I2C_2_Master_Write(value);
  1807  0014C6  5003               	movf	color_writetoaddr@value^0,w,c
  1808  0014C8  EC86  F00A         	call	_I2C_2_Master_Write
  1809                           
  1810                           ;color.c: 36:     I2C_2_Master_Stop();
  1811  0014CC  EC8C  F00A         	call	_I2C_2_Master_Stop	;wreg free
  1812  0014D0  0012               	return		;funcret
  1813  0014D2                     __end_of_color_writetoaddr:
  1814                           	callstack 0
  1815                           
  1816 ;; *************** function _I2C_2_Master_Write *****************
  1817 ;; Defined at:
  1818 ;;		line 45 in file "i2c.c"
  1819 ;; Parameters:    Size  Location     Type
  1820 ;;  data_byte       1    wreg     unsigned char 
  1821 ;; Auto vars:     Size  Location     Type
  1822 ;;  data_byte       1    1[COMRAM] unsigned char 
  1823 ;; Return value:  Size  Location     Type
  1824 ;;                  1    wreg      void 
  1825 ;; Registers used:
  1826 ;;		wreg, status,2, status,0, cstack
  1827 ;; Tracked objects:
  1828 ;;		On entry : 0/0
  1829 ;;		On exit  : 0/0
  1830 ;;		Unchanged: 0/0
  1831 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1832 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1833 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1834 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1835 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1836 ;;Total ram usage:        1 bytes
  1837 ;; Hardware stack levels used: 1
  1838 ;; Hardware stack levels required when called: 1
  1839 ;; This function calls:
  1840 ;;		_I2C_2_Master_Idle
  1841 ;; This function is called by:
  1842 ;;		_color_writetoaddr
  1843 ;;		_color_read_Red
  1844 ;;		_color_read_Blue
  1845 ;;		_color_read_Green
  1846 ;;		_color_read_Clear
  1847 ;; This function uses a non-reentrant model
  1848 ;;
  1849                           
  1850                           	psect	text12
  1851  00150C                     __ptext12:
  1852                           	callstack 0
  1853  00150C                     _I2C_2_Master_Write:
  1854                           	callstack 27
  1855                           
  1856                           ;incstack = 0
  1857                           ;I2C_2_Master_Write@data_byte stored from wreg
  1858  00150C  6E02               	movwf	I2C_2_Master_Write@data_byte^0,c
  1859  00150E                     
  1860                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  1861  00150E  EC32  F00A         	call	_I2C_2_Master_Idle	;wreg free
  1862  001512                     
  1863                           ;i2c.c: 48:   SSP2BUF = data_byte;
  1864  001512  C002  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  1865  001516  0012               	return		;funcret
  1866  001518                     __end_of_I2C_2_Master_Write:
  1867                           	callstack 0
  1868                           
  1869 ;; *************** function _I2C_2_Master_Stop *****************
  1870 ;; Defined at:
  1871 ;;		line 39 in file "i2c.c"
  1872 ;; Parameters:    Size  Location     Type
  1873 ;;		None
  1874 ;; Auto vars:     Size  Location     Type
  1875 ;;		None
  1876 ;; Return value:  Size  Location     Type
  1877 ;;                  1    wreg      void 
  1878 ;; Registers used:
  1879 ;;		wreg, status,2, status,0, cstack
  1880 ;; Tracked objects:
  1881 ;;		On entry : 0/0
  1882 ;;		On exit  : 0/0
  1883 ;;		Unchanged: 0/0
  1884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1885 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1886 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1887 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1888 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1889 ;;Total ram usage:        0 bytes
  1890 ;; Hardware stack levels used: 1
  1891 ;; Hardware stack levels required when called: 1
  1892 ;; This function calls:
  1893 ;;		_I2C_2_Master_Idle
  1894 ;; This function is called by:
  1895 ;;		_color_writetoaddr
  1896 ;;		_color_read_Red
  1897 ;;		_color_read_Blue
  1898 ;;		_color_read_Green
  1899 ;;		_color_read_Clear
  1900 ;; This function uses a non-reentrant model
  1901 ;;
  1902                           
  1903                           	psect	text13
  1904  001518                     __ptext13:
  1905                           	callstack 0
  1906  001518                     _I2C_2_Master_Stop:
  1907                           	callstack 27
  1908  001518                     
  1909                           ;i2c.c: 41:   I2C_2_Master_Idle();
  1910  001518  EC32  F00A         	call	_I2C_2_Master_Idle	;wreg free
  1911  00151C                     
  1912                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  1913  00151C  010E               	movlb	14	; () banked
  1914  00151E  85DA               	bsf	218,2,b	;volatile
  1915  001520                     
  1916                           ; BSR set to: 14
  1917  001520  0012               	return		;funcret
  1918  001522                     __end_of_I2C_2_Master_Stop:
  1919                           	callstack 0
  1920                           
  1921 ;; *************** function _I2C_2_Master_Start *****************
  1922 ;; Defined at:
  1923 ;;		line 27 in file "i2c.c"
  1924 ;; Parameters:    Size  Location     Type
  1925 ;;		None
  1926 ;; Auto vars:     Size  Location     Type
  1927 ;;		None
  1928 ;; Return value:  Size  Location     Type
  1929 ;;                  1    wreg      void 
  1930 ;; Registers used:
  1931 ;;		wreg, status,2, status,0, cstack
  1932 ;; Tracked objects:
  1933 ;;		On entry : 0/0
  1934 ;;		On exit  : 0/0
  1935 ;;		Unchanged: 0/0
  1936 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1937 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1938 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1939 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1940 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1941 ;;Total ram usage:        0 bytes
  1942 ;; Hardware stack levels used: 1
  1943 ;; Hardware stack levels required when called: 1
  1944 ;; This function calls:
  1945 ;;		_I2C_2_Master_Idle
  1946 ;; This function is called by:
  1947 ;;		_color_writetoaddr
  1948 ;;		_color_read_Red
  1949 ;;		_color_read_Blue
  1950 ;;		_color_read_Green
  1951 ;;		_color_read_Clear
  1952 ;; This function uses a non-reentrant model
  1953 ;;
  1954                           
  1955                           	psect	text14
  1956  001522                     __ptext14:
  1957                           	callstack 0
  1958  001522                     _I2C_2_Master_Start:
  1959                           	callstack 27
  1960  001522                     
  1961                           ;i2c.c: 29:   I2C_2_Master_Idle();
  1962  001522  EC32  F00A         	call	_I2C_2_Master_Idle	;wreg free
  1963  001526                     
  1964                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  1965  001526  010E               	movlb	14	; () banked
  1966  001528  81DA               	bsf	218,0,b	;volatile
  1967  00152A                     
  1968                           ; BSR set to: 14
  1969  00152A  0012               	return		;funcret
  1970  00152C                     __end_of_I2C_2_Master_Start:
  1971                           	callstack 0
  1972                           
  1973 ;; *************** function _I2C_2_Master_Idle *****************
  1974 ;; Defined at:
  1975 ;;		line 22 in file "i2c.c"
  1976 ;; Parameters:    Size  Location     Type
  1977 ;;		None
  1978 ;; Auto vars:     Size  Location     Type
  1979 ;;		None
  1980 ;; Return value:  Size  Location     Type
  1981 ;;                  1    wreg      void 
  1982 ;; Registers used:
  1983 ;;		wreg, status,2, status,0
  1984 ;; Tracked objects:
  1985 ;;		On entry : 0/0
  1986 ;;		On exit  : 0/0
  1987 ;;		Unchanged: 0/0
  1988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1989 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1990 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1991 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1992 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1993 ;;Total ram usage:        1 bytes
  1994 ;; Hardware stack levels used: 1
  1995 ;; This function calls:
  1996 ;;		Nothing
  1997 ;; This function is called by:
  1998 ;;		_I2C_2_Master_Start
  1999 ;;		_I2C_2_Master_Stop
  2000 ;;		_I2C_2_Master_Write
  2001 ;;		_I2C_2_Master_RepStart
  2002 ;;		_I2C_2_Master_Read
  2003 ;; This function uses a non-reentrant model
  2004 ;;
  2005                           
  2006                           	psect	text15
  2007  001464                     __ptext15:
  2008                           	callstack 0
  2009  001464                     _I2C_2_Master_Idle:
  2010                           	callstack 27
  2011  001464                     l174:
  2012  001464  010E               	movlb	14	; () banked
  2013  001466  B5D8               	btfsc	216,2,b	;volatile
  2014  001468  EF38  F00A         	goto	u11
  2015  00146C  EF3A  F00A         	goto	u10
  2016  001470                     u11:
  2017  001470  EF32  F00A         	goto	l174
  2018  001474                     u10:
  2019  001474                     
  2020                           ; BSR set to: 14
  2021  001474  CEDA F001          	movff	3802,??_I2C_2_Master_Idle	;volatile
  2022  001478  0E1F               	movlw	31
  2023  00147A  1601               	andwf	??_I2C_2_Master_Idle^0,f,c
  2024  00147C  A4D8               	btfss	status,2,c
  2025  00147E  EF43  F00A         	goto	u21
  2026  001482  EF45  F00A         	goto	u20
  2027  001486                     u21:
  2028  001486  EF32  F00A         	goto	l174
  2029  00148A                     u20:
  2030  00148A                     
  2031                           ; BSR set to: 14
  2032  00148A  0012               	return		;funcret
  2033  00148C                     __end_of_I2C_2_Master_Idle:
  2034                           	callstack 0
  2035                           
  2036 ;; *************** function _I2C_2_Master_Init *****************
  2037 ;; Defined at:
  2038 ;;		line 4 in file "i2c.c"
  2039 ;; Parameters:    Size  Location     Type
  2040 ;;		None
  2041 ;; Auto vars:     Size  Location     Type
  2042 ;;		None
  2043 ;; Return value:  Size  Location     Type
  2044 ;;                  1    wreg      void 
  2045 ;; Registers used:
  2046 ;;		wreg, status,2
  2047 ;; Tracked objects:
  2048 ;;		On entry : 0/0
  2049 ;;		On exit  : 0/0
  2050 ;;		Unchanged: 0/0
  2051 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2052 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2053 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2054 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2055 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2056 ;;Total ram usage:        0 bytes
  2057 ;; Hardware stack levels used: 1
  2058 ;; This function calls:
  2059 ;;		Nothing
  2060 ;; This function is called by:
  2061 ;;		_color_click_init
  2062 ;;		_main
  2063 ;; This function uses a non-reentrant model
  2064 ;;
  2065                           
  2066                           	psect	text16
  2067  00143A                     __ptext16:
  2068                           	callstack 0
  2069  00143A                     _I2C_2_Master_Init:
  2070                           	callstack 29
  2071  00143A                     
  2072                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  2073  00143A  010E               	movlb	14	; () banked
  2074  00143C  51D9               	movf	217,w,b	;volatile
  2075  00143E  0BF0               	andlw	-16
  2076  001440  0908               	iorlw	8
  2077  001442  6FD9               	movwf	217,b	;volatile
  2078  001444                     
  2079                           ; BSR set to: 14
  2080                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  2081  001444  8BD9               	bsf	217,5,b	;volatile
  2082                           
  2083                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  2084  001446  0E9F               	movlw	159
  2085  001448  6FD6               	movwf	214,b	;volatile
  2086  00144A                     
  2087                           ; BSR set to: 14
  2088                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  2089  00144A  8A84               	bsf	132,5,c	;volatile
  2090  00144C                     
  2091                           ; BSR set to: 14
  2092                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  2093  00144C  8C84               	bsf	132,6,c	;volatile
  2094  00144E                     
  2095                           ; BSR set to: 14
  2096                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  2097  00144E  9BA7               	bcf	167,5,b	;volatile
  2098  001450                     
  2099                           ; BSR set to: 14
  2100                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  2101  001450  9DA7               	bcf	167,6,b	;volatile
  2102                           
  2103                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  2104  001452  0E1D               	movlw	29
  2105  001454  6F1D               	movwf	29,b	;volatile
  2106                           
  2107                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  2108  001456  0E1E               	movlw	30
  2109  001458  6F1C               	movwf	28,b	;volatile
  2110                           
  2111                           ;i2c.c: 18:   RD5PPS=0x1C;
  2112  00145A  0E1C               	movlw	28
  2113  00145C  6F6F               	movwf	111,b	;volatile
  2114                           
  2115                           ;i2c.c: 19:   RD6PPS=0x1B;
  2116  00145E  0E1B               	movlw	27
  2117  001460  6F70               	movwf	112,b	;volatile
  2118  001462                     
  2119                           ; BSR set to: 14
  2120  001462  0012               	return		;funcret
  2121  001464                     __end_of_I2C_2_Master_Init:
  2122                           	callstack 0
  2123                           
  2124                           	psect	rparam
  2125  0000                     
  2126                           	psect	idloc
  2127                           
  2128                           ;Config register IDLOC0 @ 0x200000
  2129                           ;	unspecified, using default values
  2130  200000                     	org	2097152
  2131  200000  0FFF               	dw	4095
  2132                           
  2133                           ;Config register IDLOC1 @ 0x200002
  2134                           ;	unspecified, using default values
  2135  200002                     	org	2097154
  2136  200002  0FFF               	dw	4095
  2137                           
  2138                           ;Config register IDLOC2 @ 0x200004
  2139                           ;	unspecified, using default values
  2140  200004                     	org	2097156
  2141  200004  0FFF               	dw	4095
  2142                           
  2143                           ;Config register IDLOC3 @ 0x200006
  2144                           ;	unspecified, using default values
  2145  200006                     	org	2097158
  2146  200006  0FFF               	dw	4095
  2147                           
  2148                           ;Config register IDLOC4 @ 0x200008
  2149                           ;	unspecified, using default values
  2150  200008                     	org	2097160
  2151  200008  0FFF               	dw	4095
  2152                           
  2153                           ;Config register IDLOC5 @ 0x20000A
  2154                           ;	unspecified, using default values
  2155  20000A                     	org	2097162
  2156  20000A  0FFF               	dw	4095
  2157                           
  2158                           ;Config register IDLOC6 @ 0x20000C
  2159                           ;	unspecified, using default values
  2160  20000C                     	org	2097164
  2161  20000C  0FFF               	dw	4095
  2162                           
  2163                           ;Config register IDLOC7 @ 0x20000E
  2164                           ;	unspecified, using default values
  2165  20000E                     	org	2097166
  2166  20000E  0FFF               	dw	4095
  2167                           
  2168                           	psect	config
  2169                           
  2170                           ;Config register CONFIG1L @ 0x300000
  2171                           ;	External Oscillator mode Selection bits
  2172                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  2173                           ;	Power-up default value for COSC bits
  2174                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  2175  300000                     	org	3145728
  2176  300000  AA                 	db	170
  2177                           
  2178                           ;Config register CONFIG1H @ 0x300001
  2179                           ;	unspecified, using default values
  2180                           ;	Clock Out Enable bit
  2181                           ;	CLKOUTEN = 0x1, unprogrammed default
  2182                           ;	Clock Switch Enable bit
  2183                           ;	CSWEN = 0x1, unprogrammed default
  2184                           ;	Fail-Safe Clock Monitor Enable bit
  2185                           ;	FCMEN = 0x1, unprogrammed default
  2186  300001                     	org	3145729
  2187  300001  FF                 	db	255
  2188                           
  2189                           ;Config register CONFIG2L @ 0x300002
  2190                           ;	unspecified, using default values
  2191                           ;	Master Clear Enable bit
  2192                           ;	MCLRE = 0x1, unprogrammed default
  2193                           ;	Power-up Timer Enable bit
  2194                           ;	PWRTE = 0x1, unprogrammed default
  2195                           ;	Low-power BOR enable bit
  2196                           ;	LPBOREN = 0x1, unprogrammed default
  2197                           ;	Brown-out Reset Enable bits
  2198                           ;	BOREN = 0x3, unprogrammed default
  2199  300002                     	org	3145730
  2200  300002  FF                 	db	255
  2201                           
  2202                           ;Config register CONFIG2H @ 0x300003
  2203                           ;	unspecified, using default values
  2204                           ;	Brown Out Reset Voltage selection bits
  2205                           ;	BORV = 0x3, unprogrammed default
  2206                           ;	ZCD Disable bit
  2207                           ;	ZCD = 0x1, unprogrammed default
  2208                           ;	PPSLOCK bit One-Way Set Enable bit
  2209                           ;	PPS1WAY = 0x1, unprogrammed default
  2210                           ;	Stack Full/Underflow Reset Enable bit
  2211                           ;	STVREN = 0x1, unprogrammed default
  2212                           ;	Debugger Enable bit
  2213                           ;	DEBUG = 0x1, unprogrammed default
  2214                           ;	Extended Instruction Set Enable bit
  2215                           ;	XINST = 0x1, unprogrammed default
  2216  300003                     	org	3145731
  2217  300003  FF                 	db	255
  2218                           
  2219                           ;Config register CONFIG3L @ 0x300004
  2220                           ;	WDT Period Select bits
  2221                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  2222                           ;	WDT operating mode
  2223                           ;	WDTE = OFF, WDT Disabled
  2224  300004                     	org	3145732
  2225  300004  9F                 	db	159
  2226                           
  2227                           ;Config register CONFIG3H @ 0x300005
  2228                           ;	unspecified, using default values
  2229                           ;	WDT Window Select bits
  2230                           ;	WDTCWS = 0x7, unprogrammed default
  2231                           ;	WDT input clock selector
  2232                           ;	WDTCCS = 0x7, unprogrammed default
  2233  300005                     	org	3145733
  2234  300005  FF                 	db	255
  2235                           
  2236                           ;Config register CONFIG4L @ 0x300006
  2237                           ;	unspecified, using default values
  2238                           ;	Write Protection Block 0
  2239                           ;	WRT0 = 0x1, unprogrammed default
  2240                           ;	Write Protection Block 1
  2241                           ;	WRT1 = 0x1, unprogrammed default
  2242                           ;	Write Protection Block 2
  2243                           ;	WRT2 = 0x1, unprogrammed default
  2244                           ;	Write Protection Block 3
  2245                           ;	WRT3 = 0x1, unprogrammed default
  2246                           ;	Write Protection Block 3
  2247                           ;	WRT4 = 0x1, unprogrammed default
  2248                           ;	Write Protection Block 3
  2249                           ;	WRT5 = 0x1, unprogrammed default
  2250                           ;	Write Protection Block 3
  2251                           ;	WRT6 = 0x1, unprogrammed default
  2252                           ;	Write Protection Block 3
  2253                           ;	WRT7 = 0x1, unprogrammed default
  2254  300006                     	org	3145734
  2255  300006  FF                 	db	255
  2256                           
  2257                           ;Config register CONFIG4H @ 0x300007
  2258                           ;	unspecified, using default values
  2259                           ;	Configuration Register Write Protection bit
  2260                           ;	WRTC = 0x1, unprogrammed default
  2261                           ;	Boot Block Write Protection bit
  2262                           ;	WRTB = 0x1, unprogrammed default
  2263                           ;	Data EEPROM Write Protection bit
  2264                           ;	WRTD = 0x1, unprogrammed default
  2265                           ;	Scanner Enable bit
  2266                           ;	SCANE = 0x1, unprogrammed default
  2267                           ;	Low Voltage Programming Enable bit
  2268                           ;	LVP = 0x1, unprogrammed default
  2269  300007                     	org	3145735
  2270  300007  FF                 	db	255
  2271                           
  2272                           ;Config register CONFIG5L @ 0x300008
  2273                           ;	unspecified, using default values
  2274                           ;	UserNVM Program Memory Code Protection bit
  2275                           ;	CP = 0x1, unprogrammed default
  2276                           ;	DataNVM Memory Code Protection bit
  2277                           ;	CPD = 0x1, unprogrammed default
  2278  300008                     	org	3145736
  2279  300008  FF                 	db	255
  2280                           
  2281                           ;Config register CONFIG5H @ 0x300009
  2282                           ;	unspecified, using default values
  2283  300009                     	org	3145737
  2284  300009  FF                 	db	255
  2285                           
  2286                           ;Config register CONFIG6L @ 0x30000A
  2287                           ;	unspecified, using default values
  2288                           ;	Table Read Protection Block 0
  2289                           ;	EBTR0 = 0x1, unprogrammed default
  2290                           ;	Table Read Protection Block 1
  2291                           ;	EBTR1 = 0x1, unprogrammed default
  2292                           ;	Table Read Protection Block 2
  2293                           ;	EBTR2 = 0x1, unprogrammed default
  2294                           ;	Table Read Protection Block 3
  2295                           ;	EBTR3 = 0x1, unprogrammed default
  2296                           ;	Table Read Protection Block 4
  2297                           ;	EBTR4 = 0x1, unprogrammed default
  2298                           ;	Table Read Protection Block 5
  2299                           ;	EBTR5 = 0x1, unprogrammed default
  2300                           ;	Table Read Protection Block 6
  2301                           ;	EBTR6 = 0x1, unprogrammed default
  2302                           ;	Table Read Protection Block 7
  2303                           ;	EBTR7 = 0x1, unprogrammed default
  2304  30000A                     	org	3145738
  2305  30000A  FF                 	db	255
  2306                           
  2307                           ;Config register CONFIG6H @ 0x30000B
  2308                           ;	unspecified, using default values
  2309                           ;	Boot Block Table Read Protection bit
  2310                           ;	EBTRB = 0x1, unprogrammed default
  2311  30000B                     	org	3145739
  2312  30000B  FF                 	db	255
  2313                           tosu	equ	0xFFF
  2314                           tosh	equ	0xFFE
  2315                           tosl	equ	0xFFD
  2316                           stkptr	equ	0xFFC
  2317                           pclatu	equ	0xFFB
  2318                           pclath	equ	0xFFA
  2319                           pcl	equ	0xFF9
  2320                           tblptru	equ	0xFF8
  2321                           tblptrh	equ	0xFF7
  2322                           tblptrl	equ	0xFF6
  2323                           tablat	equ	0xFF5
  2324                           prodh	equ	0xFF4
  2325                           prodl	equ	0xFF3
  2326                           indf0	equ	0xFEF
  2327                           postinc0	equ	0xFEE
  2328                           postdec0	equ	0xFED
  2329                           preinc0	equ	0xFEC
  2330                           plusw0	equ	0xFEB
  2331                           fsr0h	equ	0xFEA
  2332                           fsr0l	equ	0xFE9
  2333                           wreg	equ	0xFE8
  2334                           indf1	equ	0xFE7
  2335                           postinc1	equ	0xFE6
  2336                           postdec1	equ	0xFE5
  2337                           preinc1	equ	0xFE4
  2338                           plusw1	equ	0xFE3
  2339                           fsr1h	equ	0xFE2
  2340                           fsr1l	equ	0xFE1
  2341                           bsr	equ	0xFE0
  2342                           indf2	equ	0xFDF
  2343                           postinc2	equ	0xFDE
  2344                           postdec2	equ	0xFDD
  2345                           preinc2	equ	0xFDC
  2346                           plusw2	equ	0xFDB
  2347                           fsr2h	equ	0xFDA
  2348                           fsr2l	equ	0xFD9
  2349                           status	equ	0xFD8

Data Sizes:
    Strings     77
    Constant    4
    Data        2
    BSS         109
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     57      88
    BANK0           160      0      80
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    vfprintf$2	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(COMRAM[2]), 

    vfprintf$1	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_14(CODE[5]), STR_13(CODE[6]), STR_2(CODE[12]), STR_1(CODE[14]), 

    vfprintf$0	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    S2264$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S2264$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    motorR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    motorR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhhllll[1]), PWM6DCH(BITBIGSFRhhhllll[1]), 

    motorL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    motorL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhhllll[1]), PWM6DCH(BITBIGSFRhhhllll[1]), 

    voltage_display@m.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    voltage_display@m.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhhllll[1]), PWM6DCH(BITBIGSFRhhhllll[1]), 

    voltage_read@m.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    voltage_read@m.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhhllll[1]), PWM6DCH(BITBIGSFRhhhllll[1]), 

    fullSpeedBack@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    fullSpeedBack@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhhllll[1]), PWM6DCH(BITBIGSFRhhhllll[1]), 

    fullSpeedBack@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(COMRAM[10]), 

    fullSpeedBack@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    fullSpeedBack@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhhllll[1]), PWM6DCH(BITBIGSFRhhhllll[1]), 

    fullSpeedBack@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(COMRAM[10]), 

    fullSpeedAhead@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    fullSpeedAhead@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhhllll[1]), PWM6DCH(BITBIGSFRhhhllll[1]), 

    fullSpeedAhead@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    fullSpeedAhead@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhhllll[1]), PWM6DCH(BITBIGSFRhhhllll[1]), 

    turnRight@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turnRight@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhhllll[1]), PWM6DCH(BITBIGSFRhhhllll[1]), 

    turnRight@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turnRight@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhhllll[1]), PWM6DCH(BITBIGSFRhhhllll[1]), 

    turnLeft@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turnLeft@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhhllll[1]), PWM6DCH(BITBIGSFRhhhllll[1]), 

    turnLeft@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turnLeft@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhhllll[1]), PWM6DCH(BITBIGSFRhhhllll[1]), 

    stop@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    stop@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhhllll[1]), PWM6DCH(BITBIGSFRhhhllll[1]), 

    stop@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(COMRAM[10]), 

    stop@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    stop@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhhllll[1]), PWM6DCH(BITBIGSFRhhhllll[1]), 

    stop@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(COMRAM[10]), 

    setMotorPWM@m.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    setMotorPWM@m.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhhllll[1]), PWM6DCH(BITBIGSFRhhhllll[1]), 

    setMotorPWM@m	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(COMRAM[10]), main@motorL(COMRAM[10]), 

    initDCmotors_parameter@motorR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    initDCmotors_parameter@motorR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhhllll[1]), PWM6DCH(BITBIGSFRhhhllll[1]), 

    initDCmotors_parameter@motorR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(COMRAM[10]), 

    initDCmotors_parameter@motorL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    initDCmotors_parameter@motorL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhhllll[1]), PWM6DCH(BITBIGSFRhhhllll[1]), 

    initDCmotors_parameter@motorL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(COMRAM[10]), 

    motorR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    motorR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhhllll[1]), PWM6DCH(BITBIGSFRhhhllll[1]), 

    S224DC_motor$dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    motorL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    S224DC_motor$dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhhllll[1]), PWM6DCH(BITBIGSFRhhhllll[1]), 

    motorL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhhllll[1]), PWM6DCH(BITBIGSFRhhhllll[1]), 


Critical Paths under _main in COMRAM

    _main->_fullSpeedBack
    _fullSpeedBack->_stop
    _stop->_setMotorPWM
    _setMotorPWM->___awdiv
    ___awdiv->___wmul
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                47    47      0    5980
                                             37 COMRAM    20    20      0
                  _I2C_2_Master_Init
                   _color_click_init
                      _fullSpeedBack
                    _initDCmotorsPWM
             _initDCmotors_parameter
                         _initUSART4
                           _pin_init
 ---------------------------------------------------------------------------------
 (1) _pin_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initDCmotors_parameter                               4     0      4     416
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2      76
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _fullSpeedBack                                        6     2      4    5042
                                             31 COMRAM     6     2      4
                        _setMotorPWM
                               _stop
 ---------------------------------------------------------------------------------
 (2) _stop                                                 6     2      4    2727
                                             25 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (3) _setMotorPWM                                         11     9      2    1943
                                             14 COMRAM    11     9      2
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     355
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4     496
                                              6 COMRAM     8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     287
                                              4 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     287
                                              2 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Write                                   1     1      0      15
                                              1 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Idle                                    1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_2_Master_Init
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
   _fullSpeedBack
     _setMotorPWM
       ___awdiv
         ___wmul (ARG)
       ___wmul
     _stop
       _setMotorPWM
   _initDCmotorsPWM
   _initDCmotors_parameter
   _initUSART4
   _pin_init

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      59        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      50       5       50.0%
BITBIGSFRllhhl      6E      0       0      44        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     39      58       1       92.6%
BITBIGSFRhhhh       40      0       0      32        0.0%
BITBIGSFRlllllh     32      0       0      49        0.0%
BITBIGSFRlllllh     2A      0       0      53        0.0%
BITBIGSFRllllll     26      0       0      57        0.0%
BITBIGSFRllllhh     20      0       0      47        0.0%
BITBIGSFRhhhlh      17      0       0      33        0.0%
BITBIGSFRllhhhh     14      0       0      41        0.0%
BITBIGSFRhhhlll     11      0       0      35        0.0%
BITBIGSFRlllllh      F      0       0      55        0.0%
BITBIGSFRllllhl      C      0       0      48        0.0%
BITBIGSFRlllllh      9      0       0      54        0.0%
BITBIGSFRllhlll      8      0       0      45        0.0%
BITBIGSFRllhhhl      6      0       0      43        0.0%
BITBIGSFRllllll      6      0       0      56        0.0%
BITBIGSFRlllllh      6      0       0      52        0.0%
BITBIGSFRhhhlll      6      0       0      36        0.0%
BITBIGSFRlllllh      5      0       0      51        0.0%
BITBIGSFRllhhhh      3      0       0      42        0.0%
BITBIGSFRlllllh      3      0       0      50        0.0%
BITBIGSFRhlh         1      0       0      37        0.0%
BITBIGSFRhhhllh      1      0       0      34        0.0%
BITBIGSFRlhh         1      0       0      39        0.0%
BITBIGSFRlllh        1      0       0      46        0.0%
BITBIGSFRlhl         1      0       0      40        0.0%
BITBIGSFRhll         1      0       0      38        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      A8      58        0.0%
DATA                 0      0      A8       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.35 build 20211206165544 
Symbol Table                                                                                   Wed Mar 09 19:59:40 2022

                            l53 1438                              l56 14D0                              u10 1474  
                            u11 1470                              u20 148A                              u21 1486  
                  ___awdiv@sign 000C             ___wmul@multiplicand 0003                             l171 1462  
                           l180 152A                             l174 1464                             l263 13C6  
                           l328 127C                             l177 148A                             l273 1026  
                           l281 1338                             l186 1520                             l266 10F8  
                           l531 14B0                             l380 14EE                             l189 1516  
                           l525 150A                             l458 137E                             l459 137E  
                           l762 11BC                             u800 0F54                             u801 0F50  
                           u730 110C                             u731 1108                             u740 1126  
                           u741 1122                             u750 114C                             u814 0FAE  
                           u830 129A                             u751 1148                             u815 0FAA  
                           u831 1296                             u760 116A                             u824 1018  
                           u840 12BE                             u761 1166                             u825 1014  
                           u841 12BA                             u770 1186                             u850 1308  
                           u771 1182                             u851 1304                             u780 11AC  
                           u860 1320                             u781 11A8                             u861 131C  
                           u790 0E70                             u791 0E6C                             u970 1238  
                           u971 1234                             u980 1250                             u981 124C  
                           wreg 000FE8                            l2001 118E                            l2011 11B4  
                          l2003 1190                            l2005 1196                            l2021 0F18  
                          l2101 1386                            l1311 143A                            l1231 1464  
                          l2007 119C                            l2023 0F38                            l2015 0E54  
                          l2031 127E                            l2103 1396                            l2111 1028  
                          l1321 1450                            l1313 1444                            l1233 1474  
                          l2009 11AC                            l2025 0F54                            l2017 0E70  
                          l2041 12CA                            l2033 1282                            l2105 13AE  
                          l2121 107C                            l2113 1034                            l1315 144A  
                          l2027 0FBE                            l2019 0ED2                            l2051 1320  
                          l2043 12D6                            l2035 129A                            l2107 13C2  
                          l2123 1090                            l2115 1044                            l1317 144C  
                          l2029 14B4                            l2045 12E2                            l2037 12A6  
                          l2109 13C4                            l2117 1058                            l1319 144E  
                          l2071 142E                            l2063 1406                            l2039 12BE  
                          l2047 12F0                            l2119 106C                            l2065 140A  
                          l2049 1308                            l2161 11E2                            l2241 133E  
                          l1291 1512                            l2067 1414                            l2171 1238  
                          l2163 11FA                            l2251 136A                            l2243 1342  
                          l1285 1522                            l1293 1518                            l2069 1424  
                          l2173 1250                            l2165 1206                            l1541 14DE  
                          l2253 136A                            l2245 134E                            l1287 1526  
                          l1295 151C                            l2175 1268                            l2167 1212  
                          l2159 11BE                            l1543 14E8                            l2247 1352  
                          l2239 133A                            l1289 150E                            l2169 1220  
                          l1545 14EA                            l1537 14D2                            l2249 1366  
                          l1547 14EC                            l1539 14DC                            l1557 14F0  
                          l1971 10FA                            l1981 1126                            l1973 10FE  
                          l1965 148C                            l1991 1154                            l1983 112E  
                          l1975 110C                            l1967 14A8                            l1993 115C  
                          l1985 1132                            l1977 1114                            l1995 116A  
                          l1987 113A                            l1979 1118                            l1997 1170  
                          l1989 114C                            l1999 1186                            STR_1 0E05  
                          STR_3 0E3E                            STR_4 0E4E                            STR_5 0E38  
                          STR_6 0E44                            STR_7 0E25                            STR_8 0E49  
                          STR_9 0E1E                            u1107 12E8                            u1117 132A  
                          u1127 141A                            u1087 1218                    _BAUD4CONbits 000EE9  
                          u1097 125A                            _LATE 000F7D                            _LATG 000F7F  
                          _T2PR 000FBC                            _main 133A                            fsr1h 000FE2  
                          fsr2h 000FDA                            indf1 000FE7                            indf2 000FDF  
                          fsr1l 000FE1                            fsr2l 000FD9                            _stop 127E  
                          prodh 000FF4                            prodl 000FF3                            start 0000  
                  ___param_bank 000000                           ?_main 0001                           _ADPCH 000F5F  
               __end_of___awdiv 11BE                           STR_10 0E13                           STR_11 0E2C  
                         STR_12 0E32                           ?_stop 001A                 ___awdiv@divisor 0009  
               ___awdiv@counter 000B      __end_of_I2C_2_Master_Start 152C      __end_of_I2C_2_Master_Write 1518  
                         _color 0052                           _toint 0E01                           tablat 000FF5  
                         status 000FD8                 __initialization 13C8                    __end_of_main 1386  
                  __end_of_stop 133A                          ??_main 0026                          ??_stop 001E  
                 __activetblptr 000001          _initDCmotors_parameter 1028                    ?_setMotorPWM 000F  
                        _ADRESH 000F64                ___awdiv@dividend 0007                          _RC0PPS 000E62  
                        _RC4REG 000EE3                          _RE2PPS 000E74                          _RD5PPS 000E6F  
                        _RC7PPS 000E69                          _RD6PPS 000E70        __end_of_color_click_init 143A  
                        _RX4PPS 000E15                          _TX4REG 000EE4                          ___wmul 148C  
                     ??___awdiv 000B                          clear_0 13E6                          clear_1 13F2  
              ___awdiv@quotient 000D                          _motorL 0044                          _motorR 003A  
                        isa$std 000001                __end_of_pin_init 150C                    __pdataCOMRAM 0057  
                  __mediumconst 0000                          tblptrh 000FF7                          tblptrl 000FF6  
                        tblptru 000FF8                          stop@mL 001A                          stop@mR 001C  
             ??_initDCmotorsPWM 0003                 fullSpeedBack@mL 0020                 fullSpeedBack@mR 0022  
                    __accesstop 0060         __end_of__initialization 13F8    initDCmotors_parameter@motorL 0001  
  initDCmotors_parameter@motorR 0003                   ___rparam_used 000001                  __pcstackCOMRAM 0001  
                 _fullSpeedBack 11BE                   __end_of_toint 0E05                      __pbssBANK0 0060  
             _color_writetoaddr 14B2                    _T2CLKCONbits 000FBF                  ?_fullSpeedBack 0020  
            ?_color_writetoaddr 0003                         ?___wmul 0001             ??_color_writetoaddr 0004  
                       _SP4BRGH 000EE6                         _SP4BRGL 000EE5                         _PWM6DCH 000FA3  
                       _PWM7DCH 000FA0                         _SSP2ADD 000ED6                         _SSP2BUF 000ED5  
        color_writetoaddr@value 0003       __end_of_color_writetoaddr 14D2                       _ADREFbits 000F58  
            _I2C_2_Master_Start 1522                      _initUSART4 14D2              _I2C_2_Master_Write 150C  
                     ?_pin_init 0001                         __Hparam 0000                         __Lparam 0000  
                       ___awdiv 10FA             ?_I2C_2_Master_Start 0001             ?_I2C_2_Master_Write 0001  
                  __psmallconst 0E00                         __pcinit 13C8                         __ramtop 0E00  
                       __ptext0 133A                         __ptext1 14F0                         __ptext2 14D2  
                       __ptext3 1028                         __ptext4 1386                         __ptext5 11BE  
                       __ptext6 127E                         __ptext7 0E54                         __ptext8 148C  
                       __ptext9 10FA         ?_initDCmotors_parameter 0001                       _T2CONbits 000FBD  
                     _T2HLTbits 000FBE                   _RxBufWriteCnt 0056            ??_I2C_2_Master_Start 0002  
          ??_I2C_2_Master_Write 0002            end_of_initialization 13F8              setMotorPWM@PWMduty 0018  
               _CALIBRATION_180 0057               ?_color_click_init 0001                 ??_fullSpeedBack 0024  
                    ??_pin_init 0001              ??_color_click_init 0005                         postdec1 000FE5  
                       postdec2 000FDD                         postinc0 000FEE                         postinc1 000FE6  
                       postinc2 000FDE                 _initDCmotorsPWM 1386  __end_of_initDCmotors_parameter 10FA  
                     _PORTFbits 000F8E                       _TRISAbits 000F81                       _TRISCbits 000F83  
                     _TRISDbits 000F84                       _TRISEbits 000F85                       _TRISFbits 000F86  
                     _TRISGbits 000F87        color_writetoaddr@address 0004                    _EUSART4RXbuf 009C  
                  _EUSART4TXbuf 0060                     ?_initUSART4 0001                      main@motorL 0026  
                    main@motorR 0030                  __end_of___wmul 14B2                   __pidataCOMRAM 152C  
           start_initialization 13C8                   _TxBufWriteCnt 0054         __end_of_initDCmotorsPWM 13C8  
                      ??___wmul 0005                     __pbssCOMRAM 003A                        ?___awdiv 0007  
                   __smallconst 0E00               _I2C_2_Master_Idle 1464               _I2C_2_Master_Init 143A  
             _I2C_2_Master_Stop 1518                    _RxBufReadCnt 0055              ?_I2C_2_Master_Idle 0001  
            ?_I2C_2_Master_Init 0001                   ??_setMotorPWM 0011              ?_I2C_2_Master_Stop 0001  
      initDCmotorsPWM@PWMperiod 0001             ??_I2C_2_Master_Idle 0001             ??_I2C_2_Master_Init 0001  
                ___wmul@product 0005                        _LATAbits 000F79             ??_I2C_2_Master_Stop 0002  
                      _LATCbits 000F7B                        _LATEbits 000F7D                        _LATFbits 000F7E  
                      _LATGbits 000F7F                        _PIE4bits 000E2D                        _PIR4bits 000E37  
              ?_initDCmotorsPWM 0001                        _SSP2CON2 000EDA                        _SSP2STAT 000ED8  
                    _ADCON0bits 000F60       __end_of_I2C_2_Master_Idle 148C       __end_of_I2C_2_Master_Init 1464  
             ___wmul@multiplier 0001       __end_of_I2C_2_Master_Stop 1522                    setMotorPWM@m 000F  
   I2C_2_Master_Write@data_byte 0002                    _TxBufReadCnt 0053             __end_of_setMotorPWM 1028  
                    roundf@F527 004E                    ??_initUSART4 0001                        __Hrparam 0000  
                      __Lrparam 0000           __end_of_fullSpeedBack 127E                    __Lsmallconst 0E00  
                    _ANSELDbits 000EA7                      _ANSELFbits 000EB4              __end_of_initUSART4 14F0  
                      __ptext10 1406                        __ptext11 14B2                        __ptext12 150C  
                      __ptext13 1518                        __ptext14 1522                        __ptext15 1464  
                      __ptext16 143A                    _SSP2CON1bits 000ED9                    _SSP2CON2bits 000EDA  
                      _pin_init 14F0                        isa$xinst 000000                      _RC4STAbits 000EE7  
                   _SENSITIVITY 0058                     _setMotorPWM 0E54                     _PWM6CONbits 000FA4  
                   _PWM7CONbits 000FA1        ??_initDCmotors_parameter 0005                _color_click_init 1406  
                    _SSP2DATPPS 000E1D                      _SSP2CLKPPS 000E1C                      _TX4STAbits 000EE8  
