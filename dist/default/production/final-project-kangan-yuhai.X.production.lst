

Microchip MPLAB XC8 Assembler V2.35 build 20211206165544 
                                                                                               Tue Mar 08 11:28:05 2022

Microchip MPLAB XC8 C Compiler v2.35 (Free license) build 20211206165544 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1
    53                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    54                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    55                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    56                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    57  0000                     
    58                           ; Version 2.35
    59                           ; Generated 05/05/2021 GMT
    60                           ; 
    61                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    62                           ; All rights reserved.
    63                           ; 
    64                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    65                           ; 
    66                           ; Redistribution and use in source and binary forms, with or without modification, are
    67                           ; permitted provided that the following conditions are met:
    68                           ; 
    69                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    70                           ;        conditions and the following disclaimer.
    71                           ; 
    72                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    73                           ;        of conditions and the following disclaimer in the documentation and/or other
    74                           ;        materials provided with the distribution. Publication is not required when
    75                           ;        this file is used in an embedded application.
    76                           ; 
    77                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    78                           ;        software without specific prior written permission.
    79                           ; 
    80                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    81                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    82                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    83                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    84                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    85                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    86                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    87                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    88                           ; 
    89                           ; 
    90                           ; Code-generator required, PIC18F67K40 Definitions
    91                           ; 
    92                           ; SFR Addresses
    93  0000                     
    94                           	psect	idataBANK0
    95  00205E                     __pidataBANK0:
    96                           	callstack 0
    97                           
    98                           ;initializer for _color
    99  00205E  01                 	db	1
   100  0000                     _TRISFbits	set	3974
   101  0000                     _TX4REG	set	3812
   102  0000                     _RC4STAbits	set	3815
   103  0000                     _SP4BRGH	set	3814
   104  0000                     _TRISGbits	set	3975
   105  0000                     _TRISEbits	set	3973
   106  0000                     _SSP2CON2bits	set	3802
   107  0000                     _LATG	set	3967
   108  0000                     _LATE	set	3965
   109  0000                     _RX4PPS	set	3605
   110  0000                     _SSP2CLKPPS	set	3612
   111  0000                     _SSP2DATPPS	set	3613
   112  0000                     _ANSELDbits	set	3751
   113  0000                     _SSP2ADD	set	3798
   114  0000                     _SSP2CON1bits	set	3801
   115  0000                     _LATAbits	set	3961
   116  0000                     _LATFbits	set	3966
   117  0000                     _LATGbits	set	3967
   118  0000                     _TRISAbits	set	3969
   119  0000                     _TRISCbits	set	3971
   120  0000                     _TRISDbits	set	3972
   121  0000                     _LATCbits	set	3963
   122  0000                     _LATEbits	set	3965
   123  0000                     _RC4REG	set	3811
   124  0000                     _SP4BRGL	set	3813
   125  0000                     _TX4STAbits	set	3816
   126  0000                     _BAUD4CONbits	set	3817
   127  0000                     _SSP2CON2	set	3802
   128  0000                     _SSP2STAT	set	3800
   129  0000                     _ANSELFbits	set	3764
   130  0000                     _SSP2BUF	set	3797
   131  0000                     _PIE4bits	set	3629
   132  0000                     _PIR4bits	set	3639
   133  0000                     _RC0PPS	set	3682
   134  0000                     _RC7PPS	set	3689
   135  0000                     _RD5PPS	set	3695
   136  0000                     _RE2PPS	set	3700
   137  0000                     _RD6PPS	set	3696
   138  0000                     _T2PR	set	4028
   139  0000                     _T2CONbits	set	4029
   140  0000                     _PWM7DCH	set	4000
   141  0000                     _PWM6DCH	set	4003
   142  0000                     _T2CLKCONbits	set	4031
   143  0000                     _T2HLTbits	set	4030
   144  0000                     _PWM6CONbits	set	4004
   145  0000                     _PWM7CONbits	set	4001
   146  0000                     _ADREFbits	set	3928
   147  0000                     _ADPCH	set	3935
   148  0000                     _ADRESH	set	3940
   149  0000                     _ADCON0bits	set	3936
   150                           
   151                           	psect	smallconst
   152  000E00                     __psmallconst:
   153                           	callstack 0
   154  000E00  00                 	db	0
   155  000E01                     STR_1:
   156                           
   157                           ; BSR set to: 14
   158  000E01  09                 	db	9
   159  000E02  25                 	db	37
   160  000E03  64                 	db	100	;'d'
   161  000E04  09                 	db	9
   162  000E05  25                 	db	37
   163  000E06  64                 	db	100	;'d'
   164  000E07  09                 	db	9
   165  000E08  25                 	db	37
   166  000E09  64                 	db	100	;'d'
   167  000E0A  09                 	db	9
   168  000E0B  25                 	db	37
   169  000E0C  64                 	db	100	;'d'
   170  000E0D  0D                 	db	13
   171  000E0E  0A                 	db	10
   172  000E0F  00                 	db	0
   173  000E10  00                 	db	0	; dummy byte at the end
   174  0000                     
   175                           ; #config settings
   176                           
   177                           	psect	cinit
   178  001D92                     __pcinit:
   179                           	callstack 0
   180  001D92                     start_initialization:
   181                           	callstack 0
   182  001D92                     __initialization:
   183                           	callstack 0
   184                           
   185                           ; Initialize objects allocated to BANK0 (1 bytes)
   186                           ; load TBLPTR registers with __pidataBANK0
   187  001D92  0E5E               	movlw	low __pidataBANK0
   188  001D94  6EF6               	movwf	tblptrl,c
   189  001D96  0E20               	movlw	high __pidataBANK0
   190  001D98  6EF7               	movwf	tblptrh,c
   191  001D9A  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   192  001D9C  6EF8               	movwf	tblptru,c
   193  001D9E  0009               	tblrd		*+	;fetch initializer
   194  001DA0  CFF5 F0FA          	movff	tablat,__pdataBANK0
   195                           
   196                           ; Clear objects allocated to BANK1 (92 bytes)
   197  001DA4  EE01  F000         	lfsr	0,__pbssBANK1
   198  001DA8  0E5C               	movlw	92
   199  001DAA                     clear_0:
   200  001DAA  6AEE               	clrf	postinc0,c
   201  001DAC  06E8               	decf	wreg,f,c
   202  001DAE  E1FD               	bnz	clear_0
   203                           
   204                           ; Clear objects allocated to BANK0 (28 bytes)
   205  001DB0  EE00  F0DE         	lfsr	0,__pbssBANK0
   206  001DB4  0E1C               	movlw	28
   207  001DB6                     clear_1:
   208  001DB6  6AEE               	clrf	postinc0,c
   209  001DB8  06E8               	decf	wreg,f,c
   210  001DBA  E1FD               	bnz	clear_1
   211                           
   212                           ; Clear objects allocated to COMRAM (4 bytes)
   213  001DBC  6A5F               	clrf	(__pbssCOMRAM+3)& (0+255),c
   214  001DBE  6A5E               	clrf	(__pbssCOMRAM+2)& (0+255),c
   215  001DC0  6A5D               	clrf	(__pbssCOMRAM+1)& (0+255),c
   216  001DC2  6A5C               	clrf	__pbssCOMRAM& (0+255),c
   217  001DC4                     end_of_initialization:
   218                           	callstack 0
   219  001DC4                     __end_of__initialization:
   220                           	callstack 0
   221  001DC4  0E00               	movlw	low (__Lsmallconst shr (0+16))
   222  001DC6  6EF8               	movwf	tblptru,c
   223  001DC8  0E0E               	movlw	high __Lsmallconst
   224  001DCA  6EF7               	movwf	tblptrh,c
   225  001DCC  0100               	movlb	0
   226  001DCE  EF7B  F008         	goto	_main	;jump to C main() function
   227                           
   228                           	psect	bssCOMRAM
   229  00005C                     __pbssCOMRAM:
   230                           	callstack 0
   231  00005C                     _TxBufReadCnt:
   232                           	callstack 0
   233  00005C                     	ds	1
   234  00005D                     _TxBufWriteCnt:
   235                           	callstack 0
   236  00005D                     	ds	1
   237  00005E                     _RxBufReadCnt:
   238                           	callstack 0
   239  00005E                     	ds	1
   240  00005F                     _RxBufWriteCnt:
   241                           	callstack 0
   242  00005F                     	ds	1
   243                           
   244                           	psect	bssBANK0
   245  0000DE                     __pbssBANK0:
   246                           	callstack 0
   247  0000DE                     _EUSART4RXbuf:
   248                           	callstack 0
   249  0000DE                     	ds	20
   250  0000F2                     _nout:
   251                           	callstack 0
   252  0000F2                     	ds	2
   253  0000F4                     _width:
   254                           	callstack 0
   255  0000F4                     	ds	2
   256  0000F6                     _prec:
   257                           	callstack 0
   258  0000F6                     	ds	2
   259  0000F8                     _flags:
   260                           	callstack 0
   261  0000F8                     	ds	2
   262                           
   263                           	psect	dataBANK0
   264  0000FA                     __pdataBANK0:
   265                           	callstack 0
   266  0000FA                     _color:
   267                           	callstack 0
   268  0000FA                     	ds	1
   269                           
   270                           	psect	bssBANK1
   271  000100                     __pbssBANK1:
   272                           	callstack 0
   273  000100                     _EUSART4TXbuf:
   274                           	callstack 0
   275  000100                     	ds	60
   276  00013C                     _dbuf:
   277                           	callstack 0
   278  00013C                     	ds	32
   279                           
   280                           	psect	cstackBANK1
   281  00015C                     __pcstackBANK1:
   282                           	callstack 0
   283  00015C                     main@complete:
   284                           	callstack 0
   285                           
   286                           ; 1 bytes @ 0x0
   287  00015C                     	ds	1
   288  00015D                     main@i:
   289                           	callstack 0
   290                           
   291                           ; 2 bytes @ 0x1
   292  00015D                     	ds	2
   293  00015F                     main@j:
   294                           	callstack 0
   295                           
   296                           ; 2 bytes @ 0x3
   297  00015F                     	ds	2
   298  000161                     main@k:
   299                           	callstack 0
   300                           
   301                           ; 2 bytes @ 0x5
   302  000161                     	ds	2
   303  000163                     main@x:
   304                           	callstack 0
   305                           
   306                           ; 2 bytes @ 0x7
   307  000163                     	ds	2
   308  000165                     main@motorL:
   309                           	callstack 0
   310                           
   311                           ; 10 bytes @ 0x9
   312  000165                     	ds	10
   313  00016F                     main@motorR:
   314                           	callstack 0
   315                           
   316                           ; 10 bytes @ 0x13
   317  00016F                     	ds	10
   318  000179                     main@rgb:
   319                           	callstack 0
   320                           
   321                           ; 8 bytes @ 0x1D
   322  000179                     	ds	8
   323                           
   324                           	psect	cstackBANK0
   325  000060                     __pcstackBANK0:
   326                           	callstack 0
   327  000060                     ?_sprintf:
   328                           	callstack 0
   329  000060                     sprintf@s:
   330                           	callstack 0
   331                           
   332                           ; 2 bytes @ 0x0
   333  000060                     	ds	2
   334  000062                     sprintf@fmt:
   335                           	callstack 0
   336                           
   337                           ; 2 bytes @ 0x2
   338  000062                     	ds	10
   339  00006C                     sprintf@ap:
   340                           	callstack 0
   341                           
   342                           ; 2 bytes @ 0xC
   343  00006C                     	ds	2
   344  00006E                     sprintf@f:
   345                           	callstack 0
   346                           
   347                           ; 11 bytes @ 0xE
   348  00006E                     	ds	11
   349  000079                     color_display@buf:
   350                           	callstack 0
   351  000079                     color_predict@buf:
   352                           	callstack 0
   353                           
   354                           ; 100 bytes @ 0x19
   355  000079                     	ds	100
   356  0000DD                     color_predict@color:
   357                           	callstack 0
   358                           
   359                           ; 1 bytes @ 0x7D
   360  0000DD                     	ds	1
   361                           
   362                           	psect	cstackCOMRAM
   363  000001                     __pcstackCOMRAM:
   364                           	callstack 0
   365  000001                     ??_I2C_2_Master_Idle:
   366  000001                     ?_strlen:
   367                           	callstack 0
   368  000001                     ?___aodiv:
   369                           	callstack 0
   370  000001                     ?___aomod:
   371                           	callstack 0
   372  000001                     sendCharSerial4@charToSend:
   373                           	callstack 0
   374  000001                     initDCmotorsPWM@PWMperiod:
   375                           	callstack 0
   376  000001                     initDCmotors_parameter@motorL:
   377                           	callstack 0
   378  000001                     fputc@c:
   379                           	callstack 0
   380  000001                     strlen@s:
   381                           	callstack 0
   382  000001                     ___aodiv@dividend:
   383                           	callstack 0
   384  000001                     ___aomod@dividend:
   385                           	callstack 0
   386                           
   387                           ; 8 bytes @ 0x0
   388  000001                     	ds	1
   389  000002                     ??_I2C_2_Master_Read:
   390  000002                     I2C_2_Master_Write@data_byte:
   391                           	callstack 0
   392  000002                     sendStringSerial4@string:
   393                           	callstack 0
   394                           
   395                           ; 2 bytes @ 0x1
   396  000002                     	ds	1
   397  000003                     color_writetoaddr@value:
   398                           	callstack 0
   399  000003                     I2C_2_Master_Read@ack:
   400                           	callstack 0
   401  000003                     initDCmotors_parameter@motorR:
   402                           	callstack 0
   403  000003                     fputc@fp:
   404                           	callstack 0
   405  000003                     strlen@a:
   406                           	callstack 0
   407                           
   408                           ; 2 bytes @ 0x2
   409  000003                     	ds	1
   410  000004                     color_writetoaddr@address:
   411                           	callstack 0
   412  000004                     I2C_2_Master_Read@tmp:
   413                           	callstack 0
   414                           
   415                           ; 1 bytes @ 0x3
   416  000004                     	ds	1
   417  000005                     ??_fputc:
   418  000005                     ??_color_click_init:
   419  000005                     ?_color_read_Red:
   420                           	callstack 0
   421  000005                     ?_color_read_Blue:
   422                           	callstack 0
   423  000005                     ?_color_read_Green:
   424                           	callstack 0
   425  000005                     ?_color_read_Clear:
   426                           	callstack 0
   427                           
   428                           ; 2 bytes @ 0x4
   429  000005                     	ds	2
   430  000007                     ??_color_read_Red:
   431  000007                     ??_color_read_Blue:
   432  000007                     ??_color_read_Green:
   433  000007                     ??_color_read_Clear:
   434                           
   435                           ; 1 bytes @ 0x6
   436  000007                     	ds	2
   437  000009                     ___aodiv@divisor:
   438                           	callstack 0
   439  000009                     ___aomod@divisor:
   440                           	callstack 0
   441                           
   442                           ; 8 bytes @ 0x8
   443  000009                     	ds	1
   444  00000A                     color_read_Red@tmp:
   445                           	callstack 0
   446  00000A                     color_read_Blue@tmp:
   447                           	callstack 0
   448  00000A                     color_read_Green@tmp:
   449                           	callstack 0
   450  00000A                     color_read_Clear@tmp:
   451                           	callstack 0
   452  00000A                     fputs@s:
   453                           	callstack 0
   454                           
   455                           ; 2 bytes @ 0x9
   456  00000A                     	ds	2
   457  00000C                     get_color@m:
   458                           	callstack 0
   459  00000C                     fputs@fp:
   460                           	callstack 0
   461                           
   462                           ; 2 bytes @ 0xB
   463  00000C                     	ds	2
   464  00000E                     fputs@c:
   465                           	callstack 0
   466  00000E                     LED_R@m:
   467                           	callstack 0
   468  00000E                     LED_C@m:
   469                           	callstack 0
   470  00000E                     LED_B@m:
   471                           	callstack 0
   472  00000E                     LED_G@m:
   473                           	callstack 0
   474                           
   475                           ; 2 bytes @ 0xD
   476  00000E                     	ds	1
   477  00000F                     fputs@i:
   478                           	callstack 0
   479                           
   480                           ; 2 bytes @ 0xE
   481  00000F                     	ds	1
   482  000010                     ??_LED_R:
   483  000010                     ??_LED_C:
   484  000010                     ??_LED_B:
   485  000010                     ??_LED_G:
   486                           
   487                           ; 1 bytes @ 0xF
   488  000010                     	ds	1
   489  000011                     ?_pad:
   490                           	callstack 0
   491  000011                     ___aodiv@counter:
   492                           	callstack 0
   493  000011                     ___aomod@counter:
   494                           	callstack 0
   495  000011                     pad@fp:
   496                           	callstack 0
   497                           
   498                           ; 2 bytes @ 0x10
   499  000011                     	ds	1
   500  000012                     ___aodiv@sign:
   501                           	callstack 0
   502  000012                     ___aomod@sign:
   503                           	callstack 0
   504                           
   505                           ; 1 bytes @ 0x11
   506  000012                     	ds	1
   507  000013                     ?_abs:
   508                           	callstack 0
   509  000013                     pad@buf:
   510                           	callstack 0
   511  000013                     abs@a:
   512                           	callstack 0
   513  000013                     ___aodiv@quotient:
   514                           	callstack 0
   515                           
   516                           ; 8 bytes @ 0x12
   517  000013                     	ds	2
   518  000015                     ??_abs:
   519  000015                     pad@p:
   520                           	callstack 0
   521                           
   522                           ; 2 bytes @ 0x14
   523  000015                     	ds	2
   524  000017                     ??_pad:
   525                           
   526                           ; 1 bytes @ 0x16
   527  000017                     	ds	1
   528  000018                     pad@i:
   529                           	callstack 0
   530                           
   531                           ; 2 bytes @ 0x17
   532  000018                     	ds	2
   533  00001A                     pad@w:
   534                           	callstack 0
   535                           
   536                           ; 2 bytes @ 0x19
   537  00001A                     	ds	2
   538  00001C                     ?_dtoa:
   539                           	callstack 0
   540  00001C                     dtoa@fp:
   541                           	callstack 0
   542                           
   543                           ; 2 bytes @ 0x1B
   544  00001C                     	ds	2
   545  00001E                     dtoa@d:
   546                           	callstack 0
   547                           
   548                           ; 8 bytes @ 0x1D
   549  00001E                     	ds	8
   550  000026                     ??_dtoa:
   551                           
   552                           ; 1 bytes @ 0x25
   553  000026                     	ds	8
   554  00002E                     _dtoa$2127:
   555                           	callstack 0
   556                           
   557                           ; 2 bytes @ 0x2D
   558  00002E                     	ds	2
   559  000030                     dtoa@p:
   560                           	callstack 0
   561                           
   562                           ; 2 bytes @ 0x2F
   563  000030                     	ds	2
   564  000032                     dtoa@w:
   565                           	callstack 0
   566                           
   567                           ; 2 bytes @ 0x31
   568  000032                     	ds	2
   569  000034                     dtoa@s:
   570                           	callstack 0
   571                           
   572                           ; 2 bytes @ 0x33
   573  000034                     	ds	2
   574  000036                     dtoa@n:
   575                           	callstack 0
   576                           
   577                           ; 8 bytes @ 0x35
   578  000036                     	ds	8
   579  00003E                     dtoa@i:
   580                           	callstack 0
   581                           
   582                           ; 2 bytes @ 0x3D
   583  00003E                     	ds	2
   584  000040                     ?_vfpfcnvrt:
   585                           	callstack 0
   586  000040                     vfpfcnvrt@fp:
   587                           	callstack 0
   588                           
   589                           ; 2 bytes @ 0x3F
   590  000040                     	ds	2
   591  000042                     vfpfcnvrt@fmt:
   592                           	callstack 0
   593                           
   594                           ; 2 bytes @ 0x41
   595  000042                     	ds	2
   596  000044                     vfpfcnvrt@ap:
   597                           	callstack 0
   598                           
   599                           ; 2 bytes @ 0x43
   600  000044                     	ds	2
   601  000046                     ??_vfpfcnvrt:
   602                           
   603                           ; 1 bytes @ 0x45
   604  000046                     	ds	2
   605  000048                     vfpfcnvrt@ll:
   606                           	callstack 0
   607                           
   608                           ; 8 bytes @ 0x47
   609  000048                     	ds	8
   610  000050                     ?_vfprintf:
   611                           	callstack 0
   612  000050                     vfprintf@fp:
   613                           	callstack 0
   614                           
   615                           ; 2 bytes @ 0x4F
   616  000050                     	ds	2
   617  000052                     vfprintf@fmt:
   618                           	callstack 0
   619                           
   620                           ; 2 bytes @ 0x51
   621  000052                     	ds	2
   622  000054                     vfprintf@ap:
   623                           	callstack 0
   624                           
   625                           ; 2 bytes @ 0x53
   626  000054                     	ds	2
   627  000056                     vfprintf@cfmt:
   628                           	callstack 0
   629                           
   630                           ; 2 bytes @ 0x55
   631  000056                     	ds	2
   632  000058                     color_display@m:
   633                           	callstack 0
   634                           
   635                           ; 2 bytes @ 0x57
   636  000058                     	ds	2
   637  00005A                     ??_main:
   638                           
   639                           ; 1 bytes @ 0x59
   640  00005A                     	ds	2
   641                           
   642 ;;
   643 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   644 ;;
   645 ;; *************** function _main *****************
   646 ;; Defined at:
   647 ;;		line 30 in file "main.c"
   648 ;; Parameters:    Size  Location     Type
   649 ;;		None
   650 ;; Auto vars:     Size  Location     Type
   651 ;;  motorR         10   19[BANK1 ] struct DC_motor
   652 ;;  motorL         10    9[BANK1 ] struct DC_motor
   653 ;;  rgb             8   29[BANK1 ] struct color_rgb
   654 ;;  x               2    7[BANK1 ] int 
   655 ;;  k               2    5[BANK1 ] int 
   656 ;;  j               2    3[BANK1 ] int 
   657 ;;  i               2    1[BANK1 ] int 
   658 ;;  complete        1    0[BANK1 ] unsigned char 
   659 ;;  color           1    0        unsigned char 
   660 ;; Return value:  Size  Location     Type
   661 ;;                  1    wreg      void 
   662 ;; Registers used:
   663 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   664 ;; Tracked objects:
   665 ;;		On entry : 0/0
   666 ;;		On exit  : 0/0
   667 ;;		Unchanged: 0/0
   668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   669 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   670 ;;      Locals:         0       0      37       0       0       0       0       0       0       0       0       0       
      +0       0       0
   671 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   672 ;;      Totals:         2       0      37       0       0       0       0       0       0       0       0       0       
      +0       0       0
   673 ;;Total ram usage:       39 bytes
   674 ;; Hardware stack levels required when called: 9
   675 ;; This function calls:
   676 ;;		_I2C_2_Master_Init
   677 ;;		_LED_B
   678 ;;		_LED_C
   679 ;;		_LED_G
   680 ;;		_LED_R
   681 ;;		_color_click_init
   682 ;;		_color_display
   683 ;;		_color_predict
   684 ;;		_initDCmotorsPWM
   685 ;;		_initDCmotors_parameter
   686 ;;		_initUSART4
   687 ;; This function is called by:
   688 ;;		Startup code after reset
   689 ;; This function uses a non-reentrant model
   690 ;;
   691                           
   692                           	psect	text0
   693  0010F6                     __ptext0:
   694                           	callstack 0
   695  0010F6                     _main:
   696                           	callstack 22
   697  0010F6                     
   698                           ;main.c: 31:     I2C_2_Master_Init();
   699  0010F6  ECC5  F00F         	call	_I2C_2_Master_Init	;wreg free
   700  0010FA                     
   701                           ;main.c: 32:     color_click_init();
   702  0010FA  EC24  F00F         	call	_color_click_init	;wreg free
   703  0010FE                     
   704                           ;main.c: 33:     initDCmotorsPWM(199);
   705  0010FE  0E00               	movlw	0
   706  001100  6E02               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
   707  001102  0EC7               	movlw	199
   708  001104  6E01               	movwf	initDCmotorsPWM@PWMperiod^0,c
   709  001106  EC87  F00E         	call	_initDCmotorsPWM	;wreg free
   710  00110A                     
   711                           ;main.c: 35:     initUSART4();
   712  00110A  ECFE  F00F         	call	_initUSART4	;wreg free
   713  00110E                     
   714                           ;main.c: 37:     struct color_rgb rgb;;main.c: 38:     struct DC_motor motorL, motorR;;m
      +                          ain.c: 40:     initDCmotors_parameter(&motorL, &motorR);
   715  00110E  0E65               	movlw	low main@motorL
   716  001110  6E01               	movwf	initDCmotors_parameter@motorL^0,c
   717  001112  0E01               	movlw	high main@motorL
   718  001114  6E02               	movwf	(initDCmotors_parameter@motorL+1)^0,c
   719  001116  0E6F               	movlw	low main@motorR
   720  001118  6E03               	movwf	initDCmotors_parameter@motorR^0,c
   721  00111A  0E01               	movlw	high main@motorR
   722  00111C  6E04               	movwf	(initDCmotors_parameter@motorR+1)^0,c
   723  00111E  ECD3  F00B         	call	_initDCmotors_parameter	;wreg free
   724  001122                     
   725                           ;main.c: 42:     TRISFbits.TRISF6 = 0;
   726  001122  9C86               	bcf	134,6,c	;volatile
   727  001124                     
   728                           ;main.c: 43:     LATFbits.LATF6 = 0;
   729  001124  9C7E               	bcf	126,6,c	;volatile
   730  001126                     
   731                           ;main.c: 45:     TRISGbits.TRISG1 = 0;
   732  001126  9287               	bcf	135,1,c	;volatile
   733  001128                     
   734                           ;main.c: 46:     TRISFbits.TRISF7 = 0;
   735  001128  9E86               	bcf	134,7,c	;volatile
   736  00112A                     
   737                           ;main.c: 47:     TRISAbits.TRISA4 = 0;
   738  00112A  9881               	bcf	129,4,c	;volatile
   739  00112C                     
   740                           ;main.c: 48:     LATGbits.LATG1 = 1;
   741  00112C  827F               	bsf	127,1,c	;volatile
   742  00112E                     
   743                           ;main.c: 49:     LATFbits.LATF7 = 1;
   744  00112E  8E7E               	bsf	126,7,c	;volatile
   745  001130                     
   746                           ;main.c: 50:     LATAbits.LATA4 = 1;
   747  001130  8879               	bsf	121,4,c	;volatile
   748  001132                     
   749                           ;main.c: 53:     unsigned char complete = 0;
   750  001132  0E00               	movlw	0
   751  001134  0101               	movlb	1	; () banked
   752  001136  6F5C               	movwf	main@complete& (0+255),b
   753  001138                     
   754                           ; BSR set to: 1
   755                           ;main.c: 60:     _delay((unsigned long)((3000)*(64000000/4000.0)));
   756  001138  0EF4               	movlw	244
   757  00113A  6E5B               	movwf	(??_main+1)^0,c
   758  00113C  0E82               	movlw	130
   759  00113E  6E5A               	movwf	??_main^0,c
   760  001140  0E05               	movlw	5
   761  001142                     u1377:
   762  001142  2EE8               	decfsz	wreg,f,c
   763  001144  D7FE               	bra	u1377
   764  001146  2E5A               	decfsz	??_main^0,f,c
   765  001148  D7FC               	bra	u1377
   766  00114A  2E5B               	decfsz	(??_main+1)^0,f,c
   767  00114C  D7FA               	bra	u1377
   768  00114E  F000               	nop	
   769  001150  EF76  F009         	goto	l2528
   770  001154                     l2452:
   771                           
   772                           ; BSR set to: 1
   773                           ;main.c: 65:                 for (i = 0; i < 50; ++i){
   774  001154  0E00               	movlw	0
   775  001156  6F5E               	movwf	(main@i+1)& (0+255),b
   776  001158  0E00               	movlw	0
   777  00115A  6F5D               	movwf	main@i& (0+255),b
   778  00115C                     l2458:
   779                           
   780                           ; BSR set to: 1
   781                           ;main.c: 66:                     LED_C(&rgb);
   782  00115C  0E79               	movlw	low main@rgb
   783  00115E  6E0E               	movwf	LED_C@m^0,c
   784  001160  0E01               	movlw	high main@rgb
   785  001162  6E0F               	movwf	(LED_C@m+1)^0,c
   786  001164  EC99  F00F         	call	_LED_C	;wreg free
   787  001168                     
   788                           ;main.c: 67:                     color_display(&rgb);
   789  001168  0E79               	movlw	low main@rgb
   790  00116A  6E58               	movwf	color_display@m^0,c
   791  00116C  0E01               	movlw	high main@rgb
   792  00116E  6E59               	movwf	(color_display@m+1)^0,c
   793  001170  EC04  F00D         	call	_color_display	;wreg free
   794  001174                     
   795                           ;main.c: 68:                     _delay((unsigned long)((100)*(64000000/4000.0)));
   796  001174  0E09               	movlw	9
   797  001176  6E5B               	movwf	(??_main+1)^0,c
   798  001178  0E1E               	movlw	30
   799  00117A  6E5A               	movwf	??_main^0,c
   800  00117C  0EE4               	movlw	228
   801  00117E                     u1387:
   802  00117E  2EE8               	decfsz	wreg,f,c
   803  001180  D7FE               	bra	u1387
   804  001182  2E5A               	decfsz	??_main^0,f,c
   805  001184  D7FC               	bra	u1387
   806  001186  2E5B               	decfsz	(??_main+1)^0,f,c
   807  001188  D7FA               	bra	u1387
   808  00118A  D000               	nop2	
   809  00118C                     
   810                           ;main.c: 69:                 }
   811  00118C  0101               	movlb	1	; () banked
   812  00118E  4B5D               	infsnz	main@i& (0+255),f,b
   813  001190  2B5E               	incf	(main@i+1)& (0+255),f,b
   814  001192                     
   815                           ; BSR set to: 1
   816  001192  BF5E               	btfsc	(main@i+1)& (0+255),7,b
   817  001194  EFD5  F008         	goto	u1321
   818  001198  515E               	movf	(main@i+1)& (0+255),w,b
   819  00119A  E109               	bnz	u1320
   820  00119C  0E32               	movlw	50
   821  00119E  5D5D               	subwf	main@i& (0+255),w,b
   822  0011A0  A0D8               	btfss	status,0,c
   823  0011A2  EFD5  F008         	goto	u1321
   824  0011A6  EFD7  F008         	goto	u1320
   825  0011AA                     u1321:
   826  0011AA  EFAE  F008         	goto	l2458
   827  0011AE                     u1320:
   828  0011AE                     
   829                           ; BSR set to: 1
   830                           ;main.c: 70:                 color_predict(00000);
   831  0011AE  0E00               	movlw	0
   832  0011B0  EC56  F00F         	call	_color_predict
   833  0011B4                     
   834                           ;main.c: 71:                 for (j = 0; j < 50; ++j){
   835  0011B4  0E00               	movlw	0
   836  0011B6  0101               	movlb	1	; () banked
   837  0011B8  6F60               	movwf	(main@j+1)& (0+255),b
   838  0011BA  0E00               	movlw	0
   839  0011BC  6F5F               	movwf	main@j& (0+255),b
   840  0011BE                     l2476:
   841                           
   842                           ; BSR set to: 1
   843                           ;main.c: 72:                     LED_R(&rgb);
   844  0011BE  0E79               	movlw	low main@rgb
   845  0011C0  6E0E               	movwf	LED_R@m^0,c
   846  0011C2  0E01               	movlw	high main@rgb
   847  0011C4  6E0F               	movwf	(LED_R@m+1)^0,c
   848  0011C6  EC6D  F00F         	call	_LED_R	;wreg free
   849  0011CA                     
   850                           ;main.c: 73:                     color_display(&rgb);
   851  0011CA  0E79               	movlw	low main@rgb
   852  0011CC  6E58               	movwf	color_display@m^0,c
   853  0011CE  0E01               	movlw	high main@rgb
   854  0011D0  6E59               	movwf	(color_display@m+1)^0,c
   855  0011D2  EC04  F00D         	call	_color_display	;wreg free
   856  0011D6                     
   857                           ;main.c: 74:                     _delay((unsigned long)((100)*(64000000/4000.0)));
   858  0011D6  0E09               	movlw	9
   859  0011D8  6E5B               	movwf	(??_main+1)^0,c
   860  0011DA  0E1E               	movlw	30
   861  0011DC  6E5A               	movwf	??_main^0,c
   862  0011DE  0EE4               	movlw	228
   863  0011E0                     u1397:
   864  0011E0  2EE8               	decfsz	wreg,f,c
   865  0011E2  D7FE               	bra	u1397
   866  0011E4  2E5A               	decfsz	??_main^0,f,c
   867  0011E6  D7FC               	bra	u1397
   868  0011E8  2E5B               	decfsz	(??_main+1)^0,f,c
   869  0011EA  D7FA               	bra	u1397
   870  0011EC  D000               	nop2	
   871  0011EE                     
   872                           ;main.c: 75:                 }
   873  0011EE  0101               	movlb	1	; () banked
   874  0011F0  4B5F               	infsnz	main@j& (0+255),f,b
   875  0011F2  2B60               	incf	(main@j+1)& (0+255),f,b
   876  0011F4                     
   877                           ; BSR set to: 1
   878  0011F4  BF60               	btfsc	(main@j+1)& (0+255),7,b
   879  0011F6  EF06  F009         	goto	u1331
   880  0011FA  5160               	movf	(main@j+1)& (0+255),w,b
   881  0011FC  E109               	bnz	u1330
   882  0011FE  0E32               	movlw	50
   883  001200  5D5F               	subwf	main@j& (0+255),w,b
   884  001202  A0D8               	btfss	status,0,c
   885  001204  EF06  F009         	goto	u1331
   886  001208  EF08  F009         	goto	u1330
   887  00120C                     u1331:
   888  00120C  EFDF  F008         	goto	l2476
   889  001210                     u1330:
   890  001210                     
   891                           ; BSR set to: 1
   892                           ;main.c: 76:                 color_predict(00000);
   893  001210  0E00               	movlw	0
   894  001212  EC56  F00F         	call	_color_predict
   895  001216                     
   896                           ;main.c: 77:                 for (k = 0; k < 50; ++k){
   897  001216  0E00               	movlw	0
   898  001218  0101               	movlb	1	; () banked
   899  00121A  6F62               	movwf	(main@k+1)& (0+255),b
   900  00121C  0E00               	movlw	0
   901  00121E  6F61               	movwf	main@k& (0+255),b
   902  001220                     l2494:
   903                           
   904                           ; BSR set to: 1
   905                           ;main.c: 78:                     LED_G(&rgb);
   906  001220  0E79               	movlw	low main@rgb
   907  001222  6E0E               	movwf	LED_G@m^0,c
   908  001224  0E01               	movlw	high main@rgb
   909  001226  6E0F               	movwf	(LED_G@m+1)^0,c
   910  001228  EC83  F00F         	call	_LED_G	;wreg free
   911  00122C                     
   912                           ;main.c: 79:                     color_display(&rgb);
   913  00122C  0E79               	movlw	low main@rgb
   914  00122E  6E58               	movwf	color_display@m^0,c
   915  001230  0E01               	movlw	high main@rgb
   916  001232  6E59               	movwf	(color_display@m+1)^0,c
   917  001234  EC04  F00D         	call	_color_display	;wreg free
   918  001238                     
   919                           ;main.c: 80:                     _delay((unsigned long)((100)*(64000000/4000.0)));
   920  001238  0E09               	movlw	9
   921  00123A  6E5B               	movwf	(??_main+1)^0,c
   922  00123C  0E1E               	movlw	30
   923  00123E  6E5A               	movwf	??_main^0,c
   924  001240  0EE4               	movlw	228
   925  001242                     u1407:
   926  001242  2EE8               	decfsz	wreg,f,c
   927  001244  D7FE               	bra	u1407
   928  001246  2E5A               	decfsz	??_main^0,f,c
   929  001248  D7FC               	bra	u1407
   930  00124A  2E5B               	decfsz	(??_main+1)^0,f,c
   931  00124C  D7FA               	bra	u1407
   932  00124E  D000               	nop2	
   933  001250                     
   934                           ;main.c: 81:                 }
   935  001250  0101               	movlb	1	; () banked
   936  001252  4B61               	infsnz	main@k& (0+255),f,b
   937  001254  2B62               	incf	(main@k+1)& (0+255),f,b
   938  001256                     
   939                           ; BSR set to: 1
   940  001256  BF62               	btfsc	(main@k+1)& (0+255),7,b
   941  001258  EF37  F009         	goto	u1341
   942  00125C  5162               	movf	(main@k+1)& (0+255),w,b
   943  00125E  E109               	bnz	u1340
   944  001260  0E32               	movlw	50
   945  001262  5D61               	subwf	main@k& (0+255),w,b
   946  001264  A0D8               	btfss	status,0,c
   947  001266  EF37  F009         	goto	u1341
   948  00126A  EF39  F009         	goto	u1340
   949  00126E                     u1341:
   950  00126E  EF10  F009         	goto	l2494
   951  001272                     u1340:
   952  001272                     
   953                           ; BSR set to: 1
   954                           ;main.c: 82:                 color_predict(00000);
   955  001272  0E00               	movlw	0
   956  001274  EC56  F00F         	call	_color_predict
   957  001278                     
   958                           ;main.c: 83:                 for (x = 0; x < 50; ++x){
   959  001278  0E00               	movlw	0
   960  00127A  0101               	movlb	1	; () banked
   961  00127C  6F64               	movwf	(main@x+1)& (0+255),b
   962  00127E  0E00               	movlw	0
   963  001280  6F63               	movwf	main@x& (0+255),b
   964  001282                     l2512:
   965                           
   966                           ; BSR set to: 1
   967                           ;main.c: 84:                     LED_B(&rgb);
   968  001282  0E79               	movlw	low main@rgb
   969  001284  6E0E               	movwf	LED_B@m^0,c
   970  001286  0E01               	movlw	high main@rgb
   971  001288  6E0F               	movwf	(LED_B@m+1)^0,c
   972  00128A  ECAF  F00F         	call	_LED_B	;wreg free
   973  00128E                     
   974                           ;main.c: 85:                     color_display(&rgb);
   975  00128E  0E79               	movlw	low main@rgb
   976  001290  6E58               	movwf	color_display@m^0,c
   977  001292  0E01               	movlw	high main@rgb
   978  001294  6E59               	movwf	(color_display@m+1)^0,c
   979  001296  EC04  F00D         	call	_color_display	;wreg free
   980  00129A                     
   981                           ;main.c: 86:                     _delay((unsigned long)((100)*(64000000/4000.0)));
   982  00129A  0E09               	movlw	9
   983  00129C  6E5B               	movwf	(??_main+1)^0,c
   984  00129E  0E1E               	movlw	30
   985  0012A0  6E5A               	movwf	??_main^0,c
   986  0012A2  0EE4               	movlw	228
   987  0012A4                     u1417:
   988  0012A4  2EE8               	decfsz	wreg,f,c
   989  0012A6  D7FE               	bra	u1417
   990  0012A8  2E5A               	decfsz	??_main^0,f,c
   991  0012AA  D7FC               	bra	u1417
   992  0012AC  2E5B               	decfsz	(??_main+1)^0,f,c
   993  0012AE  D7FA               	bra	u1417
   994  0012B0  D000               	nop2	
   995  0012B2                     
   996                           ;main.c: 87:                 }
   997  0012B2  0101               	movlb	1	; () banked
   998  0012B4  4B63               	infsnz	main@x& (0+255),f,b
   999  0012B6  2B64               	incf	(main@x+1)& (0+255),f,b
  1000  0012B8                     
  1001                           ; BSR set to: 1
  1002  0012B8  BF64               	btfsc	(main@x+1)& (0+255),7,b
  1003  0012BA  EF68  F009         	goto	u1351
  1004  0012BE  5164               	movf	(main@x+1)& (0+255),w,b
  1005  0012C0  E109               	bnz	u1350
  1006  0012C2  0E32               	movlw	50
  1007  0012C4  5D63               	subwf	main@x& (0+255),w,b
  1008  0012C6  A0D8               	btfss	status,0,c
  1009  0012C8  EF68  F009         	goto	u1351
  1010  0012CC  EF6A  F009         	goto	u1350
  1011  0012D0                     u1351:
  1012  0012D0  EF41  F009         	goto	l2512
  1013  0012D4                     u1350:
  1014  0012D4                     
  1015                           ; BSR set to: 1
  1016                           ;main.c: 88:                 color_predict(00000);
  1017  0012D4  0E00               	movlw	0
  1018  0012D6  EC56  F00F         	call	_color_predict
  1019  0012DA                     
  1020                           ;main.c: 89:                 complete = 1;
  1021  0012DA  0E01               	movlw	1
  1022  0012DC  0101               	movlb	1	; () banked
  1023  0012DE  6F5C               	movwf	main@complete& (0+255),b
  1024  0012E0                     
  1025                           ; BSR set to: 1
  1026                           ;main.c: 90:                 LED_C(&rgb);
  1027  0012E0  0E79               	movlw	low main@rgb
  1028  0012E2  6E0E               	movwf	LED_C@m^0,c
  1029  0012E4  0E01               	movlw	high main@rgb
  1030  0012E6  6E0F               	movwf	(LED_C@m+1)^0,c
  1031  0012E8  EC99  F00F         	call	_LED_C	;wreg free
  1032  0012EC                     l2528:
  1033                           
  1034                           ;main.c: 64:             while (complete == 0){
  1035  0012EC  0101               	movlb	1	; () banked
  1036  0012EE  515C               	movf	main@complete& (0+255),w,b
  1037  0012F0  B4D8               	btfsc	status,2,c
  1038  0012F2  EF7D  F009         	goto	u1361
  1039  0012F6  EF7F  F009         	goto	u1360
  1040  0012FA                     u1361:
  1041  0012FA  EFAA  F008         	goto	l2452
  1042  0012FE                     u1360:
  1043  0012FE  EF76  F009         	goto	l2528
  1044  001302  EF00  F000         	goto	start
  1045  001306                     __end_of_main:
  1046                           	callstack 0
  1047                           
  1048 ;; *************** function _initUSART4 *****************
  1049 ;; Defined at:
  1050 ;;		line 4 in file "serial.c"
  1051 ;; Parameters:    Size  Location     Type
  1052 ;;		None
  1053 ;; Auto vars:     Size  Location     Type
  1054 ;;		None
  1055 ;; Return value:  Size  Location     Type
  1056 ;;                  1    wreg      void 
  1057 ;; Registers used:
  1058 ;;		wreg, status,2
  1059 ;; Tracked objects:
  1060 ;;		On entry : 0/0
  1061 ;;		On exit  : 0/0
  1062 ;;		Unchanged: 0/0
  1063 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1064 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1065 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1066 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1067 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1068 ;;Total ram usage:        0 bytes
  1069 ;; Hardware stack levels used: 1
  1070 ;; This function calls:
  1071 ;;		Nothing
  1072 ;; This function is called by:
  1073 ;;		_main
  1074 ;; This function uses a non-reentrant model
  1075 ;;
  1076                           
  1077                           	psect	text1
  1078  001FFC                     __ptext1:
  1079                           	callstack 0
  1080  001FFC                     _initUSART4:
  1081                           	callstack 30
  1082  001FFC                     
  1083                           ;serial.c: 8:     RC0PPS = 0x12;
  1084  001FFC  0E12               	movlw	18
  1085  001FFE  010E               	movlb	14	; () banked
  1086  002000  6F62               	movwf	98,b	;volatile
  1087                           
  1088                           ;serial.c: 9:     RX4PPS = 0x11;
  1089  002002  0E11               	movlw	17
  1090  002004  6F15               	movwf	21,b	;volatile
  1091  002006                     
  1092                           ; BSR set to: 14
  1093                           ;serial.c: 11:     BAUD4CONbits.BRG16 = 0;
  1094  002006  97E9               	bcf	233,3,b	;volatile
  1095  002008                     
  1096                           ; BSR set to: 14
  1097                           ;serial.c: 12:     TX4STAbits.BRGH = 0;
  1098  002008  95E8               	bcf	232,2,b	;volatile
  1099                           
  1100                           ;serial.c: 13:     SP4BRGL = 51;
  1101  00200A  0E33               	movlw	51
  1102  00200C  6FE5               	movwf	229,b	;volatile
  1103                           
  1104                           ;serial.c: 15:     SP4BRGH = 0;
  1105  00200E  0E00               	movlw	0
  1106  002010  6FE6               	movwf	230,b	;volatile
  1107  002012                     
  1108                           ; BSR set to: 14
  1109                           ;serial.c: 17:     RC4STAbits.CREN = 1;
  1110  002012  89E7               	bsf	231,4,b	;volatile
  1111  002014                     
  1112                           ; BSR set to: 14
  1113                           ;serial.c: 18:     TX4STAbits.TXEN = 1;
  1114  002014  8BE8               	bsf	232,5,b	;volatile
  1115  002016                     
  1116                           ; BSR set to: 14
  1117                           ;serial.c: 19:     RC4STAbits.SPEN = 1;
  1118  002016  8FE7               	bsf	231,7,b	;volatile
  1119  002018                     
  1120                           ; BSR set to: 14
  1121  002018  0012               	return		;funcret
  1122  00201A                     __end_of_initUSART4:
  1123                           	callstack 0
  1124                           
  1125 ;; *************** function _initDCmotors_parameter *****************
  1126 ;; Defined at:
  1127 ;;		line 37 in file "dc_motor.c"
  1128 ;; Parameters:    Size  Location     Type
  1129 ;;  motorL          2    0[COMRAM] PTR struct DC_motor
  1130 ;;		 -> main@motorL(10), 
  1131 ;;  motorR          2    2[COMRAM] PTR struct DC_motor
  1132 ;;		 -> main@motorR(10), 
  1133 ;; Auto vars:     Size  Location     Type
  1134 ;;		None
  1135 ;; Return value:  Size  Location     Type
  1136 ;;                  1    wreg      void 
  1137 ;; Registers used:
  1138 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1139 ;; Tracked objects:
  1140 ;;		On entry : 0/0
  1141 ;;		On exit  : 0/0
  1142 ;;		Unchanged: 0/0
  1143 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1144 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1145 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1146 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1147 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1148 ;;Total ram usage:        4 bytes
  1149 ;; Hardware stack levels used: 1
  1150 ;; This function calls:
  1151 ;;		Nothing
  1152 ;; This function is called by:
  1153 ;;		_main
  1154 ;; This function uses a non-reentrant model
  1155 ;;
  1156                           
  1157                           	psect	text2
  1158  0017A6                     __ptext2:
  1159                           	callstack 0
  1160  0017A6                     _initDCmotors_parameter:
  1161                           	callstack 30
  1162  0017A6                     
  1163                           ;dc_motor.c: 39:     motorL->power = 0;;dc_motor.c: 39:     motorL->power = 0;
  1164  0017A6  C001  FFD9         	movff	initDCmotors_parameter@motorL,fsr2l
  1165  0017AA  C002  FFDA         	movff	initDCmotors_parameter@motorL+1,fsr2h
  1166  0017AE  0E00               	movlw	0
  1167  0017B0  6EDF               	movwf	indf2,c
  1168  0017B2                     
  1169                           ;dc_motor.c: 40:     motorL->direction = 1;;dc_motor.c: 40:     motorL->direction = 1;
  1170  0017B2  EE20 F001          	lfsr	2,1
  1171  0017B6  5001               	movf	initDCmotors_parameter@motorL^0,w,c
  1172  0017B8  26D9               	addwf	fsr2l,f,c
  1173  0017BA  5002               	movf	(initDCmotors_parameter@motorL+1)^0,w,c
  1174  0017BC  22DA               	addwfc	fsr2h,f,c
  1175  0017BE  0E01               	movlw	1
  1176  0017C0  6EDF               	movwf	indf2,c
  1177  0017C2                     
  1178                           ;dc_motor.c: 41:     motorL->dutyHighByte = (unsigned char *)(&PWM6DCH);;dc_motor.c: 41:
      +                               motorL->dutyHighByte = (unsigned char *)(&PWM6DCH);
  1179  0017C2  EE20 F002          	lfsr	2,2
  1180  0017C6  5001               	movf	initDCmotors_parameter@motorL^0,w,c
  1181  0017C8  26D9               	addwf	fsr2l,f,c
  1182  0017CA  5002               	movf	(initDCmotors_parameter@motorL+1)^0,w,c
  1183  0017CC  22DA               	addwfc	fsr2h,f,c
  1184  0017CE  0EA3               	movlw	163
  1185  0017D0  6EDE               	movwf	postinc2,c
  1186  0017D2  0E0F               	movlw	15
  1187  0017D4  6EDD               	movwf	postdec2,c
  1188  0017D6                     
  1189                           ;dc_motor.c: 42:     motorL->dir_LAT = (unsigned char *)(&LATE);;dc_motor.c: 42:     mot
      +                          orL->dir_LAT = (unsigned char *)(&LATE);
  1190  0017D6  EE20 F004          	lfsr	2,4
  1191  0017DA  5001               	movf	initDCmotors_parameter@motorL^0,w,c
  1192  0017DC  26D9               	addwf	fsr2l,f,c
  1193  0017DE  5002               	movf	(initDCmotors_parameter@motorL+1)^0,w,c
  1194  0017E0  22DA               	addwfc	fsr2h,f,c
  1195  0017E2  0E7D               	movlw	125
  1196  0017E4  6EDE               	movwf	postinc2,c
  1197  0017E6  0E0F               	movlw	15
  1198  0017E8  6EDD               	movwf	postdec2,c
  1199  0017EA                     
  1200                           ;dc_motor.c: 43:     motorL->dir_pin = 4;;dc_motor.c: 43:     motorL->dir_pin = 4;
  1201  0017EA  EE20 F006          	lfsr	2,6
  1202  0017EE  5001               	movf	initDCmotors_parameter@motorL^0,w,c
  1203  0017F0  26D9               	addwf	fsr2l,f,c
  1204  0017F2  5002               	movf	(initDCmotors_parameter@motorL+1)^0,w,c
  1205  0017F4  22DA               	addwfc	fsr2h,f,c
  1206  0017F6  0E04               	movlw	4
  1207  0017F8  6EDF               	movwf	indf2,c
  1208  0017FA                     
  1209                           ;dc_motor.c: 44:     motorL->PWMperiod = 199;;dc_motor.c: 44:     motorL->PWMperiod = 19
      +                          9;
  1210  0017FA  EE20 F007          	lfsr	2,7
  1211  0017FE  5001               	movf	initDCmotors_parameter@motorL^0,w,c
  1212  001800  26D9               	addwf	fsr2l,f,c
  1213  001802  5002               	movf	(initDCmotors_parameter@motorL+1)^0,w,c
  1214  001804  22DA               	addwfc	fsr2h,f,c
  1215  001806  0EC7               	movlw	199
  1216  001808  6EDE               	movwf	postinc2,c
  1217  00180A  0E00               	movlw	0
  1218  00180C  6EDD               	movwf	postdec2,c
  1219  00180E                     
  1220                           ;dc_motor.c: 47:     motorR->power = 0;;dc_motor.c: 47:     motorR->power = 0;
  1221  00180E  C003  FFD9         	movff	initDCmotors_parameter@motorR,fsr2l
  1222  001812  C004  FFDA         	movff	initDCmotors_parameter@motorR+1,fsr2h
  1223  001816  0E00               	movlw	0
  1224  001818  6EDF               	movwf	indf2,c
  1225                           
  1226                           ;dc_motor.c: 48:     motorR->direction = 1;;dc_motor.c: 48:     motorR->direction = 1;
  1227  00181A  EE20 F001          	lfsr	2,1
  1228  00181E  5003               	movf	initDCmotors_parameter@motorR^0,w,c
  1229  001820  26D9               	addwf	fsr2l,f,c
  1230  001822  5004               	movf	(initDCmotors_parameter@motorR+1)^0,w,c
  1231  001824  22DA               	addwfc	fsr2h,f,c
  1232  001826  0E01               	movlw	1
  1233  001828  6EDF               	movwf	indf2,c
  1234                           
  1235                           ;dc_motor.c: 49:     motorR->dutyHighByte = (unsigned char *)(&PWM7DCH);;dc_motor.c: 49:
      +                               motorR->dutyHighByte = (unsigned char *)(&PWM7DCH);
  1236  00182A  EE20 F002          	lfsr	2,2
  1237  00182E  5003               	movf	initDCmotors_parameter@motorR^0,w,c
  1238  001830  26D9               	addwf	fsr2l,f,c
  1239  001832  5004               	movf	(initDCmotors_parameter@motorR+1)^0,w,c
  1240  001834  22DA               	addwfc	fsr2h,f,c
  1241  001836  0EA0               	movlw	160
  1242  001838  6EDE               	movwf	postinc2,c
  1243  00183A  0E0F               	movlw	15
  1244  00183C  6EDD               	movwf	postdec2,c
  1245                           
  1246                           ;dc_motor.c: 50:     motorR->dir_LAT = (unsigned char *)(&LATG);;dc_motor.c: 50:     mot
      +                          orR->dir_LAT = (unsigned char *)(&LATG);
  1247  00183E  EE20 F004          	lfsr	2,4
  1248  001842  5003               	movf	initDCmotors_parameter@motorR^0,w,c
  1249  001844  26D9               	addwf	fsr2l,f,c
  1250  001846  5004               	movf	(initDCmotors_parameter@motorR+1)^0,w,c
  1251  001848  22DA               	addwfc	fsr2h,f,c
  1252  00184A  0E7F               	movlw	127
  1253  00184C  6EDE               	movwf	postinc2,c
  1254  00184E  0E0F               	movlw	15
  1255  001850  6EDD               	movwf	postdec2,c
  1256                           
  1257                           ;dc_motor.c: 51:     motorR->dir_pin = 6;;dc_motor.c: 51:     motorR->dir_pin = 6;
  1258  001852  EE20 F006          	lfsr	2,6
  1259  001856  5003               	movf	initDCmotors_parameter@motorR^0,w,c
  1260  001858  26D9               	addwf	fsr2l,f,c
  1261  00185A  5004               	movf	(initDCmotors_parameter@motorR+1)^0,w,c
  1262  00185C  22DA               	addwfc	fsr2h,f,c
  1263  00185E  0E06               	movlw	6
  1264  001860  6EDF               	movwf	indf2,c
  1265                           
  1266                           ;dc_motor.c: 52:     motorR->PWMperiod = 199;;dc_motor.c: 52:     motorR->PWMperiod = 19
      +                          9;
  1267  001862  EE20 F007          	lfsr	2,7
  1268  001866  5003               	movf	initDCmotors_parameter@motorR^0,w,c
  1269  001868  26D9               	addwf	fsr2l,f,c
  1270  00186A  5004               	movf	(initDCmotors_parameter@motorR+1)^0,w,c
  1271  00186C  22DA               	addwfc	fsr2h,f,c
  1272  00186E  0EC7               	movlw	199
  1273  001870  6EDE               	movwf	postinc2,c
  1274  001872  0E00               	movlw	0
  1275  001874  6EDD               	movwf	postdec2,c
  1276  001876  0012               	return		;funcret
  1277  001878                     __end_of_initDCmotors_parameter:
  1278                           	callstack 0
  1279                           
  1280 ;; *************** function _initDCmotorsPWM *****************
  1281 ;; Defined at:
  1282 ;;		line 7 in file "dc_motor.c"
  1283 ;; Parameters:    Size  Location     Type
  1284 ;;  PWMperiod       2    0[COMRAM] int 
  1285 ;; Auto vars:     Size  Location     Type
  1286 ;;		None
  1287 ;; Return value:  Size  Location     Type
  1288 ;;                  1    wreg      void 
  1289 ;; Registers used:
  1290 ;;		wreg, status,2
  1291 ;; Tracked objects:
  1292 ;;		On entry : 0/0
  1293 ;;		On exit  : 0/0
  1294 ;;		Unchanged: 0/0
  1295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1296 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1297 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1298 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1299 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1300 ;;Total ram usage:        2 bytes
  1301 ;; Hardware stack levels used: 1
  1302 ;; This function calls:
  1303 ;;		Nothing
  1304 ;; This function is called by:
  1305 ;;		_main
  1306 ;; This function uses a non-reentrant model
  1307 ;;
  1308                           
  1309                           	psect	text3
  1310  001D0E                     __ptext3:
  1311                           	callstack 0
  1312  001D0E                     _initDCmotorsPWM:
  1313                           	callstack 30
  1314  001D0E                     
  1315                           ;dc_motor.c: 10:     TRISEbits.TRISE2=0;;dc_motor.c: 10:     TRISEbits.TRISE2=0;
  1316  001D0E  9485               	bcf	133,2,c	;volatile
  1317                           
  1318                           ;dc_motor.c: 11:     TRISCbits.TRISC7=0;;dc_motor.c: 11:     TRISCbits.TRISC7=0;
  1319  001D10  9E83               	bcf	131,7,c	;volatile
  1320                           
  1321                           ;dc_motor.c: 12:     TRISGbits.TRISG6=0;;dc_motor.c: 12:     TRISGbits.TRISG6=0;
  1322  001D12  9C87               	bcf	135,6,c	;volatile
  1323                           
  1324                           ;dc_motor.c: 13:     TRISEbits.TRISE4=0;;dc_motor.c: 13:     TRISEbits.TRISE4=0;
  1325  001D14  9885               	bcf	133,4,c	;volatile
  1326                           
  1327                           ;dc_motor.c: 14:     LATEbits.LATE2=0;;dc_motor.c: 14:     LATEbits.LATE2=0;
  1328  001D16  947D               	bcf	125,2,c	;volatile
  1329                           
  1330                           ;dc_motor.c: 15:     LATCbits.LATC7=0;;dc_motor.c: 15:     LATCbits.LATC7=0;
  1331  001D18  9E7B               	bcf	123,7,c	;volatile
  1332                           
  1333                           ;dc_motor.c: 16:     LATGbits.LATG6=0;;dc_motor.c: 16:     LATGbits.LATG6=0;
  1334  001D1A  9C7F               	bcf	127,6,c	;volatile
  1335                           
  1336                           ;dc_motor.c: 17:     LATEbits.LATE4=0;;dc_motor.c: 17:     LATEbits.LATE4=0;
  1337  001D1C  987D               	bcf	125,4,c	;volatile
  1338  001D1E                     
  1339                           ;dc_motor.c: 20:     T2CONbits.CKPS=0b011;;dc_motor.c: 20:     T2CONbits.CKPS=0b011;
  1340  001D1E  50BD               	movf	189,w,c	;volatile
  1341  001D20  0B8F               	andlw	-113
  1342  001D22  0930               	iorlw	48
  1343  001D24  6EBD               	movwf	189,c	;volatile
  1344                           
  1345                           ;dc_motor.c: 21:     T2HLTbits.MODE=0b00000;;dc_motor.c: 21:     T2HLTbits.MODE=0b00000;
  1346  001D26  0EE0               	movlw	-32
  1347  001D28  16BE               	andwf	190,f,c	;volatile
  1348                           
  1349                           ;dc_motor.c: 22:     T2CLKCONbits.CS=0b0001;;dc_motor.c: 22:     T2CLKCONbits.CS=0b0001;
  1350  001D2A  50BF               	movf	191,w,c	;volatile
  1351  001D2C  0BF0               	andlw	-16
  1352  001D2E  0901               	iorlw	1
  1353  001D30  6EBF               	movwf	191,c	;volatile
  1354                           
  1355                           ;dc_motor.c: 25:     T2PR=200-1;;dc_motor.c: 25:     T2PR=200-1;
  1356  001D32  0EC7               	movlw	199
  1357  001D34  6EBC               	movwf	188,c	;volatile
  1358  001D36                     
  1359                           ;dc_motor.c: 26:     T2CONbits.ON=1;;dc_motor.c: 26:     T2CONbits.ON=1;
  1360  001D36  8EBD               	bsf	189,7,c	;volatile
  1361                           
  1362                           ;dc_motor.c: 28:     RE2PPS=0x0A;;dc_motor.c: 28:     RE2PPS=0x0A;
  1363  001D38  0E0A               	movlw	10
  1364  001D3A  010E               	movlb	14	; () banked
  1365  001D3C  6F74               	movwf	116,b	;volatile
  1366                           
  1367                           ;dc_motor.c: 29:     RC7PPS=0x0B;;dc_motor.c: 29:     RC7PPS=0x0B;
  1368  001D3E  0E0B               	movlw	11
  1369  001D40  6F69               	movwf	105,b	;volatile
  1370                           
  1371                           ;dc_motor.c: 31:     PWM6DCH=0;;dc_motor.c: 31:     PWM6DCH=0;
  1372  001D42  0E00               	movlw	0
  1373  001D44  6EA3               	movwf	163,c	;volatile
  1374                           
  1375                           ;dc_motor.c: 32:     PWM7DCH=0;;dc_motor.c: 32:     PWM7DCH=0;
  1376  001D46  0E00               	movlw	0
  1377  001D48  6EA0               	movwf	160,c	;volatile
  1378  001D4A                     
  1379                           ; BSR set to: 14
  1380                           ;dc_motor.c: 34:     PWM6CONbits.EN = 1;;dc_motor.c: 34:     PWM6CONbits.EN = 1;
  1381  001D4A  8EA4               	bsf	164,7,c	;volatile
  1382  001D4C                     
  1383                           ; BSR set to: 14
  1384                           ;dc_motor.c: 35:     PWM7CONbits.EN = 1;;dc_motor.c: 35:     PWM7CONbits.EN = 1;
  1385  001D4C  8EA1               	bsf	161,7,c	;volatile
  1386  001D4E                     
  1387                           ; BSR set to: 14
  1388  001D4E  0012               	return		;funcret
  1389  001D50                     __end_of_initDCmotorsPWM:
  1390                           	callstack 0
  1391                           
  1392 ;; *************** function _color_predict *****************
  1393 ;; Defined at:
  1394 ;;		line 141 in file "color.c"
  1395 ;; Parameters:    Size  Location     Type
  1396 ;;  color           1    wreg     unsigned char 
  1397 ;; Auto vars:     Size  Location     Type
  1398 ;;  color           1  125[BANK0 ] unsigned char 
  1399 ;;  buf           100   25[BANK0 ] unsigned char [100]
  1400 ;; Return value:  Size  Location     Type
  1401 ;;                  1    wreg      void 
  1402 ;; Registers used:
  1403 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1404 ;; Tracked objects:
  1405 ;;		On entry : 0/0
  1406 ;;		On exit  : 0/0
  1407 ;;		Unchanged: 0/0
  1408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1409 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1410 ;;      Locals:         0     101       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1411 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1412 ;;      Totals:         0     101       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1413 ;;Total ram usage:      101 bytes
  1414 ;; Hardware stack levels used: 1
  1415 ;; Hardware stack levels required when called: 8
  1416 ;; This function calls:
  1417 ;;		_sendStringSerial4
  1418 ;;		_sprintf
  1419 ;; This function is called by:
  1420 ;;		_main
  1421 ;; This function uses a non-reentrant model
  1422 ;;
  1423                           
  1424                           	psect	text4
  1425  001EAC                     __ptext4:
  1426                           	callstack 0
  1427  001EAC                     _color_predict:
  1428                           	callstack 22
  1429                           
  1430                           ; BSR set to: 14
  1431                           ;incstack = 0
  1432                           ;color_predict@color stored from wreg
  1433  001EAC  0100               	movlb	0	; () banked
  1434  001EAE  6FDD               	movwf	color_predict@color& (0+255),b
  1435  001EB0                     
  1436                           ;color.c: 141: void color_predict(unsigned char color);color.c: 141: void color_predict(
      +                          unsigned char color);color.c: 142: {;color.c: 142: {;color.c: 143:     char buf[100];;co
      +                          lor.c: 143:     char buf[100];;color.c: 144:     sprintf(buf,"\t%d\r\n", color);;color.c
      +                          : 144:     sprintf(buf,"\t%d\r\n", color);
  1437  001EB0  0E79               	movlw	low color_predict@buf
  1438  001EB2  0100               	movlb	0	; () banked
  1439  001EB4  6F60               	movwf	sprintf@s& (0+255),b
  1440  001EB6  0E00               	movlw	high color_predict@buf
  1441  001EB8  6F61               	movwf	(sprintf@s+1)& (0+255),b
  1442  001EBA  0E0A               	movlw	low (STR_1+9)
  1443  001EBC  6F62               	movwf	sprintf@fmt& (0+255),b
  1444  001EBE  0E0E               	movlw	high (STR_1+9)
  1445  001EC0  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
  1446  001EC2  C0DD  F064         	movff	color_predict@color,?_sprintf+4
  1447  001EC6  6B65               	clrf	(?_sprintf+5)& (0+255),b
  1448  001EC8  EC9C  F00D         	call	_sprintf	;wreg free
  1449  001ECC                     
  1450                           ;color.c: 145:     sendStringSerial4(buf);;color.c: 145:     sendStringSerial4(buf);
  1451  001ECC  0E79               	movlw	low color_predict@buf
  1452  001ECE  6E02               	movwf	sendStringSerial4@string^0,c
  1453  001ED0  0E00               	movlw	high color_predict@buf
  1454  001ED2  6E03               	movwf	(sendStringSerial4@string+1)^0,c
  1455  001ED4  EC3E  F00F         	call	_sendStringSerial4	;wreg free
  1456  001ED8  0012               	return		;funcret
  1457  001EDA                     __end_of_color_predict:
  1458                           	callstack 0
  1459                           
  1460 ;; *************** function _color_display *****************
  1461 ;; Defined at:
  1462 ;;		line 134 in file "color.c"
  1463 ;; Parameters:    Size  Location     Type
  1464 ;;  m               2   87[COMRAM] PTR struct color_rgb
  1465 ;;		 -> main@rgb(8), 
  1466 ;; Auto vars:     Size  Location     Type
  1467 ;;  buf           100   25[BANK0 ] unsigned char [100]
  1468 ;; Return value:  Size  Location     Type
  1469 ;;                  1    wreg      void 
  1470 ;; Registers used:
  1471 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1472 ;; Tracked objects:
  1473 ;;		On entry : 0/0
  1474 ;;		On exit  : 0/0
  1475 ;;		Unchanged: 0/0
  1476 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1477 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1478 ;;      Locals:         0     100       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1479 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1480 ;;      Totals:         2     100       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1481 ;;Total ram usage:      102 bytes
  1482 ;; Hardware stack levels used: 1
  1483 ;; Hardware stack levels required when called: 8
  1484 ;; This function calls:
  1485 ;;		_sendStringSerial4
  1486 ;;		_sprintf
  1487 ;; This function is called by:
  1488 ;;		_main
  1489 ;; This function uses a non-reentrant model
  1490 ;;
  1491                           
  1492                           	psect	text5
  1493  001A08                     __ptext5:
  1494                           	callstack 0
  1495  001A08                     _color_display:
  1496                           	callstack 22
  1497  001A08                     
  1498                           ;color.c: 134: void color_display(struct color_rgb *m);color.c: 134: void color_display(
      +                          struct color_rgb *m);color.c: 135: {;color.c: 135: {;color.c: 136:     char buf[100];;co
      +                          lor.c: 136:     char buf[100];;color.c: 137:     sprintf(buf,"\t%d\t%d\t%d\t%d\r\n", m->
      +                          R, m->G, m->B, m->C);;color.c: 137:     sprintf(buf,"\t%d\t%d\t%d\t%d\r\n", m->R, m->G, 
      +                          m->B, m->C);
  1499  001A08  0E79               	movlw	low color_display@buf
  1500  001A0A  0100               	movlb	0	; () banked
  1501  001A0C  6F60               	movwf	sprintf@s& (0+255),b
  1502  001A0E  0E00               	movlw	high color_display@buf
  1503  001A10  6F61               	movwf	(sprintf@s+1)& (0+255),b
  1504  001A12  0E01               	movlw	low STR_1
  1505  001A14  6F62               	movwf	sprintf@fmt& (0+255),b
  1506  001A16  0E0E               	movlw	high STR_1
  1507  001A18  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
  1508  001A1A  C058  FFD9         	movff	color_display@m,fsr2l
  1509  001A1E  C059  FFDA         	movff	color_display@m+1,fsr2h
  1510  001A22  CFDE F064          	movff	postinc2,?_sprintf+4
  1511  001A26  CFDD F065          	movff	postdec2,?_sprintf+5
  1512  001A2A  EE20 F002          	lfsr	2,2
  1513  001A2E  5058               	movf	color_display@m^0,w,c
  1514  001A30  26D9               	addwf	fsr2l,f,c
  1515  001A32  5059               	movf	(color_display@m+1)^0,w,c
  1516  001A34  22DA               	addwfc	fsr2h,f,c
  1517  001A36  CFDE F066          	movff	postinc2,?_sprintf+6
  1518  001A3A  CFDD F067          	movff	postdec2,?_sprintf+7
  1519  001A3E  EE20 F004          	lfsr	2,4
  1520  001A42  5058               	movf	color_display@m^0,w,c
  1521  001A44  26D9               	addwf	fsr2l,f,c
  1522  001A46  5059               	movf	(color_display@m+1)^0,w,c
  1523  001A48  22DA               	addwfc	fsr2h,f,c
  1524  001A4A  CFDE F068          	movff	postinc2,?_sprintf+8
  1525  001A4E  CFDD F069          	movff	postdec2,?_sprintf+9
  1526  001A52  EE20 F006          	lfsr	2,6
  1527  001A56  5058               	movf	color_display@m^0,w,c
  1528  001A58  26D9               	addwf	fsr2l,f,c
  1529  001A5A  5059               	movf	(color_display@m+1)^0,w,c
  1530  001A5C  22DA               	addwfc	fsr2h,f,c
  1531  001A5E  CFDE F06A          	movff	postinc2,?_sprintf+10
  1532  001A62  CFDD F06B          	movff	postdec2,?_sprintf+11
  1533  001A66  EC9C  F00D         	call	_sprintf	;wreg free
  1534  001A6A                     
  1535                           ;color.c: 138:     sendStringSerial4(buf);;color.c: 138:     sendStringSerial4(buf);
  1536  001A6A  0E79               	movlw	low color_display@buf
  1537  001A6C  6E02               	movwf	sendStringSerial4@string^0,c
  1538  001A6E  0E00               	movlw	high color_display@buf
  1539  001A70  6E03               	movwf	(sendStringSerial4@string+1)^0,c
  1540  001A72  EC3E  F00F         	call	_sendStringSerial4	;wreg free
  1541  001A76  0012               	return		;funcret
  1542  001A78                     __end_of_color_display:
  1543                           	callstack 0
  1544                           
  1545 ;; *************** function _sprintf *****************
  1546 ;; Defined at:
  1547 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\nf_sprintf.c"
  1548 ;; Parameters:    Size  Location     Type
  1549 ;;  s               2    0[BANK0 ] PTR unsigned char 
  1550 ;;		 -> voltage_display@buf(80), color_predict@buf(100), color_display@buf(100), 
  1551 ;;  fmt             2    2[BANK0 ] PTR const unsigned char 
  1552 ;;		 -> STR_3(5), STR_2(6), STR_1(15), 
  1553 ;; Auto vars:     Size  Location     Type
  1554 ;;  f              11   14[BANK0 ] struct _IO_FILE
  1555 ;;  ap              2   12[BANK0 ] PTR void [1]
  1556 ;;		 -> ?_sprintf(2), 
  1557 ;;  ret             2    0        int 
  1558 ;; Return value:  Size  Location     Type
  1559 ;;                  2    0[BANK0 ] int 
  1560 ;; Registers used:
  1561 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1562 ;; Tracked objects:
  1563 ;;		On entry : 0/0
  1564 ;;		On exit  : 0/0
  1565 ;;		Unchanged: 0/0
  1566 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1567 ;;      Params:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1568 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1569 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1570 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1571 ;;Total ram usage:       25 bytes
  1572 ;; Hardware stack levels used: 1
  1573 ;; Hardware stack levels required when called: 7
  1574 ;; This function calls:
  1575 ;;		_vfprintf
  1576 ;; This function is called by:
  1577 ;;		_color_display
  1578 ;;		_color_predict
  1579 ;;		_voltage_display
  1580 ;; This function uses a non-reentrant model
  1581 ;;
  1582                           
  1583                           	psect	text6
  1584  001B38                     __ptext6:
  1585                           	callstack 0
  1586  001B38                     _sprintf:
  1587                           	callstack 22
  1588  001B38  0E64               	movlw	low (?_sprintf+4)
  1589  001B3A  0100               	movlb	0	; () banked
  1590  001B3C  6F6C               	movwf	sprintf@ap& (0+255),b
  1591  001B3E  0E00               	movlw	high (?_sprintf+4)
  1592  001B40  6F6D               	movwf	(sprintf@ap+1)& (0+255),b
  1593  001B42  C060  F06E         	movff	sprintf@s,sprintf@f
  1594  001B46  C061  F06F         	movff	sprintf@s+1,sprintf@f+1
  1595  001B4A                     
  1596                           ; BSR set to: 0
  1597  001B4A  0E00               	movlw	0
  1598  001B4C  6F72               	movwf	(sprintf@f+4)& (0+255),b
  1599  001B4E  0E00               	movlw	0
  1600  001B50  6F71               	movwf	(sprintf@f+3)& (0+255),b
  1601  001B52                     
  1602                           ; BSR set to: 0
  1603  001B52  0E00               	movlw	0
  1604  001B54  6F78               	movwf	(sprintf@f+10)& (0+255),b
  1605  001B56  0E00               	movlw	0
  1606  001B58  6F77               	movwf	(sprintf@f+9)& (0+255),b
  1607  001B5A                     
  1608                           ; BSR set to: 0
  1609  001B5A  0E6E               	movlw	low sprintf@f
  1610  001B5C  6E50               	movwf	vfprintf@fp^0,c
  1611  001B5E  0E00               	movlw	high sprintf@f
  1612  001B60  6E51               	movwf	(vfprintf@fp+1)^0,c
  1613  001B62  C062  F052         	movff	sprintf@fmt,vfprintf@fmt
  1614  001B66  C063  F053         	movff	sprintf@fmt+1,vfprintf@fmt+1
  1615  001B6A  0E6C               	movlw	low sprintf@ap
  1616  001B6C  6E54               	movwf	vfprintf@ap^0,c
  1617  001B6E  0E00               	movlw	high sprintf@ap
  1618  001B70  6E55               	movwf	(vfprintf@ap+1)^0,c
  1619  001B72  EC3C  F00D         	call	_vfprintf	;wreg free
  1620  001B76  0100               	movlb	0	; () banked
  1621  001B78  5171               	movf	(sprintf@f+3)& (0+255),w,b
  1622  001B7A  2560               	addwf	sprintf@s& (0+255),w,b
  1623  001B7C  6ED9               	movwf	fsr2l,c
  1624  001B7E  5172               	movf	(sprintf@f+4)& (0+255),w,b
  1625  001B80  2161               	addwfc	(sprintf@s+1)& (0+255),w,b
  1626  001B82  6EDA               	movwf	fsr2h,c
  1627  001B84  0E00               	movlw	0
  1628  001B86  6EDF               	movwf	indf2,c
  1629  001B88                     
  1630                           ; BSR set to: 0
  1631  001B88  0012               	return		;funcret
  1632  001B8A                     __end_of_sprintf:
  1633                           	callstack 0
  1634                           
  1635 ;; *************** function _vfprintf *****************
  1636 ;; Defined at:
  1637 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c"
  1638 ;; Parameters:    Size  Location     Type
  1639 ;;  fp              2   79[COMRAM] PTR struct _IO_FILE
  1640 ;;		 -> sprintf@f(11), 
  1641 ;;  fmt             2   81[COMRAM] PTR const unsigned char 
  1642 ;;		 -> STR_3(5), STR_2(6), STR_1(15), 
  1643 ;;  ap              2   83[COMRAM] PTR PTR void 
  1644 ;;		 -> sprintf@ap(2), 
  1645 ;; Auto vars:     Size  Location     Type
  1646 ;;  cfmt            2   85[COMRAM] PTR unsigned char 
  1647 ;;		 -> STR_3(5), STR_2(6), STR_1(15), 
  1648 ;; Return value:  Size  Location     Type
  1649 ;;                  2   79[COMRAM] int 
  1650 ;; Registers used:
  1651 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1652 ;; Tracked objects:
  1653 ;;		On entry : 0/0
  1654 ;;		On exit  : 0/0
  1655 ;;		Unchanged: 0/0
  1656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1657 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1658 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1659 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1660 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1661 ;;Total ram usage:        8 bytes
  1662 ;; Hardware stack levels used: 1
  1663 ;; Hardware stack levels required when called: 6
  1664 ;; This function calls:
  1665 ;;		_vfpfcnvrt
  1666 ;; This function is called by:
  1667 ;;		_sprintf
  1668 ;; This function uses a non-reentrant model
  1669 ;;
  1670                           
  1671                           	psect	text7
  1672  001A78                     __ptext7:
  1673                           	callstack 0
  1674  001A78                     _vfprintf:
  1675                           	callstack 22
  1676  001A78                     
  1677                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.35\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  1678  001A78  C052  F056         	movff	vfprintf@fmt,vfprintf@cfmt
  1679  001A7C  C053  F057         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1680  001A80                     
  1681                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  1682  001A80  0E00               	movlw	0
  1683  001A82  0100               	movlb	0	; () banked
  1684  001A84  6FF3               	movwf	(_nout+1)& (0+255),b
  1685  001A86  0E00               	movlw	0
  1686  001A88  6FF2               	movwf	_nout& (0+255),b
  1687                           
  1688                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1689  001A8A  EF5A  F00D         	goto	l2256
  1690  001A8E                     l2254:
  1691                           
  1692                           ; BSR set to: 0
  1693                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  1694  001A8E  C050  F040         	movff	vfprintf@fp,vfpfcnvrt@fp
  1695  001A92  C051  F041         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1696  001A96  0E56               	movlw	low vfprintf@cfmt
  1697  001A98  6E42               	movwf	vfpfcnvrt@fmt^0,c
  1698  001A9A  0E00               	movlw	high vfprintf@cfmt
  1699  001A9C  6E43               	movwf	(vfpfcnvrt@fmt+1)^0,c
  1700  001A9E  C054  F044         	movff	vfprintf@ap,vfpfcnvrt@ap
  1701  001AA2  C055  F045         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1702  001AA6  EC83  F009         	call	_vfpfcnvrt	;wreg free
  1703  001AAA  5040               	movf	?_vfpfcnvrt^0,w,c
  1704  001AAC  0100               	movlb	0	; () banked
  1705  001AAE  27F2               	addwf	_nout& (0+255),f,b
  1706  001AB0  5041               	movf	(?_vfpfcnvrt+1)^0,w,c
  1707  001AB2  23F3               	addwfc	(_nout+1)& (0+255),f,b
  1708  001AB4                     l2256:
  1709                           
  1710                           ; BSR set to: 0
  1711                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1712  001AB4  C056  FFF6         	movff	vfprintf@cfmt,tblptrl
  1713  001AB8  C057  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1714  001ABC                     	if	0	;tblptru may be non-zero
  1715  001ABC                     	endif
  1716  001ABC                     	if	0	;tblptru may be non-zero
  1717  001ABC                     	endif
  1718  001ABC  0008               	tblrd		*
  1719  001ABE  50F5               	movf	tablat,w,c
  1720  001AC0  0900               	iorlw	0
  1721  001AC2  A4D8               	btfss	status,2,c
  1722  001AC4  EF66  F00D         	goto	u1261
  1723  001AC8  EF68  F00D         	goto	u1260
  1724  001ACC                     u1261:
  1725  001ACC  EF47  F00D         	goto	l2254
  1726  001AD0                     u1260:
  1727  001AD0                     
  1728                           ; BSR set to: 0
  1729                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  1730  001AD0  C0F2  F050         	movff	_nout,?_vfprintf
  1731  001AD4  C0F3  F051         	movff	_nout+1,?_vfprintf+1
  1732  001AD8                     
  1733                           ; BSR set to: 0
  1734  001AD8  0012               	return		;funcret
  1735  001ADA                     __end_of_vfprintf:
  1736                           	callstack 0
  1737                           
  1738 ;; *************** function _vfpfcnvrt *****************
  1739 ;; Defined at:
  1740 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c"
  1741 ;; Parameters:    Size  Location     Type
  1742 ;;  fp              2   63[COMRAM] PTR struct _IO_FILE
  1743 ;;		 -> sprintf@f(11), 
  1744 ;;  fmt             2   65[COMRAM] PTR PTR unsigned char 
  1745 ;;		 -> vfprintf@cfmt(2), 
  1746 ;;  ap              2   67[COMRAM] PTR PTR void 
  1747 ;;		 -> sprintf@ap(2), 
  1748 ;; Auto vars:     Size  Location     Type
  1749 ;;  ll              8   71[COMRAM] long long 
  1750 ;;  llu             8    0        unsigned long long 
  1751 ;;  f               4    0        unsigned long long 
  1752 ;;  vp              3    0        PTR void 
  1753 ;;  ct              3    0        unsigned char [3]
  1754 ;;  cp              3    0        PTR unsigned char 
  1755 ;;  i               2    0        int 
  1756 ;;  done            2    0        int 
  1757 ;;  c               1    0        unsigned char 
  1758 ;; Return value:  Size  Location     Type
  1759 ;;                  2   63[COMRAM] int 
  1760 ;; Registers used:
  1761 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1762 ;; Tracked objects:
  1763 ;;		On entry : 0/0
  1764 ;;		On exit  : 0/0
  1765 ;;		Unchanged: 0/0
  1766 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1767 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1768 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1769 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1770 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1771 ;;Total ram usage:       16 bytes
  1772 ;; Hardware stack levels used: 1
  1773 ;; Hardware stack levels required when called: 5
  1774 ;; This function calls:
  1775 ;;		_dtoa
  1776 ;;		_fputc
  1777 ;; This function is called by:
  1778 ;;		_vfprintf
  1779 ;; This function uses a non-reentrant model
  1780 ;;
  1781                           
  1782                           	psect	text8
  1783  001306                     __ptext8:
  1784                           	callstack 0
  1785  001306                     _vfpfcnvrt:
  1786                           	callstack 22
  1787  001306                     
  1788                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.35\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.35\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.35\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          5\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  1789  001306  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1790  00130A  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1791  00130E  CFDE FFF6          	movff	postinc2,tblptrl
  1792  001312  CFDD FFF7          	movff	postdec2,tblptrh
  1793  001316                     	if	0	;tblptru may be non-zero
  1794  001316                     	endif
  1795  001316                     	if	0	;tblptru may be non-zero
  1796  001316                     	endif
  1797  001316  0008               	tblrd		*
  1798  001318  50F5               	movf	tablat,w,c
  1799  00131A  0A25               	xorlw	37
  1800  00131C  A4D8               	btfss	status,2,c
  1801  00131E  EF93  F009         	goto	u1211
  1802  001322  EF95  F009         	goto	u1210
  1803  001326                     u1211:
  1804  001326  EF41  F00A         	goto	l2214
  1805  00132A                     u1210:
  1806  00132A                     
  1807                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  1808  00132A  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1809  00132E  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1810  001332  2ADE               	incf	postinc2,f,c
  1811  001334  0E00               	movlw	0
  1812  001336  22DD               	addwfc	postdec2,f,c
  1813  001338                     
  1814                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  1815  001338  0E00               	movlw	0
  1816  00133A  0100               	movlb	0	; () banked
  1817  00133C  6FF5               	movwf	(_width+1)& (0+255),b
  1818  00133E  0E00               	movlw	0
  1819  001340  6FF4               	movwf	_width& (0+255),b
  1820  001342  C0F4  F0F8         	movff	_width,_flags
  1821  001346  C0F5  F0F9         	movff	_width+1,_flags+1
  1822  00134A                     
  1823                           ; BSR set to: 0
  1824                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  1825  00134A  69F6               	setf	_prec& (0+255),b
  1826  00134C  69F7               	setf	(_prec+1)& (0+255),b
  1827  00134E                     
  1828                           ; BSR set to: 0
  1829                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  1830  00134E  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1831  001352  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1832  001356  CFDE FFF6          	movff	postinc2,tblptrl
  1833  00135A  CFDD FFF7          	movff	postdec2,tblptrh
  1834  00135E                     	if	0	;tblptru may be non-zero
  1835  00135E                     	endif
  1836  00135E                     	if	0	;tblptru may be non-zero
  1837  00135E                     	endif
  1838  00135E  0008               	tblrd		*
  1839  001360  50F5               	movf	tablat,w,c
  1840  001362  0A64               	xorlw	100
  1841  001364  B4D8               	btfsc	status,2,c
  1842  001366  EFB7  F009         	goto	u1221
  1843  00136A  EFB9  F009         	goto	u1220
  1844  00136E                     u1221:
  1845  00136E  EFCB  F009         	goto	l2192
  1846  001372                     u1220:
  1847  001372                     
  1848                           ; BSR set to: 0
  1849  001372  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1850  001376  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1851  00137A  CFDE FFF6          	movff	postinc2,tblptrl
  1852  00137E  CFDD FFF7          	movff	postdec2,tblptrh
  1853  001382                     	if	0	;tblptru may be non-zero
  1854  001382                     	endif
  1855  001382                     	if	0	;tblptru may be non-zero
  1856  001382                     	endif
  1857  001382  0008               	tblrd		*
  1858  001384  50F5               	movf	tablat,w,c
  1859  001386  0A69               	xorlw	105
  1860  001388  A4D8               	btfss	status,2,c
  1861  00138A  EFC9  F009         	goto	u1231
  1862  00138E  EFCB  F009         	goto	u1230
  1863  001392                     u1231:
  1864  001392  EF0B  F00A         	goto	l2198
  1865  001396                     u1230:
  1866  001396                     l2192:
  1867                           
  1868                           ; BSR set to: 0
  1869                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  1870  001396  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1871  00139A  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1872  00139E  2ADE               	incf	postinc2,f,c
  1873  0013A0  0E00               	movlw	0
  1874  0013A2  22DD               	addwfc	postdec2,f,c
  1875                           
  1876                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  1877  0013A4  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1878  0013A8  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1879  0013AC  CFDF F046          	movff	indf2,??_vfpfcnvrt
  1880  0013B0  0E02               	movlw	2
  1881  0013B2  26DE               	addwf	postinc2,f,c
  1882  0013B4  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  1883  0013B8  0E00               	movlw	0
  1884  0013BA  22DD               	addwfc	postdec2,f,c
  1885  0013BC  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1886  0013C0  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1887  0013C4  CFDE F048          	movff	postinc2,vfpfcnvrt@ll
  1888  0013C8  CFDD F049          	movff	postdec2,vfpfcnvrt@ll+1
  1889  0013CC  0E00               	movlw	0
  1890  0013CE  BE49               	btfsc	(vfpfcnvrt@ll+1)^0,7,c
  1891  0013D0  0EFF               	movlw	-1
  1892  0013D2  6E4A               	movwf	(vfpfcnvrt@ll+2)^0,c
  1893  0013D4  6E4B               	movwf	(vfpfcnvrt@ll+3)^0,c
  1894  0013D6  6E4C               	movwf	(vfpfcnvrt@ll+4)^0,c
  1895  0013D8  6E4D               	movwf	(vfpfcnvrt@ll+5)^0,c
  1896  0013DA  6E4E               	movwf	(vfpfcnvrt@ll+6)^0,c
  1897  0013DC  6E4F               	movwf	(vfpfcnvrt@ll+7)^0,c
  1898  0013DE                     
  1899                           ; BSR set to: 0
  1900                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  1901  0013DE  C040  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  1902  0013E2  C041  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  1903  0013E6  C048  F01E         	movff	vfpfcnvrt@ll,dtoa@d
  1904  0013EA  C049  F01F         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  1905  0013EE  C04A  F020         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  1906  0013F2  C04B  F021         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  1907  0013F6  C04C  F022         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  1908  0013FA  C04D  F023         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  1909  0013FE  C04E  F024         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  1910  001402  C04F  F025         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  1911  001406  EC09  F007         	call	_dtoa	;wreg free
  1912  00140A  C01C  F040         	movff	?_dtoa,?_vfpfcnvrt
  1913  00140E  C01D  F041         	movff	?_dtoa+1,?_vfpfcnvrt+1
  1914  001412  EF5C  F00A         	goto	l1187
  1915  001416                     l2198:
  1916                           
  1917                           ; BSR set to: 0
  1918                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  1919  001416  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1920  00141A  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1921  00141E  CFDE FFF6          	movff	postinc2,tblptrl
  1922  001422  CFDD FFF7          	movff	postdec2,tblptrh
  1923  001426                     	if	0	;tblptru may be non-zero
  1924  001426                     	endif
  1925  001426                     	if	0	;tblptru may be non-zero
  1926  001426                     	endif
  1927  001426  0008               	tblrd		*
  1928  001428  50F5               	movf	tablat,w,c
  1929  00142A  0A25               	xorlw	37
  1930  00142C  A4D8               	btfss	status,2,c
  1931  00142E  EF1B  F00A         	goto	u1241
  1932  001432  EF1D  F00A         	goto	u1240
  1933  001436                     u1241:
  1934  001436  EF34  F00A         	goto	l2208
  1935  00143A                     u1240:
  1936  00143A                     
  1937                           ; BSR set to: 0
  1938                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  1939  00143A  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1940  00143E  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1941  001442  2ADE               	incf	postinc2,f,c
  1942  001444  0E00               	movlw	0
  1943  001446  22DD               	addwfc	postdec2,f,c
  1944  001448                     
  1945                           ; BSR set to: 0
  1946                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  1947  001448  0E00               	movlw	0
  1948  00144A  6E02               	movwf	(fputc@c+1)^0,c
  1949  00144C  0E25               	movlw	37
  1950  00144E  6E01               	movwf	fputc@c^0,c
  1951  001450  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1952  001454  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1953  001458  EC3C  F00C         	call	_fputc	;wreg free
  1954  00145C                     l2204:
  1955                           
  1956                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  1957  00145C  0E00               	movlw	0
  1958  00145E  6E41               	movwf	(?_vfpfcnvrt+1)^0,c
  1959  001460  0E01               	movlw	1
  1960  001462  6E40               	movwf	?_vfpfcnvrt^0,c
  1961  001464  EF5C  F00A         	goto	l1187
  1962  001468                     l2208:
  1963                           
  1964                           ; BSR set to: 0
  1965                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  1966  001468  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1967  00146C  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1968  001470  2ADE               	incf	postinc2,f,c
  1969  001472  0E00               	movlw	0
  1970  001474  22DD               	addwfc	postdec2,f,c
  1971  001476                     
  1972                           ; BSR set to: 0
  1973                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  1974  001476  0E00               	movlw	0
  1975  001478  6E41               	movwf	(?_vfpfcnvrt+1)^0,c
  1976  00147A  0E00               	movlw	0
  1977  00147C  6E40               	movwf	?_vfpfcnvrt^0,c
  1978  00147E  EF5C  F00A         	goto	l1187
  1979  001482                     l2214:
  1980                           
  1981                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  1982  001482  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1983  001486  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1984  00148A  CFDE FFF6          	movff	postinc2,tblptrl
  1985  00148E  CFDD FFF7          	movff	postdec2,tblptrh
  1986  001492                     	if	0	;tblptru may be non-zero
  1987  001492                     	endif
  1988  001492                     	if	0	;tblptru may be non-zero
  1989  001492                     	endif
  1990  001492  0008               	tblrd		*
  1991  001494  50F5               	movf	tablat,w,c
  1992  001496  6E01               	movwf	fputc@c^0,c
  1993  001498  6A02               	clrf	(fputc@c+1)^0,c
  1994  00149A  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1995  00149E  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1996  0014A2  EC3C  F00C         	call	_fputc	;wreg free
  1997  0014A6                     
  1998                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  1999  0014A6  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2000  0014AA  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2001  0014AE  2ADE               	incf	postinc2,f,c
  2002  0014B0  0E00               	movlw	0
  2003  0014B2  22DD               	addwfc	postdec2,f,c
  2004  0014B4  EF2E  F00A         	goto	l2204
  2005  0014B8                     l1187:
  2006  0014B8  0012               	return		;funcret
  2007  0014BA                     __end_of_vfpfcnvrt:
  2008                           	callstack 0
  2009                           
  2010 ;; *************** function _dtoa *****************
  2011 ;; Defined at:
  2012 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c"
  2013 ;; Parameters:    Size  Location     Type
  2014 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  2015 ;;		 -> sprintf@f(11), 
  2016 ;;  d               8   29[COMRAM] long long 
  2017 ;; Auto vars:     Size  Location     Type
  2018 ;;  n               8   53[COMRAM] long long 
  2019 ;;  i               2   61[COMRAM] int 
  2020 ;;  s               2   51[COMRAM] int 
  2021 ;;  w               2   49[COMRAM] int 
  2022 ;;  p               2   47[COMRAM] int 
  2023 ;; Return value:  Size  Location     Type
  2024 ;;                  2   27[COMRAM] int 
  2025 ;; Registers used:
  2026 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2027 ;; Tracked objects:
  2028 ;;		On entry : 0/0
  2029 ;;		On exit  : 0/0
  2030 ;;		Unchanged: 0/0
  2031 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2032 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2033 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2034 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2035 ;;      Totals:        36       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2036 ;;Total ram usage:       36 bytes
  2037 ;; Hardware stack levels used: 1
  2038 ;; Hardware stack levels required when called: 4
  2039 ;; This function calls:
  2040 ;;		___aodiv
  2041 ;;		___aomod
  2042 ;;		_abs
  2043 ;;		_pad
  2044 ;; This function is called by:
  2045 ;;		_vfpfcnvrt
  2046 ;; This function uses a non-reentrant model
  2047 ;;
  2048                           
  2049                           	psect	text9
  2050  000E12                     __ptext9:
  2051                           	callstack 0
  2052  000E12                     _dtoa:
  2053                           	callstack 22
  2054  000E12                     
  2055                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  2056  000E12  C01E  F036         	movff	dtoa@d,dtoa@n
  2057  000E16  C01F  F037         	movff	dtoa@d+1,dtoa@n+1
  2058  000E1A  C020  F038         	movff	dtoa@d+2,dtoa@n+2
  2059  000E1E  C021  F039         	movff	dtoa@d+3,dtoa@n+3
  2060  000E22  C022  F03A         	movff	dtoa@d+4,dtoa@n+4
  2061  000E26  C023  F03B         	movff	dtoa@d+5,dtoa@n+5
  2062  000E2A  C024  F03C         	movff	dtoa@d+6,dtoa@n+6
  2063  000E2E  C025  F03D         	movff	dtoa@d+7,dtoa@n+7
  2064  000E32                     
  2065                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  2066  000E32  BE3D               	btfsc	(dtoa@n+7)^0,7,c
  2067  000E34  EF1E  F007         	goto	u1041
  2068  000E38  EF21  F007         	goto	u1040
  2069  000E3C                     u1041:
  2070  000E3C  0E01               	movlw	1
  2071  000E3E  EF22  F007         	goto	u1050
  2072  000E42                     u1040:
  2073  000E42  0E00               	movlw	0
  2074  000E44                     u1050:
  2075  000E44  6E34               	movwf	dtoa@s^0,c
  2076  000E46  6A35               	clrf	(dtoa@s+1)^0,c
  2077                           
  2078                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  2079  000E48  5034               	movf	dtoa@s^0,w,c
  2080  000E4A  1035               	iorwf	(dtoa@s+1)^0,w,c
  2081  000E4C  B4D8               	btfsc	status,2,c
  2082  000E4E  EF2B  F007         	goto	u1061
  2083  000E52  EF2D  F007         	goto	u1060
  2084  000E56                     u1061:
  2085  000E56  EF3D  F007         	goto	l2094
  2086  000E5A                     u1060:
  2087  000E5A                     
  2088                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  2089  000E5A  1E3D               	comf	(dtoa@n+7)^0,f,c
  2090  000E5C  1E3C               	comf	(dtoa@n+6)^0,f,c
  2091  000E5E  1E3B               	comf	(dtoa@n+5)^0,f,c
  2092  000E60  1E3A               	comf	(dtoa@n+4)^0,f,c
  2093  000E62  1E39               	comf	(dtoa@n+3)^0,f,c
  2094  000E64  1E38               	comf	(dtoa@n+2)^0,f,c
  2095  000E66  1E37               	comf	(dtoa@n+1)^0,f,c
  2096  000E68  6C36               	negf	dtoa@n^0,c
  2097  000E6A  0E00               	movlw	0
  2098  000E6C  2237               	addwfc	(dtoa@n+1)^0,f,c
  2099  000E6E  2238               	addwfc	(dtoa@n+2)^0,f,c
  2100  000E70  2239               	addwfc	(dtoa@n+3)^0,f,c
  2101  000E72  223A               	addwfc	(dtoa@n+4)^0,f,c
  2102  000E74  223B               	addwfc	(dtoa@n+5)^0,f,c
  2103  000E76  223C               	addwfc	(dtoa@n+6)^0,f,c
  2104  000E78  223D               	addwfc	(dtoa@n+7)^0,f,c
  2105  000E7A                     l2094:
  2106                           
  2107                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  2108  000E7A  0100               	movlb	0	; () banked
  2109  000E7C  BFF7               	btfsc	(_prec+1)& (0+255),7,b
  2110  000E7E  EF43  F007         	goto	u1071
  2111  000E82  EF45  F007         	goto	u1070
  2112  000E86                     u1071:
  2113  000E86  EF46  F007         	goto	l2098
  2114  000E8A                     u1070:
  2115  000E8A                     
  2116                           ; BSR set to: 0
  2117                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  2118  000E8A  93F8               	bcf	_flags& (0+255),1,b
  2119  000E8C                     l2098:
  2120                           
  2121                           ; BSR set to: 0
  2122                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  2123  000E8C  BFF7               	btfsc	(_prec+1)& (0+255),7,b
  2124  000E8E  EF53  F007         	goto	u1080
  2125  000E92  51F7               	movf	(_prec+1)& (0+255),w,b
  2126  000E94  E106               	bnz	u1081
  2127  000E96  05F6               	decf	_prec& (0+255),w,b
  2128  000E98  B0D8               	btfsc	status,0,c
  2129  000E9A  EF51  F007         	goto	u1081
  2130  000E9E  EF53  F007         	goto	u1080
  2131  000EA2                     u1081:
  2132  000EA2  EF59  F007         	goto	l1160
  2133  000EA6                     u1080:
  2134  000EA6                     
  2135                           ; BSR set to: 0
  2136  000EA6  0E00               	movlw	0
  2137  000EA8  6E31               	movwf	(dtoa@p+1)^0,c
  2138  000EAA  0E01               	movlw	1
  2139  000EAC  6E30               	movwf	dtoa@p^0,c
  2140  000EAE  EF5D  F007         	goto	l1162
  2141  000EB2                     l1160:
  2142                           
  2143                           ; BSR set to: 0
  2144  000EB2  C0F6  F030         	movff	_prec,dtoa@p
  2145  000EB6  C0F7  F031         	movff	_prec+1,dtoa@p+1
  2146  000EBA                     l1162:
  2147                           
  2148                           ; BSR set to: 0
  2149                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  2150  000EBA  C0F4  F032         	movff	_width,dtoa@w
  2151  000EBE  C0F5  F033         	movff	_width+1,dtoa@w+1
  2152  000EC2                     
  2153                           ; BSR set to: 0
  2154                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  2155  000EC2  5034               	movf	dtoa@s^0,w,c
  2156  000EC4  1035               	iorwf	(dtoa@s+1)^0,w,c
  2157  000EC6  A4D8               	btfss	status,2,c
  2158  000EC8  EF68  F007         	goto	u1091
  2159  000ECC  EF6A  F007         	goto	u1090
  2160  000ED0                     u1091:
  2161  000ED0  EF71  F007         	goto	l2106
  2162  000ED4                     u1090:
  2163  000ED4                     
  2164                           ; BSR set to: 0
  2165  000ED4  A5F8               	btfss	_flags& (0+255),2,b
  2166  000ED6  EF6F  F007         	goto	u1101
  2167  000EDA  EF71  F007         	goto	u1100
  2168  000EDE                     u1101:
  2169  000EDE  EF74  F007         	goto	l2108
  2170  000EE2                     u1100:
  2171  000EE2                     l2106:
  2172                           
  2173                           ; BSR set to: 0
  2174                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 306:         --w;
  2175  000EE2  0632               	decf	dtoa@w^0,f,c
  2176  000EE4  A0D8               	btfss	status,0,c
  2177  000EE6  0633               	decf	(dtoa@w+1)^0,f,c
  2178  000EE8                     l2108:
  2179                           
  2180                           ; BSR set to: 0
  2181                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  2182  000EE8  0E00               	movlw	0
  2183  000EEA  6E3F               	movwf	(dtoa@i+1)^0,c
  2184  000EEC  0E1F               	movlw	31
  2185  000EEE  6E3E               	movwf	dtoa@i^0,c
  2186  000EF0                     
  2187                           ; BSR set to: 0
  2188                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  2189  000EF0  0E00               	movlw	0
  2190  000EF2  0101               	movlb	1	; () banked
  2191  000EF4  6F5B               	movwf	(_dbuf+31)& (0+255),b
  2192                           
  2193                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  2194  000EF6  EFF9  F007         	goto	l2122
  2195  000EFA                     l2112:
  2196                           
  2197                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 313:         --i;
  2198  000EFA  063E               	decf	dtoa@i^0,f,c
  2199  000EFC  A0D8               	btfss	status,0,c
  2200  000EFE  063F               	decf	(dtoa@i+1)^0,f,c
  2201  000F00                     
  2202                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  2203  000F00  0E3C               	movlw	low _dbuf
  2204  000F02  243E               	addwf	dtoa@i^0,w,c
  2205  000F04  6ED9               	movwf	fsr2l,c
  2206  000F06  0E01               	movlw	high _dbuf
  2207  000F08  203F               	addwfc	(dtoa@i+1)^0,w,c
  2208  000F0A  6EDA               	movwf	fsr2h,c
  2209  000F0C  C036  F001         	movff	dtoa@n,___aomod@dividend
  2210  000F10  C037  F002         	movff	dtoa@n+1,___aomod@dividend+1
  2211  000F14  C038  F003         	movff	dtoa@n+2,___aomod@dividend+2
  2212  000F18  C039  F004         	movff	dtoa@n+3,___aomod@dividend+3
  2213  000F1C  C03A  F005         	movff	dtoa@n+4,___aomod@dividend+4
  2214  000F20  C03B  F006         	movff	dtoa@n+5,___aomod@dividend+5
  2215  000F24  C03C  F007         	movff	dtoa@n+6,___aomod@dividend+6
  2216  000F28  C03D  F008         	movff	dtoa@n+7,___aomod@dividend+7
  2217  000F2C  0E0A               	movlw	10
  2218  000F2E  6E09               	movwf	___aomod@divisor^0,c
  2219  000F30  0E00               	movlw	0
  2220  000F32  6E0A               	movwf	(___aomod@divisor+1)^0,c
  2221  000F34  0E00               	movlw	0
  2222  000F36  6E0B               	movwf	(___aomod@divisor+2)^0,c
  2223  000F38  0E00               	movlw	0
  2224  000F3A  6E0C               	movwf	(___aomod@divisor+3)^0,c
  2225  000F3C  0E00               	movlw	0
  2226  000F3E  6E0D               	movwf	(___aomod@divisor+4)^0,c
  2227  000F40  0E00               	movlw	0
  2228  000F42  6E0E               	movwf	(___aomod@divisor+5)^0,c
  2229  000F44  0E00               	movlw	0
  2230  000F46  6E0F               	movwf	(___aomod@divisor+6)^0,c
  2231  000F48  0E00               	movlw	0
  2232  000F4A  6E10               	movwf	(___aomod@divisor+7)^0,c
  2233  000F4C  EC21  F00B         	call	___aomod	;wreg free
  2234  000F50  C001  F026         	movff	?___aomod,??_dtoa
  2235  000F54  C002  F027         	movff	?___aomod+1,??_dtoa+1
  2236  000F58  C003  F028         	movff	?___aomod+2,??_dtoa+2
  2237  000F5C  C004  F029         	movff	?___aomod+3,??_dtoa+3
  2238  000F60  C005  F02A         	movff	?___aomod+4,??_dtoa+4
  2239  000F64  C006  F02B         	movff	?___aomod+5,??_dtoa+5
  2240  000F68  C007  F02C         	movff	?___aomod+6,??_dtoa+6
  2241  000F6C  C008  F02D         	movff	?___aomod+7,??_dtoa+7
  2242  000F70  C026  F013         	movff	??_dtoa,abs@a
  2243  000F74  C028  F014         	movff	??_dtoa+2,abs@a+1
  2244  000F78  ECE9  F00E         	call	_abs	;wreg free
  2245  000F7C  5013               	movf	?_abs^0,w,c
  2246  000F7E  0F30               	addlw	48
  2247  000F80  6EDF               	movwf	indf2,c
  2248  000F82                     
  2249                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 315:         --p;
  2250  000F82  0630               	decf	dtoa@p^0,f,c
  2251  000F84  A0D8               	btfss	status,0,c
  2252  000F86  0631               	decf	(dtoa@p+1)^0,f,c
  2253  000F88                     
  2254                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 316:         --w;
  2255  000F88  0632               	decf	dtoa@w^0,f,c
  2256  000F8A  A0D8               	btfss	status,0,c
  2257  000F8C  0633               	decf	(dtoa@w+1)^0,f,c
  2258  000F8E                     
  2259                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  2260  000F8E  C036  F001         	movff	dtoa@n,___aodiv@dividend
  2261  000F92  C037  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  2262  000F96  C038  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  2263  000F9A  C039  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  2264  000F9E  C03A  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  2265  000FA2  C03B  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  2266  000FA6  C03C  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  2267  000FAA  C03D  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  2268  000FAE  0E0A               	movlw	10
  2269  000FB0  6E09               	movwf	___aodiv@divisor^0,c
  2270  000FB2  0E00               	movlw	0
  2271  000FB4  6E0A               	movwf	(___aodiv@divisor+1)^0,c
  2272  000FB6  0E00               	movlw	0
  2273  000FB8  6E0B               	movwf	(___aodiv@divisor+2)^0,c
  2274  000FBA  0E00               	movlw	0
  2275  000FBC  6E0C               	movwf	(___aodiv@divisor+3)^0,c
  2276  000FBE  0E00               	movlw	0
  2277  000FC0  6E0D               	movwf	(___aodiv@divisor+4)^0,c
  2278  000FC2  0E00               	movlw	0
  2279  000FC4  6E0E               	movwf	(___aodiv@divisor+5)^0,c
  2280  000FC6  0E00               	movlw	0
  2281  000FC8  6E0F               	movwf	(___aodiv@divisor+6)^0,c
  2282  000FCA  0E00               	movlw	0
  2283  000FCC  6E10               	movwf	(___aodiv@divisor+7)^0,c
  2284  000FCE  EC5D  F00A         	call	___aodiv	;wreg free
  2285  000FD2  C001  F036         	movff	?___aodiv,dtoa@n
  2286  000FD6  C002  F037         	movff	?___aodiv+1,dtoa@n+1
  2287  000FDA  C003  F038         	movff	?___aodiv+2,dtoa@n+2
  2288  000FDE  C004  F039         	movff	?___aodiv+3,dtoa@n+3
  2289  000FE2  C005  F03A         	movff	?___aodiv+4,dtoa@n+4
  2290  000FE6  C006  F03B         	movff	?___aodiv+5,dtoa@n+5
  2291  000FEA  C007  F03C         	movff	?___aodiv+6,dtoa@n+6
  2292  000FEE  C008  F03D         	movff	?___aodiv+7,dtoa@n+7
  2293  000FF2                     l2122:
  2294                           
  2295                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  2296  000FF2  BE3F               	btfsc	(dtoa@i+1)^0,7,c
  2297  000FF4  EF04  F008         	goto	u1111
  2298  000FF8  503F               	movf	(dtoa@i+1)^0,w,c
  2299  000FFA  E108               	bnz	u1110
  2300  000FFC  043E               	decf	dtoa@i^0,w,c
  2301  000FFE  A0D8               	btfss	status,0,c
  2302  001000  EF04  F008         	goto	u1111
  2303  001004  EF06  F008         	goto	u1110
  2304  001008                     u1111:
  2305  001008  EF37  F008         	goto	l2132
  2306  00100C                     u1110:
  2307  00100C  5036               	movf	dtoa@n^0,w,c
  2308  00100E  1037               	iorwf	(dtoa@n+1)^0,w,c
  2309  001010  1038               	iorwf	(dtoa@n+2)^0,w,c
  2310  001012  1039               	iorwf	(dtoa@n+3)^0,w,c
  2311  001014  103A               	iorwf	(dtoa@n+4)^0,w,c
  2312  001016  103B               	iorwf	(dtoa@n+5)^0,w,c
  2313  001018  103C               	iorwf	(dtoa@n+6)^0,w,c
  2314  00101A  103D               	iorwf	(dtoa@n+7)^0,w,c
  2315  00101C  A4D8               	btfss	status,2,c
  2316  00101E  EF13  F008         	goto	u1121
  2317  001022  EF15  F008         	goto	u1120
  2318  001026                     u1121:
  2319  001026  EF7D  F007         	goto	l2112
  2320  00102A                     u1120:
  2321  00102A  BE31               	btfsc	(dtoa@p+1)^0,7,c
  2322  00102C  EF22  F008         	goto	u1130
  2323  001030  5031               	movf	(dtoa@p+1)^0,w,c
  2324  001032  E106               	bnz	u1131
  2325  001034  0430               	decf	dtoa@p^0,w,c
  2326  001036  B0D8               	btfsc	status,0,c
  2327  001038  EF20  F008         	goto	u1131
  2328  00103C  EF22  F008         	goto	u1130
  2329  001040                     u1131:
  2330  001040  EF7D  F007         	goto	l2112
  2331  001044                     u1130:
  2332  001044  BE33               	btfsc	(dtoa@w+1)^0,7,c
  2333  001046  EF2D  F008         	goto	u1141
  2334  00104A  5033               	movf	(dtoa@w+1)^0,w,c
  2335  00104C  E108               	bnz	u1140
  2336  00104E  0432               	decf	dtoa@w^0,w,c
  2337  001050  A0D8               	btfss	status,0,c
  2338  001052  EF2D  F008         	goto	u1141
  2339  001056  EF2F  F008         	goto	u1140
  2340  00105A                     u1141:
  2341  00105A  EF37  F008         	goto	l2132
  2342  00105E                     u1140:
  2343  00105E  0100               	movlb	0	; () banked
  2344  001060  B3F8               	btfsc	_flags& (0+255),1,b
  2345  001062  EF35  F008         	goto	u1151
  2346  001066  EF37  F008         	goto	u1150
  2347  00106A                     u1151:
  2348  00106A  EF7D  F007         	goto	l2112
  2349  00106E                     u1150:
  2350  00106E                     l2132:
  2351                           
  2352                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  2353  00106E  5034               	movf	dtoa@s^0,w,c
  2354  001070  1035               	iorwf	(dtoa@s+1)^0,w,c
  2355  001072  A4D8               	btfss	status,2,c
  2356  001074  EF3E  F008         	goto	u1161
  2357  001078  EF40  F008         	goto	u1160
  2358  00107C                     u1161:
  2359  00107C  EF48  F008         	goto	l2136
  2360  001080                     u1160:
  2361  001080  0100               	movlb	0	; () banked
  2362  001082  A5F8               	btfss	_flags& (0+255),2,b
  2363  001084  EF46  F008         	goto	u1171
  2364  001088  EF48  F008         	goto	u1170
  2365  00108C                     u1171:
  2366  00108C  EF66  F008         	goto	l2146
  2367  001090                     u1170:
  2368  001090                     l2136:
  2369                           
  2370                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 322:         --i;
  2371  001090  063E               	decf	dtoa@i^0,f,c
  2372  001092  A0D8               	btfss	status,0,c
  2373  001094  063F               	decf	(dtoa@i+1)^0,f,c
  2374  001096                     
  2375                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  2376  001096  5034               	movf	dtoa@s^0,w,c
  2377  001098  1035               	iorwf	(dtoa@s+1)^0,w,c
  2378  00109A  A4D8               	btfss	status,2,c
  2379  00109C  EF52  F008         	goto	u1181
  2380  0010A0  EF54  F008         	goto	u1180
  2381  0010A4                     u1181:
  2382  0010A4  EF5A  F008         	goto	l2142
  2383  0010A8                     u1180:
  2384  0010A8  0E00               	movlw	0
  2385  0010AA  6E2F               	movwf	(_dtoa$2127+1)^0,c
  2386  0010AC  0E2B               	movlw	43
  2387  0010AE  6E2E               	movwf	_dtoa$2127^0,c
  2388  0010B0  EF5E  F008         	goto	l2144
  2389  0010B4                     l2142:
  2390  0010B4  0E00               	movlw	0
  2391  0010B6  6E2F               	movwf	(_dtoa$2127+1)^0,c
  2392  0010B8  0E2D               	movlw	45
  2393  0010BA  6E2E               	movwf	_dtoa$2127^0,c
  2394  0010BC                     l2144:
  2395  0010BC  0E3C               	movlw	low _dbuf
  2396  0010BE  243E               	addwf	dtoa@i^0,w,c
  2397  0010C0  6ED9               	movwf	fsr2l,c
  2398  0010C2  0E01               	movlw	high _dbuf
  2399  0010C4  203F               	addwfc	(dtoa@i+1)^0,w,c
  2400  0010C6  6EDA               	movwf	fsr2h,c
  2401  0010C8  C02E  FFDF         	movff	_dtoa$2127,indf2
  2402  0010CC                     l2146:
  2403                           
  2404                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  2405  0010CC  C01C  F011         	movff	dtoa@fp,pad@fp
  2406  0010D0  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
  2407  0010D4  0E3C               	movlw	low _dbuf
  2408  0010D6  243E               	addwf	dtoa@i^0,w,c
  2409  0010D8  6E13               	movwf	pad@buf^0,c
  2410  0010DA  0E01               	movlw	high _dbuf
  2411  0010DC  203F               	addwfc	(dtoa@i+1)^0,w,c
  2412  0010DE  6E14               	movwf	(pad@buf+1)^0,c
  2413  0010E0  C032  F015         	movff	dtoa@w,pad@p
  2414  0010E4  C033  F016         	movff	dtoa@w+1,pad@p+1
  2415  0010E8  ECA1  F00C         	call	_pad	;wreg free
  2416  0010EC  C011  F01C         	movff	?_pad,?_dtoa
  2417  0010F0  C012  F01D         	movff	?_pad+1,?_dtoa+1
  2418  0010F4  0012               	return		;funcret
  2419  0010F6                     __end_of_dtoa:
  2420                           	callstack 0
  2421                           
  2422 ;; *************** function _pad *****************
  2423 ;; Defined at:
  2424 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c"
  2425 ;; Parameters:    Size  Location     Type
  2426 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  2427 ;;		 -> sprintf@f(11), 
  2428 ;;  buf             2   18[COMRAM] PTR unsigned char 
  2429 ;;		 -> dbuf(32), 
  2430 ;;  p               2   20[COMRAM] int 
  2431 ;; Auto vars:     Size  Location     Type
  2432 ;;  w               2   25[COMRAM] int 
  2433 ;;  i               2   23[COMRAM] int 
  2434 ;; Return value:  Size  Location     Type
  2435 ;;                  2   16[COMRAM] int 
  2436 ;; Registers used:
  2437 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2438 ;; Tracked objects:
  2439 ;;		On entry : 0/0
  2440 ;;		On exit  : 0/0
  2441 ;;		Unchanged: 0/0
  2442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2443 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2444 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2445 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2446 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2447 ;;Total ram usage:       11 bytes
  2448 ;; Hardware stack levels used: 1
  2449 ;; Hardware stack levels required when called: 3
  2450 ;; This function calls:
  2451 ;;		_fputc
  2452 ;;		_fputs
  2453 ;;		_strlen
  2454 ;; This function is called by:
  2455 ;;		_dtoa
  2456 ;; This function uses a non-reentrant model
  2457 ;;
  2458                           
  2459                           	psect	text10
  2460  001942                     __ptext10:
  2461                           	callstack 0
  2462  001942                     _pad:
  2463                           	callstack 22
  2464  001942                     
  2465                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  2466  001942  0100               	movlb	0	; () banked
  2467  001944  A1F8               	btfss	_flags& (0+255),0,b
  2468  001946  EFA7  F00C         	goto	u971
  2469  00194A  EFA9  F00C         	goto	u970
  2470  00194E                     u971:
  2471  00194E  EFB3  F00C         	goto	l2062
  2472  001952                     u970:
  2473  001952                     
  2474                           ; BSR set to: 0
  2475                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  2476  001952  C013  F00A         	movff	pad@buf,fputs@s
  2477  001956  C014  F00B         	movff	pad@buf+1,fputs@s+1
  2478  00195A  C011  F00C         	movff	pad@fp,fputs@fp
  2479  00195E  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  2480  001962  EC65  F00E         	call	_fputs	;wreg free
  2481  001966                     l2062:
  2482                           
  2483                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  2484  001966  BE16               	btfsc	(pad@p+1)^0,7,c
  2485  001968  EFB8  F00C         	goto	u981
  2486  00196C  EFBA  F00C         	goto	u980
  2487  001970                     u981:
  2488  001970  EFC0  F00C         	goto	l2066
  2489  001974                     u980:
  2490  001974  C015  F01A         	movff	pad@p,pad@w
  2491  001978  C016  F01B         	movff	pad@p+1,pad@w+1
  2492  00197C  EFC4  F00C         	goto	l1149
  2493  001980                     l2066:
  2494  001980  0E00               	movlw	0
  2495  001982  6E1B               	movwf	(pad@w+1)^0,c
  2496  001984  0E00               	movlw	0
  2497  001986  6E1A               	movwf	pad@w^0,c
  2498  001988                     l1149:
  2499                           
  2500                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  2501  001988  0E00               	movlw	0
  2502  00198A  6E19               	movwf	(pad@i+1)^0,c
  2503  00198C  0E00               	movlw	0
  2504  00198E  6E18               	movwf	pad@i^0,c
  2505                           
  2506                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  2507  001990  EFD6  F00C         	goto	l2072
  2508  001994                     l2068:
  2509                           
  2510                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  2511  001994  0E00               	movlw	0
  2512  001996  6E02               	movwf	(fputc@c+1)^0,c
  2513  001998  0E20               	movlw	32
  2514  00199A  6E01               	movwf	fputc@c^0,c
  2515  00199C  C011  F003         	movff	pad@fp,fputc@fp
  2516  0019A0  C012  F004         	movff	pad@fp+1,fputc@fp+1
  2517  0019A4  EC3C  F00C         	call	_fputc	;wreg free
  2518  0019A8                     
  2519                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 86:         ++i;
  2520  0019A8  4A18               	infsnz	pad@i^0,f,c
  2521  0019AA  2A19               	incf	(pad@i+1)^0,f,c
  2522  0019AC                     l2072:
  2523                           
  2524                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  2525  0019AC  501A               	movf	pad@w^0,w,c
  2526  0019AE  5C18               	subwf	pad@i^0,w,c
  2527  0019B0  5019               	movf	(pad@i+1)^0,w,c
  2528  0019B2  0A80               	xorlw	128
  2529  0019B4  6E17               	movwf	??_pad^0,c
  2530  0019B6  501B               	movf	(pad@w+1)^0,w,c
  2531  0019B8  0A80               	xorlw	128
  2532  0019BA  5817               	subwfb	??_pad^0,w,c
  2533  0019BC  A0D8               	btfss	status,0,c
  2534  0019BE  EFE3  F00C         	goto	u991
  2535  0019C2  EFE5  F00C         	goto	u990
  2536  0019C6                     u991:
  2537  0019C6  EFCA  F00C         	goto	l2068
  2538  0019CA                     u990:
  2539  0019CA                     
  2540                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  2541  0019CA  0100               	movlb	0	; () banked
  2542  0019CC  B1F8               	btfsc	_flags& (0+255),0,b
  2543  0019CE  EFEB  F00C         	goto	u1001
  2544  0019D2  EFED  F00C         	goto	u1000
  2545  0019D6                     u1001:
  2546  0019D6  EFF7  F00C         	goto	l2076
  2547  0019DA                     u1000:
  2548  0019DA                     
  2549                           ; BSR set to: 0
  2550                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  2551  0019DA  C013  F00A         	movff	pad@buf,fputs@s
  2552  0019DE  C014  F00B         	movff	pad@buf+1,fputs@s+1
  2553  0019E2  C011  F00C         	movff	pad@fp,fputs@fp
  2554  0019E6  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  2555  0019EA  EC65  F00E         	call	_fputs	;wreg free
  2556  0019EE                     l2076:
  2557                           
  2558                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  2559  0019EE  C013  F001         	movff	pad@buf,strlen@s
  2560  0019F2  C014  F002         	movff	pad@buf+1,strlen@s+1
  2561  0019F6  EC09  F00F         	call	_strlen	;wreg free
  2562  0019FA  501A               	movf	pad@w^0,w,c
  2563  0019FC  2401               	addwf	?_strlen^0,w,c
  2564  0019FE  6E11               	movwf	?_pad^0,c
  2565  001A00  501B               	movf	(pad@w+1)^0,w,c
  2566  001A02  2002               	addwfc	(?_strlen+1)^0,w,c
  2567  001A04  6E12               	movwf	(?_pad+1)^0,c
  2568  001A06  0012               	return		;funcret
  2569  001A08                     __end_of_pad:
  2570                           	callstack 0
  2571                           
  2572 ;; *************** function _strlen *****************
  2573 ;; Defined at:
  2574 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\strlen.c"
  2575 ;; Parameters:    Size  Location     Type
  2576 ;;  s               2    0[COMRAM] PTR const unsigned char 
  2577 ;;		 -> dbuf(32), 
  2578 ;; Auto vars:     Size  Location     Type
  2579 ;;  a               2    2[COMRAM] PTR const unsigned char 
  2580 ;;		 -> dbuf(32), 
  2581 ;; Return value:  Size  Location     Type
  2582 ;;                  2    0[COMRAM] unsigned int 
  2583 ;; Registers used:
  2584 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2585 ;; Tracked objects:
  2586 ;;		On entry : 0/0
  2587 ;;		On exit  : 0/0
  2588 ;;		Unchanged: 0/0
  2589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2590 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2591 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2592 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2593 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2594 ;;Total ram usage:        4 bytes
  2595 ;; Hardware stack levels used: 1
  2596 ;; This function calls:
  2597 ;;		Nothing
  2598 ;; This function is called by:
  2599 ;;		_pad
  2600 ;; This function uses a non-reentrant model
  2601 ;;
  2602                           
  2603                           	psect	text11
  2604  001E12                     __ptext11:
  2605                           	callstack 0
  2606  001E12                     _strlen:
  2607                           	callstack 24
  2608  001E12  C001  F003         	movff	strlen@s,strlen@a
  2609  001E16  C002  F004         	movff	strlen@s+1,strlen@a+1
  2610  001E1A  EF11  F00F         	goto	l1972
  2611  001E1E                     l1970:
  2612  001E1E  4A01               	infsnz	strlen@s^0,f,c
  2613  001E20  2A02               	incf	(strlen@s+1)^0,f,c
  2614  001E22                     l1972:
  2615  001E22  C001  FFD9         	movff	strlen@s,fsr2l
  2616  001E26  C002  FFDA         	movff	strlen@s+1,fsr2h
  2617  001E2A  50DF               	movf	indf2,w,c
  2618  001E2C  A4D8               	btfss	status,2,c
  2619  001E2E  EF1B  F00F         	goto	u831
  2620  001E32  EF1D  F00F         	goto	u830
  2621  001E36                     u831:
  2622  001E36  EF0F  F00F         	goto	l1970
  2623  001E3A                     u830:
  2624  001E3A  5003               	movf	strlen@a^0,w,c
  2625  001E3C  5C01               	subwf	strlen@s^0,w,c
  2626  001E3E  6E01               	movwf	?_strlen^0,c
  2627  001E40  5004               	movf	(strlen@a+1)^0,w,c
  2628  001E42  5802               	subwfb	(strlen@s+1)^0,w,c
  2629  001E44  6E02               	movwf	(?_strlen+1)^0,c
  2630  001E46  0012               	return		;funcret
  2631  001E48                     __end_of_strlen:
  2632                           	callstack 0
  2633                           
  2634 ;; *************** function _fputs *****************
  2635 ;; Defined at:
  2636 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\nf_fputs.c"
  2637 ;; Parameters:    Size  Location     Type
  2638 ;;  s               2    9[COMRAM] PTR const unsigned char 
  2639 ;;		 -> dbuf(32), 
  2640 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  2641 ;;		 -> sprintf@f(11), 
  2642 ;; Auto vars:     Size  Location     Type
  2643 ;;  i               2   14[COMRAM] int 
  2644 ;;  c               1   13[COMRAM] unsigned char 
  2645 ;; Return value:  Size  Location     Type
  2646 ;;                  2    9[COMRAM] int 
  2647 ;; Registers used:
  2648 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2649 ;; Tracked objects:
  2650 ;;		On entry : 0/0
  2651 ;;		On exit  : 0/0
  2652 ;;		Unchanged: 0/0
  2653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2654 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2655 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2656 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2657 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2658 ;;Total ram usage:        7 bytes
  2659 ;; Hardware stack levels used: 1
  2660 ;; Hardware stack levels required when called: 2
  2661 ;; This function calls:
  2662 ;;		_fputc
  2663 ;; This function is called by:
  2664 ;;		_pad
  2665 ;; This function uses a non-reentrant model
  2666 ;;
  2667                           
  2668                           	psect	text12
  2669  001CCA                     __ptext12:
  2670                           	callstack 0
  2671  001CCA                     _fputs:
  2672                           	callstack 22
  2673  001CCA  0E00               	movlw	0
  2674  001CCC  6E10               	movwf	(fputs@i+1)^0,c
  2675  001CCE  0E00               	movlw	0
  2676  001CD0  6E0F               	movwf	fputs@i^0,c
  2677  001CD2  EF76  F00E         	goto	l1966
  2678  001CD6                     l1962:
  2679  001CD6  C00E  F001         	movff	fputs@c,fputc@c
  2680  001CDA  6A02               	clrf	(fputc@c+1)^0,c
  2681  001CDC  C00C  F003         	movff	fputs@fp,fputc@fp
  2682  001CE0  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  2683  001CE4  EC3C  F00C         	call	_fputc	;wreg free
  2684  001CE8  4A0F               	infsnz	fputs@i^0,f,c
  2685  001CEA  2A10               	incf	(fputs@i+1)^0,f,c
  2686  001CEC                     l1966:
  2687  001CEC  500F               	movf	fputs@i^0,w,c
  2688  001CEE  240A               	addwf	fputs@s^0,w,c
  2689  001CF0  6ED9               	movwf	fsr2l,c
  2690  001CF2  5010               	movf	(fputs@i+1)^0,w,c
  2691  001CF4  200B               	addwfc	(fputs@s+1)^0,w,c
  2692  001CF6  6EDA               	movwf	fsr2h,c
  2693  001CF8  50DF               	movf	indf2,w,c
  2694  001CFA  6E0E               	movwf	fputs@c^0,c
  2695  001CFC  500E               	movf	fputs@c^0,w,c
  2696  001CFE  A4D8               	btfss	status,2,c
  2697  001D00  EF84  F00E         	goto	u821
  2698  001D04  EF86  F00E         	goto	u820
  2699  001D08                     u821:
  2700  001D08  EF6B  F00E         	goto	l1962
  2701  001D0C                     u820:
  2702  001D0C  0012               	return		;funcret
  2703  001D0E                     __end_of_fputs:
  2704                           	callstack 0
  2705                           
  2706 ;; *************** function _fputc *****************
  2707 ;; Defined at:
  2708 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\nf_fputc.c"
  2709 ;; Parameters:    Size  Location     Type
  2710 ;;  c               2    0[COMRAM] int 
  2711 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  2712 ;;		 -> sprintf@f(11), 
  2713 ;; Auto vars:     Size  Location     Type
  2714 ;;		None
  2715 ;; Return value:  Size  Location     Type
  2716 ;;                  2    0[COMRAM] int 
  2717 ;; Registers used:
  2718 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2719 ;; Tracked objects:
  2720 ;;		On entry : 0/0
  2721 ;;		On exit  : 0/0
  2722 ;;		Unchanged: 0/0
  2723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2724 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2725 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2726 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2727 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2728 ;;Total ram usage:        9 bytes
  2729 ;; Hardware stack levels used: 1
  2730 ;; Hardware stack levels required when called: 1
  2731 ;; This function calls:
  2732 ;;		_putch
  2733 ;; This function is called by:
  2734 ;;		_pad
  2735 ;;		_vfpfcnvrt
  2736 ;;		_fputs
  2737 ;; This function uses a non-reentrant model
  2738 ;;
  2739                           
  2740                           	psect	text13
  2741  001878                     __ptext13:
  2742                           	callstack 0
  2743  001878                     _fputc:
  2744                           	callstack 25
  2745  001878  5003               	movf	fputc@fp^0,w,c
  2746  00187A  1004               	iorwf	(fputc@fp+1)^0,w,c
  2747  00187C  B4D8               	btfsc	status,2,c
  2748  00187E  EF43  F00C         	goto	u781
  2749  001882  EF45  F00C         	goto	u780
  2750  001886                     u781:
  2751  001886  EF4E  F00C         	goto	l1950
  2752  00188A                     u780:
  2753  00188A  5003               	movf	fputc@fp^0,w,c
  2754  00188C  1004               	iorwf	(fputc@fp+1)^0,w,c
  2755  00188E  A4D8               	btfss	status,2,c
  2756  001890  EF4C  F00C         	goto	u791
  2757  001894  EF4E  F00C         	goto	u790
  2758  001898                     u791:
  2759  001898  EF53  F00C         	goto	l1952
  2760  00189C                     u790:
  2761  00189C                     l1950:
  2762  00189C  5001               	movf	fputc@c^0,w,c
  2763  00189E  EC2E  F010         	call	_putch
  2764  0018A2  EFA0  F00C         	goto	l1213
  2765  0018A6                     l1952:
  2766  0018A6  EE20 F009          	lfsr	2,9
  2767  0018AA  5003               	movf	fputc@fp^0,w,c
  2768  0018AC  26D9               	addwf	fsr2l,f,c
  2769  0018AE  5004               	movf	(fputc@fp+1)^0,w,c
  2770  0018B0  22DA               	addwfc	fsr2h,f,c
  2771  0018B2  50DE               	movf	postinc2,w,c
  2772  0018B4  10DE               	iorwf	postinc2,w,c
  2773  0018B6  B4D8               	btfsc	status,2,c
  2774  0018B8  EF60  F00C         	goto	u801
  2775  0018BC  EF62  F00C         	goto	u800
  2776  0018C0                     u801:
  2777  0018C0  EF7D  F00C         	goto	l1956
  2778  0018C4                     u800:
  2779  0018C4  EE20 F009          	lfsr	2,9
  2780  0018C8  5003               	movf	fputc@fp^0,w,c
  2781  0018CA  26D9               	addwf	fsr2l,f,c
  2782  0018CC  5004               	movf	(fputc@fp+1)^0,w,c
  2783  0018CE  22DA               	addwfc	fsr2h,f,c
  2784  0018D0  EE10 F003          	lfsr	1,3
  2785  0018D4  5003               	movf	fputc@fp^0,w,c
  2786  0018D6  26E1               	addwf	fsr1l,f,c
  2787  0018D8  5004               	movf	(fputc@fp+1)^0,w,c
  2788  0018DA  22E2               	addwfc	fsr1h,f,c
  2789  0018DC  50DE               	movf	postinc2,w,c
  2790  0018DE  5CE6               	subwf	postinc1,w,c
  2791  0018E0  50E6               	movf	postinc1,w,c
  2792  0018E2  0A80               	xorlw	128
  2793  0018E4  6E09               	movwf	(??_fputc+4)^0,c
  2794  0018E6  50DE               	movf	postinc2,w,c
  2795  0018E8  0A80               	xorlw	128
  2796  0018EA  5809               	subwfb	(??_fputc+4)^0,w,c
  2797  0018EC  B0D8               	btfsc	status,0,c
  2798  0018EE  EF7B  F00C         	goto	u811
  2799  0018F2  EF7D  F00C         	goto	u810
  2800  0018F6                     u811:
  2801  0018F6  EFA0  F00C         	goto	l1213
  2802  0018FA                     u810:
  2803  0018FA                     l1956:
  2804  0018FA  EE20 F003          	lfsr	2,3
  2805  0018FE  5003               	movf	fputc@fp^0,w,c
  2806  001900  26D9               	addwf	fsr2l,f,c
  2807  001902  5004               	movf	(fputc@fp+1)^0,w,c
  2808  001904  22DA               	addwfc	fsr2h,f,c
  2809  001906  CFDE F005          	movff	postinc2,??_fputc
  2810  00190A  CFDD F006          	movff	postdec2,??_fputc+1
  2811  00190E  C003  FFD9         	movff	fputc@fp,fsr2l
  2812  001912  C004  FFDA         	movff	fputc@fp+1,fsr2h
  2813  001916  CFDE F007          	movff	postinc2,??_fputc+2
  2814  00191A  CFDD F008          	movff	postdec2,??_fputc+3
  2815  00191E  5005               	movf	??_fputc^0,w,c
  2816  001920  2407               	addwf	(??_fputc+2)^0,w,c
  2817  001922  6ED9               	movwf	fsr2l,c
  2818  001924  5006               	movf	(??_fputc+1)^0,w,c
  2819  001926  2008               	addwfc	(??_fputc+3)^0,w,c
  2820  001928  6EDA               	movwf	fsr2h,c
  2821  00192A  C001  FFDF         	movff	fputc@c,indf2
  2822  00192E  EE20 F003          	lfsr	2,3
  2823  001932  5003               	movf	fputc@fp^0,w,c
  2824  001934  26D9               	addwf	fsr2l,f,c
  2825  001936  5004               	movf	(fputc@fp+1)^0,w,c
  2826  001938  22DA               	addwfc	fsr2h,f,c
  2827  00193A  2ADE               	incf	postinc2,f,c
  2828  00193C  0E00               	movlw	0
  2829  00193E  22DD               	addwfc	postdec2,f,c
  2830  001940                     l1213:
  2831  001940  0012               	return		;funcret
  2832  001942                     __end_of_fputc:
  2833                           	callstack 0
  2834                           
  2835 ;; *************** function _putch *****************
  2836 ;; Defined at:
  2837 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\putch.c"
  2838 ;; Parameters:    Size  Location     Type
  2839 ;;  c               1    wreg     unsigned char 
  2840 ;; Auto vars:     Size  Location     Type
  2841 ;;  c               1    0[COMRAM] unsigned char 
  2842 ;; Return value:  Size  Location     Type
  2843 ;;                  1    wreg      void 
  2844 ;; Registers used:
  2845 ;;		wreg
  2846 ;; Tracked objects:
  2847 ;;		On entry : 0/0
  2848 ;;		On exit  : 0/0
  2849 ;;		Unchanged: 0/0
  2850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2851 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2852 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2853 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2854 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2855 ;;Total ram usage:        0 bytes
  2856 ;; Hardware stack levels used: 1
  2857 ;; This function calls:
  2858 ;;		Nothing
  2859 ;; This function is called by:
  2860 ;;		_fputc
  2861 ;; This function uses a non-reentrant model
  2862 ;;
  2863                           
  2864                           	psect	text14
  2865  00205C                     __ptext14:
  2866                           	callstack 0
  2867  00205C                     _putch:
  2868                           	callstack 25
  2869  00205C  0012               	return		;funcret
  2870  00205E                     __end_of_putch:
  2871                           	callstack 0
  2872                           
  2873 ;; *************** function _abs *****************
  2874 ;; Defined at:
  2875 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\abs.c"
  2876 ;; Parameters:    Size  Location     Type
  2877 ;;  a               2   18[COMRAM] int 
  2878 ;; Auto vars:     Size  Location     Type
  2879 ;;		None
  2880 ;; Return value:  Size  Location     Type
  2881 ;;                  2   18[COMRAM] int 
  2882 ;; Registers used:
  2883 ;;		wreg, status,2, status,0
  2884 ;; Tracked objects:
  2885 ;;		On entry : 0/0
  2886 ;;		On exit  : 0/0
  2887 ;;		Unchanged: 0/0
  2888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2889 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2890 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2891 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2892 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2893 ;;Total ram usage:        4 bytes
  2894 ;; Hardware stack levels used: 1
  2895 ;; This function calls:
  2896 ;;		Nothing
  2897 ;; This function is called by:
  2898 ;;		_dtoa
  2899 ;; This function uses a non-reentrant model
  2900 ;;
  2901                           
  2902                           	psect	text15
  2903  001DD2                     __ptext15:
  2904                           	callstack 0
  2905  001DD2                     _abs:
  2906                           	callstack 25
  2907  001DD2  BE14               	btfsc	(abs@a+1)^0,7,c
  2908  001DD4  EFF6  F00E         	goto	u1010
  2909  001DD8  5014               	movf	(abs@a+1)^0,w,c
  2910  001DDA  E106               	bnz	u1011
  2911  001DDC  0413               	decf	abs@a^0,w,c
  2912  001DDE  B0D8               	btfsc	status,0,c
  2913  001DE0  EFF4  F00E         	goto	u1011
  2914  001DE4  EFF6  F00E         	goto	u1010
  2915  001DE8                     u1011:
  2916  001DE8  EF04  F00F         	goto	l1198
  2917  001DEC                     u1010:
  2918  001DEC  C013  F015         	movff	abs@a,??_abs
  2919  001DF0  C014  F016         	movff	abs@a+1,??_abs+1
  2920  001DF4  1E15               	comf	??_abs^0,f,c
  2921  001DF6  1E16               	comf	(??_abs+1)^0,f,c
  2922  001DF8  4A15               	infsnz	??_abs^0,f,c
  2923  001DFA  2A16               	incf	(??_abs+1)^0,f,c
  2924  001DFC  C015  F013         	movff	??_abs,?_abs
  2925  001E00  C016  F014         	movff	??_abs+1,?_abs+1
  2926  001E04  EF08  F00F         	goto	l1201
  2927  001E08                     l1198:
  2928  001E08  C013  F013         	movff	abs@a,?_abs
  2929  001E0C  C014  F014         	movff	abs@a+1,?_abs+1
  2930  001E10                     l1201:
  2931  001E10  0012               	return		;funcret
  2932  001E12                     __end_of_abs:
  2933                           	callstack 0
  2934                           
  2935 ;; *************** function ___aomod *****************
  2936 ;; Defined at:
  2937 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\aomod.c"
  2938 ;; Parameters:    Size  Location     Type
  2939 ;;  dividend        8    0[COMRAM] long long 
  2940 ;;  divisor         8    8[COMRAM] long long 
  2941 ;; Auto vars:     Size  Location     Type
  2942 ;;  sign            1   17[COMRAM] unsigned char 
  2943 ;;  counter         1   16[COMRAM] unsigned char 
  2944 ;; Return value:  Size  Location     Type
  2945 ;;                  8    0[COMRAM] long long 
  2946 ;; Registers used:
  2947 ;;		wreg, status,2, status,0
  2948 ;; Tracked objects:
  2949 ;;		On entry : 0/0
  2950 ;;		On exit  : 0/0
  2951 ;;		Unchanged: 0/0
  2952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2953 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2954 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2955 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2956 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2957 ;;Total ram usage:       18 bytes
  2958 ;; Hardware stack levels used: 1
  2959 ;; This function calls:
  2960 ;;		Nothing
  2961 ;; This function is called by:
  2962 ;;		_dtoa
  2963 ;; This function uses a non-reentrant model
  2964 ;;
  2965                           
  2966                           	psect	text16
  2967  001642                     __ptext16:
  2968                           	callstack 0
  2969  001642                     ___aomod:
  2970                           	callstack 25
  2971  001642  0E00               	movlw	0
  2972  001644  6E12               	movwf	___aomod@sign^0,c
  2973  001646  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
  2974  001648  EF2A  F00B         	goto	u910
  2975  00164C  EF28  F00B         	goto	u911
  2976  001650                     u911:
  2977  001650  EF3C  F00B         	goto	l2030
  2978  001654                     u910:
  2979  001654  1E08               	comf	(___aomod@dividend+7)^0,f,c
  2980  001656  1E07               	comf	(___aomod@dividend+6)^0,f,c
  2981  001658  1E06               	comf	(___aomod@dividend+5)^0,f,c
  2982  00165A  1E05               	comf	(___aomod@dividend+4)^0,f,c
  2983  00165C  1E04               	comf	(___aomod@dividend+3)^0,f,c
  2984  00165E  1E03               	comf	(___aomod@dividend+2)^0,f,c
  2985  001660  1E02               	comf	(___aomod@dividend+1)^0,f,c
  2986  001662  6C01               	negf	___aomod@dividend^0,c
  2987  001664  0E00               	movlw	0
  2988  001666  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  2989  001668  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  2990  00166A  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  2991  00166C  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  2992  00166E  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  2993  001670  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  2994  001672  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  2995  001674  0E01               	movlw	1
  2996  001676  6E12               	movwf	___aomod@sign^0,c
  2997  001678                     l2030:
  2998  001678  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
  2999  00167A  EF43  F00B         	goto	u920
  3000  00167E  EF41  F00B         	goto	u921
  3001  001682                     u921:
  3002  001682  EF53  F00B         	goto	l2034
  3003  001686                     u920:
  3004  001686  1E10               	comf	(___aomod@divisor+7)^0,f,c
  3005  001688  1E0F               	comf	(___aomod@divisor+6)^0,f,c
  3006  00168A  1E0E               	comf	(___aomod@divisor+5)^0,f,c
  3007  00168C  1E0D               	comf	(___aomod@divisor+4)^0,f,c
  3008  00168E  1E0C               	comf	(___aomod@divisor+3)^0,f,c
  3009  001690  1E0B               	comf	(___aomod@divisor+2)^0,f,c
  3010  001692  1E0A               	comf	(___aomod@divisor+1)^0,f,c
  3011  001694  6C09               	negf	___aomod@divisor^0,c
  3012  001696  0E00               	movlw	0
  3013  001698  220A               	addwfc	(___aomod@divisor+1)^0,f,c
  3014  00169A  220B               	addwfc	(___aomod@divisor+2)^0,f,c
  3015  00169C  220C               	addwfc	(___aomod@divisor+3)^0,f,c
  3016  00169E  220D               	addwfc	(___aomod@divisor+4)^0,f,c
  3017  0016A0  220E               	addwfc	(___aomod@divisor+5)^0,f,c
  3018  0016A2  220F               	addwfc	(___aomod@divisor+6)^0,f,c
  3019  0016A4  2210               	addwfc	(___aomod@divisor+7)^0,f,c
  3020  0016A6                     l2034:
  3021  0016A6  5009               	movf	___aomod@divisor^0,w,c
  3022  0016A8  100A               	iorwf	(___aomod@divisor+1)^0,w,c
  3023  0016AA  100B               	iorwf	(___aomod@divisor+2)^0,w,c
  3024  0016AC  100C               	iorwf	(___aomod@divisor+3)^0,w,c
  3025  0016AE  100D               	iorwf	(___aomod@divisor+4)^0,w,c
  3026  0016B0  100E               	iorwf	(___aomod@divisor+5)^0,w,c
  3027  0016B2  100F               	iorwf	(___aomod@divisor+6)^0,w,c
  3028  0016B4  1010               	iorwf	(___aomod@divisor+7)^0,w,c
  3029  0016B6  B4D8               	btfsc	status,2,c
  3030  0016B8  EF60  F00B         	goto	u931
  3031  0016BC  EF62  F00B         	goto	u930
  3032  0016C0                     u931:
  3033  0016C0  EFAA  F00B         	goto	l2050
  3034  0016C4                     u930:
  3035  0016C4  0E01               	movlw	1
  3036  0016C6  6E11               	movwf	___aomod@counter^0,c
  3037  0016C8  EF70  F00B         	goto	l2040
  3038  0016CC                     l2038:
  3039  0016CC  90D8               	bcf	status,0,c
  3040  0016CE  3609               	rlcf	___aomod@divisor^0,f,c
  3041  0016D0  360A               	rlcf	(___aomod@divisor+1)^0,f,c
  3042  0016D2  360B               	rlcf	(___aomod@divisor+2)^0,f,c
  3043  0016D4  360C               	rlcf	(___aomod@divisor+3)^0,f,c
  3044  0016D6  360D               	rlcf	(___aomod@divisor+4)^0,f,c
  3045  0016D8  360E               	rlcf	(___aomod@divisor+5)^0,f,c
  3046  0016DA  360F               	rlcf	(___aomod@divisor+6)^0,f,c
  3047  0016DC  3610               	rlcf	(___aomod@divisor+7)^0,f,c
  3048  0016DE  2A11               	incf	___aomod@counter^0,f,c
  3049  0016E0                     l2040:
  3050  0016E0  AE10               	btfss	(___aomod@divisor+7)^0,7,c
  3051  0016E2  EF75  F00B         	goto	u941
  3052  0016E6  EF77  F00B         	goto	u940
  3053  0016EA                     u941:
  3054  0016EA  EF66  F00B         	goto	l2038
  3055  0016EE                     u940:
  3056  0016EE                     l2042:
  3057  0016EE  5009               	movf	___aomod@divisor^0,w,c
  3058  0016F0  5C01               	subwf	___aomod@dividend^0,w,c
  3059  0016F2  500A               	movf	(___aomod@divisor+1)^0,w,c
  3060  0016F4  5802               	subwfb	(___aomod@dividend+1)^0,w,c
  3061  0016F6  500B               	movf	(___aomod@divisor+2)^0,w,c
  3062  0016F8  5803               	subwfb	(___aomod@dividend+2)^0,w,c
  3063  0016FA  500C               	movf	(___aomod@divisor+3)^0,w,c
  3064  0016FC  5804               	subwfb	(___aomod@dividend+3)^0,w,c
  3065  0016FE  500D               	movf	(___aomod@divisor+4)^0,w,c
  3066  001700  5805               	subwfb	(___aomod@dividend+4)^0,w,c
  3067  001702  500E               	movf	(___aomod@divisor+5)^0,w,c
  3068  001704  5806               	subwfb	(___aomod@dividend+5)^0,w,c
  3069  001706  500F               	movf	(___aomod@divisor+6)^0,w,c
  3070  001708  5807               	subwfb	(___aomod@dividend+6)^0,w,c
  3071  00170A  5010               	movf	(___aomod@divisor+7)^0,w,c
  3072  00170C  5808               	subwfb	(___aomod@dividend+7)^0,w,c
  3073  00170E  A0D8               	btfss	status,0,c
  3074  001710  EF8C  F00B         	goto	u951
  3075  001714  EF8E  F00B         	goto	u950
  3076  001718                     u951:
  3077  001718  EF9E  F00B         	goto	l2046
  3078  00171C                     u950:
  3079  00171C  5009               	movf	___aomod@divisor^0,w,c
  3080  00171E  5E01               	subwf	___aomod@dividend^0,f,c
  3081  001720  500A               	movf	(___aomod@divisor+1)^0,w,c
  3082  001722  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
  3083  001724  500B               	movf	(___aomod@divisor+2)^0,w,c
  3084  001726  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
  3085  001728  500C               	movf	(___aomod@divisor+3)^0,w,c
  3086  00172A  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
  3087  00172C  500D               	movf	(___aomod@divisor+4)^0,w,c
  3088  00172E  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
  3089  001730  500E               	movf	(___aomod@divisor+5)^0,w,c
  3090  001732  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
  3091  001734  500F               	movf	(___aomod@divisor+6)^0,w,c
  3092  001736  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
  3093  001738  5010               	movf	(___aomod@divisor+7)^0,w,c
  3094  00173A  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
  3095  00173C                     l2046:
  3096  00173C  90D8               	bcf	status,0,c
  3097  00173E  3210               	rrcf	(___aomod@divisor+7)^0,f,c
  3098  001740  320F               	rrcf	(___aomod@divisor+6)^0,f,c
  3099  001742  320E               	rrcf	(___aomod@divisor+5)^0,f,c
  3100  001744  320D               	rrcf	(___aomod@divisor+4)^0,f,c
  3101  001746  320C               	rrcf	(___aomod@divisor+3)^0,f,c
  3102  001748  320B               	rrcf	(___aomod@divisor+2)^0,f,c
  3103  00174A  320A               	rrcf	(___aomod@divisor+1)^0,f,c
  3104  00174C  3209               	rrcf	___aomod@divisor^0,f,c
  3105  00174E  2E11               	decfsz	___aomod@counter^0,f,c
  3106  001750  EF77  F00B         	goto	l2042
  3107  001754                     l2050:
  3108  001754  5012               	movf	___aomod@sign^0,w,c
  3109  001756  B4D8               	btfsc	status,2,c
  3110  001758  EFB0  F00B         	goto	u961
  3111  00175C  EFB2  F00B         	goto	u960
  3112  001760                     u961:
  3113  001760  EFC2  F00B         	goto	l2054
  3114  001764                     u960:
  3115  001764  1E08               	comf	(___aomod@dividend+7)^0,f,c
  3116  001766  1E07               	comf	(___aomod@dividend+6)^0,f,c
  3117  001768  1E06               	comf	(___aomod@dividend+5)^0,f,c
  3118  00176A  1E05               	comf	(___aomod@dividend+4)^0,f,c
  3119  00176C  1E04               	comf	(___aomod@dividend+3)^0,f,c
  3120  00176E  1E03               	comf	(___aomod@dividend+2)^0,f,c
  3121  001770  1E02               	comf	(___aomod@dividend+1)^0,f,c
  3122  001772  6C01               	negf	___aomod@dividend^0,c
  3123  001774  0E00               	movlw	0
  3124  001776  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  3125  001778  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  3126  00177A  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  3127  00177C  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  3128  00177E  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  3129  001780  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  3130  001782  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  3131  001784                     l2054:
  3132  001784  C001  F001         	movff	___aomod@dividend,?___aomod
  3133  001788  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  3134  00178C  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  3135  001790  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  3136  001794  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  3137  001798  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  3138  00179C  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  3139  0017A0  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  3140  0017A4  0012               	return		;funcret
  3141  0017A6                     __end_of___aomod:
  3142                           	callstack 0
  3143                           
  3144 ;; *************** function ___aodiv *****************
  3145 ;; Defined at:
  3146 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\aodiv.c"
  3147 ;; Parameters:    Size  Location     Type
  3148 ;;  dividend        8    0[COMRAM] long long 
  3149 ;;  divisor         8    8[COMRAM] long long 
  3150 ;; Auto vars:     Size  Location     Type
  3151 ;;  quotient        8   18[COMRAM] long long 
  3152 ;;  sign            1   17[COMRAM] unsigned char 
  3153 ;;  counter         1   16[COMRAM] unsigned char 
  3154 ;; Return value:  Size  Location     Type
  3155 ;;                  8    0[COMRAM] long long 
  3156 ;; Registers used:
  3157 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3158 ;; Tracked objects:
  3159 ;;		On entry : 0/0
  3160 ;;		On exit  : 0/0
  3161 ;;		Unchanged: 0/0
  3162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3163 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3164 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3165 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3166 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3167 ;;Total ram usage:       26 bytes
  3168 ;; Hardware stack levels used: 1
  3169 ;; This function calls:
  3170 ;;		Nothing
  3171 ;; This function is called by:
  3172 ;;		_dtoa
  3173 ;; This function uses a non-reentrant model
  3174 ;;
  3175                           
  3176                           	psect	text17
  3177  0014BA                     __ptext17:
  3178                           	callstack 0
  3179  0014BA                     ___aodiv:
  3180                           	callstack 25
  3181  0014BA  0E00               	movlw	0
  3182  0014BC  6E12               	movwf	___aodiv@sign^0,c
  3183  0014BE  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
  3184  0014C0  EF66  F00A         	goto	u840
  3185  0014C4  EF64  F00A         	goto	u841
  3186  0014C8                     u841:
  3187  0014C8  EF78  F00A         	goto	l1986
  3188  0014CC                     u840:
  3189  0014CC  1E10               	comf	(___aodiv@divisor+7)^0,f,c
  3190  0014CE  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
  3191  0014D0  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
  3192  0014D2  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
  3193  0014D4  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
  3194  0014D6  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
  3195  0014D8  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
  3196  0014DA  6C09               	negf	___aodiv@divisor^0,c
  3197  0014DC  0E00               	movlw	0
  3198  0014DE  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
  3199  0014E0  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
  3200  0014E2  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
  3201  0014E4  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
  3202  0014E6  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
  3203  0014E8  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
  3204  0014EA  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
  3205  0014EC  0E01               	movlw	1
  3206  0014EE  6E12               	movwf	___aodiv@sign^0,c
  3207  0014F0                     l1986:
  3208  0014F0  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
  3209  0014F2  EF7F  F00A         	goto	u850
  3210  0014F6  EF7D  F00A         	goto	u851
  3211  0014FA                     u851:
  3212  0014FA  EF91  F00A         	goto	l1992
  3213  0014FE                     u850:
  3214  0014FE  1E08               	comf	(___aodiv@dividend+7)^0,f,c
  3215  001500  1E07               	comf	(___aodiv@dividend+6)^0,f,c
  3216  001502  1E06               	comf	(___aodiv@dividend+5)^0,f,c
  3217  001504  1E05               	comf	(___aodiv@dividend+4)^0,f,c
  3218  001506  1E04               	comf	(___aodiv@dividend+3)^0,f,c
  3219  001508  1E03               	comf	(___aodiv@dividend+2)^0,f,c
  3220  00150A  1E02               	comf	(___aodiv@dividend+1)^0,f,c
  3221  00150C  6C01               	negf	___aodiv@dividend^0,c
  3222  00150E  0E00               	movlw	0
  3223  001510  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
  3224  001512  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
  3225  001514  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
  3226  001516  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
  3227  001518  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
  3228  00151A  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
  3229  00151C  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
  3230  00151E  0E01               	movlw	1
  3231  001520  1A12               	xorwf	___aodiv@sign^0,f,c
  3232  001522                     l1992:
  3233  001522  EE20  F013         	lfsr	2,___aodiv@quotient
  3234  001526  0E07               	movlw	7
  3235  001528                     u861:
  3236  001528  6ADE               	clrf	postinc2,c
  3237  00152A  06E8               	decf	wreg,f,c
  3238  00152C  E2FD               	bc	u861
  3239  00152E  5009               	movf	___aodiv@divisor^0,w,c
  3240  001530  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
  3241  001532  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
  3242  001534  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
  3243  001536  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
  3244  001538  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
  3245  00153A  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
  3246  00153C  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
  3247  00153E  B4D8               	btfsc	status,2,c
  3248  001540  EFA4  F00A         	goto	u871
  3249  001544  EFA6  F00A         	goto	u870
  3250  001548                     u871:
  3251  001548  EFF8  F00A         	goto	l2014
  3252  00154C                     u870:
  3253  00154C  0E01               	movlw	1
  3254  00154E  6E11               	movwf	___aodiv@counter^0,c
  3255  001550  EFB4  F00A         	goto	l2000
  3256  001554                     l1998:
  3257  001554  90D8               	bcf	status,0,c
  3258  001556  3609               	rlcf	___aodiv@divisor^0,f,c
  3259  001558  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
  3260  00155A  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
  3261  00155C  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
  3262  00155E  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
  3263  001560  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
  3264  001562  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
  3265  001564  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
  3266  001566  2A11               	incf	___aodiv@counter^0,f,c
  3267  001568                     l2000:
  3268  001568  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
  3269  00156A  EFB9  F00A         	goto	u881
  3270  00156E  EFBB  F00A         	goto	u880
  3271  001572                     u881:
  3272  001572  EFAA  F00A         	goto	l1998
  3273  001576                     u880:
  3274  001576                     l2002:
  3275  001576  90D8               	bcf	status,0,c
  3276  001578  3613               	rlcf	___aodiv@quotient^0,f,c
  3277  00157A  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
  3278  00157C  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
  3279  00157E  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
  3280  001580  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
  3281  001582  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
  3282  001584  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
  3283  001586  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
  3284  001588  5009               	movf	___aodiv@divisor^0,w,c
  3285  00158A  5C01               	subwf	___aodiv@dividend^0,w,c
  3286  00158C  500A               	movf	(___aodiv@divisor+1)^0,w,c
  3287  00158E  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
  3288  001590  500B               	movf	(___aodiv@divisor+2)^0,w,c
  3289  001592  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
  3290  001594  500C               	movf	(___aodiv@divisor+3)^0,w,c
  3291  001596  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
  3292  001598  500D               	movf	(___aodiv@divisor+4)^0,w,c
  3293  00159A  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
  3294  00159C  500E               	movf	(___aodiv@divisor+5)^0,w,c
  3295  00159E  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
  3296  0015A0  500F               	movf	(___aodiv@divisor+6)^0,w,c
  3297  0015A2  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
  3298  0015A4  5010               	movf	(___aodiv@divisor+7)^0,w,c
  3299  0015A6  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
  3300  0015A8  A0D8               	btfss	status,0,c
  3301  0015AA  EFD9  F00A         	goto	u891
  3302  0015AE  EFDB  F00A         	goto	u890
  3303  0015B2                     u891:
  3304  0015B2  EFEC  F00A         	goto	l2010
  3305  0015B6                     u890:
  3306  0015B6  5009               	movf	___aodiv@divisor^0,w,c
  3307  0015B8  5E01               	subwf	___aodiv@dividend^0,f,c
  3308  0015BA  500A               	movf	(___aodiv@divisor+1)^0,w,c
  3309  0015BC  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
  3310  0015BE  500B               	movf	(___aodiv@divisor+2)^0,w,c
  3311  0015C0  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
  3312  0015C2  500C               	movf	(___aodiv@divisor+3)^0,w,c
  3313  0015C4  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
  3314  0015C6  500D               	movf	(___aodiv@divisor+4)^0,w,c
  3315  0015C8  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
  3316  0015CA  500E               	movf	(___aodiv@divisor+5)^0,w,c
  3317  0015CC  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
  3318  0015CE  500F               	movf	(___aodiv@divisor+6)^0,w,c
  3319  0015D0  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
  3320  0015D2  5010               	movf	(___aodiv@divisor+7)^0,w,c
  3321  0015D4  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
  3322  0015D6  8013               	bsf	___aodiv@quotient^0,0,c
  3323  0015D8                     l2010:
  3324  0015D8  90D8               	bcf	status,0,c
  3325  0015DA  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
  3326  0015DC  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
  3327  0015DE  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
  3328  0015E0  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
  3329  0015E2  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
  3330  0015E4  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
  3331  0015E6  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
  3332  0015E8  3209               	rrcf	___aodiv@divisor^0,f,c
  3333  0015EA  2E11               	decfsz	___aodiv@counter^0,f,c
  3334  0015EC  EFBB  F00A         	goto	l2002
  3335  0015F0                     l2014:
  3336  0015F0  5012               	movf	___aodiv@sign^0,w,c
  3337  0015F2  B4D8               	btfsc	status,2,c
  3338  0015F4  EFFE  F00A         	goto	u901
  3339  0015F8  EF00  F00B         	goto	u900
  3340  0015FC                     u901:
  3341  0015FC  EF10  F00B         	goto	l2018
  3342  001600                     u900:
  3343  001600  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
  3344  001602  1E19               	comf	(___aodiv@quotient+6)^0,f,c
  3345  001604  1E18               	comf	(___aodiv@quotient+5)^0,f,c
  3346  001606  1E17               	comf	(___aodiv@quotient+4)^0,f,c
  3347  001608  1E16               	comf	(___aodiv@quotient+3)^0,f,c
  3348  00160A  1E15               	comf	(___aodiv@quotient+2)^0,f,c
  3349  00160C  1E14               	comf	(___aodiv@quotient+1)^0,f,c
  3350  00160E  6C13               	negf	___aodiv@quotient^0,c
  3351  001610  0E00               	movlw	0
  3352  001612  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
  3353  001614  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
  3354  001616  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
  3355  001618  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
  3356  00161A  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
  3357  00161C  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
  3358  00161E  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
  3359  001620                     l2018:
  3360  001620  C013  F001         	movff	___aodiv@quotient,?___aodiv
  3361  001624  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  3362  001628  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  3363  00162C  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  3364  001630  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  3365  001634  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  3366  001638  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  3367  00163C  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  3368  001640  0012               	return		;funcret
  3369  001642                     __end_of___aodiv:
  3370                           	callstack 0
  3371                           
  3372 ;; *************** function _sendStringSerial4 *****************
  3373 ;; Defined at:
  3374 ;;		line 36 in file "serial.c"
  3375 ;; Parameters:    Size  Location     Type
  3376 ;;  string          2    1[COMRAM] PTR unsigned char 
  3377 ;;		 -> voltage_display@buf(80), color_predict@buf(100), color_display@buf(100), 
  3378 ;; Auto vars:     Size  Location     Type
  3379 ;;		None
  3380 ;; Return value:  Size  Location     Type
  3381 ;;                  1    wreg      void 
  3382 ;; Registers used:
  3383 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3384 ;; Tracked objects:
  3385 ;;		On entry : 0/0
  3386 ;;		On exit  : 0/0
  3387 ;;		Unchanged: 0/0
  3388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3389 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3390 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3391 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3392 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3393 ;;Total ram usage:        2 bytes
  3394 ;; Hardware stack levels used: 1
  3395 ;; Hardware stack levels required when called: 1
  3396 ;; This function calls:
  3397 ;;		_sendCharSerial4
  3398 ;; This function is called by:
  3399 ;;		_color_display
  3400 ;;		_color_predict
  3401 ;;		_voltage_display
  3402 ;; This function uses a non-reentrant model
  3403 ;;
  3404                           
  3405                           	psect	text18
  3406  001E7C                     __ptext18:
  3407                           	callstack 0
  3408  001E7C                     _sendStringSerial4:
  3409                           	callstack 28
  3410  001E7C                     
  3411                           ;serial.c: 38:     while(*string != 0){
  3412  001E7C  EF49  F00F         	goto	l2292
  3413  001E80                     l2288:
  3414                           
  3415                           ;serial.c: 39:   sendCharSerial4(*string++);}
  3416  001E80  C002  FFD9         	movff	sendStringSerial4@string,fsr2l
  3417  001E84  C003  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  3418  001E88  50DF               	movf	indf2,w,c
  3419  001E8A  EC0D  F010         	call	_sendCharSerial4
  3420  001E8E  4A02               	infsnz	sendStringSerial4@string^0,f,c
  3421  001E90  2A03               	incf	(sendStringSerial4@string+1)^0,f,c
  3422  001E92                     l2292:
  3423                           
  3424                           ;serial.c: 38:     while(*string != 0){
  3425  001E92  C002  FFD9         	movff	sendStringSerial4@string,fsr2l
  3426  001E96  C003  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  3427  001E9A  50DF               	movf	indf2,w,c
  3428  001E9C  A4D8               	btfss	status,2,c
  3429  001E9E  EF53  F00F         	goto	u1271
  3430  001EA2  EF55  F00F         	goto	u1270
  3431  001EA6                     u1271:
  3432  001EA6  EF40  F00F         	goto	l2288
  3433  001EAA                     u1270:
  3434  001EAA  0012               	return		;funcret
  3435  001EAC                     __end_of_sendStringSerial4:
  3436                           	callstack 0
  3437                           
  3438 ;; *************** function _sendCharSerial4 *****************
  3439 ;; Defined at:
  3440 ;;		line 29 in file "serial.c"
  3441 ;; Parameters:    Size  Location     Type
  3442 ;;  charToSend      1    wreg     unsigned char 
  3443 ;; Auto vars:     Size  Location     Type
  3444 ;;  charToSend      1    0[COMRAM] unsigned char 
  3445 ;; Return value:  Size  Location     Type
  3446 ;;                  1    wreg      void 
  3447 ;; Registers used:
  3448 ;;		wreg
  3449 ;; Tracked objects:
  3450 ;;		On entry : 0/0
  3451 ;;		On exit  : 0/0
  3452 ;;		Unchanged: 0/0
  3453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3454 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3455 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3456 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3457 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3458 ;;Total ram usage:        1 bytes
  3459 ;; Hardware stack levels used: 1
  3460 ;; This function calls:
  3461 ;;		Nothing
  3462 ;; This function is called by:
  3463 ;;		_sendStringSerial4
  3464 ;; This function uses a non-reentrant model
  3465 ;;
  3466                           
  3467                           	psect	text19
  3468  00201A                     __ptext19:
  3469                           	callstack 0
  3470  00201A                     _sendCharSerial4:
  3471                           	callstack 28
  3472                           
  3473                           ;incstack = 0
  3474                           ;sendCharSerial4@charToSend stored from wreg
  3475  00201A  6E01               	movwf	sendCharSerial4@charToSend^0,c
  3476  00201C                     l299:
  3477  00201C  010E               	movlb	14	; () banked
  3478  00201E  A537               	btfss	55,2,b	;volatile
  3479  002020  EF14  F010         	goto	u1251
  3480  002024  EF16  F010         	goto	u1250
  3481  002028                     u1251:
  3482  002028  EF0E  F010         	goto	l299
  3483  00202C                     u1250:
  3484  00202C                     
  3485                           ; BSR set to: 14
  3486                           ;serial.c: 31:     TX4REG = charToSend;
  3487  00202C  C001  FEE4         	movff	sendCharSerial4@charToSend,3812	;volatile
  3488  002030                     
  3489                           ; BSR set to: 14
  3490  002030  0012               	return		;funcret
  3491  002032                     __end_of_sendCharSerial4:
  3492                           	callstack 0
  3493                           
  3494 ;; *************** function _color_click_init *****************
  3495 ;; Defined at:
  3496 ;;		line 9 in file "color.c"
  3497 ;; Parameters:    Size  Location     Type
  3498 ;;		None
  3499 ;; Auto vars:     Size  Location     Type
  3500 ;;		None
  3501 ;; Return value:  Size  Location     Type
  3502 ;;                  1    wreg      void 
  3503 ;; Registers used:
  3504 ;;		wreg, status,2, status,0, cstack
  3505 ;; Tracked objects:
  3506 ;;		On entry : 0/0
  3507 ;;		On exit  : 0/0
  3508 ;;		Unchanged: 0/0
  3509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3510 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3511 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3512 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3513 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3514 ;;Total ram usage:        1 bytes
  3515 ;; Hardware stack levels used: 1
  3516 ;; Hardware stack levels required when called: 3
  3517 ;; This function calls:
  3518 ;;		_I2C_2_Master_Init
  3519 ;;		_color_writetoaddr
  3520 ;; This function is called by:
  3521 ;;		_main
  3522 ;; This function uses a non-reentrant model
  3523 ;;
  3524                           
  3525                           	psect	text20
  3526  001E48                     __ptext20:
  3527                           	callstack 0
  3528  001E48                     _color_click_init:
  3529                           	callstack 27
  3530  001E48                     
  3531                           ;color.c: 12:     I2C_2_Master_Init();;color.c: 12:     I2C_2_Master_Init();
  3532  001E48  ECC5  F00F         	call	_I2C_2_Master_Init	;wreg free
  3533  001E4C                     
  3534                           ;color.c: 15:   color_writetoaddr(0x00, 0x01);;color.c: 15:   color_writetoaddr(0x00, 0x
      +                          01);
  3535  001E4C  0E01               	movlw	1
  3536  001E4E  6E03               	movwf	color_writetoaddr@value^0,c
  3537  001E50  0E00               	movlw	0
  3538  001E52  ECEE  F00F         	call	_color_writetoaddr
  3539  001E56                     
  3540                           ;color.c: 16:     _delay((unsigned long)((3)*(64000000/4000.0)));;color.c: 16:     _dela
      +                          y((unsigned long)((3)*(64000000/4000.0)));
  3541  001E56  0E3F               	movlw	63
  3542  001E58  6E05               	movwf	??_color_click_init^0,c
  3543  001E5A  0E55               	movlw	85
  3544  001E5C                     u1427:
  3545  001E5C  2EE8               	decfsz	wreg,f,c
  3546  001E5E  D7FE               	bra	u1427
  3547  001E60  2E05               	decfsz	??_color_click_init^0,f,c
  3548  001E62  D7FC               	bra	u1427
  3549  001E64  F000               	nop	
  3550  001E66                     
  3551                           ;color.c: 19:  color_writetoaddr(0x00, 0x03);;color.c: 19:  color_writetoaddr(0x00, 0x03
      +                          );
  3552  001E66  0E03               	movlw	3
  3553  001E68  6E03               	movwf	color_writetoaddr@value^0,c
  3554  001E6A  0E00               	movlw	0
  3555  001E6C  ECEE  F00F         	call	_color_writetoaddr
  3556  001E70                     
  3557                           ;color.c: 22:  color_writetoaddr(0x01, 0xD5);;color.c: 22:  color_writetoaddr(0x01, 0xD5
      +                          );
  3558  001E70  0ED5               	movlw	213
  3559  001E72  6E03               	movwf	color_writetoaddr@value^0,c
  3560  001E74  0E01               	movlw	1
  3561  001E76  ECEE  F00F         	call	_color_writetoaddr
  3562  001E7A  0012               	return		;funcret
  3563  001E7C                     __end_of_color_click_init:
  3564                           	callstack 0
  3565                           
  3566 ;; *************** function _color_writetoaddr *****************
  3567 ;; Defined at:
  3568 ;;		line 25 in file "color.c"
  3569 ;; Parameters:    Size  Location     Type
  3570 ;;  address         1    wreg     unsigned char 
  3571 ;;  value           1    2[COMRAM] unsigned char 
  3572 ;; Auto vars:     Size  Location     Type
  3573 ;;  address         1    3[COMRAM] unsigned char 
  3574 ;; Return value:  Size  Location     Type
  3575 ;;                  1    wreg      void 
  3576 ;; Registers used:
  3577 ;;		wreg, status,2, status,0, cstack
  3578 ;; Tracked objects:
  3579 ;;		On entry : 0/0
  3580 ;;		On exit  : 0/0
  3581 ;;		Unchanged: 0/0
  3582 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3583 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3584 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3585 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3586 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3587 ;;Total ram usage:        2 bytes
  3588 ;; Hardware stack levels used: 1
  3589 ;; Hardware stack levels required when called: 2
  3590 ;; This function calls:
  3591 ;;		_I2C_2_Master_Start
  3592 ;;		_I2C_2_Master_Stop
  3593 ;;		_I2C_2_Master_Write
  3594 ;; This function is called by:
  3595 ;;		_color_click_init
  3596 ;; This function uses a non-reentrant model
  3597 ;;
  3598                           
  3599                           	psect	text21
  3600  001FDC                     __ptext21:
  3601                           	callstack 0
  3602  001FDC                     _color_writetoaddr:
  3603                           	callstack 27
  3604                           
  3605                           ;incstack = 0
  3606                           ;color_writetoaddr@address stored from wreg
  3607  001FDC  6E04               	movwf	color_writetoaddr@address^0,c
  3608  001FDE                     
  3609                           ;color.c: 26:     I2C_2_Master_Start();;color.c: 26:     I2C_2_Master_Start();
  3610  001FDE  EC24  F010         	call	_I2C_2_Master_Start	;wreg free
  3611                           
  3612                           ;color.c: 27:     I2C_2_Master_Write(0x52 | 0x00);;color.c: 27:     I2C_2_Master_Write(0
      +                          x52 | 0x00);
  3613  001FE2  0E52               	movlw	82
  3614  001FE4  EC19  F010         	call	_I2C_2_Master_Write
  3615                           
  3616                           ;color.c: 28:     I2C_2_Master_Write(0x80 | address);;color.c: 28:     I2C_2_Master_Writ
      +                          e(0x80 | address);
  3617  001FE8  5004               	movf	color_writetoaddr@address^0,w,c
  3618  001FEA  0980               	iorlw	128
  3619  001FEC  EC19  F010         	call	_I2C_2_Master_Write
  3620                           
  3621                           ;color.c: 29:     I2C_2_Master_Write(value);;color.c: 29:     I2C_2_Master_Write(value);
  3622  001FF0  5003               	movf	color_writetoaddr@value^0,w,c
  3623  001FF2  EC19  F010         	call	_I2C_2_Master_Write
  3624                           
  3625                           ;color.c: 30:     I2C_2_Master_Stop();;color.c: 30:     I2C_2_Master_Stop();
  3626  001FF6  EC1F  F010         	call	_I2C_2_Master_Stop	;wreg free
  3627  001FFA  0012               	return		;funcret
  3628  001FFC                     __end_of_color_writetoaddr:
  3629                           	callstack 0
  3630                           
  3631 ;; *************** function _I2C_2_Master_Init *****************
  3632 ;; Defined at:
  3633 ;;		line 4 in file "i2c.c"
  3634 ;; Parameters:    Size  Location     Type
  3635 ;;		None
  3636 ;; Auto vars:     Size  Location     Type
  3637 ;;		None
  3638 ;; Return value:  Size  Location     Type
  3639 ;;                  1    wreg      void 
  3640 ;; Registers used:
  3641 ;;		wreg, status,2
  3642 ;; Tracked objects:
  3643 ;;		On entry : 0/0
  3644 ;;		On exit  : 0/0
  3645 ;;		Unchanged: 0/0
  3646 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3647 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3648 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3649 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3650 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3651 ;;Total ram usage:        0 bytes
  3652 ;; Hardware stack levels used: 1
  3653 ;; This function calls:
  3654 ;;		Nothing
  3655 ;; This function is called by:
  3656 ;;		_color_click_init
  3657 ;;		_main
  3658 ;; This function uses a non-reentrant model
  3659 ;;
  3660                           
  3661                           	psect	text22
  3662  001F8A                     __ptext22:
  3663                           	callstack 0
  3664  001F8A                     _I2C_2_Master_Init:
  3665                           	callstack 29
  3666  001F8A                     
  3667                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  3668  001F8A  010E               	movlb	14	; () banked
  3669  001F8C  51D9               	movf	217,w,b	;volatile
  3670  001F8E  0BF0               	andlw	-16
  3671  001F90  0908               	iorlw	8
  3672  001F92  6FD9               	movwf	217,b	;volatile
  3673  001F94                     
  3674                           ; BSR set to: 14
  3675                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  3676  001F94  8BD9               	bsf	217,5,b	;volatile
  3677                           
  3678                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;;i2c.c: 9:   SSP2ADD = (64000000/(4*10000
      +                          0))-1;
  3679  001F96  0E9F               	movlw	159
  3680  001F98  6FD6               	movwf	214,b	;volatile
  3681  001F9A                     
  3682                           ; BSR set to: 14
  3683                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  3684  001F9A  8A84               	bsf	132,5,c	;volatile
  3685  001F9C                     
  3686                           ; BSR set to: 14
  3687                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  3688  001F9C  8C84               	bsf	132,6,c	;volatile
  3689  001F9E                     
  3690                           ; BSR set to: 14
  3691                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  3692  001F9E  9BA7               	bcf	167,5,b	;volatile
  3693  001FA0                     
  3694                           ; BSR set to: 14
  3695                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  3696  001FA0  9DA7               	bcf	167,6,b	;volatile
  3697                           
  3698                           ;i2c.c: 16:   SSP2DATPPS=0x1D;;i2c.c: 16:   SSP2DATPPS=0x1D;
  3699  001FA2  0E1D               	movlw	29
  3700  001FA4  6F1D               	movwf	29,b	;volatile
  3701                           
  3702                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;;i2c.c: 17:   SSP2CLKPPS=0x1E;
  3703  001FA6  0E1E               	movlw	30
  3704  001FA8  6F1C               	movwf	28,b	;volatile
  3705                           
  3706                           ;i2c.c: 18:   RD5PPS=0x1C;;i2c.c: 18:   RD5PPS=0x1C;
  3707  001FAA  0E1C               	movlw	28
  3708  001FAC  6F6F               	movwf	111,b	;volatile
  3709                           
  3710                           ;i2c.c: 19:   RD6PPS=0x1B;;i2c.c: 19:   RD6PPS=0x1B;
  3711  001FAE  0E1B               	movlw	27
  3712  001FB0  6F70               	movwf	112,b	;volatile
  3713  001FB2                     
  3714                           ; BSR set to: 14
  3715  001FB2  0012               	return		;funcret
  3716  001FB4                     __end_of_I2C_2_Master_Init:
  3717                           	callstack 0
  3718                           
  3719 ;; *************** function _LED_R *****************
  3720 ;; Defined at:
  3721 ;;		line 98 in file "color.c"
  3722 ;; Parameters:    Size  Location     Type
  3723 ;;  m               2   13[COMRAM] PTR struct color_rgb
  3724 ;;		 -> main@rgb(8), 
  3725 ;; Auto vars:     Size  Location     Type
  3726 ;;		None
  3727 ;; Return value:  Size  Location     Type
  3728 ;;                  1    wreg      void 
  3729 ;; Registers used:
  3730 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3731 ;; Tracked objects:
  3732 ;;		On entry : 0/0
  3733 ;;		On exit  : 0/0
  3734 ;;		Unchanged: 0/0
  3735 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3736 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3737 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3738 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3739 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3740 ;;Total ram usage:        4 bytes
  3741 ;; Hardware stack levels used: 1
  3742 ;; Hardware stack levels required when called: 4
  3743 ;; This function calls:
  3744 ;;		_get_color
  3745 ;; This function is called by:
  3746 ;;		_main
  3747 ;; This function uses a non-reentrant model
  3748 ;;
  3749                           
  3750                           	psect	text23
  3751  001EDA                     __ptext23:
  3752                           	callstack 0
  3753  001EDA                     _LED_R:
  3754                           	callstack 26
  3755  001EDA                     
  3756                           ;color.c: 98: void LED_R(struct color_rgb *m);color.c: 98: void LED_R(struct color_rgb *
      +                          m);color.c: 99: {;color.c: 99: {;color.c: 100:     LATGbits.LATG1 = 1;;color.c: 100:    
      +                           LATGbits.LATG1 = 1;
  3757  001EDA  827F               	bsf	127,1,c	;volatile
  3758                           
  3759                           ;color.c: 101:     LATFbits.LATF7 = 0;;color.c: 101:     LATFbits.LATF7 = 0;
  3760  001EDC  9E7E               	bcf	126,7,c	;volatile
  3761                           
  3762                           ;color.c: 102:     LATAbits.LATA4 = 0;;color.c: 102:     LATAbits.LATA4 = 0;
  3763  001EDE  9879               	bcf	121,4,c	;volatile
  3764  001EE0                     
  3765                           ;color.c: 103:     _delay((unsigned long)((200)*(64000000/4000.0)));;color.c: 103:     _
      +                          delay((unsigned long)((200)*(64000000/4000.0)));
  3766  001EE0  0E11               	movlw	17
  3767  001EE2  6E11               	movwf	(??_LED_R+1)^0,c
  3768  001EE4  0E3C               	movlw	60
  3769  001EE6  6E10               	movwf	??_LED_R^0,c
  3770  001EE8  0ECB               	movlw	203
  3771  001EEA                     u1437:
  3772  001EEA  2EE8               	decfsz	wreg,f,c
  3773  001EEC  D7FE               	bra	u1437
  3774  001EEE  2E10               	decfsz	??_LED_R^0,f,c
  3775  001EF0  D7FC               	bra	u1437
  3776  001EF2  2E11               	decfsz	(??_LED_R+1)^0,f,c
  3777  001EF4  D7FA               	bra	u1437
  3778  001EF6  F000               	nop	
  3779  001EF8                     
  3780                           ;color.c: 104:     get_color(m);;color.c: 104:     get_color(m);
  3781  001EF8  C00E  F00C         	movff	LED_R@m,get_color@m
  3782  001EFC  C00F  F00D         	movff	LED_R@m+1,get_color@m+1
  3783  001F00  EC6D  F00D         	call	_get_color	;wreg free
  3784  001F04  0012               	return		;funcret
  3785  001F06                     __end_of_LED_R:
  3786                           	callstack 0
  3787                           
  3788 ;; *************** function _LED_G *****************
  3789 ;; Defined at:
  3790 ;;		line 125 in file "color.c"
  3791 ;; Parameters:    Size  Location     Type
  3792 ;;  m               2   13[COMRAM] PTR struct color_rgb
  3793 ;;		 -> main@rgb(8), 
  3794 ;; Auto vars:     Size  Location     Type
  3795 ;;		None
  3796 ;; Return value:  Size  Location     Type
  3797 ;;                  1    wreg      void 
  3798 ;; Registers used:
  3799 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3800 ;; Tracked objects:
  3801 ;;		On entry : 0/0
  3802 ;;		On exit  : 0/0
  3803 ;;		Unchanged: 0/0
  3804 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3805 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3806 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3807 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3808 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3809 ;;Total ram usage:        4 bytes
  3810 ;; Hardware stack levels used: 1
  3811 ;; Hardware stack levels required when called: 4
  3812 ;; This function calls:
  3813 ;;		_get_color
  3814 ;; This function is called by:
  3815 ;;		_main
  3816 ;; This function uses a non-reentrant model
  3817 ;;
  3818                           
  3819                           	psect	text24
  3820  001F06                     __ptext24:
  3821                           	callstack 0
  3822  001F06                     _LED_G:
  3823                           	callstack 26
  3824  001F06                     
  3825                           ;color.c: 125: void LED_G(struct color_rgb *m);color.c: 125: void LED_G(struct color_rgb
      +                           *m);color.c: 126: {;color.c: 126: {;color.c: 127:     LATGbits.LATG1 = 0;;color.c: 127:
      +                               LATGbits.LATG1 = 0;
  3826  001F06  927F               	bcf	127,1,c	;volatile
  3827                           
  3828                           ;color.c: 128:     LATFbits.LATF7 = 0;;color.c: 128:     LATFbits.LATF7 = 0;
  3829  001F08  9E7E               	bcf	126,7,c	;volatile
  3830                           
  3831                           ;color.c: 129:     LATAbits.LATA4 = 1;;color.c: 129:     LATAbits.LATA4 = 1;
  3832  001F0A  8879               	bsf	121,4,c	;volatile
  3833  001F0C                     
  3834                           ;color.c: 130:     _delay((unsigned long)((200)*(64000000/4000.0)));;color.c: 130:     _
      +                          delay((unsigned long)((200)*(64000000/4000.0)));
  3835  001F0C  0E11               	movlw	17
  3836  001F0E  6E11               	movwf	(??_LED_G+1)^0,c
  3837  001F10  0E3C               	movlw	60
  3838  001F12  6E10               	movwf	??_LED_G^0,c
  3839  001F14  0ECB               	movlw	203
  3840  001F16                     u1447:
  3841  001F16  2EE8               	decfsz	wreg,f,c
  3842  001F18  D7FE               	bra	u1447
  3843  001F1A  2E10               	decfsz	??_LED_G^0,f,c
  3844  001F1C  D7FC               	bra	u1447
  3845  001F1E  2E11               	decfsz	(??_LED_G+1)^0,f,c
  3846  001F20  D7FA               	bra	u1447
  3847  001F22  F000               	nop	
  3848  001F24                     
  3849                           ;color.c: 131:     get_color(m);;color.c: 131:     get_color(m);
  3850  001F24  C00E  F00C         	movff	LED_G@m,get_color@m
  3851  001F28  C00F  F00D         	movff	LED_G@m+1,get_color@m+1
  3852  001F2C  EC6D  F00D         	call	_get_color	;wreg free
  3853  001F30  0012               	return		;funcret
  3854  001F32                     __end_of_LED_G:
  3855                           	callstack 0
  3856                           
  3857 ;; *************** function _LED_C *****************
  3858 ;; Defined at:
  3859 ;;		line 107 in file "color.c"
  3860 ;; Parameters:    Size  Location     Type
  3861 ;;  m               2   13[COMRAM] PTR struct color_rgb
  3862 ;;		 -> main@rgb(8), 
  3863 ;; Auto vars:     Size  Location     Type
  3864 ;;		None
  3865 ;; Return value:  Size  Location     Type
  3866 ;;                  1    wreg      void 
  3867 ;; Registers used:
  3868 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3869 ;; Tracked objects:
  3870 ;;		On entry : 0/0
  3871 ;;		On exit  : 0/0
  3872 ;;		Unchanged: 0/0
  3873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3874 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3875 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3876 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3877 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3878 ;;Total ram usage:        4 bytes
  3879 ;; Hardware stack levels used: 1
  3880 ;; Hardware stack levels required when called: 4
  3881 ;; This function calls:
  3882 ;;		_get_color
  3883 ;; This function is called by:
  3884 ;;		_main
  3885 ;; This function uses a non-reentrant model
  3886 ;;
  3887                           
  3888                           	psect	text25
  3889  001F32                     __ptext25:
  3890                           	callstack 0
  3891  001F32                     _LED_C:
  3892                           	callstack 26
  3893  001F32                     
  3894                           ;color.c: 107: void LED_C(struct color_rgb *m);color.c: 107: void LED_C(struct color_rgb
      +                           *m);color.c: 108: {;color.c: 108: {;color.c: 109:     LATGbits.LATG1 = 1;;color.c: 109:
      +                               LATGbits.LATG1 = 1;
  3895  001F32  827F               	bsf	127,1,c	;volatile
  3896                           
  3897                           ;color.c: 110:     LATFbits.LATF7 = 1;;color.c: 110:     LATFbits.LATF7 = 1;
  3898  001F34  8E7E               	bsf	126,7,c	;volatile
  3899                           
  3900                           ;color.c: 111:     LATAbits.LATA4 = 1;;color.c: 111:     LATAbits.LATA4 = 1;
  3901  001F36  8879               	bsf	121,4,c	;volatile
  3902  001F38                     
  3903                           ;color.c: 112:     _delay((unsigned long)((200)*(64000000/4000.0)));;color.c: 112:     _
      +                          delay((unsigned long)((200)*(64000000/4000.0)));
  3904  001F38  0E11               	movlw	17
  3905  001F3A  6E11               	movwf	(??_LED_C+1)^0,c
  3906  001F3C  0E3C               	movlw	60
  3907  001F3E  6E10               	movwf	??_LED_C^0,c
  3908  001F40  0ECB               	movlw	203
  3909  001F42                     u1457:
  3910  001F42  2EE8               	decfsz	wreg,f,c
  3911  001F44  D7FE               	bra	u1457
  3912  001F46  2E10               	decfsz	??_LED_C^0,f,c
  3913  001F48  D7FC               	bra	u1457
  3914  001F4A  2E11               	decfsz	(??_LED_C+1)^0,f,c
  3915  001F4C  D7FA               	bra	u1457
  3916  001F4E  F000               	nop	
  3917  001F50                     
  3918                           ;color.c: 113:     get_color(m);;color.c: 113:     get_color(m);
  3919  001F50  C00E  F00C         	movff	LED_C@m,get_color@m
  3920  001F54  C00F  F00D         	movff	LED_C@m+1,get_color@m+1
  3921  001F58  EC6D  F00D         	call	_get_color	;wreg free
  3922  001F5C  0012               	return		;funcret
  3923  001F5E                     __end_of_LED_C:
  3924                           	callstack 0
  3925                           
  3926 ;; *************** function _LED_B *****************
  3927 ;; Defined at:
  3928 ;;		line 116 in file "color.c"
  3929 ;; Parameters:    Size  Location     Type
  3930 ;;  m               2   13[COMRAM] PTR struct color_rgb
  3931 ;;		 -> main@rgb(8), 
  3932 ;; Auto vars:     Size  Location     Type
  3933 ;;		None
  3934 ;; Return value:  Size  Location     Type
  3935 ;;                  1    wreg      void 
  3936 ;; Registers used:
  3937 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3938 ;; Tracked objects:
  3939 ;;		On entry : 0/0
  3940 ;;		On exit  : 0/0
  3941 ;;		Unchanged: 0/0
  3942 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3943 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3944 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3945 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3946 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3947 ;;Total ram usage:        4 bytes
  3948 ;; Hardware stack levels used: 1
  3949 ;; Hardware stack levels required when called: 4
  3950 ;; This function calls:
  3951 ;;		_get_color
  3952 ;; This function is called by:
  3953 ;;		_main
  3954 ;; This function uses a non-reentrant model
  3955 ;;
  3956                           
  3957                           	psect	text26
  3958  001F5E                     __ptext26:
  3959                           	callstack 0
  3960  001F5E                     _LED_B:
  3961                           	callstack 26
  3962  001F5E                     
  3963                           ;color.c: 116: void LED_B(struct color_rgb *m);color.c: 116: void LED_B(struct color_rgb
      +                           *m);color.c: 117: {;color.c: 117: {;color.c: 118:     LATGbits.LATG1 = 0;;color.c: 118:
      +                               LATGbits.LATG1 = 0;
  3964  001F5E  927F               	bcf	127,1,c	;volatile
  3965                           
  3966                           ;color.c: 119:     LATFbits.LATF7 = 1;;color.c: 119:     LATFbits.LATF7 = 1;
  3967  001F60  8E7E               	bsf	126,7,c	;volatile
  3968                           
  3969                           ;color.c: 120:     LATAbits.LATA4 = 0;;color.c: 120:     LATAbits.LATA4 = 0;
  3970  001F62  9879               	bcf	121,4,c	;volatile
  3971  001F64                     
  3972                           ;color.c: 121:     _delay((unsigned long)((200)*(64000000/4000.0)));;color.c: 121:     _
      +                          delay((unsigned long)((200)*(64000000/4000.0)));
  3973  001F64  0E11               	movlw	17
  3974  001F66  6E11               	movwf	(??_LED_B+1)^0,c
  3975  001F68  0E3C               	movlw	60
  3976  001F6A  6E10               	movwf	??_LED_B^0,c
  3977  001F6C  0ECB               	movlw	203
  3978  001F6E                     u1467:
  3979  001F6E  2EE8               	decfsz	wreg,f,c
  3980  001F70  D7FE               	bra	u1467
  3981  001F72  2E10               	decfsz	??_LED_B^0,f,c
  3982  001F74  D7FC               	bra	u1467
  3983  001F76  2E11               	decfsz	(??_LED_B+1)^0,f,c
  3984  001F78  D7FA               	bra	u1467
  3985  001F7A  F000               	nop	
  3986  001F7C                     
  3987                           ;color.c: 122:     get_color(m);;color.c: 122:     get_color(m);
  3988  001F7C  C00E  F00C         	movff	LED_B@m,get_color@m
  3989  001F80  C00F  F00D         	movff	LED_B@m+1,get_color@m+1
  3990  001F84  EC6D  F00D         	call	_get_color	;wreg free
  3991  001F88  0012               	return		;funcret
  3992  001F8A                     __end_of_LED_B:
  3993                           	callstack 0
  3994                           
  3995 ;; *************** function _get_color *****************
  3996 ;; Defined at:
  3997 ;;		line 89 in file "color.c"
  3998 ;; Parameters:    Size  Location     Type
  3999 ;;  m               2   11[COMRAM] PTR struct color_rgb
  4000 ;;		 -> main@rgb(8), 
  4001 ;; Auto vars:     Size  Location     Type
  4002 ;;		None
  4003 ;; Return value:  Size  Location     Type
  4004 ;;                  1    wreg      void 
  4005 ;; Registers used:
  4006 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4007 ;; Tracked objects:
  4008 ;;		On entry : 0/0
  4009 ;;		On exit  : 0/0
  4010 ;;		Unchanged: 0/0
  4011 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4012 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4013 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4014 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4015 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4016 ;;Total ram usage:        2 bytes
  4017 ;; Hardware stack levels used: 1
  4018 ;; Hardware stack levels required when called: 3
  4019 ;; This function calls:
  4020 ;;		_color_read_Blue
  4021 ;;		_color_read_Clear
  4022 ;;		_color_read_Green
  4023 ;;		_color_read_Red
  4024 ;; This function is called by:
  4025 ;;		_LED_R
  4026 ;;		_LED_C
  4027 ;;		_LED_B
  4028 ;;		_LED_G
  4029 ;; This function uses a non-reentrant model
  4030 ;;
  4031                           
  4032                           	psect	text27
  4033  001ADA                     __ptext27:
  4034                           	callstack 0
  4035  001ADA                     _get_color:
  4036                           	callstack 26
  4037  001ADA                     
  4038                           ;color.c: 89: void get_color (struct color_rgb *m);color.c: 89: void get_color (struct c
      +                          olor_rgb *m);color.c: 90: {;color.c: 90: {;color.c: 91:     m->R = color_read_Red();;col
      +                          or.c: 91:     m->R = color_read_Red();
  4039  001ADA  ECC5  F00D         	call	_color_read_Red	;wreg free
  4040  001ADE  C00C  FFD9         	movff	get_color@m,fsr2l
  4041  001AE2  C00D  FFDA         	movff	get_color@m+1,fsr2h
  4042  001AE6  C005  FFDE         	movff	?_color_read_Red,postinc2
  4043  001AEA  C006  FFDD         	movff	?_color_read_Red+1,postdec2
  4044                           
  4045                           ;color.c: 92:     m->B = color_read_Blue();;color.c: 92:     m->B = color_read_Blue();
  4046  001AEE  EC3D  F00E         	call	_color_read_Blue	;wreg free
  4047  001AF2  EE20 F004          	lfsr	2,4
  4048  001AF6  500C               	movf	get_color@m^0,w,c
  4049  001AF8  26D9               	addwf	fsr2l,f,c
  4050  001AFA  500D               	movf	(get_color@m+1)^0,w,c
  4051  001AFC  22DA               	addwfc	fsr2h,f,c
  4052  001AFE  C005  FFDE         	movff	?_color_read_Blue,postinc2
  4053  001B02  C006  FFDD         	movff	?_color_read_Blue+1,postdec2
  4054                           
  4055                           ;color.c: 93:     m->G = color_read_Green();;color.c: 93:     m->G = color_read_Green();
  4056  001B06  ECED  F00D         	call	_color_read_Green	;wreg free
  4057  001B0A  EE20 F002          	lfsr	2,2
  4058  001B0E  500C               	movf	get_color@m^0,w,c
  4059  001B10  26D9               	addwf	fsr2l,f,c
  4060  001B12  500D               	movf	(get_color@m+1)^0,w,c
  4061  001B14  22DA               	addwfc	fsr2h,f,c
  4062  001B16  C005  FFDE         	movff	?_color_read_Green,postinc2
  4063  001B1A  C006  FFDD         	movff	?_color_read_Green+1,postdec2
  4064                           
  4065                           ;color.c: 94:     m->C = color_read_Clear();;color.c: 94:     m->C = color_read_Clear();
  4066  001B1E  EC15  F00E         	call	_color_read_Clear	;wreg free
  4067  001B22  EE20 F006          	lfsr	2,6
  4068  001B26  500C               	movf	get_color@m^0,w,c
  4069  001B28  26D9               	addwf	fsr2l,f,c
  4070  001B2A  500D               	movf	(get_color@m+1)^0,w,c
  4071  001B2C  22DA               	addwfc	fsr2h,f,c
  4072  001B2E  C005  FFDE         	movff	?_color_read_Clear,postinc2
  4073  001B32  C006  FFDD         	movff	?_color_read_Clear+1,postdec2
  4074  001B36  0012               	return		;funcret
  4075  001B38                     __end_of_get_color:
  4076                           	callstack 0
  4077                           
  4078 ;; *************** function _color_read_Red *****************
  4079 ;; Defined at:
  4080 ;;		line 33 in file "color.c"
  4081 ;; Parameters:    Size  Location     Type
  4082 ;;		None
  4083 ;; Auto vars:     Size  Location     Type
  4084 ;;  tmp             2    9[COMRAM] unsigned int 
  4085 ;; Return value:  Size  Location     Type
  4086 ;;                  2    4[COMRAM] unsigned int 
  4087 ;; Registers used:
  4088 ;;		wreg, status,2, status,0, cstack
  4089 ;; Tracked objects:
  4090 ;;		On entry : 0/0
  4091 ;;		On exit  : 0/0
  4092 ;;		Unchanged: 0/0
  4093 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4094 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4095 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4096 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4097 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4098 ;;Total ram usage:        7 bytes
  4099 ;; Hardware stack levels used: 1
  4100 ;; Hardware stack levels required when called: 2
  4101 ;; This function calls:
  4102 ;;		_I2C_2_Master_Read
  4103 ;;		_I2C_2_Master_RepStart
  4104 ;;		_I2C_2_Master_Start
  4105 ;;		_I2C_2_Master_Stop
  4106 ;;		_I2C_2_Master_Write
  4107 ;; This function is called by:
  4108 ;;		_get_color
  4109 ;; This function uses a non-reentrant model
  4110 ;;
  4111                           
  4112                           	psect	text28
  4113  001B8A                     __ptext28:
  4114                           	callstack 0
  4115  001B8A                     _color_read_Red:
  4116                           	callstack 26
  4117  001B8A                     
  4118                           ;color.c: 35:  unsigned int tmp;;color.c: 35:  unsigned int tmp;;color.c: 36:  I2C_2_Mas
      +                          ter_Start();;color.c: 36:  I2C_2_Master_Start();
  4119  001B8A  EC24  F010         	call	_I2C_2_Master_Start	;wreg free
  4120                           
  4121                           ;color.c: 37:  I2C_2_Master_Write(0x52 | 0x00);;color.c: 37:  I2C_2_Master_Write(0x52 | 
      +                          0x00);
  4122  001B8E  0E52               	movlw	82
  4123  001B90  EC19  F010         	call	_I2C_2_Master_Write
  4124                           
  4125                           ;color.c: 38:  I2C_2_Master_Write(0xA0 | 0x16);;color.c: 38:  I2C_2_Master_Write(0xA0 | 
      +                          0x16);
  4126  001B94  0EB6               	movlw	182
  4127  001B96  EC19  F010         	call	_I2C_2_Master_Write
  4128                           
  4129                           ;color.c: 39:  I2C_2_Master_RepStart();;color.c: 39:  I2C_2_Master_RepStart();
  4130  001B9A  EC29  F010         	call	_I2C_2_Master_RepStart	;wreg free
  4131                           
  4132                           ;color.c: 40:  I2C_2_Master_Write(0x52 | 0x01);;color.c: 40:  I2C_2_Master_Write(0x52 | 
      +                          0x01);
  4133  001B9E  0E53               	movlw	83
  4134  001BA0  EC19  F010         	call	_I2C_2_Master_Write
  4135                           
  4136                           ;color.c: 41:  tmp=I2C_2_Master_Read(1);;color.c: 41:  tmp=I2C_2_Master_Read(1);
  4137  001BA4  0E01               	movlw	1
  4138  001BA6  ECA8  F00E         	call	_I2C_2_Master_Read
  4139  001BAA  6E07               	movwf	??_color_read_Red^0,c
  4140  001BAC  5007               	movf	??_color_read_Red^0,w,c
  4141  001BAE  6E0A               	movwf	color_read_Red@tmp^0,c
  4142  001BB0  6A0B               	clrf	(color_read_Red@tmp+1)^0,c
  4143                           
  4144                           ;color.c: 42:  tmp=tmp | (I2C_2_Master_Read(0)<<8);;color.c: 42:  tmp=tmp | (I2C_2_Maste
      +                          r_Read(0)<<8);
  4145  001BB2  0E00               	movlw	0
  4146  001BB4  ECA8  F00E         	call	_I2C_2_Master_Read
  4147  001BB8  6E07               	movwf	??_color_read_Red^0,c
  4148  001BBA  5007               	movf	??_color_read_Red^0,w,c
  4149  001BBC  6E09               	movwf	(??_color_read_Red+2)^0,c
  4150  001BBE  6A08               	clrf	(??_color_read_Red+1)^0,c
  4151  001BC0  500A               	movf	color_read_Red@tmp^0,w,c
  4152  001BC2  1008               	iorwf	(??_color_read_Red+1)^0,w,c
  4153  001BC4  6E0A               	movwf	color_read_Red@tmp^0,c
  4154  001BC6  500B               	movf	(color_read_Red@tmp+1)^0,w,c
  4155  001BC8  1009               	iorwf	(??_color_read_Red+2)^0,w,c
  4156  001BCA  6E0B               	movwf	(color_read_Red@tmp+1)^0,c
  4157                           
  4158                           ;color.c: 43:  I2C_2_Master_Stop();;color.c: 43:  I2C_2_Master_Stop();
  4159  001BCC  EC1F  F010         	call	_I2C_2_Master_Stop	;wreg free
  4160  001BD0                     
  4161                           ;color.c: 44:  return tmp;;color.c: 44:  return tmp;
  4162  001BD0  C00A  F005         	movff	color_read_Red@tmp,?_color_read_Red
  4163  001BD4  C00B  F006         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  4164  001BD8  0012               	return		;funcret
  4165  001BDA                     __end_of_color_read_Red:
  4166                           	callstack 0
  4167                           
  4168 ;; *************** function _color_read_Green *****************
  4169 ;; Defined at:
  4170 ;;		line 61 in file "color.c"
  4171 ;; Parameters:    Size  Location     Type
  4172 ;;		None
  4173 ;; Auto vars:     Size  Location     Type
  4174 ;;  tmp             2    9[COMRAM] unsigned int 
  4175 ;; Return value:  Size  Location     Type
  4176 ;;                  2    4[COMRAM] unsigned int 
  4177 ;; Registers used:
  4178 ;;		wreg, status,2, status,0, cstack
  4179 ;; Tracked objects:
  4180 ;;		On entry : 0/0
  4181 ;;		On exit  : 0/0
  4182 ;;		Unchanged: 0/0
  4183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4184 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4185 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4186 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4187 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4188 ;;Total ram usage:        7 bytes
  4189 ;; Hardware stack levels used: 1
  4190 ;; Hardware stack levels required when called: 2
  4191 ;; This function calls:
  4192 ;;		_I2C_2_Master_Read
  4193 ;;		_I2C_2_Master_RepStart
  4194 ;;		_I2C_2_Master_Start
  4195 ;;		_I2C_2_Master_Stop
  4196 ;;		_I2C_2_Master_Write
  4197 ;; This function is called by:
  4198 ;;		_get_color
  4199 ;; This function uses a non-reentrant model
  4200 ;;
  4201                           
  4202                           	psect	text29
  4203  001BDA                     __ptext29:
  4204                           	callstack 0
  4205  001BDA                     _color_read_Green:
  4206                           	callstack 26
  4207  001BDA                     
  4208                           ;color.c: 63:  unsigned int tmp;;color.c: 63:  unsigned int tmp;;color.c: 64:  I2C_2_Mas
      +                          ter_Start();;color.c: 64:  I2C_2_Master_Start();
  4209  001BDA  EC24  F010         	call	_I2C_2_Master_Start	;wreg free
  4210                           
  4211                           ;color.c: 65:  I2C_2_Master_Write(0x52 | 0x00);;color.c: 65:  I2C_2_Master_Write(0x52 | 
      +                          0x00);
  4212  001BDE  0E52               	movlw	82
  4213  001BE0  EC19  F010         	call	_I2C_2_Master_Write
  4214                           
  4215                           ;color.c: 66:  I2C_2_Master_Write(0xA0 | 0x18);;color.c: 66:  I2C_2_Master_Write(0xA0 | 
      +                          0x18);
  4216  001BE4  0EB8               	movlw	184
  4217  001BE6  EC19  F010         	call	_I2C_2_Master_Write
  4218                           
  4219                           ;color.c: 67:  I2C_2_Master_RepStart();;color.c: 67:  I2C_2_Master_RepStart();
  4220  001BEA  EC29  F010         	call	_I2C_2_Master_RepStart	;wreg free
  4221                           
  4222                           ;color.c: 68:  I2C_2_Master_Write(0x52 | 0x01);;color.c: 68:  I2C_2_Master_Write(0x52 | 
      +                          0x01);
  4223  001BEE  0E53               	movlw	83
  4224  001BF0  EC19  F010         	call	_I2C_2_Master_Write
  4225                           
  4226                           ;color.c: 69:  tmp=I2C_2_Master_Read(1);;color.c: 69:  tmp=I2C_2_Master_Read(1);
  4227  001BF4  0E01               	movlw	1
  4228  001BF6  ECA8  F00E         	call	_I2C_2_Master_Read
  4229  001BFA  6E07               	movwf	??_color_read_Green^0,c
  4230  001BFC  5007               	movf	??_color_read_Green^0,w,c
  4231  001BFE  6E0A               	movwf	color_read_Green@tmp^0,c
  4232  001C00  6A0B               	clrf	(color_read_Green@tmp+1)^0,c
  4233                           
  4234                           ;color.c: 70:  tmp=tmp | (I2C_2_Master_Read(0)<<8);;color.c: 70:  tmp=tmp | (I2C_2_Maste
      +                          r_Read(0)<<8);
  4235  001C02  0E00               	movlw	0
  4236  001C04  ECA8  F00E         	call	_I2C_2_Master_Read
  4237  001C08  6E07               	movwf	??_color_read_Green^0,c
  4238  001C0A  5007               	movf	??_color_read_Green^0,w,c
  4239  001C0C  6E09               	movwf	(??_color_read_Green+2)^0,c
  4240  001C0E  6A08               	clrf	(??_color_read_Green+1)^0,c
  4241  001C10  500A               	movf	color_read_Green@tmp^0,w,c
  4242  001C12  1008               	iorwf	(??_color_read_Green+1)^0,w,c
  4243  001C14  6E0A               	movwf	color_read_Green@tmp^0,c
  4244  001C16  500B               	movf	(color_read_Green@tmp+1)^0,w,c
  4245  001C18  1009               	iorwf	(??_color_read_Green+2)^0,w,c
  4246  001C1A  6E0B               	movwf	(color_read_Green@tmp+1)^0,c
  4247                           
  4248                           ;color.c: 71:  I2C_2_Master_Stop();;color.c: 71:  I2C_2_Master_Stop();
  4249  001C1C  EC1F  F010         	call	_I2C_2_Master_Stop	;wreg free
  4250  001C20                     
  4251                           ;color.c: 72:  return tmp;;color.c: 72:  return tmp;
  4252  001C20  C00A  F005         	movff	color_read_Green@tmp,?_color_read_Green
  4253  001C24  C00B  F006         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  4254  001C28  0012               	return		;funcret
  4255  001C2A                     __end_of_color_read_Green:
  4256                           	callstack 0
  4257                           
  4258 ;; *************** function _color_read_Clear *****************
  4259 ;; Defined at:
  4260 ;;		line 75 in file "color.c"
  4261 ;; Parameters:    Size  Location     Type
  4262 ;;		None
  4263 ;; Auto vars:     Size  Location     Type
  4264 ;;  tmp             2    9[COMRAM] unsigned int 
  4265 ;; Return value:  Size  Location     Type
  4266 ;;                  2    4[COMRAM] unsigned int 
  4267 ;; Registers used:
  4268 ;;		wreg, status,2, status,0, cstack
  4269 ;; Tracked objects:
  4270 ;;		On entry : 0/0
  4271 ;;		On exit  : 0/0
  4272 ;;		Unchanged: 0/0
  4273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4274 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4275 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4276 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4277 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4278 ;;Total ram usage:        7 bytes
  4279 ;; Hardware stack levels used: 1
  4280 ;; Hardware stack levels required when called: 2
  4281 ;; This function calls:
  4282 ;;		_I2C_2_Master_Read
  4283 ;;		_I2C_2_Master_RepStart
  4284 ;;		_I2C_2_Master_Start
  4285 ;;		_I2C_2_Master_Stop
  4286 ;;		_I2C_2_Master_Write
  4287 ;; This function is called by:
  4288 ;;		_get_color
  4289 ;; This function uses a non-reentrant model
  4290 ;;
  4291                           
  4292                           	psect	text30
  4293  001C2A                     __ptext30:
  4294                           	callstack 0
  4295  001C2A                     _color_read_Clear:
  4296                           	callstack 26
  4297  001C2A                     
  4298                           ;color.c: 77:  unsigned int tmp;;color.c: 77:  unsigned int tmp;;color.c: 78:  I2C_2_Mas
      +                          ter_Start();;color.c: 78:  I2C_2_Master_Start();
  4299  001C2A  EC24  F010         	call	_I2C_2_Master_Start	;wreg free
  4300                           
  4301                           ;color.c: 79:  I2C_2_Master_Write(0x52 | 0x00);;color.c: 79:  I2C_2_Master_Write(0x52 | 
      +                          0x00);
  4302  001C2E  0E52               	movlw	82
  4303  001C30  EC19  F010         	call	_I2C_2_Master_Write
  4304                           
  4305                           ;color.c: 80:  I2C_2_Master_Write(0xA0 | 0x14);;color.c: 80:  I2C_2_Master_Write(0xA0 | 
      +                          0x14);
  4306  001C34  0EB4               	movlw	180
  4307  001C36  EC19  F010         	call	_I2C_2_Master_Write
  4308                           
  4309                           ;color.c: 81:  I2C_2_Master_RepStart();;color.c: 81:  I2C_2_Master_RepStart();
  4310  001C3A  EC29  F010         	call	_I2C_2_Master_RepStart	;wreg free
  4311                           
  4312                           ;color.c: 82:  I2C_2_Master_Write(0x52 | 0x01);;color.c: 82:  I2C_2_Master_Write(0x52 | 
      +                          0x01);
  4313  001C3E  0E53               	movlw	83
  4314  001C40  EC19  F010         	call	_I2C_2_Master_Write
  4315                           
  4316                           ;color.c: 83:  tmp=I2C_2_Master_Read(1);;color.c: 83:  tmp=I2C_2_Master_Read(1);
  4317  001C44  0E01               	movlw	1
  4318  001C46  ECA8  F00E         	call	_I2C_2_Master_Read
  4319  001C4A  6E07               	movwf	??_color_read_Clear^0,c
  4320  001C4C  5007               	movf	??_color_read_Clear^0,w,c
  4321  001C4E  6E0A               	movwf	color_read_Clear@tmp^0,c
  4322  001C50  6A0B               	clrf	(color_read_Clear@tmp+1)^0,c
  4323                           
  4324                           ;color.c: 84:  tmp=tmp | (I2C_2_Master_Read(0)<<8);;color.c: 84:  tmp=tmp | (I2C_2_Maste
      +                          r_Read(0)<<8);
  4325  001C52  0E00               	movlw	0
  4326  001C54  ECA8  F00E         	call	_I2C_2_Master_Read
  4327  001C58  6E07               	movwf	??_color_read_Clear^0,c
  4328  001C5A  5007               	movf	??_color_read_Clear^0,w,c
  4329  001C5C  6E09               	movwf	(??_color_read_Clear+2)^0,c
  4330  001C5E  6A08               	clrf	(??_color_read_Clear+1)^0,c
  4331  001C60  500A               	movf	color_read_Clear@tmp^0,w,c
  4332  001C62  1008               	iorwf	(??_color_read_Clear+1)^0,w,c
  4333  001C64  6E0A               	movwf	color_read_Clear@tmp^0,c
  4334  001C66  500B               	movf	(color_read_Clear@tmp+1)^0,w,c
  4335  001C68  1009               	iorwf	(??_color_read_Clear+2)^0,w,c
  4336  001C6A  6E0B               	movwf	(color_read_Clear@tmp+1)^0,c
  4337                           
  4338                           ;color.c: 85:  I2C_2_Master_Stop();;color.c: 85:  I2C_2_Master_Stop();
  4339  001C6C  EC1F  F010         	call	_I2C_2_Master_Stop	;wreg free
  4340  001C70                     
  4341                           ;color.c: 86:  return tmp;;color.c: 86:  return tmp;
  4342  001C70  C00A  F005         	movff	color_read_Clear@tmp,?_color_read_Clear
  4343  001C74  C00B  F006         	movff	color_read_Clear@tmp+1,?_color_read_Clear+1
  4344  001C78  0012               	return		;funcret
  4345  001C7A                     __end_of_color_read_Clear:
  4346                           	callstack 0
  4347                           
  4348 ;; *************** function _color_read_Blue *****************
  4349 ;; Defined at:
  4350 ;;		line 47 in file "color.c"
  4351 ;; Parameters:    Size  Location     Type
  4352 ;;		None
  4353 ;; Auto vars:     Size  Location     Type
  4354 ;;  tmp             2    9[COMRAM] unsigned int 
  4355 ;; Return value:  Size  Location     Type
  4356 ;;                  2    4[COMRAM] unsigned int 
  4357 ;; Registers used:
  4358 ;;		wreg, status,2, status,0, cstack
  4359 ;; Tracked objects:
  4360 ;;		On entry : 0/0
  4361 ;;		On exit  : 0/0
  4362 ;;		Unchanged: 0/0
  4363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4364 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4365 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4366 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4367 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4368 ;;Total ram usage:        7 bytes
  4369 ;; Hardware stack levels used: 1
  4370 ;; Hardware stack levels required when called: 2
  4371 ;; This function calls:
  4372 ;;		_I2C_2_Master_Read
  4373 ;;		_I2C_2_Master_RepStart
  4374 ;;		_I2C_2_Master_Start
  4375 ;;		_I2C_2_Master_Stop
  4376 ;;		_I2C_2_Master_Write
  4377 ;; This function is called by:
  4378 ;;		_get_color
  4379 ;; This function uses a non-reentrant model
  4380 ;;
  4381                           
  4382                           	psect	text31
  4383  001C7A                     __ptext31:
  4384                           	callstack 0
  4385  001C7A                     _color_read_Blue:
  4386                           	callstack 26
  4387  001C7A                     
  4388                           ;color.c: 49:  unsigned int tmp;;color.c: 49:  unsigned int tmp;;color.c: 50:  I2C_2_Mas
      +                          ter_Start();;color.c: 50:  I2C_2_Master_Start();
  4389  001C7A  EC24  F010         	call	_I2C_2_Master_Start	;wreg free
  4390                           
  4391                           ;color.c: 51:  I2C_2_Master_Write(0x52 | 0x00);;color.c: 51:  I2C_2_Master_Write(0x52 | 
      +                          0x00);
  4392  001C7E  0E52               	movlw	82
  4393  001C80  EC19  F010         	call	_I2C_2_Master_Write
  4394                           
  4395                           ;color.c: 52:  I2C_2_Master_Write(0xA0 | 0x1A);;color.c: 52:  I2C_2_Master_Write(0xA0 | 
      +                          0x1A);
  4396  001C84  0EBA               	movlw	186
  4397  001C86  EC19  F010         	call	_I2C_2_Master_Write
  4398                           
  4399                           ;color.c: 53:  I2C_2_Master_RepStart();;color.c: 53:  I2C_2_Master_RepStart();
  4400  001C8A  EC29  F010         	call	_I2C_2_Master_RepStart	;wreg free
  4401                           
  4402                           ;color.c: 54:  I2C_2_Master_Write(0x52 | 0x01);;color.c: 54:  I2C_2_Master_Write(0x52 | 
      +                          0x01);
  4403  001C8E  0E53               	movlw	83
  4404  001C90  EC19  F010         	call	_I2C_2_Master_Write
  4405                           
  4406                           ;color.c: 55:  tmp=I2C_2_Master_Read(1);;color.c: 55:  tmp=I2C_2_Master_Read(1);
  4407  001C94  0E01               	movlw	1
  4408  001C96  ECA8  F00E         	call	_I2C_2_Master_Read
  4409  001C9A  6E07               	movwf	??_color_read_Blue^0,c
  4410  001C9C  5007               	movf	??_color_read_Blue^0,w,c
  4411  001C9E  6E0A               	movwf	color_read_Blue@tmp^0,c
  4412  001CA0  6A0B               	clrf	(color_read_Blue@tmp+1)^0,c
  4413                           
  4414                           ;color.c: 56:  tmp=tmp | (I2C_2_Master_Read(0)<<8);;color.c: 56:  tmp=tmp | (I2C_2_Maste
      +                          r_Read(0)<<8);
  4415  001CA2  0E00               	movlw	0
  4416  001CA4  ECA8  F00E         	call	_I2C_2_Master_Read
  4417  001CA8  6E07               	movwf	??_color_read_Blue^0,c
  4418  001CAA  5007               	movf	??_color_read_Blue^0,w,c
  4419  001CAC  6E09               	movwf	(??_color_read_Blue+2)^0,c
  4420  001CAE  6A08               	clrf	(??_color_read_Blue+1)^0,c
  4421  001CB0  500A               	movf	color_read_Blue@tmp^0,w,c
  4422  001CB2  1008               	iorwf	(??_color_read_Blue+1)^0,w,c
  4423  001CB4  6E0A               	movwf	color_read_Blue@tmp^0,c
  4424  001CB6  500B               	movf	(color_read_Blue@tmp+1)^0,w,c
  4425  001CB8  1009               	iorwf	(??_color_read_Blue+2)^0,w,c
  4426  001CBA  6E0B               	movwf	(color_read_Blue@tmp+1)^0,c
  4427                           
  4428                           ;color.c: 57:  I2C_2_Master_Stop();;color.c: 57:  I2C_2_Master_Stop();
  4429  001CBC  EC1F  F010         	call	_I2C_2_Master_Stop	;wreg free
  4430  001CC0                     
  4431                           ;color.c: 58:  return tmp;;color.c: 58:  return tmp;
  4432  001CC0  C00A  F005         	movff	color_read_Blue@tmp,?_color_read_Blue
  4433  001CC4  C00B  F006         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  4434  001CC8  0012               	return		;funcret
  4435  001CCA                     __end_of_color_read_Blue:
  4436                           	callstack 0
  4437                           
  4438 ;; *************** function _I2C_2_Master_Write *****************
  4439 ;; Defined at:
  4440 ;;		line 45 in file "i2c.c"
  4441 ;; Parameters:    Size  Location     Type
  4442 ;;  data_byte       1    wreg     unsigned char 
  4443 ;; Auto vars:     Size  Location     Type
  4444 ;;  data_byte       1    1[COMRAM] unsigned char 
  4445 ;; Return value:  Size  Location     Type
  4446 ;;                  1    wreg      void 
  4447 ;; Registers used:
  4448 ;;		wreg, status,2, status,0, cstack
  4449 ;; Tracked objects:
  4450 ;;		On entry : 0/0
  4451 ;;		On exit  : 0/0
  4452 ;;		Unchanged: 0/0
  4453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4454 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4455 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4456 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4457 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4458 ;;Total ram usage:        1 bytes
  4459 ;; Hardware stack levels used: 1
  4460 ;; Hardware stack levels required when called: 1
  4461 ;; This function calls:
  4462 ;;		_I2C_2_Master_Idle
  4463 ;; This function is called by:
  4464 ;;		_color_writetoaddr
  4465 ;;		_color_read_Red
  4466 ;;		_color_read_Blue
  4467 ;;		_color_read_Green
  4468 ;;		_color_read_Clear
  4469 ;; This function uses a non-reentrant model
  4470 ;;
  4471                           
  4472                           	psect	text32
  4473  002032                     __ptext32:
  4474                           	callstack 0
  4475  002032                     _I2C_2_Master_Write:
  4476                           	callstack 27
  4477                           
  4478                           ;incstack = 0
  4479                           ;I2C_2_Master_Write@data_byte stored from wreg
  4480  002032  6E02               	movwf	I2C_2_Master_Write@data_byte^0,c
  4481  002034                     
  4482                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 45: void I2C_2_Maste
      +                          r_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 46: {;i2c.c: 47:   I2C_2_Master_Idl
      +                          e();;i2c.c: 47:   I2C_2_Master_Idle();
  4483  002034  ECDA  F00F         	call	_I2C_2_Master_Idle	;wreg free
  4484  002038                     
  4485                           ;i2c.c: 48:   SSP2BUF = data_byte;;i2c.c: 48:   SSP2BUF = data_byte;
  4486  002038  C002  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  4487  00203C  0012               	return		;funcret
  4488  00203E                     __end_of_I2C_2_Master_Write:
  4489                           	callstack 0
  4490                           
  4491 ;; *************** function _I2C_2_Master_Stop *****************
  4492 ;; Defined at:
  4493 ;;		line 39 in file "i2c.c"
  4494 ;; Parameters:    Size  Location     Type
  4495 ;;		None
  4496 ;; Auto vars:     Size  Location     Type
  4497 ;;		None
  4498 ;; Return value:  Size  Location     Type
  4499 ;;                  1    wreg      void 
  4500 ;; Registers used:
  4501 ;;		wreg, status,2, status,0, cstack
  4502 ;; Tracked objects:
  4503 ;;		On entry : 0/0
  4504 ;;		On exit  : 0/0
  4505 ;;		Unchanged: 0/0
  4506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4507 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4508 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4509 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4510 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4511 ;;Total ram usage:        0 bytes
  4512 ;; Hardware stack levels used: 1
  4513 ;; Hardware stack levels required when called: 1
  4514 ;; This function calls:
  4515 ;;		_I2C_2_Master_Idle
  4516 ;; This function is called by:
  4517 ;;		_color_writetoaddr
  4518 ;;		_color_read_Red
  4519 ;;		_color_read_Blue
  4520 ;;		_color_read_Green
  4521 ;;		_color_read_Clear
  4522 ;; This function uses a non-reentrant model
  4523 ;;
  4524                           
  4525                           	psect	text33
  4526  00203E                     __ptext33:
  4527                           	callstack 0
  4528  00203E                     _I2C_2_Master_Stop:
  4529                           	callstack 27
  4530  00203E                     
  4531                           ;i2c.c: 41:   I2C_2_Master_Idle();;i2c.c: 41:   I2C_2_Master_Idle();
  4532  00203E  ECDA  F00F         	call	_I2C_2_Master_Idle	;wreg free
  4533  002042                     
  4534                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  4535  002042  010E               	movlb	14	; () banked
  4536  002044  85DA               	bsf	218,2,b	;volatile
  4537  002046                     
  4538                           ; BSR set to: 14
  4539  002046  0012               	return		;funcret
  4540  002048                     __end_of_I2C_2_Master_Stop:
  4541                           	callstack 0
  4542                           
  4543 ;; *************** function _I2C_2_Master_Start *****************
  4544 ;; Defined at:
  4545 ;;		line 27 in file "i2c.c"
  4546 ;; Parameters:    Size  Location     Type
  4547 ;;		None
  4548 ;; Auto vars:     Size  Location     Type
  4549 ;;		None
  4550 ;; Return value:  Size  Location     Type
  4551 ;;                  1    wreg      void 
  4552 ;; Registers used:
  4553 ;;		wreg, status,2, status,0, cstack
  4554 ;; Tracked objects:
  4555 ;;		On entry : 0/0
  4556 ;;		On exit  : 0/0
  4557 ;;		Unchanged: 0/0
  4558 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4559 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4560 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4561 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4562 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4563 ;;Total ram usage:        0 bytes
  4564 ;; Hardware stack levels used: 1
  4565 ;; Hardware stack levels required when called: 1
  4566 ;; This function calls:
  4567 ;;		_I2C_2_Master_Idle
  4568 ;; This function is called by:
  4569 ;;		_color_writetoaddr
  4570 ;;		_color_read_Red
  4571 ;;		_color_read_Blue
  4572 ;;		_color_read_Green
  4573 ;;		_color_read_Clear
  4574 ;; This function uses a non-reentrant model
  4575 ;;
  4576                           
  4577                           	psect	text34
  4578  002048                     __ptext34:
  4579                           	callstack 0
  4580  002048                     _I2C_2_Master_Start:
  4581                           	callstack 27
  4582  002048                     
  4583                           ;i2c.c: 29:   I2C_2_Master_Idle();;i2c.c: 29:   I2C_2_Master_Idle();
  4584  002048  ECDA  F00F         	call	_I2C_2_Master_Idle	;wreg free
  4585  00204C                     
  4586                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  4587  00204C  010E               	movlb	14	; () banked
  4588  00204E  81DA               	bsf	218,0,b	;volatile
  4589  002050                     
  4590                           ; BSR set to: 14
  4591  002050  0012               	return		;funcret
  4592  002052                     __end_of_I2C_2_Master_Start:
  4593                           	callstack 0
  4594                           
  4595 ;; *************** function _I2C_2_Master_RepStart *****************
  4596 ;; Defined at:
  4597 ;;		line 33 in file "i2c.c"
  4598 ;; Parameters:    Size  Location     Type
  4599 ;;		None
  4600 ;; Auto vars:     Size  Location     Type
  4601 ;;		None
  4602 ;; Return value:  Size  Location     Type
  4603 ;;                  1    wreg      void 
  4604 ;; Registers used:
  4605 ;;		wreg, status,2, status,0, cstack
  4606 ;; Tracked objects:
  4607 ;;		On entry : 0/0
  4608 ;;		On exit  : 0/0
  4609 ;;		Unchanged: 0/0
  4610 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4611 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4612 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4613 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4614 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4615 ;;Total ram usage:        0 bytes
  4616 ;; Hardware stack levels used: 1
  4617 ;; Hardware stack levels required when called: 1
  4618 ;; This function calls:
  4619 ;;		_I2C_2_Master_Idle
  4620 ;; This function is called by:
  4621 ;;		_color_read_Red
  4622 ;;		_color_read_Blue
  4623 ;;		_color_read_Green
  4624 ;;		_color_read_Clear
  4625 ;; This function uses a non-reentrant model
  4626 ;;
  4627                           
  4628                           	psect	text35
  4629  002052                     __ptext35:
  4630                           	callstack 0
  4631  002052                     _I2C_2_Master_RepStart:
  4632                           	callstack 26
  4633  002052                     
  4634                           ;i2c.c: 35:   I2C_2_Master_Idle();;i2c.c: 35:   I2C_2_Master_Idle();
  4635  002052  ECDA  F00F         	call	_I2C_2_Master_Idle	;wreg free
  4636  002056                     
  4637                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  4638  002056  010E               	movlb	14	; () banked
  4639  002058  83DA               	bsf	218,1,b	;volatile
  4640  00205A                     
  4641                           ; BSR set to: 14
  4642  00205A  0012               	return		;funcret
  4643  00205C                     __end_of_I2C_2_Master_RepStart:
  4644                           	callstack 0
  4645                           
  4646 ;; *************** function _I2C_2_Master_Read *****************
  4647 ;; Defined at:
  4648 ;;		line 51 in file "i2c.c"
  4649 ;; Parameters:    Size  Location     Type
  4650 ;;  ack             1    wreg     unsigned char 
  4651 ;; Auto vars:     Size  Location     Type
  4652 ;;  ack             1    2[COMRAM] unsigned char 
  4653 ;;  tmp             1    3[COMRAM] unsigned char 
  4654 ;; Return value:  Size  Location     Type
  4655 ;;                  1    wreg      unsigned char 
  4656 ;; Registers used:
  4657 ;;		wreg, status,2, status,0, cstack
  4658 ;; Tracked objects:
  4659 ;;		On entry : 0/0
  4660 ;;		On exit  : 0/0
  4661 ;;		Unchanged: 0/0
  4662 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4663 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4664 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4665 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4666 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4667 ;;Total ram usage:        3 bytes
  4668 ;; Hardware stack levels used: 1
  4669 ;; Hardware stack levels required when called: 1
  4670 ;; This function calls:
  4671 ;;		_I2C_2_Master_Idle
  4672 ;; This function is called by:
  4673 ;;		_color_read_Red
  4674 ;;		_color_read_Blue
  4675 ;;		_color_read_Green
  4676 ;;		_color_read_Clear
  4677 ;; This function uses a non-reentrant model
  4678 ;;
  4679                           
  4680                           	psect	text36
  4681  001D50                     __ptext36:
  4682                           	callstack 0
  4683  001D50                     _I2C_2_Master_Read:
  4684                           	callstack 26
  4685                           
  4686                           ; BSR set to: 14
  4687                           ;incstack = 0
  4688                           ;I2C_2_Master_Read@ack stored from wreg
  4689  001D50  6E03               	movwf	I2C_2_Master_Read@ack^0,c
  4690  001D52                     
  4691                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 51: unsigned char 
      +                          I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 52: {;i2c.c: 53:   unsigned cha
      +                          r tmp;;i2c.c: 53:   unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();;i2c.c: 54:   I2
      +                          C_2_Master_Idle();
  4692  001D52  ECDA  F00F         	call	_I2C_2_Master_Idle	;wreg free
  4693  001D56                     
  4694                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  4695  001D56  010E               	movlb	14	; () banked
  4696  001D58  87DA               	bsf	218,3,b	;volatile
  4697                           
  4698                           ;i2c.c: 56:   I2C_2_Master_Idle();;i2c.c: 56:   I2C_2_Master_Idle();
  4699  001D5A  ECDA  F00F         	call	_I2C_2_Master_Idle	;wreg free
  4700  001D5E                     
  4701                           ;i2c.c: 57:   tmp = SSP2BUF;;i2c.c: 57:   tmp = SSP2BUF;
  4702  001D5E  CED5 F004          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  4703                           
  4704                           ;i2c.c: 58:   I2C_2_Master_Idle();;i2c.c: 58:   I2C_2_Master_Idle();
  4705  001D62  ECDA  F00F         	call	_I2C_2_Master_Idle	;wreg free
  4706  001D66                     
  4707                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  4708  001D66  5003               	movf	I2C_2_Master_Read@ack^0,w,c
  4709  001D68  B4D8               	btfsc	status,2,c
  4710  001D6A  EFB9  F00E         	goto	u1191
  4711  001D6E  EFBD  F00E         	goto	u1190
  4712  001D72                     u1191:
  4713  001D72  6A02               	clrf	??_I2C_2_Master_Read^0,c
  4714  001D74  2A02               	incf	??_I2C_2_Master_Read^0,f,c
  4715  001D76  EFBE  F00E         	goto	u1208
  4716  001D7A                     u1190:
  4717  001D7A  6A02               	clrf	??_I2C_2_Master_Read^0,c
  4718  001D7C                     u1208:
  4719  001D7C  3A02               	swapf	??_I2C_2_Master_Read^0,f,c
  4720  001D7E  4602               	rlncf	??_I2C_2_Master_Read^0,f,c
  4721  001D80  010E               	movlb	14	; () banked
  4722  001D82  51DA               	movf	218,w,b	;volatile
  4723  001D84  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  4724  001D86  0BDF               	andlw	-33
  4725  001D88  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  4726  001D8A  6FDA               	movwf	218,b	;volatile
  4727  001D8C                     
  4728                           ; BSR set to: 14
  4729                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  4730  001D8C  89DA               	bsf	218,4,b	;volatile
  4731  001D8E                     
  4732                           ; BSR set to: 14
  4733                           ;i2c.c: 61:   return tmp;;i2c.c: 61:   return tmp;
  4734  001D8E  5004               	movf	I2C_2_Master_Read@tmp^0,w,c
  4735  001D90                     
  4736                           ; BSR set to: 14
  4737  001D90  0012               	return		;funcret
  4738  001D92                     __end_of_I2C_2_Master_Read:
  4739                           	callstack 0
  4740                           
  4741 ;; *************** function _I2C_2_Master_Idle *****************
  4742 ;; Defined at:
  4743 ;;		line 22 in file "i2c.c"
  4744 ;; Parameters:    Size  Location     Type
  4745 ;;		None
  4746 ;; Auto vars:     Size  Location     Type
  4747 ;;		None
  4748 ;; Return value:  Size  Location     Type
  4749 ;;                  1    wreg      void 
  4750 ;; Registers used:
  4751 ;;		wreg, status,2, status,0
  4752 ;; Tracked objects:
  4753 ;;		On entry : 0/0
  4754 ;;		On exit  : 0/0
  4755 ;;		Unchanged: 0/0
  4756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4757 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4758 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4759 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4760 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4761 ;;Total ram usage:        1 bytes
  4762 ;; Hardware stack levels used: 1
  4763 ;; This function calls:
  4764 ;;		Nothing
  4765 ;; This function is called by:
  4766 ;;		_I2C_2_Master_Start
  4767 ;;		_I2C_2_Master_RepStart
  4768 ;;		_I2C_2_Master_Stop
  4769 ;;		_I2C_2_Master_Write
  4770 ;;		_I2C_2_Master_Read
  4771 ;; This function uses a non-reentrant model
  4772 ;;
  4773                           
  4774                           	psect	text37
  4775  001FB4                     __ptext37:
  4776                           	callstack 0
  4777  001FB4                     _I2C_2_Master_Idle:
  4778                           	callstack 27
  4779  001FB4                     l126:
  4780  001FB4  010E               	movlb	14	; () banked
  4781  001FB6  B5D8               	btfsc	216,2,b	;volatile
  4782  001FB8  EFE0  F00F         	goto	u1021
  4783  001FBC  EFE2  F00F         	goto	u1020
  4784  001FC0                     u1021:
  4785  001FC0  EFDA  F00F         	goto	l126
  4786  001FC4                     u1020:
  4787  001FC4                     
  4788                           ; BSR set to: 14
  4789  001FC4  CEDA F001          	movff	3802,??_I2C_2_Master_Idle	;volatile
  4790  001FC8  0E1F               	movlw	31
  4791  001FCA  1601               	andwf	??_I2C_2_Master_Idle^0,f,c
  4792  001FCC  A4D8               	btfss	status,2,c
  4793  001FCE  EFEB  F00F         	goto	u1031
  4794  001FD2  EFED  F00F         	goto	u1030
  4795  001FD6                     u1031:
  4796  001FD6  EFDA  F00F         	goto	l126
  4797  001FDA                     u1030:
  4798  001FDA                     
  4799                           ; BSR set to: 14
  4800  001FDA  0012               	return		;funcret
  4801  001FDC                     __end_of_I2C_2_Master_Idle:
  4802                           	callstack 0
  4803                           
  4804                           	psect	rparam
  4805  0000                     
  4806                           	psect	idloc
  4807                           
  4808                           ;Config register IDLOC0 @ 0x200000
  4809                           ;	unspecified, using default values
  4810  200000                     	org	2097152
  4811  200000  0FFF               	dw	4095
  4812                           
  4813                           ;Config register IDLOC1 @ 0x200002
  4814                           ;	unspecified, using default values
  4815  200002                     	org	2097154
  4816  200002  0FFF               	dw	4095
  4817                           
  4818                           ;Config register IDLOC2 @ 0x200004
  4819                           ;	unspecified, using default values
  4820  200004                     	org	2097156
  4821  200004  0FFF               	dw	4095
  4822                           
  4823                           ;Config register IDLOC3 @ 0x200006
  4824                           ;	unspecified, using default values
  4825  200006                     	org	2097158
  4826  200006  0FFF               	dw	4095
  4827                           
  4828                           ;Config register IDLOC4 @ 0x200008
  4829                           ;	unspecified, using default values
  4830  200008                     	org	2097160
  4831  200008  0FFF               	dw	4095
  4832                           
  4833                           ;Config register IDLOC5 @ 0x20000A
  4834                           ;	unspecified, using default values
  4835  20000A                     	org	2097162
  4836  20000A  0FFF               	dw	4095
  4837                           
  4838                           ;Config register IDLOC6 @ 0x20000C
  4839                           ;	unspecified, using default values
  4840  20000C                     	org	2097164
  4841  20000C  0FFF               	dw	4095
  4842                           
  4843                           ;Config register IDLOC7 @ 0x20000E
  4844                           ;	unspecified, using default values
  4845  20000E                     	org	2097166
  4846  20000E  0FFF               	dw	4095
  4847                           
  4848                           	psect	config
  4849                           
  4850                           ;Config register CONFIG1L @ 0x300000
  4851                           ;	External Oscillator mode Selection bits
  4852                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  4853                           ;	Power-up default value for COSC bits
  4854                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  4855  300000                     	org	3145728
  4856  300000  AA                 	db	170
  4857                           
  4858                           ;Config register CONFIG1H @ 0x300001
  4859                           ;	unspecified, using default values
  4860                           ;	Clock Out Enable bit
  4861                           ;	CLKOUTEN = 0x1, unprogrammed default
  4862                           ;	Clock Switch Enable bit
  4863                           ;	CSWEN = 0x1, unprogrammed default
  4864                           ;	Fail-Safe Clock Monitor Enable bit
  4865                           ;	FCMEN = 0x1, unprogrammed default
  4866  300001                     	org	3145729
  4867  300001  FF                 	db	255
  4868                           
  4869                           ;Config register CONFIG2L @ 0x300002
  4870                           ;	unspecified, using default values
  4871                           ;	Master Clear Enable bit
  4872                           ;	MCLRE = 0x1, unprogrammed default
  4873                           ;	Power-up Timer Enable bit
  4874                           ;	PWRTE = 0x1, unprogrammed default
  4875                           ;	Low-power BOR enable bit
  4876                           ;	LPBOREN = 0x1, unprogrammed default
  4877                           ;	Brown-out Reset Enable bits
  4878                           ;	BOREN = 0x3, unprogrammed default
  4879  300002                     	org	3145730
  4880  300002  FF                 	db	255
  4881                           
  4882                           ;Config register CONFIG2H @ 0x300003
  4883                           ;	unspecified, using default values
  4884                           ;	Brown Out Reset Voltage selection bits
  4885                           ;	BORV = 0x3, unprogrammed default
  4886                           ;	ZCD Disable bit
  4887                           ;	ZCD = 0x1, unprogrammed default
  4888                           ;	PPSLOCK bit One-Way Set Enable bit
  4889                           ;	PPS1WAY = 0x1, unprogrammed default
  4890                           ;	Stack Full/Underflow Reset Enable bit
  4891                           ;	STVREN = 0x1, unprogrammed default
  4892                           ;	Debugger Enable bit
  4893                           ;	DEBUG = 0x1, unprogrammed default
  4894                           ;	Extended Instruction Set Enable bit
  4895                           ;	XINST = 0x1, unprogrammed default
  4896  300003                     	org	3145731
  4897  300003  FF                 	db	255
  4898                           
  4899                           ;Config register CONFIG3L @ 0x300004
  4900                           ;	WDT Period Select bits
  4901                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  4902                           ;	WDT operating mode
  4903                           ;	WDTE = OFF, WDT Disabled
  4904  300004                     	org	3145732
  4905  300004  9F                 	db	159
  4906                           
  4907                           ;Config register CONFIG3H @ 0x300005
  4908                           ;	unspecified, using default values
  4909                           ;	WDT Window Select bits
  4910                           ;	WDTCWS = 0x7, unprogrammed default
  4911                           ;	WDT input clock selector
  4912                           ;	WDTCCS = 0x7, unprogrammed default
  4913  300005                     	org	3145733
  4914  300005  FF                 	db	255
  4915                           
  4916                           ;Config register CONFIG4L @ 0x300006
  4917                           ;	unspecified, using default values
  4918                           ;	Write Protection Block 0
  4919                           ;	WRT0 = 0x1, unprogrammed default
  4920                           ;	Write Protection Block 1
  4921                           ;	WRT1 = 0x1, unprogrammed default
  4922                           ;	Write Protection Block 2
  4923                           ;	WRT2 = 0x1, unprogrammed default
  4924                           ;	Write Protection Block 3
  4925                           ;	WRT3 = 0x1, unprogrammed default
  4926                           ;	Write Protection Block 3
  4927                           ;	WRT4 = 0x1, unprogrammed default
  4928                           ;	Write Protection Block 3
  4929                           ;	WRT5 = 0x1, unprogrammed default
  4930                           ;	Write Protection Block 3
  4931                           ;	WRT6 = 0x1, unprogrammed default
  4932                           ;	Write Protection Block 3
  4933                           ;	WRT7 = 0x1, unprogrammed default
  4934  300006                     	org	3145734
  4935  300006  FF                 	db	255
  4936                           
  4937                           ;Config register CONFIG4H @ 0x300007
  4938                           ;	unspecified, using default values
  4939                           ;	Configuration Register Write Protection bit
  4940                           ;	WRTC = 0x1, unprogrammed default
  4941                           ;	Boot Block Write Protection bit
  4942                           ;	WRTB = 0x1, unprogrammed default
  4943                           ;	Data EEPROM Write Protection bit
  4944                           ;	WRTD = 0x1, unprogrammed default
  4945                           ;	Scanner Enable bit
  4946                           ;	SCANE = 0x1, unprogrammed default
  4947                           ;	Low Voltage Programming Enable bit
  4948                           ;	LVP = 0x1, unprogrammed default
  4949  300007                     	org	3145735
  4950  300007  FF                 	db	255
  4951                           
  4952                           ;Config register CONFIG5L @ 0x300008
  4953                           ;	unspecified, using default values
  4954                           ;	UserNVM Program Memory Code Protection bit
  4955                           ;	CP = 0x1, unprogrammed default
  4956                           ;	DataNVM Memory Code Protection bit
  4957                           ;	CPD = 0x1, unprogrammed default
  4958  300008                     	org	3145736
  4959  300008  FF                 	db	255
  4960                           
  4961                           ;Config register CONFIG5H @ 0x300009
  4962                           ;	unspecified, using default values
  4963  300009                     	org	3145737
  4964  300009  FF                 	db	255
  4965                           
  4966                           ;Config register CONFIG6L @ 0x30000A
  4967                           ;	unspecified, using default values
  4968                           ;	Table Read Protection Block 0
  4969                           ;	EBTR0 = 0x1, unprogrammed default
  4970                           ;	Table Read Protection Block 1
  4971                           ;	EBTR1 = 0x1, unprogrammed default
  4972                           ;	Table Read Protection Block 2
  4973                           ;	EBTR2 = 0x1, unprogrammed default
  4974                           ;	Table Read Protection Block 3
  4975                           ;	EBTR3 = 0x1, unprogrammed default
  4976                           ;	Table Read Protection Block 4
  4977                           ;	EBTR4 = 0x1, unprogrammed default
  4978                           ;	Table Read Protection Block 5
  4979                           ;	EBTR5 = 0x1, unprogrammed default
  4980                           ;	Table Read Protection Block 6
  4981                           ;	EBTR6 = 0x1, unprogrammed default
  4982                           ;	Table Read Protection Block 7
  4983                           ;	EBTR7 = 0x1, unprogrammed default
  4984  30000A                     	org	3145738
  4985  30000A  FF                 	db	255
  4986                           
  4987                           ;Config register CONFIG6H @ 0x30000B
  4988                           ;	unspecified, using default values
  4989                           ;	Boot Block Table Read Protection bit
  4990                           ;	EBTRB = 0x1, unprogrammed default
  4991  30000B                     	org	3145739
  4992  30000B  FF                 	db	255
  4993                           tosu	equ	0xFFF
  4994                           tosh	equ	0xFFE
  4995                           tosl	equ	0xFFD
  4996                           stkptr	equ	0xFFC
  4997                           pclatu	equ	0xFFB
  4998                           pclath	equ	0xFFA
  4999                           pcl	equ	0xFF9
  5000                           tblptru	equ	0xFF8
  5001                           tblptrh	equ	0xFF7
  5002                           tblptrl	equ	0xFF6
  5003                           tablat	equ	0xFF5
  5004                           prodh	equ	0xFF4
  5005                           prodl	equ	0xFF3
  5006                           indf0	equ	0xFEF
  5007                           postinc0	equ	0xFEE
  5008                           postdec0	equ	0xFED
  5009                           preinc0	equ	0xFEC
  5010                           plusw0	equ	0xFEB
  5011                           fsr0h	equ	0xFEA
  5012                           fsr0l	equ	0xFE9
  5013                           wreg	equ	0xFE8
  5014                           indf1	equ	0xFE7
  5015                           postinc1	equ	0xFE6
  5016                           postdec1	equ	0xFE5
  5017                           preinc1	equ	0xFE4
  5018                           plusw1	equ	0xFE3
  5019                           fsr1h	equ	0xFE2
  5020                           fsr1l	equ	0xFE1
  5021                           bsr	equ	0xFE0
  5022                           indf2	equ	0xFDF
  5023                           postinc2	equ	0xFDE
  5024                           postdec2	equ	0xFDD
  5025                           preinc2	equ	0xFDC
  5026                           plusw2	equ	0xFDB
  5027                           fsr2h	equ	0xFDA
  5028                           fsr2l	equ	0xFD9
  5029                           status	equ	0xFD8

Data Sizes:
    Strings     15
    Constant    0
    Data        1
    BSS         124
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     91      95
    BANK0           160    126     155
    BANK1           256     37     129
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_3(CODE[5]), STR_2(CODE[6]), STR_1(CODE[15]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 15
		 -> STR_3(CODE[5]), STR_2(CODE[6]), STR_1(CODE[15]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_3(CODE[5]), STR_2(CODE[6]), STR_1(CODE[15]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 100
		 -> voltage_display@buf(COMRAM[80]), color_predict@buf(BANK0[100]), color_display@buf(BANK0[100]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S2045$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S2045$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    motorR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    motorR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhhlll[1]), PWM6DCH(BITBIGSFRhhhlll[1]), 

    motorL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    motorL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhhlll[1]), PWM6DCH(BITBIGSFRhhhlll[1]), 

    sendStringSerial4@string	PTR unsigned char  size(2) Largest target is 100
		 -> voltage_display@buf(COMRAM[80]), color_predict@buf(BANK0[100]), color_display@buf(BANK0[100]), 

    voltage_display@m.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    voltage_display@m.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhhlll[1]), PWM6DCH(BITBIGSFRhhhlll[1]), 

    voltage_read@m.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    voltage_read@m.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhhlll[1]), PWM6DCH(BITBIGSFRhhhlll[1]), 

    turn180@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turn180@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhhlll[1]), PWM6DCH(BITBIGSFRhhhlll[1]), 

    turn180@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turn180@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhhlll[1]), PWM6DCH(BITBIGSFRhhhlll[1]), 

    fullSpeedAhead@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    fullSpeedAhead@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhhlll[1]), PWM6DCH(BITBIGSFRhhhlll[1]), 

    fullSpeedAhead@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    fullSpeedAhead@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhhlll[1]), PWM6DCH(BITBIGSFRhhhlll[1]), 

    turnRight@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turnRight@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhhlll[1]), PWM6DCH(BITBIGSFRhhhlll[1]), 

    turnRight@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turnRight@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhhlll[1]), PWM6DCH(BITBIGSFRhhhlll[1]), 

    turnLeft@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turnLeft@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhhlll[1]), PWM6DCH(BITBIGSFRhhhlll[1]), 

    turnLeft@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turnLeft@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhhlll[1]), PWM6DCH(BITBIGSFRhhhlll[1]), 

    stop@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    stop@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhhlll[1]), PWM6DCH(BITBIGSFRhhhlll[1]), 

    stop@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    stop@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhhlll[1]), PWM6DCH(BITBIGSFRhhhlll[1]), 

    setMotorPWM@m.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    setMotorPWM@m.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhhlll[1]), PWM6DCH(BITBIGSFRhhhlll[1]), 

    initDCmotors_parameter@motorR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    initDCmotors_parameter@motorR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhhlll[1]), PWM6DCH(BITBIGSFRhhhlll[1]), 

    initDCmotors_parameter@motorR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    S199DC_motor$dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    initDCmotors_parameter@motorL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    S199DC_motor$dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhhlll[1]), PWM6DCH(BITBIGSFRhhhlll[1]), 

    initDCmotors_parameter@motorL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhhhlll[1]), PWM6DCH(BITBIGSFRhhhlll[1]), 

    initDCmotors_parameter@motorL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    color_display@m	PTR struct color_rgb size(2) Largest target is 8
		 -> main@rgb(BANK1[8]), 

    LED_G@m	PTR struct color_rgb size(2) Largest target is 8
		 -> main@rgb(BANK1[8]), 

    LED_B@m	PTR struct color_rgb size(2) Largest target is 8
		 -> main@rgb(BANK1[8]), 

    LED_C@m	PTR struct color_rgb size(2) Largest target is 8
		 -> main@rgb(BANK1[8]), 

    LED_R@m	PTR struct color_rgb size(2) Largest target is 8
		 -> main@rgb(BANK1[8]), 

    get_color@m	PTR struct color_rgb size(2) Largest target is 8
		 -> main@rgb(BANK1[8]), 


Critical Paths under _main in COMRAM

    _main->_color_display
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _sendStringSerial4->_sendCharSerial4
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _LED_R->_get_color
    _LED_G->_get_color
    _LED_C->_get_color
    _LED_B->_get_color
    _get_color->_color_read_Blue
    _get_color->_color_read_Clear
    _get_color->_color_read_Green
    _get_color->_color_read_Red
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Clear->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle

Critical Paths under _main in BANK0

    _main->_color_predict
    _color_predict->_sprintf
    _color_display->_sprintf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                40    40      0   19745
                                             89 COMRAM     2     2      0
                                              0 BANK1     37    37      0
                  _I2C_2_Master_Init
                              _LED_B
                              _LED_C
                              _LED_G
                              _LED_R
                   _color_click_init
                      _color_display
                      _color_predict
                    _initDCmotorsPWM
             _initDCmotors_parameter
                         _initUSART4
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initDCmotors_parameter                               4     0      4     416
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2      76
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _color_predict                                      101   101      0    7127
                                             25 BANK0    101   101      0
                  _sendStringSerial4
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _color_display                                      102   100      2    7497
                                             87 COMRAM     2     0      2
                                             25 BANK0    100   100      0
                  _sendStringSerial4
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             27    15     12    6760
                                              0 BANK0     25    13     12
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6    6105
                                             79 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           42    36      6    5751
                                             63 COMRAM    16    10      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                36    26     10    4358
                                             27 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    2709
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1235
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                9     5      4     834
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (2) _sendStringSerial4                                    2     0      2     295
                                              1 COMRAM     2     0      2
                    _sendCharSerial4
 ---------------------------------------------------------------------------------
 (3) _sendCharSerial4                                      1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     294
                                              4 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     294
                                              2 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LED_R                                                4     2      2     942
                                             13 COMRAM     4     2      2
                          _get_color
 ---------------------------------------------------------------------------------
 (1) _LED_G                                                4     2      2     942
                                             13 COMRAM     4     2      2
                          _get_color
 ---------------------------------------------------------------------------------
 (1) _LED_C                                                4     2      2    1018
                                             13 COMRAM     4     2      2
                          _get_color
 ---------------------------------------------------------------------------------
 (1) _LED_B                                                4     2      2     942
                                             13 COMRAM     4     2      2
                          _get_color
 ---------------------------------------------------------------------------------
 (2) _get_color                                            2     0      2     844
                                             11 COMRAM     2     0      2
                    _color_read_Blue
                   _color_read_Clear
                   _color_read_Green
                     _color_read_Red
 ---------------------------------------------------------------------------------
 (3) _color_read_Red                                       7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _color_read_Green                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _color_read_Clear                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _color_read_Blue                                      7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Write                                   1     1      0      22
                                              1 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Read                                    3     3      0      45
                                              1 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Idle                                    1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_2_Master_Init
   _LED_B
     _get_color
       _color_read_Blue
         _I2C_2_Master_Read
           _I2C_2_Master_Idle
         _I2C_2_Master_RepStart
           _I2C_2_Master_Idle
         _I2C_2_Master_Start
           _I2C_2_Master_Idle
         _I2C_2_Master_Stop
           _I2C_2_Master_Idle
         _I2C_2_Master_Write
           _I2C_2_Master_Idle
       _color_read_Clear
         _I2C_2_Master_Read
         _I2C_2_Master_RepStart
         _I2C_2_Master_Start
         _I2C_2_Master_Stop
         _I2C_2_Master_Write
       _color_read_Green
         _I2C_2_Master_Read
         _I2C_2_Master_RepStart
         _I2C_2_Master_Start
         _I2C_2_Master_Stop
         _I2C_2_Master_Write
       _color_read_Red
         _I2C_2_Master_Read
         _I2C_2_Master_RepStart
         _I2C_2_Master_Start
         _I2C_2_Master_Stop
         _I2C_2_Master_Write
   _LED_C
     _get_color
   _LED_G
     _get_color
   _LED_R
     _get_color
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _color_display
     _sendStringSerial4
       _sendCharSerial4
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
               _strlen
           _fputc
   _color_predict
     _sendStringSerial4
     _sprintf
   _initDCmotorsPWM
   _initDCmotors_parameter
   _initUSART4

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      58        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     25      81       7       50.4%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     7E      9B       5       96.9%
BITBIGSFRllhhl      6E      0       0      43        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5B      5F       1      100.0%
BITBIGSFRhhhh       40      0       0      32        0.0%
BITBIGSFRlllllh     32      0       0      48        0.0%
BITBIGSFRlllllh     2A      0       0      52        0.0%
BITBIGSFRllllll     26      0       0      56        0.0%
BITBIGSFRllllhh     20      0       0      46        0.0%
BITBIGSFRhhhlll     18      0       0      35        0.0%
BITBIGSFRhhhlh      17      0       0      33        0.0%
BITBIGSFRllhhhh     14      0       0      40        0.0%
BITBIGSFRlllllh      F      0       0      54        0.0%
BITBIGSFRllllhl      C      0       0      47        0.0%
BITBIGSFRlllllh      9      0       0      53        0.0%
BITBIGSFRllhlll      8      0       0      44        0.0%
BITBIGSFRllhhhl      6      0       0      42        0.0%
BITBIGSFRllllll      6      0       0      55        0.0%
BITBIGSFRlllllh      6      0       0      51        0.0%
BITBIGSFRlllllh      5      0       0      50        0.0%
BITBIGSFRllhhhh      3      0       0      41        0.0%
BITBIGSFRlllllh      3      0       0      49        0.0%
BITBIGSFRhlh         1      0       0      36        0.0%
BITBIGSFRhhhllh      1      0       0      34        0.0%
BITBIGSFRlhh         1      0       0      38        0.0%
BITBIGSFRlllh        1      0       0      45        0.0%
BITBIGSFRlhl         1      0       0      39        0.0%
BITBIGSFRhll         1      0       0      37        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     17B      57        0.0%
DATA                 0      0     17B       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.35 build 20211206165544 
Symbol Table                                                                                   Tue Mar 08 11:28:05 2022

                _color_read_Red 1B8A                 _color_read_Blue 1C7A                   _color_predict 1EAC  
                            l51 1BD8                              l60 1C78                              l45 1E7A  
                            l54 1CC8                              l63 1B36                              l72 1F88  
                            l48 1FFA                              l57 1C28                              l81 1ED8  
                            l66 1F04                              l75 1F30                              l69 1F5C  
                            l78 1A76                _color_read_Clear 1C2A                _color_read_Green 1BDA  
                           l123 1FB2                             l203 1D4E                             l132 2050  
                           l141 203C                             l126 1FB4                             l302 2030  
                           l206 1876                             l135 205A                             l144 1D90  
                           l129 1FDA                             l138 2046                             l308 1EAA  
                           l290 2018                             l299 201C                             l571 17A4  
                           l558 1640                             u800 18C4                             u801 18C0  
                           u810 18FA                             u811 18F6                             u900 1600  
                           u820 1D0C                             u901 15FC                             u821 1D08  
                           u910 1654                             u830 1E3A                             u911 1650  
                           u831 1E36                             u840 14CC                             u920 1686  
                           u841 14C8                             u921 1682                             u850 14FE  
                           u930 16C4                             u851 14FA                             u931 16C0  
                           u940 16EE                             u780 188A                             u861 1528  
                           u941 16EA                             u781 1886                             u870 154C  
                           u950 171C                             u790 189C                             u871 1548  
                           u951 1718                             u791 1898                             u880 1576  
                           u960 1764                             u881 1572                             u961 1760  
                           u890 15B6                             u970 1952                             u891 15B2  
                           u971 194E                             u980 1974                             u981 1970  
                           u990 19CA                             u991 19C6                             _abs 1DD2  
                           _pad 1942                             wreg 000FE8                            l2000 1568  
                          l1201 1E10                            l2010 15D8                            l2002 1576  
                          l1122 1B88                            ?_abs 0013                            l2012 15EA  
                          l2004 1588                            l2100 0EA6                            l1213 1940  
                          l1221 1D0C                            l2006 15B6                            l2014 15F0  
                          l2030 1678                            l2022 1642                            l1230 1E46  
                          l2110 0EF0                            l2102 0EC2                            l2016 1600  
                          l2008 15D6                            l2040 16E0                            l2032 1686  
                          l2024 1646                            l1224 205C                            l1152 19CA  
                          l2120 0F8E                            l2112 0EFA                            l2104 0ED4  
                          l1160 0EB2                            l2200 143A                            l2018 1620  
                          l2042 16EE                            l2050 1754                            l2034 16A6  
                          l2026 1654                            l1154 1A06                            l2130 105E  
                          l2114 0F00                            l2122 0FF2                            l2106 0EE2  
                          l1162 0EBA                            l2210 1476                            l2202 1448  
                          l2300 1E66                            l2052 1764                            l2044 171C  
                          l2036 16C4                            l2028 1674                            l2060 1952  
                          l1180 10F4                            l2140 10A8                            l2124 100C  
                          l2132 106E                            l2116 0F82                            l2108 0EE8  
                          l2204 145C                            l1149 1988                            l2150 2048  
                          l2230 1CC0                            l2222 1B8A                            l2310 1F32  
                          l2302 1E70                            l2054 1784                            l2046 173C  
                          l2038 16CC                            l2070 19A8                            l2062 1966  
                          l2142 10B4                            l2134 1080                            l2126 102A  
                          l2118 0F88                            l2214 1482                            l2152 204C  
                          l2160 2042                            l2240 1C2A                            l2224 1BD0  
                          l2320 1F7C                            l2312 1F38                            l2304 1EDA  
                          l2048 174E                            l2080 1DD2                            l2072 19AC  
                          l2064 1974                            l2144 10BC                            l2136 1090  
                          l2128 1044                            l2216 14A6                            l2208 1468  
                          l1193 1AD0                            l2170 1D5E                            l2162 2052  
                          l2154 2034                            l2242 1C70                            l2234 1BDA  
                          l2314 1F50                            l2322 1F06                            l2306 1EE0  
                          l2082 1DEC                            l2074 19DA                            l2066 1980  
                          l2058 1942                            l2138 1096                            l2146 10CC  
                          l2090 0E32                            l1194 1AD8                            l2250 1A78  
                          l2330 1A6A                            l1187 14B8                            l2084 1FB4  
                          l2172 1D66                            l2164 2056                            l2156 2038  
                          l2228 1C7A                            l2236 1C20                            l2316 1F5E  
                          l2324 1F0C                            l2308 1EF8                            l2260 1F94  
                          l2076 19EE                            l2068 1994                            l2092 0E5A  
                          l2180 1306                            l2252 1A80                            l2332 1EB0  
                          l2340 1D36                            l2500 1250                            l2420 110E  
                          l2412 10F6                            l2086 1FC4                            l2174 1D8C  
                          l2166 1D52                            l2158 203E                            l2318 1F64  
                          l2326 1F24                            l2262 1F9A                            l2270 1FDE  
                          l2246 201C                            l1198 1E08                            l2094 0E7A  
                          l2190 1372                            l2182 132A                            l2254 1A8E  
                          l2334 1ECC                            l2342 1D4A                            l2350 17C2  
                          l2502 1256                            l2430 112A                            l2422 1122  
                          l2414 10FA                            l2176 1D8E                            l2168 1D56  
                          l2272 1ADA                            l2264 1F9C                            l2248 202C  
                          l2096 0E8A                            l2088 0E12                            l2192 1396  
                          l2184 1338                            l2256 1AB4                            l2280 1B5A  
                          l2328 1A08                            l2344 1D4C                            l2336 1D0E  
                          l2352 17D6                            l2360 1FFC                            l2520 12B8  
                          l2512 1282                            l2504 1272                            l2440 1132  
                          l2432 112C                            l2424 1124                            l2416 10FE  
                          l2266 1F9E                            l2258 1F8A                            l2290 1E8E  
                          l2098 0E8C                            l2194 13DE                            l2186 134A  
                          l2282 1B76                            l2274 1B38                            l2338 1D1E  
                          l2354 17EA                            l2346 17A6                            l2370 2016  
                          l2362 2006                            l2522 12D4                            l2514 128E  
                          l2506 1278                            l2450 1138                            l2442 1138  
                          l2434 112E                            l2426 1126                            l2418 110A  
                          l2268 1FA0                            l2292 1E92                            l2188 134E  
                          l2276 1B4A                            l2356 17FA                            l2348 17B2  
                          l2364 2008                            l2524 12DA                            l2516 129A  
                          l2460 1168                            l2452 1154                            l2444 1138  
                          l2436 1130                            l2428 1128                            l2294 1E48  
                          l2286 1E7C                            l2198 1416                            l2278 1B52  
                          l2358 180E                            l2366 2012                            l2526 12E0  
                          l2518 12B2                            l2470 11B4                            l2462 1174  
                          l2446 1138                            l2438 1132                            l2296 1E4C  
                          l2288 1E80                            l2368 2014                            l2480 11D6  
                          l2464 118C                            l2528 12EC                            l2448 1138  
                          l2298 1E56                            l2482 11EE                            l2466 1192  
                          l2458 115C                            l2484 11F4                            l2476 11BE  
                          l2468 11AE                            l1950 189C                            l2494 1220  
                          l2486 1210                            l2478 11CA                            l1952 18A6  
                          l1960 1CCA                            l2496 122C                            l2488 1216  
                          l1954 18C4                            l1946 1878                            l1962 1CD6  
                          l1970 1E1E                            l2498 1238                            l1980 14BE  
                          l1956 18FA                            l1948 188A                            l1964 1CE8  
                          l1972 1E22                            l1990 151E                            l1982 14CC  
                          l1966 1CEC                            l1974 1E3A                            ?_pad 0011  
                          l1992 1522                            l1984 14EC                            l1968 1E12  
                          l1994 152E                            l1986 14F0                            l1978 14BA  
                          l1996 154C                            l1988 14FE                            l1998 1554  
                          STR_1 0E01                            STR_2 0E0A                            u1000 19DA  
                          u1001 19D6                            u1010 1DEC                            u1011 1DE8  
                          u1020 1FC4                            u1100 0EE2                            u1021 1FC0  
                          u1101 0EDE                            u1030 1FDA                            u1110 100C  
                          u1031 1FD6                            u1111 1008                            u1120 102A  
                          u1040 0E42                            u1121 1026                            u1041 0E3C  
                          u1130 1044                            u1050 0E44                            u1210 132A  
                          u1131 1040                            u1211 1326                            u1140 105E  
                          u1060 0E5A                            u1220 1372                            u1141 105A  
                          u1061 0E56                            u1221 136E                            u1150 106E  
                          u1070 0E8A                            u1230 1396                            u1151 106A  
                          u1071 0E86                            u1231 1392                            u1208 1D7C  
                          u1160 1080                            u1080 0EA6                            u1240 143A  
                          u1320 11AE                            u1161 107C                            u1081 0EA2  
                          u1241 1436                            u1321 11AA                            u1250 202C  
                          u1170 1090                            u1090 0ED4                            u1330 1210  
                          u1251 2028                            u1171 108C                            u1091 0ED0  
                          u1331 120C                            u1180 10A8                            u1260 1AD0  
                          u1340 1272                            u1181 10A4                            u1261 1ACC  
                          u1341 126E                            u1190 1D7A                            u1270 1EAA  
                          u1350 12D4                            u1191 1D72                            u1271 1EA6  
                          u1351 12D0                            u1407 1242                            u1360 12FE  
                  _BAUD4CONbits 000EE9                            u1361 12FA                            u1417 12A4  
                          _LATE 000F7D                            u1427 1E5C                            _LATG 000F7F  
                          u1437 1EEA                            u1447 1F16                            u1457 1F42  
                          u1377 1142                            _T2PR 000FBC                            u1467 1F6E  
                          u1387 117E                            u1397 11E0                            abs@a 0013  
                          _dbuf 013C                            _main 10F6                            _dtoa 0E12  
                          _prec 00F6                            _nout 00F2                            pad@i 0018  
                          pad@p 0015                            fsr1h 000FE2                            fsr2h 000FDA  
                          indf2 000FDF                            fsr1l 000FE1                            pad@w 001A  
                          fsr2l 000FD9                            start 0000                  ?_color_display 0058  
        __end_of_color_read_Red 1BDA                    ___param_bank 000000                  ?_color_predict 0001  
                         ??_abs 0015                           ??_pad 0017                 __end_of___aodiv 1642  
                  main@complete 015C                           ?_main 0001                           ?_dtoa 001C  
               __end_of___aomod 17A6                           _ADPCH 000F5F                           _LED_B 1F5E  
                         _LED_C 1F32                           _LED_G 1F06                           _LED_R 1EDA  
                  vfpfcnvrt@fmt 0042         __end_of_sendCharSerial4 2032      __end_of_I2C_2_Master_Start 2052  
    __end_of_I2C_2_Master_Write 203E                           _flags 00F8                           _color 00FA  
                         _fputc 1878                           _fputs 1CCA                           pad@fp 0011  
                         _width 00F4                           _putch 205C                           main@i 015D  
                         main@j 015F                           main@k 0161                           dtoa@d 001E  
                         dtoa@i 003E                           main@x 0163                           dtoa@n 0036  
                         dtoa@p 0030                           dtoa@s 0034                           dtoa@w 0032  
                         tablat 000FF5                           status 000FD8                 __end_of_sprintf 1B8A  
              color_display@buf 0079         __end_of_color_read_Blue 1CCA           _I2C_2_Master_RepStart 2052  
               ?_color_read_Red 0005                 __initialization 1D92                    __end_of_main 1306  
                  __end_of_dtoa 10F6                          ??_main 005A                          ??_dtoa 0026  
                 __activetblptr 000001                          ?_LED_B 000E                          ?_LED_C 000E  
                        ?_LED_G 000E                          ?_LED_R 000E                          LED_B@m 000E  
                        LED_C@m 000E                          LED_G@m 000E                          LED_R@m 000E  
        _initDCmotors_parameter 17A6                          ?_fputc 0001                          ?_fputs 000A  
                        _ADRESH 000F64                          ?_putch 0001                          _RC0PPS 000E62  
                        _RC4REG 000EE3                          _RE2PPS 000E74                          _RD5PPS 000E6F  
                        _RC7PPS 000E69                          _RD6PPS 000E70        __end_of_color_click_init 1E7C  
                        _RX4PPS 000E15                          _TX4REG 000EE4                 ??_color_display 005A  
               ??_color_predict 0058                    vfprintf@cfmt 0056                       ??___aodiv 0011  
                     ??___aomod 0011                          clear_0 1DAA                          clear_1 1DB6  
                        isa$std 000001                          pad@buf 0013                          dtoa@fp 001C  
                        _strlen 1E12                          fputc@c 0001                          fputs@c 000E  
                        fputs@i 000F                          fputs@s 000A                    __mediumconst 0000  
                        tblptrh 000FF7                          tblptrl 000FF6                          tblptru 000FF8  
              ?_sendCharSerial4 0001                          putch@c 0001                __end_of_vfprintf 1ADA  
             ??_initDCmotorsPWM 0003                       ??_sprintf 0058                      __accesstop 0060  
       __end_of__initialization 1DC4        __end_of_color_read_Clear 1C7A        __end_of_color_read_Green 1C2A  
        ?_I2C_2_Master_RepStart 0001              color_predict@color 00DD    initDCmotors_parameter@motorL 0001  
  initDCmotors_parameter@motorR 0003                   ___rparam_used 000001                   __end_of_LED_B 1F8A  
                 __end_of_LED_C 1F5E                   __end_of_LED_G 1F32                   __end_of_LED_R 1F06  
              ?_color_read_Blue 0005                  __pcstackCOMRAM 0001                    __pidataBANK0 205E  
                 __end_of_fputc 1942                   __end_of_fputs 1D0E                   __end_of_putch 205E  
                       ??_LED_B 0010                         ??_LED_C 0010                         ??_LED_G 0010  
                       ??_LED_R 0010                         ??_fputc 0005                         ??_fputs 000E  
                       ??_putch 0001                      __pbssBANK0 00DE                      __pbssBANK1 0100  
              color_predict@buf 0079               _color_writetoaddr 1FDC                    _T2CLKCONbits 000FBF  
            ?_color_writetoaddr 0003             ??_color_writetoaddr 0004                         ?_strlen 0001  
                       _SP4BRGH 000EE6                         _SP4BRGL 000EE5                         _PWM6DCH 000FA3  
                       _PWM7DCH 000FA0                         _SSP2ADD 000ED6                         _SSP2BUF 000ED5  
        color_writetoaddr@value 0003                ??_color_read_Red 0007       __end_of_color_writetoaddr 1FFC  
                     _ADREFbits 000F58              _I2C_2_Master_Start 2048                      _initUSART4 1FFC  
            _I2C_2_Master_Write 2032                         __Hparam 0000                         __Lparam 0000  
             color_read_Red@tmp 000A               __end_of_get_color 1B38         sendStringSerial4@string 0002  
                       ___aodiv 14BA                         ___aomod 1642             ?_I2C_2_Master_Start 0001  
           ?_I2C_2_Master_Write 0001                       ?_vfprintf 0050                    __psmallconst 0E00  
                       __pcinit 1D92                         __ramtop 0E00                         __ptext0 10F6  
                       __ptext1 1FFC                         __ptext2 17A6                         __ptext3 1D0E  
                       __ptext4 1EAC                         __ptext5 1A08                         __ptext6 1B38  
                       __ptext7 1A78                         __ptext8 1306                         __ptext9 0E12  
       ?_initDCmotors_parameter 0001                       _T2CONbits 000FBD                       _T2HLTbits 000FBE  
                 _RxBufWriteCnt 005F                         _sprintf 1B38                         main@rgb 0179  
          ??_I2C_2_Master_Start 0002            ??_I2C_2_Master_Write 0002            end_of_initialization 1DC4  
                       fputc@fp 0003                         fputs@fp 000C               ?_color_click_init 0001  
            ??_color_click_init 0005               __end_of_vfpfcnvrt 14BA                         postdec2 000FDD  
                       postinc0 000FEE                         postinc1 000FE6                         postinc2 000FDE  
                    ??_vfprintf 0056                         strlen@a 0003                         strlen@s 0001  
               _initDCmotorsPWM 1D0E  __end_of_initDCmotors_parameter 1878                       _TRISAbits 000F81  
                     _TRISCbits 000F83                       _TRISDbits 000F84                       _TRISEbits 000F85  
                     _TRISFbits 000F86                       _TRISGbits 000F87        color_writetoaddr@address 0004  
                    get_color@m 000C         ??_I2C_2_Master_RepStart 0002               ?_color_read_Clear 0005  
                  _EUSART4RXbuf 00DE                    _EUSART4TXbuf 0100               ?_color_read_Green 0005  
                   ?_initUSART4 0001       sendCharSerial4@charToSend 0001           __end_of_color_display 1A78  
                    main@motorL 0165                      main@motorR 016F              ??_color_read_Clear 0007  
                color_display@m 0058              ??_color_read_Green 0007           __end_of_color_predict 1EDA  
                   vfpfcnvrt@ap 0044                     vfpfcnvrt@fp 0040                     vfpfcnvrt@ll 0048  
                __end_of_strlen 1E48             color_read_Clear@tmp 000A             start_initialization 1D92  
                   __end_of_abs 1E12                     __end_of_pad 1A08                   _TxBufWriteCnt 005D  
           color_read_Green@tmp 000A         __end_of_initDCmotorsPWM 1D50                     vfprintf@fmt 0052  
                   __pdataBANK0 00FA                        ??_strlen 0003                     __pbssCOMRAM 005C  
                 __pcstackBANK0 0060                   __pcstackBANK1 015C                ___aodiv@dividend 0001  
                     _dtoa$2127 002E                        ?___aodiv 0001                        ?___aomod 0001  
              ___aodiv@quotient 0013                       _get_color 1ADA            I2C_2_Master_Read@ack 0003  
          I2C_2_Master_Read@tmp 0004                     __smallconst 0E00               _I2C_2_Master_Idle 1FB4  
             _I2C_2_Master_Init 1F8A               _I2C_2_Master_Read 1D50               _I2C_2_Master_Stop 203E  
                  _RxBufReadCnt 005E              ?_I2C_2_Master_Idle 0001              ?_I2C_2_Master_Init 0001  
            ?_I2C_2_Master_Read 0001              ?_I2C_2_Master_Stop 0001        initDCmotorsPWM@PWMperiod 0001  
                      ?_sprintf 0060               _sendStringSerial4 1E7C             ??_I2C_2_Master_Idle 0001  
           ??_I2C_2_Master_Init 0001             ??_I2C_2_Master_Read 0002                        _LATAbits 000F79  
           ??_I2C_2_Master_Stop 0002                        _LATCbits 000F7B                        _LATEbits 000F7D  
                      _LATFbits 000F7E                        _LATGbits 000F7F              ?_sendStringSerial4 0002  
                      _PIE4bits 000E2D                        _PIR4bits 000E37                ?_initDCmotorsPWM 0001  
             ??_sendCharSerial4 0001                        _SSP2CON2 000EDA             ??_sendStringSerial4 0004  
                      _SSP2STAT 000ED8                       _vfpfcnvrt 1306                      ?_get_color 000C  
                    _ADCON0bits 000F60       __end_of_I2C_2_Master_Idle 1FDC       __end_of_I2C_2_Master_Init 1FB4  
     __end_of_I2C_2_Master_Read 1D92       __end_of_I2C_2_Master_Stop 2048     I2C_2_Master_Write@data_byte 0002  
             ??_color_read_Blue 0007                    _TxBufReadCnt 005C       __end_of_sendStringSerial4 1EAC  
 __end_of_I2C_2_Master_RepStart 205C              color_read_Blue@tmp 000A                    ??_initUSART4 0001  
                      __Hrparam 0000                      vfprintf@ap 0054                        __Lrparam 0000  
                    vfprintf@fp 0050                    __Lsmallconst 0E00                      ?_vfpfcnvrt 0040  
               ___aodiv@divisor 0009                 ___aodiv@counter 0011                      _ANSELDbits 000EA7  
                    _ANSELFbits 000EB4                      sprintf@fmt 0062              __end_of_initUSART4 201A  
                      __ptext10 1942                        __ptext11 1E12                        __ptext20 1E48  
                      __ptext12 1CCA                        __ptext21 1FDC                        __ptext13 1878  
                      __ptext30 1C2A                        __ptext22 1F8A                        __ptext14 205C  
                      __ptext31 1C7A                        __ptext23 1EDA                        __ptext15 1DD2  
                      __ptext32 2032                        __ptext24 1F06                        __ptext16 1642  
                      __ptext33 203E                        __ptext25 1F32                        __ptext17 14BA  
                      __ptext34 2048                        __ptext26 1F5E                        __ptext18 1E7C  
                      __ptext35 2052                        __ptext27 1ADA                        __ptext19 201A  
                      __ptext36 1D50                        __ptext28 1B8A                        __ptext37 1FB4  
                      __ptext29 1BDA                    _SSP2CON1bits 000ED9                    _SSP2CON2bits 000EDA  
                      isa$xinst 000000                      _RC4STAbits 000EE7                        _vfprintf 1A78  
                   ??_get_color 000E                ___aomod@dividend 0001                     _PWM6CONbits 000FA4  
                   _PWM7CONbits 000FA1                       sprintf@ap 006C        ??_initDCmotors_parameter 0005  
               ___aomod@divisor 0009                     ??_vfpfcnvrt 0046                 ___aomod@counter 0011  
              _color_click_init 1E48                        sprintf@f 006E                        sprintf@s 0060  
                    _SSP2DATPPS 000E1D                      _SSP2CLKPPS 000E1C                      _TX4STAbits 000EE8  
                  ___aodiv@sign 0012                 _sendCharSerial4 201A                    ___aomod@sign 0012  
                 _color_display 1A08  
