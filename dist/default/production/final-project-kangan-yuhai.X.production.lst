

Microchip MPLAB XC8 Assembler V2.35 build 20211206165544 
                                                                                               Mon Mar 14 21:13:14 2022

Microchip MPLAB XC8 C Compiler v2.35 (Free license) build 20211206165544 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    17                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    18                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    19                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    20                           	psect	text0,global,reloc=2,class=CODE,delta=1
    21                           	psect	text1,global,reloc=2,class=CODE,delta=1
    22                           	psect	text2,global,reloc=2,class=CODE,delta=1
    23                           	psect	text3,global,reloc=2,class=CODE,delta=1
    24                           	psect	text4,global,reloc=2,class=CODE,delta=1
    25                           	psect	text5,global,reloc=2,class=CODE,delta=1
    26                           	psect	text6,global,reloc=2,class=CODE,delta=1
    27                           	psect	text7,global,reloc=2,class=CODE,delta=1
    28                           	psect	text8,global,reloc=2,class=CODE,delta=1
    29                           	psect	text9,global,reloc=2,class=CODE,delta=1
    30                           	psect	text10,global,reloc=2,class=CODE,delta=1
    31                           	psect	text11,global,reloc=2,class=CODE,delta=1
    32                           	psect	text12,global,reloc=2,class=CODE,delta=1
    33                           	psect	text13,global,reloc=2,class=CODE,delta=1
    34                           	psect	text14,global,reloc=2,class=CODE,delta=1
    35                           	psect	text15,global,reloc=2,class=CODE,delta=1
    36                           	psect	text16,global,reloc=2,class=CODE,delta=1
    37                           	psect	text17,global,reloc=2,class=CODE,delta=1
    38                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=3
    39                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=3
    40                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    45                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    46                           	psect	text26,global,reloc=2,class=CODE,delta=1
    47                           	psect	text27,global,reloc=2,class=CODE,delta=1
    48                           	psect	text28,global,reloc=2,class=CODE,delta=1
    49                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=2
    50                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    51                           	psect	text31,global,reloc=2,class=CODE,delta=1
    52                           	psect	text32,global,reloc=2,class=CODE,delta=1
    53                           	psect	text33,global,reloc=2,class=CODE,delta=1
    54                           	psect	text34,global,reloc=2,class=CODE,delta=1
    55                           	psect	text35,global,reloc=2,class=CODE,delta=1
    56                           	psect	text36,global,reloc=2,class=CODE,delta=1
    57                           	psect	text37,global,reloc=2,class=CODE,delta=1
    58                           	psect	text38,global,reloc=2,class=CODE,delta=1
    59                           	psect	text39,global,reloc=2,class=CODE,delta=1
    60                           	psect	text40,global,reloc=2,class=CODE,delta=1
    61                           	psect	text41,global,reloc=2,class=CODE,delta=1
    62                           	psect	text42,global,reloc=2,class=CODE,delta=1
    63                           	psect	text43,global,reloc=2,class=CODE,delta=1
    64                           	psect	text44,global,reloc=2,class=CODE,delta=1
    65                           	psect	text45,global,reloc=2,class=CODE,delta=1
    66                           	psect	text46,global,reloc=2,class=CODE,delta=1
    67                           	psect	text47,global,reloc=2,class=CODE,delta=1
    68                           	psect	text48,global,reloc=2,class=CODE,delta=1
    69                           	psect	text49,global,reloc=2,class=CODE,delta=1
    70                           	psect	text50,global,reloc=2,class=CODE,delta=1
    71                           	psect	text51,global,reloc=2,class=CODE,delta=1
    72                           	psect	text52,global,reloc=2,class=CODE,delta=1
    73                           	psect	text53,global,reloc=2,class=CODE,delta=1
    74                           	psect	text54,global,reloc=2,class=CODE,delta=1
    75                           	psect	text55,global,reloc=2,class=CODE,delta=1
    76                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=2
    77                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=2
    78                           	psect	text58,global,reloc=2,class=CODE,delta=1
    79                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=3
    80                           	psect	text60,global,reloc=2,class=CODE,delta=1,group=1
    81                           	psect	text61,global,reloc=2,class=CODE,delta=1,group=1
    82                           	psect	text62,global,reloc=2,class=CODE,delta=1,group=1
    83                           	psect	text63,global,reloc=2,class=CODE,delta=1,group=1
    84                           	psect	text64,global,reloc=2,class=CODE,delta=1,group=3
    85                           	psect	text65,global,reloc=2,class=CODE,delta=1,group=3
    86                           	psect	text66,global,reloc=2,class=CODE,delta=1,group=3
    87                           	psect	text67,global,reloc=2,class=CODE,delta=1,group=3
    88                           	psect	text68,global,reloc=2,class=CODE,delta=1,group=3
    89                           	psect	text69,global,reloc=2,class=CODE,delta=1,group=2
    90                           	psect	text70,global,reloc=2,class=CODE,delta=1,group=2
    91                           	psect	text71,global,reloc=2,class=CODE,delta=1
    92                           	psect	text72,global,reloc=2,class=CODE,delta=1
    93                           	psect	text73,global,reloc=2,class=CODE,delta=1
    94                           	psect	text74,global,reloc=2,class=CODE,delta=1
    95                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    96                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    97                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    98                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    99                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
   100                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
   101  0000                     
   102                           ; Version 2.35
   103                           ; Generated 05/05/2021 GMT
   104                           ; 
   105                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
   106                           ; All rights reserved.
   107                           ; 
   108                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   109                           ; 
   110                           ; Redistribution and use in source and binary forms, with or without modification, are
   111                           ; permitted provided that the following conditions are met:
   112                           ; 
   113                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   114                           ;        conditions and the following disclaimer.
   115                           ; 
   116                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   117                           ;        of conditions and the following disclaimer in the documentation and/or other
   118                           ;        materials provided with the distribution. Publication is not required when
   119                           ;        this file is used in an embedded application.
   120                           ; 
   121                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   122                           ;        software without specific prior written permission.
   123                           ; 
   124                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   125                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   126                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   127                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   128                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   129                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   130                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   131                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   132                           ; 
   133                           ; 
   134                           ; Code-generator required, PIC18F67K40 Definitions
   135                           ; 
   136                           ; SFR Addresses
   137  0000                     
   138                           	psect	idataBANK0
   139  005B2A                     __pidataBANK0:
   140                           	callstack 0
   141                           
   142                           ;initializer for _SENSITIVITY
   143  005B2A  0A                 	db	10
   144                           
   145                           ;initializer for _CALIBRATION_135
   146  005B2B  0F                 	db	15
   147                           
   148                           	psect	idataBANK1
   149  005B2E                     __pidataBANK1:
   150                           	callstack 0
   151                           
   152                           ;initializer for _CALIBRATION_180
   153  005B2E  0A                 	db	10
   154                           
   155                           	psect	smallconst
   156  000E00                     __psmallconst:
   157                           	callstack 0
   158  000E00  00                 	db	0
   159  000E01  0000               	dw	0
   160  000E03  4B00               	dw	19200
   161  000E05                     __end_of_toint:
   162                           	callstack 0
   163  0000                     _TX4REG	set	3812
   164  0000                     _RC4STAbits	set	3815
   165  0000                     _SP4BRGH	set	3814
   166  0000                     _LATEbits	set	3965
   167  0000                     _TRISGbits	set	3975
   168  0000                     _TRISEbits	set	3973
   169  0000                     _LATGbits	set	3967
   170  0000                     _LATFbits	set	3966
   171  0000                     _TRISFbits	set	3974
   172  0000                     _SSP2CON2bits	set	3802
   173  0000                     _LATG	set	3967
   174  0000                     _LATE	set	3965
   175  0000                     _RX4PPS	set	3605
   176  0000                     _SSP2CLKPPS	set	3612
   177  0000                     _SSP2DATPPS	set	3613
   178  0000                     _ANSELDbits	set	3751
   179  0000                     _SSP2ADD	set	3798
   180  0000                     _SSP2CON1bits	set	3801
   181  0000                     _LATAbits	set	3961
   182  0000                     _LATDbits	set	3964
   183  0000                     _LATHbits	set	3968
   184  0000                     _TRISDbits	set	3972
   185  0000                     _TRISHbits	set	3976
   186  0000                     _PORTFbits	set	3982
   187  0000                     _T2PR	set	4028
   188  0000                     _T2CONbits	set	4029
   189  0000                     _PWM7DCH	set	4000
   190  0000                     _PWM6DCH	set	4003
   191  0000                     _TRISAbits	set	3969
   192  0000                     _TRISCbits	set	3971
   193  0000                     _LATCbits	set	3963
   194  0000                     _RC4REG	set	3811
   195  0000                     _SP4BRGL	set	3813
   196  0000                     _TX4STAbits	set	3816
   197  0000                     _BAUD4CONbits	set	3817
   198  0000                     _SSP2CON2	set	3802
   199  0000                     _SSP2STAT	set	3800
   200  0000                     _ANSELFbits	set	3764
   201  0000                     _SSP2BUF	set	3797
   202  0000                     _PIE0bits	set	3625
   203  0000                     _PIE4bits	set	3629
   204  0000                     _PIR4bits	set	3639
   205  0000                     _RC0PPS	set	3682
   206  0000                     _RC7PPS	set	3689
   207  0000                     _RD5PPS	set	3695
   208  0000                     _RE2PPS	set	3700
   209  0000                     _RD6PPS	set	3696
   210  0000                     _TMR0L	set	4051
   211  0000                     _TMR0H	set	4052
   212  0000                     _T0CON0bits	set	4053
   213  0000                     _T2CLKCONbits	set	4031
   214  0000                     _T2HLTbits	set	4030
   215  0000                     _PWM6CONbits	set	4004
   216  0000                     _PWM7CONbits	set	4001
   217  0000                     _PIR0bits	set	3635
   218  0000                     _T0CON1bits	set	4054
   219  0000                     _INTCONbits	set	4082
   220  000E05                     STR_6:
   221                           
   222                           ; BSR set to: 14
   223  000E05  67                 	db	103	;'g'
   224  000E06  6F                 	db	111	;'o'
   225  000E07  20                 	db	32
   226  000E08  62                 	db	98	;'b'
   227  000E09  61                 	db	97	;'a'
   228  000E0A  63                 	db	99	;'c'
   229  000E0B  6B                 	db	107	;'k'
   230  000E0C  20                 	db	32
   231  000E0D  66                 	db	102	;'f'
   232  000E0E  69                 	db	105	;'i'
   233  000E0F  6E                 	db	110	;'n'
   234  000E10  69                 	db	105	;'i'
   235  000E11  73                 	db	115	;'s'
   236  000E12  68                 	db	104	;'h'
   237  000E13  0D                 	db	13
   238  000E14  0A                 	db	10
   239  000E15  00                 	db	0
   240  000E16                     STR_1:
   241                           
   242                           ; BSR set to: 14
   243  000E16  25                 	db	37
   244  000E17  64                 	db	100	;'d'
   245  000E18  09                 	db	9
   246  000E19  25                 	db	37
   247  000E1A  64                 	db	100	;'d'
   248  000E1B  09                 	db	9
   249  000E1C  25                 	db	37
   250  000E1D  64                 	db	100	;'d'
   251  000E1E  09                 	db	9
   252  000E1F  25                 	db	37
   253  000E20  64                 	db	100	;'d'
   254  000E21  0D                 	db	13
   255  000E22  0A                 	db	10
   256  000E23  00                 	db	0
   257  000E24                     STR_3:
   258                           
   259                           ; BSR set to: 14
   260  000E24  72                 	db	114	;'r'
   261  000E25  65                 	db	101	;'e'
   262  000E26  73                 	db	115	;'s'
   263  000E27  75                 	db	117	;'u'
   264  000E28  6C                 	db	108	;'l'
   265  000E29  74                 	db	116	;'t'
   266  000E2A  3A                 	db	58	;':'
   267  000E2B  20                 	db	32
   268  000E2C  25                 	db	37
   269  000E2D  64                 	db	100	;'d'
   270  000E2E  0D                 	db	13
   271  000E2F  0A                 	db	10
   272  000E30  00                 	db	0
   273  000E31                     STR_4:
   274                           
   275                           ; BSR set to: 14
   276  000E31  67                 	db	103	;'g'
   277  000E32  6F                 	db	111	;'o'
   278  000E33  20                 	db	32
   279  000E34  62                 	db	98	;'b'
   280  000E35  61                 	db	97	;'a'
   281  000E36  63                 	db	99	;'c'
   282  000E37  6B                 	db	107	;'k'
   283  000E38  0D                 	db	13
   284  000E39  0A                 	db	10
   285  000E3A  00                 	db	0
   286  000E3B                     STR_5:
   287                           
   288                           ; BSR set to: 14
   289  000E3B  72                 	db	114	;'r'
   290  000E3C  65                 	db	101	;'e'
   291  000E3D  70                 	db	112	;'p'
   292  000E3E  65                 	db	101	;'e'
   293  000E3F  61                 	db	97	;'a'
   294  000E40  74                 	db	116	;'t'
   295  000E41  0D                 	db	13
   296  000E42  0A                 	db	10
   297  000E43  00                 	db	0
   298  000E44  00                 	db	0	; dummy byte at the end
   299  0000                     
   300                           ; #config settings
   301                           
   302                           	psect	cinit
   303  0052F0                     __pcinit:
   304                           	callstack 0
   305  0052F0                     start_initialization:
   306                           	callstack 0
   307  0052F0                     __initialization:
   308                           	callstack 0
   309                           
   310                           ; Initialize objects allocated to BANK1 (1 bytes)
   311                           ; load TBLPTR registers with __pidataBANK1
   312  0052F0  0E2E               	movlw	low __pidataBANK1
   313  0052F2  6EF6               	movwf	tblptrl,c
   314  0052F4  0E5B               	movlw	high __pidataBANK1
   315  0052F6  6EF7               	movwf	tblptrh,c
   316  0052F8  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   317  0052FA  6EF8               	movwf	tblptru,c
   318  0052FC  0009               	tblrd		*+	;fetch initializer
   319  0052FE  CFF5 F1FA          	movff	tablat,__pdataBANK1
   320                           
   321                           ; Initialize objects allocated to BANK0 (2 bytes)
   322                           ; load TBLPTR registers with __pidataBANK0
   323  005302  0E2A               	movlw	low __pidataBANK0
   324  005304  6EF6               	movwf	tblptrl,c
   325  005306  0E5B               	movlw	high __pidataBANK0
   326  005308  6EF7               	movwf	tblptrh,c
   327  00530A  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   328  00530C  6EF8               	movwf	tblptru,c
   329  00530E  0009               	tblrd		*+	;fetch initializer
   330  005310  CFF5 F0FE          	movff	tablat,__pdataBANK0
   331  005314  0009               	tblrd		*+	;fetch initializer
   332  005316  CFF5 F0FF          	movff	tablat,__pdataBANK0+1
   333                           
   334                           ; Clear objects allocated to BANK3 (108 bytes)
   335  00531A  EE03  F000         	lfsr	0,__pbssBANK3
   336  00531E  0E6C               	movlw	108
   337  005320                     clear_0:
   338  005320  6AEE               	clrf	postinc0,c
   339  005322  06E8               	decf	wreg,f,c
   340  005324  E1FD               	bnz	clear_0
   341                           
   342                           ; Clear objects allocated to BANK2 (32 bytes)
   343  005326  EE02  F0C9         	lfsr	0,__pbssBANK2
   344  00532A  0E20               	movlw	32
   345  00532C                     clear_1:
   346  00532C  6AEE               	clrf	postinc0,c
   347  00532E  06E8               	decf	wreg,f,c
   348  005330  E1FD               	bnz	clear_1
   349                           
   350                           ; Clear objects allocated to BANK1 (50 bytes)
   351  005332  EE01  F0C8         	lfsr	0,__pbssBANK1
   352  005336  0E32               	movlw	50
   353  005338                     clear_2:
   354  005338  6AEE               	clrf	postinc0,c
   355  00533A  06E8               	decf	wreg,f,c
   356  00533C  E1FD               	bnz	clear_2
   357                           
   358                           ; Clear objects allocated to BANK0 (6 bytes)
   359  00533E  0100               	movlb	0
   360  005340  6BFD               	clrf	(__pbssBANK0+5)& (0+255),b
   361  005342  6BFC               	clrf	(__pbssBANK0+4)& (0+255),b
   362  005344  6BFB               	clrf	(__pbssBANK0+3)& (0+255),b
   363  005346  6BFA               	clrf	(__pbssBANK0+2)& (0+255),b
   364  005348  6BF9               	clrf	(__pbssBANK0+1)& (0+255),b
   365  00534A  6BF8               	clrf	__pbssBANK0& (0+255),b
   366  00534C                     end_of_initialization:
   367                           	callstack 0
   368  00534C                     __end_of__initialization:
   369                           	callstack 0
   370  00534C  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   371  00534E  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   372  005350  0E00               	movlw	low (__Lsmallconst shr (0+16))
   373  005352  6EF8               	movwf	tblptru,c
   374  005354  0E0E               	movlw	high __Lsmallconst
   375  005356  6EF7               	movwf	tblptrh,c
   376  005358  0100               	movlb	0
   377  00535A  EF44  F01C         	goto	_main	;jump to C main() function
   378                           
   379                           	psect	bssBANK0
   380  0000F8                     __pbssBANK0:
   381                           	callstack 0
   382  0000F8                     _flags:
   383                           	callstack 0
   384  0000F8                     	ds	2
   385  0000FA                     _TxBufReadCnt:
   386                           	callstack 0
   387  0000FA                     	ds	1
   388  0000FB                     _TxBufWriteCnt:
   389                           	callstack 0
   390  0000FB                     	ds	1
   391  0000FC                     _RxBufReadCnt:
   392                           	callstack 0
   393  0000FC                     	ds	1
   394  0000FD                     _RxBufWriteCnt:
   395                           	callstack 0
   396  0000FD                     	ds	1
   397                           
   398                           	psect	dataBANK0
   399  0000FE                     __pdataBANK0:
   400                           	callstack 0
   401  0000FE                     _SENSITIVITY:
   402                           	callstack 0
   403  0000FE                     	ds	1
   404  0000FF                     _CALIBRATION_135:
   405                           	callstack 0
   406  0000FF                     	ds	1
   407                           
   408                           	psect	bssBANK1
   409  0001C8                     __pbssBANK1:
   410                           	callstack 0
   411  0001C8                     _EUSART4RXbuf:
   412                           	callstack 0
   413  0001C8                     	ds	20
   414  0001DC                     _motorR:
   415                           	callstack 0
   416  0001DC                     	ds	10
   417  0001E6                     _motorL:
   418                           	callstack 0
   419  0001E6                     	ds	10
   420  0001F0                     roundf@F527:
   421                           	callstack 0
   422  0001F0                     	ds	4
   423  0001F4                     _nout:
   424                           	callstack 0
   425  0001F4                     	ds	2
   426  0001F6                     _width:
   427                           	callstack 0
   428  0001F6                     	ds	2
   429  0001F8                     _prec:
   430                           	callstack 0
   431  0001F8                     	ds	2
   432                           
   433                           	psect	dataBANK1
   434  0001FA                     __pdataBANK1:
   435                           	callstack 0
   436  0001FA                     _CALIBRATION_180:
   437                           	callstack 0
   438  0001FA                     	ds	1
   439                           
   440                           	psect	bssBANK2
   441  0002C9                     __pbssBANK2:
   442                           	callstack 0
   443  0002C9                     _dbuf:
   444                           	callstack 0
   445  0002C9                     	ds	32
   446                           
   447                           	psect	bssBANK3
   448  000300                     __pbssBANK3:
   449                           	callstack 0
   450  000300                     _EUSART4TXbuf:
   451                           	callstack 0
   452  000300                     	ds	60
   453  00033C                     _memory:
   454                           	callstack 0
   455  00033C                     	ds	40
   456  000364                     _stop_move:
   457                           	callstack 0
   458  000364                     	ds	2
   459  000366                     _start_move:
   460                           	callstack 0
   461  000366                     	ds	2
   462  000368                     _centisecond:
   463                           	callstack 0
   464  000368                     	ds	2
   465  00036A                     _color:
   466                           	callstack 0
   467  00036A                     	ds	1
   468  00036B                     _array_index:
   469                           	callstack 0
   470  00036B                     	ds	1
   471                           
   472                           	psect	cstackBANK3
   473  00036C                     __pcstackBANK3:
   474                           	callstack 0
   475  00036C                     main@amb:
   476                           	callstack 0
   477                           
   478                           ; 8 bytes @ 0x0
   479  00036C                     	ds	8
   480  000374                     main@amb_light:
   481                           	callstack 0
   482                           
   483                           ; 2 bytes @ 0x8
   484  000374                     	ds	2
   485  000376                     main@stop_signal:
   486                           	callstack 0
   487                           
   488                           ; 1 bytes @ 0xA
   489  000376                     	ds	1
   490  000377                     main@rgb:
   491                           	callstack 0
   492                           
   493                           ; 8 bytes @ 0xB
   494  000377                     	ds	8
   495  00037F                     main@white:
   496                           	callstack 0
   497                           
   498                           ; 28 bytes @ 0x13
   499  00037F                     	ds	28
   500  00039B                     main@motorL:
   501                           	callstack 0
   502                           
   503                           ; 10 bytes @ 0x2F
   504  00039B                     	ds	10
   505  0003A5                     main@motorR:
   506                           	callstack 0
   507                           
   508                           ; 10 bytes @ 0x39
   509  0003A5                     	ds	10
   510                           
   511                           	psect	cstackBANK2
   512  000200                     __pcstackBANK2:
   513                           	callstack 0
   514  000200                     goback@buf2:
   515                           	callstack 0
   516                           
   517                           ; 100 bytes @ 0x0
   518  000200                     	ds	100
   519  000264                     action@buf:
   520                           	callstack 0
   521                           
   522                           ; 100 bytes @ 0x64
   523  000264                     	ds	100
   524  0002C8                     action@color:
   525                           	callstack 0
   526                           
   527                           ; 1 bytes @ 0xC8
   528  0002C8                     	ds	1
   529                           
   530                           	psect	cstackBANK1
   531  000100                     __pcstackBANK1:
   532                           	callstack 0
   533  000100                     goback@buf:
   534                           	callstack 0
   535                           
   536                           ; 100 bytes @ 0x0
   537  000100                     	ds	100
   538  000164                     goback@buf3:
   539                           	callstack 0
   540                           
   541                           ; 100 bytes @ 0x64
   542  000164                     	ds	100
   543                           
   544                           	psect	cstackBANK0
   545  000060                     __pcstackBANK0:
   546                           	callstack 0
   547  000060                     ??___fltol:
   548  000060                     ?_sprintf:
   549                           	callstack 0
   550  000060                     sprintf@s:
   551                           	callstack 0
   552                           
   553                           ; 2 bytes @ 0x0
   554  000060                     	ds	2
   555  000062                     sprintf@fmt:
   556                           	callstack 0
   557                           
   558                           ; 2 bytes @ 0x2
   559  000062                     	ds	2
   560  000064                     ___fltol@sign1:
   561                           	callstack 0
   562                           
   563                           ; 1 bytes @ 0x4
   564  000064                     	ds	1
   565  000065                     ___fltol@exp1:
   566                           	callstack 0
   567                           
   568                           ; 1 bytes @ 0x5
   569  000065                     	ds	1
   570  000066                     ?_lroundf:
   571                           	callstack 0
   572  000066                     lroundf@x:
   573                           	callstack 0
   574                           
   575                           ; 4 bytes @ 0x6
   576  000066                     	ds	4
   577  00006A                     ?_amb_light_measure:
   578                           	callstack 0
   579  00006A                     compare@lower:
   580                           	callstack 0
   581  00006A                     amb_light_measure@amb:
   582                           	callstack 0
   583  00006A                     distance_measure@mL:
   584                           	callstack 0
   585                           
   586                           ; 2 bytes @ 0xA
   587  00006A                     	ds	2
   588  00006C                     ??_amb_light_measure:
   589  00006C                     compare@value2compare:
   590                           	callstack 0
   591  00006C                     distance_measure@mR:
   592                           	callstack 0
   593  00006C                     sprintf@ap:
   594                           	callstack 0
   595                           
   596                           ; 2 bytes @ 0xC
   597  00006C                     	ds	2
   598  00006E                     compare@upper:
   599                           	callstack 0
   600  00006E                     amb_light_measure@upper_bound:
   601                           	callstack 0
   602  00006E                     distance_measure@amb_light:
   603                           	callstack 0
   604  00006E                     sprintf@f:
   605                           	callstack 0
   606                           
   607                           ; 11 bytes @ 0xE
   608  00006E                     	ds	2
   609  000070                     ??_distance_measure:
   610  000070                     compare@result:
   611                           	callstack 0
   612  000070                     amb_light_measure@CC_amb_ave:
   613                           	callstack 0
   614                           
   615                           ; 2 bytes @ 0x10
   616  000070                     	ds	1
   617  000071                     detect_color@m:
   618                           	callstack 0
   619                           
   620                           ; 2 bytes @ 0x11
   621  000071                     	ds	1
   622  000072                     amb_light_measure@CC_amb_1:
   623                           	callstack 0
   624  000072                     distance_measure@CG_amb:
   625                           	callstack 0
   626                           
   627                           ; 2 bytes @ 0x12
   628  000072                     	ds	1
   629  000073                     detect_color@w:
   630                           	callstack 0
   631                           
   632                           ; 2 bytes @ 0x13
   633  000073                     	ds	1
   634  000074                     amb_light_measure@CC_amb_2:
   635                           	callstack 0
   636  000074                     _distance_measure$3276:
   637                           	callstack 0
   638                           
   639                           ; 4 bytes @ 0x14
   640  000074                     	ds	1
   641  000075                     ??_detect_color:
   642                           
   643                           ; 1 bytes @ 0x15
   644  000075                     	ds	1
   645  000076                     amb_light_measure@CC_amb_3:
   646                           	callstack 0
   647                           
   648                           ; 2 bytes @ 0x16
   649  000076                     	ds	2
   650  000078                     distance_measure@CC_amb:
   651                           	callstack 0
   652                           
   653                           ; 2 bytes @ 0x18
   654  000078                     	ds	1
   655  000079                     detect_color@RG:
   656                           	callstack 0
   657  000079                     color_display@buf:
   658                           	callstack 0
   659  000079                     color_predict@buf:
   660                           	callstack 0
   661                           
   662                           ; 100 bytes @ 0x19
   663  000079                     	ds	1
   664  00007A                     distance_measure@threshold:
   665                           	callstack 0
   666                           
   667                           ; 2 bytes @ 0x1A
   668  00007A                     	ds	1
   669  00007B                     detect_color@BC:
   670                           	callstack 0
   671                           
   672                           ; 2 bytes @ 0x1B
   673  00007B                     	ds	1
   674  00007C                     distance_measure@stop:
   675                           	callstack 0
   676                           
   677                           ; 1 bytes @ 0x1C
   678  00007C                     	ds	1
   679  00007D                     detect_color@GR:
   680                           	callstack 0
   681                           
   682                           ; 2 bytes @ 0x1D
   683  00007D                     	ds	2
   684  00007F                     detect_color@BB:
   685                           	callstack 0
   686                           
   687                           ; 2 bytes @ 0x1F
   688  00007F                     	ds	2
   689  000081                     detect_color@RB:
   690                           	callstack 0
   691                           
   692                           ; 2 bytes @ 0x21
   693  000081                     	ds	2
   694  000083                     detect_color@GB:
   695                           	callstack 0
   696                           
   697                           ; 2 bytes @ 0x23
   698  000083                     	ds	2
   699  000085                     detect_color@BR:
   700                           	callstack 0
   701                           
   702                           ; 2 bytes @ 0x25
   703  000085                     	ds	2
   704  000087                     detect_color@GG:
   705                           	callstack 0
   706                           
   707                           ; 2 bytes @ 0x27
   708  000087                     	ds	2
   709  000089                     detect_color@color:
   710                           	callstack 0
   711                           
   712                           ; 1 bytes @ 0x29
   713  000089                     	ds	1
   714  00008A                     detect_color@RR:
   715                           	callstack 0
   716                           
   717                           ; 2 bytes @ 0x2A
   718  00008A                     	ds	2
   719  00008C                     detect_color@BG:
   720                           	callstack 0
   721                           
   722                           ; 2 bytes @ 0x2C
   723  00008C                     	ds	2
   724  00008E                     _detect_color$3275:
   725                           	callstack 0
   726                           
   727                           ; 4 bytes @ 0x2E
   728  00008E                     	ds	4
   729  000092                     verify_color@m:
   730                           	callstack 0
   731                           
   732                           ; 2 bytes @ 0x32
   733  000092                     	ds	2
   734  000094                     verify_color@w:
   735                           	callstack 0
   736                           
   737                           ; 2 bytes @ 0x34
   738  000094                     	ds	2
   739  000096                     ??_verify_color:
   740                           
   741                           ; 1 bytes @ 0x36
   742  000096                     	ds	2
   743  000098                     verify_color@color2:
   744                           	callstack 0
   745                           
   746                           ; 2 bytes @ 0x38
   747  000098                     	ds	2
   748  00009A                     verify_color@color:
   749                           	callstack 0
   750                           
   751                           ; 1 bytes @ 0x3A
   752  00009A                     	ds	67
   753  0000DD                     color_predict@color:
   754                           	callstack 0
   755                           
   756                           ; 1 bytes @ 0x7D
   757  0000DD                     	ds	1
   758  0000DE                     color_data_collection@i:
   759                           	callstack 0
   760  0000DE                     goback@i:
   761                           	callstack 0
   762                           
   763                           ; 2 bytes @ 0x7E
   764  0000DE                     	ds	2
   765  0000E0                     color_data_collection@j:
   766                           	callstack 0
   767  0000E0                     action@mL:
   768                           	callstack 0
   769                           
   770                           ; 2 bytes @ 0x80
   771  0000E0                     	ds	2
   772  0000E2                     color_data_collection@k:
   773                           	callstack 0
   774  0000E2                     action@mR:
   775                           	callstack 0
   776                           
   777                           ; 2 bytes @ 0x82
   778  0000E2                     	ds	2
   779  0000E4                     color_data_collection@x:
   780                           	callstack 0
   781                           
   782                           ; 2 bytes @ 0x84
   783  0000E4                     	ds	2
   784  0000E6                     test_function@m:
   785                           	callstack 0
   786                           
   787                           ; 2 bytes @ 0x86
   788  0000E6                     	ds	2
   789  0000E8                     test_function@w:
   790                           	callstack 0
   791                           
   792                           ; 2 bytes @ 0x88
   793  0000E8                     	ds	2
   794  0000EA                     test_function@mL:
   795                           	callstack 0
   796                           
   797                           ; 2 bytes @ 0x8A
   798  0000EA                     	ds	2
   799  0000EC                     test_function@mR:
   800                           	callstack 0
   801                           
   802                           ; 2 bytes @ 0x8C
   803  0000EC                     	ds	2
   804  0000EE                     ??_test_function:
   805                           
   806                           ; 1 bytes @ 0x8E
   807  0000EE                     	ds	2
   808  0000F0                     test_function@amb_light:
   809                           	callstack 0
   810                           
   811                           ; 2 bytes @ 0x90
   812  0000F0                     	ds	2
   813  0000F2                     test_function@complete:
   814                           	callstack 0
   815                           
   816                           ; 1 bytes @ 0x92
   817  0000F2                     	ds	1
   818  0000F3                     test_function@color:
   819                           	callstack 0
   820                           
   821                           ; 1 bytes @ 0x93
   822  0000F3                     	ds	1
   823  0000F4                     test_function@stop_signal:
   824                           	callstack 0
   825                           
   826                           ; 1 bytes @ 0x94
   827  0000F4                     	ds	1
   828  0000F5                     test_function@test_code:
   829                           	callstack 0
   830                           
   831                           ; 1 bytes @ 0x95
   832  0000F5                     	ds	1
   833  0000F6                     ??_main:
   834                           
   835                           ; 1 bytes @ 0x96
   836  0000F6                     	ds	2
   837                           
   838                           	psect	cstackCOMRAM
   839  000001                     __pcstackCOMRAM:
   840                           	callstack 0
   841  000001                     ??_LED_OFF:
   842  000001                     ??_LED_R:
   843  000001                     ??_LED_C:
   844  000001                     ??_LED_B:
   845  000001                     ??_LED_G:
   846  000001                     ??_I2C_2_Master_Idle:
   847  000001                     ?_strlen:
   848                           	callstack 0
   849  000001                     ?___wmul:
   850                           	callstack 0
   851  000001                     ?___fladd:
   852                           	callstack 0
   853  000001                     ?___flneg:
   854                           	callstack 0
   855  000001                     ?___xxtofl:
   856                           	callstack 0
   857  000001                     ?___aodiv:
   858                           	callstack 0
   859  000001                     ?___aomod:
   860                           	callstack 0
   861  000001                     toggle_light@toggletime:
   862                           	callstack 0
   863  000001                     sendCharSerial4@charToSend:
   864                           	callstack 0
   865  000001                     initDCmotorsPWM@PWMperiod:
   866                           	callstack 0
   867  000001                     initDCmotors_parameter@motorL:
   868                           	callstack 0
   869  000001                     ___wmul@multiplier:
   870                           	callstack 0
   871  000001                     fputc@c:
   872                           	callstack 0
   873  000001                     strlen@s:
   874                           	callstack 0
   875  000001                     ___flge@ff1:
   876                           	callstack 0
   877  000001                     ___flneg@f1:
   878                           	callstack 0
   879  000001                     ___fladd@b:
   880                           	callstack 0
   881  000001                     ___xxtofl@val:
   882                           	callstack 0
   883  000001                     ___aodiv@dividend:
   884                           	callstack 0
   885  000001                     ___aomod@dividend:
   886                           	callstack 0
   887                           
   888                           ; 8 bytes @ 0x0
   889  000001                     	ds	1
   890  000002                     ??_I2C_2_Master_Read:
   891  000002                     ??_toggle_light:
   892  000002                     I2C_2_Master_Write@data_byte:
   893                           	callstack 0
   894  000002                     sendStringSerial4@string:
   895                           	callstack 0
   896                           
   897                           ; 2 bytes @ 0x1
   898  000002                     	ds	1
   899  000003                     color_writetoaddr@value:
   900                           	callstack 0
   901  000003                     I2C_2_Master_Read@ack:
   902                           	callstack 0
   903  000003                     initDCmotors_parameter@motorR:
   904                           	callstack 0
   905  000003                     ___wmul@multiplicand:
   906                           	callstack 0
   907  000003                     fputc@fp:
   908                           	callstack 0
   909  000003                     strlen@a:
   910                           	callstack 0
   911                           
   912                           ; 2 bytes @ 0x2
   913  000003                     	ds	1
   914  000004                     toggle_light@i:
   915                           	callstack 0
   916  000004                     color_writetoaddr@address:
   917                           	callstack 0
   918  000004                     I2C_2_Master_Read@tmp:
   919                           	callstack 0
   920                           
   921                           ; 1 bytes @ 0x3
   922  000004                     	ds	1
   923  000005                     ??_fputc:
   924  000005                     ??_color_click_init:
   925  000005                     ??___xxtofl:
   926  000005                     ?_color_read_Red:
   927                           	callstack 0
   928  000005                     ?_color_read_Blue:
   929                           	callstack 0
   930  000005                     ?_color_read_Green:
   931                           	callstack 0
   932  000005                     ?_color_read_Clear:
   933                           	callstack 0
   934  000005                     toggle_light@lightnumber:
   935                           	callstack 0
   936  000005                     ___wmul@product:
   937                           	callstack 0
   938  000005                     ___flge@ff2:
   939                           	callstack 0
   940  000005                     ___fladd@a:
   941                           	callstack 0
   942                           
   943                           ; 4 bytes @ 0x4
   944  000005                     	ds	2
   945  000007                     ??_color_read_Red:
   946  000007                     ??_color_read_Blue:
   947  000007                     ??_color_read_Green:
   948  000007                     ??_color_read_Clear:
   949  000007                     ?___awdiv:
   950                           	callstack 0
   951  000007                     ___awdiv@dividend:
   952                           	callstack 0
   953                           
   954                           ; 2 bytes @ 0x6
   955  000007                     	ds	2
   956  000009                     ??___fladd:
   957  000009                     ??___flge:
   958  000009                     ___xxtofl@sign:
   959                           	callstack 0
   960  000009                     ___awdiv@divisor:
   961                           	callstack 0
   962  000009                     ___aodiv@divisor:
   963                           	callstack 0
   964  000009                     ___aomod@divisor:
   965                           	callstack 0
   966                           
   967                           ; 8 bytes @ 0x8
   968  000009                     	ds	1
   969  00000A                     ___xxtofl@exp:
   970                           	callstack 0
   971  00000A                     color_read_Red@tmp:
   972                           	callstack 0
   973  00000A                     color_read_Blue@tmp:
   974                           	callstack 0
   975  00000A                     color_read_Green@tmp:
   976                           	callstack 0
   977  00000A                     color_read_Clear@tmp:
   978                           	callstack 0
   979  00000A                     fputs@s:
   980                           	callstack 0
   981                           
   982                           ; 2 bytes @ 0x9
   983  00000A                     	ds	1
   984  00000B                     ___awdiv@counter:
   985                           	callstack 0
   986  00000B                     ___xxtofl@arg:
   987                           	callstack 0
   988                           
   989                           ; 4 bytes @ 0xA
   990  00000B                     	ds	1
   991  00000C                     ___awdiv@sign:
   992                           	callstack 0
   993  00000C                     read_color@m:
   994                           	callstack 0
   995  00000C                     calibrate_white@w:
   996                           	callstack 0
   997  00000C                     fputs@fp:
   998                           	callstack 0
   999                           
  1000                           ; 2 bytes @ 0xB
  1001  00000C                     	ds	1
  1002  00000D                     ___fladd@signs:
  1003                           	callstack 0
  1004  00000D                     ___awdiv@quotient:
  1005                           	callstack 0
  1006                           
  1007                           ; 2 bytes @ 0xC
  1008  00000D                     	ds	1
  1009  00000E                     ??_calibrate_white:
  1010  00000E                     ___fladd@aexp:
  1011                           	callstack 0
  1012  00000E                     fputs@c:
  1013                           	callstack 0
  1014                           
  1015                           ; 1 bytes @ 0xD
  1016  00000E                     	ds	1
  1017  00000F                     ?___fldiv:
  1018                           	callstack 0
  1019  00000F                     ___fladd@bexp:
  1020                           	callstack 0
  1021  00000F                     setMotorPWM@m:
  1022                           	callstack 0
  1023  00000F                     fputs@i:
  1024                           	callstack 0
  1025  00000F                     ___fldiv@b:
  1026                           	callstack 0
  1027                           
  1028                           ; 4 bytes @ 0xE
  1029  00000F                     	ds	1
  1030  000010                     ___fladd@grs:
  1031                           	callstack 0
  1032                           
  1033                           ; 1 bytes @ 0xF
  1034  000010                     	ds	1
  1035  000011                     ??_setMotorPWM:
  1036  000011                     ?_pad:
  1037                           	callstack 0
  1038  000011                     ?___flsub:
  1039                           	callstack 0
  1040  000011                     ___aodiv@counter:
  1041                           	callstack 0
  1042  000011                     ___aomod@counter:
  1043                           	callstack 0
  1044  000011                     pad@fp:
  1045                           	callstack 0
  1046  000011                     ___flsub@b:
  1047                           	callstack 0
  1048                           
  1049                           ; 4 bytes @ 0x10
  1050  000011                     	ds	1
  1051  000012                     ___aodiv@sign:
  1052                           	callstack 0
  1053  000012                     ___aomod@sign:
  1054                           	callstack 0
  1055                           
  1056                           ; 1 bytes @ 0x11
  1057  000012                     	ds	1
  1058  000013                     ?_abs:
  1059                           	callstack 0
  1060  000013                     pad@buf:
  1061                           	callstack 0
  1062  000013                     abs@a:
  1063                           	callstack 0
  1064  000013                     ___fldiv@a:
  1065                           	callstack 0
  1066  000013                     ___aodiv@quotient:
  1067                           	callstack 0
  1068                           
  1069                           ; 8 bytes @ 0x12
  1070  000013                     	ds	2
  1071  000015                     ??_abs:
  1072  000015                     pad@p:
  1073                           	callstack 0
  1074  000015                     ___flsub@a:
  1075                           	callstack 0
  1076                           
  1077                           ; 4 bytes @ 0x14
  1078  000015                     	ds	2
  1079  000017                     ??___fldiv:
  1080  000017                     ??_pad:
  1081                           
  1082                           ; 1 bytes @ 0x16
  1083  000017                     	ds	1
  1084  000018                     setMotorPWM@PWMduty:
  1085                           	callstack 0
  1086  000018                     pad@i:
  1087                           	callstack 0
  1088                           
  1089                           ; 2 bytes @ 0x17
  1090  000018                     	ds	1
  1091  000019                     
  1092                           ; 1 bytes @ 0x18
  1093  000019                     	ds	1
  1094  00001A                     stop@mL:
  1095                           	callstack 0
  1096  00001A                     fullSpeedAhead@mL:
  1097                           	callstack 0
  1098  00001A                     pad@w:
  1099                           	callstack 0
  1100                           
  1101                           ; 2 bytes @ 0x19
  1102  00001A                     	ds	1
  1103  00001B                     ___fldiv@rem:
  1104                           	callstack 0
  1105                           
  1106                           ; 4 bytes @ 0x1A
  1107  00001B                     	ds	1
  1108  00001C                     ?_dtoa:
  1109                           	callstack 0
  1110  00001C                     stop@mR:
  1111                           	callstack 0
  1112  00001C                     fullSpeedAhead@mR:
  1113                           	callstack 0
  1114  00001C                     dtoa@fp:
  1115                           	callstack 0
  1116                           
  1117                           ; 2 bytes @ 0x1B
  1118  00001C                     	ds	2
  1119  00001E                     ??_stop:
  1120  00001E                     ??_fullSpeedAhead:
  1121  00001E                     dtoa@d:
  1122                           	callstack 0
  1123                           
  1124                           ; 8 bytes @ 0x1D
  1125  00001E                     	ds	1
  1126  00001F                     ___fldiv@sign:
  1127                           	callstack 0
  1128                           
  1129                           ; 1 bytes @ 0x1E
  1130  00001F                     	ds	1
  1131  000020                     turnLeft@mL:
  1132                           	callstack 0
  1133  000020                     turnRight@mL:
  1134                           	callstack 0
  1135  000020                     fullSpeedBack@mL:
  1136                           	callstack 0
  1137  000020                     short_burst_back@mL:
  1138                           	callstack 0
  1139  000020                     ___fldiv@new_exp:
  1140                           	callstack 0
  1141                           
  1142                           ; 2 bytes @ 0x1F
  1143  000020                     	ds	2
  1144  000022                     turnLeft@mR:
  1145                           	callstack 0
  1146  000022                     turnRight@mR:
  1147                           	callstack 0
  1148  000022                     fullSpeedBack@mR:
  1149                           	callstack 0
  1150  000022                     short_burst_back@mR:
  1151                           	callstack 0
  1152  000022                     ___fldiv@grs:
  1153                           	callstack 0
  1154                           
  1155                           ; 4 bytes @ 0x21
  1156  000022                     	ds	2
  1157  000024                     ??_short_burst_back:
  1158  000024                     ??_fullSpeedBack:
  1159  000024                     turnLeft@angle_left:
  1160                           	callstack 0
  1161  000024                     turnRight@angle_right:
  1162                           	callstack 0
  1163                           
  1164                           ; 1 bytes @ 0x23
  1165  000024                     	ds	1
  1166  000025                     ??_turnLeft:
  1167  000025                     ??_turnRight:
  1168                           
  1169                           ; 1 bytes @ 0x24
  1170  000025                     	ds	1
  1171  000026                     ??_dtoa:
  1172  000026                     ___fldiv@bexp:
  1173                           	callstack 0
  1174  000026                     turnLeft@delay_135:
  1175                           	callstack 0
  1176  000026                     turnRight@delay_135:
  1177                           	callstack 0
  1178  000026                     short_reverse@mL:
  1179                           	callstack 0
  1180  000026                     reverse_square@mL:
  1181                           	callstack 0
  1182                           
  1183                           ; 2 bytes @ 0x25
  1184  000026                     	ds	1
  1185  000027                     ___fldiv@aexp:
  1186                           	callstack 0
  1187                           
  1188                           ; 1 bytes @ 0x26
  1189  000027                     	ds	1
  1190  000028                     ?___flmul:
  1191                           	callstack 0
  1192  000028                     turnLeft@delay_180:
  1193                           	callstack 0
  1194  000028                     turnRight@delay_180:
  1195                           	callstack 0
  1196  000028                     short_reverse@mR:
  1197                           	callstack 0
  1198  000028                     reverse_square@mR:
  1199                           	callstack 0
  1200  000028                     ___flmul@b:
  1201                           	callstack 0
  1202                           
  1203                           ; 4 bytes @ 0x27
  1204  000028                     	ds	2
  1205  00002A                     ??_short_reverse:
  1206  00002A                     ??_reverse_square:
  1207  00002A                     turnLeft@i:
  1208                           	callstack 0
  1209  00002A                     turnRight@i:
  1210                           	callstack 0
  1211                           
  1212                           ; 2 bytes @ 0x29
  1213  00002A                     	ds	2
  1214  00002C                     turnLeft@i_1332:
  1215                           	callstack 0
  1216  00002C                     turnRight@i_1357:
  1217                           	callstack 0
  1218  00002C                     ___flmul@a:
  1219                           	callstack 0
  1220                           
  1221                           ; 4 bytes @ 0x2B
  1222  00002C                     	ds	2
  1223  00002E                     turnLeft@i_1333:
  1224                           	callstack 0
  1225  00002E                     turnRight@i_1358:
  1226                           	callstack 0
  1227  00002E                     _dtoa$2910:
  1228                           	callstack 0
  1229                           
  1230                           ; 2 bytes @ 0x2D
  1231  00002E                     	ds	2
  1232  000030                     ??___flmul:
  1233  000030                     turnLeft@delay:
  1234                           	callstack 0
  1235  000030                     turnRight@delay:
  1236                           	callstack 0
  1237  000030                     dtoa@p:
  1238                           	callstack 0
  1239                           
  1240                           ; 2 bytes @ 0x2F
  1241  000030                     	ds	2
  1242  000032                     dtoa@w:
  1243                           	callstack 0
  1244                           
  1245                           ; 2 bytes @ 0x31
  1246  000032                     	ds	2
  1247  000034                     ___flmul@sign:
  1248                           	callstack 0
  1249  000034                     dtoa@s:
  1250                           	callstack 0
  1251                           
  1252                           ; 2 bytes @ 0x33
  1253  000034                     	ds	1
  1254  000035                     ___flmul@grs:
  1255                           	callstack 0
  1256                           
  1257                           ; 4 bytes @ 0x34
  1258  000035                     	ds	1
  1259  000036                     dtoa@n:
  1260                           	callstack 0
  1261                           
  1262                           ; 8 bytes @ 0x35
  1263  000036                     	ds	3
  1264  000039                     ___flmul@aexp:
  1265                           	callstack 0
  1266                           
  1267                           ; 1 bytes @ 0x38
  1268  000039                     	ds	1
  1269  00003A                     ___flmul@bexp:
  1270                           	callstack 0
  1271                           
  1272                           ; 1 bytes @ 0x39
  1273  00003A                     	ds	1
  1274  00003B                     ___flmul@prod:
  1275                           	callstack 0
  1276                           
  1277                           ; 4 bytes @ 0x3A
  1278  00003B                     	ds	3
  1279  00003E                     dtoa@i:
  1280                           	callstack 0
  1281                           
  1282                           ; 2 bytes @ 0x3D
  1283  00003E                     	ds	1
  1284  00003F                     ___flmul@temp:
  1285                           	callstack 0
  1286                           
  1287                           ; 2 bytes @ 0x3E
  1288  00003F                     	ds	1
  1289  000040                     ?_vfpfcnvrt:
  1290                           	callstack 0
  1291  000040                     vfpfcnvrt@fp:
  1292                           	callstack 0
  1293                           
  1294                           ; 2 bytes @ 0x3F
  1295  000040                     	ds	1
  1296  000041                     ?_roundf:
  1297                           	callstack 0
  1298  000041                     roundf@x:
  1299                           	callstack 0
  1300                           
  1301                           ; 4 bytes @ 0x40
  1302  000041                     	ds	1
  1303  000042                     vfpfcnvrt@fmt:
  1304                           	callstack 0
  1305                           
  1306                           ; 2 bytes @ 0x41
  1307  000042                     	ds	2
  1308  000044                     vfpfcnvrt@ap:
  1309                           	callstack 0
  1310                           
  1311                           ; 2 bytes @ 0x43
  1312  000044                     	ds	1
  1313  000045                     ??_roundf:
  1314                           
  1315                           ; 1 bytes @ 0x44
  1316  000045                     	ds	1
  1317  000046                     ??_vfpfcnvrt:
  1318                           
  1319                           ; 1 bytes @ 0x45
  1320  000046                     	ds	2
  1321  000048                     vfpfcnvrt@ll:
  1322                           	callstack 0
  1323                           
  1324                           ; 8 bytes @ 0x47
  1325  000048                     	ds	1
  1326  000049                     _roundf$3278:
  1327                           	callstack 0
  1328                           
  1329                           ; 4 bytes @ 0x48
  1330  000049                     	ds	4
  1331  00004D                     roundf@e:
  1332                           	callstack 0
  1333                           
  1334                           ; 2 bytes @ 0x4C
  1335  00004D                     	ds	2
  1336  00004F                     _roundf$3277:
  1337                           	callstack 0
  1338                           
  1339                           ; 4 bytes @ 0x4E
  1340  00004F                     	ds	1
  1341  000050                     ?_vfprintf:
  1342                           	callstack 0
  1343  000050                     vfprintf@fp:
  1344                           	callstack 0
  1345                           
  1346                           ; 2 bytes @ 0x4F
  1347  000050                     	ds	2
  1348  000052                     vfprintf@fmt:
  1349                           	callstack 0
  1350                           
  1351                           ; 2 bytes @ 0x51
  1352  000052                     	ds	1
  1353  000053                     roundf@u:
  1354                           	callstack 0
  1355                           
  1356                           ; 4 bytes @ 0x52
  1357  000053                     	ds	1
  1358  000054                     vfprintf@ap:
  1359                           	callstack 0
  1360                           
  1361                           ; 2 bytes @ 0x53
  1362  000054                     	ds	2
  1363  000056                     vfprintf@cfmt:
  1364                           	callstack 0
  1365                           
  1366                           ; 2 bytes @ 0x55
  1367  000056                     	ds	1
  1368  000057                     roundf@y:
  1369                           	callstack 0
  1370                           
  1371                           ; 4 bytes @ 0x56
  1372  000057                     	ds	1
  1373  000058                     color_display@m:
  1374                           	callstack 0
  1375  000058                     goback@mL:
  1376                           	callstack 0
  1377                           
  1378                           ; 2 bytes @ 0x57
  1379  000058                     	ds	2
  1380  00005A                     color_data_collection@m:
  1381                           	callstack 0
  1382  00005A                     goback@mR:
  1383                           	callstack 0
  1384                           
  1385                           ; 2 bytes @ 0x59
  1386  00005A                     	ds	1
  1387  00005B                     ?___fltol:
  1388                           	callstack 0
  1389  00005B                     ___fltol@f1:
  1390                           	callstack 0
  1391                           
  1392                           ; 4 bytes @ 0x5A
  1393  00005B                     	ds	1
  1394  00005C                     ??_goback:
  1395  00005C                     ??_color_data_collection:
  1396                           
  1397                           ; 1 bytes @ 0x5B
  1398  00005C                     	ds	2
  1399  00005E                     
  1400                           ; 1 bytes @ 0x5D
  1401  00005E                     	ds	1
  1402  00005F                     
  1403                           ; 1 bytes @ 0x5E
  1404 ;;
  1405 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1406 ;;
  1407 ;; *************** function _main *****************
  1408 ;; Defined at:
  1409 ;;		line 29 in file "main.c"
  1410 ;; Parameters:    Size  Location     Type
  1411 ;;		None
  1412 ;; Auto vars:     Size  Location     Type
  1413 ;;  white          28   19[BANK3 ] struct white_card
  1414 ;;  motorR         10   57[BANK3 ] struct DC_motor
  1415 ;;  motorL         10   47[BANK3 ] struct DC_motor
  1416 ;;  rgb             8   11[BANK3 ] struct color_rgb
  1417 ;;  amb             8    0[BANK3 ] struct color_rgb
  1418 ;;  amb_light       2    8[BANK3 ] unsigned int 
  1419 ;;  stop_signal     1   10[BANK3 ] unsigned char 
  1420 ;; Return value:  Size  Location     Type
  1421 ;;                  1    wreg      void 
  1422 ;; Registers used:
  1423 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1424 ;; Tracked objects:
  1425 ;;		On entry : 0/0
  1426 ;;		On exit  : 0/0
  1427 ;;		Unchanged: 0/0
  1428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1429 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1430 ;;      Locals:         0       0       0       0      67       0       0       0       0       0       0       0       
      +0       0       0
  1431 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1432 ;;      Totals:         0       2       0       0      67       0       0       0       0       0       0       0       
      +0       0       0
  1433 ;;Total ram usage:       69 bytes
  1434 ;; Hardware stack levels required when called: 12
  1435 ;; This function calls:
  1436 ;;		_I2C_2_Master_Init
  1437 ;;		_Interrupts_init
  1438 ;;		_Timer0_init
  1439 ;;		_action
  1440 ;;		_amb_light_measure
  1441 ;;		_buggylight_init
  1442 ;;		_calibrate_white
  1443 ;;		_color_click_init
  1444 ;;		_color_predict
  1445 ;;		_detect_color
  1446 ;;		_distance_measure
  1447 ;;		_fullSpeedAhead
  1448 ;;		_initDCmotorsPWM
  1449 ;;		_initDCmotors_parameter
  1450 ;;		_initUSART4
  1451 ;;		_pin_init
  1452 ;;		_short_burst_back
  1453 ;;		_stop
  1454 ;;		_test_function
  1455 ;;		_verify_color
  1456 ;; This function is called by:
  1457 ;;		Startup code after reset
  1458 ;; This function uses a non-reentrant model
  1459 ;;
  1460                           
  1461                           	psect	text0
  1462  003888                     __ptext0:
  1463                           	callstack 0
  1464  003888                     _main:
  1465                           	callstack 19
  1466  003888                     
  1467                           ;main.c: 32:     I2C_2_Master_Init();
  1468  003888  EC99  F02C         	call	_I2C_2_Master_Init	;wreg free
  1469  00388C                     
  1470                           ;main.c: 33:     color_click_init();
  1471  00388C  EC50  F02C         	call	_color_click_init	;wreg free
  1472  003890                     
  1473                           ;main.c: 34:     initDCmotorsPWM(199);
  1474  003890  0E00               	movlw	0
  1475  003892  6E02               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
  1476  003894  0EC7               	movlw	199
  1477  003896  6E01               	movwf	initDCmotorsPWM@PWMperiod^0,c
  1478  003898  EC3E  F02B         	call	_initDCmotorsPWM	;wreg free
  1479  00389C                     
  1480                           ;main.c: 35:     buggylight_init();
  1481  00389C  EC6F  F02D         	call	_buggylight_init	;wreg free
  1482  0038A0                     
  1483                           ;main.c: 36:     initUSART4();
  1484  0038A0  EC45  F02D         	call	_initUSART4	;wreg free
  1485  0038A4                     
  1486                           ;main.c: 37:     Timer0_init();
  1487  0038A4  EC54  F02D         	call	_Timer0_init	;wreg free
  1488  0038A8                     
  1489                           ;main.c: 38:     Interrupts_init();
  1490  0038A8  EC80  F02D         	call	_Interrupts_init	;wreg free
  1491  0038AC                     
  1492                           ;main.c: 40:     struct color_rgb rgb, amb;;main.c: 41:     struct white_card white;;mai
      +                          n.c: 45:     struct DC_motor motorL, motorR;;main.c: 46:     pin_init();
  1493  0038AC  EC25  F02D         	call	_pin_init	;wreg free
  1494  0038B0                     
  1495                           ;main.c: 47:     initDCmotors_parameter(&motorL, &motorR);
  1496  0038B0  0E9B               	movlw	low main@motorL
  1497  0038B2  6E01               	movwf	initDCmotors_parameter@motorL^0,c
  1498  0038B4  0E03               	movlw	high main@motorL
  1499  0038B6  6E02               	movwf	(initDCmotors_parameter@motorL+1)^0,c
  1500  0038B8  0EA5               	movlw	low main@motorR
  1501  0038BA  6E03               	movwf	initDCmotors_parameter@motorR^0,c
  1502  0038BC  0E03               	movlw	high main@motorR
  1503  0038BE  6E04               	movwf	(initDCmotors_parameter@motorR+1)^0,c
  1504  0038C0  EC04  F026         	call	_initDCmotors_parameter	;wreg free
  1505  0038C4                     
  1506                           ;main.c: 49:     unsigned char stop_signal = 0;
  1507  0038C4  0E00               	movlw	0
  1508  0038C6  0103               	movlb	3	; () banked
  1509  0038C8  6F76               	movwf	main@stop_signal& (0+255),b
  1510  0038CA                     
  1511                           ; BSR set to: 3
  1512                           ;main.c: 54:         calibrate_white(&white);
  1513  0038CA  0E7F               	movlw	low main@white
  1514  0038CC  6E0C               	movwf	calibrate_white@w^0,c
  1515  0038CE  0E03               	movlw	high main@white
  1516  0038D0  6E0D               	movwf	(calibrate_white@w+1)^0,c
  1517  0038D2  EC3F  F01B         	call	_calibrate_white	;wreg free
  1518  0038D6                     
  1519                           ;main.c: 55:         amb_light = amb_light_measure(&amb);
  1520  0038D6  0E6C               	movlw	low main@amb
  1521  0038D8  0100               	movlb	0	; () banked
  1522  0038DA  6F6A               	movwf	amb_light_measure@amb& (0+255),b
  1523  0038DC  0E03               	movlw	high main@amb
  1524  0038DE  6F6B               	movwf	(amb_light_measure@amb+1)& (0+255),b
  1525  0038E0  EC6A  F024         	call	_amb_light_measure	;wreg free
  1526  0038E4  C06A  F374         	movff	?_amb_light_measure,main@amb_light
  1527  0038E8  C06B  F375         	movff	?_amb_light_measure+1,main@amb_light+1
  1528  0038EC                     l5613:
  1529                           
  1530                           ;main.c: 66:             T0CON0bits.T0EN=1;
  1531  0038EC  8ED5               	bsf	213,7,c	;volatile
  1532  0038EE                     
  1533                           ;main.c: 67:             start_move = centisecond;
  1534  0038EE  C368  F366         	movff	_centisecond,_start_move
  1535  0038F2  C369  F367         	movff	_centisecond+1,_start_move+1
  1536                           
  1537                           ;main.c: 68:             while (stop_signal == 0){
  1538  0038F6  EF98  F01C         	goto	l5621
  1539  0038FA                     l5617:
  1540                           
  1541                           ; BSR set to: 3
  1542                           ;main.c: 69:                 fullSpeedAhead(&motorL, &motorR);
  1543  0038FA  0E9B               	movlw	low main@motorL
  1544  0038FC  6E1A               	movwf	fullSpeedAhead@mL^0,c
  1545  0038FE  0E03               	movlw	high main@motorL
  1546  003900  6E1B               	movwf	(fullSpeedAhead@mL+1)^0,c
  1547  003902  0EA5               	movlw	low main@motorR
  1548  003904  6E1C               	movwf	fullSpeedAhead@mR^0,c
  1549  003906  0E03               	movlw	high main@motorR
  1550  003908  6E1D               	movwf	(fullSpeedAhead@mR+1)^0,c
  1551  00390A  ECB8  F028         	call	_fullSpeedAhead	;wreg free
  1552  00390E                     
  1553                           ;main.c: 70:                 stop_signal = distance_measure(&motorL, &motorR, amb_light)
      +                          ;
  1554  00390E  0E9B               	movlw	low main@motorL
  1555  003910  0100               	movlb	0	; () banked
  1556  003912  6F6A               	movwf	distance_measure@mL& (0+255),b
  1557  003914  0E03               	movlw	high main@motorL
  1558  003916  6F6B               	movwf	(distance_measure@mL+1)& (0+255),b
  1559  003918  0EA5               	movlw	low main@motorR
  1560  00391A  6F6C               	movwf	distance_measure@mR& (0+255),b
  1561  00391C  0E03               	movlw	high main@motorR
  1562  00391E  6F6D               	movwf	(distance_measure@mR+1)& (0+255),b
  1563  003920  C374  F06E         	movff	main@amb_light,distance_measure@amb_light
  1564  003924  C375  F06F         	movff	main@amb_light+1,distance_measure@amb_light+1
  1565  003928  ECD2  F026         	call	_distance_measure	;wreg free
  1566  00392C  0103               	movlb	3	; () banked
  1567  00392E  6F76               	movwf	main@stop_signal& (0+255),b
  1568  003930                     l5621:
  1569                           
  1570                           ;main.c: 68:             while (stop_signal == 0){
  1571  003930  0103               	movlb	3	; () banked
  1572  003932  5176               	movf	main@stop_signal& (0+255),w,b
  1573  003934  B4D8               	btfsc	status,2,c
  1574  003936  EF9F  F01C         	goto	u5691
  1575  00393A  EFA1  F01C         	goto	u5690
  1576  00393E                     u5691:
  1577  00393E  EF7D  F01C         	goto	l5617
  1578  003942                     u5690:
  1579  003942                     
  1580                           ; BSR set to: 3
  1581                           ;main.c: 72:             T0CON0bits.T0EN=0;
  1582  003942  9ED5               	bcf	213,7,c	;volatile
  1583                           
  1584                           ;main.c: 73:             stop_move = centisecond;
  1585  003944  C368  F364         	movff	_centisecond,_stop_move
  1586  003948  C369  F365         	movff	_centisecond+1,_stop_move+1
  1587  00394C                     
  1588                           ; BSR set to: 3
  1589                           ;main.c: 74:             if ((stop_move-start_move)>1){
  1590  00394C  5166               	movf	_start_move& (0+255),w,b
  1591  00394E  5D64               	subwf	_stop_move& (0+255),w,b
  1592  003950  0100               	movlb	0	; () banked
  1593  003952  6FF6               	movwf	??_main& (0+255),b
  1594  003954  0103               	movlb	3	; () banked
  1595  003956  5167               	movf	(_start_move+1)& (0+255),w,b
  1596  003958  5965               	subwfb	(_stop_move+1)& (0+255),w,b
  1597  00395A  0100               	movlb	0	; () banked
  1598  00395C  6FF7               	movwf	(??_main+1)& (0+255),b
  1599  00395E  51F7               	movf	(??_main+1)& (0+255),w,b
  1600  003960  E109               	bnz	u5700
  1601  003962  0E02               	movlw	2
  1602  003964  5DF6               	subwf	??_main& (0+255),w,b
  1603  003966  A0D8               	btfss	status,0,c
  1604  003968  EFB8  F01C         	goto	u5701
  1605  00396C  EFBA  F01C         	goto	u5700
  1606  003970                     u5701:
  1607  003970  EFE5  F01C         	goto	l5635
  1608  003974                     u5700:
  1609  003974                     
  1610                           ; BSR set to: 0
  1611                           ;main.c: 75:                 memory[array_index] = (stop_move-start_move);
  1612  003974  0103               	movlb	3	; () banked
  1613  003976  5166               	movf	_start_move& (0+255),w,b
  1614  003978  5D64               	subwf	_stop_move& (0+255),w,b
  1615  00397A  0100               	movlb	0	; () banked
  1616  00397C  6FF6               	movwf	??_main& (0+255),b
  1617  00397E  0103               	movlb	3	; () banked
  1618  003980  5167               	movf	(_start_move+1)& (0+255),w,b
  1619  003982  5965               	subwfb	(_stop_move+1)& (0+255),w,b
  1620  003984  0100               	movlb	0	; () banked
  1621  003986  6FF7               	movwf	(??_main+1)& (0+255),b
  1622  003988  0103               	movlb	3	; () banked
  1623  00398A  516B               	movf	_array_index& (0+255),w,b
  1624  00398C  0D02               	mullw	2
  1625  00398E  0E3C               	movlw	low _memory
  1626  003990  24F3               	addwf	243,w,c
  1627  003992  6ED9               	movwf	fsr2l,c
  1628  003994  0E03               	movlw	high _memory
  1629  003996  20F4               	addwfc	prodh,w,c
  1630  003998  6EDA               	movwf	fsr2h,c
  1631  00399A  C0F6  FFDE         	movff	??_main,postinc2
  1632  00399E  C0F7  FFDD         	movff	??_main+1,postdec2
  1633  0039A2                     
  1634                           ; BSR set to: 3
  1635                           ;main.c: 76:                 color_predict(array_index);
  1636  0039A2  516B               	movf	_array_index& (0+255),w,b
  1637  0039A4  EC82  F02C         	call	_color_predict
  1638  0039A8                     
  1639                           ;main.c: 77:                 color_predict(memory[array_index]);
  1640  0039A8  0103               	movlb	3	; () banked
  1641  0039AA  516B               	movf	_array_index& (0+255),w,b
  1642  0039AC  0D02               	mullw	2
  1643  0039AE  0E3C               	movlw	low _memory
  1644  0039B0  24F3               	addwf	243,w,c
  1645  0039B2  6ED9               	movwf	fsr2l,c
  1646  0039B4  0E03               	movlw	high _memory
  1647  0039B6  20F4               	addwfc	prodh,w,c
  1648  0039B8  6EDA               	movwf	fsr2h,c
  1649  0039BA  50DF               	movf	indf2,w,c
  1650  0039BC  EC82  F02C         	call	_color_predict
  1651  0039C0                     
  1652                           ;main.c: 78:                 color_predict(200);
  1653  0039C0  0EC8               	movlw	200
  1654  0039C2  EC82  F02C         	call	_color_predict
  1655  0039C6                     
  1656                           ;main.c: 79:                 array_index++;
  1657  0039C6  0103               	movlb	3	; () banked
  1658  0039C8  2B6B               	incf	_array_index& (0+255),f,b
  1659  0039CA                     l5635:
  1660                           
  1661                           ;main.c: 81:             stop(&motorL, &motorR);
  1662  0039CA  0E9B               	movlw	low main@motorL
  1663  0039CC  6E1A               	movwf	stop@mL^0,c
  1664  0039CE  0E03               	movlw	high main@motorL
  1665  0039D0  6E1B               	movwf	(stop@mL+1)^0,c
  1666  0039D2  0EA5               	movlw	low main@motorR
  1667  0039D4  6E1C               	movwf	stop@mR^0,c
  1668  0039D6  0E03               	movlw	high main@motorR
  1669  0039D8  6E1D               	movwf	(stop@mR+1)^0,c
  1670  0039DA  EC5A  F028         	call	_stop	;wreg free
  1671  0039DE                     
  1672                           ;main.c: 82:             _delay((unsigned long)((1000)*(64000000/4000.0)));
  1673  0039DE  0E52               	movlw	82
  1674  0039E0  0100               	movlb	0	; () banked
  1675  0039E2  6FF7               	movwf	(??_main+1)& (0+255),b
  1676  0039E4  0E2B               	movlw	43
  1677  0039E6  6FF6               	movwf	??_main& (0+255),b
  1678  0039E8  0E00               	movlw	0
  1679  0039EA                     u5787:
  1680  0039EA  2EE8               	decfsz	wreg,f,c
  1681  0039EC  D7FE               	bra	u5787
  1682  0039EE  2FF6               	decfsz	??_main& (0+255),f,b
  1683  0039F0  D7FC               	bra	u5787
  1684  0039F2  2FF7               	decfsz	(??_main+1)& (0+255),f,b
  1685  0039F4  D7FA               	bra	u5787
  1686  0039F6  F000               	nop	
  1687  0039F8                     
  1688                           ;main.c: 83:             short_burst_back(&motorL, &motorR);
  1689  0039F8  0E9B               	movlw	low main@motorL
  1690  0039FA  6E20               	movwf	short_burst_back@mL^0,c
  1691  0039FC  0E03               	movlw	high main@motorL
  1692  0039FE  6E21               	movwf	(short_burst_back@mL+1)^0,c
  1693  003A00  0EA5               	movlw	low main@motorR
  1694  003A02  6E22               	movwf	short_burst_back@mR^0,c
  1695  003A04  0E03               	movlw	high main@motorR
  1696  003A06  6E23               	movwf	(short_burst_back@mR+1)^0,c
  1697  003A08  EC5F  F02B         	call	_short_burst_back	;wreg free
  1698  003A0C                     
  1699                           ;main.c: 84:             color = detect_color(&rgb, &white);
  1700  003A0C  0E77               	movlw	low main@rgb
  1701  003A0E  0100               	movlb	0	; () banked
  1702  003A10  6F71               	movwf	detect_color@m& (0+255),b
  1703  003A12  0E03               	movlw	high main@rgb
  1704  003A14  6F72               	movwf	(detect_color@m+1)& (0+255),b
  1705  003A16  0E7F               	movlw	low main@white
  1706  003A18  6F73               	movwf	detect_color@w& (0+255),b
  1707  003A1A  0E03               	movlw	high main@white
  1708  003A1C  6F74               	movwf	(detect_color@w+1)& (0+255),b
  1709  003A1E  EC23  F007         	call	_detect_color	;wreg free
  1710  003A22  0103               	movlb	3	; () banked
  1711  003A24  6F6A               	movwf	_color& (0+255),b
  1712  003A26                     
  1713                           ; BSR set to: 3
  1714                           ;main.c: 85:             color = verify_color(color, &rgb, &white);
  1715  003A26  0E77               	movlw	low main@rgb
  1716  003A28  0100               	movlb	0	; () banked
  1717  003A2A  6F92               	movwf	verify_color@m& (0+255),b
  1718  003A2C  0E03               	movlw	high main@rgb
  1719  003A2E  6F93               	movwf	(verify_color@m+1)& (0+255),b
  1720  003A30  0E7F               	movlw	low main@white
  1721  003A32  6F94               	movwf	verify_color@w& (0+255),b
  1722  003A34  0E03               	movlw	high main@white
  1723  003A36  6F95               	movwf	(verify_color@w+1)& (0+255),b
  1724  003A38  0103               	movlb	3	; () banked
  1725  003A3A  516A               	movf	_color& (0+255),w,b
  1726  003A3C  EC02  F029         	call	_verify_color
  1727  003A40  0103               	movlb	3	; () banked
  1728  003A42  6F6A               	movwf	_color& (0+255),b
  1729  003A44                     
  1730                           ; BSR set to: 3
  1731                           ;main.c: 88:             action(color, &motorL, &motorR);
  1732  003A44  0E9B               	movlw	low main@motorL
  1733  003A46  0100               	movlb	0	; () banked
  1734  003A48  6FE0               	movwf	action@mL& (0+255),b
  1735  003A4A  0E03               	movlw	high main@motorL
  1736  003A4C  6FE1               	movwf	(action@mL+1)& (0+255),b
  1737  003A4E  0EA5               	movlw	low main@motorR
  1738  003A50  6FE2               	movwf	action@mR& (0+255),b
  1739  003A52  0E03               	movlw	high main@motorR
  1740  003A54  6FE3               	movwf	(action@mR+1)& (0+255),b
  1741  003A56  0103               	movlb	3	; () banked
  1742  003A58  516A               	movf	_color& (0+255),w,b
  1743  003A5A  ECF0  F016         	call	_action
  1744  003A5E                     
  1745                           ;main.c: 89:             color = 0;
  1746  003A5E  0E00               	movlw	0
  1747  003A60  0103               	movlb	3	; () banked
  1748  003A62  6F6A               	movwf	_color& (0+255),b
  1749  003A64                     
  1750                           ; BSR set to: 3
  1751                           ;main.c: 90:             stop_signal = 0;
  1752  003A64  0E00               	movlw	0
  1753  003A66  6F76               	movwf	main@stop_signal& (0+255),b
  1754  003A68  EF76  F01C         	goto	l5613
  1755  003A6C  EF14  F000         	goto	start
  1756  003A70                     __end_of_main:
  1757                           	callstack 0
  1758                           
  1759 ;; *************** function _verify_color *****************
  1760 ;; Defined at:
  1761 ;;		line 364 in file "color.c"
  1762 ;; Parameters:    Size  Location     Type
  1763 ;;  color           1    wreg     unsigned char 
  1764 ;;  m               2   50[BANK0 ] PTR struct color_rgb
  1765 ;;		 -> main@rgb(8), 
  1766 ;;  w               2   52[BANK0 ] PTR struct white_card
  1767 ;;		 -> main@white(28), 
  1768 ;; Auto vars:     Size  Location     Type
  1769 ;;  color           1   58[BANK0 ] unsigned char 
  1770 ;;  color2          2   56[BANK0 ] unsigned int 
  1771 ;;  color3          2    0        unsigned int 
  1772 ;; Return value:  Size  Location     Type
  1773 ;;                  1    wreg      unsigned char 
  1774 ;; Registers used:
  1775 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1776 ;; Tracked objects:
  1777 ;;		On entry : 0/0
  1778 ;;		On exit  : 0/0
  1779 ;;		Unchanged: 0/0
  1780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1781 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1782 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1783 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1784 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1785 ;;Total ram usage:        9 bytes
  1786 ;; Hardware stack levels used: 1
  1787 ;; Hardware stack levels required when called: 6
  1788 ;; This function calls:
  1789 ;;		_detect_color
  1790 ;; This function is called by:
  1791 ;;		_main
  1792 ;; This function uses a non-reentrant model
  1793 ;;
  1794                           
  1795                           	psect	text1
  1796  005204                     __ptext1:
  1797                           	callstack 0
  1798  005204                     _verify_color:
  1799                           	callstack 24
  1800                           
  1801                           ; BSR set to: 3
  1802                           ;incstack = 0
  1803                           ;verify_color@color stored from wreg
  1804  005204  0100               	movlb	0	; () banked
  1805  005206  6F9A               	movwf	verify_color@color& (0+255),b
  1806  005208                     
  1807                           ;color.c: 364: unsigned char verify_color(unsigned char color,struct color_rgb *m, struc
      +                          t white_card *w);color.c: 365: {;color.c: 366:     _delay((unsigned long)((50)*(64000000
      +                          /4000.0)));
  1808  005208  0E05               	movlw	5
  1809  00520A  0100               	movlb	0	; () banked
  1810  00520C  6F97               	movwf	(??_verify_color+1)& (0+255),b
  1811  00520E  0E0F               	movlw	15
  1812  005210  6F96               	movwf	??_verify_color& (0+255),b
  1813  005212  0EF1               	movlw	241
  1814  005214                     u5797:
  1815  005214  2EE8               	decfsz	wreg,f,c
  1816  005216  D7FE               	bra	u5797
  1817  005218  2F96               	decfsz	??_verify_color& (0+255),f,b
  1818  00521A  D7FC               	bra	u5797
  1819  00521C  2F97               	decfsz	(??_verify_color+1)& (0+255),f,b
  1820  00521E  D7FA               	bra	u5797
  1821  005220                     
  1822                           ;color.c: 367:     unsigned int color2, color3;;color.c: 368:     color2 = detect_color(
      +                          m,w);
  1823  005220  C092  F071         	movff	verify_color@m,detect_color@m
  1824  005224  C093  F072         	movff	verify_color@m+1,detect_color@m+1
  1825  005228  C094  F073         	movff	verify_color@w,detect_color@w
  1826  00522C  C095  F074         	movff	verify_color@w+1,detect_color@w+1
  1827  005230  EC23  F007         	call	_detect_color	;wreg free
  1828  005234  0100               	movlb	0	; () banked
  1829  005236  6F96               	movwf	??_verify_color& (0+255),b
  1830  005238  5196               	movf	??_verify_color& (0+255),w,b
  1831  00523A  6F98               	movwf	verify_color@color2& (0+255),b
  1832  00523C  6B99               	clrf	(verify_color@color2+1)& (0+255),b
  1833  00523E                     
  1834                           ; BSR set to: 0
  1835                           ;color.c: 369:     _delay((unsigned long)((50)*(64000000/4000.0)));
  1836  00523E  0E05               	movlw	5
  1837  005240  0100               	movlb	0	; () banked
  1838  005242  6F97               	movwf	(??_verify_color+1)& (0+255),b
  1839  005244  0E0F               	movlw	15
  1840  005246  6F96               	movwf	??_verify_color& (0+255),b
  1841  005248  0EF1               	movlw	241
  1842  00524A                     u5807:
  1843  00524A  2EE8               	decfsz	wreg,f,c
  1844  00524C  D7FE               	bra	u5807
  1845  00524E  2F96               	decfsz	??_verify_color& (0+255),f,b
  1846  005250  D7FC               	bra	u5807
  1847  005252  2F97               	decfsz	(??_verify_color+1)& (0+255),f,b
  1848  005254  D7FA               	bra	u5807
  1849  005256                     
  1850                           ;color.c: 371:     if (color == color2){return color;}
  1851  005256  0100               	movlb	0	; () banked
  1852  005258  519A               	movf	verify_color@color& (0+255),w,b
  1853  00525A  6F96               	movwf	??_verify_color& (0+255),b
  1854  00525C  6B97               	clrf	(??_verify_color+1)& (0+255),b
  1855  00525E  5198               	movf	verify_color@color2& (0+255),w,b
  1856  005260  1996               	xorwf	??_verify_color& (0+255),w,b
  1857  005262  E107               	bnz	u5421
  1858  005264  5199               	movf	(verify_color@color2+1)& (0+255),w,b
  1859  005266  1997               	xorwf	(??_verify_color+1)& (0+255),w,b
  1860  005268  A4D8               	btfss	status,2,c
  1861  00526A  EF39  F029         	goto	u5421
  1862  00526E  EF3B  F029         	goto	u5420
  1863  005272                     u5421:
  1864  005272  EF3E  F029         	goto	l5345
  1865  005276                     u5420:
  1866  005276                     
  1867                           ; BSR set to: 0
  1868  005276  519A               	movf	verify_color@color& (0+255),w,b
  1869  005278  EF3F  F029         	goto	l168
  1870  00527C                     l5345:
  1871                           
  1872                           ; BSR set to: 0
  1873                           ;color.c: 374:         return color;}
  1874  00527C  0E00               	movlw	0
  1875  00527E                     l168:
  1876                           
  1877                           ; BSR set to: 0
  1878  00527E  0012               	return		;funcret
  1879  005280                     __end_of_verify_color:
  1880                           	callstack 0
  1881                           
  1882 ;; *************** function _test_function *****************
  1883 ;; Defined at:
  1884 ;;		line 16 in file "test_and_calibration.c"
  1885 ;; Parameters:    Size  Location     Type
  1886 ;;  test_code       1    wreg     unsigned char 
  1887 ;;  m               2  134[BANK0 ] PTR struct color_rgb
  1888 ;;		 -> main@rgb(8), 
  1889 ;;  w               2  136[BANK0 ] PTR struct white_card
  1890 ;;		 -> main@white(28), 
  1891 ;;  mL              2  138[BANK0 ] PTR struct DC_motor
  1892 ;;		 -> main@motorL(10), 
  1893 ;;  mR              2  140[BANK0 ] PTR struct DC_motor
  1894 ;;		 -> main@motorR(10), 
  1895 ;; Auto vars:     Size  Location     Type
  1896 ;;  test_code       1  149[BANK0 ] unsigned char 
  1897 ;;  amb_light       2  144[BANK0 ] unsigned int 
  1898 ;;  stop_signal     1  148[BANK0 ] unsigned char 
  1899 ;;  color           1  147[BANK0 ] unsigned char 
  1900 ;;  complete        1  146[BANK0 ] unsigned char 
  1901 ;; Return value:  Size  Location     Type
  1902 ;;                  1    wreg      void 
  1903 ;; Registers used:
  1904 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1905 ;; Tracked objects:
  1906 ;;		On entry : 0/0
  1907 ;;		On exit  : 0/0
  1908 ;;		Unchanged: 0/0
  1909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1910 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1911 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1912 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1913 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1914 ;;Total ram usage:       16 bytes
  1915 ;; Hardware stack levels used: 1
  1916 ;; Hardware stack levels required when called: 11
  1917 ;; This function calls:
  1918 ;;		_LED_C
  1919 ;;		_amb_light_measure
  1920 ;;		_calibrate_white
  1921 ;;		_color_data_collection
  1922 ;;		_color_display
  1923 ;;		_color_predict
  1924 ;;		_detect_color
  1925 ;;		_distance_measure
  1926 ;;		_fullSpeedAhead
  1927 ;;		_read_color
  1928 ;;		_stop
  1929 ;; This function is called by:
  1930 ;;		_main
  1931 ;; This function uses a non-reentrant model
  1932 ;;
  1933                           
  1934                           	psect	text2
  1935  00445E                     __ptext2:
  1936                           	callstack 0
  1937  00445E                     _test_function:
  1938                           	callstack 19
  1939                           
  1940                           ; BSR set to: 0
  1941                           ;incstack = 0
  1942                           ;test_function@test_code stored from wreg
  1943  00445E  0100               	movlb	0	; () banked
  1944  004460  6FF5               	movwf	test_function@test_code& (0+255),b
  1945  004462                     
  1946                           ;test_and_calibration.c: 16: void test_function(unsigned char test_code, struct color_rg
      +                          b *m, struct white_card *w, struct DC_motor *mL, struct DC_motor *mR);test_and_calibrati
      +                          on.c: 17: {;test_and_calibration.c: 18:     unsigned char complete = 0;
  1947  004462  0E00               	movlw	0
  1948  004464  0100               	movlb	0	; () banked
  1949  004466  6FF2               	movwf	test_function@complete& (0+255),b
  1950                           
  1951                           ;test_and_calibration.c: 20:     unsigned char stop_signal = 0;
  1952  004468  0E00               	movlw	0
  1953  00446A  6FF4               	movwf	test_function@stop_signal& (0+255),b
  1954                           
  1955                           ;test_and_calibration.c: 21:     unsigned int amb_light = 0;
  1956  00446C  0E00               	movlw	0
  1957  00446E  6FF1               	movwf	(test_function@amb_light+1)& (0+255),b
  1958  004470  0E00               	movlw	0
  1959  004472  6FF0               	movwf	test_function@amb_light& (0+255),b
  1960  004474                     
  1961                           ; BSR set to: 0
  1962                           ;test_and_calibration.c: 23:     if (test_code == 2){calibrate_white(w);}
  1963  004474  0E02               	movlw	2
  1964  004476  19F5               	xorwf	test_function@test_code& (0+255),w,b
  1965  004478  A4D8               	btfss	status,2,c
  1966  00447A  EF41  F022         	goto	u5451
  1967  00447E  EF43  F022         	goto	u5450
  1968  004482                     u5451:
  1969  004482  EF49  F022         	goto	l5405
  1970  004486                     u5450:
  1971  004486                     
  1972                           ; BSR set to: 0
  1973  004486  C0E8  F00C         	movff	test_function@w,calibrate_white@w
  1974  00448A  C0E9  F00D         	movff	test_function@w+1,calibrate_white@w+1
  1975  00448E  EC3F  F01B         	call	_calibrate_white	;wreg free
  1976  004492                     l5405:
  1977                           
  1978                           ;test_and_calibration.c: 24:     if (test_code == 4){amb_light = amb_light_measure(m);}
  1979  004492  0E04               	movlw	4
  1980  004494  0100               	movlb	0	; () banked
  1981  004496  19F5               	xorwf	test_function@test_code& (0+255),w,b
  1982  004498  A4D8               	btfss	status,2,c
  1983  00449A  EF51  F022         	goto	u5461
  1984  00449E  EF53  F022         	goto	u5460
  1985  0044A2                     u5461:
  1986  0044A2  EF5D  F022         	goto	l5409
  1987  0044A6                     u5460:
  1988  0044A6                     
  1989                           ; BSR set to: 0
  1990  0044A6  C0E6  F06A         	movff	test_function@m,amb_light_measure@amb
  1991  0044AA  C0E7  F06B         	movff	test_function@m+1,amb_light_measure@amb+1
  1992  0044AE  EC6A  F024         	call	_amb_light_measure	;wreg free
  1993  0044B2  C06A  F0F0         	movff	?_amb_light_measure,test_function@amb_light
  1994  0044B6  C06B  F0F1         	movff	?_amb_light_measure+1,test_function@amb_light+1
  1995  0044BA                     l5409:
  1996                           
  1997                           ;test_and_calibration.c: 28:         if (test_code == 1){
  1998  0044BA  0100               	movlb	0	; () banked
  1999  0044BC  05F5               	decf	test_function@test_code& (0+255),w,b
  2000  0044BE  A4D8               	btfss	status,2,c
  2001  0044C0  EF64  F022         	goto	u5471
  2002  0044C4  EF66  F022         	goto	u5470
  2003  0044C8                     u5471:
  2004  0044C8  EF74  F022         	goto	l5417
  2005  0044CC                     u5470:
  2006  0044CC                     
  2007                           ; BSR set to: 0
  2008                           ;test_and_calibration.c: 29:             LED_C();
  2009  0044CC  EC15  F02D         	call	_LED_C	;wreg free
  2010  0044D0                     
  2011                           ;test_and_calibration.c: 30:             read_color(m);
  2012  0044D0  C0E6  F00C         	movff	test_function@m,read_color@m
  2013  0044D4  C0E7  F00D         	movff	test_function@m+1,read_color@m+1
  2014  0044D8  ECE0  F029         	call	_read_color	;wreg free
  2015  0044DC                     
  2016                           ;test_and_calibration.c: 31:             color_display(m);
  2017  0044DC  C0E6  F058         	movff	test_function@m,color_display@m
  2018  0044E0  C0E7  F059         	movff	test_function@m+1,color_display@m+1
  2019  0044E4  EC40  F029         	call	_color_display	;wreg free
  2020  0044E8                     l5417:
  2021                           
  2022                           ;test_and_calibration.c: 34:         if (test_code == 2){
  2023  0044E8  0E02               	movlw	2
  2024  0044EA  0100               	movlb	0	; () banked
  2025  0044EC  19F5               	xorwf	test_function@test_code& (0+255),w,b
  2026  0044EE  A4D8               	btfss	status,2,c
  2027  0044F0  EF7C  F022         	goto	u5481
  2028  0044F4  EF7E  F022         	goto	u5480
  2029  0044F8                     u5481:
  2030  0044F8  EF8D  F022         	goto	l5423
  2031  0044FC                     u5480:
  2032  0044FC                     
  2033                           ; BSR set to: 0
  2034                           ;test_and_calibration.c: 35:             color = detect_color(m,w);
  2035  0044FC  C0E6  F071         	movff	test_function@m,detect_color@m
  2036  004500  C0E7  F072         	movff	test_function@m+1,detect_color@m+1
  2037  004504  C0E8  F073         	movff	test_function@w,detect_color@w
  2038  004508  C0E9  F074         	movff	test_function@w+1,detect_color@w+1
  2039  00450C  EC23  F007         	call	_detect_color	;wreg free
  2040  004510  0100               	movlb	0	; () banked
  2041  004512  6FF3               	movwf	test_function@color& (0+255),b
  2042  004514                     
  2043                           ; BSR set to: 0
  2044                           ;test_and_calibration.c: 37:             color_predict(color);
  2045  004514  51F3               	movf	test_function@color& (0+255),w,b
  2046  004516  EC82  F02C         	call	_color_predict
  2047  00451A                     l5423:
  2048                           
  2049                           ;test_and_calibration.c: 40:         if (test_code == 3){
  2050  00451A  0E03               	movlw	3
  2051  00451C  0100               	movlb	0	; () banked
  2052  00451E  19F5               	xorwf	test_function@test_code& (0+255),w,b
  2053  004520  A4D8               	btfss	status,2,c
  2054  004522  EF95  F022         	goto	u5491
  2055  004526  EF97  F022         	goto	u5490
  2056  00452A                     u5491:
  2057  00452A  EFAA  F022         	goto	l5433
  2058  00452E                     u5490:
  2059  00452E  EFA2  F022         	goto	l5431
  2060  004532                     l5427:
  2061                           
  2062                           ; BSR set to: 0
  2063                           ;test_and_calibration.c: 42:                 color_data_collection(m);
  2064  004532  C0E6  F05A         	movff	test_function@m,color_data_collection@m
  2065  004536  C0E7  F05B         	movff	test_function@m+1,color_data_collection@m+1
  2066  00453A  ECD6  F01F         	call	_color_data_collection	;wreg free
  2067  00453E                     
  2068                           ;test_and_calibration.c: 43:                 complete = 1;
  2069  00453E  0E01               	movlw	1
  2070  004540  0100               	movlb	0	; () banked
  2071  004542  6FF2               	movwf	test_function@complete& (0+255),b
  2072  004544                     l5431:
  2073                           
  2074                           ; BSR set to: 0
  2075                           ;test_and_calibration.c: 41:             while (complete == 0){
  2076  004544  51F2               	movf	test_function@complete& (0+255),w,b
  2077  004546  B4D8               	btfsc	status,2,c
  2078  004548  EFA8  F022         	goto	u5501
  2079  00454C  EFAA  F022         	goto	u5500
  2080  004550                     u5501:
  2081  004550  EF99  F022         	goto	l5427
  2082  004554                     u5500:
  2083  004554                     l5433:
  2084                           
  2085                           ; BSR set to: 0
  2086                           ;test_and_calibration.c: 47:         if (test_code == 4){
  2087  004554  0E04               	movlw	4
  2088  004556  19F5               	xorwf	test_function@test_code& (0+255),w,b
  2089  004558  A4D8               	btfss	status,2,c
  2090  00455A  EFB1  F022         	goto	u5511
  2091  00455E  EFB3  F022         	goto	u5510
  2092  004562                     u5511:
  2093  004562  EF5D  F022         	goto	l5409
  2094  004566                     u5510:
  2095  004566  EFCF  F022         	goto	l5441
  2096  00456A                     l5437:
  2097                           
  2098                           ; BSR set to: 0
  2099                           ;test_and_calibration.c: 49:                 fullSpeedAhead(mL, mR);
  2100  00456A  C0EA  F01A         	movff	test_function@mL,fullSpeedAhead@mL
  2101  00456E  C0EB  F01B         	movff	test_function@mL+1,fullSpeedAhead@mL+1
  2102  004572  C0EC  F01C         	movff	test_function@mR,fullSpeedAhead@mR
  2103  004576  C0ED  F01D         	movff	test_function@mR+1,fullSpeedAhead@mR+1
  2104  00457A  ECB8  F028         	call	_fullSpeedAhead	;wreg free
  2105  00457E                     
  2106                           ;test_and_calibration.c: 50:                 stop_signal = distance_measure(mL, mR, amb_
      +                          light);
  2107  00457E  C0EA  F06A         	movff	test_function@mL,distance_measure@mL
  2108  004582  C0EB  F06B         	movff	test_function@mL+1,distance_measure@mL+1
  2109  004586  C0EC  F06C         	movff	test_function@mR,distance_measure@mR
  2110  00458A  C0ED  F06D         	movff	test_function@mR+1,distance_measure@mR+1
  2111  00458E  C0F0  F06E         	movff	test_function@amb_light,distance_measure@amb_light
  2112  004592  C0F1  F06F         	movff	test_function@amb_light+1,distance_measure@amb_light+1
  2113  004596  ECD2  F026         	call	_distance_measure	;wreg free
  2114  00459A  0100               	movlb	0	; () banked
  2115  00459C  6FF4               	movwf	test_function@stop_signal& (0+255),b
  2116  00459E                     l5441:
  2117                           
  2118                           ; BSR set to: 0
  2119                           ;test_and_calibration.c: 48:             while (stop_signal == 0){
  2120  00459E  51F4               	movf	test_function@stop_signal& (0+255),w,b
  2121  0045A0  B4D8               	btfsc	status,2,c
  2122  0045A2  EFD5  F022         	goto	u5521
  2123  0045A6  EFD7  F022         	goto	u5520
  2124  0045AA                     u5521:
  2125  0045AA  EFB5  F022         	goto	l5437
  2126  0045AE                     u5520:
  2127  0045AE                     
  2128                           ; BSR set to: 0
  2129                           ;test_and_calibration.c: 52:             stop(mL, mR);
  2130  0045AE  C0EA  F01A         	movff	test_function@mL,stop@mL
  2131  0045B2  C0EB  F01B         	movff	test_function@mL+1,stop@mL+1
  2132  0045B6  C0EC  F01C         	movff	test_function@mR,stop@mR
  2133  0045BA  C0ED  F01D         	movff	test_function@mR+1,stop@mR+1
  2134  0045BE  EC5A  F028         	call	_stop	;wreg free
  2135  0045C2                     
  2136                           ;test_and_calibration.c: 53:             _delay((unsigned long)((1000)*(64000000/4000.0)
      +                          ));
  2137  0045C2  0E52               	movlw	82
  2138  0045C4  0100               	movlb	0	; () banked
  2139  0045C6  6FEF               	movwf	(??_test_function+1)& (0+255),b
  2140  0045C8  0E2B               	movlw	43
  2141  0045CA  6FEE               	movwf	??_test_function& (0+255),b
  2142  0045CC  0E00               	movlw	0
  2143  0045CE                     u5817:
  2144  0045CE  2EE8               	decfsz	wreg,f,c
  2145  0045D0  D7FE               	bra	u5817
  2146  0045D2  2FEE               	decfsz	??_test_function& (0+255),f,b
  2147  0045D4  D7FC               	bra	u5817
  2148  0045D6  2FEF               	decfsz	(??_test_function+1)& (0+255),f,b
  2149  0045D8  D7FA               	bra	u5817
  2150  0045DA  F000               	nop	
  2151  0045DC                     
  2152                           ;test_and_calibration.c: 54:             stop_signal = 0;
  2153  0045DC  0E00               	movlw	0
  2154  0045DE  0100               	movlb	0	; () banked
  2155  0045E0  6FF4               	movwf	test_function@stop_signal& (0+255),b
  2156  0045E2  EF5D  F022         	goto	l5409
  2157  0045E6  0012               	return		;funcret
  2158  0045E8                     __end_of_test_function:
  2159                           	callstack 0
  2160                           
  2161 ;; *************** function _distance_measure *****************
  2162 ;; Defined at:
  2163 ;;		line 400 in file "color.c"
  2164 ;; Parameters:    Size  Location     Type
  2165 ;;  mL              2   10[BANK0 ] PTR struct DC_motor
  2166 ;;		 -> main@motorL(10), 
  2167 ;;  mR              2   12[BANK0 ] PTR struct DC_motor
  2168 ;;		 -> main@motorR(10), 
  2169 ;;  amb_light       2   14[BANK0 ] unsigned int 
  2170 ;; Auto vars:     Size  Location     Type
  2171 ;;  threshold       2   26[BANK0 ] unsigned int 
  2172 ;;  CC_amb          2   24[BANK0 ] unsigned int 
  2173 ;;  CG_amb          2   18[BANK0 ] unsigned int 
  2174 ;;  stop            1   28[BANK0 ] unsigned char 
  2175 ;; Return value:  Size  Location     Type
  2176 ;;                  1    wreg      unsigned char 
  2177 ;; Registers used:
  2178 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2179 ;; Tracked objects:
  2180 ;;		On entry : 0/0
  2181 ;;		On exit  : 0/0
  2182 ;;		Unchanged: 0/0
  2183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2184 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2185 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2186 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2187 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2188 ;;Total ram usage:       19 bytes
  2189 ;; Hardware stack levels used: 1
  2190 ;; Hardware stack levels required when called: 5
  2191 ;; This function calls:
  2192 ;;		_LED_C
  2193 ;;		___flmul
  2194 ;;		___xxtofl
  2195 ;;		_color_read_Clear
  2196 ;;		_color_read_Green
  2197 ;;		_lroundf
  2198 ;; This function is called by:
  2199 ;;		_main
  2200 ;;		_test_function
  2201 ;; This function uses a non-reentrant model
  2202 ;;
  2203                           
  2204                           	psect	text3
  2205  004DA4                     __ptext3:
  2206                           	callstack 0
  2207  004DA4                     _distance_measure:
  2208                           	callstack 24
  2209  004DA4  0E00               	movlw	0
  2210  004DA6  0100               	movlb	0	; () banked
  2211  004DA8  6F73               	movwf	(distance_measure@CG_amb+1)& (0+255),b
  2212  004DAA  0E00               	movlw	0
  2213  004DAC  6F72               	movwf	distance_measure@CG_amb& (0+255),b
  2214                           
  2215                           ;color.c: 403:     unsigned char stop = 0;
  2216  004DAE  0E00               	movlw	0
  2217  004DB0  6F7C               	movwf	distance_measure@stop& (0+255),b
  2218                           
  2219                           ;color.c: 404:     unsigned int threshold = 0;
  2220  004DB2  0E00               	movlw	0
  2221  004DB4  6F7B               	movwf	(distance_measure@threshold+1)& (0+255),b
  2222  004DB6  0E00               	movlw	0
  2223  004DB8  6F7A               	movwf	distance_measure@threshold& (0+255),b
  2224  004DBA                     
  2225                           ; BSR set to: 0
  2226                           ;color.c: 405:     LED_C();
  2227  004DBA  EC15  F02D         	call	_LED_C	;wreg free
  2228  004DBE                     
  2229                           ;color.c: 406:     _delay((unsigned long)((100)*(64000000/4000.0)));
  2230  004DBE  0E09               	movlw	9
  2231  004DC0  0100               	movlb	0	; () banked
  2232  004DC2  6F71               	movwf	(??_distance_measure+1)& (0+255),b
  2233  004DC4  0E1E               	movlw	30
  2234  004DC6  6F70               	movwf	??_distance_measure& (0+255),b
  2235  004DC8  0EE4               	movlw	228
  2236  004DCA                     u5827:
  2237  004DCA  2EE8               	decfsz	wreg,f,c
  2238  004DCC  D7FE               	bra	u5827
  2239  004DCE  2F70               	decfsz	??_distance_measure& (0+255),f,b
  2240  004DD0  D7FC               	bra	u5827
  2241  004DD2  2F71               	decfsz	(??_distance_measure+1)& (0+255),f,b
  2242  004DD4  D7FA               	bra	u5827
  2243  004DD6  F000               	nop	
  2244  004DD8                     
  2245                           ;color.c: 407:     CC_amb = color_read_Clear();
  2246  004DD8  ECB0  F02A         	call	_color_read_Clear	;wreg free
  2247  004DDC  C005  F078         	movff	?_color_read_Clear,distance_measure@CC_amb
  2248  004DE0  C006  F079         	movff	?_color_read_Clear+1,distance_measure@CC_amb+1
  2249  004DE4  EC60  F02A         	call	_color_read_Green	;wreg free
  2250  004DE8                     
  2251                           ;color.c: 409:     threshold = lroundf((float)amb_light * 1.05);
  2252  004DE8  C06E  F001         	movff	distance_measure@amb_light,___xxtofl@val
  2253  004DEC  C06F  F002         	movff	distance_measure@amb_light+1,___xxtofl@val+1
  2254  004DF0  6A03               	clrf	(___xxtofl@val+2)^0,c
  2255  004DF2  6A04               	clrf	(___xxtofl@val+3)^0,c
  2256  004DF4  0E00               	movlw	0
  2257  004DF6  EC22  F01E         	call	___xxtofl
  2258  004DFA  C001  F028         	movff	?___xxtofl,___flmul@b
  2259  004DFE  C002  F029         	movff	?___xxtofl+1,___flmul@b+1
  2260  004E02  C003  F02A         	movff	?___xxtofl+2,___flmul@b+2
  2261  004E06  C004  F02B         	movff	?___xxtofl+3,___flmul@b+3
  2262  004E0A  0E66               	movlw	102
  2263  004E0C  6E2C               	movwf	___flmul@a^0,c
  2264  004E0E  0E66               	movlw	102
  2265  004E10  6E2D               	movwf	(___flmul@a+1)^0,c
  2266  004E12  0E86               	movlw	134
  2267  004E14  6E2E               	movwf	(___flmul@a+2)^0,c
  2268  004E16  0E3F               	movlw	63
  2269  004E18  6E2F               	movwf	(___flmul@a+3)^0,c
  2270  004E1A  EC81  F00F         	call	___flmul	;wreg free
  2271  004E1E  C028  F074         	movff	?___flmul,_distance_measure$3276
  2272  004E22  C029  F075         	movff	?___flmul+1,_distance_measure$3276+1
  2273  004E26  C02A  F076         	movff	?___flmul+2,_distance_measure$3276+2
  2274  004E2A  C02B  F077         	movff	?___flmul+3,_distance_measure$3276+3
  2275  004E2E                     
  2276                           ;color.c: 409:     threshold = lroundf((float)amb_light * 1.05);
  2277  004E2E  C074  F066         	movff	_distance_measure$3276,lroundf@x
  2278  004E32  C075  F067         	movff	_distance_measure$3276+1,lroundf@x+1
  2279  004E36  C076  F068         	movff	_distance_measure$3276+2,lroundf@x+2
  2280  004E3A  C077  F069         	movff	_distance_measure$3276+3,lroundf@x+3
  2281  004E3E  ECFC  F02B         	call	_lroundf	;wreg free
  2282  004E42  C066  F07A         	movff	?_lroundf,distance_measure@threshold
  2283  004E46  C067  F07B         	movff	?_lroundf+1,distance_measure@threshold+1
  2284  004E4A                     
  2285                           ;color.c: 412:     if (CC_amb >= threshold){stop = 1;}
  2286  004E4A  0100               	movlb	0	; () banked
  2287  004E4C  517A               	movf	distance_measure@threshold& (0+255),w,b
  2288  004E4E  5D78               	subwf	distance_measure@CC_amb& (0+255),w,b
  2289  004E50  517B               	movf	(distance_measure@threshold+1)& (0+255),w,b
  2290  004E52  5979               	subwfb	(distance_measure@CC_amb+1)& (0+255),w,b
  2291  004E54  A0D8               	btfss	status,0,c
  2292  004E56  EF2F  F027         	goto	u5321
  2293  004E5A  EF31  F027         	goto	u5320
  2294  004E5E                     u5321:
  2295  004E5E  EF33  F027         	goto	l175
  2296  004E62                     u5320:
  2297  004E62                     
  2298                           ; BSR set to: 0
  2299  004E62  0E01               	movlw	1
  2300  004E64  6F7C               	movwf	distance_measure@stop& (0+255),b
  2301  004E66                     l175:
  2302                           
  2303                           ; BSR set to: 0
  2304                           ;color.c: 413:     return stop;
  2305  004E66  517C               	movf	distance_measure@stop& (0+255),w,b
  2306  004E68                     
  2307                           ; BSR set to: 0
  2308  004E68  0012               	return		;funcret
  2309  004E6A                     __end_of_distance_measure:
  2310                           	callstack 0
  2311                           
  2312 ;; *************** function _detect_color *****************
  2313 ;; Defined at:
  2314 ;;		line 290 in file "color.c"
  2315 ;; Parameters:    Size  Location     Type
  2316 ;;  m               2   17[BANK0 ] PTR struct color_rgb
  2317 ;;		 -> main@rgb(8), 
  2318 ;;  w               2   19[BANK0 ] PTR struct white_card
  2319 ;;		 -> main@white(28), 
  2320 ;; Auto vars:     Size  Location     Type
  2321 ;;  BG              2   44[BANK0 ] unsigned int 
  2322 ;;  RR              2   42[BANK0 ] unsigned int 
  2323 ;;  GG              2   39[BANK0 ] unsigned int 
  2324 ;;  BR              2   37[BANK0 ] unsigned int 
  2325 ;;  GB              2   35[BANK0 ] unsigned int 
  2326 ;;  RB              2   33[BANK0 ] unsigned int 
  2327 ;;  BB              2   31[BANK0 ] unsigned int 
  2328 ;;  GR              2   29[BANK0 ] unsigned int 
  2329 ;;  BC              2   27[BANK0 ] unsigned int 
  2330 ;;  RG              2   25[BANK0 ] unsigned int 
  2331 ;;  color           1   41[BANK0 ] unsigned char 
  2332 ;; Return value:  Size  Location     Type
  2333 ;;                  1    wreg      unsigned char 
  2334 ;; Registers used:
  2335 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2336 ;; Tracked objects:
  2337 ;;		On entry : 0/0
  2338 ;;		On exit  : 0/0
  2339 ;;		Unchanged: 0/0
  2340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2341 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2342 ;;      Locals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2343 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2344 ;;      Totals:         0      33       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2345 ;;Total ram usage:       33 bytes
  2346 ;; Hardware stack levels used: 1
  2347 ;; Hardware stack levels required when called: 5
  2348 ;; This function calls:
  2349 ;;		_LED_B
  2350 ;;		_LED_G
  2351 ;;		_LED_R
  2352 ;;		___fldiv
  2353 ;;		___flmul
  2354 ;;		___xxtofl
  2355 ;;		_compare
  2356 ;;		_lroundf
  2357 ;;		_read_color
  2358 ;;		_toggle_light
  2359 ;; This function is called by:
  2360 ;;		_verify_color
  2361 ;;		_main
  2362 ;;		_test_function
  2363 ;; This function uses a non-reentrant model
  2364 ;;
  2365                           
  2366                           	psect	text4
  2367  000E46                     __ptext4:
  2368                           	callstack 0
  2369  000E46                     _detect_color:
  2370                           	callstack 24
  2371  000E46  0E00               	movlw	0
  2372  000E48  0100               	movlb	0	; () banked
  2373  000E4A  6F7A               	movwf	(detect_color@RG+1)& (0+255),b
  2374  000E4C  0E00               	movlw	0
  2375  000E4E  6F79               	movwf	detect_color@RG& (0+255),b
  2376  000E50  0E00               	movlw	0
  2377  000E52  6F82               	movwf	(detect_color@RB+1)& (0+255),b
  2378  000E54  0E00               	movlw	0
  2379  000E56  6F81               	movwf	detect_color@RB& (0+255),b
  2380  000E58  0E00               	movlw	0
  2381  000E5A  6F7E               	movwf	(detect_color@GR+1)& (0+255),b
  2382  000E5C  0E00               	movlw	0
  2383  000E5E  6F7D               	movwf	detect_color@GR& (0+255),b
  2384  000E60  0E00               	movlw	0
  2385  000E62  6F88               	movwf	(detect_color@GG+1)& (0+255),b
  2386  000E64  0E00               	movlw	0
  2387  000E66  6F87               	movwf	detect_color@GG& (0+255),b
  2388  000E68  0E00               	movlw	0
  2389  000E6A  6F84               	movwf	(detect_color@GB+1)& (0+255),b
  2390  000E6C  0E00               	movlw	0
  2391  000E6E  6F83               	movwf	detect_color@GB& (0+255),b
  2392  000E70  0E00               	movlw	0
  2393  000E72  6F86               	movwf	(detect_color@BR+1)& (0+255),b
  2394  000E74  0E00               	movlw	0
  2395  000E76  6F85               	movwf	detect_color@BR& (0+255),b
  2396  000E78  0E00               	movlw	0
  2397  000E7A  6F8D               	movwf	(detect_color@BG+1)& (0+255),b
  2398  000E7C  0E00               	movlw	0
  2399  000E7E  6F8C               	movwf	detect_color@BG& (0+255),b
  2400  000E80  0E00               	movlw	0
  2401  000E82  6F80               	movwf	(detect_color@BB+1)& (0+255),b
  2402  000E84  0E00               	movlw	0
  2403  000E86  6F7F               	movwf	detect_color@BB& (0+255),b
  2404  000E88  0E00               	movlw	0
  2405  000E8A  6F7C               	movwf	(detect_color@BC+1)& (0+255),b
  2406  000E8C  0E00               	movlw	0
  2407  000E8E  6F7B               	movwf	detect_color@BC& (0+255),b
  2408                           
  2409                           ;color.c: 296:     unsigned char color = 0;
  2410  000E90  0E00               	movlw	0
  2411  000E92  6F89               	movwf	detect_color@color& (0+255),b
  2412  000E94                     
  2413                           ; BSR set to: 0
  2414                           ;color.c: 298:     LED_R();
  2415  000E94  ECD5  F02C         	call	_LED_R	;wreg free
  2416  000E98                     
  2417                           ;color.c: 299:     _delay((unsigned long)((100)*(64000000/4000.0)));
  2418  000E98  0E09               	movlw	9
  2419  000E9A  0100               	movlb	0	; () banked
  2420  000E9C  6F76               	movwf	(??_detect_color+1)& (0+255),b
  2421  000E9E  0E1E               	movlw	30
  2422  000EA0  6F75               	movwf	??_detect_color& (0+255),b
  2423  000EA2  0EE4               	movlw	228
  2424  000EA4                     u5837:
  2425  000EA4  2EE8               	decfsz	wreg,f,c
  2426  000EA6  D7FE               	bra	u5837
  2427  000EA8  2F75               	decfsz	??_detect_color& (0+255),f,b
  2428  000EAA  D7FC               	bra	u5837
  2429  000EAC  2F76               	decfsz	(??_detect_color+1)& (0+255),f,b
  2430  000EAE  D7FA               	bra	u5837
  2431  000EB0  F000               	nop	
  2432  000EB2                     
  2433                           ;color.c: 300:     read_color(m);
  2434  000EB2  C071  F00C         	movff	detect_color@m,read_color@m
  2435  000EB6  C072  F00D         	movff	detect_color@m+1,read_color@m+1
  2436  000EBA  ECE0  F029         	call	_read_color	;wreg free
  2437  000EBE                     
  2438                           ;color.c: 302:     RR = lroundf((float)(m->R)/(w->RR)*100); RG = lroundf((float)(m->G)/(
      +                          w->RG)*100); RB = lroundf((float)(m->B)/(w->RB)*100);
  2439  000EBE  C073  FFD9         	movff	detect_color@w,fsr2l
  2440  000EC2  C074  FFDA         	movff	detect_color@w+1,fsr2h
  2441  000EC6  CFDE F075          	movff	postinc2,??_detect_color
  2442  000ECA  CFDD F076          	movff	postdec2,??_detect_color+1
  2443  000ECE  C075  F001         	movff	??_detect_color,___xxtofl@val
  2444  000ED2  C076  F002         	movff	??_detect_color+1,___xxtofl@val+1
  2445  000ED6  6A03               	clrf	(___xxtofl@val+2)^0,c
  2446  000ED8  6A04               	clrf	(___xxtofl@val+3)^0,c
  2447  000EDA  0E00               	movlw	0
  2448  000EDC  EC22  F01E         	call	___xxtofl
  2449  000EE0  C001  F013         	movff	?___xxtofl,___fldiv@a
  2450  000EE4  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  2451  000EE8  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  2452  000EEC  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  2453  000EF0  C071  FFD9         	movff	detect_color@m,fsr2l
  2454  000EF4  C072  FFDA         	movff	detect_color@m+1,fsr2h
  2455  000EF8  CFDE F077          	movff	postinc2,??_detect_color+2
  2456  000EFC  CFDD F078          	movff	postdec2,??_detect_color+3
  2457  000F00  C077  F001         	movff	??_detect_color+2,___xxtofl@val
  2458  000F04  C078  F002         	movff	??_detect_color+3,___xxtofl@val+1
  2459  000F08  6A03               	clrf	(___xxtofl@val+2)^0,c
  2460  000F0A  6A04               	clrf	(___xxtofl@val+3)^0,c
  2461  000F0C  0E00               	movlw	0
  2462  000F0E  EC22  F01E         	call	___xxtofl
  2463  000F12  C001  F00F         	movff	?___xxtofl,___fldiv@b
  2464  000F16  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  2465  000F1A  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  2466  000F1E  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  2467  000F22  EC6D  F013         	call	___fldiv	;wreg free
  2468  000F26  C00F  F028         	movff	?___fldiv,___flmul@b
  2469  000F2A  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  2470  000F2E  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  2471  000F32  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  2472  000F36  0E00               	movlw	0
  2473  000F38  6E2C               	movwf	___flmul@a^0,c
  2474  000F3A  0E00               	movlw	0
  2475  000F3C  6E2D               	movwf	(___flmul@a+1)^0,c
  2476  000F3E  0EC8               	movlw	200
  2477  000F40  6E2E               	movwf	(___flmul@a+2)^0,c
  2478  000F42  0E42               	movlw	66
  2479  000F44  6E2F               	movwf	(___flmul@a+3)^0,c
  2480  000F46  EC81  F00F         	call	___flmul	;wreg free
  2481  000F4A  C028  F08E         	movff	?___flmul,_detect_color$3275
  2482  000F4E  C029  F08F         	movff	?___flmul+1,_detect_color$3275+1
  2483  000F52  C02A  F090         	movff	?___flmul+2,_detect_color$3275+2
  2484  000F56  C02B  F091         	movff	?___flmul+3,_detect_color$3275+3
  2485  000F5A                     
  2486                           ;color.c: 302:     RR = lroundf((float)(m->R)/(w->RR)*100); RG = lroundf((float)(m->G)/(
      +                          w->RG)*100); RB = lroundf((float)(m->B)/(w->RB)*100);
  2487  000F5A  C08E  F066         	movff	_detect_color$3275,lroundf@x
  2488  000F5E  C08F  F067         	movff	_detect_color$3275+1,lroundf@x+1
  2489  000F62  C090  F068         	movff	_detect_color$3275+2,lroundf@x+2
  2490  000F66  C091  F069         	movff	_detect_color$3275+3,lroundf@x+3
  2491  000F6A  ECFC  F02B         	call	_lroundf	;wreg free
  2492  000F6E  C066  F08A         	movff	?_lroundf,detect_color@RR
  2493  000F72  C067  F08B         	movff	?_lroundf+1,detect_color@RR+1
  2494  000F76  0100               	movlb	0	; () banked
  2495  000F78  EE20 F002          	lfsr	2,2
  2496  000F7C  5173               	movf	detect_color@w& (0+255),w,b
  2497  000F7E  26D9               	addwf	fsr2l,f,c
  2498  000F80  5174               	movf	(detect_color@w+1)& (0+255),w,b
  2499  000F82  22DA               	addwfc	fsr2h,f,c
  2500  000F84  CFDE F075          	movff	postinc2,??_detect_color
  2501  000F88  CFDD F076          	movff	postdec2,??_detect_color+1
  2502  000F8C  C075  F001         	movff	??_detect_color,___xxtofl@val
  2503  000F90  C076  F002         	movff	??_detect_color+1,___xxtofl@val+1
  2504  000F94  6A03               	clrf	(___xxtofl@val+2)^0,c
  2505  000F96  6A04               	clrf	(___xxtofl@val+3)^0,c
  2506  000F98  0E00               	movlw	0
  2507  000F9A  EC22  F01E         	call	___xxtofl
  2508  000F9E  C001  F013         	movff	?___xxtofl,___fldiv@a
  2509  000FA2  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  2510  000FA6  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  2511  000FAA  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  2512  000FAE  0100               	movlb	0	; () banked
  2513  000FB0  EE20 F002          	lfsr	2,2
  2514  000FB4  5171               	movf	detect_color@m& (0+255),w,b
  2515  000FB6  26D9               	addwf	fsr2l,f,c
  2516  000FB8  5172               	movf	(detect_color@m+1)& (0+255),w,b
  2517  000FBA  22DA               	addwfc	fsr2h,f,c
  2518  000FBC  CFDE F077          	movff	postinc2,??_detect_color+2
  2519  000FC0  CFDD F078          	movff	postdec2,??_detect_color+3
  2520  000FC4  C077  F001         	movff	??_detect_color+2,___xxtofl@val
  2521  000FC8  C078  F002         	movff	??_detect_color+3,___xxtofl@val+1
  2522  000FCC  6A03               	clrf	(___xxtofl@val+2)^0,c
  2523  000FCE  6A04               	clrf	(___xxtofl@val+3)^0,c
  2524  000FD0  0E00               	movlw	0
  2525  000FD2  EC22  F01E         	call	___xxtofl
  2526  000FD6  C001  F00F         	movff	?___xxtofl,___fldiv@b
  2527  000FDA  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  2528  000FDE  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  2529  000FE2  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  2530  000FE6  EC6D  F013         	call	___fldiv	;wreg free
  2531  000FEA  C00F  F028         	movff	?___fldiv,___flmul@b
  2532  000FEE  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  2533  000FF2  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  2534  000FF6  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  2535  000FFA  0E00               	movlw	0
  2536  000FFC  6E2C               	movwf	___flmul@a^0,c
  2537  000FFE  0E00               	movlw	0
  2538  001000  6E2D               	movwf	(___flmul@a+1)^0,c
  2539  001002  0EC8               	movlw	200
  2540  001004  6E2E               	movwf	(___flmul@a+2)^0,c
  2541  001006  0E42               	movlw	66
  2542  001008  6E2F               	movwf	(___flmul@a+3)^0,c
  2543  00100A  EC81  F00F         	call	___flmul	;wreg free
  2544  00100E  C028  F08E         	movff	?___flmul,_detect_color$3275
  2545  001012  C029  F08F         	movff	?___flmul+1,_detect_color$3275+1
  2546  001016  C02A  F090         	movff	?___flmul+2,_detect_color$3275+2
  2547  00101A  C02B  F091         	movff	?___flmul+3,_detect_color$3275+3
  2548  00101E  C08E  F066         	movff	_detect_color$3275,lroundf@x
  2549  001022  C08F  F067         	movff	_detect_color$3275+1,lroundf@x+1
  2550  001026  C090  F068         	movff	_detect_color$3275+2,lroundf@x+2
  2551  00102A  C091  F069         	movff	_detect_color$3275+3,lroundf@x+3
  2552  00102E  ECFC  F02B         	call	_lroundf	;wreg free
  2553  001032  0100               	movlb	0	; () banked
  2554  001034  EE20 F004          	lfsr	2,4
  2555  001038  5173               	movf	detect_color@w& (0+255),w,b
  2556  00103A  26D9               	addwf	fsr2l,f,c
  2557  00103C  5174               	movf	(detect_color@w+1)& (0+255),w,b
  2558  00103E  22DA               	addwfc	fsr2h,f,c
  2559  001040  CFDE F075          	movff	postinc2,??_detect_color
  2560  001044  CFDD F076          	movff	postdec2,??_detect_color+1
  2561  001048  C075  F001         	movff	??_detect_color,___xxtofl@val
  2562  00104C  C076  F002         	movff	??_detect_color+1,___xxtofl@val+1
  2563  001050  6A03               	clrf	(___xxtofl@val+2)^0,c
  2564  001052  6A04               	clrf	(___xxtofl@val+3)^0,c
  2565  001054  0E00               	movlw	0
  2566  001056  EC22  F01E         	call	___xxtofl
  2567  00105A  C001  F013         	movff	?___xxtofl,___fldiv@a
  2568  00105E  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  2569  001062  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  2570  001066  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  2571  00106A  0100               	movlb	0	; () banked
  2572  00106C  EE20 F004          	lfsr	2,4
  2573  001070  5171               	movf	detect_color@m& (0+255),w,b
  2574  001072  26D9               	addwf	fsr2l,f,c
  2575  001074  5172               	movf	(detect_color@m+1)& (0+255),w,b
  2576  001076  22DA               	addwfc	fsr2h,f,c
  2577  001078  CFDE F077          	movff	postinc2,??_detect_color+2
  2578  00107C  CFDD F078          	movff	postdec2,??_detect_color+3
  2579  001080  C077  F001         	movff	??_detect_color+2,___xxtofl@val
  2580  001084  C078  F002         	movff	??_detect_color+3,___xxtofl@val+1
  2581  001088  6A03               	clrf	(___xxtofl@val+2)^0,c
  2582  00108A  6A04               	clrf	(___xxtofl@val+3)^0,c
  2583  00108C  0E00               	movlw	0
  2584  00108E  EC22  F01E         	call	___xxtofl
  2585  001092  C001  F00F         	movff	?___xxtofl,___fldiv@b
  2586  001096  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  2587  00109A  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  2588  00109E  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  2589  0010A2  EC6D  F013         	call	___fldiv	;wreg free
  2590  0010A6  C00F  F028         	movff	?___fldiv,___flmul@b
  2591  0010AA  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  2592  0010AE  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  2593  0010B2  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  2594  0010B6  0E00               	movlw	0
  2595  0010B8  6E2C               	movwf	___flmul@a^0,c
  2596  0010BA  0E00               	movlw	0
  2597  0010BC  6E2D               	movwf	(___flmul@a+1)^0,c
  2598  0010BE  0EC8               	movlw	200
  2599  0010C0  6E2E               	movwf	(___flmul@a+2)^0,c
  2600  0010C2  0E42               	movlw	66
  2601  0010C4  6E2F               	movwf	(___flmul@a+3)^0,c
  2602  0010C6  EC81  F00F         	call	___flmul	;wreg free
  2603  0010CA  C028  F08E         	movff	?___flmul,_detect_color$3275
  2604  0010CE  C029  F08F         	movff	?___flmul+1,_detect_color$3275+1
  2605  0010D2  C02A  F090         	movff	?___flmul+2,_detect_color$3275+2
  2606  0010D6  C02B  F091         	movff	?___flmul+3,_detect_color$3275+3
  2607  0010DA  C08E  F066         	movff	_detect_color$3275,lroundf@x
  2608  0010DE  C08F  F067         	movff	_detect_color$3275+1,lroundf@x+1
  2609  0010E2  C090  F068         	movff	_detect_color$3275+2,lroundf@x+2
  2610  0010E6  C091  F069         	movff	_detect_color$3275+3,lroundf@x+3
  2611  0010EA  ECFC  F02B         	call	_lroundf	;wreg free
  2612  0010EE  C066  F081         	movff	?_lroundf,detect_color@RB
  2613  0010F2  C067  F082         	movff	?_lroundf+1,detect_color@RB+1
  2614  0010F6                     
  2615                           ;color.c: 303:     _delay((unsigned long)((50)*(64000000/4000.0)));
  2616  0010F6  0E05               	movlw	5
  2617  0010F8  0100               	movlb	0	; () banked
  2618  0010FA  6F76               	movwf	(??_detect_color+1)& (0+255),b
  2619  0010FC  0E0F               	movlw	15
  2620  0010FE  6F75               	movwf	??_detect_color& (0+255),b
  2621  001100  0EF1               	movlw	241
  2622  001102                     u5847:
  2623  001102  2EE8               	decfsz	wreg,f,c
  2624  001104  D7FE               	bra	u5847
  2625  001106  2F75               	decfsz	??_detect_color& (0+255),f,b
  2626  001108  D7FC               	bra	u5847
  2627  00110A  2F76               	decfsz	(??_detect_color+1)& (0+255),f,b
  2628  00110C  D7FA               	bra	u5847
  2629  00110E                     
  2630                           ;color.c: 309:     LED_G();
  2631  00110E  ECF5  F02C         	call	_LED_G	;wreg free
  2632  001112                     
  2633                           ;color.c: 310:     _delay((unsigned long)((100)*(64000000/4000.0)));
  2634  001112  0E09               	movlw	9
  2635  001114  0100               	movlb	0	; () banked
  2636  001116  6F76               	movwf	(??_detect_color+1)& (0+255),b
  2637  001118  0E1E               	movlw	30
  2638  00111A  6F75               	movwf	??_detect_color& (0+255),b
  2639  00111C  0EE4               	movlw	228
  2640  00111E                     u5857:
  2641  00111E  2EE8               	decfsz	wreg,f,c
  2642  001120  D7FE               	bra	u5857
  2643  001122  2F75               	decfsz	??_detect_color& (0+255),f,b
  2644  001124  D7FC               	bra	u5857
  2645  001126  2F76               	decfsz	(??_detect_color+1)& (0+255),f,b
  2646  001128  D7FA               	bra	u5857
  2647  00112A  F000               	nop	
  2648  00112C                     
  2649                           ;color.c: 311:     read_color(m);
  2650  00112C  C071  F00C         	movff	detect_color@m,read_color@m
  2651  001130  C072  F00D         	movff	detect_color@m+1,read_color@m+1
  2652  001134  ECE0  F029         	call	_read_color	;wreg free
  2653  001138                     
  2654                           ;color.c: 314:     GR = lroundf((float)(m->R)/(w->GR)*100); GG = lroundf((float)(m->G)/(
      +                          w->GG)*100); GB = lroundf((float)(m->B)/(w->GB)*100);
  2655  001138  0100               	movlb	0	; () banked
  2656  00113A  EE20 F006          	lfsr	2,6
  2657  00113E  5173               	movf	detect_color@w& (0+255),w,b
  2658  001140  26D9               	addwf	fsr2l,f,c
  2659  001142  5174               	movf	(detect_color@w+1)& (0+255),w,b
  2660  001144  22DA               	addwfc	fsr2h,f,c
  2661  001146  CFDE F075          	movff	postinc2,??_detect_color
  2662  00114A  CFDD F076          	movff	postdec2,??_detect_color+1
  2663  00114E  C075  F001         	movff	??_detect_color,___xxtofl@val
  2664  001152  C076  F002         	movff	??_detect_color+1,___xxtofl@val+1
  2665  001156  6A03               	clrf	(___xxtofl@val+2)^0,c
  2666  001158  6A04               	clrf	(___xxtofl@val+3)^0,c
  2667  00115A  0E00               	movlw	0
  2668  00115C  EC22  F01E         	call	___xxtofl
  2669  001160  C001  F013         	movff	?___xxtofl,___fldiv@a
  2670  001164  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  2671  001168  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  2672  00116C  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  2673  001170  C071  FFD9         	movff	detect_color@m,fsr2l
  2674  001174  C072  FFDA         	movff	detect_color@m+1,fsr2h
  2675  001178  CFDE F077          	movff	postinc2,??_detect_color+2
  2676  00117C  CFDD F078          	movff	postdec2,??_detect_color+3
  2677  001180  C077  F001         	movff	??_detect_color+2,___xxtofl@val
  2678  001184  C078  F002         	movff	??_detect_color+3,___xxtofl@val+1
  2679  001188  6A03               	clrf	(___xxtofl@val+2)^0,c
  2680  00118A  6A04               	clrf	(___xxtofl@val+3)^0,c
  2681  00118C  0E00               	movlw	0
  2682  00118E  EC22  F01E         	call	___xxtofl
  2683  001192  C001  F00F         	movff	?___xxtofl,___fldiv@b
  2684  001196  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  2685  00119A  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  2686  00119E  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  2687  0011A2  EC6D  F013         	call	___fldiv	;wreg free
  2688  0011A6  C00F  F028         	movff	?___fldiv,___flmul@b
  2689  0011AA  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  2690  0011AE  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  2691  0011B2  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  2692  0011B6  0E00               	movlw	0
  2693  0011B8  6E2C               	movwf	___flmul@a^0,c
  2694  0011BA  0E00               	movlw	0
  2695  0011BC  6E2D               	movwf	(___flmul@a+1)^0,c
  2696  0011BE  0EC8               	movlw	200
  2697  0011C0  6E2E               	movwf	(___flmul@a+2)^0,c
  2698  0011C2  0E42               	movlw	66
  2699  0011C4  6E2F               	movwf	(___flmul@a+3)^0,c
  2700  0011C6  EC81  F00F         	call	___flmul	;wreg free
  2701  0011CA  C028  F08E         	movff	?___flmul,_detect_color$3275
  2702  0011CE  C029  F08F         	movff	?___flmul+1,_detect_color$3275+1
  2703  0011D2  C02A  F090         	movff	?___flmul+2,_detect_color$3275+2
  2704  0011D6  C02B  F091         	movff	?___flmul+3,_detect_color$3275+3
  2705  0011DA                     
  2706                           ;color.c: 314:     GR = lroundf((float)(m->R)/(w->GR)*100); GG = lroundf((float)(m->G)/(
      +                          w->GG)*100); GB = lroundf((float)(m->B)/(w->GB)*100);
  2707  0011DA  C08E  F066         	movff	_detect_color$3275,lroundf@x
  2708  0011DE  C08F  F067         	movff	_detect_color$3275+1,lroundf@x+1
  2709  0011E2  C090  F068         	movff	_detect_color$3275+2,lroundf@x+2
  2710  0011E6  C091  F069         	movff	_detect_color$3275+3,lroundf@x+3
  2711  0011EA  ECFC  F02B         	call	_lroundf	;wreg free
  2712  0011EE  C066  F07D         	movff	?_lroundf,detect_color@GR
  2713  0011F2  C067  F07E         	movff	?_lroundf+1,detect_color@GR+1
  2714  0011F6  0100               	movlb	0	; () banked
  2715  0011F8  EE20 F008          	lfsr	2,8
  2716  0011FC  5173               	movf	detect_color@w& (0+255),w,b
  2717  0011FE  26D9               	addwf	fsr2l,f,c
  2718  001200  5174               	movf	(detect_color@w+1)& (0+255),w,b
  2719  001202  22DA               	addwfc	fsr2h,f,c
  2720  001204  CFDE F075          	movff	postinc2,??_detect_color
  2721  001208  CFDD F076          	movff	postdec2,??_detect_color+1
  2722  00120C  C075  F001         	movff	??_detect_color,___xxtofl@val
  2723  001210  C076  F002         	movff	??_detect_color+1,___xxtofl@val+1
  2724  001214  6A03               	clrf	(___xxtofl@val+2)^0,c
  2725  001216  6A04               	clrf	(___xxtofl@val+3)^0,c
  2726  001218  0E00               	movlw	0
  2727  00121A  EC22  F01E         	call	___xxtofl
  2728  00121E  C001  F013         	movff	?___xxtofl,___fldiv@a
  2729  001222  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  2730  001226  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  2731  00122A  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  2732  00122E  0100               	movlb	0	; () banked
  2733  001230  EE20 F002          	lfsr	2,2
  2734  001234  5171               	movf	detect_color@m& (0+255),w,b
  2735  001236  26D9               	addwf	fsr2l,f,c
  2736  001238  5172               	movf	(detect_color@m+1)& (0+255),w,b
  2737  00123A  22DA               	addwfc	fsr2h,f,c
  2738  00123C  CFDE F077          	movff	postinc2,??_detect_color+2
  2739  001240  CFDD F078          	movff	postdec2,??_detect_color+3
  2740  001244  C077  F001         	movff	??_detect_color+2,___xxtofl@val
  2741  001248  C078  F002         	movff	??_detect_color+3,___xxtofl@val+1
  2742  00124C  6A03               	clrf	(___xxtofl@val+2)^0,c
  2743  00124E  6A04               	clrf	(___xxtofl@val+3)^0,c
  2744  001250  0E00               	movlw	0
  2745  001252  EC22  F01E         	call	___xxtofl
  2746  001256  C001  F00F         	movff	?___xxtofl,___fldiv@b
  2747  00125A  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  2748  00125E  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  2749  001262  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  2750  001266  EC6D  F013         	call	___fldiv	;wreg free
  2751  00126A  C00F  F028         	movff	?___fldiv,___flmul@b
  2752  00126E  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  2753  001272  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  2754  001276  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  2755  00127A  0E00               	movlw	0
  2756  00127C  6E2C               	movwf	___flmul@a^0,c
  2757  00127E  0E00               	movlw	0
  2758  001280  6E2D               	movwf	(___flmul@a+1)^0,c
  2759  001282  0EC8               	movlw	200
  2760  001284  6E2E               	movwf	(___flmul@a+2)^0,c
  2761  001286  0E42               	movlw	66
  2762  001288  6E2F               	movwf	(___flmul@a+3)^0,c
  2763  00128A  EC81  F00F         	call	___flmul	;wreg free
  2764  00128E  C028  F08E         	movff	?___flmul,_detect_color$3275
  2765  001292  C029  F08F         	movff	?___flmul+1,_detect_color$3275+1
  2766  001296  C02A  F090         	movff	?___flmul+2,_detect_color$3275+2
  2767  00129A  C02B  F091         	movff	?___flmul+3,_detect_color$3275+3
  2768  00129E  C08E  F066         	movff	_detect_color$3275,lroundf@x
  2769  0012A2  C08F  F067         	movff	_detect_color$3275+1,lroundf@x+1
  2770  0012A6  C090  F068         	movff	_detect_color$3275+2,lroundf@x+2
  2771  0012AA  C091  F069         	movff	_detect_color$3275+3,lroundf@x+3
  2772  0012AE  ECFC  F02B         	call	_lroundf	;wreg free
  2773  0012B2  C066  F087         	movff	?_lroundf,detect_color@GG
  2774  0012B6  C067  F088         	movff	?_lroundf+1,detect_color@GG+1
  2775  0012BA  0100               	movlb	0	; () banked
  2776  0012BC  EE20 F00A          	lfsr	2,10
  2777  0012C0  5173               	movf	detect_color@w& (0+255),w,b
  2778  0012C2  26D9               	addwf	fsr2l,f,c
  2779  0012C4  5174               	movf	(detect_color@w+1)& (0+255),w,b
  2780  0012C6  22DA               	addwfc	fsr2h,f,c
  2781  0012C8  CFDE F075          	movff	postinc2,??_detect_color
  2782  0012CC  CFDD F076          	movff	postdec2,??_detect_color+1
  2783  0012D0  C075  F001         	movff	??_detect_color,___xxtofl@val
  2784  0012D4  C076  F002         	movff	??_detect_color+1,___xxtofl@val+1
  2785  0012D8  6A03               	clrf	(___xxtofl@val+2)^0,c
  2786  0012DA  6A04               	clrf	(___xxtofl@val+3)^0,c
  2787  0012DC  0E00               	movlw	0
  2788  0012DE  EC22  F01E         	call	___xxtofl
  2789  0012E2  C001  F013         	movff	?___xxtofl,___fldiv@a
  2790  0012E6  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  2791  0012EA  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  2792  0012EE  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  2793  0012F2  0100               	movlb	0	; () banked
  2794  0012F4  EE20 F004          	lfsr	2,4
  2795  0012F8  5171               	movf	detect_color@m& (0+255),w,b
  2796  0012FA  26D9               	addwf	fsr2l,f,c
  2797  0012FC  5172               	movf	(detect_color@m+1)& (0+255),w,b
  2798  0012FE  22DA               	addwfc	fsr2h,f,c
  2799  001300  CFDE F077          	movff	postinc2,??_detect_color+2
  2800  001304  CFDD F078          	movff	postdec2,??_detect_color+3
  2801  001308  C077  F001         	movff	??_detect_color+2,___xxtofl@val
  2802  00130C  C078  F002         	movff	??_detect_color+3,___xxtofl@val+1
  2803  001310  6A03               	clrf	(___xxtofl@val+2)^0,c
  2804  001312  6A04               	clrf	(___xxtofl@val+3)^0,c
  2805  001314  0E00               	movlw	0
  2806  001316  EC22  F01E         	call	___xxtofl
  2807  00131A  C001  F00F         	movff	?___xxtofl,___fldiv@b
  2808  00131E  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  2809  001322  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  2810  001326  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  2811  00132A  EC6D  F013         	call	___fldiv	;wreg free
  2812  00132E  C00F  F028         	movff	?___fldiv,___flmul@b
  2813  001332  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  2814  001336  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  2815  00133A  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  2816  00133E  0E00               	movlw	0
  2817  001340  6E2C               	movwf	___flmul@a^0,c
  2818  001342  0E00               	movlw	0
  2819  001344  6E2D               	movwf	(___flmul@a+1)^0,c
  2820  001346  0EC8               	movlw	200
  2821  001348  6E2E               	movwf	(___flmul@a+2)^0,c
  2822  00134A  0E42               	movlw	66
  2823  00134C  6E2F               	movwf	(___flmul@a+3)^0,c
  2824  00134E  EC81  F00F         	call	___flmul	;wreg free
  2825  001352  C028  F08E         	movff	?___flmul,_detect_color$3275
  2826  001356  C029  F08F         	movff	?___flmul+1,_detect_color$3275+1
  2827  00135A  C02A  F090         	movff	?___flmul+2,_detect_color$3275+2
  2828  00135E  C02B  F091         	movff	?___flmul+3,_detect_color$3275+3
  2829  001362  C08E  F066         	movff	_detect_color$3275,lroundf@x
  2830  001366  C08F  F067         	movff	_detect_color$3275+1,lroundf@x+1
  2831  00136A  C090  F068         	movff	_detect_color$3275+2,lroundf@x+2
  2832  00136E  C091  F069         	movff	_detect_color$3275+3,lroundf@x+3
  2833  001372  ECFC  F02B         	call	_lroundf	;wreg free
  2834  001376  C066  F083         	movff	?_lroundf,detect_color@GB
  2835  00137A  C067  F084         	movff	?_lroundf+1,detect_color@GB+1
  2836  00137E                     
  2837                           ;color.c: 319:     LED_B();
  2838  00137E  EC05  F02D         	call	_LED_B	;wreg free
  2839  001382                     
  2840                           ;color.c: 320:     _delay((unsigned long)((100)*(64000000/4000.0)));
  2841  001382  0E09               	movlw	9
  2842  001384  0100               	movlb	0	; () banked
  2843  001386  6F76               	movwf	(??_detect_color+1)& (0+255),b
  2844  001388  0E1E               	movlw	30
  2845  00138A  6F75               	movwf	??_detect_color& (0+255),b
  2846  00138C  0EE4               	movlw	228
  2847  00138E                     u5867:
  2848  00138E  2EE8               	decfsz	wreg,f,c
  2849  001390  D7FE               	bra	u5867
  2850  001392  2F75               	decfsz	??_detect_color& (0+255),f,b
  2851  001394  D7FC               	bra	u5867
  2852  001396  2F76               	decfsz	(??_detect_color+1)& (0+255),f,b
  2853  001398  D7FA               	bra	u5867
  2854  00139A  F000               	nop	
  2855  00139C                     
  2856                           ;color.c: 321:     read_color(m);
  2857  00139C  C071  F00C         	movff	detect_color@m,read_color@m
  2858  0013A0  C072  F00D         	movff	detect_color@m+1,read_color@m+1
  2859  0013A4  ECE0  F029         	call	_read_color	;wreg free
  2860  0013A8                     
  2861                           ;color.c: 322:     BR = lroundf((float)(m->R)/(w->BR)*100); BG = lroundf((float)(m->G)/(
      +                          w->BG)*100); BB = lroundf((float)(m->B)/(w->BB)*100);
  2862  0013A8  0100               	movlb	0	; () banked
  2863  0013AA  EE20 F00C          	lfsr	2,12
  2864  0013AE  5173               	movf	detect_color@w& (0+255),w,b
  2865  0013B0  26D9               	addwf	fsr2l,f,c
  2866  0013B2  5174               	movf	(detect_color@w+1)& (0+255),w,b
  2867  0013B4  22DA               	addwfc	fsr2h,f,c
  2868  0013B6  CFDE F075          	movff	postinc2,??_detect_color
  2869  0013BA  CFDD F076          	movff	postdec2,??_detect_color+1
  2870  0013BE  C075  F001         	movff	??_detect_color,___xxtofl@val
  2871  0013C2  C076  F002         	movff	??_detect_color+1,___xxtofl@val+1
  2872  0013C6  6A03               	clrf	(___xxtofl@val+2)^0,c
  2873  0013C8  6A04               	clrf	(___xxtofl@val+3)^0,c
  2874  0013CA  0E00               	movlw	0
  2875  0013CC  EC22  F01E         	call	___xxtofl
  2876  0013D0  C001  F013         	movff	?___xxtofl,___fldiv@a
  2877  0013D4  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  2878  0013D8  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  2879  0013DC  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  2880  0013E0  C071  FFD9         	movff	detect_color@m,fsr2l
  2881  0013E4  C072  FFDA         	movff	detect_color@m+1,fsr2h
  2882  0013E8  CFDE F077          	movff	postinc2,??_detect_color+2
  2883  0013EC  CFDD F078          	movff	postdec2,??_detect_color+3
  2884  0013F0  C077  F001         	movff	??_detect_color+2,___xxtofl@val
  2885  0013F4  C078  F002         	movff	??_detect_color+3,___xxtofl@val+1
  2886  0013F8  6A03               	clrf	(___xxtofl@val+2)^0,c
  2887  0013FA  6A04               	clrf	(___xxtofl@val+3)^0,c
  2888  0013FC  0E00               	movlw	0
  2889  0013FE  EC22  F01E         	call	___xxtofl
  2890  001402  C001  F00F         	movff	?___xxtofl,___fldiv@b
  2891  001406  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  2892  00140A  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  2893  00140E  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  2894  001412  EC6D  F013         	call	___fldiv	;wreg free
  2895  001416  C00F  F028         	movff	?___fldiv,___flmul@b
  2896  00141A  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  2897  00141E  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  2898  001422  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  2899  001426  0E00               	movlw	0
  2900  001428  6E2C               	movwf	___flmul@a^0,c
  2901  00142A  0E00               	movlw	0
  2902  00142C  6E2D               	movwf	(___flmul@a+1)^0,c
  2903  00142E  0EC8               	movlw	200
  2904  001430  6E2E               	movwf	(___flmul@a+2)^0,c
  2905  001432  0E42               	movlw	66
  2906  001434  6E2F               	movwf	(___flmul@a+3)^0,c
  2907  001436  EC81  F00F         	call	___flmul	;wreg free
  2908  00143A  C028  F08E         	movff	?___flmul,_detect_color$3275
  2909  00143E  C029  F08F         	movff	?___flmul+1,_detect_color$3275+1
  2910  001442  C02A  F090         	movff	?___flmul+2,_detect_color$3275+2
  2911  001446  C02B  F091         	movff	?___flmul+3,_detect_color$3275+3
  2912  00144A                     
  2913                           ;color.c: 322:     BR = lroundf((float)(m->R)/(w->BR)*100); BG = lroundf((float)(m->G)/(
      +                          w->BG)*100); BB = lroundf((float)(m->B)/(w->BB)*100);
  2914  00144A  C08E  F066         	movff	_detect_color$3275,lroundf@x
  2915  00144E  C08F  F067         	movff	_detect_color$3275+1,lroundf@x+1
  2916  001452  C090  F068         	movff	_detect_color$3275+2,lroundf@x+2
  2917  001456  C091  F069         	movff	_detect_color$3275+3,lroundf@x+3
  2918  00145A  ECFC  F02B         	call	_lroundf	;wreg free
  2919  00145E  C066  F085         	movff	?_lroundf,detect_color@BR
  2920  001462  C067  F086         	movff	?_lroundf+1,detect_color@BR+1
  2921  001466  0100               	movlb	0	; () banked
  2922  001468  EE20 F00E          	lfsr	2,14
  2923  00146C  5173               	movf	detect_color@w& (0+255),w,b
  2924  00146E  26D9               	addwf	fsr2l,f,c
  2925  001470  5174               	movf	(detect_color@w+1)& (0+255),w,b
  2926  001472  22DA               	addwfc	fsr2h,f,c
  2927  001474  CFDE F075          	movff	postinc2,??_detect_color
  2928  001478  CFDD F076          	movff	postdec2,??_detect_color+1
  2929  00147C  C075  F001         	movff	??_detect_color,___xxtofl@val
  2930  001480  C076  F002         	movff	??_detect_color+1,___xxtofl@val+1
  2931  001484  6A03               	clrf	(___xxtofl@val+2)^0,c
  2932  001486  6A04               	clrf	(___xxtofl@val+3)^0,c
  2933  001488  0E00               	movlw	0
  2934  00148A  EC22  F01E         	call	___xxtofl
  2935  00148E  C001  F013         	movff	?___xxtofl,___fldiv@a
  2936  001492  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  2937  001496  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  2938  00149A  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  2939  00149E  0100               	movlb	0	; () banked
  2940  0014A0  EE20 F002          	lfsr	2,2
  2941  0014A4  5171               	movf	detect_color@m& (0+255),w,b
  2942  0014A6  26D9               	addwf	fsr2l,f,c
  2943  0014A8  5172               	movf	(detect_color@m+1)& (0+255),w,b
  2944  0014AA  22DA               	addwfc	fsr2h,f,c
  2945  0014AC  CFDE F077          	movff	postinc2,??_detect_color+2
  2946  0014B0  CFDD F078          	movff	postdec2,??_detect_color+3
  2947  0014B4  C077  F001         	movff	??_detect_color+2,___xxtofl@val
  2948  0014B8  C078  F002         	movff	??_detect_color+3,___xxtofl@val+1
  2949  0014BC  6A03               	clrf	(___xxtofl@val+2)^0,c
  2950  0014BE  6A04               	clrf	(___xxtofl@val+3)^0,c
  2951  0014C0  0E00               	movlw	0
  2952  0014C2  EC22  F01E         	call	___xxtofl
  2953  0014C6  C001  F00F         	movff	?___xxtofl,___fldiv@b
  2954  0014CA  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  2955  0014CE  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  2956  0014D2  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  2957  0014D6  EC6D  F013         	call	___fldiv	;wreg free
  2958  0014DA  C00F  F028         	movff	?___fldiv,___flmul@b
  2959  0014DE  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  2960  0014E2  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  2961  0014E6  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  2962  0014EA  0E00               	movlw	0
  2963  0014EC  6E2C               	movwf	___flmul@a^0,c
  2964  0014EE  0E00               	movlw	0
  2965  0014F0  6E2D               	movwf	(___flmul@a+1)^0,c
  2966  0014F2  0EC8               	movlw	200
  2967  0014F4  6E2E               	movwf	(___flmul@a+2)^0,c
  2968  0014F6  0E42               	movlw	66
  2969  0014F8  6E2F               	movwf	(___flmul@a+3)^0,c
  2970  0014FA  EC81  F00F         	call	___flmul	;wreg free
  2971  0014FE  C028  F08E         	movff	?___flmul,_detect_color$3275
  2972  001502  C029  F08F         	movff	?___flmul+1,_detect_color$3275+1
  2973  001506  C02A  F090         	movff	?___flmul+2,_detect_color$3275+2
  2974  00150A  C02B  F091         	movff	?___flmul+3,_detect_color$3275+3
  2975  00150E  C08E  F066         	movff	_detect_color$3275,lroundf@x
  2976  001512  C08F  F067         	movff	_detect_color$3275+1,lroundf@x+1
  2977  001516  C090  F068         	movff	_detect_color$3275+2,lroundf@x+2
  2978  00151A  C091  F069         	movff	_detect_color$3275+3,lroundf@x+3
  2979  00151E  ECFC  F02B         	call	_lroundf	;wreg free
  2980  001522  C066  F08C         	movff	?_lroundf,detect_color@BG
  2981  001526  C067  F08D         	movff	?_lroundf+1,detect_color@BG+1
  2982  00152A  0100               	movlb	0	; () banked
  2983  00152C  EE20 F010          	lfsr	2,16
  2984  001530  5173               	movf	detect_color@w& (0+255),w,b
  2985  001532  26D9               	addwf	fsr2l,f,c
  2986  001534  5174               	movf	(detect_color@w+1)& (0+255),w,b
  2987  001536  22DA               	addwfc	fsr2h,f,c
  2988  001538  CFDE F075          	movff	postinc2,??_detect_color
  2989  00153C  CFDD F076          	movff	postdec2,??_detect_color+1
  2990  001540  C075  F001         	movff	??_detect_color,___xxtofl@val
  2991  001544  C076  F002         	movff	??_detect_color+1,___xxtofl@val+1
  2992  001548  6A03               	clrf	(___xxtofl@val+2)^0,c
  2993  00154A  6A04               	clrf	(___xxtofl@val+3)^0,c
  2994  00154C  0E00               	movlw	0
  2995  00154E  EC22  F01E         	call	___xxtofl
  2996  001552  C001  F013         	movff	?___xxtofl,___fldiv@a
  2997  001556  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  2998  00155A  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  2999  00155E  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  3000  001562  0100               	movlb	0	; () banked
  3001  001564  EE20 F004          	lfsr	2,4
  3002  001568  5171               	movf	detect_color@m& (0+255),w,b
  3003  00156A  26D9               	addwf	fsr2l,f,c
  3004  00156C  5172               	movf	(detect_color@m+1)& (0+255),w,b
  3005  00156E  22DA               	addwfc	fsr2h,f,c
  3006  001570  CFDE F077          	movff	postinc2,??_detect_color+2
  3007  001574  CFDD F078          	movff	postdec2,??_detect_color+3
  3008  001578  C077  F001         	movff	??_detect_color+2,___xxtofl@val
  3009  00157C  C078  F002         	movff	??_detect_color+3,___xxtofl@val+1
  3010  001580  6A03               	clrf	(___xxtofl@val+2)^0,c
  3011  001582  6A04               	clrf	(___xxtofl@val+3)^0,c
  3012  001584  0E00               	movlw	0
  3013  001586  EC22  F01E         	call	___xxtofl
  3014  00158A  C001  F00F         	movff	?___xxtofl,___fldiv@b
  3015  00158E  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  3016  001592  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  3017  001596  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  3018  00159A  EC6D  F013         	call	___fldiv	;wreg free
  3019  00159E  C00F  F028         	movff	?___fldiv,___flmul@b
  3020  0015A2  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  3021  0015A6  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  3022  0015AA  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  3023  0015AE  0E00               	movlw	0
  3024  0015B0  6E2C               	movwf	___flmul@a^0,c
  3025  0015B2  0E00               	movlw	0
  3026  0015B4  6E2D               	movwf	(___flmul@a+1)^0,c
  3027  0015B6  0EC8               	movlw	200
  3028  0015B8  6E2E               	movwf	(___flmul@a+2)^0,c
  3029  0015BA  0E42               	movlw	66
  3030  0015BC  6E2F               	movwf	(___flmul@a+3)^0,c
  3031  0015BE  EC81  F00F         	call	___flmul	;wreg free
  3032  0015C2  C028  F08E         	movff	?___flmul,_detect_color$3275
  3033  0015C6  C029  F08F         	movff	?___flmul+1,_detect_color$3275+1
  3034  0015CA  C02A  F090         	movff	?___flmul+2,_detect_color$3275+2
  3035  0015CE  C02B  F091         	movff	?___flmul+3,_detect_color$3275+3
  3036  0015D2  C08E  F066         	movff	_detect_color$3275,lroundf@x
  3037  0015D6  C08F  F067         	movff	_detect_color$3275+1,lroundf@x+1
  3038  0015DA  C090  F068         	movff	_detect_color$3275+2,lroundf@x+2
  3039  0015DE  C091  F069         	movff	_detect_color$3275+3,lroundf@x+3
  3040  0015E2  ECFC  F02B         	call	_lroundf	;wreg free
  3041  0015E6  C066  F07F         	movff	?_lroundf,detect_color@BB
  3042  0015EA  C067  F080         	movff	?_lroundf+1,detect_color@BB+1
  3043  0015EE                     
  3044                           ;color.c: 323:     BC = lroundf((float)(m->C)/(w->BC)*100);
  3045  0015EE  0100               	movlb	0	; () banked
  3046  0015F0  EE20 F01A          	lfsr	2,26
  3047  0015F4  5173               	movf	detect_color@w& (0+255),w,b
  3048  0015F6  26D9               	addwf	fsr2l,f,c
  3049  0015F8  5174               	movf	(detect_color@w+1)& (0+255),w,b
  3050  0015FA  22DA               	addwfc	fsr2h,f,c
  3051  0015FC  CFDE F075          	movff	postinc2,??_detect_color
  3052  001600  CFDD F076          	movff	postdec2,??_detect_color+1
  3053  001604  C075  F001         	movff	??_detect_color,___xxtofl@val
  3054  001608  C076  F002         	movff	??_detect_color+1,___xxtofl@val+1
  3055  00160C  6A03               	clrf	(___xxtofl@val+2)^0,c
  3056  00160E  6A04               	clrf	(___xxtofl@val+3)^0,c
  3057  001610  0E00               	movlw	0
  3058  001612  EC22  F01E         	call	___xxtofl
  3059  001616  C001  F013         	movff	?___xxtofl,___fldiv@a
  3060  00161A  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  3061  00161E  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  3062  001622  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  3063  001626  0100               	movlb	0	; () banked
  3064  001628  EE20 F006          	lfsr	2,6
  3065  00162C  5171               	movf	detect_color@m& (0+255),w,b
  3066  00162E  26D9               	addwf	fsr2l,f,c
  3067  001630  5172               	movf	(detect_color@m+1)& (0+255),w,b
  3068  001632  22DA               	addwfc	fsr2h,f,c
  3069  001634  CFDE F077          	movff	postinc2,??_detect_color+2
  3070  001638  CFDD F078          	movff	postdec2,??_detect_color+3
  3071  00163C  C077  F001         	movff	??_detect_color+2,___xxtofl@val
  3072  001640  C078  F002         	movff	??_detect_color+3,___xxtofl@val+1
  3073  001644  6A03               	clrf	(___xxtofl@val+2)^0,c
  3074  001646  6A04               	clrf	(___xxtofl@val+3)^0,c
  3075  001648  0E00               	movlw	0
  3076  00164A  EC22  F01E         	call	___xxtofl
  3077  00164E  C001  F00F         	movff	?___xxtofl,___fldiv@b
  3078  001652  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  3079  001656  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  3080  00165A  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  3081  00165E  EC6D  F013         	call	___fldiv	;wreg free
  3082  001662  C00F  F028         	movff	?___fldiv,___flmul@b
  3083  001666  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  3084  00166A  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  3085  00166E  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  3086  001672  0E00               	movlw	0
  3087  001674  6E2C               	movwf	___flmul@a^0,c
  3088  001676  0E00               	movlw	0
  3089  001678  6E2D               	movwf	(___flmul@a+1)^0,c
  3090  00167A  0EC8               	movlw	200
  3091  00167C  6E2E               	movwf	(___flmul@a+2)^0,c
  3092  00167E  0E42               	movlw	66
  3093  001680  6E2F               	movwf	(___flmul@a+3)^0,c
  3094  001682  EC81  F00F         	call	___flmul	;wreg free
  3095  001686  C028  F08E         	movff	?___flmul,_detect_color$3275
  3096  00168A  C029  F08F         	movff	?___flmul+1,_detect_color$3275+1
  3097  00168E  C02A  F090         	movff	?___flmul+2,_detect_color$3275+2
  3098  001692  C02B  F091         	movff	?___flmul+3,_detect_color$3275+3
  3099  001696  C08E  F066         	movff	_detect_color$3275,lroundf@x
  3100  00169A  C08F  F067         	movff	_detect_color$3275+1,lroundf@x+1
  3101  00169E  C090  F068         	movff	_detect_color$3275+2,lroundf@x+2
  3102  0016A2  C091  F069         	movff	_detect_color$3275+3,lroundf@x+3
  3103  0016A6  ECFC  F02B         	call	_lroundf	;wreg free
  3104  0016AA                     
  3105                           ;color.c: 329:     if (compare(0, RR, 45)){
  3106  0016AA  0E00               	movlw	0
  3107  0016AC  0100               	movlb	0	; () banked
  3108  0016AE  6F6B               	movwf	(compare@lower+1)& (0+255),b
  3109  0016B0  0E00               	movlw	0
  3110  0016B2  6F6A               	movwf	compare@lower& (0+255),b
  3111  0016B4  C08A  F06C         	movff	detect_color@RR,compare@value2compare
  3112  0016B8  C08B  F06D         	movff	detect_color@RR+1,compare@value2compare+1
  3113  0016BC  0E00               	movlw	0
  3114  0016BE  6F6F               	movwf	(compare@upper+1)& (0+255),b
  3115  0016C0  0E2D               	movlw	45
  3116  0016C2  6F6E               	movwf	compare@upper& (0+255),b
  3117  0016C4  ECDF  F02B         	call	_compare	;wreg free
  3118  0016C8  0900               	iorlw	0
  3119  0016CA  B4D8               	btfsc	status,2,c
  3120  0016CC  EF6A  F00B         	goto	u5171
  3121  0016D0  EF6C  F00B         	goto	u5170
  3122  0016D4                     u5171:
  3123  0016D4  EFDD  F00B         	goto	l5123
  3124  0016D8                     u5170:
  3125  0016D8                     
  3126                           ;color.c: 330:          if (compare(0, lroundf((float)(GG + BG)/BB * 200), 467)){color =
      +                           3;}
  3127  0016D8  C07F  F001         	movff	detect_color@BB,___xxtofl@val
  3128  0016DC  C080  F002         	movff	detect_color@BB+1,___xxtofl@val+1
  3129  0016E0  6A03               	clrf	(___xxtofl@val+2)^0,c
  3130  0016E2  6A04               	clrf	(___xxtofl@val+3)^0,c
  3131  0016E4  0E00               	movlw	0
  3132  0016E6  EC22  F01E         	call	___xxtofl
  3133  0016EA  C001  F013         	movff	?___xxtofl,___fldiv@a
  3134  0016EE  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  3135  0016F2  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  3136  0016F6  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  3137  0016FA  0100               	movlb	0	; () banked
  3138  0016FC  518C               	movf	detect_color@BG& (0+255),w,b
  3139  0016FE  2587               	addwf	detect_color@GG& (0+255),w,b
  3140  001700  6F75               	movwf	??_detect_color& (0+255),b
  3141  001702  518D               	movf	(detect_color@BG+1)& (0+255),w,b
  3142  001704  2188               	addwfc	(detect_color@GG+1)& (0+255),w,b
  3143  001706  6F76               	movwf	(??_detect_color+1)& (0+255),b
  3144  001708  C075  F001         	movff	??_detect_color,___xxtofl@val
  3145  00170C  C076  F002         	movff	??_detect_color+1,___xxtofl@val+1
  3146  001710  6A03               	clrf	(___xxtofl@val+2)^0,c
  3147  001712  6A04               	clrf	(___xxtofl@val+3)^0,c
  3148  001714  0E00               	movlw	0
  3149  001716  EC22  F01E         	call	___xxtofl
  3150  00171A  C001  F00F         	movff	?___xxtofl,___fldiv@b
  3151  00171E  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  3152  001722  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  3153  001726  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  3154  00172A  EC6D  F013         	call	___fldiv	;wreg free
  3155  00172E  C00F  F028         	movff	?___fldiv,___flmul@b
  3156  001732  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  3157  001736  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  3158  00173A  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  3159  00173E  0E00               	movlw	0
  3160  001740  6E2C               	movwf	___flmul@a^0,c
  3161  001742  0E00               	movlw	0
  3162  001744  6E2D               	movwf	(___flmul@a+1)^0,c
  3163  001746  0E48               	movlw	72
  3164  001748  6E2E               	movwf	(___flmul@a+2)^0,c
  3165  00174A  0E43               	movlw	67
  3166  00174C  6E2F               	movwf	(___flmul@a+3)^0,c
  3167  00174E  EC81  F00F         	call	___flmul	;wreg free
  3168  001752  C028  F08E         	movff	?___flmul,_detect_color$3275
  3169  001756  C029  F08F         	movff	?___flmul+1,_detect_color$3275+1
  3170  00175A  C02A  F090         	movff	?___flmul+2,_detect_color$3275+2
  3171  00175E  C02B  F091         	movff	?___flmul+3,_detect_color$3275+3
  3172                           
  3173                           ;color.c: 330:          if (compare(0, lroundf((float)(GG + BG)/BB * 200), 467)){color =
      +                           3;}
  3174  001762  0E00               	movlw	0
  3175  001764  0100               	movlb	0	; () banked
  3176  001766  6F6B               	movwf	(compare@lower+1)& (0+255),b
  3177  001768  0E00               	movlw	0
  3178  00176A  6F6A               	movwf	compare@lower& (0+255),b
  3179  00176C  C08E  F066         	movff	_detect_color$3275,lroundf@x
  3180  001770  C08F  F067         	movff	_detect_color$3275+1,lroundf@x+1
  3181  001774  C090  F068         	movff	_detect_color$3275+2,lroundf@x+2
  3182  001778  C091  F069         	movff	_detect_color$3275+3,lroundf@x+3
  3183  00177C  ECFC  F02B         	call	_lroundf	;wreg free
  3184  001780  C066  F06C         	movff	?_lroundf,compare@value2compare
  3185  001784  C067  F06D         	movff	?_lroundf+1,compare@value2compare+1
  3186  001788  0E01               	movlw	1
  3187  00178A  0100               	movlb	0	; () banked
  3188  00178C  6F6F               	movwf	(compare@upper+1)& (0+255),b
  3189  00178E  0ED3               	movlw	211
  3190  001790  6F6E               	movwf	compare@upper& (0+255),b
  3191  001792  ECDF  F02B         	call	_compare	;wreg free
  3192  001796  0900               	iorlw	0
  3193  001798  B4D8               	btfsc	status,2,c
  3194  00179A  EFD1  F00B         	goto	u5181
  3195  00179E  EFD3  F00B         	goto	u5180
  3196  0017A2                     u5181:
  3197  0017A2  EFD8  F00B         	goto	l5121
  3198  0017A6                     u5180:
  3199  0017A6  0E03               	movlw	3
  3200  0017A8  0100               	movlb	0	; () banked
  3201  0017AA  6F89               	movwf	detect_color@color& (0+255),b
  3202  0017AC  EF94  F00C         	goto	l5147
  3203  0017B0                     l5121:
  3204  0017B0  0E02               	movlw	2
  3205  0017B2  0100               	movlb	0	; () banked
  3206  0017B4  6F89               	movwf	detect_color@color& (0+255),b
  3207  0017B6  EF94  F00C         	goto	l5147
  3208  0017BA                     l5123:
  3209                           
  3210                           ;color.c: 334:         if (GG <= 30 && GB <= 30){
  3211  0017BA  0100               	movlb	0	; () banked
  3212  0017BC  5188               	movf	(detect_color@GG+1)& (0+255),w,b
  3213  0017BE  E107               	bnz	u5191
  3214  0017C0  0E1F               	movlw	31
  3215  0017C2  5D87               	subwf	detect_color@GG& (0+255),w,b
  3216  0017C4  B0D8               	btfsc	status,0,c
  3217  0017C6  EFE7  F00B         	goto	u5191
  3218  0017CA  EFE9  F00B         	goto	u5190
  3219  0017CE                     u5191:
  3220  0017CE  EF5E  F00C         	goto	l5133
  3221  0017D2                     u5190:
  3222  0017D2                     
  3223                           ; BSR set to: 0
  3224  0017D2  5184               	movf	(detect_color@GB+1)& (0+255),w,b
  3225  0017D4  E107               	bnz	u5201
  3226  0017D6  0E1F               	movlw	31
  3227  0017D8  5D83               	subwf	detect_color@GB& (0+255),w,b
  3228  0017DA  B0D8               	btfsc	status,0,c
  3229  0017DC  EFF2  F00B         	goto	u5201
  3230  0017E0  EFF4  F00B         	goto	u5200
  3231  0017E4                     u5201:
  3232  0017E4  EF5E  F00C         	goto	l5133
  3233  0017E8                     u5200:
  3234  0017E8                     
  3235                           ; BSR set to: 0
  3236                           ;color.c: 336:             if (compare(0, lroundf((float)GR/RR * 500), 150)){color = 1;}
  3237  0017E8  C08A  F001         	movff	detect_color@RR,___xxtofl@val
  3238  0017EC  C08B  F002         	movff	detect_color@RR+1,___xxtofl@val+1
  3239  0017F0  6A03               	clrf	(___xxtofl@val+2)^0,c
  3240  0017F2  6A04               	clrf	(___xxtofl@val+3)^0,c
  3241  0017F4  0E00               	movlw	0
  3242  0017F6  EC22  F01E         	call	___xxtofl
  3243  0017FA  C001  F013         	movff	?___xxtofl,___fldiv@a
  3244  0017FE  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  3245  001802  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  3246  001806  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  3247  00180A  C07D  F001         	movff	detect_color@GR,___xxtofl@val
  3248  00180E  C07E  F002         	movff	detect_color@GR+1,___xxtofl@val+1
  3249  001812  6A03               	clrf	(___xxtofl@val+2)^0,c
  3250  001814  6A04               	clrf	(___xxtofl@val+3)^0,c
  3251  001816  0E00               	movlw	0
  3252  001818  EC22  F01E         	call	___xxtofl
  3253  00181C  C001  F00F         	movff	?___xxtofl,___fldiv@b
  3254  001820  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  3255  001824  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  3256  001828  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  3257  00182C  EC6D  F013         	call	___fldiv	;wreg free
  3258  001830  C00F  F028         	movff	?___fldiv,___flmul@b
  3259  001834  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  3260  001838  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  3261  00183C  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  3262  001840  0E00               	movlw	0
  3263  001842  6E2C               	movwf	___flmul@a^0,c
  3264  001844  0E00               	movlw	0
  3265  001846  6E2D               	movwf	(___flmul@a+1)^0,c
  3266  001848  0EFA               	movlw	250
  3267  00184A  6E2E               	movwf	(___flmul@a+2)^0,c
  3268  00184C  0E43               	movlw	67
  3269  00184E  6E2F               	movwf	(___flmul@a+3)^0,c
  3270  001850  EC81  F00F         	call	___flmul	;wreg free
  3271  001854  C028  F08E         	movff	?___flmul,_detect_color$3275
  3272  001858  C029  F08F         	movff	?___flmul+1,_detect_color$3275+1
  3273  00185C  C02A  F090         	movff	?___flmul+2,_detect_color$3275+2
  3274  001860  C02B  F091         	movff	?___flmul+3,_detect_color$3275+3
  3275                           
  3276                           ;color.c: 336:             if (compare(0, lroundf((float)GR/RR * 500), 150)){color = 1;}
  3277  001864  0E00               	movlw	0
  3278  001866  0100               	movlb	0	; () banked
  3279  001868  6F6B               	movwf	(compare@lower+1)& (0+255),b
  3280  00186A  0E00               	movlw	0
  3281  00186C  6F6A               	movwf	compare@lower& (0+255),b
  3282  00186E  C08E  F066         	movff	_detect_color$3275,lroundf@x
  3283  001872  C08F  F067         	movff	_detect_color$3275+1,lroundf@x+1
  3284  001876  C090  F068         	movff	_detect_color$3275+2,lroundf@x+2
  3285  00187A  C091  F069         	movff	_detect_color$3275+3,lroundf@x+3
  3286  00187E  ECFC  F02B         	call	_lroundf	;wreg free
  3287  001882  C066  F06C         	movff	?_lroundf,compare@value2compare
  3288  001886  C067  F06D         	movff	?_lroundf+1,compare@value2compare+1
  3289  00188A  0E00               	movlw	0
  3290  00188C  0100               	movlb	0	; () banked
  3291  00188E  6F6F               	movwf	(compare@upper+1)& (0+255),b
  3292  001890  0E96               	movlw	150
  3293  001892  6F6E               	movwf	compare@upper& (0+255),b
  3294  001894  ECDF  F02B         	call	_compare	;wreg free
  3295  001898  0900               	iorlw	0
  3296  00189A  B4D8               	btfsc	status,2,c
  3297  00189C  EF52  F00C         	goto	u5211
  3298  0018A0  EF54  F00C         	goto	u5210
  3299  0018A4                     u5211:
  3300  0018A4  EF59  F00C         	goto	l5131
  3301  0018A8                     u5210:
  3302  0018A8  0E01               	movlw	1
  3303  0018AA  0100               	movlb	0	; () banked
  3304  0018AC  6F89               	movwf	detect_color@color& (0+255),b
  3305  0018AE  EF94  F00C         	goto	l5147
  3306  0018B2                     l5131:
  3307  0018B2  0E06               	movlw	6
  3308  0018B4  0100               	movlb	0	; () banked
  3309  0018B6  6F89               	movwf	detect_color@color& (0+255),b
  3310  0018B8  EF94  F00C         	goto	l5147
  3311  0018BC                     l5133:
  3312                           
  3313                           ; BSR set to: 0
  3314  0018BC  5188               	movf	(detect_color@GG+1)& (0+255),w,b
  3315  0018BE  E109               	bnz	u5220
  3316  0018C0  0E1F               	movlw	31
  3317  0018C2  5D87               	subwf	detect_color@GG& (0+255),w,b
  3318  0018C4  A0D8               	btfss	status,0,c
  3319  0018C6  EF67  F00C         	goto	u5221
  3320  0018CA  EF69  F00C         	goto	u5220
  3321  0018CE                     u5221:
  3322  0018CE  EF94  F00C         	goto	l5147
  3323  0018D2                     u5220:
  3324  0018D2                     
  3325                           ; BSR set to: 0
  3326  0018D2  5184               	movf	(detect_color@GB+1)& (0+255),w,b
  3327  0018D4  E109               	bnz	u5230
  3328  0018D6  0E1F               	movlw	31
  3329  0018D8  5D83               	subwf	detect_color@GB& (0+255),w,b
  3330  0018DA  A0D8               	btfss	status,0,c
  3331  0018DC  EF72  F00C         	goto	u5231
  3332  0018E0  EF74  F00C         	goto	u5230
  3333  0018E4                     u5231:
  3334  0018E4  EF94  F00C         	goto	l5147
  3335  0018E8                     u5230:
  3336  0018E8                     
  3337                           ; BSR set to: 0
  3338                           ;color.c: 341:             if (BG >= BR) {color = 7;}
  3339  0018E8  5185               	movf	detect_color@BR& (0+255),w,b
  3340  0018EA  5D8C               	subwf	detect_color@BG& (0+255),w,b
  3341  0018EC  5186               	movf	(detect_color@BR+1)& (0+255),w,b
  3342  0018EE  598D               	subwfb	(detect_color@BG+1)& (0+255),w,b
  3343  0018F0  A0D8               	btfss	status,0,c
  3344  0018F2  EF7D  F00C         	goto	u5241
  3345  0018F6  EF7F  F00C         	goto	u5240
  3346  0018FA                     u5241:
  3347  0018FA  EF83  F00C         	goto	l5141
  3348  0018FE                     u5240:
  3349  0018FE                     
  3350                           ; BSR set to: 0
  3351  0018FE  0E07               	movlw	7
  3352  001900  6F89               	movwf	detect_color@color& (0+255),b
  3353  001902  EF94  F00C         	goto	l5147
  3354  001906                     l5141:
  3355                           
  3356                           ; BSR set to: 0
  3357                           ;color.c: 343:                 if (BG < 48){color = 4;}
  3358  001906  518D               	movf	(detect_color@BG+1)& (0+255),w,b
  3359  001908  E107               	bnz	u5251
  3360  00190A  0E30               	movlw	48
  3361  00190C  5D8C               	subwf	detect_color@BG& (0+255),w,b
  3362  00190E  B0D8               	btfsc	status,0,c
  3363  001910  EF8C  F00C         	goto	u5251
  3364  001914  EF8E  F00C         	goto	u5250
  3365  001918                     u5251:
  3366  001918  EF92  F00C         	goto	l5145
  3367  00191C                     u5250:
  3368  00191C                     
  3369                           ; BSR set to: 0
  3370  00191C  0E04               	movlw	4
  3371  00191E  6F89               	movwf	detect_color@color& (0+255),b
  3372  001920  EF94  F00C         	goto	l5147
  3373  001924                     l5145:
  3374                           
  3375                           ; BSR set to: 0
  3376  001924  0E05               	movlw	5
  3377  001926  6F89               	movwf	detect_color@color& (0+255),b
  3378  001928                     l5147:
  3379                           
  3380                           ; BSR set to: 0
  3381                           ;color.c: 349:     if (compare(90, RR, RR * 2) && compare(90, RB, RB * 2) && compare(90,
      +                           BG, BG * 2)){color = 8;}
  3382  001928  0E00               	movlw	0
  3383  00192A  6F6B               	movwf	(compare@lower+1)& (0+255),b
  3384  00192C  0E5A               	movlw	90
  3385  00192E  6F6A               	movwf	compare@lower& (0+255),b
  3386  001930  C08A  F06C         	movff	detect_color@RR,compare@value2compare
  3387  001934  C08B  F06D         	movff	detect_color@RR+1,compare@value2compare+1
  3388  001938  90D8               	bcf	status,0,c
  3389  00193A  358A               	rlcf	detect_color@RR& (0+255),w,b
  3390  00193C  6F6E               	movwf	compare@upper& (0+255),b
  3391  00193E  358B               	rlcf	(detect_color@RR+1)& (0+255),w,b
  3392  001940  6F6F               	movwf	(compare@upper+1)& (0+255),b
  3393  001942  ECDF  F02B         	call	_compare	;wreg free
  3394  001946  0900               	iorlw	0
  3395  001948  B4D8               	btfsc	status,2,c
  3396  00194A  EFA9  F00C         	goto	u5261
  3397  00194E  EFAB  F00C         	goto	u5260
  3398  001952                     u5261:
  3399  001952  EFDE  F00C         	goto	l5155
  3400  001956                     u5260:
  3401  001956  0E00               	movlw	0
  3402  001958  0100               	movlb	0	; () banked
  3403  00195A  6F6B               	movwf	(compare@lower+1)& (0+255),b
  3404  00195C  0E5A               	movlw	90
  3405  00195E  6F6A               	movwf	compare@lower& (0+255),b
  3406  001960  C081  F06C         	movff	detect_color@RB,compare@value2compare
  3407  001964  C082  F06D         	movff	detect_color@RB+1,compare@value2compare+1
  3408  001968  90D8               	bcf	status,0,c
  3409  00196A  3581               	rlcf	detect_color@RB& (0+255),w,b
  3410  00196C  6F6E               	movwf	compare@upper& (0+255),b
  3411  00196E  3582               	rlcf	(detect_color@RB+1)& (0+255),w,b
  3412  001970  6F6F               	movwf	(compare@upper+1)& (0+255),b
  3413  001972  ECDF  F02B         	call	_compare	;wreg free
  3414  001976  0900               	iorlw	0
  3415  001978  B4D8               	btfsc	status,2,c
  3416  00197A  EFC1  F00C         	goto	u5271
  3417  00197E  EFC3  F00C         	goto	u5270
  3418  001982                     u5271:
  3419  001982  EFDE  F00C         	goto	l5155
  3420  001986                     u5270:
  3421  001986  0E00               	movlw	0
  3422  001988  0100               	movlb	0	; () banked
  3423  00198A  6F6B               	movwf	(compare@lower+1)& (0+255),b
  3424  00198C  0E5A               	movlw	90
  3425  00198E  6F6A               	movwf	compare@lower& (0+255),b
  3426  001990  C08C  F06C         	movff	detect_color@BG,compare@value2compare
  3427  001994  C08D  F06D         	movff	detect_color@BG+1,compare@value2compare+1
  3428  001998  90D8               	bcf	status,0,c
  3429  00199A  358C               	rlcf	detect_color@BG& (0+255),w,b
  3430  00199C  6F6E               	movwf	compare@upper& (0+255),b
  3431  00199E  358D               	rlcf	(detect_color@BG+1)& (0+255),w,b
  3432  0019A0  6F6F               	movwf	(compare@upper+1)& (0+255),b
  3433  0019A2  ECDF  F02B         	call	_compare	;wreg free
  3434  0019A6  0900               	iorlw	0
  3435  0019A8  B4D8               	btfsc	status,2,c
  3436  0019AA  EFD9  F00C         	goto	u5281
  3437  0019AE  EFDB  F00C         	goto	u5280
  3438  0019B2                     u5281:
  3439  0019B2  EFDE  F00C         	goto	l5155
  3440  0019B6                     u5280:
  3441  0019B6  0E08               	movlw	8
  3442  0019B8  0100               	movlb	0	; () banked
  3443  0019BA  6F89               	movwf	detect_color@color& (0+255),b
  3444  0019BC                     l5155:
  3445                           
  3446                           ;color.c: 350:     if (compare(0, BR, 25) && compare(0,RR,30)){color = 0;}
  3447  0019BC  0E00               	movlw	0
  3448  0019BE  0100               	movlb	0	; () banked
  3449  0019C0  6F6B               	movwf	(compare@lower+1)& (0+255),b
  3450  0019C2  0E00               	movlw	0
  3451  0019C4  6F6A               	movwf	compare@lower& (0+255),b
  3452  0019C6  C085  F06C         	movff	detect_color@BR,compare@value2compare
  3453  0019CA  C086  F06D         	movff	detect_color@BR+1,compare@value2compare+1
  3454  0019CE  0E00               	movlw	0
  3455  0019D0  6F6F               	movwf	(compare@upper+1)& (0+255),b
  3456  0019D2  0E19               	movlw	25
  3457  0019D4  6F6E               	movwf	compare@upper& (0+255),b
  3458  0019D6  ECDF  F02B         	call	_compare	;wreg free
  3459  0019DA  0900               	iorlw	0
  3460  0019DC  B4D8               	btfsc	status,2,c
  3461  0019DE  EFF3  F00C         	goto	u5291
  3462  0019E2  EFF5  F00C         	goto	u5290
  3463  0019E6                     u5291:
  3464  0019E6  EF0F  F00D         	goto	l5161
  3465  0019EA                     u5290:
  3466  0019EA  0E00               	movlw	0
  3467  0019EC  0100               	movlb	0	; () banked
  3468  0019EE  6F6B               	movwf	(compare@lower+1)& (0+255),b
  3469  0019F0  0E00               	movlw	0
  3470  0019F2  6F6A               	movwf	compare@lower& (0+255),b
  3471  0019F4  C08A  F06C         	movff	detect_color@RR,compare@value2compare
  3472  0019F8  C08B  F06D         	movff	detect_color@RR+1,compare@value2compare+1
  3473  0019FC  0E00               	movlw	0
  3474  0019FE  6F6F               	movwf	(compare@upper+1)& (0+255),b
  3475  001A00  0E1E               	movlw	30
  3476  001A02  6F6E               	movwf	compare@upper& (0+255),b
  3477  001A04  ECDF  F02B         	call	_compare	;wreg free
  3478  001A08  0900               	iorlw	0
  3479  001A0A  B4D8               	btfsc	status,2,c
  3480  001A0C  EF0A  F00D         	goto	u5301
  3481  001A10  EF0C  F00D         	goto	u5300
  3482  001A14                     u5301:
  3483  001A14  EF0F  F00D         	goto	l5161
  3484  001A18                     u5300:
  3485  001A18  0E00               	movlw	0
  3486  001A1A  0100               	movlb	0	; () banked
  3487  001A1C  6F89               	movwf	detect_color@color& (0+255),b
  3488  001A1E                     l5161:
  3489                           
  3490                           ;color.c: 352:     if (color == 8) {toggle_light(2,1);}
  3491  001A1E  0E08               	movlw	8
  3492  001A20  0100               	movlb	0	; () banked
  3493  001A22  1989               	xorwf	detect_color@color& (0+255),w,b
  3494  001A24  A4D8               	btfss	status,2,c
  3495  001A26  EF17  F00D         	goto	u5311
  3496  001A2A  EF19  F00D         	goto	u5310
  3497  001A2E                     u5311:
  3498  001A2E  EF1E  F00D         	goto	l5165
  3499  001A32                     u5310:
  3500  001A32                     
  3501                           ; BSR set to: 0
  3502  001A32  0E01               	movlw	1
  3503  001A34  6E01               	movwf	toggle_light@toggletime^0,c
  3504  001A36  0E02               	movlw	2
  3505  001A38  ECE9  F019         	call	_toggle_light
  3506  001A3C                     l5165:
  3507                           
  3508                           ;color.c: 353:     return color;
  3509  001A3C  0100               	movlb	0	; () banked
  3510  001A3E  5189               	movf	detect_color@color& (0+255),w,b
  3511  001A40                     
  3512                           ; BSR set to: 0
  3513  001A40  0012               	return		;funcret
  3514  001A42                     __end_of_detect_color:
  3515                           	callstack 0
  3516                           
  3517 ;; *************** function _compare *****************
  3518 ;; Defined at:
  3519 ;;		line 356 in file "color.c"
  3520 ;; Parameters:    Size  Location     Type
  3521 ;;  lower           2   10[BANK0 ] unsigned int 
  3522 ;;  value2compar    2   12[BANK0 ] unsigned int 
  3523 ;;  upper           2   14[BANK0 ] unsigned int 
  3524 ;; Auto vars:     Size  Location     Type
  3525 ;;  result          1   16[BANK0 ] unsigned char 
  3526 ;; Return value:  Size  Location     Type
  3527 ;;                  1    wreg      unsigned char 
  3528 ;; Registers used:
  3529 ;;		wreg, status,2, status,0
  3530 ;; Tracked objects:
  3531 ;;		On entry : 0/0
  3532 ;;		On exit  : 0/0
  3533 ;;		Unchanged: 0/0
  3534 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3535 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3536 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3537 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3538 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3539 ;;Total ram usage:        7 bytes
  3540 ;; Hardware stack levels used: 1
  3541 ;; Hardware stack levels required when called: 1
  3542 ;; This function calls:
  3543 ;;		Nothing
  3544 ;; This function is called by:
  3545 ;;		_detect_color
  3546 ;; This function uses a non-reentrant model
  3547 ;;
  3548                           
  3549                           	psect	text5
  3550  0057BE                     __ptext5:
  3551                           	callstack 0
  3552  0057BE                     _compare:
  3553                           	callstack 27
  3554  0057BE                     
  3555                           ;color.c: 356: unsigned char compare(unsigned int lower, unsigned int value2compare, uns
      +                          igned int upper);color.c: 357: {;color.c: 358:     unsigned char result = 0;
  3556  0057BE  0E00               	movlw	0
  3557  0057C0  0100               	movlb	0	; () banked
  3558  0057C2  6F70               	movwf	compare@result& (0+255),b
  3559  0057C4                     
  3560                           ; BSR set to: 0
  3561                           ;color.c: 359:     if (lower < value2compare && value2compare <= upper){result = 1;}
  3562  0057C4  516C               	movf	compare@value2compare& (0+255),w,b
  3563  0057C6  5D6A               	subwf	compare@lower& (0+255),w,b
  3564  0057C8  516D               	movf	(compare@value2compare+1)& (0+255),w,b
  3565  0057CA  596B               	subwfb	(compare@lower+1)& (0+255),w,b
  3566  0057CC  B0D8               	btfsc	status,0,c
  3567  0057CE  EFEB  F02B         	goto	u4621
  3568  0057D2  EFED  F02B         	goto	u4620
  3569  0057D6                     u4621:
  3570  0057D6  EFFA  F02B         	goto	l163
  3571  0057DA                     u4620:
  3572  0057DA                     
  3573                           ; BSR set to: 0
  3574  0057DA  516C               	movf	compare@value2compare& (0+255),w,b
  3575  0057DC  5D6E               	subwf	compare@upper& (0+255),w,b
  3576  0057DE  516D               	movf	(compare@value2compare+1)& (0+255),w,b
  3577  0057E0  596F               	subwfb	(compare@upper+1)& (0+255),w,b
  3578  0057E2  A0D8               	btfss	status,0,c
  3579  0057E4  EFF6  F02B         	goto	u4631
  3580  0057E8  EFF8  F02B         	goto	u4630
  3581  0057EC                     u4631:
  3582  0057EC  EFFA  F02B         	goto	l163
  3583  0057F0                     u4630:
  3584  0057F0                     
  3585                           ; BSR set to: 0
  3586  0057F0  0E01               	movlw	1
  3587  0057F2  6F70               	movwf	compare@result& (0+255),b
  3588  0057F4                     l163:
  3589                           
  3590                           ; BSR set to: 0
  3591                           ;color.c: 360:     return result;
  3592  0057F4  5170               	movf	compare@result& (0+255),w,b
  3593  0057F6                     
  3594                           ; BSR set to: 0
  3595  0057F6  0012               	return		;funcret
  3596  0057F8                     __end_of_compare:
  3597                           	callstack 0
  3598                           
  3599 ;; *************** function _color_data_collection *****************
  3600 ;; Defined at:
  3601 ;;		line 200 in file "color.c"
  3602 ;; Parameters:    Size  Location     Type
  3603 ;;  m               2   89[COMRAM] PTR struct color_rgb
  3604 ;;		 -> main@rgb(8), 
  3605 ;; Auto vars:     Size  Location     Type
  3606 ;;  x               2  132[BANK0 ] int 
  3607 ;;  k               2  130[BANK0 ] int 
  3608 ;;  j               2  128[BANK0 ] int 
  3609 ;;  i               2  126[BANK0 ] int 
  3610 ;; Return value:  Size  Location     Type
  3611 ;;                  1    wreg      void 
  3612 ;; Registers used:
  3613 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3614 ;; Tracked objects:
  3615 ;;		On entry : 0/0
  3616 ;;		On exit  : 0/0
  3617 ;;		Unchanged: 0/0
  3618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3619 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3620 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3621 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3622 ;;      Totals:         4       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3623 ;;Total ram usage:       12 bytes
  3624 ;; Hardware stack levels used: 1
  3625 ;; Hardware stack levels required when called: 10
  3626 ;; This function calls:
  3627 ;;		_LED_B
  3628 ;;		_LED_C
  3629 ;;		_LED_G
  3630 ;;		_LED_R
  3631 ;;		_color_display
  3632 ;;		_color_predict
  3633 ;;		_read_color
  3634 ;; This function is called by:
  3635 ;;		_test_function
  3636 ;; This function uses a non-reentrant model
  3637 ;;
  3638                           
  3639                           	psect	text6
  3640  003FAC                     __ptext6:
  3641                           	callstack 0
  3642  003FAC                     _color_data_collection:
  3643                           	callstack 19
  3644  003FAC                     
  3645                           ;color.c: 202:     int i = 0; int j = 0; int k = 0; int x = 0;
  3646  003FAC  0E00               	movlw	0
  3647  003FAE  0100               	movlb	0	; () banked
  3648  003FB0  6FDF               	movwf	(color_data_collection@i+1)& (0+255),b
  3649  003FB2  0E00               	movlw	0
  3650  003FB4  6FDE               	movwf	color_data_collection@i& (0+255),b
  3651  003FB6  0E00               	movlw	0
  3652  003FB8  6FE3               	movwf	(color_data_collection@k+1)& (0+255),b
  3653  003FBA  0E00               	movlw	0
  3654  003FBC  6FE2               	movwf	color_data_collection@k& (0+255),b
  3655  003FBE  0E00               	movlw	0
  3656  003FC0  6FE5               	movwf	(color_data_collection@x+1)& (0+255),b
  3657  003FC2  0E00               	movlw	0
  3658  003FC4  6FE4               	movwf	color_data_collection@x& (0+255),b
  3659                           
  3660                           ;color.c: 203:     for (i = 0; i < 1; ++i){
  3661  003FC6  0E00               	movlw	0
  3662  003FC8  6FDF               	movwf	(color_data_collection@i+1)& (0+255),b
  3663  003FCA  0E00               	movlw	0
  3664  003FCC  6FDE               	movwf	color_data_collection@i& (0+255),b
  3665  003FCE                     l4929:
  3666                           
  3667                           ; BSR set to: 0
  3668                           ;color.c: 204:         LED_C();
  3669  003FCE  EC15  F02D         	call	_LED_C	;wreg free
  3670  003FD2                     
  3671                           ;color.c: 205:         _delay((unsigned long)((100)*(64000000/4000.0)));
  3672  003FD2  0E09               	movlw	9
  3673  003FD4  6E5D               	movwf	(??_color_data_collection+1)^0,c
  3674  003FD6  0E1E               	movlw	30
  3675  003FD8  6E5C               	movwf	??_color_data_collection^0,c
  3676  003FDA  0EE4               	movlw	228
  3677  003FDC                     u5877:
  3678  003FDC  2EE8               	decfsz	wreg,f,c
  3679  003FDE  D7FE               	bra	u5877
  3680  003FE0  2E5C               	decfsz	??_color_data_collection^0,f,c
  3681  003FE2  D7FC               	bra	u5877
  3682  003FE4  2E5D               	decfsz	(??_color_data_collection+1)^0,f,c
  3683  003FE6  D7FA               	bra	u5877
  3684  003FE8  D000               	nop2	
  3685  003FEA                     
  3686                           ;color.c: 206:         read_color(m);
  3687  003FEA  C05A  F00C         	movff	color_data_collection@m,read_color@m
  3688  003FEE  C05B  F00D         	movff	color_data_collection@m+1,read_color@m+1
  3689  003FF2  ECE0  F029         	call	_read_color	;wreg free
  3690  003FF6                     
  3691                           ;color.c: 207:         color_display(m);
  3692  003FF6  C05A  F058         	movff	color_data_collection@m,color_display@m
  3693  003FFA  C05B  F059         	movff	color_data_collection@m+1,color_display@m+1
  3694  003FFE  EC40  F029         	call	_color_display	;wreg free
  3695  004002                     
  3696                           ;color.c: 208:     }
  3697  004002  0100               	movlb	0	; () banked
  3698  004004  4BDE               	infsnz	color_data_collection@i& (0+255),f,b
  3699  004006  2BDF               	incf	(color_data_collection@i+1)& (0+255),f,b
  3700  004008                     
  3701                           ; BSR set to: 0
  3702  004008  BFDF               	btfsc	(color_data_collection@i+1)& (0+255),7,b
  3703  00400A  EF0F  F020         	goto	u5131
  3704  00400E  51DF               	movf	(color_data_collection@i+1)& (0+255),w,b
  3705  004010  E108               	bnz	u5130
  3706  004012  05DE               	decf	color_data_collection@i& (0+255),w,b
  3707  004014  A0D8               	btfss	status,0,c
  3708  004016  EF0F  F020         	goto	u5131
  3709  00401A  EF11  F020         	goto	u5130
  3710  00401E                     u5131:
  3711  00401E  EFE7  F01F         	goto	l4929
  3712  004022                     u5130:
  3713  004022                     
  3714                           ; BSR set to: 0
  3715                           ;color.c: 210:     for (j = 0; j < 1; ++j){
  3716  004022  0E00               	movlw	0
  3717  004024  6FE1               	movwf	(color_data_collection@j+1)& (0+255),b
  3718  004026  0E00               	movlw	0
  3719  004028  6FE0               	movwf	color_data_collection@j& (0+255),b
  3720  00402A                     l4947:
  3721                           
  3722                           ; BSR set to: 0
  3723                           ;color.c: 211:         LED_R();
  3724  00402A  ECD5  F02C         	call	_LED_R	;wreg free
  3725  00402E                     
  3726                           ;color.c: 212:         _delay((unsigned long)((100)*(64000000/4000.0)));
  3727  00402E  0E09               	movlw	9
  3728  004030  6E5D               	movwf	(??_color_data_collection+1)^0,c
  3729  004032  0E1E               	movlw	30
  3730  004034  6E5C               	movwf	??_color_data_collection^0,c
  3731  004036  0EE4               	movlw	228
  3732  004038                     u5887:
  3733  004038  2EE8               	decfsz	wreg,f,c
  3734  00403A  D7FE               	bra	u5887
  3735  00403C  2E5C               	decfsz	??_color_data_collection^0,f,c
  3736  00403E  D7FC               	bra	u5887
  3737  004040  2E5D               	decfsz	(??_color_data_collection+1)^0,f,c
  3738  004042  D7FA               	bra	u5887
  3739  004044  D000               	nop2	
  3740  004046                     
  3741                           ;color.c: 213:         read_color(m);
  3742  004046  C05A  F00C         	movff	color_data_collection@m,read_color@m
  3743  00404A  C05B  F00D         	movff	color_data_collection@m+1,read_color@m+1
  3744  00404E  ECE0  F029         	call	_read_color	;wreg free
  3745  004052                     
  3746                           ;color.c: 214:         color_display(m);
  3747  004052  C05A  F058         	movff	color_data_collection@m,color_display@m
  3748  004056  C05B  F059         	movff	color_data_collection@m+1,color_display@m+1
  3749  00405A  EC40  F029         	call	_color_display	;wreg free
  3750  00405E                     
  3751                           ;color.c: 215:     }
  3752  00405E  0100               	movlb	0	; () banked
  3753  004060  4BE0               	infsnz	color_data_collection@j& (0+255),f,b
  3754  004062  2BE1               	incf	(color_data_collection@j+1)& (0+255),f,b
  3755  004064                     
  3756                           ; BSR set to: 0
  3757  004064  BFE1               	btfsc	(color_data_collection@j+1)& (0+255),7,b
  3758  004066  EF3D  F020         	goto	u5141
  3759  00406A  51E1               	movf	(color_data_collection@j+1)& (0+255),w,b
  3760  00406C  E108               	bnz	u5140
  3761  00406E  05E0               	decf	color_data_collection@j& (0+255),w,b
  3762  004070  A0D8               	btfss	status,0,c
  3763  004072  EF3D  F020         	goto	u5141
  3764  004076  EF3F  F020         	goto	u5140
  3765  00407A                     u5141:
  3766  00407A  EF15  F020         	goto	l4947
  3767  00407E                     u5140:
  3768  00407E                     
  3769                           ; BSR set to: 0
  3770                           ;color.c: 217:     for (k = 0; k < 1; ++k){
  3771  00407E  0E00               	movlw	0
  3772  004080  6FE3               	movwf	(color_data_collection@k+1)& (0+255),b
  3773  004082  0E00               	movlw	0
  3774  004084  6FE2               	movwf	color_data_collection@k& (0+255),b
  3775  004086                     l4965:
  3776                           
  3777                           ; BSR set to: 0
  3778                           ;color.c: 218:         LED_G();
  3779  004086  ECF5  F02C         	call	_LED_G	;wreg free
  3780  00408A                     
  3781                           ;color.c: 219:         _delay((unsigned long)((100)*(64000000/4000.0)));
  3782  00408A  0E09               	movlw	9
  3783  00408C  6E5D               	movwf	(??_color_data_collection+1)^0,c
  3784  00408E  0E1E               	movlw	30
  3785  004090  6E5C               	movwf	??_color_data_collection^0,c
  3786  004092  0EE4               	movlw	228
  3787  004094                     u5897:
  3788  004094  2EE8               	decfsz	wreg,f,c
  3789  004096  D7FE               	bra	u5897
  3790  004098  2E5C               	decfsz	??_color_data_collection^0,f,c
  3791  00409A  D7FC               	bra	u5897
  3792  00409C  2E5D               	decfsz	(??_color_data_collection+1)^0,f,c
  3793  00409E  D7FA               	bra	u5897
  3794  0040A0  D000               	nop2	
  3795  0040A2                     
  3796                           ;color.c: 220:         read_color(m);
  3797  0040A2  C05A  F00C         	movff	color_data_collection@m,read_color@m
  3798  0040A6  C05B  F00D         	movff	color_data_collection@m+1,read_color@m+1
  3799  0040AA  ECE0  F029         	call	_read_color	;wreg free
  3800  0040AE                     
  3801                           ;color.c: 221:         color_display(m);
  3802  0040AE  C05A  F058         	movff	color_data_collection@m,color_display@m
  3803  0040B2  C05B  F059         	movff	color_data_collection@m+1,color_display@m+1
  3804  0040B6  EC40  F029         	call	_color_display	;wreg free
  3805  0040BA                     
  3806                           ;color.c: 222:     }
  3807  0040BA  0100               	movlb	0	; () banked
  3808  0040BC  4BE2               	infsnz	color_data_collection@k& (0+255),f,b
  3809  0040BE  2BE3               	incf	(color_data_collection@k+1)& (0+255),f,b
  3810  0040C0                     
  3811                           ; BSR set to: 0
  3812  0040C0  BFE3               	btfsc	(color_data_collection@k+1)& (0+255),7,b
  3813  0040C2  EF6B  F020         	goto	u5151
  3814  0040C6  51E3               	movf	(color_data_collection@k+1)& (0+255),w,b
  3815  0040C8  E108               	bnz	u5150
  3816  0040CA  05E2               	decf	color_data_collection@k& (0+255),w,b
  3817  0040CC  A0D8               	btfss	status,0,c
  3818  0040CE  EF6B  F020         	goto	u5151
  3819  0040D2  EF6D  F020         	goto	u5150
  3820  0040D6                     u5151:
  3821  0040D6  EF43  F020         	goto	l4965
  3822  0040DA                     u5150:
  3823  0040DA                     
  3824                           ; BSR set to: 0
  3825                           ;color.c: 224:     for (x = 0; x < 1; ++x){
  3826  0040DA  0E00               	movlw	0
  3827  0040DC  6FE5               	movwf	(color_data_collection@x+1)& (0+255),b
  3828  0040DE  0E00               	movlw	0
  3829  0040E0  6FE4               	movwf	color_data_collection@x& (0+255),b
  3830  0040E2                     l4983:
  3831                           
  3832                           ; BSR set to: 0
  3833                           ;color.c: 225:         LED_B();
  3834  0040E2  EC05  F02D         	call	_LED_B	;wreg free
  3835  0040E6                     
  3836                           ;color.c: 226:         _delay((unsigned long)((100)*(64000000/4000.0)));
  3837  0040E6  0E09               	movlw	9
  3838  0040E8  6E5D               	movwf	(??_color_data_collection+1)^0,c
  3839  0040EA  0E1E               	movlw	30
  3840  0040EC  6E5C               	movwf	??_color_data_collection^0,c
  3841  0040EE  0EE4               	movlw	228
  3842  0040F0                     u5907:
  3843  0040F0  2EE8               	decfsz	wreg,f,c
  3844  0040F2  D7FE               	bra	u5907
  3845  0040F4  2E5C               	decfsz	??_color_data_collection^0,f,c
  3846  0040F6  D7FC               	bra	u5907
  3847  0040F8  2E5D               	decfsz	(??_color_data_collection+1)^0,f,c
  3848  0040FA  D7FA               	bra	u5907
  3849  0040FC  D000               	nop2	
  3850  0040FE                     
  3851                           ;color.c: 227:         read_color(m);
  3852  0040FE  C05A  F00C         	movff	color_data_collection@m,read_color@m
  3853  004102  C05B  F00D         	movff	color_data_collection@m+1,read_color@m+1
  3854  004106  ECE0  F029         	call	_read_color	;wreg free
  3855  00410A                     
  3856                           ;color.c: 228:         color_display(m);
  3857  00410A  C05A  F058         	movff	color_data_collection@m,color_display@m
  3858  00410E  C05B  F059         	movff	color_data_collection@m+1,color_display@m+1
  3859  004112  EC40  F029         	call	_color_display	;wreg free
  3860  004116                     
  3861                           ;color.c: 229:     }
  3862  004116  0100               	movlb	0	; () banked
  3863  004118  4BE4               	infsnz	color_data_collection@x& (0+255),f,b
  3864  00411A  2BE5               	incf	(color_data_collection@x+1)& (0+255),f,b
  3865  00411C                     
  3866                           ; BSR set to: 0
  3867  00411C  BFE5               	btfsc	(color_data_collection@x+1)& (0+255),7,b
  3868  00411E  EF99  F020         	goto	u5161
  3869  004122  51E5               	movf	(color_data_collection@x+1)& (0+255),w,b
  3870  004124  E108               	bnz	u5160
  3871  004126  05E4               	decf	color_data_collection@x& (0+255),w,b
  3872  004128  A0D8               	btfss	status,0,c
  3873  00412A  EF99  F020         	goto	u5161
  3874  00412E  EF9B  F020         	goto	u5160
  3875  004132                     u5161:
  3876  004132  EF71  F020         	goto	l4983
  3877  004136                     u5160:
  3878  004136                     
  3879                           ; BSR set to: 0
  3880                           ;color.c: 230:     color_predict(1);
  3881  004136  0E01               	movlw	1
  3882  004138  EC82  F02C         	call	_color_predict
  3883  00413C                     
  3884                           ;color.c: 231:     LED_C();
  3885  00413C  EC15  F02D         	call	_LED_C	;wreg free
  3886  004140  0012               	return		;funcret
  3887  004142                     __end_of_color_data_collection:
  3888                           	callstack 0
  3889                           
  3890 ;; *************** function _read_color *****************
  3891 ;; Defined at:
  3892 ;;		line 147 in file "color.c"
  3893 ;; Parameters:    Size  Location     Type
  3894 ;;  m               2   11[COMRAM] PTR struct color_rgb
  3895 ;;		 -> main@rgb(8), 
  3896 ;; Auto vars:     Size  Location     Type
  3897 ;;		None
  3898 ;; Return value:  Size  Location     Type
  3899 ;;                  1    wreg      void 
  3900 ;; Registers used:
  3901 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3902 ;; Tracked objects:
  3903 ;;		On entry : 0/0
  3904 ;;		On exit  : 0/0
  3905 ;;		Unchanged: 0/0
  3906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3907 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3908 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3909 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3910 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3911 ;;Total ram usage:        2 bytes
  3912 ;; Hardware stack levels used: 1
  3913 ;; Hardware stack levels required when called: 4
  3914 ;; This function calls:
  3915 ;;		_color_read_Blue
  3916 ;;		_color_read_Clear
  3917 ;;		_color_read_Green
  3918 ;;		_color_read_Red
  3919 ;; This function is called by:
  3920 ;;		_color_data_collection
  3921 ;;		_detect_color
  3922 ;;		_test_function
  3923 ;; This function uses a non-reentrant model
  3924 ;;
  3925                           
  3926                           	psect	text7
  3927  0053C0                     __ptext7:
  3928                           	callstack 0
  3929  0053C0                     _read_color:
  3930                           	callstack 24
  3931  0053C0                     
  3932                           ;color.c: 147: void read_color (struct color_rgb *m);color.c: 148: {;color.c: 149:     m
      +                          ->R = color_read_Red();
  3933  0053C0  EC38  F02A         	call	_color_read_Red	;wreg free
  3934  0053C4  C00C  FFD9         	movff	read_color@m,fsr2l
  3935  0053C8  C00D  FFDA         	movff	read_color@m+1,fsr2h
  3936  0053CC  C005  FFDE         	movff	?_color_read_Red,postinc2
  3937  0053D0  C006  FFDD         	movff	?_color_read_Red+1,postdec2
  3938                           
  3939                           ;color.c: 150:     m->B = color_read_Blue();
  3940  0053D4  EC88  F02A         	call	_color_read_Blue	;wreg free
  3941  0053D8  EE20 F004          	lfsr	2,4
  3942  0053DC  500C               	movf	read_color@m^0,w,c
  3943  0053DE  26D9               	addwf	fsr2l,f,c
  3944  0053E0  500D               	movf	(read_color@m+1)^0,w,c
  3945  0053E2  22DA               	addwfc	fsr2h,f,c
  3946  0053E4  C005  FFDE         	movff	?_color_read_Blue,postinc2
  3947  0053E8  C006  FFDD         	movff	?_color_read_Blue+1,postdec2
  3948                           
  3949                           ;color.c: 151:     m->G = color_read_Green();
  3950  0053EC  EC60  F02A         	call	_color_read_Green	;wreg free
  3951  0053F0  EE20 F002          	lfsr	2,2
  3952  0053F4  500C               	movf	read_color@m^0,w,c
  3953  0053F6  26D9               	addwf	fsr2l,f,c
  3954  0053F8  500D               	movf	(read_color@m+1)^0,w,c
  3955  0053FA  22DA               	addwfc	fsr2h,f,c
  3956  0053FC  C005  FFDE         	movff	?_color_read_Green,postinc2
  3957  005400  C006  FFDD         	movff	?_color_read_Green+1,postdec2
  3958                           
  3959                           ;color.c: 152:     m->C = color_read_Clear();
  3960  005404  ECB0  F02A         	call	_color_read_Clear	;wreg free
  3961  005408  EE20 F006          	lfsr	2,6
  3962  00540C  500C               	movf	read_color@m^0,w,c
  3963  00540E  26D9               	addwf	fsr2l,f,c
  3964  005410  500D               	movf	(read_color@m+1)^0,w,c
  3965  005412  22DA               	addwfc	fsr2h,f,c
  3966  005414  C005  FFDE         	movff	?_color_read_Clear,postinc2
  3967  005418  C006  FFDD         	movff	?_color_read_Clear+1,postdec2
  3968  00541C  0012               	return		;funcret
  3969  00541E                     __end_of_read_color:
  3970                           	callstack 0
  3971                           
  3972 ;; *************** function _color_display *****************
  3973 ;; Defined at:
  3974 ;;		line 234 in file "color.c"
  3975 ;; Parameters:    Size  Location     Type
  3976 ;;  m               2   87[COMRAM] PTR struct color_rgb
  3977 ;;		 -> main@rgb(8), 
  3978 ;; Auto vars:     Size  Location     Type
  3979 ;;  buf           100   25[BANK0 ] unsigned char [100]
  3980 ;; Return value:  Size  Location     Type
  3981 ;;                  1    wreg      void 
  3982 ;; Registers used:
  3983 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3984 ;; Tracked objects:
  3985 ;;		On entry : 0/0
  3986 ;;		On exit  : 0/0
  3987 ;;		Unchanged: 0/0
  3988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3989 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3990 ;;      Locals:         0     100       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3991 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3992 ;;      Totals:         2     100       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3993 ;;Total ram usage:      102 bytes
  3994 ;; Hardware stack levels used: 1
  3995 ;; Hardware stack levels required when called: 9
  3996 ;; This function calls:
  3997 ;;		_sendStringSerial4
  3998 ;;		_sprintf
  3999 ;; This function is called by:
  4000 ;;		_color_data_collection
  4001 ;;		_test_function
  4002 ;; This function uses a non-reentrant model
  4003 ;;
  4004                           
  4005                           	psect	text8
  4006  005280                     __ptext8:
  4007                           	callstack 0
  4008  005280                     _color_display:
  4009                           	callstack 20
  4010  005280                     
  4011                           ;color.c: 234: void color_display(struct color_rgb *m);color.c: 235: {;color.c: 236:    
      +                           char buf[100];;color.c: 237:     sprintf(buf,"%d\t%d\t%d\t%d\r\n", m->R, m->G, m->B, m-
      +                          >C);
  4012  005280  0E79               	movlw	low color_display@buf
  4013  005282  0100               	movlb	0	; () banked
  4014  005284  6F60               	movwf	sprintf@s& (0+255),b
  4015  005286  0E00               	movlw	high color_display@buf
  4016  005288  6F61               	movwf	(sprintf@s+1)& (0+255),b
  4017  00528A  0E16               	movlw	low STR_1
  4018  00528C  6F62               	movwf	sprintf@fmt& (0+255),b
  4019  00528E  0E0E               	movlw	high STR_1
  4020  005290  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
  4021  005292  C058  FFD9         	movff	color_display@m,fsr2l
  4022  005296  C059  FFDA         	movff	color_display@m+1,fsr2h
  4023  00529A  CFDE F064          	movff	postinc2,?_sprintf+4
  4024  00529E  CFDD F065          	movff	postdec2,?_sprintf+5
  4025  0052A2  EE20 F002          	lfsr	2,2
  4026  0052A6  5058               	movf	color_display@m^0,w,c
  4027  0052A8  26D9               	addwf	fsr2l,f,c
  4028  0052AA  5059               	movf	(color_display@m+1)^0,w,c
  4029  0052AC  22DA               	addwfc	fsr2h,f,c
  4030  0052AE  CFDE F066          	movff	postinc2,?_sprintf+6
  4031  0052B2  CFDD F067          	movff	postdec2,?_sprintf+7
  4032  0052B6  EE20 F004          	lfsr	2,4
  4033  0052BA  5058               	movf	color_display@m^0,w,c
  4034  0052BC  26D9               	addwf	fsr2l,f,c
  4035  0052BE  5059               	movf	(color_display@m+1)^0,w,c
  4036  0052C0  22DA               	addwfc	fsr2h,f,c
  4037  0052C2  CFDE F068          	movff	postinc2,?_sprintf+8
  4038  0052C6  CFDD F069          	movff	postdec2,?_sprintf+9
  4039  0052CA  EE20 F006          	lfsr	2,6
  4040  0052CE  5058               	movf	color_display@m^0,w,c
  4041  0052D0  26D9               	addwf	fsr2l,f,c
  4042  0052D2  5059               	movf	(color_display@m+1)^0,w,c
  4043  0052D4  22DA               	addwfc	fsr2h,f,c
  4044  0052D6  CFDE F06A          	movff	postinc2,?_sprintf+10
  4045  0052DA  CFDD F06B          	movff	postdec2,?_sprintf+11
  4046  0052DE  EC0F  F02A         	call	_sprintf	;wreg free
  4047  0052E2                     
  4048                           ;color.c: 238:     sendStringSerial4(buf);
  4049  0052E2  0E79               	movlw	low color_display@buf
  4050  0052E4  6E02               	movwf	sendStringSerial4@string^0,c
  4051  0052E6  0E00               	movlw	high color_display@buf
  4052  0052E8  6E03               	movwf	(sendStringSerial4@string+1)^0,c
  4053  0052EA  EC6A  F02C         	call	_sendStringSerial4	;wreg free
  4054  0052EE  0012               	return		;funcret
  4055  0052F0                     __end_of_color_display:
  4056                           	callstack 0
  4057                           
  4058 ;; *************** function _calibrate_white *****************
  4059 ;; Defined at:
  4060 ;;		line 258 in file "color.c"
  4061 ;; Parameters:    Size  Location     Type
  4062 ;;  w               2   11[COMRAM] PTR struct white_card
  4063 ;;		 -> main@white(28), 
  4064 ;; Auto vars:     Size  Location     Type
  4065 ;;		None
  4066 ;; Return value:  Size  Location     Type
  4067 ;;                  1    wreg      void 
  4068 ;; Registers used:
  4069 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4070 ;; Tracked objects:
  4071 ;;		On entry : 0/0
  4072 ;;		On exit  : 0/0
  4073 ;;		Unchanged: 0/0
  4074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4075 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4076 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4077 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4078 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4079 ;;Total ram usage:        4 bytes
  4080 ;; Hardware stack levels used: 1
  4081 ;; Hardware stack levels required when called: 4
  4082 ;; This function calls:
  4083 ;;		_LED_B
  4084 ;;		_LED_C
  4085 ;;		_LED_G
  4086 ;;		_LED_OFF
  4087 ;;		_LED_R
  4088 ;;		_color_read_Blue
  4089 ;;		_color_read_Clear
  4090 ;;		_color_read_Green
  4091 ;;		_color_read_Red
  4092 ;;		_toggle_light
  4093 ;; This function is called by:
  4094 ;;		_main
  4095 ;;		_test_function
  4096 ;; This function uses a non-reentrant model
  4097 ;;
  4098                           
  4099                           	psect	text9
  4100  00367E                     __ptext9:
  4101                           	callstack 0
  4102  00367E                     _calibrate_white:
  4103                           	callstack 25
  4104  00367E                     
  4105                           ;color.c: 258: void calibrate_white(struct white_card *w);color.c: 259: {;color.c: 260: 
      +                              LED_OFF();
  4106  00367E  ECE5  F02C         	call	_LED_OFF	;wreg free
  4107  003682                     
  4108                           ;color.c: 261:     toggle_light(1,2);
  4109  003682  0E02               	movlw	2
  4110  003684  6E01               	movwf	toggle_light@toggletime^0,c
  4111  003686  0E01               	movlw	1
  4112  003688  ECE9  F019         	call	_toggle_light
  4113  00368C                     
  4114                           ;color.c: 262:     _delay((unsigned long)((500)*(64000000/4000.0)));
  4115  00368C  0E29               	movlw	41
  4116  00368E  6E0F               	movwf	(??_calibrate_white+1)^0,c
  4117  003690  0E96               	movlw	150
  4118  003692  6E0E               	movwf	??_calibrate_white^0,c
  4119  003694  0E7F               	movlw	127
  4120  003696                     u5917:
  4121  003696  2EE8               	decfsz	wreg,f,c
  4122  003698  D7FE               	bra	u5917
  4123  00369A  2E0E               	decfsz	??_calibrate_white^0,f,c
  4124  00369C  D7FC               	bra	u5917
  4125  00369E  2E0F               	decfsz	(??_calibrate_white+1)^0,f,c
  4126  0036A0  D7FA               	bra	u5917
  4127  0036A2  F000               	nop	
  4128  0036A4                     
  4129                           ;color.c: 264:     LED_R();
  4130  0036A4  ECD5  F02C         	call	_LED_R	;wreg free
  4131  0036A8                     
  4132                           ;color.c: 265:     _delay((unsigned long)((100)*(64000000/4000.0)));
  4133  0036A8  0E09               	movlw	9
  4134  0036AA  6E0F               	movwf	(??_calibrate_white+1)^0,c
  4135  0036AC  0E1E               	movlw	30
  4136  0036AE  6E0E               	movwf	??_calibrate_white^0,c
  4137  0036B0  0EE4               	movlw	228
  4138  0036B2                     u5927:
  4139  0036B2  2EE8               	decfsz	wreg,f,c
  4140  0036B4  D7FE               	bra	u5927
  4141  0036B6  2E0E               	decfsz	??_calibrate_white^0,f,c
  4142  0036B8  D7FC               	bra	u5927
  4143  0036BA  2E0F               	decfsz	(??_calibrate_white+1)^0,f,c
  4144  0036BC  D7FA               	bra	u5927
  4145  0036BE  D000               	nop2	
  4146  0036C0                     
  4147                           ;color.c: 266:     w->RR = color_read_Red(); w->RG = color_read_Green(); w->RB = color_r
      +                          ead_Blue();
  4148  0036C0  EC38  F02A         	call	_color_read_Red	;wreg free
  4149  0036C4  C00C  FFD9         	movff	calibrate_white@w,fsr2l
  4150  0036C8  C00D  FFDA         	movff	calibrate_white@w+1,fsr2h
  4151  0036CC  C005  FFDE         	movff	?_color_read_Red,postinc2
  4152  0036D0  C006  FFDD         	movff	?_color_read_Red+1,postdec2
  4153  0036D4  EC60  F02A         	call	_color_read_Green	;wreg free
  4154  0036D8  EE20 F002          	lfsr	2,2
  4155  0036DC  500C               	movf	calibrate_white@w^0,w,c
  4156  0036DE  26D9               	addwf	fsr2l,f,c
  4157  0036E0  500D               	movf	(calibrate_white@w+1)^0,w,c
  4158  0036E2  22DA               	addwfc	fsr2h,f,c
  4159  0036E4  C005  FFDE         	movff	?_color_read_Green,postinc2
  4160  0036E8  C006  FFDD         	movff	?_color_read_Green+1,postdec2
  4161  0036EC  EC88  F02A         	call	_color_read_Blue	;wreg free
  4162  0036F0  EE20 F004          	lfsr	2,4
  4163  0036F4  500C               	movf	calibrate_white@w^0,w,c
  4164  0036F6  26D9               	addwf	fsr2l,f,c
  4165  0036F8  500D               	movf	(calibrate_white@w+1)^0,w,c
  4166  0036FA  22DA               	addwfc	fsr2h,f,c
  4167  0036FC  C005  FFDE         	movff	?_color_read_Blue,postinc2
  4168  003700  C006  FFDD         	movff	?_color_read_Blue+1,postdec2
  4169  003704                     
  4170                           ;color.c: 269:     LED_G();
  4171  003704  ECF5  F02C         	call	_LED_G	;wreg free
  4172  003708                     
  4173                           ;color.c: 270:     _delay((unsigned long)((100)*(64000000/4000.0)));
  4174  003708  0E09               	movlw	9
  4175  00370A  6E0F               	movwf	(??_calibrate_white+1)^0,c
  4176  00370C  0E1E               	movlw	30
  4177  00370E  6E0E               	movwf	??_calibrate_white^0,c
  4178  003710  0EE4               	movlw	228
  4179  003712                     u5937:
  4180  003712  2EE8               	decfsz	wreg,f,c
  4181  003714  D7FE               	bra	u5937
  4182  003716  2E0E               	decfsz	??_calibrate_white^0,f,c
  4183  003718  D7FC               	bra	u5937
  4184  00371A  2E0F               	decfsz	(??_calibrate_white+1)^0,f,c
  4185  00371C  D7FA               	bra	u5937
  4186  00371E  D000               	nop2	
  4187  003720                     
  4188                           ;color.c: 271:     w->GR = color_read_Red(); w->GG = color_read_Green(); w->GB = color_r
      +                          ead_Blue();
  4189  003720  EC38  F02A         	call	_color_read_Red	;wreg free
  4190  003724  EE20 F006          	lfsr	2,6
  4191  003728  500C               	movf	calibrate_white@w^0,w,c
  4192  00372A  26D9               	addwf	fsr2l,f,c
  4193  00372C  500D               	movf	(calibrate_white@w+1)^0,w,c
  4194  00372E  22DA               	addwfc	fsr2h,f,c
  4195  003730  C005  FFDE         	movff	?_color_read_Red,postinc2
  4196  003734  C006  FFDD         	movff	?_color_read_Red+1,postdec2
  4197  003738  EC60  F02A         	call	_color_read_Green	;wreg free
  4198  00373C  EE20 F008          	lfsr	2,8
  4199  003740  500C               	movf	calibrate_white@w^0,w,c
  4200  003742  26D9               	addwf	fsr2l,f,c
  4201  003744  500D               	movf	(calibrate_white@w+1)^0,w,c
  4202  003746  22DA               	addwfc	fsr2h,f,c
  4203  003748  C005  FFDE         	movff	?_color_read_Green,postinc2
  4204  00374C  C006  FFDD         	movff	?_color_read_Green+1,postdec2
  4205  003750  EC88  F02A         	call	_color_read_Blue	;wreg free
  4206  003754  EE20 F00A          	lfsr	2,10
  4207  003758  500C               	movf	calibrate_white@w^0,w,c
  4208  00375A  26D9               	addwf	fsr2l,f,c
  4209  00375C  500D               	movf	(calibrate_white@w+1)^0,w,c
  4210  00375E  22DA               	addwfc	fsr2h,f,c
  4211  003760  C005  FFDE         	movff	?_color_read_Blue,postinc2
  4212  003764  C006  FFDD         	movff	?_color_read_Blue+1,postdec2
  4213  003768                     
  4214                           ;color.c: 275:     LED_B();
  4215  003768  EC05  F02D         	call	_LED_B	;wreg free
  4216  00376C                     
  4217                           ;color.c: 276:     _delay((unsigned long)((100)*(64000000/4000.0)));
  4218  00376C  0E09               	movlw	9
  4219  00376E  6E0F               	movwf	(??_calibrate_white+1)^0,c
  4220  003770  0E1E               	movlw	30
  4221  003772  6E0E               	movwf	??_calibrate_white^0,c
  4222  003774  0EE4               	movlw	228
  4223  003776                     u5947:
  4224  003776  2EE8               	decfsz	wreg,f,c
  4225  003778  D7FE               	bra	u5947
  4226  00377A  2E0E               	decfsz	??_calibrate_white^0,f,c
  4227  00377C  D7FC               	bra	u5947
  4228  00377E  2E0F               	decfsz	(??_calibrate_white+1)^0,f,c
  4229  003780  D7FA               	bra	u5947
  4230  003782  D000               	nop2	
  4231  003784                     
  4232                           ;color.c: 277:     w->BR = color_read_Red(); w->BG = color_read_Green(); w->BB = color_r
      +                          ead_Blue(); w->BC = color_read_Clear();
  4233  003784  EC38  F02A         	call	_color_read_Red	;wreg free
  4234  003788  EE20 F00C          	lfsr	2,12
  4235  00378C  500C               	movf	calibrate_white@w^0,w,c
  4236  00378E  26D9               	addwf	fsr2l,f,c
  4237  003790  500D               	movf	(calibrate_white@w+1)^0,w,c
  4238  003792  22DA               	addwfc	fsr2h,f,c
  4239  003794  C005  FFDE         	movff	?_color_read_Red,postinc2
  4240  003798  C006  FFDD         	movff	?_color_read_Red+1,postdec2
  4241  00379C  EC60  F02A         	call	_color_read_Green	;wreg free
  4242  0037A0  EE20 F00E          	lfsr	2,14
  4243  0037A4  500C               	movf	calibrate_white@w^0,w,c
  4244  0037A6  26D9               	addwf	fsr2l,f,c
  4245  0037A8  500D               	movf	(calibrate_white@w+1)^0,w,c
  4246  0037AA  22DA               	addwfc	fsr2h,f,c
  4247  0037AC  C005  FFDE         	movff	?_color_read_Green,postinc2
  4248  0037B0  C006  FFDD         	movff	?_color_read_Green+1,postdec2
  4249  0037B4  EC88  F02A         	call	_color_read_Blue	;wreg free
  4250  0037B8  EE20 F010          	lfsr	2,16
  4251  0037BC  500C               	movf	calibrate_white@w^0,w,c
  4252  0037BE  26D9               	addwf	fsr2l,f,c
  4253  0037C0  500D               	movf	(calibrate_white@w+1)^0,w,c
  4254  0037C2  22DA               	addwfc	fsr2h,f,c
  4255  0037C4  C005  FFDE         	movff	?_color_read_Blue,postinc2
  4256  0037C8  C006  FFDD         	movff	?_color_read_Blue+1,postdec2
  4257  0037CC  ECB0  F02A         	call	_color_read_Clear	;wreg free
  4258  0037D0  EE20 F01A          	lfsr	2,26
  4259  0037D4  500C               	movf	calibrate_white@w^0,w,c
  4260  0037D6  26D9               	addwf	fsr2l,f,c
  4261  0037D8  500D               	movf	(calibrate_white@w+1)^0,w,c
  4262  0037DA  22DA               	addwfc	fsr2h,f,c
  4263  0037DC  C005  FFDE         	movff	?_color_read_Clear,postinc2
  4264  0037E0  C006  FFDD         	movff	?_color_read_Clear+1,postdec2
  4265  0037E4                     
  4266                           ;color.c: 280:     LED_C();
  4267  0037E4  EC15  F02D         	call	_LED_C	;wreg free
  4268  0037E8                     
  4269                           ;color.c: 281:     _delay((unsigned long)((100)*(64000000/4000.0)));
  4270  0037E8  0E09               	movlw	9
  4271  0037EA  6E0F               	movwf	(??_calibrate_white+1)^0,c
  4272  0037EC  0E1E               	movlw	30
  4273  0037EE  6E0E               	movwf	??_calibrate_white^0,c
  4274  0037F0  0EE4               	movlw	228
  4275  0037F2                     u5957:
  4276  0037F2  2EE8               	decfsz	wreg,f,c
  4277  0037F4  D7FE               	bra	u5957
  4278  0037F6  2E0E               	decfsz	??_calibrate_white^0,f,c
  4279  0037F8  D7FC               	bra	u5957
  4280  0037FA  2E0F               	decfsz	(??_calibrate_white+1)^0,f,c
  4281  0037FC  D7FA               	bra	u5957
  4282  0037FE  D000               	nop2	
  4283  003800                     
  4284                           ;color.c: 282:     w->CR = color_read_Red(); w->CG = color_read_Green(); w->CB = color_r
      +                          ead_Blue(); w->CC = color_read_Clear();
  4285  003800  EC38  F02A         	call	_color_read_Red	;wreg free
  4286  003804  EE20 F012          	lfsr	2,18
  4287  003808  500C               	movf	calibrate_white@w^0,w,c
  4288  00380A  26D9               	addwf	fsr2l,f,c
  4289  00380C  500D               	movf	(calibrate_white@w+1)^0,w,c
  4290  00380E  22DA               	addwfc	fsr2h,f,c
  4291  003810  C005  FFDE         	movff	?_color_read_Red,postinc2
  4292  003814  C006  FFDD         	movff	?_color_read_Red+1,postdec2
  4293  003818  EC60  F02A         	call	_color_read_Green	;wreg free
  4294  00381C  EE20 F014          	lfsr	2,20
  4295  003820  500C               	movf	calibrate_white@w^0,w,c
  4296  003822  26D9               	addwf	fsr2l,f,c
  4297  003824  500D               	movf	(calibrate_white@w+1)^0,w,c
  4298  003826  22DA               	addwfc	fsr2h,f,c
  4299  003828  C005  FFDE         	movff	?_color_read_Green,postinc2
  4300  00382C  C006  FFDD         	movff	?_color_read_Green+1,postdec2
  4301  003830  EC88  F02A         	call	_color_read_Blue	;wreg free
  4302  003834  EE20 F016          	lfsr	2,22
  4303  003838  500C               	movf	calibrate_white@w^0,w,c
  4304  00383A  26D9               	addwf	fsr2l,f,c
  4305  00383C  500D               	movf	(calibrate_white@w+1)^0,w,c
  4306  00383E  22DA               	addwfc	fsr2h,f,c
  4307  003840  C005  FFDE         	movff	?_color_read_Blue,postinc2
  4308  003844  C006  FFDD         	movff	?_color_read_Blue+1,postdec2
  4309  003848  ECB0  F02A         	call	_color_read_Clear	;wreg free
  4310  00384C  EE20 F018          	lfsr	2,24
  4311  003850  500C               	movf	calibrate_white@w^0,w,c
  4312  003852  26D9               	addwf	fsr2l,f,c
  4313  003854  500D               	movf	(calibrate_white@w+1)^0,w,c
  4314  003856  22DA               	addwfc	fsr2h,f,c
  4315  003858  C005  FFDE         	movff	?_color_read_Clear,postinc2
  4316  00385C  C006  FFDD         	movff	?_color_read_Clear+1,postdec2
  4317  003860                     
  4318                           ;color.c: 284:     LED_OFF();
  4319  003860  ECE5  F02C         	call	_LED_OFF	;wreg free
  4320  003864                     
  4321                           ;color.c: 285:     _delay((unsigned long)((500)*(64000000/4000.0)));
  4322  003864  0E29               	movlw	41
  4323  003866  6E0F               	movwf	(??_calibrate_white+1)^0,c
  4324  003868  0E96               	movlw	150
  4325  00386A  6E0E               	movwf	??_calibrate_white^0,c
  4326  00386C  0E7F               	movlw	127
  4327  00386E                     u5967:
  4328  00386E  2EE8               	decfsz	wreg,f,c
  4329  003870  D7FE               	bra	u5967
  4330  003872  2E0E               	decfsz	??_calibrate_white^0,f,c
  4331  003874  D7FC               	bra	u5967
  4332  003876  2E0F               	decfsz	(??_calibrate_white+1)^0,f,c
  4333  003878  D7FA               	bra	u5967
  4334  00387A  F000               	nop	
  4335                           
  4336                           ;color.c: 286:     toggle_light(1,2);
  4337  00387C  0E02               	movlw	2
  4338  00387E  6E01               	movwf	toggle_light@toggletime^0,c
  4339  003880  0E01               	movlw	1
  4340  003882  ECE9  F019         	call	_toggle_light
  4341  003886  0012               	return		;funcret
  4342  003888                     __end_of_calibrate_white:
  4343                           	callstack 0
  4344                           
  4345 ;; *************** function _color_read_Red *****************
  4346 ;; Defined at:
  4347 ;;		line 91 in file "color.c"
  4348 ;; Parameters:    Size  Location     Type
  4349 ;;		None
  4350 ;; Auto vars:     Size  Location     Type
  4351 ;;  tmp             2    9[COMRAM] unsigned int 
  4352 ;; Return value:  Size  Location     Type
  4353 ;;                  2    4[COMRAM] unsigned int 
  4354 ;; Registers used:
  4355 ;;		wreg, status,2, status,0, cstack
  4356 ;; Tracked objects:
  4357 ;;		On entry : 0/0
  4358 ;;		On exit  : 0/0
  4359 ;;		Unchanged: 0/0
  4360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4361 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4362 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4363 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4364 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4365 ;;Total ram usage:        7 bytes
  4366 ;; Hardware stack levels used: 1
  4367 ;; Hardware stack levels required when called: 3
  4368 ;; This function calls:
  4369 ;;		_I2C_2_Master_Read
  4370 ;;		_I2C_2_Master_RepStart
  4371 ;;		_I2C_2_Master_Start
  4372 ;;		_I2C_2_Master_Stop
  4373 ;;		_I2C_2_Master_Write
  4374 ;; This function is called by:
  4375 ;;		_read_color
  4376 ;;		_calibrate_white
  4377 ;; This function uses a non-reentrant model
  4378 ;;
  4379                           
  4380                           	psect	text10
  4381  005470                     __ptext10:
  4382                           	callstack 0
  4383  005470                     _color_read_Red:
  4384                           	callstack 24
  4385  005470                     
  4386                           ;color.c: 93:  unsigned int tmp;;color.c: 94:  I2C_2_Master_Start();
  4387  005470  EC90  F02D         	call	_I2C_2_Master_Start	;wreg free
  4388                           
  4389                           ;color.c: 95:  I2C_2_Master_Write(0x52 | 0x00);
  4390  005474  0E52               	movlw	82
  4391  005476  EC7A  F02D         	call	_I2C_2_Master_Write
  4392                           
  4393                           ;color.c: 96:  I2C_2_Master_Write(0xA0 | 0x16);
  4394  00547A  0EB6               	movlw	182
  4395  00547C  EC7A  F02D         	call	_I2C_2_Master_Write
  4396                           
  4397                           ;color.c: 97:  I2C_2_Master_RepStart();
  4398  005480  EC86  F02D         	call	_I2C_2_Master_RepStart	;wreg free
  4399                           
  4400                           ;color.c: 98:  I2C_2_Master_Write(0x52 | 0x01);
  4401  005484  0E53               	movlw	83
  4402  005486  EC7A  F02D         	call	_I2C_2_Master_Write
  4403                           
  4404                           ;color.c: 99:  tmp=I2C_2_Master_Read(1);
  4405  00548A  0E01               	movlw	1
  4406  00548C  EC1D  F02B         	call	_I2C_2_Master_Read
  4407  005490  6E07               	movwf	??_color_read_Red^0,c
  4408  005492  5007               	movf	??_color_read_Red^0,w,c
  4409  005494  6E0A               	movwf	color_read_Red@tmp^0,c
  4410  005496  6A0B               	clrf	(color_read_Red@tmp+1)^0,c
  4411                           
  4412                           ;color.c: 100:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  4413  005498  0E00               	movlw	0
  4414  00549A  EC1D  F02B         	call	_I2C_2_Master_Read
  4415  00549E  6E07               	movwf	??_color_read_Red^0,c
  4416  0054A0  5007               	movf	??_color_read_Red^0,w,c
  4417  0054A2  6E09               	movwf	(??_color_read_Red+2)^0,c
  4418  0054A4  6A08               	clrf	(??_color_read_Red+1)^0,c
  4419  0054A6  500A               	movf	color_read_Red@tmp^0,w,c
  4420  0054A8  1008               	iorwf	(??_color_read_Red+1)^0,w,c
  4421  0054AA  6E0A               	movwf	color_read_Red@tmp^0,c
  4422  0054AC  500B               	movf	(color_read_Red@tmp+1)^0,w,c
  4423  0054AE  1009               	iorwf	(??_color_read_Red+2)^0,w,c
  4424  0054B0  6E0B               	movwf	(color_read_Red@tmp+1)^0,c
  4425                           
  4426                           ;color.c: 101:  I2C_2_Master_Stop();
  4427  0054B2  EC8B  F02D         	call	_I2C_2_Master_Stop	;wreg free
  4428  0054B6                     
  4429                           ;color.c: 102:  return tmp;
  4430  0054B6  C00A  F005         	movff	color_read_Red@tmp,?_color_read_Red
  4431  0054BA  C00B  F006         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  4432  0054BE  0012               	return		;funcret
  4433  0054C0                     __end_of_color_read_Red:
  4434                           	callstack 0
  4435                           
  4436 ;; *************** function _color_read_Green *****************
  4437 ;; Defined at:
  4438 ;;		line 119 in file "color.c"
  4439 ;; Parameters:    Size  Location     Type
  4440 ;;		None
  4441 ;; Auto vars:     Size  Location     Type
  4442 ;;  tmp             2    9[COMRAM] unsigned int 
  4443 ;; Return value:  Size  Location     Type
  4444 ;;                  2    4[COMRAM] unsigned int 
  4445 ;; Registers used:
  4446 ;;		wreg, status,2, status,0, cstack
  4447 ;; Tracked objects:
  4448 ;;		On entry : 0/0
  4449 ;;		On exit  : 0/0
  4450 ;;		Unchanged: 0/0
  4451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4452 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4453 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4454 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4455 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4456 ;;Total ram usage:        7 bytes
  4457 ;; Hardware stack levels used: 1
  4458 ;; Hardware stack levels required when called: 3
  4459 ;; This function calls:
  4460 ;;		_I2C_2_Master_Read
  4461 ;;		_I2C_2_Master_RepStart
  4462 ;;		_I2C_2_Master_Start
  4463 ;;		_I2C_2_Master_Stop
  4464 ;;		_I2C_2_Master_Write
  4465 ;; This function is called by:
  4466 ;;		_read_color
  4467 ;;		_calibrate_white
  4468 ;;		_distance_measure
  4469 ;; This function uses a non-reentrant model
  4470 ;;
  4471                           
  4472                           	psect	text11
  4473  0054C0                     __ptext11:
  4474                           	callstack 0
  4475  0054C0                     _color_read_Green:
  4476                           	callstack 24
  4477  0054C0                     
  4478                           ;color.c: 121:  unsigned int tmp;;color.c: 122:  I2C_2_Master_Start();
  4479  0054C0  EC90  F02D         	call	_I2C_2_Master_Start	;wreg free
  4480                           
  4481                           ;color.c: 123:  I2C_2_Master_Write(0x52 | 0x00);
  4482  0054C4  0E52               	movlw	82
  4483  0054C6  EC7A  F02D         	call	_I2C_2_Master_Write
  4484                           
  4485                           ;color.c: 124:  I2C_2_Master_Write(0xA0 | 0x18);
  4486  0054CA  0EB8               	movlw	184
  4487  0054CC  EC7A  F02D         	call	_I2C_2_Master_Write
  4488                           
  4489                           ;color.c: 125:  I2C_2_Master_RepStart();
  4490  0054D0  EC86  F02D         	call	_I2C_2_Master_RepStart	;wreg free
  4491                           
  4492                           ;color.c: 126:  I2C_2_Master_Write(0x52 | 0x01);
  4493  0054D4  0E53               	movlw	83
  4494  0054D6  EC7A  F02D         	call	_I2C_2_Master_Write
  4495                           
  4496                           ;color.c: 127:  tmp=I2C_2_Master_Read(1);
  4497  0054DA  0E01               	movlw	1
  4498  0054DC  EC1D  F02B         	call	_I2C_2_Master_Read
  4499  0054E0  6E07               	movwf	??_color_read_Green^0,c
  4500  0054E2  5007               	movf	??_color_read_Green^0,w,c
  4501  0054E4  6E0A               	movwf	color_read_Green@tmp^0,c
  4502  0054E6  6A0B               	clrf	(color_read_Green@tmp+1)^0,c
  4503                           
  4504                           ;color.c: 128:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  4505  0054E8  0E00               	movlw	0
  4506  0054EA  EC1D  F02B         	call	_I2C_2_Master_Read
  4507  0054EE  6E07               	movwf	??_color_read_Green^0,c
  4508  0054F0  5007               	movf	??_color_read_Green^0,w,c
  4509  0054F2  6E09               	movwf	(??_color_read_Green+2)^0,c
  4510  0054F4  6A08               	clrf	(??_color_read_Green+1)^0,c
  4511  0054F6  500A               	movf	color_read_Green@tmp^0,w,c
  4512  0054F8  1008               	iorwf	(??_color_read_Green+1)^0,w,c
  4513  0054FA  6E0A               	movwf	color_read_Green@tmp^0,c
  4514  0054FC  500B               	movf	(color_read_Green@tmp+1)^0,w,c
  4515  0054FE  1009               	iorwf	(??_color_read_Green+2)^0,w,c
  4516  005500  6E0B               	movwf	(color_read_Green@tmp+1)^0,c
  4517                           
  4518                           ;color.c: 129:  I2C_2_Master_Stop();
  4519  005502  EC8B  F02D         	call	_I2C_2_Master_Stop	;wreg free
  4520  005506                     
  4521                           ;color.c: 130:  return tmp;
  4522  005506  C00A  F005         	movff	color_read_Green@tmp,?_color_read_Green
  4523  00550A  C00B  F006         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  4524  00550E  0012               	return		;funcret
  4525  005510                     __end_of_color_read_Green:
  4526                           	callstack 0
  4527                           
  4528 ;; *************** function _color_read_Blue *****************
  4529 ;; Defined at:
  4530 ;;		line 105 in file "color.c"
  4531 ;; Parameters:    Size  Location     Type
  4532 ;;		None
  4533 ;; Auto vars:     Size  Location     Type
  4534 ;;  tmp             2    9[COMRAM] unsigned int 
  4535 ;; Return value:  Size  Location     Type
  4536 ;;                  2    4[COMRAM] unsigned int 
  4537 ;; Registers used:
  4538 ;;		wreg, status,2, status,0, cstack
  4539 ;; Tracked objects:
  4540 ;;		On entry : 0/0
  4541 ;;		On exit  : 0/0
  4542 ;;		Unchanged: 0/0
  4543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4544 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4545 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4546 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4547 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4548 ;;Total ram usage:        7 bytes
  4549 ;; Hardware stack levels used: 1
  4550 ;; Hardware stack levels required when called: 3
  4551 ;; This function calls:
  4552 ;;		_I2C_2_Master_Read
  4553 ;;		_I2C_2_Master_RepStart
  4554 ;;		_I2C_2_Master_Start
  4555 ;;		_I2C_2_Master_Stop
  4556 ;;		_I2C_2_Master_Write
  4557 ;; This function is called by:
  4558 ;;		_read_color
  4559 ;;		_calibrate_white
  4560 ;; This function uses a non-reentrant model
  4561 ;;
  4562                           
  4563                           	psect	text12
  4564  005510                     __ptext12:
  4565                           	callstack 0
  4566  005510                     _color_read_Blue:
  4567                           	callstack 24
  4568  005510                     
  4569                           ;color.c: 107:  unsigned int tmp;;color.c: 108:  I2C_2_Master_Start();
  4570  005510  EC90  F02D         	call	_I2C_2_Master_Start	;wreg free
  4571                           
  4572                           ;color.c: 109:  I2C_2_Master_Write(0x52 | 0x00);
  4573  005514  0E52               	movlw	82
  4574  005516  EC7A  F02D         	call	_I2C_2_Master_Write
  4575                           
  4576                           ;color.c: 110:  I2C_2_Master_Write(0xA0 | 0x1A);
  4577  00551A  0EBA               	movlw	186
  4578  00551C  EC7A  F02D         	call	_I2C_2_Master_Write
  4579                           
  4580                           ;color.c: 111:  I2C_2_Master_RepStart();
  4581  005520  EC86  F02D         	call	_I2C_2_Master_RepStart	;wreg free
  4582                           
  4583                           ;color.c: 112:  I2C_2_Master_Write(0x52 | 0x01);
  4584  005524  0E53               	movlw	83
  4585  005526  EC7A  F02D         	call	_I2C_2_Master_Write
  4586                           
  4587                           ;color.c: 113:  tmp=I2C_2_Master_Read(1);
  4588  00552A  0E01               	movlw	1
  4589  00552C  EC1D  F02B         	call	_I2C_2_Master_Read
  4590  005530  6E07               	movwf	??_color_read_Blue^0,c
  4591  005532  5007               	movf	??_color_read_Blue^0,w,c
  4592  005534  6E0A               	movwf	color_read_Blue@tmp^0,c
  4593  005536  6A0B               	clrf	(color_read_Blue@tmp+1)^0,c
  4594                           
  4595                           ;color.c: 114:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  4596  005538  0E00               	movlw	0
  4597  00553A  EC1D  F02B         	call	_I2C_2_Master_Read
  4598  00553E  6E07               	movwf	??_color_read_Blue^0,c
  4599  005540  5007               	movf	??_color_read_Blue^0,w,c
  4600  005542  6E09               	movwf	(??_color_read_Blue+2)^0,c
  4601  005544  6A08               	clrf	(??_color_read_Blue+1)^0,c
  4602  005546  500A               	movf	color_read_Blue@tmp^0,w,c
  4603  005548  1008               	iorwf	(??_color_read_Blue+1)^0,w,c
  4604  00554A  6E0A               	movwf	color_read_Blue@tmp^0,c
  4605  00554C  500B               	movf	(color_read_Blue@tmp+1)^0,w,c
  4606  00554E  1009               	iorwf	(??_color_read_Blue+2)^0,w,c
  4607  005550  6E0B               	movwf	(color_read_Blue@tmp+1)^0,c
  4608                           
  4609                           ;color.c: 115:  I2C_2_Master_Stop();
  4610  005552  EC8B  F02D         	call	_I2C_2_Master_Stop	;wreg free
  4611  005556                     
  4612                           ;color.c: 116:  return tmp;
  4613  005556  C00A  F005         	movff	color_read_Blue@tmp,?_color_read_Blue
  4614  00555A  C00B  F006         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  4615  00555E  0012               	return		;funcret
  4616  005560                     __end_of_color_read_Blue:
  4617                           	callstack 0
  4618                           
  4619 ;; *************** function _LED_R *****************
  4620 ;; Defined at:
  4621 ;;		line 164 in file "color.c"
  4622 ;; Parameters:    Size  Location     Type
  4623 ;;		None
  4624 ;; Auto vars:     Size  Location     Type
  4625 ;;		None
  4626 ;; Return value:  Size  Location     Type
  4627 ;;                  1    wreg      void 
  4628 ;; Registers used:
  4629 ;;		wreg
  4630 ;; Tracked objects:
  4631 ;;		On entry : 0/0
  4632 ;;		On exit  : 0/0
  4633 ;;		Unchanged: 0/0
  4634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4635 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4636 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4637 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4638 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4639 ;;Total ram usage:        2 bytes
  4640 ;; Hardware stack levels used: 1
  4641 ;; Hardware stack levels required when called: 1
  4642 ;; This function calls:
  4643 ;;		Nothing
  4644 ;; This function is called by:
  4645 ;;		_color_data_collection
  4646 ;;		_calibrate_white
  4647 ;;		_detect_color
  4648 ;; This function uses a non-reentrant model
  4649 ;;
  4650                           
  4651                           	psect	text13
  4652  0059AA                     __ptext13:
  4653                           	callstack 0
  4654  0059AA                     _LED_R:
  4655                           	callstack 27
  4656  0059AA                     
  4657                           ;color.c: 166:     LATGbits.LATG1 = 1;
  4658  0059AA  827F               	bsf	127,1,c	;volatile
  4659                           
  4660                           ;color.c: 167:     LATFbits.LATF7 = 0;
  4661  0059AC  9E7E               	bcf	126,7,c	;volatile
  4662                           
  4663                           ;color.c: 168:     LATAbits.LATA4 = 0;
  4664  0059AE  9879               	bcf	121,4,c	;volatile
  4665  0059B0                     
  4666                           ;color.c: 169:     _delay((unsigned long)((200)*(64000000/4000.0)));
  4667  0059B0  0E11               	movlw	17
  4668  0059B2  6E02               	movwf	(??_LED_R+1)^0,c
  4669  0059B4  0E3C               	movlw	60
  4670  0059B6  6E01               	movwf	??_LED_R^0,c
  4671  0059B8  0ECB               	movlw	203
  4672  0059BA                     u5977:
  4673  0059BA  2EE8               	decfsz	wreg,f,c
  4674  0059BC  D7FE               	bra	u5977
  4675  0059BE  2E01               	decfsz	??_LED_R^0,f,c
  4676  0059C0  D7FC               	bra	u5977
  4677  0059C2  2E02               	decfsz	(??_LED_R+1)^0,f,c
  4678  0059C4  D7FA               	bra	u5977
  4679  0059C6  F000               	nop	
  4680  0059C8  0012               	return		;funcret
  4681  0059CA                     __end_of_LED_R:
  4682                           	callstack 0
  4683                           
  4684 ;; *************** function _LED_OFF *****************
  4685 ;; Defined at:
  4686 ;;		line 155 in file "color.c"
  4687 ;; Parameters:    Size  Location     Type
  4688 ;;		None
  4689 ;; Auto vars:     Size  Location     Type
  4690 ;;		None
  4691 ;; Return value:  Size  Location     Type
  4692 ;;                  1    wreg      void 
  4693 ;; Registers used:
  4694 ;;		wreg
  4695 ;; Tracked objects:
  4696 ;;		On entry : 0/0
  4697 ;;		On exit  : 0/0
  4698 ;;		Unchanged: 0/0
  4699 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4700 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4701 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4702 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4703 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4704 ;;Total ram usage:        2 bytes
  4705 ;; Hardware stack levels used: 1
  4706 ;; Hardware stack levels required when called: 1
  4707 ;; This function calls:
  4708 ;;		Nothing
  4709 ;; This function is called by:
  4710 ;;		_calibrate_white
  4711 ;; This function uses a non-reentrant model
  4712 ;;
  4713                           
  4714                           	psect	text14
  4715  0059CA                     __ptext14:
  4716                           	callstack 0
  4717  0059CA                     _LED_OFF:
  4718                           	callstack 27
  4719  0059CA                     
  4720                           ;color.c: 157:     LATGbits.LATG1 = 0;
  4721  0059CA  927F               	bcf	127,1,c	;volatile
  4722                           
  4723                           ;color.c: 158:     LATFbits.LATF7 = 0;
  4724  0059CC  9E7E               	bcf	126,7,c	;volatile
  4725                           
  4726                           ;color.c: 159:     LATAbits.LATA4 = 0;
  4727  0059CE  9879               	bcf	121,4,c	;volatile
  4728  0059D0                     
  4729                           ;color.c: 160:     _delay((unsigned long)((200)*(64000000/4000.0)));
  4730  0059D0  0E11               	movlw	17
  4731  0059D2  6E02               	movwf	(??_LED_OFF+1)^0,c
  4732  0059D4  0E3C               	movlw	60
  4733  0059D6  6E01               	movwf	??_LED_OFF^0,c
  4734  0059D8  0ECB               	movlw	203
  4735  0059DA                     u5987:
  4736  0059DA  2EE8               	decfsz	wreg,f,c
  4737  0059DC  D7FE               	bra	u5987
  4738  0059DE  2E01               	decfsz	??_LED_OFF^0,f,c
  4739  0059E0  D7FC               	bra	u5987
  4740  0059E2  2E02               	decfsz	(??_LED_OFF+1)^0,f,c
  4741  0059E4  D7FA               	bra	u5987
  4742  0059E6  F000               	nop	
  4743  0059E8  0012               	return		;funcret
  4744  0059EA                     __end_of_LED_OFF:
  4745                           	callstack 0
  4746                           
  4747 ;; *************** function _LED_G *****************
  4748 ;; Defined at:
  4749 ;;		line 191 in file "color.c"
  4750 ;; Parameters:    Size  Location     Type
  4751 ;;		None
  4752 ;; Auto vars:     Size  Location     Type
  4753 ;;		None
  4754 ;; Return value:  Size  Location     Type
  4755 ;;                  1    wreg      void 
  4756 ;; Registers used:
  4757 ;;		wreg
  4758 ;; Tracked objects:
  4759 ;;		On entry : 0/0
  4760 ;;		On exit  : 0/0
  4761 ;;		Unchanged: 0/0
  4762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4763 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4764 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4765 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4766 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4767 ;;Total ram usage:        2 bytes
  4768 ;; Hardware stack levels used: 1
  4769 ;; Hardware stack levels required when called: 1
  4770 ;; This function calls:
  4771 ;;		Nothing
  4772 ;; This function is called by:
  4773 ;;		_color_data_collection
  4774 ;;		_calibrate_white
  4775 ;;		_detect_color
  4776 ;; This function uses a non-reentrant model
  4777 ;;
  4778                           
  4779                           	psect	text15
  4780  0059EA                     __ptext15:
  4781                           	callstack 0
  4782  0059EA                     _LED_G:
  4783                           	callstack 27
  4784  0059EA                     
  4785                           ;color.c: 193:     LATGbits.LATG1 = 0;
  4786  0059EA  927F               	bcf	127,1,c	;volatile
  4787                           
  4788                           ;color.c: 194:     LATFbits.LATF7 = 0;
  4789  0059EC  9E7E               	bcf	126,7,c	;volatile
  4790                           
  4791                           ;color.c: 195:     LATAbits.LATA4 = 1;
  4792  0059EE  8879               	bsf	121,4,c	;volatile
  4793  0059F0                     
  4794                           ;color.c: 196:     _delay((unsigned long)((200)*(64000000/4000.0)));
  4795  0059F0  0E11               	movlw	17
  4796  0059F2  6E02               	movwf	(??_LED_G+1)^0,c
  4797  0059F4  0E3C               	movlw	60
  4798  0059F6  6E01               	movwf	??_LED_G^0,c
  4799  0059F8  0ECB               	movlw	203
  4800  0059FA                     u5997:
  4801  0059FA  2EE8               	decfsz	wreg,f,c
  4802  0059FC  D7FE               	bra	u5997
  4803  0059FE  2E01               	decfsz	??_LED_G^0,f,c
  4804  005A00  D7FC               	bra	u5997
  4805  005A02  2E02               	decfsz	(??_LED_G+1)^0,f,c
  4806  005A04  D7FA               	bra	u5997
  4807  005A06  F000               	nop	
  4808  005A08  0012               	return		;funcret
  4809  005A0A                     __end_of_LED_G:
  4810                           	callstack 0
  4811                           
  4812 ;; *************** function _LED_B *****************
  4813 ;; Defined at:
  4814 ;;		line 182 in file "color.c"
  4815 ;; Parameters:    Size  Location     Type
  4816 ;;		None
  4817 ;; Auto vars:     Size  Location     Type
  4818 ;;		None
  4819 ;; Return value:  Size  Location     Type
  4820 ;;                  1    wreg      void 
  4821 ;; Registers used:
  4822 ;;		wreg
  4823 ;; Tracked objects:
  4824 ;;		On entry : 0/0
  4825 ;;		On exit  : 0/0
  4826 ;;		Unchanged: 0/0
  4827 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4828 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4829 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4830 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4831 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4832 ;;Total ram usage:        2 bytes
  4833 ;; Hardware stack levels used: 1
  4834 ;; Hardware stack levels required when called: 1
  4835 ;; This function calls:
  4836 ;;		Nothing
  4837 ;; This function is called by:
  4838 ;;		_color_data_collection
  4839 ;;		_calibrate_white
  4840 ;;		_detect_color
  4841 ;; This function uses a non-reentrant model
  4842 ;;
  4843                           
  4844                           	psect	text16
  4845  005A0A                     __ptext16:
  4846                           	callstack 0
  4847  005A0A                     _LED_B:
  4848                           	callstack 27
  4849  005A0A                     
  4850                           ;color.c: 184:     LATGbits.LATG1 = 0;
  4851  005A0A  927F               	bcf	127,1,c	;volatile
  4852                           
  4853                           ;color.c: 185:     LATFbits.LATF7 = 1;
  4854  005A0C  8E7E               	bsf	126,7,c	;volatile
  4855                           
  4856                           ;color.c: 186:     LATAbits.LATA4 = 0;
  4857  005A0E  9879               	bcf	121,4,c	;volatile
  4858  005A10                     
  4859                           ;color.c: 187:     _delay((unsigned long)((200)*(64000000/4000.0)));
  4860  005A10  0E11               	movlw	17
  4861  005A12  6E02               	movwf	(??_LED_B+1)^0,c
  4862  005A14  0E3C               	movlw	60
  4863  005A16  6E01               	movwf	??_LED_B^0,c
  4864  005A18  0ECB               	movlw	203
  4865  005A1A                     u6007:
  4866  005A1A  2EE8               	decfsz	wreg,f,c
  4867  005A1C  D7FE               	bra	u6007
  4868  005A1E  2E01               	decfsz	??_LED_B^0,f,c
  4869  005A20  D7FC               	bra	u6007
  4870  005A22  2E02               	decfsz	(??_LED_B+1)^0,f,c
  4871  005A24  D7FA               	bra	u6007
  4872  005A26  F000               	nop	
  4873  005A28  0012               	return		;funcret
  4874  005A2A                     __end_of_LED_B:
  4875                           	callstack 0
  4876                           
  4877 ;; *************** function _amb_light_measure *****************
  4878 ;; Defined at:
  4879 ;;		line 377 in file "color.c"
  4880 ;; Parameters:    Size  Location     Type
  4881 ;;  amb             2   10[BANK0 ] PTR struct color_rgb
  4882 ;;		 -> main@rgb(8), main@amb(8), 
  4883 ;; Auto vars:     Size  Location     Type
  4884 ;;  CC_amb_3        2   22[BANK0 ] unsigned int 
  4885 ;;  CC_amb_2        2   20[BANK0 ] unsigned int 
  4886 ;;  CC_amb_1        2   18[BANK0 ] unsigned int 
  4887 ;;  CC_amb_ave      2   16[BANK0 ] unsigned int 
  4888 ;;  upper_bound     2   14[BANK0 ] unsigned int 
  4889 ;; Return value:  Size  Location     Type
  4890 ;;                  2   10[BANK0 ] unsigned int 
  4891 ;; Registers used:
  4892 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4893 ;; Tracked objects:
  4894 ;;		On entry : 0/0
  4895 ;;		On exit  : 0/0
  4896 ;;		Unchanged: 0/0
  4897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4898 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4899 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4900 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4901 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4902 ;;Total ram usage:       14 bytes
  4903 ;; Hardware stack levels used: 1
  4904 ;; Hardware stack levels required when called: 5
  4905 ;; This function calls:
  4906 ;;		_LED_C
  4907 ;;		___fldiv
  4908 ;;		___xxtofl
  4909 ;;		_color_read_Clear
  4910 ;;		_lroundf
  4911 ;;		_toggle_light
  4912 ;; This function is called by:
  4913 ;;		_main
  4914 ;;		_test_function
  4915 ;; This function uses a non-reentrant model
  4916 ;;
  4917                           
  4918                           	psect	text17
  4919  0048D4                     __ptext17:
  4920                           	callstack 0
  4921  0048D4                     _amb_light_measure:
  4922                           	callstack 24
  4923  0048D4  0E00               	movlw	0
  4924  0048D6  0100               	movlb	0	; () banked
  4925  0048D8  6F75               	movwf	(amb_light_measure@CC_amb_2+1)& (0+255),b
  4926  0048DA  0E00               	movlw	0
  4927  0048DC  6F74               	movwf	amb_light_measure@CC_amb_2& (0+255),b
  4928  0048DE  0E00               	movlw	0
  4929  0048E0  6F77               	movwf	(amb_light_measure@CC_amb_3+1)& (0+255),b
  4930  0048E2  0E00               	movlw	0
  4931  0048E4  6F76               	movwf	amb_light_measure@CC_amb_3& (0+255),b
  4932  0048E6  0E00               	movlw	0
  4933  0048E8  6F6F               	movwf	(amb_light_measure@upper_bound+1)& (0+255),b
  4934  0048EA  0E00               	movlw	0
  4935  0048EC  6F6E               	movwf	amb_light_measure@upper_bound& (0+255),b
  4936  0048EE                     
  4937                           ; BSR set to: 0
  4938                           ;color.c: 380:     toggle_light(2,2);
  4939  0048EE  0E02               	movlw	2
  4940  0048F0  6E01               	movwf	toggle_light@toggletime^0,c
  4941  0048F2  0E02               	movlw	2
  4942  0048F4  ECE9  F019         	call	_toggle_light
  4943  0048F8                     
  4944                           ;color.c: 381:     LED_C();
  4945  0048F8  EC15  F02D         	call	_LED_C	;wreg free
  4946  0048FC                     
  4947                           ;color.c: 382:     _delay((unsigned long)((500)*(64000000/4000.0)));
  4948  0048FC  0E29               	movlw	41
  4949  0048FE  0100               	movlb	0	; () banked
  4950  004900  6F6D               	movwf	(??_amb_light_measure+1)& (0+255),b
  4951  004902  0E96               	movlw	150
  4952  004904  6F6C               	movwf	??_amb_light_measure& (0+255),b
  4953  004906  0E7F               	movlw	127
  4954  004908                     u6017:
  4955  004908  2EE8               	decfsz	wreg,f,c
  4956  00490A  D7FE               	bra	u6017
  4957  00490C  2F6C               	decfsz	??_amb_light_measure& (0+255),f,b
  4958  00490E  D7FC               	bra	u6017
  4959  004910  2F6D               	decfsz	(??_amb_light_measure+1)& (0+255),f,b
  4960  004912  D7FA               	bra	u6017
  4961  004914                     
  4962                           ;color.c: 384:     CC_amb_1 = color_read_Clear();
  4963  004914  ECB0  F02A         	call	_color_read_Clear	;wreg free
  4964  004918  C005  F072         	movff	?_color_read_Clear,amb_light_measure@CC_amb_1
  4965  00491C  C006  F073         	movff	?_color_read_Clear+1,amb_light_measure@CC_amb_1+1
  4966  004920                     
  4967                           ;color.c: 385:     _delay((unsigned long)((200)*(64000000/4000.0)));
  4968  004920  0E11               	movlw	17
  4969  004922  0100               	movlb	0	; () banked
  4970  004924  6F6D               	movwf	(??_amb_light_measure+1)& (0+255),b
  4971  004926  0E3C               	movlw	60
  4972  004928  6F6C               	movwf	??_amb_light_measure& (0+255),b
  4973  00492A  0ECB               	movlw	203
  4974  00492C                     u6027:
  4975  00492C  2EE8               	decfsz	wreg,f,c
  4976  00492E  D7FE               	bra	u6027
  4977  004930  2F6C               	decfsz	??_amb_light_measure& (0+255),f,b
  4978  004932  D7FC               	bra	u6027
  4979  004934  2F6D               	decfsz	(??_amb_light_measure+1)& (0+255),f,b
  4980  004936  D7FA               	bra	u6027
  4981  004938                     
  4982                           ;color.c: 387:     CC_amb_2 = color_read_Clear();
  4983  004938  ECB0  F02A         	call	_color_read_Clear	;wreg free
  4984  00493C  C005  F074         	movff	?_color_read_Clear,amb_light_measure@CC_amb_2
  4985  004940  C006  F075         	movff	?_color_read_Clear+1,amb_light_measure@CC_amb_2+1
  4986  004944                     
  4987                           ;color.c: 388:     _delay((unsigned long)((200)*(64000000/4000.0)));
  4988  004944  0E11               	movlw	17
  4989  004946  0100               	movlb	0	; () banked
  4990  004948  6F6D               	movwf	(??_amb_light_measure+1)& (0+255),b
  4991  00494A  0E3C               	movlw	60
  4992  00494C  6F6C               	movwf	??_amb_light_measure& (0+255),b
  4993  00494E  0ECB               	movlw	203
  4994  004950                     u6037:
  4995  004950  2EE8               	decfsz	wreg,f,c
  4996  004952  D7FE               	bra	u6037
  4997  004954  2F6C               	decfsz	??_amb_light_measure& (0+255),f,b
  4998  004956  D7FC               	bra	u6037
  4999  004958  2F6D               	decfsz	(??_amb_light_measure+1)& (0+255),f,b
  5000  00495A  D7FA               	bra	u6037
  5001  00495C                     
  5002                           ;color.c: 390:     CC_amb_3 = color_read_Clear();
  5003  00495C  ECB0  F02A         	call	_color_read_Clear	;wreg free
  5004  004960  C005  F076         	movff	?_color_read_Clear,amb_light_measure@CC_amb_3
  5005  004964  C006  F077         	movff	?_color_read_Clear+1,amb_light_measure@CC_amb_3+1
  5006  004968                     
  5007                           ;color.c: 391:     _delay((unsigned long)((200)*(64000000/4000.0)));
  5008  004968  0E11               	movlw	17
  5009  00496A  0100               	movlb	0	; () banked
  5010  00496C  6F6D               	movwf	(??_amb_light_measure+1)& (0+255),b
  5011  00496E  0E3C               	movlw	60
  5012  004970  6F6C               	movwf	??_amb_light_measure& (0+255),b
  5013  004972  0ECB               	movlw	203
  5014  004974                     u6047:
  5015  004974  2EE8               	decfsz	wreg,f,c
  5016  004976  D7FE               	bra	u6047
  5017  004978  2F6C               	decfsz	??_amb_light_measure& (0+255),f,b
  5018  00497A  D7FC               	bra	u6047
  5019  00497C  2F6D               	decfsz	(??_amb_light_measure+1)& (0+255),f,b
  5020  00497E  D7FA               	bra	u6047
  5021  004980                     
  5022                           ;color.c: 393:     CC_amb_ave = lroundf((float)(CC_amb_1 + CC_amb_2 + CC_amb_3)/3);
  5023  004980  0100               	movlb	0	; () banked
  5024  004982  5174               	movf	amb_light_measure@CC_amb_2& (0+255),w,b
  5025  004984  2572               	addwf	amb_light_measure@CC_amb_1& (0+255),w,b
  5026  004986  6F6C               	movwf	??_amb_light_measure& (0+255),b
  5027  004988  5175               	movf	(amb_light_measure@CC_amb_2+1)& (0+255),w,b
  5028  00498A  2173               	addwfc	(amb_light_measure@CC_amb_1+1)& (0+255),w,b
  5029  00498C  6F6D               	movwf	(??_amb_light_measure+1)& (0+255),b
  5030  00498E  5176               	movf	amb_light_measure@CC_amb_3& (0+255),w,b
  5031  004990  276C               	addwf	??_amb_light_measure& (0+255),f,b
  5032  004992  5177               	movf	(amb_light_measure@CC_amb_3+1)& (0+255),w,b
  5033  004994  236D               	addwfc	(??_amb_light_measure+1)& (0+255),f,b
  5034  004996  C06C  F001         	movff	??_amb_light_measure,___xxtofl@val
  5035  00499A  C06D  F002         	movff	??_amb_light_measure+1,___xxtofl@val+1
  5036  00499E  6A03               	clrf	(___xxtofl@val+2)^0,c
  5037  0049A0  6A04               	clrf	(___xxtofl@val+3)^0,c
  5038  0049A2  0E00               	movlw	0
  5039  0049A4  EC22  F01E         	call	___xxtofl
  5040  0049A8  C001  F00F         	movff	?___xxtofl,___fldiv@b
  5041  0049AC  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  5042  0049B0  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  5043  0049B4  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  5044  0049B8  0E00               	movlw	0
  5045  0049BA  6E13               	movwf	___fldiv@a^0,c
  5046  0049BC  0E00               	movlw	0
  5047  0049BE  6E14               	movwf	(___fldiv@a+1)^0,c
  5048  0049C0  0E40               	movlw	64
  5049  0049C2  6E15               	movwf	(___fldiv@a+2)^0,c
  5050  0049C4  0E40               	movlw	64
  5051  0049C6  6E16               	movwf	(___fldiv@a+3)^0,c
  5052  0049C8  EC6D  F013         	call	___fldiv	;wreg free
  5053  0049CC  C00F  F066         	movff	?___fldiv,lroundf@x
  5054  0049D0  C010  F067         	movff	?___fldiv+1,lroundf@x+1
  5055  0049D4  C011  F068         	movff	?___fldiv+2,lroundf@x+2
  5056  0049D8  C012  F069         	movff	?___fldiv+3,lroundf@x+3
  5057  0049DC  ECFC  F02B         	call	_lroundf	;wreg free
  5058  0049E0  C066  F070         	movff	?_lroundf,amb_light_measure@CC_amb_ave
  5059  0049E4  C067  F071         	movff	?_lroundf+1,amb_light_measure@CC_amb_ave+1
  5060  0049E8                     
  5061                           ;color.c: 395:     toggle_light(2,2);
  5062  0049E8  0E02               	movlw	2
  5063  0049EA  6E01               	movwf	toggle_light@toggletime^0,c
  5064  0049EC  0E02               	movlw	2
  5065  0049EE  ECE9  F019         	call	_toggle_light
  5066  0049F2                     
  5067                           ;color.c: 397:     return CC_amb_ave;
  5068  0049F2  C070  F06A         	movff	amb_light_measure@CC_amb_ave,?_amb_light_measure
  5069  0049F6  C071  F06B         	movff	amb_light_measure@CC_amb_ave+1,?_amb_light_measure+1
  5070  0049FA  0012               	return		;funcret
  5071  0049FC                     __end_of_amb_light_measure:
  5072                           	callstack 0
  5073                           
  5074 ;; *************** function _lroundf *****************
  5075 ;; Defined at:
  5076 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\lroundf.c"
  5077 ;; Parameters:    Size  Location     Type
  5078 ;;  x               4    6[BANK0 ] float 
  5079 ;; Auto vars:     Size  Location     Type
  5080 ;;		None
  5081 ;; Return value:  Size  Location     Type
  5082 ;;                  4    6[BANK0 ] long 
  5083 ;; Registers used:
  5084 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  5085 ;; Tracked objects:
  5086 ;;		On entry : 0/0
  5087 ;;		On exit  : 0/0
  5088 ;;		Unchanged: 0/0
  5089 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5090 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5091 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5092 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5093 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5094 ;;Total ram usage:        4 bytes
  5095 ;; Hardware stack levels used: 1
  5096 ;; Hardware stack levels required when called: 4
  5097 ;; This function calls:
  5098 ;;		___fltol
  5099 ;;		_roundf
  5100 ;; This function is called by:
  5101 ;;		_detect_color
  5102 ;;		_amb_light_measure
  5103 ;;		_distance_measure
  5104 ;;		_check_color_reading
  5105 ;; This function uses a non-reentrant model
  5106 ;;
  5107                           
  5108                           	psect	text18
  5109  0057F8                     __ptext18:
  5110                           	callstack 0
  5111  0057F8                     _lroundf:
  5112                           	callstack 24
  5113  0057F8  C066  F041         	movff	lroundf@x,roundf@x
  5114  0057FC  C067  F042         	movff	lroundf@x+1,roundf@x+1
  5115  005800  C068  F043         	movff	lroundf@x+2,roundf@x+2
  5116  005804  C069  F044         	movff	lroundf@x+3,roundf@x+3
  5117  005808  EC96  F011         	call	_roundf	;wreg free
  5118  00580C  C041  F05B         	movff	?_roundf,___fltol@f1
  5119  005810  C042  F05C         	movff	?_roundf+1,___fltol@f1+1
  5120  005814  C043  F05D         	movff	?_roundf+2,___fltol@f1+2
  5121  005818  C044  F05E         	movff	?_roundf+3,___fltol@f1+3
  5122  00581C  ECFE  F024         	call	___fltol	;wreg free
  5123  005820  C05B  F066         	movff	?___fltol,?_lroundf
  5124  005824  C05C  F067         	movff	?___fltol+1,?_lroundf+1
  5125  005828  C05D  F068         	movff	?___fltol+2,?_lroundf+2
  5126  00582C  C05E  F069         	movff	?___fltol+3,?_lroundf+3
  5127  005830  0012               	return		;funcret
  5128  005832                     __end_of_lroundf:
  5129                           	callstack 0
  5130                           
  5131 ;; *************** function _roundf *****************
  5132 ;; Defined at:
  5133 ;;		line 12 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\roundf.c"
  5134 ;; Parameters:    Size  Location     Type
  5135 ;;  x               4   64[COMRAM] float 
  5136 ;; Auto vars:     Size  Location     Type
  5137 ;;  y               4   86[COMRAM] float 
  5138 ;;  u               4   82[COMRAM] struct .
  5139 ;;  e               2   76[COMRAM] int 
  5140 ;; Return value:  Size  Location     Type
  5141 ;;                  4   64[COMRAM] float 
  5142 ;; Registers used:
  5143 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  5144 ;; Tracked objects:
  5145 ;;		On entry : 0/0
  5146 ;;		On exit  : 0/0
  5147 ;;		Unchanged: 0/0
  5148 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5149 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5150 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5151 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5152 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5153 ;;Total ram usage:       26 bytes
  5154 ;; Hardware stack levels used: 1
  5155 ;; Hardware stack levels required when called: 3
  5156 ;; This function calls:
  5157 ;;		___fladd
  5158 ;;		___flge
  5159 ;;		___flmul
  5160 ;;		___flneg
  5161 ;;		___flsub
  5162 ;; This function is called by:
  5163 ;;		_lroundf
  5164 ;; This function uses a non-reentrant model
  5165 ;;
  5166                           
  5167                           	psect	text19
  5168  00232C                     __ptext19:
  5169                           	callstack 0
  5170  00232C                     _roundf:
  5171                           	callstack 24
  5172  00232C  C1F0  F053         	movff	roundf@F527,roundf@u
  5173  002330  C1F1  F054         	movff	roundf@F527+1,roundf@u+1
  5174  002334  C1F2  F055         	movff	roundf@F527+2,roundf@u+2
  5175  002338  C1F3  F056         	movff	roundf@F527+3,roundf@u+3
  5176  00233C  C041  F053         	movff	roundf@x,roundf@u
  5177  002340  C042  F054         	movff	roundf@x+1,roundf@u+1
  5178  002344  C043  F055         	movff	roundf@x+2,roundf@u+2
  5179  002348  C044  F056         	movff	roundf@x+3,roundf@u+3
  5180  00234C  C053  F045         	movff	roundf@u,??_roundf
  5181  002350  C054  F046         	movff	roundf@u+1,??_roundf+1
  5182  002354  C055  F047         	movff	roundf@u+2,??_roundf+2
  5183  002358  C056  F048         	movff	roundf@u+3,??_roundf+3
  5184  00235C  0E18               	movlw	24
  5185  00235E  EFB6  F011         	goto	u4270
  5186  002362                     u4275:
  5187  002362  90D8               	bcf	status,0,c
  5188  002364  3248               	rrcf	(??_roundf+3)^0,f,c
  5189  002366  3247               	rrcf	(??_roundf+2)^0,f,c
  5190  002368  3246               	rrcf	(??_roundf+1)^0,f,c
  5191  00236A  3245               	rrcf	??_roundf^0,f,c
  5192  00236C                     u4270:
  5193  00236C  2EE8               	decfsz	wreg,f,c
  5194  00236E  EFB1  F011         	goto	u4275
  5195  002372  5045               	movf	??_roundf^0,w,c
  5196  002374  6E4D               	movwf	roundf@e^0,c
  5197  002376  6A4E               	clrf	(roundf@e+1)^0,c
  5198  002378  BE4E               	btfsc	(roundf@e+1)^0,7,c
  5199  00237A  EFC8  F011         	goto	u4281
  5200  00237E  504E               	movf	(roundf@e+1)^0,w,c
  5201  002380  E109               	bnz	u4280
  5202  002382  0E96               	movlw	150
  5203  002384  5C4D               	subwf	roundf@e^0,w,c
  5204  002386  A0D8               	btfss	status,0,c
  5205  002388  EFC8  F011         	goto	u4281
  5206  00238C  EFCA  F011         	goto	u4280
  5207  002390                     u4281:
  5208  002390  EFD4  F011         	goto	l4501
  5209  002394                     u4280:
  5210  002394  C041  F041         	movff	roundf@x,?_roundf
  5211  002398  C042  F042         	movff	roundf@x+1,?_roundf+1
  5212  00239C  C043  F043         	movff	roundf@x+2,?_roundf+2
  5213  0023A0  C044  F044         	movff	roundf@x+3,?_roundf+3
  5214  0023A4  EF6C  F013         	goto	l1586
  5215  0023A8                     l4501:
  5216  0023A8  C053  F045         	movff	roundf@u,??_roundf
  5217  0023AC  C054  F046         	movff	roundf@u+1,??_roundf+1
  5218  0023B0  C055  F047         	movff	roundf@u+2,??_roundf+2
  5219  0023B4  C056  F048         	movff	roundf@u+3,??_roundf+3
  5220  0023B8  0E20               	movlw	32
  5221  0023BA  EFE4  F011         	goto	u4290
  5222  0023BE                     u4295:
  5223  0023BE  90D8               	bcf	status,0,c
  5224  0023C0  3248               	rrcf	(??_roundf+3)^0,f,c
  5225  0023C2  3247               	rrcf	(??_roundf+2)^0,f,c
  5226  0023C4  3246               	rrcf	(??_roundf+1)^0,f,c
  5227  0023C6  3245               	rrcf	??_roundf^0,f,c
  5228  0023C8                     u4290:
  5229  0023C8  2EE8               	decfsz	wreg,f,c
  5230  0023CA  EFDF  F011         	goto	u4295
  5231  0023CE  5045               	movf	??_roundf^0,w,c
  5232  0023D0  1046               	iorwf	(??_roundf+1)^0,w,c
  5233  0023D2  1047               	iorwf	(??_roundf+2)^0,w,c
  5234  0023D4  1048               	iorwf	(??_roundf+3)^0,w,c
  5235  0023D6  B4D8               	btfsc	status,2,c
  5236  0023D8  EFF0  F011         	goto	u4301
  5237  0023DC  EFF2  F011         	goto	u4300
  5238  0023E0                     u4301:
  5239  0023E0  EF04  F012         	goto	l4505
  5240  0023E4                     u4300:
  5241  0023E4  C041  F001         	movff	roundf@x,___flneg@f1
  5242  0023E8  C042  F002         	movff	roundf@x+1,___flneg@f1+1
  5243  0023EC  C043  F003         	movff	roundf@x+2,___flneg@f1+2
  5244  0023F0  C044  F004         	movff	roundf@x+3,___flneg@f1+3
  5245  0023F4  EC19  F02C         	call	___flneg	;wreg free
  5246  0023F8  C001  F041         	movff	?___flneg,roundf@x
  5247  0023FC  C002  F042         	movff	?___flneg+1,roundf@x+1
  5248  002400  C003  F043         	movff	?___flneg+2,roundf@x+2
  5249  002404  C004  F044         	movff	?___flneg+3,roundf@x+3
  5250  002408                     l4505:
  5251  002408  BE4E               	btfsc	(roundf@e+1)^0,7,c
  5252  00240A  EF12  F012         	goto	u4310
  5253  00240E  504E               	movf	(roundf@e+1)^0,w,c
  5254  002410  E107               	bnz	u4311
  5255  002412  0E7E               	movlw	126
  5256  002414  5C4D               	subwf	roundf@e^0,w,c
  5257  002416  B0D8               	btfsc	status,0,c
  5258  002418  EF10  F012         	goto	u4311
  5259  00241C  EF12  F012         	goto	u4310
  5260  002420                     u4311:
  5261  002420  EF2E  F012         	goto	l4511
  5262  002424                     u4310:
  5263  002424  C053  F028         	movff	roundf@u,___flmul@b
  5264  002428  C054  F029         	movff	roundf@u+1,___flmul@b+1
  5265  00242C  C055  F02A         	movff	roundf@u+2,___flmul@b+2
  5266  002430  C056  F02B         	movff	roundf@u+3,___flmul@b+3
  5267  002434  0E00               	movlw	0
  5268  002436  6E2C               	movwf	___flmul@a^0,c
  5269  002438  0E00               	movlw	0
  5270  00243A  6E2D               	movwf	(___flmul@a+1)^0,c
  5271  00243C  0E00               	movlw	0
  5272  00243E  6E2E               	movwf	(___flmul@a+2)^0,c
  5273  002440  0E00               	movlw	0
  5274  002442  6E2F               	movwf	(___flmul@a+3)^0,c
  5275  002444  EC81  F00F         	call	___flmul	;wreg free
  5276  002448  C028  F041         	movff	?___flmul,?_roundf
  5277  00244C  C029  F042         	movff	?___flmul+1,?_roundf+1
  5278  002450  C02A  F043         	movff	?___flmul+2,?_roundf+2
  5279  002454  C02B  F044         	movff	?___flmul+3,?_roundf+3
  5280  002458  EF6C  F013         	goto	l1586
  5281  00245C                     l4511:
  5282  00245C  0E00               	movlw	0
  5283  00245E  6E05               	movwf	___fladd@a^0,c
  5284  002460  0E00               	movlw	0
  5285  002462  6E06               	movwf	(___fladd@a+1)^0,c
  5286  002464  0E00               	movlw	0
  5287  002466  6E07               	movwf	(___fladd@a+2)^0,c
  5288  002468  0E4B               	movlw	75
  5289  00246A  6E08               	movwf	(___fladd@a+3)^0,c
  5290  00246C  C041  F001         	movff	roundf@x,___fladd@b
  5291  002470  C042  F002         	movff	roundf@x+1,___fladd@b+1
  5292  002474  C043  F003         	movff	roundf@x+2,___fladd@b+2
  5293  002478  C044  F004         	movff	roundf@x+3,___fladd@b+3
  5294  00247C  EC21  F00D         	call	___fladd	;wreg free
  5295  002480  C001  F04F         	movff	?___fladd,_roundf$3277
  5296  002484  C002  F050         	movff	?___fladd+1,_roundf$3277+1
  5297  002488  C003  F051         	movff	?___fladd+2,_roundf$3277+2
  5298  00248C  C004  F052         	movff	?___fladd+3,_roundf$3277+3
  5299  002490  0E00               	movlw	0
  5300  002492  6E05               	movwf	___fladd@a^0,c
  5301  002494  0E00               	movlw	0
  5302  002496  6E06               	movwf	(___fladd@a+1)^0,c
  5303  002498  0E00               	movlw	0
  5304  00249A  6E07               	movwf	(___fladd@a+2)^0,c
  5305  00249C  0ECB               	movlw	203
  5306  00249E  6E08               	movwf	(___fladd@a+3)^0,c
  5307  0024A0  C04F  F001         	movff	_roundf$3277,___fladd@b
  5308  0024A4  C050  F002         	movff	_roundf$3277+1,___fladd@b+1
  5309  0024A8  C051  F003         	movff	_roundf$3277+2,___fladd@b+2
  5310  0024AC  C052  F004         	movff	_roundf$3277+3,___fladd@b+3
  5311  0024B0  EC21  F00D         	call	___fladd	;wreg free
  5312  0024B4  C001  F049         	movff	?___fladd,_roundf$3278
  5313  0024B8  C002  F04A         	movff	?___fladd+1,_roundf$3278+1
  5314  0024BC  C003  F04B         	movff	?___fladd+2,_roundf$3278+2
  5315  0024C0  C004  F04C         	movff	?___fladd+3,_roundf$3278+3
  5316  0024C4  C049  F011         	movff	_roundf$3278,___flsub@b
  5317  0024C8  C04A  F012         	movff	_roundf$3278+1,___flsub@b+1
  5318  0024CC  C04B  F013         	movff	_roundf$3278+2,___flsub@b+2
  5319  0024D0  C04C  F014         	movff	_roundf$3278+3,___flsub@b+3
  5320  0024D4  C041  F015         	movff	roundf@x,___flsub@a
  5321  0024D8  C042  F016         	movff	roundf@x+1,___flsub@a+1
  5322  0024DC  C043  F017         	movff	roundf@x+2,___flsub@a+2
  5323  0024E0  C044  F018         	movff	roundf@x+3,___flsub@a+3
  5324  0024E4  ECD8  F02A         	call	___flsub	;wreg free
  5325  0024E8  C011  F057         	movff	?___flsub,roundf@y
  5326  0024EC  C012  F058         	movff	?___flsub+1,roundf@y+1
  5327  0024F0  C013  F059         	movff	?___flsub+2,roundf@y+2
  5328  0024F4  C014  F05A         	movff	?___flsub+3,roundf@y+3
  5329  0024F8  0E00               	movlw	0
  5330  0024FA  6E01               	movwf	___flge@ff1^0,c
  5331  0024FC  0E00               	movlw	0
  5332  0024FE  6E02               	movwf	(___flge@ff1+1)^0,c
  5333  002500  0E00               	movlw	0
  5334  002502  6E03               	movwf	(___flge@ff1+2)^0,c
  5335  002504  0E3F               	movlw	63
  5336  002506  6E04               	movwf	(___flge@ff1+3)^0,c
  5337  002508  C057  F005         	movff	roundf@y,___flge@ff2
  5338  00250C  C058  F006         	movff	roundf@y+1,___flge@ff2+1
  5339  002510  C059  F007         	movff	roundf@y+2,___flge@ff2+2
  5340  002514  C05A  F008         	movff	roundf@y+3,___flge@ff2+3
  5341  002518  EC82  F025         	call	___flge	;wreg free
  5342  00251C  B0D8               	btfsc	status,0,c
  5343  00251E  EF93  F012         	goto	u4321
  5344  002522  EF95  F012         	goto	u4320
  5345  002526                     u4321:
  5346  002526  EFCB  F012         	goto	l4515
  5347  00252A                     u4320:
  5348  00252A  C041  F005         	movff	roundf@x,___fladd@a
  5349  00252E  C042  F006         	movff	roundf@x+1,___fladd@a+1
  5350  002532  C043  F007         	movff	roundf@x+2,___fladd@a+2
  5351  002536  C044  F008         	movff	roundf@x+3,___fladd@a+3
  5352  00253A  C057  F001         	movff	roundf@y,___fladd@b
  5353  00253E  C058  F002         	movff	roundf@y+1,___fladd@b+1
  5354  002542  C059  F003         	movff	roundf@y+2,___fladd@b+2
  5355  002546  C05A  F004         	movff	roundf@y+3,___fladd@b+3
  5356  00254A  EC21  F00D         	call	___fladd	;wreg free
  5357  00254E  C001  F04F         	movff	?___fladd,_roundf$3277
  5358  002552  C002  F050         	movff	?___fladd+1,_roundf$3277+1
  5359  002556  C003  F051         	movff	?___fladd+2,_roundf$3277+2
  5360  00255A  C004  F052         	movff	?___fladd+3,_roundf$3277+3
  5361  00255E  C04F  F001         	movff	_roundf$3277,___fladd@b
  5362  002562  C050  F002         	movff	_roundf$3277+1,___fladd@b+1
  5363  002566  C051  F003         	movff	_roundf$3277+2,___fladd@b+2
  5364  00256A  C052  F004         	movff	_roundf$3277+3,___fladd@b+3
  5365  00256E  0E00               	movlw	0
  5366  002570  6E05               	movwf	___fladd@a^0,c
  5367  002572  0E00               	movlw	0
  5368  002574  6E06               	movwf	(___fladd@a+1)^0,c
  5369  002576  0E80               	movlw	128
  5370  002578  6E07               	movwf	(___fladd@a+2)^0,c
  5371  00257A  0EBF               	movlw	191
  5372  00257C  6E08               	movwf	(___fladd@a+3)^0,c
  5373  00257E  EC21  F00D         	call	___fladd	;wreg free
  5374  002582  C001  F057         	movff	?___fladd,roundf@y
  5375  002586  C002  F058         	movff	?___fladd+1,roundf@y+1
  5376  00258A  C003  F059         	movff	?___fladd+2,roundf@y+2
  5377  00258E  C004  F05A         	movff	?___fladd+3,roundf@y+3
  5378  002592  EF34  F013         	goto	l4521
  5379  002596                     l4515:
  5380  002596  0E00               	movlw	0
  5381  002598  6E01               	movwf	___flge@ff1^0,c
  5382  00259A  0E00               	movlw	0
  5383  00259C  6E02               	movwf	(___flge@ff1+1)^0,c
  5384  00259E  0E00               	movlw	0
  5385  0025A0  6E03               	movwf	(___flge@ff1+2)^0,c
  5386  0025A2  0EBF               	movlw	191
  5387  0025A4  6E04               	movwf	(___flge@ff1+3)^0,c
  5388  0025A6  C057  F005         	movff	roundf@y,___flge@ff2
  5389  0025AA  C058  F006         	movff	roundf@y+1,___flge@ff2+1
  5390  0025AE  C059  F007         	movff	roundf@y+2,___flge@ff2+2
  5391  0025B2  C05A  F008         	movff	roundf@y+3,___flge@ff2+3
  5392  0025B6  EC82  F025         	call	___flge	;wreg free
  5393  0025BA  A0D8               	btfss	status,0,c
  5394  0025BC  EFE2  F012         	goto	u4331
  5395  0025C0  EFE4  F012         	goto	u4330
  5396  0025C4                     u4331:
  5397  0025C4  EF1A  F013         	goto	l4519
  5398  0025C8                     u4330:
  5399  0025C8  C041  F005         	movff	roundf@x,___fladd@a
  5400  0025CC  C042  F006         	movff	roundf@x+1,___fladd@a+1
  5401  0025D0  C043  F007         	movff	roundf@x+2,___fladd@a+2
  5402  0025D4  C044  F008         	movff	roundf@x+3,___fladd@a+3
  5403  0025D8  C057  F001         	movff	roundf@y,___fladd@b
  5404  0025DC  C058  F002         	movff	roundf@y+1,___fladd@b+1
  5405  0025E0  C059  F003         	movff	roundf@y+2,___fladd@b+2
  5406  0025E4  C05A  F004         	movff	roundf@y+3,___fladd@b+3
  5407  0025E8  EC21  F00D         	call	___fladd	;wreg free
  5408  0025EC  C001  F04F         	movff	?___fladd,_roundf$3277
  5409  0025F0  C002  F050         	movff	?___fladd+1,_roundf$3277+1
  5410  0025F4  C003  F051         	movff	?___fladd+2,_roundf$3277+2
  5411  0025F8  C004  F052         	movff	?___fladd+3,_roundf$3277+3
  5412  0025FC  C04F  F001         	movff	_roundf$3277,___fladd@b
  5413  002600  C050  F002         	movff	_roundf$3277+1,___fladd@b+1
  5414  002604  C051  F003         	movff	_roundf$3277+2,___fladd@b+2
  5415  002608  C052  F004         	movff	_roundf$3277+3,___fladd@b+3
  5416  00260C  0E00               	movlw	0
  5417  00260E  6E05               	movwf	___fladd@a^0,c
  5418  002610  0E00               	movlw	0
  5419  002612  6E06               	movwf	(___fladd@a+1)^0,c
  5420  002614  0E80               	movlw	128
  5421  002616  6E07               	movwf	(___fladd@a+2)^0,c
  5422  002618  0E3F               	movlw	63
  5423  00261A  6E08               	movwf	(___fladd@a+3)^0,c
  5424  00261C  EC21  F00D         	call	___fladd	;wreg free
  5425  002620  C001  F057         	movff	?___fladd,roundf@y
  5426  002624  C002  F058         	movff	?___fladd+1,roundf@y+1
  5427  002628  C003  F059         	movff	?___fladd+2,roundf@y+2
  5428  00262C  C004  F05A         	movff	?___fladd+3,roundf@y+3
  5429  002630  EF34  F013         	goto	l4521
  5430  002634                     l4519:
  5431  002634  C057  F001         	movff	roundf@y,___fladd@b
  5432  002638  C058  F002         	movff	roundf@y+1,___fladd@b+1
  5433  00263C  C059  F003         	movff	roundf@y+2,___fladd@b+2
  5434  002640  C05A  F004         	movff	roundf@y+3,___fladd@b+3
  5435  002644  C041  F005         	movff	roundf@x,___fladd@a
  5436  002648  C042  F006         	movff	roundf@x+1,___fladd@a+1
  5437  00264C  C043  F007         	movff	roundf@x+2,___fladd@a+2
  5438  002650  C044  F008         	movff	roundf@x+3,___fladd@a+3
  5439  002654  EC21  F00D         	call	___fladd	;wreg free
  5440  002658  C001  F057         	movff	?___fladd,roundf@y
  5441  00265C  C002  F058         	movff	?___fladd+1,roundf@y+1
  5442  002660  C003  F059         	movff	?___fladd+2,roundf@y+2
  5443  002664  C004  F05A         	movff	?___fladd+3,roundf@y+3
  5444  002668                     l4521:
  5445  002668  C053  F045         	movff	roundf@u,??_roundf
  5446  00266C  C054  F046         	movff	roundf@u+1,??_roundf+1
  5447  002670  C055  F047         	movff	roundf@u+2,??_roundf+2
  5448  002674  C056  F048         	movff	roundf@u+3,??_roundf+3
  5449  002678  0E20               	movlw	32
  5450  00267A  EF44  F013         	goto	u4340
  5451  00267E                     u4345:
  5452  00267E  90D8               	bcf	status,0,c
  5453  002680  3248               	rrcf	(??_roundf+3)^0,f,c
  5454  002682  3247               	rrcf	(??_roundf+2)^0,f,c
  5455  002684  3246               	rrcf	(??_roundf+1)^0,f,c
  5456  002686  3245               	rrcf	??_roundf^0,f,c
  5457  002688                     u4340:
  5458  002688  2EE8               	decfsz	wreg,f,c
  5459  00268A  EF3F  F013         	goto	u4345
  5460  00268E  5045               	movf	??_roundf^0,w,c
  5461  002690  1046               	iorwf	(??_roundf+1)^0,w,c
  5462  002692  1047               	iorwf	(??_roundf+2)^0,w,c
  5463  002694  1048               	iorwf	(??_roundf+3)^0,w,c
  5464  002696  B4D8               	btfsc	status,2,c
  5465  002698  EF50  F013         	goto	u4351
  5466  00269C  EF52  F013         	goto	u4350
  5467  0026A0                     u4351:
  5468  0026A0  EF64  F013         	goto	l4525
  5469  0026A4                     u4350:
  5470  0026A4  C057  F001         	movff	roundf@y,___flneg@f1
  5471  0026A8  C058  F002         	movff	roundf@y+1,___flneg@f1+1
  5472  0026AC  C059  F003         	movff	roundf@y+2,___flneg@f1+2
  5473  0026B0  C05A  F004         	movff	roundf@y+3,___flneg@f1+3
  5474  0026B4  EC19  F02C         	call	___flneg	;wreg free
  5475  0026B8  C001  F057         	movff	?___flneg,roundf@y
  5476  0026BC  C002  F058         	movff	?___flneg+1,roundf@y+1
  5477  0026C0  C003  F059         	movff	?___flneg+2,roundf@y+2
  5478  0026C4  C004  F05A         	movff	?___flneg+3,roundf@y+3
  5479  0026C8                     l4525:
  5480  0026C8  C057  F041         	movff	roundf@y,?_roundf
  5481  0026CC  C058  F042         	movff	roundf@y+1,?_roundf+1
  5482  0026D0  C059  F043         	movff	roundf@y+2,?_roundf+2
  5483  0026D4  C05A  F044         	movff	roundf@y+3,?_roundf+3
  5484  0026D8                     l1586:
  5485  0026D8  0012               	return		;funcret
  5486  0026DA                     __end_of_roundf:
  5487                           	callstack 0
  5488                           
  5489 ;; *************** function ___flsub *****************
  5490 ;; Defined at:
  5491 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\sprcadd.c"
  5492 ;; Parameters:    Size  Location     Type
  5493 ;;  b               4   16[COMRAM] float 
  5494 ;;  a               4   20[COMRAM] float 
  5495 ;; Auto vars:     Size  Location     Type
  5496 ;;		None
  5497 ;; Return value:  Size  Location     Type
  5498 ;;                  4   16[COMRAM] float 
  5499 ;; Registers used:
  5500 ;;		wreg, status,2, status,0, cstack
  5501 ;; Tracked objects:
  5502 ;;		On entry : 0/0
  5503 ;;		On exit  : 0/0
  5504 ;;		Unchanged: 0/0
  5505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5506 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5507 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5508 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5509 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5510 ;;Total ram usage:        8 bytes
  5511 ;; Hardware stack levels used: 1
  5512 ;; Hardware stack levels required when called: 2
  5513 ;; This function calls:
  5514 ;;		___fladd
  5515 ;; This function is called by:
  5516 ;;		_roundf
  5517 ;; This function uses a non-reentrant model
  5518 ;;
  5519                           
  5520                           	psect	text20
  5521  0055B0                     __ptext20:
  5522                           	callstack 0
  5523  0055B0                     ___flsub:
  5524                           	callstack 24
  5525  0055B0  0E00               	movlw	0
  5526  0055B2  1A15               	xorwf	___flsub@a^0,f,c
  5527  0055B4  0E00               	movlw	0
  5528  0055B6  1A16               	xorwf	(___flsub@a+1)^0,f,c
  5529  0055B8  0E00               	movlw	0
  5530  0055BA  1A17               	xorwf	(___flsub@a+2)^0,f,c
  5531  0055BC  0E80               	movlw	128
  5532  0055BE  1A18               	xorwf	(___flsub@a+3)^0,f,c
  5533  0055C0  C011  F001         	movff	___flsub@b,___fladd@b
  5534  0055C4  C012  F002         	movff	___flsub@b+1,___fladd@b+1
  5535  0055C8  C013  F003         	movff	___flsub@b+2,___fladd@b+2
  5536  0055CC  C014  F004         	movff	___flsub@b+3,___fladd@b+3
  5537  0055D0  C015  F005         	movff	___flsub@a,___fladd@a
  5538  0055D4  C016  F006         	movff	___flsub@a+1,___fladd@a+1
  5539  0055D8  C017  F007         	movff	___flsub@a+2,___fladd@a+2
  5540  0055DC  C018  F008         	movff	___flsub@a+3,___fladd@a+3
  5541  0055E0  EC21  F00D         	call	___fladd	;wreg free
  5542  0055E4  C001  F011         	movff	?___fladd,?___flsub
  5543  0055E8  C002  F012         	movff	?___fladd+1,?___flsub+1
  5544  0055EC  C003  F013         	movff	?___fladd+2,?___flsub+2
  5545  0055F0  C004  F014         	movff	?___fladd+3,?___flsub+3
  5546  0055F4  0012               	return		;funcret
  5547  0055F6                     __end_of___flsub:
  5548                           	callstack 0
  5549                           
  5550 ;; *************** function ___fladd *****************
  5551 ;; Defined at:
  5552 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\sprcadd.c"
  5553 ;; Parameters:    Size  Location     Type
  5554 ;;  b               4    0[COMRAM] float 
  5555 ;;  a               4    4[COMRAM] float 
  5556 ;; Auto vars:     Size  Location     Type
  5557 ;;  grs             1   15[COMRAM] unsigned char 
  5558 ;;  bexp            1   14[COMRAM] unsigned char 
  5559 ;;  aexp            1   13[COMRAM] unsigned char 
  5560 ;;  signs           1   12[COMRAM] unsigned char 
  5561 ;; Return value:  Size  Location     Type
  5562 ;;                  4    0[COMRAM] unsigned char 
  5563 ;; Registers used:
  5564 ;;		wreg, status,2, status,0
  5565 ;; Tracked objects:
  5566 ;;		On entry : 0/0
  5567 ;;		On exit  : 0/0
  5568 ;;		Unchanged: 0/0
  5569 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5570 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5571 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5572 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5573 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5574 ;;Total ram usage:       16 bytes
  5575 ;; Hardware stack levels used: 1
  5576 ;; Hardware stack levels required when called: 1
  5577 ;; This function calls:
  5578 ;;		Nothing
  5579 ;; This function is called by:
  5580 ;;		___flsub
  5581 ;;		_roundf
  5582 ;; This function uses a non-reentrant model
  5583 ;;
  5584                           
  5585                           	psect	text21
  5586  001A42                     __ptext21:
  5587                           	callstack 0
  5588  001A42                     ___fladd:
  5589                           	callstack 24
  5590  001A42  5004               	movf	(___fladd@b+3)^0,w,c
  5591  001A44  0B80               	andlw	128
  5592  001A46  6E0D               	movwf	___fladd@signs^0,c
  5593  001A48  5004               	movf	(___fladd@b+3)^0,w,c
  5594  001A4A  2404               	addwf	(___fladd@b+3)^0,w,c
  5595  001A4C  6E0F               	movwf	___fladd@bexp^0,c
  5596  001A4E  AE03               	btfss	(___fladd@b+2)^0,7,c
  5597  001A50  EF2C  F00D         	goto	u3411
  5598  001A54  EF2E  F00D         	goto	u3410
  5599  001A58                     u3411:
  5600  001A58  EF2F  F00D         	goto	l3921
  5601  001A5C                     u3410:
  5602  001A5C  800F               	bsf	___fladd@bexp^0,0,c
  5603  001A5E                     l3921:
  5604  001A5E  500F               	movf	___fladd@bexp^0,w,c
  5605  001A60  B4D8               	btfsc	status,2,c
  5606  001A62  EF35  F00D         	goto	u3421
  5607  001A66  EF37  F00D         	goto	u3420
  5608  001A6A                     u3421:
  5609  001A6A  EF4C  F00D         	goto	l3931
  5610  001A6E                     u3420:
  5611  001A6E  280F               	incf	___fladd@bexp^0,w,c
  5612  001A70  A4D8               	btfss	status,2,c
  5613  001A72  EF3D  F00D         	goto	u3431
  5614  001A76  EF3F  F00D         	goto	u3430
  5615  001A7A                     u3431:
  5616  001A7A  EF47  F00D         	goto	l3927
  5617  001A7E                     u3430:
  5618  001A7E  0E00               	movlw	0
  5619  001A80  6E01               	movwf	___fladd@b^0,c
  5620  001A82  0E00               	movlw	0
  5621  001A84  6E02               	movwf	(___fladd@b+1)^0,c
  5622  001A86  0E00               	movlw	0
  5623  001A88  6E03               	movwf	(___fladd@b+2)^0,c
  5624  001A8A  0E00               	movlw	0
  5625  001A8C  6E04               	movwf	(___fladd@b+3)^0,c
  5626  001A8E                     l3927:
  5627  001A8E  8E03               	bsf	(___fladd@b+2)^0,7,c
  5628  001A90  0E00               	movlw	0
  5629  001A92  6E04               	movwf	(___fladd@b+3)^0,c
  5630  001A94  EF54  F00D         	goto	l3933
  5631  001A98                     l3931:
  5632  001A98  0E00               	movlw	0
  5633  001A9A  6E01               	movwf	___fladd@b^0,c
  5634  001A9C  0E00               	movlw	0
  5635  001A9E  6E02               	movwf	(___fladd@b+1)^0,c
  5636  001AA0  0E00               	movlw	0
  5637  001AA2  6E03               	movwf	(___fladd@b+2)^0,c
  5638  001AA4  0E00               	movlw	0
  5639  001AA6  6E04               	movwf	(___fladd@b+3)^0,c
  5640  001AA8                     l3933:
  5641  001AA8  5008               	movf	(___fladd@a+3)^0,w,c
  5642  001AAA  0B80               	andlw	128
  5643  001AAC  6E0E               	movwf	___fladd@aexp^0,c
  5644  001AAE  500D               	movf	___fladd@signs^0,w,c
  5645  001AB0  180E               	xorwf	___fladd@aexp^0,w,c
  5646  001AB2  B4D8               	btfsc	status,2,c
  5647  001AB4  EF5E  F00D         	goto	u3441
  5648  001AB8  EF60  F00D         	goto	u3440
  5649  001ABC                     u3441:
  5650  001ABC  EF61  F00D         	goto	l3939
  5651  001AC0                     u3440:
  5652  001AC0  8C0D               	bsf	___fladd@signs^0,6,c
  5653  001AC2                     l3939:
  5654  001AC2  5008               	movf	(___fladd@a+3)^0,w,c
  5655  001AC4  2408               	addwf	(___fladd@a+3)^0,w,c
  5656  001AC6  6E0E               	movwf	___fladd@aexp^0,c
  5657  001AC8  AE07               	btfss	(___fladd@a+2)^0,7,c
  5658  001ACA  EF69  F00D         	goto	u3451
  5659  001ACE  EF6B  F00D         	goto	u3450
  5660  001AD2                     u3451:
  5661  001AD2  EF6C  F00D         	goto	l3945
  5662  001AD6                     u3450:
  5663  001AD6  800E               	bsf	___fladd@aexp^0,0,c
  5664  001AD8                     l3945:
  5665  001AD8  500E               	movf	___fladd@aexp^0,w,c
  5666  001ADA  B4D8               	btfsc	status,2,c
  5667  001ADC  EF72  F00D         	goto	u3461
  5668  001AE0  EF74  F00D         	goto	u3460
  5669  001AE4                     u3461:
  5670  001AE4  EF89  F00D         	goto	l3955
  5671  001AE8                     u3460:
  5672  001AE8  280E               	incf	___fladd@aexp^0,w,c
  5673  001AEA  A4D8               	btfss	status,2,c
  5674  001AEC  EF7A  F00D         	goto	u3471
  5675  001AF0  EF7C  F00D         	goto	u3470
  5676  001AF4                     u3471:
  5677  001AF4  EF84  F00D         	goto	l3951
  5678  001AF8                     u3470:
  5679  001AF8  0E00               	movlw	0
  5680  001AFA  6E05               	movwf	___fladd@a^0,c
  5681  001AFC  0E00               	movlw	0
  5682  001AFE  6E06               	movwf	(___fladd@a+1)^0,c
  5683  001B00  0E00               	movlw	0
  5684  001B02  6E07               	movwf	(___fladd@a+2)^0,c
  5685  001B04  0E00               	movlw	0
  5686  001B06  6E08               	movwf	(___fladd@a+3)^0,c
  5687  001B08                     l3951:
  5688  001B08  8E07               	bsf	(___fladd@a+2)^0,7,c
  5689  001B0A  0E00               	movlw	0
  5690  001B0C  6E08               	movwf	(___fladd@a+3)^0,c
  5691  001B0E  EF91  F00D         	goto	l3957
  5692  001B12                     l3955:
  5693  001B12  0E00               	movlw	0
  5694  001B14  6E05               	movwf	___fladd@a^0,c
  5695  001B16  0E00               	movlw	0
  5696  001B18  6E06               	movwf	(___fladd@a+1)^0,c
  5697  001B1A  0E00               	movlw	0
  5698  001B1C  6E07               	movwf	(___fladd@a+2)^0,c
  5699  001B1E  0E00               	movlw	0
  5700  001B20  6E08               	movwf	(___fladd@a+3)^0,c
  5701  001B22                     l3957:
  5702  001B22  500F               	movf	___fladd@bexp^0,w,c
  5703  001B24  5C0E               	subwf	___fladd@aexp^0,w,c
  5704  001B26  B0D8               	btfsc	status,0,c
  5705  001B28  EF98  F00D         	goto	u3481
  5706  001B2C  EF9A  F00D         	goto	u3480
  5707  001B30                     u3481:
  5708  001B30  EFC1  F00D         	goto	l3993
  5709  001B34                     u3480:
  5710  001B34  AC0D               	btfss	___fladd@signs^0,6,c
  5711  001B36  EF9F  F00D         	goto	u3491
  5712  001B3A  EFA1  F00D         	goto	u3490
  5713  001B3E                     u3491:
  5714  001B3E  EFA3  F00D         	goto	l3963
  5715  001B42                     u3490:
  5716  001B42  0E80               	movlw	128
  5717  001B44  1A0D               	xorwf	___fladd@signs^0,f,c
  5718  001B46                     l3963:
  5719  001B46  C00F  F010         	movff	___fladd@bexp,___fladd@grs
  5720  001B4A  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  5721  001B4E  C010  F00E         	movff	___fladd@grs,___fladd@aexp
  5722  001B52  C001  F010         	movff	___fladd@b,___fladd@grs
  5723  001B56  C005  F001         	movff	___fladd@a,___fladd@b
  5724  001B5A  C010  F005         	movff	___fladd@grs,___fladd@a
  5725  001B5E  C002  F010         	movff	___fladd@b+1,___fladd@grs
  5726  001B62  C006  F002         	movff	___fladd@a+1,___fladd@b+1
  5727  001B66  C010  F006         	movff	___fladd@grs,___fladd@a+1
  5728  001B6A  C003  F010         	movff	___fladd@b+2,___fladd@grs
  5729  001B6E  C007  F003         	movff	___fladd@a+2,___fladd@b+2
  5730  001B72  C010  F007         	movff	___fladd@grs,___fladd@a+2
  5731  001B76  C004  F010         	movff	___fladd@b+3,___fladd@grs
  5732  001B7A  C008  F004         	movff	___fladd@a+3,___fladd@b+3
  5733  001B7E  C010  F008         	movff	___fladd@grs,___fladd@a+3
  5734  001B82                     l3993:
  5735  001B82  0E00               	movlw	0
  5736  001B84  6E10               	movwf	___fladd@grs^0,c
  5737  001B86  500F               	movf	___fladd@bexp^0,w,c
  5738  001B88  C00E  F009         	movff	___fladd@aexp,??___fladd
  5739  001B8C  6A0A               	clrf	(??___fladd+1)^0,c
  5740  001B8E  5E09               	subwf	??___fladd^0,f,c
  5741  001B90  0E00               	movlw	0
  5742  001B92  5A0A               	subwfb	(??___fladd+1)^0,f,c
  5743  001B94  BE0A               	btfsc	(??___fladd+1)^0,7,c
  5744  001B96  EFD6  F00D         	goto	u3501
  5745  001B9A  500A               	movf	(??___fladd+1)^0,w,c
  5746  001B9C  E109               	bnz	u3500
  5747  001B9E  0E1A               	movlw	26
  5748  001BA0  5C09               	subwf	??___fladd^0,w,c
  5749  001BA2  A0D8               	btfss	status,0,c
  5750  001BA4  EFD6  F00D         	goto	u3501
  5751  001BA8  EFD8  F00D         	goto	u3500
  5752  001BAC                     u3501:
  5753  001BAC  EF0F  F00E         	goto	l1322
  5754  001BB0                     u3500:
  5755  001BB0  5001               	movf	___fladd@b^0,w,c
  5756  001BB2  1002               	iorwf	(___fladd@b+1)^0,w,c
  5757  001BB4  1003               	iorwf	(___fladd@b+2)^0,w,c
  5758  001BB6  1004               	iorwf	(___fladd@b+3)^0,w,c
  5759  001BB8  A4D8               	btfss	status,2,c
  5760  001BBA  EFE1  F00D         	goto	u3511
  5761  001BBE  EFE4  F00D         	goto	u3510
  5762  001BC2                     u3511:
  5763  001BC2  0E01               	movlw	1
  5764  001BC4  EFE5  F00D         	goto	u3520
  5765  001BC8                     u3510:
  5766  001BC8  0E00               	movlw	0
  5767  001BCA                     u3520:
  5768  001BCA  6E10               	movwf	___fladd@grs^0,c
  5769  001BCC  0E00               	movlw	0
  5770  001BCE  6E01               	movwf	___fladd@b^0,c
  5771  001BD0  0E00               	movlw	0
  5772  001BD2  6E02               	movwf	(___fladd@b+1)^0,c
  5773  001BD4  0E00               	movlw	0
  5774  001BD6  6E03               	movwf	(___fladd@b+2)^0,c
  5775  001BD8  0E00               	movlw	0
  5776  001BDA  6E04               	movwf	(___fladd@b+3)^0,c
  5777  001BDC  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  5778  001BE0  EF18  F00E         	goto	l1321
  5779  001BE4                     l1323:
  5780  001BE4  A010               	btfss	___fladd@grs^0,0,c
  5781  001BE6  EFF7  F00D         	goto	u3531
  5782  001BEA  EFF9  F00D         	goto	u3530
  5783  001BEE                     u3531:
  5784  001BEE  EFFF  F00D         	goto	l4005
  5785  001BF2                     u3530:
  5786  001BF2  90D8               	bcf	status,0,c
  5787  001BF4  3010               	rrcf	___fladd@grs^0,w,c
  5788  001BF6  0901               	iorlw	1
  5789  001BF8  6E10               	movwf	___fladd@grs^0,c
  5790  001BFA  EF01  F00E         	goto	l4007
  5791  001BFE                     l4005:
  5792  001BFE  90D8               	bcf	status,0,c
  5793  001C00  3210               	rrcf	___fladd@grs^0,f,c
  5794  001C02                     l4007:
  5795  001C02  A001               	btfss	___fladd@b^0,0,c
  5796  001C04  EF06  F00E         	goto	u3541
  5797  001C08  EF08  F00E         	goto	u3540
  5798  001C0C                     u3541:
  5799  001C0C  EF09  F00E         	goto	l4011
  5800  001C10                     u3540:
  5801  001C10  8E10               	bsf	___fladd@grs^0,7,c
  5802  001C12                     l4011:
  5803  001C12  3404               	rlcf	(___fladd@b+3)^0,w,c
  5804  001C14  3204               	rrcf	(___fladd@b+3)^0,f,c
  5805  001C16  3203               	rrcf	(___fladd@b+2)^0,f,c
  5806  001C18  3202               	rrcf	(___fladd@b+1)^0,f,c
  5807  001C1A  3201               	rrcf	___fladd@b^0,f,c
  5808  001C1C  2A0F               	incf	___fladd@bexp^0,f,c
  5809  001C1E                     l1322:
  5810  001C1E  500E               	movf	___fladd@aexp^0,w,c
  5811  001C20  5C0F               	subwf	___fladd@bexp^0,w,c
  5812  001C22  A0D8               	btfss	status,0,c
  5813  001C24  EF16  F00E         	goto	u3551
  5814  001C28  EF18  F00E         	goto	u3550
  5815  001C2C                     u3551:
  5816  001C2C  EFF2  F00D         	goto	l1323
  5817  001C30                     u3550:
  5818  001C30                     l1321:
  5819  001C30  BC0D               	btfsc	___fladd@signs^0,6,c
  5820  001C32  EF1D  F00E         	goto	u3561
  5821  001C36  EF1F  F00E         	goto	u3560
  5822  001C3A                     u3561:
  5823  001C3A  EF5F  F00E         	goto	l4039
  5824  001C3E                     u3560:
  5825  001C3E  500F               	movf	___fladd@bexp^0,w,c
  5826  001C40  A4D8               	btfss	status,2,c
  5827  001C42  EF25  F00E         	goto	u3571
  5828  001C46  EF27  F00E         	goto	u3570
  5829  001C4A                     u3571:
  5830  001C4A  EF31  F00E         	goto	l4021
  5831  001C4E                     u3570:
  5832  001C4E  0E00               	movlw	0
  5833  001C50  6E01               	movwf	?___fladd^0,c
  5834  001C52  0E00               	movlw	0
  5835  001C54  6E02               	movwf	(?___fladd+1)^0,c
  5836  001C56  0E00               	movlw	0
  5837  001C58  6E03               	movwf	(?___fladd+2)^0,c
  5838  001C5A  0E00               	movlw	0
  5839  001C5C  6E04               	movwf	(?___fladd+3)^0,c
  5840  001C5E  EF80  F00F         	goto	l1330
  5841  001C62                     l4021:
  5842  001C62  5005               	movf	___fladd@a^0,w,c
  5843  001C64  2601               	addwf	___fladd@b^0,f,c
  5844  001C66  5006               	movf	(___fladd@a+1)^0,w,c
  5845  001C68  2202               	addwfc	(___fladd@b+1)^0,f,c
  5846  001C6A  5007               	movf	(___fladd@a+2)^0,w,c
  5847  001C6C  2203               	addwfc	(___fladd@b+2)^0,f,c
  5848  001C6E  5008               	movf	(___fladd@a+3)^0,w,c
  5849  001C70  2204               	addwfc	(___fladd@b+3)^0,f,c
  5850  001C72  A004               	btfss	(___fladd@b+3)^0,0,c
  5851  001C74  EF3E  F00E         	goto	u3581
  5852  001C78  EF40  F00E         	goto	u3580
  5853  001C7C                     u3581:
  5854  001C7C  EFEC  F00E         	goto	l4075
  5855  001C80                     u3580:
  5856  001C80  A010               	btfss	___fladd@grs^0,0,c
  5857  001C82  EF45  F00E         	goto	u3591
  5858  001C86  EF47  F00E         	goto	u3590
  5859  001C8A                     u3591:
  5860  001C8A  EF4D  F00E         	goto	l4029
  5861  001C8E                     u3590:
  5862  001C8E  90D8               	bcf	status,0,c
  5863  001C90  3010               	rrcf	___fladd@grs^0,w,c
  5864  001C92  0901               	iorlw	1
  5865  001C94  6E10               	movwf	___fladd@grs^0,c
  5866  001C96  EF4F  F00E         	goto	l4031
  5867  001C9A                     l4029:
  5868  001C9A  90D8               	bcf	status,0,c
  5869  001C9C  3210               	rrcf	___fladd@grs^0,f,c
  5870  001C9E                     l4031:
  5871  001C9E  A001               	btfss	___fladd@b^0,0,c
  5872  001CA0  EF54  F00E         	goto	u3601
  5873  001CA4  EF56  F00E         	goto	u3600
  5874  001CA8                     u3601:
  5875  001CA8  EF57  F00E         	goto	l4035
  5876  001CAC                     u3600:
  5877  001CAC  8E10               	bsf	___fladd@grs^0,7,c
  5878  001CAE                     l4035:
  5879  001CAE  3404               	rlcf	(___fladd@b+3)^0,w,c
  5880  001CB0  3204               	rrcf	(___fladd@b+3)^0,f,c
  5881  001CB2  3203               	rrcf	(___fladd@b+2)^0,f,c
  5882  001CB4  3202               	rrcf	(___fladd@b+1)^0,f,c
  5883  001CB6  3201               	rrcf	___fladd@b^0,f,c
  5884  001CB8  2A0F               	incf	___fladd@bexp^0,f,c
  5885  001CBA  EFEC  F00E         	goto	l4075
  5886  001CBE                     l4039:
  5887  001CBE  5005               	movf	___fladd@a^0,w,c
  5888  001CC0  5C01               	subwf	___fladd@b^0,w,c
  5889  001CC2  5006               	movf	(___fladd@a+1)^0,w,c
  5890  001CC4  5802               	subwfb	(___fladd@b+1)^0,w,c
  5891  001CC6  5007               	movf	(___fladd@a+2)^0,w,c
  5892  001CC8  5803               	subwfb	(___fladd@b+2)^0,w,c
  5893  001CCA  5004               	movf	(___fladd@b+3)^0,w,c
  5894  001CCC  0A80               	xorlw	128
  5895  001CCE  6E09               	movwf	??___fladd^0,c
  5896  001CD0  5008               	movf	(___fladd@a+3)^0,w,c
  5897  001CD2  0A80               	xorlw	128
  5898  001CD4  5809               	subwfb	??___fladd^0,w,c
  5899  001CD6  B0D8               	btfsc	status,0,c
  5900  001CD8  EF70  F00E         	goto	u3611
  5901  001CDC  EF72  F00E         	goto	u3610
  5902  001CE0                     u3611:
  5903  001CE0  EF9D  F00E         	goto	l4049
  5904  001CE4                     u3610:
  5905  001CE4  5001               	movf	___fladd@b^0,w,c
  5906  001CE6  5C05               	subwf	___fladd@a^0,w,c
  5907  001CE8  6E09               	movwf	??___fladd^0,c
  5908  001CEA  5002               	movf	(___fladd@b+1)^0,w,c
  5909  001CEC  5806               	subwfb	(___fladd@a+1)^0,w,c
  5910  001CEE  6E0A               	movwf	(??___fladd+1)^0,c
  5911  001CF0  5003               	movf	(___fladd@b+2)^0,w,c
  5912  001CF2  5807               	subwfb	(___fladd@a+2)^0,w,c
  5913  001CF4  6E0B               	movwf	(??___fladd+2)^0,c
  5914  001CF6  5004               	movf	(___fladd@b+3)^0,w,c
  5915  001CF8  5808               	subwfb	(___fladd@a+3)^0,w,c
  5916  001CFA  6E0C               	movwf	(??___fladd+3)^0,c
  5917  001CFC  0EFF               	movlw	255
  5918  001CFE  2409               	addwf	??___fladd^0,w,c
  5919  001D00  6E01               	movwf	___fladd@b^0,c
  5920  001D02  0EFF               	movlw	255
  5921  001D04  200A               	addwfc	(??___fladd+1)^0,w,c
  5922  001D06  6E02               	movwf	(___fladd@b+1)^0,c
  5923  001D08  0EFF               	movlw	255
  5924  001D0A  200B               	addwfc	(??___fladd+2)^0,w,c
  5925  001D0C  6E03               	movwf	(___fladd@b+2)^0,c
  5926  001D0E  0EFF               	movlw	255
  5927  001D10  200C               	addwfc	(??___fladd+3)^0,w,c
  5928  001D12  6E04               	movwf	(___fladd@b+3)^0,c
  5929  001D14  0E80               	movlw	128
  5930  001D16  1A0D               	xorwf	___fladd@signs^0,f,c
  5931  001D18  6C10               	negf	___fladd@grs^0,c
  5932  001D1A  5010               	movf	___fladd@grs^0,w,c
  5933  001D1C  A4D8               	btfss	status,2,c
  5934  001D1E  EF93  F00E         	goto	u3621
  5935  001D22  EF95  F00E         	goto	u3620
  5936  001D26                     u3621:
  5937  001D26  EFA5  F00E         	goto	l1338
  5938  001D2A                     u3620:
  5939  001D2A  0E01               	movlw	1
  5940  001D2C  2601               	addwf	___fladd@b^0,f,c
  5941  001D2E  0E00               	movlw	0
  5942  001D30  2202               	addwfc	(___fladd@b+1)^0,f,c
  5943  001D32  2203               	addwfc	(___fladd@b+2)^0,f,c
  5944  001D34  2204               	addwfc	(___fladd@b+3)^0,f,c
  5945  001D36  EFA5  F00E         	goto	l1338
  5946  001D3A                     l4049:
  5947  001D3A  5005               	movf	___fladd@a^0,w,c
  5948  001D3C  5E01               	subwf	___fladd@b^0,f,c
  5949  001D3E  5006               	movf	(___fladd@a+1)^0,w,c
  5950  001D40  5A02               	subwfb	(___fladd@b+1)^0,f,c
  5951  001D42  5007               	movf	(___fladd@a+2)^0,w,c
  5952  001D44  5A03               	subwfb	(___fladd@b+2)^0,f,c
  5953  001D46  5008               	movf	(___fladd@a+3)^0,w,c
  5954  001D48  5A04               	subwfb	(___fladd@b+3)^0,f,c
  5955  001D4A                     l1338:
  5956  001D4A  5001               	movf	___fladd@b^0,w,c
  5957  001D4C  1002               	iorwf	(___fladd@b+1)^0,w,c
  5958  001D4E  1003               	iorwf	(___fladd@b+2)^0,w,c
  5959  001D50  1004               	iorwf	(___fladd@b+3)^0,w,c
  5960  001D52  A4D8               	btfss	status,2,c
  5961  001D54  EFAE  F00E         	goto	u3631
  5962  001D58  EFB0  F00E         	goto	u3630
  5963  001D5C                     u3631:
  5964  001D5C  EFE5  F00E         	goto	l4073
  5965  001D60                     u3630:
  5966  001D60  5010               	movf	___fladd@grs^0,w,c
  5967  001D62  A4D8               	btfss	status,2,c
  5968  001D64  EFB6  F00E         	goto	u3641
  5969  001D68  EFB8  F00E         	goto	u3640
  5970  001D6C                     u3641:
  5971  001D6C  EFE5  F00E         	goto	l4073
  5972  001D70                     u3640:
  5973  001D70  0E00               	movlw	0
  5974  001D72  6E01               	movwf	?___fladd^0,c
  5975  001D74  0E00               	movlw	0
  5976  001D76  6E02               	movwf	(?___fladd+1)^0,c
  5977  001D78  0E00               	movlw	0
  5978  001D7A  6E03               	movwf	(?___fladd+2)^0,c
  5979  001D7C  0E00               	movlw	0
  5980  001D7E  6E04               	movwf	(?___fladd+3)^0,c
  5981  001D80  EF80  F00F         	goto	l1330
  5982  001D84                     l4057:
  5983  001D84  90D8               	bcf	status,0,c
  5984  001D86  3601               	rlcf	___fladd@b^0,f,c
  5985  001D88  3602               	rlcf	(___fladd@b+1)^0,f,c
  5986  001D8A  3603               	rlcf	(___fladd@b+2)^0,f,c
  5987  001D8C  3604               	rlcf	(___fladd@b+3)^0,f,c
  5988  001D8E  AE10               	btfss	___fladd@grs^0,7,c
  5989  001D90  EFCC  F00E         	goto	u3651
  5990  001D94  EFCE  F00E         	goto	u3650
  5991  001D98                     u3651:
  5992  001D98  EFCF  F00E         	goto	l4063
  5993  001D9C                     u3650:
  5994  001D9C  8001               	bsf	___fladd@b^0,0,c
  5995  001D9E                     l4063:
  5996  001D9E  A010               	btfss	___fladd@grs^0,0,c
  5997  001DA0  EFD4  F00E         	goto	u3661
  5998  001DA4  EFD6  F00E         	goto	u3660
  5999  001DA8                     u3661:
  6000  001DA8  EFDA  F00E         	goto	l4067
  6001  001DAC                     u3660:
  6002  001DAC  80D8               	bsf	status,0,c
  6003  001DAE  3610               	rlcf	___fladd@grs^0,f,c
  6004  001DB0  EFDC  F00E         	goto	l4069
  6005  001DB4                     l4067:
  6006  001DB4  90D8               	bcf	status,0,c
  6007  001DB6  3610               	rlcf	___fladd@grs^0,f,c
  6008  001DB8                     l4069:
  6009  001DB8  500F               	movf	___fladd@bexp^0,w,c
  6010  001DBA  B4D8               	btfsc	status,2,c
  6011  001DBC  EFE2  F00E         	goto	u3671
  6012  001DC0  EFE4  F00E         	goto	u3670
  6013  001DC4                     u3671:
  6014  001DC4  EFE5  F00E         	goto	l4073
  6015  001DC8                     u3670:
  6016  001DC8  060F               	decf	___fladd@bexp^0,f,c
  6017  001DCA                     l4073:
  6018  001DCA  AE03               	btfss	(___fladd@b+2)^0,7,c
  6019  001DCC  EFEA  F00E         	goto	u3681
  6020  001DD0  EFEC  F00E         	goto	u3680
  6021  001DD4                     u3681:
  6022  001DD4  EFC2  F00E         	goto	l4057
  6023  001DD8                     u3680:
  6024  001DD8                     l4075:
  6025  001DD8  0E00               	movlw	0
  6026  001DDA  6E0E               	movwf	___fladd@aexp^0,c
  6027  001DDC  AE10               	btfss	___fladd@grs^0,7,c
  6028  001DDE  EFF3  F00E         	goto	u3691
  6029  001DE2  EFF5  F00E         	goto	u3690
  6030  001DE6                     u3691:
  6031  001DE6  EF0D  F00F         	goto	l1347
  6032  001DEA                     u3690:
  6033  001DEA  C010  F009         	movff	___fladd@grs,??___fladd
  6034  001DEE  0E7F               	movlw	127
  6035  001DF0  1609               	andwf	??___fladd^0,f,c
  6036  001DF2  B4D8               	btfsc	status,2,c
  6037  001DF4  EFFE  F00E         	goto	u3701
  6038  001DF8  EF00  F00F         	goto	u3700
  6039  001DFC                     u3701:
  6040  001DFC  EF04  F00F         	goto	l1348
  6041  001E00                     u3700:
  6042  001E00                     l4081:
  6043  001E00  0E01               	movlw	1
  6044  001E02  6E0E               	movwf	___fladd@aexp^0,c
  6045  001E04  EF0D  F00F         	goto	l1347
  6046  001E08                     l1348:
  6047  001E08  A001               	btfss	___fladd@b^0,0,c
  6048  001E0A  EF09  F00F         	goto	u3711
  6049  001E0E  EF0B  F00F         	goto	u3710
  6050  001E12                     u3711:
  6051  001E12  EF0D  F00F         	goto	l1347
  6052  001E16                     u3710:
  6053  001E16  EF00  F00F         	goto	l4081
  6054  001E1A                     l1347:
  6055  001E1A  500E               	movf	___fladd@aexp^0,w,c
  6056  001E1C  B4D8               	btfsc	status,2,c
  6057  001E1E  EF13  F00F         	goto	u3721
  6058  001E22  EF15  F00F         	goto	u3720
  6059  001E26                     u3721:
  6060  001E26  EF40  F00F         	goto	l4093
  6061  001E2A                     u3720:
  6062  001E2A  0E01               	movlw	1
  6063  001E2C  2601               	addwf	___fladd@b^0,f,c
  6064  001E2E  0E00               	movlw	0
  6065  001E30  2202               	addwfc	(___fladd@b+1)^0,f,c
  6066  001E32  2203               	addwfc	(___fladd@b+2)^0,f,c
  6067  001E34  2204               	addwfc	(___fladd@b+3)^0,f,c
  6068  001E36  A004               	btfss	(___fladd@b+3)^0,0,c
  6069  001E38  EF20  F00F         	goto	u3731
  6070  001E3C  EF22  F00F         	goto	u3730
  6071  001E40                     u3731:
  6072  001E40  EF40  F00F         	goto	l4093
  6073  001E44                     u3730:
  6074  001E44  C001  F009         	movff	___fladd@b,??___fladd
  6075  001E48  C002  F00A         	movff	___fladd@b+1,??___fladd+1
  6076  001E4C  C003  F00B         	movff	___fladd@b+2,??___fladd+2
  6077  001E50  C004  F00C         	movff	___fladd@b+3,??___fladd+3
  6078  001E54  340C               	rlcf	(??___fladd+3)^0,w,c
  6079  001E56  320C               	rrcf	(??___fladd+3)^0,f,c
  6080  001E58  320B               	rrcf	(??___fladd+2)^0,f,c
  6081  001E5A  320A               	rrcf	(??___fladd+1)^0,f,c
  6082  001E5C  3209               	rrcf	??___fladd^0,f,c
  6083  001E5E  C009  F001         	movff	??___fladd,___fladd@b
  6084  001E62  C00A  F002         	movff	??___fladd+1,___fladd@b+1
  6085  001E66  C00B  F003         	movff	??___fladd+2,___fladd@b+2
  6086  001E6A  C00C  F004         	movff	??___fladd+3,___fladd@b+3
  6087  001E6E  280F               	incf	___fladd@bexp^0,w,c
  6088  001E70  B4D8               	btfsc	status,2,c
  6089  001E72  EF3D  F00F         	goto	u3741
  6090  001E76  EF3F  F00F         	goto	u3740
  6091  001E7A                     u3741:
  6092  001E7A  EF40  F00F         	goto	l4093
  6093  001E7E                     u3740:
  6094  001E7E  2A0F               	incf	___fladd@bexp^0,f,c
  6095  001E80                     l4093:
  6096  001E80  280F               	incf	___fladd@bexp^0,w,c
  6097  001E82  B4D8               	btfsc	status,2,c
  6098  001E84  EF46  F00F         	goto	u3751
  6099  001E88  EF48  F00F         	goto	u3750
  6100  001E8C                     u3751:
  6101  001E8C  EF50  F00F         	goto	l4097
  6102  001E90                     u3750:
  6103  001E90  500F               	movf	___fladd@bexp^0,w,c
  6104  001E92  A4D8               	btfss	status,2,c
  6105  001E94  EF4E  F00F         	goto	u3761
  6106  001E98  EF50  F00F         	goto	u3760
  6107  001E9C                     u3761:
  6108  001E9C  EF62  F00F         	goto	l4101
  6109  001EA0                     u3760:
  6110  001EA0                     l4097:
  6111  001EA0  0E00               	movlw	0
  6112  001EA2  6E01               	movwf	___fladd@b^0,c
  6113  001EA4  0E00               	movlw	0
  6114  001EA6  6E02               	movwf	(___fladd@b+1)^0,c
  6115  001EA8  0E00               	movlw	0
  6116  001EAA  6E03               	movwf	(___fladd@b+2)^0,c
  6117  001EAC  0E00               	movlw	0
  6118  001EAE  6E04               	movwf	(___fladd@b+3)^0,c
  6119  001EB0  500F               	movf	___fladd@bexp^0,w,c
  6120  001EB2  A4D8               	btfss	status,2,c
  6121  001EB4  EF5E  F00F         	goto	u3771
  6122  001EB8  EF60  F00F         	goto	u3770
  6123  001EBC                     u3771:
  6124  001EBC  EF62  F00F         	goto	l4101
  6125  001EC0                     u3770:
  6126  001EC0  0E00               	movlw	0
  6127  001EC2  6E0D               	movwf	___fladd@signs^0,c
  6128  001EC4                     l4101:
  6129  001EC4  A00F               	btfss	___fladd@bexp^0,0,c
  6130  001EC6  EF67  F00F         	goto	u3781
  6131  001ECA  EF69  F00F         	goto	u3780
  6132  001ECE                     u3781:
  6133  001ECE  EF6C  F00F         	goto	l4105
  6134  001ED2                     u3780:
  6135  001ED2  8E03               	bsf	(___fladd@b+2)^0,7,c
  6136  001ED4  EF6D  F00F         	goto	l4107
  6137  001ED8                     l4105:
  6138  001ED8  9E03               	bcf	(___fladd@b+2)^0,7,c
  6139  001EDA                     l4107:
  6140  001EDA  90D8               	bcf	status,0,c
  6141  001EDC  300F               	rrcf	___fladd@bexp^0,w,c
  6142  001EDE  6E04               	movwf	(___fladd@b+3)^0,c
  6143  001EE0  AE0D               	btfss	___fladd@signs^0,7,c
  6144  001EE2  EF75  F00F         	goto	u3791
  6145  001EE6  EF77  F00F         	goto	u3790
  6146  001EEA                     u3791:
  6147  001EEA  EF78  F00F         	goto	l4113
  6148  001EEE                     u3790:
  6149  001EEE  8E04               	bsf	(___fladd@b+3)^0,7,c
  6150  001EF0                     l4113:
  6151  001EF0  C001  F001         	movff	___fladd@b,?___fladd
  6152  001EF4  C002  F002         	movff	___fladd@b+1,?___fladd+1
  6153  001EF8  C003  F003         	movff	___fladd@b+2,?___fladd+2
  6154  001EFC  C004  F004         	movff	___fladd@b+3,?___fladd+3
  6155  001F00                     l1330:
  6156  001F00  0012               	return		;funcret
  6157  001F02                     __end_of___fladd:
  6158                           	callstack 0
  6159                           
  6160 ;; *************** function ___flneg *****************
  6161 ;; Defined at:
  6162 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\flneg.c"
  6163 ;; Parameters:    Size  Location     Type
  6164 ;;  f1              4    0[COMRAM] unsigned char 
  6165 ;; Auto vars:     Size  Location     Type
  6166 ;;		None
  6167 ;; Return value:  Size  Location     Type
  6168 ;;                  4    0[COMRAM] unsigned char 
  6169 ;; Registers used:
  6170 ;;		wreg, status,2, status,0
  6171 ;; Tracked objects:
  6172 ;;		On entry : 0/0
  6173 ;;		On exit  : 0/0
  6174 ;;		Unchanged: 0/0
  6175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6176 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6177 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6178 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6179 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6180 ;;Total ram usage:        4 bytes
  6181 ;; Hardware stack levels used: 1
  6182 ;; Hardware stack levels required when called: 1
  6183 ;; This function calls:
  6184 ;;		Nothing
  6185 ;; This function is called by:
  6186 ;;		_roundf
  6187 ;; This function uses a non-reentrant model
  6188 ;;
  6189                           
  6190                           	psect	text22
  6191  005832                     __ptext22:
  6192                           	callstack 0
  6193  005832                     ___flneg:
  6194                           	callstack 25
  6195  005832  5001               	movf	___flneg@f1^0,w,c
  6196  005834  1002               	iorwf	(___flneg@f1+1)^0,w,c
  6197  005836  1003               	iorwf	(___flneg@f1+2)^0,w,c
  6198  005838  1004               	iorwf	(___flneg@f1+3)^0,w,c
  6199  00583A  B4D8               	btfsc	status,2,c
  6200  00583C  EF22  F02C         	goto	u4151
  6201  005840  EF24  F02C         	goto	u4150
  6202  005844                     u4151:
  6203  005844  EF2C  F02C         	goto	l4377
  6204  005848                     u4150:
  6205  005848  0E00               	movlw	0
  6206  00584A  1A01               	xorwf	___flneg@f1^0,f,c
  6207  00584C  0E00               	movlw	0
  6208  00584E  1A02               	xorwf	(___flneg@f1+1)^0,f,c
  6209  005850  0E00               	movlw	0
  6210  005852  1A03               	xorwf	(___flneg@f1+2)^0,f,c
  6211  005854  0E80               	movlw	128
  6212  005856  1A04               	xorwf	(___flneg@f1+3)^0,f,c
  6213  005858                     l4377:
  6214  005858  C001  F001         	movff	___flneg@f1,?___flneg
  6215  00585C  C002  F002         	movff	___flneg@f1+1,?___flneg+1
  6216  005860  C003  F003         	movff	___flneg@f1+2,?___flneg+2
  6217  005864  C004  F004         	movff	___flneg@f1+3,?___flneg+3
  6218  005868  0012               	return		;funcret
  6219  00586A                     __end_of___flneg:
  6220                           	callstack 0
  6221                           
  6222 ;; *************** function ___flmul *****************
  6223 ;; Defined at:
  6224 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\sprcmul.c"
  6225 ;; Parameters:    Size  Location     Type
  6226 ;;  b               4   39[COMRAM] unsigned char 
  6227 ;;  a               4   43[COMRAM] unsigned char 
  6228 ;; Auto vars:     Size  Location     Type
  6229 ;;  prod            4   58[COMRAM] struct .
  6230 ;;  grs             4   52[COMRAM] unsigned long 
  6231 ;;  temp            2   62[COMRAM] struct .
  6232 ;;  bexp            1   57[COMRAM] unsigned char 
  6233 ;;  aexp            1   56[COMRAM] unsigned char 
  6234 ;;  sign            1   51[COMRAM] unsigned char 
  6235 ;; Return value:  Size  Location     Type
  6236 ;;                  4   39[COMRAM] unsigned char 
  6237 ;; Registers used:
  6238 ;;		wreg, status,2, status,0, prodl, prodh
  6239 ;; Tracked objects:
  6240 ;;		On entry : 0/0
  6241 ;;		On exit  : 0/0
  6242 ;;		Unchanged: 0/0
  6243 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6244 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6245 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6246 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6247 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6248 ;;Total ram usage:       25 bytes
  6249 ;; Hardware stack levels used: 1
  6250 ;; Hardware stack levels required when called: 1
  6251 ;; This function calls:
  6252 ;;		Nothing
  6253 ;; This function is called by:
  6254 ;;		_detect_color
  6255 ;;		_distance_measure
  6256 ;;		_roundf
  6257 ;;		_check_color_reading
  6258 ;; This function uses a non-reentrant model
  6259 ;;
  6260                           
  6261                           	psect	text23
  6262  001F02                     __ptext23:
  6263                           	callstack 0
  6264  001F02                     ___flmul:
  6265                           	callstack 25
  6266  001F02  502B               	movf	(___flmul@b+3)^0,w,c
  6267  001F04  0B80               	andlw	128
  6268  001F06  6E34               	movwf	___flmul@sign^0,c
  6269  001F08  502B               	movf	(___flmul@b+3)^0,w,c
  6270  001F0A  242B               	addwf	(___flmul@b+3)^0,w,c
  6271  001F0C  6E3A               	movwf	___flmul@bexp^0,c
  6272  001F0E  AE2A               	btfss	(___flmul@b+2)^0,7,c
  6273  001F10  EF8C  F00F         	goto	u3911
  6274  001F14  EF8E  F00F         	goto	u3910
  6275  001F18                     u3911:
  6276  001F18  EF8F  F00F         	goto	l4221
  6277  001F1C                     u3910:
  6278  001F1C  803A               	bsf	___flmul@bexp^0,0,c
  6279  001F1E                     l4221:
  6280  001F1E  503A               	movf	___flmul@bexp^0,w,c
  6281  001F20  B4D8               	btfsc	status,2,c
  6282  001F22  EF95  F00F         	goto	u3921
  6283  001F26  EF97  F00F         	goto	u3920
  6284  001F2A                     u3921:
  6285  001F2A  EFAA  F00F         	goto	l4229
  6286  001F2E                     u3920:
  6287  001F2E  283A               	incf	___flmul@bexp^0,w,c
  6288  001F30  A4D8               	btfss	status,2,c
  6289  001F32  EF9D  F00F         	goto	u3931
  6290  001F36  EF9F  F00F         	goto	u3930
  6291  001F3A                     u3931:
  6292  001F3A  EFA7  F00F         	goto	l4227
  6293  001F3E                     u3930:
  6294  001F3E  0E00               	movlw	0
  6295  001F40  6E28               	movwf	___flmul@b^0,c
  6296  001F42  0E00               	movlw	0
  6297  001F44  6E29               	movwf	(___flmul@b+1)^0,c
  6298  001F46  0E00               	movlw	0
  6299  001F48  6E2A               	movwf	(___flmul@b+2)^0,c
  6300  001F4A  0E00               	movlw	0
  6301  001F4C  6E2B               	movwf	(___flmul@b+3)^0,c
  6302  001F4E                     l4227:
  6303  001F4E  8E2A               	bsf	(___flmul@b+2)^0,7,c
  6304  001F50  EFB2  F00F         	goto	l4231
  6305  001F54                     l4229:
  6306  001F54  0E00               	movlw	0
  6307  001F56  6E28               	movwf	___flmul@b^0,c
  6308  001F58  0E00               	movlw	0
  6309  001F5A  6E29               	movwf	(___flmul@b+1)^0,c
  6310  001F5C  0E00               	movlw	0
  6311  001F5E  6E2A               	movwf	(___flmul@b+2)^0,c
  6312  001F60  0E00               	movlw	0
  6313  001F62  6E2B               	movwf	(___flmul@b+3)^0,c
  6314  001F64                     l4231:
  6315  001F64  502F               	movf	(___flmul@a+3)^0,w,c
  6316  001F66  0B80               	andlw	128
  6317  001F68  1A34               	xorwf	___flmul@sign^0,f,c
  6318  001F6A  502F               	movf	(___flmul@a+3)^0,w,c
  6319  001F6C  242F               	addwf	(___flmul@a+3)^0,w,c
  6320  001F6E  6E39               	movwf	___flmul@aexp^0,c
  6321  001F70  AE2E               	btfss	(___flmul@a+2)^0,7,c
  6322  001F72  EFBD  F00F         	goto	u3941
  6323  001F76  EFBF  F00F         	goto	u3940
  6324  001F7A                     u3941:
  6325  001F7A  EFC0  F00F         	goto	l4239
  6326  001F7E                     u3940:
  6327  001F7E  8039               	bsf	___flmul@aexp^0,0,c
  6328  001F80                     l4239:
  6329  001F80  5039               	movf	___flmul@aexp^0,w,c
  6330  001F82  B4D8               	btfsc	status,2,c
  6331  001F84  EFC6  F00F         	goto	u3951
  6332  001F88  EFC8  F00F         	goto	u3950
  6333  001F8C                     u3951:
  6334  001F8C  EFDB  F00F         	goto	l4247
  6335  001F90                     u3950:
  6336  001F90  2839               	incf	___flmul@aexp^0,w,c
  6337  001F92  A4D8               	btfss	status,2,c
  6338  001F94  EFCE  F00F         	goto	u3961
  6339  001F98  EFD0  F00F         	goto	u3960
  6340  001F9C                     u3961:
  6341  001F9C  EFD8  F00F         	goto	l4245
  6342  001FA0                     u3960:
  6343  001FA0  0E00               	movlw	0
  6344  001FA2  6E2C               	movwf	___flmul@a^0,c
  6345  001FA4  0E00               	movlw	0
  6346  001FA6  6E2D               	movwf	(___flmul@a+1)^0,c
  6347  001FA8  0E00               	movlw	0
  6348  001FAA  6E2E               	movwf	(___flmul@a+2)^0,c
  6349  001FAC  0E00               	movlw	0
  6350  001FAE  6E2F               	movwf	(___flmul@a+3)^0,c
  6351  001FB0                     l4245:
  6352  001FB0  8E2E               	bsf	(___flmul@a+2)^0,7,c
  6353  001FB2  EFE3  F00F         	goto	l1407
  6354  001FB6                     l4247:
  6355  001FB6  0E00               	movlw	0
  6356  001FB8  6E2C               	movwf	___flmul@a^0,c
  6357  001FBA  0E00               	movlw	0
  6358  001FBC  6E2D               	movwf	(___flmul@a+1)^0,c
  6359  001FBE  0E00               	movlw	0
  6360  001FC0  6E2E               	movwf	(___flmul@a+2)^0,c
  6361  001FC2  0E00               	movlw	0
  6362  001FC4  6E2F               	movwf	(___flmul@a+3)^0,c
  6363  001FC6                     l1407:
  6364  001FC6  5039               	movf	___flmul@aexp^0,w,c
  6365  001FC8  B4D8               	btfsc	status,2,c
  6366  001FCA  EFE9  F00F         	goto	u3971
  6367  001FCE  EFEB  F00F         	goto	u3970
  6368  001FD2                     u3971:
  6369  001FD2  EFF3  F00F         	goto	l4251
  6370  001FD6                     u3970:
  6371  001FD6  503A               	movf	___flmul@bexp^0,w,c
  6372  001FD8  A4D8               	btfss	status,2,c
  6373  001FDA  EFF1  F00F         	goto	u3981
  6374  001FDE  EFF3  F00F         	goto	u3980
  6375  001FE2                     u3981:
  6376  001FE2  EFFD  F00F         	goto	l4255
  6377  001FE6                     u3980:
  6378  001FE6                     l4251:
  6379  001FE6  0E00               	movlw	0
  6380  001FE8  6E28               	movwf	?___flmul^0,c
  6381  001FEA  0E00               	movlw	0
  6382  001FEC  6E29               	movwf	(?___flmul+1)^0,c
  6383  001FEE  0E00               	movlw	0
  6384  001FF0  6E2A               	movwf	(?___flmul+2)^0,c
  6385  001FF2  0E00               	movlw	0
  6386  001FF4  6E2B               	movwf	(?___flmul+3)^0,c
  6387  001FF6  EF95  F011         	goto	l1411
  6388  001FFA                     l4255:
  6389  001FFA  502E               	movf	(___flmul@a+2)^0,w,c
  6390  001FFC  0228               	mulwf	___flmul@b^0,c
  6391  001FFE  CFF3 F03F          	movff	prodl,___flmul@temp
  6392  002002  CFF4 F040          	movff	prodh,___flmul@temp+1
  6393  002006  503F               	movf	___flmul@temp^0,w,c
  6394  002008  6E35               	movwf	___flmul@grs^0,c
  6395  00200A  6A36               	clrf	(___flmul@grs+1)^0,c
  6396  00200C  6A37               	clrf	(___flmul@grs+2)^0,c
  6397  00200E  6A38               	clrf	(___flmul@grs+3)^0,c
  6398  002010  5040               	movf	(___flmul@temp+1)^0,w,c
  6399  002012  6E3B               	movwf	___flmul@prod^0,c
  6400  002014  6A3C               	clrf	(___flmul@prod+1)^0,c
  6401  002016  6A3D               	clrf	(___flmul@prod+2)^0,c
  6402  002018  6A3E               	clrf	(___flmul@prod+3)^0,c
  6403  00201A  502D               	movf	(___flmul@a+1)^0,w,c
  6404  00201C  0229               	mulwf	(___flmul@b+1)^0,c
  6405  00201E  CFF3 F03F          	movff	prodl,___flmul@temp
  6406  002022  CFF4 F040          	movff	prodh,___flmul@temp+1
  6407  002026  503F               	movf	___flmul@temp^0,w,c
  6408  002028  2635               	addwf	___flmul@grs^0,f,c
  6409  00202A  0E00               	movlw	0
  6410  00202C  2236               	addwfc	(___flmul@grs+1)^0,f,c
  6411  00202E  2237               	addwfc	(___flmul@grs+2)^0,f,c
  6412  002030  2238               	addwfc	(___flmul@grs+3)^0,f,c
  6413  002032  5040               	movf	(___flmul@temp+1)^0,w,c
  6414  002034  263B               	addwf	___flmul@prod^0,f,c
  6415  002036  0E00               	movlw	0
  6416  002038  223C               	addwfc	(___flmul@prod+1)^0,f,c
  6417  00203A  223D               	addwfc	(___flmul@prod+2)^0,f,c
  6418  00203C  223E               	addwfc	(___flmul@prod+3)^0,f,c
  6419  00203E  502C               	movf	___flmul@a^0,w,c
  6420  002040  022A               	mulwf	(___flmul@b+2)^0,c
  6421  002042  CFF3 F03F          	movff	prodl,___flmul@temp
  6422  002046  CFF4 F040          	movff	prodh,___flmul@temp+1
  6423  00204A  503F               	movf	___flmul@temp^0,w,c
  6424  00204C  2635               	addwf	___flmul@grs^0,f,c
  6425  00204E  0E00               	movlw	0
  6426  002050  2236               	addwfc	(___flmul@grs+1)^0,f,c
  6427  002052  2237               	addwfc	(___flmul@grs+2)^0,f,c
  6428  002054  2238               	addwfc	(___flmul@grs+3)^0,f,c
  6429  002056  5040               	movf	(___flmul@temp+1)^0,w,c
  6430  002058  263B               	addwf	___flmul@prod^0,f,c
  6431  00205A  0E00               	movlw	0
  6432  00205C  223C               	addwfc	(___flmul@prod+1)^0,f,c
  6433  00205E  223D               	addwfc	(___flmul@prod+2)^0,f,c
  6434  002060  223E               	addwfc	(___flmul@prod+3)^0,f,c
  6435  002062  C037  F038         	movff	___flmul@grs+2,___flmul@grs+3
  6436  002066  C036  F037         	movff	___flmul@grs+1,___flmul@grs+2
  6437  00206A  C035  F036         	movff	___flmul@grs,___flmul@grs+1
  6438  00206E  6A35               	clrf	___flmul@grs^0,c
  6439  002070  502C               	movf	___flmul@a^0,w,c
  6440  002072  0229               	mulwf	(___flmul@b+1)^0,c
  6441  002074  CFF3 F03F          	movff	prodl,___flmul@temp
  6442  002078  CFF4 F040          	movff	prodh,___flmul@temp+1
  6443  00207C  503F               	movf	___flmul@temp^0,w,c
  6444  00207E  2635               	addwf	___flmul@grs^0,f,c
  6445  002080  5040               	movf	(___flmul@temp+1)^0,w,c
  6446  002082  2236               	addwfc	(___flmul@grs+1)^0,f,c
  6447  002084  0E00               	movlw	0
  6448  002086  2237               	addwfc	(___flmul@grs+2)^0,f,c
  6449  002088  0E00               	movlw	0
  6450  00208A  2238               	addwfc	(___flmul@grs+3)^0,f,c
  6451  00208C  502D               	movf	(___flmul@a+1)^0,w,c
  6452  00208E  0228               	mulwf	___flmul@b^0,c
  6453  002090  CFF3 F03F          	movff	prodl,___flmul@temp
  6454  002094  CFF4 F040          	movff	prodh,___flmul@temp+1
  6455  002098  503F               	movf	___flmul@temp^0,w,c
  6456  00209A  2635               	addwf	___flmul@grs^0,f,c
  6457  00209C  5040               	movf	(___flmul@temp+1)^0,w,c
  6458  00209E  2236               	addwfc	(___flmul@grs+1)^0,f,c
  6459  0020A0  0E00               	movlw	0
  6460  0020A2  2237               	addwfc	(___flmul@grs+2)^0,f,c
  6461  0020A4  0E00               	movlw	0
  6462  0020A6  2238               	addwfc	(___flmul@grs+3)^0,f,c
  6463  0020A8  C037  F038         	movff	___flmul@grs+2,___flmul@grs+3
  6464  0020AC  C036  F037         	movff	___flmul@grs+1,___flmul@grs+2
  6465  0020B0  C035  F036         	movff	___flmul@grs,___flmul@grs+1
  6466  0020B4  6A35               	clrf	___flmul@grs^0,c
  6467  0020B6  502C               	movf	___flmul@a^0,w,c
  6468  0020B8  0228               	mulwf	___flmul@b^0,c
  6469  0020BA  CFF3 F03F          	movff	prodl,___flmul@temp
  6470  0020BE  CFF4 F040          	movff	prodh,___flmul@temp+1
  6471  0020C2  503F               	movf	___flmul@temp^0,w,c
  6472  0020C4  2635               	addwf	___flmul@grs^0,f,c
  6473  0020C6  5040               	movf	(___flmul@temp+1)^0,w,c
  6474  0020C8  2236               	addwfc	(___flmul@grs+1)^0,f,c
  6475  0020CA  0E00               	movlw	0
  6476  0020CC  2237               	addwfc	(___flmul@grs+2)^0,f,c
  6477  0020CE  0E00               	movlw	0
  6478  0020D0  2238               	addwfc	(___flmul@grs+3)^0,f,c
  6479  0020D2  502E               	movf	(___flmul@a+2)^0,w,c
  6480  0020D4  0229               	mulwf	(___flmul@b+1)^0,c
  6481  0020D6  CFF3 F03F          	movff	prodl,___flmul@temp
  6482  0020DA  CFF4 F040          	movff	prodh,___flmul@temp+1
  6483  0020DE  503F               	movf	___flmul@temp^0,w,c
  6484  0020E0  263B               	addwf	___flmul@prod^0,f,c
  6485  0020E2  5040               	movf	(___flmul@temp+1)^0,w,c
  6486  0020E4  223C               	addwfc	(___flmul@prod+1)^0,f,c
  6487  0020E6  0E00               	movlw	0
  6488  0020E8  223D               	addwfc	(___flmul@prod+2)^0,f,c
  6489  0020EA  0E00               	movlw	0
  6490  0020EC  223E               	addwfc	(___flmul@prod+3)^0,f,c
  6491  0020EE  502D               	movf	(___flmul@a+1)^0,w,c
  6492  0020F0  022A               	mulwf	(___flmul@b+2)^0,c
  6493  0020F2  CFF3 F03F          	movff	prodl,___flmul@temp
  6494  0020F6  CFF4 F040          	movff	prodh,___flmul@temp+1
  6495  0020FA  503F               	movf	___flmul@temp^0,w,c
  6496  0020FC  263B               	addwf	___flmul@prod^0,f,c
  6497  0020FE  5040               	movf	(___flmul@temp+1)^0,w,c
  6498  002100  223C               	addwfc	(___flmul@prod+1)^0,f,c
  6499  002102  0E00               	movlw	0
  6500  002104  223D               	addwfc	(___flmul@prod+2)^0,f,c
  6501  002106  0E00               	movlw	0
  6502  002108  223E               	addwfc	(___flmul@prod+3)^0,f,c
  6503  00210A  502E               	movf	(___flmul@a+2)^0,w,c
  6504  00210C  022A               	mulwf	(___flmul@b+2)^0,c
  6505  00210E  CFF3 F03F          	movff	prodl,___flmul@temp
  6506  002112  CFF4 F040          	movff	prodh,___flmul@temp+1
  6507  002116  503F               	movf	___flmul@temp^0,w,c
  6508  002118  6E30               	movwf	??___flmul^0,c
  6509  00211A  5040               	movf	(___flmul@temp+1)^0,w,c
  6510  00211C  6E31               	movwf	(??___flmul+1)^0,c
  6511  00211E  6A32               	clrf	(??___flmul+2)^0,c
  6512  002120  6A33               	clrf	(??___flmul+3)^0,c
  6513  002122  C032  F033         	movff	??___flmul+2,??___flmul+3
  6514  002126  C031  F032         	movff	??___flmul+1,??___flmul+2
  6515  00212A  C030  F031         	movff	??___flmul,??___flmul+1
  6516  00212E  6A30               	clrf	??___flmul^0,c
  6517  002130  5030               	movf	??___flmul^0,w,c
  6518  002132  263B               	addwf	___flmul@prod^0,f,c
  6519  002134  5031               	movf	(??___flmul+1)^0,w,c
  6520  002136  223C               	addwfc	(___flmul@prod+1)^0,f,c
  6521  002138  5032               	movf	(??___flmul+2)^0,w,c
  6522  00213A  223D               	addwfc	(___flmul@prod+2)^0,f,c
  6523  00213C  5033               	movf	(??___flmul+3)^0,w,c
  6524  00213E  223E               	addwfc	(___flmul@prod+3)^0,f,c
  6525  002140  C035  F030         	movff	___flmul@grs,??___flmul
  6526  002144  C036  F031         	movff	___flmul@grs+1,??___flmul+1
  6527  002148  C037  F032         	movff	___flmul@grs+2,??___flmul+2
  6528  00214C  C038  F033         	movff	___flmul@grs+3,??___flmul+3
  6529  002150  0E19               	movlw	25
  6530  002152  EFB0  F010         	goto	u3990
  6531  002156                     u3995:
  6532  002156  90D8               	bcf	status,0,c
  6533  002158  3233               	rrcf	(??___flmul+3)^0,f,c
  6534  00215A  3232               	rrcf	(??___flmul+2)^0,f,c
  6535  00215C  3231               	rrcf	(??___flmul+1)^0,f,c
  6536  00215E  3230               	rrcf	??___flmul^0,f,c
  6537  002160                     u3990:
  6538  002160  2EE8               	decfsz	wreg,f,c
  6539  002162  EFAB  F010         	goto	u3995
  6540  002166  5030               	movf	??___flmul^0,w,c
  6541  002168  263B               	addwf	___flmul@prod^0,f,c
  6542  00216A  5031               	movf	(??___flmul+1)^0,w,c
  6543  00216C  223C               	addwfc	(___flmul@prod+1)^0,f,c
  6544  00216E  5032               	movf	(??___flmul+2)^0,w,c
  6545  002170  223D               	addwfc	(___flmul@prod+2)^0,f,c
  6546  002172  5033               	movf	(??___flmul+3)^0,w,c
  6547  002174  223E               	addwfc	(___flmul@prod+3)^0,f,c
  6548  002176  C037  F038         	movff	___flmul@grs+2,___flmul@grs+3
  6549  00217A  C036  F037         	movff	___flmul@grs+1,___flmul@grs+2
  6550  00217E  C035  F036         	movff	___flmul@grs,___flmul@grs+1
  6551  002182  6A35               	clrf	___flmul@grs^0,c
  6552  002184  5039               	movf	___flmul@aexp^0,w,c
  6553  002186  C03A  F030         	movff	___flmul@bexp,??___flmul
  6554  00218A  6A31               	clrf	(??___flmul+1)^0,c
  6555  00218C  2630               	addwf	??___flmul^0,f,c
  6556  00218E  0E00               	movlw	0
  6557  002190  2231               	addwfc	(??___flmul+1)^0,f,c
  6558  002192  0E82               	movlw	130
  6559  002194  2430               	addwf	??___flmul^0,w,c
  6560  002196  6E3F               	movwf	___flmul@temp^0,c
  6561  002198  0EFF               	movlw	255
  6562  00219A  2031               	addwfc	(??___flmul+1)^0,w,c
  6563  00219C  6E40               	movwf	(___flmul@temp+1)^0,c
  6564  00219E  EFE6  F010         	goto	l4303
  6565  0021A2                     l4297:
  6566  0021A2  90D8               	bcf	status,0,c
  6567  0021A4  363B               	rlcf	___flmul@prod^0,f,c
  6568  0021A6  363C               	rlcf	(___flmul@prod+1)^0,f,c
  6569  0021A8  363D               	rlcf	(___flmul@prod+2)^0,f,c
  6570  0021AA  363E               	rlcf	(___flmul@prod+3)^0,f,c
  6571  0021AC  AE38               	btfss	(___flmul@grs+3)^0,7,c
  6572  0021AE  EFDB  F010         	goto	u4001
  6573  0021B2  EFDD  F010         	goto	u4000
  6574  0021B6                     u4001:
  6575  0021B6  EFDE  F010         	goto	l1414
  6576  0021BA                     u4000:
  6577  0021BA  803B               	bsf	___flmul@prod^0,0,c
  6578  0021BC                     l1414:
  6579  0021BC  90D8               	bcf	status,0,c
  6580  0021BE  3635               	rlcf	___flmul@grs^0,f,c
  6581  0021C0  3636               	rlcf	(___flmul@grs+1)^0,f,c
  6582  0021C2  3637               	rlcf	(___flmul@grs+2)^0,f,c
  6583  0021C4  3638               	rlcf	(___flmul@grs+3)^0,f,c
  6584  0021C6  063F               	decf	___flmul@temp^0,f,c
  6585  0021C8  A0D8               	btfss	status,0,c
  6586  0021CA  0640               	decf	(___flmul@temp+1)^0,f,c
  6587  0021CC                     l4303:
  6588  0021CC  AE3D               	btfss	(___flmul@prod+2)^0,7,c
  6589  0021CE  EFEB  F010         	goto	u4011
  6590  0021D2  EFED  F010         	goto	u4010
  6591  0021D6                     u4011:
  6592  0021D6  EFD1  F010         	goto	l4297
  6593  0021DA                     u4010:
  6594  0021DA  0E00               	movlw	0
  6595  0021DC  6E39               	movwf	___flmul@aexp^0,c
  6596  0021DE  AE38               	btfss	(___flmul@grs+3)^0,7,c
  6597  0021E0  EFF4  F010         	goto	u4021
  6598  0021E4  EFF6  F010         	goto	u4020
  6599  0021E8                     u4021:
  6600  0021E8  EF1A  F011         	goto	l1416
  6601  0021EC                     u4020:
  6602  0021EC  0EFF               	movlw	255
  6603  0021EE  1435               	andwf	___flmul@grs^0,w,c
  6604  0021F0  6E30               	movwf	??___flmul^0,c
  6605  0021F2  0EFF               	movlw	255
  6606  0021F4  1436               	andwf	(___flmul@grs+1)^0,w,c
  6607  0021F6  6E31               	movwf	(??___flmul+1)^0,c
  6608  0021F8  0EFF               	movlw	255
  6609  0021FA  1437               	andwf	(___flmul@grs+2)^0,w,c
  6610  0021FC  6E32               	movwf	(??___flmul+2)^0,c
  6611  0021FE  0E7F               	movlw	127
  6612  002200  1438               	andwf	(___flmul@grs+3)^0,w,c
  6613  002202  6E33               	movwf	(??___flmul+3)^0,c
  6614  002204  5030               	movf	??___flmul^0,w,c
  6615  002206  1031               	iorwf	(??___flmul+1)^0,w,c
  6616  002208  1032               	iorwf	(??___flmul+2)^0,w,c
  6617  00220A  1033               	iorwf	(??___flmul+3)^0,w,c
  6618  00220C  B4D8               	btfsc	status,2,c
  6619  00220E  EF0B  F011         	goto	u4031
  6620  002212  EF0D  F011         	goto	u4030
  6621  002216                     u4031:
  6622  002216  EF11  F011         	goto	l1417
  6623  00221A                     u4030:
  6624  00221A                     l4311:
  6625  00221A  0E01               	movlw	1
  6626  00221C  6E39               	movwf	___flmul@aexp^0,c
  6627  00221E  EF1A  F011         	goto	l1416
  6628  002222                     l1417:
  6629  002222  A03B               	btfss	___flmul@prod^0,0,c
  6630  002224  EF16  F011         	goto	u4041
  6631  002228  EF18  F011         	goto	u4040
  6632  00222C                     u4041:
  6633  00222C  EF1A  F011         	goto	l1416
  6634  002230                     u4040:
  6635  002230  EF0D  F011         	goto	l4311
  6636  002234                     l1416:
  6637  002234  5039               	movf	___flmul@aexp^0,w,c
  6638  002236  B4D8               	btfsc	status,2,c
  6639  002238  EF20  F011         	goto	u4051
  6640  00223C  EF22  F011         	goto	u4050
  6641  002240                     u4051:
  6642  002240  EF46  F011         	goto	l4323
  6643  002244                     u4050:
  6644  002244  0E01               	movlw	1
  6645  002246  263B               	addwf	___flmul@prod^0,f,c
  6646  002248  0E00               	movlw	0
  6647  00224A  223C               	addwfc	(___flmul@prod+1)^0,f,c
  6648  00224C  223D               	addwfc	(___flmul@prod+2)^0,f,c
  6649  00224E  223E               	addwfc	(___flmul@prod+3)^0,f,c
  6650  002250  A03E               	btfss	(___flmul@prod+3)^0,0,c
  6651  002252  EF2D  F011         	goto	u4061
  6652  002256  EF2F  F011         	goto	u4060
  6653  00225A                     u4061:
  6654  00225A  EF46  F011         	goto	l4323
  6655  00225E                     u4060:
  6656  00225E  C03B  F030         	movff	___flmul@prod,??___flmul
  6657  002262  C03C  F031         	movff	___flmul@prod+1,??___flmul+1
  6658  002266  C03D  F032         	movff	___flmul@prod+2,??___flmul+2
  6659  00226A  C03E  F033         	movff	___flmul@prod+3,??___flmul+3
  6660  00226E  3433               	rlcf	(??___flmul+3)^0,w,c
  6661  002270  3233               	rrcf	(??___flmul+3)^0,f,c
  6662  002272  3232               	rrcf	(??___flmul+2)^0,f,c
  6663  002274  3231               	rrcf	(??___flmul+1)^0,f,c
  6664  002276  3230               	rrcf	??___flmul^0,f,c
  6665  002278  C030  F03B         	movff	??___flmul,___flmul@prod
  6666  00227C  C031  F03C         	movff	??___flmul+1,___flmul@prod+1
  6667  002280  C032  F03D         	movff	??___flmul+2,___flmul@prod+2
  6668  002284  C033  F03E         	movff	??___flmul+3,___flmul@prod+3
  6669  002288  4A3F               	infsnz	___flmul@temp^0,f,c
  6670  00228A  2A40               	incf	(___flmul@temp+1)^0,f,c
  6671  00228C                     l4323:
  6672  00228C  BE40               	btfsc	(___flmul@temp+1)^0,7,c
  6673  00228E  EF51  F011         	goto	u4071
  6674  002292  5040               	movf	(___flmul@temp+1)^0,w,c
  6675  002294  E108               	bnz	u4070
  6676  002296  283F               	incf	___flmul@temp^0,w,c
  6677  002298  A0D8               	btfss	status,0,c
  6678  00229A  EF51  F011         	goto	u4071
  6679  00229E  EF53  F011         	goto	u4070
  6680  0022A2                     u4071:
  6681  0022A2  EF5D  F011         	goto	l4327
  6682  0022A6                     u4070:
  6683  0022A6  0E00               	movlw	0
  6684  0022A8  6E3B               	movwf	___flmul@prod^0,c
  6685  0022AA  0E00               	movlw	0
  6686  0022AC  6E3C               	movwf	(___flmul@prod+1)^0,c
  6687  0022AE  0E80               	movlw	128
  6688  0022B0  6E3D               	movwf	(___flmul@prod+2)^0,c
  6689  0022B2  0E7F               	movlw	127
  6690  0022B4  6E3E               	movwf	(___flmul@prod+3)^0,c
  6691  0022B6  EF8B  F011         	goto	l4339
  6692  0022BA                     l4327:
  6693  0022BA  BE40               	btfsc	(___flmul@temp+1)^0,7,c
  6694  0022BC  EF6A  F011         	goto	u4080
  6695  0022C0  5040               	movf	(___flmul@temp+1)^0,w,c
  6696  0022C2  E106               	bnz	u4081
  6697  0022C4  043F               	decf	___flmul@temp^0,w,c
  6698  0022C6  B0D8               	btfsc	status,0,c
  6699  0022C8  EF68  F011         	goto	u4081
  6700  0022CC  EF6A  F011         	goto	u4080
  6701  0022D0                     u4081:
  6702  0022D0  EF76  F011         	goto	l1424
  6703  0022D4                     u4080:
  6704  0022D4  0E00               	movlw	0
  6705  0022D6  6E3B               	movwf	___flmul@prod^0,c
  6706  0022D8  0E00               	movlw	0
  6707  0022DA  6E3C               	movwf	(___flmul@prod+1)^0,c
  6708  0022DC  0E00               	movlw	0
  6709  0022DE  6E3D               	movwf	(___flmul@prod+2)^0,c
  6710  0022E0  0E00               	movlw	0
  6711  0022E2  6E3E               	movwf	(___flmul@prod+3)^0,c
  6712  0022E4  0E00               	movlw	0
  6713  0022E6  6E34               	movwf	___flmul@sign^0,c
  6714  0022E8  EF8B  F011         	goto	l4339
  6715  0022EC                     l1424:
  6716  0022EC  C03F  F03A         	movff	___flmul@temp,___flmul@bexp
  6717  0022F0  0EFF               	movlw	255
  6718  0022F2  163B               	andwf	___flmul@prod^0,f,c
  6719  0022F4  0EFF               	movlw	255
  6720  0022F6  163C               	andwf	(___flmul@prod+1)^0,f,c
  6721  0022F8  0E7F               	movlw	127
  6722  0022FA  163D               	andwf	(___flmul@prod+2)^0,f,c
  6723  0022FC  0E00               	movlw	0
  6724  0022FE  163E               	andwf	(___flmul@prod+3)^0,f,c
  6725  002300  A03A               	btfss	___flmul@bexp^0,0,c
  6726  002302  EF85  F011         	goto	u4091
  6727  002306  EF87  F011         	goto	u4090
  6728  00230A                     u4091:
  6729  00230A  EF88  F011         	goto	l4337
  6730  00230E                     u4090:
  6731  00230E  8E3D               	bsf	(___flmul@prod+2)^0,7,c
  6732  002310                     l4337:
  6733  002310  90D8               	bcf	status,0,c
  6734  002312  303A               	rrcf	___flmul@bexp^0,w,c
  6735  002314  6E3E               	movwf	(___flmul@prod+3)^0,c
  6736  002316                     l4339:
  6737  002316  5034               	movf	___flmul@sign^0,w,c
  6738  002318  123E               	iorwf	(___flmul@prod+3)^0,f,c
  6739  00231A  C03B  F028         	movff	___flmul@prod,?___flmul
  6740  00231E  C03C  F029         	movff	___flmul@prod+1,?___flmul+1
  6741  002322  C03D  F02A         	movff	___flmul@prod+2,?___flmul+2
  6742  002326  C03E  F02B         	movff	___flmul@prod+3,?___flmul+3
  6743  00232A                     l1411:
  6744  00232A  0012               	return		;funcret
  6745  00232C                     __end_of___flmul:
  6746                           	callstack 0
  6747                           
  6748 ;; *************** function ___flge *****************
  6749 ;; Defined at:
  6750 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\flge.c"
  6751 ;; Parameters:    Size  Location     Type
  6752 ;;  ff1             4    0[COMRAM] unsigned char 
  6753 ;;  ff2             4    4[COMRAM] unsigned char 
  6754 ;; Auto vars:     Size  Location     Type
  6755 ;;		None
  6756 ;; Return value:  Size  Location     Type
  6757 ;;		None               void
  6758 ;; Registers used:
  6759 ;;		wreg, status,2, status,0
  6760 ;; Tracked objects:
  6761 ;;		On entry : 0/0
  6762 ;;		On exit  : 0/0
  6763 ;;		Unchanged: 0/0
  6764 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6765 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6766 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6767 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6768 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6769 ;;Total ram usage:       12 bytes
  6770 ;; Hardware stack levels used: 1
  6771 ;; Hardware stack levels required when called: 1
  6772 ;; This function calls:
  6773 ;;		Nothing
  6774 ;; This function is called by:
  6775 ;;		_roundf
  6776 ;; This function uses a non-reentrant model
  6777 ;;
  6778                           
  6779                           	psect	text24
  6780  004B04                     __ptext24:
  6781                           	callstack 0
  6782  004B04                     ___flge:
  6783                           	callstack 25
  6784  004B04  0E00               	movlw	0
  6785  004B06  1401               	andwf	___flge@ff1^0,w,c
  6786  004B08  6E09               	movwf	??___flge^0,c
  6787  004B0A  0E00               	movlw	0
  6788  004B0C  1402               	andwf	(___flge@ff1+1)^0,w,c
  6789  004B0E  6E0A               	movwf	(??___flge+1)^0,c
  6790  004B10  0E80               	movlw	128
  6791  004B12  1403               	andwf	(___flge@ff1+2)^0,w,c
  6792  004B14  6E0B               	movwf	(??___flge+2)^0,c
  6793  004B16  0E7F               	movlw	127
  6794  004B18  1404               	andwf	(___flge@ff1+3)^0,w,c
  6795  004B1A  6E0C               	movwf	(??___flge+3)^0,c
  6796  004B1C  5009               	movf	??___flge^0,w,c
  6797  004B1E  100A               	iorwf	(??___flge+1)^0,w,c
  6798  004B20  100B               	iorwf	(??___flge+2)^0,w,c
  6799  004B22  100C               	iorwf	(??___flge+3)^0,w,c
  6800  004B24  A4D8               	btfss	status,2,c
  6801  004B26  EF97  F025         	goto	u4101
  6802  004B2A  EF99  F025         	goto	u4100
  6803  004B2E                     u4101:
  6804  004B2E  EFA1  F025         	goto	l4355
  6805  004B32                     u4100:
  6806  004B32  0E00               	movlw	0
  6807  004B34  6E01               	movwf	___flge@ff1^0,c
  6808  004B36  0E00               	movlw	0
  6809  004B38  6E02               	movwf	(___flge@ff1+1)^0,c
  6810  004B3A  0E00               	movlw	0
  6811  004B3C  6E03               	movwf	(___flge@ff1+2)^0,c
  6812  004B3E  0E00               	movlw	0
  6813  004B40  6E04               	movwf	(___flge@ff1+3)^0,c
  6814  004B42                     l4355:
  6815  004B42  0E00               	movlw	0
  6816  004B44  1405               	andwf	___flge@ff2^0,w,c
  6817  004B46  6E09               	movwf	??___flge^0,c
  6818  004B48  0E00               	movlw	0
  6819  004B4A  1406               	andwf	(___flge@ff2+1)^0,w,c
  6820  004B4C  6E0A               	movwf	(??___flge+1)^0,c
  6821  004B4E  0E80               	movlw	128
  6822  004B50  1407               	andwf	(___flge@ff2+2)^0,w,c
  6823  004B52  6E0B               	movwf	(??___flge+2)^0,c
  6824  004B54  0E7F               	movlw	127
  6825  004B56  1408               	andwf	(___flge@ff2+3)^0,w,c
  6826  004B58  6E0C               	movwf	(??___flge+3)^0,c
  6827  004B5A  5009               	movf	??___flge^0,w,c
  6828  004B5C  100A               	iorwf	(??___flge+1)^0,w,c
  6829  004B5E  100B               	iorwf	(??___flge+2)^0,w,c
  6830  004B60  100C               	iorwf	(??___flge+3)^0,w,c
  6831  004B62  A4D8               	btfss	status,2,c
  6832  004B64  EFB6  F025         	goto	u4111
  6833  004B68  EFB8  F025         	goto	u4110
  6834  004B6C                     u4111:
  6835  004B6C  EFC0  F025         	goto	l4359
  6836  004B70                     u4110:
  6837  004B70  0E00               	movlw	0
  6838  004B72  6E05               	movwf	___flge@ff2^0,c
  6839  004B74  0E00               	movlw	0
  6840  004B76  6E06               	movwf	(___flge@ff2+1)^0,c
  6841  004B78  0E00               	movlw	0
  6842  004B7A  6E07               	movwf	(___flge@ff2+2)^0,c
  6843  004B7C  0E00               	movlw	0
  6844  004B7E  6E08               	movwf	(___flge@ff2+3)^0,c
  6845  004B80                     l4359:
  6846  004B80  AE04               	btfss	(___flge@ff1+3)^0,7,c
  6847  004B82  EFC5  F025         	goto	u4121
  6848  004B86  EFC7  F025         	goto	u4120
  6849  004B8A                     u4121:
  6850  004B8A  EFD0  F025         	goto	l4363
  6851  004B8E                     u4120:
  6852  004B8E  6C01               	negf	___flge@ff1^0,c
  6853  004B90  1E02               	comf	(___flge@ff1+1)^0,f,c
  6854  004B92  B0D8               	btfsc	status,0,c
  6855  004B94  2A02               	incf	(___flge@ff1+1)^0,f,c
  6856  004B96  1E03               	comf	(___flge@ff1+2)^0,f,c
  6857  004B98  B0D8               	btfsc	status,0,c
  6858  004B9A  2A03               	incf	(___flge@ff1+2)^0,f,c
  6859  004B9C  0E80               	movlw	128
  6860  004B9E  5604               	subfwb	(___flge@ff1+3)^0,f,c
  6861  004BA0                     l4363:
  6862  004BA0  AE08               	btfss	(___flge@ff2+3)^0,7,c
  6863  004BA2  EFD5  F025         	goto	u4131
  6864  004BA6  EFD7  F025         	goto	u4130
  6865  004BAA                     u4131:
  6866  004BAA  EFE0  F025         	goto	l1058
  6867  004BAE                     u4130:
  6868  004BAE  6C05               	negf	___flge@ff2^0,c
  6869  004BB0  1E06               	comf	(___flge@ff2+1)^0,f,c
  6870  004BB2  B0D8               	btfsc	status,0,c
  6871  004BB4  2A06               	incf	(___flge@ff2+1)^0,f,c
  6872  004BB6  1E07               	comf	(___flge@ff2+2)^0,f,c
  6873  004BB8  B0D8               	btfsc	status,0,c
  6874  004BBA  2A07               	incf	(___flge@ff2+2)^0,f,c
  6875  004BBC  0E80               	movlw	128
  6876  004BBE  5608               	subfwb	(___flge@ff2+3)^0,f,c
  6877  004BC0                     l1058:
  6878  004BC0  0E00               	movlw	0
  6879  004BC2  1A01               	xorwf	___flge@ff1^0,f,c
  6880  004BC4  0E00               	movlw	0
  6881  004BC6  1A02               	xorwf	(___flge@ff1+1)^0,f,c
  6882  004BC8  0E00               	movlw	0
  6883  004BCA  1A03               	xorwf	(___flge@ff1+2)^0,f,c
  6884  004BCC  0E80               	movlw	128
  6885  004BCE  1A04               	xorwf	(___flge@ff1+3)^0,f,c
  6886  004BD0  0E00               	movlw	0
  6887  004BD2  1A05               	xorwf	___flge@ff2^0,f,c
  6888  004BD4  0E00               	movlw	0
  6889  004BD6  1A06               	xorwf	(___flge@ff2+1)^0,f,c
  6890  004BD8  0E00               	movlw	0
  6891  004BDA  1A07               	xorwf	(___flge@ff2+2)^0,f,c
  6892  004BDC  0E80               	movlw	128
  6893  004BDE  1A08               	xorwf	(___flge@ff2+3)^0,f,c
  6894  004BE0  5005               	movf	___flge@ff2^0,w,c
  6895  004BE2  5C01               	subwf	___flge@ff1^0,w,c
  6896  004BE4  5006               	movf	(___flge@ff2+1)^0,w,c
  6897  004BE6  5802               	subwfb	(___flge@ff1+1)^0,w,c
  6898  004BE8  5007               	movf	(___flge@ff2+2)^0,w,c
  6899  004BEA  5803               	subwfb	(___flge@ff1+2)^0,w,c
  6900  004BEC  5008               	movf	(___flge@ff2+3)^0,w,c
  6901  004BEE  5804               	subwfb	(___flge@ff1+3)^0,w,c
  6902  004BF0  B0D8               	btfsc	status,0,c
  6903  004BF2  EFFD  F025         	goto	u4141
  6904  004BF6  EFFF  F025         	goto	u4140
  6905  004BFA                     u4141:
  6906  004BFA  EF02  F026         	goto	l4369
  6907  004BFE                     u4140:
  6908  004BFE  90D8               	bcf	status,0,c
  6909  004C00  EF03  F026         	goto	l1063
  6910  004C04                     l4369:
  6911  004C04  80D8               	bsf	status,0,c
  6912  004C06                     l1063:
  6913  004C06  0012               	return		;funcret
  6914  004C08                     __end_of___flge:
  6915                           	callstack 0
  6916                           
  6917 ;; *************** function ___fltol *****************
  6918 ;; Defined at:
  6919 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\fltol.c"
  6920 ;; Parameters:    Size  Location     Type
  6921 ;;  f1              4   90[COMRAM] unsigned char 
  6922 ;; Auto vars:     Size  Location     Type
  6923 ;;  exp1            1    5[BANK0 ] unsigned char 
  6924 ;;  sign1           1    4[BANK0 ] unsigned char 
  6925 ;; Return value:  Size  Location     Type
  6926 ;;                  4   90[COMRAM] long 
  6927 ;; Registers used:
  6928 ;;		wreg, status,2, status,0
  6929 ;; Tracked objects:
  6930 ;;		On entry : 0/0
  6931 ;;		On exit  : 0/0
  6932 ;;		Unchanged: 0/0
  6933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6934 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6935 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6936 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6937 ;;      Totals:         4       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6938 ;;Total ram usage:       10 bytes
  6939 ;; Hardware stack levels used: 1
  6940 ;; Hardware stack levels required when called: 1
  6941 ;; This function calls:
  6942 ;;		Nothing
  6943 ;; This function is called by:
  6944 ;;		_lroundf
  6945 ;; This function uses a non-reentrant model
  6946 ;;
  6947                           
  6948                           	psect	text25
  6949  0049FC                     __ptext25:
  6950                           	callstack 0
  6951  0049FC                     ___fltol:
  6952                           	callstack 26
  6953  0049FC  345D               	rlcf	(___fltol@f1+2)^0,w,c
  6954  0049FE  345E               	rlcf	(___fltol@f1+3)^0,w,c
  6955  004A00  0100               	movlb	0	; () banked
  6956  004A02  6F65               	movwf	___fltol@exp1& (0+255),b
  6957  004A04  5165               	movf	___fltol@exp1& (0+255),w,b
  6958  004A06  A4D8               	btfss	status,2,c
  6959  004A08  EF08  F025         	goto	u4201
  6960  004A0C  EF0A  F025         	goto	u4200
  6961  004A10                     u4201:
  6962  004A10  EF14  F025         	goto	l4457
  6963  004A14                     u4200:
  6964  004A14                     l4453:
  6965                           
  6966                           ; BSR set to: 0
  6967  004A14  0E00               	movlw	0
  6968  004A16  6E5B               	movwf	?___fltol^0,c
  6969  004A18  0E00               	movlw	0
  6970  004A1A  6E5C               	movwf	(?___fltol+1)^0,c
  6971  004A1C  0E00               	movlw	0
  6972  004A1E  6E5D               	movwf	(?___fltol+2)^0,c
  6973  004A20  0E00               	movlw	0
  6974  004A22  6E5E               	movwf	(?___fltol+3)^0,c
  6975  004A24  EF81  F025         	goto	l1090
  6976  004A28                     l4457:
  6977                           
  6978                           ; BSR set to: 0
  6979  004A28  C05B  F060         	movff	___fltol@f1,??___fltol
  6980  004A2C  C05C  F061         	movff	___fltol@f1+1,??___fltol+1
  6981  004A30  C05D  F062         	movff	___fltol@f1+2,??___fltol+2
  6982  004A34  C05E  F063         	movff	___fltol@f1+3,??___fltol+3
  6983  004A38  0E20               	movlw	32
  6984  004A3A  EF24  F025         	goto	u4210
  6985  004A3E                     u4215:
  6986  004A3E  90D8               	bcf	status,0,c
  6987  004A40  3363               	rrcf	(??___fltol+3)& (0+255),f,b
  6988  004A42  3362               	rrcf	(??___fltol+2)& (0+255),f,b
  6989  004A44  3361               	rrcf	(??___fltol+1)& (0+255),f,b
  6990  004A46  3360               	rrcf	??___fltol& (0+255),f,b
  6991  004A48                     u4210:
  6992  004A48  2EE8               	decfsz	wreg,f,c
  6993  004A4A  EF1F  F025         	goto	u4215
  6994  004A4E  5160               	movf	??___fltol& (0+255),w,b
  6995  004A50  6F64               	movwf	___fltol@sign1& (0+255),b
  6996  004A52                     
  6997                           ; BSR set to: 0
  6998  004A52  8E5D               	bsf	(___fltol@f1+2)^0,7,c
  6999  004A54                     
  7000                           ; BSR set to: 0
  7001  004A54  0EFF               	movlw	255
  7002  004A56  165B               	andwf	___fltol@f1^0,f,c
  7003  004A58  0EFF               	movlw	255
  7004  004A5A  165C               	andwf	(___fltol@f1+1)^0,f,c
  7005  004A5C  0EFF               	movlw	255
  7006  004A5E  165D               	andwf	(___fltol@f1+2)^0,f,c
  7007  004A60  0E00               	movlw	0
  7008  004A62  165E               	andwf	(___fltol@f1+3)^0,f,c
  7009  004A64                     
  7010                           ; BSR set to: 0
  7011  004A64  0E96               	movlw	150
  7012  004A66  5F65               	subwf	___fltol@exp1& (0+255),f,b
  7013  004A68                     
  7014                           ; BSR set to: 0
  7015  004A68  BF65               	btfsc	___fltol@exp1& (0+255),7,b
  7016  004A6A  EF3B  F025         	goto	u4220
  7017  004A6E  EF39  F025         	goto	u4221
  7018  004A72                     u4221:
  7019  004A72  EF51  F025         	goto	l4477
  7020  004A76                     u4220:
  7021  004A76                     
  7022                           ; BSR set to: 0
  7023  004A76  5165               	movf	___fltol@exp1& (0+255),w,b
  7024  004A78  0A80               	xorlw	128
  7025  004A7A  0F97               	addlw	151
  7026  004A7C  B0D8               	btfsc	status,0,c
  7027  004A7E  EF43  F025         	goto	u4231
  7028  004A82  EF45  F025         	goto	u4230
  7029  004A86                     u4231:
  7030  004A86  EF47  F025         	goto	l4473
  7031  004A8A                     u4230:
  7032  004A8A  EF0A  F025         	goto	l4453
  7033  004A8E                     l4473:
  7034                           
  7035                           ; BSR set to: 0
  7036  004A8E  90D8               	bcf	status,0,c
  7037  004A90  325E               	rrcf	(___fltol@f1+3)^0,f,c
  7038  004A92  325D               	rrcf	(___fltol@f1+2)^0,f,c
  7039  004A94  325C               	rrcf	(___fltol@f1+1)^0,f,c
  7040  004A96  325B               	rrcf	___fltol@f1^0,f,c
  7041  004A98                     
  7042                           ; BSR set to: 0
  7043  004A98  3F65               	incfsz	___fltol@exp1& (0+255),f,b
  7044  004A9A  EF47  F025         	goto	l4473
  7045  004A9E  EF69  F025         	goto	l4487
  7046  004AA2                     l4477:
  7047                           
  7048                           ; BSR set to: 0
  7049  004AA2  0E1F               	movlw	31
  7050  004AA4  6565               	cpfsgt	___fltol@exp1& (0+255),b
  7051  004AA6  EF57  F025         	goto	u4241
  7052  004AAA  EF59  F025         	goto	u4240
  7053  004AAE                     u4241:
  7054  004AAE  EF61  F025         	goto	l4485
  7055  004AB2                     u4240:
  7056  004AB2  EF0A  F025         	goto	l4453
  7057  004AB6                     l4483:
  7058                           
  7059                           ; BSR set to: 0
  7060  004AB6  90D8               	bcf	status,0,c
  7061  004AB8  365B               	rlcf	___fltol@f1^0,f,c
  7062  004ABA  365C               	rlcf	(___fltol@f1+1)^0,f,c
  7063  004ABC  365D               	rlcf	(___fltol@f1+2)^0,f,c
  7064  004ABE  365E               	rlcf	(___fltol@f1+3)^0,f,c
  7065  004AC0  0765               	decf	___fltol@exp1& (0+255),f,b
  7066  004AC2                     l4485:
  7067                           
  7068                           ; BSR set to: 0
  7069  004AC2  5165               	movf	___fltol@exp1& (0+255),w,b
  7070  004AC4  A4D8               	btfss	status,2,c
  7071  004AC6  EF67  F025         	goto	u4251
  7072  004ACA  EF69  F025         	goto	u4250
  7073  004ACE                     u4251:
  7074  004ACE  EF5B  F025         	goto	l4483
  7075  004AD2                     u4250:
  7076  004AD2                     l4487:
  7077                           
  7078                           ; BSR set to: 0
  7079  004AD2  5164               	movf	___fltol@sign1& (0+255),w,b
  7080  004AD4  B4D8               	btfsc	status,2,c
  7081  004AD6  EF6F  F025         	goto	u4261
  7082  004ADA  EF71  F025         	goto	u4260
  7083  004ADE                     u4261:
  7084  004ADE  EF79  F025         	goto	l4491
  7085  004AE2                     u4260:
  7086  004AE2                     
  7087                           ; BSR set to: 0
  7088  004AE2  1E5E               	comf	(___fltol@f1+3)^0,f,c
  7089  004AE4  1E5D               	comf	(___fltol@f1+2)^0,f,c
  7090  004AE6  1E5C               	comf	(___fltol@f1+1)^0,f,c
  7091  004AE8  6C5B               	negf	___fltol@f1^0,c
  7092  004AEA  0E00               	movlw	0
  7093  004AEC  225C               	addwfc	(___fltol@f1+1)^0,f,c
  7094  004AEE  225D               	addwfc	(___fltol@f1+2)^0,f,c
  7095  004AF0  225E               	addwfc	(___fltol@f1+3)^0,f,c
  7096  004AF2                     l4491:
  7097                           
  7098                           ; BSR set to: 0
  7099  004AF2  C05B  F05B         	movff	___fltol@f1,?___fltol
  7100  004AF6  C05C  F05C         	movff	___fltol@f1+1,?___fltol+1
  7101  004AFA  C05D  F05D         	movff	___fltol@f1+2,?___fltol+2
  7102  004AFE  C05E  F05E         	movff	___fltol@f1+3,?___fltol+3
  7103  004B02                     l1090:
  7104                           
  7105                           ; BSR set to: 0
  7106  004B02  0012               	return		;funcret
  7107  004B04                     __end_of___fltol:
  7108                           	callstack 0
  7109                           
  7110 ;; *************** function _color_read_Clear *****************
  7111 ;; Defined at:
  7112 ;;		line 133 in file "color.c"
  7113 ;; Parameters:    Size  Location     Type
  7114 ;;		None
  7115 ;; Auto vars:     Size  Location     Type
  7116 ;;  tmp             2    9[COMRAM] unsigned int 
  7117 ;; Return value:  Size  Location     Type
  7118 ;;                  2    4[COMRAM] unsigned int 
  7119 ;; Registers used:
  7120 ;;		wreg, status,2, status,0, cstack
  7121 ;; Tracked objects:
  7122 ;;		On entry : 0/0
  7123 ;;		On exit  : 0/0
  7124 ;;		Unchanged: 0/0
  7125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7126 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7127 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7128 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7129 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7130 ;;Total ram usage:        7 bytes
  7131 ;; Hardware stack levels used: 1
  7132 ;; Hardware stack levels required when called: 3
  7133 ;; This function calls:
  7134 ;;		_I2C_2_Master_Read
  7135 ;;		_I2C_2_Master_RepStart
  7136 ;;		_I2C_2_Master_Start
  7137 ;;		_I2C_2_Master_Stop
  7138 ;;		_I2C_2_Master_Write
  7139 ;; This function is called by:
  7140 ;;		_read_color
  7141 ;;		_calibrate_white
  7142 ;;		_amb_light_measure
  7143 ;;		_distance_measure
  7144 ;; This function uses a non-reentrant model
  7145 ;;
  7146                           
  7147                           	psect	text26
  7148  005560                     __ptext26:
  7149                           	callstack 0
  7150  005560                     _color_read_Clear:
  7151                           	callstack 24
  7152  005560                     
  7153                           ;color.c: 135:  unsigned int tmp;;color.c: 136:  I2C_2_Master_Start();
  7154  005560  EC90  F02D         	call	_I2C_2_Master_Start	;wreg free
  7155                           
  7156                           ;color.c: 137:  I2C_2_Master_Write(0x52 | 0x00);
  7157  005564  0E52               	movlw	82
  7158  005566  EC7A  F02D         	call	_I2C_2_Master_Write
  7159                           
  7160                           ;color.c: 138:  I2C_2_Master_Write(0xA0 | 0x14);
  7161  00556A  0EB4               	movlw	180
  7162  00556C  EC7A  F02D         	call	_I2C_2_Master_Write
  7163                           
  7164                           ;color.c: 139:  I2C_2_Master_RepStart();
  7165  005570  EC86  F02D         	call	_I2C_2_Master_RepStart	;wreg free
  7166                           
  7167                           ;color.c: 140:  I2C_2_Master_Write(0x52 | 0x01);
  7168  005574  0E53               	movlw	83
  7169  005576  EC7A  F02D         	call	_I2C_2_Master_Write
  7170                           
  7171                           ;color.c: 141:  tmp=I2C_2_Master_Read(1);
  7172  00557A  0E01               	movlw	1
  7173  00557C  EC1D  F02B         	call	_I2C_2_Master_Read
  7174  005580  6E07               	movwf	??_color_read_Clear^0,c
  7175  005582  5007               	movf	??_color_read_Clear^0,w,c
  7176  005584  6E0A               	movwf	color_read_Clear@tmp^0,c
  7177  005586  6A0B               	clrf	(color_read_Clear@tmp+1)^0,c
  7178                           
  7179                           ;color.c: 142:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  7180  005588  0E00               	movlw	0
  7181  00558A  EC1D  F02B         	call	_I2C_2_Master_Read
  7182  00558E  6E07               	movwf	??_color_read_Clear^0,c
  7183  005590  5007               	movf	??_color_read_Clear^0,w,c
  7184  005592  6E09               	movwf	(??_color_read_Clear+2)^0,c
  7185  005594  6A08               	clrf	(??_color_read_Clear+1)^0,c
  7186  005596  500A               	movf	color_read_Clear@tmp^0,w,c
  7187  005598  1008               	iorwf	(??_color_read_Clear+1)^0,w,c
  7188  00559A  6E0A               	movwf	color_read_Clear@tmp^0,c
  7189  00559C  500B               	movf	(color_read_Clear@tmp+1)^0,w,c
  7190  00559E  1009               	iorwf	(??_color_read_Clear+2)^0,w,c
  7191  0055A0  6E0B               	movwf	(color_read_Clear@tmp+1)^0,c
  7192                           
  7193                           ;color.c: 143:  I2C_2_Master_Stop();
  7194  0055A2  EC8B  F02D         	call	_I2C_2_Master_Stop	;wreg free
  7195  0055A6                     
  7196                           ;color.c: 144:  return tmp;
  7197  0055A6  C00A  F005         	movff	color_read_Clear@tmp,?_color_read_Clear
  7198  0055AA  C00B  F006         	movff	color_read_Clear@tmp+1,?_color_read_Clear+1
  7199  0055AE  0012               	return		;funcret
  7200  0055B0                     __end_of_color_read_Clear:
  7201                           	callstack 0
  7202                           
  7203 ;; *************** function _I2C_2_Master_RepStart *****************
  7204 ;; Defined at:
  7205 ;;		line 33 in file "i2c.c"
  7206 ;; Parameters:    Size  Location     Type
  7207 ;;		None
  7208 ;; Auto vars:     Size  Location     Type
  7209 ;;		None
  7210 ;; Return value:  Size  Location     Type
  7211 ;;                  1    wreg      void 
  7212 ;; Registers used:
  7213 ;;		wreg, status,2, status,0, cstack
  7214 ;; Tracked objects:
  7215 ;;		On entry : 0/0
  7216 ;;		On exit  : 0/0
  7217 ;;		Unchanged: 0/0
  7218 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7219 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7220 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7221 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7222 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7223 ;;Total ram usage:        0 bytes
  7224 ;; Hardware stack levels used: 1
  7225 ;; Hardware stack levels required when called: 2
  7226 ;; This function calls:
  7227 ;;		_I2C_2_Master_Idle
  7228 ;; This function is called by:
  7229 ;;		_color_read_Red
  7230 ;;		_color_read_Blue
  7231 ;;		_color_read_Green
  7232 ;;		_color_read_Clear
  7233 ;; This function uses a non-reentrant model
  7234 ;;
  7235                           
  7236                           	psect	text27
  7237  005B0C                     __ptext27:
  7238                           	callstack 0
  7239  005B0C                     _I2C_2_Master_RepStart:
  7240                           	callstack 24
  7241  005B0C                     
  7242                           ;i2c.c: 35:   I2C_2_Master_Idle();
  7243  005B0C  ECAE  F02C         	call	_I2C_2_Master_Idle	;wreg free
  7244  005B10                     
  7245                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  7246  005B10  010E               	movlb	14	; () banked
  7247  005B12  83DA               	bsf	218,1,b	;volatile
  7248  005B14                     
  7249                           ; BSR set to: 14
  7250  005B14  0012               	return		;funcret
  7251  005B16                     __end_of_I2C_2_Master_RepStart:
  7252                           	callstack 0
  7253                           
  7254 ;; *************** function _I2C_2_Master_Read *****************
  7255 ;; Defined at:
  7256 ;;		line 51 in file "i2c.c"
  7257 ;; Parameters:    Size  Location     Type
  7258 ;;  ack             1    wreg     unsigned char 
  7259 ;; Auto vars:     Size  Location     Type
  7260 ;;  ack             1    2[COMRAM] unsigned char 
  7261 ;;  tmp             1    3[COMRAM] unsigned char 
  7262 ;; Return value:  Size  Location     Type
  7263 ;;                  1    wreg      unsigned char 
  7264 ;; Registers used:
  7265 ;;		wreg, status,2, status,0, cstack
  7266 ;; Tracked objects:
  7267 ;;		On entry : 0/0
  7268 ;;		On exit  : 0/0
  7269 ;;		Unchanged: 0/0
  7270 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7271 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7272 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7273 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7274 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7275 ;;Total ram usage:        3 bytes
  7276 ;; Hardware stack levels used: 1
  7277 ;; Hardware stack levels required when called: 2
  7278 ;; This function calls:
  7279 ;;		_I2C_2_Master_Idle
  7280 ;; This function is called by:
  7281 ;;		_color_read_Red
  7282 ;;		_color_read_Blue
  7283 ;;		_color_read_Green
  7284 ;;		_color_read_Clear
  7285 ;; This function uses a non-reentrant model
  7286 ;;
  7287                           
  7288                           	psect	text28
  7289  00563A                     __ptext28:
  7290                           	callstack 0
  7291  00563A                     _I2C_2_Master_Read:
  7292                           	callstack 24
  7293                           
  7294                           ; BSR set to: 14
  7295                           ;incstack = 0
  7296                           ;I2C_2_Master_Read@ack stored from wreg
  7297  00563A  6E03               	movwf	I2C_2_Master_Read@ack^0,c
  7298  00563C                     
  7299                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  7300  00563C  ECAE  F02C         	call	_I2C_2_Master_Idle	;wreg free
  7301  005640                     
  7302                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  7303  005640  010E               	movlb	14	; () banked
  7304  005642  87DA               	bsf	218,3,b	;volatile
  7305                           
  7306                           ;i2c.c: 56:   I2C_2_Master_Idle();
  7307  005644  ECAE  F02C         	call	_I2C_2_Master_Idle	;wreg free
  7308  005648                     
  7309                           ;i2c.c: 57:   tmp = SSP2BUF;
  7310  005648  CED5 F004          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  7311                           
  7312                           ;i2c.c: 58:   I2C_2_Master_Idle();
  7313  00564C  ECAE  F02C         	call	_I2C_2_Master_Idle	;wreg free
  7314  005650                     
  7315                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  7316  005650  5003               	movf	I2C_2_Master_Read@ack^0,w,c
  7317  005652  B4D8               	btfsc	status,2,c
  7318  005654  EF2E  F02B         	goto	u3841
  7319  005658  EF32  F02B         	goto	u3840
  7320  00565C                     u3841:
  7321  00565C  6A02               	clrf	??_I2C_2_Master_Read^0,c
  7322  00565E  2A02               	incf	??_I2C_2_Master_Read^0,f,c
  7323  005660  EF33  F02B         	goto	u3858
  7324  005664                     u3840:
  7325  005664  6A02               	clrf	??_I2C_2_Master_Read^0,c
  7326  005666                     u3858:
  7327  005666  3A02               	swapf	??_I2C_2_Master_Read^0,f,c
  7328  005668  4602               	rlncf	??_I2C_2_Master_Read^0,f,c
  7329  00566A  010E               	movlb	14	; () banked
  7330  00566C  51DA               	movf	218,w,b	;volatile
  7331  00566E  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  7332  005670  0BDF               	andlw	-33
  7333  005672  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  7334  005674  6FDA               	movwf	218,b	;volatile
  7335  005676                     
  7336                           ; BSR set to: 14
  7337                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  7338  005676  89DA               	bsf	218,4,b	;volatile
  7339  005678                     
  7340                           ; BSR set to: 14
  7341                           ;i2c.c: 61:   return tmp;
  7342  005678  5004               	movf	I2C_2_Master_Read@tmp^0,w,c
  7343  00567A                     
  7344                           ; BSR set to: 14
  7345  00567A  0012               	return		;funcret
  7346  00567C                     __end_of_I2C_2_Master_Read:
  7347                           	callstack 0
  7348                           
  7349 ;; *************** function ___xxtofl *****************
  7350 ;; Defined at:
  7351 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\xxtofl.c"
  7352 ;; Parameters:    Size  Location     Type
  7353 ;;  sign            1    wreg     unsigned char 
  7354 ;;  val             4    0[COMRAM] long 
  7355 ;; Auto vars:     Size  Location     Type
  7356 ;;  sign            1    8[COMRAM] unsigned char 
  7357 ;;  arg             4   10[COMRAM] unsigned long 
  7358 ;;  exp             1    9[COMRAM] unsigned char 
  7359 ;; Return value:  Size  Location     Type
  7360 ;;                  4    0[COMRAM] unsigned char 
  7361 ;; Registers used:
  7362 ;;		wreg, status,2, status,0
  7363 ;; Tracked objects:
  7364 ;;		On entry : 0/0
  7365 ;;		On exit  : 0/0
  7366 ;;		Unchanged: 0/0
  7367 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7368 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7369 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7370 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7371 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7372 ;;Total ram usage:       14 bytes
  7373 ;; Hardware stack levels used: 1
  7374 ;; Hardware stack levels required when called: 1
  7375 ;; This function calls:
  7376 ;;		Nothing
  7377 ;; This function is called by:
  7378 ;;		_detect_color
  7379 ;;		_amb_light_measure
  7380 ;;		_distance_measure
  7381 ;;		_check_color_reading
  7382 ;; This function uses a non-reentrant model
  7383 ;;
  7384                           
  7385                           	psect	text29
  7386  003C44                     __ptext29:
  7387                           	callstack 0
  7388  003C44                     ___xxtofl:
  7389                           	callstack 27
  7390                           
  7391                           ; BSR set to: 14
  7392                           ;incstack = 0
  7393                           ;___xxtofl@sign stored from wreg
  7394  003C44  6E09               	movwf	___xxtofl@sign^0,c
  7395  003C46  5009               	movf	___xxtofl@sign^0,w,c
  7396  003C48  B4D8               	btfsc	status,2,c
  7397  003C4A  EF29  F01E         	goto	u5031
  7398  003C4E  EF2B  F01E         	goto	u5030
  7399  003C52                     u5031:
  7400  003C52  EF4D  F01E         	goto	l1448
  7401  003C56                     u5030:
  7402  003C56  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  7403  003C58  EF32  F01E         	goto	u5040
  7404  003C5C  EF30  F01E         	goto	u5041
  7405  003C60                     u5041:
  7406  003C60  EF4D  F01E         	goto	l1448
  7407  003C64                     u5040:
  7408  003C64  C001  F005         	movff	___xxtofl@val,??___xxtofl
  7409  003C68  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
  7410  003C6C  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
  7411  003C70  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
  7412  003C74  1E05               	comf	??___xxtofl^0,f,c
  7413  003C76  1E06               	comf	(??___xxtofl+1)^0,f,c
  7414  003C78  1E07               	comf	(??___xxtofl+2)^0,f,c
  7415  003C7A  1E08               	comf	(??___xxtofl+3)^0,f,c
  7416  003C7C  2A05               	incf	??___xxtofl^0,f,c
  7417  003C7E  0E00               	movlw	0
  7418  003C80  2206               	addwfc	(??___xxtofl+1)^0,f,c
  7419  003C82  2207               	addwfc	(??___xxtofl+2)^0,f,c
  7420  003C84  2208               	addwfc	(??___xxtofl+3)^0,f,c
  7421  003C86  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
  7422  003C8A  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
  7423  003C8E  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
  7424  003C92  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
  7425  003C96  EF55  F01E         	goto	l4869
  7426  003C9A                     l1448:
  7427  003C9A  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
  7428  003C9E  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  7429  003CA2  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  7430  003CA6  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  7431  003CAA                     l4869:
  7432  003CAA  5001               	movf	___xxtofl@val^0,w,c
  7433  003CAC  1002               	iorwf	(___xxtofl@val+1)^0,w,c
  7434  003CAE  1003               	iorwf	(___xxtofl@val+2)^0,w,c
  7435  003CB0  1004               	iorwf	(___xxtofl@val+3)^0,w,c
  7436  003CB2  A4D8               	btfss	status,2,c
  7437  003CB4  EF5E  F01E         	goto	u5051
  7438  003CB8  EF60  F01E         	goto	u5050
  7439  003CBC                     u5051:
  7440  003CBC  EF6A  F01E         	goto	l4875
  7441  003CC0                     u5050:
  7442  003CC0  0E00               	movlw	0
  7443  003CC2  6E01               	movwf	?___xxtofl^0,c
  7444  003CC4  0E00               	movlw	0
  7445  003CC6  6E02               	movwf	(?___xxtofl+1)^0,c
  7446  003CC8  0E00               	movlw	0
  7447  003CCA  6E03               	movwf	(?___xxtofl+2)^0,c
  7448  003CCC  0E00               	movlw	0
  7449  003CCE  6E04               	movwf	(?___xxtofl+3)^0,c
  7450  003CD0  EFFB  F01E         	goto	l1451
  7451  003CD4                     l4875:
  7452  003CD4  0E96               	movlw	150
  7453  003CD6  6E0A               	movwf	___xxtofl@exp^0,c
  7454  003CD8  EF74  F01E         	goto	l4879
  7455  003CDC                     l4877:
  7456  003CDC  2A0A               	incf	___xxtofl@exp^0,f,c
  7457  003CDE  90D8               	bcf	status,0,c
  7458  003CE0  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  7459  003CE2  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  7460  003CE4  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  7461  003CE6  320B               	rrcf	___xxtofl@arg^0,f,c
  7462  003CE8                     l4879:
  7463  003CE8  0E00               	movlw	0
  7464  003CEA  140B               	andwf	___xxtofl@arg^0,w,c
  7465  003CEC  6E05               	movwf	??___xxtofl^0,c
  7466  003CEE  0E00               	movlw	0
  7467  003CF0  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  7468  003CF2  6E06               	movwf	(??___xxtofl+1)^0,c
  7469  003CF4  0E00               	movlw	0
  7470  003CF6  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  7471  003CF8  6E07               	movwf	(??___xxtofl+2)^0,c
  7472  003CFA  0EFE               	movlw	254
  7473  003CFC  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  7474  003CFE  6E08               	movwf	(??___xxtofl+3)^0,c
  7475  003D00  5005               	movf	??___xxtofl^0,w,c
  7476  003D02  1006               	iorwf	(??___xxtofl+1)^0,w,c
  7477  003D04  1007               	iorwf	(??___xxtofl+2)^0,w,c
  7478  003D06  1008               	iorwf	(??___xxtofl+3)^0,w,c
  7479  003D08  A4D8               	btfss	status,2,c
  7480  003D0A  EF89  F01E         	goto	u5061
  7481  003D0E  EF8B  F01E         	goto	u5060
  7482  003D12                     u5061:
  7483  003D12  EF6E  F01E         	goto	l4877
  7484  003D16                     u5060:
  7485  003D16  EF99  F01E         	goto	l1455
  7486  003D1A                     l4881:
  7487  003D1A  2A0A               	incf	___xxtofl@exp^0,f,c
  7488  003D1C  0E01               	movlw	1
  7489  003D1E  260B               	addwf	___xxtofl@arg^0,f,c
  7490  003D20  0E00               	movlw	0
  7491  003D22  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
  7492  003D24  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
  7493  003D26  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
  7494  003D28  90D8               	bcf	status,0,c
  7495  003D2A  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  7496  003D2C  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  7497  003D2E  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  7498  003D30  320B               	rrcf	___xxtofl@arg^0,f,c
  7499  003D32                     l1455:
  7500  003D32  0E00               	movlw	0
  7501  003D34  140B               	andwf	___xxtofl@arg^0,w,c
  7502  003D36  6E05               	movwf	??___xxtofl^0,c
  7503  003D38  0E00               	movlw	0
  7504  003D3A  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  7505  003D3C  6E06               	movwf	(??___xxtofl+1)^0,c
  7506  003D3E  0E00               	movlw	0
  7507  003D40  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  7508  003D42  6E07               	movwf	(??___xxtofl+2)^0,c
  7509  003D44  0EFF               	movlw	255
  7510  003D46  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  7511  003D48  6E08               	movwf	(??___xxtofl+3)^0,c
  7512  003D4A  5005               	movf	??___xxtofl^0,w,c
  7513  003D4C  1006               	iorwf	(??___xxtofl+1)^0,w,c
  7514  003D4E  1007               	iorwf	(??___xxtofl+2)^0,w,c
  7515  003D50  1008               	iorwf	(??___xxtofl+3)^0,w,c
  7516  003D52  A4D8               	btfss	status,2,c
  7517  003D54  EFAE  F01E         	goto	u5071
  7518  003D58  EFB0  F01E         	goto	u5070
  7519  003D5C                     u5071:
  7520  003D5C  EF8D  F01E         	goto	l4881
  7521  003D60                     u5070:
  7522  003D60  EFB8  F01E         	goto	l4889
  7523  003D64                     l4887:
  7524  003D64  060A               	decf	___xxtofl@exp^0,f,c
  7525  003D66  90D8               	bcf	status,0,c
  7526  003D68  360B               	rlcf	___xxtofl@arg^0,f,c
  7527  003D6A  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
  7528  003D6C  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
  7529  003D6E  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
  7530  003D70                     l4889:
  7531  003D70  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
  7532  003D72  EFBD  F01E         	goto	u5081
  7533  003D76  EFBF  F01E         	goto	u5080
  7534  003D7A                     u5081:
  7535  003D7A  EFC7  F01E         	goto	l1462
  7536  003D7E                     u5080:
  7537  003D7E  0E02               	movlw	2
  7538  003D80  600A               	cpfslt	___xxtofl@exp^0,c
  7539  003D82  EFC5  F01E         	goto	u5091
  7540  003D86  EFC7  F01E         	goto	u5090
  7541  003D8A                     u5091:
  7542  003D8A  EFB2  F01E         	goto	l4887
  7543  003D8E                     u5090:
  7544  003D8E                     l1462:
  7545  003D8E  B00A               	btfsc	___xxtofl@exp^0,0,c
  7546  003D90  EFCC  F01E         	goto	u5101
  7547  003D94  EFCE  F01E         	goto	u5100
  7548  003D98                     u5101:
  7549  003D98  EFCF  F01E         	goto	l4895
  7550  003D9C                     u5100:
  7551  003D9C  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
  7552  003D9E                     l4895:
  7553  003D9E  90D8               	bcf	status,0,c
  7554  003DA0  320A               	rrcf	___xxtofl@exp^0,f,c
  7555  003DA2  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
  7556  003DA6  6A06               	clrf	(??___xxtofl+1)^0,c
  7557  003DA8  6A07               	clrf	(??___xxtofl+2)^0,c
  7558  003DAA  6A08               	clrf	(??___xxtofl+3)^0,c
  7559  003DAC  C005  F008         	movff	??___xxtofl,??___xxtofl+3
  7560  003DB0  6A07               	clrf	(??___xxtofl+2)^0,c
  7561  003DB2  6A06               	clrf	(??___xxtofl+1)^0,c
  7562  003DB4  6A05               	clrf	??___xxtofl^0,c
  7563  003DB6  5005               	movf	??___xxtofl^0,w,c
  7564  003DB8  120B               	iorwf	___xxtofl@arg^0,f,c
  7565  003DBA  5006               	movf	(??___xxtofl+1)^0,w,c
  7566  003DBC  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
  7567  003DBE  5007               	movf	(??___xxtofl+2)^0,w,c
  7568  003DC0  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
  7569  003DC2  5008               	movf	(??___xxtofl+3)^0,w,c
  7570  003DC4  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
  7571  003DC6  5009               	movf	___xxtofl@sign^0,w,c
  7572  003DC8  B4D8               	btfsc	status,2,c
  7573  003DCA  EFE9  F01E         	goto	u5111
  7574  003DCE  EFEB  F01E         	goto	u5110
  7575  003DD2                     u5111:
  7576  003DD2  EFF3  F01E         	goto	l4905
  7577  003DD6                     u5110:
  7578  003DD6  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  7579  003DD8  EFF2  F01E         	goto	u5120
  7580  003DDC  EFF0  F01E         	goto	u5121
  7581  003DE0                     u5121:
  7582  003DE0  EFF3  F01E         	goto	l4905
  7583  003DE4                     u5120:
  7584  003DE4  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
  7585  003DE6                     l4905:
  7586  003DE6  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
  7587  003DEA  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
  7588  003DEE  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
  7589  003DF2  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
  7590  003DF6                     l1451:
  7591  003DF6  0012               	return		;funcret
  7592  003DF8                     __end_of___xxtofl:
  7593                           	callstack 0
  7594                           
  7595 ;; *************** function ___fldiv *****************
  7596 ;; Defined at:
  7597 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\sprcdiv.c"
  7598 ;; Parameters:    Size  Location     Type
  7599 ;;  b               4   14[COMRAM] unsigned char 
  7600 ;;  a               4   18[COMRAM] unsigned char 
  7601 ;; Auto vars:     Size  Location     Type
  7602 ;;  grs             4   33[COMRAM] unsigned long 
  7603 ;;  rem             4   26[COMRAM] unsigned long 
  7604 ;;  new_exp         2   31[COMRAM] short 
  7605 ;;  aexp            1   38[COMRAM] unsigned char 
  7606 ;;  bexp            1   37[COMRAM] unsigned char 
  7607 ;;  sign            1   30[COMRAM] unsigned char 
  7608 ;; Return value:  Size  Location     Type
  7609 ;;                  4   14[COMRAM] unsigned char 
  7610 ;; Registers used:
  7611 ;;		wreg, status,2, status,0
  7612 ;; Tracked objects:
  7613 ;;		On entry : 0/0
  7614 ;;		On exit  : 0/0
  7615 ;;		Unchanged: 0/0
  7616 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7617 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7618 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7619 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7620 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7621 ;;Total ram usage:       25 bytes
  7622 ;; Hardware stack levels used: 1
  7623 ;; Hardware stack levels required when called: 1
  7624 ;; This function calls:
  7625 ;;		Nothing
  7626 ;; This function is called by:
  7627 ;;		_detect_color
  7628 ;;		_amb_light_measure
  7629 ;;		_check_color_reading
  7630 ;; This function uses a non-reentrant model
  7631 ;;
  7632                           
  7633                           	psect	text30
  7634  0026DA                     __ptext30:
  7635                           	callstack 0
  7636  0026DA                     ___fldiv:
  7637                           	callstack 27
  7638  0026DA  5012               	movf	(___fldiv@b+3)^0,w,c
  7639  0026DC  0B80               	andlw	128
  7640  0026DE  6E1F               	movwf	___fldiv@sign^0,c
  7641  0026E0  5012               	movf	(___fldiv@b+3)^0,w,c
  7642  0026E2  2412               	addwf	(___fldiv@b+3)^0,w,c
  7643  0026E4  6E26               	movwf	___fldiv@bexp^0,c
  7644  0026E6  AE11               	btfss	(___fldiv@b+2)^0,7,c
  7645  0026E8  EF78  F013         	goto	u4801
  7646  0026EC  EF7A  F013         	goto	u4800
  7647  0026F0                     u4801:
  7648  0026F0  EF7B  F013         	goto	l4731
  7649  0026F4                     u4800:
  7650  0026F4  8026               	bsf	___fldiv@bexp^0,0,c
  7651  0026F6                     l4731:
  7652  0026F6  5026               	movf	___fldiv@bexp^0,w,c
  7653  0026F8  B4D8               	btfsc	status,2,c
  7654  0026FA  EF81  F013         	goto	u4811
  7655  0026FE  EF83  F013         	goto	u4810
  7656  002702                     u4811:
  7657  002702  EF98  F013         	goto	l4741
  7658  002706                     u4810:
  7659  002706  2826               	incf	___fldiv@bexp^0,w,c
  7660  002708  A4D8               	btfss	status,2,c
  7661  00270A  EF89  F013         	goto	u4821
  7662  00270E  EF8B  F013         	goto	u4820
  7663  002712                     u4821:
  7664  002712  EF93  F013         	goto	l4737
  7665  002716                     u4820:
  7666  002716  0E00               	movlw	0
  7667  002718  6E0F               	movwf	___fldiv@b^0,c
  7668  00271A  0E00               	movlw	0
  7669  00271C  6E10               	movwf	(___fldiv@b+1)^0,c
  7670  00271E  0E00               	movlw	0
  7671  002720  6E11               	movwf	(___fldiv@b+2)^0,c
  7672  002722  0E00               	movlw	0
  7673  002724  6E12               	movwf	(___fldiv@b+3)^0,c
  7674  002726                     l4737:
  7675  002726  8E11               	bsf	(___fldiv@b+2)^0,7,c
  7676  002728  0E00               	movlw	0
  7677  00272A  6E12               	movwf	(___fldiv@b+3)^0,c
  7678  00272C  EFA0  F013         	goto	l4743
  7679  002730                     l4741:
  7680  002730  0E00               	movlw	0
  7681  002732  6E0F               	movwf	___fldiv@b^0,c
  7682  002734  0E00               	movlw	0
  7683  002736  6E10               	movwf	(___fldiv@b+1)^0,c
  7684  002738  0E00               	movlw	0
  7685  00273A  6E11               	movwf	(___fldiv@b+2)^0,c
  7686  00273C  0E00               	movlw	0
  7687  00273E  6E12               	movwf	(___fldiv@b+3)^0,c
  7688  002740                     l4743:
  7689  002740  5016               	movf	(___fldiv@a+3)^0,w,c
  7690  002742  0B80               	andlw	128
  7691  002744  1A1F               	xorwf	___fldiv@sign^0,f,c
  7692  002746  5016               	movf	(___fldiv@a+3)^0,w,c
  7693  002748  2416               	addwf	(___fldiv@a+3)^0,w,c
  7694  00274A  6E27               	movwf	___fldiv@aexp^0,c
  7695  00274C  AE15               	btfss	(___fldiv@a+2)^0,7,c
  7696  00274E  EFAB  F013         	goto	u4831
  7697  002752  EFAD  F013         	goto	u4830
  7698  002756                     u4831:
  7699  002756  EFAE  F013         	goto	l4751
  7700  00275A                     u4830:
  7701  00275A  8027               	bsf	___fldiv@aexp^0,0,c
  7702  00275C                     l4751:
  7703  00275C  5027               	movf	___fldiv@aexp^0,w,c
  7704  00275E  B4D8               	btfsc	status,2,c
  7705  002760  EFB4  F013         	goto	u4841
  7706  002764  EFB6  F013         	goto	u4840
  7707  002768                     u4841:
  7708  002768  EFCB  F013         	goto	l4761
  7709  00276C                     u4840:
  7710  00276C  2827               	incf	___fldiv@aexp^0,w,c
  7711  00276E  A4D8               	btfss	status,2,c
  7712  002770  EFBC  F013         	goto	u4851
  7713  002774  EFBE  F013         	goto	u4850
  7714  002778                     u4851:
  7715  002778  EFC6  F013         	goto	l4757
  7716  00277C                     u4850:
  7717  00277C  0E00               	movlw	0
  7718  00277E  6E13               	movwf	___fldiv@a^0,c
  7719  002780  0E00               	movlw	0
  7720  002782  6E14               	movwf	(___fldiv@a+1)^0,c
  7721  002784  0E00               	movlw	0
  7722  002786  6E15               	movwf	(___fldiv@a+2)^0,c
  7723  002788  0E00               	movlw	0
  7724  00278A  6E16               	movwf	(___fldiv@a+3)^0,c
  7725  00278C                     l4757:
  7726  00278C  8E15               	bsf	(___fldiv@a+2)^0,7,c
  7727  00278E  0E00               	movlw	0
  7728  002790  6E16               	movwf	(___fldiv@a+3)^0,c
  7729  002792  EFD3  F013         	goto	l4763
  7730  002796                     l4761:
  7731  002796  0E00               	movlw	0
  7732  002798  6E13               	movwf	___fldiv@a^0,c
  7733  00279A  0E00               	movlw	0
  7734  00279C  6E14               	movwf	(___fldiv@a+1)^0,c
  7735  00279E  0E00               	movlw	0
  7736  0027A0  6E15               	movwf	(___fldiv@a+2)^0,c
  7737  0027A2  0E00               	movlw	0
  7738  0027A4  6E16               	movwf	(___fldiv@a+3)^0,c
  7739  0027A6                     l4763:
  7740  0027A6  5013               	movf	___fldiv@a^0,w,c
  7741  0027A8  1014               	iorwf	(___fldiv@a+1)^0,w,c
  7742  0027AA  1015               	iorwf	(___fldiv@a+2)^0,w,c
  7743  0027AC  1016               	iorwf	(___fldiv@a+3)^0,w,c
  7744  0027AE  A4D8               	btfss	status,2,c
  7745  0027B0  EFDC  F013         	goto	u4861
  7746  0027B4  EFDE  F013         	goto	u4860
  7747  0027B8                     u4861:
  7748  0027B8  EFF6  F013         	goto	l4775
  7749  0027BC                     u4860:
  7750  0027BC  0E00               	movlw	0
  7751  0027BE  6E0F               	movwf	___fldiv@b^0,c
  7752  0027C0  0E00               	movlw	0
  7753  0027C2  6E10               	movwf	(___fldiv@b+1)^0,c
  7754  0027C4  0E00               	movlw	0
  7755  0027C6  6E11               	movwf	(___fldiv@b+2)^0,c
  7756  0027C8  0E00               	movlw	0
  7757  0027CA  6E12               	movwf	(___fldiv@b+3)^0,c
  7758  0027CC  0E80               	movlw	128
  7759  0027CE  1211               	iorwf	(___fldiv@b+2)^0,f,c
  7760  0027D0  0E7F               	movlw	127
  7761  0027D2  1212               	iorwf	(___fldiv@b+3)^0,f,c
  7762  0027D4                     l4769:
  7763  0027D4  501F               	movf	___fldiv@sign^0,w,c
  7764  0027D6  1212               	iorwf	(___fldiv@b+3)^0,f,c
  7765  0027D8  C00F  F00F         	movff	___fldiv@b,?___fldiv
  7766  0027DC  C010  F010         	movff	___fldiv@b+1,?___fldiv+1
  7767  0027E0  C011  F011         	movff	___fldiv@b+2,?___fldiv+2
  7768  0027E4  C012  F012         	movff	___fldiv@b+3,?___fldiv+3
  7769  0027E8  EF39  F015         	goto	l1375
  7770  0027EC                     l4775:
  7771  0027EC  5026               	movf	___fldiv@bexp^0,w,c
  7772  0027EE  A4D8               	btfss	status,2,c
  7773  0027F0  EFFC  F013         	goto	u4871
  7774  0027F4  EFFE  F013         	goto	u4870
  7775  0027F8                     u4871:
  7776  0027F8  EF08  F014         	goto	l4783
  7777  0027FC                     u4870:
  7778  0027FC  0E00               	movlw	0
  7779  0027FE  6E0F               	movwf	?___fldiv^0,c
  7780  002800  0E00               	movlw	0
  7781  002802  6E10               	movwf	(?___fldiv+1)^0,c
  7782  002804  0E00               	movlw	0
  7783  002806  6E11               	movwf	(?___fldiv+2)^0,c
  7784  002808  0E00               	movlw	0
  7785  00280A  6E12               	movwf	(?___fldiv+3)^0,c
  7786  00280C  EF39  F015         	goto	l1375
  7787  002810                     l4783:
  7788  002810  5027               	movf	___fldiv@aexp^0,w,c
  7789  002812  C026  F017         	movff	___fldiv@bexp,??___fldiv
  7790  002816  6A18               	clrf	(??___fldiv+1)^0,c
  7791  002818  5E17               	subwf	??___fldiv^0,f,c
  7792  00281A  0E00               	movlw	0
  7793  00281C  5A18               	subwfb	(??___fldiv+1)^0,f,c
  7794  00281E  0E7F               	movlw	127
  7795  002820  2417               	addwf	??___fldiv^0,w,c
  7796  002822  6E20               	movwf	___fldiv@new_exp^0,c
  7797  002824  0E00               	movlw	0
  7798  002826  2018               	addwfc	(??___fldiv+1)^0,w,c
  7799  002828  6E21               	movwf	(___fldiv@new_exp+1)^0,c
  7800  00282A  C00F  F01B         	movff	___fldiv@b,___fldiv@rem
  7801  00282E  C010  F01C         	movff	___fldiv@b+1,___fldiv@rem+1
  7802  002832  C011  F01D         	movff	___fldiv@b+2,___fldiv@rem+2
  7803  002836  C012  F01E         	movff	___fldiv@b+3,___fldiv@rem+3
  7804  00283A  0E00               	movlw	0
  7805  00283C  6E0F               	movwf	___fldiv@b^0,c
  7806  00283E  0E00               	movlw	0
  7807  002840  6E10               	movwf	(___fldiv@b+1)^0,c
  7808  002842  0E00               	movlw	0
  7809  002844  6E11               	movwf	(___fldiv@b+2)^0,c
  7810  002846  0E00               	movlw	0
  7811  002848  6E12               	movwf	(___fldiv@b+3)^0,c
  7812  00284A  0E00               	movlw	0
  7813  00284C  6E22               	movwf	___fldiv@grs^0,c
  7814  00284E  0E00               	movlw	0
  7815  002850  6E23               	movwf	(___fldiv@grs+1)^0,c
  7816  002852  0E00               	movlw	0
  7817  002854  6E24               	movwf	(___fldiv@grs+2)^0,c
  7818  002856  0E00               	movlw	0
  7819  002858  6E25               	movwf	(___fldiv@grs+3)^0,c
  7820  00285A  0E00               	movlw	0
  7821  00285C  6E27               	movwf	___fldiv@aexp^0,c
  7822  00285E  EF69  F014         	goto	l1377
  7823  002862                     l4793:
  7824  002862  5027               	movf	___fldiv@aexp^0,w,c
  7825  002864  B4D8               	btfsc	status,2,c
  7826  002866  EF37  F014         	goto	u4881
  7827  00286A  EF39  F014         	goto	u4880
  7828  00286E                     u4881:
  7829  00286E  EF50  F014         	goto	l4801
  7830  002872                     u4880:
  7831  002872  90D8               	bcf	status,0,c
  7832  002874  361B               	rlcf	___fldiv@rem^0,f,c
  7833  002876  361C               	rlcf	(___fldiv@rem+1)^0,f,c
  7834  002878  361D               	rlcf	(___fldiv@rem+2)^0,f,c
  7835  00287A  361E               	rlcf	(___fldiv@rem+3)^0,f,c
  7836  00287C  90D8               	bcf	status,0,c
  7837  00287E  360F               	rlcf	___fldiv@b^0,f,c
  7838  002880  3610               	rlcf	(___fldiv@b+1)^0,f,c
  7839  002882  3611               	rlcf	(___fldiv@b+2)^0,f,c
  7840  002884  3612               	rlcf	(___fldiv@b+3)^0,f,c
  7841  002886  AE25               	btfss	(___fldiv@grs+3)^0,7,c
  7842  002888  EF48  F014         	goto	u4891
  7843  00288C  EF4A  F014         	goto	u4890
  7844  002890                     u4891:
  7845  002890  EF4B  F014         	goto	l1380
  7846  002894                     u4890:
  7847  002894  800F               	bsf	___fldiv@b^0,0,c
  7848  002896                     l1380:
  7849  002896  90D8               	bcf	status,0,c
  7850  002898  3622               	rlcf	___fldiv@grs^0,f,c
  7851  00289A  3623               	rlcf	(___fldiv@grs+1)^0,f,c
  7852  00289C  3624               	rlcf	(___fldiv@grs+2)^0,f,c
  7853  00289E  3625               	rlcf	(___fldiv@grs+3)^0,f,c
  7854  0028A0                     l4801:
  7855  0028A0  5013               	movf	___fldiv@a^0,w,c
  7856  0028A2  5C1B               	subwf	___fldiv@rem^0,w,c
  7857  0028A4  5014               	movf	(___fldiv@a+1)^0,w,c
  7858  0028A6  581C               	subwfb	(___fldiv@rem+1)^0,w,c
  7859  0028A8  5015               	movf	(___fldiv@a+2)^0,w,c
  7860  0028AA  581D               	subwfb	(___fldiv@rem+2)^0,w,c
  7861  0028AC  5016               	movf	(___fldiv@a+3)^0,w,c
  7862  0028AE  581E               	subwfb	(___fldiv@rem+3)^0,w,c
  7863  0028B0  A0D8               	btfss	status,0,c
  7864  0028B2  EF5D  F014         	goto	u4901
  7865  0028B6  EF5F  F014         	goto	u4900
  7866  0028BA                     u4901:
  7867  0028BA  EF68  F014         	goto	l4807
  7868  0028BE                     u4900:
  7869  0028BE  8C25               	bsf	(___fldiv@grs+3)^0,6,c
  7870  0028C0  5013               	movf	___fldiv@a^0,w,c
  7871  0028C2  5E1B               	subwf	___fldiv@rem^0,f,c
  7872  0028C4  5014               	movf	(___fldiv@a+1)^0,w,c
  7873  0028C6  5A1C               	subwfb	(___fldiv@rem+1)^0,f,c
  7874  0028C8  5015               	movf	(___fldiv@a+2)^0,w,c
  7875  0028CA  5A1D               	subwfb	(___fldiv@rem+2)^0,f,c
  7876  0028CC  5016               	movf	(___fldiv@a+3)^0,w,c
  7877  0028CE  5A1E               	subwfb	(___fldiv@rem+3)^0,f,c
  7878  0028D0                     l4807:
  7879  0028D0  2A27               	incf	___fldiv@aexp^0,f,c
  7880  0028D2                     l1377:
  7881  0028D2  0E19               	movlw	25
  7882  0028D4  6427               	cpfsgt	___fldiv@aexp^0,c
  7883  0028D6  EF6F  F014         	goto	u4911
  7884  0028DA  EF71  F014         	goto	u4910
  7885  0028DE                     u4911:
  7886  0028DE  EF31  F014         	goto	l4793
  7887  0028E2                     u4910:
  7888  0028E2  501B               	movf	___fldiv@rem^0,w,c
  7889  0028E4  101C               	iorwf	(___fldiv@rem+1)^0,w,c
  7890  0028E6  101D               	iorwf	(___fldiv@rem+2)^0,w,c
  7891  0028E8  101E               	iorwf	(___fldiv@rem+3)^0,w,c
  7892  0028EA  B4D8               	btfsc	status,2,c
  7893  0028EC  EF7A  F014         	goto	u4921
  7894  0028F0  EF7C  F014         	goto	u4920
  7895  0028F4                     u4921:
  7896  0028F4  EF94  F014         	goto	l4819
  7897  0028F8                     u4920:
  7898  0028F8  8022               	bsf	___fldiv@grs^0,0,c
  7899  0028FA  EF94  F014         	goto	l4819
  7900  0028FE                     l4813:
  7901  0028FE  90D8               	bcf	status,0,c
  7902  002900  360F               	rlcf	___fldiv@b^0,f,c
  7903  002902  3610               	rlcf	(___fldiv@b+1)^0,f,c
  7904  002904  3611               	rlcf	(___fldiv@b+2)^0,f,c
  7905  002906  3612               	rlcf	(___fldiv@b+3)^0,f,c
  7906  002908  AE25               	btfss	(___fldiv@grs+3)^0,7,c
  7907  00290A  EF89  F014         	goto	u4931
  7908  00290E  EF8B  F014         	goto	u4930
  7909  002912                     u4931:
  7910  002912  EF8C  F014         	goto	l1386
  7911  002916                     u4930:
  7912  002916  800F               	bsf	___fldiv@b^0,0,c
  7913  002918                     l1386:
  7914  002918  90D8               	bcf	status,0,c
  7915  00291A  3622               	rlcf	___fldiv@grs^0,f,c
  7916  00291C  3623               	rlcf	(___fldiv@grs+1)^0,f,c
  7917  00291E  3624               	rlcf	(___fldiv@grs+2)^0,f,c
  7918  002920  3625               	rlcf	(___fldiv@grs+3)^0,f,c
  7919  002922  0620               	decf	___fldiv@new_exp^0,f,c
  7920  002924  A0D8               	btfss	status,0,c
  7921  002926  0621               	decf	(___fldiv@new_exp+1)^0,f,c
  7922  002928                     l4819:
  7923  002928  AE11               	btfss	(___fldiv@b+2)^0,7,c
  7924  00292A  EF99  F014         	goto	u4941
  7925  00292E  EF9B  F014         	goto	u4940
  7926  002932                     u4941:
  7927  002932  EF7F  F014         	goto	l4813
  7928  002936                     u4940:
  7929  002936  0E00               	movlw	0
  7930  002938  6E27               	movwf	___fldiv@aexp^0,c
  7931  00293A  AE25               	btfss	(___fldiv@grs+3)^0,7,c
  7932  00293C  EFA2  F014         	goto	u4951
  7933  002940  EFA4  F014         	goto	u4950
  7934  002944                     u4951:
  7935  002944  EFC8  F014         	goto	l1388
  7936  002948                     u4950:
  7937  002948  0EFF               	movlw	255
  7938  00294A  1422               	andwf	___fldiv@grs^0,w,c
  7939  00294C  6E17               	movwf	??___fldiv^0,c
  7940  00294E  0EFF               	movlw	255
  7941  002950  1423               	andwf	(___fldiv@grs+1)^0,w,c
  7942  002952  6E18               	movwf	(??___fldiv+1)^0,c
  7943  002954  0EFF               	movlw	255
  7944  002956  1424               	andwf	(___fldiv@grs+2)^0,w,c
  7945  002958  6E19               	movwf	(??___fldiv+2)^0,c
  7946  00295A  0E7F               	movlw	127
  7947  00295C  1425               	andwf	(___fldiv@grs+3)^0,w,c
  7948  00295E  6E1A               	movwf	(??___fldiv+3)^0,c
  7949  002960  5017               	movf	??___fldiv^0,w,c
  7950  002962  1018               	iorwf	(??___fldiv+1)^0,w,c
  7951  002964  1019               	iorwf	(??___fldiv+2)^0,w,c
  7952  002966  101A               	iorwf	(??___fldiv+3)^0,w,c
  7953  002968  B4D8               	btfsc	status,2,c
  7954  00296A  EFB9  F014         	goto	u4961
  7955  00296E  EFBB  F014         	goto	u4960
  7956  002972                     u4961:
  7957  002972  EFBF  F014         	goto	l1389
  7958  002976                     u4960:
  7959  002976                     l4827:
  7960  002976  0E01               	movlw	1
  7961  002978  6E27               	movwf	___fldiv@aexp^0,c
  7962  00297A  EFC8  F014         	goto	l1388
  7963  00297E                     l1389:
  7964  00297E  A00F               	btfss	___fldiv@b^0,0,c
  7965  002980  EFC4  F014         	goto	u4971
  7966  002984  EFC6  F014         	goto	u4970
  7967  002988                     u4971:
  7968  002988  EFC8  F014         	goto	l1388
  7969  00298C                     u4970:
  7970  00298C  EFBB  F014         	goto	l4827
  7971  002990                     l1388:
  7972  002990  5027               	movf	___fldiv@aexp^0,w,c
  7973  002992  B4D8               	btfsc	status,2,c
  7974  002994  EFCE  F014         	goto	u4981
  7975  002998  EFD0  F014         	goto	u4980
  7976  00299C                     u4981:
  7977  00299C  EFF4  F014         	goto	l4839
  7978  0029A0                     u4980:
  7979  0029A0  0E01               	movlw	1
  7980  0029A2  260F               	addwf	___fldiv@b^0,f,c
  7981  0029A4  0E00               	movlw	0
  7982  0029A6  2210               	addwfc	(___fldiv@b+1)^0,f,c
  7983  0029A8  2211               	addwfc	(___fldiv@b+2)^0,f,c
  7984  0029AA  2212               	addwfc	(___fldiv@b+3)^0,f,c
  7985  0029AC  A012               	btfss	(___fldiv@b+3)^0,0,c
  7986  0029AE  EFDB  F014         	goto	u4991
  7987  0029B2  EFDD  F014         	goto	u4990
  7988  0029B6                     u4991:
  7989  0029B6  EFF4  F014         	goto	l4839
  7990  0029BA                     u4990:
  7991  0029BA  C00F  F017         	movff	___fldiv@b,??___fldiv
  7992  0029BE  C010  F018         	movff	___fldiv@b+1,??___fldiv+1
  7993  0029C2  C011  F019         	movff	___fldiv@b+2,??___fldiv+2
  7994  0029C6  C012  F01A         	movff	___fldiv@b+3,??___fldiv+3
  7995  0029CA  341A               	rlcf	(??___fldiv+3)^0,w,c
  7996  0029CC  321A               	rrcf	(??___fldiv+3)^0,f,c
  7997  0029CE  3219               	rrcf	(??___fldiv+2)^0,f,c
  7998  0029D0  3218               	rrcf	(??___fldiv+1)^0,f,c
  7999  0029D2  3217               	rrcf	??___fldiv^0,f,c
  8000  0029D4  C017  F00F         	movff	??___fldiv,___fldiv@b
  8001  0029D8  C018  F010         	movff	??___fldiv+1,___fldiv@b+1
  8002  0029DC  C019  F011         	movff	??___fldiv+2,___fldiv@b+2
  8003  0029E0  C01A  F012         	movff	??___fldiv+3,___fldiv@b+3
  8004  0029E4  4A20               	infsnz	___fldiv@new_exp^0,f,c
  8005  0029E6  2A21               	incf	(___fldiv@new_exp+1)^0,f,c
  8006  0029E8                     l4839:
  8007  0029E8  BE21               	btfsc	(___fldiv@new_exp+1)^0,7,c
  8008  0029EA  EFFF  F014         	goto	u5001
  8009  0029EE  5021               	movf	(___fldiv@new_exp+1)^0,w,c
  8010  0029F0  E108               	bnz	u5000
  8011  0029F2  2820               	incf	___fldiv@new_exp^0,w,c
  8012  0029F4  A0D8               	btfss	status,0,c
  8013  0029F6  EFFF  F014         	goto	u5001
  8014  0029FA  EF01  F015         	goto	u5000
  8015  0029FE                     u5001:
  8016  0029FE  EF0C  F015         	goto	l4843
  8017  002A02                     u5000:
  8018  002A02  0E00               	movlw	0
  8019  002A04  6E21               	movwf	(___fldiv@new_exp+1)^0,c
  8020  002A06  6820               	setf	___fldiv@new_exp^0,c
  8021  002A08  0E00               	movlw	0
  8022  002A0A  6E0F               	movwf	___fldiv@b^0,c
  8023  002A0C  0E00               	movlw	0
  8024  002A0E  6E10               	movwf	(___fldiv@b+1)^0,c
  8025  002A10  0E00               	movlw	0
  8026  002A12  6E11               	movwf	(___fldiv@b+2)^0,c
  8027  002A14  0E00               	movlw	0
  8028  002A16  6E12               	movwf	(___fldiv@b+3)^0,c
  8029  002A18                     l4843:
  8030  002A18  BE21               	btfsc	(___fldiv@new_exp+1)^0,7,c
  8031  002A1A  EF19  F015         	goto	u5010
  8032  002A1E  5021               	movf	(___fldiv@new_exp+1)^0,w,c
  8033  002A20  E106               	bnz	u5011
  8034  002A22  0420               	decf	___fldiv@new_exp^0,w,c
  8035  002A24  B0D8               	btfsc	status,0,c
  8036  002A26  EF17  F015         	goto	u5011
  8037  002A2A  EF19  F015         	goto	u5010
  8038  002A2E                     u5011:
  8039  002A2E  EF27  F015         	goto	l4847
  8040  002A32                     u5010:
  8041  002A32  0E00               	movlw	0
  8042  002A34  6E21               	movwf	(___fldiv@new_exp+1)^0,c
  8043  002A36  0E00               	movlw	0
  8044  002A38  6E20               	movwf	___fldiv@new_exp^0,c
  8045  002A3A  0E00               	movlw	0
  8046  002A3C  6E0F               	movwf	___fldiv@b^0,c
  8047  002A3E  0E00               	movlw	0
  8048  002A40  6E10               	movwf	(___fldiv@b+1)^0,c
  8049  002A42  0E00               	movlw	0
  8050  002A44  6E11               	movwf	(___fldiv@b+2)^0,c
  8051  002A46  0E00               	movlw	0
  8052  002A48  6E12               	movwf	(___fldiv@b+3)^0,c
  8053  002A4A  0E00               	movlw	0
  8054  002A4C  6E1F               	movwf	___fldiv@sign^0,c
  8055  002A4E                     l4847:
  8056  002A4E  C020  F026         	movff	___fldiv@new_exp,___fldiv@bexp
  8057  002A52  A026               	btfss	___fldiv@bexp^0,0,c
  8058  002A54  EF2E  F015         	goto	u5021
  8059  002A58  EF30  F015         	goto	u5020
  8060  002A5C                     u5021:
  8061  002A5C  EF33  F015         	goto	l4853
  8062  002A60                     u5020:
  8063  002A60  8E11               	bsf	(___fldiv@b+2)^0,7,c
  8064  002A62  EF34  F015         	goto	l4855
  8065  002A66                     l4853:
  8066  002A66  9E11               	bcf	(___fldiv@b+2)^0,7,c
  8067  002A68                     l4855:
  8068  002A68  90D8               	bcf	status,0,c
  8069  002A6A  3026               	rrcf	___fldiv@bexp^0,w,c
  8070  002A6C  6E12               	movwf	(___fldiv@b+3)^0,c
  8071  002A6E  EFEA  F013         	goto	l4769
  8072  002A72                     l1375:
  8073  002A72  0012               	return		;funcret
  8074  002A74                     __end_of___fldiv:
  8075                           	callstack 0
  8076                           
  8077 ;; *************** function _LED_C *****************
  8078 ;; Defined at:
  8079 ;;		line 173 in file "color.c"
  8080 ;; Parameters:    Size  Location     Type
  8081 ;;		None
  8082 ;; Auto vars:     Size  Location     Type
  8083 ;;		None
  8084 ;; Return value:  Size  Location     Type
  8085 ;;                  1    wreg      void 
  8086 ;; Registers used:
  8087 ;;		wreg
  8088 ;; Tracked objects:
  8089 ;;		On entry : 0/0
  8090 ;;		On exit  : 0/0
  8091 ;;		Unchanged: 0/0
  8092 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8093 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8094 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8095 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8096 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8097 ;;Total ram usage:        2 bytes
  8098 ;; Hardware stack levels used: 1
  8099 ;; Hardware stack levels required when called: 1
  8100 ;; This function calls:
  8101 ;;		Nothing
  8102 ;; This function is called by:
  8103 ;;		_color_data_collection
  8104 ;;		_calibrate_white
  8105 ;;		_amb_light_measure
  8106 ;;		_distance_measure
  8107 ;;		_test_function
  8108 ;; This function uses a non-reentrant model
  8109 ;;
  8110                           
  8111                           	psect	text31
  8112  005A2A                     __ptext31:
  8113                           	callstack 0
  8114  005A2A                     _LED_C:
  8115                           	callstack 27
  8116  005A2A                     
  8117                           ;color.c: 175:     LATGbits.LATG1 = 1;
  8118  005A2A  827F               	bsf	127,1,c	;volatile
  8119                           
  8120                           ;color.c: 176:     LATFbits.LATF7 = 1;
  8121  005A2C  8E7E               	bsf	126,7,c	;volatile
  8122                           
  8123                           ;color.c: 177:     LATAbits.LATA4 = 1;
  8124  005A2E  8879               	bsf	121,4,c	;volatile
  8125  005A30                     
  8126                           ;color.c: 178:     _delay((unsigned long)((200)*(64000000/4000.0)));
  8127  005A30  0E11               	movlw	17
  8128  005A32  6E02               	movwf	(??_LED_C+1)^0,c
  8129  005A34  0E3C               	movlw	60
  8130  005A36  6E01               	movwf	??_LED_C^0,c
  8131  005A38  0ECB               	movlw	203
  8132  005A3A                     u6057:
  8133  005A3A  2EE8               	decfsz	wreg,f,c
  8134  005A3C  D7FE               	bra	u6057
  8135  005A3E  2E01               	decfsz	??_LED_C^0,f,c
  8136  005A40  D7FC               	bra	u6057
  8137  005A42  2E02               	decfsz	(??_LED_C+1)^0,f,c
  8138  005A44  D7FA               	bra	u6057
  8139  005A46  F000               	nop	
  8140  005A48  0012               	return		;funcret
  8141  005A4A                     __end_of_LED_C:
  8142                           	callstack 0
  8143                           
  8144 ;; *************** function _short_burst_back *****************
  8145 ;; Defined at:
  8146 ;;		line 10 in file "movement.c"
  8147 ;; Parameters:    Size  Location     Type
  8148 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  8149 ;;		 -> main@motorL(10), 
  8150 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  8151 ;;		 -> main@motorR(10), 
  8152 ;; Auto vars:     Size  Location     Type
  8153 ;;		None
  8154 ;; Return value:  Size  Location     Type
  8155 ;;                  1    wreg      void 
  8156 ;; Registers used:
  8157 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8158 ;; Tracked objects:
  8159 ;;		On entry : 0/0
  8160 ;;		On exit  : 0/0
  8161 ;;		Unchanged: 0/0
  8162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8163 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8164 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8165 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8166 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8167 ;;Total ram usage:        6 bytes
  8168 ;; Hardware stack levels used: 1
  8169 ;; Hardware stack levels required when called: 4
  8170 ;; This function calls:
  8171 ;;		_fullSpeedAhead
  8172 ;;		_stop
  8173 ;; This function is called by:
  8174 ;;		_main
  8175 ;; This function uses a non-reentrant model
  8176 ;;
  8177                           
  8178                           	psect	text32
  8179  0056BE                     __ptext32:
  8180                           	callstack 0
  8181  0056BE                     _short_burst_back:
  8182                           	callstack 26
  8183  0056BE                     
  8184                           ;movement.c: 10: void short_burst_back(struct DC_motor *mL, struct DC_motor *mR);movemen
      +                          t.c: 11: {;movement.c: 12:     fullSpeedAhead(mL,mR);
  8185  0056BE  C020  F01A         	movff	short_burst_back@mL,fullSpeedAhead@mL
  8186  0056C2  C021  F01B         	movff	short_burst_back@mL+1,fullSpeedAhead@mL+1
  8187  0056C6  C022  F01C         	movff	short_burst_back@mR,fullSpeedAhead@mR
  8188  0056CA  C023  F01D         	movff	short_burst_back@mR+1,fullSpeedAhead@mR+1
  8189  0056CE  ECB8  F028         	call	_fullSpeedAhead	;wreg free
  8190  0056D2                     
  8191                           ;movement.c: 13:     _delay((unsigned long)((600)*(64000000/4000.0)));
  8192  0056D2  0E31               	movlw	49
  8193  0056D4  6E25               	movwf	(??_short_burst_back+1)^0,c
  8194  0056D6  0EB4               	movlw	180
  8195  0056D8  6E24               	movwf	??_short_burst_back^0,c
  8196  0056DA  0E66               	movlw	102
  8197  0056DC                     u6067:
  8198  0056DC  2EE8               	decfsz	wreg,f,c
  8199  0056DE  D7FE               	bra	u6067
  8200  0056E0  2E24               	decfsz	??_short_burst_back^0,f,c
  8201  0056E2  D7FC               	bra	u6067
  8202  0056E4  2E25               	decfsz	(??_short_burst_back+1)^0,f,c
  8203  0056E6  D7FA               	bra	u6067
  8204  0056E8                     
  8205                           ;movement.c: 15:     stop(mL,mR);
  8206  0056E8  C020  F01A         	movff	short_burst_back@mL,stop@mL
  8207  0056EC  C021  F01B         	movff	short_burst_back@mL+1,stop@mL+1
  8208  0056F0  C022  F01C         	movff	short_burst_back@mR,stop@mR
  8209  0056F4  C023  F01D         	movff	short_burst_back@mR+1,stop@mR+1
  8210  0056F8  EC5A  F028         	call	_stop	;wreg free
  8211  0056FC  0012               	return		;funcret
  8212  0056FE                     __end_of_short_burst_back:
  8213                           	callstack 0
  8214                           
  8215 ;; *************** function _pin_init *****************
  8216 ;; Defined at:
  8217 ;;		line 99 in file "movement.c"
  8218 ;; Parameters:    Size  Location     Type
  8219 ;;		None
  8220 ;; Auto vars:     Size  Location     Type
  8221 ;;		None
  8222 ;; Return value:  Size  Location     Type
  8223 ;;                  1    wreg      void 
  8224 ;; Registers used:
  8225 ;;		None
  8226 ;; Tracked objects:
  8227 ;;		On entry : 0/0
  8228 ;;		On exit  : 0/0
  8229 ;;		Unchanged: 0/0
  8230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8231 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8232 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8233 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8234 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8235 ;;Total ram usage:        0 bytes
  8236 ;; Hardware stack levels used: 1
  8237 ;; Hardware stack levels required when called: 1
  8238 ;; This function calls:
  8239 ;;		Nothing
  8240 ;; This function is called by:
  8241 ;;		_main
  8242 ;; This function uses a non-reentrant model
  8243 ;;
  8244                           
  8245                           	psect	text33
  8246  005A4A                     __ptext33:
  8247                           	callstack 0
  8248  005A4A                     _pin_init:
  8249                           	callstack 29
  8250  005A4A  8486               	bsf	134,2,c	;volatile
  8251                           
  8252                           ;movement.c: 101:     ANSELFbits.ANSELF2=0;
  8253  005A4C  010E               	movlb	14	; () banked
  8254  005A4E  95B4               	bcf	180,2,b	;volatile
  8255                           
  8256                           ;movement.c: 102:     TRISFbits.TRISF3=1;
  8257  005A50  8686               	bsf	134,3,c	;volatile
  8258                           
  8259                           ;movement.c: 103:     ANSELFbits.ANSELF3=0;
  8260  005A52  97B4               	bcf	180,3,b	;volatile
  8261                           
  8262                           ;movement.c: 108:     TRISGbits.TRISG1 = 0;
  8263  005A54  9287               	bcf	135,1,c	;volatile
  8264                           
  8265                           ;movement.c: 109:     TRISFbits.TRISF7 = 0;
  8266  005A56  9E86               	bcf	134,7,c	;volatile
  8267                           
  8268                           ;movement.c: 110:     TRISAbits.TRISA4 = 0;
  8269  005A58  9881               	bcf	129,4,c	;volatile
  8270                           
  8271                           ;movement.c: 111:     LATGbits.LATG1 = 1;
  8272  005A5A  827F               	bsf	127,1,c	;volatile
  8273                           
  8274                           ;movement.c: 112:     LATFbits.LATF7 = 1;
  8275  005A5C  8E7E               	bsf	126,7,c	;volatile
  8276                           
  8277                           ;movement.c: 113:     LATAbits.LATA4 = 1;
  8278  005A5E  8879               	bsf	121,4,c	;volatile
  8279                           
  8280                           ;movement.c: 116:     TRISDbits.TRISD7 = 0;
  8281  005A60  9E84               	bcf	132,7,c	;volatile
  8282                           
  8283                           ;movement.c: 117:     LATDbits.LATD7 = 0;
  8284  005A62  9E7C               	bcf	124,7,c	;volatile
  8285                           
  8286                           ;movement.c: 118:     TRISHbits.TRISH3 = 0;
  8287  005A64  9688               	bcf	136,3,c	;volatile
  8288                           
  8289                           ;movement.c: 119:     LATHbits.LATH3 = 0;
  8290  005A66  9680               	bcf	128,3,c	;volatile
  8291  005A68                     
  8292                           ; BSR set to: 14
  8293  005A68  0012               	return		;funcret
  8294  005A6A                     __end_of_pin_init:
  8295                           	callstack 0
  8296                           
  8297 ;; *************** function _initUSART4 *****************
  8298 ;; Defined at:
  8299 ;;		line 4 in file "serial.c"
  8300 ;; Parameters:    Size  Location     Type
  8301 ;;		None
  8302 ;; Auto vars:     Size  Location     Type
  8303 ;;		None
  8304 ;; Return value:  Size  Location     Type
  8305 ;;                  1    wreg      void 
  8306 ;; Registers used:
  8307 ;;		wreg, status,2
  8308 ;; Tracked objects:
  8309 ;;		On entry : 0/0
  8310 ;;		On exit  : 0/0
  8311 ;;		Unchanged: 0/0
  8312 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8313 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8314 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8315 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8316 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8317 ;;Total ram usage:        0 bytes
  8318 ;; Hardware stack levels used: 1
  8319 ;; Hardware stack levels required when called: 1
  8320 ;; This function calls:
  8321 ;;		Nothing
  8322 ;; This function is called by:
  8323 ;;		_main
  8324 ;; This function uses a non-reentrant model
  8325 ;;
  8326                           
  8327                           	psect	text34
  8328  005A8A                     __ptext34:
  8329                           	callstack 0
  8330  005A8A                     _initUSART4:
  8331                           	callstack 29
  8332  005A8A                     
  8333                           ;serial.c: 8:     RC0PPS = 0x12;
  8334  005A8A  0E12               	movlw	18
  8335  005A8C  010E               	movlb	14	; () banked
  8336  005A8E  6F62               	movwf	98,b	;volatile
  8337                           
  8338                           ;serial.c: 9:     RX4PPS = 0x11;
  8339  005A90  0E11               	movlw	17
  8340  005A92  6F15               	movwf	21,b	;volatile
  8341  005A94                     
  8342                           ; BSR set to: 14
  8343                           ;serial.c: 11:     BAUD4CONbits.BRG16 = 0;
  8344  005A94  97E9               	bcf	233,3,b	;volatile
  8345  005A96                     
  8346                           ; BSR set to: 14
  8347                           ;serial.c: 12:     TX4STAbits.BRGH = 0;
  8348  005A96  95E8               	bcf	232,2,b	;volatile
  8349                           
  8350                           ;serial.c: 13:     SP4BRGL = 51;
  8351  005A98  0E33               	movlw	51
  8352  005A9A  6FE5               	movwf	229,b	;volatile
  8353                           
  8354                           ;serial.c: 15:     SP4BRGH = 0;
  8355  005A9C  0E00               	movlw	0
  8356  005A9E  6FE6               	movwf	230,b	;volatile
  8357  005AA0                     
  8358                           ; BSR set to: 14
  8359                           ;serial.c: 17:     RC4STAbits.CREN = 1;
  8360  005AA0  89E7               	bsf	231,4,b	;volatile
  8361  005AA2                     
  8362                           ; BSR set to: 14
  8363                           ;serial.c: 18:     TX4STAbits.TXEN = 1;
  8364  005AA2  8BE8               	bsf	232,5,b	;volatile
  8365  005AA4                     
  8366                           ; BSR set to: 14
  8367                           ;serial.c: 19:     RC4STAbits.SPEN = 1;
  8368  005AA4  8FE7               	bsf	231,7,b	;volatile
  8369  005AA6                     
  8370                           ; BSR set to: 14
  8371  005AA6  0012               	return		;funcret
  8372  005AA8                     __end_of_initUSART4:
  8373                           	callstack 0
  8374                           
  8375 ;; *************** function _initDCmotors_parameter *****************
  8376 ;; Defined at:
  8377 ;;		line 40 in file "dc_motor.c"
  8378 ;; Parameters:    Size  Location     Type
  8379 ;;  motorL          2    0[COMRAM] PTR struct DC_motor
  8380 ;;		 -> main@motorL(10), 
  8381 ;;  motorR          2    2[COMRAM] PTR struct DC_motor
  8382 ;;		 -> main@motorR(10), 
  8383 ;; Auto vars:     Size  Location     Type
  8384 ;;		None
  8385 ;; Return value:  Size  Location     Type
  8386 ;;                  1    wreg      void 
  8387 ;; Registers used:
  8388 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8389 ;; Tracked objects:
  8390 ;;		On entry : 0/0
  8391 ;;		On exit  : 0/0
  8392 ;;		Unchanged: 0/0
  8393 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8394 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8395 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8396 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8397 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8398 ;;Total ram usage:        4 bytes
  8399 ;; Hardware stack levels used: 1
  8400 ;; Hardware stack levels required when called: 1
  8401 ;; This function calls:
  8402 ;;		Nothing
  8403 ;; This function is called by:
  8404 ;;		_main
  8405 ;; This function uses a non-reentrant model
  8406 ;;
  8407                           
  8408                           	psect	text35
  8409  004C08                     __ptext35:
  8410                           	callstack 0
  8411  004C08                     _initDCmotors_parameter:
  8412                           	callstack 29
  8413  004C08                     
  8414                           ;dc_motor.c: 42:     motorL->power = 0;
  8415  004C08  C001  FFD9         	movff	initDCmotors_parameter@motorL,fsr2l
  8416  004C0C  C002  FFDA         	movff	initDCmotors_parameter@motorL+1,fsr2h
  8417  004C10  0E00               	movlw	0
  8418  004C12  6EDF               	movwf	indf2,c
  8419  004C14                     
  8420                           ;dc_motor.c: 43:     motorL->direction = 1;
  8421  004C14  EE20 F001          	lfsr	2,1
  8422  004C18  5001               	movf	initDCmotors_parameter@motorL^0,w,c
  8423  004C1A  26D9               	addwf	fsr2l,f,c
  8424  004C1C  5002               	movf	(initDCmotors_parameter@motorL+1)^0,w,c
  8425  004C1E  22DA               	addwfc	fsr2h,f,c
  8426  004C20  0E01               	movlw	1
  8427  004C22  6EDF               	movwf	indf2,c
  8428  004C24                     
  8429                           ;dc_motor.c: 44:     motorL->dutyHighByte = (unsigned char *)(&PWM6DCH);
  8430  004C24  EE20 F002          	lfsr	2,2
  8431  004C28  5001               	movf	initDCmotors_parameter@motorL^0,w,c
  8432  004C2A  26D9               	addwf	fsr2l,f,c
  8433  004C2C  5002               	movf	(initDCmotors_parameter@motorL+1)^0,w,c
  8434  004C2E  22DA               	addwfc	fsr2h,f,c
  8435  004C30  0EA3               	movlw	163
  8436  004C32  6EDE               	movwf	postinc2,c
  8437  004C34  0E0F               	movlw	15
  8438  004C36  6EDD               	movwf	postdec2,c
  8439  004C38                     
  8440                           ;dc_motor.c: 45:     motorL->dir_LAT = (unsigned char *)(&LATE);
  8441  004C38  EE20 F004          	lfsr	2,4
  8442  004C3C  5001               	movf	initDCmotors_parameter@motorL^0,w,c
  8443  004C3E  26D9               	addwf	fsr2l,f,c
  8444  004C40  5002               	movf	(initDCmotors_parameter@motorL+1)^0,w,c
  8445  004C42  22DA               	addwfc	fsr2h,f,c
  8446  004C44  0E7D               	movlw	125
  8447  004C46  6EDE               	movwf	postinc2,c
  8448  004C48  0E0F               	movlw	15
  8449  004C4A  6EDD               	movwf	postdec2,c
  8450  004C4C                     
  8451                           ;dc_motor.c: 46:     motorL->dir_pin = 4;
  8452  004C4C  EE20 F006          	lfsr	2,6
  8453  004C50  5001               	movf	initDCmotors_parameter@motorL^0,w,c
  8454  004C52  26D9               	addwf	fsr2l,f,c
  8455  004C54  5002               	movf	(initDCmotors_parameter@motorL+1)^0,w,c
  8456  004C56  22DA               	addwfc	fsr2h,f,c
  8457  004C58  0E04               	movlw	4
  8458  004C5A  6EDF               	movwf	indf2,c
  8459  004C5C                     
  8460                           ;dc_motor.c: 47:     motorL->PWMperiod = 199;
  8461  004C5C  EE20 F007          	lfsr	2,7
  8462  004C60  5001               	movf	initDCmotors_parameter@motorL^0,w,c
  8463  004C62  26D9               	addwf	fsr2l,f,c
  8464  004C64  5002               	movf	(initDCmotors_parameter@motorL+1)^0,w,c
  8465  004C66  22DA               	addwfc	fsr2h,f,c
  8466  004C68  0EC7               	movlw	199
  8467  004C6A  6EDE               	movwf	postinc2,c
  8468  004C6C  0E00               	movlw	0
  8469  004C6E  6EDD               	movwf	postdec2,c
  8470  004C70                     
  8471                           ;dc_motor.c: 50:     motorR->power = 0;
  8472  004C70  C003  FFD9         	movff	initDCmotors_parameter@motorR,fsr2l
  8473  004C74  C004  FFDA         	movff	initDCmotors_parameter@motorR+1,fsr2h
  8474  004C78  0E00               	movlw	0
  8475  004C7A  6EDF               	movwf	indf2,c
  8476                           
  8477                           ;dc_motor.c: 51:     motorR->direction = 1;
  8478  004C7C  EE20 F001          	lfsr	2,1
  8479  004C80  5003               	movf	initDCmotors_parameter@motorR^0,w,c
  8480  004C82  26D9               	addwf	fsr2l,f,c
  8481  004C84  5004               	movf	(initDCmotors_parameter@motorR+1)^0,w,c
  8482  004C86  22DA               	addwfc	fsr2h,f,c
  8483  004C88  0E01               	movlw	1
  8484  004C8A  6EDF               	movwf	indf2,c
  8485                           
  8486                           ;dc_motor.c: 52:     motorR->dutyHighByte = (unsigned char *)(&PWM7DCH);
  8487  004C8C  EE20 F002          	lfsr	2,2
  8488  004C90  5003               	movf	initDCmotors_parameter@motorR^0,w,c
  8489  004C92  26D9               	addwf	fsr2l,f,c
  8490  004C94  5004               	movf	(initDCmotors_parameter@motorR+1)^0,w,c
  8491  004C96  22DA               	addwfc	fsr2h,f,c
  8492  004C98  0EA0               	movlw	160
  8493  004C9A  6EDE               	movwf	postinc2,c
  8494  004C9C  0E0F               	movlw	15
  8495  004C9E  6EDD               	movwf	postdec2,c
  8496                           
  8497                           ;dc_motor.c: 53:     motorR->dir_LAT = (unsigned char *)(&LATG);
  8498  004CA0  EE20 F004          	lfsr	2,4
  8499  004CA4  5003               	movf	initDCmotors_parameter@motorR^0,w,c
  8500  004CA6  26D9               	addwf	fsr2l,f,c
  8501  004CA8  5004               	movf	(initDCmotors_parameter@motorR+1)^0,w,c
  8502  004CAA  22DA               	addwfc	fsr2h,f,c
  8503  004CAC  0E7F               	movlw	127
  8504  004CAE  6EDE               	movwf	postinc2,c
  8505  004CB0  0E0F               	movlw	15
  8506  004CB2  6EDD               	movwf	postdec2,c
  8507                           
  8508                           ;dc_motor.c: 54:     motorR->dir_pin = 6;
  8509  004CB4  EE20 F006          	lfsr	2,6
  8510  004CB8  5003               	movf	initDCmotors_parameter@motorR^0,w,c
  8511  004CBA  26D9               	addwf	fsr2l,f,c
  8512  004CBC  5004               	movf	(initDCmotors_parameter@motorR+1)^0,w,c
  8513  004CBE  22DA               	addwfc	fsr2h,f,c
  8514  004CC0  0E06               	movlw	6
  8515  004CC2  6EDF               	movwf	indf2,c
  8516                           
  8517                           ;dc_motor.c: 55:     motorR->PWMperiod = 199;
  8518  004CC4  EE20 F007          	lfsr	2,7
  8519  004CC8  5003               	movf	initDCmotors_parameter@motorR^0,w,c
  8520  004CCA  26D9               	addwf	fsr2l,f,c
  8521  004CCC  5004               	movf	(initDCmotors_parameter@motorR+1)^0,w,c
  8522  004CCE  22DA               	addwfc	fsr2h,f,c
  8523  004CD0  0EC7               	movlw	199
  8524  004CD2  6EDE               	movwf	postinc2,c
  8525  004CD4  0E00               	movlw	0
  8526  004CD6  6EDD               	movwf	postdec2,c
  8527  004CD8  0012               	return		;funcret
  8528  004CDA                     __end_of_initDCmotors_parameter:
  8529                           	callstack 0
  8530                           
  8531 ;; *************** function _initDCmotorsPWM *****************
  8532 ;; Defined at:
  8533 ;;		line 10 in file "dc_motor.c"
  8534 ;; Parameters:    Size  Location     Type
  8535 ;;  PWMperiod       2    0[COMRAM] int 
  8536 ;; Auto vars:     Size  Location     Type
  8537 ;;		None
  8538 ;; Return value:  Size  Location     Type
  8539 ;;                  1    wreg      void 
  8540 ;; Registers used:
  8541 ;;		wreg, status,2
  8542 ;; Tracked objects:
  8543 ;;		On entry : 0/0
  8544 ;;		On exit  : 0/0
  8545 ;;		Unchanged: 0/0
  8546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8547 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8548 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8549 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8550 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8551 ;;Total ram usage:        2 bytes
  8552 ;; Hardware stack levels used: 1
  8553 ;; Hardware stack levels required when called: 1
  8554 ;; This function calls:
  8555 ;;		Nothing
  8556 ;; This function is called by:
  8557 ;;		_main
  8558 ;; This function uses a non-reentrant model
  8559 ;;
  8560                           
  8561                           	psect	text36
  8562  00567C                     __ptext36:
  8563                           	callstack 0
  8564  00567C                     _initDCmotorsPWM:
  8565                           	callstack 29
  8566  00567C                     
  8567                           ;dc_motor.c: 13:     TRISEbits.TRISE2=0;
  8568  00567C  9485               	bcf	133,2,c	;volatile
  8569                           
  8570                           ;dc_motor.c: 14:     TRISCbits.TRISC7=0;
  8571  00567E  9E83               	bcf	131,7,c	;volatile
  8572                           
  8573                           ;dc_motor.c: 15:     TRISGbits.TRISG6=0;
  8574  005680  9C87               	bcf	135,6,c	;volatile
  8575                           
  8576                           ;dc_motor.c: 16:     TRISEbits.TRISE4=0;
  8577  005682  9885               	bcf	133,4,c	;volatile
  8578                           
  8579                           ;dc_motor.c: 17:     LATEbits.LATE2=0;
  8580  005684  947D               	bcf	125,2,c	;volatile
  8581                           
  8582                           ;dc_motor.c: 18:     LATCbits.LATC7=0;
  8583  005686  9E7B               	bcf	123,7,c	;volatile
  8584                           
  8585                           ;dc_motor.c: 19:     LATGbits.LATG6=0;
  8586  005688  9C7F               	bcf	127,6,c	;volatile
  8587                           
  8588                           ;dc_motor.c: 20:     LATEbits.LATE4=0;
  8589  00568A  987D               	bcf	125,4,c	;volatile
  8590  00568C                     
  8591                           ;dc_motor.c: 23:     T2CONbits.CKPS=0b011;
  8592  00568C  50BD               	movf	189,w,c	;volatile
  8593  00568E  0B8F               	andlw	-113
  8594  005690  0930               	iorlw	48
  8595  005692  6EBD               	movwf	189,c	;volatile
  8596                           
  8597                           ;dc_motor.c: 24:     T2HLTbits.MODE=0b00000;
  8598  005694  0EE0               	movlw	-32
  8599  005696  16BE               	andwf	190,f,c	;volatile
  8600                           
  8601                           ;dc_motor.c: 25:     T2CLKCONbits.CS=0b0001;
  8602  005698  50BF               	movf	191,w,c	;volatile
  8603  00569A  0BF0               	andlw	-16
  8604  00569C  0901               	iorlw	1
  8605  00569E  6EBF               	movwf	191,c	;volatile
  8606                           
  8607                           ;dc_motor.c: 28:     T2PR=200-1;
  8608  0056A0  0EC7               	movlw	199
  8609  0056A2  6EBC               	movwf	188,c	;volatile
  8610  0056A4                     
  8611                           ;dc_motor.c: 29:     T2CONbits.ON=1;
  8612  0056A4  8EBD               	bsf	189,7,c	;volatile
  8613                           
  8614                           ;dc_motor.c: 31:     RE2PPS=0x0A;
  8615  0056A6  0E0A               	movlw	10
  8616  0056A8  010E               	movlb	14	; () banked
  8617  0056AA  6F74               	movwf	116,b	;volatile
  8618                           
  8619                           ;dc_motor.c: 32:     RC7PPS=0x0B;
  8620  0056AC  0E0B               	movlw	11
  8621  0056AE  6F69               	movwf	105,b	;volatile
  8622                           
  8623                           ;dc_motor.c: 34:     PWM6DCH=0;
  8624  0056B0  0E00               	movlw	0
  8625  0056B2  6EA3               	movwf	163,c	;volatile
  8626                           
  8627                           ;dc_motor.c: 35:     PWM7DCH=0;
  8628  0056B4  0E00               	movlw	0
  8629  0056B6  6EA0               	movwf	160,c	;volatile
  8630  0056B8                     
  8631                           ; BSR set to: 14
  8632                           ;dc_motor.c: 37:     PWM6CONbits.EN = 1;
  8633  0056B8  8EA4               	bsf	164,7,c	;volatile
  8634  0056BA                     
  8635                           ; BSR set to: 14
  8636                           ;dc_motor.c: 38:     PWM7CONbits.EN = 1;
  8637  0056BA  8EA1               	bsf	161,7,c	;volatile
  8638  0056BC                     
  8639                           ; BSR set to: 14
  8640  0056BC  0012               	return		;funcret
  8641  0056BE                     __end_of_initDCmotorsPWM:
  8642                           	callstack 0
  8643                           
  8644 ;; *************** function _color_click_init *****************
  8645 ;; Defined at:
  8646 ;;		line 67 in file "color.c"
  8647 ;; Parameters:    Size  Location     Type
  8648 ;;		None
  8649 ;; Auto vars:     Size  Location     Type
  8650 ;;		None
  8651 ;; Return value:  Size  Location     Type
  8652 ;;                  1    wreg      void 
  8653 ;; Registers used:
  8654 ;;		wreg, status,2, status,0, cstack
  8655 ;; Tracked objects:
  8656 ;;		On entry : 0/0
  8657 ;;		On exit  : 0/0
  8658 ;;		Unchanged: 0/0
  8659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8660 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8661 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8662 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8663 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8664 ;;Total ram usage:        1 bytes
  8665 ;; Hardware stack levels used: 1
  8666 ;; Hardware stack levels required when called: 4
  8667 ;; This function calls:
  8668 ;;		_I2C_2_Master_Init
  8669 ;;		_color_writetoaddr
  8670 ;; This function is called by:
  8671 ;;		_main
  8672 ;; This function uses a non-reentrant model
  8673 ;;
  8674                           
  8675                           	psect	text37
  8676  0058A0                     __ptext37:
  8677                           	callstack 0
  8678  0058A0                     _color_click_init:
  8679                           	callstack 26
  8680  0058A0                     
  8681                           ;color.c: 70:     I2C_2_Master_Init();
  8682  0058A0  EC99  F02C         	call	_I2C_2_Master_Init	;wreg free
  8683  0058A4                     
  8684                           ;color.c: 73:  color_writetoaddr(0x00, 0x01);
  8685  0058A4  0E01               	movlw	1
  8686  0058A6  6E03               	movwf	color_writetoaddr@value^0,c
  8687  0058A8  0E00               	movlw	0
  8688  0058AA  EC35  F02D         	call	_color_writetoaddr
  8689  0058AE                     
  8690                           ;color.c: 74:     _delay((unsigned long)((3)*(64000000/4000.0)));
  8691  0058AE  0E3F               	movlw	63
  8692  0058B0  6E05               	movwf	??_color_click_init^0,c
  8693  0058B2  0E55               	movlw	85
  8694  0058B4                     u6077:
  8695  0058B4  2EE8               	decfsz	wreg,f,c
  8696  0058B6  D7FE               	bra	u6077
  8697  0058B8  2E05               	decfsz	??_color_click_init^0,f,c
  8698  0058BA  D7FC               	bra	u6077
  8699  0058BC  F000               	nop	
  8700  0058BE                     
  8701                           ;color.c: 77:  color_writetoaddr(0x00, 0x03);
  8702  0058BE  0E03               	movlw	3
  8703  0058C0  6E03               	movwf	color_writetoaddr@value^0,c
  8704  0058C2  0E00               	movlw	0
  8705  0058C4  EC35  F02D         	call	_color_writetoaddr
  8706  0058C8                     
  8707                           ;color.c: 80:  color_writetoaddr(0x01, 0xD5);
  8708  0058C8  0ED5               	movlw	213
  8709  0058CA  6E03               	movwf	color_writetoaddr@value^0,c
  8710  0058CC  0E01               	movlw	1
  8711  0058CE  EC35  F02D         	call	_color_writetoaddr
  8712  0058D2  0012               	return		;funcret
  8713  0058D4                     __end_of_color_click_init:
  8714                           	callstack 0
  8715                           
  8716 ;; *************** function _color_writetoaddr *****************
  8717 ;; Defined at:
  8718 ;;		line 83 in file "color.c"
  8719 ;; Parameters:    Size  Location     Type
  8720 ;;  address         1    wreg     unsigned char 
  8721 ;;  value           1    2[COMRAM] unsigned char 
  8722 ;; Auto vars:     Size  Location     Type
  8723 ;;  address         1    3[COMRAM] unsigned char 
  8724 ;; Return value:  Size  Location     Type
  8725 ;;                  1    wreg      void 
  8726 ;; Registers used:
  8727 ;;		wreg, status,2, status,0, cstack
  8728 ;; Tracked objects:
  8729 ;;		On entry : 0/0
  8730 ;;		On exit  : 0/0
  8731 ;;		Unchanged: 0/0
  8732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8733 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8734 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8735 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8736 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8737 ;;Total ram usage:        2 bytes
  8738 ;; Hardware stack levels used: 1
  8739 ;; Hardware stack levels required when called: 3
  8740 ;; This function calls:
  8741 ;;		_I2C_2_Master_Start
  8742 ;;		_I2C_2_Master_Stop
  8743 ;;		_I2C_2_Master_Write
  8744 ;; This function is called by:
  8745 ;;		_color_click_init
  8746 ;; This function uses a non-reentrant model
  8747 ;;
  8748                           
  8749                           	psect	text38
  8750  005A6A                     __ptext38:
  8751                           	callstack 0
  8752  005A6A                     _color_writetoaddr:
  8753                           	callstack 26
  8754                           
  8755                           ;incstack = 0
  8756                           ;color_writetoaddr@address stored from wreg
  8757  005A6A  6E04               	movwf	color_writetoaddr@address^0,c
  8758  005A6C                     
  8759                           ;color.c: 84:     I2C_2_Master_Start();
  8760  005A6C  EC90  F02D         	call	_I2C_2_Master_Start	;wreg free
  8761                           
  8762                           ;color.c: 85:     I2C_2_Master_Write(0x52 | 0x00);
  8763  005A70  0E52               	movlw	82
  8764  005A72  EC7A  F02D         	call	_I2C_2_Master_Write
  8765                           
  8766                           ;color.c: 86:     I2C_2_Master_Write(0x80 | address);
  8767  005A76  5004               	movf	color_writetoaddr@address^0,w,c
  8768  005A78  0980               	iorlw	128
  8769  005A7A  EC7A  F02D         	call	_I2C_2_Master_Write
  8770                           
  8771                           ;color.c: 87:     I2C_2_Master_Write(value);
  8772  005A7E  5003               	movf	color_writetoaddr@value^0,w,c
  8773  005A80  EC7A  F02D         	call	_I2C_2_Master_Write
  8774                           
  8775                           ;color.c: 88:     I2C_2_Master_Stop();
  8776  005A84  EC8B  F02D         	call	_I2C_2_Master_Stop	;wreg free
  8777  005A88  0012               	return		;funcret
  8778  005A8A                     __end_of_color_writetoaddr:
  8779                           	callstack 0
  8780                           
  8781 ;; *************** function _I2C_2_Master_Write *****************
  8782 ;; Defined at:
  8783 ;;		line 45 in file "i2c.c"
  8784 ;; Parameters:    Size  Location     Type
  8785 ;;  data_byte       1    wreg     unsigned char 
  8786 ;; Auto vars:     Size  Location     Type
  8787 ;;  data_byte       1    1[COMRAM] unsigned char 
  8788 ;; Return value:  Size  Location     Type
  8789 ;;                  1    wreg      void 
  8790 ;; Registers used:
  8791 ;;		wreg, status,2, status,0, cstack
  8792 ;; Tracked objects:
  8793 ;;		On entry : 0/0
  8794 ;;		On exit  : 0/0
  8795 ;;		Unchanged: 0/0
  8796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8797 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8798 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8799 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8800 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8801 ;;Total ram usage:        1 bytes
  8802 ;; Hardware stack levels used: 1
  8803 ;; Hardware stack levels required when called: 2
  8804 ;; This function calls:
  8805 ;;		_I2C_2_Master_Idle
  8806 ;; This function is called by:
  8807 ;;		_color_writetoaddr
  8808 ;;		_color_read_Red
  8809 ;;		_color_read_Blue
  8810 ;;		_color_read_Green
  8811 ;;		_color_read_Clear
  8812 ;; This function uses a non-reentrant model
  8813 ;;
  8814                           
  8815                           	psect	text39
  8816  005AF4                     __ptext39:
  8817                           	callstack 0
  8818  005AF4                     _I2C_2_Master_Write:
  8819                           	callstack 24
  8820                           
  8821                           ;incstack = 0
  8822                           ;I2C_2_Master_Write@data_byte stored from wreg
  8823  005AF4  6E02               	movwf	I2C_2_Master_Write@data_byte^0,c
  8824  005AF6                     
  8825                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  8826  005AF6  ECAE  F02C         	call	_I2C_2_Master_Idle	;wreg free
  8827  005AFA                     
  8828                           ;i2c.c: 48:   SSP2BUF = data_byte;
  8829  005AFA  C002  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  8830  005AFE  0012               	return		;funcret
  8831  005B00                     __end_of_I2C_2_Master_Write:
  8832                           	callstack 0
  8833                           
  8834 ;; *************** function _I2C_2_Master_Stop *****************
  8835 ;; Defined at:
  8836 ;;		line 39 in file "i2c.c"
  8837 ;; Parameters:    Size  Location     Type
  8838 ;;		None
  8839 ;; Auto vars:     Size  Location     Type
  8840 ;;		None
  8841 ;; Return value:  Size  Location     Type
  8842 ;;                  1    wreg      void 
  8843 ;; Registers used:
  8844 ;;		wreg, status,2, status,0, cstack
  8845 ;; Tracked objects:
  8846 ;;		On entry : 0/0
  8847 ;;		On exit  : 0/0
  8848 ;;		Unchanged: 0/0
  8849 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8850 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8851 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8852 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8853 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8854 ;;Total ram usage:        0 bytes
  8855 ;; Hardware stack levels used: 1
  8856 ;; Hardware stack levels required when called: 2
  8857 ;; This function calls:
  8858 ;;		_I2C_2_Master_Idle
  8859 ;; This function is called by:
  8860 ;;		_color_writetoaddr
  8861 ;;		_color_read_Red
  8862 ;;		_color_read_Blue
  8863 ;;		_color_read_Green
  8864 ;;		_color_read_Clear
  8865 ;; This function uses a non-reentrant model
  8866 ;;
  8867                           
  8868                           	psect	text40
  8869  005B16                     __ptext40:
  8870                           	callstack 0
  8871  005B16                     _I2C_2_Master_Stop:
  8872                           	callstack 24
  8873  005B16                     
  8874                           ;i2c.c: 41:   I2C_2_Master_Idle();
  8875  005B16  ECAE  F02C         	call	_I2C_2_Master_Idle	;wreg free
  8876  005B1A                     
  8877                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  8878  005B1A  010E               	movlb	14	; () banked
  8879  005B1C  85DA               	bsf	218,2,b	;volatile
  8880  005B1E                     
  8881                           ; BSR set to: 14
  8882  005B1E  0012               	return		;funcret
  8883  005B20                     __end_of_I2C_2_Master_Stop:
  8884                           	callstack 0
  8885                           
  8886 ;; *************** function _I2C_2_Master_Start *****************
  8887 ;; Defined at:
  8888 ;;		line 27 in file "i2c.c"
  8889 ;; Parameters:    Size  Location     Type
  8890 ;;		None
  8891 ;; Auto vars:     Size  Location     Type
  8892 ;;		None
  8893 ;; Return value:  Size  Location     Type
  8894 ;;                  1    wreg      void 
  8895 ;; Registers used:
  8896 ;;		wreg, status,2, status,0, cstack
  8897 ;; Tracked objects:
  8898 ;;		On entry : 0/0
  8899 ;;		On exit  : 0/0
  8900 ;;		Unchanged: 0/0
  8901 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8902 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8903 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8904 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8905 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8906 ;;Total ram usage:        0 bytes
  8907 ;; Hardware stack levels used: 1
  8908 ;; Hardware stack levels required when called: 2
  8909 ;; This function calls:
  8910 ;;		_I2C_2_Master_Idle
  8911 ;; This function is called by:
  8912 ;;		_color_writetoaddr
  8913 ;;		_color_read_Red
  8914 ;;		_color_read_Blue
  8915 ;;		_color_read_Green
  8916 ;;		_color_read_Clear
  8917 ;; This function uses a non-reentrant model
  8918 ;;
  8919                           
  8920                           	psect	text41
  8921  005B20                     __ptext41:
  8922                           	callstack 0
  8923  005B20                     _I2C_2_Master_Start:
  8924                           	callstack 24
  8925  005B20                     
  8926                           ;i2c.c: 29:   I2C_2_Master_Idle();
  8927  005B20  ECAE  F02C         	call	_I2C_2_Master_Idle	;wreg free
  8928  005B24                     
  8929                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  8930  005B24  010E               	movlb	14	; () banked
  8931  005B26  81DA               	bsf	218,0,b	;volatile
  8932  005B28                     
  8933                           ; BSR set to: 14
  8934  005B28  0012               	return		;funcret
  8935  005B2A                     __end_of_I2C_2_Master_Start:
  8936                           	callstack 0
  8937                           
  8938 ;; *************** function _I2C_2_Master_Idle *****************
  8939 ;; Defined at:
  8940 ;;		line 22 in file "i2c.c"
  8941 ;; Parameters:    Size  Location     Type
  8942 ;;		None
  8943 ;; Auto vars:     Size  Location     Type
  8944 ;;		None
  8945 ;; Return value:  Size  Location     Type
  8946 ;;                  1    wreg      void 
  8947 ;; Registers used:
  8948 ;;		wreg, status,2, status,0
  8949 ;; Tracked objects:
  8950 ;;		On entry : 0/0
  8951 ;;		On exit  : 0/0
  8952 ;;		Unchanged: 0/0
  8953 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8954 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8955 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8956 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8957 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8958 ;;Total ram usage:        1 bytes
  8959 ;; Hardware stack levels used: 1
  8960 ;; Hardware stack levels required when called: 1
  8961 ;; This function calls:
  8962 ;;		Nothing
  8963 ;; This function is called by:
  8964 ;;		_I2C_2_Master_Start
  8965 ;;		_I2C_2_Master_RepStart
  8966 ;;		_I2C_2_Master_Stop
  8967 ;;		_I2C_2_Master_Write
  8968 ;;		_I2C_2_Master_Read
  8969 ;; This function uses a non-reentrant model
  8970 ;;
  8971                           
  8972                           	psect	text42
  8973  00595C                     __ptext42:
  8974                           	callstack 0
  8975  00595C                     _I2C_2_Master_Idle:
  8976                           	callstack 24
  8977  00595C                     l206:
  8978  00595C  010E               	movlb	14	; () banked
  8979  00595E  B5D8               	btfsc	216,2,b	;volatile
  8980  005960  EFB4  F02C         	goto	u3351
  8981  005964  EFB6  F02C         	goto	u3350
  8982  005968                     u3351:
  8983  005968  EFAE  F02C         	goto	l206
  8984  00596C                     u3350:
  8985  00596C                     
  8986                           ; BSR set to: 14
  8987  00596C  CEDA F001          	movff	3802,??_I2C_2_Master_Idle	;volatile
  8988  005970  0E1F               	movlw	31
  8989  005972  1601               	andwf	??_I2C_2_Master_Idle^0,f,c
  8990  005974  A4D8               	btfss	status,2,c
  8991  005976  EFBF  F02C         	goto	u3361
  8992  00597A  EFC1  F02C         	goto	u3360
  8993  00597E                     u3361:
  8994  00597E  EFAE  F02C         	goto	l206
  8995  005982                     u3360:
  8996  005982                     
  8997                           ; BSR set to: 14
  8998  005982  0012               	return		;funcret
  8999  005984                     __end_of_I2C_2_Master_Idle:
  9000                           	callstack 0
  9001                           
  9002 ;; *************** function _I2C_2_Master_Init *****************
  9003 ;; Defined at:
  9004 ;;		line 4 in file "i2c.c"
  9005 ;; Parameters:    Size  Location     Type
  9006 ;;		None
  9007 ;; Auto vars:     Size  Location     Type
  9008 ;;		None
  9009 ;; Return value:  Size  Location     Type
  9010 ;;                  1    wreg      void 
  9011 ;; Registers used:
  9012 ;;		wreg, status,2
  9013 ;; Tracked objects:
  9014 ;;		On entry : 0/0
  9015 ;;		On exit  : 0/0
  9016 ;;		Unchanged: 0/0
  9017 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9018 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9019 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9020 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9021 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9022 ;;Total ram usage:        0 bytes
  9023 ;; Hardware stack levels used: 1
  9024 ;; Hardware stack levels required when called: 1
  9025 ;; This function calls:
  9026 ;;		Nothing
  9027 ;; This function is called by:
  9028 ;;		_color_click_init
  9029 ;;		_main
  9030 ;; This function uses a non-reentrant model
  9031 ;;
  9032                           
  9033                           	psect	text43
  9034  005932                     __ptext43:
  9035                           	callstack 0
  9036  005932                     _I2C_2_Master_Init:
  9037                           	callstack 28
  9038  005932                     
  9039                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  9040  005932  010E               	movlb	14	; () banked
  9041  005934  51D9               	movf	217,w,b	;volatile
  9042  005936  0BF0               	andlw	-16
  9043  005938  0908               	iorlw	8
  9044  00593A  6FD9               	movwf	217,b	;volatile
  9045  00593C                     
  9046                           ; BSR set to: 14
  9047                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  9048  00593C  8BD9               	bsf	217,5,b	;volatile
  9049                           
  9050                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  9051  00593E  0E9F               	movlw	159
  9052  005940  6FD6               	movwf	214,b	;volatile
  9053  005942                     
  9054                           ; BSR set to: 14
  9055                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  9056  005942  8A84               	bsf	132,5,c	;volatile
  9057  005944                     
  9058                           ; BSR set to: 14
  9059                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  9060  005944  8C84               	bsf	132,6,c	;volatile
  9061  005946                     
  9062                           ; BSR set to: 14
  9063                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  9064  005946  9BA7               	bcf	167,5,b	;volatile
  9065  005948                     
  9066                           ; BSR set to: 14
  9067                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  9068  005948  9DA7               	bcf	167,6,b	;volatile
  9069                           
  9070                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  9071  00594A  0E1D               	movlw	29
  9072  00594C  6F1D               	movwf	29,b	;volatile
  9073                           
  9074                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  9075  00594E  0E1E               	movlw	30
  9076  005950  6F1C               	movwf	28,b	;volatile
  9077                           
  9078                           ;i2c.c: 18:   RD5PPS=0x1C;
  9079  005952  0E1C               	movlw	28
  9080  005954  6F6F               	movwf	111,b	;volatile
  9081                           
  9082                           ;i2c.c: 19:   RD6PPS=0x1B;
  9083  005956  0E1B               	movlw	27
  9084  005958  6F70               	movwf	112,b	;volatile
  9085  00595A                     
  9086                           ; BSR set to: 14
  9087  00595A  0012               	return		;funcret
  9088  00595C                     __end_of_I2C_2_Master_Init:
  9089                           	callstack 0
  9090                           
  9091 ;; *************** function _buggylight_init *****************
  9092 ;; Defined at:
  9093 ;;		line 13 in file "color.c"
  9094 ;; Parameters:    Size  Location     Type
  9095 ;;		None
  9096 ;; Auto vars:     Size  Location     Type
  9097 ;;		None
  9098 ;; Return value:  Size  Location     Type
  9099 ;;                  1    wreg      void 
  9100 ;; Registers used:
  9101 ;;		None
  9102 ;; Tracked objects:
  9103 ;;		On entry : 0/0
  9104 ;;		On exit  : 0/0
  9105 ;;		Unchanged: 0/0
  9106 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9107 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9108 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9109 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9110 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9111 ;;Total ram usage:        0 bytes
  9112 ;; Hardware stack levels used: 1
  9113 ;; Hardware stack levels required when called: 1
  9114 ;; This function calls:
  9115 ;;		Nothing
  9116 ;; This function is called by:
  9117 ;;		_main
  9118 ;; This function uses a non-reentrant model
  9119 ;;
  9120                           
  9121                           	psect	text44
  9122  005ADE                     __ptext44:
  9123                           	callstack 0
  9124  005ADE                     _buggylight_init:
  9125                           	callstack 29
  9126  005ADE                     
  9127                           ;color.c: 15:     TRISHbits.TRISH1=0;
  9128  005ADE  9288               	bcf	136,1,c	;volatile
  9129                           
  9130                           ;color.c: 16:     TRISDbits.TRISD4=0;
  9131  005AE0  9884               	bcf	132,4,c	;volatile
  9132                           
  9133                           ;color.c: 17:     TRISDbits.TRISD3=0;
  9134  005AE2  9684               	bcf	132,3,c	;volatile
  9135                           
  9136                           ;color.c: 18:     TRISFbits.TRISF0=0;
  9137  005AE4  9086               	bcf	134,0,c	;volatile
  9138                           
  9139                           ;color.c: 19:     TRISHbits.TRISH0=0;
  9140  005AE6  9088               	bcf	136,0,c	;volatile
  9141                           
  9142                           ;color.c: 21:     LATHbits.LATH1 = 0;
  9143  005AE8  9280               	bcf	128,1,c	;volatile
  9144                           
  9145                           ;color.c: 22:     LATDbits.LATD4 = 0;
  9146  005AEA  987C               	bcf	124,4,c	;volatile
  9147                           
  9148                           ;color.c: 23:     LATDbits.LATD3 = 0;
  9149  005AEC  967C               	bcf	124,3,c	;volatile
  9150                           
  9151                           ;color.c: 24:     LATFbits.LATF0 = 0;
  9152  005AEE  907E               	bcf	126,0,c	;volatile
  9153                           
  9154                           ;color.c: 25:     LATHbits.LATH0 = 0;
  9155  005AF0  9080               	bcf	128,0,c	;volatile
  9156  005AF2  0012               	return		;funcret
  9157  005AF4                     __end_of_buggylight_init:
  9158                           	callstack 0
  9159                           
  9160 ;; *************** function _action *****************
  9161 ;; Defined at:
  9162 ;;		line 18 in file "movement.c"
  9163 ;; Parameters:    Size  Location     Type
  9164 ;;  color           1    wreg     unsigned char 
  9165 ;;  mL              2  128[BANK0 ] PTR struct DC_motor
  9166 ;;		 -> main@motorL(10), 
  9167 ;;  mR              2  130[BANK0 ] PTR struct DC_motor
  9168 ;;		 -> main@motorR(10), 
  9169 ;; Auto vars:     Size  Location     Type
  9170 ;;  color           1  200[BANK2 ] unsigned char 
  9171 ;;  buf           100  100[BANK2 ] unsigned char [100]
  9172 ;; Return value:  Size  Location     Type
  9173 ;;                  1    wreg      void 
  9174 ;; Registers used:
  9175 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9176 ;; Tracked objects:
  9177 ;;		On entry : 0/0
  9178 ;;		On exit  : 0/0
  9179 ;;		Unchanged: 0/0
  9180 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9181 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9182 ;;      Locals:         0       0       0     101       0       0       0       0       0       0       0       0       
      +0       0       0
  9183 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9184 ;;      Totals:         0       4       0     101       0       0       0       0       0       0       0       0       
      +0       0       0
  9185 ;;Total ram usage:      105 bytes
  9186 ;; Hardware stack levels used: 1
  9187 ;; Hardware stack levels required when called: 11
  9188 ;; This function calls:
  9189 ;;		_goback
  9190 ;;		_reverse_square
  9191 ;;		_sendStringSerial4
  9192 ;;		_short_reverse
  9193 ;;		_sprintf
  9194 ;;		_toggle_light
  9195 ;;		_turnLeft
  9196 ;;		_turnRight
  9197 ;; This function is called by:
  9198 ;;		_main
  9199 ;; This function uses a non-reentrant model
  9200 ;;
  9201                           
  9202                           	psect	text45
  9203  002DE0                     __ptext45:
  9204                           	callstack 0
  9205  002DE0                     _action:
  9206                           	callstack 19
  9207                           
  9208                           ;incstack = 0
  9209                           ;action@color stored from wreg
  9210  002DE0  0102               	movlb	2	; () banked
  9211  002DE2  6FC8               	movwf	action@color& (0+255),b
  9212  002DE4                     
  9213                           ;movement.c: 18: void action(unsigned char color, struct DC_motor *mL, struct DC_motor *
      +                          mR);movement.c: 19: {;movement.c: 22:     if (color != 0){
  9214  002DE4  0102               	movlb	2	; () banked
  9215  002DE6  51C8               	movf	action@color& (0+255),w,b
  9216  002DE8  B4D8               	btfsc	status,2,c
  9217  002DEA  EFF9  F016         	goto	u5531
  9218  002DEE  EFFB  F016         	goto	u5530
  9219  002DF2                     u5531:
  9220  002DF2  EF73  F018         	goto	l640
  9221  002DF6                     u5530:
  9222  002DF6                     
  9223                           ; BSR set to: 2
  9224                           ;movement.c: 24:         char buf[100];;movement.c: 25:         sprintf(buf,"result: %d\
      +                          r\n", color);
  9225  002DF6  0E64               	movlw	low action@buf
  9226  002DF8  0100               	movlb	0	; () banked
  9227  002DFA  6F60               	movwf	sprintf@s& (0+255),b
  9228  002DFC  0E02               	movlw	high action@buf
  9229  002DFE  6F61               	movwf	(sprintf@s+1)& (0+255),b
  9230  002E00  0E24               	movlw	low STR_3
  9231  002E02  6F62               	movwf	sprintf@fmt& (0+255),b
  9232  002E04  0E0E               	movlw	high STR_3
  9233  002E06  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
  9234  002E08  C2C8  F064         	movff	action@color,?_sprintf+4
  9235  002E0C  6B65               	clrf	(?_sprintf+5)& (0+255),b
  9236  002E0E  EC0F  F02A         	call	_sprintf	;wreg free
  9237  002E12                     
  9238                           ;movement.c: 26:         sendStringSerial4(buf);
  9239  002E12  0E64               	movlw	low action@buf
  9240  002E14  6E02               	movwf	sendStringSerial4@string^0,c
  9241  002E16  0E02               	movlw	high action@buf
  9242  002E18  6E03               	movwf	(sendStringSerial4@string+1)^0,c
  9243  002E1A  EC6A  F02C         	call	_sendStringSerial4	;wreg free
  9244  002E1E                     
  9245                           ;movement.c: 27:         if (color == 1){
  9246  002E1E  0102               	movlb	2	; () banked
  9247  002E20  05C8               	decf	action@color& (0+255),w,b
  9248  002E22  A4D8               	btfss	status,2,c
  9249  002E24  EF16  F017         	goto	u5541
  9250  002E28  EF18  F017         	goto	u5540
  9251  002E2C                     u5541:
  9252  002E2C  EF3C  F017         	goto	l5469
  9253  002E30                     u5540:
  9254  002E30                     
  9255                           ; BSR set to: 2
  9256                           ;movement.c: 28:             short_reverse(mL,mR);
  9257  002E30  C0E0  F026         	movff	action@mL,short_reverse@mL
  9258  002E34  C0E1  F027         	movff	action@mL+1,short_reverse@mL+1
  9259  002E38  C0E2  F028         	movff	action@mR,short_reverse@mR
  9260  002E3C  C0E3  F029         	movff	action@mR+1,short_reverse@mR+1
  9261  002E40  EC7F  F02B         	call	_short_reverse	;wreg free
  9262                           
  9263                           ;movement.c: 29:             turnRight(mL,mR,90);
  9264  002E44  C0E0  F020         	movff	action@mL,turnRight@mL
  9265  002E48  C0E1  F021         	movff	action@mL+1,turnRight@mL+1
  9266  002E4C  C0E2  F022         	movff	action@mR,turnRight@mR
  9267  002E50  C0E3  F023         	movff	action@mR+1,turnRight@mR+1
  9268  002E54  0E5A               	movlw	90
  9269  002E56  6E24               	movwf	turnRight@angle_right^0,c
  9270  002E58  ECA1  F020         	call	_turnRight	;wreg free
  9271  002E5C                     
  9272                           ;movement.c: 30:             memory[array_index] = 1;
  9273  002E5C  0103               	movlb	3	; () banked
  9274  002E5E  516B               	movf	_array_index& (0+255),w,b
  9275  002E60  0D02               	mullw	2
  9276  002E62  0E3C               	movlw	low _memory
  9277  002E64  24F3               	addwf	243,w,c
  9278  002E66  6ED9               	movwf	fsr2l,c
  9279  002E68  0E03               	movlw	high _memory
  9280  002E6A  20F4               	addwfc	prodh,w,c
  9281  002E6C  6EDA               	movwf	fsr2h,c
  9282  002E6E  0E01               	movlw	1
  9283  002E70  6EDE               	movwf	postinc2,c
  9284  002E72  0E00               	movlw	0
  9285  002E74  6EDD               	movwf	postdec2,c
  9286  002E76                     
  9287                           ; BSR set to: 3
  9288                           ;movement.c: 31:             array_index++;
  9289  002E76  2B6B               	incf	_array_index& (0+255),f,b
  9290  002E78                     l5469:
  9291                           
  9292                           ;movement.c: 33:         if (color == 2){
  9293  002E78  0E02               	movlw	2
  9294  002E7A  0102               	movlb	2	; () banked
  9295  002E7C  19C8               	xorwf	action@color& (0+255),w,b
  9296  002E7E  A4D8               	btfss	status,2,c
  9297  002E80  EF44  F017         	goto	u5551
  9298  002E84  EF46  F017         	goto	u5550
  9299  002E88                     u5551:
  9300  002E88  EF6A  F017         	goto	l5477
  9301  002E8C                     u5550:
  9302  002E8C                     
  9303                           ; BSR set to: 2
  9304                           ;movement.c: 34:             short_reverse(mL,mR);
  9305  002E8C  C0E0  F026         	movff	action@mL,short_reverse@mL
  9306  002E90  C0E1  F027         	movff	action@mL+1,short_reverse@mL+1
  9307  002E94  C0E2  F028         	movff	action@mR,short_reverse@mR
  9308  002E98  C0E3  F029         	movff	action@mR+1,short_reverse@mR+1
  9309  002E9C  EC7F  F02B         	call	_short_reverse	;wreg free
  9310                           
  9311                           ;movement.c: 35:             turnLeft(mL,mR,90);
  9312  002EA0  C0E0  F020         	movff	action@mL,turnLeft@mL
  9313  002EA4  C0E1  F021         	movff	action@mL+1,turnLeft@mL+1
  9314  002EA8  C0E2  F022         	movff	action@mR,turnLeft@mR
  9315  002EAC  C0E3  F023         	movff	action@mR+1,turnLeft@mR+1
  9316  002EB0  0E5A               	movlw	90
  9317  002EB2  6E24               	movwf	turnLeft@angle_left^0,c
  9318  002EB4  EC68  F021         	call	_turnLeft	;wreg free
  9319  002EB8                     
  9320                           ;movement.c: 36:             memory[array_index] = 2;
  9321  002EB8  0103               	movlb	3	; () banked
  9322  002EBA  516B               	movf	_array_index& (0+255),w,b
  9323  002EBC  0D02               	mullw	2
  9324  002EBE  0E3C               	movlw	low _memory
  9325  002EC0  24F3               	addwf	243,w,c
  9326  002EC2  6ED9               	movwf	fsr2l,c
  9327  002EC4  0E03               	movlw	high _memory
  9328  002EC6  20F4               	addwfc	prodh,w,c
  9329  002EC8  6EDA               	movwf	fsr2h,c
  9330  002ECA  0E02               	movlw	2
  9331  002ECC  6EDE               	movwf	postinc2,c
  9332  002ECE  0E00               	movlw	0
  9333  002ED0  6EDD               	movwf	postdec2,c
  9334  002ED2                     
  9335                           ; BSR set to: 3
  9336                           ;movement.c: 37:             array_index++;
  9337  002ED2  2B6B               	incf	_array_index& (0+255),f,b
  9338  002ED4                     l5477:
  9339                           
  9340                           ;movement.c: 39:         if (color == 3){
  9341  002ED4  0E03               	movlw	3
  9342  002ED6  0102               	movlb	2	; () banked
  9343  002ED8  19C8               	xorwf	action@color& (0+255),w,b
  9344  002EDA  A4D8               	btfss	status,2,c
  9345  002EDC  EF72  F017         	goto	u5561
  9346  002EE0  EF74  F017         	goto	u5560
  9347  002EE4                     u5561:
  9348  002EE4  EF98  F017         	goto	l5485
  9349  002EE8                     u5560:
  9350  002EE8                     
  9351                           ; BSR set to: 2
  9352                           ;movement.c: 40:             short_reverse(mL,mR);
  9353  002EE8  C0E0  F026         	movff	action@mL,short_reverse@mL
  9354  002EEC  C0E1  F027         	movff	action@mL+1,short_reverse@mL+1
  9355  002EF0  C0E2  F028         	movff	action@mR,short_reverse@mR
  9356  002EF4  C0E3  F029         	movff	action@mR+1,short_reverse@mR+1
  9357  002EF8  EC7F  F02B         	call	_short_reverse	;wreg free
  9358                           
  9359                           ;movement.c: 41:             turnLeft(mL,mR,180);
  9360  002EFC  C0E0  F020         	movff	action@mL,turnLeft@mL
  9361  002F00  C0E1  F021         	movff	action@mL+1,turnLeft@mL+1
  9362  002F04  C0E2  F022         	movff	action@mR,turnLeft@mR
  9363  002F08  C0E3  F023         	movff	action@mR+1,turnLeft@mR+1
  9364  002F0C  0EB4               	movlw	180
  9365  002F0E  6E24               	movwf	turnLeft@angle_left^0,c
  9366  002F10  EC68  F021         	call	_turnLeft	;wreg free
  9367  002F14                     
  9368                           ;movement.c: 42:             memory[array_index] = 3;
  9369  002F14  0103               	movlb	3	; () banked
  9370  002F16  516B               	movf	_array_index& (0+255),w,b
  9371  002F18  0D02               	mullw	2
  9372  002F1A  0E3C               	movlw	low _memory
  9373  002F1C  24F3               	addwf	243,w,c
  9374  002F1E  6ED9               	movwf	fsr2l,c
  9375  002F20  0E03               	movlw	high _memory
  9376  002F22  20F4               	addwfc	prodh,w,c
  9377  002F24  6EDA               	movwf	fsr2h,c
  9378  002F26  0E03               	movlw	3
  9379  002F28  6EDE               	movwf	postinc2,c
  9380  002F2A  0E00               	movlw	0
  9381  002F2C  6EDD               	movwf	postdec2,c
  9382  002F2E                     
  9383                           ; BSR set to: 3
  9384                           ;movement.c: 43:             array_index++;
  9385  002F2E  2B6B               	incf	_array_index& (0+255),f,b
  9386  002F30                     l5485:
  9387                           
  9388                           ;movement.c: 45:         if (color == 4){
  9389  002F30  0E04               	movlw	4
  9390  002F32  0102               	movlb	2	; () banked
  9391  002F34  19C8               	xorwf	action@color& (0+255),w,b
  9392  002F36  A4D8               	btfss	status,2,c
  9393  002F38  EFA0  F017         	goto	u5571
  9394  002F3C  EFA2  F017         	goto	u5570
  9395  002F40                     u5571:
  9396  002F40  EFC6  F017         	goto	l5493
  9397  002F44                     u5570:
  9398  002F44                     
  9399                           ; BSR set to: 2
  9400                           ;movement.c: 46:             reverse_square(mL,mR);
  9401  002F44  C0E0  F026         	movff	action@mL,reverse_square@mL
  9402  002F48  C0E1  F027         	movff	action@mL+1,reverse_square@mL+1
  9403  002F4C  C0E2  F028         	movff	action@mR,reverse_square@mR
  9404  002F50  C0E3  F029         	movff	action@mR+1,reverse_square@mR+1
  9405  002F54  EC9F  F02B         	call	_reverse_square	;wreg free
  9406                           
  9407                           ;movement.c: 47:             turnRight(mL,mR,90);
  9408  002F58  C0E0  F020         	movff	action@mL,turnRight@mL
  9409  002F5C  C0E1  F021         	movff	action@mL+1,turnRight@mL+1
  9410  002F60  C0E2  F022         	movff	action@mR,turnRight@mR
  9411  002F64  C0E3  F023         	movff	action@mR+1,turnRight@mR+1
  9412  002F68  0E5A               	movlw	90
  9413  002F6A  6E24               	movwf	turnRight@angle_right^0,c
  9414  002F6C  ECA1  F020         	call	_turnRight	;wreg free
  9415  002F70                     
  9416                           ;movement.c: 48:             memory[array_index] = 4;
  9417  002F70  0103               	movlb	3	; () banked
  9418  002F72  516B               	movf	_array_index& (0+255),w,b
  9419  002F74  0D02               	mullw	2
  9420  002F76  0E3C               	movlw	low _memory
  9421  002F78  24F3               	addwf	243,w,c
  9422  002F7A  6ED9               	movwf	fsr2l,c
  9423  002F7C  0E03               	movlw	high _memory
  9424  002F7E  20F4               	addwfc	prodh,w,c
  9425  002F80  6EDA               	movwf	fsr2h,c
  9426  002F82  0E04               	movlw	4
  9427  002F84  6EDE               	movwf	postinc2,c
  9428  002F86  0E00               	movlw	0
  9429  002F88  6EDD               	movwf	postdec2,c
  9430  002F8A                     
  9431                           ; BSR set to: 3
  9432                           ;movement.c: 49:             array_index++;
  9433  002F8A  2B6B               	incf	_array_index& (0+255),f,b
  9434  002F8C                     l5493:
  9435                           
  9436                           ;movement.c: 51:         if (color == 5){
  9437  002F8C  0E05               	movlw	5
  9438  002F8E  0102               	movlb	2	; () banked
  9439  002F90  19C8               	xorwf	action@color& (0+255),w,b
  9440  002F92  A4D8               	btfss	status,2,c
  9441  002F94  EFCE  F017         	goto	u5581
  9442  002F98  EFD0  F017         	goto	u5580
  9443  002F9C                     u5581:
  9444  002F9C  EFF4  F017         	goto	l5501
  9445  002FA0                     u5580:
  9446  002FA0                     
  9447                           ; BSR set to: 2
  9448                           ;movement.c: 52:             reverse_square(mL,mR);
  9449  002FA0  C0E0  F026         	movff	action@mL,reverse_square@mL
  9450  002FA4  C0E1  F027         	movff	action@mL+1,reverse_square@mL+1
  9451  002FA8  C0E2  F028         	movff	action@mR,reverse_square@mR
  9452  002FAC  C0E3  F029         	movff	action@mR+1,reverse_square@mR+1
  9453  002FB0  EC9F  F02B         	call	_reverse_square	;wreg free
  9454                           
  9455                           ;movement.c: 53:             turnLeft(mL,mR,90);
  9456  002FB4  C0E0  F020         	movff	action@mL,turnLeft@mL
  9457  002FB8  C0E1  F021         	movff	action@mL+1,turnLeft@mL+1
  9458  002FBC  C0E2  F022         	movff	action@mR,turnLeft@mR
  9459  002FC0  C0E3  F023         	movff	action@mR+1,turnLeft@mR+1
  9460  002FC4  0E5A               	movlw	90
  9461  002FC6  6E24               	movwf	turnLeft@angle_left^0,c
  9462  002FC8  EC68  F021         	call	_turnLeft	;wreg free
  9463  002FCC                     
  9464                           ;movement.c: 54:             memory[array_index] = 5;
  9465  002FCC  0103               	movlb	3	; () banked
  9466  002FCE  516B               	movf	_array_index& (0+255),w,b
  9467  002FD0  0D02               	mullw	2
  9468  002FD2  0E3C               	movlw	low _memory
  9469  002FD4  24F3               	addwf	243,w,c
  9470  002FD6  6ED9               	movwf	fsr2l,c
  9471  002FD8  0E03               	movlw	high _memory
  9472  002FDA  20F4               	addwfc	prodh,w,c
  9473  002FDC  6EDA               	movwf	fsr2h,c
  9474  002FDE  0E05               	movlw	5
  9475  002FE0  6EDE               	movwf	postinc2,c
  9476  002FE2  0E00               	movlw	0
  9477  002FE4  6EDD               	movwf	postdec2,c
  9478  002FE6                     
  9479                           ; BSR set to: 3
  9480                           ;movement.c: 55:             array_index++;
  9481  002FE6  2B6B               	incf	_array_index& (0+255),f,b
  9482  002FE8                     l5501:
  9483                           
  9484                           ;movement.c: 57:         if (color == 6){
  9485  002FE8  0E06               	movlw	6
  9486  002FEA  0102               	movlb	2	; () banked
  9487  002FEC  19C8               	xorwf	action@color& (0+255),w,b
  9488  002FEE  A4D8               	btfss	status,2,c
  9489  002FF0  EFFC  F017         	goto	u5591
  9490  002FF4  EFFE  F017         	goto	u5590
  9491  002FF8                     u5591:
  9492  002FF8  EF22  F018         	goto	l5509
  9493  002FFC                     u5590:
  9494  002FFC                     
  9495                           ; BSR set to: 2
  9496                           ;movement.c: 58:             short_reverse(mL,mR);
  9497  002FFC  C0E0  F026         	movff	action@mL,short_reverse@mL
  9498  003000  C0E1  F027         	movff	action@mL+1,short_reverse@mL+1
  9499  003004  C0E2  F028         	movff	action@mR,short_reverse@mR
  9500  003008  C0E3  F029         	movff	action@mR+1,short_reverse@mR+1
  9501  00300C  EC7F  F02B         	call	_short_reverse	;wreg free
  9502                           
  9503                           ;movement.c: 59:             turnRight(mL,mR,135);
  9504  003010  C0E0  F020         	movff	action@mL,turnRight@mL
  9505  003014  C0E1  F021         	movff	action@mL+1,turnRight@mL+1
  9506  003018  C0E2  F022         	movff	action@mR,turnRight@mR
  9507  00301C  C0E3  F023         	movff	action@mR+1,turnRight@mR+1
  9508  003020  0E87               	movlw	135
  9509  003022  6E24               	movwf	turnRight@angle_right^0,c
  9510  003024  ECA1  F020         	call	_turnRight	;wreg free
  9511  003028                     
  9512                           ;movement.c: 60:             memory[array_index] = 6;
  9513  003028  0103               	movlb	3	; () banked
  9514  00302A  516B               	movf	_array_index& (0+255),w,b
  9515  00302C  0D02               	mullw	2
  9516  00302E  0E3C               	movlw	low _memory
  9517  003030  24F3               	addwf	243,w,c
  9518  003032  6ED9               	movwf	fsr2l,c
  9519  003034  0E03               	movlw	high _memory
  9520  003036  20F4               	addwfc	prodh,w,c
  9521  003038  6EDA               	movwf	fsr2h,c
  9522  00303A  0E06               	movlw	6
  9523  00303C  6EDE               	movwf	postinc2,c
  9524  00303E  0E00               	movlw	0
  9525  003040  6EDD               	movwf	postdec2,c
  9526  003042                     
  9527                           ; BSR set to: 3
  9528                           ;movement.c: 61:             array_index++;
  9529  003042  2B6B               	incf	_array_index& (0+255),f,b
  9530  003044                     l5509:
  9531                           
  9532                           ;movement.c: 63:         if (color == 7){
  9533  003044  0E07               	movlw	7
  9534  003046  0102               	movlb	2	; () banked
  9535  003048  19C8               	xorwf	action@color& (0+255),w,b
  9536  00304A  A4D8               	btfss	status,2,c
  9537  00304C  EF2A  F018         	goto	u5601
  9538  003050  EF2C  F018         	goto	u5600
  9539  003054                     u5601:
  9540  003054  EF50  F018         	goto	l5517
  9541  003058                     u5600:
  9542  003058                     
  9543                           ; BSR set to: 2
  9544                           ;movement.c: 64:             short_reverse(mL,mR);
  9545  003058  C0E0  F026         	movff	action@mL,short_reverse@mL
  9546  00305C  C0E1  F027         	movff	action@mL+1,short_reverse@mL+1
  9547  003060  C0E2  F028         	movff	action@mR,short_reverse@mR
  9548  003064  C0E3  F029         	movff	action@mR+1,short_reverse@mR+1
  9549  003068  EC7F  F02B         	call	_short_reverse	;wreg free
  9550                           
  9551                           ;movement.c: 65:             turnLeft(mL,mR,135);
  9552  00306C  C0E0  F020         	movff	action@mL,turnLeft@mL
  9553  003070  C0E1  F021         	movff	action@mL+1,turnLeft@mL+1
  9554  003074  C0E2  F022         	movff	action@mR,turnLeft@mR
  9555  003078  C0E3  F023         	movff	action@mR+1,turnLeft@mR+1
  9556  00307C  0E87               	movlw	135
  9557  00307E  6E24               	movwf	turnLeft@angle_left^0,c
  9558  003080  EC68  F021         	call	_turnLeft	;wreg free
  9559  003084                     
  9560                           ;movement.c: 66:             memory[array_index] = 7;
  9561  003084  0103               	movlb	3	; () banked
  9562  003086  516B               	movf	_array_index& (0+255),w,b
  9563  003088  0D02               	mullw	2
  9564  00308A  0E3C               	movlw	low _memory
  9565  00308C  24F3               	addwf	243,w,c
  9566  00308E  6ED9               	movwf	fsr2l,c
  9567  003090  0E03               	movlw	high _memory
  9568  003092  20F4               	addwfc	prodh,w,c
  9569  003094  6EDA               	movwf	fsr2h,c
  9570  003096  0E07               	movlw	7
  9571  003098  6EDE               	movwf	postinc2,c
  9572  00309A  0E00               	movlw	0
  9573  00309C  6EDD               	movwf	postdec2,c
  9574  00309E                     
  9575                           ; BSR set to: 3
  9576                           ;movement.c: 67:             array_index++;
  9577  00309E  2B6B               	incf	_array_index& (0+255),f,b
  9578  0030A0                     l5517:
  9579                           
  9580                           ;movement.c: 69:         if (color == 8){
  9581  0030A0  0E08               	movlw	8
  9582  0030A2  0102               	movlb	2	; () banked
  9583  0030A4  19C8               	xorwf	action@color& (0+255),w,b
  9584  0030A6  A4D8               	btfss	status,2,c
  9585  0030A8  EF58  F018         	goto	u5611
  9586  0030AC  EF5A  F018         	goto	u5610
  9587  0030B0                     u5611:
  9588  0030B0  EF73  F018         	goto	l640
  9589  0030B4                     u5610:
  9590  0030B4                     
  9591                           ; BSR set to: 2
  9592                           ;movement.c: 70:             toggle_light(2,1);
  9593  0030B4  0E01               	movlw	1
  9594  0030B6  6E01               	movwf	toggle_light@toggletime^0,c
  9595  0030B8  0E02               	movlw	2
  9596  0030BA  ECE9  F019         	call	_toggle_light
  9597  0030BE                     
  9598                           ;movement.c: 71:             short_reverse(mL,mR);
  9599  0030BE  C0E0  F026         	movff	action@mL,short_reverse@mL
  9600  0030C2  C0E1  F027         	movff	action@mL+1,short_reverse@mL+1
  9601  0030C6  C0E2  F028         	movff	action@mR,short_reverse@mR
  9602  0030CA  C0E3  F029         	movff	action@mR+1,short_reverse@mR+1
  9603  0030CE  EC7F  F02B         	call	_short_reverse	;wreg free
  9604  0030D2                     
  9605                           ;movement.c: 72:             goback(mL,mR);
  9606  0030D2  C0E0  F058         	movff	action@mL,goback@mL
  9607  0030D6  C0E1  F059         	movff	action@mL+1,goback@mL+1
  9608  0030DA  C0E2  F05A         	movff	action@mR,goback@mR
  9609  0030DE  C0E3  F05B         	movff	action@mR+1,goback@mR+1
  9610  0030E2  EC3A  F015         	call	_goback	;wreg free
  9611  0030E6                     l640:
  9612  0030E6  0012               	return		;funcret
  9613  0030E8                     __end_of_action:
  9614                           	callstack 0
  9615                           
  9616 ;; *************** function _toggle_light *****************
  9617 ;; Defined at:
  9618 ;;		line 29 in file "color.c"
  9619 ;; Parameters:    Size  Location     Type
  9620 ;;  lightnumber     1    wreg     unsigned char 
  9621 ;;  toggletime      1    0[COMRAM] unsigned char 
  9622 ;; Auto vars:     Size  Location     Type
  9623 ;;  lightnumber     1    4[COMRAM] unsigned char 
  9624 ;;  i               1    3[COMRAM] unsigned char 
  9625 ;; Return value:  Size  Location     Type
  9626 ;;                  1    wreg      void 
  9627 ;; Registers used:
  9628 ;;		wreg, status,2, status,0
  9629 ;; Tracked objects:
  9630 ;;		On entry : 0/0
  9631 ;;		On exit  : 0/0
  9632 ;;		Unchanged: 0/0
  9633 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9634 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9635 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9636 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9637 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9638 ;;Total ram usage:        5 bytes
  9639 ;; Hardware stack levels used: 1
  9640 ;; Hardware stack levels required when called: 1
  9641 ;; This function calls:
  9642 ;;		Nothing
  9643 ;; This function is called by:
  9644 ;;		_calibrate_white
  9645 ;;		_detect_color
  9646 ;;		_amb_light_measure
  9647 ;;		_action
  9648 ;; This function uses a non-reentrant model
  9649 ;;
  9650                           
  9651                           	psect	text46
  9652  0033D2                     __ptext46:
  9653                           	callstack 0
  9654  0033D2                     _toggle_light:
  9655                           	callstack 27
  9656                           
  9657                           ;incstack = 0
  9658                           ;toggle_light@lightnumber stored from wreg
  9659  0033D2  6E05               	movwf	toggle_light@lightnumber^0,c
  9660  0033D4                     
  9661                           ;color.c: 29: void toggle_light(unsigned char lightnumber, unsigned char toggletime);col
      +                          or.c: 30: {;color.c: 31:     unsigned char i = 0;
  9662  0033D4  0E00               	movlw	0
  9663  0033D6  6E04               	movwf	toggle_light@i^0,c
  9664                           
  9665                           ;color.c: 33:     for (i = 0; i < toggletime; i++){
  9666  0033D8  0E00               	movlw	0
  9667  0033DA  6E04               	movwf	toggle_light@i^0,c
  9668  0033DC  EF35  F01B         	goto	l74
  9669  0033E0                     l4531:
  9670                           
  9671                           ;color.c: 34:         if (lightnumber == 1){
  9672  0033E0  0405               	decf	toggle_light@lightnumber^0,w,c
  9673  0033E2  A4D8               	btfss	status,2,c
  9674  0033E4  EFF6  F019         	goto	u4361
  9675  0033E8  EFF8  F019         	goto	u4360
  9676  0033EC                     u4361:
  9677  0033EC  EF30  F01A         	goto	l4539
  9678  0033F0                     u4360:
  9679  0033F0                     
  9680                           ;color.c: 35:             LATHbits.LATH1 = !LATHbits.LATH1;
  9681  0033F0  A280               	btfss	128,1,c	;volatile
  9682  0033F2  EFFD  F019         	goto	u4371
  9683  0033F6  EF01  F01A         	goto	u4370
  9684  0033FA                     u4371:
  9685  0033FA  6A02               	clrf	??_toggle_light^0,c
  9686  0033FC  2A02               	incf	??_toggle_light^0,f,c
  9687  0033FE  EF02  F01A         	goto	u4388
  9688  003402                     u4370:
  9689  003402  6A02               	clrf	??_toggle_light^0,c
  9690  003404                     u4388:
  9691  003404  4602               	rlncf	??_toggle_light^0,f,c
  9692  003406  5080               	movf	128,w,c	;volatile
  9693  003408  1802               	xorwf	??_toggle_light^0,w,c
  9694  00340A  0BFD               	andlw	-3
  9695  00340C  1802               	xorwf	??_toggle_light^0,w,c
  9696  00340E  6E80               	movwf	128,c	;volatile
  9697  003410                     
  9698                           ;color.c: 36:             _delay((unsigned long)((500)*(64000000/4000.0)));
  9699  003410  0E29               	movlw	41
  9700  003412  6E03               	movwf	(??_toggle_light+1)^0,c
  9701  003414  0E96               	movlw	150
  9702  003416  6E02               	movwf	??_toggle_light^0,c
  9703  003418  0E7F               	movlw	127
  9704  00341A                     u6087:
  9705  00341A  2EE8               	decfsz	wreg,f,c
  9706  00341C  D7FE               	bra	u6087
  9707  00341E  2E02               	decfsz	??_toggle_light^0,f,c
  9708  003420  D7FC               	bra	u6087
  9709  003422  2E03               	decfsz	(??_toggle_light+1)^0,f,c
  9710  003424  D7FA               	bra	u6087
  9711  003426  F000               	nop	
  9712  003428                     
  9713                           ;color.c: 37:             LATHbits.LATH1 = !LATHbits.LATH1;
  9714  003428  A280               	btfss	128,1,c	;volatile
  9715  00342A  EF19  F01A         	goto	u4391
  9716  00342E  EF1D  F01A         	goto	u4390
  9717  003432                     u4391:
  9718  003432  6A02               	clrf	??_toggle_light^0,c
  9719  003434  2A02               	incf	??_toggle_light^0,f,c
  9720  003436  EF1E  F01A         	goto	u4408
  9721  00343A                     u4390:
  9722  00343A  6A02               	clrf	??_toggle_light^0,c
  9723  00343C                     u4408:
  9724  00343C  4602               	rlncf	??_toggle_light^0,f,c
  9725  00343E  5080               	movf	128,w,c	;volatile
  9726  003440  1802               	xorwf	??_toggle_light^0,w,c
  9727  003442  0BFD               	andlw	-3
  9728  003444  1802               	xorwf	??_toggle_light^0,w,c
  9729  003446  6E80               	movwf	128,c	;volatile
  9730                           
  9731                           ;color.c: 38:             _delay((unsigned long)((500)*(64000000/4000.0)));
  9732  003448  0E29               	movlw	41
  9733  00344A  6E03               	movwf	(??_toggle_light+1)^0,c
  9734  00344C  0E96               	movlw	150
  9735  00344E  6E02               	movwf	??_toggle_light^0,c
  9736  003450  0E7F               	movlw	127
  9737  003452                     u6097:
  9738  003452  2EE8               	decfsz	wreg,f,c
  9739  003454  D7FE               	bra	u6097
  9740  003456  2E02               	decfsz	??_toggle_light^0,f,c
  9741  003458  D7FC               	bra	u6097
  9742  00345A  2E03               	decfsz	(??_toggle_light+1)^0,f,c
  9743  00345C  D7FA               	bra	u6097
  9744  00345E  F000               	nop	
  9745  003460                     l4539:
  9746                           
  9747                           ;color.c: 40:         if (lightnumber == 2){
  9748  003460  0E02               	movlw	2
  9749  003462  1805               	xorwf	toggle_light@lightnumber^0,w,c
  9750  003464  A4D8               	btfss	status,2,c
  9751  003466  EF37  F01A         	goto	u4411
  9752  00346A  EF39  F01A         	goto	u4410
  9753  00346E                     u4411:
  9754  00346E  EF71  F01A         	goto	l4547
  9755  003472                     u4410:
  9756  003472                     
  9757                           ;color.c: 41:             LATDbits.LATD4 = !LATDbits.LATD4;
  9758  003472  A87C               	btfss	124,4,c	;volatile
  9759  003474  EF3E  F01A         	goto	u4421
  9760  003478  EF42  F01A         	goto	u4420
  9761  00347C                     u4421:
  9762  00347C  6A02               	clrf	??_toggle_light^0,c
  9763  00347E  2A02               	incf	??_toggle_light^0,f,c
  9764  003480  EF43  F01A         	goto	u4438
  9765  003484                     u4420:
  9766  003484  6A02               	clrf	??_toggle_light^0,c
  9767  003486                     u4438:
  9768  003486  3A02               	swapf	??_toggle_light^0,f,c
  9769  003488  507C               	movf	124,w,c	;volatile
  9770  00348A  1802               	xorwf	??_toggle_light^0,w,c
  9771  00348C  0BEF               	andlw	-17
  9772  00348E  1802               	xorwf	??_toggle_light^0,w,c
  9773  003490  6E7C               	movwf	124,c	;volatile
  9774  003492                     
  9775                           ;color.c: 42:             _delay((unsigned long)((500)*(64000000/4000.0)));
  9776  003492  0E29               	movlw	41
  9777  003494  6E03               	movwf	(??_toggle_light+1)^0,c
  9778  003496  0E96               	movlw	150
  9779  003498  6E02               	movwf	??_toggle_light^0,c
  9780  00349A  0E7F               	movlw	127
  9781  00349C                     u6107:
  9782  00349C  2EE8               	decfsz	wreg,f,c
  9783  00349E  D7FE               	bra	u6107
  9784  0034A0  2E02               	decfsz	??_toggle_light^0,f,c
  9785  0034A2  D7FC               	bra	u6107
  9786  0034A4  2E03               	decfsz	(??_toggle_light+1)^0,f,c
  9787  0034A6  D7FA               	bra	u6107
  9788  0034A8  F000               	nop	
  9789  0034AA                     
  9790                           ;color.c: 43:             LATDbits.LATD4 = !LATDbits.LATD4;
  9791  0034AA  A87C               	btfss	124,4,c	;volatile
  9792  0034AC  EF5A  F01A         	goto	u4441
  9793  0034B0  EF5E  F01A         	goto	u4440
  9794  0034B4                     u4441:
  9795  0034B4  6A02               	clrf	??_toggle_light^0,c
  9796  0034B6  2A02               	incf	??_toggle_light^0,f,c
  9797  0034B8  EF5F  F01A         	goto	u4458
  9798  0034BC                     u4440:
  9799  0034BC  6A02               	clrf	??_toggle_light^0,c
  9800  0034BE                     u4458:
  9801  0034BE  3A02               	swapf	??_toggle_light^0,f,c
  9802  0034C0  507C               	movf	124,w,c	;volatile
  9803  0034C2  1802               	xorwf	??_toggle_light^0,w,c
  9804  0034C4  0BEF               	andlw	-17
  9805  0034C6  1802               	xorwf	??_toggle_light^0,w,c
  9806  0034C8  6E7C               	movwf	124,c	;volatile
  9807                           
  9808                           ;color.c: 44:             _delay((unsigned long)((500)*(64000000/4000.0)));
  9809  0034CA  0E29               	movlw	41
  9810  0034CC  6E03               	movwf	(??_toggle_light+1)^0,c
  9811  0034CE  0E96               	movlw	150
  9812  0034D0  6E02               	movwf	??_toggle_light^0,c
  9813  0034D2  0E7F               	movlw	127
  9814  0034D4                     u6117:
  9815  0034D4  2EE8               	decfsz	wreg,f,c
  9816  0034D6  D7FE               	bra	u6117
  9817  0034D8  2E02               	decfsz	??_toggle_light^0,f,c
  9818  0034DA  D7FC               	bra	u6117
  9819  0034DC  2E03               	decfsz	(??_toggle_light+1)^0,f,c
  9820  0034DE  D7FA               	bra	u6117
  9821  0034E0  F000               	nop	
  9822  0034E2                     l4547:
  9823                           
  9824                           ;color.c: 46:         if (lightnumber == 3){
  9825  0034E2  0E03               	movlw	3
  9826  0034E4  1805               	xorwf	toggle_light@lightnumber^0,w,c
  9827  0034E6  A4D8               	btfss	status,2,c
  9828  0034E8  EF78  F01A         	goto	u4461
  9829  0034EC  EF7A  F01A         	goto	u4460
  9830  0034F0                     u4461:
  9831  0034F0  EFB6  F01A         	goto	l4555
  9832  0034F4                     u4460:
  9833  0034F4                     
  9834                           ;color.c: 47:             LATDbits.LATD3 = !LATDbits.LATD3;
  9835  0034F4  A67C               	btfss	124,3,c	;volatile
  9836  0034F6  EF7F  F01A         	goto	u4471
  9837  0034FA  EF83  F01A         	goto	u4470
  9838  0034FE                     u4471:
  9839  0034FE  6A02               	clrf	??_toggle_light^0,c
  9840  003500  2A02               	incf	??_toggle_light^0,f,c
  9841  003502  EF84  F01A         	goto	u4488
  9842  003506                     u4470:
  9843  003506  6A02               	clrf	??_toggle_light^0,c
  9844  003508                     u4488:
  9845  003508  4602               	rlncf	??_toggle_light^0,f,c
  9846  00350A  4602               	rlncf	??_toggle_light^0,f,c
  9847  00350C  4602               	rlncf	??_toggle_light^0,f,c
  9848  00350E  507C               	movf	124,w,c	;volatile
  9849  003510  1802               	xorwf	??_toggle_light^0,w,c
  9850  003512  0BF7               	andlw	-9
  9851  003514  1802               	xorwf	??_toggle_light^0,w,c
  9852  003516  6E7C               	movwf	124,c	;volatile
  9853  003518                     
  9854                           ;color.c: 48:             _delay((unsigned long)((500)*(64000000/4000.0)));
  9855  003518  0E29               	movlw	41
  9856  00351A  6E03               	movwf	(??_toggle_light+1)^0,c
  9857  00351C  0E96               	movlw	150
  9858  00351E  6E02               	movwf	??_toggle_light^0,c
  9859  003520  0E7F               	movlw	127
  9860  003522                     u6127:
  9861  003522  2EE8               	decfsz	wreg,f,c
  9862  003524  D7FE               	bra	u6127
  9863  003526  2E02               	decfsz	??_toggle_light^0,f,c
  9864  003528  D7FC               	bra	u6127
  9865  00352A  2E03               	decfsz	(??_toggle_light+1)^0,f,c
  9866  00352C  D7FA               	bra	u6127
  9867  00352E  F000               	nop	
  9868  003530                     
  9869                           ;color.c: 49:             LATDbits.LATD3 = !LATDbits.LATD3;
  9870  003530  A67C               	btfss	124,3,c	;volatile
  9871  003532  EF9D  F01A         	goto	u4491
  9872  003536  EFA1  F01A         	goto	u4490
  9873  00353A                     u4491:
  9874  00353A  6A02               	clrf	??_toggle_light^0,c
  9875  00353C  2A02               	incf	??_toggle_light^0,f,c
  9876  00353E  EFA2  F01A         	goto	u4508
  9877  003542                     u4490:
  9878  003542  6A02               	clrf	??_toggle_light^0,c
  9879  003544                     u4508:
  9880  003544  4602               	rlncf	??_toggle_light^0,f,c
  9881  003546  4602               	rlncf	??_toggle_light^0,f,c
  9882  003548  4602               	rlncf	??_toggle_light^0,f,c
  9883  00354A  507C               	movf	124,w,c	;volatile
  9884  00354C  1802               	xorwf	??_toggle_light^0,w,c
  9885  00354E  0BF7               	andlw	-9
  9886  003550  1802               	xorwf	??_toggle_light^0,w,c
  9887  003552  6E7C               	movwf	124,c	;volatile
  9888                           
  9889                           ;color.c: 50:             _delay((unsigned long)((500)*(64000000/4000.0)));
  9890  003554  0E29               	movlw	41
  9891  003556  6E03               	movwf	(??_toggle_light+1)^0,c
  9892  003558  0E96               	movlw	150
  9893  00355A  6E02               	movwf	??_toggle_light^0,c
  9894  00355C  0E7F               	movlw	127
  9895  00355E                     u6137:
  9896  00355E  2EE8               	decfsz	wreg,f,c
  9897  003560  D7FE               	bra	u6137
  9898  003562  2E02               	decfsz	??_toggle_light^0,f,c
  9899  003564  D7FC               	bra	u6137
  9900  003566  2E03               	decfsz	(??_toggle_light+1)^0,f,c
  9901  003568  D7FA               	bra	u6137
  9902  00356A  F000               	nop	
  9903  00356C                     l4555:
  9904                           
  9905                           ;color.c: 52:         if (lightnumber == 4){
  9906  00356C  0E04               	movlw	4
  9907  00356E  1805               	xorwf	toggle_light@lightnumber^0,w,c
  9908  003570  A4D8               	btfss	status,2,c
  9909  003572  EFBD  F01A         	goto	u4511
  9910  003576  EFBF  F01A         	goto	u4510
  9911  00357A                     u4511:
  9912  00357A  EFF5  F01A         	goto	l4563
  9913  00357E                     u4510:
  9914  00357E                     
  9915                           ;color.c: 53:             LATFbits.LATF0 = !LATFbits.LATF0;
  9916  00357E  A07E               	btfss	126,0,c	;volatile
  9917  003580  EFC4  F01A         	goto	u4521
  9918  003584  EFC8  F01A         	goto	u4520
  9919  003588                     u4521:
  9920  003588  6A02               	clrf	??_toggle_light^0,c
  9921  00358A  2A02               	incf	??_toggle_light^0,f,c
  9922  00358C  EFC9  F01A         	goto	u4538
  9923  003590                     u4520:
  9924  003590  6A02               	clrf	??_toggle_light^0,c
  9925  003592                     u4538:
  9926  003592  507E               	movf	126,w,c	;volatile
  9927  003594  1802               	xorwf	??_toggle_light^0,w,c
  9928  003596  0BFE               	andlw	-2
  9929  003598  1802               	xorwf	??_toggle_light^0,w,c
  9930  00359A  6E7E               	movwf	126,c	;volatile
  9931  00359C                     
  9932                           ;color.c: 54:             _delay((unsigned long)((500)*(64000000/4000.0)));
  9933  00359C  0E29               	movlw	41
  9934  00359E  6E03               	movwf	(??_toggle_light+1)^0,c
  9935  0035A0  0E96               	movlw	150
  9936  0035A2  6E02               	movwf	??_toggle_light^0,c
  9937  0035A4  0E7F               	movlw	127
  9938  0035A6                     u6147:
  9939  0035A6  2EE8               	decfsz	wreg,f,c
  9940  0035A8  D7FE               	bra	u6147
  9941  0035AA  2E02               	decfsz	??_toggle_light^0,f,c
  9942  0035AC  D7FC               	bra	u6147
  9943  0035AE  2E03               	decfsz	(??_toggle_light+1)^0,f,c
  9944  0035B0  D7FA               	bra	u6147
  9945  0035B2  F000               	nop	
  9946  0035B4                     
  9947                           ;color.c: 55:             LATFbits.LATF0 = !LATFbits.LATF0;
  9948  0035B4  A07E               	btfss	126,0,c	;volatile
  9949  0035B6  EFDF  F01A         	goto	u4541
  9950  0035BA  EFE3  F01A         	goto	u4540
  9951  0035BE                     u4541:
  9952  0035BE  6A02               	clrf	??_toggle_light^0,c
  9953  0035C0  2A02               	incf	??_toggle_light^0,f,c
  9954  0035C2  EFE4  F01A         	goto	u4558
  9955  0035C6                     u4540:
  9956  0035C6  6A02               	clrf	??_toggle_light^0,c
  9957  0035C8                     u4558:
  9958  0035C8  507E               	movf	126,w,c	;volatile
  9959  0035CA  1802               	xorwf	??_toggle_light^0,w,c
  9960  0035CC  0BFE               	andlw	-2
  9961  0035CE  1802               	xorwf	??_toggle_light^0,w,c
  9962  0035D0  6E7E               	movwf	126,c	;volatile
  9963                           
  9964                           ;color.c: 56:             _delay((unsigned long)((500)*(64000000/4000.0)));
  9965  0035D2  0E29               	movlw	41
  9966  0035D4  6E03               	movwf	(??_toggle_light+1)^0,c
  9967  0035D6  0E96               	movlw	150
  9968  0035D8  6E02               	movwf	??_toggle_light^0,c
  9969  0035DA  0E7F               	movlw	127
  9970  0035DC                     u6157:
  9971  0035DC  2EE8               	decfsz	wreg,f,c
  9972  0035DE  D7FE               	bra	u6157
  9973  0035E0  2E02               	decfsz	??_toggle_light^0,f,c
  9974  0035E2  D7FC               	bra	u6157
  9975  0035E4  2E03               	decfsz	(??_toggle_light+1)^0,f,c
  9976  0035E6  D7FA               	bra	u6157
  9977  0035E8  F000               	nop	
  9978  0035EA                     l4563:
  9979                           
  9980                           ;color.c: 58:         if (lightnumber == 3){
  9981  0035EA  0E03               	movlw	3
  9982  0035EC  1805               	xorwf	toggle_light@lightnumber^0,w,c
  9983  0035EE  A4D8               	btfss	status,2,c
  9984  0035F0  EFFC  F01A         	goto	u4561
  9985  0035F4  EFFE  F01A         	goto	u4560
  9986  0035F8                     u4561:
  9987  0035F8  EF34  F01B         	goto	l4571
  9988  0035FC                     u4560:
  9989  0035FC                     
  9990                           ;color.c: 59:             LATHbits.LATH0 = !LATHbits.LATH0;
  9991  0035FC  A080               	btfss	128,0,c	;volatile
  9992  0035FE  EF03  F01B         	goto	u4571
  9993  003602  EF07  F01B         	goto	u4570
  9994  003606                     u4571:
  9995  003606  6A02               	clrf	??_toggle_light^0,c
  9996  003608  2A02               	incf	??_toggle_light^0,f,c
  9997  00360A  EF08  F01B         	goto	u4588
  9998  00360E                     u4570:
  9999  00360E  6A02               	clrf	??_toggle_light^0,c
 10000  003610                     u4588:
 10001  003610  5080               	movf	128,w,c	;volatile
 10002  003612  1802               	xorwf	??_toggle_light^0,w,c
 10003  003614  0BFE               	andlw	-2
 10004  003616  1802               	xorwf	??_toggle_light^0,w,c
 10005  003618  6E80               	movwf	128,c	;volatile
 10006  00361A                     
 10007                           ;color.c: 60:             _delay((unsigned long)((500)*(64000000/4000.0)));
 10008  00361A  0E29               	movlw	41
 10009  00361C  6E03               	movwf	(??_toggle_light+1)^0,c
 10010  00361E  0E96               	movlw	150
 10011  003620  6E02               	movwf	??_toggle_light^0,c
 10012  003622  0E7F               	movlw	127
 10013  003624                     u6167:
 10014  003624  2EE8               	decfsz	wreg,f,c
 10015  003626  D7FE               	bra	u6167
 10016  003628  2E02               	decfsz	??_toggle_light^0,f,c
 10017  00362A  D7FC               	bra	u6167
 10018  00362C  2E03               	decfsz	(??_toggle_light+1)^0,f,c
 10019  00362E  D7FA               	bra	u6167
 10020  003630  F000               	nop	
 10021  003632                     
 10022                           ;color.c: 61:             LATHbits.LATH0 = !LATHbits.LATH0;
 10023  003632  A080               	btfss	128,0,c	;volatile
 10024  003634  EF1E  F01B         	goto	u4591
 10025  003638  EF22  F01B         	goto	u4590
 10026  00363C                     u4591:
 10027  00363C  6A02               	clrf	??_toggle_light^0,c
 10028  00363E  2A02               	incf	??_toggle_light^0,f,c
 10029  003640  EF23  F01B         	goto	u4608
 10030  003644                     u4590:
 10031  003644  6A02               	clrf	??_toggle_light^0,c
 10032  003646                     u4608:
 10033  003646  5080               	movf	128,w,c	;volatile
 10034  003648  1802               	xorwf	??_toggle_light^0,w,c
 10035  00364A  0BFE               	andlw	-2
 10036  00364C  1802               	xorwf	??_toggle_light^0,w,c
 10037  00364E  6E80               	movwf	128,c	;volatile
 10038                           
 10039                           ;color.c: 62:             _delay((unsigned long)((500)*(64000000/4000.0)));
 10040  003650  0E29               	movlw	41
 10041  003652  6E03               	movwf	(??_toggle_light+1)^0,c
 10042  003654  0E96               	movlw	150
 10043  003656  6E02               	movwf	??_toggle_light^0,c
 10044  003658  0E7F               	movlw	127
 10045  00365A                     u6177:
 10046  00365A  2EE8               	decfsz	wreg,f,c
 10047  00365C  D7FE               	bra	u6177
 10048  00365E  2E02               	decfsz	??_toggle_light^0,f,c
 10049  003660  D7FC               	bra	u6177
 10050  003662  2E03               	decfsz	(??_toggle_light+1)^0,f,c
 10051  003664  D7FA               	bra	u6177
 10052  003666  F000               	nop	
 10053  003668                     l4571:
 10054                           
 10055                           ;color.c: 64:     }
 10056  003668  2A04               	incf	toggle_light@i^0,f,c
 10057  00366A                     l74:
 10058  00366A  5001               	movf	toggle_light@toggletime^0,w,c
 10059  00366C  5C04               	subwf	toggle_light@i^0,w,c
 10060  00366E  A0D8               	btfss	status,0,c
 10061  003670  EF3C  F01B         	goto	u4611
 10062  003674  EF3E  F01B         	goto	u4610
 10063  003678                     u4611:
 10064  003678  EFF0  F019         	goto	l4531
 10065  00367C                     u4610:
 10066  00367C  0012               	return		;funcret
 10067  00367E                     __end_of_toggle_light:
 10068                           	callstack 0
 10069                           
 10070 ;; *************** function _short_reverse *****************
 10071 ;; Defined at:
 10072 ;;		line 199 in file "dc_motor.c"
 10073 ;; Parameters:    Size  Location     Type
 10074 ;;  mL              2   37[COMRAM] PTR struct DC_motor
 10075 ;;		 -> main@motorL(10), 
 10076 ;;  mR              2   39[COMRAM] PTR struct DC_motor
 10077 ;;		 -> main@motorR(10), 
 10078 ;; Auto vars:     Size  Location     Type
 10079 ;;		None
 10080 ;; Return value:  Size  Location     Type
 10081 ;;                  1    wreg      void 
 10082 ;; Registers used:
 10083 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10084 ;; Tracked objects:
 10085 ;;		On entry : 0/0
 10086 ;;		On exit  : 0/0
 10087 ;;		Unchanged: 0/0
 10088 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10089 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10090 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10091 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10092 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10093 ;;Total ram usage:        6 bytes
 10094 ;; Hardware stack levels used: 1
 10095 ;; Hardware stack levels required when called: 5
 10096 ;; This function calls:
 10097 ;;		_fullSpeedBack
 10098 ;;		_stop
 10099 ;; This function is called by:
 10100 ;;		_action
 10101 ;; This function uses a non-reentrant model
 10102 ;;
 10103                           
 10104                           	psect	text47
 10105  0056FE                     __ptext47:
 10106                           	callstack 0
 10107  0056FE                     _short_reverse:
 10108                           	callstack 24
 10109  0056FE                     
 10110                           ;dc_motor.c: 199: void short_reverse(struct DC_motor *mL, struct DC_motor *mR);dc_motor.
      +                          c: 200: { fullSpeedBack(mL, mR);
 10111  0056FE  C026  F020         	movff	short_reverse@mL,fullSpeedBack@mL
 10112  005702  C027  F021         	movff	short_reverse@mL+1,fullSpeedBack@mL+1
 10113  005706  C028  F022         	movff	short_reverse@mR,fullSpeedBack@mR
 10114  00570A  C029  F023         	movff	short_reverse@mR+1,fullSpeedBack@mR+1
 10115  00570E  ECFA  F027         	call	_fullSpeedBack	;wreg free
 10116  005712                     
 10117                           ;dc_motor.c: 201:     _delay((unsigned long)((300)*(64000000/4000.0)));
 10118  005712  0E19               	movlw	25
 10119  005714  6E2B               	movwf	(??_short_reverse+1)^0,c
 10120  005716  0E5A               	movlw	90
 10121  005718  6E2A               	movwf	??_short_reverse^0,c
 10122  00571A  0EB2               	movlw	178
 10123  00571C                     u6187:
 10124  00571C  2EE8               	decfsz	wreg,f,c
 10125  00571E  D7FE               	bra	u6187
 10126  005720  2E2A               	decfsz	??_short_reverse^0,f,c
 10127  005722  D7FC               	bra	u6187
 10128  005724  2E2B               	decfsz	(??_short_reverse+1)^0,f,c
 10129  005726  D7FA               	bra	u6187
 10130  005728                     
 10131                           ;dc_motor.c: 202:     stop(mL,mR);
 10132  005728  C026  F01A         	movff	short_reverse@mL,stop@mL
 10133  00572C  C027  F01B         	movff	short_reverse@mL+1,stop@mL+1
 10134  005730  C028  F01C         	movff	short_reverse@mR,stop@mR
 10135  005734  C029  F01D         	movff	short_reverse@mR+1,stop@mR+1
 10136  005738  EC5A  F028         	call	_stop	;wreg free
 10137  00573C  0012               	return		;funcret
 10138  00573E                     __end_of_short_reverse:
 10139                           	callstack 0
 10140                           
 10141 ;; *************** function _goback *****************
 10142 ;; Defined at:
 10143 ;;		line 122 in file "movement.c"
 10144 ;; Parameters:    Size  Location     Type
 10145 ;;  mL              2   87[COMRAM] PTR struct DC_motor
 10146 ;;		 -> main@motorL(10), 
 10147 ;;  mR              2   89[COMRAM] PTR struct DC_motor
 10148 ;;		 -> main@motorR(10), 
 10149 ;; Auto vars:     Size  Location     Type
 10150 ;;  i               2  126[BANK0 ] unsigned int 
 10151 ;;  buf3          100  100[BANK1 ] unsigned char [100]
 10152 ;;  buf2          100    0[BANK2 ] unsigned char [100]
 10153 ;;  buf           100    0[BANK1 ] unsigned char [100]
 10154 ;; Return value:  Size  Location     Type
 10155 ;;                  1    wreg      void 
 10156 ;; Registers used:
 10157 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10158 ;; Tracked objects:
 10159 ;;		On entry : 0/0
 10160 ;;		On exit  : 0/0
 10161 ;;		Unchanged: 0/0
 10162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10163 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10164 ;;      Locals:         0       2     200     100       0       0       0       0       0       0       0       0       
      +0       0       0
 10165 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10166 ;;      Totals:         6       2     200     100       0       0       0       0       0       0       0       0       
      +0       0       0
 10167 ;;Total ram usage:      308 bytes
 10168 ;; Hardware stack levels used: 1
 10169 ;; Hardware stack levels required when called: 10
 10170 ;; This function calls:
 10171 ;;		_color_predict
 10172 ;;		_fullSpeedAhead
 10173 ;;		_reverse_square
 10174 ;;		_sendStringSerial4
 10175 ;;		_sprintf
 10176 ;;		_stop
 10177 ;;		_turnLeft
 10178 ;;		_turnRight
 10179 ;; This function is called by:
 10180 ;;		_action
 10181 ;; This function uses a non-reentrant model
 10182 ;;
 10183                           
 10184                           	psect	text48
 10185  002A74                     __ptext48:
 10186                           	callstack 0
 10187  002A74                     _goback:
 10188                           	callstack 19
 10189  002A74                     
 10190                           ;movement.c: 122: void goback(struct DC_motor *mL, struct DC_motor *mR);movement.c: 123:
      +                           { turnRight(mL,mR,180);
 10191  002A74  C058  F020         	movff	goback@mL,turnRight@mL
 10192  002A78  C059  F021         	movff	goback@mL+1,turnRight@mL+1
 10193  002A7C  C05A  F022         	movff	goback@mR,turnRight@mR
 10194  002A80  C05B  F023         	movff	goback@mR+1,turnRight@mR+1
 10195  002A84  0EB4               	movlw	180
 10196  002A86  6E24               	movwf	turnRight@angle_right^0,c
 10197  002A88  ECA1  F020         	call	_turnRight	;wreg free
 10198  002A8C                     
 10199                           ;movement.c: 124:     array_index--;
 10200  002A8C  0103               	movlb	3	; () banked
 10201  002A8E  076B               	decf	_array_index& (0+255),f,b
 10202  002A90                     
 10203                           ; BSR set to: 3
 10204                           ;movement.c: 125:     char buf[100];;movement.c: 126:     sprintf(buf,"go back\r\n");
 10205  002A90  0E00               	movlw	low goback@buf
 10206  002A92  0100               	movlb	0	; () banked
 10207  002A94  6F60               	movwf	sprintf@s& (0+255),b
 10208  002A96  0E01               	movlw	high goback@buf
 10209  002A98  6F61               	movwf	(sprintf@s+1)& (0+255),b
 10210  002A9A  0E31               	movlw	low STR_4
 10211  002A9C  6F62               	movwf	sprintf@fmt& (0+255),b
 10212  002A9E  0E0E               	movlw	high STR_4
 10213  002AA0  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
 10214  002AA2  EC0F  F02A         	call	_sprintf	;wreg free
 10215  002AA6                     
 10216                           ;movement.c: 127:     sendStringSerial4(buf);
 10217  002AA6  0E00               	movlw	low goback@buf
 10218  002AA8  6E02               	movwf	sendStringSerial4@string^0,c
 10219  002AAA  0E01               	movlw	high goback@buf
 10220  002AAC  6E03               	movwf	(sendStringSerial4@string+1)^0,c
 10221  002AAE  EC6A  F02C         	call	_sendStringSerial4	;wreg free
 10222  002AB2                     l5237:
 10223                           
 10224                           ;movement.c: 129:         char buf3[100];;movement.c: 130:         sprintf(buf3,"repeat\
      +                          r\n");
 10225  002AB2  0E64               	movlw	low goback@buf3
 10226  002AB4  0100               	movlb	0	; () banked
 10227  002AB6  6F60               	movwf	sprintf@s& (0+255),b
 10228  002AB8  0E01               	movlw	high goback@buf3
 10229  002ABA  6F61               	movwf	(sprintf@s+1)& (0+255),b
 10230  002ABC  0E3B               	movlw	low STR_5
 10231  002ABE  6F62               	movwf	sprintf@fmt& (0+255),b
 10232  002AC0  0E0E               	movlw	high STR_5
 10233  002AC2  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
 10234  002AC4  EC0F  F02A         	call	_sprintf	;wreg free
 10235  002AC8                     
 10236                           ;movement.c: 131:         sendStringSerial4(buf3);
 10237  002AC8  0E64               	movlw	low goback@buf3
 10238  002ACA  6E02               	movwf	sendStringSerial4@string^0,c
 10239  002ACC  0E01               	movlw	high goback@buf3
 10240  002ACE  6E03               	movwf	(sendStringSerial4@string+1)^0,c
 10241  002AD0  EC6A  F02C         	call	_sendStringSerial4	;wreg free
 10242  002AD4                     
 10243                           ;movement.c: 132:         color_predict(array_index);
 10244  002AD4  0103               	movlb	3	; () banked
 10245  002AD6  516B               	movf	_array_index& (0+255),w,b
 10246  002AD8  EC82  F02C         	call	_color_predict
 10247  002ADC                     
 10248                           ;movement.c: 133:         color_predict(memory[array_index]);
 10249  002ADC  0103               	movlb	3	; () banked
 10250  002ADE  516B               	movf	_array_index& (0+255),w,b
 10251  002AE0  0D02               	mullw	2
 10252  002AE2  0E3C               	movlw	low _memory
 10253  002AE4  24F3               	addwf	243,w,c
 10254  002AE6  6ED9               	movwf	fsr2l,c
 10255  002AE8  0E03               	movlw	high _memory
 10256  002AEA  20F4               	addwfc	prodh,w,c
 10257  002AEC  6EDA               	movwf	fsr2h,c
 10258  002AEE  50DF               	movf	indf2,w,c
 10259  002AF0  EC82  F02C         	call	_color_predict
 10260  002AF4                     
 10261                           ;movement.c: 134:         color_predict(200);
 10262  002AF4  0EC8               	movlw	200
 10263  002AF6  EC82  F02C         	call	_color_predict
 10264  002AFA                     
 10265                           ;movement.c: 135:         fullSpeedAhead(mL,mR);
 10266  002AFA  C058  F01A         	movff	goback@mL,fullSpeedAhead@mL
 10267  002AFE  C059  F01B         	movff	goback@mL+1,fullSpeedAhead@mL+1
 10268  002B02  C05A  F01C         	movff	goback@mR,fullSpeedAhead@mR
 10269  002B06  C05B  F01D         	movff	goback@mR+1,fullSpeedAhead@mR+1
 10270  002B0A  ECB8  F028         	call	_fullSpeedAhead	;wreg free
 10271  002B0E                     
 10272                           ;movement.c: 136:         for (unsigned int i=0; i<memory[array_index]; i++) {_delay((un
      +                          signed long)((100)*(64000000/4000.0)));}
 10273  002B0E  0E00               	movlw	0
 10274  002B10  0100               	movlb	0	; () banked
 10275  002B12  6FDF               	movwf	(goback@i+1)& (0+255),b
 10276  002B14  0E00               	movlw	0
 10277  002B16  6FDE               	movwf	goback@i& (0+255),b
 10278  002B18  EF9D  F015         	goto	l5255
 10279  002B1C                     l5251:
 10280                           
 10281                           ; BSR set to: 0
 10282  002B1C  0E09               	movlw	9
 10283  002B1E  6E5D               	movwf	(??_goback+1)^0,c
 10284  002B20  0E1E               	movlw	30
 10285  002B22  6E5C               	movwf	??_goback^0,c
 10286  002B24  0EE4               	movlw	228
 10287  002B26                     u6197:
 10288  002B26  2EE8               	decfsz	wreg,f,c
 10289  002B28  D7FE               	bra	u6197
 10290  002B2A  2E5C               	decfsz	??_goback^0,f,c
 10291  002B2C  D7FC               	bra	u6197
 10292  002B2E  2E5D               	decfsz	(??_goback+1)^0,f,c
 10293  002B30  D7FA               	bra	u6197
 10294  002B32  D000               	nop2	
 10295  002B34  0100               	movlb	0	; () banked
 10296  002B36  4BDE               	infsnz	goback@i& (0+255),f,b
 10297  002B38  2BDF               	incf	(goback@i+1)& (0+255),f,b
 10298  002B3A                     l5255:
 10299                           
 10300                           ; BSR set to: 0
 10301  002B3A  0103               	movlb	3	; () banked
 10302  002B3C  516B               	movf	_array_index& (0+255),w,b
 10303  002B3E  0D02               	mullw	2
 10304  002B40  0E3C               	movlw	low _memory
 10305  002B42  24F3               	addwf	243,w,c
 10306  002B44  6ED9               	movwf	fsr2l,c
 10307  002B46  0E03               	movlw	high _memory
 10308  002B48  20F4               	addwfc	prodh,w,c
 10309  002B4A  6EDA               	movwf	fsr2h,c
 10310  002B4C  50DE               	movf	postinc2,w,c
 10311  002B4E  0100               	movlb	0	; () banked
 10312  002B50  5DDE               	subwf	goback@i& (0+255),w,b
 10313  002B52  50DE               	movf	postinc2,w,c
 10314  002B54  59DF               	subwfb	(goback@i+1)& (0+255),w,b
 10315  002B56  A0D8               	btfss	status,0,c
 10316  002B58  EFB0  F015         	goto	u5331
 10317  002B5C  EFB2  F015         	goto	u5330
 10318  002B60                     u5331:
 10319  002B60  EF8E  F015         	goto	l5251
 10320  002B64                     u5330:
 10321  002B64                     
 10322                           ; BSR set to: 0
 10323                           ;movement.c: 137:         stop(mL,mR);
 10324  002B64  C058  F01A         	movff	goback@mL,stop@mL
 10325  002B68  C059  F01B         	movff	goback@mL+1,stop@mL+1
 10326  002B6C  C05A  F01C         	movff	goback@mR,stop@mR
 10327  002B70  C05B  F01D         	movff	goback@mR+1,stop@mR+1
 10328  002B74  EC5A  F028         	call	_stop	;wreg free
 10329  002B78                     
 10330                           ;movement.c: 138:         if (array_index == 0){break;}
 10331  002B78  0103               	movlb	3	; () banked
 10332  002B7A  516B               	movf	_array_index& (0+255),w,b
 10333  002B7C  A4D8               	btfss	status,2,c
 10334  002B7E  EFC3  F015         	goto	u5341
 10335  002B82  EFC5  F015         	goto	u5340
 10336  002B86                     u5341:
 10337  002B86  EFC7  F015         	goto	l5263
 10338  002B8A                     u5340:
 10339  002B8A  EFD2  F016         	goto	l5313
 10340  002B8E                     l5263:
 10341                           
 10342                           ; BSR set to: 3
 10343                           ;movement.c: 139:         array_index--;
 10344  002B8E  076B               	decf	_array_index& (0+255),f,b
 10345  002B90                     
 10346                           ; BSR set to: 3
 10347                           ;movement.c: 140:         color_predict(array_index);
 10348  002B90  516B               	movf	_array_index& (0+255),w,b
 10349  002B92  EC82  F02C         	call	_color_predict
 10350  002B96                     
 10351                           ;movement.c: 141:         color_predict(memory[array_index]);
 10352  002B96  0103               	movlb	3	; () banked
 10353  002B98  516B               	movf	_array_index& (0+255),w,b
 10354  002B9A  0D02               	mullw	2
 10355  002B9C  0E3C               	movlw	low _memory
 10356  002B9E  24F3               	addwf	243,w,c
 10357  002BA0  6ED9               	movwf	fsr2l,c
 10358  002BA2  0E03               	movlw	high _memory
 10359  002BA4  20F4               	addwfc	prodh,w,c
 10360  002BA6  6EDA               	movwf	fsr2h,c
 10361  002BA8  50DF               	movf	indf2,w,c
 10362  002BAA  EC82  F02C         	call	_color_predict
 10363  002BAE                     
 10364                           ;movement.c: 142:         color_predict(200);
 10365  002BAE  0EC8               	movlw	200
 10366  002BB0  EC82  F02C         	call	_color_predict
 10367  002BB4                     
 10368                           ;movement.c: 143:         if (memory[array_index] == 1){turnLeft(mL,mR,90);array_index--
      +                          ;}
 10369  002BB4  0103               	movlb	3	; () banked
 10370  002BB6  516B               	movf	_array_index& (0+255),w,b
 10371  002BB8  0D02               	mullw	2
 10372  002BBA  0E3C               	movlw	low _memory
 10373  002BBC  24F3               	addwf	243,w,c
 10374  002BBE  6ED9               	movwf	fsr2l,c
 10375  002BC0  0E03               	movlw	high _memory
 10376  002BC2  20F4               	addwfc	prodh,w,c
 10377  002BC4  6EDA               	movwf	fsr2h,c
 10378  002BC6  04DE               	decf	postinc2,w,c
 10379  002BC8  10DE               	iorwf	postinc2,w,c
 10380  002BCA  A4D8               	btfss	status,2,c
 10381  002BCC  EFEA  F015         	goto	u5351
 10382  002BD0  EFEC  F015         	goto	u5350
 10383  002BD4                     u5351:
 10384  002BD4  EFFC  F015         	goto	l5277
 10385  002BD8                     u5350:
 10386  002BD8                     
 10387                           ; BSR set to: 3
 10388  002BD8  C058  F020         	movff	goback@mL,turnLeft@mL
 10389  002BDC  C059  F021         	movff	goback@mL+1,turnLeft@mL+1
 10390  002BE0  C05A  F022         	movff	goback@mR,turnLeft@mR
 10391  002BE4  C05B  F023         	movff	goback@mR+1,turnLeft@mR+1
 10392  002BE8  0E5A               	movlw	90
 10393  002BEA  6E24               	movwf	turnLeft@angle_left^0,c
 10394  002BEC  EC68  F021         	call	_turnLeft	;wreg free
 10395  002BF0                     l5275:
 10396  002BF0  0103               	movlb	3	; () banked
 10397  002BF2  076B               	decf	_array_index& (0+255),f,b
 10398  002BF4  EF59  F015         	goto	l5237
 10399  002BF8                     l5277:
 10400                           
 10401                           ; BSR set to: 3
 10402  002BF8  516B               	movf	_array_index& (0+255),w,b
 10403  002BFA  0D02               	mullw	2
 10404  002BFC  0E3C               	movlw	low _memory
 10405  002BFE  24F3               	addwf	243,w,c
 10406  002C00  6ED9               	movwf	fsr2l,c
 10407  002C02  0E03               	movlw	high _memory
 10408  002C04  20F4               	addwfc	prodh,w,c
 10409  002C06  6EDA               	movwf	fsr2h,c
 10410  002C08  0E02               	movlw	2
 10411  002C0A  18DE               	xorwf	postinc2,w,c
 10412  002C0C  10DE               	iorwf	postinc2,w,c
 10413  002C0E  A4D8               	btfss	status,2,c
 10414  002C10  EF0C  F016         	goto	u5361
 10415  002C14  EF0E  F016         	goto	u5360
 10416  002C18                     u5361:
 10417  002C18  EF1C  F016         	goto	l5283
 10418  002C1C                     u5360:
 10419  002C1C                     
 10420                           ; BSR set to: 3
 10421  002C1C  C058  F020         	movff	goback@mL,turnRight@mL
 10422  002C20  C059  F021         	movff	goback@mL+1,turnRight@mL+1
 10423  002C24  C05A  F022         	movff	goback@mR,turnRight@mR
 10424  002C28  C05B  F023         	movff	goback@mR+1,turnRight@mR+1
 10425  002C2C  0E5A               	movlw	90
 10426  002C2E  6E24               	movwf	turnRight@angle_right^0,c
 10427  002C30  ECA1  F020         	call	_turnRight	;wreg free
 10428  002C34  EFF8  F015         	goto	l5275
 10429  002C38                     l5283:
 10430                           
 10431                           ; BSR set to: 3
 10432  002C38  516B               	movf	_array_index& (0+255),w,b
 10433  002C3A  0D02               	mullw	2
 10434  002C3C  0E3C               	movlw	low _memory
 10435  002C3E  24F3               	addwf	243,w,c
 10436  002C40  6ED9               	movwf	fsr2l,c
 10437  002C42  0E03               	movlw	high _memory
 10438  002C44  20F4               	addwfc	prodh,w,c
 10439  002C46  6EDA               	movwf	fsr2h,c
 10440  002C48  0E03               	movlw	3
 10441  002C4A  18DE               	xorwf	postinc2,w,c
 10442  002C4C  10DE               	iorwf	postinc2,w,c
 10443  002C4E  A4D8               	btfss	status,2,c
 10444  002C50  EF2C  F016         	goto	u5371
 10445  002C54  EF2E  F016         	goto	u5370
 10446  002C58                     u5371:
 10447  002C58  EF3C  F016         	goto	l5289
 10448  002C5C                     u5370:
 10449  002C5C                     
 10450                           ; BSR set to: 3
 10451  002C5C  C058  F020         	movff	goback@mL,turnLeft@mL
 10452  002C60  C059  F021         	movff	goback@mL+1,turnLeft@mL+1
 10453  002C64  C05A  F022         	movff	goback@mR,turnLeft@mR
 10454  002C68  C05B  F023         	movff	goback@mR+1,turnLeft@mR+1
 10455  002C6C  0EB4               	movlw	180
 10456  002C6E  6E24               	movwf	turnLeft@angle_left^0,c
 10457  002C70  EC68  F021         	call	_turnLeft	;wreg free
 10458  002C74  EFF8  F015         	goto	l5275
 10459  002C78                     l5289:
 10460                           
 10461                           ; BSR set to: 3
 10462  002C78  516B               	movf	_array_index& (0+255),w,b
 10463  002C7A  0D02               	mullw	2
 10464  002C7C  0E3C               	movlw	low _memory
 10465  002C7E  24F3               	addwf	243,w,c
 10466  002C80  6ED9               	movwf	fsr2l,c
 10467  002C82  0E03               	movlw	high _memory
 10468  002C84  20F4               	addwfc	prodh,w,c
 10469  002C86  6EDA               	movwf	fsr2h,c
 10470  002C88  0E04               	movlw	4
 10471  002C8A  18DE               	xorwf	postinc2,w,c
 10472  002C8C  10DE               	iorwf	postinc2,w,c
 10473  002C8E  A4D8               	btfss	status,2,c
 10474  002C90  EF4C  F016         	goto	u5381
 10475  002C94  EF4E  F016         	goto	u5380
 10476  002C98                     u5381:
 10477  002C98  EF66  F016         	goto	l5295
 10478  002C9C                     u5380:
 10479  002C9C                     
 10480                           ; BSR set to: 3
 10481  002C9C  C058  F026         	movff	goback@mL,reverse_square@mL
 10482  002CA0  C059  F027         	movff	goback@mL+1,reverse_square@mL+1
 10483  002CA4  C05A  F028         	movff	goback@mR,reverse_square@mR
 10484  002CA8  C05B  F029         	movff	goback@mR+1,reverse_square@mR+1
 10485  002CAC  EC9F  F02B         	call	_reverse_square	;wreg free
 10486  002CB0  C058  F020         	movff	goback@mL,turnLeft@mL
 10487  002CB4  C059  F021         	movff	goback@mL+1,turnLeft@mL+1
 10488  002CB8  C05A  F022         	movff	goback@mR,turnLeft@mR
 10489  002CBC  C05B  F023         	movff	goback@mR+1,turnLeft@mR+1
 10490  002CC0  0E5A               	movlw	90
 10491  002CC2  6E24               	movwf	turnLeft@angle_left^0,c
 10492  002CC4  EC68  F021         	call	_turnLeft	;wreg free
 10493  002CC8  EFF8  F015         	goto	l5275
 10494  002CCC                     l5295:
 10495                           
 10496                           ; BSR set to: 3
 10497  002CCC  516B               	movf	_array_index& (0+255),w,b
 10498  002CCE  0D02               	mullw	2
 10499  002CD0  0E3C               	movlw	low _memory
 10500  002CD2  24F3               	addwf	243,w,c
 10501  002CD4  6ED9               	movwf	fsr2l,c
 10502  002CD6  0E03               	movlw	high _memory
 10503  002CD8  20F4               	addwfc	prodh,w,c
 10504  002CDA  6EDA               	movwf	fsr2h,c
 10505  002CDC  0E05               	movlw	5
 10506  002CDE  18DE               	xorwf	postinc2,w,c
 10507  002CE0  10DE               	iorwf	postinc2,w,c
 10508  002CE2  A4D8               	btfss	status,2,c
 10509  002CE4  EF76  F016         	goto	u5391
 10510  002CE8  EF78  F016         	goto	u5390
 10511  002CEC                     u5391:
 10512  002CEC  EF90  F016         	goto	l5301
 10513  002CF0                     u5390:
 10514  002CF0                     
 10515                           ; BSR set to: 3
 10516  002CF0  C058  F026         	movff	goback@mL,reverse_square@mL
 10517  002CF4  C059  F027         	movff	goback@mL+1,reverse_square@mL+1
 10518  002CF8  C05A  F028         	movff	goback@mR,reverse_square@mR
 10519  002CFC  C05B  F029         	movff	goback@mR+1,reverse_square@mR+1
 10520  002D00  EC9F  F02B         	call	_reverse_square	;wreg free
 10521  002D04  C058  F020         	movff	goback@mL,turnRight@mL
 10522  002D08  C059  F021         	movff	goback@mL+1,turnRight@mL+1
 10523  002D0C  C05A  F022         	movff	goback@mR,turnRight@mR
 10524  002D10  C05B  F023         	movff	goback@mR+1,turnRight@mR+1
 10525  002D14  0E5A               	movlw	90
 10526  002D16  6E24               	movwf	turnRight@angle_right^0,c
 10527  002D18  ECA1  F020         	call	_turnRight	;wreg free
 10528  002D1C  EFF8  F015         	goto	l5275
 10529  002D20                     l5301:
 10530                           
 10531                           ; BSR set to: 3
 10532  002D20  516B               	movf	_array_index& (0+255),w,b
 10533  002D22  0D02               	mullw	2
 10534  002D24  0E3C               	movlw	low _memory
 10535  002D26  24F3               	addwf	243,w,c
 10536  002D28  6ED9               	movwf	fsr2l,c
 10537  002D2A  0E03               	movlw	high _memory
 10538  002D2C  20F4               	addwfc	prodh,w,c
 10539  002D2E  6EDA               	movwf	fsr2h,c
 10540  002D30  0E06               	movlw	6
 10541  002D32  18DE               	xorwf	postinc2,w,c
 10542  002D34  10DE               	iorwf	postinc2,w,c
 10543  002D36  A4D8               	btfss	status,2,c
 10544  002D38  EFA0  F016         	goto	u5401
 10545  002D3C  EFA2  F016         	goto	u5400
 10546  002D40                     u5401:
 10547  002D40  EFB0  F016         	goto	l5307
 10548  002D44                     u5400:
 10549  002D44                     
 10550                           ; BSR set to: 3
 10551  002D44  C058  F020         	movff	goback@mL,turnLeft@mL
 10552  002D48  C059  F021         	movff	goback@mL+1,turnLeft@mL+1
 10553  002D4C  C05A  F022         	movff	goback@mR,turnLeft@mR
 10554  002D50  C05B  F023         	movff	goback@mR+1,turnLeft@mR+1
 10555  002D54  0E87               	movlw	135
 10556  002D56  6E24               	movwf	turnLeft@angle_left^0,c
 10557  002D58  EC68  F021         	call	_turnLeft	;wreg free
 10558  002D5C  EFF8  F015         	goto	l5275
 10559  002D60                     l5307:
 10560                           
 10561                           ; BSR set to: 3
 10562  002D60  516B               	movf	_array_index& (0+255),w,b
 10563  002D62  0D02               	mullw	2
 10564  002D64  0E3C               	movlw	low _memory
 10565  002D66  24F3               	addwf	243,w,c
 10566  002D68  6ED9               	movwf	fsr2l,c
 10567  002D6A  0E03               	movlw	high _memory
 10568  002D6C  20F4               	addwfc	prodh,w,c
 10569  002D6E  6EDA               	movwf	fsr2h,c
 10570  002D70  0E07               	movlw	7
 10571  002D72  18DE               	xorwf	postinc2,w,c
 10572  002D74  10DE               	iorwf	postinc2,w,c
 10573  002D76  A4D8               	btfss	status,2,c
 10574  002D78  EFC0  F016         	goto	u5411
 10575  002D7C  EFC2  F016         	goto	u5410
 10576  002D80                     u5411:
 10577  002D80  EFD0  F016         	goto	l663
 10578  002D84                     u5410:
 10579  002D84                     
 10580                           ; BSR set to: 3
 10581  002D84  C058  F020         	movff	goback@mL,turnRight@mL
 10582  002D88  C059  F021         	movff	goback@mL+1,turnRight@mL+1
 10583  002D8C  C05A  F022         	movff	goback@mR,turnRight@mR
 10584  002D90  C05B  F023         	movff	goback@mR+1,turnRight@mR+1
 10585  002D94  0E87               	movlw	135
 10586  002D96  6E24               	movwf	turnRight@angle_right^0,c
 10587  002D98  ECA1  F020         	call	_turnRight	;wreg free
 10588  002D9C  EFF8  F015         	goto	l5275
 10589  002DA0                     l663:
 10590                           
 10591                           ; BSR set to: 3
 10592  002DA0  EF59  F015         	goto	l5237
 10593  002DA4                     l5313:
 10594                           
 10595                           ; BSR set to: 3
 10596                           ;movement.c: 151:     char buf2[100];;movement.c: 152:     sprintf(buf2,"go back finish\
      +                          r\n");
 10597  002DA4  0E00               	movlw	low goback@buf2
 10598  002DA6  0100               	movlb	0	; () banked
 10599  002DA8  6F60               	movwf	sprintf@s& (0+255),b
 10600  002DAA  0E02               	movlw	high goback@buf2
 10601  002DAC  6F61               	movwf	(sprintf@s+1)& (0+255),b
 10602  002DAE  0E05               	movlw	low STR_6
 10603  002DB0  6F62               	movwf	sprintf@fmt& (0+255),b
 10604  002DB2  0E0E               	movlw	high STR_6
 10605  002DB4  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
 10606  002DB6  EC0F  F02A         	call	_sprintf	;wreg free
 10607  002DBA                     
 10608                           ;movement.c: 153:     sendStringSerial4(buf2);
 10609  002DBA  0E00               	movlw	low goback@buf2
 10610  002DBC  6E02               	movwf	sendStringSerial4@string^0,c
 10611  002DBE  0E02               	movlw	high goback@buf2
 10612  002DC0  6E03               	movwf	(sendStringSerial4@string+1)^0,c
 10613  002DC2  EC6A  F02C         	call	_sendStringSerial4	;wreg free
 10614  002DC6                     l5317:
 10615  002DC6  C058  F01A         	movff	goback@mL,stop@mL
 10616  002DCA  C059  F01B         	movff	goback@mL+1,stop@mL+1
 10617  002DCE  C05A  F01C         	movff	goback@mR,stop@mR
 10618  002DD2  C05B  F01D         	movff	goback@mR+1,stop@mR+1
 10619  002DD6  EC5A  F028         	call	_stop	;wreg free
 10620  002DDA  EFE3  F016         	goto	l5317
 10621  002DDE  0012               	return		;funcret
 10622  002DE0                     __end_of_goback:
 10623                           	callstack 0
 10624                           
 10625 ;; *************** function _turnRight *****************
 10626 ;; Defined at:
 10627 ;;		line 122 in file "dc_motor.c"
 10628 ;; Parameters:    Size  Location     Type
 10629 ;;  mL              2   31[COMRAM] PTR struct DC_motor
 10630 ;;		 -> main@motorL(10), 
 10631 ;;  mR              2   33[COMRAM] PTR struct DC_motor
 10632 ;;		 -> main@motorR(10), 
 10633 ;;  angle_right     1   35[COMRAM] unsigned char 
 10634 ;; Auto vars:     Size  Location     Type
 10635 ;;  i               2   45[COMRAM] unsigned int 
 10636 ;;  i               2   43[COMRAM] unsigned int 
 10637 ;;  i               2   41[COMRAM] unsigned int 
 10638 ;;  delay           2   47[COMRAM] unsigned int 
 10639 ;;  delay_180       2   39[COMRAM] unsigned int 
 10640 ;;  delay_135       2   37[COMRAM] unsigned int 
 10641 ;; Return value:  Size  Location     Type
 10642 ;;                  1    wreg      void 
 10643 ;; Registers used:
 10644 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10645 ;; Tracked objects:
 10646 ;;		On entry : 0/0
 10647 ;;		On exit  : 0/0
 10648 ;;		Unchanged: 0/0
 10649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10650 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10651 ;;      Locals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10652 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10653 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10654 ;;Total ram usage:       18 bytes
 10655 ;; Hardware stack levels used: 1
 10656 ;; Hardware stack levels required when called: 4
 10657 ;; This function calls:
 10658 ;;		_setMotorPWM
 10659 ;;		_stop
 10660 ;; This function is called by:
 10661 ;;		_action
 10662 ;;		_goback
 10663 ;;		_test_action
 10664 ;; This function uses a non-reentrant model
 10665 ;;
 10666                           
 10667                           	psect	text49
 10668  004142                     __ptext49:
 10669                           	callstack 0
 10670  004142                     _turnRight:
 10671                           	callstack 25
 10672  004142                     
 10673                           ;dc_motor.c: 122: void turnRight(struct DC_motor *mL, struct DC_motor *mR, unsigned char
      +                           angle_right);dc_motor.c: 123: {;dc_motor.c: 124:     mL->direction=1;
 10674  004142  EE20 F001          	lfsr	2,1
 10675  004146  5020               	movf	turnRight@mL^0,w,c
 10676  004148  26D9               	addwf	fsr2l,f,c
 10677  00414A  5021               	movf	(turnRight@mL+1)^0,w,c
 10678  00414C  22DA               	addwfc	fsr2h,f,c
 10679  00414E  0E01               	movlw	1
 10680  004150  6EDF               	movwf	indf2,c
 10681                           
 10682                           ;dc_motor.c: 125:     mR->direction=1;
 10683  004152  EE20 F001          	lfsr	2,1
 10684  004156  5022               	movf	turnRight@mR^0,w,c
 10685  004158  26D9               	addwf	fsr2l,f,c
 10686  00415A  5023               	movf	(turnRight@mR+1)^0,w,c
 10687  00415C  22DA               	addwfc	fsr2h,f,c
 10688  00415E  0E01               	movlw	1
 10689  004160  6EDF               	movwf	indf2,c
 10690                           
 10691                           ;dc_motor.c: 126:     while (mL->power <25){
 10692  004162  EFD2  F020         	goto	l4671
 10693  004166                     l4663:
 10694                           
 10695                           ;dc_motor.c: 127:         mL->power += 5;
 10696  004166  C020  FFD9         	movff	turnRight@mL,fsr2l
 10697  00416A  C021  FFDA         	movff	turnRight@mL+1,fsr2h
 10698  00416E  0E05               	movlw	5
 10699  004170  26DF               	addwf	indf2,f,c
 10700                           
 10701                           ;dc_motor.c: 128:         mR->power = 0;
 10702  004172  C022  FFD9         	movff	turnRight@mR,fsr2l
 10703  004176  C023  FFDA         	movff	turnRight@mR+1,fsr2h
 10704  00417A  0E00               	movlw	0
 10705  00417C  6EDF               	movwf	indf2,c
 10706  00417E                     
 10707                           ;dc_motor.c: 129:         setMotorPWM(mL);
 10708  00417E  C020  F00F         	movff	turnRight@mL,setMotorPWM@m
 10709  004182  C021  F010         	movff	turnRight@mL+1,setMotorPWM@m+1
 10710  004186  EC38  F01D         	call	_setMotorPWM	;wreg free
 10711  00418A                     
 10712                           ;dc_motor.c: 130:         setMotorPWM(mR);
 10713  00418A  C022  F00F         	movff	turnRight@mR,setMotorPWM@m
 10714  00418E  C023  F010         	movff	turnRight@mR+1,setMotorPWM@m+1
 10715  004192  EC38  F01D         	call	_setMotorPWM	;wreg free
 10716  004196                     
 10717                           ;dc_motor.c: 131:         _delay((unsigned long)((10)*(64000000/4000.0)));
 10718  004196  0ED0               	movlw	208
 10719  004198  6E25               	movwf	??_turnRight^0,c
 10720  00419A  0ECA               	movlw	202
 10721  00419C                     u6207:
 10722  00419C  2EE8               	decfsz	wreg,f,c
 10723  00419E  D7FE               	bra	u6207
 10724  0041A0  2E25               	decfsz	??_turnRight^0,f,c
 10725  0041A2  D7FC               	bra	u6207
 10726  0041A4                     l4671:
 10727                           
 10728                           ;dc_motor.c: 126:     while (mL->power <25){
 10729  0041A4  C020  FFD9         	movff	turnRight@mL,fsr2l
 10730  0041A8  C021  FFDA         	movff	turnRight@mL+1,fsr2h
 10731  0041AC  0E18               	movlw	24
 10732  0041AE  64DF               	cpfsgt	indf2,c
 10733  0041B0  EFDC  F020         	goto	u4711
 10734  0041B4  EFDE  F020         	goto	u4710
 10735  0041B8                     u4711:
 10736  0041B8  EFB3  F020         	goto	l4663
 10737  0041BC                     u4710:
 10738  0041BC                     
 10739                           ;dc_motor.c: 133:     unsigned int delay = angle_right * SENSITIVITY;
 10740  0041BC  5024               	movf	turnRight@angle_right^0,w,c
 10741  0041BE  0100               	movlb	0	; () banked
 10742  0041C0  03FE               	mulwf	_SENSITIVITY& (0+255),b
 10743  0041C2  CFF3 F030          	movff	prodl,turnRight@delay
 10744  0041C6  CFF4 F031          	movff	prodh,turnRight@delay+1
 10745  0041CA                     
 10746                           ; BSR set to: 0
 10747  0041CA  0E0F               	movlw	15
 10748  0041CC  2430               	addwf	turnRight@delay^0,w,c
 10749  0041CE  6E26               	movwf	turnRight@delay_135^0,c
 10750  0041D0  0E00               	movlw	0
 10751  0041D2  2031               	addwfc	(turnRight@delay+1)^0,w,c
 10752  0041D4  6E27               	movwf	(turnRight@delay_135+1)^0,c
 10753  0041D6                     
 10754                           ; BSR set to: 0
 10755  0041D6  0E0A               	movlw	10
 10756  0041D8  2430               	addwf	turnRight@delay^0,w,c
 10757  0041DA  6E28               	movwf	turnRight@delay_180^0,c
 10758  0041DC  0E00               	movlw	0
 10759  0041DE  2031               	addwfc	(turnRight@delay+1)^0,w,c
 10760  0041E0  6E29               	movwf	(turnRight@delay_180+1)^0,c
 10761  0041E2                     
 10762                           ; BSR set to: 0
 10763                           ;dc_motor.c: 136:     if (angle_right == 180){
 10764  0041E2  0EB4               	movlw	180
 10765  0041E4  1824               	xorwf	turnRight@angle_right^0,w,c
 10766  0041E6  A4D8               	btfss	status,2,c
 10767  0041E8  EFF8  F020         	goto	u4721
 10768  0041EC  EFFA  F020         	goto	u4720
 10769  0041F0                     u4721:
 10770  0041F0  EF15  F021         	goto	l4687
 10771  0041F4                     u4720:
 10772  0041F4                     
 10773                           ; BSR set to: 0
 10774                           ;dc_motor.c: 137:         for(unsigned int i = 0; i <delay_180; i++){_delay((unsigned lo
      +                          ng)((1)*(64000000/4000.0)));}
 10775  0041F4  0E00               	movlw	0
 10776  0041F6  6E2B               	movwf	(turnRight@i+1)^0,c
 10777  0041F8  0E00               	movlw	0
 10778  0041FA  6E2A               	movwf	turnRight@i^0,c
 10779  0041FC  EF0A  F021         	goto	l336
 10780  004200                     l4683:
 10781  004200  0E15               	movlw	21
 10782  004202  6E25               	movwf	??_turnRight^0,c
 10783  004204  0EC6               	movlw	198
 10784  004206                     u6217:
 10785  004206  2EE8               	decfsz	wreg,f,c
 10786  004208  D7FE               	bra	u6217
 10787  00420A  2E25               	decfsz	??_turnRight^0,f,c
 10788  00420C  D7FC               	bra	u6217
 10789  00420E  D000               	nop2	
 10790  004210  4A2A               	infsnz	turnRight@i^0,f,c
 10791  004212  2A2B               	incf	(turnRight@i+1)^0,f,c
 10792  004214                     l336:
 10793  004214  5028               	movf	turnRight@delay_180^0,w,c
 10794  004216  5C2A               	subwf	turnRight@i^0,w,c
 10795  004218  5029               	movf	(turnRight@delay_180+1)^0,w,c
 10796  00421A  582B               	subwfb	(turnRight@i+1)^0,w,c
 10797  00421C  A0D8               	btfss	status,0,c
 10798  00421E  EF13  F021         	goto	u4731
 10799  004222  EF15  F021         	goto	u4730
 10800  004226                     u4731:
 10801  004226  EF00  F021         	goto	l4683
 10802  00422A                     u4730:
 10803  00422A                     l4687:
 10804                           
 10805                           ;dc_motor.c: 139:     if (angle_right == 135){
 10806  00422A  0E87               	movlw	135
 10807  00422C  1824               	xorwf	turnRight@angle_right^0,w,c
 10808  00422E  A4D8               	btfss	status,2,c
 10809  004230  EF1C  F021         	goto	u4741
 10810  004234  EF1E  F021         	goto	u4740
 10811  004238                     u4741:
 10812  004238  EF39  F021         	goto	l4695
 10813  00423C                     u4740:
 10814  00423C                     
 10815                           ;dc_motor.c: 140:         for(unsigned int i = 0; i <delay_135; i++){_delay((unsigned lo
      +                          ng)((1)*(64000000/4000.0)));}
 10816  00423C  0E00               	movlw	0
 10817  00423E  6E2D               	movwf	(turnRight@i_1357+1)^0,c
 10818  004240  0E00               	movlw	0
 10819  004242  6E2C               	movwf	turnRight@i_1357^0,c
 10820  004244  EF2E  F021         	goto	l340
 10821  004248                     l4691:
 10822  004248  0E15               	movlw	21
 10823  00424A  6E25               	movwf	??_turnRight^0,c
 10824  00424C  0EC6               	movlw	198
 10825  00424E                     u6227:
 10826  00424E  2EE8               	decfsz	wreg,f,c
 10827  004250  D7FE               	bra	u6227
 10828  004252  2E25               	decfsz	??_turnRight^0,f,c
 10829  004254  D7FC               	bra	u6227
 10830  004256  D000               	nop2	
 10831  004258  4A2C               	infsnz	turnRight@i_1357^0,f,c
 10832  00425A  2A2D               	incf	(turnRight@i_1357+1)^0,f,c
 10833  00425C                     l340:
 10834  00425C  5026               	movf	turnRight@delay_135^0,w,c
 10835  00425E  5C2C               	subwf	turnRight@i_1357^0,w,c
 10836  004260  5027               	movf	(turnRight@delay_135+1)^0,w,c
 10837  004262  582D               	subwfb	(turnRight@i_1357+1)^0,w,c
 10838  004264  A0D8               	btfss	status,0,c
 10839  004266  EF37  F021         	goto	u4751
 10840  00426A  EF39  F021         	goto	u4750
 10841  00426E                     u4751:
 10842  00426E  EF24  F021         	goto	l4691
 10843  004272                     u4750:
 10844  004272                     l4695:
 10845                           
 10846                           ;dc_motor.c: 142:     if (angle_right == 90){
 10847  004272  0E5A               	movlw	90
 10848  004274  1824               	xorwf	turnRight@angle_right^0,w,c
 10849  004276  A4D8               	btfss	status,2,c
 10850  004278  EF40  F021         	goto	u4761
 10851  00427C  EF42  F021         	goto	u4760
 10852  004280                     u4761:
 10853  004280  EF5D  F021         	goto	l4703
 10854  004284                     u4760:
 10855  004284                     
 10856                           ;dc_motor.c: 143:         for(unsigned int i = 0; i < delay; i++){_delay((unsigned long)
      +                          ((1)*(64000000/4000.0)));}
 10857  004284  0E00               	movlw	0
 10858  004286  6E2F               	movwf	(turnRight@i_1358+1)^0,c
 10859  004288  0E00               	movlw	0
 10860  00428A  6E2E               	movwf	turnRight@i_1358^0,c
 10861  00428C  EF52  F021         	goto	l344
 10862  004290                     l4699:
 10863  004290  0E15               	movlw	21
 10864  004292  6E25               	movwf	??_turnRight^0,c
 10865  004294  0EC6               	movlw	198
 10866  004296                     u6237:
 10867  004296  2EE8               	decfsz	wreg,f,c
 10868  004298  D7FE               	bra	u6237
 10869  00429A  2E25               	decfsz	??_turnRight^0,f,c
 10870  00429C  D7FC               	bra	u6237
 10871  00429E  D000               	nop2	
 10872  0042A0  4A2E               	infsnz	turnRight@i_1358^0,f,c
 10873  0042A2  2A2F               	incf	(turnRight@i_1358+1)^0,f,c
 10874  0042A4                     l344:
 10875  0042A4  5030               	movf	turnRight@delay^0,w,c
 10876  0042A6  5C2E               	subwf	turnRight@i_1358^0,w,c
 10877  0042A8  5031               	movf	(turnRight@delay+1)^0,w,c
 10878  0042AA  582F               	subwfb	(turnRight@i_1358+1)^0,w,c
 10879  0042AC  A0D8               	btfss	status,0,c
 10880  0042AE  EF5B  F021         	goto	u4771
 10881  0042B2  EF5D  F021         	goto	u4770
 10882  0042B6                     u4771:
 10883  0042B6  EF48  F021         	goto	l4699
 10884  0042BA                     u4770:
 10885  0042BA                     l4703:
 10886                           
 10887                           ;dc_motor.c: 145:     stop(mL,mR);
 10888  0042BA  C020  F01A         	movff	turnRight@mL,stop@mL
 10889  0042BE  C021  F01B         	movff	turnRight@mL+1,stop@mL+1
 10890  0042C2  C022  F01C         	movff	turnRight@mR,stop@mR
 10891  0042C6  C023  F01D         	movff	turnRight@mR+1,stop@mR+1
 10892  0042CA  EC5A  F028         	call	_stop	;wreg free
 10893  0042CE  0012               	return		;funcret
 10894  0042D0                     __end_of_turnRight:
 10895                           	callstack 0
 10896                           
 10897 ;; *************** function _turnLeft *****************
 10898 ;; Defined at:
 10899 ;;		line 95 in file "dc_motor.c"
 10900 ;; Parameters:    Size  Location     Type
 10901 ;;  mL              2   31[COMRAM] PTR struct DC_motor
 10902 ;;		 -> main@motorL(10), 
 10903 ;;  mR              2   33[COMRAM] PTR struct DC_motor
 10904 ;;		 -> main@motorR(10), 
 10905 ;;  angle_left      1   35[COMRAM] unsigned char 
 10906 ;; Auto vars:     Size  Location     Type
 10907 ;;  i               2   45[COMRAM] unsigned int 
 10908 ;;  i               2   43[COMRAM] unsigned int 
 10909 ;;  i               2   41[COMRAM] unsigned int 
 10910 ;;  delay           2   47[COMRAM] unsigned int 
 10911 ;;  delay_180       2   39[COMRAM] unsigned int 
 10912 ;;  delay_135       2   37[COMRAM] unsigned int 
 10913 ;; Return value:  Size  Location     Type
 10914 ;;                  1    wreg      void 
 10915 ;; Registers used:
 10916 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10917 ;; Tracked objects:
 10918 ;;		On entry : 0/0
 10919 ;;		On exit  : 0/0
 10920 ;;		Unchanged: 0/0
 10921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10922 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10923 ;;      Locals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10924 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10925 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10926 ;;Total ram usage:       18 bytes
 10927 ;; Hardware stack levels used: 1
 10928 ;; Hardware stack levels required when called: 4
 10929 ;; This function calls:
 10930 ;;		_setMotorPWM
 10931 ;;		_stop
 10932 ;; This function is called by:
 10933 ;;		_action
 10934 ;;		_goback
 10935 ;;		_test_action
 10936 ;; This function uses a non-reentrant model
 10937 ;;
 10938                           
 10939                           	psect	text50
 10940  0042D0                     __ptext50:
 10941                           	callstack 0
 10942  0042D0                     _turnLeft:
 10943                           	callstack 25
 10944  0042D0                     
 10945                           ;dc_motor.c: 95: void turnLeft(struct DC_motor *mL, struct DC_motor *mR, unsigned char a
      +                          ngle_left);dc_motor.c: 96: {;dc_motor.c: 97:       mL->direction=1;
 10946  0042D0  EE20 F001          	lfsr	2,1
 10947  0042D4  5020               	movf	turnLeft@mL^0,w,c
 10948  0042D6  26D9               	addwf	fsr2l,f,c
 10949  0042D8  5021               	movf	(turnLeft@mL+1)^0,w,c
 10950  0042DA  22DA               	addwfc	fsr2h,f,c
 10951  0042DC  0E01               	movlw	1
 10952  0042DE  6EDF               	movwf	indf2,c
 10953                           
 10954                           ;dc_motor.c: 98:       mR->direction=1;
 10955  0042E0  EE20 F001          	lfsr	2,1
 10956  0042E4  5022               	movf	turnLeft@mR^0,w,c
 10957  0042E6  26D9               	addwf	fsr2l,f,c
 10958  0042E8  5023               	movf	(turnLeft@mR+1)^0,w,c
 10959  0042EA  22DA               	addwfc	fsr2h,f,c
 10960  0042EC  0E01               	movlw	1
 10961  0042EE  6EDF               	movwf	indf2,c
 10962                           
 10963                           ;dc_motor.c: 99:       while (mR->power <25){
 10964  0042F0  EF99  F021         	goto	l4627
 10965  0042F4                     l4619:
 10966                           
 10967                           ;dc_motor.c: 100:         mR->power += 5;
 10968  0042F4  C022  FFD9         	movff	turnLeft@mR,fsr2l
 10969  0042F8  C023  FFDA         	movff	turnLeft@mR+1,fsr2h
 10970  0042FC  0E05               	movlw	5
 10971  0042FE  26DF               	addwf	indf2,f,c
 10972                           
 10973                           ;dc_motor.c: 101:         mL->power = 0;
 10974  004300  C020  FFD9         	movff	turnLeft@mL,fsr2l
 10975  004304  C021  FFDA         	movff	turnLeft@mL+1,fsr2h
 10976  004308  0E00               	movlw	0
 10977  00430A  6EDF               	movwf	indf2,c
 10978  00430C                     
 10979                           ;dc_motor.c: 102:         setMotorPWM(mL);
 10980  00430C  C020  F00F         	movff	turnLeft@mL,setMotorPWM@m
 10981  004310  C021  F010         	movff	turnLeft@mL+1,setMotorPWM@m+1
 10982  004314  EC38  F01D         	call	_setMotorPWM	;wreg free
 10983  004318                     
 10984                           ;dc_motor.c: 103:         setMotorPWM(mR);
 10985  004318  C022  F00F         	movff	turnLeft@mR,setMotorPWM@m
 10986  00431C  C023  F010         	movff	turnLeft@mR+1,setMotorPWM@m+1
 10987  004320  EC38  F01D         	call	_setMotorPWM	;wreg free
 10988  004324                     
 10989                           ;dc_motor.c: 104:         _delay((unsigned long)((10)*(64000000/4000.0)));
 10990  004324  0ED0               	movlw	208
 10991  004326  6E25               	movwf	??_turnLeft^0,c
 10992  004328  0ECA               	movlw	202
 10993  00432A                     u6247:
 10994  00432A  2EE8               	decfsz	wreg,f,c
 10995  00432C  D7FE               	bra	u6247
 10996  00432E  2E25               	decfsz	??_turnLeft^0,f,c
 10997  004330  D7FC               	bra	u6247
 10998  004332                     l4627:
 10999                           
 11000                           ;dc_motor.c: 99:       while (mR->power <25){
 11001  004332  C022  FFD9         	movff	turnLeft@mR,fsr2l
 11002  004336  C023  FFDA         	movff	turnLeft@mR+1,fsr2h
 11003  00433A  0E18               	movlw	24
 11004  00433C  64DF               	cpfsgt	indf2,c
 11005  00433E  EFA3  F021         	goto	u4641
 11006  004342  EFA5  F021         	goto	u4640
 11007  004346                     u4641:
 11008  004346  EF7A  F021         	goto	l4619
 11009  00434A                     u4640:
 11010  00434A                     
 11011                           ;dc_motor.c: 106:     unsigned int delay = angle_left * SENSITIVITY;
 11012  00434A  5024               	movf	turnLeft@angle_left^0,w,c
 11013  00434C  0100               	movlb	0	; () banked
 11014  00434E  03FE               	mulwf	_SENSITIVITY& (0+255),b
 11015  004350  CFF3 F030          	movff	prodl,turnLeft@delay
 11016  004354  CFF4 F031          	movff	prodh,turnLeft@delay+1
 11017  004358                     
 11018                           ; BSR set to: 0
 11019  004358  0E0F               	movlw	15
 11020  00435A  2430               	addwf	turnLeft@delay^0,w,c
 11021  00435C  6E26               	movwf	turnLeft@delay_135^0,c
 11022  00435E  0E00               	movlw	0
 11023  004360  2031               	addwfc	(turnLeft@delay+1)^0,w,c
 11024  004362  6E27               	movwf	(turnLeft@delay_135+1)^0,c
 11025  004364                     
 11026                           ; BSR set to: 0
 11027  004364  0E0A               	movlw	10
 11028  004366  2430               	addwf	turnLeft@delay^0,w,c
 11029  004368  6E28               	movwf	turnLeft@delay_180^0,c
 11030  00436A  0E00               	movlw	0
 11031  00436C  2031               	addwfc	(turnLeft@delay+1)^0,w,c
 11032  00436E  6E29               	movwf	(turnLeft@delay_180+1)^0,c
 11033  004370                     
 11034                           ; BSR set to: 0
 11035                           ;dc_motor.c: 109:     if (angle_left == 180){
 11036  004370  0EB4               	movlw	180
 11037  004372  1824               	xorwf	turnLeft@angle_left^0,w,c
 11038  004374  A4D8               	btfss	status,2,c
 11039  004376  EFBF  F021         	goto	u4651
 11040  00437A  EFC1  F021         	goto	u4650
 11041  00437E                     u4651:
 11042  00437E  EFDC  F021         	goto	l4643
 11043  004382                     u4650:
 11044  004382                     
 11045                           ; BSR set to: 0
 11046                           ;dc_motor.c: 110:         for(unsigned int i = 0; i <delay_180; i++){_delay((unsigned lo
      +                          ng)((1)*(64000000/4000.0)));}
 11047  004382  0E00               	movlw	0
 11048  004384  6E2B               	movwf	(turnLeft@i+1)^0,c
 11049  004386  0E00               	movlw	0
 11050  004388  6E2A               	movwf	turnLeft@i^0,c
 11051  00438A  EFD1  F021         	goto	l318
 11052  00438E                     l4639:
 11053  00438E  0E15               	movlw	21
 11054  004390  6E25               	movwf	??_turnLeft^0,c
 11055  004392  0EC6               	movlw	198
 11056  004394                     u6257:
 11057  004394  2EE8               	decfsz	wreg,f,c
 11058  004396  D7FE               	bra	u6257
 11059  004398  2E25               	decfsz	??_turnLeft^0,f,c
 11060  00439A  D7FC               	bra	u6257
 11061  00439C  D000               	nop2	
 11062  00439E  4A2A               	infsnz	turnLeft@i^0,f,c
 11063  0043A0  2A2B               	incf	(turnLeft@i+1)^0,f,c
 11064  0043A2                     l318:
 11065  0043A2  5028               	movf	turnLeft@delay_180^0,w,c
 11066  0043A4  5C2A               	subwf	turnLeft@i^0,w,c
 11067  0043A6  5029               	movf	(turnLeft@delay_180+1)^0,w,c
 11068  0043A8  582B               	subwfb	(turnLeft@i+1)^0,w,c
 11069  0043AA  A0D8               	btfss	status,0,c
 11070  0043AC  EFDA  F021         	goto	u4661
 11071  0043B0  EFDC  F021         	goto	u4660
 11072  0043B4                     u4661:
 11073  0043B4  EFC7  F021         	goto	l4639
 11074  0043B8                     u4660:
 11075  0043B8                     l4643:
 11076                           
 11077                           ;dc_motor.c: 112:     if (angle_left == 135){
 11078  0043B8  0E87               	movlw	135
 11079  0043BA  1824               	xorwf	turnLeft@angle_left^0,w,c
 11080  0043BC  A4D8               	btfss	status,2,c
 11081  0043BE  EFE3  F021         	goto	u4671
 11082  0043C2  EFE5  F021         	goto	u4670
 11083  0043C6                     u4671:
 11084  0043C6  EF00  F022         	goto	l4651
 11085  0043CA                     u4670:
 11086  0043CA                     
 11087                           ;dc_motor.c: 113:         for(unsigned int i = 0; i <delay_135; i++){_delay((unsigned lo
      +                          ng)((1)*(64000000/4000.0)));}
 11088  0043CA  0E00               	movlw	0
 11089  0043CC  6E2D               	movwf	(turnLeft@i_1332+1)^0,c
 11090  0043CE  0E00               	movlw	0
 11091  0043D0  6E2C               	movwf	turnLeft@i_1332^0,c
 11092  0043D2  EFF5  F021         	goto	l322
 11093  0043D6                     l4647:
 11094  0043D6  0E15               	movlw	21
 11095  0043D8  6E25               	movwf	??_turnLeft^0,c
 11096  0043DA  0EC6               	movlw	198
 11097  0043DC                     u6267:
 11098  0043DC  2EE8               	decfsz	wreg,f,c
 11099  0043DE  D7FE               	bra	u6267
 11100  0043E0  2E25               	decfsz	??_turnLeft^0,f,c
 11101  0043E2  D7FC               	bra	u6267
 11102  0043E4  D000               	nop2	
 11103  0043E6  4A2C               	infsnz	turnLeft@i_1332^0,f,c
 11104  0043E8  2A2D               	incf	(turnLeft@i_1332+1)^0,f,c
 11105  0043EA                     l322:
 11106  0043EA  5026               	movf	turnLeft@delay_135^0,w,c
 11107  0043EC  5C2C               	subwf	turnLeft@i_1332^0,w,c
 11108  0043EE  5027               	movf	(turnLeft@delay_135+1)^0,w,c
 11109  0043F0  582D               	subwfb	(turnLeft@i_1332+1)^0,w,c
 11110  0043F2  A0D8               	btfss	status,0,c
 11111  0043F4  EFFE  F021         	goto	u4681
 11112  0043F8  EF00  F022         	goto	u4680
 11113  0043FC                     u4681:
 11114  0043FC  EFEB  F021         	goto	l4647
 11115  004400                     u4680:
 11116  004400                     l4651:
 11117                           
 11118                           ;dc_motor.c: 115:     if (angle_left == 90){
 11119  004400  0E5A               	movlw	90
 11120  004402  1824               	xorwf	turnLeft@angle_left^0,w,c
 11121  004404  A4D8               	btfss	status,2,c
 11122  004406  EF07  F022         	goto	u4691
 11123  00440A  EF09  F022         	goto	u4690
 11124  00440E                     u4691:
 11125  00440E  EF24  F022         	goto	l4659
 11126  004412                     u4690:
 11127  004412                     
 11128                           ;dc_motor.c: 116:         for(unsigned int i = 0; i < delay; i++){_delay((unsigned long)
      +                          ((1)*(64000000/4000.0)));}
 11129  004412  0E00               	movlw	0
 11130  004414  6E2F               	movwf	(turnLeft@i_1333+1)^0,c
 11131  004416  0E00               	movlw	0
 11132  004418  6E2E               	movwf	turnLeft@i_1333^0,c
 11133  00441A  EF19  F022         	goto	l326
 11134  00441E                     l4655:
 11135  00441E  0E15               	movlw	21
 11136  004420  6E25               	movwf	??_turnLeft^0,c
 11137  004422  0EC6               	movlw	198
 11138  004424                     u6277:
 11139  004424  2EE8               	decfsz	wreg,f,c
 11140  004426  D7FE               	bra	u6277
 11141  004428  2E25               	decfsz	??_turnLeft^0,f,c
 11142  00442A  D7FC               	bra	u6277
 11143  00442C  D000               	nop2	
 11144  00442E  4A2E               	infsnz	turnLeft@i_1333^0,f,c
 11145  004430  2A2F               	incf	(turnLeft@i_1333+1)^0,f,c
 11146  004432                     l326:
 11147  004432  5030               	movf	turnLeft@delay^0,w,c
 11148  004434  5C2E               	subwf	turnLeft@i_1333^0,w,c
 11149  004436  5031               	movf	(turnLeft@delay+1)^0,w,c
 11150  004438  582F               	subwfb	(turnLeft@i_1333+1)^0,w,c
 11151  00443A  A0D8               	btfss	status,0,c
 11152  00443C  EF22  F022         	goto	u4701
 11153  004440  EF24  F022         	goto	u4700
 11154  004444                     u4701:
 11155  004444  EF0F  F022         	goto	l4655
 11156  004448                     u4700:
 11157  004448                     l4659:
 11158                           
 11159                           ;dc_motor.c: 118:     stop(mL,mR);
 11160  004448  C020  F01A         	movff	turnLeft@mL,stop@mL
 11161  00444C  C021  F01B         	movff	turnLeft@mL+1,stop@mL+1
 11162  004450  C022  F01C         	movff	turnLeft@mR,stop@mR
 11163  004454  C023  F01D         	movff	turnLeft@mR+1,stop@mR+1
 11164  004458  EC5A  F028         	call	_stop	;wreg free
 11165  00445C  0012               	return		;funcret
 11166  00445E                     __end_of_turnLeft:
 11167                           	callstack 0
 11168                           
 11169 ;; *************** function _reverse_square *****************
 11170 ;; Defined at:
 11171 ;;		line 205 in file "dc_motor.c"
 11172 ;; Parameters:    Size  Location     Type
 11173 ;;  mL              2   37[COMRAM] PTR struct DC_motor
 11174 ;;		 -> main@motorL(10), 
 11175 ;;  mR              2   39[COMRAM] PTR struct DC_motor
 11176 ;;		 -> main@motorR(10), 
 11177 ;; Auto vars:     Size  Location     Type
 11178 ;;		None
 11179 ;; Return value:  Size  Location     Type
 11180 ;;                  1    wreg      void 
 11181 ;; Registers used:
 11182 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11183 ;; Tracked objects:
 11184 ;;		On entry : 0/0
 11185 ;;		On exit  : 0/0
 11186 ;;		Unchanged: 0/0
 11187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11188 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11189 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11190 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11191 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11192 ;;Total ram usage:        6 bytes
 11193 ;; Hardware stack levels used: 1
 11194 ;; Hardware stack levels required when called: 5
 11195 ;; This function calls:
 11196 ;;		_fullSpeedBack
 11197 ;;		_stop
 11198 ;; This function is called by:
 11199 ;;		_action
 11200 ;;		_goback
 11201 ;; This function uses a non-reentrant model
 11202 ;;
 11203                           
 11204                           	psect	text51
 11205  00573E                     __ptext51:
 11206                           	callstack 0
 11207  00573E                     _reverse_square:
 11208                           	callstack 24
 11209  00573E                     
 11210                           ;dc_motor.c: 205: void reverse_square(struct DC_motor *mL, struct DC_motor *mR);dc_motor
      +                          .c: 206: { fullSpeedBack(mL, mR);
 11211  00573E  C026  F020         	movff	reverse_square@mL,fullSpeedBack@mL
 11212  005742  C027  F021         	movff	reverse_square@mL+1,fullSpeedBack@mL+1
 11213  005746  C028  F022         	movff	reverse_square@mR,fullSpeedBack@mR
 11214  00574A  C029  F023         	movff	reverse_square@mR+1,fullSpeedBack@mR+1
 11215  00574E  ECFA  F027         	call	_fullSpeedBack	;wreg free
 11216  005752                     
 11217                           ;dc_motor.c: 207:     _delay((unsigned long)((1500)*(64000000/4000.0)));
 11218  005752  0E7A               	movlw	122
 11219  005754  6E2B               	movwf	(??_reverse_square+1)^0,c
 11220  005756  0EC1               	movlw	193
 11221  005758  6E2A               	movwf	??_reverse_square^0,c
 11222  00575A  0E82               	movlw	130
 11223  00575C                     u6287:
 11224  00575C  2EE8               	decfsz	wreg,f,c
 11225  00575E  D7FE               	bra	u6287
 11226  005760  2E2A               	decfsz	??_reverse_square^0,f,c
 11227  005762  D7FC               	bra	u6287
 11228  005764  2E2B               	decfsz	(??_reverse_square+1)^0,f,c
 11229  005766  D7FA               	bra	u6287
 11230  005768                     
 11231                           ;dc_motor.c: 208:     stop(mL,mR);
 11232  005768  C026  F01A         	movff	reverse_square@mL,stop@mL
 11233  00576C  C027  F01B         	movff	reverse_square@mL+1,stop@mL+1
 11234  005770  C028  F01C         	movff	reverse_square@mR,stop@mR
 11235  005774  C029  F01D         	movff	reverse_square@mR+1,stop@mR+1
 11236  005778  EC5A  F028         	call	_stop	;wreg free
 11237  00577C  0012               	return		;funcret
 11238  00577E                     __end_of_reverse_square:
 11239                           	callstack 0
 11240                           
 11241 ;; *************** function _fullSpeedBack *****************
 11242 ;; Defined at:
 11243 ;;		line 168 in file "dc_motor.c"
 11244 ;; Parameters:    Size  Location     Type
 11245 ;;  mL              2   31[COMRAM] PTR struct DC_motor
 11246 ;;		 -> main@motorL(10), 
 11247 ;;  mR              2   33[COMRAM] PTR struct DC_motor
 11248 ;;		 -> main@motorR(10), 
 11249 ;; Auto vars:     Size  Location     Type
 11250 ;;		None
 11251 ;; Return value:  Size  Location     Type
 11252 ;;                  1    wreg      void 
 11253 ;; Registers used:
 11254 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11255 ;; Tracked objects:
 11256 ;;		On entry : 0/0
 11257 ;;		On exit  : 0/0
 11258 ;;		Unchanged: 0/0
 11259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11260 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11261 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11262 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11263 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11264 ;;Total ram usage:        6 bytes
 11265 ;; Hardware stack levels used: 1
 11266 ;; Hardware stack levels required when called: 4
 11267 ;; This function calls:
 11268 ;;		_setMotorPWM
 11269 ;;		_stop
 11270 ;; This function is called by:
 11271 ;;		_short_reverse
 11272 ;;		_reverse_square
 11273 ;; This function uses a non-reentrant model
 11274 ;;
 11275                           
 11276                           	psect	text52
 11277  004FF4                     __ptext52:
 11278                           	callstack 0
 11279  004FF4                     _fullSpeedBack:
 11280                           	callstack 24
 11281  004FF4                     
 11282                           ;dc_motor.c: 168: void fullSpeedBack(struct DC_motor *mL, struct DC_motor *mR);dc_motor.
      +                          c: 169: {;dc_motor.c: 170:     mL->direction=0;
 11283  004FF4  EE20 F001          	lfsr	2,1
 11284  004FF8  5020               	movf	fullSpeedBack@mL^0,w,c
 11285  004FFA  26D9               	addwf	fsr2l,f,c
 11286  004FFC  5021               	movf	(fullSpeedBack@mL+1)^0,w,c
 11287  004FFE  22DA               	addwfc	fsr2h,f,c
 11288  005000  0E00               	movlw	0
 11289  005002  6EDF               	movwf	indf2,c
 11290                           
 11291                           ;dc_motor.c: 171:     mR->direction=0;
 11292  005004  EE20 F001          	lfsr	2,1
 11293  005008  5022               	movf	fullSpeedBack@mR^0,w,c
 11294  00500A  26D9               	addwf	fsr2l,f,c
 11295  00500C  5023               	movf	(fullSpeedBack@mR+1)^0,w,c
 11296  00500E  22DA               	addwfc	fsr2h,f,c
 11297  005010  0E00               	movlw	0
 11298  005012  6EDF               	movwf	indf2,c
 11299                           
 11300                           ;dc_motor.c: 172:     while (mL->power<50 && mR->power<50){
 11301  005014  EF2B  F028         	goto	l4443
 11302  005018                     l4435:
 11303                           
 11304                           ;dc_motor.c: 173:         mL->power += 10;
 11305  005018  C020  FFD9         	movff	fullSpeedBack@mL,fsr2l
 11306  00501C  C021  FFDA         	movff	fullSpeedBack@mL+1,fsr2h
 11307  005020  0E0A               	movlw	10
 11308  005022  26DF               	addwf	indf2,f,c
 11309                           
 11310                           ;dc_motor.c: 174:         mR->power += 10;
 11311  005024  C022  FFD9         	movff	fullSpeedBack@mR,fsr2l
 11312  005028  C023  FFDA         	movff	fullSpeedBack@mR+1,fsr2h
 11313  00502C  0E0A               	movlw	10
 11314  00502E  26DF               	addwf	indf2,f,c
 11315  005030                     
 11316                           ;dc_motor.c: 175:         setMotorPWM(mL);
 11317  005030  C020  F00F         	movff	fullSpeedBack@mL,setMotorPWM@m
 11318  005034  C021  F010         	movff	fullSpeedBack@mL+1,setMotorPWM@m+1
 11319  005038  EC38  F01D         	call	_setMotorPWM	;wreg free
 11320  00503C                     
 11321                           ;dc_motor.c: 176:         setMotorPWM(mR);
 11322  00503C  C022  F00F         	movff	fullSpeedBack@mR,setMotorPWM@m
 11323  005040  C023  F010         	movff	fullSpeedBack@mR+1,setMotorPWM@m+1
 11324  005044  EC38  F01D         	call	_setMotorPWM	;wreg free
 11325  005048                     
 11326                           ;dc_motor.c: 177:         _delay((unsigned long)((10)*(64000000/4000.0)));
 11327  005048  0ED0               	movlw	208
 11328  00504A  6E24               	movwf	??_fullSpeedBack^0,c
 11329  00504C  0ECA               	movlw	202
 11330  00504E                     u6297:
 11331  00504E  2EE8               	decfsz	wreg,f,c
 11332  005050  D7FE               	bra	u6297
 11333  005052  2E24               	decfsz	??_fullSpeedBack^0,f,c
 11334  005054  D7FC               	bra	u6297
 11335  005056                     l4443:
 11336                           
 11337                           ;dc_motor.c: 172:     while (mL->power<50 && mR->power<50){
 11338  005056  C020  FFD9         	movff	fullSpeedBack@mL,fsr2l
 11339  00505A  C021  FFDA         	movff	fullSpeedBack@mL+1,fsr2h
 11340  00505E  0E32               	movlw	50
 11341  005060  60DF               	cpfslt	indf2,c
 11342  005062  EF35  F028         	goto	u4181
 11343  005066  EF37  F028         	goto	u4180
 11344  00506A                     u4181:
 11345  00506A  EF43  F028         	goto	l4447
 11346  00506E                     u4180:
 11347  00506E  C022  FFD9         	movff	fullSpeedBack@mR,fsr2l
 11348  005072  C023  FFDA         	movff	fullSpeedBack@mR+1,fsr2h
 11349  005076  0E31               	movlw	49
 11350  005078  64DF               	cpfsgt	indf2,c
 11351  00507A  EF41  F028         	goto	u4191
 11352  00507E  EF43  F028         	goto	u4190
 11353  005082                     u4191:
 11354  005082  EF0C  F028         	goto	l4435
 11355  005086                     u4190:
 11356  005086                     l4447:
 11357                           
 11358                           ;dc_motor.c: 179:     _delay((unsigned long)((500)*(64000000/4000.0)));
 11359  005086  0E29               	movlw	41
 11360  005088  6E25               	movwf	(??_fullSpeedBack+1)^0,c
 11361  00508A  0E96               	movlw	150
 11362  00508C  6E24               	movwf	??_fullSpeedBack^0,c
 11363  00508E  0E7F               	movlw	127
 11364  005090                     u6307:
 11365  005090  2EE8               	decfsz	wreg,f,c
 11366  005092  D7FE               	bra	u6307
 11367  005094  2E24               	decfsz	??_fullSpeedBack^0,f,c
 11368  005096  D7FC               	bra	u6307
 11369  005098  2E25               	decfsz	(??_fullSpeedBack+1)^0,f,c
 11370  00509A  D7FA               	bra	u6307
 11371  00509C  F000               	nop	
 11372  00509E                     
 11373                           ;dc_motor.c: 180:     stop(mL,mR);
 11374  00509E  C020  F01A         	movff	fullSpeedBack@mL,stop@mL
 11375  0050A2  C021  F01B         	movff	fullSpeedBack@mL+1,stop@mL+1
 11376  0050A6  C022  F01C         	movff	fullSpeedBack@mR,stop@mR
 11377  0050AA  C023  F01D         	movff	fullSpeedBack@mR+1,stop@mR+1
 11378  0050AE  EC5A  F028         	call	_stop	;wreg free
 11379  0050B2  0012               	return		;funcret
 11380  0050B4                     __end_of_fullSpeedBack:
 11381                           	callstack 0
 11382                           
 11383 ;; *************** function _stop *****************
 11384 ;; Defined at:
 11385 ;;		line 82 in file "dc_motor.c"
 11386 ;; Parameters:    Size  Location     Type
 11387 ;;  mL              2   25[COMRAM] PTR struct DC_motor
 11388 ;;		 -> main@motorL(10), 
 11389 ;;  mR              2   27[COMRAM] PTR struct DC_motor
 11390 ;;		 -> main@motorR(10), 
 11391 ;; Auto vars:     Size  Location     Type
 11392 ;;		None
 11393 ;; Return value:  Size  Location     Type
 11394 ;;                  1    wreg      void 
 11395 ;; Registers used:
 11396 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11397 ;; Tracked objects:
 11398 ;;		On entry : 0/0
 11399 ;;		On exit  : 0/0
 11400 ;;		Unchanged: 0/0
 11401 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11402 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11403 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11404 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11405 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11406 ;;Total ram usage:        6 bytes
 11407 ;; Hardware stack levels used: 1
 11408 ;; Hardware stack levels required when called: 3
 11409 ;; This function calls:
 11410 ;;		_setMotorPWM
 11411 ;; This function is called by:
 11412 ;;		_turnLeft
 11413 ;;		_turnRight
 11414 ;;		_fullSpeedBack
 11415 ;;		_short_reverse
 11416 ;;		_reverse_square
 11417 ;;		_main
 11418 ;;		_short_burst_back
 11419 ;;		_goback
 11420 ;;		_test_function
 11421 ;;		_fullSpeedAhead_test
 11422 ;;		_halfSpeedBack
 11423 ;; This function uses a non-reentrant model
 11424 ;;
 11425                           
 11426                           	psect	text53
 11427  0050B4                     __ptext53:
 11428                           	callstack 0
 11429  0050B4                     _stop:
 11430                           	callstack 26
 11431  0050B4                     
 11432                           ;dc_motor.c: 82: void stop(struct DC_motor *mL, struct DC_motor *mR);dc_motor.c: 83: {;d
      +                          c_motor.c: 84:     while (mL->power >0 || mR->power >0){
 11433  0050B4  EF93  F028         	goto	l4205
 11434  0050B8                     l4191:
 11435                           
 11436                           ;dc_motor.c: 85:         if (mL->power !=0){mL->power -= 5;}
 11437  0050B8  C01A  FFD9         	movff	stop@mL,fsr2l
 11438  0050BC  C01B  FFDA         	movff	stop@mL+1,fsr2h
 11439  0050C0  50DF               	movf	indf2,w,c
 11440  0050C2  B4D8               	btfsc	status,2,c
 11441  0050C4  EF66  F028         	goto	u3861
 11442  0050C8  EF68  F028         	goto	u3860
 11443  0050CC                     u3861:
 11444  0050CC  EF6E  F028         	goto	l4195
 11445  0050D0                     u3860:
 11446  0050D0  C01A  FFD9         	movff	stop@mL,fsr2l
 11447  0050D4  C01B  FFDA         	movff	stop@mL+1,fsr2h
 11448  0050D8  0E05               	movlw	5
 11449  0050DA  5EDF               	subwf	indf2,f,c
 11450  0050DC                     l4195:
 11451                           
 11452                           ;dc_motor.c: 86:         if (mR->power !=0){mR->power -= 5;}
 11453  0050DC  C01C  FFD9         	movff	stop@mR,fsr2l
 11454  0050E0  C01D  FFDA         	movff	stop@mR+1,fsr2h
 11455  0050E4  50DF               	movf	indf2,w,c
 11456  0050E6  B4D8               	btfsc	status,2,c
 11457  0050E8  EF78  F028         	goto	u3871
 11458  0050EC  EF7A  F028         	goto	u3870
 11459  0050F0                     u3871:
 11460  0050F0  EF80  F028         	goto	l4199
 11461  0050F4                     u3870:
 11462  0050F4  C01C  FFD9         	movff	stop@mR,fsr2l
 11463  0050F8  C01D  FFDA         	movff	stop@mR+1,fsr2h
 11464  0050FC  0E05               	movlw	5
 11465  0050FE  5EDF               	subwf	indf2,f,c
 11466  005100                     l4199:
 11467                           
 11468                           ;dc_motor.c: 87:         setMotorPWM(mL);
 11469  005100  C01A  F00F         	movff	stop@mL,setMotorPWM@m
 11470  005104  C01B  F010         	movff	stop@mL+1,setMotorPWM@m+1
 11471  005108  EC38  F01D         	call	_setMotorPWM	;wreg free
 11472  00510C                     
 11473                           ;dc_motor.c: 88:         setMotorPWM(mR);
 11474  00510C  C01C  F00F         	movff	stop@mR,setMotorPWM@m
 11475  005110  C01D  F010         	movff	stop@mR+1,setMotorPWM@m+1
 11476  005114  EC38  F01D         	call	_setMotorPWM	;wreg free
 11477  005118                     
 11478                           ;dc_motor.c: 89:         _delay((unsigned long)((10)*(64000000/4000.0)));
 11479  005118  0ED0               	movlw	208
 11480  00511A  6E1E               	movwf	??_stop^0,c
 11481  00511C  0ECA               	movlw	202
 11482  00511E                     u6317:
 11483  00511E  2EE8               	decfsz	wreg,f,c
 11484  005120  D7FE               	bra	u6317
 11485  005122  2E1E               	decfsz	??_stop^0,f,c
 11486  005124  D7FC               	bra	u6317
 11487  005126                     l4205:
 11488                           
 11489                           ;dc_motor.c: 84:     while (mL->power >0 || mR->power >0){
 11490  005126  C01A  FFD9         	movff	stop@mL,fsr2l
 11491  00512A  C01B  FFDA         	movff	stop@mL+1,fsr2h
 11492  00512E  50DF               	movf	indf2,w,c
 11493  005130  A4D8               	btfss	status,2,c
 11494  005132  EF9D  F028         	goto	u3881
 11495  005136  EF9F  F028         	goto	u3880
 11496  00513A                     u3881:
 11497  00513A  EF5C  F028         	goto	l4191
 11498  00513E                     u3880:
 11499  00513E  C01C  FFD9         	movff	stop@mR,fsr2l
 11500  005142  C01D  FFDA         	movff	stop@mR+1,fsr2h
 11501  005146  50DF               	movf	indf2,w,c
 11502  005148  A4D8               	btfss	status,2,c
 11503  00514A  EFA9  F028         	goto	u3891
 11504  00514E  EFAB  F028         	goto	u3890
 11505  005152                     u3891:
 11506  005152  EF5C  F028         	goto	l4191
 11507  005156                     u3890:
 11508  005156                     
 11509                           ;dc_motor.c: 91:     _delay((unsigned long)((500)*(64000000/4000.0)));
 11510  005156  0E29               	movlw	41
 11511  005158  6E1F               	movwf	(??_stop+1)^0,c
 11512  00515A  0E96               	movlw	150
 11513  00515C  6E1E               	movwf	??_stop^0,c
 11514  00515E  0E7F               	movlw	127
 11515  005160                     u6327:
 11516  005160  2EE8               	decfsz	wreg,f,c
 11517  005162  D7FE               	bra	u6327
 11518  005164  2E1E               	decfsz	??_stop^0,f,c
 11519  005166  D7FC               	bra	u6327
 11520  005168  2E1F               	decfsz	(??_stop+1)^0,f,c
 11521  00516A  D7FA               	bra	u6327
 11522  00516C  F000               	nop	
 11523  00516E  0012               	return		;funcret
 11524  005170                     __end_of_stop:
 11525                           	callstack 0
 11526                           
 11527 ;; *************** function _fullSpeedAhead *****************
 11528 ;; Defined at:
 11529 ;;		line 149 in file "dc_motor.c"
 11530 ;; Parameters:    Size  Location     Type
 11531 ;;  mL              2   25[COMRAM] PTR struct DC_motor
 11532 ;;		 -> main@motorL(10), 
 11533 ;;  mR              2   27[COMRAM] PTR struct DC_motor
 11534 ;;		 -> main@motorR(10), 
 11535 ;; Auto vars:     Size  Location     Type
 11536 ;;		None
 11537 ;; Return value:  Size  Location     Type
 11538 ;;                  1    wreg      void 
 11539 ;; Registers used:
 11540 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11541 ;; Tracked objects:
 11542 ;;		On entry : 0/0
 11543 ;;		On exit  : 0/0
 11544 ;;		Unchanged: 0/0
 11545 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11546 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11547 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11548 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11549 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11550 ;;Total ram usage:        5 bytes
 11551 ;; Hardware stack levels used: 1
 11552 ;; Hardware stack levels required when called: 3
 11553 ;; This function calls:
 11554 ;;		_setMotorPWM
 11555 ;; This function is called by:
 11556 ;;		_main
 11557 ;;		_short_burst_back
 11558 ;;		_goback
 11559 ;;		_test_function
 11560 ;;		_fullSpeedAhead_test
 11561 ;; This function uses a non-reentrant model
 11562 ;;
 11563                           
 11564                           	psect	text54
 11565  005170                     __ptext54:
 11566                           	callstack 0
 11567  005170                     _fullSpeedAhead:
 11568                           	callstack 26
 11569  005170                     
 11570                           ;dc_motor.c: 149: void fullSpeedAhead(struct DC_motor *mL, struct DC_motor *mR);dc_motor
      +                          .c: 150: {;dc_motor.c: 151:     mL->direction=1;
 11571  005170  EE20 F001          	lfsr	2,1
 11572  005174  501A               	movf	fullSpeedAhead@mL^0,w,c
 11573  005176  26D9               	addwf	fsr2l,f,c
 11574  005178  501B               	movf	(fullSpeedAhead@mL+1)^0,w,c
 11575  00517A  22DA               	addwfc	fsr2h,f,c
 11576  00517C  0E01               	movlw	1
 11577  00517E  6EDF               	movwf	indf2,c
 11578                           
 11579                           ;dc_motor.c: 152:     mR->direction=1;
 11580  005180  EE20 F001          	lfsr	2,1
 11581  005184  501C               	movf	fullSpeedAhead@mR^0,w,c
 11582  005186  26D9               	addwf	fsr2l,f,c
 11583  005188  501D               	movf	(fullSpeedAhead@mR+1)^0,w,c
 11584  00518A  22DA               	addwfc	fsr2h,f,c
 11585  00518C  0E01               	movlw	1
 11586  00518E  6EDF               	movwf	indf2,c
 11587                           
 11588                           ;dc_motor.c: 153:     while (mL->power<20 && mR->power<20){
 11589  005190  EFE9  F028         	goto	l4715
 11590  005194                     l4707:
 11591                           
 11592                           ;dc_motor.c: 154:         mL->power += 10;
 11593  005194  C01A  FFD9         	movff	fullSpeedAhead@mL,fsr2l
 11594  005198  C01B  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
 11595  00519C  0E0A               	movlw	10
 11596  00519E  26DF               	addwf	indf2,f,c
 11597                           
 11598                           ;dc_motor.c: 155:         mR->power += 10;
 11599  0051A0  C01C  FFD9         	movff	fullSpeedAhead@mR,fsr2l
 11600  0051A4  C01D  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
 11601  0051A8  0E0A               	movlw	10
 11602  0051AA  26DF               	addwf	indf2,f,c
 11603  0051AC                     
 11604                           ;dc_motor.c: 156:         setMotorPWM(mL);
 11605  0051AC  C01A  F00F         	movff	fullSpeedAhead@mL,setMotorPWM@m
 11606  0051B0  C01B  F010         	movff	fullSpeedAhead@mL+1,setMotorPWM@m+1
 11607  0051B4  EC38  F01D         	call	_setMotorPWM	;wreg free
 11608  0051B8                     
 11609                           ;dc_motor.c: 157:         setMotorPWM(mR);
 11610  0051B8  C01C  F00F         	movff	fullSpeedAhead@mR,setMotorPWM@m
 11611  0051BC  C01D  F010         	movff	fullSpeedAhead@mR+1,setMotorPWM@m+1
 11612  0051C0  EC38  F01D         	call	_setMotorPWM	;wreg free
 11613  0051C4                     
 11614                           ;dc_motor.c: 158:         _delay((unsigned long)((10)*(64000000/4000.0)));
 11615  0051C4  0ED0               	movlw	208
 11616  0051C6  6E1E               	movwf	??_fullSpeedAhead^0,c
 11617  0051C8  0ECA               	movlw	202
 11618  0051CA                     u6337:
 11619  0051CA  2EE8               	decfsz	wreg,f,c
 11620  0051CC  D7FE               	bra	u6337
 11621  0051CE  2E1E               	decfsz	??_fullSpeedAhead^0,f,c
 11622  0051D0  D7FC               	bra	u6337
 11623  0051D2                     l4715:
 11624                           
 11625                           ;dc_motor.c: 153:     while (mL->power<20 && mR->power<20){
 11626  0051D2  C01A  FFD9         	movff	fullSpeedAhead@mL,fsr2l
 11627  0051D6  C01B  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
 11628  0051DA  0E14               	movlw	20
 11629  0051DC  60DF               	cpfslt	indf2,c
 11630  0051DE  EFF3  F028         	goto	u4781
 11631  0051E2  EFF5  F028         	goto	u4780
 11632  0051E6                     u4781:
 11633  0051E6  EF01  F029         	goto	l355
 11634  0051EA                     u4780:
 11635  0051EA  C01C  FFD9         	movff	fullSpeedAhead@mR,fsr2l
 11636  0051EE  C01D  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
 11637  0051F2  0E13               	movlw	19
 11638  0051F4  64DF               	cpfsgt	indf2,c
 11639  0051F6  EFFF  F028         	goto	u4791
 11640  0051FA  EF01  F029         	goto	u4790
 11641  0051FE                     u4791:
 11642  0051FE  EFCA  F028         	goto	l4707
 11643  005202                     u4790:
 11644  005202                     l355:
 11645  005202  0012               	return		;funcret
 11646  005204                     __end_of_fullSpeedAhead:
 11647                           	callstack 0
 11648                           
 11649 ;; *************** function _setMotorPWM *****************
 11650 ;; Defined at:
 11651 ;;		line 59 in file "dc_motor.c"
 11652 ;; Parameters:    Size  Location     Type
 11653 ;;  m               2   14[COMRAM] PTR struct DC_motor
 11654 ;;		 -> main@motorR(10), main@motorL(10), 
 11655 ;; Auto vars:     Size  Location     Type
 11656 ;;  PWMduty         2   23[COMRAM] int 
 11657 ;; Return value:  Size  Location     Type
 11658 ;;                  1    wreg      void 
 11659 ;; Registers used:
 11660 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11661 ;; Tracked objects:
 11662 ;;		On entry : 0/0
 11663 ;;		On exit  : 0/0
 11664 ;;		Unchanged: 0/0
 11665 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11666 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11667 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11668 ;;      Temps:          7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11669 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11670 ;;Total ram usage:       11 bytes
 11671 ;; Hardware stack levels used: 1
 11672 ;; Hardware stack levels required when called: 2
 11673 ;; This function calls:
 11674 ;;		___awdiv
 11675 ;;		___wmul
 11676 ;; This function is called by:
 11677 ;;		_stop
 11678 ;;		_turnLeft
 11679 ;;		_turnRight
 11680 ;;		_fullSpeedAhead
 11681 ;;		_fullSpeedBack
 11682 ;;		_halfSpeedBack
 11683 ;; This function uses a non-reentrant model
 11684 ;;
 11685                           
 11686                           	psect	text55
 11687  003A70                     __ptext55:
 11688                           	callstack 0
 11689  003A70                     _setMotorPWM:
 11690                           	callstack 26
 11691  003A70                     
 11692                           ;dc_motor.c: 59: void setMotorPWM(struct DC_motor *m);dc_motor.c: 60: {;dc_motor.c: 61: 
      +                           int PWMduty;;dc_motor.c: 63:  if (m->direction){
 11693  003A70  EE20 F001          	lfsr	2,1
 11694  003A74  500F               	movf	setMotorPWM@m^0,w,c
 11695  003A76  26D9               	addwf	fsr2l,f,c
 11696  003A78  5010               	movf	(setMotorPWM@m+1)^0,w,c
 11697  003A7A  22DA               	addwfc	fsr2h,f,c
 11698  003A7C  50DF               	movf	indf2,w,c
 11699  003A7E  B4D8               	btfsc	status,2,c
 11700  003A80  EF44  F01D         	goto	u3371
 11701  003A84  EF46  F01D         	goto	u3370
 11702  003A88                     u3371:
 11703  003A88  EF77  F01D         	goto	l3905
 11704  003A8C                     u3370:
 11705  003A8C                     
 11706                           ;dc_motor.c: 65:   PWMduty=m->PWMperiod - ((int)(m->power)*(m->PWMperiod))/100;
 11707  003A8C  C00F  FFD9         	movff	setMotorPWM@m,fsr2l
 11708  003A90  C010  FFDA         	movff	setMotorPWM@m+1,fsr2h
 11709  003A94  50DF               	movf	indf2,w,c
 11710  003A96  6E11               	movwf	??_setMotorPWM^0,c
 11711  003A98  5011               	movf	??_setMotorPWM^0,w,c
 11712  003A9A  6E01               	movwf	___wmul@multiplier^0,c
 11713  003A9C  6A02               	clrf	(___wmul@multiplier+1)^0,c
 11714  003A9E  EE20 F007          	lfsr	2,7
 11715  003AA2  500F               	movf	setMotorPWM@m^0,w,c
 11716  003AA4  26D9               	addwf	fsr2l,f,c
 11717  003AA6  5010               	movf	(setMotorPWM@m+1)^0,w,c
 11718  003AA8  22DA               	addwfc	fsr2h,f,c
 11719  003AAA  CFDE F003          	movff	postinc2,___wmul@multiplicand
 11720  003AAE  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
 11721  003AB2  ECC2  F02C         	call	___wmul	;wreg free
 11722  003AB6  C001  F007         	movff	?___wmul,___awdiv@dividend
 11723  003ABA  C002  F008         	movff	?___wmul+1,___awdiv@dividend+1
 11724  003ABE  0E00               	movlw	0
 11725  003AC0  6E0A               	movwf	(___awdiv@divisor+1)^0,c
 11726  003AC2  0E64               	movlw	100
 11727  003AC4  6E09               	movwf	___awdiv@divisor^0,c
 11728  003AC6  EC98  F027         	call	___awdiv	;wreg free
 11729  003ACA  EE20 F007          	lfsr	2,7
 11730  003ACE  500F               	movf	setMotorPWM@m^0,w,c
 11731  003AD0  26D9               	addwf	fsr2l,f,c
 11732  003AD2  5010               	movf	(setMotorPWM@m+1)^0,w,c
 11733  003AD4  22DA               	addwfc	fsr2h,f,c
 11734  003AD6  CFDE F012          	movff	postinc2,??_setMotorPWM+1
 11735  003ADA  CFDD F013          	movff	postdec2,??_setMotorPWM+2
 11736  003ADE  5007               	movf	?___awdiv^0,w,c
 11737  003AE0  5C12               	subwf	(??_setMotorPWM+1)^0,w,c
 11738  003AE2  6E18               	movwf	setMotorPWM@PWMduty^0,c
 11739  003AE4  5008               	movf	(?___awdiv+1)^0,w,c
 11740  003AE6  5813               	subwfb	(??_setMotorPWM+2)^0,w,c
 11741  003AE8  6E19               	movwf	(setMotorPWM@PWMduty+1)^0,c
 11742                           
 11743                           ;dc_motor.c: 66:  }
 11744  003AEA  EF9A  F01D         	goto	l3907
 11745  003AEE                     l3905:
 11746                           
 11747                           ;dc_motor.c: 69:   PWMduty=((int)(m->power)*(m->PWMperiod))/100;
 11748  003AEE  C00F  FFD9         	movff	setMotorPWM@m,fsr2l
 11749  003AF2  C010  FFDA         	movff	setMotorPWM@m+1,fsr2h
 11750  003AF6  50DF               	movf	indf2,w,c
 11751  003AF8  6E11               	movwf	??_setMotorPWM^0,c
 11752  003AFA  5011               	movf	??_setMotorPWM^0,w,c
 11753  003AFC  6E01               	movwf	___wmul@multiplier^0,c
 11754  003AFE  6A02               	clrf	(___wmul@multiplier+1)^0,c
 11755  003B00  EE20 F007          	lfsr	2,7
 11756  003B04  500F               	movf	setMotorPWM@m^0,w,c
 11757  003B06  26D9               	addwf	fsr2l,f,c
 11758  003B08  5010               	movf	(setMotorPWM@m+1)^0,w,c
 11759  003B0A  22DA               	addwfc	fsr2h,f,c
 11760  003B0C  CFDE F003          	movff	postinc2,___wmul@multiplicand
 11761  003B10  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
 11762  003B14  ECC2  F02C         	call	___wmul	;wreg free
 11763  003B18  C001  F007         	movff	?___wmul,___awdiv@dividend
 11764  003B1C  C002  F008         	movff	?___wmul+1,___awdiv@dividend+1
 11765  003B20  0E00               	movlw	0
 11766  003B22  6E0A               	movwf	(___awdiv@divisor+1)^0,c
 11767  003B24  0E64               	movlw	100
 11768  003B26  6E09               	movwf	___awdiv@divisor^0,c
 11769  003B28  EC98  F027         	call	___awdiv	;wreg free
 11770  003B2C  C007  F018         	movff	?___awdiv,setMotorPWM@PWMduty
 11771  003B30  C008  F019         	movff	?___awdiv+1,setMotorPWM@PWMduty+1
 11772  003B34                     l3907:
 11773                           
 11774                           ;dc_motor.c: 72:  *(m->dutyHighByte) = PWMduty;
 11775  003B34  EE20 F002          	lfsr	2,2
 11776  003B38  500F               	movf	setMotorPWM@m^0,w,c
 11777  003B3A  26D9               	addwf	fsr2l,f,c
 11778  003B3C  5010               	movf	(setMotorPWM@m+1)^0,w,c
 11779  003B3E  22DA               	addwfc	fsr2h,f,c
 11780  003B40  CFDE F011          	movff	postinc2,??_setMotorPWM
 11781  003B44  CFDD F012          	movff	postdec2,??_setMotorPWM+1
 11782  003B48  C011  FFD9         	movff	??_setMotorPWM,fsr2l
 11783  003B4C  C012  FFDA         	movff	??_setMotorPWM+1,fsr2h
 11784  003B50  C018  FFDF         	movff	setMotorPWM@PWMduty,indf2
 11785  003B54                     
 11786                           ;dc_motor.c: 74:  if (m->direction){
 11787  003B54  EE20 F001          	lfsr	2,1
 11788  003B58  500F               	movf	setMotorPWM@m^0,w,c
 11789  003B5A  26D9               	addwf	fsr2l,f,c
 11790  003B5C  5010               	movf	(setMotorPWM@m+1)^0,w,c
 11791  003B5E  22DA               	addwfc	fsr2h,f,c
 11792  003B60  50DF               	movf	indf2,w,c
 11793  003B62  B4D8               	btfsc	status,2,c
 11794  003B64  EFB6  F01D         	goto	u3381
 11795  003B68  EFB8  F01D         	goto	u3380
 11796  003B6C                     u3381:
 11797  003B6C  EFED  F01D         	goto	l3913
 11798  003B70                     u3380:
 11799  003B70                     
 11800                           ;dc_motor.c: 75:   *(m->dir_LAT) = *(m->dir_LAT) | (1<<(m->dir_pin));
 11801  003B70  EE20 F004          	lfsr	2,4
 11802  003B74  500F               	movf	setMotorPWM@m^0,w,c
 11803  003B76  26D9               	addwf	fsr2l,f,c
 11804  003B78  5010               	movf	(setMotorPWM@m+1)^0,w,c
 11805  003B7A  22DA               	addwfc	fsr2h,f,c
 11806  003B7C  CFDE F011          	movff	postinc2,??_setMotorPWM
 11807  003B80  CFDD F012          	movff	postdec2,??_setMotorPWM+1
 11808  003B84  C011  FFD9         	movff	??_setMotorPWM,fsr2l
 11809  003B88  C012  FFDA         	movff	??_setMotorPWM+1,fsr2h
 11810  003B8C  EE10 F004          	lfsr	1,4
 11811  003B90  500F               	movf	setMotorPWM@m^0,w,c
 11812  003B92  26E1               	addwf	fsr1l,f,c
 11813  003B94  5010               	movf	(setMotorPWM@m+1)^0,w,c
 11814  003B96  22E2               	addwfc	fsr1h,f,c
 11815  003B98  CFE6 F013          	movff	postinc1,??_setMotorPWM+2
 11816  003B9C  CFE5 F014          	movff	postdec1,??_setMotorPWM+3
 11817  003BA0  C013  FFE1         	movff	??_setMotorPWM+2,fsr1l
 11818  003BA4  C014  FFE2         	movff	??_setMotorPWM+3,fsr1h
 11819  003BA8  50E7               	movf	indf1,w,c
 11820  003BAA  6E15               	movwf	(??_setMotorPWM+4)^0,c
 11821  003BAC  EE10 F006          	lfsr	1,6
 11822  003BB0  500F               	movf	setMotorPWM@m^0,w,c
 11823  003BB2  26E1               	addwf	fsr1l,f,c
 11824  003BB4  5010               	movf	(setMotorPWM@m+1)^0,w,c
 11825  003BB6  22E2               	addwfc	fsr1h,f,c
 11826  003BB8  50E7               	movf	indf1,w,c
 11827  003BBA  6E16               	movwf	(??_setMotorPWM+5)^0,c
 11828  003BBC  0E01               	movlw	1
 11829  003BBE  6E17               	movwf	(??_setMotorPWM+6)^0,c
 11830  003BC0  2A16               	incf	(??_setMotorPWM+5)^0,f,c
 11831  003BC2  EFE5  F01D         	goto	u3394
 11832  003BC6                     u3395:
 11833  003BC6  90D8               	bcf	status,0,c
 11834  003BC8  3617               	rlcf	(??_setMotorPWM+6)^0,f,c
 11835  003BCA                     u3394:
 11836  003BCA  2E16               	decfsz	(??_setMotorPWM+5)^0,f,c
 11837  003BCC  EFE3  F01D         	goto	u3395
 11838  003BD0  5017               	movf	(??_setMotorPWM+6)^0,w,c
 11839  003BD2  1015               	iorwf	(??_setMotorPWM+4)^0,w,c
 11840  003BD4  6EDF               	movwf	indf2,c
 11841                           
 11842                           ;dc_motor.c: 76:  } else {
 11843  003BD6  EF21  F01E         	goto	l303
 11844  003BDA                     l3913:
 11845                           
 11846                           ;dc_motor.c: 77:   *(m->dir_LAT) = *(m->dir_LAT) & (~(1<<(m->dir_pin)));
 11847  003BDA  EE20 F004          	lfsr	2,4
 11848  003BDE  500F               	movf	setMotorPWM@m^0,w,c
 11849  003BE0  26D9               	addwf	fsr2l,f,c
 11850  003BE2  5010               	movf	(setMotorPWM@m+1)^0,w,c
 11851  003BE4  22DA               	addwfc	fsr2h,f,c
 11852  003BE6  CFDE F011          	movff	postinc2,??_setMotorPWM
 11853  003BEA  CFDD F012          	movff	postdec2,??_setMotorPWM+1
 11854  003BEE  C011  FFD9         	movff	??_setMotorPWM,fsr2l
 11855  003BF2  C012  FFDA         	movff	??_setMotorPWM+1,fsr2h
 11856  003BF6  EE10 F004          	lfsr	1,4
 11857  003BFA  500F               	movf	setMotorPWM@m^0,w,c
 11858  003BFC  26E1               	addwf	fsr1l,f,c
 11859  003BFE  5010               	movf	(setMotorPWM@m+1)^0,w,c
 11860  003C00  22E2               	addwfc	fsr1h,f,c
 11861  003C02  CFE6 F013          	movff	postinc1,??_setMotorPWM+2
 11862  003C06  CFE5 F014          	movff	postdec1,??_setMotorPWM+3
 11863  003C0A  C013  FFE1         	movff	??_setMotorPWM+2,fsr1l
 11864  003C0E  C014  FFE2         	movff	??_setMotorPWM+3,fsr1h
 11865  003C12  50E7               	movf	indf1,w,c
 11866  003C14  6E15               	movwf	(??_setMotorPWM+4)^0,c
 11867  003C16  EE10 F006          	lfsr	1,6
 11868  003C1A  500F               	movf	setMotorPWM@m^0,w,c
 11869  003C1C  26E1               	addwf	fsr1l,f,c
 11870  003C1E  5010               	movf	(setMotorPWM@m+1)^0,w,c
 11871  003C20  22E2               	addwfc	fsr1h,f,c
 11872  003C22  50E7               	movf	indf1,w,c
 11873  003C24  6E16               	movwf	(??_setMotorPWM+5)^0,c
 11874  003C26  0E01               	movlw	1
 11875  003C28  6E17               	movwf	(??_setMotorPWM+6)^0,c
 11876  003C2A  2A16               	incf	(??_setMotorPWM+5)^0,f,c
 11877  003C2C  EF1A  F01E         	goto	u3404
 11878  003C30                     u3405:
 11879  003C30  90D8               	bcf	status,0,c
 11880  003C32  3617               	rlcf	(??_setMotorPWM+6)^0,f,c
 11881  003C34                     u3404:
 11882  003C34  2E16               	decfsz	(??_setMotorPWM+5)^0,f,c
 11883  003C36  EF18  F01E         	goto	u3405
 11884  003C3A  5017               	movf	(??_setMotorPWM+6)^0,w,c
 11885  003C3C  0AFF               	xorlw	255
 11886  003C3E  1415               	andwf	(??_setMotorPWM+4)^0,w,c
 11887  003C40  6EDF               	movwf	indf2,c
 11888  003C42                     l303:
 11889  003C42  0012               	return		;funcret
 11890  003C44                     __end_of_setMotorPWM:
 11891                           	callstack 0
 11892                           
 11893 ;; *************** function ___wmul *****************
 11894 ;; Defined at:
 11895 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\Umul16.c"
 11896 ;; Parameters:    Size  Location     Type
 11897 ;;  multiplier      2    0[COMRAM] unsigned int 
 11898 ;;  multiplicand    2    2[COMRAM] unsigned int 
 11899 ;; Auto vars:     Size  Location     Type
 11900 ;;  product         2    4[COMRAM] unsigned int 
 11901 ;; Return value:  Size  Location     Type
 11902 ;;                  2    0[COMRAM] unsigned int 
 11903 ;; Registers used:
 11904 ;;		wreg, status,2, status,0, prodl, prodh
 11905 ;; Tracked objects:
 11906 ;;		On entry : 0/0
 11907 ;;		On exit  : 0/0
 11908 ;;		Unchanged: 0/0
 11909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11910 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11911 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11912 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11913 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11914 ;;Total ram usage:        6 bytes
 11915 ;; Hardware stack levels used: 1
 11916 ;; Hardware stack levels required when called: 1
 11917 ;; This function calls:
 11918 ;;		Nothing
 11919 ;; This function is called by:
 11920 ;;		_setMotorPWM
 11921 ;; This function uses a non-reentrant model
 11922 ;;
 11923                           
 11924                           	psect	text56
 11925  005984                     __ptext56:
 11926                           	callstack 0
 11927  005984                     ___wmul:
 11928                           	callstack 26
 11929  005984  5001               	movf	___wmul@multiplier^0,w,c
 11930  005986  0203               	mulwf	___wmul@multiplicand^0,c
 11931  005988  CFF3 F005          	movff	prodl,___wmul@product
 11932  00598C  CFF4 F006          	movff	prodh,___wmul@product+1
 11933  005990  5001               	movf	___wmul@multiplier^0,w,c
 11934  005992  0204               	mulwf	(___wmul@multiplicand+1)^0,c
 11935  005994  50F3               	movf	243,w,c
 11936  005996  2606               	addwf	(___wmul@product+1)^0,f,c
 11937  005998  5002               	movf	(___wmul@multiplier+1)^0,w,c
 11938  00599A  0203               	mulwf	___wmul@multiplicand^0,c
 11939  00599C  50F3               	movf	243,w,c
 11940  00599E  2606               	addwf	(___wmul@product+1)^0,f,c
 11941  0059A0  C005  F001         	movff	___wmul@product,?___wmul
 11942  0059A4  C006  F002         	movff	___wmul@product+1,?___wmul+1
 11943  0059A8  0012               	return		;funcret
 11944  0059AA                     __end_of___wmul:
 11945                           	callstack 0
 11946                           
 11947 ;; *************** function ___awdiv *****************
 11948 ;; Defined at:
 11949 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\awdiv.c"
 11950 ;; Parameters:    Size  Location     Type
 11951 ;;  dividend        2    6[COMRAM] int 
 11952 ;;  divisor         2    8[COMRAM] int 
 11953 ;; Auto vars:     Size  Location     Type
 11954 ;;  quotient        2   12[COMRAM] int 
 11955 ;;  sign            1   11[COMRAM] unsigned char 
 11956 ;;  counter         1   10[COMRAM] unsigned char 
 11957 ;; Return value:  Size  Location     Type
 11958 ;;                  2    6[COMRAM] int 
 11959 ;; Registers used:
 11960 ;;		wreg, status,2, status,0
 11961 ;; Tracked objects:
 11962 ;;		On entry : 0/0
 11963 ;;		On exit  : 0/0
 11964 ;;		Unchanged: 0/0
 11965 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11966 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11967 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11968 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11969 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11970 ;;Total ram usage:        8 bytes
 11971 ;; Hardware stack levels used: 1
 11972 ;; Hardware stack levels required when called: 1
 11973 ;; This function calls:
 11974 ;;		Nothing
 11975 ;; This function is called by:
 11976 ;;		_setMotorPWM
 11977 ;; This function uses a non-reentrant model
 11978 ;;
 11979                           
 11980                           	psect	text57
 11981  004F30                     __ptext57:
 11982                           	callstack 0
 11983  004F30                     ___awdiv:
 11984                           	callstack 26
 11985  004F30  0E00               	movlw	0
 11986  004F32  6E0C               	movwf	___awdiv@sign^0,c
 11987  004F34  BE0A               	btfsc	(___awdiv@divisor+1)^0,7,c
 11988  004F36  EFA1  F027         	goto	u3140
 11989  004F3A  EF9F  F027         	goto	u3141
 11990  004F3E                     u3141:
 11991  004F3E  EFA7  F027         	goto	l3799
 11992  004F42                     u3140:
 11993  004F42  6C09               	negf	___awdiv@divisor^0,c
 11994  004F44  1E0A               	comf	(___awdiv@divisor+1)^0,f,c
 11995  004F46  B0D8               	btfsc	status,0,c
 11996  004F48  2A0A               	incf	(___awdiv@divisor+1)^0,f,c
 11997  004F4A  0E01               	movlw	1
 11998  004F4C  6E0C               	movwf	___awdiv@sign^0,c
 11999  004F4E                     l3799:
 12000  004F4E  BE08               	btfsc	(___awdiv@dividend+1)^0,7,c
 12001  004F50  EFAE  F027         	goto	u3150
 12002  004F54  EFAC  F027         	goto	u3151
 12003  004F58                     u3151:
 12004  004F58  EFB4  F027         	goto	l3805
 12005  004F5C                     u3150:
 12006  004F5C  6C07               	negf	___awdiv@dividend^0,c
 12007  004F5E  1E08               	comf	(___awdiv@dividend+1)^0,f,c
 12008  004F60  B0D8               	btfsc	status,0,c
 12009  004F62  2A08               	incf	(___awdiv@dividend+1)^0,f,c
 12010  004F64  0E01               	movlw	1
 12011  004F66  1A0C               	xorwf	___awdiv@sign^0,f,c
 12012  004F68                     l3805:
 12013  004F68  0E00               	movlw	0
 12014  004F6A  6E0E               	movwf	(___awdiv@quotient+1)^0,c
 12015  004F6C  0E00               	movlw	0
 12016  004F6E  6E0D               	movwf	___awdiv@quotient^0,c
 12017  004F70  5009               	movf	___awdiv@divisor^0,w,c
 12018  004F72  100A               	iorwf	(___awdiv@divisor+1)^0,w,c
 12019  004F74  B4D8               	btfsc	status,2,c
 12020  004F76  EFBF  F027         	goto	u3161
 12021  004F7A  EFC1  F027         	goto	u3160
 12022  004F7E                     u3161:
 12023  004F7E  EFE9  F027         	goto	l3827
 12024  004F82                     u3160:
 12025  004F82  0E01               	movlw	1
 12026  004F84  6E0B               	movwf	___awdiv@counter^0,c
 12027  004F86  EFC9  F027         	goto	l3813
 12028  004F8A                     l3811:
 12029  004F8A  90D8               	bcf	status,0,c
 12030  004F8C  3609               	rlcf	___awdiv@divisor^0,f,c
 12031  004F8E  360A               	rlcf	(___awdiv@divisor+1)^0,f,c
 12032  004F90  2A0B               	incf	___awdiv@counter^0,f,c
 12033  004F92                     l3813:
 12034  004F92  AE0A               	btfss	(___awdiv@divisor+1)^0,7,c
 12035  004F94  EFCE  F027         	goto	u3171
 12036  004F98  EFD0  F027         	goto	u3170
 12037  004F9C                     u3171:
 12038  004F9C  EFC5  F027         	goto	l3811
 12039  004FA0                     u3170:
 12040  004FA0                     l3815:
 12041  004FA0  90D8               	bcf	status,0,c
 12042  004FA2  360D               	rlcf	___awdiv@quotient^0,f,c
 12043  004FA4  360E               	rlcf	(___awdiv@quotient+1)^0,f,c
 12044  004FA6  5009               	movf	___awdiv@divisor^0,w,c
 12045  004FA8  5C07               	subwf	___awdiv@dividend^0,w,c
 12046  004FAA  500A               	movf	(___awdiv@divisor+1)^0,w,c
 12047  004FAC  5808               	subwfb	(___awdiv@dividend+1)^0,w,c
 12048  004FAE  A0D8               	btfss	status,0,c
 12049  004FB0  EFDC  F027         	goto	u3181
 12050  004FB4  EFDE  F027         	goto	u3180
 12051  004FB8                     u3181:
 12052  004FB8  EFE3  F027         	goto	l3823
 12053  004FBC                     u3180:
 12054  004FBC  5009               	movf	___awdiv@divisor^0,w,c
 12055  004FBE  5E07               	subwf	___awdiv@dividend^0,f,c
 12056  004FC0  500A               	movf	(___awdiv@divisor+1)^0,w,c
 12057  004FC2  5A08               	subwfb	(___awdiv@dividend+1)^0,f,c
 12058  004FC4  800D               	bsf	___awdiv@quotient^0,0,c
 12059  004FC6                     l3823:
 12060  004FC6  90D8               	bcf	status,0,c
 12061  004FC8  320A               	rrcf	(___awdiv@divisor+1)^0,f,c
 12062  004FCA  3209               	rrcf	___awdiv@divisor^0,f,c
 12063  004FCC  2E0B               	decfsz	___awdiv@counter^0,f,c
 12064  004FCE  EFD0  F027         	goto	l3815
 12065  004FD2                     l3827:
 12066  004FD2  500C               	movf	___awdiv@sign^0,w,c
 12067  004FD4  B4D8               	btfsc	status,2,c
 12068  004FD6  EFEF  F027         	goto	u3191
 12069  004FDA  EFF1  F027         	goto	u3190
 12070  004FDE                     u3191:
 12071  004FDE  EFF5  F027         	goto	l3831
 12072  004FE2                     u3190:
 12073  004FE2  6C0D               	negf	___awdiv@quotient^0,c
 12074  004FE4  1E0E               	comf	(___awdiv@quotient+1)^0,f,c
 12075  004FE6  B0D8               	btfsc	status,0,c
 12076  004FE8  2A0E               	incf	(___awdiv@quotient+1)^0,f,c
 12077  004FEA                     l3831:
 12078  004FEA  C00D  F007         	movff	___awdiv@quotient,?___awdiv
 12079  004FEE  C00E  F008         	movff	___awdiv@quotient+1,?___awdiv+1
 12080  004FF2  0012               	return		;funcret
 12081  004FF4                     __end_of___awdiv:
 12082                           	callstack 0
 12083                           
 12084 ;; *************** function _color_predict *****************
 12085 ;; Defined at:
 12086 ;;		line 250 in file "color.c"
 12087 ;; Parameters:    Size  Location     Type
 12088 ;;  color           1    wreg     unsigned char 
 12089 ;; Auto vars:     Size  Location     Type
 12090 ;;  color           1  125[BANK0 ] unsigned char 
 12091 ;;  buf           100   25[BANK0 ] unsigned char [100]
 12092 ;; Return value:  Size  Location     Type
 12093 ;;                  1    wreg      void 
 12094 ;; Registers used:
 12095 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 12096 ;; Tracked objects:
 12097 ;;		On entry : 0/0
 12098 ;;		On exit  : 0/0
 12099 ;;		Unchanged: 0/0
 12100 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12101 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12102 ;;      Locals:         0     101       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12103 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12104 ;;      Totals:         0     101       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12105 ;;Total ram usage:      101 bytes
 12106 ;; Hardware stack levels used: 1
 12107 ;; Hardware stack levels required when called: 9
 12108 ;; This function calls:
 12109 ;;		_sendStringSerial4
 12110 ;;		_sprintf
 12111 ;; This function is called by:
 12112 ;;		_color_data_collection
 12113 ;;		_main
 12114 ;;		_goback
 12115 ;;		_test_function
 12116 ;; This function uses a non-reentrant model
 12117 ;;
 12118                           
 12119                           	psect	text58
 12120  005904                     __ptext58:
 12121                           	callstack 0
 12122  005904                     _color_predict:
 12123                           	callstack 20
 12124                           
 12125                           ;incstack = 0
 12126                           ;color_predict@color stored from wreg
 12127  005904  0100               	movlb	0	; () banked
 12128  005906  6FDD               	movwf	color_predict@color& (0+255),b
 12129  005908                     
 12130                           ;color.c: 250: void color_predict(unsigned char color);color.c: 251: {;color.c: 252:    
      +                           char buf[100];;color.c: 253:     sprintf(buf,"\t%d\r\n", color);
 12131  005908  0E79               	movlw	low color_predict@buf
 12132  00590A  0100               	movlb	0	; () banked
 12133  00590C  6F60               	movwf	sprintf@s& (0+255),b
 12134  00590E  0E00               	movlw	high color_predict@buf
 12135  005910  6F61               	movwf	(sprintf@s+1)& (0+255),b
 12136  005912  0E1E               	movlw	low (STR_1+8)
 12137  005914  6F62               	movwf	sprintf@fmt& (0+255),b
 12138  005916  0E0E               	movlw	high (STR_1+8)
 12139  005918  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
 12140  00591A  C0DD  F064         	movff	color_predict@color,?_sprintf+4
 12141  00591E  6B65               	clrf	(?_sprintf+5)& (0+255),b
 12142  005920  EC0F  F02A         	call	_sprintf	;wreg free
 12143  005924                     
 12144                           ;color.c: 254:     sendStringSerial4(buf);
 12145  005924  0E79               	movlw	low color_predict@buf
 12146  005926  6E02               	movwf	sendStringSerial4@string^0,c
 12147  005928  0E00               	movlw	high color_predict@buf
 12148  00592A  6E03               	movwf	(sendStringSerial4@string+1)^0,c
 12149  00592C  EC6A  F02C         	call	_sendStringSerial4	;wreg free
 12150  005930  0012               	return		;funcret
 12151  005932                     __end_of_color_predict:
 12152                           	callstack 0
 12153                           
 12154 ;; *************** function _sprintf *****************
 12155 ;; Defined at:
 12156 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\nf_sprintf.c"
 12157 ;; Parameters:    Size  Location     Type
 12158 ;;  s               2    0[BANK0 ] PTR unsigned char 
 12159 ;;		 -> goback@buf2(100), goback@buf3(100), goback@buf(100), action@buf(100), 
 12160 ;;		 -> color_predict@buf(100), color_display@buf(100), 
 12161 ;;  fmt             2    2[BANK0 ] PTR const unsigned char 
 12162 ;;		 -> STR_6(17), STR_5(9), STR_4(10), STR_3(13), 
 12163 ;;		 -> STR_2(6), STR_1(14), 
 12164 ;; Auto vars:     Size  Location     Type
 12165 ;;  f              11   14[BANK0 ] struct _IO_FILE
 12166 ;;  ap              2   12[BANK0 ] PTR void [1]
 12167 ;;		 -> ?_sprintf(2), 
 12168 ;;  ret             2    0        int 
 12169 ;; Return value:  Size  Location     Type
 12170 ;;                  2    0[BANK0 ] int 
 12171 ;; Registers used:
 12172 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 12173 ;; Tracked objects:
 12174 ;;		On entry : 0/0
 12175 ;;		On exit  : 0/0
 12176 ;;		Unchanged: 0/0
 12177 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12178 ;;      Params:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12179 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12180 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12181 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12182 ;;Total ram usage:       25 bytes
 12183 ;; Hardware stack levels used: 1
 12184 ;; Hardware stack levels required when called: 8
 12185 ;; This function calls:
 12186 ;;		_vfprintf
 12187 ;; This function is called by:
 12188 ;;		_color_display
 12189 ;;		_color_predict
 12190 ;;		_action
 12191 ;;		_goback
 12192 ;; This function uses a non-reentrant model
 12193 ;;
 12194                           
 12195                           	psect	text59
 12196  00541E                     __ptext59:
 12197                           	callstack 0
 12198  00541E                     _sprintf:
 12199                           	callstack 20
 12200  00541E  0E64               	movlw	low (?_sprintf+4)
 12201  005420  0100               	movlb	0	; () banked
 12202  005422  6F6C               	movwf	sprintf@ap& (0+255),b
 12203  005424  0E00               	movlw	high (?_sprintf+4)
 12204  005426  6F6D               	movwf	(sprintf@ap+1)& (0+255),b
 12205  005428  C060  F06E         	movff	sprintf@s,sprintf@f
 12206  00542C  C061  F06F         	movff	sprintf@s+1,sprintf@f+1
 12207  005430                     
 12208                           ; BSR set to: 0
 12209  005430  0E00               	movlw	0
 12210  005432  6F72               	movwf	(sprintf@f+4)& (0+255),b
 12211  005434  0E00               	movlw	0
 12212  005436  6F71               	movwf	(sprintf@f+3)& (0+255),b
 12213  005438                     
 12214                           ; BSR set to: 0
 12215  005438  0E00               	movlw	0
 12216  00543A  6F78               	movwf	(sprintf@f+10)& (0+255),b
 12217  00543C  0E00               	movlw	0
 12218  00543E  6F77               	movwf	(sprintf@f+9)& (0+255),b
 12219  005440                     
 12220                           ; BSR set to: 0
 12221  005440  0E6E               	movlw	low sprintf@f
 12222  005442  6E50               	movwf	vfprintf@fp^0,c
 12223  005444  0E00               	movlw	high sprintf@f
 12224  005446  6E51               	movwf	(vfprintf@fp+1)^0,c
 12225  005448  C062  F052         	movff	sprintf@fmt,vfprintf@fmt
 12226  00544C  C063  F053         	movff	sprintf@fmt+1,vfprintf@fmt+1
 12227  005450  0E6C               	movlw	low sprintf@ap
 12228  005452  6E54               	movwf	vfprintf@ap^0,c
 12229  005454  0E00               	movlw	high sprintf@ap
 12230  005456  6E55               	movwf	(vfprintf@ap+1)^0,c
 12231  005458  ECAF  F029         	call	_vfprintf	;wreg free
 12232  00545C  0100               	movlb	0	; () banked
 12233  00545E  5171               	movf	(sprintf@f+3)& (0+255),w,b
 12234  005460  2560               	addwf	sprintf@s& (0+255),w,b
 12235  005462  6ED9               	movwf	fsr2l,c
 12236  005464  5172               	movf	(sprintf@f+4)& (0+255),w,b
 12237  005466  2161               	addwfc	(sprintf@s+1)& (0+255),w,b
 12238  005468  6EDA               	movwf	fsr2h,c
 12239  00546A  0E00               	movlw	0
 12240  00546C  6EDF               	movwf	indf2,c
 12241  00546E                     
 12242                           ; BSR set to: 0
 12243  00546E  0012               	return		;funcret
 12244  005470                     __end_of_sprintf:
 12245                           	callstack 0
 12246                           
 12247 ;; *************** function _vfprintf *****************
 12248 ;; Defined at:
 12249 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c"
 12250 ;; Parameters:    Size  Location     Type
 12251 ;;  fp              2   79[COMRAM] PTR struct _IO_FILE
 12252 ;;		 -> sprintf@f(11), 
 12253 ;;  fmt             2   81[COMRAM] PTR const unsigned char 
 12254 ;;		 -> STR_6(17), STR_5(9), STR_4(10), STR_3(13), 
 12255 ;;		 -> STR_2(6), STR_1(14), 
 12256 ;;  ap              2   83[COMRAM] PTR PTR void 
 12257 ;;		 -> sprintf@ap(2), 
 12258 ;; Auto vars:     Size  Location     Type
 12259 ;;  cfmt            2   85[COMRAM] PTR unsigned char 
 12260 ;;		 -> STR_6(17), STR_5(9), STR_4(10), STR_3(13), 
 12261 ;;		 -> STR_2(6), STR_1(14), 
 12262 ;; Return value:  Size  Location     Type
 12263 ;;                  2   79[COMRAM] int 
 12264 ;; Registers used:
 12265 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 12266 ;; Tracked objects:
 12267 ;;		On entry : 0/0
 12268 ;;		On exit  : 0/0
 12269 ;;		Unchanged: 0/0
 12270 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12271 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12272 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12273 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12274 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12275 ;;Total ram usage:        8 bytes
 12276 ;; Hardware stack levels used: 1
 12277 ;; Hardware stack levels required when called: 7
 12278 ;; This function calls:
 12279 ;;		_vfpfcnvrt
 12280 ;; This function is called by:
 12281 ;;		_sprintf
 12282 ;; This function uses a non-reentrant model
 12283 ;;
 12284                           
 12285                           	psect	text60
 12286  00535E                     __ptext60:
 12287                           	callstack 0
 12288  00535E                     _vfprintf:
 12289                           	callstack 20
 12290  00535E                     
 12291                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.35\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
 12292  00535E  C052  F056         	movff	vfprintf@fmt,vfprintf@cfmt
 12293  005362  C053  F057         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
 12294  005366                     
 12295                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
 12296  005366  0E00               	movlw	0
 12297  005368  0101               	movlb	1	; () banked
 12298  00536A  6FF5               	movwf	(_nout+1)& (0+255),b
 12299  00536C  0E00               	movlw	0
 12300  00536E  6FF4               	movwf	_nout& (0+255),b
 12301                           
 12302                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
 12303  005370  EFCD  F029         	goto	l4387
 12304  005374                     l4385:
 12305                           
 12306                           ; BSR set to: 1
 12307                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
 12308  005374  C050  F040         	movff	vfprintf@fp,vfpfcnvrt@fp
 12309  005378  C051  F041         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
 12310  00537C  0E56               	movlw	low vfprintf@cfmt
 12311  00537E  6E42               	movwf	vfpfcnvrt@fmt^0,c
 12312  005380  0E00               	movlw	high vfprintf@cfmt
 12313  005382  6E43               	movwf	(vfpfcnvrt@fmt+1)^0,c
 12314  005384  C054  F044         	movff	vfprintf@ap,vfpfcnvrt@ap
 12315  005388  C055  F045         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
 12316  00538C  ECFC  F01E         	call	_vfpfcnvrt	;wreg free
 12317  005390  5040               	movf	?_vfpfcnvrt^0,w,c
 12318  005392  0101               	movlb	1	; () banked
 12319  005394  27F4               	addwf	_nout& (0+255),f,b
 12320  005396  5041               	movf	(?_vfpfcnvrt+1)^0,w,c
 12321  005398  23F5               	addwfc	(_nout+1)& (0+255),f,b
 12322  00539A                     l4387:
 12323                           
 12324                           ; BSR set to: 1
 12325                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
 12326  00539A  C056  FFF6         	movff	vfprintf@cfmt,tblptrl
 12327  00539E  C057  FFF7         	movff	vfprintf@cfmt+1,tblptrh
 12328  0053A2                     	if	0	;tblptru may be non-zero
 12329  0053A2                     	endif
 12330  0053A2                     	if	0	;tblptru may be non-zero
 12331  0053A2                     	endif
 12332  0053A2  0008               	tblrd		*
 12333  0053A4  50F5               	movf	tablat,w,c
 12334  0053A6  0900               	iorlw	0
 12335  0053A8  A4D8               	btfss	status,2,c
 12336  0053AA  EFD9  F029         	goto	u4161
 12337  0053AE  EFDB  F029         	goto	u4160
 12338  0053B2                     u4161:
 12339  0053B2  EFBA  F029         	goto	l4385
 12340  0053B6                     u4160:
 12341  0053B6                     
 12342                           ; BSR set to: 1
 12343                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
 12344  0053B6  C1F4  F050         	movff	_nout,?_vfprintf
 12345  0053BA  C1F5  F051         	movff	_nout+1,?_vfprintf+1
 12346  0053BE                     
 12347                           ; BSR set to: 1
 12348  0053BE  0012               	return		;funcret
 12349  0053C0                     __end_of_vfprintf:
 12350                           	callstack 0
 12351                           
 12352 ;; *************** function _vfpfcnvrt *****************
 12353 ;; Defined at:
 12354 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c"
 12355 ;; Parameters:    Size  Location     Type
 12356 ;;  fp              2   63[COMRAM] PTR struct _IO_FILE
 12357 ;;		 -> sprintf@f(11), 
 12358 ;;  fmt             2   65[COMRAM] PTR PTR unsigned char 
 12359 ;;		 -> vfprintf@cfmt(2), 
 12360 ;;  ap              2   67[COMRAM] PTR PTR void 
 12361 ;;		 -> sprintf@ap(2), 
 12362 ;; Auto vars:     Size  Location     Type
 12363 ;;  ll              8   71[COMRAM] long long 
 12364 ;;  llu             8    0        unsigned long long 
 12365 ;;  f               4    0        unsigned long long 
 12366 ;;  vp              3    0        PTR void 
 12367 ;;  ct              3    0        unsigned char [3]
 12368 ;;  cp              3    0        PTR unsigned char 
 12369 ;;  i               2    0        int 
 12370 ;;  done            2    0        int 
 12371 ;;  c               1    0        unsigned char 
 12372 ;; Return value:  Size  Location     Type
 12373 ;;                  2   63[COMRAM] int 
 12374 ;; Registers used:
 12375 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 12376 ;; Tracked objects:
 12377 ;;		On entry : 0/0
 12378 ;;		On exit  : 0/0
 12379 ;;		Unchanged: 0/0
 12380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12381 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12382 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12383 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12384 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12385 ;;Total ram usage:       16 bytes
 12386 ;; Hardware stack levels used: 1
 12387 ;; Hardware stack levels required when called: 6
 12388 ;; This function calls:
 12389 ;;		_dtoa
 12390 ;;		_fputc
 12391 ;; This function is called by:
 12392 ;;		_vfprintf
 12393 ;; This function uses a non-reentrant model
 12394 ;;
 12395                           
 12396                           	psect	text61
 12397  003DF8                     __ptext61:
 12398                           	callstack 0
 12399  003DF8                     _vfpfcnvrt:
 12400                           	callstack 20
 12401  003DF8                     
 12402                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.35\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.35\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.35\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          5\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
 12403  003DF8  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 12404  003DFC  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 12405  003E00  CFDE FFF6          	movff	postinc2,tblptrl
 12406  003E04  CFDD FFF7          	movff	postdec2,tblptrh
 12407  003E08                     	if	0	;tblptru may be non-zero
 12408  003E08                     	endif
 12409  003E08                     	if	0	;tblptru may be non-zero
 12410  003E08                     	endif
 12411  003E08  0008               	tblrd		*
 12412  003E0A  50F5               	movf	tablat,w,c
 12413  003E0C  0A25               	xorlw	37
 12414  003E0E  A4D8               	btfss	status,2,c
 12415  003E10  EF0C  F01F         	goto	u3801
 12416  003E14  EF0E  F01F         	goto	u3800
 12417  003E18                     u3801:
 12418  003E18  EFBA  F01F         	goto	l4151
 12419  003E1C                     u3800:
 12420  003E1C                     
 12421                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
 12422  003E1C  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 12423  003E20  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 12424  003E24  2ADE               	incf	postinc2,f,c
 12425  003E26  0E00               	movlw	0
 12426  003E28  22DD               	addwfc	postdec2,f,c
 12427  003E2A                     
 12428                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
 12429  003E2A  0E00               	movlw	0
 12430  003E2C  0101               	movlb	1	; () banked
 12431  003E2E  6FF7               	movwf	(_width+1)& (0+255),b
 12432  003E30  0E00               	movlw	0
 12433  003E32  6FF6               	movwf	_width& (0+255),b
 12434  003E34  C1F6  F0F8         	movff	_width,_flags
 12435  003E38  C1F7  F0F9         	movff	_width+1,_flags+1
 12436  003E3C                     
 12437                           ; BSR set to: 1
 12438                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
 12439  003E3C  69F8               	setf	_prec& (0+255),b
 12440  003E3E  69F9               	setf	(_prec+1)& (0+255),b
 12441  003E40                     
 12442                           ; BSR set to: 1
 12443                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
 12444  003E40  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 12445  003E44  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 12446  003E48  CFDE FFF6          	movff	postinc2,tblptrl
 12447  003E4C  CFDD FFF7          	movff	postdec2,tblptrh
 12448  003E50                     	if	0	;tblptru may be non-zero
 12449  003E50                     	endif
 12450  003E50                     	if	0	;tblptru may be non-zero
 12451  003E50                     	endif
 12452  003E50  0008               	tblrd		*
 12453  003E52  50F5               	movf	tablat,w,c
 12454  003E54  0A64               	xorlw	100
 12455  003E56  B4D8               	btfsc	status,2,c
 12456  003E58  EF30  F01F         	goto	u3811
 12457  003E5C  EF32  F01F         	goto	u3810
 12458  003E60                     u3811:
 12459  003E60  EF44  F01F         	goto	l4129
 12460  003E64                     u3810:
 12461  003E64                     
 12462                           ; BSR set to: 1
 12463  003E64  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 12464  003E68  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 12465  003E6C  CFDE FFF6          	movff	postinc2,tblptrl
 12466  003E70  CFDD FFF7          	movff	postdec2,tblptrh
 12467  003E74                     	if	0	;tblptru may be non-zero
 12468  003E74                     	endif
 12469  003E74                     	if	0	;tblptru may be non-zero
 12470  003E74                     	endif
 12471  003E74  0008               	tblrd		*
 12472  003E76  50F5               	movf	tablat,w,c
 12473  003E78  0A69               	xorlw	105
 12474  003E7A  A4D8               	btfss	status,2,c
 12475  003E7C  EF42  F01F         	goto	u3821
 12476  003E80  EF44  F01F         	goto	u3820
 12477  003E84                     u3821:
 12478  003E84  EF84  F01F         	goto	l4135
 12479  003E88                     u3820:
 12480  003E88                     l4129:
 12481                           
 12482                           ; BSR set to: 1
 12483                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
 12484  003E88  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 12485  003E8C  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 12486  003E90  2ADE               	incf	postinc2,f,c
 12487  003E92  0E00               	movlw	0
 12488  003E94  22DD               	addwfc	postdec2,f,c
 12489                           
 12490                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
 12491  003E96  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
 12492  003E9A  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
 12493  003E9E  CFDF F046          	movff	indf2,??_vfpfcnvrt
 12494  003EA2  0E02               	movlw	2
 12495  003EA4  26DE               	addwf	postinc2,f,c
 12496  003EA6  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
 12497  003EAA  0E00               	movlw	0
 12498  003EAC  22DD               	addwfc	postdec2,f,c
 12499  003EAE  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
 12500  003EB2  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
 12501  003EB6  CFDE F048          	movff	postinc2,vfpfcnvrt@ll
 12502  003EBA  CFDD F049          	movff	postdec2,vfpfcnvrt@ll+1
 12503  003EBE  0E00               	movlw	0
 12504  003EC0  BE49               	btfsc	(vfpfcnvrt@ll+1)^0,7,c
 12505  003EC2  0EFF               	movlw	-1
 12506  003EC4  6E4A               	movwf	(vfpfcnvrt@ll+2)^0,c
 12507  003EC6  6E4B               	movwf	(vfpfcnvrt@ll+3)^0,c
 12508  003EC8  6E4C               	movwf	(vfpfcnvrt@ll+4)^0,c
 12509  003ECA  6E4D               	movwf	(vfpfcnvrt@ll+5)^0,c
 12510  003ECC  6E4E               	movwf	(vfpfcnvrt@ll+6)^0,c
 12511  003ECE  6E4F               	movwf	(vfpfcnvrt@ll+7)^0,c
 12512  003ED0                     
 12513                           ; BSR set to: 1
 12514                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
 12515  003ED0  C040  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
 12516  003ED4  C041  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
 12517  003ED8  C048  F01E         	movff	vfpfcnvrt@ll,dtoa@d
 12518  003EDC  C049  F01F         	movff	vfpfcnvrt@ll+1,dtoa@d+1
 12519  003EE0  C04A  F020         	movff	vfpfcnvrt@ll+2,dtoa@d+2
 12520  003EE4  C04B  F021         	movff	vfpfcnvrt@ll+3,dtoa@d+3
 12521  003EE8  C04C  F022         	movff	vfpfcnvrt@ll+4,dtoa@d+4
 12522  003EEC  C04D  F023         	movff	vfpfcnvrt@ll+5,dtoa@d+5
 12523  003EF0  C04E  F024         	movff	vfpfcnvrt@ll+6,dtoa@d+6
 12524  003EF4  C04F  F025         	movff	vfpfcnvrt@ll+7,dtoa@d+7
 12525  003EF8  EC74  F018         	call	_dtoa	;wreg free
 12526  003EFC  C01C  F040         	movff	?_dtoa,?_vfpfcnvrt
 12527  003F00  C01D  F041         	movff	?_dtoa+1,?_vfpfcnvrt+1
 12528  003F04  EFD5  F01F         	goto	l1541
 12529  003F08                     l4135:
 12530                           
 12531                           ; BSR set to: 1
 12532                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
 12533  003F08  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 12534  003F0C  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 12535  003F10  CFDE FFF6          	movff	postinc2,tblptrl
 12536  003F14  CFDD FFF7          	movff	postdec2,tblptrh
 12537  003F18                     	if	0	;tblptru may be non-zero
 12538  003F18                     	endif
 12539  003F18                     	if	0	;tblptru may be non-zero
 12540  003F18                     	endif
 12541  003F18  0008               	tblrd		*
 12542  003F1A  50F5               	movf	tablat,w,c
 12543  003F1C  0A25               	xorlw	37
 12544  003F1E  A4D8               	btfss	status,2,c
 12545  003F20  EF94  F01F         	goto	u3831
 12546  003F24  EF96  F01F         	goto	u3830
 12547  003F28                     u3831:
 12548  003F28  EFAD  F01F         	goto	l4145
 12549  003F2C                     u3830:
 12550  003F2C                     
 12551                           ; BSR set to: 1
 12552                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
 12553  003F2C  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 12554  003F30  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 12555  003F34  2ADE               	incf	postinc2,f,c
 12556  003F36  0E00               	movlw	0
 12557  003F38  22DD               	addwfc	postdec2,f,c
 12558  003F3A                     
 12559                           ; BSR set to: 1
 12560                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
 12561  003F3A  0E00               	movlw	0
 12562  003F3C  6E02               	movwf	(fputc@c+1)^0,c
 12563  003F3E  0E25               	movlw	37
 12564  003F40  6E01               	movwf	fputc@c^0,c
 12565  003F42  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
 12566  003F46  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
 12567  003F4A  EC6D  F026         	call	_fputc	;wreg free
 12568  003F4E                     l4141:
 12569                           
 12570                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
 12571  003F4E  0E00               	movlw	0
 12572  003F50  6E41               	movwf	(?_vfpfcnvrt+1)^0,c
 12573  003F52  0E01               	movlw	1
 12574  003F54  6E40               	movwf	?_vfpfcnvrt^0,c
 12575  003F56  EFD5  F01F         	goto	l1541
 12576  003F5A                     l4145:
 12577                           
 12578                           ; BSR set to: 1
 12579                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
 12580  003F5A  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 12581  003F5E  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 12582  003F62  2ADE               	incf	postinc2,f,c
 12583  003F64  0E00               	movlw	0
 12584  003F66  22DD               	addwfc	postdec2,f,c
 12585  003F68                     
 12586                           ; BSR set to: 1
 12587                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
 12588  003F68  0E00               	movlw	0
 12589  003F6A  6E41               	movwf	(?_vfpfcnvrt+1)^0,c
 12590  003F6C  0E00               	movlw	0
 12591  003F6E  6E40               	movwf	?_vfpfcnvrt^0,c
 12592  003F70  EFD5  F01F         	goto	l1541
 12593  003F74                     l4151:
 12594                           
 12595                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
 12596  003F74  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 12597  003F78  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 12598  003F7C  CFDE FFF6          	movff	postinc2,tblptrl
 12599  003F80  CFDD FFF7          	movff	postdec2,tblptrh
 12600  003F84                     	if	0	;tblptru may be non-zero
 12601  003F84                     	endif
 12602  003F84                     	if	0	;tblptru may be non-zero
 12603  003F84                     	endif
 12604  003F84  0008               	tblrd		*
 12605  003F86  50F5               	movf	tablat,w,c
 12606  003F88  6E01               	movwf	fputc@c^0,c
 12607  003F8A  6A02               	clrf	(fputc@c+1)^0,c
 12608  003F8C  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
 12609  003F90  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
 12610  003F94  EC6D  F026         	call	_fputc	;wreg free
 12611  003F98                     
 12612                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
 12613  003F98  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
 12614  003F9C  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
 12615  003FA0  2ADE               	incf	postinc2,f,c
 12616  003FA2  0E00               	movlw	0
 12617  003FA4  22DD               	addwfc	postdec2,f,c
 12618  003FA6  EFA7  F01F         	goto	l4141
 12619  003FAA                     l1541:
 12620  003FAA  0012               	return		;funcret
 12621  003FAC                     __end_of_vfpfcnvrt:
 12622                           	callstack 0
 12623                           
 12624 ;; *************** function _dtoa *****************
 12625 ;; Defined at:
 12626 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c"
 12627 ;; Parameters:    Size  Location     Type
 12628 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
 12629 ;;		 -> sprintf@f(11), 
 12630 ;;  d               8   29[COMRAM] long long 
 12631 ;; Auto vars:     Size  Location     Type
 12632 ;;  n               8   53[COMRAM] long long 
 12633 ;;  i               2   61[COMRAM] int 
 12634 ;;  s               2   51[COMRAM] int 
 12635 ;;  w               2   49[COMRAM] int 
 12636 ;;  p               2   47[COMRAM] int 
 12637 ;; Return value:  Size  Location     Type
 12638 ;;                  2   27[COMRAM] int 
 12639 ;; Registers used:
 12640 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 12641 ;; Tracked objects:
 12642 ;;		On entry : 0/0
 12643 ;;		On exit  : 0/0
 12644 ;;		Unchanged: 0/0
 12645 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12646 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12647 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12648 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12649 ;;      Totals:        36       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12650 ;;Total ram usage:       36 bytes
 12651 ;; Hardware stack levels used: 1
 12652 ;; Hardware stack levels required when called: 5
 12653 ;; This function calls:
 12654 ;;		___aodiv
 12655 ;;		___aomod
 12656 ;;		_abs
 12657 ;;		_pad
 12658 ;; This function is called by:
 12659 ;;		_vfpfcnvrt
 12660 ;; This function uses a non-reentrant model
 12661 ;;
 12662                           
 12663                           	psect	text62
 12664  0030E8                     __ptext62:
 12665                           	callstack 0
 12666  0030E8                     _dtoa:
 12667                           	callstack 20
 12668  0030E8                     
 12669                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
 12670  0030E8  C01E  F036         	movff	dtoa@d,dtoa@n
 12671  0030EC  C01F  F037         	movff	dtoa@d+1,dtoa@n+1
 12672  0030F0  C020  F038         	movff	dtoa@d+2,dtoa@n+2
 12673  0030F4  C021  F039         	movff	dtoa@d+3,dtoa@n+3
 12674  0030F8  C022  F03A         	movff	dtoa@d+4,dtoa@n+4
 12675  0030FC  C023  F03B         	movff	dtoa@d+5,dtoa@n+5
 12676  003100  C024  F03C         	movff	dtoa@d+6,dtoa@n+6
 12677  003104  C025  F03D         	movff	dtoa@d+7,dtoa@n+7
 12678  003108                     
 12679                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
 12680  003108  BE3D               	btfsc	(dtoa@n+7)^0,7,c
 12681  00310A  EF89  F018         	goto	u3201
 12682  00310E  EF8C  F018         	goto	u3200
 12683  003112                     u3201:
 12684  003112  0E01               	movlw	1
 12685  003114  EF8D  F018         	goto	u3210
 12686  003118                     u3200:
 12687  003118  0E00               	movlw	0
 12688  00311A                     u3210:
 12689  00311A  6E34               	movwf	dtoa@s^0,c
 12690  00311C  6A35               	clrf	(dtoa@s+1)^0,c
 12691                           
 12692                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 295:     if (s) {
 12693  00311E  5034               	movf	dtoa@s^0,w,c
 12694  003120  1035               	iorwf	(dtoa@s+1)^0,w,c
 12695  003122  B4D8               	btfsc	status,2,c
 12696  003124  EF96  F018         	goto	u3221
 12697  003128  EF98  F018         	goto	u3220
 12698  00312C                     u3221:
 12699  00312C  EFA8  F018         	goto	l3841
 12700  003130                     u3220:
 12701  003130                     
 12702                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
 12703  003130  1E3D               	comf	(dtoa@n+7)^0,f,c
 12704  003132  1E3C               	comf	(dtoa@n+6)^0,f,c
 12705  003134  1E3B               	comf	(dtoa@n+5)^0,f,c
 12706  003136  1E3A               	comf	(dtoa@n+4)^0,f,c
 12707  003138  1E39               	comf	(dtoa@n+3)^0,f,c
 12708  00313A  1E38               	comf	(dtoa@n+2)^0,f,c
 12709  00313C  1E37               	comf	(dtoa@n+1)^0,f,c
 12710  00313E  6C36               	negf	dtoa@n^0,c
 12711  003140  0E00               	movlw	0
 12712  003142  2237               	addwfc	(dtoa@n+1)^0,f,c
 12713  003144  2238               	addwfc	(dtoa@n+2)^0,f,c
 12714  003146  2239               	addwfc	(dtoa@n+3)^0,f,c
 12715  003148  223A               	addwfc	(dtoa@n+4)^0,f,c
 12716  00314A  223B               	addwfc	(dtoa@n+5)^0,f,c
 12717  00314C  223C               	addwfc	(dtoa@n+6)^0,f,c
 12718  00314E  223D               	addwfc	(dtoa@n+7)^0,f,c
 12719  003150                     l3841:
 12720                           
 12721                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
 12722  003150  0101               	movlb	1	; () banked
 12723  003152  BFF9               	btfsc	(_prec+1)& (0+255),7,b
 12724  003154  EFAE  F018         	goto	u3231
 12725  003158  EFB0  F018         	goto	u3230
 12726  00315C                     u3231:
 12727  00315C  EFB2  F018         	goto	l3845
 12728  003160                     u3230:
 12729  003160                     
 12730                           ; BSR set to: 1
 12731                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
 12732  003160  0100               	movlb	0	; () banked
 12733  003162  93F8               	bcf	_flags& (0+255),1,b
 12734  003164                     l3845:
 12735                           
 12736                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
 12737  003164  0101               	movlb	1	; () banked
 12738  003166  BFF9               	btfsc	(_prec+1)& (0+255),7,b
 12739  003168  EFC0  F018         	goto	u3240
 12740  00316C  51F9               	movf	(_prec+1)& (0+255),w,b
 12741  00316E  E106               	bnz	u3241
 12742  003170  05F8               	decf	_prec& (0+255),w,b
 12743  003172  B0D8               	btfsc	status,0,c
 12744  003174  EFBE  F018         	goto	u3241
 12745  003178  EFC0  F018         	goto	u3240
 12746  00317C                     u3241:
 12747  00317C  EFC6  F018         	goto	l1514
 12748  003180                     u3240:
 12749  003180                     
 12750                           ; BSR set to: 1
 12751  003180  0E00               	movlw	0
 12752  003182  6E31               	movwf	(dtoa@p+1)^0,c
 12753  003184  0E01               	movlw	1
 12754  003186  6E30               	movwf	dtoa@p^0,c
 12755  003188  EFCA  F018         	goto	l1516
 12756  00318C                     l1514:
 12757                           
 12758                           ; BSR set to: 1
 12759  00318C  C1F8  F030         	movff	_prec,dtoa@p
 12760  003190  C1F9  F031         	movff	_prec+1,dtoa@p+1
 12761  003194                     l1516:
 12762                           
 12763                           ; BSR set to: 1
 12764                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
 12765  003194  C1F6  F032         	movff	_width,dtoa@w
 12766  003198  C1F7  F033         	movff	_width+1,dtoa@w+1
 12767  00319C                     
 12768                           ; BSR set to: 1
 12769                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
 12770  00319C  5034               	movf	dtoa@s^0,w,c
 12771  00319E  1035               	iorwf	(dtoa@s+1)^0,w,c
 12772  0031A0  A4D8               	btfss	status,2,c
 12773  0031A2  EFD5  F018         	goto	u3251
 12774  0031A6  EFD7  F018         	goto	u3250
 12775  0031AA                     u3251:
 12776  0031AA  EFDF  F018         	goto	l3853
 12777  0031AE                     u3250:
 12778  0031AE                     
 12779                           ; BSR set to: 1
 12780  0031AE  0100               	movlb	0	; () banked
 12781  0031B0  A5F8               	btfss	_flags& (0+255),2,b
 12782  0031B2  EFDD  F018         	goto	u3261
 12783  0031B6  EFDF  F018         	goto	u3260
 12784  0031BA                     u3261:
 12785  0031BA  EFE2  F018         	goto	l3855
 12786  0031BE                     u3260:
 12787  0031BE                     l3853:
 12788                           
 12789                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 306:         --w;
 12790  0031BE  0632               	decf	dtoa@w^0,f,c
 12791  0031C0  A0D8               	btfss	status,0,c
 12792  0031C2  0633               	decf	(dtoa@w+1)^0,f,c
 12793  0031C4                     l3855:
 12794                           
 12795                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
 12796  0031C4  0E00               	movlw	0
 12797  0031C6  6E3F               	movwf	(dtoa@i+1)^0,c
 12798  0031C8  0E1F               	movlw	31
 12799  0031CA  6E3E               	movwf	dtoa@i^0,c
 12800  0031CC                     
 12801                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
 12802  0031CC  0E00               	movlw	0
 12803  0031CE  0102               	movlb	2	; () banked
 12804  0031D0  6FE8               	movwf	(_dbuf+31)& (0+255),b
 12805                           
 12806                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 12807  0031D2  EF67  F019         	goto	l3869
 12808  0031D6                     l3859:
 12809                           
 12810                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 313:         --i;
 12811  0031D6  063E               	decf	dtoa@i^0,f,c
 12812  0031D8  A0D8               	btfss	status,0,c
 12813  0031DA  063F               	decf	(dtoa@i+1)^0,f,c
 12814  0031DC                     
 12815                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
 12816  0031DC  0EC9               	movlw	low _dbuf
 12817  0031DE  243E               	addwf	dtoa@i^0,w,c
 12818  0031E0  6ED9               	movwf	fsr2l,c
 12819  0031E2  0E02               	movlw	high _dbuf
 12820  0031E4  203F               	addwfc	(dtoa@i+1)^0,w,c
 12821  0031E6  6EDA               	movwf	fsr2h,c
 12822  0031E8  C036  F001         	movff	dtoa@n,___aomod@dividend
 12823  0031EC  C037  F002         	movff	dtoa@n+1,___aomod@dividend+1
 12824  0031F0  C038  F003         	movff	dtoa@n+2,___aomod@dividend+2
 12825  0031F4  C039  F004         	movff	dtoa@n+3,___aomod@dividend+3
 12826  0031F8  C03A  F005         	movff	dtoa@n+4,___aomod@dividend+4
 12827  0031FC  C03B  F006         	movff	dtoa@n+5,___aomod@dividend+5
 12828  003200  C03C  F007         	movff	dtoa@n+6,___aomod@dividend+6
 12829  003204  C03D  F008         	movff	dtoa@n+7,___aomod@dividend+7
 12830  003208  0E0A               	movlw	10
 12831  00320A  6E09               	movwf	___aomod@divisor^0,c
 12832  00320C  0E00               	movlw	0
 12833  00320E  6E0A               	movwf	(___aomod@divisor+1)^0,c
 12834  003210  0E00               	movlw	0
 12835  003212  6E0B               	movwf	(___aomod@divisor+2)^0,c
 12836  003214  0E00               	movlw	0
 12837  003216  6E0C               	movwf	(___aomod@divisor+3)^0,c
 12838  003218  0E00               	movlw	0
 12839  00321A  6E0D               	movwf	(___aomod@divisor+4)^0,c
 12840  00321C  0E00               	movlw	0
 12841  00321E  6E0E               	movwf	(___aomod@divisor+5)^0,c
 12842  003220  0E00               	movlw	0
 12843  003222  6E0F               	movwf	(___aomod@divisor+6)^0,c
 12844  003224  0E00               	movlw	0
 12845  003226  6E10               	movwf	(___aomod@divisor+7)^0,c
 12846  003228  ECB8  F023         	call	___aomod	;wreg free
 12847  00322C  C001  F026         	movff	?___aomod,??_dtoa
 12848  003230  C002  F027         	movff	?___aomod+1,??_dtoa+1
 12849  003234  C003  F028         	movff	?___aomod+2,??_dtoa+2
 12850  003238  C004  F029         	movff	?___aomod+3,??_dtoa+3
 12851  00323C  C005  F02A         	movff	?___aomod+4,??_dtoa+4
 12852  003240  C006  F02B         	movff	?___aomod+5,??_dtoa+5
 12853  003244  C007  F02C         	movff	?___aomod+6,??_dtoa+6
 12854  003248  C008  F02D         	movff	?___aomod+7,??_dtoa+7
 12855  00324C  C026  F013         	movff	??_dtoa,abs@a
 12856  003250  C028  F014         	movff	??_dtoa+2,abs@a+1
 12857  003254  ECBF  F02B         	call	_abs	;wreg free
 12858  003258  5013               	movf	?_abs^0,w,c
 12859  00325A  0F30               	addlw	48
 12860  00325C  6EDF               	movwf	indf2,c
 12861  00325E                     
 12862                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 315:         --p;
 12863  00325E  0630               	decf	dtoa@p^0,f,c
 12864  003260  A0D8               	btfss	status,0,c
 12865  003262  0631               	decf	(dtoa@p+1)^0,f,c
 12866  003264                     
 12867                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 316:         --w;
 12868  003264  0632               	decf	dtoa@w^0,f,c
 12869  003266  A0D8               	btfss	status,0,c
 12870  003268  0633               	decf	(dtoa@w+1)^0,f,c
 12871  00326A                     
 12872                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
 12873  00326A  C036  F001         	movff	dtoa@n,___aodiv@dividend
 12874  00326E  C037  F002         	movff	dtoa@n+1,___aodiv@dividend+1
 12875  003272  C038  F003         	movff	dtoa@n+2,___aodiv@dividend+2
 12876  003276  C039  F004         	movff	dtoa@n+3,___aodiv@dividend+3
 12877  00327A  C03A  F005         	movff	dtoa@n+4,___aodiv@dividend+4
 12878  00327E  C03B  F006         	movff	dtoa@n+5,___aodiv@dividend+5
 12879  003282  C03C  F007         	movff	dtoa@n+6,___aodiv@dividend+6
 12880  003286  C03D  F008         	movff	dtoa@n+7,___aodiv@dividend+7
 12881  00328A  0E0A               	movlw	10
 12882  00328C  6E09               	movwf	___aodiv@divisor^0,c
 12883  00328E  0E00               	movlw	0
 12884  003290  6E0A               	movwf	(___aodiv@divisor+1)^0,c
 12885  003292  0E00               	movlw	0
 12886  003294  6E0B               	movwf	(___aodiv@divisor+2)^0,c
 12887  003296  0E00               	movlw	0
 12888  003298  6E0C               	movwf	(___aodiv@divisor+3)^0,c
 12889  00329A  0E00               	movlw	0
 12890  00329C  6E0D               	movwf	(___aodiv@divisor+4)^0,c
 12891  00329E  0E00               	movlw	0
 12892  0032A0  6E0E               	movwf	(___aodiv@divisor+5)^0,c
 12893  0032A2  0E00               	movlw	0
 12894  0032A4  6E0F               	movwf	(___aodiv@divisor+6)^0,c
 12895  0032A6  0E00               	movlw	0
 12896  0032A8  6E10               	movwf	(___aodiv@divisor+7)^0,c
 12897  0032AA  ECF4  F022         	call	___aodiv	;wreg free
 12898  0032AE  C001  F036         	movff	?___aodiv,dtoa@n
 12899  0032B2  C002  F037         	movff	?___aodiv+1,dtoa@n+1
 12900  0032B6  C003  F038         	movff	?___aodiv+2,dtoa@n+2
 12901  0032BA  C004  F039         	movff	?___aodiv+3,dtoa@n+3
 12902  0032BE  C005  F03A         	movff	?___aodiv+4,dtoa@n+4
 12903  0032C2  C006  F03B         	movff	?___aodiv+5,dtoa@n+5
 12904  0032C6  C007  F03C         	movff	?___aodiv+6,dtoa@n+6
 12905  0032CA  C008  F03D         	movff	?___aodiv+7,dtoa@n+7
 12906  0032CE                     l3869:
 12907                           
 12908                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 12909  0032CE  BE3F               	btfsc	(dtoa@i+1)^0,7,c
 12910  0032D0  EF72  F019         	goto	u3271
 12911  0032D4  503F               	movf	(dtoa@i+1)^0,w,c
 12912  0032D6  E108               	bnz	u3270
 12913  0032D8  043E               	decf	dtoa@i^0,w,c
 12914  0032DA  A0D8               	btfss	status,0,c
 12915  0032DC  EF72  F019         	goto	u3271
 12916  0032E0  EF74  F019         	goto	u3270
 12917  0032E4                     u3271:
 12918  0032E4  EFA5  F019         	goto	l3879
 12919  0032E8                     u3270:
 12920  0032E8  5036               	movf	dtoa@n^0,w,c
 12921  0032EA  1037               	iorwf	(dtoa@n+1)^0,w,c
 12922  0032EC  1038               	iorwf	(dtoa@n+2)^0,w,c
 12923  0032EE  1039               	iorwf	(dtoa@n+3)^0,w,c
 12924  0032F0  103A               	iorwf	(dtoa@n+4)^0,w,c
 12925  0032F2  103B               	iorwf	(dtoa@n+5)^0,w,c
 12926  0032F4  103C               	iorwf	(dtoa@n+6)^0,w,c
 12927  0032F6  103D               	iorwf	(dtoa@n+7)^0,w,c
 12928  0032F8  A4D8               	btfss	status,2,c
 12929  0032FA  EF81  F019         	goto	u3281
 12930  0032FE  EF83  F019         	goto	u3280
 12931  003302                     u3281:
 12932  003302  EFEB  F018         	goto	l3859
 12933  003306                     u3280:
 12934  003306  BE31               	btfsc	(dtoa@p+1)^0,7,c
 12935  003308  EF90  F019         	goto	u3290
 12936  00330C  5031               	movf	(dtoa@p+1)^0,w,c
 12937  00330E  E106               	bnz	u3291
 12938  003310  0430               	decf	dtoa@p^0,w,c
 12939  003312  B0D8               	btfsc	status,0,c
 12940  003314  EF8E  F019         	goto	u3291
 12941  003318  EF90  F019         	goto	u3290
 12942  00331C                     u3291:
 12943  00331C  EFEB  F018         	goto	l3859
 12944  003320                     u3290:
 12945  003320  BE33               	btfsc	(dtoa@w+1)^0,7,c
 12946  003322  EF9B  F019         	goto	u3301
 12947  003326  5033               	movf	(dtoa@w+1)^0,w,c
 12948  003328  E108               	bnz	u3300
 12949  00332A  0432               	decf	dtoa@w^0,w,c
 12950  00332C  A0D8               	btfss	status,0,c
 12951  00332E  EF9B  F019         	goto	u3301
 12952  003332  EF9D  F019         	goto	u3300
 12953  003336                     u3301:
 12954  003336  EFA5  F019         	goto	l3879
 12955  00333A                     u3300:
 12956  00333A  0100               	movlb	0	; () banked
 12957  00333C  B3F8               	btfsc	_flags& (0+255),1,b
 12958  00333E  EFA3  F019         	goto	u3311
 12959  003342  EFA5  F019         	goto	u3310
 12960  003346                     u3311:
 12961  003346  EFEB  F018         	goto	l3859
 12962  00334A                     u3310:
 12963  00334A                     l3879:
 12964                           
 12965                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
 12966  00334A  5034               	movf	dtoa@s^0,w,c
 12967  00334C  1035               	iorwf	(dtoa@s+1)^0,w,c
 12968  00334E  A4D8               	btfss	status,2,c
 12969  003350  EFAC  F019         	goto	u3321
 12970  003354  EFAE  F019         	goto	u3320
 12971  003358                     u3321:
 12972  003358  EFB6  F019         	goto	l3883
 12973  00335C                     u3320:
 12974  00335C  0100               	movlb	0	; () banked
 12975  00335E  A5F8               	btfss	_flags& (0+255),2,b
 12976  003360  EFB4  F019         	goto	u3331
 12977  003364  EFB6  F019         	goto	u3330
 12978  003368                     u3331:
 12979  003368  EFD4  F019         	goto	l3893
 12980  00336C                     u3330:
 12981  00336C                     l3883:
 12982                           
 12983                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 322:         --i;
 12984  00336C  063E               	decf	dtoa@i^0,f,c
 12985  00336E  A0D8               	btfss	status,0,c
 12986  003370  063F               	decf	(dtoa@i+1)^0,f,c
 12987  003372                     
 12988                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
 12989  003372  5034               	movf	dtoa@s^0,w,c
 12990  003374  1035               	iorwf	(dtoa@s+1)^0,w,c
 12991  003376  A4D8               	btfss	status,2,c
 12992  003378  EFC0  F019         	goto	u3341
 12993  00337C  EFC2  F019         	goto	u3340
 12994  003380                     u3341:
 12995  003380  EFC8  F019         	goto	l3889
 12996  003384                     u3340:
 12997  003384  0E00               	movlw	0
 12998  003386  6E2F               	movwf	(_dtoa$2910+1)^0,c
 12999  003388  0E2B               	movlw	43
 13000  00338A  6E2E               	movwf	_dtoa$2910^0,c
 13001  00338C  EFCC  F019         	goto	l3891
 13002  003390                     l3889:
 13003  003390  0E00               	movlw	0
 13004  003392  6E2F               	movwf	(_dtoa$2910+1)^0,c
 13005  003394  0E2D               	movlw	45
 13006  003396  6E2E               	movwf	_dtoa$2910^0,c
 13007  003398                     l3891:
 13008  003398  0EC9               	movlw	low _dbuf
 13009  00339A  243E               	addwf	dtoa@i^0,w,c
 13010  00339C  6ED9               	movwf	fsr2l,c
 13011  00339E  0E02               	movlw	high _dbuf
 13012  0033A0  203F               	addwfc	(dtoa@i+1)^0,w,c
 13013  0033A2  6EDA               	movwf	fsr2h,c
 13014  0033A4  C02E  FFDF         	movff	_dtoa$2910,indf2
 13015  0033A8                     l3893:
 13016                           
 13017                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
 13018  0033A8  C01C  F011         	movff	dtoa@fp,pad@fp
 13019  0033AC  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
 13020  0033B0  0EC9               	movlw	low _dbuf
 13021  0033B2  243E               	addwf	dtoa@i^0,w,c
 13022  0033B4  6E13               	movwf	pad@buf^0,c
 13023  0033B6  0E02               	movlw	high _dbuf
 13024  0033B8  203F               	addwfc	(dtoa@i+1)^0,w,c
 13025  0033BA  6E14               	movwf	(pad@buf+1)^0,c
 13026  0033BC  C032  F015         	movff	dtoa@w,pad@p
 13027  0033C0  C033  F016         	movff	dtoa@w+1,pad@p+1
 13028  0033C4  EC35  F027         	call	_pad	;wreg free
 13029  0033C8  C011  F01C         	movff	?_pad,?_dtoa
 13030  0033CC  C012  F01D         	movff	?_pad+1,?_dtoa+1
 13031  0033D0  0012               	return		;funcret
 13032  0033D2                     __end_of_dtoa:
 13033                           	callstack 0
 13034                           
 13035 ;; *************** function _pad *****************
 13036 ;; Defined at:
 13037 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c"
 13038 ;; Parameters:    Size  Location     Type
 13039 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
 13040 ;;		 -> sprintf@f(11), 
 13041 ;;  buf             2   18[COMRAM] PTR unsigned char 
 13042 ;;		 -> dbuf(32), 
 13043 ;;  p               2   20[COMRAM] int 
 13044 ;; Auto vars:     Size  Location     Type
 13045 ;;  w               2   25[COMRAM] int 
 13046 ;;  i               2   23[COMRAM] int 
 13047 ;; Return value:  Size  Location     Type
 13048 ;;                  2   16[COMRAM] int 
 13049 ;; Registers used:
 13050 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 13051 ;; Tracked objects:
 13052 ;;		On entry : 0/0
 13053 ;;		On exit  : 0/0
 13054 ;;		Unchanged: 0/0
 13055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13056 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13057 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13058 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13059 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13060 ;;Total ram usage:       11 bytes
 13061 ;; Hardware stack levels used: 1
 13062 ;; Hardware stack levels required when called: 4
 13063 ;; This function calls:
 13064 ;;		_fputc
 13065 ;;		_fputs
 13066 ;;		_strlen
 13067 ;; This function is called by:
 13068 ;;		_dtoa
 13069 ;; This function uses a non-reentrant model
 13070 ;;
 13071                           
 13072                           	psect	text63
 13073  004E6A                     __ptext63:
 13074                           	callstack 0
 13075  004E6A                     _pad:
 13076                           	callstack 20
 13077  004E6A                     
 13078                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
 13079  004E6A  0100               	movlb	0	; () banked
 13080  004E6C  A1F8               	btfss	_flags& (0+255),0,b
 13081  004E6E  EF3B  F027         	goto	u3091
 13082  004E72  EF3D  F027         	goto	u3090
 13083  004E76                     u3091:
 13084  004E76  EF47  F027         	goto	l3763
 13085  004E7A                     u3090:
 13086  004E7A                     
 13087                           ; BSR set to: 0
 13088                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
 13089  004E7A  C013  F00A         	movff	pad@buf,fputs@s
 13090  004E7E  C014  F00B         	movff	pad@buf+1,fputs@s+1
 13091  004E82  C011  F00C         	movff	pad@fp,fputs@fp
 13092  004E86  C012  F00D         	movff	pad@fp+1,fputs@fp+1
 13093  004E8A  ECFB  F02A         	call	_fputs	;wreg free
 13094  004E8E                     l3763:
 13095                           
 13096                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
 13097  004E8E  BE16               	btfsc	(pad@p+1)^0,7,c
 13098  004E90  EF4C  F027         	goto	u3101
 13099  004E94  EF4E  F027         	goto	u3100
 13100  004E98                     u3101:
 13101  004E98  EF54  F027         	goto	l3767
 13102  004E9C                     u3100:
 13103  004E9C  C015  F01A         	movff	pad@p,pad@w
 13104  004EA0  C016  F01B         	movff	pad@p+1,pad@w+1
 13105  004EA4  EF58  F027         	goto	l1503
 13106  004EA8                     l3767:
 13107  004EA8  0E00               	movlw	0
 13108  004EAA  6E1B               	movwf	(pad@w+1)^0,c
 13109  004EAC  0E00               	movlw	0
 13110  004EAE  6E1A               	movwf	pad@w^0,c
 13111  004EB0                     l1503:
 13112                           
 13113                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 83:     i = 0;
 13114  004EB0  0E00               	movlw	0
 13115  004EB2  6E19               	movwf	(pad@i+1)^0,c
 13116  004EB4  0E00               	movlw	0
 13117  004EB6  6E18               	movwf	pad@i^0,c
 13118                           
 13119                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
 13120  004EB8  EF6A  F027         	goto	l3773
 13121  004EBC                     l3769:
 13122                           
 13123                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
 13124  004EBC  0E00               	movlw	0
 13125  004EBE  6E02               	movwf	(fputc@c+1)^0,c
 13126  004EC0  0E20               	movlw	32
 13127  004EC2  6E01               	movwf	fputc@c^0,c
 13128  004EC4  C011  F003         	movff	pad@fp,fputc@fp
 13129  004EC8  C012  F004         	movff	pad@fp+1,fputc@fp+1
 13130  004ECC  EC6D  F026         	call	_fputc	;wreg free
 13131  004ED0                     
 13132                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 86:         ++i;
 13133  004ED0  4A18               	infsnz	pad@i^0,f,c
 13134  004ED2  2A19               	incf	(pad@i+1)^0,f,c
 13135  004ED4                     l3773:
 13136                           
 13137                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
 13138  004ED4  501A               	movf	pad@w^0,w,c
 13139  004ED6  5C18               	subwf	pad@i^0,w,c
 13140  004ED8  5019               	movf	(pad@i+1)^0,w,c
 13141  004EDA  0A80               	xorlw	128
 13142  004EDC  6E17               	movwf	??_pad^0,c
 13143  004EDE  501B               	movf	(pad@w+1)^0,w,c
 13144  004EE0  0A80               	xorlw	128
 13145  004EE2  5817               	subwfb	??_pad^0,w,c
 13146  004EE4  A0D8               	btfss	status,0,c
 13147  004EE6  EF77  F027         	goto	u3111
 13148  004EEA  EF79  F027         	goto	u3110
 13149  004EEE                     u3111:
 13150  004EEE  EF5E  F027         	goto	l3769
 13151  004EF2                     u3110:
 13152  004EF2                     
 13153                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
 13154  004EF2  0100               	movlb	0	; () banked
 13155  004EF4  B1F8               	btfsc	_flags& (0+255),0,b
 13156  004EF6  EF7F  F027         	goto	u3121
 13157  004EFA  EF81  F027         	goto	u3120
 13158  004EFE                     u3121:
 13159  004EFE  EF8B  F027         	goto	l3777
 13160  004F02                     u3120:
 13161  004F02                     
 13162                           ; BSR set to: 0
 13163                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
 13164  004F02  C013  F00A         	movff	pad@buf,fputs@s
 13165  004F06  C014  F00B         	movff	pad@buf+1,fputs@s+1
 13166  004F0A  C011  F00C         	movff	pad@fp,fputs@fp
 13167  004F0E  C012  F00D         	movff	pad@fp+1,fputs@fp+1
 13168  004F12  ECFB  F02A         	call	_fputs	;wreg free
 13169  004F16                     l3777:
 13170                           
 13171                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
 13172  004F16  C013  F001         	movff	pad@buf,strlen@s
 13173  004F1A  C014  F002         	movff	pad@buf+1,strlen@s+1
 13174  004F1E  EC35  F02C         	call	_strlen	;wreg free
 13175  004F22  501A               	movf	pad@w^0,w,c
 13176  004F24  2401               	addwf	?_strlen^0,w,c
 13177  004F26  6E11               	movwf	?_pad^0,c
 13178  004F28  501B               	movf	(pad@w+1)^0,w,c
 13179  004F2A  2002               	addwfc	(?_strlen+1)^0,w,c
 13180  004F2C  6E12               	movwf	(?_pad+1)^0,c
 13181  004F2E  0012               	return		;funcret
 13182  004F30                     __end_of_pad:
 13183                           	callstack 0
 13184                           
 13185 ;; *************** function _strlen *****************
 13186 ;; Defined at:
 13187 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\strlen.c"
 13188 ;; Parameters:    Size  Location     Type
 13189 ;;  s               2    0[COMRAM] PTR const unsigned char 
 13190 ;;		 -> dbuf(32), 
 13191 ;; Auto vars:     Size  Location     Type
 13192 ;;  a               2    2[COMRAM] PTR const unsigned char 
 13193 ;;		 -> dbuf(32), 
 13194 ;; Return value:  Size  Location     Type
 13195 ;;                  2    0[COMRAM] unsigned int 
 13196 ;; Registers used:
 13197 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13198 ;; Tracked objects:
 13199 ;;		On entry : 0/0
 13200 ;;		On exit  : 0/0
 13201 ;;		Unchanged: 0/0
 13202 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13203 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13204 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13205 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13206 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13207 ;;Total ram usage:        4 bytes
 13208 ;; Hardware stack levels used: 1
 13209 ;; Hardware stack levels required when called: 1
 13210 ;; This function calls:
 13211 ;;		Nothing
 13212 ;; This function is called by:
 13213 ;;		_pad
 13214 ;; This function uses a non-reentrant model
 13215 ;;
 13216                           
 13217                           	psect	text64
 13218  00586A                     __ptext64:
 13219                           	callstack 0
 13220  00586A                     _strlen:
 13221                           	callstack 22
 13222  00586A  C001  F003         	movff	strlen@s,strlen@a
 13223  00586E  C002  F004         	movff	strlen@s+1,strlen@a+1
 13224  005872  EF3D  F02C         	goto	l3673
 13225  005876                     l3671:
 13226  005876  4A01               	infsnz	strlen@s^0,f,c
 13227  005878  2A02               	incf	(strlen@s+1)^0,f,c
 13228  00587A                     l3673:
 13229  00587A  C001  FFD9         	movff	strlen@s,fsr2l
 13230  00587E  C002  FFDA         	movff	strlen@s+1,fsr2h
 13231  005882  50DF               	movf	indf2,w,c
 13232  005884  A4D8               	btfss	status,2,c
 13233  005886  EF47  F02C         	goto	u2951
 13234  00588A  EF49  F02C         	goto	u2950
 13235  00588E                     u2951:
 13236  00588E  EF3B  F02C         	goto	l3671
 13237  005892                     u2950:
 13238  005892  5003               	movf	strlen@a^0,w,c
 13239  005894  5C01               	subwf	strlen@s^0,w,c
 13240  005896  6E01               	movwf	?_strlen^0,c
 13241  005898  5004               	movf	(strlen@a+1)^0,w,c
 13242  00589A  5802               	subwfb	(strlen@s+1)^0,w,c
 13243  00589C  6E02               	movwf	(?_strlen+1)^0,c
 13244  00589E  0012               	return		;funcret
 13245  0058A0                     __end_of_strlen:
 13246                           	callstack 0
 13247                           
 13248 ;; *************** function _fputs *****************
 13249 ;; Defined at:
 13250 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\nf_fputs.c"
 13251 ;; Parameters:    Size  Location     Type
 13252 ;;  s               2    9[COMRAM] PTR const unsigned char 
 13253 ;;		 -> dbuf(32), 
 13254 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
 13255 ;;		 -> sprintf@f(11), 
 13256 ;; Auto vars:     Size  Location     Type
 13257 ;;  i               2   14[COMRAM] int 
 13258 ;;  c               1   13[COMRAM] unsigned char 
 13259 ;; Return value:  Size  Location     Type
 13260 ;;                  2    9[COMRAM] int 
 13261 ;; Registers used:
 13262 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 13263 ;; Tracked objects:
 13264 ;;		On entry : 0/0
 13265 ;;		On exit  : 0/0
 13266 ;;		Unchanged: 0/0
 13267 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13268 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13269 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13270 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13271 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13272 ;;Total ram usage:        7 bytes
 13273 ;; Hardware stack levels used: 1
 13274 ;; Hardware stack levels required when called: 3
 13275 ;; This function calls:
 13276 ;;		_fputc
 13277 ;; This function is called by:
 13278 ;;		_pad
 13279 ;; This function uses a non-reentrant model
 13280 ;;
 13281                           
 13282                           	psect	text65
 13283  0055F6                     __ptext65:
 13284                           	callstack 0
 13285  0055F6                     _fputs:
 13286                           	callstack 20
 13287  0055F6  0E00               	movlw	0
 13288  0055F8  6E10               	movwf	(fputs@i+1)^0,c
 13289  0055FA  0E00               	movlw	0
 13290  0055FC  6E0F               	movwf	fputs@i^0,c
 13291  0055FE  EF0C  F02B         	goto	l3667
 13292  005602                     l3663:
 13293  005602  C00E  F001         	movff	fputs@c,fputc@c
 13294  005606  6A02               	clrf	(fputc@c+1)^0,c
 13295  005608  C00C  F003         	movff	fputs@fp,fputc@fp
 13296  00560C  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
 13297  005610  EC6D  F026         	call	_fputc	;wreg free
 13298  005614  4A0F               	infsnz	fputs@i^0,f,c
 13299  005616  2A10               	incf	(fputs@i+1)^0,f,c
 13300  005618                     l3667:
 13301  005618  500F               	movf	fputs@i^0,w,c
 13302  00561A  240A               	addwf	fputs@s^0,w,c
 13303  00561C  6ED9               	movwf	fsr2l,c
 13304  00561E  5010               	movf	(fputs@i+1)^0,w,c
 13305  005620  200B               	addwfc	(fputs@s+1)^0,w,c
 13306  005622  6EDA               	movwf	fsr2h,c
 13307  005624  50DF               	movf	indf2,w,c
 13308  005626  6E0E               	movwf	fputs@c^0,c
 13309  005628  500E               	movf	fputs@c^0,w,c
 13310  00562A  A4D8               	btfss	status,2,c
 13311  00562C  EF1A  F02B         	goto	u2941
 13312  005630  EF1C  F02B         	goto	u2940
 13313  005634                     u2941:
 13314  005634  EF01  F02B         	goto	l3663
 13315  005638                     u2940:
 13316  005638  0012               	return		;funcret
 13317  00563A                     __end_of_fputs:
 13318                           	callstack 0
 13319                           
 13320 ;; *************** function _fputc *****************
 13321 ;; Defined at:
 13322 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\nf_fputc.c"
 13323 ;; Parameters:    Size  Location     Type
 13324 ;;  c               2    0[COMRAM] int 
 13325 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
 13326 ;;		 -> sprintf@f(11), 
 13327 ;; Auto vars:     Size  Location     Type
 13328 ;;		None
 13329 ;; Return value:  Size  Location     Type
 13330 ;;                  2    0[COMRAM] int 
 13331 ;; Registers used:
 13332 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 13333 ;; Tracked objects:
 13334 ;;		On entry : 0/0
 13335 ;;		On exit  : 0/0
 13336 ;;		Unchanged: 0/0
 13337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13338 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13339 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13340 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13341 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13342 ;;Total ram usage:        9 bytes
 13343 ;; Hardware stack levels used: 1
 13344 ;; Hardware stack levels required when called: 2
 13345 ;; This function calls:
 13346 ;;		_putch
 13347 ;; This function is called by:
 13348 ;;		_pad
 13349 ;;		_vfpfcnvrt
 13350 ;;		_fputs
 13351 ;; This function uses a non-reentrant model
 13352 ;;
 13353                           
 13354                           	psect	text66
 13355  004CDA                     __ptext66:
 13356                           	callstack 0
 13357  004CDA                     _fputc:
 13358                           	callstack 23
 13359  004CDA  5003               	movf	fputc@fp^0,w,c
 13360  004CDC  1004               	iorwf	(fputc@fp+1)^0,w,c
 13361  004CDE  B4D8               	btfsc	status,2,c
 13362  004CE0  EF74  F026         	goto	u2901
 13363  004CE4  EF76  F026         	goto	u2900
 13364  004CE8                     u2901:
 13365  004CE8  EF7F  F026         	goto	l3651
 13366  004CEC                     u2900:
 13367  004CEC  5003               	movf	fputc@fp^0,w,c
 13368  004CEE  1004               	iorwf	(fputc@fp+1)^0,w,c
 13369  004CF0  A4D8               	btfss	status,2,c
 13370  004CF2  EF7D  F026         	goto	u2911
 13371  004CF6  EF7F  F026         	goto	u2910
 13372  004CFA                     u2911:
 13373  004CFA  EF84  F026         	goto	l3653
 13374  004CFE                     u2910:
 13375  004CFE                     l3651:
 13376  004CFE  5001               	movf	fputc@c^0,w,c
 13377  004D00  EC96  F02D         	call	_putch
 13378  004D04  EFD1  F026         	goto	l1567
 13379  004D08                     l3653:
 13380  004D08  EE20 F009          	lfsr	2,9
 13381  004D0C  5003               	movf	fputc@fp^0,w,c
 13382  004D0E  26D9               	addwf	fsr2l,f,c
 13383  004D10  5004               	movf	(fputc@fp+1)^0,w,c
 13384  004D12  22DA               	addwfc	fsr2h,f,c
 13385  004D14  50DE               	movf	postinc2,w,c
 13386  004D16  10DE               	iorwf	postinc2,w,c
 13387  004D18  B4D8               	btfsc	status,2,c
 13388  004D1A  EF91  F026         	goto	u2921
 13389  004D1E  EF93  F026         	goto	u2920
 13390  004D22                     u2921:
 13391  004D22  EFAE  F026         	goto	l3657
 13392  004D26                     u2920:
 13393  004D26  EE20 F009          	lfsr	2,9
 13394  004D2A  5003               	movf	fputc@fp^0,w,c
 13395  004D2C  26D9               	addwf	fsr2l,f,c
 13396  004D2E  5004               	movf	(fputc@fp+1)^0,w,c
 13397  004D30  22DA               	addwfc	fsr2h,f,c
 13398  004D32  EE10 F003          	lfsr	1,3
 13399  004D36  5003               	movf	fputc@fp^0,w,c
 13400  004D38  26E1               	addwf	fsr1l,f,c
 13401  004D3A  5004               	movf	(fputc@fp+1)^0,w,c
 13402  004D3C  22E2               	addwfc	fsr1h,f,c
 13403  004D3E  50DE               	movf	postinc2,w,c
 13404  004D40  5CE6               	subwf	postinc1,w,c
 13405  004D42  50E6               	movf	postinc1,w,c
 13406  004D44  0A80               	xorlw	128
 13407  004D46  6E09               	movwf	(??_fputc+4)^0,c
 13408  004D48  50DE               	movf	postinc2,w,c
 13409  004D4A  0A80               	xorlw	128
 13410  004D4C  5809               	subwfb	(??_fputc+4)^0,w,c
 13411  004D4E  B0D8               	btfsc	status,0,c
 13412  004D50  EFAC  F026         	goto	u2931
 13413  004D54  EFAE  F026         	goto	u2930
 13414  004D58                     u2931:
 13415  004D58  EFD1  F026         	goto	l1567
 13416  004D5C                     u2930:
 13417  004D5C                     l3657:
 13418  004D5C  EE20 F003          	lfsr	2,3
 13419  004D60  5003               	movf	fputc@fp^0,w,c
 13420  004D62  26D9               	addwf	fsr2l,f,c
 13421  004D64  5004               	movf	(fputc@fp+1)^0,w,c
 13422  004D66  22DA               	addwfc	fsr2h,f,c
 13423  004D68  CFDE F005          	movff	postinc2,??_fputc
 13424  004D6C  CFDD F006          	movff	postdec2,??_fputc+1
 13425  004D70  C003  FFD9         	movff	fputc@fp,fsr2l
 13426  004D74  C004  FFDA         	movff	fputc@fp+1,fsr2h
 13427  004D78  CFDE F007          	movff	postinc2,??_fputc+2
 13428  004D7C  CFDD F008          	movff	postdec2,??_fputc+3
 13429  004D80  5005               	movf	??_fputc^0,w,c
 13430  004D82  2407               	addwf	(??_fputc+2)^0,w,c
 13431  004D84  6ED9               	movwf	fsr2l,c
 13432  004D86  5006               	movf	(??_fputc+1)^0,w,c
 13433  004D88  2008               	addwfc	(??_fputc+3)^0,w,c
 13434  004D8A  6EDA               	movwf	fsr2h,c
 13435  004D8C  C001  FFDF         	movff	fputc@c,indf2
 13436  004D90  EE20 F003          	lfsr	2,3
 13437  004D94  5003               	movf	fputc@fp^0,w,c
 13438  004D96  26D9               	addwf	fsr2l,f,c
 13439  004D98  5004               	movf	(fputc@fp+1)^0,w,c
 13440  004D9A  22DA               	addwfc	fsr2h,f,c
 13441  004D9C  2ADE               	incf	postinc2,f,c
 13442  004D9E  0E00               	movlw	0
 13443  004DA0  22DD               	addwfc	postdec2,f,c
 13444  004DA2                     l1567:
 13445  004DA2  0012               	return		;funcret
 13446  004DA4                     __end_of_fputc:
 13447                           	callstack 0
 13448                           
 13449 ;; *************** function _putch *****************
 13450 ;; Defined at:
 13451 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\putch.c"
 13452 ;; Parameters:    Size  Location     Type
 13453 ;;  c               1    wreg     unsigned char 
 13454 ;; Auto vars:     Size  Location     Type
 13455 ;;  c               1    0[COMRAM] unsigned char 
 13456 ;; Return value:  Size  Location     Type
 13457 ;;                  1    wreg      void 
 13458 ;; Registers used:
 13459 ;;		wreg
 13460 ;; Tracked objects:
 13461 ;;		On entry : 0/0
 13462 ;;		On exit  : 0/0
 13463 ;;		Unchanged: 0/0
 13464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13465 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13466 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13467 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13468 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13469 ;;Total ram usage:        0 bytes
 13470 ;; Hardware stack levels used: 1
 13471 ;; Hardware stack levels required when called: 1
 13472 ;; This function calls:
 13473 ;;		Nothing
 13474 ;; This function is called by:
 13475 ;;		_fputc
 13476 ;; This function uses a non-reentrant model
 13477 ;;
 13478                           
 13479                           	psect	text67
 13480  005B2C                     __ptext67:
 13481                           	callstack 0
 13482  005B2C                     _putch:
 13483                           	callstack 23
 13484  005B2C  0012               	return		;funcret
 13485  005B2E                     __end_of_putch:
 13486                           	callstack 0
 13487                           
 13488 ;; *************** function _abs *****************
 13489 ;; Defined at:
 13490 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\abs.c"
 13491 ;; Parameters:    Size  Location     Type
 13492 ;;  a               2   18[COMRAM] int 
 13493 ;; Auto vars:     Size  Location     Type
 13494 ;;		None
 13495 ;; Return value:  Size  Location     Type
 13496 ;;                  2   18[COMRAM] int 
 13497 ;; Registers used:
 13498 ;;		wreg, status,2, status,0
 13499 ;; Tracked objects:
 13500 ;;		On entry : 0/0
 13501 ;;		On exit  : 0/0
 13502 ;;		Unchanged: 0/0
 13503 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13504 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13505 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13506 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13507 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13508 ;;Total ram usage:        4 bytes
 13509 ;; Hardware stack levels used: 1
 13510 ;; Hardware stack levels required when called: 1
 13511 ;; This function calls:
 13512 ;;		Nothing
 13513 ;; This function is called by:
 13514 ;;		_dtoa
 13515 ;; This function uses a non-reentrant model
 13516 ;;
 13517                           
 13518                           	psect	text68
 13519  00577E                     __ptext68:
 13520                           	callstack 0
 13521  00577E                     _abs:
 13522                           	callstack 23
 13523  00577E  BE14               	btfsc	(abs@a+1)^0,7,c
 13524  005780  EFCC  F02B         	goto	u3130
 13525  005784  5014               	movf	(abs@a+1)^0,w,c
 13526  005786  E106               	bnz	u3131
 13527  005788  0413               	decf	abs@a^0,w,c
 13528  00578A  B0D8               	btfsc	status,0,c
 13529  00578C  EFCA  F02B         	goto	u3131
 13530  005790  EFCC  F02B         	goto	u3130
 13531  005794                     u3131:
 13532  005794  EFDA  F02B         	goto	l1552
 13533  005798                     u3130:
 13534  005798  C013  F015         	movff	abs@a,??_abs
 13535  00579C  C014  F016         	movff	abs@a+1,??_abs+1
 13536  0057A0  1E15               	comf	??_abs^0,f,c
 13537  0057A2  1E16               	comf	(??_abs+1)^0,f,c
 13538  0057A4  4A15               	infsnz	??_abs^0,f,c
 13539  0057A6  2A16               	incf	(??_abs+1)^0,f,c
 13540  0057A8  C015  F013         	movff	??_abs,?_abs
 13541  0057AC  C016  F014         	movff	??_abs+1,?_abs+1
 13542  0057B0  EFDE  F02B         	goto	l1555
 13543  0057B4                     l1552:
 13544  0057B4  C013  F013         	movff	abs@a,?_abs
 13545  0057B8  C014  F014         	movff	abs@a+1,?_abs+1
 13546  0057BC                     l1555:
 13547  0057BC  0012               	return		;funcret
 13548  0057BE                     __end_of_abs:
 13549                           	callstack 0
 13550                           
 13551 ;; *************** function ___aomod *****************
 13552 ;; Defined at:
 13553 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\aomod.c"
 13554 ;; Parameters:    Size  Location     Type
 13555 ;;  dividend        8    0[COMRAM] long long 
 13556 ;;  divisor         8    8[COMRAM] long long 
 13557 ;; Auto vars:     Size  Location     Type
 13558 ;;  sign            1   17[COMRAM] unsigned char 
 13559 ;;  counter         1   16[COMRAM] unsigned char 
 13560 ;; Return value:  Size  Location     Type
 13561 ;;                  8    0[COMRAM] long long 
 13562 ;; Registers used:
 13563 ;;		wreg, status,2, status,0
 13564 ;; Tracked objects:
 13565 ;;		On entry : 0/0
 13566 ;;		On exit  : 0/0
 13567 ;;		Unchanged: 0/0
 13568 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13569 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13570 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13571 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13572 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13573 ;;Total ram usage:       18 bytes
 13574 ;; Hardware stack levels used: 1
 13575 ;; Hardware stack levels required when called: 1
 13576 ;; This function calls:
 13577 ;;		Nothing
 13578 ;; This function is called by:
 13579 ;;		_dtoa
 13580 ;; This function uses a non-reentrant model
 13581 ;;
 13582                           
 13583                           	psect	text69
 13584  004770                     __ptext69:
 13585                           	callstack 0
 13586  004770                     ___aomod:
 13587                           	callstack 23
 13588  004770  0E00               	movlw	0
 13589  004772  6E12               	movwf	___aomod@sign^0,c
 13590  004774  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
 13591  004776  EFC1  F023         	goto	u3030
 13592  00477A  EFBF  F023         	goto	u3031
 13593  00477E                     u3031:
 13594  00477E  EFD3  F023         	goto	l3731
 13595  004782                     u3030:
 13596  004782  1E08               	comf	(___aomod@dividend+7)^0,f,c
 13597  004784  1E07               	comf	(___aomod@dividend+6)^0,f,c
 13598  004786  1E06               	comf	(___aomod@dividend+5)^0,f,c
 13599  004788  1E05               	comf	(___aomod@dividend+4)^0,f,c
 13600  00478A  1E04               	comf	(___aomod@dividend+3)^0,f,c
 13601  00478C  1E03               	comf	(___aomod@dividend+2)^0,f,c
 13602  00478E  1E02               	comf	(___aomod@dividend+1)^0,f,c
 13603  004790  6C01               	negf	___aomod@dividend^0,c
 13604  004792  0E00               	movlw	0
 13605  004794  2202               	addwfc	(___aomod@dividend+1)^0,f,c
 13606  004796  2203               	addwfc	(___aomod@dividend+2)^0,f,c
 13607  004798  2204               	addwfc	(___aomod@dividend+3)^0,f,c
 13608  00479A  2205               	addwfc	(___aomod@dividend+4)^0,f,c
 13609  00479C  2206               	addwfc	(___aomod@dividend+5)^0,f,c
 13610  00479E  2207               	addwfc	(___aomod@dividend+6)^0,f,c
 13611  0047A0  2208               	addwfc	(___aomod@dividend+7)^0,f,c
 13612  0047A2  0E01               	movlw	1
 13613  0047A4  6E12               	movwf	___aomod@sign^0,c
 13614  0047A6                     l3731:
 13615  0047A6  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
 13616  0047A8  EFDA  F023         	goto	u3040
 13617  0047AC  EFD8  F023         	goto	u3041
 13618  0047B0                     u3041:
 13619  0047B0  EFEA  F023         	goto	l3735
 13620  0047B4                     u3040:
 13621  0047B4  1E10               	comf	(___aomod@divisor+7)^0,f,c
 13622  0047B6  1E0F               	comf	(___aomod@divisor+6)^0,f,c
 13623  0047B8  1E0E               	comf	(___aomod@divisor+5)^0,f,c
 13624  0047BA  1E0D               	comf	(___aomod@divisor+4)^0,f,c
 13625  0047BC  1E0C               	comf	(___aomod@divisor+3)^0,f,c
 13626  0047BE  1E0B               	comf	(___aomod@divisor+2)^0,f,c
 13627  0047C0  1E0A               	comf	(___aomod@divisor+1)^0,f,c
 13628  0047C2  6C09               	negf	___aomod@divisor^0,c
 13629  0047C4  0E00               	movlw	0
 13630  0047C6  220A               	addwfc	(___aomod@divisor+1)^0,f,c
 13631  0047C8  220B               	addwfc	(___aomod@divisor+2)^0,f,c
 13632  0047CA  220C               	addwfc	(___aomod@divisor+3)^0,f,c
 13633  0047CC  220D               	addwfc	(___aomod@divisor+4)^0,f,c
 13634  0047CE  220E               	addwfc	(___aomod@divisor+5)^0,f,c
 13635  0047D0  220F               	addwfc	(___aomod@divisor+6)^0,f,c
 13636  0047D2  2210               	addwfc	(___aomod@divisor+7)^0,f,c
 13637  0047D4                     l3735:
 13638  0047D4  5009               	movf	___aomod@divisor^0,w,c
 13639  0047D6  100A               	iorwf	(___aomod@divisor+1)^0,w,c
 13640  0047D8  100B               	iorwf	(___aomod@divisor+2)^0,w,c
 13641  0047DA  100C               	iorwf	(___aomod@divisor+3)^0,w,c
 13642  0047DC  100D               	iorwf	(___aomod@divisor+4)^0,w,c
 13643  0047DE  100E               	iorwf	(___aomod@divisor+5)^0,w,c
 13644  0047E0  100F               	iorwf	(___aomod@divisor+6)^0,w,c
 13645  0047E2  1010               	iorwf	(___aomod@divisor+7)^0,w,c
 13646  0047E4  B4D8               	btfsc	status,2,c
 13647  0047E6  EFF7  F023         	goto	u3051
 13648  0047EA  EFF9  F023         	goto	u3050
 13649  0047EE                     u3051:
 13650  0047EE  EF41  F024         	goto	l3751
 13651  0047F2                     u3050:
 13652  0047F2  0E01               	movlw	1
 13653  0047F4  6E11               	movwf	___aomod@counter^0,c
 13654  0047F6  EF07  F024         	goto	l3741
 13655  0047FA                     l3739:
 13656  0047FA  90D8               	bcf	status,0,c
 13657  0047FC  3609               	rlcf	___aomod@divisor^0,f,c
 13658  0047FE  360A               	rlcf	(___aomod@divisor+1)^0,f,c
 13659  004800  360B               	rlcf	(___aomod@divisor+2)^0,f,c
 13660  004802  360C               	rlcf	(___aomod@divisor+3)^0,f,c
 13661  004804  360D               	rlcf	(___aomod@divisor+4)^0,f,c
 13662  004806  360E               	rlcf	(___aomod@divisor+5)^0,f,c
 13663  004808  360F               	rlcf	(___aomod@divisor+6)^0,f,c
 13664  00480A  3610               	rlcf	(___aomod@divisor+7)^0,f,c
 13665  00480C  2A11               	incf	___aomod@counter^0,f,c
 13666  00480E                     l3741:
 13667  00480E  AE10               	btfss	(___aomod@divisor+7)^0,7,c
 13668  004810  EF0C  F024         	goto	u3061
 13669  004814  EF0E  F024         	goto	u3060
 13670  004818                     u3061:
 13671  004818  EFFD  F023         	goto	l3739
 13672  00481C                     u3060:
 13673  00481C                     l3743:
 13674  00481C  5009               	movf	___aomod@divisor^0,w,c
 13675  00481E  5C01               	subwf	___aomod@dividend^0,w,c
 13676  004820  500A               	movf	(___aomod@divisor+1)^0,w,c
 13677  004822  5802               	subwfb	(___aomod@dividend+1)^0,w,c
 13678  004824  500B               	movf	(___aomod@divisor+2)^0,w,c
 13679  004826  5803               	subwfb	(___aomod@dividend+2)^0,w,c
 13680  004828  500C               	movf	(___aomod@divisor+3)^0,w,c
 13681  00482A  5804               	subwfb	(___aomod@dividend+3)^0,w,c
 13682  00482C  500D               	movf	(___aomod@divisor+4)^0,w,c
 13683  00482E  5805               	subwfb	(___aomod@dividend+4)^0,w,c
 13684  004830  500E               	movf	(___aomod@divisor+5)^0,w,c
 13685  004832  5806               	subwfb	(___aomod@dividend+5)^0,w,c
 13686  004834  500F               	movf	(___aomod@divisor+6)^0,w,c
 13687  004836  5807               	subwfb	(___aomod@dividend+6)^0,w,c
 13688  004838  5010               	movf	(___aomod@divisor+7)^0,w,c
 13689  00483A  5808               	subwfb	(___aomod@dividend+7)^0,w,c
 13690  00483C  A0D8               	btfss	status,0,c
 13691  00483E  EF23  F024         	goto	u3071
 13692  004842  EF25  F024         	goto	u3070
 13693  004846                     u3071:
 13694  004846  EF35  F024         	goto	l3747
 13695  00484A                     u3070:
 13696  00484A  5009               	movf	___aomod@divisor^0,w,c
 13697  00484C  5E01               	subwf	___aomod@dividend^0,f,c
 13698  00484E  500A               	movf	(___aomod@divisor+1)^0,w,c
 13699  004850  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
 13700  004852  500B               	movf	(___aomod@divisor+2)^0,w,c
 13701  004854  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
 13702  004856  500C               	movf	(___aomod@divisor+3)^0,w,c
 13703  004858  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
 13704  00485A  500D               	movf	(___aomod@divisor+4)^0,w,c
 13705  00485C  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
 13706  00485E  500E               	movf	(___aomod@divisor+5)^0,w,c
 13707  004860  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
 13708  004862  500F               	movf	(___aomod@divisor+6)^0,w,c
 13709  004864  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
 13710  004866  5010               	movf	(___aomod@divisor+7)^0,w,c
 13711  004868  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
 13712  00486A                     l3747:
 13713  00486A  90D8               	bcf	status,0,c
 13714  00486C  3210               	rrcf	(___aomod@divisor+7)^0,f,c
 13715  00486E  320F               	rrcf	(___aomod@divisor+6)^0,f,c
 13716  004870  320E               	rrcf	(___aomod@divisor+5)^0,f,c
 13717  004872  320D               	rrcf	(___aomod@divisor+4)^0,f,c
 13718  004874  320C               	rrcf	(___aomod@divisor+3)^0,f,c
 13719  004876  320B               	rrcf	(___aomod@divisor+2)^0,f,c
 13720  004878  320A               	rrcf	(___aomod@divisor+1)^0,f,c
 13721  00487A  3209               	rrcf	___aomod@divisor^0,f,c
 13722  00487C  2E11               	decfsz	___aomod@counter^0,f,c
 13723  00487E  EF0E  F024         	goto	l3743
 13724  004882                     l3751:
 13725  004882  5012               	movf	___aomod@sign^0,w,c
 13726  004884  B4D8               	btfsc	status,2,c
 13727  004886  EF47  F024         	goto	u3081
 13728  00488A  EF49  F024         	goto	u3080
 13729  00488E                     u3081:
 13730  00488E  EF59  F024         	goto	l3755
 13731  004892                     u3080:
 13732  004892  1E08               	comf	(___aomod@dividend+7)^0,f,c
 13733  004894  1E07               	comf	(___aomod@dividend+6)^0,f,c
 13734  004896  1E06               	comf	(___aomod@dividend+5)^0,f,c
 13735  004898  1E05               	comf	(___aomod@dividend+4)^0,f,c
 13736  00489A  1E04               	comf	(___aomod@dividend+3)^0,f,c
 13737  00489C  1E03               	comf	(___aomod@dividend+2)^0,f,c
 13738  00489E  1E02               	comf	(___aomod@dividend+1)^0,f,c
 13739  0048A0  6C01               	negf	___aomod@dividend^0,c
 13740  0048A2  0E00               	movlw	0
 13741  0048A4  2202               	addwfc	(___aomod@dividend+1)^0,f,c
 13742  0048A6  2203               	addwfc	(___aomod@dividend+2)^0,f,c
 13743  0048A8  2204               	addwfc	(___aomod@dividend+3)^0,f,c
 13744  0048AA  2205               	addwfc	(___aomod@dividend+4)^0,f,c
 13745  0048AC  2206               	addwfc	(___aomod@dividend+5)^0,f,c
 13746  0048AE  2207               	addwfc	(___aomod@dividend+6)^0,f,c
 13747  0048B0  2208               	addwfc	(___aomod@dividend+7)^0,f,c
 13748  0048B2                     l3755:
 13749  0048B2  C001  F001         	movff	___aomod@dividend,?___aomod
 13750  0048B6  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
 13751  0048BA  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
 13752  0048BE  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
 13753  0048C2  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
 13754  0048C6  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
 13755  0048CA  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
 13756  0048CE  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
 13757  0048D2  0012               	return		;funcret
 13758  0048D4                     __end_of___aomod:
 13759                           	callstack 0
 13760                           
 13761 ;; *************** function ___aodiv *****************
 13762 ;; Defined at:
 13763 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\aodiv.c"
 13764 ;; Parameters:    Size  Location     Type
 13765 ;;  dividend        8    0[COMRAM] long long 
 13766 ;;  divisor         8    8[COMRAM] long long 
 13767 ;; Auto vars:     Size  Location     Type
 13768 ;;  quotient        8   18[COMRAM] long long 
 13769 ;;  sign            1   17[COMRAM] unsigned char 
 13770 ;;  counter         1   16[COMRAM] unsigned char 
 13771 ;; Return value:  Size  Location     Type
 13772 ;;                  8    0[COMRAM] long long 
 13773 ;; Registers used:
 13774 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13775 ;; Tracked objects:
 13776 ;;		On entry : 0/0
 13777 ;;		On exit  : 0/0
 13778 ;;		Unchanged: 0/0
 13779 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13780 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13781 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13782 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13783 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13784 ;;Total ram usage:       26 bytes
 13785 ;; Hardware stack levels used: 1
 13786 ;; Hardware stack levels required when called: 1
 13787 ;; This function calls:
 13788 ;;		Nothing
 13789 ;; This function is called by:
 13790 ;;		_dtoa
 13791 ;; This function uses a non-reentrant model
 13792 ;;
 13793                           
 13794                           	psect	text70
 13795  0045E8                     __ptext70:
 13796                           	callstack 0
 13797  0045E8                     ___aodiv:
 13798                           	callstack 23
 13799  0045E8  0E00               	movlw	0
 13800  0045EA  6E12               	movwf	___aodiv@sign^0,c
 13801  0045EC  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
 13802  0045EE  EFFD  F022         	goto	u2960
 13803  0045F2  EFFB  F022         	goto	u2961
 13804  0045F6                     u2961:
 13805  0045F6  EF0F  F023         	goto	l3687
 13806  0045FA                     u2960:
 13807  0045FA  1E10               	comf	(___aodiv@divisor+7)^0,f,c
 13808  0045FC  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
 13809  0045FE  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
 13810  004600  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
 13811  004602  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
 13812  004604  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
 13813  004606  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
 13814  004608  6C09               	negf	___aodiv@divisor^0,c
 13815  00460A  0E00               	movlw	0
 13816  00460C  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
 13817  00460E  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
 13818  004610  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
 13819  004612  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
 13820  004614  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
 13821  004616  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
 13822  004618  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
 13823  00461A  0E01               	movlw	1
 13824  00461C  6E12               	movwf	___aodiv@sign^0,c
 13825  00461E                     l3687:
 13826  00461E  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
 13827  004620  EF16  F023         	goto	u2970
 13828  004624  EF14  F023         	goto	u2971
 13829  004628                     u2971:
 13830  004628  EF28  F023         	goto	l3693
 13831  00462C                     u2970:
 13832  00462C  1E08               	comf	(___aodiv@dividend+7)^0,f,c
 13833  00462E  1E07               	comf	(___aodiv@dividend+6)^0,f,c
 13834  004630  1E06               	comf	(___aodiv@dividend+5)^0,f,c
 13835  004632  1E05               	comf	(___aodiv@dividend+4)^0,f,c
 13836  004634  1E04               	comf	(___aodiv@dividend+3)^0,f,c
 13837  004636  1E03               	comf	(___aodiv@dividend+2)^0,f,c
 13838  004638  1E02               	comf	(___aodiv@dividend+1)^0,f,c
 13839  00463A  6C01               	negf	___aodiv@dividend^0,c
 13840  00463C  0E00               	movlw	0
 13841  00463E  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
 13842  004640  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
 13843  004642  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
 13844  004644  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
 13845  004646  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
 13846  004648  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
 13847  00464A  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
 13848  00464C  0E01               	movlw	1
 13849  00464E  1A12               	xorwf	___aodiv@sign^0,f,c
 13850  004650                     l3693:
 13851  004650  EE20  F013         	lfsr	2,___aodiv@quotient
 13852  004654  0E07               	movlw	7
 13853  004656                     u2981:
 13854  004656  6ADE               	clrf	postinc2,c
 13855  004658  06E8               	decf	wreg,f,c
 13856  00465A  E2FD               	bc	u2981
 13857  00465C  5009               	movf	___aodiv@divisor^0,w,c
 13858  00465E  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
 13859  004660  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
 13860  004662  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
 13861  004664  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
 13862  004666  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
 13863  004668  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
 13864  00466A  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
 13865  00466C  B4D8               	btfsc	status,2,c
 13866  00466E  EF3B  F023         	goto	u2991
 13867  004672  EF3D  F023         	goto	u2990
 13868  004676                     u2991:
 13869  004676  EF8F  F023         	goto	l3715
 13870  00467A                     u2990:
 13871  00467A  0E01               	movlw	1
 13872  00467C  6E11               	movwf	___aodiv@counter^0,c
 13873  00467E  EF4B  F023         	goto	l3701
 13874  004682                     l3699:
 13875  004682  90D8               	bcf	status,0,c
 13876  004684  3609               	rlcf	___aodiv@divisor^0,f,c
 13877  004686  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
 13878  004688  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
 13879  00468A  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
 13880  00468C  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
 13881  00468E  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
 13882  004690  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
 13883  004692  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
 13884  004694  2A11               	incf	___aodiv@counter^0,f,c
 13885  004696                     l3701:
 13886  004696  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
 13887  004698  EF50  F023         	goto	u3001
 13888  00469C  EF52  F023         	goto	u3000
 13889  0046A0                     u3001:
 13890  0046A0  EF41  F023         	goto	l3699
 13891  0046A4                     u3000:
 13892  0046A4                     l3703:
 13893  0046A4  90D8               	bcf	status,0,c
 13894  0046A6  3613               	rlcf	___aodiv@quotient^0,f,c
 13895  0046A8  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
 13896  0046AA  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
 13897  0046AC  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
 13898  0046AE  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
 13899  0046B0  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
 13900  0046B2  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
 13901  0046B4  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
 13902  0046B6  5009               	movf	___aodiv@divisor^0,w,c
 13903  0046B8  5C01               	subwf	___aodiv@dividend^0,w,c
 13904  0046BA  500A               	movf	(___aodiv@divisor+1)^0,w,c
 13905  0046BC  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
 13906  0046BE  500B               	movf	(___aodiv@divisor+2)^0,w,c
 13907  0046C0  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
 13908  0046C2  500C               	movf	(___aodiv@divisor+3)^0,w,c
 13909  0046C4  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
 13910  0046C6  500D               	movf	(___aodiv@divisor+4)^0,w,c
 13911  0046C8  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
 13912  0046CA  500E               	movf	(___aodiv@divisor+5)^0,w,c
 13913  0046CC  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
 13914  0046CE  500F               	movf	(___aodiv@divisor+6)^0,w,c
 13915  0046D0  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
 13916  0046D2  5010               	movf	(___aodiv@divisor+7)^0,w,c
 13917  0046D4  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
 13918  0046D6  A0D8               	btfss	status,0,c
 13919  0046D8  EF70  F023         	goto	u3011
 13920  0046DC  EF72  F023         	goto	u3010
 13921  0046E0                     u3011:
 13922  0046E0  EF83  F023         	goto	l3711
 13923  0046E4                     u3010:
 13924  0046E4  5009               	movf	___aodiv@divisor^0,w,c
 13925  0046E6  5E01               	subwf	___aodiv@dividend^0,f,c
 13926  0046E8  500A               	movf	(___aodiv@divisor+1)^0,w,c
 13927  0046EA  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
 13928  0046EC  500B               	movf	(___aodiv@divisor+2)^0,w,c
 13929  0046EE  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
 13930  0046F0  500C               	movf	(___aodiv@divisor+3)^0,w,c
 13931  0046F2  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
 13932  0046F4  500D               	movf	(___aodiv@divisor+4)^0,w,c
 13933  0046F6  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
 13934  0046F8  500E               	movf	(___aodiv@divisor+5)^0,w,c
 13935  0046FA  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
 13936  0046FC  500F               	movf	(___aodiv@divisor+6)^0,w,c
 13937  0046FE  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
 13938  004700  5010               	movf	(___aodiv@divisor+7)^0,w,c
 13939  004702  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
 13940  004704  8013               	bsf	___aodiv@quotient^0,0,c
 13941  004706                     l3711:
 13942  004706  90D8               	bcf	status,0,c
 13943  004708  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
 13944  00470A  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
 13945  00470C  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
 13946  00470E  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
 13947  004710  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
 13948  004712  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
 13949  004714  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
 13950  004716  3209               	rrcf	___aodiv@divisor^0,f,c
 13951  004718  2E11               	decfsz	___aodiv@counter^0,f,c
 13952  00471A  EF52  F023         	goto	l3703
 13953  00471E                     l3715:
 13954  00471E  5012               	movf	___aodiv@sign^0,w,c
 13955  004720  B4D8               	btfsc	status,2,c
 13956  004722  EF95  F023         	goto	u3021
 13957  004726  EF97  F023         	goto	u3020
 13958  00472A                     u3021:
 13959  00472A  EFA7  F023         	goto	l3719
 13960  00472E                     u3020:
 13961  00472E  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
 13962  004730  1E19               	comf	(___aodiv@quotient+6)^0,f,c
 13963  004732  1E18               	comf	(___aodiv@quotient+5)^0,f,c
 13964  004734  1E17               	comf	(___aodiv@quotient+4)^0,f,c
 13965  004736  1E16               	comf	(___aodiv@quotient+3)^0,f,c
 13966  004738  1E15               	comf	(___aodiv@quotient+2)^0,f,c
 13967  00473A  1E14               	comf	(___aodiv@quotient+1)^0,f,c
 13968  00473C  6C13               	negf	___aodiv@quotient^0,c
 13969  00473E  0E00               	movlw	0
 13970  004740  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
 13971  004742  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
 13972  004744  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
 13973  004746  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
 13974  004748  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
 13975  00474A  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
 13976  00474C  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
 13977  00474E                     l3719:
 13978  00474E  C013  F001         	movff	___aodiv@quotient,?___aodiv
 13979  004752  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
 13980  004756  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
 13981  00475A  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
 13982  00475E  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
 13983  004762  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
 13984  004766  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
 13985  00476A  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
 13986  00476E  0012               	return		;funcret
 13987  004770                     __end_of___aodiv:
 13988                           	callstack 0
 13989                           
 13990 ;; *************** function _sendStringSerial4 *****************
 13991 ;; Defined at:
 13992 ;;		line 36 in file "serial.c"
 13993 ;; Parameters:    Size  Location     Type
 13994 ;;  string          2    1[COMRAM] PTR unsigned char 
 13995 ;;		 -> goback@buf2(100), goback@buf3(100), goback@buf(100), action@buf(100), 
 13996 ;;		 -> color_predict@buf(100), color_display@buf(100), 
 13997 ;; Auto vars:     Size  Location     Type
 13998 ;;		None
 13999 ;; Return value:  Size  Location     Type
 14000 ;;                  1    wreg      void 
 14001 ;; Registers used:
 14002 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 14003 ;; Tracked objects:
 14004 ;;		On entry : 0/0
 14005 ;;		On exit  : 0/0
 14006 ;;		Unchanged: 0/0
 14007 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14008 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14009 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14010 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14011 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14012 ;;Total ram usage:        2 bytes
 14013 ;; Hardware stack levels used: 1
 14014 ;; Hardware stack levels required when called: 2
 14015 ;; This function calls:
 14016 ;;		_sendCharSerial4
 14017 ;; This function is called by:
 14018 ;;		_color_display
 14019 ;;		_color_predict
 14020 ;;		_action
 14021 ;;		_goback
 14022 ;; This function uses a non-reentrant model
 14023 ;;
 14024                           
 14025                           	psect	text71
 14026  0058D4                     __ptext71:
 14027                           	callstack 0
 14028  0058D4                     _sendStringSerial4:
 14029                           	callstack 26
 14030  0058D4                     
 14031                           ;serial.c: 38:     while(*string != 0){
 14032  0058D4  EF75  F02C         	goto	l4431
 14033  0058D8                     l4427:
 14034                           
 14035                           ;serial.c: 39:   sendCharSerial4(*string++);}
 14036  0058D8  C002  FFD9         	movff	sendStringSerial4@string,fsr2l
 14037  0058DC  C003  FFDA         	movff	sendStringSerial4@string+1,fsr2h
 14038  0058E0  50DF               	movf	indf2,w,c
 14039  0058E2  EC63  F02D         	call	_sendCharSerial4
 14040  0058E6  4A02               	infsnz	sendStringSerial4@string^0,f,c
 14041  0058E8  2A03               	incf	(sendStringSerial4@string+1)^0,f,c
 14042  0058EA                     l4431:
 14043                           
 14044                           ;serial.c: 38:     while(*string != 0){
 14045  0058EA  C002  FFD9         	movff	sendStringSerial4@string,fsr2l
 14046  0058EE  C003  FFDA         	movff	sendStringSerial4@string+1,fsr2h
 14047  0058F2  50DF               	movf	indf2,w,c
 14048  0058F4  A4D8               	btfss	status,2,c
 14049  0058F6  EF7F  F02C         	goto	u4171
 14050  0058FA  EF81  F02C         	goto	u4170
 14051  0058FE                     u4171:
 14052  0058FE  EF6C  F02C         	goto	l4427
 14053  005902                     u4170:
 14054  005902  0012               	return		;funcret
 14055  005904                     __end_of_sendStringSerial4:
 14056                           	callstack 0
 14057                           
 14058 ;; *************** function _sendCharSerial4 *****************
 14059 ;; Defined at:
 14060 ;;		line 29 in file "serial.c"
 14061 ;; Parameters:    Size  Location     Type
 14062 ;;  charToSend      1    wreg     unsigned char 
 14063 ;; Auto vars:     Size  Location     Type
 14064 ;;  charToSend      1    0[COMRAM] unsigned char 
 14065 ;; Return value:  Size  Location     Type
 14066 ;;                  1    wreg      void 
 14067 ;; Registers used:
 14068 ;;		wreg
 14069 ;; Tracked objects:
 14070 ;;		On entry : 0/0
 14071 ;;		On exit  : 0/0
 14072 ;;		Unchanged: 0/0
 14073 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14074 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14075 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14076 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14077 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14078 ;;Total ram usage:        1 bytes
 14079 ;; Hardware stack levels used: 1
 14080 ;; Hardware stack levels required when called: 1
 14081 ;; This function calls:
 14082 ;;		Nothing
 14083 ;; This function is called by:
 14084 ;;		_sendStringSerial4
 14085 ;; This function uses a non-reentrant model
 14086 ;;
 14087                           
 14088                           	psect	text72
 14089  005AC6                     __ptext72:
 14090                           	callstack 0
 14091  005AC6                     _sendCharSerial4:
 14092                           	callstack 26
 14093                           
 14094                           ;incstack = 0
 14095                           ;sendCharSerial4@charToSend stored from wreg
 14096  005AC6  6E01               	movwf	sendCharSerial4@charToSend^0,c
 14097  005AC8                     l426:
 14098  005AC8  010E               	movlb	14	; () banked
 14099  005ACA  A537               	btfss	55,2,b	;volatile
 14100  005ACC  EF6A  F02D         	goto	u3901
 14101  005AD0  EF6C  F02D         	goto	u3900
 14102  005AD4                     u3901:
 14103  005AD4  EF64  F02D         	goto	l426
 14104  005AD8                     u3900:
 14105  005AD8                     
 14106                           ; BSR set to: 14
 14107                           ;serial.c: 31:     TX4REG = charToSend;
 14108  005AD8  C001  FEE4         	movff	sendCharSerial4@charToSend,3812	;volatile
 14109  005ADC                     
 14110                           ; BSR set to: 14
 14111  005ADC  0012               	return		;funcret
 14112  005ADE                     __end_of_sendCharSerial4:
 14113                           	callstack 0
 14114                           
 14115 ;; *************** function _Timer0_init *****************
 14116 ;; Defined at:
 14117 ;;		line 7 in file "timers.c"
 14118 ;; Parameters:    Size  Location     Type
 14119 ;;		None
 14120 ;; Auto vars:     Size  Location     Type
 14121 ;;		None
 14122 ;; Return value:  Size  Location     Type
 14123 ;;                  1    wreg      void 
 14124 ;; Registers used:
 14125 ;;		wreg, status,2
 14126 ;; Tracked objects:
 14127 ;;		On entry : 0/0
 14128 ;;		On exit  : 0/0
 14129 ;;		Unchanged: 0/0
 14130 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14131 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14132 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14133 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14134 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14135 ;;Total ram usage:        0 bytes
 14136 ;; Hardware stack levels used: 1
 14137 ;; Hardware stack levels required when called: 1
 14138 ;; This function calls:
 14139 ;;		Nothing
 14140 ;; This function is called by:
 14141 ;;		_main
 14142 ;; This function uses a non-reentrant model
 14143 ;;
 14144                           
 14145                           	psect	text73
 14146  005AA8                     __ptext73:
 14147                           	callstack 0
 14148  005AA8                     _Timer0_init:
 14149                           	callstack 29
 14150  005AA8                     
 14151                           ;timers.c: 9:     T0CON1bits.T0CS=0b010;
 14152  005AA8  50D6               	movf	214,w,c	;volatile
 14153  005AAA  0B1F               	andlw	-225
 14154  005AAC  0940               	iorlw	64
 14155  005AAE  6ED6               	movwf	214,c	;volatile
 14156  005AB0                     
 14157                           ;timers.c: 10:     T0CON1bits.T0ASYNC=1;
 14158  005AB0  88D6               	bsf	214,4,c	;volatile
 14159                           
 14160                           ;timers.c: 11:     T0CON1bits.T0CKPS=0b0101;
 14161  005AB2  50D6               	movf	214,w,c	;volatile
 14162  005AB4  0BF0               	andlw	-16
 14163  005AB6  0905               	iorlw	5
 14164  005AB8  6ED6               	movwf	214,c	;volatile
 14165  005ABA                     
 14166                           ;timers.c: 12:     T0CON0bits.T016BIT=1;
 14167  005ABA  88D5               	bsf	213,4,c	;volatile
 14168                           
 14169                           ;timers.c: 16:     TMR0H=0b00111100;
 14170  005ABC  0E3C               	movlw	60
 14171  005ABE  6ED4               	movwf	212,c	;volatile
 14172                           
 14173                           ;timers.c: 17:     TMR0L=0b10101111;
 14174  005AC0  0EAF               	movlw	175
 14175  005AC2  6ED3               	movwf	211,c	;volatile
 14176  005AC4  0012               	return		;funcret
 14177  005AC6                     __end_of_Timer0_init:
 14178                           	callstack 0
 14179                           
 14180 ;; *************** function _Interrupts_init *****************
 14181 ;; Defined at:
 14182 ;;		line 9 in file "interrupts.c"
 14183 ;; Parameters:    Size  Location     Type
 14184 ;;		None
 14185 ;; Auto vars:     Size  Location     Type
 14186 ;;		None
 14187 ;; Return value:  Size  Location     Type
 14188 ;;                  1    wreg      void 
 14189 ;; Registers used:
 14190 ;;		None
 14191 ;; Tracked objects:
 14192 ;;		On entry : 0/0
 14193 ;;		On exit  : 0/0
 14194 ;;		Unchanged: 0/0
 14195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14196 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14197 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14198 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14199 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14200 ;;Total ram usage:        0 bytes
 14201 ;; Hardware stack levels used: 1
 14202 ;; Hardware stack levels required when called: 1
 14203 ;; This function calls:
 14204 ;;		Nothing
 14205 ;; This function is called by:
 14206 ;;		_main
 14207 ;; This function uses a non-reentrant model
 14208 ;;
 14209                           
 14210                           	psect	text74
 14211  005B00                     __ptext74:
 14212                           	callstack 0
 14213  005B00                     _Interrupts_init:
 14214                           	callstack 29
 14215  005B00  8EF2               	bsf	242,7,c	;volatile
 14216                           
 14217                           ;interrupts.c: 11:     INTCONbits.IPEN=1;
 14218  005B02  8AF2               	bsf	242,5,c	;volatile
 14219                           
 14220                           ;interrupts.c: 12:     INTCONbits.GIEL=1;
 14221  005B04  8CF2               	bsf	242,6,c	;volatile
 14222                           
 14223                           ;interrupts.c: 13:  PIE0bits.TMR0IE = 1;
 14224  005B06  010E               	movlb	14	; () banked
 14225  005B08  8B29               	bsf	41,5,b	;volatile
 14226  005B0A                     
 14227                           ; BSR set to: 14
 14228  005B0A  0012               	return		;funcret
 14229  005B0C                     __end_of_Interrupts_init:
 14230                           	callstack 0
 14231                           
 14232 ;; *************** function _HighISR *****************
 14233 ;; Defined at:
 14234 ;;		line 21 in file "interrupts.c"
 14235 ;; Parameters:    Size  Location     Type
 14236 ;;		None
 14237 ;; Auto vars:     Size  Location     Type
 14238 ;;		None
 14239 ;; Return value:  Size  Location     Type
 14240 ;;                  1    wreg      void 
 14241 ;; Registers used:
 14242 ;;		status,2, status,0
 14243 ;; Tracked objects:
 14244 ;;		On entry : 0/0
 14245 ;;		On exit  : 0/0
 14246 ;;		Unchanged: 0/0
 14247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14248 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14249 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14250 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14251 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14252 ;;Total ram usage:        0 bytes
 14253 ;; Hardware stack levels used: 1
 14254 ;; This function calls:
 14255 ;;		Nothing
 14256 ;; This function is called by:
 14257 ;;		Interrupt level 2
 14258 ;; This function uses a non-reentrant model
 14259 ;;
 14260                           
 14261                           	psect	intcode
 14262  000008                     __pintcode:
 14263                           	callstack 0
 14264  000008                     _HighISR:
 14265                           	callstack 19
 14266                           
 14267                           ; BSR set to: 14
 14268                           ;incstack = 0
 14269  000008  825F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 14270  00000A                     
 14271                           ;interrupts.c: 23:     if(PIR0bits.TMR0IF){
 14272  00000A  010E               	movlb	14	; () banked
 14273  00000C  AB33               	btfss	51,5,b	;volatile
 14274  00000E  EF0B  F000         	goto	i2u571_41
 14275  000012  EF0D  F000         	goto	i2u571_40
 14276  000016                     i2u571_41:
 14277  000016  EF12  F000         	goto	i2l693
 14278  00001A                     i2u571_40:
 14279  00001A                     
 14280                           ; BSR set to: 14
 14281                           ;interrupts.c: 24:         centisecond ++;
 14282  00001A  0103               	movlb	3	; () banked
 14283  00001C  4B68               	infsnz	_centisecond& (0+255),f,b
 14284  00001E  2B69               	incf	(_centisecond+1)& (0+255),f,b
 14285  000020                     
 14286                           ; BSR set to: 3
 14287                           ;interrupts.c: 25:         PIR0bits.TMR0IF = 0;
 14288  000020  010E               	movlb	14	; () banked
 14289  000022  9B33               	bcf	51,5,b	;volatile
 14290  000024                     i2l693:
 14291                           
 14292                           ; BSR set to: 14
 14293  000024  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 14294  000026  0011               	retfie		f
 14295  000028                     __end_of_HighISR:
 14296                           	callstack 0
 14297                           
 14298                           	psect	rparam
 14299  0000                     
 14300                           	psect	temp
 14301  00005F                     btemp:
 14302                           	callstack 0
 14303  00005F                     	ds	1
 14304  0000                     int$flags	set	btemp
 14305  0000                     wtemp8	set	btemp+1
 14306  0000                     ttemp5	set	btemp+1
 14307  0000                     ttemp6	set	btemp+4
 14308  0000                     ttemp7	set	btemp+8
 14309                           
 14310                           	psect	idloc
 14311                           
 14312                           ;Config register IDLOC0 @ 0x200000
 14313                           ;	unspecified, using default values
 14314  200000                     	org	2097152
 14315  200000  0FFF               	dw	4095
 14316                           
 14317                           ;Config register IDLOC1 @ 0x200002
 14318                           ;	unspecified, using default values
 14319  200002                     	org	2097154
 14320  200002  0FFF               	dw	4095
 14321                           
 14322                           ;Config register IDLOC2 @ 0x200004
 14323                           ;	unspecified, using default values
 14324  200004                     	org	2097156
 14325  200004  0FFF               	dw	4095
 14326                           
 14327                           ;Config register IDLOC3 @ 0x200006
 14328                           ;	unspecified, using default values
 14329  200006                     	org	2097158
 14330  200006  0FFF               	dw	4095
 14331                           
 14332                           ;Config register IDLOC4 @ 0x200008
 14333                           ;	unspecified, using default values
 14334  200008                     	org	2097160
 14335  200008  0FFF               	dw	4095
 14336                           
 14337                           ;Config register IDLOC5 @ 0x20000A
 14338                           ;	unspecified, using default values
 14339  20000A                     	org	2097162
 14340  20000A  0FFF               	dw	4095
 14341                           
 14342                           ;Config register IDLOC6 @ 0x20000C
 14343                           ;	unspecified, using default values
 14344  20000C                     	org	2097164
 14345  20000C  0FFF               	dw	4095
 14346                           
 14347                           ;Config register IDLOC7 @ 0x20000E
 14348                           ;	unspecified, using default values
 14349  20000E                     	org	2097166
 14350  20000E  0FFF               	dw	4095
 14351                           
 14352                           	psect	config
 14353                           
 14354                           ;Config register CONFIG1L @ 0x300000
 14355                           ;	External Oscillator mode Selection bits
 14356                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
 14357                           ;	Power-up default value for COSC bits
 14358                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
 14359  300000                     	org	3145728
 14360  300000  AA                 	db	170
 14361                           
 14362                           ;Config register CONFIG1H @ 0x300001
 14363                           ;	unspecified, using default values
 14364                           ;	Clock Out Enable bit
 14365                           ;	CLKOUTEN = 0x1, unprogrammed default
 14366                           ;	Clock Switch Enable bit
 14367                           ;	CSWEN = 0x1, unprogrammed default
 14368                           ;	Fail-Safe Clock Monitor Enable bit
 14369                           ;	FCMEN = 0x1, unprogrammed default
 14370  300001                     	org	3145729
 14371  300001  FF                 	db	255
 14372                           
 14373                           ;Config register CONFIG2L @ 0x300002
 14374                           ;	unspecified, using default values
 14375                           ;	Master Clear Enable bit
 14376                           ;	MCLRE = 0x1, unprogrammed default
 14377                           ;	Power-up Timer Enable bit
 14378                           ;	PWRTE = 0x1, unprogrammed default
 14379                           ;	Low-power BOR enable bit
 14380                           ;	LPBOREN = 0x1, unprogrammed default
 14381                           ;	Brown-out Reset Enable bits
 14382                           ;	BOREN = 0x3, unprogrammed default
 14383  300002                     	org	3145730
 14384  300002  FF                 	db	255
 14385                           
 14386                           ;Config register CONFIG2H @ 0x300003
 14387                           ;	unspecified, using default values
 14388                           ;	Brown Out Reset Voltage selection bits
 14389                           ;	BORV = 0x3, unprogrammed default
 14390                           ;	ZCD Disable bit
 14391                           ;	ZCD = 0x1, unprogrammed default
 14392                           ;	PPSLOCK bit One-Way Set Enable bit
 14393                           ;	PPS1WAY = 0x1, unprogrammed default
 14394                           ;	Stack Full/Underflow Reset Enable bit
 14395                           ;	STVREN = 0x1, unprogrammed default
 14396                           ;	Debugger Enable bit
 14397                           ;	DEBUG = 0x1, unprogrammed default
 14398                           ;	Extended Instruction Set Enable bit
 14399                           ;	XINST = 0x1, unprogrammed default
 14400  300003                     	org	3145731
 14401  300003  FF                 	db	255
 14402                           
 14403                           ;Config register CONFIG3L @ 0x300004
 14404                           ;	WDT Period Select bits
 14405                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 14406                           ;	WDT operating mode
 14407                           ;	WDTE = OFF, WDT Disabled
 14408  300004                     	org	3145732
 14409  300004  9F                 	db	159
 14410                           
 14411                           ;Config register CONFIG3H @ 0x300005
 14412                           ;	unspecified, using default values
 14413                           ;	WDT Window Select bits
 14414                           ;	WDTCWS = 0x7, unprogrammed default
 14415                           ;	WDT input clock selector
 14416                           ;	WDTCCS = 0x7, unprogrammed default
 14417  300005                     	org	3145733
 14418  300005  FF                 	db	255
 14419                           
 14420                           ;Config register CONFIG4L @ 0x300006
 14421                           ;	unspecified, using default values
 14422                           ;	Write Protection Block 0
 14423                           ;	WRT0 = 0x1, unprogrammed default
 14424                           ;	Write Protection Block 1
 14425                           ;	WRT1 = 0x1, unprogrammed default
 14426                           ;	Write Protection Block 2
 14427                           ;	WRT2 = 0x1, unprogrammed default
 14428                           ;	Write Protection Block 3
 14429                           ;	WRT3 = 0x1, unprogrammed default
 14430                           ;	Write Protection Block 3
 14431                           ;	WRT4 = 0x1, unprogrammed default
 14432                           ;	Write Protection Block 3
 14433                           ;	WRT5 = 0x1, unprogrammed default
 14434                           ;	Write Protection Block 3
 14435                           ;	WRT6 = 0x1, unprogrammed default
 14436                           ;	Write Protection Block 3
 14437                           ;	WRT7 = 0x1, unprogrammed default
 14438  300006                     	org	3145734
 14439  300006  FF                 	db	255
 14440                           
 14441                           ;Config register CONFIG4H @ 0x300007
 14442                           ;	unspecified, using default values
 14443                           ;	Configuration Register Write Protection bit
 14444                           ;	WRTC = 0x1, unprogrammed default
 14445                           ;	Boot Block Write Protection bit
 14446                           ;	WRTB = 0x1, unprogrammed default
 14447                           ;	Data EEPROM Write Protection bit
 14448                           ;	WRTD = 0x1, unprogrammed default
 14449                           ;	Scanner Enable bit
 14450                           ;	SCANE = 0x1, unprogrammed default
 14451                           ;	Low Voltage Programming Enable bit
 14452                           ;	LVP = 0x1, unprogrammed default
 14453  300007                     	org	3145735
 14454  300007  FF                 	db	255
 14455                           
 14456                           ;Config register CONFIG5L @ 0x300008
 14457                           ;	unspecified, using default values
 14458                           ;	UserNVM Program Memory Code Protection bit
 14459                           ;	CP = 0x1, unprogrammed default
 14460                           ;	DataNVM Memory Code Protection bit
 14461                           ;	CPD = 0x1, unprogrammed default
 14462  300008                     	org	3145736
 14463  300008  FF                 	db	255
 14464                           
 14465                           ;Config register CONFIG5H @ 0x300009
 14466                           ;	unspecified, using default values
 14467  300009                     	org	3145737
 14468  300009  FF                 	db	255
 14469                           
 14470                           ;Config register CONFIG6L @ 0x30000A
 14471                           ;	unspecified, using default values
 14472                           ;	Table Read Protection Block 0
 14473                           ;	EBTR0 = 0x1, unprogrammed default
 14474                           ;	Table Read Protection Block 1
 14475                           ;	EBTR1 = 0x1, unprogrammed default
 14476                           ;	Table Read Protection Block 2
 14477                           ;	EBTR2 = 0x1, unprogrammed default
 14478                           ;	Table Read Protection Block 3
 14479                           ;	EBTR3 = 0x1, unprogrammed default
 14480                           ;	Table Read Protection Block 4
 14481                           ;	EBTR4 = 0x1, unprogrammed default
 14482                           ;	Table Read Protection Block 5
 14483                           ;	EBTR5 = 0x1, unprogrammed default
 14484                           ;	Table Read Protection Block 6
 14485                           ;	EBTR6 = 0x1, unprogrammed default
 14486                           ;	Table Read Protection Block 7
 14487                           ;	EBTR7 = 0x1, unprogrammed default
 14488  30000A                     	org	3145738
 14489  30000A  FF                 	db	255
 14490                           
 14491                           ;Config register CONFIG6H @ 0x30000B
 14492                           ;	unspecified, using default values
 14493                           ;	Boot Block Table Read Protection bit
 14494                           ;	EBTRB = 0x1, unprogrammed default
 14495  30000B                     	org	3145739
 14496  30000B  FF                 	db	255
 14497                           tosu	equ	0xFFF
 14498                           tosh	equ	0xFFE
 14499                           tosl	equ	0xFFD
 14500                           stkptr	equ	0xFFC
 14501                           pclatu	equ	0xFFB
 14502                           pclath	equ	0xFFA
 14503                           pcl	equ	0xFF9
 14504                           tblptru	equ	0xFF8
 14505                           tblptrh	equ	0xFF7
 14506                           tblptrl	equ	0xFF6
 14507                           tablat	equ	0xFF5
 14508                           prodh	equ	0xFF4
 14509                           prodl	equ	0xFF3
 14510                           indf0	equ	0xFEF
 14511                           postinc0	equ	0xFEE
 14512                           postdec0	equ	0xFED
 14513                           preinc0	equ	0xFEC
 14514                           plusw0	equ	0xFEB
 14515                           fsr0h	equ	0xFEA
 14516                           fsr0l	equ	0xFE9
 14517                           wreg	equ	0xFE8
 14518                           indf1	equ	0xFE7
 14519                           postinc1	equ	0xFE6
 14520                           postdec1	equ	0xFE5
 14521                           preinc1	equ	0xFE4
 14522                           plusw1	equ	0xFE3
 14523                           fsr1h	equ	0xFE2
 14524                           fsr1l	equ	0xFE1
 14525                           bsr	equ	0xFE0
 14526                           indf2	equ	0xFDF
 14527                           postinc2	equ	0xFDE
 14528                           postdec2	equ	0xFDD
 14529                           preinc2	equ	0xFDC
 14530                           plusw2	equ	0xFDB
 14531                           fsr2h	equ	0xFDA
 14532                           fsr2l	equ	0xFD9
 14533                           status	equ	0xFD8

Data Sizes:
    Strings     63
    Constant    4
    Data        3
    BSS         196
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     94      94
    BANK0           160    152     160
    BANK1           256    200     251
    BANK2           256    201     233
    BANK3           256     67     175
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    distance_measure@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK3[10]), 

    distance_measure@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK3[10]), 

    amb_light_measure@amb	PTR struct color_rgb size(2) Largest target is 8
		 -> main@rgb(BANK3[8]), main@amb(BANK3[8]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK2[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK2[32]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK2[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_6(CODE[17]), STR_5(CODE[9]), STR_4(CODE[10]), STR_3(CODE[13]), 
		 -> STR_2(CODE[6]), STR_1(CODE[14]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 17
		 -> STR_6(CODE[17]), STR_5(CODE[9]), STR_4(CODE[10]), STR_3(CODE[13]), 
		 -> STR_2(CODE[6]), STR_1(CODE[14]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK2[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_6(CODE[17]), STR_5(CODE[9]), STR_4(CODE[10]), STR_3(CODE[13]), 
		 -> STR_2(CODE[6]), STR_1(CODE[14]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 100
		 -> goback@buf2(BANK2[100]), goback@buf3(BANK1[100]), goback@buf(BANK1[100]), action@buf(BANK2[100]), 
		 -> color_predict@buf(BANK0[100]), color_display@buf(BANK0[100]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S2828$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S2828$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    test_function@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK3[10]), 

    test_function@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK3[10]), 

    test_function@m	PTR struct color_rgb size(2) Largest target is 8
		 -> main@rgb(BANK3[8]), 

    test_function@w	PTR struct white_card size(2) Largest target is 28
		 -> main@white(BANK3[28]), 

    goback@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK3[10]), 

    goback@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK3[10]), 

    action@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK3[10]), 

    action@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK3[10]), 

    short_burst_back@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK3[10]), 

    short_burst_back@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK3[10]), 

    motorR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    motorR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    motorL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    motorL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    sendStringSerial4@string	PTR unsigned char  size(2) Largest target is 100
		 -> goback@buf2(BANK2[100]), goback@buf3(BANK1[100]), goback@buf(BANK1[100]), action@buf(BANK2[100]), 
		 -> color_predict@buf(BANK0[100]), color_display@buf(BANK0[100]), 

    reverse_square@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK3[10]), 

    reverse_square@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK3[10]), 

    short_reverse@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK3[10]), 

    short_reverse@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK3[10]), 

    halfSpeedBack@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    halfSpeedBack@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    halfSpeedBack@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    halfSpeedBack@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    fullSpeedBack@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    fullSpeedBack@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    fullSpeedBack@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK3[10]), 

    fullSpeedBack@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    fullSpeedBack@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    fullSpeedBack@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK3[10]), 

    fullSpeedAhead@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    fullSpeedAhead@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    fullSpeedAhead@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK3[10]), 

    fullSpeedAhead@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    fullSpeedAhead@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    fullSpeedAhead@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK3[10]), 

    turnRight@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turnRight@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    turnRight@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK3[10]), 

    turnRight@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turnRight@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    turnRight@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK3[10]), 

    turnLeft@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turnLeft@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    turnLeft@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK3[10]), 

    turnLeft@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turnLeft@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    turnLeft@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK3[10]), 

    stop@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    stop@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    stop@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK3[10]), 

    stop@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    stop@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    stop@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK3[10]), 

    setMotorPWM@m.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    setMotorPWM@m.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    setMotorPWM@m	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK3[10]), main@motorL(BANK3[10]), 

    initDCmotors_parameter@motorR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    initDCmotors_parameter@motorR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    initDCmotors_parameter@motorR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK3[10]), 

    initDCmotors_parameter@motorL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    initDCmotors_parameter@motorL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    initDCmotors_parameter@motorL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK3[10]), 

    motorR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    motorR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    S376DC_motor$dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    motorL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    S376DC_motor$dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    motorL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    verify_color@w	PTR struct white_card size(2) Largest target is 28
		 -> main@white(BANK3[28]), 

    verify_color@m	PTR struct color_rgb size(2) Largest target is 8
		 -> main@rgb(BANK3[8]), 

    detect_color@w	PTR struct white_card size(2) Largest target is 28
		 -> main@white(BANK3[28]), 

    detect_color@m	PTR struct color_rgb size(2) Largest target is 8
		 -> main@rgb(BANK3[8]), 

    calibrate_white@w	PTR struct white_card size(2) Largest target is 28
		 -> main@white(BANK3[28]), 

    color_display@m	PTR struct color_rgb size(2) Largest target is 8
		 -> main@rgb(BANK3[8]), 

    color_data_collection@m	PTR struct color_rgb size(2) Largest target is 8
		 -> main@rgb(BANK3[8]), 

    read_color@m	PTR struct color_rgb size(2) Largest target is 8
		 -> main@rgb(BANK3[8]), 


Critical Paths under _main in COMRAM

    _color_data_collection->_color_display
    _read_color->_color_read_Blue
    _read_color->_color_read_Clear
    _read_color->_color_read_Green
    _read_color->_color_read_Red
    _calibrate_white->_color_read_Blue
    _calibrate_white->_color_read_Clear
    _calibrate_white->_color_read_Green
    _calibrate_white->_color_read_Red
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _lroundf->___fltol
    _roundf->___flmul
    ___flsub->___fladd
    ___flmul->___fldiv
    ___fltol->_roundf
    _color_read_Clear->_I2C_2_Master_Read
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    ___fldiv->___xxtofl
    _short_burst_back->_stop
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle
    _action->_goback
    _short_reverse->_fullSpeedBack
    _turnRight->_stop
    _turnLeft->_stop
    _reverse_square->_fullSpeedBack
    _fullSpeedBack->_stop
    _stop->_setMotorPWM
    _fullSpeedAhead->_setMotorPWM
    _setMotorPWM->___awdiv
    ___awdiv->___wmul
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _sendStringSerial4->_sendCharSerial4

Critical Paths under _HighISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_test_function
    _verify_color->_detect_color
    _test_function->_color_data_collection
    _distance_measure->_lroundf
    _detect_color->_compare
    _compare->_lroundf
    _color_data_collection->_color_predict
    _color_display->_sprintf
    _amb_light_measure->_lroundf
    _lroundf->___fltol
    _action->_goback
    _goback->_color_predict
    _color_predict->_sprintf

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    _action->_goback

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    _main->_action
    _action->_goback

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                69    69      0  333988
                                            150 BANK0      2     2      0
                                              0 BANK3     67    67      0
                  _I2C_2_Master_Init
                    _Interrupts_init
                        _Timer0_init
                             _action
                  _amb_light_measure
                    _buggylight_init
                    _calibrate_white
                   _color_click_init
                      _color_predict
                       _detect_color
                   _distance_measure
                     _fullSpeedAhead
                    _initDCmotorsPWM
             _initDCmotors_parameter
                         _initUSART4
                           _pin_init
                   _short_burst_back
                               _stop
                      _test_function
                       _verify_color
 ---------------------------------------------------------------------------------
 (1) _verify_color                                        11     7      4   26930
                                             50 BANK0      9     5      4
                       _detect_color
 ---------------------------------------------------------------------------------
 (1) _test_function                                       16     8      8  109124
                                            134 BANK0     16     8      8
                              _LED_C
                  _amb_light_measure
                    _calibrate_white
              _color_data_collection
                      _color_display
                      _color_predict
                       _detect_color
                   _distance_measure
                     _fullSpeedAhead
                         _read_color
                               _stop
 ---------------------------------------------------------------------------------
 (2) _distance_measure                                    19    13      6   19139
                                             10 BANK0     19    13      6
                              _LED_C
                            ___flmul
                           ___xxtofl
                   _color_read_Clear
                   _color_read_Green
                            _lroundf
 ---------------------------------------------------------------------------------
 (2) _detect_color                                        33    29      4   26644
                                             17 BANK0     33    29      4
                              _LED_B
                              _LED_G
                              _LED_R
                            ___fldiv
                            ___flmul
                           ___xxtofl
                            _compare
                            _lroundf
                         _read_color
                       _toggle_light
 ---------------------------------------------------------------------------------
 (3) _compare                                              7     1      6    1936
                                             10 BANK0      7     1      6
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
                            _lroundf (ARG)
 ---------------------------------------------------------------------------------
 (2) _color_data_collection                               12    10      2   17656
                                             89 COMRAM     4     2      2
                                            126 BANK0      8     8      0
                              _LED_B
                              _LED_C
                              _LED_G
                              _LED_R
                      _color_display
                      _color_predict
                         _read_color
 ---------------------------------------------------------------------------------
 (3) _read_color                                           2     0      2    1148
                                             11 COMRAM     2     0      2
                    _color_read_Blue
                   _color_read_Clear
                   _color_read_Green
                     _color_read_Red
 ---------------------------------------------------------------------------------
 (2) _color_display                                      102   100      2    8257
                                             87 COMRAM     2     0      2
                                             25 BANK0    100   100      0
                  _sendStringSerial4
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _calibrate_white                                      4     2      2    1525
                                             11 COMRAM     4     2      2
                              _LED_B
                              _LED_C
                              _LED_G
                            _LED_OFF
                              _LED_R
                    _color_read_Blue
                   _color_read_Clear
                   _color_read_Green
                     _color_read_Red
                       _toggle_light
 ---------------------------------------------------------------------------------
 (4) _color_read_Red                                       7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (4) _color_read_Green                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (4) _color_read_Blue                                      7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _LED_R                                                2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _LED_OFF                                              2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _LED_G                                                2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _LED_B                                                2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _amb_light_measure                                   14    12      2   18815
                                             10 BANK0     14    12      2
                              _LED_C
                            ___fldiv
                           ___xxtofl
                   _color_read_Clear
                            _lroundf
                       _toggle_light
 ---------------------------------------------------------------------------------
 (3) _lroundf                                              4     0      4   13096
                                              6 BANK0      4     0      4
                            ___fldiv (ARG)
                            ___fltol
                           ___xxtofl (ARG)
                             _roundf
 ---------------------------------------------------------------------------------
 (4) _roundf                                              26    22      4   11629
                                             64 COMRAM    26    22      4
                            ___fladd
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    3649
                                             16 COMRAM     8     0      8
                            ___fladd
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    3326
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4     197
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    3332
                                             39 COMRAM    25    17      8
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8     486
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (4) ___fltol                                             10     6      4     305
                                             90 COMRAM     4     0      4
                                              0 BANK0      6     6      0
                             _roundf (ARG)
 ---------------------------------------------------------------------------------
 (4) _color_read_Clear                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (5) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (5) _I2C_2_Master_Read                                    3     3      0      45
                                              1 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4    1910
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (3) ___fldiv                                             25    17      8    2835
                                             14 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) _LED_C                                                2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _short_burst_back                                     6     2      4    7550
                                             31 COMRAM     6     2      4
                     _fullSpeedAhead
                               _stop
 ---------------------------------------------------------------------------------
 (1) _pin_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initDCmotors_parameter                               4     0      4     416
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2      76
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     294
                                              4 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     294
                                              2 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (5) _I2C_2_Master_Write                                   1     1      0      22
                                              1 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (5) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (5) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (6) _I2C_2_Master_Idle                                    1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _buggylight_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _action                                             105   101      4  107663
                                            128 BANK0      4     0      4
                                            100 BANK2    101   101      0
                             _goback
                     _reverse_square
                  _sendStringSerial4
                      _short_reverse
                            _sprintf
                       _toggle_light
                           _turnLeft
                          _turnRight
 ---------------------------------------------------------------------------------
 (3) _toggle_light                                         5     4      1     613
                                              0 COMRAM     5     4      1
 ---------------------------------------------------------------------------------
 (2) _short_reverse                                        6     2      4   12085
                                             37 COMRAM     6     2      4
                      _fullSpeedBack
                               _stop
 ---------------------------------------------------------------------------------
 (2) _goback                                             308   304      4   54929
                                             87 COMRAM     6     2      4
                                            126 BANK0      2     2      0
                                              0 BANK1    200   200      0
                                              0 BANK2    100   100      0
                      _color_predict
                     _fullSpeedAhead
                     _reverse_square
                  _sendStringSerial4
                            _sprintf
                               _stop
                           _turnLeft
                          _turnRight
 ---------------------------------------------------------------------------------
 (2) _turnRight                                           18    13      5    9353
                                             31 COMRAM    18    13      5
                        _setMotorPWM
                               _stop
 ---------------------------------------------------------------------------------
 (2) _turnLeft                                            18    13      5   10037
                                             31 COMRAM    18    13      5
                        _setMotorPWM
                               _stop
 ---------------------------------------------------------------------------------
 (2) _reverse_square                                       6     2      4   11781
                                             37 COMRAM     6     2      4
                      _fullSpeedBack
                               _stop
 ---------------------------------------------------------------------------------
 (3) _fullSpeedBack                                        6     2      4    6898
                                             31 COMRAM     6     2      4
                        _setMotorPWM
                               _stop
 ---------------------------------------------------------------------------------
 (2) _stop                                                 6     2      4    4187
                                             25 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _fullSpeedAhead                                       5     1      4    3123
                                             25 COMRAM     5     1      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (3) _setMotorPWM                                         11     9      2    2187
                                             14 COMRAM    11     9      2
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     447
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4     496
                                              6 COMRAM     8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _color_predict                                      101   101      0    7811
                                             25 BANK0    101   101      0
                  _sendStringSerial4
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             27    15     12    7216
                                              0 BANK0     25    13     12
                           _vfprintf
 ---------------------------------------------------------------------------------
 (4) _vfprintf                                             8     2      6    6105
                                             79 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (5) _vfpfcnvrt                                           42    36      6    5751
                                             63 COMRAM    16    10      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (6) _dtoa                                                36    26     10    4358
                                             27 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (7) _pad                                                 11     5      6    2709
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (8) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (8) _fputs                                                7     3      4    1235
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (6) _fputc                                                9     5      4     834
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (7) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (7) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (7) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (7) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (3) _sendStringSerial4                                    2     0      2     523
                                              1 COMRAM     2     0      2
                    _sendCharSerial4
 ---------------------------------------------------------------------------------
 (4) _sendCharSerial4                                      1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _HighISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_2_Master_Init
   _Interrupts_init
   _Timer0_init
   _action
     _goback
       _color_predict
         _sendStringSerial4
           _sendCharSerial4
         _sprintf
           _vfprintf
             _vfpfcnvrt
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                   _strlen
               _fputc
       _fullSpeedAhead
         _setMotorPWM
           ___awdiv
             ___wmul (ARG)
           ___wmul
       _reverse_square
         _fullSpeedBack
           _setMotorPWM
           _stop
             _setMotorPWM
         _stop
       _sendStringSerial4
       _sprintf
       _stop
       _turnLeft
         _setMotorPWM
         _stop
       _turnRight
         _setMotorPWM
         _stop
     _reverse_square
     _sendStringSerial4
     _short_reverse
       _fullSpeedBack
       _stop
     _sprintf
     _toggle_light
     _turnLeft
     _turnRight
   _amb_light_measure
     _LED_C
     ___fldiv
       ___xxtofl (ARG)
     ___xxtofl
     _color_read_Clear
       _I2C_2_Master_Read
         _I2C_2_Master_Idle
       _I2C_2_Master_RepStart
         _I2C_2_Master_Idle
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
     _lroundf
       ___fldiv (ARG)
       ___fltol (ARG)
         _roundf (ARG)
           ___fladd
           ___flge
           ___flmul
             ___fldiv (ARG)
             ___xxtofl (ARG)
           ___flneg
           ___flsub
             ___fladd
       ___xxtofl (ARG)
       _roundf (ARG)
     _toggle_light
   _buggylight_init
   _calibrate_white
     _LED_B
     _LED_C
     _LED_G
     _LED_OFF
     _LED_R
     _color_read_Blue
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Clear
     _color_read_Green
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Red
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _toggle_light
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _color_predict
   _detect_color
     _LED_B
     _LED_G
     _LED_R
     ___fldiv
     ___flmul
     ___xxtofl
     _compare
       ___fldiv (ARG)
       ___flmul (ARG)
       ___xxtofl (ARG)
       _lroundf (ARG)
     _lroundf
     _read_color
       _color_read_Blue
       _color_read_Clear
       _color_read_Green
       _color_read_Red
     _toggle_light
   _distance_measure
     _LED_C
     ___flmul
     ___xxtofl
     _color_read_Clear
     _color_read_Green
     _lroundf
   _fullSpeedAhead
   _initDCmotorsPWM
   _initDCmotors_parameter
   _initUSART4
   _pin_init
   _short_burst_back
     _fullSpeedAhead
     _stop
   _stop
   _test_function
     _LED_C
     _amb_light_measure
     _calibrate_white
     _color_data_collection
       _LED_B
       _LED_C
       _LED_G
       _LED_R
       _color_display
         _sendStringSerial4
         _sprintf
       _color_predict
       _read_color
     _color_display
     _color_predict
     _detect_color
     _distance_measure
     _fullSpeedAhead
     _read_color
     _stop
   _verify_color
     _detect_color

 _HighISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      58        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100     43      AF      11       68.4%
BITBANK2           100      0       0       8        0.0%
BANK2              100     C9      E9       9       91.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     C8      FB       7       98.0%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     98      A0       5      100.0%
BITBIGSFRlllllh     8F      0       0      41        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5E      5E       1      100.0%
BITBIGSFRllllll     32      0       0      46        0.0%
BITBIGSFRllllll     2A      0       0      50        0.0%
BITBIGSFRllllll     26      0       0      56        0.0%
BITBIGSFRllllll     20      0       0      44        0.0%
BITBIGSFRhhhl       1B      0       0      33        0.0%
BITBIGSFRhlh        17      0       0      35        0.0%
BITBIGSFRhhl        13      0       0      34        0.0%
BITBIGSFRhlllh      11      0       0      37        0.0%
BITBIGSFRhhhh        D      0       0      32        0.0%
BITBIGSFRllllll      C      0       0      45        0.0%
BITBIGSFRllllll      B      0       0      54        0.0%
BITBIGSFRlllllh      8      0       0      42        0.0%
BITBIGSFRllllll      6      0       0      55        0.0%
BITBIGSFRllllll      6      0       0      49        0.0%
BITBIGSFRllllll      5      0       0      52        0.0%
BITBIGSFRllllll      5      0       0      48        0.0%
BITBIGSFRhllll       5      0       0      38        0.0%
BITBIGSFRllllll      3      0       0      51        0.0%
BITBIGSFRllllll      3      0       0      53        0.0%
BITBIGSFRllllll      3      0       0      47        0.0%
BITBIGSFRhllh        1      0       0      36        0.0%
BITBIGSFRllllll      1      0       0      43        0.0%
BITBIGSFRllllh       1      0       0      40        0.0%
BITBIGSFRllh         1      0       0      39        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     391      57        0.0%
DATA                 0      0     391       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.35 build 20211206165544 
Symbol Table                                                                                   Mon Mar 14 21:13:14 2022

                ?_short_reverse 0026                  _color_read_Red 5470                    ___fldiv@aexp 0027  
                  ___fldiv@bexp 0026                    ___fldiv@sign 001F                 _color_read_Blue 5510  
                 _color_predict 5904                              l71 5AF2                              l82 367C  
                            l74 366A                              l91 54BE                              l85 58D2  
                            l94 555E                              l88 5A88                              l97 550E  
                  ___awdiv@sign 000C             ___wmul@multiplicand 0003                _color_read_Clear 5560  
              _color_read_Green 54C0               ??_Interrupts_init 0001                             l100 55AE  
                           l103 541C                             l112 5A48                             l106 59E8  
                           l203 595A                             l115 5A28                             l212 5B28  
                           l132 52EE                             l221 5AFE                             l109 59C8  
                           l141 3886                             l206 595C                             l118 5A08  
                           l303 3C42                             l311 516E                             l215 5B14  
                           l224 567A                             l160 1A40                             l209 5982  
                           l129 4140                             l138 5930                             l322 43EA  
                           l218 5B1E                             l163 57F4                             l340 425C  
                           l172 49FA                             l164 57F6                             l326 4432  
                           l318 43A2                             l175 4E66                             l344 42A4  
                           l336 4214                             l176 4E68                             l168 527E  
                           l329 445C                             l417 5AA6                             l426 5AC8  
                           l435 5902                             l355 5202                             l347 42CE  
                           l380 577C                             l429 5ADC                             l293 56BC  
                           l366 50B2                             l704 5AC4                             l640 30E6  
                           l296 4CD8                             l377 573C                             l628 56FC  
                           l549 3942                             l646 5A68                             l663 2DA0  
                           l920 48D2                             l907 476E                             l687 5B0A  
                           l793 59A8               verify_color@color 009A                ?_calibrate_white 000C  
      __end_of_distance_measure 4E6A                             _abs 577E                             _pad 4E6A  
                           prod 000FF3                             wreg 000FE8                    ___flmul@aexp 0039  
                  ___flmul@bexp 003A                    ___flmul@sign 0034                    ___flmul@temp 003F  
                  ___flmul@prod 003B                 __end_of_LED_OFF 59EA                    ___fltol@exp1 0065  
                          l1024 4FF2                            ?_abs 0013                            l1063 4C06  
                          l1321 1C30                            l1090 4B02                            l1058 4BC0  
                          l1330 1F00                            l1322 1C1E                            l1411 232A  
                          l1067 5868                            l1323 1BE4                            l1414 21BC  
                          l1503 4EB0                            l1407 1FC6                            l1424 22EC  
                          l1416 2234                            l1417 2222                            l4001 1BDC  
                          l1506 4EF2                            l1514 318C                            l1338 1D4A  
                          l1451 3DF6                            l1347 1E1A                            l4011 1C12  
                          l4003 1BF2                            l1363 55F4                            l1508 4F2E  
                          l1516 3194                            l1380 2896                            l1348 1E08  
                          l1541 3FAA                            l4101 1EC4                            l4021 1C62  
                          l4013 1C1C                            l4005 1BFE                            l1534 33D0  
                          l1462 3D8E                            l1375 2A72                            l1455 3D32  
                          l4111 1EEE                            l4103 1ED2                            l4031 1C9E  
                          l4023 1C72                            l4015 1C3E                            l4007 1C02  
                          l1552 57B4                            l1448 3C9A                            l4121 3E2A  
                          l4201 510C                            l1377 28D2                            l4113 1EF0  
                          l4105 1ED8                            l4041 1CE4                            l4033 1CAC  
                          l4025 1C80                            l4017 1C4E                            l4009 1C10  
                          l5001 3682                            l1386 2918                            l4211 5AC8  
                          l1555 57BC                            l4131 3ED0                            l4123 3E3C  
                          l1547 53B6                            l4203 5118                            l4107 1EDA  
                          l4051 1D60                            l4043 1D18                            l4035 1CAE  
                          l4027 1C8E                            l5011 36D4                            l5003 368C  
                          l1548 53BE                            l1476 546E                            l1388 2990  
                          l4213 5AD8                            l4141 3F4E                            l4125 3E40  
                          l4117 3DF8                            l4205 5126                            l1389 297E  
                          l4301 21BA                            l4221 1F1E                            l4109 1EE0  
                          l4061 1D9C                            l4053 1D70                            l4045 1D1A  
                          l4037 1CB8                            l4029 1C9A                            l1469 5830  
                          l5021 3738                            l5013 36EC                            l5005 36A4  
                          l5101 144A                            l1567 4DA2                            l1575 5638  
                          l4135 3F08                            l4127 3E64                            l4119 3E1C  
                          l4151 3F74                            l4207 513E                            l4311 221A  
                          l4303 21CC                            l4231 1F64                            l4223 1F2E  
                          l4215 1F02                            l4071 1DC8                            l4063 1D9E  
                          l4047 1D2A                            l4039 1CBE                            l5031 379C  
                          l5023 3750                            l5015 3704                            l5007 36A8  
                          l5111 15EE                            l5103 1466                            l4153 3F98  
                          l4137 3F2C                            l4145 3F5A                            l4129 3E88  
                          l4209 5156                            l4161 5B24                            l4321 2288  
                          l4305 21DA                            l4241 1F90                            l4233 1F6A  
                          l4225 1F3E                            l4217 1F0E                            l4081 1E00  
                          l4065 1DAC                            l4057 1D84                            l4073 1DCA  
                          l4049 1D3A                            l4401 54C0                            l5041 3800  
                          l5033 37B4                            l5025 3768                            l5017 3708  
                          l5009 36C0                            l5121 17B0                            l5113 1696  
                          l5105 150E                            l5201 4DBE                            l1578 5B2C  
                          l1586 26D8                            l4147 3F68                            l4139 3F3A  
                          l4163 5AF6                            l4171 5B0C                            l4331 22F0  
                          l4315 2244                            l4323 228C                            l4307 21DE  
                          l4251 1FE6                            l4243 1FA0                            l4235 1F70  
                          l4227 1F4E                            l4219 1F1C                            l4091 1E7E  
                          l4067 1DB4                            l4059 1D8E                            l4075 1DD8  
                          l4403 5506                            l5051 3864                            l5043 3818  
                          l5035 37CC                            l5027 376C                            l5019 3720  
                          l5131 18B2                            l5123 17BA                            l5115 16AA  
                          l5107 152A                            l5211 4E4A                            l5203 4DD8  
                          l3701 4696                            l4421 545C                            l4413 541E  
                          l5301 2D20                            l4165 5AFA                            l4181 5650  
                          l4173 5B10                            l4341 231A                            l4333 2300  
                          l4325 22A6                            l4317 2250                            l4309 21EC  
                          l4261 2026                            l4245 1FB0                            l4237 1F7E  
                          l4229 1F54                            l4085 1E2A                            l4093 1E80  
                          l4077 1DDC                            l4069 1DB8                            l4501 23A8  
                          l5045 3830                            l5037 37E4                            l5029 3784  
                          l5141 1906                            l5125 17D2                            l5133 18BC  
                          l5117 16D8                            l5109 15D2                            l5061 0EBE  
                          l5053 0E46                            l5213 4E62                            l5205 4DE4  
                          l4431 58EA                            l3711 4706                            l3703 46A4  
                          l1599 589E                            l4415 5430                            l4191 50B8  
                          l5303 2D44                            l5231 2A8C                            l5223 56FE  
                          l4159 5B20                            l4167 5B16                            l4183 5676  
                          l4175 563C                            l4407 5560                            l4351 4B04  
                          l4335 230E                            l4327 22BA                            l4319 225E  
                          l4271 2070                            l4263 2032                            l4255 1FFA  
                          l4247 1FB6                            l4239 1F80                            l4095 1E90  
                          l4087 1E36                            l4079 1DEA                            l4511 245C  
                          l4503 23E4                            l5047 3848                            l5039 37E8  
                          l5151 1986                            l5143 191C                            l5135 18D2  
                          l5127 17E8                            l5119 17A6                            l5071 10DA  
                          l5063 0F5A                            l5055 0E94                            l5207 4DE8  
                          l4425 58D4                            l3713 4718                            l3705 46B6  
                          l4417 5438                            l4601 5924                            l3801 4F5C  
                          l4193 50D0                            l4441 5048                            l4433 4FF4  
                          l5313 2DA4                            l5241 2AD4                            l5233 2A90  
                          l5225 5712                            l4169 5B1A                            l5321 58A0  
                          l4185 5678                            l4177 5640                            l4409 55A6  
                          l4361 4B8E                            l4353 4B32                            l4337 2310  
                          l4329 22D4                            l4281 20C2                            l4273 207C  
                          l4265 204A                            l4257 2006                            l4249 1FD6  
                          l4097 1EA0                            l4089 1E44                            l4345 55B0  
                          l4521 2668                            l4513 252A                            l4505 2408  
                          l5049 3860                            l5161 1A1E                            l5153 19B6  
                          l5145 1924                            l5137 18E8                            l5129 18A8  
                          l5081 1138                            l5073 10F6                            l5065 0F76  
                          l5057 0E98                            l5209 4E2E                            l5401 4474  
                          l4427 58D8                            l3707 46E4                            l3715 471E  
                          l3731 47A6                            l3723 4770                            l3651 4CFE  
                          l4419 5440                            l3811 4F8A                            l3803 4F64  
                          l4195 50DC                            l4435 5018                            l4443 5056  
                          l5315 2DBA                            l5307 2D60                            l5251 2B1C  
                          l5243 2ADC                            l5235 2AA6                            l5227 5728  
                          l4531 33E0                            l5323 58A4                            l4179 5648  
                          l4451 49FC                            l4363 4BA0                            l4355 4B42  
                          l4339 2316                            l4291 2140                            l4283 20D2  
                          l4275 208C                            l4267 2056                            l4259 2010  
                          l4099 1EC0                            l4347 55C0                            l4523 26A4  
                          l4515 2596                            l4507 2424                            l4603 57F8  
                          l5171 48EE                            l4611 57DA                            l5163 1A32  
                          l5155 19BC                            l5139 18FE                            l5147 1928  
                          l5091 1362                            l5083 11DA                            l5075 110E  
                          l5067 101E                            l5059 0EB2                            l5411 44CC  
                          l5403 4486                            l5331 5208                            l4429 58E6  
                          l3717 472E                            l3709 4704                            l3741 480E  
                          l3733 47B4                            l3725 4774                            l3653 4D08  
                          l3661 55F6                            l4381 535E                            l3821 4FC4  
                          l3813 4F92                            l3805 4F68                            l3901 3A70  
                          l4197 50F4                            l4189 50B4                            l4445 506E  
                          l4437 5030                            l4621 430C                            l4701 42A0  
                          l5317 2DC6                            l5309 2D84                            l5253 2B34  
                          l5245 2AF4                            l5237 2AB2                            l5229 2A74  
                          l4541 3472                            l4533 33F0                            l5501 2FE8  
                          l5325 58AE                            l4461 4A54                            l4453 4A14  
                          l4365 4BAE                            l4357 4B70                            l4293 2176  
                          l4285 20EE                            l4277 2098                            l4269 2062  
                          l4373 5832                            l4525 26C8                            l4517 25C8  
                          l5181 4938                            l5173 48F8                            l4613 57F0  
                          l5165 1A3C                            l5157 19EA                            l5149 1956  
                          l5093 137E                            l5085 11F6                            l5077 1112  
                          l5069 1032                            l5421 4514                            l5413 44D0  
                          l5405 4492                            l5333 5220                            ?_pad 0011  
                          l3719 474E                            l3743 481C                            l3751 4882  
                          l3735 47D4                            l3727 4782                            l3655 4D26  
                          l3647 4CDA                            l3663 5602                            l3671 5876  
                          l4383 5366                            l3831 4FEA                            l3823 4FC6  
                          l3815 4FA0                            l3807 4F70                            l3911 3B70  
                          l3903 3A8C                            l4711 51B8                            l4199 5100  
                          l4447 5086                            l4439 503C                            l4631 4358  
                          l4623 4318                            l4703 42BA                            l5271 2BB4  
                          l5263 2B8E                            l5255 2B3A                            l5247 2AFA  
                          l5239 2AC8                            l4551 3518                            l4543 3492  
                          l4535 3410                            l5511 3058                            l5503 2FFC  
                          l5319 5ADE                            l5327 58BE                            l5351 568C  
                          l4463 4A64                            l4367 4BFE                            l4359 4B80  
                          l4295 2184                            l4287 20FA                            l4279 20A8  
                          l4375 5848                            l4519 2634                            l5191 49E8  
                          l5183 4944                            l5175 48FC                            l4391 54B6  
                          l4607 57BE                            l5159 1A18                            l5095 1382  
                          l5087 129E                            l5079 112C                            l5431 4544  
                          l5423 451A                            l5415 44DC                            l5407 44A6  
                          l5335 523E                            l3681 45EC                            l3753 4892  
                          l3745 484A                            l3737 47F2                            l3729 47A2  
                          l3657 4D5C                            l3649 4CEC                            l3665 5614  
                          l3673 587A                            l3761 4E7A                            l3841 3150  
                          l4385 5374                            l3825 4FCC                            l3817 4FA6  
                          l3809 4F82                            l3913 3BDA                            l3905 3AEE  
                          l4713 51C4                            l4705 5170                            l4449 509E  
                          l4721 5752                            l4641 439E                            l4633 4364  
                          l4625 4324                            l4617 42D0                            l5273 2BD8  
                          l5265 2B90                            l5257 2B64                            l5249 2B0E  
                          l4561 35B4                            l4553 3530                            l4545 34AA  
                          l4537 3428                            l4529 33D4                            l5521 30BE  
                          l5513 3084                            l5505 3028                            l5329 58C8  
                          l5353 56A4                            l5361 4C14                            l4801 28A0  
                          l4473 4A8E                            l4465 4A68                            l4457 4A28  
                          l4369 4C04                            l4297 21A2                            l4289 2116  
                          l4377 5858                            l3921 1A5E                            l5193 49F2  
                          l5185 495C                            l5177 4914                            l5169 48D4  
                          l4609 57C4                            l5097 139C                            l5089 12BA  
                          l5441 459E                            l5433 4554                            l5417 44E8  
                          l5409 44BA                            l5345 527C                            l5337 5256  
                          l5601 38B0                            l3691 464C                            l3683 45FA  
                          l3755 48B2                            l3747 486A                            l3739 47FA  
                          l3667 5618                            l3675 5892                            l3771 4ED0  
                          l3763 4E8E                            l3851 31AE                            l3843 3160  
                          l3835 30E8                            l4387 539A                            l3819 4FBC  
                          l3827 4FD2                            l3907 3B34                            l4707 5194  
                          l4715 51D2                            l4723 5768                            l4651 4400  
                          l4643 43B8                            l4635 4370                            l4619 42F4  
                          l4627 4332                            l5291 2C9C                            l5283 2C38  
                          l5275 2BF0                            l5267 2B96                            l5259 2B78  
                          l4571 3668                            l4563 35EA                            l4555 356C  
                          l4547 34E2                            l4539 3460                            l5523 30D2  
                          l5515 309E                            l5507 3042                            l5355 56B8  
                          l5371 4C70                            l5363 4C24                            l5451 56D2  
                          l4811 28F8                            l4803 28BE                            l4731 26F6  
                          l4491 4AF2                            l4483 4AB6                            l4475 4A98  
                          l4467 4A76                            l4459 4A52                            l4299 21AC  
                          l3923 1A6E                            l3931 1A98                            l3915 1A42  
                          l5187 4968                            l5179 4920                            l4395 5510  
                          l5099 13A8                            l5443 45AE                            l5427 4532  
                          l5419 44FC                            l5339 5276                            l5603 38C4  
                          l3693 4650                            l3685 461A                            l3749 487C  
                          l3781 577E                            l3669 586A                            l3773 4ED4  
                          l3765 4E9C                            l3861 31DC                            l3853 31BE  
                          l3845 3164                            l3837 3108                            l3829 4FE2  
                          l3909 3B54                            l4717 51EA                            l4709 51AC  
                          l4653 4412                            l4645 43CA                            l4637 4382  
                          l4629 434A                            l4661 4142                            l5285 2C5C  
                          l5277 2BF8                            l5269 2BAE                            l4565 35FC  
                          l4557 357E                            l4549 34F4                            l5517 30A0  
                          l5509 3044                            l5461 2E1E                            l5357 56BA  
                          l5349 567C                            l5365 4C38                            l5381 5AA2  
                          l5373 5A8A                            l5453 56E8                            l4821 2936  
                          l4813 28FE                            l4805 28C0                            l4733 2706  
                          l4741 2730                            l4725 26DA                            l4901 3DD6  
                          l4485 4AC2                            l4477 4AA2                            l3941 1AC8  
                          l3933 1AA8                            l3925 1A7E                            l3917 1A4E  
                          l5189 4980                            l4581 59B0                            l4397 5556  
                          l4389 5470                            l4573 53C0                            l5197 4DA4  
                          l5445 45C2                            l5437 456A                            l5429 453E  
                          l5621 3930                            l5613 38EC                            l5605 38CA  
                          l5391 5AB0                            l3695 465C                            l3687 461E  
                          l3679 45E8                            l3783 5798                            l3775 4F02  
                          l3767 4EA8                            l3759 4E6A                            l3871 32E8  
                          l3863 325E                            l3855 31C4                            l3847 3180  
                          l3839 3130                            l3791 4F30                            l4719 573E  
                          l4655 441E                            l4647 43D6                            l4639 438E  
                          l4663 4166                            l4671 41A4                            l5295 2CCC  
                          l5279 2C1C                            l4567 361A                            l4559 359C  
                          l5519 30B4                            l5471 2E8C                            l5463 2E30  
                          l5455 2DE4                            l4911 593C                            l5367 4C4C  
                          l5359 4C08                            l5383 5AA4                            l5375 5A94  
                          l4583 5A2A                            l4831 29A0                            l4823 293A  
                          l4815 2908                            l4807 28D0                            l4751 275C  
                          l4743 2740                            l4735 2716                            l4727 26E6  
                          l4903 3DE4                            l4487 4AD2                            l3951 1B08  
                          l3943 1AD6                            l3935 1AAE                            l3927 1A8E  
                          l3919 1A5C                            l4495 232C                            l4591 59EA  
                          l4575 59CA                            l5199 4DBA                            l5447 45DC  
                          l5439 457E                            l5631 39C0                            l5623 394C  
                          l5615 38EE                            l5607 38CA                            l5393 5ABA  
                          l3697 467A                            l3689 462C                            l3777 4F16  
                          l3769 4EBC                            l3881 335C                            l3873 3306  
                          l3865 3264                            l3857 31CC                            l3849 319C  
                          l3793 4F34                            l3785 5984                            l4657 442E  
                          l4649 43E6                            l4681 41F4                            l4673 41BC  
                          l4665 417E                            l5297 2CF0                            l5289 2C78  
                          l4569 3632                            l5481 2F14                            l5473 2EB8  
                          l5465 2E5C                            l5457 2DF6                            l4913 5942  
                          l4921 5A6C                            l5369 4C5C                            l5377 5A96  
                          l5449 56BE                            l4585 5A30                            l4841 2A02  
                          l4833 29AC                            l4825 2948                            l4817 2916  
                          l4809 28E2                            l4753 276C                            l4761 2796  
                          l4745 2746                            l4737 2726                            l4729 26F4  
                          l4905 3DE6                            l4489 4AE2                            l3961 1B42  
                          l3953 1B0A                            l3945 1AD8                            l3937 1AC0  
                          l3929 1A90                            l4497 234C                            l4593 59F0  
                          l4577 59D0                            l5641 3A0C                            l5633 39C6  
                          l5625 3974                            l5617 38FA                            l5609 38D6  
                          l5395 5B00                            l3699 4682                            l3891 3398  
                          l3883 336C                            l3875 3320                            l3867 326A  
                          l3859 31D6                            l3795 4F42                            l3787 59A0  
                          l4659 4448                            l4691 4248                            l4683 4200  
                          l4675 41CA                            l4667 418A                            l5491 2F8A  
                          l5483 2F2E                            l5475 2ED2                            l5467 2E76  
                          l5459 2E12                            l4915 5944                            l5379 5AA0  
                          l4851 2A60                            l4843 2A18                            l4835 29BA  
                          l4827 2976                            l4819 2928                            l4771 27D8  
                          l4763 27A6                            l4755 277C                            l4747 274C  
                          l4739 2728                            l3971 1B56                            l3963 1B46  
                          l3947 1AE8                            l3955 1B12                            l3939 1AC2  
                          l4499 2394                            l4587 5A0A                            l4579 59AA  
                          l4595 5280                            l4931 3FD2                            l4923 3FAC  
                          l5643 3A26                            l5627 39A2                            l5635 39CA  
                          l5619 390E                            l5389 5AA8                            l3885 3372  
                          l3893 33A8                            l3877 333A                            l3869 32CE  
                          l3797 4F4A                            l4693 4258                            l4685 4210  
                          l4677 41D6                            l4669 4196                            l5493 2F8C  
                          l5485 2F30                            l5477 2ED4                            l5469 2E78  
                          l4917 5946                            l4909 5932                            l5397 5A4A  
                          l4853 2A66                            l4845 2A32                            l4837 29E4  
                          l4765 27BC                            l4757 278C                            l4749 275A  
                          l3981 1B6A                            l3973 1B5A                            l3965 1B4A  
                          l3957 1B22                            l3949 1AF8                            l4589 5A10  
                          l4597 52E2                            l4941 4022                            l4933 3FEA  
                          l5645 3A44                            l5637 39DE                            l5629 39A8  
                          l3887 3384                            l3879 334A                            l4599 5908  
                          l3799 4F4E                            l4695 4272                            l4687 422A  
                          l4679 41E2                            l5495 2FA0                            l5487 2F44  
                          l5479 2EE8                            l4919 5948                            l4855 2A68  
                          l4847 2A4E                            l4839 29E8                            l4791 285A  
                          l4783 2810                            l4767 27CC                            l4775 27EC  
                          l4759 278E                            l4871 3CC0                            l4863 3C46  
                          l3991 1B7E                            l3983 1B6E                            l3975 1B5E  
                          l3967 1B4E                            l3959 1B34                            l4951 4046  
                          l4935 3FF6                            l5399 4462                            l5647 3A5E  
                          l5639 39F8                            l5591 389C                            l3889 3390  
                          l4697 4284                            l4689 423C                            l5497 2FCC  
                          l5489 2F70                            l3897 595C                            l4849 2A52  
                          l4793 2862                            l4785 282A                            l4777 27FC  
                          l4769 27D4                            l4881 3D1A                            l4865 3C56  
                          l3985 1B72                            l3977 1B62                            l3969 1B52  
                          l3993 1B82                            l4953 4052                            l4937 4002  
                          l4929 3FCE                            l5649 3A64                            l5593 38A0  
                          l5585 3888                            l4699 4290                            l5499 2FE6  
                          l3899 596C                            l4795 2872                            l4787 283A  
                          l4779 27FC                            l4891 3D7E                            l4883 3D1C  
                          l4875 3CD4                            l4867 3C64                            l3995 1B86  
                          l3987 1B76                            l3979 1B66                            l4971 40AE  
                          l4955 405E                            l4947 402A                            l4939 4008  
                          l5595 38A4                            l5587 388C                            l4797 2886  
                          l4789 284A                            l4893 3D9C                            l4885 3D28  
                          l4877 3CDC                            l4869 3CAA                            l3997 1BB0  
                          l3989 1B7A                            l4973 40BA                            l4965 4086  
                          l4957 4064                            l4949 402E                            l5597 38A8  
                          l5589 3890                            l4799 2894                            l4895 3D9E  
                          l4887 3D64                            l4879 3CE8                            l3999 1BCC  
                          l4991 4116                            l4983 40E2                            l4975 40C0  
                          l4967 408A                            l4959 407E                            l5599 38AC  
                          l4897 3DA2                            l4889 3D70                            l4993 411C  
                          l4985 40E6                            l4977 40DA                            l4969 40A2  
                          l4899 3DC6                            l4995 4136                            l4987 40FE  
                          l4997 413C                            l4989 410A                            l4999 367E  
                          STR_1 0E16                            STR_2 0E1E                            STR_3 0E24  
                          STR_4 0E31                            STR_5 0E3B                            STR_6 0E05  
                          u3000 46A4                            u3001 46A0                            u3010 46E4  
                          u3011 46E0                            u3020 472E                            u3100 4E9C  
                          u3021 472A                            u3101 4E98                            u3030 4782  
                          u3110 4EF2                            u3031 477E                            u3111 4EEE  
                          u3040 47B4                            u3120 4F02                            u3200 3118  
                          u4000 21BA                    _BAUD4CONbits 000EE9                            u3041 47B0  
                          u3121 4EFE                            u3201 3112                            u4001 21B6  
                          _LATE 000F7D                            u3050 47F2                            u3130 5798  
                          u3210 311A                            u4010 21DA                            u3051 47EE  
                          u3131 5794                            u4011 21D6                            _LATG 000F7F  
                          u3060 481C                            u3300 333A                            u3220 3130  
                          u3140 4F42                            u4100 4B32                            u4020 21EC  
                          u3061 4818                            u3301 3336                            u3221 312C  
                          u3141 4F3E                            u4101 4B2E                            u4021 21E8  
                          u3070 484A                            u3310 334A                            u3230 3160  
                          u3150 4F5C                            u4110 4B70                            u4030 221A  
                          u3071 4846                            u3311 3346                            u3231 315C  
                          u3151 4F58                            u4111 4B6C                            u4031 2216  
                          u3080 4892                            u3320 335C                            u3240 3180  
                          u3160 4F82                            u5000 2A02                            u4200 4A14  
                          u4120 4B8E                            u4040 2230                            u3081 488E  
                          u3321 3358                            u3241 317C                            u3161 4F7E  
                          u5001 29FE                            u4201 4A10                            u4121 4B8A  
                          u4041 222C                            u3090 4E7A                            u3330 336C  
                          u3250 31AE                            u3170 4FA0                            u5010 2A32  
                          u4210 4A48                            u4130 4BAE                            u4050 2244  
                          u3410 1A5C                            _T2PR 000FBC                            u3091 4E76  
                          u3331 3368                            u3251 31AA                            u3171 4F9C  
                          u5011 2A2E                            u4131 4BAA                            u4051 2240  
                          u3411 1A58                            u3340 3384                            u3260 31BE  
                          u3180 4FBC                            u3404 3C34                            u5020 2A60  
                          u5100 3D9C                            u4220 4A76                            u4140 4BFE  
                          u4060 225E                            u3500 1BB0                            u3420 1A6E  
                          u4300 23E4                            u3341 3380                            u3261 31BA  
                          u3181 4FB8                            u3405 3C30                            u5021 2A5C  
                          u5101 3D98                            u4221 4A72                            u4141 4BFA  
                          u4061 225A                            u3501 1BAC                            u3421 1A6A  
                          u4301 23E0                            u3270 32E8                            u3190 4FE2  
                          u3350 596C                            u5110 3DD6                            u5030 3C56  
                          u4230 4A8A                            u4070 22A6                            u4150 5848  
                          u3510 1BC8                            u3430 1A7E                            u4310 2424  
                          u3271 32E4                            u3191 4FDE                            u3351 5968  
                          u5111 3DD2                            u5031 3C52                            u4231 4A86  
                          u4215 4A3E                            u4071 22A2                            u4151 5844  
                          u3511 1BC2                            u3431 1A7A                            u4311 2420  
                          u3280 3306                            u4160 53B6                            u3360 5982  
                          u5120 3DE4                            u5040 3C64                            u4240 4AB2  
                          u4080 22D4                            u3600 1CAC                            u3520 1BCA  
                          u3440 1AC0                            u4320 252A                            u5200 17E8  
                          u3281 3302                            u4161 53B2                            u3361 597E  
                          u5121 3DE0                            u5041 3C60                            u4241 4AAE  
                          u4081 22D0                            u3601 1CA8                            u3441 1ABC  
                          u4321 2526                            u5201 17E4                            u4170 5902  
                          u3290 3320                            u3370 3A8C                            u4410 3472  
                          u5050 3CC0                            u4250 4AD2                            u4090 230E  
                          u3610 1CE4                            u3530 1BF2                            u3450 1AD6  
                          u4330 25C8                            u5130 4022                            u5210 18A8  
                          u4171 58FE                            u3291 331C                            u3371 3A88  
                          u4411 346E                            u5051 3CBC                            u4251 4ACE  
                          u4091 230A                            u3611 1CE0                            u3531 1BEE  
                          u3451 1AD2                            u4331 25C4                            u5131 401E  
                          u5211 18A4                            u2900 4CEC                            u3380 3B70  
                          u4180 506E                            u4420 3484                            u5060 3D16  
                          u4260 4AE2                            u3700 1E00                            u3620 1D2A  
                          u3540 1C10                            u3460 1AE8                            u4340 2688  
                          u5140 407E                            u5300 1A18                            u5220 18D2  
                          u2901 4CE8                            u3381 3B6C                            u4181 506A  
                          u4421 347C                            u5061 3D12                            u4261 4ADE  
                          u3701 1DFC                            u3621 1D26                            u3541 1C0C  
                          u3461 1AE4                            u5141 407A                            u5301 1A14  
                          u5221 18CE                            u2910 4CFE                            u4190 5086  
                          u4510 357E                            u5070 3D60                            u3710 1E16  
                          u3630 1D60                            u3550 1C30                            u3470 1AF8  
                          u4350 26A4                            u4270 236C                            u5150 40DA  
                          u5310 1A32                            u5230 18E8                            u2911 4CFA  
                          u4191 5082                            u4511 357A                            u5071 3D5C  
                          u3711 1E12                            u3631 1D5C                            u3551 1C2C  
                          u3471 1AF4                            u4351 26A0                            u6007 5A1A  
                          u5151 40D6                            u5311 1A2E                            u5231 18E4  
                          u2920 4D26                            u3800 3E1C                            u5400 2D44  
                          u4520 3590                            u4440 34BC                            u4408 343C  
                          u4360 33F0                            u5080 3D7E                            u3720 1E2A  
                          u3640 1D70                            u3560 1C3E                            u3480 1B34  
                          u4280 2394                            u5160 4136                            u5240 18FE  
                          u5320 4E62                            u2921 4D22                            u3801 3E18  
                          u5401 2D40                            u4521 3588                            u4441 34B4  
                          u4361 33EC                            u5081 3D7A                            u3721 1E26  
                          u3641 1D6C                            u3561 1C3A                            u3481 1B30  
                          u4345 267E                            u4281 2390                            u6017 4908  
                          u5161 4132                            u5241 18FA                            u5321 4E5E  
                          u2930 4D5C                            u3810 3E64                            u3394 3BCA  
                          u5410 2D84                            u5330 2B64                            u4610 367C  
                          u4370 3402                            u5090 3D8E                            u3730 1E44  
                          u3650 1D9C                            u3570 1C4E                            u3490 1B42  
                          u4290 23C8                            u5250 191C                            u5170 16D8  
            verify_color@color2 0098                            u2931 4D58                            u3811 3E60  
                          u3395 3BC6                            u5411 2D80                            u5331 2B60  
                          u4611 3678                            u6107 349C                            u4371 33FA  
                          u5091 3D8A                            u3731 1E40                            u3651 1D98  
                          u3571 1C4A                            u3491 1B3E                            u4275 2362  
                          u6027 492C                            u5251 1918                            u5171 16D4  
                          u3900 5AD8                            u2940 5638                            u3820 3E88  
                          u4700 4448                            u5340 2B8A                            u4540 35C6  
                          u4508 3544                            u4460 34F4                            u3740 1E7E  
                          u3660 1DAC                            u3580 1C80                            u4620 57DA  
                          u5260 1956                            u5180 17A6                            u5500 4554  
                          u5420 5276                            u3901 5AD4                            u2941 5634  
                          u3821 3E84                            u4701 4444                            u5341 2B86  
                          u4541 35BE                            u4461 34F0                            u6117 34D4  
                          u3741 1E7A                            u3661 1DA8                            u3581 1C7C  
                          u6037 4950                            u4621 57D6                            u5261 1952  
                          u5181 17A2                            u5501 4550                            u5421 5272  
                          u2950 5892                            u3830 3F2C                            u4710 41BC  
                          u5350 2BD8                            u4470 3506                            u4438 3486  
                          u4390 343A                            u3910 1F1C                            u3750 1E90  
                          u3670 1DC8                            u3590 1C8E                            u4630 57F0  
                          u5270 1986                            u5190 17D2                            u5510 4566  
                          u2951 588E                            u3831 3F28                            u4711 41B8  
                          u6207 419C                            u5351 2BD4                            u6127 3522  
                          u4471 34FE                            u4391 3432                            u3911 1F18  
                          u3751 1E8C                            u3671 1DC4                            u3591 1C8A  
                          u4295 23BE                            u6047 4974                            u4631 57EC  
                          u5271 1982                            u5191 17CE                            u5511 4562  
                          u2960 45FA                            u4640 434A                            u4720 41F4  
                          u5360 2C1C                            u4608 3646                            u4560 35FC  
                          u5600 3058                            u4800 26F4                            u3840 5664  
                          u3920 1F2E                            u3760 1EA0                            u3680 1DD8  
                          u5280 19B6                            u5520 45AE                            u2961 45F6  
                          u4641 4346                            u6217 4206                            u4721 41F0  
                          u5361 2C18                            u4561 35F8                            u6137 355E  
                          u5601 3054                            u6057 5A3A                            u4801 26F0  
                          u3841 565C                            u3921 1F2A                            u3761 1E9C  
                          u3681 1DD4                            u5281 19B2                            u5521 45AA  
                          u2970 462C                            u4650 4382                            u4730 422A  
                          u5370 2C5C                            u4570 360E                            u4538 3592  
                          u4490 3542                            u4458 34BE                            u5610 30B4  
                          u5530 2DF6                            u4810 2706                            u3930 1F3E  
                          u3770 1EC0                            u3690 1DEA                            u5290 19EA  
                          u5450 4486                            u2971 4628                            u6307 5090  
                          u4651 437E                            u6227 424E                            u4731 4226  
                          u5371 2C58                            u4571 3606                            u6147 35A6  
                          u4491 353A                            u5611 30B0                            u5531 2DF2  
                          u6067 56DC                            u4811 2702                            u3931 1F3A  
                          u3771 1EBC                            u3691 1DE6                            u5291 19E6  
                          u5451 4482                            u3860 50D0                            u4660 43B8  
                          u4740 423C                            u5380 2C9C                            u4388 3404  
                          u5540 2E30                            u4900 28BE                            u4820 2716  
                          u3940 1F7E                            u3780 1ED2                            u5460 44A6  
                          u5700 3974                            u2981 4656                            u6317 511E  
                          u3861 50CC                            u4661 43B4                            u6237 4296  
                          u4741 4238                            u5381 2C98                            u6157 35DC  
                          u5541 2E2C                            u6077 58B4                            u4901 28BA  
                          u4821 2712                            u3941 1F7A                            u3781 1ECE  
                          u5461 44A2                            u5701 3970                            u2990 467A  
                          u3870 50F4                            u4670 43CA                            u4750 4272  
                          u5390 2CF0                            u4590 3644                            u4558 35C8  
                          u5550 2E8C                            u4910 28E2                            u4830 275A  
                          u3950 1F90                            u3790 1EEE                            u5470 44CC  
                          u2991 4676                            u6327 5160                            u3871 50F0  
                          u4671 43C6                            u6247 432A                            u4751 426E  
                          u5391 2CEC                            u4591 363C                            u6167 3624  
                          u6087 341A                            u5551 2E88                            u4911 28DE  
                          u4831 2756                            u3951 1F8C                            u3791 1EEA  
                          u5471 44C8                            u3880 513E                            u4680 4400  
                          u4760 4284                            u4488 3508                            u5560 2EE8  
                          u4920 28F8                            u4840 276C                            u3960 1FA0  
                          u5480 44FC                            u6337 51CA                            u3881 513A  
                          u4681 43FC                            u6257 4394                            u4761 4280  
                          u6177 365A                            u6097 3452                            u5561 2EE4  
                          u4921 28F4                            u4841 2768                            u3961 1F9C  
                          u5481 44F8                            u3890 5156                            u4690 4412  
                          u4770 42BA                            u5570 2F44                            u4930 2916  
                          u4850 277C                            u3858 5666                            u3970 1FD6  
                          u5490 452E                            u3891 5152                            u4691 440E  
                          u6267 43DC                            u4771 42B6                            u6187 571C  
                          u5571 2F40                            u4931 2912                            u4851 2778  
                          u3971 1FD2                            u5491 452A                            u4780 51EA  
                          u4588 3610                            u5580 2FA0                            u4940 2936  
                          u4860 27BC                            u3980 1FE6                            u4781 51E6  
                          u6277 4424                            u6197 2B26                            u5581 2F9C  
                          u4941 2932                            u4861 27B8                            u3981 1FE2  
                          u4790 5202                            u5590 2FFC                            u4950 2948  
                          u4870 27FC                            u3990 2160                            u4791 51FE  
                          u6287 575C                            u5591 2FF8                            u4951 2944  
                          u4871 27F8                            u5807 524A                            u4960 2976  
                          u4880 2872                            u6297 504E                            u4961 2972  
                          u4881 286E                            u5817 45CE                            u4970 298C  
                          u4890 2894                            u5690 3942                            u4971 2988  
                          u4891 2890                            u3995 2156                            u5907 40F0  
                          u5827 4DCA                            u5691 393E                            u4980 29A0  
                          u4981 299C                            u5917 3696                            u5837 0EA4  
                          u4990 29BA                            u4991 29B6                            u5927 36B2  
                          u5847 1102                            u5937 3712                            u5857 111E  
                          u5947 3776                            u5867 138E                            u5787 39EA  
                          u5957 37F2                            u5877 3FDC                            u5797 5214  
                          u5967 386E                            u5887 4038                            u5977 59BA  
                          u5897 4094                            u5987 59DA                            u5997 59FA  
                          abs@a 0013                            _dbuf 02C9                            _main 3888  
                          _dtoa 30E8                            _prec 01F8                            _nout 01F4  
                          pad@i 0018                            pad@p 0015                            fsr1h 000FE2  
                          fsr2h 000FDA                            indf1 000FE7                            indf2 000FDF  
                          fsr1l 000FE1                            pad@w 001A                            fsr2l 000FD9  
                          btemp 005F                            _stop 50B4                            prodh 000FF4  
                          prodl 000FF3                            start 0028                  ?_color_display 0058  
               ___fldiv@new_exp 0020          __end_of_color_read_Red 54C0                 __end_of_HighISR 0028  
                  ___param_bank 000000                  ?_color_predict 0001                           ??_abs 0015  
                         ??_pad 0017                   ___fltol@sign1 0064                 __end_of___aodiv 4770  
     amb_light_measure@CC_amb_1 0072       amb_light_measure@CC_amb_2 0074       amb_light_measure@CC_amb_3 0076  
               __end_of___fladd 1F02                           ?_main 0001                           ?_dtoa 001C  
               __end_of___aomod 48D4                 __end_of___fldiv 2A74                 __end_of___awdiv 4FF4  
               __end_of___flneg 586A                 __end_of___flmul 232C                 __end_of___flsub 55F6  
               __end_of___fltol 4B04                           ?_stop 001A                 ___awdiv@divisor 0009  
                         _LED_B 5A0A                           _LED_C 5A2A                           _LED_G 59EA  
                         _LED_R 59AA                           i2l693 0024                 ___awdiv@counter 000B  
                  vfpfcnvrt@fmt 0042                           _TMR0H 000FD4                           _TMR0L 000FD3  
       __end_of_sendCharSerial4 5ADE      __end_of_I2C_2_Master_Start 5B2A         ??_color_data_collection 005C  
    __end_of_I2C_2_Master_Write 5B00                 __end_of_compare 57F8                    compare@lower 006A  
                         _flags 00F8                           _color 036A                    compare@upper 006E  
                         _fputc 4CDA                           _fputs 55F6                           pad@fp 0011  
                         _width 01F6                           _putch 5B2C                           _toint 0E01  
                         dtoa@d 001E                           dtoa@i 003E                           dtoa@n 0036  
                         dtoa@p 0030                           dtoa@s 0034                           dtoa@w 0032  
               ??_test_function 00EE            amb_light_measure@amb 006A                           tablat 000FF5  
               __end_of_lroundf 5832                           ttemp5 0060                           ttemp6 0063  
                         ttemp7 0067                           status 000FD8                           wtemp8 0060  
               __end_of_sprintf 5470                color_display@buf 0079         __end_of_color_read_Blue 5560  
         _I2C_2_Master_RepStart 5B0C                 ??_short_reverse 002A                 ?_color_read_Red 0005  
               __initialization 52F0                    __end_of_main 3A70                    __end_of_dtoa 33D2  
                 main@amb_light 0374            __end_of_detect_color 1A42                    __end_of_stop 5170  
        color_data_collection@i 00DE          color_data_collection@j 00E0          color_data_collection@k 00E2  
        color_data_collection@m 005A          color_data_collection@x 00E4                          ??_main 00F6  
                        ??_dtoa 0026                          ??_stop 001E                   __activetblptr 000001  
                        ?_LED_B 0001                          ?_LED_C 0001                          ?_LED_G 0001  
                        ?_LED_R 0001                 _buggylight_init 5ADE                       ??_LED_OFF 0001  
        _initDCmotors_parameter 4C08                    ?_setMotorPWM 000F                          ?_fputc 0001  
                        ?_fputs 000A                ___awdiv@dividend 0007                          ?_putch 0001  
                        _RC0PPS 000E62                          _RC4REG 000EE3                          _RE2PPS 000E74  
                        _RD5PPS 000E6F                          _RC7PPS 000E69                          _RD6PPS 000E70  
                        i2l5651 000A                          i2l5653 001A                          i2l5655 0020  
            turnLeft@angle_left 0024                       ??_HighISR 0001        __end_of_color_click_init 58D4  
                        _RX4PPS 000E15                          _TX4REG 000EE4                 ??_color_display 005A  
              __end_of___xxtofl 3DF8                   ??_Timer0_init 0001                 ??_color_predict 0058  
                  vfprintf@cfmt 0056                          ___flge 4B04                       ??___aodiv 0011  
                     ??___fladd 0009                       ??___aomod 0011                          ___wmul 5984  
                     ??___fldiv 0017                       ??___awdiv 000B                       ??___flneg 0005  
                     ??___flmul 0030                          _action 2DE0                       ??___flsub 0019  
                     ??___fltol 0060                          _goback 2A74                   compare@result 0070  
                        _memory 033C                          clear_0 5320                          clear_1 532C  
                        clear_2 5338                ___awdiv@quotient 000D                          _motorL 01E6  
                        _motorR 01DC                          isa$std 000001                          pad@buf 0013  
                        _roundf 232C                          dtoa@fp 001C                          _strlen 586A  
                     ??_compare 005F                   toggle_light@i 0004                __end_of_pin_init 5A6A  
                        fputc@c 0001         toggle_light@lightnumber 0005                          fputs@c 000E  
                        fputs@i 000F                          fputs@s 000A                  test_function@m 00E6  
                test_function@w 00E8                    __mediumconst 0000                          tblptrh 000FF7  
                        tblptrl 000FF6                          tblptru 000FF8                ?_sendCharSerial4 0001  
                     ??_lroundf 005F                     read_color@m 000C                          putch@c 0001  
              __end_of_vfprintf 53C0                          stop@mL 001A                          stop@mR 001C  
             ??_initDCmotorsPWM 0003                       ??_sprintf 0058                __end_of_turnLeft 445E  
                    ___flge@ff1 0001                      ___flge@ff2 0005                    ___xxtofl@arg 000B  
                  ___xxtofl@exp 000A                    ___xxtofl@val 0001                calibrate_white@w 000C  
               fullSpeedBack@mL 0020                 fullSpeedBack@mR 0022                      __accesstop 0060  
       __end_of__initialization 534C                   verify_color@m 0092                   verify_color@w 0094  
      __end_of_color_read_Clear 55B0                      ___flneg@f1 0001        __end_of_color_read_Green 5510  
        ?_I2C_2_Master_RepStart 0001              color_predict@color 00DD    initDCmotors_parameter@motorL 0001  
  initDCmotors_parameter@motorR 0003                   ___rparam_used 000001                      ___fltol@f1 005B  
                 __end_of_LED_B 5A2A                   __end_of_LED_C 5A4A                   __end_of_LED_G 5A0A  
                 __end_of_LED_R 59CA                ?_color_read_Blue 0005                 _Interrupts_init 5B00  
                __pcstackCOMRAM 0001                   _fullSpeedBack 4FF4                    __pidataBANK0 5B2A  
                  __pidataBANK1 5B2E         __end_of_buggylight_init 5AF4            turnRight@angle_right 0024  
         _distance_measure$3276 0074                   __end_of_fputc 4DA4               detect_color@color 0089  
                 __end_of_fputs 563A                   __end_of_putch 5B2E                   __end_of_toint 0E05  
           __end_of_Timer0_init 5AC6                         ??_LED_B 0001                         ??_LED_C 0001  
                       ??_LED_G 0001                         ??_LED_R 0001               ?_distance_measure 006A  
            ??_distance_measure 0070                         ??_fputc 0005                         ??_fputs 000E  
                       ??_putch 0001                      __pbssBANK0 00F8                      __pbssBANK1 01C8  
                    __pbssBANK2 02C9                      __pbssBANK3 0300                color_predict@buf 0079  
     distance_measure@amb_light 006E               _color_writetoaddr 5A6A                    _T2CLKCONbits 000FBF  
                ?_fullSpeedBack 0020                         ?___flge 0001              ?_color_writetoaddr 0003  
                       ?___wmul 0001                         ?_action 00E0                         ?_goback 0058  
                       ?_roundf 0041             ??_color_writetoaddr 0004                         ?_strlen 0001  
                       _LED_OFF 59CA                       ?___xxtofl 0001                         _SP4BRGH 000EE6  
                       _SP4BRGL 000EE5                         _PWM6DCH 000FA3                         _PWM7DCH 000FA0  
                       _SSP2ADD 000ED6                         _SSP2BUF 000ED5    amb_light_measure@upper_bound 006E  
            short_burst_back@mL 0020              short_burst_back@mR 0022                    _detect_color 0E46  
 __end_of_color_data_collection 4142         __end_of_Interrupts_init 5B0C          color_writetoaddr@value 0003  
              ??_color_read_Red 0007                         _HighISR 0008       __end_of_color_writetoaddr 5A8A  
            _I2C_2_Master_Start 5B20                      _initUSART4 5A8A              _I2C_2_Master_Write 5AF4  
                     ?_pin_init 0001                         __Hparam 0000           test_function@complete 00F2  
                       __Lparam 0000               color_read_Red@tmp 000A                     _Timer0_init 5AA8  
       sendStringSerial4@string 0002                         ___aodiv 45E8                         ___fladd 1A42  
                       ___aomod 4770                         ___fldiv 26DA                         ___awdiv 4F30  
                       ___flneg 5832                         ___flmul 1F02                         ___flsub 55B0  
                       ___fltol 49FC             ?_I2C_2_Master_Start 0001                ?_buggylight_init 0001  
           ?_I2C_2_Master_Write 0001                       ?_vfprintf 0050                    __psmallconst 0E00  
     distance_measure@threshold 007A                         __pcinit 52F0                         __ramtop 0E00  
                    _read_color 53C0                       ?_turnLeft 0020                         __ptext0 3888  
                       __ptext1 5204                         __ptext2 445E                         __ptext3 4DA4  
                       __ptext4 0E46                         __ptext5 57BE                         __ptext6 3FAC  
                       __ptext7 53C0                         __ptext8 5280                         __ptext9 367E  
                       _compare 57BE         ?_initDCmotors_parameter 0001                       _T2CONbits 000FBD  
                    ??___xxtofl 0005                       _T2HLTbits 000FBE                         _lroundf 57F8  
                 _RxBufWriteCnt 00FD                         goback@i 00DE          distance_measure@CC_amb 0078  
                       main@amb 036C          distance_measure@CG_amb 0072                         _sprintf 541E  
                       main@rgb 0377            ??_I2C_2_Master_Start 0002            ??_I2C_2_Master_Write 0002  
          end_of_initialization 534C              setMotorPWM@PWMduty 0018                 _CALIBRATION_135 00FF  
               _CALIBRATION_180 01FA                         fputc@fp 0003           __end_of_test_function 45E8  
                       fputs@fp 000C               ?_color_click_init 0001                 test_function@mL 00EA  
               test_function@mR 00EC                 ??_fullSpeedBack 0024                      ??_pin_init 0001  
            ??_color_click_init 0005                _short_burst_back 56BE               __end_of_vfpfcnvrt 3FAC  
         __end_of_short_reverse 573E                         postdec1 000FE5                         postdec2 000FDD  
                       postinc0 000FEE                         postinc1 000FE6                         postinc2 000FDE  
                       roundf@e 004D                         roundf@u 0053                         roundf@x 0041  
                       roundf@y 0057                      ??_vfprintf 0056                         strlen@a 0003  
                       strlen@s 0001                 _initDCmotorsPWM 567C                      ??_turnLeft 0025  
__end_of_initDCmotors_parameter 4CDA                       _PORTFbits 000F8E        test_function@stop_signal 00F4  
             __end_of_turnRight 42D0                     ___fladd@grs 0010                   ___xxtofl@sign 0009  
                     _TRISAbits 000F81                       _TRISCbits 000F83                       _TRISDbits 000F84  
                     _TRISEbits 000F85                       _TRISFbits 000F86                       _TRISGbits 000F87  
                     _TRISHbits 000F88                     ___fldiv@grs 0022                     ___fldiv@rem 001B  
              fullSpeedAhead@mL 001A                fullSpeedAhead@mR 001C                      goback@buf2 0200  
                    goback@buf3 0164        color_writetoaddr@address 0004         ??_I2C_2_Master_RepStart 0002  
                    _start_move 0366                ?_Interrupts_init 0001                     ___flmul@grs 0035  
                 ?_toggle_light 0001               ?_color_read_Clear 0005                    _EUSART4RXbuf 01C8  
                  _EUSART4TXbuf 0300               ?_color_read_Green 0005                     ?_initUSART4 0001  
     sendCharSerial4@charToSend 0001                   ?_verify_color 0092           __end_of_color_display 52F0  
                    main@motorL 039B                      main@motorR 03A5     amb_light_measure@CC_amb_ave 0070  
             ??_calibrate_white 000E              ??_color_read_Clear 0007                  color_display@m 0058  
            ??_color_read_Green 0007                  detect_color@BB 007F                  detect_color@BC 007B  
                detect_color@BG 008C                  detect_color@GB 0083                  detect_color@GG 0087  
                detect_color@BR 0085                  detect_color@GR 007D                  detect_color@RB 0081  
                detect_color@RG 0079                  detect_color@RR 008A           __end_of_color_predict 5932  
                __end_of___flge 4C08                  _fullSpeedAhead 5170                     vfpfcnvrt@ap 0044  
                   vfpfcnvrt@fp 0040                     vfpfcnvrt@ll 0048                  __end_of___wmul 59AA  
                __end_of_action 30E8                     ?_read_color 000C                  __end_of_goback 2DE0  
                __end_of_roundf 26DA              turnRight@delay_135 0026              turnRight@delay_180 0028  
                __end_of_strlen 58A0             color_read_Clear@tmp 000A             start_initialization 52F0  
                   __end_of_abs 57BE                     __end_of_pad 4F30                   _TxBufWriteCnt 00FB  
             turnLeft@delay_135 0026               turnLeft@delay_180 0028                  ??_toggle_light 0002  
                ??_verify_color 0096             color_read_Green@tmp 000A                  _reverse_square 573E  
       __end_of_initDCmotorsPWM 56BE                     vfprintf@fmt 0052          __end_of_fullSpeedAhead 5204  
                      ??___flge 0009                        ??___wmul 0005                        ??_action 005E  
                      ??_goback 005C                 short_reverse@mL 0026                 short_reverse@mR 0028  
                   __pdataBANK0 00FE                     __pdataBANK1 01FA                        ??_roundf 0045  
                      ??_strlen 0003                       ___fladd@a 0005                       ___fladd@b 0001  
                      ?_LED_OFF 0001                       ___fldiv@a 0013                       ___fldiv@b 000F  
                     ___flmul@a 002C                       ___flmul@b 0028                       ___flsub@a 0015  
                     ___flsub@b 0011                   __pcstackBANK0 0060                   __pcstackBANK1 0100  
                 __pcstackBANK2 0200                   __pcstackBANK3 036C                ___aodiv@dividend 0001  
                      ?_HighISR 0001          __end_of_reverse_square 577E                       _dtoa$2910 002E  
                  ?_Timer0_init 0001                 ?_fullSpeedAhead 001A                       __pintcode 0008  
                      ?___aodiv 0001                        ?___fladd 0001                        ?___aomod 0001  
                      ?___fldiv 000F                        ?___awdiv 0007                ___aodiv@quotient 0013  
                      ?___flneg 0001                        ?___flmul 0028                        ?___flsub 0011  
                      ?___fltol 005B              test_function@color 00F3                 turnRight@i_1357 002C  
               turnRight@i_1358 002E                     _centisecond 0368                  turnLeft@i_1332 002C  
                turnLeft@i_1333 002E            I2C_2_Master_Read@ack 0003            I2C_2_Master_Read@tmp 0004  
                      ?_compare 006A                     __smallconst 0E00               _I2C_2_Master_Idle 595C  
             _I2C_2_Master_Init 5932               _I2C_2_Master_Read 563A               _I2C_2_Master_Stop 5B16  
        toggle_light@toggletime 0001                    _RxBufReadCnt 00FC        __end_of_short_burst_back 56FE  
                      ?_lroundf 0066              ?_I2C_2_Master_Idle 0001              ?_I2C_2_Master_Init 0001  
            ?_I2C_2_Master_Read 0001                   ??_setMotorPWM 0011              ?_I2C_2_Master_Stop 0001  
                     action@buf 0264        initDCmotorsPWM@PWMperiod 0001                        ?_sprintf 0060  
             _sendStringSerial4 58D4           _color_data_collection 3FAC             ??_I2C_2_Master_Idle 0001  
           ??_I2C_2_Master_Init 0001             ??_I2C_2_Master_Read 0002                  ___wmul@product 0005  
                      _LATAbits 000F79             ??_I2C_2_Master_Stop 0002                        _LATCbits 000F7B  
                      _LATDbits 000F7C                        _LATEbits 000F7D                        _LATFbits 000F7E  
                      _LATGbits 000F7F                        _LATHbits 000F80                 ?_reverse_square 0026  
                      _PIE0bits 000E29              ?_sendStringSerial4 0002                        _PIE4bits 000E2D  
                   turnRight@mL 0020                     turnRight@mR 0022                        _PIR0bits 000E33  
                      _PIR4bits 000E37                        i2u571_40 001A                        i2u571_41 0016  
              ?_initDCmotorsPWM 0001               ??_sendCharSerial4 0001                        _SSP2CON2 000EDA  
           ??_sendStringSerial4 0004                        _SSP2STAT 000ED8                     _array_index 036B  
                     _vfpfcnvrt 3DF8       __end_of_I2C_2_Master_Idle 5984            __end_of_toggle_light 367E  
     __end_of_I2C_2_Master_Init 595C       __end_of_I2C_2_Master_Read 567C               ___wmul@multiplier 0001  
                     goback@buf 0100       __end_of_I2C_2_Master_Stop 5B20                    setMotorPWM@m 000F  
   I2C_2_Master_Write@data_byte 0002            __end_of_verify_color 5280          test_function@amb_light 00F0  
                     main@white 037F               ??_color_read_Blue 0007                       _stop_move 0364  
                 detect_color@m 0071                   detect_color@w 0073                    _TxBufReadCnt 00FA  
                     _turnRight 4142                 _calibrate_white 367E       __end_of_sendStringSerial4 5904  
             _amb_light_measure 48D4   __end_of_I2C_2_Master_RepStart 5B16              color_read_Blue@tmp 000A  
           __end_of_setMotorPWM 3C44                      roundf@F527 01F0                _distance_measure 4DA4  
                  ??_initUSART4 0001              ?_amb_light_measure 006A                        __Hrparam 0000  
                    vfprintf@ap 0054                        __Lrparam 0000                      vfprintf@fp 0050  
         __end_of_fullSpeedBack 50B4                    __Lsmallconst 0E00            compare@value2compare 006C  
           ??_amb_light_measure 006C                      ?_vfpfcnvrt 0040                    ??_read_color 000E  
               ___aodiv@divisor 0009                 ___aodiv@counter 0011                      _ANSELDbits 000EA7  
                    _ANSELFbits 000EB4                     action@color 02C8                      sprintf@fmt 0062  
                      ___xxtofl 3C44                      _T0CON0bits 000FD5                      _T0CON1bits 000FD6  
            __end_of_initUSART4 5AA8                      ?_turnRight 0020                        __ptext10 5470  
                      __ptext11 54C0                        __ptext20 55B0                        __ptext12 5510  
                      __ptext21 1A42                        __ptext13 59AA                        __ptext30 26DA  
                      __ptext22 5832                        __ptext14 59CA                        __ptext31 5A2A  
                      __ptext23 1F02                        __ptext15 59EA                        __ptext40 5B16  
                      __ptext32 56BE                        __ptext24 4B04                        __ptext16 5A0A  
                      __ptext41 5B20                        __ptext33 5A4A                        __ptext25 49FC  
                      __ptext17 48D4                        __ptext50 42D0                        __ptext42 595C  
                      __ptext34 5A8A                        __ptext26 5560                        __ptext18 57F8  
                      __ptext51 573E                        __ptext43 5932                        __ptext35 4C08  
                      __ptext27 5B0C                        __ptext19 232C                        __ptext60 535E  
                      __ptext52 4FF4                        __ptext44 5ADE                        __ptext36 567C  
                      __ptext28 563A                        __ptext61 3DF8                        __ptext53 50B4  
                      __ptext45 2DE0                        __ptext37 58A0                        __ptext29 3C44  
                      __ptext70 45E8                        __ptext62 30E8                        __ptext54 5170  
                      __ptext46 33D2                        __ptext38 5A6A                        __ptext71 58D4  
                      __ptext63 4E6A                        __ptext55 3A70                        __ptext47 56FE  
                      __ptext39 5AF4                        __ptext72 5AC6                        __ptext64 586A  
                      __ptext56 5984                        __ptext48 2A74                        __ptext73 5AA8  
                      __ptext65 55F6                        __ptext57 4F30                        __ptext49 4142  
                      __ptext74 5B00                        __ptext66 4CDA                        __ptext58 5904  
                      __ptext67 5B2C                        __ptext59 541E                        __ptext68 577E  
                      __ptext69 4770       __end_of_amb_light_measure 49FC                    _SSP2CON1bits 000ED9  
                  _SSP2CON2bits 000EDA          ?_color_data_collection 005A                  turnRight@delay 0030  
        test_function@test_code 00F5                   turnLeft@delay 0030                        action@mL 00E0  
                      action@mR 00E2                      turnLeft@mL 0020                      turnLeft@mR 0022  
            __end_of_read_color 541E                        _pin_init 5A4A                      turnRight@i 002A  
                      isa$xinst 000000            distance_measure@stop 007C                      _RC4STAbits 000EE7  
                      int$flags 005F                     _SENSITIVITY 00FE                        goback@mL 0058  
                      goback@mR 005A                        _vfprintf 535E                        _turnLeft 42D0  
              ___aomod@dividend 0001         __end_of_calibrate_white 3888                      _INTCONbits 000FF2  
                   _setMotorPWM 3A70                   ?_detect_color 0071                     _PWM6CONbits 000FA4  
                   _PWM7CONbits 000FA1                        intlevel2 0000                       sprintf@ap 006C  
             ??_buggylight_init 0001                ??_fullSpeedAhead 001E                   _test_function 445E  
                     turnLeft@i 002A                reverse_square@mL 0026                reverse_square@mR 0028  
                      lroundf@x 0066        ??_initDCmotors_parameter 0005                   _short_reverse 56FE  
               ___aomod@divisor 0009                     ??_vfpfcnvrt 0046                 ___aomod@counter 0011  
              _color_click_init 58A0                        sprintf@f 006E                        sprintf@s 0060  
             _detect_color$3275 008E                      _SSP2DATPPS 000E1D                      _SSP2CLKPPS 000E1C  
            distance_measure@mL 006A              distance_measure@mR 006C                  ??_detect_color 0075  
                   ??_turnRight 0025               ?_short_burst_back 0020                   ___fladd@signs 000D  
              ??_reverse_square 002A                      _TX4STAbits 000EE8                    ___aodiv@sign 0012  
            ??_short_burst_back 0024                 _sendCharSerial4 5AC6                    ___fladd@aexp 000E  
                  ___fladd@bexp 000F                  ?_test_function 00E6                    _toggle_light 33D2  
                  ___aomod@sign 0012                    _verify_color 5204                     _roundf$3277 004F  
                   _roundf$3278 0049                   _color_display 5280                 main@stop_signal 0376  
