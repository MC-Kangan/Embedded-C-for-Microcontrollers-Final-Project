

Microchip MPLAB XC8 Assembler V2.35 build 20211206165544 
                                                                                               Sun Mar 13 14:00:52 2022

Microchip MPLAB XC8 C Compiler v2.35 (Free license) build 20211206165544 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=3
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=3
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=3
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=3
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=3
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=3
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=3
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=2
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=2
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=2
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=2
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=2
    58                           	psect	text42,global,reloc=2,class=CODE,delta=1
    59                           	psect	text43,global,reloc=2,class=CODE,delta=1
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1
    61                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=2
    62                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=2
    63                           	psect	text47,global,reloc=2,class=CODE,delta=1
    64                           	psect	text48,global,reloc=2,class=CODE,delta=1
    65                           	psect	text49,global,reloc=2,class=CODE,delta=1
    66                           	psect	text50,global,reloc=2,class=CODE,delta=1
    67                           	psect	text51,global,reloc=2,class=CODE,delta=1
    68                           	psect	text52,global,reloc=2,class=CODE,delta=1
    69                           	psect	text53,global,reloc=2,class=CODE,delta=1
    70                           	psect	text54,global,reloc=2,class=CODE,delta=1
    71                           	psect	text55,global,reloc=2,class=CODE,delta=1
    72                           	psect	text56,global,reloc=2,class=CODE,delta=1
    73                           	psect	text57,global,reloc=2,class=CODE,delta=1
    74                           	psect	text58,global,reloc=2,class=CODE,delta=1
    75                           	psect	text59,global,reloc=2,class=CODE,delta=1
    76                           	psect	text60,global,reloc=2,class=CODE,delta=1
    77                           	psect	text61,global,reloc=2,class=CODE,delta=1
    78                           	psect	text62,global,reloc=2,class=CODE,delta=1
    79                           	psect	text63,global,reloc=2,class=CODE,delta=1
    80                           	psect	text64,global,reloc=2,class=CODE,delta=1
    81                           	psect	text65,global,reloc=2,class=CODE,delta=1
    82                           	psect	text66,global,reloc=2,class=CODE,delta=1
    83                           	psect	text67,global,reloc=2,class=CODE,delta=1
    84                           	psect	text68,global,reloc=2,class=CODE,delta=1
    85                           	psect	text69,global,reloc=2,class=CODE,delta=1,group=2
    86                           	psect	text70,global,reloc=2,class=CODE,delta=1,group=2
    87                           	psect	text71,global,reloc=2,class=CODE,delta=1
    88                           	psect	text72,global,reloc=2,class=CODE,delta=1
    89                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    90                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    91                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    92                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    93                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    94                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    95  0000                     
    96                           ; Version 2.35
    97                           ; Generated 05/05/2021 GMT
    98                           ; 
    99                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
   100                           ; All rights reserved.
   101                           ; 
   102                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   103                           ; 
   104                           ; Redistribution and use in source and binary forms, with or without modification, are
   105                           ; permitted provided that the following conditions are met:
   106                           ; 
   107                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   108                           ;        conditions and the following disclaimer.
   109                           ; 
   110                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   111                           ;        of conditions and the following disclaimer in the documentation and/or other
   112                           ;        materials provided with the distribution. Publication is not required when
   113                           ;        this file is used in an embedded application.
   114                           ; 
   115                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   116                           ;        software without specific prior written permission.
   117                           ; 
   118                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   119                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   120                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   121                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   122                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   123                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   124                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   125                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   126                           ; 
   127                           ; 
   128                           ; Code-generator required, PIC18F67K40 Definitions
   129                           ; 
   130                           ; SFR Addresses
   131  0000                     
   132                           	psect	idataBANK0
   133  00561C                     __pidataBANK0:
   134                           	callstack 0
   135                           
   136                           ;initializer for _SENSITIVITY
   137  00561C  0A                 	db	10
   138                           
   139                           ;initializer for _CALIBRATION_135
   140  00561D  0A                 	db	10
   141                           
   142                           	psect	idataBANK1
   143  005620                     __pidataBANK1:
   144                           	callstack 0
   145                           
   146                           ;initializer for _CALIBRATION_180
   147  005620  14                 	db	20
   148                           
   149                           	psect	smallconst
   150  000E00                     __psmallconst:
   151                           	callstack 0
   152  000E00  00                 	db	0
   153  000E01  0000               	dw	0
   154  000E03  4B00               	dw	19200
   155  000E05                     __end_of_toint:
   156                           	callstack 0
   157  0000                     _TX4REG	set	3812
   158  0000                     _RC4STAbits	set	3815
   159  0000                     _SP4BRGH	set	3814
   160  0000                     _LATEbits	set	3965
   161  0000                     _TRISGbits	set	3975
   162  0000                     _TRISEbits	set	3973
   163  0000                     _LATGbits	set	3967
   164  0000                     _LATFbits	set	3966
   165  0000                     _TRISFbits	set	3974
   166  0000                     _SSP2CON2bits	set	3802
   167  0000                     _LATG	set	3967
   168  0000                     _LATE	set	3965
   169  0000                     _RX4PPS	set	3605
   170  0000                     _SSP2CLKPPS	set	3612
   171  0000                     _SSP2DATPPS	set	3613
   172  0000                     _ANSELDbits	set	3751
   173  0000                     _SSP2ADD	set	3798
   174  0000                     _SSP2CON1bits	set	3801
   175  0000                     _LATAbits	set	3961
   176  0000                     _LATDbits	set	3964
   177  0000                     _LATHbits	set	3968
   178  0000                     _TRISDbits	set	3972
   179  0000                     _TRISHbits	set	3976
   180  0000                     _PORTFbits	set	3982
   181  0000                     _T2PR	set	4028
   182  0000                     _T2CONbits	set	4029
   183  0000                     _PWM7DCH	set	4000
   184  0000                     _PWM6DCH	set	4003
   185  0000                     _TRISAbits	set	3969
   186  0000                     _TRISCbits	set	3971
   187  0000                     _LATCbits	set	3963
   188  0000                     _RC4REG	set	3811
   189  0000                     _SP4BRGL	set	3813
   190  0000                     _TX4STAbits	set	3816
   191  0000                     _BAUD4CONbits	set	3817
   192  0000                     _SSP2CON2	set	3802
   193  0000                     _SSP2STAT	set	3800
   194  0000                     _ANSELFbits	set	3764
   195  0000                     _SSP2BUF	set	3797
   196  0000                     _PIE0bits	set	3625
   197  0000                     _PIE4bits	set	3629
   198  0000                     _PIR4bits	set	3639
   199  0000                     _RC0PPS	set	3682
   200  0000                     _RC7PPS	set	3689
   201  0000                     _RD5PPS	set	3695
   202  0000                     _RE2PPS	set	3700
   203  0000                     _RD6PPS	set	3696
   204  0000                     _TMR0L	set	4051
   205  0000                     _TMR0H	set	4052
   206  0000                     _T0CON0bits	set	4053
   207  0000                     _T2CLKCONbits	set	4031
   208  0000                     _T2HLTbits	set	4030
   209  0000                     _PWM6CONbits	set	4004
   210  0000                     _PWM7CONbits	set	4001
   211  0000                     _PIR0bits	set	3635
   212  0000                     _T0CON1bits	set	4054
   213  0000                     _INTCONbits	set	4082
   214  000E05                     STR_1:
   215                           
   216                           ; BSR set to: 14
   217  000E05  25                 	db	37
   218  000E06  64                 	db	100	;'d'
   219  000E07  09                 	db	9
   220  000E08  25                 	db	37
   221  000E09  64                 	db	100	;'d'
   222  000E0A  09                 	db	9
   223  000E0B  25                 	db	37
   224  000E0C  64                 	db	100	;'d'
   225  000E0D  09                 	db	9
   226  000E0E  25                 	db	37
   227  000E0F  64                 	db	100	;'d'
   228  000E10  0D                 	db	13
   229  000E11  0A                 	db	10
   230  000E12  00                 	db	0
   231  000E13  00                 	db	0	; dummy byte at the end
   232  0000                     
   233                           ; #config settings
   234                           
   235                           	psect	cinit
   236  004EF6                     __pcinit:
   237                           	callstack 0
   238  004EF6                     start_initialization:
   239                           	callstack 0
   240  004EF6                     __initialization:
   241                           	callstack 0
   242                           
   243                           ; Initialize objects allocated to BANK1 (1 bytes)
   244                           ; load TBLPTR registers with __pidataBANK1
   245  004EF6  0E20               	movlw	low __pidataBANK1
   246  004EF8  6EF6               	movwf	tblptrl,c
   247  004EFA  0E56               	movlw	high __pidataBANK1
   248  004EFC  6EF7               	movwf	tblptrh,c
   249  004EFE  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   250  004F00  6EF8               	movwf	tblptru,c
   251  004F02  0009               	tblrd		*+	;fetch initializer
   252  004F04  CFF5 F1FF          	movff	tablat,__pdataBANK1
   253                           
   254                           ; Initialize objects allocated to BANK0 (2 bytes)
   255                           ; load TBLPTR registers with __pidataBANK0
   256  004F08  0E1C               	movlw	low __pidataBANK0
   257  004F0A  6EF6               	movwf	tblptrl,c
   258  004F0C  0E56               	movlw	high __pidataBANK0
   259  004F0E  6EF7               	movwf	tblptrh,c
   260  004F10  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   261  004F12  6EF8               	movwf	tblptru,c
   262  004F14  0009               	tblrd		*+	;fetch initializer
   263  004F16  CFF5 F0FE          	movff	tablat,__pdataBANK0
   264  004F1A  0009               	tblrd		*+	;fetch initializer
   265  004F1C  CFF5 F0FF          	movff	tablat,__pdataBANK0+1
   266                           
   267                           ; Clear objects allocated to BANK1 (190 bytes)
   268  004F20  EE01  F000         	lfsr	0,__pbssBANK1
   269  004F24  0EBE               	movlw	190
   270  004F26                     clear_0:
   271  004F26  6AEE               	clrf	postinc0,c
   272  004F28  06E8               	decf	wreg,f,c
   273  004F2A  E1FD               	bnz	clear_0
   274                           
   275                           ; Clear objects allocated to BANK0 (6 bytes)
   276  004F2C  0100               	movlb	0
   277  004F2E  6BFD               	clrf	(__pbssBANK0+5)& (0+255),b
   278  004F30  6BFC               	clrf	(__pbssBANK0+4)& (0+255),b
   279  004F32  6BFB               	clrf	(__pbssBANK0+3)& (0+255),b
   280  004F34  6BFA               	clrf	(__pbssBANK0+2)& (0+255),b
   281  004F36  6BF9               	clrf	(__pbssBANK0+1)& (0+255),b
   282  004F38  6BF8               	clrf	__pbssBANK0& (0+255),b
   283  004F3A                     end_of_initialization:
   284                           	callstack 0
   285  004F3A                     __end_of__initialization:
   286                           	callstack 0
   287  004F3A  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   288  004F3C  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   289  004F3E  0E00               	movlw	low (__Lsmallconst shr (0+16))
   290  004F40  6EF8               	movwf	tblptru,c
   291  004F42  0E0E               	movlw	high __Lsmallconst
   292  004F44  6EF7               	movwf	tblptrh,c
   293  004F46  0100               	movlb	0
   294  004F48  EF01  F01F         	goto	_main	;jump to C main() function
   295                           
   296                           	psect	bssBANK0
   297  0000F8                     __pbssBANK0:
   298                           	callstack 0
   299  0000F8                     _flags:
   300                           	callstack 0
   301  0000F8                     	ds	2
   302  0000FA                     _TxBufReadCnt:
   303                           	callstack 0
   304  0000FA                     	ds	1
   305  0000FB                     _TxBufWriteCnt:
   306                           	callstack 0
   307  0000FB                     	ds	1
   308  0000FC                     _RxBufReadCnt:
   309                           	callstack 0
   310  0000FC                     	ds	1
   311  0000FD                     _RxBufWriteCnt:
   312                           	callstack 0
   313  0000FD                     	ds	1
   314                           
   315                           	psect	dataBANK0
   316  0000FE                     __pdataBANK0:
   317                           	callstack 0
   318  0000FE                     _SENSITIVITY:
   319                           	callstack 0
   320  0000FE                     	ds	1
   321  0000FF                     _CALIBRATION_135:
   322                           	callstack 0
   323  0000FF                     	ds	1
   324                           
   325                           	psect	bssBANK1
   326  000100                     __pbssBANK1:
   327                           	callstack 0
   328  000100                     _EUSART4TXbuf:
   329                           	callstack 0
   330  000100                     	ds	60
   331  00013C                     _memory:
   332                           	callstack 0
   333  00013C                     	ds	40
   334  000164                     _EUSART4RXbuf:
   335                           	callstack 0
   336  000164                     	ds	20
   337  000178                     _motorR:
   338                           	callstack 0
   339  000178                     	ds	10
   340  000182                     _motorL:
   341                           	callstack 0
   342  000182                     	ds	10
   343  00018C                     roundf@F527:
   344                           	callstack 0
   345  00018C                     	ds	4
   346  000190                     _nout:
   347                           	callstack 0
   348  000190                     	ds	2
   349  000192                     _width:
   350                           	callstack 0
   351  000192                     	ds	2
   352  000194                     _prec:
   353                           	callstack 0
   354  000194                     	ds	2
   355  000196                     _stop_move:
   356                           	callstack 0
   357  000196                     	ds	2
   358  000198                     _start_move:
   359                           	callstack 0
   360  000198                     	ds	2
   361  00019A                     _second:
   362                           	callstack 0
   363  00019A                     	ds	2
   364  00019C                     _color:
   365                           	callstack 0
   366  00019C                     	ds	1
   367  00019D                     _array_index:
   368                           	callstack 0
   369  00019D                     	ds	1
   370  00019E                     _dbuf:
   371                           	callstack 0
   372  00019E                     	ds	32
   373                           
   374                           	psect	dataBANK1
   375  0001FF                     __pdataBANK1:
   376                           	callstack 0
   377  0001FF                     _CALIBRATION_180:
   378                           	callstack 0
   379  0001FF                     	ds	1
   380                           
   381                           	psect	cstackBANK1
   382  0001BE                     __pcstackBANK1:
   383                           	callstack 0
   384  0001BE                     main@amb:
   385                           	callstack 0
   386                           
   387                           ; 8 bytes @ 0x0
   388  0001BE                     	ds	8
   389  0001C6                     main@amb_light:
   390                           	callstack 0
   391                           
   392                           ; 2 bytes @ 0x8
   393  0001C6                     	ds	2
   394  0001C8                     main@stop_signal:
   395                           	callstack 0
   396                           
   397                           ; 1 bytes @ 0xA
   398  0001C8                     	ds	1
   399  0001C9                     main@rgb:
   400                           	callstack 0
   401                           
   402                           ; 8 bytes @ 0xB
   403  0001C9                     	ds	8
   404  0001D1                     main@white:
   405                           	callstack 0
   406                           
   407                           ; 26 bytes @ 0x13
   408  0001D1                     	ds	26
   409  0001EB                     main@motorL:
   410                           	callstack 0
   411                           
   412                           ; 10 bytes @ 0x2D
   413  0001EB                     	ds	10
   414  0001F5                     main@motorR:
   415                           	callstack 0
   416                           
   417                           ; 10 bytes @ 0x37
   418  0001F5                     	ds	10
   419                           
   420                           	psect	cstackBANK0
   421  000060                     __pcstackBANK0:
   422                           	callstack 0
   423  000060                     ??___fltol:
   424  000060                     ?_sprintf:
   425                           	callstack 0
   426  000060                     sprintf@s:
   427                           	callstack 0
   428                           
   429                           ; 2 bytes @ 0x0
   430  000060                     	ds	2
   431  000062                     sprintf@fmt:
   432                           	callstack 0
   433                           
   434                           ; 2 bytes @ 0x2
   435  000062                     	ds	2
   436  000064                     ___fltol@sign1:
   437                           	callstack 0
   438                           
   439                           ; 1 bytes @ 0x4
   440  000064                     	ds	1
   441  000065                     ___fltol@exp1:
   442                           	callstack 0
   443                           
   444                           ; 1 bytes @ 0x5
   445  000065                     	ds	1
   446  000066                     ?_lroundf:
   447                           	callstack 0
   448  000066                     lroundf@x:
   449                           	callstack 0
   450                           
   451                           ; 4 bytes @ 0x6
   452  000066                     	ds	4
   453  00006A                     ?_amb_light_measure:
   454                           	callstack 0
   455  00006A                     compare@lower:
   456                           	callstack 0
   457  00006A                     amb_light_measure@amb:
   458                           	callstack 0
   459  00006A                     distance_measure@mL:
   460                           	callstack 0
   461                           
   462                           ; 2 bytes @ 0xA
   463  00006A                     	ds	2
   464  00006C                     ??_amb_light_measure:
   465  00006C                     compare@value2compare:
   466                           	callstack 0
   467  00006C                     distance_measure@mR:
   468                           	callstack 0
   469  00006C                     sprintf@ap:
   470                           	callstack 0
   471                           
   472                           ; 2 bytes @ 0xC
   473  00006C                     	ds	2
   474  00006E                     compare@upper:
   475                           	callstack 0
   476  00006E                     amb_light_measure@upper_bound:
   477                           	callstack 0
   478  00006E                     distance_measure@amb_light:
   479                           	callstack 0
   480  00006E                     sprintf@f:
   481                           	callstack 0
   482                           
   483                           ; 11 bytes @ 0xE
   484  00006E                     	ds	2
   485  000070                     ??_distance_measure:
   486  000070                     compare@result:
   487                           	callstack 0
   488  000070                     amb_light_measure@CC_amb_ave:
   489                           	callstack 0
   490                           
   491                           ; 2 bytes @ 0x10
   492  000070                     	ds	1
   493  000071                     detect_color@m:
   494                           	callstack 0
   495                           
   496                           ; 2 bytes @ 0x11
   497  000071                     	ds	1
   498  000072                     amb_light_measure@CC_amb_1:
   499                           	callstack 0
   500  000072                     distance_measure@CG_amb:
   501                           	callstack 0
   502                           
   503                           ; 2 bytes @ 0x12
   504  000072                     	ds	1
   505  000073                     detect_color@w:
   506                           	callstack 0
   507                           
   508                           ; 2 bytes @ 0x13
   509  000073                     	ds	1
   510  000074                     amb_light_measure@CC_amb_2:
   511                           	callstack 0
   512  000074                     _distance_measure$3241:
   513                           	callstack 0
   514                           
   515                           ; 4 bytes @ 0x14
   516  000074                     	ds	1
   517  000075                     ??_detect_color:
   518                           
   519                           ; 1 bytes @ 0x15
   520  000075                     	ds	1
   521  000076                     amb_light_measure@CC_amb_3:
   522                           	callstack 0
   523                           
   524                           ; 2 bytes @ 0x16
   525  000076                     	ds	2
   526  000078                     distance_measure@CC_amb:
   527                           	callstack 0
   528                           
   529                           ; 2 bytes @ 0x18
   530  000078                     	ds	1
   531  000079                     detect_color@RB:
   532                           	callstack 0
   533  000079                     color_display@buf:
   534                           	callstack 0
   535  000079                     color_predict@buf:
   536                           	callstack 0
   537                           
   538                           ; 100 bytes @ 0x19
   539  000079                     	ds	1
   540  00007A                     distance_measure@threshold:
   541                           	callstack 0
   542                           
   543                           ; 2 bytes @ 0x1A
   544  00007A                     	ds	1
   545  00007B                     detect_color@GB:
   546                           	callstack 0
   547                           
   548                           ; 2 bytes @ 0x1B
   549  00007B                     	ds	1
   550  00007C                     distance_measure@stop:
   551                           	callstack 0
   552                           
   553                           ; 1 bytes @ 0x1C
   554  00007C                     	ds	1
   555  00007D                     detect_color@RG:
   556                           	callstack 0
   557                           
   558                           ; 2 bytes @ 0x1D
   559  00007D                     	ds	2
   560  00007F                     detect_color@GR:
   561                           	callstack 0
   562                           
   563                           ; 2 bytes @ 0x1F
   564  00007F                     	ds	2
   565  000081                     detect_color@GG:
   566                           	callstack 0
   567                           
   568                           ; 2 bytes @ 0x21
   569  000081                     	ds	2
   570  000083                     detect_color@RR:
   571                           	callstack 0
   572                           
   573                           ; 2 bytes @ 0x23
   574  000083                     	ds	2
   575  000085                     detect_color@BR:
   576                           	callstack 0
   577                           
   578                           ; 2 bytes @ 0x25
   579  000085                     	ds	2
   580  000087                     detect_color@BB:
   581                           	callstack 0
   582                           
   583                           ; 2 bytes @ 0x27
   584  000087                     	ds	2
   585  000089                     detect_color@BG:
   586                           	callstack 0
   587                           
   588                           ; 2 bytes @ 0x29
   589  000089                     	ds	2
   590  00008B                     detect_color@color:
   591                           	callstack 0
   592                           
   593                           ; 1 bytes @ 0x2B
   594  00008B                     	ds	1
   595  00008C                     _detect_color$3240:
   596                           	callstack 0
   597                           
   598                           ; 4 bytes @ 0x2C
   599  00008C                     	ds	4
   600  000090                     verify_color@m:
   601                           	callstack 0
   602                           
   603                           ; 2 bytes @ 0x30
   604  000090                     	ds	2
   605  000092                     verify_color@w:
   606                           	callstack 0
   607                           
   608                           ; 2 bytes @ 0x32
   609  000092                     	ds	2
   610  000094                     ??_verify_color:
   611                           
   612                           ; 1 bytes @ 0x34
   613  000094                     	ds	2
   614  000096                     verify_color@color3:
   615                           	callstack 0
   616                           
   617                           ; 2 bytes @ 0x36
   618  000096                     	ds	2
   619  000098                     verify_color@color2:
   620                           	callstack 0
   621                           
   622                           ; 2 bytes @ 0x38
   623  000098                     	ds	2
   624  00009A                     verify_color@color:
   625                           	callstack 0
   626                           
   627                           ; 1 bytes @ 0x3A
   628  00009A                     	ds	67
   629  0000DD                     color_predict@color:
   630                           	callstack 0
   631                           
   632                           ; 1 bytes @ 0x7D
   633  0000DD                     	ds	1
   634  0000DE                     color_data_collection@i:
   635                           	callstack 0
   636                           
   637                           ; 2 bytes @ 0x7E
   638  0000DE                     	ds	2
   639  0000E0                     color_data_collection@j:
   640                           	callstack 0
   641                           
   642                           ; 2 bytes @ 0x80
   643  0000E0                     	ds	2
   644  0000E2                     color_data_collection@k:
   645                           	callstack 0
   646                           
   647                           ; 2 bytes @ 0x82
   648  0000E2                     	ds	2
   649  0000E4                     color_data_collection@x:
   650                           	callstack 0
   651                           
   652                           ; 2 bytes @ 0x84
   653  0000E4                     	ds	2
   654  0000E6                     test_function@m:
   655                           	callstack 0
   656                           
   657                           ; 2 bytes @ 0x86
   658  0000E6                     	ds	2
   659  0000E8                     test_function@w:
   660                           	callstack 0
   661                           
   662                           ; 2 bytes @ 0x88
   663  0000E8                     	ds	2
   664  0000EA                     test_function@mL:
   665                           	callstack 0
   666                           
   667                           ; 2 bytes @ 0x8A
   668  0000EA                     	ds	2
   669  0000EC                     test_function@mR:
   670                           	callstack 0
   671                           
   672                           ; 2 bytes @ 0x8C
   673  0000EC                     	ds	2
   674  0000EE                     ??_test_function:
   675                           
   676                           ; 1 bytes @ 0x8E
   677  0000EE                     	ds	2
   678  0000F0                     test_function@amb_light:
   679                           	callstack 0
   680                           
   681                           ; 2 bytes @ 0x90
   682  0000F0                     	ds	2
   683  0000F2                     test_function@complete:
   684                           	callstack 0
   685                           
   686                           ; 1 bytes @ 0x92
   687  0000F2                     	ds	1
   688  0000F3                     test_function@color:
   689                           	callstack 0
   690                           
   691                           ; 1 bytes @ 0x93
   692  0000F3                     	ds	1
   693  0000F4                     test_function@stop_signal:
   694                           	callstack 0
   695                           
   696                           ; 1 bytes @ 0x94
   697  0000F4                     	ds	1
   698  0000F5                     test_function@test_code:
   699                           	callstack 0
   700                           
   701                           ; 1 bytes @ 0x95
   702  0000F5                     	ds	1
   703  0000F6                     ??_main:
   704                           
   705                           ; 1 bytes @ 0x96
   706  0000F6                     	ds	2
   707                           
   708                           	psect	cstackCOMRAM
   709  000001                     __pcstackCOMRAM:
   710                           	callstack 0
   711  000001                     ??_LED_OFF:
   712  000001                     ??_LED_R:
   713  000001                     ??_LED_C:
   714  000001                     ??_LED_B:
   715  000001                     ??_LED_G:
   716  000001                     ??_I2C_2_Master_Idle:
   717  000001                     ?_strlen:
   718                           	callstack 0
   719  000001                     ?___wmul:
   720                           	callstack 0
   721  000001                     ?___fladd:
   722                           	callstack 0
   723  000001                     ?___flneg:
   724                           	callstack 0
   725  000001                     ?___xxtofl:
   726                           	callstack 0
   727  000001                     ?___aodiv:
   728                           	callstack 0
   729  000001                     ?___aomod:
   730                           	callstack 0
   731  000001                     toggle_light@toggletime:
   732                           	callstack 0
   733  000001                     sendCharSerial4@charToSend:
   734                           	callstack 0
   735  000001                     initDCmotorsPWM@PWMperiod:
   736                           	callstack 0
   737  000001                     initDCmotors_parameter@motorL:
   738                           	callstack 0
   739  000001                     ___wmul@multiplier:
   740                           	callstack 0
   741  000001                     fputc@c:
   742                           	callstack 0
   743  000001                     strlen@s:
   744                           	callstack 0
   745  000001                     ___flge@ff1:
   746                           	callstack 0
   747  000001                     ___flneg@f1:
   748                           	callstack 0
   749  000001                     ___fladd@b:
   750                           	callstack 0
   751  000001                     ___xxtofl@val:
   752                           	callstack 0
   753  000001                     ___aodiv@dividend:
   754                           	callstack 0
   755  000001                     ___aomod@dividend:
   756                           	callstack 0
   757                           
   758                           ; 8 bytes @ 0x0
   759  000001                     	ds	1
   760  000002                     ??_I2C_2_Master_Read:
   761  000002                     ??_toggle_light:
   762  000002                     I2C_2_Master_Write@data_byte:
   763                           	callstack 0
   764  000002                     sendStringSerial4@string:
   765                           	callstack 0
   766                           
   767                           ; 2 bytes @ 0x1
   768  000002                     	ds	1
   769  000003                     color_writetoaddr@value:
   770                           	callstack 0
   771  000003                     I2C_2_Master_Read@ack:
   772                           	callstack 0
   773  000003                     initDCmotors_parameter@motorR:
   774                           	callstack 0
   775  000003                     ___wmul@multiplicand:
   776                           	callstack 0
   777  000003                     fputc@fp:
   778                           	callstack 0
   779  000003                     strlen@a:
   780                           	callstack 0
   781                           
   782                           ; 2 bytes @ 0x2
   783  000003                     	ds	1
   784  000004                     toggle_light@i:
   785                           	callstack 0
   786  000004                     color_writetoaddr@address:
   787                           	callstack 0
   788  000004                     I2C_2_Master_Read@tmp:
   789                           	callstack 0
   790                           
   791                           ; 1 bytes @ 0x3
   792  000004                     	ds	1
   793  000005                     ??_fputc:
   794  000005                     ??_color_click_init:
   795  000005                     ??___xxtofl:
   796  000005                     ?_color_read_Red:
   797                           	callstack 0
   798  000005                     ?_color_read_Blue:
   799                           	callstack 0
   800  000005                     ?_color_read_Green:
   801                           	callstack 0
   802  000005                     ?_color_read_Clear:
   803                           	callstack 0
   804  000005                     toggle_light@lightnumber:
   805                           	callstack 0
   806  000005                     ___wmul@product:
   807                           	callstack 0
   808  000005                     ___flge@ff2:
   809                           	callstack 0
   810  000005                     ___fladd@a:
   811                           	callstack 0
   812                           
   813                           ; 4 bytes @ 0x4
   814  000005                     	ds	2
   815  000007                     ??_color_read_Red:
   816  000007                     ??_color_read_Blue:
   817  000007                     ??_color_read_Green:
   818  000007                     ??_color_read_Clear:
   819  000007                     ?___awdiv:
   820                           	callstack 0
   821  000007                     ___awdiv@dividend:
   822                           	callstack 0
   823                           
   824                           ; 2 bytes @ 0x6
   825  000007                     	ds	2
   826  000009                     ??___fladd:
   827  000009                     ??___flge:
   828  000009                     ___xxtofl@sign:
   829                           	callstack 0
   830  000009                     ___awdiv@divisor:
   831                           	callstack 0
   832  000009                     ___aodiv@divisor:
   833                           	callstack 0
   834  000009                     ___aomod@divisor:
   835                           	callstack 0
   836                           
   837                           ; 8 bytes @ 0x8
   838  000009                     	ds	1
   839  00000A                     ___xxtofl@exp:
   840                           	callstack 0
   841  00000A                     color_read_Red@tmp:
   842                           	callstack 0
   843  00000A                     color_read_Blue@tmp:
   844                           	callstack 0
   845  00000A                     color_read_Green@tmp:
   846                           	callstack 0
   847  00000A                     color_read_Clear@tmp:
   848                           	callstack 0
   849  00000A                     fputs@s:
   850                           	callstack 0
   851                           
   852                           ; 2 bytes @ 0x9
   853  00000A                     	ds	1
   854  00000B                     ___awdiv@counter:
   855                           	callstack 0
   856  00000B                     ___xxtofl@arg:
   857                           	callstack 0
   858                           
   859                           ; 4 bytes @ 0xA
   860  00000B                     	ds	1
   861  00000C                     ___awdiv@sign:
   862                           	callstack 0
   863  00000C                     read_color@m:
   864                           	callstack 0
   865  00000C                     calibrate_white@w:
   866                           	callstack 0
   867  00000C                     fputs@fp:
   868                           	callstack 0
   869                           
   870                           ; 2 bytes @ 0xB
   871  00000C                     	ds	1
   872  00000D                     ___fladd@signs:
   873                           	callstack 0
   874  00000D                     ___awdiv@quotient:
   875                           	callstack 0
   876                           
   877                           ; 2 bytes @ 0xC
   878  00000D                     	ds	1
   879  00000E                     ??_calibrate_white:
   880  00000E                     ___fladd@aexp:
   881                           	callstack 0
   882  00000E                     fputs@c:
   883                           	callstack 0
   884                           
   885                           ; 1 bytes @ 0xD
   886  00000E                     	ds	1
   887  00000F                     ?___fldiv:
   888                           	callstack 0
   889  00000F                     ___fladd@bexp:
   890                           	callstack 0
   891  00000F                     setMotorPWM@m:
   892                           	callstack 0
   893  00000F                     fputs@i:
   894                           	callstack 0
   895  00000F                     ___fldiv@b:
   896                           	callstack 0
   897                           
   898                           ; 4 bytes @ 0xE
   899  00000F                     	ds	1
   900  000010                     ___fladd@grs:
   901                           	callstack 0
   902                           
   903                           ; 1 bytes @ 0xF
   904  000010                     	ds	1
   905  000011                     ??_setMotorPWM:
   906  000011                     ?_pad:
   907                           	callstack 0
   908  000011                     ?___flsub:
   909                           	callstack 0
   910  000011                     ___aodiv@counter:
   911                           	callstack 0
   912  000011                     ___aomod@counter:
   913                           	callstack 0
   914  000011                     pad@fp:
   915                           	callstack 0
   916  000011                     ___flsub@b:
   917                           	callstack 0
   918                           
   919                           ; 4 bytes @ 0x10
   920  000011                     	ds	1
   921  000012                     ___aodiv@sign:
   922                           	callstack 0
   923  000012                     ___aomod@sign:
   924                           	callstack 0
   925                           
   926                           ; 1 bytes @ 0x11
   927  000012                     	ds	1
   928  000013                     ?_abs:
   929                           	callstack 0
   930  000013                     pad@buf:
   931                           	callstack 0
   932  000013                     abs@a:
   933                           	callstack 0
   934  000013                     ___fldiv@a:
   935                           	callstack 0
   936  000013                     ___aodiv@quotient:
   937                           	callstack 0
   938                           
   939                           ; 8 bytes @ 0x12
   940  000013                     	ds	2
   941  000015                     ??_abs:
   942  000015                     pad@p:
   943                           	callstack 0
   944  000015                     ___flsub@a:
   945                           	callstack 0
   946                           
   947                           ; 4 bytes @ 0x14
   948  000015                     	ds	2
   949  000017                     ??___fldiv:
   950  000017                     ??_pad:
   951                           
   952                           ; 1 bytes @ 0x16
   953  000017                     	ds	1
   954  000018                     setMotorPWM@PWMduty:
   955                           	callstack 0
   956  000018                     pad@i:
   957                           	callstack 0
   958                           
   959                           ; 2 bytes @ 0x17
   960  000018                     	ds	1
   961  000019                     
   962                           ; 1 bytes @ 0x18
   963  000019                     	ds	1
   964  00001A                     stop@mL:
   965                           	callstack 0
   966  00001A                     fullSpeedAhead@mL:
   967                           	callstack 0
   968  00001A                     pad@w:
   969                           	callstack 0
   970                           
   971                           ; 2 bytes @ 0x19
   972  00001A                     	ds	1
   973  00001B                     ___fldiv@rem:
   974                           	callstack 0
   975                           
   976                           ; 4 bytes @ 0x1A
   977  00001B                     	ds	1
   978  00001C                     ?_dtoa:
   979                           	callstack 0
   980  00001C                     stop@mR:
   981                           	callstack 0
   982  00001C                     fullSpeedAhead@mR:
   983                           	callstack 0
   984  00001C                     dtoa@fp:
   985                           	callstack 0
   986                           
   987                           ; 2 bytes @ 0x1B
   988  00001C                     	ds	2
   989  00001E                     ??_stop:
   990  00001E                     ??_fullSpeedAhead:
   991  00001E                     dtoa@d:
   992                           	callstack 0
   993                           
   994                           ; 8 bytes @ 0x1D
   995  00001E                     	ds	1
   996  00001F                     ___fldiv@sign:
   997                           	callstack 0
   998                           
   999                           ; 1 bytes @ 0x1E
  1000  00001F                     	ds	1
  1001  000020                     turnLeft@mL:
  1002                           	callstack 0
  1003  000020                     turnRight@mL:
  1004                           	callstack 0
  1005  000020                     fullSpeedBack@mL:
  1006                           	callstack 0
  1007  000020                     ___fldiv@new_exp:
  1008                           	callstack 0
  1009                           
  1010                           ; 2 bytes @ 0x1F
  1011  000020                     	ds	2
  1012  000022                     turnLeft@mR:
  1013                           	callstack 0
  1014  000022                     turnRight@mR:
  1015                           	callstack 0
  1016  000022                     fullSpeedBack@mR:
  1017                           	callstack 0
  1018  000022                     ___fldiv@grs:
  1019                           	callstack 0
  1020                           
  1021                           ; 4 bytes @ 0x21
  1022  000022                     	ds	2
  1023  000024                     ??_fullSpeedBack:
  1024  000024                     turnLeft@angle_left:
  1025                           	callstack 0
  1026  000024                     turnRight@angle_right:
  1027                           	callstack 0
  1028                           
  1029                           ; 1 bytes @ 0x23
  1030  000024                     	ds	1
  1031  000025                     ??_turnLeft:
  1032  000025                     ??_turnRight:
  1033                           
  1034                           ; 1 bytes @ 0x24
  1035  000025                     	ds	1
  1036  000026                     ??_dtoa:
  1037  000026                     ___fldiv@bexp:
  1038                           	callstack 0
  1039  000026                     turnLeft@delay_135:
  1040                           	callstack 0
  1041  000026                     turnRight@delay_135:
  1042                           	callstack 0
  1043  000026                     short_reverse@mL:
  1044                           	callstack 0
  1045  000026                     reverse_square@mL:
  1046                           	callstack 0
  1047                           
  1048                           ; 2 bytes @ 0x25
  1049  000026                     	ds	1
  1050  000027                     ___fldiv@aexp:
  1051                           	callstack 0
  1052                           
  1053                           ; 1 bytes @ 0x26
  1054  000027                     	ds	1
  1055  000028                     ?___flmul:
  1056                           	callstack 0
  1057  000028                     turnLeft@delay_180:
  1058                           	callstack 0
  1059  000028                     turnRight@delay_180:
  1060                           	callstack 0
  1061  000028                     short_reverse@mR:
  1062                           	callstack 0
  1063  000028                     reverse_square@mR:
  1064                           	callstack 0
  1065  000028                     ___flmul@b:
  1066                           	callstack 0
  1067                           
  1068                           ; 4 bytes @ 0x27
  1069  000028                     	ds	2
  1070  00002A                     ??_short_reverse:
  1071  00002A                     ??_reverse_square:
  1072  00002A                     turnLeft@i:
  1073                           	callstack 0
  1074  00002A                     turnRight@i:
  1075                           	callstack 0
  1076                           
  1077                           ; 2 bytes @ 0x29
  1078  00002A                     	ds	2
  1079  00002C                     turnLeft@i_1332:
  1080                           	callstack 0
  1081  00002C                     turnRight@i_1357:
  1082                           	callstack 0
  1083  00002C                     ___flmul@a:
  1084                           	callstack 0
  1085                           
  1086                           ; 4 bytes @ 0x2B
  1087  00002C                     	ds	2
  1088  00002E                     turnLeft@i_1333:
  1089                           	callstack 0
  1090  00002E                     turnRight@i_1358:
  1091                           	callstack 0
  1092  00002E                     _dtoa$2872:
  1093                           	callstack 0
  1094                           
  1095                           ; 2 bytes @ 0x2D
  1096  00002E                     	ds	2
  1097  000030                     ??___flmul:
  1098  000030                     turnLeft@delay:
  1099                           	callstack 0
  1100  000030                     turnRight@delay:
  1101                           	callstack 0
  1102  000030                     dtoa@p:
  1103                           	callstack 0
  1104                           
  1105                           ; 2 bytes @ 0x2F
  1106  000030                     	ds	2
  1107  000032                     action@mL:
  1108                           	callstack 0
  1109  000032                     dtoa@w:
  1110                           	callstack 0
  1111                           
  1112                           ; 2 bytes @ 0x31
  1113  000032                     	ds	2
  1114  000034                     ___flmul@sign:
  1115                           	callstack 0
  1116  000034                     action@mR:
  1117                           	callstack 0
  1118  000034                     dtoa@s:
  1119                           	callstack 0
  1120                           
  1121                           ; 2 bytes @ 0x33
  1122  000034                     	ds	1
  1123  000035                     ___flmul@grs:
  1124                           	callstack 0
  1125                           
  1126                           ; 4 bytes @ 0x34
  1127  000035                     	ds	1
  1128  000036                     action@color:
  1129                           	callstack 0
  1130  000036                     dtoa@n:
  1131                           	callstack 0
  1132                           
  1133                           ; 8 bytes @ 0x35
  1134  000036                     	ds	3
  1135  000039                     ___flmul@aexp:
  1136                           	callstack 0
  1137                           
  1138                           ; 1 bytes @ 0x38
  1139  000039                     	ds	1
  1140  00003A                     ___flmul@bexp:
  1141                           	callstack 0
  1142                           
  1143                           ; 1 bytes @ 0x39
  1144  00003A                     	ds	1
  1145  00003B                     ___flmul@prod:
  1146                           	callstack 0
  1147                           
  1148                           ; 4 bytes @ 0x3A
  1149  00003B                     	ds	3
  1150  00003E                     dtoa@i:
  1151                           	callstack 0
  1152                           
  1153                           ; 2 bytes @ 0x3D
  1154  00003E                     	ds	1
  1155  00003F                     ___flmul@temp:
  1156                           	callstack 0
  1157                           
  1158                           ; 2 bytes @ 0x3E
  1159  00003F                     	ds	1
  1160  000040                     ?_vfpfcnvrt:
  1161                           	callstack 0
  1162  000040                     vfpfcnvrt@fp:
  1163                           	callstack 0
  1164                           
  1165                           ; 2 bytes @ 0x3F
  1166  000040                     	ds	1
  1167  000041                     ?_roundf:
  1168                           	callstack 0
  1169  000041                     roundf@x:
  1170                           	callstack 0
  1171                           
  1172                           ; 4 bytes @ 0x40
  1173  000041                     	ds	1
  1174  000042                     vfpfcnvrt@fmt:
  1175                           	callstack 0
  1176                           
  1177                           ; 2 bytes @ 0x41
  1178  000042                     	ds	2
  1179  000044                     vfpfcnvrt@ap:
  1180                           	callstack 0
  1181                           
  1182                           ; 2 bytes @ 0x43
  1183  000044                     	ds	1
  1184  000045                     ??_roundf:
  1185                           
  1186                           ; 1 bytes @ 0x44
  1187  000045                     	ds	1
  1188  000046                     ??_vfpfcnvrt:
  1189                           
  1190                           ; 1 bytes @ 0x45
  1191  000046                     	ds	2
  1192  000048                     vfpfcnvrt@ll:
  1193                           	callstack 0
  1194                           
  1195                           ; 8 bytes @ 0x47
  1196  000048                     	ds	1
  1197  000049                     _roundf$3243:
  1198                           	callstack 0
  1199                           
  1200                           ; 4 bytes @ 0x48
  1201  000049                     	ds	4
  1202  00004D                     roundf@e:
  1203                           	callstack 0
  1204                           
  1205                           ; 2 bytes @ 0x4C
  1206  00004D                     	ds	2
  1207  00004F                     _roundf$3242:
  1208                           	callstack 0
  1209                           
  1210                           ; 4 bytes @ 0x4E
  1211  00004F                     	ds	1
  1212  000050                     ?_vfprintf:
  1213                           	callstack 0
  1214  000050                     vfprintf@fp:
  1215                           	callstack 0
  1216                           
  1217                           ; 2 bytes @ 0x4F
  1218  000050                     	ds	2
  1219  000052                     vfprintf@fmt:
  1220                           	callstack 0
  1221                           
  1222                           ; 2 bytes @ 0x51
  1223  000052                     	ds	1
  1224  000053                     roundf@u:
  1225                           	callstack 0
  1226                           
  1227                           ; 4 bytes @ 0x52
  1228  000053                     	ds	1
  1229  000054                     vfprintf@ap:
  1230                           	callstack 0
  1231                           
  1232                           ; 2 bytes @ 0x53
  1233  000054                     	ds	2
  1234  000056                     vfprintf@cfmt:
  1235                           	callstack 0
  1236                           
  1237                           ; 2 bytes @ 0x55
  1238  000056                     	ds	1
  1239  000057                     roundf@y:
  1240                           	callstack 0
  1241                           
  1242                           ; 4 bytes @ 0x56
  1243  000057                     	ds	1
  1244  000058                     color_display@m:
  1245                           	callstack 0
  1246                           
  1247                           ; 2 bytes @ 0x57
  1248  000058                     	ds	2
  1249  00005A                     color_data_collection@m:
  1250                           	callstack 0
  1251                           
  1252                           ; 2 bytes @ 0x59
  1253  00005A                     	ds	1
  1254  00005B                     ?___fltol:
  1255                           	callstack 0
  1256  00005B                     ___fltol@f1:
  1257                           	callstack 0
  1258                           
  1259                           ; 4 bytes @ 0x5A
  1260  00005B                     	ds	1
  1261  00005C                     ??_color_data_collection:
  1262                           
  1263                           ; 1 bytes @ 0x5B
  1264  00005C                     	ds	3
  1265  00005F                     
  1266                           ; 1 bytes @ 0x5E
  1267 ;;
  1268 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1269 ;;
  1270 ;; *************** function _main *****************
  1271 ;; Defined at:
  1272 ;;		line 27 in file "main.c"
  1273 ;; Parameters:    Size  Location     Type
  1274 ;;		None
  1275 ;; Auto vars:     Size  Location     Type
  1276 ;;  white          26   19[BANK1 ] struct white_card
  1277 ;;  motorR         10   55[BANK1 ] struct DC_motor
  1278 ;;  motorL         10   45[BANK1 ] struct DC_motor
  1279 ;;  rgb             8   11[BANK1 ] struct color_rgb
  1280 ;;  amb             8    0[BANK1 ] struct color_rgb
  1281 ;;  amb_light       2    8[BANK1 ] unsigned int 
  1282 ;;  stop_signal     1   10[BANK1 ] unsigned char 
  1283 ;; Return value:  Size  Location     Type
  1284 ;;                  1    wreg      void 
  1285 ;; Registers used:
  1286 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1287 ;; Tracked objects:
  1288 ;;		On entry : 0/0
  1289 ;;		On exit  : 0/0
  1290 ;;		Unchanged: 0/0
  1291 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1292 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1293 ;;      Locals:         0       0      65       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1294 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1295 ;;      Totals:         0       2      65       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1296 ;;Total ram usage:       67 bytes
  1297 ;; Hardware stack levels required when called: 12
  1298 ;; This function calls:
  1299 ;;		_I2C_2_Master_Init
  1300 ;;		_Interrupts_init
  1301 ;;		_Timer0_init
  1302 ;;		_action
  1303 ;;		_amb_light_measure
  1304 ;;		_buggylight_init
  1305 ;;		_calibrate_white
  1306 ;;		_color_click_init
  1307 ;;		_detect_color
  1308 ;;		_distance_measure
  1309 ;;		_fullSpeedAhead
  1310 ;;		_initDCmotorsPWM
  1311 ;;		_initDCmotors_parameter
  1312 ;;		_initUSART4
  1313 ;;		_pin_init
  1314 ;;		_stop
  1315 ;;		_test_function
  1316 ;;		_verify_color
  1317 ;; This function is called by:
  1318 ;;		Startup code after reset
  1319 ;; This function uses a non-reentrant model
  1320 ;;
  1321                           
  1322                           	psect	text0
  1323  003E02                     __ptext0:
  1324                           	callstack 0
  1325  003E02                     _main:
  1326                           	callstack 19
  1327  003E02                     
  1328                           ;main.c: 30:     I2C_2_Master_Init();
  1329  003E02  EC12  F02A         	call	_I2C_2_Master_Init	;wreg free
  1330  003E06                     
  1331                           ;main.c: 31:     color_click_init();
  1332  003E06  ECC9  F029         	call	_color_click_init	;wreg free
  1333  003E0A                     
  1334                           ;main.c: 32:     initDCmotorsPWM(199);
  1335  003E0A  0E00               	movlw	0
  1336  003E0C  6E02               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
  1337  003E0E  0EC7               	movlw	199
  1338  003E10  6E01               	movwf	initDCmotorsPWM@PWMperiod^0,c
  1339  003E12  ECD5  F028         	call	_initDCmotorsPWM	;wreg free
  1340  003E16                     
  1341                           ;main.c: 33:     buggylight_init();
  1342  003E16  ECE8  F02A         	call	_buggylight_init	;wreg free
  1343  003E1A                     
  1344                           ;main.c: 34:     initUSART4();
  1345  003E1A  ECBE  F02A         	call	_initUSART4	;wreg free
  1346  003E1E                     
  1347                           ;main.c: 35:     Timer0_init();
  1348  003E1E  ECCD  F02A         	call	_Timer0_init	;wreg free
  1349  003E22                     
  1350                           ;main.c: 36:     Interrupts_init();
  1351  003E22  ECF9  F02A         	call	_Interrupts_init	;wreg free
  1352  003E26                     
  1353                           ;main.c: 38:     struct color_rgb rgb, amb;;main.c: 39:     struct white_card white;;mai
      +                          n.c: 43:     struct DC_motor motorL, motorR;;main.c: 44:     pin_init();
  1354  003E26  EC9E  F02A         	call	_pin_init	;wreg free
  1355  003E2A                     
  1356                           ;main.c: 45:     initDCmotors_parameter(&motorL, &motorR);
  1357  003E2A  0EEB               	movlw	low main@motorL
  1358  003E2C  6E01               	movwf	initDCmotors_parameter@motorL^0,c
  1359  003E2E  0E01               	movlw	high main@motorL
  1360  003E30  6E02               	movwf	(initDCmotors_parameter@motorL+1)^0,c
  1361  003E32  0EF5               	movlw	low main@motorR
  1362  003E34  6E03               	movwf	initDCmotors_parameter@motorR^0,c
  1363  003E36  0E01               	movlw	high main@motorR
  1364  003E38  6E04               	movwf	(initDCmotors_parameter@motorR+1)^0,c
  1365  003E3A  EC8D  F023         	call	_initDCmotors_parameter	;wreg free
  1366  003E3E                     
  1367                           ;main.c: 47:     unsigned char stop_signal = 0;
  1368  003E3E  0E00               	movlw	0
  1369  003E40  0101               	movlb	1	; () banked
  1370  003E42  6FC8               	movwf	main@stop_signal& (0+255),b
  1371  003E44                     
  1372                           ; BSR set to: 1
  1373                           ;main.c: 52:         calibrate_white(&white);
  1374  003E44  0ED1               	movlw	low main@white
  1375  003E46  6E0C               	movwf	calibrate_white@w^0,c
  1376  003E48  0E01               	movlw	high main@white
  1377  003E4A  6E0D               	movwf	(calibrate_white@w+1)^0,c
  1378  003E4C  EC06  F019         	call	_calibrate_white	;wreg free
  1379  003E50                     
  1380                           ;main.c: 53:         amb_light = amb_light_measure(&amb);
  1381  003E50  0EBE               	movlw	low main@amb
  1382  003E52  0100               	movlb	0	; () banked
  1383  003E54  6F6A               	movwf	amb_light_measure@amb& (0+255),b
  1384  003E56  0E01               	movlw	high main@amb
  1385  003E58  6F6B               	movwf	(amb_light_measure@amb+1)& (0+255),b
  1386  003E5A  ECF3  F021         	call	_amb_light_measure	;wreg free
  1387  003E5E  C06A  F1C6         	movff	?_amb_light_measure,main@amb_light
  1388  003E62  C06B  F1C7         	movff	?_amb_light_measure+1,main@amb_light+1
  1389  003E66                     l5460:
  1390                           
  1391                           ;main.c: 64:             T0CON0bits.T0EN=1;
  1392  003E66  8ED5               	bsf	213,7,c	;volatile
  1393  003E68                     
  1394                           ;main.c: 65:             start_move = second;
  1395  003E68  C19A  F198         	movff	_second,_start_move
  1396  003E6C  C19B  F199         	movff	_second+1,_start_move+1
  1397                           
  1398                           ;main.c: 66:             while (stop_signal == 0){
  1399  003E70  EF55  F01F         	goto	l5468
  1400  003E74                     l5464:
  1401                           
  1402                           ; BSR set to: 1
  1403                           ;main.c: 67:                 fullSpeedAhead(&motorL, &motorR);
  1404  003E74  0EEB               	movlw	low main@motorL
  1405  003E76  6E1A               	movwf	fullSpeedAhead@mL^0,c
  1406  003E78  0E01               	movlw	high main@motorL
  1407  003E7A  6E1B               	movwf	(fullSpeedAhead@mL+1)^0,c
  1408  003E7C  0EF5               	movlw	low main@motorR
  1409  003E7E  6E1C               	movwf	fullSpeedAhead@mR^0,c
  1410  003E80  0E01               	movlw	high main@motorR
  1411  003E82  6E1D               	movwf	(fullSpeedAhead@mR+1)^0,c
  1412  003E84  EC99  F026         	call	_fullSpeedAhead	;wreg free
  1413  003E88                     
  1414                           ;main.c: 68:                 stop_signal = distance_measure(&motorL, &motorR, amb_light)
      +                          ;
  1415  003E88  0EEB               	movlw	low main@motorL
  1416  003E8A  0100               	movlb	0	; () banked
  1417  003E8C  6F6A               	movwf	distance_measure@mL& (0+255),b
  1418  003E8E  0E01               	movlw	high main@motorL
  1419  003E90  6F6B               	movwf	(distance_measure@mL+1)& (0+255),b
  1420  003E92  0EF5               	movlw	low main@motorR
  1421  003E94  6F6C               	movwf	distance_measure@mR& (0+255),b
  1422  003E96  0E01               	movlw	high main@motorR
  1423  003E98  6F6D               	movwf	(distance_measure@mR+1)& (0+255),b
  1424  003E9A  C1C6  F06E         	movff	main@amb_light,distance_measure@amb_light
  1425  003E9E  C1C7  F06F         	movff	main@amb_light+1,distance_measure@amb_light+1
  1426  003EA2  EC5B  F024         	call	_distance_measure	;wreg free
  1427  003EA6  0101               	movlb	1	; () banked
  1428  003EA8  6FC8               	movwf	main@stop_signal& (0+255),b
  1429  003EAA                     l5468:
  1430                           
  1431                           ;main.c: 66:             while (stop_signal == 0){
  1432  003EAA  0101               	movlb	1	; () banked
  1433  003EAC  51C8               	movf	main@stop_signal& (0+255),w,b
  1434  003EAE  B4D8               	btfsc	status,2,c
  1435  003EB0  EF5C  F01F         	goto	u5541
  1436  003EB4  EF5E  F01F         	goto	u5540
  1437  003EB8                     u5541:
  1438  003EB8  EF3A  F01F         	goto	l5464
  1439  003EBC                     u5540:
  1440  003EBC                     
  1441                           ; BSR set to: 1
  1442                           ;main.c: 70:             T0CON0bits.T0EN=0;
  1443  003EBC  9ED5               	bcf	213,7,c	;volatile
  1444                           
  1445                           ;main.c: 71:             stop_move = second;
  1446  003EBE  C19A  F196         	movff	_second,_stop_move
  1447  003EC2  C19B  F197         	movff	_second+1,_stop_move+1
  1448  003EC6                     
  1449                           ; BSR set to: 1
  1450                           ;main.c: 72:             memory[array_index] = (start_move-stop_move);
  1451  003EC6  5196               	movf	_stop_move& (0+255),w,b
  1452  003EC8  5D98               	subwf	_start_move& (0+255),w,b
  1453  003ECA  0100               	movlb	0	; () banked
  1454  003ECC  6FF6               	movwf	??_main& (0+255),b
  1455  003ECE  0101               	movlb	1	; () banked
  1456  003ED0  5197               	movf	(_stop_move+1)& (0+255),w,b
  1457  003ED2  5999               	subwfb	(_start_move+1)& (0+255),w,b
  1458  003ED4  0100               	movlb	0	; () banked
  1459  003ED6  6FF7               	movwf	(??_main+1)& (0+255),b
  1460  003ED8  0101               	movlb	1	; () banked
  1461  003EDA  519D               	movf	_array_index& (0+255),w,b
  1462  003EDC  0D02               	mullw	2
  1463  003EDE  0E3C               	movlw	low _memory
  1464  003EE0  24F3               	addwf	243,w,c
  1465  003EE2  6ED9               	movwf	fsr2l,c
  1466  003EE4  0E01               	movlw	high _memory
  1467  003EE6  20F4               	addwfc	prodh,w,c
  1468  003EE8  6EDA               	movwf	fsr2h,c
  1469  003EEA  C0F6  FFDE         	movff	??_main,postinc2
  1470  003EEE  C0F7  FFDD         	movff	??_main+1,postdec2
  1471  003EF2                     
  1472                           ; BSR set to: 1
  1473                           ;main.c: 73:             array_index++;
  1474  003EF2  2B9D               	incf	_array_index& (0+255),f,b
  1475  003EF4                     
  1476                           ; BSR set to: 1
  1477                           ;main.c: 75:             stop(&motorL, &motorR);
  1478  003EF4  0EEB               	movlw	low main@motorL
  1479  003EF6  6E1A               	movwf	stop@mL^0,c
  1480  003EF8  0E01               	movlw	high main@motorL
  1481  003EFA  6E1B               	movwf	(stop@mL+1)^0,c
  1482  003EFC  0EF5               	movlw	low main@motorR
  1483  003EFE  6E1C               	movwf	stop@mR^0,c
  1484  003F00  0E01               	movlw	high main@motorR
  1485  003F02  6E1D               	movwf	(stop@mR+1)^0,c
  1486  003F04  ECE3  F025         	call	_stop	;wreg free
  1487  003F08                     
  1488                           ;main.c: 76:             _delay((unsigned long)((1000)*(64000000/4000.0)));
  1489  003F08  0E52               	movlw	82
  1490  003F0A  0100               	movlb	0	; () banked
  1491  003F0C  6FF7               	movwf	(??_main+1)& (0+255),b
  1492  003F0E  0E2B               	movlw	43
  1493  003F10  6FF6               	movwf	??_main& (0+255),b
  1494  003F12  0E00               	movlw	0
  1495  003F14                     u5727:
  1496  003F14  2EE8               	decfsz	wreg,f,c
  1497  003F16  D7FE               	bra	u5727
  1498  003F18  2FF6               	decfsz	??_main& (0+255),f,b
  1499  003F1A  D7FC               	bra	u5727
  1500  003F1C  2FF7               	decfsz	(??_main+1)& (0+255),f,b
  1501  003F1E  D7FA               	bra	u5727
  1502  003F20  F000               	nop	
  1503  003F22                     
  1504                           ;main.c: 77:             color = detect_color(&rgb, &white);
  1505  003F22  0EC9               	movlw	low main@rgb
  1506  003F24  0100               	movlb	0	; () banked
  1507  003F26  6F71               	movwf	detect_color@m& (0+255),b
  1508  003F28  0E01               	movlw	high main@rgb
  1509  003F2A  6F72               	movwf	(detect_color@m+1)& (0+255),b
  1510  003F2C  0ED1               	movlw	low main@white
  1511  003F2E  6F73               	movwf	detect_color@w& (0+255),b
  1512  003F30  0E01               	movlw	high main@white
  1513  003F32  6F74               	movwf	(detect_color@w+1)& (0+255),b
  1514  003F34  EC0A  F007         	call	_detect_color	;wreg free
  1515  003F38  0101               	movlb	1	; () banked
  1516  003F3A  6F9C               	movwf	_color& (0+255),b
  1517  003F3C                     
  1518                           ; BSR set to: 1
  1519                           ;main.c: 78:             color = verify_color(color, &rgb, &white);
  1520  003F3C  0EC9               	movlw	low main@rgb
  1521  003F3E  0100               	movlb	0	; () banked
  1522  003F40  6F90               	movwf	verify_color@m& (0+255),b
  1523  003F42  0E01               	movlw	high main@rgb
  1524  003F44  6F91               	movwf	(verify_color@m+1)& (0+255),b
  1525  003F46  0ED1               	movlw	low main@white
  1526  003F48  6F92               	movwf	verify_color@w& (0+255),b
  1527  003F4A  0E01               	movlw	high main@white
  1528  003F4C  6F93               	movwf	(verify_color@w+1)& (0+255),b
  1529  003F4E  0101               	movlb	1	; () banked
  1530  003F50  519C               	movf	_color& (0+255),w,b
  1531  003F52  EC41  F026         	call	_verify_color
  1532  003F56  0101               	movlb	1	; () banked
  1533  003F58  6F9C               	movwf	_color& (0+255),b
  1534  003F5A                     
  1535                           ; BSR set to: 1
  1536                           ;main.c: 79:             action(color, &motorL, &motorR);
  1537  003F5A  0EEB               	movlw	low main@motorL
  1538  003F5C  6E32               	movwf	action@mL^0,c
  1539  003F5E  0E01               	movlw	high main@motorL
  1540  003F60  6E33               	movwf	(action@mL+1)^0,c
  1541  003F62  0EF5               	movlw	low main@motorR
  1542  003F64  6E34               	movwf	action@mR^0,c
  1543  003F66  0E01               	movlw	high main@motorR
  1544  003F68  6E35               	movwf	(action@mR+1)^0,c
  1545  003F6A  519C               	movf	_color& (0+255),w,b
  1546  003F6C  EC48  F016         	call	_action
  1547  003F70                     
  1548                           ;main.c: 80:             color = 0;
  1549  003F70  0E00               	movlw	0
  1550  003F72  0101               	movlb	1	; () banked
  1551  003F74  6F9C               	movwf	_color& (0+255),b
  1552  003F76                     
  1553                           ; BSR set to: 1
  1554                           ;main.c: 81:             stop_signal = 0;
  1555  003F76  0E00               	movlw	0
  1556  003F78  6FC8               	movwf	main@stop_signal& (0+255),b
  1557  003F7A  EF33  F01F         	goto	l5460
  1558  003F7E  EF14  F000         	goto	start
  1559  003F82                     __end_of_main:
  1560                           	callstack 0
  1561                           
  1562 ;; *************** function _verify_color *****************
  1563 ;; Defined at:
  1564 ;;		line 359 in file "color.c"
  1565 ;; Parameters:    Size  Location     Type
  1566 ;;  color           1    wreg     unsigned char 
  1567 ;;  m               2   48[BANK0 ] PTR struct color_rgb
  1568 ;;		 -> main@rgb(8), 
  1569 ;;  w               2   50[BANK0 ] PTR struct white_card
  1570 ;;		 -> main@white(26), 
  1571 ;; Auto vars:     Size  Location     Type
  1572 ;;  color           1   58[BANK0 ] unsigned char 
  1573 ;;  color2          2   56[BANK0 ] unsigned int 
  1574 ;;  color3          2   54[BANK0 ] unsigned int 
  1575 ;; Return value:  Size  Location     Type
  1576 ;;                  1    wreg      unsigned char 
  1577 ;; Registers used:
  1578 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1579 ;; Tracked objects:
  1580 ;;		On entry : 0/0
  1581 ;;		On exit  : 0/0
  1582 ;;		Unchanged: 0/0
  1583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1584 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1585 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1586 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1587 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1588 ;;Total ram usage:       11 bytes
  1589 ;; Hardware stack levels used: 1
  1590 ;; Hardware stack levels required when called: 6
  1591 ;; This function calls:
  1592 ;;		_detect_color
  1593 ;; This function is called by:
  1594 ;;		_main
  1595 ;; This function uses a non-reentrant model
  1596 ;;
  1597                           
  1598                           	psect	text1
  1599  004C82                     __ptext1:
  1600                           	callstack 0
  1601  004C82                     _verify_color:
  1602                           	callstack 24
  1603                           
  1604                           ; BSR set to: 1
  1605                           ;incstack = 0
  1606                           ;verify_color@color stored from wreg
  1607  004C82  0100               	movlb	0	; () banked
  1608  004C84  6F9A               	movwf	verify_color@color& (0+255),b
  1609  004C86                     
  1610                           ;color.c: 359: unsigned char verify_color(unsigned char color,struct color_rgb *m, struc
      +                          t white_card *w);color.c: 360: {;color.c: 361:     _delay((unsigned long)((50)*(64000000
      +                          /4000.0)));
  1611  004C86  0E05               	movlw	5
  1612  004C88  0100               	movlb	0	; () banked
  1613  004C8A  6F95               	movwf	(??_verify_color+1)& (0+255),b
  1614  004C8C  0E0F               	movlw	15
  1615  004C8E  6F94               	movwf	??_verify_color& (0+255),b
  1616  004C90  0EF1               	movlw	241
  1617  004C92                     u5737:
  1618  004C92  2EE8               	decfsz	wreg,f,c
  1619  004C94  D7FE               	bra	u5737
  1620  004C96  2F94               	decfsz	??_verify_color& (0+255),f,b
  1621  004C98  D7FC               	bra	u5737
  1622  004C9A  2F95               	decfsz	(??_verify_color+1)& (0+255),f,b
  1623  004C9C  D7FA               	bra	u5737
  1624  004C9E                     
  1625                           ;color.c: 362:     unsigned int color2, color3;;color.c: 363:     color2 = detect_color(
      +                          m,w);
  1626  004C9E  C090  F071         	movff	verify_color@m,detect_color@m
  1627  004CA2  C091  F072         	movff	verify_color@m+1,detect_color@m+1
  1628  004CA6  C092  F073         	movff	verify_color@w,detect_color@w
  1629  004CAA  C093  F074         	movff	verify_color@w+1,detect_color@w+1
  1630  004CAE  EC0A  F007         	call	_detect_color	;wreg free
  1631  004CB2  0100               	movlb	0	; () banked
  1632  004CB4  6F94               	movwf	??_verify_color& (0+255),b
  1633  004CB6  5194               	movf	??_verify_color& (0+255),w,b
  1634  004CB8  6F98               	movwf	verify_color@color2& (0+255),b
  1635  004CBA  6B99               	clrf	(verify_color@color2+1)& (0+255),b
  1636  004CBC                     
  1637                           ; BSR set to: 0
  1638                           ;color.c: 364:     _delay((unsigned long)((50)*(64000000/4000.0)));
  1639  004CBC  0E05               	movlw	5
  1640  004CBE  0100               	movlb	0	; () banked
  1641  004CC0  6F95               	movwf	(??_verify_color+1)& (0+255),b
  1642  004CC2  0E0F               	movlw	15
  1643  004CC4  6F94               	movwf	??_verify_color& (0+255),b
  1644  004CC6  0EF1               	movlw	241
  1645  004CC8                     u5747:
  1646  004CC8  2EE8               	decfsz	wreg,f,c
  1647  004CCA  D7FE               	bra	u5747
  1648  004CCC  2F94               	decfsz	??_verify_color& (0+255),f,b
  1649  004CCE  D7FC               	bra	u5747
  1650  004CD0  2F95               	decfsz	(??_verify_color+1)& (0+255),f,b
  1651  004CD2  D7FA               	bra	u5747
  1652  004CD4                     
  1653                           ;color.c: 365:     color3 = detect_color(m,w);
  1654  004CD4  C090  F071         	movff	verify_color@m,detect_color@m
  1655  004CD8  C091  F072         	movff	verify_color@m+1,detect_color@m+1
  1656  004CDC  C092  F073         	movff	verify_color@w,detect_color@w
  1657  004CE0  C093  F074         	movff	verify_color@w+1,detect_color@w+1
  1658  004CE4  EC0A  F007         	call	_detect_color	;wreg free
  1659  004CE8  0100               	movlb	0	; () banked
  1660  004CEA  6F94               	movwf	??_verify_color& (0+255),b
  1661  004CEC  5194               	movf	??_verify_color& (0+255),w,b
  1662  004CEE  6F96               	movwf	verify_color@color3& (0+255),b
  1663  004CF0  6B97               	clrf	(verify_color@color3+1)& (0+255),b
  1664  004CF2                     
  1665                           ; BSR set to: 0
  1666                           ;color.c: 366:     if (color == color2 && color2 == color3){return color;}
  1667  004CF2  519A               	movf	verify_color@color& (0+255),w,b
  1668  004CF4  6F94               	movwf	??_verify_color& (0+255),b
  1669  004CF6  6B95               	clrf	(??_verify_color+1)& (0+255),b
  1670  004CF8  5198               	movf	verify_color@color2& (0+255),w,b
  1671  004CFA  1994               	xorwf	??_verify_color& (0+255),w,b
  1672  004CFC  E107               	bnz	u5281
  1673  004CFE  5199               	movf	(verify_color@color2+1)& (0+255),w,b
  1674  004D00  1995               	xorwf	(??_verify_color+1)& (0+255),w,b
  1675  004D02  A4D8               	btfss	status,2,c
  1676  004D04  EF86  F026         	goto	u5281
  1677  004D08  EF88  F026         	goto	u5280
  1678  004D0C                     u5281:
  1679  004D0C  EF97  F026         	goto	l5212
  1680  004D10                     u5280:
  1681  004D10                     
  1682                           ; BSR set to: 0
  1683  004D10  5196               	movf	verify_color@color3& (0+255),w,b
  1684  004D12  1998               	xorwf	verify_color@color2& (0+255),w,b
  1685  004D14  E107               	bnz	u5291
  1686  004D16  5197               	movf	(verify_color@color3+1)& (0+255),w,b
  1687  004D18  1999               	xorwf	(verify_color@color2+1)& (0+255),w,b
  1688  004D1A  A4D8               	btfss	status,2,c
  1689  004D1C  EF92  F026         	goto	u5291
  1690  004D20  EF94  F026         	goto	u5290
  1691  004D24                     u5291:
  1692  004D24  EF97  F026         	goto	l5212
  1693  004D28                     u5290:
  1694  004D28                     
  1695                           ; BSR set to: 0
  1696  004D28  519A               	movf	verify_color@color& (0+255),w,b
  1697  004D2A  EF98  F026         	goto	l177
  1698  004D2E                     l5212:
  1699                           
  1700                           ; BSR set to: 0
  1701                           ;color.c: 369:         return color;}
  1702  004D2E  0E00               	movlw	0
  1703  004D30                     l177:
  1704                           
  1705                           ; BSR set to: 0
  1706  004D30  0012               	return		;funcret
  1707  004D32                     __end_of_verify_color:
  1708                           	callstack 0
  1709                           
  1710 ;; *************** function _test_function *****************
  1711 ;; Defined at:
  1712 ;;		line 16 in file "test_and_calibration.c"
  1713 ;; Parameters:    Size  Location     Type
  1714 ;;  test_code       1    wreg     unsigned char 
  1715 ;;  m               2  134[BANK0 ] PTR struct color_rgb
  1716 ;;		 -> main@rgb(8), 
  1717 ;;  w               2  136[BANK0 ] PTR struct white_card
  1718 ;;		 -> main@white(26), 
  1719 ;;  mL              2  138[BANK0 ] PTR struct DC_motor
  1720 ;;		 -> main@motorL(10), 
  1721 ;;  mR              2  140[BANK0 ] PTR struct DC_motor
  1722 ;;		 -> main@motorR(10), 
  1723 ;; Auto vars:     Size  Location     Type
  1724 ;;  test_code       1  149[BANK0 ] unsigned char 
  1725 ;;  amb_light       2  144[BANK0 ] unsigned int 
  1726 ;;  stop_signal     1  148[BANK0 ] unsigned char 
  1727 ;;  color           1  147[BANK0 ] unsigned char 
  1728 ;;  complete        1  146[BANK0 ] unsigned char 
  1729 ;; Return value:  Size  Location     Type
  1730 ;;                  1    wreg      void 
  1731 ;; Registers used:
  1732 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1733 ;; Tracked objects:
  1734 ;;		On entry : 0/0
  1735 ;;		On exit  : 0/0
  1736 ;;		Unchanged: 0/0
  1737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1738 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1739 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1740 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1741 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1742 ;;Total ram usage:       16 bytes
  1743 ;; Hardware stack levels used: 1
  1744 ;; Hardware stack levels required when called: 11
  1745 ;; This function calls:
  1746 ;;		_LED_C
  1747 ;;		_amb_light_measure
  1748 ;;		_calibrate_white
  1749 ;;		_color_data_collection
  1750 ;;		_color_display
  1751 ;;		_color_predict
  1752 ;;		_detect_color
  1753 ;;		_distance_measure
  1754 ;;		_fullSpeedAhead
  1755 ;;		_read_color
  1756 ;;		_stop
  1757 ;; This function is called by:
  1758 ;;		_main
  1759 ;; This function uses a non-reentrant model
  1760 ;;
  1761                           
  1762                           	psect	text2
  1763  003AF0                     __ptext2:
  1764                           	callstack 0
  1765  003AF0                     _test_function:
  1766                           	callstack 19
  1767                           
  1768                           ; BSR set to: 0
  1769                           ;incstack = 0
  1770                           ;test_function@test_code stored from wreg
  1771  003AF0  0100               	movlb	0	; () banked
  1772  003AF2  6FF5               	movwf	test_function@test_code& (0+255),b
  1773  003AF4                     
  1774                           ;test_and_calibration.c: 16: void test_function(unsigned char test_code, struct color_rg
      +                          b *m, struct white_card *w, struct DC_motor *mL, struct DC_motor *mR);test_and_calibrati
      +                          on.c: 17: {;test_and_calibration.c: 18:     unsigned char complete = 0;
  1775  003AF4  0E00               	movlw	0
  1776  003AF6  0100               	movlb	0	; () banked
  1777  003AF8  6FF2               	movwf	test_function@complete& (0+255),b
  1778                           
  1779                           ;test_and_calibration.c: 20:     unsigned char stop_signal = 0;
  1780  003AFA  0E00               	movlw	0
  1781  003AFC  6FF4               	movwf	test_function@stop_signal& (0+255),b
  1782                           
  1783                           ;test_and_calibration.c: 21:     unsigned int amb_light = 0;
  1784  003AFE  0E00               	movlw	0
  1785  003B00  6FF1               	movwf	(test_function@amb_light+1)& (0+255),b
  1786  003B02  0E00               	movlw	0
  1787  003B04  6FF0               	movwf	test_function@amb_light& (0+255),b
  1788  003B06                     
  1789                           ; BSR set to: 0
  1790                           ;test_and_calibration.c: 23:     if (test_code == 2){calibrate_white(w);}
  1791  003B06  0E02               	movlw	2
  1792  003B08  19F5               	xorwf	test_function@test_code& (0+255),w,b
  1793  003B0A  A4D8               	btfss	status,2,c
  1794  003B0C  EF8A  F01D         	goto	u5321
  1795  003B10  EF8C  F01D         	goto	u5320
  1796  003B14                     u5321:
  1797  003B14  EF92  F01D         	goto	l5272
  1798  003B18                     u5320:
  1799  003B18                     
  1800                           ; BSR set to: 0
  1801  003B18  C0E8  F00C         	movff	test_function@w,calibrate_white@w
  1802  003B1C  C0E9  F00D         	movff	test_function@w+1,calibrate_white@w+1
  1803  003B20  EC06  F019         	call	_calibrate_white	;wreg free
  1804  003B24                     l5272:
  1805                           
  1806                           ;test_and_calibration.c: 24:     if (test_code == 4){amb_light = amb_light_measure(m);}
  1807  003B24  0E04               	movlw	4
  1808  003B26  0100               	movlb	0	; () banked
  1809  003B28  19F5               	xorwf	test_function@test_code& (0+255),w,b
  1810  003B2A  A4D8               	btfss	status,2,c
  1811  003B2C  EF9A  F01D         	goto	u5331
  1812  003B30  EF9C  F01D         	goto	u5330
  1813  003B34                     u5331:
  1814  003B34  EFA6  F01D         	goto	l5276
  1815  003B38                     u5330:
  1816  003B38                     
  1817                           ; BSR set to: 0
  1818  003B38  C0E6  F06A         	movff	test_function@m,amb_light_measure@amb
  1819  003B3C  C0E7  F06B         	movff	test_function@m+1,amb_light_measure@amb+1
  1820  003B40  ECF3  F021         	call	_amb_light_measure	;wreg free
  1821  003B44  C06A  F0F0         	movff	?_amb_light_measure,test_function@amb_light
  1822  003B48  C06B  F0F1         	movff	?_amb_light_measure+1,test_function@amb_light+1
  1823  003B4C                     l5276:
  1824                           
  1825                           ;test_and_calibration.c: 28:         if (test_code == 1){
  1826  003B4C  0100               	movlb	0	; () banked
  1827  003B4E  05F5               	decf	test_function@test_code& (0+255),w,b
  1828  003B50  A4D8               	btfss	status,2,c
  1829  003B52  EFAD  F01D         	goto	u5341
  1830  003B56  EFAF  F01D         	goto	u5340
  1831  003B5A                     u5341:
  1832  003B5A  EFBD  F01D         	goto	l5284
  1833  003B5E                     u5340:
  1834  003B5E                     
  1835                           ; BSR set to: 0
  1836                           ;test_and_calibration.c: 29:             LED_C();
  1837  003B5E  EC8E  F02A         	call	_LED_C	;wreg free
  1838  003B62                     
  1839                           ;test_and_calibration.c: 30:             read_color(m);
  1840  003B62  C0E6  F00C         	movff	test_function@m,read_color@m
  1841  003B66  C0E7  F00D         	movff	test_function@m+1,read_color@m+1
  1842  003B6A  EC4C  F027         	call	_read_color	;wreg free
  1843  003B6E                     
  1844                           ;test_and_calibration.c: 31:             color_display(m);
  1845  003B6E  C0E6  F058         	movff	test_function@m,color_display@m
  1846  003B72  C0E7  F059         	movff	test_function@m+1,color_display@m+1
  1847  003B76  ECE3  F026         	call	_color_display	;wreg free
  1848  003B7A                     l5284:
  1849                           
  1850                           ;test_and_calibration.c: 34:         if (test_code == 2){
  1851  003B7A  0E02               	movlw	2
  1852  003B7C  0100               	movlb	0	; () banked
  1853  003B7E  19F5               	xorwf	test_function@test_code& (0+255),w,b
  1854  003B80  A4D8               	btfss	status,2,c
  1855  003B82  EFC5  F01D         	goto	u5351
  1856  003B86  EFC7  F01D         	goto	u5350
  1857  003B8A                     u5351:
  1858  003B8A  EFD6  F01D         	goto	l5290
  1859  003B8E                     u5350:
  1860  003B8E                     
  1861                           ; BSR set to: 0
  1862                           ;test_and_calibration.c: 35:             color = detect_color(m,w);
  1863  003B8E  C0E6  F071         	movff	test_function@m,detect_color@m
  1864  003B92  C0E7  F072         	movff	test_function@m+1,detect_color@m+1
  1865  003B96  C0E8  F073         	movff	test_function@w,detect_color@w
  1866  003B9A  C0E9  F074         	movff	test_function@w+1,detect_color@w+1
  1867  003B9E  EC0A  F007         	call	_detect_color	;wreg free
  1868  003BA2  0100               	movlb	0	; () banked
  1869  003BA4  6FF3               	movwf	test_function@color& (0+255),b
  1870  003BA6                     
  1871                           ; BSR set to: 0
  1872                           ;test_and_calibration.c: 36:             color_predict(color);
  1873  003BA6  51F3               	movf	test_function@color& (0+255),w,b
  1874  003BA8  ECFB  F029         	call	_color_predict
  1875  003BAC                     l5290:
  1876                           
  1877                           ;test_and_calibration.c: 39:         if (test_code == 3){
  1878  003BAC  0E03               	movlw	3
  1879  003BAE  0100               	movlb	0	; () banked
  1880  003BB0  19F5               	xorwf	test_function@test_code& (0+255),w,b
  1881  003BB2  A4D8               	btfss	status,2,c
  1882  003BB4  EFDE  F01D         	goto	u5361
  1883  003BB8  EFE0  F01D         	goto	u5360
  1884  003BBC                     u5361:
  1885  003BBC  EFF3  F01D         	goto	l5300
  1886  003BC0                     u5360:
  1887  003BC0  EFEB  F01D         	goto	l5298
  1888  003BC4                     l5294:
  1889                           
  1890                           ; BSR set to: 0
  1891                           ;test_and_calibration.c: 41:                 color_data_collection(m);
  1892  003BC4  C0E6  F05A         	movff	test_function@m,color_data_collection@m
  1893  003BC8  C0E7  F05B         	movff	test_function@m+1,color_data_collection@m+1
  1894  003BCC  ECE9  F01A         	call	_color_data_collection	;wreg free
  1895  003BD0                     
  1896                           ;test_and_calibration.c: 42:                 complete = 1;
  1897  003BD0  0E01               	movlw	1
  1898  003BD2  0100               	movlb	0	; () banked
  1899  003BD4  6FF2               	movwf	test_function@complete& (0+255),b
  1900  003BD6                     l5298:
  1901                           
  1902                           ; BSR set to: 0
  1903                           ;test_and_calibration.c: 40:             while (complete == 0){
  1904  003BD6  51F2               	movf	test_function@complete& (0+255),w,b
  1905  003BD8  B4D8               	btfsc	status,2,c
  1906  003BDA  EFF1  F01D         	goto	u5371
  1907  003BDE  EFF3  F01D         	goto	u5370
  1908  003BE2                     u5371:
  1909  003BE2  EFE2  F01D         	goto	l5294
  1910  003BE6                     u5370:
  1911  003BE6                     l5300:
  1912                           
  1913                           ; BSR set to: 0
  1914                           ;test_and_calibration.c: 46:         if (test_code == 4){
  1915  003BE6  0E04               	movlw	4
  1916  003BE8  19F5               	xorwf	test_function@test_code& (0+255),w,b
  1917  003BEA  A4D8               	btfss	status,2,c
  1918  003BEC  EFFA  F01D         	goto	u5381
  1919  003BF0  EFFC  F01D         	goto	u5380
  1920  003BF4                     u5381:
  1921  003BF4  EFA6  F01D         	goto	l5276
  1922  003BF8                     u5380:
  1923  003BF8  EF18  F01E         	goto	l5308
  1924  003BFC                     l5304:
  1925                           
  1926                           ; BSR set to: 0
  1927                           ;test_and_calibration.c: 48:                 fullSpeedAhead(mL, mR);
  1928  003BFC  C0EA  F01A         	movff	test_function@mL,fullSpeedAhead@mL
  1929  003C00  C0EB  F01B         	movff	test_function@mL+1,fullSpeedAhead@mL+1
  1930  003C04  C0EC  F01C         	movff	test_function@mR,fullSpeedAhead@mR
  1931  003C08  C0ED  F01D         	movff	test_function@mR+1,fullSpeedAhead@mR+1
  1932  003C0C  EC99  F026         	call	_fullSpeedAhead	;wreg free
  1933  003C10                     
  1934                           ;test_and_calibration.c: 49:                 stop_signal = distance_measure(mL, mR, amb_
      +                          light);
  1935  003C10  C0EA  F06A         	movff	test_function@mL,distance_measure@mL
  1936  003C14  C0EB  F06B         	movff	test_function@mL+1,distance_measure@mL+1
  1937  003C18  C0EC  F06C         	movff	test_function@mR,distance_measure@mR
  1938  003C1C  C0ED  F06D         	movff	test_function@mR+1,distance_measure@mR+1
  1939  003C20  C0F0  F06E         	movff	test_function@amb_light,distance_measure@amb_light
  1940  003C24  C0F1  F06F         	movff	test_function@amb_light+1,distance_measure@amb_light+1
  1941  003C28  EC5B  F024         	call	_distance_measure	;wreg free
  1942  003C2C  0100               	movlb	0	; () banked
  1943  003C2E  6FF4               	movwf	test_function@stop_signal& (0+255),b
  1944  003C30                     l5308:
  1945                           
  1946                           ; BSR set to: 0
  1947                           ;test_and_calibration.c: 47:             while (stop_signal == 0){
  1948  003C30  51F4               	movf	test_function@stop_signal& (0+255),w,b
  1949  003C32  B4D8               	btfsc	status,2,c
  1950  003C34  EF1E  F01E         	goto	u5391
  1951  003C38  EF20  F01E         	goto	u5390
  1952  003C3C                     u5391:
  1953  003C3C  EFFE  F01D         	goto	l5304
  1954  003C40                     u5390:
  1955  003C40                     
  1956                           ; BSR set to: 0
  1957                           ;test_and_calibration.c: 51:             stop(mL, mR);
  1958  003C40  C0EA  F01A         	movff	test_function@mL,stop@mL
  1959  003C44  C0EB  F01B         	movff	test_function@mL+1,stop@mL+1
  1960  003C48  C0EC  F01C         	movff	test_function@mR,stop@mR
  1961  003C4C  C0ED  F01D         	movff	test_function@mR+1,stop@mR+1
  1962  003C50  ECE3  F025         	call	_stop	;wreg free
  1963  003C54                     
  1964                           ;test_and_calibration.c: 52:             _delay((unsigned long)((1000)*(64000000/4000.0)
      +                          ));
  1965  003C54  0E52               	movlw	82
  1966  003C56  0100               	movlb	0	; () banked
  1967  003C58  6FEF               	movwf	(??_test_function+1)& (0+255),b
  1968  003C5A  0E2B               	movlw	43
  1969  003C5C  6FEE               	movwf	??_test_function& (0+255),b
  1970  003C5E  0E00               	movlw	0
  1971  003C60                     u5757:
  1972  003C60  2EE8               	decfsz	wreg,f,c
  1973  003C62  D7FE               	bra	u5757
  1974  003C64  2FEE               	decfsz	??_test_function& (0+255),f,b
  1975  003C66  D7FC               	bra	u5757
  1976  003C68  2FEF               	decfsz	(??_test_function+1)& (0+255),f,b
  1977  003C6A  D7FA               	bra	u5757
  1978  003C6C  F000               	nop	
  1979  003C6E                     
  1980                           ;test_and_calibration.c: 53:             stop_signal = 0;
  1981  003C6E  0E00               	movlw	0
  1982  003C70  0100               	movlb	0	; () banked
  1983  003C72  6FF4               	movwf	test_function@stop_signal& (0+255),b
  1984  003C74  EFA6  F01D         	goto	l5276
  1985  003C78  0012               	return		;funcret
  1986  003C7A                     __end_of_test_function:
  1987                           	callstack 0
  1988                           
  1989 ;; *************** function _fullSpeedAhead *****************
  1990 ;; Defined at:
  1991 ;;		line 149 in file "dc_motor.c"
  1992 ;; Parameters:    Size  Location     Type
  1993 ;;  mL              2   25[COMRAM] PTR struct DC_motor
  1994 ;;		 -> main@motorL(10), 
  1995 ;;  mR              2   27[COMRAM] PTR struct DC_motor
  1996 ;;		 -> main@motorR(10), 
  1997 ;; Auto vars:     Size  Location     Type
  1998 ;;		None
  1999 ;; Return value:  Size  Location     Type
  2000 ;;                  1    wreg      void 
  2001 ;; Registers used:
  2002 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2003 ;; Tracked objects:
  2004 ;;		On entry : 0/0
  2005 ;;		On exit  : 0/0
  2006 ;;		Unchanged: 0/0
  2007 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2008 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2009 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2010 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2011 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2012 ;;Total ram usage:        5 bytes
  2013 ;; Hardware stack levels used: 1
  2014 ;; Hardware stack levels required when called: 3
  2015 ;; This function calls:
  2016 ;;		_setMotorPWM
  2017 ;; This function is called by:
  2018 ;;		_main
  2019 ;;		_test_function
  2020 ;;		_fullSpeedAhead_test
  2021 ;;		_short_burst
  2022 ;;		_goback
  2023 ;; This function uses a non-reentrant model
  2024 ;;
  2025                           
  2026                           	psect	text3
  2027  004D32                     __ptext3:
  2028                           	callstack 0
  2029  004D32                     _fullSpeedAhead:
  2030                           	callstack 26
  2031  004D32                     
  2032                           ;dc_motor.c: 149: void fullSpeedAhead(struct DC_motor *mL, struct DC_motor *mR);dc_motor
      +                          .c: 150: {;dc_motor.c: 151:     mL->direction=1;
  2033  004D32  EE20 F001          	lfsr	2,1
  2034  004D36  501A               	movf	fullSpeedAhead@mL^0,w,c
  2035  004D38  26D9               	addwf	fsr2l,f,c
  2036  004D3A  501B               	movf	(fullSpeedAhead@mL+1)^0,w,c
  2037  004D3C  22DA               	addwfc	fsr2h,f,c
  2038  004D3E  0E01               	movlw	1
  2039  004D40  6EDF               	movwf	indf2,c
  2040                           
  2041                           ;dc_motor.c: 152:     mR->direction=1;
  2042  004D42  EE20 F001          	lfsr	2,1
  2043  004D46  501C               	movf	fullSpeedAhead@mR^0,w,c
  2044  004D48  26D9               	addwf	fsr2l,f,c
  2045  004D4A  501D               	movf	(fullSpeedAhead@mR+1)^0,w,c
  2046  004D4C  22DA               	addwfc	fsr2h,f,c
  2047  004D4E  0E01               	movlw	1
  2048  004D50  6EDF               	movwf	indf2,c
  2049                           
  2050                           ;dc_motor.c: 153:     while (mL->power<20 && mR->power<20){
  2051  004D52  EFCA  F026         	goto	l5160
  2052  004D56                     l5152:
  2053                           
  2054                           ;dc_motor.c: 154:         mL->power += 10;
  2055  004D56  C01A  FFD9         	movff	fullSpeedAhead@mL,fsr2l
  2056  004D5A  C01B  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
  2057  004D5E  0E0A               	movlw	10
  2058  004D60  26DF               	addwf	indf2,f,c
  2059                           
  2060                           ;dc_motor.c: 155:         mR->power += 10;
  2061  004D62  C01C  FFD9         	movff	fullSpeedAhead@mR,fsr2l
  2062  004D66  C01D  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
  2063  004D6A  0E0A               	movlw	10
  2064  004D6C  26DF               	addwf	indf2,f,c
  2065  004D6E                     
  2066                           ;dc_motor.c: 156:         setMotorPWM(mL);
  2067  004D6E  C01A  F00F         	movff	fullSpeedAhead@mL,setMotorPWM@m
  2068  004D72  C01B  F010         	movff	fullSpeedAhead@mL+1,setMotorPWM@m+1
  2069  004D76  ECFF  F019         	call	_setMotorPWM	;wreg free
  2070  004D7A                     
  2071                           ;dc_motor.c: 157:         setMotorPWM(mR);
  2072  004D7A  C01C  F00F         	movff	fullSpeedAhead@mR,setMotorPWM@m
  2073  004D7E  C01D  F010         	movff	fullSpeedAhead@mR+1,setMotorPWM@m+1
  2074  004D82  ECFF  F019         	call	_setMotorPWM	;wreg free
  2075  004D86                     
  2076                           ;dc_motor.c: 158:         _delay((unsigned long)((10)*(64000000/4000.0)));
  2077  004D86  0ED0               	movlw	208
  2078  004D88  6E1E               	movwf	??_fullSpeedAhead^0,c
  2079  004D8A  0ECA               	movlw	202
  2080  004D8C                     u5767:
  2081  004D8C  2EE8               	decfsz	wreg,f,c
  2082  004D8E  D7FE               	bra	u5767
  2083  004D90  2E1E               	decfsz	??_fullSpeedAhead^0,f,c
  2084  004D92  D7FC               	bra	u5767
  2085  004D94                     l5160:
  2086                           
  2087                           ;dc_motor.c: 153:     while (mL->power<20 && mR->power<20){
  2088  004D94  C01A  FFD9         	movff	fullSpeedAhead@mL,fsr2l
  2089  004D98  C01B  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
  2090  004D9C  0E14               	movlw	20
  2091  004D9E  60DF               	cpfslt	indf2,c
  2092  004DA0  EFD4  F026         	goto	u5261
  2093  004DA4  EFD6  F026         	goto	u5260
  2094  004DA8                     u5261:
  2095  004DA8  EFE2  F026         	goto	l368
  2096  004DAC                     u5260:
  2097  004DAC  C01C  FFD9         	movff	fullSpeedAhead@mR,fsr2l
  2098  004DB0  C01D  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
  2099  004DB4  0E13               	movlw	19
  2100  004DB6  64DF               	cpfsgt	indf2,c
  2101  004DB8  EFE0  F026         	goto	u5271
  2102  004DBC  EFE2  F026         	goto	u5270
  2103  004DC0                     u5271:
  2104  004DC0  EFAB  F026         	goto	l5152
  2105  004DC4                     u5270:
  2106  004DC4                     l368:
  2107  004DC4  0012               	return		;funcret
  2108  004DC6                     __end_of_fullSpeedAhead:
  2109                           	callstack 0
  2110                           
  2111 ;; *************** function _distance_measure *****************
  2112 ;; Defined at:
  2113 ;;		line 395 in file "color.c"
  2114 ;; Parameters:    Size  Location     Type
  2115 ;;  mL              2   10[BANK0 ] PTR struct DC_motor
  2116 ;;		 -> main@motorL(10), 
  2117 ;;  mR              2   12[BANK0 ] PTR struct DC_motor
  2118 ;;		 -> main@motorR(10), 
  2119 ;;  amb_light       2   14[BANK0 ] unsigned int 
  2120 ;; Auto vars:     Size  Location     Type
  2121 ;;  threshold       2   26[BANK0 ] unsigned int 
  2122 ;;  CC_amb          2   24[BANK0 ] unsigned int 
  2123 ;;  CG_amb          2   18[BANK0 ] unsigned int 
  2124 ;;  stop            1   28[BANK0 ] unsigned char 
  2125 ;; Return value:  Size  Location     Type
  2126 ;;                  1    wreg      unsigned char 
  2127 ;; Registers used:
  2128 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2129 ;; Tracked objects:
  2130 ;;		On entry : 0/0
  2131 ;;		On exit  : 0/0
  2132 ;;		Unchanged: 0/0
  2133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2134 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2135 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2136 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2137 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2138 ;;Total ram usage:       19 bytes
  2139 ;; Hardware stack levels used: 1
  2140 ;; Hardware stack levels required when called: 5
  2141 ;; This function calls:
  2142 ;;		_LED_C
  2143 ;;		___flmul
  2144 ;;		___xxtofl
  2145 ;;		_color_read_Clear
  2146 ;;		_color_read_Green
  2147 ;;		_lroundf
  2148 ;; This function is called by:
  2149 ;;		_main
  2150 ;;		_test_function
  2151 ;; This function uses a non-reentrant model
  2152 ;;
  2153                           
  2154                           	psect	text4
  2155  0048B6                     __ptext4:
  2156                           	callstack 0
  2157  0048B6                     _distance_measure:
  2158                           	callstack 24
  2159  0048B6  0E00               	movlw	0
  2160  0048B8  0100               	movlb	0	; () banked
  2161  0048BA  6F73               	movwf	(distance_measure@CG_amb+1)& (0+255),b
  2162  0048BC  0E00               	movlw	0
  2163  0048BE  6F72               	movwf	distance_measure@CG_amb& (0+255),b
  2164                           
  2165                           ;color.c: 398:     unsigned char stop = 0;
  2166  0048C0  0E00               	movlw	0
  2167  0048C2  6F7C               	movwf	distance_measure@stop& (0+255),b
  2168                           
  2169                           ;color.c: 399:     unsigned int threshold = 0;
  2170  0048C4  0E00               	movlw	0
  2171  0048C6  6F7B               	movwf	(distance_measure@threshold+1)& (0+255),b
  2172  0048C8  0E00               	movlw	0
  2173  0048CA  6F7A               	movwf	distance_measure@threshold& (0+255),b
  2174  0048CC                     
  2175                           ; BSR set to: 0
  2176                           ;color.c: 400:     LED_C();
  2177  0048CC  EC8E  F02A         	call	_LED_C	;wreg free
  2178  0048D0                     
  2179                           ;color.c: 401:     _delay((unsigned long)((100)*(64000000/4000.0)));
  2180  0048D0  0E09               	movlw	9
  2181  0048D2  0100               	movlb	0	; () banked
  2182  0048D4  6F71               	movwf	(??_distance_measure+1)& (0+255),b
  2183  0048D6  0E1E               	movlw	30
  2184  0048D8  6F70               	movwf	??_distance_measure& (0+255),b
  2185  0048DA  0EE4               	movlw	228
  2186  0048DC                     u5777:
  2187  0048DC  2EE8               	decfsz	wreg,f,c
  2188  0048DE  D7FE               	bra	u5777
  2189  0048E0  2F70               	decfsz	??_distance_measure& (0+255),f,b
  2190  0048E2  D7FC               	bra	u5777
  2191  0048E4  2F71               	decfsz	(??_distance_measure+1)& (0+255),f,b
  2192  0048E6  D7FA               	bra	u5777
  2193  0048E8  F000               	nop	
  2194  0048EA                     
  2195                           ;color.c: 402:     CC_amb = color_read_Clear();
  2196  0048EA  EC47  F028         	call	_color_read_Clear	;wreg free
  2197  0048EE  C005  F078         	movff	?_color_read_Clear,distance_measure@CC_amb
  2198  0048F2  C006  F079         	movff	?_color_read_Clear+1,distance_measure@CC_amb+1
  2199  0048F6  ECF7  F027         	call	_color_read_Green	;wreg free
  2200  0048FA                     
  2201                           ;color.c: 404:     threshold = lroundf((float)amb_light * 1.05);
  2202  0048FA  C06E  F001         	movff	distance_measure@amb_light,___xxtofl@val
  2203  0048FE  C06F  F002         	movff	distance_measure@amb_light+1,___xxtofl@val+1
  2204  004902  6A03               	clrf	(___xxtofl@val+2)^0,c
  2205  004904  6A04               	clrf	(___xxtofl@val+3)^0,c
  2206  004906  0E00               	movlw	0
  2207  004908  EC9E  F01C         	call	___xxtofl
  2208  00490C  C001  F028         	movff	?___xxtofl,___flmul@b
  2209  004910  C002  F029         	movff	?___xxtofl+1,___flmul@b+1
  2210  004914  C003  F02A         	movff	?___xxtofl+2,___flmul@b+2
  2211  004918  C004  F02B         	movff	?___xxtofl+3,___flmul@b+3
  2212  00491C  0E66               	movlw	102
  2213  00491E  6E2C               	movwf	___flmul@a^0,c
  2214  004920  0E66               	movlw	102
  2215  004922  6E2D               	movwf	(___flmul@a+1)^0,c
  2216  004924  0E86               	movlw	134
  2217  004926  6E2E               	movwf	(___flmul@a+2)^0,c
  2218  004928  0E3F               	movlw	63
  2219  00492A  6E2F               	movwf	(___flmul@a+3)^0,c
  2220  00492C  EC1A  F00F         	call	___flmul	;wreg free
  2221  004930  C028  F074         	movff	?___flmul,_distance_measure$3241
  2222  004934  C029  F075         	movff	?___flmul+1,_distance_measure$3241+1
  2223  004938  C02A  F076         	movff	?___flmul+2,_distance_measure$3241+2
  2224  00493C  C02B  F077         	movff	?___flmul+3,_distance_measure$3241+3
  2225  004940                     
  2226                           ;color.c: 404:     threshold = lroundf((float)amb_light * 1.05);
  2227  004940  C074  F066         	movff	_distance_measure$3241,lroundf@x
  2228  004944  C075  F067         	movff	_distance_measure$3241+1,lroundf@x+1
  2229  004948  C076  F068         	movff	_distance_measure$3241+2,lroundf@x+2
  2230  00494C  C077  F069         	movff	_distance_measure$3241+3,lroundf@x+3
  2231  004950  EC75  F029         	call	_lroundf	;wreg free
  2232  004954  C066  F07A         	movff	?_lroundf,distance_measure@threshold
  2233  004958  C067  F07B         	movff	?_lroundf+1,distance_measure@threshold+1
  2234  00495C                     
  2235                           ;color.c: 407:     if (CC_amb >= threshold){stop = 1;}
  2236  00495C  0100               	movlb	0	; () banked
  2237  00495E  517A               	movf	distance_measure@threshold& (0+255),w,b
  2238  004960  5D78               	subwf	distance_measure@CC_amb& (0+255),w,b
  2239  004962  517B               	movf	(distance_measure@threshold+1)& (0+255),w,b
  2240  004964  5979               	subwfb	(distance_measure@CC_amb+1)& (0+255),w,b
  2241  004966  A0D8               	btfss	status,0,c
  2242  004968  EFB8  F024         	goto	u5131
  2243  00496C  EFBA  F024         	goto	u5130
  2244  004970                     u5131:
  2245  004970  EFBC  F024         	goto	l184
  2246  004974                     u5130:
  2247  004974                     
  2248                           ; BSR set to: 0
  2249  004974  0E01               	movlw	1
  2250  004976  6F7C               	movwf	distance_measure@stop& (0+255),b
  2251  004978                     l184:
  2252                           
  2253                           ; BSR set to: 0
  2254                           ;color.c: 408:     return stop;
  2255  004978  517C               	movf	distance_measure@stop& (0+255),w,b
  2256  00497A                     
  2257                           ; BSR set to: 0
  2258  00497A  0012               	return		;funcret
  2259  00497C                     __end_of_distance_measure:
  2260                           	callstack 0
  2261                           
  2262 ;; *************** function _detect_color *****************
  2263 ;; Defined at:
  2264 ;;		line 287 in file "color.c"
  2265 ;; Parameters:    Size  Location     Type
  2266 ;;  m               2   17[BANK0 ] PTR struct color_rgb
  2267 ;;		 -> main@rgb(8), 
  2268 ;;  w               2   19[BANK0 ] PTR struct white_card
  2269 ;;		 -> main@white(26), 
  2270 ;; Auto vars:     Size  Location     Type
  2271 ;;  BG              2   41[BANK0 ] unsigned int 
  2272 ;;  BB              2   39[BANK0 ] unsigned int 
  2273 ;;  BR              2   37[BANK0 ] unsigned int 
  2274 ;;  RR              2   35[BANK0 ] unsigned int 
  2275 ;;  GG              2   33[BANK0 ] unsigned int 
  2276 ;;  GR              2   31[BANK0 ] unsigned int 
  2277 ;;  RG              2   29[BANK0 ] unsigned int 
  2278 ;;  GB              2   27[BANK0 ] unsigned int 
  2279 ;;  RB              2   25[BANK0 ] unsigned int 
  2280 ;;  color           1   43[BANK0 ] unsigned char 
  2281 ;; Return value:  Size  Location     Type
  2282 ;;                  1    wreg      unsigned char 
  2283 ;; Registers used:
  2284 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2285 ;; Tracked objects:
  2286 ;;		On entry : 0/0
  2287 ;;		On exit  : 0/0
  2288 ;;		Unchanged: 0/0
  2289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2290 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2291 ;;      Locals:         0      23       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2292 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2293 ;;      Totals:         0      31       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2294 ;;Total ram usage:       31 bytes
  2295 ;; Hardware stack levels used: 1
  2296 ;; Hardware stack levels required when called: 5
  2297 ;; This function calls:
  2298 ;;		_LED_B
  2299 ;;		_LED_G
  2300 ;;		_LED_R
  2301 ;;		___fldiv
  2302 ;;		___flmul
  2303 ;;		___xxtofl
  2304 ;;		_compare
  2305 ;;		_lroundf
  2306 ;;		_read_color
  2307 ;;		_toggle_light
  2308 ;; This function is called by:
  2309 ;;		_verify_color
  2310 ;;		_main
  2311 ;;		_test_function
  2312 ;; This function uses a non-reentrant model
  2313 ;;
  2314                           
  2315                           	psect	text5
  2316  000E14                     __ptext5:
  2317                           	callstack 0
  2318  000E14                     _detect_color:
  2319                           	callstack 24
  2320  000E14  0E00               	movlw	0
  2321  000E16  0100               	movlb	0	; () banked
  2322  000E18  6F7E               	movwf	(detect_color@RG+1)& (0+255),b
  2323  000E1A  0E00               	movlw	0
  2324  000E1C  6F7D               	movwf	detect_color@RG& (0+255),b
  2325  000E1E  0E00               	movlw	0
  2326  000E20  6F7A               	movwf	(detect_color@RB+1)& (0+255),b
  2327  000E22  0E00               	movlw	0
  2328  000E24  6F79               	movwf	detect_color@RB& (0+255),b
  2329  000E26  0E00               	movlw	0
  2330  000E28  6F80               	movwf	(detect_color@GR+1)& (0+255),b
  2331  000E2A  0E00               	movlw	0
  2332  000E2C  6F7F               	movwf	detect_color@GR& (0+255),b
  2333  000E2E  0E00               	movlw	0
  2334  000E30  6F82               	movwf	(detect_color@GG+1)& (0+255),b
  2335  000E32  0E00               	movlw	0
  2336  000E34  6F81               	movwf	detect_color@GG& (0+255),b
  2337  000E36  0E00               	movlw	0
  2338  000E38  6F7C               	movwf	(detect_color@GB+1)& (0+255),b
  2339  000E3A  0E00               	movlw	0
  2340  000E3C  6F7B               	movwf	detect_color@GB& (0+255),b
  2341  000E3E  0E00               	movlw	0
  2342  000E40  6F86               	movwf	(detect_color@BR+1)& (0+255),b
  2343  000E42  0E00               	movlw	0
  2344  000E44  6F85               	movwf	detect_color@BR& (0+255),b
  2345  000E46  0E00               	movlw	0
  2346  000E48  6F8A               	movwf	(detect_color@BG+1)& (0+255),b
  2347  000E4A  0E00               	movlw	0
  2348  000E4C  6F89               	movwf	detect_color@BG& (0+255),b
  2349  000E4E  0E00               	movlw	0
  2350  000E50  6F88               	movwf	(detect_color@BB+1)& (0+255),b
  2351  000E52  0E00               	movlw	0
  2352  000E54  6F87               	movwf	detect_color@BB& (0+255),b
  2353                           
  2354                           ;color.c: 292:     unsigned char color = 0;
  2355  000E56  0E00               	movlw	0
  2356  000E58  6F8B               	movwf	detect_color@color& (0+255),b
  2357  000E5A                     
  2358                           ; BSR set to: 0
  2359                           ;color.c: 294:     LED_R();
  2360  000E5A  EC4E  F02A         	call	_LED_R	;wreg free
  2361  000E5E                     
  2362                           ;color.c: 295:     read_color(m);
  2363  000E5E  C071  F00C         	movff	detect_color@m,read_color@m
  2364  000E62  C072  F00D         	movff	detect_color@m+1,read_color@m+1
  2365  000E66  EC4C  F027         	call	_read_color	;wreg free
  2366  000E6A                     
  2367                           ;color.c: 297:     RR = lroundf((float)(m->R)/(w->RR)*100); RG = lroundf((float)(m->G)/(
      +                          w->RG)*100); RB = lroundf((float)(m->B)/(w->RB)*100);
  2368  000E6A  C073  FFD9         	movff	detect_color@w,fsr2l
  2369  000E6E  C074  FFDA         	movff	detect_color@w+1,fsr2h
  2370  000E72  CFDE F075          	movff	postinc2,??_detect_color
  2371  000E76  CFDD F076          	movff	postdec2,??_detect_color+1
  2372  000E7A  C075  F001         	movff	??_detect_color,___xxtofl@val
  2373  000E7E  C076  F002         	movff	??_detect_color+1,___xxtofl@val+1
  2374  000E82  6A03               	clrf	(___xxtofl@val+2)^0,c
  2375  000E84  6A04               	clrf	(___xxtofl@val+3)^0,c
  2376  000E86  0E00               	movlw	0
  2377  000E88  EC9E  F01C         	call	___xxtofl
  2378  000E8C  C001  F013         	movff	?___xxtofl,___fldiv@a
  2379  000E90  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  2380  000E94  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  2381  000E98  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  2382  000E9C  C071  FFD9         	movff	detect_color@m,fsr2l
  2383  000EA0  C072  FFDA         	movff	detect_color@m+1,fsr2h
  2384  000EA4  CFDE F077          	movff	postinc2,??_detect_color+2
  2385  000EA8  CFDD F078          	movff	postdec2,??_detect_color+3
  2386  000EAC  C077  F001         	movff	??_detect_color+2,___xxtofl@val
  2387  000EB0  C078  F002         	movff	??_detect_color+3,___xxtofl@val+1
  2388  000EB4  6A03               	clrf	(___xxtofl@val+2)^0,c
  2389  000EB6  6A04               	clrf	(___xxtofl@val+3)^0,c
  2390  000EB8  0E00               	movlw	0
  2391  000EBA  EC9E  F01C         	call	___xxtofl
  2392  000EBE  C001  F00F         	movff	?___xxtofl,___fldiv@b
  2393  000EC2  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  2394  000EC6  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  2395  000ECA  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  2396  000ECE  EC06  F013         	call	___fldiv	;wreg free
  2397  000ED2  C00F  F028         	movff	?___fldiv,___flmul@b
  2398  000ED6  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  2399  000EDA  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  2400  000EDE  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  2401  000EE2  0E00               	movlw	0
  2402  000EE4  6E2C               	movwf	___flmul@a^0,c
  2403  000EE6  0E00               	movlw	0
  2404  000EE8  6E2D               	movwf	(___flmul@a+1)^0,c
  2405  000EEA  0EC8               	movlw	200
  2406  000EEC  6E2E               	movwf	(___flmul@a+2)^0,c
  2407  000EEE  0E42               	movlw	66
  2408  000EF0  6E2F               	movwf	(___flmul@a+3)^0,c
  2409  000EF2  EC1A  F00F         	call	___flmul	;wreg free
  2410  000EF6  C028  F08C         	movff	?___flmul,_detect_color$3240
  2411  000EFA  C029  F08D         	movff	?___flmul+1,_detect_color$3240+1
  2412  000EFE  C02A  F08E         	movff	?___flmul+2,_detect_color$3240+2
  2413  000F02  C02B  F08F         	movff	?___flmul+3,_detect_color$3240+3
  2414  000F06                     
  2415                           ;color.c: 297:     RR = lroundf((float)(m->R)/(w->RR)*100); RG = lroundf((float)(m->G)/(
      +                          w->RG)*100); RB = lroundf((float)(m->B)/(w->RB)*100);
  2416  000F06  C08C  F066         	movff	_detect_color$3240,lroundf@x
  2417  000F0A  C08D  F067         	movff	_detect_color$3240+1,lroundf@x+1
  2418  000F0E  C08E  F068         	movff	_detect_color$3240+2,lroundf@x+2
  2419  000F12  C08F  F069         	movff	_detect_color$3240+3,lroundf@x+3
  2420  000F16  EC75  F029         	call	_lroundf	;wreg free
  2421  000F1A  C066  F083         	movff	?_lroundf,detect_color@RR
  2422  000F1E  C067  F084         	movff	?_lroundf+1,detect_color@RR+1
  2423  000F22  0100               	movlb	0	; () banked
  2424  000F24  EE20 F002          	lfsr	2,2
  2425  000F28  5173               	movf	detect_color@w& (0+255),w,b
  2426  000F2A  26D9               	addwf	fsr2l,f,c
  2427  000F2C  5174               	movf	(detect_color@w+1)& (0+255),w,b
  2428  000F2E  22DA               	addwfc	fsr2h,f,c
  2429  000F30  CFDE F075          	movff	postinc2,??_detect_color
  2430  000F34  CFDD F076          	movff	postdec2,??_detect_color+1
  2431  000F38  C075  F001         	movff	??_detect_color,___xxtofl@val
  2432  000F3C  C076  F002         	movff	??_detect_color+1,___xxtofl@val+1
  2433  000F40  6A03               	clrf	(___xxtofl@val+2)^0,c
  2434  000F42  6A04               	clrf	(___xxtofl@val+3)^0,c
  2435  000F44  0E00               	movlw	0
  2436  000F46  EC9E  F01C         	call	___xxtofl
  2437  000F4A  C001  F013         	movff	?___xxtofl,___fldiv@a
  2438  000F4E  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  2439  000F52  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  2440  000F56  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  2441  000F5A  0100               	movlb	0	; () banked
  2442  000F5C  EE20 F002          	lfsr	2,2
  2443  000F60  5171               	movf	detect_color@m& (0+255),w,b
  2444  000F62  26D9               	addwf	fsr2l,f,c
  2445  000F64  5172               	movf	(detect_color@m+1)& (0+255),w,b
  2446  000F66  22DA               	addwfc	fsr2h,f,c
  2447  000F68  CFDE F077          	movff	postinc2,??_detect_color+2
  2448  000F6C  CFDD F078          	movff	postdec2,??_detect_color+3
  2449  000F70  C077  F001         	movff	??_detect_color+2,___xxtofl@val
  2450  000F74  C078  F002         	movff	??_detect_color+3,___xxtofl@val+1
  2451  000F78  6A03               	clrf	(___xxtofl@val+2)^0,c
  2452  000F7A  6A04               	clrf	(___xxtofl@val+3)^0,c
  2453  000F7C  0E00               	movlw	0
  2454  000F7E  EC9E  F01C         	call	___xxtofl
  2455  000F82  C001  F00F         	movff	?___xxtofl,___fldiv@b
  2456  000F86  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  2457  000F8A  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  2458  000F8E  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  2459  000F92  EC06  F013         	call	___fldiv	;wreg free
  2460  000F96  C00F  F028         	movff	?___fldiv,___flmul@b
  2461  000F9A  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  2462  000F9E  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  2463  000FA2  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  2464  000FA6  0E00               	movlw	0
  2465  000FA8  6E2C               	movwf	___flmul@a^0,c
  2466  000FAA  0E00               	movlw	0
  2467  000FAC  6E2D               	movwf	(___flmul@a+1)^0,c
  2468  000FAE  0EC8               	movlw	200
  2469  000FB0  6E2E               	movwf	(___flmul@a+2)^0,c
  2470  000FB2  0E42               	movlw	66
  2471  000FB4  6E2F               	movwf	(___flmul@a+3)^0,c
  2472  000FB6  EC1A  F00F         	call	___flmul	;wreg free
  2473  000FBA  C028  F08C         	movff	?___flmul,_detect_color$3240
  2474  000FBE  C029  F08D         	movff	?___flmul+1,_detect_color$3240+1
  2475  000FC2  C02A  F08E         	movff	?___flmul+2,_detect_color$3240+2
  2476  000FC6  C02B  F08F         	movff	?___flmul+3,_detect_color$3240+3
  2477  000FCA  C08C  F066         	movff	_detect_color$3240,lroundf@x
  2478  000FCE  C08D  F067         	movff	_detect_color$3240+1,lroundf@x+1
  2479  000FD2  C08E  F068         	movff	_detect_color$3240+2,lroundf@x+2
  2480  000FD6  C08F  F069         	movff	_detect_color$3240+3,lroundf@x+3
  2481  000FDA  EC75  F029         	call	_lroundf	;wreg free
  2482  000FDE  C066  F07D         	movff	?_lroundf,detect_color@RG
  2483  000FE2  C067  F07E         	movff	?_lroundf+1,detect_color@RG+1
  2484  000FE6  0100               	movlb	0	; () banked
  2485  000FE8  EE20 F004          	lfsr	2,4
  2486  000FEC  5173               	movf	detect_color@w& (0+255),w,b
  2487  000FEE  26D9               	addwf	fsr2l,f,c
  2488  000FF0  5174               	movf	(detect_color@w+1)& (0+255),w,b
  2489  000FF2  22DA               	addwfc	fsr2h,f,c
  2490  000FF4  CFDE F075          	movff	postinc2,??_detect_color
  2491  000FF8  CFDD F076          	movff	postdec2,??_detect_color+1
  2492  000FFC  C075  F001         	movff	??_detect_color,___xxtofl@val
  2493  001000  C076  F002         	movff	??_detect_color+1,___xxtofl@val+1
  2494  001004  6A03               	clrf	(___xxtofl@val+2)^0,c
  2495  001006  6A04               	clrf	(___xxtofl@val+3)^0,c
  2496  001008  0E00               	movlw	0
  2497  00100A  EC9E  F01C         	call	___xxtofl
  2498  00100E  C001  F013         	movff	?___xxtofl,___fldiv@a
  2499  001012  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  2500  001016  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  2501  00101A  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  2502  00101E  0100               	movlb	0	; () banked
  2503  001020  EE20 F004          	lfsr	2,4
  2504  001024  5171               	movf	detect_color@m& (0+255),w,b
  2505  001026  26D9               	addwf	fsr2l,f,c
  2506  001028  5172               	movf	(detect_color@m+1)& (0+255),w,b
  2507  00102A  22DA               	addwfc	fsr2h,f,c
  2508  00102C  CFDE F077          	movff	postinc2,??_detect_color+2
  2509  001030  CFDD F078          	movff	postdec2,??_detect_color+3
  2510  001034  C077  F001         	movff	??_detect_color+2,___xxtofl@val
  2511  001038  C078  F002         	movff	??_detect_color+3,___xxtofl@val+1
  2512  00103C  6A03               	clrf	(___xxtofl@val+2)^0,c
  2513  00103E  6A04               	clrf	(___xxtofl@val+3)^0,c
  2514  001040  0E00               	movlw	0
  2515  001042  EC9E  F01C         	call	___xxtofl
  2516  001046  C001  F00F         	movff	?___xxtofl,___fldiv@b
  2517  00104A  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  2518  00104E  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  2519  001052  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  2520  001056  EC06  F013         	call	___fldiv	;wreg free
  2521  00105A  C00F  F028         	movff	?___fldiv,___flmul@b
  2522  00105E  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  2523  001062  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  2524  001066  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  2525  00106A  0E00               	movlw	0
  2526  00106C  6E2C               	movwf	___flmul@a^0,c
  2527  00106E  0E00               	movlw	0
  2528  001070  6E2D               	movwf	(___flmul@a+1)^0,c
  2529  001072  0EC8               	movlw	200
  2530  001074  6E2E               	movwf	(___flmul@a+2)^0,c
  2531  001076  0E42               	movlw	66
  2532  001078  6E2F               	movwf	(___flmul@a+3)^0,c
  2533  00107A  EC1A  F00F         	call	___flmul	;wreg free
  2534  00107E  C028  F08C         	movff	?___flmul,_detect_color$3240
  2535  001082  C029  F08D         	movff	?___flmul+1,_detect_color$3240+1
  2536  001086  C02A  F08E         	movff	?___flmul+2,_detect_color$3240+2
  2537  00108A  C02B  F08F         	movff	?___flmul+3,_detect_color$3240+3
  2538  00108E  C08C  F066         	movff	_detect_color$3240,lroundf@x
  2539  001092  C08D  F067         	movff	_detect_color$3240+1,lroundf@x+1
  2540  001096  C08E  F068         	movff	_detect_color$3240+2,lroundf@x+2
  2541  00109A  C08F  F069         	movff	_detect_color$3240+3,lroundf@x+3
  2542  00109E  EC75  F029         	call	_lroundf	;wreg free
  2543  0010A2                     
  2544                           ;color.c: 298:     _delay((unsigned long)((50)*(64000000/4000.0)));
  2545  0010A2  0E05               	movlw	5
  2546  0010A4  0100               	movlb	0	; () banked
  2547  0010A6  6F76               	movwf	(??_detect_color+1)& (0+255),b
  2548  0010A8  0E0F               	movlw	15
  2549  0010AA  6F75               	movwf	??_detect_color& (0+255),b
  2550  0010AC  0EF1               	movlw	241
  2551  0010AE                     u5787:
  2552  0010AE  2EE8               	decfsz	wreg,f,c
  2553  0010B0  D7FE               	bra	u5787
  2554  0010B2  2F75               	decfsz	??_detect_color& (0+255),f,b
  2555  0010B4  D7FC               	bra	u5787
  2556  0010B6  2F76               	decfsz	(??_detect_color+1)& (0+255),f,b
  2557  0010B8  D7FA               	bra	u5787
  2558  0010BA                     
  2559                           ;color.c: 300:     LED_G();
  2560  0010BA  EC6E  F02A         	call	_LED_G	;wreg free
  2561  0010BE                     
  2562                           ;color.c: 301:     read_color(m);
  2563  0010BE  C071  F00C         	movff	detect_color@m,read_color@m
  2564  0010C2  C072  F00D         	movff	detect_color@m+1,read_color@m+1
  2565  0010C6  EC4C  F027         	call	_read_color	;wreg free
  2566  0010CA                     
  2567                           ;color.c: 304:     GR = lroundf((float)(m->R)/(w->GR)*100); GG = lroundf((float)(m->G)/(
      +                          w->GG)*100); GB = lroundf((float)(m->B)/(w->GB)*100);
  2568  0010CA  0100               	movlb	0	; () banked
  2569  0010CC  EE20 F006          	lfsr	2,6
  2570  0010D0  5173               	movf	detect_color@w& (0+255),w,b
  2571  0010D2  26D9               	addwf	fsr2l,f,c
  2572  0010D4  5174               	movf	(detect_color@w+1)& (0+255),w,b
  2573  0010D6  22DA               	addwfc	fsr2h,f,c
  2574  0010D8  CFDE F075          	movff	postinc2,??_detect_color
  2575  0010DC  CFDD F076          	movff	postdec2,??_detect_color+1
  2576  0010E0  C075  F001         	movff	??_detect_color,___xxtofl@val
  2577  0010E4  C076  F002         	movff	??_detect_color+1,___xxtofl@val+1
  2578  0010E8  6A03               	clrf	(___xxtofl@val+2)^0,c
  2579  0010EA  6A04               	clrf	(___xxtofl@val+3)^0,c
  2580  0010EC  0E00               	movlw	0
  2581  0010EE  EC9E  F01C         	call	___xxtofl
  2582  0010F2  C001  F013         	movff	?___xxtofl,___fldiv@a
  2583  0010F6  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  2584  0010FA  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  2585  0010FE  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  2586  001102  C071  FFD9         	movff	detect_color@m,fsr2l
  2587  001106  C072  FFDA         	movff	detect_color@m+1,fsr2h
  2588  00110A  CFDE F077          	movff	postinc2,??_detect_color+2
  2589  00110E  CFDD F078          	movff	postdec2,??_detect_color+3
  2590  001112  C077  F001         	movff	??_detect_color+2,___xxtofl@val
  2591  001116  C078  F002         	movff	??_detect_color+3,___xxtofl@val+1
  2592  00111A  6A03               	clrf	(___xxtofl@val+2)^0,c
  2593  00111C  6A04               	clrf	(___xxtofl@val+3)^0,c
  2594  00111E  0E00               	movlw	0
  2595  001120  EC9E  F01C         	call	___xxtofl
  2596  001124  C001  F00F         	movff	?___xxtofl,___fldiv@b
  2597  001128  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  2598  00112C  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  2599  001130  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  2600  001134  EC06  F013         	call	___fldiv	;wreg free
  2601  001138  C00F  F028         	movff	?___fldiv,___flmul@b
  2602  00113C  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  2603  001140  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  2604  001144  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  2605  001148  0E00               	movlw	0
  2606  00114A  6E2C               	movwf	___flmul@a^0,c
  2607  00114C  0E00               	movlw	0
  2608  00114E  6E2D               	movwf	(___flmul@a+1)^0,c
  2609  001150  0EC8               	movlw	200
  2610  001152  6E2E               	movwf	(___flmul@a+2)^0,c
  2611  001154  0E42               	movlw	66
  2612  001156  6E2F               	movwf	(___flmul@a+3)^0,c
  2613  001158  EC1A  F00F         	call	___flmul	;wreg free
  2614  00115C  C028  F08C         	movff	?___flmul,_detect_color$3240
  2615  001160  C029  F08D         	movff	?___flmul+1,_detect_color$3240+1
  2616  001164  C02A  F08E         	movff	?___flmul+2,_detect_color$3240+2
  2617  001168  C02B  F08F         	movff	?___flmul+3,_detect_color$3240+3
  2618  00116C                     
  2619                           ;color.c: 304:     GR = lroundf((float)(m->R)/(w->GR)*100); GG = lroundf((float)(m->G)/(
      +                          w->GG)*100); GB = lroundf((float)(m->B)/(w->GB)*100);
  2620  00116C  C08C  F066         	movff	_detect_color$3240,lroundf@x
  2621  001170  C08D  F067         	movff	_detect_color$3240+1,lroundf@x+1
  2622  001174  C08E  F068         	movff	_detect_color$3240+2,lroundf@x+2
  2623  001178  C08F  F069         	movff	_detect_color$3240+3,lroundf@x+3
  2624  00117C  EC75  F029         	call	_lroundf	;wreg free
  2625  001180  C066  F07F         	movff	?_lroundf,detect_color@GR
  2626  001184  C067  F080         	movff	?_lroundf+1,detect_color@GR+1
  2627  001188  0100               	movlb	0	; () banked
  2628  00118A  EE20 F008          	lfsr	2,8
  2629  00118E  5173               	movf	detect_color@w& (0+255),w,b
  2630  001190  26D9               	addwf	fsr2l,f,c
  2631  001192  5174               	movf	(detect_color@w+1)& (0+255),w,b
  2632  001194  22DA               	addwfc	fsr2h,f,c
  2633  001196  CFDE F075          	movff	postinc2,??_detect_color
  2634  00119A  CFDD F076          	movff	postdec2,??_detect_color+1
  2635  00119E  C075  F001         	movff	??_detect_color,___xxtofl@val
  2636  0011A2  C076  F002         	movff	??_detect_color+1,___xxtofl@val+1
  2637  0011A6  6A03               	clrf	(___xxtofl@val+2)^0,c
  2638  0011A8  6A04               	clrf	(___xxtofl@val+3)^0,c
  2639  0011AA  0E00               	movlw	0
  2640  0011AC  EC9E  F01C         	call	___xxtofl
  2641  0011B0  C001  F013         	movff	?___xxtofl,___fldiv@a
  2642  0011B4  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  2643  0011B8  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  2644  0011BC  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  2645  0011C0  0100               	movlb	0	; () banked
  2646  0011C2  EE20 F002          	lfsr	2,2
  2647  0011C6  5171               	movf	detect_color@m& (0+255),w,b
  2648  0011C8  26D9               	addwf	fsr2l,f,c
  2649  0011CA  5172               	movf	(detect_color@m+1)& (0+255),w,b
  2650  0011CC  22DA               	addwfc	fsr2h,f,c
  2651  0011CE  CFDE F077          	movff	postinc2,??_detect_color+2
  2652  0011D2  CFDD F078          	movff	postdec2,??_detect_color+3
  2653  0011D6  C077  F001         	movff	??_detect_color+2,___xxtofl@val
  2654  0011DA  C078  F002         	movff	??_detect_color+3,___xxtofl@val+1
  2655  0011DE  6A03               	clrf	(___xxtofl@val+2)^0,c
  2656  0011E0  6A04               	clrf	(___xxtofl@val+3)^0,c
  2657  0011E2  0E00               	movlw	0
  2658  0011E4  EC9E  F01C         	call	___xxtofl
  2659  0011E8  C001  F00F         	movff	?___xxtofl,___fldiv@b
  2660  0011EC  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  2661  0011F0  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  2662  0011F4  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  2663  0011F8  EC06  F013         	call	___fldiv	;wreg free
  2664  0011FC  C00F  F028         	movff	?___fldiv,___flmul@b
  2665  001200  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  2666  001204  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  2667  001208  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  2668  00120C  0E00               	movlw	0
  2669  00120E  6E2C               	movwf	___flmul@a^0,c
  2670  001210  0E00               	movlw	0
  2671  001212  6E2D               	movwf	(___flmul@a+1)^0,c
  2672  001214  0EC8               	movlw	200
  2673  001216  6E2E               	movwf	(___flmul@a+2)^0,c
  2674  001218  0E42               	movlw	66
  2675  00121A  6E2F               	movwf	(___flmul@a+3)^0,c
  2676  00121C  EC1A  F00F         	call	___flmul	;wreg free
  2677  001220  C028  F08C         	movff	?___flmul,_detect_color$3240
  2678  001224  C029  F08D         	movff	?___flmul+1,_detect_color$3240+1
  2679  001228  C02A  F08E         	movff	?___flmul+2,_detect_color$3240+2
  2680  00122C  C02B  F08F         	movff	?___flmul+3,_detect_color$3240+3
  2681  001230  C08C  F066         	movff	_detect_color$3240,lroundf@x
  2682  001234  C08D  F067         	movff	_detect_color$3240+1,lroundf@x+1
  2683  001238  C08E  F068         	movff	_detect_color$3240+2,lroundf@x+2
  2684  00123C  C08F  F069         	movff	_detect_color$3240+3,lroundf@x+3
  2685  001240  EC75  F029         	call	_lroundf	;wreg free
  2686  001244  C066  F081         	movff	?_lroundf,detect_color@GG
  2687  001248  C067  F082         	movff	?_lroundf+1,detect_color@GG+1
  2688  00124C  0100               	movlb	0	; () banked
  2689  00124E  EE20 F00A          	lfsr	2,10
  2690  001252  5173               	movf	detect_color@w& (0+255),w,b
  2691  001254  26D9               	addwf	fsr2l,f,c
  2692  001256  5174               	movf	(detect_color@w+1)& (0+255),w,b
  2693  001258  22DA               	addwfc	fsr2h,f,c
  2694  00125A  CFDE F075          	movff	postinc2,??_detect_color
  2695  00125E  CFDD F076          	movff	postdec2,??_detect_color+1
  2696  001262  C075  F001         	movff	??_detect_color,___xxtofl@val
  2697  001266  C076  F002         	movff	??_detect_color+1,___xxtofl@val+1
  2698  00126A  6A03               	clrf	(___xxtofl@val+2)^0,c
  2699  00126C  6A04               	clrf	(___xxtofl@val+3)^0,c
  2700  00126E  0E00               	movlw	0
  2701  001270  EC9E  F01C         	call	___xxtofl
  2702  001274  C001  F013         	movff	?___xxtofl,___fldiv@a
  2703  001278  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  2704  00127C  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  2705  001280  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  2706  001284  0100               	movlb	0	; () banked
  2707  001286  EE20 F004          	lfsr	2,4
  2708  00128A  5171               	movf	detect_color@m& (0+255),w,b
  2709  00128C  26D9               	addwf	fsr2l,f,c
  2710  00128E  5172               	movf	(detect_color@m+1)& (0+255),w,b
  2711  001290  22DA               	addwfc	fsr2h,f,c
  2712  001292  CFDE F077          	movff	postinc2,??_detect_color+2
  2713  001296  CFDD F078          	movff	postdec2,??_detect_color+3
  2714  00129A  C077  F001         	movff	??_detect_color+2,___xxtofl@val
  2715  00129E  C078  F002         	movff	??_detect_color+3,___xxtofl@val+1
  2716  0012A2  6A03               	clrf	(___xxtofl@val+2)^0,c
  2717  0012A4  6A04               	clrf	(___xxtofl@val+3)^0,c
  2718  0012A6  0E00               	movlw	0
  2719  0012A8  EC9E  F01C         	call	___xxtofl
  2720  0012AC  C001  F00F         	movff	?___xxtofl,___fldiv@b
  2721  0012B0  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  2722  0012B4  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  2723  0012B8  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  2724  0012BC  EC06  F013         	call	___fldiv	;wreg free
  2725  0012C0  C00F  F028         	movff	?___fldiv,___flmul@b
  2726  0012C4  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  2727  0012C8  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  2728  0012CC  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  2729  0012D0  0E00               	movlw	0
  2730  0012D2  6E2C               	movwf	___flmul@a^0,c
  2731  0012D4  0E00               	movlw	0
  2732  0012D6  6E2D               	movwf	(___flmul@a+1)^0,c
  2733  0012D8  0EC8               	movlw	200
  2734  0012DA  6E2E               	movwf	(___flmul@a+2)^0,c
  2735  0012DC  0E42               	movlw	66
  2736  0012DE  6E2F               	movwf	(___flmul@a+3)^0,c
  2737  0012E0  EC1A  F00F         	call	___flmul	;wreg free
  2738  0012E4  C028  F08C         	movff	?___flmul,_detect_color$3240
  2739  0012E8  C029  F08D         	movff	?___flmul+1,_detect_color$3240+1
  2740  0012EC  C02A  F08E         	movff	?___flmul+2,_detect_color$3240+2
  2741  0012F0  C02B  F08F         	movff	?___flmul+3,_detect_color$3240+3
  2742  0012F4  C08C  F066         	movff	_detect_color$3240,lroundf@x
  2743  0012F8  C08D  F067         	movff	_detect_color$3240+1,lroundf@x+1
  2744  0012FC  C08E  F068         	movff	_detect_color$3240+2,lroundf@x+2
  2745  001300  C08F  F069         	movff	_detect_color$3240+3,lroundf@x+3
  2746  001304  EC75  F029         	call	_lroundf	;wreg free
  2747  001308                     
  2748                           ;color.c: 306:     _delay((unsigned long)((50)*(64000000/4000.0)));
  2749  001308  0E05               	movlw	5
  2750  00130A  0100               	movlb	0	; () banked
  2751  00130C  6F76               	movwf	(??_detect_color+1)& (0+255),b
  2752  00130E  0E0F               	movlw	15
  2753  001310  6F75               	movwf	??_detect_color& (0+255),b
  2754  001312  0EF1               	movlw	241
  2755  001314                     u5797:
  2756  001314  2EE8               	decfsz	wreg,f,c
  2757  001316  D7FE               	bra	u5797
  2758  001318  2F75               	decfsz	??_detect_color& (0+255),f,b
  2759  00131A  D7FC               	bra	u5797
  2760  00131C  2F76               	decfsz	(??_detect_color+1)& (0+255),f,b
  2761  00131E  D7FA               	bra	u5797
  2762  001320                     
  2763                           ;color.c: 308:     LED_B();
  2764  001320  EC7E  F02A         	call	_LED_B	;wreg free
  2765  001324                     
  2766                           ;color.c: 309:     read_color(m);
  2767  001324  C071  F00C         	movff	detect_color@m,read_color@m
  2768  001328  C072  F00D         	movff	detect_color@m+1,read_color@m+1
  2769  00132C  EC4C  F027         	call	_read_color	;wreg free
  2770  001330                     
  2771                           ;color.c: 310:     BR = lroundf((float)(m->R)/(w->BR)*100); BG = lroundf((float)(m->G)/(
      +                          w->BG)*100); BB = lroundf((float)(m->B)/(w->BB)*100);
  2772  001330  0100               	movlb	0	; () banked
  2773  001332  EE20 F00C          	lfsr	2,12
  2774  001336  5173               	movf	detect_color@w& (0+255),w,b
  2775  001338  26D9               	addwf	fsr2l,f,c
  2776  00133A  5174               	movf	(detect_color@w+1)& (0+255),w,b
  2777  00133C  22DA               	addwfc	fsr2h,f,c
  2778  00133E  CFDE F075          	movff	postinc2,??_detect_color
  2779  001342  CFDD F076          	movff	postdec2,??_detect_color+1
  2780  001346  C075  F001         	movff	??_detect_color,___xxtofl@val
  2781  00134A  C076  F002         	movff	??_detect_color+1,___xxtofl@val+1
  2782  00134E  6A03               	clrf	(___xxtofl@val+2)^0,c
  2783  001350  6A04               	clrf	(___xxtofl@val+3)^0,c
  2784  001352  0E00               	movlw	0
  2785  001354  EC9E  F01C         	call	___xxtofl
  2786  001358  C001  F013         	movff	?___xxtofl,___fldiv@a
  2787  00135C  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  2788  001360  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  2789  001364  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  2790  001368  C071  FFD9         	movff	detect_color@m,fsr2l
  2791  00136C  C072  FFDA         	movff	detect_color@m+1,fsr2h
  2792  001370  CFDE F077          	movff	postinc2,??_detect_color+2
  2793  001374  CFDD F078          	movff	postdec2,??_detect_color+3
  2794  001378  C077  F001         	movff	??_detect_color+2,___xxtofl@val
  2795  00137C  C078  F002         	movff	??_detect_color+3,___xxtofl@val+1
  2796  001380  6A03               	clrf	(___xxtofl@val+2)^0,c
  2797  001382  6A04               	clrf	(___xxtofl@val+3)^0,c
  2798  001384  0E00               	movlw	0
  2799  001386  EC9E  F01C         	call	___xxtofl
  2800  00138A  C001  F00F         	movff	?___xxtofl,___fldiv@b
  2801  00138E  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  2802  001392  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  2803  001396  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  2804  00139A  EC06  F013         	call	___fldiv	;wreg free
  2805  00139E  C00F  F028         	movff	?___fldiv,___flmul@b
  2806  0013A2  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  2807  0013A6  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  2808  0013AA  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  2809  0013AE  0E00               	movlw	0
  2810  0013B0  6E2C               	movwf	___flmul@a^0,c
  2811  0013B2  0E00               	movlw	0
  2812  0013B4  6E2D               	movwf	(___flmul@a+1)^0,c
  2813  0013B6  0EC8               	movlw	200
  2814  0013B8  6E2E               	movwf	(___flmul@a+2)^0,c
  2815  0013BA  0E42               	movlw	66
  2816  0013BC  6E2F               	movwf	(___flmul@a+3)^0,c
  2817  0013BE  EC1A  F00F         	call	___flmul	;wreg free
  2818  0013C2  C028  F08C         	movff	?___flmul,_detect_color$3240
  2819  0013C6  C029  F08D         	movff	?___flmul+1,_detect_color$3240+1
  2820  0013CA  C02A  F08E         	movff	?___flmul+2,_detect_color$3240+2
  2821  0013CE  C02B  F08F         	movff	?___flmul+3,_detect_color$3240+3
  2822  0013D2                     
  2823                           ;color.c: 310:     BR = lroundf((float)(m->R)/(w->BR)*100); BG = lroundf((float)(m->G)/(
      +                          w->BG)*100); BB = lroundf((float)(m->B)/(w->BB)*100);
  2824  0013D2  C08C  F066         	movff	_detect_color$3240,lroundf@x
  2825  0013D6  C08D  F067         	movff	_detect_color$3240+1,lroundf@x+1
  2826  0013DA  C08E  F068         	movff	_detect_color$3240+2,lroundf@x+2
  2827  0013DE  C08F  F069         	movff	_detect_color$3240+3,lroundf@x+3
  2828  0013E2  EC75  F029         	call	_lroundf	;wreg free
  2829  0013E6  C066  F085         	movff	?_lroundf,detect_color@BR
  2830  0013EA  C067  F086         	movff	?_lroundf+1,detect_color@BR+1
  2831  0013EE  0100               	movlb	0	; () banked
  2832  0013F0  EE20 F00E          	lfsr	2,14
  2833  0013F4  5173               	movf	detect_color@w& (0+255),w,b
  2834  0013F6  26D9               	addwf	fsr2l,f,c
  2835  0013F8  5174               	movf	(detect_color@w+1)& (0+255),w,b
  2836  0013FA  22DA               	addwfc	fsr2h,f,c
  2837  0013FC  CFDE F075          	movff	postinc2,??_detect_color
  2838  001400  CFDD F076          	movff	postdec2,??_detect_color+1
  2839  001404  C075  F001         	movff	??_detect_color,___xxtofl@val
  2840  001408  C076  F002         	movff	??_detect_color+1,___xxtofl@val+1
  2841  00140C  6A03               	clrf	(___xxtofl@val+2)^0,c
  2842  00140E  6A04               	clrf	(___xxtofl@val+3)^0,c
  2843  001410  0E00               	movlw	0
  2844  001412  EC9E  F01C         	call	___xxtofl
  2845  001416  C001  F013         	movff	?___xxtofl,___fldiv@a
  2846  00141A  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  2847  00141E  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  2848  001422  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  2849  001426  0100               	movlb	0	; () banked
  2850  001428  EE20 F002          	lfsr	2,2
  2851  00142C  5171               	movf	detect_color@m& (0+255),w,b
  2852  00142E  26D9               	addwf	fsr2l,f,c
  2853  001430  5172               	movf	(detect_color@m+1)& (0+255),w,b
  2854  001432  22DA               	addwfc	fsr2h,f,c
  2855  001434  CFDE F077          	movff	postinc2,??_detect_color+2
  2856  001438  CFDD F078          	movff	postdec2,??_detect_color+3
  2857  00143C  C077  F001         	movff	??_detect_color+2,___xxtofl@val
  2858  001440  C078  F002         	movff	??_detect_color+3,___xxtofl@val+1
  2859  001444  6A03               	clrf	(___xxtofl@val+2)^0,c
  2860  001446  6A04               	clrf	(___xxtofl@val+3)^0,c
  2861  001448  0E00               	movlw	0
  2862  00144A  EC9E  F01C         	call	___xxtofl
  2863  00144E  C001  F00F         	movff	?___xxtofl,___fldiv@b
  2864  001452  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  2865  001456  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  2866  00145A  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  2867  00145E  EC06  F013         	call	___fldiv	;wreg free
  2868  001462  C00F  F028         	movff	?___fldiv,___flmul@b
  2869  001466  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  2870  00146A  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  2871  00146E  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  2872  001472  0E00               	movlw	0
  2873  001474  6E2C               	movwf	___flmul@a^0,c
  2874  001476  0E00               	movlw	0
  2875  001478  6E2D               	movwf	(___flmul@a+1)^0,c
  2876  00147A  0EC8               	movlw	200
  2877  00147C  6E2E               	movwf	(___flmul@a+2)^0,c
  2878  00147E  0E42               	movlw	66
  2879  001480  6E2F               	movwf	(___flmul@a+3)^0,c
  2880  001482  EC1A  F00F         	call	___flmul	;wreg free
  2881  001486  C028  F08C         	movff	?___flmul,_detect_color$3240
  2882  00148A  C029  F08D         	movff	?___flmul+1,_detect_color$3240+1
  2883  00148E  C02A  F08E         	movff	?___flmul+2,_detect_color$3240+2
  2884  001492  C02B  F08F         	movff	?___flmul+3,_detect_color$3240+3
  2885  001496  C08C  F066         	movff	_detect_color$3240,lroundf@x
  2886  00149A  C08D  F067         	movff	_detect_color$3240+1,lroundf@x+1
  2887  00149E  C08E  F068         	movff	_detect_color$3240+2,lroundf@x+2
  2888  0014A2  C08F  F069         	movff	_detect_color$3240+3,lroundf@x+3
  2889  0014A6  EC75  F029         	call	_lroundf	;wreg free
  2890  0014AA  C066  F089         	movff	?_lroundf,detect_color@BG
  2891  0014AE  C067  F08A         	movff	?_lroundf+1,detect_color@BG+1
  2892  0014B2  0100               	movlb	0	; () banked
  2893  0014B4  EE20 F010          	lfsr	2,16
  2894  0014B8  5173               	movf	detect_color@w& (0+255),w,b
  2895  0014BA  26D9               	addwf	fsr2l,f,c
  2896  0014BC  5174               	movf	(detect_color@w+1)& (0+255),w,b
  2897  0014BE  22DA               	addwfc	fsr2h,f,c
  2898  0014C0  CFDE F075          	movff	postinc2,??_detect_color
  2899  0014C4  CFDD F076          	movff	postdec2,??_detect_color+1
  2900  0014C8  C075  F001         	movff	??_detect_color,___xxtofl@val
  2901  0014CC  C076  F002         	movff	??_detect_color+1,___xxtofl@val+1
  2902  0014D0  6A03               	clrf	(___xxtofl@val+2)^0,c
  2903  0014D2  6A04               	clrf	(___xxtofl@val+3)^0,c
  2904  0014D4  0E00               	movlw	0
  2905  0014D6  EC9E  F01C         	call	___xxtofl
  2906  0014DA  C001  F013         	movff	?___xxtofl,___fldiv@a
  2907  0014DE  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  2908  0014E2  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  2909  0014E6  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  2910  0014EA  0100               	movlb	0	; () banked
  2911  0014EC  EE20 F004          	lfsr	2,4
  2912  0014F0  5171               	movf	detect_color@m& (0+255),w,b
  2913  0014F2  26D9               	addwf	fsr2l,f,c
  2914  0014F4  5172               	movf	(detect_color@m+1)& (0+255),w,b
  2915  0014F6  22DA               	addwfc	fsr2h,f,c
  2916  0014F8  CFDE F077          	movff	postinc2,??_detect_color+2
  2917  0014FC  CFDD F078          	movff	postdec2,??_detect_color+3
  2918  001500  C077  F001         	movff	??_detect_color+2,___xxtofl@val
  2919  001504  C078  F002         	movff	??_detect_color+3,___xxtofl@val+1
  2920  001508  6A03               	clrf	(___xxtofl@val+2)^0,c
  2921  00150A  6A04               	clrf	(___xxtofl@val+3)^0,c
  2922  00150C  0E00               	movlw	0
  2923  00150E  EC9E  F01C         	call	___xxtofl
  2924  001512  C001  F00F         	movff	?___xxtofl,___fldiv@b
  2925  001516  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  2926  00151A  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  2927  00151E  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  2928  001522  EC06  F013         	call	___fldiv	;wreg free
  2929  001526  C00F  F028         	movff	?___fldiv,___flmul@b
  2930  00152A  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  2931  00152E  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  2932  001532  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  2933  001536  0E00               	movlw	0
  2934  001538  6E2C               	movwf	___flmul@a^0,c
  2935  00153A  0E00               	movlw	0
  2936  00153C  6E2D               	movwf	(___flmul@a+1)^0,c
  2937  00153E  0EC8               	movlw	200
  2938  001540  6E2E               	movwf	(___flmul@a+2)^0,c
  2939  001542  0E42               	movlw	66
  2940  001544  6E2F               	movwf	(___flmul@a+3)^0,c
  2941  001546  EC1A  F00F         	call	___flmul	;wreg free
  2942  00154A  C028  F08C         	movff	?___flmul,_detect_color$3240
  2943  00154E  C029  F08D         	movff	?___flmul+1,_detect_color$3240+1
  2944  001552  C02A  F08E         	movff	?___flmul+2,_detect_color$3240+2
  2945  001556  C02B  F08F         	movff	?___flmul+3,_detect_color$3240+3
  2946  00155A  C08C  F066         	movff	_detect_color$3240,lroundf@x
  2947  00155E  C08D  F067         	movff	_detect_color$3240+1,lroundf@x+1
  2948  001562  C08E  F068         	movff	_detect_color$3240+2,lroundf@x+2
  2949  001566  C08F  F069         	movff	_detect_color$3240+3,lroundf@x+3
  2950  00156A  EC75  F029         	call	_lroundf	;wreg free
  2951  00156E  C066  F087         	movff	?_lroundf,detect_color@BB
  2952  001572  C067  F088         	movff	?_lroundf+1,detect_color@BB+1
  2953  001576                     
  2954                           ;color.c: 311:     _delay((unsigned long)((50)*(64000000/4000.0)));
  2955  001576  0E05               	movlw	5
  2956  001578  0100               	movlb	0	; () banked
  2957  00157A  6F76               	movwf	(??_detect_color+1)& (0+255),b
  2958  00157C  0E0F               	movlw	15
  2959  00157E  6F75               	movwf	??_detect_color& (0+255),b
  2960  001580  0EF1               	movlw	241
  2961  001582                     u5807:
  2962  001582  2EE8               	decfsz	wreg,f,c
  2963  001584  D7FE               	bra	u5807
  2964  001586  2F75               	decfsz	??_detect_color& (0+255),f,b
  2965  001588  D7FC               	bra	u5807
  2966  00158A  2F76               	decfsz	(??_detect_color+1)& (0+255),f,b
  2967  00158C  D7FA               	bra	u5807
  2968  00158E                     
  2969                           ;color.c: 314:     if (compare(0, BR, 70)){
  2970  00158E  0E00               	movlw	0
  2971  001590  0100               	movlb	0	; () banked
  2972  001592  6F6B               	movwf	(compare@lower+1)& (0+255),b
  2973  001594  0E00               	movlw	0
  2974  001596  6F6A               	movwf	compare@lower& (0+255),b
  2975  001598  C085  F06C         	movff	detect_color@BR,compare@value2compare
  2976  00159C  C086  F06D         	movff	detect_color@BR+1,compare@value2compare+1
  2977  0015A0  0E00               	movlw	0
  2978  0015A2  6F6F               	movwf	(compare@upper+1)& (0+255),b
  2979  0015A4  0E46               	movlw	70
  2980  0015A6  6F6E               	movwf	compare@upper& (0+255),b
  2981  0015A8  EC58  F029         	call	_compare	;wreg free
  2982  0015AC  0900               	iorlw	0
  2983  0015AE  B4D8               	btfsc	status,2,c
  2984  0015B0  EFDC  F00A         	goto	u4981
  2985  0015B4  EFDE  F00A         	goto	u4980
  2986  0015B8                     u4981:
  2987  0015B8  EF4F  F00B         	goto	l4966
  2988  0015BC                     u4980:
  2989  0015BC                     
  2990                           ;color.c: 316:          if (compare(0, lroundf((float)(GG + BG)/BB * 200), 414)){color =
      +                           3;}
  2991  0015BC  C087  F001         	movff	detect_color@BB,___xxtofl@val
  2992  0015C0  C088  F002         	movff	detect_color@BB+1,___xxtofl@val+1
  2993  0015C4  6A03               	clrf	(___xxtofl@val+2)^0,c
  2994  0015C6  6A04               	clrf	(___xxtofl@val+3)^0,c
  2995  0015C8  0E00               	movlw	0
  2996  0015CA  EC9E  F01C         	call	___xxtofl
  2997  0015CE  C001  F013         	movff	?___xxtofl,___fldiv@a
  2998  0015D2  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  2999  0015D6  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  3000  0015DA  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  3001  0015DE  0100               	movlb	0	; () banked
  3002  0015E0  5189               	movf	detect_color@BG& (0+255),w,b
  3003  0015E2  2581               	addwf	detect_color@GG& (0+255),w,b
  3004  0015E4  6F75               	movwf	??_detect_color& (0+255),b
  3005  0015E6  518A               	movf	(detect_color@BG+1)& (0+255),w,b
  3006  0015E8  2182               	addwfc	(detect_color@GG+1)& (0+255),w,b
  3007  0015EA  6F76               	movwf	(??_detect_color+1)& (0+255),b
  3008  0015EC  C075  F001         	movff	??_detect_color,___xxtofl@val
  3009  0015F0  C076  F002         	movff	??_detect_color+1,___xxtofl@val+1
  3010  0015F4  6A03               	clrf	(___xxtofl@val+2)^0,c
  3011  0015F6  6A04               	clrf	(___xxtofl@val+3)^0,c
  3012  0015F8  0E00               	movlw	0
  3013  0015FA  EC9E  F01C         	call	___xxtofl
  3014  0015FE  C001  F00F         	movff	?___xxtofl,___fldiv@b
  3015  001602  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  3016  001606  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  3017  00160A  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  3018  00160E  EC06  F013         	call	___fldiv	;wreg free
  3019  001612  C00F  F028         	movff	?___fldiv,___flmul@b
  3020  001616  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  3021  00161A  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  3022  00161E  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  3023  001622  0E00               	movlw	0
  3024  001624  6E2C               	movwf	___flmul@a^0,c
  3025  001626  0E00               	movlw	0
  3026  001628  6E2D               	movwf	(___flmul@a+1)^0,c
  3027  00162A  0E48               	movlw	72
  3028  00162C  6E2E               	movwf	(___flmul@a+2)^0,c
  3029  00162E  0E43               	movlw	67
  3030  001630  6E2F               	movwf	(___flmul@a+3)^0,c
  3031  001632  EC1A  F00F         	call	___flmul	;wreg free
  3032  001636  C028  F08C         	movff	?___flmul,_detect_color$3240
  3033  00163A  C029  F08D         	movff	?___flmul+1,_detect_color$3240+1
  3034  00163E  C02A  F08E         	movff	?___flmul+2,_detect_color$3240+2
  3035  001642  C02B  F08F         	movff	?___flmul+3,_detect_color$3240+3
  3036                           
  3037                           ;color.c: 316:          if (compare(0, lroundf((float)(GG + BG)/BB * 200), 414)){color =
      +                           3;}
  3038  001646  0E00               	movlw	0
  3039  001648  0100               	movlb	0	; () banked
  3040  00164A  6F6B               	movwf	(compare@lower+1)& (0+255),b
  3041  00164C  0E00               	movlw	0
  3042  00164E  6F6A               	movwf	compare@lower& (0+255),b
  3043  001650  C08C  F066         	movff	_detect_color$3240,lroundf@x
  3044  001654  C08D  F067         	movff	_detect_color$3240+1,lroundf@x+1
  3045  001658  C08E  F068         	movff	_detect_color$3240+2,lroundf@x+2
  3046  00165C  C08F  F069         	movff	_detect_color$3240+3,lroundf@x+3
  3047  001660  EC75  F029         	call	_lroundf	;wreg free
  3048  001664  C066  F06C         	movff	?_lroundf,compare@value2compare
  3049  001668  C067  F06D         	movff	?_lroundf+1,compare@value2compare+1
  3050  00166C  0E01               	movlw	1
  3051  00166E  0100               	movlb	0	; () banked
  3052  001670  6F6F               	movwf	(compare@upper+1)& (0+255),b
  3053  001672  0E9E               	movlw	158
  3054  001674  6F6E               	movwf	compare@upper& (0+255),b
  3055  001676  EC58  F029         	call	_compare	;wreg free
  3056  00167A  0900               	iorlw	0
  3057  00167C  B4D8               	btfsc	status,2,c
  3058  00167E  EF43  F00B         	goto	u4991
  3059  001682  EF45  F00B         	goto	u4990
  3060  001686                     u4991:
  3061  001686  EF4A  F00B         	goto	l4964
  3062  00168A                     u4990:
  3063  00168A  0E03               	movlw	3
  3064  00168C  0100               	movlb	0	; () banked
  3065  00168E  6F8B               	movwf	detect_color@color& (0+255),b
  3066  001690  EF30  F00C         	goto	l4996
  3067  001694                     l4964:
  3068  001694  0E02               	movlw	2
  3069  001696  0100               	movlb	0	; () banked
  3070  001698  6F8B               	movwf	detect_color@color& (0+255),b
  3071  00169A  EF30  F00C         	goto	l4996
  3072  00169E                     l4966:
  3073                           
  3074                           ;color.c: 320:         if (compare(0, BG, 75)){
  3075  00169E  0E00               	movlw	0
  3076  0016A0  0100               	movlb	0	; () banked
  3077  0016A2  6F6B               	movwf	(compare@lower+1)& (0+255),b
  3078  0016A4  0E00               	movlw	0
  3079  0016A6  6F6A               	movwf	compare@lower& (0+255),b
  3080  0016A8  C089  F06C         	movff	detect_color@BG,compare@value2compare
  3081  0016AC  C08A  F06D         	movff	detect_color@BG+1,compare@value2compare+1
  3082  0016B0  0E00               	movlw	0
  3083  0016B2  6F6F               	movwf	(compare@upper+1)& (0+255),b
  3084  0016B4  0E4B               	movlw	75
  3085  0016B6  6F6E               	movwf	compare@upper& (0+255),b
  3086  0016B8  EC58  F029         	call	_compare	;wreg free
  3087  0016BC  0900               	iorlw	0
  3088  0016BE  B4D8               	btfsc	status,2,c
  3089  0016C0  EF64  F00B         	goto	u5001
  3090  0016C4  EF66  F00B         	goto	u5000
  3091  0016C8                     u5001:
  3092  0016C8  EFE0  F00B         	goto	l4978
  3093  0016CC                     u5000:
  3094  0016CC                     
  3095                           ;color.c: 322:             if (compare(0, lroundf((float)RR/RG * 500), 670)){
  3096  0016CC  C07D  F001         	movff	detect_color@RG,___xxtofl@val
  3097  0016D0  C07E  F002         	movff	detect_color@RG+1,___xxtofl@val+1
  3098  0016D4  6A03               	clrf	(___xxtofl@val+2)^0,c
  3099  0016D6  6A04               	clrf	(___xxtofl@val+3)^0,c
  3100  0016D8  0E00               	movlw	0
  3101  0016DA  EC9E  F01C         	call	___xxtofl
  3102  0016DE  C001  F013         	movff	?___xxtofl,___fldiv@a
  3103  0016E2  C002  F014         	movff	?___xxtofl+1,___fldiv@a+1
  3104  0016E6  C003  F015         	movff	?___xxtofl+2,___fldiv@a+2
  3105  0016EA  C004  F016         	movff	?___xxtofl+3,___fldiv@a+3
  3106  0016EE  C083  F001         	movff	detect_color@RR,___xxtofl@val
  3107  0016F2  C084  F002         	movff	detect_color@RR+1,___xxtofl@val+1
  3108  0016F6  6A03               	clrf	(___xxtofl@val+2)^0,c
  3109  0016F8  6A04               	clrf	(___xxtofl@val+3)^0,c
  3110  0016FA  0E00               	movlw	0
  3111  0016FC  EC9E  F01C         	call	___xxtofl
  3112  001700  C001  F00F         	movff	?___xxtofl,___fldiv@b
  3113  001704  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  3114  001708  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  3115  00170C  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  3116  001710  EC06  F013         	call	___fldiv	;wreg free
  3117  001714  C00F  F028         	movff	?___fldiv,___flmul@b
  3118  001718  C010  F029         	movff	?___fldiv+1,___flmul@b+1
  3119  00171C  C011  F02A         	movff	?___fldiv+2,___flmul@b+2
  3120  001720  C012  F02B         	movff	?___fldiv+3,___flmul@b+3
  3121  001724  0E00               	movlw	0
  3122  001726  6E2C               	movwf	___flmul@a^0,c
  3123  001728  0E00               	movlw	0
  3124  00172A  6E2D               	movwf	(___flmul@a+1)^0,c
  3125  00172C  0EFA               	movlw	250
  3126  00172E  6E2E               	movwf	(___flmul@a+2)^0,c
  3127  001730  0E43               	movlw	67
  3128  001732  6E2F               	movwf	(___flmul@a+3)^0,c
  3129  001734  EC1A  F00F         	call	___flmul	;wreg free
  3130  001738  C028  F08C         	movff	?___flmul,_detect_color$3240
  3131  00173C  C029  F08D         	movff	?___flmul+1,_detect_color$3240+1
  3132  001740  C02A  F08E         	movff	?___flmul+2,_detect_color$3240+2
  3133  001744  C02B  F08F         	movff	?___flmul+3,_detect_color$3240+3
  3134                           
  3135                           ;color.c: 322:             if (compare(0, lroundf((float)RR/RG * 500), 670)){
  3136  001748  0E00               	movlw	0
  3137  00174A  0100               	movlb	0	; () banked
  3138  00174C  6F6B               	movwf	(compare@lower+1)& (0+255),b
  3139  00174E  0E00               	movlw	0
  3140  001750  6F6A               	movwf	compare@lower& (0+255),b
  3141  001752  C08C  F066         	movff	_detect_color$3240,lroundf@x
  3142  001756  C08D  F067         	movff	_detect_color$3240+1,lroundf@x+1
  3143  00175A  C08E  F068         	movff	_detect_color$3240+2,lroundf@x+2
  3144  00175E  C08F  F069         	movff	_detect_color$3240+3,lroundf@x+3
  3145  001762  EC75  F029         	call	_lroundf	;wreg free
  3146  001766  C066  F06C         	movff	?_lroundf,compare@value2compare
  3147  00176A  C067  F06D         	movff	?_lroundf+1,compare@value2compare+1
  3148  00176E  0E02               	movlw	2
  3149  001770  0100               	movlb	0	; () banked
  3150  001772  6F6F               	movwf	(compare@upper+1)& (0+255),b
  3151  001774  0E9E               	movlw	158
  3152  001776  6F6E               	movwf	compare@upper& (0+255),b
  3153  001778  EC58  F029         	call	_compare	;wreg free
  3154  00177C  0900               	iorlw	0
  3155  00177E  B4D8               	btfsc	status,2,c
  3156  001780  EFC4  F00B         	goto	u5011
  3157  001784  EFC6  F00B         	goto	u5010
  3158  001788                     u5011:
  3159  001788  EFDB  F00B         	goto	l4976
  3160  00178C                     u5010:
  3161  00178C                     
  3162                           ;color.c: 323:                 if (GR > 90){color = 6;}
  3163  00178C  0100               	movlb	0	; () banked
  3164  00178E  5180               	movf	(detect_color@GR+1)& (0+255),w,b
  3165  001790  E109               	bnz	u5020
  3166  001792  0E5B               	movlw	91
  3167  001794  5D7F               	subwf	detect_color@GR& (0+255),w,b
  3168  001796  A0D8               	btfss	status,0,c
  3169  001798  EFD0  F00B         	goto	u5021
  3170  00179C  EFD2  F00B         	goto	u5020
  3171  0017A0                     u5021:
  3172  0017A0  EFD6  F00B         	goto	l4974
  3173  0017A4                     u5020:
  3174  0017A4                     
  3175                           ; BSR set to: 0
  3176  0017A4  0E06               	movlw	6
  3177  0017A6  6F8B               	movwf	detect_color@color& (0+255),b
  3178  0017A8  EF30  F00C         	goto	l4996
  3179  0017AC                     l4974:
  3180  0017AC  0E00               	movlw	0
  3181  0017AE  0100               	movlb	0	; () banked
  3182  0017B0  6F8B               	movwf	detect_color@color& (0+255),b
  3183  0017B2  EF30  F00C         	goto	l4996
  3184  0017B6                     l4976:
  3185  0017B6  0E01               	movlw	1
  3186  0017B8  0100               	movlb	0	; () banked
  3187  0017BA  6F8B               	movwf	detect_color@color& (0+255),b
  3188  0017BC  EF30  F00C         	goto	l4996
  3189  0017C0                     l4978:
  3190                           
  3191                           ;color.c: 329:             if (compare(0, BR, 90)){
  3192  0017C0  0E00               	movlw	0
  3193  0017C2  0100               	movlb	0	; () banked
  3194  0017C4  6F6B               	movwf	(compare@lower+1)& (0+255),b
  3195  0017C6  0E00               	movlw	0
  3196  0017C8  6F6A               	movwf	compare@lower& (0+255),b
  3197  0017CA  C085  F06C         	movff	detect_color@BR,compare@value2compare
  3198  0017CE  C086  F06D         	movff	detect_color@BR+1,compare@value2compare+1
  3199  0017D2  0E00               	movlw	0
  3200  0017D4  6F6F               	movwf	(compare@upper+1)& (0+255),b
  3201  0017D6  0E5A               	movlw	90
  3202  0017D8  6F6E               	movwf	compare@upper& (0+255),b
  3203  0017DA  EC58  F029         	call	_compare	;wreg free
  3204  0017DE  0900               	iorlw	0
  3205  0017E0  B4D8               	btfsc	status,2,c
  3206  0017E2  EFF5  F00B         	goto	u5031
  3207  0017E6  EFF7  F00B         	goto	u5030
  3208  0017EA                     u5031:
  3209  0017EA  EF07  F00C         	goto	l4986
  3210  0017EE                     u5030:
  3211  0017EE                     
  3212                           ;color.c: 330:                 if (BG > 90){color = 7;}
  3213  0017EE  0100               	movlb	0	; () banked
  3214  0017F0  518A               	movf	(detect_color@BG+1)& (0+255),w,b
  3215  0017F2  E109               	bnz	u5040
  3216  0017F4  0E5B               	movlw	91
  3217  0017F6  5D89               	subwf	detect_color@BG& (0+255),w,b
  3218  0017F8  A0D8               	btfss	status,0,c
  3219  0017FA  EF01  F00C         	goto	u5041
  3220  0017FE  EF03  F00C         	goto	u5040
  3221  001802                     u5041:
  3222  001802  EFD6  F00B         	goto	l4974
  3223  001806                     u5040:
  3224  001806                     
  3225                           ; BSR set to: 0
  3226  001806  0E07               	movlw	7
  3227  001808  6F8B               	movwf	detect_color@color& (0+255),b
  3228  00180A  EF30  F00C         	goto	l4996
  3229  00180E                     l4986:
  3230                           
  3231                           ;color.c: 334:                 if (BG < BB){color = 5;}
  3232  00180E  0100               	movlb	0	; () banked
  3233  001810  5187               	movf	detect_color@BB& (0+255),w,b
  3234  001812  5D89               	subwf	detect_color@BG& (0+255),w,b
  3235  001814  5188               	movf	(detect_color@BB+1)& (0+255),w,b
  3236  001816  598A               	subwfb	(detect_color@BG+1)& (0+255),w,b
  3237  001818  B0D8               	btfsc	status,0,c
  3238  00181A  EF11  F00C         	goto	u5051
  3239  00181E  EF13  F00C         	goto	u5050
  3240  001822                     u5051:
  3241  001822  EF17  F00C         	goto	l4990
  3242  001826                     u5050:
  3243  001826                     
  3244                           ; BSR set to: 0
  3245  001826  0E05               	movlw	5
  3246  001828  6F8B               	movwf	detect_color@color& (0+255),b
  3247  00182A  EF30  F00C         	goto	l4996
  3248  00182E                     l4990:
  3249                           
  3250                           ; BSR set to: 0
  3251                           ;color.c: 336:                     if (compare(0, BB, 90)){color = 4;}
  3252  00182E  0E00               	movlw	0
  3253  001830  6F6B               	movwf	(compare@lower+1)& (0+255),b
  3254  001832  0E00               	movlw	0
  3255  001834  6F6A               	movwf	compare@lower& (0+255),b
  3256  001836  C087  F06C         	movff	detect_color@BB,compare@value2compare
  3257  00183A  C088  F06D         	movff	detect_color@BB+1,compare@value2compare+1
  3258  00183E  0E00               	movlw	0
  3259  001840  6F6F               	movwf	(compare@upper+1)& (0+255),b
  3260  001842  0E5A               	movlw	90
  3261  001844  6F6E               	movwf	compare@upper& (0+255),b
  3262  001846  EC58  F029         	call	_compare	;wreg free
  3263  00184A  0900               	iorlw	0
  3264  00184C  B4D8               	btfsc	status,2,c
  3265  00184E  EF2B  F00C         	goto	u5061
  3266  001852  EF2D  F00C         	goto	u5060
  3267  001856                     u5061:
  3268  001856  EFD6  F00B         	goto	l4974
  3269  00185A                     u5060:
  3270  00185A  0E04               	movlw	4
  3271  00185C  0100               	movlb	0	; () banked
  3272  00185E  6F8B               	movwf	detect_color@color& (0+255),b
  3273  001860                     l4996:
  3274                           
  3275                           ; BSR set to: 0
  3276                           ;color.c: 343:     if (compare(95, BR, 105) && compare(95,BG,105) && compare(95,BB,105))
      +                          {color = 8;}
  3277  001860  0E00               	movlw	0
  3278  001862  6F6B               	movwf	(compare@lower+1)& (0+255),b
  3279  001864  0E5F               	movlw	95
  3280  001866  6F6A               	movwf	compare@lower& (0+255),b
  3281  001868  C085  F06C         	movff	detect_color@BR,compare@value2compare
  3282  00186C  C086  F06D         	movff	detect_color@BR+1,compare@value2compare+1
  3283  001870  0E00               	movlw	0
  3284  001872  6F6F               	movwf	(compare@upper+1)& (0+255),b
  3285  001874  0E69               	movlw	105
  3286  001876  6F6E               	movwf	compare@upper& (0+255),b
  3287  001878  EC58  F029         	call	_compare	;wreg free
  3288  00187C  0900               	iorlw	0
  3289  00187E  B4D8               	btfsc	status,2,c
  3290  001880  EF44  F00C         	goto	u5071
  3291  001884  EF46  F00C         	goto	u5070
  3292  001888                     u5071:
  3293  001888  EF77  F00C         	goto	l5004
  3294  00188C                     u5070:
  3295  00188C  0E00               	movlw	0
  3296  00188E  0100               	movlb	0	; () banked
  3297  001890  6F6B               	movwf	(compare@lower+1)& (0+255),b
  3298  001892  0E5F               	movlw	95
  3299  001894  6F6A               	movwf	compare@lower& (0+255),b
  3300  001896  C089  F06C         	movff	detect_color@BG,compare@value2compare
  3301  00189A  C08A  F06D         	movff	detect_color@BG+1,compare@value2compare+1
  3302  00189E  0E00               	movlw	0
  3303  0018A0  6F6F               	movwf	(compare@upper+1)& (0+255),b
  3304  0018A2  0E69               	movlw	105
  3305  0018A4  6F6E               	movwf	compare@upper& (0+255),b
  3306  0018A6  EC58  F029         	call	_compare	;wreg free
  3307  0018AA  0900               	iorlw	0
  3308  0018AC  B4D8               	btfsc	status,2,c
  3309  0018AE  EF5B  F00C         	goto	u5081
  3310  0018B2  EF5D  F00C         	goto	u5080
  3311  0018B6                     u5081:
  3312  0018B6  EF77  F00C         	goto	l5004
  3313  0018BA                     u5080:
  3314  0018BA  0E00               	movlw	0
  3315  0018BC  0100               	movlb	0	; () banked
  3316  0018BE  6F6B               	movwf	(compare@lower+1)& (0+255),b
  3317  0018C0  0E5F               	movlw	95
  3318  0018C2  6F6A               	movwf	compare@lower& (0+255),b
  3319  0018C4  C087  F06C         	movff	detect_color@BB,compare@value2compare
  3320  0018C8  C088  F06D         	movff	detect_color@BB+1,compare@value2compare+1
  3321  0018CC  0E00               	movlw	0
  3322  0018CE  6F6F               	movwf	(compare@upper+1)& (0+255),b
  3323  0018D0  0E69               	movlw	105
  3324  0018D2  6F6E               	movwf	compare@upper& (0+255),b
  3325  0018D4  EC58  F029         	call	_compare	;wreg free
  3326  0018D8  0900               	iorlw	0
  3327  0018DA  B4D8               	btfsc	status,2,c
  3328  0018DC  EF72  F00C         	goto	u5091
  3329  0018E0  EF74  F00C         	goto	u5090
  3330  0018E4                     u5091:
  3331  0018E4  EF77  F00C         	goto	l5004
  3332  0018E8                     u5090:
  3333  0018E8  0E08               	movlw	8
  3334  0018EA  0100               	movlb	0	; () banked
  3335  0018EC  6F8B               	movwf	detect_color@color& (0+255),b
  3336  0018EE                     l5004:
  3337                           
  3338                           ;color.c: 344:     if (compare(0, BR, 25) && compare(0,RR,90)){color = 0;}
  3339  0018EE  0E00               	movlw	0
  3340  0018F0  0100               	movlb	0	; () banked
  3341  0018F2  6F6B               	movwf	(compare@lower+1)& (0+255),b
  3342  0018F4  0E00               	movlw	0
  3343  0018F6  6F6A               	movwf	compare@lower& (0+255),b
  3344  0018F8  C085  F06C         	movff	detect_color@BR,compare@value2compare
  3345  0018FC  C086  F06D         	movff	detect_color@BR+1,compare@value2compare+1
  3346  001900  0E00               	movlw	0
  3347  001902  6F6F               	movwf	(compare@upper+1)& (0+255),b
  3348  001904  0E19               	movlw	25
  3349  001906  6F6E               	movwf	compare@upper& (0+255),b
  3350  001908  EC58  F029         	call	_compare	;wreg free
  3351  00190C  0900               	iorlw	0
  3352  00190E  B4D8               	btfsc	status,2,c
  3353  001910  EF8C  F00C         	goto	u5101
  3354  001914  EF8E  F00C         	goto	u5100
  3355  001918                     u5101:
  3356  001918  EFA8  F00C         	goto	l5010
  3357  00191C                     u5100:
  3358  00191C  0E00               	movlw	0
  3359  00191E  0100               	movlb	0	; () banked
  3360  001920  6F6B               	movwf	(compare@lower+1)& (0+255),b
  3361  001922  0E00               	movlw	0
  3362  001924  6F6A               	movwf	compare@lower& (0+255),b
  3363  001926  C083  F06C         	movff	detect_color@RR,compare@value2compare
  3364  00192A  C084  F06D         	movff	detect_color@RR+1,compare@value2compare+1
  3365  00192E  0E00               	movlw	0
  3366  001930  6F6F               	movwf	(compare@upper+1)& (0+255),b
  3367  001932  0E5A               	movlw	90
  3368  001934  6F6E               	movwf	compare@upper& (0+255),b
  3369  001936  EC58  F029         	call	_compare	;wreg free
  3370  00193A  0900               	iorlw	0
  3371  00193C  B4D8               	btfsc	status,2,c
  3372  00193E  EFA3  F00C         	goto	u5111
  3373  001942  EFA5  F00C         	goto	u5110
  3374  001946                     u5111:
  3375  001946  EFA8  F00C         	goto	l5010
  3376  00194A                     u5110:
  3377  00194A  0E00               	movlw	0
  3378  00194C  0100               	movlb	0	; () banked
  3379  00194E  6F8B               	movwf	detect_color@color& (0+255),b
  3380  001950                     l5010:
  3381                           
  3382                           ;color.c: 346:     if (color == 8) {toggle_light(2,1);}
  3383  001950  0E08               	movlw	8
  3384  001952  0100               	movlb	0	; () banked
  3385  001954  198B               	xorwf	detect_color@color& (0+255),w,b
  3386  001956  A4D8               	btfss	status,2,c
  3387  001958  EFB0  F00C         	goto	u5121
  3388  00195C  EFB2  F00C         	goto	u5120
  3389  001960                     u5121:
  3390  001960  EFB7  F00C         	goto	l5014
  3391  001964                     u5120:
  3392  001964                     
  3393                           ; BSR set to: 0
  3394  001964  0E01               	movlw	1
  3395  001966  6E01               	movwf	toggle_light@toggletime^0,c
  3396  001968  0E02               	movlw	2
  3397  00196A  ECB0  F017         	call	_toggle_light
  3398  00196E                     l5014:
  3399                           
  3400                           ;color.c: 348:     return color;
  3401  00196E  0100               	movlb	0	; () banked
  3402  001970  518B               	movf	detect_color@color& (0+255),w,b
  3403  001972                     
  3404                           ; BSR set to: 0
  3405  001972  0012               	return		;funcret
  3406  001974                     __end_of_detect_color:
  3407                           	callstack 0
  3408                           
  3409 ;; *************** function _compare *****************
  3410 ;; Defined at:
  3411 ;;		line 351 in file "color.c"
  3412 ;; Parameters:    Size  Location     Type
  3413 ;;  lower           2   10[BANK0 ] unsigned int 
  3414 ;;  value2compar    2   12[BANK0 ] unsigned int 
  3415 ;;  upper           2   14[BANK0 ] unsigned int 
  3416 ;; Auto vars:     Size  Location     Type
  3417 ;;  result          1   16[BANK0 ] unsigned char 
  3418 ;; Return value:  Size  Location     Type
  3419 ;;                  1    wreg      unsigned char 
  3420 ;; Registers used:
  3421 ;;		wreg, status,2, status,0
  3422 ;; Tracked objects:
  3423 ;;		On entry : 0/0
  3424 ;;		On exit  : 0/0
  3425 ;;		Unchanged: 0/0
  3426 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3427 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3428 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3429 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3430 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3431 ;;Total ram usage:        7 bytes
  3432 ;; Hardware stack levels used: 1
  3433 ;; Hardware stack levels required when called: 1
  3434 ;; This function calls:
  3435 ;;		Nothing
  3436 ;; This function is called by:
  3437 ;;		_detect_color
  3438 ;; This function uses a non-reentrant model
  3439 ;;
  3440                           
  3441                           	psect	text6
  3442  0052B0                     __ptext6:
  3443                           	callstack 0
  3444  0052B0                     _compare:
  3445                           	callstack 27
  3446  0052B0                     
  3447                           ;color.c: 351: unsigned char compare(unsigned int lower, unsigned int value2compare, uns
      +                          igned int upper);color.c: 352: {;color.c: 353:     unsigned char result = 0;
  3448  0052B0  0E00               	movlw	0
  3449  0052B2  0100               	movlb	0	; () banked
  3450  0052B4  6F70               	movwf	compare@result& (0+255),b
  3451  0052B6                     
  3452                           ; BSR set to: 0
  3453                           ;color.c: 354:     if (lower < value2compare && value2compare <= upper){result = 1;}
  3454  0052B6  516C               	movf	compare@value2compare& (0+255),w,b
  3455  0052B8  5D6A               	subwf	compare@lower& (0+255),w,b
  3456  0052BA  516D               	movf	(compare@value2compare+1)& (0+255),w,b
  3457  0052BC  596B               	subwfb	(compare@lower+1)& (0+255),w,b
  3458  0052BE  B0D8               	btfsc	status,0,c
  3459  0052C0  EF64  F029         	goto	u4571
  3460  0052C4  EF66  F029         	goto	u4570
  3461  0052C8                     u4571:
  3462  0052C8  EF73  F029         	goto	l172
  3463  0052CC                     u4570:
  3464  0052CC                     
  3465                           ; BSR set to: 0
  3466  0052CC  516C               	movf	compare@value2compare& (0+255),w,b
  3467  0052CE  5D6E               	subwf	compare@upper& (0+255),w,b
  3468  0052D0  516D               	movf	(compare@value2compare+1)& (0+255),w,b
  3469  0052D2  596F               	subwfb	(compare@upper+1)& (0+255),w,b
  3470  0052D4  A0D8               	btfss	status,0,c
  3471  0052D6  EF6F  F029         	goto	u4581
  3472  0052DA  EF71  F029         	goto	u4580
  3473  0052DE                     u4581:
  3474  0052DE  EF73  F029         	goto	l172
  3475  0052E2                     u4580:
  3476  0052E2                     
  3477                           ; BSR set to: 0
  3478  0052E2  0E01               	movlw	1
  3479  0052E4  6F70               	movwf	compare@result& (0+255),b
  3480  0052E6                     l172:
  3481                           
  3482                           ; BSR set to: 0
  3483                           ;color.c: 355:     return result;
  3484  0052E6  5170               	movf	compare@result& (0+255),w,b
  3485  0052E8                     
  3486                           ; BSR set to: 0
  3487  0052E8  0012               	return		;funcret
  3488  0052EA                     __end_of_compare:
  3489                           	callstack 0
  3490                           
  3491 ;; *************** function _color_data_collection *****************
  3492 ;; Defined at:
  3493 ;;		line 200 in file "color.c"
  3494 ;; Parameters:    Size  Location     Type
  3495 ;;  m               2   89[COMRAM] PTR struct color_rgb
  3496 ;;		 -> main@rgb(8), 
  3497 ;; Auto vars:     Size  Location     Type
  3498 ;;  x               2  132[BANK0 ] int 
  3499 ;;  k               2  130[BANK0 ] int 
  3500 ;;  j               2  128[BANK0 ] int 
  3501 ;;  i               2  126[BANK0 ] int 
  3502 ;; Return value:  Size  Location     Type
  3503 ;;                  1    wreg      void 
  3504 ;; Registers used:
  3505 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3506 ;; Tracked objects:
  3507 ;;		On entry : 0/0
  3508 ;;		On exit  : 0/0
  3509 ;;		Unchanged: 0/0
  3510 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3511 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3512 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3513 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3514 ;;      Totals:         4       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3515 ;;Total ram usage:       12 bytes
  3516 ;; Hardware stack levels used: 1
  3517 ;; Hardware stack levels required when called: 10
  3518 ;; This function calls:
  3519 ;;		_LED_B
  3520 ;;		_LED_C
  3521 ;;		_LED_G
  3522 ;;		_LED_R
  3523 ;;		_color_display
  3524 ;;		_color_predict
  3525 ;;		_read_color
  3526 ;; This function is called by:
  3527 ;;		_test_function
  3528 ;; This function uses a non-reentrant model
  3529 ;;
  3530                           
  3531                           	psect	text7
  3532  0035D2                     __ptext7:
  3533                           	callstack 0
  3534  0035D2                     _color_data_collection:
  3535                           	callstack 19
  3536  0035D2                     
  3537                           ;color.c: 202:     int i = 0; int j = 0; int k = 0; int x = 0;
  3538  0035D2  0E00               	movlw	0
  3539  0035D4  0100               	movlb	0	; () banked
  3540  0035D6  6FDF               	movwf	(color_data_collection@i+1)& (0+255),b
  3541  0035D8  0E00               	movlw	0
  3542  0035DA  6FDE               	movwf	color_data_collection@i& (0+255),b
  3543  0035DC  0E00               	movlw	0
  3544  0035DE  6FE3               	movwf	(color_data_collection@k+1)& (0+255),b
  3545  0035E0  0E00               	movlw	0
  3546  0035E2  6FE2               	movwf	color_data_collection@k& (0+255),b
  3547  0035E4  0E00               	movlw	0
  3548  0035E6  6FE5               	movwf	(color_data_collection@x+1)& (0+255),b
  3549  0035E8  0E00               	movlw	0
  3550  0035EA  6FE4               	movwf	color_data_collection@x& (0+255),b
  3551                           
  3552                           ;color.c: 203:     for (i = 0; i <5; ++i){
  3553  0035EC  0E00               	movlw	0
  3554  0035EE  6FDF               	movwf	(color_data_collection@i+1)& (0+255),b
  3555  0035F0  0E00               	movlw	0
  3556  0035F2  6FDE               	movwf	color_data_collection@i& (0+255),b
  3557  0035F4                     l4772:
  3558                           
  3559                           ; BSR set to: 0
  3560                           ;color.c: 204:         LED_C();
  3561  0035F4  EC8E  F02A         	call	_LED_C	;wreg free
  3562  0035F8                     
  3563                           ;color.c: 205:         read_color(m);
  3564  0035F8  C05A  F00C         	movff	color_data_collection@m,read_color@m
  3565  0035FC  C05B  F00D         	movff	color_data_collection@m+1,read_color@m+1
  3566  003600  EC4C  F027         	call	_read_color	;wreg free
  3567  003604                     
  3568                           ;color.c: 206:         color_display(m);
  3569  003604  C05A  F058         	movff	color_data_collection@m,color_display@m
  3570  003608  C05B  F059         	movff	color_data_collection@m+1,color_display@m+1
  3571  00360C  ECE3  F026         	call	_color_display	;wreg free
  3572  003610                     
  3573                           ;color.c: 207:         _delay((unsigned long)((100)*(64000000/4000.0)));
  3574  003610  0E09               	movlw	9
  3575  003612  6E5D               	movwf	(??_color_data_collection+1)^0,c
  3576  003614  0E1E               	movlw	30
  3577  003616  6E5C               	movwf	??_color_data_collection^0,c
  3578  003618  0EE4               	movlw	228
  3579  00361A                     u5817:
  3580  00361A  2EE8               	decfsz	wreg,f,c
  3581  00361C  D7FE               	bra	u5817
  3582  00361E  2E5C               	decfsz	??_color_data_collection^0,f,c
  3583  003620  D7FC               	bra	u5817
  3584  003622  2E5D               	decfsz	(??_color_data_collection+1)^0,f,c
  3585  003624  D7FA               	bra	u5817
  3586  003626  D000               	nop2	
  3587  003628                     
  3588                           ;color.c: 208:     }
  3589  003628  0100               	movlb	0	; () banked
  3590  00362A  4BDE               	infsnz	color_data_collection@i& (0+255),f,b
  3591  00362C  2BDF               	incf	(color_data_collection@i+1)& (0+255),f,b
  3592  00362E                     
  3593                           ; BSR set to: 0
  3594  00362E  BFDF               	btfsc	(color_data_collection@i+1)& (0+255),7,b
  3595  003630  EF23  F01B         	goto	u4941
  3596  003634  51DF               	movf	(color_data_collection@i+1)& (0+255),w,b
  3597  003636  E109               	bnz	u4940
  3598  003638  0E05               	movlw	5
  3599  00363A  5DDE               	subwf	color_data_collection@i& (0+255),w,b
  3600  00363C  A0D8               	btfss	status,0,c
  3601  00363E  EF23  F01B         	goto	u4941
  3602  003642  EF25  F01B         	goto	u4940
  3603  003646                     u4941:
  3604  003646  EFFA  F01A         	goto	l4772
  3605  00364A                     u4940:
  3606  00364A                     
  3607                           ; BSR set to: 0
  3608                           ;color.c: 209:     color_predict(00000);
  3609  00364A  0E00               	movlw	0
  3610  00364C  ECFB  F029         	call	_color_predict
  3611  003650                     
  3612                           ;color.c: 210:     for (j = 0; j < 5; ++j){
  3613  003650  0E00               	movlw	0
  3614  003652  0100               	movlb	0	; () banked
  3615  003654  6FE1               	movwf	(color_data_collection@j+1)& (0+255),b
  3616  003656  0E00               	movlw	0
  3617  003658  6FE0               	movwf	color_data_collection@j& (0+255),b
  3618  00365A                     l4792:
  3619                           
  3620                           ; BSR set to: 0
  3621                           ;color.c: 211:         LED_R();
  3622  00365A  EC4E  F02A         	call	_LED_R	;wreg free
  3623  00365E                     
  3624                           ;color.c: 212:         read_color(m);
  3625  00365E  C05A  F00C         	movff	color_data_collection@m,read_color@m
  3626  003662  C05B  F00D         	movff	color_data_collection@m+1,read_color@m+1
  3627  003666  EC4C  F027         	call	_read_color	;wreg free
  3628  00366A                     
  3629                           ;color.c: 213:         color_display(m);
  3630  00366A  C05A  F058         	movff	color_data_collection@m,color_display@m
  3631  00366E  C05B  F059         	movff	color_data_collection@m+1,color_display@m+1
  3632  003672  ECE3  F026         	call	_color_display	;wreg free
  3633  003676                     
  3634                           ;color.c: 214:         _delay((unsigned long)((100)*(64000000/4000.0)));
  3635  003676  0E09               	movlw	9
  3636  003678  6E5D               	movwf	(??_color_data_collection+1)^0,c
  3637  00367A  0E1E               	movlw	30
  3638  00367C  6E5C               	movwf	??_color_data_collection^0,c
  3639  00367E  0EE4               	movlw	228
  3640  003680                     u5827:
  3641  003680  2EE8               	decfsz	wreg,f,c
  3642  003682  D7FE               	bra	u5827
  3643  003684  2E5C               	decfsz	??_color_data_collection^0,f,c
  3644  003686  D7FC               	bra	u5827
  3645  003688  2E5D               	decfsz	(??_color_data_collection+1)^0,f,c
  3646  00368A  D7FA               	bra	u5827
  3647  00368C  D000               	nop2	
  3648  00368E                     
  3649                           ;color.c: 215:     }
  3650  00368E  0100               	movlb	0	; () banked
  3651  003690  4BE0               	infsnz	color_data_collection@j& (0+255),f,b
  3652  003692  2BE1               	incf	(color_data_collection@j+1)& (0+255),f,b
  3653  003694                     
  3654                           ; BSR set to: 0
  3655  003694  BFE1               	btfsc	(color_data_collection@j+1)& (0+255),7,b
  3656  003696  EF56  F01B         	goto	u4951
  3657  00369A  51E1               	movf	(color_data_collection@j+1)& (0+255),w,b
  3658  00369C  E109               	bnz	u4950
  3659  00369E  0E05               	movlw	5
  3660  0036A0  5DE0               	subwf	color_data_collection@j& (0+255),w,b
  3661  0036A2  A0D8               	btfss	status,0,c
  3662  0036A4  EF56  F01B         	goto	u4951
  3663  0036A8  EF58  F01B         	goto	u4950
  3664  0036AC                     u4951:
  3665  0036AC  EF2D  F01B         	goto	l4792
  3666  0036B0                     u4950:
  3667  0036B0                     
  3668                           ; BSR set to: 0
  3669                           ;color.c: 216:     color_predict(00000);
  3670  0036B0  0E00               	movlw	0
  3671  0036B2  ECFB  F029         	call	_color_predict
  3672  0036B6                     
  3673                           ;color.c: 217:     for (k = 0; k < 5; ++k){
  3674  0036B6  0E00               	movlw	0
  3675  0036B8  0100               	movlb	0	; () banked
  3676  0036BA  6FE3               	movwf	(color_data_collection@k+1)& (0+255),b
  3677  0036BC  0E00               	movlw	0
  3678  0036BE  6FE2               	movwf	color_data_collection@k& (0+255),b
  3679  0036C0                     l4812:
  3680                           
  3681                           ; BSR set to: 0
  3682                           ;color.c: 218:         LED_G();
  3683  0036C0  EC6E  F02A         	call	_LED_G	;wreg free
  3684  0036C4                     
  3685                           ;color.c: 219:         read_color(m);
  3686  0036C4  C05A  F00C         	movff	color_data_collection@m,read_color@m
  3687  0036C8  C05B  F00D         	movff	color_data_collection@m+1,read_color@m+1
  3688  0036CC  EC4C  F027         	call	_read_color	;wreg free
  3689  0036D0                     
  3690                           ;color.c: 220:         color_display(m);
  3691  0036D0  C05A  F058         	movff	color_data_collection@m,color_display@m
  3692  0036D4  C05B  F059         	movff	color_data_collection@m+1,color_display@m+1
  3693  0036D8  ECE3  F026         	call	_color_display	;wreg free
  3694  0036DC                     
  3695                           ;color.c: 221:         _delay((unsigned long)((100)*(64000000/4000.0)));
  3696  0036DC  0E09               	movlw	9
  3697  0036DE  6E5D               	movwf	(??_color_data_collection+1)^0,c
  3698  0036E0  0E1E               	movlw	30
  3699  0036E2  6E5C               	movwf	??_color_data_collection^0,c
  3700  0036E4  0EE4               	movlw	228
  3701  0036E6                     u5837:
  3702  0036E6  2EE8               	decfsz	wreg,f,c
  3703  0036E8  D7FE               	bra	u5837
  3704  0036EA  2E5C               	decfsz	??_color_data_collection^0,f,c
  3705  0036EC  D7FC               	bra	u5837
  3706  0036EE  2E5D               	decfsz	(??_color_data_collection+1)^0,f,c
  3707  0036F0  D7FA               	bra	u5837
  3708  0036F2  D000               	nop2	
  3709  0036F4                     
  3710                           ;color.c: 222:     }
  3711  0036F4  0100               	movlb	0	; () banked
  3712  0036F6  4BE2               	infsnz	color_data_collection@k& (0+255),f,b
  3713  0036F8  2BE3               	incf	(color_data_collection@k+1)& (0+255),f,b
  3714  0036FA                     
  3715                           ; BSR set to: 0
  3716  0036FA  BFE3               	btfsc	(color_data_collection@k+1)& (0+255),7,b
  3717  0036FC  EF89  F01B         	goto	u4961
  3718  003700  51E3               	movf	(color_data_collection@k+1)& (0+255),w,b
  3719  003702  E109               	bnz	u4960
  3720  003704  0E05               	movlw	5
  3721  003706  5DE2               	subwf	color_data_collection@k& (0+255),w,b
  3722  003708  A0D8               	btfss	status,0,c
  3723  00370A  EF89  F01B         	goto	u4961
  3724  00370E  EF8B  F01B         	goto	u4960
  3725  003712                     u4961:
  3726  003712  EF60  F01B         	goto	l4812
  3727  003716                     u4960:
  3728  003716                     
  3729                           ; BSR set to: 0
  3730                           ;color.c: 223:     color_predict(00000);
  3731  003716  0E00               	movlw	0
  3732  003718  ECFB  F029         	call	_color_predict
  3733  00371C                     
  3734                           ;color.c: 224:     for (x = 0; x < 5; ++x){
  3735  00371C  0E00               	movlw	0
  3736  00371E  0100               	movlb	0	; () banked
  3737  003720  6FE5               	movwf	(color_data_collection@x+1)& (0+255),b
  3738  003722  0E00               	movlw	0
  3739  003724  6FE4               	movwf	color_data_collection@x& (0+255),b
  3740  003726                     l4832:
  3741                           
  3742                           ; BSR set to: 0
  3743                           ;color.c: 225:         LED_B();
  3744  003726  EC7E  F02A         	call	_LED_B	;wreg free
  3745  00372A                     
  3746                           ;color.c: 226:         read_color(m);
  3747  00372A  C05A  F00C         	movff	color_data_collection@m,read_color@m
  3748  00372E  C05B  F00D         	movff	color_data_collection@m+1,read_color@m+1
  3749  003732  EC4C  F027         	call	_read_color	;wreg free
  3750  003736                     
  3751                           ;color.c: 227:         color_display(m);
  3752  003736  C05A  F058         	movff	color_data_collection@m,color_display@m
  3753  00373A  C05B  F059         	movff	color_data_collection@m+1,color_display@m+1
  3754  00373E  ECE3  F026         	call	_color_display	;wreg free
  3755  003742                     
  3756                           ;color.c: 228:         _delay((unsigned long)((100)*(64000000/4000.0)));
  3757  003742  0E09               	movlw	9
  3758  003744  6E5D               	movwf	(??_color_data_collection+1)^0,c
  3759  003746  0E1E               	movlw	30
  3760  003748  6E5C               	movwf	??_color_data_collection^0,c
  3761  00374A  0EE4               	movlw	228
  3762  00374C                     u5847:
  3763  00374C  2EE8               	decfsz	wreg,f,c
  3764  00374E  D7FE               	bra	u5847
  3765  003750  2E5C               	decfsz	??_color_data_collection^0,f,c
  3766  003752  D7FC               	bra	u5847
  3767  003754  2E5D               	decfsz	(??_color_data_collection+1)^0,f,c
  3768  003756  D7FA               	bra	u5847
  3769  003758  D000               	nop2	
  3770  00375A                     
  3771                           ;color.c: 229:     }
  3772  00375A  0100               	movlb	0	; () banked
  3773  00375C  4BE4               	infsnz	color_data_collection@x& (0+255),f,b
  3774  00375E  2BE5               	incf	(color_data_collection@x+1)& (0+255),f,b
  3775  003760                     
  3776                           ; BSR set to: 0
  3777  003760  BFE5               	btfsc	(color_data_collection@x+1)& (0+255),7,b
  3778  003762  EFBC  F01B         	goto	u4971
  3779  003766  51E5               	movf	(color_data_collection@x+1)& (0+255),w,b
  3780  003768  E109               	bnz	u4970
  3781  00376A  0E05               	movlw	5
  3782  00376C  5DE4               	subwf	color_data_collection@x& (0+255),w,b
  3783  00376E  A0D8               	btfss	status,0,c
  3784  003770  EFBC  F01B         	goto	u4971
  3785  003774  EFBE  F01B         	goto	u4970
  3786  003778                     u4971:
  3787  003778  EF93  F01B         	goto	l4832
  3788  00377C                     u4970:
  3789  00377C                     
  3790                           ; BSR set to: 0
  3791                           ;color.c: 230:     color_predict(1);
  3792  00377C  0E01               	movlw	1
  3793  00377E  ECFB  F029         	call	_color_predict
  3794  003782                     
  3795                           ;color.c: 231:     LED_C();
  3796  003782  EC8E  F02A         	call	_LED_C	;wreg free
  3797  003786  0012               	return		;funcret
  3798  003788                     __end_of_color_data_collection:
  3799                           	callstack 0
  3800                           
  3801 ;; *************** function _read_color *****************
  3802 ;; Defined at:
  3803 ;;		line 147 in file "color.c"
  3804 ;; Parameters:    Size  Location     Type
  3805 ;;  m               2   11[COMRAM] PTR struct color_rgb
  3806 ;;		 -> main@rgb(8), 
  3807 ;; Auto vars:     Size  Location     Type
  3808 ;;		None
  3809 ;; Return value:  Size  Location     Type
  3810 ;;                  1    wreg      void 
  3811 ;; Registers used:
  3812 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3813 ;; Tracked objects:
  3814 ;;		On entry : 0/0
  3815 ;;		On exit  : 0/0
  3816 ;;		Unchanged: 0/0
  3817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3818 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3819 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3820 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3821 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3822 ;;Total ram usage:        2 bytes
  3823 ;; Hardware stack levels used: 1
  3824 ;; Hardware stack levels required when called: 4
  3825 ;; This function calls:
  3826 ;;		_color_read_Blue
  3827 ;;		_color_read_Clear
  3828 ;;		_color_read_Green
  3829 ;;		_color_read_Red
  3830 ;; This function is called by:
  3831 ;;		_color_data_collection
  3832 ;;		_detect_color
  3833 ;;		_test_function
  3834 ;; This function uses a non-reentrant model
  3835 ;;
  3836                           
  3837                           	psect	text8
  3838  004E98                     __ptext8:
  3839                           	callstack 0
  3840  004E98                     _read_color:
  3841                           	callstack 24
  3842  004E98                     
  3843                           ;color.c: 147: void read_color (struct color_rgb *m);color.c: 148: {;color.c: 149:     m
      +                          ->R = color_read_Red();
  3844  004E98  ECCF  F027         	call	_color_read_Red	;wreg free
  3845  004E9C  C00C  FFD9         	movff	read_color@m,fsr2l
  3846  004EA0  C00D  FFDA         	movff	read_color@m+1,fsr2h
  3847  004EA4  C005  FFDE         	movff	?_color_read_Red,postinc2
  3848  004EA8  C006  FFDD         	movff	?_color_read_Red+1,postdec2
  3849                           
  3850                           ;color.c: 150:     m->B = color_read_Blue();
  3851  004EAC  EC1F  F028         	call	_color_read_Blue	;wreg free
  3852  004EB0  EE20 F004          	lfsr	2,4
  3853  004EB4  500C               	movf	read_color@m^0,w,c
  3854  004EB6  26D9               	addwf	fsr2l,f,c
  3855  004EB8  500D               	movf	(read_color@m+1)^0,w,c
  3856  004EBA  22DA               	addwfc	fsr2h,f,c
  3857  004EBC  C005  FFDE         	movff	?_color_read_Blue,postinc2
  3858  004EC0  C006  FFDD         	movff	?_color_read_Blue+1,postdec2
  3859                           
  3860                           ;color.c: 151:     m->G = color_read_Green();
  3861  004EC4  ECF7  F027         	call	_color_read_Green	;wreg free
  3862  004EC8  EE20 F002          	lfsr	2,2
  3863  004ECC  500C               	movf	read_color@m^0,w,c
  3864  004ECE  26D9               	addwf	fsr2l,f,c
  3865  004ED0  500D               	movf	(read_color@m+1)^0,w,c
  3866  004ED2  22DA               	addwfc	fsr2h,f,c
  3867  004ED4  C005  FFDE         	movff	?_color_read_Green,postinc2
  3868  004ED8  C006  FFDD         	movff	?_color_read_Green+1,postdec2
  3869                           
  3870                           ;color.c: 152:     m->C = color_read_Clear();
  3871  004EDC  EC47  F028         	call	_color_read_Clear	;wreg free
  3872  004EE0  EE20 F006          	lfsr	2,6
  3873  004EE4  500C               	movf	read_color@m^0,w,c
  3874  004EE6  26D9               	addwf	fsr2l,f,c
  3875  004EE8  500D               	movf	(read_color@m+1)^0,w,c
  3876  004EEA  22DA               	addwfc	fsr2h,f,c
  3877  004EEC  C005  FFDE         	movff	?_color_read_Clear,postinc2
  3878  004EF0  C006  FFDD         	movff	?_color_read_Clear+1,postdec2
  3879  004EF4  0012               	return		;funcret
  3880  004EF6                     __end_of_read_color:
  3881                           	callstack 0
  3882                           
  3883 ;; *************** function _color_predict *****************
  3884 ;; Defined at:
  3885 ;;		line 250 in file "color.c"
  3886 ;; Parameters:    Size  Location     Type
  3887 ;;  color           1    wreg     unsigned char 
  3888 ;; Auto vars:     Size  Location     Type
  3889 ;;  color           1  125[BANK0 ] unsigned char 
  3890 ;;  buf           100   25[BANK0 ] unsigned char [100]
  3891 ;; Return value:  Size  Location     Type
  3892 ;;                  1    wreg      void 
  3893 ;; Registers used:
  3894 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3895 ;; Tracked objects:
  3896 ;;		On entry : 0/0
  3897 ;;		On exit  : 0/0
  3898 ;;		Unchanged: 0/0
  3899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3900 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3901 ;;      Locals:         0     101       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3902 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3903 ;;      Totals:         0     101       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3904 ;;Total ram usage:      101 bytes
  3905 ;; Hardware stack levels used: 1
  3906 ;; Hardware stack levels required when called: 9
  3907 ;; This function calls:
  3908 ;;		_sendStringSerial4
  3909 ;;		_sprintf
  3910 ;; This function is called by:
  3911 ;;		_color_data_collection
  3912 ;;		_test_function
  3913 ;; This function uses a non-reentrant model
  3914 ;;
  3915                           
  3916                           	psect	text9
  3917  0053F6                     __ptext9:
  3918                           	callstack 0
  3919  0053F6                     _color_predict:
  3920                           	callstack 20
  3921                           
  3922                           ;incstack = 0
  3923                           ;color_predict@color stored from wreg
  3924  0053F6  0100               	movlb	0	; () banked
  3925  0053F8  6FDD               	movwf	color_predict@color& (0+255),b
  3926  0053FA                     
  3927                           ;color.c: 250: void color_predict(unsigned char color);color.c: 251: {;color.c: 252:    
      +                           char buf[100];;color.c: 253:     sprintf(buf,"\t%d\r\n", color);
  3928  0053FA  0E79               	movlw	low color_predict@buf
  3929  0053FC  0100               	movlb	0	; () banked
  3930  0053FE  6F60               	movwf	sprintf@s& (0+255),b
  3931  005400  0E00               	movlw	high color_predict@buf
  3932  005402  6F61               	movwf	(sprintf@s+1)& (0+255),b
  3933  005404  0E0D               	movlw	low (STR_1+8)
  3934  005406  6F62               	movwf	sprintf@fmt& (0+255),b
  3935  005408  0E0E               	movlw	high (STR_1+8)
  3936  00540A  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
  3937  00540C  C0DD  F064         	movff	color_predict@color,?_sprintf+4
  3938  005410  6B65               	clrf	(?_sprintf+5)& (0+255),b
  3939  005412  ECA6  F027         	call	_sprintf	;wreg free
  3940  005416                     
  3941                           ;color.c: 254:     sendStringSerial4(buf);
  3942  005416  0E79               	movlw	low color_predict@buf
  3943  005418  6E02               	movwf	sendStringSerial4@string^0,c
  3944  00541A  0E00               	movlw	high color_predict@buf
  3945  00541C  6E03               	movwf	(sendStringSerial4@string+1)^0,c
  3946  00541E  ECE3  F029         	call	_sendStringSerial4	;wreg free
  3947  005422  0012               	return		;funcret
  3948  005424                     __end_of_color_predict:
  3949                           	callstack 0
  3950                           
  3951 ;; *************** function _color_display *****************
  3952 ;; Defined at:
  3953 ;;		line 234 in file "color.c"
  3954 ;; Parameters:    Size  Location     Type
  3955 ;;  m               2   87[COMRAM] PTR struct color_rgb
  3956 ;;		 -> main@rgb(8), 
  3957 ;; Auto vars:     Size  Location     Type
  3958 ;;  buf           100   25[BANK0 ] unsigned char [100]
  3959 ;; Return value:  Size  Location     Type
  3960 ;;                  1    wreg      void 
  3961 ;; Registers used:
  3962 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3963 ;; Tracked objects:
  3964 ;;		On entry : 0/0
  3965 ;;		On exit  : 0/0
  3966 ;;		Unchanged: 0/0
  3967 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3968 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3969 ;;      Locals:         0     100       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3970 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3971 ;;      Totals:         2     100       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3972 ;;Total ram usage:      102 bytes
  3973 ;; Hardware stack levels used: 1
  3974 ;; Hardware stack levels required when called: 9
  3975 ;; This function calls:
  3976 ;;		_sendStringSerial4
  3977 ;;		_sprintf
  3978 ;; This function is called by:
  3979 ;;		_color_data_collection
  3980 ;;		_test_function
  3981 ;; This function uses a non-reentrant model
  3982 ;;
  3983                           
  3984                           	psect	text10
  3985  004DC6                     __ptext10:
  3986                           	callstack 0
  3987  004DC6                     _color_display:
  3988                           	callstack 20
  3989  004DC6                     
  3990                           ;color.c: 234: void color_display(struct color_rgb *m);color.c: 235: {;color.c: 236:    
      +                           char buf[100];;color.c: 237:     sprintf(buf,"%d\t%d\t%d\t%d\r\n", m->R, m->G, m->B, m-
      +                          >C);
  3991  004DC6  0E79               	movlw	low color_display@buf
  3992  004DC8  0100               	movlb	0	; () banked
  3993  004DCA  6F60               	movwf	sprintf@s& (0+255),b
  3994  004DCC  0E00               	movlw	high color_display@buf
  3995  004DCE  6F61               	movwf	(sprintf@s+1)& (0+255),b
  3996  004DD0  0E05               	movlw	low STR_1
  3997  004DD2  6F62               	movwf	sprintf@fmt& (0+255),b
  3998  004DD4  0E0E               	movlw	high STR_1
  3999  004DD6  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
  4000  004DD8  C058  FFD9         	movff	color_display@m,fsr2l
  4001  004DDC  C059  FFDA         	movff	color_display@m+1,fsr2h
  4002  004DE0  CFDE F064          	movff	postinc2,?_sprintf+4
  4003  004DE4  CFDD F065          	movff	postdec2,?_sprintf+5
  4004  004DE8  EE20 F002          	lfsr	2,2
  4005  004DEC  5058               	movf	color_display@m^0,w,c
  4006  004DEE  26D9               	addwf	fsr2l,f,c
  4007  004DF0  5059               	movf	(color_display@m+1)^0,w,c
  4008  004DF2  22DA               	addwfc	fsr2h,f,c
  4009  004DF4  CFDE F066          	movff	postinc2,?_sprintf+6
  4010  004DF8  CFDD F067          	movff	postdec2,?_sprintf+7
  4011  004DFC  EE20 F004          	lfsr	2,4
  4012  004E00  5058               	movf	color_display@m^0,w,c
  4013  004E02  26D9               	addwf	fsr2l,f,c
  4014  004E04  5059               	movf	(color_display@m+1)^0,w,c
  4015  004E06  22DA               	addwfc	fsr2h,f,c
  4016  004E08  CFDE F068          	movff	postinc2,?_sprintf+8
  4017  004E0C  CFDD F069          	movff	postdec2,?_sprintf+9
  4018  004E10  EE20 F006          	lfsr	2,6
  4019  004E14  5058               	movf	color_display@m^0,w,c
  4020  004E16  26D9               	addwf	fsr2l,f,c
  4021  004E18  5059               	movf	(color_display@m+1)^0,w,c
  4022  004E1A  22DA               	addwfc	fsr2h,f,c
  4023  004E1C  CFDE F06A          	movff	postinc2,?_sprintf+10
  4024  004E20  CFDD F06B          	movff	postdec2,?_sprintf+11
  4025  004E24  ECA6  F027         	call	_sprintf	;wreg free
  4026  004E28                     
  4027                           ;color.c: 238:     sendStringSerial4(buf);
  4028  004E28  0E79               	movlw	low color_display@buf
  4029  004E2A  6E02               	movwf	sendStringSerial4@string^0,c
  4030  004E2C  0E00               	movlw	high color_display@buf
  4031  004E2E  6E03               	movwf	(sendStringSerial4@string+1)^0,c
  4032  004E30  ECE3  F029         	call	_sendStringSerial4	;wreg free
  4033  004E34  0012               	return		;funcret
  4034  004E36                     __end_of_color_display:
  4035                           	callstack 0
  4036                           
  4037 ;; *************** function _sprintf *****************
  4038 ;; Defined at:
  4039 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\nf_sprintf.c"
  4040 ;; Parameters:    Size  Location     Type
  4041 ;;  s               2    0[BANK0 ] PTR unsigned char 
  4042 ;;		 -> color_predict@buf(100), check_color_reading@buf(100), color_display@buf(100), 
  4043 ;;  fmt             2    2[BANK0 ] PTR const unsigned char 
  4044 ;;		 -> STR_3(6), STR_2(12), STR_1(14), 
  4045 ;; Auto vars:     Size  Location     Type
  4046 ;;  f              11   14[BANK0 ] struct _IO_FILE
  4047 ;;  ap              2   12[BANK0 ] PTR void [1]
  4048 ;;		 -> ?_sprintf(2), 
  4049 ;;  ret             2    0        int 
  4050 ;; Return value:  Size  Location     Type
  4051 ;;                  2    0[BANK0 ] int 
  4052 ;; Registers used:
  4053 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4054 ;; Tracked objects:
  4055 ;;		On entry : 0/0
  4056 ;;		On exit  : 0/0
  4057 ;;		Unchanged: 0/0
  4058 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4059 ;;      Params:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4060 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4061 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4062 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4063 ;;Total ram usage:       25 bytes
  4064 ;; Hardware stack levels used: 1
  4065 ;; Hardware stack levels required when called: 8
  4066 ;; This function calls:
  4067 ;;		_vfprintf
  4068 ;; This function is called by:
  4069 ;;		_color_display
  4070 ;;		_color_predict
  4071 ;;		_check_color_reading
  4072 ;; This function uses a non-reentrant model
  4073 ;;
  4074                           
  4075                           	psect	text11
  4076  004F4C                     __ptext11:
  4077                           	callstack 0
  4078  004F4C                     _sprintf:
  4079                           	callstack 20
  4080  004F4C  0E64               	movlw	low (?_sprintf+4)
  4081  004F4E  0100               	movlb	0	; () banked
  4082  004F50  6F6C               	movwf	sprintf@ap& (0+255),b
  4083  004F52  0E00               	movlw	high (?_sprintf+4)
  4084  004F54  6F6D               	movwf	(sprintf@ap+1)& (0+255),b
  4085  004F56  C060  F06E         	movff	sprintf@s,sprintf@f
  4086  004F5A  C061  F06F         	movff	sprintf@s+1,sprintf@f+1
  4087  004F5E                     
  4088                           ; BSR set to: 0
  4089  004F5E  0E00               	movlw	0
  4090  004F60  6F72               	movwf	(sprintf@f+4)& (0+255),b
  4091  004F62  0E00               	movlw	0
  4092  004F64  6F71               	movwf	(sprintf@f+3)& (0+255),b
  4093  004F66                     
  4094                           ; BSR set to: 0
  4095  004F66  0E00               	movlw	0
  4096  004F68  6F78               	movwf	(sprintf@f+10)& (0+255),b
  4097  004F6A  0E00               	movlw	0
  4098  004F6C  6F77               	movwf	(sprintf@f+9)& (0+255),b
  4099  004F6E                     
  4100                           ; BSR set to: 0
  4101  004F6E  0E6E               	movlw	low sprintf@f
  4102  004F70  6E50               	movwf	vfprintf@fp^0,c
  4103  004F72  0E00               	movlw	high sprintf@f
  4104  004F74  6E51               	movwf	(vfprintf@fp+1)^0,c
  4105  004F76  C062  F052         	movff	sprintf@fmt,vfprintf@fmt
  4106  004F7A  C063  F053         	movff	sprintf@fmt+1,vfprintf@fmt+1
  4107  004F7E  0E6C               	movlw	low sprintf@ap
  4108  004F80  6E54               	movwf	vfprintf@ap^0,c
  4109  004F82  0E00               	movlw	high sprintf@ap
  4110  004F84  6E55               	movwf	(vfprintf@ap+1)^0,c
  4111  004F86  EC1B  F027         	call	_vfprintf	;wreg free
  4112  004F8A  0100               	movlb	0	; () banked
  4113  004F8C  5171               	movf	(sprintf@f+3)& (0+255),w,b
  4114  004F8E  2560               	addwf	sprintf@s& (0+255),w,b
  4115  004F90  6ED9               	movwf	fsr2l,c
  4116  004F92  5172               	movf	(sprintf@f+4)& (0+255),w,b
  4117  004F94  2161               	addwfc	(sprintf@s+1)& (0+255),w,b
  4118  004F96  6EDA               	movwf	fsr2h,c
  4119  004F98  0E00               	movlw	0
  4120  004F9A  6EDF               	movwf	indf2,c
  4121  004F9C                     
  4122                           ; BSR set to: 0
  4123  004F9C  0012               	return		;funcret
  4124  004F9E                     __end_of_sprintf:
  4125                           	callstack 0
  4126                           
  4127 ;; *************** function _vfprintf *****************
  4128 ;; Defined at:
  4129 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c"
  4130 ;; Parameters:    Size  Location     Type
  4131 ;;  fp              2   79[COMRAM] PTR struct _IO_FILE
  4132 ;;		 -> sprintf@f(11), 
  4133 ;;  fmt             2   81[COMRAM] PTR const unsigned char 
  4134 ;;		 -> STR_3(6), STR_2(12), STR_1(14), 
  4135 ;;  ap              2   83[COMRAM] PTR PTR void 
  4136 ;;		 -> sprintf@ap(2), 
  4137 ;; Auto vars:     Size  Location     Type
  4138 ;;  cfmt            2   85[COMRAM] PTR unsigned char 
  4139 ;;		 -> STR_3(6), STR_2(12), STR_1(14), 
  4140 ;; Return value:  Size  Location     Type
  4141 ;;                  2   79[COMRAM] int 
  4142 ;; Registers used:
  4143 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4144 ;; Tracked objects:
  4145 ;;		On entry : 0/0
  4146 ;;		On exit  : 0/0
  4147 ;;		Unchanged: 0/0
  4148 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4149 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4150 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4151 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4152 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4153 ;;Total ram usage:        8 bytes
  4154 ;; Hardware stack levels used: 1
  4155 ;; Hardware stack levels required when called: 7
  4156 ;; This function calls:
  4157 ;;		_vfpfcnvrt
  4158 ;; This function is called by:
  4159 ;;		_sprintf
  4160 ;; This function uses a non-reentrant model
  4161 ;;
  4162                           
  4163                           	psect	text12
  4164  004E36                     __ptext12:
  4165                           	callstack 0
  4166  004E36                     _vfprintf:
  4167                           	callstack 20
  4168  004E36                     
  4169                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.35\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  4170  004E36  C052  F056         	movff	vfprintf@fmt,vfprintf@cfmt
  4171  004E3A  C053  F057         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  4172  004E3E                     
  4173                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  4174  004E3E  0E00               	movlw	0
  4175  004E40  0101               	movlb	1	; () banked
  4176  004E42  6F91               	movwf	(_nout+1)& (0+255),b
  4177  004E44  0E00               	movlw	0
  4178  004E46  6F90               	movwf	_nout& (0+255),b
  4179                           
  4180                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  4181  004E48  EF39  F027         	goto	l4316
  4182  004E4C                     l4314:
  4183                           
  4184                           ; BSR set to: 1
  4185                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  4186  004E4C  C050  F040         	movff	vfprintf@fp,vfpfcnvrt@fp
  4187  004E50  C051  F041         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  4188  004E54  0E56               	movlw	low vfprintf@cfmt
  4189  004E56  6E42               	movwf	vfpfcnvrt@fmt^0,c
  4190  004E58  0E00               	movlw	high vfprintf@cfmt
  4191  004E5A  6E43               	movwf	(vfpfcnvrt@fmt+1)^0,c
  4192  004E5C  C054  F044         	movff	vfprintf@ap,vfpfcnvrt@ap
  4193  004E60  C055  F045         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  4194  004E64  ECC4  F01B         	call	_vfpfcnvrt	;wreg free
  4195  004E68  5040               	movf	?_vfpfcnvrt^0,w,c
  4196  004E6A  0101               	movlb	1	; () banked
  4197  004E6C  2790               	addwf	_nout& (0+255),f,b
  4198  004E6E  5041               	movf	(?_vfpfcnvrt+1)^0,w,c
  4199  004E70  2391               	addwfc	(_nout+1)& (0+255),f,b
  4200  004E72                     l4316:
  4201                           
  4202                           ; BSR set to: 1
  4203                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  4204  004E72  C056  FFF6         	movff	vfprintf@cfmt,tblptrl
  4205  004E76  C057  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  4206  004E7A                     	if	0	;tblptru may be non-zero
  4207  004E7A                     	endif
  4208  004E7A                     	if	0	;tblptru may be non-zero
  4209  004E7A                     	endif
  4210  004E7A  0008               	tblrd		*
  4211  004E7C  50F5               	movf	tablat,w,c
  4212  004E7E  0900               	iorlw	0
  4213  004E80  A4D8               	btfss	status,2,c
  4214  004E82  EF45  F027         	goto	u4091
  4215  004E86  EF47  F027         	goto	u4090
  4216  004E8A                     u4091:
  4217  004E8A  EF26  F027         	goto	l4314
  4218  004E8E                     u4090:
  4219  004E8E                     
  4220                           ; BSR set to: 1
  4221                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  4222  004E8E  C190  F050         	movff	_nout,?_vfprintf
  4223  004E92  C191  F051         	movff	_nout+1,?_vfprintf+1
  4224  004E96                     
  4225                           ; BSR set to: 1
  4226  004E96  0012               	return		;funcret
  4227  004E98                     __end_of_vfprintf:
  4228                           	callstack 0
  4229                           
  4230 ;; *************** function _vfpfcnvrt *****************
  4231 ;; Defined at:
  4232 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c"
  4233 ;; Parameters:    Size  Location     Type
  4234 ;;  fp              2   63[COMRAM] PTR struct _IO_FILE
  4235 ;;		 -> sprintf@f(11), 
  4236 ;;  fmt             2   65[COMRAM] PTR PTR unsigned char 
  4237 ;;		 -> vfprintf@cfmt(2), 
  4238 ;;  ap              2   67[COMRAM] PTR PTR void 
  4239 ;;		 -> sprintf@ap(2), 
  4240 ;; Auto vars:     Size  Location     Type
  4241 ;;  ll              8   71[COMRAM] long long 
  4242 ;;  llu             8    0        unsigned long long 
  4243 ;;  f               4    0        unsigned long long 
  4244 ;;  vp              3    0        PTR void 
  4245 ;;  ct              3    0        unsigned char [3]
  4246 ;;  cp              3    0        PTR unsigned char 
  4247 ;;  i               2    0        int 
  4248 ;;  done            2    0        int 
  4249 ;;  c               1    0        unsigned char 
  4250 ;; Return value:  Size  Location     Type
  4251 ;;                  2   63[COMRAM] int 
  4252 ;; Registers used:
  4253 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4254 ;; Tracked objects:
  4255 ;;		On entry : 0/0
  4256 ;;		On exit  : 0/0
  4257 ;;		Unchanged: 0/0
  4258 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4259 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4260 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4261 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4262 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4263 ;;Total ram usage:       16 bytes
  4264 ;; Hardware stack levels used: 1
  4265 ;; Hardware stack levels required when called: 6
  4266 ;; This function calls:
  4267 ;;		_dtoa
  4268 ;;		_fputc
  4269 ;; This function is called by:
  4270 ;;		_vfprintf
  4271 ;; This function uses a non-reentrant model
  4272 ;;
  4273                           
  4274                           	psect	text13
  4275  003788                     __ptext13:
  4276                           	callstack 0
  4277  003788                     _vfpfcnvrt:
  4278                           	callstack 20
  4279  003788                     
  4280                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.35\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.35\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.35\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          5\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  4281  003788  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4282  00378C  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4283  003790  CFDE FFF6          	movff	postinc2,tblptrl
  4284  003794  CFDD FFF7          	movff	postdec2,tblptrh
  4285  003798                     	if	0	;tblptru may be non-zero
  4286  003798                     	endif
  4287  003798                     	if	0	;tblptru may be non-zero
  4288  003798                     	endif
  4289  003798  0008               	tblrd		*
  4290  00379A  50F5               	movf	tablat,w,c
  4291  00379C  0A25               	xorlw	37
  4292  00379E  A4D8               	btfss	status,2,c
  4293  0037A0  EFD4  F01B         	goto	u3731
  4294  0037A4  EFD6  F01B         	goto	u3730
  4295  0037A8                     u3731:
  4296  0037A8  EF82  F01C         	goto	l4088
  4297  0037AC                     u3730:
  4298  0037AC                     
  4299                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  4300  0037AC  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4301  0037B0  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4302  0037B4  2ADE               	incf	postinc2,f,c
  4303  0037B6  0E00               	movlw	0
  4304  0037B8  22DD               	addwfc	postdec2,f,c
  4305  0037BA                     
  4306                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  4307  0037BA  0E00               	movlw	0
  4308  0037BC  0101               	movlb	1	; () banked
  4309  0037BE  6F93               	movwf	(_width+1)& (0+255),b
  4310  0037C0  0E00               	movlw	0
  4311  0037C2  6F92               	movwf	_width& (0+255),b
  4312  0037C4  C192  F0F8         	movff	_width,_flags
  4313  0037C8  C193  F0F9         	movff	_width+1,_flags+1
  4314  0037CC                     
  4315                           ; BSR set to: 1
  4316                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  4317  0037CC  6994               	setf	_prec& (0+255),b
  4318  0037CE  6995               	setf	(_prec+1)& (0+255),b
  4319  0037D0                     
  4320                           ; BSR set to: 1
  4321                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  4322  0037D0  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4323  0037D4  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4324  0037D8  CFDE FFF6          	movff	postinc2,tblptrl
  4325  0037DC  CFDD FFF7          	movff	postdec2,tblptrh
  4326  0037E0                     	if	0	;tblptru may be non-zero
  4327  0037E0                     	endif
  4328  0037E0                     	if	0	;tblptru may be non-zero
  4329  0037E0                     	endif
  4330  0037E0  0008               	tblrd		*
  4331  0037E2  50F5               	movf	tablat,w,c
  4332  0037E4  0A64               	xorlw	100
  4333  0037E6  B4D8               	btfsc	status,2,c
  4334  0037E8  EFF8  F01B         	goto	u3741
  4335  0037EC  EFFA  F01B         	goto	u3740
  4336  0037F0                     u3741:
  4337  0037F0  EF0C  F01C         	goto	l4066
  4338  0037F4                     u3740:
  4339  0037F4                     
  4340                           ; BSR set to: 1
  4341  0037F4  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4342  0037F8  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4343  0037FC  CFDE FFF6          	movff	postinc2,tblptrl
  4344  003800  CFDD FFF7          	movff	postdec2,tblptrh
  4345  003804                     	if	0	;tblptru may be non-zero
  4346  003804                     	endif
  4347  003804                     	if	0	;tblptru may be non-zero
  4348  003804                     	endif
  4349  003804  0008               	tblrd		*
  4350  003806  50F5               	movf	tablat,w,c
  4351  003808  0A69               	xorlw	105
  4352  00380A  A4D8               	btfss	status,2,c
  4353  00380C  EF0A  F01C         	goto	u3751
  4354  003810  EF0C  F01C         	goto	u3750
  4355  003814                     u3751:
  4356  003814  EF4C  F01C         	goto	l4072
  4357  003818                     u3750:
  4358  003818                     l4066:
  4359                           
  4360                           ; BSR set to: 1
  4361                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  4362  003818  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4363  00381C  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4364  003820  2ADE               	incf	postinc2,f,c
  4365  003822  0E00               	movlw	0
  4366  003824  22DD               	addwfc	postdec2,f,c
  4367                           
  4368                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  4369  003826  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4370  00382A  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4371  00382E  CFDF F046          	movff	indf2,??_vfpfcnvrt
  4372  003832  0E02               	movlw	2
  4373  003834  26DE               	addwf	postinc2,f,c
  4374  003836  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  4375  00383A  0E00               	movlw	0
  4376  00383C  22DD               	addwfc	postdec2,f,c
  4377  00383E  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4378  003842  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4379  003846  CFDE F048          	movff	postinc2,vfpfcnvrt@ll
  4380  00384A  CFDD F049          	movff	postdec2,vfpfcnvrt@ll+1
  4381  00384E  0E00               	movlw	0
  4382  003850  BE49               	btfsc	(vfpfcnvrt@ll+1)^0,7,c
  4383  003852  0EFF               	movlw	-1
  4384  003854  6E4A               	movwf	(vfpfcnvrt@ll+2)^0,c
  4385  003856  6E4B               	movwf	(vfpfcnvrt@ll+3)^0,c
  4386  003858  6E4C               	movwf	(vfpfcnvrt@ll+4)^0,c
  4387  00385A  6E4D               	movwf	(vfpfcnvrt@ll+5)^0,c
  4388  00385C  6E4E               	movwf	(vfpfcnvrt@ll+6)^0,c
  4389  00385E  6E4F               	movwf	(vfpfcnvrt@ll+7)^0,c
  4390  003860                     
  4391                           ; BSR set to: 1
  4392                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  4393  003860  C040  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  4394  003864  C041  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  4395  003868  C048  F01E         	movff	vfpfcnvrt@ll,dtoa@d
  4396  00386C  C049  F01F         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  4397  003870  C04A  F020         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  4398  003874  C04B  F021         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  4399  003878  C04C  F022         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  4400  00387C  C04D  F023         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  4401  003880  C04E  F024         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  4402  003884  C04F  F025         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  4403  003888  ECD3  F014         	call	_dtoa	;wreg free
  4404  00388C  C01C  F040         	movff	?_dtoa,?_vfpfcnvrt
  4405  003890  C01D  F041         	movff	?_dtoa+1,?_vfpfcnvrt+1
  4406  003894  EF9D  F01C         	goto	l1536
  4407  003898                     l4072:
  4408                           
  4409                           ; BSR set to: 1
  4410                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  4411  003898  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4412  00389C  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4413  0038A0  CFDE FFF6          	movff	postinc2,tblptrl
  4414  0038A4  CFDD FFF7          	movff	postdec2,tblptrh
  4415  0038A8                     	if	0	;tblptru may be non-zero
  4416  0038A8                     	endif
  4417  0038A8                     	if	0	;tblptru may be non-zero
  4418  0038A8                     	endif
  4419  0038A8  0008               	tblrd		*
  4420  0038AA  50F5               	movf	tablat,w,c
  4421  0038AC  0A25               	xorlw	37
  4422  0038AE  A4D8               	btfss	status,2,c
  4423  0038B0  EF5C  F01C         	goto	u3761
  4424  0038B4  EF5E  F01C         	goto	u3760
  4425  0038B8                     u3761:
  4426  0038B8  EF75  F01C         	goto	l4082
  4427  0038BC                     u3760:
  4428  0038BC                     
  4429                           ; BSR set to: 1
  4430                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  4431  0038BC  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4432  0038C0  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4433  0038C4  2ADE               	incf	postinc2,f,c
  4434  0038C6  0E00               	movlw	0
  4435  0038C8  22DD               	addwfc	postdec2,f,c
  4436  0038CA                     
  4437                           ; BSR set to: 1
  4438                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  4439  0038CA  0E00               	movlw	0
  4440  0038CC  6E02               	movwf	(fputc@c+1)^0,c
  4441  0038CE  0E25               	movlw	37
  4442  0038D0  6E01               	movwf	fputc@c^0,c
  4443  0038D2  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
  4444  0038D6  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  4445  0038DA  ECF6  F023         	call	_fputc	;wreg free
  4446  0038DE                     l4078:
  4447                           
  4448                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  4449  0038DE  0E00               	movlw	0
  4450  0038E0  6E41               	movwf	(?_vfpfcnvrt+1)^0,c
  4451  0038E2  0E01               	movlw	1
  4452  0038E4  6E40               	movwf	?_vfpfcnvrt^0,c
  4453  0038E6  EF9D  F01C         	goto	l1536
  4454  0038EA                     l4082:
  4455                           
  4456                           ; BSR set to: 1
  4457                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  4458  0038EA  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4459  0038EE  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4460  0038F2  2ADE               	incf	postinc2,f,c
  4461  0038F4  0E00               	movlw	0
  4462  0038F6  22DD               	addwfc	postdec2,f,c
  4463  0038F8                     
  4464                           ; BSR set to: 1
  4465                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  4466  0038F8  0E00               	movlw	0
  4467  0038FA  6E41               	movwf	(?_vfpfcnvrt+1)^0,c
  4468  0038FC  0E00               	movlw	0
  4469  0038FE  6E40               	movwf	?_vfpfcnvrt^0,c
  4470  003900  EF9D  F01C         	goto	l1536
  4471  003904                     l4088:
  4472                           
  4473                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  4474  003904  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4475  003908  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4476  00390C  CFDE FFF6          	movff	postinc2,tblptrl
  4477  003910  CFDD FFF7          	movff	postdec2,tblptrh
  4478  003914                     	if	0	;tblptru may be non-zero
  4479  003914                     	endif
  4480  003914                     	if	0	;tblptru may be non-zero
  4481  003914                     	endif
  4482  003914  0008               	tblrd		*
  4483  003916  50F5               	movf	tablat,w,c
  4484  003918  6E01               	movwf	fputc@c^0,c
  4485  00391A  6A02               	clrf	(fputc@c+1)^0,c
  4486  00391C  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
  4487  003920  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  4488  003924  ECF6  F023         	call	_fputc	;wreg free
  4489  003928                     
  4490                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  4491  003928  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4492  00392C  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4493  003930  2ADE               	incf	postinc2,f,c
  4494  003932  0E00               	movlw	0
  4495  003934  22DD               	addwfc	postdec2,f,c
  4496  003936  EF6F  F01C         	goto	l4078
  4497  00393A                     l1536:
  4498  00393A  0012               	return		;funcret
  4499  00393C                     __end_of_vfpfcnvrt:
  4500                           	callstack 0
  4501                           
  4502 ;; *************** function _dtoa *****************
  4503 ;; Defined at:
  4504 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c"
  4505 ;; Parameters:    Size  Location     Type
  4506 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  4507 ;;		 -> sprintf@f(11), 
  4508 ;;  d               8   29[COMRAM] long long 
  4509 ;; Auto vars:     Size  Location     Type
  4510 ;;  n               8   53[COMRAM] long long 
  4511 ;;  i               2   61[COMRAM] int 
  4512 ;;  s               2   51[COMRAM] int 
  4513 ;;  w               2   49[COMRAM] int 
  4514 ;;  p               2   47[COMRAM] int 
  4515 ;; Return value:  Size  Location     Type
  4516 ;;                  2   27[COMRAM] int 
  4517 ;; Registers used:
  4518 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4519 ;; Tracked objects:
  4520 ;;		On entry : 0/0
  4521 ;;		On exit  : 0/0
  4522 ;;		Unchanged: 0/0
  4523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4524 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4525 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4526 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4527 ;;      Totals:        36       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4528 ;;Total ram usage:       36 bytes
  4529 ;; Hardware stack levels used: 1
  4530 ;; Hardware stack levels required when called: 5
  4531 ;; This function calls:
  4532 ;;		___aodiv
  4533 ;;		___aomod
  4534 ;;		_abs
  4535 ;;		_pad
  4536 ;; This function is called by:
  4537 ;;		_vfpfcnvrt
  4538 ;; This function uses a non-reentrant model
  4539 ;;
  4540                           
  4541                           	psect	text14
  4542  0029A6                     __ptext14:
  4543                           	callstack 0
  4544  0029A6                     _dtoa:
  4545                           	callstack 20
  4546  0029A6                     
  4547                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  4548  0029A6  C01E  F036         	movff	dtoa@d,dtoa@n
  4549  0029AA  C01F  F037         	movff	dtoa@d+1,dtoa@n+1
  4550  0029AE  C020  F038         	movff	dtoa@d+2,dtoa@n+2
  4551  0029B2  C021  F039         	movff	dtoa@d+3,dtoa@n+3
  4552  0029B6  C022  F03A         	movff	dtoa@d+4,dtoa@n+4
  4553  0029BA  C023  F03B         	movff	dtoa@d+5,dtoa@n+5
  4554  0029BE  C024  F03C         	movff	dtoa@d+6,dtoa@n+6
  4555  0029C2  C025  F03D         	movff	dtoa@d+7,dtoa@n+7
  4556  0029C6                     
  4557                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  4558  0029C6  BE3D               	btfsc	(dtoa@n+7)^0,7,c
  4559  0029C8  EFE8  F014         	goto	u3111
  4560  0029CC  EFEB  F014         	goto	u3110
  4561  0029D0                     u3111:
  4562  0029D0  0E01               	movlw	1
  4563  0029D2  EFEC  F014         	goto	u3120
  4564  0029D6                     u3110:
  4565  0029D6  0E00               	movlw	0
  4566  0029D8                     u3120:
  4567  0029D8  6E34               	movwf	dtoa@s^0,c
  4568  0029DA  6A35               	clrf	(dtoa@s+1)^0,c
  4569                           
  4570                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  4571  0029DC  5034               	movf	dtoa@s^0,w,c
  4572  0029DE  1035               	iorwf	(dtoa@s+1)^0,w,c
  4573  0029E0  B4D8               	btfsc	status,2,c
  4574  0029E2  EFF5  F014         	goto	u3131
  4575  0029E6  EFF7  F014         	goto	u3130
  4576  0029EA                     u3131:
  4577  0029EA  EF07  F015         	goto	l3742
  4578  0029EE                     u3130:
  4579  0029EE                     
  4580                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  4581  0029EE  1E3D               	comf	(dtoa@n+7)^0,f,c
  4582  0029F0  1E3C               	comf	(dtoa@n+6)^0,f,c
  4583  0029F2  1E3B               	comf	(dtoa@n+5)^0,f,c
  4584  0029F4  1E3A               	comf	(dtoa@n+4)^0,f,c
  4585  0029F6  1E39               	comf	(dtoa@n+3)^0,f,c
  4586  0029F8  1E38               	comf	(dtoa@n+2)^0,f,c
  4587  0029FA  1E37               	comf	(dtoa@n+1)^0,f,c
  4588  0029FC  6C36               	negf	dtoa@n^0,c
  4589  0029FE  0E00               	movlw	0
  4590  002A00  2237               	addwfc	(dtoa@n+1)^0,f,c
  4591  002A02  2238               	addwfc	(dtoa@n+2)^0,f,c
  4592  002A04  2239               	addwfc	(dtoa@n+3)^0,f,c
  4593  002A06  223A               	addwfc	(dtoa@n+4)^0,f,c
  4594  002A08  223B               	addwfc	(dtoa@n+5)^0,f,c
  4595  002A0A  223C               	addwfc	(dtoa@n+6)^0,f,c
  4596  002A0C  223D               	addwfc	(dtoa@n+7)^0,f,c
  4597  002A0E                     l3742:
  4598                           
  4599                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  4600  002A0E  0101               	movlb	1	; () banked
  4601  002A10  BF95               	btfsc	(_prec+1)& (0+255),7,b
  4602  002A12  EF0D  F015         	goto	u3141
  4603  002A16  EF0F  F015         	goto	u3140
  4604  002A1A                     u3141:
  4605  002A1A  EF11  F015         	goto	l3746
  4606  002A1E                     u3140:
  4607  002A1E                     
  4608                           ; BSR set to: 1
  4609                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  4610  002A1E  0100               	movlb	0	; () banked
  4611  002A20  93F8               	bcf	_flags& (0+255),1,b
  4612  002A22                     l3746:
  4613                           
  4614                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  4615  002A22  0101               	movlb	1	; () banked
  4616  002A24  BF95               	btfsc	(_prec+1)& (0+255),7,b
  4617  002A26  EF1F  F015         	goto	u3150
  4618  002A2A  5195               	movf	(_prec+1)& (0+255),w,b
  4619  002A2C  E106               	bnz	u3151
  4620  002A2E  0594               	decf	_prec& (0+255),w,b
  4621  002A30  B0D8               	btfsc	status,0,c
  4622  002A32  EF1D  F015         	goto	u3151
  4623  002A36  EF1F  F015         	goto	u3150
  4624  002A3A                     u3151:
  4625  002A3A  EF25  F015         	goto	l1509
  4626  002A3E                     u3150:
  4627  002A3E                     
  4628                           ; BSR set to: 1
  4629  002A3E  0E00               	movlw	0
  4630  002A40  6E31               	movwf	(dtoa@p+1)^0,c
  4631  002A42  0E01               	movlw	1
  4632  002A44  6E30               	movwf	dtoa@p^0,c
  4633  002A46  EF29  F015         	goto	l1511
  4634  002A4A                     l1509:
  4635                           
  4636                           ; BSR set to: 1
  4637  002A4A  C194  F030         	movff	_prec,dtoa@p
  4638  002A4E  C195  F031         	movff	_prec+1,dtoa@p+1
  4639  002A52                     l1511:
  4640                           
  4641                           ; BSR set to: 1
  4642                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  4643  002A52  C192  F032         	movff	_width,dtoa@w
  4644  002A56  C193  F033         	movff	_width+1,dtoa@w+1
  4645  002A5A                     
  4646                           ; BSR set to: 1
  4647                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  4648  002A5A  5034               	movf	dtoa@s^0,w,c
  4649  002A5C  1035               	iorwf	(dtoa@s+1)^0,w,c
  4650  002A5E  A4D8               	btfss	status,2,c
  4651  002A60  EF34  F015         	goto	u3161
  4652  002A64  EF36  F015         	goto	u3160
  4653  002A68                     u3161:
  4654  002A68  EF3E  F015         	goto	l3754
  4655  002A6C                     u3160:
  4656  002A6C                     
  4657                           ; BSR set to: 1
  4658  002A6C  0100               	movlb	0	; () banked
  4659  002A6E  A5F8               	btfss	_flags& (0+255),2,b
  4660  002A70  EF3C  F015         	goto	u3171
  4661  002A74  EF3E  F015         	goto	u3170
  4662  002A78                     u3171:
  4663  002A78  EF41  F015         	goto	l3756
  4664  002A7C                     u3170:
  4665  002A7C                     l3754:
  4666                           
  4667                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 306:         --w;
  4668  002A7C  0632               	decf	dtoa@w^0,f,c
  4669  002A7E  A0D8               	btfss	status,0,c
  4670  002A80  0633               	decf	(dtoa@w+1)^0,f,c
  4671  002A82                     l3756:
  4672                           
  4673                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  4674  002A82  0E00               	movlw	0
  4675  002A84  6E3F               	movwf	(dtoa@i+1)^0,c
  4676  002A86  0E1F               	movlw	31
  4677  002A88  6E3E               	movwf	dtoa@i^0,c
  4678  002A8A                     
  4679                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  4680  002A8A  0E00               	movlw	0
  4681  002A8C  0101               	movlb	1	; () banked
  4682  002A8E  6FBD               	movwf	(_dbuf+31)& (0+255),b
  4683                           
  4684                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  4685  002A90  EFC6  F015         	goto	l3770
  4686  002A94                     l3760:
  4687                           
  4688                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 313:         --i;
  4689  002A94  063E               	decf	dtoa@i^0,f,c
  4690  002A96  A0D8               	btfss	status,0,c
  4691  002A98  063F               	decf	(dtoa@i+1)^0,f,c
  4692  002A9A                     
  4693                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  4694  002A9A  0E9E               	movlw	low _dbuf
  4695  002A9C  243E               	addwf	dtoa@i^0,w,c
  4696  002A9E  6ED9               	movwf	fsr2l,c
  4697  002AA0  0E01               	movlw	high _dbuf
  4698  002AA2  203F               	addwfc	(dtoa@i+1)^0,w,c
  4699  002AA4  6EDA               	movwf	fsr2h,c
  4700  002AA6  C036  F001         	movff	dtoa@n,___aomod@dividend
  4701  002AAA  C037  F002         	movff	dtoa@n+1,___aomod@dividend+1
  4702  002AAE  C038  F003         	movff	dtoa@n+2,___aomod@dividend+2
  4703  002AB2  C039  F004         	movff	dtoa@n+3,___aomod@dividend+3
  4704  002AB6  C03A  F005         	movff	dtoa@n+4,___aomod@dividend+4
  4705  002ABA  C03B  F006         	movff	dtoa@n+5,___aomod@dividend+5
  4706  002ABE  C03C  F007         	movff	dtoa@n+6,___aomod@dividend+6
  4707  002AC2  C03D  F008         	movff	dtoa@n+7,___aomod@dividend+7
  4708  002AC6  0E0A               	movlw	10
  4709  002AC8  6E09               	movwf	___aomod@divisor^0,c
  4710  002ACA  0E00               	movlw	0
  4711  002ACC  6E0A               	movwf	(___aomod@divisor+1)^0,c
  4712  002ACE  0E00               	movlw	0
  4713  002AD0  6E0B               	movwf	(___aomod@divisor+2)^0,c
  4714  002AD2  0E00               	movlw	0
  4715  002AD4  6E0C               	movwf	(___aomod@divisor+3)^0,c
  4716  002AD6  0E00               	movlw	0
  4717  002AD8  6E0D               	movwf	(___aomod@divisor+4)^0,c
  4718  002ADA  0E00               	movlw	0
  4719  002ADC  6E0E               	movwf	(___aomod@divisor+5)^0,c
  4720  002ADE  0E00               	movlw	0
  4721  002AE0  6E0F               	movwf	(___aomod@divisor+6)^0,c
  4722  002AE2  0E00               	movlw	0
  4723  002AE4  6E10               	movwf	(___aomod@divisor+7)^0,c
  4724  002AE6  EC41  F021         	call	___aomod	;wreg free
  4725  002AEA  C001  F026         	movff	?___aomod,??_dtoa
  4726  002AEE  C002  F027         	movff	?___aomod+1,??_dtoa+1
  4727  002AF2  C003  F028         	movff	?___aomod+2,??_dtoa+2
  4728  002AF6  C004  F029         	movff	?___aomod+3,??_dtoa+3
  4729  002AFA  C005  F02A         	movff	?___aomod+4,??_dtoa+4
  4730  002AFE  C006  F02B         	movff	?___aomod+5,??_dtoa+5
  4731  002B02  C007  F02C         	movff	?___aomod+6,??_dtoa+6
  4732  002B06  C008  F02D         	movff	?___aomod+7,??_dtoa+7
  4733  002B0A  C026  F013         	movff	??_dtoa,abs@a
  4734  002B0E  C028  F014         	movff	??_dtoa+2,abs@a+1
  4735  002B12  EC38  F029         	call	_abs	;wreg free
  4736  002B16  5013               	movf	?_abs^0,w,c
  4737  002B18  0F30               	addlw	48
  4738  002B1A  6EDF               	movwf	indf2,c
  4739  002B1C                     
  4740                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 315:         --p;
  4741  002B1C  0630               	decf	dtoa@p^0,f,c
  4742  002B1E  A0D8               	btfss	status,0,c
  4743  002B20  0631               	decf	(dtoa@p+1)^0,f,c
  4744  002B22                     
  4745                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 316:         --w;
  4746  002B22  0632               	decf	dtoa@w^0,f,c
  4747  002B24  A0D8               	btfss	status,0,c
  4748  002B26  0633               	decf	(dtoa@w+1)^0,f,c
  4749  002B28                     
  4750                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  4751  002B28  C036  F001         	movff	dtoa@n,___aodiv@dividend
  4752  002B2C  C037  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  4753  002B30  C038  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  4754  002B34  C039  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  4755  002B38  C03A  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  4756  002B3C  C03B  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  4757  002B40  C03C  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  4758  002B44  C03D  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  4759  002B48  0E0A               	movlw	10
  4760  002B4A  6E09               	movwf	___aodiv@divisor^0,c
  4761  002B4C  0E00               	movlw	0
  4762  002B4E  6E0A               	movwf	(___aodiv@divisor+1)^0,c
  4763  002B50  0E00               	movlw	0
  4764  002B52  6E0B               	movwf	(___aodiv@divisor+2)^0,c
  4765  002B54  0E00               	movlw	0
  4766  002B56  6E0C               	movwf	(___aodiv@divisor+3)^0,c
  4767  002B58  0E00               	movlw	0
  4768  002B5A  6E0D               	movwf	(___aodiv@divisor+4)^0,c
  4769  002B5C  0E00               	movlw	0
  4770  002B5E  6E0E               	movwf	(___aodiv@divisor+5)^0,c
  4771  002B60  0E00               	movlw	0
  4772  002B62  6E0F               	movwf	(___aodiv@divisor+6)^0,c
  4773  002B64  0E00               	movlw	0
  4774  002B66  6E10               	movwf	(___aodiv@divisor+7)^0,c
  4775  002B68  EC3D  F01E         	call	___aodiv	;wreg free
  4776  002B6C  C001  F036         	movff	?___aodiv,dtoa@n
  4777  002B70  C002  F037         	movff	?___aodiv+1,dtoa@n+1
  4778  002B74  C003  F038         	movff	?___aodiv+2,dtoa@n+2
  4779  002B78  C004  F039         	movff	?___aodiv+3,dtoa@n+3
  4780  002B7C  C005  F03A         	movff	?___aodiv+4,dtoa@n+4
  4781  002B80  C006  F03B         	movff	?___aodiv+5,dtoa@n+5
  4782  002B84  C007  F03C         	movff	?___aodiv+6,dtoa@n+6
  4783  002B88  C008  F03D         	movff	?___aodiv+7,dtoa@n+7
  4784  002B8C                     l3770:
  4785                           
  4786                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  4787  002B8C  BE3F               	btfsc	(dtoa@i+1)^0,7,c
  4788  002B8E  EFD1  F015         	goto	u3181
  4789  002B92  503F               	movf	(dtoa@i+1)^0,w,c
  4790  002B94  E108               	bnz	u3180
  4791  002B96  043E               	decf	dtoa@i^0,w,c
  4792  002B98  A0D8               	btfss	status,0,c
  4793  002B9A  EFD1  F015         	goto	u3181
  4794  002B9E  EFD3  F015         	goto	u3180
  4795  002BA2                     u3181:
  4796  002BA2  EF04  F016         	goto	l3780
  4797  002BA6                     u3180:
  4798  002BA6  5036               	movf	dtoa@n^0,w,c
  4799  002BA8  1037               	iorwf	(dtoa@n+1)^0,w,c
  4800  002BAA  1038               	iorwf	(dtoa@n+2)^0,w,c
  4801  002BAC  1039               	iorwf	(dtoa@n+3)^0,w,c
  4802  002BAE  103A               	iorwf	(dtoa@n+4)^0,w,c
  4803  002BB0  103B               	iorwf	(dtoa@n+5)^0,w,c
  4804  002BB2  103C               	iorwf	(dtoa@n+6)^0,w,c
  4805  002BB4  103D               	iorwf	(dtoa@n+7)^0,w,c
  4806  002BB6  A4D8               	btfss	status,2,c
  4807  002BB8  EFE0  F015         	goto	u3191
  4808  002BBC  EFE2  F015         	goto	u3190
  4809  002BC0                     u3191:
  4810  002BC0  EF4A  F015         	goto	l3760
  4811  002BC4                     u3190:
  4812  002BC4  BE31               	btfsc	(dtoa@p+1)^0,7,c
  4813  002BC6  EFEF  F015         	goto	u3200
  4814  002BCA  5031               	movf	(dtoa@p+1)^0,w,c
  4815  002BCC  E106               	bnz	u3201
  4816  002BCE  0430               	decf	dtoa@p^0,w,c
  4817  002BD0  B0D8               	btfsc	status,0,c
  4818  002BD2  EFED  F015         	goto	u3201
  4819  002BD6  EFEF  F015         	goto	u3200
  4820  002BDA                     u3201:
  4821  002BDA  EF4A  F015         	goto	l3760
  4822  002BDE                     u3200:
  4823  002BDE  BE33               	btfsc	(dtoa@w+1)^0,7,c
  4824  002BE0  EFFA  F015         	goto	u3211
  4825  002BE4  5033               	movf	(dtoa@w+1)^0,w,c
  4826  002BE6  E108               	bnz	u3210
  4827  002BE8  0432               	decf	dtoa@w^0,w,c
  4828  002BEA  A0D8               	btfss	status,0,c
  4829  002BEC  EFFA  F015         	goto	u3211
  4830  002BF0  EFFC  F015         	goto	u3210
  4831  002BF4                     u3211:
  4832  002BF4  EF04  F016         	goto	l3780
  4833  002BF8                     u3210:
  4834  002BF8  0100               	movlb	0	; () banked
  4835  002BFA  B3F8               	btfsc	_flags& (0+255),1,b
  4836  002BFC  EF02  F016         	goto	u3221
  4837  002C00  EF04  F016         	goto	u3220
  4838  002C04                     u3221:
  4839  002C04  EF4A  F015         	goto	l3760
  4840  002C08                     u3220:
  4841  002C08                     l3780:
  4842                           
  4843                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  4844  002C08  5034               	movf	dtoa@s^0,w,c
  4845  002C0A  1035               	iorwf	(dtoa@s+1)^0,w,c
  4846  002C0C  A4D8               	btfss	status,2,c
  4847  002C0E  EF0B  F016         	goto	u3231
  4848  002C12  EF0D  F016         	goto	u3230
  4849  002C16                     u3231:
  4850  002C16  EF15  F016         	goto	l3784
  4851  002C1A                     u3230:
  4852  002C1A  0100               	movlb	0	; () banked
  4853  002C1C  A5F8               	btfss	_flags& (0+255),2,b
  4854  002C1E  EF13  F016         	goto	u3241
  4855  002C22  EF15  F016         	goto	u3240
  4856  002C26                     u3241:
  4857  002C26  EF33  F016         	goto	l3794
  4858  002C2A                     u3240:
  4859  002C2A                     l3784:
  4860                           
  4861                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 322:         --i;
  4862  002C2A  063E               	decf	dtoa@i^0,f,c
  4863  002C2C  A0D8               	btfss	status,0,c
  4864  002C2E  063F               	decf	(dtoa@i+1)^0,f,c
  4865  002C30                     
  4866                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  4867  002C30  5034               	movf	dtoa@s^0,w,c
  4868  002C32  1035               	iorwf	(dtoa@s+1)^0,w,c
  4869  002C34  A4D8               	btfss	status,2,c
  4870  002C36  EF1F  F016         	goto	u3251
  4871  002C3A  EF21  F016         	goto	u3250
  4872  002C3E                     u3251:
  4873  002C3E  EF27  F016         	goto	l3790
  4874  002C42                     u3250:
  4875  002C42  0E00               	movlw	0
  4876  002C44  6E2F               	movwf	(_dtoa$2872+1)^0,c
  4877  002C46  0E2B               	movlw	43
  4878  002C48  6E2E               	movwf	_dtoa$2872^0,c
  4879  002C4A  EF2B  F016         	goto	l3792
  4880  002C4E                     l3790:
  4881  002C4E  0E00               	movlw	0
  4882  002C50  6E2F               	movwf	(_dtoa$2872+1)^0,c
  4883  002C52  0E2D               	movlw	45
  4884  002C54  6E2E               	movwf	_dtoa$2872^0,c
  4885  002C56                     l3792:
  4886  002C56  0E9E               	movlw	low _dbuf
  4887  002C58  243E               	addwf	dtoa@i^0,w,c
  4888  002C5A  6ED9               	movwf	fsr2l,c
  4889  002C5C  0E01               	movlw	high _dbuf
  4890  002C5E  203F               	addwfc	(dtoa@i+1)^0,w,c
  4891  002C60  6EDA               	movwf	fsr2h,c
  4892  002C62  C02E  FFDF         	movff	_dtoa$2872,indf2
  4893  002C66                     l3794:
  4894                           
  4895                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  4896  002C66  C01C  F011         	movff	dtoa@fp,pad@fp
  4897  002C6A  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
  4898  002C6E  0E9E               	movlw	low _dbuf
  4899  002C70  243E               	addwf	dtoa@i^0,w,c
  4900  002C72  6E13               	movwf	pad@buf^0,c
  4901  002C74  0E01               	movlw	high _dbuf
  4902  002C76  203F               	addwfc	(dtoa@i+1)^0,w,c
  4903  002C78  6E14               	movwf	(pad@buf+1)^0,c
  4904  002C7A  C032  F015         	movff	dtoa@w,pad@p
  4905  002C7E  C033  F016         	movff	dtoa@w+1,pad@p+1
  4906  002C82  ECBE  F024         	call	_pad	;wreg free
  4907  002C86  C011  F01C         	movff	?_pad,?_dtoa
  4908  002C8A  C012  F01D         	movff	?_pad+1,?_dtoa+1
  4909  002C8E  0012               	return		;funcret
  4910  002C90                     __end_of_dtoa:
  4911                           	callstack 0
  4912                           
  4913 ;; *************** function _pad *****************
  4914 ;; Defined at:
  4915 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c"
  4916 ;; Parameters:    Size  Location     Type
  4917 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  4918 ;;		 -> sprintf@f(11), 
  4919 ;;  buf             2   18[COMRAM] PTR unsigned char 
  4920 ;;		 -> dbuf(32), 
  4921 ;;  p               2   20[COMRAM] int 
  4922 ;; Auto vars:     Size  Location     Type
  4923 ;;  w               2   25[COMRAM] int 
  4924 ;;  i               2   23[COMRAM] int 
  4925 ;; Return value:  Size  Location     Type
  4926 ;;                  2   16[COMRAM] int 
  4927 ;; Registers used:
  4928 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4929 ;; Tracked objects:
  4930 ;;		On entry : 0/0
  4931 ;;		On exit  : 0/0
  4932 ;;		Unchanged: 0/0
  4933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4934 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4935 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4936 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4937 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4938 ;;Total ram usage:       11 bytes
  4939 ;; Hardware stack levels used: 1
  4940 ;; Hardware stack levels required when called: 4
  4941 ;; This function calls:
  4942 ;;		_fputc
  4943 ;;		_fputs
  4944 ;;		_strlen
  4945 ;; This function is called by:
  4946 ;;		_dtoa
  4947 ;; This function uses a non-reentrant model
  4948 ;;
  4949                           
  4950                           	psect	text15
  4951  00497C                     __ptext15:
  4952                           	callstack 0
  4953  00497C                     _pad:
  4954                           	callstack 20
  4955  00497C                     
  4956                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  4957  00497C  0100               	movlb	0	; () banked
  4958  00497E  A1F8               	btfss	_flags& (0+255),0,b
  4959  004980  EFC4  F024         	goto	u3061
  4960  004984  EFC6  F024         	goto	u3060
  4961  004988                     u3061:
  4962  004988  EFD0  F024         	goto	l3714
  4963  00498C                     u3060:
  4964  00498C                     
  4965                           ; BSR set to: 0
  4966                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  4967  00498C  C013  F00A         	movff	pad@buf,fputs@s
  4968  004990  C014  F00B         	movff	pad@buf+1,fputs@s+1
  4969  004994  C011  F00C         	movff	pad@fp,fputs@fp
  4970  004998  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  4971  00499C  EC92  F028         	call	_fputs	;wreg free
  4972  0049A0                     l3714:
  4973                           
  4974                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  4975  0049A0  BE16               	btfsc	(pad@p+1)^0,7,c
  4976  0049A2  EFD5  F024         	goto	u3071
  4977  0049A6  EFD7  F024         	goto	u3070
  4978  0049AA                     u3071:
  4979  0049AA  EFDD  F024         	goto	l3718
  4980  0049AE                     u3070:
  4981  0049AE  C015  F01A         	movff	pad@p,pad@w
  4982  0049B2  C016  F01B         	movff	pad@p+1,pad@w+1
  4983  0049B6  EFE1  F024         	goto	l1498
  4984  0049BA                     l3718:
  4985  0049BA  0E00               	movlw	0
  4986  0049BC  6E1B               	movwf	(pad@w+1)^0,c
  4987  0049BE  0E00               	movlw	0
  4988  0049C0  6E1A               	movwf	pad@w^0,c
  4989  0049C2                     l1498:
  4990                           
  4991                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  4992  0049C2  0E00               	movlw	0
  4993  0049C4  6E19               	movwf	(pad@i+1)^0,c
  4994  0049C6  0E00               	movlw	0
  4995  0049C8  6E18               	movwf	pad@i^0,c
  4996                           
  4997                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  4998  0049CA  EFF3  F024         	goto	l3724
  4999  0049CE                     l3720:
  5000                           
  5001                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  5002  0049CE  0E00               	movlw	0
  5003  0049D0  6E02               	movwf	(fputc@c+1)^0,c
  5004  0049D2  0E20               	movlw	32
  5005  0049D4  6E01               	movwf	fputc@c^0,c
  5006  0049D6  C011  F003         	movff	pad@fp,fputc@fp
  5007  0049DA  C012  F004         	movff	pad@fp+1,fputc@fp+1
  5008  0049DE  ECF6  F023         	call	_fputc	;wreg free
  5009  0049E2                     
  5010                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 86:         ++i;
  5011  0049E2  4A18               	infsnz	pad@i^0,f,c
  5012  0049E4  2A19               	incf	(pad@i+1)^0,f,c
  5013  0049E6                     l3724:
  5014                           
  5015                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  5016  0049E6  501A               	movf	pad@w^0,w,c
  5017  0049E8  5C18               	subwf	pad@i^0,w,c
  5018  0049EA  5019               	movf	(pad@i+1)^0,w,c
  5019  0049EC  0A80               	xorlw	128
  5020  0049EE  6E17               	movwf	??_pad^0,c
  5021  0049F0  501B               	movf	(pad@w+1)^0,w,c
  5022  0049F2  0A80               	xorlw	128
  5023  0049F4  5817               	subwfb	??_pad^0,w,c
  5024  0049F6  A0D8               	btfss	status,0,c
  5025  0049F8  EF00  F025         	goto	u3081
  5026  0049FC  EF02  F025         	goto	u3080
  5027  004A00                     u3081:
  5028  004A00  EFE7  F024         	goto	l3720
  5029  004A04                     u3080:
  5030  004A04                     
  5031                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  5032  004A04  0100               	movlb	0	; () banked
  5033  004A06  B1F8               	btfsc	_flags& (0+255),0,b
  5034  004A08  EF08  F025         	goto	u3091
  5035  004A0C  EF0A  F025         	goto	u3090
  5036  004A10                     u3091:
  5037  004A10  EF14  F025         	goto	l3728
  5038  004A14                     u3090:
  5039  004A14                     
  5040                           ; BSR set to: 0
  5041                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  5042  004A14  C013  F00A         	movff	pad@buf,fputs@s
  5043  004A18  C014  F00B         	movff	pad@buf+1,fputs@s+1
  5044  004A1C  C011  F00C         	movff	pad@fp,fputs@fp
  5045  004A20  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  5046  004A24  EC92  F028         	call	_fputs	;wreg free
  5047  004A28                     l3728:
  5048                           
  5049                           ;C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  5050  004A28  C013  F001         	movff	pad@buf,strlen@s
  5051  004A2C  C014  F002         	movff	pad@buf+1,strlen@s+1
  5052  004A30  ECAE  F029         	call	_strlen	;wreg free
  5053  004A34  501A               	movf	pad@w^0,w,c
  5054  004A36  2401               	addwf	?_strlen^0,w,c
  5055  004A38  6E11               	movwf	?_pad^0,c
  5056  004A3A  501B               	movf	(pad@w+1)^0,w,c
  5057  004A3C  2002               	addwfc	(?_strlen+1)^0,w,c
  5058  004A3E  6E12               	movwf	(?_pad+1)^0,c
  5059  004A40  0012               	return		;funcret
  5060  004A42                     __end_of_pad:
  5061                           	callstack 0
  5062                           
  5063 ;; *************** function _strlen *****************
  5064 ;; Defined at:
  5065 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\strlen.c"
  5066 ;; Parameters:    Size  Location     Type
  5067 ;;  s               2    0[COMRAM] PTR const unsigned char 
  5068 ;;		 -> dbuf(32), 
  5069 ;; Auto vars:     Size  Location     Type
  5070 ;;  a               2    2[COMRAM] PTR const unsigned char 
  5071 ;;		 -> dbuf(32), 
  5072 ;; Return value:  Size  Location     Type
  5073 ;;                  2    0[COMRAM] unsigned int 
  5074 ;; Registers used:
  5075 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5076 ;; Tracked objects:
  5077 ;;		On entry : 0/0
  5078 ;;		On exit  : 0/0
  5079 ;;		Unchanged: 0/0
  5080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5081 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5082 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5083 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5084 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5085 ;;Total ram usage:        4 bytes
  5086 ;; Hardware stack levels used: 1
  5087 ;; Hardware stack levels required when called: 1
  5088 ;; This function calls:
  5089 ;;		Nothing
  5090 ;; This function is called by:
  5091 ;;		_pad
  5092 ;; This function uses a non-reentrant model
  5093 ;;
  5094                           
  5095                           	psect	text16
  5096  00535C                     __ptext16:
  5097                           	callstack 0
  5098  00535C                     _strlen:
  5099                           	callstack 22
  5100  00535C  C001  F003         	movff	strlen@s,strlen@a
  5101  005360  C002  F004         	movff	strlen@s+1,strlen@a+1
  5102  005364  EFB6  F029         	goto	l3624
  5103  005368                     l3622:
  5104  005368  4A01               	infsnz	strlen@s^0,f,c
  5105  00536A  2A02               	incf	(strlen@s+1)^0,f,c
  5106  00536C                     l3624:
  5107  00536C  C001  FFD9         	movff	strlen@s,fsr2l
  5108  005370  C002  FFDA         	movff	strlen@s+1,fsr2h
  5109  005374  50DF               	movf	indf2,w,c
  5110  005376  A4D8               	btfss	status,2,c
  5111  005378  EFC0  F029         	goto	u2921
  5112  00537C  EFC2  F029         	goto	u2920
  5113  005380                     u2921:
  5114  005380  EFB4  F029         	goto	l3622
  5115  005384                     u2920:
  5116  005384  5003               	movf	strlen@a^0,w,c
  5117  005386  5C01               	subwf	strlen@s^0,w,c
  5118  005388  6E01               	movwf	?_strlen^0,c
  5119  00538A  5004               	movf	(strlen@a+1)^0,w,c
  5120  00538C  5802               	subwfb	(strlen@s+1)^0,w,c
  5121  00538E  6E02               	movwf	(?_strlen+1)^0,c
  5122  005390  0012               	return		;funcret
  5123  005392                     __end_of_strlen:
  5124                           	callstack 0
  5125                           
  5126 ;; *************** function _fputs *****************
  5127 ;; Defined at:
  5128 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\nf_fputs.c"
  5129 ;; Parameters:    Size  Location     Type
  5130 ;;  s               2    9[COMRAM] PTR const unsigned char 
  5131 ;;		 -> dbuf(32), 
  5132 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  5133 ;;		 -> sprintf@f(11), 
  5134 ;; Auto vars:     Size  Location     Type
  5135 ;;  i               2   14[COMRAM] int 
  5136 ;;  c               1   13[COMRAM] unsigned char 
  5137 ;; Return value:  Size  Location     Type
  5138 ;;                  2    9[COMRAM] int 
  5139 ;; Registers used:
  5140 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5141 ;; Tracked objects:
  5142 ;;		On entry : 0/0
  5143 ;;		On exit  : 0/0
  5144 ;;		Unchanged: 0/0
  5145 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5146 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5147 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5148 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5149 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5150 ;;Total ram usage:        7 bytes
  5151 ;; Hardware stack levels used: 1
  5152 ;; Hardware stack levels required when called: 3
  5153 ;; This function calls:
  5154 ;;		_fputc
  5155 ;; This function is called by:
  5156 ;;		_pad
  5157 ;; This function uses a non-reentrant model
  5158 ;;
  5159                           
  5160                           	psect	text17
  5161  005124                     __ptext17:
  5162                           	callstack 0
  5163  005124                     _fputs:
  5164                           	callstack 20
  5165  005124  0E00               	movlw	0
  5166  005126  6E10               	movwf	(fputs@i+1)^0,c
  5167  005128  0E00               	movlw	0
  5168  00512A  6E0F               	movwf	fputs@i^0,c
  5169  00512C  EFA3  F028         	goto	l3618
  5170  005130                     l3614:
  5171  005130  C00E  F001         	movff	fputs@c,fputc@c
  5172  005134  6A02               	clrf	(fputc@c+1)^0,c
  5173  005136  C00C  F003         	movff	fputs@fp,fputc@fp
  5174  00513A  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  5175  00513E  ECF6  F023         	call	_fputc	;wreg free
  5176  005142  4A0F               	infsnz	fputs@i^0,f,c
  5177  005144  2A10               	incf	(fputs@i+1)^0,f,c
  5178  005146                     l3618:
  5179  005146  500F               	movf	fputs@i^0,w,c
  5180  005148  240A               	addwf	fputs@s^0,w,c
  5181  00514A  6ED9               	movwf	fsr2l,c
  5182  00514C  5010               	movf	(fputs@i+1)^0,w,c
  5183  00514E  200B               	addwfc	(fputs@s+1)^0,w,c
  5184  005150  6EDA               	movwf	fsr2h,c
  5185  005152  50DF               	movf	indf2,w,c
  5186  005154  6E0E               	movwf	fputs@c^0,c
  5187  005156  500E               	movf	fputs@c^0,w,c
  5188  005158  A4D8               	btfss	status,2,c
  5189  00515A  EFB1  F028         	goto	u2911
  5190  00515E  EFB3  F028         	goto	u2910
  5191  005162                     u2911:
  5192  005162  EF98  F028         	goto	l3614
  5193  005166                     u2910:
  5194  005166  0012               	return		;funcret
  5195  005168                     __end_of_fputs:
  5196                           	callstack 0
  5197                           
  5198 ;; *************** function _fputc *****************
  5199 ;; Defined at:
  5200 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\nf_fputc.c"
  5201 ;; Parameters:    Size  Location     Type
  5202 ;;  c               2    0[COMRAM] int 
  5203 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  5204 ;;		 -> sprintf@f(11), 
  5205 ;; Auto vars:     Size  Location     Type
  5206 ;;		None
  5207 ;; Return value:  Size  Location     Type
  5208 ;;                  2    0[COMRAM] int 
  5209 ;; Registers used:
  5210 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5211 ;; Tracked objects:
  5212 ;;		On entry : 0/0
  5213 ;;		On exit  : 0/0
  5214 ;;		Unchanged: 0/0
  5215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5216 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5217 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5218 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5219 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5220 ;;Total ram usage:        9 bytes
  5221 ;; Hardware stack levels used: 1
  5222 ;; Hardware stack levels required when called: 2
  5223 ;; This function calls:
  5224 ;;		_putch
  5225 ;; This function is called by:
  5226 ;;		_pad
  5227 ;;		_vfpfcnvrt
  5228 ;;		_fputs
  5229 ;; This function uses a non-reentrant model
  5230 ;;
  5231                           
  5232                           	psect	text18
  5233  0047EC                     __ptext18:
  5234                           	callstack 0
  5235  0047EC                     _fputc:
  5236                           	callstack 23
  5237  0047EC  5003               	movf	fputc@fp^0,w,c
  5238  0047EE  1004               	iorwf	(fputc@fp+1)^0,w,c
  5239  0047F0  B4D8               	btfsc	status,2,c
  5240  0047F2  EFFD  F023         	goto	u2871
  5241  0047F6  EFFF  F023         	goto	u2870
  5242  0047FA                     u2871:
  5243  0047FA  EF08  F024         	goto	l3602
  5244  0047FE                     u2870:
  5245  0047FE  5003               	movf	fputc@fp^0,w,c
  5246  004800  1004               	iorwf	(fputc@fp+1)^0,w,c
  5247  004802  A4D8               	btfss	status,2,c
  5248  004804  EF06  F024         	goto	u2881
  5249  004808  EF08  F024         	goto	u2880
  5250  00480C                     u2881:
  5251  00480C  EF0D  F024         	goto	l3604
  5252  004810                     u2880:
  5253  004810                     l3602:
  5254  004810  5001               	movf	fputc@c^0,w,c
  5255  004812  EC0F  F02B         	call	_putch
  5256  004816  EF5A  F024         	goto	l1562
  5257  00481A                     l3604:
  5258  00481A  EE20 F009          	lfsr	2,9
  5259  00481E  5003               	movf	fputc@fp^0,w,c
  5260  004820  26D9               	addwf	fsr2l,f,c
  5261  004822  5004               	movf	(fputc@fp+1)^0,w,c
  5262  004824  22DA               	addwfc	fsr2h,f,c
  5263  004826  50DE               	movf	postinc2,w,c
  5264  004828  10DE               	iorwf	postinc2,w,c
  5265  00482A  B4D8               	btfsc	status,2,c
  5266  00482C  EF1A  F024         	goto	u2891
  5267  004830  EF1C  F024         	goto	u2890
  5268  004834                     u2891:
  5269  004834  EF37  F024         	goto	l3608
  5270  004838                     u2890:
  5271  004838  EE20 F009          	lfsr	2,9
  5272  00483C  5003               	movf	fputc@fp^0,w,c
  5273  00483E  26D9               	addwf	fsr2l,f,c
  5274  004840  5004               	movf	(fputc@fp+1)^0,w,c
  5275  004842  22DA               	addwfc	fsr2h,f,c
  5276  004844  EE10 F003          	lfsr	1,3
  5277  004848  5003               	movf	fputc@fp^0,w,c
  5278  00484A  26E1               	addwf	fsr1l,f,c
  5279  00484C  5004               	movf	(fputc@fp+1)^0,w,c
  5280  00484E  22E2               	addwfc	fsr1h,f,c
  5281  004850  50DE               	movf	postinc2,w,c
  5282  004852  5CE6               	subwf	postinc1,w,c
  5283  004854  50E6               	movf	postinc1,w,c
  5284  004856  0A80               	xorlw	128
  5285  004858  6E09               	movwf	(??_fputc+4)^0,c
  5286  00485A  50DE               	movf	postinc2,w,c
  5287  00485C  0A80               	xorlw	128
  5288  00485E  5809               	subwfb	(??_fputc+4)^0,w,c
  5289  004860  B0D8               	btfsc	status,0,c
  5290  004862  EF35  F024         	goto	u2901
  5291  004866  EF37  F024         	goto	u2900
  5292  00486A                     u2901:
  5293  00486A  EF5A  F024         	goto	l1562
  5294  00486E                     u2900:
  5295  00486E                     l3608:
  5296  00486E  EE20 F003          	lfsr	2,3
  5297  004872  5003               	movf	fputc@fp^0,w,c
  5298  004874  26D9               	addwf	fsr2l,f,c
  5299  004876  5004               	movf	(fputc@fp+1)^0,w,c
  5300  004878  22DA               	addwfc	fsr2h,f,c
  5301  00487A  CFDE F005          	movff	postinc2,??_fputc
  5302  00487E  CFDD F006          	movff	postdec2,??_fputc+1
  5303  004882  C003  FFD9         	movff	fputc@fp,fsr2l
  5304  004886  C004  FFDA         	movff	fputc@fp+1,fsr2h
  5305  00488A  CFDE F007          	movff	postinc2,??_fputc+2
  5306  00488E  CFDD F008          	movff	postdec2,??_fputc+3
  5307  004892  5005               	movf	??_fputc^0,w,c
  5308  004894  2407               	addwf	(??_fputc+2)^0,w,c
  5309  004896  6ED9               	movwf	fsr2l,c
  5310  004898  5006               	movf	(??_fputc+1)^0,w,c
  5311  00489A  2008               	addwfc	(??_fputc+3)^0,w,c
  5312  00489C  6EDA               	movwf	fsr2h,c
  5313  00489E  C001  FFDF         	movff	fputc@c,indf2
  5314  0048A2  EE20 F003          	lfsr	2,3
  5315  0048A6  5003               	movf	fputc@fp^0,w,c
  5316  0048A8  26D9               	addwf	fsr2l,f,c
  5317  0048AA  5004               	movf	(fputc@fp+1)^0,w,c
  5318  0048AC  22DA               	addwfc	fsr2h,f,c
  5319  0048AE  2ADE               	incf	postinc2,f,c
  5320  0048B0  0E00               	movlw	0
  5321  0048B2  22DD               	addwfc	postdec2,f,c
  5322  0048B4                     l1562:
  5323  0048B4  0012               	return		;funcret
  5324  0048B6                     __end_of_fputc:
  5325                           	callstack 0
  5326                           
  5327 ;; *************** function _putch *****************
  5328 ;; Defined at:
  5329 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\putch.c"
  5330 ;; Parameters:    Size  Location     Type
  5331 ;;  c               1    wreg     unsigned char 
  5332 ;; Auto vars:     Size  Location     Type
  5333 ;;  c               1    0[COMRAM] unsigned char 
  5334 ;; Return value:  Size  Location     Type
  5335 ;;                  1    wreg      void 
  5336 ;; Registers used:
  5337 ;;		wreg
  5338 ;; Tracked objects:
  5339 ;;		On entry : 0/0
  5340 ;;		On exit  : 0/0
  5341 ;;		Unchanged: 0/0
  5342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5343 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5344 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5345 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5346 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5347 ;;Total ram usage:        0 bytes
  5348 ;; Hardware stack levels used: 1
  5349 ;; Hardware stack levels required when called: 1
  5350 ;; This function calls:
  5351 ;;		Nothing
  5352 ;; This function is called by:
  5353 ;;		_fputc
  5354 ;; This function uses a non-reentrant model
  5355 ;;
  5356                           
  5357                           	psect	text19
  5358  00561E                     __ptext19:
  5359                           	callstack 0
  5360  00561E                     _putch:
  5361                           	callstack 23
  5362  00561E  0012               	return		;funcret
  5363  005620                     __end_of_putch:
  5364                           	callstack 0
  5365                           
  5366 ;; *************** function _abs *****************
  5367 ;; Defined at:
  5368 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\abs.c"
  5369 ;; Parameters:    Size  Location     Type
  5370 ;;  a               2   18[COMRAM] int 
  5371 ;; Auto vars:     Size  Location     Type
  5372 ;;		None
  5373 ;; Return value:  Size  Location     Type
  5374 ;;                  2   18[COMRAM] int 
  5375 ;; Registers used:
  5376 ;;		wreg, status,2, status,0
  5377 ;; Tracked objects:
  5378 ;;		On entry : 0/0
  5379 ;;		On exit  : 0/0
  5380 ;;		Unchanged: 0/0
  5381 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5382 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5383 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5384 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5385 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5386 ;;Total ram usage:        4 bytes
  5387 ;; Hardware stack levels used: 1
  5388 ;; Hardware stack levels required when called: 1
  5389 ;; This function calls:
  5390 ;;		Nothing
  5391 ;; This function is called by:
  5392 ;;		_dtoa
  5393 ;; This function uses a non-reentrant model
  5394 ;;
  5395                           
  5396                           	psect	text20
  5397  005270                     __ptext20:
  5398                           	callstack 0
  5399  005270                     _abs:
  5400                           	callstack 23
  5401  005270  BE14               	btfsc	(abs@a+1)^0,7,c
  5402  005272  EF45  F029         	goto	u3100
  5403  005276  5014               	movf	(abs@a+1)^0,w,c
  5404  005278  E106               	bnz	u3101
  5405  00527A  0413               	decf	abs@a^0,w,c
  5406  00527C  B0D8               	btfsc	status,0,c
  5407  00527E  EF43  F029         	goto	u3101
  5408  005282  EF45  F029         	goto	u3100
  5409  005286                     u3101:
  5410  005286  EF53  F029         	goto	l1547
  5411  00528A                     u3100:
  5412  00528A  C013  F015         	movff	abs@a,??_abs
  5413  00528E  C014  F016         	movff	abs@a+1,??_abs+1
  5414  005292  1E15               	comf	??_abs^0,f,c
  5415  005294  1E16               	comf	(??_abs+1)^0,f,c
  5416  005296  4A15               	infsnz	??_abs^0,f,c
  5417  005298  2A16               	incf	(??_abs+1)^0,f,c
  5418  00529A  C015  F013         	movff	??_abs,?_abs
  5419  00529E  C016  F014         	movff	??_abs+1,?_abs+1
  5420  0052A2  EF57  F029         	goto	l1550
  5421  0052A6                     l1547:
  5422  0052A6  C013  F013         	movff	abs@a,?_abs
  5423  0052AA  C014  F014         	movff	abs@a+1,?_abs+1
  5424  0052AE                     l1550:
  5425  0052AE  0012               	return		;funcret
  5426  0052B0                     __end_of_abs:
  5427                           	callstack 0
  5428                           
  5429 ;; *************** function ___aomod *****************
  5430 ;; Defined at:
  5431 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\aomod.c"
  5432 ;; Parameters:    Size  Location     Type
  5433 ;;  dividend        8    0[COMRAM] long long 
  5434 ;;  divisor         8    8[COMRAM] long long 
  5435 ;; Auto vars:     Size  Location     Type
  5436 ;;  sign            1   17[COMRAM] unsigned char 
  5437 ;;  counter         1   16[COMRAM] unsigned char 
  5438 ;; Return value:  Size  Location     Type
  5439 ;;                  8    0[COMRAM] long long 
  5440 ;; Registers used:
  5441 ;;		wreg, status,2, status,0
  5442 ;; Tracked objects:
  5443 ;;		On entry : 0/0
  5444 ;;		On exit  : 0/0
  5445 ;;		Unchanged: 0/0
  5446 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5447 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5448 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5449 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5450 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5451 ;;Total ram usage:       18 bytes
  5452 ;; Hardware stack levels used: 1
  5453 ;; Hardware stack levels required when called: 1
  5454 ;; This function calls:
  5455 ;;		Nothing
  5456 ;; This function is called by:
  5457 ;;		_dtoa
  5458 ;; This function uses a non-reentrant model
  5459 ;;
  5460                           
  5461                           	psect	text21
  5462  004282                     __ptext21:
  5463                           	callstack 0
  5464  004282                     ___aomod:
  5465                           	callstack 23
  5466  004282  0E00               	movlw	0
  5467  004284  6E12               	movwf	___aomod@sign^0,c
  5468  004286  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
  5469  004288  EF4A  F021         	goto	u3000
  5470  00428C  EF48  F021         	goto	u3001
  5471  004290                     u3001:
  5472  004290  EF5C  F021         	goto	l3682
  5473  004294                     u3000:
  5474  004294  1E08               	comf	(___aomod@dividend+7)^0,f,c
  5475  004296  1E07               	comf	(___aomod@dividend+6)^0,f,c
  5476  004298  1E06               	comf	(___aomod@dividend+5)^0,f,c
  5477  00429A  1E05               	comf	(___aomod@dividend+4)^0,f,c
  5478  00429C  1E04               	comf	(___aomod@dividend+3)^0,f,c
  5479  00429E  1E03               	comf	(___aomod@dividend+2)^0,f,c
  5480  0042A0  1E02               	comf	(___aomod@dividend+1)^0,f,c
  5481  0042A2  6C01               	negf	___aomod@dividend^0,c
  5482  0042A4  0E00               	movlw	0
  5483  0042A6  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  5484  0042A8  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  5485  0042AA  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  5486  0042AC  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  5487  0042AE  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  5488  0042B0  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  5489  0042B2  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  5490  0042B4  0E01               	movlw	1
  5491  0042B6  6E12               	movwf	___aomod@sign^0,c
  5492  0042B8                     l3682:
  5493  0042B8  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
  5494  0042BA  EF63  F021         	goto	u3010
  5495  0042BE  EF61  F021         	goto	u3011
  5496  0042C2                     u3011:
  5497  0042C2  EF73  F021         	goto	l3686
  5498  0042C6                     u3010:
  5499  0042C6  1E10               	comf	(___aomod@divisor+7)^0,f,c
  5500  0042C8  1E0F               	comf	(___aomod@divisor+6)^0,f,c
  5501  0042CA  1E0E               	comf	(___aomod@divisor+5)^0,f,c
  5502  0042CC  1E0D               	comf	(___aomod@divisor+4)^0,f,c
  5503  0042CE  1E0C               	comf	(___aomod@divisor+3)^0,f,c
  5504  0042D0  1E0B               	comf	(___aomod@divisor+2)^0,f,c
  5505  0042D2  1E0A               	comf	(___aomod@divisor+1)^0,f,c
  5506  0042D4  6C09               	negf	___aomod@divisor^0,c
  5507  0042D6  0E00               	movlw	0
  5508  0042D8  220A               	addwfc	(___aomod@divisor+1)^0,f,c
  5509  0042DA  220B               	addwfc	(___aomod@divisor+2)^0,f,c
  5510  0042DC  220C               	addwfc	(___aomod@divisor+3)^0,f,c
  5511  0042DE  220D               	addwfc	(___aomod@divisor+4)^0,f,c
  5512  0042E0  220E               	addwfc	(___aomod@divisor+5)^0,f,c
  5513  0042E2  220F               	addwfc	(___aomod@divisor+6)^0,f,c
  5514  0042E4  2210               	addwfc	(___aomod@divisor+7)^0,f,c
  5515  0042E6                     l3686:
  5516  0042E6  5009               	movf	___aomod@divisor^0,w,c
  5517  0042E8  100A               	iorwf	(___aomod@divisor+1)^0,w,c
  5518  0042EA  100B               	iorwf	(___aomod@divisor+2)^0,w,c
  5519  0042EC  100C               	iorwf	(___aomod@divisor+3)^0,w,c
  5520  0042EE  100D               	iorwf	(___aomod@divisor+4)^0,w,c
  5521  0042F0  100E               	iorwf	(___aomod@divisor+5)^0,w,c
  5522  0042F2  100F               	iorwf	(___aomod@divisor+6)^0,w,c
  5523  0042F4  1010               	iorwf	(___aomod@divisor+7)^0,w,c
  5524  0042F6  B4D8               	btfsc	status,2,c
  5525  0042F8  EF80  F021         	goto	u3021
  5526  0042FC  EF82  F021         	goto	u3020
  5527  004300                     u3021:
  5528  004300  EFCA  F021         	goto	l3702
  5529  004304                     u3020:
  5530  004304  0E01               	movlw	1
  5531  004306  6E11               	movwf	___aomod@counter^0,c
  5532  004308  EF90  F021         	goto	l3692
  5533  00430C                     l3690:
  5534  00430C  90D8               	bcf	status,0,c
  5535  00430E  3609               	rlcf	___aomod@divisor^0,f,c
  5536  004310  360A               	rlcf	(___aomod@divisor+1)^0,f,c
  5537  004312  360B               	rlcf	(___aomod@divisor+2)^0,f,c
  5538  004314  360C               	rlcf	(___aomod@divisor+3)^0,f,c
  5539  004316  360D               	rlcf	(___aomod@divisor+4)^0,f,c
  5540  004318  360E               	rlcf	(___aomod@divisor+5)^0,f,c
  5541  00431A  360F               	rlcf	(___aomod@divisor+6)^0,f,c
  5542  00431C  3610               	rlcf	(___aomod@divisor+7)^0,f,c
  5543  00431E  2A11               	incf	___aomod@counter^0,f,c
  5544  004320                     l3692:
  5545  004320  AE10               	btfss	(___aomod@divisor+7)^0,7,c
  5546  004322  EF95  F021         	goto	u3031
  5547  004326  EF97  F021         	goto	u3030
  5548  00432A                     u3031:
  5549  00432A  EF86  F021         	goto	l3690
  5550  00432E                     u3030:
  5551  00432E                     l3694:
  5552  00432E  5009               	movf	___aomod@divisor^0,w,c
  5553  004330  5C01               	subwf	___aomod@dividend^0,w,c
  5554  004332  500A               	movf	(___aomod@divisor+1)^0,w,c
  5555  004334  5802               	subwfb	(___aomod@dividend+1)^0,w,c
  5556  004336  500B               	movf	(___aomod@divisor+2)^0,w,c
  5557  004338  5803               	subwfb	(___aomod@dividend+2)^0,w,c
  5558  00433A  500C               	movf	(___aomod@divisor+3)^0,w,c
  5559  00433C  5804               	subwfb	(___aomod@dividend+3)^0,w,c
  5560  00433E  500D               	movf	(___aomod@divisor+4)^0,w,c
  5561  004340  5805               	subwfb	(___aomod@dividend+4)^0,w,c
  5562  004342  500E               	movf	(___aomod@divisor+5)^0,w,c
  5563  004344  5806               	subwfb	(___aomod@dividend+5)^0,w,c
  5564  004346  500F               	movf	(___aomod@divisor+6)^0,w,c
  5565  004348  5807               	subwfb	(___aomod@dividend+6)^0,w,c
  5566  00434A  5010               	movf	(___aomod@divisor+7)^0,w,c
  5567  00434C  5808               	subwfb	(___aomod@dividend+7)^0,w,c
  5568  00434E  A0D8               	btfss	status,0,c
  5569  004350  EFAC  F021         	goto	u3041
  5570  004354  EFAE  F021         	goto	u3040
  5571  004358                     u3041:
  5572  004358  EFBE  F021         	goto	l3698
  5573  00435C                     u3040:
  5574  00435C  5009               	movf	___aomod@divisor^0,w,c
  5575  00435E  5E01               	subwf	___aomod@dividend^0,f,c
  5576  004360  500A               	movf	(___aomod@divisor+1)^0,w,c
  5577  004362  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
  5578  004364  500B               	movf	(___aomod@divisor+2)^0,w,c
  5579  004366  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
  5580  004368  500C               	movf	(___aomod@divisor+3)^0,w,c
  5581  00436A  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
  5582  00436C  500D               	movf	(___aomod@divisor+4)^0,w,c
  5583  00436E  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
  5584  004370  500E               	movf	(___aomod@divisor+5)^0,w,c
  5585  004372  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
  5586  004374  500F               	movf	(___aomod@divisor+6)^0,w,c
  5587  004376  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
  5588  004378  5010               	movf	(___aomod@divisor+7)^0,w,c
  5589  00437A  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
  5590  00437C                     l3698:
  5591  00437C  90D8               	bcf	status,0,c
  5592  00437E  3210               	rrcf	(___aomod@divisor+7)^0,f,c
  5593  004380  320F               	rrcf	(___aomod@divisor+6)^0,f,c
  5594  004382  320E               	rrcf	(___aomod@divisor+5)^0,f,c
  5595  004384  320D               	rrcf	(___aomod@divisor+4)^0,f,c
  5596  004386  320C               	rrcf	(___aomod@divisor+3)^0,f,c
  5597  004388  320B               	rrcf	(___aomod@divisor+2)^0,f,c
  5598  00438A  320A               	rrcf	(___aomod@divisor+1)^0,f,c
  5599  00438C  3209               	rrcf	___aomod@divisor^0,f,c
  5600  00438E  2E11               	decfsz	___aomod@counter^0,f,c
  5601  004390  EF97  F021         	goto	l3694
  5602  004394                     l3702:
  5603  004394  5012               	movf	___aomod@sign^0,w,c
  5604  004396  B4D8               	btfsc	status,2,c
  5605  004398  EFD0  F021         	goto	u3051
  5606  00439C  EFD2  F021         	goto	u3050
  5607  0043A0                     u3051:
  5608  0043A0  EFE2  F021         	goto	l3706
  5609  0043A4                     u3050:
  5610  0043A4  1E08               	comf	(___aomod@dividend+7)^0,f,c
  5611  0043A6  1E07               	comf	(___aomod@dividend+6)^0,f,c
  5612  0043A8  1E06               	comf	(___aomod@dividend+5)^0,f,c
  5613  0043AA  1E05               	comf	(___aomod@dividend+4)^0,f,c
  5614  0043AC  1E04               	comf	(___aomod@dividend+3)^0,f,c
  5615  0043AE  1E03               	comf	(___aomod@dividend+2)^0,f,c
  5616  0043B0  1E02               	comf	(___aomod@dividend+1)^0,f,c
  5617  0043B2  6C01               	negf	___aomod@dividend^0,c
  5618  0043B4  0E00               	movlw	0
  5619  0043B6  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  5620  0043B8  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  5621  0043BA  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  5622  0043BC  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  5623  0043BE  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  5624  0043C0  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  5625  0043C2  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  5626  0043C4                     l3706:
  5627  0043C4  C001  F001         	movff	___aomod@dividend,?___aomod
  5628  0043C8  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  5629  0043CC  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  5630  0043D0  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  5631  0043D4  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  5632  0043D8  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  5633  0043DC  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  5634  0043E0  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  5635  0043E4  0012               	return		;funcret
  5636  0043E6                     __end_of___aomod:
  5637                           	callstack 0
  5638                           
  5639 ;; *************** function ___aodiv *****************
  5640 ;; Defined at:
  5641 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\aodiv.c"
  5642 ;; Parameters:    Size  Location     Type
  5643 ;;  dividend        8    0[COMRAM] long long 
  5644 ;;  divisor         8    8[COMRAM] long long 
  5645 ;; Auto vars:     Size  Location     Type
  5646 ;;  quotient        8   18[COMRAM] long long 
  5647 ;;  sign            1   17[COMRAM] unsigned char 
  5648 ;;  counter         1   16[COMRAM] unsigned char 
  5649 ;; Return value:  Size  Location     Type
  5650 ;;                  8    0[COMRAM] long long 
  5651 ;; Registers used:
  5652 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5653 ;; Tracked objects:
  5654 ;;		On entry : 0/0
  5655 ;;		On exit  : 0/0
  5656 ;;		Unchanged: 0/0
  5657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5658 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5659 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5660 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5661 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5662 ;;Total ram usage:       26 bytes
  5663 ;; Hardware stack levels used: 1
  5664 ;; Hardware stack levels required when called: 1
  5665 ;; This function calls:
  5666 ;;		Nothing
  5667 ;; This function is called by:
  5668 ;;		_dtoa
  5669 ;; This function uses a non-reentrant model
  5670 ;;
  5671                           
  5672                           	psect	text22
  5673  003C7A                     __ptext22:
  5674                           	callstack 0
  5675  003C7A                     ___aodiv:
  5676                           	callstack 23
  5677  003C7A  0E00               	movlw	0
  5678  003C7C  6E12               	movwf	___aodiv@sign^0,c
  5679  003C7E  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
  5680  003C80  EF46  F01E         	goto	u2930
  5681  003C84  EF44  F01E         	goto	u2931
  5682  003C88                     u2931:
  5683  003C88  EF58  F01E         	goto	l3638
  5684  003C8C                     u2930:
  5685  003C8C  1E10               	comf	(___aodiv@divisor+7)^0,f,c
  5686  003C8E  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
  5687  003C90  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
  5688  003C92  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
  5689  003C94  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
  5690  003C96  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
  5691  003C98  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
  5692  003C9A  6C09               	negf	___aodiv@divisor^0,c
  5693  003C9C  0E00               	movlw	0
  5694  003C9E  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
  5695  003CA0  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
  5696  003CA2  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
  5697  003CA4  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
  5698  003CA6  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
  5699  003CA8  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
  5700  003CAA  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
  5701  003CAC  0E01               	movlw	1
  5702  003CAE  6E12               	movwf	___aodiv@sign^0,c
  5703  003CB0                     l3638:
  5704  003CB0  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
  5705  003CB2  EF5F  F01E         	goto	u2940
  5706  003CB6  EF5D  F01E         	goto	u2941
  5707  003CBA                     u2941:
  5708  003CBA  EF71  F01E         	goto	l3644
  5709  003CBE                     u2940:
  5710  003CBE  1E08               	comf	(___aodiv@dividend+7)^0,f,c
  5711  003CC0  1E07               	comf	(___aodiv@dividend+6)^0,f,c
  5712  003CC2  1E06               	comf	(___aodiv@dividend+5)^0,f,c
  5713  003CC4  1E05               	comf	(___aodiv@dividend+4)^0,f,c
  5714  003CC6  1E04               	comf	(___aodiv@dividend+3)^0,f,c
  5715  003CC8  1E03               	comf	(___aodiv@dividend+2)^0,f,c
  5716  003CCA  1E02               	comf	(___aodiv@dividend+1)^0,f,c
  5717  003CCC  6C01               	negf	___aodiv@dividend^0,c
  5718  003CCE  0E00               	movlw	0
  5719  003CD0  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
  5720  003CD2  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
  5721  003CD4  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
  5722  003CD6  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
  5723  003CD8  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
  5724  003CDA  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
  5725  003CDC  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
  5726  003CDE  0E01               	movlw	1
  5727  003CE0  1A12               	xorwf	___aodiv@sign^0,f,c
  5728  003CE2                     l3644:
  5729  003CE2  EE20  F013         	lfsr	2,___aodiv@quotient
  5730  003CE6  0E07               	movlw	7
  5731  003CE8                     u2951:
  5732  003CE8  6ADE               	clrf	postinc2,c
  5733  003CEA  06E8               	decf	wreg,f,c
  5734  003CEC  E2FD               	bc	u2951
  5735  003CEE  5009               	movf	___aodiv@divisor^0,w,c
  5736  003CF0  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
  5737  003CF2  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
  5738  003CF4  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
  5739  003CF6  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
  5740  003CF8  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
  5741  003CFA  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
  5742  003CFC  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
  5743  003CFE  B4D8               	btfsc	status,2,c
  5744  003D00  EF84  F01E         	goto	u2961
  5745  003D04  EF86  F01E         	goto	u2960
  5746  003D08                     u2961:
  5747  003D08  EFD8  F01E         	goto	l3666
  5748  003D0C                     u2960:
  5749  003D0C  0E01               	movlw	1
  5750  003D0E  6E11               	movwf	___aodiv@counter^0,c
  5751  003D10  EF94  F01E         	goto	l3652
  5752  003D14                     l3650:
  5753  003D14  90D8               	bcf	status,0,c
  5754  003D16  3609               	rlcf	___aodiv@divisor^0,f,c
  5755  003D18  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
  5756  003D1A  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
  5757  003D1C  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
  5758  003D1E  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
  5759  003D20  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
  5760  003D22  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
  5761  003D24  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
  5762  003D26  2A11               	incf	___aodiv@counter^0,f,c
  5763  003D28                     l3652:
  5764  003D28  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
  5765  003D2A  EF99  F01E         	goto	u2971
  5766  003D2E  EF9B  F01E         	goto	u2970
  5767  003D32                     u2971:
  5768  003D32  EF8A  F01E         	goto	l3650
  5769  003D36                     u2970:
  5770  003D36                     l3654:
  5771  003D36  90D8               	bcf	status,0,c
  5772  003D38  3613               	rlcf	___aodiv@quotient^0,f,c
  5773  003D3A  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
  5774  003D3C  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
  5775  003D3E  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
  5776  003D40  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
  5777  003D42  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
  5778  003D44  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
  5779  003D46  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
  5780  003D48  5009               	movf	___aodiv@divisor^0,w,c
  5781  003D4A  5C01               	subwf	___aodiv@dividend^0,w,c
  5782  003D4C  500A               	movf	(___aodiv@divisor+1)^0,w,c
  5783  003D4E  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
  5784  003D50  500B               	movf	(___aodiv@divisor+2)^0,w,c
  5785  003D52  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
  5786  003D54  500C               	movf	(___aodiv@divisor+3)^0,w,c
  5787  003D56  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
  5788  003D58  500D               	movf	(___aodiv@divisor+4)^0,w,c
  5789  003D5A  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
  5790  003D5C  500E               	movf	(___aodiv@divisor+5)^0,w,c
  5791  003D5E  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
  5792  003D60  500F               	movf	(___aodiv@divisor+6)^0,w,c
  5793  003D62  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
  5794  003D64  5010               	movf	(___aodiv@divisor+7)^0,w,c
  5795  003D66  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
  5796  003D68  A0D8               	btfss	status,0,c
  5797  003D6A  EFB9  F01E         	goto	u2981
  5798  003D6E  EFBB  F01E         	goto	u2980
  5799  003D72                     u2981:
  5800  003D72  EFCC  F01E         	goto	l3662
  5801  003D76                     u2980:
  5802  003D76  5009               	movf	___aodiv@divisor^0,w,c
  5803  003D78  5E01               	subwf	___aodiv@dividend^0,f,c
  5804  003D7A  500A               	movf	(___aodiv@divisor+1)^0,w,c
  5805  003D7C  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
  5806  003D7E  500B               	movf	(___aodiv@divisor+2)^0,w,c
  5807  003D80  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
  5808  003D82  500C               	movf	(___aodiv@divisor+3)^0,w,c
  5809  003D84  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
  5810  003D86  500D               	movf	(___aodiv@divisor+4)^0,w,c
  5811  003D88  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
  5812  003D8A  500E               	movf	(___aodiv@divisor+5)^0,w,c
  5813  003D8C  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
  5814  003D8E  500F               	movf	(___aodiv@divisor+6)^0,w,c
  5815  003D90  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
  5816  003D92  5010               	movf	(___aodiv@divisor+7)^0,w,c
  5817  003D94  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
  5818  003D96  8013               	bsf	___aodiv@quotient^0,0,c
  5819  003D98                     l3662:
  5820  003D98  90D8               	bcf	status,0,c
  5821  003D9A  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
  5822  003D9C  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
  5823  003D9E  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
  5824  003DA0  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
  5825  003DA2  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
  5826  003DA4  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
  5827  003DA6  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
  5828  003DA8  3209               	rrcf	___aodiv@divisor^0,f,c
  5829  003DAA  2E11               	decfsz	___aodiv@counter^0,f,c
  5830  003DAC  EF9B  F01E         	goto	l3654
  5831  003DB0                     l3666:
  5832  003DB0  5012               	movf	___aodiv@sign^0,w,c
  5833  003DB2  B4D8               	btfsc	status,2,c
  5834  003DB4  EFDE  F01E         	goto	u2991
  5835  003DB8  EFE0  F01E         	goto	u2990
  5836  003DBC                     u2991:
  5837  003DBC  EFF0  F01E         	goto	l3670
  5838  003DC0                     u2990:
  5839  003DC0  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
  5840  003DC2  1E19               	comf	(___aodiv@quotient+6)^0,f,c
  5841  003DC4  1E18               	comf	(___aodiv@quotient+5)^0,f,c
  5842  003DC6  1E17               	comf	(___aodiv@quotient+4)^0,f,c
  5843  003DC8  1E16               	comf	(___aodiv@quotient+3)^0,f,c
  5844  003DCA  1E15               	comf	(___aodiv@quotient+2)^0,f,c
  5845  003DCC  1E14               	comf	(___aodiv@quotient+1)^0,f,c
  5846  003DCE  6C13               	negf	___aodiv@quotient^0,c
  5847  003DD0  0E00               	movlw	0
  5848  003DD2  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
  5849  003DD4  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
  5850  003DD6  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
  5851  003DD8  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
  5852  003DDA  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
  5853  003DDC  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
  5854  003DDE  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
  5855  003DE0                     l3670:
  5856  003DE0  C013  F001         	movff	___aodiv@quotient,?___aodiv
  5857  003DE4  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  5858  003DE8  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  5859  003DEC  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  5860  003DF0  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  5861  003DF4  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  5862  003DF8  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  5863  003DFC  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  5864  003E00  0012               	return		;funcret
  5865  003E02                     __end_of___aodiv:
  5866                           	callstack 0
  5867                           
  5868 ;; *************** function _sendStringSerial4 *****************
  5869 ;; Defined at:
  5870 ;;		line 36 in file "serial.c"
  5871 ;; Parameters:    Size  Location     Type
  5872 ;;  string          2    1[COMRAM] PTR unsigned char 
  5873 ;;		 -> color_predict@buf(100), check_color_reading@buf(100), color_display@buf(100), 
  5874 ;; Auto vars:     Size  Location     Type
  5875 ;;		None
  5876 ;; Return value:  Size  Location     Type
  5877 ;;                  1    wreg      void 
  5878 ;; Registers used:
  5879 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5880 ;; Tracked objects:
  5881 ;;		On entry : 0/0
  5882 ;;		On exit  : 0/0
  5883 ;;		Unchanged: 0/0
  5884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5885 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5886 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5887 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5888 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5889 ;;Total ram usage:        2 bytes
  5890 ;; Hardware stack levels used: 1
  5891 ;; Hardware stack levels required when called: 2
  5892 ;; This function calls:
  5893 ;;		_sendCharSerial4
  5894 ;; This function is called by:
  5895 ;;		_color_display
  5896 ;;		_color_predict
  5897 ;;		_check_color_reading
  5898 ;; This function uses a non-reentrant model
  5899 ;;
  5900                           
  5901                           	psect	text23
  5902  0053C6                     __ptext23:
  5903                           	callstack 0
  5904  0053C6                     _sendStringSerial4:
  5905                           	callstack 26
  5906  0053C6                     
  5907                           ;serial.c: 38:     while(*string != 0){
  5908  0053C6  EFEE  F029         	goto	l4360
  5909  0053CA                     l4356:
  5910                           
  5911                           ;serial.c: 39:   sendCharSerial4(*string++);}
  5912  0053CA  C002  FFD9         	movff	sendStringSerial4@string,fsr2l
  5913  0053CE  C003  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  5914  0053D2  50DF               	movf	indf2,w,c
  5915  0053D4  ECDC  F02A         	call	_sendCharSerial4
  5916  0053D8  4A02               	infsnz	sendStringSerial4@string^0,f,c
  5917  0053DA  2A03               	incf	(sendStringSerial4@string+1)^0,f,c
  5918  0053DC                     l4360:
  5919                           
  5920                           ;serial.c: 38:     while(*string != 0){
  5921  0053DC  C002  FFD9         	movff	sendStringSerial4@string,fsr2l
  5922  0053E0  C003  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  5923  0053E4  50DF               	movf	indf2,w,c
  5924  0053E6  A4D8               	btfss	status,2,c
  5925  0053E8  EFF8  F029         	goto	u4101
  5926  0053EC  EFFA  F029         	goto	u4100
  5927  0053F0                     u4101:
  5928  0053F0  EFE5  F029         	goto	l4356
  5929  0053F4                     u4100:
  5930  0053F4  0012               	return		;funcret
  5931  0053F6                     __end_of_sendStringSerial4:
  5932                           	callstack 0
  5933                           
  5934 ;; *************** function _sendCharSerial4 *****************
  5935 ;; Defined at:
  5936 ;;		line 29 in file "serial.c"
  5937 ;; Parameters:    Size  Location     Type
  5938 ;;  charToSend      1    wreg     unsigned char 
  5939 ;; Auto vars:     Size  Location     Type
  5940 ;;  charToSend      1    0[COMRAM] unsigned char 
  5941 ;; Return value:  Size  Location     Type
  5942 ;;                  1    wreg      void 
  5943 ;; Registers used:
  5944 ;;		wreg
  5945 ;; Tracked objects:
  5946 ;;		On entry : 0/0
  5947 ;;		On exit  : 0/0
  5948 ;;		Unchanged: 0/0
  5949 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5950 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5951 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5952 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5953 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5954 ;;Total ram usage:        1 bytes
  5955 ;; Hardware stack levels used: 1
  5956 ;; Hardware stack levels required when called: 1
  5957 ;; This function calls:
  5958 ;;		Nothing
  5959 ;; This function is called by:
  5960 ;;		_sendStringSerial4
  5961 ;; This function uses a non-reentrant model
  5962 ;;
  5963                           
  5964                           	psect	text24
  5965  0055B8                     __ptext24:
  5966                           	callstack 0
  5967  0055B8                     _sendCharSerial4:
  5968                           	callstack 26
  5969                           
  5970                           ;incstack = 0
  5971                           ;sendCharSerial4@charToSend stored from wreg
  5972  0055B8  6E01               	movwf	sendCharSerial4@charToSend^0,c
  5973  0055BA                     l431:
  5974  0055BA  010E               	movlb	14	; () banked
  5975  0055BC  A537               	btfss	55,2,b	;volatile
  5976  0055BE  EFE3  F02A         	goto	u3831
  5977  0055C2  EFE5  F02A         	goto	u3830
  5978  0055C6                     u3831:
  5979  0055C6  EFDD  F02A         	goto	l431
  5980  0055CA                     u3830:
  5981  0055CA                     
  5982                           ; BSR set to: 14
  5983                           ;serial.c: 31:     TX4REG = charToSend;
  5984  0055CA  C001  FEE4         	movff	sendCharSerial4@charToSend,3812	;volatile
  5985  0055CE                     
  5986                           ; BSR set to: 14
  5987  0055CE  0012               	return		;funcret
  5988  0055D0                     __end_of_sendCharSerial4:
  5989                           	callstack 0
  5990                           
  5991 ;; *************** function _calibrate_white *****************
  5992 ;; Defined at:
  5993 ;;		line 258 in file "color.c"
  5994 ;; Parameters:    Size  Location     Type
  5995 ;;  w               2   11[COMRAM] PTR struct white_card
  5996 ;;		 -> main@white(26), 
  5997 ;; Auto vars:     Size  Location     Type
  5998 ;;		None
  5999 ;; Return value:  Size  Location     Type
  6000 ;;                  1    wreg      void 
  6001 ;; Registers used:
  6002 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6003 ;; Tracked objects:
  6004 ;;		On entry : 0/0
  6005 ;;		On exit  : 0/0
  6006 ;;		Unchanged: 0/0
  6007 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6008 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6009 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6010 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6011 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6012 ;;Total ram usage:        4 bytes
  6013 ;; Hardware stack levels used: 1
  6014 ;; Hardware stack levels required when called: 4
  6015 ;; This function calls:
  6016 ;;		_LED_B
  6017 ;;		_LED_C
  6018 ;;		_LED_G
  6019 ;;		_LED_OFF
  6020 ;;		_LED_R
  6021 ;;		_color_read_Blue
  6022 ;;		_color_read_Clear
  6023 ;;		_color_read_Green
  6024 ;;		_color_read_Red
  6025 ;;		_toggle_light
  6026 ;; This function is called by:
  6027 ;;		_main
  6028 ;;		_test_function
  6029 ;; This function uses a non-reentrant model
  6030 ;;
  6031                           
  6032                           	psect	text25
  6033  00320C                     __ptext25:
  6034                           	callstack 0
  6035  00320C                     _calibrate_white:
  6036                           	callstack 25
  6037  00320C                     
  6038                           ;color.c: 258: void calibrate_white(struct white_card *w);color.c: 259: {;color.c: 260: 
      +                              LED_OFF();
  6039  00320C  EC5E  F02A         	call	_LED_OFF	;wreg free
  6040  003210                     
  6041                           ;color.c: 261:     toggle_light(1,2);
  6042  003210  0E02               	movlw	2
  6043  003212  6E01               	movwf	toggle_light@toggletime^0,c
  6044  003214  0E01               	movlw	1
  6045  003216  ECB0  F017         	call	_toggle_light
  6046  00321A                     
  6047                           ;color.c: 262:     _delay((unsigned long)((500)*(64000000/4000.0)));
  6048  00321A  0E29               	movlw	41
  6049  00321C  6E0F               	movwf	(??_calibrate_white+1)^0,c
  6050  00321E  0E96               	movlw	150
  6051  003220  6E0E               	movwf	??_calibrate_white^0,c
  6052  003222  0E7F               	movlw	127
  6053  003224                     u5857:
  6054  003224  2EE8               	decfsz	wreg,f,c
  6055  003226  D7FE               	bra	u5857
  6056  003228  2E0E               	decfsz	??_calibrate_white^0,f,c
  6057  00322A  D7FC               	bra	u5857
  6058  00322C  2E0F               	decfsz	(??_calibrate_white+1)^0,f,c
  6059  00322E  D7FA               	bra	u5857
  6060  003230  F000               	nop	
  6061  003232                     
  6062                           ;color.c: 264:     LED_R();
  6063  003232  EC4E  F02A         	call	_LED_R	;wreg free
  6064  003236                     
  6065                           ;color.c: 265:     w->RR = color_read_Red(); w->RG = color_read_Green(); w->RB = color_r
      +                          ead_Blue();
  6066  003236  ECCF  F027         	call	_color_read_Red	;wreg free
  6067  00323A  C00C  FFD9         	movff	calibrate_white@w,fsr2l
  6068  00323E  C00D  FFDA         	movff	calibrate_white@w+1,fsr2h
  6069  003242  C005  FFDE         	movff	?_color_read_Red,postinc2
  6070  003246  C006  FFDD         	movff	?_color_read_Red+1,postdec2
  6071  00324A  ECF7  F027         	call	_color_read_Green	;wreg free
  6072  00324E  EE20 F002          	lfsr	2,2
  6073  003252  500C               	movf	calibrate_white@w^0,w,c
  6074  003254  26D9               	addwf	fsr2l,f,c
  6075  003256  500D               	movf	(calibrate_white@w+1)^0,w,c
  6076  003258  22DA               	addwfc	fsr2h,f,c
  6077  00325A  C005  FFDE         	movff	?_color_read_Green,postinc2
  6078  00325E  C006  FFDD         	movff	?_color_read_Green+1,postdec2
  6079  003262  EC1F  F028         	call	_color_read_Blue	;wreg free
  6080  003266  EE20 F004          	lfsr	2,4
  6081  00326A  500C               	movf	calibrate_white@w^0,w,c
  6082  00326C  26D9               	addwf	fsr2l,f,c
  6083  00326E  500D               	movf	(calibrate_white@w+1)^0,w,c
  6084  003270  22DA               	addwfc	fsr2h,f,c
  6085  003272  C005  FFDE         	movff	?_color_read_Blue,postinc2
  6086  003276  C006  FFDD         	movff	?_color_read_Blue+1,postdec2
  6087  00327A                     
  6088                           ;color.c: 266:     _delay((unsigned long)((100)*(64000000/4000.0)));
  6089  00327A  0E09               	movlw	9
  6090  00327C  6E0F               	movwf	(??_calibrate_white+1)^0,c
  6091  00327E  0E1E               	movlw	30
  6092  003280  6E0E               	movwf	??_calibrate_white^0,c
  6093  003282  0EE4               	movlw	228
  6094  003284                     u5867:
  6095  003284  2EE8               	decfsz	wreg,f,c
  6096  003286  D7FE               	bra	u5867
  6097  003288  2E0E               	decfsz	??_calibrate_white^0,f,c
  6098  00328A  D7FC               	bra	u5867
  6099  00328C  2E0F               	decfsz	(??_calibrate_white+1)^0,f,c
  6100  00328E  D7FA               	bra	u5867
  6101  003290  D000               	nop2	
  6102  003292                     
  6103                           ;color.c: 268:     LED_G();
  6104  003292  EC6E  F02A         	call	_LED_G	;wreg free
  6105  003296                     
  6106                           ;color.c: 269:     w->GR = color_read_Red(); w->GG = color_read_Green(); w->GB = color_r
      +                          ead_Blue();
  6107  003296  ECCF  F027         	call	_color_read_Red	;wreg free
  6108  00329A  EE20 F006          	lfsr	2,6
  6109  00329E  500C               	movf	calibrate_white@w^0,w,c
  6110  0032A0  26D9               	addwf	fsr2l,f,c
  6111  0032A2  500D               	movf	(calibrate_white@w+1)^0,w,c
  6112  0032A4  22DA               	addwfc	fsr2h,f,c
  6113  0032A6  C005  FFDE         	movff	?_color_read_Red,postinc2
  6114  0032AA  C006  FFDD         	movff	?_color_read_Red+1,postdec2
  6115  0032AE  ECF7  F027         	call	_color_read_Green	;wreg free
  6116  0032B2  EE20 F008          	lfsr	2,8
  6117  0032B6  500C               	movf	calibrate_white@w^0,w,c
  6118  0032B8  26D9               	addwf	fsr2l,f,c
  6119  0032BA  500D               	movf	(calibrate_white@w+1)^0,w,c
  6120  0032BC  22DA               	addwfc	fsr2h,f,c
  6121  0032BE  C005  FFDE         	movff	?_color_read_Green,postinc2
  6122  0032C2  C006  FFDD         	movff	?_color_read_Green+1,postdec2
  6123  0032C6  EC1F  F028         	call	_color_read_Blue	;wreg free
  6124  0032CA  EE20 F00A          	lfsr	2,10
  6125  0032CE  500C               	movf	calibrate_white@w^0,w,c
  6126  0032D0  26D9               	addwf	fsr2l,f,c
  6127  0032D2  500D               	movf	(calibrate_white@w+1)^0,w,c
  6128  0032D4  22DA               	addwfc	fsr2h,f,c
  6129  0032D6  C005  FFDE         	movff	?_color_read_Blue,postinc2
  6130  0032DA  C006  FFDD         	movff	?_color_read_Blue+1,postdec2
  6131  0032DE                     
  6132                           ;color.c: 271:     _delay((unsigned long)((100)*(64000000/4000.0)));
  6133  0032DE  0E09               	movlw	9
  6134  0032E0  6E0F               	movwf	(??_calibrate_white+1)^0,c
  6135  0032E2  0E1E               	movlw	30
  6136  0032E4  6E0E               	movwf	??_calibrate_white^0,c
  6137  0032E6  0EE4               	movlw	228
  6138  0032E8                     u5877:
  6139  0032E8  2EE8               	decfsz	wreg,f,c
  6140  0032EA  D7FE               	bra	u5877
  6141  0032EC  2E0E               	decfsz	??_calibrate_white^0,f,c
  6142  0032EE  D7FC               	bra	u5877
  6143  0032F0  2E0F               	decfsz	(??_calibrate_white+1)^0,f,c
  6144  0032F2  D7FA               	bra	u5877
  6145  0032F4  D000               	nop2	
  6146  0032F6                     
  6147                           ;color.c: 273:     LED_B();
  6148  0032F6  EC7E  F02A         	call	_LED_B	;wreg free
  6149  0032FA                     
  6150                           ;color.c: 274:     w->BR = color_read_Red(); w->BG = color_read_Green(); w->BB = color_r
      +                          ead_Blue();
  6151  0032FA  ECCF  F027         	call	_color_read_Red	;wreg free
  6152  0032FE  EE20 F00C          	lfsr	2,12
  6153  003302  500C               	movf	calibrate_white@w^0,w,c
  6154  003304  26D9               	addwf	fsr2l,f,c
  6155  003306  500D               	movf	(calibrate_white@w+1)^0,w,c
  6156  003308  22DA               	addwfc	fsr2h,f,c
  6157  00330A  C005  FFDE         	movff	?_color_read_Red,postinc2
  6158  00330E  C006  FFDD         	movff	?_color_read_Red+1,postdec2
  6159  003312  ECF7  F027         	call	_color_read_Green	;wreg free
  6160  003316  EE20 F00E          	lfsr	2,14
  6161  00331A  500C               	movf	calibrate_white@w^0,w,c
  6162  00331C  26D9               	addwf	fsr2l,f,c
  6163  00331E  500D               	movf	(calibrate_white@w+1)^0,w,c
  6164  003320  22DA               	addwfc	fsr2h,f,c
  6165  003322  C005  FFDE         	movff	?_color_read_Green,postinc2
  6166  003326  C006  FFDD         	movff	?_color_read_Green+1,postdec2
  6167  00332A  EC1F  F028         	call	_color_read_Blue	;wreg free
  6168  00332E  EE20 F010          	lfsr	2,16
  6169  003332  500C               	movf	calibrate_white@w^0,w,c
  6170  003334  26D9               	addwf	fsr2l,f,c
  6171  003336  500D               	movf	(calibrate_white@w+1)^0,w,c
  6172  003338  22DA               	addwfc	fsr2h,f,c
  6173  00333A  C005  FFDE         	movff	?_color_read_Blue,postinc2
  6174  00333E  C006  FFDD         	movff	?_color_read_Blue+1,postdec2
  6175  003342                     
  6176                           ;color.c: 275:     _delay((unsigned long)((100)*(64000000/4000.0)));
  6177  003342  0E09               	movlw	9
  6178  003344  6E0F               	movwf	(??_calibrate_white+1)^0,c
  6179  003346  0E1E               	movlw	30
  6180  003348  6E0E               	movwf	??_calibrate_white^0,c
  6181  00334A  0EE4               	movlw	228
  6182  00334C                     u5887:
  6183  00334C  2EE8               	decfsz	wreg,f,c
  6184  00334E  D7FE               	bra	u5887
  6185  003350  2E0E               	decfsz	??_calibrate_white^0,f,c
  6186  003352  D7FC               	bra	u5887
  6187  003354  2E0F               	decfsz	(??_calibrate_white+1)^0,f,c
  6188  003356  D7FA               	bra	u5887
  6189  003358  D000               	nop2	
  6190  00335A                     
  6191                           ;color.c: 277:     LED_C();
  6192  00335A  EC8E  F02A         	call	_LED_C	;wreg free
  6193  00335E                     
  6194                           ;color.c: 278:     w->CR = color_read_Red(); w->CG = color_read_Green(); w->CB = color_r
      +                          ead_Blue(); w->CC = color_read_Clear();
  6195  00335E  ECCF  F027         	call	_color_read_Red	;wreg free
  6196  003362  EE20 F012          	lfsr	2,18
  6197  003366  500C               	movf	calibrate_white@w^0,w,c
  6198  003368  26D9               	addwf	fsr2l,f,c
  6199  00336A  500D               	movf	(calibrate_white@w+1)^0,w,c
  6200  00336C  22DA               	addwfc	fsr2h,f,c
  6201  00336E  C005  FFDE         	movff	?_color_read_Red,postinc2
  6202  003372  C006  FFDD         	movff	?_color_read_Red+1,postdec2
  6203  003376  ECF7  F027         	call	_color_read_Green	;wreg free
  6204  00337A  EE20 F014          	lfsr	2,20
  6205  00337E  500C               	movf	calibrate_white@w^0,w,c
  6206  003380  26D9               	addwf	fsr2l,f,c
  6207  003382  500D               	movf	(calibrate_white@w+1)^0,w,c
  6208  003384  22DA               	addwfc	fsr2h,f,c
  6209  003386  C005  FFDE         	movff	?_color_read_Green,postinc2
  6210  00338A  C006  FFDD         	movff	?_color_read_Green+1,postdec2
  6211  00338E  EC1F  F028         	call	_color_read_Blue	;wreg free
  6212  003392  EE20 F016          	lfsr	2,22
  6213  003396  500C               	movf	calibrate_white@w^0,w,c
  6214  003398  26D9               	addwf	fsr2l,f,c
  6215  00339A  500D               	movf	(calibrate_white@w+1)^0,w,c
  6216  00339C  22DA               	addwfc	fsr2h,f,c
  6217  00339E  C005  FFDE         	movff	?_color_read_Blue,postinc2
  6218  0033A2  C006  FFDD         	movff	?_color_read_Blue+1,postdec2
  6219  0033A6  EC47  F028         	call	_color_read_Clear	;wreg free
  6220  0033AA  EE20 F018          	lfsr	2,24
  6221  0033AE  500C               	movf	calibrate_white@w^0,w,c
  6222  0033B0  26D9               	addwf	fsr2l,f,c
  6223  0033B2  500D               	movf	(calibrate_white@w+1)^0,w,c
  6224  0033B4  22DA               	addwfc	fsr2h,f,c
  6225  0033B6  C005  FFDE         	movff	?_color_read_Clear,postinc2
  6226  0033BA  C006  FFDD         	movff	?_color_read_Clear+1,postdec2
  6227  0033BE                     
  6228                           ;color.c: 279:     _delay((unsigned long)((500)*(64000000/4000.0)));
  6229  0033BE  0E29               	movlw	41
  6230  0033C0  6E0F               	movwf	(??_calibrate_white+1)^0,c
  6231  0033C2  0E96               	movlw	150
  6232  0033C4  6E0E               	movwf	??_calibrate_white^0,c
  6233  0033C6  0E7F               	movlw	127
  6234  0033C8                     u5897:
  6235  0033C8  2EE8               	decfsz	wreg,f,c
  6236  0033CA  D7FE               	bra	u5897
  6237  0033CC  2E0E               	decfsz	??_calibrate_white^0,f,c
  6238  0033CE  D7FC               	bra	u5897
  6239  0033D0  2E0F               	decfsz	(??_calibrate_white+1)^0,f,c
  6240  0033D2  D7FA               	bra	u5897
  6241  0033D4  F000               	nop	
  6242  0033D6                     
  6243                           ;color.c: 281:     LED_OFF();
  6244  0033D6  EC5E  F02A         	call	_LED_OFF	;wreg free
  6245  0033DA                     
  6246                           ;color.c: 282:     _delay((unsigned long)((500)*(64000000/4000.0)));
  6247  0033DA  0E29               	movlw	41
  6248  0033DC  6E0F               	movwf	(??_calibrate_white+1)^0,c
  6249  0033DE  0E96               	movlw	150
  6250  0033E0  6E0E               	movwf	??_calibrate_white^0,c
  6251  0033E2  0E7F               	movlw	127
  6252  0033E4                     u5907:
  6253  0033E4  2EE8               	decfsz	wreg,f,c
  6254  0033E6  D7FE               	bra	u5907
  6255  0033E8  2E0E               	decfsz	??_calibrate_white^0,f,c
  6256  0033EA  D7FC               	bra	u5907
  6257  0033EC  2E0F               	decfsz	(??_calibrate_white+1)^0,f,c
  6258  0033EE  D7FA               	bra	u5907
  6259  0033F0  F000               	nop	
  6260  0033F2                     
  6261                           ;color.c: 283:     toggle_light(1,2);
  6262  0033F2  0E02               	movlw	2
  6263  0033F4  6E01               	movwf	toggle_light@toggletime^0,c
  6264  0033F6  0E01               	movlw	1
  6265  0033F8  ECB0  F017         	call	_toggle_light
  6266  0033FC  0012               	return		;funcret
  6267  0033FE                     __end_of_calibrate_white:
  6268                           	callstack 0
  6269                           
  6270 ;; *************** function _color_read_Red *****************
  6271 ;; Defined at:
  6272 ;;		line 91 in file "color.c"
  6273 ;; Parameters:    Size  Location     Type
  6274 ;;		None
  6275 ;; Auto vars:     Size  Location     Type
  6276 ;;  tmp             2    9[COMRAM] unsigned int 
  6277 ;; Return value:  Size  Location     Type
  6278 ;;                  2    4[COMRAM] unsigned int 
  6279 ;; Registers used:
  6280 ;;		wreg, status,2, status,0, cstack
  6281 ;; Tracked objects:
  6282 ;;		On entry : 0/0
  6283 ;;		On exit  : 0/0
  6284 ;;		Unchanged: 0/0
  6285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6286 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6287 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6288 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6289 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6290 ;;Total ram usage:        7 bytes
  6291 ;; Hardware stack levels used: 1
  6292 ;; Hardware stack levels required when called: 3
  6293 ;; This function calls:
  6294 ;;		_I2C_2_Master_Read
  6295 ;;		_I2C_2_Master_RepStart
  6296 ;;		_I2C_2_Master_Start
  6297 ;;		_I2C_2_Master_Stop
  6298 ;;		_I2C_2_Master_Write
  6299 ;; This function is called by:
  6300 ;;		_read_color
  6301 ;;		_calibrate_white
  6302 ;; This function uses a non-reentrant model
  6303 ;;
  6304                           
  6305                           	psect	text26
  6306  004F9E                     __ptext26:
  6307                           	callstack 0
  6308  004F9E                     _color_read_Red:
  6309                           	callstack 24
  6310  004F9E                     
  6311                           ;color.c: 93:  unsigned int tmp;;color.c: 94:  I2C_2_Master_Start();
  6312  004F9E  EC09  F02B         	call	_I2C_2_Master_Start	;wreg free
  6313                           
  6314                           ;color.c: 95:  I2C_2_Master_Write(0x52 | 0x00);
  6315  004FA2  0E52               	movlw	82
  6316  004FA4  ECF3  F02A         	call	_I2C_2_Master_Write
  6317                           
  6318                           ;color.c: 96:  I2C_2_Master_Write(0xA0 | 0x16);
  6319  004FA8  0EB6               	movlw	182
  6320  004FAA  ECF3  F02A         	call	_I2C_2_Master_Write
  6321                           
  6322                           ;color.c: 97:  I2C_2_Master_RepStart();
  6323  004FAE  ECFF  F02A         	call	_I2C_2_Master_RepStart	;wreg free
  6324                           
  6325                           ;color.c: 98:  I2C_2_Master_Write(0x52 | 0x01);
  6326  004FB2  0E53               	movlw	83
  6327  004FB4  ECF3  F02A         	call	_I2C_2_Master_Write
  6328                           
  6329                           ;color.c: 99:  tmp=I2C_2_Master_Read(1);
  6330  004FB8  0E01               	movlw	1
  6331  004FBA  ECB4  F028         	call	_I2C_2_Master_Read
  6332  004FBE  6E07               	movwf	??_color_read_Red^0,c
  6333  004FC0  5007               	movf	??_color_read_Red^0,w,c
  6334  004FC2  6E0A               	movwf	color_read_Red@tmp^0,c
  6335  004FC4  6A0B               	clrf	(color_read_Red@tmp+1)^0,c
  6336                           
  6337                           ;color.c: 100:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  6338  004FC6  0E00               	movlw	0
  6339  004FC8  ECB4  F028         	call	_I2C_2_Master_Read
  6340  004FCC  6E07               	movwf	??_color_read_Red^0,c
  6341  004FCE  5007               	movf	??_color_read_Red^0,w,c
  6342  004FD0  6E09               	movwf	(??_color_read_Red+2)^0,c
  6343  004FD2  6A08               	clrf	(??_color_read_Red+1)^0,c
  6344  004FD4  500A               	movf	color_read_Red@tmp^0,w,c
  6345  004FD6  1008               	iorwf	(??_color_read_Red+1)^0,w,c
  6346  004FD8  6E0A               	movwf	color_read_Red@tmp^0,c
  6347  004FDA  500B               	movf	(color_read_Red@tmp+1)^0,w,c
  6348  004FDC  1009               	iorwf	(??_color_read_Red+2)^0,w,c
  6349  004FDE  6E0B               	movwf	(color_read_Red@tmp+1)^0,c
  6350                           
  6351                           ;color.c: 101:  I2C_2_Master_Stop();
  6352  004FE0  EC04  F02B         	call	_I2C_2_Master_Stop	;wreg free
  6353  004FE4                     
  6354                           ;color.c: 102:  return tmp;
  6355  004FE4  C00A  F005         	movff	color_read_Red@tmp,?_color_read_Red
  6356  004FE8  C00B  F006         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  6357  004FEC  0012               	return		;funcret
  6358  004FEE                     __end_of_color_read_Red:
  6359                           	callstack 0
  6360                           
  6361 ;; *************** function _color_read_Green *****************
  6362 ;; Defined at:
  6363 ;;		line 119 in file "color.c"
  6364 ;; Parameters:    Size  Location     Type
  6365 ;;		None
  6366 ;; Auto vars:     Size  Location     Type
  6367 ;;  tmp             2    9[COMRAM] unsigned int 
  6368 ;; Return value:  Size  Location     Type
  6369 ;;                  2    4[COMRAM] unsigned int 
  6370 ;; Registers used:
  6371 ;;		wreg, status,2, status,0, cstack
  6372 ;; Tracked objects:
  6373 ;;		On entry : 0/0
  6374 ;;		On exit  : 0/0
  6375 ;;		Unchanged: 0/0
  6376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6377 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6378 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6379 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6380 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6381 ;;Total ram usage:        7 bytes
  6382 ;; Hardware stack levels used: 1
  6383 ;; Hardware stack levels required when called: 3
  6384 ;; This function calls:
  6385 ;;		_I2C_2_Master_Read
  6386 ;;		_I2C_2_Master_RepStart
  6387 ;;		_I2C_2_Master_Start
  6388 ;;		_I2C_2_Master_Stop
  6389 ;;		_I2C_2_Master_Write
  6390 ;; This function is called by:
  6391 ;;		_read_color
  6392 ;;		_calibrate_white
  6393 ;;		_distance_measure
  6394 ;; This function uses a non-reentrant model
  6395 ;;
  6396                           
  6397                           	psect	text27
  6398  004FEE                     __ptext27:
  6399                           	callstack 0
  6400  004FEE                     _color_read_Green:
  6401                           	callstack 24
  6402  004FEE                     
  6403                           ;color.c: 121:  unsigned int tmp;;color.c: 122:  I2C_2_Master_Start();
  6404  004FEE  EC09  F02B         	call	_I2C_2_Master_Start	;wreg free
  6405                           
  6406                           ;color.c: 123:  I2C_2_Master_Write(0x52 | 0x00);
  6407  004FF2  0E52               	movlw	82
  6408  004FF4  ECF3  F02A         	call	_I2C_2_Master_Write
  6409                           
  6410                           ;color.c: 124:  I2C_2_Master_Write(0xA0 | 0x18);
  6411  004FF8  0EB8               	movlw	184
  6412  004FFA  ECF3  F02A         	call	_I2C_2_Master_Write
  6413                           
  6414                           ;color.c: 125:  I2C_2_Master_RepStart();
  6415  004FFE  ECFF  F02A         	call	_I2C_2_Master_RepStart	;wreg free
  6416                           
  6417                           ;color.c: 126:  I2C_2_Master_Write(0x52 | 0x01);
  6418  005002  0E53               	movlw	83
  6419  005004  ECF3  F02A         	call	_I2C_2_Master_Write
  6420                           
  6421                           ;color.c: 127:  tmp=I2C_2_Master_Read(1);
  6422  005008  0E01               	movlw	1
  6423  00500A  ECB4  F028         	call	_I2C_2_Master_Read
  6424  00500E  6E07               	movwf	??_color_read_Green^0,c
  6425  005010  5007               	movf	??_color_read_Green^0,w,c
  6426  005012  6E0A               	movwf	color_read_Green@tmp^0,c
  6427  005014  6A0B               	clrf	(color_read_Green@tmp+1)^0,c
  6428                           
  6429                           ;color.c: 128:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  6430  005016  0E00               	movlw	0
  6431  005018  ECB4  F028         	call	_I2C_2_Master_Read
  6432  00501C  6E07               	movwf	??_color_read_Green^0,c
  6433  00501E  5007               	movf	??_color_read_Green^0,w,c
  6434  005020  6E09               	movwf	(??_color_read_Green+2)^0,c
  6435  005022  6A08               	clrf	(??_color_read_Green+1)^0,c
  6436  005024  500A               	movf	color_read_Green@tmp^0,w,c
  6437  005026  1008               	iorwf	(??_color_read_Green+1)^0,w,c
  6438  005028  6E0A               	movwf	color_read_Green@tmp^0,c
  6439  00502A  500B               	movf	(color_read_Green@tmp+1)^0,w,c
  6440  00502C  1009               	iorwf	(??_color_read_Green+2)^0,w,c
  6441  00502E  6E0B               	movwf	(color_read_Green@tmp+1)^0,c
  6442                           
  6443                           ;color.c: 129:  I2C_2_Master_Stop();
  6444  005030  EC04  F02B         	call	_I2C_2_Master_Stop	;wreg free
  6445  005034                     
  6446                           ;color.c: 130:  return tmp;
  6447  005034  C00A  F005         	movff	color_read_Green@tmp,?_color_read_Green
  6448  005038  C00B  F006         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  6449  00503C  0012               	return		;funcret
  6450  00503E                     __end_of_color_read_Green:
  6451                           	callstack 0
  6452                           
  6453 ;; *************** function _color_read_Blue *****************
  6454 ;; Defined at:
  6455 ;;		line 105 in file "color.c"
  6456 ;; Parameters:    Size  Location     Type
  6457 ;;		None
  6458 ;; Auto vars:     Size  Location     Type
  6459 ;;  tmp             2    9[COMRAM] unsigned int 
  6460 ;; Return value:  Size  Location     Type
  6461 ;;                  2    4[COMRAM] unsigned int 
  6462 ;; Registers used:
  6463 ;;		wreg, status,2, status,0, cstack
  6464 ;; Tracked objects:
  6465 ;;		On entry : 0/0
  6466 ;;		On exit  : 0/0
  6467 ;;		Unchanged: 0/0
  6468 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6469 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6470 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6471 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6472 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6473 ;;Total ram usage:        7 bytes
  6474 ;; Hardware stack levels used: 1
  6475 ;; Hardware stack levels required when called: 3
  6476 ;; This function calls:
  6477 ;;		_I2C_2_Master_Read
  6478 ;;		_I2C_2_Master_RepStart
  6479 ;;		_I2C_2_Master_Start
  6480 ;;		_I2C_2_Master_Stop
  6481 ;;		_I2C_2_Master_Write
  6482 ;; This function is called by:
  6483 ;;		_read_color
  6484 ;;		_calibrate_white
  6485 ;; This function uses a non-reentrant model
  6486 ;;
  6487                           
  6488                           	psect	text28
  6489  00503E                     __ptext28:
  6490                           	callstack 0
  6491  00503E                     _color_read_Blue:
  6492                           	callstack 24
  6493  00503E                     
  6494                           ;color.c: 107:  unsigned int tmp;;color.c: 108:  I2C_2_Master_Start();
  6495  00503E  EC09  F02B         	call	_I2C_2_Master_Start	;wreg free
  6496                           
  6497                           ;color.c: 109:  I2C_2_Master_Write(0x52 | 0x00);
  6498  005042  0E52               	movlw	82
  6499  005044  ECF3  F02A         	call	_I2C_2_Master_Write
  6500                           
  6501                           ;color.c: 110:  I2C_2_Master_Write(0xA0 | 0x1A);
  6502  005048  0EBA               	movlw	186
  6503  00504A  ECF3  F02A         	call	_I2C_2_Master_Write
  6504                           
  6505                           ;color.c: 111:  I2C_2_Master_RepStart();
  6506  00504E  ECFF  F02A         	call	_I2C_2_Master_RepStart	;wreg free
  6507                           
  6508                           ;color.c: 112:  I2C_2_Master_Write(0x52 | 0x01);
  6509  005052  0E53               	movlw	83
  6510  005054  ECF3  F02A         	call	_I2C_2_Master_Write
  6511                           
  6512                           ;color.c: 113:  tmp=I2C_2_Master_Read(1);
  6513  005058  0E01               	movlw	1
  6514  00505A  ECB4  F028         	call	_I2C_2_Master_Read
  6515  00505E  6E07               	movwf	??_color_read_Blue^0,c
  6516  005060  5007               	movf	??_color_read_Blue^0,w,c
  6517  005062  6E0A               	movwf	color_read_Blue@tmp^0,c
  6518  005064  6A0B               	clrf	(color_read_Blue@tmp+1)^0,c
  6519                           
  6520                           ;color.c: 114:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  6521  005066  0E00               	movlw	0
  6522  005068  ECB4  F028         	call	_I2C_2_Master_Read
  6523  00506C  6E07               	movwf	??_color_read_Blue^0,c
  6524  00506E  5007               	movf	??_color_read_Blue^0,w,c
  6525  005070  6E09               	movwf	(??_color_read_Blue+2)^0,c
  6526  005072  6A08               	clrf	(??_color_read_Blue+1)^0,c
  6527  005074  500A               	movf	color_read_Blue@tmp^0,w,c
  6528  005076  1008               	iorwf	(??_color_read_Blue+1)^0,w,c
  6529  005078  6E0A               	movwf	color_read_Blue@tmp^0,c
  6530  00507A  500B               	movf	(color_read_Blue@tmp+1)^0,w,c
  6531  00507C  1009               	iorwf	(??_color_read_Blue+2)^0,w,c
  6532  00507E  6E0B               	movwf	(color_read_Blue@tmp+1)^0,c
  6533                           
  6534                           ;color.c: 115:  I2C_2_Master_Stop();
  6535  005080  EC04  F02B         	call	_I2C_2_Master_Stop	;wreg free
  6536  005084                     
  6537                           ;color.c: 116:  return tmp;
  6538  005084  C00A  F005         	movff	color_read_Blue@tmp,?_color_read_Blue
  6539  005088  C00B  F006         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  6540  00508C  0012               	return		;funcret
  6541  00508E                     __end_of_color_read_Blue:
  6542                           	callstack 0
  6543                           
  6544 ;; *************** function _LED_R *****************
  6545 ;; Defined at:
  6546 ;;		line 164 in file "color.c"
  6547 ;; Parameters:    Size  Location     Type
  6548 ;;		None
  6549 ;; Auto vars:     Size  Location     Type
  6550 ;;		None
  6551 ;; Return value:  Size  Location     Type
  6552 ;;                  1    wreg      void 
  6553 ;; Registers used:
  6554 ;;		wreg
  6555 ;; Tracked objects:
  6556 ;;		On entry : 0/0
  6557 ;;		On exit  : 0/0
  6558 ;;		Unchanged: 0/0
  6559 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6560 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6561 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6562 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6563 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6564 ;;Total ram usage:        2 bytes
  6565 ;; Hardware stack levels used: 1
  6566 ;; Hardware stack levels required when called: 1
  6567 ;; This function calls:
  6568 ;;		Nothing
  6569 ;; This function is called by:
  6570 ;;		_color_data_collection
  6571 ;;		_calibrate_white
  6572 ;;		_detect_color
  6573 ;; This function uses a non-reentrant model
  6574 ;;
  6575                           
  6576                           	psect	text29
  6577  00549C                     __ptext29:
  6578                           	callstack 0
  6579  00549C                     _LED_R:
  6580                           	callstack 27
  6581  00549C                     
  6582                           ;color.c: 166:     LATGbits.LATG1 = 1;
  6583  00549C  827F               	bsf	127,1,c	;volatile
  6584                           
  6585                           ;color.c: 167:     LATFbits.LATF7 = 0;
  6586  00549E  9E7E               	bcf	126,7,c	;volatile
  6587                           
  6588                           ;color.c: 168:     LATAbits.LATA4 = 0;
  6589  0054A0  9879               	bcf	121,4,c	;volatile
  6590  0054A2                     
  6591                           ;color.c: 169:     _delay((unsigned long)((200)*(64000000/4000.0)));
  6592  0054A2  0E11               	movlw	17
  6593  0054A4  6E02               	movwf	(??_LED_R+1)^0,c
  6594  0054A6  0E3C               	movlw	60
  6595  0054A8  6E01               	movwf	??_LED_R^0,c
  6596  0054AA  0ECB               	movlw	203
  6597  0054AC                     u5917:
  6598  0054AC  2EE8               	decfsz	wreg,f,c
  6599  0054AE  D7FE               	bra	u5917
  6600  0054B0  2E01               	decfsz	??_LED_R^0,f,c
  6601  0054B2  D7FC               	bra	u5917
  6602  0054B4  2E02               	decfsz	(??_LED_R+1)^0,f,c
  6603  0054B6  D7FA               	bra	u5917
  6604  0054B8  F000               	nop	
  6605  0054BA  0012               	return		;funcret
  6606  0054BC                     __end_of_LED_R:
  6607                           	callstack 0
  6608                           
  6609 ;; *************** function _LED_OFF *****************
  6610 ;; Defined at:
  6611 ;;		line 155 in file "color.c"
  6612 ;; Parameters:    Size  Location     Type
  6613 ;;		None
  6614 ;; Auto vars:     Size  Location     Type
  6615 ;;		None
  6616 ;; Return value:  Size  Location     Type
  6617 ;;                  1    wreg      void 
  6618 ;; Registers used:
  6619 ;;		wreg
  6620 ;; Tracked objects:
  6621 ;;		On entry : 0/0
  6622 ;;		On exit  : 0/0
  6623 ;;		Unchanged: 0/0
  6624 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6625 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6626 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6627 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6628 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6629 ;;Total ram usage:        2 bytes
  6630 ;; Hardware stack levels used: 1
  6631 ;; Hardware stack levels required when called: 1
  6632 ;; This function calls:
  6633 ;;		Nothing
  6634 ;; This function is called by:
  6635 ;;		_calibrate_white
  6636 ;; This function uses a non-reentrant model
  6637 ;;
  6638                           
  6639                           	psect	text30
  6640  0054BC                     __ptext30:
  6641                           	callstack 0
  6642  0054BC                     _LED_OFF:
  6643                           	callstack 27
  6644  0054BC                     
  6645                           ;color.c: 157:     LATGbits.LATG1 = 0;
  6646  0054BC  927F               	bcf	127,1,c	;volatile
  6647                           
  6648                           ;color.c: 158:     LATFbits.LATF7 = 0;
  6649  0054BE  9E7E               	bcf	126,7,c	;volatile
  6650                           
  6651                           ;color.c: 159:     LATAbits.LATA4 = 0;
  6652  0054C0  9879               	bcf	121,4,c	;volatile
  6653  0054C2                     
  6654                           ;color.c: 160:     _delay((unsigned long)((200)*(64000000/4000.0)));
  6655  0054C2  0E11               	movlw	17
  6656  0054C4  6E02               	movwf	(??_LED_OFF+1)^0,c
  6657  0054C6  0E3C               	movlw	60
  6658  0054C8  6E01               	movwf	??_LED_OFF^0,c
  6659  0054CA  0ECB               	movlw	203
  6660  0054CC                     u5927:
  6661  0054CC  2EE8               	decfsz	wreg,f,c
  6662  0054CE  D7FE               	bra	u5927
  6663  0054D0  2E01               	decfsz	??_LED_OFF^0,f,c
  6664  0054D2  D7FC               	bra	u5927
  6665  0054D4  2E02               	decfsz	(??_LED_OFF+1)^0,f,c
  6666  0054D6  D7FA               	bra	u5927
  6667  0054D8  F000               	nop	
  6668  0054DA  0012               	return		;funcret
  6669  0054DC                     __end_of_LED_OFF:
  6670                           	callstack 0
  6671                           
  6672 ;; *************** function _LED_G *****************
  6673 ;; Defined at:
  6674 ;;		line 191 in file "color.c"
  6675 ;; Parameters:    Size  Location     Type
  6676 ;;		None
  6677 ;; Auto vars:     Size  Location     Type
  6678 ;;		None
  6679 ;; Return value:  Size  Location     Type
  6680 ;;                  1    wreg      void 
  6681 ;; Registers used:
  6682 ;;		wreg
  6683 ;; Tracked objects:
  6684 ;;		On entry : 0/0
  6685 ;;		On exit  : 0/0
  6686 ;;		Unchanged: 0/0
  6687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6688 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6689 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6690 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6691 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6692 ;;Total ram usage:        2 bytes
  6693 ;; Hardware stack levels used: 1
  6694 ;; Hardware stack levels required when called: 1
  6695 ;; This function calls:
  6696 ;;		Nothing
  6697 ;; This function is called by:
  6698 ;;		_color_data_collection
  6699 ;;		_calibrate_white
  6700 ;;		_detect_color
  6701 ;; This function uses a non-reentrant model
  6702 ;;
  6703                           
  6704                           	psect	text31
  6705  0054DC                     __ptext31:
  6706                           	callstack 0
  6707  0054DC                     _LED_G:
  6708                           	callstack 27
  6709  0054DC                     
  6710                           ;color.c: 193:     LATGbits.LATG1 = 0;
  6711  0054DC  927F               	bcf	127,1,c	;volatile
  6712                           
  6713                           ;color.c: 194:     LATFbits.LATF7 = 0;
  6714  0054DE  9E7E               	bcf	126,7,c	;volatile
  6715                           
  6716                           ;color.c: 195:     LATAbits.LATA4 = 1;
  6717  0054E0  8879               	bsf	121,4,c	;volatile
  6718  0054E2                     
  6719                           ;color.c: 196:     _delay((unsigned long)((200)*(64000000/4000.0)));
  6720  0054E2  0E11               	movlw	17
  6721  0054E4  6E02               	movwf	(??_LED_G+1)^0,c
  6722  0054E6  0E3C               	movlw	60
  6723  0054E8  6E01               	movwf	??_LED_G^0,c
  6724  0054EA  0ECB               	movlw	203
  6725  0054EC                     u5937:
  6726  0054EC  2EE8               	decfsz	wreg,f,c
  6727  0054EE  D7FE               	bra	u5937
  6728  0054F0  2E01               	decfsz	??_LED_G^0,f,c
  6729  0054F2  D7FC               	bra	u5937
  6730  0054F4  2E02               	decfsz	(??_LED_G+1)^0,f,c
  6731  0054F6  D7FA               	bra	u5937
  6732  0054F8  F000               	nop	
  6733  0054FA  0012               	return		;funcret
  6734  0054FC                     __end_of_LED_G:
  6735                           	callstack 0
  6736                           
  6737 ;; *************** function _LED_B *****************
  6738 ;; Defined at:
  6739 ;;		line 182 in file "color.c"
  6740 ;; Parameters:    Size  Location     Type
  6741 ;;		None
  6742 ;; Auto vars:     Size  Location     Type
  6743 ;;		None
  6744 ;; Return value:  Size  Location     Type
  6745 ;;                  1    wreg      void 
  6746 ;; Registers used:
  6747 ;;		wreg
  6748 ;; Tracked objects:
  6749 ;;		On entry : 0/0
  6750 ;;		On exit  : 0/0
  6751 ;;		Unchanged: 0/0
  6752 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6753 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6754 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6755 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6756 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6757 ;;Total ram usage:        2 bytes
  6758 ;; Hardware stack levels used: 1
  6759 ;; Hardware stack levels required when called: 1
  6760 ;; This function calls:
  6761 ;;		Nothing
  6762 ;; This function is called by:
  6763 ;;		_color_data_collection
  6764 ;;		_calibrate_white
  6765 ;;		_detect_color
  6766 ;; This function uses a non-reentrant model
  6767 ;;
  6768                           
  6769                           	psect	text32
  6770  0054FC                     __ptext32:
  6771                           	callstack 0
  6772  0054FC                     _LED_B:
  6773                           	callstack 27
  6774  0054FC                     
  6775                           ;color.c: 184:     LATGbits.LATG1 = 0;
  6776  0054FC  927F               	bcf	127,1,c	;volatile
  6777                           
  6778                           ;color.c: 185:     LATFbits.LATF7 = 1;
  6779  0054FE  8E7E               	bsf	126,7,c	;volatile
  6780                           
  6781                           ;color.c: 186:     LATAbits.LATA4 = 0;
  6782  005500  9879               	bcf	121,4,c	;volatile
  6783  005502                     
  6784                           ;color.c: 187:     _delay((unsigned long)((200)*(64000000/4000.0)));
  6785  005502  0E11               	movlw	17
  6786  005504  6E02               	movwf	(??_LED_B+1)^0,c
  6787  005506  0E3C               	movlw	60
  6788  005508  6E01               	movwf	??_LED_B^0,c
  6789  00550A  0ECB               	movlw	203
  6790  00550C                     u5947:
  6791  00550C  2EE8               	decfsz	wreg,f,c
  6792  00550E  D7FE               	bra	u5947
  6793  005510  2E01               	decfsz	??_LED_B^0,f,c
  6794  005512  D7FC               	bra	u5947
  6795  005514  2E02               	decfsz	(??_LED_B+1)^0,f,c
  6796  005516  D7FA               	bra	u5947
  6797  005518  F000               	nop	
  6798  00551A  0012               	return		;funcret
  6799  00551C                     __end_of_LED_B:
  6800                           	callstack 0
  6801                           
  6802 ;; *************** function _amb_light_measure *****************
  6803 ;; Defined at:
  6804 ;;		line 372 in file "color.c"
  6805 ;; Parameters:    Size  Location     Type
  6806 ;;  amb             2   10[BANK0 ] PTR struct color_rgb
  6807 ;;		 -> main@rgb(8), main@amb(8), 
  6808 ;; Auto vars:     Size  Location     Type
  6809 ;;  CC_amb_3        2   22[BANK0 ] unsigned int 
  6810 ;;  CC_amb_2        2   20[BANK0 ] unsigned int 
  6811 ;;  CC_amb_1        2   18[BANK0 ] unsigned int 
  6812 ;;  CC_amb_ave      2   16[BANK0 ] unsigned int 
  6813 ;;  upper_bound     2   14[BANK0 ] unsigned int 
  6814 ;; Return value:  Size  Location     Type
  6815 ;;                  2   10[BANK0 ] unsigned int 
  6816 ;; Registers used:
  6817 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  6818 ;; Tracked objects:
  6819 ;;		On entry : 0/0
  6820 ;;		On exit  : 0/0
  6821 ;;		Unchanged: 0/0
  6822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6823 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6824 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6825 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6826 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6827 ;;Total ram usage:       14 bytes
  6828 ;; Hardware stack levels used: 1
  6829 ;; Hardware stack levels required when called: 5
  6830 ;; This function calls:
  6831 ;;		_LED_C
  6832 ;;		___fldiv
  6833 ;;		___xxtofl
  6834 ;;		_color_read_Clear
  6835 ;;		_lroundf
  6836 ;;		_toggle_light
  6837 ;; This function is called by:
  6838 ;;		_main
  6839 ;;		_test_function
  6840 ;; This function uses a non-reentrant model
  6841 ;;
  6842                           
  6843                           	psect	text33
  6844  0043E6                     __ptext33:
  6845                           	callstack 0
  6846  0043E6                     _amb_light_measure:
  6847                           	callstack 24
  6848  0043E6  0E00               	movlw	0
  6849  0043E8  0100               	movlb	0	; () banked
  6850  0043EA  6F75               	movwf	(amb_light_measure@CC_amb_2+1)& (0+255),b
  6851  0043EC  0E00               	movlw	0
  6852  0043EE  6F74               	movwf	amb_light_measure@CC_amb_2& (0+255),b
  6853  0043F0  0E00               	movlw	0
  6854  0043F2  6F77               	movwf	(amb_light_measure@CC_amb_3+1)& (0+255),b
  6855  0043F4  0E00               	movlw	0
  6856  0043F6  6F76               	movwf	amb_light_measure@CC_amb_3& (0+255),b
  6857  0043F8  0E00               	movlw	0
  6858  0043FA  6F6F               	movwf	(amb_light_measure@upper_bound+1)& (0+255),b
  6859  0043FC  0E00               	movlw	0
  6860  0043FE  6F6E               	movwf	amb_light_measure@upper_bound& (0+255),b
  6861  004400                     
  6862                           ; BSR set to: 0
  6863                           ;color.c: 375:     toggle_light(2,2);
  6864  004400  0E02               	movlw	2
  6865  004402  6E01               	movwf	toggle_light@toggletime^0,c
  6866  004404  0E02               	movlw	2
  6867  004406  ECB0  F017         	call	_toggle_light
  6868  00440A                     
  6869                           ;color.c: 376:     LED_C();
  6870  00440A  EC8E  F02A         	call	_LED_C	;wreg free
  6871  00440E                     
  6872                           ;color.c: 377:     _delay((unsigned long)((500)*(64000000/4000.0)));
  6873  00440E  0E29               	movlw	41
  6874  004410  0100               	movlb	0	; () banked
  6875  004412  6F6D               	movwf	(??_amb_light_measure+1)& (0+255),b
  6876  004414  0E96               	movlw	150
  6877  004416  6F6C               	movwf	??_amb_light_measure& (0+255),b
  6878  004418  0E7F               	movlw	127
  6879  00441A                     u5957:
  6880  00441A  2EE8               	decfsz	wreg,f,c
  6881  00441C  D7FE               	bra	u5957
  6882  00441E  2F6C               	decfsz	??_amb_light_measure& (0+255),f,b
  6883  004420  D7FC               	bra	u5957
  6884  004422  2F6D               	decfsz	(??_amb_light_measure+1)& (0+255),f,b
  6885  004424  D7FA               	bra	u5957
  6886  004426                     
  6887                           ;color.c: 379:     CC_amb_1 = color_read_Clear();
  6888  004426  EC47  F028         	call	_color_read_Clear	;wreg free
  6889  00442A  C005  F072         	movff	?_color_read_Clear,amb_light_measure@CC_amb_1
  6890  00442E  C006  F073         	movff	?_color_read_Clear+1,amb_light_measure@CC_amb_1+1
  6891  004432                     
  6892                           ;color.c: 380:     _delay((unsigned long)((200)*(64000000/4000.0)));
  6893  004432  0E11               	movlw	17
  6894  004434  0100               	movlb	0	; () banked
  6895  004436  6F6D               	movwf	(??_amb_light_measure+1)& (0+255),b
  6896  004438  0E3C               	movlw	60
  6897  00443A  6F6C               	movwf	??_amb_light_measure& (0+255),b
  6898  00443C  0ECB               	movlw	203
  6899  00443E                     u5967:
  6900  00443E  2EE8               	decfsz	wreg,f,c
  6901  004440  D7FE               	bra	u5967
  6902  004442  2F6C               	decfsz	??_amb_light_measure& (0+255),f,b
  6903  004444  D7FC               	bra	u5967
  6904  004446  2F6D               	decfsz	(??_amb_light_measure+1)& (0+255),f,b
  6905  004448  D7FA               	bra	u5967
  6906  00444A                     
  6907                           ;color.c: 382:     CC_amb_2 = color_read_Clear();
  6908  00444A  EC47  F028         	call	_color_read_Clear	;wreg free
  6909  00444E  C005  F074         	movff	?_color_read_Clear,amb_light_measure@CC_amb_2
  6910  004452  C006  F075         	movff	?_color_read_Clear+1,amb_light_measure@CC_amb_2+1
  6911  004456                     
  6912                           ;color.c: 383:     _delay((unsigned long)((200)*(64000000/4000.0)));
  6913  004456  0E11               	movlw	17
  6914  004458  0100               	movlb	0	; () banked
  6915  00445A  6F6D               	movwf	(??_amb_light_measure+1)& (0+255),b
  6916  00445C  0E3C               	movlw	60
  6917  00445E  6F6C               	movwf	??_amb_light_measure& (0+255),b
  6918  004460  0ECB               	movlw	203
  6919  004462                     u5977:
  6920  004462  2EE8               	decfsz	wreg,f,c
  6921  004464  D7FE               	bra	u5977
  6922  004466  2F6C               	decfsz	??_amb_light_measure& (0+255),f,b
  6923  004468  D7FC               	bra	u5977
  6924  00446A  2F6D               	decfsz	(??_amb_light_measure+1)& (0+255),f,b
  6925  00446C  D7FA               	bra	u5977
  6926  00446E                     
  6927                           ;color.c: 385:     CC_amb_3 = color_read_Clear();
  6928  00446E  EC47  F028         	call	_color_read_Clear	;wreg free
  6929  004472  C005  F076         	movff	?_color_read_Clear,amb_light_measure@CC_amb_3
  6930  004476  C006  F077         	movff	?_color_read_Clear+1,amb_light_measure@CC_amb_3+1
  6931  00447A                     
  6932                           ;color.c: 386:     _delay((unsigned long)((200)*(64000000/4000.0)));
  6933  00447A  0E11               	movlw	17
  6934  00447C  0100               	movlb	0	; () banked
  6935  00447E  6F6D               	movwf	(??_amb_light_measure+1)& (0+255),b
  6936  004480  0E3C               	movlw	60
  6937  004482  6F6C               	movwf	??_amb_light_measure& (0+255),b
  6938  004484  0ECB               	movlw	203
  6939  004486                     u5987:
  6940  004486  2EE8               	decfsz	wreg,f,c
  6941  004488  D7FE               	bra	u5987
  6942  00448A  2F6C               	decfsz	??_amb_light_measure& (0+255),f,b
  6943  00448C  D7FC               	bra	u5987
  6944  00448E  2F6D               	decfsz	(??_amb_light_measure+1)& (0+255),f,b
  6945  004490  D7FA               	bra	u5987
  6946  004492                     
  6947                           ;color.c: 388:     CC_amb_ave = lroundf((float)(CC_amb_1 + CC_amb_2 + CC_amb_3)/3);
  6948  004492  0100               	movlb	0	; () banked
  6949  004494  5174               	movf	amb_light_measure@CC_amb_2& (0+255),w,b
  6950  004496  2572               	addwf	amb_light_measure@CC_amb_1& (0+255),w,b
  6951  004498  6F6C               	movwf	??_amb_light_measure& (0+255),b
  6952  00449A  5175               	movf	(amb_light_measure@CC_amb_2+1)& (0+255),w,b
  6953  00449C  2173               	addwfc	(amb_light_measure@CC_amb_1+1)& (0+255),w,b
  6954  00449E  6F6D               	movwf	(??_amb_light_measure+1)& (0+255),b
  6955  0044A0  5176               	movf	amb_light_measure@CC_amb_3& (0+255),w,b
  6956  0044A2  276C               	addwf	??_amb_light_measure& (0+255),f,b
  6957  0044A4  5177               	movf	(amb_light_measure@CC_amb_3+1)& (0+255),w,b
  6958  0044A6  236D               	addwfc	(??_amb_light_measure+1)& (0+255),f,b
  6959  0044A8  C06C  F001         	movff	??_amb_light_measure,___xxtofl@val
  6960  0044AC  C06D  F002         	movff	??_amb_light_measure+1,___xxtofl@val+1
  6961  0044B0  6A03               	clrf	(___xxtofl@val+2)^0,c
  6962  0044B2  6A04               	clrf	(___xxtofl@val+3)^0,c
  6963  0044B4  0E00               	movlw	0
  6964  0044B6  EC9E  F01C         	call	___xxtofl
  6965  0044BA  C001  F00F         	movff	?___xxtofl,___fldiv@b
  6966  0044BE  C002  F010         	movff	?___xxtofl+1,___fldiv@b+1
  6967  0044C2  C003  F011         	movff	?___xxtofl+2,___fldiv@b+2
  6968  0044C6  C004  F012         	movff	?___xxtofl+3,___fldiv@b+3
  6969  0044CA  0E00               	movlw	0
  6970  0044CC  6E13               	movwf	___fldiv@a^0,c
  6971  0044CE  0E00               	movlw	0
  6972  0044D0  6E14               	movwf	(___fldiv@a+1)^0,c
  6973  0044D2  0E40               	movlw	64
  6974  0044D4  6E15               	movwf	(___fldiv@a+2)^0,c
  6975  0044D6  0E40               	movlw	64
  6976  0044D8  6E16               	movwf	(___fldiv@a+3)^0,c
  6977  0044DA  EC06  F013         	call	___fldiv	;wreg free
  6978  0044DE  C00F  F066         	movff	?___fldiv,lroundf@x
  6979  0044E2  C010  F067         	movff	?___fldiv+1,lroundf@x+1
  6980  0044E6  C011  F068         	movff	?___fldiv+2,lroundf@x+2
  6981  0044EA  C012  F069         	movff	?___fldiv+3,lroundf@x+3
  6982  0044EE  EC75  F029         	call	_lroundf	;wreg free
  6983  0044F2  C066  F070         	movff	?_lroundf,amb_light_measure@CC_amb_ave
  6984  0044F6  C067  F071         	movff	?_lroundf+1,amb_light_measure@CC_amb_ave+1
  6985  0044FA                     
  6986                           ;color.c: 390:     toggle_light(2,2);
  6987  0044FA  0E02               	movlw	2
  6988  0044FC  6E01               	movwf	toggle_light@toggletime^0,c
  6989  0044FE  0E02               	movlw	2
  6990  004500  ECB0  F017         	call	_toggle_light
  6991  004504                     
  6992                           ;color.c: 392:     return CC_amb_ave;
  6993  004504  C070  F06A         	movff	amb_light_measure@CC_amb_ave,?_amb_light_measure
  6994  004508  C071  F06B         	movff	amb_light_measure@CC_amb_ave+1,?_amb_light_measure+1
  6995  00450C  0012               	return		;funcret
  6996  00450E                     __end_of_amb_light_measure:
  6997                           	callstack 0
  6998                           
  6999 ;; *************** function _lroundf *****************
  7000 ;; Defined at:
  7001 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\lroundf.c"
  7002 ;; Parameters:    Size  Location     Type
  7003 ;;  x               4    6[BANK0 ] float 
  7004 ;; Auto vars:     Size  Location     Type
  7005 ;;		None
  7006 ;; Return value:  Size  Location     Type
  7007 ;;                  4    6[BANK0 ] long 
  7008 ;; Registers used:
  7009 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  7010 ;; Tracked objects:
  7011 ;;		On entry : 0/0
  7012 ;;		On exit  : 0/0
  7013 ;;		Unchanged: 0/0
  7014 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7015 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7016 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7017 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7018 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7019 ;;Total ram usage:        4 bytes
  7020 ;; Hardware stack levels used: 1
  7021 ;; Hardware stack levels required when called: 4
  7022 ;; This function calls:
  7023 ;;		___fltol
  7024 ;;		_roundf
  7025 ;; This function is called by:
  7026 ;;		_detect_color
  7027 ;;		_amb_light_measure
  7028 ;;		_distance_measure
  7029 ;;		_check_color_reading
  7030 ;; This function uses a non-reentrant model
  7031 ;;
  7032                           
  7033                           	psect	text34
  7034  0052EA                     __ptext34:
  7035                           	callstack 0
  7036  0052EA                     _lroundf:
  7037                           	callstack 24
  7038  0052EA  C066  F041         	movff	lroundf@x,roundf@x
  7039  0052EE  C067  F042         	movff	lroundf@x+1,roundf@x+1
  7040  0052F2  C068  F043         	movff	lroundf@x+2,roundf@x+2
  7041  0052F6  C069  F044         	movff	lroundf@x+3,roundf@x+3
  7042  0052FA  EC2F  F011         	call	_roundf	;wreg free
  7043  0052FE  C041  F05B         	movff	?_roundf,___fltol@f1
  7044  005302  C042  F05C         	movff	?_roundf+1,___fltol@f1+1
  7045  005306  C043  F05D         	movff	?_roundf+2,___fltol@f1+2
  7046  00530A  C044  F05E         	movff	?_roundf+3,___fltol@f1+3
  7047  00530E  EC87  F022         	call	___fltol	;wreg free
  7048  005312  C05B  F066         	movff	?___fltol,?_lroundf
  7049  005316  C05C  F067         	movff	?___fltol+1,?_lroundf+1
  7050  00531A  C05D  F068         	movff	?___fltol+2,?_lroundf+2
  7051  00531E  C05E  F069         	movff	?___fltol+3,?_lroundf+3
  7052  005322  0012               	return		;funcret
  7053  005324                     __end_of_lroundf:
  7054                           	callstack 0
  7055                           
  7056 ;; *************** function _roundf *****************
  7057 ;; Defined at:
  7058 ;;		line 12 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\roundf.c"
  7059 ;; Parameters:    Size  Location     Type
  7060 ;;  x               4   64[COMRAM] float 
  7061 ;; Auto vars:     Size  Location     Type
  7062 ;;  y               4   86[COMRAM] float 
  7063 ;;  u               4   82[COMRAM] struct .
  7064 ;;  e               2   76[COMRAM] int 
  7065 ;; Return value:  Size  Location     Type
  7066 ;;                  4   64[COMRAM] float 
  7067 ;; Registers used:
  7068 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  7069 ;; Tracked objects:
  7070 ;;		On entry : 0/0
  7071 ;;		On exit  : 0/0
  7072 ;;		Unchanged: 0/0
  7073 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7074 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7075 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7076 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7077 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7078 ;;Total ram usage:       26 bytes
  7079 ;; Hardware stack levels used: 1
  7080 ;; Hardware stack levels required when called: 3
  7081 ;; This function calls:
  7082 ;;		___fladd
  7083 ;;		___flge
  7084 ;;		___flmul
  7085 ;;		___flneg
  7086 ;;		___flsub
  7087 ;; This function is called by:
  7088 ;;		_lroundf
  7089 ;; This function uses a non-reentrant model
  7090 ;;
  7091                           
  7092                           	psect	text35
  7093  00225E                     __ptext35:
  7094                           	callstack 0
  7095  00225E                     _roundf:
  7096                           	callstack 24
  7097  00225E  C18C  F053         	movff	roundf@F527,roundf@u
  7098  002262  C18D  F054         	movff	roundf@F527+1,roundf@u+1
  7099  002266  C18E  F055         	movff	roundf@F527+2,roundf@u+2
  7100  00226A  C18F  F056         	movff	roundf@F527+3,roundf@u+3
  7101  00226E  C041  F053         	movff	roundf@x,roundf@u
  7102  002272  C042  F054         	movff	roundf@x+1,roundf@u+1
  7103  002276  C043  F055         	movff	roundf@x+2,roundf@u+2
  7104  00227A  C044  F056         	movff	roundf@x+3,roundf@u+3
  7105  00227E  C053  F045         	movff	roundf@u,??_roundf
  7106  002282  C054  F046         	movff	roundf@u+1,??_roundf+1
  7107  002286  C055  F047         	movff	roundf@u+2,??_roundf+2
  7108  00228A  C056  F048         	movff	roundf@u+3,??_roundf+3
  7109  00228E  0E18               	movlw	24
  7110  002290  EF4F  F011         	goto	u4220
  7111  002294                     u4225:
  7112  002294  90D8               	bcf	status,0,c
  7113  002296  3248               	rrcf	(??_roundf+3)^0,f,c
  7114  002298  3247               	rrcf	(??_roundf+2)^0,f,c
  7115  00229A  3246               	rrcf	(??_roundf+1)^0,f,c
  7116  00229C  3245               	rrcf	??_roundf^0,f,c
  7117  00229E                     u4220:
  7118  00229E  2EE8               	decfsz	wreg,f,c
  7119  0022A0  EF4A  F011         	goto	u4225
  7120  0022A4  5045               	movf	??_roundf^0,w,c
  7121  0022A6  6E4D               	movwf	roundf@e^0,c
  7122  0022A8  6A4E               	clrf	(roundf@e+1)^0,c
  7123  0022AA  BE4E               	btfsc	(roundf@e+1)^0,7,c
  7124  0022AC  EF61  F011         	goto	u4231
  7125  0022B0  504E               	movf	(roundf@e+1)^0,w,c
  7126  0022B2  E109               	bnz	u4230
  7127  0022B4  0E96               	movlw	150
  7128  0022B6  5C4D               	subwf	roundf@e^0,w,c
  7129  0022B8  A0D8               	btfss	status,0,c
  7130  0022BA  EF61  F011         	goto	u4231
  7131  0022BE  EF63  F011         	goto	u4230
  7132  0022C2                     u4231:
  7133  0022C2  EF6D  F011         	goto	l4434
  7134  0022C6                     u4230:
  7135  0022C6  C041  F041         	movff	roundf@x,?_roundf
  7136  0022CA  C042  F042         	movff	roundf@x+1,?_roundf+1
  7137  0022CE  C043  F043         	movff	roundf@x+2,?_roundf+2
  7138  0022D2  C044  F044         	movff	roundf@x+3,?_roundf+3
  7139  0022D6  EF05  F013         	goto	l1581
  7140  0022DA                     l4434:
  7141  0022DA  C053  F045         	movff	roundf@u,??_roundf
  7142  0022DE  C054  F046         	movff	roundf@u+1,??_roundf+1
  7143  0022E2  C055  F047         	movff	roundf@u+2,??_roundf+2
  7144  0022E6  C056  F048         	movff	roundf@u+3,??_roundf+3
  7145  0022EA  0E20               	movlw	32
  7146  0022EC  EF7D  F011         	goto	u4240
  7147  0022F0                     u4245:
  7148  0022F0  90D8               	bcf	status,0,c
  7149  0022F2  3248               	rrcf	(??_roundf+3)^0,f,c
  7150  0022F4  3247               	rrcf	(??_roundf+2)^0,f,c
  7151  0022F6  3246               	rrcf	(??_roundf+1)^0,f,c
  7152  0022F8  3245               	rrcf	??_roundf^0,f,c
  7153  0022FA                     u4240:
  7154  0022FA  2EE8               	decfsz	wreg,f,c
  7155  0022FC  EF78  F011         	goto	u4245
  7156  002300  5045               	movf	??_roundf^0,w,c
  7157  002302  1046               	iorwf	(??_roundf+1)^0,w,c
  7158  002304  1047               	iorwf	(??_roundf+2)^0,w,c
  7159  002306  1048               	iorwf	(??_roundf+3)^0,w,c
  7160  002308  B4D8               	btfsc	status,2,c
  7161  00230A  EF89  F011         	goto	u4251
  7162  00230E  EF8B  F011         	goto	u4250
  7163  002312                     u4251:
  7164  002312  EF9D  F011         	goto	l4438
  7165  002316                     u4250:
  7166  002316  C041  F001         	movff	roundf@x,___flneg@f1
  7167  00231A  C042  F002         	movff	roundf@x+1,___flneg@f1+1
  7168  00231E  C043  F003         	movff	roundf@x+2,___flneg@f1+2
  7169  002322  C044  F004         	movff	roundf@x+3,___flneg@f1+3
  7170  002326  EC92  F029         	call	___flneg	;wreg free
  7171  00232A  C001  F041         	movff	?___flneg,roundf@x
  7172  00232E  C002  F042         	movff	?___flneg+1,roundf@x+1
  7173  002332  C003  F043         	movff	?___flneg+2,roundf@x+2
  7174  002336  C004  F044         	movff	?___flneg+3,roundf@x+3
  7175  00233A                     l4438:
  7176  00233A  BE4E               	btfsc	(roundf@e+1)^0,7,c
  7177  00233C  EFAB  F011         	goto	u4260
  7178  002340  504E               	movf	(roundf@e+1)^0,w,c
  7179  002342  E107               	bnz	u4261
  7180  002344  0E7E               	movlw	126
  7181  002346  5C4D               	subwf	roundf@e^0,w,c
  7182  002348  B0D8               	btfsc	status,0,c
  7183  00234A  EFA9  F011         	goto	u4261
  7184  00234E  EFAB  F011         	goto	u4260
  7185  002352                     u4261:
  7186  002352  EFC7  F011         	goto	l4444
  7187  002356                     u4260:
  7188  002356  C053  F028         	movff	roundf@u,___flmul@b
  7189  00235A  C054  F029         	movff	roundf@u+1,___flmul@b+1
  7190  00235E  C055  F02A         	movff	roundf@u+2,___flmul@b+2
  7191  002362  C056  F02B         	movff	roundf@u+3,___flmul@b+3
  7192  002366  0E00               	movlw	0
  7193  002368  6E2C               	movwf	___flmul@a^0,c
  7194  00236A  0E00               	movlw	0
  7195  00236C  6E2D               	movwf	(___flmul@a+1)^0,c
  7196  00236E  0E00               	movlw	0
  7197  002370  6E2E               	movwf	(___flmul@a+2)^0,c
  7198  002372  0E00               	movlw	0
  7199  002374  6E2F               	movwf	(___flmul@a+3)^0,c
  7200  002376  EC1A  F00F         	call	___flmul	;wreg free
  7201  00237A  C028  F041         	movff	?___flmul,?_roundf
  7202  00237E  C029  F042         	movff	?___flmul+1,?_roundf+1
  7203  002382  C02A  F043         	movff	?___flmul+2,?_roundf+2
  7204  002386  C02B  F044         	movff	?___flmul+3,?_roundf+3
  7205  00238A  EF05  F013         	goto	l1581
  7206  00238E                     l4444:
  7207  00238E  0E00               	movlw	0
  7208  002390  6E05               	movwf	___fladd@a^0,c
  7209  002392  0E00               	movlw	0
  7210  002394  6E06               	movwf	(___fladd@a+1)^0,c
  7211  002396  0E00               	movlw	0
  7212  002398  6E07               	movwf	(___fladd@a+2)^0,c
  7213  00239A  0E4B               	movlw	75
  7214  00239C  6E08               	movwf	(___fladd@a+3)^0,c
  7215  00239E  C041  F001         	movff	roundf@x,___fladd@b
  7216  0023A2  C042  F002         	movff	roundf@x+1,___fladd@b+1
  7217  0023A6  C043  F003         	movff	roundf@x+2,___fladd@b+2
  7218  0023AA  C044  F004         	movff	roundf@x+3,___fladd@b+3
  7219  0023AE  ECBA  F00C         	call	___fladd	;wreg free
  7220  0023B2  C001  F04F         	movff	?___fladd,_roundf$3242
  7221  0023B6  C002  F050         	movff	?___fladd+1,_roundf$3242+1
  7222  0023BA  C003  F051         	movff	?___fladd+2,_roundf$3242+2
  7223  0023BE  C004  F052         	movff	?___fladd+3,_roundf$3242+3
  7224  0023C2  0E00               	movlw	0
  7225  0023C4  6E05               	movwf	___fladd@a^0,c
  7226  0023C6  0E00               	movlw	0
  7227  0023C8  6E06               	movwf	(___fladd@a+1)^0,c
  7228  0023CA  0E00               	movlw	0
  7229  0023CC  6E07               	movwf	(___fladd@a+2)^0,c
  7230  0023CE  0ECB               	movlw	203
  7231  0023D0  6E08               	movwf	(___fladd@a+3)^0,c
  7232  0023D2  C04F  F001         	movff	_roundf$3242,___fladd@b
  7233  0023D6  C050  F002         	movff	_roundf$3242+1,___fladd@b+1
  7234  0023DA  C051  F003         	movff	_roundf$3242+2,___fladd@b+2
  7235  0023DE  C052  F004         	movff	_roundf$3242+3,___fladd@b+3
  7236  0023E2  ECBA  F00C         	call	___fladd	;wreg free
  7237  0023E6  C001  F049         	movff	?___fladd,_roundf$3243
  7238  0023EA  C002  F04A         	movff	?___fladd+1,_roundf$3243+1
  7239  0023EE  C003  F04B         	movff	?___fladd+2,_roundf$3243+2
  7240  0023F2  C004  F04C         	movff	?___fladd+3,_roundf$3243+3
  7241  0023F6  C049  F011         	movff	_roundf$3243,___flsub@b
  7242  0023FA  C04A  F012         	movff	_roundf$3243+1,___flsub@b+1
  7243  0023FE  C04B  F013         	movff	_roundf$3243+2,___flsub@b+2
  7244  002402  C04C  F014         	movff	_roundf$3243+3,___flsub@b+3
  7245  002406  C041  F015         	movff	roundf@x,___flsub@a
  7246  00240A  C042  F016         	movff	roundf@x+1,___flsub@a+1
  7247  00240E  C043  F017         	movff	roundf@x+2,___flsub@a+2
  7248  002412  C044  F018         	movff	roundf@x+3,___flsub@a+3
  7249  002416  EC6F  F028         	call	___flsub	;wreg free
  7250  00241A  C011  F057         	movff	?___flsub,roundf@y
  7251  00241E  C012  F058         	movff	?___flsub+1,roundf@y+1
  7252  002422  C013  F059         	movff	?___flsub+2,roundf@y+2
  7253  002426  C014  F05A         	movff	?___flsub+3,roundf@y+3
  7254  00242A  0E00               	movlw	0
  7255  00242C  6E01               	movwf	___flge@ff1^0,c
  7256  00242E  0E00               	movlw	0
  7257  002430  6E02               	movwf	(___flge@ff1+1)^0,c
  7258  002432  0E00               	movlw	0
  7259  002434  6E03               	movwf	(___flge@ff1+2)^0,c
  7260  002436  0E3F               	movlw	63
  7261  002438  6E04               	movwf	(___flge@ff1+3)^0,c
  7262  00243A  C057  F005         	movff	roundf@y,___flge@ff2
  7263  00243E  C058  F006         	movff	roundf@y+1,___flge@ff2+1
  7264  002442  C059  F007         	movff	roundf@y+2,___flge@ff2+2
  7265  002446  C05A  F008         	movff	roundf@y+3,___flge@ff2+3
  7266  00244A  EC0B  F023         	call	___flge	;wreg free
  7267  00244E  B0D8               	btfsc	status,0,c
  7268  002450  EF2C  F012         	goto	u4271
  7269  002454  EF2E  F012         	goto	u4270
  7270  002458                     u4271:
  7271  002458  EF64  F012         	goto	l4448
  7272  00245C                     u4270:
  7273  00245C  C041  F005         	movff	roundf@x,___fladd@a
  7274  002460  C042  F006         	movff	roundf@x+1,___fladd@a+1
  7275  002464  C043  F007         	movff	roundf@x+2,___fladd@a+2
  7276  002468  C044  F008         	movff	roundf@x+3,___fladd@a+3
  7277  00246C  C057  F001         	movff	roundf@y,___fladd@b
  7278  002470  C058  F002         	movff	roundf@y+1,___fladd@b+1
  7279  002474  C059  F003         	movff	roundf@y+2,___fladd@b+2
  7280  002478  C05A  F004         	movff	roundf@y+3,___fladd@b+3
  7281  00247C  ECBA  F00C         	call	___fladd	;wreg free
  7282  002480  C001  F04F         	movff	?___fladd,_roundf$3242
  7283  002484  C002  F050         	movff	?___fladd+1,_roundf$3242+1
  7284  002488  C003  F051         	movff	?___fladd+2,_roundf$3242+2
  7285  00248C  C004  F052         	movff	?___fladd+3,_roundf$3242+3
  7286  002490  C04F  F001         	movff	_roundf$3242,___fladd@b
  7287  002494  C050  F002         	movff	_roundf$3242+1,___fladd@b+1
  7288  002498  C051  F003         	movff	_roundf$3242+2,___fladd@b+2
  7289  00249C  C052  F004         	movff	_roundf$3242+3,___fladd@b+3
  7290  0024A0  0E00               	movlw	0
  7291  0024A2  6E05               	movwf	___fladd@a^0,c
  7292  0024A4  0E00               	movlw	0
  7293  0024A6  6E06               	movwf	(___fladd@a+1)^0,c
  7294  0024A8  0E80               	movlw	128
  7295  0024AA  6E07               	movwf	(___fladd@a+2)^0,c
  7296  0024AC  0EBF               	movlw	191
  7297  0024AE  6E08               	movwf	(___fladd@a+3)^0,c
  7298  0024B0  ECBA  F00C         	call	___fladd	;wreg free
  7299  0024B4  C001  F057         	movff	?___fladd,roundf@y
  7300  0024B8  C002  F058         	movff	?___fladd+1,roundf@y+1
  7301  0024BC  C003  F059         	movff	?___fladd+2,roundf@y+2
  7302  0024C0  C004  F05A         	movff	?___fladd+3,roundf@y+3
  7303  0024C4  EFCD  F012         	goto	l4454
  7304  0024C8                     l4448:
  7305  0024C8  0E00               	movlw	0
  7306  0024CA  6E01               	movwf	___flge@ff1^0,c
  7307  0024CC  0E00               	movlw	0
  7308  0024CE  6E02               	movwf	(___flge@ff1+1)^0,c
  7309  0024D0  0E00               	movlw	0
  7310  0024D2  6E03               	movwf	(___flge@ff1+2)^0,c
  7311  0024D4  0EBF               	movlw	191
  7312  0024D6  6E04               	movwf	(___flge@ff1+3)^0,c
  7313  0024D8  C057  F005         	movff	roundf@y,___flge@ff2
  7314  0024DC  C058  F006         	movff	roundf@y+1,___flge@ff2+1
  7315  0024E0  C059  F007         	movff	roundf@y+2,___flge@ff2+2
  7316  0024E4  C05A  F008         	movff	roundf@y+3,___flge@ff2+3
  7317  0024E8  EC0B  F023         	call	___flge	;wreg free
  7318  0024EC  A0D8               	btfss	status,0,c
  7319  0024EE  EF7B  F012         	goto	u4281
  7320  0024F2  EF7D  F012         	goto	u4280
  7321  0024F6                     u4281:
  7322  0024F6  EFB3  F012         	goto	l4452
  7323  0024FA                     u4280:
  7324  0024FA  C041  F005         	movff	roundf@x,___fladd@a
  7325  0024FE  C042  F006         	movff	roundf@x+1,___fladd@a+1
  7326  002502  C043  F007         	movff	roundf@x+2,___fladd@a+2
  7327  002506  C044  F008         	movff	roundf@x+3,___fladd@a+3
  7328  00250A  C057  F001         	movff	roundf@y,___fladd@b
  7329  00250E  C058  F002         	movff	roundf@y+1,___fladd@b+1
  7330  002512  C059  F003         	movff	roundf@y+2,___fladd@b+2
  7331  002516  C05A  F004         	movff	roundf@y+3,___fladd@b+3
  7332  00251A  ECBA  F00C         	call	___fladd	;wreg free
  7333  00251E  C001  F04F         	movff	?___fladd,_roundf$3242
  7334  002522  C002  F050         	movff	?___fladd+1,_roundf$3242+1
  7335  002526  C003  F051         	movff	?___fladd+2,_roundf$3242+2
  7336  00252A  C004  F052         	movff	?___fladd+3,_roundf$3242+3
  7337  00252E  C04F  F001         	movff	_roundf$3242,___fladd@b
  7338  002532  C050  F002         	movff	_roundf$3242+1,___fladd@b+1
  7339  002536  C051  F003         	movff	_roundf$3242+2,___fladd@b+2
  7340  00253A  C052  F004         	movff	_roundf$3242+3,___fladd@b+3
  7341  00253E  0E00               	movlw	0
  7342  002540  6E05               	movwf	___fladd@a^0,c
  7343  002542  0E00               	movlw	0
  7344  002544  6E06               	movwf	(___fladd@a+1)^0,c
  7345  002546  0E80               	movlw	128
  7346  002548  6E07               	movwf	(___fladd@a+2)^0,c
  7347  00254A  0E3F               	movlw	63
  7348  00254C  6E08               	movwf	(___fladd@a+3)^0,c
  7349  00254E  ECBA  F00C         	call	___fladd	;wreg free
  7350  002552  C001  F057         	movff	?___fladd,roundf@y
  7351  002556  C002  F058         	movff	?___fladd+1,roundf@y+1
  7352  00255A  C003  F059         	movff	?___fladd+2,roundf@y+2
  7353  00255E  C004  F05A         	movff	?___fladd+3,roundf@y+3
  7354  002562  EFCD  F012         	goto	l4454
  7355  002566                     l4452:
  7356  002566  C057  F001         	movff	roundf@y,___fladd@b
  7357  00256A  C058  F002         	movff	roundf@y+1,___fladd@b+1
  7358  00256E  C059  F003         	movff	roundf@y+2,___fladd@b+2
  7359  002572  C05A  F004         	movff	roundf@y+3,___fladd@b+3
  7360  002576  C041  F005         	movff	roundf@x,___fladd@a
  7361  00257A  C042  F006         	movff	roundf@x+1,___fladd@a+1
  7362  00257E  C043  F007         	movff	roundf@x+2,___fladd@a+2
  7363  002582  C044  F008         	movff	roundf@x+3,___fladd@a+3
  7364  002586  ECBA  F00C         	call	___fladd	;wreg free
  7365  00258A  C001  F057         	movff	?___fladd,roundf@y
  7366  00258E  C002  F058         	movff	?___fladd+1,roundf@y+1
  7367  002592  C003  F059         	movff	?___fladd+2,roundf@y+2
  7368  002596  C004  F05A         	movff	?___fladd+3,roundf@y+3
  7369  00259A                     l4454:
  7370  00259A  C053  F045         	movff	roundf@u,??_roundf
  7371  00259E  C054  F046         	movff	roundf@u+1,??_roundf+1
  7372  0025A2  C055  F047         	movff	roundf@u+2,??_roundf+2
  7373  0025A6  C056  F048         	movff	roundf@u+3,??_roundf+3
  7374  0025AA  0E20               	movlw	32
  7375  0025AC  EFDD  F012         	goto	u4290
  7376  0025B0                     u4295:
  7377  0025B0  90D8               	bcf	status,0,c
  7378  0025B2  3248               	rrcf	(??_roundf+3)^0,f,c
  7379  0025B4  3247               	rrcf	(??_roundf+2)^0,f,c
  7380  0025B6  3246               	rrcf	(??_roundf+1)^0,f,c
  7381  0025B8  3245               	rrcf	??_roundf^0,f,c
  7382  0025BA                     u4290:
  7383  0025BA  2EE8               	decfsz	wreg,f,c
  7384  0025BC  EFD8  F012         	goto	u4295
  7385  0025C0  5045               	movf	??_roundf^0,w,c
  7386  0025C2  1046               	iorwf	(??_roundf+1)^0,w,c
  7387  0025C4  1047               	iorwf	(??_roundf+2)^0,w,c
  7388  0025C6  1048               	iorwf	(??_roundf+3)^0,w,c
  7389  0025C8  B4D8               	btfsc	status,2,c
  7390  0025CA  EFE9  F012         	goto	u4301
  7391  0025CE  EFEB  F012         	goto	u4300
  7392  0025D2                     u4301:
  7393  0025D2  EFFD  F012         	goto	l4458
  7394  0025D6                     u4300:
  7395  0025D6  C057  F001         	movff	roundf@y,___flneg@f1
  7396  0025DA  C058  F002         	movff	roundf@y+1,___flneg@f1+1
  7397  0025DE  C059  F003         	movff	roundf@y+2,___flneg@f1+2
  7398  0025E2  C05A  F004         	movff	roundf@y+3,___flneg@f1+3
  7399  0025E6  EC92  F029         	call	___flneg	;wreg free
  7400  0025EA  C001  F057         	movff	?___flneg,roundf@y
  7401  0025EE  C002  F058         	movff	?___flneg+1,roundf@y+1
  7402  0025F2  C003  F059         	movff	?___flneg+2,roundf@y+2
  7403  0025F6  C004  F05A         	movff	?___flneg+3,roundf@y+3
  7404  0025FA                     l4458:
  7405  0025FA  C057  F041         	movff	roundf@y,?_roundf
  7406  0025FE  C058  F042         	movff	roundf@y+1,?_roundf+1
  7407  002602  C059  F043         	movff	roundf@y+2,?_roundf+2
  7408  002606  C05A  F044         	movff	roundf@y+3,?_roundf+3
  7409  00260A                     l1581:
  7410  00260A  0012               	return		;funcret
  7411  00260C                     __end_of_roundf:
  7412                           	callstack 0
  7413                           
  7414 ;; *************** function ___flsub *****************
  7415 ;; Defined at:
  7416 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\sprcadd.c"
  7417 ;; Parameters:    Size  Location     Type
  7418 ;;  b               4   16[COMRAM] float 
  7419 ;;  a               4   20[COMRAM] float 
  7420 ;; Auto vars:     Size  Location     Type
  7421 ;;		None
  7422 ;; Return value:  Size  Location     Type
  7423 ;;                  4   16[COMRAM] float 
  7424 ;; Registers used:
  7425 ;;		wreg, status,2, status,0, cstack
  7426 ;; Tracked objects:
  7427 ;;		On entry : 0/0
  7428 ;;		On exit  : 0/0
  7429 ;;		Unchanged: 0/0
  7430 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7431 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7432 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7433 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7434 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7435 ;;Total ram usage:        8 bytes
  7436 ;; Hardware stack levels used: 1
  7437 ;; Hardware stack levels required when called: 2
  7438 ;; This function calls:
  7439 ;;		___fladd
  7440 ;; This function is called by:
  7441 ;;		_roundf
  7442 ;; This function uses a non-reentrant model
  7443 ;;
  7444                           
  7445                           	psect	text36
  7446  0050DE                     __ptext36:
  7447                           	callstack 0
  7448  0050DE                     ___flsub:
  7449                           	callstack 24
  7450  0050DE  0E00               	movlw	0
  7451  0050E0  1A15               	xorwf	___flsub@a^0,f,c
  7452  0050E2  0E00               	movlw	0
  7453  0050E4  1A16               	xorwf	(___flsub@a+1)^0,f,c
  7454  0050E6  0E00               	movlw	0
  7455  0050E8  1A17               	xorwf	(___flsub@a+2)^0,f,c
  7456  0050EA  0E80               	movlw	128
  7457  0050EC  1A18               	xorwf	(___flsub@a+3)^0,f,c
  7458  0050EE  C011  F001         	movff	___flsub@b,___fladd@b
  7459  0050F2  C012  F002         	movff	___flsub@b+1,___fladd@b+1
  7460  0050F6  C013  F003         	movff	___flsub@b+2,___fladd@b+2
  7461  0050FA  C014  F004         	movff	___flsub@b+3,___fladd@b+3
  7462  0050FE  C015  F005         	movff	___flsub@a,___fladd@a
  7463  005102  C016  F006         	movff	___flsub@a+1,___fladd@a+1
  7464  005106  C017  F007         	movff	___flsub@a+2,___fladd@a+2
  7465  00510A  C018  F008         	movff	___flsub@a+3,___fladd@a+3
  7466  00510E  ECBA  F00C         	call	___fladd	;wreg free
  7467  005112  C001  F011         	movff	?___fladd,?___flsub
  7468  005116  C002  F012         	movff	?___fladd+1,?___flsub+1
  7469  00511A  C003  F013         	movff	?___fladd+2,?___flsub+2
  7470  00511E  C004  F014         	movff	?___fladd+3,?___flsub+3
  7471  005122  0012               	return		;funcret
  7472  005124                     __end_of___flsub:
  7473                           	callstack 0
  7474                           
  7475 ;; *************** function ___fladd *****************
  7476 ;; Defined at:
  7477 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\sprcadd.c"
  7478 ;; Parameters:    Size  Location     Type
  7479 ;;  b               4    0[COMRAM] float 
  7480 ;;  a               4    4[COMRAM] float 
  7481 ;; Auto vars:     Size  Location     Type
  7482 ;;  grs             1   15[COMRAM] unsigned char 
  7483 ;;  bexp            1   14[COMRAM] unsigned char 
  7484 ;;  aexp            1   13[COMRAM] unsigned char 
  7485 ;;  signs           1   12[COMRAM] unsigned char 
  7486 ;; Return value:  Size  Location     Type
  7487 ;;                  4    0[COMRAM] unsigned char 
  7488 ;; Registers used:
  7489 ;;		wreg, status,2, status,0
  7490 ;; Tracked objects:
  7491 ;;		On entry : 0/0
  7492 ;;		On exit  : 0/0
  7493 ;;		Unchanged: 0/0
  7494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7495 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7496 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7497 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7498 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7499 ;;Total ram usage:       16 bytes
  7500 ;; Hardware stack levels used: 1
  7501 ;; Hardware stack levels required when called: 1
  7502 ;; This function calls:
  7503 ;;		Nothing
  7504 ;; This function is called by:
  7505 ;;		___flsub
  7506 ;;		_roundf
  7507 ;; This function uses a non-reentrant model
  7508 ;;
  7509                           
  7510                           	psect	text37
  7511  001974                     __ptext37:
  7512                           	callstack 0
  7513  001974                     ___fladd:
  7514                           	callstack 24
  7515  001974  5004               	movf	(___fladd@b+3)^0,w,c
  7516  001976  0B80               	andlw	128
  7517  001978  6E0D               	movwf	___fladd@signs^0,c
  7518  00197A  5004               	movf	(___fladd@b+3)^0,w,c
  7519  00197C  2404               	addwf	(___fladd@b+3)^0,w,c
  7520  00197E  6E0F               	movwf	___fladd@bexp^0,c
  7521  001980  AE03               	btfss	(___fladd@b+2)^0,7,c
  7522  001982  EFC5  F00C         	goto	u3281
  7523  001986  EFC7  F00C         	goto	u3280
  7524  00198A                     u3281:
  7525  00198A  EFC8  F00C         	goto	l3814
  7526  00198E                     u3280:
  7527  00198E  800F               	bsf	___fladd@bexp^0,0,c
  7528  001990                     l3814:
  7529  001990  500F               	movf	___fladd@bexp^0,w,c
  7530  001992  B4D8               	btfsc	status,2,c
  7531  001994  EFCE  F00C         	goto	u3291
  7532  001998  EFD0  F00C         	goto	u3290
  7533  00199C                     u3291:
  7534  00199C  EFE5  F00C         	goto	l3824
  7535  0019A0                     u3290:
  7536  0019A0  280F               	incf	___fladd@bexp^0,w,c
  7537  0019A2  A4D8               	btfss	status,2,c
  7538  0019A4  EFD6  F00C         	goto	u3301
  7539  0019A8  EFD8  F00C         	goto	u3300
  7540  0019AC                     u3301:
  7541  0019AC  EFE0  F00C         	goto	l3820
  7542  0019B0                     u3300:
  7543  0019B0  0E00               	movlw	0
  7544  0019B2  6E01               	movwf	___fladd@b^0,c
  7545  0019B4  0E00               	movlw	0
  7546  0019B6  6E02               	movwf	(___fladd@b+1)^0,c
  7547  0019B8  0E00               	movlw	0
  7548  0019BA  6E03               	movwf	(___fladd@b+2)^0,c
  7549  0019BC  0E00               	movlw	0
  7550  0019BE  6E04               	movwf	(___fladd@b+3)^0,c
  7551  0019C0                     l3820:
  7552  0019C0  8E03               	bsf	(___fladd@b+2)^0,7,c
  7553  0019C2  0E00               	movlw	0
  7554  0019C4  6E04               	movwf	(___fladd@b+3)^0,c
  7555  0019C6  EFED  F00C         	goto	l3826
  7556  0019CA                     l3824:
  7557  0019CA  0E00               	movlw	0
  7558  0019CC  6E01               	movwf	___fladd@b^0,c
  7559  0019CE  0E00               	movlw	0
  7560  0019D0  6E02               	movwf	(___fladd@b+1)^0,c
  7561  0019D2  0E00               	movlw	0
  7562  0019D4  6E03               	movwf	(___fladd@b+2)^0,c
  7563  0019D6  0E00               	movlw	0
  7564  0019D8  6E04               	movwf	(___fladd@b+3)^0,c
  7565  0019DA                     l3826:
  7566  0019DA  5008               	movf	(___fladd@a+3)^0,w,c
  7567  0019DC  0B80               	andlw	128
  7568  0019DE  6E0E               	movwf	___fladd@aexp^0,c
  7569  0019E0  500D               	movf	___fladd@signs^0,w,c
  7570  0019E2  180E               	xorwf	___fladd@aexp^0,w,c
  7571  0019E4  B4D8               	btfsc	status,2,c
  7572  0019E6  EFF7  F00C         	goto	u3311
  7573  0019EA  EFF9  F00C         	goto	u3310
  7574  0019EE                     u3311:
  7575  0019EE  EFFA  F00C         	goto	l3832
  7576  0019F2                     u3310:
  7577  0019F2  8C0D               	bsf	___fladd@signs^0,6,c
  7578  0019F4                     l3832:
  7579  0019F4  5008               	movf	(___fladd@a+3)^0,w,c
  7580  0019F6  2408               	addwf	(___fladd@a+3)^0,w,c
  7581  0019F8  6E0E               	movwf	___fladd@aexp^0,c
  7582  0019FA  AE07               	btfss	(___fladd@a+2)^0,7,c
  7583  0019FC  EF02  F00D         	goto	u3321
  7584  001A00  EF04  F00D         	goto	u3320
  7585  001A04                     u3321:
  7586  001A04  EF05  F00D         	goto	l3838
  7587  001A08                     u3320:
  7588  001A08  800E               	bsf	___fladd@aexp^0,0,c
  7589  001A0A                     l3838:
  7590  001A0A  500E               	movf	___fladd@aexp^0,w,c
  7591  001A0C  B4D8               	btfsc	status,2,c
  7592  001A0E  EF0B  F00D         	goto	u3331
  7593  001A12  EF0D  F00D         	goto	u3330
  7594  001A16                     u3331:
  7595  001A16  EF22  F00D         	goto	l3848
  7596  001A1A                     u3330:
  7597  001A1A  280E               	incf	___fladd@aexp^0,w,c
  7598  001A1C  A4D8               	btfss	status,2,c
  7599  001A1E  EF13  F00D         	goto	u3341
  7600  001A22  EF15  F00D         	goto	u3340
  7601  001A26                     u3341:
  7602  001A26  EF1D  F00D         	goto	l3844
  7603  001A2A                     u3340:
  7604  001A2A  0E00               	movlw	0
  7605  001A2C  6E05               	movwf	___fladd@a^0,c
  7606  001A2E  0E00               	movlw	0
  7607  001A30  6E06               	movwf	(___fladd@a+1)^0,c
  7608  001A32  0E00               	movlw	0
  7609  001A34  6E07               	movwf	(___fladd@a+2)^0,c
  7610  001A36  0E00               	movlw	0
  7611  001A38  6E08               	movwf	(___fladd@a+3)^0,c
  7612  001A3A                     l3844:
  7613  001A3A  8E07               	bsf	(___fladd@a+2)^0,7,c
  7614  001A3C  0E00               	movlw	0
  7615  001A3E  6E08               	movwf	(___fladd@a+3)^0,c
  7616  001A40  EF2A  F00D         	goto	l3850
  7617  001A44                     l3848:
  7618  001A44  0E00               	movlw	0
  7619  001A46  6E05               	movwf	___fladd@a^0,c
  7620  001A48  0E00               	movlw	0
  7621  001A4A  6E06               	movwf	(___fladd@a+1)^0,c
  7622  001A4C  0E00               	movlw	0
  7623  001A4E  6E07               	movwf	(___fladd@a+2)^0,c
  7624  001A50  0E00               	movlw	0
  7625  001A52  6E08               	movwf	(___fladd@a+3)^0,c
  7626  001A54                     l3850:
  7627  001A54  500F               	movf	___fladd@bexp^0,w,c
  7628  001A56  5C0E               	subwf	___fladd@aexp^0,w,c
  7629  001A58  B0D8               	btfsc	status,0,c
  7630  001A5A  EF31  F00D         	goto	u3351
  7631  001A5E  EF33  F00D         	goto	u3350
  7632  001A62                     u3351:
  7633  001A62  EF5A  F00D         	goto	l3886
  7634  001A66                     u3350:
  7635  001A66  AC0D               	btfss	___fladd@signs^0,6,c
  7636  001A68  EF38  F00D         	goto	u3361
  7637  001A6C  EF3A  F00D         	goto	u3360
  7638  001A70                     u3361:
  7639  001A70  EF3C  F00D         	goto	l3856
  7640  001A74                     u3360:
  7641  001A74  0E80               	movlw	128
  7642  001A76  1A0D               	xorwf	___fladd@signs^0,f,c
  7643  001A78                     l3856:
  7644  001A78  C00F  F010         	movff	___fladd@bexp,___fladd@grs
  7645  001A7C  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  7646  001A80  C010  F00E         	movff	___fladd@grs,___fladd@aexp
  7647  001A84  C001  F010         	movff	___fladd@b,___fladd@grs
  7648  001A88  C005  F001         	movff	___fladd@a,___fladd@b
  7649  001A8C  C010  F005         	movff	___fladd@grs,___fladd@a
  7650  001A90  C002  F010         	movff	___fladd@b+1,___fladd@grs
  7651  001A94  C006  F002         	movff	___fladd@a+1,___fladd@b+1
  7652  001A98  C010  F006         	movff	___fladd@grs,___fladd@a+1
  7653  001A9C  C003  F010         	movff	___fladd@b+2,___fladd@grs
  7654  001AA0  C007  F003         	movff	___fladd@a+2,___fladd@b+2
  7655  001AA4  C010  F007         	movff	___fladd@grs,___fladd@a+2
  7656  001AA8  C004  F010         	movff	___fladd@b+3,___fladd@grs
  7657  001AAC  C008  F004         	movff	___fladd@a+3,___fladd@b+3
  7658  001AB0  C010  F008         	movff	___fladd@grs,___fladd@a+3
  7659  001AB4                     l3886:
  7660  001AB4  0E00               	movlw	0
  7661  001AB6  6E10               	movwf	___fladd@grs^0,c
  7662  001AB8  500F               	movf	___fladd@bexp^0,w,c
  7663  001ABA  C00E  F009         	movff	___fladd@aexp,??___fladd
  7664  001ABE  6A0A               	clrf	(??___fladd+1)^0,c
  7665  001AC0  5E09               	subwf	??___fladd^0,f,c
  7666  001AC2  0E00               	movlw	0
  7667  001AC4  5A0A               	subwfb	(??___fladd+1)^0,f,c
  7668  001AC6  BE0A               	btfsc	(??___fladd+1)^0,7,c
  7669  001AC8  EF6F  F00D         	goto	u3371
  7670  001ACC  500A               	movf	(??___fladd+1)^0,w,c
  7671  001ACE  E109               	bnz	u3370
  7672  001AD0  0E1A               	movlw	26
  7673  001AD2  5C09               	subwf	??___fladd^0,w,c
  7674  001AD4  A0D8               	btfss	status,0,c
  7675  001AD6  EF6F  F00D         	goto	u3371
  7676  001ADA  EF71  F00D         	goto	u3370
  7677  001ADE                     u3371:
  7678  001ADE  EFA8  F00D         	goto	l1317
  7679  001AE2                     u3370:
  7680  001AE2  5001               	movf	___fladd@b^0,w,c
  7681  001AE4  1002               	iorwf	(___fladd@b+1)^0,w,c
  7682  001AE6  1003               	iorwf	(___fladd@b+2)^0,w,c
  7683  001AE8  1004               	iorwf	(___fladd@b+3)^0,w,c
  7684  001AEA  A4D8               	btfss	status,2,c
  7685  001AEC  EF7A  F00D         	goto	u3381
  7686  001AF0  EF7D  F00D         	goto	u3380
  7687  001AF4                     u3381:
  7688  001AF4  0E01               	movlw	1
  7689  001AF6  EF7E  F00D         	goto	u3390
  7690  001AFA                     u3380:
  7691  001AFA  0E00               	movlw	0
  7692  001AFC                     u3390:
  7693  001AFC  6E10               	movwf	___fladd@grs^0,c
  7694  001AFE  0E00               	movlw	0
  7695  001B00  6E01               	movwf	___fladd@b^0,c
  7696  001B02  0E00               	movlw	0
  7697  001B04  6E02               	movwf	(___fladd@b+1)^0,c
  7698  001B06  0E00               	movlw	0
  7699  001B08  6E03               	movwf	(___fladd@b+2)^0,c
  7700  001B0A  0E00               	movlw	0
  7701  001B0C  6E04               	movwf	(___fladd@b+3)^0,c
  7702  001B0E  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  7703  001B12  EFB1  F00D         	goto	l1316
  7704  001B16                     l1318:
  7705  001B16  A010               	btfss	___fladd@grs^0,0,c
  7706  001B18  EF90  F00D         	goto	u3401
  7707  001B1C  EF92  F00D         	goto	u3400
  7708  001B20                     u3401:
  7709  001B20  EF98  F00D         	goto	l3898
  7710  001B24                     u3400:
  7711  001B24  90D8               	bcf	status,0,c
  7712  001B26  3010               	rrcf	___fladd@grs^0,w,c
  7713  001B28  0901               	iorlw	1
  7714  001B2A  6E10               	movwf	___fladd@grs^0,c
  7715  001B2C  EF9A  F00D         	goto	l3900
  7716  001B30                     l3898:
  7717  001B30  90D8               	bcf	status,0,c
  7718  001B32  3210               	rrcf	___fladd@grs^0,f,c
  7719  001B34                     l3900:
  7720  001B34  A001               	btfss	___fladd@b^0,0,c
  7721  001B36  EF9F  F00D         	goto	u3411
  7722  001B3A  EFA1  F00D         	goto	u3410
  7723  001B3E                     u3411:
  7724  001B3E  EFA2  F00D         	goto	l3904
  7725  001B42                     u3410:
  7726  001B42  8E10               	bsf	___fladd@grs^0,7,c
  7727  001B44                     l3904:
  7728  001B44  3404               	rlcf	(___fladd@b+3)^0,w,c
  7729  001B46  3204               	rrcf	(___fladd@b+3)^0,f,c
  7730  001B48  3203               	rrcf	(___fladd@b+2)^0,f,c
  7731  001B4A  3202               	rrcf	(___fladd@b+1)^0,f,c
  7732  001B4C  3201               	rrcf	___fladd@b^0,f,c
  7733  001B4E  2A0F               	incf	___fladd@bexp^0,f,c
  7734  001B50                     l1317:
  7735  001B50  500E               	movf	___fladd@aexp^0,w,c
  7736  001B52  5C0F               	subwf	___fladd@bexp^0,w,c
  7737  001B54  A0D8               	btfss	status,0,c
  7738  001B56  EFAF  F00D         	goto	u3421
  7739  001B5A  EFB1  F00D         	goto	u3420
  7740  001B5E                     u3421:
  7741  001B5E  EF8B  F00D         	goto	l1318
  7742  001B62                     u3420:
  7743  001B62                     l1316:
  7744  001B62  BC0D               	btfsc	___fladd@signs^0,6,c
  7745  001B64  EFB6  F00D         	goto	u3431
  7746  001B68  EFB8  F00D         	goto	u3430
  7747  001B6C                     u3431:
  7748  001B6C  EFF8  F00D         	goto	l3932
  7749  001B70                     u3430:
  7750  001B70  500F               	movf	___fladd@bexp^0,w,c
  7751  001B72  A4D8               	btfss	status,2,c
  7752  001B74  EFBE  F00D         	goto	u3441
  7753  001B78  EFC0  F00D         	goto	u3440
  7754  001B7C                     u3441:
  7755  001B7C  EFCA  F00D         	goto	l3914
  7756  001B80                     u3440:
  7757  001B80  0E00               	movlw	0
  7758  001B82  6E01               	movwf	?___fladd^0,c
  7759  001B84  0E00               	movlw	0
  7760  001B86  6E02               	movwf	(?___fladd+1)^0,c
  7761  001B88  0E00               	movlw	0
  7762  001B8A  6E03               	movwf	(?___fladd+2)^0,c
  7763  001B8C  0E00               	movlw	0
  7764  001B8E  6E04               	movwf	(?___fladd+3)^0,c
  7765  001B90  EF19  F00F         	goto	l1325
  7766  001B94                     l3914:
  7767  001B94  5005               	movf	___fladd@a^0,w,c
  7768  001B96  2601               	addwf	___fladd@b^0,f,c
  7769  001B98  5006               	movf	(___fladd@a+1)^0,w,c
  7770  001B9A  2202               	addwfc	(___fladd@b+1)^0,f,c
  7771  001B9C  5007               	movf	(___fladd@a+2)^0,w,c
  7772  001B9E  2203               	addwfc	(___fladd@b+2)^0,f,c
  7773  001BA0  5008               	movf	(___fladd@a+3)^0,w,c
  7774  001BA2  2204               	addwfc	(___fladd@b+3)^0,f,c
  7775  001BA4  A004               	btfss	(___fladd@b+3)^0,0,c
  7776  001BA6  EFD7  F00D         	goto	u3451
  7777  001BAA  EFD9  F00D         	goto	u3450
  7778  001BAE                     u3451:
  7779  001BAE  EF85  F00E         	goto	l3968
  7780  001BB2                     u3450:
  7781  001BB2  A010               	btfss	___fladd@grs^0,0,c
  7782  001BB4  EFDE  F00D         	goto	u3461
  7783  001BB8  EFE0  F00D         	goto	u3460
  7784  001BBC                     u3461:
  7785  001BBC  EFE6  F00D         	goto	l3922
  7786  001BC0                     u3460:
  7787  001BC0  90D8               	bcf	status,0,c
  7788  001BC2  3010               	rrcf	___fladd@grs^0,w,c
  7789  001BC4  0901               	iorlw	1
  7790  001BC6  6E10               	movwf	___fladd@grs^0,c
  7791  001BC8  EFE8  F00D         	goto	l3924
  7792  001BCC                     l3922:
  7793  001BCC  90D8               	bcf	status,0,c
  7794  001BCE  3210               	rrcf	___fladd@grs^0,f,c
  7795  001BD0                     l3924:
  7796  001BD0  A001               	btfss	___fladd@b^0,0,c
  7797  001BD2  EFED  F00D         	goto	u3471
  7798  001BD6  EFEF  F00D         	goto	u3470
  7799  001BDA                     u3471:
  7800  001BDA  EFF0  F00D         	goto	l3928
  7801  001BDE                     u3470:
  7802  001BDE  8E10               	bsf	___fladd@grs^0,7,c
  7803  001BE0                     l3928:
  7804  001BE0  3404               	rlcf	(___fladd@b+3)^0,w,c
  7805  001BE2  3204               	rrcf	(___fladd@b+3)^0,f,c
  7806  001BE4  3203               	rrcf	(___fladd@b+2)^0,f,c
  7807  001BE6  3202               	rrcf	(___fladd@b+1)^0,f,c
  7808  001BE8  3201               	rrcf	___fladd@b^0,f,c
  7809  001BEA  2A0F               	incf	___fladd@bexp^0,f,c
  7810  001BEC  EF85  F00E         	goto	l3968
  7811  001BF0                     l3932:
  7812  001BF0  5005               	movf	___fladd@a^0,w,c
  7813  001BF2  5C01               	subwf	___fladd@b^0,w,c
  7814  001BF4  5006               	movf	(___fladd@a+1)^0,w,c
  7815  001BF6  5802               	subwfb	(___fladd@b+1)^0,w,c
  7816  001BF8  5007               	movf	(___fladd@a+2)^0,w,c
  7817  001BFA  5803               	subwfb	(___fladd@b+2)^0,w,c
  7818  001BFC  5004               	movf	(___fladd@b+3)^0,w,c
  7819  001BFE  0A80               	xorlw	128
  7820  001C00  6E09               	movwf	??___fladd^0,c
  7821  001C02  5008               	movf	(___fladd@a+3)^0,w,c
  7822  001C04  0A80               	xorlw	128
  7823  001C06  5809               	subwfb	??___fladd^0,w,c
  7824  001C08  B0D8               	btfsc	status,0,c
  7825  001C0A  EF09  F00E         	goto	u3481
  7826  001C0E  EF0B  F00E         	goto	u3480
  7827  001C12                     u3481:
  7828  001C12  EF36  F00E         	goto	l3942
  7829  001C16                     u3480:
  7830  001C16  5001               	movf	___fladd@b^0,w,c
  7831  001C18  5C05               	subwf	___fladd@a^0,w,c
  7832  001C1A  6E09               	movwf	??___fladd^0,c
  7833  001C1C  5002               	movf	(___fladd@b+1)^0,w,c
  7834  001C1E  5806               	subwfb	(___fladd@a+1)^0,w,c
  7835  001C20  6E0A               	movwf	(??___fladd+1)^0,c
  7836  001C22  5003               	movf	(___fladd@b+2)^0,w,c
  7837  001C24  5807               	subwfb	(___fladd@a+2)^0,w,c
  7838  001C26  6E0B               	movwf	(??___fladd+2)^0,c
  7839  001C28  5004               	movf	(___fladd@b+3)^0,w,c
  7840  001C2A  5808               	subwfb	(___fladd@a+3)^0,w,c
  7841  001C2C  6E0C               	movwf	(??___fladd+3)^0,c
  7842  001C2E  0EFF               	movlw	255
  7843  001C30  2409               	addwf	??___fladd^0,w,c
  7844  001C32  6E01               	movwf	___fladd@b^0,c
  7845  001C34  0EFF               	movlw	255
  7846  001C36  200A               	addwfc	(??___fladd+1)^0,w,c
  7847  001C38  6E02               	movwf	(___fladd@b+1)^0,c
  7848  001C3A  0EFF               	movlw	255
  7849  001C3C  200B               	addwfc	(??___fladd+2)^0,w,c
  7850  001C3E  6E03               	movwf	(___fladd@b+2)^0,c
  7851  001C40  0EFF               	movlw	255
  7852  001C42  200C               	addwfc	(??___fladd+3)^0,w,c
  7853  001C44  6E04               	movwf	(___fladd@b+3)^0,c
  7854  001C46  0E80               	movlw	128
  7855  001C48  1A0D               	xorwf	___fladd@signs^0,f,c
  7856  001C4A  6C10               	negf	___fladd@grs^0,c
  7857  001C4C  5010               	movf	___fladd@grs^0,w,c
  7858  001C4E  A4D8               	btfss	status,2,c
  7859  001C50  EF2C  F00E         	goto	u3491
  7860  001C54  EF2E  F00E         	goto	u3490
  7861  001C58                     u3491:
  7862  001C58  EF3E  F00E         	goto	l1333
  7863  001C5C                     u3490:
  7864  001C5C  0E01               	movlw	1
  7865  001C5E  2601               	addwf	___fladd@b^0,f,c
  7866  001C60  0E00               	movlw	0
  7867  001C62  2202               	addwfc	(___fladd@b+1)^0,f,c
  7868  001C64  2203               	addwfc	(___fladd@b+2)^0,f,c
  7869  001C66  2204               	addwfc	(___fladd@b+3)^0,f,c
  7870  001C68  EF3E  F00E         	goto	l1333
  7871  001C6C                     l3942:
  7872  001C6C  5005               	movf	___fladd@a^0,w,c
  7873  001C6E  5E01               	subwf	___fladd@b^0,f,c
  7874  001C70  5006               	movf	(___fladd@a+1)^0,w,c
  7875  001C72  5A02               	subwfb	(___fladd@b+1)^0,f,c
  7876  001C74  5007               	movf	(___fladd@a+2)^0,w,c
  7877  001C76  5A03               	subwfb	(___fladd@b+2)^0,f,c
  7878  001C78  5008               	movf	(___fladd@a+3)^0,w,c
  7879  001C7A  5A04               	subwfb	(___fladd@b+3)^0,f,c
  7880  001C7C                     l1333:
  7881  001C7C  5001               	movf	___fladd@b^0,w,c
  7882  001C7E  1002               	iorwf	(___fladd@b+1)^0,w,c
  7883  001C80  1003               	iorwf	(___fladd@b+2)^0,w,c
  7884  001C82  1004               	iorwf	(___fladd@b+3)^0,w,c
  7885  001C84  A4D8               	btfss	status,2,c
  7886  001C86  EF47  F00E         	goto	u3501
  7887  001C8A  EF49  F00E         	goto	u3500
  7888  001C8E                     u3501:
  7889  001C8E  EF7E  F00E         	goto	l3966
  7890  001C92                     u3500:
  7891  001C92  5010               	movf	___fladd@grs^0,w,c
  7892  001C94  A4D8               	btfss	status,2,c
  7893  001C96  EF4F  F00E         	goto	u3511
  7894  001C9A  EF51  F00E         	goto	u3510
  7895  001C9E                     u3511:
  7896  001C9E  EF7E  F00E         	goto	l3966
  7897  001CA2                     u3510:
  7898  001CA2  0E00               	movlw	0
  7899  001CA4  6E01               	movwf	?___fladd^0,c
  7900  001CA6  0E00               	movlw	0
  7901  001CA8  6E02               	movwf	(?___fladd+1)^0,c
  7902  001CAA  0E00               	movlw	0
  7903  001CAC  6E03               	movwf	(?___fladd+2)^0,c
  7904  001CAE  0E00               	movlw	0
  7905  001CB0  6E04               	movwf	(?___fladd+3)^0,c
  7906  001CB2  EF19  F00F         	goto	l1325
  7907  001CB6                     l3950:
  7908  001CB6  90D8               	bcf	status,0,c
  7909  001CB8  3601               	rlcf	___fladd@b^0,f,c
  7910  001CBA  3602               	rlcf	(___fladd@b+1)^0,f,c
  7911  001CBC  3603               	rlcf	(___fladd@b+2)^0,f,c
  7912  001CBE  3604               	rlcf	(___fladd@b+3)^0,f,c
  7913  001CC0  AE10               	btfss	___fladd@grs^0,7,c
  7914  001CC2  EF65  F00E         	goto	u3521
  7915  001CC6  EF67  F00E         	goto	u3520
  7916  001CCA                     u3521:
  7917  001CCA  EF68  F00E         	goto	l3956
  7918  001CCE                     u3520:
  7919  001CCE  8001               	bsf	___fladd@b^0,0,c
  7920  001CD0                     l3956:
  7921  001CD0  A010               	btfss	___fladd@grs^0,0,c
  7922  001CD2  EF6D  F00E         	goto	u3531
  7923  001CD6  EF6F  F00E         	goto	u3530
  7924  001CDA                     u3531:
  7925  001CDA  EF73  F00E         	goto	l3960
  7926  001CDE                     u3530:
  7927  001CDE  80D8               	bsf	status,0,c
  7928  001CE0  3610               	rlcf	___fladd@grs^0,f,c
  7929  001CE2  EF75  F00E         	goto	l3962
  7930  001CE6                     l3960:
  7931  001CE6  90D8               	bcf	status,0,c
  7932  001CE8  3610               	rlcf	___fladd@grs^0,f,c
  7933  001CEA                     l3962:
  7934  001CEA  500F               	movf	___fladd@bexp^0,w,c
  7935  001CEC  B4D8               	btfsc	status,2,c
  7936  001CEE  EF7B  F00E         	goto	u3541
  7937  001CF2  EF7D  F00E         	goto	u3540
  7938  001CF6                     u3541:
  7939  001CF6  EF7E  F00E         	goto	l3966
  7940  001CFA                     u3540:
  7941  001CFA  060F               	decf	___fladd@bexp^0,f,c
  7942  001CFC                     l3966:
  7943  001CFC  AE03               	btfss	(___fladd@b+2)^0,7,c
  7944  001CFE  EF83  F00E         	goto	u3551
  7945  001D02  EF85  F00E         	goto	u3550
  7946  001D06                     u3551:
  7947  001D06  EF5B  F00E         	goto	l3950
  7948  001D0A                     u3550:
  7949  001D0A                     l3968:
  7950  001D0A  0E00               	movlw	0
  7951  001D0C  6E0E               	movwf	___fladd@aexp^0,c
  7952  001D0E  AE10               	btfss	___fladd@grs^0,7,c
  7953  001D10  EF8C  F00E         	goto	u3561
  7954  001D14  EF8E  F00E         	goto	u3560
  7955  001D18                     u3561:
  7956  001D18  EFA6  F00E         	goto	l1342
  7957  001D1C                     u3560:
  7958  001D1C  C010  F009         	movff	___fladd@grs,??___fladd
  7959  001D20  0E7F               	movlw	127
  7960  001D22  1609               	andwf	??___fladd^0,f,c
  7961  001D24  B4D8               	btfsc	status,2,c
  7962  001D26  EF97  F00E         	goto	u3571
  7963  001D2A  EF99  F00E         	goto	u3570
  7964  001D2E                     u3571:
  7965  001D2E  EF9D  F00E         	goto	l1343
  7966  001D32                     u3570:
  7967  001D32                     l3974:
  7968  001D32  0E01               	movlw	1
  7969  001D34  6E0E               	movwf	___fladd@aexp^0,c
  7970  001D36  EFA6  F00E         	goto	l1342
  7971  001D3A                     l1343:
  7972  001D3A  A001               	btfss	___fladd@b^0,0,c
  7973  001D3C  EFA2  F00E         	goto	u3581
  7974  001D40  EFA4  F00E         	goto	u3580
  7975  001D44                     u3581:
  7976  001D44  EFA6  F00E         	goto	l1342
  7977  001D48                     u3580:
  7978  001D48  EF99  F00E         	goto	l3974
  7979  001D4C                     l1342:
  7980  001D4C  500E               	movf	___fladd@aexp^0,w,c
  7981  001D4E  B4D8               	btfsc	status,2,c
  7982  001D50  EFAC  F00E         	goto	u3591
  7983  001D54  EFAE  F00E         	goto	u3590
  7984  001D58                     u3591:
  7985  001D58  EFD9  F00E         	goto	l3986
  7986  001D5C                     u3590:
  7987  001D5C  0E01               	movlw	1
  7988  001D5E  2601               	addwf	___fladd@b^0,f,c
  7989  001D60  0E00               	movlw	0
  7990  001D62  2202               	addwfc	(___fladd@b+1)^0,f,c
  7991  001D64  2203               	addwfc	(___fladd@b+2)^0,f,c
  7992  001D66  2204               	addwfc	(___fladd@b+3)^0,f,c
  7993  001D68  A004               	btfss	(___fladd@b+3)^0,0,c
  7994  001D6A  EFB9  F00E         	goto	u3601
  7995  001D6E  EFBB  F00E         	goto	u3600
  7996  001D72                     u3601:
  7997  001D72  EFD9  F00E         	goto	l3986
  7998  001D76                     u3600:
  7999  001D76  C001  F009         	movff	___fladd@b,??___fladd
  8000  001D7A  C002  F00A         	movff	___fladd@b+1,??___fladd+1
  8001  001D7E  C003  F00B         	movff	___fladd@b+2,??___fladd+2
  8002  001D82  C004  F00C         	movff	___fladd@b+3,??___fladd+3
  8003  001D86  340C               	rlcf	(??___fladd+3)^0,w,c
  8004  001D88  320C               	rrcf	(??___fladd+3)^0,f,c
  8005  001D8A  320B               	rrcf	(??___fladd+2)^0,f,c
  8006  001D8C  320A               	rrcf	(??___fladd+1)^0,f,c
  8007  001D8E  3209               	rrcf	??___fladd^0,f,c
  8008  001D90  C009  F001         	movff	??___fladd,___fladd@b
  8009  001D94  C00A  F002         	movff	??___fladd+1,___fladd@b+1
  8010  001D98  C00B  F003         	movff	??___fladd+2,___fladd@b+2
  8011  001D9C  C00C  F004         	movff	??___fladd+3,___fladd@b+3
  8012  001DA0  280F               	incf	___fladd@bexp^0,w,c
  8013  001DA2  B4D8               	btfsc	status,2,c
  8014  001DA4  EFD6  F00E         	goto	u3611
  8015  001DA8  EFD8  F00E         	goto	u3610
  8016  001DAC                     u3611:
  8017  001DAC  EFD9  F00E         	goto	l3986
  8018  001DB0                     u3610:
  8019  001DB0  2A0F               	incf	___fladd@bexp^0,f,c
  8020  001DB2                     l3986:
  8021  001DB2  280F               	incf	___fladd@bexp^0,w,c
  8022  001DB4  B4D8               	btfsc	status,2,c
  8023  001DB6  EFDF  F00E         	goto	u3621
  8024  001DBA  EFE1  F00E         	goto	u3620
  8025  001DBE                     u3621:
  8026  001DBE  EFE9  F00E         	goto	l3990
  8027  001DC2                     u3620:
  8028  001DC2  500F               	movf	___fladd@bexp^0,w,c
  8029  001DC4  A4D8               	btfss	status,2,c
  8030  001DC6  EFE7  F00E         	goto	u3631
  8031  001DCA  EFE9  F00E         	goto	u3630
  8032  001DCE                     u3631:
  8033  001DCE  EFFB  F00E         	goto	l3994
  8034  001DD2                     u3630:
  8035  001DD2                     l3990:
  8036  001DD2  0E00               	movlw	0
  8037  001DD4  6E01               	movwf	___fladd@b^0,c
  8038  001DD6  0E00               	movlw	0
  8039  001DD8  6E02               	movwf	(___fladd@b+1)^0,c
  8040  001DDA  0E00               	movlw	0
  8041  001DDC  6E03               	movwf	(___fladd@b+2)^0,c
  8042  001DDE  0E00               	movlw	0
  8043  001DE0  6E04               	movwf	(___fladd@b+3)^0,c
  8044  001DE2  500F               	movf	___fladd@bexp^0,w,c
  8045  001DE4  A4D8               	btfss	status,2,c
  8046  001DE6  EFF7  F00E         	goto	u3641
  8047  001DEA  EFF9  F00E         	goto	u3640
  8048  001DEE                     u3641:
  8049  001DEE  EFFB  F00E         	goto	l3994
  8050  001DF2                     u3640:
  8051  001DF2  0E00               	movlw	0
  8052  001DF4  6E0D               	movwf	___fladd@signs^0,c
  8053  001DF6                     l3994:
  8054  001DF6  A00F               	btfss	___fladd@bexp^0,0,c
  8055  001DF8  EF00  F00F         	goto	u3651
  8056  001DFC  EF02  F00F         	goto	u3650
  8057  001E00                     u3651:
  8058  001E00  EF05  F00F         	goto	l3998
  8059  001E04                     u3650:
  8060  001E04  8E03               	bsf	(___fladd@b+2)^0,7,c
  8061  001E06  EF06  F00F         	goto	l4000
  8062  001E0A                     l3998:
  8063  001E0A  9E03               	bcf	(___fladd@b+2)^0,7,c
  8064  001E0C                     l4000:
  8065  001E0C  90D8               	bcf	status,0,c
  8066  001E0E  300F               	rrcf	___fladd@bexp^0,w,c
  8067  001E10  6E04               	movwf	(___fladd@b+3)^0,c
  8068  001E12  AE0D               	btfss	___fladd@signs^0,7,c
  8069  001E14  EF0E  F00F         	goto	u3661
  8070  001E18  EF10  F00F         	goto	u3660
  8071  001E1C                     u3661:
  8072  001E1C  EF11  F00F         	goto	l4006
  8073  001E20                     u3660:
  8074  001E20  8E04               	bsf	(___fladd@b+3)^0,7,c
  8075  001E22                     l4006:
  8076  001E22  C001  F001         	movff	___fladd@b,?___fladd
  8077  001E26  C002  F002         	movff	___fladd@b+1,?___fladd+1
  8078  001E2A  C003  F003         	movff	___fladd@b+2,?___fladd+2
  8079  001E2E  C004  F004         	movff	___fladd@b+3,?___fladd+3
  8080  001E32                     l1325:
  8081  001E32  0012               	return		;funcret
  8082  001E34                     __end_of___fladd:
  8083                           	callstack 0
  8084                           
  8085 ;; *************** function ___flneg *****************
  8086 ;; Defined at:
  8087 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\flneg.c"
  8088 ;; Parameters:    Size  Location     Type
  8089 ;;  f1              4    0[COMRAM] unsigned char 
  8090 ;; Auto vars:     Size  Location     Type
  8091 ;;		None
  8092 ;; Return value:  Size  Location     Type
  8093 ;;                  4    0[COMRAM] unsigned char 
  8094 ;; Registers used:
  8095 ;;		wreg, status,2, status,0
  8096 ;; Tracked objects:
  8097 ;;		On entry : 0/0
  8098 ;;		On exit  : 0/0
  8099 ;;		Unchanged: 0/0
  8100 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8101 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8102 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8103 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8104 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8105 ;;Total ram usage:        4 bytes
  8106 ;; Hardware stack levels used: 1
  8107 ;; Hardware stack levels required when called: 1
  8108 ;; This function calls:
  8109 ;;		Nothing
  8110 ;; This function is called by:
  8111 ;;		_roundf
  8112 ;; This function uses a non-reentrant model
  8113 ;;
  8114                           
  8115                           	psect	text38
  8116  005324                     __ptext38:
  8117                           	callstack 0
  8118  005324                     ___flneg:
  8119                           	callstack 25
  8120  005324  5001               	movf	___flneg@f1^0,w,c
  8121  005326  1002               	iorwf	(___flneg@f1+1)^0,w,c
  8122  005328  1003               	iorwf	(___flneg@f1+2)^0,w,c
  8123  00532A  1004               	iorwf	(___flneg@f1+3)^0,w,c
  8124  00532C  B4D8               	btfsc	status,2,c
  8125  00532E  EF9B  F029         	goto	u4081
  8126  005332  EF9D  F029         	goto	u4080
  8127  005336                     u4081:
  8128  005336  EFA5  F029         	goto	l4306
  8129  00533A                     u4080:
  8130  00533A  0E00               	movlw	0
  8131  00533C  1A01               	xorwf	___flneg@f1^0,f,c
  8132  00533E  0E00               	movlw	0
  8133  005340  1A02               	xorwf	(___flneg@f1+1)^0,f,c
  8134  005342  0E00               	movlw	0
  8135  005344  1A03               	xorwf	(___flneg@f1+2)^0,f,c
  8136  005346  0E80               	movlw	128
  8137  005348  1A04               	xorwf	(___flneg@f1+3)^0,f,c
  8138  00534A                     l4306:
  8139  00534A  C001  F001         	movff	___flneg@f1,?___flneg
  8140  00534E  C002  F002         	movff	___flneg@f1+1,?___flneg+1
  8141  005352  C003  F003         	movff	___flneg@f1+2,?___flneg+2
  8142  005356  C004  F004         	movff	___flneg@f1+3,?___flneg+3
  8143  00535A  0012               	return		;funcret
  8144  00535C                     __end_of___flneg:
  8145                           	callstack 0
  8146                           
  8147 ;; *************** function ___flmul *****************
  8148 ;; Defined at:
  8149 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\sprcmul.c"
  8150 ;; Parameters:    Size  Location     Type
  8151 ;;  b               4   39[COMRAM] unsigned char 
  8152 ;;  a               4   43[COMRAM] unsigned char 
  8153 ;; Auto vars:     Size  Location     Type
  8154 ;;  prod            4   58[COMRAM] struct .
  8155 ;;  grs             4   52[COMRAM] unsigned long 
  8156 ;;  temp            2   62[COMRAM] struct .
  8157 ;;  bexp            1   57[COMRAM] unsigned char 
  8158 ;;  aexp            1   56[COMRAM] unsigned char 
  8159 ;;  sign            1   51[COMRAM] unsigned char 
  8160 ;; Return value:  Size  Location     Type
  8161 ;;                  4   39[COMRAM] unsigned char 
  8162 ;; Registers used:
  8163 ;;		wreg, status,2, status,0, prodl, prodh
  8164 ;; Tracked objects:
  8165 ;;		On entry : 0/0
  8166 ;;		On exit  : 0/0
  8167 ;;		Unchanged: 0/0
  8168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8169 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8170 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8171 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8172 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8173 ;;Total ram usage:       25 bytes
  8174 ;; Hardware stack levels used: 1
  8175 ;; Hardware stack levels required when called: 1
  8176 ;; This function calls:
  8177 ;;		Nothing
  8178 ;; This function is called by:
  8179 ;;		_detect_color
  8180 ;;		_distance_measure
  8181 ;;		_roundf
  8182 ;;		_check_color_reading
  8183 ;; This function uses a non-reentrant model
  8184 ;;
  8185                           
  8186                           	psect	text39
  8187  001E34                     __ptext39:
  8188                           	callstack 0
  8189  001E34                     ___flmul:
  8190                           	callstack 25
  8191  001E34  502B               	movf	(___flmul@b+3)^0,w,c
  8192  001E36  0B80               	andlw	128
  8193  001E38  6E34               	movwf	___flmul@sign^0,c
  8194  001E3A  502B               	movf	(___flmul@b+3)^0,w,c
  8195  001E3C  242B               	addwf	(___flmul@b+3)^0,w,c
  8196  001E3E  6E3A               	movwf	___flmul@bexp^0,c
  8197  001E40  AE2A               	btfss	(___flmul@b+2)^0,7,c
  8198  001E42  EF25  F00F         	goto	u3841
  8199  001E46  EF27  F00F         	goto	u3840
  8200  001E4A                     u3841:
  8201  001E4A  EF28  F00F         	goto	l4150
  8202  001E4E                     u3840:
  8203  001E4E  803A               	bsf	___flmul@bexp^0,0,c
  8204  001E50                     l4150:
  8205  001E50  503A               	movf	___flmul@bexp^0,w,c
  8206  001E52  B4D8               	btfsc	status,2,c
  8207  001E54  EF2E  F00F         	goto	u3851
  8208  001E58  EF30  F00F         	goto	u3850
  8209  001E5C                     u3851:
  8210  001E5C  EF43  F00F         	goto	l4158
  8211  001E60                     u3850:
  8212  001E60  283A               	incf	___flmul@bexp^0,w,c
  8213  001E62  A4D8               	btfss	status,2,c
  8214  001E64  EF36  F00F         	goto	u3861
  8215  001E68  EF38  F00F         	goto	u3860
  8216  001E6C                     u3861:
  8217  001E6C  EF40  F00F         	goto	l4156
  8218  001E70                     u3860:
  8219  001E70  0E00               	movlw	0
  8220  001E72  6E28               	movwf	___flmul@b^0,c
  8221  001E74  0E00               	movlw	0
  8222  001E76  6E29               	movwf	(___flmul@b+1)^0,c
  8223  001E78  0E00               	movlw	0
  8224  001E7A  6E2A               	movwf	(___flmul@b+2)^0,c
  8225  001E7C  0E00               	movlw	0
  8226  001E7E  6E2B               	movwf	(___flmul@b+3)^0,c
  8227  001E80                     l4156:
  8228  001E80  8E2A               	bsf	(___flmul@b+2)^0,7,c
  8229  001E82  EF4B  F00F         	goto	l4160
  8230  001E86                     l4158:
  8231  001E86  0E00               	movlw	0
  8232  001E88  6E28               	movwf	___flmul@b^0,c
  8233  001E8A  0E00               	movlw	0
  8234  001E8C  6E29               	movwf	(___flmul@b+1)^0,c
  8235  001E8E  0E00               	movlw	0
  8236  001E90  6E2A               	movwf	(___flmul@b+2)^0,c
  8237  001E92  0E00               	movlw	0
  8238  001E94  6E2B               	movwf	(___flmul@b+3)^0,c
  8239  001E96                     l4160:
  8240  001E96  502F               	movf	(___flmul@a+3)^0,w,c
  8241  001E98  0B80               	andlw	128
  8242  001E9A  1A34               	xorwf	___flmul@sign^0,f,c
  8243  001E9C  502F               	movf	(___flmul@a+3)^0,w,c
  8244  001E9E  242F               	addwf	(___flmul@a+3)^0,w,c
  8245  001EA0  6E39               	movwf	___flmul@aexp^0,c
  8246  001EA2  AE2E               	btfss	(___flmul@a+2)^0,7,c
  8247  001EA4  EF56  F00F         	goto	u3871
  8248  001EA8  EF58  F00F         	goto	u3870
  8249  001EAC                     u3871:
  8250  001EAC  EF59  F00F         	goto	l4168
  8251  001EB0                     u3870:
  8252  001EB0  8039               	bsf	___flmul@aexp^0,0,c
  8253  001EB2                     l4168:
  8254  001EB2  5039               	movf	___flmul@aexp^0,w,c
  8255  001EB4  B4D8               	btfsc	status,2,c
  8256  001EB6  EF5F  F00F         	goto	u3881
  8257  001EBA  EF61  F00F         	goto	u3880
  8258  001EBE                     u3881:
  8259  001EBE  EF74  F00F         	goto	l4176
  8260  001EC2                     u3880:
  8261  001EC2  2839               	incf	___flmul@aexp^0,w,c
  8262  001EC4  A4D8               	btfss	status,2,c
  8263  001EC6  EF67  F00F         	goto	u3891
  8264  001ECA  EF69  F00F         	goto	u3890
  8265  001ECE                     u3891:
  8266  001ECE  EF71  F00F         	goto	l4174
  8267  001ED2                     u3890:
  8268  001ED2  0E00               	movlw	0
  8269  001ED4  6E2C               	movwf	___flmul@a^0,c
  8270  001ED6  0E00               	movlw	0
  8271  001ED8  6E2D               	movwf	(___flmul@a+1)^0,c
  8272  001EDA  0E00               	movlw	0
  8273  001EDC  6E2E               	movwf	(___flmul@a+2)^0,c
  8274  001EDE  0E00               	movlw	0
  8275  001EE0  6E2F               	movwf	(___flmul@a+3)^0,c
  8276  001EE2                     l4174:
  8277  001EE2  8E2E               	bsf	(___flmul@a+2)^0,7,c
  8278  001EE4  EF7C  F00F         	goto	l1402
  8279  001EE8                     l4176:
  8280  001EE8  0E00               	movlw	0
  8281  001EEA  6E2C               	movwf	___flmul@a^0,c
  8282  001EEC  0E00               	movlw	0
  8283  001EEE  6E2D               	movwf	(___flmul@a+1)^0,c
  8284  001EF0  0E00               	movlw	0
  8285  001EF2  6E2E               	movwf	(___flmul@a+2)^0,c
  8286  001EF4  0E00               	movlw	0
  8287  001EF6  6E2F               	movwf	(___flmul@a+3)^0,c
  8288  001EF8                     l1402:
  8289  001EF8  5039               	movf	___flmul@aexp^0,w,c
  8290  001EFA  B4D8               	btfsc	status,2,c
  8291  001EFC  EF82  F00F         	goto	u3901
  8292  001F00  EF84  F00F         	goto	u3900
  8293  001F04                     u3901:
  8294  001F04  EF8C  F00F         	goto	l4180
  8295  001F08                     u3900:
  8296  001F08  503A               	movf	___flmul@bexp^0,w,c
  8297  001F0A  A4D8               	btfss	status,2,c
  8298  001F0C  EF8A  F00F         	goto	u3911
  8299  001F10  EF8C  F00F         	goto	u3910
  8300  001F14                     u3911:
  8301  001F14  EF96  F00F         	goto	l4184
  8302  001F18                     u3910:
  8303  001F18                     l4180:
  8304  001F18  0E00               	movlw	0
  8305  001F1A  6E28               	movwf	?___flmul^0,c
  8306  001F1C  0E00               	movlw	0
  8307  001F1E  6E29               	movwf	(?___flmul+1)^0,c
  8308  001F20  0E00               	movlw	0
  8309  001F22  6E2A               	movwf	(?___flmul+2)^0,c
  8310  001F24  0E00               	movlw	0
  8311  001F26  6E2B               	movwf	(?___flmul+3)^0,c
  8312  001F28  EF2E  F011         	goto	l1406
  8313  001F2C                     l4184:
  8314  001F2C  502E               	movf	(___flmul@a+2)^0,w,c
  8315  001F2E  0228               	mulwf	___flmul@b^0,c
  8316  001F30  CFF3 F03F          	movff	prodl,___flmul@temp
  8317  001F34  CFF4 F040          	movff	prodh,___flmul@temp+1
  8318  001F38  503F               	movf	___flmul@temp^0,w,c
  8319  001F3A  6E35               	movwf	___flmul@grs^0,c
  8320  001F3C  6A36               	clrf	(___flmul@grs+1)^0,c
  8321  001F3E  6A37               	clrf	(___flmul@grs+2)^0,c
  8322  001F40  6A38               	clrf	(___flmul@grs+3)^0,c
  8323  001F42  5040               	movf	(___flmul@temp+1)^0,w,c
  8324  001F44  6E3B               	movwf	___flmul@prod^0,c
  8325  001F46  6A3C               	clrf	(___flmul@prod+1)^0,c
  8326  001F48  6A3D               	clrf	(___flmul@prod+2)^0,c
  8327  001F4A  6A3E               	clrf	(___flmul@prod+3)^0,c
  8328  001F4C  502D               	movf	(___flmul@a+1)^0,w,c
  8329  001F4E  0229               	mulwf	(___flmul@b+1)^0,c
  8330  001F50  CFF3 F03F          	movff	prodl,___flmul@temp
  8331  001F54  CFF4 F040          	movff	prodh,___flmul@temp+1
  8332  001F58  503F               	movf	___flmul@temp^0,w,c
  8333  001F5A  2635               	addwf	___flmul@grs^0,f,c
  8334  001F5C  0E00               	movlw	0
  8335  001F5E  2236               	addwfc	(___flmul@grs+1)^0,f,c
  8336  001F60  2237               	addwfc	(___flmul@grs+2)^0,f,c
  8337  001F62  2238               	addwfc	(___flmul@grs+3)^0,f,c
  8338  001F64  5040               	movf	(___flmul@temp+1)^0,w,c
  8339  001F66  263B               	addwf	___flmul@prod^0,f,c
  8340  001F68  0E00               	movlw	0
  8341  001F6A  223C               	addwfc	(___flmul@prod+1)^0,f,c
  8342  001F6C  223D               	addwfc	(___flmul@prod+2)^0,f,c
  8343  001F6E  223E               	addwfc	(___flmul@prod+3)^0,f,c
  8344  001F70  502C               	movf	___flmul@a^0,w,c
  8345  001F72  022A               	mulwf	(___flmul@b+2)^0,c
  8346  001F74  CFF3 F03F          	movff	prodl,___flmul@temp
  8347  001F78  CFF4 F040          	movff	prodh,___flmul@temp+1
  8348  001F7C  503F               	movf	___flmul@temp^0,w,c
  8349  001F7E  2635               	addwf	___flmul@grs^0,f,c
  8350  001F80  0E00               	movlw	0
  8351  001F82  2236               	addwfc	(___flmul@grs+1)^0,f,c
  8352  001F84  2237               	addwfc	(___flmul@grs+2)^0,f,c
  8353  001F86  2238               	addwfc	(___flmul@grs+3)^0,f,c
  8354  001F88  5040               	movf	(___flmul@temp+1)^0,w,c
  8355  001F8A  263B               	addwf	___flmul@prod^0,f,c
  8356  001F8C  0E00               	movlw	0
  8357  001F8E  223C               	addwfc	(___flmul@prod+1)^0,f,c
  8358  001F90  223D               	addwfc	(___flmul@prod+2)^0,f,c
  8359  001F92  223E               	addwfc	(___flmul@prod+3)^0,f,c
  8360  001F94  C037  F038         	movff	___flmul@grs+2,___flmul@grs+3
  8361  001F98  C036  F037         	movff	___flmul@grs+1,___flmul@grs+2
  8362  001F9C  C035  F036         	movff	___flmul@grs,___flmul@grs+1
  8363  001FA0  6A35               	clrf	___flmul@grs^0,c
  8364  001FA2  502C               	movf	___flmul@a^0,w,c
  8365  001FA4  0229               	mulwf	(___flmul@b+1)^0,c
  8366  001FA6  CFF3 F03F          	movff	prodl,___flmul@temp
  8367  001FAA  CFF4 F040          	movff	prodh,___flmul@temp+1
  8368  001FAE  503F               	movf	___flmul@temp^0,w,c
  8369  001FB0  2635               	addwf	___flmul@grs^0,f,c
  8370  001FB2  5040               	movf	(___flmul@temp+1)^0,w,c
  8371  001FB4  2236               	addwfc	(___flmul@grs+1)^0,f,c
  8372  001FB6  0E00               	movlw	0
  8373  001FB8  2237               	addwfc	(___flmul@grs+2)^0,f,c
  8374  001FBA  0E00               	movlw	0
  8375  001FBC  2238               	addwfc	(___flmul@grs+3)^0,f,c
  8376  001FBE  502D               	movf	(___flmul@a+1)^0,w,c
  8377  001FC0  0228               	mulwf	___flmul@b^0,c
  8378  001FC2  CFF3 F03F          	movff	prodl,___flmul@temp
  8379  001FC6  CFF4 F040          	movff	prodh,___flmul@temp+1
  8380  001FCA  503F               	movf	___flmul@temp^0,w,c
  8381  001FCC  2635               	addwf	___flmul@grs^0,f,c
  8382  001FCE  5040               	movf	(___flmul@temp+1)^0,w,c
  8383  001FD0  2236               	addwfc	(___flmul@grs+1)^0,f,c
  8384  001FD2  0E00               	movlw	0
  8385  001FD4  2237               	addwfc	(___flmul@grs+2)^0,f,c
  8386  001FD6  0E00               	movlw	0
  8387  001FD8  2238               	addwfc	(___flmul@grs+3)^0,f,c
  8388  001FDA  C037  F038         	movff	___flmul@grs+2,___flmul@grs+3
  8389  001FDE  C036  F037         	movff	___flmul@grs+1,___flmul@grs+2
  8390  001FE2  C035  F036         	movff	___flmul@grs,___flmul@grs+1
  8391  001FE6  6A35               	clrf	___flmul@grs^0,c
  8392  001FE8  502C               	movf	___flmul@a^0,w,c
  8393  001FEA  0228               	mulwf	___flmul@b^0,c
  8394  001FEC  CFF3 F03F          	movff	prodl,___flmul@temp
  8395  001FF0  CFF4 F040          	movff	prodh,___flmul@temp+1
  8396  001FF4  503F               	movf	___flmul@temp^0,w,c
  8397  001FF6  2635               	addwf	___flmul@grs^0,f,c
  8398  001FF8  5040               	movf	(___flmul@temp+1)^0,w,c
  8399  001FFA  2236               	addwfc	(___flmul@grs+1)^0,f,c
  8400  001FFC  0E00               	movlw	0
  8401  001FFE  2237               	addwfc	(___flmul@grs+2)^0,f,c
  8402  002000  0E00               	movlw	0
  8403  002002  2238               	addwfc	(___flmul@grs+3)^0,f,c
  8404  002004  502E               	movf	(___flmul@a+2)^0,w,c
  8405  002006  0229               	mulwf	(___flmul@b+1)^0,c
  8406  002008  CFF3 F03F          	movff	prodl,___flmul@temp
  8407  00200C  CFF4 F040          	movff	prodh,___flmul@temp+1
  8408  002010  503F               	movf	___flmul@temp^0,w,c
  8409  002012  263B               	addwf	___flmul@prod^0,f,c
  8410  002014  5040               	movf	(___flmul@temp+1)^0,w,c
  8411  002016  223C               	addwfc	(___flmul@prod+1)^0,f,c
  8412  002018  0E00               	movlw	0
  8413  00201A  223D               	addwfc	(___flmul@prod+2)^0,f,c
  8414  00201C  0E00               	movlw	0
  8415  00201E  223E               	addwfc	(___flmul@prod+3)^0,f,c
  8416  002020  502D               	movf	(___flmul@a+1)^0,w,c
  8417  002022  022A               	mulwf	(___flmul@b+2)^0,c
  8418  002024  CFF3 F03F          	movff	prodl,___flmul@temp
  8419  002028  CFF4 F040          	movff	prodh,___flmul@temp+1
  8420  00202C  503F               	movf	___flmul@temp^0,w,c
  8421  00202E  263B               	addwf	___flmul@prod^0,f,c
  8422  002030  5040               	movf	(___flmul@temp+1)^0,w,c
  8423  002032  223C               	addwfc	(___flmul@prod+1)^0,f,c
  8424  002034  0E00               	movlw	0
  8425  002036  223D               	addwfc	(___flmul@prod+2)^0,f,c
  8426  002038  0E00               	movlw	0
  8427  00203A  223E               	addwfc	(___flmul@prod+3)^0,f,c
  8428  00203C  502E               	movf	(___flmul@a+2)^0,w,c
  8429  00203E  022A               	mulwf	(___flmul@b+2)^0,c
  8430  002040  CFF3 F03F          	movff	prodl,___flmul@temp
  8431  002044  CFF4 F040          	movff	prodh,___flmul@temp+1
  8432  002048  503F               	movf	___flmul@temp^0,w,c
  8433  00204A  6E30               	movwf	??___flmul^0,c
  8434  00204C  5040               	movf	(___flmul@temp+1)^0,w,c
  8435  00204E  6E31               	movwf	(??___flmul+1)^0,c
  8436  002050  6A32               	clrf	(??___flmul+2)^0,c
  8437  002052  6A33               	clrf	(??___flmul+3)^0,c
  8438  002054  C032  F033         	movff	??___flmul+2,??___flmul+3
  8439  002058  C031  F032         	movff	??___flmul+1,??___flmul+2
  8440  00205C  C030  F031         	movff	??___flmul,??___flmul+1
  8441  002060  6A30               	clrf	??___flmul^0,c
  8442  002062  5030               	movf	??___flmul^0,w,c
  8443  002064  263B               	addwf	___flmul@prod^0,f,c
  8444  002066  5031               	movf	(??___flmul+1)^0,w,c
  8445  002068  223C               	addwfc	(___flmul@prod+1)^0,f,c
  8446  00206A  5032               	movf	(??___flmul+2)^0,w,c
  8447  00206C  223D               	addwfc	(___flmul@prod+2)^0,f,c
  8448  00206E  5033               	movf	(??___flmul+3)^0,w,c
  8449  002070  223E               	addwfc	(___flmul@prod+3)^0,f,c
  8450  002072  C035  F030         	movff	___flmul@grs,??___flmul
  8451  002076  C036  F031         	movff	___flmul@grs+1,??___flmul+1
  8452  00207A  C037  F032         	movff	___flmul@grs+2,??___flmul+2
  8453  00207E  C038  F033         	movff	___flmul@grs+3,??___flmul+3
  8454  002082  0E19               	movlw	25
  8455  002084  EF49  F010         	goto	u3920
  8456  002088                     u3925:
  8457  002088  90D8               	bcf	status,0,c
  8458  00208A  3233               	rrcf	(??___flmul+3)^0,f,c
  8459  00208C  3232               	rrcf	(??___flmul+2)^0,f,c
  8460  00208E  3231               	rrcf	(??___flmul+1)^0,f,c
  8461  002090  3230               	rrcf	??___flmul^0,f,c
  8462  002092                     u3920:
  8463  002092  2EE8               	decfsz	wreg,f,c
  8464  002094  EF44  F010         	goto	u3925
  8465  002098  5030               	movf	??___flmul^0,w,c
  8466  00209A  263B               	addwf	___flmul@prod^0,f,c
  8467  00209C  5031               	movf	(??___flmul+1)^0,w,c
  8468  00209E  223C               	addwfc	(___flmul@prod+1)^0,f,c
  8469  0020A0  5032               	movf	(??___flmul+2)^0,w,c
  8470  0020A2  223D               	addwfc	(___flmul@prod+2)^0,f,c
  8471  0020A4  5033               	movf	(??___flmul+3)^0,w,c
  8472  0020A6  223E               	addwfc	(___flmul@prod+3)^0,f,c
  8473  0020A8  C037  F038         	movff	___flmul@grs+2,___flmul@grs+3
  8474  0020AC  C036  F037         	movff	___flmul@grs+1,___flmul@grs+2
  8475  0020B0  C035  F036         	movff	___flmul@grs,___flmul@grs+1
  8476  0020B4  6A35               	clrf	___flmul@grs^0,c
  8477  0020B6  5039               	movf	___flmul@aexp^0,w,c
  8478  0020B8  C03A  F030         	movff	___flmul@bexp,??___flmul
  8479  0020BC  6A31               	clrf	(??___flmul+1)^0,c
  8480  0020BE  2630               	addwf	??___flmul^0,f,c
  8481  0020C0  0E00               	movlw	0
  8482  0020C2  2231               	addwfc	(??___flmul+1)^0,f,c
  8483  0020C4  0E82               	movlw	130
  8484  0020C6  2430               	addwf	??___flmul^0,w,c
  8485  0020C8  6E3F               	movwf	___flmul@temp^0,c
  8486  0020CA  0EFF               	movlw	255
  8487  0020CC  2031               	addwfc	(??___flmul+1)^0,w,c
  8488  0020CE  6E40               	movwf	(___flmul@temp+1)^0,c
  8489  0020D0  EF7F  F010         	goto	l4232
  8490  0020D4                     l4226:
  8491  0020D4  90D8               	bcf	status,0,c
  8492  0020D6  363B               	rlcf	___flmul@prod^0,f,c
  8493  0020D8  363C               	rlcf	(___flmul@prod+1)^0,f,c
  8494  0020DA  363D               	rlcf	(___flmul@prod+2)^0,f,c
  8495  0020DC  363E               	rlcf	(___flmul@prod+3)^0,f,c
  8496  0020DE  AE38               	btfss	(___flmul@grs+3)^0,7,c
  8497  0020E0  EF74  F010         	goto	u3931
  8498  0020E4  EF76  F010         	goto	u3930
  8499  0020E8                     u3931:
  8500  0020E8  EF77  F010         	goto	l1409
  8501  0020EC                     u3930:
  8502  0020EC  803B               	bsf	___flmul@prod^0,0,c
  8503  0020EE                     l1409:
  8504  0020EE  90D8               	bcf	status,0,c
  8505  0020F0  3635               	rlcf	___flmul@grs^0,f,c
  8506  0020F2  3636               	rlcf	(___flmul@grs+1)^0,f,c
  8507  0020F4  3637               	rlcf	(___flmul@grs+2)^0,f,c
  8508  0020F6  3638               	rlcf	(___flmul@grs+3)^0,f,c
  8509  0020F8  063F               	decf	___flmul@temp^0,f,c
  8510  0020FA  A0D8               	btfss	status,0,c
  8511  0020FC  0640               	decf	(___flmul@temp+1)^0,f,c
  8512  0020FE                     l4232:
  8513  0020FE  AE3D               	btfss	(___flmul@prod+2)^0,7,c
  8514  002100  EF84  F010         	goto	u3941
  8515  002104  EF86  F010         	goto	u3940
  8516  002108                     u3941:
  8517  002108  EF6A  F010         	goto	l4226
  8518  00210C                     u3940:
  8519  00210C  0E00               	movlw	0
  8520  00210E  6E39               	movwf	___flmul@aexp^0,c
  8521  002110  AE38               	btfss	(___flmul@grs+3)^0,7,c
  8522  002112  EF8D  F010         	goto	u3951
  8523  002116  EF8F  F010         	goto	u3950
  8524  00211A                     u3951:
  8525  00211A  EFB3  F010         	goto	l1411
  8526  00211E                     u3950:
  8527  00211E  0EFF               	movlw	255
  8528  002120  1435               	andwf	___flmul@grs^0,w,c
  8529  002122  6E30               	movwf	??___flmul^0,c
  8530  002124  0EFF               	movlw	255
  8531  002126  1436               	andwf	(___flmul@grs+1)^0,w,c
  8532  002128  6E31               	movwf	(??___flmul+1)^0,c
  8533  00212A  0EFF               	movlw	255
  8534  00212C  1437               	andwf	(___flmul@grs+2)^0,w,c
  8535  00212E  6E32               	movwf	(??___flmul+2)^0,c
  8536  002130  0E7F               	movlw	127
  8537  002132  1438               	andwf	(___flmul@grs+3)^0,w,c
  8538  002134  6E33               	movwf	(??___flmul+3)^0,c
  8539  002136  5030               	movf	??___flmul^0,w,c
  8540  002138  1031               	iorwf	(??___flmul+1)^0,w,c
  8541  00213A  1032               	iorwf	(??___flmul+2)^0,w,c
  8542  00213C  1033               	iorwf	(??___flmul+3)^0,w,c
  8543  00213E  B4D8               	btfsc	status,2,c
  8544  002140  EFA4  F010         	goto	u3961
  8545  002144  EFA6  F010         	goto	u3960
  8546  002148                     u3961:
  8547  002148  EFAA  F010         	goto	l1412
  8548  00214C                     u3960:
  8549  00214C                     l4240:
  8550  00214C  0E01               	movlw	1
  8551  00214E  6E39               	movwf	___flmul@aexp^0,c
  8552  002150  EFB3  F010         	goto	l1411
  8553  002154                     l1412:
  8554  002154  A03B               	btfss	___flmul@prod^0,0,c
  8555  002156  EFAF  F010         	goto	u3971
  8556  00215A  EFB1  F010         	goto	u3970
  8557  00215E                     u3971:
  8558  00215E  EFB3  F010         	goto	l1411
  8559  002162                     u3970:
  8560  002162  EFA6  F010         	goto	l4240
  8561  002166                     l1411:
  8562  002166  5039               	movf	___flmul@aexp^0,w,c
  8563  002168  B4D8               	btfsc	status,2,c
  8564  00216A  EFB9  F010         	goto	u3981
  8565  00216E  EFBB  F010         	goto	u3980
  8566  002172                     u3981:
  8567  002172  EFDF  F010         	goto	l4252
  8568  002176                     u3980:
  8569  002176  0E01               	movlw	1
  8570  002178  263B               	addwf	___flmul@prod^0,f,c
  8571  00217A  0E00               	movlw	0
  8572  00217C  223C               	addwfc	(___flmul@prod+1)^0,f,c
  8573  00217E  223D               	addwfc	(___flmul@prod+2)^0,f,c
  8574  002180  223E               	addwfc	(___flmul@prod+3)^0,f,c
  8575  002182  A03E               	btfss	(___flmul@prod+3)^0,0,c
  8576  002184  EFC6  F010         	goto	u3991
  8577  002188  EFC8  F010         	goto	u3990
  8578  00218C                     u3991:
  8579  00218C  EFDF  F010         	goto	l4252
  8580  002190                     u3990:
  8581  002190  C03B  F030         	movff	___flmul@prod,??___flmul
  8582  002194  C03C  F031         	movff	___flmul@prod+1,??___flmul+1
  8583  002198  C03D  F032         	movff	___flmul@prod+2,??___flmul+2
  8584  00219C  C03E  F033         	movff	___flmul@prod+3,??___flmul+3
  8585  0021A0  3433               	rlcf	(??___flmul+3)^0,w,c
  8586  0021A2  3233               	rrcf	(??___flmul+3)^0,f,c
  8587  0021A4  3232               	rrcf	(??___flmul+2)^0,f,c
  8588  0021A6  3231               	rrcf	(??___flmul+1)^0,f,c
  8589  0021A8  3230               	rrcf	??___flmul^0,f,c
  8590  0021AA  C030  F03B         	movff	??___flmul,___flmul@prod
  8591  0021AE  C031  F03C         	movff	??___flmul+1,___flmul@prod+1
  8592  0021B2  C032  F03D         	movff	??___flmul+2,___flmul@prod+2
  8593  0021B6  C033  F03E         	movff	??___flmul+3,___flmul@prod+3
  8594  0021BA  4A3F               	infsnz	___flmul@temp^0,f,c
  8595  0021BC  2A40               	incf	(___flmul@temp+1)^0,f,c
  8596  0021BE                     l4252:
  8597  0021BE  BE40               	btfsc	(___flmul@temp+1)^0,7,c
  8598  0021C0  EFEA  F010         	goto	u4001
  8599  0021C4  5040               	movf	(___flmul@temp+1)^0,w,c
  8600  0021C6  E108               	bnz	u4000
  8601  0021C8  283F               	incf	___flmul@temp^0,w,c
  8602  0021CA  A0D8               	btfss	status,0,c
  8603  0021CC  EFEA  F010         	goto	u4001
  8604  0021D0  EFEC  F010         	goto	u4000
  8605  0021D4                     u4001:
  8606  0021D4  EFF6  F010         	goto	l4256
  8607  0021D8                     u4000:
  8608  0021D8  0E00               	movlw	0
  8609  0021DA  6E3B               	movwf	___flmul@prod^0,c
  8610  0021DC  0E00               	movlw	0
  8611  0021DE  6E3C               	movwf	(___flmul@prod+1)^0,c
  8612  0021E0  0E80               	movlw	128
  8613  0021E2  6E3D               	movwf	(___flmul@prod+2)^0,c
  8614  0021E4  0E7F               	movlw	127
  8615  0021E6  6E3E               	movwf	(___flmul@prod+3)^0,c
  8616  0021E8  EF24  F011         	goto	l4268
  8617  0021EC                     l4256:
  8618  0021EC  BE40               	btfsc	(___flmul@temp+1)^0,7,c
  8619  0021EE  EF03  F011         	goto	u4010
  8620  0021F2  5040               	movf	(___flmul@temp+1)^0,w,c
  8621  0021F4  E106               	bnz	u4011
  8622  0021F6  043F               	decf	___flmul@temp^0,w,c
  8623  0021F8  B0D8               	btfsc	status,0,c
  8624  0021FA  EF01  F011         	goto	u4011
  8625  0021FE  EF03  F011         	goto	u4010
  8626  002202                     u4011:
  8627  002202  EF0F  F011         	goto	l1419
  8628  002206                     u4010:
  8629  002206  0E00               	movlw	0
  8630  002208  6E3B               	movwf	___flmul@prod^0,c
  8631  00220A  0E00               	movlw	0
  8632  00220C  6E3C               	movwf	(___flmul@prod+1)^0,c
  8633  00220E  0E00               	movlw	0
  8634  002210  6E3D               	movwf	(___flmul@prod+2)^0,c
  8635  002212  0E00               	movlw	0
  8636  002214  6E3E               	movwf	(___flmul@prod+3)^0,c
  8637  002216  0E00               	movlw	0
  8638  002218  6E34               	movwf	___flmul@sign^0,c
  8639  00221A  EF24  F011         	goto	l4268
  8640  00221E                     l1419:
  8641  00221E  C03F  F03A         	movff	___flmul@temp,___flmul@bexp
  8642  002222  0EFF               	movlw	255
  8643  002224  163B               	andwf	___flmul@prod^0,f,c
  8644  002226  0EFF               	movlw	255
  8645  002228  163C               	andwf	(___flmul@prod+1)^0,f,c
  8646  00222A  0E7F               	movlw	127
  8647  00222C  163D               	andwf	(___flmul@prod+2)^0,f,c
  8648  00222E  0E00               	movlw	0
  8649  002230  163E               	andwf	(___flmul@prod+3)^0,f,c
  8650  002232  A03A               	btfss	___flmul@bexp^0,0,c
  8651  002234  EF1E  F011         	goto	u4021
  8652  002238  EF20  F011         	goto	u4020
  8653  00223C                     u4021:
  8654  00223C  EF21  F011         	goto	l4266
  8655  002240                     u4020:
  8656  002240  8E3D               	bsf	(___flmul@prod+2)^0,7,c
  8657  002242                     l4266:
  8658  002242  90D8               	bcf	status,0,c
  8659  002244  303A               	rrcf	___flmul@bexp^0,w,c
  8660  002246  6E3E               	movwf	(___flmul@prod+3)^0,c
  8661  002248                     l4268:
  8662  002248  5034               	movf	___flmul@sign^0,w,c
  8663  00224A  123E               	iorwf	(___flmul@prod+3)^0,f,c
  8664  00224C  C03B  F028         	movff	___flmul@prod,?___flmul
  8665  002250  C03C  F029         	movff	___flmul@prod+1,?___flmul+1
  8666  002254  C03D  F02A         	movff	___flmul@prod+2,?___flmul+2
  8667  002258  C03E  F02B         	movff	___flmul@prod+3,?___flmul+3
  8668  00225C                     l1406:
  8669  00225C  0012               	return		;funcret
  8670  00225E                     __end_of___flmul:
  8671                           	callstack 0
  8672                           
  8673 ;; *************** function ___flge *****************
  8674 ;; Defined at:
  8675 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\flge.c"
  8676 ;; Parameters:    Size  Location     Type
  8677 ;;  ff1             4    0[COMRAM] unsigned char 
  8678 ;;  ff2             4    4[COMRAM] unsigned char 
  8679 ;; Auto vars:     Size  Location     Type
  8680 ;;		None
  8681 ;; Return value:  Size  Location     Type
  8682 ;;		None               void
  8683 ;; Registers used:
  8684 ;;		wreg, status,2, status,0
  8685 ;; Tracked objects:
  8686 ;;		On entry : 0/0
  8687 ;;		On exit  : 0/0
  8688 ;;		Unchanged: 0/0
  8689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8690 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8691 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8692 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8693 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8694 ;;Total ram usage:       12 bytes
  8695 ;; Hardware stack levels used: 1
  8696 ;; Hardware stack levels required when called: 1
  8697 ;; This function calls:
  8698 ;;		Nothing
  8699 ;; This function is called by:
  8700 ;;		_roundf
  8701 ;; This function uses a non-reentrant model
  8702 ;;
  8703                           
  8704                           	psect	text40
  8705  004616                     __ptext40:
  8706                           	callstack 0
  8707  004616                     ___flge:
  8708                           	callstack 25
  8709  004616  0E00               	movlw	0
  8710  004618  1401               	andwf	___flge@ff1^0,w,c
  8711  00461A  6E09               	movwf	??___flge^0,c
  8712  00461C  0E00               	movlw	0
  8713  00461E  1402               	andwf	(___flge@ff1+1)^0,w,c
  8714  004620  6E0A               	movwf	(??___flge+1)^0,c
  8715  004622  0E80               	movlw	128
  8716  004624  1403               	andwf	(___flge@ff1+2)^0,w,c
  8717  004626  6E0B               	movwf	(??___flge+2)^0,c
  8718  004628  0E7F               	movlw	127
  8719  00462A  1404               	andwf	(___flge@ff1+3)^0,w,c
  8720  00462C  6E0C               	movwf	(??___flge+3)^0,c
  8721  00462E  5009               	movf	??___flge^0,w,c
  8722  004630  100A               	iorwf	(??___flge+1)^0,w,c
  8723  004632  100B               	iorwf	(??___flge+2)^0,w,c
  8724  004634  100C               	iorwf	(??___flge+3)^0,w,c
  8725  004636  A4D8               	btfss	status,2,c
  8726  004638  EF20  F023         	goto	u4031
  8727  00463C  EF22  F023         	goto	u4030
  8728  004640                     u4031:
  8729  004640  EF2A  F023         	goto	l4284
  8730  004644                     u4030:
  8731  004644  0E00               	movlw	0
  8732  004646  6E01               	movwf	___flge@ff1^0,c
  8733  004648  0E00               	movlw	0
  8734  00464A  6E02               	movwf	(___flge@ff1+1)^0,c
  8735  00464C  0E00               	movlw	0
  8736  00464E  6E03               	movwf	(___flge@ff1+2)^0,c
  8737  004650  0E00               	movlw	0
  8738  004652  6E04               	movwf	(___flge@ff1+3)^0,c
  8739  004654                     l4284:
  8740  004654  0E00               	movlw	0
  8741  004656  1405               	andwf	___flge@ff2^0,w,c
  8742  004658  6E09               	movwf	??___flge^0,c
  8743  00465A  0E00               	movlw	0
  8744  00465C  1406               	andwf	(___flge@ff2+1)^0,w,c
  8745  00465E  6E0A               	movwf	(??___flge+1)^0,c
  8746  004660  0E80               	movlw	128
  8747  004662  1407               	andwf	(___flge@ff2+2)^0,w,c
  8748  004664  6E0B               	movwf	(??___flge+2)^0,c
  8749  004666  0E7F               	movlw	127
  8750  004668  1408               	andwf	(___flge@ff2+3)^0,w,c
  8751  00466A  6E0C               	movwf	(??___flge+3)^0,c
  8752  00466C  5009               	movf	??___flge^0,w,c
  8753  00466E  100A               	iorwf	(??___flge+1)^0,w,c
  8754  004670  100B               	iorwf	(??___flge+2)^0,w,c
  8755  004672  100C               	iorwf	(??___flge+3)^0,w,c
  8756  004674  A4D8               	btfss	status,2,c
  8757  004676  EF3F  F023         	goto	u4041
  8758  00467A  EF41  F023         	goto	u4040
  8759  00467E                     u4041:
  8760  00467E  EF49  F023         	goto	l4288
  8761  004682                     u4040:
  8762  004682  0E00               	movlw	0
  8763  004684  6E05               	movwf	___flge@ff2^0,c
  8764  004686  0E00               	movlw	0
  8765  004688  6E06               	movwf	(___flge@ff2+1)^0,c
  8766  00468A  0E00               	movlw	0
  8767  00468C  6E07               	movwf	(___flge@ff2+2)^0,c
  8768  00468E  0E00               	movlw	0
  8769  004690  6E08               	movwf	(___flge@ff2+3)^0,c
  8770  004692                     l4288:
  8771  004692  AE04               	btfss	(___flge@ff1+3)^0,7,c
  8772  004694  EF4E  F023         	goto	u4051
  8773  004698  EF50  F023         	goto	u4050
  8774  00469C                     u4051:
  8775  00469C  EF59  F023         	goto	l4292
  8776  0046A0                     u4050:
  8777  0046A0  6C01               	negf	___flge@ff1^0,c
  8778  0046A2  1E02               	comf	(___flge@ff1+1)^0,f,c
  8779  0046A4  B0D8               	btfsc	status,0,c
  8780  0046A6  2A02               	incf	(___flge@ff1+1)^0,f,c
  8781  0046A8  1E03               	comf	(___flge@ff1+2)^0,f,c
  8782  0046AA  B0D8               	btfsc	status,0,c
  8783  0046AC  2A03               	incf	(___flge@ff1+2)^0,f,c
  8784  0046AE  0E80               	movlw	128
  8785  0046B0  5604               	subfwb	(___flge@ff1+3)^0,f,c
  8786  0046B2                     l4292:
  8787  0046B2  AE08               	btfss	(___flge@ff2+3)^0,7,c
  8788  0046B4  EF5E  F023         	goto	u4061
  8789  0046B8  EF60  F023         	goto	u4060
  8790  0046BC                     u4061:
  8791  0046BC  EF69  F023         	goto	l1053
  8792  0046C0                     u4060:
  8793  0046C0  6C05               	negf	___flge@ff2^0,c
  8794  0046C2  1E06               	comf	(___flge@ff2+1)^0,f,c
  8795  0046C4  B0D8               	btfsc	status,0,c
  8796  0046C6  2A06               	incf	(___flge@ff2+1)^0,f,c
  8797  0046C8  1E07               	comf	(___flge@ff2+2)^0,f,c
  8798  0046CA  B0D8               	btfsc	status,0,c
  8799  0046CC  2A07               	incf	(___flge@ff2+2)^0,f,c
  8800  0046CE  0E80               	movlw	128
  8801  0046D0  5608               	subfwb	(___flge@ff2+3)^0,f,c
  8802  0046D2                     l1053:
  8803  0046D2  0E00               	movlw	0
  8804  0046D4  1A01               	xorwf	___flge@ff1^0,f,c
  8805  0046D6  0E00               	movlw	0
  8806  0046D8  1A02               	xorwf	(___flge@ff1+1)^0,f,c
  8807  0046DA  0E00               	movlw	0
  8808  0046DC  1A03               	xorwf	(___flge@ff1+2)^0,f,c
  8809  0046DE  0E80               	movlw	128
  8810  0046E0  1A04               	xorwf	(___flge@ff1+3)^0,f,c
  8811  0046E2  0E00               	movlw	0
  8812  0046E4  1A05               	xorwf	___flge@ff2^0,f,c
  8813  0046E6  0E00               	movlw	0
  8814  0046E8  1A06               	xorwf	(___flge@ff2+1)^0,f,c
  8815  0046EA  0E00               	movlw	0
  8816  0046EC  1A07               	xorwf	(___flge@ff2+2)^0,f,c
  8817  0046EE  0E80               	movlw	128
  8818  0046F0  1A08               	xorwf	(___flge@ff2+3)^0,f,c
  8819  0046F2  5005               	movf	___flge@ff2^0,w,c
  8820  0046F4  5C01               	subwf	___flge@ff1^0,w,c
  8821  0046F6  5006               	movf	(___flge@ff2+1)^0,w,c
  8822  0046F8  5802               	subwfb	(___flge@ff1+1)^0,w,c
  8823  0046FA  5007               	movf	(___flge@ff2+2)^0,w,c
  8824  0046FC  5803               	subwfb	(___flge@ff1+2)^0,w,c
  8825  0046FE  5008               	movf	(___flge@ff2+3)^0,w,c
  8826  004700  5804               	subwfb	(___flge@ff1+3)^0,w,c
  8827  004702  B0D8               	btfsc	status,0,c
  8828  004704  EF86  F023         	goto	u4071
  8829  004708  EF88  F023         	goto	u4070
  8830  00470C                     u4071:
  8831  00470C  EF8B  F023         	goto	l4298
  8832  004710                     u4070:
  8833  004710  90D8               	bcf	status,0,c
  8834  004712  EF8C  F023         	goto	l1058
  8835  004716                     l4298:
  8836  004716  80D8               	bsf	status,0,c
  8837  004718                     l1058:
  8838  004718  0012               	return		;funcret
  8839  00471A                     __end_of___flge:
  8840                           	callstack 0
  8841                           
  8842 ;; *************** function ___fltol *****************
  8843 ;; Defined at:
  8844 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\fltol.c"
  8845 ;; Parameters:    Size  Location     Type
  8846 ;;  f1              4   90[COMRAM] unsigned char 
  8847 ;; Auto vars:     Size  Location     Type
  8848 ;;  exp1            1    5[BANK0 ] unsigned char 
  8849 ;;  sign1           1    4[BANK0 ] unsigned char 
  8850 ;; Return value:  Size  Location     Type
  8851 ;;                  4   90[COMRAM] long 
  8852 ;; Registers used:
  8853 ;;		wreg, status,2, status,0
  8854 ;; Tracked objects:
  8855 ;;		On entry : 0/0
  8856 ;;		On exit  : 0/0
  8857 ;;		Unchanged: 0/0
  8858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8859 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8860 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8861 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8862 ;;      Totals:         4       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8863 ;;Total ram usage:       10 bytes
  8864 ;; Hardware stack levels used: 1
  8865 ;; Hardware stack levels required when called: 1
  8866 ;; This function calls:
  8867 ;;		Nothing
  8868 ;; This function is called by:
  8869 ;;		_lroundf
  8870 ;; This function uses a non-reentrant model
  8871 ;;
  8872                           
  8873                           	psect	text41
  8874  00450E                     __ptext41:
  8875                           	callstack 0
  8876  00450E                     ___fltol:
  8877                           	callstack 26
  8878  00450E  345D               	rlcf	(___fltol@f1+2)^0,w,c
  8879  004510  345E               	rlcf	(___fltol@f1+3)^0,w,c
  8880  004512  0100               	movlb	0	; () banked
  8881  004514  6F65               	movwf	___fltol@exp1& (0+255),b
  8882  004516  5165               	movf	___fltol@exp1& (0+255),w,b
  8883  004518  A4D8               	btfss	status,2,c
  8884  00451A  EF91  F022         	goto	u4151
  8885  00451E  EF93  F022         	goto	u4150
  8886  004522                     u4151:
  8887  004522  EF9D  F022         	goto	l4390
  8888  004526                     u4150:
  8889  004526                     l4386:
  8890                           
  8891                           ; BSR set to: 0
  8892  004526  0E00               	movlw	0
  8893  004528  6E5B               	movwf	?___fltol^0,c
  8894  00452A  0E00               	movlw	0
  8895  00452C  6E5C               	movwf	(?___fltol+1)^0,c
  8896  00452E  0E00               	movlw	0
  8897  004530  6E5D               	movwf	(?___fltol+2)^0,c
  8898  004532  0E00               	movlw	0
  8899  004534  6E5E               	movwf	(?___fltol+3)^0,c
  8900  004536  EF0A  F023         	goto	l1085
  8901  00453A                     l4390:
  8902                           
  8903                           ; BSR set to: 0
  8904  00453A  C05B  F060         	movff	___fltol@f1,??___fltol
  8905  00453E  C05C  F061         	movff	___fltol@f1+1,??___fltol+1
  8906  004542  C05D  F062         	movff	___fltol@f1+2,??___fltol+2
  8907  004546  C05E  F063         	movff	___fltol@f1+3,??___fltol+3
  8908  00454A  0E20               	movlw	32
  8909  00454C  EFAD  F022         	goto	u4160
  8910  004550                     u4165:
  8911  004550  90D8               	bcf	status,0,c
  8912  004552  3363               	rrcf	(??___fltol+3)& (0+255),f,b
  8913  004554  3362               	rrcf	(??___fltol+2)& (0+255),f,b
  8914  004556  3361               	rrcf	(??___fltol+1)& (0+255),f,b
  8915  004558  3360               	rrcf	??___fltol& (0+255),f,b
  8916  00455A                     u4160:
  8917  00455A  2EE8               	decfsz	wreg,f,c
  8918  00455C  EFA8  F022         	goto	u4165
  8919  004560  5160               	movf	??___fltol& (0+255),w,b
  8920  004562  6F64               	movwf	___fltol@sign1& (0+255),b
  8921  004564                     
  8922                           ; BSR set to: 0
  8923  004564  8E5D               	bsf	(___fltol@f1+2)^0,7,c
  8924  004566                     
  8925                           ; BSR set to: 0
  8926  004566  0EFF               	movlw	255
  8927  004568  165B               	andwf	___fltol@f1^0,f,c
  8928  00456A  0EFF               	movlw	255
  8929  00456C  165C               	andwf	(___fltol@f1+1)^0,f,c
  8930  00456E  0EFF               	movlw	255
  8931  004570  165D               	andwf	(___fltol@f1+2)^0,f,c
  8932  004572  0E00               	movlw	0
  8933  004574  165E               	andwf	(___fltol@f1+3)^0,f,c
  8934  004576                     
  8935                           ; BSR set to: 0
  8936  004576  0E96               	movlw	150
  8937  004578  5F65               	subwf	___fltol@exp1& (0+255),f,b
  8938  00457A                     
  8939                           ; BSR set to: 0
  8940  00457A  BF65               	btfsc	___fltol@exp1& (0+255),7,b
  8941  00457C  EFC4  F022         	goto	u4170
  8942  004580  EFC2  F022         	goto	u4171
  8943  004584                     u4171:
  8944  004584  EFDA  F022         	goto	l4410
  8945  004588                     u4170:
  8946  004588                     
  8947                           ; BSR set to: 0
  8948  004588  5165               	movf	___fltol@exp1& (0+255),w,b
  8949  00458A  0A80               	xorlw	128
  8950  00458C  0F97               	addlw	151
  8951  00458E  B0D8               	btfsc	status,0,c
  8952  004590  EFCC  F022         	goto	u4181
  8953  004594  EFCE  F022         	goto	u4180
  8954  004598                     u4181:
  8955  004598  EFD0  F022         	goto	l4406
  8956  00459C                     u4180:
  8957  00459C  EF93  F022         	goto	l4386
  8958  0045A0                     l4406:
  8959                           
  8960                           ; BSR set to: 0
  8961  0045A0  90D8               	bcf	status,0,c
  8962  0045A2  325E               	rrcf	(___fltol@f1+3)^0,f,c
  8963  0045A4  325D               	rrcf	(___fltol@f1+2)^0,f,c
  8964  0045A6  325C               	rrcf	(___fltol@f1+1)^0,f,c
  8965  0045A8  325B               	rrcf	___fltol@f1^0,f,c
  8966  0045AA                     
  8967                           ; BSR set to: 0
  8968  0045AA  3F65               	incfsz	___fltol@exp1& (0+255),f,b
  8969  0045AC  EFD0  F022         	goto	l4406
  8970  0045B0  EFF2  F022         	goto	l4420
  8971  0045B4                     l4410:
  8972                           
  8973                           ; BSR set to: 0
  8974  0045B4  0E1F               	movlw	31
  8975  0045B6  6565               	cpfsgt	___fltol@exp1& (0+255),b
  8976  0045B8  EFE0  F022         	goto	u4191
  8977  0045BC  EFE2  F022         	goto	u4190
  8978  0045C0                     u4191:
  8979  0045C0  EFEA  F022         	goto	l4418
  8980  0045C4                     u4190:
  8981  0045C4  EF93  F022         	goto	l4386
  8982  0045C8                     l4416:
  8983                           
  8984                           ; BSR set to: 0
  8985  0045C8  90D8               	bcf	status,0,c
  8986  0045CA  365B               	rlcf	___fltol@f1^0,f,c
  8987  0045CC  365C               	rlcf	(___fltol@f1+1)^0,f,c
  8988  0045CE  365D               	rlcf	(___fltol@f1+2)^0,f,c
  8989  0045D0  365E               	rlcf	(___fltol@f1+3)^0,f,c
  8990  0045D2  0765               	decf	___fltol@exp1& (0+255),f,b
  8991  0045D4                     l4418:
  8992                           
  8993                           ; BSR set to: 0
  8994  0045D4  5165               	movf	___fltol@exp1& (0+255),w,b
  8995  0045D6  A4D8               	btfss	status,2,c
  8996  0045D8  EFF0  F022         	goto	u4201
  8997  0045DC  EFF2  F022         	goto	u4200
  8998  0045E0                     u4201:
  8999  0045E0  EFE4  F022         	goto	l4416
  9000  0045E4                     u4200:
  9001  0045E4                     l4420:
  9002                           
  9003                           ; BSR set to: 0
  9004  0045E4  5164               	movf	___fltol@sign1& (0+255),w,b
  9005  0045E6  B4D8               	btfsc	status,2,c
  9006  0045E8  EFF8  F022         	goto	u4211
  9007  0045EC  EFFA  F022         	goto	u4210
  9008  0045F0                     u4211:
  9009  0045F0  EF02  F023         	goto	l4424
  9010  0045F4                     u4210:
  9011  0045F4                     
  9012                           ; BSR set to: 0
  9013  0045F4  1E5E               	comf	(___fltol@f1+3)^0,f,c
  9014  0045F6  1E5D               	comf	(___fltol@f1+2)^0,f,c
  9015  0045F8  1E5C               	comf	(___fltol@f1+1)^0,f,c
  9016  0045FA  6C5B               	negf	___fltol@f1^0,c
  9017  0045FC  0E00               	movlw	0
  9018  0045FE  225C               	addwfc	(___fltol@f1+1)^0,f,c
  9019  004600  225D               	addwfc	(___fltol@f1+2)^0,f,c
  9020  004602  225E               	addwfc	(___fltol@f1+3)^0,f,c
  9021  004604                     l4424:
  9022                           
  9023                           ; BSR set to: 0
  9024  004604  C05B  F05B         	movff	___fltol@f1,?___fltol
  9025  004608  C05C  F05C         	movff	___fltol@f1+1,?___fltol+1
  9026  00460C  C05D  F05D         	movff	___fltol@f1+2,?___fltol+2
  9027  004610  C05E  F05E         	movff	___fltol@f1+3,?___fltol+3
  9028  004614                     l1085:
  9029                           
  9030                           ; BSR set to: 0
  9031  004614  0012               	return		;funcret
  9032  004616                     __end_of___fltol:
  9033                           	callstack 0
  9034                           
  9035 ;; *************** function _color_read_Clear *****************
  9036 ;; Defined at:
  9037 ;;		line 133 in file "color.c"
  9038 ;; Parameters:    Size  Location     Type
  9039 ;;		None
  9040 ;; Auto vars:     Size  Location     Type
  9041 ;;  tmp             2    9[COMRAM] unsigned int 
  9042 ;; Return value:  Size  Location     Type
  9043 ;;                  2    4[COMRAM] unsigned int 
  9044 ;; Registers used:
  9045 ;;		wreg, status,2, status,0, cstack
  9046 ;; Tracked objects:
  9047 ;;		On entry : 0/0
  9048 ;;		On exit  : 0/0
  9049 ;;		Unchanged: 0/0
  9050 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9051 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9052 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9053 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9054 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9055 ;;Total ram usage:        7 bytes
  9056 ;; Hardware stack levels used: 1
  9057 ;; Hardware stack levels required when called: 3
  9058 ;; This function calls:
  9059 ;;		_I2C_2_Master_Read
  9060 ;;		_I2C_2_Master_RepStart
  9061 ;;		_I2C_2_Master_Start
  9062 ;;		_I2C_2_Master_Stop
  9063 ;;		_I2C_2_Master_Write
  9064 ;; This function is called by:
  9065 ;;		_read_color
  9066 ;;		_calibrate_white
  9067 ;;		_amb_light_measure
  9068 ;;		_distance_measure
  9069 ;; This function uses a non-reentrant model
  9070 ;;
  9071                           
  9072                           	psect	text42
  9073  00508E                     __ptext42:
  9074                           	callstack 0
  9075  00508E                     _color_read_Clear:
  9076                           	callstack 24
  9077  00508E                     
  9078                           ;color.c: 135:  unsigned int tmp;;color.c: 136:  I2C_2_Master_Start();
  9079  00508E  EC09  F02B         	call	_I2C_2_Master_Start	;wreg free
  9080                           
  9081                           ;color.c: 137:  I2C_2_Master_Write(0x52 | 0x00);
  9082  005092  0E52               	movlw	82
  9083  005094  ECF3  F02A         	call	_I2C_2_Master_Write
  9084                           
  9085                           ;color.c: 138:  I2C_2_Master_Write(0xA0 | 0x14);
  9086  005098  0EB4               	movlw	180
  9087  00509A  ECF3  F02A         	call	_I2C_2_Master_Write
  9088                           
  9089                           ;color.c: 139:  I2C_2_Master_RepStart();
  9090  00509E  ECFF  F02A         	call	_I2C_2_Master_RepStart	;wreg free
  9091                           
  9092                           ;color.c: 140:  I2C_2_Master_Write(0x52 | 0x01);
  9093  0050A2  0E53               	movlw	83
  9094  0050A4  ECF3  F02A         	call	_I2C_2_Master_Write
  9095                           
  9096                           ;color.c: 141:  tmp=I2C_2_Master_Read(1);
  9097  0050A8  0E01               	movlw	1
  9098  0050AA  ECB4  F028         	call	_I2C_2_Master_Read
  9099  0050AE  6E07               	movwf	??_color_read_Clear^0,c
  9100  0050B0  5007               	movf	??_color_read_Clear^0,w,c
  9101  0050B2  6E0A               	movwf	color_read_Clear@tmp^0,c
  9102  0050B4  6A0B               	clrf	(color_read_Clear@tmp+1)^0,c
  9103                           
  9104                           ;color.c: 142:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  9105  0050B6  0E00               	movlw	0
  9106  0050B8  ECB4  F028         	call	_I2C_2_Master_Read
  9107  0050BC  6E07               	movwf	??_color_read_Clear^0,c
  9108  0050BE  5007               	movf	??_color_read_Clear^0,w,c
  9109  0050C0  6E09               	movwf	(??_color_read_Clear+2)^0,c
  9110  0050C2  6A08               	clrf	(??_color_read_Clear+1)^0,c
  9111  0050C4  500A               	movf	color_read_Clear@tmp^0,w,c
  9112  0050C6  1008               	iorwf	(??_color_read_Clear+1)^0,w,c
  9113  0050C8  6E0A               	movwf	color_read_Clear@tmp^0,c
  9114  0050CA  500B               	movf	(color_read_Clear@tmp+1)^0,w,c
  9115  0050CC  1009               	iorwf	(??_color_read_Clear+2)^0,w,c
  9116  0050CE  6E0B               	movwf	(color_read_Clear@tmp+1)^0,c
  9117                           
  9118                           ;color.c: 143:  I2C_2_Master_Stop();
  9119  0050D0  EC04  F02B         	call	_I2C_2_Master_Stop	;wreg free
  9120  0050D4                     
  9121                           ;color.c: 144:  return tmp;
  9122  0050D4  C00A  F005         	movff	color_read_Clear@tmp,?_color_read_Clear
  9123  0050D8  C00B  F006         	movff	color_read_Clear@tmp+1,?_color_read_Clear+1
  9124  0050DC  0012               	return		;funcret
  9125  0050DE                     __end_of_color_read_Clear:
  9126                           	callstack 0
  9127                           
  9128 ;; *************** function _I2C_2_Master_RepStart *****************
  9129 ;; Defined at:
  9130 ;;		line 33 in file "i2c.c"
  9131 ;; Parameters:    Size  Location     Type
  9132 ;;		None
  9133 ;; Auto vars:     Size  Location     Type
  9134 ;;		None
  9135 ;; Return value:  Size  Location     Type
  9136 ;;                  1    wreg      void 
  9137 ;; Registers used:
  9138 ;;		wreg, status,2, status,0, cstack
  9139 ;; Tracked objects:
  9140 ;;		On entry : 0/0
  9141 ;;		On exit  : 0/0
  9142 ;;		Unchanged: 0/0
  9143 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9144 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9145 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9146 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9147 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9148 ;;Total ram usage:        0 bytes
  9149 ;; Hardware stack levels used: 1
  9150 ;; Hardware stack levels required when called: 2
  9151 ;; This function calls:
  9152 ;;		_I2C_2_Master_Idle
  9153 ;; This function is called by:
  9154 ;;		_color_read_Red
  9155 ;;		_color_read_Blue
  9156 ;;		_color_read_Green
  9157 ;;		_color_read_Clear
  9158 ;; This function uses a non-reentrant model
  9159 ;;
  9160                           
  9161                           	psect	text43
  9162  0055FE                     __ptext43:
  9163                           	callstack 0
  9164  0055FE                     _I2C_2_Master_RepStart:
  9165                           	callstack 24
  9166  0055FE                     
  9167                           ;i2c.c: 35:   I2C_2_Master_Idle();
  9168  0055FE  EC27  F02A         	call	_I2C_2_Master_Idle	;wreg free
  9169  005602                     
  9170                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  9171  005602  010E               	movlb	14	; () banked
  9172  005604  83DA               	bsf	218,1,b	;volatile
  9173  005606                     
  9174                           ; BSR set to: 14
  9175  005606  0012               	return		;funcret
  9176  005608                     __end_of_I2C_2_Master_RepStart:
  9177                           	callstack 0
  9178                           
  9179 ;; *************** function _I2C_2_Master_Read *****************
  9180 ;; Defined at:
  9181 ;;		line 51 in file "i2c.c"
  9182 ;; Parameters:    Size  Location     Type
  9183 ;;  ack             1    wreg     unsigned char 
  9184 ;; Auto vars:     Size  Location     Type
  9185 ;;  ack             1    2[COMRAM] unsigned char 
  9186 ;;  tmp             1    3[COMRAM] unsigned char 
  9187 ;; Return value:  Size  Location     Type
  9188 ;;                  1    wreg      unsigned char 
  9189 ;; Registers used:
  9190 ;;		wreg, status,2, status,0, cstack
  9191 ;; Tracked objects:
  9192 ;;		On entry : 0/0
  9193 ;;		On exit  : 0/0
  9194 ;;		Unchanged: 0/0
  9195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9196 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9197 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9198 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9199 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9200 ;;Total ram usage:        3 bytes
  9201 ;; Hardware stack levels used: 1
  9202 ;; Hardware stack levels required when called: 2
  9203 ;; This function calls:
  9204 ;;		_I2C_2_Master_Idle
  9205 ;; This function is called by:
  9206 ;;		_color_read_Red
  9207 ;;		_color_read_Blue
  9208 ;;		_color_read_Green
  9209 ;;		_color_read_Clear
  9210 ;; This function uses a non-reentrant model
  9211 ;;
  9212                           
  9213                           	psect	text44
  9214  005168                     __ptext44:
  9215                           	callstack 0
  9216  005168                     _I2C_2_Master_Read:
  9217                           	callstack 24
  9218                           
  9219                           ; BSR set to: 14
  9220                           ;incstack = 0
  9221                           ;I2C_2_Master_Read@ack stored from wreg
  9222  005168  6E03               	movwf	I2C_2_Master_Read@ack^0,c
  9223  00516A                     
  9224                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  9225  00516A  EC27  F02A         	call	_I2C_2_Master_Idle	;wreg free
  9226  00516E                     
  9227                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  9228  00516E  010E               	movlb	14	; () banked
  9229  005170  87DA               	bsf	218,3,b	;volatile
  9230                           
  9231                           ;i2c.c: 56:   I2C_2_Master_Idle();
  9232  005172  EC27  F02A         	call	_I2C_2_Master_Idle	;wreg free
  9233  005176                     
  9234                           ;i2c.c: 57:   tmp = SSP2BUF;
  9235  005176  CED5 F004          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  9236                           
  9237                           ;i2c.c: 58:   I2C_2_Master_Idle();
  9238  00517A  EC27  F02A         	call	_I2C_2_Master_Idle	;wreg free
  9239  00517E                     
  9240                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  9241  00517E  5003               	movf	I2C_2_Master_Read@ack^0,w,c
  9242  005180  B4D8               	btfsc	status,2,c
  9243  005182  EFC5  F028         	goto	u3771
  9244  005186  EFC9  F028         	goto	u3770
  9245  00518A                     u3771:
  9246  00518A  6A02               	clrf	??_I2C_2_Master_Read^0,c
  9247  00518C  2A02               	incf	??_I2C_2_Master_Read^0,f,c
  9248  00518E  EFCA  F028         	goto	u3788
  9249  005192                     u3770:
  9250  005192  6A02               	clrf	??_I2C_2_Master_Read^0,c
  9251  005194                     u3788:
  9252  005194  3A02               	swapf	??_I2C_2_Master_Read^0,f,c
  9253  005196  4602               	rlncf	??_I2C_2_Master_Read^0,f,c
  9254  005198  010E               	movlb	14	; () banked
  9255  00519A  51DA               	movf	218,w,b	;volatile
  9256  00519C  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  9257  00519E  0BDF               	andlw	-33
  9258  0051A0  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  9259  0051A2  6FDA               	movwf	218,b	;volatile
  9260  0051A4                     
  9261                           ; BSR set to: 14
  9262                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  9263  0051A4  89DA               	bsf	218,4,b	;volatile
  9264  0051A6                     
  9265                           ; BSR set to: 14
  9266                           ;i2c.c: 61:   return tmp;
  9267  0051A6  5004               	movf	I2C_2_Master_Read@tmp^0,w,c
  9268  0051A8                     
  9269                           ; BSR set to: 14
  9270  0051A8  0012               	return		;funcret
  9271  0051AA                     __end_of_I2C_2_Master_Read:
  9272                           	callstack 0
  9273                           
  9274 ;; *************** function ___xxtofl *****************
  9275 ;; Defined at:
  9276 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\xxtofl.c"
  9277 ;; Parameters:    Size  Location     Type
  9278 ;;  sign            1    wreg     unsigned char 
  9279 ;;  val             4    0[COMRAM] long 
  9280 ;; Auto vars:     Size  Location     Type
  9281 ;;  sign            1    8[COMRAM] unsigned char 
  9282 ;;  arg             4   10[COMRAM] unsigned long 
  9283 ;;  exp             1    9[COMRAM] unsigned char 
  9284 ;; Return value:  Size  Location     Type
  9285 ;;                  4    0[COMRAM] unsigned char 
  9286 ;; Registers used:
  9287 ;;		wreg, status,2, status,0
  9288 ;; Tracked objects:
  9289 ;;		On entry : 0/0
  9290 ;;		On exit  : 0/0
  9291 ;;		Unchanged: 0/0
  9292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9293 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9294 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9295 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9296 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9297 ;;Total ram usage:       14 bytes
  9298 ;; Hardware stack levels used: 1
  9299 ;; Hardware stack levels required when called: 1
  9300 ;; This function calls:
  9301 ;;		Nothing
  9302 ;; This function is called by:
  9303 ;;		_detect_color
  9304 ;;		_amb_light_measure
  9305 ;;		_distance_measure
  9306 ;;		_check_color_reading
  9307 ;; This function uses a non-reentrant model
  9308 ;;
  9309                           
  9310                           	psect	text45
  9311  00393C                     __ptext45:
  9312                           	callstack 0
  9313  00393C                     ___xxtofl:
  9314                           	callstack 27
  9315                           
  9316                           ; BSR set to: 14
  9317                           ;incstack = 0
  9318                           ;___xxtofl@sign stored from wreg
  9319  00393C  6E09               	movwf	___xxtofl@sign^0,c
  9320  00393E  5009               	movf	___xxtofl@sign^0,w,c
  9321  003940  B4D8               	btfsc	status,2,c
  9322  003942  EFA5  F01C         	goto	u4841
  9323  003946  EFA7  F01C         	goto	u4840
  9324  00394A                     u4841:
  9325  00394A  EFC9  F01C         	goto	l1443
  9326  00394E                     u4840:
  9327  00394E  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  9328  003950  EFAE  F01C         	goto	u4850
  9329  003954  EFAC  F01C         	goto	u4851
  9330  003958                     u4851:
  9331  003958  EFC9  F01C         	goto	l1443
  9332  00395C                     u4850:
  9333  00395C  C001  F005         	movff	___xxtofl@val,??___xxtofl
  9334  003960  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
  9335  003964  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
  9336  003968  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
  9337  00396C  1E05               	comf	??___xxtofl^0,f,c
  9338  00396E  1E06               	comf	(??___xxtofl+1)^0,f,c
  9339  003970  1E07               	comf	(??___xxtofl+2)^0,f,c
  9340  003972  1E08               	comf	(??___xxtofl+3)^0,f,c
  9341  003974  2A05               	incf	??___xxtofl^0,f,c
  9342  003976  0E00               	movlw	0
  9343  003978  2206               	addwfc	(??___xxtofl+1)^0,f,c
  9344  00397A  2207               	addwfc	(??___xxtofl+2)^0,f,c
  9345  00397C  2208               	addwfc	(??___xxtofl+3)^0,f,c
  9346  00397E  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
  9347  003982  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
  9348  003986  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
  9349  00398A  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
  9350  00398E  EFD1  F01C         	goto	l4712
  9351  003992                     l1443:
  9352  003992  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
  9353  003996  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  9354  00399A  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  9355  00399E  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  9356  0039A2                     l4712:
  9357  0039A2  5001               	movf	___xxtofl@val^0,w,c
  9358  0039A4  1002               	iorwf	(___xxtofl@val+1)^0,w,c
  9359  0039A6  1003               	iorwf	(___xxtofl@val+2)^0,w,c
  9360  0039A8  1004               	iorwf	(___xxtofl@val+3)^0,w,c
  9361  0039AA  A4D8               	btfss	status,2,c
  9362  0039AC  EFDA  F01C         	goto	u4861
  9363  0039B0  EFDC  F01C         	goto	u4860
  9364  0039B4                     u4861:
  9365  0039B4  EFE6  F01C         	goto	l4718
  9366  0039B8                     u4860:
  9367  0039B8  0E00               	movlw	0
  9368  0039BA  6E01               	movwf	?___xxtofl^0,c
  9369  0039BC  0E00               	movlw	0
  9370  0039BE  6E02               	movwf	(?___xxtofl+1)^0,c
  9371  0039C0  0E00               	movlw	0
  9372  0039C2  6E03               	movwf	(?___xxtofl+2)^0,c
  9373  0039C4  0E00               	movlw	0
  9374  0039C6  6E04               	movwf	(?___xxtofl+3)^0,c
  9375  0039C8  EF77  F01D         	goto	l1446
  9376  0039CC                     l4718:
  9377  0039CC  0E96               	movlw	150
  9378  0039CE  6E0A               	movwf	___xxtofl@exp^0,c
  9379  0039D0  EFF0  F01C         	goto	l4722
  9380  0039D4                     l4720:
  9381  0039D4  2A0A               	incf	___xxtofl@exp^0,f,c
  9382  0039D6  90D8               	bcf	status,0,c
  9383  0039D8  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  9384  0039DA  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  9385  0039DC  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  9386  0039DE  320B               	rrcf	___xxtofl@arg^0,f,c
  9387  0039E0                     l4722:
  9388  0039E0  0E00               	movlw	0
  9389  0039E2  140B               	andwf	___xxtofl@arg^0,w,c
  9390  0039E4  6E05               	movwf	??___xxtofl^0,c
  9391  0039E6  0E00               	movlw	0
  9392  0039E8  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  9393  0039EA  6E06               	movwf	(??___xxtofl+1)^0,c
  9394  0039EC  0E00               	movlw	0
  9395  0039EE  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  9396  0039F0  6E07               	movwf	(??___xxtofl+2)^0,c
  9397  0039F2  0EFE               	movlw	254
  9398  0039F4  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  9399  0039F6  6E08               	movwf	(??___xxtofl+3)^0,c
  9400  0039F8  5005               	movf	??___xxtofl^0,w,c
  9401  0039FA  1006               	iorwf	(??___xxtofl+1)^0,w,c
  9402  0039FC  1007               	iorwf	(??___xxtofl+2)^0,w,c
  9403  0039FE  1008               	iorwf	(??___xxtofl+3)^0,w,c
  9404  003A00  A4D8               	btfss	status,2,c
  9405  003A02  EF05  F01D         	goto	u4871
  9406  003A06  EF07  F01D         	goto	u4870
  9407  003A0A                     u4871:
  9408  003A0A  EFEA  F01C         	goto	l4720
  9409  003A0E                     u4870:
  9410  003A0E  EF15  F01D         	goto	l1450
  9411  003A12                     l4724:
  9412  003A12  2A0A               	incf	___xxtofl@exp^0,f,c
  9413  003A14  0E01               	movlw	1
  9414  003A16  260B               	addwf	___xxtofl@arg^0,f,c
  9415  003A18  0E00               	movlw	0
  9416  003A1A  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
  9417  003A1C  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
  9418  003A1E  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
  9419  003A20  90D8               	bcf	status,0,c
  9420  003A22  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  9421  003A24  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  9422  003A26  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  9423  003A28  320B               	rrcf	___xxtofl@arg^0,f,c
  9424  003A2A                     l1450:
  9425  003A2A  0E00               	movlw	0
  9426  003A2C  140B               	andwf	___xxtofl@arg^0,w,c
  9427  003A2E  6E05               	movwf	??___xxtofl^0,c
  9428  003A30  0E00               	movlw	0
  9429  003A32  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  9430  003A34  6E06               	movwf	(??___xxtofl+1)^0,c
  9431  003A36  0E00               	movlw	0
  9432  003A38  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  9433  003A3A  6E07               	movwf	(??___xxtofl+2)^0,c
  9434  003A3C  0EFF               	movlw	255
  9435  003A3E  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  9436  003A40  6E08               	movwf	(??___xxtofl+3)^0,c
  9437  003A42  5005               	movf	??___xxtofl^0,w,c
  9438  003A44  1006               	iorwf	(??___xxtofl+1)^0,w,c
  9439  003A46  1007               	iorwf	(??___xxtofl+2)^0,w,c
  9440  003A48  1008               	iorwf	(??___xxtofl+3)^0,w,c
  9441  003A4A  A4D8               	btfss	status,2,c
  9442  003A4C  EF2A  F01D         	goto	u4881
  9443  003A50  EF2C  F01D         	goto	u4880
  9444  003A54                     u4881:
  9445  003A54  EF09  F01D         	goto	l4724
  9446  003A58                     u4880:
  9447  003A58  EF34  F01D         	goto	l4732
  9448  003A5C                     l4730:
  9449  003A5C  060A               	decf	___xxtofl@exp^0,f,c
  9450  003A5E  90D8               	bcf	status,0,c
  9451  003A60  360B               	rlcf	___xxtofl@arg^0,f,c
  9452  003A62  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
  9453  003A64  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
  9454  003A66  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
  9455  003A68                     l4732:
  9456  003A68  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
  9457  003A6A  EF39  F01D         	goto	u4891
  9458  003A6E  EF3B  F01D         	goto	u4890
  9459  003A72                     u4891:
  9460  003A72  EF43  F01D         	goto	l1457
  9461  003A76                     u4890:
  9462  003A76  0E02               	movlw	2
  9463  003A78  600A               	cpfslt	___xxtofl@exp^0,c
  9464  003A7A  EF41  F01D         	goto	u4901
  9465  003A7E  EF43  F01D         	goto	u4900
  9466  003A82                     u4901:
  9467  003A82  EF2E  F01D         	goto	l4730
  9468  003A86                     u4900:
  9469  003A86                     l1457:
  9470  003A86  B00A               	btfsc	___xxtofl@exp^0,0,c
  9471  003A88  EF48  F01D         	goto	u4911
  9472  003A8C  EF4A  F01D         	goto	u4910
  9473  003A90                     u4911:
  9474  003A90  EF4B  F01D         	goto	l4738
  9475  003A94                     u4910:
  9476  003A94  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
  9477  003A96                     l4738:
  9478  003A96  90D8               	bcf	status,0,c
  9479  003A98  320A               	rrcf	___xxtofl@exp^0,f,c
  9480  003A9A  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
  9481  003A9E  6A06               	clrf	(??___xxtofl+1)^0,c
  9482  003AA0  6A07               	clrf	(??___xxtofl+2)^0,c
  9483  003AA2  6A08               	clrf	(??___xxtofl+3)^0,c
  9484  003AA4  C005  F008         	movff	??___xxtofl,??___xxtofl+3
  9485  003AA8  6A07               	clrf	(??___xxtofl+2)^0,c
  9486  003AAA  6A06               	clrf	(??___xxtofl+1)^0,c
  9487  003AAC  6A05               	clrf	??___xxtofl^0,c
  9488  003AAE  5005               	movf	??___xxtofl^0,w,c
  9489  003AB0  120B               	iorwf	___xxtofl@arg^0,f,c
  9490  003AB2  5006               	movf	(??___xxtofl+1)^0,w,c
  9491  003AB4  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
  9492  003AB6  5007               	movf	(??___xxtofl+2)^0,w,c
  9493  003AB8  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
  9494  003ABA  5008               	movf	(??___xxtofl+3)^0,w,c
  9495  003ABC  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
  9496  003ABE  5009               	movf	___xxtofl@sign^0,w,c
  9497  003AC0  B4D8               	btfsc	status,2,c
  9498  003AC2  EF65  F01D         	goto	u4921
  9499  003AC6  EF67  F01D         	goto	u4920
  9500  003ACA                     u4921:
  9501  003ACA  EF6F  F01D         	goto	l4748
  9502  003ACE                     u4920:
  9503  003ACE  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  9504  003AD0  EF6E  F01D         	goto	u4930
  9505  003AD4  EF6C  F01D         	goto	u4931
  9506  003AD8                     u4931:
  9507  003AD8  EF6F  F01D         	goto	l4748
  9508  003ADC                     u4930:
  9509  003ADC  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
  9510  003ADE                     l4748:
  9511  003ADE  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
  9512  003AE2  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
  9513  003AE6  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
  9514  003AEA  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
  9515  003AEE                     l1446:
  9516  003AEE  0012               	return		;funcret
  9517  003AF0                     __end_of___xxtofl:
  9518                           	callstack 0
  9519                           
  9520 ;; *************** function ___fldiv *****************
  9521 ;; Defined at:
  9522 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\sprcdiv.c"
  9523 ;; Parameters:    Size  Location     Type
  9524 ;;  b               4   14[COMRAM] unsigned char 
  9525 ;;  a               4   18[COMRAM] unsigned char 
  9526 ;; Auto vars:     Size  Location     Type
  9527 ;;  grs             4   33[COMRAM] unsigned long 
  9528 ;;  rem             4   26[COMRAM] unsigned long 
  9529 ;;  new_exp         2   31[COMRAM] short 
  9530 ;;  aexp            1   38[COMRAM] unsigned char 
  9531 ;;  bexp            1   37[COMRAM] unsigned char 
  9532 ;;  sign            1   30[COMRAM] unsigned char 
  9533 ;; Return value:  Size  Location     Type
  9534 ;;                  4   14[COMRAM] unsigned char 
  9535 ;; Registers used:
  9536 ;;		wreg, status,2, status,0
  9537 ;; Tracked objects:
  9538 ;;		On entry : 0/0
  9539 ;;		On exit  : 0/0
  9540 ;;		Unchanged: 0/0
  9541 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9542 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9543 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9544 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9545 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9546 ;;Total ram usage:       25 bytes
  9547 ;; Hardware stack levels used: 1
  9548 ;; Hardware stack levels required when called: 1
  9549 ;; This function calls:
  9550 ;;		Nothing
  9551 ;; This function is called by:
  9552 ;;		_detect_color
  9553 ;;		_amb_light_measure
  9554 ;;		_check_color_reading
  9555 ;; This function uses a non-reentrant model
  9556 ;;
  9557                           
  9558                           	psect	text46
  9559  00260C                     __ptext46:
  9560                           	callstack 0
  9561  00260C                     ___fldiv:
  9562                           	callstack 27
  9563  00260C  5012               	movf	(___fldiv@b+3)^0,w,c
  9564  00260E  0B80               	andlw	128
  9565  002610  6E1F               	movwf	___fldiv@sign^0,c
  9566  002612  5012               	movf	(___fldiv@b+3)^0,w,c
  9567  002614  2412               	addwf	(___fldiv@b+3)^0,w,c
  9568  002616  6E26               	movwf	___fldiv@bexp^0,c
  9569  002618  AE11               	btfss	(___fldiv@b+2)^0,7,c
  9570  00261A  EF11  F013         	goto	u4611
  9571  00261E  EF13  F013         	goto	u4610
  9572  002622                     u4611:
  9573  002622  EF14  F013         	goto	l4574
  9574  002626                     u4610:
  9575  002626  8026               	bsf	___fldiv@bexp^0,0,c
  9576  002628                     l4574:
  9577  002628  5026               	movf	___fldiv@bexp^0,w,c
  9578  00262A  B4D8               	btfsc	status,2,c
  9579  00262C  EF1A  F013         	goto	u4621
  9580  002630  EF1C  F013         	goto	u4620
  9581  002634                     u4621:
  9582  002634  EF31  F013         	goto	l4584
  9583  002638                     u4620:
  9584  002638  2826               	incf	___fldiv@bexp^0,w,c
  9585  00263A  A4D8               	btfss	status,2,c
  9586  00263C  EF22  F013         	goto	u4631
  9587  002640  EF24  F013         	goto	u4630
  9588  002644                     u4631:
  9589  002644  EF2C  F013         	goto	l4580
  9590  002648                     u4630:
  9591  002648  0E00               	movlw	0
  9592  00264A  6E0F               	movwf	___fldiv@b^0,c
  9593  00264C  0E00               	movlw	0
  9594  00264E  6E10               	movwf	(___fldiv@b+1)^0,c
  9595  002650  0E00               	movlw	0
  9596  002652  6E11               	movwf	(___fldiv@b+2)^0,c
  9597  002654  0E00               	movlw	0
  9598  002656  6E12               	movwf	(___fldiv@b+3)^0,c
  9599  002658                     l4580:
  9600  002658  8E11               	bsf	(___fldiv@b+2)^0,7,c
  9601  00265A  0E00               	movlw	0
  9602  00265C  6E12               	movwf	(___fldiv@b+3)^0,c
  9603  00265E  EF39  F013         	goto	l4586
  9604  002662                     l4584:
  9605  002662  0E00               	movlw	0
  9606  002664  6E0F               	movwf	___fldiv@b^0,c
  9607  002666  0E00               	movlw	0
  9608  002668  6E10               	movwf	(___fldiv@b+1)^0,c
  9609  00266A  0E00               	movlw	0
  9610  00266C  6E11               	movwf	(___fldiv@b+2)^0,c
  9611  00266E  0E00               	movlw	0
  9612  002670  6E12               	movwf	(___fldiv@b+3)^0,c
  9613  002672                     l4586:
  9614  002672  5016               	movf	(___fldiv@a+3)^0,w,c
  9615  002674  0B80               	andlw	128
  9616  002676  1A1F               	xorwf	___fldiv@sign^0,f,c
  9617  002678  5016               	movf	(___fldiv@a+3)^0,w,c
  9618  00267A  2416               	addwf	(___fldiv@a+3)^0,w,c
  9619  00267C  6E27               	movwf	___fldiv@aexp^0,c
  9620  00267E  AE15               	btfss	(___fldiv@a+2)^0,7,c
  9621  002680  EF44  F013         	goto	u4641
  9622  002684  EF46  F013         	goto	u4640
  9623  002688                     u4641:
  9624  002688  EF47  F013         	goto	l4594
  9625  00268C                     u4640:
  9626  00268C  8027               	bsf	___fldiv@aexp^0,0,c
  9627  00268E                     l4594:
  9628  00268E  5027               	movf	___fldiv@aexp^0,w,c
  9629  002690  B4D8               	btfsc	status,2,c
  9630  002692  EF4D  F013         	goto	u4651
  9631  002696  EF4F  F013         	goto	u4650
  9632  00269A                     u4651:
  9633  00269A  EF64  F013         	goto	l4604
  9634  00269E                     u4650:
  9635  00269E  2827               	incf	___fldiv@aexp^0,w,c
  9636  0026A0  A4D8               	btfss	status,2,c
  9637  0026A2  EF55  F013         	goto	u4661
  9638  0026A6  EF57  F013         	goto	u4660
  9639  0026AA                     u4661:
  9640  0026AA  EF5F  F013         	goto	l4600
  9641  0026AE                     u4660:
  9642  0026AE  0E00               	movlw	0
  9643  0026B0  6E13               	movwf	___fldiv@a^0,c
  9644  0026B2  0E00               	movlw	0
  9645  0026B4  6E14               	movwf	(___fldiv@a+1)^0,c
  9646  0026B6  0E00               	movlw	0
  9647  0026B8  6E15               	movwf	(___fldiv@a+2)^0,c
  9648  0026BA  0E00               	movlw	0
  9649  0026BC  6E16               	movwf	(___fldiv@a+3)^0,c
  9650  0026BE                     l4600:
  9651  0026BE  8E15               	bsf	(___fldiv@a+2)^0,7,c
  9652  0026C0  0E00               	movlw	0
  9653  0026C2  6E16               	movwf	(___fldiv@a+3)^0,c
  9654  0026C4  EF6C  F013         	goto	l4606
  9655  0026C8                     l4604:
  9656  0026C8  0E00               	movlw	0
  9657  0026CA  6E13               	movwf	___fldiv@a^0,c
  9658  0026CC  0E00               	movlw	0
  9659  0026CE  6E14               	movwf	(___fldiv@a+1)^0,c
  9660  0026D0  0E00               	movlw	0
  9661  0026D2  6E15               	movwf	(___fldiv@a+2)^0,c
  9662  0026D4  0E00               	movlw	0
  9663  0026D6  6E16               	movwf	(___fldiv@a+3)^0,c
  9664  0026D8                     l4606:
  9665  0026D8  5013               	movf	___fldiv@a^0,w,c
  9666  0026DA  1014               	iorwf	(___fldiv@a+1)^0,w,c
  9667  0026DC  1015               	iorwf	(___fldiv@a+2)^0,w,c
  9668  0026DE  1016               	iorwf	(___fldiv@a+3)^0,w,c
  9669  0026E0  A4D8               	btfss	status,2,c
  9670  0026E2  EF75  F013         	goto	u4671
  9671  0026E6  EF77  F013         	goto	u4670
  9672  0026EA                     u4671:
  9673  0026EA  EF8F  F013         	goto	l4618
  9674  0026EE                     u4670:
  9675  0026EE  0E00               	movlw	0
  9676  0026F0  6E0F               	movwf	___fldiv@b^0,c
  9677  0026F2  0E00               	movlw	0
  9678  0026F4  6E10               	movwf	(___fldiv@b+1)^0,c
  9679  0026F6  0E00               	movlw	0
  9680  0026F8  6E11               	movwf	(___fldiv@b+2)^0,c
  9681  0026FA  0E00               	movlw	0
  9682  0026FC  6E12               	movwf	(___fldiv@b+3)^0,c
  9683  0026FE  0E80               	movlw	128
  9684  002700  1211               	iorwf	(___fldiv@b+2)^0,f,c
  9685  002702  0E7F               	movlw	127
  9686  002704  1212               	iorwf	(___fldiv@b+3)^0,f,c
  9687  002706                     l4612:
  9688  002706  501F               	movf	___fldiv@sign^0,w,c
  9689  002708  1212               	iorwf	(___fldiv@b+3)^0,f,c
  9690  00270A  C00F  F00F         	movff	___fldiv@b,?___fldiv
  9691  00270E  C010  F010         	movff	___fldiv@b+1,?___fldiv+1
  9692  002712  C011  F011         	movff	___fldiv@b+2,?___fldiv+2
  9693  002716  C012  F012         	movff	___fldiv@b+3,?___fldiv+3
  9694  00271A  EFD2  F014         	goto	l1370
  9695  00271E                     l4618:
  9696  00271E  5026               	movf	___fldiv@bexp^0,w,c
  9697  002720  A4D8               	btfss	status,2,c
  9698  002722  EF95  F013         	goto	u4681
  9699  002726  EF97  F013         	goto	u4680
  9700  00272A                     u4681:
  9701  00272A  EFA1  F013         	goto	l4626
  9702  00272E                     u4680:
  9703  00272E  0E00               	movlw	0
  9704  002730  6E0F               	movwf	?___fldiv^0,c
  9705  002732  0E00               	movlw	0
  9706  002734  6E10               	movwf	(?___fldiv+1)^0,c
  9707  002736  0E00               	movlw	0
  9708  002738  6E11               	movwf	(?___fldiv+2)^0,c
  9709  00273A  0E00               	movlw	0
  9710  00273C  6E12               	movwf	(?___fldiv+3)^0,c
  9711  00273E  EFD2  F014         	goto	l1370
  9712  002742                     l4626:
  9713  002742  5027               	movf	___fldiv@aexp^0,w,c
  9714  002744  C026  F017         	movff	___fldiv@bexp,??___fldiv
  9715  002748  6A18               	clrf	(??___fldiv+1)^0,c
  9716  00274A  5E17               	subwf	??___fldiv^0,f,c
  9717  00274C  0E00               	movlw	0
  9718  00274E  5A18               	subwfb	(??___fldiv+1)^0,f,c
  9719  002750  0E7F               	movlw	127
  9720  002752  2417               	addwf	??___fldiv^0,w,c
  9721  002754  6E20               	movwf	___fldiv@new_exp^0,c
  9722  002756  0E00               	movlw	0
  9723  002758  2018               	addwfc	(??___fldiv+1)^0,w,c
  9724  00275A  6E21               	movwf	(___fldiv@new_exp+1)^0,c
  9725  00275C  C00F  F01B         	movff	___fldiv@b,___fldiv@rem
  9726  002760  C010  F01C         	movff	___fldiv@b+1,___fldiv@rem+1
  9727  002764  C011  F01D         	movff	___fldiv@b+2,___fldiv@rem+2
  9728  002768  C012  F01E         	movff	___fldiv@b+3,___fldiv@rem+3
  9729  00276C  0E00               	movlw	0
  9730  00276E  6E0F               	movwf	___fldiv@b^0,c
  9731  002770  0E00               	movlw	0
  9732  002772  6E10               	movwf	(___fldiv@b+1)^0,c
  9733  002774  0E00               	movlw	0
  9734  002776  6E11               	movwf	(___fldiv@b+2)^0,c
  9735  002778  0E00               	movlw	0
  9736  00277A  6E12               	movwf	(___fldiv@b+3)^0,c
  9737  00277C  0E00               	movlw	0
  9738  00277E  6E22               	movwf	___fldiv@grs^0,c
  9739  002780  0E00               	movlw	0
  9740  002782  6E23               	movwf	(___fldiv@grs+1)^0,c
  9741  002784  0E00               	movlw	0
  9742  002786  6E24               	movwf	(___fldiv@grs+2)^0,c
  9743  002788  0E00               	movlw	0
  9744  00278A  6E25               	movwf	(___fldiv@grs+3)^0,c
  9745  00278C  0E00               	movlw	0
  9746  00278E  6E27               	movwf	___fldiv@aexp^0,c
  9747  002790  EF02  F014         	goto	l1372
  9748  002794                     l4636:
  9749  002794  5027               	movf	___fldiv@aexp^0,w,c
  9750  002796  B4D8               	btfsc	status,2,c
  9751  002798  EFD0  F013         	goto	u4691
  9752  00279C  EFD2  F013         	goto	u4690
  9753  0027A0                     u4691:
  9754  0027A0  EFE9  F013         	goto	l4644
  9755  0027A4                     u4690:
  9756  0027A4  90D8               	bcf	status,0,c
  9757  0027A6  361B               	rlcf	___fldiv@rem^0,f,c
  9758  0027A8  361C               	rlcf	(___fldiv@rem+1)^0,f,c
  9759  0027AA  361D               	rlcf	(___fldiv@rem+2)^0,f,c
  9760  0027AC  361E               	rlcf	(___fldiv@rem+3)^0,f,c
  9761  0027AE  90D8               	bcf	status,0,c
  9762  0027B0  360F               	rlcf	___fldiv@b^0,f,c
  9763  0027B2  3610               	rlcf	(___fldiv@b+1)^0,f,c
  9764  0027B4  3611               	rlcf	(___fldiv@b+2)^0,f,c
  9765  0027B6  3612               	rlcf	(___fldiv@b+3)^0,f,c
  9766  0027B8  AE25               	btfss	(___fldiv@grs+3)^0,7,c
  9767  0027BA  EFE1  F013         	goto	u4701
  9768  0027BE  EFE3  F013         	goto	u4700
  9769  0027C2                     u4701:
  9770  0027C2  EFE4  F013         	goto	l1375
  9771  0027C6                     u4700:
  9772  0027C6  800F               	bsf	___fldiv@b^0,0,c
  9773  0027C8                     l1375:
  9774  0027C8  90D8               	bcf	status,0,c
  9775  0027CA  3622               	rlcf	___fldiv@grs^0,f,c
  9776  0027CC  3623               	rlcf	(___fldiv@grs+1)^0,f,c
  9777  0027CE  3624               	rlcf	(___fldiv@grs+2)^0,f,c
  9778  0027D0  3625               	rlcf	(___fldiv@grs+3)^0,f,c
  9779  0027D2                     l4644:
  9780  0027D2  5013               	movf	___fldiv@a^0,w,c
  9781  0027D4  5C1B               	subwf	___fldiv@rem^0,w,c
  9782  0027D6  5014               	movf	(___fldiv@a+1)^0,w,c
  9783  0027D8  581C               	subwfb	(___fldiv@rem+1)^0,w,c
  9784  0027DA  5015               	movf	(___fldiv@a+2)^0,w,c
  9785  0027DC  581D               	subwfb	(___fldiv@rem+2)^0,w,c
  9786  0027DE  5016               	movf	(___fldiv@a+3)^0,w,c
  9787  0027E0  581E               	subwfb	(___fldiv@rem+3)^0,w,c
  9788  0027E2  A0D8               	btfss	status,0,c
  9789  0027E4  EFF6  F013         	goto	u4711
  9790  0027E8  EFF8  F013         	goto	u4710
  9791  0027EC                     u4711:
  9792  0027EC  EF01  F014         	goto	l4650
  9793  0027F0                     u4710:
  9794  0027F0  8C25               	bsf	(___fldiv@grs+3)^0,6,c
  9795  0027F2  5013               	movf	___fldiv@a^0,w,c
  9796  0027F4  5E1B               	subwf	___fldiv@rem^0,f,c
  9797  0027F6  5014               	movf	(___fldiv@a+1)^0,w,c
  9798  0027F8  5A1C               	subwfb	(___fldiv@rem+1)^0,f,c
  9799  0027FA  5015               	movf	(___fldiv@a+2)^0,w,c
  9800  0027FC  5A1D               	subwfb	(___fldiv@rem+2)^0,f,c
  9801  0027FE  5016               	movf	(___fldiv@a+3)^0,w,c
  9802  002800  5A1E               	subwfb	(___fldiv@rem+3)^0,f,c
  9803  002802                     l4650:
  9804  002802  2A27               	incf	___fldiv@aexp^0,f,c
  9805  002804                     l1372:
  9806  002804  0E19               	movlw	25
  9807  002806  6427               	cpfsgt	___fldiv@aexp^0,c
  9808  002808  EF08  F014         	goto	u4721
  9809  00280C  EF0A  F014         	goto	u4720
  9810  002810                     u4721:
  9811  002810  EFCA  F013         	goto	l4636
  9812  002814                     u4720:
  9813  002814  501B               	movf	___fldiv@rem^0,w,c
  9814  002816  101C               	iorwf	(___fldiv@rem+1)^0,w,c
  9815  002818  101D               	iorwf	(___fldiv@rem+2)^0,w,c
  9816  00281A  101E               	iorwf	(___fldiv@rem+3)^0,w,c
  9817  00281C  B4D8               	btfsc	status,2,c
  9818  00281E  EF13  F014         	goto	u4731
  9819  002822  EF15  F014         	goto	u4730
  9820  002826                     u4731:
  9821  002826  EF2D  F014         	goto	l4662
  9822  00282A                     u4730:
  9823  00282A  8022               	bsf	___fldiv@grs^0,0,c
  9824  00282C  EF2D  F014         	goto	l4662
  9825  002830                     l4656:
  9826  002830  90D8               	bcf	status,0,c
  9827  002832  360F               	rlcf	___fldiv@b^0,f,c
  9828  002834  3610               	rlcf	(___fldiv@b+1)^0,f,c
  9829  002836  3611               	rlcf	(___fldiv@b+2)^0,f,c
  9830  002838  3612               	rlcf	(___fldiv@b+3)^0,f,c
  9831  00283A  AE25               	btfss	(___fldiv@grs+3)^0,7,c
  9832  00283C  EF22  F014         	goto	u4741
  9833  002840  EF24  F014         	goto	u4740
  9834  002844                     u4741:
  9835  002844  EF25  F014         	goto	l1381
  9836  002848                     u4740:
  9837  002848  800F               	bsf	___fldiv@b^0,0,c
  9838  00284A                     l1381:
  9839  00284A  90D8               	bcf	status,0,c
  9840  00284C  3622               	rlcf	___fldiv@grs^0,f,c
  9841  00284E  3623               	rlcf	(___fldiv@grs+1)^0,f,c
  9842  002850  3624               	rlcf	(___fldiv@grs+2)^0,f,c
  9843  002852  3625               	rlcf	(___fldiv@grs+3)^0,f,c
  9844  002854  0620               	decf	___fldiv@new_exp^0,f,c
  9845  002856  A0D8               	btfss	status,0,c
  9846  002858  0621               	decf	(___fldiv@new_exp+1)^0,f,c
  9847  00285A                     l4662:
  9848  00285A  AE11               	btfss	(___fldiv@b+2)^0,7,c
  9849  00285C  EF32  F014         	goto	u4751
  9850  002860  EF34  F014         	goto	u4750
  9851  002864                     u4751:
  9852  002864  EF18  F014         	goto	l4656
  9853  002868                     u4750:
  9854  002868  0E00               	movlw	0
  9855  00286A  6E27               	movwf	___fldiv@aexp^0,c
  9856  00286C  AE25               	btfss	(___fldiv@grs+3)^0,7,c
  9857  00286E  EF3B  F014         	goto	u4761
  9858  002872  EF3D  F014         	goto	u4760
  9859  002876                     u4761:
  9860  002876  EF61  F014         	goto	l1383
  9861  00287A                     u4760:
  9862  00287A  0EFF               	movlw	255
  9863  00287C  1422               	andwf	___fldiv@grs^0,w,c
  9864  00287E  6E17               	movwf	??___fldiv^0,c
  9865  002880  0EFF               	movlw	255
  9866  002882  1423               	andwf	(___fldiv@grs+1)^0,w,c
  9867  002884  6E18               	movwf	(??___fldiv+1)^0,c
  9868  002886  0EFF               	movlw	255
  9869  002888  1424               	andwf	(___fldiv@grs+2)^0,w,c
  9870  00288A  6E19               	movwf	(??___fldiv+2)^0,c
  9871  00288C  0E7F               	movlw	127
  9872  00288E  1425               	andwf	(___fldiv@grs+3)^0,w,c
  9873  002890  6E1A               	movwf	(??___fldiv+3)^0,c
  9874  002892  5017               	movf	??___fldiv^0,w,c
  9875  002894  1018               	iorwf	(??___fldiv+1)^0,w,c
  9876  002896  1019               	iorwf	(??___fldiv+2)^0,w,c
  9877  002898  101A               	iorwf	(??___fldiv+3)^0,w,c
  9878  00289A  B4D8               	btfsc	status,2,c
  9879  00289C  EF52  F014         	goto	u4771
  9880  0028A0  EF54  F014         	goto	u4770
  9881  0028A4                     u4771:
  9882  0028A4  EF58  F014         	goto	l1384
  9883  0028A8                     u4770:
  9884  0028A8                     l4670:
  9885  0028A8  0E01               	movlw	1
  9886  0028AA  6E27               	movwf	___fldiv@aexp^0,c
  9887  0028AC  EF61  F014         	goto	l1383
  9888  0028B0                     l1384:
  9889  0028B0  A00F               	btfss	___fldiv@b^0,0,c
  9890  0028B2  EF5D  F014         	goto	u4781
  9891  0028B6  EF5F  F014         	goto	u4780
  9892  0028BA                     u4781:
  9893  0028BA  EF61  F014         	goto	l1383
  9894  0028BE                     u4780:
  9895  0028BE  EF54  F014         	goto	l4670
  9896  0028C2                     l1383:
  9897  0028C2  5027               	movf	___fldiv@aexp^0,w,c
  9898  0028C4  B4D8               	btfsc	status,2,c
  9899  0028C6  EF67  F014         	goto	u4791
  9900  0028CA  EF69  F014         	goto	u4790
  9901  0028CE                     u4791:
  9902  0028CE  EF8D  F014         	goto	l4682
  9903  0028D2                     u4790:
  9904  0028D2  0E01               	movlw	1
  9905  0028D4  260F               	addwf	___fldiv@b^0,f,c
  9906  0028D6  0E00               	movlw	0
  9907  0028D8  2210               	addwfc	(___fldiv@b+1)^0,f,c
  9908  0028DA  2211               	addwfc	(___fldiv@b+2)^0,f,c
  9909  0028DC  2212               	addwfc	(___fldiv@b+3)^0,f,c
  9910  0028DE  A012               	btfss	(___fldiv@b+3)^0,0,c
  9911  0028E0  EF74  F014         	goto	u4801
  9912  0028E4  EF76  F014         	goto	u4800
  9913  0028E8                     u4801:
  9914  0028E8  EF8D  F014         	goto	l4682
  9915  0028EC                     u4800:
  9916  0028EC  C00F  F017         	movff	___fldiv@b,??___fldiv
  9917  0028F0  C010  F018         	movff	___fldiv@b+1,??___fldiv+1
  9918  0028F4  C011  F019         	movff	___fldiv@b+2,??___fldiv+2
  9919  0028F8  C012  F01A         	movff	___fldiv@b+3,??___fldiv+3
  9920  0028FC  341A               	rlcf	(??___fldiv+3)^0,w,c
  9921  0028FE  321A               	rrcf	(??___fldiv+3)^0,f,c
  9922  002900  3219               	rrcf	(??___fldiv+2)^0,f,c
  9923  002902  3218               	rrcf	(??___fldiv+1)^0,f,c
  9924  002904  3217               	rrcf	??___fldiv^0,f,c
  9925  002906  C017  F00F         	movff	??___fldiv,___fldiv@b
  9926  00290A  C018  F010         	movff	??___fldiv+1,___fldiv@b+1
  9927  00290E  C019  F011         	movff	??___fldiv+2,___fldiv@b+2
  9928  002912  C01A  F012         	movff	??___fldiv+3,___fldiv@b+3
  9929  002916  4A20               	infsnz	___fldiv@new_exp^0,f,c
  9930  002918  2A21               	incf	(___fldiv@new_exp+1)^0,f,c
  9931  00291A                     l4682:
  9932  00291A  BE21               	btfsc	(___fldiv@new_exp+1)^0,7,c
  9933  00291C  EF98  F014         	goto	u4811
  9934  002920  5021               	movf	(___fldiv@new_exp+1)^0,w,c
  9935  002922  E108               	bnz	u4810
  9936  002924  2820               	incf	___fldiv@new_exp^0,w,c
  9937  002926  A0D8               	btfss	status,0,c
  9938  002928  EF98  F014         	goto	u4811
  9939  00292C  EF9A  F014         	goto	u4810
  9940  002930                     u4811:
  9941  002930  EFA5  F014         	goto	l4686
  9942  002934                     u4810:
  9943  002934  0E00               	movlw	0
  9944  002936  6E21               	movwf	(___fldiv@new_exp+1)^0,c
  9945  002938  6820               	setf	___fldiv@new_exp^0,c
  9946  00293A  0E00               	movlw	0
  9947  00293C  6E0F               	movwf	___fldiv@b^0,c
  9948  00293E  0E00               	movlw	0
  9949  002940  6E10               	movwf	(___fldiv@b+1)^0,c
  9950  002942  0E00               	movlw	0
  9951  002944  6E11               	movwf	(___fldiv@b+2)^0,c
  9952  002946  0E00               	movlw	0
  9953  002948  6E12               	movwf	(___fldiv@b+3)^0,c
  9954  00294A                     l4686:
  9955  00294A  BE21               	btfsc	(___fldiv@new_exp+1)^0,7,c
  9956  00294C  EFB2  F014         	goto	u4820
  9957  002950  5021               	movf	(___fldiv@new_exp+1)^0,w,c
  9958  002952  E106               	bnz	u4821
  9959  002954  0420               	decf	___fldiv@new_exp^0,w,c
  9960  002956  B0D8               	btfsc	status,0,c
  9961  002958  EFB0  F014         	goto	u4821
  9962  00295C  EFB2  F014         	goto	u4820
  9963  002960                     u4821:
  9964  002960  EFC0  F014         	goto	l4690
  9965  002964                     u4820:
  9966  002964  0E00               	movlw	0
  9967  002966  6E21               	movwf	(___fldiv@new_exp+1)^0,c
  9968  002968  0E00               	movlw	0
  9969  00296A  6E20               	movwf	___fldiv@new_exp^0,c
  9970  00296C  0E00               	movlw	0
  9971  00296E  6E0F               	movwf	___fldiv@b^0,c
  9972  002970  0E00               	movlw	0
  9973  002972  6E10               	movwf	(___fldiv@b+1)^0,c
  9974  002974  0E00               	movlw	0
  9975  002976  6E11               	movwf	(___fldiv@b+2)^0,c
  9976  002978  0E00               	movlw	0
  9977  00297A  6E12               	movwf	(___fldiv@b+3)^0,c
  9978  00297C  0E00               	movlw	0
  9979  00297E  6E1F               	movwf	___fldiv@sign^0,c
  9980  002980                     l4690:
  9981  002980  C020  F026         	movff	___fldiv@new_exp,___fldiv@bexp
  9982  002984  A026               	btfss	___fldiv@bexp^0,0,c
  9983  002986  EFC7  F014         	goto	u4831
  9984  00298A  EFC9  F014         	goto	u4830
  9985  00298E                     u4831:
  9986  00298E  EFCC  F014         	goto	l4696
  9987  002992                     u4830:
  9988  002992  8E11               	bsf	(___fldiv@b+2)^0,7,c
  9989  002994  EFCD  F014         	goto	l4698
  9990  002998                     l4696:
  9991  002998  9E11               	bcf	(___fldiv@b+2)^0,7,c
  9992  00299A                     l4698:
  9993  00299A  90D8               	bcf	status,0,c
  9994  00299C  3026               	rrcf	___fldiv@bexp^0,w,c
  9995  00299E  6E12               	movwf	(___fldiv@b+3)^0,c
  9996  0029A0  EF83  F013         	goto	l4612
  9997  0029A4                     l1370:
  9998  0029A4  0012               	return		;funcret
  9999  0029A6                     __end_of___fldiv:
 10000                           	callstack 0
 10001                           
 10002 ;; *************** function _LED_C *****************
 10003 ;; Defined at:
 10004 ;;		line 173 in file "color.c"
 10005 ;; Parameters:    Size  Location     Type
 10006 ;;		None
 10007 ;; Auto vars:     Size  Location     Type
 10008 ;;		None
 10009 ;; Return value:  Size  Location     Type
 10010 ;;                  1    wreg      void 
 10011 ;; Registers used:
 10012 ;;		wreg
 10013 ;; Tracked objects:
 10014 ;;		On entry : 0/0
 10015 ;;		On exit  : 0/0
 10016 ;;		Unchanged: 0/0
 10017 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10018 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10019 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10020 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10021 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10022 ;;Total ram usage:        2 bytes
 10023 ;; Hardware stack levels used: 1
 10024 ;; Hardware stack levels required when called: 1
 10025 ;; This function calls:
 10026 ;;		Nothing
 10027 ;; This function is called by:
 10028 ;;		_color_data_collection
 10029 ;;		_calibrate_white
 10030 ;;		_amb_light_measure
 10031 ;;		_distance_measure
 10032 ;;		_test_function
 10033 ;; This function uses a non-reentrant model
 10034 ;;
 10035                           
 10036                           	psect	text47
 10037  00551C                     __ptext47:
 10038                           	callstack 0
 10039  00551C                     _LED_C:
 10040                           	callstack 27
 10041  00551C                     
 10042                           ;color.c: 175:     LATGbits.LATG1 = 1;
 10043  00551C  827F               	bsf	127,1,c	;volatile
 10044                           
 10045                           ;color.c: 176:     LATFbits.LATF7 = 1;
 10046  00551E  8E7E               	bsf	126,7,c	;volatile
 10047                           
 10048                           ;color.c: 177:     LATAbits.LATA4 = 1;
 10049  005520  8879               	bsf	121,4,c	;volatile
 10050  005522                     
 10051                           ;color.c: 178:     _delay((unsigned long)((50)*(64000000/4000.0)));
 10052  005522  0E05               	movlw	5
 10053  005524  6E02               	movwf	(??_LED_C+1)^0,c
 10054  005526  0E0F               	movlw	15
 10055  005528  6E01               	movwf	??_LED_C^0,c
 10056  00552A  0EF1               	movlw	241
 10057  00552C                     u5997:
 10058  00552C  2EE8               	decfsz	wreg,f,c
 10059  00552E  D7FE               	bra	u5997
 10060  005530  2E01               	decfsz	??_LED_C^0,f,c
 10061  005532  D7FC               	bra	u5997
 10062  005534  2E02               	decfsz	(??_LED_C+1)^0,f,c
 10063  005536  D7FA               	bra	u5997
 10064  005538  F000               	nop	
 10065  00553A  0012               	return		;funcret
 10066  00553C                     __end_of_LED_C:
 10067                           	callstack 0
 10068                           
 10069 ;; *************** function _pin_init *****************
 10070 ;; Defined at:
 10071 ;;		line 89 in file "movement.c"
 10072 ;; Parameters:    Size  Location     Type
 10073 ;;		None
 10074 ;; Auto vars:     Size  Location     Type
 10075 ;;		None
 10076 ;; Return value:  Size  Location     Type
 10077 ;;                  1    wreg      void 
 10078 ;; Registers used:
 10079 ;;		None
 10080 ;; Tracked objects:
 10081 ;;		On entry : 0/0
 10082 ;;		On exit  : 0/0
 10083 ;;		Unchanged: 0/0
 10084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10085 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10086 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10087 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10088 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10089 ;;Total ram usage:        0 bytes
 10090 ;; Hardware stack levels used: 1
 10091 ;; Hardware stack levels required when called: 1
 10092 ;; This function calls:
 10093 ;;		Nothing
 10094 ;; This function is called by:
 10095 ;;		_main
 10096 ;; This function uses a non-reentrant model
 10097 ;;
 10098                           
 10099                           	psect	text48
 10100  00553C                     __ptext48:
 10101                           	callstack 0
 10102  00553C                     _pin_init:
 10103                           	callstack 29
 10104  00553C  8486               	bsf	134,2,c	;volatile
 10105                           
 10106                           ;movement.c: 91:     ANSELFbits.ANSELF2=0;
 10107  00553E  010E               	movlb	14	; () banked
 10108  005540  95B4               	bcf	180,2,b	;volatile
 10109                           
 10110                           ;movement.c: 92:     TRISFbits.TRISF3=1;
 10111  005542  8686               	bsf	134,3,c	;volatile
 10112                           
 10113                           ;movement.c: 93:     ANSELFbits.ANSELF3=0;
 10114  005544  97B4               	bcf	180,3,b	;volatile
 10115                           
 10116                           ;movement.c: 98:     TRISGbits.TRISG1 = 0;
 10117  005546  9287               	bcf	135,1,c	;volatile
 10118                           
 10119                           ;movement.c: 99:     TRISFbits.TRISF7 = 0;
 10120  005548  9E86               	bcf	134,7,c	;volatile
 10121                           
 10122                           ;movement.c: 100:     TRISAbits.TRISA4 = 0;
 10123  00554A  9881               	bcf	129,4,c	;volatile
 10124                           
 10125                           ;movement.c: 101:     LATGbits.LATG1 = 1;
 10126  00554C  827F               	bsf	127,1,c	;volatile
 10127                           
 10128                           ;movement.c: 102:     LATFbits.LATF7 = 1;
 10129  00554E  8E7E               	bsf	126,7,c	;volatile
 10130                           
 10131                           ;movement.c: 103:     LATAbits.LATA4 = 1;
 10132  005550  8879               	bsf	121,4,c	;volatile
 10133                           
 10134                           ;movement.c: 106:     TRISDbits.TRISD7 = 0;
 10135  005552  9E84               	bcf	132,7,c	;volatile
 10136                           
 10137                           ;movement.c: 107:     LATDbits.LATD7 = 0;
 10138  005554  9E7C               	bcf	124,7,c	;volatile
 10139                           
 10140                           ;movement.c: 108:     TRISHbits.TRISH3 = 0;
 10141  005556  9688               	bcf	136,3,c	;volatile
 10142                           
 10143                           ;movement.c: 109:     LATHbits.LATH3 = 0;
 10144  005558  9680               	bcf	128,3,c	;volatile
 10145  00555A                     
 10146                           ; BSR set to: 14
 10147  00555A  0012               	return		;funcret
 10148  00555C                     __end_of_pin_init:
 10149                           	callstack 0
 10150                           
 10151 ;; *************** function _initUSART4 *****************
 10152 ;; Defined at:
 10153 ;;		line 4 in file "serial.c"
 10154 ;; Parameters:    Size  Location     Type
 10155 ;;		None
 10156 ;; Auto vars:     Size  Location     Type
 10157 ;;		None
 10158 ;; Return value:  Size  Location     Type
 10159 ;;                  1    wreg      void 
 10160 ;; Registers used:
 10161 ;;		wreg, status,2
 10162 ;; Tracked objects:
 10163 ;;		On entry : 0/0
 10164 ;;		On exit  : 0/0
 10165 ;;		Unchanged: 0/0
 10166 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10167 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10168 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10169 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10170 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10171 ;;Total ram usage:        0 bytes
 10172 ;; Hardware stack levels used: 1
 10173 ;; Hardware stack levels required when called: 1
 10174 ;; This function calls:
 10175 ;;		Nothing
 10176 ;; This function is called by:
 10177 ;;		_main
 10178 ;; This function uses a non-reentrant model
 10179 ;;
 10180                           
 10181                           	psect	text49
 10182  00557C                     __ptext49:
 10183                           	callstack 0
 10184  00557C                     _initUSART4:
 10185                           	callstack 29
 10186  00557C                     
 10187                           ;serial.c: 8:     RC0PPS = 0x12;
 10188  00557C  0E12               	movlw	18
 10189  00557E  010E               	movlb	14	; () banked
 10190  005580  6F62               	movwf	98,b	;volatile
 10191                           
 10192                           ;serial.c: 9:     RX4PPS = 0x11;
 10193  005582  0E11               	movlw	17
 10194  005584  6F15               	movwf	21,b	;volatile
 10195  005586                     
 10196                           ; BSR set to: 14
 10197                           ;serial.c: 11:     BAUD4CONbits.BRG16 = 0;
 10198  005586  97E9               	bcf	233,3,b	;volatile
 10199  005588                     
 10200                           ; BSR set to: 14
 10201                           ;serial.c: 12:     TX4STAbits.BRGH = 0;
 10202  005588  95E8               	bcf	232,2,b	;volatile
 10203                           
 10204                           ;serial.c: 13:     SP4BRGL = 51;
 10205  00558A  0E33               	movlw	51
 10206  00558C  6FE5               	movwf	229,b	;volatile
 10207                           
 10208                           ;serial.c: 15:     SP4BRGH = 0;
 10209  00558E  0E00               	movlw	0
 10210  005590  6FE6               	movwf	230,b	;volatile
 10211  005592                     
 10212                           ; BSR set to: 14
 10213                           ;serial.c: 17:     RC4STAbits.CREN = 1;
 10214  005592  89E7               	bsf	231,4,b	;volatile
 10215  005594                     
 10216                           ; BSR set to: 14
 10217                           ;serial.c: 18:     TX4STAbits.TXEN = 1;
 10218  005594  8BE8               	bsf	232,5,b	;volatile
 10219  005596                     
 10220                           ; BSR set to: 14
 10221                           ;serial.c: 19:     RC4STAbits.SPEN = 1;
 10222  005596  8FE7               	bsf	231,7,b	;volatile
 10223  005598                     
 10224                           ; BSR set to: 14
 10225  005598  0012               	return		;funcret
 10226  00559A                     __end_of_initUSART4:
 10227                           	callstack 0
 10228                           
 10229 ;; *************** function _initDCmotors_parameter *****************
 10230 ;; Defined at:
 10231 ;;		line 40 in file "dc_motor.c"
 10232 ;; Parameters:    Size  Location     Type
 10233 ;;  motorL          2    0[COMRAM] PTR struct DC_motor
 10234 ;;		 -> main@motorL(10), 
 10235 ;;  motorR          2    2[COMRAM] PTR struct DC_motor
 10236 ;;		 -> main@motorR(10), 
 10237 ;; Auto vars:     Size  Location     Type
 10238 ;;		None
 10239 ;; Return value:  Size  Location     Type
 10240 ;;                  1    wreg      void 
 10241 ;; Registers used:
 10242 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10243 ;; Tracked objects:
 10244 ;;		On entry : 0/0
 10245 ;;		On exit  : 0/0
 10246 ;;		Unchanged: 0/0
 10247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10248 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10249 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10250 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10251 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10252 ;;Total ram usage:        4 bytes
 10253 ;; Hardware stack levels used: 1
 10254 ;; Hardware stack levels required when called: 1
 10255 ;; This function calls:
 10256 ;;		Nothing
 10257 ;; This function is called by:
 10258 ;;		_main
 10259 ;; This function uses a non-reentrant model
 10260 ;;
 10261                           
 10262                           	psect	text50
 10263  00471A                     __ptext50:
 10264                           	callstack 0
 10265  00471A                     _initDCmotors_parameter:
 10266                           	callstack 29
 10267  00471A                     
 10268                           ;dc_motor.c: 42:     motorL->power = 0;
 10269  00471A  C001  FFD9         	movff	initDCmotors_parameter@motorL,fsr2l
 10270  00471E  C002  FFDA         	movff	initDCmotors_parameter@motorL+1,fsr2h
 10271  004722  0E00               	movlw	0
 10272  004724  6EDF               	movwf	indf2,c
 10273  004726                     
 10274                           ;dc_motor.c: 43:     motorL->direction = 1;
 10275  004726  EE20 F001          	lfsr	2,1
 10276  00472A  5001               	movf	initDCmotors_parameter@motorL^0,w,c
 10277  00472C  26D9               	addwf	fsr2l,f,c
 10278  00472E  5002               	movf	(initDCmotors_parameter@motorL+1)^0,w,c
 10279  004730  22DA               	addwfc	fsr2h,f,c
 10280  004732  0E01               	movlw	1
 10281  004734  6EDF               	movwf	indf2,c
 10282  004736                     
 10283                           ;dc_motor.c: 44:     motorL->dutyHighByte = (unsigned char *)(&PWM6DCH);
 10284  004736  EE20 F002          	lfsr	2,2
 10285  00473A  5001               	movf	initDCmotors_parameter@motorL^0,w,c
 10286  00473C  26D9               	addwf	fsr2l,f,c
 10287  00473E  5002               	movf	(initDCmotors_parameter@motorL+1)^0,w,c
 10288  004740  22DA               	addwfc	fsr2h,f,c
 10289  004742  0EA3               	movlw	163
 10290  004744  6EDE               	movwf	postinc2,c
 10291  004746  0E0F               	movlw	15
 10292  004748  6EDD               	movwf	postdec2,c
 10293  00474A                     
 10294                           ;dc_motor.c: 45:     motorL->dir_LAT = (unsigned char *)(&LATE);
 10295  00474A  EE20 F004          	lfsr	2,4
 10296  00474E  5001               	movf	initDCmotors_parameter@motorL^0,w,c
 10297  004750  26D9               	addwf	fsr2l,f,c
 10298  004752  5002               	movf	(initDCmotors_parameter@motorL+1)^0,w,c
 10299  004754  22DA               	addwfc	fsr2h,f,c
 10300  004756  0E7D               	movlw	125
 10301  004758  6EDE               	movwf	postinc2,c
 10302  00475A  0E0F               	movlw	15
 10303  00475C  6EDD               	movwf	postdec2,c
 10304  00475E                     
 10305                           ;dc_motor.c: 46:     motorL->dir_pin = 4;
 10306  00475E  EE20 F006          	lfsr	2,6
 10307  004762  5001               	movf	initDCmotors_parameter@motorL^0,w,c
 10308  004764  26D9               	addwf	fsr2l,f,c
 10309  004766  5002               	movf	(initDCmotors_parameter@motorL+1)^0,w,c
 10310  004768  22DA               	addwfc	fsr2h,f,c
 10311  00476A  0E04               	movlw	4
 10312  00476C  6EDF               	movwf	indf2,c
 10313  00476E                     
 10314                           ;dc_motor.c: 47:     motorL->PWMperiod = 199;
 10315  00476E  EE20 F007          	lfsr	2,7
 10316  004772  5001               	movf	initDCmotors_parameter@motorL^0,w,c
 10317  004774  26D9               	addwf	fsr2l,f,c
 10318  004776  5002               	movf	(initDCmotors_parameter@motorL+1)^0,w,c
 10319  004778  22DA               	addwfc	fsr2h,f,c
 10320  00477A  0EC7               	movlw	199
 10321  00477C  6EDE               	movwf	postinc2,c
 10322  00477E  0E00               	movlw	0
 10323  004780  6EDD               	movwf	postdec2,c
 10324  004782                     
 10325                           ;dc_motor.c: 50:     motorR->power = 0;
 10326  004782  C003  FFD9         	movff	initDCmotors_parameter@motorR,fsr2l
 10327  004786  C004  FFDA         	movff	initDCmotors_parameter@motorR+1,fsr2h
 10328  00478A  0E00               	movlw	0
 10329  00478C  6EDF               	movwf	indf2,c
 10330                           
 10331                           ;dc_motor.c: 51:     motorR->direction = 1;
 10332  00478E  EE20 F001          	lfsr	2,1
 10333  004792  5003               	movf	initDCmotors_parameter@motorR^0,w,c
 10334  004794  26D9               	addwf	fsr2l,f,c
 10335  004796  5004               	movf	(initDCmotors_parameter@motorR+1)^0,w,c
 10336  004798  22DA               	addwfc	fsr2h,f,c
 10337  00479A  0E01               	movlw	1
 10338  00479C  6EDF               	movwf	indf2,c
 10339                           
 10340                           ;dc_motor.c: 52:     motorR->dutyHighByte = (unsigned char *)(&PWM7DCH);
 10341  00479E  EE20 F002          	lfsr	2,2
 10342  0047A2  5003               	movf	initDCmotors_parameter@motorR^0,w,c
 10343  0047A4  26D9               	addwf	fsr2l,f,c
 10344  0047A6  5004               	movf	(initDCmotors_parameter@motorR+1)^0,w,c
 10345  0047A8  22DA               	addwfc	fsr2h,f,c
 10346  0047AA  0EA0               	movlw	160
 10347  0047AC  6EDE               	movwf	postinc2,c
 10348  0047AE  0E0F               	movlw	15
 10349  0047B0  6EDD               	movwf	postdec2,c
 10350                           
 10351                           ;dc_motor.c: 53:     motorR->dir_LAT = (unsigned char *)(&LATG);
 10352  0047B2  EE20 F004          	lfsr	2,4
 10353  0047B6  5003               	movf	initDCmotors_parameter@motorR^0,w,c
 10354  0047B8  26D9               	addwf	fsr2l,f,c
 10355  0047BA  5004               	movf	(initDCmotors_parameter@motorR+1)^0,w,c
 10356  0047BC  22DA               	addwfc	fsr2h,f,c
 10357  0047BE  0E7F               	movlw	127
 10358  0047C0  6EDE               	movwf	postinc2,c
 10359  0047C2  0E0F               	movlw	15
 10360  0047C4  6EDD               	movwf	postdec2,c
 10361                           
 10362                           ;dc_motor.c: 54:     motorR->dir_pin = 6;
 10363  0047C6  EE20 F006          	lfsr	2,6
 10364  0047CA  5003               	movf	initDCmotors_parameter@motorR^0,w,c
 10365  0047CC  26D9               	addwf	fsr2l,f,c
 10366  0047CE  5004               	movf	(initDCmotors_parameter@motorR+1)^0,w,c
 10367  0047D0  22DA               	addwfc	fsr2h,f,c
 10368  0047D2  0E06               	movlw	6
 10369  0047D4  6EDF               	movwf	indf2,c
 10370                           
 10371                           ;dc_motor.c: 55:     motorR->PWMperiod = 199;
 10372  0047D6  EE20 F007          	lfsr	2,7
 10373  0047DA  5003               	movf	initDCmotors_parameter@motorR^0,w,c
 10374  0047DC  26D9               	addwf	fsr2l,f,c
 10375  0047DE  5004               	movf	(initDCmotors_parameter@motorR+1)^0,w,c
 10376  0047E0  22DA               	addwfc	fsr2h,f,c
 10377  0047E2  0EC7               	movlw	199
 10378  0047E4  6EDE               	movwf	postinc2,c
 10379  0047E6  0E00               	movlw	0
 10380  0047E8  6EDD               	movwf	postdec2,c
 10381  0047EA  0012               	return		;funcret
 10382  0047EC                     __end_of_initDCmotors_parameter:
 10383                           	callstack 0
 10384                           
 10385 ;; *************** function _initDCmotorsPWM *****************
 10386 ;; Defined at:
 10387 ;;		line 10 in file "dc_motor.c"
 10388 ;; Parameters:    Size  Location     Type
 10389 ;;  PWMperiod       2    0[COMRAM] int 
 10390 ;; Auto vars:     Size  Location     Type
 10391 ;;		None
 10392 ;; Return value:  Size  Location     Type
 10393 ;;                  1    wreg      void 
 10394 ;; Registers used:
 10395 ;;		wreg, status,2
 10396 ;; Tracked objects:
 10397 ;;		On entry : 0/0
 10398 ;;		On exit  : 0/0
 10399 ;;		Unchanged: 0/0
 10400 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10401 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10402 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10403 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10404 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10405 ;;Total ram usage:        2 bytes
 10406 ;; Hardware stack levels used: 1
 10407 ;; Hardware stack levels required when called: 1
 10408 ;; This function calls:
 10409 ;;		Nothing
 10410 ;; This function is called by:
 10411 ;;		_main
 10412 ;; This function uses a non-reentrant model
 10413 ;;
 10414                           
 10415                           	psect	text51
 10416  0051AA                     __ptext51:
 10417                           	callstack 0
 10418  0051AA                     _initDCmotorsPWM:
 10419                           	callstack 29
 10420  0051AA                     
 10421                           ;dc_motor.c: 13:     TRISEbits.TRISE2=0;
 10422  0051AA  9485               	bcf	133,2,c	;volatile
 10423                           
 10424                           ;dc_motor.c: 14:     TRISCbits.TRISC7=0;
 10425  0051AC  9E83               	bcf	131,7,c	;volatile
 10426                           
 10427                           ;dc_motor.c: 15:     TRISGbits.TRISG6=0;
 10428  0051AE  9C87               	bcf	135,6,c	;volatile
 10429                           
 10430                           ;dc_motor.c: 16:     TRISEbits.TRISE4=0;
 10431  0051B0  9885               	bcf	133,4,c	;volatile
 10432                           
 10433                           ;dc_motor.c: 17:     LATEbits.LATE2=0;
 10434  0051B2  947D               	bcf	125,2,c	;volatile
 10435                           
 10436                           ;dc_motor.c: 18:     LATCbits.LATC7=0;
 10437  0051B4  9E7B               	bcf	123,7,c	;volatile
 10438                           
 10439                           ;dc_motor.c: 19:     LATGbits.LATG6=0;
 10440  0051B6  9C7F               	bcf	127,6,c	;volatile
 10441                           
 10442                           ;dc_motor.c: 20:     LATEbits.LATE4=0;
 10443  0051B8  987D               	bcf	125,4,c	;volatile
 10444  0051BA                     
 10445                           ;dc_motor.c: 23:     T2CONbits.CKPS=0b011;
 10446  0051BA  50BD               	movf	189,w,c	;volatile
 10447  0051BC  0B8F               	andlw	-113
 10448  0051BE  0930               	iorlw	48
 10449  0051C0  6EBD               	movwf	189,c	;volatile
 10450                           
 10451                           ;dc_motor.c: 24:     T2HLTbits.MODE=0b00000;
 10452  0051C2  0EE0               	movlw	-32
 10453  0051C4  16BE               	andwf	190,f,c	;volatile
 10454                           
 10455                           ;dc_motor.c: 25:     T2CLKCONbits.CS=0b0001;
 10456  0051C6  50BF               	movf	191,w,c	;volatile
 10457  0051C8  0BF0               	andlw	-16
 10458  0051CA  0901               	iorlw	1
 10459  0051CC  6EBF               	movwf	191,c	;volatile
 10460                           
 10461                           ;dc_motor.c: 28:     T2PR=200-1;
 10462  0051CE  0EC7               	movlw	199
 10463  0051D0  6EBC               	movwf	188,c	;volatile
 10464  0051D2                     
 10465                           ;dc_motor.c: 29:     T2CONbits.ON=1;
 10466  0051D2  8EBD               	bsf	189,7,c	;volatile
 10467                           
 10468                           ;dc_motor.c: 31:     RE2PPS=0x0A;
 10469  0051D4  0E0A               	movlw	10
 10470  0051D6  010E               	movlb	14	; () banked
 10471  0051D8  6F74               	movwf	116,b	;volatile
 10472                           
 10473                           ;dc_motor.c: 32:     RC7PPS=0x0B;
 10474  0051DA  0E0B               	movlw	11
 10475  0051DC  6F69               	movwf	105,b	;volatile
 10476                           
 10477                           ;dc_motor.c: 34:     PWM6DCH=0;
 10478  0051DE  0E00               	movlw	0
 10479  0051E0  6EA3               	movwf	163,c	;volatile
 10480                           
 10481                           ;dc_motor.c: 35:     PWM7DCH=0;
 10482  0051E2  0E00               	movlw	0
 10483  0051E4  6EA0               	movwf	160,c	;volatile
 10484  0051E6                     
 10485                           ; BSR set to: 14
 10486                           ;dc_motor.c: 37:     PWM6CONbits.EN = 1;
 10487  0051E6  8EA4               	bsf	164,7,c	;volatile
 10488  0051E8                     
 10489                           ; BSR set to: 14
 10490                           ;dc_motor.c: 38:     PWM7CONbits.EN = 1;
 10491  0051E8  8EA1               	bsf	161,7,c	;volatile
 10492  0051EA                     
 10493                           ; BSR set to: 14
 10494  0051EA  0012               	return		;funcret
 10495  0051EC                     __end_of_initDCmotorsPWM:
 10496                           	callstack 0
 10497                           
 10498 ;; *************** function _color_click_init *****************
 10499 ;; Defined at:
 10500 ;;		line 67 in file "color.c"
 10501 ;; Parameters:    Size  Location     Type
 10502 ;;		None
 10503 ;; Auto vars:     Size  Location     Type
 10504 ;;		None
 10505 ;; Return value:  Size  Location     Type
 10506 ;;                  1    wreg      void 
 10507 ;; Registers used:
 10508 ;;		wreg, status,2, status,0, cstack
 10509 ;; Tracked objects:
 10510 ;;		On entry : 0/0
 10511 ;;		On exit  : 0/0
 10512 ;;		Unchanged: 0/0
 10513 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10514 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10515 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10516 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10517 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10518 ;;Total ram usage:        1 bytes
 10519 ;; Hardware stack levels used: 1
 10520 ;; Hardware stack levels required when called: 4
 10521 ;; This function calls:
 10522 ;;		_I2C_2_Master_Init
 10523 ;;		_color_writetoaddr
 10524 ;; This function is called by:
 10525 ;;		_main
 10526 ;; This function uses a non-reentrant model
 10527 ;;
 10528                           
 10529                           	psect	text52
 10530  005392                     __ptext52:
 10531                           	callstack 0
 10532  005392                     _color_click_init:
 10533                           	callstack 26
 10534  005392                     
 10535                           ;color.c: 70:     I2C_2_Master_Init();
 10536  005392  EC12  F02A         	call	_I2C_2_Master_Init	;wreg free
 10537  005396                     
 10538                           ;color.c: 73:  color_writetoaddr(0x00, 0x01);
 10539  005396  0E01               	movlw	1
 10540  005398  6E03               	movwf	color_writetoaddr@value^0,c
 10541  00539A  0E00               	movlw	0
 10542  00539C  ECAE  F02A         	call	_color_writetoaddr
 10543  0053A0                     
 10544                           ;color.c: 74:     _delay((unsigned long)((3)*(64000000/4000.0)));
 10545  0053A0  0E3F               	movlw	63
 10546  0053A2  6E05               	movwf	??_color_click_init^0,c
 10547  0053A4  0E55               	movlw	85
 10548  0053A6                     u6007:
 10549  0053A6  2EE8               	decfsz	wreg,f,c
 10550  0053A8  D7FE               	bra	u6007
 10551  0053AA  2E05               	decfsz	??_color_click_init^0,f,c
 10552  0053AC  D7FC               	bra	u6007
 10553  0053AE  F000               	nop	
 10554  0053B0                     
 10555                           ;color.c: 77:  color_writetoaddr(0x00, 0x03);
 10556  0053B0  0E03               	movlw	3
 10557  0053B2  6E03               	movwf	color_writetoaddr@value^0,c
 10558  0053B4  0E00               	movlw	0
 10559  0053B6  ECAE  F02A         	call	_color_writetoaddr
 10560  0053BA                     
 10561                           ;color.c: 80:  color_writetoaddr(0x01, 0xD5);
 10562  0053BA  0ED5               	movlw	213
 10563  0053BC  6E03               	movwf	color_writetoaddr@value^0,c
 10564  0053BE  0E01               	movlw	1
 10565  0053C0  ECAE  F02A         	call	_color_writetoaddr
 10566  0053C4  0012               	return		;funcret
 10567  0053C6                     __end_of_color_click_init:
 10568                           	callstack 0
 10569                           
 10570 ;; *************** function _color_writetoaddr *****************
 10571 ;; Defined at:
 10572 ;;		line 83 in file "color.c"
 10573 ;; Parameters:    Size  Location     Type
 10574 ;;  address         1    wreg     unsigned char 
 10575 ;;  value           1    2[COMRAM] unsigned char 
 10576 ;; Auto vars:     Size  Location     Type
 10577 ;;  address         1    3[COMRAM] unsigned char 
 10578 ;; Return value:  Size  Location     Type
 10579 ;;                  1    wreg      void 
 10580 ;; Registers used:
 10581 ;;		wreg, status,2, status,0, cstack
 10582 ;; Tracked objects:
 10583 ;;		On entry : 0/0
 10584 ;;		On exit  : 0/0
 10585 ;;		Unchanged: 0/0
 10586 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10587 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10588 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10589 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10590 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10591 ;;Total ram usage:        2 bytes
 10592 ;; Hardware stack levels used: 1
 10593 ;; Hardware stack levels required when called: 3
 10594 ;; This function calls:
 10595 ;;		_I2C_2_Master_Start
 10596 ;;		_I2C_2_Master_Stop
 10597 ;;		_I2C_2_Master_Write
 10598 ;; This function is called by:
 10599 ;;		_color_click_init
 10600 ;; This function uses a non-reentrant model
 10601 ;;
 10602                           
 10603                           	psect	text53
 10604  00555C                     __ptext53:
 10605                           	callstack 0
 10606  00555C                     _color_writetoaddr:
 10607                           	callstack 26
 10608                           
 10609                           ;incstack = 0
 10610                           ;color_writetoaddr@address stored from wreg
 10611  00555C  6E04               	movwf	color_writetoaddr@address^0,c
 10612  00555E                     
 10613                           ;color.c: 84:     I2C_2_Master_Start();
 10614  00555E  EC09  F02B         	call	_I2C_2_Master_Start	;wreg free
 10615                           
 10616                           ;color.c: 85:     I2C_2_Master_Write(0x52 | 0x00);
 10617  005562  0E52               	movlw	82
 10618  005564  ECF3  F02A         	call	_I2C_2_Master_Write
 10619                           
 10620                           ;color.c: 86:     I2C_2_Master_Write(0x80 | address);
 10621  005568  5004               	movf	color_writetoaddr@address^0,w,c
 10622  00556A  0980               	iorlw	128
 10623  00556C  ECF3  F02A         	call	_I2C_2_Master_Write
 10624                           
 10625                           ;color.c: 87:     I2C_2_Master_Write(value);
 10626  005570  5003               	movf	color_writetoaddr@value^0,w,c
 10627  005572  ECF3  F02A         	call	_I2C_2_Master_Write
 10628                           
 10629                           ;color.c: 88:     I2C_2_Master_Stop();
 10630  005576  EC04  F02B         	call	_I2C_2_Master_Stop	;wreg free
 10631  00557A  0012               	return		;funcret
 10632  00557C                     __end_of_color_writetoaddr:
 10633                           	callstack 0
 10634                           
 10635 ;; *************** function _I2C_2_Master_Write *****************
 10636 ;; Defined at:
 10637 ;;		line 45 in file "i2c.c"
 10638 ;; Parameters:    Size  Location     Type
 10639 ;;  data_byte       1    wreg     unsigned char 
 10640 ;; Auto vars:     Size  Location     Type
 10641 ;;  data_byte       1    1[COMRAM] unsigned char 
 10642 ;; Return value:  Size  Location     Type
 10643 ;;                  1    wreg      void 
 10644 ;; Registers used:
 10645 ;;		wreg, status,2, status,0, cstack
 10646 ;; Tracked objects:
 10647 ;;		On entry : 0/0
 10648 ;;		On exit  : 0/0
 10649 ;;		Unchanged: 0/0
 10650 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10651 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10652 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10653 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10654 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10655 ;;Total ram usage:        1 bytes
 10656 ;; Hardware stack levels used: 1
 10657 ;; Hardware stack levels required when called: 2
 10658 ;; This function calls:
 10659 ;;		_I2C_2_Master_Idle
 10660 ;; This function is called by:
 10661 ;;		_color_writetoaddr
 10662 ;;		_color_read_Red
 10663 ;;		_color_read_Blue
 10664 ;;		_color_read_Green
 10665 ;;		_color_read_Clear
 10666 ;; This function uses a non-reentrant model
 10667 ;;
 10668                           
 10669                           	psect	text54
 10670  0055E6                     __ptext54:
 10671                           	callstack 0
 10672  0055E6                     _I2C_2_Master_Write:
 10673                           	callstack 24
 10674                           
 10675                           ;incstack = 0
 10676                           ;I2C_2_Master_Write@data_byte stored from wreg
 10677  0055E6  6E02               	movwf	I2C_2_Master_Write@data_byte^0,c
 10678  0055E8                     
 10679                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
 10680  0055E8  EC27  F02A         	call	_I2C_2_Master_Idle	;wreg free
 10681  0055EC                     
 10682                           ;i2c.c: 48:   SSP2BUF = data_byte;
 10683  0055EC  C002  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
 10684  0055F0  0012               	return		;funcret
 10685  0055F2                     __end_of_I2C_2_Master_Write:
 10686                           	callstack 0
 10687                           
 10688 ;; *************** function _I2C_2_Master_Stop *****************
 10689 ;; Defined at:
 10690 ;;		line 39 in file "i2c.c"
 10691 ;; Parameters:    Size  Location     Type
 10692 ;;		None
 10693 ;; Auto vars:     Size  Location     Type
 10694 ;;		None
 10695 ;; Return value:  Size  Location     Type
 10696 ;;                  1    wreg      void 
 10697 ;; Registers used:
 10698 ;;		wreg, status,2, status,0, cstack
 10699 ;; Tracked objects:
 10700 ;;		On entry : 0/0
 10701 ;;		On exit  : 0/0
 10702 ;;		Unchanged: 0/0
 10703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10704 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10705 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10706 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10707 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10708 ;;Total ram usage:        0 bytes
 10709 ;; Hardware stack levels used: 1
 10710 ;; Hardware stack levels required when called: 2
 10711 ;; This function calls:
 10712 ;;		_I2C_2_Master_Idle
 10713 ;; This function is called by:
 10714 ;;		_color_writetoaddr
 10715 ;;		_color_read_Red
 10716 ;;		_color_read_Blue
 10717 ;;		_color_read_Green
 10718 ;;		_color_read_Clear
 10719 ;; This function uses a non-reentrant model
 10720 ;;
 10721                           
 10722                           	psect	text55
 10723  005608                     __ptext55:
 10724                           	callstack 0
 10725  005608                     _I2C_2_Master_Stop:
 10726                           	callstack 24
 10727  005608                     
 10728                           ;i2c.c: 41:   I2C_2_Master_Idle();
 10729  005608  EC27  F02A         	call	_I2C_2_Master_Idle	;wreg free
 10730  00560C                     
 10731                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
 10732  00560C  010E               	movlb	14	; () banked
 10733  00560E  85DA               	bsf	218,2,b	;volatile
 10734  005610                     
 10735                           ; BSR set to: 14
 10736  005610  0012               	return		;funcret
 10737  005612                     __end_of_I2C_2_Master_Stop:
 10738                           	callstack 0
 10739                           
 10740 ;; *************** function _I2C_2_Master_Start *****************
 10741 ;; Defined at:
 10742 ;;		line 27 in file "i2c.c"
 10743 ;; Parameters:    Size  Location     Type
 10744 ;;		None
 10745 ;; Auto vars:     Size  Location     Type
 10746 ;;		None
 10747 ;; Return value:  Size  Location     Type
 10748 ;;                  1    wreg      void 
 10749 ;; Registers used:
 10750 ;;		wreg, status,2, status,0, cstack
 10751 ;; Tracked objects:
 10752 ;;		On entry : 0/0
 10753 ;;		On exit  : 0/0
 10754 ;;		Unchanged: 0/0
 10755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10756 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10757 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10758 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10759 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10760 ;;Total ram usage:        0 bytes
 10761 ;; Hardware stack levels used: 1
 10762 ;; Hardware stack levels required when called: 2
 10763 ;; This function calls:
 10764 ;;		_I2C_2_Master_Idle
 10765 ;; This function is called by:
 10766 ;;		_color_writetoaddr
 10767 ;;		_color_read_Red
 10768 ;;		_color_read_Blue
 10769 ;;		_color_read_Green
 10770 ;;		_color_read_Clear
 10771 ;; This function uses a non-reentrant model
 10772 ;;
 10773                           
 10774                           	psect	text56
 10775  005612                     __ptext56:
 10776                           	callstack 0
 10777  005612                     _I2C_2_Master_Start:
 10778                           	callstack 24
 10779  005612                     
 10780                           ;i2c.c: 29:   I2C_2_Master_Idle();
 10781  005612  EC27  F02A         	call	_I2C_2_Master_Idle	;wreg free
 10782  005616                     
 10783                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
 10784  005616  010E               	movlb	14	; () banked
 10785  005618  81DA               	bsf	218,0,b	;volatile
 10786  00561A                     
 10787                           ; BSR set to: 14
 10788  00561A  0012               	return		;funcret
 10789  00561C                     __end_of_I2C_2_Master_Start:
 10790                           	callstack 0
 10791                           
 10792 ;; *************** function _I2C_2_Master_Idle *****************
 10793 ;; Defined at:
 10794 ;;		line 22 in file "i2c.c"
 10795 ;; Parameters:    Size  Location     Type
 10796 ;;		None
 10797 ;; Auto vars:     Size  Location     Type
 10798 ;;		None
 10799 ;; Return value:  Size  Location     Type
 10800 ;;                  1    wreg      void 
 10801 ;; Registers used:
 10802 ;;		wreg, status,2, status,0
 10803 ;; Tracked objects:
 10804 ;;		On entry : 0/0
 10805 ;;		On exit  : 0/0
 10806 ;;		Unchanged: 0/0
 10807 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10808 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10809 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10810 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10811 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10812 ;;Total ram usage:        1 bytes
 10813 ;; Hardware stack levels used: 1
 10814 ;; Hardware stack levels required when called: 1
 10815 ;; This function calls:
 10816 ;;		Nothing
 10817 ;; This function is called by:
 10818 ;;		_I2C_2_Master_Start
 10819 ;;		_I2C_2_Master_RepStart
 10820 ;;		_I2C_2_Master_Stop
 10821 ;;		_I2C_2_Master_Write
 10822 ;;		_I2C_2_Master_Read
 10823 ;; This function uses a non-reentrant model
 10824 ;;
 10825                           
 10826                           	psect	text57
 10827  00544E                     __ptext57:
 10828                           	callstack 0
 10829  00544E                     _I2C_2_Master_Idle:
 10830                           	callstack 24
 10831  00544E                     l215:
 10832  00544E  010E               	movlb	14	; () banked
 10833  005450  B5D8               	btfsc	216,2,b	;volatile
 10834  005452  EF2D  F02A         	goto	u3261
 10835  005456  EF2F  F02A         	goto	u3260
 10836  00545A                     u3261:
 10837  00545A  EF27  F02A         	goto	l215
 10838  00545E                     u3260:
 10839  00545E                     
 10840                           ; BSR set to: 14
 10841  00545E  CEDA F001          	movff	3802,??_I2C_2_Master_Idle	;volatile
 10842  005462  0E1F               	movlw	31
 10843  005464  1601               	andwf	??_I2C_2_Master_Idle^0,f,c
 10844  005466  A4D8               	btfss	status,2,c
 10845  005468  EF38  F02A         	goto	u3271
 10846  00546C  EF3A  F02A         	goto	u3270
 10847  005470                     u3271:
 10848  005470  EF27  F02A         	goto	l215
 10849  005474                     u3270:
 10850  005474                     
 10851                           ; BSR set to: 14
 10852  005474  0012               	return		;funcret
 10853  005476                     __end_of_I2C_2_Master_Idle:
 10854                           	callstack 0
 10855                           
 10856 ;; *************** function _I2C_2_Master_Init *****************
 10857 ;; Defined at:
 10858 ;;		line 4 in file "i2c.c"
 10859 ;; Parameters:    Size  Location     Type
 10860 ;;		None
 10861 ;; Auto vars:     Size  Location     Type
 10862 ;;		None
 10863 ;; Return value:  Size  Location     Type
 10864 ;;                  1    wreg      void 
 10865 ;; Registers used:
 10866 ;;		wreg, status,2
 10867 ;; Tracked objects:
 10868 ;;		On entry : 0/0
 10869 ;;		On exit  : 0/0
 10870 ;;		Unchanged: 0/0
 10871 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10872 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10873 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10874 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10875 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10876 ;;Total ram usage:        0 bytes
 10877 ;; Hardware stack levels used: 1
 10878 ;; Hardware stack levels required when called: 1
 10879 ;; This function calls:
 10880 ;;		Nothing
 10881 ;; This function is called by:
 10882 ;;		_color_click_init
 10883 ;;		_main
 10884 ;; This function uses a non-reentrant model
 10885 ;;
 10886                           
 10887                           	psect	text58
 10888  005424                     __ptext58:
 10889                           	callstack 0
 10890  005424                     _I2C_2_Master_Init:
 10891                           	callstack 28
 10892  005424                     
 10893                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
 10894  005424  010E               	movlb	14	; () banked
 10895  005426  51D9               	movf	217,w,b	;volatile
 10896  005428  0BF0               	andlw	-16
 10897  00542A  0908               	iorlw	8
 10898  00542C  6FD9               	movwf	217,b	;volatile
 10899  00542E                     
 10900                           ; BSR set to: 14
 10901                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
 10902  00542E  8BD9               	bsf	217,5,b	;volatile
 10903                           
 10904                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
 10905  005430  0E9F               	movlw	159
 10906  005432  6FD6               	movwf	214,b	;volatile
 10907  005434                     
 10908                           ; BSR set to: 14
 10909                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
 10910  005434  8A84               	bsf	132,5,c	;volatile
 10911  005436                     
 10912                           ; BSR set to: 14
 10913                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
 10914  005436  8C84               	bsf	132,6,c	;volatile
 10915  005438                     
 10916                           ; BSR set to: 14
 10917                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
 10918  005438  9BA7               	bcf	167,5,b	;volatile
 10919  00543A                     
 10920                           ; BSR set to: 14
 10921                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
 10922  00543A  9DA7               	bcf	167,6,b	;volatile
 10923                           
 10924                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
 10925  00543C  0E1D               	movlw	29
 10926  00543E  6F1D               	movwf	29,b	;volatile
 10927                           
 10928                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
 10929  005440  0E1E               	movlw	30
 10930  005442  6F1C               	movwf	28,b	;volatile
 10931                           
 10932                           ;i2c.c: 18:   RD5PPS=0x1C;
 10933  005444  0E1C               	movlw	28
 10934  005446  6F6F               	movwf	111,b	;volatile
 10935                           
 10936                           ;i2c.c: 19:   RD6PPS=0x1B;
 10937  005448  0E1B               	movlw	27
 10938  00544A  6F70               	movwf	112,b	;volatile
 10939  00544C                     
 10940                           ; BSR set to: 14
 10941  00544C  0012               	return		;funcret
 10942  00544E                     __end_of_I2C_2_Master_Init:
 10943                           	callstack 0
 10944                           
 10945 ;; *************** function _buggylight_init *****************
 10946 ;; Defined at:
 10947 ;;		line 13 in file "color.c"
 10948 ;; Parameters:    Size  Location     Type
 10949 ;;		None
 10950 ;; Auto vars:     Size  Location     Type
 10951 ;;		None
 10952 ;; Return value:  Size  Location     Type
 10953 ;;                  1    wreg      void 
 10954 ;; Registers used:
 10955 ;;		None
 10956 ;; Tracked objects:
 10957 ;;		On entry : 0/0
 10958 ;;		On exit  : 0/0
 10959 ;;		Unchanged: 0/0
 10960 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10961 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10962 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10963 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10964 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10965 ;;Total ram usage:        0 bytes
 10966 ;; Hardware stack levels used: 1
 10967 ;; Hardware stack levels required when called: 1
 10968 ;; This function calls:
 10969 ;;		Nothing
 10970 ;; This function is called by:
 10971 ;;		_main
 10972 ;; This function uses a non-reentrant model
 10973 ;;
 10974                           
 10975                           	psect	text59
 10976  0055D0                     __ptext59:
 10977                           	callstack 0
 10978  0055D0                     _buggylight_init:
 10979                           	callstack 29
 10980  0055D0                     
 10981                           ;color.c: 15:     TRISHbits.TRISH1=0;
 10982  0055D0  9288               	bcf	136,1,c	;volatile
 10983                           
 10984                           ;color.c: 16:     TRISDbits.TRISD4=0;
 10985  0055D2  9884               	bcf	132,4,c	;volatile
 10986                           
 10987                           ;color.c: 17:     TRISDbits.TRISD3=0;
 10988  0055D4  9684               	bcf	132,3,c	;volatile
 10989                           
 10990                           ;color.c: 18:     TRISFbits.TRISF0=0;
 10991  0055D6  9086               	bcf	134,0,c	;volatile
 10992                           
 10993                           ;color.c: 19:     TRISHbits.TRISH0=0;
 10994  0055D8  9088               	bcf	136,0,c	;volatile
 10995                           
 10996                           ;color.c: 21:     LATHbits.LATH1 = 0;
 10997  0055DA  9280               	bcf	128,1,c	;volatile
 10998                           
 10999                           ;color.c: 22:     LATDbits.LATD4 = 0;
 11000  0055DC  987C               	bcf	124,4,c	;volatile
 11001                           
 11002                           ;color.c: 23:     LATDbits.LATD3 = 0;
 11003  0055DE  967C               	bcf	124,3,c	;volatile
 11004                           
 11005                           ;color.c: 24:     LATFbits.LATF0 = 0;
 11006  0055E0  907E               	bcf	126,0,c	;volatile
 11007                           
 11008                           ;color.c: 25:     LATHbits.LATH0 = 0;
 11009  0055E2  9080               	bcf	128,0,c	;volatile
 11010  0055E4  0012               	return		;funcret
 11011  0055E6                     __end_of_buggylight_init:
 11012                           	callstack 0
 11013                           
 11014 ;; *************** function _action *****************
 11015 ;; Defined at:
 11016 ;;		line 18 in file "movement.c"
 11017 ;; Parameters:    Size  Location     Type
 11018 ;;  color           1    wreg     unsigned char 
 11019 ;;  mL              2   49[COMRAM] PTR struct DC_motor
 11020 ;;		 -> main@motorL(10), 
 11021 ;;  mR              2   51[COMRAM] PTR struct DC_motor
 11022 ;;		 -> main@motorR(10), 
 11023 ;; Auto vars:     Size  Location     Type
 11024 ;;  color           1   53[COMRAM] unsigned char 
 11025 ;; Return value:  Size  Location     Type
 11026 ;;                  1    wreg      void 
 11027 ;; Registers used:
 11028 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11029 ;; Tracked objects:
 11030 ;;		On entry : 0/0
 11031 ;;		On exit  : 0/0
 11032 ;;		Unchanged: 0/0
 11033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11034 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11035 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11036 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11037 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11038 ;;Total ram usage:        5 bytes
 11039 ;; Hardware stack levels used: 1
 11040 ;; Hardware stack levels required when called: 6
 11041 ;; This function calls:
 11042 ;;		_reverse_square
 11043 ;;		_short_reverse
 11044 ;;		_toggle_light
 11045 ;;		_turnLeft
 11046 ;;		_turnRight
 11047 ;; This function is called by:
 11048 ;;		_main
 11049 ;; This function uses a non-reentrant model
 11050 ;;
 11051                           
 11052                           	psect	text60
 11053  002C90                     __ptext60:
 11054                           	callstack 0
 11055  002C90                     _action:
 11056                           	callstack 24
 11057                           
 11058                           ;incstack = 0
 11059                           ;action@color stored from wreg
 11060  002C90  6E36               	movwf	action@color^0,c
 11061  002C92                     
 11062                           ;movement.c: 18: void action(unsigned char color, struct DC_motor *mL, struct DC_motor *
      +                          mR);movement.c: 19: {;movement.c: 22:     if (color != 0){
 11063  002C92  5036               	movf	action@color^0,w,c
 11064  002C94  B4D8               	btfsc	status,2,c
 11065  002C96  EF4F  F016         	goto	u5401
 11066  002C9A  EF51  F016         	goto	u5400
 11067  002C9E                     u5401:
 11068  002C9E  EFAF  F017         	goto	l636
 11069  002CA2                     u5400:
 11070  002CA2                     
 11071                           ;movement.c: 25:         if (color == 1){
 11072  002CA2  0436               	decf	action@color^0,w,c
 11073  002CA4  A4D8               	btfss	status,2,c
 11074  002CA6  EF57  F016         	goto	u5411
 11075  002CAA  EF59  F016         	goto	u5410
 11076  002CAE                     u5411:
 11077  002CAE  EF7D  F016         	goto	l5326
 11078  002CB2                     u5410:
 11079  002CB2                     
 11080                           ;movement.c: 26:             short_reverse(mL,mR);
 11081  002CB2  C032  F026         	movff	action@mL,short_reverse@mL
 11082  002CB6  C033  F027         	movff	action@mL+1,short_reverse@mL+1
 11083  002CBA  C034  F028         	movff	action@mR,short_reverse@mR
 11084  002CBE  C035  F029         	movff	action@mR+1,short_reverse@mR+1
 11085  002CC2  ECF6  F028         	call	_short_reverse	;wreg free
 11086                           
 11087                           ;movement.c: 27:             turnRight(mL,mR,90);
 11088  002CC6  C032  F020         	movff	action@mL,turnRight@mL
 11089  002CCA  C033  F021         	movff	action@mL+1,turnRight@mL+1
 11090  002CCE  C034  F022         	movff	action@mR,turnRight@mR
 11091  002CD2  C035  F023         	movff	action@mR+1,turnRight@mR+1
 11092  002CD6  0E5A               	movlw	90
 11093  002CD8  6E24               	movwf	turnRight@angle_right^0,c
 11094  002CDA  ECC1  F01F         	call	_turnRight	;wreg free
 11095  002CDE                     
 11096                           ;movement.c: 28:             memory[array_index] = 1;
 11097  002CDE  0101               	movlb	1	; () banked
 11098  002CE0  519D               	movf	_array_index& (0+255),w,b
 11099  002CE2  0D02               	mullw	2
 11100  002CE4  0E3C               	movlw	low _memory
 11101  002CE6  24F3               	addwf	243,w,c
 11102  002CE8  6ED9               	movwf	fsr2l,c
 11103  002CEA  0E01               	movlw	high _memory
 11104  002CEC  20F4               	addwfc	prodh,w,c
 11105  002CEE  6EDA               	movwf	fsr2h,c
 11106  002CF0  0E01               	movlw	1
 11107  002CF2  6EDE               	movwf	postinc2,c
 11108  002CF4  0E00               	movlw	0
 11109  002CF6  6EDD               	movwf	postdec2,c
 11110  002CF8                     
 11111                           ; BSR set to: 1
 11112                           ;movement.c: 29:             array_index++;
 11113  002CF8  2B9D               	incf	_array_index& (0+255),f,b
 11114  002CFA                     l5326:
 11115                           
 11116                           ;movement.c: 31:         if (color == 2){
 11117  002CFA  0E02               	movlw	2
 11118  002CFC  1836               	xorwf	action@color^0,w,c
 11119  002CFE  A4D8               	btfss	status,2,c
 11120  002D00  EF84  F016         	goto	u5421
 11121  002D04  EF86  F016         	goto	u5420
 11122  002D08                     u5421:
 11123  002D08  EFAA  F016         	goto	l5334
 11124  002D0C                     u5420:
 11125  002D0C                     
 11126                           ;movement.c: 32:             short_reverse(mL,mR);
 11127  002D0C  C032  F026         	movff	action@mL,short_reverse@mL
 11128  002D10  C033  F027         	movff	action@mL+1,short_reverse@mL+1
 11129  002D14  C034  F028         	movff	action@mR,short_reverse@mR
 11130  002D18  C035  F029         	movff	action@mR+1,short_reverse@mR+1
 11131  002D1C  ECF6  F028         	call	_short_reverse	;wreg free
 11132                           
 11133                           ;movement.c: 33:             turnLeft(mL,mR,90);
 11134  002D20  C032  F020         	movff	action@mL,turnLeft@mL
 11135  002D24  C033  F021         	movff	action@mL+1,turnLeft@mL+1
 11136  002D28  C034  F022         	movff	action@mR,turnLeft@mR
 11137  002D2C  C035  F023         	movff	action@mR+1,turnLeft@mR+1
 11138  002D30  0E5A               	movlw	90
 11139  002D32  6E24               	movwf	turnLeft@angle_left^0,c
 11140  002D34  EC81  F020         	call	_turnLeft	;wreg free
 11141  002D38                     
 11142                           ;movement.c: 34:             memory[array_index] = 2;
 11143  002D38  0101               	movlb	1	; () banked
 11144  002D3A  519D               	movf	_array_index& (0+255),w,b
 11145  002D3C  0D02               	mullw	2
 11146  002D3E  0E3C               	movlw	low _memory
 11147  002D40  24F3               	addwf	243,w,c
 11148  002D42  6ED9               	movwf	fsr2l,c
 11149  002D44  0E01               	movlw	high _memory
 11150  002D46  20F4               	addwfc	prodh,w,c
 11151  002D48  6EDA               	movwf	fsr2h,c
 11152  002D4A  0E02               	movlw	2
 11153  002D4C  6EDE               	movwf	postinc2,c
 11154  002D4E  0E00               	movlw	0
 11155  002D50  6EDD               	movwf	postdec2,c
 11156  002D52                     
 11157                           ; BSR set to: 1
 11158                           ;movement.c: 35:             array_index++;
 11159  002D52  2B9D               	incf	_array_index& (0+255),f,b
 11160  002D54                     l5334:
 11161                           
 11162                           ;movement.c: 37:         if (color == 3){
 11163  002D54  0E03               	movlw	3
 11164  002D56  1836               	xorwf	action@color^0,w,c
 11165  002D58  A4D8               	btfss	status,2,c
 11166  002D5A  EFB1  F016         	goto	u5431
 11167  002D5E  EFB3  F016         	goto	u5430
 11168  002D62                     u5431:
 11169  002D62  EFD7  F016         	goto	l5342
 11170  002D66                     u5430:
 11171  002D66                     
 11172                           ;movement.c: 38:             short_reverse(mL,mR);
 11173  002D66  C032  F026         	movff	action@mL,short_reverse@mL
 11174  002D6A  C033  F027         	movff	action@mL+1,short_reverse@mL+1
 11175  002D6E  C034  F028         	movff	action@mR,short_reverse@mR
 11176  002D72  C035  F029         	movff	action@mR+1,short_reverse@mR+1
 11177  002D76  ECF6  F028         	call	_short_reverse	;wreg free
 11178                           
 11179                           ;movement.c: 39:             turnLeft(mL,mR,180);
 11180  002D7A  C032  F020         	movff	action@mL,turnLeft@mL
 11181  002D7E  C033  F021         	movff	action@mL+1,turnLeft@mL+1
 11182  002D82  C034  F022         	movff	action@mR,turnLeft@mR
 11183  002D86  C035  F023         	movff	action@mR+1,turnLeft@mR+1
 11184  002D8A  0EB4               	movlw	180
 11185  002D8C  6E24               	movwf	turnLeft@angle_left^0,c
 11186  002D8E  EC81  F020         	call	_turnLeft	;wreg free
 11187  002D92                     
 11188                           ;movement.c: 40:             memory[array_index] = 3;
 11189  002D92  0101               	movlb	1	; () banked
 11190  002D94  519D               	movf	_array_index& (0+255),w,b
 11191  002D96  0D02               	mullw	2
 11192  002D98  0E3C               	movlw	low _memory
 11193  002D9A  24F3               	addwf	243,w,c
 11194  002D9C  6ED9               	movwf	fsr2l,c
 11195  002D9E  0E01               	movlw	high _memory
 11196  002DA0  20F4               	addwfc	prodh,w,c
 11197  002DA2  6EDA               	movwf	fsr2h,c
 11198  002DA4  0E03               	movlw	3
 11199  002DA6  6EDE               	movwf	postinc2,c
 11200  002DA8  0E00               	movlw	0
 11201  002DAA  6EDD               	movwf	postdec2,c
 11202  002DAC                     
 11203                           ; BSR set to: 1
 11204                           ;movement.c: 41:             array_index++;
 11205  002DAC  2B9D               	incf	_array_index& (0+255),f,b
 11206  002DAE                     l5342:
 11207                           
 11208                           ;movement.c: 43:         if (color == 4){
 11209  002DAE  0E04               	movlw	4
 11210  002DB0  1836               	xorwf	action@color^0,w,c
 11211  002DB2  A4D8               	btfss	status,2,c
 11212  002DB4  EFDE  F016         	goto	u5441
 11213  002DB8  EFE0  F016         	goto	u5440
 11214  002DBC                     u5441:
 11215  002DBC  EF04  F017         	goto	l5350
 11216  002DC0                     u5440:
 11217  002DC0                     
 11218                           ;movement.c: 44:             reverse_square(mL,mR);
 11219  002DC0  C032  F026         	movff	action@mL,reverse_square@mL
 11220  002DC4  C033  F027         	movff	action@mL+1,reverse_square@mL+1
 11221  002DC8  C034  F028         	movff	action@mR,reverse_square@mR
 11222  002DCC  C035  F029         	movff	action@mR+1,reverse_square@mR+1
 11223  002DD0  EC17  F029         	call	_reverse_square	;wreg free
 11224                           
 11225                           ;movement.c: 45:             turnRight(mL,mR,90);
 11226  002DD4  C032  F020         	movff	action@mL,turnRight@mL
 11227  002DD8  C033  F021         	movff	action@mL+1,turnRight@mL+1
 11228  002DDC  C034  F022         	movff	action@mR,turnRight@mR
 11229  002DE0  C035  F023         	movff	action@mR+1,turnRight@mR+1
 11230  002DE4  0E5A               	movlw	90
 11231  002DE6  6E24               	movwf	turnRight@angle_right^0,c
 11232  002DE8  ECC1  F01F         	call	_turnRight	;wreg free
 11233  002DEC                     
 11234                           ;movement.c: 46:             memory[array_index] = 4;
 11235  002DEC  0101               	movlb	1	; () banked
 11236  002DEE  519D               	movf	_array_index& (0+255),w,b
 11237  002DF0  0D02               	mullw	2
 11238  002DF2  0E3C               	movlw	low _memory
 11239  002DF4  24F3               	addwf	243,w,c
 11240  002DF6  6ED9               	movwf	fsr2l,c
 11241  002DF8  0E01               	movlw	high _memory
 11242  002DFA  20F4               	addwfc	prodh,w,c
 11243  002DFC  6EDA               	movwf	fsr2h,c
 11244  002DFE  0E04               	movlw	4
 11245  002E00  6EDE               	movwf	postinc2,c
 11246  002E02  0E00               	movlw	0
 11247  002E04  6EDD               	movwf	postdec2,c
 11248  002E06                     
 11249                           ; BSR set to: 1
 11250                           ;movement.c: 47:             array_index++;
 11251  002E06  2B9D               	incf	_array_index& (0+255),f,b
 11252  002E08                     l5350:
 11253                           
 11254                           ;movement.c: 49:         if (color == 5){
 11255  002E08  0E05               	movlw	5
 11256  002E0A  1836               	xorwf	action@color^0,w,c
 11257  002E0C  A4D8               	btfss	status,2,c
 11258  002E0E  EF0B  F017         	goto	u5451
 11259  002E12  EF0D  F017         	goto	u5450
 11260  002E16                     u5451:
 11261  002E16  EF31  F017         	goto	l5358
 11262  002E1A                     u5450:
 11263  002E1A                     
 11264                           ;movement.c: 50:             reverse_square(mL,mR);
 11265  002E1A  C032  F026         	movff	action@mL,reverse_square@mL
 11266  002E1E  C033  F027         	movff	action@mL+1,reverse_square@mL+1
 11267  002E22  C034  F028         	movff	action@mR,reverse_square@mR
 11268  002E26  C035  F029         	movff	action@mR+1,reverse_square@mR+1
 11269  002E2A  EC17  F029         	call	_reverse_square	;wreg free
 11270                           
 11271                           ;movement.c: 51:             turnLeft(mL,mR,90);
 11272  002E2E  C032  F020         	movff	action@mL,turnLeft@mL
 11273  002E32  C033  F021         	movff	action@mL+1,turnLeft@mL+1
 11274  002E36  C034  F022         	movff	action@mR,turnLeft@mR
 11275  002E3A  C035  F023         	movff	action@mR+1,turnLeft@mR+1
 11276  002E3E  0E5A               	movlw	90
 11277  002E40  6E24               	movwf	turnLeft@angle_left^0,c
 11278  002E42  EC81  F020         	call	_turnLeft	;wreg free
 11279  002E46                     
 11280                           ;movement.c: 52:             memory[array_index] = 5;
 11281  002E46  0101               	movlb	1	; () banked
 11282  002E48  519D               	movf	_array_index& (0+255),w,b
 11283  002E4A  0D02               	mullw	2
 11284  002E4C  0E3C               	movlw	low _memory
 11285  002E4E  24F3               	addwf	243,w,c
 11286  002E50  6ED9               	movwf	fsr2l,c
 11287  002E52  0E01               	movlw	high _memory
 11288  002E54  20F4               	addwfc	prodh,w,c
 11289  002E56  6EDA               	movwf	fsr2h,c
 11290  002E58  0E05               	movlw	5
 11291  002E5A  6EDE               	movwf	postinc2,c
 11292  002E5C  0E00               	movlw	0
 11293  002E5E  6EDD               	movwf	postdec2,c
 11294  002E60                     
 11295                           ; BSR set to: 1
 11296                           ;movement.c: 53:             array_index++;
 11297  002E60  2B9D               	incf	_array_index& (0+255),f,b
 11298  002E62                     l5358:
 11299                           
 11300                           ;movement.c: 55:         if (color == 6){
 11301  002E62  0E06               	movlw	6
 11302  002E64  1836               	xorwf	action@color^0,w,c
 11303  002E66  A4D8               	btfss	status,2,c
 11304  002E68  EF38  F017         	goto	u5461
 11305  002E6C  EF3A  F017         	goto	u5460
 11306  002E70                     u5461:
 11307  002E70  EF5E  F017         	goto	l5366
 11308  002E74                     u5460:
 11309  002E74                     
 11310                           ;movement.c: 56:             short_reverse(mL,mR);
 11311  002E74  C032  F026         	movff	action@mL,short_reverse@mL
 11312  002E78  C033  F027         	movff	action@mL+1,short_reverse@mL+1
 11313  002E7C  C034  F028         	movff	action@mR,short_reverse@mR
 11314  002E80  C035  F029         	movff	action@mR+1,short_reverse@mR+1
 11315  002E84  ECF6  F028         	call	_short_reverse	;wreg free
 11316                           
 11317                           ;movement.c: 57:             turnRight(mL,mR,135);
 11318  002E88  C032  F020         	movff	action@mL,turnRight@mL
 11319  002E8C  C033  F021         	movff	action@mL+1,turnRight@mL+1
 11320  002E90  C034  F022         	movff	action@mR,turnRight@mR
 11321  002E94  C035  F023         	movff	action@mR+1,turnRight@mR+1
 11322  002E98  0E87               	movlw	135
 11323  002E9A  6E24               	movwf	turnRight@angle_right^0,c
 11324  002E9C  ECC1  F01F         	call	_turnRight	;wreg free
 11325  002EA0                     
 11326                           ;movement.c: 58:             memory[array_index] = 6;
 11327  002EA0  0101               	movlb	1	; () banked
 11328  002EA2  519D               	movf	_array_index& (0+255),w,b
 11329  002EA4  0D02               	mullw	2
 11330  002EA6  0E3C               	movlw	low _memory
 11331  002EA8  24F3               	addwf	243,w,c
 11332  002EAA  6ED9               	movwf	fsr2l,c
 11333  002EAC  0E01               	movlw	high _memory
 11334  002EAE  20F4               	addwfc	prodh,w,c
 11335  002EB0  6EDA               	movwf	fsr2h,c
 11336  002EB2  0E06               	movlw	6
 11337  002EB4  6EDE               	movwf	postinc2,c
 11338  002EB6  0E00               	movlw	0
 11339  002EB8  6EDD               	movwf	postdec2,c
 11340  002EBA                     
 11341                           ; BSR set to: 1
 11342                           ;movement.c: 59:             array_index++;
 11343  002EBA  2B9D               	incf	_array_index& (0+255),f,b
 11344  002EBC                     l5366:
 11345                           
 11346                           ;movement.c: 61:         if (color == 7){
 11347  002EBC  0E07               	movlw	7
 11348  002EBE  1836               	xorwf	action@color^0,w,c
 11349  002EC0  A4D8               	btfss	status,2,c
 11350  002EC2  EF65  F017         	goto	u5471
 11351  002EC6  EF67  F017         	goto	u5470
 11352  002ECA                     u5471:
 11353  002ECA  EF8B  F017         	goto	l5374
 11354  002ECE                     u5470:
 11355  002ECE                     
 11356                           ;movement.c: 62:             short_reverse(mL,mR);
 11357  002ECE  C032  F026         	movff	action@mL,short_reverse@mL
 11358  002ED2  C033  F027         	movff	action@mL+1,short_reverse@mL+1
 11359  002ED6  C034  F028         	movff	action@mR,short_reverse@mR
 11360  002EDA  C035  F029         	movff	action@mR+1,short_reverse@mR+1
 11361  002EDE  ECF6  F028         	call	_short_reverse	;wreg free
 11362                           
 11363                           ;movement.c: 63:             turnLeft(mL,mR,135);
 11364  002EE2  C032  F020         	movff	action@mL,turnLeft@mL
 11365  002EE6  C033  F021         	movff	action@mL+1,turnLeft@mL+1
 11366  002EEA  C034  F022         	movff	action@mR,turnLeft@mR
 11367  002EEE  C035  F023         	movff	action@mR+1,turnLeft@mR+1
 11368  002EF2  0E87               	movlw	135
 11369  002EF4  6E24               	movwf	turnLeft@angle_left^0,c
 11370  002EF6  EC81  F020         	call	_turnLeft	;wreg free
 11371  002EFA                     
 11372                           ;movement.c: 64:             memory[array_index] = 7;
 11373  002EFA  0101               	movlb	1	; () banked
 11374  002EFC  519D               	movf	_array_index& (0+255),w,b
 11375  002EFE  0D02               	mullw	2
 11376  002F00  0E3C               	movlw	low _memory
 11377  002F02  24F3               	addwf	243,w,c
 11378  002F04  6ED9               	movwf	fsr2l,c
 11379  002F06  0E01               	movlw	high _memory
 11380  002F08  20F4               	addwfc	prodh,w,c
 11381  002F0A  6EDA               	movwf	fsr2h,c
 11382  002F0C  0E07               	movlw	7
 11383  002F0E  6EDE               	movwf	postinc2,c
 11384  002F10  0E00               	movlw	0
 11385  002F12  6EDD               	movwf	postdec2,c
 11386  002F14                     
 11387                           ; BSR set to: 1
 11388                           ;movement.c: 65:             array_index++;
 11389  002F14  2B9D               	incf	_array_index& (0+255),f,b
 11390  002F16                     l5374:
 11391                           
 11392                           ;movement.c: 67:         if (color == 8){
 11393  002F16  0E08               	movlw	8
 11394  002F18  1836               	xorwf	action@color^0,w,c
 11395  002F1A  A4D8               	btfss	status,2,c
 11396  002F1C  EF92  F017         	goto	u5481
 11397  002F20  EF94  F017         	goto	u5480
 11398  002F24                     u5481:
 11399  002F24  EFAF  F017         	goto	l636
 11400  002F28                     u5480:
 11401  002F28                     
 11402                           ;movement.c: 68:             toggle_light(2,1);
 11403  002F28  0E01               	movlw	1
 11404  002F2A  6E01               	movwf	toggle_light@toggletime^0,c
 11405  002F2C  0E02               	movlw	2
 11406  002F2E  ECB0  F017         	call	_toggle_light
 11407  002F32                     
 11408                           ;movement.c: 69:             turnRight(mL,mR,180);
 11409  002F32  C032  F020         	movff	action@mL,turnRight@mL
 11410  002F36  C033  F021         	movff	action@mL+1,turnRight@mL+1
 11411  002F3A  C034  F022         	movff	action@mR,turnRight@mR
 11412  002F3E  C035  F023         	movff	action@mR+1,turnRight@mR+1
 11413  002F42  0EB4               	movlw	180
 11414  002F44  6E24               	movwf	turnRight@angle_right^0,c
 11415  002F46  ECC1  F01F         	call	_turnRight	;wreg free
 11416  002F4A                     
 11417                           ;movement.c: 70:             short_reverse(mL,mR);
 11418  002F4A  C032  F026         	movff	action@mL,short_reverse@mL
 11419  002F4E  C033  F027         	movff	action@mL+1,short_reverse@mL+1
 11420  002F52  C034  F028         	movff	action@mR,short_reverse@mR
 11421  002F56  C035  F029         	movff	action@mR+1,short_reverse@mR+1
 11422  002F5A  ECF6  F028         	call	_short_reverse	;wreg free
 11423  002F5E                     l636:
 11424  002F5E  0012               	return		;funcret
 11425  002F60                     __end_of_action:
 11426                           	callstack 0
 11427                           
 11428 ;; *************** function _turnRight *****************
 11429 ;; Defined at:
 11430 ;;		line 122 in file "dc_motor.c"
 11431 ;; Parameters:    Size  Location     Type
 11432 ;;  mL              2   31[COMRAM] PTR struct DC_motor
 11433 ;;		 -> main@motorL(10), 
 11434 ;;  mR              2   33[COMRAM] PTR struct DC_motor
 11435 ;;		 -> main@motorR(10), 
 11436 ;;  angle_right     1   35[COMRAM] unsigned char 
 11437 ;; Auto vars:     Size  Location     Type
 11438 ;;  i               2   45[COMRAM] unsigned int 
 11439 ;;  i               2   43[COMRAM] unsigned int 
 11440 ;;  i               2   41[COMRAM] unsigned int 
 11441 ;;  delay           2   47[COMRAM] unsigned int 
 11442 ;;  delay_180       2   39[COMRAM] unsigned int 
 11443 ;;  delay_135       2   37[COMRAM] unsigned int 
 11444 ;; Return value:  Size  Location     Type
 11445 ;;                  1    wreg      void 
 11446 ;; Registers used:
 11447 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11448 ;; Tracked objects:
 11449 ;;		On entry : 0/0
 11450 ;;		On exit  : 0/0
 11451 ;;		Unchanged: 0/0
 11452 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11453 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11454 ;;      Locals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11455 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11456 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11457 ;;Total ram usage:       18 bytes
 11458 ;; Hardware stack levels used: 1
 11459 ;; Hardware stack levels required when called: 4
 11460 ;; This function calls:
 11461 ;;		_setMotorPWM
 11462 ;;		_stop
 11463 ;; This function is called by:
 11464 ;;		_action
 11465 ;;		_test_action
 11466 ;;		_goback
 11467 ;; This function uses a non-reentrant model
 11468 ;;
 11469                           
 11470                           	psect	text61
 11471  003F82                     __ptext61:
 11472                           	callstack 0
 11473  003F82                     _turnRight:
 11474                           	callstack 25
 11475  003F82                     
 11476                           ;dc_motor.c: 122: void turnRight(struct DC_motor *mL, struct DC_motor *mR, unsigned char
      +                           angle_right);dc_motor.c: 123: {;dc_motor.c: 124:     mL->direction=1;
 11477  003F82  EE20 F001          	lfsr	2,1
 11478  003F86  5020               	movf	turnRight@mL^0,w,c
 11479  003F88  26D9               	addwf	fsr2l,f,c
 11480  003F8A  5021               	movf	(turnRight@mL+1)^0,w,c
 11481  003F8C  22DA               	addwfc	fsr2h,f,c
 11482  003F8E  0E01               	movlw	1
 11483  003F90  6EDF               	movwf	indf2,c
 11484                           
 11485                           ;dc_motor.c: 125:     mR->direction=1;
 11486  003F92  EE20 F001          	lfsr	2,1
 11487  003F96  5022               	movf	turnRight@mR^0,w,c
 11488  003F98  26D9               	addwf	fsr2l,f,c
 11489  003F9A  5023               	movf	(turnRight@mR+1)^0,w,c
 11490  003F9C  22DA               	addwfc	fsr2h,f,c
 11491  003F9E  0E01               	movlw	1
 11492  003FA0  6EDF               	movwf	indf2,c
 11493                           
 11494                           ;dc_motor.c: 126:     while (mL->power <25){
 11495  003FA2  EFF2  F01F         	goto	l5118
 11496  003FA6                     l5110:
 11497                           
 11498                           ;dc_motor.c: 127:         mL->power += 5;
 11499  003FA6  C020  FFD9         	movff	turnRight@mL,fsr2l
 11500  003FAA  C021  FFDA         	movff	turnRight@mL+1,fsr2h
 11501  003FAE  0E05               	movlw	5
 11502  003FB0  26DF               	addwf	indf2,f,c
 11503                           
 11504                           ;dc_motor.c: 128:         mR->power = 0;
 11505  003FB2  C022  FFD9         	movff	turnRight@mR,fsr2l
 11506  003FB6  C023  FFDA         	movff	turnRight@mR+1,fsr2h
 11507  003FBA  0E00               	movlw	0
 11508  003FBC  6EDF               	movwf	indf2,c
 11509  003FBE                     
 11510                           ;dc_motor.c: 129:         setMotorPWM(mL);
 11511  003FBE  C020  F00F         	movff	turnRight@mL,setMotorPWM@m
 11512  003FC2  C021  F010         	movff	turnRight@mL+1,setMotorPWM@m+1
 11513  003FC6  ECFF  F019         	call	_setMotorPWM	;wreg free
 11514  003FCA                     
 11515                           ;dc_motor.c: 130:         setMotorPWM(mR);
 11516  003FCA  C022  F00F         	movff	turnRight@mR,setMotorPWM@m
 11517  003FCE  C023  F010         	movff	turnRight@mR+1,setMotorPWM@m+1
 11518  003FD2  ECFF  F019         	call	_setMotorPWM	;wreg free
 11519  003FD6                     
 11520                           ;dc_motor.c: 131:         _delay((unsigned long)((10)*(64000000/4000.0)));
 11521  003FD6  0ED0               	movlw	208
 11522  003FD8  6E25               	movwf	??_turnRight^0,c
 11523  003FDA  0ECA               	movlw	202
 11524  003FDC                     u6017:
 11525  003FDC  2EE8               	decfsz	wreg,f,c
 11526  003FDE  D7FE               	bra	u6017
 11527  003FE0  2E25               	decfsz	??_turnRight^0,f,c
 11528  003FE2  D7FC               	bra	u6017
 11529  003FE4                     l5118:
 11530                           
 11531                           ;dc_motor.c: 126:     while (mL->power <25){
 11532  003FE4  C020  FFD9         	movff	turnRight@mL,fsr2l
 11533  003FE8  C021  FFDA         	movff	turnRight@mL+1,fsr2h
 11534  003FEC  0E18               	movlw	24
 11535  003FEE  64DF               	cpfsgt	indf2,c
 11536  003FF0  EFFC  F01F         	goto	u5201
 11537  003FF4  EFFE  F01F         	goto	u5200
 11538  003FF8                     u5201:
 11539  003FF8  EFD3  F01F         	goto	l5110
 11540  003FFC                     u5200:
 11541  003FFC                     
 11542                           ;dc_motor.c: 133:     unsigned int delay = angle_right * SENSITIVITY;
 11543  003FFC  5024               	movf	turnRight@angle_right^0,w,c
 11544  003FFE  0100               	movlb	0	; () banked
 11545  004000  03FE               	mulwf	_SENSITIVITY& (0+255),b
 11546  004002  CFF3 F030          	movff	prodl,turnRight@delay
 11547  004006  CFF4 F031          	movff	prodh,turnRight@delay+1
 11548  00400A                     
 11549                           ; BSR set to: 0
 11550  00400A  0E0A               	movlw	10
 11551  00400C  2430               	addwf	turnRight@delay^0,w,c
 11552  00400E  6E26               	movwf	turnRight@delay_135^0,c
 11553  004010  0E00               	movlw	0
 11554  004012  2031               	addwfc	(turnRight@delay+1)^0,w,c
 11555  004014  6E27               	movwf	(turnRight@delay_135+1)^0,c
 11556  004016                     
 11557                           ; BSR set to: 0
 11558  004016  0E14               	movlw	20
 11559  004018  2430               	addwf	turnRight@delay^0,w,c
 11560  00401A  6E28               	movwf	turnRight@delay_180^0,c
 11561  00401C  0E00               	movlw	0
 11562  00401E  2031               	addwfc	(turnRight@delay+1)^0,w,c
 11563  004020  6E29               	movwf	(turnRight@delay_180+1)^0,c
 11564  004022                     
 11565                           ; BSR set to: 0
 11566                           ;dc_motor.c: 136:     if (angle_right == 180){
 11567  004022  0EB4               	movlw	180
 11568  004024  1824               	xorwf	turnRight@angle_right^0,w,c
 11569  004026  A4D8               	btfss	status,2,c
 11570  004028  EF18  F020         	goto	u5211
 11571  00402C  EF1A  F020         	goto	u5210
 11572  004030                     u5211:
 11573  004030  EF35  F020         	goto	l5134
 11574  004034                     u5210:
 11575  004034                     
 11576                           ; BSR set to: 0
 11577                           ;dc_motor.c: 137:         for(unsigned int i = 0; i <delay_180; i++){_delay((unsigned lo
      +                          ng)((1)*(64000000/4000.0)));}
 11578  004034  0E00               	movlw	0
 11579  004036  6E2B               	movwf	(turnRight@i+1)^0,c
 11580  004038  0E00               	movlw	0
 11581  00403A  6E2A               	movwf	turnRight@i^0,c
 11582  00403C  EF2A  F020         	goto	l349
 11583  004040                     l5130:
 11584  004040  0E15               	movlw	21
 11585  004042  6E25               	movwf	??_turnRight^0,c
 11586  004044  0EC6               	movlw	198
 11587  004046                     u6027:
 11588  004046  2EE8               	decfsz	wreg,f,c
 11589  004048  D7FE               	bra	u6027
 11590  00404A  2E25               	decfsz	??_turnRight^0,f,c
 11591  00404C  D7FC               	bra	u6027
 11592  00404E  D000               	nop2	
 11593  004050  4A2A               	infsnz	turnRight@i^0,f,c
 11594  004052  2A2B               	incf	(turnRight@i+1)^0,f,c
 11595  004054                     l349:
 11596  004054  5028               	movf	turnRight@delay_180^0,w,c
 11597  004056  5C2A               	subwf	turnRight@i^0,w,c
 11598  004058  5029               	movf	(turnRight@delay_180+1)^0,w,c
 11599  00405A  582B               	subwfb	(turnRight@i+1)^0,w,c
 11600  00405C  A0D8               	btfss	status,0,c
 11601  00405E  EF33  F020         	goto	u5221
 11602  004062  EF35  F020         	goto	u5220
 11603  004066                     u5221:
 11604  004066  EF20  F020         	goto	l5130
 11605  00406A                     u5220:
 11606  00406A                     l5134:
 11607                           
 11608                           ;dc_motor.c: 139:     if (angle_right == 135){
 11609  00406A  0E87               	movlw	135
 11610  00406C  1824               	xorwf	turnRight@angle_right^0,w,c
 11611  00406E  A4D8               	btfss	status,2,c
 11612  004070  EF3C  F020         	goto	u5231
 11613  004074  EF3E  F020         	goto	u5230
 11614  004078                     u5231:
 11615  004078  EF5B  F020         	goto	l5142
 11616  00407C                     u5230:
 11617  00407C                     
 11618                           ;dc_motor.c: 140:         for(unsigned int i = 0; i <delay_135; i++){_delay((unsigned lo
      +                          ng)((1)*(64000000/4000.0)));}
 11619  00407C  0E00               	movlw	0
 11620  00407E  6E2D               	movwf	(turnRight@i_1357+1)^0,c
 11621  004080  0E00               	movlw	0
 11622  004082  6E2C               	movwf	turnRight@i_1357^0,c
 11623  004084  EF4E  F020         	goto	l353
 11624  004088                     l5138:
 11625  004088  0E15               	movlw	21
 11626  00408A  6E25               	movwf	??_turnRight^0,c
 11627  00408C  0EC6               	movlw	198
 11628  00408E                     u6037:
 11629  00408E  2EE8               	decfsz	wreg,f,c
 11630  004090  D7FE               	bra	u6037
 11631  004092  2E25               	decfsz	??_turnRight^0,f,c
 11632  004094  D7FC               	bra	u6037
 11633  004096  D000               	nop2	
 11634  004098  4A2C               	infsnz	turnRight@i_1357^0,f,c
 11635  00409A  2A2D               	incf	(turnRight@i_1357+1)^0,f,c
 11636  00409C                     l353:
 11637  00409C  5026               	movf	turnRight@delay_135^0,w,c
 11638  00409E  5C2C               	subwf	turnRight@i_1357^0,w,c
 11639  0040A0  5027               	movf	(turnRight@delay_135+1)^0,w,c
 11640  0040A2  582D               	subwfb	(turnRight@i_1357+1)^0,w,c
 11641  0040A4  A0D8               	btfss	status,0,c
 11642  0040A6  EF57  F020         	goto	u5241
 11643  0040AA  EF59  F020         	goto	u5240
 11644  0040AE                     u5241:
 11645  0040AE  EF44  F020         	goto	l5138
 11646  0040B2                     u5240:
 11647  0040B2  EF76  F020         	goto	l5148
 11648  0040B6                     l5142:
 11649                           
 11650                           ;dc_motor.c: 143:         for(unsigned int i = 0; i < delay; i++){_delay((unsigned long)
      +                          ((1)*(64000000/4000.0)));}
 11651  0040B6  0E00               	movlw	0
 11652  0040B8  6E2F               	movwf	(turnRight@i_1358+1)^0,c
 11653  0040BA  0E00               	movlw	0
 11654  0040BC  6E2E               	movwf	turnRight@i_1358^0,c
 11655  0040BE  EF6B  F020         	goto	l357
 11656  0040C2                     l5144:
 11657  0040C2  0E15               	movlw	21
 11658  0040C4  6E25               	movwf	??_turnRight^0,c
 11659  0040C6  0EC6               	movlw	198
 11660  0040C8                     u6047:
 11661  0040C8  2EE8               	decfsz	wreg,f,c
 11662  0040CA  D7FE               	bra	u6047
 11663  0040CC  2E25               	decfsz	??_turnRight^0,f,c
 11664  0040CE  D7FC               	bra	u6047
 11665  0040D0  D000               	nop2	
 11666  0040D2  4A2E               	infsnz	turnRight@i_1358^0,f,c
 11667  0040D4  2A2F               	incf	(turnRight@i_1358+1)^0,f,c
 11668  0040D6                     l357:
 11669  0040D6  5030               	movf	turnRight@delay^0,w,c
 11670  0040D8  5C2E               	subwf	turnRight@i_1358^0,w,c
 11671  0040DA  5031               	movf	(turnRight@delay+1)^0,w,c
 11672  0040DC  582F               	subwfb	(turnRight@i_1358+1)^0,w,c
 11673  0040DE  A0D8               	btfss	status,0,c
 11674  0040E0  EF74  F020         	goto	u5251
 11675  0040E4  EF76  F020         	goto	u5250
 11676  0040E8                     u5251:
 11677  0040E8  EF61  F020         	goto	l5144
 11678  0040EC                     u5250:
 11679  0040EC                     l5148:
 11680                           
 11681                           ;dc_motor.c: 145:     stop(mL,mR);
 11682  0040EC  C020  F01A         	movff	turnRight@mL,stop@mL
 11683  0040F0  C021  F01B         	movff	turnRight@mL+1,stop@mL+1
 11684  0040F4  C022  F01C         	movff	turnRight@mR,stop@mR
 11685  0040F8  C023  F01D         	movff	turnRight@mR+1,stop@mR+1
 11686  0040FC  ECE3  F025         	call	_stop	;wreg free
 11687  004100  0012               	return		;funcret
 11688  004102                     __end_of_turnRight:
 11689                           	callstack 0
 11690                           
 11691 ;; *************** function _turnLeft *****************
 11692 ;; Defined at:
 11693 ;;		line 95 in file "dc_motor.c"
 11694 ;; Parameters:    Size  Location     Type
 11695 ;;  mL              2   31[COMRAM] PTR struct DC_motor
 11696 ;;		 -> main@motorL(10), 
 11697 ;;  mR              2   33[COMRAM] PTR struct DC_motor
 11698 ;;		 -> main@motorR(10), 
 11699 ;;  angle_left      1   35[COMRAM] unsigned char 
 11700 ;; Auto vars:     Size  Location     Type
 11701 ;;  i               2   45[COMRAM] unsigned int 
 11702 ;;  i               2   43[COMRAM] unsigned int 
 11703 ;;  i               2   41[COMRAM] unsigned int 
 11704 ;;  delay           2   47[COMRAM] unsigned int 
 11705 ;;  delay_180       2   39[COMRAM] unsigned int 
 11706 ;;  delay_135       2   37[COMRAM] unsigned int 
 11707 ;; Return value:  Size  Location     Type
 11708 ;;                  1    wreg      void 
 11709 ;; Registers used:
 11710 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11711 ;; Tracked objects:
 11712 ;;		On entry : 0/0
 11713 ;;		On exit  : 0/0
 11714 ;;		Unchanged: 0/0
 11715 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11716 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11717 ;;      Locals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11718 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11719 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11720 ;;Total ram usage:       18 bytes
 11721 ;; Hardware stack levels used: 1
 11722 ;; Hardware stack levels required when called: 4
 11723 ;; This function calls:
 11724 ;;		_setMotorPWM
 11725 ;;		_stop
 11726 ;; This function is called by:
 11727 ;;		_action
 11728 ;;		_test_action
 11729 ;;		_goback
 11730 ;; This function uses a non-reentrant model
 11731 ;;
 11732                           
 11733                           	psect	text62
 11734  004102                     __ptext62:
 11735                           	callstack 0
 11736  004102                     _turnLeft:
 11737                           	callstack 25
 11738  004102                     
 11739                           ;dc_motor.c: 95: void turnLeft(struct DC_motor *mL, struct DC_motor *mR, unsigned char a
      +                          ngle_left);dc_motor.c: 96: {;dc_motor.c: 97:       mL->direction=1;
 11740  004102  EE20 F001          	lfsr	2,1
 11741  004106  5020               	movf	turnLeft@mL^0,w,c
 11742  004108  26D9               	addwf	fsr2l,f,c
 11743  00410A  5021               	movf	(turnLeft@mL+1)^0,w,c
 11744  00410C  22DA               	addwfc	fsr2h,f,c
 11745  00410E  0E01               	movlw	1
 11746  004110  6EDF               	movwf	indf2,c
 11747                           
 11748                           ;dc_motor.c: 98:       mR->direction=1;
 11749  004112  EE20 F001          	lfsr	2,1
 11750  004116  5022               	movf	turnLeft@mR^0,w,c
 11751  004118  26D9               	addwf	fsr2l,f,c
 11752  00411A  5023               	movf	(turnLeft@mR+1)^0,w,c
 11753  00411C  22DA               	addwfc	fsr2h,f,c
 11754  00411E  0E01               	movlw	1
 11755  004120  6EDF               	movwf	indf2,c
 11756                           
 11757                           ;dc_motor.c: 99:       while (mR->power <25){
 11758  004122  EFB2  F020         	goto	l5076
 11759  004126                     l5068:
 11760                           
 11761                           ;dc_motor.c: 100:         mR->power += 5;
 11762  004126  C022  FFD9         	movff	turnLeft@mR,fsr2l
 11763  00412A  C023  FFDA         	movff	turnLeft@mR+1,fsr2h
 11764  00412E  0E05               	movlw	5
 11765  004130  26DF               	addwf	indf2,f,c
 11766                           
 11767                           ;dc_motor.c: 101:         mL->power = 0;
 11768  004132  C020  FFD9         	movff	turnLeft@mL,fsr2l
 11769  004136  C021  FFDA         	movff	turnLeft@mL+1,fsr2h
 11770  00413A  0E00               	movlw	0
 11771  00413C  6EDF               	movwf	indf2,c
 11772  00413E                     
 11773                           ;dc_motor.c: 102:         setMotorPWM(mL);
 11774  00413E  C020  F00F         	movff	turnLeft@mL,setMotorPWM@m
 11775  004142  C021  F010         	movff	turnLeft@mL+1,setMotorPWM@m+1
 11776  004146  ECFF  F019         	call	_setMotorPWM	;wreg free
 11777  00414A                     
 11778                           ;dc_motor.c: 103:         setMotorPWM(mR);
 11779  00414A  C022  F00F         	movff	turnLeft@mR,setMotorPWM@m
 11780  00414E  C023  F010         	movff	turnLeft@mR+1,setMotorPWM@m+1
 11781  004152  ECFF  F019         	call	_setMotorPWM	;wreg free
 11782  004156                     
 11783                           ;dc_motor.c: 104:         _delay((unsigned long)((10)*(64000000/4000.0)));
 11784  004156  0ED0               	movlw	208
 11785  004158  6E25               	movwf	??_turnLeft^0,c
 11786  00415A  0ECA               	movlw	202
 11787  00415C                     u6057:
 11788  00415C  2EE8               	decfsz	wreg,f,c
 11789  00415E  D7FE               	bra	u6057
 11790  004160  2E25               	decfsz	??_turnLeft^0,f,c
 11791  004162  D7FC               	bra	u6057
 11792  004164                     l5076:
 11793                           
 11794                           ;dc_motor.c: 99:       while (mR->power <25){
 11795  004164  C022  FFD9         	movff	turnLeft@mR,fsr2l
 11796  004168  C023  FFDA         	movff	turnLeft@mR+1,fsr2h
 11797  00416C  0E18               	movlw	24
 11798  00416E  64DF               	cpfsgt	indf2,c
 11799  004170  EFBC  F020         	goto	u5141
 11800  004174  EFBE  F020         	goto	u5140
 11801  004178                     u5141:
 11802  004178  EF93  F020         	goto	l5068
 11803  00417C                     u5140:
 11804  00417C                     
 11805                           ;dc_motor.c: 106:     unsigned int delay = angle_left * SENSITIVITY;
 11806  00417C  5024               	movf	turnLeft@angle_left^0,w,c
 11807  00417E  0100               	movlb	0	; () banked
 11808  004180  03FE               	mulwf	_SENSITIVITY& (0+255),b
 11809  004182  CFF3 F030          	movff	prodl,turnLeft@delay
 11810  004186  CFF4 F031          	movff	prodh,turnLeft@delay+1
 11811  00418A                     
 11812                           ; BSR set to: 0
 11813  00418A  0E0A               	movlw	10
 11814  00418C  2430               	addwf	turnLeft@delay^0,w,c
 11815  00418E  6E26               	movwf	turnLeft@delay_135^0,c
 11816  004190  0E00               	movlw	0
 11817  004192  2031               	addwfc	(turnLeft@delay+1)^0,w,c
 11818  004194  6E27               	movwf	(turnLeft@delay_135+1)^0,c
 11819  004196                     
 11820                           ; BSR set to: 0
 11821  004196  0E14               	movlw	20
 11822  004198  2430               	addwf	turnLeft@delay^0,w,c
 11823  00419A  6E28               	movwf	turnLeft@delay_180^0,c
 11824  00419C  0E00               	movlw	0
 11825  00419E  2031               	addwfc	(turnLeft@delay+1)^0,w,c
 11826  0041A0  6E29               	movwf	(turnLeft@delay_180+1)^0,c
 11827  0041A2                     
 11828                           ; BSR set to: 0
 11829                           ;dc_motor.c: 109:     if (angle_left == 180){
 11830  0041A2  0EB4               	movlw	180
 11831  0041A4  1824               	xorwf	turnLeft@angle_left^0,w,c
 11832  0041A6  A4D8               	btfss	status,2,c
 11833  0041A8  EFD8  F020         	goto	u5151
 11834  0041AC  EFDA  F020         	goto	u5150
 11835  0041B0                     u5151:
 11836  0041B0  EFF5  F020         	goto	l5092
 11837  0041B4                     u5150:
 11838  0041B4                     
 11839                           ; BSR set to: 0
 11840                           ;dc_motor.c: 110:         for(unsigned int i = 0; i <delay_180; i++){_delay((unsigned lo
      +                          ng)((1)*(64000000/4000.0)));}
 11841  0041B4  0E00               	movlw	0
 11842  0041B6  6E2B               	movwf	(turnLeft@i+1)^0,c
 11843  0041B8  0E00               	movlw	0
 11844  0041BA  6E2A               	movwf	turnLeft@i^0,c
 11845  0041BC  EFEA  F020         	goto	l331
 11846  0041C0                     l5088:
 11847  0041C0  0E15               	movlw	21
 11848  0041C2  6E25               	movwf	??_turnLeft^0,c
 11849  0041C4  0EC6               	movlw	198
 11850  0041C6                     u6067:
 11851  0041C6  2EE8               	decfsz	wreg,f,c
 11852  0041C8  D7FE               	bra	u6067
 11853  0041CA  2E25               	decfsz	??_turnLeft^0,f,c
 11854  0041CC  D7FC               	bra	u6067
 11855  0041CE  D000               	nop2	
 11856  0041D0  4A2A               	infsnz	turnLeft@i^0,f,c
 11857  0041D2  2A2B               	incf	(turnLeft@i+1)^0,f,c
 11858  0041D4                     l331:
 11859  0041D4  5028               	movf	turnLeft@delay_180^0,w,c
 11860  0041D6  5C2A               	subwf	turnLeft@i^0,w,c
 11861  0041D8  5029               	movf	(turnLeft@delay_180+1)^0,w,c
 11862  0041DA  582B               	subwfb	(turnLeft@i+1)^0,w,c
 11863  0041DC  A0D8               	btfss	status,0,c
 11864  0041DE  EFF3  F020         	goto	u5161
 11865  0041E2  EFF5  F020         	goto	u5160
 11866  0041E6                     u5161:
 11867  0041E6  EFE0  F020         	goto	l5088
 11868  0041EA                     u5160:
 11869  0041EA                     l5092:
 11870                           
 11871                           ;dc_motor.c: 112:     if (angle_left == 135){
 11872  0041EA  0E87               	movlw	135
 11873  0041EC  1824               	xorwf	turnLeft@angle_left^0,w,c
 11874  0041EE  A4D8               	btfss	status,2,c
 11875  0041F0  EFFC  F020         	goto	u5171
 11876  0041F4  EFFE  F020         	goto	u5170
 11877  0041F8                     u5171:
 11878  0041F8  EF1B  F021         	goto	l5100
 11879  0041FC                     u5170:
 11880  0041FC                     
 11881                           ;dc_motor.c: 113:         for(unsigned int i = 0; i <delay_135; i++){_delay((unsigned lo
      +                          ng)((1)*(64000000/4000.0)));}
 11882  0041FC  0E00               	movlw	0
 11883  0041FE  6E2D               	movwf	(turnLeft@i_1332+1)^0,c
 11884  004200  0E00               	movlw	0
 11885  004202  6E2C               	movwf	turnLeft@i_1332^0,c
 11886  004204  EF0E  F021         	goto	l335
 11887  004208                     l5096:
 11888  004208  0E15               	movlw	21
 11889  00420A  6E25               	movwf	??_turnLeft^0,c
 11890  00420C  0EC6               	movlw	198
 11891  00420E                     u6077:
 11892  00420E  2EE8               	decfsz	wreg,f,c
 11893  004210  D7FE               	bra	u6077
 11894  004212  2E25               	decfsz	??_turnLeft^0,f,c
 11895  004214  D7FC               	bra	u6077
 11896  004216  D000               	nop2	
 11897  004218  4A2C               	infsnz	turnLeft@i_1332^0,f,c
 11898  00421A  2A2D               	incf	(turnLeft@i_1332+1)^0,f,c
 11899  00421C                     l335:
 11900  00421C  5026               	movf	turnLeft@delay_135^0,w,c
 11901  00421E  5C2C               	subwf	turnLeft@i_1332^0,w,c
 11902  004220  5027               	movf	(turnLeft@delay_135+1)^0,w,c
 11903  004222  582D               	subwfb	(turnLeft@i_1332+1)^0,w,c
 11904  004224  A0D8               	btfss	status,0,c
 11905  004226  EF17  F021         	goto	u5181
 11906  00422A  EF19  F021         	goto	u5180
 11907  00422E                     u5181:
 11908  00422E  EF04  F021         	goto	l5096
 11909  004232                     u5180:
 11910  004232  EF36  F021         	goto	l5106
 11911  004236                     l5100:
 11912                           
 11913                           ;dc_motor.c: 116:         for(unsigned int i = 0; i < delay; i++){_delay((unsigned long)
      +                          ((1)*(64000000/4000.0)));}
 11914  004236  0E00               	movlw	0
 11915  004238  6E2F               	movwf	(turnLeft@i_1333+1)^0,c
 11916  00423A  0E00               	movlw	0
 11917  00423C  6E2E               	movwf	turnLeft@i_1333^0,c
 11918  00423E  EF2B  F021         	goto	l339
 11919  004242                     l5102:
 11920  004242  0E15               	movlw	21
 11921  004244  6E25               	movwf	??_turnLeft^0,c
 11922  004246  0EC6               	movlw	198
 11923  004248                     u6087:
 11924  004248  2EE8               	decfsz	wreg,f,c
 11925  00424A  D7FE               	bra	u6087
 11926  00424C  2E25               	decfsz	??_turnLeft^0,f,c
 11927  00424E  D7FC               	bra	u6087
 11928  004250  D000               	nop2	
 11929  004252  4A2E               	infsnz	turnLeft@i_1333^0,f,c
 11930  004254  2A2F               	incf	(turnLeft@i_1333+1)^0,f,c
 11931  004256                     l339:
 11932  004256  5030               	movf	turnLeft@delay^0,w,c
 11933  004258  5C2E               	subwf	turnLeft@i_1333^0,w,c
 11934  00425A  5031               	movf	(turnLeft@delay+1)^0,w,c
 11935  00425C  582F               	subwfb	(turnLeft@i_1333+1)^0,w,c
 11936  00425E  A0D8               	btfss	status,0,c
 11937  004260  EF34  F021         	goto	u5191
 11938  004264  EF36  F021         	goto	u5190
 11939  004268                     u5191:
 11940  004268  EF21  F021         	goto	l5102
 11941  00426C                     u5190:
 11942  00426C                     l5106:
 11943                           
 11944                           ;dc_motor.c: 118:     stop(mL,mR);
 11945  00426C  C020  F01A         	movff	turnLeft@mL,stop@mL
 11946  004270  C021  F01B         	movff	turnLeft@mL+1,stop@mL+1
 11947  004274  C022  F01C         	movff	turnLeft@mR,stop@mR
 11948  004278  C023  F01D         	movff	turnLeft@mR+1,stop@mR+1
 11949  00427C  ECE3  F025         	call	_stop	;wreg free
 11950  004280  0012               	return		;funcret
 11951  004282                     __end_of_turnLeft:
 11952                           	callstack 0
 11953                           
 11954 ;; *************** function _toggle_light *****************
 11955 ;; Defined at:
 11956 ;;		line 29 in file "color.c"
 11957 ;; Parameters:    Size  Location     Type
 11958 ;;  lightnumber     1    wreg     unsigned char 
 11959 ;;  toggletime      1    0[COMRAM] unsigned char 
 11960 ;; Auto vars:     Size  Location     Type
 11961 ;;  lightnumber     1    4[COMRAM] unsigned char 
 11962 ;;  i               1    3[COMRAM] unsigned char 
 11963 ;; Return value:  Size  Location     Type
 11964 ;;                  1    wreg      void 
 11965 ;; Registers used:
 11966 ;;		wreg, status,2, status,0
 11967 ;; Tracked objects:
 11968 ;;		On entry : 0/0
 11969 ;;		On exit  : 0/0
 11970 ;;		Unchanged: 0/0
 11971 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11972 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11973 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11974 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11975 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11976 ;;Total ram usage:        5 bytes
 11977 ;; Hardware stack levels used: 1
 11978 ;; Hardware stack levels required when called: 1
 11979 ;; This function calls:
 11980 ;;		Nothing
 11981 ;; This function is called by:
 11982 ;;		_calibrate_white
 11983 ;;		_detect_color
 11984 ;;		_amb_light_measure
 11985 ;;		_action
 11986 ;; This function uses a non-reentrant model
 11987 ;;
 11988                           
 11989                           	psect	text63
 11990  002F60                     __ptext63:
 11991                           	callstack 0
 11992  002F60                     _toggle_light:
 11993                           	callstack 27
 11994                           
 11995                           ;incstack = 0
 11996                           ;toggle_light@lightnumber stored from wreg
 11997  002F60  6E05               	movwf	toggle_light@lightnumber^0,c
 11998  002F62                     
 11999                           ;color.c: 29: void toggle_light(unsigned char lightnumber, unsigned char toggletime);col
      +                          or.c: 30: {;color.c: 31:     unsigned char i = 0;
 12000  002F62  0E00               	movlw	0
 12001  002F64  6E04               	movwf	toggle_light@i^0,c
 12002                           
 12003                           ;color.c: 33:     for (i = 0; i < toggletime; i++){
 12004  002F66  0E00               	movlw	0
 12005  002F68  6E04               	movwf	toggle_light@i^0,c
 12006  002F6A  EFFC  F018         	goto	l78
 12007  002F6E                     l4464:
 12008                           
 12009                           ;color.c: 34:         if (lightnumber == 1){
 12010  002F6E  0405               	decf	toggle_light@lightnumber^0,w,c
 12011  002F70  A4D8               	btfss	status,2,c
 12012  002F72  EFBD  F017         	goto	u4311
 12013  002F76  EFBF  F017         	goto	u4310
 12014  002F7A                     u4311:
 12015  002F7A  EFF7  F017         	goto	l4472
 12016  002F7E                     u4310:
 12017  002F7E                     
 12018                           ;color.c: 35:             LATHbits.LATH1 = !LATHbits.LATH1;
 12019  002F7E  A280               	btfss	128,1,c	;volatile
 12020  002F80  EFC4  F017         	goto	u4321
 12021  002F84  EFC8  F017         	goto	u4320
 12022  002F88                     u4321:
 12023  002F88  6A02               	clrf	??_toggle_light^0,c
 12024  002F8A  2A02               	incf	??_toggle_light^0,f,c
 12025  002F8C  EFC9  F017         	goto	u4338
 12026  002F90                     u4320:
 12027  002F90  6A02               	clrf	??_toggle_light^0,c
 12028  002F92                     u4338:
 12029  002F92  4602               	rlncf	??_toggle_light^0,f,c
 12030  002F94  5080               	movf	128,w,c	;volatile
 12031  002F96  1802               	xorwf	??_toggle_light^0,w,c
 12032  002F98  0BFD               	andlw	-3
 12033  002F9A  1802               	xorwf	??_toggle_light^0,w,c
 12034  002F9C  6E80               	movwf	128,c	;volatile
 12035  002F9E                     
 12036                           ;color.c: 36:             _delay((unsigned long)((500)*(64000000/4000.0)));
 12037  002F9E  0E29               	movlw	41
 12038  002FA0  6E03               	movwf	(??_toggle_light+1)^0,c
 12039  002FA2  0E96               	movlw	150
 12040  002FA4  6E02               	movwf	??_toggle_light^0,c
 12041  002FA6  0E7F               	movlw	127
 12042  002FA8                     u6097:
 12043  002FA8  2EE8               	decfsz	wreg,f,c
 12044  002FAA  D7FE               	bra	u6097
 12045  002FAC  2E02               	decfsz	??_toggle_light^0,f,c
 12046  002FAE  D7FC               	bra	u6097
 12047  002FB0  2E03               	decfsz	(??_toggle_light+1)^0,f,c
 12048  002FB2  D7FA               	bra	u6097
 12049  002FB4  F000               	nop	
 12050  002FB6                     
 12051                           ;color.c: 37:             LATHbits.LATH1 = !LATHbits.LATH1;
 12052  002FB6  A280               	btfss	128,1,c	;volatile
 12053  002FB8  EFE0  F017         	goto	u4341
 12054  002FBC  EFE4  F017         	goto	u4340
 12055  002FC0                     u4341:
 12056  002FC0  6A02               	clrf	??_toggle_light^0,c
 12057  002FC2  2A02               	incf	??_toggle_light^0,f,c
 12058  002FC4  EFE5  F017         	goto	u4358
 12059  002FC8                     u4340:
 12060  002FC8  6A02               	clrf	??_toggle_light^0,c
 12061  002FCA                     u4358:
 12062  002FCA  4602               	rlncf	??_toggle_light^0,f,c
 12063  002FCC  5080               	movf	128,w,c	;volatile
 12064  002FCE  1802               	xorwf	??_toggle_light^0,w,c
 12065  002FD0  0BFD               	andlw	-3
 12066  002FD2  1802               	xorwf	??_toggle_light^0,w,c
 12067  002FD4  6E80               	movwf	128,c	;volatile
 12068                           
 12069                           ;color.c: 38:             _delay((unsigned long)((500)*(64000000/4000.0)));
 12070  002FD6  0E29               	movlw	41
 12071  002FD8  6E03               	movwf	(??_toggle_light+1)^0,c
 12072  002FDA  0E96               	movlw	150
 12073  002FDC  6E02               	movwf	??_toggle_light^0,c
 12074  002FDE  0E7F               	movlw	127
 12075  002FE0                     u6107:
 12076  002FE0  2EE8               	decfsz	wreg,f,c
 12077  002FE2  D7FE               	bra	u6107
 12078  002FE4  2E02               	decfsz	??_toggle_light^0,f,c
 12079  002FE6  D7FC               	bra	u6107
 12080  002FE8  2E03               	decfsz	(??_toggle_light+1)^0,f,c
 12081  002FEA  D7FA               	bra	u6107
 12082  002FEC  F000               	nop	
 12083  002FEE                     l4472:
 12084                           
 12085                           ;color.c: 40:         if (lightnumber == 2){
 12086  002FEE  0E02               	movlw	2
 12087  002FF0  1805               	xorwf	toggle_light@lightnumber^0,w,c
 12088  002FF2  A4D8               	btfss	status,2,c
 12089  002FF4  EFFE  F017         	goto	u4361
 12090  002FF8  EF00  F018         	goto	u4360
 12091  002FFC                     u4361:
 12092  002FFC  EF38  F018         	goto	l4480
 12093  003000                     u4360:
 12094  003000                     
 12095                           ;color.c: 41:             LATDbits.LATD4 = !LATDbits.LATD4;
 12096  003000  A87C               	btfss	124,4,c	;volatile
 12097  003002  EF05  F018         	goto	u4371
 12098  003006  EF09  F018         	goto	u4370
 12099  00300A                     u4371:
 12100  00300A  6A02               	clrf	??_toggle_light^0,c
 12101  00300C  2A02               	incf	??_toggle_light^0,f,c
 12102  00300E  EF0A  F018         	goto	u4388
 12103  003012                     u4370:
 12104  003012  6A02               	clrf	??_toggle_light^0,c
 12105  003014                     u4388:
 12106  003014  3A02               	swapf	??_toggle_light^0,f,c
 12107  003016  507C               	movf	124,w,c	;volatile
 12108  003018  1802               	xorwf	??_toggle_light^0,w,c
 12109  00301A  0BEF               	andlw	-17
 12110  00301C  1802               	xorwf	??_toggle_light^0,w,c
 12111  00301E  6E7C               	movwf	124,c	;volatile
 12112  003020                     
 12113                           ;color.c: 42:             _delay((unsigned long)((500)*(64000000/4000.0)));
 12114  003020  0E29               	movlw	41
 12115  003022  6E03               	movwf	(??_toggle_light+1)^0,c
 12116  003024  0E96               	movlw	150
 12117  003026  6E02               	movwf	??_toggle_light^0,c
 12118  003028  0E7F               	movlw	127
 12119  00302A                     u6117:
 12120  00302A  2EE8               	decfsz	wreg,f,c
 12121  00302C  D7FE               	bra	u6117
 12122  00302E  2E02               	decfsz	??_toggle_light^0,f,c
 12123  003030  D7FC               	bra	u6117
 12124  003032  2E03               	decfsz	(??_toggle_light+1)^0,f,c
 12125  003034  D7FA               	bra	u6117
 12126  003036  F000               	nop	
 12127  003038                     
 12128                           ;color.c: 43:             LATDbits.LATD4 = !LATDbits.LATD4;
 12129  003038  A87C               	btfss	124,4,c	;volatile
 12130  00303A  EF21  F018         	goto	u4391
 12131  00303E  EF25  F018         	goto	u4390
 12132  003042                     u4391:
 12133  003042  6A02               	clrf	??_toggle_light^0,c
 12134  003044  2A02               	incf	??_toggle_light^0,f,c
 12135  003046  EF26  F018         	goto	u4408
 12136  00304A                     u4390:
 12137  00304A  6A02               	clrf	??_toggle_light^0,c
 12138  00304C                     u4408:
 12139  00304C  3A02               	swapf	??_toggle_light^0,f,c
 12140  00304E  507C               	movf	124,w,c	;volatile
 12141  003050  1802               	xorwf	??_toggle_light^0,w,c
 12142  003052  0BEF               	andlw	-17
 12143  003054  1802               	xorwf	??_toggle_light^0,w,c
 12144  003056  6E7C               	movwf	124,c	;volatile
 12145                           
 12146                           ;color.c: 44:             _delay((unsigned long)((500)*(64000000/4000.0)));
 12147  003058  0E29               	movlw	41
 12148  00305A  6E03               	movwf	(??_toggle_light+1)^0,c
 12149  00305C  0E96               	movlw	150
 12150  00305E  6E02               	movwf	??_toggle_light^0,c
 12151  003060  0E7F               	movlw	127
 12152  003062                     u6127:
 12153  003062  2EE8               	decfsz	wreg,f,c
 12154  003064  D7FE               	bra	u6127
 12155  003066  2E02               	decfsz	??_toggle_light^0,f,c
 12156  003068  D7FC               	bra	u6127
 12157  00306A  2E03               	decfsz	(??_toggle_light+1)^0,f,c
 12158  00306C  D7FA               	bra	u6127
 12159  00306E  F000               	nop	
 12160  003070                     l4480:
 12161                           
 12162                           ;color.c: 46:         if (lightnumber == 3){
 12163  003070  0E03               	movlw	3
 12164  003072  1805               	xorwf	toggle_light@lightnumber^0,w,c
 12165  003074  A4D8               	btfss	status,2,c
 12166  003076  EF3F  F018         	goto	u4411
 12167  00307A  EF41  F018         	goto	u4410
 12168  00307E                     u4411:
 12169  00307E  EF7D  F018         	goto	l4488
 12170  003082                     u4410:
 12171  003082                     
 12172                           ;color.c: 47:             LATDbits.LATD3 = !LATDbits.LATD3;
 12173  003082  A67C               	btfss	124,3,c	;volatile
 12174  003084  EF46  F018         	goto	u4421
 12175  003088  EF4A  F018         	goto	u4420
 12176  00308C                     u4421:
 12177  00308C  6A02               	clrf	??_toggle_light^0,c
 12178  00308E  2A02               	incf	??_toggle_light^0,f,c
 12179  003090  EF4B  F018         	goto	u4438
 12180  003094                     u4420:
 12181  003094  6A02               	clrf	??_toggle_light^0,c
 12182  003096                     u4438:
 12183  003096  4602               	rlncf	??_toggle_light^0,f,c
 12184  003098  4602               	rlncf	??_toggle_light^0,f,c
 12185  00309A  4602               	rlncf	??_toggle_light^0,f,c
 12186  00309C  507C               	movf	124,w,c	;volatile
 12187  00309E  1802               	xorwf	??_toggle_light^0,w,c
 12188  0030A0  0BF7               	andlw	-9
 12189  0030A2  1802               	xorwf	??_toggle_light^0,w,c
 12190  0030A4  6E7C               	movwf	124,c	;volatile
 12191  0030A6                     
 12192                           ;color.c: 48:             _delay((unsigned long)((500)*(64000000/4000.0)));
 12193  0030A6  0E29               	movlw	41
 12194  0030A8  6E03               	movwf	(??_toggle_light+1)^0,c
 12195  0030AA  0E96               	movlw	150
 12196  0030AC  6E02               	movwf	??_toggle_light^0,c
 12197  0030AE  0E7F               	movlw	127
 12198  0030B0                     u6137:
 12199  0030B0  2EE8               	decfsz	wreg,f,c
 12200  0030B2  D7FE               	bra	u6137
 12201  0030B4  2E02               	decfsz	??_toggle_light^0,f,c
 12202  0030B6  D7FC               	bra	u6137
 12203  0030B8  2E03               	decfsz	(??_toggle_light+1)^0,f,c
 12204  0030BA  D7FA               	bra	u6137
 12205  0030BC  F000               	nop	
 12206  0030BE                     
 12207                           ;color.c: 49:             LATDbits.LATD3 = !LATDbits.LATD3;
 12208  0030BE  A67C               	btfss	124,3,c	;volatile
 12209  0030C0  EF64  F018         	goto	u4441
 12210  0030C4  EF68  F018         	goto	u4440
 12211  0030C8                     u4441:
 12212  0030C8  6A02               	clrf	??_toggle_light^0,c
 12213  0030CA  2A02               	incf	??_toggle_light^0,f,c
 12214  0030CC  EF69  F018         	goto	u4458
 12215  0030D0                     u4440:
 12216  0030D0  6A02               	clrf	??_toggle_light^0,c
 12217  0030D2                     u4458:
 12218  0030D2  4602               	rlncf	??_toggle_light^0,f,c
 12219  0030D4  4602               	rlncf	??_toggle_light^0,f,c
 12220  0030D6  4602               	rlncf	??_toggle_light^0,f,c
 12221  0030D8  507C               	movf	124,w,c	;volatile
 12222  0030DA  1802               	xorwf	??_toggle_light^0,w,c
 12223  0030DC  0BF7               	andlw	-9
 12224  0030DE  1802               	xorwf	??_toggle_light^0,w,c
 12225  0030E0  6E7C               	movwf	124,c	;volatile
 12226                           
 12227                           ;color.c: 50:             _delay((unsigned long)((500)*(64000000/4000.0)));
 12228  0030E2  0E29               	movlw	41
 12229  0030E4  6E03               	movwf	(??_toggle_light+1)^0,c
 12230  0030E6  0E96               	movlw	150
 12231  0030E8  6E02               	movwf	??_toggle_light^0,c
 12232  0030EA  0E7F               	movlw	127
 12233  0030EC                     u6147:
 12234  0030EC  2EE8               	decfsz	wreg,f,c
 12235  0030EE  D7FE               	bra	u6147
 12236  0030F0  2E02               	decfsz	??_toggle_light^0,f,c
 12237  0030F2  D7FC               	bra	u6147
 12238  0030F4  2E03               	decfsz	(??_toggle_light+1)^0,f,c
 12239  0030F6  D7FA               	bra	u6147
 12240  0030F8  F000               	nop	
 12241  0030FA                     l4488:
 12242                           
 12243                           ;color.c: 52:         if (lightnumber == 4){
 12244  0030FA  0E04               	movlw	4
 12245  0030FC  1805               	xorwf	toggle_light@lightnumber^0,w,c
 12246  0030FE  A4D8               	btfss	status,2,c
 12247  003100  EF84  F018         	goto	u4461
 12248  003104  EF86  F018         	goto	u4460
 12249  003108                     u4461:
 12250  003108  EFBC  F018         	goto	l4496
 12251  00310C                     u4460:
 12252  00310C                     
 12253                           ;color.c: 53:             LATFbits.LATF0 = !LATFbits.LATF0;
 12254  00310C  A07E               	btfss	126,0,c	;volatile
 12255  00310E  EF8B  F018         	goto	u4471
 12256  003112  EF8F  F018         	goto	u4470
 12257  003116                     u4471:
 12258  003116  6A02               	clrf	??_toggle_light^0,c
 12259  003118  2A02               	incf	??_toggle_light^0,f,c
 12260  00311A  EF90  F018         	goto	u4488
 12261  00311E                     u4470:
 12262  00311E  6A02               	clrf	??_toggle_light^0,c
 12263  003120                     u4488:
 12264  003120  507E               	movf	126,w,c	;volatile
 12265  003122  1802               	xorwf	??_toggle_light^0,w,c
 12266  003124  0BFE               	andlw	-2
 12267  003126  1802               	xorwf	??_toggle_light^0,w,c
 12268  003128  6E7E               	movwf	126,c	;volatile
 12269  00312A                     
 12270                           ;color.c: 54:             _delay((unsigned long)((500)*(64000000/4000.0)));
 12271  00312A  0E29               	movlw	41
 12272  00312C  6E03               	movwf	(??_toggle_light+1)^0,c
 12273  00312E  0E96               	movlw	150
 12274  003130  6E02               	movwf	??_toggle_light^0,c
 12275  003132  0E7F               	movlw	127
 12276  003134                     u6157:
 12277  003134  2EE8               	decfsz	wreg,f,c
 12278  003136  D7FE               	bra	u6157
 12279  003138  2E02               	decfsz	??_toggle_light^0,f,c
 12280  00313A  D7FC               	bra	u6157
 12281  00313C  2E03               	decfsz	(??_toggle_light+1)^0,f,c
 12282  00313E  D7FA               	bra	u6157
 12283  003140  F000               	nop	
 12284  003142                     
 12285                           ;color.c: 55:             LATFbits.LATF0 = !LATFbits.LATF0;
 12286  003142  A07E               	btfss	126,0,c	;volatile
 12287  003144  EFA6  F018         	goto	u4491
 12288  003148  EFAA  F018         	goto	u4490
 12289  00314C                     u4491:
 12290  00314C  6A02               	clrf	??_toggle_light^0,c
 12291  00314E  2A02               	incf	??_toggle_light^0,f,c
 12292  003150  EFAB  F018         	goto	u4508
 12293  003154                     u4490:
 12294  003154  6A02               	clrf	??_toggle_light^0,c
 12295  003156                     u4508:
 12296  003156  507E               	movf	126,w,c	;volatile
 12297  003158  1802               	xorwf	??_toggle_light^0,w,c
 12298  00315A  0BFE               	andlw	-2
 12299  00315C  1802               	xorwf	??_toggle_light^0,w,c
 12300  00315E  6E7E               	movwf	126,c	;volatile
 12301                           
 12302                           ;color.c: 56:             _delay((unsigned long)((500)*(64000000/4000.0)));
 12303  003160  0E29               	movlw	41
 12304  003162  6E03               	movwf	(??_toggle_light+1)^0,c
 12305  003164  0E96               	movlw	150
 12306  003166  6E02               	movwf	??_toggle_light^0,c
 12307  003168  0E7F               	movlw	127
 12308  00316A                     u6167:
 12309  00316A  2EE8               	decfsz	wreg,f,c
 12310  00316C  D7FE               	bra	u6167
 12311  00316E  2E02               	decfsz	??_toggle_light^0,f,c
 12312  003170  D7FC               	bra	u6167
 12313  003172  2E03               	decfsz	(??_toggle_light+1)^0,f,c
 12314  003174  D7FA               	bra	u6167
 12315  003176  F000               	nop	
 12316  003178                     l4496:
 12317                           
 12318                           ;color.c: 58:         if (lightnumber == 3){
 12319  003178  0E03               	movlw	3
 12320  00317A  1805               	xorwf	toggle_light@lightnumber^0,w,c
 12321  00317C  A4D8               	btfss	status,2,c
 12322  00317E  EFC3  F018         	goto	u4511
 12323  003182  EFC5  F018         	goto	u4510
 12324  003186                     u4511:
 12325  003186  EFFB  F018         	goto	l4504
 12326  00318A                     u4510:
 12327  00318A                     
 12328                           ;color.c: 59:             LATHbits.LATH0 = !LATHbits.LATH0;
 12329  00318A  A080               	btfss	128,0,c	;volatile
 12330  00318C  EFCA  F018         	goto	u4521
 12331  003190  EFCE  F018         	goto	u4520
 12332  003194                     u4521:
 12333  003194  6A02               	clrf	??_toggle_light^0,c
 12334  003196  2A02               	incf	??_toggle_light^0,f,c
 12335  003198  EFCF  F018         	goto	u4538
 12336  00319C                     u4520:
 12337  00319C  6A02               	clrf	??_toggle_light^0,c
 12338  00319E                     u4538:
 12339  00319E  5080               	movf	128,w,c	;volatile
 12340  0031A0  1802               	xorwf	??_toggle_light^0,w,c
 12341  0031A2  0BFE               	andlw	-2
 12342  0031A4  1802               	xorwf	??_toggle_light^0,w,c
 12343  0031A6  6E80               	movwf	128,c	;volatile
 12344  0031A8                     
 12345                           ;color.c: 60:             _delay((unsigned long)((500)*(64000000/4000.0)));
 12346  0031A8  0E29               	movlw	41
 12347  0031AA  6E03               	movwf	(??_toggle_light+1)^0,c
 12348  0031AC  0E96               	movlw	150
 12349  0031AE  6E02               	movwf	??_toggle_light^0,c
 12350  0031B0  0E7F               	movlw	127
 12351  0031B2                     u6177:
 12352  0031B2  2EE8               	decfsz	wreg,f,c
 12353  0031B4  D7FE               	bra	u6177
 12354  0031B6  2E02               	decfsz	??_toggle_light^0,f,c
 12355  0031B8  D7FC               	bra	u6177
 12356  0031BA  2E03               	decfsz	(??_toggle_light+1)^0,f,c
 12357  0031BC  D7FA               	bra	u6177
 12358  0031BE  F000               	nop	
 12359  0031C0                     
 12360                           ;color.c: 61:             LATHbits.LATH0 = !LATHbits.LATH0;
 12361  0031C0  A080               	btfss	128,0,c	;volatile
 12362  0031C2  EFE5  F018         	goto	u4541
 12363  0031C6  EFE9  F018         	goto	u4540
 12364  0031CA                     u4541:
 12365  0031CA  6A02               	clrf	??_toggle_light^0,c
 12366  0031CC  2A02               	incf	??_toggle_light^0,f,c
 12367  0031CE  EFEA  F018         	goto	u4558
 12368  0031D2                     u4540:
 12369  0031D2  6A02               	clrf	??_toggle_light^0,c
 12370  0031D4                     u4558:
 12371  0031D4  5080               	movf	128,w,c	;volatile
 12372  0031D6  1802               	xorwf	??_toggle_light^0,w,c
 12373  0031D8  0BFE               	andlw	-2
 12374  0031DA  1802               	xorwf	??_toggle_light^0,w,c
 12375  0031DC  6E80               	movwf	128,c	;volatile
 12376                           
 12377                           ;color.c: 62:             _delay((unsigned long)((500)*(64000000/4000.0)));
 12378  0031DE  0E29               	movlw	41
 12379  0031E0  6E03               	movwf	(??_toggle_light+1)^0,c
 12380  0031E2  0E96               	movlw	150
 12381  0031E4  6E02               	movwf	??_toggle_light^0,c
 12382  0031E6  0E7F               	movlw	127
 12383  0031E8                     u6187:
 12384  0031E8  2EE8               	decfsz	wreg,f,c
 12385  0031EA  D7FE               	bra	u6187
 12386  0031EC  2E02               	decfsz	??_toggle_light^0,f,c
 12387  0031EE  D7FC               	bra	u6187
 12388  0031F0  2E03               	decfsz	(??_toggle_light+1)^0,f,c
 12389  0031F2  D7FA               	bra	u6187
 12390  0031F4  F000               	nop	
 12391  0031F6                     l4504:
 12392                           
 12393                           ;color.c: 64:     }
 12394  0031F6  2A04               	incf	toggle_light@i^0,f,c
 12395  0031F8                     l78:
 12396  0031F8  5001               	movf	toggle_light@toggletime^0,w,c
 12397  0031FA  5C04               	subwf	toggle_light@i^0,w,c
 12398  0031FC  A0D8               	btfss	status,0,c
 12399  0031FE  EF03  F019         	goto	u4561
 12400  003202  EF05  F019         	goto	u4560
 12401  003206                     u4561:
 12402  003206  EFB7  F017         	goto	l4464
 12403  00320A                     u4560:
 12404  00320A  0012               	return		;funcret
 12405  00320C                     __end_of_toggle_light:
 12406                           	callstack 0
 12407                           
 12408 ;; *************** function _short_reverse *****************
 12409 ;; Defined at:
 12410 ;;		line 183 in file "dc_motor.c"
 12411 ;; Parameters:    Size  Location     Type
 12412 ;;  mL              2   37[COMRAM] PTR struct DC_motor
 12413 ;;		 -> main@motorL(10), 
 12414 ;;  mR              2   39[COMRAM] PTR struct DC_motor
 12415 ;;		 -> main@motorR(10), 
 12416 ;; Auto vars:     Size  Location     Type
 12417 ;;		None
 12418 ;; Return value:  Size  Location     Type
 12419 ;;                  1    wreg      void 
 12420 ;; Registers used:
 12421 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12422 ;; Tracked objects:
 12423 ;;		On entry : 0/0
 12424 ;;		On exit  : 0/0
 12425 ;;		Unchanged: 0/0
 12426 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12427 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12428 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12429 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12430 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12431 ;;Total ram usage:        6 bytes
 12432 ;; Hardware stack levels used: 1
 12433 ;; Hardware stack levels required when called: 5
 12434 ;; This function calls:
 12435 ;;		_fullSpeedBack
 12436 ;;		_stop
 12437 ;; This function is called by:
 12438 ;;		_action
 12439 ;; This function uses a non-reentrant model
 12440 ;;
 12441                           
 12442                           	psect	text64
 12443  0051EC                     __ptext64:
 12444                           	callstack 0
 12445  0051EC                     _short_reverse:
 12446                           	callstack 24
 12447  0051EC                     
 12448                           ;dc_motor.c: 183: void short_reverse(struct DC_motor *mL, struct DC_motor *mR);dc_motor.
      +                          c: 184: { fullSpeedBack(mL, mR);
 12449  0051EC  C026  F020         	movff	short_reverse@mL,fullSpeedBack@mL
 12450  0051F0  C027  F021         	movff	short_reverse@mL+1,fullSpeedBack@mL+1
 12451  0051F4  C028  F022         	movff	short_reverse@mR,fullSpeedBack@mR
 12452  0051F8  C029  F023         	movff	short_reverse@mR+1,fullSpeedBack@mR+1
 12453  0051FC  EC83  F025         	call	_fullSpeedBack	;wreg free
 12454  005200                     
 12455                           ;dc_motor.c: 185:     _delay((unsigned long)((500)*(64000000/4000.0)));
 12456  005200  0E29               	movlw	41
 12457  005202  6E2B               	movwf	(??_short_reverse+1)^0,c
 12458  005204  0E96               	movlw	150
 12459  005206  6E2A               	movwf	??_short_reverse^0,c
 12460  005208  0E7F               	movlw	127
 12461  00520A                     u6197:
 12462  00520A  2EE8               	decfsz	wreg,f,c
 12463  00520C  D7FE               	bra	u6197
 12464  00520E  2E2A               	decfsz	??_short_reverse^0,f,c
 12465  005210  D7FC               	bra	u6197
 12466  005212  2E2B               	decfsz	(??_short_reverse+1)^0,f,c
 12467  005214  D7FA               	bra	u6197
 12468  005216  F000               	nop	
 12469  005218                     
 12470                           ;dc_motor.c: 186:     stop(mL,mR);
 12471  005218  C026  F01A         	movff	short_reverse@mL,stop@mL
 12472  00521C  C027  F01B         	movff	short_reverse@mL+1,stop@mL+1
 12473  005220  C028  F01C         	movff	short_reverse@mR,stop@mR
 12474  005224  C029  F01D         	movff	short_reverse@mR+1,stop@mR+1
 12475  005228  ECE3  F025         	call	_stop	;wreg free
 12476  00522C  0012               	return		;funcret
 12477  00522E                     __end_of_short_reverse:
 12478                           	callstack 0
 12479                           
 12480 ;; *************** function _reverse_square *****************
 12481 ;; Defined at:
 12482 ;;		line 189 in file "dc_motor.c"
 12483 ;; Parameters:    Size  Location     Type
 12484 ;;  mL              2   37[COMRAM] PTR struct DC_motor
 12485 ;;		 -> main@motorL(10), 
 12486 ;;  mR              2   39[COMRAM] PTR struct DC_motor
 12487 ;;		 -> main@motorR(10), 
 12488 ;; Auto vars:     Size  Location     Type
 12489 ;;		None
 12490 ;; Return value:  Size  Location     Type
 12491 ;;                  1    wreg      void 
 12492 ;; Registers used:
 12493 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12494 ;; Tracked objects:
 12495 ;;		On entry : 0/0
 12496 ;;		On exit  : 0/0
 12497 ;;		Unchanged: 0/0
 12498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12499 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12500 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12501 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12502 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12503 ;;Total ram usage:        6 bytes
 12504 ;; Hardware stack levels used: 1
 12505 ;; Hardware stack levels required when called: 5
 12506 ;; This function calls:
 12507 ;;		_fullSpeedBack
 12508 ;;		_stop
 12509 ;; This function is called by:
 12510 ;;		_action
 12511 ;;		_goback
 12512 ;; This function uses a non-reentrant model
 12513 ;;
 12514                           
 12515                           	psect	text65
 12516  00522E                     __ptext65:
 12517                           	callstack 0
 12518  00522E                     _reverse_square:
 12519                           	callstack 24
 12520  00522E                     
 12521                           ;dc_motor.c: 189: void reverse_square(struct DC_motor *mL, struct DC_motor *mR);dc_motor
      +                          .c: 190: { fullSpeedBack(mL, mR);
 12522  00522E  C026  F020         	movff	reverse_square@mL,fullSpeedBack@mL
 12523  005232  C027  F021         	movff	reverse_square@mL+1,fullSpeedBack@mL+1
 12524  005236  C028  F022         	movff	reverse_square@mR,fullSpeedBack@mR
 12525  00523A  C029  F023         	movff	reverse_square@mR+1,fullSpeedBack@mR+1
 12526  00523E  EC83  F025         	call	_fullSpeedBack	;wreg free
 12527  005242                     
 12528                           ;dc_motor.c: 191:     _delay((unsigned long)((1000)*(64000000/4000.0)));
 12529  005242  0E52               	movlw	82
 12530  005244  6E2B               	movwf	(??_reverse_square+1)^0,c
 12531  005246  0E2B               	movlw	43
 12532  005248  6E2A               	movwf	??_reverse_square^0,c
 12533  00524A  0E00               	movlw	0
 12534  00524C                     u6207:
 12535  00524C  2EE8               	decfsz	wreg,f,c
 12536  00524E  D7FE               	bra	u6207
 12537  005250  2E2A               	decfsz	??_reverse_square^0,f,c
 12538  005252  D7FC               	bra	u6207
 12539  005254  2E2B               	decfsz	(??_reverse_square+1)^0,f,c
 12540  005256  D7FA               	bra	u6207
 12541  005258  D000               	nop2	
 12542  00525A                     
 12543                           ;dc_motor.c: 192:     stop(mL,mR);
 12544  00525A  C026  F01A         	movff	reverse_square@mL,stop@mL
 12545  00525E  C027  F01B         	movff	reverse_square@mL+1,stop@mL+1
 12546  005262  C028  F01C         	movff	reverse_square@mR,stop@mR
 12547  005266  C029  F01D         	movff	reverse_square@mR+1,stop@mR+1
 12548  00526A  ECE3  F025         	call	_stop	;wreg free
 12549  00526E  0012               	return		;funcret
 12550  005270                     __end_of_reverse_square:
 12551                           	callstack 0
 12552                           
 12553 ;; *************** function _fullSpeedBack *****************
 12554 ;; Defined at:
 12555 ;;		line 168 in file "dc_motor.c"
 12556 ;; Parameters:    Size  Location     Type
 12557 ;;  mL              2   31[COMRAM] PTR struct DC_motor
 12558 ;;		 -> main@motorL(10), 
 12559 ;;  mR              2   33[COMRAM] PTR struct DC_motor
 12560 ;;		 -> main@motorR(10), 
 12561 ;; Auto vars:     Size  Location     Type
 12562 ;;		None
 12563 ;; Return value:  Size  Location     Type
 12564 ;;                  1    wreg      void 
 12565 ;; Registers used:
 12566 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12567 ;; Tracked objects:
 12568 ;;		On entry : 0/0
 12569 ;;		On exit  : 0/0
 12570 ;;		Unchanged: 0/0
 12571 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12572 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12573 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12574 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12575 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12576 ;;Total ram usage:        6 bytes
 12577 ;; Hardware stack levels used: 1
 12578 ;; Hardware stack levels required when called: 4
 12579 ;; This function calls:
 12580 ;;		_setMotorPWM
 12581 ;;		_stop
 12582 ;; This function is called by:
 12583 ;;		_short_reverse
 12584 ;;		_reverse_square
 12585 ;; This function uses a non-reentrant model
 12586 ;;
 12587                           
 12588                           	psect	text66
 12589  004B06                     __ptext66:
 12590                           	callstack 0
 12591  004B06                     _fullSpeedBack:
 12592                           	callstack 24
 12593  004B06                     
 12594                           ;dc_motor.c: 168: void fullSpeedBack(struct DC_motor *mL, struct DC_motor *mR);dc_motor.
      +                          c: 169: {;dc_motor.c: 170:     mL->direction=0;
 12595  004B06  EE20 F001          	lfsr	2,1
 12596  004B0A  5020               	movf	fullSpeedBack@mL^0,w,c
 12597  004B0C  26D9               	addwf	fsr2l,f,c
 12598  004B0E  5021               	movf	(fullSpeedBack@mL+1)^0,w,c
 12599  004B10  22DA               	addwfc	fsr2h,f,c
 12600  004B12  0E00               	movlw	0
 12601  004B14  6EDF               	movwf	indf2,c
 12602                           
 12603                           ;dc_motor.c: 171:     mR->direction=0;
 12604  004B16  EE20 F001          	lfsr	2,1
 12605  004B1A  5022               	movf	fullSpeedBack@mR^0,w,c
 12606  004B1C  26D9               	addwf	fsr2l,f,c
 12607  004B1E  5023               	movf	(fullSpeedBack@mR+1)^0,w,c
 12608  004B20  22DA               	addwfc	fsr2h,f,c
 12609  004B22  0E00               	movlw	0
 12610  004B24  6EDF               	movwf	indf2,c
 12611                           
 12612                           ;dc_motor.c: 172:     while (mL->power<50 && mR->power<50){
 12613  004B26  EFB4  F025         	goto	l4560
 12614  004B2A                     l4552:
 12615                           
 12616                           ;dc_motor.c: 173:         mL->power += 10;
 12617  004B2A  C020  FFD9         	movff	fullSpeedBack@mL,fsr2l
 12618  004B2E  C021  FFDA         	movff	fullSpeedBack@mL+1,fsr2h
 12619  004B32  0E0A               	movlw	10
 12620  004B34  26DF               	addwf	indf2,f,c
 12621                           
 12622                           ;dc_motor.c: 174:         mR->power += 10;
 12623  004B36  C022  FFD9         	movff	fullSpeedBack@mR,fsr2l
 12624  004B3A  C023  FFDA         	movff	fullSpeedBack@mR+1,fsr2h
 12625  004B3E  0E0A               	movlw	10
 12626  004B40  26DF               	addwf	indf2,f,c
 12627  004B42                     
 12628                           ;dc_motor.c: 175:         setMotorPWM(mL);
 12629  004B42  C020  F00F         	movff	fullSpeedBack@mL,setMotorPWM@m
 12630  004B46  C021  F010         	movff	fullSpeedBack@mL+1,setMotorPWM@m+1
 12631  004B4A  ECFF  F019         	call	_setMotorPWM	;wreg free
 12632  004B4E                     
 12633                           ;dc_motor.c: 176:         setMotorPWM(mR);
 12634  004B4E  C022  F00F         	movff	fullSpeedBack@mR,setMotorPWM@m
 12635  004B52  C023  F010         	movff	fullSpeedBack@mR+1,setMotorPWM@m+1
 12636  004B56  ECFF  F019         	call	_setMotorPWM	;wreg free
 12637  004B5A                     
 12638                           ;dc_motor.c: 177:         _delay((unsigned long)((10)*(64000000/4000.0)));
 12639  004B5A  0ED0               	movlw	208
 12640  004B5C  6E24               	movwf	??_fullSpeedBack^0,c
 12641  004B5E  0ECA               	movlw	202
 12642  004B60                     u6217:
 12643  004B60  2EE8               	decfsz	wreg,f,c
 12644  004B62  D7FE               	bra	u6217
 12645  004B64  2E24               	decfsz	??_fullSpeedBack^0,f,c
 12646  004B66  D7FC               	bra	u6217
 12647  004B68                     l4560:
 12648                           
 12649                           ;dc_motor.c: 172:     while (mL->power<50 && mR->power<50){
 12650  004B68  C020  FFD9         	movff	fullSpeedBack@mL,fsr2l
 12651  004B6C  C021  FFDA         	movff	fullSpeedBack@mL+1,fsr2h
 12652  004B70  0E32               	movlw	50
 12653  004B72  60DF               	cpfslt	indf2,c
 12654  004B74  EFBE  F025         	goto	u4591
 12655  004B78  EFC0  F025         	goto	u4590
 12656  004B7C                     u4591:
 12657  004B7C  EFCC  F025         	goto	l4564
 12658  004B80                     u4590:
 12659  004B80  C022  FFD9         	movff	fullSpeedBack@mR,fsr2l
 12660  004B84  C023  FFDA         	movff	fullSpeedBack@mR+1,fsr2h
 12661  004B88  0E31               	movlw	49
 12662  004B8A  64DF               	cpfsgt	indf2,c
 12663  004B8C  EFCA  F025         	goto	u4601
 12664  004B90  EFCC  F025         	goto	u4600
 12665  004B94                     u4601:
 12666  004B94  EF95  F025         	goto	l4552
 12667  004B98                     u4600:
 12668  004B98                     l4564:
 12669                           
 12670                           ;dc_motor.c: 179:     _delay((unsigned long)((500)*(64000000/4000.0)));
 12671  004B98  0E29               	movlw	41
 12672  004B9A  6E25               	movwf	(??_fullSpeedBack+1)^0,c
 12673  004B9C  0E96               	movlw	150
 12674  004B9E  6E24               	movwf	??_fullSpeedBack^0,c
 12675  004BA0  0E7F               	movlw	127
 12676  004BA2                     u6227:
 12677  004BA2  2EE8               	decfsz	wreg,f,c
 12678  004BA4  D7FE               	bra	u6227
 12679  004BA6  2E24               	decfsz	??_fullSpeedBack^0,f,c
 12680  004BA8  D7FC               	bra	u6227
 12681  004BAA  2E25               	decfsz	(??_fullSpeedBack+1)^0,f,c
 12682  004BAC  D7FA               	bra	u6227
 12683  004BAE  F000               	nop	
 12684  004BB0                     
 12685                           ;dc_motor.c: 180:     stop(mL,mR);
 12686  004BB0  C020  F01A         	movff	fullSpeedBack@mL,stop@mL
 12687  004BB4  C021  F01B         	movff	fullSpeedBack@mL+1,stop@mL+1
 12688  004BB8  C022  F01C         	movff	fullSpeedBack@mR,stop@mR
 12689  004BBC  C023  F01D         	movff	fullSpeedBack@mR+1,stop@mR+1
 12690  004BC0  ECE3  F025         	call	_stop	;wreg free
 12691  004BC4  0012               	return		;funcret
 12692  004BC6                     __end_of_fullSpeedBack:
 12693                           	callstack 0
 12694                           
 12695 ;; *************** function _stop *****************
 12696 ;; Defined at:
 12697 ;;		line 82 in file "dc_motor.c"
 12698 ;; Parameters:    Size  Location     Type
 12699 ;;  mL              2   25[COMRAM] PTR struct DC_motor
 12700 ;;		 -> main@motorL(10), 
 12701 ;;  mR              2   27[COMRAM] PTR struct DC_motor
 12702 ;;		 -> main@motorR(10), 
 12703 ;; Auto vars:     Size  Location     Type
 12704 ;;		None
 12705 ;; Return value:  Size  Location     Type
 12706 ;;                  1    wreg      void 
 12707 ;; Registers used:
 12708 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12709 ;; Tracked objects:
 12710 ;;		On entry : 0/0
 12711 ;;		On exit  : 0/0
 12712 ;;		Unchanged: 0/0
 12713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12714 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12715 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12716 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12717 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12718 ;;Total ram usage:        6 bytes
 12719 ;; Hardware stack levels used: 1
 12720 ;; Hardware stack levels required when called: 3
 12721 ;; This function calls:
 12722 ;;		_setMotorPWM
 12723 ;; This function is called by:
 12724 ;;		_turnLeft
 12725 ;;		_turnRight
 12726 ;;		_fullSpeedBack
 12727 ;;		_short_reverse
 12728 ;;		_reverse_square
 12729 ;;		_main
 12730 ;;		_test_function
 12731 ;;		_fullSpeedAhead_test
 12732 ;;		_short_burst
 12733 ;;		_goback
 12734 ;; This function uses a non-reentrant model
 12735 ;;
 12736                           
 12737                           	psect	text67
 12738  004BC6                     __ptext67:
 12739                           	callstack 0
 12740  004BC6                     _stop:
 12741                           	callstack 26
 12742  004BC6                     
 12743                           ;dc_motor.c: 82: void stop(struct DC_motor *mL, struct DC_motor *mR);dc_motor.c: 83: {;d
      +                          c_motor.c: 84:     while (mL->power >0 || mR->power >0){
 12744  004BC6  EF1C  F026         	goto	l4378
 12745  004BCA                     l4364:
 12746                           
 12747                           ;dc_motor.c: 85:         if (mL->power !=0){mL->power -= 5;}
 12748  004BCA  C01A  FFD9         	movff	stop@mL,fsr2l
 12749  004BCE  C01B  FFDA         	movff	stop@mL+1,fsr2h
 12750  004BD2  50DF               	movf	indf2,w,c
 12751  004BD4  B4D8               	btfsc	status,2,c
 12752  004BD6  EFEF  F025         	goto	u4111
 12753  004BDA  EFF1  F025         	goto	u4110
 12754  004BDE                     u4111:
 12755  004BDE  EFF7  F025         	goto	l4368
 12756  004BE2                     u4110:
 12757  004BE2  C01A  FFD9         	movff	stop@mL,fsr2l
 12758  004BE6  C01B  FFDA         	movff	stop@mL+1,fsr2h
 12759  004BEA  0E05               	movlw	5
 12760  004BEC  5EDF               	subwf	indf2,f,c
 12761  004BEE                     l4368:
 12762                           
 12763                           ;dc_motor.c: 86:         if (mR->power !=0){mR->power -= 5;}
 12764  004BEE  C01C  FFD9         	movff	stop@mR,fsr2l
 12765  004BF2  C01D  FFDA         	movff	stop@mR+1,fsr2h
 12766  004BF6  50DF               	movf	indf2,w,c
 12767  004BF8  B4D8               	btfsc	status,2,c
 12768  004BFA  EF01  F026         	goto	u4121
 12769  004BFE  EF03  F026         	goto	u4120
 12770  004C02                     u4121:
 12771  004C02  EF09  F026         	goto	l4372
 12772  004C06                     u4120:
 12773  004C06  C01C  FFD9         	movff	stop@mR,fsr2l
 12774  004C0A  C01D  FFDA         	movff	stop@mR+1,fsr2h
 12775  004C0E  0E05               	movlw	5
 12776  004C10  5EDF               	subwf	indf2,f,c
 12777  004C12                     l4372:
 12778                           
 12779                           ;dc_motor.c: 87:         setMotorPWM(mL);
 12780  004C12  C01A  F00F         	movff	stop@mL,setMotorPWM@m
 12781  004C16  C01B  F010         	movff	stop@mL+1,setMotorPWM@m+1
 12782  004C1A  ECFF  F019         	call	_setMotorPWM	;wreg free
 12783  004C1E                     
 12784                           ;dc_motor.c: 88:         setMotorPWM(mR);
 12785  004C1E  C01C  F00F         	movff	stop@mR,setMotorPWM@m
 12786  004C22  C01D  F010         	movff	stop@mR+1,setMotorPWM@m+1
 12787  004C26  ECFF  F019         	call	_setMotorPWM	;wreg free
 12788  004C2A                     
 12789                           ;dc_motor.c: 89:         _delay((unsigned long)((10)*(64000000/4000.0)));
 12790  004C2A  0ED0               	movlw	208
 12791  004C2C  6E1E               	movwf	??_stop^0,c
 12792  004C2E  0ECA               	movlw	202
 12793  004C30                     u6237:
 12794  004C30  2EE8               	decfsz	wreg,f,c
 12795  004C32  D7FE               	bra	u6237
 12796  004C34  2E1E               	decfsz	??_stop^0,f,c
 12797  004C36  D7FC               	bra	u6237
 12798  004C38                     l4378:
 12799                           
 12800                           ;dc_motor.c: 84:     while (mL->power >0 || mR->power >0){
 12801  004C38  C01A  FFD9         	movff	stop@mL,fsr2l
 12802  004C3C  C01B  FFDA         	movff	stop@mL+1,fsr2h
 12803  004C40  50DF               	movf	indf2,w,c
 12804  004C42  A4D8               	btfss	status,2,c
 12805  004C44  EF26  F026         	goto	u4131
 12806  004C48  EF28  F026         	goto	u4130
 12807  004C4C                     u4131:
 12808  004C4C  EFE5  F025         	goto	l4364
 12809  004C50                     u4130:
 12810  004C50  C01C  FFD9         	movff	stop@mR,fsr2l
 12811  004C54  C01D  FFDA         	movff	stop@mR+1,fsr2h
 12812  004C58  50DF               	movf	indf2,w,c
 12813  004C5A  A4D8               	btfss	status,2,c
 12814  004C5C  EF32  F026         	goto	u4141
 12815  004C60  EF34  F026         	goto	u4140
 12816  004C64                     u4141:
 12817  004C64  EFE5  F025         	goto	l4364
 12818  004C68                     u4140:
 12819  004C68                     
 12820                           ;dc_motor.c: 91:     _delay((unsigned long)((100)*(64000000/4000.0)));
 12821  004C68  0E09               	movlw	9
 12822  004C6A  6E1F               	movwf	(??_stop+1)^0,c
 12823  004C6C  0E1E               	movlw	30
 12824  004C6E  6E1E               	movwf	??_stop^0,c
 12825  004C70  0EE4               	movlw	228
 12826  004C72                     u6247:
 12827  004C72  2EE8               	decfsz	wreg,f,c
 12828  004C74  D7FE               	bra	u6247
 12829  004C76  2E1E               	decfsz	??_stop^0,f,c
 12830  004C78  D7FC               	bra	u6247
 12831  004C7A  2E1F               	decfsz	(??_stop+1)^0,f,c
 12832  004C7C  D7FA               	bra	u6247
 12833  004C7E  D000               	nop2	
 12834  004C80  0012               	return		;funcret
 12835  004C82                     __end_of_stop:
 12836                           	callstack 0
 12837                           
 12838 ;; *************** function _setMotorPWM *****************
 12839 ;; Defined at:
 12840 ;;		line 59 in file "dc_motor.c"
 12841 ;; Parameters:    Size  Location     Type
 12842 ;;  m               2   14[COMRAM] PTR struct DC_motor
 12843 ;;		 -> main@motorR(10), main@motorL(10), 
 12844 ;; Auto vars:     Size  Location     Type
 12845 ;;  PWMduty         2   23[COMRAM] int 
 12846 ;; Return value:  Size  Location     Type
 12847 ;;                  1    wreg      void 
 12848 ;; Registers used:
 12849 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12850 ;; Tracked objects:
 12851 ;;		On entry : 0/0
 12852 ;;		On exit  : 0/0
 12853 ;;		Unchanged: 0/0
 12854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12855 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12856 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12857 ;;      Temps:          7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12858 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12859 ;;Total ram usage:       11 bytes
 12860 ;; Hardware stack levels used: 1
 12861 ;; Hardware stack levels required when called: 2
 12862 ;; This function calls:
 12863 ;;		___awdiv
 12864 ;;		___wmul
 12865 ;; This function is called by:
 12866 ;;		_stop
 12867 ;;		_turnLeft
 12868 ;;		_turnRight
 12869 ;;		_fullSpeedAhead
 12870 ;;		_fullSpeedBack
 12871 ;; This function uses a non-reentrant model
 12872 ;;
 12873                           
 12874                           	psect	text68
 12875  0033FE                     __ptext68:
 12876                           	callstack 0
 12877  0033FE                     _setMotorPWM:
 12878                           	callstack 26
 12879  0033FE                     
 12880                           ;dc_motor.c: 59: void setMotorPWM(struct DC_motor *m);dc_motor.c: 60: {;dc_motor.c: 61: 
      +                           int PWMduty;;dc_motor.c: 63:  if (m->direction){
 12881  0033FE  EE20 F001          	lfsr	2,1
 12882  003402  500F               	movf	setMotorPWM@m^0,w,c
 12883  003404  26D9               	addwf	fsr2l,f,c
 12884  003406  5010               	movf	(setMotorPWM@m+1)^0,w,c
 12885  003408  22DA               	addwfc	fsr2h,f,c
 12886  00340A  50DF               	movf	indf2,w,c
 12887  00340C  B4D8               	btfsc	status,2,c
 12888  00340E  EF0B  F01A         	goto	u3791
 12889  003412  EF0D  F01A         	goto	u3790
 12890  003416                     u3791:
 12891  003416  EF3E  F01A         	goto	l4130
 12892  00341A                     u3790:
 12893  00341A                     
 12894                           ;dc_motor.c: 65:   PWMduty=m->PWMperiod - ((int)(m->power)*(m->PWMperiod))/100;
 12895  00341A  C00F  FFD9         	movff	setMotorPWM@m,fsr2l
 12896  00341E  C010  FFDA         	movff	setMotorPWM@m+1,fsr2h
 12897  003422  50DF               	movf	indf2,w,c
 12898  003424  6E11               	movwf	??_setMotorPWM^0,c
 12899  003426  5011               	movf	??_setMotorPWM^0,w,c
 12900  003428  6E01               	movwf	___wmul@multiplier^0,c
 12901  00342A  6A02               	clrf	(___wmul@multiplier+1)^0,c
 12902  00342C  EE20 F007          	lfsr	2,7
 12903  003430  500F               	movf	setMotorPWM@m^0,w,c
 12904  003432  26D9               	addwf	fsr2l,f,c
 12905  003434  5010               	movf	(setMotorPWM@m+1)^0,w,c
 12906  003436  22DA               	addwfc	fsr2h,f,c
 12907  003438  CFDE F003          	movff	postinc2,___wmul@multiplicand
 12908  00343C  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
 12909  003440  EC3B  F02A         	call	___wmul	;wreg free
 12910  003444  C001  F007         	movff	?___wmul,___awdiv@dividend
 12911  003448  C002  F008         	movff	?___wmul+1,___awdiv@dividend+1
 12912  00344C  0E00               	movlw	0
 12913  00344E  6E0A               	movwf	(___awdiv@divisor+1)^0,c
 12914  003450  0E64               	movlw	100
 12915  003452  6E09               	movwf	___awdiv@divisor^0,c
 12916  003454  EC21  F025         	call	___awdiv	;wreg free
 12917  003458  EE20 F007          	lfsr	2,7
 12918  00345C  500F               	movf	setMotorPWM@m^0,w,c
 12919  00345E  26D9               	addwf	fsr2l,f,c
 12920  003460  5010               	movf	(setMotorPWM@m+1)^0,w,c
 12921  003462  22DA               	addwfc	fsr2h,f,c
 12922  003464  CFDE F012          	movff	postinc2,??_setMotorPWM+1
 12923  003468  CFDD F013          	movff	postdec2,??_setMotorPWM+2
 12924  00346C  5007               	movf	?___awdiv^0,w,c
 12925  00346E  5C12               	subwf	(??_setMotorPWM+1)^0,w,c
 12926  003470  6E18               	movwf	setMotorPWM@PWMduty^0,c
 12927  003472  5008               	movf	(?___awdiv+1)^0,w,c
 12928  003474  5813               	subwfb	(??_setMotorPWM+2)^0,w,c
 12929  003476  6E19               	movwf	(setMotorPWM@PWMduty+1)^0,c
 12930                           
 12931                           ;dc_motor.c: 66:  }
 12932  003478  EF61  F01A         	goto	l4132
 12933  00347C                     l4130:
 12934                           
 12935                           ;dc_motor.c: 69:   PWMduty=((int)(m->power)*(m->PWMperiod))/100;
 12936  00347C  C00F  FFD9         	movff	setMotorPWM@m,fsr2l
 12937  003480  C010  FFDA         	movff	setMotorPWM@m+1,fsr2h
 12938  003484  50DF               	movf	indf2,w,c
 12939  003486  6E11               	movwf	??_setMotorPWM^0,c
 12940  003488  5011               	movf	??_setMotorPWM^0,w,c
 12941  00348A  6E01               	movwf	___wmul@multiplier^0,c
 12942  00348C  6A02               	clrf	(___wmul@multiplier+1)^0,c
 12943  00348E  EE20 F007          	lfsr	2,7
 12944  003492  500F               	movf	setMotorPWM@m^0,w,c
 12945  003494  26D9               	addwf	fsr2l,f,c
 12946  003496  5010               	movf	(setMotorPWM@m+1)^0,w,c
 12947  003498  22DA               	addwfc	fsr2h,f,c
 12948  00349A  CFDE F003          	movff	postinc2,___wmul@multiplicand
 12949  00349E  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
 12950  0034A2  EC3B  F02A         	call	___wmul	;wreg free
 12951  0034A6  C001  F007         	movff	?___wmul,___awdiv@dividend
 12952  0034AA  C002  F008         	movff	?___wmul+1,___awdiv@dividend+1
 12953  0034AE  0E00               	movlw	0
 12954  0034B0  6E0A               	movwf	(___awdiv@divisor+1)^0,c
 12955  0034B2  0E64               	movlw	100
 12956  0034B4  6E09               	movwf	___awdiv@divisor^0,c
 12957  0034B6  EC21  F025         	call	___awdiv	;wreg free
 12958  0034BA  C007  F018         	movff	?___awdiv,setMotorPWM@PWMduty
 12959  0034BE  C008  F019         	movff	?___awdiv+1,setMotorPWM@PWMduty+1
 12960  0034C2                     l4132:
 12961                           
 12962                           ;dc_motor.c: 72:  *(m->dutyHighByte) = PWMduty;
 12963  0034C2  EE20 F002          	lfsr	2,2
 12964  0034C6  500F               	movf	setMotorPWM@m^0,w,c
 12965  0034C8  26D9               	addwf	fsr2l,f,c
 12966  0034CA  5010               	movf	(setMotorPWM@m+1)^0,w,c
 12967  0034CC  22DA               	addwfc	fsr2h,f,c
 12968  0034CE  CFDE F011          	movff	postinc2,??_setMotorPWM
 12969  0034D2  CFDD F012          	movff	postdec2,??_setMotorPWM+1
 12970  0034D6  C011  FFD9         	movff	??_setMotorPWM,fsr2l
 12971  0034DA  C012  FFDA         	movff	??_setMotorPWM+1,fsr2h
 12972  0034DE  C018  FFDF         	movff	setMotorPWM@PWMduty,indf2
 12973  0034E2                     
 12974                           ;dc_motor.c: 74:  if (m->direction){
 12975  0034E2  EE20 F001          	lfsr	2,1
 12976  0034E6  500F               	movf	setMotorPWM@m^0,w,c
 12977  0034E8  26D9               	addwf	fsr2l,f,c
 12978  0034EA  5010               	movf	(setMotorPWM@m+1)^0,w,c
 12979  0034EC  22DA               	addwfc	fsr2h,f,c
 12980  0034EE  50DF               	movf	indf2,w,c
 12981  0034F0  B4D8               	btfsc	status,2,c
 12982  0034F2  EF7D  F01A         	goto	u3801
 12983  0034F6  EF7F  F01A         	goto	u3800
 12984  0034FA                     u3801:
 12985  0034FA  EFB4  F01A         	goto	l4138
 12986  0034FE                     u3800:
 12987  0034FE                     
 12988                           ;dc_motor.c: 75:   *(m->dir_LAT) = *(m->dir_LAT) | (1<<(m->dir_pin));
 12989  0034FE  EE20 F004          	lfsr	2,4
 12990  003502  500F               	movf	setMotorPWM@m^0,w,c
 12991  003504  26D9               	addwf	fsr2l,f,c
 12992  003506  5010               	movf	(setMotorPWM@m+1)^0,w,c
 12993  003508  22DA               	addwfc	fsr2h,f,c
 12994  00350A  CFDE F011          	movff	postinc2,??_setMotorPWM
 12995  00350E  CFDD F012          	movff	postdec2,??_setMotorPWM+1
 12996  003512  C011  FFD9         	movff	??_setMotorPWM,fsr2l
 12997  003516  C012  FFDA         	movff	??_setMotorPWM+1,fsr2h
 12998  00351A  EE10 F004          	lfsr	1,4
 12999  00351E  500F               	movf	setMotorPWM@m^0,w,c
 13000  003520  26E1               	addwf	fsr1l,f,c
 13001  003522  5010               	movf	(setMotorPWM@m+1)^0,w,c
 13002  003524  22E2               	addwfc	fsr1h,f,c
 13003  003526  CFE6 F013          	movff	postinc1,??_setMotorPWM+2
 13004  00352A  CFE5 F014          	movff	postdec1,??_setMotorPWM+3
 13005  00352E  C013  FFE1         	movff	??_setMotorPWM+2,fsr1l
 13006  003532  C014  FFE2         	movff	??_setMotorPWM+3,fsr1h
 13007  003536  50E7               	movf	indf1,w,c
 13008  003538  6E15               	movwf	(??_setMotorPWM+4)^0,c
 13009  00353A  EE10 F006          	lfsr	1,6
 13010  00353E  500F               	movf	setMotorPWM@m^0,w,c
 13011  003540  26E1               	addwf	fsr1l,f,c
 13012  003542  5010               	movf	(setMotorPWM@m+1)^0,w,c
 13013  003544  22E2               	addwfc	fsr1h,f,c
 13014  003546  50E7               	movf	indf1,w,c
 13015  003548  6E16               	movwf	(??_setMotorPWM+5)^0,c
 13016  00354A  0E01               	movlw	1
 13017  00354C  6E17               	movwf	(??_setMotorPWM+6)^0,c
 13018  00354E  2A16               	incf	(??_setMotorPWM+5)^0,f,c
 13019  003550  EFAC  F01A         	goto	u3814
 13020  003554                     u3815:
 13021  003554  90D8               	bcf	status,0,c
 13022  003556  3617               	rlcf	(??_setMotorPWM+6)^0,f,c
 13023  003558                     u3814:
 13024  003558  2E16               	decfsz	(??_setMotorPWM+5)^0,f,c
 13025  00355A  EFAA  F01A         	goto	u3815
 13026  00355E  5017               	movf	(??_setMotorPWM+6)^0,w,c
 13027  003560  1015               	iorwf	(??_setMotorPWM+4)^0,w,c
 13028  003562  6EDF               	movwf	indf2,c
 13029                           
 13030                           ;dc_motor.c: 76:  } else {
 13031  003564  EFE8  F01A         	goto	l316
 13032  003568                     l4138:
 13033                           
 13034                           ;dc_motor.c: 77:   *(m->dir_LAT) = *(m->dir_LAT) & (~(1<<(m->dir_pin)));
 13035  003568  EE20 F004          	lfsr	2,4
 13036  00356C  500F               	movf	setMotorPWM@m^0,w,c
 13037  00356E  26D9               	addwf	fsr2l,f,c
 13038  003570  5010               	movf	(setMotorPWM@m+1)^0,w,c
 13039  003572  22DA               	addwfc	fsr2h,f,c
 13040  003574  CFDE F011          	movff	postinc2,??_setMotorPWM
 13041  003578  CFDD F012          	movff	postdec2,??_setMotorPWM+1
 13042  00357C  C011  FFD9         	movff	??_setMotorPWM,fsr2l
 13043  003580  C012  FFDA         	movff	??_setMotorPWM+1,fsr2h
 13044  003584  EE10 F004          	lfsr	1,4
 13045  003588  500F               	movf	setMotorPWM@m^0,w,c
 13046  00358A  26E1               	addwf	fsr1l,f,c
 13047  00358C  5010               	movf	(setMotorPWM@m+1)^0,w,c
 13048  00358E  22E2               	addwfc	fsr1h,f,c
 13049  003590  CFE6 F013          	movff	postinc1,??_setMotorPWM+2
 13050  003594  CFE5 F014          	movff	postdec1,??_setMotorPWM+3
 13051  003598  C013  FFE1         	movff	??_setMotorPWM+2,fsr1l
 13052  00359C  C014  FFE2         	movff	??_setMotorPWM+3,fsr1h
 13053  0035A0  50E7               	movf	indf1,w,c
 13054  0035A2  6E15               	movwf	(??_setMotorPWM+4)^0,c
 13055  0035A4  EE10 F006          	lfsr	1,6
 13056  0035A8  500F               	movf	setMotorPWM@m^0,w,c
 13057  0035AA  26E1               	addwf	fsr1l,f,c
 13058  0035AC  5010               	movf	(setMotorPWM@m+1)^0,w,c
 13059  0035AE  22E2               	addwfc	fsr1h,f,c
 13060  0035B0  50E7               	movf	indf1,w,c
 13061  0035B2  6E16               	movwf	(??_setMotorPWM+5)^0,c
 13062  0035B4  0E01               	movlw	1
 13063  0035B6  6E17               	movwf	(??_setMotorPWM+6)^0,c
 13064  0035B8  2A16               	incf	(??_setMotorPWM+5)^0,f,c
 13065  0035BA  EFE1  F01A         	goto	u3824
 13066  0035BE                     u3825:
 13067  0035BE  90D8               	bcf	status,0,c
 13068  0035C0  3617               	rlcf	(??_setMotorPWM+6)^0,f,c
 13069  0035C2                     u3824:
 13070  0035C2  2E16               	decfsz	(??_setMotorPWM+5)^0,f,c
 13071  0035C4  EFDF  F01A         	goto	u3825
 13072  0035C8  5017               	movf	(??_setMotorPWM+6)^0,w,c
 13073  0035CA  0AFF               	xorlw	255
 13074  0035CC  1415               	andwf	(??_setMotorPWM+4)^0,w,c
 13075  0035CE  6EDF               	movwf	indf2,c
 13076  0035D0                     l316:
 13077  0035D0  0012               	return		;funcret
 13078  0035D2                     __end_of_setMotorPWM:
 13079                           	callstack 0
 13080                           
 13081 ;; *************** function ___wmul *****************
 13082 ;; Defined at:
 13083 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\Umul16.c"
 13084 ;; Parameters:    Size  Location     Type
 13085 ;;  multiplier      2    0[COMRAM] unsigned int 
 13086 ;;  multiplicand    2    2[COMRAM] unsigned int 
 13087 ;; Auto vars:     Size  Location     Type
 13088 ;;  product         2    4[COMRAM] unsigned int 
 13089 ;; Return value:  Size  Location     Type
 13090 ;;                  2    0[COMRAM] unsigned int 
 13091 ;; Registers used:
 13092 ;;		wreg, status,2, status,0, prodl, prodh
 13093 ;; Tracked objects:
 13094 ;;		On entry : 0/0
 13095 ;;		On exit  : 0/0
 13096 ;;		Unchanged: 0/0
 13097 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13098 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13099 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13100 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13101 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13102 ;;Total ram usage:        6 bytes
 13103 ;; Hardware stack levels used: 1
 13104 ;; Hardware stack levels required when called: 1
 13105 ;; This function calls:
 13106 ;;		Nothing
 13107 ;; This function is called by:
 13108 ;;		_setMotorPWM
 13109 ;; This function uses a non-reentrant model
 13110 ;;
 13111                           
 13112                           	psect	text69
 13113  005476                     __ptext69:
 13114                           	callstack 0
 13115  005476                     ___wmul:
 13116                           	callstack 26
 13117  005476  5001               	movf	___wmul@multiplier^0,w,c
 13118  005478  0203               	mulwf	___wmul@multiplicand^0,c
 13119  00547A  CFF3 F005          	movff	prodl,___wmul@product
 13120  00547E  CFF4 F006          	movff	prodh,___wmul@product+1
 13121  005482  5001               	movf	___wmul@multiplier^0,w,c
 13122  005484  0204               	mulwf	(___wmul@multiplicand+1)^0,c
 13123  005486  50F3               	movf	243,w,c
 13124  005488  2606               	addwf	(___wmul@product+1)^0,f,c
 13125  00548A  5002               	movf	(___wmul@multiplier+1)^0,w,c
 13126  00548C  0203               	mulwf	___wmul@multiplicand^0,c
 13127  00548E  50F3               	movf	243,w,c
 13128  005490  2606               	addwf	(___wmul@product+1)^0,f,c
 13129  005492  C005  F001         	movff	___wmul@product,?___wmul
 13130  005496  C006  F002         	movff	___wmul@product+1,?___wmul+1
 13131  00549A  0012               	return		;funcret
 13132  00549C                     __end_of___wmul:
 13133                           	callstack 0
 13134                           
 13135 ;; *************** function ___awdiv *****************
 13136 ;; Defined at:
 13137 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c99\common\awdiv.c"
 13138 ;; Parameters:    Size  Location     Type
 13139 ;;  dividend        2    6[COMRAM] int 
 13140 ;;  divisor         2    8[COMRAM] int 
 13141 ;; Auto vars:     Size  Location     Type
 13142 ;;  quotient        2   12[COMRAM] int 
 13143 ;;  sign            1   11[COMRAM] unsigned char 
 13144 ;;  counter         1   10[COMRAM] unsigned char 
 13145 ;; Return value:  Size  Location     Type
 13146 ;;                  2    6[COMRAM] int 
 13147 ;; Registers used:
 13148 ;;		wreg, status,2, status,0
 13149 ;; Tracked objects:
 13150 ;;		On entry : 0/0
 13151 ;;		On exit  : 0/0
 13152 ;;		Unchanged: 0/0
 13153 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13154 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13155 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13156 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13157 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13158 ;;Total ram usage:        8 bytes
 13159 ;; Hardware stack levels used: 1
 13160 ;; Hardware stack levels required when called: 1
 13161 ;; This function calls:
 13162 ;;		Nothing
 13163 ;; This function is called by:
 13164 ;;		_setMotorPWM
 13165 ;; This function uses a non-reentrant model
 13166 ;;
 13167                           
 13168                           	psect	text70
 13169  004A42                     __ptext70:
 13170                           	callstack 0
 13171  004A42                     ___awdiv:
 13172                           	callstack 26
 13173  004A42  0E00               	movlw	0
 13174  004A44  6E0C               	movwf	___awdiv@sign^0,c
 13175  004A46  BE0A               	btfsc	(___awdiv@divisor+1)^0,7,c
 13176  004A48  EF2A  F025         	goto	u3670
 13177  004A4C  EF28  F025         	goto	u3671
 13178  004A50                     u3671:
 13179  004A50  EF30  F025         	goto	l4018
 13180  004A54                     u3670:
 13181  004A54  6C09               	negf	___awdiv@divisor^0,c
 13182  004A56  1E0A               	comf	(___awdiv@divisor+1)^0,f,c
 13183  004A58  B0D8               	btfsc	status,0,c
 13184  004A5A  2A0A               	incf	(___awdiv@divisor+1)^0,f,c
 13185  004A5C  0E01               	movlw	1
 13186  004A5E  6E0C               	movwf	___awdiv@sign^0,c
 13187  004A60                     l4018:
 13188  004A60  BE08               	btfsc	(___awdiv@dividend+1)^0,7,c
 13189  004A62  EF37  F025         	goto	u3680
 13190  004A66  EF35  F025         	goto	u3681
 13191  004A6A                     u3681:
 13192  004A6A  EF3D  F025         	goto	l4024
 13193  004A6E                     u3680:
 13194  004A6E  6C07               	negf	___awdiv@dividend^0,c
 13195  004A70  1E08               	comf	(___awdiv@dividend+1)^0,f,c
 13196  004A72  B0D8               	btfsc	status,0,c
 13197  004A74  2A08               	incf	(___awdiv@dividend+1)^0,f,c
 13198  004A76  0E01               	movlw	1
 13199  004A78  1A0C               	xorwf	___awdiv@sign^0,f,c
 13200  004A7A                     l4024:
 13201  004A7A  0E00               	movlw	0
 13202  004A7C  6E0E               	movwf	(___awdiv@quotient+1)^0,c
 13203  004A7E  0E00               	movlw	0
 13204  004A80  6E0D               	movwf	___awdiv@quotient^0,c
 13205  004A82  5009               	movf	___awdiv@divisor^0,w,c
 13206  004A84  100A               	iorwf	(___awdiv@divisor+1)^0,w,c
 13207  004A86  B4D8               	btfsc	status,2,c
 13208  004A88  EF48  F025         	goto	u3691
 13209  004A8C  EF4A  F025         	goto	u3690
 13210  004A90                     u3691:
 13211  004A90  EF72  F025         	goto	l4046
 13212  004A94                     u3690:
 13213  004A94  0E01               	movlw	1
 13214  004A96  6E0B               	movwf	___awdiv@counter^0,c
 13215  004A98  EF52  F025         	goto	l4032
 13216  004A9C                     l4030:
 13217  004A9C  90D8               	bcf	status,0,c
 13218  004A9E  3609               	rlcf	___awdiv@divisor^0,f,c
 13219  004AA0  360A               	rlcf	(___awdiv@divisor+1)^0,f,c
 13220  004AA2  2A0B               	incf	___awdiv@counter^0,f,c
 13221  004AA4                     l4032:
 13222  004AA4  AE0A               	btfss	(___awdiv@divisor+1)^0,7,c
 13223  004AA6  EF57  F025         	goto	u3701
 13224  004AAA  EF59  F025         	goto	u3700
 13225  004AAE                     u3701:
 13226  004AAE  EF4E  F025         	goto	l4030
 13227  004AB2                     u3700:
 13228  004AB2                     l4034:
 13229  004AB2  90D8               	bcf	status,0,c
 13230  004AB4  360D               	rlcf	___awdiv@quotient^0,f,c
 13231  004AB6  360E               	rlcf	(___awdiv@quotient+1)^0,f,c
 13232  004AB8  5009               	movf	___awdiv@divisor^0,w,c
 13233  004ABA  5C07               	subwf	___awdiv@dividend^0,w,c
 13234  004ABC  500A               	movf	(___awdiv@divisor+1)^0,w,c
 13235  004ABE  5808               	subwfb	(___awdiv@dividend+1)^0,w,c
 13236  004AC0  A0D8               	btfss	status,0,c
 13237  004AC2  EF65  F025         	goto	u3711
 13238  004AC6  EF67  F025         	goto	u3710
 13239  004ACA                     u3711:
 13240  004ACA  EF6C  F025         	goto	l4042
 13241  004ACE                     u3710:
 13242  004ACE  5009               	movf	___awdiv@divisor^0,w,c
 13243  004AD0  5E07               	subwf	___awdiv@dividend^0,f,c
 13244  004AD2  500A               	movf	(___awdiv@divisor+1)^0,w,c
 13245  004AD4  5A08               	subwfb	(___awdiv@dividend+1)^0,f,c
 13246  004AD6  800D               	bsf	___awdiv@quotient^0,0,c
 13247  004AD8                     l4042:
 13248  004AD8  90D8               	bcf	status,0,c
 13249  004ADA  320A               	rrcf	(___awdiv@divisor+1)^0,f,c
 13250  004ADC  3209               	rrcf	___awdiv@divisor^0,f,c
 13251  004ADE  2E0B               	decfsz	___awdiv@counter^0,f,c
 13252  004AE0  EF59  F025         	goto	l4034
 13253  004AE4                     l4046:
 13254  004AE4  500C               	movf	___awdiv@sign^0,w,c
 13255  004AE6  B4D8               	btfsc	status,2,c
 13256  004AE8  EF78  F025         	goto	u3721
 13257  004AEC  EF7A  F025         	goto	u3720
 13258  004AF0                     u3721:
 13259  004AF0  EF7E  F025         	goto	l4050
 13260  004AF4                     u3720:
 13261  004AF4  6C0D               	negf	___awdiv@quotient^0,c
 13262  004AF6  1E0E               	comf	(___awdiv@quotient+1)^0,f,c
 13263  004AF8  B0D8               	btfsc	status,0,c
 13264  004AFA  2A0E               	incf	(___awdiv@quotient+1)^0,f,c
 13265  004AFC                     l4050:
 13266  004AFC  C00D  F007         	movff	___awdiv@quotient,?___awdiv
 13267  004B00  C00E  F008         	movff	___awdiv@quotient+1,?___awdiv+1
 13268  004B04  0012               	return		;funcret
 13269  004B06                     __end_of___awdiv:
 13270                           	callstack 0
 13271                           
 13272 ;; *************** function _Timer0_init *****************
 13273 ;; Defined at:
 13274 ;;		line 7 in file "timers.c"
 13275 ;; Parameters:    Size  Location     Type
 13276 ;;		None
 13277 ;; Auto vars:     Size  Location     Type
 13278 ;;		None
 13279 ;; Return value:  Size  Location     Type
 13280 ;;                  1    wreg      void 
 13281 ;; Registers used:
 13282 ;;		wreg, status,2
 13283 ;; Tracked objects:
 13284 ;;		On entry : 0/0
 13285 ;;		On exit  : 0/0
 13286 ;;		Unchanged: 0/0
 13287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13288 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13289 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13290 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13291 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13292 ;;Total ram usage:        0 bytes
 13293 ;; Hardware stack levels used: 1
 13294 ;; Hardware stack levels required when called: 1
 13295 ;; This function calls:
 13296 ;;		Nothing
 13297 ;; This function is called by:
 13298 ;;		_main
 13299 ;; This function uses a non-reentrant model
 13300 ;;
 13301                           
 13302                           	psect	text71
 13303  00559A                     __ptext71:
 13304                           	callstack 0
 13305  00559A                     _Timer0_init:
 13306                           	callstack 29
 13307  00559A                     
 13308                           ;timers.c: 9:     T0CON1bits.T0CS=0b010;
 13309  00559A  50D6               	movf	214,w,c	;volatile
 13310  00559C  0B1F               	andlw	-225
 13311  00559E  0940               	iorlw	64
 13312  0055A0  6ED6               	movwf	214,c	;volatile
 13313  0055A2                     
 13314                           ;timers.c: 10:     T0CON1bits.T0ASYNC=1;
 13315  0055A2  88D6               	bsf	214,4,c	;volatile
 13316                           
 13317                           ;timers.c: 11:     T0CON1bits.T0CKPS=0b1000;
 13318  0055A4  50D6               	movf	214,w,c	;volatile
 13319  0055A6  0BF0               	andlw	-16
 13320  0055A8  0908               	iorlw	8
 13321  0055AA  6ED6               	movwf	214,c	;volatile
 13322  0055AC                     
 13323                           ;timers.c: 12:     T0CON0bits.T016BIT=1;
 13324  0055AC  88D5               	bsf	213,4,c	;volatile
 13325                           
 13326                           ;timers.c: 16:     TMR0H=0b00001011;
 13327  0055AE  0E0B               	movlw	11
 13328  0055B0  6ED4               	movwf	212,c	;volatile
 13329                           
 13330                           ;timers.c: 17:     TMR0L=0b11011011;
 13331  0055B2  0EDB               	movlw	219
 13332  0055B4  6ED3               	movwf	211,c	;volatile
 13333  0055B6  0012               	return		;funcret
 13334  0055B8                     __end_of_Timer0_init:
 13335                           	callstack 0
 13336                           
 13337 ;; *************** function _Interrupts_init *****************
 13338 ;; Defined at:
 13339 ;;		line 9 in file "interrupts.c"
 13340 ;; Parameters:    Size  Location     Type
 13341 ;;		None
 13342 ;; Auto vars:     Size  Location     Type
 13343 ;;		None
 13344 ;; Return value:  Size  Location     Type
 13345 ;;                  1    wreg      void 
 13346 ;; Registers used:
 13347 ;;		None
 13348 ;; Tracked objects:
 13349 ;;		On entry : 0/0
 13350 ;;		On exit  : 0/0
 13351 ;;		Unchanged: 0/0
 13352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13353 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13354 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13355 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13356 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13357 ;;Total ram usage:        0 bytes
 13358 ;; Hardware stack levels used: 1
 13359 ;; Hardware stack levels required when called: 1
 13360 ;; This function calls:
 13361 ;;		Nothing
 13362 ;; This function is called by:
 13363 ;;		_main
 13364 ;; This function uses a non-reentrant model
 13365 ;;
 13366                           
 13367                           	psect	text72
 13368  0055F2                     __ptext72:
 13369                           	callstack 0
 13370  0055F2                     _Interrupts_init:
 13371                           	callstack 29
 13372  0055F2  8EF2               	bsf	242,7,c	;volatile
 13373                           
 13374                           ;interrupts.c: 11:     INTCONbits.IPEN=1;
 13375  0055F4  8AF2               	bsf	242,5,c	;volatile
 13376                           
 13377                           ;interrupts.c: 12:     INTCONbits.GIEL=1;
 13378  0055F6  8CF2               	bsf	242,6,c	;volatile
 13379                           
 13380                           ;interrupts.c: 13:  PIE0bits.TMR0IE = 1;
 13381  0055F8  010E               	movlb	14	; () banked
 13382  0055FA  8B29               	bsf	41,5,b	;volatile
 13383  0055FC                     
 13384                           ; BSR set to: 14
 13385  0055FC  0012               	return		;funcret
 13386  0055FE                     __end_of_Interrupts_init:
 13387                           	callstack 0
 13388                           
 13389 ;; *************** function _HighISR *****************
 13390 ;; Defined at:
 13391 ;;		line 21 in file "interrupts.c"
 13392 ;; Parameters:    Size  Location     Type
 13393 ;;		None
 13394 ;; Auto vars:     Size  Location     Type
 13395 ;;		None
 13396 ;; Return value:  Size  Location     Type
 13397 ;;                  1    wreg      void 
 13398 ;; Registers used:
 13399 ;;		status,2, status,0
 13400 ;; Tracked objects:
 13401 ;;		On entry : 0/0
 13402 ;;		On exit  : 0/0
 13403 ;;		Unchanged: 0/0
 13404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13405 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13406 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13407 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13408 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13409 ;;Total ram usage:        0 bytes
 13410 ;; Hardware stack levels used: 1
 13411 ;; This function calls:
 13412 ;;		Nothing
 13413 ;; This function is called by:
 13414 ;;		Interrupt level 2
 13415 ;; This function uses a non-reentrant model
 13416 ;;
 13417                           
 13418                           	psect	intcode
 13419  000008                     __pintcode:
 13420                           	callstack 0
 13421  000008                     _HighISR:
 13422                           	callstack 19
 13423                           
 13424                           ; BSR set to: 14
 13425                           ;incstack = 0
 13426  000008  825F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 13427  00000A                     
 13428                           ;interrupts.c: 23:     if(PIR0bits.TMR0IF){
 13429  00000A  010E               	movlb	14	; () banked
 13430  00000C  AB33               	btfss	51,5,b	;volatile
 13431  00000E  EF0B  F000         	goto	i2u565_41
 13432  000012  EF0D  F000         	goto	i2u565_40
 13433  000016                     i2u565_41:
 13434  000016  EF12  F000         	goto	i2l684
 13435  00001A                     i2u565_40:
 13436  00001A                     
 13437                           ; BSR set to: 14
 13438                           ;interrupts.c: 24:         second ++;
 13439  00001A  0101               	movlb	1	; () banked
 13440  00001C  4B9A               	infsnz	_second& (0+255),f,b
 13441  00001E  2B9B               	incf	(_second+1)& (0+255),f,b
 13442  000020                     
 13443                           ; BSR set to: 1
 13444                           ;interrupts.c: 25:         PIR0bits.TMR0IF = 0;
 13445  000020  010E               	movlb	14	; () banked
 13446  000022  9B33               	bcf	51,5,b	;volatile
 13447  000024                     i2l684:
 13448                           
 13449                           ; BSR set to: 14
 13450  000024  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 13451  000026  0011               	retfie		f
 13452  000028                     __end_of_HighISR:
 13453                           	callstack 0
 13454                           
 13455                           	psect	rparam
 13456  0000                     
 13457                           	psect	temp
 13458  00005F                     btemp:
 13459                           	callstack 0
 13460  00005F                     	ds	1
 13461  0000                     int$flags	set	btemp
 13462  0000                     wtemp8	set	btemp+1
 13463  0000                     ttemp5	set	btemp+1
 13464  0000                     ttemp6	set	btemp+4
 13465  0000                     ttemp7	set	btemp+8
 13466                           
 13467                           	psect	idloc
 13468                           
 13469                           ;Config register IDLOC0 @ 0x200000
 13470                           ;	unspecified, using default values
 13471  200000                     	org	2097152
 13472  200000  0FFF               	dw	4095
 13473                           
 13474                           ;Config register IDLOC1 @ 0x200002
 13475                           ;	unspecified, using default values
 13476  200002                     	org	2097154
 13477  200002  0FFF               	dw	4095
 13478                           
 13479                           ;Config register IDLOC2 @ 0x200004
 13480                           ;	unspecified, using default values
 13481  200004                     	org	2097156
 13482  200004  0FFF               	dw	4095
 13483                           
 13484                           ;Config register IDLOC3 @ 0x200006
 13485                           ;	unspecified, using default values
 13486  200006                     	org	2097158
 13487  200006  0FFF               	dw	4095
 13488                           
 13489                           ;Config register IDLOC4 @ 0x200008
 13490                           ;	unspecified, using default values
 13491  200008                     	org	2097160
 13492  200008  0FFF               	dw	4095
 13493                           
 13494                           ;Config register IDLOC5 @ 0x20000A
 13495                           ;	unspecified, using default values
 13496  20000A                     	org	2097162
 13497  20000A  0FFF               	dw	4095
 13498                           
 13499                           ;Config register IDLOC6 @ 0x20000C
 13500                           ;	unspecified, using default values
 13501  20000C                     	org	2097164
 13502  20000C  0FFF               	dw	4095
 13503                           
 13504                           ;Config register IDLOC7 @ 0x20000E
 13505                           ;	unspecified, using default values
 13506  20000E                     	org	2097166
 13507  20000E  0FFF               	dw	4095
 13508                           
 13509                           	psect	config
 13510                           
 13511                           ;Config register CONFIG1L @ 0x300000
 13512                           ;	External Oscillator mode Selection bits
 13513                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
 13514                           ;	Power-up default value for COSC bits
 13515                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
 13516  300000                     	org	3145728
 13517  300000  AA                 	db	170
 13518                           
 13519                           ;Config register CONFIG1H @ 0x300001
 13520                           ;	unspecified, using default values
 13521                           ;	Clock Out Enable bit
 13522                           ;	CLKOUTEN = 0x1, unprogrammed default
 13523                           ;	Clock Switch Enable bit
 13524                           ;	CSWEN = 0x1, unprogrammed default
 13525                           ;	Fail-Safe Clock Monitor Enable bit
 13526                           ;	FCMEN = 0x1, unprogrammed default
 13527  300001                     	org	3145729
 13528  300001  FF                 	db	255
 13529                           
 13530                           ;Config register CONFIG2L @ 0x300002
 13531                           ;	unspecified, using default values
 13532                           ;	Master Clear Enable bit
 13533                           ;	MCLRE = 0x1, unprogrammed default
 13534                           ;	Power-up Timer Enable bit
 13535                           ;	PWRTE = 0x1, unprogrammed default
 13536                           ;	Low-power BOR enable bit
 13537                           ;	LPBOREN = 0x1, unprogrammed default
 13538                           ;	Brown-out Reset Enable bits
 13539                           ;	BOREN = 0x3, unprogrammed default
 13540  300002                     	org	3145730
 13541  300002  FF                 	db	255
 13542                           
 13543                           ;Config register CONFIG2H @ 0x300003
 13544                           ;	unspecified, using default values
 13545                           ;	Brown Out Reset Voltage selection bits
 13546                           ;	BORV = 0x3, unprogrammed default
 13547                           ;	ZCD Disable bit
 13548                           ;	ZCD = 0x1, unprogrammed default
 13549                           ;	PPSLOCK bit One-Way Set Enable bit
 13550                           ;	PPS1WAY = 0x1, unprogrammed default
 13551                           ;	Stack Full/Underflow Reset Enable bit
 13552                           ;	STVREN = 0x1, unprogrammed default
 13553                           ;	Debugger Enable bit
 13554                           ;	DEBUG = 0x1, unprogrammed default
 13555                           ;	Extended Instruction Set Enable bit
 13556                           ;	XINST = 0x1, unprogrammed default
 13557  300003                     	org	3145731
 13558  300003  FF                 	db	255
 13559                           
 13560                           ;Config register CONFIG3L @ 0x300004
 13561                           ;	WDT Period Select bits
 13562                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 13563                           ;	WDT operating mode
 13564                           ;	WDTE = OFF, WDT Disabled
 13565  300004                     	org	3145732
 13566  300004  9F                 	db	159
 13567                           
 13568                           ;Config register CONFIG3H @ 0x300005
 13569                           ;	unspecified, using default values
 13570                           ;	WDT Window Select bits
 13571                           ;	WDTCWS = 0x7, unprogrammed default
 13572                           ;	WDT input clock selector
 13573                           ;	WDTCCS = 0x7, unprogrammed default
 13574  300005                     	org	3145733
 13575  300005  FF                 	db	255
 13576                           
 13577                           ;Config register CONFIG4L @ 0x300006
 13578                           ;	unspecified, using default values
 13579                           ;	Write Protection Block 0
 13580                           ;	WRT0 = 0x1, unprogrammed default
 13581                           ;	Write Protection Block 1
 13582                           ;	WRT1 = 0x1, unprogrammed default
 13583                           ;	Write Protection Block 2
 13584                           ;	WRT2 = 0x1, unprogrammed default
 13585                           ;	Write Protection Block 3
 13586                           ;	WRT3 = 0x1, unprogrammed default
 13587                           ;	Write Protection Block 3
 13588                           ;	WRT4 = 0x1, unprogrammed default
 13589                           ;	Write Protection Block 3
 13590                           ;	WRT5 = 0x1, unprogrammed default
 13591                           ;	Write Protection Block 3
 13592                           ;	WRT6 = 0x1, unprogrammed default
 13593                           ;	Write Protection Block 3
 13594                           ;	WRT7 = 0x1, unprogrammed default
 13595  300006                     	org	3145734
 13596  300006  FF                 	db	255
 13597                           
 13598                           ;Config register CONFIG4H @ 0x300007
 13599                           ;	unspecified, using default values
 13600                           ;	Configuration Register Write Protection bit
 13601                           ;	WRTC = 0x1, unprogrammed default
 13602                           ;	Boot Block Write Protection bit
 13603                           ;	WRTB = 0x1, unprogrammed default
 13604                           ;	Data EEPROM Write Protection bit
 13605                           ;	WRTD = 0x1, unprogrammed default
 13606                           ;	Scanner Enable bit
 13607                           ;	SCANE = 0x1, unprogrammed default
 13608                           ;	Low Voltage Programming Enable bit
 13609                           ;	LVP = 0x1, unprogrammed default
 13610  300007                     	org	3145735
 13611  300007  FF                 	db	255
 13612                           
 13613                           ;Config register CONFIG5L @ 0x300008
 13614                           ;	unspecified, using default values
 13615                           ;	UserNVM Program Memory Code Protection bit
 13616                           ;	CP = 0x1, unprogrammed default
 13617                           ;	DataNVM Memory Code Protection bit
 13618                           ;	CPD = 0x1, unprogrammed default
 13619  300008                     	org	3145736
 13620  300008  FF                 	db	255
 13621                           
 13622                           ;Config register CONFIG5H @ 0x300009
 13623                           ;	unspecified, using default values
 13624  300009                     	org	3145737
 13625  300009  FF                 	db	255
 13626                           
 13627                           ;Config register CONFIG6L @ 0x30000A
 13628                           ;	unspecified, using default values
 13629                           ;	Table Read Protection Block 0
 13630                           ;	EBTR0 = 0x1, unprogrammed default
 13631                           ;	Table Read Protection Block 1
 13632                           ;	EBTR1 = 0x1, unprogrammed default
 13633                           ;	Table Read Protection Block 2
 13634                           ;	EBTR2 = 0x1, unprogrammed default
 13635                           ;	Table Read Protection Block 3
 13636                           ;	EBTR3 = 0x1, unprogrammed default
 13637                           ;	Table Read Protection Block 4
 13638                           ;	EBTR4 = 0x1, unprogrammed default
 13639                           ;	Table Read Protection Block 5
 13640                           ;	EBTR5 = 0x1, unprogrammed default
 13641                           ;	Table Read Protection Block 6
 13642                           ;	EBTR6 = 0x1, unprogrammed default
 13643                           ;	Table Read Protection Block 7
 13644                           ;	EBTR7 = 0x1, unprogrammed default
 13645  30000A                     	org	3145738
 13646  30000A  FF                 	db	255
 13647                           
 13648                           ;Config register CONFIG6H @ 0x30000B
 13649                           ;	unspecified, using default values
 13650                           ;	Boot Block Table Read Protection bit
 13651                           ;	EBTRB = 0x1, unprogrammed default
 13652  30000B                     	org	3145739
 13653  30000B  FF                 	db	255
 13654                           tosu	equ	0xFFF
 13655                           tosh	equ	0xFFE
 13656                           tosl	equ	0xFFD
 13657                           stkptr	equ	0xFFC
 13658                           pclatu	equ	0xFFB
 13659                           pclath	equ	0xFFA
 13660                           pcl	equ	0xFF9
 13661                           tblptru	equ	0xFF8
 13662                           tblptrh	equ	0xFF7
 13663                           tblptrl	equ	0xFF6
 13664                           tablat	equ	0xFF5
 13665                           prodh	equ	0xFF4
 13666                           prodl	equ	0xFF3
 13667                           indf0	equ	0xFEF
 13668                           postinc0	equ	0xFEE
 13669                           postdec0	equ	0xFED
 13670                           preinc0	equ	0xFEC
 13671                           plusw0	equ	0xFEB
 13672                           fsr0h	equ	0xFEA
 13673                           fsr0l	equ	0xFE9
 13674                           wreg	equ	0xFE8
 13675                           indf1	equ	0xFE7
 13676                           postinc1	equ	0xFE6
 13677                           postdec1	equ	0xFE5
 13678                           preinc1	equ	0xFE4
 13679                           plusw1	equ	0xFE3
 13680                           fsr1h	equ	0xFE2
 13681                           fsr1l	equ	0xFE1
 13682                           bsr	equ	0xFE0
 13683                           indf2	equ	0xFDF
 13684                           postinc2	equ	0xFDE
 13685                           postdec2	equ	0xFDD
 13686                           preinc2	equ	0xFDC
 13687                           plusw2	equ	0xFDB
 13688                           fsr2h	equ	0xFDA
 13689                           fsr2l	equ	0xFD9
 13690                           status	equ	0xFD8

Data Sizes:
    Strings     14
    Constant    4
    Data        3
    BSS         196
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     94      94
    BANK0           160    152     160
    BANK1           256     65     256
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    distance_measure@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    distance_measure@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    amb_light_measure@amb	PTR struct color_rgb size(2) Largest target is 8
		 -> main@rgb(BANK1[8]), main@amb(BANK1[8]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_3(CODE[6]), STR_2(CODE[12]), STR_1(CODE[14]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 14
		 -> STR_3(CODE[6]), STR_2(CODE[12]), STR_1(CODE[14]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_3(CODE[6]), STR_2(CODE[12]), STR_1(CODE[14]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 100
		 -> color_predict@buf(BANK0[100]), check_color_reading@buf(BANK0[100]), color_display@buf(BANK0[100]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S2790$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S2790$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    test_function@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    test_function@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    test_function@m	PTR struct color_rgb size(2) Largest target is 8
		 -> main@rgb(BANK1[8]), 

    test_function@w	PTR struct white_card size(2) Largest target is 26
		 -> main@white(BANK1[26]), 

    action@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    action@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    motorR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    motorR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    motorL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    motorL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    sendStringSerial4@string	PTR unsigned char  size(2) Largest target is 100
		 -> color_predict@buf(BANK0[100]), check_color_reading@buf(BANK0[100]), color_display@buf(BANK0[100]), 

    reverse_square@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    reverse_square@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    short_reverse@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    short_reverse@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    fullSpeedBack@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    fullSpeedBack@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    fullSpeedBack@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    fullSpeedBack@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    fullSpeedBack@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    fullSpeedBack@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    fullSpeedAhead@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    fullSpeedAhead@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    fullSpeedAhead@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    fullSpeedAhead@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    fullSpeedAhead@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    fullSpeedAhead@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    turnRight@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turnRight@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    turnRight@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    turnRight@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turnRight@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    turnRight@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    turnLeft@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turnLeft@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    turnLeft@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    turnLeft@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    turnLeft@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    turnLeft@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    stop@mR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    stop@mR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    stop@mR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    stop@mL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    stop@mL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    stop@mL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    setMotorPWM@m.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    setMotorPWM@m.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    setMotorPWM@m	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), main@motorL(BANK1[10]), 

    initDCmotors_parameter@motorR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    initDCmotors_parameter@motorR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    initDCmotors_parameter@motorR	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorR(BANK1[10]), 

    initDCmotors_parameter@motorL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    initDCmotors_parameter@motorL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    initDCmotors_parameter@motorL	PTR struct DC_motor size(2) Largest target is 12
		 -> main@motorL(BANK1[10]), 

    motorR.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    motorR.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    S375DC_motor$dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    motorL.dir_LAT	PTR unsigned char  size(2) Largest target is 1
		 -> LATG(SFR_3[1]), LATE(SFR_3[1]), 

    S375DC_motor$dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    motorL.dutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> PWM7DCH(BITBIGSFRhllll[1]), PWM6DCH(BITBIGSFRhllll[1]), 

    verify_color@w	PTR struct white_card size(2) Largest target is 26
		 -> main@white(BANK1[26]), 

    verify_color@m	PTR struct color_rgb size(2) Largest target is 8
		 -> main@rgb(BANK1[8]), 

    detect_color@w	PTR struct white_card size(2) Largest target is 26
		 -> main@white(BANK1[26]), 

    detect_color@m	PTR struct color_rgb size(2) Largest target is 8
		 -> main@rgb(BANK1[8]), 

    calibrate_white@w	PTR struct white_card size(2) Largest target is 26
		 -> main@white(BANK1[26]), 

    color_display@m	PTR struct color_rgb size(2) Largest target is 8
		 -> main@rgb(BANK1[8]), 

    color_data_collection@m	PTR struct color_rgb size(2) Largest target is 8
		 -> main@rgb(BANK1[8]), 

    read_color@m	PTR struct color_rgb size(2) Largest target is 8
		 -> main@rgb(BANK1[8]), 


Critical Paths under _main in COMRAM

    _fullSpeedAhead->_setMotorPWM
    _color_data_collection->_color_display
    _read_color->_color_read_Blue
    _read_color->_color_read_Clear
    _read_color->_color_read_Green
    _read_color->_color_read_Red
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _sendStringSerial4->_sendCharSerial4
    _calibrate_white->_color_read_Blue
    _calibrate_white->_color_read_Clear
    _calibrate_white->_color_read_Green
    _calibrate_white->_color_read_Red
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _lroundf->___fltol
    _roundf->___flmul
    ___flsub->___fladd
    ___flmul->___fldiv
    ___fltol->_roundf
    _color_read_Clear->_I2C_2_Master_Read
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    ___fldiv->___xxtofl
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle
    _action->_turnLeft
    _action->_turnRight
    _turnRight->_stop
    _turnLeft->_stop
    _short_reverse->_fullSpeedBack
    _reverse_square->_fullSpeedBack
    _fullSpeedBack->_stop
    _stop->_setMotorPWM
    _setMotorPWM->___awdiv
    ___awdiv->___wmul

Critical Paths under _HighISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_test_function
    _verify_color->_detect_color
    _test_function->_color_data_collection
    _distance_measure->_lroundf
    _detect_color->_compare
    _compare->_lroundf
    _color_data_collection->_color_predict
    _color_predict->_sprintf
    _color_display->_sprintf
    _amb_light_measure->_lroundf
    _lroundf->___fltol

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                67    67      0  246860
                                            150 BANK0      2     2      0
                                              0 BANK1     65    65      0
                  _I2C_2_Master_Init
                    _Interrupts_init
                        _Timer0_init
                             _action
                  _amb_light_measure
                    _buggylight_init
                    _calibrate_white
                   _color_click_init
                       _detect_color
                   _distance_measure
                     _fullSpeedAhead
                    _initDCmotorsPWM
             _initDCmotors_parameter
                         _initUSART4
                           _pin_init
                               _stop
                      _test_function
                       _verify_color
 ---------------------------------------------------------------------------------
 (1) _verify_color                                        11     7      4   27255
                                             48 BANK0     11     7      4
                       _detect_color
 ---------------------------------------------------------------------------------
 (1) _test_function                                       16     8      8  105254
                                            134 BANK0     16     8      8
                              _LED_C
                  _amb_light_measure
                    _calibrate_white
              _color_data_collection
                      _color_display
                      _color_predict
                       _detect_color
                   _distance_measure
                     _fullSpeedAhead
                         _read_color
                               _stop
 ---------------------------------------------------------------------------------
 (2) _fullSpeedAhead                                       5     1      4    2971
                                             25 COMRAM     5     1      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _distance_measure                                    19    13      6   18769
                                             10 BANK0     19    13      6
                              _LED_C
                            ___flmul
                           ___xxtofl
                   _color_read_Clear
                   _color_read_Green
                            _lroundf
 ---------------------------------------------------------------------------------
 (2) _detect_color                                        31    27      4   26880
                                             17 BANK0     31    27      4
                              _LED_B
                              _LED_G
                              _LED_R
                            ___fldiv
                            ___flmul
                           ___xxtofl
                            _compare
                            _lroundf
                         _read_color
                       _toggle_light
 ---------------------------------------------------------------------------------
 (3) _compare                                              7     1      6    2620
                                             10 BANK0      7     1      6
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
                            _lroundf (ARG)
 ---------------------------------------------------------------------------------
 (2) _color_data_collection                               12    10      2   16288
                                             89 COMRAM     4     2      2
                                            126 BANK0      8     8      0
                              _LED_B
                              _LED_C
                              _LED_G
                              _LED_R
                      _color_display
                      _color_predict
                         _read_color
 ---------------------------------------------------------------------------------
 (3) _read_color                                           2     0      2    1148
                                             11 COMRAM     2     0      2
                    _color_read_Blue
                   _color_read_Clear
                   _color_read_Green
                     _color_read_Red
 ---------------------------------------------------------------------------------
 (2) _color_predict                                      101   101      0    7127
                                             25 BANK0    101   101      0
                  _sendStringSerial4
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _color_display                                      102   100      2    7573
                                             87 COMRAM     2     0      2
                                             25 BANK0    100   100      0
                  _sendStringSerial4
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             27    15     12    6760
                                              0 BANK0     25    13     12
                           _vfprintf
 ---------------------------------------------------------------------------------
 (4) _vfprintf                                             8     2      6    6105
                                             79 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (5) _vfpfcnvrt                                           42    36      6    5751
                                             63 COMRAM    16    10      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (6) _dtoa                                                36    26     10    4358
                                             27 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (7) _pad                                                 11     5      6    2709
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (8) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (8) _fputs                                                7     3      4    1235
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (6) _fputc                                                9     5      4     834
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (7) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (7) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (7) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (7) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (3) _sendStringSerial4                                    2     0      2     295
                                              1 COMRAM     2     0      2
                    _sendCharSerial4
 ---------------------------------------------------------------------------------
 (4) _sendCharSerial4                                      1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _calibrate_white                                      4     2      2    1503
                                             11 COMRAM     4     2      2
                              _LED_B
                              _LED_C
                              _LED_G
                            _LED_OFF
                              _LED_R
                    _color_read_Blue
                   _color_read_Clear
                   _color_read_Green
                     _color_read_Red
                       _toggle_light
 ---------------------------------------------------------------------------------
 (4) _color_read_Red                                       7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (4) _color_read_Green                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (4) _color_read_Blue                                      7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _LED_R                                                2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _LED_OFF                                              2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _LED_G                                                2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _LED_B                                                2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _amb_light_measure                                   14    12      2   18445
                                             10 BANK0     14    12      2
                              _LED_C
                            ___fldiv
                           ___xxtofl
                   _color_read_Clear
                            _lroundf
                       _toggle_light
 ---------------------------------------------------------------------------------
 (3) _lroundf                                              4     0      4   12922
                                              6 BANK0      4     0      4
                            ___fldiv (ARG)
                            ___fltol
                           ___xxtofl (ARG)
                             _roundf
 ---------------------------------------------------------------------------------
 (4) _roundf                                              26    22      4   11531
                                             64 COMRAM    26    22      4
                            ___fladd
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    3649
                                             16 COMRAM     8     0      8
                            ___fladd
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    3326
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4     197
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    3234
                                             39 COMRAM    25    17      8
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8     486
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (4) ___fltol                                             10     6      4     305
                                             90 COMRAM     4     0      4
                                              0 BANK0      6     6      0
                             _roundf (ARG)
 ---------------------------------------------------------------------------------
 (4) _color_read_Clear                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (5) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (5) _I2C_2_Master_Read                                    3     3      0      45
                                              1 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4    1812
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (3) ___fldiv                                             25    17      8    2737
                                             14 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) _LED_C                                                2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _pin_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initDCmotors_parameter                               4     0      4     416
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2      76
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     294
                                              4 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     294
                                              2 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (5) _I2C_2_Master_Write                                   1     1      0      22
                                              1 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (5) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (5) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (6) _I2C_2_Master_Idle                                    1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _buggylight_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _action                                               5     1      4   40623
                                             49 COMRAM     5     1      4
                     _reverse_square
                      _short_reverse
                       _toggle_light
                           _turnLeft
                          _turnRight
 ---------------------------------------------------------------------------------
 (2) _turnRight                                           18    13      5    8495
                                             31 COMRAM    18    13      5
                        _setMotorPWM
                               _stop
 ---------------------------------------------------------------------------------
 (2) _turnLeft                                            18    13      5    8723
                                             31 COMRAM    18    13      5
                        _setMotorPWM
                               _stop
 ---------------------------------------------------------------------------------
 (3) _toggle_light                                         5     4      1     613
                                              0 COMRAM     5     4      1
 ---------------------------------------------------------------------------------
 (2) _short_reverse                                        6     2      4   11021
                                             37 COMRAM     6     2      4
                      _fullSpeedBack
                               _stop
 ---------------------------------------------------------------------------------
 (2) _reverse_square                                       6     2      4   10717
                                             37 COMRAM     6     2      4
                      _fullSpeedBack
                               _stop
 ---------------------------------------------------------------------------------
 (3) _fullSpeedBack                                        6     2      4    6290
                                             31 COMRAM     6     2      4
                        _setMotorPWM
                               _stop
 ---------------------------------------------------------------------------------
 (2) _stop                                                 6     2      4    3731
                                             25 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (3) _setMotorPWM                                         11     9      2    2035
                                             14 COMRAM    11     9      2
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     447
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4     496
                                              6 COMRAM     8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _Timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _HighISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_2_Master_Init
   _Interrupts_init
   _Timer0_init
   _action
     _reverse_square
       _fullSpeedBack
         _setMotorPWM
           ___awdiv
             ___wmul (ARG)
           ___wmul
         _stop
           _setMotorPWM
       _stop
     _short_reverse
       _fullSpeedBack
       _stop
     _toggle_light
     _turnLeft
       _setMotorPWM
       _stop
     _turnRight
       _setMotorPWM
       _stop
   _amb_light_measure
     _LED_C
     ___fldiv
       ___xxtofl (ARG)
     ___xxtofl
     _color_read_Clear
       _I2C_2_Master_Read
         _I2C_2_Master_Idle
       _I2C_2_Master_RepStart
         _I2C_2_Master_Idle
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
     _lroundf
       ___fldiv (ARG)
       ___fltol (ARG)
         _roundf (ARG)
           ___fladd
           ___flge
           ___flmul
             ___fldiv (ARG)
             ___xxtofl (ARG)
           ___flneg
           ___flsub
             ___fladd
       ___xxtofl (ARG)
       _roundf (ARG)
     _toggle_light
   _buggylight_init
   _calibrate_white
     _LED_B
     _LED_C
     _LED_G
     _LED_OFF
     _LED_R
     _color_read_Blue
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Clear
     _color_read_Green
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Red
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _toggle_light
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _detect_color
     _LED_B
     _LED_G
     _LED_R
     ___fldiv
     ___flmul
     ___xxtofl
     _compare
       ___fldiv (ARG)
       ___flmul (ARG)
       ___xxtofl (ARG)
       _lroundf (ARG)
     _lroundf
     _read_color
       _color_read_Blue
       _color_read_Clear
       _color_read_Green
       _color_read_Red
     _toggle_light
   _distance_measure
     _LED_C
     ___flmul
     ___xxtofl
     _color_read_Clear
     _color_read_Green
     _lroundf
   _fullSpeedAhead
     _setMotorPWM
   _initDCmotorsPWM
   _initDCmotors_parameter
   _initUSART4
   _pin_init
   _stop
   _test_function
     _LED_C
     _amb_light_measure
     _calibrate_white
     _color_data_collection
       _LED_B
       _LED_C
       _LED_G
       _LED_R
       _color_display
         _sendStringSerial4
           _sendCharSerial4
         _sprintf
           _vfprintf
             _vfpfcnvrt
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                   _strlen
               _fputc
       _color_predict
         _sendStringSerial4
         _sprintf
       _read_color
     _color_display
     _color_predict
     _detect_color
     _distance_measure
     _fullSpeedAhead
     _read_color
     _stop
   _verify_color
     _detect_color

 _HighISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      58        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     41     100       7      100.0%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     98      A0       5      100.0%
BITBIGSFRlllllh     8F      0       0      41        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5E      5E       1      100.0%
BITBIGSFRllllll     32      0       0      46        0.0%
BITBIGSFRllllll     2A      0       0      50        0.0%
BITBIGSFRllllll     26      0       0      56        0.0%
BITBIGSFRllllll     20      0       0      44        0.0%
BITBIGSFRhhhl       1B      0       0      33        0.0%
BITBIGSFRhlh        17      0       0      35        0.0%
BITBIGSFRhhl        13      0       0      34        0.0%
BITBIGSFRhlllh      11      0       0      37        0.0%
BITBIGSFRhhhh        D      0       0      32        0.0%
BITBIGSFRllllll      C      0       0      45        0.0%
BITBIGSFRllllll      B      0       0      54        0.0%
BITBIGSFRlllllh      8      0       0      42        0.0%
BITBIGSFRllllll      6      0       0      55        0.0%
BITBIGSFRllllll      6      0       0      49        0.0%
BITBIGSFRllllll      5      0       0      52        0.0%
BITBIGSFRllllll      5      0       0      48        0.0%
BITBIGSFRhllll       5      0       0      38        0.0%
BITBIGSFRllllll      3      0       0      51        0.0%
BITBIGSFRllllll      3      0       0      53        0.0%
BITBIGSFRllllll      3      0       0      47        0.0%
BITBIGSFRhllh        1      0       0      36        0.0%
BITBIGSFRllllll      1      0       0      43        0.0%
BITBIGSFRllllh       1      0       0      40        0.0%
BITBIGSFRllh         1      0       0      39        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1FE      57        0.0%
DATA                 0      0     1FE       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.35 build 20211206165544 
Symbol Table                                                                                   Sun Mar 13 14:00:52 2022

                ?_short_reverse 0026                  _color_read_Red 4F9E                    ___fldiv@aexp 0027  
                  ___fldiv@bexp 0026                    ___fldiv@sign 001F                 _color_read_Blue 503E  
                 _color_predict 53F6                              l75 55E4                              l92 557A  
                            l86 320A                              l78 31F8                              l95 4FEC  
                            l89 53C4                              l98 508C                    ___awdiv@sign 000C  
           ___wmul@multiplicand 0003                _color_read_Clear 508E                _color_read_Green 4FEE  
             ??_Interrupts_init 0001                             l101 503C                             l110 54DA  
                           l104 50DC                             l113 54BA                             l122 54FA  
                           l107 4EF4                             l212 544C                             l116 553A  
                           l221 561A                             l133 3786                             l230 55F0  
                           l142 5422                             l215 544E                             l119 551A  
                           l224 5606                             l136 4E34                             l233 51A8  
                           l145 33FC                             l218 5474                             l306 51EA  
                           l331 41D4                             l227 5610                             l316 35D0  
                           l324 4C80                             l172 52E6                             l309 47EA  
                           l181 450C                             l173 52E8                             l342 4280  
                           l422 5598                             l335 421C                             l431 55BA  
                           l360 4100                             l440 53F4                             l184 4978  
                           l353 409C                             l169 1972                             l185 497A  
                           l177 4D30                             l434 55CE                             l339 4256  
                           l357 40D6                             l349 4054                             l382 522C  
                           l550 3EBC                             l368 4DC4                             l385 526E  
                           l642 555A                             l379 4BC4                             l636 2F5E  
                           l902 3E00                             l915 43E4                             l678 55FC  
                           l695 55B6                             l788 549A               verify_color@color 009A  
              ?_calibrate_white 000C        __end_of_distance_measure 497C                             _abs 5270  
                           _pad 497C                             prod 000FF3                             wreg 000FE8  
                  ___flmul@aexp 0039                    ___flmul@bexp 003A                    ___flmul@sign 0034  
                  ___flmul@temp 003F                    ___flmul@prod 003B                 __end_of_LED_OFF 54DC  
                  ___fltol@exp1 0065                            l1019 4B04                            ?_abs 0013  
                          l1053 46D2                            l1062 535A                            l1058 4718  
                          l1402 1EF8                            l1411 2166                            l1412 2154  
                          l1316 1B62                            l1085 4614                            l1333 1C7C  
                          l1325 1E32                            l1317 1B50                            l1501 4A04  
                          l1406 225C                            l1342 1D4C                            l1318 1B16  
                          l1343 1D3A                            l1503 4A40                            l1511 2A52  
                          l4000 1E0C                            l1409 20EE                            l4010 4A42  
                          l1370 29A4                            l1450 3A2A                            l4002 1E12  
                          l1443 3992                            l1419 221E                            l4020 4A6E  
                          l4012 4A46                            l4100 55E8                            l1372 2804  
                          l4004 1E20                            l1381 284A                            l1509 2A4A  
                          l4030 4A9C                            l4022 4A76                            l4014 4A54  
                          l4102 55EC                            l1446 3AEE                            l4110 5602  
                          l4006 1E22                            l1358 5122                            l1550 52AE  
                          l1542 4E8E                            l1383 28C2                            l1375 27C8  
                          l1543 4E96                            l1471 4F9C                            l4040 4AD6  
                          l4032 4AA4                            l4024 4A7A                            l4016 4A5C  
                          l4104 5608                            l1384 28B0                            l4120 51A4  
                          l4112 516A                            l4200 1FA2                            l1464 5322  
                          l1536 393A                            l5000 18BA                            l1457 3A86  
                          l1529 2C8E                            l4050 4AFC                            l4042 4AD8  
                          l4034 4AB2                            l4026 4A82                            l4018 4A60  
                          l4130 347C                            l4106 560C                            l4122 51A6  
                          l4114 516E                            l4210 1FF4                            l4202 1FAE  
                          l1562 48B4                            l1570 5166                            l5010 1950  
                          l5002 18E8                            l1547 52A6                            l4044 4ADE  
                          l4036 4AB8                            l4028 4A94                            l4132 34C2  
                          l5100 4236                            l4116 5176                            l4108 55FE  
                          l4220 2072                            l4212 2004                            l4204 1FBE  
                          l5020 4400                            l4140 55BA                            l4060 37CC  
                          l5012 1964                            l5004 18EE                            l1581 260A  
                          l1573 561E                            l4038 4ACE                            l4046 4AE4  
                          l4134 34E2                            l4126 33FE                            l5102 4242  
                          l5110 3FA6                            l4118 517E                            l4230 20EC  
                          l4222 20A8                            l4214 2020                            l4206 1FCA  
                          l4150 1E50                            l4302 5324                            l5030 444A  
                          l5022 440A                            l4142 55CA                            l4062 37D0  
                          l4054 3788                            l4310 4E36                            l5014 196E  
                          l5006 191C                            l4048 4AF4                            l4136 34FE  
                          l4128 341A                            l5104 4252                            l5120 3FFC  
                          l5112 3FBE                            l4400 4588                            l4240 214C  
                          l4232 20FE                            l4224 20B6                            l4216 202C  
                          l4208 1FDA                            l4160 1E96                            l4152 1E60  
                          l4144 1E34                            l4304 533A                            l5040 44FA  
                          l5032 4456                            l5024 440E                            l4320 4FE4  
                          l3600 47FE                            l4072 3898                            l4064 37F4  
                          l4056 37AC                            l4312 4E3E                            l5008 194A  
                          l5200 4CD4                            l4138 3568                            l5106 426C  
                          l5130 4040                            l5122 400A                            l5114 3FCA  
                          l4410 45B4                            l4250 21BA                            l4234 210C  
                          l4226 20D4                            l4218 2048                            l4170 1EC2  
                          l4162 1E9C                            l4154 1E70                            l4146 1E40  
                          l4306 534A                            l5042 4504                            l5034 446E  
                          l5026 4426                            l5018 43E6                            l4330 4FEE  
                          l3602 4810                            l1594 5390                            l1498 49C2  
                          l4090 3928                            l4074 38BC                            l4082 38EA  
                          l4066 3818                            l4058 37BA                            l4314 4E4C  
                          l5050 48D0                            l5202 4CF2                            l4500 31A8  
                          l5140 4098                            l5132 4050                            l5124 4016  
                          l5116 3FD6                            l5108 3F82                            l5220 51D2  
                          l4420 45E4                            l4260 2222                            l4244 2176  
                          l4252 21BE                            l4236 2110                            l4228 20DE  
                          l4180 1F18                            l4172 1ED2                            l4164 1EA2  
                          l4156 1E80                            l4148 1E4E                            l5036 447A  
                          l5028 4432                            l4324 503E                            l4332 5034  
                          l3700 438E                            l3604 481A                            l3612 5124  
                          l3620 535C                            l4084 38F8                            l4076 38CA  
                          l4068 3860                            l4316 4E72                            l5060 495C  
                          l5052 48EA                            l5300 3BE6                            l5204 4D10  
                          l5212 4D2E                            l4502 31C0                            l5070 413E  
                          l5142 40B6                            l5134 406A                            l5126 4022  
                          l5118 3FE4                            l5222 51E6                            l5230 4736  
                          l4422 45F4                            l4406 45A0                            l4270 224C  
                          l4262 2232                            l4254 21D8                            l4246 2182  
                          l4238 211E                            l4190 1F58                            l4174 1EE2  
                          l4166 1EB0                            l4158 1E86                            l4430 227E  
                          l5038 4492                            l4510 54C2                            l4326 5084  
                          l4318 4F9E                            l3630 3C7A                            l3702 4394  
                          l3606 4838                            l3614 5130                            l3622 5368  
                          l3710 497C                            l4078 38DE                            l4350 4F8A  
                          l4342 4F4C                            l5062 4974                            l5054 48F6  
                          l5046 48B6                            l5150 4D32                            l5310 3C40  
                          l5206 4D28                            l4504 31F6                            l5080 418A  
                          l5072 414A                            l5144 40C2                            l5136 407C  
                          l5128 4034                            l5320 2CB2                            l3800 545E  
                          l4096 5612                            l5224 51E8                            l5216 51AA  
                          l5232 474A                            l5240 557C                            l4600 26BE  
                          l4336 508E                            l4424 4604                            l4416 45C8  
                          l4408 45AA                            l4280 4616                            l4264 2240  
                          l4256 21EC                            l4248 2190                            l4192 1F64  
                          l4184 1F2C                            l4176 1EE8                            l4168 1EB2  
                          l4440 2356                            l4432 22C6                            l4520 54FC  
                          l4512 549C                            l4360 53DC                            l3640 3CBE  
                          l3632 3C7E                            l3704 43A4                            l3608 486E  
                          l3616 5142                            l3624 536C                            l3720 49CE  
                          l3712 498C                            l4088 3904                            l4344 4F5E  
                          l5056 48FA                            l5048 48CC                            l5152 4D56  
                          l5160 4D94                            l5312 3C54                            l5304 3BFC  
                          l3802 5476                            l4370 4C06                            l4362 4BC6  
                          l5170 51EC                            l5090 41D0                            l5082 4196  
                          l5074 4156                            l5066 4102                            l5146 40D2  
                          l5138 4088                            l5330 2D38                            l5322 2CDE  
                          l4098 5616                            l5218 51BA                            l5234 475E  
                          l5226 471A                            l5250 5596                            l5242 5586  
                          l4610 26FE                            l4602 26C0                            l4338 50D4  
                          l4418 45D4                            l4290 46A0                            l4282 4644  
                          l4266 2242                            l4258 2206                            l4194 1F7C  
                          l4186 1F38                            l4178 1F08                            l3810 1980  
                          l4274 50DE                            l4450 24FA                            l4434 22DA  
                          l4522 5502                            l4514 54A2                            l4354 53C6  
                          l3650 3D14                            l3642 3CDE                            l3634 3C8C  
                          l3706 43C4                            l3618 5146                            l3626 5384  
                          l3722 49E2                            l3714 49A0                            l4346 4F66  
                          l4530 4E28                            l4506 4E98                            l5058 4940  
                          l5162 4DAC                            l5154 4D6E                            l5314 3C6E  
                          l5306 3C10                            l5260 55AC                            l3804 5492  
                          l4380 4C50                            l4372 4C12                            l4364 4BCA  
                          l5180 525A                            l5172 5200                            l5092 41EA  
                          l5084 41A2                            l5068 4126                            l5076 4164  
                          l5148 40EC                            l5340 2DAC                            l5332 2D52  
                          l5324 2CF8                            l5316 2C92                            l5236 476E  
                          l5228 4726                            l5244 5588                            l4516 551C  
                          l4620 272E                            l4612 2706                            l4604 26C8  
                          l4292 46B2                            l4284 4654                            l4268 2248  
                          l4196 1F88                            l4188 1F42                            l3900 1B34  
                          l3820 19C0                            l3812 198E                            l4276 50EE  
                          l4452 2566                            l4444 238E                            l4436 2316  
                          l4428 225E                            l4524 54DC                            l4508 54BC  
                          l4356 53CA                            l3660 3D96                            l3652 3D28  
                          l3644 3CE2                            l3636 3CAC                            l3732 5270  
                          l3724 49E6                            l3716 49AE                            l3740 29EE  
                          l4348 4F6E                            l4532 53FA                            l4540 52B0  
                          l5156 4D7A                            l5308 3C30                            l5262 55F2  
                          l4382 4C68                            l4374 4C1E                            l4366 4BE2  
                          l4550 4B06                            l5174 5218                            l4470 2FB6  
                          l4462 2F62                            l5094 41FC                            l5086 41B4  
                          l5078 417C                            l5350 2E08                            l5342 2DAE  
                          l5334 2D54                            l5326 2CFA                            l5318 2CA2  
                          l5182 55D0                            l5190 53B0                            l5238 4782  
                          l5246 5592                            l4518 5522                            l4630 276C  
                          l4622 272E                            l4614 270A                            l4606 26D8  
                          l4710 395C                            l4390 453A                            l4294 46C0  
                          l4286 4682                            l4198 1F94                            l3910 1B80  
                          l3902 1B42                            l3830 19F2                            l3822 19C2  
                          l3814 1990                            l4454 259A                            l4446 245C  
                          l4438 233A                            l4526 54E2                            l4358 53D8  
                          l3670 3DE0                            l3662 3D98                            l3654 3D36  
                          l3646 3CEE                            l3638 3CB0                            l3734 528A  
                          l3726 4A14                            l3718 49BA                            l3750 2A5A  
                          l3742 2A0E                            l4534 5416                            l4542 52B6  
                          l5158 4D86                            l5270 3B18                            ?_pad 0011  
                          l5256 559A                            l4376 4C2A                            l4368 4BEE  
                          l4552 4B2A                            l4560 4B68                            l5176 522E  
                          l4480 3070                            l4472 2FEE                            l4464 2F6E  
                          l5096 4208                            l5088 41C0                            l5360 2E74  
                          l5352 2E1A                            l5344 2DC0                            l5336 2D66  
                          l5328 2D0C                            l5192 53BA                            l5184 5392  
                          l5248 5594                            l5264 553C                            l4640 27B8  
                          l4632 277C                            l4608 26EE                            l4720 39D4  
                          l4712 39A2                            l4392 4564                            l4384 450E  
                          l4296 4710                            l4288 4692                            l3920 1BC0  
                          l3904 1B44                            l3840 1A1A                            l3832 19F4  
                          l3816 19A0                            l3824 19CA                            l3808 1974  
                          l4456 25D6                            l4448 24C8                            l4536 52EA  
                          l3664 3DAA                            l3656 3D48                            l3648 3D0C  
                          l3680 42B4                            l3728 4A28                            l3760 2A94  
                          l3752 2A6C                            l3744 2A1E                            l3736 29A6  
                          l4528 4DC6                            l4800 368E                            l4544 52CC  
                          l5280 3B62                            l5272 3B24                            l5440 3E1A  
                          l5432 3E02                            l5258 55A2                            l4378 4C38  
                          l4562 4B80                            l4554 4B42                            l5178 5242  
                          l4490 310C                            l4482 3082                            l4474 3000  
                          l4466 2F7E                            l5098 4218                            l5370 2EFA  
                          l5362 2EA0                            l5354 2E46                            l5346 2DEC  
                          l5338 2D92                            l5186 5396                            l4650 2802  
                          l4642 27C6                            l4634 278C                            l4626 2742  
                          l4618 271E                            l4570 2618                            l4730 3A5C  
                          l4722 39E0                            l4714 39B8                            l4706 393E  
                          l4394 4566                            l4386 4526                            l4298 4716  
                          l3930 1BEA                            l3922 1BCC                            l3914 1B94  
                          l3906 1B4E                            l3850 1A54                            l3842 1A2A  
                          l3834 19FA                            l3826 19DA                            l3818 19B0  
                          l4458 25FA                            l3658 3D76                            l3666 3DB0  
                          l3690 430C                            l3682 42B8                            l3674 4282  
                          l3762 2A9A                            l3770 2B8C                            l3754 2A7C  
                          l3746 2A22                            l3738 29C6                            l4802 3694  
                          l4546 52E2                            l5290 3BAC                            l5282 3B6E  
                          l5274 3B38                            l5266 3AF4                            l5194 4C86  
                          l5450 3E3E                            l5442 3E1E                            l5434 3E06  
                          l4564 4B98                            l4556 4B4E                            l4492 312A  
                          l4484 30A6                            l4476 3020                            l4468 2F9E  
                          l5380 2F4A                            l5372 2F14                            l5364 2EBA  
                          l5356 2E60                            l5348 2E06                            l5188 53A0  
                          l4660 2848                            l4652 2814                            l4644 27D2  
                          l4636 2794                            l4628 275C                            l4580 2658  
                          l4572 2626                            l4740 3A9A                            l4732 3A68  
                          l4724 3A12                            l4708 394E                            l4396 4576  
                          l3940 1C5C                            l3924 1BD0                            l3916 1BA4  
                          l3908 1B70                            l3932 1BF0                            l3860 1A80  
                          l3852 1A66                            l3844 1A3A                            l3836 1A08  
                          l3828 19E0                            l4900 33F2                            l3668 3DC0  
                          l3692 4320                            l3684 42C6                            l3676 4286  
                          l3772 2BA6                            l3780 2C08                            l3764 2B1C  
                          l3756 2A82                            l3748 2A3E                            l4820 36F4  
                          l4812 36C0                            l4804 36B0                            l5284 3B7A  
                          l5276 3B4C                            l5268 3B06                            l5196 4C9E  
                          l5460 3E66                            l5452 3E44                            l5444 3E22  
                          l5436 3E0A                            l4566 4BB0                            l4558 4B5A  
                          l4494 3142                            l4486 30BE                            l4478 3038  
                          l5374 2F16                            l5366 2EBC                            l5358 2E62  
                          l4670 28A8                            l4654 282A                            l4662 285A  
                          l4646 27F0                            l4638 27A4                            l4590 267E  
                          l4582 265A                            l4574 2628                            l4742 3ABE  
                          l4734 3A76                            l4726 3A14                            l4718 39CC  
                          l4398 457A                            l3950 1CB6                            l3934 1C16  
                          l3942 1C6C                            l3926 1BDE                            l3918 1BB2  
                          l3870 1A94                            l3862 1A84                            l3854 1A74  
                          l3846 1A3C                            l3838 1A0A                            l3694 432E  
                          l3686 42E6                            l3678 4294                            l3598 47EC  
                          l3790 2C4E                            l3782 2C1A                            l3774 2BC4  
                          l3766 2B22                            l3758 2A8A                            l4822 36FA  
                          l4814 36C4                            l4806 36B6                            l4910 0F06  
                          l4902 0E14                            l5294 3BC4                            l5286 3B8E  
                          l5278 3B5E                            l5198 4CBC                            l5470 3EC6  
                          l5462 3E68                            l5454 3E44                            l5446 3E26  
                          l5438 3E16                            l4496 3178                            l4488 30FA  
                          l5376 2F28                            l5368 2ECE                            l4760 5438  
                          l4752 5424                            l4680 2916                            l4664 2868  
                          l4656 2830                            l4648 27F2                            l4592 268C  
                          l4576 2638                            l4584 2662                            l4568 260C  
                          l4744 3ACE                            l4736 3A94                            l4728 3A20  
                          l3960 1CE6                            l3952 1CC0                            l3944 1C92  
                          l3936 1C4A                            l3928 1BE0                            l3880 1AA8  
                          l3872 1A98                            l3864 1A88                            l3856 1A78  
                          l3848 1A44                            l3696 435C                            l3688 4304  
                          l3792 2C56                            l3784 2C2A                            l3776 2BDE  
                          l3768 2B28                            l4840 375A                            l4832 3726  
                          l4824 3716                            l4816 36D0                            l4920 10A2  
                          l4912 0F22                            l4904 0E5A                            l5296 3BD0  
                          l5288 3BA6                            l5480 3F3C                            l5472 3EF2  
                          l5464 3E74                            l5456 3E50                            l5448 3E2A  
                          l4498 318A                            l5378 2F32                            l4762 543A  
                          l4754 542E                            l4690 2980                            l4674 28D2  
                          l4682 291A                            l4666 286C                            l4658 283A  
                          l4594 268E                            l4586 2672                            l4578 2648  
                          l4746 3ADC                            l4738 3A96                            l3970 1D0E  
                          l3962 1CEA                            l3954 1CCE                            l3946 1CA2  
                          l3938 1C4C                            l3890 1AE2                            l3882 1AAC  
                          l3874 1A9C                            l3866 1A8C                            l3858 1A7C  
                          l4850 3210                            l3698 437C                            l3786 2C30  
                          l3794 2C66                            l3778 2BF8                            l4842 3760  
                          l4834 372A                            l4826 371C                            l4818 36DC  
                          l4930 1188                            l4922 10BA                            l4914 0FCA  
                          l4906 0E5E                            l5298 3BD6                            l5482 3F5A  
                          l5474 3EF4                            l5466 3E88                            l4756 5434  
                          l4764 555E                            l4692 2984                            l4684 2934  
                          l4676 28DE                            l4668 287A                            l4596 269E  
                          l4588 2678                            l4748 3ADE                            l3980 1D68  
                          l3972 1D1C                            l3964 1CFA                            l3956 1CD0  
                          l3892 1AFE                            l3884 1AB0                            l3876 1AA0  
                          l3868 1A90                            l4860 3262                            l4852 321A  
                          l3788 2C42                            l4844 377C                            l4836 3736  
                          l4780 3628                            l4772 35F4                            l4940 1320  
                          l4932 1230                            l4924 10BE                            l4916 0FE6  
                          l4908 0E6A                            l5484 3F70                            l5476 3F08  
                          l5468 3EAA                            l4758 5436                            l3798 544E  
                          l4694 2992                            l4686 294A                            l4678 28EC  
                          l4598 26AE                            l3990 1DD2                            l3982 1D76  
                          l3974 1D32                            l3958 1CDE                            l3966 1CFC  
                          l3894 1B0E                            l3878 1AA4                            l3886 1AB4  
                          l4870 32C6                            l4862 327A                            l4854 3232  
                          l4846 3782                            l4838 3742                            l4782 362E  
                          l4774 35F8                            l4766 35D2                            l4950 1496  
                          l4942 1324                            l4934 124C                            l4926 10CA  
                          l4918 108E                            l5486 3F76                            l5478 3F22  
                          l4696 2998                            l4688 2964                            l3992 1DF2  
                          l3984 1DB0                            l3968 1D0A                            l3896 1B24  
                          l3888 1AB8                            l4880 332A                            l4872 32DE  
                          l4864 3292                            l4856 3236                            l4848 320C  
                          l4792 365A                            l4784 364A                            l4776 3604  
                          l4960 15BC                            l4952 14B2                            l4944 1330  
                          l4936 12F4                            l4928 116C                            l4698 299A  
                          l3994 1DF6                            l3978 1D5C                            l3986 1DB2  
                          l3898 1B30                            l4890 338E                            l4882 3342  
                          l4874 32F6                            l4866 3296                            l4858 324A  
                          l4794 365E                            l4786 3650                            l4778 3610  
                          l4970 178C                            l4962 168A                            l4954 155A  
                          l4946 13D2                            l4938 1308                            l3996 1E04  
                          l3988 1DC2                            l4892 33A6                            l4884 335A  
                          l4876 32FA                            l4868 32AE                            l4796 366A  
                          l4980 17EE                            l4972 17A4                            l4964 1694  
                          l4956 1576                            l4948 13EE                            l3998 1E0A  
                          l4894 33BE                            l4886 335E                            l4878 3312  
                          l4798 3676                            l4990 182E                            l4982 1806  
                          l4974 17AC                            l4966 169E                            l4958 158E  
                          l4896 33D6                            l4888 3376                            l4992 185A  
                          l4976 17B6                            l4968 16CC                            l4898 33DA  
                          l4986 180E                            l4978 17C0                            l4988 1826  
                          l4996 1860                            l4998 188C                            STR_1 0E05  
                          STR_3 0E0D                            u3000 4294                            u3001 4290  
                          u3010 42C6                            u3011 42C2                            u3020 4304  
                          u3100 528A                            u3021 4300                            u3101 5286  
                          u3030 432E                            u3110 29D6                            u3031 432A  
                          u3111 29D0                            u4000 21D8                            u3040 435C  
                          u3200 2BDE                            u3120 29D8                    _BAUD4CONbits 000EE9  
                          u4001 21D4                            u3041 4358                            u3201 2BDA  
                          _LATE 000F7D                            u4010 2206                            u3050 43A4  
                          u3210 2BF8                            u3130 29EE                            u4011 2202  
                          u3051 43A0                            u3211 2BF4                            u3131 29EA  
                          _LATG 000F7F                            u4020 2240                            u3300 19B0  
                          u4100 53F4                            u3060 498C                            u3220 2C08  
                          u3140 2A1E                            u4021 223C                            u3301 19AC  
                          u4101 53F0                            u3061 4988                            u3221 2C04  
                          u3141 2A1A                            u4110 4BE2                            u4030 4644  
                          u3310 19F2                            u3070 49AE                            u3230 2C1A  
                          u3150 2A3E                            u4111 4BDE                            u4031 4640  
                          u3311 19EE                            u3071 49AA                            u3231 2C16  
                          u3151 2A3A                            u4120 4C06                            u4200 45E4  
                          u4040 4682                            u3400 1B24                            u3320 1A08  
                          u3080 4A04                            u3240 2C2A                            u3160 2A6C  
                          u5000 16CC                            u4121 4C02                            u4201 45E0  
                          u4041 467E                            u3401 1B20                            u3321 1A04  
                          u3081 4A00                            u3241 2C26                            u3161 2A68  
                          u5001 16C8                            u4130 4C50                            u4210 45F4  
                          u4050 46A0                            u3410 1B42                            u3330 1A1A  
                          u3090 4A14                            u3250 2C42                            u3170 2A7C  
                          u5010 178C                            _T2PR 000FBC                            u4131 4C4C  
                          u4211 45F0                            u4051 469C                            u3411 1B3E  
                          u3331 1A16                            u3091 4A10                            u3251 2C3E  
                          u3171 2A78                            u5011 1788                            u4140 4C68  
                          u3260 545E                            u4060 46C0                            u3500 1C92  
                          u3420 1B62                            u3340 1A2A                            u4300 25D6  
                          u4220 229E                            u3180 2BA6                            u5100 191C  
                          u5020 17A4                            u4141 4C64                            u3261 545A  
                          u4061 46BC                            u3501 1C8E                            u3421 1B5E  
                          u3341 1A26                            u4301 25D2                            u3181 2BA2  
                          u5101 1918                            u5021 17A0                            u4310 2F7E  
                          u3270 5474                            u4150 4526                            u4070 4710  
                          u3510 1CA2                            u3430 1B70                            u3350 1A66  
                          u4230 22C6                            u3190 2BC4                            u5110 194A  
                          u5030 17EE                            u4311 2F7A                            u3271 5470  
                          u4151 4522                            u4071 470C                            u3511 1C9E  
                          u3431 1B6C                            u3351 1A62                            u4231 22C2  
                          u3191 2BC0                            u5111 1946                            u5031 17EA  
                          u4320 2F90                            u5200 3FFC                            u4160 455A  
                          u4080 533A                            u3600 1D76                            u3520 1CCE  
                          u3440 1B80                            u3360 1A74                            u3280 198E  
                          u4240 22FA                            u5120 1964                            u5040 1806  
                          u4321 2F88                            u5201 3FF8                            u4081 5336  
                          u3601 1D72                            u3521 1CCA                            u3441 1B7C  
                          u3361 1A70                            u3281 198A                            u4225 2294  
                          u5121 1960                            u5041 1802                            u4410 3082  
                          u5210 4034                            u4170 4588                            u3610 1DB0  
                          u3530 1CDE                            u3450 1BB2                            u3370 1AE2  
                          u3290 19A0                            u4250 2316                            u4090 4E8E  
                          u5050 1826                            u5130 4974                            u4411 307E  
                          u5211 4030                            u4171 4584                            u3611 1DAC  
                          u3531 1CDA                            u3451 1BAE                            u3371 1ADE  
                          u3291 199C                            u4251 2312                            u4091 4E8A  
                          u5051 1822                            u5131 4970                            u3700 4AB2  
                          u4420 3094                            u4340 2FC8                            u5140 417C  
                          u5220 406A                            u4180 459C                            u3620 1DC2  
                          u3540 1CFA                            u3460 1BC0                            u3380 1AFA  
                          u4260 2356                            u2900 486E                            u5060 185A  
                          u3701 4AAE                            u4421 308C                            u4341 2FC0  
                          u5141 4178                            u5221 4066                            u4181 4598  
                          u4165 4550                            u3621 1DBE                            u3541 1CF6  
                          u3461 1BBC                            u3381 1AF4                            u4261 2352  
                          u4245 22F0                            u2901 486A                            u5061 1856  
                          u3710 4ACE                            u4510 318A                            u5150 41B4  
                          u5230 407C                            u4190 45C4                            u3630 1DD2  
                          u3550 1D0A                            u3470 1BDE                            u3390 1AFC  
                          u4270 245C                            u2910 5166                            u5070 188C  
                          u3711 4ACA                            u4511 3186                            u5151 41B0  
                          u5231 4078                            u6007 53A6                            u4191 45C0  
                          u3631 1DCE                            u3551 1D06                            u3471 1BDA  
                          u4271 2458                            u2911 5162                            u5071 1888  
                          u3720 4AF4                            u3800 34FE                            u4600 4B98  
                          u4520 319C                            u4440 30D0                            u4408 304C  
                          u4360 3000                            u5160 41EA                            u5240 40B2  
                          u5400 2CA2                            u3640 1DF2                            u3560 1D1C  
                          u3480 1C16                            u4280 24FA                            u2920 5384  
                          u5080 18BA                            u5320 3B18                            u3721 4AF0  
                          u3801 34FA                            u4601 4B94                            u4521 3194  
                          u4441 30C8                            u4361 2FFC                            u5161 41E6  
                          u5241 40AE                            u6017 3FDC                            u5401 2C9E  
                          u3641 1DEE                            u3561 1D18                            u3481 1C12  
                          u4281 24F6                            u2921 5380                            u5081 18B6  
                          u5321 3B14                            u4370 3012                            u4338 2F92  
                          u5170 41FC                            u5250 40EC                            u5410 2CB2  
                          u4610 2626                            u3650 1E04                            u3570 1D32  
                          u3490 1C5C                            u4290 25BA                            u2930 3C8C  
                          u3730 37AC                            u5090 18E8                            u5330 3B38  
            verify_color@color2 0098                            u4371 300A                            u6107 2FE0  
                          u5171 41F8                            u5251 40E8                            u6027 4046  
                          u5411 2CAE                            u4611 2622                            u3651 1E00  
                          u3571 1D2E                            u3491 1C58                            u2931 3C88  
                          u3731 37A8                            u5091 18E4                            u5331 3B34  
            verify_color@color3 0096                            u4540 31D2                            u4508 3156  
                          u4460 310C                            u5180 4232                            u5420 2D0C  
                          u4700 27C6                            u4620 2638                            u3900 1F08  
                          u3660 1E20                            u3580 1D48                            u2940 3CBE  
                          u3740 37F4                            u5260 4DAC                            u5340 3B5E  
                          u4541 31CA                            u4461 3108                            u6117 302A  
                          u5181 422E                            u6037 408E                            u5421 2D08  
                          u4701 27C2                            u4621 2634                            u3901 1F04  
                          u3661 1E1C                            u3581 1D44                            u2941 3CBA  
                          u3741 37F0                            u5261 4DA8                            u5341 3B5A  
                          u3670 4A54                            u3814 3558                            u4470 311E  
                          u4438 3096                            u4390 304A                            u4358 2FCA  
                          u5190 426C                            u5430 2D66                            u4710 27F0  
                          u4630 2648                            u3910 1F18                            u3590 1D5C  
                          u3830 55CA                            u2870 47FE                            u3750 3818  
                          u5270 4DC4                            u5350 3B8E                            u3671 4A50  
                          u3815 3554                            u6207 524C                            u4471 3116  
                          u6127 3062                            u4391 3042                            u5191 4268  
                          u6047 40C8                            u5431 2D62                            u4711 27EC  
                          u4631 2644                            u3911 1F14                            u3591 1D58  
                          u4295 25B0                            u3831 55C6                            u2951 3CE8  
                          u2871 47FA                            u3751 3814                            u5271 4DC0  
                          u5351 3B8A                            u3680 4A6E                            u3824 35C2  
                          u4560 320A                            u5440 2DC0                            u4800 28EC  
                          u4720 2814                            u4640 268C                            u3920 2092  
                          u3840 1E4E                            u2960 3D0C                            u2880 4810  
                          u3760 38BC                            u5360 3BC0                            u5280 4D10  
                          u3681 4A6A                            u3825 35BE                            u6217 4B60  
                          u4561 3206                            u6137 30B0                            u6057 415C  
                          u5441 2DBC                            u4801 28E8                            u4721 2810  
                          u4641 2688                            u3841 1E4A                            u2961 3D08  
                          u2881 480C                            u3761 38B8                            u5361 3BBC  
                          u5281 4D0C                            u3690 4A94                            u4538 319E  
                          u4490 3154                            u4458 30D2                            u5450 2E1A  
                          u4810 2934                            u4730 282A                            u4650 269E  
                          u3770 5192                            u3930 20EC                            u3850 1E60  
                          u2970 3D36                            u2890 4838                            u4570 52CC  
                          u5370 3BE6                            u5290 4D28                            u3691 4A90  
                          u6227 4BA2                            u4491 314C                            u6147 30EC  
                          u6067 41C6                            u5451 2E16                            u4811 2930  
                          u4731 2826                            u4651 269A                            u3771 518A  
                          u3931 20E8                            u3851 1E5C                            u2971 3D32  
                          u2891 4834                            u4571 52C8                            u5371 3BE2  
                          u5291 4D24                            u4388 3014                            u5460 2E74  
                          u4820 2964                            u4740 2848                            u4660 26AE  
                          u4900 3A86                            u3940 210C                            u3860 1E70  
                          u2980 3D76                            u4580 52E2                            u5380 3BF8  
                          u5540 3EBC                            u6237 4C30                            u6157 3134  
                          u6077 420E                            u5461 2E70                            u4821 2960  
                          u4741 2844                            u4661 26AA                            u4901 3A82  
                          u3941 2108                            u3925 2088                            u3861 1E6C  
                          u2981 3D72                            u4581 52DE                            u5381 3BF4  
                          u5541 3EB8                            u3790 341A                            u4590 4B80  
                          u4558 31D4                            u5470 2ECE                            u4830 2992  
                          u4750 2868                            u4670 26EE                            u4910 3A94  
                          u3950 211E                            u3870 1EB0                            u2990 3DC0  
                          u5390 3C40                            u3791 3416                            u6247 4C72  
                          u4591 4B7C                            u6167 316A                            u6087 4248  
                          u5471 2ECA                            u4831 298E                            u4751 2864  
                          u4671 26EA                            u4911 3A90                            u3951 211A  
                          u3871 1EAC                            u2991 3DBC                            u5391 3C3C  
                          u4488 3120                            u5480 2F28                            u4760 287A  
                          u4680 272E                            u4920 3ACE                            u4840 394E  
                          u3960 214C                            u3880 1EC2                            u6177 31B2  
                          u6097 2FA8                            u5481 2F24                            u4761 2876  
                          u4681 272A                            u4921 3ACA                            u4841 394A  
                          u3961 2148                            u3881 1EBE                            u4770 28A8  
                          u4690 27A4                            u4930 3ADC                            u4850 395C  
                          u3970 2162                            u3890 1ED2                            u6187 31E8  
                          u4771 28A4                            u4691 27A0                            u4931 3AD8  
                          u4851 3958                            u3971 215E                            u3891 1ECE  
                          u4780 28BE                            u4860 39B8                            u3788 5194  
                          u3980 2176                            u4940 364A                            u6197 520A  
                          u4781 28BA                            u4861 39B4                            u3981 2172  
                          u4941 3646                            u4790 28D2                            u4870 3A0E  
                          u3990 2190                            u4950 36B0                            u4791 28CE  
                          u4871 3A0A                            u3991 218C                            u4951 36AC  
                          u5807 1582                            u5727 3F14                            u4880 3A58  
                          u4960 3716                            u4881 3A54                            u4961 3712  
                          u5817 361A                            u5737 4C92                            u4890 3A76  
                          u4970 377C                            u4891 3A72                            u5907 33E4  
                          u4971 3778                            u5827 3680                            u5747 4CC8  
                          u4980 15BC                            u5917 54AC                            u5837 36E6  
                          u4981 15B8                            u5757 3C60                            u4990 168A  
                          u5927 54CC                            u5847 374C                            u4991 1686  
                          u5767 4D8C                            u5937 54EC                            u5857 3224  
                          u5777 48DC                            u5947 550C                            u5867 3284  
                          u5787 10AE                            u5957 441A                            u5877 32E8  
                          u5797 1314                            u5967 443E                            u5887 334C  
                          u5977 4462                            u5897 33C8                            u5987 4486  
                          u5997 552C                            abs@a 0013                            _dbuf 019E  
                          _main 3E02                            _dtoa 29A6                            _prec 0194  
                          _nout 0190                            pad@i 0018                            pad@p 0015  
                          fsr1h 000FE2                            fsr2h 000FDA                            indf1 000FE7  
                          indf2 000FDF                            fsr1l 000FE1                            pad@w 001A  
                          fsr2l 000FD9                            btemp 005F                            _stop 4BC6  
                          prodh 000FF4                            prodl 000FF3                            start 0028  
                ?_color_display 0058                 ___fldiv@new_exp 0020          __end_of_color_read_Red 4FEE  
               __end_of_HighISR 0028                    ___param_bank 000000                  ?_color_predict 0001  
                         ??_abs 0015                           ??_pad 0017                   ___fltol@sign1 0064  
               __end_of___aodiv 3E02       amb_light_measure@CC_amb_1 0072       amb_light_measure@CC_amb_2 0074  
     amb_light_measure@CC_amb_3 0076                 __end_of___fladd 1E34                           ?_main 0001  
                         ?_dtoa 001C                 __end_of___aomod 43E6                 __end_of___fldiv 29A6  
               __end_of___awdiv 4B06                 __end_of___flneg 535C                 __end_of___flmul 225E  
               __end_of___flsub 5124                 __end_of___fltol 4616                           ?_stop 001A  
               ___awdiv@divisor 0009                           _LED_B 54FC                           _LED_C 551C  
                         _LED_G 54DC                           _LED_R 549C                           i2l684 0024  
               ___awdiv@counter 000B                    vfpfcnvrt@fmt 0042                           _TMR0H 000FD4  
                         _TMR0L 000FD3         __end_of_sendCharSerial4 55D0      __end_of_I2C_2_Master_Start 561C  
       ??_color_data_collection 005C      __end_of_I2C_2_Master_Write 55F2                 __end_of_compare 52EA  
                  compare@lower 006A                           _flags 00F8                           _color 019C  
                  compare@upper 006E                           _fputc 47EC                           _fputs 5124  
                         pad@fp 0011                           _width 0192                           _putch 561E  
                         _toint 0E01                           dtoa@d 001E                           dtoa@i 003E  
                         dtoa@n 0036                           dtoa@p 0030                           dtoa@s 0034  
                         dtoa@w 0032                 ??_test_function 00EE            amb_light_measure@amb 006A  
                         tablat 000FF5                 __end_of_lroundf 5324                           ttemp5 0060  
                         ttemp6 0063                           ttemp7 0067                           status 000FD8  
                         wtemp8 0060                 __end_of_sprintf 4F9E                color_display@buf 0079  
       __end_of_color_read_Blue 508E           _I2C_2_Master_RepStart 55FE                 ??_short_reverse 002A  
               ?_color_read_Red 0005                 __initialization 4EF6                    __end_of_main 3F82  
                  __end_of_dtoa 2C90                   main@amb_light 01C6            __end_of_detect_color 1974  
                  __end_of_stop 4C82          color_data_collection@i 00DE          color_data_collection@j 00E0  
        color_data_collection@k 00E2          color_data_collection@m 005A          color_data_collection@x 00E4  
                        ??_main 00F6                          ??_dtoa 0026                          ??_stop 001E  
                 __activetblptr 000001                          ?_LED_B 0001                          ?_LED_C 0001  
                        ?_LED_G 0001                          ?_LED_R 0001                 _buggylight_init 55D0  
                     ??_LED_OFF 0001          _initDCmotors_parameter 471A                    ?_setMotorPWM 000F  
                        ?_fputc 0001                          ?_fputs 000A                ___awdiv@dividend 0007  
                        ?_putch 0001                          _RC0PPS 000E62                          _RC4REG 000EE3  
                        _RE2PPS 000E74                          _RD5PPS 000E6F                          _RC7PPS 000E69  
                        _RD6PPS 000E70                          i2l5560 001A                          i2l5562 0020  
                        i2l5558 000A              turnLeft@angle_left 0024                       ??_HighISR 0001  
      __end_of_color_click_init 53C6                          _RX4PPS 000E15                          _TX4REG 000EE4  
               ??_color_display 005A                __end_of___xxtofl 3AF0                   ??_Timer0_init 0001  
               ??_color_predict 0058                    vfprintf@cfmt 0056                          ___flge 4616  
                     ??___aodiv 0011                       ??___fladd 0009                       ??___aomod 0011  
                        ___wmul 5476                       ??___fldiv 0017                       ??___awdiv 000B  
                     ??___flneg 0005                       ??___flmul 0030                          _action 2C90  
                     ??___flsub 0019                       ??___fltol 0060                   compare@result 0070  
                        _memory 013C                          clear_0 4F26                ___awdiv@quotient 000D  
                        _second 019A                          _motorL 0182                          _motorR 0178  
                        isa$std 000001                          pad@buf 0013                          _roundf 225E  
                        dtoa@fp 001C                          _strlen 535C                       ??_compare 005F  
                 toggle_light@i 0004                __end_of_pin_init 555C                          fputc@c 0001  
       toggle_light@lightnumber 0005                          fputs@c 000E                          fputs@i 000F  
                        fputs@s 000A                  test_function@m 00E6                  test_function@w 00E8  
                  __mediumconst 0000                          tblptrh 000FF7                          tblptrl 000FF6  
                        tblptru 000FF8                ?_sendCharSerial4 0001                       ??_lroundf 005F  
                   read_color@m 000C                          putch@c 0001                __end_of_vfprintf 4E98  
                        stop@mL 001A                          stop@mR 001C               ??_initDCmotorsPWM 0003  
                     ??_sprintf 0058                __end_of_turnLeft 4282                      ___flge@ff1 0001  
                    ___flge@ff2 0005                    ___xxtofl@arg 000B                    ___xxtofl@exp 000A  
                  ___xxtofl@val 0001                calibrate_white@w 000C                 fullSpeedBack@mL 0020  
               fullSpeedBack@mR 0022                      __accesstop 0060         __end_of__initialization 4F3A  
                 verify_color@m 0090                   verify_color@w 0092        __end_of_color_read_Clear 50DE  
                    ___flneg@f1 0001        __end_of_color_read_Green 503E          ?_I2C_2_Master_RepStart 0001  
            color_predict@color 00DD    initDCmotors_parameter@motorL 0001    initDCmotors_parameter@motorR 0003  
                 ___rparam_used 000001                      ___fltol@f1 005B                   __end_of_LED_B 551C  
                 __end_of_LED_C 553C                   __end_of_LED_G 54FC                   __end_of_LED_R 54BC  
              ?_color_read_Blue 0005                 _Interrupts_init 55F2                  __pcstackCOMRAM 0001  
                 _fullSpeedBack 4B06                    __pidataBANK0 561C                    __pidataBANK1 5620  
       __end_of_buggylight_init 55E6            turnRight@angle_right 0024           _distance_measure$3241 0074  
                 __end_of_fputc 48B6               detect_color@color 008B                   __end_of_fputs 5168  
                 __end_of_putch 5620                   __end_of_toint 0E05             __end_of_Timer0_init 55B8  
                       ??_LED_B 0001                         ??_LED_C 0001                         ??_LED_G 0001  
                       ??_LED_R 0001               ?_distance_measure 006A              ??_distance_measure 0070  
                       ??_fputc 0005                         ??_fputs 000E                         ??_putch 0001  
                    __pbssBANK0 00F8                      __pbssBANK1 0100                color_predict@buf 0079  
     distance_measure@amb_light 006E               _color_writetoaddr 555C                    _T2CLKCONbits 000FBF  
                ?_fullSpeedBack 0020                         ?___flge 0001              ?_color_writetoaddr 0003  
                       ?___wmul 0001                         ?_action 0032                         ?_roundf 0041  
           ??_color_writetoaddr 0004                         ?_strlen 0001                         _LED_OFF 54BC  
                     ?___xxtofl 0001                         _SP4BRGH 000EE6                         _SP4BRGL 000EE5  
                       _PWM6DCH 000FA3                         _PWM7DCH 000FA0                         _SSP2ADD 000ED6  
                       _SSP2BUF 000ED5    amb_light_measure@upper_bound 006E                    _detect_color 0E14  
 __end_of_color_data_collection 3788         __end_of_Interrupts_init 55FE          color_writetoaddr@value 0003  
              ??_color_read_Red 0007                         _HighISR 0008       __end_of_color_writetoaddr 557C  
            _I2C_2_Master_Start 5612                      _initUSART4 557C              _I2C_2_Master_Write 55E6  
                     ?_pin_init 0001                         __Hparam 0000           test_function@complete 00F2  
                       __Lparam 0000               color_read_Red@tmp 000A                     _Timer0_init 559A  
       sendStringSerial4@string 0002                         ___aodiv 3C7A                         ___fladd 1974  
                       ___aomod 4282                         ___fldiv 260C                         ___awdiv 4A42  
                       ___flneg 5324                         ___flmul 1E34                         ___flsub 50DE  
                       ___fltol 450E             ?_I2C_2_Master_Start 0001                ?_buggylight_init 0001  
           ?_I2C_2_Master_Write 0001                       ?_vfprintf 0050                    __psmallconst 0E00  
     distance_measure@threshold 007A                         __pcinit 4EF6                         __ramtop 0E00  
                    _read_color 4E98                       ?_turnLeft 0020                         __ptext0 3E02  
                       __ptext1 4C82                         __ptext2 3AF0                         __ptext3 4D32  
                       __ptext4 48B6                         __ptext5 0E14                         __ptext6 52B0  
                       __ptext7 35D2                         __ptext8 4E98                         __ptext9 53F6  
                       _compare 52B0         ?_initDCmotors_parameter 0001                       _T2CONbits 000FBD  
                    ??___xxtofl 0005                       _T2HLTbits 000FBE                         _lroundf 52EA  
                 _RxBufWriteCnt 00FD          distance_measure@CC_amb 0078                         main@amb 01BE  
        distance_measure@CG_amb 0072                         _sprintf 4F4C                         main@rgb 01C9  
          ??_I2C_2_Master_Start 0002            ??_I2C_2_Master_Write 0002            end_of_initialization 4F3A  
            setMotorPWM@PWMduty 0018                 _CALIBRATION_135 00FF                 _CALIBRATION_180 01FF  
                       fputc@fp 0003           __end_of_test_function 3C7A                         fputs@fp 000C  
             ?_color_click_init 0001                 test_function@mL 00EA                 test_function@mR 00EC  
               ??_fullSpeedBack 0024                      ??_pin_init 0001              ??_color_click_init 0005  
             __end_of_vfpfcnvrt 393C           __end_of_short_reverse 522E                         postdec1 000FE5  
                       postdec2 000FDD                         postinc0 000FEE                         postinc1 000FE6  
                       postinc2 000FDE                         roundf@e 004D                         roundf@u 0053  
                       roundf@x 0041                         roundf@y 0057                      ??_vfprintf 0056  
                       strlen@a 0003                         strlen@s 0001                 _initDCmotorsPWM 51AA  
                    ??_turnLeft 0025  __end_of_initDCmotors_parameter 47EC                       _PORTFbits 000F8E  
      test_function@stop_signal 00F4               __end_of_turnRight 4102                     ___fladd@grs 0010  
                 ___xxtofl@sign 0009                       _TRISAbits 000F81                       _TRISCbits 000F83  
                     _TRISDbits 000F84                       _TRISEbits 000F85                       _TRISFbits 000F86  
                     _TRISGbits 000F87                       _TRISHbits 000F88                     ___fldiv@grs 0022  
                   ___fldiv@rem 001B                fullSpeedAhead@mL 001A                fullSpeedAhead@mR 001C  
      color_writetoaddr@address 0004         ??_I2C_2_Master_RepStart 0002                      _start_move 0198  
              ?_Interrupts_init 0001                     ___flmul@grs 0035                   ?_toggle_light 0001  
             ?_color_read_Clear 0005                    _EUSART4RXbuf 0164                    _EUSART4TXbuf 0100  
             ?_color_read_Green 0005                     ?_initUSART4 0001       sendCharSerial4@charToSend 0001  
                 ?_verify_color 0090           __end_of_color_display 4E36                      main@motorL 01EB  
                    main@motorR 01F5     amb_light_measure@CC_amb_ave 0070               ??_calibrate_white 000E  
            ??_color_read_Clear 0007                  color_display@m 0058              ??_color_read_Green 0007  
                detect_color@BB 0087                  detect_color@BG 0089                  detect_color@GB 007B  
                detect_color@GG 0081                  detect_color@BR 0085                  detect_color@GR 007F  
                detect_color@RB 0079                  detect_color@RG 007D                  detect_color@RR 0083  
         __end_of_color_predict 5424                  __end_of___flge 471A                  _fullSpeedAhead 4D32  
                   vfpfcnvrt@ap 0044                     vfpfcnvrt@fp 0040                     vfpfcnvrt@ll 0048  
                __end_of___wmul 549C                  __end_of_action 2F60                     ?_read_color 000C  
                __end_of_roundf 260C              turnRight@delay_135 0026              turnRight@delay_180 0028  
                __end_of_strlen 5392             color_read_Clear@tmp 000A             start_initialization 4EF6  
                   __end_of_abs 52B0                     __end_of_pad 4A42                   _TxBufWriteCnt 00FB  
             turnLeft@delay_135 0026               turnLeft@delay_180 0028                  ??_toggle_light 0002  
                ??_verify_color 0094             color_read_Green@tmp 000A                  _reverse_square 522E  
       __end_of_initDCmotorsPWM 51EC                     vfprintf@fmt 0052          __end_of_fullSpeedAhead 4DC6  
                      ??___flge 0009                        ??___wmul 0005                        ??_action 0036  
               short_reverse@mL 0026                 short_reverse@mR 0028                     __pdataBANK0 00FE  
                   __pdataBANK1 01FF                        ??_roundf 0045                        ??_strlen 0003  
                     ___fladd@a 0005                       ___fladd@b 0001                        ?_LED_OFF 0001  
                     ___fldiv@a 0013                       ___fldiv@b 000F                       ___flmul@a 002C  
                     ___flmul@b 0028                       ___flsub@a 0015                       ___flsub@b 0011  
                 __pcstackBANK0 0060                   __pcstackBANK1 01BE                ___aodiv@dividend 0001  
                      ?_HighISR 0001          __end_of_reverse_square 5270                       _dtoa$2872 002E  
                  ?_Timer0_init 0001                 ?_fullSpeedAhead 001A                       __pintcode 0008  
                      ?___aodiv 0001                        ?___fladd 0001                        ?___aomod 0001  
                      ?___fldiv 000F                        ?___awdiv 0007                ___aodiv@quotient 0013  
                      ?___flneg 0001                        ?___flmul 0028                        ?___flsub 0011  
                      ?___fltol 005B              test_function@color 00F3                 turnRight@i_1357 002C  
               turnRight@i_1358 002E                  turnLeft@i_1332 002C                  turnLeft@i_1333 002E  
          I2C_2_Master_Read@ack 0003            I2C_2_Master_Read@tmp 0004                        ?_compare 006A  
                   __smallconst 0E00               _I2C_2_Master_Idle 544E               _I2C_2_Master_Init 5424  
             _I2C_2_Master_Read 5168               _I2C_2_Master_Stop 5608          toggle_light@toggletime 0001  
                  _RxBufReadCnt 00FC                        ?_lroundf 0066              ?_I2C_2_Master_Idle 0001  
            ?_I2C_2_Master_Init 0001              ?_I2C_2_Master_Read 0001                   ??_setMotorPWM 0011  
            ?_I2C_2_Master_Stop 0001        initDCmotorsPWM@PWMperiod 0001                        ?_sprintf 0060  
             _sendStringSerial4 53C6           _color_data_collection 35D2             ??_I2C_2_Master_Idle 0001  
           ??_I2C_2_Master_Init 0001             ??_I2C_2_Master_Read 0002                  ___wmul@product 0005  
                      _LATAbits 000F79             ??_I2C_2_Master_Stop 0002                        _LATCbits 000F7B  
                      _LATDbits 000F7C                        _LATEbits 000F7D                        _LATFbits 000F7E  
                      _LATGbits 000F7F                        _LATHbits 000F80                 ?_reverse_square 0026  
                      _PIE0bits 000E29              ?_sendStringSerial4 0002                        _PIE4bits 000E2D  
                   turnRight@mL 0020                     turnRight@mR 0022                        _PIR0bits 000E33  
                      _PIR4bits 000E37                        i2u565_40 001A                        i2u565_41 0016  
              ?_initDCmotorsPWM 0001               ??_sendCharSerial4 0001                        _SSP2CON2 000EDA  
           ??_sendStringSerial4 0004                        _SSP2STAT 000ED8                     _array_index 019D  
                     _vfpfcnvrt 3788       __end_of_I2C_2_Master_Idle 5476            __end_of_toggle_light 320C  
     __end_of_I2C_2_Master_Init 544E       __end_of_I2C_2_Master_Read 51AA               ___wmul@multiplier 0001  
     __end_of_I2C_2_Master_Stop 5612                    setMotorPWM@m 000F     I2C_2_Master_Write@data_byte 0002  
          __end_of_verify_color 4D32          test_function@amb_light 00F0                       main@white 01D1  
             ??_color_read_Blue 0007                       _stop_move 0196                   detect_color@m 0071  
                 detect_color@w 0073                    _TxBufReadCnt 00FA                       _turnRight 3F82  
               _calibrate_white 320C       __end_of_sendStringSerial4 53F6               _amb_light_measure 43E6  
 __end_of_I2C_2_Master_RepStart 5608              color_read_Blue@tmp 000A             __end_of_setMotorPWM 35D2  
                    roundf@F527 018C                _distance_measure 48B6                    ??_initUSART4 0001  
            ?_amb_light_measure 006A                        __Hrparam 0000                      vfprintf@ap 0054  
                      __Lrparam 0000                      vfprintf@fp 0050           __end_of_fullSpeedBack 4BC6  
                  __Lsmallconst 0E00            compare@value2compare 006C             ??_amb_light_measure 006C  
                    ?_vfpfcnvrt 0040                    ??_read_color 000E                 ___aodiv@divisor 0009  
               ___aodiv@counter 0011                      _ANSELDbits 000EA7                      _ANSELFbits 000EB4  
                   action@color 0036                      sprintf@fmt 0062                        ___xxtofl 393C  
                    _T0CON0bits 000FD5                      _T0CON1bits 000FD6              __end_of_initUSART4 559A  
                    ?_turnRight 0020                        __ptext10 4DC6                        __ptext11 4F4C  
                      __ptext20 5270                        __ptext12 4E36                        __ptext21 4282  
                      __ptext13 3788                        __ptext30 54BC                        __ptext22 3C7A  
                      __ptext14 29A6                        __ptext31 54DC                        __ptext23 53C6  
                      __ptext15 497C                        __ptext40 4616                        __ptext32 54FC  
                      __ptext24 55B8                        __ptext16 535C                        __ptext41 450E  
                      __ptext33 43E6                        __ptext25 320C                        __ptext17 5124  
                      __ptext50 471A                        __ptext42 508E                        __ptext34 52EA  
                      __ptext26 4F9E                        __ptext18 47EC                        __ptext51 51AA  
                      __ptext43 55FE                        __ptext35 225E                        __ptext27 4FEE  
                      __ptext19 561E                        __ptext60 2C90                        __ptext52 5392  
                      __ptext44 5168                        __ptext36 50DE                        __ptext28 503E  
                      __ptext61 3F82                        __ptext53 555C                        __ptext45 393C  
                      __ptext37 1974                        __ptext29 549C                        __ptext70 4A42  
                      __ptext62 4102                        __ptext54 55E6                        __ptext46 260C  
                      __ptext38 5324                        __ptext71 559A                        __ptext63 2F60  
                      __ptext55 5608                        __ptext47 551C                        __ptext39 1E34  
                      __ptext72 55F2                        __ptext64 51EC                        __ptext56 5612  
                      __ptext48 553C                        __ptext65 522E                        __ptext57 544E  
                      __ptext49 557C                        __ptext66 4B06                        __ptext58 5424  
                      __ptext67 4BC6                        __ptext59 55D0                        __ptext68 33FE  
                      __ptext69 5476       __end_of_amb_light_measure 450E                    _SSP2CON1bits 000ED9  
                  _SSP2CON2bits 000EDA          ?_color_data_collection 005A                  turnRight@delay 0030  
        test_function@test_code 00F5                   turnLeft@delay 0030                        action@mL 0032  
                      action@mR 0034                      turnLeft@mL 0020                      turnLeft@mR 0022  
            __end_of_read_color 4EF6                        _pin_init 553C                      turnRight@i 002A  
                      isa$xinst 000000            distance_measure@stop 007C                      _RC4STAbits 000EE7  
                      int$flags 005F                     _SENSITIVITY 00FE                        _vfprintf 4E36  
                      _turnLeft 4102                ___aomod@dividend 0001         __end_of_calibrate_white 33FE  
                    _INTCONbits 000FF2                     _setMotorPWM 33FE                   ?_detect_color 0071  
                   _PWM6CONbits 000FA4                     _PWM7CONbits 000FA1                        intlevel2 0000  
                     sprintf@ap 006C               ??_buggylight_init 0001                ??_fullSpeedAhead 001E  
                 _test_function 3AF0                       turnLeft@i 002A                reverse_square@mL 0026  
              reverse_square@mR 0028                        lroundf@x 0066        ??_initDCmotors_parameter 0005  
                 _short_reverse 51EC                 ___aomod@divisor 0009                     ??_vfpfcnvrt 0046  
               ___aomod@counter 0011                _color_click_init 5392                        sprintf@f 006E  
                      sprintf@s 0060               _detect_color$3240 008C                      _SSP2DATPPS 000E1D  
                    _SSP2CLKPPS 000E1C              distance_measure@mL 006A              distance_measure@mR 006C  
                ??_detect_color 0075                     ??_turnRight 0025                   ___fladd@signs 000D  
              ??_reverse_square 002A                      _TX4STAbits 000EE8                    ___aodiv@sign 0012  
               _sendCharSerial4 55B8                    ___fladd@aexp 000E                    ___fladd@bexp 000F  
                ?_test_function 00E6                    _toggle_light 2F60                    ___aomod@sign 0012  
                  _verify_color 4C82                     _roundf$3242 004F                     _roundf$3243 0049  
                 _color_display 4DC6                 main@stop_signal 01C8  
